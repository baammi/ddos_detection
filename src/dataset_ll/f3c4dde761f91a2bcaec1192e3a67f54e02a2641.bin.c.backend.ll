source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805600c.2 = global i32 0
@global_var_8056024.3 = local_unnamed_addr global i32* @global_var_805600c.2
@global_var_8054974.5 = constant [4 x i8] c"GET\00"
@global_var_805494d.6 = constant i32 1210056751
@global_var_805497f.7 = constant i32 540737568
@global_var_805494f.8 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_8054967.9 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_8054986.10 = constant [3 x i8] c"\0D\0A\00"
@global_var_8054978.11 = constant [9 x i8] c"Cookie: \00"
@global_var_8054981.12 = constant [3 x i8] c"; \00"
@global_var_8054984.13 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_8054989.14 = constant i32 1952972859
@global_var_805498b.15 = constant [5 x i8] c"http\00"
@global_var_805499a.16 = constant i32 -1623588825
@global_var_8054990.17 = constant [5 x i8] c"url=\00"
@global_var_8054995.18 = constant [5 x i8] c"POST\00"
@global_var_8055064.19 = constant i32 1481506877
@global_var_80560d4.20 = local_unnamed_addr global i32 0
@global_var_80560e0.21 = local_unnamed_addr global i32 0
@global_var_80560d8.22 = local_unnamed_addr global i32 0
@global_var_80560dc.23 = local_unnamed_addr global i32 0
@global_var_8056130.24 = local_unnamed_addr global i32 0
@global_var_805610a.25 = local_unnamed_addr global i32 0
@global_var_8056110.26 = local_unnamed_addr global i32 0
@global_var_8056100.27 = global i32 0
@global_var_8056118.29 = local_unnamed_addr global i32 0
@global_var_8056124.30 = local_unnamed_addr global i32 0
@global_var_8056114.31 = global i32 0
@global_var_8056178.32 = local_unnamed_addr global i32 0
@global_var_8056104.33 = local_unnamed_addr global i32 0
@global_var_805615c.34 = local_unnamed_addr global i32 0
@global_var_805610c.35 = local_unnamed_addr global i32 0
@global_var_8056174.36 = local_unnamed_addr global i32 0
@global_var_80560e4.38 = local_unnamed_addr global i32 0
@global_var_8056128.39 = local_unnamed_addr global i32 0
@global_var_8056168.40 = local_unnamed_addr global i32 0
@global_var_80561a0.41 = global i32 0
@global_var_8056154.43 = global i32 0
@global_var_8056380.44 = global i32 0
@global_var_805603c.45 = global i32 0
@global_var_805642c.47 = global i32 0
@global_var_8056430.48 = local_unnamed_addr global i32 0
@global_var_8056434.49 = global i32 0
@global_var_8056440.50 = local_unnamed_addr global i32 0
@global_var_8056734.51 = global i32 0
@global_var_805675c.52 = local_unnamed_addr global i32 0
@global_var_805674c.53 = local_unnamed_addr global i32 0
@global_var_8056750.54 = local_unnamed_addr global i32 0
@global_var_8056754.55 = local_unnamed_addr global i32 0
@global_var_8056758.56 = local_unnamed_addr global i32 0
@global_var_8056764.57 = local_unnamed_addr global i32 0
@global_var_8056770.58 = local_unnamed_addr global i32 0
@global_var_8056768.59 = local_unnamed_addr global i32 0
@global_var_8056774.60 = local_unnamed_addr global i32 0
@global_var_8056748.61 = local_unnamed_addr global i32 0
@global_var_8056744.63 = local_unnamed_addr global i32 0
@global_var_805676c.64 = local_unnamed_addr global i32 0
@global_var_805643c.65 = local_unnamed_addr global i32 0
@global_var_8056054.66 = global i32 0
@global_var_805606c.68 = global i32 0
@global_var_8056138.69 = local_unnamed_addr global i32 0
@global_var_8056000.71 = global i32 -1
@global_var_8053edd.72 = constant i32 -294069
@global_var_8056148.73 = local_unnamed_addr global i32 0
@global_var_805614c.74 = local_unnamed_addr global i32 0
@global_var_805563c.75 = constant [10 x i8] c"/dev/null\00"
@global_var_8056144.77 = local_unnamed_addr global i32 0
@global_var_805613c.78 = local_unnamed_addr global i32 0
@global_var_8056140.79 = local_unnamed_addr global i32 0
@global_var_8055760.81 = constant i32 33554944
@global_var_80540c3.82 = constant i32 1928542531
@global_var_80540e7.83 = constant i32 1928542531
@global_var_8056158.84 = local_unnamed_addr global i32 0
@global_var_8056088.85 = local_unnamed_addr global i32* @global_var_8055760.81
@global_var_8056778.86 = local_unnamed_addr global i32 0
@global_var_805677c.87 = local_unnamed_addr global i32 0
@global_var_80560a0.1 = local_unnamed_addr global i8 0
@global_var_8056116.28 = local_unnamed_addr global i16 0
@global_var_805612c.37 = local_unnamed_addr global i16 0
@global_var_8056038.42 = local_unnamed_addr global i16 -4641
@global_var_8056400.46 = global i8 0
@global_var_8056760.62 = local_unnamed_addr global i8 0
@global_var_8056134.67 = local_unnamed_addr global i8 0
@global_var_8056150.76 = local_unnamed_addr global i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8048094() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @function_80480b0(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 57207
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @function_8048110()
  %v0_80480a8 = call i32 @function_8054900()
  ret i32 %v0_80480a8
}

define i32 @function_80480b0(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @function_80480c0() local_unnamed_addr {
dec_label_pc_80480c0:
  %v0_80480c6 = load i8, i8* @global_var_80560a0.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge

dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge: ; preds = %dec_label_pc_80480c0
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %dec_label_pc_80480c0
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8056024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e44 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e44, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8056024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8056024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_80560a0.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8056024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_80560a0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @function_8048110() local_unnamed_addr {
dec_label_pc_8048110:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 134568288)
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* inttoptr (i32 134570000 to i32*), align 16
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @entry_point(i8 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20900 = alloca i8*, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-20825 = alloca i32, align 4
  %stack_var_-20972 = alloca i32, align 4
  %stack_var_-20956 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @ebp, align 4
  %v3_8048166 = sext i8 %arg1 to i32
  store i32 %v3_8048166, i32* @esi, align 4
  %v5_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v5_8048166, i32* %ecx.global-to-local, align 4
  %v2_8048169 = icmp ult i32* %stack_var_4, inttoptr (i32 16 to i32*)
  store i1 %v2_8048169, i1* %zf.global-to-local, align 1
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v11_8048180 = call i32 @function_8053f79(i32 134538000, i32 %v3_8048166, i32* nonnull %stack_var_4, i32 -108, i32 134564134, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  %v0_8048191 = load i32, i32* @edi, align 4
  %v0_8048192 = load i32, i32* @esi, align 4
  %v0_8048193 = load i32, i32* @ebx, align 4
  %v15_8048194 = ptrtoint i32* %stack_var_-20956 to i32
  store i32 134564134, i32* @ebx, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 148, i32* %eax.global-to-local, align 4
  store i32 %v3_8048166, i32* @ebp, align 4
  store i32 148, i32* @esi, align 4
  store i32 148, i32* %stack_var_-20972, align 4
  %v5_80481bd = call i32 @function_804a0a0(i8 -108, i32 134564134, i32 20, i32 0)
  store i32 %v5_80481bd, i32* %eax.global-to-local, align 4
  %v0_80481cd = load i32, i32* @ebx, align 4
  %v0_80481ce = load i32, i32* @esi, align 4
  %v5_80481cf = trunc i32 %v0_80481ce to i8
  %v6_80481cf = call i32 @function_804a0a0(i8 %v5_80481cf, i32 %v0_80481cd, i32 19, i32 ptrtoint ([4 x i8]* @global_var_8054974.5 to i32))
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  %tmp136 = bitcast i8** %stack_var_-20900 to i32*
  store i32 %v6_80481cf, i32* %tmp136, align 4
  %v0_80481d8 = load i32, i32* @esp, align 4
  %v6_80481d8 = icmp eq i32 %v0_80481d8, -32
  store i1 %v6_80481d8, i1* %zf.global-to-local, align 1
  %v0_80481df = load i32, i32* @ebx, align 4
  %v0_80481e0 = load i32, i32* @esi, align 4
  store i32 %v0_80481e0, i32* %stack_var_-20972, align 4
  %v4_80481e1 = trunc i32 %v0_80481e0 to i8
  %v5_80481e1 = call i32 @function_804a0a0(i8 %v4_80481e1, i32 %v0_80481df, i32 8, i32 0)
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  %v0_80481f1 = load i32, i32* @ebx, align 4
  %v0_80481f2 = load i32, i32* @esi, align 4
  %v5_80481f3 = trunc i32 %v0_80481f2 to i8
  %v6_80481f3 = call i32 @function_804a0a0(i8 %v5_80481f3, i32 %v0_80481f1, i32 21, i32 ptrtoint (i32* @global_var_805494d.6 to i32))
  store i32 %v6_80481f3, i32* @eax, align 4
  %v0_80481fc = load i32, i32* @esp, align 4
  %v6_80481fc = icmp eq i32 %v0_80481fc, -32
  store i1 %v6_80481fc, i1* %zf.global-to-local, align 1
  %v0_8048203 = load i32, i32* @ebx, align 4
  %v0_8048204 = load i32, i32* @esi, align 4
  store i32 %v0_8048204, i32* %stack_var_-20972, align 4
  %v4_8048205 = trunc i32 %v0_8048204 to i8
  %v5_8048205 = call i32 @function_804a160(i8 %v4_8048205, i32 %v0_8048203, i32 23, i32 1)
  store i32 %v5_8048205, i32* @eax, align 4
  store i32 %v5_8048205, i32* @edi, align 4
  %v0_8048210 = load i32, i32* @ebx, align 4
  %v0_8048211 = load i32, i32* @esi, align 4
  %v5_8048212 = trunc i32 %v0_8048211 to i8
  %v6_8048212 = call i32 @function_804a160(i8 %v5_8048212, i32 %v0_8048210, i32 7, i32 80)
  store i32 %v6_8048212, i32* %eax.global-to-local, align 4
  %v0_804821c = load i32, i32* @esp, align 4
  %v9_804821c = icmp eq i32 %v0_804821c, -28
  store i1 %v9_804821c, i1* %zf.global-to-local, align 1
  %v2_8048226 = ptrtoint i32* %stack_var_-20825 to i32
  store i32 %v2_8048226, i32* %edx.global-to-local, align 4
  store i32 %v2_8048226, i32* %stack_var_-20972, align 4
  %v3_804822e = bitcast i32* %stack_var_-20825 to i8*
  %v4_804822e = call i32 @function_805270e(i8* %v3_804822e, i32 0, i32 10241)
  store i32 %v4_804822e, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %ecx.global-to-local, align 4
  %v1_804823a = icmp eq i32 %v5_80481e1, 0
  store i1 %v1_804823a, i1* %zf.global-to-local, align 1
  %tmp238 = inttoptr i32 %v6_80481cf to i8*
  br i1 %v1_804823a, label %dec_label_pc_804825d, label %dec_label_pc_804823e

dec_label_pc_804823e:                             ; preds = %entry
  store i32 %v6_80481f3, i32* %edx.global-to-local, align 4
  %v1_8048242 = icmp eq i32 %v6_80481f3, 0
  store i1 %v1_8048242, i1* %zf.global-to-local, align 1
  br i1 %v1_8048242, label %dec_label_pc_804825d, label %dec_label_pc_8048246

dec_label_pc_8048246:                             ; preds = %dec_label_pc_804823e
  %v9_8048246 = icmp eq i32* %stack_var_-20956, inttoptr (i32 12 to i32*)
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481f3, i32* %eax.global-to-local, align 4
  store i32 %v6_80481f3, i32* %stack_var_-20972, align 4
  %v1_804824e = inttoptr i32 %v6_80481f3 to i8*
  %v2_804824e = call i32 @function_8051c40(i8* %v1_804824e)
  store i32 %v2_804824e, i32* %eax.global-to-local, align 4
  %v10_8048256 = icmp eq i32 %v2_804824e, 255
  store i1 %v10_8048256, i1* %zf.global-to-local, align 1
  %v7_804825b = icmp sgt i32 %v2_804824e, 255
  br i1 %v7_804825b, label %dec_label_pc_804825d, label %dec_label_pc_8048268

dec_label_pc_804825d:                             ; preds = %dec_label_pc_8048246, %dec_label_pc_804827d, %dec_label_pc_8048268, %dec_label_pc_804823e, %entry
  %v0_8048267 = phi i32 [ %v2_804824e, %dec_label_pc_8048246 ], [ %v2_8048285, %dec_label_pc_804827d ], [ %v2_8048270, %dec_label_pc_8048268 ], [ %v4_804822e, %dec_label_pc_804823e ], [ %v4_804822e, %entry ]
  %v9_804825d = icmp eq i32* %stack_var_-20956, inttoptr (i32 -20908 to i32*)
  store i1 %v9_804825d, i1* %zf.global-to-local, align 1
  store i32 %v0_8048193, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_8048192, 16777216
  %v3_8048264 = sdiv i32 %sext, 16777216
  store i32 %v3_8048264, i32* %esi.global-to-local, align 4
  store i32 %v0_8048191, i32* %edi.global-to-local, align 4
  ret i32 %v0_8048267

dec_label_pc_8048268:                             ; preds = %dec_label_pc_8048246
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %stack_var_-20972, align 4
  %v1_8048270 = inttoptr i32 %v5_80481e1 to i8*
  %v2_8048270 = call i32 @function_8051c40(i8* %v1_8048270)
  store i32 %v2_8048270, i32* %eax.global-to-local, align 4
  %v1_8048278 = add i32 %v2_8048270, -127
  %v6_8048278 = sub i32 126, %v2_8048270
  %v7_8048278 = and i32 %v6_8048278, %v2_8048270
  %v8_8048278 = icmp slt i32 %v7_8048278, 0
  %v9_8048278 = icmp eq i32 %v1_8048278, 0
  store i1 %v9_8048278, i1* %zf.global-to-local, align 1
  %v10_8048278 = icmp slt i32 %v1_8048278, 0
  %v3_804827b = icmp eq i1 %v10_8048278, %v8_8048278
  %v4_804827b = icmp eq i1 %v9_8048278, false
  %v5_804827b = and i1 %v4_804827b, %v3_804827b
  br i1 %v5_804827b, label %dec_label_pc_804825d, label %dec_label_pc_804827d

dec_label_pc_804827d:                             ; preds = %dec_label_pc_8048268
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_8048285 = call i32 @function_8051c40(i8* %tmp238)
  store i32 %v2_8048285, i32* %eax.global-to-local, align 4
  %v1_804828d = add i32 %v2_8048285, -9
  %v6_804828d = sub i32 8, %v2_8048285
  %v7_804828d = and i32 %v6_804828d, %v2_8048285
  %v8_804828d = icmp slt i32 %v7_804828d, 0
  %v9_804828d = icmp eq i32 %v1_804828d, 0
  store i1 %v9_804828d, i1* %zf.global-to-local, align 1
  %v10_804828d = icmp slt i32 %v1_804828d, 0
  %v3_8048290 = icmp eq i1 %v10_804828d, %v8_804828d
  %v4_8048290 = icmp eq i1 %v9_804828d, false
  %v5_8048290 = and i1 %v4_8048290, %v3_8048290
  br i1 %v5_8048290, label %dec_label_pc_804825d, label %dec_label_pc_804829d.preheader

dec_label_pc_804829d.preheader:                   ; preds = %dec_label_pc_804827d
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_80482a5212 = call i32 @function_8051c40(i8* %tmp238)
  store i32 %v2_80482a5212, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v12_80482b4213 = icmp eq i32 %v2_80482a5212, 0
  store i1 %v12_80482b4213, i1* %zf.global-to-local, align 1
  %v7_80482b6214 = icmp sgt i32 %v2_80482a5212, 0
  br i1 %v7_80482b6214, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482b8:                             ; preds = %dec_label_pc_804829d.preheader, %dec_label_pc_80482cc
  %v4_80482a0217 = phi i32 [ %v4_80482a0, %dec_label_pc_80482cc ], [ %v6_80481cf, %dec_label_pc_804829d.preheader ]
  %v4_80482be216 = phi i32 [ %v1_80482d3, %dec_label_pc_80482cc ], [ 0, %dec_label_pc_804829d.preheader ]
  %v3_80482b8215 = phi i8* [ %v3_80482a0.pre, %dec_label_pc_80482cc ], [ %tmp238, %dec_label_pc_804829d.preheader ]
  %v2_80482bc = add i32 %v4_80482be216, %v4_80482a0217
  %v12_80482bc = icmp eq i32 %v2_80482bc, 0
  store i1 %v12_80482bc, i1* %zf.global-to-local, align 1
  store i32 %v2_80482bc, i32* %ecx.global-to-local, align 4
  %v1_80482be = inttoptr i32 %v2_80482bc to i8*
  %v2_80482be = load i8, i8* %v1_80482be, align 1
  %v3_80482be = zext i8 %v2_80482be to i32
  %v5_80482be = and i32 %v4_80482be216, -256
  %v6_80482be = or i32 %v3_80482be, %v5_80482be
  store i32 %v6_80482be, i32* %edx.global-to-local, align 4
  %v1_80482c0 = add i32 %v6_80482be, -97
  store i32 %v1_80482c0, i32* %eax.global-to-local, align 4
  %v1_80482c3 = trunc i32 %v1_80482c0 to i8
  %v11_80482c3 = icmp eq i8 %v1_80482c3, 25
  store i1 %v11_80482c3, i1* %zf.global-to-local, align 1
  %v8_80482c5 = icmp ugt i8 %v1_80482c3, 25
  br i1 %v8_80482c5, label %dec_label_pc_80482cc, label %dec_label_pc_80482c7

dec_label_pc_80482c7:                             ; preds = %dec_label_pc_80482b8
  %v1_80482c7 = add i32 %v6_80482be, -32
  store i32 %v1_80482c7, i32* %eax.global-to-local, align 4
  %v1_80482ca = trunc i32 %v1_80482c7 to i8
  store i8 %v1_80482ca, i8* %v1_80482be, align 1
  %v0_804829d.pre.pre = load i32, i32* @esp, align 4
  %v3_80482a0.pre.pre = load i8*, i8** %stack_var_-20900, align 4
  br label %dec_label_pc_80482cc

dec_label_pc_80482cc:                             ; preds = %dec_label_pc_80482b8, %dec_label_pc_80482c7
  %v3_80482a0.pre = phi i8* [ %v3_80482b8215, %dec_label_pc_80482b8 ], [ %v3_80482a0.pre.pre, %dec_label_pc_80482c7 ]
  %v0_804829d.pre = phi i32 [ %v15_8048194, %dec_label_pc_80482b8 ], [ %v0_804829d.pre.pre, %dec_label_pc_80482c7 ]
  %v1_80482d3 = add i32 %v4_80482be216, 1
  %v9_804829d = icmp eq i32 %v0_804829d.pre, 12
  store i1 %v9_804829d, i1* %zf.global-to-local, align 1
  %v4_80482a0 = ptrtoint i8* %v3_80482a0.pre to i32
  store i32 %v4_80482a0, i32* %eax.global-to-local, align 4
  store i32 %v4_80482a0, i32* %stack_var_-20972, align 4
  %v2_80482a5 = call i32 @function_8051c40(i8* %v3_80482a0.pre)
  store i32 %v2_80482a5, i32* %eax.global-to-local, align 4
  store i32 %v1_80482d3, i32* %edx.global-to-local, align 4
  %v12_80482b4 = icmp eq i32 %v2_80482a5, %v1_80482d3
  store i1 %v12_80482b4, i1* %zf.global-to-local, align 1
  %v7_80482b6 = icmp sgt i32 %v2_80482a5, %v1_80482d3
  br i1 %v7_80482b6, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482dd:                             ; preds = %dec_label_pc_80482cc, %dec_label_pc_804829d.preheader
  %v0_80482dd = load i32, i32* @edi, align 4
  %v7_80482e7 = icmp sgt i32 %v0_80482dd, 512
  %.v0_80482dd = select i1 %v7_80482e7, i32 512, i32 %v0_80482dd
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 39, i32* %stack_var_-20972, align 4
  %v2_80482f6 = call i32 @function_8051180(i8 39)
  store i32 %v2_80482f6, i32* %eax.global-to-local, align 4
  store i32 40, i32* %stack_var_-20972, align 4
  %v2_8048302 = call i32 @function_8051180(i8 40)
  store i32 %v2_8048302, i32* %eax.global-to-local, align 4
  store i32 41, i32* %stack_var_-20972, align 4
  %v2_804830e = call i32 @function_8051180(i8 41)
  store i32 %v2_804830e, i32* %eax.global-to-local, align 4
  store i32 42, i32* %stack_var_-20972, align 4
  %v2_804831a = call i32 @function_8051180(i8 42)
  store i32 %v2_804831a, i32* %eax.global-to-local, align 4
  store i32 43, i32* %stack_var_-20972, align 4
  %v2_8048326 = call i32 @function_8051180(i8 43)
  store i32 %v2_8048326, i32* %eax.global-to-local, align 4
  store i32 44, i32* %stack_var_-20972, align 4
  %v2_8048332 = call i32 @function_8051180(i8 44)
  store i32 %v2_8048332, i32* %eax.global-to-local, align 4
  store i32 45, i32* %stack_var_-20972, align 4
  %v2_804833e = call i32 @function_8051180(i8 45)
  store i32 %v2_804833e, i32* %eax.global-to-local, align 4
  store i32 46, i32* %stack_var_-20972, align 4
  %v2_804834a = call i32 @function_8051180(i8 46)
  store i32 %v2_804834a, i32* %eax.global-to-local, align 4
  store i32 47, i32* %stack_var_-20972, align 4
  %v2_8048356 = call i32 @function_8051180(i8 47)
  store i32 %v2_8048356, i32* %eax.global-to-local, align 4
  store i32 48, i32* %stack_var_-20972, align 4
  %v2_8048362 = call i32 @function_8051180(i8 48)
  store i32 %v2_8048362, i32* %eax.global-to-local, align 4
  store i32 49, i32* %stack_var_-20972, align 4
  %v2_804836e = call i32 @function_8051180(i8 49)
  %v2_8048373 = load i32, i32* %stack_var_-20972, align 4
  store i32 %v2_8048373, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %.v0_80482dd, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* %stack_var_-20972, align 4
  %v2_804837f = sext i32 %.v0_80482dd to i64
  %v3_804837f = call i32 @function_805328f(i64 %v2_804837f, i32 3140)
  store i32 %v3_804837f, i32* %eax.global-to-local, align 4
  store i32 %v3_804837f, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* @ebx, align 4
  %v1_8048391 = icmp eq i32 %.v0_80482dd, 0
  store i1 %v1_8048391, i1* %zf.global-to-local, align 1
  %tmp137 = icmp slt i32 %.v0_80482dd, 1
  br i1 %tmp137, label %dec_label_pc_80484be, label %dec_label_pc_8048399

dec_label_pc_8048399:                             ; preds = %dec_label_pc_80482dd
  %v0_8048399 = load i32, i32* @ebp, align 4
  %v1_8048399 = trunc i32 %v0_8048399 to i8
  store i32 0, i32* @ebp, align 4
  %v1_804839d4 = urem i32 %v0_8048399, 256
  %v3_804839d = icmp eq i8 %v1_8048399, 0
  store i1 %v3_804839d, i1* %zf.global-to-local, align 1
  store i32 %v1_804839d4, i32* @ecx, align 4
  %v2_80483e1 = inttoptr i32 %v1_804839d4 to i8*
  %v2_8049f7d = inttoptr i32 %tmp to i8*
  %v1_8049f3f = trunc i32 %tmp to i8
  %v2_804a072 = inttoptr i32 %v0_804816e to i32*
  br label %dec_label_pc_80483a7

dec_label_pc_80483a7:                             ; preds = %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, %dec_label_pc_8048399
  %v0_80483a9 = phi i32 [ %v0_80483a9.pre, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ %v3_804837f, %dec_label_pc_8048399 ]
  %v0_80483a7 = phi i32 [ %v4_8049f85, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ 0, %dec_label_pc_8048399 ]
  store i32 %v0_80483a7, i32* %edx.global-to-local, align 4
  %v1_80483a9 = add i32 %v0_80483a9, 4
  %v2_80483a9 = inttoptr i32 %v1_80483a9 to i8*
  store i8 0, i8* %v2_80483a9, align 1
  %v0_80483ad = load i32, i32* %edx.global-to-local, align 4
  %v2_80483ad = ashr i32 %v0_80483ad, 31
  %v3_80483ad = icmp eq i32 %v2_80483ad, 0
  store i1 %v3_80483ad, i1* %zf.global-to-local, align 1
  store i32 %v2_80483ad, i32* %edx.global-to-local, align 4
  %v0_80483b0 = load i32, i32* @ebp, align 4
  store i32 %v0_80483b0, i32* %eax.global-to-local, align 4
  %v0_80483b2 = load i32, i32* @esp, align 4
  %v1_80483b2 = add i32 %v0_80483b2, 88
  %v2_80483b2 = inttoptr i32 %v1_80483b2 to i32*
  %v3_80483b2 = load i32, i32* %v2_80483b2, align 4
  %v5_80483b2 = zext i32 %v0_80483b0 to i64
  %v7_80483b2 = zext i32 %v2_80483ad to i64
  %v8_80483b2 = mul nuw i64 %v7_80483b2, 4294967296
  %v9_80483b2 = or i64 %v5_80483b2, %v8_80483b2
  %v10_80483b2 = zext i32 %v3_80483b2 to i64
  %v11_80483b2 = sdiv i64 %v9_80483b2, %v10_80483b2
  %v12_80483b2 = trunc i64 %v11_80483b2 to i32
  store i32 %v12_80483b2, i32* %eax.global-to-local, align 4
  %v13_80483b2 = srem i64 %v9_80483b2, %v10_80483b2
  %v14_80483b2 = trunc i64 %v13_80483b2 to i32
  store i32 %v14_80483b2, i32* %edx.global-to-local, align 4
  %v1_80483b6 = add i32 %v0_80483b2, 20932
  %v2_80483b6 = inttoptr i32 %v1_80483b6 to i32*
  %v3_80483b6 = load i32, i32* %v2_80483b6, align 4
  store i32 %v3_80483b6, i32* %eax.global-to-local, align 4
  %v0_80483bd = load i32, i32* @esi, align 4
  %v1_80483bd = inttoptr i32 %v0_80483bd to i32*
  store i32 -1, i32* %v1_80483bd, align 4
  %v0_80483c3 = load i32, i32* %edx.global-to-local, align 4
  %v0_80483c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80483c6 = mul i32 %v0_80483c3, 24
  %v3_80483c6 = add i32 %v0_80483c6, %v2_80483c6
  store i32 %v3_80483c6, i32* @edi, align 4
  %v0_80483c9 = load i32, i32* @esi, align 4
  %v1_80483c9 = add i32 %v0_80483c9, 532
  store i32 %v1_80483c9, i32* %edx.global-to-local, align 4
  %v1_80483cf = load i32, i32* @esp, align 4
  %v2_80483cf = add i32 %v1_80483cf, 36
  %v3_80483cf = inttoptr i32 %v2_80483cf to i32*
  store i32 %v1_80483c9, i32* %v3_80483cf, align 4
  %v0_80483d3 = load i32, i32* @edi, align 4
  %v1_80483d3 = add i32 %v0_80483d3, 16
  %v2_80483d3 = inttoptr i32 %v1_80483d3 to i32*
  %v3_80483d3 = load i32, i32* %v2_80483d3, align 4
  store i32 %v3_80483d3, i32* %eax.global-to-local, align 4
  %v1_80483d6 = load i32, i32* @esi, align 4
  %v2_80483d6 = add i32 %v1_80483d6, 16
  %v3_80483d6 = inttoptr i32 %v2_80483d6 to i32*
  store i32 %v3_80483d3, i32* %v3_80483d6, align 4
  %v0_80483d9 = load i32, i32* @ecx, align 4
  %v1_80483d9 = load i32, i32* @esp, align 4
  %v2_80483d9 = add i32 %v1_80483d9, -4
  %v3_80483d9 = inttoptr i32 %v2_80483d9 to i32*
  store i32 %v0_80483d9, i32* %v3_80483d9, align 4
  %v0_80483da = load i32, i32* @ecx, align 4
  %v2_80483da = add i32 %v1_80483d9, -8
  %v3_80483da = inttoptr i32 %v2_80483da to i32*
  store i32 %v0_80483da, i32* %v3_80483da, align 4
  %v1_80483db = add i32 %v1_80483d9, 64
  %v2_80483db = inttoptr i32 %v1_80483db to i32*
  %v3_80483db = load i32, i32* %v2_80483db, align 4
  store i32 %v3_80483db, i32* %eax.global-to-local, align 4
  %v2_80483df = add i32 %v1_80483d9, -12
  %v3_80483df = inttoptr i32 %v2_80483df to i32*
  store i32 %v3_80483db, i32* %v3_80483df, align 4
  %v0_80483e0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80483e0 = add i32 %v1_80483d9, -16
  %v3_80483e0 = inttoptr i32 %v2_80483e0 to i32*
  store i32 %v0_80483e0, i32* %v3_80483e0, align 4
  %v3_80483e1 = call i32 @function_8051c60(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80483e1, i32* %eax.global-to-local, align 4
  %v0_80483e6 = load i32, i32* @esp, align 4
  %v1_80483e6 = add i32 %v0_80483e6, 16
  %v6_80483e6 = icmp eq i32 %v1_80483e6, 0
  store i1 %v6_80483e6, i1* %zf.global-to-local, align 1
  %v0_80483e9 = load i32, i32* @esi, align 4
  %v1_80483e9 = add i32 %v0_80483e9, 532
  %v2_80483e9 = inttoptr i32 %v1_80483e9 to i8*
  %v3_80483e9 = load i8, i8* %v2_80483e9, align 1
  %v12_80483e9 = icmp eq i8 %v3_80483e9, 47
  store i1 %v12_80483e9, i1* %zf.global-to-local, align 1
  br i1 %v12_80483e9, label %dec_label_pc_804841e, label %dec_label_pc_80483f2

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483a7
  %v9_80483f2 = icmp eq i32 %v0_80483e6, -4
  store i1 %v9_80483f2, i1* %zf.global-to-local, align 1
  %v1_80483f5 = add i32 %v0_80483e6, 52
  %v2_80483f5 = inttoptr i32 %v1_80483f5 to i32*
  %v3_80483f5 = load i32, i32* %v2_80483f5, align 4
  store i32 %v3_80483f5, i32* %eax.global-to-local, align 4
  %v3_80483f9 = inttoptr i32 %v0_80483e6 to i32*
  store i32 %v3_80483f5, i32* %v3_80483f9, align 4
  %v2_80483fa = call i32 @function_8051c40(i8* %v2_80483e1)
  store i32 %v2_80483fa, i32* %eax.global-to-local, align 4
  %v0_80483ff = load i32, i32* @esp, align 4
  %v9_80483ff = icmp eq i32 %v0_80483ff, -12
  store i1 %v9_80483ff, i1* %zf.global-to-local, align 1
  %v2_8048402 = add i32 %v0_80483ff, 8
  %v3_8048402 = inttoptr i32 %v2_8048402 to i32*
  store i32 %v2_80483fa, i32* %v3_8048402, align 4
  %v1_8048403 = add i32 %v0_80483ff, 52
  %v2_8048403 = inttoptr i32 %v1_8048403 to i32*
  %v3_8048403 = load i32, i32* %v2_8048403, align 4
  %v2_8048407 = add i32 %v0_80483ff, 4
  %v3_8048407 = inttoptr i32 %v2_8048407 to i32*
  store i32 %v3_8048403, i32* %v3_8048407, align 4
  %v0_8048408 = load i32, i32* @esi, align 4
  %v1_8048408 = add i32 %v0_8048408, 533
  store i32 %v1_8048408, i32* %eax.global-to-local, align 4
  %v3_804840e = inttoptr i32 %v0_80483ff to i32*
  store i32 %v1_8048408, i32* %v3_804840e, align 4
  %v4_804840f = call i32 @function_80526e7(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804840f, i32* %eax.global-to-local, align 4
  %v0_8048414 = load i32, i32* @esi, align 4
  %v1_8048414 = add i32 %v0_8048414, 532
  %v2_8048414 = inttoptr i32 %v1_8048414 to i8*
  store i8 47, i8* %v2_8048414, align 1
  %v0_804841b = load i32, i32* @esp, align 4
  %v1_804841b = add i32 %v0_804841b, 16
  %v6_804841b = icmp eq i32 %v1_804841b, 0
  store i1 %v6_804841b, i1* %zf.global-to-local, align 1
  %v0_804841e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804841e

dec_label_pc_804841e:                             ; preds = %dec_label_pc_80483a7, %dec_label_pc_80483f2
  %v1_804841e = phi i32 [ %v1_80483e6, %dec_label_pc_80483a7 ], [ %v1_804841b, %dec_label_pc_80483f2 ]
  %v0_804841e = phi i32 [ %v3_80483e1, %dec_label_pc_80483a7 ], [ %v0_804841e.pre, %dec_label_pc_80483f2 ]
  %v2_804841e = add i32 %v1_804841e, -4
  %v3_804841e = inttoptr i32 %v2_804841e to i32*
  store i32 %v0_804841e, i32* %v3_804841e, align 4
  %v0_804841f = load i32, i32* %eax.global-to-local, align 4
  %v2_804841f = add i32 %v1_804841e, -8
  %v3_804841f = inttoptr i32 %v2_804841f to i32*
  store i32 %v0_804841f, i32* %v3_804841f, align 4
  %v1_8048420 = add i32 %v1_804841e, 56
  %v2_8048420 = inttoptr i32 %v1_8048420 to i32*
  %v3_8048420 = load i32, i32* %v2_8048420, align 4
  %v2_8048424 = add i32 %v1_804841e, -12
  %v3_8048424 = inttoptr i32 %v2_8048424 to i32*
  store i32 %v3_8048420, i32* %v3_8048424, align 4
  %v0_8048425 = load i32, i32* @esi, align 4
  %v1_8048425 = add i32 %v0_8048425, 1440
  store i32 %v1_8048425, i32* %eax.global-to-local, align 4
  %v2_804842b = add i32 %v1_804841e, -16
  %v3_804842b = inttoptr i32 %v2_804842b to i32*
  store i32 %v1_8048425, i32* %v3_804842b, align 4
  %v3_804842c = call i32 @function_8051c60(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804842c, i32* %eax.global-to-local, align 4
  %v0_8048431 = load i32, i32* @esp, align 4
  %v1_8048431 = inttoptr i32 %v0_8048431 to i32*
  %v2_8048431 = load i32, i32* %v1_8048431, align 4
  store i32 %v2_8048431, i32* @ebx, align 4
  %v0_8048433 = load i32, i32* @esi, align 4
  %v1_8048433 = add i32 %v0_8048433, 1431
  store i32 %v1_8048433, i32* %eax.global-to-local, align 4
  %v1_8048439 = add i32 %v0_8048431, 72
  %v2_8048439 = inttoptr i32 %v1_8048439 to i32*
  %v3_8048439 = load i32, i32* %v2_8048439, align 4
  store i32 %v3_8048439, i32* %ecx.global-to-local, align 4
  %v2_804843d = add i32 %v0_8048431, 4
  %v3_804843d = inttoptr i32 %v2_804843d to i32*
  store i32 %v3_8048439, i32* %v3_804843d, align 4
  %v0_804843e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804843e, i32* %v1_8048431, align 4
  %v3_804843f = call i32 @function_8051c60(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804843f, i32* %eax.global-to-local, align 4
  %v0_8048444 = load i32, i32* @esp, align 4
  %v1_8048444 = inttoptr i32 %v0_8048444 to i32*
  %v2_8048444 = load i32, i32* %v1_8048444, align 4
  store i32 %v2_8048444, i32* %eax.global-to-local, align 4
  %v3_8048444 = add i32 %v0_8048444, 4
  %v1_8048445 = inttoptr i32 %v3_8048444 to i32*
  %v2_8048445 = load i32, i32* %v1_8048445, align 4
  store i32 %v2_8048445, i32* %edx.global-to-local, align 4
  %v1_8048446 = add i32 %v0_8048444, 76
  %v2_8048446 = inttoptr i32 %v1_8048446 to i32*
  %v3_8048446 = load i32, i32* %v2_8048446, align 4
  store i32 %v3_8048446, i32* %v1_8048445, align 4
  %v0_804844b = load i32, i32* @esi, align 4
  %v1_804844b = add i32 %v0_804844b, 789
  store i32 %v1_804844b, i32* %eax.global-to-local, align 4
  store i32 %v1_804844b, i32* %v1_8048444, align 4
  %v3_8048452 = call i32 @function_8051c60(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048452, i32* %eax.global-to-local, align 4
  %v0_8048457 = load i32, i32* @esp, align 4
  %v6_8048457 = icmp eq i32 %v0_8048457, -16
  store i1 %v6_8048457, i1* %zf.global-to-local, align 1
  %v0_804845a = load i32, i32* @edi, align 4
  %v1_804845a = add i32 %v0_804845a, 20
  %v2_804845a = inttoptr i32 %v1_804845a to i8*
  %v3_804845a = load i8, i8* %v2_804845a, align 1
  %v12_804845a = icmp eq i8 %v3_804845a, 31
  store i1 %v12_804845a, i1* %zf.global-to-local, align 1
  %tmp239 = icmp ult i8 %v3_804845a, 32
  br i1 %tmp239, label %dec_label_pc_8048460, label %dec_label_pc_804848a

dec_label_pc_8048460:                             ; preds = %dec_label_pc_804841e
  %v1_8048460 = add i32 %v0_804845a, 16
  %v2_8048460 = inttoptr i32 %v1_8048460 to i32*
  %v3_8048460 = load i32, i32* %v2_8048460, align 4
  store i32 %v3_8048460, i32* %ebx.global-to-local, align 4
  %v0_8048463 = call i32 @function_804eaf0()
  store i32 %v0_8048463, i32* %eax.global-to-local, align 4
  %v1_8048468 = trunc i32 %v3_8048460 to i16
  %v2_8048468 = call i16 @llvm.bswap.i16(i16 %v1_8048468)
  %v3_8048468 = zext i16 %v2_8048468 to i32
  %v1_804846c = udiv i32 %v3_8048460, 65536
  %v2_804846c = mul nuw i32 %v3_8048468, 65536
  %v1_804846f = trunc i32 %v1_804846c to i16
  %v2_804846f = call i16 @llvm.bswap.i16(i16 %v1_804846f)
  %v3_804846f = zext i16 %v2_804846f to i32
  %v6_804846f = or i32 %v3_804846f, %v2_804846c
  store i32 %v6_804846f, i32* %ebx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8048475 = load i32, i32* @edi, align 4
  %v1_8048475 = add i32 %v0_8048475, 20
  %v2_8048475 = inttoptr i32 %v1_8048475 to i8*
  %v3_8048475 = load i8, i8* %v2_8048475, align 1
  %v4_8048475 = zext i8 %v3_8048475 to i32
  store i32 %v4_8048475, i32* %ecx.global-to-local, align 4
  %tmp243 = urem i8 %v3_8048475, 32
  %v4_8048478 = icmp eq i8 %tmp243, 0
  br i1 %v4_8048478, label %bb138, label %bb

bb:                                               ; preds = %dec_label_pc_8048460
  %v2_8048478 = zext i8 %tmp243 to i32
  %v5_8048478 = lshr i32 %v0_8048463, %v2_8048478
  %v6_8048478 = icmp eq i32 %v5_8048478, 0
  store i1 %v6_8048478, i1* %zf.global-to-local, align 1
  store i32 %v5_8048478, i32* %eax.global-to-local, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_8048460, %bb
  %v0_804847a = phi i32 [ %v0_8048463, %dec_label_pc_8048460 ], [ %v5_8048478, %bb ]
  %v2_804847a = add i32 %v0_804847a, %v6_804846f
  %v12_804847a = icmp eq i32 %v2_804847a, 0
  store i1 %v12_804847a, i1* %zf.global-to-local, align 1
  %v1_804847c = trunc i32 %v2_804847a to i16
  %v2_804847c = call i16 @llvm.bswap.i16(i16 %v1_804847c)
  %v3_804847c = zext i16 %v2_804847c to i32
  %v1_8048480 = udiv i32 %v2_804847a, 65536
  %v2_8048480 = mul nuw i32 %v3_804847c, 65536
  %v1_8048483 = trunc i32 %v1_8048480 to i16
  %v2_8048483 = call i16 @llvm.bswap.i16(i16 %v1_8048483)
  %v3_8048483 = zext i16 %v2_8048483 to i32
  %v6_8048483 = or i32 %v3_8048483, %v2_8048480
  store i32 %v6_8048483, i32* %eax.global-to-local, align 4
  %v1_8048487 = load i32, i32* @esi, align 4
  %v2_8048487 = add i32 %v1_8048487, 16
  %v3_8048487 = inttoptr i32 %v2_8048487 to i32*
  store i32 %v6_8048483, i32* %v3_8048487, align 4
  br label %dec_label_pc_804848a

dec_label_pc_804848a:                             ; preds = %dec_label_pc_804841e, %bb138
  %v0_804848a = call i32 @function_804eaf0()
  %v1_804848a = sext i32 %v0_804848a to i64
  store i32 -858993459, i32* @ecx, align 4
  store i32 %v0_804848a, i32* @ebx, align 4
  %v5_8048496 = mul nuw nsw i64 %v1_804848a, 3435973837
  %v6_8048496 = trunc i64 %v5_8048496 to i32
  %v7_8048496 = udiv i64 %v5_8048496, 4294967296
  %v8_8048496 = trunc i64 %v7_8048496 to i32
  store i32 %v6_8048496, i32* %eax.global-to-local, align 4
  store i32 %v8_8048496, i32* %edx.global-to-local, align 4
  %v1_8048498 = load i32, i32* @esp, align 4
  %v2_8048498 = add i32 %v1_8048498, 12
  %v3_8048498 = inttoptr i32 %v2_8048498 to i32*
  store i32 %v8_8048496, i32* %v3_8048498, align 4
  %v0_804849c = load i32, i32* %eax.global-to-local, align 4
  %v1_804849c = load i32, i32* @esp, align 4
  %v2_804849c = add i32 %v1_804849c, 8
  %v3_804849c = inttoptr i32 %v2_804849c to i32*
  store i32 %v0_804849c, i32* %v3_804849c, align 4
  %v0_80484a0 = load i32, i32* @esp, align 4
  %v1_80484a0 = add i32 %v0_80484a0, 12
  %v2_80484a0 = inttoptr i32 %v1_80484a0 to i32*
  %v3_80484a0 = load i32, i32* %v2_80484a0, align 4
  %v0_80484a4 = load i32, i32* @ebx, align 4
  %v2_80484a6 = udiv i32 %v3_80484a0, 4
  %v3_80484a9 = mul i32 %v2_80484a6, 5
  store i32 %v3_80484a9, i32* %edx.global-to-local, align 4
  %v2_80484ac = sub i32 %v0_80484a4, %v3_80484a9
  store i32 %v2_80484ac, i32* %eax.global-to-local, align 4
  %v9_80484ae = icmp eq i32 %v2_80484ac, 4
  store i1 %v9_80484ae, i1* %zf.global-to-local, align 1
  switch i32 %v2_80484ac, label %dec_label_pc_8049f6a [
    i32 0, label %dec_label_pc_8049f3a
    i32 1, label %dec_label_pc_8049fc3
    i32 2, label %dec_label_pc_8049ff8
    i32 3, label %dec_label_pc_804a062
  ]

dec_label_pc_80484be:                             ; preds = %dec_label_pc_80482dd
  %v1_80484be = add i32 %v3_804837f, 16
  store i32 %v1_80484be, i32* %edx.global-to-local, align 4
  %v2_80484c1 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_80484c1, i32* %ecx.global-to-local, align 4
  %v2_80484c8 = ptrtoint i32* %stack_var_-344 to i32
  store i32 %v2_80484c8, i32* %eax.global-to-local, align 4
  %v1_80484cf = add i32 %v3_804837f, 1452
  %v9_80484cf = icmp eq i32 %v1_80484cf, 0
  store i1 %v9_80484cf, i1* %zf.global-to-local, align 1
  store i32 %v1_80484cf, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_80484e5.preheader:                   ; preds = %dec_label_pc_80484be, %dec_label_pc_8049f8f
  %v0_80484e5.pre = phi i32 [ %v0_80484e5.pre.pre, %dec_label_pc_8049f8f ], [ %v15_8048194, %dec_label_pc_80484be ]
  %stack_var_-20924.0.ph = phi i32 [ %tmp, %dec_label_pc_8049f8f ], [ %v1_80484cf, %dec_label_pc_80484be ]
  %v1_8048752 = inttoptr i32 %stack_var_-20924.0.ph to i8*
  %v1_804887b = trunc i32 %stack_var_-20924.0.ph to i8
  br label %dec_label_pc_80484e5

dec_label_pc_80484e5:                             ; preds = %dec_label_pc_8048ce9, %dec_label_pc_8048cdd, %dec_label_pc_80484e5, %dec_label_pc_8048d91, %dec_label_pc_80484e5.preheader
  %v0_80484e5 = phi i32 [ %v0_80484e5.pre, %dec_label_pc_80484e5.preheader ], [ %v1_804850c, %dec_label_pc_80484e5 ], [ %v0_8048597, %dec_label_pc_8048cdd ], [ %v1_8048d39, %dec_label_pc_8048ce9 ], [ %v0_8048da7, %dec_label_pc_8048d91 ]
  %v9_80484e5 = icmp eq i32 %v0_80484e5, 12
  store i1 %v9_80484e5, i1* %zf.global-to-local, align 1
  %v1_80484e8 = add i32 %v0_80484e5, -16
  %v2_80484e8 = inttoptr i32 %v1_80484e8 to i32*
  store i32 0, i32* %v2_80484e8, align 4
  %v0_80484ea = call i32 @function_8052474()
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80484f4 = load i32, i32* @esp, align 4
  %v2_80484f4 = add i32 %v1_80484f4, 96
  %v3_80484f4 = inttoptr i32 %v2_80484f4 to i32*
  store i32 %v0_80484ea, i32* %v3_80484f4, align 4
  %v0_80484f8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80484f8, i32* %ecx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80484fc = load i32, i32* @esp, align 4
  %v1_80484fc = add i32 %v0_80484fc, 40
  %v2_80484fc = inttoptr i32 %v1_80484fc to i32*
  %v3_80484fc = load i32, i32* %v2_80484fc, align 4
  %v4_80484fc = inttoptr i32 %v3_80484fc to i8*
  store i32 %v3_80484fc, i32* %edi.global-to-local, align 4
  %v5_8048501 = call i8* @_memset(i8* %v4_80484fc, i32 0, i32 %v0_80484f8)
  %v0_8048503 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8048503, i32* %ecx.global-to-local, align 4
  %v0_8048505 = load i32, i32* @esp, align 4
  %v1_8048505 = add i32 %v0_8048505, 36
  %v2_8048505 = inttoptr i32 %v1_8048505 to i32*
  %v3_8048505 = load i32, i32* %v2_8048505, align 4
  %v4_8048505 = inttoptr i32 %v3_8048505 to i8*
  store i32 %v3_8048505, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v2_804850a = load i32, i32* %eax.global-to-local, align 4
  %v5_804850a = call i8* @_memset(i8* %v4_8048505, i32 %v2_804850a, i32 %v0_8048503)
  %v6_804850a = ptrtoint i8* %v5_804850a to i32
  store i32 %v6_804850a, i32* @ecx, align 4
  %v0_804850c = load i32, i32* @esp, align 4
  %v1_804850c = add i32 %v0_804850c, 16
  %v1_804850f = add i32 %v0_804850c, 128
  %v2_804850f = inttoptr i32 %v1_804850f to i32*
  %v3_804850f = load i32, i32* %v2_804850f, align 4
  store i32 %v3_804850f, i32* %esi.global-to-local, align 4
  %v1_8048513 = icmp eq i32 %v3_804850f, 0
  store i1 %v1_8048513, i1* %zf.global-to-local, align 1
  %tmp139 = icmp slt i32 %v3_804850f, 1
  br i1 %tmp139, label %dec_label_pc_80484e5, label %dec_label_pc_8048517

dec_label_pc_8048517:                             ; preds = %dec_label_pc_80484e5
  %v1_8048517 = add i32 %v0_804850c, 64
  %v2_8048517 = inttoptr i32 %v1_8048517 to i32*
  %v3_8048517 = load i32, i32* %v2_8048517, align 4
  store i32 %v3_8048517, i32* %esi.global-to-local, align 4
  %v1_804851b = add i32 %v0_804850c, 44
  %v2_804851b = inttoptr i32 %v1_804851b to i32*
  %v3_804851b = load i32, i32* %v2_804851b, align 4
  store i32 %v3_804851b, i32* @ebp, align 4
  %v1_804851f = add i32 %v3_8048517, 1440
  %v6_804851f = icmp eq i32 %v1_804851f, 0
  store i1 %v6_804851f, i1* %zf.global-to-local, align 1
  store i32 %v1_804851f, i32* @esi, align 4
  %v1_8048525 = add i32 %v0_804850c, 116
  %v2_8048525 = inttoptr i32 %v1_8048525 to i32*
  store i32 0, i32* %v2_8048525, align 4
  %v0_804852d = load i32, i32* @esp, align 4
  %v1_804852d = add i32 %v0_804852d, 72
  %v2_804852d = inttoptr i32 %v1_804852d to i32*
  store i32 0, i32* %v2_804852d, align 4
  br label %dec_label_pc_80485a5

dec_label_pc_8048537:                             ; preds = %dec_label_pc_80485b6
  %v10_8048537 = icmp eq i8 %v3_80485a5, 2
  store i1 %v10_8048537, i1* %zf.global-to-local, align 1
  br i1 %v10_8048537, label %dec_label_pc_8048c9d, label %dec_label_pc_804853f

dec_label_pc_804853f:                             ; preds = %dec_label_pc_8048537
  %v10_804853f = icmp eq i8 %v3_80485a5, 4
  store i1 %v10_804853f, i1* %zf.global-to-local, align 1
  br i1 %v10_804853f, label %dec_label_pc_8048700, label %dec_label_pc_8048547

dec_label_pc_8048547:                             ; preds = %dec_label_pc_804853f
  %v10_8048547 = icmp eq i8 %v3_80485a5, 6
  store i1 %v10_8048547, i1* %zf.global-to-local, align 1
  br i1 %v10_8048547, label %dec_label_pc_80493a7, label %dec_label_pc_804854f

dec_label_pc_804854f:                             ; preds = %dec_label_pc_8048547
  %v10_804854f = icmp eq i8 %v3_80485a5, 7
  store i1 %v10_804854f, i1* %zf.global-to-local, align 1
  br i1 %v10_804854f, label %dec_label_pc_8049773, label %dec_label_pc_8048557

dec_label_pc_8048557:                             ; preds = %dec_label_pc_804854f
  %v10_8048557 = icmp eq i8 %v3_80485a5, 10
  store i1 %v10_8048557, i1* %zf.global-to-local, align 1
  br i1 %v10_8048557, label %dec_label_pc_8049829, label %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge

dec_label_pc_8048557.dec_label_pc_804855f_crit_edge: ; preds = %dec_label_pc_8048557
  %v0_804855f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804855f

dec_label_pc_804855f:                             ; preds = %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge, %dec_label_pc_8048c9d
  %v0_804855f = phi i32 [ %v0_804855f.pre, %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge ], [ %v0_8048c9d, %dec_label_pc_8048c9d ]
  %v9_804855f = icmp eq i32 %v0_804855f, 12
  store i1 %v9_804855f, i1* %zf.global-to-local, align 1
  %v1_8048562 = add i32 %v0_80485a5, -1440
  %v2_8048562 = inttoptr i32 %v1_8048562 to i32*
  %v3_8048562 = load i32, i32* %v2_8048562, align 4
  store i32 %v3_8048562, i32* %edx.global-to-local, align 4
  store i8 0, i8* %v2_80485a5, align 1
  %v0_804856f = load i32, i32* %edx.global-to-local, align 4
  %v1_804856f = load i32, i32* @esp, align 4
  %v2_804856f = add i32 %v1_804856f, -4
  %v3_804856f = inttoptr i32 %v2_804856f to i32*
  store i32 %v0_804856f, i32* %v3_804856f, align 4
  %v1_8048570 = call i32 @function_80521b3(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048570, i32* %eax.global-to-local, align 4
  %v0_8048575 = load i32, i32* @esi, align 4
  %v1_8048575 = add i32 %v0_8048575, -1440
  %v2_8048575 = inttoptr i32 %v1_8048575 to i32*
  store i32 -1, i32* %v2_8048575, align 4
  %v0_804857f = load i32, i32* @esp, align 4
  %v6_804857f = icmp eq i32 %v0_804857f, -16
  store i1 %v6_804857f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048582

dec_label_pc_8048582:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_8048601, %dec_label_pc_804861f, %dec_label_pc_80486e4, %dec_label_pc_804855f
  %v0_8048582 = load i32, i32* @esp, align 4
  %v1_8048582 = add i32 %v0_8048582, 100
  %v2_8048582 = inttoptr i32 %v1_8048582 to i32*
  %v3_8048582 = load i32, i32* %v2_8048582, align 4
  %v0_8048586 = load i32, i32* @ebp, align 4
  %v1_8048586 = add i32 %v0_8048586, 3140
  store i32 %v1_8048586, i32* @ebp, align 4
  %v1_804858c = add i32 %v3_8048582, 1
  store i32 %v1_804858c, i32* %eax.global-to-local, align 4
  %v0_804858d = load i32, i32* @esi, align 4
  %v1_804858d = add i32 %v0_804858d, 3140
  store i32 %v1_804858d, i32* @esi, align 4
  store i32 %v1_804858c, i32* %v2_8048582, align 4
  %v0_8048597 = load i32, i32* @esp, align 4
  %v1_8048597 = add i32 %v0_8048597, 100
  %v2_8048597 = inttoptr i32 %v1_8048597 to i32*
  %v3_8048597 = load i32, i32* %v2_8048597, align 4
  store i32 %v3_8048597, i32* @ecx, align 4
  %v1_804859b = add i32 %v0_8048597, 112
  %v2_804859b = inttoptr i32 %v1_804859b to i32*
  %v3_804859b = load i32, i32* %v2_804859b, align 4
  %v15_804859b = icmp eq i32 %v3_804859b, %v3_8048597
  store i1 %v15_804859b, i1* %zf.global-to-local, align 1
  br i1 %v15_804859b, label %dec_label_pc_8048cdd, label %dec_label_pc_80485a5

dec_label_pc_80485a5:                             ; preds = %dec_label_pc_8048582, %dec_label_pc_8048517
  %v0_80485a5 = load i32, i32* @esi, align 4
  %v1_80485a5 = add i32 %v0_80485a5, -1436
  %v2_80485a5 = inttoptr i32 %v1_80485a5 to i8*
  %v3_80485a5 = load i8, i8* %v2_80485a5, align 1
  %v4_80485a5 = zext i8 %v3_80485a5 to i32
  %v5_80485a5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80485a5 = and i32 %v5_80485a5, -256
  %v7_80485a5 = or i32 %v6_80485a5, %v4_80485a5
  store i32 %v7_80485a5, i32* %eax.global-to-local, align 4
  %v0_80485ab = load i32, i32* @ebp, align 4
  %v1_80485ab = add i32 %v0_80485ab, -16
  store i32 %v1_80485ab, i32* @edi, align 4
  %v6_80485ae = icmp eq i8 %v3_80485a5, 0
  %v10_80485ae = icmp eq i8 %v3_80485a5, 1
  store i1 %v10_80485ae, i1* %zf.global-to-local, align 1
  br i1 %v10_80485ae, label %dec_label_pc_80486ee, label %dec_label_pc_80485b6

dec_label_pc_80485b6:                             ; preds = %dec_label_pc_80485a5
  store i1 %v6_80485ae, i1* %zf.global-to-local, align 1
  %v1_80485b8 = icmp eq i1 %v6_80485ae, false
  br i1 %v1_80485b8, label %dec_label_pc_8048537, label %dec_label_pc_80485be

dec_label_pc_80485be:                             ; preds = %dec_label_pc_80485b6, %dec_label_pc_8048c91
  %v0_80485be = load i32, i32* @esp, align 4
  %v1_80485be = add i32 %v0_80485be, 20868
  %v2_80485be = inttoptr i32 %v1_80485be to i32*
  store i32 0, i32* %v2_80485be, align 4
  %v0_80485c9 = load i32, i32* @esp, align 4
  %v1_80485c9 = add i32 %v0_80485c9, 20872
  %v2_80485c9 = inttoptr i32 %v1_80485c9 to i32*
  store i32 0, i32* %v2_80485c9, align 4
  %v0_80485d4 = load i32, i32* @esp, align 4
  %v1_80485d4 = add i32 %v0_80485d4, 20876
  %v2_80485d4 = inttoptr i32 %v1_80485d4 to i32*
  store i32 0, i32* %v2_80485d4, align 4
  %v0_80485df = load i32, i32* @esp, align 4
  %v1_80485df = add i32 %v0_80485df, 20880
  %v2_80485df = inttoptr i32 %v1_80485df to i32*
  store i32 0, i32* %v2_80485df, align 4
  %v0_80485ea = load i32, i32* @esi, align 4
  %v1_80485ea = add i32 %v0_80485ea, -1440
  %v2_80485ea = inttoptr i32 %v1_80485ea to i32*
  %v3_80485ea = load i32, i32* %v2_80485ea, align 4
  store i32 %v3_80485ea, i32* %eax.global-to-local, align 4
  %v10_80485f0 = icmp eq i32 %v3_80485ea, -1
  store i1 %v10_80485f0, i1* %zf.global-to-local, align 1
  %v1_8048601.pre = load i32, i32* @esp, align 4
  br i1 %v10_80485f0, label %dec_label_pc_8048601, label %dec_label_pc_80485f5

dec_label_pc_80485f5:                             ; preds = %dec_label_pc_80485be
  %v9_80485f5 = icmp eq i32 %v1_8048601.pre, 12
  store i1 %v9_80485f5, i1* %zf.global-to-local, align 1
  %v2_80485f8 = add i32 %v1_8048601.pre, -16
  %v3_80485f8 = inttoptr i32 %v2_80485f8 to i32*
  store i32 %v3_80485ea, i32* %v3_80485f8, align 4
  %v1_80485f9 = call i32 @function_80521b3(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80485f9, i32* %eax.global-to-local, align 4
  %v0_80485fe = load i32, i32* @esp, align 4
  %v1_80485fe = add i32 %v0_80485fe, 16
  %v6_80485fe = icmp eq i32 %v1_80485fe, 0
  store i1 %v6_80485fe, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048601

dec_label_pc_8048601:                             ; preds = %dec_label_pc_80485be, %dec_label_pc_80485f5
  %v1_8048601 = phi i32 [ %v1_80485fe, %dec_label_pc_80485f5 ], [ %v1_8048601.pre, %dec_label_pc_80485be ]
  %v0_8048601 = load i32, i32* @ecx, align 4
  %v2_8048601 = add i32 %v1_8048601, -4
  %v3_8048601 = inttoptr i32 %v2_8048601 to i32*
  store i32 %v0_8048601, i32* %v3_8048601, align 4
  %v1_8048602 = add i32 %v1_8048601, -8
  %v2_8048602 = inttoptr i32 %v1_8048602 to i32*
  store i32 0, i32* %v2_8048602, align 4
  %v1_8048604 = add i32 %v1_8048601, -12
  %v2_8048604 = inttoptr i32 %v1_8048604 to i32*
  store i32 1, i32* %v2_8048604, align 4
  %v1_8048606 = add i32 %v1_8048601, -16
  %v2_8048606 = inttoptr i32 %v1_8048606 to i32*
  store i32 2, i32* %v2_8048606, align 4
  %v4_8048608 = call i32 @function_8052994(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048608, i32* %eax.global-to-local, align 4
  %v1_8048610 = load i32, i32* @esi, align 4
  %v2_8048610 = add i32 %v1_8048610, -1440
  %v3_8048610 = inttoptr i32 %v2_8048610 to i32*
  store i32 %v4_8048608, i32* %v3_8048610, align 4
  %v10_8048616 = icmp eq i32 %v4_8048608, -1
  store i1 %v10_8048616, i1* %zf.global-to-local, align 1
  br i1 %v10_8048616, label %dec_label_pc_8048582, label %dec_label_pc_804861f

dec_label_pc_804861f:                             ; preds = %dec_label_pc_8048601
  %v0_804861f = load i32, i32* @edx, align 4
  %v1_804861f = load i32, i32* @esp, align 4
  %v2_804861f = add i32 %v1_804861f, -4
  %v3_804861f = inttoptr i32 %v2_804861f to i32*
  store i32 %v0_804861f, i32* %v3_804861f, align 4
  %v1_8048620 = add i32 %v1_804861f, -8
  %v2_8048620 = inttoptr i32 %v1_8048620 to i32*
  store i32 0, i32* %v2_8048620, align 4
  %v1_8048622 = add i32 %v1_804861f, -12
  %v2_8048622 = inttoptr i32 %v1_8048622 to i32*
  store i32 3, i32* %v2_8048622, align 4
  %v2_8048624 = add i32 %v1_804861f, -16
  %v3_8048624 = inttoptr i32 %v2_8048624 to i32*
  store i32 %v4_8048608, i32* %v3_8048624, align 4
  %v3_8048625 = call i32 @function_805211d(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804862a = load i32, i32* @esp, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_804862d = or i32 %v3_8048625, 2048
  store i32 %v12_804862d, i32* %eax.global-to-local, align 4
  %v2_8048630 = add i32 %v0_804862a, 8
  %v3_8048630 = inttoptr i32 %v2_8048630 to i32*
  store i32 %v12_804862d, i32* %v3_8048630, align 4
  %v1_8048631 = add i32 %v0_804862a, 4
  %v2_8048631 = inttoptr i32 %v1_8048631 to i32*
  store i32 4, i32* %v2_8048631, align 4
  %v0_8048633 = load i32, i32* @esi, align 4
  %v1_8048633 = add i32 %v0_8048633, -1440
  %v2_8048633 = inttoptr i32 %v1_8048633 to i32*
  %v3_8048633 = load i32, i32* %v2_8048633, align 4
  store i32 %v3_8048633, i32* %eax.global-to-local, align 4
  %v3_8048639 = inttoptr i32 %v0_804862a to i32*
  store i32 %v3_8048633, i32* %v3_8048639, align 4
  %v3_804863a = call i32 @function_805211d(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804863f = load i32, i32* @esp, align 4
  %v1_804863f = add i32 %v0_804863f, 20916
  store i32 %v1_804863f, i32* %eax.global-to-local, align 4
  %v2_8048646 = inttoptr i32 %v1_804863f to i32*
  store i32 65535, i32* %v2_8048646, align 4
  %v0_8048651 = load i32, i32* @esp, align 4
  %v1_8048651 = inttoptr i32 %v0_8048651 to i32*
  store i32 4, i32* %v1_8048651, align 4
  %v0_8048658 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048658 = load i32, i32* @esp, align 4
  %v2_8048658 = add i32 %v1_8048658, -4
  %v3_8048658 = inttoptr i32 %v2_8048658 to i32*
  store i32 %v0_8048658, i32* %v3_8048658, align 4
  %v1_8048659 = add i32 %v1_8048658, -8
  %v2_8048659 = inttoptr i32 %v1_8048659 to i32*
  store i32 8, i32* %v2_8048659, align 4
  %v1_804865b = add i32 %v1_8048658, -12
  %v2_804865b = inttoptr i32 %v1_804865b to i32*
  store i32 0, i32* %v2_804865b, align 4
  %v0_804865d = load i32, i32* @esi, align 4
  %v1_804865d = add i32 %v0_804865d, -1440
  %v2_804865d = inttoptr i32 %v1_804865d to i32*
  %v3_804865d = load i32, i32* %v2_804865d, align 4
  store i32 %v3_804865d, i32* %eax.global-to-local, align 4
  %v2_8048663 = add i32 %v1_8048658, -16
  %v3_8048663 = inttoptr i32 %v2_8048663 to i32*
  store i32 %v3_804865d, i32* %v3_8048663, align 4
  %v0_8048664 = call i32 @function_8052959()
  store i32 %v0_8048664, i32* %eax.global-to-local, align 4
  %v0_8048669 = load i32, i32* @esi, align 4
  %v1_8048669 = add i32 %v0_8048669, -1424
  %v2_8048669 = inttoptr i32 %v1_8048669 to i32*
  %v3_8048669 = load i32, i32* %v2_8048669, align 4
  store i32 %v3_8048669, i32* %eax.global-to-local, align 4
  %v0_804866f = load i32, i32* @esp, align 4
  %v1_804866f = add i32 %v0_804866f, 112
  %v2_804866f = inttoptr i32 %v1_804866f to i32*
  %v3_804866f = load i32, i32* %v2_804866f, align 4
  store i32 %v3_804866f, i32* %edx.global-to-local, align 4
  %v2_8048673 = add i32 %v0_804866f, 20904
  %v3_8048673 = inttoptr i32 %v2_8048673 to i32*
  store i32 %v3_8048669, i32* %v3_8048673, align 4
  %v0_804867a = load i32, i32* @esp, align 4
  %v1_804867a = add i32 %v0_804867a, 20900
  %v2_804867a = inttoptr i32 %v1_804867a to i16*
  store i16 2, i16* %v2_804867a, align 2
  %v0_8048684 = load i32, i32* @esp, align 4
  %v1_8048684 = add i32 %v0_8048684, 102
  %v2_8048684 = inttoptr i32 %v1_8048684 to i16*
  %v3_8048684 = load i16, i16* %v2_8048684, align 2
  %v5_8048684 = load i32, i32* %eax.global-to-local, align 4
  %v6_8048684 = and i32 %v5_8048684, -65536
  %v0_8048689 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048689 = load i32, i32* @esi, align 4
  %v2_8048689 = add i32 %v1_8048689, -1432
  %v3_8048689 = inttoptr i32 %v2_8048689 to i32*
  store i32 %v0_8048689, i32* %v3_8048689, align 4
  %v2_804868f = call i16 @llvm.bswap.i16(i16 %v3_8048684)
  %v3_804868f = zext i16 %v2_804868f to i32
  %v6_804868f = or i32 %v3_804868f, %v6_8048684
  store i32 %v6_804868f, i32* %eax.global-to-local, align 4
  %v2_8048693 = load i32, i32* @esp, align 4
  %v3_8048693 = add i32 %v2_8048693, 20902
  %v4_8048693 = inttoptr i32 %v3_8048693 to i16*
  store i16 %v2_804868f, i16* %v4_8048693, align 2
  %v0_804869b = load i32, i32* @esp, align 4
  %v9_804869b = icmp eq i32 %v0_804869b, -28
  store i1 %v9_804869b, i1* %zf.global-to-local, align 1
  %v0_804869e = load i32, i32* @esi, align 4
  %v1_804869e = add i32 %v0_804869e, -1436
  %v2_804869e = inttoptr i32 %v1_804869e to i8*
  store i8 2, i8* %v2_804869e, align 1
  %v0_80486a5 = load i32, i32* @esp, align 4
  %v1_80486a5 = add i32 %v0_80486a5, -4
  %v2_80486a5 = inttoptr i32 %v1_80486a5 to i32*
  store i32 16, i32* %v2_80486a5, align 4
  %v1_80486a7 = add i32 %v0_80486a5, 20872
  store i32 %v1_80486a7, i32* %ecx.global-to-local, align 4
  %v2_80486ae = add i32 %v0_80486a5, -8
  %v3_80486ae = inttoptr i32 %v2_80486ae to i32*
  store i32 %v1_80486a7, i32* %v3_80486ae, align 4
  %v0_80486af = load i32, i32* @esi, align 4
  %v1_80486af = add i32 %v0_80486af, -1440
  %v2_80486af = inttoptr i32 %v1_80486af to i32*
  %v3_80486af = load i32, i32* %v2_80486af, align 4
  store i32 %v3_80486af, i32* @edi, align 4
  %v2_80486b5 = add i32 %v0_80486a5, -12
  %v3_80486b5 = inttoptr i32 %v2_80486b5 to i32*
  store i32 %v3_80486af, i32* %v3_80486b5, align 4
  %v3_80486b6 = call i32 @function_80527b9(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esi, align 4
  %v1_80486bb = add i32 %v0_80486bb, -1440
  %v2_80486bb = inttoptr i32 %v1_80486bb to i32*
  %v3_80486bb = load i32, i32* %v2_80486bb, align 4
  %v1_80486c3 = urem i32 %v3_80486bb, 32
  store i32 %v1_80486c3, i32* %eax.global-to-local, align 4
  %v2_80486c6 = udiv i32 %v3_80486bb, 32
  store i32 %v2_80486c6, i32* %edx.global-to-local, align 4
  %v0_80486c9 = load i32, i32* @esp, align 4
  %v2_80486c9 = mul nuw nsw i32 %v2_80486c6, 4
  %v3_80486c9 = add nuw nsw i32 %v2_80486c9, 20628
  %v4_80486c9 = add i32 %v3_80486c9, %v0_80486c9
  %v5_80486c9 = inttoptr i32 %v4_80486c9 to i32*
  %v6_80486c9 = load i32, i32* %v5_80486c9, align 4
  %v9_80486c9 = shl i32 1, %v1_80486c3
  %v12_80486c9 = or i32 %v6_80486c9, %v9_80486c9
  store i32 %v12_80486c9, i32* %v5_80486c9, align 4
  %v0_80486d1 = load i32, i32* @esp, align 4
  %v1_80486d1 = add i32 %v0_80486d1, 16
  %v0_80486d4 = load i32, i32* @esi, align 4
  %v1_80486d4 = add i32 %v0_80486d4, -1440
  %v2_80486d4 = inttoptr i32 %v1_80486d4 to i32*
  %v3_80486d4 = load i32, i32* %v2_80486d4, align 4
  store i32 %v3_80486d4, i32* %eax.global-to-local, align 4
  %v1_80486da = add i32 %v0_80486d1, 88
  %v2_80486da = inttoptr i32 %v1_80486da to i32*
  %v3_80486da = load i32, i32* %v2_80486da, align 4
  %v5_80486da = sub i32 %v3_80486da, %v3_80486d4
  %v11_80486da = xor i32 %v3_80486da, %v3_80486d4
  %v12_80486da = xor i32 %v5_80486da, %v3_80486da
  %v13_80486da = and i32 %v12_80486da, %v11_80486da
  %v14_80486da = icmp slt i32 %v13_80486da, 0
  %v15_80486da = icmp eq i32 %v5_80486da, 0
  store i1 %v15_80486da, i1* %zf.global-to-local, align 1
  %v16_80486da = icmp slt i32 %v5_80486da, 0
  %v2_80486de = icmp eq i1 %v16_80486da, %v14_80486da
  br i1 %v2_80486de, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80486e4:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_804861f
  %v1_80486e5 = phi i32 [ %v1_8049845, %dec_label_pc_8049829 ], [ %v1_804978f, %dec_label_pc_8049773 ], [ %v1_80493c3, %dec_label_pc_80493a7 ], [ %v0_8048cce, %dec_label_pc_8048cb2 ], [ %v1_8048c79, %dec_label_pc_8048c28 ], [ %v1_80486d1, %dec_label_pc_804861f ]
  %v0_80486e4 = phi i32 [ %v3_804983f, %dec_label_pc_8049829 ], [ %v3_8049789, %dec_label_pc_8049773 ], [ %v3_80493bd, %dec_label_pc_80493a7 ], [ %v3_8048cc8, %dec_label_pc_8048cb2 ], [ %v3_8048c7c, %dec_label_pc_8048c28 ], [ %v3_80486d4, %dec_label_pc_804861f ]
  %v1_80486e4 = add i32 %v0_80486e4, 1
  %v8_80486e4 = icmp eq i32 %v1_80486e4, 0
  store i1 %v8_80486e4, i1* %zf.global-to-local, align 1
  store i32 %v1_80486e4, i32* %eax.global-to-local, align 4
  %v2_80486e5 = add i32 %v1_80486e5, 72
  %v3_80486e5 = inttoptr i32 %v2_80486e5 to i32*
  store i32 %v1_80486e4, i32* %v3_80486e5, align 4
  br label %dec_label_pc_8048582

dec_label_pc_80486ee:                             ; preds = %dec_label_pc_80485a5
  %v1_80486ee = add i32 %v0_80485a5, 16
  %v2_80486ee = inttoptr i32 %v1_80486ee to i32*
  %v3_80486ee = load i32, i32* %v2_80486ee, align 4
  store i32 %v3_80486ee, i32* @ebx, align 4
  %v1_80486f1 = icmp eq i32 %v3_80486ee, 0
  store i1 %v1_80486f1, i1* %zf.global-to-local, align 1
  br i1 %v1_80486f1, label %dec_label_pc_8048c91, label %dec_label_pc_80486f9

dec_label_pc_80486f9:                             ; preds = %dec_label_pc_80486ee
  store i8 4, i8* %v2_80485a5, align 1
  %v0_8048700.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8048700

dec_label_pc_8048700:                             ; preds = %dec_label_pc_804853f, %dec_label_pc_80486f9
  %v0_8048700 = phi i32 [ %v0_80485a5, %dec_label_pc_804853f ], [ %v0_8048700.pre, %dec_label_pc_80486f9 ]
  %v1_8048700 = add i32 %v0_8048700, 24
  %v2_8048700 = inttoptr i32 %v1_8048700 to i32*
  store i32 -1, i32* %v2_8048700, align 4
  %v0_8048707 = load i32, i32* @esi, align 4
  %v1_8048707 = add i32 %v0_8048707, 12
  %v2_8048707 = inttoptr i32 %v1_8048707 to i32*
  store i32 0, i32* %v2_8048707, align 4
  %v0_804870e = load i32, i32* @edi, align 4
  %v1_804870e = add i32 %v0_804870e, 2116
  store i32 %v1_804870e, i32* @eax, align 4
  %v0_8048714 = load i32, i32* @ecx, align 4
  %v1_8048714 = load i32, i32* @esp, align 4
  %v2_8048714 = add i32 %v1_8048714, -4
  %v3_8048714 = inttoptr i32 %v2_8048714 to i32*
  store i32 %v0_8048714, i32* %v3_8048714, align 4
  %v0_8048715 = load i32, i32* @ecx, align 4
  %v2_8048715 = add i32 %v1_8048714, -8
  %v3_8048715 = inttoptr i32 %v2_8048715 to i32*
  store i32 %v0_8048715, i32* %v3_8048715, align 4
  %v1_8048716 = add i32 %v1_8048714, -12
  %v2_8048716 = inttoptr i32 %v1_8048716 to i32*
  store i32 1024, i32* %v2_8048716, align 4
  %v0_804871b = load i32, i32* @eax, align 4
  %v2_804871b = add i32 %v1_8048714, -16
  %v3_804871b = inttoptr i32 %v2_804871b to i32*
  store i32 %v0_804871b, i32* %v3_804871b, align 4
  %v4_804871c = call i32 @function_8051cd0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804871c, i32* %eax.global-to-local, align 4
  %v0_8048721 = load i32, i32* @esi, align 4
  %v1_8048721 = add i32 %v0_8048721, 672
  %v2_8048721 = inttoptr i32 %v1_8048721 to i32*
  store i32 0, i32* %v2_8048721, align 4
  %v0_804872b = load i32, i32* @esp, align 4
  %v1_804872b = inttoptr i32 %v0_804872b to i32*
  %v2_804872b = load i32, i32* %v1_804872b, align 4
  store i32 %v2_804872b, i32* %eax.global-to-local, align 4
  %v3_804872b = add i32 %v0_804872b, 4
  %v1_804872c = inttoptr i32 %v3_804872b to i32*
  %v2_804872c = load i32, i32* %v1_804872c, align 4
  store i32 %v2_804872c, i32* %edx.global-to-local, align 4
  store i32 10240, i32* %v1_804872c, align 4
  %v1_8048732 = add i32 %v0_804872b, 10388
  store i32 %v1_8048732, i32* @eax, align 4
  store i32 %v1_8048732, i32* %v1_804872b, align 4
  %v4_804873a = call i32 @function_8051cd0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804873a, i32* %eax.global-to-local, align 4
  %v0_804873f = load i32, i32* @edi, align 4
  %v1_804873f = add i32 %v0_804873f, 1431
  store i32 %v1_804873f, i32* %edx.global-to-local, align 4
  %v1_8048745 = load i32, i32* @esp, align 4
  %v2_8048745 = add i32 %v1_8048745, 112
  %v3_8048745 = inttoptr i32 %v2_8048745 to i32*
  store i32 %v1_804873f, i32* %v3_8048745, align 4
  %v0_8048749 = load i32, i32* @esp, align 4
  %v1_8048749 = inttoptr i32 %v0_8048749 to i32*
  %v2_8048749 = load i32, i32* %v1_8048749, align 4
  store i32 %v2_8048749, i32* %eax.global-to-local, align 4
  %v1_804874a = add i32 %v0_8048749, 10388
  store i32 %v1_804874a, i32* %ecx.global-to-local, align 4
  store i32 %v1_804874a, i32* %v1_8048749, align 4
  %v2_8048752 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048752, i32* %eax.global-to-local, align 4
  %v0_8048757 = load i32, i32* @esp, align 4
  %v1_8048757 = inttoptr i32 %v0_8048757 to i32*
  %v2_8048757 = load i32, i32* %v1_8048757, align 4
  store i32 %v2_8048757, i32* %ecx.global-to-local, align 4
  %v3_8048757 = add i32 %v0_8048757, 4
  %v1_8048758 = inttoptr i32 %v3_8048757 to i32*
  %v2_8048758 = load i32, i32* %v1_8048758, align 4
  store i32 %v2_8048758, i32* @ebx, align 4
  %v1_8048759 = add i32 %v0_8048757, 112
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  %v3_8048759 = load i32, i32* %v2_8048759, align 4
  store i32 %v3_8048759, i32* %v1_8048758, align 4
  %v1_804875e = add i32 %v0_8048757, 10388
  store i32 %v1_804875e, i32* %edx.global-to-local, align 4
  %v2_8048765 = add i32 %v1_804875e, %v2_8048752
  store i32 %v2_8048765, i32* %eax.global-to-local, align 4
  store i32 %v2_8048765, i32* %v1_8048757, align 4
  %v3_8048769 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048769, i32* %eax.global-to-local, align 4
  %v0_804876e = load i32, i32* @esp, align 4
  %v1_804876e = inttoptr i32 %v0_804876e to i32*
  %v2_804876e = load i32, i32* %v1_804876e, align 4
  store i32 %v2_804876e, i32* @ebx, align 4
  %v1_804876f = add i32 %v0_804876e, 10388
  store i32 %v1_804876f, i32* %ecx.global-to-local, align 4
  store i32 %v1_804876f, i32* %v1_804876e, align 4
  %v2_8048777 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048777, i32* %eax.global-to-local, align 4
  %v0_804877c = load i32, i32* @esp, align 4
  %v1_804877c = inttoptr i32 %v0_804877c to i32*
  %v2_804877c = load i32, i32* %v1_804877c, align 4
  store i32 %v2_804877c, i32* %edx.global-to-local, align 4
  %v3_804877c = add i32 %v0_804877c, 4
  %v1_804877d = inttoptr i32 %v3_804877c to i32*
  %v2_804877d = load i32, i32* %v1_804877d, align 4
  store i32 %v2_804877d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805497f.7 to i32), i32* %v1_804877d, align 4
  %v1_8048783 = add i32 %v0_804877c, 10388
  store i32 %v1_8048783, i32* %edx.global-to-local, align 4
  %v2_804878a = add i32 %v1_8048783, %v2_8048777
  store i32 %v2_804878a, i32* %eax.global-to-local, align 4
  store i32 %v2_804878a, i32* %v1_804877c, align 4
  %v3_804878e = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804878e, i32* %eax.global-to-local, align 4
  %v0_8048793 = load i32, i32* @esp, align 4
  %v1_8048793 = inttoptr i32 %v0_8048793 to i32*
  %v2_8048793 = load i32, i32* %v1_8048793, align 4
  store i32 %v2_8048793, i32* @ebx, align 4
  %v1_8048794 = add i32 %v0_8048793, 10388
  store i32 %v1_8048794, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048794, i32* %v1_8048793, align 4
  %v2_804879c = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_804879c, i32* %eax.global-to-local, align 4
  %v0_80487a1 = load i32, i32* @esp, align 4
  %v1_80487a1 = inttoptr i32 %v0_80487a1 to i32*
  %v3_80487a1 = add i32 %v0_80487a1, 4
  %v0_80487a2 = load i32, i32* @edi, align 4
  %v1_80487a2 = add i32 %v0_80487a2, 532
  store i32 %v1_80487a2, i32* %edx.global-to-local, align 4
  %v1_80487a8 = inttoptr i32 %v3_80487a1 to i32*
  %v2_80487a8 = load i32, i32* %v1_80487a8, align 4
  store i32 %v2_80487a8, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487a2, i32* %v1_80487a8, align 4
  %v1_80487aa = add i32 %v0_80487a1, 10388
  store i32 %v1_80487aa, i32* %edx.global-to-local, align 4
  %v2_80487b1 = add i32 %v1_80487aa, %v2_804879c
  store i32 %v2_80487b1, i32* %eax.global-to-local, align 4
  store i32 %v2_80487b1, i32* %v1_80487a1, align 4
  %v3_80487b5 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487b5, i32* %eax.global-to-local, align 4
  %v0_80487ba = load i32, i32* @esp, align 4
  %v1_80487ba = inttoptr i32 %v0_80487ba to i32*
  %v2_80487ba = load i32, i32* %v1_80487ba, align 4
  store i32 %v2_80487ba, i32* @ebx, align 4
  %v1_80487bb = add i32 %v0_80487ba, 10388
  store i32 %v1_80487bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487bb, i32* %v1_80487ba, align 4
  %v2_80487c3 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_80487c3, i32* %eax.global-to-local, align 4
  %v0_80487c8 = load i32, i32* @esp, align 4
  %v1_80487c8 = inttoptr i32 %v0_80487c8 to i32*
  %v2_80487c8 = load i32, i32* %v1_80487c8, align 4
  store i32 %v2_80487c8, i32* %edx.global-to-local, align 4
  %v3_80487c8 = add i32 %v0_80487c8, 4
  %v1_80487c9 = inttoptr i32 %v3_80487c8 to i32*
  %v2_80487c9 = load i32, i32* %v1_80487c9, align 4
  store i32 %v2_80487c9, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_805494f.8 to i32), i32* %v1_80487c9, align 4
  %v1_80487cf = add i32 %v0_80487c8, 10388
  store i32 %v1_80487cf, i32* %edx.global-to-local, align 4
  %v2_80487d6 = add i32 %v1_80487cf, %v2_80487c3
  store i32 %v2_80487d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80487d6, i32* %v1_80487c8, align 4
  %v3_80487da = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487da, i32* %eax.global-to-local, align 4
  %v0_80487df = load i32, i32* @esp, align 4
  %v1_80487df = inttoptr i32 %v0_80487df to i32*
  %v2_80487df = load i32, i32* %v1_80487df, align 4
  store i32 %v2_80487df, i32* @ebx, align 4
  %v1_80487e0 = add i32 %v0_80487df, 10388
  store i32 %v1_80487e0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487e0, i32* %v1_80487df, align 4
  %v2_80487e8 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_80487e8, i32* %eax.global-to-local, align 4
  %v0_80487ed = load i32, i32* @esp, align 4
  %v1_80487ed = inttoptr i32 %v0_80487ed to i32*
  %v3_80487ed = add i32 %v0_80487ed, 4
  %v0_80487ee = load i32, i32* @edi, align 4
  %v1_80487ee = add i32 %v0_80487ee, 20
  store i32 %v1_80487ee, i32* %edx.global-to-local, align 4
  %v1_80487f1 = inttoptr i32 %v3_80487ed to i32*
  %v2_80487f1 = load i32, i32* %v1_80487f1, align 4
  store i32 %v2_80487f1, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487ee, i32* %v1_80487f1, align 4
  %v1_80487f3 = add i32 %v0_80487ed, 10388
  store i32 %v1_80487f3, i32* %edx.global-to-local, align 4
  %v2_80487fa = add i32 %v1_80487f3, %v2_80487e8
  store i32 %v2_80487fa, i32* %eax.global-to-local, align 4
  store i32 %v2_80487fa, i32* %v1_80487ed, align 4
  %v3_80487fe = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487fe, i32* %eax.global-to-local, align 4
  %v0_8048803 = load i32, i32* @esp, align 4
  %v1_8048803 = inttoptr i32 %v0_8048803 to i32*
  %v2_8048803 = load i32, i32* %v1_8048803, align 4
  store i32 %v2_8048803, i32* @ebx, align 4
  %v1_8048804 = add i32 %v0_8048803, 10388
  store i32 %v1_8048804, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048804, i32* %v1_8048803, align 4
  %v2_804880c = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_804880c, i32* %eax.global-to-local, align 4
  %v0_8048811 = load i32, i32* @esp, align 4
  %v1_8048811 = inttoptr i32 %v0_8048811 to i32*
  %v2_8048811 = load i32, i32* %v1_8048811, align 4
  store i32 %v2_8048811, i32* %edx.global-to-local, align 4
  %v3_8048811 = add i32 %v0_8048811, 4
  %v1_8048812 = inttoptr i32 %v3_8048811 to i32*
  %v2_8048812 = load i32, i32* %v1_8048812, align 4
  store i32 %v2_8048812, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054967.9 to i32), i32* %v1_8048812, align 4
  %v1_8048818 = add i32 %v0_8048811, 10388
  store i32 %v1_8048818, i32* %edx.global-to-local, align 4
  %v2_804881f = add i32 %v1_8048818, %v2_804880c
  store i32 %v2_804881f, i32* %eax.global-to-local, align 4
  store i32 %v2_804881f, i32* %v1_8048811, align 4
  %v3_8048823 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048823, i32* %eax.global-to-local, align 4
  %v0_8048828 = load i32, i32* @esp, align 4
  %v1_8048828 = inttoptr i32 %v0_8048828 to i32*
  %v2_8048828 = load i32, i32* %v1_8048828, align 4
  store i32 %v2_8048828, i32* @ebx, align 4
  %v1_8048829 = add i32 %v0_8048828, 10388
  store i32 %v1_8048829, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048829, i32* %v1_8048828, align 4
  %v2_8048831 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048831, i32* %eax.global-to-local, align 4
  %v0_8048836 = load i32, i32* @esp, align 4
  %v1_8048836 = inttoptr i32 %v0_8048836 to i32*
  %v3_8048836 = add i32 %v0_8048836, 4
  %v0_8048837 = load i32, i32* @edi, align 4
  %v1_8048837 = add i32 %v0_8048837, 789
  store i32 %v1_8048837, i32* %edx.global-to-local, align 4
  %v1_804883d = inttoptr i32 %v3_8048836 to i32*
  %v2_804883d = load i32, i32* %v1_804883d, align 4
  store i32 %v2_804883d, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048837, i32* %v1_804883d, align 4
  %v1_804883f = add i32 %v0_8048836, 10388
  store i32 %v1_804883f, i32* %edx.global-to-local, align 4
  %v2_8048846 = add i32 %v1_804883f, %v2_8048831
  store i32 %v2_8048846, i32* %eax.global-to-local, align 4
  store i32 %v2_8048846, i32* %v1_8048836, align 4
  %v3_804884a = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804884a, i32* %eax.global-to-local, align 4
  %v0_804884f = load i32, i32* @esp, align 4
  %v1_804884f = inttoptr i32 %v0_804884f to i32*
  %v2_804884f = load i32, i32* %v1_804884f, align 4
  store i32 %v2_804884f, i32* %eax.global-to-local, align 4
  %v1_8048850 = add i32 %v0_804884f, 10388
  store i32 %v1_8048850, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048850, i32* %v1_804884f, align 4
  %v2_8048858 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048858, i32* %eax.global-to-local, align 4
  %v0_804885d = load i32, i32* @esp, align 4
  %v1_804885d = inttoptr i32 %v0_804885d to i32*
  %v2_804885d = load i32, i32* %v1_804885d, align 4
  store i32 %v2_804885d, i32* %ecx.global-to-local, align 4
  %v3_804885d = add i32 %v0_804885d, 4
  %v1_804885e = inttoptr i32 %v3_804885d to i32*
  %v2_804885e = load i32, i32* %v1_804885e, align 4
  store i32 %v2_804885e, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v1_804885e, align 4
  %v1_8048864 = add i32 %v0_804885d, 10388
  store i32 %v1_8048864, i32* %edx.global-to-local, align 4
  %v2_804886b = add i32 %v1_8048864, %v2_8048858
  store i32 %v2_804886b, i32* %eax.global-to-local, align 4
  store i32 %v2_804886b, i32* %v1_804885d, align 4
  %v3_804886f = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804886f, i32* %eax.global-to-local, align 4
  %v0_8048874 = load i32, i32* @esp, align 4
  %v1_8048874 = inttoptr i32 %v0_8048874 to i32*
  store i32 35, i32* %v1_8048874, align 4
  %v2_804887b = call i32 @function_8051180(i8 %v1_804887b)
  store i32 %v2_804887b, i32* %eax.global-to-local, align 4
  %v0_8048880 = load i32, i32* @esp, align 4
  %v1_8048880 = inttoptr i32 %v0_8048880 to i32*
  %v2_8048880 = load i32, i32* %v1_8048880, align 4
  store i32 %v2_8048880, i32* %eax.global-to-local, align 4
  %v3_8048880 = add i32 %v0_8048880, 4
  %v1_8048881 = inttoptr i32 %v3_8048880 to i32*
  %v2_8048881 = load i32, i32* %v1_8048881, align 4
  store i32 %v2_8048881, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048881, align 4
  store i32 35, i32* %v1_8048880, align 4
  %v3_8048886 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048886, i32* %eax.global-to-local, align 4
  store i32 %v3_8048886, i32* @ebx, align 4
  %v0_804888d = load i32, i32* @esp, align 4
  %v1_804888d = inttoptr i32 %v0_804888d to i32*
  %v2_804888d = load i32, i32* %v1_804888d, align 4
  store i32 %v2_804888d, i32* %eax.global-to-local, align 4
  %v1_804888e = add i32 %v0_804888d, 10388
  store i32 %v1_804888e, i32* %ecx.global-to-local, align 4
  store i32 %v1_804888e, i32* %v1_804888d, align 4
  %v2_8048896 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048896, i32* %eax.global-to-local, align 4
  %v0_804889b = load i32, i32* @esp, align 4
  %v1_804889b = inttoptr i32 %v0_804889b to i32*
  %v2_804889b = load i32, i32* %v1_804889b, align 4
  store i32 %v2_804889b, i32* %edx.global-to-local, align 4
  %v3_804889b = add i32 %v0_804889b, 4
  %v1_804889c = inttoptr i32 %v3_804889b to i32*
  %v2_804889c = load i32, i32* %v1_804889c, align 4
  store i32 %v2_804889c, i32* %ecx.global-to-local, align 4
  %v0_804889d = load i32, i32* @ebx, align 4
  store i32 %v0_804889d, i32* %v1_804889c, align 4
  %v1_804889e = add i32 %v0_804889b, 10388
  store i32 %v1_804889e, i32* %edx.global-to-local, align 4
  %v2_80488a5 = add i32 %v1_804889e, %v2_8048896
  store i32 %v2_80488a5, i32* %eax.global-to-local, align 4
  store i32 %v2_80488a5, i32* %v1_804889b, align 4
  %v3_80488a9 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488a9, i32* %eax.global-to-local, align 4
  %v0_80488ae = load i32, i32* @esp, align 4
  %v1_80488ae = inttoptr i32 %v0_80488ae to i32*
  store i32 35, i32* %v1_80488ae, align 4
  %v2_80488b5 = call i32 @function_8051100(i8 %v1_804887b)
  store i32 %v2_80488b5, i32* %eax.global-to-local, align 4
  %v0_80488ba = load i32, i32* @esp, align 4
  %v1_80488ba = inttoptr i32 %v0_80488ba to i32*
  %v2_80488ba = load i32, i32* %v1_80488ba, align 4
  store i32 %v2_80488ba, i32* %eax.global-to-local, align 4
  %v1_80488bb = add i32 %v0_80488ba, 10388
  store i32 %v1_80488bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488bb, i32* %v1_80488ba, align 4
  %v2_80488c3 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_80488c3, i32* %eax.global-to-local, align 4
  %v0_80488c8 = load i32, i32* @esp, align 4
  %v1_80488c8 = inttoptr i32 %v0_80488c8 to i32*
  %v2_80488c8 = load i32, i32* %v1_80488c8, align 4
  store i32 %v2_80488c8, i32* %ecx.global-to-local, align 4
  %v3_80488c8 = add i32 %v0_80488c8, 4
  %v1_80488c9 = inttoptr i32 %v3_80488c8 to i32*
  %v2_80488c9 = load i32, i32* %v1_80488c9, align 4
  store i32 %v2_80488c9, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v1_80488c9, align 4
  %v1_80488cf = add i32 %v0_80488c8, 10388
  store i32 %v1_80488cf, i32* %edx.global-to-local, align 4
  %v2_80488d6 = add i32 %v1_80488cf, %v2_80488c3
  store i32 %v2_80488d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80488d6, i32* %v1_80488c8, align 4
  %v3_80488da = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488da, i32* %eax.global-to-local, align 4
  %v0_80488df = load i32, i32* @esp, align 4
  %v1_80488df = inttoptr i32 %v0_80488df to i32*
  store i32 36, i32* %v1_80488df, align 4
  %v2_80488e6 = call i32 @function_8051180(i8 %v1_804887b)
  store i32 %v2_80488e6, i32* %eax.global-to-local, align 4
  %v0_80488eb = load i32, i32* @esp, align 4
  %v1_80488eb = inttoptr i32 %v0_80488eb to i32*
  %v2_80488eb = load i32, i32* %v1_80488eb, align 4
  store i32 %v2_80488eb, i32* %eax.global-to-local, align 4
  %v3_80488eb = add i32 %v0_80488eb, 4
  %v1_80488ec = inttoptr i32 %v3_80488eb to i32*
  %v2_80488ec = load i32, i32* %v1_80488ec, align 4
  store i32 %v2_80488ec, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80488ec, align 4
  store i32 36, i32* %v1_80488eb, align 4
  %v3_80488f1 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80488f1, i32* %eax.global-to-local, align 4
  store i32 %v3_80488f1, i32* @ebx, align 4
  %v0_80488f8 = load i32, i32* @esp, align 4
  %v1_80488f8 = inttoptr i32 %v0_80488f8 to i32*
  %v2_80488f8 = load i32, i32* %v1_80488f8, align 4
  store i32 %v2_80488f8, i32* %eax.global-to-local, align 4
  %v1_80488f9 = add i32 %v0_80488f8, 10388
  store i32 %v1_80488f9, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488f9, i32* %v1_80488f8, align 4
  %v2_8048901 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048901, i32* %eax.global-to-local, align 4
  %v0_8048906 = load i32, i32* @esp, align 4
  %v1_8048906 = inttoptr i32 %v0_8048906 to i32*
  %v2_8048906 = load i32, i32* %v1_8048906, align 4
  store i32 %v2_8048906, i32* %edx.global-to-local, align 4
  %v3_8048906 = add i32 %v0_8048906, 4
  %v1_8048907 = inttoptr i32 %v3_8048906 to i32*
  %v2_8048907 = load i32, i32* %v1_8048907, align 4
  store i32 %v2_8048907, i32* %ecx.global-to-local, align 4
  %v0_8048908 = load i32, i32* @ebx, align 4
  store i32 %v0_8048908, i32* %v1_8048907, align 4
  %v1_8048909 = add i32 %v0_8048906, 10388
  store i32 %v1_8048909, i32* %edx.global-to-local, align 4
  %v2_8048910 = add i32 %v1_8048909, %v2_8048901
  store i32 %v2_8048910, i32* %eax.global-to-local, align 4
  store i32 %v2_8048910, i32* %v1_8048906, align 4
  %v3_8048914 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048914, i32* %eax.global-to-local, align 4
  %v0_8048919 = load i32, i32* @esp, align 4
  %v1_8048919 = inttoptr i32 %v0_8048919 to i32*
  store i32 36, i32* %v1_8048919, align 4
  %v2_8048920 = call i32 @function_8051100(i8 %v1_804887b)
  store i32 %v2_8048920, i32* %eax.global-to-local, align 4
  %v0_8048925 = load i32, i32* @esp, align 4
  %v1_8048925 = inttoptr i32 %v0_8048925 to i32*
  %v2_8048925 = load i32, i32* %v1_8048925, align 4
  store i32 %v2_8048925, i32* %eax.global-to-local, align 4
  %v1_8048926 = add i32 %v0_8048925, 10388
  store i32 %v1_8048926, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048926, i32* %v1_8048925, align 4
  %v2_804892e = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_804892e, i32* %eax.global-to-local, align 4
  %v0_8048933 = load i32, i32* @esp, align 4
  %v1_8048933 = inttoptr i32 %v0_8048933 to i32*
  %v2_8048933 = load i32, i32* %v1_8048933, align 4
  store i32 %v2_8048933, i32* %ecx.global-to-local, align 4
  %v3_8048933 = add i32 %v0_8048933, 4
  %v1_8048934 = inttoptr i32 %v3_8048933 to i32*
  %v2_8048934 = load i32, i32* %v1_8048934, align 4
  store i32 %v2_8048934, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v1_8048934, align 4
  %v1_804893a = add i32 %v0_8048933, 10388
  store i32 %v1_804893a, i32* %edx.global-to-local, align 4
  %v2_8048941 = add i32 %v1_804893a, %v2_804892e
  store i32 %v2_8048941, i32* %eax.global-to-local, align 4
  store i32 %v2_8048941, i32* %v1_8048933, align 4
  %v3_8048945 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048945, i32* %eax.global-to-local, align 4
  %v0_804894a = load i32, i32* @esp, align 4
  %v1_804894a = inttoptr i32 %v0_804894a to i32*
  store i32 37, i32* %v1_804894a, align 4
  %v2_8048951 = call i32 @function_8051180(i8 %v1_804887b)
  store i32 %v2_8048951, i32* %eax.global-to-local, align 4
  %v0_8048956 = load i32, i32* @esp, align 4
  %v1_8048956 = inttoptr i32 %v0_8048956 to i32*
  %v2_8048956 = load i32, i32* %v1_8048956, align 4
  store i32 %v2_8048956, i32* %eax.global-to-local, align 4
  %v3_8048956 = add i32 %v0_8048956, 4
  %v1_8048957 = inttoptr i32 %v3_8048956 to i32*
  %v2_8048957 = load i32, i32* %v1_8048957, align 4
  store i32 %v2_8048957, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048957, align 4
  store i32 37, i32* %v1_8048956, align 4
  %v3_804895c = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804895c, i32* %eax.global-to-local, align 4
  store i32 %v3_804895c, i32* @ebx, align 4
  %v0_8048963 = load i32, i32* @esp, align 4
  %v1_8048963 = inttoptr i32 %v0_8048963 to i32*
  %v2_8048963 = load i32, i32* %v1_8048963, align 4
  store i32 %v2_8048963, i32* %eax.global-to-local, align 4
  %v1_8048964 = add i32 %v0_8048963, 10388
  store i32 %v1_8048964, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048964, i32* %v1_8048963, align 4
  %v2_804896c = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_804896c, i32* %eax.global-to-local, align 4
  %v0_8048971 = load i32, i32* @esp, align 4
  %v1_8048971 = inttoptr i32 %v0_8048971 to i32*
  %v2_8048971 = load i32, i32* %v1_8048971, align 4
  store i32 %v2_8048971, i32* %edx.global-to-local, align 4
  %v3_8048971 = add i32 %v0_8048971, 4
  %v1_8048972 = inttoptr i32 %v3_8048971 to i32*
  %v2_8048972 = load i32, i32* %v1_8048972, align 4
  store i32 %v2_8048972, i32* %ecx.global-to-local, align 4
  %v0_8048973 = load i32, i32* @ebx, align 4
  store i32 %v0_8048973, i32* %v1_8048972, align 4
  %v1_8048974 = add i32 %v0_8048971, 10388
  store i32 %v1_8048974, i32* %edx.global-to-local, align 4
  %v2_804897b = add i32 %v1_8048974, %v2_804896c
  store i32 %v2_804897b, i32* %eax.global-to-local, align 4
  store i32 %v2_804897b, i32* %v1_8048971, align 4
  %v3_804897f = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804897f, i32* %eax.global-to-local, align 4
  %v0_8048984 = load i32, i32* @esp, align 4
  %v1_8048984 = inttoptr i32 %v0_8048984 to i32*
  store i32 37, i32* %v1_8048984, align 4
  %v2_804898b = call i32 @function_8051100(i8 %v1_804887b)
  store i32 %v2_804898b, i32* %eax.global-to-local, align 4
  %v0_8048990 = load i32, i32* @esp, align 4
  %v1_8048990 = inttoptr i32 %v0_8048990 to i32*
  %v1_8048991 = add i32 %v0_8048990, 10388
  store i32 %v1_8048991, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048991, i32* %v1_8048990, align 4
  %v2_8048999 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048999, i32* %eax.global-to-local, align 4
  %v0_804899e = load i32, i32* @esp, align 4
  %v1_804899e = inttoptr i32 %v0_804899e to i32*
  %v2_804899e = load i32, i32* %v1_804899e, align 4
  store i32 %v2_804899e, i32* @ebx, align 4
  %v3_804899e = add i32 %v0_804899e, 4
  %v1_804899f = inttoptr i32 %v3_804899e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v1_804899f, align 4
  %v1_80489a5 = add i32 %v0_804899e, 10388
  store i32 %v1_80489a5, i32* %edx.global-to-local, align 4
  %v2_80489ac = add i32 %v1_80489a5, %v2_8048999
  store i32 %v2_80489ac, i32* %eax.global-to-local, align 4
  store i32 %v2_80489ac, i32* %v1_804899e, align 4
  %v3_80489b0 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489b0, i32* %eax.global-to-local, align 4
  %v0_80489b5 = load i32, i32* @esp, align 4
  %v1_80489b5 = add i32 %v0_80489b5, 16
  %v1_80489b8 = add i32 %v0_80489b5, 68
  %v2_80489b8 = inttoptr i32 %v1_80489b8 to i32*
  %v3_80489b8 = load i32, i32* %v2_80489b8, align 4
  store i32 %v3_80489b8, i32* %ecx.global-to-local, align 4
  %v1_80489bc = icmp eq i32 %v3_80489b8, 0
  store i1 %v1_80489bc, i1* %zf.global-to-local, align 1
  br i1 %v1_80489bc, label %dec_label_pc_8048ad8, label %dec_label_pc_80489c4

dec_label_pc_80489c4:                             ; preds = %dec_label_pc_8048700
  %v9_80489c4 = icmp eq i32 %v0_80489b5, -4
  store i1 %v9_80489c4, i1* %zf.global-to-local, align 1
  %v2_80489c7 = inttoptr i32 %v0_80489b5 to i32*
  store i32 38, i32* %v2_80489c7, align 4
  %v2_80489c9 = call i32 @function_8051180(i8 %v1_804887b)
  store i32 %v2_80489c9, i32* %eax.global-to-local, align 4
  %v0_80489ce = load i32, i32* @esp, align 4
  %v1_80489ce = inttoptr i32 %v0_80489ce to i32*
  %v2_80489ce = load i32, i32* %v1_80489ce, align 4
  store i32 %v2_80489ce, i32* %eax.global-to-local, align 4
  %v3_80489ce = add i32 %v0_80489ce, 4
  %v1_80489cf = inttoptr i32 %v3_80489ce to i32*
  %v2_80489cf = load i32, i32* %v1_80489cf, align 4
  store i32 %v2_80489cf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80489cf, align 4
  store i32 38, i32* %v1_80489ce, align 4
  %v3_80489d4 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80489d4, i32* %eax.global-to-local, align 4
  store i32 %v3_80489d4, i32* @ebx, align 4
  %v0_80489db = load i32, i32* @esp, align 4
  %v1_80489db = inttoptr i32 %v0_80489db to i32*
  %v2_80489db = load i32, i32* %v1_80489db, align 4
  store i32 %v2_80489db, i32* %eax.global-to-local, align 4
  %v1_80489dc = add i32 %v0_80489db, 10388
  store i32 %v1_80489dc, i32* %ecx.global-to-local, align 4
  store i32 %v1_80489dc, i32* %v1_80489db, align 4
  %v2_80489e4 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_80489e4, i32* %eax.global-to-local, align 4
  %v0_80489e9 = load i32, i32* @esp, align 4
  %v1_80489e9 = inttoptr i32 %v0_80489e9 to i32*
  %v2_80489e9 = load i32, i32* %v1_80489e9, align 4
  store i32 %v2_80489e9, i32* %edx.global-to-local, align 4
  %v3_80489e9 = add i32 %v0_80489e9, 4
  %v1_80489ea = inttoptr i32 %v3_80489e9 to i32*
  %v2_80489ea = load i32, i32* %v1_80489ea, align 4
  store i32 %v2_80489ea, i32* %ecx.global-to-local, align 4
  %v0_80489eb = load i32, i32* @ebx, align 4
  store i32 %v0_80489eb, i32* %v1_80489ea, align 4
  %v1_80489ec = add i32 %v0_80489e9, 10388
  store i32 %v1_80489ec, i32* %edx.global-to-local, align 4
  %v2_80489f3 = add i32 %v1_80489ec, %v2_80489e4
  store i32 %v2_80489f3, i32* %eax.global-to-local, align 4
  store i32 %v2_80489f3, i32* %v1_80489e9, align 4
  %v3_80489f7 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489f7, i32* %eax.global-to-local, align 4
  %v0_80489fc = load i32, i32* @esp, align 4
  %v1_80489fc = inttoptr i32 %v0_80489fc to i32*
  store i32 38, i32* %v1_80489fc, align 4
  %v2_8048a03 = call i32 @function_8051100(i8 %v1_804887b)
  store i32 %v2_8048a03, i32* %eax.global-to-local, align 4
  %v0_8048a08 = load i32, i32* @esp, align 4
  %v1_8048a08 = inttoptr i32 %v0_8048a08 to i32*
  %v2_8048a08 = load i32, i32* %v1_8048a08, align 4
  store i32 %v2_8048a08, i32* %eax.global-to-local, align 4
  %v1_8048a09 = add i32 %v0_8048a08, 10388
  store i32 %v1_8048a09, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a09, i32* %v1_8048a08, align 4
  %v2_8048a11 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048a11, i32* %eax.global-to-local, align 4
  %v0_8048a16 = load i32, i32* @esp, align 4
  %v1_8048a16 = inttoptr i32 %v0_8048a16 to i32*
  %v2_8048a16 = load i32, i32* %v1_8048a16, align 4
  store i32 %v2_8048a16, i32* %ecx.global-to-local, align 4
  %v3_8048a16 = add i32 %v0_8048a16, 4
  %v1_8048a17 = inttoptr i32 %v3_8048a16 to i32*
  %v2_8048a17 = load i32, i32* %v1_8048a17, align 4
  store i32 %v2_8048a17, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v1_8048a17, align 4
  %v1_8048a1d = add i32 %v0_8048a16, 10388
  store i32 %v1_8048a1d, i32* %edx.global-to-local, align 4
  %v2_8048a24 = add i32 %v1_8048a1d, %v2_8048a11
  store i32 %v2_8048a24, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a24, i32* %v1_8048a16, align 4
  %v3_8048a28 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a28, i32* %eax.global-to-local, align 4
  %v0_8048a2d = load i32, i32* @esp, align 4
  %v1_8048a2d = inttoptr i32 %v0_8048a2d to i32*
  %v2_8048a2d = load i32, i32* %v1_8048a2d, align 4
  store i32 %v2_8048a2d, i32* %eax.global-to-local, align 4
  %v3_8048a2d = add i32 %v0_8048a2d, 4
  %v1_8048a2e = inttoptr i32 %v3_8048a2d to i32*
  %v2_8048a2e = load i32, i32* %v1_8048a2e, align 4
  store i32 %v2_8048a2e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048a2e, align 4
  store i32 43, i32* %v1_8048a2d, align 4
  %v3_8048a33 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048a33, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a33, i32* @ebx, align 4
  %v0_8048a3a = load i32, i32* @esp, align 4
  %v1_8048a3a = inttoptr i32 %v0_8048a3a to i32*
  %v2_8048a3a = load i32, i32* %v1_8048a3a, align 4
  store i32 %v2_8048a3a, i32* %eax.global-to-local, align 4
  %v1_8048a3b = add i32 %v0_8048a3a, 10388
  store i32 %v1_8048a3b, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a3b, i32* %v1_8048a3a, align 4
  %v2_8048a43 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048a43, i32* %eax.global-to-local, align 4
  %v0_8048a48 = load i32, i32* @esp, align 4
  %v1_8048a48 = inttoptr i32 %v0_8048a48 to i32*
  %v2_8048a48 = load i32, i32* %v1_8048a48, align 4
  store i32 %v2_8048a48, i32* %edx.global-to-local, align 4
  %v3_8048a48 = add i32 %v0_8048a48, 4
  %v1_8048a49 = inttoptr i32 %v3_8048a48 to i32*
  %v2_8048a49 = load i32, i32* %v1_8048a49, align 4
  store i32 %v2_8048a49, i32* %ecx.global-to-local, align 4
  %v0_8048a4a = load i32, i32* @ebx, align 4
  store i32 %v0_8048a4a, i32* %v1_8048a49, align 4
  %v1_8048a4b = add i32 %v0_8048a48, 10388
  store i32 %v1_8048a4b, i32* %edx.global-to-local, align 4
  %v2_8048a52 = add i32 %v1_8048a4b, %v2_8048a43
  store i32 %v2_8048a52, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a52, i32* %v1_8048a48, align 4
  %v3_8048a56 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a56, i32* %eax.global-to-local, align 4
  %v0_8048a5b = load i32, i32* @esp, align 4
  %v1_8048a5b = inttoptr i32 %v0_8048a5b to i32*
  %v2_8048a5b = load i32, i32* %v1_8048a5b, align 4
  store i32 %v2_8048a5b, i32* @ebx, align 4
  %v1_8048a5c = add i32 %v0_8048a5b, 10388
  store i32 %v1_8048a5c, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a5c, i32* %v1_8048a5b, align 4
  %v2_8048a64 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048a64, i32* %eax.global-to-local, align 4
  %v0_8048a69 = load i32, i32* @esp, align 4
  %v1_8048a69 = inttoptr i32 %v0_8048a69 to i32*
  %v2_8048a69 = load i32, i32* %v1_8048a69, align 4
  store i32 %v2_8048a69, i32* %edx.global-to-local, align 4
  %v3_8048a69 = add i32 %v0_8048a69, 4
  %v1_8048a6a = inttoptr i32 %v3_8048a69 to i32*
  %v2_8048a6a = load i32, i32* %v1_8048a6a, align 4
  store i32 %v2_8048a6a, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805497f.7 to i32), i32* %v1_8048a6a, align 4
  %v1_8048a70 = add i32 %v0_8048a69, 10388
  store i32 %v1_8048a70, i32* %edx.global-to-local, align 4
  %v2_8048a77 = add i32 %v1_8048a70, %v2_8048a64
  store i32 %v2_8048a77, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a77, i32* %v1_8048a69, align 4
  %v3_8048a7b = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a7b, i32* %eax.global-to-local, align 4
  %v0_8048a80 = load i32, i32* @esp, align 4
  %v1_8048a80 = inttoptr i32 %v0_8048a80 to i32*
  %v2_8048a80 = load i32, i32* %v1_8048a80, align 4
  store i32 %v2_8048a80, i32* %eax.global-to-local, align 4
  %v1_8048a81 = add i32 %v0_8048a80, 10388
  store i32 %v1_8048a81, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a81, i32* %v1_8048a80, align 4
  %v2_8048a89 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048a89, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a89, i32* @ebx, align 4
  %v0_8048a90 = load i32, i32* @esp, align 4
  %v1_8048a90 = inttoptr i32 %v0_8048a90 to i32*
  %v2_8048a90 = load i32, i32* %v1_8048a90, align 4
  store i32 %v2_8048a90, i32* %eax.global-to-local, align 4
  %v1_8048a91 = add i32 %v0_8048a90, 68
  %v2_8048a91 = inttoptr i32 %v1_8048a91 to i32*
  %v3_8048a91 = load i32, i32* %v2_8048a91, align 4
  store i32 %v3_8048a91, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a91, i32* %v1_8048a90, align 4
  %v2_8048a96 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048a96, i32* %eax.global-to-local, align 4
  %v0_8048a9b = load i32, i32* @esp, align 4
  %v1_8048a9e = add i32 %v0_8048a9b, 10388
  %v1_8048aa5 = load i32, i32* @ebx, align 4
  %v2_8048aa5 = add i32 %v1_8048a9e, %v1_8048aa5
  %v12_8048aa5 = icmp eq i32 %v2_8048aa5, 0
  store i1 %v12_8048aa5, i1* %zf.global-to-local, align 1
  store i32 %v2_8048aa5, i32* %edx.global-to-local, align 4
  %v2_8048aa7 = add i32 %v0_8048a9b, 8
  %v3_8048aa7 = inttoptr i32 %v2_8048aa7 to i32*
  store i32 %v2_8048aa5, i32* %v3_8048aa7, align 4
  %v1_8048aa8 = add i32 %v0_8048a9b, 4
  %v2_8048aa8 = inttoptr i32 %v1_8048aa8 to i32*
  store i32 10, i32* %v2_8048aa8, align 4
  %v3_8048aaa = inttoptr i32 %v0_8048a9b to i32*
  store i32 %v2_8048a96, i32* %v3_8048aaa, align 4
  %v0_8048aab = call i32 @function_8052050()
  store i32 %v0_8048aab, i32* %eax.global-to-local, align 4
  %v0_8048ab0 = load i32, i32* @esp, align 4
  %v1_8048ab0 = inttoptr i32 %v0_8048ab0 to i32*
  %v2_8048ab0 = load i32, i32* %v1_8048ab0, align 4
  store i32 %v2_8048ab0, i32* @ebx, align 4
  %v1_8048ab1 = add i32 %v0_8048ab0, 10388
  store i32 %v1_8048ab1, i32* %eax.global-to-local, align 4
  store i32 %v1_8048ab1, i32* %v1_8048ab0, align 4
  %v2_8048ab9 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048ab9, i32* %eax.global-to-local, align 4
  %v0_8048abe = load i32, i32* @esp, align 4
  %v1_8048abe = inttoptr i32 %v0_8048abe to i32*
  %v2_8048abe = load i32, i32* %v1_8048abe, align 4
  store i32 %v2_8048abe, i32* %edx.global-to-local, align 4
  %v3_8048abe = add i32 %v0_8048abe, 4
  %v1_8048abf = inttoptr i32 %v3_8048abe to i32*
  %v2_8048abf = load i32, i32* %v1_8048abf, align 4
  store i32 %v2_8048abf, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v1_8048abf, align 4
  %v1_8048ac5 = add i32 %v0_8048abe, 10388
  store i32 %v1_8048ac5, i32* %edx.global-to-local, align 4
  %v2_8048acc = add i32 %v1_8048ac5, %v2_8048ab9
  store i32 %v2_8048acc, i32* %eax.global-to-local, align 4
  store i32 %v2_8048acc, i32* %v1_8048abe, align 4
  %v3_8048ad0 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048ad0, i32* %eax.global-to-local, align 4
  %v0_8048ad5 = load i32, i32* @esp, align 4
  %v1_8048ad5 = add i32 %v0_8048ad5, 16
  %v6_8048ad5 = icmp eq i32 %v1_8048ad5, 0
  store i1 %v6_8048ad5, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048ad8

dec_label_pc_8048ad8:                             ; preds = %dec_label_pc_8048700, %dec_label_pc_80489c4
  %v0_8048ae3 = phi i32 [ %v1_80489b5, %dec_label_pc_8048700 ], [ %v1_8048ad5, %dec_label_pc_80489c4 ]
  %v0_8048ad8 = load i32, i32* @esi, align 4
  %v1_8048ad8 = add i32 %v0_8048ad8, 28
  %v2_8048ad8 = inttoptr i32 %v1_8048ad8 to i32*
  %v3_8048ad8 = load i32, i32* %v2_8048ad8, align 4
  store i32 %v3_8048ad8, i32* @ebx, align 4
  %v1_8048adb = icmp eq i32 %v3_8048ad8, 0
  store i1 %v1_8048adb, i1* %zf.global-to-local, align 1
  %tmp140 = icmp slt i32 %v3_8048ad8, 1
  br i1 %tmp140, label %dec_label_pc_8048bb4, label %dec_label_pc_8048ae3

dec_label_pc_8048ae3:                             ; preds = %dec_label_pc_8048ad8
  %v9_8048ae3 = icmp eq i32 %v0_8048ae3, 12
  store i1 %v9_8048ae3, i1* %zf.global-to-local, align 1
  %v1_8048ae6 = add i32 %v0_8048ae3, 10372
  store i32 %v1_8048ae6, i32* %ecx.global-to-local, align 4
  %v2_8048aed = add i32 %v0_8048ae3, -16
  %v3_8048aed = inttoptr i32 %v2_8048aed to i32*
  store i32 %v1_8048ae6, i32* %v3_8048aed, align 4
  %v2_8048aee = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048aee, i32* %eax.global-to-local, align 4
  %v0_8048af3 = load i32, i32* @esp, align 4
  %v1_8048af3 = inttoptr i32 %v0_8048af3 to i32*
  %v2_8048af3 = load i32, i32* %v1_8048af3, align 4
  store i32 %v2_8048af3, i32* %edx.global-to-local, align 4
  %v3_8048af3 = add i32 %v0_8048af3, 4
  %v1_8048af4 = inttoptr i32 %v3_8048af3 to i32*
  %v2_8048af4 = load i32, i32* %v1_8048af4, align 4
  store i32 %v2_8048af4, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054978.11 to i32), i32* %v1_8048af4, align 4
  %v1_8048afa = add i32 %v0_8048af3, 10388
  store i32 %v1_8048afa, i32* %edx.global-to-local, align 4
  %v2_8048b01 = add i32 %v1_8048afa, %v2_8048aee
  store i32 %v2_8048b01, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b01, i32* %v1_8048af3, align 4
  %v3_8048b05 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b05, i32* %eax.global-to-local, align 4
  %v0_8048b0a = load i32, i32* @esp, align 4
  %v1_8048b0a = add i32 %v0_8048b0a, 20916
  %v2_8048b0a = inttoptr i32 %v1_8048b0a to i32*
  store i32 0, i32* %v2_8048b0a, align 4
  %v0_8048b15 = load i32, i32* @esp, align 4
  %v1_8048b15 = add i32 %v0_8048b15, 16
  %v0_8048b18 = load i32, i32* @esi, align 4
  %v1_8048b18 = add i32 %v0_8048b18, 28
  %v2_8048b18 = inttoptr i32 %v1_8048b18 to i32*
  %v3_8048b18 = load i32, i32* %v2_8048b18, align 4
  store i32 %v3_8048b18, i32* %ebx.global-to-local, align 4
  %v1_8048b1b = icmp eq i32 %v3_8048b18, 0
  store i1 %v1_8048b1b, i1* %zf.global-to-local, align 1
  %tmp141 = icmp slt i32 %v3_8048b18, 1
  br i1 %tmp141, label %dec_label_pc_8048b8a, label %dec_label_pc_8048b1f

dec_label_pc_8048b1f:                             ; preds = %dec_label_pc_8048ae3
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8048b21

dec_label_pc_8048b21:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048b1f
  %v0_8048b24 = phi i32 [ %v1_8048b82, %dec_label_pc_8048b21 ], [ %v1_8048b15, %dec_label_pc_8048b1f ]
  %v0_8048b21 = phi i32 [ %v4_8048b85, %dec_label_pc_8048b21 ], [ 0, %dec_label_pc_8048b1f ]
  %v2_8048b21 = mul i32 %v0_8048b21, 128
  store i32 %v2_8048b21, i32* @ebx, align 4
  %v9_8048b24 = icmp eq i32 %v0_8048b24, 12
  store i1 %v9_8048b24, i1* %zf.global-to-local, align 1
  %v1_8048b27 = add i32 %v0_8048b24, 10372
  store i32 %v1_8048b27, i32* %ecx.global-to-local, align 4
  %v2_8048b2e = add i32 %v0_8048b24, -16
  %v3_8048b2e = inttoptr i32 %v2_8048b2e to i32*
  store i32 %v1_8048b27, i32* %v3_8048b2e, align 4
  %v2_8048b2f = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048b2f, i32* %eax.global-to-local, align 4
  %v0_8048b34 = load i32, i32* @esp, align 4
  %v1_8048b34 = inttoptr i32 %v0_8048b34 to i32*
  %v3_8048b34 = add i32 %v0_8048b34, 4
  %v0_8048b35 = load i32, i32* @ebx, align 4
  %v1_8048b35 = load i32, i32* @edi, align 4
  %v2_8048b35 = add i32 %v0_8048b35, 1472
  %v3_8048b35 = add i32 %v2_8048b35, %v1_8048b35
  store i32 %v3_8048b35, i32* %edx.global-to-local, align 4
  %v1_8048b3c = inttoptr i32 %v3_8048b34 to i32*
  %v2_8048b3c = load i32, i32* %v1_8048b3c, align 4
  store i32 %v2_8048b3c, i32* %ecx.global-to-local, align 4
  store i32 %v3_8048b35, i32* %v1_8048b3c, align 4
  %v1_8048b3e = add i32 %v0_8048b34, 10388
  store i32 %v1_8048b3e, i32* %edx.global-to-local, align 4
  %v2_8048b45 = add i32 %v1_8048b3e, %v2_8048b2f
  store i32 %v2_8048b45, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b45, i32* %v1_8048b34, align 4
  %v3_8048b49 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b49, i32* %eax.global-to-local, align 4
  %v0_8048b4e = load i32, i32* @esp, align 4
  %v1_8048b4e = inttoptr i32 %v0_8048b4e to i32*
  %v2_8048b4e = load i32, i32* %v1_8048b4e, align 4
  store i32 %v2_8048b4e, i32* @ebx, align 4
  %v1_8048b4f = add i32 %v0_8048b4e, 10388
  store i32 %v1_8048b4f, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048b4f, i32* %v1_8048b4e, align 4
  %v2_8048b57 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048b57, i32* %eax.global-to-local, align 4
  %v0_8048b5c = load i32, i32* @esp, align 4
  %v1_8048b5c = inttoptr i32 %v0_8048b5c to i32*
  %v2_8048b5c = load i32, i32* %v1_8048b5c, align 4
  store i32 %v2_8048b5c, i32* %edx.global-to-local, align 4
  %v3_8048b5c = add i32 %v0_8048b5c, 4
  %v1_8048b5d = inttoptr i32 %v3_8048b5c to i32*
  %v2_8048b5d = load i32, i32* %v1_8048b5d, align 4
  store i32 %v2_8048b5d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054981.12 to i32), i32* %v1_8048b5d, align 4
  %v1_8048b63 = add i32 %v0_8048b5c, 10388
  store i32 %v1_8048b63, i32* %edx.global-to-local, align 4
  %v2_8048b6a = add i32 %v1_8048b63, %v2_8048b57
  store i32 %v2_8048b6a, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b6a, i32* %v1_8048b5c, align 4
  %v3_8048b6e = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b6e, i32* %eax.global-to-local, align 4
  %v0_8048b73 = load i32, i32* @esp, align 4
  %v1_8048b73 = add i32 %v0_8048b73, 20916
  %v2_8048b73 = inttoptr i32 %v1_8048b73 to i32*
  %v3_8048b73 = load i32, i32* %v2_8048b73, align 4
  %v1_8048b7a = add i32 %v3_8048b73, 1
  store i32 %v1_8048b7a, i32* %ebx.global-to-local, align 4
  store i32 %v1_8048b7a, i32* %v2_8048b73, align 4
  %v0_8048b82 = load i32, i32* @esp, align 4
  %v1_8048b82 = add i32 %v0_8048b82, 16
  %v0_8048b85 = load i32, i32* @esi, align 4
  %v1_8048b85 = add i32 %v0_8048b85, 28
  %v2_8048b85 = inttoptr i32 %v1_8048b85 to i32*
  %v3_8048b85 = load i32, i32* %v2_8048b85, align 4
  %v4_8048b85 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8048b85 = sub i32 %v3_8048b85, %v4_8048b85
  %v11_8048b85 = xor i32 %v4_8048b85, %v3_8048b85
  %v12_8048b85 = xor i32 %v5_8048b85, %v3_8048b85
  %v13_8048b85 = and i32 %v12_8048b85, %v11_8048b85
  %v14_8048b85 = icmp slt i32 %v13_8048b85, 0
  %v15_8048b85 = icmp eq i32 %v5_8048b85, 0
  store i1 %v15_8048b85, i1* %zf.global-to-local, align 1
  %v16_8048b85 = icmp slt i32 %v5_8048b85, 0
  %v3_8048b88 = icmp eq i1 %v16_8048b85, %v14_8048b85
  %v4_8048b88 = icmp eq i1 %v15_8048b85, false
  %v5_8048b88 = and i1 %v4_8048b88, %v3_8048b88
  br i1 %v5_8048b88, label %dec_label_pc_8048b21, label %dec_label_pc_8048b8a

dec_label_pc_8048b8a:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048ae3
  %v0_8048b8a = phi i32 [ %v1_8048b15, %dec_label_pc_8048ae3 ], [ %v1_8048b82, %dec_label_pc_8048b21 ]
  %v9_8048b8a = icmp eq i32 %v0_8048b8a, 12
  store i1 %v9_8048b8a, i1* %zf.global-to-local, align 1
  %v1_8048b8d = add i32 %v0_8048b8a, 10372
  store i32 %v1_8048b8d, i32* %ecx.global-to-local, align 4
  %v2_8048b94 = add i32 %v0_8048b8a, -16
  %v3_8048b94 = inttoptr i32 %v2_8048b94 to i32*
  store i32 %v1_8048b8d, i32* %v3_8048b94, align 4
  %v2_8048b95 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048b95, i32* %eax.global-to-local, align 4
  %v0_8048b9a = load i32, i32* @esp, align 4
  %v1_8048b9a = inttoptr i32 %v0_8048b9a to i32*
  %v2_8048b9a = load i32, i32* %v1_8048b9a, align 4
  store i32 %v2_8048b9a, i32* @ebx, align 4
  %v3_8048b9a = add i32 %v0_8048b9a, 4
  %v1_8048b9b = inttoptr i32 %v3_8048b9a to i32*
  %v2_8048b9b = load i32, i32* %v1_8048b9b, align 4
  store i32 %v2_8048b9b, i32* %edi.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v1_8048b9b, align 4
  %v1_8048ba1 = add i32 %v0_8048b9a, 10388
  store i32 %v1_8048ba1, i32* %edx.global-to-local, align 4
  %v2_8048ba8 = add i32 %v1_8048ba1, %v2_8048b95
  store i32 %v2_8048ba8, i32* %eax.global-to-local, align 4
  store i32 %v2_8048ba8, i32* %v1_8048b9a, align 4
  %v3_8048bac = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bac, i32* %eax.global-to-local, align 4
  %v0_8048bb1 = load i32, i32* @esp, align 4
  %v1_8048bb1 = add i32 %v0_8048bb1, 16
  %v6_8048bb1 = icmp eq i32 %v1_8048bb1, 0
  store i1 %v6_8048bb1, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048bb4

dec_label_pc_8048bb4:                             ; preds = %dec_label_pc_8048ad8, %dec_label_pc_8048b8a
  %v0_8048bb4 = phi i32 [ %v0_8048ae3, %dec_label_pc_8048ad8 ], [ %v1_8048bb1, %dec_label_pc_8048b8a ]
  %v9_8048bb4 = icmp eq i32 %v0_8048bb4, 12
  store i1 %v9_8048bb4, i1* %zf.global-to-local, align 1
  %v1_8048bb7 = add i32 %v0_8048bb4, 10372
  store i32 %v1_8048bb7, i32* %ecx.global-to-local, align 4
  %v2_8048bbe = add i32 %v0_8048bb4, -16
  %v3_8048bbe = inttoptr i32 %v2_8048bbe to i32*
  store i32 %v1_8048bb7, i32* %v3_8048bbe, align 4
  %v2_8048bbf = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048bbf, i32* %eax.global-to-local, align 4
  %v0_8048bc4 = load i32, i32* @esp, align 4
  %v1_8048bc4 = inttoptr i32 %v0_8048bc4 to i32*
  %v2_8048bc4 = load i32, i32* %v1_8048bc4, align 4
  store i32 %v2_8048bc4, i32* %edx.global-to-local, align 4
  %v3_8048bc4 = add i32 %v0_8048bc4, 4
  %v1_8048bc5 = inttoptr i32 %v3_8048bc4 to i32*
  %v2_8048bc5 = load i32, i32* %v1_8048bc5, align 4
  store i32 %v2_8048bc5, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v1_8048bc5, align 4
  %v1_8048bcb = add i32 %v0_8048bc4, 10388
  store i32 %v1_8048bcb, i32* %edx.global-to-local, align 4
  %v2_8048bd2 = add i32 %v1_8048bcb, %v2_8048bbf
  store i32 %v2_8048bd2, i32* %eax.global-to-local, align 4
  store i32 %v2_8048bd2, i32* %v1_8048bc4, align 4
  %v3_8048bd6 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bd6, i32* %eax.global-to-local, align 4
  %v0_8048bdb = load i32, i32* @esp, align 4
  %v1_8048bdb = add i32 %v0_8048bdb, 16
  %v1_8048bde = add i32 %v0_8048bdb, 68
  %v2_8048bde = inttoptr i32 %v1_8048bde to i32*
  %v3_8048bde = load i32, i32* %v2_8048bde, align 4
  store i32 %v3_8048bde, i32* @edi, align 4
  %v1_8048be2 = icmp eq i32 %v3_8048bde, 0
  store i1 %v1_8048be2, i1* %zf.global-to-local, align 1
  br i1 %v1_8048be2, label %dec_label_pc_8048c10, label %dec_label_pc_8048be6

dec_label_pc_8048be6:                             ; preds = %dec_label_pc_8048bb4
  %v9_8048be6 = icmp eq i32 %v0_8048bdb, -4
  store i1 %v9_8048be6, i1* %zf.global-to-local, align 1
  %v1_8048be9 = add i32 %v0_8048bdb, 10388
  store i32 %v1_8048be9, i32* %ecx.global-to-local, align 4
  %v3_8048bf0 = inttoptr i32 %v0_8048bdb to i32*
  store i32 %v1_8048be9, i32* %v3_8048bf0, align 4
  %v2_8048bf1 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8048bf1, i32* %eax.global-to-local, align 4
  %v0_8048bf6 = load i32, i32* @esp, align 4
  %v1_8048bf6 = inttoptr i32 %v0_8048bf6 to i32*
  %v2_8048bf6 = load i32, i32* %v1_8048bf6, align 4
  store i32 %v2_8048bf6, i32* %ecx.global-to-local, align 4
  %v3_8048bf6 = add i32 %v0_8048bf6, 4
  %v1_8048bf7 = inttoptr i32 %v3_8048bf6 to i32*
  %v2_8048bf7 = load i32, i32* %v1_8048bf7, align 4
  store i32 %v2_8048bf7, i32* @ebx, align 4
  %v1_8048bf8 = add i32 %v0_8048bf6, 68
  %v2_8048bf8 = inttoptr i32 %v1_8048bf8 to i32*
  %v3_8048bf8 = load i32, i32* %v2_8048bf8, align 4
  store i32 %v3_8048bf8, i32* %v1_8048bf7, align 4
  %v1_8048bfd = add i32 %v0_8048bf6, 10388
  store i32 %v1_8048bfd, i32* %edx.global-to-local, align 4
  %v2_8048c04 = add i32 %v1_8048bfd, %v2_8048bf1
  store i32 %v2_8048c04, i32* %eax.global-to-local, align 4
  store i32 %v2_8048c04, i32* %v1_8048bf6, align 4
  %v3_8048c08 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048c08, i32* %eax.global-to-local, align 4
  %v0_8048c0d = load i32, i32* @esp, align 4
  %v1_8048c0d = add i32 %v0_8048c0d, 16
  %v6_8048c0d = icmp eq i32 %v1_8048c0d, 0
  store i1 %v6_8048c0d, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c10

dec_label_pc_8048c10:                             ; preds = %dec_label_pc_8048bb4, %dec_label_pc_8048be6
  %v1_8048c10 = phi i32 [ %v1_8048bdb, %dec_label_pc_8048bb4 ], [ %v1_8048c0d, %dec_label_pc_8048be6 ]
  %v0_8048c10 = phi i32 [ %v3_8048bd6, %dec_label_pc_8048bb4 ], [ %v3_8048c08, %dec_label_pc_8048be6 ]
  %v2_8048c10 = add i32 %v1_8048c10, -4
  %v3_8048c10 = inttoptr i32 %v2_8048c10 to i32*
  store i32 %v0_8048c10, i32* %v3_8048c10, align 4
  %v0_8048c11 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048c11 = add i32 %v1_8048c10, -8
  %v3_8048c11 = inttoptr i32 %v2_8048c11 to i32*
  store i32 %v0_8048c11, i32* %v3_8048c11, align 4
  %v0_8048c12 = load i32, i32* @esi, align 4
  %v2_8048c12 = add i32 %v1_8048c10, -12
  %v3_8048c12 = inttoptr i32 %v2_8048c12 to i32*
  store i32 %v0_8048c12, i32* %v3_8048c12, align 4
  %v1_8048c13 = add i32 %v1_8048c10, 96
  %v2_8048c13 = inttoptr i32 %v1_8048c13 to i32*
  %v3_8048c13 = load i32, i32* %v2_8048c13, align 4
  store i32 %v3_8048c13, i32* %eax.global-to-local, align 4
  %v2_8048c17 = add i32 %v1_8048c10, -16
  %v3_8048c17 = inttoptr i32 %v2_8048c17 to i32*
  store i32 %v3_8048c13, i32* %v3_8048c17, align 4
  %v0_8048c18 = call i32 @function_8051fb0()
  store i32 %v0_8048c18, i32* %eax.global-to-local, align 4
  %v0_8048c1d = load i32, i32* @esp, align 4
  %v1_8048c1d = add i32 %v0_8048c1d, 16
  %v3_8048c20 = trunc i32 %v0_8048c18 to i8
  %v4_8048c20 = icmp eq i8 %v3_8048c20, 0
  store i1 %v4_8048c20, i1* %zf.global-to-local, align 1
  br i1 %v4_8048c20, label %dec_label_pc_804979e, label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c10, %dec_label_pc_804979e
  %v0_8048c28 = phi i32 [ %v1_8048c1d, %dec_label_pc_8048c10 ], [ %v1_80497ab, %dec_label_pc_804979e ]
  %v9_8048c28 = icmp eq i32 %v0_8048c28, 12
  store i1 %v9_8048c28, i1* %zf.global-to-local, align 1
  %v1_8048c2b = add i32 %v0_8048c28, 10372
  store i32 %v1_8048c2b, i32* %ecx.global-to-local, align 4
  %v2_8048c32 = add i32 %v0_8048c28, -16
  %v3_8048c32 = inttoptr i32 %v2_8048c32 to i32*
  store i32 %v1_8048c2b, i32* %v3_8048c32, align 4
  %v2_8048c33 = call i32 @function_8051c40(i8* %v1_8048752)
  %v0_8048c38 = load i32, i32* @esp, align 4
  %v1_8048c38 = add i32 %v0_8048c38, -4
  %v2_8048c38 = inttoptr i32 %v1_8048c38 to i32*
  store i32 16384, i32* %v2_8048c38, align 4
  %v2_8048c3d = add i32 %v0_8048c38, -8
  %v3_8048c3d = inttoptr i32 %v2_8048c3d to i32*
  store i32 %v2_8048c33, i32* %v3_8048c3d, align 4
  %v1_8048c3e = add i32 %v0_8048c38, 10388
  store i32 %v1_8048c3e, i32* %eax.global-to-local, align 4
  %v2_8048c45 = add i32 %v0_8048c38, -12
  %v3_8048c45 = inttoptr i32 %v2_8048c45 to i32*
  store i32 %v1_8048c3e, i32* %v3_8048c45, align 4
  %v0_8048c46 = load i32, i32* @esi, align 4
  %v1_8048c46 = add i32 %v0_8048c46, -1440
  %v2_8048c46 = inttoptr i32 %v1_8048c46 to i32*
  %v3_8048c46 = load i32, i32* %v2_8048c46, align 4
  store i32 %v3_8048c46, i32* %ecx.global-to-local, align 4
  %v2_8048c4c = add i32 %v0_8048c38, -16
  %v3_8048c4c = inttoptr i32 %v2_8048c4c to i32*
  store i32 %v3_8048c46, i32* %v3_8048c4c, align 4
  %v0_8048c4d = call i32 @function_80528e3()
  store i32 %v0_8048c4d, i32* %eax.global-to-local, align 4
  %v0_8048c52 = load i32, i32* @esp, align 4
  %v1_8048c52 = add i32 %v0_8048c52, 112
  %v2_8048c52 = inttoptr i32 %v1_8048c52 to i32*
  %v3_8048c52 = load i32, i32* %v2_8048c52, align 4
  store i32 %v3_8048c52, i32* %edx.global-to-local, align 4
  %v0_8048c56 = load i32, i32* @esi, align 4
  %v1_8048c56 = add i32 %v0_8048c56, -1440
  %v2_8048c56 = inttoptr i32 %v1_8048c56 to i32*
  %v3_8048c56 = load i32, i32* %v2_8048c56, align 4
  store i32 %v3_8048c56, i32* %eax.global-to-local, align 4
  %v2_8048c5c = add i32 %v0_8048c56, -1428
  %v3_8048c5c = inttoptr i32 %v2_8048c5c to i32*
  store i32 %v3_8048c52, i32* %v3_8048c5c, align 4
  %v0_8048c62 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048c62, i32* %edx.global-to-local, align 4
  %v0_8048c64 = load i32, i32* @esi, align 4
  %v1_8048c64 = add i32 %v0_8048c64, -1436
  %v2_8048c64 = inttoptr i32 %v1_8048c64 to i8*
  store i8 6, i8* %v2_8048c64, align 1
  %v0_8048c6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8048c6b = urem i32 %v0_8048c6b, 32
  store i32 %v1_8048c6b, i32* %eax.global-to-local, align 4
  %v0_8048c6e = load i32, i32* %edx.global-to-local, align 4
  %v2_8048c6e = udiv i32 %v0_8048c6e, 32
  store i32 %v2_8048c6e, i32* %edx.global-to-local, align 4
  %v0_8048c71 = load i32, i32* @esp, align 4
  %v2_8048c71 = mul nuw nsw i32 %v2_8048c6e, 4
  %v3_8048c71 = add nuw nsw i32 %v2_8048c71, 20772
  %v4_8048c71 = add i32 %v3_8048c71, %v0_8048c71
  %v5_8048c71 = inttoptr i32 %v4_8048c71 to i32*
  %v6_8048c71 = load i32, i32* %v5_8048c71, align 4
  %v9_8048c71 = shl i32 1, %v1_8048c6b
  %v12_8048c71 = or i32 %v6_8048c71, %v9_8048c71
  %v16_8048c71 = add i32 %v0_8048c71, 20772
  %v17_8048c71 = add i32 %v16_8048c71, %v2_8048c71
  %v18_8048c71 = inttoptr i32 %v17_8048c71 to i32*
  store i32 %v12_8048c71, i32* %v18_8048c71, align 4
  %v0_8048c79 = load i32, i32* @esp, align 4
  %v1_8048c79 = add i32 %v0_8048c79, 32
  %v0_8048c7c = load i32, i32* @esi, align 4
  %v1_8048c7c = add i32 %v0_8048c7c, -1440
  %v2_8048c7c = inttoptr i32 %v1_8048c7c to i32*
  %v3_8048c7c = load i32, i32* %v2_8048c7c, align 4
  store i32 %v3_8048c7c, i32* %eax.global-to-local, align 4
  %v1_8048c82 = add i32 %v0_8048c79, 104
  %v2_8048c82 = inttoptr i32 %v1_8048c82 to i32*
  %v3_8048c82 = load i32, i32* %v2_8048c82, align 4
  %v5_8048c82 = sub i32 %v3_8048c82, %v3_8048c7c
  %v11_8048c82 = xor i32 %v3_8048c82, %v3_8048c7c
  %v12_8048c82 = xor i32 %v5_8048c82, %v3_8048c82
  %v13_8048c82 = and i32 %v12_8048c82, %v11_8048c82
  %v14_8048c82 = icmp slt i32 %v13_8048c82, 0
  %v15_8048c82 = icmp eq i32 %v5_8048c82, 0
  store i1 %v15_8048c82, i1* %zf.global-to-local, align 1
  %v16_8048c82 = icmp slt i32 %v5_8048c82, 0
  %v2_8048c86 = icmp eq i1 %v16_8048c82, %v14_8048c82
  br i1 %v2_8048c86, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_80486ee
  store i8 0, i8* %v2_80485a5, align 1
  br label %dec_label_pc_80485be

dec_label_pc_8048c9d:                             ; preds = %dec_label_pc_8048537
  %v0_8048c9d = load i32, i32* @esp, align 4
  %v1_8048c9d = add i32 %v0_8048c9d, 80
  %v2_8048c9d = inttoptr i32 %v1_8048c9d to i32*
  %v3_8048c9d = load i32, i32* %v2_8048c9d, align 4
  store i32 %v3_8048c9d, i32* %eax.global-to-local, align 4
  %v1_8048ca1 = add i32 %v0_80485a5, -1432
  %v2_8048ca1 = inttoptr i32 %v1_8048ca1 to i32*
  %v3_8048ca1 = load i32, i32* %v2_8048ca1, align 4
  store i32 %v3_8048ca1, i32* @ebx, align 4
  %v2_8048ca7 = sub i32 %v3_8048c9d, %v3_8048ca1
  store i32 %v2_8048ca7, i32* %eax.global-to-local, align 4
  %v9_8048ca9 = icmp eq i32 %v2_8048ca7, 30
  store i1 %v9_8048ca9, i1* %zf.global-to-local, align 1
  %tmp240 = icmp ult i32 %v2_8048ca7, 31
  br i1 %tmp240, label %dec_label_pc_8048cb2, label %dec_label_pc_804855f

dec_label_pc_8048cb2:                             ; preds = %dec_label_pc_8048c9d
  %v1_8048cb2 = add i32 %v0_80485a5, -1440
  %v2_8048cb2 = inttoptr i32 %v1_8048cb2 to i32*
  %v3_8048cb2 = load i32, i32* %v2_8048cb2, align 4
  %v1_8048cba = urem i32 %v3_8048cb2, 32
  store i32 %v1_8048cba, i32* %eax.global-to-local, align 4
  %v2_8048cbd = udiv i32 %v3_8048cb2, 32
  store i32 %v2_8048cbd, i32* %edx.global-to-local, align 4
  %v2_8048cc0 = mul nuw nsw i32 %v2_8048cbd, 4
  %v3_8048cc0 = add i32 %v0_8048c9d, 20612
  %v4_8048cc0 = add i32 %v3_8048cc0, %v2_8048cc0
  %v5_8048cc0 = inttoptr i32 %v4_8048cc0 to i32*
  %v6_8048cc0 = load i32, i32* %v5_8048cc0, align 4
  %v9_8048cc0 = shl i32 1, %v1_8048cba
  %v12_8048cc0 = or i32 %v6_8048cc0, %v9_8048cc0
  store i32 %v12_8048cc0, i32* %v5_8048cc0, align 4
  %v0_8048cc8 = load i32, i32* @esi, align 4
  %v1_8048cc8 = add i32 %v0_8048cc8, -1440
  %v2_8048cc8 = inttoptr i32 %v1_8048cc8 to i32*
  %v3_8048cc8 = load i32, i32* %v2_8048cc8, align 4
  store i32 %v3_8048cc8, i32* %eax.global-to-local, align 4
  %v0_8048cce = load i32, i32* @esp, align 4
  %v1_8048cce = add i32 %v0_8048cce, 72
  %v2_8048cce = inttoptr i32 %v1_8048cce to i32*
  %v3_8048cce = load i32, i32* %v2_8048cce, align 4
  %v5_8048cce = sub i32 %v3_8048cce, %v3_8048cc8
  %v11_8048cce = xor i32 %v3_8048cce, %v3_8048cc8
  %v12_8048cce = xor i32 %v5_8048cce, %v3_8048cce
  %v13_8048cce = and i32 %v12_8048cce, %v11_8048cce
  %v14_8048cce = icmp slt i32 %v13_8048cce, 0
  %v15_8048cce = icmp eq i32 %v5_8048cce, 0
  store i1 %v15_8048cce, i1* %zf.global-to-local, align 1
  %v16_8048cce = icmp slt i32 %v5_8048cce, 0
  %v2_8048cd2 = icmp eq i1 %v16_8048cce, %v14_8048cce
  br i1 %v2_8048cd2, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048cdd:                             ; preds = %dec_label_pc_8048582
  %v1_8048cdd = add i32 %v0_8048597, 72
  %v2_8048cdd = inttoptr i32 %v1_8048cdd to i32*
  %v3_8048cdd = load i32, i32* %v2_8048cdd, align 4
  store i32 %v3_8048cdd, i32* %eax.global-to-local, align 4
  %v1_8048ce1 = icmp eq i32 %v3_8048cdd, 0
  store i1 %v1_8048ce1, i1* %zf.global-to-local, align 1
  br i1 %v1_8048ce1, label %dec_label_pc_80484e5, label %dec_label_pc_8048ce9

dec_label_pc_8048ce9:                             ; preds = %dec_label_pc_8048cdd
  %v1_8048ce9 = add i32 %v0_8048597, 20888
  %v2_8048ce9 = inttoptr i32 %v1_8048ce9 to i32*
  store i32 0, i32* %v2_8048ce9, align 4
  %v0_8048cf4 = load i32, i32* @esp, align 4
  %v1_8048cf4 = add i32 %v0_8048cf4, 20884
  %v2_8048cf4 = inttoptr i32 %v1_8048cf4 to i32*
  store i32 1, i32* %v2_8048cf4, align 4
  %v0_8048cff = load i32, i32* @esp, align 4
  %v9_8048cff = icmp eq i32 %v0_8048cff, 12
  store i1 %v9_8048cff, i1* %zf.global-to-local, align 1
  %v1_8048d02 = add i32 %v0_8048cff, 20884
  store i32 %v1_8048d02, i32* %eax.global-to-local, align 4
  %v2_8048d09 = add i32 %v0_8048cff, -16
  %v3_8048d09 = inttoptr i32 %v2_8048d09 to i32*
  store i32 %v1_8048d02, i32* %v3_8048d09, align 4
  %v1_8048d0a = add i32 %v0_8048cff, -20
  %v2_8048d0a = inttoptr i32 %v1_8048d0a to i32*
  store i32 0, i32* %v2_8048d0a, align 4
  %v1_8048d0c = add i32 %v0_8048cff, 20612
  store i32 %v1_8048d0c, i32* %edx.global-to-local, align 4
  %v2_8048d13 = add i32 %v0_8048cff, -24
  %v3_8048d13 = inttoptr i32 %v2_8048d13 to i32*
  store i32 %v1_8048d0c, i32* %v3_8048d13, align 4
  %v1_8048d14 = add i32 %v0_8048cff, 20740
  store i32 %v1_8048d14, i32* %ecx.global-to-local, align 4
  %v2_8048d1b = add i32 %v0_8048cff, -28
  %v3_8048d1b = inttoptr i32 %v2_8048d1b to i32*
  store i32 %v1_8048d14, i32* %v3_8048d1b, align 4
  %v1_8048d1c = add i32 %v0_8048cff, 72
  %v2_8048d1c = inttoptr i32 %v1_8048d1c to i32*
  %v3_8048d1c = load i32, i32* %v2_8048d1c, align 4
  store i32 %v3_8048d1c, i32* %eax.global-to-local, align 4
  %v2_8048d20 = add i32 %v0_8048cff, -32
  %v3_8048d20 = inttoptr i32 %v2_8048d20 to i32*
  store i32 %v3_8048d1c, i32* %v3_8048d20, align 4
  %v0_8048d21 = call i32 @function_80523ba()
  store i32 %v0_8048d21, i32* %eax.global-to-local, align 4
  %v0_8048d26 = load i32, i32* @esp, align 4
  %v9_8048d26 = icmp eq i32 %v0_8048d26, -20
  store i1 %v9_8048d26, i1* %zf.global-to-local, align 1
  store i32 %v0_8048d21, i32* @ebx, align 4
  %v1_8048d2b = add i32 %v0_8048d26, 16
  %v2_8048d2b = inttoptr i32 %v1_8048d2b to i32*
  store i32 0, i32* %v2_8048d2b, align 4
  %v0_8048d2d = call i32 @function_8052474()
  store i32 %v0_8048d2d, i32* %eax.global-to-local, align 4
  %v1_8048d32 = load i32, i32* @esp, align 4
  %v2_8048d32 = add i32 %v1_8048d32, 132
  %v3_8048d32 = inttoptr i32 %v2_8048d32 to i32*
  store i32 %v0_8048d2d, i32* %v3_8048d32, align 4
  %v0_8048d39 = load i32, i32* @esp, align 4
  %v1_8048d39 = add i32 %v0_8048d39, 16
  %v0_8048d3c = load i32, i32* @ebx, align 4
  %v1_8048d3c = icmp eq i32 %v0_8048d3c, 0
  store i1 %v1_8048d3c, i1* %zf.global-to-local, align 1
  %tmp142 = icmp slt i32 %v0_8048d3c, 1
  br i1 %tmp142, label %dec_label_pc_80484e5, label %dec_label_pc_8048d44

dec_label_pc_8048d44:                             ; preds = %dec_label_pc_8048ce9
  %v1_8048d44 = add i32 %v0_8048d39, 48
  %v2_8048d44 = inttoptr i32 %v1_8048d44 to i32*
  %v3_8048d44 = load i32, i32* %v2_8048d44, align 4
  store i32 %v3_8048d44, i32* %eax.global-to-local, align 4
  %v1_8048d48 = add i32 %v0_8048d39, 60
  %v2_8048d48 = inttoptr i32 %v1_8048d48 to i32*
  store i32 0, i32* %v2_8048d48, align 4
  %v0_8048d50 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048d50, i32* %edx.global-to-local, align 4
  %v1_8048d52 = load i32, i32* @esp, align 4
  %v2_8048d52 = add i32 %v1_8048d52, 92
  %v3_8048d52 = inttoptr i32 %v2_8048d52 to i32*
  store i32 %v0_8048d50, i32* %v3_8048d52, align 4
  %v0_8048db9.pre = load i32, i32* @esp, align 4
  %v0_8048dbd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048d58:                             ; preds = %dec_label_pc_8048dd2, %dec_label_pc_8048e2e
  %v1_8048e7a = phi i32 [ %v0_8048ddc, %dec_label_pc_8048dd2 ], [ %v0_8048d60.pre, %dec_label_pc_8048e2e ]
  %v0_8048d58 = phi i32 [ %v3_8048dc7, %dec_label_pc_8048dd2 ], [ %v0_8048d58.pre, %dec_label_pc_8048e2e ]
  %v2_8048d5a = udiv i32 %v0_8048d58, 32
  store i32 %v2_8048d5a, i32* %ecx.global-to-local, align 4
  %v1_8048d5d = urem i32 %v0_8048d58, 32
  store i32 %v1_8048d5d, i32* %eax.global-to-local, align 4
  %v2_8048d60 = mul nuw nsw i32 %v2_8048d5a, 4
  %v3_8048d60 = add i32 %v1_8048e7a, 20740
  %v4_8048d60 = add i32 %v3_8048d60, %v2_8048d60
  %v5_8048d60 = inttoptr i32 %v4_8048d60 to i32*
  %v6_8048d60 = load i32, i32* %v5_8048d60, align 4
  %v9_8048d60 = shl i32 1, %v1_8048d5d
  %v10_8048d60 = and i32 %v6_8048d60, %v9_8048d60
  %v11_8048d60 = icmp ne i32 %v10_8048d60, 0
  %v1_8048d68 = zext i1 %v11_8048d60 to i32
  store i32 %v1_8048d68, i32* %eax.global-to-local, align 4
  %v4_8048d6b = icmp eq i1 %v11_8048d60, false
  store i1 %v4_8048d6b, i1* %zf.global-to-local, align 1
  br i1 %v4_8048d6b, label %dec_label_pc_8048d91, label %dec_label_pc_8048d6f

dec_label_pc_8048d6f:                             ; preds = %dec_label_pc_8048d58
  %v1_8048d6f = add i32 %v1_8048e7a, 92
  %v2_8048d6f = inttoptr i32 %v1_8048d6f to i32*
  %v3_8048d6f = load i32, i32* %v2_8048d6f, align 4
  store i32 %v3_8048d6f, i32* %edx.global-to-local, align 4
  %v1_8048d73 = add i32 %v3_8048d6f, -1448
  %v2_8048d73 = inttoptr i32 %v1_8048d73 to i8*
  %v3_8048d73 = load i8, i8* %v2_8048d73, align 1
  %v4_8048d73 = zext i8 %v3_8048d73 to i32
  store i32 %v4_8048d73, i32* @eax, align 4
  %v10_8048d79 = icmp eq i8 %v3_8048d73, 6
  store i1 %v10_8048d79, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d79, label %dec_label_pc_8048e7a, label %dec_label_pc_8048d81

dec_label_pc_8048d81:                             ; preds = %dec_label_pc_8048d6f
  %v10_8048d81 = icmp eq i8 %v3_8048d73, 7
  store i1 %v10_8048d81, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d81, label %dec_label_pc_80494af, label %dec_label_pc_8048d89

dec_label_pc_8048d89:                             ; preds = %dec_label_pc_8048d81
  %v10_8048d89 = icmp eq i8 %v3_8048d73, 10
  store i1 %v10_8048d89, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d89, label %dec_label_pc_80497b3, label %dec_label_pc_8048d91

dec_label_pc_8048d91:                             ; preds = %dec_label_pc_80495e0, %dec_label_pc_8049b0f, %dec_label_pc_8049c31, %dec_label_pc_8049ae5, %dec_label_pc_8048d89, %dec_label_pc_8048d58, %dec_label_pc_8048db9, %dec_label_pc_8049e5a, %dec_label_pc_8049c42, %dec_label_pc_8049af8, %dec_label_pc_8049abf, %dec_label_pc_8049a49, %dec_label_pc_80497f9, %dec_label_pc_804949f, %dec_label_pc_8048e4a, %dec_label_pc_80496c3
  %v0_8048d91 = load i32, i32* @esp, align 4
  %v1_8048d91 = add i32 %v0_8048d91, 44
  %v2_8048d91 = inttoptr i32 %v1_8048d91 to i32*
  %v3_8048d91 = load i32, i32* %v2_8048d91, align 4
  store i32 %v3_8048d91, i32* %edx.global-to-local, align 4
  %v1_8048d95 = add i32 %v0_8048d91, 92
  %v2_8048d95 = inttoptr i32 %v1_8048d95 to i32*
  %v3_8048d95 = load i32, i32* %v2_8048d95, align 4
  %v1_8048d99 = add i32 %v3_8048d95, 3140
  store i32 %v1_8048d99, i32* %eax.global-to-local, align 4
  %v1_8048d9e = add i32 %v3_8048d91, 1
  store i32 %v1_8048d9e, i32* %edx.global-to-local, align 4
  store i32 %v1_8048d9e, i32* %v2_8048d91, align 4
  %v0_8048da3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048da3 = load i32, i32* @esp, align 4
  %v2_8048da3 = add i32 %v1_8048da3, 92
  %v3_8048da3 = inttoptr i32 %v2_8048da3 to i32*
  store i32 %v0_8048da3, i32* %v3_8048da3, align 4
  %v0_8048da7 = load i32, i32* @esp, align 4
  %v1_8048da7 = add i32 %v0_8048da7, 112
  %v2_8048da7 = inttoptr i32 %v1_8048da7 to i32*
  %v3_8048da7 = load i32, i32* %v2_8048da7, align 4
  store i32 %v3_8048da7, i32* %eax.global-to-local, align 4
  %v1_8048dab = add i32 %v0_8048da7, 44
  %v2_8048dab = inttoptr i32 %v1_8048dab to i32*
  %v3_8048dab = load i32, i32* %v2_8048dab, align 4
  %v15_8048dab = icmp eq i32 %v3_8048dab, %v3_8048da7
  store i1 %v15_8048dab, i1* %zf.global-to-local, align 1
  br i1 %v15_8048dab, label %dec_label_pc_80484e5, label %dec_label_pc_8048db5

dec_label_pc_8048db5:                             ; preds = %dec_label_pc_8048d91
  %v1_8048db5 = add i32 %v0_8048da7, 92
  %v2_8048db5 = inttoptr i32 %v1_8048db5 to i32*
  %v3_8048db5 = load i32, i32* %v2_8048db5, align 4
  store i32 %v3_8048db5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048db9:                             ; preds = %dec_label_pc_8048d44, %dec_label_pc_8048db5
  %v0_8048dbd = phi i32 [ %v0_8048dbd.pre, %dec_label_pc_8048d44 ], [ %v3_8048db5, %dec_label_pc_8048db5 ]
  %v1_8048dc3 = phi i32 [ %v0_8048db9.pre, %dec_label_pc_8048d44 ], [ %v0_8048da7, %dec_label_pc_8048db5 ]
  %v1_8048db9 = add i32 %v1_8048dc3, 92
  %v2_8048db9 = inttoptr i32 %v1_8048db9 to i32*
  %v3_8048db9 = load i32, i32* %v2_8048db9, align 4
  store i32 %v3_8048db9, i32* %eax.global-to-local, align 4
  %v1_8048dbd = add i32 %v0_8048dbd, -1452
  store i32 %v1_8048dbd, i32* %edx.global-to-local, align 4
  %v2_8048dc3 = add i32 %v1_8048dc3, 76
  %v3_8048dc3 = inttoptr i32 %v2_8048dc3 to i32*
  store i32 %v1_8048dbd, i32* %v3_8048dc3, align 4
  %v0_8048dc7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048dc7 = add i32 %v0_8048dc7, -1452
  %v2_8048dc7 = inttoptr i32 %v1_8048dc7 to i32*
  %v3_8048dc7 = load i32, i32* %v2_8048dc7, align 4
  store i32 %v3_8048dc7, i32* %ecx.global-to-local, align 4
  %v10_8048dcd = icmp eq i32 %v3_8048dc7, -1
  store i1 %v10_8048dcd, i1* %zf.global-to-local, align 1
  br i1 %v10_8048dcd, label %dec_label_pc_8048d91, label %dec_label_pc_8048dd2

dec_label_pc_8048dd2:                             ; preds = %dec_label_pc_8048db9
  %v2_8048dd6 = udiv i32 %v3_8048dc7, 32
  store i32 %v2_8048dd6, i32* %edx.global-to-local, align 4
  %v1_8048dd9 = urem i32 %v3_8048dc7, 32
  store i32 %v1_8048dd9, i32* %eax.global-to-local, align 4
  %v0_8048ddc = load i32, i32* @esp, align 4
  %v2_8048ddc = mul nuw nsw i32 %v2_8048dd6, 4
  %v3_8048ddc = add nuw nsw i32 %v2_8048ddc, 20612
  %v4_8048ddc = add i32 %v3_8048ddc, %v0_8048ddc
  %v5_8048ddc = inttoptr i32 %v4_8048ddc to i32*
  %v6_8048ddc = load i32, i32* %v5_8048ddc, align 4
  %v9_8048ddc = shl i32 1, %v1_8048dd9
  %v10_8048ddc = and i32 %v6_8048ddc, %v9_8048ddc
  %v11_8048ddc = icmp ne i32 %v10_8048ddc, 0
  %v1_8048de4 = zext i1 %v11_8048ddc to i32
  store i32 %v1_8048de4, i32* %eax.global-to-local, align 4
  %v4_8048de7 = icmp eq i1 %v11_8048ddc, false
  store i1 %v4_8048de7, i1* %zf.global-to-local, align 1
  br i1 %v4_8048de7, label %dec_label_pc_8048d58, label %dec_label_pc_8048def

dec_label_pc_8048def:                             ; preds = %dec_label_pc_8048dd2
  %v1_8048def = add i32 %v0_8048ddc, 20896
  %v2_8048def = inttoptr i32 %v1_8048def to i32*
  store i32 0, i32* %v2_8048def, align 4
  %v0_8048dfa = load i32, i32* @esp, align 4
  %v1_8048dfa = add i32 %v0_8048dfa, 20892
  %v2_8048dfa = inttoptr i32 %v1_8048dfa to i32*
  store i32 4, i32* %v2_8048dfa, align 4
  %v0_8048e05 = load i32, i32* @esp, align 4
  %v9_8048e05 = icmp eq i32 %v0_8048e05, 12
  store i1 %v9_8048e05, i1* %zf.global-to-local, align 1
  %v1_8048e08 = add i32 %v0_8048e05, 20892
  store i32 %v1_8048e08, i32* %edx.global-to-local, align 4
  %v2_8048e0f = add i32 %v0_8048e05, -16
  %v3_8048e0f = inttoptr i32 %v2_8048e0f to i32*
  store i32 %v1_8048e08, i32* %v3_8048e0f, align 4
  %v1_8048e10 = add i32 %v0_8048e05, 20896
  store i32 %v1_8048e10, i32* %eax.global-to-local, align 4
  %v2_8048e17 = add i32 %v0_8048e05, -20
  %v3_8048e17 = inttoptr i32 %v2_8048e17 to i32*
  store i32 %v1_8048e10, i32* %v3_8048e17, align 4
  %v1_8048e18 = add i32 %v0_8048e05, -24
  %v2_8048e18 = inttoptr i32 %v1_8048e18 to i32*
  store i32 4, i32* %v2_8048e18, align 4
  %v1_8048e1a = add i32 %v0_8048e05, -28
  %v2_8048e1a = inttoptr i32 %v1_8048e1a to i32*
  store i32 1, i32* %v2_8048e1a, align 4
  %v0_8048e1c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8048e1c = add i32 %v0_8048e05, -32
  %v3_8048e1c = inttoptr i32 %v2_8048e1c to i32*
  store i32 %v0_8048e1c, i32* %v3_8048e1c, align 4
  %v0_8048e1d = call i32 @function_805280f()
  store i32 %v0_8048e1d, i32* %eax.global-to-local, align 4
  %v0_8048e22 = load i32, i32* @esp, align 4
  %v1_8048e22 = add i32 %v0_8048e22, 32
  %v2_8048e25 = add i32 %v0_8048e22, 20928
  %v3_8048e25 = inttoptr i32 %v2_8048e25 to i32*
  %v4_8048e25 = load i32, i32* %v3_8048e25, align 4
  %v5_8048e25 = or i32 %v4_8048e25, %v0_8048e1d
  %v6_8048e25 = icmp eq i32 %v5_8048e25, 0
  store i1 %v6_8048e25, i1* %zf.global-to-local, align 1
  store i32 %v5_8048e25, i32* %eax.global-to-local, align 4
  %v1_8048e2c = icmp eq i1 %v6_8048e25, false
  br i1 %v1_8048e2c, label %dec_label_pc_8048e4a, label %dec_label_pc_8048e2e

dec_label_pc_8048e2e:                             ; preds = %dec_label_pc_8048def
  %v1_8048e2e = add i32 %v0_8048e22, 124
  %v2_8048e2e = inttoptr i32 %v1_8048e2e to i32*
  %v3_8048e2e = load i32, i32* %v2_8048e2e, align 4
  store i32 %v3_8048e2e, i32* %edx.global-to-local, align 4
  %v1_8048e32 = add i32 %v3_8048e2e, -1452
  %v2_8048e32 = inttoptr i32 %v1_8048e32 to i32*
  %v3_8048e32 = load i32, i32* %v2_8048e32, align 4
  store i32 %v3_8048e32, i32* %ecx.global-to-local, align 4
  %v1_8048e38 = add i32 %v3_8048e2e, -1448
  %v2_8048e38 = inttoptr i32 %v1_8048e38 to i8*
  store i8 4, i8* %v2_8048e38, align 1
  %v0_8048d58.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8048d60.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048d58

dec_label_pc_8048e44:                             ; preds = %dec_label_pc_80494dc
  %v0_8048e44 = load i32, i32* @edi, align 4
  %v1_8048e44 = inttoptr i32 %v0_8048e44 to i32*
  store i32 104, i32* %v1_8048e44, align 4
  %v0_8048e4a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048e4a

dec_label_pc_8048e4a:                             ; preds = %dec_label_pc_8049b0f, %dec_label_pc_8048e7a, %dec_label_pc_8048def, %dec_label_pc_8048e44
  %v0_8048e4a = phi i32 [ %v1_804950d, %dec_label_pc_8049b0f ], [ %v1_8048eb7, %dec_label_pc_8048e7a ], [ %v1_8048e22, %dec_label_pc_8048def ], [ %v0_8048e4a.pre, %dec_label_pc_8048e44 ]
  %v9_8048e4a = icmp eq i32 %v0_8048e4a, 12
  store i1 %v9_8048e4a, i1* %zf.global-to-local, align 1
  %v1_8048e4d = add i32 %v0_8048e4a, 92
  %v2_8048e4d = inttoptr i32 %v1_8048e4d to i32*
  %v3_8048e4d = load i32, i32* %v2_8048e4d, align 4
  store i32 %v3_8048e4d, i32* %ecx.global-to-local, align 4
  %v1_8048e51 = add i32 %v3_8048e4d, -1452
  %v2_8048e51 = inttoptr i32 %v1_8048e51 to i32*
  %v3_8048e51 = load i32, i32* %v2_8048e51, align 4
  store i32 %v3_8048e51, i32* @ebx, align 4
  %v2_8048e57 = add i32 %v0_8048e4a, -16
  %v3_8048e57 = inttoptr i32 %v2_8048e57 to i32*
  store i32 %v3_8048e51, i32* %v3_8048e57, align 4
  %v1_8048e58 = call i32 @function_80521b3(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048e58, i32* %eax.global-to-local, align 4
  %v0_8048e5d = load i32, i32* @esp, align 4
  %v1_8048e5d = add i32 %v0_8048e5d, 108
  %v2_8048e5d = inttoptr i32 %v1_8048e5d to i32*
  %v3_8048e5d = load i32, i32* %v2_8048e5d, align 4
  store i32 %v3_8048e5d, i32* %eax.global-to-local, align 4
  %v6_8048e61 = icmp eq i32 %v0_8048e5d, -16
  store i1 %v6_8048e61, i1* %zf.global-to-local, align 1
  %v1_8048e64 = add i32 %v3_8048e5d, -1452
  %v2_8048e64 = inttoptr i32 %v1_8048e64 to i32*
  store i32 -1, i32* %v2_8048e64, align 4
  %v0_8048e6e = load i32, i32* %eax.global-to-local, align 4
  %v1_8048e6e = add i32 %v0_8048e6e, -1448
  %v2_8048e6e = inttoptr i32 %v1_8048e6e to i8*
  store i8 0, i8* %v2_8048e6e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8048e7a:                             ; preds = %dec_label_pc_8048d6f
  %v2_8048e7a = add i32 %v1_8048e7a, -4
  %v3_8048e7a = inttoptr i32 %v2_8048e7a to i32*
  store i32 %v4_8048d73, i32* %v3_8048e7a, align 4
  %v0_8048e7b = load i32, i32* @eax, align 4
  %v2_8048e7b = add i32 %v1_8048e7a, -8
  %v3_8048e7b = inttoptr i32 %v2_8048e7b to i32*
  store i32 %v0_8048e7b, i32* %v3_8048e7b, align 4
  %v1_8048e7c = add i32 %v1_8048e7a, -12
  %v2_8048e7c = inttoptr i32 %v1_8048e7c to i32*
  store i32 10240, i32* %v2_8048e7c, align 4
  %v1_8048e81 = add i32 %v1_8048e7a, 131
  store i32 %v1_8048e81, i32* %ecx.global-to-local, align 4
  %v2_8048e88 = add i32 %v1_8048e7a, -16
  %v3_8048e88 = inttoptr i32 %v2_8048e88 to i32*
  store i32 %v1_8048e81, i32* %v3_8048e88, align 4
  %v4_8048e89 = call i32 @function_8051cd0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048e8e = load i32, i32* @esp, align 4
  %v1_8048e8e = add i32 %v0_8048e8e, -4
  %v2_8048e8e = inttoptr i32 %v1_8048e8e to i32*
  store i32 16386, i32* %v2_8048e8e, align 4
  %v1_8048e93 = add i32 %v0_8048e8e, -8
  %v2_8048e93 = inttoptr i32 %v1_8048e93 to i32*
  store i32 10240, i32* %v2_8048e93, align 4
  %v1_8048e98 = add i32 %v0_8048e8e, 147
  store i32 %v1_8048e98, i32* %eax.global-to-local, align 4
  %v2_8048e9f = add i32 %v0_8048e8e, -12
  %v3_8048e9f = inttoptr i32 %v2_8048e9f to i32*
  store i32 %v1_8048e98, i32* %v3_8048e9f, align 4
  %v1_8048ea0 = add i32 %v0_8048e8e, 108
  %v2_8048ea0 = inttoptr i32 %v1_8048ea0 to i32*
  %v3_8048ea0 = load i32, i32* %v2_8048ea0, align 4
  store i32 %v3_8048ea0, i32* %edx.global-to-local, align 4
  %v1_8048ea4 = add i32 %v3_8048ea0, -1452
  %v2_8048ea4 = inttoptr i32 %v1_8048ea4 to i32*
  %v3_8048ea4 = load i32, i32* %v2_8048ea4, align 4
  store i32 %v3_8048ea4, i32* %eax.global-to-local, align 4
  %v2_8048eaa = add i32 %v0_8048e8e, -16
  %v3_8048eaa = inttoptr i32 %v2_8048eaa to i32*
  store i32 %v3_8048ea4, i32* %v3_8048eaa, align 4
  %v0_8048eab = call i32 @function_805286d()
  store i32 %v0_8048eab, i32* %eax.global-to-local, align 4
  %v1_8048eb0 = load i32, i32* @esp, align 4
  %v2_8048eb0 = add i32 %v1_8048eb0, 136
  %v3_8048eb0 = inttoptr i32 %v2_8048eb0 to i32*
  store i32 %v0_8048eab, i32* %v3_8048eb0, align 4
  %v0_8048eb7 = load i32, i32* @esp, align 4
  %v1_8048eb7 = add i32 %v0_8048eb7, 32
  %v1_8048eba = icmp eq i32 %v0_8048eab, 0
  store i1 %v1_8048eba, i1* %zf.global-to-local, align 1
  %tmp143 = icmp slt i32 %v0_8048eab, 1
  br i1 %tmp143, label %dec_label_pc_8048e4a, label %dec_label_pc_8048ebe

dec_label_pc_8048ebe:                             ; preds = %dec_label_pc_8048e7a
  %v1_8048ebe = add i32 %v0_8048eb7, 28
  %v2_8048ebe = inttoptr i32 %v1_8048ebe to i32*
  store i32 4, i32* %v2_8048ebe, align 4
  %v1_8048ec0 = add i32 %v0_8048eb7, 24
  %v2_8048ec0 = inttoptr i32 %v1_8048ec0 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054984.13 to i32), i32* %v2_8048ec0, align 4
  %v1_8048ec5 = add i32 %v0_8048eb7, 136
  %v2_8048ec5 = inttoptr i32 %v1_8048ec5 to i32*
  %v3_8048ec5 = load i32, i32* %v2_8048ec5, align 4
  store i32 %v3_8048ec5, i32* %eax.global-to-local, align 4
  %v2_8048ec9 = add i32 %v0_8048eb7, 20
  %v3_8048ec9 = inttoptr i32 %v2_8048ec9 to i32*
  store i32 %v3_8048ec5, i32* %v3_8048ec9, align 4
  %v1_8048eca = add i32 %v0_8048eb7, 163
  store i32 %v1_8048eca, i32* %edx.global-to-local, align 4
  %v2_8048ed1 = add i32 %v0_8048eb7, 16
  %v3_8048ed1 = inttoptr i32 %v2_8048ed1 to i32*
  store i32 %v1_8048eca, i32* %v3_8048ed1, align 4
  %v0_8048ed2 = call i32 @function_8051cf0()
  %v0_8048ed7 = load i32, i32* @esp, align 4
  %v1_8048eda = add i32 %v0_8048ed2, 1
  %v8_8048eda = icmp eq i32 %v1_8048eda, 0
  store i1 %v8_8048eda, i1* %zf.global-to-local, align 1
  store i32 %v1_8048eda, i32* %eax.global-to-local, align 4
  %v1_8049ae5 = add i32 %v0_8048ed7, 120
  %v2_8049ae5 = inttoptr i32 %v1_8049ae5 to i32*
  br i1 %v8_8048eda, label %dec_label_pc_8049ae5, label %dec_label_pc_8048ee1

dec_label_pc_8048ee1:                             ; preds = %dec_label_pc_8048ebe, %dec_label_pc_8049ae5
  %v1_8048ee1 = add i32 %v0_8048ed7, 12
  %v2_8048ee1 = inttoptr i32 %v1_8048ee1 to i32*
  store i32 4, i32* %v2_8048ee1, align 4
  %v1_8048ee3 = add i32 %v0_8048ed7, 8
  %v2_8048ee3 = inttoptr i32 %v1_8048ee3 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054984.13 to i32), i32* %v2_8048ee3, align 4
  %v3_8048ee8 = load i32, i32* %v2_8049ae5, align 4
  %v2_8048eec = add i32 %v0_8048ed7, 4
  %v3_8048eec = inttoptr i32 %v2_8048eec to i32*
  store i32 %v3_8048ee8, i32* %v3_8048eec, align 4
  %v1_8048eed = add i32 %v0_8048ed7, 147
  store i32 %v1_8048eed, i32* %ecx.global-to-local, align 4
  %v3_8048ef4 = inttoptr i32 %v0_8048ed7 to i32*
  store i32 %v1_8048eed, i32* %v3_8048ef4, align 4
  %v0_8048ef5 = call i32 @function_8051cf0()
  store i32 %v0_8048ef5, i32* %eax.global-to-local, align 4
  %v0_8048efa = load i32, i32* @esp, align 4
  %v2_8048efa = add i32 %v0_8048ef5, 147
  %v3_8048efa = add i32 %v2_8048efa, %v0_8048efa
  %v4_8048efa = inttoptr i32 %v3_8048efa to i8*
  store i8 0, i8* %v4_8048efa, align 1
  %v0_8048f02 = load i32, i32* @esp, align 4
  %v1_8048f02 = inttoptr i32 %v0_8048f02 to i32*
  %v3_8048f02 = add i32 %v0_8048f02, 4
  %v1_8048f03 = inttoptr i32 %v3_8048f02 to i32*
  %v2_8048f03 = load i32, i32* %v1_8048f03, align 4
  store i32 %v2_8048f03, i32* @edi, align 4
  store i32 0, i32* %v1_8048f03, align 4
  store i32 49, i32* %v1_8048f02, align 4
  %v3_8048f08 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f08, i32* %eax.global-to-local, align 4
  %v0_8048f0d = load i32, i32* @esp, align 4
  %v9_8048f0d = icmp eq i32 %v0_8048f0d, -12
  store i1 %v9_8048f0d, i1* %zf.global-to-local, align 1
  %v2_8048f10 = add i32 %v0_8048f0d, 8
  %v3_8048f10 = inttoptr i32 %v2_8048f10 to i32*
  store i32 %v3_8048f08, i32* %v3_8048f10, align 4
  %v1_8048f11 = add i32 %v0_8048f0d, 120
  %v2_8048f11 = inttoptr i32 %v1_8048f11 to i32*
  %v3_8048f11 = load i32, i32* %v2_8048f11, align 4
  %v2_8048f15 = add i32 %v0_8048f0d, 4
  %v3_8048f15 = inttoptr i32 %v2_8048f15 to i32*
  store i32 %v3_8048f11, i32* %v3_8048f15, align 4
  %v1_8048f16 = add i32 %v0_8048f0d, 147
  store i32 %v1_8048f16, i32* %eax.global-to-local, align 4
  %v3_8048f1d = inttoptr i32 %v0_8048f0d to i32*
  store i32 %v1_8048f16, i32* %v3_8048f1d, align 4
  %v0_8048f1e = call i32 @function_8051f30()
  %v0_8048f23 = load i32, i32* @esp, align 4
  %v1_8048f23 = add i32 %v0_8048f23, 16
  %v1_8048f26 = add i32 %v0_8048f1e, 1
  %v8_8048f26 = icmp eq i32 %v1_8048f26, 0
  store i1 %v8_8048f26, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f26, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f26, label %dec_label_pc_8048f33, label %dec_label_pc_8048f29

dec_label_pc_8048f29:                             ; preds = %dec_label_pc_8048ee1
  %v1_8048f29 = add i32 %v0_8048f23, 108
  %v2_8048f29 = inttoptr i32 %v1_8048f29 to i32*
  %v3_8048f29 = load i32, i32* %v2_8048f29, align 4
  store i32 %v3_8048f29, i32* %edx.global-to-local, align 4
  %v1_8048f2d = inttoptr i32 %v3_8048f29 to i32*
  store i32 2, i32* %v1_8048f2d, align 4
  %v1_8048f33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f33

dec_label_pc_8048f33:                             ; preds = %dec_label_pc_8048ee1, %dec_label_pc_8048f29
  %v1_8048f33 = phi i32 [ %v1_8048f23, %dec_label_pc_8048ee1 ], [ %v1_8048f33.pre, %dec_label_pc_8048f29 ]
  %v0_8048f33 = load i32, i32* @ecx, align 4
  %v2_8048f33 = add i32 %v1_8048f33, -4
  %v3_8048f33 = inttoptr i32 %v2_8048f33 to i32*
  store i32 %v0_8048f33, i32* %v3_8048f33, align 4
  %v0_8048f34 = load i32, i32* @ecx, align 4
  %v2_8048f34 = add i32 %v1_8048f33, -8
  %v3_8048f34 = inttoptr i32 %v2_8048f34 to i32*
  store i32 %v0_8048f34, i32* %v3_8048f34, align 4
  %v1_8048f35 = add i32 %v1_8048f33, -12
  %v2_8048f35 = inttoptr i32 %v1_8048f35 to i32*
  store i32 0, i32* %v2_8048f35, align 4
  %v1_8048f37 = add i32 %v1_8048f33, -16
  %v2_8048f37 = inttoptr i32 %v1_8048f37 to i32*
  store i32 48, i32* %v2_8048f37, align 4
  %v3_8048f39 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f39, i32* %eax.global-to-local, align 4
  %v0_8048f3e = load i32, i32* @esp, align 4
  %v9_8048f3e = icmp eq i32 %v0_8048f3e, -12
  store i1 %v9_8048f3e, i1* %zf.global-to-local, align 1
  %v2_8048f41 = add i32 %v0_8048f3e, 8
  %v3_8048f41 = inttoptr i32 %v2_8048f41 to i32*
  store i32 %v3_8048f39, i32* %v3_8048f41, align 4
  %v1_8048f42 = add i32 %v0_8048f3e, 120
  %v2_8048f42 = inttoptr i32 %v1_8048f42 to i32*
  %v3_8048f42 = load i32, i32* %v2_8048f42, align 4
  store i32 %v3_8048f42, i32* @edx, align 4
  %v2_8048f46 = add i32 %v0_8048f3e, 4
  %v3_8048f46 = inttoptr i32 %v2_8048f46 to i32*
  store i32 %v3_8048f42, i32* %v3_8048f46, align 4
  %v1_8048f47 = add i32 %v0_8048f3e, 147
  store i32 %v1_8048f47, i32* @ecx, align 4
  %v3_8048f4e = inttoptr i32 %v0_8048f3e to i32*
  store i32 %v1_8048f47, i32* %v3_8048f4e, align 4
  %v0_8048f4f = call i32 @function_8051f30()
  %v0_8048f54 = load i32, i32* @esp, align 4
  %v1_8048f54 = add i32 %v0_8048f54, 16
  %v1_8048f57 = add i32 %v0_8048f4f, 1
  %v8_8048f57 = icmp eq i32 %v1_8048f57, 0
  store i1 %v8_8048f57, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f57, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f57, label %dec_label_pc_8048f64, label %dec_label_pc_8048f5a

dec_label_pc_8048f5a:                             ; preds = %dec_label_pc_8048f33
  %v1_8048f5a = add i32 %v0_8048f54, 108
  %v2_8048f5a = inttoptr i32 %v1_8048f5a to i32*
  %v3_8048f5a = load i32, i32* %v2_8048f5a, align 4
  store i32 %v3_8048f5a, i32* %eax.global-to-local, align 4
  %v1_8048f5e = inttoptr i32 %v3_8048f5a to i32*
  store i32 1, i32* %v1_8048f5e, align 4
  %v0_8048f64.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f64

dec_label_pc_8048f64:                             ; preds = %dec_label_pc_8048f33, %dec_label_pc_8048f5a
  %v0_8048f64 = phi i32 [ %v1_8048f54, %dec_label_pc_8048f33 ], [ %v0_8048f64.pre, %dec_label_pc_8048f5a ]
  %v1_8048f64 = add i32 %v0_8048f64, 92
  %v2_8048f64 = inttoptr i32 %v1_8048f64 to i32*
  %v3_8048f64 = load i32, i32* %v2_8048f64, align 4
  store i32 %v3_8048f64, i32* %edx.global-to-local, align 4
  %v1_8048f68 = add i32 %v3_8048f64, 4
  %v2_8048f68 = inttoptr i32 %v1_8048f68 to i32*
  store i32 0, i32* %v2_8048f68, align 4
  %v0_8048f6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8048f6f = load i32, i32* @esp, align 4
  %v2_8048f6f = add i32 %v1_8048f6f, -4
  %v3_8048f6f = inttoptr i32 %v2_8048f6f to i32*
  store i32 %v0_8048f6f, i32* %v3_8048f6f, align 4
  %v0_8048f70 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f70 = add i32 %v1_8048f6f, -8
  %v3_8048f70 = inttoptr i32 %v2_8048f70 to i32*
  store i32 %v0_8048f70, i32* %v3_8048f70, align 4
  %v1_8048f71 = add i32 %v1_8048f6f, -12
  %v2_8048f71 = inttoptr i32 %v1_8048f71 to i32*
  store i32 0, i32* %v2_8048f71, align 4
  %v1_8048f73 = add i32 %v1_8048f6f, -16
  %v2_8048f73 = inttoptr i32 %v1_8048f73 to i32*
  store i32 47, i32* %v2_8048f73, align 4
  %v3_8048f75 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f75, i32* %eax.global-to-local, align 4
  %v0_8048f7a = load i32, i32* @esp, align 4
  %v9_8048f7a = icmp eq i32 %v0_8048f7a, -12
  store i1 %v9_8048f7a, i1* %zf.global-to-local, align 1
  %v2_8048f7d = add i32 %v0_8048f7a, 8
  %v3_8048f7d = inttoptr i32 %v2_8048f7d to i32*
  store i32 %v3_8048f75, i32* %v3_8048f7d, align 4
  %v1_8048f7e = add i32 %v0_8048f7a, 120
  %v2_8048f7e = inttoptr i32 %v1_8048f7e to i32*
  %v3_8048f7e = load i32, i32* %v2_8048f7e, align 4
  store i32 %v3_8048f7e, i32* %eax.global-to-local, align 4
  %v2_8048f82 = add i32 %v0_8048f7a, 4
  %v3_8048f82 = inttoptr i32 %v2_8048f82 to i32*
  store i32 %v3_8048f7e, i32* %v3_8048f82, align 4
  %v1_8048f83 = add i32 %v0_8048f7a, 147
  store i32 %v1_8048f83, i32* @ecx, align 4
  %v3_8048f8a = inttoptr i32 %v0_8048f7a to i32*
  store i32 %v1_8048f83, i32* %v3_8048f8a, align 4
  %v0_8048f8b = call i32 @function_8051f30()
  %v0_8048f90 = load i32, i32* @esp, align 4
  %v1_8048f90 = add i32 %v0_8048f90, 16
  %v1_8048f93 = add i32 %v0_8048f8b, 1
  %v8_8048f93 = icmp eq i32 %v1_8048f93, 0
  store i1 %v8_8048f93, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f93, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f93, label %dec_label_pc_8049044, label %dec_label_pc_8048f9a

dec_label_pc_8048f9a:                             ; preds = %dec_label_pc_8048f64
  %v2_8048f9a = add i32 %v0_8048f90, 12
  %v3_8048f9a = inttoptr i32 %v2_8048f9a to i32*
  store i32 %v1_8048f93, i32* %v3_8048f9a, align 4
  %v0_8048f9b = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f9b = add i32 %v0_8048f90, 8
  %v3_8048f9b = inttoptr i32 %v2_8048f9b to i32*
  store i32 %v0_8048f9b, i32* %v3_8048f9b, align 4
  %v1_8048f9c = add i32 %v0_8048f90, 4
  %v2_8048f9c = inttoptr i32 %v1_8048f9c to i32*
  store i32 0, i32* %v2_8048f9c, align 4
  %v2_8048f9e = inttoptr i32 %v0_8048f90 to i32*
  store i32 47, i32* %v2_8048f9e, align 4
  %v3_8048fa0 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048fa0, i32* %eax.global-to-local, align 4
  %v0_8048fa5 = load i32, i32* @esp, align 4
  %v9_8048fa5 = icmp eq i32 %v0_8048fa5, -12
  store i1 %v9_8048fa5, i1* %zf.global-to-local, align 1
  %v2_8048fa8 = add i32 %v0_8048fa5, 8
  %v3_8048fa8 = inttoptr i32 %v2_8048fa8 to i32*
  store i32 %v3_8048fa0, i32* %v3_8048fa8, align 4
  %v1_8048fa9 = add i32 %v0_8048fa5, 120
  %v2_8048fa9 = inttoptr i32 %v1_8048fa9 to i32*
  %v3_8048fa9 = load i32, i32* %v2_8048fa9, align 4
  %v2_8048fad = add i32 %v0_8048fa5, 4
  %v3_8048fad = inttoptr i32 %v2_8048fad to i32*
  store i32 %v3_8048fa9, i32* %v3_8048fad, align 4
  %v1_8048fae = add i32 %v0_8048fa5, 147
  store i32 %v1_8048fae, i32* %eax.global-to-local, align 4
  %v3_8048fb5 = inttoptr i32 %v0_8048fa5 to i32*
  store i32 %v1_8048fae, i32* %v3_8048fb5, align 4
  %v0_8048fb6 = call i32 @function_8051f30()
  store i32 %v0_8048fb6, i32* %eax.global-to-local, align 4
  %v0_8048fbb = load i32, i32* @esp, align 4
  %v6_8048fbb = icmp eq i32 %v0_8048fbb, -16
  store i1 %v6_8048fbb, i1* %zf.global-to-local, align 1
  store i32 %v0_8048fb6, i32* %ebx.global-to-local, align 4
  %v2_8048fc0 = add i32 %v0_8048fb6, 147
  %v3_8048fc0 = add i32 %v2_8048fc0, %v0_8048fbb
  %v4_8048fc0 = inttoptr i32 %v3_8048fc0 to i8*
  %v5_8048fc0 = load i8, i8* %v4_8048fc0, align 1
  %v11_8048fc0 = icmp eq i8 %v5_8048fc0, 32
  %v1_8048fc8 = zext i1 %v11_8048fc0 to i32
  %v1_8048fcb = add i32 %v0_8048fbb, 147
  store i32 %v1_8048fcb, i32* %esi.global-to-local, align 4
  store i32 %v1_8048fc8, i32* %eax.global-to-local, align 4
  %v1_8048fd7 = add i32 %v0_8048fbb, 12
  %v2_8048fd7 = inttoptr i32 %v1_8048fd7 to i32*
  store i32 2, i32* %v2_8048fd7, align 4
  %v1_8048fd9 = add i32 %v0_8048fbb, 8
  %v2_8048fd9 = inttoptr i32 %v1_8048fd9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_8048fd9, align 4
  %v0_8048fde = load i32, i32* %ebx.global-to-local, align 4
  %v1_8048fde = load i32, i32* %eax.global-to-local, align 4
  %v2_8048fde = add i32 %v1_8048fde, %v0_8048fde
  store i32 %v2_8048fde, i32* @ebx, align 4
  %v1_8048fe0 = add i32 %v0_8048fbb, 120
  %v2_8048fe0 = inttoptr i32 %v1_8048fe0 to i32*
  %v3_8048fe0 = load i32, i32* %v2_8048fe0, align 4
  %v2_8048fe4 = sub i32 %v3_8048fe0, %v2_8048fde
  store i32 %v2_8048fe4, i32* %eax.global-to-local, align 4
  %v0_8048fe6 = load i32, i32* %esi.global-to-local, align 4
  %v2_8048fe6 = add i32 %v0_8048fe6, %v2_8048fde
  %v12_8048fe6 = icmp eq i32 %v2_8048fe6, 0
  store i1 %v12_8048fe6, i1* %zf.global-to-local, align 1
  store i32 %v2_8048fe6, i32* @esi, align 4
  %v2_8048fe8 = add i32 %v0_8048fbb, 4
  %v3_8048fe8 = inttoptr i32 %v2_8048fe8 to i32*
  store i32 %v2_8048fe4, i32* %v3_8048fe8, align 4
  %v0_8048fe9 = load i32, i32* @esi, align 4
  %v3_8048fe9 = inttoptr i32 %v0_8048fbb to i32*
  store i32 %v0_8048fe9, i32* %v3_8048fe9, align 4
  %v0_8048fea = call i32 @function_8051cf0()
  store i32 %v0_8048fea, i32* %eax.global-to-local, align 4
  %v0_8048fef = load i32, i32* @esp, align 4
  %v1_8048fef = add i32 %v0_8048fef, 16
  store i32 %v0_8048fea, i32* %edx.global-to-local, align 4
  %v10_8048ff4 = icmp eq i32 %v0_8048fea, -1
  store i1 %v10_8048ff4, i1* %zf.global-to-local, align 1
  br i1 %v10_8048ff4, label %dec_label_pc_8049044, label %dec_label_pc_8048ff9

dec_label_pc_8048ff9:                             ; preds = %dec_label_pc_8048f9a
  %v10_8048ff9 = icmp eq i32 %v0_8048fea, 1
  store i1 %v10_8048ff9, i1* %zf.global-to-local, align 1
  %v7_8048ffc = icmp sgt i32 %v0_8048fea, 1
  br i1 %v7_8048ffc, label %dec_label_pc_8048ffe, label %dec_label_pc_8049001

dec_label_pc_8048ffe:                             ; preds = %dec_label_pc_8048ff9
  %v1_8048ffe = add i32 %v0_8048fea, -2
  %v9_8048ffe = icmp eq i32 %v1_8048ffe, 0
  store i1 %v9_8048ffe, i1* %zf.global-to-local, align 1
  store i32 %v1_8048ffe, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049001

dec_label_pc_8049001:                             ; preds = %dec_label_pc_8048ff9, %dec_label_pc_8048ffe
  %v1_804900a = phi i32 [ %v0_8048fea, %dec_label_pc_8048ff9 ], [ %v1_8048ffe, %dec_label_pc_8048ffe ]
  %v1_8049001 = add i32 %v0_8048fef, 20920
  %v1_8049008 = load i32, i32* @ebx, align 4
  %v2_8049008 = add i32 %v1_8049001, %v1_8049008
  %v12_8049008 = icmp eq i32 %v2_8049008, 0
  store i1 %v12_8049008, i1* %zf.global-to-local, align 1
  store i32 %v2_8049008, i32* %eax.global-to-local, align 4
  %v2_804900a = add i32 %v1_804900a, -20773
  %v3_804900a = add i32 %v2_804900a, %v2_8049008
  %v4_804900a = inttoptr i32 %v3_804900a to i8*
  store i8 0, i8* %v4_804900a, align 1
  %v0_8049012 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049012 = load i32, i32* @esp, align 4
  %v2_8049012 = add i32 %v1_8049012, -4
  %v3_8049012 = inttoptr i32 %v2_8049012 to i32*
  store i32 %v0_8049012, i32* %v3_8049012, align 4
  %v0_8049013 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049013 = add i32 %v1_8049012, -8
  %v3_8049013 = inttoptr i32 %v2_8049013 to i32*
  store i32 %v0_8049013, i32* %v3_8049013, align 4
  %v1_8049014 = add i32 %v1_8049012, -12
  %v2_8049014 = inttoptr i32 %v1_8049014 to i32*
  store i32 0, i32* %v2_8049014, align 4
  %v1_8049016 = add i32 %v1_8049012, -16
  %v2_8049016 = inttoptr i32 %v1_8049016 to i32*
  store i32 46, i32* %v2_8049016, align 4
  %v3_8049018 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049018, i32* %eax.global-to-local, align 4
  %v0_804901d = load i32, i32* @esi, align 4
  %v1_804901d = load i32, i32* @esp, align 4
  %v2_804901d = inttoptr i32 %v1_804901d to i32*
  store i32 %v0_804901d, i32* %v2_804901d, align 4
  store i32 %v3_8049018, i32* @ebx, align 4
  %v2_8049022 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049022, i32* %eax.global-to-local, align 4
  %v0_8049027 = load i32, i32* @esp, align 4
  %v9_8049027 = icmp eq i32 %v0_8049027, -12
  store i1 %v9_8049027, i1* %zf.global-to-local, align 1
  %v0_804902a = load i32, i32* @ebx, align 4
  %v2_804902a = add i32 %v0_8049027, 8
  %v3_804902a = inttoptr i32 %v2_804902a to i32*
  store i32 %v0_804902a, i32* %v3_804902a, align 4
  %v2_804902b = add i32 %v0_8049027, 4
  %v3_804902b = inttoptr i32 %v2_804902b to i32*
  store i32 %v2_8049022, i32* %v3_804902b, align 4
  %v0_804902c = load i32, i32* @esi, align 4
  %v3_804902c = inttoptr i32 %v0_8049027 to i32*
  store i32 %v0_804902c, i32* %v3_804902c, align 4
  %v0_804902d = call i32 @function_8051f30()
  store i32 %v0_804902d, i32* %eax.global-to-local, align 4
  %v0_8049032 = load i32, i32* @esp, align 4
  %v1_8049032 = add i32 %v0_8049032, 16
  %v1_8049035 = icmp eq i32 %v0_804902d, 0
  store i1 %v1_8049035, i1* %zf.global-to-local, align 1
  br i1 %v1_8049035, label %dec_label_pc_8049044, label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8049001
  %v1_8049039 = add i32 %v0_8049032, 108
  %v2_8049039 = inttoptr i32 %v1_8049039 to i32*
  %v3_8049039 = load i32, i32* %v2_8049039, align 4
  store i32 %v3_8049039, i32* %edx.global-to-local, align 4
  %v1_804903d = add i32 %v3_8049039, 4
  %v2_804903d = inttoptr i32 %v1_804903d to i32*
  store i32 1, i32* %v2_804903d, align 4
  %v0_8049044.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049044

dec_label_pc_8049044:                             ; preds = %dec_label_pc_8049001, %dec_label_pc_8048f9a, %dec_label_pc_8048f64, %dec_label_pc_8049039
  %v0_8049044 = phi i32 [ %v1_8049032, %dec_label_pc_8049001 ], [ %v1_8048fef, %dec_label_pc_8048f9a ], [ %v1_8048f90, %dec_label_pc_8048f64 ], [ %v0_8049044.pre, %dec_label_pc_8049039 ]
  %v1_8049044 = add i32 %v0_8049044, 92
  %v2_8049044 = inttoptr i32 %v1_8049044 to i32*
  %v3_8049044 = load i32, i32* %v2_8049044, align 4
  store i32 %v3_8049044, i32* %ecx.global-to-local, align 4
  %v1_8049048 = add i32 %v3_8049044, 8
  %v2_8049048 = inttoptr i32 %v1_8049048 to i32*
  store i32 0, i32* %v2_8049048, align 4
  %v0_804904f = load i32, i32* %eax.global-to-local, align 4
  %v1_804904f = load i32, i32* @esp, align 4
  %v2_804904f = add i32 %v1_804904f, -4
  %v3_804904f = inttoptr i32 %v2_804904f to i32*
  store i32 %v0_804904f, i32* %v3_804904f, align 4
  %v0_8049050 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049050 = add i32 %v1_804904f, -8
  %v3_8049050 = inttoptr i32 %v2_8049050 to i32*
  store i32 %v0_8049050, i32* %v3_8049050, align 4
  %v1_8049051 = add i32 %v1_804904f, -12
  %v2_8049051 = inttoptr i32 %v1_8049051 to i32*
  store i32 0, i32* %v2_8049051, align 4
  %v1_8049053 = add i32 %v1_804904f, -16
  %v2_8049053 = inttoptr i32 %v1_8049053 to i32*
  store i32 44, i32* %v2_8049053, align 4
  %v3_8049055 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049055, i32* %eax.global-to-local, align 4
  %v0_804905a = load i32, i32* @esp, align 4
  %v9_804905a = icmp eq i32 %v0_804905a, -12
  store i1 %v9_804905a, i1* %zf.global-to-local, align 1
  %v2_804905d = add i32 %v0_804905a, 8
  %v3_804905d = inttoptr i32 %v2_804905d to i32*
  store i32 %v3_8049055, i32* %v3_804905d, align 4
  %v1_804905e = add i32 %v0_804905a, 120
  %v2_804905e = inttoptr i32 %v1_804905e to i32*
  %v3_804905e = load i32, i32* %v2_804905e, align 4
  %v2_8049062 = add i32 %v0_804905a, 4
  %v3_8049062 = inttoptr i32 %v2_8049062 to i32*
  store i32 %v3_804905e, i32* %v3_8049062, align 4
  %v1_8049063 = add i32 %v0_804905a, 147
  store i32 %v1_8049063, i32* %eax.global-to-local, align 4
  %v3_804906a = inttoptr i32 %v0_804905a to i32*
  store i32 %v1_8049063, i32* %v3_804906a, align 4
  %v0_804906b = call i32 @function_8051f30()
  %v0_8049070 = load i32, i32* @esp, align 4
  %v1_8049070 = add i32 %v0_8049070, 16
  %v1_8049073 = add i32 %v0_804906b, 1
  %v8_8049073 = icmp eq i32 %v1_8049073, 0
  store i1 %v8_8049073, i1* %zf.global-to-local, align 1
  store i32 %v1_8049073, i32* %eax.global-to-local, align 4
  br i1 %v8_8049073, label %dec_label_pc_8049124, label %dec_label_pc_804907a

dec_label_pc_804907a:                             ; preds = %dec_label_pc_8049044
  %v0_804907a = load i32, i32* @edi, align 4
  %v2_804907a = add i32 %v0_8049070, 12
  %v3_804907a = inttoptr i32 %v2_804907a to i32*
  store i32 %v0_804907a, i32* %v3_804907a, align 4
  %v0_804907b = load i32, i32* @edi, align 4
  %v2_804907b = add i32 %v0_8049070, 8
  %v3_804907b = inttoptr i32 %v2_804907b to i32*
  store i32 %v0_804907b, i32* %v3_804907b, align 4
  %v1_804907c = add i32 %v0_8049070, 4
  %v2_804907c = inttoptr i32 %v1_804907c to i32*
  store i32 0, i32* %v2_804907c, align 4
  %v2_804907e = inttoptr i32 %v0_8049070 to i32*
  store i32 44, i32* %v2_804907e, align 4
  %v3_8049080 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049080, i32* %eax.global-to-local, align 4
  %v0_8049085 = load i32, i32* @esp, align 4
  %v9_8049085 = icmp eq i32 %v0_8049085, -12
  store i1 %v9_8049085, i1* %zf.global-to-local, align 1
  %v2_8049088 = add i32 %v0_8049085, 8
  %v3_8049088 = inttoptr i32 %v2_8049088 to i32*
  store i32 %v3_8049080, i32* %v3_8049088, align 4
  %v1_8049089 = add i32 %v0_8049085, 120
  %v2_8049089 = inttoptr i32 %v1_8049089 to i32*
  %v3_8049089 = load i32, i32* %v2_8049089, align 4
  %v2_804908d = add i32 %v0_8049085, 4
  %v3_804908d = inttoptr i32 %v2_804908d to i32*
  store i32 %v3_8049089, i32* %v3_804908d, align 4
  %v1_804908e = add i32 %v0_8049085, 147
  store i32 %v1_804908e, i32* @edx, align 4
  %v3_8049095 = inttoptr i32 %v0_8049085 to i32*
  store i32 %v1_804908e, i32* %v3_8049095, align 4
  %v0_8049096 = call i32 @function_8051f30()
  store i32 %v0_8049096, i32* %eax.global-to-local, align 4
  %v0_804909b = load i32, i32* @esp, align 4
  %v6_804909b = icmp eq i32 %v0_804909b, -16
  store i1 %v6_804909b, i1* %zf.global-to-local, align 1
  store i32 %v0_8049096, i32* %ebx.global-to-local, align 4
  %v2_80490a0 = add i32 %v0_8049096, 147
  %v3_80490a0 = add i32 %v2_80490a0, %v0_804909b
  %v4_80490a0 = inttoptr i32 %v3_80490a0 to i8*
  %v5_80490a0 = load i8, i8* %v4_80490a0, align 1
  %v11_80490a0 = icmp eq i8 %v5_80490a0, 32
  %v1_80490a8 = zext i1 %v11_80490a0 to i32
  %v1_80490ab = add i32 %v0_804909b, 147
  store i32 %v1_80490ab, i32* %esi.global-to-local, align 4
  store i32 %v1_80490a8, i32* %eax.global-to-local, align 4
  %v1_80490b7 = add i32 %v0_804909b, 12
  %v2_80490b7 = inttoptr i32 %v1_80490b7 to i32*
  store i32 2, i32* %v2_80490b7, align 4
  %v1_80490b9 = add i32 %v0_804909b, 8
  %v2_80490b9 = inttoptr i32 %v1_80490b9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_80490b9, align 4
  %v0_80490be = load i32, i32* %ebx.global-to-local, align 4
  %v1_80490be = load i32, i32* %eax.global-to-local, align 4
  %v2_80490be = add i32 %v1_80490be, %v0_80490be
  store i32 %v2_80490be, i32* @ebx, align 4
  %v1_80490c0 = add i32 %v0_804909b, 120
  %v2_80490c0 = inttoptr i32 %v1_80490c0 to i32*
  %v3_80490c0 = load i32, i32* %v2_80490c0, align 4
  %v2_80490c4 = sub i32 %v3_80490c0, %v2_80490be
  store i32 %v2_80490c4, i32* %eax.global-to-local, align 4
  %v0_80490c6 = load i32, i32* %esi.global-to-local, align 4
  %v2_80490c6 = add i32 %v0_80490c6, %v2_80490be
  %v12_80490c6 = icmp eq i32 %v2_80490c6, 0
  store i1 %v12_80490c6, i1* %zf.global-to-local, align 1
  store i32 %v2_80490c6, i32* @esi, align 4
  %v2_80490c8 = add i32 %v0_804909b, 4
  %v3_80490c8 = inttoptr i32 %v2_80490c8 to i32*
  store i32 %v2_80490c4, i32* %v3_80490c8, align 4
  %v0_80490c9 = load i32, i32* @esi, align 4
  %v3_80490c9 = inttoptr i32 %v0_804909b to i32*
  store i32 %v0_80490c9, i32* %v3_80490c9, align 4
  %v0_80490ca = call i32 @function_8051cf0()
  store i32 %v0_80490ca, i32* %eax.global-to-local, align 4
  %v0_80490cf = load i32, i32* @esp, align 4
  %v1_80490cf = add i32 %v0_80490cf, 16
  store i32 %v0_80490ca, i32* %edx.global-to-local, align 4
  %v10_80490d4 = icmp eq i32 %v0_80490ca, -1
  store i1 %v10_80490d4, i1* %zf.global-to-local, align 1
  br i1 %v10_80490d4, label %dec_label_pc_8049124, label %dec_label_pc_80490d9

dec_label_pc_80490d9:                             ; preds = %dec_label_pc_804907a
  %v10_80490d9 = icmp eq i32 %v0_80490ca, 1
  store i1 %v10_80490d9, i1* %zf.global-to-local, align 1
  %v7_80490dc = icmp sgt i32 %v0_80490ca, 1
  br i1 %v7_80490dc, label %dec_label_pc_80490de, label %dec_label_pc_80490e1

dec_label_pc_80490de:                             ; preds = %dec_label_pc_80490d9
  %v1_80490de = add i32 %v0_80490ca, -2
  %v9_80490de = icmp eq i32 %v1_80490de, 0
  store i1 %v9_80490de, i1* %zf.global-to-local, align 1
  store i32 %v1_80490de, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80490e1

dec_label_pc_80490e1:                             ; preds = %dec_label_pc_80490d9, %dec_label_pc_80490de
  %v1_80490ea = phi i32 [ %v0_80490ca, %dec_label_pc_80490d9 ], [ %v1_80490de, %dec_label_pc_80490de ]
  %v1_80490e1 = add i32 %v0_80490cf, 20920
  %v1_80490e8 = load i32, i32* @ebx, align 4
  %v2_80490e8 = add i32 %v1_80490e1, %v1_80490e8
  %v12_80490e8 = icmp eq i32 %v2_80490e8, 0
  store i1 %v12_80490e8, i1* %zf.global-to-local, align 1
  store i32 %v2_80490e8, i32* %eax.global-to-local, align 4
  %v2_80490ea = add i32 %v1_80490ea, -20773
  %v3_80490ea = add i32 %v2_80490ea, %v2_80490e8
  %v4_80490ea = inttoptr i32 %v3_80490ea to i8*
  store i8 0, i8* %v4_80490ea, align 1
  %v0_80490f2 = load i32, i32* @ebx, align 4
  %v1_80490f2 = load i32, i32* @esp, align 4
  %v2_80490f2 = add i32 %v1_80490f2, -4
  %v3_80490f2 = inttoptr i32 %v2_80490f2 to i32*
  store i32 %v0_80490f2, i32* %v3_80490f2, align 4
  %v0_80490f3 = load i32, i32* @ebx, align 4
  %v2_80490f3 = add i32 %v1_80490f2, -8
  %v3_80490f3 = inttoptr i32 %v2_80490f3 to i32*
  store i32 %v0_80490f3, i32* %v3_80490f3, align 4
  %v1_80490f4 = add i32 %v1_80490f2, -12
  %v2_80490f4 = inttoptr i32 %v1_80490f4 to i32*
  store i32 0, i32* %v2_80490f4, align 4
  %v1_80490f6 = add i32 %v1_80490f2, -16
  %v2_80490f6 = inttoptr i32 %v1_80490f6 to i32*
  store i32 45, i32* %v2_80490f6, align 4
  %v3_80490f8 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80490f8, i32* %eax.global-to-local, align 4
  %v0_80490fd = load i32, i32* @esi, align 4
  %v1_80490fd = load i32, i32* @esp, align 4
  %v2_80490fd = inttoptr i32 %v1_80490fd to i32*
  store i32 %v0_80490fd, i32* %v2_80490fd, align 4
  store i32 %v3_80490f8, i32* @ebx, align 4
  %v2_8049102 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049102, i32* %eax.global-to-local, align 4
  %v0_8049107 = load i32, i32* @esp, align 4
  %v9_8049107 = icmp eq i32 %v0_8049107, -12
  store i1 %v9_8049107, i1* %zf.global-to-local, align 1
  %v0_804910a = load i32, i32* @ebx, align 4
  %v2_804910a = add i32 %v0_8049107, 8
  %v3_804910a = inttoptr i32 %v2_804910a to i32*
  store i32 %v0_804910a, i32* %v3_804910a, align 4
  %v2_804910b = add i32 %v0_8049107, 4
  %v3_804910b = inttoptr i32 %v2_804910b to i32*
  store i32 %v2_8049102, i32* %v3_804910b, align 4
  %v0_804910c = load i32, i32* @esi, align 4
  %v3_804910c = inttoptr i32 %v0_8049107 to i32*
  store i32 %v0_804910c, i32* %v3_804910c, align 4
  %v0_804910d = call i32 @function_8051f30()
  store i32 %v0_804910d, i32* %eax.global-to-local, align 4
  %v0_8049112 = load i32, i32* @esp, align 4
  %v1_8049112 = add i32 %v0_8049112, 16
  %v1_8049115 = icmp eq i32 %v0_804910d, 0
  store i1 %v1_8049115, i1* %zf.global-to-local, align 1
  br i1 %v1_8049115, label %dec_label_pc_8049124, label %dec_label_pc_8049119

dec_label_pc_8049119:                             ; preds = %dec_label_pc_80490e1
  %v1_8049119 = add i32 %v0_8049112, 108
  %v2_8049119 = inttoptr i32 %v1_8049119 to i32*
  %v3_8049119 = load i32, i32* %v2_8049119, align 4
  store i32 %v3_8049119, i32* @ecx, align 4
  %v1_804911d = add i32 %v3_8049119, 8
  %v2_804911d = inttoptr i32 %v1_804911d to i32*
  store i32 1, i32* %v2_804911d, align 4
  %v1_8049124.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049124

dec_label_pc_8049124:                             ; preds = %dec_label_pc_80490e1, %dec_label_pc_804907a, %dec_label_pc_8049044, %dec_label_pc_8049119
  %v1_8049124 = phi i32 [ %v1_8049112, %dec_label_pc_80490e1 ], [ %v1_80490cf, %dec_label_pc_804907a ], [ %v1_8049070, %dec_label_pc_8049044 ], [ %v1_8049124.pre, %dec_label_pc_8049119 ]
  %v0_8049124 = load i32, i32* @ecx, align 4
  %v2_8049124 = add i32 %v1_8049124, -4
  %v3_8049124 = inttoptr i32 %v2_8049124 to i32*
  store i32 %v0_8049124, i32* %v3_8049124, align 4
  %v0_8049125 = load i32, i32* @ecx, align 4
  %v2_8049125 = add i32 %v1_8049124, -8
  %v3_8049125 = inttoptr i32 %v2_8049125 to i32*
  store i32 %v0_8049125, i32* %v3_8049125, align 4
  %v1_8049126 = add i32 %v1_8049124, -12
  %v2_8049126 = inttoptr i32 %v1_8049126 to i32*
  store i32 0, i32* %v2_8049126, align 4
  %v1_8049128 = add i32 %v1_8049124, -16
  %v2_8049128 = inttoptr i32 %v1_8049128 to i32*
  store i32 43, i32* %v2_8049128, align 4
  %v3_804912a = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804912a, i32* %eax.global-to-local, align 4
  %v0_804912f = load i32, i32* @esp, align 4
  %v9_804912f = icmp eq i32 %v0_804912f, -12
  store i1 %v9_804912f, i1* %zf.global-to-local, align 1
  %v2_8049132 = add i32 %v0_804912f, 8
  %v3_8049132 = inttoptr i32 %v2_8049132 to i32*
  store i32 %v3_804912a, i32* %v3_8049132, align 4
  %v1_8049133 = add i32 %v0_804912f, 120
  %v2_8049133 = inttoptr i32 %v1_8049133 to i32*
  %v3_8049133 = load i32, i32* %v2_8049133, align 4
  store i32 %v3_8049133, i32* @edx, align 4
  %v2_8049137 = add i32 %v0_804912f, 4
  %v3_8049137 = inttoptr i32 %v2_8049137 to i32*
  store i32 %v3_8049133, i32* %v3_8049137, align 4
  %v1_8049138 = add i32 %v0_804912f, 147
  store i32 %v1_8049138, i32* %eax.global-to-local, align 4
  %v3_804913f = inttoptr i32 %v0_804912f to i32*
  store i32 %v1_8049138, i32* %v3_804913f, align 4
  %v0_8049140 = call i32 @function_8051f30()
  %v0_8049145 = load i32, i32* @esp, align 4
  %v1_8049148 = add i32 %v0_8049140, 1
  %v8_8049148 = icmp eq i32 %v1_8049148, 0
  store i1 %v8_8049148, i1* %zf.global-to-local, align 1
  store i32 %v1_8049148, i32* %eax.global-to-local, align 4
  br i1 %v8_8049148, label %dec_label_pc_8049a67, label %dec_label_pc_804914f

dec_label_pc_804914f:                             ; preds = %dec_label_pc_8049124
  %v2_804914f = add i32 %v0_8049145, 12
  %v3_804914f = inttoptr i32 %v2_804914f to i32*
  store i32 %v1_8049148, i32* %v3_804914f, align 4
  %v0_8049150 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049150 = add i32 %v0_8049145, 8
  %v3_8049150 = inttoptr i32 %v2_8049150 to i32*
  store i32 %v0_8049150, i32* %v3_8049150, align 4
  %v1_8049151 = add i32 %v0_8049145, 4
  %v2_8049151 = inttoptr i32 %v1_8049151 to i32*
  store i32 0, i32* %v2_8049151, align 4
  %v2_8049153 = inttoptr i32 %v0_8049145 to i32*
  store i32 43, i32* %v2_8049153, align 4
  %v3_8049155 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049155, i32* %eax.global-to-local, align 4
  %v0_804915a = load i32, i32* @esp, align 4
  %v9_804915a = icmp eq i32 %v0_804915a, -12
  store i1 %v9_804915a, i1* %zf.global-to-local, align 1
  %v2_804915d = add i32 %v0_804915a, 8
  %v3_804915d = inttoptr i32 %v2_804915d to i32*
  store i32 %v3_8049155, i32* %v3_804915d, align 4
  %v1_804915e = add i32 %v0_804915a, 120
  %v2_804915e = inttoptr i32 %v1_804915e to i32*
  %v3_804915e = load i32, i32* %v2_804915e, align 4
  store i32 %v3_804915e, i32* %eax.global-to-local, align 4
  %v2_8049162 = add i32 %v0_804915a, 4
  %v3_8049162 = inttoptr i32 %v2_8049162 to i32*
  store i32 %v3_804915e, i32* %v3_8049162, align 4
  %v1_8049163 = add i32 %v0_804915a, 147
  store i32 %v1_8049163, i32* @edx, align 4
  %v3_804916a = inttoptr i32 %v0_804915a to i32*
  store i32 %v1_8049163, i32* %v3_804916a, align 4
  %v0_804916b = call i32 @function_8051f30()
  store i32 %v0_804916b, i32* %eax.global-to-local, align 4
  %v0_8049170 = load i32, i32* @esp, align 4
  %v6_8049170 = icmp eq i32 %v0_8049170, -16
  store i1 %v6_8049170, i1* %zf.global-to-local, align 1
  store i32 %v0_804916b, i32* %ebx.global-to-local, align 4
  %v2_8049175 = add i32 %v0_804916b, 147
  %v3_8049175 = add i32 %v2_8049175, %v0_8049170
  %v4_8049175 = inttoptr i32 %v3_8049175 to i8*
  %v5_8049175 = load i8, i8* %v4_8049175, align 1
  %v11_8049175 = icmp eq i8 %v5_8049175, 32
  %v1_804917d = zext i1 %v11_8049175 to i32
  %v1_8049180 = add i32 %v0_8049170, 147
  store i32 %v1_8049180, i32* %esi.global-to-local, align 4
  store i32 %v1_804917d, i32* %eax.global-to-local, align 4
  %v1_804918c = add i32 %v0_8049170, 12
  %v2_804918c = inttoptr i32 %v1_804918c to i32*
  store i32 2, i32* %v2_804918c, align 4
  %v1_804918e = add i32 %v0_8049170, 8
  %v2_804918e = inttoptr i32 %v1_804918e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_804918e, align 4
  %v0_8049193 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049193 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049193 = add i32 %v1_8049193, %v0_8049193
  store i32 %v2_8049193, i32* @ebx, align 4
  %v1_8049195 = add i32 %v0_8049170, 120
  %v2_8049195 = inttoptr i32 %v1_8049195 to i32*
  %v3_8049195 = load i32, i32* %v2_8049195, align 4
  %v2_8049199 = sub i32 %v3_8049195, %v2_8049193
  store i32 %v2_8049199, i32* %eax.global-to-local, align 4
  %v0_804919b = load i32, i32* %esi.global-to-local, align 4
  %v2_804919b = add i32 %v0_804919b, %v2_8049193
  %v12_804919b = icmp eq i32 %v2_804919b, 0
  store i1 %v12_804919b, i1* %zf.global-to-local, align 1
  store i32 %v2_804919b, i32* @esi, align 4
  %v2_804919d = add i32 %v0_8049170, 4
  %v3_804919d = inttoptr i32 %v2_804919d to i32*
  store i32 %v2_8049199, i32* %v3_804919d, align 4
  %v0_804919e = load i32, i32* @esi, align 4
  %v3_804919e = inttoptr i32 %v0_8049170 to i32*
  store i32 %v0_804919e, i32* %v3_804919e, align 4
  %v0_804919f = call i32 @function_8051cf0()
  store i32 %v0_804919f, i32* %eax.global-to-local, align 4
  %v0_80491a4 = load i32, i32* @esp, align 4
  store i32 %v0_804919f, i32* %edx.global-to-local, align 4
  %v10_80491a9 = icmp eq i32 %v0_804919f, -1
  store i1 %v10_80491a9, i1* %zf.global-to-local, align 1
  br i1 %v10_80491a9, label %dec_label_pc_80491db, label %dec_label_pc_80491ae

dec_label_pc_80491ae:                             ; preds = %dec_label_pc_804914f
  %v10_80491ae = icmp eq i32 %v0_804919f, 1
  store i1 %v10_80491ae, i1* %zf.global-to-local, align 1
  %v7_80491b1 = icmp sgt i32 %v0_804919f, 1
  br i1 %v7_80491b1, label %dec_label_pc_80491b3, label %dec_label_pc_80491b6

dec_label_pc_80491b3:                             ; preds = %dec_label_pc_80491ae
  %v1_80491b3 = add i32 %v0_804919f, -2
  %v9_80491b3 = icmp eq i32 %v1_80491b3, 0
  store i1 %v9_80491b3, i1* %zf.global-to-local, align 1
  store i32 %v1_80491b3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80491b6

dec_label_pc_80491b6:                             ; preds = %dec_label_pc_80491ae, %dec_label_pc_80491b3
  %v1_80491bf = phi i32 [ %v0_804919f, %dec_label_pc_80491ae ], [ %v1_80491b3, %dec_label_pc_80491b3 ]
  %v1_80491b6 = add i32 %v0_80491a4, 20920
  %v1_80491bd = load i32, i32* @ebx, align 4
  %v2_80491bd = add i32 %v1_80491b6, %v1_80491bd
  %v12_80491bd = icmp eq i32 %v2_80491bd, 0
  store i1 %v12_80491bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80491bd, i32* %eax.global-to-local, align 4
  %v2_80491bf = add i32 %v1_80491bf, -20773
  %v3_80491bf = add i32 %v2_80491bf, %v2_80491bd
  %v4_80491bf = inttoptr i32 %v3_80491bf to i8*
  store i8 0, i8* %v4_80491bf, align 1
  %v0_80491c7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80491c7 = load i32, i32* @esp, align 4
  %v2_80491c7 = add i32 %v1_80491c7, -4
  %v3_80491c7 = inttoptr i32 %v2_80491c7 to i32*
  store i32 %v0_80491c7, i32* %v3_80491c7, align 4
  %v0_80491c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491c8 = add i32 %v1_80491c7, -8
  %v3_80491c8 = inttoptr i32 %v2_80491c8 to i32*
  store i32 %v0_80491c8, i32* %v3_80491c8, align 4
  %v1_80491c9 = add i32 %v1_80491c7, -12
  %v2_80491c9 = inttoptr i32 %v1_80491c9 to i32*
  store i32 10, i32* %v2_80491c9, align 4
  %v0_80491cb = load i32, i32* @esi, align 4
  %v2_80491cb = add i32 %v1_80491c7, -16
  %v3_80491cb = inttoptr i32 %v2_80491cb to i32*
  store i32 %v0_80491cb, i32* %v3_80491cb, align 4
  %v3_80491cc = call i32 @function_8051d40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80491cc, i32* %eax.global-to-local, align 4
  %v0_80491d1 = load i32, i32* @esp, align 4
  %v1_80491d1 = add i32 %v0_80491d1, 108
  %v2_80491d1 = inttoptr i32 %v1_80491d1 to i32*
  %v3_80491d1 = load i32, i32* %v2_80491d1, align 4
  store i32 %v3_80491d1, i32* %ecx.global-to-local, align 4
  %v6_80491d5 = icmp eq i32 %v0_80491d1, -16
  store i1 %v6_80491d5, i1* %zf.global-to-local, align 1
  %v2_80491d8 = add i32 %v3_80491d1, 12
  %v3_80491d8 = inttoptr i32 %v2_80491d8 to i32*
  store i32 %v3_80491cc, i32* %v3_80491d8, align 4
  br label %dec_label_pc_80491db

dec_label_pc_80491db:                             ; preds = %dec_label_pc_804914f, %dec_label_pc_8049a67, %dec_label_pc_80491b6
  store i1 true, i1* %zf.global-to-local, align 1
  %v1_80491e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_80491e0:                             ; preds = %dec_label_pc_8049301, %dec_label_pc_80491db
  %v1_80491e0 = phi i32 [ %v1_80491e0.pre, %dec_label_pc_80491db ], [ %v0_8049301, %dec_label_pc_8049301 ]
  %storemerge5 = phi i32 [ 0, %dec_label_pc_80491db ], [ %v3_8049301, %dec_label_pc_8049301 ]
  store i32 %storemerge5, i32* @esi, align 4
  %v0_80491e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e0 = add i32 %v1_80491e0, -4
  %v3_80491e0 = inttoptr i32 %v2_80491e0 to i32*
  store i32 %v0_80491e0, i32* %v3_80491e0, align 4
  %v0_80491e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e1 = add i32 %v1_80491e0, -8
  %v3_80491e1 = inttoptr i32 %v2_80491e1 to i32*
  store i32 %v0_80491e1, i32* %v3_80491e1, align 4
  %v1_80491e2 = add i32 %v1_80491e0, -12
  %v2_80491e2 = inttoptr i32 %v1_80491e2 to i32*
  store i32 0, i32* %v2_80491e2, align 4
  %v1_80491e4 = add i32 %v1_80491e0, -16
  %v2_80491e4 = inttoptr i32 %v1_80491e4 to i32*
  store i32 42, i32* %v2_80491e4, align 4
  %v3_80491e6 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80491e6, i32* %eax.global-to-local, align 4
  %v0_80491eb = load i32, i32* @esp, align 4
  %v1_80491eb = add i32 %v0_80491eb, 147
  %v1_80491f5 = load i32, i32* @esi, align 4
  %v2_80491f5 = add i32 %v1_80491eb, %v1_80491f5
  %v12_80491f5 = icmp eq i32 %v2_80491f5, 0
  store i1 %v12_80491f5, i1* %zf.global-to-local, align 1
  store i32 %v2_80491f5, i32* @ebx, align 4
  %v2_80491f7 = add i32 %v0_80491eb, 8
  %v3_80491f7 = inttoptr i32 %v2_80491f7 to i32*
  store i32 %v3_80491e6, i32* %v3_80491f7, align 4
  %v1_80491f8 = add i32 %v0_80491eb, 120
  %v2_80491f8 = inttoptr i32 %v1_80491f8 to i32*
  %v3_80491f8 = load i32, i32* %v2_80491f8, align 4
  store i32 %v3_80491f8, i32* @ebp, align 4
  %v2_80491fc = add i32 %v0_80491eb, 4
  %v3_80491fc = inttoptr i32 %v2_80491fc to i32*
  store i32 %v3_80491f8, i32* %v3_80491fc, align 4
  %v0_80491fd = load i32, i32* @ebx, align 4
  %v3_80491fd = inttoptr i32 %v0_80491eb to i32*
  store i32 %v0_80491fd, i32* %v3_80491fd, align 4
  %v0_80491fe = call i32 @function_8051f30()
  %v0_8049203 = load i32, i32* @esp, align 4
  %v1_8049206 = add i32 %v0_80491fe, 1
  %v8_8049206 = icmp eq i32 %v1_8049206, 0
  store i1 %v8_8049206, i1* %zf.global-to-local, align 1
  store i32 %v1_8049206, i32* %eax.global-to-local, align 4
  br i1 %v8_8049206, label %dec_label_pc_80493d2, label %dec_label_pc_804920d

dec_label_pc_804920d:                             ; preds = %dec_label_pc_80491e0
  %v1_804920d = add i32 %v0_8049203, 108
  %v2_804920d = inttoptr i32 %v1_804920d to i32*
  %v3_804920d = load i32, i32* %v2_804920d, align 4
  store i32 %v3_804920d, i32* %edx.global-to-local, align 4
  %v1_8049211 = add i32 %v3_804920d, 16
  %v2_8049211 = inttoptr i32 %v1_8049211 to i32*
  %v3_8049211 = load i32, i32* %v2_8049211, align 4
  %v4_8049211 = add i32 %v3_8049211, -4
  %v9_8049211 = sub i32 3, %v3_8049211
  %v10_8049211 = and i32 %v9_8049211, %v3_8049211
  %v11_8049211 = icmp slt i32 %v10_8049211, 0
  %v12_8049211 = icmp eq i32 %v4_8049211, 0
  store i1 %v12_8049211, i1* %zf.global-to-local, align 1
  %v13_8049211 = icmp slt i32 %v4_8049211, 0
  %v3_8049215 = icmp eq i1 %v13_8049211, %v11_8049211
  %v4_8049215 = icmp eq i1 %v12_8049211, false
  %v5_8049215 = and i1 %v4_8049215, %v3_8049215
  br i1 %v5_8049215, label %dec_label_pc_80493d2, label %dec_label_pc_804921b

dec_label_pc_804921b:                             ; preds = %dec_label_pc_804920d
  %v2_804921b = add i32 %v0_8049203, 12
  %v3_804921b = inttoptr i32 %v2_804921b to i32*
  store i32 %v1_8049206, i32* %v3_804921b, align 4
  %v0_804921c = load i32, i32* %eax.global-to-local, align 4
  %v2_804921c = add i32 %v0_8049203, 8
  %v3_804921c = inttoptr i32 %v2_804921c to i32*
  store i32 %v0_804921c, i32* %v3_804921c, align 4
  %v1_804921d = add i32 %v0_8049203, 4
  %v2_804921d = inttoptr i32 %v1_804921d to i32*
  store i32 0, i32* %v2_804921d, align 4
  %v2_804921f = inttoptr i32 %v0_8049203 to i32*
  store i32 42, i32* %v2_804921f, align 4
  %v3_8049221 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049221, i32* %eax.global-to-local, align 4
  %v0_8049226 = load i32, i32* @esp, align 4
  %v9_8049226 = icmp eq i32 %v0_8049226, -12
  store i1 %v9_8049226, i1* %zf.global-to-local, align 1
  %v2_8049229 = add i32 %v0_8049226, 8
  %v3_8049229 = inttoptr i32 %v2_8049229 to i32*
  store i32 %v3_8049221, i32* %v3_8049229, align 4
  %v1_804922a = add i32 %v0_8049226, 120
  %v2_804922a = inttoptr i32 %v1_804922a to i32*
  %v3_804922a = load i32, i32* %v2_804922a, align 4
  store i32 %v3_804922a, i32* %eax.global-to-local, align 4
  %v2_804922e = add i32 %v0_8049226, 4
  %v3_804922e = inttoptr i32 %v2_804922e to i32*
  store i32 %v3_804922a, i32* %v3_804922e, align 4
  %v0_804922f = load i32, i32* @ebx, align 4
  %v3_804922f = inttoptr i32 %v0_8049226 to i32*
  store i32 %v0_804922f, i32* %v3_804922f, align 4
  %v0_8049230 = call i32 @function_8051f30()
  store i32 %v0_8049230, i32* %eax.global-to-local, align 4
  %v0_8049235 = load i32, i32* @esi, align 4
  %v2_8049235 = add i32 %v0_8049235, %v0_8049230
  store i32 %v2_8049235, i32* %edx.global-to-local, align 4
  %v1_8049238 = load i32, i32* @esp, align 4
  %v2_8049238 = add i32 %v1_8049238, 124
  %v3_8049238 = inttoptr i32 %v2_8049238 to i32*
  store i32 %v2_8049235, i32* %v3_8049238, align 4
  %v0_804923c = load i32, i32* @esp, align 4
  %v1_804923c = add i32 %v0_804923c, 16
  %v6_804923c = icmp eq i32 %v1_804923c, 0
  store i1 %v6_804923c, i1* %zf.global-to-local, align 1
  %v1_804923f = load i32, i32* %edx.global-to-local, align 4
  %v2_804923f = add i32 %v0_804923c, 147
  %v3_804923f = add i32 %v2_804923f, %v1_804923f
  %v4_804923f = inttoptr i32 %v3_804923f to i8*
  %v5_804923f = load i8, i8* %v4_804923f, align 1
  %v11_804923f = icmp eq i8 %v5_804923f, 32
  store i1 %v11_804923f, i1* %zf.global-to-local, align 1
  br i1 %v11_804923f, label %dec_label_pc_804939a, label %dec_label_pc_804924d

dec_label_pc_804924d:                             ; preds = %dec_label_pc_804921b, %dec_label_pc_804939a
  %v0_8049256 = phi i32 [ %v1_804923c, %dec_label_pc_804921b ], [ %v0_804924d.pre, %dec_label_pc_804939a ]
  %v1_804924d = add i32 %v0_8049256, 104
  %v2_804924d = inttoptr i32 %v1_804924d to i32*
  %v3_804924d = load i32, i32* %v2_804924d, align 4
  %v0_8049251 = load i32, i32* @ebx, align 4
  %v1_8049251 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049251 = add i32 %v1_8049251, %v0_8049251
  store i32 %v2_8049251, i32* @ebp, align 4
  %v1_8049254 = load i32, i32* @esi, align 4
  %v2_8049254 = sub i32 %v3_804924d, %v1_8049254
  store i32 %v2_8049254, i32* %edi.global-to-local, align 4
  %v1_8049256 = add i32 %v0_8049256, -4
  %v2_8049256 = inttoptr i32 %v1_8049256 to i32*
  store i32 2, i32* %v2_8049256, align 4
  %v0_8049258 = load i32, i32* %edi.global-to-local, align 4
  %v1_8049258 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049258 = sub i32 %v0_8049258, %v1_8049258
  %v12_8049258 = icmp eq i32 %v2_8049258, 0
  store i1 %v12_8049258, i1* %zf.global-to-local, align 1
  store i32 %v2_8049258, i32* @edi, align 4
  %v1_804925a = add i32 %v0_8049256, -8
  %v2_804925a = inttoptr i32 %v1_804925a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_804925a, align 4
  %v0_804925f = load i32, i32* @edi, align 4
  %v2_804925f = add i32 %v0_8049256, -12
  %v3_804925f = inttoptr i32 %v2_804925f to i32*
  store i32 %v0_804925f, i32* %v3_804925f, align 4
  %v0_8049260 = load i32, i32* @ebp, align 4
  %v2_8049260 = add i32 %v0_8049256, -16
  %v3_8049260 = inttoptr i32 %v2_8049260 to i32*
  store i32 %v0_8049260, i32* %v3_8049260, align 4
  %v0_8049261 = call i32 @function_8051cf0()
  store i32 %v0_8049261, i32* %eax.global-to-local, align 4
  %v0_8049266 = load i32, i32* @esp, align 4
  %v1_8049266 = add i32 %v0_8049266, 16
  store i32 %v0_8049261, i32* @ebx, align 4
  %v10_804926b = icmp eq i32 %v0_8049261, -1
  store i1 %v10_804926b, i1* %zf.global-to-local, align 1
  br i1 %v10_804926b, label %dec_label_pc_8049301, label %dec_label_pc_8049274

dec_label_pc_8049274:                             ; preds = %dec_label_pc_804924d
  %v1_8049274 = add i32 %v0_8049266, 147
  store i32 %v1_8049274, i32* %esi.global-to-local, align 4
  %v1_804927b = add i32 %v0_8049266, 124
  %v2_804927b = inttoptr i32 %v1_804927b to i32*
  %v3_804927b = load i32, i32* %v2_804927b, align 4
  store i32 %v3_804927b, i32* %eax.global-to-local, align 4
  %v2_804927f = add i32 %v3_804927b, %v1_8049274
  store i32 %v2_804927f, i32* @esi, align 4
  %v10_8049281 = icmp eq i32 %v0_8049261, 1
  store i1 %v10_8049281, i1* %zf.global-to-local, align 1
  %v7_8049284 = icmp sgt i32 %v0_8049261, 1
  br i1 %v7_8049284, label %dec_label_pc_8049286, label %dec_label_pc_8049289

dec_label_pc_8049286:                             ; preds = %dec_label_pc_8049274
  %v1_8049286 = add i32 %v0_8049261, -2
  %v9_8049286 = icmp eq i32 %v1_8049286, 0
  store i1 %v9_8049286, i1* %zf.global-to-local, align 1
  store i32 %v1_8049286, i32* @ebx, align 4
  br label %dec_label_pc_8049289

dec_label_pc_8049289:                             ; preds = %dec_label_pc_8049274, %dec_label_pc_8049286
  %v1_8049289 = add i32 %v0_8049266, 12
  %v2_8049289 = inttoptr i32 %v1_8049289 to i32*
  store i32 1, i32* %v2_8049289, align 4
  %v1_804928b = add i32 %v0_8049266, 8
  %v2_804928b = inttoptr i32 %v1_804928b to i32*
  store i32 ptrtoint (i32* @global_var_8054989.14 to i32), i32* %v2_804928b, align 4
  %v0_8049290 = load i32, i32* @edi, align 4
  %v2_8049290 = add i32 %v0_8049266, 4
  %v3_8049290 = inttoptr i32 %v2_8049290 to i32*
  store i32 %v0_8049290, i32* %v3_8049290, align 4
  %v0_8049291 = load i32, i32* @ebp, align 4
  %v3_8049291 = inttoptr i32 %v0_8049266 to i32*
  store i32 %v0_8049291, i32* %v3_8049291, align 4
  %v0_8049292 = call i32 @function_8051cf0()
  store i32 %v0_8049292, i32* %eax.global-to-local, align 4
  %v0_8049297 = load i32, i32* @esp, align 4
  %v1_804929a = icmp eq i32 %v0_8049292, 0
  store i1 %v1_804929a, i1* %zf.global-to-local, align 1
  %tmp144 = icmp slt i32 %v0_8049292, 1
  br i1 %tmp144, label %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, label %dec_label_pc_804929e

dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge: ; preds = %dec_label_pc_8049289
  %v1_8049297 = add i32 %v0_8049297, 16
  %v1_80492bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_804929e:                             ; preds = %dec_label_pc_8049289
  %v1_804929e = add i32 %v0_8049297, 12
  %v2_804929e = inttoptr i32 %v1_804929e to i32*
  store i32 1, i32* %v2_804929e, align 4
  %v1_80492a0 = add i32 %v0_8049297, 8
  %v2_80492a0 = inttoptr i32 %v1_80492a0 to i32*
  store i32 ptrtoint (i32* @global_var_8054989.14 to i32), i32* %v2_80492a0, align 4
  %v0_80492a5 = load i32, i32* @edi, align 4
  %v2_80492a5 = add i32 %v0_8049297, 4
  %v3_80492a5 = inttoptr i32 %v2_80492a5 to i32*
  store i32 %v0_80492a5, i32* %v3_80492a5, align 4
  %v0_80492a6 = load i32, i32* @ebp, align 4
  %v3_80492a6 = inttoptr i32 %v0_8049297 to i32*
  store i32 %v0_80492a6, i32* %v3_80492a6, align 4
  %v0_80492a7 = call i32 @function_8051cf0()
  store i32 %v0_80492a7, i32* %eax.global-to-local, align 4
  %v0_80492ac = load i32, i32* @esp, align 4
  %v1_80492ac = add i32 %v0_80492ac, 16
  %v6_80492ac = icmp eq i32 %v1_80492ac, 0
  store i1 %v6_80492ac, i1* %zf.global-to-local, align 1
  %v1_80492af = add i32 %v0_80492a7, -1
  store i32 %v1_80492af, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_80492b2:                             ; preds = %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, %dec_label_pc_804929e
  %v1_80492bd = phi i32 [ %v1_80492bd.pre, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492af, %dec_label_pc_804929e ]
  %v0_80492bf = phi i32 [ %v1_8049297, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492ac, %dec_label_pc_804929e ]
  %v1_80492b2 = add i32 %v0_80492bf, 20904
  store i32 %v1_80492b2, i32* %eax.global-to-local, align 4
  %v1_80492b9 = add i32 %v0_80492bf, 108
  %v2_80492b9 = inttoptr i32 %v1_80492b9 to i32*
  %v3_80492b9 = load i32, i32* %v2_80492b9, align 4
  store i32 %v3_80492b9, i32* %edx.global-to-local, align 4
  %v2_80492bd = add i32 %v1_80492b2, %v1_80492bd
  %v12_80492bd = icmp eq i32 %v2_80492bd, 0
  store i1 %v12_80492bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80492bd, i32* %eax.global-to-local, align 4
  %v1_80492bf = add i32 %v0_80492bf, 20900
  %v2_80492bf = inttoptr i32 %v1_80492bf to i32*
  store i32 0, i32* %v2_80492bf, align 4
  %v0_80492ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80492ca = load i32, i32* %edx.global-to-local, align 4
  %v2_80492ca = add i32 %v0_80492ca, -20773
  %v3_80492ca = add i32 %v2_80492ca, %v1_80492ca
  %v4_80492ca = inttoptr i32 %v3_80492ca to i8*
  store i8 0, i8* %v4_80492ca, align 1
  br label %dec_label_pc_80492e4

dec_label_pc_80492d4:                             ; preds = %dec_label_pc_80492e4
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_80492da

dec_label_pc_80492da:                             ; preds = %dec_label_pc_80492d4
  %v1_80492da = add i32 %v3_80492ed, 1
  store i32 %v1_80492da, i32* %eax.global-to-local, align 4
  store i32 %v1_80492da, i32* %v2_80492ed, align 4
  br label %dec_label_pc_80492e4

dec_label_pc_80492e4:                             ; preds = %dec_label_pc_80492b2, %dec_label_pc_80492da
  %v0_80492e4 = load i32, i32* @esp, align 4
  %v9_80492e4 = icmp eq i32 %v0_80492e4, 12
  store i1 %v9_80492e4, i1* %zf.global-to-local, align 1
  %v0_80492e7 = load i32, i32* @esi, align 4
  %v2_80492e7 = add i32 %v0_80492e4, -16
  %v3_80492e7 = inttoptr i32 %v2_80492e7 to i32*
  store i32 %v0_80492e7, i32* %v3_80492e7, align 4
  %v2_80492e8 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_80492e8, i32* %eax.global-to-local, align 4
  %v0_80492ed = load i32, i32* @esp, align 4
  %v1_80492ed = add i32 %v0_80492ed, 20916
  %v2_80492ed = inttoptr i32 %v1_80492ed to i32*
  %v3_80492ed = load i32, i32* %v2_80492ed, align 4
  store i32 %v3_80492ed, i32* @ebx, align 4
  %v2_80492f7 = sub i32 %v2_80492e8, %v3_80492ed
  %v8_80492f7 = xor i32 %v3_80492ed, %v2_80492e8
  %v9_80492f7 = xor i32 %v2_80492f7, %v2_80492e8
  %v10_80492f7 = and i32 %v9_80492f7, %v8_80492f7
  %v11_80492f7 = icmp slt i32 %v10_80492f7, 0
  %v12_80492f7 = icmp eq i32 %v2_80492f7, 0
  store i1 %v12_80492f7, i1* %zf.global-to-local, align 1
  %v13_80492f7 = icmp slt i32 %v2_80492f7, 0
  %v3_80492f9 = icmp eq i1 %v13_80492f7, %v11_80492f7
  %v4_80492f9 = icmp eq i1 %v12_80492f7, false
  %v5_80492f9 = and i1 %v4_80492f9, %v3_80492f9
  %v0_80492d4 = load i32, i32* @esi, align 4
  %v2_80492d4 = add i32 %v0_80492d4, %v3_80492ed
  %v3_80492d4 = inttoptr i32 %v2_80492d4 to i8*
  %v4_80492d4 = load i8, i8* %v3_80492d4, align 1
  %v13_80492d4 = icmp eq i8 %v4_80492d4, 61
  store i1 %v13_80492d4, i1* %zf.global-to-local, align 1
  br i1 %v5_80492f9, label %dec_label_pc_80492d4, label %dec_label_pc_80492fb

dec_label_pc_80492fb:                             ; preds = %dec_label_pc_80492e4
  %v1_80492f4 = add i32 %v0_80492ed, 16
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_8049301

dec_label_pc_8049301:                             ; preds = %dec_label_pc_8049322, %dec_label_pc_8049358, %dec_label_pc_80492fb, %dec_label_pc_804924d, %dec_label_pc_8049369
  %v0_8049301 = phi i32 [ %v1_8049361, %dec_label_pc_8049358 ], [ %v1_80492f4, %dec_label_pc_80492fb ], [ %v1_8049266, %dec_label_pc_804924d ], [ %v0_8049301.pre, %dec_label_pc_8049369 ], [ %v1_8049339, %dec_label_pc_8049322 ]
  %v1_8049301 = add i32 %v0_8049301, 108
  %v2_8049301 = inttoptr i32 %v1_8049301 to i32*
  %v3_8049301 = load i32, i32* %v2_8049301, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_804930a:                             ; preds = %dec_label_pc_80492d4, %dec_label_pc_80492fb
  %v1_804930a = add i32 %v0_80492ed, 108
  %v2_804930a = inttoptr i32 %v1_804930a to i32*
  %v3_804930a = load i32, i32* %v2_804930a, align 4
  store i32 %v3_804930a, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %v2_80492ed, align 4
  %v0_8049319 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049319 = add i32 %v0_8049319, 16
  %v2_8049319 = inttoptr i32 %v1_8049319 to i32*
  %v3_8049319 = load i32, i32* %v2_8049319, align 4
  %v1_804931c = icmp eq i32 %v3_8049319, 0
  store i1 %v1_804931c, i1* %zf.global-to-local, align 1
  %tmp145 = icmp slt i32 %v3_8049319, 1
  br i1 %tmp145, label %dec_label_pc_8049358, label %dec_label_pc_8049320

dec_label_pc_8049320:                             ; preds = %dec_label_pc_804930a
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049322

dec_label_pc_8049322:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_8049320
  %v0_8049322 = phi i32 [ %v4_8049353, %dec_label_pc_8049340 ], [ 0, %dec_label_pc_8049320 ]
  %v2_8049322 = mul i32 %v0_8049322, 128
  %v3_8049322 = icmp eq i32 %v2_8049322, 0
  store i1 %v3_8049322, i1* %zf.global-to-local, align 1
  store i32 %v2_8049322, i32* %eax.global-to-local, align 4
  %v0_8049325 = load i32, i32* @edi, align 4
  %v1_8049325 = load i32, i32* @esp, align 4
  %v2_8049325 = add i32 %v1_8049325, -4
  %v3_8049325 = inttoptr i32 %v2_8049325 to i32*
  store i32 %v0_8049325, i32* %v3_8049325, align 4
  %v0_8049326 = load i32, i32* @ebx, align 4
  %v2_8049326 = add i32 %v1_8049325, -8
  %v3_8049326 = inttoptr i32 %v2_8049326 to i32*
  store i32 %v0_8049326, i32* %v3_8049326, align 4
  %v1_8049327 = add i32 %v1_8049325, 76
  %v2_8049327 = inttoptr i32 %v1_8049327 to i32*
  %v3_8049327 = load i32, i32* %v2_8049327, align 4
  store i32 %v3_8049327, i32* %edx.global-to-local, align 4
  %v0_804932b = load i32, i32* %eax.global-to-local, align 4
  %v2_804932b = add i32 %v3_8049327, 1472
  %v3_804932b = add i32 %v2_804932b, %v0_804932b
  store i32 %v3_804932b, i32* %eax.global-to-local, align 4
  %v2_8049332 = add i32 %v1_8049325, -12
  %v3_8049332 = inttoptr i32 %v2_8049332 to i32*
  store i32 %v3_804932b, i32* %v3_8049332, align 4
  %v0_8049333 = load i32, i32* @esi, align 4
  %v2_8049333 = add i32 %v1_8049325, -16
  %v3_8049333 = inttoptr i32 %v2_8049333 to i32*
  store i32 %v0_8049333, i32* %v3_8049333, align 4
  %v0_8049334 = call i32 @function_8052000()
  store i32 %v0_8049334, i32* %eax.global-to-local, align 4
  %v0_8049339 = load i32, i32* @esp, align 4
  %v1_8049339 = add i32 %v0_8049339, 16
  %v3_804933c = trunc i32 %v0_8049334 to i8
  %v4_804933c = icmp eq i8 %v3_804933c, 0
  store i1 %v4_804933c, i1* %zf.global-to-local, align 1
  %v1_804933e = icmp eq i1 %v4_804933c, false
  br i1 %v1_804933e, label %dec_label_pc_8049301, label %dec_label_pc_8049340

dec_label_pc_8049340:                             ; preds = %dec_label_pc_8049322
  %v1_8049340 = add i32 %v0_8049339, 20916
  %v2_8049340 = inttoptr i32 %v1_8049340 to i32*
  %v3_8049340 = load i32, i32* %v2_8049340, align 4
  store i32 %v3_8049340, i32* %eax.global-to-local, align 4
  %v1_8049347 = add i32 %v0_8049339, 108
  %v2_8049347 = inttoptr i32 %v1_8049347 to i32*
  %v3_8049347 = load i32, i32* %v2_8049347, align 4
  store i32 %v3_8049347, i32* %ecx.global-to-local, align 4
  %v1_804934b = add i32 %v3_8049340, 1
  store i32 %v1_804934b, i32* %eax.global-to-local, align 4
  store i32 %v1_804934b, i32* %v2_8049340, align 4
  %v0_8049353 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049353 = add i32 %v0_8049353, 16
  %v2_8049353 = inttoptr i32 %v1_8049353 to i32*
  %v3_8049353 = load i32, i32* %v2_8049353, align 4
  %v4_8049353 = load i32, i32* %eax.global-to-local, align 4
  %v5_8049353 = sub i32 %v3_8049353, %v4_8049353
  %v11_8049353 = xor i32 %v4_8049353, %v3_8049353
  %v12_8049353 = xor i32 %v5_8049353, %v3_8049353
  %v13_8049353 = and i32 %v12_8049353, %v11_8049353
  %v14_8049353 = icmp slt i32 %v13_8049353, 0
  %v15_8049353 = icmp eq i32 %v5_8049353, 0
  store i1 %v15_8049353, i1* %zf.global-to-local, align 1
  %v16_8049353 = icmp slt i32 %v5_8049353, 0
  %v3_8049356 = icmp eq i1 %v16_8049353, %v14_8049353
  %v4_8049356 = icmp eq i1 %v15_8049353, false
  %v5_8049356 = and i1 %v4_8049356, %v3_8049356
  br i1 %v5_8049356, label %dec_label_pc_8049322, label %dec_label_pc_8049358

dec_label_pc_8049358:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_804930a
  %v0_8049358 = load i32, i32* @esp, align 4
  %v9_8049358 = icmp eq i32 %v0_8049358, 12
  store i1 %v9_8049358, i1* %zf.global-to-local, align 1
  %v0_804935b = load i32, i32* @esi, align 4
  %v2_804935b = add i32 %v0_8049358, -16
  %v3_804935b = inttoptr i32 %v2_804935b to i32*
  store i32 %v0_804935b, i32* %v3_804935b, align 4
  %v2_804935c = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_804935c, i32* %eax.global-to-local, align 4
  %v0_8049361 = load i32, i32* @esp, align 4
  %v1_8049361 = add i32 %v0_8049361, 16
  %v1_8049364 = add i32 %v2_804935c, -127
  %v6_8049364 = sub i32 126, %v2_804935c
  %v7_8049364 = and i32 %v6_8049364, %v2_804935c
  %v8_8049364 = icmp slt i32 %v7_8049364, 0
  %v9_8049364 = icmp eq i32 %v1_8049364, 0
  store i1 %v9_8049364, i1* %zf.global-to-local, align 1
  %v10_8049364 = icmp slt i32 %v1_8049364, 0
  %v3_8049367 = icmp eq i1 %v10_8049364, %v8_8049364
  %v4_8049367 = icmp eq i1 %v9_8049364, false
  %v5_8049367 = and i1 %v4_8049367, %v3_8049367
  br i1 %v5_8049367, label %dec_label_pc_8049301, label %dec_label_pc_8049369

dec_label_pc_8049369:                             ; preds = %dec_label_pc_8049358
  %v0_8049369 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049369 = add i32 %v0_8049361, 12
  %v3_8049369 = inttoptr i32 %v2_8049369 to i32*
  store i32 %v0_8049369, i32* %v3_8049369, align 4
  %v0_804936a = load i32, i32* %ecx.global-to-local, align 4
  %v2_804936a = add i32 %v0_8049361, 8
  %v3_804936a = inttoptr i32 %v2_804936a to i32*
  store i32 %v0_804936a, i32* %v3_804936a, align 4
  %v0_804936b = load i32, i32* @esi, align 4
  %v2_804936b = add i32 %v0_8049361, 4
  %v3_804936b = inttoptr i32 %v2_804936b to i32*
  store i32 %v0_804936b, i32* %v3_804936b, align 4
  %v1_804936c = add i32 %v0_8049361, 108
  %v2_804936c = inttoptr i32 %v1_804936c to i32*
  %v3_804936c = load i32, i32* %v2_804936c, align 4
  store i32 %v3_804936c, i32* %edx.global-to-local, align 4
  %v1_8049370 = add i32 %v0_8049361, 92
  %v2_8049370 = inttoptr i32 %v1_8049370 to i32*
  %v3_8049370 = load i32, i32* %v2_8049370, align 4
  store i32 %v3_8049370, i32* %ecx.global-to-local, align 4
  %v1_8049374 = add i32 %v3_804936c, 16
  %v2_8049374 = inttoptr i32 %v1_8049374 to i32*
  %v3_8049374 = load i32, i32* %v2_8049374, align 4
  %v2_8049377 = mul i32 %v3_8049374, 128
  %v3_8049377 = icmp eq i32 %v2_8049377, 0
  store i1 %v3_8049377, i1* %zf.global-to-local, align 1
  %v2_804937a = add i32 %v3_8049370, 1472
  %v3_804937a = add i32 %v2_804937a, %v2_8049377
  store i32 %v3_804937a, i32* %eax.global-to-local, align 4
  %v3_8049381 = inttoptr i32 %v0_8049361 to i32*
  store i32 %v3_804937a, i32* %v3_8049381, align 4
  %v3_8049382 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049382, i32* %eax.global-to-local, align 4
  %v0_8049387 = load i32, i32* @esp, align 4
  %v1_8049387 = add i32 %v0_8049387, 108
  %v2_8049387 = inttoptr i32 %v1_8049387 to i32*
  %v3_8049387 = load i32, i32* %v2_8049387, align 4
  store i32 %v3_8049387, i32* %eax.global-to-local, align 4
  %v1_804938e = add i32 %v3_8049387, 16
  %v2_804938e = inttoptr i32 %v1_804938e to i32*
  %v3_804938e = load i32, i32* %v2_804938e, align 4
  %v1_8049391 = add i32 %v3_804938e, 1
  %v8_8049391 = icmp eq i32 %v1_8049391, 0
  store i1 %v8_8049391, i1* %zf.global-to-local, align 1
  store i32 %v1_8049391, i32* %edx.global-to-local, align 4
  store i32 %v1_8049391, i32* %v2_804938e, align 4
  %v0_8049301.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049301

dec_label_pc_804939a:                             ; preds = %dec_label_pc_804921b
  %v0_804939a = load i32, i32* %eax.global-to-local, align 4
  %v1_804939a = add i32 %v0_804939a, 1
  %v8_804939a = icmp eq i32 %v1_804939a, 0
  store i1 %v8_804939a, i1* %zf.global-to-local, align 1
  store i32 %v1_804939a, i32* %eax.global-to-local, align 4
  %v0_804939b = load i32, i32* @esi, align 4
  %v2_804939b = add i32 %v0_804939b, %v1_804939a
  store i32 %v2_804939b, i32* %ecx.global-to-local, align 4
  %v2_804939e = add i32 %v0_804923c, 124
  %v3_804939e = inttoptr i32 %v2_804939e to i32*
  store i32 %v2_804939b, i32* %v3_804939e, align 4
  %v0_804924d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804924d

dec_label_pc_80493a7:                             ; preds = %dec_label_pc_8048547
  %v1_80493a7 = add i32 %v0_80485a5, -1440
  %v2_80493a7 = inttoptr i32 %v1_80493a7 to i32*
  %v3_80493a7 = load i32, i32* %v2_80493a7, align 4
  %v1_80493af = urem i32 %v3_80493a7, 32
  store i32 %v1_80493af, i32* %eax.global-to-local, align 4
  %v2_80493b2 = udiv i32 %v3_80493a7, 32
  store i32 %v2_80493b2, i32* %edx.global-to-local, align 4
  %v0_80493b5 = load i32, i32* @esp, align 4
  %v2_80493b5 = mul nuw nsw i32 %v2_80493b2, 4
  %v3_80493b5 = add nuw nsw i32 %v2_80493b5, 20740
  %v4_80493b5 = add i32 %v3_80493b5, %v0_80493b5
  %v5_80493b5 = inttoptr i32 %v4_80493b5 to i32*
  %v6_80493b5 = load i32, i32* %v5_80493b5, align 4
  %v9_80493b5 = shl i32 1, %v1_80493af
  %v12_80493b5 = or i32 %v6_80493b5, %v9_80493b5
  store i32 %v12_80493b5, i32* %v5_80493b5, align 4
  %v0_80493bd = load i32, i32* @esi, align 4
  %v1_80493bd = add i32 %v0_80493bd, -1440
  %v2_80493bd = inttoptr i32 %v1_80493bd to i32*
  %v3_80493bd = load i32, i32* %v2_80493bd, align 4
  store i32 %v3_80493bd, i32* %eax.global-to-local, align 4
  %v1_80493c3 = load i32, i32* @esp, align 4
  %v2_80493c3 = add i32 %v1_80493c3, 72
  %v3_80493c3 = inttoptr i32 %v2_80493c3 to i32*
  %v4_80493c3 = load i32, i32* %v3_80493c3, align 4
  %v5_80493c3 = sub i32 %v3_80493bd, %v4_80493c3
  %v11_80493c3 = xor i32 %v4_80493c3, %v3_80493bd
  %v12_80493c3 = xor i32 %v5_80493c3, %v3_80493bd
  %v13_80493c3 = and i32 %v12_80493c3, %v11_80493c3
  %v14_80493c3 = icmp slt i32 %v13_80493c3, 0
  %v15_80493c3 = icmp eq i32 %v5_80493c3, 0
  store i1 %v15_80493c3, i1* %zf.global-to-local, align 1
  %v16_80493c3 = icmp slt i32 %v5_80493c3, 0
  %v3_80493c7 = icmp ne i1 %v16_80493c3, %v14_80493c3
  %v4_80493c7 = or i1 %v15_80493c3, %v3_80493c7
  br i1 %v4_80493c7, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80493d2:                             ; preds = %dec_label_pc_804920d, %dec_label_pc_80491e0
  %v0_80493d2 = load i32, i32* @edi, align 4
  %v2_80493d2 = add i32 %v0_8049203, 12
  %v3_80493d2 = inttoptr i32 %v2_80493d2 to i32*
  store i32 %v0_80493d2, i32* %v3_80493d2, align 4
  %v0_80493d3 = load i32, i32* @edi, align 4
  %v2_80493d3 = add i32 %v0_8049203, 8
  %v3_80493d3 = inttoptr i32 %v2_80493d3 to i32*
  store i32 %v0_80493d3, i32* %v3_80493d3, align 4
  %v1_80493d4 = add i32 %v0_8049203, 4
  %v2_80493d4 = inttoptr i32 %v1_80493d4 to i32*
  store i32 0, i32* %v2_80493d4, align 4
  %v2_80493d6 = inttoptr i32 %v0_8049203 to i32*
  store i32 41, i32* %v2_80493d6, align 4
  %v3_80493d8 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80493d8, i32* %eax.global-to-local, align 4
  %v0_80493dd = load i32, i32* @esp, align 4
  %v9_80493dd = icmp eq i32 %v0_80493dd, -12
  store i1 %v9_80493dd, i1* %zf.global-to-local, align 1
  %v2_80493e0 = add i32 %v0_80493dd, 8
  %v3_80493e0 = inttoptr i32 %v2_80493e0 to i32*
  store i32 %v3_80493d8, i32* %v3_80493e0, align 4
  %v1_80493e1 = add i32 %v0_80493dd, 120
  %v2_80493e1 = inttoptr i32 %v1_80493e1 to i32*
  %v3_80493e1 = load i32, i32* %v2_80493e1, align 4
  %v2_80493e5 = add i32 %v0_80493dd, 4
  %v3_80493e5 = inttoptr i32 %v2_80493e5 to i32*
  store i32 %v3_80493e1, i32* %v3_80493e5, align 4
  %v1_80493e6 = add i32 %v0_80493dd, 147
  store i32 %v1_80493e6, i32* @ecx, align 4
  %v3_80493ed = inttoptr i32 %v0_80493dd to i32*
  store i32 %v1_80493e6, i32* %v3_80493ed, align 4
  %v0_80493ee = call i32 @function_8051f30()
  %v0_80493f3 = load i32, i32* @esp, align 4
  %v1_80493f6 = add i32 %v0_80493ee, 1
  %v8_80493f6 = icmp eq i32 %v1_80493f6, 0
  store i1 %v8_80493f6, i1* %zf.global-to-local, align 1
  store i32 %v1_80493f6, i32* %eax.global-to-local, align 4
  br i1 %v8_80493f6, label %dec_label_pc_8049854, label %dec_label_pc_80493fd

dec_label_pc_80493fd:                             ; preds = %dec_label_pc_80493d2
  %v0_80493fd = load i32, i32* @ebx, align 4
  %v2_80493fd = add i32 %v0_80493f3, 12
  %v3_80493fd = inttoptr i32 %v2_80493fd to i32*
  store i32 %v0_80493fd, i32* %v3_80493fd, align 4
  %v0_80493fe = load i32, i32* @ebx, align 4
  %v2_80493fe = add i32 %v0_80493f3, 8
  %v3_80493fe = inttoptr i32 %v2_80493fe to i32*
  store i32 %v0_80493fe, i32* %v3_80493fe, align 4
  %v1_80493ff = add i32 %v0_80493f3, 4
  %v2_80493ff = inttoptr i32 %v1_80493ff to i32*
  store i32 0, i32* %v2_80493ff, align 4
  %v2_8049401 = inttoptr i32 %v0_80493f3 to i32*
  store i32 41, i32* %v2_8049401, align 4
  %v3_8049403 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049403, i32* %eax.global-to-local, align 4
  %v0_8049408 = load i32, i32* @esp, align 4
  %v9_8049408 = icmp eq i32 %v0_8049408, -12
  store i1 %v9_8049408, i1* %zf.global-to-local, align 1
  %v2_804940b = add i32 %v0_8049408, 8
  %v3_804940b = inttoptr i32 %v2_804940b to i32*
  store i32 %v3_8049403, i32* %v3_804940b, align 4
  %v1_804940c = add i32 %v0_8049408, 120
  %v2_804940c = inttoptr i32 %v1_804940c to i32*
  %v3_804940c = load i32, i32* %v2_804940c, align 4
  store i32 %v3_804940c, i32* @ecx, align 4
  %v2_8049410 = add i32 %v0_8049408, 4
  %v3_8049410 = inttoptr i32 %v2_8049410 to i32*
  store i32 %v3_804940c, i32* %v3_8049410, align 4
  %v1_8049411 = add i32 %v0_8049408, 147
  store i32 %v1_8049411, i32* %eax.global-to-local, align 4
  %v3_8049418 = inttoptr i32 %v0_8049408 to i32*
  store i32 %v1_8049411, i32* %v3_8049418, align 4
  %v0_8049419 = call i32 @function_8051f30()
  store i32 %v0_8049419, i32* %eax.global-to-local, align 4
  %v0_804941e = load i32, i32* @esp, align 4
  %v6_804941e = icmp eq i32 %v0_804941e, -16
  store i1 %v6_804941e, i1* %zf.global-to-local, align 1
  store i32 %v0_8049419, i32* %ebx.global-to-local, align 4
  %v3_8049423 = add i32 %v0_8049419, 147
  %v4_8049423 = add i32 %v3_8049423, %v0_804941e
  %v5_8049423 = inttoptr i32 %v4_8049423 to i8*
  %v6_8049423 = load i8, i8* %v5_8049423, align 1
  %v12_8049423 = icmp eq i8 %v6_8049423, 32
  %v1_804942b = zext i1 %v12_8049423 to i32
  %v1_804942e = add i32 %v0_804941e, 147
  store i32 %v1_804942e, i32* %esi.global-to-local, align 4
  store i32 %v1_804942b, i32* %eax.global-to-local, align 4
  %v1_804943a = add i32 %v0_804941e, 12
  %v2_804943a = inttoptr i32 %v1_804943a to i32*
  store i32 2, i32* %v2_804943a, align 4
  %v1_804943c = add i32 %v0_804941e, 8
  %v2_804943c = inttoptr i32 %v1_804943c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_804943c, align 4
  %v0_8049441 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049441 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049441 = add i32 %v1_8049441, %v0_8049441
  store i32 %v2_8049441, i32* @ebx, align 4
  %v1_8049443 = add i32 %v0_804941e, 120
  %v2_8049443 = inttoptr i32 %v1_8049443 to i32*
  %v3_8049443 = load i32, i32* %v2_8049443, align 4
  %v2_8049447 = sub i32 %v3_8049443, %v2_8049441
  store i32 %v2_8049447, i32* %eax.global-to-local, align 4
  %v0_8049449 = load i32, i32* %esi.global-to-local, align 4
  %v2_8049449 = add i32 %v0_8049449, %v2_8049441
  %v12_8049449 = icmp eq i32 %v2_8049449, 0
  store i1 %v12_8049449, i1* %zf.global-to-local, align 1
  store i32 %v2_8049449, i32* @esi, align 4
  %v2_804944b = add i32 %v0_804941e, 4
  %v3_804944b = inttoptr i32 %v2_804944b to i32*
  store i32 %v2_8049447, i32* %v3_804944b, align 4
  %v0_804944c = load i32, i32* @esi, align 4
  %v3_804944c = inttoptr i32 %v0_804941e to i32*
  store i32 %v0_804944c, i32* %v3_804944c, align 4
  %v0_804944d = call i32 @function_8051cf0()
  store i32 %v0_804944d, i32* %eax.global-to-local, align 4
  %v0_8049452 = load i32, i32* @esp, align 4
  store i32 %v0_804944d, i32* %edx.global-to-local, align 4
  %v10_8049457 = icmp eq i32 %v0_804944d, -1
  store i1 %v10_8049457, i1* %zf.global-to-local, align 1
  br i1 %v10_8049457, label %dec_label_pc_8049854, label %dec_label_pc_8049460

dec_label_pc_8049460:                             ; preds = %dec_label_pc_80493fd
  %v10_8049460 = icmp eq i32 %v0_804944d, 1
  store i1 %v10_8049460, i1* %zf.global-to-local, align 1
  %v7_8049463 = icmp sgt i32 %v0_804944d, 1
  br i1 %v7_8049463, label %dec_label_pc_8049465, label %dec_label_pc_8049468

dec_label_pc_8049465:                             ; preds = %dec_label_pc_8049460
  %v1_8049465 = add i32 %v0_804944d, -2
  %v9_8049465 = icmp eq i32 %v1_8049465, 0
  store i1 %v9_8049465, i1* %zf.global-to-local, align 1
  store i32 %v1_8049465, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049468

dec_label_pc_8049468:                             ; preds = %dec_label_pc_8049460, %dec_label_pc_8049465
  %v0_8049471 = phi i32 [ %v0_804944d, %dec_label_pc_8049460 ], [ %v1_8049465, %dec_label_pc_8049465 ]
  %v1_8049468 = add i32 %v0_8049452, 20920
  %v1_804946f = load i32, i32* @ebx, align 4
  %v2_804946f = add i32 %v1_8049468, %v1_804946f
  %v12_804946f = icmp eq i32 %v2_804946f, 0
  store i1 %v12_804946f, i1* %zf.global-to-local, align 1
  store i32 %v2_804946f, i32* %eax.global-to-local, align 4
  %v1_8049471 = add i32 %v0_8049471, 1
  store i32 %v1_8049471, i32* @ebx, align 4
  %v2_8049474 = add i32 %v0_8049471, -20773
  %v3_8049474 = add i32 %v2_8049474, %v2_804946f
  %v4_8049474 = inttoptr i32 %v3_8049474 to i8*
  store i8 0, i8* %v4_8049474, align 1
  %v0_804947c = load i32, i32* @esp, align 4
  %v1_804947c = add i32 %v0_804947c, -4
  %v2_804947c = inttoptr i32 %v1_804947c to i32*
  store i32 4, i32* %v2_804947c, align 4
  %v1_804947e = add i32 %v0_804947c, -8
  %v2_804947e = inttoptr i32 %v1_804947e to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_805498b.15 to i32), i32* %v2_804947e, align 4
  %v0_8049483 = load i32, i32* @ebx, align 4
  %v2_8049483 = add i32 %v0_804947c, -12
  %v3_8049483 = inttoptr i32 %v2_8049483 to i32*
  store i32 %v0_8049483, i32* %v3_8049483, align 4
  %v0_8049484 = load i32, i32* @esi, align 4
  %v2_8049484 = add i32 %v0_804947c, -16
  %v3_8049484 = inttoptr i32 %v2_8049484 to i32*
  store i32 %v0_8049484, i32* %v3_8049484, align 4
  %v0_8049485 = call i32 @function_8051cf0()
  store i32 %v0_8049485, i32* @eax, align 4
  %v0_804948a = load i32, i32* @esp, align 4
  %v9_804948d = icmp eq i32 %v0_8049485, 4
  store i1 %v9_804948d, i1* %zf.global-to-local, align 1
  br i1 %v9_804948d, label %dec_label_pc_8049b1d, label %dec_label_pc_8049496

dec_label_pc_8049496:                             ; preds = %dec_label_pc_8049468
  %v1_804948a = add i32 %v0_804948a, 16
  %v0_8049496 = load i32, i32* @esi, align 4
  %v1_8049496 = inttoptr i32 %v0_8049496 to i8*
  %v2_8049496 = load i8, i8* %v1_8049496, align 1
  %v11_8049496 = icmp eq i8 %v2_8049496, 47
  store i1 %v11_8049496, i1* %zf.global-to-local, align 1
  br i1 %v11_8049496, label %dec_label_pc_8049c88, label %dec_label_pc_804949f

dec_label_pc_804949f:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049c88, %dec_label_pc_8049bdf, %dec_label_pc_8049bbc, %dec_label_pc_8049496, %dec_label_pc_8049c14
  %v0_804949f = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049cb2, %dec_label_pc_8049c88 ], [ %v1_8049c09, %dec_label_pc_8049bdf ], [ %v1_8049bd1, %dec_label_pc_8049bbc ], [ %v1_804948a, %dec_label_pc_8049496 ], [ %v1_8049c29, %dec_label_pc_8049c14 ]
  %v1_804949f = add i32 %v0_804949f, 92
  %v2_804949f = inttoptr i32 %v1_804949f to i32*
  %v3_804949f = load i32, i32* %v2_804949f, align 4
  store i32 %v3_804949f, i32* %edx.global-to-local, align 4
  %v1_80494a3 = add i32 %v3_804949f, -1448
  %v2_80494a3 = inttoptr i32 %v1_80494a3 to i8*
  store i8 1, i8* %v2_80494a3, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80494af:                             ; preds = %dec_label_pc_8048d81
  %v1_80494af = call i32 @function_80526bd(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80494af, i32* %eax.global-to-local, align 4
  %v0_80494b4 = load i32, i32* @esp, align 4
  %v1_80494b4 = add i32 %v0_80494b4, 76
  %v2_80494b4 = inttoptr i32 %v1_80494b4 to i32*
  %v3_80494b4 = load i32, i32* %v2_80494b4, align 4
  store i32 %v3_80494b4, i32* %ecx.global-to-local, align 4
  %v1_80494b8 = add i32 %v0_80494b4, 92
  %v2_80494b8 = inttoptr i32 %v1_80494b8 to i32*
  %v3_80494b8 = load i32, i32* %v2_80494b8, align 4
  store i32 %v3_80494b8, i32* %edx.global-to-local, align 4
  %v1_80494be = add i32 %v3_80494b4, 1472
  store i32 %v1_80494be, i32* @ebp, align 4
  store i32 %v1_80494af, i32* @edi, align 4
  %v1_80494c6 = add i32 %v3_80494b4, 2116
  store i32 %v1_80494c6, i32* @esi, align 4
  %v1_80494cc = add i32 %v3_80494b8, 660
  %v2_80494cc = inttoptr i32 %v1_80494cc to i32*
  %v3_80494cc = load i32, i32* %v2_80494cc, align 4
  %v9_80494cc = icmp eq i32 %v3_80494cc, 1024
  store i1 %v9_80494cc, i1* %zf.global-to-local, align 1
  br i1 %v9_80494cc, label %dec_label_pc_8049605, label %dec_label_pc_80494dc

dec_label_pc_80494dc:                             ; preds = %dec_label_pc_80494af, %dec_label_pc_8049605, %dec_label_pc_80495f1
  %v0_80494dc = phi i32 [ %v0_80495e0, %dec_label_pc_80495f1 ], [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80494dc.pre.pre, %dec_label_pc_8049605 ]
  %v1_80494dc = add i32 %v0_80494dc, 92
  %v2_80494dc = inttoptr i32 %v1_80494dc to i32*
  %v3_80494dc = load i32, i32* %v2_80494dc, align 4
  store i32 %v3_80494dc, i32* %eax.global-to-local, align 4
  %v0_80494e0 = load i32, i32* @edi, align 4
  %v1_80494e0 = inttoptr i32 %v0_80494e0 to i32*
  store i32 0, i32* %v1_80494e0, align 4
  %v0_80494e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80494e6 = add i32 %v0_80494e6, 660
  %v2_80494e6 = inttoptr i32 %v1_80494e6 to i32*
  %v3_80494e6 = load i32, i32* %v2_80494e6, align 4
  store i32 %v3_80494e6, i32* %edx.global-to-local, align 4
  %v2_80494f1 = sub i32 1024, %v3_80494e6
  %v12_80494f1 = icmp eq i32 %v2_80494f1, 0
  store i1 %v12_80494f1, i1* %zf.global-to-local, align 1
  store i32 %v2_80494f1, i32* %eax.global-to-local, align 4
  %v0_80494f3 = load i32, i32* @esp, align 4
  %v1_80494f3 = add i32 %v0_80494f3, -4
  %v2_80494f3 = inttoptr i32 %v1_80494f3 to i32*
  store i32 16384, i32* %v2_80494f3, align 4
  %v0_80494f8 = load i32, i32* @esi, align 4
  %v1_80494f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80494f8 = add i32 %v1_80494f8, %v0_80494f8
  store i32 %v2_80494f8, i32* %edx.global-to-local, align 4
  %v0_80494fb = load i32, i32* %eax.global-to-local, align 4
  %v2_80494fb = add i32 %v0_80494f3, -8
  %v3_80494fb = inttoptr i32 %v2_80494fb to i32*
  store i32 %v0_80494fb, i32* %v3_80494fb, align 4
  %v0_80494fc = load i32, i32* %edx.global-to-local, align 4
  %v2_80494fc = add i32 %v0_80494f3, -12
  %v3_80494fc = inttoptr i32 %v2_80494fc to i32*
  store i32 %v0_80494fc, i32* %v3_80494fc, align 4
  %v1_80494fd = add i32 %v0_80494f3, 92
  %v2_80494fd = inttoptr i32 %v1_80494fd to i32*
  %v3_80494fd = load i32, i32* %v2_80494fd, align 4
  store i32 %v3_80494fd, i32* %edx.global-to-local, align 4
  %v1_8049501 = add i32 %v3_80494fd, -1452
  %v2_8049501 = inttoptr i32 %v1_8049501 to i32*
  %v3_8049501 = load i32, i32* %v2_8049501, align 4
  store i32 %v3_8049501, i32* %eax.global-to-local, align 4
  %v2_8049507 = add i32 %v0_80494f3, -16
  %v3_8049507 = inttoptr i32 %v2_8049507 to i32*
  store i32 %v3_8049501, i32* %v3_8049507, align 4
  %v0_8049508 = call i32 @function_805286d()
  store i32 %v0_8049508, i32* %eax.global-to-local, align 4
  %v0_804950d = load i32, i32* @esp, align 4
  %v1_804950d = add i32 %v0_804950d, 16
  %v1_8049510 = icmp eq i32 %v0_8049508, 0
  store i1 %v1_8049510, i1* %zf.global-to-local, align 1
  br i1 %v1_8049510, label %dec_label_pc_8048e44, label %dec_label_pc_8049518

dec_label_pc_8049518:                             ; preds = %dec_label_pc_80494dc
  %v10_8049518 = icmp eq i32 %v0_8049508, -1
  store i1 %v10_8049518, i1* %zf.global-to-local, align 1
  br i1 %v10_8049518, label %dec_label_pc_8049b0f, label %dec_label_pc_8049521

dec_label_pc_8049521:                             ; preds = %dec_label_pc_8049518
  %v1_8049521 = add i32 %v0_804950d, 108
  %v2_8049521 = inttoptr i32 %v1_8049521 to i32*
  %v3_8049521 = load i32, i32* %v2_8049521, align 4
  store i32 %v3_8049521, i32* %edx.global-to-local, align 4
  %v1_8049525 = add i32 %v3_8049521, 660
  %v2_8049525 = inttoptr i32 %v1_8049525 to i32*
  %v3_8049525 = load i32, i32* %v2_8049525, align 4
  %v2_804952b = add i32 %v3_8049525, %v0_8049508
  %v12_804952b = icmp eq i32 %v2_804952b, 0
  store i1 %v12_804952b, i1* %zf.global-to-local, align 1
  store i32 %v2_804952b, i32* %ecx.global-to-local, align 4
  store i32 %v2_804952b, i32* %v2_8049525, align 4
  %v0_8049533 = load i32, i32* @esp, align 4
  %v1_8049533 = add i32 %v0_8049533, 116
  %v2_8049533 = inttoptr i32 %v1_8049533 to i32*
  %v3_8049533 = load i32, i32* %v2_8049533, align 4
  store i32 %v3_8049533, i32* %ecx.global-to-local, align 4
  %v1_8049537 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049537 = add i32 %v1_8049537, -1444
  %v3_8049537 = inttoptr i32 %v2_8049537 to i32*
  store i32 %v3_8049533, i32* %v3_8049537, align 4
  %v0_80495d1.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_8049542:                             ; preds = %dec_label_pc_80495d1
  %v1_8049542 = add i32 %v0_8049542, 660
  %v2_8049542 = inttoptr i32 %v1_8049542 to i32*
  %v3_8049542 = load i32, i32* %v2_8049542, align 4
  store i32 %v3_8049542, i32* %edx.global-to-local, align 4
  store i32 %v3_80495d1, i32* @ebx, align 4
  %v2_804954a = sub i32 %v3_80495d1, %v3_8049542
  %v8_804954a = xor i32 %v3_8049542, %v3_80495d1
  %v9_804954a = xor i32 %v2_804954a, %v3_80495d1
  %v10_804954a = and i32 %v9_804954a, %v8_804954a
  %v11_804954a = icmp slt i32 %v10_804954a, 0
  %v12_804954a = icmp eq i32 %v2_804954a, 0
  store i1 %v12_804954a, i1* %zf.global-to-local, align 1
  %v13_804954a = icmp slt i32 %v2_804954a, 0
  %v3_804954c = icmp ne i1 %v13_804954a, %v11_804954a
  %v4_804954c = or i1 %v12_804954a, %v3_804954c
  br i1 %v4_804954c, label %dec_label_pc_8049550, label %dec_label_pc_804954e

dec_label_pc_804954e:                             ; preds = %dec_label_pc_8049542
  store i32 %v3_8049542, i32* @ebx, align 4
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %dec_label_pc_8049542, %dec_label_pc_804954e
  %v1_8049554 = phi i32 [ %v3_80495d1, %dec_label_pc_8049542 ], [ %v3_8049542, %dec_label_pc_804954e ]
  %v0_8049550 = load i32, i32* @esp, align 4
  %v1_8049550 = add i32 %v0_8049550, 92
  %v2_8049550 = inttoptr i32 %v1_8049550 to i32*
  %v3_8049550 = load i32, i32* %v2_8049550, align 4
  store i32 %v3_8049550, i32* %edx.global-to-local, align 4
  %v2_8049554 = sub i32 %v3_80495d1, %v1_8049554
  store i32 %v2_8049554, i32* %eax.global-to-local, align 4
  %v2_8049556 = add i32 %v3_8049550, 12
  %v3_8049556 = inttoptr i32 %v2_8049556 to i32*
  store i32 %v2_8049554, i32* %v3_8049556, align 4
  %v0_8049559 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049559 = inttoptr i32 %v0_8049559 to i32*
  %v2_8049559 = load i32, i32* %v1_8049559, align 4
  %v11_8049559 = icmp eq i32 %v2_8049559, 1
  store i1 %v11_8049559, i1* %zf.global-to-local, align 1
  br i1 %v11_8049559, label %dec_label_pc_8049636, label %dec_label_pc_8049562

dec_label_pc_8049562:                             ; preds = %dec_label_pc_8049550, %dec_label_pc_8049636, %dec_label_pc_80495dc
  %v0_8049562 = load i32, i32* @esp, align 4
  %v1_8049562 = add i32 %v0_8049562, 92
  %v2_8049562 = inttoptr i32 %v1_8049562 to i32*
  %v3_8049562 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049562, i32* %ecx.global-to-local, align 4
  %v1_8049566 = add i32 %v3_8049562, 12
  %v2_8049566 = inttoptr i32 %v1_8049566 to i32*
  %v3_8049566 = load i32, i32* %v2_8049566, align 4
  store i32 %v3_8049566, i32* %eax.global-to-local, align 4
  %v1_8049569 = icmp eq i32 %v3_8049566, 0
  store i1 %v1_8049569, i1* %zf.global-to-local, align 1
  %v1_804956b = icmp eq i1 %v1_8049569, false
  br i1 %v1_804956b, label %dec_label_pc_804958e, label %dec_label_pc_804956d

dec_label_pc_804956d:                             ; preds = %dec_label_pc_8049562
  %v1_804956d = add i32 %v3_8049562, 8
  %v2_804956d = inttoptr i32 %v1_804956d to i32*
  %v3_804956d = load i32, i32* %v2_804956d, align 4
  %v12_804956d = icmp eq i32 %v3_804956d, 1
  store i1 %v12_804956d, i1* %zf.global-to-local, align 1
  br i1 %v12_804956d, label %dec_label_pc_80496da, label %dec_label_pc_8049577

dec_label_pc_8049577:                             ; preds = %dec_label_pc_804956d
  %v3_8049577 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049577, i32* %ecx.global-to-local, align 4
  %v1_804957b = add i32 %v3_8049577, 660
  %v2_804957b = inttoptr i32 %v1_804957b to i32*
  %v3_804957b = load i32, i32* %v2_804957b, align 4
  %v1_8049581 = load i32, i32* @ebx, align 4
  %v2_8049581 = sub i32 %v3_804957b, %v1_8049581
  %v12_8049581 = icmp eq i32 %v2_8049581, 0
  store i32 %v2_8049581, i32* %eax.global-to-local, align 4
  %v2_8049583 = add i32 %v3_8049577, 12
  %v3_8049583 = inttoptr i32 %v2_8049583 to i32*
  store i32 %v2_8049581, i32* %v3_8049583, align 4
  store i1 %v12_8049581, i1* %zf.global-to-local, align 1
  br i1 %v12_8049581, label %dec_label_pc_8049af8, label %dec_label_pc_804958e

dec_label_pc_804958e:                             ; preds = %dec_label_pc_8049577, %dec_label_pc_8049562, %dec_label_pc_80496da, %dec_label_pc_8049764
  %v0_804958e = load i32, i32* @ebx, align 4
  %v1_804958e = icmp eq i32 %v0_804958e, 0
  store i1 %v1_804958e, i1* %zf.global-to-local, align 1
  br i1 %v1_804958e, label %dec_label_pc_80495e0, label %dec_label_pc_8049592

dec_label_pc_8049592:                             ; preds = %dec_label_pc_804958e
  %v0_8049592 = load i32, i32* @esp, align 4
  %v1_8049592 = add i32 %v0_8049592, 92
  %v2_8049592 = inttoptr i32 %v1_8049592 to i32*
  %v3_8049592 = load i32, i32* %v2_8049592, align 4
  store i32 %v3_8049592, i32* %edx.global-to-local, align 4
  %v1_8049596 = add i32 %v3_8049592, 660
  %v2_8049596 = inttoptr i32 %v1_8049596 to i32*
  %v3_8049596 = load i32, i32* %v2_8049596, align 4
  %v2_804959c = sub i32 %v3_8049596, %v0_804958e
  %v12_804959c = icmp eq i32 %v2_804959c, 0
  store i1 %v12_804959c, i1* %zf.global-to-local, align 1
  store i32 %v2_804959c, i32* %eax.global-to-local, align 4
  store i32 %v2_804959c, i32* %v2_8049596, align 4
  %v0_80495a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80495a4 = load i32, i32* @esp, align 4
  %v2_80495a4 = add i32 %v1_80495a4, -4
  %v3_80495a4 = inttoptr i32 %v2_80495a4 to i32*
  store i32 %v0_80495a4, i32* %v3_80495a4, align 4
  %v0_80495a5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80495a5 = add i32 %v1_80495a4, -8
  %v3_80495a5 = inttoptr i32 %v2_80495a5 to i32*
  store i32 %v0_80495a5, i32* %v3_80495a5, align 4
  %v0_80495a6 = load i32, i32* @esi, align 4
  %v1_80495a6 = load i32, i32* @ebx, align 4
  %v2_80495a6 = add i32 %v1_80495a6, %v0_80495a6
  store i32 %v2_80495a6, i32* %eax.global-to-local, align 4
  %v2_80495a9 = add i32 %v1_80495a4, -12
  %v3_80495a9 = inttoptr i32 %v2_80495a9 to i32*
  store i32 %v2_80495a6, i32* %v3_80495a9, align 4
  %v0_80495aa = load i32, i32* @esi, align 4
  %v2_80495aa = add i32 %v1_80495a4, -16
  %v3_80495aa = inttoptr i32 %v2_80495aa to i32*
  store i32 %v0_80495aa, i32* %v3_80495aa, align 4
  %v4_80495ab = call i32 @function_80526e7(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80495ab, i32* %eax.global-to-local, align 4
  %v0_80495b0 = load i32, i32* @esp, align 4
  %v1_80495b0 = add i32 %v0_80495b0, 108
  %v2_80495b0 = inttoptr i32 %v1_80495b0 to i32*
  %v3_80495b0 = load i32, i32* %v2_80495b0, align 4
  store i32 %v3_80495b0, i32* %ecx.global-to-local, align 4
  %v1_80495b4 = add i32 %v0_80495b0, 92
  %v2_80495b4 = inttoptr i32 %v1_80495b4 to i32*
  %v3_80495b4 = load i32, i32* %v2_80495b4, align 4
  store i32 %v3_80495b4, i32* %edx.global-to-local, align 4
  %v1_80495b8 = add i32 %v3_80495b0, 660
  %v2_80495b8 = inttoptr i32 %v1_80495b8 to i32*
  %v3_80495b8 = load i32, i32* %v2_80495b8, align 4
  store i32 %v3_80495b8, i32* %eax.global-to-local, align 4
  %v1_80495c1 = icmp eq i32 %v3_80495b8, 0
  store i1 %v1_80495c1, i1* %zf.global-to-local, align 1
  %v2_80495c3 = add i32 %v3_80495b4, 2116
  %v3_80495c3 = add i32 %v2_80495c3, %v3_80495b8
  %v4_80495c3 = inttoptr i32 %v3_80495c3 to i8*
  store i8 0, i8* %v4_80495c3, align 1
  %v0_80495cb = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80495cb, label %dec_label_pc_80495e0, label %dec_label_pc_80495cd

dec_label_pc_80495cd:                             ; preds = %dec_label_pc_8049592
  %v0_80495cd = load i32, i32* @esp, align 4
  %v1_80495cd = add i32 %v0_80495cd, 92
  %v2_80495cd = inttoptr i32 %v1_80495cd to i32*
  %v3_80495cd = load i32, i32* %v2_80495cd, align 4
  store i32 %v3_80495cd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_80495d1:                             ; preds = %dec_label_pc_8049521, %dec_label_pc_80495cd
  %v0_8049542 = phi i32 [ %v0_80495d1.pre, %dec_label_pc_8049521 ], [ %v3_80495cd, %dec_label_pc_80495cd ]
  %v1_80495d1 = add i32 %v0_8049542, 12
  %v2_80495d1 = inttoptr i32 %v1_80495d1 to i32*
  %v3_80495d1 = load i32, i32* %v2_80495d1, align 4
  store i32 %v3_80495d1, i32* %eax.global-to-local, align 4
  %v1_80495d4 = icmp eq i32 %v3_80495d1, 0
  store i1 %v1_80495d4, i1* %zf.global-to-local, align 1
  %tmp146 = icmp slt i32 %v3_80495d1, 1
  %tmp147 = icmp eq i1 %tmp146, false
  br i1 %tmp147, label %dec_label_pc_8049542, label %dec_label_pc_80495dc

dec_label_pc_80495dc:                             ; preds = %dec_label_pc_80495d1
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8049562

dec_label_pc_80495e0:                             ; preds = %dec_label_pc_8049592, %dec_label_pc_804958e
  %v0_80495e0 = load i32, i32* @esp, align 4
  %v1_80495e0 = add i32 %v0_80495e0, 92
  %v2_80495e0 = inttoptr i32 %v1_80495e0 to i32*
  %v3_80495e0 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495e0, i32* %eax.global-to-local, align 4
  %v1_80495e4 = add i32 %v3_80495e0, -1448
  %v2_80495e4 = inttoptr i32 %v1_80495e4 to i8*
  %v3_80495e4 = load i8, i8* %v2_80495e4, align 1
  %v12_80495e4 = icmp eq i8 %v3_80495e4, 7
  store i1 %v12_80495e4, i1* %zf.global-to-local, align 1
  %v1_80495eb = icmp eq i1 %v12_80495e4, false
  br i1 %v1_80495eb, label %dec_label_pc_8048d91, label %dec_label_pc_80495f1

dec_label_pc_80495f1:                             ; preds = %dec_label_pc_80495e0
  %v3_80495f1 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495f1, i32* %edx.global-to-local, align 4
  %v1_80495f5 = add i32 %v3_80495f1, 660
  %v2_80495f5 = inttoptr i32 %v1_80495f5 to i32*
  %v3_80495f5 = load i32, i32* %v2_80495f5, align 4
  %v9_80495f5 = icmp eq i32 %v3_80495f5, 1024
  store i1 %v9_80495f5, i1* %zf.global-to-local, align 1
  %v1_80495ff = icmp eq i1 %v9_80495f5, false
  br i1 %v1_80495ff, label %dec_label_pc_80494dc, label %dec_label_pc_8049605

dec_label_pc_8049605:                             ; preds = %dec_label_pc_80495f1, %dec_label_pc_80494af
  %v1_8049605 = phi i32 [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80495e0, %dec_label_pc_80495f1 ]
  %v0_8049605 = phi i32 [ %v1_80494af, %dec_label_pc_80494af ], [ %v3_80495e0, %dec_label_pc_80495f1 ]
  %v2_8049605 = add i32 %v1_8049605, -4
  %v3_8049605 = inttoptr i32 %v2_8049605 to i32*
  store i32 %v0_8049605, i32* %v3_8049605, align 4
  %v1_8049606 = add i32 %v1_8049605, -8
  %v2_8049606 = inttoptr i32 %v1_8049606 to i32*
  store i32 960, i32* %v2_8049606, align 4
  %v1_804960b = add i32 %v1_8049605, 76
  %v2_804960b = inttoptr i32 %v1_804960b to i32*
  %v3_804960b = load i32, i32* %v2_804960b, align 4
  %v1_804960f = add i32 %v3_804960b, 2180
  %v9_804960f = icmp eq i32 %v1_804960f, 0
  store i1 %v9_804960f, i1* %zf.global-to-local, align 1
  store i32 %v1_804960f, i32* %eax.global-to-local, align 4
  %v2_8049614 = add i32 %v1_8049605, -12
  %v3_8049614 = inttoptr i32 %v2_8049614 to i32*
  store i32 %v1_804960f, i32* %v3_8049614, align 4
  %v0_8049615 = load i32, i32* @esi, align 4
  %v2_8049615 = add i32 %v1_8049605, -16
  %v3_8049615 = inttoptr i32 %v2_8049615 to i32*
  store i32 %v0_8049615, i32* %v3_8049615, align 4
  %v4_8049616 = call i32 @function_80526e7(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049616, i32* %eax.global-to-local, align 4
  %v0_804961b = load i32, i32* @esp, align 4
  %v1_804961b = add i32 %v0_804961b, 108
  %v2_804961b = inttoptr i32 %v1_804961b to i32*
  %v3_804961b = load i32, i32* %v2_804961b, align 4
  store i32 %v3_804961b, i32* %ecx.global-to-local, align 4
  %v1_804961f = add i32 %v3_804961b, 660
  %v2_804961f = inttoptr i32 %v1_804961f to i32*
  %v3_804961f = load i32, i32* %v2_804961f, align 4
  %v1_8049628 = add i32 %v3_804961f, -64
  %v6_8049628 = icmp eq i32 %v1_8049628, 0
  store i1 %v6_8049628, i1* %zf.global-to-local, align 1
  store i32 %v1_8049628, i32* %eax.global-to-local, align 4
  store i32 %v1_8049628, i32* %v2_804961f, align 4
  %v0_80494dc.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80494dc

dec_label_pc_8049636:                             ; preds = %dec_label_pc_8049550
  %v0_8049636 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049636 = load i32, i32* @esp, align 4
  %v2_8049636 = add i32 %v1_8049636, -4
  %v3_8049636 = inttoptr i32 %v2_8049636 to i32*
  store i32 %v0_8049636, i32* %v3_8049636, align 4
  %v0_8049637 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049637 = add i32 %v1_8049636, -8
  %v3_8049637 = inttoptr i32 %v2_8049637 to i32*
  store i32 %v0_8049637, i32* %v3_8049637, align 4
  %v1_8049638 = add i32 %v1_8049636, -12
  %v2_8049638 = inttoptr i32 %v1_8049638 to i32*
  store i32 0, i32* %v2_8049638, align 4
  %v1_804963a = add i32 %v1_8049636, -16
  %v2_804963a = inttoptr i32 %v1_804963a to i32*
  store i32 39, i32* %v2_804963a, align 4
  %v3_804963c = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804963c, i32* %eax.global-to-local, align 4
  %v0_8049641 = load i32, i32* @esp, align 4
  %v1_8049641 = add i32 %v0_8049641, -4
  %v2_8049641 = inttoptr i32 %v1_8049641 to i32*
  store i32 11, i32* %v2_8049641, align 4
  %v2_8049643 = add i32 %v0_8049641, -8
  %v3_8049643 = inttoptr i32 %v2_8049643 to i32*
  store i32 %v3_804963c, i32* %v3_8049643, align 4
  %v1_8049644 = add i32 %v0_8049641, 108
  %v2_8049644 = inttoptr i32 %v1_8049644 to i32*
  %v3_8049644 = load i32, i32* %v2_8049644, align 4
  store i32 %v3_8049644, i32* %ecx.global-to-local, align 4
  %v1_8049648 = add i32 %v3_8049644, 660
  %v2_8049648 = inttoptr i32 %v1_8049648 to i32*
  %v3_8049648 = load i32, i32* %v2_8049648, align 4
  store i32 %v3_8049648, i32* %eax.global-to-local, align 4
  %v2_804964e = add i32 %v0_8049641, -12
  %v3_804964e = inttoptr i32 %v2_804964e to i32*
  store i32 %v3_8049648, i32* %v3_804964e, align 4
  %v0_804964f = load i32, i32* @esi, align 4
  %v2_804964f = add i32 %v0_8049641, -16
  %v3_804964f = inttoptr i32 %v2_804964f to i32*
  store i32 %v0_804964f, i32* %v3_804964f, align 4
  %v0_8049650 = call i32 @function_8051cf0()
  %v0_8049655 = load i32, i32* @esp, align 4
  %v1_8049658 = add i32 %v0_8049650, 1
  %v8_8049658 = icmp eq i32 %v1_8049658, 0
  store i1 %v8_8049658, i1* %zf.global-to-local, align 1
  store i32 %v1_8049658, i32* %eax.global-to-local, align 4
  br i1 %v8_8049658, label %dec_label_pc_8049562, label %dec_label_pc_804965f

dec_label_pc_804965f:                             ; preds = %dec_label_pc_8049636
  %v2_804965f = add i32 %v0_8049655, 28
  %v3_804965f = inttoptr i32 %v2_804965f to i32*
  store i32 %v1_8049658, i32* %v3_804965f, align 4
  %v0_8049660 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049660 = add i32 %v0_8049655, 24
  %v3_8049660 = inttoptr i32 %v2_8049660 to i32*
  store i32 %v0_8049660, i32* %v3_8049660, align 4
  %v1_8049661 = add i32 %v0_8049655, 20
  %v2_8049661 = inttoptr i32 %v1_8049661 to i32*
  store i32 0, i32* %v2_8049661, align 4
  %v1_8049663 = add i32 %v0_8049655, 16
  %v2_8049663 = inttoptr i32 %v1_8049663 to i32*
  store i32 39, i32* %v2_8049663, align 4
  %v3_8049665 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049665, i32* %eax.global-to-local, align 4
  %v0_804966a = load i32, i32* @esp, align 4
  %v1_804966a = add i32 %v0_804966a, -4
  %v2_804966a = inttoptr i32 %v1_804966a to i32*
  store i32 11, i32* %v2_804966a, align 4
  %v2_804966c = add i32 %v0_804966a, -8
  %v3_804966c = inttoptr i32 %v2_804966c to i32*
  store i32 %v3_8049665, i32* %v3_804966c, align 4
  %v1_804966d = add i32 %v0_804966a, 108
  %v2_804966d = inttoptr i32 %v1_804966d to i32*
  %v3_804966d = load i32, i32* %v2_804966d, align 4
  store i32 %v3_804966d, i32* %eax.global-to-local, align 4
  %v1_8049671 = add i32 %v3_804966d, 660
  %v2_8049671 = inttoptr i32 %v1_8049671 to i32*
  %v3_8049671 = load i32, i32* %v2_8049671, align 4
  store i32 %v3_8049671, i32* %eax.global-to-local, align 4
  %v2_8049677 = add i32 %v0_804966a, -12
  %v3_8049677 = inttoptr i32 %v2_8049677 to i32*
  store i32 %v3_8049671, i32* %v3_8049677, align 4
  %v0_8049678 = load i32, i32* @esi, align 4
  %v2_8049678 = add i32 %v0_804966a, -16
  %v3_8049678 = inttoptr i32 %v2_8049678 to i32*
  store i32 %v0_8049678, i32* %v3_8049678, align 4
  %v0_8049679 = call i32 @function_8051cf0()
  store i32 %v0_8049679, i32* %eax.global-to-local, align 4
  %v0_804967e = load i32, i32* @esp, align 4
  %v1_8049681 = add i32 %v0_804967e, 28
  %v2_8049681 = inttoptr i32 %v1_8049681 to i32*
  store i32 1, i32* %v2_8049681, align 4
  %v1_8049683 = add i32 %v0_804967e, 24
  %v2_8049683 = inttoptr i32 %v1_8049683 to i32*
  store i32 ptrtoint (i32* @global_var_805499a.16 to i32), i32* %v2_8049683, align 4
  %v1_8049688 = add i32 %v0_804967e, 124
  %v2_8049688 = inttoptr i32 %v1_8049688 to i32*
  %v3_8049688 = load i32, i32* %v2_8049688, align 4
  store i32 %v3_8049688, i32* %edx.global-to-local, align 4
  store i32 %v0_8049679, i32* @ebx, align 4
  %v0_804968e = load i32, i32* @esi, align 4
  %v2_804968e = add i32 %v0_804968e, %v0_8049679
  store i32 %v2_804968e, i32* @edi, align 4
  %v1_8049691 = add i32 %v3_8049688, 660
  %v2_8049691 = inttoptr i32 %v1_8049691 to i32*
  %v3_8049691 = load i32, i32* %v2_8049691, align 4
  %v2_8049697 = sub i32 %v3_8049691, %v0_8049679
  %v12_8049697 = icmp eq i32 %v2_8049697, 0
  store i1 %v12_8049697, i1* %zf.global-to-local, align 1
  store i32 %v2_8049697, i32* %eax.global-to-local, align 4
  %v2_8049699 = add i32 %v0_804967e, 20
  %v3_8049699 = inttoptr i32 %v2_8049699 to i32*
  store i32 %v2_8049697, i32* %v3_8049699, align 4
  %v0_804969a = load i32, i32* @edi, align 4
  %v2_804969a = add i32 %v0_804967e, 16
  %v3_804969a = inttoptr i32 %v2_804969a to i32*
  store i32 %v0_804969a, i32* %v3_804969a, align 4
  %v0_804969b = call i32 @function_8051cf0()
  store i32 %v0_804969b, i32* %eax.global-to-local, align 4
  %v0_80496a0 = load i32, i32* @esp, align 4
  %v1_80496a0 = add i32 %v0_80496a0, 92
  %v2_80496a0 = inttoptr i32 %v1_80496a0 to i32*
  %v3_80496a0 = load i32, i32* %v2_80496a0, align 4
  store i32 %v3_80496a0, i32* %ecx.global-to-local, align 4
  %v0_80496a4 = load i32, i32* @ebx, align 4
  %v2_80496a4 = add i32 %v0_80496a4, %v0_804969b
  store i32 %v2_80496a4, i32* @ebx, align 4
  %v2_80496a6 = add i32 %v0_80496a0, 56
  %v3_80496a6 = inttoptr i32 %v2_80496a6 to i32*
  store i32 %v2_80496a4, i32* %v3_80496a6, align 4
  %v0_80496ad = load i32, i32* @ebx, align 4
  %v1_80496ad = load i32, i32* %ecx.global-to-local, align 4
  %v2_80496ad = add i32 %v0_80496ad, 2115
  %v3_80496ad = add i32 %v2_80496ad, %v1_80496ad
  %v4_80496ad = inttoptr i32 %v3_80496ad to i8*
  store i8 0, i8* %v4_80496ad, align 1
  %v0_80496b5 = load i32, i32* @esp, align 4
  %v1_80496b5 = add i32 %v0_80496b5, 92
  %v2_80496b5 = inttoptr i32 %v1_80496b5 to i32*
  %v3_80496b5 = load i32, i32* %v2_80496b5, align 4
  store i32 %v3_80496b5, i32* %eax.global-to-local, align 4
  %v1_80496b9 = add i32 %v3_80496b5, 16
  %v2_80496b9 = inttoptr i32 %v1_80496b9 to i32*
  %v3_80496b9 = load i32, i32* %v2_80496b9, align 4
  %v4_80496b9 = add i32 %v3_80496b9, -4
  %v9_80496b9 = sub i32 3, %v3_80496b9
  %v10_80496b9 = and i32 %v9_80496b9, %v3_80496b9
  %v11_80496b9 = icmp slt i32 %v10_80496b9, 0
  %v12_80496b9 = icmp eq i32 %v4_80496b9, 0
  store i1 %v12_80496b9, i1* %zf.global-to-local, align 1
  %v13_80496b9 = icmp slt i32 %v4_80496b9, 0
  %v3_80496bd = icmp ne i1 %v13_80496b9, %v11_80496b9
  %v4_80496bd = or i1 %v12_80496b9, %v3_80496bd
  br i1 %v4_80496bd, label %dec_label_pc_8049da3, label %dec_label_pc_80496c3

dec_label_pc_80496c3:                             ; preds = %dec_label_pc_8049da3, %dec_label_pc_804965f, %dec_label_pc_8049db8
  %v0_80496c3 = phi i32 [ %v1_8049dac, %dec_label_pc_8049da3 ], [ %v0_80496b5, %dec_label_pc_804965f ], [ %v0_80496c3.pre, %dec_label_pc_8049db8 ]
  %v1_80496c3 = add i32 %v0_80496c3, 92
  %v2_80496c3 = inttoptr i32 %v1_80496c3 to i32*
  %v3_80496c3 = load i32, i32* %v2_80496c3, align 4
  store i32 %v3_80496c3, i32* %edx.global-to-local, align 4
  %v1_80496c7 = add i32 %v3_80496c3, 12
  %v2_80496c7 = inttoptr i32 %v1_80496c7 to i32*
  store i32 -1, i32* %v2_80496c7, align 4
  %v0_80496ce = load i32, i32* %edx.global-to-local, align 4
  %v1_80496ce = add i32 %v0_80496ce, -1448
  %v2_80496ce = inttoptr i32 %v1_80496ce to i8*
  store i8 10, i8* %v2_80496ce, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80496da:                             ; preds = %dec_label_pc_804956d
  %v1_80496da = add i32 %v0_8049562, -4
  %v2_80496da = inttoptr i32 %v1_80496da to i32*
  store i32 2, i32* %v2_80496da, align 4
  %v1_80496dc = add i32 %v0_8049562, -8
  %v2_80496dc = inttoptr i32 %v1_80496dc to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_80496dc, align 4
  %v0_80496e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80496e1 = add i32 %v0_80496e1, 660
  %v2_80496e1 = inttoptr i32 %v1_80496e1 to i32*
  %v3_80496e1 = load i32, i32* %v2_80496e1, align 4
  store i32 %v3_80496e1, i32* %eax.global-to-local, align 4
  %v2_80496e7 = add i32 %v0_8049562, -12
  %v3_80496e7 = inttoptr i32 %v2_80496e7 to i32*
  store i32 %v3_80496e1, i32* %v3_80496e7, align 4
  %v0_80496e8 = load i32, i32* @esi, align 4
  %v2_80496e8 = add i32 %v0_8049562, -16
  %v3_80496e8 = inttoptr i32 %v2_80496e8 to i32*
  store i32 %v0_80496e8, i32* %v3_80496e8, align 4
  %v0_80496e9 = call i32 @function_8051cf0()
  %v0_80496ee = load i32, i32* @esp, align 4
  %v1_80496f1 = add i32 %v0_80496e9, 1
  %v8_80496f1 = icmp eq i32 %v1_80496f1, 0
  store i1 %v8_80496f1, i1* %zf.global-to-local, align 1
  store i32 %v1_80496f1, i32* %eax.global-to-local, align 4
  br i1 %v8_80496f1, label %dec_label_pc_804958e, label %dec_label_pc_80496f8

dec_label_pc_80496f8:                             ; preds = %dec_label_pc_80496da
  %v1_80496f8 = add i32 %v0_80496ee, 12
  %v2_80496f8 = inttoptr i32 %v1_80496f8 to i32*
  store i32 2, i32* %v2_80496f8, align 4
  %v1_80496fa = add i32 %v0_80496ee, 8
  %v2_80496fa = inttoptr i32 %v1_80496fa to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_80496fa, align 4
  %v1_80496ff = add i32 %v0_80496ee, 108
  %v2_80496ff = inttoptr i32 %v1_80496ff to i32*
  %v3_80496ff = load i32, i32* %v2_80496ff, align 4
  store i32 %v3_80496ff, i32* %eax.global-to-local, align 4
  %v1_8049703 = add i32 %v3_80496ff, 660
  %v2_8049703 = inttoptr i32 %v1_8049703 to i32*
  %v3_8049703 = load i32, i32* %v2_8049703, align 4
  %v2_8049709 = add i32 %v0_80496ee, 4
  %v3_8049709 = inttoptr i32 %v2_8049709 to i32*
  store i32 %v3_8049703, i32* %v3_8049709, align 4
  %v0_804970a = load i32, i32* @esi, align 4
  %v3_804970a = inttoptr i32 %v0_80496ee to i32*
  store i32 %v0_804970a, i32* %v3_804970a, align 4
  %v0_804970b = call i32 @function_8051cf0()
  store i32 %v0_804970b, i32* %eax.global-to-local, align 4
  %v0_8049710 = load i32, i32* @esp, align 4
  %v1_8049710 = add i32 %v0_8049710, 92
  %v2_8049710 = inttoptr i32 %v1_8049710 to i32*
  %v3_8049710 = load i32, i32* %v2_8049710, align 4
  store i32 %v3_8049710, i32* %edx.global-to-local, align 4
  store i32 %v0_804970b, i32* @ebx, align 4
  %v2_8049716 = add i32 %v0_804970b, 2114
  %v3_8049716 = add i32 %v2_8049716, %v3_8049710
  %v4_8049716 = inttoptr i32 %v3_8049716 to i8*
  store i8 0, i8* %v4_8049716, align 1
  %v0_804971e = load i32, i32* @esp, align 4
  %v1_804971e = add i32 %v0_804971e, -4
  %v2_804971e = inttoptr i32 %v1_804971e to i32*
  store i32 1, i32* %v2_804971e, align 4
  %v1_8049720 = add i32 %v0_804971e, -8
  %v2_8049720 = inttoptr i32 %v1_8049720 to i32*
  store i32 ptrtoint (i32* @global_var_8054989.14 to i32), i32* %v2_8049720, align 4
  %v2_8049725 = add i32 %v0_804971e, -12
  %v3_8049725 = inttoptr i32 %v2_8049725 to i32*
  store i32 %v0_804970b, i32* %v3_8049725, align 4
  %v0_8049726 = load i32, i32* @esi, align 4
  %v2_8049726 = add i32 %v0_804971e, -16
  %v3_8049726 = inttoptr i32 %v2_8049726 to i32*
  store i32 %v0_8049726, i32* %v3_8049726, align 4
  %v0_8049727 = call i32 @function_8051cf0()
  %v0_804972c = load i32, i32* @esp, align 4
  %v1_804972c = add i32 %v0_804972c, 32
  %v1_804972f = add i32 %v0_8049727, 1
  %v8_804972f = icmp eq i32 %v1_804972f, 0
  store i1 %v8_804972f, i1* %zf.global-to-local, align 1
  store i32 %v1_804972f, i32* %eax.global-to-local, align 4
  br i1 %v8_804972f, label %dec_label_pc_804974f, label %dec_label_pc_8049732

dec_label_pc_8049732:                             ; preds = %dec_label_pc_80496f8
  %v1_8049732 = add i32 %v0_804972c, 28
  %v2_8049732 = inttoptr i32 %v1_8049732 to i32*
  store i32 1, i32* %v2_8049732, align 4
  %v1_8049734 = add i32 %v0_804972c, 24
  %v2_8049734 = inttoptr i32 %v1_8049734 to i32*
  store i32 ptrtoint (i32* @global_var_8054989.14 to i32), i32* %v2_8049734, align 4
  %v0_8049739 = load i32, i32* @ebx, align 4
  %v2_8049739 = add i32 %v0_804972c, 20
  %v3_8049739 = inttoptr i32 %v2_8049739 to i32*
  store i32 %v0_8049739, i32* %v3_8049739, align 4
  %v0_804973a = load i32, i32* @esi, align 4
  %v2_804973a = add i32 %v0_804972c, 16
  %v3_804973a = inttoptr i32 %v2_804973a to i32*
  store i32 %v0_804973a, i32* %v3_804973a, align 4
  %v0_804973b = call i32 @function_8051cf0()
  store i32 %v0_804973b, i32* %eax.global-to-local, align 4
  %v0_8049740 = load i32, i32* @esp, align 4
  %v1_8049740 = add i32 %v0_8049740, 92
  %v2_8049740 = inttoptr i32 %v1_8049740 to i32*
  %v3_8049740 = load i32, i32* %v2_8049740, align 4
  store i32 %v3_8049740, i32* @ecx, align 4
  %v6_8049744 = icmp eq i32 %v0_8049740, -16
  store i1 %v6_8049744, i1* %zf.global-to-local, align 1
  %v2_8049747 = add i32 %v0_804973b, 2116
  %v3_8049747 = add i32 %v2_8049747, %v3_8049740
  %v4_8049747 = inttoptr i32 %v3_8049747 to i8*
  store i8 0, i8* %v4_8049747, align 1
  %v1_804974f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804974f

dec_label_pc_804974f:                             ; preds = %dec_label_pc_80496f8, %dec_label_pc_8049732
  %v1_804974f = phi i32 [ %v1_804972c, %dec_label_pc_80496f8 ], [ %v1_804974f.pre, %dec_label_pc_8049732 ]
  %v0_804974f = load i32, i32* @ecx, align 4
  %v2_804974f = add i32 %v1_804974f, -4
  %v3_804974f = inttoptr i32 %v2_804974f to i32*
  store i32 %v0_804974f, i32* %v3_804974f, align 4
  %v0_8049750 = load i32, i32* @ecx, align 4
  %v2_8049750 = add i32 %v1_804974f, -8
  %v3_8049750 = inttoptr i32 %v2_8049750 to i32*
  store i32 %v0_8049750, i32* %v3_8049750, align 4
  %v1_8049751 = add i32 %v1_804974f, -12
  %v2_8049751 = inttoptr i32 %v1_8049751 to i32*
  store i32 16, i32* %v2_8049751, align 4
  %v0_8049753 = load i32, i32* @esi, align 4
  %v2_8049753 = add i32 %v1_804974f, -16
  %v3_8049753 = inttoptr i32 %v2_8049753 to i32*
  store i32 %v0_8049753, i32* %v3_8049753, align 4
  %v3_8049754 = call i32 @function_8051d40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049754, i32* %eax.global-to-local, align 4
  %v0_8049759 = load i32, i32* @esp, align 4
  %v1_804975c = icmp eq i32 %v3_8049754, 0
  store i1 %v1_804975c, i1* %zf.global-to-local, align 1
  %v1_8049e5a = add i32 %v0_8049759, 108
  %v2_8049e5a = inttoptr i32 %v1_8049e5a to i32*
  %v3_8049e5a = load i32, i32* %v2_8049e5a, align 4
  br i1 %v1_804975c, label %dec_label_pc_8049e5a, label %dec_label_pc_8049764

dec_label_pc_8049764:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %edx.global-to-local, align 4
  %v1_8049768 = add i32 %v3_8049754, 2
  %v9_8049768 = icmp eq i32 %v1_8049768, 0
  store i1 %v9_8049768, i1* %zf.global-to-local, align 1
  store i32 %v1_8049768, i32* %eax.global-to-local, align 4
  %v2_804976b = add i32 %v3_8049e5a, 12
  %v3_804976b = inttoptr i32 %v2_804976b to i32*
  store i32 %v1_8049768, i32* %v3_804976b, align 4
  br label %dec_label_pc_804958e

dec_label_pc_8049773:                             ; preds = %dec_label_pc_804854f
  %v1_8049773 = add i32 %v0_80485a5, -1440
  %v2_8049773 = inttoptr i32 %v1_8049773 to i32*
  %v3_8049773 = load i32, i32* %v2_8049773, align 4
  %v1_804977b = urem i32 %v3_8049773, 32
  store i32 %v1_804977b, i32* %eax.global-to-local, align 4
  %v2_804977e = udiv i32 %v3_8049773, 32
  store i32 %v2_804977e, i32* %edx.global-to-local, align 4
  %v0_8049781 = load i32, i32* @esp, align 4
  %v2_8049781 = mul nuw nsw i32 %v2_804977e, 4
  %v3_8049781 = add nuw nsw i32 %v2_8049781, 20740
  %v4_8049781 = add i32 %v3_8049781, %v0_8049781
  %v5_8049781 = inttoptr i32 %v4_8049781 to i32*
  %v6_8049781 = load i32, i32* %v5_8049781, align 4
  %v9_8049781 = shl i32 1, %v1_804977b
  %v12_8049781 = or i32 %v6_8049781, %v9_8049781
  store i32 %v12_8049781, i32* %v5_8049781, align 4
  %v0_8049789 = load i32, i32* @esi, align 4
  %v1_8049789 = add i32 %v0_8049789, -1440
  %v2_8049789 = inttoptr i32 %v1_8049789 to i32*
  %v3_8049789 = load i32, i32* %v2_8049789, align 4
  store i32 %v3_8049789, i32* %eax.global-to-local, align 4
  %v1_804978f = load i32, i32* @esp, align 4
  %v2_804978f = add i32 %v1_804978f, 72
  %v3_804978f = inttoptr i32 %v2_804978f to i32*
  %v4_804978f = load i32, i32* %v3_804978f, align 4
  %v5_804978f = sub i32 %v3_8049789, %v4_804978f
  %v11_804978f = xor i32 %v4_804978f, %v3_8049789
  %v12_804978f = xor i32 %v5_804978f, %v3_8049789
  %v13_804978f = and i32 %v12_804978f, %v11_804978f
  %v14_804978f = icmp slt i32 %v13_804978f, 0
  %v15_804978f = icmp eq i32 %v5_804978f, 0
  store i1 %v15_804978f, i1* %zf.global-to-local, align 1
  %v16_804978f = icmp slt i32 %v5_804978f, 0
  %v3_8049793 = icmp ne i1 %v16_804978f, %v14_804978f
  %v4_8049793 = or i1 %v15_804978f, %v3_8049793
  br i1 %v4_8049793, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_804979e:                             ; preds = %dec_label_pc_8048c10
  %v2_804979e = add i32 %v0_8048c1d, 12
  %v3_804979e = inttoptr i32 %v2_804979e to i32*
  store i32 %v3_8048bde, i32* %v3_804979e, align 4
  %v2_804979f = add i32 %v0_8048c1d, 8
  %v3_804979f = inttoptr i32 %v2_804979f to i32*
  store i32 %v3_8048bde, i32* %v3_804979f, align 4
  %v0_80497a0 = load i32, i32* @esi, align 4
  %v2_80497a0 = add i32 %v0_8048c1d, 4
  %v3_80497a0 = inttoptr i32 %v2_80497a0 to i32*
  store i32 %v0_80497a0, i32* %v3_80497a0, align 4
  %v1_80497a1 = add i32 %v0_8048c1d, 112
  %v2_80497a1 = inttoptr i32 %v1_80497a1 to i32*
  %v3_80497a1 = load i32, i32* %v2_80497a1, align 4
  store i32 %v3_80497a1, i32* @ebx, align 4
  %v3_80497a5 = inttoptr i32 %v0_8048c1d to i32*
  store i32 %v3_80497a1, i32* %v3_80497a5, align 4
  %v3_80497a6 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80497a6, i32* %eax.global-to-local, align 4
  %v0_80497ab = load i32, i32* @esp, align 4
  %v1_80497ab = add i32 %v0_80497ab, 16
  %v6_80497ab = icmp eq i32 %v1_80497ab, 0
  store i1 %v6_80497ab, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c28

dec_label_pc_80497b3:                             ; preds = %dec_label_pc_8048d89
  %v1_80497b3 = call i32 @function_80526bd(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80497b3, i32* %eax.global-to-local, align 4
  store i32 %v1_80497b3, i32* @ebx, align 4
  br label %dec_label_pc_80497ba

dec_label_pc_80497ba:                             ; preds = %dec_label_pc_80497ed, %dec_label_pc_80497b3
  %v0_80497ba = phi i32 [ %v1_80497b3, %dec_label_pc_80497b3 ], [ %v0_80497ba.pre, %dec_label_pc_80497ed ]
  %v1_80497ba = inttoptr i32 %v0_80497ba to i32*
  store i32 0, i32* %v1_80497ba, align 4
  %v0_80497c0 = load i32, i32* @esp, align 4
  %v1_80497c0 = add i32 %v0_80497c0, -4
  %v2_80497c0 = inttoptr i32 %v1_80497c0 to i32*
  store i32 16384, i32* %v2_80497c0, align 4
  %v1_80497c5 = add i32 %v0_80497c0, -8
  %v2_80497c5 = inttoptr i32 %v1_80497c5 to i32*
  store i32 10240, i32* %v2_80497c5, align 4
  %v1_80497ca = add i32 %v0_80497c0, 131
  store i32 %v1_80497ca, i32* %ecx.global-to-local, align 4
  %v2_80497d1 = add i32 %v0_80497c0, -12
  %v3_80497d1 = inttoptr i32 %v2_80497d1 to i32*
  store i32 %v1_80497ca, i32* %v3_80497d1, align 4
  %v1_80497d2 = add i32 %v0_80497c0, 92
  %v2_80497d2 = inttoptr i32 %v1_80497d2 to i32*
  %v3_80497d2 = load i32, i32* %v2_80497d2, align 4
  store i32 %v3_80497d2, i32* %eax.global-to-local, align 4
  %v1_80497d6 = add i32 %v3_80497d2, -1452
  %v2_80497d6 = inttoptr i32 %v1_80497d6 to i32*
  %v3_80497d6 = load i32, i32* %v2_80497d6, align 4
  %v2_80497dc = add i32 %v0_80497c0, -16
  %v3_80497dc = inttoptr i32 %v2_80497dc to i32*
  store i32 %v3_80497d6, i32* %v3_80497dc, align 4
  %v0_80497dd = call i32 @function_805286d()
  store i32 %v0_80497dd, i32* %eax.global-to-local, align 4
  %v0_80497e2 = load i32, i32* @esp, align 4
  %v1_80497e2 = add i32 %v0_80497e2, 16
  %v1_80497e5 = icmp eq i32 %v0_80497dd, 0
  store i1 %v1_80497e5, i1* %zf.global-to-local, align 1
  br i1 %v1_80497e5, label %dec_label_pc_8049b04, label %dec_label_pc_80497ed

dec_label_pc_80497ed:                             ; preds = %dec_label_pc_80497ba
  %v1_80497ed = add i32 %v0_80497dd, 1
  %v8_80497ed = icmp eq i32 %v1_80497ed, 0
  store i1 %v8_80497ed, i1* %zf.global-to-local, align 1
  store i32 %v1_80497ed, i32* %eax.global-to-local, align 4
  %v1_80497ee = icmp eq i1 %v8_80497ed, false
  %v0_80497ba.pre = load i32, i32* @ebx, align 4
  br i1 %v1_80497ee, label %dec_label_pc_80497ba, label %dec_label_pc_80497f0

dec_label_pc_80497f0:                             ; preds = %dec_label_pc_80497ed
  %v1_80497f0 = inttoptr i32 %v0_80497ba.pre to i32*
  %v2_80497f0 = load i32, i32* %v1_80497f0, align 4
  %v11_80497f0 = icmp eq i32 %v2_80497f0, 11
  store i1 %v11_80497f0, i1* %zf.global-to-local, align 1
  br i1 %v11_80497f0, label %dec_label_pc_8049c31, label %dec_label_pc_80497f9

dec_label_pc_80497f9:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_8049b04
  %v0_80497f9 = phi i32 [ %v1_80497e2, %dec_label_pc_80497f0 ], [ %v0_80497f9.pre, %dec_label_pc_8049b04 ]
  %v9_80497f9 = icmp eq i32 %v0_80497f9, 12
  store i1 %v9_80497f9, i1* %zf.global-to-local, align 1
  %v1_80497fc = add i32 %v0_80497f9, 92
  %v2_80497fc = inttoptr i32 %v1_80497fc to i32*
  %v3_80497fc = load i32, i32* %v2_80497fc, align 4
  store i32 %v3_80497fc, i32* %edx.global-to-local, align 4
  %v1_8049800 = add i32 %v3_80497fc, -1452
  %v2_8049800 = inttoptr i32 %v1_8049800 to i32*
  %v3_8049800 = load i32, i32* %v2_8049800, align 4
  store i32 %v3_8049800, i32* %ecx.global-to-local, align 4
  %v2_8049806 = add i32 %v0_80497f9, -16
  %v3_8049806 = inttoptr i32 %v2_8049806 to i32*
  store i32 %v3_8049800, i32* %v3_8049806, align 4
  %v1_8049807 = call i32 @function_80521b3(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8049807, i32* %eax.global-to-local, align 4
  %v0_804980c = load i32, i32* @esp, align 4
  %v1_804980c = add i32 %v0_804980c, 108
  %v2_804980c = inttoptr i32 %v1_804980c to i32*
  %v3_804980c = load i32, i32* %v2_804980c, align 4
  store i32 %v3_804980c, i32* %ecx.global-to-local, align 4
  %v6_8049810 = icmp eq i32 %v0_804980c, -16
  store i1 %v6_8049810, i1* %zf.global-to-local, align 1
  %v1_8049813 = add i32 %v3_804980c, -1452
  %v2_8049813 = inttoptr i32 %v1_8049813 to i32*
  store i32 -1, i32* %v2_8049813, align 4
  %v0_804981d = load i32, i32* %ecx.global-to-local, align 4
  %v1_804981d = add i32 %v0_804981d, -1448
  %v2_804981d = inttoptr i32 %v1_804981d to i8*
  store i8 0, i8* %v2_804981d, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049829:                             ; preds = %dec_label_pc_8048557
  %v1_8049829 = add i32 %v0_80485a5, -1440
  %v2_8049829 = inttoptr i32 %v1_8049829 to i32*
  %v3_8049829 = load i32, i32* %v2_8049829, align 4
  %v1_8049831 = urem i32 %v3_8049829, 32
  store i32 %v1_8049831, i32* %eax.global-to-local, align 4
  %v2_8049834 = udiv i32 %v3_8049829, 32
  store i32 %v2_8049834, i32* %edx.global-to-local, align 4
  %v0_8049837 = load i32, i32* @esp, align 4
  %v2_8049837 = mul nuw nsw i32 %v2_8049834, 4
  %v3_8049837 = add nuw nsw i32 %v2_8049837, 20740
  %v4_8049837 = add i32 %v3_8049837, %v0_8049837
  %v5_8049837 = inttoptr i32 %v4_8049837 to i32*
  %v6_8049837 = load i32, i32* %v5_8049837, align 4
  %v9_8049837 = shl i32 1, %v1_8049831
  %v12_8049837 = or i32 %v6_8049837, %v9_8049837
  store i32 %v12_8049837, i32* %v5_8049837, align 4
  %v0_804983f = load i32, i32* @esi, align 4
  %v1_804983f = add i32 %v0_804983f, -1440
  %v2_804983f = inttoptr i32 %v1_804983f to i32*
  %v3_804983f = load i32, i32* %v2_804983f, align 4
  store i32 %v3_804983f, i32* %eax.global-to-local, align 4
  %v1_8049845 = load i32, i32* @esp, align 4
  %v2_8049845 = add i32 %v1_8049845, 72
  %v3_8049845 = inttoptr i32 %v2_8049845 to i32*
  %v4_8049845 = load i32, i32* %v3_8049845, align 4
  %v5_8049845 = sub i32 %v3_804983f, %v4_8049845
  %v11_8049845 = xor i32 %v4_8049845, %v3_804983f
  %v12_8049845 = xor i32 %v5_8049845, %v3_804983f
  %v13_8049845 = and i32 %v12_8049845, %v11_8049845
  %v14_8049845 = icmp slt i32 %v13_8049845, 0
  %v15_8049845 = icmp eq i32 %v5_8049845, 0
  store i1 %v15_8049845, i1* %zf.global-to-local, align 1
  %v16_8049845 = icmp slt i32 %v5_8049845, 0
  %v3_8049849 = icmp ne i1 %v16_8049845, %v14_8049845
  %v4_8049849 = or i1 %v15_8049845, %v3_8049849
  br i1 %v4_8049849, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8049854:                             ; preds = %dec_label_pc_80493fd, %dec_label_pc_80493d2
  %v1_8049854.in = phi i32 [ %v0_8049452, %dec_label_pc_80493fd ], [ %v0_80493f3, %dec_label_pc_80493d2 ]
  %v0_8049854 = load i32, i32* @edi, align 4
  %v2_8049854 = add i32 %v1_8049854.in, 12
  %v3_8049854 = inttoptr i32 %v2_8049854 to i32*
  store i32 %v0_8049854, i32* %v3_8049854, align 4
  %v0_8049855 = load i32, i32* @edi, align 4
  %v2_8049855 = add i32 %v1_8049854.in, 8
  %v3_8049855 = inttoptr i32 %v2_8049855 to i32*
  store i32 %v0_8049855, i32* %v3_8049855, align 4
  %v1_8049856 = add i32 %v1_8049854.in, 4
  %v2_8049856 = inttoptr i32 %v1_8049856 to i32*
  store i32 0, i32* %v2_8049856, align 4
  %v2_8049858 = inttoptr i32 %v1_8049854.in to i32*
  store i32 40, i32* %v2_8049858, align 4
  %v3_804985a = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804985a, i32* %eax.global-to-local, align 4
  %v0_804985f = load i32, i32* @esp, align 4
  %v9_804985f = icmp eq i32 %v0_804985f, -12
  store i1 %v9_804985f, i1* %zf.global-to-local, align 1
  %v2_8049862 = add i32 %v0_804985f, 8
  %v3_8049862 = inttoptr i32 %v2_8049862 to i32*
  store i32 %v3_804985a, i32* %v3_8049862, align 4
  %v1_8049863 = add i32 %v0_804985f, 120
  %v2_8049863 = inttoptr i32 %v1_8049863 to i32*
  %v3_8049863 = load i32, i32* %v2_8049863, align 4
  %v2_8049867 = add i32 %v0_804985f, 4
  %v3_8049867 = inttoptr i32 %v2_8049867 to i32*
  store i32 %v3_8049863, i32* %v3_8049867, align 4
  %v1_8049868 = add i32 %v0_804985f, 147
  store i32 %v1_8049868, i32* @ecx, align 4
  %v3_804986f = inttoptr i32 %v0_804985f to i32*
  store i32 %v1_8049868, i32* %v3_804986f, align 4
  %v0_8049870 = call i32 @function_8051f30()
  %v0_8049875 = load i32, i32* @esp, align 4
  %v1_8049875 = add i32 %v0_8049875, 16
  %v1_8049878 = add i32 %v0_8049870, 1
  %v8_8049878 = icmp eq i32 %v1_8049878, 0
  store i1 %v8_8049878, i1* %zf.global-to-local, align 1
  store i32 %v1_8049878, i32* %eax.global-to-local, align 4
  br i1 %v8_8049878, label %dec_label_pc_8049a77, label %dec_label_pc_804987f

dec_label_pc_804987f:                             ; preds = %dec_label_pc_8049854
  %v0_804987f = load i32, i32* @ebx, align 4
  %v2_804987f = add i32 %v0_8049875, 12
  %v3_804987f = inttoptr i32 %v2_804987f to i32*
  store i32 %v0_804987f, i32* %v3_804987f, align 4
  %v0_8049880 = load i32, i32* @ebx, align 4
  %v2_8049880 = add i32 %v0_8049875, 8
  %v3_8049880 = inttoptr i32 %v2_8049880 to i32*
  store i32 %v0_8049880, i32* %v3_8049880, align 4
  %v1_8049881 = add i32 %v0_8049875, 4
  %v2_8049881 = inttoptr i32 %v1_8049881 to i32*
  store i32 0, i32* %v2_8049881, align 4
  %v2_8049883 = inttoptr i32 %v0_8049875 to i32*
  store i32 40, i32* %v2_8049883, align 4
  %v3_8049885 = call i32 @function_80510d0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049885, i32* %eax.global-to-local, align 4
  %v0_804988a = load i32, i32* @esp, align 4
  %v9_804988a = icmp eq i32 %v0_804988a, -12
  store i1 %v9_804988a, i1* %zf.global-to-local, align 1
  %v2_804988d = add i32 %v0_804988a, 8
  %v3_804988d = inttoptr i32 %v2_804988d to i32*
  store i32 %v3_8049885, i32* %v3_804988d, align 4
  %v1_804988e = add i32 %v0_804988a, 120
  %v2_804988e = inttoptr i32 %v1_804988e to i32*
  %v3_804988e = load i32, i32* %v2_804988e, align 4
  store i32 %v3_804988e, i32* @ecx, align 4
  %v2_8049892 = add i32 %v0_804988a, 4
  %v3_8049892 = inttoptr i32 %v2_8049892 to i32*
  store i32 %v3_804988e, i32* %v3_8049892, align 4
  %v1_8049893 = add i32 %v0_804988a, 147
  store i32 %v1_8049893, i32* %eax.global-to-local, align 4
  %v3_804989a = inttoptr i32 %v0_804988a to i32*
  store i32 %v1_8049893, i32* %v3_804989a, align 4
  %v0_804989b = call i32 @function_8051f30()
  store i32 %v0_804989b, i32* %eax.global-to-local, align 4
  %v0_80498a0 = load i32, i32* @esp, align 4
  %v6_80498a0 = icmp eq i32 %v0_80498a0, -16
  store i1 %v6_80498a0, i1* %zf.global-to-local, align 1
  store i32 %v0_804989b, i32* %ebx.global-to-local, align 4
  %v3_80498a5 = add i32 %v0_804989b, 147
  %v4_80498a5 = add i32 %v3_80498a5, %v0_80498a0
  %v5_80498a5 = inttoptr i32 %v4_80498a5 to i8*
  %v6_80498a5 = load i8, i8* %v5_80498a5, align 1
  %v12_80498a5 = icmp eq i8 %v6_80498a5, 32
  %v1_80498ad = zext i1 %v12_80498a5 to i32
  %v1_80498b0 = add i32 %v0_80498a0, 147
  store i32 %v1_80498b0, i32* %esi.global-to-local, align 4
  store i32 %v1_80498ad, i32* %eax.global-to-local, align 4
  %v1_80498bc = add i32 %v0_80498a0, 12
  %v2_80498bc = inttoptr i32 %v1_80498bc to i32*
  store i32 2, i32* %v2_80498bc, align 4
  %v1_80498be = add i32 %v0_80498a0, 8
  %v2_80498be = inttoptr i32 %v1_80498be to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_80498be, align 4
  %v0_80498c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80498c3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80498c3 = add i32 %v1_80498c3, %v0_80498c3
  store i32 %v2_80498c3, i32* @ebx, align 4
  %v1_80498c5 = add i32 %v0_80498a0, 120
  %v2_80498c5 = inttoptr i32 %v1_80498c5 to i32*
  %v3_80498c5 = load i32, i32* %v2_80498c5, align 4
  %v2_80498c9 = sub i32 %v3_80498c5, %v2_80498c3
  store i32 %v2_80498c9, i32* %eax.global-to-local, align 4
  %v0_80498cb = load i32, i32* %esi.global-to-local, align 4
  %v2_80498cb = add i32 %v0_80498cb, %v2_80498c3
  %v12_80498cb = icmp eq i32 %v2_80498cb, 0
  store i1 %v12_80498cb, i1* %zf.global-to-local, align 1
  store i32 %v2_80498cb, i32* @esi, align 4
  %v2_80498cd = add i32 %v0_80498a0, 4
  %v3_80498cd = inttoptr i32 %v2_80498cd to i32*
  store i32 %v2_80498c9, i32* %v3_80498cd, align 4
  %v0_80498ce = load i32, i32* @esi, align 4
  %v3_80498ce = inttoptr i32 %v0_80498a0 to i32*
  store i32 %v0_80498ce, i32* %v3_80498ce, align 4
  %v0_80498cf = call i32 @function_8051cf0()
  store i32 %v0_80498cf, i32* %eax.global-to-local, align 4
  %v0_80498d4 = load i32, i32* @esp, align 4
  %v1_80498d4 = add i32 %v0_80498d4, 16
  store i32 %v0_80498cf, i32* @edi, align 4
  %v10_80498d9 = icmp eq i32 %v0_80498cf, -1
  store i1 %v10_80498d9, i1* %zf.global-to-local, align 1
  br i1 %v10_80498d9, label %dec_label_pc_8049a77, label %dec_label_pc_80498e2

dec_label_pc_80498e2:                             ; preds = %dec_label_pc_804987f
  %v10_80498e2 = icmp eq i32 %v0_80498cf, 1
  store i1 %v10_80498e2, i1* %zf.global-to-local, align 1
  %v7_80498e5 = icmp sgt i32 %v0_80498cf, 1
  br i1 %v7_80498e5, label %dec_label_pc_80498e7, label %dec_label_pc_80498ea

dec_label_pc_80498e7:                             ; preds = %dec_label_pc_80498e2
  %v1_80498e7 = add i32 %v0_80498cf, -2
  %v9_80498e7 = icmp eq i32 %v1_80498e7, 0
  store i1 %v9_80498e7, i1* %zf.global-to-local, align 1
  store i32 %v1_80498e7, i32* @edi, align 4
  br label %dec_label_pc_80498ea

dec_label_pc_80498ea:                             ; preds = %dec_label_pc_80498e2, %dec_label_pc_80498e7
  %v1_80498ea = add i32 %v0_80498d4, 20920
  store i32 %v1_80498ea, i32* %eax.global-to-local, align 4
  %v1_80498f1 = add i32 %v0_80498d4, 20916
  %v2_80498f1 = inttoptr i32 %v1_80498f1 to i32*
  store i32 0, i32* %v2_80498f1, align 4
  %v0_80498fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80498fc = load i32, i32* @ebx, align 4
  %v2_80498fc = add i32 %v1_80498fc, %v0_80498fc
  %v12_80498fc = icmp eq i32 %v2_80498fc, 0
  store i1 %v12_80498fc, i1* %zf.global-to-local, align 1
  store i32 %v2_80498fc, i32* %eax.global-to-local, align 4
  %v0_80498fe = load i32, i32* @esi, align 4
  store i32 %v0_80498fe, i32* %edx.global-to-local, align 4
  %v1_8049900 = load i32, i32* @edi, align 4
  %v2_8049900 = add i32 %v2_80498fc, -20773
  %v3_8049900 = add i32 %v2_8049900, %v1_8049900
  %v4_8049900 = inttoptr i32 %v3_8049900 to i8*
  store i8 0, i8* %v4_8049900, align 1
  %v0_8049908 = load i32, i32* @esi, align 4
  %v1_8049908 = inttoptr i32 %v0_8049908 to i8*
  %v2_8049908 = load i8, i8* %v1_8049908, align 1
  %v3_8049908 = zext i8 %v2_8049908 to i32
  %v4_8049908 = load i32, i32* @ecx, align 4
  %v5_8049908 = and i32 %v4_8049908, -256
  %v6_8049908 = or i32 %v5_8049908, %v3_8049908
  store i32 %v6_8049908, i32* @ecx, align 4
  %v1_804990a = add i32 %v6_8049908, -48
  store i32 %v1_804990a, i32* %eax.global-to-local, align 4
  %v1_804990d = trunc i32 %v1_804990a to i8
  %v10_804990d = icmp eq i8 %v1_804990d, 9
  store i1 %v10_804990d, i1* %zf.global-to-local, align 1
  %tmp241 = icmp ult i8 %v1_804990d, 10
  br i1 %tmp241, label %dec_label_pc_8049911, label %dec_label_pc_8049928

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498ea
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049913

dec_label_pc_8049913:                             ; preds = %dec_label_pc_8049913, %dec_label_pc_8049911
  %v0_8049913 = phi i32 [ %v0_804991b, %dec_label_pc_8049913 ], [ 0, %dec_label_pc_8049911 ]
  %v1_8049913 = add i32 %v0_8049913, 1
  %v8_8049913 = icmp eq i32 %v1_8049913, 0
  store i1 %v8_8049913, i1* %zf.global-to-local, align 1
  store i32 %v1_8049913, i32* %edx.global-to-local, align 4
  %v1_8049914 = load i32, i32* @esp, align 4
  %v2_8049914 = add i32 %v1_8049914, 20900
  %v3_8049914 = inttoptr i32 %v2_8049914 to i32*
  store i32 %v1_8049913, i32* %v3_8049914, align 4
  %v0_804991b = load i32, i32* %edx.global-to-local, align 4
  %v1_804991b = load i32, i32* @esi, align 4
  %v2_804991b = add i32 %v1_804991b, %v0_804991b
  %v3_804991b = inttoptr i32 %v2_804991b to i8*
  %v4_804991b = load i8, i8* %v3_804991b, align 1
  %v5_804991b = zext i8 %v4_804991b to i32
  %v6_804991b = load i32, i32* @ecx, align 4
  %v7_804991b = and i32 %v6_804991b, -256
  %v8_804991b = or i32 %v7_804991b, %v5_804991b
  store i32 %v8_804991b, i32* @ecx, align 4
  %v1_804991e = add i32 %v8_804991b, -48
  store i32 %v1_804991e, i32* %eax.global-to-local, align 4
  %v1_8049921 = trunc i32 %v1_804991e to i8
  %v10_8049921 = icmp eq i8 %v1_8049921, 9
  store i1 %v10_8049921, i1* %zf.global-to-local, align 1
  %tmp242 = icmp ult i8 %v1_8049921, 10
  br i1 %tmp242, label %dec_label_pc_8049913, label %dec_label_pc_8049925

dec_label_pc_8049925:                             ; preds = %dec_label_pc_8049913
  store i32 %v2_804991b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049928

dec_label_pc_8049928:                             ; preds = %dec_label_pc_80498ea, %dec_label_pc_8049925
  %v0_8049928 = phi i32 [ %v6_8049908, %dec_label_pc_80498ea ], [ %v8_804991b, %dec_label_pc_8049925 ]
  %v3_8049928 = trunc i32 %v0_8049928 to i8
  %v4_8049928 = icmp eq i8 %v3_8049928, 0
  store i1 %v4_8049928, i1* %zf.global-to-local, align 1
  br i1 %v4_8049928, label %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, label %dec_label_pc_8049930

dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge: ; preds = %dec_label_pc_8049928
  %v0_8049a77.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049a77

dec_label_pc_8049930:                             ; preds = %dec_label_pc_8049928
  %v0_8049930 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049930 = inttoptr i32 %v0_8049930 to i8*
  store i8 0, i8* %v1_8049930, align 1
  %v0_8049933 = load i32, i32* @esp, align 4
  %v1_8049933 = add i32 %v0_8049933, 20900
  %v2_8049933 = inttoptr i32 %v1_8049933 to i32*
  %v3_8049933 = load i32, i32* %v2_8049933, align 4
  store i32 %v3_8049933, i32* %edx.global-to-local, align 4
  %v1_804993a = add i32 %v3_8049933, 1
  store i32 %v1_804993a, i32* %eax.global-to-local, align 4
  store i32 %v1_804993a, i32* %v2_8049933, align 4
  %v0_8049944 = load i32, i32* @esi, align 4
  %v1_8049944 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049944 = add i32 %v1_8049944, %v0_8049944
  %v3_8049944 = inttoptr i32 %v2_8049944 to i8*
  %v4_8049944 = load i8, i8* %v3_8049944, align 1
  %v10_8049944 = icmp eq i8 %v4_8049944, 32
  store i1 %v10_8049944, i1* %zf.global-to-local, align 1
  br i1 %v10_8049944, label %dec_label_pc_8049ee6, label %dec_label_pc_804994e

dec_label_pc_804994e:                             ; preds = %dec_label_pc_8049930, %dec_label_pc_8049ee6
  %v0_8049951 = phi i32 [ %v0_8049944, %dec_label_pc_8049930 ], [ %v0_8049951.pre, %dec_label_pc_8049ee6 ]
  %v0_804994e = load i32, i32* @esp, align 4
  store i32 %v0_8049951, i32* %eax.global-to-local, align 4
  %v1_8049953 = add i32 %v0_804994e, 20900
  %v2_8049953 = inttoptr i32 %v1_8049953 to i32*
  %v3_8049953 = load i32, i32* %v2_8049953, align 4
  store i32 %v3_8049953, i32* %edx.global-to-local, align 4
  %v2_804995a = add i32 %v3_8049953, %v0_8049951
  %v12_804995a = icmp eq i32 %v2_804995a, 0
  store i1 %v12_804995a, i1* %zf.global-to-local, align 1
  store i32 %v2_804995a, i32* %eax.global-to-local, align 4
  %v2_804995c = add i32 %v0_804994e, -16
  %v3_804995c = inttoptr i32 %v2_804995c to i32*
  store i32 %v2_804995a, i32* %v3_804995c, align 4
  %v2_804995d = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_804995d, i32* %eax.global-to-local, align 4
  %v0_8049962 = load i32, i32* @esp, align 4
  %v1_8049965 = add i32 %v0_8049962, 8
  %v2_8049965 = inttoptr i32 %v1_8049965 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054990.17 to i32), i32* %v2_8049965, align 4
  %v2_804996a = add i32 %v0_8049962, 4
  %v3_804996a = inttoptr i32 %v2_804996a to i32*
  store i32 %v2_804995d, i32* %v3_804996a, align 4
  %v1_804996b = add i32 %v0_8049962, 20916
  %v2_804996b = inttoptr i32 %v1_804996b to i32*
  %v3_804996b = load i32, i32* %v2_804996b, align 4
  store i32 %v3_804996b, i32* @ebp, align 4
  %v0_8049972 = load i32, i32* @esi, align 4
  %v2_8049974 = add i32 %v0_8049972, %v3_804996b
  %v12_8049974 = icmp eq i32 %v2_8049974, 0
  store i1 %v12_8049974, i1* %zf.global-to-local, align 1
  store i32 %v2_8049974, i32* %eax.global-to-local, align 4
  %v3_8049976 = inttoptr i32 %v0_8049962 to i32*
  store i32 %v2_8049974, i32* %v3_8049976, align 4
  %v0_8049977 = call i32 @function_8051f30()
  %v0_804997c = load i32, i32* @esp, align 4
  %v1_804997c = add i32 %v0_804997c, 16
  %v1_804997f = add i32 %v0_8049977, 1
  %v8_804997f = icmp eq i32 %v1_804997f, 0
  store i1 %v8_804997f, i1* %zf.global-to-local, align 1
  store i32 %v1_804997f, i32* %eax.global-to-local, align 4
  br i1 %v8_804997f, label %dec_label_pc_80499c3, label %dec_label_pc_8049982

dec_label_pc_8049982:                             ; preds = %dec_label_pc_804994e
  %v0_8049985 = load i32, i32* @esi, align 4
  store i32 %v0_8049985, i32* %eax.global-to-local, align 4
  %v1_8049987 = add i32 %v0_804997c, 20916
  %v2_8049987 = inttoptr i32 %v1_8049987 to i32*
  %v3_8049987 = load i32, i32* %v2_8049987, align 4
  %v2_804998e = add i32 %v3_8049987, %v0_8049985
  %v12_804998e = icmp eq i32 %v2_804998e, 0
  store i1 %v12_804998e, i1* %zf.global-to-local, align 1
  store i32 %v2_804998e, i32* %eax.global-to-local, align 4
  %v3_8049990 = inttoptr i32 %v0_804997c to i32*
  store i32 %v2_804998e, i32* %v3_8049990, align 4
  %v2_8049991 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049991, i32* %eax.global-to-local, align 4
  %v0_8049996 = load i32, i32* @esp, align 4
  %v1_8049999 = add i32 %v0_8049996, 8
  %v2_8049999 = inttoptr i32 %v1_8049999 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054990.17 to i32), i32* %v2_8049999, align 4
  %v2_804999e = add i32 %v0_8049996, 4
  %v3_804999e = inttoptr i32 %v2_804999e to i32*
  store i32 %v2_8049991, i32* %v3_804999e, align 4
  %v1_804999f = add i32 %v0_8049996, 20916
  %v2_804999f = inttoptr i32 %v1_804999f to i32*
  %v3_804999f = load i32, i32* %v2_804999f, align 4
  store i32 %v3_804999f, i32* @ecx, align 4
  %v0_80499a6 = load i32, i32* @esi, align 4
  %v2_80499a8 = add i32 %v0_80499a6, %v3_804999f
  %v12_80499a8 = icmp eq i32 %v2_80499a8, 0
  store i1 %v12_80499a8, i1* %zf.global-to-local, align 1
  store i32 %v2_80499a8, i32* %eax.global-to-local, align 4
  %v3_80499aa = inttoptr i32 %v0_8049996 to i32*
  store i32 %v2_80499a8, i32* %v3_80499aa, align 4
  %v0_80499ab = call i32 @function_8051f30()
  store i32 %v0_80499ab, i32* %eax.global-to-local, align 4
  %v0_80499b0 = load i32, i32* @esp, align 4
  %v1_80499b0 = add i32 %v0_80499b0, 20916
  %v2_80499b0 = inttoptr i32 %v1_80499b0 to i32*
  %v3_80499b0 = load i32, i32* %v2_80499b0, align 4
  %v2_80499b7 = add i32 %v3_80499b0, %v0_80499ab
  store i32 %v2_80499b7, i32* %edx.global-to-local, align 4
  store i32 %v2_80499b7, i32* %v2_80499b0, align 4
  %v0_80499c0 = load i32, i32* @esp, align 4
  %v1_80499c0 = add i32 %v0_80499c0, 16
  %v6_80499c0 = icmp eq i32 %v1_80499c0, 0
  store i1 %v6_80499c0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80499c3

dec_label_pc_80499c3:                             ; preds = %dec_label_pc_804994e, %dec_label_pc_8049982
  %v1_8049ef8 = phi i32 [ %v1_804997c, %dec_label_pc_804994e ], [ %v1_80499c0, %dec_label_pc_8049982 ]
  %v1_80499c3 = add i32 %v1_8049ef8, 20900
  %v2_80499c3 = inttoptr i32 %v1_80499c3 to i32*
  %v3_80499c3 = load i32, i32* %v2_80499c3, align 4
  store i32 %v3_80499c3, i32* %eax.global-to-local, align 4
  %v0_80499ca = load i32, i32* @esi, align 4
  %v2_80499ca = add i32 %v0_80499ca, %v3_80499c3
  %v3_80499ca = inttoptr i32 %v2_80499ca to i8*
  %v4_80499ca = load i8, i8* %v3_80499ca, align 1
  %v13_80499ca = icmp eq i8 %v4_80499ca, 34
  store i1 %v13_80499ca, i1* %zf.global-to-local, align 1
  br i1 %v13_80499ca, label %dec_label_pc_8049ef5, label %dec_label_pc_80499d4

dec_label_pc_80499d4:                             ; preds = %dec_label_pc_8049ef5, %dec_label_pc_80499c3, %dec_label_pc_8049f19
  %v1_80499d4 = phi i32 [ %v1_8049f0b, %dec_label_pc_8049ef5 ], [ %v1_8049ef8, %dec_label_pc_80499c3 ], [ %v1_80499d4.pre, %dec_label_pc_8049f19 ]
  %v0_80499d4 = phi i32 [ %v2_8049f06, %dec_label_pc_8049ef5 ], [ %v3_80499c3, %dec_label_pc_80499c3 ], [ %v0_80499d4.pre, %dec_label_pc_8049f19 ]
  %v2_80499d4 = add i32 %v1_80499d4, -4
  %v3_80499d4 = inttoptr i32 %v2_80499d4 to i32*
  store i32 %v0_80499d4, i32* %v3_80499d4, align 4
  %v0_80499d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80499d5 = add i32 %v1_80499d4, -8
  %v3_80499d5 = inttoptr i32 %v2_80499d5 to i32*
  store i32 %v0_80499d5, i32* %v3_80499d5, align 4
  %v1_80499d6 = add i32 %v1_80499d4, -12
  %v2_80499d6 = inttoptr i32 %v1_80499d6 to i32*
  store i32 10, i32* %v2_80499d6, align 4
  %v0_80499d8 = load i32, i32* @esi, align 4
  %v2_80499d8 = add i32 %v1_80499d4, -16
  %v3_80499d8 = inttoptr i32 %v2_80499d8 to i32*
  store i32 %v0_80499d8, i32* %v3_80499d8, align 4
  %v3_80499d9 = call i32 @function_8051d40(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  %v0_80499de = load i32, i32* @esp, align 4
  %v1_80499de = add i32 %v0_80499de, 16
  store i32 %v3_80499d9, i32* %edx.global-to-local, align 4
  %v1_80499e3 = add i32 %v3_80499d9, -1
  store i32 %v1_80499e3, i32* %eax.global-to-local, align 4
  %v9_80499e6 = icmp eq i32 %v3_80499d9, 9
  store i1 %v9_80499e6, i1* %zf.global-to-local, align 1
  %v6_80499e9 = icmp ugt i32 %v1_80499e3, 8
  br i1 %v6_80499e9, label %dec_label_pc_8049a11, label %dec_label_pc_80499eb

dec_label_pc_80499eb:                             ; preds = %dec_label_pc_80499d4
  %v1_80499eb = add i32 %v0_80499de, 132
  %v2_80499eb = inttoptr i32 %v1_80499eb to i32*
  %v3_80499eb = load i32, i32* %v2_80499eb, align 4
  %v2_80499ef = add i32 %v3_80499eb, %v3_80499d9
  store i32 %v2_80499ef, i32* @ebx, align 4
  %v9_8049a00186 = icmp eq i32 %v1_80499de, 12
  store i1 %v9_8049a00186, i1* %zf.global-to-local, align 1
  %v2_8049a03188 = inttoptr i32 %v0_80499de to i32*
  store i32 0, i32* %v2_8049a03188, align 4
  %v0_8049a05189 = call i32 @function_8052474()
  store i32 %v0_8049a05189, i32* %eax.global-to-local, align 4
  %v0_8049a0a190 = load i32, i32* @esp, align 4
  %v1_8049a0a191 = add i32 %v0_8049a0a190, 16
  %v1_8049a0d192 = load i32, i32* @ebx, align 4
  %v7_8049a0d193 = icmp ult i32 %v0_8049a05189, %v1_8049a0d192
  %v12_8049a0d194 = icmp eq i32 %v0_8049a05189, %v1_8049a0d192
  store i1 %v12_8049a0d194, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d193, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_80499f3:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3
  %v0_8049a0a195 = phi i32 [ %v0_8049a0a, %dec_label_pc_80499f3 ], [ %v0_8049a0a190, %dec_label_pc_80499eb ]
  %v9_80499f3 = icmp eq i32 %v0_8049a0a195, -4
  store i1 %v9_80499f3, i1* %zf.global-to-local, align 1
  %v2_80499f6 = inttoptr i32 %v0_8049a0a195 to i32*
  store i32 1, i32* %v2_80499f6, align 4
  %v0_80499f8 = call i32 @function_8053bf4()
  store i32 %v0_80499f8, i32* %eax.global-to-local, align 4
  %v0_80499fd = load i32, i32* @esp, align 4
  %v9_8049a00 = icmp eq i32 %v0_80499fd, -4
  store i1 %v9_8049a00, i1* %zf.global-to-local, align 1
  %v2_8049a03 = inttoptr i32 %v0_80499fd to i32*
  store i32 0, i32* %v2_8049a03, align 4
  %v0_8049a05 = call i32 @function_8052474()
  store i32 %v0_8049a05, i32* %eax.global-to-local, align 4
  %v0_8049a0a = load i32, i32* @esp, align 4
  %v1_8049a0a = add i32 %v0_8049a0a, 16
  %v1_8049a0d = load i32, i32* @ebx, align 4
  %v7_8049a0d = icmp ult i32 %v0_8049a05, %v1_8049a0d
  %v12_8049a0d = icmp eq i32 %v0_8049a05, %v1_8049a0d
  store i1 %v12_8049a0d, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3, %dec_label_pc_80499d4
  %v0_8049a1a = phi i32 [ %v1_80499de, %dec_label_pc_80499d4 ], [ %v1_8049a0a191, %dec_label_pc_80499eb ], [ %v1_8049a0a, %dec_label_pc_80499f3 ]
  %v1_8049a11 = add i32 %v0_8049a1a, 20900
  %v2_8049a11 = inttoptr i32 %v1_8049a11 to i32*
  %v3_8049a11 = load i32, i32* %v2_8049a11, align 4
  store i32 %v3_8049a11, i32* %eax.global-to-local, align 4
  %v0_8049a18 = load i32, i32* @esi, align 4
  %v2_8049a1d = add i32 %v0_8049a18, %v3_8049a11
  %v12_8049a1d = icmp eq i32 %v2_8049a1d, 0
  store i1 %v12_8049a1d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049a1d, i32* @ebx, align 4
  %v2_8049a1f = add i32 %v0_8049a1a, -16
  %v3_8049a1f = inttoptr i32 %v2_8049a1f to i32*
  store i32 %v2_8049a1d, i32* %v3_8049a1f, align 4
  %v2_8049a20 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049a20, i32* %eax.global-to-local, align 4
  %v0_8049a25 = load i32, i32* @esp, align 4
  %v9_8049a25 = icmp eq i32 %v0_8049a25, -12
  store i1 %v9_8049a25, i1* %zf.global-to-local, align 1
  %v1_8049a28 = add i32 %v0_8049a25, 8
  %v2_8049a28 = inttoptr i32 %v1_8049a28 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_805498b.15 to i32), i32* %v2_8049a28, align 4
  %v2_8049a2d = add i32 %v0_8049a25, 4
  %v3_8049a2d = inttoptr i32 %v2_8049a2d to i32*
  store i32 %v2_8049a20, i32* %v3_8049a2d, align 4
  %v0_8049a2e = load i32, i32* @ebx, align 4
  %v3_8049a2e = inttoptr i32 %v0_8049a25 to i32*
  store i32 %v0_8049a2e, i32* %v3_8049a2e, align 4
  %v0_8049a2f = call i32 @function_8051f30()
  store i32 %v0_8049a2f, i32* %eax.global-to-local, align 4
  %v0_8049a34 = load i32, i32* @esp, align 4
  %v1_8049a34 = add i32 %v0_8049a34, 16
  %v9_8049a37 = icmp eq i32 %v0_8049a2f, 4
  store i1 %v9_8049a37, i1* %zf.global-to-local, align 1
  br i1 %v9_8049a37, label %dec_label_pc_8049e6a, label %dec_label_pc_8049a40

dec_label_pc_8049a40:                             ; preds = %dec_label_pc_8049a11
  %v0_8049a40 = load i32, i32* @ebx, align 4
  %v1_8049a40 = inttoptr i32 %v0_8049a40 to i8*
  %v2_8049a40 = load i8, i8* %v1_8049a40, align 1
  %v11_8049a40 = icmp eq i8 %v2_8049a40, 47
  store i1 %v11_8049a40, i1* %zf.global-to-local, align 1
  br i1 %v11_8049a40, label %dec_label_pc_8049d1e, label %dec_label_pc_8049a49

dec_label_pc_8049a49:                             ; preds = %dec_label_pc_8049d41, %dec_label_pc_8049d1e, %dec_label_pc_8049a40, %dec_label_pc_8049d76
  %v0_8049a49 = phi i32 [ %v1_8049d6b, %dec_label_pc_8049d41 ], [ %v1_8049d33, %dec_label_pc_8049d1e ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d8b, %dec_label_pc_8049d76 ]
  %v1_8049a49 = add i32 %v0_8049a49, 76
  %v2_8049a49 = inttoptr i32 %v1_8049a49 to i32*
  %v3_8049a49 = load i32, i32* %v2_8049a49, align 4
  store i32 %v3_8049a49, i32* %edx.global-to-local, align 4
  %v1_8049a4d = add i32 %v3_8049a49, 1431
  %v2_8049a4d = inttoptr i32 %v1_8049a4d to i32*
  store i32 5522759, i32* %v2_8049a4d, align 4
  %v0_8049a57 = load i32, i32* @esp, align 4
  %v1_8049a57 = add i32 %v0_8049a57, 92
  %v2_8049a57 = inttoptr i32 %v1_8049a57 to i32*
  %v3_8049a57 = load i32, i32* %v2_8049a57, align 4
  store i32 %v3_8049a57, i32* %ecx.global-to-local, align 4
  %v1_8049a5b = add i32 %v3_8049a57, -1448
  %v2_8049a5b = inttoptr i32 %v1_8049a5b to i8*
  store i8 10, i8* %v2_8049a5b, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049a67:                             ; preds = %dec_label_pc_8049124
  %v1_8049a67 = add i32 %v0_8049145, 108
  %v2_8049a67 = inttoptr i32 %v1_8049a67 to i32*
  %v3_8049a67 = load i32, i32* %v2_8049a67, align 4
  store i32 %v3_8049a67, i32* %eax.global-to-local, align 4
  %v1_8049a6b = add i32 %v3_8049a67, 12
  %v2_8049a6b = inttoptr i32 %v1_8049a6b to i32*
  store i32 0, i32* %v2_8049a6b, align 4
  br label %dec_label_pc_80491db

dec_label_pc_8049a77:                             ; preds = %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, %dec_label_pc_804987f, %dec_label_pc_8049854
  %v0_8049a77 = phi i32 [ %v0_8049a77.pre, %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge ], [ %v1_80498d4, %dec_label_pc_804987f ], [ %v1_8049875, %dec_label_pc_8049854 ]
  %v1_8049a77 = add i32 %v0_8049a77, -4
  %v2_8049a77 = inttoptr i32 %v1_8049a77 to i32*
  store i32 4, i32* %v2_8049a77, align 4
  %v1_8049a79 = add i32 %v0_8049a77, -8
  %v2_8049a79 = inttoptr i32 %v1_8049a79 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054984.13 to i32), i32* %v2_8049a79, align 4
  %v1_8049a7e = add i32 %v0_8049a77, 104
  %v2_8049a7e = inttoptr i32 %v1_8049a7e to i32*
  %v3_8049a7e = load i32, i32* %v2_8049a7e, align 4
  store i32 %v3_8049a7e, i32* %ecx.global-to-local, align 4
  %v2_8049a82 = add i32 %v0_8049a77, -12
  %v3_8049a82 = inttoptr i32 %v2_8049a82 to i32*
  store i32 %v3_8049a7e, i32* %v3_8049a82, align 4
  %v1_8049a83 = add i32 %v0_8049a77, 131
  store i32 %v1_8049a83, i32* %eax.global-to-local, align 4
  %v2_8049a8a = add i32 %v0_8049a77, -16
  %v3_8049a8a = inttoptr i32 %v2_8049a8a to i32*
  store i32 %v1_8049a83, i32* %v3_8049a8a, align 4
  %v0_8049a8b = call i32 @function_8051cf0()
  store i32 %v0_8049a8b, i32* %eax.global-to-local, align 4
  %v0_8049a90 = load i32, i32* @esp, align 4
  %v1_8049a90 = add i32 %v0_8049a90, 92
  %v2_8049a90 = inttoptr i32 %v1_8049a90 to i32*
  %v3_8049a90 = load i32, i32* %v2_8049a90, align 4
  store i32 %v0_8049a8b, i32* @esi, align 4
  %v1_8049a96 = add i32 %v3_8049a90, 1431
  %v9_8049a96 = icmp eq i32 %v1_8049a96, 0
  store i1 %v9_8049a96, i1* %zf.global-to-local, align 1
  store i32 %v1_8049a96, i32* @ebx, align 4
  %v1_8049a9c = inttoptr i32 %v0_8049a90 to i32*
  %v2_8049a9c = load i32, i32* %v1_8049a9c, align 4
  store i32 %v2_8049a9c, i32* %eax.global-to-local, align 4
  %v3_8049a9c = add i32 %v0_8049a90, 4
  %v1_8049a9d = inttoptr i32 %v3_8049a9c to i32*
  %v2_8049a9d = load i32, i32* %v1_8049a9d, align 4
  store i32 %v2_8049a9d, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8054995.18 to i32), i32* %v1_8049a9d, align 4
  %v0_8049aa3 = load i32, i32* @ebx, align 4
  store i32 %v0_8049aa3, i32* %v1_8049a9c, align 4
  %v0_8049aa4 = call i32 @function_8051fb0()
  store i32 %v0_8049aa4, i32* %eax.global-to-local, align 4
  %v0_8049aa9 = load i32, i32* @esp, align 4
  %v3_8049aac = trunc i32 %v0_8049aa4 to i8
  %v4_8049aac = icmp eq i8 %v3_8049aac, 0
  store i1 %v4_8049aac, i1* %zf.global-to-local, align 1
  br i1 %v4_8049aac, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ab4

dec_label_pc_8049ab4:                             ; preds = %dec_label_pc_8049c4e, %dec_label_pc_8049a77
  %v0_8049ab4.in = phi i32 [ %v0_8049c5b, %dec_label_pc_8049c4e ], [ %v0_8049aa9, %dec_label_pc_8049a77 ]
  %v1_8049ab4 = add i32 %v0_8049ab4.in, 108
  %v2_8049ab4 = inttoptr i32 %v1_8049ab4 to i32*
  %v3_8049ab4 = load i32, i32* %v2_8049ab4, align 4
  store i32 %v3_8049ab4, i32* %edx.global-to-local, align 4
  %v1_8049ab8 = add i32 %v3_8049ab4, -1448
  %v2_8049ab8 = inttoptr i32 %v1_8049ab8 to i8*
  store i8 7, i8* %v2_8049ab8, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049abf:                             ; preds = %dec_label_pc_8049c66, %dec_label_pc_8049ab4
  %v0_8049abf = load i32, i32* @esp, align 4
  %v1_8049abf = add i32 %v0_8049abf, -4
  %v2_8049abf = inttoptr i32 %v1_8049abf to i32*
  store i32 16384, i32* %v2_8049abf, align 4
  %v0_8049ac4 = load i32, i32* @esi, align 4
  %v2_8049ac4 = add i32 %v0_8049abf, -8
  %v3_8049ac4 = inttoptr i32 %v2_8049ac4 to i32*
  store i32 %v0_8049ac4, i32* %v3_8049ac4, align 4
  %v1_8049ac5 = add i32 %v0_8049abf, 131
  store i32 %v1_8049ac5, i32* %eax.global-to-local, align 4
  %v2_8049acc = add i32 %v0_8049abf, -12
  %v3_8049acc = inttoptr i32 %v2_8049acc to i32*
  store i32 %v1_8049ac5, i32* %v3_8049acc, align 4
  %v1_8049acd = add i32 %v0_8049abf, 92
  %v2_8049acd = inttoptr i32 %v1_8049acd to i32*
  %v3_8049acd = load i32, i32* %v2_8049acd, align 4
  store i32 %v3_8049acd, i32* %edx.global-to-local, align 4
  %v1_8049ad1 = add i32 %v3_8049acd, -1452
  %v2_8049ad1 = inttoptr i32 %v1_8049ad1 to i32*
  %v3_8049ad1 = load i32, i32* %v2_8049ad1, align 4
  store i32 %v3_8049ad1, i32* %eax.global-to-local, align 4
  %v2_8049ad7 = add i32 %v0_8049abf, -16
  %v3_8049ad7 = inttoptr i32 %v2_8049ad7 to i32*
  store i32 %v3_8049ad1, i32* %v3_8049ad7, align 4
  %v0_8049ad8 = call i32 @function_805286d()
  store i32 %v0_8049ad8, i32* %eax.global-to-local, align 4
  %v0_8049add = load i32, i32* @esp, align 4
  %v6_8049add = icmp eq i32 %v0_8049add, -16
  store i1 %v6_8049add, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049ae5:                             ; preds = %dec_label_pc_8048ebe
  %v3_8049ae5 = load i32, i32* %v2_8049ae5, align 4
  %v4_8049ae5 = add i32 %v3_8049ae5, -10239
  %v9_8049ae5 = sub i32 10238, %v3_8049ae5
  %v10_8049ae5 = and i32 %v9_8049ae5, %v3_8049ae5
  %v11_8049ae5 = icmp slt i32 %v10_8049ae5, 0
  %v12_8049ae5 = icmp eq i32 %v4_8049ae5, 0
  store i1 %v12_8049ae5, i1* %zf.global-to-local, align 1
  %v13_8049ae5 = icmp slt i32 %v4_8049ae5, 0
  %v3_8049aed = icmp ne i1 %v13_8049ae5, %v11_8049ae5
  %v4_8049aed = or i1 %v12_8049ae5, %v3_8049aed
  br i1 %v4_8049aed, label %dec_label_pc_8048d91, label %dec_label_pc_8048ee1

dec_label_pc_8049af8:                             ; preds = %dec_label_pc_8049577
  %v0_8049af8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049af8 = add i32 %v0_8049af8, -1448
  %v2_8049af8 = inttoptr i32 %v1_8049af8 to i8*
  store i8 1, i8* %v2_8049af8, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049b04:                             ; preds = %dec_label_pc_80497ba
  %v0_8049b04 = load i32, i32* @ebx, align 4
  %v1_8049b04 = inttoptr i32 %v0_8049b04 to i32*
  store i32 104, i32* %v1_8049b04, align 4
  %v0_80497f9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80497f9

dec_label_pc_8049b0f:                             ; preds = %dec_label_pc_8049518
  %v0_8049b0f = load i32, i32* @edi, align 4
  %v1_8049b0f = inttoptr i32 %v0_8049b0f to i32*
  %v2_8049b0f = load i32, i32* %v1_8049b0f, align 4
  %v11_8049b0f = icmp eq i32 %v2_8049b0f, 11
  store i1 %v11_8049b0f, i1* %zf.global-to-local, align 1
  %v1_8049b12 = icmp eq i1 %v11_8049b0f, false
  br i1 %v1_8049b12, label %dec_label_pc_8048e4a, label %dec_label_pc_8048d91

dec_label_pc_8049b1d:                             ; preds = %dec_label_pc_8049468
  %v1_8049b1d = add i32 %v0_804948a, 20916
  %v2_8049b1d = inttoptr i32 %v1_8049b1d to i32*
  store i32 7, i32* %v2_8049b1d, align 4
  %v0_8049b28 = load i32, i32* @esi, align 4
  %v1_8049b28 = add i32 %v0_8049b28, 4
  %v2_8049b28 = inttoptr i32 %v1_8049b28 to i8*
  %v3_8049b28 = load i8, i8* %v2_8049b28, align 1
  %v12_8049b28 = icmp eq i8 %v3_8049b28, 115
  store i1 %v12_8049b28, i1* %zf.global-to-local, align 1
  br i1 %v12_8049b28, label %dec_label_pc_8049d93, label %dec_label_pc_8049b32

dec_label_pc_8049b32:                             ; preds = %dec_label_pc_8049b1d, %dec_label_pc_8049d93
  %v0_8049b32 = load i32, i32* @esp, align 4
  %v1_8049b32 = add i32 %v0_8049b32, 20900
  %v2_8049b32 = inttoptr i32 %v1_8049b32 to i32*
  %v3_8049b32 = load i32, i32* %v2_8049b32, align 4
  store i32 %v3_8049b32, i32* %eax.global-to-local, align 4
  %v0_8049b39 = load i32, i32* @edx, align 4
  %v2_8049b39 = add i32 %v0_8049b32, -4
  %v3_8049b39 = inttoptr i32 %v2_8049b39 to i32*
  store i32 %v0_8049b39, i32* %v3_8049b39, align 4
  %v0_8049b3a = load i32, i32* @ebx, align 4
  %v1_8049b3a = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b3a = sub i32 %v0_8049b3a, %v1_8049b3a
  %v12_8049b3a = icmp eq i32 %v2_8049b3a, 0
  store i1 %v12_8049b3a, i1* %zf.global-to-local, align 1
  store i32 %v2_8049b3a, i32* @ebx, align 4
  %v0_8049b3c = load i32, i32* @esi, align 4
  %v2_8049b3c = add i32 %v0_8049b3c, %v1_8049b3a
  store i32 %v2_8049b3c, i32* %eax.global-to-local, align 4
  %v2_8049b3f = add i32 %v0_8049b32, -8
  %v3_8049b3f = inttoptr i32 %v2_8049b3f to i32*
  store i32 %v2_8049b3a, i32* %v3_8049b3f, align 4
  %v0_8049b40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b40 = add i32 %v0_8049b32, -12
  %v3_8049b40 = inttoptr i32 %v2_8049b40 to i32*
  store i32 %v0_8049b40, i32* %v3_8049b40, align 4
  %v0_8049b41 = load i32, i32* @esi, align 4
  %v2_8049b41 = add i32 %v0_8049b32, -16
  %v3_8049b41 = inttoptr i32 %v2_8049b41 to i32*
  store i32 %v0_8049b41, i32* %v3_8049b41, align 4
  %v4_8049b42 = call i32 @function_80526e7(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049b42, i32* %eax.global-to-local, align 4
  %v0_8049b47 = load i32, i32* @esp, align 4
  %v1_8049b47 = add i32 %v0_8049b47, 20916
  %v2_8049b47 = inttoptr i32 %v1_8049b47 to i32*
  store i32 0, i32* %v2_8049b47, align 4
  %v0_8049b52 = load i32, i32* @esi, align 4
  %v1_8049b52 = inttoptr i32 %v0_8049b52 to i8*
  %v2_8049b52 = load i8, i8* %v1_8049b52, align 1
  %v3_8049b52 = zext i8 %v2_8049b52 to i32
  %v5_8049b52 = and i32 %v4_8049b42, -256
  %v6_8049b52 = or i32 %v3_8049b52, %v5_8049b52
  store i32 %v6_8049b52, i32* %eax.global-to-local, align 4
  %v0_8049b54 = load i32, i32* @esp, align 4
  %v4_8049b57 = icmp eq i8 %v2_8049b52, 0
  store i1 %v4_8049b57, i1* %zf.global-to-local, align 1
  br i1 %v4_8049b57, label %dec_label_pc_8049b86, label %dec_label_pc_8049b5b

dec_label_pc_8049b5b:                             ; preds = %dec_label_pc_8049b32
  store i32 %v0_8049b52, i32* %ecx.global-to-local, align 4
  %v10_8049b5d = icmp eq i8 %v2_8049b52, 47
  store i1 %v10_8049b5d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b5d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b65

dec_label_pc_8049b65:                             ; preds = %dec_label_pc_8049b5b
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049b76172 = add i32 %v0_8049b52, 1
  store i32 %v2_8049b76172, i32* %ecx.global-to-local, align 4
  %v2_8049b79173 = add i32 %v0_8049b54, 20916
  %v3_8049b79174 = inttoptr i32 %v2_8049b79173 to i32*
  store i32 1, i32* %v3_8049b79174, align 4
  %v0_8049b80175 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80176 = inttoptr i32 %v0_8049b80175 to i8*
  %v2_8049b80177 = load i8, i8* %v1_8049b80176, align 1
  %v3_8049b80178 = zext i8 %v2_8049b80177 to i32
  %v4_8049b80179 = load i32, i32* @edx, align 4
  %v5_8049b80180 = and i32 %v4_8049b80179, -256
  %v6_8049b80181 = or i32 %v5_8049b80180, %v3_8049b80178
  store i32 %v6_8049b80181, i32* %edx.global-to-local, align 4
  %v4_8049b82182 = icmp eq i8 %v2_8049b80177, 0
  store i1 %v4_8049b82182, i1* %zf.global-to-local, align 1
  %v1_8049b84183 = icmp eq i1 %v4_8049b82182, false
  br i1 %v1_8049b84183, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b6c:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge
  %v2_8049b80185 = phi i8 [ %v2_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v2_8049b80177, %dec_label_pc_8049b65 ]
  %v0_8049b80184 = phi i32 [ %v0_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v0_8049b80175, %dec_label_pc_8049b65 ]
  %v0_8049b6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8049b6c = add i32 %v0_8049b6c, 1
  store i32 %v1_8049b6c, i32* %eax.global-to-local, align 4
  %v10_8049b6d = icmp eq i8 %v2_8049b80185, 47
  store i1 %v10_8049b6d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b6d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge

dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge: ; preds = %dec_label_pc_8049b6c
  %v1_8049b76.pre = load i32, i32* @esi, align 4
  %v1_8049b79.pre = load i32, i32* @esp, align 4
  %v2_8049b76 = add i32 %v1_8049b6c, %v1_8049b76.pre
  store i32 %v2_8049b76, i32* %ecx.global-to-local, align 4
  %v2_8049b79 = add i32 %v1_8049b79.pre, 20900
  %v3_8049b79 = inttoptr i32 %v2_8049b79 to i32*
  store i32 %v1_8049b6c, i32* %v3_8049b79, align 4
  %v0_8049b80 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80 = inttoptr i32 %v0_8049b80 to i8*
  %v2_8049b80 = load i8, i8* %v1_8049b80, align 1
  %v3_8049b80 = zext i8 %v2_8049b80 to i32
  %v4_8049b80 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049b80 = and i32 %v4_8049b80, -256
  %v6_8049b80 = or i32 %v5_8049b80, %v3_8049b80
  store i32 %v6_8049b80, i32* %edx.global-to-local, align 4
  %v4_8049b82 = icmp eq i8 %v2_8049b80, 0
  store i1 %v4_8049b82, i1* %zf.global-to-local, align 1
  %v1_8049b84 = icmp eq i1 %v4_8049b82, false
  br i1 %v1_8049b84, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b86:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge, %dec_label_pc_8049b32, %dec_label_pc_8049c80
  %v0_8049b86 = load i32, i32* @esp, align 4
  %v9_8049b86 = icmp eq i32 %v0_8049b86, 12
  store i1 %v9_8049b86, i1* %zf.global-to-local, align 1
  %v0_8049b89 = load i32, i32* @esi, align 4
  %v2_8049b89 = add i32 %v0_8049b86, -16
  %v3_8049b89 = inttoptr i32 %v2_8049b89 to i32*
  store i32 %v0_8049b89, i32* %v3_8049b89, align 4
  %v2_8049b8a = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049b8a, i32* %eax.global-to-local, align 4
  %v0_8049b8f = load i32, i32* @esp, align 4
  %v1_8049b8f = add i32 %v0_8049b8f, 16
  %v1_8049b92 = icmp eq i32 %v2_8049b8a, 0
  store i1 %v1_8049b92, i1* %zf.global-to-local, align 1
  %tmp148 = icmp slt i32 %v2_8049b8a, 1
  br i1 %tmp148, label %dec_label_pc_8049bbc, label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049b86
  %v9_8049b96 = icmp eq i32 %v0_8049b8f, -4
  store i1 %v9_8049b96, i1* %zf.global-to-local, align 1
  %v0_8049b99 = load i32, i32* @esi, align 4
  %v3_8049b99 = inttoptr i32 %v0_8049b8f to i32*
  store i32 %v0_8049b99, i32* %v3_8049b99, align 4
  %v2_8049b9a = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049b9a, i32* %eax.global-to-local, align 4
  %v0_8049b9f = load i32, i32* @esp, align 4
  %v1_8049b9f = add i32 %v0_8049b9f, 16
  %v1_8049ba2 = add i32 %v2_8049b9a, -127
  %v6_8049ba2 = sub i32 126, %v2_8049b9a
  %v7_8049ba2 = and i32 %v6_8049ba2, %v2_8049b9a
  %v8_8049ba2 = icmp slt i32 %v7_8049ba2, 0
  %v9_8049ba2 = icmp eq i32 %v1_8049ba2, 0
  store i1 %v9_8049ba2, i1* %zf.global-to-local, align 1
  %v10_8049ba2 = icmp slt i32 %v1_8049ba2, 0
  %v3_8049ba5 = icmp eq i1 %v10_8049ba2, %v8_8049ba2
  %v4_8049ba5 = icmp eq i1 %v9_8049ba2, false
  %v5_8049ba5 = and i1 %v4_8049ba5, %v3_8049ba5
  br i1 %v5_8049ba5, label %dec_label_pc_8049bbc, label %dec_label_pc_8049ba7

dec_label_pc_8049ba7:                             ; preds = %dec_label_pc_8049b96
  %v2_8049ba7 = add i32 %v0_8049b9f, 12
  %v3_8049ba7 = inttoptr i32 %v2_8049ba7 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba7, align 4
  %v2_8049ba8 = add i32 %v0_8049b9f, 8
  %v3_8049ba8 = inttoptr i32 %v2_8049ba8 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba8, align 4
  %v0_8049ba9 = load i32, i32* @esi, align 4
  %v2_8049ba9 = add i32 %v0_8049b9f, 4
  %v3_8049ba9 = inttoptr i32 %v2_8049ba9 to i32*
  store i32 %v0_8049ba9, i32* %v3_8049ba9, align 4
  %v1_8049baa = add i32 %v0_8049b9f, 92
  %v2_8049baa = inttoptr i32 %v1_8049baa to i32*
  %v3_8049baa = load i32, i32* %v2_8049baa, align 4
  %v1_8049bae = add i32 %v3_8049baa, 789
  %v9_8049bae = icmp eq i32 %v1_8049bae, 0
  store i1 %v9_8049bae, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bae, i32* %eax.global-to-local, align 4
  %v3_8049bb3 = inttoptr i32 %v0_8049b9f to i32*
  store i32 %v1_8049bae, i32* %v3_8049bb3, align 4
  %v3_8049bb4 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049bb4, i32* %eax.global-to-local, align 4
  %v0_8049bb9 = load i32, i32* @esp, align 4
  %v1_8049bb9 = add i32 %v0_8049bb9, 16
  %v6_8049bb9 = icmp eq i32 %v1_8049bb9, 0
  store i1 %v6_8049bb9, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049bbc

dec_label_pc_8049bbc:                             ; preds = %dec_label_pc_8049b96, %dec_label_pc_8049b86, %dec_label_pc_8049ba7
  %v0_8049bbc = phi i32 [ %v1_8049b9f, %dec_label_pc_8049b96 ], [ %v1_8049b8f, %dec_label_pc_8049b86 ], [ %v1_8049bb9, %dec_label_pc_8049ba7 ]
  %v0_8049bbf = load i32, i32* @esi, align 4
  store i32 %v0_8049bbf, i32* %eax.global-to-local, align 4
  %v1_8049bc1 = add i32 %v0_8049bbc, 20900
  %v2_8049bc1 = inttoptr i32 %v1_8049bc1 to i32*
  %v3_8049bc1 = load i32, i32* %v2_8049bc1, align 4
  %v2_8049bc8 = add i32 %v0_8049bbf, 1
  %v1_8049bca = add i32 %v2_8049bc8, %v3_8049bc1
  %v8_8049bca = icmp eq i32 %v1_8049bca, 0
  store i1 %v8_8049bca, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bca, i32* %eax.global-to-local, align 4
  %v2_8049bcb = add i32 %v0_8049bbc, -16
  %v3_8049bcb = inttoptr i32 %v2_8049bcb to i32*
  store i32 %v1_8049bca, i32* %v3_8049bcb, align 4
  %v2_8049bcc = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049bcc, i32* @eax, align 4
  %v0_8049bd1 = load i32, i32* @esp, align 4
  %v1_8049bd1 = add i32 %v0_8049bd1, 16
  %v1_8049bd4 = add i32 %v2_8049bcc, -255
  %v6_8049bd4 = sub i32 254, %v2_8049bcc
  %v7_8049bd4 = and i32 %v6_8049bd4, %v2_8049bcc
  %v8_8049bd4 = icmp slt i32 %v7_8049bd4, 0
  %v9_8049bd4 = icmp eq i32 %v1_8049bd4, 0
  store i1 %v9_8049bd4, i1* %zf.global-to-local, align 1
  %v10_8049bd4 = icmp slt i32 %v1_8049bd4, 0
  %v3_8049bd9 = icmp eq i1 %v10_8049bd4, %v8_8049bd4
  %v4_8049bd9 = icmp eq i1 %v9_8049bd4, false
  %v5_8049bd9 = and i1 %v4_8049bd9, %v3_8049bd9
  br i1 %v5_8049bd9, label %dec_label_pc_804949f, label %dec_label_pc_8049bdf

dec_label_pc_8049bdf:                             ; preds = %dec_label_pc_8049bbc
  %v1_8049bdf = add i32 %v0_8049bd1, 92
  %v2_8049bdf = inttoptr i32 %v1_8049bdf to i32*
  %v3_8049bdf = load i32, i32* %v2_8049bdf, align 4
  store i32 %v3_8049bdf, i32* %ebx.global-to-local, align 4
  %v0_8049be3 = load i32, i32* @edi, align 4
  %v2_8049be3 = add i32 %v0_8049bd1, 12
  %v3_8049be3 = inttoptr i32 %v2_8049be3 to i32*
  store i32 %v0_8049be3, i32* %v3_8049be3, align 4
  %v0_8049be4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049be4 = add i32 %v0_8049be4, 533
  %v9_8049be4 = icmp eq i32 %v1_8049be4, 0
  store i1 %v9_8049be4, i1* %zf.global-to-local, align 1
  store i32 %v1_8049be4, i32* @ebx, align 4
  %v0_8049bea = load i32, i32* @edi, align 4
  %v2_8049bea = add i32 %v0_8049bd1, 8
  %v3_8049bea = inttoptr i32 %v2_8049bea to i32*
  store i32 %v0_8049bea, i32* %v3_8049bea, align 4
  %v1_8049beb = add i32 %v0_8049bd1, 4
  %v2_8049beb = inttoptr i32 %v1_8049beb to i32*
  store i32 255, i32* %v2_8049beb, align 4
  %v0_8049bf0 = load i32, i32* @ebx, align 4
  %v3_8049bf0 = inttoptr i32 %v0_8049bd1 to i32*
  store i32 %v0_8049bf0, i32* %v3_8049bf0, align 4
  %v4_8049bf1 = call i32 @function_8051cd0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049bf1, i32* %eax.global-to-local, align 4
  %v0_8049bf6 = load i32, i32* @esp, align 4
  %v1_8049bf6 = inttoptr i32 %v0_8049bf6 to i32*
  %v2_8049bf6 = load i32, i32* %v1_8049bf6, align 4
  store i32 %v2_8049bf6, i32* %ecx.global-to-local, align 4
  %v0_8049bf7 = load i32, i32* @esi, align 4
  store i32 %v0_8049bf7, i32* %eax.global-to-local, align 4
  %v1_8049bf9 = add i32 %v0_8049bf6, 20916
  %v2_8049bf9 = inttoptr i32 %v1_8049bf9 to i32*
  %v3_8049bf9 = load i32, i32* %v2_8049bf9, align 4
  store i32 %v3_8049bf9, i32* %edx.global-to-local, align 4
  %v2_8049c00 = add i32 %v0_8049bf7, 1
  %v1_8049c02 = add i32 %v2_8049c00, %v3_8049bf9
  %v8_8049c02 = icmp eq i32 %v1_8049c02, 0
  store i1 %v8_8049c02, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c02, i32* %eax.global-to-local, align 4
  store i32 %v1_8049c02, i32* %v1_8049bf6, align 4
  %v2_8049c04 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049c04, i32* %eax.global-to-local, align 4
  %v0_8049c09 = load i32, i32* @esp, align 4
  %v1_8049c09 = add i32 %v0_8049c09, 16
  %v1_8049c0c = icmp eq i32 %v2_8049c04, 0
  store i1 %v1_8049c0c, i1* %zf.global-to-local, align 1
  %tmp149 = icmp slt i32 %v2_8049c04, 1
  br i1 %tmp149, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049c14:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049bdf
  %v1_8049c14 = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049c09, %dec_label_pc_8049bdf ]
  %v0_8049c14 = phi i32 [ %v2_8049ccd, %dec_label_pc_8049cbd ], [ %v2_8049c04, %dec_label_pc_8049bdf ]
  %v2_8049c14 = add i32 %v1_8049c14, -4
  %v3_8049c14 = inttoptr i32 %v2_8049c14 to i32*
  store i32 %v0_8049c14, i32* %v3_8049c14, align 4
  %v0_8049c15 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049c15 = add i32 %v1_8049c14, -8
  %v3_8049c15 = inttoptr i32 %v2_8049c15 to i32*
  store i32 %v0_8049c15, i32* %v3_8049c15, align 4
  %v1_8049c16 = add i32 %v1_8049c14, 20900
  %v2_8049c16 = inttoptr i32 %v1_8049c16 to i32*
  %v3_8049c16 = load i32, i32* %v2_8049c16, align 4
  %v0_8049c1d = load i32, i32* @esi, align 4
  %v2_8049c1d = add i32 %v0_8049c1d, %v3_8049c16
  %v12_8049c1d = icmp eq i32 %v2_8049c1d, 0
  store i1 %v12_8049c1d, i1* %zf.global-to-local, align 1
  %v1_8049c1f = add i32 %v2_8049c1d, 1
  store i32 %v1_8049c1f, i32* %eax.global-to-local, align 4
  %v2_8049c22 = add i32 %v1_8049c14, -12
  %v3_8049c22 = inttoptr i32 %v2_8049c22 to i32*
  store i32 %v1_8049c1f, i32* %v3_8049c22, align 4
  %v0_8049c23 = load i32, i32* @ebx, align 4
  %v2_8049c23 = add i32 %v1_8049c14, -16
  %v3_8049c23 = inttoptr i32 %v2_8049c23 to i32*
  store i32 %v0_8049c23, i32* %v3_8049c23, align 4
  %v3_8049c24 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049c24, i32* %eax.global-to-local, align 4
  %v0_8049c29 = load i32, i32* @esp, align 4
  %v1_8049c29 = add i32 %v0_8049c29, 16
  %v6_8049c29 = icmp eq i32 %v1_8049c29, 0
  store i1 %v6_8049c29, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804949f

dec_label_pc_8049c31:                             ; preds = %dec_label_pc_80497f0
  %v1_8049c31 = add i32 %v0_80497e2, 108
  %v2_8049c31 = inttoptr i32 %v1_8049c31 to i32*
  %v3_8049c31 = load i32, i32* %v2_8049c31, align 4
  store i32 %v3_8049c31, i32* %ecx.global-to-local, align 4
  %v1_8049c35 = add i32 %v3_8049c31, -1448
  %v2_8049c35 = inttoptr i32 %v1_8049c35 to i8*
  %v3_8049c35 = load i8, i8* %v2_8049c35, align 1
  %v4_8049c35 = icmp eq i8 %v3_8049c35, 0
  store i1 %v4_8049c35, i1* %zf.global-to-local, align 1
  br i1 %v4_8049c35, label %dec_label_pc_8048d91, label %dec_label_pc_8049c42

dec_label_pc_8049c42:                             ; preds = %dec_label_pc_8049c31
  store i8 1, i8* %v2_8049c35, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049c4e:                             ; preds = %dec_label_pc_8049a77
  %v2_8049c4e = add i32 %v0_8049aa9, 12
  %v3_8049c4e = inttoptr i32 %v2_8049c4e to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4e, align 4
  %v2_8049c4f = add i32 %v0_8049aa9, 8
  %v3_8049c4f = inttoptr i32 %v2_8049c4f to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4f, align 4
  %v1_8049c50 = add i32 %v0_8049aa9, 4
  %v2_8049c50 = inttoptr i32 %v1_8049c50 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_8054974.5 to i32), i32* %v2_8049c50, align 4
  %v0_8049c55 = load i32, i32* @ebx, align 4
  %v3_8049c55 = inttoptr i32 %v0_8049aa9 to i32*
  store i32 %v0_8049c55, i32* %v3_8049c55, align 4
  %v0_8049c56 = call i32 @function_8051fb0()
  store i32 %v0_8049c56, i32* %eax.global-to-local, align 4
  %v0_8049c5b = load i32, i32* @esp, align 4
  %v3_8049c5e = trunc i32 %v0_8049c56 to i8
  %v4_8049c5e = icmp eq i8 %v3_8049c5e, 0
  store i1 %v4_8049c5e, i1* %zf.global-to-local, align 1
  %v1_8049c60 = icmp eq i1 %v4_8049c5e, false
  br i1 %v1_8049c60, label %dec_label_pc_8049ab4, label %dec_label_pc_8049c66

dec_label_pc_8049c66:                             ; preds = %dec_label_pc_8049c4e
  %v1_8049c66 = add i32 %v0_8049c5b, 120
  %v2_8049c66 = inttoptr i32 %v1_8049c66 to i32*
  %v3_8049c66 = load i32, i32* %v2_8049c66, align 4
  %v4_8049c66 = load i32, i32* @esi, align 4
  %v5_8049c66 = sub i32 %v3_8049c66, %v4_8049c66
  %v11_8049c66 = xor i32 %v4_8049c66, %v3_8049c66
  %v12_8049c66 = xor i32 %v5_8049c66, %v3_8049c66
  %v13_8049c66 = and i32 %v12_8049c66, %v11_8049c66
  %v14_8049c66 = icmp slt i32 %v13_8049c66, 0
  %v15_8049c66 = icmp eq i32 %v5_8049c66, 0
  store i1 %v15_8049c66, i1* %zf.global-to-local, align 1
  %v16_8049c66 = icmp slt i32 %v5_8049c66, 0
  %v1_8049c6a = add i32 %v0_8049c5b, 108
  %v2_8049c6a = inttoptr i32 %v1_8049c6a to i32*
  %v3_8049c6a = load i32, i32* %v2_8049c6a, align 4
  store i32 %v3_8049c6a, i32* %ecx.global-to-local, align 4
  %v3_8049c6e = icmp eq i1 %v16_8049c66, %v14_8049c66
  %v4_8049c6e = icmp eq i1 %v15_8049c66, false
  %v5_8049c6e = and i1 %v4_8049c6e, %v3_8049c6e
  %v6_8049c6e = zext i1 %v5_8049c6e to i32
  %v8_8049c6e = and i32 %v0_8049c56, -256
  %v9_8049c6e = or i32 %v6_8049c6e, %v8_8049c6e
  %v2_8049c71 = mul i32 %v9_8049c6e, 8
  %v3_8049c71 = add nsw i32 %v9_8049c6e, 1
  %v4_8049c71 = add i32 %v3_8049c71, %v2_8049c71
  store i32 %v4_8049c71, i32* %eax.global-to-local, align 4
  %v1_8049c75 = trunc i32 %v4_8049c71 to i8
  %v3_8049c75 = add i32 %v3_8049c6a, -1448
  %v4_8049c75 = inttoptr i32 %v3_8049c75 to i8*
  store i8 %v1_8049c75, i8* %v4_8049c75, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049c80:                             ; preds = %dec_label_pc_8049b6c, %dec_label_pc_8049b5b
  %v0_8049c80 = phi i32 [ %v0_8049b52, %dec_label_pc_8049b5b ], [ %v0_8049b80184, %dec_label_pc_8049b6c ]
  %v1_8049c80 = inttoptr i32 %v0_8049c80 to i8*
  store i8 0, i8* %v1_8049c80, align 1
  br label %dec_label_pc_8049b86

dec_label_pc_8049c88:                             ; preds = %dec_label_pc_8049496
  %v1_8049c88 = add i32 %v0_804948a, 92
  %v2_8049c88 = inttoptr i32 %v1_8049c88 to i32*
  %v3_8049c88 = load i32, i32* %v2_8049c88, align 4
  store i32 %v3_8049c88, i32* %ebx.global-to-local, align 4
  %v0_8049c8c = load i32, i32* @ebp, align 4
  %v2_8049c8c = add i32 %v0_804948a, 12
  %v3_8049c8c = inttoptr i32 %v2_8049c8c to i32*
  store i32 %v0_8049c8c, i32* %v3_8049c8c, align 4
  %v0_8049c8d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049c8d = add i32 %v0_8049c8d, 533
  %v9_8049c8d = icmp eq i32 %v1_8049c8d, 0
  store i1 %v9_8049c8d, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c8d, i32* @ebx, align 4
  %v0_8049c93 = load i32, i32* @ebp, align 4
  %v2_8049c93 = add i32 %v0_804948a, 8
  %v3_8049c93 = inttoptr i32 %v2_8049c93 to i32*
  store i32 %v0_8049c93, i32* %v3_8049c93, align 4
  %v1_8049c94 = add i32 %v0_804948a, 4
  %v2_8049c94 = inttoptr i32 %v1_8049c94 to i32*
  store i32 255, i32* %v2_8049c94, align 4
  %v0_8049c99 = load i32, i32* @ebx, align 4
  %v3_8049c99 = inttoptr i32 %v0_804948a to i32*
  store i32 %v0_8049c99, i32* %v3_8049c99, align 4
  %v4_8049c9a = call i32 @function_8051cd0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049c9a, i32* %eax.global-to-local, align 4
  %v0_8049c9f = load i32, i32* @esp, align 4
  %v1_8049c9f = inttoptr i32 %v0_8049c9f to i32*
  %v2_8049c9f = load i32, i32* %v1_8049c9f, align 4
  store i32 %v2_8049c9f, i32* @edi, align 4
  %v0_8049ca0 = load i32, i32* @esi, align 4
  store i32 %v0_8049ca0, i32* %eax.global-to-local, align 4
  %v1_8049ca2 = add i32 %v0_8049c9f, 20916
  %v2_8049ca2 = inttoptr i32 %v1_8049ca2 to i32*
  %v3_8049ca2 = load i32, i32* %v2_8049ca2, align 4
  store i32 %v3_8049ca2, i32* %ecx.global-to-local, align 4
  %v2_8049ca9 = add i32 %v0_8049ca0, 1
  %v1_8049cab = add i32 %v2_8049ca9, %v3_8049ca2
  %v8_8049cab = icmp eq i32 %v1_8049cab, 0
  store i1 %v8_8049cab, i1* %zf.global-to-local, align 1
  store i32 %v1_8049cab, i32* %eax.global-to-local, align 4
  store i32 %v1_8049cab, i32* %v1_8049c9f, align 4
  %v2_8049cad = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049cad, i32* %eax.global-to-local, align 4
  %v0_8049cb2 = load i32, i32* @esp, align 4
  %v1_8049cb2 = add i32 %v0_8049cb2, 16
  %v1_8049cb5 = icmp eq i32 %v2_8049cad, 0
  store i1 %v1_8049cb5, i1* %zf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v2_8049cad, 1
  br i1 %tmp150, label %dec_label_pc_804949f, label %dec_label_pc_8049cbd

dec_label_pc_8049cbd:                             ; preds = %dec_label_pc_8049c88
  %v0_8049cc0 = load i32, i32* @esi, align 4
  store i32 %v0_8049cc0, i32* %eax.global-to-local, align 4
  %v1_8049cc2 = add i32 %v0_8049cb2, 20916
  %v2_8049cc2 = inttoptr i32 %v1_8049cc2 to i32*
  %v3_8049cc2 = load i32, i32* %v2_8049cc2, align 4
  store i32 %v3_8049cc2, i32* %edx.global-to-local, align 4
  %v2_8049cc9 = add i32 %v0_8049cc0, 1
  %v1_8049ccb = add i32 %v2_8049cc9, %v3_8049cc2
  %v8_8049ccb = icmp eq i32 %v1_8049ccb, 0
  store i1 %v8_8049ccb, i1* %zf.global-to-local, align 1
  store i32 %v1_8049ccb, i32* %eax.global-to-local, align 4
  %v3_8049ccc = inttoptr i32 %v0_8049cb2 to i32*
  store i32 %v1_8049ccb, i32* %v3_8049ccc, align 4
  %v2_8049ccd = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049ccd, i32* %eax.global-to-local, align 4
  %v0_8049cd2 = load i32, i32* @esp, align 4
  %v1_8049cd2 = add i32 %v0_8049cd2, 16
  %v1_8049cd5 = add i32 %v2_8049ccd, -255
  %v6_8049cd5 = sub i32 254, %v2_8049ccd
  %v7_8049cd5 = and i32 %v6_8049cd5, %v2_8049ccd
  %v8_8049cd5 = icmp slt i32 %v7_8049cd5, 0
  %v9_8049cd5 = icmp eq i32 %v1_8049cd5, 0
  store i1 %v9_8049cd5, i1* %zf.global-to-local, align 1
  %v10_8049cd5 = icmp slt i32 %v1_8049cd5, 0
  %v3_8049cda = icmp eq i1 %v10_8049cd5, %v8_8049cd5
  %v4_8049cda = icmp eq i1 %v9_8049cd5, false
  %v5_8049cda = and i1 %v4_8049cda, %v3_8049cda
  br i1 %v5_8049cda, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049ce5:                             ; preds = %dec_label_pc_8049ec7, %dec_label_pc_8049eb6
  %v0_8049ce5 = phi i32 [ %v0_8049eac, %dec_label_pc_8049eb6 ], [ %v0_8049edb208, %dec_label_pc_8049ec7 ]
  %v1_8049ce5 = inttoptr i32 %v0_8049ce5 to i8*
  store i8 0, i8* %v1_8049ce5, align 1
  br label %dec_label_pc_8049ce8

dec_label_pc_8049ce8:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge, %dec_label_pc_8049e86, %dec_label_pc_8049ce5
  %v0_8049ce8 = load i32, i32* @esp, align 4
  %v9_8049ce8 = icmp eq i32 %v0_8049ce8, 12
  store i1 %v9_8049ce8, i1* %zf.global-to-local, align 1
  %v0_8049ceb = load i32, i32* @ebx, align 4
  %v2_8049ceb = add i32 %v0_8049ce8, -16
  %v3_8049ceb = inttoptr i32 %v2_8049ceb to i32*
  store i32 %v0_8049ceb, i32* %v3_8049ceb, align 4
  %v2_8049cec = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049cec, i32* %eax.global-to-local, align 4
  %v0_8049cf1 = load i32, i32* @esp, align 4
  %v1_8049cf1 = add i32 %v0_8049cf1, 16
  %v1_8049cf4 = icmp eq i32 %v2_8049cec, 0
  store i1 %v1_8049cf4, i1* %zf.global-to-local, align 1
  %tmp151 = icmp slt i32 %v2_8049cec, 1
  br i1 %tmp151, label %dec_label_pc_8049d1e, label %dec_label_pc_8049cf8

dec_label_pc_8049cf8:                             ; preds = %dec_label_pc_8049ce8
  %v9_8049cf8 = icmp eq i32 %v0_8049cf1, -4
  store i1 %v9_8049cf8, i1* %zf.global-to-local, align 1
  %v0_8049cfb = load i32, i32* @ebx, align 4
  %v3_8049cfb = inttoptr i32 %v0_8049cf1 to i32*
  store i32 %v0_8049cfb, i32* %v3_8049cfb, align 4
  %v2_8049cfc = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049cfc, i32* %eax.global-to-local, align 4
  %v0_8049d01 = load i32, i32* @esp, align 4
  %v1_8049d01 = add i32 %v0_8049d01, 16
  %v1_8049d04 = add i32 %v2_8049cfc, -127
  %v6_8049d04 = sub i32 126, %v2_8049cfc
  %v7_8049d04 = and i32 %v6_8049d04, %v2_8049cfc
  %v8_8049d04 = icmp slt i32 %v7_8049d04, 0
  %v9_8049d04 = icmp eq i32 %v1_8049d04, 0
  store i1 %v9_8049d04, i1* %zf.global-to-local, align 1
  %v10_8049d04 = icmp slt i32 %v1_8049d04, 0
  %v3_8049d07 = icmp eq i1 %v10_8049d04, %v8_8049d04
  %v4_8049d07 = icmp eq i1 %v9_8049d04, false
  %v5_8049d07 = and i1 %v4_8049d07, %v3_8049d07
  br i1 %v5_8049d07, label %dec_label_pc_8049d1e, label %dec_label_pc_8049d09

dec_label_pc_8049d09:                             ; preds = %dec_label_pc_8049cf8
  %v2_8049d09 = add i32 %v0_8049d01, 12
  %v3_8049d09 = inttoptr i32 %v2_8049d09 to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d09, align 4
  %v2_8049d0a = add i32 %v0_8049d01, 8
  %v3_8049d0a = inttoptr i32 %v2_8049d0a to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d0a, align 4
  %v0_8049d0b = load i32, i32* @ebx, align 4
  %v2_8049d0b = add i32 %v0_8049d01, 4
  %v3_8049d0b = inttoptr i32 %v2_8049d0b to i32*
  store i32 %v0_8049d0b, i32* %v3_8049d0b, align 4
  %v1_8049d0c = add i32 %v0_8049d01, 92
  %v2_8049d0c = inttoptr i32 %v1_8049d0c to i32*
  %v3_8049d0c = load i32, i32* %v2_8049d0c, align 4
  %v1_8049d10 = add i32 %v3_8049d0c, 789
  %v9_8049d10 = icmp eq i32 %v1_8049d10, 0
  store i1 %v9_8049d10, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d10, i32* %eax.global-to-local, align 4
  %v3_8049d15 = inttoptr i32 %v0_8049d01 to i32*
  store i32 %v1_8049d10, i32* %v3_8049d15, align 4
  %v3_8049d16 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d16, i32* %eax.global-to-local, align 4
  %v0_8049d1b = load i32, i32* @esp, align 4
  %v1_8049d1b = add i32 %v0_8049d1b, 16
  %v6_8049d1b = icmp eq i32 %v1_8049d1b, 0
  store i1 %v6_8049d1b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049d1e

dec_label_pc_8049d1e:                             ; preds = %dec_label_pc_8049cf8, %dec_label_pc_8049ce8, %dec_label_pc_8049a40, %dec_label_pc_8049d09
  %v0_8049d1e = phi i32 [ %v1_8049d01, %dec_label_pc_8049cf8 ], [ %v1_8049cf1, %dec_label_pc_8049ce8 ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d1b, %dec_label_pc_8049d09 ]
  %v0_8049d21 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d21, i32* %eax.global-to-local, align 4
  %v1_8049d23 = add i32 %v0_8049d1e, 20900
  %v2_8049d23 = inttoptr i32 %v1_8049d23 to i32*
  %v3_8049d23 = load i32, i32* %v2_8049d23, align 4
  store i32 %v3_8049d23, i32* @ebp, align 4
  %v2_8049d2a = add i32 %v0_8049d21, 1
  %v1_8049d2c = add i32 %v2_8049d2a, %v3_8049d23
  %v8_8049d2c = icmp eq i32 %v1_8049d2c, 0
  store i1 %v8_8049d2c, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d2c, i32* %eax.global-to-local, align 4
  %v2_8049d2d = add i32 %v0_8049d1e, -16
  %v3_8049d2d = inttoptr i32 %v2_8049d2d to i32*
  store i32 %v1_8049d2c, i32* %v3_8049d2d, align 4
  %v2_8049d2e = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049d2e, i32* @eax, align 4
  %v0_8049d33 = load i32, i32* @esp, align 4
  %v1_8049d33 = add i32 %v0_8049d33, 16
  %v1_8049d36 = add i32 %v2_8049d2e, -255
  %v6_8049d36 = sub i32 254, %v2_8049d2e
  %v7_8049d36 = and i32 %v6_8049d36, %v2_8049d2e
  %v8_8049d36 = icmp slt i32 %v7_8049d36, 0
  %v9_8049d36 = icmp eq i32 %v1_8049d36, 0
  store i1 %v9_8049d36, i1* %zf.global-to-local, align 1
  %v10_8049d36 = icmp slt i32 %v1_8049d36, 0
  %v3_8049d3b = icmp eq i1 %v10_8049d36, %v8_8049d36
  %v4_8049d3b = icmp eq i1 %v9_8049d36, false
  %v5_8049d3b = and i1 %v4_8049d3b, %v3_8049d3b
  br i1 %v5_8049d3b, label %dec_label_pc_8049a49, label %dec_label_pc_8049d41

dec_label_pc_8049d41:                             ; preds = %dec_label_pc_8049d1e
  %v1_8049d41 = add i32 %v0_8049d33, 92
  %v2_8049d41 = inttoptr i32 %v1_8049d41 to i32*
  %v3_8049d41 = load i32, i32* %v2_8049d41, align 4
  store i32 %v3_8049d41, i32* %esi.global-to-local, align 4
  %v0_8049d45 = load i32, i32* @edi, align 4
  %v2_8049d45 = add i32 %v0_8049d33, 12
  %v3_8049d45 = inttoptr i32 %v2_8049d45 to i32*
  store i32 %v0_8049d45, i32* %v3_8049d45, align 4
  %v0_8049d46 = load i32, i32* %esi.global-to-local, align 4
  %v1_8049d46 = add i32 %v0_8049d46, 533
  %v9_8049d46 = icmp eq i32 %v1_8049d46, 0
  store i1 %v9_8049d46, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d46, i32* @esi, align 4
  %v0_8049d4c = load i32, i32* @edi, align 4
  %v2_8049d4c = add i32 %v0_8049d33, 8
  %v3_8049d4c = inttoptr i32 %v2_8049d4c to i32*
  store i32 %v0_8049d4c, i32* %v3_8049d4c, align 4
  %v1_8049d4d = add i32 %v0_8049d33, 4
  %v2_8049d4d = inttoptr i32 %v1_8049d4d to i32*
  store i32 255, i32* %v2_8049d4d, align 4
  %v0_8049d52 = load i32, i32* @esi, align 4
  %v3_8049d52 = inttoptr i32 %v0_8049d33 to i32*
  store i32 %v0_8049d52, i32* %v3_8049d52, align 4
  %v4_8049d53 = call i32 @function_8051cd0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049d53, i32* %eax.global-to-local, align 4
  %v0_8049d58 = load i32, i32* @esp, align 4
  %v1_8049d58 = inttoptr i32 %v0_8049d58 to i32*
  %v2_8049d58 = load i32, i32* %v1_8049d58, align 4
  store i32 %v2_8049d58, i32* %ecx.global-to-local, align 4
  %v0_8049d59 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d59, i32* %eax.global-to-local, align 4
  %v1_8049d5b = add i32 %v0_8049d58, 20916
  %v2_8049d5b = inttoptr i32 %v1_8049d5b to i32*
  %v3_8049d5b = load i32, i32* %v2_8049d5b, align 4
  store i32 %v3_8049d5b, i32* %edx.global-to-local, align 4
  %v2_8049d62 = add i32 %v0_8049d59, 1
  %v1_8049d64 = add i32 %v2_8049d62, %v3_8049d5b
  %v8_8049d64 = icmp eq i32 %v1_8049d64, 0
  store i1 %v8_8049d64, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d64, i32* %eax.global-to-local, align 4
  store i32 %v1_8049d64, i32* %v1_8049d58, align 4
  %v2_8049d66 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049d66, i32* %eax.global-to-local, align 4
  %v0_8049d6b = load i32, i32* @esp, align 4
  %v1_8049d6b = add i32 %v0_8049d6b, 16
  %v1_8049d6e = icmp eq i32 %v2_8049d66, 0
  store i1 %v1_8049d6e, i1* %zf.global-to-local, align 1
  %tmp152 = icmp slt i32 %v2_8049d66, 1
  br i1 %tmp152, label %dec_label_pc_8049a49, label %dec_label_pc_8049d76

dec_label_pc_8049d76:                             ; preds = %dec_label_pc_8049d41
  %v0_8049d76 = load i32, i32* @ebp, align 4
  %v2_8049d76 = add i32 %v0_8049d6b, 12
  %v3_8049d76 = inttoptr i32 %v2_8049d76 to i32*
  store i32 %v0_8049d76, i32* %v3_8049d76, align 4
  %v0_8049d77 = load i32, i32* @ebp, align 4
  %v2_8049d77 = add i32 %v0_8049d6b, 8
  %v3_8049d77 = inttoptr i32 %v2_8049d77 to i32*
  store i32 %v0_8049d77, i32* %v3_8049d77, align 4
  %v1_8049d78 = add i32 %v0_8049d6b, 20916
  %v2_8049d78 = inttoptr i32 %v1_8049d78 to i32*
  %v3_8049d78 = load i32, i32* %v2_8049d78, align 4
  store i32 %v3_8049d78, i32* @edi, align 4
  %v0_8049d7f = load i32, i32* @ebx, align 4
  %v2_8049d7f = add i32 %v0_8049d7f, %v3_8049d78
  %v12_8049d7f = icmp eq i32 %v2_8049d7f, 0
  store i1 %v12_8049d7f, i1* %zf.global-to-local, align 1
  store i32 %v2_8049d7f, i32* @ebx, align 4
  %v1_8049d81 = add i32 %v2_8049d7f, 1
  store i32 %v1_8049d81, i32* %eax.global-to-local, align 4
  %v2_8049d84 = add i32 %v0_8049d6b, 4
  %v3_8049d84 = inttoptr i32 %v2_8049d84 to i32*
  store i32 %v1_8049d81, i32* %v3_8049d84, align 4
  %v0_8049d85 = load i32, i32* @esi, align 4
  %v3_8049d85 = inttoptr i32 %v0_8049d6b to i32*
  store i32 %v0_8049d85, i32* %v3_8049d85, align 4
  %v3_8049d86 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d86, i32* %eax.global-to-local, align 4
  %v0_8049d8b = load i32, i32* @esp, align 4
  %v1_8049d8b = add i32 %v0_8049d8b, 16
  %v6_8049d8b = icmp eq i32 %v1_8049d8b, 0
  store i1 %v6_8049d8b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049a49

dec_label_pc_8049d93:                             ; preds = %dec_label_pc_8049b1d
  %v0_8049d93 = load i32, i32* @esp, align 4
  %v1_8049d93 = add i32 %v0_8049d93, 20900
  %v2_8049d93 = inttoptr i32 %v1_8049d93 to i32*
  store i32 8, i32* %v2_8049d93, align 4
  br label %dec_label_pc_8049b32

dec_label_pc_8049da3:                             ; preds = %dec_label_pc_804965f
  %v9_8049da3 = icmp eq i32 %v0_80496b5, 12
  store i1 %v9_8049da3, i1* %zf.global-to-local, align 1
  %v0_8049da6 = load i32, i32* @edi, align 4
  %v2_8049da6 = add i32 %v0_80496b5, -16
  %v3_8049da6 = inttoptr i32 %v2_8049da6 to i32*
  store i32 %v0_8049da6, i32* %v3_8049da6, align 4
  %v2_8049da7 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049da7, i32* %eax.global-to-local, align 4
  %v0_8049dac = load i32, i32* @esp, align 4
  %v1_8049dac = add i32 %v0_8049dac, 16
  %v1_8049daf = add i32 %v2_8049da7, -127
  %v6_8049daf = sub i32 126, %v2_8049da7
  %v7_8049daf = and i32 %v6_8049daf, %v2_8049da7
  %v8_8049daf = icmp slt i32 %v7_8049daf, 0
  %v9_8049daf = icmp eq i32 %v1_8049daf, 0
  store i1 %v9_8049daf, i1* %zf.global-to-local, align 1
  %v10_8049daf = icmp slt i32 %v1_8049daf, 0
  %v3_8049db2 = icmp eq i1 %v10_8049daf, %v8_8049daf
  %v4_8049db2 = icmp eq i1 %v9_8049daf, false
  %v5_8049db2 = and i1 %v4_8049db2, %v3_8049db2
  br i1 %v5_8049db2, label %dec_label_pc_80496c3, label %dec_label_pc_8049db8

dec_label_pc_8049db8:                             ; preds = %dec_label_pc_8049da3
  %v2_8049db8 = add i32 %v0_8049dac, 12
  %v3_8049db8 = inttoptr i32 %v2_8049db8 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db8, align 4
  %v2_8049db9 = add i32 %v0_8049dac, 8
  %v3_8049db9 = inttoptr i32 %v2_8049db9 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db9, align 4
  %v0_8049dba = load i32, i32* @edi, align 4
  %v2_8049dba = add i32 %v0_8049dac, 4
  %v3_8049dba = inttoptr i32 %v2_8049dba to i32*
  store i32 %v0_8049dba, i32* %v3_8049dba, align 4
  %v1_8049dbb = add i32 %v0_8049dac, 108
  %v2_8049dbb = inttoptr i32 %v1_8049dbb to i32*
  %v3_8049dbb = load i32, i32* %v2_8049dbb, align 4
  store i32 %v3_8049dbb, i32* %edx.global-to-local, align 4
  %v1_8049dbf = add i32 %v3_8049dbb, 16
  %v2_8049dbf = inttoptr i32 %v1_8049dbf to i32*
  %v3_8049dbf = load i32, i32* %v2_8049dbf, align 4
  %v2_8049dc2 = mul i32 %v3_8049dbf, 128
  %v3_8049dc2 = icmp eq i32 %v2_8049dc2, 0
  store i1 %v3_8049dc2, i1* %zf.global-to-local, align 1
  %v0_8049dc5 = load i32, i32* @ebp, align 4
  %v2_8049dc5 = add i32 %v0_8049dc5, %v2_8049dc2
  store i32 %v2_8049dc5, i32* %eax.global-to-local, align 4
  %v3_8049dc9 = inttoptr i32 %v0_8049dac to i32*
  store i32 %v2_8049dc5, i32* %v3_8049dc9, align 4
  %v3_8049dca = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049dca, i32* %eax.global-to-local, align 4
  %v0_8049dcf = load i32, i32* @esp, align 4
  %v1_8049dcf = add i32 %v0_8049dcf, 108
  %v2_8049dcf = inttoptr i32 %v1_8049dcf to i32*
  %v3_8049dcf = load i32, i32* %v2_8049dcf, align 4
  store i32 %v3_8049dcf, i32* %ecx.global-to-local, align 4
  %v1_8049dd3 = add i32 %v3_8049dcf, 16
  %v2_8049dd3 = inttoptr i32 %v1_8049dd3 to i32*
  %v3_8049dd3 = load i32, i32* %v2_8049dd3, align 4
  %v2_8049dd6 = mul i32 %v3_8049dd3, 128
  %v3_8049dd6 = icmp eq i32 %v2_8049dd6, 0
  store i1 %v3_8049dd6, i1* %zf.global-to-local, align 1
  %v0_8049dd9 = load i32, i32* @ebp, align 4
  %v2_8049dd9 = add i32 %v0_8049dd9, %v2_8049dd6
  store i32 %v2_8049dd9, i32* %ebx.global-to-local, align 4
  %v2_8049ddd = inttoptr i32 %v0_8049dcf to i32*
  store i32 %v2_8049dd9, i32* %v2_8049ddd, align 4
  %v2_8049de0 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049de0, i32* %eax.global-to-local, align 4
  %v0_8049de5 = load i32, i32* @esp, align 4
  %v1_8049de5 = inttoptr i32 %v0_8049de5 to i32*
  %v2_8049de5 = load i32, i32* %v1_8049de5, align 4
  store i32 %v2_8049de5, i32* %ecx.global-to-local, align 4
  %v3_8049de5 = add i32 %v0_8049de5, 4
  %v0_8049de6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049de6 = add i32 %v0_8049de6, %v2_8049de0
  %v12_8049de6 = icmp eq i32 %v2_8049de6, 0
  store i1 %v12_8049de6, i1* %zf.global-to-local, align 1
  store i32 %v2_8049de6, i32* @ebx, align 4
  %v1_8049de8 = inttoptr i32 %v3_8049de5 to i32*
  store i32 ptrtoint (i32* @global_var_8055064.19 to i32), i32* %v1_8049de8, align 4
  %v0_8049dee = load i32, i32* @ebx, align 4
  store i32 %v0_8049dee, i32* %v1_8049de5, align 4
  %v3_8049def = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049def, i32* %eax.global-to-local, align 4
  %v0_8049df4 = load i32, i32* @esp, align 4
  %v1_8049df4 = add i32 %v0_8049df4, 56
  %v2_8049df4 = inttoptr i32 %v1_8049df4 to i32*
  %v3_8049df4 = load i32, i32* %v2_8049df4, align 4
  store i32 %v3_8049df4, i32* %ebx.global-to-local, align 4
  %v1_8049df8 = add i32 %v0_8049df4, -4
  %v2_8049df8 = inttoptr i32 %v1_8049df8 to i32*
  store i32 1, i32* %v2_8049df8, align 4
  %v1_8049dfa = add i32 %v0_8049df4, -8
  %v2_8049dfa = inttoptr i32 %v1_8049dfa to i32*
  store i32 ptrtoint (i32* @global_var_805499a.16 to i32), i32* %v2_8049dfa, align 4
  %v1_8049dff = add i32 %v0_8049df4, 108
  %v2_8049dff = inttoptr i32 %v1_8049dff to i32*
  %v3_8049dff = load i32, i32* %v2_8049dff, align 4
  store i32 %v3_8049dff, i32* %edx.global-to-local, align 4
  %v0_8049e03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049e03 = add i32 %v0_8049e03, 3
  store i32 %v1_8049e03, i32* @ebx, align 4
  %v0_8049e06 = load i32, i32* @esi, align 4
  %v2_8049e06 = add i32 %v0_8049e06, %v1_8049e03
  store i32 %v2_8049e06, i32* @esi, align 4
  %v1_8049e08 = add i32 %v3_8049dff, 660
  %v2_8049e08 = inttoptr i32 %v1_8049e08 to i32*
  %v3_8049e08 = load i32, i32* %v2_8049e08, align 4
  %v2_8049e0e = sub i32 %v3_8049e08, %v1_8049e03
  %v12_8049e0e = icmp eq i32 %v2_8049e0e, 0
  store i1 %v12_8049e0e, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e0e, i32* %eax.global-to-local, align 4
  %v2_8049e10 = add i32 %v0_8049df4, -12
  %v3_8049e10 = inttoptr i32 %v2_8049e10 to i32*
  store i32 %v2_8049e0e, i32* %v3_8049e10, align 4
  %v0_8049e11 = load i32, i32* @esi, align 4
  %v2_8049e11 = add i32 %v0_8049df4, -16
  %v3_8049e11 = inttoptr i32 %v2_8049e11 to i32*
  store i32 %v0_8049e11, i32* %v3_8049e11, align 4
  %v0_8049e12 = call i32 @function_8051cf0()
  store i32 %v0_8049e12, i32* %eax.global-to-local, align 4
  %v0_8049e17 = load i32, i32* @esp, align 4
  %v1_8049e17 = add i32 %v0_8049e17, 108
  %v2_8049e17 = inttoptr i32 %v1_8049e17 to i32*
  %v3_8049e17 = load i32, i32* %v2_8049e17, align 4
  store i32 %v3_8049e17, i32* %edx.global-to-local, align 4
  %v0_8049e1b = load i32, i32* @ebx, align 4
  %v2_8049e1b = add i32 %v0_8049e1b, %v3_8049e17
  store i32 %v2_8049e1b, i32* %ebx.global-to-local, align 4
  %v2_8049e1d = add i32 %v0_8049e12, 2115
  %v3_8049e1d = add i32 %v2_8049e1d, %v2_8049e1b
  %v4_8049e1d = inttoptr i32 %v3_8049e1d to i8*
  store i8 0, i8* %v4_8049e1d, align 1
  %v0_8049e25 = load i32, i32* @esp, align 4
  %v1_8049e25 = add i32 %v0_8049e25, 124
  %v2_8049e25 = inttoptr i32 %v1_8049e25 to i32*
  %v3_8049e25 = load i32, i32* %v2_8049e25, align 4
  store i32 %v3_8049e25, i32* %ecx.global-to-local, align 4
  %v1_8049e2c = add i32 %v3_8049e25, 16
  %v2_8049e2c = inttoptr i32 %v1_8049e2c to i32*
  %v3_8049e2c = load i32, i32* %v2_8049e2c, align 4
  %v2_8049e2f = mul i32 %v3_8049e2c, 128
  %v3_8049e2f = icmp eq i32 %v2_8049e2f, 0
  store i1 %v3_8049e2f, i1* %zf.global-to-local, align 1
  %v0_8049e32 = load i32, i32* @ebp, align 4
  %v2_8049e32 = add i32 %v0_8049e32, %v2_8049e2f
  store i32 %v2_8049e32, i32* %ebx.global-to-local, align 4
  %v2_8049e36 = add i32 %v0_8049e25, 16
  %v3_8049e36 = inttoptr i32 %v2_8049e36 to i32*
  store i32 %v2_8049e32, i32* %v3_8049e36, align 4
  %v2_8049e37 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049e37, i32* %eax.global-to-local, align 4
  %v0_8049e3c = load i32, i32* @esp, align 4
  %v1_8049e3c = inttoptr i32 %v0_8049e3c to i32*
  %v2_8049e3c = load i32, i32* %v1_8049e3c, align 4
  store i32 %v2_8049e3c, i32* %ecx.global-to-local, align 4
  %v3_8049e3c = add i32 %v0_8049e3c, 4
  %v0_8049e3d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049e3d = add i32 %v0_8049e3d, %v2_8049e37
  %v12_8049e3d = icmp eq i32 %v2_8049e3d, 0
  store i1 %v12_8049e3d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e3d, i32* @ebx, align 4
  %v1_8049e3f = inttoptr i32 %v3_8049e3c to i32*
  %v2_8049e3f = load i32, i32* %v1_8049e3f, align 4
  store i32 %v2_8049e3f, i32* @edi, align 4
  %v0_8049e40 = load i32, i32* @esi, align 4
  store i32 %v0_8049e40, i32* %v1_8049e3f, align 4
  %v0_8049e41 = load i32, i32* @ebx, align 4
  store i32 %v0_8049e41, i32* %v1_8049e3c, align 4
  %v3_8049e42 = call i32 @function_8051c60(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049e42, i32* %eax.global-to-local, align 4
  %v0_8049e47 = load i32, i32* @esp, align 4
  %v1_8049e47 = add i32 %v0_8049e47, 108
  %v2_8049e47 = inttoptr i32 %v1_8049e47 to i32*
  %v3_8049e47 = load i32, i32* %v2_8049e47, align 4
  store i32 %v3_8049e47, i32* %eax.global-to-local, align 4
  %v1_8049e4b = add i32 %v3_8049e47, 16
  %v2_8049e4b = inttoptr i32 %v1_8049e4b to i32*
  %v3_8049e4b = load i32, i32* %v2_8049e4b, align 4
  %v1_8049e51 = add i32 %v3_8049e4b, 1
  %v8_8049e51 = icmp eq i32 %v1_8049e51, 0
  store i1 %v8_8049e51, i1* %zf.global-to-local, align 1
  store i32 %v1_8049e51, i32* %edx.global-to-local, align 4
  store i32 %v1_8049e51, i32* %v2_8049e4b, align 4
  %v0_80496c3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80496c3

dec_label_pc_8049e5a:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %eax.global-to-local, align 4
  %v1_8049e5e = add i32 %v3_8049e5a, -1448
  %v2_8049e5e = inttoptr i32 %v1_8049e5e to i8*
  store i8 1, i8* %v2_8049e5e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049e6a:                             ; preds = %dec_label_pc_8049a11
  %v1_8049e6a = add i32 %v0_8049a34, 20916
  %v2_8049e6a = inttoptr i32 %v1_8049e6a to i32*
  store i32 7, i32* %v2_8049e6a, align 4
  %v0_8049e75 = load i32, i32* @ebx, align 4
  %v1_8049e75 = add i32 %v0_8049e75, 4
  %v2_8049e75 = inttoptr i32 %v1_8049e75 to i8*
  %v3_8049e75 = load i8, i8* %v2_8049e75, align 1
  %v12_8049e75 = icmp eq i8 %v3_8049e75, 115
  store i1 %v12_8049e75, i1* %zf.global-to-local, align 1
  %v1_8049e79 = icmp eq i1 %v12_8049e75, false
  br i1 %v1_8049e79, label %dec_label_pc_8049e86, label %dec_label_pc_8049e7b

dec_label_pc_8049e7b:                             ; preds = %dec_label_pc_8049e6a
  %v0_8049e7b = load i32, i32* @esp, align 4
  %v1_8049e7b = add i32 %v0_8049e7b, 20900
  %v2_8049e7b = inttoptr i32 %v1_8049e7b to i32*
  store i32 8, i32* %v2_8049e7b, align 4
  br label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e6a, %dec_label_pc_8049e7b
  %v0_8049e86 = load i32, i32* @esp, align 4
  %v1_8049e86 = add i32 %v0_8049e86, 20900
  %v2_8049e86 = inttoptr i32 %v1_8049e86 to i32*
  %v3_8049e86 = load i32, i32* %v2_8049e86, align 4
  store i32 %v3_8049e86, i32* %edx.global-to-local, align 4
  %v2_8049e8d = add i32 %v0_8049e86, -4
  %v3_8049e8d = inttoptr i32 %v2_8049e8d to i32*
  store i32 4, i32* %v3_8049e8d, align 4
  %v0_8049e8e = load i32, i32* @edi, align 4
  %v1_8049e8e = add i32 %v0_8049e8e, 1
  %v1_8049e91 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e91 = sub i32 %v1_8049e8e, %v1_8049e91
  %v12_8049e91 = icmp eq i32 %v2_8049e91, 0
  store i1 %v12_8049e91, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e91, i32* %eax.global-to-local, align 4
  %v0_8049e93 = load i32, i32* @ebx, align 4
  %v2_8049e93 = add i32 %v0_8049e93, %v1_8049e91
  store i32 %v2_8049e93, i32* %edx.global-to-local, align 4
  %v2_8049e96 = add i32 %v0_8049e86, -8
  %v3_8049e96 = inttoptr i32 %v2_8049e96 to i32*
  store i32 %v2_8049e91, i32* %v3_8049e96, align 4
  %v0_8049e97 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e97 = add i32 %v0_8049e86, -12
  %v3_8049e97 = inttoptr i32 %v2_8049e97 to i32*
  store i32 %v0_8049e97, i32* %v3_8049e97, align 4
  %v0_8049e98 = load i32, i32* @ebx, align 4
  %v2_8049e98 = add i32 %v0_8049e86, -16
  %v3_8049e98 = inttoptr i32 %v2_8049e98 to i32*
  store i32 %v0_8049e98, i32* %v3_8049e98, align 4
  %v4_8049e99 = call i32 @function_80526e7(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049e99, i32* %eax.global-to-local, align 4
  %v0_8049e9e = load i32, i32* @esp, align 4
  %v1_8049e9e = add i32 %v0_8049e9e, 20916
  %v2_8049e9e = inttoptr i32 %v1_8049e9e to i32*
  store i32 0, i32* %v2_8049e9e, align 4
  %v0_8049ea9 = load i32, i32* @esp, align 4
  %v6_8049ea9 = icmp eq i32 %v0_8049ea9, -16
  store i1 %v6_8049ea9, i1* %zf.global-to-local, align 1
  %v0_8049eac = load i32, i32* @ebx, align 4
  %v1_8049eac = inttoptr i32 %v0_8049eac to i8*
  %v2_8049eac = load i8, i8* %v1_8049eac, align 1
  %v3_8049eac = zext i8 %v2_8049eac to i32
  %v5_8049eac = and i32 %v4_8049e99, -256
  %v6_8049eac = or i32 %v3_8049eac, %v5_8049eac
  store i32 %v6_8049eac, i32* %eax.global-to-local, align 4
  %v4_8049eae = icmp eq i8 %v2_8049eac, 0
  store i1 %v4_8049eae, i1* %zf.global-to-local, align 1
  br i1 %v4_8049eae, label %dec_label_pc_8049ce8, label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049e86
  store i32 %v0_8049eac, i32* %ecx.global-to-local, align 4
  %v10_8049eb8 = icmp eq i8 %v2_8049eac, 47
  store i1 %v10_8049eb8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049eb8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec0

dec_label_pc_8049ec0:                             ; preds = %dec_label_pc_8049eb6
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049ed1196 = add i32 %v0_8049eac, 1
  store i32 %v2_8049ed1196, i32* %ecx.global-to-local, align 4
  %v2_8049ed4197 = add i32 %v0_8049ea9, 20916
  %v3_8049ed4198 = inttoptr i32 %v2_8049ed4197 to i32*
  store i32 1, i32* %v3_8049ed4198, align 4
  %v0_8049edb199 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb200 = inttoptr i32 %v0_8049edb199 to i8*
  %v2_8049edb201 = load i8, i8* %v1_8049edb200, align 1
  %v3_8049edb202 = zext i8 %v2_8049edb201 to i32
  %v4_8049edb203 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb204 = and i32 %v4_8049edb203, -256
  %v6_8049edb205 = or i32 %v5_8049edb204, %v3_8049edb202
  store i32 %v6_8049edb205, i32* %edx.global-to-local, align 4
  %v4_8049edd206 = icmp eq i8 %v2_8049edb201, 0
  store i1 %v4_8049edd206, i1* %zf.global-to-local, align 1
  %v1_8049edf207 = icmp eq i1 %v4_8049edd206, false
  br i1 %v1_8049edf207, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ec7:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge
  %v2_8049edb209 = phi i8 [ %v2_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v2_8049edb201, %dec_label_pc_8049ec0 ]
  %v0_8049edb208 = phi i32 [ %v0_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v0_8049edb199, %dec_label_pc_8049ec0 ]
  %v0_8049ec7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049ec7 = add i32 %v0_8049ec7, 1
  store i32 %v1_8049ec7, i32* %eax.global-to-local, align 4
  %v10_8049ec8 = icmp eq i8 %v2_8049edb209, 47
  store i1 %v10_8049ec8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049ec8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge

dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge: ; preds = %dec_label_pc_8049ec7
  %v0_8049ed1.pre = load i32, i32* @ebx, align 4
  %v1_8049ed4.pre = load i32, i32* @esp, align 4
  %v2_8049ed1 = add i32 %v0_8049ed1.pre, %v1_8049ec7
  store i32 %v2_8049ed1, i32* %ecx.global-to-local, align 4
  %v2_8049ed4 = add i32 %v1_8049ed4.pre, 20900
  %v3_8049ed4 = inttoptr i32 %v2_8049ed4 to i32*
  store i32 %v1_8049ec7, i32* %v3_8049ed4, align 4
  %v0_8049edb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb = inttoptr i32 %v0_8049edb to i8*
  %v2_8049edb = load i8, i8* %v1_8049edb, align 1
  %v3_8049edb = zext i8 %v2_8049edb to i32
  %v4_8049edb = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb = and i32 %v4_8049edb, -256
  %v6_8049edb = or i32 %v5_8049edb, %v3_8049edb
  store i32 %v6_8049edb, i32* %edx.global-to-local, align 4
  %v4_8049edd = icmp eq i8 %v2_8049edb, 0
  store i1 %v4_8049edd, i1* %zf.global-to-local, align 1
  %v1_8049edf = icmp eq i1 %v4_8049edd, false
  br i1 %v1_8049edf, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ee6:                             ; preds = %dec_label_pc_8049930
  %v0_8049ee6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049ee6 = add i32 %v0_8049ee6, 2
  store i32 %v1_8049ee6, i32* %eax.global-to-local, align 4
  %v1_8049ee9 = load i32, i32* @esp, align 4
  %v2_8049ee9 = add i32 %v1_8049ee9, 20900
  %v3_8049ee9 = inttoptr i32 %v2_8049ee9 to i32*
  store i32 %v1_8049ee6, i32* %v3_8049ee9, align 4
  %v0_8049951.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804994e

dec_label_pc_8049ef5:                             ; preds = %dec_label_pc_80499c3
  %v1_8049ef5 = add i32 %v3_80499c3, 1
  store i32 %v1_8049ef5, i32* %ebx.global-to-local, align 4
  store i32 %v1_8049ef5, i32* %v2_80499c3, align 4
  %v0_8049eff = load i32, i32* @esp, align 4
  %v9_8049eff = icmp eq i32 %v0_8049eff, 12
  store i1 %v9_8049eff, i1* %zf.global-to-local, align 1
  %v0_8049f02 = load i32, i32* @esi, align 4
  %v1_8049f02 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049f02 = add i32 %v1_8049f02, %v0_8049f02
  store i32 %v2_8049f02, i32* @ebx, align 4
  %v2_8049f05 = add i32 %v0_8049eff, -16
  %v3_8049f05 = inttoptr i32 %v2_8049f05 to i32*
  store i32 %v2_8049f02, i32* %v3_8049f05, align 4
  %v2_8049f06 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049f06, i32* %eax.global-to-local, align 4
  %v0_8049f0b = load i32, i32* @esp, align 4
  %v1_8049f0b = add i32 %v0_8049f0b, 16
  %v6_8049f0b = icmp eq i32 %v1_8049f0b, 0
  store i1 %v6_8049f0b, i1* %zf.global-to-local, align 1
  %v0_8049f0e = load i32, i32* @ebx, align 4
  %v2_8049f0e = add i32 %v2_8049f06, -1
  %v3_8049f0e = add i32 %v2_8049f0e, %v0_8049f0e
  %v4_8049f0e = inttoptr i32 %v3_8049f0e to i8*
  %v5_8049f0e = load i8, i8* %v4_8049f0e, align 1
  %v14_8049f0e = icmp eq i8 %v5_8049f0e, 34
  store i1 %v14_8049f0e, i1* %zf.global-to-local, align 1
  %v1_8049f13 = icmp eq i1 %v14_8049f0e, false
  br i1 %v1_8049f13, label %dec_label_pc_80499d4, label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049ef5
  %v1_8049f19 = add i32 %v0_8049f0b, 20916
  %v2_8049f19 = inttoptr i32 %v1_8049f19 to i32*
  %v3_8049f19 = load i32, i32* %v2_8049f19, align 4
  store i32 %v3_8049f19, i32* %eax.global-to-local, align 4
  %v0_8049f20 = load i32, i32* @esi, align 4
  %v2_8049f25 = add i32 %v0_8049f20, %v3_8049f19
  %v12_8049f25 = icmp eq i32 %v2_8049f25, 0
  store i1 %v12_8049f25, i1* %zf.global-to-local, align 1
  store i32 %v2_8049f25, i32* @ebx, align 4
  %v3_8049f27 = inttoptr i32 %v0_8049f0b to i32*
  store i32 %v2_8049f25, i32* %v3_8049f27, align 4
  %v2_8049f28 = call i32 @function_8051c40(i8* %v1_8048752)
  store i32 %v2_8049f28, i32* %eax.global-to-local, align 4
  %v0_8049f2d = load i32, i32* @esp, align 4
  %v6_8049f2d = icmp eq i32 %v0_8049f2d, -16
  store i1 %v6_8049f2d, i1* %zf.global-to-local, align 1
  %v0_8049f30 = load i32, i32* @ebx, align 4
  %v2_8049f30 = add i32 %v2_8049f28, -1
  %v3_8049f30 = add i32 %v2_8049f30, %v0_8049f30
  %v4_8049f30 = inttoptr i32 %v3_8049f30 to i8*
  store i8 0, i8* %v4_8049f30, align 1
  %v0_80499d4.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80499d4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80499d4

dec_label_pc_8049f3a:                             ; preds = %dec_label_pc_804848a
  %v9_8049f3a = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049f3a, i1* %zf.global-to-local, align 1
  %v1_8049f3d = add i32 %v0_80484a0, -16
  %v2_8049f3d = inttoptr i32 %v1_8049f3d to i32*
  store i32 50, i32* %v2_8049f3d, align 4
  %v2_8049f3f = call i32 @function_8051180(i8 %v1_8049f3f)
  store i32 %v2_8049f3f, i32* %eax.global-to-local, align 4
  %v0_8049f44 = load i32, i32* @esp, align 4
  %v1_8049f44 = inttoptr i32 %v0_8049f44 to i32*
  %v2_8049f44 = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f44, i32* @ebx, align 4
  %v3_8049f44 = add i32 %v0_8049f44, 4
  %v1_8049f45 = inttoptr i32 %v3_8049f44 to i32*
  store i32 0, i32* %v1_8049f45, align 4
  store i32 50, i32* %v1_8049f44, align 4
  %v3_8049f4a = call i32 @function_80510d0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049f4a, i32* %eax.global-to-local, align 4
  %v0_8049f4f = load i32, i32* @esp, align 4
  %v1_8049f4f = inttoptr i32 %v0_8049f4f to i32*
  %v2_8049f4f = load i32, i32* %v1_8049f4f, align 4
  store i32 %v2_8049f4f, i32* %edx.global-to-local, align 4
  %v3_8049f4f = add i32 %v0_8049f4f, 4
  %v1_8049f50 = inttoptr i32 %v3_8049f4f to i32*
  %v2_8049f50 = load i32, i32* %v1_8049f50, align 4
  store i32 %v2_8049f50, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049f4a, i32* %v1_8049f50, align 4
  %v0_8049f52 = load i32, i32* @esi, align 4
  %v1_8049f52 = add i32 %v0_8049f52, 20
  store i32 %v1_8049f52, i32* %eax.global-to-local, align 4
  store i32 %v1_8049f52, i32* %v1_8049f4f, align 4
  %v3_8049f56 = call i32 @function_8051c60(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f56, i32* %eax.global-to-local, align 4
  %v0_8049f5b = load i32, i32* @esp, align 4
  %v1_8049f5b = inttoptr i32 %v0_8049f5b to i32*
  store i32 50, i32* %v1_8049f5b, align 4
  %v2_8049f62 = call i32 @function_8051100(i8 %v1_8049f3f)
  store i32 %v2_8049f62, i32* %eax.global-to-local, align 4
  %v0_8049f67 = load i32, i32* @esp, align 4
  %v1_8049f67 = add i32 %v0_8049f67, 16
  %v6_8049f67 = icmp eq i32 %v1_8049f67, 0
  store i1 %v6_8049f67, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049f6a:                             ; preds = %dec_label_pc_804848a, %dec_label_pc_804a062, %dec_label_pc_8049ff8, %dec_label_pc_8049fc3, %dec_label_pc_8049f3a
  %v1_8049f6a = phi i32 [ %v0_80484a0, %dec_label_pc_804848a ], [ %v1_804a08f, %dec_label_pc_804a062 ], [ %v1_804a025, %dec_label_pc_8049ff8 ], [ %v1_8049ff0, %dec_label_pc_8049fc3 ], [ %v1_8049f67, %dec_label_pc_8049f3a ]
  %v0_8049f6a = phi i32 [ %v2_80484ac, %dec_label_pc_804848a ], [ %v2_804a08a, %dec_label_pc_804a062 ], [ %v2_804a020, %dec_label_pc_8049ff8 ], [ %v2_8049feb, %dec_label_pc_8049fc3 ], [ %v2_8049f62, %dec_label_pc_8049f3a ]
  %v2_8049f6a = add i32 %v1_8049f6a, -4
  %v3_8049f6a = inttoptr i32 %v2_8049f6a to i32*
  store i32 %v0_8049f6a, i32* %v3_8049f6a, align 4
  %v0_8049f6b = load i32, i32* %eax.global-to-local, align 4
  %v2_8049f6b = add i32 %v1_8049f6a, -8
  %v3_8049f6b = inttoptr i32 %v2_8049f6b to i32*
  store i32 %v0_8049f6b, i32* %v3_8049f6b, align 4
  %v1_8049f6c = add i32 %v1_8049f6a, 64
  %v2_8049f6c = inttoptr i32 %v1_8049f6c to i32*
  %v3_8049f6c = load i32, i32* %v2_8049f6c, align 4
  store i32 %v3_8049f6c, i32* %eax.global-to-local, align 4
  %v0_8049f70 = load i32, i32* @ebp, align 4
  %v1_8049f70 = add i32 %v0_8049f70, 1
  store i32 %v1_8049f70, i32* @ebp, align 4
  %v2_8049f71 = add i32 %v1_8049f6a, -12
  %v3_8049f71 = inttoptr i32 %v2_8049f71 to i32*
  store i32 %v3_8049f6c, i32* %v3_8049f71, align 4
  %v0_8049f72 = load i32, i32* @esi, align 4
  %v1_8049f72 = add i32 %v0_8049f72, 3140
  %v9_8049f72 = icmp eq i32 %v1_8049f72, 0
  store i1 %v9_8049f72, i1* %zf.global-to-local, align 1
  store i32 %v1_8049f72, i32* @esi, align 4
  %v1_8049f78 = add i32 %v1_8049f6a, 36
  %v2_8049f78 = inttoptr i32 %v1_8049f78 to i32*
  %v3_8049f78 = load i32, i32* %v2_8049f78, align 4
  store i32 %v3_8049f78, i32* @edi, align 4
  %v2_8049f7c = add i32 %v1_8049f6a, -16
  %v3_8049f7c = inttoptr i32 %v2_8049f7c to i32*
  store i32 %v3_8049f78, i32* %v3_8049f7c, align 4
  %v3_8049f7d = call i32 @function_8051c60(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f7d, i32* %eax.global-to-local, align 4
  %v0_8049f82 = load i32, i32* @esp, align 4
  %v1_8049f85 = add i32 %v0_8049f82, 128
  %v2_8049f85 = inttoptr i32 %v1_8049f85 to i32*
  %v3_8049f85 = load i32, i32* %v2_8049f85, align 4
  %v4_8049f85 = load i32, i32* @ebp, align 4
  %v15_8049f85 = icmp eq i32 %v3_8049f85, %v4_8049f85
  store i1 %v15_8049f85, i1* %zf.global-to-local, align 1
  %v1_8049f89 = icmp eq i1 %v15_8049f85, false
  br i1 %v1_8049f89, label %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, label %dec_label_pc_8049f8f

dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge: ; preds = %dec_label_pc_8049f6a
  %v0_80483a9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80483a7

dec_label_pc_8049f8f:                             ; preds = %dec_label_pc_8049f6a
  %v1_8049f8f = add i32 %v0_8049f82, 20756
  store i32 %v1_8049f8f, i32* %edx.global-to-local, align 4
  %v1_8049f96 = add i32 %v0_8049f82, 64
  %v2_8049f96 = inttoptr i32 %v1_8049f96 to i32*
  %v3_8049f96 = load i32, i32* %v2_8049f96, align 4
  store i32 %v3_8049f96, i32* %eax.global-to-local, align 4
  %v2_8049f9a = add i32 %v0_8049f82, 40
  %v3_8049f9a = inttoptr i32 %v2_8049f9a to i32*
  store i32 %v1_8049f8f, i32* %v3_8049f9a, align 4
  %v0_8049f9e = load i32, i32* @esp, align 4
  %v1_8049f9e = add i32 %v0_8049f9e, 48
  %v2_8049f9e = inttoptr i32 %v1_8049f9e to i32*
  %v3_8049f9e = load i32, i32* %v2_8049f9e, align 4
  %v1_8049fa2 = add i32 %v0_8049f9e, 20612
  store i32 %v1_8049fa2, i32* %ecx.global-to-local, align 4
  %v0_8049fa9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fa9 = add i32 %v0_8049fa9, 16
  store i32 %v1_8049fa9, i32* %eax.global-to-local, align 4
  %v1_8049fac = add i32 %v3_8049f9e, 1452
  %v9_8049fac = icmp eq i32 %v1_8049fac, 0
  store i1 %v9_8049fac, i1* %zf.global-to-local, align 1
  store i32 %v1_8049fac, i32* %edx.global-to-local, align 4
  %v2_8049fb2 = add i32 %v0_8049f9e, 20
  %v3_8049fb2 = inttoptr i32 %v2_8049fb2 to i32*
  store i32 %v1_8049fa2, i32* %v3_8049fb2, align 4
  %v0_8049fb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fb6 = load i32, i32* @esp, align 4
  %v2_8049fb6 = add i32 %v1_8049fb6, 28
  %v3_8049fb6 = inttoptr i32 %v2_8049fb6 to i32*
  store i32 %v0_8049fb6, i32* %v3_8049fb6, align 4
  %v0_8049fba = load i32, i32* %edx.global-to-local, align 4
  %v1_8049fba = load i32, i32* @esp, align 4
  %v2_8049fba = add i32 %v1_8049fba, 32
  %v3_8049fba = inttoptr i32 %v2_8049fba to i32*
  store i32 %v0_8049fba, i32* %v3_8049fba, align 4
  %v0_80484e5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_8049fc3:                             ; preds = %dec_label_pc_804848a
  %v9_8049fc3 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049fc3, i1* %zf.global-to-local, align 1
  %v1_8049fc6 = add i32 %v0_80484a0, -16
  %v2_8049fc6 = inttoptr i32 %v1_8049fc6 to i32*
  store i32 51, i32* %v2_8049fc6, align 4
  %v2_8049fc8 = call i32 @function_8051180(i8 %v1_8049f3f)
  store i32 %v2_8049fc8, i32* %eax.global-to-local, align 4
  %v0_8049fcd = load i32, i32* @esp, align 4
  %v1_8049fcd = inttoptr i32 %v0_8049fcd to i32*
  %v2_8049fcd = load i32, i32* %v1_8049fcd, align 4
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v3_8049fcd = add i32 %v0_8049fcd, 4
  %v1_8049fce = inttoptr i32 %v3_8049fcd to i32*
  store i32 0, i32* %v1_8049fce, align 4
  store i32 51, i32* %v1_8049fcd, align 4
  %v3_8049fd3 = call i32 @function_80510d0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049fd3, i32* %eax.global-to-local, align 4
  %v0_8049fd8 = load i32, i32* @esp, align 4
  %v1_8049fd8 = inttoptr i32 %v0_8049fd8 to i32*
  %v2_8049fd8 = load i32, i32* %v1_8049fd8, align 4
  store i32 %v2_8049fd8, i32* %edx.global-to-local, align 4
  %v3_8049fd8 = add i32 %v0_8049fd8, 4
  %v1_8049fd9 = inttoptr i32 %v3_8049fd8 to i32*
  %v2_8049fd9 = load i32, i32* %v1_8049fd9, align 4
  store i32 %v2_8049fd9, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049fd3, i32* %v1_8049fd9, align 4
  %v0_8049fdb = load i32, i32* @esi, align 4
  %v1_8049fdb = add i32 %v0_8049fdb, 20
  store i32 %v1_8049fdb, i32* %eax.global-to-local, align 4
  store i32 %v1_8049fdb, i32* %v1_8049fd8, align 4
  %v3_8049fdf = call i32 @function_8051c60(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049fdf, i32* %eax.global-to-local, align 4
  %v0_8049fe4 = load i32, i32* @esp, align 4
  %v1_8049fe4 = inttoptr i32 %v0_8049fe4 to i32*
  store i32 51, i32* %v1_8049fe4, align 4
  %v2_8049feb = call i32 @function_8051100(i8 %v1_8049f3f)
  store i32 %v2_8049feb, i32* %eax.global-to-local, align 4
  %v0_8049ff0 = load i32, i32* @esp, align 4
  %v1_8049ff0 = add i32 %v0_8049ff0, 16
  %v6_8049ff0 = icmp eq i32 %v1_8049ff0, 0
  store i1 %v6_8049ff0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049ff8:                             ; preds = %dec_label_pc_804848a
  %v9_8049ff8 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049ff8, i1* %zf.global-to-local, align 1
  %v1_8049ffb = add i32 %v0_80484a0, -16
  %v2_8049ffb = inttoptr i32 %v1_8049ffb to i32*
  store i32 52, i32* %v2_8049ffb, align 4
  %v2_8049ffd = call i32 @function_8051180(i8 %v1_8049f3f)
  store i32 %v2_8049ffd, i32* %eax.global-to-local, align 4
  %v0_804a002 = load i32, i32* @esp, align 4
  %v1_804a002 = inttoptr i32 %v0_804a002 to i32*
  %v2_804a002 = load i32, i32* %v1_804a002, align 4
  store i32 %v2_804a002, i32* @ebx, align 4
  %v3_804a002 = add i32 %v0_804a002, 4
  %v1_804a003 = inttoptr i32 %v3_804a002 to i32*
  store i32 0, i32* %v1_804a003, align 4
  store i32 52, i32* %v1_804a002, align 4
  %v3_804a008 = call i32 @function_80510d0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_804a008, i32* %eax.global-to-local, align 4
  %v0_804a00d = load i32, i32* @esp, align 4
  %v1_804a00d = inttoptr i32 %v0_804a00d to i32*
  %v2_804a00d = load i32, i32* %v1_804a00d, align 4
  store i32 %v2_804a00d, i32* %edx.global-to-local, align 4
  %v3_804a00d = add i32 %v0_804a00d, 4
  %v1_804a00e = inttoptr i32 %v3_804a00d to i32*
  %v2_804a00e = load i32, i32* %v1_804a00e, align 4
  store i32 %v2_804a00e, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a008, i32* %v1_804a00e, align 4
  %v0_804a010 = load i32, i32* @esi, align 4
  %v1_804a010 = add i32 %v0_804a010, 20
  store i32 %v1_804a010, i32* %eax.global-to-local, align 4
  store i32 %v1_804a010, i32* %v1_804a00d, align 4
  %v3_804a014 = call i32 @function_8051c60(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804a014, i32* %eax.global-to-local, align 4
  %v0_804a019 = load i32, i32* @esp, align 4
  %v1_804a019 = inttoptr i32 %v0_804a019 to i32*
  store i32 52, i32* %v1_804a019, align 4
  %v2_804a020 = call i32 @function_8051100(i8 %v1_8049f3f)
  store i32 %v2_804a020, i32* %eax.global-to-local, align 4
  %v0_804a025 = load i32, i32* @esp, align 4
  %v1_804a025 = add i32 %v0_804a025, 16
  %v6_804a025 = icmp eq i32 %v1_804a025, 0
  store i1 %v6_804a025, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_804a062:                             ; preds = %dec_label_pc_804848a
  %v9_804a062 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_804a062, i1* %zf.global-to-local, align 1
  %v1_804a065 = add i32 %v0_80484a0, -16
  %v2_804a065 = inttoptr i32 %v1_804a065 to i32*
  store i32 53, i32* %v2_804a065, align 4
  %v2_804a067 = call i32 @function_8051180(i8 38)
  store i32 %v2_804a067, i32* %eax.global-to-local, align 4
  %v0_804a06c = load i32, i32* @esp, align 4
  %v1_804a06c = inttoptr i32 %v0_804a06c to i32*
  %v2_804a06c = load i32, i32* %v1_804a06c, align 4
  store i32 %v2_804a06c, i32* @ebx, align 4
  %v3_804a06c = add i32 %v0_804a06c, 4
  %v1_804a06d = inttoptr i32 %v3_804a06c to i32*
  store i32 0, i32* %v1_804a06d, align 4
  store i32 53, i32* %v1_804a06c, align 4
  %v3_804a072 = call i32 @function_80510d0(i32 134564134, i32* %v2_804a072)
  store i32 %v3_804a072, i32* %eax.global-to-local, align 4
  %v0_804a077 = load i32, i32* @esp, align 4
  %v1_804a077 = inttoptr i32 %v0_804a077 to i32*
  %v2_804a077 = load i32, i32* %v1_804a077, align 4
  store i32 %v2_804a077, i32* %edx.global-to-local, align 4
  %v3_804a077 = add i32 %v0_804a077, 4
  %v1_804a078 = inttoptr i32 %v3_804a077 to i32*
  %v2_804a078 = load i32, i32* %v1_804a078, align 4
  store i32 %v2_804a078, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a072, i32* %v1_804a078, align 4
  %v0_804a07a = load i32, i32* @esi, align 4
  %v1_804a07a = add i32 %v0_804a07a, 20
  store i32 %v1_804a07a, i32* %eax.global-to-local, align 4
  store i32 %v1_804a07a, i32* %v1_804a077, align 4
  %v3_804a07e = call i32 @function_8051c60(i8* inttoptr (i32 134564134 to i8*), i32 %v0_804816e)
  store i32 %v3_804a07e, i32* %eax.global-to-local, align 4
  %v0_804a083 = load i32, i32* @esp, align 4
  %v1_804a083 = inttoptr i32 %v0_804a083 to i32*
  store i32 53, i32* %v1_804a083, align 4
  %v2_804a08a = call i32 @function_8051100(i8 38)
  store i32 %v2_804a08a, i32* %eax.global-to-local, align 4
  %v0_804a08f = load i32, i32* @esp, align 4
  %v1_804a08f = add i32 %v0_804a08f, 16
  %v6_804a08f = icmp eq i32 %v1_804a08f, 0
  store i1 %v6_804a08f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

; uselistorder directives
  uselistorder i32 %v1_804a08f, { 1, 0 }
  uselistorder i32 %v2_804a08a, { 1, 0 }
  uselistorder i32 %v1_804a025, { 1, 0 }
  uselistorder i32 %v2_804a020, { 1, 0 }
  uselistorder i32 %v1_8049ff0, { 1, 0 }
  uselistorder i32 %v2_8049feb, { 1, 0 }
  uselistorder i1 %v15_8049f85, { 1, 0 }
  uselistorder i32 %v1_8049f6a, { 0, 1, 2, 5, 4, 3 }
  uselistorder i1 %v14_8049f0e, { 1, 0 }
  uselistorder i32 %v1_8049f0b, { 1, 0 }
  uselistorder i32 %v0_8049f0b, { 1, 0, 2 }
  uselistorder i32 %v2_8049f06, { 0, 2, 1 }
  uselistorder i32 %v0_8049eff, { 1, 0 }
  uselistorder i8 %v2_8049edb, { 1, 2, 0 }
  uselistorder i32 %v0_8049edb, { 1, 0 }
  uselistorder i1 %v10_8049ec8, { 1, 0 }
  uselistorder i1 %v10_8049eb8, { 1, 0 }
  uselistorder i32 %v0_8049eac, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8049ea9, { 1, 0 }
  uselistorder i32 %v1_8049e91, { 1, 0 }
  uselistorder i1 %v12_8049e75, { 1, 0 }
  uselistorder i32 %v2_8049e2f, { 1, 0 }
  uselistorder i32 %v1_8049e03, { 1, 0, 2 }
  uselistorder i32 %v2_8049dd6, { 1, 0 }
  uselistorder i32 %v2_8049dc2, { 1, 0 }
  uselistorder i32 %v1_8049daf, { 1, 0 }
  uselistorder i32 %v0_8049dac, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049da7, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v1_8049d8b, { 1, 0 }
  uselistorder i32 %v0_8049d6b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8049d36, { 1, 0 }
  uselistorder i32 %v0_8049d33, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049d2e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049d04, { 1, 0 }
  uselistorder i32 %v0_8049d01, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049cfc, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32 %v0_8049cf1, { 1, 0, 2 }
  uselistorder i32 %v0_8049ce8, { 1, 0 }
  uselistorder i32 %v1_8049cd5, { 1, 0 }
  uselistorder i32 %v2_8049ccd, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v0_8049cb2, { 1, 0, 2 }
  uselistorder i32 %v9_8049c6e, { 1, 0 }
  uselistorder i32 %v5_8049c66, { 1, 2, 0 }
  uselistorder i32 %v0_8049c5b, { 1, 2, 0 }
  uselistorder i32 %v1_8049c29, { 1, 0 }
  uselistorder i32 %v1_8049c14, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v1_8049c09, { 1, 0 }
  uselistorder i32 %v2_8049c04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049bd4, { 1, 0 }
  uselistorder i32 %v0_8049bd1, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049bcc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049ba2, { 1, 0 }
  uselistorder i32 %v0_8049b9f, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049b9a, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049b8f, { 1, 0, 2 }
  uselistorder i32 %v0_8049b86, { 1, 0 }
  uselistorder i8 %v2_8049b80, { 1, 2, 0 }
  uselistorder i32 %v0_8049b80, { 1, 0 }
  uselistorder i1 %v10_8049b6d, { 1, 0 }
  uselistorder i1 %v10_8049b5d, { 1, 0 }
  uselistorder i32 %v0_8049b52, { 1, 0, 2, 3 }
  uselistorder i1 %v12_8049b28, { 1, 0 }
  uselistorder i1 %v11_8049b0f, { 1, 0 }
  uselistorder i32 %v4_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8049aa9, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_8049a90, { 1, 0, 2 }
  uselistorder i32 %v0_8049a77, { 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v11_8049a40, { 1, 0 }
  uselistorder i1 %v9_8049a37, { 1, 0 }
  uselistorder i32 %v1_8049a34, { 1, 0 }
  uselistorder i32 %v0_8049a25, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8049a0a, { 1, 0 }
  uselistorder i32 %v0_80499fd, { 1, 0 }
  uselistorder i32 %v3_80499d9, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80499d4, { 3, 2, 1, 0 }
  uselistorder i1 %v13_80499ca, { 1, 0 }
  uselistorder i32 %v3_80499c3, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804997c, { 1, 0, 2 }
  uselistorder i1 %v10_8049944, { 1, 0 }
  uselistorder i32 %v0_8049944, { 1, 0 }
  uselistorder i32 %v1_80498e7, { 1, 0 }
  uselistorder i1 %v10_80498d9, { 1, 0 }
  uselistorder i32 %v0_80498cf, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v0_80498a0, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804988a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049875, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804985f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_8049845, { 1, 2, 0 }
  uselistorder i32 %v1_8049845, { 1, 0 }
  uselistorder i32 %v3_804983f, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_8049834, { 1, 0 }
  uselistorder i32 %v1_8049831, { 1, 0 }
  uselistorder i32 %v0_80497f9, { 1, 2, 0 }
  uselistorder i1 %v11_80497f0, { 1, 0 }
  uselistorder i32 %v1_80497ab, { 1, 0 }
  uselistorder i32 %v5_804978f, { 1, 2, 0 }
  uselistorder i32 %v1_804978f, { 1, 0 }
  uselistorder i32 %v3_8049789, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_804977e, { 1, 0 }
  uselistorder i32 %v1_804977b, { 1, 0 }
  uselistorder i32 %v3_8049754, { 1, 0, 2 }
  uselistorder i32 %v1_804974f, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804970b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80496ee, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v4_80496b9, { 1, 0 }
  uselistorder i32 %v0_80496b5, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8049679, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8049628, { 0, 2, 1 }
  uselistorder i32 %v1_8049605, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v9_80495f5, { 1, 0 }
  uselistorder i1 %v12_80495e4, { 1, 0 }
  uselistorder i32 %v0_80495e0, { 0, 2, 1 }
  uselistorder i32 %v3_80495d1, { 3, 7, 8, 5, 6, 1, 0, 2, 4 }
  uselistorder i32 %v0_8049542, { 1, 0 }
  uselistorder i1 %v12_8049581, { 1, 0 }
  uselistorder i1 %v12_804956d, { 1, 0 }
  uselistorder i32 %v0_8049562, { 3, 2, 1, 0, 4 }
  uselistorder i1 %v11_8049559, { 1, 0 }
  uselistorder i32 %v2_804954a, { 1, 2, 0 }
  uselistorder i32 %v3_8049542, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v10_8049518, { 1, 0 }
  uselistorder i1 %v9_80494cc, { 1, 0 }
  uselistorder i32 %v0_80494b4, { 1, 0, 2, 3 }
  uselistorder i1 %v11_8049496, { 1, 0 }
  uselistorder i1 %v9_804948d, { 1, 0 }
  uselistorder i32 %v0_804948a, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder i32 %v1_8049465, { 0, 2, 1 }
  uselistorder i1 %v10_8049457, { 1, 0 }
  uselistorder i32 %v0_804944d, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804941e, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049408, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_80493f3, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_80493dd, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_80493c3, { 1, 2, 0 }
  uselistorder i32 %v1_80493c3, { 1, 0 }
  uselistorder i32 %v3_80493bd, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_80493b2, { 1, 0 }
  uselistorder i32 %v1_80493af, { 1, 0 }
  uselistorder i32 %v2_8049377, { 1, 0 }
  uselistorder i32 %v1_8049364, { 1, 0 }
  uselistorder i32 %v0_8049361, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_804935c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8049358, { 1, 0 }
  uselistorder i32 %v5_8049353, { 1, 2, 0 }
  uselistorder i32 %v4_8049353, { 0, 2, 1 }
  uselistorder i32 %v2_8049322, { 1, 0 }
  uselistorder i32 %v2_80492f7, { 1, 2, 0 }
  uselistorder i32 %v3_80492ed, { 0, 1, 3, 4, 2 }
  uselistorder i32* %v2_80492ed, { 0, 2, 1 }
  uselistorder i32 %v0_80492e4, { 1, 0 }
  uselistorder i32 %v0_80492bf, { 0, 2, 1 }
  uselistorder i32 %v0_8049297, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_8049286, { 1, 0 }
  uselistorder i1 %v10_804926b, { 1, 0 }
  uselistorder i32 %v0_8049266, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_8049261, { 2, 3, 0, 1, 4, 5 }
  uselistorder i1 %v11_804923f, { 1, 0 }
  uselistorder i32 %v0_8049226, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8049211, { 1, 0 }
  uselistorder i32 %v0_8049203, { 3, 0, 1, 2, 8, 4, 5, 6, 7 }
  uselistorder i32 %v0_80491eb, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_80491e0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80491b3, { 0, 2, 1 }
  uselistorder i1 %v10_80491a9, { 1, 0 }
  uselistorder i32 %v0_804919f, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8049170, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804915a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049145, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804912f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8049124, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8049107, { 1, 2, 3, 0 }
  uselistorder i32 %v1_80490de, { 0, 2, 1 }
  uselistorder i1 %v10_80490d4, { 1, 0 }
  uselistorder i32 %v0_80490ca, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804909b, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049085, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049070, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804905a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049027, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8048ffe, { 0, 2, 1 }
  uselistorder i1 %v10_8048ff4, { 1, 0 }
  uselistorder i32 %v0_8048fea, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8048fbb, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8048fa5, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8048f7a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f3e, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8048f33, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8048f0d, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %v2_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8048ed7, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8048e4a, { 1, 2, 0 }
  uselistorder i32 %v0_8048e05, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %v0_8048ddc, { 2, 0, 1 }
  uselistorder i32 %v1_8048dd9, { 1, 0 }
  uselistorder i32 %v2_8048dd6, { 1, 0 }
  uselistorder i1 %v10_8048dcd, { 1, 0 }
  uselistorder i32 %v3_8048dc7, { 1, 0, 2, 4, 3 }
  uselistorder i1 %v15_8048dab, { 1, 0 }
  uselistorder i32 %v0_8048da7, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v10_8048d89, { 1, 0 }
  uselistorder i1 %v10_8048d81, { 1, 0 }
  uselistorder i1 %v10_8048d79, { 1, 0 }
  uselistorder i32 %v1_8048d5d, { 1, 0 }
  uselistorder i32 %v2_8048d5a, { 1, 0 }
  uselistorder i32 %v0_8048d58, { 1, 0 }
  uselistorder i32 %v1_8048e7a, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8048d26, { 1, 0 }
  uselistorder i32 %v0_8048cff, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %v5_8048cce, { 1, 2, 0 }
  uselistorder i32 %v0_8048cce, { 1, 0 }
  uselistorder i32 %v3_8048cc8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8048cbd, { 1, 0 }
  uselistorder i32 %v1_8048cba, { 1, 0 }
  uselistorder i32 %v0_8048c9d, { 0, 2, 1 }
  uselistorder i32 %v5_8048c82, { 1, 2, 0 }
  uselistorder i32 %v3_8048c7c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8048c71, { 1, 0 }
  uselistorder i32 %v2_8048c6e, { 1, 0 }
  uselistorder i32 %v1_8048c6b, { 1, 0 }
  uselistorder i32 %v0_8048c28, { 2, 1, 0 }
  uselistorder i32 %v0_8048c1d, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8048c10, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v3_8048bde, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8048bdb, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8048bb4, { 2, 1, 0 }
  uselistorder i32 %v0_8048b8a, { 2, 1, 0 }
  uselistorder i32 %v5_8048b85, { 1, 2, 0 }
  uselistorder i32 %v4_8048b85, { 0, 2, 1 }
  uselistorder i32 %v0_8048b24, { 2, 1, 0 }
  uselistorder i32 %v0_8048ae3, { 1, 3, 2, 0 }
  uselistorder i32 %v0_8048a9b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80489b5, { 1, 0, 2, 3 }
  uselistorder i32 %v5_80486da, { 1, 2, 0 }
  uselistorder i32 %v3_80486d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80486c6, { 1, 0 }
  uselistorder i32 %v1_80486c3, { 1, 0 }
  uselistorder i32 %v12_804862d, { 1, 0 }
  uselistorder i32 %v0_804862a, { 2, 0, 1 }
  uselistorder i1 %v10_8048616, { 1, 0 }
  uselistorder i32 %v4_8048608, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8048601, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8048601.pre, { 1, 2, 0 }
  uselistorder i1 %v10_80485f0, { 1, 0 }
  uselistorder i32 %v3_80485ea, { 1, 0, 2 }
  uselistorder i1 %v10_80485ae, { 1, 0 }
  uselistorder i1 %v6_80485ae, { 1, 0 }
  uselistorder i8 %v3_80485a5, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_80485a5, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80485a5, { 7, 6, 5, 2, 4, 0, 1, 8, 3 }
  uselistorder i1 %v15_804859b, { 1, 0 }
  uselistorder i32 %v0_8048597, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v10_8048557, { 1, 0 }
  uselistorder i1 %v10_804854f, { 1, 0 }
  uselistorder i1 %v10_8048547, { 1, 0 }
  uselistorder i1 %v10_804853f, { 1, 0 }
  uselistorder i1 %v10_8048537, { 1, 0 }
  uselistorder i32 %v3_8048505, { 1, 0 }
  uselistorder i32 %v3_80484fc, { 1, 0 }
  uselistorder i32 %v0_80484e5, { 1, 0 }
  uselistorder i8* %v1_8048752, { 23, 22, 26, 5, 4, 3, 2, 1, 0, 32, 31, 30, 29, 28, 27, 13, 12, 14, 18, 17, 20, 19, 16, 15, 25, 24, 33, 21, 60, 6, 8, 7, 36, 35, 34, 11, 10, 9, 59, 57, 58, 61, 62, 53, 54, 49, 50, 51, 52, 55, 56, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i32 %stack_var_-20924.0.ph, { 12, 15, 14, 11, 10, 26, 25, 24, 23, 22, 13, 9, 16, 8, 17, 7, 19, 18, 6, 21, 20, 5, 4, 3, 1, 2, 39, 38, 37, 36, 35, 32, 31, 29, 28, 27, 0, 30, 40, 34, 33 }
  uselistorder i32 %v2_80484ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80484a0, { 8, 3, 7, 2, 6, 1, 4, 5, 0, 9 }
  uselistorder i8 %tmp243, { 1, 0 }
  uselistorder i32 %v1_804841e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80483ff, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v12_80483e9, { 1, 0 }
  uselistorder i32 %v0_80483e6, { 2, 1, 0, 3 }
  uselistorder i8 %v1_8049f3f, { 1, 0, 3, 2, 4, 5 }
  uselistorder i8* %v2_8049f7d, { 0, 1, 3, 2 }
  uselistorder i8* %v2_80483e1, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 %.v0_80482dd, { 5, 3, 4, 0, 1, 2 }
  uselistorder i32 %v2_80482a5, { 1, 0, 2 }
  uselistorder i32 %v4_80482a0, { 1, 2, 0 }
  uselistorder i32 %v1_80482d3, { 2, 3, 1, 0 }
  uselistorder i8* %v3_80482a0.pre, { 1, 2, 0 }
  uselistorder i8 %v1_80482c3, { 1, 0 }
  uselistorder i32 %v1_804828d, { 1, 0 }
  uselistorder i32 %v2_8048285, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v1_8048278, { 1, 0 }
  uselistorder i32 %v2_8048270, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_804824e, { 1, 2, 0, 3 }
  uselistorder i1 %v9_8048246, { 1, 0, 2, 3, 4 }
  uselistorder i8* %tmp238, { 0, 2, 1 }
  uselistorder i32 %v6_80481f3, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v5_80481e1, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v6_80481cf, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804816e, { 1, 0, 2 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-20972, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %tmp, { 4, 3, 1, 0, 2, 5 }
  uselistorder i1* %zf.global-to-local, { 2, 3, 4, 5, 6, 7, 13, 14, 15, 8, 9, 16, 17, 18, 19, 20, 22, 21, 11, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 24, 25, 26, 27, 28, 29, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 71, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 86, 124, 1, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 221, 222, 223, 224, 125, 126, 127, 128, 129, 139, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 211, 210, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 239, 240, 241, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 272, 273, 242, 243, 244, 245, 246, 247, 256, 257, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 285, 286, 274, 275, 276, 277, 280, 281, 278, 279, 12, 10, 282, 283, 284, 294, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 16, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 6, 7, 8, 3, 32, 10, 9, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 4, 25, 26, 27, 28, 29, 30, 31, 33, 38, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 95, 96, 97, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 172, 173, 174, 175, 176, 177, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 86, 83, 84, 85, 81, 87, 88, 89, 90, 91, 92, 93, 94, 147, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 160, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 168, 159, 170, 171 }
  uselistorder i32* %edi.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 8, 5, 9, 10, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 23, 33, 24, 25, 26, 27, 28, 29, 35, 55, 56, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 118, 119, 116, 117, 120, 121, 42, 43, 44, 45, 46, 47, 48, 50, 51, 49, 52, 53, 54, 104, 105, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 24, 25, 26, 27, 28, 435, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 37, 38, 39, 40, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 0, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 151, 152, 164, 165, 153, 154, 155, 156, 167, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 515, 188, 189, 190, 191, 494, 495, 496, 497, 498, 499, 500, 501, 503, 502, 504, 505, 506, 507, 508, 509, 512, 513, 514, 516, 517, 518, 519, 520, 192, 510, 511, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 234, 235, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 241, 242, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 267, 268, 264, 265, 266, 260, 261, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 407, 408, 412, 409, 410, 411, 413, 414, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 455, 456, 457, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 428, 429, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 483, 450, 451, 452, 453, 454, 484, 485, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 475, 476, 22, 1, 479, 480, 481, 482, 486, 487, 488, 489, 490, 491, 492, 493 }
  uselistorder i32 ()* @function_8051f30, { 18, 17, 16, 15, 14, 13, 12, 1, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 147, { 0, 7, 8, 9, 1, 10, 11, 12, 2, 13, 26, 3, 14, 15, 16, 4, 17, 18, 19, 5, 20, 21, 22, 23, 24, 27, 6, 25 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 20740, { 1, 2, 3, 4, 0 }
  uselistorder i32 20612, { 1, 2, 0, 3 }
  uselistorder i32 ()* @function_8051fb0, { 2, 1, 0 }
  uselistorder i32 10388, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 20900, { 4, 5, 6, 7, 8, 0, 3, 2, 9, 10, 11, 12, 1, 13, 14, 15, 16 }
  uselistorder i32 20916, { 2, 0, 15, 3, 4, 10, 8, 14, 13, 1, 16, 7, 17, 11, 5, 12, 6, 9, 18, 19, 20, 21 }
  uselistorder i8 7, { 3, 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @function_8051c60, { 0, 1, 2, 4, 3, 6, 7, 8, 9, 5, 10, 11, 12, 13, 37, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42 }
  uselistorder i32 3140, { 1, 2, 3, 4, 0 }
  uselistorder i8 47, { 0, 1, 3, 4, 2, 5, 8, 6, 7 }
  uselistorder i32 (i8*)* @function_8051c40, { 1, 2, 5, 6, 7, 8, 9, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 55, 20, 21, 22, 49, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 0, 52, 53, 54 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_8054974.5 to i32), { 1, 0 }
  uselistorder i32 134564134, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8049f6a, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8049ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8049e86, { 1, 0 }
  uselistorder label %dec_label_pc_8049d1e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049ce8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049b86, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8049b6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049b32, { 1, 0 }
  uselistorder label %dec_label_pc_8049a49, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049a11, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80499f3, { 1, 0 }
  uselistorder label %dec_label_pc_80499d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80499c3, { 1, 0 }
  uselistorder label %dec_label_pc_804994e, { 1, 0 }
  uselistorder label %dec_label_pc_8049928, { 1, 0 }
  uselistorder label %dec_label_pc_80498ea, { 1, 0 }
  uselistorder label %dec_label_pc_80497f9, { 1, 0 }
  uselistorder label %dec_label_pc_804974f, { 1, 0 }
  uselistorder label %dec_label_pc_80496c3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80495d1, { 1, 0 }
  uselistorder label %dec_label_pc_804958e, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8049562, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
  uselistorder label %dec_label_pc_80494dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804949f, { 0, 1, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_8049468, { 1, 0 }
  uselistorder label %dec_label_pc_804930a, { 1, 0 }
  uselistorder label %dec_label_pc_8049301, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80492e4, { 1, 0 }
  uselistorder label %dec_label_pc_80492b2, { 1, 0 }
  uselistorder label %dec_label_pc_8049289, { 1, 0 }
  uselistorder label %dec_label_pc_804924d, { 1, 0 }
  uselistorder label %dec_label_pc_80491db, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80491b6, { 1, 0 }
  uselistorder label %dec_label_pc_8049124, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80490e1, { 1, 0 }
  uselistorder label %dec_label_pc_8049044, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049001, { 1, 0 }
  uselistorder label %dec_label_pc_8048f64, { 1, 0 }
  uselistorder label %dec_label_pc_8048f33, { 1, 0 }
  uselistorder label %dec_label_pc_8048ee1, { 1, 0 }
  uselistorder label %dec_label_pc_8048e4a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048db9, { 1, 0 }
  uselistorder label %dec_label_pc_8048d91, { 7, 8, 2, 1, 9, 3, 10, 11, 12, 15, 0, 13, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_8048d58, { 1, 0 }
  uselistorder label %dec_label_pc_8048c28, { 1, 0 }
  uselistorder label %dec_label_pc_8048c10, { 1, 0 }
  uselistorder label %dec_label_pc_8048bb4, { 1, 0 }
  uselistorder label %dec_label_pc_8048ad8, { 1, 0 }
  uselistorder label %dec_label_pc_8048700, { 1, 0 }
  uselistorder label %dec_label_pc_8048601, { 1, 0 }
  uselistorder label %dec_label_pc_80485be, { 1, 0 }
  uselistorder label %dec_label_pc_8048582, { 0, 1, 2, 3, 4, 7, 6, 5, 8 }
  uselistorder label %dec_label_pc_804855f, { 1, 0 }
  uselistorder label %dec_label_pc_80484e5, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_80484e5.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804848a, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_804841e, { 1, 0 }
  uselistorder label %dec_label_pc_80482cc, { 1, 0 }
  uselistorder label %dec_label_pc_80482b8, { 1, 0 }
  uselistorder label %dec_label_pc_804825d, { 1, 2, 0, 3, 4 }
}

define i32 @function_804a0a0(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a0a0:
  %tmp = trunc i32 %arg3 to i8
  %v4_804a0a5 = urem i32 %arg3, 256
  %v4_804a0b1 = zext i8 %arg1 to i32
  %v2_804a0b5 = icmp eq i8 %arg1, 0
  br i1 %v2_804a0b5, label %dec_label_pc_804a0e3, label %dec_label_pc_804a0c0

dec_label_pc_804a0c0:                             ; preds = %dec_label_pc_804a0a0
  %v3_804a0c4 = add i32 %arg2, 4
  %v4_804a0c4 = inttoptr i32 %v3_804a0c4 to i8*
  %v5_804a0c4 = load i8, i8* %v4_804a0c4, align 1
  %v16_804a0c4 = icmp eq i8 %tmp, %v5_804a0c4
  br i1 %v16_804a0c4, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0c9

dec_label_pc_804a0c9:                             ; preds = %dec_label_pc_804a0c0
  br label %dec_label_pc_804a0de

dec_label_pc_804a0d0:                             ; preds = %dec_label_pc_804a0de
  %v1_804a0d0 = add i32 %v0_804a0d3.in, 12
  %v2_804a0d0 = inttoptr i32 %v1_804a0d0 to i8*
  %v3_804a0d0 = load i8, i8* %v2_804a0d0, align 1
  %v4_804a0d0 = zext i8 %v3_804a0d0 to i32
  %v6_804a0d0 = and i32 %v5_804a0d0, -256
  %v7_804a0d0 = or i32 %v4_804a0d0, %v6_804a0d0
  %v16_804a0d8 = icmp eq i8 %v3_804a0d0, %tmp
  br i1 %v16_804a0d8, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0de

dec_label_pc_804a0de:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c9
  %v5_804a0d0 = phi i32 [ %v7_804a0d0, %dec_label_pc_804a0d0 ], [ %v4_804a0a5, %dec_label_pc_804a0c9 ]
  %v0_804a0d3.in = phi i32 [ %v0_804a0d3, %dec_label_pc_804a0d0 ], [ %arg2, %dec_label_pc_804a0c9 ]
  %v0_804a0de = phi i32 [ %v1_804a0de, %dec_label_pc_804a0d0 ], [ 0, %dec_label_pc_804a0c9 ]
  %v0_804a0d3 = add i32 %v0_804a0d3.in, 8
  %v1_804a0de = add i32 %v0_804a0de, 1
  store i32 %v1_804a0de, i32* @ecx, align 4
  %v12_804a0df = icmp eq i32 %v1_804a0de, %v4_804a0b1
  %v1_804a0e1 = icmp eq i1 %v12_804a0df, false
  br i1 %v1_804a0e1, label %dec_label_pc_804a0d0, label %dec_label_pc_804a0e3

dec_label_pc_804a0e3:                             ; preds = %dec_label_pc_804a0de, %dec_label_pc_804a0a0
  ret i32 %arg4

dec_label_pc_804a0eb:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c0
  %v0_804a0eb = phi i32 [ %arg2, %dec_label_pc_804a0c0 ], [ %v0_804a0d3, %dec_label_pc_804a0d0 ]
  %v1_804a0eb = inttoptr i32 %v0_804a0eb to i32*
  %v2_804a0eb = load i32, i32* %v1_804a0eb, align 4
  ret i32 %v2_804a0eb

; uselistorder directives
  uselistorder i32 %v1_804a0de, { 0, 2, 1 }
  uselistorder i32 %v0_804a0d3.in, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
}

define i32 @function_804a160(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a160:
  %v0_804a160 = load i32, i32* @edi, align 4
  %v0_804a161 = load i32, i32* @esi, align 4
  %v0_804a162 = load i32, i32* @ebx, align 4
  %v4_804a166 = zext i8 %arg1 to i32
  %v2_804a16e = icmp eq i8 %arg1, 0
  %v4_804a178 = urem i32 %arg3, 256
  %v5_804a178 = load i32, i32* @eax, align 4
  %v6_804a178 = and i32 %v5_804a178, -256
  %v7_804a178 = or i32 %v6_804a178, %v4_804a178
  br i1 %v2_804a16e, label %dec_label_pc_804a1a5, label %dec_label_pc_804a182

dec_label_pc_804a182:                             ; preds = %dec_label_pc_804a160
  %v1_804a182 = trunc i32 %arg3 to i8
  %v3_804a186 = add i32 %arg2, 4
  %v4_804a186 = inttoptr i32 %v3_804a186 to i8*
  %v5_804a186 = load i8, i8* %v4_804a186, align 1
  %v16_804a186 = icmp eq i8 %v1_804a182, %v5_804a186
  br i1 %v16_804a186, label %dec_label_pc_804a1ac, label %dec_label_pc_804a18b

dec_label_pc_804a18b:                             ; preds = %dec_label_pc_804a182
  br label %dec_label_pc_804a1a0

dec_label_pc_804a192:                             ; preds = %dec_label_pc_804a1a0
  %v1_804a192 = add i32 %v0_804a195.in, 12
  %v2_804a192 = inttoptr i32 %v1_804a192 to i8*
  %v3_804a192 = load i8, i8* %v2_804a192, align 1
  %v4_804a192 = zext i8 %v3_804a192 to i32
  %v6_804a192 = and i32 %v5_804a192, -256
  %v7_804a192 = or i32 %v4_804a192, %v6_804a192
  %v16_804a19a = icmp eq i8 %v1_804a182, %v3_804a192
  br i1 %v16_804a19a, label %dec_label_pc_804a1ac, label %dec_label_pc_804a1a0

dec_label_pc_804a1a0:                             ; preds = %dec_label_pc_804a192, %dec_label_pc_804a18b
  %v5_804a192 = phi i32 [ %v7_804a192, %dec_label_pc_804a192 ], [ %v7_804a178, %dec_label_pc_804a18b ]
  %v0_804a195.in = phi i32 [ %v0_804a195, %dec_label_pc_804a192 ], [ %arg2, %dec_label_pc_804a18b ]
  %v0_804a1a0 = phi i32 [ %v1_804a1a0, %dec_label_pc_804a192 ], [ 0, %dec_label_pc_804a18b ]
  %v0_804a195 = add i32 %v0_804a195.in, 8
  %v1_804a1a0 = add i32 %v0_804a1a0, 1
  store i32 %v1_804a1a0, i32* @ecx, align 4
  %v12_804a1a1 = icmp eq i32 %v4_804a166, %v1_804a1a0
  %v1_804a1a3 = icmp eq i1 %v12_804a1a1, false
  br i1 %v1_804a1a3, label %dec_label_pc_804a192, label %dec_label_pc_804a1a5

dec_label_pc_804a1a5:                             ; preds = %dec_label_pc_804a1a0, %dec_label_pc_804a1ac, %dec_label_pc_804a160
  store i32 %v0_804a162, i32* @ebx, align 4
  store i32 %v0_804a161, i32* @esi, align 4
  store i32 %v0_804a160, i32* @edi, align 4
  ret i32 %arg4

dec_label_pc_804a1ac:                             ; preds = %dec_label_pc_804a192, %dec_label_pc_804a182
  %v0_804a1ac = phi i32 [ %arg2, %dec_label_pc_804a182 ], [ %v0_804a195, %dec_label_pc_804a192 ]
  %v1_804a1ac = inttoptr i32 %v0_804a1ac to i32*
  %v2_804a1ac = load i32, i32* %v1_804a1ac, align 4
  %sext = mul i32 %v2_804a1ac, 16777216
  %v2_804a1ae = icmp eq i32 %sext, 0
  br i1 %v2_804a1ae, label %dec_label_pc_804a1a5, label %dec_label_pc_804a1b2

dec_label_pc_804a1b2:                             ; preds = %dec_label_pc_804a1ac
  store i32 %v0_804a162, i32* @ebx, align 4
  store i32 %v0_804a161, i32* @esi, align 4
  store i32 %v0_804a160, i32* @edi, align 4
  %v2_804a1c2 = sdiv i32 %sext, 16777216
  %v3_804a1c2 = inttoptr i32 %v2_804a1c2 to i8*
  %v4_804a1c2 = call i32 @function_8051d40(i8* %v3_804a1c2, i32 10)
  ret i32 %v4_804a1c2

; uselistorder directives
  uselistorder i32 %v1_804a1a0, { 0, 2, 1 }
  uselistorder i32 %v0_804a195.in, { 1, 0 }
  uselistorder i32 %v0_804a162, { 1, 0 }
  uselistorder i32 %v0_804a161, { 1, 0 }
  uselistorder i32 %v0_804a160, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a1a5, { 1, 0, 2 }
}

define i32 @function_804d5e0() local_unnamed_addr {
dec_label_pc_804d5e0:
  %tmp = call i16* @__decompiler_undefined_function_4()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_804d5e7 = ptrtoint i16* %tmp to i32
  %tmp14 = or i32 %tmp11, 1
  %tmp15 = icmp eq i32 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804d605, label %dec_label_pc_804d5f0

dec_label_pc_804d5f0:                             ; preds = %dec_label_pc_804d5e0, %dec_label_pc_804d5f0
  %v0_804d5fe = phi i32 [ %v2_804d5fe, %dec_label_pc_804d5f0 ], [ 0, %dec_label_pc_804d5e0 ]
  %v0_804d5f3 = phi i32 [ %v1_804d5f3, %dec_label_pc_804d5f0 ], [ %tmp11, %dec_label_pc_804d5e0 ]
  %v0_804d5fb = phi i32 [ %v1_804d5fb, %dec_label_pc_804d5f0 ], [ %v4_804d5e7, %dec_label_pc_804d5e0 ]
  %v1_804d5f0 = inttoptr i32 %v0_804d5fb to i16*
  %v2_804d5f0 = load i16, i16* %v1_804d5f0, align 2
  %v3_804d5f0 = zext i16 %v2_804d5f0 to i32
  %v1_804d5f3 = add i32 %v0_804d5f3, -2
  %v1_804d5fb = add i32 %v0_804d5fb, 2
  %v2_804d5fe = add i32 %v3_804d5f0, %v0_804d5fe
  %v5_804d600 = icmp eq i32 %v1_804d5f3, 0
  %v9_804d600 = icmp eq i32 %v0_804d5f3, 3
  %v2_804d603 = or i1 %v9_804d600, %v5_804d600
  br i1 %v2_804d603, label %dec_label_pc_804d605.loopexit, label %dec_label_pc_804d5f0

dec_label_pc_804d605.loopexit:                    ; preds = %dec_label_pc_804d5f0
  br label %dec_label_pc_804d605

dec_label_pc_804d605:                             ; preds = %dec_label_pc_804d605.loopexit, %dec_label_pc_804d5e0
  %v0_804d60b = phi i32 [ %v2_804d5fe, %dec_label_pc_804d605.loopexit ], [ 0, %dec_label_pc_804d5e0 ]
  %v0_804d608 = phi i32 [ %v1_804d5fb, %dec_label_pc_804d605.loopexit ], [ %v4_804d5e7, %dec_label_pc_804d5e0 ]
  %v0_804d605 = phi i32 [ %v1_804d5f3, %dec_label_pc_804d605.loopexit ], [ %tmp11, %dec_label_pc_804d5e0 ]
  %v8_804d605 = icmp eq i32 %v0_804d605, 1
  %v1_804d606 = icmp eq i1 %v8_804d605, false
  br i1 %v1_804d606, label %dec_label_pc_804d60d, label %dec_label_pc_804d608

dec_label_pc_804d608:                             ; preds = %dec_label_pc_804d605
  %v1_804d608 = inttoptr i32 %v0_804d608 to i8*
  %v2_804d608 = load i8, i8* %v1_804d608, align 1
  %v3_804d608 = sext i8 %v2_804d608 to i32
  %v2_804d60b = add i32 %v3_804d608, %v0_804d60b
  br label %dec_label_pc_804d60d

dec_label_pc_804d60d:                             ; preds = %dec_label_pc_804d605, %dec_label_pc_804d608
  %v0_804d60d = phi i32 [ %v0_804d60b, %dec_label_pc_804d605 ], [ %v2_804d60b, %dec_label_pc_804d608 ]
  %v1_804d60f = urem i32 %v0_804d60d, 65536
  %v2_804d612 = udiv i32 %v0_804d60d, 65536
  %v2_804d616 = add nuw nsw i32 %v1_804d60f, %v2_804d612
  %v2_804d61a = udiv i32 %v2_804d616, 65536
  %v2_804d61d = add nuw nsw i32 %v2_804d61a, %v2_804d616
  %v1_804d61f = urem i32 %v2_804d61d, 65536
  %v1_804d622 = xor i32 %v1_804d61f, 65535
  ret i32 %v1_804d622

; uselistorder directives
  uselistorder i32 %v2_804d616, { 1, 0 }
  uselistorder i32 %v0_804d60b, { 1, 0 }
  uselistorder i32 %v1_804d5f3, { 0, 2, 1 }
  uselistorder i32 %v4_804d5e7, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d60d, { 1, 0 }
  uselistorder label %dec_label_pc_804d5f0, { 1, 0 }
}

define i32 @function_804d630() local_unnamed_addr {
dec_label_pc_804d630:
  %tmp14 = call i16* @__decompiler_undefined_function_4()
  %tmp15 = call i16 @__decompiler_undefined_function_1()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %v4_804d645 = ptrtoint i16* %tmp14 to i32
  %v1_804d64e = add i32 %tmp17, 12
  %v2_804d64e = inttoptr i32 %v1_804d64e to i32*
  %v3_804d64e = load i32, i32* %v2_804d64e, align 4
  %v1_804d651 = add i32 %tmp17, 16
  %v2_804d651 = inttoptr i32 %v1_804d651 to i32*
  %v3_804d651 = load i32, i32* %v2_804d651, align 4
  %v7_804d657 = icmp sgt i32 %tmp16, 1
  br i1 %v7_804d657, label %dec_label_pc_804d660, label %dec_label_pc_804d675

dec_label_pc_804d660:                             ; preds = %dec_label_pc_804d630, %dec_label_pc_804d660
  %v0_804d66e = phi i32 [ %v2_804d66e, %dec_label_pc_804d660 ], [ 0, %dec_label_pc_804d630 ]
  %v0_804d663 = phi i32 [ %v1_804d663, %dec_label_pc_804d660 ], [ %tmp16, %dec_label_pc_804d630 ]
  %v0_804d66b = phi i32 [ %v1_804d66b, %dec_label_pc_804d660 ], [ %v4_804d645, %dec_label_pc_804d630 ]
  %v1_804d660 = inttoptr i32 %v0_804d66b to i16*
  %v2_804d660 = load i16, i16* %v1_804d660, align 2
  %v3_804d660 = zext i16 %v2_804d660 to i32
  %v1_804d663 = add i32 %v0_804d663, -2
  %v1_804d66b = add i32 %v0_804d66b, 2
  %v2_804d66e = add i32 %v3_804d660, %v0_804d66e
  %v1_804d670 = add i32 %v0_804d663, -3
  %v6_804d670 = sub i32 2, %v0_804d663
  %v7_804d670 = and i32 %v1_804d663, %v6_804d670
  %v8_804d670 = icmp slt i32 %v7_804d670, 0
  %v9_804d670 = icmp eq i32 %v1_804d670, 0
  %v10_804d670 = icmp slt i32 %v1_804d670, 0
  %v3_804d673 = icmp eq i1 %v10_804d670, %v8_804d670
  %v4_804d673 = icmp eq i1 %v9_804d670, false
  %v5_804d673 = and i1 %v4_804d673, %v3_804d673
  br i1 %v5_804d673, label %dec_label_pc_804d660, label %dec_label_pc_804d675.loopexit

dec_label_pc_804d675.loopexit:                    ; preds = %dec_label_pc_804d660
  br label %dec_label_pc_804d675

dec_label_pc_804d675:                             ; preds = %dec_label_pc_804d675.loopexit, %dec_label_pc_804d630
  %v0_804d6e0 = phi i32 [ %v2_804d66e, %dec_label_pc_804d675.loopexit ], [ 0, %dec_label_pc_804d630 ]
  %v0_804d6de = phi i32 [ %v1_804d66b, %dec_label_pc_804d675.loopexit ], [ %v4_804d645, %dec_label_pc_804d630 ]
  %v0_804d675 = phi i32 [ %v1_804d663, %dec_label_pc_804d675.loopexit ], [ %tmp16, %dec_label_pc_804d630 ]
  %v8_804d675 = icmp eq i32 %v0_804d675, 1
  br i1 %v8_804d675, label %dec_label_pc_804d6dc, label %dec_label_pc_804d678

dec_label_pc_804d678:                             ; preds = %dec_label_pc_804d675, %dec_label_pc_804d6dc
  %v0_804d686 = phi i32 [ %v0_804d6e0, %dec_label_pc_804d675 ], [ %v2_804d6e0, %dec_label_pc_804d6dc ]
  %v2_804d67c = udiv i32 %v3_804d651, 65536
  %v1_804d67f = add i32 %tmp17, 9
  %v2_804d67f = inttoptr i32 %v1_804d67f to i8*
  %v3_804d67f = load i8, i8* %v2_804d67f, align 1
  %v1_804d682 = zext i8 %v3_804d67f to i16
  %v2_804d682 = call i16 @llvm.bswap.i16(i16 %v1_804d682)
  %v3_804d682 = zext i16 %v2_804d682 to i32
  %v2_804d686 = add i32 %v0_804d686, %v2_804d67c
  %v2_804d68e = add i32 %v2_804d686, %v3_804d682
  %v1_804d694 = urem i32 %v3_804d64e, 65536
  %v2_804d69a = udiv i32 %v3_804d64e, 65536
  %v1_804d6a1 = urem i32 %v3_804d651, 65536
  %v4_804d6a9 = zext i16 %tmp15 to i32
  %v2_804d69d = add nuw nsw i32 %v2_804d69a, %v4_804d6a9
  %v2_804d6a7 = add nuw nsw i32 %v2_804d69d, %v1_804d694
  %v2_804d6b4 = add nuw nsw i32 %v2_804d6a7, %v1_804d6a1
  %v2_804d6b6 = add i32 %v2_804d6b4, %v2_804d68e
  %tmp = icmp ult i32 %v2_804d6b6, 65536
  br i1 %tmp, label %dec_label_pc_804d6ce, label %dec_label_pc_804d6c0

dec_label_pc_804d6c0:                             ; preds = %dec_label_pc_804d678, %dec_label_pc_804d6c0
  %v2_804d6c53 = phi i32 [ %v2_804d6c5, %dec_label_pc_804d6c0 ], [ %v2_804d6b6, %dec_label_pc_804d678 ]
  %v2_804d6c94.in = phi i32 [ %v2_804d6c5, %dec_label_pc_804d6c0 ], [ %v2_804d6b6, %dec_label_pc_804d678 ]
  %v2_804d6c94 = udiv i32 %v2_804d6c94.in, 65536
  %v1_804d6c0 = urem i32 %v2_804d6c53, 65536
  %v2_804d6c5 = add nuw nsw i32 %v1_804d6c0, %v2_804d6c94
  %tmp25 = icmp ult i32 %v2_804d6c5, 65536
  %v1_804d6cc = icmp eq i1 %tmp25, false
  br i1 %v1_804d6cc, label %dec_label_pc_804d6c0, label %dec_label_pc_804d6ce.loopexit

dec_label_pc_804d6ce.loopexit:                    ; preds = %dec_label_pc_804d6c0
  br label %dec_label_pc_804d6ce

dec_label_pc_804d6ce:                             ; preds = %dec_label_pc_804d6ce.loopexit, %dec_label_pc_804d678
  %v0_804d6ce = phi i32 [ %v2_804d6c5, %dec_label_pc_804d6ce.loopexit ], [ %v2_804d6b6, %dec_label_pc_804d678 ]
  %v1_804d6ce = urem i32 %v0_804d6ce, 65536
  %v1_804d6d2 = xor i32 %v1_804d6ce, 65535
  ret i32 %v1_804d6d2

dec_label_pc_804d6dc:                             ; preds = %dec_label_pc_804d675
  %v1_804d6de = inttoptr i32 %v0_804d6de to i8*
  %v2_804d6de = load i8, i8* %v1_804d6de, align 1
  %v3_804d6de = zext i8 %v2_804d6de to i32
  %v2_804d6e0 = add i32 %v3_804d6de, %v0_804d6e0
  br label %dec_label_pc_804d678

; uselistorder directives
  uselistorder i32 %v2_804d6c5, { 2, 1, 3, 0 }
  uselistorder i32 %v2_804d6b6, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804d670, { 1, 0 }
  uselistorder i32 %v1_804d663, { 0, 2, 1 }
  uselistorder i32 %v3_804d651, { 1, 0 }
  uselistorder i32 %v4_804d645, { 1, 0 }
  uselistorder i32 %tmp17, { 0, 2, 1 }
  uselistorder i32 %tmp16, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d6c0, { 1, 0 }
  uselistorder label %dec_label_pc_804d678, { 1, 0 }
  uselistorder label %dec_label_pc_804d660, { 1, 0 }
}

define i32 @function_804eaf0() local_unnamed_addr {
dec_label_pc_804eaf0:
  %v0_804eaf0 = load i32, i32* @global_var_80560d4.20, align 4
  %v0_804eaf8 = load i32, i32* @global_var_80560e0.21, align 32
  %v2_804eafe = mul i32 %v0_804eaf0, 2048
  %v2_804eb03 = udiv i32 %v0_804eaf8, 524288
  store i32 %v2_804eb03, i32* @ecx, align 4
  %v2_804eb06 = xor i32 %v2_804eafe, %v0_804eaf0
  %v0_804eb08 = load i32, i32* @global_var_80560d8.22, align 8
  store i32 %v0_804eb08, i32* @global_var_80560d4.20, align 4
  %v0_804eb12 = load i32, i32* @global_var_80560dc.23, align 4
  store i32 %v0_804eb12, i32* @global_var_80560d8.22, align 8
  store i32 %v0_804eaf8, i32* @global_var_80560dc.23, align 4
  %v2_804eb24 = xor i32 %v2_804eb03, %v0_804eaf8
  %v2_804eb26 = udiv i32 %v2_804eb06, 256
  %v2_804eb29 = xor i32 %v2_804eb26, %v2_804eb06
  %v2_804eb2b = xor i32 %v2_804eb29, %v2_804eb24
  store i32 %v2_804eb2b, i32* @global_var_80560e0.21, align 32
  ret i32 %v2_804eb2b

; uselistorder directives
  uselistorder i32 %v2_804eb06, { 1, 0 }
  uselistorder i32 %v2_804eb03, { 1, 0 }
  uselistorder i32 %v0_804eaf8, { 1, 2, 0 }
  uselistorder i32 %v0_804eaf0, { 1, 0 }
}

define i32 @function_804ec50() local_unnamed_addr {
dec_label_pc_804ec50:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_804ec50 = load i32, i32* @ebx, align 4
  %v0_804ec51 = load i32, i32* @eax, align 4
  store i32 %v0_804ec51, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_804ec76 = add i32 %v0_804ec51, 4
  %v2_804ec76 = inttoptr i32 %v1_804ec76 to i32*
  %v3_804ec76 = load i32, i32* %v2_804ec76, align 4
  %v10_804ec79 = icmp eq i32 %v3_804ec76, -1
  br i1 %v10_804ec79, label %dec_label_pc_804ec50.dec_label_pc_804ec8a_crit_edge, label %dec_label_pc_804ec7e

dec_label_pc_804ec50.dec_label_pc_804ec8a_crit_edge: ; preds = %dec_label_pc_804ec50
  br label %dec_label_pc_804ec8a

dec_label_pc_804ec7e:                             ; preds = %dec_label_pc_804ec50
  %v1_804ec82 = call i32 @function_80521b3(i32 %v3_804ec76)
  br label %dec_label_pc_804ec8a

dec_label_pc_804ec8a:                             ; preds = %dec_label_pc_804ec50.dec_label_pc_804ec8a_crit_edge, %dec_label_pc_804ec7e
  %v0_804ec8a = phi i32 [ -1, %dec_label_pc_804ec50.dec_label_pc_804ec8a_crit_edge ], [ %v1_804ec82, %dec_label_pc_804ec7e ]
  store i32 %v0_804ec8a, i32* %stack_var_-32, align 4
  %v4_804ec91 = call i32 @function_8052994(i32 2, i32 1, i32 0, i32 %v0_804ec8a)
  %v1_804ec99 = load i32, i32* @ebx, align 4
  %v2_804ec99 = add i32 %v1_804ec99, 4
  %v3_804ec99 = inttoptr i32 %v2_804ec99 to i32*
  store i32 %v4_804ec91, i32* %v3_804ec99, align 4
  %v1_804ec9c = add i32 %v4_804ec91, 1
  %v8_804ec9c = icmp eq i32 %v1_804ec9c, 0
  br i1 %v8_804ec9c, label %dec_label_pc_804ec8a.dec_label_pc_804ed13_crit_edge, label %dec_label_pc_804ec9f

dec_label_pc_804ec8a.dec_label_pc_804ed13_crit_edge: ; preds = %dec_label_pc_804ec8a
  br label %dec_label_pc_804ed13

dec_label_pc_804ec9f:                             ; preds = %dec_label_pc_804ec8a
  store i32 %v1_804ec9c, i32* %stack_var_-32, align 4
  %v0_804eca1 = load i32, i32* @ebx, align 4
  %v1_804eca1 = add i32 %v0_804eca1, 28
  store i32 %v1_804eca1, i32* @eax, align 4
  %v1_804eca9 = add i32 %v0_804eca1, 24
  %v2_804eca9 = inttoptr i32 %v1_804eca9 to i32*
  store i32 0, i32* %v2_804eca9, align 4
  %v0_804ecb0 = load i32, i32* @eax, align 4
  %v3_804ecb1 = load i32, i32* %stack_var_-32, align 4
  %v4_804ecb1 = call i32 @function_8051cd0(i32 %v0_804ecb0, i32 256, i32 %v1_804ec9c, i32 %v3_804ecb1)
  %v0_804ecb9 = load i32, i32* @ebx, align 4
  %v1_804ecb9 = add i32 %v0_804ecb9, 4
  %v2_804ecb9 = inttoptr i32 %v1_804ecb9 to i32*
  %v3_804ecb9 = load i32, i32* %v2_804ecb9, align 4
  %v3_804ecc1 = call i32 @function_805211d(i32 %v3_804ecb9, i32 3, i32 0)
  %v0_804ecc9 = load i32, i32* @ebx, align 4
  %v1_804ecc9 = add i32 %v0_804ecc9, 4
  %v2_804ecc9 = inttoptr i32 %v1_804ecc9 to i32*
  %v3_804ecc9 = load i32, i32* %v2_804ecc9, align 4
  %v12_804eccc = or i32 %v3_804ecc1, 2048
  %v3_804ecd3 = call i32 @function_805211d(i32 %v3_804ecc9, i32 4, i32 %v12_804eccc)
  %v0_804ecd8 = load i32, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-20, align 4
  %v0_804ecee = load i32, i32* @global_var_8056130.24, align 16
  %v2_804ecf3 = add i32 %v0_804ecd8, 8
  %v3_804ecf3 = inttoptr i32 %v2_804ecf3 to i32*
  store i32 %v0_804ecee, i32* %v3_804ecf3, align 4
  %v2_804ecf6 = ptrtoint i32* %stack_var_-20 to i32
  %v0_804ecfd = load i32, i32* @ebx, align 4
  %v1_804ecfd = add i32 %v0_804ecfd, 4
  %v2_804ecfd = inttoptr i32 %v1_804ecfd to i32*
  %v3_804ecfd = load i32, i32* %v2_804ecfd, align 4
  store i32 %v3_804ecfd, i32* %edx.global-to-local, align 4
  %v1_804ed00 = add i32 %v0_804ecfd, 12
  %v2_804ed00 = inttoptr i32 %v1_804ed00 to i32*
  store i32 1, i32* %v2_804ed00, align 4
  %v0_804ed0a = load i32, i32* %edx.global-to-local, align 4
  %v3_804ed0b = call i32 @function_80527b9(i32 %v0_804ed0a, i32 %v2_804ecf6, i32 16)
  br label %dec_label_pc_804ed13

dec_label_pc_804ed13:                             ; preds = %dec_label_pc_804ec8a.dec_label_pc_804ed13_crit_edge, %dec_label_pc_804ec9f
  %v0_804ed17 = phi i32 [ 0, %dec_label_pc_804ec8a.dec_label_pc_804ed13_crit_edge ], [ %v3_804ed0b, %dec_label_pc_804ec9f ]
  store i32 %v0_804ec50, i32* @ebx, align 4
  ret i32 %v0_804ed17

; uselistorder directives
  uselistorder i32 %v3_804ec76, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8051cd0, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804ed13, { 1, 0 }
  uselistorder label %dec_label_pc_804ec8a, { 1, 0 }
}

define i32 @function_804feb0() local_unnamed_addr {
dec_label_pc_804feb0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_8050383, %dec_label_pc_804feb0
  %v0_804feb0 = load i32, i32* @global_var_8056130.24, align 16
  store i32 %v0_804feb0, i32* @esi, align 4
  %v0_804feb6 = load i32, i32* @esp, align 4
  %v1_804feb6 = add i32 %v0_804feb6, 16
  %v2_804feb6 = inttoptr i32 %v1_804feb6 to i32*
  %v3_804feb6 = load i32, i32* %v2_804feb6, align 4
  %v15_804feb6 = icmp eq i32 %v3_804feb6, %v0_804feb0
  br i1 %v15_804feb6, label %dec_label_pc_805016f, label %dec_label_pc_804fec0

dec_label_pc_804fec0:                             ; preds = %.loopexit
  %v1_804fec0 = add i32 %v0_804feb6, 1812
  store i32 %v1_804fec0, i32* @ebp, align 4
  %v1_804fec7 = add i32 %v0_804feb6, 1856
  %v2_804fec7 = inttoptr i32 %v1_804fec7 to i32*
  store i32 0, i32* %v2_804fec7, align 4
  %v0_8050075.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050075

dec_label_pc_804fed7:                             ; preds = %dec_label_pc_80500e9
  %v11_804fed7 = icmp eq i8 %v2_80500cc, -84
  br i1 %v11_804fed7, label %dec_label_pc_8050134, label %dec_label_pc_804fee0

dec_label_pc_804fee0:                             ; preds = %dec_label_pc_804fed7
  %v10_804fee0 = icmp eq i8 %v2_80500cc, 100
  br i1 %v10_804fee0, label %dec_label_pc_804fee0.dec_label_pc_8050100_crit_edge, label %dec_label_pc_804fee9

dec_label_pc_804fee0.dec_label_pc_8050100_crit_edge: ; preds = %dec_label_pc_804fee0
  %.pre = trunc i32 %v2_80500c3 to i8
  br label %dec_label_pc_8050100

dec_label_pc_804fee9:                             ; preds = %dec_label_pc_80500f7, %dec_label_pc_804fee0
  %v11_804fee9 = icmp eq i8 %v2_80500cc, -87
  br i1 %v11_804fee9, label %dec_label_pc_805014f, label %dec_label_pc_804fef2

dec_label_pc_804fef2:                             ; preds = %dec_label_pc_8050146, %dec_label_pc_804fee9
  %v0_804fef2 = phi i32 [ %v0_8050146, %dec_label_pc_8050146 ], [ %v5_80500c1, %dec_label_pc_804fee9 ]
  %v0_804ff7a66 = phi i32 [ %v0_805013d, %dec_label_pc_8050146 ], [ %v2_80500c3, %dec_label_pc_804fee9 ]
  %v1_804fef2 = trunc i32 %v0_804fef2 to i8
  %v11_804fef2 = icmp eq i8 %v1_804fef2, -58
  br i1 %v11_804fef2, label %dec_label_pc_8050117, label %dec_label_pc_804fefb

dec_label_pc_804fefb:                             ; preds = %dec_label_pc_805014f, %dec_label_pc_805010e, %dec_label_pc_804fef2
  %v0_804fefb = phi i32 [ %v0_804fefb73, %dec_label_pc_805014f ], [ %v5_80500c1, %dec_label_pc_805010e ], [ %v0_804fef2, %dec_label_pc_804fef2 ]
  %v0_804ff7a65 = phi i32 [ %v0_805014f, %dec_label_pc_805014f ], [ %v2_80500c3, %dec_label_pc_805010e ], [ %v0_804ff7a66, %dec_label_pc_804fef2 ]
  %v1_804fefb = trunc i32 %v0_804fefb to i8
  %tmp255 = icmp ult i8 %v1_804fefb, -32
  br i1 %tmp255, label %dec_label_pc_804ff04, label %dec_label_pc_80500b6.preheader

dec_label_pc_804ff04:                             ; preds = %dec_label_pc_8050100, %dec_label_pc_8050134.dec_label_pc_804ff04_crit_edge, %dec_label_pc_8050120, %dec_label_pc_804fefb, %dec_label_pc_8050117
  %v0_804ff7a = phi i32 [ %v0_805013d, %dec_label_pc_8050134.dec_label_pc_804ff04_crit_edge ], [ %v0_8050120, %dec_label_pc_8050120 ], [ %v0_804ff7a65, %dec_label_pc_804fefb ], [ %v0_8050120, %dec_label_pc_8050117 ], [ %v2_80500c3, %dec_label_pc_8050100 ]
  %v0_804ff88 = phi i32 [ %v0_804ff04.pre, %dec_label_pc_8050134.dec_label_pc_804ff04_crit_edge ], [ %v0_804ff0462, %dec_label_pc_8050120 ], [ %v0_804fefb, %dec_label_pc_804fefb ], [ %v0_804ff0462, %dec_label_pc_8050117 ], [ %v5_80500c1, %dec_label_pc_8050100 ]
  %v1_804ff04 = add i32 %v0_804ff88, -6
  store i32 %v1_804ff04, i32* %eax.global-to-local, align 4
  %v1_804ff07 = trunc i32 %v1_804ff04 to i8
  %tmp256 = or i8 %v1_804ff07, 1
  %tmp257 = icmp eq i8 %tmp256, 1
  br i1 %tmp257, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_804ff0f

dec_label_pc_804ff0f:                             ; preds = %dec_label_pc_804ff04
  %v1_804ff0f = trunc i32 %v0_804ff88 to i8
  %v10_804ff0f = icmp eq i8 %v1_804ff0f, 11
  br i1 %v10_804ff0f, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_804ff18

dec_label_pc_804ff18:                             ; preds = %dec_label_pc_804ff0f
  %v10_804ff18 = icmp eq i8 %v1_804ff0f, 21
  br i1 %v10_804ff18, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_804ff21

dec_label_pc_804ff21:                             ; preds = %dec_label_pc_804ff18
  %v10_804ff21 = icmp eq i8 %v1_804ff0f, 22
  br i1 %v10_804ff21, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_804ff2a

dec_label_pc_804ff2a:                             ; preds = %dec_label_pc_804ff21
  %v10_804ff2a = icmp eq i8 %v1_804ff0f, 26
  br i1 %v10_804ff2a, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_804ff33

dec_label_pc_804ff33:                             ; preds = %dec_label_pc_804ff2a
  %v10_804ff33 = icmp eq i8 %v1_804ff0f, 28
  br i1 %v10_804ff33, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_804ff3c

dec_label_pc_804ff3c:                             ; preds = %dec_label_pc_804ff33
  %v10_804ff3c = icmp eq i8 %v1_804ff0f, 29
  br i1 %v10_804ff3c, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_804ff45

dec_label_pc_804ff45:                             ; preds = %dec_label_pc_804ff3c
  %v10_804ff45 = icmp eq i8 %v1_804ff0f, 30
  br i1 %v10_804ff45, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_804ff4e

dec_label_pc_804ff4e:                             ; preds = %dec_label_pc_804ff45
  %v10_804ff4e = icmp eq i8 %v1_804ff0f, 33
  br i1 %v10_804ff4e, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_804ff57

dec_label_pc_804ff57:                             ; preds = %dec_label_pc_804ff4e
  %v10_804ff57 = icmp eq i8 %v1_804ff0f, 55
  br i1 %v10_804ff57, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_804ff60

dec_label_pc_804ff60:                             ; preds = %dec_label_pc_804ff57
  %v11_804ff60 = icmp eq i8 %v1_804ff0f, -42
  br i1 %v11_804ff60, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_804ff69

dec_label_pc_804ff69:                             ; preds = %dec_label_pc_804ff60
  %v11_804ff69 = icmp eq i8 %v1_804ff0f, -41
  br i1 %v11_804ff69, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_804ff72

dec_label_pc_804ff72:                             ; preds = %dec_label_pc_804ff69
  %v0_804ff74 = load i32, i32* @edx, align 4
  store i16 0, i16* bitcast (i32* @global_var_805610a.25 to i16*), align 4
  %v1_804ff7a = mul i32 %v0_804ff7a, 65536
  %v2_804ff85 = and i32 %v1_804ff7a, 16711680
  %v2_804ff88 = mul i32 %v0_804ff88, 16777216
  %v1_804ff74 = mul i32 %v0_804ff74, 256
  %v2_804ff8e = or i32 %v2_804ff85, %v2_804ff88
  %v0_804ff90 = load i32, i32* @edi, align 4
  %v1_804ff92 = urem i32 %v0_804ff90, 256
  store i32 %v1_804ff92, i32* %eax.global-to-local, align 4
  %v2_804ff97 = or i32 %v1_804ff92, %v2_804ff8e
  store i32 %v2_804ff97, i32* %ecx.global-to-local, align 4
  %v2_804ff99 = or i32 %v1_804ff92, %v1_804ff74
  %v1_804ff9b = load i32, i32* @esp, align 4
  %v2_804ff9b = add i32 %v1_804ff9b, -4
  %v3_804ff9b = inttoptr i32 %v2_804ff9b to i32*
  store i32 %v2_804ff97, i32* %v3_804ff9b, align 4
  %v1_804ff9c = trunc i32 %v2_804ff99 to i16
  %v2_804ff9c = call i16 @llvm.bswap.i16(i16 %v1_804ff9c)
  %v3_804ff9c = zext i16 %v2_804ff9c to i32
  %v1_804ffa0 = udiv i32 %v2_804ff8e, 65536
  %v2_804ffa0 = mul nuw i32 %v3_804ff9c, 65536
  %v1_804ffa3 = trunc i32 %v1_804ffa0 to i16
  %v2_804ffa3 = call i16 @llvm.bswap.i16(i16 %v1_804ffa3)
  %v3_804ffa3 = zext i16 %v2_804ffa3 to i32
  %v6_804ffa3 = or i32 %v2_804ffa0, %v3_804ffa3
  store i32 %v6_804ffa3, i32* %edx.global-to-local, align 4
  %v0_804ffa7 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804ffa7 = add i32 %v1_804ff9b, -8
  %v3_804ffa7 = inttoptr i32 %v2_804ffa7 to i32*
  store i32 %v0_804ffa7, i32* %v3_804ffa7, align 4
  %v0_804ffa8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804ffa8, i32* @global_var_8056110.26, align 16
  %v1_804ffae = add i32 %v1_804ff9b, -12
  %v2_804ffae = inttoptr i32 %v1_804ffae to i32*
  store i32 20, i32* %v2_804ffae, align 4
  %v1_804ffb0 = add i32 %v1_804ff9b, -16
  %v2_804ffb0 = inttoptr i32 %v1_804ffb0 to i32*
  store i32 ptrtoint (i32* @global_var_8056100.27 to i32), i32* %v2_804ffb0, align 4
  %v0_804ffb5 = call i32 @function_804d5e0()
  %v1_804ffb5 = trunc i32 %v0_804ffb5 to i16
  store i32 %v0_804ffb5, i32* %eax.global-to-local, align 4
  %v0_804ffba = load i32, i32* @esp, align 4
  %v1_804ffba = add i32 %v0_804ffba, 1872
  %v2_804ffba = inttoptr i32 %v1_804ffba to i32*
  %v3_804ffba = load i32, i32* %v2_804ffba, align 4
  store i16 %v1_804ffb5, i16* bitcast (i32* @global_var_805610a.25 to i16*), align 4
  store i32 10, i32* %ecx.global-to-local, align 4
  %v2_804ffd0 = ashr i32 %v3_804ffba, 31
  %v2_804ffd6 = zext i32 %v3_804ffba to i64
  %v4_804ffd6 = zext i32 %v2_804ffd0 to i64
  %v5_804ffd6 = mul nuw i64 %v4_804ffd6, 4294967296
  %v6_804ffd6 = or i64 %v5_804ffd6, %v2_804ffd6
  %v10_804ffd6 = srem i64 %v6_804ffd6, 10
  %v11_804ffd6 = trunc i64 %v10_804ffd6 to i32
  store i32 %v11_804ffd6, i32* %edx.global-to-local, align 4
  %v1_804ffd8 = icmp eq i32 %v11_804ffd6, 0
  %v1_804ffda = icmp eq i1 %v1_804ffd8, false
  %. = select i1 %v1_804ffda, i16 5888, i16 4873
  store i16 %., i16* @global_var_8056116.28, align 2
  %v0_804ffe9 = load i32, i32* @global_var_8056110.26, align 16
  store i32 %v0_804ffe9, i32* %eax.global-to-local, align 4
  %v1_804ffee = add i32 %v0_804ffba, 12
  %v2_804ffee = inttoptr i32 %v1_804ffee to i32*
  store i32 20, i32* %v2_804ffee, align 4
  %v0_804fff0 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804fff0, i32* @global_var_8056118.29, align 8
  %v1_804fff5 = add i32 %v0_804ffba, 8
  %v2_804fff5 = inttoptr i32 %v1_804fff5 to i32*
  store i32 5120, i32* %v2_804fff5, align 4
  store i16 0, i16* bitcast (i32* @global_var_8056124.30 to i16*), align 4
  %v1_8050003 = add i32 %v0_804ffba, 4
  %v2_8050003 = inttoptr i32 %v1_8050003 to i32*
  store i32 ptrtoint (i32* @global_var_8056114.31 to i32), i32* %v2_8050003, align 4
  %v2_8050008 = inttoptr i32 %v0_804ffba to i32*
  store i32 ptrtoint (i32* @global_var_8056100.27 to i32), i32* %v2_8050008, align 4
  %v0_805000d = call i32 @function_804d630()
  %v1_805000d = trunc i32 %v0_805000d to i16
  store i16 %v1_805000d, i16* bitcast (i32* @global_var_8056124.30 to i16*), align 4
  %v0_8050018 = load i32, i32* @global_var_8056110.26, align 16
  store i32 %v0_8050018, i32* %eax.global-to-local, align 4
  %v1_805001d = load i32, i32* @esp, align 4
  %v2_805001d = add i32 %v1_805001d, 1832
  %v3_805001d = inttoptr i32 %v2_805001d to i32*
  store i32 %v0_8050018, i32* %v3_805001d, align 4
  %v0_8050024 = load i16, i16* @global_var_8056116.28, align 2
  %v1_8050024 = zext i16 %v0_8050024 to i32
  %v2_8050024 = load i32, i32* %eax.global-to-local, align 4
  %v3_8050024 = and i32 %v2_8050024, -65536
  %v4_8050024 = or i32 %v3_8050024, %v1_8050024
  store i32 %v4_8050024, i32* %eax.global-to-local, align 4
  %v0_805002a = load i32, i32* @esp, align 4
  %v1_805002a = add i32 %v0_805002a, 1828
  %v2_805002a = inttoptr i32 %v1_805002a to i16*
  store i16 2, i16* %v2_805002a, align 2
  %v0_8050034 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050034 = trunc i32 %v0_8050034 to i16
  %v2_8050034 = load i32, i32* @esp, align 4
  %v3_8050034 = add i32 %v2_8050034, 1830
  %v4_8050034 = inttoptr i32 %v3_8050034 to i16*
  store i16 %v1_8050034, i16* %v4_8050034, align 2
  %v0_805003c = load i32, i32* @esp, align 4
  %v1_805003c = inttoptr i32 %v0_805003c to i32*
  %v3_805003c = add i32 %v0_805003c, 4
  %v0_805003d = load i32, i32* @global_var_8056178.32, align 8
  store i32 %v0_805003d, i32* %eax.global-to-local, align 4
  %v1_8050042 = inttoptr i32 %v3_805003c to i32*
  %v2_8050042 = load i32, i32* %v1_8050042, align 4
  store i32 %v2_8050042, i32* %edx.global-to-local, align 4
  store i32 16, i32* %v1_8050042, align 4
  %v0_8050045 = load i32, i32* @ebp, align 4
  store i32 %v0_8050045, i32* %v1_805003c, align 4
  %v1_8050046 = add i32 %v0_805003c, -4
  %v2_8050046 = inttoptr i32 %v1_8050046 to i32*
  store i32 16384, i32* %v2_8050046, align 4
  %v1_805004b = add i32 %v0_805003c, -8
  %v2_805004b = inttoptr i32 %v1_805004b to i32*
  store i32 40, i32* %v2_805004b, align 4
  %v1_805004d = add i32 %v0_805003c, -12
  %v2_805004d = inttoptr i32 %v1_805004d to i32*
  store i32 ptrtoint (i32* @global_var_8056100.27 to i32), i32* %v2_805004d, align 4
  %v0_8050052 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050052 = add i32 %v0_805003c, -16
  %v3_8050052 = inttoptr i32 %v2_8050052 to i32*
  store i32 %v0_8050052, i32* %v3_8050052, align 4
  %v0_8050053 = call i32 @function_8052916()
  store i32 %v0_8050053, i32* %eax.global-to-local, align 4
  %v0_8050058 = load i32, i32* @esp, align 4
  %v1_8050058 = add i32 %v0_8050058, 1888
  %v2_8050058 = inttoptr i32 %v1_8050058 to i32*
  %v3_8050058 = load i32, i32* %v2_8050058, align 4
  %v1_805005f = add i32 %v3_8050058, 1
  store i32 %v1_805005f, i32* %eax.global-to-local, align 4
  store i32 %v1_805005f, i32* %v2_8050058, align 4
  %v0_8050067 = load i32, i32* @esp, align 4
  %v1_8050067 = add i32 %v0_8050067, 32
  %v0_805006a = load i32, i32* %eax.global-to-local, align 4
  %v1_805006a = add i32 %v0_805006a, -383
  %v6_805006a = sub i32 382, %v0_805006a
  %v7_805006a = and i32 %v6_805006a, %v0_805006a
  %v8_805006a = icmp slt i32 %v7_805006a, 0
  %v9_805006a = icmp eq i32 %v1_805006a, 0
  %v10_805006a = icmp slt i32 %v1_805006a, 0
  %v3_805006f = icmp eq i1 %v10_805006a, %v8_805006a
  %v4_805006f = icmp eq i1 %v9_805006a, false
  %v5_805006f = and i1 %v4_805006f, %v3_805006f
  br i1 %v5_805006f, label %dec_label_pc_805016b, label %dec_label_pc_8050075

dec_label_pc_8050075:                             ; preds = %dec_label_pc_804ff72, %dec_label_pc_804fec0
  %v0_8050075 = phi i32 [ %v1_8050067, %dec_label_pc_804ff72 ], [ %v0_8050075.pre, %dec_label_pc_804fec0 ]
  %v1_8050075 = add i32 %v0_8050075, 1812
  %v2_8050075 = inttoptr i32 %v1_8050075 to i32*
  store i32 0, i32* %v2_8050075, align 4
  %v0_8050080 = load i32, i32* @esp, align 4
  %v1_8050080 = add i32 %v0_8050080, 1816
  %v2_8050080 = inttoptr i32 %v1_8050080 to i32*
  store i32 0, i32* %v2_8050080, align 4
  %v0_805008b = load i32, i32* @esp, align 4
  %v1_805008b = add i32 %v0_805008b, 1820
  %v2_805008b = inttoptr i32 %v1_805008b to i32*
  store i32 0, i32* %v2_805008b, align 4
  %v0_8050096 = load i32, i32* @esp, align 4
  %v1_8050096 = add i32 %v0_8050096, 1824
  %v2_8050096 = inttoptr i32 %v1_8050096 to i32*
  store i32 0, i32* %v2_8050096, align 4
  %v0_80500a1 = call i32 @function_804eaf0()
  %v1_80500a1 = trunc i32 %v0_80500a1 to i16
  store i16 %v1_80500a1, i16* bitcast (i32* @global_var_8056104.33 to i16*), align 4
  %v0_80500ac = load i32, i32* @global_var_805615c.34, align 4
  store i32 %v0_80500ac, i32* %eax.global-to-local, align 4
  store i32 %v0_80500ac, i32* @global_var_805610c.35, align 4
  br label %dec_label_pc_80500b6.preheader

dec_label_pc_80500b6.preheader:                   ; preds = %dec_label_pc_8050075, %dec_label_pc_804ff04, %dec_label_pc_804ff0f, %dec_label_pc_804ff18, %dec_label_pc_804ff21, %dec_label_pc_804ff2a, %dec_label_pc_804ff33, %dec_label_pc_804ff3c, %dec_label_pc_804ff45, %dec_label_pc_804ff4e, %dec_label_pc_804ff57, %dec_label_pc_804ff60, %dec_label_pc_804ff69, %dec_label_pc_8050120, %dec_label_pc_805013d, %dec_label_pc_804fefb, %dec_label_pc_805014f
  br label %dec_label_pc_80500b6

dec_label_pc_80500b6:                             ; preds = %dec_label_pc_8050109, %dec_label_pc_80500f2, %dec_label_pc_80500e4, %dec_label_pc_80500df, %dec_label_pc_80500d8, %dec_label_pc_80500d4, %dec_label_pc_80500d0, %dec_label_pc_80500b6, %dec_label_pc_80500b6.preheader
  %v0_80500b6 = call i32 @function_804eaf0()
  store i32 %v0_80500b6, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_80500b6, 65536
  %v1_80500bb = sdiv i32 %sext, 65536
  %v2_80500c1 = urem i32 %v0_80500b6, 256
  %v3_80500c1 = load i32, i32* @ecx, align 4
  %v4_80500c1 = and i32 %v3_80500c1, -256
  %v5_80500c1 = or i32 %v4_80500c1, %v2_80500c1
  store i32 %v5_80500c1, i32* @ecx, align 4
  %v2_80500c3 = udiv i32 %v1_80500bb, 256
  store i32 %v2_80500c3, i32* @ebx, align 4
  %v2_80500c6 = udiv i32 %v1_80500bb, 65536
  store i32 %v2_80500c6, i32* @edx, align 4
  %v2_80500c9 = udiv i32 %v1_80500bb, 16777216
  store i32 %v2_80500c9, i32* @edi, align 4
  %v2_80500cc = trunc i32 %v0_80500b6 to i8
  %v11_80500cc = icmp eq i8 %v2_80500cc, 127
  br i1 %v11_80500cc, label %dec_label_pc_80500b6, label %dec_label_pc_80500d0

dec_label_pc_80500d0:                             ; preds = %dec_label_pc_80500b6
  %v6_80500d0 = icmp eq i8 %v2_80500cc, 0
  br i1 %v6_80500d0, label %dec_label_pc_80500b6, label %dec_label_pc_80500d4

dec_label_pc_80500d4:                             ; preds = %dec_label_pc_80500d0
  %v11_80500d4 = icmp eq i8 %v2_80500cc, 3
  br i1 %v11_80500d4, label %dec_label_pc_80500b6, label %dec_label_pc_80500d8

dec_label_pc_80500d8:                             ; preds = %dec_label_pc_80500d4
  %v2_80500d8 = add nsw i32 %v1_80500bb, -15
  store i32 %v2_80500d8, i32* %eax.global-to-local, align 4
  %v1_80500db = trunc i32 %v2_80500d8 to i8
  %tmp258 = or i8 %v1_80500db, 1
  %tmp259 = icmp eq i8 %tmp258, 1
  br i1 %tmp259, label %dec_label_pc_80500b6, label %dec_label_pc_80500df

dec_label_pc_80500df:                             ; preds = %dec_label_pc_80500d8
  %v10_80500df = icmp eq i8 %v2_80500cc, 56
  br i1 %v10_80500df, label %dec_label_pc_80500b6, label %dec_label_pc_80500e4

dec_label_pc_80500e4:                             ; preds = %dec_label_pc_80500df
  %v10_80500e4 = icmp eq i8 %v2_80500cc, 10
  br i1 %v10_80500e4, label %dec_label_pc_80500b6, label %dec_label_pc_80500e9

dec_label_pc_80500e9:                             ; preds = %dec_label_pc_80500e4
  %v8_80500e9 = icmp eq i8 %v2_80500cc, -64
  %v1_80500ec = icmp eq i1 %v8_80500e9, false
  br i1 %v1_80500ec, label %dec_label_pc_804fed7, label %dec_label_pc_80500f2

dec_label_pc_80500f2:                             ; preds = %dec_label_pc_80500e9
  %v1_80500f2 = trunc i32 %v2_80500c3 to i8
  %v11_80500f2 = icmp eq i8 %v1_80500f2, -88
  br i1 %v11_80500f2, label %dec_label_pc_80500b6, label %dec_label_pc_80500f7

dec_label_pc_80500f7:                             ; preds = %dec_label_pc_80500f2
  %v10_80500f7 = icmp eq i8 %v2_80500cc, 100
  %v1_80500fa = icmp eq i1 %v10_80500f7, false
  br i1 %v1_80500fa, label %dec_label_pc_804fee9, label %dec_label_pc_8050100

dec_label_pc_8050100:                             ; preds = %dec_label_pc_804fee0.dec_label_pc_8050100_crit_edge, %dec_label_pc_80500f7
  %v1_8050100.pre-phi = phi i8 [ %.pre, %dec_label_pc_804fee0.dec_label_pc_8050100_crit_edge ], [ %v1_80500f2, %dec_label_pc_80500f7 ]
  %tmp260 = icmp ult i8 %v1_8050100.pre-phi, 64
  br i1 %tmp260, label %dec_label_pc_804ff04, label %dec_label_pc_8050109

dec_label_pc_8050109:                             ; preds = %dec_label_pc_8050100
  %tmp261 = icmp ult i8 %v1_8050100.pre-phi, 127
  br i1 %tmp261, label %dec_label_pc_80500b6, label %dec_label_pc_805010e

dec_label_pc_805010e:                             ; preds = %dec_label_pc_8050109
  %v11_805010e = icmp eq i8 %v2_80500cc, -58
  %v1_8050111 = icmp eq i1 %v11_805010e, false
  br i1 %v1_8050111, label %dec_label_pc_804fefb, label %dec_label_pc_8050117

dec_label_pc_8050117:                             ; preds = %dec_label_pc_805010e, %dec_label_pc_804fef2
  %v0_8050120 = phi i32 [ %v2_80500c3, %dec_label_pc_805010e ], [ %v0_804ff7a66, %dec_label_pc_804fef2 ]
  %v0_804ff0462 = phi i32 [ %v5_80500c1, %dec_label_pc_805010e ], [ %v0_804fef2, %dec_label_pc_804fef2 ]
  %v1_8050117 = trunc i32 %v0_8050120 to i8
  %tmp262 = icmp ult i8 %v1_8050117, 18
  br i1 %tmp262, label %dec_label_pc_804ff04, label %dec_label_pc_8050120

dec_label_pc_8050120:                             ; preds = %dec_label_pc_8050117
  %tmp263 = or i8 %v1_8050117, 1
  %tmp264 = icmp eq i8 %tmp263, 19
  br i1 %tmp264, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_804ff04

dec_label_pc_805012a:                             ; preds = %dec_label_pc_8050faa
  store i32 0, i32* %v2_805012d, align 4
  %v1_805012f = call i32 @function_8053b8d(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805012f, i32* %eax.global-to-local, align 4
  %v0_8050134.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050134

dec_label_pc_8050134:                             ; preds = %dec_label_pc_804fed7, %dec_label_pc_805012a
  %v0_805013d = phi i32 [ %v0_8050134.pre, %dec_label_pc_805012a ], [ %v2_80500c3, %dec_label_pc_804fed7 ]
  %v1_8050134 = trunc i32 %v0_805013d to i8
  %tmp265 = icmp ult i8 %v1_8050134, 16
  br i1 %tmp265, label %dec_label_pc_8050134.dec_label_pc_804ff04_crit_edge, label %dec_label_pc_805013d

dec_label_pc_8050134.dec_label_pc_804ff04_crit_edge: ; preds = %dec_label_pc_8050134
  %v0_804ff04.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804ff04

dec_label_pc_805013d:                             ; preds = %dec_label_pc_8050134
  %tmp266 = icmp ult i8 %v1_8050134, 32
  br i1 %tmp266, label %dec_label_pc_80500b6.preheader, label %dec_label_pc_8050146

dec_label_pc_8050146:                             ; preds = %dec_label_pc_805013d
  %v0_8050146 = load i32, i32* @ecx, align 4
  %v1_8050146 = trunc i32 %v0_8050146 to i8
  %v11_8050146 = icmp eq i8 %v1_8050146, -87
  %v1_8050149 = icmp eq i1 %v11_8050146, false
  br i1 %v1_8050149, label %dec_label_pc_804fef2, label %dec_label_pc_805014f

dec_label_pc_805014f:                             ; preds = %dec_label_pc_8050146, %dec_label_pc_804fee9
  %v0_804fefb73 = phi i32 [ %v0_8050146, %dec_label_pc_8050146 ], [ %v5_80500c1, %dec_label_pc_804fee9 ]
  %v0_805014f = phi i32 [ %v0_805013d, %dec_label_pc_8050146 ], [ %v2_80500c3, %dec_label_pc_804fee9 ]
  %v1_805014f = trunc i32 %v0_805014f to i8
  %v11_805014f = icmp eq i8 %v1_805014f, -1
  %v1_8050152 = icmp eq i1 %v11_805014f, false
  br i1 %v1_8050152, label %dec_label_pc_804fefb, label %dec_label_pc_80500b6.preheader

dec_label_pc_805016b:                             ; preds = %dec_label_pc_804ff72
  %v0_805016b = load i32, i32* @esi, align 4
  %v2_805016b = add i32 %v0_8050067, 48
  %v3_805016b = inttoptr i32 %v2_805016b to i32*
  store i32 %v0_805016b, i32* %v3_805016b, align 4
  br label %dec_label_pc_805016f

dec_label_pc_805016f:                             ; preds = %.loopexit, %dec_label_pc_805016b
  %v1_805016f = call i32 @function_80526bd(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805016f, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8050176 = load i32, i32* @esp, align 4
  %v2_8050176 = add i32 %v1_8050176, 24
  %v3_8050176 = inttoptr i32 %v2_8050176 to i32*
  store i32 %v1_805016f, i32* %v3_8050176, align 4
  br label %dec_label_pc_805017a

dec_label_pc_805017a:                             ; preds = %dec_label_pc_8050217, %dec_label_pc_805020f, %dec_label_pc_8050207, %dec_label_pc_80501ff, %dec_label_pc_80501f3, %dec_label_pc_80501e7, %dec_label_pc_80501e0, %dec_label_pc_80501ce, %dec_label_pc_80501c2, %dec_label_pc_80501bd, %dec_label_pc_8050279, %dec_label_pc_805016f
  %v0_805017a = load i32, i32* @esp, align 4
  %v1_805017a = add i32 %v0_805017a, 24
  %v2_805017a = inttoptr i32 %v1_805017a to i32*
  %v3_805017a = load i32, i32* %v2_805017a, align 4
  store i32 %v3_805017a, i32* %eax.global-to-local, align 4
  %v1_805017e = inttoptr i32 %v3_805017a to i32*
  store i32 0, i32* %v1_805017e, align 4
  %v0_8050184 = load i32, i32* @edi, align 4
  %v1_8050184 = load i32, i32* @esp, align 4
  %v2_8050184 = add i32 %v1_8050184, -4
  %v3_8050184 = inttoptr i32 %v2_8050184 to i32*
  store i32 %v0_8050184, i32* %v3_8050184, align 4
  %v0_8050185 = load i32, i32* @edi, align 4
  %v2_8050185 = add i32 %v1_8050184, -8
  %v3_8050185 = inttoptr i32 %v2_8050185 to i32*
  store i32 %v0_8050185, i32* %v3_8050185, align 4
  %v1_8050186 = add i32 %v1_8050184, -12
  %v2_8050186 = inttoptr i32 %v1_8050186 to i32*
  store i32 0, i32* %v2_8050186, align 4
  %v1_8050188 = add i32 %v1_8050184, -16
  %v2_8050188 = inttoptr i32 %v1_8050188 to i32*
  store i32 0, i32* %v2_8050188, align 4
  %v1_805018a = add i32 %v1_8050184, -20
  %v2_805018a = inttoptr i32 %v1_805018a to i32*
  store i32 16384, i32* %v2_805018a, align 4
  %v1_805018f = add i32 %v1_8050184, -24
  %v2_805018f = inttoptr i32 %v1_805018f to i32*
  store i32 1514, i32* %v2_805018f, align 4
  %v0_8050194 = load i32, i32* @global_var_8056178.32, align 8
  store i32 %v0_8050194, i32* %esi.global-to-local, align 4
  %v1_805019a = add i32 %v1_8050184, 42
  store i32 %v1_805019a, i32* %edx.global-to-local, align 4
  %v2_805019e = add i32 %v1_8050184, -28
  %v3_805019e = inttoptr i32 %v2_805019e to i32*
  store i32 %v1_805019a, i32* %v3_805019e, align 4
  %v0_805019f = load i32, i32* %esi.global-to-local, align 4
  %v2_805019f = add i32 %v1_8050184, -32
  %v3_805019f = inttoptr i32 %v2_805019f to i32*
  store i32 %v0_805019f, i32* %v3_805019f, align 4
  %v0_80501a0 = call i32 @function_80528a0()
  store i32 %v0_80501a0, i32* %eax.global-to-local, align 4
  %v0_80501a5 = load i32, i32* @esp, align 4
  %tmp = icmp slt i32 %v0_80501a0, 1
  br i1 %tmp, label %dec_label_pc_8050290, label %dec_label_pc_80501b0

dec_label_pc_80501b0:                             ; preds = %dec_label_pc_805017a
  %v1_80501b0 = add i32 %v0_80501a5, 56
  %v2_80501b0 = inttoptr i32 %v1_80501b0 to i32*
  %v3_80501b0 = load i32, i32* %v2_80501b0, align 4
  store i32 %v3_80501b0, i32* %ecx.global-to-local, align 4
  %v1_80501b4 = inttoptr i32 %v3_80501b0 to i32*
  %v2_80501b4 = load i32, i32* %v1_80501b4, align 4
  %v11_80501b4 = icmp eq i32 %v2_80501b4, 11
  br i1 %v11_80501b4, label %dec_label_pc_8050290, label %dec_label_pc_80501bd

dec_label_pc_80501bd:                             ; preds = %dec_label_pc_80501b0
  %tmp267 = icmp ult i32 %v0_80501a0, 40
  br i1 %tmp267, label %dec_label_pc_805017a, label %dec_label_pc_80501c2

dec_label_pc_80501c2:                             ; preds = %dec_label_pc_80501bd
  %v1_80501c2 = add i32 %v0_80501a5, 90
  %v2_80501c2 = inttoptr i32 %v1_80501c2 to i32*
  %v3_80501c2 = load i32, i32* %v2_80501c2, align 4
  store i32 %v3_80501c2, i32* %eax.global-to-local, align 4
  %v1_80501c6 = load i32, i32* @global_var_805615c.34, align 4
  %v12_80501c6 = icmp eq i32 %v3_80501c2, %v1_80501c6
  %v1_80501cc = icmp eq i1 %v12_80501c6, false
  br i1 %v1_80501cc, label %dec_label_pc_805017a, label %dec_label_pc_80501ce

dec_label_pc_80501ce:                             ; preds = %dec_label_pc_80501c2
  %v1_80501ce = add i32 %v0_80501a5, 83
  %v2_80501ce = inttoptr i32 %v1_80501ce to i8*
  %v3_80501ce = load i8, i8* %v2_80501ce, align 1
  %v12_80501ce = icmp eq i8 %v3_80501ce, 6
  %v1_80501d3 = icmp eq i1 %v12_80501ce, false
  br i1 %v1_80501d3, label %dec_label_pc_805017a, label %dec_label_pc_80501d5

dec_label_pc_80501d5:                             ; preds = %dec_label_pc_80501ce
  %v1_80501d5 = add i32 %v0_80501a5, 94
  %v2_80501d5 = inttoptr i32 %v1_80501d5 to i32*
  %v3_80501d5 = load i32, i32* %v2_80501d5, align 4
  store i32 %v3_80501d5, i32* %esi.global-to-local, align 4
  %v1_80501d9 = trunc i32 %v3_80501d5 to i16
  %v7_80501d9 = icmp eq i16 %v1_80501d9, 5888
  br i1 %v7_80501d9, label %dec_label_pc_80501e7, label %dec_label_pc_80501e0

dec_label_pc_80501e0:                             ; preds = %dec_label_pc_80501d5
  %v10_80501e0 = icmp eq i16 %v1_80501d9, 4873
  %v1_80501e5 = icmp eq i1 %v10_80501e0, false
  br i1 %v1_80501e5, label %dec_label_pc_805017a, label %dec_label_pc_80501e7

dec_label_pc_80501e7:                             ; preds = %dec_label_pc_80501e0, %dec_label_pc_80501d5
  %v1_80501e7 = add i32 %v0_80501a5, 46
  %v2_80501e7 = inttoptr i32 %v1_80501e7 to i16*
  %v3_80501e7 = load i16, i16* %v2_80501e7, align 2
  %v4_80501e7 = zext i16 %v3_80501e7 to i32
  %v6_80501e7 = and i32 %v3_80501c2, -65536
  %v7_80501e7 = or i32 %v4_80501e7, %v6_80501e7
  store i32 %v7_80501e7, i32* %eax.global-to-local, align 4
  %v3_80501ec = add i32 %v0_80501a5, 96
  %v4_80501ec = inttoptr i32 %v3_80501ec to i16*
  %v5_80501ec = load i16, i16* %v4_80501ec, align 2
  %v16_80501ec = icmp eq i16 %v3_80501e7, %v5_80501ec
  %v1_80501f1 = icmp eq i1 %v16_80501ec, false
  br i1 %v1_80501f1, label %dec_label_pc_805017a, label %dec_label_pc_80501f3

dec_label_pc_80501f3:                             ; preds = %dec_label_pc_80501e7
  %v1_80501f3 = add i32 %v0_80501a5, 107
  %v2_80501f3 = inttoptr i32 %v1_80501f3 to i8*
  %v3_80501f3 = load i8, i8* %v2_80501f3, align 1
  %v4_80501f3 = zext i8 %v3_80501f3 to i32
  %v6_80501f3 = and i32 %v7_80501e7, -256
  %v7_80501f3 = or i32 %v4_80501f3, %v6_80501f3
  store i32 %v7_80501f3, i32* %eax.global-to-local, align 4
  %v2_80501f7 = and i8 %v3_80501f3, 2
  %v3_80501f7 = icmp eq i8 %v2_80501f7, 0
  br i1 %v3_80501f7, label %dec_label_pc_805017a, label %dec_label_pc_80501ff

dec_label_pc_80501ff:                             ; preds = %dec_label_pc_80501f3
  %v2_80501ff = and i32 %v4_80501f3, 16
  %v3_80501ff = icmp eq i32 %v2_80501ff, 0
  br i1 %v3_80501ff, label %dec_label_pc_805017a, label %dec_label_pc_8050207

dec_label_pc_8050207:                             ; preds = %dec_label_pc_80501ff
  %v2_8050207 = and i32 %v4_80501f3, 4
  %v3_8050207 = icmp eq i32 %v2_8050207, 0
  %v1_8050209 = icmp eq i1 %v3_8050207, false
  br i1 %v1_8050209, label %dec_label_pc_805017a, label %dec_label_pc_805020f

dec_label_pc_805020f:                             ; preds = %dec_label_pc_8050207
  %tmp274 = urem i8 %v3_80501f3, 2
  %v3_805020f = icmp eq i8 %tmp274, 0
  %v1_8050211 = icmp eq i1 %v3_805020f, false
  br i1 %v1_8050211, label %dec_label_pc_805017a, label %dec_label_pc_8050217

dec_label_pc_8050217:                             ; preds = %dec_label_pc_805020f
  %v1_8050217 = add i32 %v0_80501a5, 102
  %v2_8050217 = inttoptr i32 %v1_8050217 to i32*
  %v3_8050217 = load i32, i32* %v2_8050217, align 4
  %v1_805021b = trunc i32 %v3_8050217 to i16
  %v2_805021b = call i16 @llvm.bswap.i16(i16 %v1_805021b)
  %v3_805021b = zext i16 %v2_805021b to i32
  %v1_805021f = udiv i32 %v3_8050217, 65536
  %v2_805021f = mul nuw i32 %v3_805021b, 65536
  %v1_8050222 = trunc i32 %v1_805021f to i16
  %v2_8050222 = call i16 @llvm.bswap.i16(i16 %v1_8050222)
  %v3_8050222 = zext i16 %v2_8050222 to i32
  %v6_8050222 = or i32 %v3_8050222, %v2_805021f
  store i32 %v6_8050222, i32* %eax.global-to-local, align 4
  %v1_8050226 = add i32 %v6_8050222, -1
  %v1_8050229 = trunc i32 %v1_8050226 to i16
  %v2_8050229 = call i16 @llvm.bswap.i16(i16 %v1_8050229)
  %v3_8050229 = zext i16 %v2_8050229 to i32
  %v1_805022d = udiv i32 %v1_8050226, 65536
  %v2_805022d = mul nuw i32 %v3_8050229, 65536
  %v1_8050230 = trunc i32 %v1_805022d to i16
  %v2_8050230 = call i16 @llvm.bswap.i16(i16 %v1_8050230)
  %v3_8050230 = zext i16 %v2_8050230 to i32
  %v6_8050230 = or i32 %v3_8050230, %v2_805022d
  store i32 %v6_8050230, i32* %edx.global-to-local, align 4
  %v1_8050234 = add i32 %v0_80501a5, 86
  %v2_8050234 = inttoptr i32 %v1_8050234 to i32*
  %v3_8050234 = load i32, i32* %v2_8050234, align 4
  %v15_8050234 = icmp eq i32 %v3_8050234, %v6_8050230
  %v1_8050238 = icmp eq i1 %v15_8050234, false
  br i1 %v1_8050238, label %dec_label_pc_805017a, label %dec_label_pc_805023e

dec_label_pc_805023e:                             ; preds = %dec_label_pc_8050217
  %v0_805023e = load i32, i32* @ebx, align 4
  %v1_805023e = add i32 %v0_805023e, -255
  %v6_805023e = sub i32 254, %v0_805023e
  %v7_805023e = and i32 %v6_805023e, %v0_805023e
  %v8_805023e = icmp slt i32 %v7_805023e, 0
  %v9_805023e = icmp eq i32 %v1_805023e, 0
  %v10_805023e = icmp slt i32 %v1_805023e, 0
  %v3_8050244 = icmp eq i1 %v10_805023e, %v8_805023e
  %v4_8050244 = icmp eq i1 %v9_805023e, false
  %v5_8050244 = and i1 %v4_8050244, %v3_8050244
  br i1 %v5_8050244, label %dec_label_pc_8050290, label %dec_label_pc_8050246

dec_label_pc_8050246:                             ; preds = %dec_label_pc_805023e
  %v0_8050249 = load i32, i32* @global_var_8056174.36, align 4
  store i32 %v0_8050249, i32* %ecx.global-to-local, align 4
  %v2_805024f = mul i32 %v0_805023e, 288
  %v2_8050252 = add i32 %v0_8050249, %v2_805024f
  store i32 %v2_8050252, i32* @eax, align 4
  %v1_8050254 = add i32 %v2_8050252, 12
  %v2_8050254 = inttoptr i32 %v1_8050254 to i32*
  %v3_8050254 = load i32, i32* %v2_8050254, align 4
  %v1_8050257 = add i32 %v2_8050252, 288
  store i32 %v1_8050257, i32* %ecx.global-to-local, align 4
  %v1_805025d = icmp eq i32 %v3_8050254, 0
  br i1 %v1_805025d, label %dec_label_pc_8050279, label %dec_label_pc_8050261

dec_label_pc_8050261:                             ; preds = %dec_label_pc_8050246, %dec_label_pc_805026a
  %v0_805026a = phi i32 [ %v1_805026c, %dec_label_pc_805026a ], [ %v1_8050257, %dec_label_pc_8050246 ]
  %v0_8050261 = phi i32 [ %v1_8050261, %dec_label_pc_805026a ], [ %v0_805023e, %dec_label_pc_8050246 ]
  %v1_8050261 = add i32 %v0_8050261, 1
  store i32 %v1_8050261, i32* @ebx, align 4
  %v6_8050262 = icmp eq i32 %v0_8050261, 255
  br i1 %v6_8050262, label %dec_label_pc_8050290.loopexit, label %dec_label_pc_805026a

dec_label_pc_805026a:                             ; preds = %dec_label_pc_8050261
  store i32 %v0_805026a, i32* @eax, align 4
  %v1_805026c = add i32 %v0_805026a, 288
  store i32 %v1_805026c, i32* %ecx.global-to-local, align 4
  %v1_8050272 = add i32 %v0_805026a, 12
  %v2_8050272 = inttoptr i32 %v1_8050272 to i32*
  %v3_8050272 = load i32, i32* %v2_8050272, align 4
  store i32 %v3_8050272, i32* @edi, align 4
  %v1_8050275 = icmp eq i32 %v3_8050272, 0
  %v1_8050277 = icmp eq i1 %v1_8050275, false
  br i1 %v1_8050277, label %dec_label_pc_8050261, label %dec_label_pc_8050279.loopexit

dec_label_pc_8050279.loopexit:                    ; preds = %dec_label_pc_805026a
  br label %dec_label_pc_8050279

dec_label_pc_8050279:                             ; preds = %dec_label_pc_8050279.loopexit, %dec_label_pc_8050246
  %v1_8050279 = phi i32 [ %v0_805026a, %dec_label_pc_8050279.loopexit ], [ %v2_8050252, %dec_label_pc_8050246 ]
  %v2_8050279 = add i32 %v1_8050279, 16
  %v3_8050279 = inttoptr i32 %v2_8050279 to i32*
  store i32 %v6_8050230, i32* %v3_8050279, align 4
  %v0_805027c = load i32, i32* %esi.global-to-local, align 4
  %v1_805027c = trunc i32 %v0_805027c to i16
  %v2_805027c = load i32, i32* @eax, align 4
  %v3_805027c = add i32 %v2_805027c, 20
  %v4_805027c = inttoptr i32 %v3_805027c to i16*
  store i16 %v1_805027c, i16* %v4_805027c, align 2
  %v0_8050280 = call i32 @function_804ec50()
  store i32 %v0_8050280, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805017a

dec_label_pc_8050290.loopexit:                    ; preds = %dec_label_pc_8050261
  br label %dec_label_pc_8050290

dec_label_pc_8050290:                             ; preds = %dec_label_pc_805023e, %dec_label_pc_80501b0, %dec_label_pc_805017a, %dec_label_pc_8050290.loopexit
  store i32 32, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_8050299 = add i32 %v0_80501a5, 36
  %v2_8050299 = inttoptr i32 %v1_8050299 to i32*
  %v3_8050299 = load i32, i32* %v2_8050299, align 4
  %v4_8050299 = inttoptr i32 %v3_8050299 to i8*
  %v5_805029e = call i8* @_memset(i8* %v4_8050299, i32 0, i32 32)
  %v0_80502a0 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80502a0, i32* %ecx.global-to-local, align 4
  %v0_80502a2 = load i32, i32* @esp, align 4
  %v1_80502a2 = inttoptr i32 %v0_80502a2 to i32*
  %v2_80502a2 = load i32, i32* %v1_80502a2, align 4
  %v3_80502a2 = inttoptr i32 %v2_80502a2 to i8*
  %v2_80502a6 = load i32, i32* %eax.global-to-local, align 4
  %v5_80502a6 = call i8* @_memset(i8* %v3_80502a2, i32 %v2_80502a6, i32 %v0_80502a0)
  %v6_80502a6 = ptrtoint i8* %v5_80502a6 to i32
  store i32 %v6_80502a6, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v0_80502aa = load i32, i32* @esp, align 4
  %v1_80502aa = add i32 %v0_80502aa, 1856
  %v2_80502aa = inttoptr i32 %v1_80502aa to i32*
  store i32 0, i32* %v2_80502aa, align 4
  store i32 0, i32* @esi, align 4
  %v0_80502b7.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80502b7

dec_label_pc_80502b7:                             ; preds = %dec_label_pc_805030a, %dec_label_pc_8050290
  %v0_80502b7 = phi i32 [ %v0_8050319, %dec_label_pc_805030a ], [ %v0_80502b7.pre, %dec_label_pc_8050290 ]
  %v0_80502ba = load i32, i32* @global_var_8056174.36, align 4
  store i32 %v0_80502ba, i32* %eax.global-to-local, align 4
  %v2_80502bf = mul i32 %v0_80502b7, 288
  store i32 30, i32* %ecx.global-to-local, align 4
  %v2_80502c7 = add i32 %v0_80502ba, %v2_80502bf
  store i32 %v2_80502c7, i32* @ebx, align 4
  %v1_80502c9 = add i32 %v2_80502c7, 12
  %v2_80502c9 = inttoptr i32 %v1_80502c9 to i32*
  %v3_80502c9 = load i32, i32* %v2_80502c9, align 4
  store i32 %v3_80502c9, i32* %edx.global-to-local, align 4
  %v1_80502cc = add i32 %v3_80502c9, -1
  %v5_80502cc = icmp eq i32 %v3_80502c9, 0
  %v9_80502cc = icmp eq i32 %v1_80502cc, 0
  %v2_80502cf = or i1 %v5_80502cc, %v9_80502cc
  br i1 %v2_80502cf, label %dec_label_pc_8050da7, label %dec_label_pc_80502d5

dec_label_pc_80502d5:                             ; preds = %dec_label_pc_80502b7, %dec_label_pc_8050daf
  %v1_80502df = phi i32 [ 30, %dec_label_pc_80502b7 ], [ 5, %dec_label_pc_8050daf ]
  %v0_80502d5 = load i32, i32* @global_var_8056130.24, align 16
  store i32 %v0_80502d5, i32* %eax.global-to-local, align 4
  %v1_80502da = add i32 %v2_80502c7, 8
  %v2_80502da = inttoptr i32 %v1_80502da to i32*
  %v3_80502da = load i32, i32* %v2_80502da, align 4
  %v2_80502dd = sub i32 %v0_80502d5, %v3_80502da
  store i32 %v2_80502dd, i32* %eax.global-to-local, align 4
  %tmp268 = icmp ugt i32 %v2_80502dd, %v1_80502df
  br i1 %tmp268, label %dec_label_pc_8050e70, label %dec_label_pc_80502e7

dec_label_pc_80502e7:                             ; preds = %dec_label_pc_80502d5
  store i32 %v1_80502cc, i32* %edx.global-to-local, align 4
  %v1_8050db6 = add i32 %v2_80502c7, 4
  %v2_8050db6 = inttoptr i32 %v1_8050db6 to i32*
  %v3_8050db6 = load i32, i32* %v2_8050db6, align 4
  %v1_8050dbb = urem i32 %v3_8050db6, 32
  store i32 %v1_8050dbb, i32* %eax.global-to-local, align 4
  %v2_8050dbe = udiv i32 %v3_8050db6, 32
  store i32 %v2_8050dbe, i32* %edx.global-to-local, align 4
  %v0_8050dc1 = load i32, i32* @esp, align 4
  %v2_8050dc1 = mul nuw nsw i32 %v2_8050dbe, 4
  br i1 %v9_80502cc, label %dec_label_pc_8050db6, label %dec_label_pc_80502ee

dec_label_pc_80502ee:                             ; preds = %dec_label_pc_80502e7
  %v3_80502f9 = add nuw nsw i32 %v2_8050dc1, 1684
  %v4_80502f9 = add i32 %v3_80502f9, %v0_8050dc1
  %v5_80502f9 = inttoptr i32 %v4_80502f9 to i32*
  %v6_80502f9 = load i32, i32* %v5_80502f9, align 4
  %v9_80502f9 = shl i32 1, %v1_8050dbb
  %v12_80502f9 = or i32 %v6_80502f9, %v9_80502f9
  store i32 %v12_80502f9, i32* %v5_80502f9, align 4
  %v0_8050301 = load i32, i32* @ebx, align 4
  %v1_8050301 = add i32 %v0_8050301, 4
  %v2_8050301 = inttoptr i32 %v1_8050301 to i32*
  %v3_8050301 = load i32, i32* %v2_8050301, align 4
  store i32 %v3_8050301, i32* %eax.global-to-local, align 4
  %v0_8050304 = load i32, i32* @edi, align 4
  %v2_8050304 = sub i32 %v0_8050304, %v3_8050301
  %v8_8050304 = xor i32 %v0_8050304, %v3_8050301
  %v9_8050304 = xor i32 %v2_8050304, %v0_8050304
  %v10_8050304 = and i32 %v9_8050304, %v8_8050304
  %v11_8050304 = icmp slt i32 %v10_8050304, 0
  %v13_8050304 = icmp slt i32 %v2_8050304, 0
  %v2_8050306 = icmp eq i1 %v13_8050304, %v11_8050304
  br i1 %v2_8050306, label %dec_label_pc_805030a, label %dec_label_pc_8050308

dec_label_pc_8050308:                             ; preds = %dec_label_pc_80502ee
  store i32 %v3_8050301, i32* @edi, align 4
  br label %dec_label_pc_805030a

dec_label_pc_805030a:                             ; preds = %dec_label_pc_8050db6, %dec_label_pc_8050da7, %dec_label_pc_80502ee, %dec_label_pc_8050eb0, %dec_label_pc_8050e9d, %dec_label_pc_8050dd4, %dec_label_pc_8050308
  %v0_805030a = load i32, i32* @esp, align 4
  %v1_805030a = add i32 %v0_805030a, 1856
  %v2_805030a = inttoptr i32 %v1_805030a to i32*
  %v3_805030a = load i32, i32* %v2_805030a, align 4
  %v1_8050311 = add i32 %v3_805030a, 1
  store i32 %v1_8050311, i32* %eax.global-to-local, align 4
  store i32 %v1_8050311, i32* %v2_805030a, align 4
  %v0_8050319 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050319 = add i32 %v0_8050319, -255
  %v6_8050319 = sub i32 254, %v0_8050319
  %v7_8050319 = and i32 %v6_8050319, %v0_8050319
  %v8_8050319 = icmp slt i32 %v7_8050319, 0
  %v9_8050319 = icmp eq i32 %v1_8050319, 0
  %v10_8050319 = icmp slt i32 %v1_8050319, 0
  %v3_805031e = icmp ne i1 %v10_8050319, %v8_8050319
  %v4_805031e = or i1 %v9_8050319, %v3_805031e
  br i1 %v4_805031e, label %dec_label_pc_80502b7, label %dec_label_pc_8050320

dec_label_pc_8050320:                             ; preds = %dec_label_pc_805030a
  %v0_8050320 = load i32, i32* @esp, align 4
  %v1_8050320 = add i32 %v0_8050320, 1844
  %v2_8050320 = inttoptr i32 %v1_8050320 to i32*
  store i32 0, i32* %v2_8050320, align 4
  %v0_805032b = load i32, i32* @esp, align 4
  %v1_805032b = add i32 %v0_805032b, 1840
  %v2_805032b = inttoptr i32 %v1_805032b to i32*
  store i32 1, i32* %v2_805032b, align 4
  %v0_8050336 = load i32, i32* @esp, align 4
  %v0_8050339 = load i32, i32* @edi, align 4
  %v1_8050339 = load i32, i32* @esi, align 4
  %v2_8050339 = sub i32 %v0_8050339, %v1_8050339
  %v8_8050339 = xor i32 %v1_8050339, %v0_8050339
  %v9_8050339 = xor i32 %v2_8050339, %v0_8050339
  %v10_8050339 = and i32 %v9_8050339, %v8_8050339
  %v11_8050339 = icmp slt i32 %v10_8050339, 0
  %v13_8050339 = icmp slt i32 %v2_8050339, 0
  %v1_805033b = add i32 %v0_8050336, 1840
  %v2_8050342 = add i32 %v0_8050336, -16
  %v3_8050342 = inttoptr i32 %v2_8050342 to i32*
  store i32 %v1_805033b, i32* %v3_8050342, align 4
  %v1_8050343 = add i32 %v0_8050336, -20
  %v2_8050343 = inttoptr i32 %v1_8050343 to i32*
  store i32 0, i32* %v2_8050343, align 4
  %v1_8050345 = add i32 %v0_8050336, 1556
  store i32 %v1_8050345, i32* %edx.global-to-local, align 4
  %v0_805034c = load i32, i32* @edi, align 4
  store i32 %v0_805034c, i32* %eax.global-to-local, align 4
  %v2_805034e = add i32 %v0_8050336, -24
  %v3_805034e = inttoptr i32 %v2_805034e to i32*
  store i32 %v1_8050345, i32* %v3_805034e, align 4
  %v1_805034f = add i32 %v0_8050336, 1684
  store i32 %v1_805034f, i32* %ecx.global-to-local, align 4
  %v2_8050356 = add i32 %v0_8050336, -28
  %v3_8050356 = inttoptr i32 %v2_8050356 to i32*
  store i32 %v1_805034f, i32* %v3_8050356, align 4
  %v2_8050357 = icmp eq i1 %v13_8050339, %v11_8050339
  br i1 %v2_8050357, label %dec_label_pc_8050320.dec_label_pc_805035b_crit_edge, label %dec_label_pc_8050359

dec_label_pc_8050320.dec_label_pc_805035b_crit_edge: ; preds = %dec_label_pc_8050320
  %v0_805035b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805035b

dec_label_pc_8050359:                             ; preds = %dec_label_pc_8050320
  %v0_8050359 = load i32, i32* @esi, align 4
  store i32 %v0_8050359, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805035b

dec_label_pc_805035b:                             ; preds = %dec_label_pc_8050320.dec_label_pc_805035b_crit_edge, %dec_label_pc_8050359
  %v0_805035b = phi i32 [ %v0_805035b.pre, %dec_label_pc_8050320.dec_label_pc_805035b_crit_edge ], [ %v0_8050359, %dec_label_pc_8050359 ]
  %v1_805035b = add i32 %v0_805035b, 1
  store i32 %v1_805035b, i32* %eax.global-to-local, align 4
  %v2_805035c = add i32 %v0_8050336, -32
  %v3_805035c = inttoptr i32 %v2_805035c to i32*
  store i32 %v1_805035b, i32* %v3_805035c, align 4
  %v0_805035d = call i32 @function_80523ba()
  store i32 %v0_805035d, i32* %eax.global-to-local, align 4
  %v0_8050362 = load i32, i32* @esp, align 4
  %v1_8050365 = add i32 %v0_8050362, 16
  %v2_8050365 = inttoptr i32 %v1_8050365 to i32*
  store i32 0, i32* %v2_8050365, align 4
  %v0_8050367 = call i32 @function_8052474()
  %v0_805036c = load i32, i32* @esp, align 4
  %v1_805036c = add i32 %v0_805036c, 1872
  %v2_805036c = inttoptr i32 %v1_805036c to i32*
  store i32 0, i32* %v2_805036c, align 4
  store i32 %v0_8050367, i32* @global_var_8056130.24, align 16
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805039d

dec_label_pc_8050383:                             ; preds = %dec_label_pc_80503e6.backedge, %dec_label_pc_80503e6.preheader, %dec_label_pc_8050a1f, %dec_label_pc_80503cf, %dec_label_pc_805039d, %dec_label_pc_8050f7c, %dec_label_pc_8050f22, %dec_label_pc_8050a57
  %v0_8050383 = load i32, i32* @esp, align 4
  %v1_8050383 = add i32 %v0_8050383, 1856
  %v2_8050383 = inttoptr i32 %v1_8050383 to i32*
  %v3_8050383 = load i32, i32* %v2_8050383, align 4
  %v1_805038a = add i32 %v3_8050383, 1
  store i32 %v1_805038a, i32* %eax.global-to-local, align 4
  store i32 %v1_805038a, i32* %v2_8050383, align 4
  %v0_8050392 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050392 = add i32 %v0_8050392, -255
  %v6_8050392 = sub i32 254, %v0_8050392
  %v7_8050392 = and i32 %v6_8050392, %v0_8050392
  %v8_8050392 = icmp slt i32 %v7_8050392, 0
  %v9_8050392 = icmp eq i32 %v1_8050392, 0
  %v10_8050392 = icmp slt i32 %v1_8050392, 0
  %v3_8050397 = icmp eq i1 %v10_8050392, %v8_8050392
  %v4_8050397 = icmp eq i1 %v9_8050392, false
  %v5_8050397 = and i1 %v4_8050397, %v3_8050397
  br i1 %v5_8050397, label %.loopexit, label %dec_label_pc_805039d

dec_label_pc_805039d:                             ; preds = %dec_label_pc_8050383, %dec_label_pc_805035b
  %v0_805039d = phi i32 [ %v0_8050392, %dec_label_pc_8050383 ], [ 0, %dec_label_pc_805035b ]
  %v0_80503a0 = load i32, i32* @global_var_8056174.36, align 4
  store i32 %v0_80503a0, i32* %eax.global-to-local, align 4
  %v2_80503a5 = mul i32 %v0_805039d, 288
  %v2_80503a8 = add i32 %v0_80503a0, %v2_80503a5
  store i32 %v2_80503a8, i32* @edi, align 4
  %v1_80503aa = add i32 %v2_80503a8, 4
  %v2_80503aa = inttoptr i32 %v1_80503aa to i32*
  %v3_80503aa = load i32, i32* %v2_80503aa, align 4
  store i32 %v3_80503aa, i32* %ecx.global-to-local, align 4
  %v10_80503ad = icmp eq i32 %v3_80503aa, -1
  br i1 %v10_80503ad, label %dec_label_pc_8050383, label %dec_label_pc_80503b2

dec_label_pc_80503b2:                             ; preds = %dec_label_pc_805039d
  %v2_80503b6 = udiv i32 %v3_80503aa, 32
  store i32 %v2_80503b6, i32* %edx.global-to-local, align 4
  %v1_80503b9 = urem i32 %v3_80503aa, 32
  store i32 %v1_80503b9, i32* %eax.global-to-local, align 4
  %v0_80503bc = load i32, i32* @esp, align 4
  %v2_80503bc = mul nuw nsw i32 %v2_80503b6, 4
  %v3_80503bc = add nuw nsw i32 %v2_80503bc, 1556
  %v4_80503bc = add i32 %v3_80503bc, %v0_80503bc
  %v5_80503bc = inttoptr i32 %v4_80503bc to i32*
  %v6_80503bc = load i32, i32* %v5_80503bc, align 4
  %v9_80503bc = shl i32 1, %v1_80503b9
  %v10_80503bc = and i32 %v6_80503bc, %v9_80503bc
  %v11_80503bc = icmp ne i32 %v10_80503bc, 0
  %v1_80503c4 = zext i1 %v11_80503bc to i32
  store i32 %v1_80503c4, i32* %eax.global-to-local, align 4
  %v4_80503c7 = icmp eq i1 %v11_80503bc, false
  %v1_80503c9 = icmp eq i1 %v4_80503c7, false
  br i1 %v1_80503c9, label %dec_label_pc_8050de0, label %dec_label_pc_80503cf

dec_label_pc_80503cf:                             ; preds = %dec_label_pc_80503b2, %dec_label_pc_8050ec5
  %v0_80503d7 = phi i32 [ %v0_80503bc, %dec_label_pc_80503b2 ], [ %v0_80503d7.pre, %dec_label_pc_8050ec5 ]
  %v0_80503cf = phi i32 [ %v3_80503aa, %dec_label_pc_80503b2 ], [ %v0_80503cf.pre, %dec_label_pc_8050ec5 ]
  %v2_80503d1 = udiv i32 %v0_80503cf, 32
  store i32 %v2_80503d1, i32* %ecx.global-to-local, align 4
  %v1_80503d4 = urem i32 %v0_80503cf, 32
  store i32 %v1_80503d4, i32* %eax.global-to-local, align 4
  %v2_80503d7 = mul nuw nsw i32 %v2_80503d1, 4
  %v3_80503d7 = add i32 %v0_80503d7, 1684
  %v4_80503d7 = add i32 %v3_80503d7, %v2_80503d7
  %v5_80503d7 = inttoptr i32 %v4_80503d7 to i32*
  %v6_80503d7 = load i32, i32* %v5_80503d7, align 4
  %v9_80503d7 = shl i32 1, %v1_80503d4
  %v10_80503d7 = and i32 %v6_80503d7, %v9_80503d7
  %v11_80503d7 = icmp ne i32 %v10_80503d7, 0
  %v1_80503df = zext i1 %v11_80503d7 to i32
  store i32 %v1_80503df, i32* %eax.global-to-local, align 4
  %v4_80503e2 = icmp eq i1 %v11_80503d7, false
  br i1 %v4_80503e2, label %dec_label_pc_8050383, label %dec_label_pc_80503e6.preheader

dec_label_pc_80503e6.preheader:                   ; preds = %dec_label_pc_80503cf
  %v0_80503e626 = load i32, i32* @edi, align 4
  %v1_80503e627 = add i32 %v0_80503e626, 12
  %v2_80503e628 = inttoptr i32 %v1_80503e627 to i32*
  %v3_80503e629 = load i32, i32* %v2_80503e628, align 4
  store i32 %v3_80503e629, i32* %eax.global-to-local, align 4
  %v1_80503e930 = icmp eq i32 %v3_80503e629, 0
  br i1 %v1_80503e930, label %dec_label_pc_8050383, label %dec_label_pc_80503ed

dec_label_pc_80503ed:                             ; preds = %dec_label_pc_80503e6.preheader, %dec_label_pc_80503e6.backedge.dec_label_pc_80503ed_crit_edge
  %v1_80503f0 = phi i32 [ %v1_80503f0.pre, %dec_label_pc_80503e6.backedge.dec_label_pc_80503ed_crit_edge ], [ %v0_80503d7, %dec_label_pc_80503e6.preheader ]
  %v0_80503ed = phi i32 [ %v0_80503e6, %dec_label_pc_80503e6.backedge.dec_label_pc_80503ed_crit_edge ], [ %v0_80503e626, %dec_label_pc_80503e6.preheader ]
  %v1_80503ed = add i32 %v0_80503ed, 28
  store i32 %v1_80503ed, i32* %eax.global-to-local, align 4
  %v2_80503f0 = add i32 %v1_80503f0, 8
  %v3_80503f0 = inttoptr i32 %v2_80503f0 to i32*
  store i32 %v1_80503ed, i32* %v3_80503f0, align 4
  %v0_80503f4 = load i32, i32* @edi, align 4
  %v1_80503f4 = add i32 %v0_80503f4, 24
  %v2_80503f4 = inttoptr i32 %v1_80503f4 to i32*
  %v3_80503f4 = load i32, i32* %v2_80503f4, align 4
  %v9_80503f4 = icmp eq i32 %v3_80503f4, 256
  br i1 %v9_80503f4, label %dec_label_pc_8050a79, label %dec_label_pc_8050401

dec_label_pc_8050401:                             ; preds = %dec_label_pc_80503ed, %dec_label_pc_8050a79
  %v0_8050401 = load i32, i32* @esp, align 4
  %v1_8050401 = add i32 %v0_8050401, 24
  %v2_8050401 = inttoptr i32 %v1_8050401 to i32*
  %v3_8050401 = load i32, i32* %v2_8050401, align 4
  store i32 %v3_8050401, i32* %ecx.global-to-local, align 4
  %v1_8050405 = add i32 %v0_8050401, 8
  %v2_8050405 = inttoptr i32 %v1_8050405 to i32*
  %v3_8050405 = load i32, i32* %v2_8050405, align 4
  store i32 %v3_8050405, i32* %ebx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v1_805040e = inttoptr i32 %v3_8050401 to i32*
  store i32 0, i32* %v1_805040e, align 4
  %v0_8050414 = load i32, i32* @edi, align 4
  %v1_8050414 = add i32 %v0_8050414, 24
  %v2_8050414 = inttoptr i32 %v1_8050414 to i32*
  %v3_8050414 = load i32, i32* %v2_8050414, align 4
  store i32 %v3_8050414, i32* %edx.global-to-local, align 4
  %v0_8050417 = load i32, i32* @esp, align 4
  %v1_8050417 = add i32 %v0_8050417, -4
  %v2_8050417 = inttoptr i32 %v1_8050417 to i32*
  store i32 16384, i32* %v2_8050417, align 4
  %v0_805041c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805041c = load i32, i32* %edx.global-to-local, align 4
  %v2_805041c = add i32 %v1_805041c, %v0_805041c
  store i32 %v2_805041c, i32* @ebx, align 4
  %v0_805041e = load i32, i32* %eax.global-to-local, align 4
  %v2_805041e = sub i32 %v0_805041e, %v1_805041c
  store i32 %v2_805041e, i32* %eax.global-to-local, align 4
  %v2_8050420 = add i32 %v0_8050417, -8
  %v3_8050420 = inttoptr i32 %v2_8050420 to i32*
  store i32 %v2_805041e, i32* %v3_8050420, align 4
  %v0_8050421 = load i32, i32* @ebx, align 4
  %v2_8050421 = add i32 %v0_8050417, -12
  %v3_8050421 = inttoptr i32 %v2_8050421 to i32*
  store i32 %v0_8050421, i32* %v3_8050421, align 4
  %v0_8050422 = load i32, i32* @edi, align 4
  %v1_8050422 = add i32 %v0_8050422, 4
  %v2_8050422 = inttoptr i32 %v1_8050422 to i32*
  %v3_8050422 = load i32, i32* %v2_8050422, align 4
  %v2_8050425 = add i32 %v0_8050417, -16
  %v3_8050425 = inttoptr i32 %v2_8050425 to i32*
  store i32 %v3_8050422, i32* %v3_8050425, align 4
  %v0_8050426 = call i32 @function_805286d()
  store i32 %v0_8050426, i32* %eax.global-to-local, align 4
  %v0_805042b = load i32, i32* @esp, align 4
  %v1_805042b = add i32 %v0_805042b, 16
  %tmp131 = icmp slt i32 %v0_8050426, 1
  br i1 %tmp131, label %dec_label_pc_8050a10, label %dec_label_pc_8050437

dec_label_pc_8050437:                             ; preds = %dec_label_pc_8050401
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_8050439

dec_label_pc_8050439:                             ; preds = %dec_label_pc_8050443, %dec_label_pc_8050437
  %v0_805043f = phi i32 [ %v1_8050443, %dec_label_pc_8050443 ], [ 0, %dec_label_pc_8050437 ]
  %v1_8050439 = load i32, i32* @ebx, align 4
  %v2_8050439 = add i32 %v1_8050439, %v0_805043f
  %v3_8050439 = inttoptr i32 %v2_8050439 to i8*
  %v4_8050439 = load i8, i8* %v3_8050439, align 1
  %v5_8050439 = icmp eq i8 %v4_8050439, 0
  %v1_805043d = icmp eq i1 %v5_8050439, false
  br i1 %v1_805043d, label %dec_label_pc_8050443, label %dec_label_pc_805043f

dec_label_pc_805043f:                             ; preds = %dec_label_pc_8050439
  store i8 65, i8* %v3_8050439, align 1
  %v0_8050443.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050443

dec_label_pc_8050443:                             ; preds = %dec_label_pc_8050439, %dec_label_pc_805043f
  %v0_8050443 = phi i32 [ %v0_805043f, %dec_label_pc_8050439 ], [ %v0_8050443.pre, %dec_label_pc_805043f ]
  %v1_8050443 = add i32 %v0_8050443, 1
  store i32 %v1_8050443, i32* @edx, align 4
  %v12_8050444 = icmp eq i32 %v0_8050426, %v1_8050443
  %v1_8050446 = icmp eq i1 %v12_8050444, false
  br i1 %v1_8050446, label %dec_label_pc_8050439, label %dec_label_pc_8050448

dec_label_pc_8050448:                             ; preds = %dec_label_pc_8050443, %dec_label_pc_8050a16
  %v0_8050448 = load i32, i32* @edi, align 4
  %v1_8050448 = add i32 %v0_8050448, 24
  %v2_8050448 = inttoptr i32 %v1_8050448 to i32*
  %v3_8050448 = load i32, i32* %v2_8050448, align 4
  %v2_805044b = add i32 %v3_8050448, %v0_8050426
  store i32 %v2_805044b, i32* @ebx, align 4
  %v0_805044d = load i32, i32* @global_var_8056130.24, align 16
  store i32 %v0_805044d, i32* %eax.global-to-local, align 4
  store i32 %v2_805044b, i32* %v2_8050448, align 4
  %v0_8050455 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050455 = load i32, i32* @edi, align 4
  %v2_8050455 = add i32 %v1_8050455, 8
  %v3_8050455 = inttoptr i32 %v2_8050455 to i32*
  store i32 %v0_8050455, i32* %v3_8050455, align 4
  br label %dec_label_pc_8050458

dec_label_pc_8050458:                             ; preds = %dec_label_pc_8050833, %dec_label_pc_8050448
  %v0_8050458 = load i32, i32* @edi, align 4
  %v1_8050458 = add i32 %v0_8050458, 12
  %v2_8050458 = inttoptr i32 %v1_8050458 to i32*
  %v3_8050458 = load i32, i32* %v2_8050458, align 4
  store i32 %v3_8050458, i32* %eax.global-to-local, align 4
  switch i32 %v3_8050458, label %dec_label_pc_80503e6.backedge [
    i32 2, label %dec_label_pc_8050468
    i32 3, label %dec_label_pc_80504fb
    i32 4, label %dec_label_pc_80505c8
    i32 5, label %dec_label_pc_8050660
    i32 6, label %dec_label_pc_80506f0
    i32 7, label %dec_label_pc_8050853
    i32 8, label %dec_label_pc_80506a5
    i32 9, label %dec_label_pc_8050898
    i32 10, label %dec_label_pc_80507a7
  ]

dec_label_pc_8050468:                             ; preds = %dec_label_pc_8050458
  %v0_8050468 = load i32, i32* @esp, align 4
  %v1_8050468 = add i32 %v0_8050468, 8
  %v2_8050468 = inttoptr i32 %v1_8050468 to i32*
  %v3_8050468 = load i32, i32* %v2_8050468, align 4
  store i32 %v3_8050468, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_805046e = add i32 %v0_8050458, 24
  %v2_805046e = inttoptr i32 %v1_805046e to i32*
  %v3_805046e = load i32, i32* %v2_805046e, align 4
  store i32 %v3_805046e, i32* %edx.global-to-local, align 4
  %v2_805047117 = sub i32 0, %v3_805046e
  %v10_805047121 = and i32 %v3_805046e, %v2_805047117
  %v11_805047122 = icmp slt i32 %v10_805047121, 0
  %v13_805047124 = icmp slt i32 %v2_805047117, 0
  %v2_805047325 = icmp eq i1 %v13_805047124, %v11_805047122
  br i1 %v2_805047325, label %dec_label_pc_8050a01.thread, label %dec_label_pc_8050475.preheader

dec_label_pc_8050a01.thread:                      ; preds = %dec_label_pc_8050468
  br label %dec_label_pc_80503e6.backedge

dec_label_pc_8050475.preheader:                   ; preds = %dec_label_pc_8050468, %dec_label_pc_8050471.backedge
  %v0_80504ef122 = phi i32 [ %v0_80504ef124, %dec_label_pc_8050471.backedge ], [ %v0_8050458, %dec_label_pc_8050468 ]
  %v0_8050952115 = phi i32 [ %v0_8050471, %dec_label_pc_8050471.backedge ], [ 0, %dec_label_pc_8050468 ]
  %v5_8050487108 = phi i32 [ %v5_8050487109, %dec_label_pc_8050471.backedge ], [ 2, %dec_label_pc_8050468 ]
  %v1_8050481106 = phi i32 [ %v1_8050471, %dec_label_pc_8050471.backedge ], [ %v3_805046e, %dec_label_pc_8050468 ]
  %v0_805047a103 = phi i32 [ %v0_805047a104, %dec_label_pc_8050471.backedge ], [ %v0_8050468, %dec_label_pc_8050468 ]
  br label %dec_label_pc_8050475

dec_label_pc_8050475:                             ; preds = %dec_label_pc_8050475.preheader, %dec_label_pc_80504c6
  %v0_80504ef125 = phi i32 [ %v0_80504ef122, %dec_label_pc_8050475.preheader ], [ %v0_80504dd, %dec_label_pc_80504c6 ]
  %v0_8050952 = phi i32 [ %v0_8050952115, %dec_label_pc_8050475.preheader ], [ %v0_80504e3, %dec_label_pc_80504c6 ]
  %v5_8050487 = phi i32 [ %v5_8050487108, %dec_label_pc_8050475.preheader ], [ %v0_80504d8, %dec_label_pc_80504c6 ]
  %v1_8050481 = phi i32 [ %v1_8050481106, %dec_label_pc_8050475.preheader ], [ %v3_80504dd, %dec_label_pc_80504c6 ]
  %v0_8050971 = phi i32 [ %v0_805047a103, %dec_label_pc_8050475.preheader ], [ %v1_80504e0, %dec_label_pc_80504c6 ]
  %v0_8050475 = load i32, i32* @ebx, align 4
  %v1_8050475 = inttoptr i32 %v0_8050475 to i8*
  %v2_8050475 = load i8, i8* %v1_8050475, align 1
  %v12_8050475 = icmp eq i8 %v2_8050475, -1
  %v1_8050478 = icmp eq i1 %v12_8050475, false
  br i1 %v1_8050478, label %dec_label_pc_80504e7, label %dec_label_pc_805047a

dec_label_pc_805047a:                             ; preds = %dec_label_pc_8050475
  %v1_805047a = add i32 %v0_8050971, 8
  %v2_805047a = inttoptr i32 %v1_805047a to i32*
  %v3_805047a = load i32, i32* %v2_805047a, align 4
  %v1_805047e = add i32 %v0_8050475, 1
  store i32 %v1_805047e, i32* @esi, align 4
  %v2_8050481 = add i32 %v3_805047a, %v1_8050481
  store i32 %v2_8050481, i32* %ecx.global-to-local, align 4
  %tmp269 = icmp ugt i32 %v2_8050481, %v1_805047e
  br i1 %tmp269, label %dec_label_pc_8050487, label %dec_label_pc_80504e7

dec_label_pc_8050487:                             ; preds = %dec_label_pc_805047a
  %v2_8050487 = inttoptr i32 %v1_805047e to i8*
  %v3_8050487 = load i8, i8* %v2_8050487, align 1
  %v4_8050487 = zext i8 %v3_8050487 to i32
  %v6_8050487 = and i32 %v5_8050487, -256
  %v7_8050487 = or i32 %v4_8050487, %v6_8050487
  store i32 %v7_8050487, i32* %eax.global-to-local, align 4
  %v11_805048a = icmp eq i8 %v3_8050487, -1
  br i1 %v11_805048a, label %dec_label_pc_805094f, label %dec_label_pc_8050492

dec_label_pc_8050492:                             ; preds = %dec_label_pc_8050487
  %v11_8050492 = icmp eq i8 %v3_8050487, -3
  br i1 %v11_8050492, label %dec_label_pc_8050971, label %dec_label_pc_805049a

dec_label_pc_805049a:                             ; preds = %dec_label_pc_8050492
  %v1_805049a = add i32 %v0_8050475, 2
  store i32 %v1_805049a, i32* %eax.global-to-local, align 4
  %tmp270 = icmp ugt i32 %v2_8050481, %v1_805049a
  br i1 %tmp270, label %dec_label_pc_80504a1, label %dec_label_pc_80504e7

dec_label_pc_80504a1:                             ; preds = %dec_label_pc_805049a, %dec_label_pc_8050f4b, %dec_label_pc_8050f53, %dec_label_pc_80509f9
  %v0_80504a1 = load i32, i32* @esi, align 4
  %v1_80504a1 = inttoptr i32 %v0_80504a1 to i8*
  %v2_80504a1 = load i8, i8* %v1_80504a1, align 1
  %v3_80504a1 = zext i8 %v2_80504a1 to i32
  %v4_80504a1 = load i32, i32* %eax.global-to-local, align 4
  %v5_80504a1 = and i32 %v4_80504a1, -256
  %v6_80504a1 = or i32 %v5_80504a1, %v3_80504a1
  store i32 %v6_80504a1, i32* %eax.global-to-local, align 4
  %v11_80504a3 = icmp eq i8 %v2_80504a1, -3
  br i1 %v11_80504a3, label %dec_label_pc_805095a, label %dec_label_pc_80504ab

dec_label_pc_80504ab:                             ; preds = %dec_label_pc_80504a1
  %v11_80504ab = icmp eq i8 %v2_80504a1, -5
  br i1 %v11_80504ab, label %dec_label_pc_8050a9c, label %dec_label_pc_80504b3

dec_label_pc_80504b3:                             ; preds = %dec_label_pc_80504ab, %dec_label_pc_8050a9c
  %v5_80504b3 = phi i32 [ %v6_80504a1, %dec_label_pc_80504ab ], [ %v5_80504b3.pre, %dec_label_pc_8050a9c ]
  %v0_80504b3 = load i32, i32* @ebx, align 4
  %v1_80504b3 = add i32 %v0_80504b3, 2
  %v2_80504b3 = inttoptr i32 %v1_80504b3 to i8*
  %v3_80504b3 = load i8, i8* %v2_80504b3, align 1
  %v4_80504b3 = zext i8 %v3_80504b3 to i32
  %v6_80504b3 = and i32 %v5_80504b3, -256
  %v7_80504b3 = or i32 %v4_80504b3, %v6_80504b3
  store i32 %v7_80504b3, i32* %eax.global-to-local, align 4
  %v11_80504b6 = icmp eq i8 %v3_80504b3, -3
  br i1 %v11_80504b6, label %dec_label_pc_8050968, label %dec_label_pc_80504be

dec_label_pc_80504be:                             ; preds = %dec_label_pc_805095a, %dec_label_pc_80504b3
  %v0_8050a70 = phi i32 [ %v0_805095d, %dec_label_pc_805095a ], [ %v0_80504b3, %dec_label_pc_80504b3 ]
  %v0_80504be = phi i32 [ %v7_805095d, %dec_label_pc_805095a ], [ %v7_80504b3, %dec_label_pc_80504b3 ]
  %v1_80504be = trunc i32 %v0_80504be to i8
  %v11_80504be = icmp eq i8 %v1_80504be, -5
  br i1 %v11_80504be, label %dec_label_pc_8050a70, label %dec_label_pc_80504c6

dec_label_pc_80504c6:                             ; preds = %dec_label_pc_80504be, %dec_label_pc_8050a70, %dec_label_pc_8050968
  %v0_80504c6 = load i32, i32* @esp, align 4
  %v1_80504c6 = add i32 %v0_80504c6, -4
  %v2_80504c6 = inttoptr i32 %v1_80504c6 to i32*
  store i32 16384, i32* %v2_80504c6, align 4
  %v1_80504cb = add i32 %v0_80504c6, -8
  %v2_80504cb = inttoptr i32 %v1_80504cb to i32*
  store i32 3, i32* %v2_80504cb, align 4
  %v0_80504cd = load i32, i32* @ebx, align 4
  %v2_80504cd = add i32 %v0_80504c6, -12
  %v3_80504cd = inttoptr i32 %v2_80504cd to i32*
  store i32 %v0_80504cd, i32* %v3_80504cd, align 4
  %v0_80504ce = load i32, i32* @ebp, align 4
  %v1_80504ce = add i32 %v0_80504ce, 3
  store i32 %v1_80504ce, i32* @ebp, align 4
  %v0_80504d1 = load i32, i32* @edi, align 4
  %v1_80504d1 = add i32 %v0_80504d1, 4
  %v2_80504d1 = inttoptr i32 %v1_80504d1 to i32*
  %v3_80504d1 = load i32, i32* %v2_80504d1, align 4
  store i32 %v3_80504d1, i32* @esi, align 4
  %v0_80504d4 = load i32, i32* @ebx, align 4
  %v1_80504d4 = add i32 %v0_80504d4, 3
  store i32 %v1_80504d4, i32* @ebx, align 4
  %v2_80504d7 = add i32 %v0_80504c6, -16
  %v3_80504d7 = inttoptr i32 %v2_80504d7 to i32*
  store i32 %v3_80504d1, i32* %v3_80504d7, align 4
  %v0_80504d8 = call i32 @function_80528e3()
  store i32 %v0_80504d8, i32* %eax.global-to-local, align 4
  %v0_80504dd = load i32, i32* @edi, align 4
  %v1_80504dd = add i32 %v0_80504dd, 24
  %v2_80504dd = inttoptr i32 %v1_80504dd to i32*
  %v3_80504dd = load i32, i32* %v2_80504dd, align 4
  store i32 %v3_80504dd, i32* %edx.global-to-local, align 4
  %v0_80504e0 = load i32, i32* @esp, align 4
  %v1_80504e0 = add i32 %v0_80504e0, 16
  %v0_80504e3 = load i32, i32* @ebp, align 4
  %v2_80504e3 = sub i32 %v0_80504e3, %v3_80504dd
  %v8_80504e3 = xor i32 %v0_80504e3, %v3_80504dd
  %v9_80504e3 = xor i32 %v2_80504e3, %v0_80504e3
  %v10_80504e3 = and i32 %v9_80504e3, %v8_80504e3
  %v11_80504e3 = icmp slt i32 %v10_80504e3, 0
  %v13_80504e3 = icmp slt i32 %v2_80504e3, 0
  %v2_80504e5 = icmp eq i1 %v13_80504e3, %v11_80504e3
  br i1 %v2_80504e5, label %dec_label_pc_80504e7, label %dec_label_pc_8050475

dec_label_pc_80504e7:                             ; preds = %dec_label_pc_8050471.backedge, %dec_label_pc_805049a, %dec_label_pc_805047a, %dec_label_pc_80504c6, %dec_label_pc_8050475, %dec_label_pc_8050971.dec_label_pc_80504e7.loopexit_crit_edge
  %v0_80504ef = phi i32 [ %v0_80509d5, %dec_label_pc_8050971.dec_label_pc_80504e7.loopexit_crit_edge ], [ %v0_80504dd, %dec_label_pc_80504c6 ], [ %v0_80504ef125, %dec_label_pc_805049a ], [ %v0_80504ef125, %dec_label_pc_805047a ], [ %v0_80504ef125, %dec_label_pc_8050475 ], [ %v0_80504ef124, %dec_label_pc_8050471.backedge ]
  %v0_80504e7 = phi i32 [ %v0_80504e7.pre.pre, %dec_label_pc_8050971.dec_label_pc_80504e7.loopexit_crit_edge ], [ %v0_80504e3, %dec_label_pc_80504c6 ], [ %v0_8050952, %dec_label_pc_805049a ], [ %v0_8050952, %dec_label_pc_805047a ], [ %v0_8050952, %dec_label_pc_8050475 ], [ %v0_8050471, %dec_label_pc_8050471.backedge ]
  %tmp132 = icmp slt i32 %v0_80504e7, 1
  br i1 %tmp132, label %dec_label_pc_8050a01, label %dec_label_pc_80504ef

dec_label_pc_80504ef:                             ; preds = %dec_label_pc_80504e7
  %v1_80504ef = add i32 %v0_80504ef, 12
  %v2_80504ef = inttoptr i32 %v1_80504ef to i32*
  store i32 3, i32* %v2_80504ef, align 4
  br label %dec_label_pc_8050828

dec_label_pc_80504fb:                             ; preds = %dec_label_pc_8050458
  %v1_80504fb = add i32 %v0_8050458, 24
  %v2_80504fb = inttoptr i32 %v1_80504fb to i32*
  %v3_80504fb = load i32, i32* %v2_80504fb, align 4
  %v1_80504fe = add i32 %v3_80504fb, -1
  store i32 %v1_80504fe, i32* %eax.global-to-local, align 4
  %tmp133 = icmp slt i32 %v1_80504fe, 1
  br i1 %tmp133, label %dec_label_pc_8050537, label %dec_label_pc_8050503.preheader

dec_label_pc_8050503.preheader:                   ; preds = %dec_label_pc_80504fb
  %v7_8050503.pre = load i32, i32* @edx, align 4
  %v2_8050503 = add i32 %v0_8050458, 28
  br label %dec_label_pc_8050503

dec_label_pc_8050503:                             ; preds = %dec_label_pc_8050503.preheader, %dec_label_pc_8050534
  %v7_8050503 = phi i32 [ %v7_8050503.pre, %dec_label_pc_8050503.preheader ], [ %v9_8050503, %dec_label_pc_8050534 ]
  %v0_8050b1d = phi i32 [ %v1_80504fe, %dec_label_pc_8050503.preheader ], [ %v1_8050534, %dec_label_pc_8050534 ]
  %v3_8050503 = add i32 %v2_8050503, %v0_8050b1d
  %v4_8050503 = inttoptr i32 %v3_8050503 to i8*
  %v5_8050503 = load i8, i8* %v4_8050503, align 1
  %v6_8050503 = zext i8 %v5_8050503 to i32
  %v8_8050503 = and i32 %v7_8050503, -256
  %v9_8050503 = or i32 %v6_8050503, %v8_8050503
  store i32 %v9_8050503, i32* %edx.global-to-local, align 4
  %v10_8050507 = icmp eq i8 %v5_8050503, 58
  br i1 %v10_8050507, label %dec_label_pc_8050b1d, label %dec_label_pc_8050510

dec_label_pc_8050510:                             ; preds = %dec_label_pc_8050503
  %v10_8050510 = icmp eq i8 %v5_8050503, 62
  br i1 %v10_8050510, label %dec_label_pc_8050b1d, label %dec_label_pc_8050519

dec_label_pc_8050519:                             ; preds = %dec_label_pc_8050510
  %v10_8050519 = icmp eq i8 %v5_8050503, 36
  br i1 %v10_8050519, label %dec_label_pc_8050b1d, label %dec_label_pc_8050522

dec_label_pc_8050522:                             ; preds = %dec_label_pc_8050519
  %v10_8050522 = icmp eq i8 %v5_8050503, 35
  br i1 %v10_8050522, label %dec_label_pc_8050b1d, label %dec_label_pc_805052b

dec_label_pc_805052b:                             ; preds = %dec_label_pc_8050522
  %v10_805052b = icmp eq i8 %v5_8050503, 37
  br i1 %v10_805052b, label %dec_label_pc_8050b1d, label %dec_label_pc_8050534

dec_label_pc_8050534:                             ; preds = %dec_label_pc_805052b
  %v1_8050534 = add i32 %v0_8050b1d, -1
  %v8_8050534 = icmp eq i32 %v1_8050534, 0
  store i32 %v1_8050534, i32* %eax.global-to-local, align 4
  %v1_8050535 = icmp eq i1 %v8_8050534, false
  br i1 %v1_8050535, label %dec_label_pc_8050503, label %dec_label_pc_8050537

dec_label_pc_8050537:                             ; preds = %dec_label_pc_8050534, %dec_label_pc_8050b1d, %dec_label_pc_80504fb
  %v0_8050537 = load i32, i32* @esp, align 4
  %v1_805053a = add i32 %v0_8050537, -16
  %v2_805053a = inttoptr i32 %v1_805053a to i32*
  store i32 30, i32* %v2_805053a, align 4
  %v2_805053c = call i32 @function_8051180(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805053c, i32* %eax.global-to-local, align 4
  %v0_8050541 = load i32, i32* @esp, align 4
  %v1_8050541 = inttoptr i32 %v0_8050541 to i32*
  store i32 31, i32* %v1_8050541, align 4
  %v2_8050548 = call i32 @function_8051180(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050548, i32* %eax.global-to-local, align 4
  %v0_805054d = load i32, i32* @esp, align 4
  %v1_805054d = inttoptr i32 %v0_805054d to i32*
  %v2_805054d = load i32, i32* %v1_805054d, align 4
  store i32 %v2_805054d, i32* %ecx.global-to-local, align 4
  %v3_805054d = add i32 %v0_805054d, 4
  %v1_805054e = inttoptr i32 %v3_805054d to i32*
  %v2_805054e = load i32, i32* %v1_805054e, align 4
  store i32 %v2_805054e, i32* %ebx.global-to-local, align 4
  %v1_805054f = add i32 %v0_805054d, 1868
  store i32 %v1_805054f, i32* %ecx.global-to-local, align 4
  store i32 %v1_805054f, i32* %v1_805054e, align 4
  store i32 30, i32* %v1_805054d, align 4
  %v3_8050559 = call i32 @function_80510d0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050559, i32* %eax.global-to-local, align 4
  store i32 %v3_8050559, i32* @ebx, align 4
  %v0_8050560 = load i32, i32* @esp, align 4
  %v1_8050560 = inttoptr i32 %v0_8050560 to i32*
  %v2_8050560 = load i32, i32* %v1_8050560, align 4
  store i32 %v2_8050560, i32* %eax.global-to-local, align 4
  %v3_8050560 = add i32 %v0_8050560, 4
  %v1_8050561 = inttoptr i32 %v3_8050560 to i32*
  %v2_8050561 = load i32, i32* %v1_8050561, align 4
  store i32 %v2_8050561, i32* %edx.global-to-local, align 4
  %v1_8050562 = add i32 %v0_8050560, 1864
  store i32 %v1_8050562, i32* %eax.global-to-local, align 4
  store i32 %v1_8050562, i32* %v1_8050561, align 4
  store i32 31, i32* %v1_8050560, align 4
  %v3_805056c = call i32 @function_80510d0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_805056c, i32* %eax.global-to-local, align 4
  store i32 %v3_805056c, i32* @esi, align 4
  %v0_8050573 = load i32, i32* @esp, align 4
  %v1_8050573 = add i32 %v0_8050573, 1868
  %v2_8050573 = inttoptr i32 %v1_8050573 to i32*
  %v3_8050573 = load i32, i32* %v2_8050573, align 4
  %v1_805057a = add i32 %v3_8050573, -1
  store i32 %v1_805057a, i32* %eax.global-to-local, align 4
  %v2_805057b = add i32 %v0_8050573, -4
  %v3_805057b = inttoptr i32 %v2_805057b to i32*
  store i32 %v1_805057a, i32* %v3_805057b, align 4
  %v0_805057c = load i32, i32* @ebx, align 4
  %v2_805057c = add i32 %v0_8050573, -8
  %v3_805057c = inttoptr i32 %v2_805057c to i32*
  store i32 %v0_805057c, i32* %v3_805057c, align 4
  %v0_805057d = load i32, i32* @edi, align 4
  %v1_805057d = add i32 %v0_805057d, 24
  %v2_805057d = inttoptr i32 %v1_805057d to i32*
  %v3_805057d = load i32, i32* %v2_805057d, align 4
  store i32 %v3_805057d, i32* %eax.global-to-local, align 4
  %v2_8050580 = add i32 %v0_8050573, -12
  %v3_8050580 = inttoptr i32 %v2_8050580 to i32*
  store i32 %v3_805057d, i32* %v3_8050580, align 4
  %v1_8050581 = add i32 %v0_8050573, 24
  %v2_8050581 = inttoptr i32 %v1_8050581 to i32*
  %v3_8050581 = load i32, i32* %v2_8050581, align 4
  store i32 %v3_8050581, i32* %eax.global-to-local, align 4
  %v2_8050585 = add i32 %v0_8050573, -16
  %v3_8050585 = inttoptr i32 %v2_8050585 to i32*
  store i32 %v3_8050581, i32* %v3_8050585, align 4
  %v0_8050586 = call i32 @function_8051cf0()
  %v0_805058b = load i32, i32* @esp, align 4
  %v1_805058b = add i32 %v0_805058b, 32
  %v8_805058e = icmp eq i32 %v0_8050586, -1
  %v1_805058f = icmp eq i1 %v8_805058e, false
  %v2_805058f = zext i1 %v1_805058f to i32
  %v2_8050592 = icmp eq i1 %v1_805058f, false
  store i32 %v2_805058f, i32* %eax.global-to-local, align 4
  store i32 %v2_805058f, i32* @ebp, align 4
  br i1 %v2_8050592, label %dec_label_pc_8050ed6, label %dec_label_pc_80505a1

dec_label_pc_80505a1:                             ; preds = %dec_label_pc_8050ed6, %dec_label_pc_8050537
  %v0_80505a1 = phi i32 [ %v1_8050eee, %dec_label_pc_8050ed6 ], [ %v1_805058b, %dec_label_pc_8050537 ]
  %v1_80505a4 = add i32 %v0_80505a1, -16
  %v2_80505a4 = inttoptr i32 %v1_80505a4 to i32*
  store i32 30, i32* %v2_80505a4, align 4
  %v2_80505a6 = call i32 @function_8051100(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80505a6, i32* %eax.global-to-local, align 4
  %v0_80505ab = load i32, i32* @esp, align 4
  %v1_80505ab = inttoptr i32 %v0_80505ab to i32*
  store i32 31, i32* %v1_80505ab, align 4
  %v2_80505b2 = call i32 @function_8051100(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80505b2, i32* %eax.global-to-local, align 4
  %v0_80505ba = load i32, i32* @ebp, align 4
  %v10_80505ba = icmp eq i32 %v0_80505ba, -1
  %v1_80505bd = icmp eq i1 %v10_80505ba, false
  br i1 %v1_80505bd, label %dec_label_pc_8050b29, label %dec_label_pc_80503e6.backedge

dec_label_pc_80505c8:                             ; preds = %dec_label_pc_8050458
  %v1_80505c8 = add i32 %v0_8050458, 24
  %v2_80505c8 = inttoptr i32 %v1_80505c8 to i32*
  %v3_80505c8 = load i32, i32* %v2_80505c8, align 4
  %v1_80505cb = add i32 %v3_80505c8, -1
  store i32 %v1_80505cb, i32* %eax.global-to-local, align 4
  %tmp134 = icmp slt i32 %v1_80505cb, 1
  br i1 %tmp134, label %dec_label_pc_80505fb, label %dec_label_pc_80505d0.preheader

dec_label_pc_80505d0.preheader:                   ; preds = %dec_label_pc_80505c8
  %v7_80505d0.pre = load i32, i32* @edx, align 4
  %v2_80505d0 = add i32 %v0_8050458, 28
  br label %dec_label_pc_80505d0

dec_label_pc_80505d0:                             ; preds = %dec_label_pc_80505d0.preheader, %dec_label_pc_80505f8
  %v7_80505d0 = phi i32 [ %v7_80505d0.pre, %dec_label_pc_80505d0.preheader ], [ %v9_80505d0, %dec_label_pc_80505f8 ]
  %v0_8050c60 = phi i32 [ %v1_80505cb, %dec_label_pc_80505d0.preheader ], [ %v1_80505f8, %dec_label_pc_80505f8 ]
  %v3_80505d0 = add i32 %v2_80505d0, %v0_8050c60
  %v4_80505d0 = inttoptr i32 %v3_80505d0 to i8*
  %v5_80505d0 = load i8, i8* %v4_80505d0, align 1
  %v6_80505d0 = zext i8 %v5_80505d0 to i32
  %v8_80505d0 = and i32 %v7_80505d0, -256
  %v9_80505d0 = or i32 %v6_80505d0, %v8_80505d0
  store i32 %v9_80505d0, i32* %edx.global-to-local, align 4
  %v10_80505d4 = icmp eq i8 %v5_80505d0, 58
  br i1 %v10_80505d4, label %dec_label_pc_8050c60, label %dec_label_pc_80505dd

dec_label_pc_80505dd:                             ; preds = %dec_label_pc_80505d0
  %v10_80505dd = icmp eq i8 %v5_80505d0, 62
  br i1 %v10_80505dd, label %dec_label_pc_8050c60, label %dec_label_pc_80505e6

dec_label_pc_80505e6:                             ; preds = %dec_label_pc_80505dd
  %v10_80505e6 = icmp eq i8 %v5_80505d0, 36
  br i1 %v10_80505e6, label %dec_label_pc_8050c60, label %dec_label_pc_80505ef

dec_label_pc_80505ef:                             ; preds = %dec_label_pc_80505e6
  %v10_80505ef = icmp eq i8 %v5_80505d0, 35
  br i1 %v10_80505ef, label %dec_label_pc_8050c60, label %dec_label_pc_80505f8

dec_label_pc_80505f8:                             ; preds = %dec_label_pc_80505ef
  %v1_80505f8 = add i32 %v0_8050c60, -1
  %v8_80505f8 = icmp eq i32 %v1_80505f8, 0
  store i32 %v1_80505f8, i32* %eax.global-to-local, align 4
  %v1_80505f9 = icmp eq i1 %v8_80505f8, false
  br i1 %v1_80505f9, label %dec_label_pc_80505d0, label %dec_label_pc_80505fb

dec_label_pc_80505fb:                             ; preds = %dec_label_pc_80505f8, %dec_label_pc_8050c60, %dec_label_pc_80505c8
  %v0_80505fb = load i32, i32* @esp, align 4
  %v1_80505fe = add i32 %v0_80505fb, -16
  %v2_80505fe = inttoptr i32 %v1_80505fe to i32*
  store i32 29, i32* %v2_80505fe, align 4
  %v2_8050600 = call i32 @function_8051180(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050600, i32* %eax.global-to-local, align 4
  %v0_8050605 = load i32, i32* @esp, align 4
  %v1_8050605 = inttoptr i32 %v0_8050605 to i32*
  %v2_8050605 = load i32, i32* %v1_8050605, align 4
  store i32 %v2_8050605, i32* %eax.global-to-local, align 4
  %v3_8050605 = add i32 %v0_8050605, 4
  %v1_8050606 = inttoptr i32 %v3_8050605 to i32*
  %v2_8050606 = load i32, i32* %v1_8050606, align 4
  store i32 %v2_8050606, i32* %edx.global-to-local, align 4
  %v1_8050607 = add i32 %v0_8050605, 1868
  store i32 %v1_8050607, i32* %eax.global-to-local, align 4
  store i32 %v1_8050607, i32* %v1_8050606, align 4
  store i32 29, i32* %v1_8050605, align 4
  %v3_8050611 = call i32 @function_80510d0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050611, i32* %eax.global-to-local, align 4
  %v0_8050616 = load i32, i32* @esp, align 4
  %v1_8050616 = add i32 %v0_8050616, 1868
  %v2_8050616 = inttoptr i32 %v1_8050616 to i32*
  %v3_8050616 = load i32, i32* %v2_8050616, align 4
  %v1_805061d = add i32 %v3_8050616, -1
  store i32 %v1_805061d, i32* %edx.global-to-local, align 4
  %v2_805061e = add i32 %v0_8050616, -4
  %v3_805061e = inttoptr i32 %v2_805061e to i32*
  store i32 %v1_805061d, i32* %v3_805061e, align 4
  %v2_805061f = add i32 %v0_8050616, -8
  %v3_805061f = inttoptr i32 %v2_805061f to i32*
  store i32 %v3_8050611, i32* %v3_805061f, align 4
  %v0_8050620 = load i32, i32* @edi, align 4
  %v1_8050620 = add i32 %v0_8050620, 24
  %v2_8050620 = inttoptr i32 %v1_8050620 to i32*
  %v3_8050620 = load i32, i32* %v2_8050620, align 4
  store i32 %v3_8050620, i32* %eax.global-to-local, align 4
  %v2_8050623 = add i32 %v0_8050616, -12
  %v3_8050623 = inttoptr i32 %v2_8050623 to i32*
  store i32 %v3_8050620, i32* %v3_8050623, align 4
  %v1_8050624 = add i32 %v0_8050616, 24
  %v2_8050624 = inttoptr i32 %v1_8050624 to i32*
  %v3_8050624 = load i32, i32* %v2_8050624, align 4
  %v2_8050628 = add i32 %v0_8050616, -16
  %v3_8050628 = inttoptr i32 %v2_8050628 to i32*
  store i32 %v3_8050624, i32* %v3_8050628, align 4
  %v0_8050629 = call i32 @function_8051cf0()
  %v0_805062e = load i32, i32* @esp, align 4
  %v8_8050631 = icmp eq i32 %v0_8050629, -1
  %v1_8050632 = icmp eq i1 %v8_8050631, false
  %v2_8050632 = zext i1 %v1_8050632 to i32
  %v2_8050635 = icmp eq i1 %v1_8050632, false
  store i32 %v2_8050632, i32* %eax.global-to-local, align 4
  store i32 %v2_8050632, i32* @ebp, align 4
  %v1_8050f5e = add i32 %v0_805062e, 16
  %v2_8050f5e = inttoptr i32 %v1_8050f5e to i32*
  store i32 29, i32* %v2_8050f5e, align 4
  %v2_8050f60 = call i32 @function_8051100(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050f60, i32* %eax.global-to-local, align 4
  br i1 %v2_8050635, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_8050644

dec_label_pc_8050644:                             ; preds = %dec_label_pc_80505fb
  %v0_8050651 = load i32, i32* @ebp, align 4
  %v10_8050651 = icmp eq i32 %v0_8050651, -1
  %v1_8050654 = icmp eq i1 %v10_8050651, false
  br i1 %v1_8050654, label %dec_label_pc_8050c6c, label %dec_label_pc_80503e6.backedge

dec_label_pc_8050660:                             ; preds = %dec_label_pc_8050458
  %v1_8050660 = add i32 %v0_8050458, 24
  %v2_8050660 = inttoptr i32 %v1_8050660 to i32*
  %v3_8050660 = load i32, i32* %v2_8050660, align 4
  %v1_8050663 = add i32 %v3_8050660, -1
  store i32 %v1_8050663, i32* %eax.global-to-local, align 4
  %tmp135 = icmp slt i32 %v1_8050663, 1
  br i1 %tmp135, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_805066c.preheader

dec_label_pc_805066c.preheader:                   ; preds = %dec_label_pc_8050660
  %v7_805066c.pre = load i32, i32* @edx, align 4
  %v2_805066c = add i32 %v0_8050458, 28
  br label %dec_label_pc_805066c

dec_label_pc_805066c:                             ; preds = %dec_label_pc_805066c.preheader, %dec_label_pc_805069d
  %v7_805066c = phi i32 [ %v7_805066c.pre, %dec_label_pc_805066c.preheader ], [ %v9_805066c, %dec_label_pc_805069d ]
  %v0_8050b6e = phi i32 [ %v1_8050663, %dec_label_pc_805066c.preheader ], [ %v1_805069d, %dec_label_pc_805069d ]
  %v3_805066c = add i32 %v2_805066c, %v0_8050b6e
  %v4_805066c = inttoptr i32 %v3_805066c to i8*
  %v5_805066c = load i8, i8* %v4_805066c, align 1
  %v6_805066c = zext i8 %v5_805066c to i32
  %v8_805066c = and i32 %v7_805066c, -256
  %v9_805066c = or i32 %v6_805066c, %v8_805066c
  store i32 %v9_805066c, i32* %edx.global-to-local, align 4
  %v10_8050670 = icmp eq i8 %v5_805066c, 58
  br i1 %v10_8050670, label %dec_label_pc_8050b6e, label %dec_label_pc_8050679

dec_label_pc_8050679:                             ; preds = %dec_label_pc_805066c
  %v10_8050679 = icmp eq i8 %v5_805066c, 62
  br i1 %v10_8050679, label %dec_label_pc_8050b6e, label %dec_label_pc_8050682

dec_label_pc_8050682:                             ; preds = %dec_label_pc_8050679
  %v10_8050682 = icmp eq i8 %v5_805066c, 36
  br i1 %v10_8050682, label %dec_label_pc_8050b6e, label %dec_label_pc_805068b

dec_label_pc_805068b:                             ; preds = %dec_label_pc_8050682
  %v10_805068b = icmp eq i8 %v5_805066c, 35
  br i1 %v10_805068b, label %dec_label_pc_8050b6e, label %dec_label_pc_8050694

dec_label_pc_8050694:                             ; preds = %dec_label_pc_805068b
  %v10_8050694 = icmp eq i8 %v5_805066c, 37
  br i1 %v10_8050694, label %dec_label_pc_8050b6e, label %dec_label_pc_805069d

dec_label_pc_805069d:                             ; preds = %dec_label_pc_8050694
  %v1_805069d = add i32 %v0_8050b6e, -1
  %v8_805069d = icmp eq i32 %v1_805069d, 0
  store i32 %v1_805069d, i32* %eax.global-to-local, align 4
  %v1_805069e = icmp eq i1 %v8_805069d, false
  br i1 %v1_805069e, label %dec_label_pc_805066c, label %dec_label_pc_80503e6.backedge

dec_label_pc_80506a5:                             ; preds = %dec_label_pc_8050458
  %v1_80506a5 = add i32 %v0_8050458, 24
  %v2_80506a5 = inttoptr i32 %v1_80506a5 to i32*
  %v3_80506a5 = load i32, i32* %v2_80506a5, align 4
  %v1_80506a8 = add i32 %v3_80506a5, -1
  store i32 %v1_80506a8, i32* %eax.global-to-local, align 4
  %tmp136 = icmp slt i32 %v1_80506a8, 1
  br i1 %tmp136, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_80506b1.preheader

dec_label_pc_80506b1.preheader:                   ; preds = %dec_label_pc_80506a5
  %v7_80506b1.pre = load i32, i32* @edx, align 4
  %v2_80506b1 = add i32 %v0_8050458, 28
  br label %dec_label_pc_80506b1

dec_label_pc_80506b1:                             ; preds = %dec_label_pc_80506b1.preheader, %dec_label_pc_80506e2
  %v7_80506b1 = phi i32 [ %v7_80506b1.pre, %dec_label_pc_80506b1.preheader ], [ %v9_80506b1, %dec_label_pc_80506e2 ]
  %v0_8050aa4 = phi i32 [ %v1_80506a8, %dec_label_pc_80506b1.preheader ], [ %v1_80506e2, %dec_label_pc_80506e2 ]
  %v3_80506b1 = add i32 %v2_80506b1, %v0_8050aa4
  %v4_80506b1 = inttoptr i32 %v3_80506b1 to i8*
  %v5_80506b1 = load i8, i8* %v4_80506b1, align 1
  %v6_80506b1 = zext i8 %v5_80506b1 to i32
  %v8_80506b1 = and i32 %v7_80506b1, -256
  %v9_80506b1 = or i32 %v6_80506b1, %v8_80506b1
  store i32 %v9_80506b1, i32* %edx.global-to-local, align 4
  %v10_80506b5 = icmp eq i8 %v5_80506b1, 58
  br i1 %v10_80506b5, label %dec_label_pc_8050aa4, label %dec_label_pc_80506be

dec_label_pc_80506be:                             ; preds = %dec_label_pc_80506b1
  %v10_80506be = icmp eq i8 %v5_80506b1, 62
  br i1 %v10_80506be, label %dec_label_pc_8050aa4, label %dec_label_pc_80506c7

dec_label_pc_80506c7:                             ; preds = %dec_label_pc_80506be
  %v10_80506c7 = icmp eq i8 %v5_80506b1, 36
  br i1 %v10_80506c7, label %dec_label_pc_8050aa4, label %dec_label_pc_80506d0

dec_label_pc_80506d0:                             ; preds = %dec_label_pc_80506c7
  %v10_80506d0 = icmp eq i8 %v5_80506b1, 35
  br i1 %v10_80506d0, label %dec_label_pc_8050aa4, label %dec_label_pc_80506d9

dec_label_pc_80506d9:                             ; preds = %dec_label_pc_80506d0
  %v10_80506d9 = icmp eq i8 %v5_80506b1, 37
  br i1 %v10_80506d9, label %dec_label_pc_8050aa4, label %dec_label_pc_80506e2

dec_label_pc_80506e2:                             ; preds = %dec_label_pc_80506d9
  %v1_80506e2 = add i32 %v0_8050aa4, -1
  %v8_80506e2 = icmp eq i32 %v1_80506e2, 0
  store i32 %v1_80506e2, i32* %eax.global-to-local, align 4
  %v1_80506e3 = icmp eq i1 %v8_80506e2, false
  br i1 %v1_80506e3, label %dec_label_pc_80506b1, label %dec_label_pc_80503e6.backedge

dec_label_pc_80506f0:                             ; preds = %dec_label_pc_8050458
  %v1_80506f0 = add i32 %v0_8050458, 24
  %v2_80506f0 = inttoptr i32 %v1_80506f0 to i32*
  %v3_80506f0 = load i32, i32* %v2_80506f0, align 4
  %v1_80506f3 = add i32 %v3_80506f0, -1
  store i32 %v1_80506f3, i32* %eax.global-to-local, align 4
  %tmp137 = icmp slt i32 %v1_80506f3, 1
  br i1 %tmp137, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_80506fc

dec_label_pc_80506fc:                             ; preds = %dec_label_pc_80506f0
  %v2_80506fc = add i32 %v0_8050458, 27
  %v3_80506fc = add i32 %v2_80506fc, %v3_80506f0
  %v4_80506fc = inttoptr i32 %v3_80506fc to i8*
  %v5_80506fc = load i8, i8* %v4_80506fc, align 1
  %v6_80506fc = zext i8 %v5_80506fc to i32
  %v7_80506fc = load i32, i32* @edx, align 4
  %v8_80506fc = and i32 %v7_80506fc, -256
  %v9_80506fc = or i32 %v8_80506fc, %v6_80506fc
  store i32 %v9_80506fc, i32* %edx.global-to-local, align 4
  %v10_8050700 = icmp eq i8 %v5_80506fc, 62
  br i1 %v10_8050700, label %dec_label_pc_805072e.thread, label %dec_label_pc_8050705

dec_label_pc_8050705:                             ; preds = %dec_label_pc_80506fc
  %v10_8050705 = icmp eq i8 %v5_80506fc, 58
  br i1 %v10_8050705, label %dec_label_pc_805072e.thread, label %dec_label_pc_805070a

dec_label_pc_805070a:                             ; preds = %dec_label_pc_8050705, %dec_label_pc_8050729
  %v0_8050719 = phi i32 [ %v1_8050719, %dec_label_pc_8050729 ], [ %v1_80506f3, %dec_label_pc_8050705 ]
  %v7_8050720 = phi i32 [ %v9_8050720, %dec_label_pc_8050729 ], [ %v9_80506fc, %dec_label_pc_8050705 ]
  %v1_805070a = trunc i32 %v7_8050720 to i8
  %v10_805070a = icmp eq i8 %v1_805070a, 36
  br i1 %v10_805070a, label %dec_label_pc_805072e, label %dec_label_pc_805070f

dec_label_pc_805070f:                             ; preds = %dec_label_pc_805070a
  %v10_805070f = icmp eq i8 %v1_805070a, 35
  br i1 %v10_805070f, label %dec_label_pc_805072e, label %dec_label_pc_8050714

dec_label_pc_8050714:                             ; preds = %dec_label_pc_805070f
  %v10_8050714 = icmp eq i8 %v1_805070a, 37
  br i1 %v10_8050714, label %dec_label_pc_805072e, label %dec_label_pc_8050719

dec_label_pc_8050719:                             ; preds = %dec_label_pc_8050714
  %v1_8050719 = add i32 %v0_8050719, -1
  %v8_8050719 = icmp eq i32 %v1_8050719, 0
  store i32 %v1_8050719, i32* %eax.global-to-local, align 4
  br i1 %v8_8050719, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_8050720

dec_label_pc_8050720:                             ; preds = %dec_label_pc_8050719
  %v3_8050720 = add i32 %v2_80506fc, %v0_8050719
  %v4_8050720 = inttoptr i32 %v3_8050720 to i8*
  %v5_8050720 = load i8, i8* %v4_8050720, align 1
  %v6_8050720 = zext i8 %v5_8050720 to i32
  %v8_8050720 = and i32 %v7_8050720, -256
  %v9_8050720 = or i32 %v6_8050720, %v8_8050720
  store i32 %v9_8050720, i32* %edx.global-to-local, align 4
  %v10_8050724 = icmp eq i8 %v5_8050720, 58
  br i1 %v10_8050724, label %dec_label_pc_805072e, label %dec_label_pc_8050729

dec_label_pc_8050729:                             ; preds = %dec_label_pc_8050720
  %v10_8050729 = icmp eq i8 %v5_8050720, 62
  %v1_805072c = icmp eq i1 %v10_8050729, false
  br i1 %v1_805072c, label %dec_label_pc_805070a, label %dec_label_pc_805072e

dec_label_pc_805072e.thread:                      ; preds = %dec_label_pc_8050705, %dec_label_pc_80506fc
  store i32 %v3_80506f0, i32* @ebp, align 4
  br label %dec_label_pc_805073a

dec_label_pc_805072e:                             ; preds = %dec_label_pc_8050729, %dec_label_pc_8050720, %dec_label_pc_8050714, %dec_label_pc_805070f, %dec_label_pc_805070a
  %v0_805072e = phi i32 [ %v0_8050719, %dec_label_pc_805070a ], [ %v0_8050719, %dec_label_pc_805070f ], [ %v0_8050719, %dec_label_pc_8050714 ], [ %v1_8050719, %dec_label_pc_8050720 ], [ %v1_8050719, %dec_label_pc_8050729 ]
  %v1_805072e = add i32 %v0_805072e, 1
  store i32 %v1_805072e, i32* @ebp, align 4
  %v10_8050731 = icmp eq i32 %v0_805072e, -2
  br i1 %v10_8050731, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_805073a

dec_label_pc_805073a:                             ; preds = %dec_label_pc_805072e.thread, %dec_label_pc_805072e
  %v1_805072e155 = phi i32 [ %v3_80506f0, %dec_label_pc_805072e.thread ], [ %v1_805072e, %dec_label_pc_805072e ]
  %tmp138 = icmp slt i32 %v1_805072e155, 1
  br i1 %tmp138, label %dec_label_pc_8050a01, label %dec_label_pc_8050742

dec_label_pc_8050742:                             ; preds = %dec_label_pc_805073a
  %v0_8050742 = load i32, i32* @esp, align 4
  %v1_8050745 = add i32 %v0_8050742, -16
  %v2_8050745 = inttoptr i32 %v1_8050745 to i32*
  store i32 24, i32* %v2_8050745, align 4
  %v2_8050747 = call i32 @function_8051180(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050747, i32* %eax.global-to-local, align 4
  %v0_805074c = load i32, i32* @esp, align 4
  %v1_805074c = inttoptr i32 %v0_805074c to i32*
  %v2_805074c = load i32, i32* %v1_805074c, align 4
  store i32 %v2_805074c, i32* %eax.global-to-local, align 4
  %v3_805074c = add i32 %v0_805074c, 4
  %v1_805074d = inttoptr i32 %v3_805074c to i32*
  %v2_805074d = load i32, i32* %v1_805074d, align 4
  store i32 %v2_805074d, i32* %edx.global-to-local, align 4
  %v1_805074e = add i32 %v0_805074c, 1864
  store i32 %v1_805074e, i32* %eax.global-to-local, align 4
  store i32 %v1_805074e, i32* %v1_805074d, align 4
  store i32 24, i32* %v1_805074c, align 4
  %v3_8050758 = call i32 @function_80510d0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050758, i32* %eax.global-to-local, align 4
  %v0_805075d = load i32, i32* @esp, align 4
  %v1_805075d = add i32 %v0_805075d, -4
  %v2_805075d = inttoptr i32 %v1_805075d to i32*
  store i32 16384, i32* %v2_805075d, align 4
  %v1_8050762 = add i32 %v0_805075d, 1864
  %v2_8050762 = inttoptr i32 %v1_8050762 to i32*
  %v3_8050762 = load i32, i32* %v2_8050762, align 4
  store i32 %v3_8050762, i32* @esi, align 4
  %v2_8050769 = add i32 %v0_805075d, -8
  %v3_8050769 = inttoptr i32 %v2_8050769 to i32*
  store i32 %v3_8050762, i32* %v3_8050769, align 4
  %v2_805076a = add i32 %v0_805075d, -12
  %v3_805076a = inttoptr i32 %v2_805076a to i32*
  store i32 %v3_8050758, i32* %v3_805076a, align 4
  %v0_805076b = load i32, i32* @edi, align 4
  %v1_805076b = add i32 %v0_805076b, 4
  %v2_805076b = inttoptr i32 %v1_805076b to i32*
  %v3_805076b = load i32, i32* %v2_805076b, align 4
  store i32 %v3_805076b, i32* @ebx, align 4
  %v2_805076e = add i32 %v0_805075d, -16
  %v3_805076e = inttoptr i32 %v2_805076e to i32*
  store i32 %v3_805076b, i32* %v3_805076e, align 4
  %v0_805076f = call i32 @function_80528e3()
  store i32 %v0_805076f, i32* %eax.global-to-local, align 4
  %v0_8050774 = load i32, i32* @esp, align 4
  %v1_8050777 = add i32 %v0_8050774, 28
  %v2_8050777 = inttoptr i32 %v1_8050777 to i32*
  store i32 16384, i32* %v2_8050777, align 4
  %v1_805077c = add i32 %v0_8050774, 24
  %v2_805077c = inttoptr i32 %v1_805077c to i32*
  store i32 2, i32* %v2_805077c, align 4
  %v1_805077e = add i32 %v0_8050774, 20
  %v2_805077e = inttoptr i32 %v1_805077e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_805077e, align 4
  %v0_8050783 = load i32, i32* @edi, align 4
  %v1_8050783 = add i32 %v0_8050783, 4
  %v2_8050783 = inttoptr i32 %v1_8050783 to i32*
  %v3_8050783 = load i32, i32* %v2_8050783, align 4
  store i32 %v3_8050783, i32* %ecx.global-to-local, align 4
  %v2_8050786 = add i32 %v0_8050774, 16
  %v3_8050786 = inttoptr i32 %v2_8050786 to i32*
  store i32 %v3_8050783, i32* %v3_8050786, align 4
  %v0_8050787 = call i32 @function_80528e3()
  store i32 %v0_8050787, i32* %eax.global-to-local, align 4
  %v0_805078c = load i32, i32* @esp, align 4
  %v1_805078c = inttoptr i32 %v0_805078c to i32*
  store i32 24, i32* %v1_805078c, align 4
  %v2_8050793 = call i32 @function_8051100(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050793, i32* %eax.global-to-local, align 4
  %v0_805079b = load i32, i32* @edi, align 4
  %v1_805079b = add i32 %v0_805079b, 12
  %v2_805079b = inttoptr i32 %v1_805079b to i32*
  store i32 7, i32* %v2_805079b, align 4
  br label %dec_label_pc_8050828

dec_label_pc_80507a7:                             ; preds = %dec_label_pc_8050458
  %v0_80507a7 = load i32, i32* @esp, align 4
  %v1_80507aa = add i32 %v0_80507a7, -16
  %v2_80507aa = inttoptr i32 %v1_80507aa to i32*
  store i32 28, i32* %v2_80507aa, align 4
  %v2_80507ac = call i32 @function_8051180(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80507ac, i32* %eax.global-to-local, align 4
  %v0_80507b1 = load i32, i32* @esp, align 4
  %v1_80507b1 = inttoptr i32 %v0_80507b1 to i32*
  %v2_80507b1 = load i32, i32* %v1_80507b1, align 4
  store i32 %v2_80507b1, i32* %eax.global-to-local, align 4
  %v3_80507b1 = add i32 %v0_80507b1, 4
  %v1_80507b2 = inttoptr i32 %v3_80507b1 to i32*
  %v1_80507b3 = add i32 %v0_80507b1, 1868
  store i32 %v1_80507b3, i32* %edx.global-to-local, align 4
  store i32 %v1_80507b3, i32* %v1_80507b2, align 4
  store i32 28, i32* %v1_80507b1, align 4
  %v3_80507bd = call i32 @function_80510d0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80507bd, i32* %eax.global-to-local, align 4
  %v0_80507c2 = load i32, i32* @esp, align 4
  %v1_80507c2 = add i32 %v0_80507c2, 1868
  %v2_80507c2 = inttoptr i32 %v1_80507c2 to i32*
  %v3_80507c2 = load i32, i32* %v2_80507c2, align 4
  %v1_80507c9 = add i32 %v3_80507c2, -1
  store i32 %v1_80507c9, i32* %edx.global-to-local, align 4
  %v2_80507ca = add i32 %v0_80507c2, -4
  %v3_80507ca = inttoptr i32 %v2_80507ca to i32*
  store i32 %v1_80507c9, i32* %v3_80507ca, align 4
  %v2_80507cb = add i32 %v0_80507c2, -8
  %v3_80507cb = inttoptr i32 %v2_80507cb to i32*
  store i32 %v3_80507bd, i32* %v3_80507cb, align 4
  %v0_80507cc = load i32, i32* @edi, align 4
  %v1_80507cc = add i32 %v0_80507cc, 24
  %v2_80507cc = inttoptr i32 %v1_80507cc to i32*
  %v3_80507cc = load i32, i32* %v2_80507cc, align 4
  store i32 %v3_80507cc, i32* %eax.global-to-local, align 4
  %v2_80507cf = add i32 %v0_80507c2, -12
  %v3_80507cf = inttoptr i32 %v2_80507cf to i32*
  store i32 %v3_80507cc, i32* %v3_80507cf, align 4
  %v1_80507d0 = add i32 %v0_80507c2, 24
  %v2_80507d0 = inttoptr i32 %v1_80507d0 to i32*
  %v3_80507d0 = load i32, i32* %v2_80507d0, align 4
  store i32 %v3_80507d0, i32* %eax.global-to-local, align 4
  %v2_80507d4 = add i32 %v0_80507c2, -16
  %v3_80507d4 = inttoptr i32 %v2_80507d4 to i32*
  store i32 %v3_80507d0, i32* %v3_80507d4, align 4
  %v0_80507d5 = call i32 @function_8051cf0()
  %v0_80507da = load i32, i32* @esp, align 4
  %v1_80507dd = add i32 %v0_80507d5, 1
  %v8_80507dd = icmp eq i32 %v1_80507dd, 0
  store i32 %v1_80507dd, i32* %eax.global-to-local, align 4
  %v1_8050d05 = add i32 %v0_80507da, 16
  %v2_8050d05 = inttoptr i32 %v1_8050d05 to i32*
  store i32 28, i32* %v2_8050d05, align 4
  %v2_8050d07 = call i32 @function_8051100(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d07, i32* %eax.global-to-local, align 4
  %v0_8050d0c = load i32, i32* @esp, align 4
  %v1_8050d0c = inttoptr i32 %v0_8050d0c to i32*
  br i1 %v8_80507dd, label %dec_label_pc_8050d02, label %dec_label_pc_80507e4

dec_label_pc_80507e4:                             ; preds = %dec_label_pc_80507a7
  %v2_80507ee = load i32, i32* %v1_8050d0c, align 4
  store i32 %v2_80507ee, i32* %eax.global-to-local, align 4
  %v0_80507ef = load i32, i32* @edi, align 4
  %v1_80507ef = add i32 %v0_80507ef, 4
  %v2_80507ef = inttoptr i32 %v1_80507ef to i32*
  %v3_80507ef = load i32, i32* %v2_80507ef, align 4
  store i32 %v3_80507ef, i32* %eax.global-to-local, align 4
  store i32 %v3_80507ef, i32* %v1_8050d0c, align 4
  %v1_80507f3 = call i32 @function_80521b3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80507f3, i32* %eax.global-to-local, align 4
  %v0_80507f8 = load i32, i32* @edi, align 4
  %v1_80507f8 = add i32 %v0_80507f8, 284
  %v2_80507f8 = inttoptr i32 %v1_80507f8 to i8*
  %v3_80507f8 = load i8, i8* %v2_80507f8, align 1
  %v4_80507f8 = zext i8 %v3_80507f8 to i32
  %v6_80507f8 = and i32 %v1_80507f3, -256
  %v7_80507f8 = or i32 %v4_80507f8, %v6_80507f8
  %v1_8050801 = add i32 %v7_80507f8, 1
  store i32 %v1_8050801, i32* %eax.global-to-local, align 4
  %v1_8050802 = add i32 %v0_80507f8, 4
  %v2_8050802 = inttoptr i32 %v1_8050802 to i32*
  store i32 -1, i32* %v2_8050802, align 4
  %v0_8050809 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050809 = trunc i32 %v0_8050809 to i8
  %v2_8050809 = load i32, i32* @edi, align 4
  %v3_8050809 = add i32 %v2_8050809, 284
  %v4_8050809 = inttoptr i32 %v3_8050809 to i8*
  store i8 %v1_8050809, i8* %v4_8050809, align 1
  %v0_805080f = load i32, i32* %eax.global-to-local, align 4
  %v1_805080f = trunc i32 %v0_805080f to i8
  %v10_805080f = icmp eq i8 %v1_805080f, 10
  %v1_8050811 = icmp eq i1 %v10_805080f, false
  %v0_8050cf3 = load i32, i32* @edi, align 4
  br i1 %v1_8050811, label %dec_label_pc_8050cf3, label %dec_label_pc_8050817

dec_label_pc_8050817:                             ; preds = %dec_label_pc_80507e4
  %v1_8050817 = add i32 %v0_8050cf3, 284
  %v2_8050817 = inttoptr i32 %v1_8050817 to i8*
  store i8 0, i8* %v2_8050817, align 1
  %v0_805081e = load i32, i32* @edi, align 4
  %v1_805081e = add i32 %v0_805081e, 12
  %v2_805081e = inttoptr i32 %v1_805081e to i32*
  store i32 0, i32* %v2_805081e, align 4
  store i32 -1, i32* @ebp, align 4
  br label %dec_label_pc_8050828

dec_label_pc_8050828:                             ; preds = %dec_label_pc_8050a01, %dec_label_pc_80508ea, %dec_label_pc_8050bfb, %dec_label_pc_8050b82, %dec_label_pc_8050c74, %dec_label_pc_8050b31, %dec_label_pc_80504ef, %dec_label_pc_8050d85, %dec_label_pc_8050cf3, %dec_label_pc_8050742, %dec_label_pc_8050ab8, %dec_label_pc_8050817
  %v0_8050828 = load i32, i32* @edi, align 4
  %v1_8050828 = add i32 %v0_8050828, 24
  %v2_8050828 = inttoptr i32 %v1_8050828 to i32*
  %v3_8050828 = load i32, i32* %v2_8050828, align 4
  store i32 %v3_8050828, i32* @edx, align 4
  store i32 %v3_8050828, i32* %eax.global-to-local, align 4
  %v1_805082d = load i32, i32* @ebp, align 4
  %v2_805082d = sub i32 %v3_8050828, %v1_805082d
  %v8_805082d = xor i32 %v1_805082d, %v3_8050828
  %v9_805082d = xor i32 %v2_805082d, %v3_8050828
  %v10_805082d = and i32 %v9_805082d, %v8_805082d
  %v11_805082d = icmp slt i32 %v10_805082d, 0
  %v12_805082d = icmp eq i32 %v2_805082d, 0
  %v13_805082d = icmp slt i32 %v2_805082d, 0
  %v3_805082f = icmp ne i1 %v13_805082d, %v11_805082d
  %v4_805082f = or i1 %v12_805082d, %v3_805082f
  br i1 %v4_805082f, label %dec_label_pc_8050833, label %dec_label_pc_8050831

dec_label_pc_8050831:                             ; preds = %dec_label_pc_8050828
  store i32 %v1_805082d, i32* @edx, align 4
  br label %dec_label_pc_8050833

dec_label_pc_8050833:                             ; preds = %dec_label_pc_8050828, %dec_label_pc_8050831
  %v1_8050833 = phi i32 [ %v3_8050828, %dec_label_pc_8050828 ], [ %v1_805082d, %dec_label_pc_8050831 ]
  %v2_8050833 = sub i32 %v3_8050828, %v1_8050833
  store i32 %v2_8050833, i32* %eax.global-to-local, align 4
  store i32 %v2_8050833, i32* %v2_8050828, align 4
  %v0_8050838 = load i32, i32* @ebx, align 4
  %v1_8050838 = load i32, i32* @esp, align 4
  %v2_8050838 = add i32 %v1_8050838, -4
  %v3_8050838 = inttoptr i32 %v2_8050838 to i32*
  store i32 %v0_8050838, i32* %v3_8050838, align 4
  %v0_8050839 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050839 = add i32 %v1_8050838, -8
  %v3_8050839 = inttoptr i32 %v2_8050839 to i32*
  store i32 %v0_8050839, i32* %v3_8050839, align 4
  %v1_805083a = add i32 %v1_8050838, 8
  %v2_805083a = inttoptr i32 %v1_805083a to i32*
  %v3_805083a = load i32, i32* %v2_805083a, align 4
  %v1_805083e = load i32, i32* @edx, align 4
  %v2_805083e = add i32 %v1_805083e, %v3_805083a
  store i32 %v2_805083e, i32* %eax.global-to-local, align 4
  %v2_8050840 = add i32 %v1_8050838, -12
  %v3_8050840 = inttoptr i32 %v2_8050840 to i32*
  store i32 %v2_805083e, i32* %v3_8050840, align 4
  %v3_8050841 = load i32, i32* %v2_805083a, align 4
  store i32 %v3_8050841, i32* %ecx.global-to-local, align 4
  %v2_8050845 = add i32 %v1_8050838, -16
  %v3_8050845 = inttoptr i32 %v2_8050845 to i32*
  store i32 %v3_8050841, i32* %v3_8050845, align 4
  %v4_8050846 = call i32 @function_80526e7(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050846, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050458

dec_label_pc_8050853:                             ; preds = %dec_label_pc_8050458
  %v1_8050853 = add i32 %v0_8050458, 24
  %v2_8050853 = inttoptr i32 %v1_8050853 to i32*
  %v3_8050853 = load i32, i32* %v2_8050853, align 4
  %v1_8050856 = add i32 %v3_8050853, -1
  store i32 %v1_8050856, i32* %eax.global-to-local, align 4
  %tmp139 = icmp slt i32 %v1_8050856, 1
  br i1 %tmp139, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_805085f.preheader

dec_label_pc_805085f.preheader:                   ; preds = %dec_label_pc_8050853
  %v7_805085f.pre = load i32, i32* @edx, align 4
  %v2_805085f = add i32 %v0_8050458, 28
  br label %dec_label_pc_805085f

dec_label_pc_805085f:                             ; preds = %dec_label_pc_805085f.preheader, %dec_label_pc_8050890
  %v7_805085f = phi i32 [ %v7_805085f.pre, %dec_label_pc_805085f.preheader ], [ %v9_805085f, %dec_label_pc_8050890 ]
  %v0_8050be7 = phi i32 [ %v1_8050856, %dec_label_pc_805085f.preheader ], [ %v1_8050890, %dec_label_pc_8050890 ]
  %v3_805085f = add i32 %v2_805085f, %v0_8050be7
  %v4_805085f = inttoptr i32 %v3_805085f to i8*
  %v5_805085f = load i8, i8* %v4_805085f, align 1
  %v6_805085f = zext i8 %v5_805085f to i32
  %v8_805085f = and i32 %v7_805085f, -256
  %v9_805085f = or i32 %v6_805085f, %v8_805085f
  store i32 %v9_805085f, i32* %edx.global-to-local, align 4
  %v10_8050863 = icmp eq i8 %v5_805085f, 58
  br i1 %v10_8050863, label %dec_label_pc_8050be7, label %dec_label_pc_805086c

dec_label_pc_805086c:                             ; preds = %dec_label_pc_805085f
  %v10_805086c = icmp eq i8 %v5_805085f, 62
  br i1 %v10_805086c, label %dec_label_pc_8050be7, label %dec_label_pc_8050875

dec_label_pc_8050875:                             ; preds = %dec_label_pc_805086c
  %v10_8050875 = icmp eq i8 %v5_805085f, 36
  br i1 %v10_8050875, label %dec_label_pc_8050be7, label %dec_label_pc_805087e

dec_label_pc_805087e:                             ; preds = %dec_label_pc_8050875
  %v10_805087e = icmp eq i8 %v5_805085f, 35
  br i1 %v10_805087e, label %dec_label_pc_8050be7, label %dec_label_pc_8050887

dec_label_pc_8050887:                             ; preds = %dec_label_pc_805087e
  %v10_8050887 = icmp eq i8 %v5_805085f, 37
  br i1 %v10_8050887, label %dec_label_pc_8050be7, label %dec_label_pc_8050890

dec_label_pc_8050890:                             ; preds = %dec_label_pc_8050887
  %v1_8050890 = add i32 %v0_8050be7, -1
  %v8_8050890 = icmp eq i32 %v1_8050890, 0
  store i32 %v1_8050890, i32* %eax.global-to-local, align 4
  %v1_8050891 = icmp eq i1 %v8_8050890, false
  br i1 %v1_8050891, label %dec_label_pc_805085f, label %dec_label_pc_80503e6.backedge

dec_label_pc_8050898:                             ; preds = %dec_label_pc_8050458
  %v1_8050898 = add i32 %v0_8050458, 24
  %v2_8050898 = inttoptr i32 %v1_8050898 to i32*
  %v3_8050898 = load i32, i32* %v2_8050898, align 4
  %v1_805089b = add i32 %v3_8050898, -1
  store i32 %v1_805089b, i32* %eax.global-to-local, align 4
  %tmp140 = icmp slt i32 %v1_805089b, 1
  br i1 %tmp140, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_80508a4

dec_label_pc_80508a4:                             ; preds = %dec_label_pc_8050898
  %v2_80508a4 = add i32 %v0_8050458, 27
  %v3_80508a4 = add i32 %v2_80508a4, %v3_8050898
  %v4_80508a4 = inttoptr i32 %v3_80508a4 to i8*
  %v5_80508a4 = load i8, i8* %v4_80508a4, align 1
  %v6_80508a4 = zext i8 %v5_80508a4 to i32
  %v7_80508a4 = load i32, i32* @edx, align 4
  %v8_80508a4 = and i32 %v7_80508a4, -256
  %v9_80508a4 = or i32 %v8_80508a4, %v6_80508a4
  store i32 %v9_80508a4, i32* %edx.global-to-local, align 4
  %v10_80508a8 = icmp eq i8 %v5_80508a4, 62
  br i1 %v10_80508a8, label %dec_label_pc_80508d6.thread, label %dec_label_pc_80508ad

dec_label_pc_80508ad:                             ; preds = %dec_label_pc_80508a4
  %v10_80508ad = icmp eq i8 %v5_80508a4, 58
  br i1 %v10_80508ad, label %dec_label_pc_80508d6.thread, label %dec_label_pc_80508b2

dec_label_pc_80508b2:                             ; preds = %dec_label_pc_80508ad, %dec_label_pc_80508d1
  %v0_80508c1 = phi i32 [ %v1_80508c1, %dec_label_pc_80508d1 ], [ %v1_805089b, %dec_label_pc_80508ad ]
  %v7_80508c8 = phi i32 [ %v9_80508c8, %dec_label_pc_80508d1 ], [ %v9_80508a4, %dec_label_pc_80508ad ]
  %v1_80508b2 = trunc i32 %v7_80508c8 to i8
  %v10_80508b2 = icmp eq i8 %v1_80508b2, 36
  br i1 %v10_80508b2, label %dec_label_pc_80508d6, label %dec_label_pc_80508b7

dec_label_pc_80508b7:                             ; preds = %dec_label_pc_80508b2
  %v10_80508b7 = icmp eq i8 %v1_80508b2, 35
  br i1 %v10_80508b7, label %dec_label_pc_80508d6, label %dec_label_pc_80508bc

dec_label_pc_80508bc:                             ; preds = %dec_label_pc_80508b7
  %v10_80508bc = icmp eq i8 %v1_80508b2, 37
  br i1 %v10_80508bc, label %dec_label_pc_80508d6, label %dec_label_pc_80508c1

dec_label_pc_80508c1:                             ; preds = %dec_label_pc_80508bc
  %v1_80508c1 = add i32 %v0_80508c1, -1
  %v8_80508c1 = icmp eq i32 %v1_80508c1, 0
  store i32 %v1_80508c1, i32* %eax.global-to-local, align 4
  br i1 %v8_80508c1, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_80508c8

dec_label_pc_80508c8:                             ; preds = %dec_label_pc_80508c1
  %v3_80508c8 = add i32 %v2_80508a4, %v0_80508c1
  %v4_80508c8 = inttoptr i32 %v3_80508c8 to i8*
  %v5_80508c8 = load i8, i8* %v4_80508c8, align 1
  %v6_80508c8 = zext i8 %v5_80508c8 to i32
  %v8_80508c8 = and i32 %v7_80508c8, -256
  %v9_80508c8 = or i32 %v6_80508c8, %v8_80508c8
  store i32 %v9_80508c8, i32* %edx.global-to-local, align 4
  %v10_80508cc = icmp eq i8 %v5_80508c8, 58
  br i1 %v10_80508cc, label %dec_label_pc_80508d6, label %dec_label_pc_80508d1

dec_label_pc_80508d1:                             ; preds = %dec_label_pc_80508c8
  %v10_80508d1 = icmp eq i8 %v5_80508c8, 62
  %v1_80508d4 = icmp eq i1 %v10_80508d1, false
  br i1 %v1_80508d4, label %dec_label_pc_80508b2, label %dec_label_pc_80508d6

dec_label_pc_80508d6.thread:                      ; preds = %dec_label_pc_80508ad, %dec_label_pc_80508a4
  store i32 %v3_8050898, i32* @ebp, align 4
  br label %dec_label_pc_80508e2

dec_label_pc_80508d6:                             ; preds = %dec_label_pc_80508d1, %dec_label_pc_80508c8, %dec_label_pc_80508bc, %dec_label_pc_80508b7, %dec_label_pc_80508b2
  %v0_80508d6 = phi i32 [ %v0_80508c1, %dec_label_pc_80508b2 ], [ %v0_80508c1, %dec_label_pc_80508b7 ], [ %v0_80508c1, %dec_label_pc_80508bc ], [ %v1_80508c1, %dec_label_pc_80508c8 ], [ %v1_80508c1, %dec_label_pc_80508d1 ]
  %v1_80508d6 = add i32 %v0_80508d6, 1
  store i32 %v1_80508d6, i32* @ebp, align 4
  %v10_80508d9 = icmp eq i32 %v0_80508d6, -2
  br i1 %v10_80508d9, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_80508e2

dec_label_pc_80508e2:                             ; preds = %dec_label_pc_80508d6.thread, %dec_label_pc_80508d6
  %v1_80508d6158 = phi i32 [ %v3_8050898, %dec_label_pc_80508d6.thread ], [ %v1_80508d6, %dec_label_pc_80508d6 ]
  %tmp141 = icmp slt i32 %v1_80508d6158, 1
  br i1 %tmp141, label %dec_label_pc_8050a01, label %dec_label_pc_80508ea

dec_label_pc_80508ea:                             ; preds = %dec_label_pc_80508e2
  %v0_80508ea = load i32, i32* @esp, align 4
  %v1_80508ed = add i32 %v0_80508ea, -16
  %v2_80508ed = inttoptr i32 %v1_80508ed to i32*
  store i32 26, i32* %v2_80508ed, align 4
  %v2_80508ef = call i32 @function_8051180(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80508ef, i32* %eax.global-to-local, align 4
  %v0_80508f4 = load i32, i32* @esp, align 4
  %v1_80508f4 = inttoptr i32 %v0_80508f4 to i32*
  %v2_80508f4 = load i32, i32* %v1_80508f4, align 4
  store i32 %v2_80508f4, i32* %eax.global-to-local, align 4
  %v3_80508f4 = add i32 %v0_80508f4, 4
  %v1_80508f5 = inttoptr i32 %v3_80508f4 to i32*
  %v2_80508f5 = load i32, i32* %v1_80508f5, align 4
  store i32 %v2_80508f5, i32* %edx.global-to-local, align 4
  %v1_80508f6 = add i32 %v0_80508f4, 1868
  store i32 %v1_80508f6, i32* %eax.global-to-local, align 4
  store i32 %v1_80508f6, i32* %v1_80508f5, align 4
  store i32 26, i32* %v1_80508f4, align 4
  %v3_8050900 = call i32 @function_80510d0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050900, i32* %eax.global-to-local, align 4
  %v0_8050905 = load i32, i32* @esp, align 4
  %v1_8050905 = add i32 %v0_8050905, -4
  %v2_8050905 = inttoptr i32 %v1_8050905 to i32*
  store i32 16384, i32* %v2_8050905, align 4
  %v1_805090a = add i32 %v0_8050905, 1868
  %v2_805090a = inttoptr i32 %v1_805090a to i32*
  %v3_805090a = load i32, i32* %v2_805090a, align 4
  store i32 %v3_805090a, i32* @esi, align 4
  %v2_8050911 = add i32 %v0_8050905, -8
  %v3_8050911 = inttoptr i32 %v2_8050911 to i32*
  store i32 %v3_805090a, i32* %v3_8050911, align 4
  %v2_8050912 = add i32 %v0_8050905, -12
  %v3_8050912 = inttoptr i32 %v2_8050912 to i32*
  store i32 %v3_8050900, i32* %v3_8050912, align 4
  %v0_8050913 = load i32, i32* @edi, align 4
  %v1_8050913 = add i32 %v0_8050913, 4
  %v2_8050913 = inttoptr i32 %v1_8050913 to i32*
  %v3_8050913 = load i32, i32* %v2_8050913, align 4
  store i32 %v3_8050913, i32* @ebx, align 4
  %v2_8050916 = add i32 %v0_8050905, -16
  %v3_8050916 = inttoptr i32 %v2_8050916 to i32*
  store i32 %v3_8050913, i32* %v3_8050916, align 4
  %v0_8050917 = call i32 @function_80528e3()
  store i32 %v0_8050917, i32* %eax.global-to-local, align 4
  %v0_805091c = load i32, i32* @esp, align 4
  %v1_805091f = add i32 %v0_805091c, 28
  %v2_805091f = inttoptr i32 %v1_805091f to i32*
  store i32 16384, i32* %v2_805091f, align 4
  %v1_8050924 = add i32 %v0_805091c, 24
  %v2_8050924 = inttoptr i32 %v1_8050924 to i32*
  store i32 2, i32* %v2_8050924, align 4
  %v1_8050926 = add i32 %v0_805091c, 20
  %v2_8050926 = inttoptr i32 %v1_8050926 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_8050926, align 4
  %v0_805092b = load i32, i32* @edi, align 4
  %v1_805092b = add i32 %v0_805092b, 4
  %v2_805092b = inttoptr i32 %v1_805092b to i32*
  %v3_805092b = load i32, i32* %v2_805092b, align 4
  store i32 %v3_805092b, i32* %ecx.global-to-local, align 4
  %v2_805092e = add i32 %v0_805091c, 16
  %v3_805092e = inttoptr i32 %v2_805092e to i32*
  store i32 %v3_805092b, i32* %v3_805092e, align 4
  %v0_805092f = call i32 @function_80528e3()
  store i32 %v0_805092f, i32* %eax.global-to-local, align 4
  %v0_8050934 = load i32, i32* @esp, align 4
  %v1_8050934 = inttoptr i32 %v0_8050934 to i32*
  store i32 26, i32* %v1_8050934, align 4
  %v2_805093b = call i32 @function_8051100(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805093b, i32* %eax.global-to-local, align 4
  %v0_8050943 = load i32, i32* @edi, align 4
  %v1_8050943 = add i32 %v0_8050943, 12
  %v2_8050943 = inttoptr i32 %v1_8050943 to i32*
  store i32 10, i32* %v2_8050943, align 4
  br label %dec_label_pc_8050828

dec_label_pc_805094f:                             ; preds = %dec_label_pc_8050487
  %v1_805094f = add i32 %v0_8050475, 2
  store i32 %v1_805094f, i32* @ebx, align 4
  %v1_8050952 = add i32 %v0_8050952, 2
  store i32 %v1_8050952, i32* @ebp, align 4
  br label %dec_label_pc_8050471.backedge

dec_label_pc_8050471.backedge:                    ; preds = %dec_label_pc_805094f, %dec_label_pc_8050cb2
  %v0_80504ef124 = phi i32 [ %v0_80504ef125, %dec_label_pc_805094f ], [ %v0_8050ceb, %dec_label_pc_8050cb2 ]
  %v1_8050471 = phi i32 [ %v1_8050481, %dec_label_pc_805094f ], [ %v3_8050ceb, %dec_label_pc_8050cb2 ]
  %v0_8050471 = phi i32 [ %v1_8050952, %dec_label_pc_805094f ], [ %v0_8050471.pre, %dec_label_pc_8050cb2 ]
  %v5_8050487109 = phi i32 [ %v7_8050487, %dec_label_pc_805094f ], [ %v0_8050ce3, %dec_label_pc_8050cb2 ]
  %v0_805047a104 = phi i32 [ %v0_8050971, %dec_label_pc_805094f ], [ %v1_8050ce8, %dec_label_pc_8050cb2 ]
  %v2_8050471 = sub i32 %v0_8050471, %v1_8050471
  %v8_8050471 = xor i32 %v0_8050471, %v1_8050471
  %v9_8050471 = xor i32 %v2_8050471, %v0_8050471
  %v10_8050471 = and i32 %v9_8050471, %v8_8050471
  %v11_8050471 = icmp slt i32 %v10_8050471, 0
  %v13_8050471 = icmp slt i32 %v2_8050471, 0
  %v2_8050473 = icmp eq i1 %v13_8050471, %v11_8050471
  br i1 %v2_8050473, label %dec_label_pc_80504e7, label %dec_label_pc_8050475.preheader

dec_label_pc_805095a:                             ; preds = %dec_label_pc_80504a1
  store i8 -4, i8* %v1_80504a1, align 1
  %v0_805095d = load i32, i32* @ebx, align 4
  %v1_805095d = add i32 %v0_805095d, 2
  %v2_805095d = inttoptr i32 %v1_805095d to i8*
  %v3_805095d = load i8, i8* %v2_805095d, align 1
  %v4_805095d = zext i8 %v3_805095d to i32
  %v5_805095d = load i32, i32* %eax.global-to-local, align 4
  %v6_805095d = and i32 %v5_805095d, -256
  %v7_805095d = or i32 %v6_805095d, %v4_805095d
  store i32 %v7_805095d, i32* %eax.global-to-local, align 4
  %v11_8050960 = icmp eq i8 %v3_805095d, -3
  %v1_8050962 = icmp eq i1 %v11_8050960, false
  br i1 %v1_8050962, label %dec_label_pc_80504be, label %dec_label_pc_8050968

dec_label_pc_8050968:                             ; preds = %dec_label_pc_805095a, %dec_label_pc_80504b3
  %v0_8050968 = phi i32 [ %v0_805095d, %dec_label_pc_805095a ], [ %v0_80504b3, %dec_label_pc_80504b3 ]
  %v1_8050968 = add i32 %v0_8050968, 2
  %v2_8050968 = inttoptr i32 %v1_8050968 to i8*
  store i8 -4, i8* %v2_8050968, align 1
  br label %dec_label_pc_80504c6

dec_label_pc_8050971:                             ; preds = %dec_label_pc_8050492
  %v1_8050971 = add i32 %v0_8050971, 1863
  %v2_8050971 = inttoptr i32 %v1_8050971 to i8*
  store i8 -1, i8* %v2_8050971, align 1
  %v0_8050979 = load i32, i32* @esp, align 4
  %v1_8050979 = add i32 %v0_8050979, 1864
  %v2_8050979 = inttoptr i32 %v1_8050979 to i8*
  store i8 -5, i8* %v2_8050979, align 1
  %v0_8050981 = load i32, i32* @esp, align 4
  %v1_8050981 = add i32 %v0_8050981, 1865
  %v2_8050981 = inttoptr i32 %v1_8050981 to i8*
  store i8 31, i8* %v2_8050981, align 1
  %v0_8050989 = load i32, i32* @esp, align 4
  %v1_8050989 = add i32 %v0_8050989, 1831
  %v2_8050989 = inttoptr i32 %v1_8050989 to i8*
  store i8 -1, i8* %v2_8050989, align 1
  %v0_8050991 = load i32, i32* @esp, align 4
  %v1_8050991 = add i32 %v0_8050991, 1832
  %v2_8050991 = inttoptr i32 %v1_8050991 to i8*
  store i8 -6, i8* %v2_8050991, align 1
  %v0_8050999 = load i32, i32* @esp, align 4
  %v1_8050999 = add i32 %v0_8050999, 1833
  %v2_8050999 = inttoptr i32 %v1_8050999 to i8*
  store i8 31, i8* %v2_8050999, align 1
  %v0_80509a1 = load i32, i32* @esp, align 4
  %v1_80509a1 = add i32 %v0_80509a1, 1834
  %v2_80509a1 = inttoptr i32 %v1_80509a1 to i8*
  store i8 0, i8* %v2_80509a1, align 1
  %v0_80509a9 = load i32, i32* @esp, align 4
  %v1_80509a9 = add i32 %v0_80509a9, 1835
  %v2_80509a9 = inttoptr i32 %v1_80509a9 to i8*
  store i8 80, i8* %v2_80509a9, align 1
  %v0_80509b1 = load i32, i32* @esp, align 4
  %v1_80509b1 = add i32 %v0_80509b1, 1836
  %v2_80509b1 = inttoptr i32 %v1_80509b1 to i8*
  store i8 0, i8* %v2_80509b1, align 1
  %v0_80509b9 = load i32, i32* @esp, align 4
  %v1_80509b9 = add i32 %v0_80509b9, 1837
  %v2_80509b9 = inttoptr i32 %v1_80509b9 to i8*
  store i8 24, i8* %v2_80509b9, align 1
  %v0_80509c1 = load i32, i32* @esp, align 4
  %v1_80509c1 = add i32 %v0_80509c1, 1838
  %v2_80509c1 = inttoptr i32 %v1_80509c1 to i8*
  store i8 -1, i8* %v2_80509c1, align 1
  %v0_80509c9 = load i32, i32* @esp, align 4
  %v1_80509c9 = add i32 %v0_80509c9, 1839
  %v2_80509c9 = inttoptr i32 %v1_80509c9 to i8*
  store i8 -16, i8* %v2_80509c9, align 1
  %v0_80509d1 = load i32, i32* @esp, align 4
  %v1_80509d1 = add i32 %v0_80509d1, 8
  %v2_80509d1 = inttoptr i32 %v1_80509d1 to i32*
  %v3_80509d1 = load i32, i32* %v2_80509d1, align 4
  store i32 %v3_80509d1, i32* %eax.global-to-local, align 4
  %v0_80509d5 = load i32, i32* @edi, align 4
  %v1_80509d5 = add i32 %v0_80509d5, 24
  %v2_80509d5 = inttoptr i32 %v1_80509d5 to i32*
  %v3_80509d5 = load i32, i32* %v2_80509d5, align 4
  store i32 %v3_80509d5, i32* %ecx.global-to-local, align 4
  %v0_80509d8 = load i32, i32* @ebx, align 4
  %v1_80509d8 = add i32 %v0_80509d8, 2
  store i32 %v1_80509d8, i32* %edx.global-to-local, align 4
  %v2_80509db = add i32 %v3_80509d5, %v3_80509d1
  store i32 %v2_80509db, i32* %eax.global-to-local, align 4
  %tmp271 = icmp ugt i32 %v2_80509db, %v1_80509d8
  br i1 %tmp271, label %dec_label_pc_80509e5, label %dec_label_pc_8050971.dec_label_pc_80504e7.loopexit_crit_edge

dec_label_pc_8050971.dec_label_pc_80504e7.loopexit_crit_edge: ; preds = %dec_label_pc_8050971
  %v0_80504e7.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80504e7

dec_label_pc_80509e5:                             ; preds = %dec_label_pc_8050971
  %v2_80509e5 = inttoptr i32 %v1_80509d8 to i8*
  %v3_80509e5 = load i8, i8* %v2_80509e5, align 1
  %v12_80509e5 = icmp eq i8 %v3_80509e5, 31
  br i1 %v12_80509e5, label %dec_label_pc_8050cb2, label %dec_label_pc_80509ef

dec_label_pc_80509ef:                             ; preds = %dec_label_pc_80509e5
  %v1_80509ef = inttoptr i32 %v0_80509d8 to i8*
  %v2_80509ef = load i8, i8* %v1_80509ef, align 1
  %v3_80509ef = zext i8 %v2_80509ef to i32
  %v5_80509ef = and i32 %v2_80509db, -256
  %v6_80509ef = or i32 %v3_80509ef, %v5_80509ef
  store i32 %v6_80509ef, i32* %eax.global-to-local, align 4
  %v11_80509f1 = icmp eq i8 %v2_80509ef, -3
  %v1_80509f3 = icmp eq i1 %v11_80509f1, false
  br i1 %v1_80509f3, label %dec_label_pc_8050f4b, label %dec_label_pc_80509f9

dec_label_pc_80509f9:                             ; preds = %dec_label_pc_80509ef
  store i8 -4, i8* %v1_80509ef, align 1
  br label %dec_label_pc_80504a1

dec_label_pc_8050a01:                             ; preds = %dec_label_pc_80508e2, %dec_label_pc_8050bf3, %dec_label_pc_8050b7a, %dec_label_pc_8050c6c, %dec_label_pc_8050b29, %dec_label_pc_80504e7, %dec_label_pc_8050d59, %dec_label_pc_805073a, %dec_label_pc_8050ab0
  %v0_8050a01 = phi i32 [ %v1_80508d6158, %dec_label_pc_80508e2 ], [ %v1_8050be7, %dec_label_pc_8050bf3 ], [ %v1_8050b6e, %dec_label_pc_8050b7a ], [ %v0_8050c6c, %dec_label_pc_8050c6c ], [ %v0_8050b29, %dec_label_pc_8050b29 ], [ %v0_80504e7, %dec_label_pc_80504e7 ], [ %v0_8050d50, %dec_label_pc_8050d59 ], [ %v1_805072e155, %dec_label_pc_805073a ], [ %v1_8050aa4, %dec_label_pc_8050ab0 ]
  %v1_8050a01 = icmp eq i32 %v0_8050a01, 0
  %v1_8050a03 = icmp eq i1 %v1_8050a01, false
  br i1 %v1_8050a03, label %dec_label_pc_8050828, label %dec_label_pc_80503e6.backedge

dec_label_pc_8050a10:                             ; preds = %dec_label_pc_8050401
  %v1_805042e = icmp eq i32 %v0_8050426, 0
  br i1 %v1_805042e, label %dec_label_pc_8050f6d, label %dec_label_pc_8050a16

dec_label_pc_8050a16:                             ; preds = %dec_label_pc_8050a10
  %v10_8050a16 = icmp eq i32 %v0_8050426, -1
  %v1_8050a19 = icmp eq i1 %v10_8050a16, false
  br i1 %v1_8050a19, label %dec_label_pc_8050448, label %dec_label_pc_8050a1f

dec_label_pc_8050a1f:                             ; preds = %dec_label_pc_8050a16
  %v1_8050a1f = add i32 %v0_805042b, 40
  %v2_8050a1f = inttoptr i32 %v1_8050a1f to i32*
  %v3_8050a1f = load i32, i32* %v2_8050a1f, align 4
  store i32 %v3_8050a1f, i32* %edx.global-to-local, align 4
  %v1_8050a23 = inttoptr i32 %v3_8050a1f to i32*
  %v2_8050a23 = load i32, i32* %v1_8050a23, align 4
  %v11_8050a23 = icmp eq i32 %v2_8050a23, 11
  br i1 %v11_8050a23, label %dec_label_pc_8050383, label %dec_label_pc_8050a2c

dec_label_pc_8050a2c:                             ; preds = %dec_label_pc_8050a1f, %dec_label_pc_8050f6d
  %v0_8050a2c = phi i32 [ %v1_805042b, %dec_label_pc_8050a1f ], [ %v0_8050a2c.pre, %dec_label_pc_8050f6d ]
  %v0_8050a2f = load i32, i32* @edi, align 4
  %v1_8050a2f = add i32 %v0_8050a2f, 4
  %v2_8050a2f = inttoptr i32 %v1_8050a2f to i32*
  %v3_8050a2f = load i32, i32* %v2_8050a2f, align 4
  store i32 %v3_8050a2f, i32* @esi, align 4
  %v2_8050a32 = add i32 %v0_8050a2c, -16
  %v3_8050a32 = inttoptr i32 %v2_8050a32 to i32*
  store i32 %v3_8050a2f, i32* %v3_8050a32, align 4
  %v1_8050a33 = call i32 @function_80521b3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050a33, i32* %eax.global-to-local, align 4
  %v0_8050a38 = load i32, i32* @edi, align 4
  %v1_8050a38 = add i32 %v0_8050a38, 284
  %v2_8050a38 = inttoptr i32 %v1_8050a38 to i8*
  %v3_8050a38 = load i8, i8* %v2_8050a38, align 1
  %v4_8050a38 = zext i8 %v3_8050a38 to i32
  %v6_8050a38 = and i32 %v1_8050a33, -256
  %v7_8050a38 = or i32 %v4_8050a38, %v6_8050a38
  %v1_8050a41 = add i32 %v7_8050a38, 1
  store i32 %v1_8050a41, i32* %eax.global-to-local, align 4
  %v1_8050a42 = add i32 %v0_8050a38, 4
  %v2_8050a42 = inttoptr i32 %v1_8050a42 to i32*
  store i32 -1, i32* %v2_8050a42, align 4
  %v0_8050a49 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050a49 = trunc i32 %v0_8050a49 to i8
  %v2_8050a49 = load i32, i32* @edi, align 4
  %v3_8050a49 = add i32 %v2_8050a49, 284
  %v4_8050a49 = inttoptr i32 %v3_8050a49 to i8*
  store i8 %v1_8050a49, i8* %v4_8050a49, align 1
  %v0_8050a4f = load i32, i32* %eax.global-to-local, align 4
  %v1_8050a4f = trunc i32 %v0_8050a4f to i8
  %tmp272 = icmp ult i8 %v1_8050a4f, 10
  %v0_8050f7c = load i32, i32* @edi, align 4
  br i1 %tmp272, label %dec_label_pc_8050f7c, label %dec_label_pc_8050a57

dec_label_pc_8050a57:                             ; preds = %dec_label_pc_8050a2c
  %v1_8050a57 = add i32 %v0_8050f7c, 284
  %v2_8050a57 = inttoptr i32 %v1_8050a57 to i8*
  store i8 0, i8* %v2_8050a57, align 1
  %v0_8050a5e = load i32, i32* @edi, align 4
  %v1_8050a5e = add i32 %v0_8050a5e, 12
  %v2_8050a5e = inttoptr i32 %v1_8050a5e to i32*
  store i32 0, i32* %v2_8050a5e, align 4
  br label %dec_label_pc_8050383

dec_label_pc_8050a70:                             ; preds = %dec_label_pc_80504be
  %v1_8050a70 = add i32 %v0_8050a70, 2
  %v2_8050a70 = inttoptr i32 %v1_8050a70 to i8*
  store i8 -3, i8* %v2_8050a70, align 1
  br label %dec_label_pc_80504c6

dec_label_pc_8050a79:                             ; preds = %dec_label_pc_80503ed
  %v0_8050a79 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8050a79, i32* %edx.global-to-local, align 4
  %v1_8050a7b = load i32, i32* @esp, align 4
  %v2_8050a7b = add i32 %v1_8050a7b, -4
  %v3_8050a7b = inttoptr i32 %v2_8050a7b to i32*
  store i32 %v0_8050a79, i32* %v3_8050a7b, align 4
  %v0_8050a7c = load i32, i32* @edi, align 4
  %v1_8050a7c = add i32 %v0_8050a7c, 92
  store i32 %v1_8050a7c, i32* %eax.global-to-local, align 4
  %v1_8050a7f = add i32 %v1_8050a7b, -8
  %v2_8050a7f = inttoptr i32 %v1_8050a7f to i32*
  store i32 192, i32* %v2_8050a7f, align 4
  %v0_8050a84 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050a84 = add i32 %v1_8050a7b, -12
  %v3_8050a84 = inttoptr i32 %v2_8050a84 to i32*
  store i32 %v0_8050a84, i32* %v3_8050a84, align 4
  %v0_8050a85 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050a85 = add i32 %v1_8050a7b, -16
  %v3_8050a85 = inttoptr i32 %v2_8050a85 to i32*
  store i32 %v0_8050a85, i32* %v3_8050a85, align 4
  %v4_8050a86 = call i32 @function_80526e7(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050a86, i32* %eax.global-to-local, align 4
  %v0_8050a8b = load i32, i32* @edi, align 4
  %v1_8050a8b = add i32 %v0_8050a8b, 24
  %v2_8050a8b = inttoptr i32 %v1_8050a8b to i32*
  %v3_8050a8b = load i32, i32* %v2_8050a8b, align 4
  %v1_8050a8e = add i32 %v3_8050a8b, -64
  store i32 %v1_8050a8e, i32* %eax.global-to-local, align 4
  store i32 %v1_8050a8e, i32* %v2_8050a8b, align 4
  br label %dec_label_pc_8050401

dec_label_pc_8050a9c:                             ; preds = %dec_label_pc_80504ab
  store i8 -3, i8* %v1_80504a1, align 1
  %v5_80504b3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80504b3

dec_label_pc_8050aa4:                             ; preds = %dec_label_pc_80506d9, %dec_label_pc_80506d0, %dec_label_pc_80506c7, %dec_label_pc_80506be, %dec_label_pc_80506b1
  %v1_8050aa4 = add i32 %v0_8050aa4, 1
  store i32 %v1_8050aa4, i32* @ebp, align 4
  %v10_8050aa7 = icmp eq i32 %v0_8050aa4, -2
  br i1 %v10_8050aa7, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_8050ab0

dec_label_pc_8050ab0:                             ; preds = %dec_label_pc_8050aa4
  %tmp142 = icmp slt i32 %v1_8050aa4, 1
  br i1 %tmp142, label %dec_label_pc_8050a01, label %dec_label_pc_8050ab8

dec_label_pc_8050ab8:                             ; preds = %dec_label_pc_8050ab0
  %v0_8050ab8 = load i32, i32* @esp, align 4
  %v1_8050abb = add i32 %v0_8050ab8, -16
  %v2_8050abb = inttoptr i32 %v1_8050abb to i32*
  store i32 25, i32* %v2_8050abb, align 4
  %v2_8050abd = call i32 @function_8051180(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050abd, i32* %eax.global-to-local, align 4
  %v0_8050ac2 = load i32, i32* @esp, align 4
  %v1_8050ac2 = inttoptr i32 %v0_8050ac2 to i32*
  %v2_8050ac2 = load i32, i32* %v1_8050ac2, align 4
  store i32 %v2_8050ac2, i32* %eax.global-to-local, align 4
  %v3_8050ac2 = add i32 %v0_8050ac2, 4
  %v1_8050ac3 = inttoptr i32 %v3_8050ac2 to i32*
  %v2_8050ac3 = load i32, i32* %v1_8050ac3, align 4
  store i32 %v2_8050ac3, i32* %edx.global-to-local, align 4
  %v1_8050ac4 = add i32 %v0_8050ac2, 1868
  store i32 %v1_8050ac4, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050ac4, i32* %v1_8050ac3, align 4
  store i32 25, i32* %v1_8050ac2, align 4
  %v3_8050ace = call i32 @function_80510d0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050ace, i32* %eax.global-to-local, align 4
  %v0_8050ad3 = load i32, i32* @esp, align 4
  %v1_8050ad3 = add i32 %v0_8050ad3, -4
  %v2_8050ad3 = inttoptr i32 %v1_8050ad3 to i32*
  store i32 16384, i32* %v2_8050ad3, align 4
  %v1_8050ad8 = add i32 %v0_8050ad3, 1868
  %v2_8050ad8 = inttoptr i32 %v1_8050ad8 to i32*
  %v3_8050ad8 = load i32, i32* %v2_8050ad8, align 4
  store i32 %v3_8050ad8, i32* @esi, align 4
  %v2_8050adf = add i32 %v0_8050ad3, -8
  %v3_8050adf = inttoptr i32 %v2_8050adf to i32*
  store i32 %v3_8050ad8, i32* %v3_8050adf, align 4
  %v2_8050ae0 = add i32 %v0_8050ad3, -12
  %v3_8050ae0 = inttoptr i32 %v2_8050ae0 to i32*
  store i32 %v3_8050ace, i32* %v3_8050ae0, align 4
  %v0_8050ae1 = load i32, i32* @edi, align 4
  %v1_8050ae1 = add i32 %v0_8050ae1, 4
  %v2_8050ae1 = inttoptr i32 %v1_8050ae1 to i32*
  %v3_8050ae1 = load i32, i32* %v2_8050ae1, align 4
  store i32 %v3_8050ae1, i32* @ebx, align 4
  %v2_8050ae4 = add i32 %v0_8050ad3, -16
  %v3_8050ae4 = inttoptr i32 %v2_8050ae4 to i32*
  store i32 %v3_8050ae1, i32* %v3_8050ae4, align 4
  %v0_8050ae5 = call i32 @function_80528e3()
  store i32 %v0_8050ae5, i32* %eax.global-to-local, align 4
  %v0_8050aea = load i32, i32* @esp, align 4
  %v1_8050aed = add i32 %v0_8050aea, 28
  %v2_8050aed = inttoptr i32 %v1_8050aed to i32*
  store i32 16384, i32* %v2_8050aed, align 4
  %v1_8050af2 = add i32 %v0_8050aea, 24
  %v2_8050af2 = inttoptr i32 %v1_8050af2 to i32*
  store i32 2, i32* %v2_8050af2, align 4
  %v1_8050af4 = add i32 %v0_8050aea, 20
  %v2_8050af4 = inttoptr i32 %v1_8050af4 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_8050af4, align 4
  %v0_8050af9 = load i32, i32* @edi, align 4
  %v1_8050af9 = add i32 %v0_8050af9, 4
  %v2_8050af9 = inttoptr i32 %v1_8050af9 to i32*
  %v3_8050af9 = load i32, i32* %v2_8050af9, align 4
  store i32 %v3_8050af9, i32* %ecx.global-to-local, align 4
  %v2_8050afc = add i32 %v0_8050aea, 16
  %v3_8050afc = inttoptr i32 %v2_8050afc to i32*
  store i32 %v3_8050af9, i32* %v3_8050afc, align 4
  %v0_8050afd = call i32 @function_80528e3()
  store i32 %v0_8050afd, i32* %eax.global-to-local, align 4
  %v0_8050b02 = load i32, i32* @esp, align 4
  %v1_8050b02 = inttoptr i32 %v0_8050b02 to i32*
  store i32 25, i32* %v1_8050b02, align 4
  %v2_8050b09 = call i32 @function_8051100(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050b09, i32* %eax.global-to-local, align 4
  %v0_8050b11 = load i32, i32* @edi, align 4
  %v1_8050b11 = add i32 %v0_8050b11, 12
  %v2_8050b11 = inttoptr i32 %v1_8050b11 to i32*
  store i32 9, i32* %v2_8050b11, align 4
  br label %dec_label_pc_8050828

dec_label_pc_8050b1d:                             ; preds = %dec_label_pc_805052b, %dec_label_pc_8050522, %dec_label_pc_8050519, %dec_label_pc_8050510, %dec_label_pc_8050503
  %v1_8050b1d = add i32 %v0_8050b1d, 1
  store i32 %v1_8050b1d, i32* @ebp, align 4
  %v10_8050b20 = icmp eq i32 %v0_8050b1d, -2
  br i1 %v10_8050b20, label %dec_label_pc_8050537, label %dec_label_pc_8050b29

dec_label_pc_8050b29:                             ; preds = %dec_label_pc_8050b1d, %dec_label_pc_80505a1
  %v0_8050b29 = phi i32 [ %v1_8050b1d, %dec_label_pc_8050b1d ], [ %v0_80505ba, %dec_label_pc_80505a1 ]
  %tmp143 = icmp slt i32 %v0_8050b29, 1
  br i1 %tmp143, label %dec_label_pc_8050a01, label %dec_label_pc_8050b31

dec_label_pc_8050b31:                             ; preds = %dec_label_pc_8050b29
  %v0_8050b31 = load i32, i32* @edi, align 4
  %v1_8050b31 = inttoptr i32 %v0_8050b31 to i32*
  %v2_8050b31 = load i32, i32* %v1_8050b31, align 4
  store i32 %v2_8050b31, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050b35 = load i32, i32* @esp, align 4
  %v1_8050b35 = add i32 %v0_8050b35, -4
  %v2_8050b35 = inttoptr i32 %v1_8050b35 to i32*
  store i32 16384, i32* %v2_8050b35, align 4
  %v0_8050b3a = load i32, i32* %edx.global-to-local, align 4
  %v1_8050b3a = add i32 %v0_8050b3a, 12
  %v2_8050b3a = inttoptr i32 %v1_8050b3a to i8*
  %v3_8050b3a = load i8, i8* %v2_8050b3a, align 1
  %v4_8050b3a = zext i8 %v3_8050b3a to i32
  %v5_8050b3a = load i32, i32* %eax.global-to-local, align 4
  %v6_8050b3a = and i32 %v5_8050b3a, -256
  %v7_8050b3a = or i32 %v6_8050b3a, %v4_8050b3a
  store i32 %v7_8050b3a, i32* %eax.global-to-local, align 4
  %v2_8050b3d = add i32 %v0_8050b35, -8
  %v3_8050b3d = inttoptr i32 %v2_8050b3d to i32*
  store i32 %v7_8050b3a, i32* %v3_8050b3d, align 4
  %v0_8050b3e = load i32, i32* %edx.global-to-local, align 4
  %v1_8050b3e = inttoptr i32 %v0_8050b3e to i32*
  %v2_8050b3e = load i32, i32* %v1_8050b3e, align 4
  store i32 %v2_8050b3e, i32* @esi, align 4
  %v2_8050b40 = add i32 %v0_8050b35, -12
  %v3_8050b40 = inttoptr i32 %v2_8050b40 to i32*
  store i32 %v2_8050b3e, i32* %v3_8050b40, align 4
  %v0_8050b41 = load i32, i32* @edi, align 4
  %v1_8050b41 = add i32 %v0_8050b41, 4
  %v2_8050b41 = inttoptr i32 %v1_8050b41 to i32*
  %v3_8050b41 = load i32, i32* %v2_8050b41, align 4
  store i32 %v3_8050b41, i32* @ebx, align 4
  %v2_8050b44 = add i32 %v0_8050b35, -16
  %v3_8050b44 = inttoptr i32 %v2_8050b44 to i32*
  store i32 %v3_8050b41, i32* %v3_8050b44, align 4
  %v0_8050b45 = call i32 @function_80528e3()
  store i32 %v0_8050b45, i32* %eax.global-to-local, align 4
  %v0_8050b4a = load i32, i32* @esp, align 4
  %v1_8050b4a = add i32 %v0_8050b4a, -4
  %v2_8050b4a = inttoptr i32 %v1_8050b4a to i32*
  store i32 16384, i32* %v2_8050b4a, align 4
  %v1_8050b4f = add i32 %v0_8050b4a, -8
  %v2_8050b4f = inttoptr i32 %v1_8050b4f to i32*
  store i32 2, i32* %v2_8050b4f, align 4
  %v1_8050b51 = add i32 %v0_8050b4a, -12
  %v2_8050b51 = inttoptr i32 %v1_8050b51 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_8050b51, align 4
  %v0_8050b56 = load i32, i32* @edi, align 4
  %v1_8050b56 = add i32 %v0_8050b56, 4
  %v2_8050b56 = inttoptr i32 %v1_8050b56 to i32*
  %v3_8050b56 = load i32, i32* %v2_8050b56, align 4
  store i32 %v3_8050b56, i32* %ecx.global-to-local, align 4
  %v2_8050b59 = add i32 %v0_8050b4a, -16
  %v3_8050b59 = inttoptr i32 %v2_8050b59 to i32*
  store i32 %v3_8050b56, i32* %v3_8050b59, align 4
  %v0_8050b5a = call i32 @function_80528e3()
  store i32 %v0_8050b5a, i32* %eax.global-to-local, align 4
  %v0_8050b62 = load i32, i32* @edi, align 4
  %v1_8050b62 = add i32 %v0_8050b62, 12
  %v2_8050b62 = inttoptr i32 %v1_8050b62 to i32*
  store i32 4, i32* %v2_8050b62, align 4
  br label %dec_label_pc_8050828

dec_label_pc_8050b6e:                             ; preds = %dec_label_pc_8050694, %dec_label_pc_805068b, %dec_label_pc_8050682, %dec_label_pc_8050679, %dec_label_pc_805066c
  %v1_8050b6e = add i32 %v0_8050b6e, 1
  store i32 %v1_8050b6e, i32* @ebp, align 4
  %v10_8050b71 = icmp eq i32 %v0_8050b6e, -2
  br i1 %v10_8050b71, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_8050b7a

dec_label_pc_8050b7a:                             ; preds = %dec_label_pc_8050b6e
  %tmp144 = icmp slt i32 %v1_8050b6e, 1
  br i1 %tmp144, label %dec_label_pc_8050a01, label %dec_label_pc_8050b82

dec_label_pc_8050b82:                             ; preds = %dec_label_pc_8050b7a
  %v0_8050b82 = load i32, i32* @esp, align 4
  %v1_8050b85 = add i32 %v0_8050b82, -16
  %v2_8050b85 = inttoptr i32 %v1_8050b85 to i32*
  store i32 23, i32* %v2_8050b85, align 4
  %v2_8050b87 = call i32 @function_8051180(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050b87, i32* %eax.global-to-local, align 4
  %v0_8050b8c = load i32, i32* @esp, align 4
  %v1_8050b8c = inttoptr i32 %v0_8050b8c to i32*
  %v2_8050b8c = load i32, i32* %v1_8050b8c, align 4
  store i32 %v2_8050b8c, i32* %eax.global-to-local, align 4
  %v3_8050b8c = add i32 %v0_8050b8c, 4
  %v1_8050b8d = inttoptr i32 %v3_8050b8c to i32*
  %v1_8050b8e = add i32 %v0_8050b8c, 1868
  store i32 %v1_8050b8e, i32* %edx.global-to-local, align 4
  store i32 %v1_8050b8e, i32* %v1_8050b8d, align 4
  store i32 23, i32* %v1_8050b8c, align 4
  %v3_8050b98 = call i32 @function_80510d0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050b98, i32* %eax.global-to-local, align 4
  %v0_8050b9d = load i32, i32* @esp, align 4
  %v1_8050b9d = add i32 %v0_8050b9d, -4
  %v2_8050b9d = inttoptr i32 %v1_8050b9d to i32*
  store i32 16384, i32* %v2_8050b9d, align 4
  %v1_8050ba2 = add i32 %v0_8050b9d, 1868
  %v2_8050ba2 = inttoptr i32 %v1_8050ba2 to i32*
  %v3_8050ba2 = load i32, i32* %v2_8050ba2, align 4
  store i32 %v3_8050ba2, i32* @esi, align 4
  %v2_8050ba9 = add i32 %v0_8050b9d, -8
  %v3_8050ba9 = inttoptr i32 %v2_8050ba9 to i32*
  store i32 %v3_8050ba2, i32* %v3_8050ba9, align 4
  %v2_8050baa = add i32 %v0_8050b9d, -12
  %v3_8050baa = inttoptr i32 %v2_8050baa to i32*
  store i32 %v3_8050b98, i32* %v3_8050baa, align 4
  %v0_8050bab = load i32, i32* @edi, align 4
  %v1_8050bab = add i32 %v0_8050bab, 4
  %v2_8050bab = inttoptr i32 %v1_8050bab to i32*
  %v3_8050bab = load i32, i32* %v2_8050bab, align 4
  store i32 %v3_8050bab, i32* @ebx, align 4
  %v2_8050bae = add i32 %v0_8050b9d, -16
  %v3_8050bae = inttoptr i32 %v2_8050bae to i32*
  store i32 %v3_8050bab, i32* %v3_8050bae, align 4
  %v0_8050baf = call i32 @function_80528e3()
  store i32 %v0_8050baf, i32* %eax.global-to-local, align 4
  %v0_8050bb4 = load i32, i32* @esp, align 4
  %v1_8050bb7 = add i32 %v0_8050bb4, 28
  %v2_8050bb7 = inttoptr i32 %v1_8050bb7 to i32*
  store i32 16384, i32* %v2_8050bb7, align 4
  %v1_8050bbc = add i32 %v0_8050bb4, 24
  %v2_8050bbc = inttoptr i32 %v1_8050bbc to i32*
  store i32 2, i32* %v2_8050bbc, align 4
  %v1_8050bbe = add i32 %v0_8050bb4, 20
  %v2_8050bbe = inttoptr i32 %v1_8050bbe to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_8050bbe, align 4
  %v0_8050bc3 = load i32, i32* @edi, align 4
  %v1_8050bc3 = add i32 %v0_8050bc3, 4
  %v2_8050bc3 = inttoptr i32 %v1_8050bc3 to i32*
  %v3_8050bc3 = load i32, i32* %v2_8050bc3, align 4
  store i32 %v3_8050bc3, i32* %ecx.global-to-local, align 4
  %v2_8050bc6 = add i32 %v0_8050bb4, 16
  %v3_8050bc6 = inttoptr i32 %v2_8050bc6 to i32*
  store i32 %v3_8050bc3, i32* %v3_8050bc6, align 4
  %v0_8050bc7 = call i32 @function_80528e3()
  store i32 %v0_8050bc7, i32* %eax.global-to-local, align 4
  %v0_8050bcc = load i32, i32* @esp, align 4
  %v1_8050bcc = inttoptr i32 %v0_8050bcc to i32*
  store i32 23, i32* %v1_8050bcc, align 4
  %v2_8050bd3 = call i32 @function_8051100(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050bd3, i32* %eax.global-to-local, align 4
  %v0_8050bdb = load i32, i32* @edi, align 4
  %v1_8050bdb = add i32 %v0_8050bdb, 12
  %v2_8050bdb = inttoptr i32 %v1_8050bdb to i32*
  store i32 6, i32* %v2_8050bdb, align 4
  br label %dec_label_pc_8050828

dec_label_pc_8050be7:                             ; preds = %dec_label_pc_8050887, %dec_label_pc_805087e, %dec_label_pc_8050875, %dec_label_pc_805086c, %dec_label_pc_805085f
  %v1_8050be7 = add i32 %v0_8050be7, 1
  store i32 %v1_8050be7, i32* @ebp, align 4
  %v10_8050bea = icmp eq i32 %v0_8050be7, -2
  br i1 %v10_8050bea, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_8050bf3

dec_label_pc_8050bf3:                             ; preds = %dec_label_pc_8050be7
  %tmp145 = icmp slt i32 %v1_8050be7, 1
  br i1 %tmp145, label %dec_label_pc_8050a01, label %dec_label_pc_8050bfb

dec_label_pc_8050bfb:                             ; preds = %dec_label_pc_8050bf3
  %v0_8050bfb = load i32, i32* @esp, align 4
  %v1_8050bfe = add i32 %v0_8050bfb, -16
  %v2_8050bfe = inttoptr i32 %v1_8050bfe to i32*
  store i32 22, i32* %v2_8050bfe, align 4
  %v2_8050c00 = call i32 @function_8051180(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050c00, i32* %eax.global-to-local, align 4
  %v0_8050c05 = load i32, i32* @esp, align 4
  %v1_8050c05 = inttoptr i32 %v0_8050c05 to i32*
  %v2_8050c05 = load i32, i32* %v1_8050c05, align 4
  store i32 %v2_8050c05, i32* %eax.global-to-local, align 4
  %v3_8050c05 = add i32 %v0_8050c05, 4
  %v1_8050c06 = inttoptr i32 %v3_8050c05 to i32*
  %v2_8050c06 = load i32, i32* %v1_8050c06, align 4
  store i32 %v2_8050c06, i32* %edx.global-to-local, align 4
  %v1_8050c07 = add i32 %v0_8050c05, 1864
  store i32 %v1_8050c07, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c07, i32* %v1_8050c06, align 4
  store i32 22, i32* %v1_8050c05, align 4
  %v3_8050c11 = call i32 @function_80510d0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050c11, i32* %eax.global-to-local, align 4
  %v0_8050c16 = load i32, i32* @esp, align 4
  %v1_8050c16 = add i32 %v0_8050c16, -4
  %v2_8050c16 = inttoptr i32 %v1_8050c16 to i32*
  store i32 16384, i32* %v2_8050c16, align 4
  %v1_8050c1b = add i32 %v0_8050c16, 1864
  %v2_8050c1b = inttoptr i32 %v1_8050c1b to i32*
  %v3_8050c1b = load i32, i32* %v2_8050c1b, align 4
  store i32 %v3_8050c1b, i32* @esi, align 4
  %v2_8050c22 = add i32 %v0_8050c16, -8
  %v3_8050c22 = inttoptr i32 %v2_8050c22 to i32*
  store i32 %v3_8050c1b, i32* %v3_8050c22, align 4
  %v2_8050c23 = add i32 %v0_8050c16, -12
  %v3_8050c23 = inttoptr i32 %v2_8050c23 to i32*
  store i32 %v3_8050c11, i32* %v3_8050c23, align 4
  %v0_8050c24 = load i32, i32* @edi, align 4
  %v1_8050c24 = add i32 %v0_8050c24, 4
  %v2_8050c24 = inttoptr i32 %v1_8050c24 to i32*
  %v3_8050c24 = load i32, i32* %v2_8050c24, align 4
  store i32 %v3_8050c24, i32* @ebx, align 4
  %v2_8050c27 = add i32 %v0_8050c16, -16
  %v3_8050c27 = inttoptr i32 %v2_8050c27 to i32*
  store i32 %v3_8050c24, i32* %v3_8050c27, align 4
  %v0_8050c28 = call i32 @function_80528e3()
  store i32 %v0_8050c28, i32* %eax.global-to-local, align 4
  %v0_8050c2d = load i32, i32* @esp, align 4
  %v1_8050c30 = add i32 %v0_8050c2d, 28
  %v2_8050c30 = inttoptr i32 %v1_8050c30 to i32*
  store i32 16384, i32* %v2_8050c30, align 4
  %v1_8050c35 = add i32 %v0_8050c2d, 24
  %v2_8050c35 = inttoptr i32 %v1_8050c35 to i32*
  store i32 2, i32* %v2_8050c35, align 4
  %v1_8050c37 = add i32 %v0_8050c2d, 20
  %v2_8050c37 = inttoptr i32 %v1_8050c37 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_8050c37, align 4
  %v0_8050c3c = load i32, i32* @edi, align 4
  %v1_8050c3c = add i32 %v0_8050c3c, 4
  %v2_8050c3c = inttoptr i32 %v1_8050c3c to i32*
  %v3_8050c3c = load i32, i32* %v2_8050c3c, align 4
  store i32 %v3_8050c3c, i32* %ecx.global-to-local, align 4
  %v2_8050c3f = add i32 %v0_8050c2d, 16
  %v3_8050c3f = inttoptr i32 %v2_8050c3f to i32*
  store i32 %v3_8050c3c, i32* %v3_8050c3f, align 4
  %v0_8050c40 = call i32 @function_80528e3()
  store i32 %v0_8050c40, i32* %eax.global-to-local, align 4
  %v0_8050c45 = load i32, i32* @esp, align 4
  %v1_8050c45 = inttoptr i32 %v0_8050c45 to i32*
  store i32 22, i32* %v1_8050c45, align 4
  %v2_8050c4c = call i32 @function_8051100(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050c4c, i32* %eax.global-to-local, align 4
  %v0_8050c54 = load i32, i32* @edi, align 4
  %v1_8050c54 = add i32 %v0_8050c54, 12
  %v2_8050c54 = inttoptr i32 %v1_8050c54 to i32*
  store i32 8, i32* %v2_8050c54, align 4
  br label %dec_label_pc_8050828

dec_label_pc_8050c60:                             ; preds = %dec_label_pc_80505ef, %dec_label_pc_80505e6, %dec_label_pc_80505dd, %dec_label_pc_80505d0
  %v1_8050c60 = add i32 %v0_8050c60, 1
  store i32 %v1_8050c60, i32* @ebp, align 4
  %v10_8050c63 = icmp eq i32 %v0_8050c60, -2
  br i1 %v10_8050c63, label %dec_label_pc_80505fb, label %dec_label_pc_8050c6c

dec_label_pc_8050c6c:                             ; preds = %dec_label_pc_8050c60, %dec_label_pc_8050644
  %v0_8050c6c = phi i32 [ %v1_8050c60, %dec_label_pc_8050c60 ], [ %v0_8050651, %dec_label_pc_8050644 ]
  %tmp146 = icmp slt i32 %v0_8050c6c, 1
  br i1 %tmp146, label %dec_label_pc_8050a01, label %dec_label_pc_8050c74

dec_label_pc_8050c74:                             ; preds = %dec_label_pc_8050c6c
  %v0_8050c74 = load i32, i32* @edi, align 4
  %v1_8050c74 = inttoptr i32 %v0_8050c74 to i32*
  %v2_8050c74 = load i32, i32* %v1_8050c74, align 4
  store i32 %v2_8050c74, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050c78 = load i32, i32* @esp, align 4
  %v1_8050c78 = add i32 %v0_8050c78, -4
  %v2_8050c78 = inttoptr i32 %v1_8050c78 to i32*
  store i32 16384, i32* %v2_8050c78, align 4
  %v0_8050c7d = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c7d = add i32 %v0_8050c7d, 13
  %v2_8050c7d = inttoptr i32 %v1_8050c7d to i8*
  %v3_8050c7d = load i8, i8* %v2_8050c7d, align 1
  %v4_8050c7d = zext i8 %v3_8050c7d to i32
  %v5_8050c7d = load i32, i32* %eax.global-to-local, align 4
  %v6_8050c7d = and i32 %v5_8050c7d, -256
  %v7_8050c7d = or i32 %v6_8050c7d, %v4_8050c7d
  store i32 %v7_8050c7d, i32* %eax.global-to-local, align 4
  %v2_8050c80 = add i32 %v0_8050c78, -8
  %v3_8050c80 = inttoptr i32 %v2_8050c80 to i32*
  store i32 %v7_8050c7d, i32* %v3_8050c80, align 4
  %v0_8050c81 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c81 = add i32 %v0_8050c81, 4
  %v2_8050c81 = inttoptr i32 %v1_8050c81 to i32*
  %v3_8050c81 = load i32, i32* %v2_8050c81, align 4
  store i32 %v3_8050c81, i32* @esi, align 4
  %v2_8050c84 = add i32 %v0_8050c78, -12
  %v3_8050c84 = inttoptr i32 %v2_8050c84 to i32*
  store i32 %v3_8050c81, i32* %v3_8050c84, align 4
  %v0_8050c85 = load i32, i32* @edi, align 4
  %v1_8050c85 = add i32 %v0_8050c85, 4
  %v2_8050c85 = inttoptr i32 %v1_8050c85 to i32*
  %v3_8050c85 = load i32, i32* %v2_8050c85, align 4
  store i32 %v3_8050c85, i32* @ebx, align 4
  %v2_8050c88 = add i32 %v0_8050c78, -16
  %v3_8050c88 = inttoptr i32 %v2_8050c88 to i32*
  store i32 %v3_8050c85, i32* %v3_8050c88, align 4
  %v0_8050c89 = call i32 @function_80528e3()
  store i32 %v0_8050c89, i32* %eax.global-to-local, align 4
  %v0_8050c8e = load i32, i32* @esp, align 4
  %v1_8050c8e = add i32 %v0_8050c8e, -4
  %v2_8050c8e = inttoptr i32 %v1_8050c8e to i32*
  store i32 16384, i32* %v2_8050c8e, align 4
  %v1_8050c93 = add i32 %v0_8050c8e, -8
  %v2_8050c93 = inttoptr i32 %v1_8050c93 to i32*
  store i32 2, i32* %v2_8050c93, align 4
  %v1_8050c95 = add i32 %v0_8050c8e, -12
  %v2_8050c95 = inttoptr i32 %v1_8050c95 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8054986.10 to i32), i32* %v2_8050c95, align 4
  %v0_8050c9a = load i32, i32* @edi, align 4
  %v1_8050c9a = add i32 %v0_8050c9a, 4
  %v2_8050c9a = inttoptr i32 %v1_8050c9a to i32*
  %v3_8050c9a = load i32, i32* %v2_8050c9a, align 4
  store i32 %v3_8050c9a, i32* %ecx.global-to-local, align 4
  %v2_8050c9d = add i32 %v0_8050c8e, -16
  %v3_8050c9d = inttoptr i32 %v2_8050c9d to i32*
  store i32 %v3_8050c9a, i32* %v3_8050c9d, align 4
  %v0_8050c9e = call i32 @function_80528e3()
  store i32 %v0_8050c9e, i32* %eax.global-to-local, align 4
  %v0_8050ca6 = load i32, i32* @edi, align 4
  %v1_8050ca6 = add i32 %v0_8050ca6, 12
  %v2_8050ca6 = inttoptr i32 %v1_8050ca6 to i32*
  store i32 5, i32* %v2_8050ca6, align 4
  br label %dec_label_pc_8050828

dec_label_pc_8050cb2:                             ; preds = %dec_label_pc_80509e5
  %v1_8050cb2 = add i32 %v0_80509d1, -4
  %v2_8050cb2 = inttoptr i32 %v1_8050cb2 to i32*
  store i32 16384, i32* %v2_8050cb2, align 4
  %v1_8050cb7 = add i32 %v0_80509d1, -8
  %v2_8050cb7 = inttoptr i32 %v1_8050cb7 to i32*
  store i32 3, i32* %v2_8050cb7, align 4
  %v1_8050cb9 = add i32 %v0_80509d1, 1863
  store i32 %v1_8050cb9, i32* %eax.global-to-local, align 4
  %v0_8050cc0 = load i32, i32* @ebx, align 4
  %v1_8050cc0 = add i32 %v0_8050cc0, 3
  store i32 %v1_8050cc0, i32* @ebx, align 4
  %v2_8050cc3 = add i32 %v0_80509d1, -12
  %v3_8050cc3 = inttoptr i32 %v2_8050cc3 to i32*
  store i32 %v1_8050cb9, i32* %v3_8050cc3, align 4
  %v0_8050cc4 = load i32, i32* @ebp, align 4
  %v1_8050cc4 = add i32 %v0_8050cc4, 3
  store i32 %v1_8050cc4, i32* @ebp, align 4
  %v0_8050cc7 = load i32, i32* @edi, align 4
  %v1_8050cc7 = add i32 %v0_8050cc7, 4
  %v2_8050cc7 = inttoptr i32 %v1_8050cc7 to i32*
  %v3_8050cc7 = load i32, i32* %v2_8050cc7, align 4
  store i32 %v3_8050cc7, i32* %eax.global-to-local, align 4
  %v2_8050cca = add i32 %v0_80509d1, -16
  %v3_8050cca = inttoptr i32 %v2_8050cca to i32*
  store i32 %v3_8050cc7, i32* %v3_8050cca, align 4
  %v0_8050ccb = call i32 @function_80528e3()
  %v0_8050cd0 = load i32, i32* @esp, align 4
  %v1_8050cd0 = add i32 %v0_8050cd0, -4
  %v2_8050cd0 = inttoptr i32 %v1_8050cd0 to i32*
  store i32 16384, i32* %v2_8050cd0, align 4
  %v1_8050cd5 = add i32 %v0_8050cd0, -8
  %v2_8050cd5 = inttoptr i32 %v1_8050cd5 to i32*
  store i32 9, i32* %v2_8050cd5, align 4
  %v1_8050cd7 = add i32 %v0_8050cd0, 1847
  store i32 %v1_8050cd7, i32* %eax.global-to-local, align 4
  %v2_8050cde = add i32 %v0_8050cd0, -12
  %v3_8050cde = inttoptr i32 %v2_8050cde to i32*
  store i32 %v1_8050cd7, i32* %v3_8050cde, align 4
  %v0_8050cdf = load i32, i32* @edi, align 4
  %v1_8050cdf = add i32 %v0_8050cdf, 4
  %v2_8050cdf = inttoptr i32 %v1_8050cdf to i32*
  %v3_8050cdf = load i32, i32* %v2_8050cdf, align 4
  store i32 %v3_8050cdf, i32* %eax.global-to-local, align 4
  %v2_8050ce2 = add i32 %v0_8050cd0, -16
  %v3_8050ce2 = inttoptr i32 %v2_8050ce2 to i32*
  store i32 %v3_8050cdf, i32* %v3_8050ce2, align 4
  %v0_8050ce3 = call i32 @function_80528e3()
  store i32 %v0_8050ce3, i32* %eax.global-to-local, align 4
  %v0_8050ce8 = load i32, i32* @esp, align 4
  %v1_8050ce8 = add i32 %v0_8050ce8, 32
  %v0_8050ceb = load i32, i32* @edi, align 4
  %v1_8050ceb = add i32 %v0_8050ceb, 24
  %v2_8050ceb = inttoptr i32 %v1_8050ceb to i32*
  %v3_8050ceb = load i32, i32* %v2_8050ceb, align 4
  store i32 %v3_8050ceb, i32* %edx.global-to-local, align 4
  %v0_8050471.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8050471.backedge

dec_label_pc_8050cf3:                             ; preds = %dec_label_pc_80507e4
  store i32 %v0_8050cf3, i32* @eax, align 4
  store i32 -1, i32* @ebp, align 4
  %v0_8050cf8 = call i32 @function_804ec50()
  store i32 %v0_8050cf8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050828

dec_label_pc_8050d02:                             ; preds = %dec_label_pc_80507a7
  store i32 27, i32* %v1_8050d0c, align 4
  %v2_8050d13 = call i32 @function_8051180(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d13, i32* %eax.global-to-local, align 4
  %v0_8050d18 = load i32, i32* @esp, align 4
  %v1_8050d18 = inttoptr i32 %v0_8050d18 to i32*
  %v3_8050d18 = add i32 %v0_8050d18, 4
  %v1_8050d19 = inttoptr i32 %v3_8050d18 to i32*
  %v2_8050d19 = load i32, i32* %v1_8050d19, align 4
  store i32 %v2_8050d19, i32* %eax.global-to-local, align 4
  %v1_8050d1a = add i32 %v0_8050d18, 1868
  store i32 %v1_8050d1a, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050d1a, i32* %v1_8050d19, align 4
  store i32 27, i32* %v1_8050d18, align 4
  %v3_8050d24 = call i32 @function_80510d0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050d24, i32* %eax.global-to-local, align 4
  %v0_8050d29 = load i32, i32* @esp, align 4
  %v1_8050d29 = add i32 %v0_8050d29, 1868
  %v2_8050d29 = inttoptr i32 %v1_8050d29 to i32*
  %v3_8050d29 = load i32, i32* %v2_8050d29, align 4
  %v1_8050d30 = add i32 %v3_8050d29, -1
  store i32 %v1_8050d30, i32* %edx.global-to-local, align 4
  %v2_8050d31 = add i32 %v0_8050d29, -4
  %v3_8050d31 = inttoptr i32 %v2_8050d31 to i32*
  store i32 %v1_8050d30, i32* %v3_8050d31, align 4
  %v2_8050d32 = add i32 %v0_8050d29, -8
  %v3_8050d32 = inttoptr i32 %v2_8050d32 to i32*
  store i32 %v3_8050d24, i32* %v3_8050d32, align 4
  %v0_8050d33 = load i32, i32* @edi, align 4
  %v1_8050d33 = add i32 %v0_8050d33, 24
  %v2_8050d33 = inttoptr i32 %v1_8050d33 to i32*
  %v3_8050d33 = load i32, i32* %v2_8050d33, align 4
  store i32 %v3_8050d33, i32* @esi, align 4
  %v2_8050d36 = add i32 %v0_8050d29, -12
  %v3_8050d36 = inttoptr i32 %v2_8050d36 to i32*
  store i32 %v3_8050d33, i32* %v3_8050d36, align 4
  %v1_8050d37 = add i32 %v0_8050d29, 24
  %v2_8050d37 = inttoptr i32 %v1_8050d37 to i32*
  %v3_8050d37 = load i32, i32* %v2_8050d37, align 4
  store i32 %v3_8050d37, i32* @ebx, align 4
  %v2_8050d3b = add i32 %v0_8050d29, -16
  %v3_8050d3b = inttoptr i32 %v2_8050d3b to i32*
  store i32 %v3_8050d37, i32* %v3_8050d3b, align 4
  %v0_8050d3c = call i32 @function_8051cf0()
  store i32 %v0_8050d3c, i32* %eax.global-to-local, align 4
  %v0_8050d41 = load i32, i32* @esp, align 4
  store i32 %v0_8050d3c, i32* @ebp, align 4
  %v1_8050d46 = add i32 %v0_8050d41, 16
  %v2_8050d46 = inttoptr i32 %v1_8050d46 to i32*
  store i32 27, i32* %v2_8050d46, align 4
  %v2_8050d48 = call i32 @function_8051100(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d48, i32* %eax.global-to-local, align 4
  %v0_8050d4d = load i32, i32* @esp, align 4
  %v0_8050d50 = load i32, i32* @ebp, align 4
  %v10_8050d50 = icmp eq i32 %v0_8050d50, -1
  br i1 %v10_8050d50, label %dec_label_pc_80503e6.backedge, label %dec_label_pc_8050d59

dec_label_pc_8050d59:                             ; preds = %dec_label_pc_8050d02
  %tmp147 = icmp slt i32 %v0_8050d50, 1
  br i1 %tmp147, label %dec_label_pc_8050a01, label %dec_label_pc_8050d61

dec_label_pc_8050d61:                             ; preds = %dec_label_pc_8050d59
  %v0_8050d61 = load i32, i32* @edi, align 4
  %v1_8050d61 = add i32 %v0_8050d61, 20
  %v2_8050d61 = inttoptr i32 %v1_8050d61 to i32*
  %v3_8050d61 = load i32, i32* %v2_8050d61, align 4
  store i32 %v3_8050d61, i32* %edx.global-to-local, align 4
  %v1_8050d64 = add i32 %v0_8050d61, 16
  %v2_8050d64 = inttoptr i32 %v1_8050d64 to i32*
  %v3_8050d64 = load i32, i32* %v2_8050d64, align 4
  store i32 %v3_8050d64, i32* %eax.global-to-local, align 4
  %v1_8050d67 = inttoptr i32 %v0_8050d61 to i32*
  %v2_8050d67 = load i32, i32* %v1_8050d67, align 4
  store i32 %v2_8050d67, i32* @esi, align 4
  %v2_8050d69 = add i32 %v0_8050d4d, 1864
  %v3_8050d69 = inttoptr i32 %v2_8050d69 to i32*
  store i32 %v3_8050d64, i32* %v3_8050d69, align 4
  %v0_8050d70 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050d70 = trunc i32 %v0_8050d70 to i16
  %v2_8050d70 = load i32, i32* @esp, align 4
  %v3_8050d70 = add i32 %v2_8050d70, 1866
  %v4_8050d70 = inttoptr i32 %v3_8050d70 to i16*
  store i16 %v1_8050d70, i16* %v4_8050d70, align 2
  %v0_8050d78 = call i32 @function_80521e1()
  store i32 %v0_8050d78, i32* %eax.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_8050d78, 1
  br i1 %tmp148, label %dec_label_pc_8050fa3, label %dec_label_pc_8050d85

dec_label_pc_8050d85:                             ; preds = %dec_label_pc_8050fa3, %dec_label_pc_8050d61
  %v0_8050d85 = load i32, i32* @esp, align 4
  %v0_8050d88 = load i32, i32* @edi, align 4
  %v1_8050d88 = add i32 %v0_8050d88, 4
  %v2_8050d88 = inttoptr i32 %v1_8050d88 to i32*
  %v3_8050d88 = load i32, i32* %v2_8050d88, align 4
  store i32 %v3_8050d88, i32* @esi, align 4
  %v2_8050d8b = add i32 %v0_8050d85, -16
  %v3_8050d8b = inttoptr i32 %v2_8050d8b to i32*
  store i32 %v3_8050d88, i32* %v3_8050d8b, align 4
  %v1_8050d8c = call i32 @function_80521b3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050d8c, i32* %eax.global-to-local, align 4
  %v0_8050d94 = load i32, i32* @edi, align 4
  %v1_8050d94 = add i32 %v0_8050d94, 4
  %v2_8050d94 = inttoptr i32 %v1_8050d94 to i32*
  store i32 -1, i32* %v2_8050d94, align 4
  %v0_8050d9b = load i32, i32* @edi, align 4
  %v1_8050d9b = add i32 %v0_8050d9b, 12
  %v2_8050d9b = inttoptr i32 %v1_8050d9b to i32*
  store i32 0, i32* %v2_8050d9b, align 4
  br label %dec_label_pc_8050828

dec_label_pc_8050da7:                             ; preds = %dec_label_pc_80502b7
  br i1 %v5_80502cc, label %dec_label_pc_805030a, label %dec_label_pc_8050daf

dec_label_pc_8050daf:                             ; preds = %dec_label_pc_8050da7
  store i32 5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80502d5

dec_label_pc_8050db6:                             ; preds = %dec_label_pc_80502e7
  %v3_8050dc1 = add nuw nsw i32 %v2_8050dc1, 1556
  %v4_8050dc1 = add i32 %v3_8050dc1, %v0_8050dc1
  %v5_8050dc1 = inttoptr i32 %v4_8050dc1 to i32*
  %v6_8050dc1 = load i32, i32* %v5_8050dc1, align 4
  %v9_8050dc1 = shl i32 1, %v1_8050dbb
  %v12_8050dc1 = or i32 %v6_8050dc1, %v9_8050dc1
  store i32 %v12_8050dc1, i32* %v5_8050dc1, align 4
  %v0_8050dc9 = load i32, i32* @ebx, align 4
  %v1_8050dc9 = add i32 %v0_8050dc9, 4
  %v2_8050dc9 = inttoptr i32 %v1_8050dc9 to i32*
  %v3_8050dc9 = load i32, i32* %v2_8050dc9, align 4
  store i32 %v3_8050dc9, i32* %eax.global-to-local, align 4
  %v0_8050dcc = load i32, i32* @esi, align 4
  %v2_8050dcc = sub i32 %v0_8050dcc, %v3_8050dc9
  %v8_8050dcc = xor i32 %v0_8050dcc, %v3_8050dc9
  %v9_8050dcc = xor i32 %v2_8050dcc, %v0_8050dcc
  %v10_8050dcc = and i32 %v9_8050dcc, %v8_8050dcc
  %v11_8050dcc = icmp slt i32 %v10_8050dcc, 0
  %v13_8050dcc = icmp slt i32 %v2_8050dcc, 0
  %v2_8050dce = icmp eq i1 %v13_8050dcc, %v11_8050dcc
  br i1 %v2_8050dce, label %dec_label_pc_805030a, label %dec_label_pc_8050dd4

dec_label_pc_8050dd4:                             ; preds = %dec_label_pc_8050db6
  store i32 %v3_8050dc9, i32* @esi, align 4
  br label %dec_label_pc_805030a

dec_label_pc_8050de0:                             ; preds = %dec_label_pc_80503b2
  %v1_8050de0 = add i32 %v0_80503bc, 1848
  %v2_8050de0 = inttoptr i32 %v1_8050de0 to i32*
  store i32 0, i32* %v2_8050de0, align 4
  %v0_8050deb = load i32, i32* @esp, align 4
  %v1_8050deb = add i32 %v0_8050deb, 1852
  %v2_8050deb = inttoptr i32 %v1_8050deb to i32*
  store i32 4, i32* %v2_8050deb, align 4
  %v0_8050df6 = load i32, i32* @esp, align 4
  %v1_8050df9 = add i32 %v0_8050df6, 1852
  %v2_8050e00 = add i32 %v0_8050df6, -16
  %v3_8050e00 = inttoptr i32 %v2_8050e00 to i32*
  store i32 %v1_8050df9, i32* %v3_8050e00, align 4
  %v1_8050e01 = add i32 %v0_8050df6, 1848
  store i32 %v1_8050e01, i32* %eax.global-to-local, align 4
  %v2_8050e08 = add i32 %v0_8050df6, -20
  %v3_8050e08 = inttoptr i32 %v2_8050e08 to i32*
  store i32 %v1_8050e01, i32* %v3_8050e08, align 4
  %v1_8050e09 = add i32 %v0_8050df6, -24
  %v2_8050e09 = inttoptr i32 %v1_8050e09 to i32*
  store i32 4, i32* %v2_8050e09, align 4
  %v1_8050e0b = add i32 %v0_8050df6, -28
  %v2_8050e0b = inttoptr i32 %v1_8050e0b to i32*
  store i32 1, i32* %v2_8050e0b, align 4
  %v0_8050e0d = load i32, i32* @edi, align 4
  %v1_8050e0d = add i32 %v0_8050e0d, 4
  %v2_8050e0d = inttoptr i32 %v1_8050e0d to i32*
  %v3_8050e0d = load i32, i32* %v2_8050e0d, align 4
  store i32 %v3_8050e0d, i32* %eax.global-to-local, align 4
  %v2_8050e10 = add i32 %v0_8050df6, -32
  %v3_8050e10 = inttoptr i32 %v2_8050e10 to i32*
  store i32 %v3_8050e0d, i32* %v3_8050e10, align 4
  %v0_8050e11 = call i32 @function_805280f()
  store i32 %v0_8050e11, i32* %eax.global-to-local, align 4
  %v0_8050e16 = load i32, i32* @esp, align 4
  %v2_8050e19 = add i32 %v0_8050e16, 1880
  %v3_8050e19 = inttoptr i32 %v2_8050e19 to i32*
  %v4_8050e19 = load i32, i32* %v3_8050e19, align 4
  %v5_8050e19 = or i32 %v4_8050e19, %v0_8050e11
  %v6_8050e19 = icmp eq i32 %v5_8050e19, 0
  store i32 %v5_8050e19, i32* %eax.global-to-local, align 4
  %v1_8050e20 = icmp eq i1 %v6_8050e19, false
  br i1 %v1_8050e20, label %dec_label_pc_8050f22, label %dec_label_pc_8050e26

dec_label_pc_8050e26:                             ; preds = %dec_label_pc_8050de0
  %v0_8050e26 = load i32, i32* @edi, align 4
  %v1_8050e26 = add i32 %v0_8050e26, 12
  %v2_8050e26 = inttoptr i32 %v1_8050e26 to i32*
  store i32 2, i32* %v2_8050e26, align 4
  %v0_8050e2d = call i32 @function_804eaf0()
  %v1_8050e2d = sext i32 %v0_8050e2d to i64
  %v0_8050e32 = load i16, i16* @global_var_805612c.37, align 4
  %v1_8050e32 = zext i16 %v0_8050e32 to i32
  %v0_8050e3f = load i32, i32* @global_var_80560e4.38, align 4
  store i32 %v0_8050e3f, i32* @ebx, align 4
  store i32 %v1_8050e32, i32* %ecx.global-to-local, align 4
  %v8_8050e49 = zext i16 %v0_8050e32 to i64
  %v9_8050e49 = udiv i64 %v1_8050e2d, %v8_8050e49
  %v10_8050e49 = trunc i64 %v9_8050e49 to i32
  store i32 %v10_8050e49, i32* %eax.global-to-local, align 4
  %v11_8050e49 = urem i64 %v1_8050e2d, %v8_8050e49
  %v12_8050e49 = trunc i64 %v11_8050e49 to i32
  store i32 %v12_8050e49, i32* %edx.global-to-local, align 4
  %tmp149 = icmp slt i32 %v0_8050e3f, 1
  br i1 %tmp149, label %dec_label_pc_8050ec3, label %dec_label_pc_8050e4f

dec_label_pc_8050e4f:                             ; preds = %dec_label_pc_8050e26
  %v0_8050e4f = load i32, i32* @global_var_8056128.39, align 8
  store i32 %v0_8050e4f, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8050e60 = trunc i64 %v11_8050e49 to i16
  br label %dec_label_pc_8050e60

dec_label_pc_8050e58:                             ; preds = %dec_label_pc_8050e66, %dec_label_pc_8050e60
  %v1_8050e58 = add i32 %v0_8050e58, 1
  store i32 %v1_8050e58, i32* %ecx.global-to-local, align 4
  %v1_8050e59 = add i32 %v0_8050e59, 16
  store i32 %v1_8050e59, i32* %eax.global-to-local, align 4
  %v12_8050e5c = icmp eq i32 %v0_8050e3f, %v1_8050e58
  br i1 %v12_8050e5c, label %dec_label_pc_8050ec3.loopexit, label %dec_label_pc_8050e60

dec_label_pc_8050e60:                             ; preds = %dec_label_pc_8050e58, %dec_label_pc_8050e4f
  %v0_8050e58 = phi i32 [ %v1_8050e58, %dec_label_pc_8050e58 ], [ 0, %dec_label_pc_8050e4f ]
  %v0_8050e59 = phi i32 [ %v1_8050e59, %dec_label_pc_8050e58 ], [ %v0_8050e4f, %dec_label_pc_8050e4f ]
  %v3_8050e60 = add i32 %v0_8050e59, 8
  %v4_8050e60 = inttoptr i32 %v3_8050e60 to i16*
  %v5_8050e60 = load i16, i16* %v4_8050e60, align 2
  %v11_8050e60 = icmp ult i16 %v1_8050e60, %v5_8050e60
  br i1 %v11_8050e60, label %dec_label_pc_8050e58, label %dec_label_pc_8050e66

dec_label_pc_8050e66:                             ; preds = %dec_label_pc_8050e60
  %v3_8050e66 = add i32 %v0_8050e59, 10
  %v4_8050e66 = inttoptr i32 %v3_8050e66 to i16*
  %v5_8050e66 = load i16, i16* %v4_8050e66, align 2
  %v11_8050e66 = icmp ult i16 %v1_8050e60, %v5_8050e66
  %v1_8050e6a = icmp eq i1 %v11_8050e66, false
  br i1 %v1_8050e6a, label %dec_label_pc_8050e58, label %dec_label_pc_8050ec5.loopexit

dec_label_pc_8050e70:                             ; preds = %dec_label_pc_80502d5
  %v0_8050e70 = load i32, i32* @esp, align 4
  %v1_8050e73 = add i32 %v2_80502c7, 4
  %v2_8050e73 = inttoptr i32 %v1_8050e73 to i32*
  %v3_8050e73 = load i32, i32* %v2_8050e73, align 4
  store i32 %v3_8050e73, i32* %edx.global-to-local, align 4
  %v2_8050e76 = add i32 %v0_8050e70, -16
  %v3_8050e76 = inttoptr i32 %v2_8050e76 to i32*
  store i32 %v3_8050e73, i32* %v3_8050e76, align 4
  %v1_8050e77 = call i32 @function_80521b3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050e77, i32* %eax.global-to-local, align 4
  %v0_8050e7f = load i32, i32* @ebx, align 4
  %v1_8050e7f = add i32 %v0_8050e7f, 4
  %v2_8050e7f = inttoptr i32 %v1_8050e7f to i32*
  store i32 -1, i32* %v2_8050e7f, align 4
  %v0_8050e86 = load i32, i32* @ebx, align 4
  %v1_8050e86 = add i32 %v0_8050e86, 12
  %v2_8050e86 = inttoptr i32 %v1_8050e86 to i32*
  %v3_8050e86 = load i32, i32* %v2_8050e86, align 4
  %tmp273 = icmp ult i32 %v3_8050e86, 3
  br i1 %tmp273, label %dec_label_pc_8050eb0, label %dec_label_pc_8050e8c

dec_label_pc_8050e8c:                             ; preds = %dec_label_pc_8050e70
  %v1_8050e8c = add i32 %v0_8050e86, 284
  %v2_8050e8c = inttoptr i32 %v1_8050e8c to i8*
  %v3_8050e8c = load i8, i8* %v2_8050e8c, align 1
  %v4_8050e8c = zext i8 %v3_8050e8c to i32
  %v6_8050e8c = and i32 %v1_8050e77, -256
  %v7_8050e8c = or i32 %v4_8050e8c, %v6_8050e8c
  %v1_8050e92 = add i32 %v7_8050e8c, 1
  %v10_8050e92 = trunc i32 %v1_8050e92 to i8
  store i32 %v1_8050e92, i32* %eax.global-to-local, align 4
  store i8 %v10_8050e92, i8* %v2_8050e8c, align 1
  %v0_8050e99 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e99 = trunc i32 %v0_8050e99 to i8
  %v10_8050e99 = icmp eq i8 %v1_8050e99, 10
  %v0_8050eb0.pre = load i32, i32* @ebx, align 4
  br i1 %v10_8050e99, label %dec_label_pc_8050eb0, label %dec_label_pc_8050e9d

dec_label_pc_8050e9d:                             ; preds = %dec_label_pc_8050e8c
  store i32 %v0_8050eb0.pre, i32* @eax, align 4
  %v0_8050e9f = call i32 @function_804ec50()
  store i32 %v0_8050e9f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805030a

dec_label_pc_8050eb0:                             ; preds = %dec_label_pc_8050e8c, %dec_label_pc_8050e70
  %v0_8050eb0 = phi i32 [ %v0_8050e86, %dec_label_pc_8050e70 ], [ %v0_8050eb0.pre, %dec_label_pc_8050e8c ]
  %v1_8050eb0 = add i32 %v0_8050eb0, 284
  %v2_8050eb0 = inttoptr i32 %v1_8050eb0 to i8*
  store i8 0, i8* %v2_8050eb0, align 1
  %v0_8050eb7 = load i32, i32* @ebx, align 4
  %v1_8050eb7 = add i32 %v0_8050eb7, 12
  %v2_8050eb7 = inttoptr i32 %v1_8050eb7 to i32*
  store i32 0, i32* %v2_8050eb7, align 4
  br label %dec_label_pc_805030a

dec_label_pc_8050ec3.loopexit:                    ; preds = %dec_label_pc_8050e58
  br label %dec_label_pc_8050ec3

dec_label_pc_8050ec3:                             ; preds = %dec_label_pc_8050ec3.loopexit, %dec_label_pc_8050e26
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050ec5

dec_label_pc_8050ec5.loopexit:                    ; preds = %dec_label_pc_8050e66
  br label %dec_label_pc_8050ec5

dec_label_pc_8050ec5:                             ; preds = %dec_label_pc_8050ec5.loopexit, %dec_label_pc_8050ec3
  %v0_8050ec8 = phi i32 [ %v0_8050e59, %dec_label_pc_8050ec5.loopexit ], [ 0, %dec_label_pc_8050ec3 ]
  %v0_8050ec5 = load i32, i32* @edi, align 4
  %v1_8050ec5 = add i32 %v0_8050ec5, 4
  %v2_8050ec5 = inttoptr i32 %v1_8050ec5 to i32*
  %v3_8050ec5 = load i32, i32* %v2_8050ec5, align 4
  store i32 %v3_8050ec5, i32* %ecx.global-to-local, align 4
  %v2_8050ec8 = inttoptr i32 %v0_8050ec5 to i32*
  store i32 %v0_8050ec8, i32* %v2_8050ec8, align 4
  %v0_8050eca = load i32, i32* @edi, align 4
  %v1_8050eca = add i32 %v0_8050eca, 24
  %v2_8050eca = inttoptr i32 %v1_8050eca to i32*
  store i32 0, i32* %v2_8050eca, align 4
  %v0_80503cf.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_80503d7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80503cf

dec_label_pc_8050ed6:                             ; preds = %dec_label_pc_8050537
  %v1_8050ed6 = add i32 %v0_805058b, 1880
  %v2_8050ed6 = inttoptr i32 %v1_8050ed6 to i32*
  %v3_8050ed6 = load i32, i32* %v2_8050ed6, align 4
  %v1_8050edd = add i32 %v3_8050ed6, -1
  store i32 %v1_8050edd, i32* %eax.global-to-local, align 4
  %v2_8050ede = add i32 %v0_805058b, 28
  %v3_8050ede = inttoptr i32 %v2_8050ede to i32*
  store i32 %v1_8050edd, i32* %v3_8050ede, align 4
  %v0_8050edf = load i32, i32* @esi, align 4
  %v2_8050edf = add i32 %v0_805058b, 24
  %v3_8050edf = inttoptr i32 %v2_8050edf to i32*
  store i32 %v0_8050edf, i32* %v3_8050edf, align 4
  %v0_8050ee0 = load i32, i32* @edi, align 4
  %v1_8050ee0 = add i32 %v0_8050ee0, 24
  %v2_8050ee0 = inttoptr i32 %v1_8050ee0 to i32*
  %v3_8050ee0 = load i32, i32* %v2_8050ee0, align 4
  store i32 %v3_8050ee0, i32* %eax.global-to-local, align 4
  %v2_8050ee3 = add i32 %v0_805058b, 20
  %v3_8050ee3 = inttoptr i32 %v2_8050ee3 to i32*
  store i32 %v3_8050ee0, i32* %v3_8050ee3, align 4
  %v1_8050ee4 = add i32 %v0_805058b, 40
  %v2_8050ee4 = inttoptr i32 %v1_8050ee4 to i32*
  %v3_8050ee4 = load i32, i32* %v2_8050ee4, align 4
  %v2_8050ee8 = add i32 %v0_805058b, 16
  %v3_8050ee8 = inttoptr i32 %v2_8050ee8 to i32*
  store i32 %v3_8050ee4, i32* %v3_8050ee8, align 4
  %v0_8050ee9 = call i32 @function_8051cf0()
  %v0_8050eee = load i32, i32* @esp, align 4
  %v1_8050eee = add i32 %v0_8050eee, 16
  %v8_8050ef1 = icmp eq i32 %v0_8050ee9, -1
  %v1_8050ef2 = icmp eq i1 %v8_8050ef1, false
  %v2_8050ef2 = zext i1 %v1_8050ef2 to i32
  %v2_8050ef5 = icmp eq i1 %v1_8050ef2, false
  store i32 %v2_8050ef2, i32* %eax.global-to-local, align 4
  store i32 %v2_8050ef2, i32* @ebp, align 4
  %v1_8050efe = icmp eq i1 %v2_8050ef5, false
  br i1 %v1_8050efe, label %dec_label_pc_80505a1, label %dec_label_pc_8050f04

dec_label_pc_8050f04:                             ; preds = %dec_label_pc_8050ed6
  %v2_8050f07 = inttoptr i32 %v0_8050eee to i32*
  store i32 30, i32* %v2_8050f07, align 4
  %v2_8050f09 = call i32 @function_8051100(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050f09, i32* %eax.global-to-local, align 4
  %v0_8050f0e = load i32, i32* @esp, align 4
  %v1_8050f0e = inttoptr i32 %v0_8050f0e to i32*
  store i32 31, i32* %v1_8050f0e, align 4
  %v2_8050f15 = call i32 @function_8051100(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050f15, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80503e6.backedge

dec_label_pc_80503e6.backedge:                    ; preds = %dec_label_pc_80505fb, %dec_label_pc_8050a01, %dec_label_pc_8050644, %dec_label_pc_80505a1, %dec_label_pc_8050458, %dec_label_pc_80508d6, %dec_label_pc_8050898, %dec_label_pc_8050be7, %dec_label_pc_8050853, %dec_label_pc_8050aa4, %dec_label_pc_80506a5, %dec_label_pc_8050b6e, %dec_label_pc_8050660, %dec_label_pc_8050d02, %dec_label_pc_805072e, %dec_label_pc_80506f0, %dec_label_pc_80508c1, %dec_label_pc_80506e2, %dec_label_pc_8050890, %dec_label_pc_8050719, %dec_label_pc_805069d, %dec_label_pc_8050a01.thread, %dec_label_pc_8050f04
  %v0_80503e6 = load i32, i32* @edi, align 4
  %v1_80503e6 = add i32 %v0_80503e6, 12
  %v2_80503e6 = inttoptr i32 %v1_80503e6 to i32*
  %v3_80503e6 = load i32, i32* %v2_80503e6, align 4
  store i32 %v3_80503e6, i32* %eax.global-to-local, align 4
  %v1_80503e9 = icmp eq i32 %v3_80503e6, 0
  br i1 %v1_80503e9, label %dec_label_pc_8050383, label %dec_label_pc_80503e6.backedge.dec_label_pc_80503ed_crit_edge

dec_label_pc_80503e6.backedge.dec_label_pc_80503ed_crit_edge: ; preds = %dec_label_pc_80503e6.backedge
  %v1_80503f0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80503ed

dec_label_pc_8050f22:                             ; preds = %dec_label_pc_8050de0
  %v0_8050f25 = load i32, i32* @edi, align 4
  %v1_8050f25 = add i32 %v0_8050f25, 4
  %v2_8050f25 = inttoptr i32 %v1_8050f25 to i32*
  %v3_8050f25 = load i32, i32* %v2_8050f25, align 4
  store i32 %v3_8050f25, i32* %eax.global-to-local, align 4
  %v2_8050f28 = add i32 %v0_8050e16, 16
  %v3_8050f28 = inttoptr i32 %v2_8050f28 to i32*
  store i32 %v3_8050f25, i32* %v3_8050f28, align 4
  %v1_8050f29 = call i32 @function_80521b3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050f29, i32* %eax.global-to-local, align 4
  %v0_8050f31 = load i32, i32* @edi, align 4
  %v1_8050f31 = add i32 %v0_8050f31, 4
  %v2_8050f31 = inttoptr i32 %v1_8050f31 to i32*
  store i32 -1, i32* %v2_8050f31, align 4
  %v0_8050f38 = load i32, i32* @edi, align 4
  %v1_8050f38 = add i32 %v0_8050f38, 284
  %v2_8050f38 = inttoptr i32 %v1_8050f38 to i8*
  store i8 0, i8* %v2_8050f38, align 1
  %v0_8050f3f = load i32, i32* @edi, align 4
  %v1_8050f3f = add i32 %v0_8050f3f, 12
  %v2_8050f3f = inttoptr i32 %v1_8050f3f to i32*
  store i32 0, i32* %v2_8050f3f, align 4
  br label %dec_label_pc_8050383

dec_label_pc_8050f4b:                             ; preds = %dec_label_pc_80509ef
  %v11_8050f4b = icmp eq i8 %v2_80509ef, -5
  %v1_8050f4d = icmp eq i1 %v11_8050f4b, false
  br i1 %v1_8050f4d, label %dec_label_pc_80504a1, label %dec_label_pc_8050f53

dec_label_pc_8050f53:                             ; preds = %dec_label_pc_8050f4b
  store i8 -3, i8* %v1_80509ef, align 1
  br label %dec_label_pc_80504a1

dec_label_pc_8050f6d:                             ; preds = %dec_label_pc_8050a10
  %v1_8050f6d = add i32 %v0_805042b, 40
  %v2_8050f6d = inttoptr i32 %v1_8050f6d to i32*
  %v3_8050f6d = load i32, i32* %v2_8050f6d, align 4
  store i32 %v3_8050f6d, i32* %eax.global-to-local, align 4
  %v1_8050f71 = inttoptr i32 %v3_8050f6d to i32*
  store i32 104, i32* %v1_8050f71, align 4
  %v0_8050a2c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050a2c

dec_label_pc_8050f7c:                             ; preds = %dec_label_pc_8050a2c
  store i32 %v0_8050f7c, i32* @eax, align 4
  %v0_8050f7e = call i32 @function_804ec50()
  store i32 %v0_8050f7e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050383

dec_label_pc_8050fa3:                             ; preds = %dec_label_pc_8050d61
  %v1_8050fa3 = add i32 %v0_8050d78, 1
  %v8_8050fa3 = icmp eq i32 %v1_8050fa3, 0
  store i32 %v1_8050fa3, i32* %eax.global-to-local, align 4
  br i1 %v8_8050fa3, label %dec_label_pc_8050d85, label %dec_label_pc_8050faa

dec_label_pc_8050faa:                             ; preds = %dec_label_pc_8050fa3
  %v0_8050faa = load i32, i32* @ecx, align 4
  %v1_8050faa = load i32, i32* @esp, align 4
  %v2_8050faa = add i32 %v1_8050faa, -4
  %v3_8050faa = inttoptr i32 %v2_8050faa to i32*
  store i32 %v0_8050faa, i32* %v3_8050faa, align 4
  %v1_8050fab = add i32 %v1_8050faa, -8
  %v2_8050fab = inttoptr i32 %v1_8050fab to i32*
  store i32 0, i32* %v2_8050fab, align 4
  %v1_8050fad = add i32 %v1_8050faa, -12
  %v2_8050fad = inttoptr i32 %v1_8050fad to i32*
  store i32 1, i32* %v2_8050fad, align 4
  %v1_8050faf = add i32 %v1_8050faa, -16
  %v2_8050faf = inttoptr i32 %v1_8050faf to i32*
  store i32 2, i32* %v2_8050faf, align 4
  %v4_8050fb1 = call i32 @function_8052994(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050fb1, i32* @eax, align 4
  %v0_8050fb6 = load i32, i32* @esp, align 4
  %sext7 = mul i32 %v4_8050fb1, 16777216
  %v1_8050fb9 = sdiv i32 %sext7, 16777216
  store i32 %v1_8050fb9, i32* @ebx, align 4
  %tmp275 = icmp eq i32 %sext7, -16777216
  %v2_805012d = inttoptr i32 %v0_8050fb6 to i32*
  br i1 %tmp275, label %dec_label_pc_805012a, label %dec_label_pc_8050fc4

dec_label_pc_8050fc4:                             ; preds = %dec_label_pc_8050faa
  store i32 2, i32* %v2_805012d, align 4
  %v2_8050fc9 = call i32 @function_8051180(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050fc9, i32* %eax.global-to-local, align 4
  %v0_8050fce = load i32, i32* @esp, align 4
  %v1_8050fce = inttoptr i32 %v0_8050fce to i32*
  %v2_8050fce = load i32, i32* %v1_8050fce, align 4
  store i32 %v2_8050fce, i32* %eax.global-to-local, align 4
  %v3_8050fce = add i32 %v0_8050fce, 4
  %v1_8050fcf = inttoptr i32 %v3_8050fce to i32*
  %v2_8050fcf = load i32, i32* %v1_8050fcf, align 4
  store i32 %v2_8050fcf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8050fcf, align 4
  store i32 2032805430, i32* @global_var_8056168.40, align 8
  store i32 2, i32* %v1_8050fce, align 4
  %v3_8050fde = call i32 @function_80510d0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  %v4_8050fde = inttoptr i32 %v3_8050fde to i16*
  store i32 %v3_8050fde, i32* %eax.global-to-local, align 4
  %v3_8050fe3 = load i16, i16* %v4_8050fde, align 2
  %v4_8050fe3 = zext i16 %v3_8050fe3 to i32
  %v7_8050fe3 = and i32 %v3_8050fde, -65536
  %v8_8050fe3 = or i32 %v4_8050fe3, %v7_8050fe3
  store i32 %v8_8050fe3, i32* %eax.global-to-local, align 4
  %v0_8050fe6 = load i32, i32* @esp, align 4
  %v1_8050fe6 = inttoptr i32 %v0_8050fe6 to i32*
  store i32 2, i32* %v1_8050fe6, align 4
  %v0_8050fed = load i32, i32* %eax.global-to-local, align 4
  %v1_8050fed = trunc i32 %v0_8050fed to i16
  %v2_8050fed = load i32, i32* @esp, align 4
  %v3_8050fed = add i32 %v2_8050fed, 1830
  %v4_8050fed = inttoptr i32 %v3_8050fed to i16*
  store i16 %v1_8050fed, i16* %v4_8050fed, align 2
  %v2_8050ff5 = call i32 @function_8051100(i8 ptrtoint (i32* @0 to i8))
  %v0_8050ffa = load i32, i32* @esp, align 4
  %v1_8050ffa = add i32 %v0_8050ffa, 1828
  store i32 %v1_8050ffa, i32* %eax.global-to-local, align 4
  %v1_8051004 = add i32 %v0_8050ffa, 8
  %v2_8051004 = inttoptr i32 %v1_8051004 to i32*
  store i32 16, i32* %v2_8051004, align 4
  %v0_8051006 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051006 = add i32 %v0_8050ffa, 4
  %v3_8051006 = inttoptr i32 %v2_8051006 to i32*
  store i32 %v0_8051006, i32* %v3_8051006, align 4
  %v0_8051007 = load i32, i32* @ebx, align 4
  %v3_8051007 = inttoptr i32 %v0_8050ffa to i32*
  store i32 %v0_8051007, i32* %v3_8051007, align 4
  %v3_8051008 = call i32 @function_80527b9(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_805100d = load i32, i32* @esp, align 4
  %v1_805100d = add i32 %v0_805100d, 16
  %v1_8051010 = add i32 %v3_8051008, 1
  %v8_8051010 = icmp eq i32 %v1_8051010, 0
  store i32 %v1_8051010, i32* %eax.global-to-local, align 4
  %v1_8051011 = icmp eq i1 %v8_8051010, false
  br i1 %v1_8051011, label %dec_label_pc_8051028, label %dec_label_pc_8051013

dec_label_pc_8051013:                             ; preds = %dec_label_pc_8050fc4
  br label %dec_label_pc_8051016

dec_label_pc_8051016:                             ; preds = %dec_label_pc_8051028, %dec_label_pc_8051013
  %storemerge4.in = phi i32 [ %v0_805100d, %dec_label_pc_8051013 ], [ %v0_80510c3, %dec_label_pc_8051028 ]
  %v0_8051016 = load i32, i32* @ebx, align 4
  %v3_8051016 = inttoptr i32 %storemerge4.in to i32*
  store i32 %v0_8051016, i32* %v3_8051016, align 4
  %v1_8051017 = call i32 @function_80521b3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051017, i32* @eax, align 4
  %v0_805101c = load i32, i32* @esp, align 4
  %v1_805101c = inttoptr i32 %v0_805101c to i32*
  store i32 0, i32* %v1_805101c, align 4
  %v1_8051023 = call i32 @function_8053b8d(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051023, i32* %eax.global-to-local, align 4
  %v0_8051028.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051028

dec_label_pc_8051028:                             ; preds = %dec_label_pc_8050fc4, %dec_label_pc_8051016
  %v0_8051028 = phi i32 [ %v1_805100d, %dec_label_pc_8050fc4 ], [ %v0_8051028.pre, %dec_label_pc_8051016 ]
  %v1_8051028 = add i32 %v0_8051028, 1852
  %v2_8051028 = inttoptr i32 %v1_8051028 to i8*
  store i8 0, i8* %v2_8051028, align 1
  %v0_8051030 = load i32, i32* @esp, align 4
  %v1_8051030 = add i32 %v0_8051030, -4
  %v2_8051030 = inttoptr i32 %v1_8051030 to i32*
  store i32 16384, i32* %v2_8051030, align 4
  %v1_8051035 = add i32 %v0_8051030, -8
  %v2_8051035 = inttoptr i32 %v1_8051035 to i32*
  store i32 1, i32* %v2_8051035, align 4
  %v1_8051037 = add i32 %v0_8051030, 1852
  store i32 %v1_8051037, i32* %eax.global-to-local, align 4
  %v2_805103e = add i32 %v0_8051030, -12
  %v3_805103e = inttoptr i32 %v2_805103e to i32*
  store i32 %v1_8051037, i32* %v3_805103e, align 4
  %v0_805103f = load i32, i32* @ebx, align 4
  %v2_805103f = add i32 %v0_8051030, -16
  %v3_805103f = inttoptr i32 %v2_805103f to i32*
  store i32 %v0_805103f, i32* %v3_805103f, align 4
  %v0_8051040 = call i32 @function_80528e3()
  %v0_8051045 = load i32, i32* @esp, align 4
  %v1_8051045 = add i32 %v0_8051045, -4
  %v2_8051045 = inttoptr i32 %v1_8051045 to i32*
  store i32 16384, i32* %v2_8051045, align 4
  %v1_805104a = add i32 %v0_8051045, -8
  %v2_805104a = inttoptr i32 %v1_805104a to i32*
  store i32 4, i32* %v2_805104a, align 4
  %v1_805104c = add i32 %v0_8051045, 1864
  store i32 %v1_805104c, i32* %eax.global-to-local, align 4
  %v2_8051053 = add i32 %v0_8051045, -12
  %v3_8051053 = inttoptr i32 %v2_8051053 to i32*
  store i32 %v1_805104c, i32* %v3_8051053, align 4
  %v0_8051054 = load i32, i32* @ebx, align 4
  %v2_8051054 = add i32 %v0_8051045, -16
  %v3_8051054 = inttoptr i32 %v2_8051054 to i32*
  store i32 %v0_8051054, i32* %v3_8051054, align 4
  %v0_8051055 = call i32 @function_80528e3()
  %v0_805105a = load i32, i32* @esp, align 4
  %v1_805105d = add i32 %v0_805105a, 28
  %v2_805105d = inttoptr i32 %v1_805105d to i32*
  store i32 16384, i32* %v2_805105d, align 4
  %v1_8051062 = add i32 %v0_805105a, 24
  %v2_8051062 = inttoptr i32 %v1_8051062 to i32*
  store i32 2, i32* %v2_8051062, align 4
  %v1_8051064 = add i32 %v0_805105a, 1898
  store i32 %v1_8051064, i32* %eax.global-to-local, align 4
  %v2_805106b = add i32 %v0_805105a, 20
  %v3_805106b = inttoptr i32 %v2_805106b to i32*
  store i32 %v1_8051064, i32* %v3_805106b, align 4
  %v0_805106c = load i32, i32* @ebx, align 4
  %v2_805106c = add i32 %v0_805105a, 16
  %v3_805106c = inttoptr i32 %v2_805106c to i32*
  store i32 %v0_805106c, i32* %v3_805106c, align 4
  %v0_805106d = call i32 @function_80528e3()
  %v0_8051072 = load i32, i32* @esi, align 4
  %v1_8051072 = add i32 %v0_8051072, 12
  store i32 %v1_8051072, i32* %eax.global-to-local, align 4
  %v0_8051075 = load i32, i32* @esp, align 4
  %v1_8051075 = add i32 %v0_8051075, -4
  %v2_8051075 = inttoptr i32 %v1_8051075 to i32*
  store i32 16384, i32* %v2_8051075, align 4
  %v1_805107a = add i32 %v0_8051075, -8
  %v2_805107a = inttoptr i32 %v1_805107a to i32*
  store i32 1, i32* %v2_805107a, align 4
  %v0_805107c = load i32, i32* %eax.global-to-local, align 4
  %v2_805107c = add i32 %v0_8051075, -12
  %v3_805107c = inttoptr i32 %v2_805107c to i32*
  store i32 %v0_805107c, i32* %v3_805107c, align 4
  %v0_805107d = load i32, i32* @ebx, align 4
  %v2_805107d = add i32 %v0_8051075, -16
  %v3_805107d = inttoptr i32 %v2_805107d to i32*
  store i32 %v0_805107d, i32* %v3_805107d, align 4
  %v0_805107e = call i32 @function_80528e3()
  %v0_8051083 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8051088 = add i32 %v0_8051083, 28
  %v2_8051088 = inttoptr i32 %v1_8051088 to i32*
  store i32 16384, i32* %v2_8051088, align 4
  %v0_805108d = load i32, i32* @esi, align 4
  %v1_805108d = add i32 %v0_805108d, 12
  %v2_805108d = inttoptr i32 %v1_805108d to i8*
  %v3_805108d = load i8, i8* %v2_805108d, align 1
  %v4_805108d = zext i8 %v3_805108d to i32
  %v5_805108d = load i32, i32* %eax.global-to-local, align 4
  %v6_805108d = and i32 %v5_805108d, -256
  %v7_805108d = or i32 %v6_805108d, %v4_805108d
  store i32 %v7_805108d, i32* %eax.global-to-local, align 4
  %v2_8051090 = add i32 %v0_8051083, 24
  %v3_8051090 = inttoptr i32 %v2_8051090 to i32*
  store i32 %v7_805108d, i32* %v3_8051090, align 4
  %v0_8051091 = load i32, i32* @esi, align 4
  %v1_8051091 = inttoptr i32 %v0_8051091 to i32*
  %v2_8051091 = load i32, i32* %v1_8051091, align 4
  store i32 %v2_8051091, i32* %eax.global-to-local, align 4
  %v2_8051093 = add i32 %v0_8051083, 20
  %v3_8051093 = inttoptr i32 %v2_8051093 to i32*
  store i32 %v2_8051091, i32* %v3_8051093, align 4
  %v0_8051094 = load i32, i32* @ebx, align 4
  %v2_8051094 = add i32 %v0_8051083, 16
  %v3_8051094 = inttoptr i32 %v2_8051094 to i32*
  store i32 %v0_8051094, i32* %v3_8051094, align 4
  %v0_8051095 = call i32 @function_80528e3()
  %v0_805109a = load i32, i32* @esi, align 4
  %v1_805109a = add i32 %v0_805109a, 13
  store i32 %v1_805109a, i32* %eax.global-to-local, align 4
  %v0_805109d = load i32, i32* @esp, align 4
  %v1_805109d = add i32 %v0_805109d, -4
  %v2_805109d = inttoptr i32 %v1_805109d to i32*
  store i32 16384, i32* %v2_805109d, align 4
  %v1_80510a2 = add i32 %v0_805109d, -8
  %v2_80510a2 = inttoptr i32 %v1_80510a2 to i32*
  store i32 1, i32* %v2_80510a2, align 4
  %v0_80510a4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80510a4 = add i32 %v0_805109d, -12
  %v3_80510a4 = inttoptr i32 %v2_80510a4 to i32*
  store i32 %v0_80510a4, i32* %v3_80510a4, align 4
  %v0_80510a5 = load i32, i32* @ebx, align 4
  %v2_80510a5 = add i32 %v0_805109d, -16
  %v3_80510a5 = inttoptr i32 %v2_80510a5 to i32*
  store i32 %v0_80510a5, i32* %v3_80510a5, align 4
  %v0_80510a6 = call i32 @function_80528e3()
  %v0_80510ab = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80510b0 = add i32 %v0_80510ab, 28
  %v2_80510b0 = inttoptr i32 %v1_80510b0 to i32*
  store i32 16384, i32* %v2_80510b0, align 4
  %v0_80510b5 = load i32, i32* @esi, align 4
  %v1_80510b5 = add i32 %v0_80510b5, 13
  %v2_80510b5 = inttoptr i32 %v1_80510b5 to i8*
  %v3_80510b5 = load i8, i8* %v2_80510b5, align 1
  %v4_80510b5 = zext i8 %v3_80510b5 to i32
  %v5_80510b5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80510b5 = and i32 %v5_80510b5, -256
  %v7_80510b5 = or i32 %v6_80510b5, %v4_80510b5
  store i32 %v7_80510b5, i32* %eax.global-to-local, align 4
  %v2_80510b8 = add i32 %v0_80510ab, 24
  %v3_80510b8 = inttoptr i32 %v2_80510b8 to i32*
  store i32 %v7_80510b5, i32* %v3_80510b8, align 4
  %v0_80510b9 = load i32, i32* @esi, align 4
  %v1_80510b9 = add i32 %v0_80510b9, 4
  %v2_80510b9 = inttoptr i32 %v1_80510b9 to i32*
  %v3_80510b9 = load i32, i32* %v2_80510b9, align 4
  %v2_80510bc = add i32 %v0_80510ab, 20
  %v3_80510bc = inttoptr i32 %v2_80510bc to i32*
  store i32 %v3_80510b9, i32* %v3_80510bc, align 4
  %v0_80510bd = load i32, i32* @ebx, align 4
  %v2_80510bd = add i32 %v0_80510ab, 16
  %v3_80510bd = inttoptr i32 %v2_80510bd to i32*
  store i32 %v0_80510bd, i32* %v3_80510bd, align 4
  %v0_80510be = call i32 @function_80528e3()
  store i32 %v0_80510be, i32* %eax.global-to-local, align 4
  %v0_80510c3 = load i32, i32* @esp, align 4
  %v1_80510c3 = inttoptr i32 %v0_80510c3 to i32*
  %v2_80510c3 = load i32, i32* %v1_80510c3, align 4
  store i32 %v2_80510c3, i32* @edi, align 4
  br label %dec_label_pc_8051016

; uselistorder directives
  uselistorder i32 %v0_80510c3, { 1, 0 }
  uselistorder i32 %v0_80503e6, { 1, 0 }
  uselistorder i32 %v0_8050e59, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8050e58, { 1, 0, 2 }
  uselistorder i16 %v1_8050e60, { 1, 0 }
  uselistorder i64 %v8_8050e49, { 1, 0 }
  uselistorder i32 %v2_8050dcc, { 1, 0 }
  uselistorder i32 %v3_8050dc9, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050d78, { 1, 0, 2 }
  uselistorder i32 %v0_8050d50, { 2, 1, 0 }
  uselistorder i32 %v0_8050d29, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v3_8050ceb, { 1, 0 }
  uselistorder i32 %v0_8050ceb, { 1, 0 }
  uselistorder i32 %v0_8050ce3, { 1, 0 }
  uselistorder i32 %v0_8050c6c, { 1, 0 }
  uselistorder i32 %v1_8050be7, { 1, 2, 0 }
  uselistorder i32 %v1_8050b6e, { 1, 2, 0 }
  uselistorder i32 %v0_8050b29, { 1, 0 }
  uselistorder i32 %v1_8050aa4, { 1, 2, 0 }
  uselistorder i32 %v0_8050f7c, { 1, 0 }
  uselistorder i32 %v2_80509db, { 1, 0, 2 }
  uselistorder i32 %v1_80509d8, { 1, 0, 2 }
  uselistorder i32 %v0_80509d5, { 1, 0 }
  uselistorder i32 %v0_80509d1, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v7_805095d, { 1, 0 }
  uselistorder i32 %v0_805095d, { 1, 2, 0 }
  uselistorder i32 %v2_8050471, { 1, 0 }
  uselistorder i32 %v0_8050471, { 1, 2, 4, 3, 0 }
  uselistorder i32 %v1_8050471, { 0, 2, 1 }
  uselistorder i32 %v0_80504ef124, { 1, 0 }
  uselistorder i32 %v9_80508c8, { 1, 0 }
  uselistorder i32 %v1_80508c1, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_80508c1, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_8050898, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8050890, { 2, 1, 0 }
  uselistorder i32 %v9_805085f, { 1, 0 }
  uselistorder i32 %v0_8050be7, { 0, 1, 3, 2 }
  uselistorder i32 %v2_805082d, { 1, 2, 0 }
  uselistorder i32 %v1_805082d, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8050828, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_8050cf3, { 1, 0 }
  uselistorder i32* %v1_8050d0c, { 2, 0, 1 }
  uselistorder i32 %v0_80507c2, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v9_8050720, { 1, 0 }
  uselistorder i32 %v1_8050719, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8050719, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_80506f0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80506e2, { 2, 1, 0 }
  uselistorder i32 %v9_80506b1, { 1, 0 }
  uselistorder i32 %v0_8050aa4, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805069d, { 2, 1, 0 }
  uselistorder i32 %v9_805066c, { 1, 0 }
  uselistorder i32 %v0_8050b6e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050651, { 1, 0 }
  uselistorder i32 %v0_8050616, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_80505f8, { 2, 1, 0 }
  uselistorder i32 %v9_80505d0, { 1, 0 }
  uselistorder i32 %v0_8050c60, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80505ba, { 1, 0 }
  uselistorder i32 %v0_8050573, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_8050534, { 2, 1, 0 }
  uselistorder i32 %v9_8050503, { 1, 0 }
  uselistorder i32 %v0_8050b1d, { 0, 1, 3, 2 }
  uselistorder i32 %v2_80504e3, { 1, 0 }
  uselistorder i32 %v0_80504e3, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_80504dd, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80504dd, { 0, 2, 1 }
  uselistorder i32 %v0_80504d8, { 1, 0 }
  uselistorder i32 %v0_80504b3, { 1, 0, 2 }
  uselistorder i8* %v1_80504a1, { 1, 0, 2 }
  uselistorder i32 %v1_805047e, { 1, 0, 2 }
  uselistorder i32 %v0_8050971, { 1, 0, 2 }
  uselistorder i32 %v0_8050952, { 3, 0, 1, 2 }
  uselistorder i32 %v0_80504ef125, { 3, 0, 1, 2 }
  uselistorder i32 %v2_805047117, { 1, 0 }
  uselistorder i32 %v3_8050458, { 1, 0 }
  uselistorder i32 %v0_8050458, { 1, 15, 2, 13, 3, 12, 4, 14, 5, 11, 6, 10, 7, 9, 0, 8, 16 }
  uselistorder i32 %v1_8050443, { 0, 2, 1 }
  uselistorder i32 %v0_805043f, { 1, 0 }
  uselistorder i32 %v0_8050426, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 %v1_805041c, { 1, 0 }
  uselistorder i32 %v1_80503d4, { 1, 0 }
  uselistorder i32 %v2_80503d1, { 1, 0 }
  uselistorder i32 %v0_80503cf, { 1, 0 }
  uselistorder i32 %v0_80503bc, { 2, 1, 0 }
  uselistorder i32 %v1_80503b9, { 1, 0 }
  uselistorder i32 %v2_80503b6, { 1, 0 }
  uselistorder i32 %v3_80503aa, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_8050392, { 1, 0 }
  uselistorder i32 %v0_8050392, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8050339, { 1, 0 }
  uselistorder i32 %v1_8050319, { 1, 0 }
  uselistorder i32 %v0_8050319, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8050304, { 1, 0 }
  uselistorder i32 %v3_8050301, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8050dbe, { 1, 0 }
  uselistorder i32 %v1_8050dbb, { 2, 1, 0 }
  uselistorder i32 %v3_80502c9, { 1, 0, 2 }
  uselistorder i32 %v2_80502c7, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_805026c, { 1, 0 }
  uselistorder i32 %v1_8050261, { 1, 0 }
  uselistorder i32 %v0_8050261, { 1, 0 }
  uselistorder i32 %v0_805026a, { 0, 3, 2, 1 }
  uselistorder i32 %v1_805023e, { 1, 0 }
  uselistorder i32 %v0_805023e, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v6_8050230, { 1, 0, 2 }
  uselistorder i32 %v4_80501f3, { 1, 2, 0 }
  uselistorder i32 %v3_80501c2, { 1, 0, 2 }
  uselistorder i32 %v0_8050146, { 0, 2, 1 }
  uselistorder i32 %v0_805013d, { 0, 3, 2, 1 }
  uselistorder i32 %v0_804ff0462, { 1, 0 }
  uselistorder i32 %v0_8050120, { 2, 1, 0 }
  uselistorder i8 %v1_80500f2, { 1, 0 }
  uselistorder i8 %v2_80500cc, { 0, 4, 5, 6, 7, 8, 10, 9, 3, 2, 1 }
  uselistorder i32 %v2_80500c3, { 4, 8, 6, 1, 0, 2, 3, 5, 7 }
  uselistorder i32 %v5_80500c1, { 3, 2, 5, 4, 1, 0 }
  uselistorder i32 %v1_80500bb, { 3, 0, 1, 2 }
  uselistorder i32 %v0_80500b6, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805006a, { 1, 0 }
  uselistorder i32 %v0_804ffba, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804ffb5, { 1, 0 }
  uselistorder i32 %v1_804ff92, { 0, 2, 1 }
  uselistorder i32 %v0_804fef2, { 2, 0, 1 }
  uselistorder i32 %v0_804feb6, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 43, 23, 24, 44, 45, 46, 19, 8, 9, 10, 3, 6, 14, 15, 16, 52, 26, 27, 28, 20, 0, 1, 2, 4, 47, 48, 49, 50, 51, 5, 7, 11, 12, 13, 17, 18, 21, 22, 29, 30, 31, 32, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i32* %ecx.global-to-local, { 10, 11, 12, 13, 14, 15, 31, 3, 1, 2, 4, 33, 34, 7, 0, 8, 32, 5, 6, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %eax.global-to-local, { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 190, 191, 192, 193, 194, 196, 47, 108, 109, 110, 189, 62, 63, 64, 65, 66, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 197, 199, 198, 200, 201, 202, 203, 204, 206, 86, 87, 88, 89, 90, 49, 50, 51, 52, 53, 9, 10, 11, 12, 13, 14, 15, 39, 40, 41, 42, 43, 44, 67, 68, 69, 70, 71, 228, 229, 230, 231, 232, 233, 103, 125, 126, 127, 128, 140, 129, 130, 131, 132, 91, 92, 93, 94, 102, 0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 95, 96, 97, 98, 99, 207, 208, 209, 210, 211, 212, 205, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 37, 38, 45, 46, 48, 54, 55, 56, 57, 58, 59, 60, 61, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 100, 101, 104, 105, 106, 107, 133, 134, 135, 136, 137, 138, 139, 141, 234, 142, 143, 144, 145, 146, 187, 188, 147, 148, 149, 150, 151, 152, 153, 154, 155, 124, 156, 161, 157, 159, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 195, 184, 186, 185, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183 }
  uselistorder i32 ()* @function_805280f, { 1, 0 }
  uselistorder i32 1852, { 1, 2, 0, 3 }
  uselistorder i8 31, { 0, 2, 3, 1 }
  uselistorder i32 (i8)* @function_8051100, { 12, 4, 5, 13, 1, 2, 16, 0, 14, 15, 3, 6, 7, 8, 9, 10, 11, 17, 18, 19, 20 }
  uselistorder i32 ()* @function_8051cf0, { 23, 21, 20, 24, 22, 19, 18, 17, 16, 15, 14, 5, 4, 3, 13, 12, 11, 2, 1, 0, 10, 9, 8, 7, 6 }
  uselistorder i32 1864, { 6, 0, 4, 5, 7, 2, 3, 1 }
  uselistorder i32 (i32, i32*)* @function_80510d0, { 10, 11, 1, 2, 14, 0, 12, 13, 3, 4, 5, 6, 7, 8, 9, 15, 16, 31, 17, 18, 19, 37, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36 }
  uselistorder i32 1868, { 10, 8, 2, 3, 4, 5, 6, 7, 11, 9, 12, 1, 13, 0 }
  uselistorder i32 (i8)* @function_8051180, { 10, 11, 1, 2, 14, 0, 12, 13, 3, 4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i8 ptrtoint (i32* @0 to i8), { 18, 19, 0, 1, 20, 21, 12, 13, 8, 9, 14, 15, 16, 17, 22, 23, 10, 11, 6, 7, 2, 3, 4, 5 }
  uselistorder i8 37, { 5, 3, 2, 4, 1, 0 }
  uselistorder i8 35, { 6, 4, 3, 5, 2, 1, 0 }
  uselistorder i8 36, { 6, 4, 3, 5, 2, 1, 0 }
  uselistorder i8 62, { 7, 8, 5, 3, 4, 6, 2, 1, 0 }
  uselistorder i8 58, { 7, 8, 5, 3, 4, 6, 2, 1, 0 }
  uselistorder i32 ()* @function_80528e3, { 20, 19, 18, 17, 16, 15, 14, 7, 6, 11, 10, 22, 21, 13, 12, 9, 8, 2, 1, 24, 23, 4, 3, 5, 0 }
  uselistorder i8 -5, { 0, 3, 1, 2 }
  uselistorder i8 -3, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32 ()* @function_805286d, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_8052474, { 4, 3, 0, 2, 1 }
  uselistorder i32 ()* @function_80523ba, { 1, 0 }
  uselistorder i32 1556, { 1, 2, 0 }
  uselistorder i32 1684, { 1, 0, 2 }
  uselistorder i32 ()* @function_804ec50, { 3, 2, 0, 1 }
  uselistorder i32 288, { 0, 1, 3, 4, 2 }
  uselistorder i8 6, { 0, 2, 3, 1 }
  uselistorder i32 -28, { 3, 2, 4, 5, 6, 0, 1 }
  uselistorder i32 -24, { 1, 0, 2, 3, 4 }
  uselistorder i32 -20, { 2, 1, 3, 4, 0, 5 }
  uselistorder i8 -1, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 ()* @function_804eaf0, { 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_8056116.28, { 1, 0 }
  uselistorder i8 -58, { 1, 0 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 1856, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051028, { 1, 0 }
  uselistorder label %dec_label_pc_80503e6.backedge, { 22, 13, 7, 11, 9, 1, 5, 16, 6, 18, 8, 14, 19, 15, 17, 10, 20, 12, 2, 0, 3, 21, 4 }
  uselistorder label %dec_label_pc_8050a2c, { 1, 0 }
  uselistorder label %dec_label_pc_8050a01, { 6, 3, 1, 2, 4, 8, 0, 7, 5 }
  uselistorder label %dec_label_pc_8050471.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80508e2, { 1, 0 }
  uselistorder label %dec_label_pc_80508b2, { 1, 0 }
  uselistorder label %dec_label_pc_805085f, { 1, 0 }
  uselistorder label %dec_label_pc_8050833, { 1, 0 }
  uselistorder label %dec_label_pc_8050828, { 7, 8, 4, 2, 3, 5, 10, 0, 1, 11, 9, 6 }
  uselistorder label %dec_label_pc_805073a, { 1, 0 }
  uselistorder label %dec_label_pc_805070a, { 1, 0 }
  uselistorder label %dec_label_pc_80506b1, { 1, 0 }
  uselistorder label %dec_label_pc_805066c, { 1, 0 }
  uselistorder label %dec_label_pc_80505fb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80505d0, { 1, 0 }
  uselistorder label %dec_label_pc_8050537, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050503, { 1, 0 }
  uselistorder label %dec_label_pc_80504e7, { 5, 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_80504c6, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80504b3, { 1, 0 }
  uselistorder label %dec_label_pc_80504a1, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8050475, { 1, 0 }
  uselistorder label %dec_label_pc_8050475.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8050448, { 1, 0 }
  uselistorder label %dec_label_pc_8050443, { 1, 0 }
  uselistorder label %dec_label_pc_8050401, { 1, 0 }
  uselistorder label %dec_label_pc_80503ed, { 1, 0 }
  uselistorder label %dec_label_pc_80503cf, { 1, 0 }
  uselistorder label %dec_label_pc_8050383, { 5, 6, 0, 7, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_805035b, { 1, 0 }
  uselistorder label %dec_label_pc_805030a, { 3, 4, 5, 0, 1, 6, 2 }
  uselistorder label %dec_label_pc_80502d5, { 1, 0 }
  uselistorder label %dec_label_pc_8050290, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8050261, { 1, 0 }
  uselistorder label %dec_label_pc_805017a, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_805016f, { 1, 0 }
  uselistorder label %dec_label_pc_8050134, { 1, 0 }
  uselistorder label %dec_label_pc_8050100, { 1, 0 }
  uselistorder label %dec_label_pc_80500b6.preheader, { 16, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15 }
  uselistorder label %dec_label_pc_804ff04, { 1, 2, 4, 0, 3 }
}

define i32 @function_80510d0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_80510d0:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* @ecx, align 4
  %v1_80510d8 = icmp eq i32* %arg2, null
  %v1_80510da = mul i32 %arg1, 8
  store i32 %v1_80510da, i32* @edx, align 4
  br i1 %v1_80510d8, label %dec_label_pc_80510f3, label %dec_label_pc_80510e9

dec_label_pc_80510e9:                             ; preds = %dec_label_pc_80510d0
  %v1_80510e9 = add i32 %v1_80510da, add (i32 ptrtoint (i32* @global_var_80561a0.41 to i32), i32 4)
  %v2_80510e9 = inttoptr i32 %v1_80510e9 to i32*
  %v3_80510e9 = load i32, i32* %v2_80510e9, align 4
  %v1_80510ec = urem i32 %v3_80510e9, 65536
  store i32 %v1_80510ec, i32* %arg2, align 4
  %v0_80510f3.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80510f3

dec_label_pc_80510f3:                             ; preds = %dec_label_pc_80510d0, %dec_label_pc_80510e9
  %v0_80510f3 = phi i32 [ %v1_80510da, %dec_label_pc_80510d0 ], [ %v0_80510f3.pre, %dec_label_pc_80510e9 ]
  %v1_80510f3 = add i32 %v0_80510f3, ptrtoint (i32* @global_var_80561a0.41 to i32)
  %v2_80510f3 = inttoptr i32 %v1_80510f3 to i32*
  %v3_80510f3 = load i32, i32* %v2_80510f3, align 4
  ret i32 %v3_80510f3

; uselistorder directives
  uselistorder label %dec_label_pc_80510f3, { 1, 0 }
}

define i32 @function_8051100(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051100:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051109 = zext i8 %arg1 to i32
  %v1_805110d = mul nuw nsw i32 %v4_8051109, 8
  %v2_805110d = add i32 %v1_805110d, ptrtoint (i32* @global_var_80561a0.41 to i32)
  store i32 %v2_805110d, i32* @ecx, align 4
  %v0_8051114 = load i16, i16* @global_var_8056038.42, align 2
  %v1_8051114 = sext i16 %v0_8051114 to i32
  %v1_8051119 = add i32 %v1_805110d, add (i32 ptrtoint (i32* @global_var_80561a0.41 to i32), i32 4)
  %v2_8051119 = inttoptr i32 %v1_8051119 to i16*
  %v3_8051119 = load i16, i16* %v2_8051119, align 4
  %v4_8051119 = icmp eq i16 %v3_8051119, 0
  br i1 %v4_8051119, label %dec_label_pc_805116a, label %dec_label_pc_8051120

dec_label_pc_8051120:                             ; preds = %dec_label_pc_8051100
  store i32 %v1_8051114, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8051128 = udiv i32 %v1_8051114, 16777216
  %v2_805112b = udiv i32 %v1_8051114, 256
  store i32 %v2_805112b, i32* %edi.global-to-local, align 4
  %v5_805112e = trunc i32 %v2_8051128 to i8
  store i8 %v5_805112e, i8* %stack_var_-44, align 1
  %v2_8051131 = udiv i32 %v1_8051114, 65536
  store i32 %v2_8051131, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051134

dec_label_pc_8051134:                             ; preds = %dec_label_pc_8051134.dec_label_pc_8051134_crit_edge, %dec_label_pc_8051120
  %v0_805113a = phi i32 [ %v0_805113a.pre, %dec_label_pc_8051134.dec_label_pc_8051134_crit_edge ], [ %v1_8051114, %dec_label_pc_8051120 ]
  %v0_8051136 = phi i32 [ %v1_8051166, %dec_label_pc_8051134.dec_label_pc_8051134_crit_edge ], [ 0, %dec_label_pc_8051120 ]
  %v0_8051134 = phi i32 [ %v0_805115e, %dec_label_pc_8051134.dec_label_pc_8051134_crit_edge ], [ %v2_805110d, %dec_label_pc_8051120 ]
  %v1_8051134 = inttoptr i32 %v0_8051134 to i32*
  %v2_8051134 = load i32, i32* %v1_8051134, align 4
  %v2_8051138 = add i32 %v2_8051134, %v0_8051136
  %v1_805113c = inttoptr i32 %v2_8051138 to i8*
  %v2_805113c = load i8, i8* %v1_805113c, align 1
  %v4_805113c = trunc i32 %v0_805113a to i8
  %v5_805113c = xor i8 %v2_805113c, %v4_805113c
  store i8 %v5_805113c, i8* %v1_805113c, align 1
  %v0_805113e = load i32, i32* %edx.global-to-local, align 4
  %v0_8051140 = load i32, i32* @ecx, align 4
  %v1_8051140 = inttoptr i32 %v0_8051140 to i32*
  %v2_8051140 = load i32, i32* %v1_8051140, align 4
  %v2_8051142 = add i32 %v2_8051140, %v0_805113e
  %v0_8051144 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051146 = inttoptr i32 %v2_8051142 to i8*
  %v2_8051146 = load i8, i8* %v1_8051146, align 1
  %v4_8051146 = trunc i32 %v0_8051144 to i8
  %v5_8051146 = xor i8 %v2_8051146, %v4_8051146
  store i8 %v5_8051146, i8* %v1_8051146, align 1
  %v0_8051148 = load i32, i32* %edx.global-to-local, align 4
  %v0_805114a = load i32, i32* @ecx, align 4
  %v1_805114a = inttoptr i32 %v0_805114a to i32*
  %v2_805114a = load i32, i32* %v1_805114a, align 4
  %v2_805114c = add i32 %v2_805114a, %v0_8051148
  %v0_805114e = load i32, i32* %esi.global-to-local, align 4
  %v1_8051150 = inttoptr i32 %v2_805114c to i8*
  %v2_8051150 = load i8, i8* %v1_8051150, align 1
  %v4_8051150 = trunc i32 %v0_805114e to i8
  %v5_8051150 = xor i8 %v2_8051150, %v4_8051150
  store i8 %v5_8051150, i8* %v1_8051150, align 1
  %v0_8051152 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051154 = load i32, i32* @ecx, align 4
  %v1_8051154 = inttoptr i32 %v0_8051154 to i32*
  %v2_8051154 = load i32, i32* %v1_8051154, align 4
  %v1_8051156 = add i32 %v0_8051152, 1
  store i32 %v1_8051156, i32* %edx.global-to-local, align 4
  %v2_8051157 = add i32 %v2_8051154, %v0_8051152
  %v2_8051159 = load i8, i8* %stack_var_-44, align 1
  %v1_805115c = inttoptr i32 %v2_8051157 to i8*
  %v2_805115c = load i8, i8* %v1_805115c, align 1
  %v5_805115c = xor i8 %v2_805115c, %v2_8051159
  store i8 %v5_805115c, i8* %v1_805115c, align 1
  %v0_805115e = load i32, i32* @ecx, align 4
  %v1_805115e = add i32 %v0_805115e, 4
  %v2_805115e = inttoptr i32 %v1_805115e to i32*
  %v3_805115e = load i32, i32* %v2_805115e, align 4
  %v1_8051161 = urem i32 %v3_805115e, 65536
  %v1_8051166 = load i32, i32* %edx.global-to-local, align 4
  %v8_8051168 = icmp sgt i32 %v1_8051161, %v1_8051166
  br i1 %v8_8051168, label %dec_label_pc_8051134.dec_label_pc_8051134_crit_edge, label %dec_label_pc_805116a.loopexit

dec_label_pc_8051134.dec_label_pc_8051134_crit_edge: ; preds = %dec_label_pc_8051134
  %v0_805113a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051134

dec_label_pc_805116a.loopexit:                    ; preds = %dec_label_pc_8051134
  br label %dec_label_pc_805116a

dec_label_pc_805116a:                             ; preds = %dec_label_pc_805116a.loopexit, %dec_label_pc_8051100
  %v0_8051171 = phi i32 [ %v1_8051161, %dec_label_pc_805116a.loopexit ], [ %v1_8051114, %dec_label_pc_8051100 ]
  ret i32 %v0_8051171

; uselistorder directives
  uselistorder i32 %v1_8051166, { 1, 0 }
  uselistorder i32 %v1_8051161, { 1, 0 }
  uselistorder i32 %v0_805115e, { 1, 0 }
  uselistorder i32 %v1_8051114, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
}

define i32 @function_8051180(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051180:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051189 = zext i8 %arg1 to i32
  %v1_805118d = mul nuw nsw i32 %v4_8051189, 8
  %v2_805118d = add i32 %v1_805118d, ptrtoint (i32* @global_var_80561a0.41 to i32)
  store i32 %v2_805118d, i32* %ecx.global-to-local, align 4
  %v0_8051194 = load i16, i16* @global_var_8056038.42, align 2
  %v1_8051194 = sext i16 %v0_8051194 to i32
  %v1_8051199 = add i32 %v1_805118d, add (i32 ptrtoint (i32* @global_var_80561a0.41 to i32), i32 4)
  %v2_8051199 = inttoptr i32 %v1_8051199 to i16*
  %v3_8051199 = load i16, i16* %v2_8051199, align 4
  %v4_8051199 = icmp eq i16 %v3_8051199, 0
  br i1 %v4_8051199, label %dec_label_pc_80511ea, label %dec_label_pc_80511a0

dec_label_pc_80511a0:                             ; preds = %dec_label_pc_8051180
  store i32 %v1_8051194, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_80511a8 = udiv i32 %v1_8051194, 16777216
  %v2_80511ab = udiv i32 %v1_8051194, 256
  store i32 %v2_80511ab, i32* %edi.global-to-local, align 4
  %v5_80511ae = trunc i32 %v2_80511a8 to i8
  store i8 %v5_80511ae, i8* %stack_var_-44, align 1
  %v2_80511b1 = udiv i32 %v1_8051194, 65536
  store i32 %v2_80511b1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80511b4

dec_label_pc_80511b4:                             ; preds = %dec_label_pc_80511b4.dec_label_pc_80511b4_crit_edge, %dec_label_pc_80511a0
  %v0_80511ba = phi i32 [ %v0_80511ba.pre, %dec_label_pc_80511b4.dec_label_pc_80511b4_crit_edge ], [ %v1_8051194, %dec_label_pc_80511a0 ]
  %v0_80511b6 = phi i32 [ %v1_80511e6, %dec_label_pc_80511b4.dec_label_pc_80511b4_crit_edge ], [ 0, %dec_label_pc_80511a0 ]
  %v0_80511b4 = phi i32 [ %v0_80511de, %dec_label_pc_80511b4.dec_label_pc_80511b4_crit_edge ], [ %v2_805118d, %dec_label_pc_80511a0 ]
  %v1_80511b4 = inttoptr i32 %v0_80511b4 to i32*
  %v2_80511b4 = load i32, i32* %v1_80511b4, align 4
  %v2_80511b8 = add i32 %v2_80511b4, %v0_80511b6
  %v1_80511bc = inttoptr i32 %v2_80511b8 to i8*
  %v2_80511bc = load i8, i8* %v1_80511bc, align 1
  %v4_80511bc = trunc i32 %v0_80511ba to i8
  %v5_80511bc = xor i8 %v2_80511bc, %v4_80511bc
  store i8 %v5_80511bc, i8* %v1_80511bc, align 1
  %v0_80511be = load i32, i32* %edx.global-to-local, align 4
  %v0_80511c0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80511c0 = inttoptr i32 %v0_80511c0 to i32*
  %v2_80511c0 = load i32, i32* %v1_80511c0, align 4
  %v2_80511c2 = add i32 %v2_80511c0, %v0_80511be
  %v0_80511c4 = load i32, i32* %edi.global-to-local, align 4
  %v1_80511c6 = inttoptr i32 %v2_80511c2 to i8*
  %v2_80511c6 = load i8, i8* %v1_80511c6, align 1
  %v4_80511c6 = trunc i32 %v0_80511c4 to i8
  %v5_80511c6 = xor i8 %v2_80511c6, %v4_80511c6
  store i8 %v5_80511c6, i8* %v1_80511c6, align 1
  %v0_80511c8 = load i32, i32* %edx.global-to-local, align 4
  %v0_80511ca = load i32, i32* %ecx.global-to-local, align 4
  %v1_80511ca = inttoptr i32 %v0_80511ca to i32*
  %v2_80511ca = load i32, i32* %v1_80511ca, align 4
  %v2_80511cc = add i32 %v2_80511ca, %v0_80511c8
  %v0_80511ce = load i32, i32* %esi.global-to-local, align 4
  %v1_80511d0 = inttoptr i32 %v2_80511cc to i8*
  %v2_80511d0 = load i8, i8* %v1_80511d0, align 1
  %v4_80511d0 = trunc i32 %v0_80511ce to i8
  %v5_80511d0 = xor i8 %v2_80511d0, %v4_80511d0
  store i8 %v5_80511d0, i8* %v1_80511d0, align 1
  %v0_80511d2 = load i32, i32* %edx.global-to-local, align 4
  %v0_80511d4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80511d4 = inttoptr i32 %v0_80511d4 to i32*
  %v2_80511d4 = load i32, i32* %v1_80511d4, align 4
  %v1_80511d6 = add i32 %v0_80511d2, 1
  store i32 %v1_80511d6, i32* %edx.global-to-local, align 4
  %v2_80511d7 = add i32 %v2_80511d4, %v0_80511d2
  %v2_80511d9 = load i8, i8* %stack_var_-44, align 1
  %v1_80511dc = inttoptr i32 %v2_80511d7 to i8*
  %v2_80511dc = load i8, i8* %v1_80511dc, align 1
  %v5_80511dc = xor i8 %v2_80511dc, %v2_80511d9
  store i8 %v5_80511dc, i8* %v1_80511dc, align 1
  %v0_80511de = load i32, i32* %ecx.global-to-local, align 4
  %v1_80511de = add i32 %v0_80511de, 4
  %v2_80511de = inttoptr i32 %v1_80511de to i32*
  %v3_80511de = load i32, i32* %v2_80511de, align 4
  %v1_80511e1 = urem i32 %v3_80511de, 65536
  %v1_80511e6 = load i32, i32* %edx.global-to-local, align 4
  %v8_80511e8 = icmp sgt i32 %v1_80511e1, %v1_80511e6
  br i1 %v8_80511e8, label %dec_label_pc_80511b4.dec_label_pc_80511b4_crit_edge, label %dec_label_pc_80511ea.loopexit

dec_label_pc_80511b4.dec_label_pc_80511b4_crit_edge: ; preds = %dec_label_pc_80511b4
  %v0_80511ba.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80511b4

dec_label_pc_80511ea.loopexit:                    ; preds = %dec_label_pc_80511b4
  br label %dec_label_pc_80511ea

dec_label_pc_80511ea:                             ; preds = %dec_label_pc_80511ea.loopexit, %dec_label_pc_8051180
  %v0_80511f1 = phi i32 [ %v1_80511e1, %dec_label_pc_80511ea.loopexit ], [ %v1_8051194, %dec_label_pc_8051180 ]
  ret i32 %v0_80511f1

; uselistorder directives
  uselistorder i32 %v1_80511e6, { 1, 0 }
  uselistorder i32 %v1_80511e1, { 1, 0 }
  uselistorder i32 %v0_80511de, { 1, 0 }
  uselistorder i32 %v1_8051194, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80561a0.41 to i32), i32 4), { 1, 2, 0 }
  uselistorder i16* @global_var_8056038.42, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80561a0.41 to i32), { 1, 2, 3, 0 }
}

define i32 @function_8051c40(i8* %arg1) local_unnamed_addr {
dec_label_pc_8051c40:
  %v4_8051c40 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051c40, i32* @edx, align 4
  %v2_8051c46 = load i8, i8* %arg1, align 1
  %v3_8051c46 = icmp eq i8 %v2_8051c46, 0
  br i1 %v3_8051c46, label %dec_label_pc_8051c57, label %dec_label_pc_8051c50

dec_label_pc_8051c50:                             ; preds = %dec_label_pc_8051c40, %dec_label_pc_8051c50
  %v0_8051c50 = phi i32 [ %v1_8051c50, %dec_label_pc_8051c50 ], [ 0, %dec_label_pc_8051c40 ]
  %v1_8051c50 = add i32 %v0_8051c50, 1
  %v2_8051c51 = add i32 %v1_8051c50, %v4_8051c40
  %v3_8051c51 = inttoptr i32 %v2_8051c51 to i8*
  %v4_8051c51 = load i8, i8* %v3_8051c51, align 1
  %v5_8051c51 = icmp eq i8 %v4_8051c51, 0
  %v1_8051c55 = icmp eq i1 %v5_8051c51, false
  br i1 %v1_8051c55, label %dec_label_pc_8051c50, label %dec_label_pc_8051c57

dec_label_pc_8051c57:                             ; preds = %dec_label_pc_8051c50, %dec_label_pc_8051c40
  %v0_8051c57 = phi i32 [ 0, %dec_label_pc_8051c40 ], [ %v1_8051c50, %dec_label_pc_8051c50 ]
  ret i32 %v0_8051c57

; uselistorder directives
  uselistorder label %dec_label_pc_8051c50, { 1, 0 }
}

define i32 @function_8051c60(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051c60:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp15 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051c61 = load i32, i32* @ebx, align 4
  store i32 %v0_8051c61, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v4_8051c66 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051c66, i32* %edx.global-to-local, align 4
  %v2_8051c6a = load i8, i8* %tmp15, align 1
  %v3_8051c6a = icmp eq i8 %v2_8051c6a, 0
  br i1 %v3_8051c6a, label %dec_label_pc_8051c94, label %dec_label_pc_8051c6f

dec_label_pc_8051c6f:                             ; preds = %dec_label_pc_8051c60
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051c71

dec_label_pc_8051c71:                             ; preds = %dec_label_pc_8051c71, %dec_label_pc_8051c6f
  %v0_8051c71 = phi i32 [ %v1_8051c71, %dec_label_pc_8051c71 ], [ 0, %dec_label_pc_8051c6f ]
  %v1_8051c71 = add i32 %v0_8051c71, 1
  store i32 %v1_8051c71, i32* %esi.global-to-local, align 4
  %v2_8051c72 = add i32 %v1_8051c71, %arg2
  %v3_8051c72 = inttoptr i32 %v2_8051c72 to i8*
  %v4_8051c72 = load i8, i8* %v3_8051c72, align 1
  %v5_8051c72 = icmp eq i8 %v4_8051c72, 0
  %v1_8051c76 = icmp eq i1 %v5_8051c72, false
  br i1 %v1_8051c76, label %dec_label_pc_8051c71, label %dec_label_pc_8051c78

dec_label_pc_8051c78:                             ; preds = %dec_label_pc_8051c71
  %v10_8051c78 = icmp eq i32 %v0_8051c71, -2
  br i1 %v10_8051c78, label %dec_label_pc_8051c8f, label %dec_label_pc_8051c7d

dec_label_pc_8051c7d:                             ; preds = %dec_label_pc_8051c78
  store i32 %v4_8051c66, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %v1_8051c71, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051c83

dec_label_pc_8051c83:                             ; preds = %dec_label_pc_8051c94, %dec_label_pc_8051c7d, %dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge
  %v2_8051c86 = phi i32 [ %v1_8051c89, %dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge ], [ %v4_8051c66, %dec_label_pc_8051c7d ], [ %v4_8051c66, %dec_label_pc_8051c94 ]
  %v0_8051c85 = phi i32 [ %v0_8051c8a, %dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge ], [ %v1_8051c71, %dec_label_pc_8051c7d ], [ 0, %dec_label_pc_8051c94 ]
  %v4_8051c83 = phi i32 [ %v4_8051c83.pre, %dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge ], [ %arg2, %dec_label_pc_8051c7d ], [ %arg2, %dec_label_pc_8051c94 ]
  %v0_8051c83 = phi i32 [ %v1_8051c88, %dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge ], [ %arg2, %dec_label_pc_8051c7d ], [ %arg2, %dec_label_pc_8051c94 ]
  %v1_8051c83 = inttoptr i32 %v0_8051c83 to i8*
  %v2_8051c83 = load i8, i8* %v1_8051c83, align 1
  %v3_8051c83 = zext i8 %v2_8051c83 to i32
  %v5_8051c83 = and i32 %v4_8051c83, -256
  %v6_8051c83 = or i32 %v3_8051c83, %v5_8051c83
  store i32 %v6_8051c83, i32* %eax.global-to-local, align 4
  %v1_8051c85 = add i32 %v0_8051c85, -1
  store i32 %v1_8051c85, i32* %edx.global-to-local, align 4
  %v3_8051c86 = inttoptr i32 %v2_8051c86 to i8*
  store i8 %v2_8051c83, i8* %v3_8051c86, align 1
  %v0_8051c88 = load i32, i32* @ecx, align 4
  %v1_8051c88 = add i32 %v0_8051c88, 1
  store i32 %v1_8051c88, i32* @ecx, align 4
  %v0_8051c89 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051c89 = add i32 %v0_8051c89, 1
  store i32 %v1_8051c89, i32* %ebx.global-to-local, align 4
  %v0_8051c8a = load i32, i32* %edx.global-to-local, align 4
  %v10_8051c8a = icmp eq i32 %v0_8051c8a, -1
  %v1_8051c8d = icmp eq i1 %v10_8051c8a, false
  br i1 %v1_8051c8d, label %dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge, label %dec_label_pc_8051c8f.loopexit

dec_label_pc_8051c83.dec_label_pc_8051c83_crit_edge: ; preds = %dec_label_pc_8051c83
  %v4_8051c83.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051c83

dec_label_pc_8051c8f.loopexit:                    ; preds = %dec_label_pc_8051c83
  %v0_8051c8f.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8051c91.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8051c8f

dec_label_pc_8051c8f:                             ; preds = %dec_label_pc_8051c8f.loopexit, %dec_label_pc_8051c78
  %v2_8051c91 = phi i32 [ %v2_8051c91.pre, %dec_label_pc_8051c8f.loopexit ], [ %v0_8051c61, %dec_label_pc_8051c78 ]
  %v0_8051c8f = phi i32 [ %v0_8051c8f.pre, %dec_label_pc_8051c8f.loopexit ], [ %v1_8051c71, %dec_label_pc_8051c78 ]
  store i32 %v0_8051c8f, i32* %eax.global-to-local, align 4
  store i32 %v2_8051c91, i32* @ebx, align 4
  ret i32 %v0_8051c8f

dec_label_pc_8051c94:                             ; preds = %dec_label_pc_8051c60
  store i32 %v4_8051c66, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051c83

; uselistorder directives
  uselistorder i32 %v0_8051c8f, { 1, 0 }
  uselistorder i32 %v1_8051c89, { 1, 0 }
  uselistorder i32 %v1_8051c88, { 1, 0 }
  uselistorder i32 %v1_8051c71, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v4_8051c66, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_8051c83, { 0, 2, 1 }
}

define i32 @function_8051cd0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051cd0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8051cd8 = icmp eq i32 %arg2, 0
  br i1 %v1_8051cd8, label %dec_label_pc_8051cd0.dec_label_pc_8051ce9_crit_edge, label %dec_label_pc_8051cdc

dec_label_pc_8051cd0.dec_label_pc_8051ce9_crit_edge: ; preds = %dec_label_pc_8051cd0
  %v0_8051ce9.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051ce9

dec_label_pc_8051cdc:                             ; preds = %dec_label_pc_8051cd0
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8051ce05 = inttoptr i32 %arg1 to i8*
  store i8 0, i8* %v3_8051ce05, align 1
  %v0_8051ce46 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051ce47 = add i32 %v0_8051ce46, 1
  store i32 %v1_8051ce47, i32* %eax.global-to-local, align 4
  %v12_8051ce58 = icmp eq i32 %v1_8051ce47, %arg2
  %v1_8051ce79 = icmp eq i1 %v12_8051ce58, false
  br i1 %v1_8051ce79, label %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge, label %dec_label_pc_8051ce9

dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge: ; preds = %dec_label_pc_8051cdc, %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge
  %v1_8051ce410 = phi i32 [ %v1_8051ce4, %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge ], [ %v1_8051ce47, %dec_label_pc_8051cdc ]
  %v1_8051ce0.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051ce0 = add i32 %v1_8051ce410, %v1_8051ce0.pre
  %v3_8051ce0 = inttoptr i32 %v2_8051ce0 to i8*
  store i8 0, i8* %v3_8051ce0, align 1
  %v0_8051ce4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051ce4 = add i32 %v0_8051ce4, 1
  store i32 %v1_8051ce4, i32* %eax.global-to-local, align 4
  %v12_8051ce5 = icmp eq i32 %v1_8051ce4, %arg2
  %v1_8051ce7 = icmp eq i1 %v12_8051ce5, false
  br i1 %v1_8051ce7, label %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge, label %dec_label_pc_8051ce9

dec_label_pc_8051ce9:                             ; preds = %dec_label_pc_8051cdc, %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge, %dec_label_pc_8051cd0.dec_label_pc_8051ce9_crit_edge
  %v0_8051ce9 = phi i32 [ %v0_8051ce9.pre, %dec_label_pc_8051cd0.dec_label_pc_8051ce9_crit_edge ], [ %v1_8051ce47, %dec_label_pc_8051cdc ], [ %v1_8051ce4, %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge ]
  ret i32 %v0_8051ce9

; uselistorder directives
  uselistorder i32 %v1_8051ce4, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051ce9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051ce0.dec_label_pc_8051ce0_crit_edge, { 1, 0 }
}

define i32 @function_8051cf0() local_unnamed_addr {
dec_label_pc_8051cf0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* @ecx, align 4
  %v7_8051d05 = icmp sgt i32 %tmp9, %tmp10
  br i1 %v7_8051d05, label %dec_label_pc_8051d07, label %dec_label_pc_8051d10

dec_label_pc_8051d07:                             ; preds = %dec_label_pc_8051d22, %dec_label_pc_8051cf0, %dec_label_pc_8051d10
  br label %dec_label_pc_8051d0a

dec_label_pc_8051d0a:                             ; preds = %dec_label_pc_8051d35, %dec_label_pc_8051d07
  %storemerge = phi i32 [ -1, %dec_label_pc_8051d07 ], [ %v0_8051d23, %dec_label_pc_8051d35 ]
  ret i32 %storemerge

dec_label_pc_8051d10:                             ; preds = %dec_label_pc_8051cf0
  %tmp17 = icmp slt i32 %tmp10, 1
  br i1 %tmp17, label %dec_label_pc_8051d07, label %dec_label_pc_8051d14

dec_label_pc_8051d14:                             ; preds = %dec_label_pc_8051d10
  %v2_8051d2c = add i32 %tmp, -1
  br label %dec_label_pc_8051d28

dec_label_pc_8051d20:                             ; preds = %dec_label_pc_8051d28
  br label %dec_label_pc_8051d22

dec_label_pc_8051d22:                             ; preds = %dec_label_pc_8051d35, %dec_label_pc_8051d20
  %v2_8051d303 = phi i32 [ %v1_8051d35, %dec_label_pc_8051d35 ], [ 0, %dec_label_pc_8051d20 ]
  %v1_8051d22 = add i32 %v0_8051d22, 1
  %v1_8051d23 = add i32 %v0_8051d23, 1
  %v12_8051d24 = icmp eq i32 %tmp10, %v1_8051d22
  br i1 %v12_8051d24, label %dec_label_pc_8051d07, label %dec_label_pc_8051d28

dec_label_pc_8051d28:                             ; preds = %dec_label_pc_8051d22, %dec_label_pc_8051d14
  %v0_8051d22 = phi i32 [ %v1_8051d22, %dec_label_pc_8051d22 ], [ 0, %dec_label_pc_8051d14 ]
  %v0_8051d35 = phi i32 [ %v2_8051d303, %dec_label_pc_8051d22 ], [ 0, %dec_label_pc_8051d14 ]
  %v0_8051d23 = phi i32 [ %v1_8051d23, %dec_label_pc_8051d22 ], [ 1, %dec_label_pc_8051d14 ]
  %v3_8051d2c = add i32 %v2_8051d2c, %v0_8051d23
  %v4_8051d2c = inttoptr i32 %v3_8051d2c to i8*
  %v5_8051d2c = load i8, i8* %v4_8051d2c, align 1
  %v4_8051d30 = add i32 %v0_8051d35, %tmp8
  %v5_8051d30 = inttoptr i32 %v4_8051d30 to i8*
  %v6_8051d30 = load i8, i8* %v5_8051d30, align 1
  %v17_8051d30 = icmp eq i8 %v5_8051d2c, %v6_8051d30
  %v1_8051d33 = icmp eq i1 %v17_8051d30, false
  br i1 %v1_8051d33, label %dec_label_pc_8051d20, label %dec_label_pc_8051d35

dec_label_pc_8051d35:                             ; preds = %dec_label_pc_8051d28
  %v1_8051d35 = add i32 %v0_8051d35, 1
  %v12_8051d36 = icmp eq i32 %tmp9, %v1_8051d35
  %v1_8051d38 = icmp eq i1 %v12_8051d36, false
  br i1 %v1_8051d38, label %dec_label_pc_8051d22, label %dec_label_pc_8051d0a

; uselistorder directives
  uselistorder i32 %v0_8051d23, { 2, 0, 1 }
  uselistorder i32 %v0_8051d35, { 1, 0 }
  uselistorder i32 %v1_8051d22, { 1, 0 }
  uselistorder label %dec_label_pc_8051d07, { 0, 2, 1 }
}

define i32 @function_8051d40(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051d40:
  %v4_8051d47 = ptrtoint i8* %arg1 to i32
  %v4_8051d50.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051d50

dec_label_pc_8051d50:                             ; preds = %dec_label_pc_8051d64, %dec_label_pc_8051d60, %dec_label_pc_8051d50, %dec_label_pc_8051d40
  %v4_8051d50 = phi i32 [ %v4_8051d50.pre, %dec_label_pc_8051d40 ], [ %v6_8051d50, %dec_label_pc_8051d50 ], [ %v6_8051d50, %dec_label_pc_8051d60 ], [ %v6_8051d50, %dec_label_pc_8051d64 ]
  %v0_8051d52 = phi i32 [ %v4_8051d47, %dec_label_pc_8051d40 ], [ %v1_8051d52, %dec_label_pc_8051d50 ], [ %v1_8051d52, %dec_label_pc_8051d60 ], [ %v1_8051d52, %dec_label_pc_8051d64 ]
  %v1_8051d50 = inttoptr i32 %v0_8051d52 to i8*
  %v2_8051d50 = load i8, i8* %v1_8051d50, align 1
  %v3_8051d50 = zext i8 %v2_8051d50 to i32
  %v5_8051d50 = and i32 %v4_8051d50, -256
  %v6_8051d50 = or i32 %v3_8051d50, %v5_8051d50
  %v1_8051d52 = add i32 %v0_8051d52, 1
  %v7_8051d5c = icmp eq i8 %v2_8051d50, 32
  br i1 %v7_8051d5c, label %dec_label_pc_8051d50, label %dec_label_pc_8051d60

dec_label_pc_8051d60:                             ; preds = %dec_label_pc_8051d50
  %v10_8051d60 = icmp eq i8 %v2_8051d50, 9
  br i1 %v10_8051d60, label %dec_label_pc_8051d50, label %dec_label_pc_8051d64

dec_label_pc_8051d64:                             ; preds = %dec_label_pc_8051d60
  %v10_8051d64 = icmp eq i8 %v2_8051d50, 10
  br i1 %v10_8051d64, label %dec_label_pc_8051d50, label %dec_label_pc_8051d68

dec_label_pc_8051d68:                             ; preds = %dec_label_pc_8051d64
  %tmp41 = sext i32 %arg2 to i64
  %v10_8051d68 = icmp eq i8 %v2_8051d50, 45
  br i1 %v10_8051d68, label %dec_label_pc_8051e1d, label %dec_label_pc_8051d71

dec_label_pc_8051d71:                             ; preds = %dec_label_pc_8051d68
  %v10_8051d71 = icmp eq i8 %v2_8051d50, 43
  br i1 %v10_8051d71, label %dec_label_pc_8051e4d, label %dec_label_pc_8051d7a

dec_label_pc_8051d7a:                             ; preds = %dec_label_pc_8051d71, %dec_label_pc_8051e4d
  %v0_8051dc430 = phi i32 [ %v1_8051d52, %dec_label_pc_8051d71 ], [ %v1_8051e50, %dec_label_pc_8051e4d ]
  %v0_8051df016.in = phi i8 [ %v2_8051d50, %dec_label_pc_8051d71 ], [ %v2_8051e4d, %dec_label_pc_8051e4d ]
  %v2_8051dce9 = phi i8 [ %v2_8051d50, %dec_label_pc_8051d71 ], [ %v2_8051e4d, %dec_label_pc_8051e4d ]
  br label %dec_label_pc_8051d87

dec_label_pc_8051d87:                             ; preds = %dec_label_pc_8051e1d, %dec_label_pc_8051d7a
  %v0_8051dc429 = phi i32 [ %v1_8051e25, %dec_label_pc_8051e1d ], [ %v0_8051dc430, %dec_label_pc_8051d7a ]
  %v0_8051df015.in = phi i8 [ %v2_8051e1d, %dec_label_pc_8051e1d ], [ %v0_8051df016.in, %dec_label_pc_8051d7a ]
  %v2_8051dce8 = phi i8 [ %v2_8051e1d, %dec_label_pc_8051e1d ], [ %v2_8051dce9, %dec_label_pc_8051d7a ]
  %v0_8051d87 = phi i64 [ 2147483648, %dec_label_pc_8051e1d ], [ 2147483647, %dec_label_pc_8051d7a ]
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_8051e1d ], [ 0, %dec_label_pc_8051d7a ]
  %v12_8051d8b = udiv i64 %v0_8051d87, %tmp41
  %v13_8051d8b = trunc i64 %v12_8051d8b to i32
  %v14_8051d8b = urem i64 %v0_8051d87, %tmp41
  %v15_8051d8b = trunc i64 %v14_8051d8b to i32
  br label %dec_label_pc_8051dce

dec_label_pc_8051da0:                             ; preds = %dec_label_pc_8051dce
  %v1_8051da0 = add nsw i32 %v0_8051da0, -48
  %v7_8051da7 = icmp slt i32 %v1_8051da0, %arg2
  br i1 %v7_8051da7, label %dec_label_pc_8051da9, label %dec_label_pc_8051dfa

dec_label_pc_8051da9:                             ; preds = %dec_label_pc_8051da0, %dec_label_pc_8051df0
  %v1_8051dc1 = phi i32 [ %v1_8051da0, %dec_label_pc_8051da0 ], [ %v2_8051df2, %dec_label_pc_8051df0 ]
  %v2_8051da9 = icmp slt i32 %v0_8051da9, 0
  br i1 %v2_8051da9, label %dec_label_pc_8051e18, label %dec_label_pc_8051dad

dec_label_pc_8051dad:                             ; preds = %dec_label_pc_8051da9
  %tmp42 = icmp ugt i32 %v0_8051dad, %v13_8051d8b
  br i1 %tmp42, label %dec_label_pc_8051e18, label %dec_label_pc_8051db3

dec_label_pc_8051db3:                             ; preds = %dec_label_pc_8051dad
  %v15_8051dad = icmp eq i32 %v0_8051dad, %v13_8051d8b
  br i1 %v15_8051dad, label %dec_label_pc_8051e12, label %dec_label_pc_8051db5

dec_label_pc_8051db5:                             ; preds = %dec_label_pc_8051e12, %dec_label_pc_8051db3
  %v4_8051dbe = mul i32 %v1_8051dbe, %arg2
  %v2_8051dc1 = add i32 %v1_8051dc1, %v4_8051dbe
  br label %dec_label_pc_8051dc4

dec_label_pc_8051dc4:                             ; preds = %dec_label_pc_8051e18, %dec_label_pc_8051db5
  %v1_8051dbe26 = phi i32 [ %v1_8051dbe, %dec_label_pc_8051e18 ], [ %v2_8051dc1, %dec_label_pc_8051db5 ]
  %v0_8051e0220 = phi i32 [ %v0_8051dad, %dec_label_pc_8051e18 ], [ %v2_8051dc1, %dec_label_pc_8051db5 ]
  %v0_8051dfa19 = phi i32 [ -1, %dec_label_pc_8051e18 ], [ 1, %dec_label_pc_8051db5 ]
  %v1_8051dc4 = inttoptr i32 %v0_8051dc4 to i8*
  %v2_8051dc4 = load i8, i8* %v1_8051dc4, align 1
  %v1_8051dca = add i32 %v0_8051dc4, 1
  br label %dec_label_pc_8051dce

dec_label_pc_8051dce:                             ; preds = %dec_label_pc_8051d87, %dec_label_pc_8051dc4
  %v0_8051dc4 = phi i32 [ %v0_8051dc429, %dec_label_pc_8051d87 ], [ %v1_8051dca, %dec_label_pc_8051dc4 ]
  %v1_8051dbe = phi i32 [ 0, %dec_label_pc_8051d87 ], [ %v1_8051dbe26, %dec_label_pc_8051dc4 ]
  %v0_8051dad = phi i32 [ 0, %dec_label_pc_8051d87 ], [ %v0_8051e0220, %dec_label_pc_8051dc4 ]
  %v0_8051da9 = phi i32 [ 0, %dec_label_pc_8051d87 ], [ %v0_8051dfa19, %dec_label_pc_8051dc4 ]
  %v0_8051da0.in = phi i8 [ %v0_8051df015.in, %dec_label_pc_8051d87 ], [ %v2_8051dc4, %dec_label_pc_8051dc4 ]
  %v2_8051dce = phi i8 [ %v2_8051dce8, %dec_label_pc_8051d87 ], [ %v2_8051dc4, %dec_label_pc_8051dc4 ]
  %v0_8051da0 = sext i8 %v0_8051da0.in to i32
  %v1_8051dd1 = add i8 %v2_8051dce, -48
  %tmp43 = icmp ult i8 %v1_8051dd1, 10
  br i1 %tmp43, label %dec_label_pc_8051da0, label %dec_label_pc_8051dd8

dec_label_pc_8051dd8:                             ; preds = %dec_label_pc_8051dce
  %v1_8051dd8 = add i8 %v2_8051dce, -65
  store i32 55, i32* @ecx, align 4
  %tmp44 = icmp ult i8 %v1_8051dd8, 26
  br i1 %tmp44, label %dec_label_pc_8051df0, label %dec_label_pc_8051de4

dec_label_pc_8051de4:                             ; preds = %dec_label_pc_8051dd8
  %v1_8051de4 = add i8 %v2_8051dce, -97
  %tmp45 = icmp ult i8 %v1_8051de4, 26
  br i1 %tmp45, label %dec_label_pc_8051deb, label %dec_label_pc_8051dfa

dec_label_pc_8051deb:                             ; preds = %dec_label_pc_8051de4
  store i32 87, i32* @ecx, align 4
  br label %dec_label_pc_8051df0

dec_label_pc_8051df0:                             ; preds = %dec_label_pc_8051dd8, %dec_label_pc_8051deb
  %v1_8051df2 = phi i32 [ 55, %dec_label_pc_8051dd8 ], [ 87, %dec_label_pc_8051deb ]
  %v2_8051df2 = sub nsw i32 %v0_8051da0, %v1_8051df2
  %v7_8051df8 = icmp slt i32 %v2_8051df2, %arg2
  br i1 %v7_8051df8, label %dec_label_pc_8051da9, label %dec_label_pc_8051dfa

dec_label_pc_8051dfa:                             ; preds = %dec_label_pc_8051da0, %dec_label_pc_8051de4, %dec_label_pc_8051df0
  %v2_8051dfa = icmp slt i32 %v0_8051da9, 0
  br i1 %v2_8051dfa, label %dec_label_pc_8051e39, label %dec_label_pc_8051dfe

dec_label_pc_8051dfe:                             ; preds = %dec_label_pc_8051dfa
  store i32 %stack_var_-20.0, i32* @ecx, align 4
  %v1_8051e04 = icmp eq i32 %stack_var_-20.0, 0
  br i1 %v1_8051e04, label %dec_label_pc_8051e0a, label %dec_label_pc_8051e08

dec_label_pc_8051e08:                             ; preds = %dec_label_pc_8051dfe
  %v1_8051e08 = sub i32 0, %v0_8051dad
  br label %dec_label_pc_8051e0a

dec_label_pc_8051e0a:                             ; preds = %dec_label_pc_8051dfe, %dec_label_pc_8051e08
  %v0_8051e11 = phi i32 [ %v0_8051dad, %dec_label_pc_8051dfe ], [ %v1_8051e08, %dec_label_pc_8051e08 ]
  ret i32 %v0_8051e11

dec_label_pc_8051e12:                             ; preds = %dec_label_pc_8051db3
  %v5_8051e12 = sub i32 %v1_8051dc1, %v15_8051d8b
  %v11_8051e12 = xor i32 %v1_8051dc1, %v15_8051d8b
  %v12_8051e12 = xor i32 %v5_8051e12, %v1_8051dc1
  %v13_8051e12 = and i32 %v12_8051e12, %v11_8051e12
  %v14_8051e12 = icmp slt i32 %v13_8051e12, 0
  %v15_8051e12 = icmp eq i32 %v5_8051e12, 0
  %v16_8051e12 = icmp slt i32 %v5_8051e12, 0
  %v3_8051e16 = icmp ne i1 %v16_8051e12, %v14_8051e12
  %v4_8051e16 = or i1 %v15_8051e12, %v3_8051e16
  br i1 %v4_8051e16, label %dec_label_pc_8051db5, label %dec_label_pc_8051e18

dec_label_pc_8051e18:                             ; preds = %dec_label_pc_8051dad, %dec_label_pc_8051e12, %dec_label_pc_8051da9
  br label %dec_label_pc_8051dc4

dec_label_pc_8051e1d:                             ; preds = %dec_label_pc_8051d68
  %v1_8051e1d = inttoptr i32 %v1_8051d52 to i8*
  %v2_8051e1d = load i8, i8* %v1_8051e1d, align 1
  %v1_8051e25 = add i32 %v0_8051d52, 2
  br label %dec_label_pc_8051d87

dec_label_pc_8051e39:                             ; preds = %dec_label_pc_8051dfa
  %v8_8051e39 = icmp eq i32 %stack_var_-20.0, 0
  %v2_8051e3e = zext i1 %v8_8051e39 to i32
  %v1_8051e433 = or i32 %v2_8051e3e, -2147483648
  ret i32 %v1_8051e433

dec_label_pc_8051e4d:                             ; preds = %dec_label_pc_8051d71
  %v1_8051e4d = inttoptr i32 %v1_8051d52 to i8*
  %v2_8051e4d = load i8, i8* %v1_8051e4d, align 1
  %v1_8051e50 = add i32 %v0_8051d52, 2
  br label %dec_label_pc_8051d7a

; uselistorder directives
  uselistorder i32 %v5_8051e12, { 1, 2, 0 }
  uselistorder i32 %v2_8051df2, { 1, 0 }
  uselistorder i8 %v2_8051dc4, { 1, 0 }
  uselistorder i32 %v2_8051dc1, { 1, 0 }
  uselistorder i32 %v1_8051dc1, { 0, 1, 3, 2 }
  uselistorder i32 %v13_8051d8b, { 1, 0 }
  uselistorder i32 %v1_8051d52, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_8051d50, { 2, 1, 0 }
  uselistorder i8 %v2_8051d50, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 %v0_8051d52, { 1, 0, 2, 3 }
  uselistorder i8 10, { 0, 1, 4, 2, 3, 5, 10, 7, 8, 11, 9, 6 }
  uselistorder i8 32, { 1, 2, 3, 6, 7, 4, 8, 9, 10, 0, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8051e18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051e0a, { 1, 0 }
  uselistorder label %dec_label_pc_8051dfa, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051df0, { 1, 0 }
  uselistorder label %dec_label_pc_8051dce, { 1, 0 }
  uselistorder label %dec_label_pc_8051da9, { 1, 0 }
  uselistorder label %dec_label_pc_8051d7a, { 1, 0 }
}

define i32 @function_8051eb0() local_unnamed_addr {
dec_label_pc_8051eb0:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 16, i32* %stack_var_-12, align 4
  %v1_8051ebd = call i32 @function_80526bd(i32 16)
  %v1_8051ec2 = inttoptr i32 %v1_8051ebd to i32*
  store i32 0, i32* %v1_8051ec2, align 4
  %v4_8051ecf = call i32 @function_8052994(i32 2, i32 2, i32 0, i32 %v1_8051ebd)
  store i32 %v4_8051ecf, i32* %esi.global-to-local, align 4
  %v10_8051edb = icmp eq i32 %v4_8051ecf, -1
  br i1 %v10_8051edb, label %dec_label_pc_8051f22, label %dec_label_pc_8051ee0

dec_label_pc_8051ee0:                             ; preds = %dec_label_pc_8051eb0
  %v2_8051ee0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8051ee0, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-28, align 4
  %v3_8051eff = call i32 @function_80527b9(i32 %v4_8051ecf, i32 %v2_8051ee0, i32 16)
  %v2_8051f07 = ptrtoint i32* %stack_var_-12 to i32
  %v0_8051f0d = load i32, i32* %esi.global-to-local, align 4
  %v3_8051f0e = call i32 @function_80527e4(i32 %v0_8051f0d, i32 %v2_8051ee0, i32 %v2_8051f07)
  %v1_8051f16 = call i32 @function_80521b3(i32 %v0_8051f0d)
  br label %dec_label_pc_8051f22

dec_label_pc_8051f22:                             ; preds = %dec_label_pc_8051eb0, %dec_label_pc_8051ee0
  %v0_8051f27 = phi i32 [ 0, %dec_label_pc_8051eb0 ], [ 134744072, %dec_label_pc_8051ee0 ]
  ret i32 %v0_8051f27

; uselistorder directives
  uselistorder i32 %v4_8051ecf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_80527b9, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8052994, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8051f22, { 1, 0 }
}

define i32 @function_8051f30() local_unnamed_addr {
dec_label_pc_8051f30:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i8* @__decompiler_undefined_function_2()
  %v4_8051f37 = ptrtoint i8* %tmp18 to i32
  %v2_8051f42 = load i8, i8* %tmp18, align 1
  %v3_8051f42 = icmp eq i8 %v2_8051f42, 0
  br i1 %v3_8051f42, label %dec_label_pc_8051f58, label %dec_label_pc_8051f48

dec_label_pc_8051f48:                             ; preds = %dec_label_pc_8051f30, %dec_label_pc_8051f48
  %v2_8051f48 = phi i32 [ %v1_8051f4b, %dec_label_pc_8051f48 ], [ 0, %dec_label_pc_8051f30 ]
  %v1_8051f4b = add i32 %v2_8051f48, 1
  %v2_8051f52 = add i32 %v1_8051f4b, %v4_8051f37
  %v3_8051f52 = inttoptr i32 %v2_8051f52 to i8*
  %v4_8051f52 = load i8, i8* %v3_8051f52, align 1
  %v5_8051f52 = icmp eq i8 %v4_8051f52, 0
  %v1_8051f56 = icmp eq i1 %v5_8051f52, false
  br i1 %v1_8051f56, label %dec_label_pc_8051f48, label %dec_label_pc_8051f58

dec_label_pc_8051f58:                             ; preds = %dec_label_pc_8051f48, %dec_label_pc_8051f30
  %v2_8051f8f = phi i32 [ 0, %dec_label_pc_8051f30 ], [ %v1_8051f4b, %dec_label_pc_8051f48 ]
  %v4_8051f5e = ptrtoint i8* %tmp to i32
  %tmp25 = icmp slt i32 %tmp17, 1
  br i1 %tmp25, label %dec_label_pc_8051f8c, label %dec_label_pc_8051f66.preheader

dec_label_pc_8051f66.preheader:                   ; preds = %dec_label_pc_8051f58
  %v4_8051f66.pre = load i32, i32* @ecx, align 4
  %v6_8051f68.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051f66

dec_label_pc_8051f66:                             ; preds = %dec_label_pc_8051f66.preheader, %dec_label_pc_8051f87
  %v0_8051f87 = phi i32 [ %tmp17, %dec_label_pc_8051f66.preheader ], [ %v1_8051f87, %dec_label_pc_8051f87 ]
  %v6_8051f68 = phi i32 [ %v6_8051f68.pre, %dec_label_pc_8051f66.preheader ], [ %v2_8051f81, %dec_label_pc_8051f87 ]
  %v0_8051f95 = phi i32 [ 0, %dec_label_pc_8051f66.preheader ], [ %v1_8051f689, %dec_label_pc_8051f87 ]
  %v4_8051f66 = phi i32 [ %v4_8051f66.pre, %dec_label_pc_8051f66.preheader ], [ %v0_8051f81, %dec_label_pc_8051f87 ]
  %v0_8051f6c = phi i32 [ %v4_8051f5e, %dec_label_pc_8051f66.preheader ], [ %v1_8051f6c, %dec_label_pc_8051f87 ]
  %v1_8051f66 = inttoptr i32 %v0_8051f6c to i8*
  %v2_8051f66 = load i8, i8* %v1_8051f66, align 1
  %v3_8051f66 = zext i8 %v2_8051f66 to i32
  %v5_8051f66 = and i32 %v4_8051f66, -256
  %v6_8051f66 = or i32 %v3_8051f66, %v5_8051f66
  store i32 %v6_8051f66, i32* @ecx, align 4
  %v2_8051f68 = add i32 %v0_8051f95, %v4_8051f37
  %v3_8051f68 = inttoptr i32 %v2_8051f68 to i8*
  %v4_8051f68 = load i8, i8* %v3_8051f68, align 1
  %v5_8051f68 = zext i8 %v4_8051f68 to i32
  %v7_8051f68 = and i32 %v6_8051f68, -256
  %v8_8051f68 = or i32 %v5_8051f68, %v7_8051f68
  %v1_8051f6c = add i32 %v0_8051f6c, 1
  %v1_8051f6d = add i8 %v2_8051f66, -65
  %v8_8051f72 = icmp ugt i8 %v1_8051f6d, 25
  br i1 %v8_8051f72, label %dec_label_pc_8051f77, label %dec_label_pc_8051f74

dec_label_pc_8051f74:                             ; preds = %dec_label_pc_8051f66
  %v1_8051f74 = or i32 %v6_8051f66, 96
  store i32 %v1_8051f74, i32* @ecx, align 4
  br label %dec_label_pc_8051f77

dec_label_pc_8051f77:                             ; preds = %dec_label_pc_8051f66, %dec_label_pc_8051f74
  %v0_8051f81 = phi i32 [ %v6_8051f66, %dec_label_pc_8051f66 ], [ %v1_8051f74, %dec_label_pc_8051f74 ]
  %v1_8051f77 = add i8 %v4_8051f68, -65
  %v8_8051f7c = icmp ugt i8 %v1_8051f77, 25
  br i1 %v8_8051f7c, label %dec_label_pc_8051f81, label %dec_label_pc_8051f7e

dec_label_pc_8051f7e:                             ; preds = %dec_label_pc_8051f77
  %v1_8051f7e = or i32 %v8_8051f68, 96
  br label %dec_label_pc_8051f81

dec_label_pc_8051f81:                             ; preds = %dec_label_pc_8051f77, %dec_label_pc_8051f7e
  %v2_8051f81 = phi i32 [ %v8_8051f68, %dec_label_pc_8051f77 ], [ %v1_8051f7e, %dec_label_pc_8051f7e ]
  %v1_8051f81 = trunc i32 %v0_8051f81 to i8
  %v3_8051f81 = trunc i32 %v2_8051f81 to i8
  %v15_8051f81 = icmp eq i8 %v1_8051f81, %v3_8051f81
  br i1 %v15_8051f81, label %dec_label_pc_8051f95, label %dec_label_pc_8051f85

dec_label_pc_8051f85:                             ; preds = %dec_label_pc_8051f81
  br label %dec_label_pc_8051f87

dec_label_pc_8051f87:                             ; preds = %dec_label_pc_8051f95, %dec_label_pc_8051f85
  %v1_8051f689 = phi i32 [ %v1_8051f95, %dec_label_pc_8051f95 ], [ 0, %dec_label_pc_8051f85 ]
  %v1_8051f87 = add i32 %v0_8051f87, -1
  %tmp26 = icmp slt i32 %v1_8051f87, 1
  %tmp27 = icmp eq i1 %tmp26, false
  br i1 %tmp27, label %dec_label_pc_8051f66, label %dec_label_pc_8051f8c

dec_label_pc_8051f8c:                             ; preds = %dec_label_pc_8051f87, %dec_label_pc_8051f58
  ret i32 -1

dec_label_pc_8051f95:                             ; preds = %dec_label_pc_8051f81
  %v1_8051f95 = add i32 %v0_8051f95, 1
  %v14_8051f96 = icmp eq i32 %v2_8051f8f, %v1_8051f95
  %v1_8051f99 = icmp eq i1 %v14_8051f96, false
  br i1 %v1_8051f99, label %dec_label_pc_8051f87, label %dec_label_pc_8051f9b

dec_label_pc_8051f9b:                             ; preds = %dec_label_pc_8051f95
  store i32 %v4_8051f5e, i32* @ecx, align 4
  %v2_8051fa1 = sub i32 %v1_8051f6c, %v4_8051f5e
  ret i32 %v2_8051fa1

; uselistorder directives
  uselistorder i32 %v1_8051f87, { 1, 0 }
  uselistorder i32 %v0_8051f95, { 1, 0 }
  uselistorder i32 %v4_8051f5e, { 2, 1, 0 }
  uselistorder i8* %tmp18, { 1, 0 }
  uselistorder i8 25, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8051f81, { 1, 0 }
  uselistorder label %dec_label_pc_8051f77, { 1, 0 }
  uselistorder label %dec_label_pc_8051f66, { 1, 0 }
  uselistorder label %dec_label_pc_8051f48, { 1, 0 }
}

define i32 @function_8051fb0() local_unnamed_addr {
dec_label_pc_8051fb0:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %v4_8051fb2 = ptrtoint i8* %tmp13 to i32
  %v4_8051fb8 = ptrtoint i8* %tmp to i32
  %v2_8051fbc = load i8, i8* %tmp13, align 1
  %v3_8051fbc = icmp eq i8 %v2_8051fbc, 0
  br i1 %v3_8051fbc, label %dec_label_pc_8051fc8, label %dec_label_pc_8051fc1

dec_label_pc_8051fc1:                             ; preds = %dec_label_pc_8051fb0, %dec_label_pc_8051fc1
  %v0_8051fc1 = phi i32 [ %v1_8051fc1, %dec_label_pc_8051fc1 ], [ 0, %dec_label_pc_8051fb0 ]
  %v1_8051fc1 = add i32 %v0_8051fc1, 1
  %v2_8051fc2 = add i32 %v1_8051fc1, %v4_8051fb2
  %v3_8051fc2 = inttoptr i32 %v2_8051fc2 to i8*
  %v4_8051fc2 = load i8, i8* %v3_8051fc2, align 1
  %v5_8051fc2 = icmp eq i8 %v4_8051fc2, 0
  %v1_8051fc6 = icmp eq i1 %v5_8051fc2, false
  br i1 %v1_8051fc6, label %dec_label_pc_8051fc1, label %dec_label_pc_8051fc8

dec_label_pc_8051fc8:                             ; preds = %dec_label_pc_8051fc1, %dec_label_pc_8051fb0
  %v0_8051fd9 = phi i32 [ 0, %dec_label_pc_8051fb0 ], [ %v1_8051fc1, %dec_label_pc_8051fc1 ]
  %v2_8051fca = load i8, i8* %tmp, align 1
  %v3_8051fca = icmp eq i8 %v2_8051fca, 0
  br i1 %v3_8051fca, label %dec_label_pc_8051fd7, label %dec_label_pc_8051fd0

dec_label_pc_8051fd0:                             ; preds = %dec_label_pc_8051fc8, %dec_label_pc_8051fd0
  %v0_8051fd0 = phi i32 [ %v1_8051fd0, %dec_label_pc_8051fd0 ], [ 0, %dec_label_pc_8051fc8 ]
  %v1_8051fd0 = add i32 %v0_8051fd0, 1
  %v2_8051fd1 = add i32 %v1_8051fd0, %v4_8051fb8
  %v3_8051fd1 = inttoptr i32 %v2_8051fd1 to i8*
  %v4_8051fd1 = load i8, i8* %v3_8051fd1, align 1
  %v5_8051fd1 = icmp eq i8 %v4_8051fd1, 0
  %v1_8051fd5 = icmp eq i1 %v5_8051fd1, false
  br i1 %v1_8051fd5, label %dec_label_pc_8051fd0, label %dec_label_pc_8051fd7

dec_label_pc_8051fd7:                             ; preds = %dec_label_pc_8051fd0, %dec_label_pc_8051fc8
  %v0_8051fd7 = phi i32 [ 0, %dec_label_pc_8051fc8 ], [ %v1_8051fd0, %dec_label_pc_8051fd0 ]
  %v12_8051fd9 = icmp eq i32 %v0_8051fd9, %v0_8051fd7
  br i1 %v12_8051fd9, label %dec_label_pc_8051fe4.preheader, label %dec_label_pc_8051fdd

dec_label_pc_8051fe4.preheader:                   ; preds = %dec_label_pc_8051fd7
  %v10_8051fe518 = icmp eq i32 %v0_8051fd9, 0
  br i1 %v10_8051fe518, label %dec_label_pc_8051ff2, label %dec_label_pc_8051fea

dec_label_pc_8051fdd:                             ; preds = %dec_label_pc_8051fea, %dec_label_pc_8051fd7
  ret i32 0

dec_label_pc_8051fe2:                             ; preds = %dec_label_pc_8051fea
  %v3_8051fea = zext i8 %v2_8051fea to i32
  %v5_8051fea = and i32 %v4_8051fea20, -256
  %v6_8051fea = or i32 %v3_8051fea, %v5_8051fea
  %v1_8051fe2 = add i32 %v0_8051fe221, 1
  %v1_8051fe3 = add i32 %v0_8051fe319, 1
  %v10_8051fe5 = icmp eq i32 %v1_8051fe422, 0
  br i1 %v10_8051fe5, label %dec_label_pc_8051ff2, label %dec_label_pc_8051fea

dec_label_pc_8051fea:                             ; preds = %dec_label_pc_8051fe4.preheader, %dec_label_pc_8051fe2
  %v1_8051fe422.in = phi i32 [ %v1_8051fe422, %dec_label_pc_8051fe2 ], [ %v0_8051fd9, %dec_label_pc_8051fe4.preheader ]
  %v4_8051fea20 = phi i32 [ %v6_8051fea, %dec_label_pc_8051fe2 ], [ %v0_8051fd9, %dec_label_pc_8051fe4.preheader ]
  %v0_8051fe221 = phi i32 [ %v1_8051fe2, %dec_label_pc_8051fe2 ], [ %v4_8051fb2, %dec_label_pc_8051fe4.preheader ]
  %v0_8051fe319 = phi i32 [ %v1_8051fe3, %dec_label_pc_8051fe2 ], [ %v4_8051fb8, %dec_label_pc_8051fe4.preheader ]
  %v1_8051fe422 = add i32 %v1_8051fe422.in, -1
  %v1_8051fea = inttoptr i32 %v0_8051fe221 to i8*
  %v2_8051fea = load i8, i8* %v1_8051fea, align 1
  %v3_8051fec = inttoptr i32 %v0_8051fe319 to i8*
  %v4_8051fec = load i8, i8* %v3_8051fec, align 1
  %v15_8051fec = icmp eq i8 %v2_8051fea, %v4_8051fec
  br i1 %v15_8051fec, label %dec_label_pc_8051fe2, label %dec_label_pc_8051fdd

dec_label_pc_8051ff2:                             ; preds = %dec_label_pc_8051fe2, %dec_label_pc_8051fe4.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v0_8051fd9, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8051fea, { 1, 0 }
  uselistorder label %dec_label_pc_8051fd0, { 1, 0 }
  uselistorder label %dec_label_pc_8051fc1, { 1, 0 }
}

define i32 @function_8052000() local_unnamed_addr {
dec_label_pc_8052000:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %tmp14 = call i8* @__decompiler_undefined_function_2()
  %v4_8052002 = ptrtoint i8* %tmp14 to i32
  %v4_8052008 = ptrtoint i8* %tmp13 to i32
  %v2_8052010 = load i8, i8* %tmp14, align 1
  %v3_8052010 = icmp eq i8 %v2_8052010, 0
  br i1 %v3_8052010, label %dec_label_pc_805201c, label %dec_label_pc_8052015

dec_label_pc_8052015:                             ; preds = %dec_label_pc_8052000, %dec_label_pc_8052015
  %v0_8052015 = phi i32 [ %v1_8052015, %dec_label_pc_8052015 ], [ 0, %dec_label_pc_8052000 ]
  %v1_8052015 = add i32 %v0_8052015, 1
  %v2_8052016 = add i32 %v1_8052015, %v4_8052002
  %v3_8052016 = inttoptr i32 %v2_8052016 to i8*
  %v4_8052016 = load i8, i8* %v3_8052016, align 1
  %v5_8052016 = icmp eq i8 %v4_8052016, 0
  %v1_805201a = icmp eq i1 %v5_8052016, false
  br i1 %v1_805201a, label %dec_label_pc_8052015, label %dec_label_pc_805201c

dec_label_pc_805201c:                             ; preds = %dec_label_pc_8052015, %dec_label_pc_8052000
  %v1_805202a = phi i32 [ 0, %dec_label_pc_8052000 ], [ %v1_8052015, %dec_label_pc_8052015 ]
  %v2_805201e = load i8, i8* %tmp13, align 1
  %v3_805201e = icmp eq i8 %v2_805201e, 0
  br i1 %v3_805201e, label %dec_label_pc_805202a, label %dec_label_pc_8052023

dec_label_pc_8052023:                             ; preds = %dec_label_pc_805201c, %dec_label_pc_8052023
  %v0_8052023 = phi i32 [ %v1_8052023, %dec_label_pc_8052023 ], [ 0, %dec_label_pc_805201c ]
  %v1_8052023 = add i32 %v0_8052023, 1
  %v2_8052024 = add i32 %v1_8052023, %v4_8052008
  %v3_8052024 = inttoptr i32 %v2_8052024 to i8*
  %v4_8052024 = load i8, i8* %v3_8052024, align 1
  %v5_8052024 = icmp eq i8 %v4_8052024, 0
  %v1_8052028 = icmp eq i1 %v5_8052024, false
  br i1 %v1_8052028, label %dec_label_pc_8052023, label %dec_label_pc_805202a

dec_label_pc_805202a:                             ; preds = %dec_label_pc_8052023, %dec_label_pc_805201c
  %v1_805202e = phi i32 [ 0, %dec_label_pc_805201c ], [ %v1_8052023, %dec_label_pc_8052023 ]
  %v8_805202c = icmp sgt i32 %tmp, %v1_805202a
  br i1 %v8_805202c, label %dec_label_pc_8052032, label %dec_label_pc_805202e

dec_label_pc_805202e:                             ; preds = %dec_label_pc_805202a
  %v7_8052030 = icmp sgt i32 %tmp, %v1_805202e
  br i1 %v7_8052030, label %dec_label_pc_8052032, label %dec_label_pc_8052039.preheader

dec_label_pc_8052039.preheader:                   ; preds = %dec_label_pc_805202e
  %v10_805203a19 = icmp eq i32 %tmp, 0
  br i1 %v10_805203a19, label %dec_label_pc_8052034, label %dec_label_pc_805203f

dec_label_pc_8052032:                             ; preds = %dec_label_pc_805203f, %dec_label_pc_805202e, %dec_label_pc_805202a
  br label %dec_label_pc_8052034

dec_label_pc_8052034:                             ; preds = %dec_label_pc_8052039.preheader, %dec_label_pc_8052037, %dec_label_pc_8052032
  %storemerge = phi i32 [ 0, %dec_label_pc_8052032 ], [ 1, %dec_label_pc_8052037 ], [ 1, %dec_label_pc_8052039.preheader ]
  ret i32 %storemerge

dec_label_pc_8052037:                             ; preds = %dec_label_pc_805203f
  %v3_805203f = zext i8 %v2_805203f to i32
  %v5_805203f = and i32 %v4_805203f21, -256
  %v6_805203f = or i32 %v3_805203f, %v5_805203f
  %v1_8052037 = add i32 %v0_805203722, 1
  %v1_8052038 = add i32 %v0_805203820, 1
  %v10_805203a = icmp eq i32 %v1_805203923, 0
  br i1 %v10_805203a, label %dec_label_pc_8052034, label %dec_label_pc_805203f

dec_label_pc_805203f:                             ; preds = %dec_label_pc_8052039.preheader, %dec_label_pc_8052037
  %v1_805203923.in = phi i32 [ %v1_805203923, %dec_label_pc_8052037 ], [ %tmp, %dec_label_pc_8052039.preheader ]
  %v0_805203722 = phi i32 [ %v1_8052037, %dec_label_pc_8052037 ], [ %v4_8052002, %dec_label_pc_8052039.preheader ]
  %v4_805203f21 = phi i32 [ %v6_805203f, %dec_label_pc_8052037 ], [ %v1_805202e, %dec_label_pc_8052039.preheader ]
  %v0_805203820 = phi i32 [ %v1_8052038, %dec_label_pc_8052037 ], [ %v4_8052008, %dec_label_pc_8052039.preheader ]
  %v1_805203923 = add i32 %v1_805203923.in, -1
  %v1_805203f = inttoptr i32 %v0_805203722 to i8*
  %v2_805203f = load i8, i8* %v1_805203f, align 1
  %v3_8052041 = inttoptr i32 %v0_805203820 to i8*
  %v4_8052041 = load i8, i8* %v3_8052041, align 1
  %v15_8052041 = icmp eq i8 %v2_805203f, %v4_8052041
  br i1 %v15_8052041, label %dec_label_pc_8052037, label %dec_label_pc_8052032

; uselistorder directives
  uselistorder label %dec_label_pc_805203f, { 1, 0 }
  uselistorder label %dec_label_pc_8052034, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052023, { 1, 0 }
  uselistorder label %dec_label_pc_8052015, { 1, 0 }
}

define i32 @function_8052050() local_unnamed_addr {
dec_label_pc_8052050:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp20 = call i64 @__decompiler_undefined_function_5()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v12_8052054 = ptrtoint i32* %stack_var_-64 to i32
  %v4_8052057 = inttoptr i32 %tmp22 to i8*
  store i32 %tmp21, i32* %eax.global-to-local, align 4
  %v4_805205f = trunc i64 %tmp20 to i32
  store i32 %v4_805205f, i32* %esi.global-to-local, align 4
  %v2_8052063 = icmp eq i32 %tmp22, 0
  br i1 %v2_8052063, label %dec_label_pc_80520d0, label %dec_label_pc_8052067

dec_label_pc_8052067:                             ; preds = %dec_label_pc_8052050
  %v1_8052067 = icmp eq i32 %tmp21, 0
  %v2_8052067 = icmp slt i32 %tmp21, 0
  br i1 %v1_8052067, label %dec_label_pc_80520e0, label %dec_label_pc_805206b

dec_label_pc_805206b:                             ; preds = %dec_label_pc_8052067
  %v9_8052070 = icmp eq i32 %v4_805205f, 10
  br i1 %v9_8052070, label %dec_label_pc_80520fd, label %dec_label_pc_8052079

dec_label_pc_8052079:                             ; preds = %dec_label_pc_80520fd, %dec_label_pc_805206b
  br label %dec_label_pc_805207d

dec_label_pc_805207d:                             ; preds = %dec_label_pc_8052105, %dec_label_pc_8052079
  %storemerge32 = phi i32 [ %tmp21, %dec_label_pc_8052079 ], [ %v1_8052107, %dec_label_pc_8052105 ]
  %v0_80520843 = phi i32 [ %tmp21, %dec_label_pc_8052079 ], [ %v1_8052107, %dec_label_pc_8052105 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_8052079 ], [ 1, %dec_label_pc_8052105 ]
  store i32 %storemerge32, i32* %ecx.global-to-local, align 4
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  store i32 32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052082

dec_label_pc_8052082:                             ; preds = %dec_label_pc_8052082.dec_label_pc_8052082_crit_edge, %dec_label_pc_805207d
  %v2_8052093 = phi i32 [ %v2_8052093.pre, %dec_label_pc_8052082.dec_label_pc_8052082_crit_edge ], [ %v12_8052054, %dec_label_pc_805207d ]
  %v3_8052093 = phi i32 [ %v1_805209b, %dec_label_pc_8052082.dec_label_pc_8052082_crit_edge ], [ 32, %dec_label_pc_805207d ]
  %v0_8052086 = phi i32 [ %v0_805209c, %dec_label_pc_8052082.dec_label_pc_8052082_crit_edge ], [ %v4_805205f, %dec_label_pc_805207d ]
  %v0_8052084 = phi i32 [ %div18, %dec_label_pc_8052082.dec_label_pc_8052082_crit_edge ], [ %v0_80520843, %dec_label_pc_805207d ]
  %tmp29 = urem i32 %v0_8052084, %v0_8052086
  %v7_805208e = icmp sgt i32 %tmp29, 9
  %v1_8052090.v1_805208b.v = select i1 %v7_805208e, i32 55, i32 48
  %v1_8052090.v1_805208b = add i32 %v1_8052090.v1_805208b.v, %tmp29
  %v1_8052093 = trunc i32 %v1_8052090.v1_805208b to i8
  %v4_8052093 = add i32 %v3_8052093, 14
  %v5_8052093 = add i32 %v4_8052093, %v2_8052093
  %v6_8052093 = inttoptr i32 %v5_8052093 to i8*
  store i8 %v1_8052093, i8* %v6_8052093, align 1
  %v0_8052099 = load i32, i32* %ecx.global-to-local, align 4
  %v0_805209b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805209b = add i32 %v0_805209b, -1
  store i32 %v1_805209b, i32* %ebx.global-to-local, align 4
  %v0_805209c = load i32, i32* %esi.global-to-local, align 4
  %div18 = udiv i32 %v0_8052099, %v0_805209c
  store i32 %div18, i32* %eax.global-to-local, align 4
  %tmp30 = urem i32 %v0_8052099, %v0_805209c
  store i32 %tmp30, i32* %edx.global-to-local, align 4
  store i32 %div18, i32* %ecx.global-to-local, align 4
  %v2_80520a0 = icmp ugt i32 %v0_805209c, %v0_8052099
  %v1_80520a2 = icmp eq i1 %v2_80520a0, false
  br i1 %v1_80520a2, label %dec_label_pc_8052082.dec_label_pc_8052082_crit_edge, label %dec_label_pc_80520a4

dec_label_pc_8052082.dec_label_pc_8052082_crit_edge: ; preds = %dec_label_pc_8052082
  %v2_8052093.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052082

dec_label_pc_80520a4:                             ; preds = %dec_label_pc_8052082
  %v0_80520a4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80520a4 = icmp eq i32 %v0_80520a4, 0
  %v1_80520a6 = icmp eq i1 %v1_80520a4, false
  br i1 %v1_80520a6, label %dec_label_pc_80520f6, label %dec_label_pc_80520a8

dec_label_pc_80520a8:                             ; preds = %dec_label_pc_80520a4
  store i32 %v0_805209b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520a9

dec_label_pc_80520a9:                             ; preds = %dec_label_pc_80520f6, %dec_label_pc_80520a8
  %v1_80520a9 = phi i32 [ %v1_80520a9.pre, %dec_label_pc_80520f6 ], [ %v0_805209b, %dec_label_pc_80520a8 ]
  %v0_80520a9 = load i32, i32* @esp, align 4
  %v2_80520a9 = add i32 %v1_80520a9, 14
  %v3_80520a9 = add i32 %v2_80520a9, %v0_80520a9
  store i32 %v3_80520a9, i32* %eax.global-to-local, align 4
  %v1_80520ad = inttoptr i32 %v3_80520a9 to i8*
  %v2_80520ad = load i8, i8* %v1_80520ad, align 1
  %v3_80520ad = icmp eq i8 %v2_80520ad, 0
  br i1 %v3_80520ad, label %dec_label_pc_8052115, label %dec_label_pc_80520b2

dec_label_pc_80520b2:                             ; preds = %dec_label_pc_80520a9
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80520b4

dec_label_pc_80520b4:                             ; preds = %dec_label_pc_80520b4, %dec_label_pc_80520b2
  %v0_80520b4 = phi i32 [ %v1_80520b4, %dec_label_pc_80520b4 ], [ 0, %dec_label_pc_80520b2 ]
  %v1_80520b4 = add i32 %v0_80520b4, 1
  store i32 %v1_80520b4, i32* %ecx.global-to-local, align 4
  %v2_80520b5 = add i32 %v1_80520b4, %v3_80520a9
  %v3_80520b5 = inttoptr i32 %v2_80520b5 to i8*
  %v4_80520b5 = load i8, i8* %v3_80520b5, align 1
  %v5_80520b5 = icmp eq i8 %v4_80520b5, 0
  %v1_80520b9 = icmp eq i1 %v5_80520b5, false
  br i1 %v1_80520b9, label %dec_label_pc_80520b4, label %dec_label_pc_80520bb

dec_label_pc_80520bb:                             ; preds = %dec_label_pc_80520b4
  %v10_80520bb = icmp eq i32 %v0_80520b4, -2
  br i1 %v10_80520bb, label %dec_label_pc_80520d0, label %dec_label_pc_80520c0

dec_label_pc_80520c0:                             ; preds = %dec_label_pc_80520bb
  store i32 %tmp22, i32* %ebx.global-to-local, align 4
  store i32 %v3_80520a9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80520c4

dec_label_pc_80520c4:                             ; preds = %dec_label_pc_8052115, %dec_label_pc_80520c0, %dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge
  %v2_80520c7 = phi i32 [ %v1_80520ca, %dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge ], [ %tmp22, %dec_label_pc_80520c0 ], [ %tmp22, %dec_label_pc_8052115 ]
  %v0_80520c6 = phi i32 [ %v0_80520cb, %dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge ], [ %v1_80520b4, %dec_label_pc_80520c0 ], [ 0, %dec_label_pc_8052115 ]
  %v4_80520c4 = phi i32 [ %v4_80520c4.pre, %dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge ], [ %v3_80520a9, %dec_label_pc_80520c0 ], [ %v3_80520a9, %dec_label_pc_8052115 ]
  %v0_80520c4 = phi i32 [ %v1_80520c9, %dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge ], [ %v3_80520a9, %dec_label_pc_80520c0 ], [ %v3_80520a9, %dec_label_pc_8052115 ]
  %v1_80520c4 = inttoptr i32 %v0_80520c4 to i8*
  %v2_80520c4 = load i8, i8* %v1_80520c4, align 1
  %v3_80520c4 = zext i8 %v2_80520c4 to i32
  %v5_80520c4 = and i32 %v4_80520c4, -256
  %v6_80520c4 = or i32 %v3_80520c4, %v5_80520c4
  store i32 %v6_80520c4, i32* %eax.global-to-local, align 4
  %v1_80520c6 = add i32 %v0_80520c6, -1
  store i32 %v1_80520c6, i32* %ecx.global-to-local, align 4
  %v3_80520c7 = inttoptr i32 %v2_80520c7 to i8*
  store i8 %v2_80520c4, i8* %v3_80520c7, align 1
  %v0_80520c9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80520c9 = add i32 %v0_80520c9, 1
  store i32 %v1_80520c9, i32* %edx.global-to-local, align 4
  %v0_80520ca = load i32, i32* %ebx.global-to-local, align 4
  %v1_80520ca = add i32 %v0_80520ca, 1
  store i32 %v1_80520ca, i32* %ebx.global-to-local, align 4
  %v0_80520cb = load i32, i32* %ecx.global-to-local, align 4
  %v10_80520cb = icmp eq i32 %v0_80520cb, -1
  %v1_80520ce = icmp eq i1 %v10_80520cb, false
  br i1 %v1_80520ce, label %dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge, label %dec_label_pc_80520d0.loopexit

dec_label_pc_80520c4.dec_label_pc_80520c4_crit_edge: ; preds = %dec_label_pc_80520c4
  %v4_80520c4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80520c4

dec_label_pc_80520d0.loopexit:                    ; preds = %dec_label_pc_80520c4
  br label %dec_label_pc_80520d0

dec_label_pc_80520d0:                             ; preds = %dec_label_pc_80520d0.loopexit, %dec_label_pc_80520bb, %dec_label_pc_8052050
  store i32 %tmp22, i32* %eax.global-to-local, align 4
  ret i32 %tmp22

dec_label_pc_80520e0:                             ; preds = %dec_label_pc_8052067
  store i8 48, i8* %v4_8052057, align 1
  %v2_80520e3 = add i32 %tmp22, 1
  %v3_80520e3 = inttoptr i32 %v2_80520e3 to i8*
  store i8 0, i8* %v3_80520e3, align 1
  store i32 %tmp22, i32* %eax.global-to-local, align 4
  ret i32 %tmp22

dec_label_pc_80520f6:                             ; preds = %dec_label_pc_80520a4
  %v0_80520f6 = load i32, i32* @esp, align 4
  %v2_80520f6 = add i32 %v0_805209b, 13
  %v3_80520f6 = add i32 %v2_80520f6, %v0_80520f6
  %v4_80520f6 = inttoptr i32 %v3_80520f6 to i8*
  store i8 45, i8* %v4_80520f6, align 1
  %v1_80520a9.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520a9

dec_label_pc_80520fd:                             ; preds = %dec_label_pc_805206b
  %v1_80520ff = icmp eq i1 %v2_8052067, false
  br i1 %v1_80520ff, label %dec_label_pc_8052079, label %dec_label_pc_8052105

dec_label_pc_8052105:                             ; preds = %dec_label_pc_80520fd
  %v1_8052107 = sub i32 0, %tmp21
  br label %dec_label_pc_805207d

dec_label_pc_8052115:                             ; preds = %dec_label_pc_80520a9
  store i32 %tmp22, i32* %ebx.global-to-local, align 4
  store i32 %v3_80520a9, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80520c4

; uselistorder directives
  uselistorder i32 %v1_80520ca, { 1, 0 }
  uselistorder i32 %v1_80520c9, { 1, 0 }
  uselistorder i32 %v1_80520b4, { 0, 1, 3, 2 }
  uselistorder i32 %v3_80520a9, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder i32 %div18, { 1, 2, 0 }
  uselistorder i32 %v1_805209b, { 1, 0 }
  uselistorder i32 %v4_805205f, { 1, 0, 2 }
  uselistorder i32 %tmp22, { 5, 2, 3, 4, 6, 7, 0, 1, 8, 9, 10 }
  uselistorder i32 %tmp21, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i8 45, { 2, 0, 1 }
  uselistorder i8 48, { 1, 0 }
  uselistorder label %dec_label_pc_80520c4, { 0, 2, 1 }
}

define i32 @function_805211d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805211d:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805211d = load i32, i32* @edi, align 4
  %v0_805211e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8052132 = add i32 %arg2, -12
  %v6_805213c = icmp ugt i32 %v1_8052132, 2
  br i1 %v6_805213c, label %dec_label_pc_805214c, label %dec_label_pc_805213e

dec_label_pc_805213e:                             ; preds = %dec_label_pc_805211d
  %v4_8052142 = call i32 @function_8052174(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8052132)
  br label %dec_label_pc_805216e

dec_label_pc_805214c:                             ; preds = %dec_label_pc_805211d
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052154 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8052154, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_8052154, -4095
  br i1 %tmp17, label %dec_label_pc_805216c, label %dec_label_pc_8052160

dec_label_pc_8052160:                             ; preds = %dec_label_pc_805214c
  %v1_8052160 = call i32 @function_80526bd(i32 %v0_805211e)
  %v0_8052165 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052165 = sub i32 0, %v0_8052165
  %v2_8052167 = inttoptr i32 %v1_8052160 to i32*
  store i32 %v1_8052165, i32* %v2_8052167, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805216c

dec_label_pc_805216c:                             ; preds = %dec_label_pc_805214c, %dec_label_pc_8052160
  %v0_805216c = phi i32 [ %v2_8052154, %dec_label_pc_805214c ], [ -1, %dec_label_pc_8052160 ]
  br label %dec_label_pc_805216e

dec_label_pc_805216e:                             ; preds = %dec_label_pc_805213e, %dec_label_pc_805216c
  %v0_8052173 = phi i32 [ %v4_8052142, %dec_label_pc_805213e ], [ %v0_805216c, %dec_label_pc_805216c ]
  store i32 %v0_805211e, i32* @ebx, align 4
  store i32 %v0_805211d, i32* @edi, align 4
  ret i32 %v0_8052173

; uselistorder directives
  uselistorder i32 %v2_8052154, { 1, 0, 2 }
  uselistorder i32 %v0_805211e, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805216e, { 1, 0 }
  uselistorder label %dec_label_pc_805216c, { 1, 0 }
}

define i32 @function_8052174(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052174:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052174 = load i32, i32* @edi, align 4
  store i32 %v0_8052174, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805218c = load i32, i32* @ebx, align 4
  %v1_8052194 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8052194, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8052194, -4095
  br i1 %tmp12, label %dec_label_pc_80521ac, label %dec_label_pc_80521a0

dec_label_pc_80521a0:                             ; preds = %dec_label_pc_8052174
  %v1_80521a0 = call i32 @function_80526bd(i32 %v0_805218c)
  %v0_80521a5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80521a5 = sub i32 0, %v0_80521a5
  %v2_80521a7 = inttoptr i32 %v1_80521a0 to i32*
  store i32 %v1_80521a5, i32* %v2_80521a7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80521b1.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80521ac

dec_label_pc_80521ac:                             ; preds = %dec_label_pc_8052174, %dec_label_pc_80521a0
  %v2_80521b1 = phi i32 [ %v0_8052174, %dec_label_pc_8052174 ], [ %v2_80521b1.pre, %dec_label_pc_80521a0 ]
  %v0_80521ac = phi i32 [ %v1_8052194, %dec_label_pc_8052174 ], [ -1, %dec_label_pc_80521a0 ]
  store i32 %v2_80521b1, i32* %edi.global-to-local, align 4
  ret i32 %v0_80521ac

; uselistorder directives
  uselistorder i32 %v1_8052194, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80521ac, { 1, 0 }
}

define i32 @function_80521b3(i32 %arg1) local_unnamed_addr {
dec_label_pc_80521b3:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80521b3 = load i32, i32* @edi, align 4
  store i32 %v0_80521b3, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80521bb = load i32, i32* @ebx, align 4
  %v1_80521c3 = call i32 @close(i32 %arg1)
  store i32 %v0_80521bb, i32* @ebx, align 4
  store i32 %v1_80521c3, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_80521c3, -4095
  br i1 %tmp9, label %dec_label_pc_80521db, label %dec_label_pc_80521cf

dec_label_pc_80521cf:                             ; preds = %dec_label_pc_80521b3
  %v1_80521cf = call i32 @function_80526bd(i32 %v0_80521bb)
  %v0_80521d4 = load i32, i32* %edi.global-to-local, align 4
  %v1_80521d4 = sub i32 0, %v0_80521d4
  %v2_80521d6 = inttoptr i32 %v1_80521cf to i32*
  store i32 %v1_80521d4, i32* %v2_80521d6, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80521df.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80521db

dec_label_pc_80521db:                             ; preds = %dec_label_pc_80521b3, %dec_label_pc_80521cf
  %v2_80521df = phi i32 [ %v0_80521b3, %dec_label_pc_80521b3 ], [ %v2_80521df.pre, %dec_label_pc_80521cf ]
  %v0_80521db = phi i32 [ %v1_80521c3, %dec_label_pc_80521b3 ], [ -1, %dec_label_pc_80521cf ]
  store i32 %v2_80521df, i32* @edi, align 4
  ret i32 %v0_80521db

; uselistorder directives
  uselistorder i32 %v1_80521c3, { 1, 0, 2 }
  uselistorder i32 %v0_80521bb, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80521db, { 1, 0 }
}

define i32 @function_80521e1() local_unnamed_addr {
dec_label_pc_80521e1:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80521e1 = load i32, i32* @ebx, align 4
  store i32 %v0_80521e1, i32* %stack_var_-4, align 4
  %v1_80521ea = call i32 @fork(i32 %v0_80521e1)
  store i32 %v1_80521ea, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80521ea, -4095
  br i1 %tmp7, label %dec_label_pc_8052201, label %dec_label_pc_80521f5

dec_label_pc_80521f5:                             ; preds = %dec_label_pc_80521e1
  %v1_80521f5 = call i32 @function_80526bd(i32 %v0_80521e1)
  %v0_80521fa = load i32, i32* %ebx.global-to-local, align 4
  %v1_80521fa = sub i32 0, %v0_80521fa
  %v2_80521fc = inttoptr i32 %v1_80521f5 to i32*
  store i32 %v1_80521fa, i32* %v2_80521fc, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052205.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052201

dec_label_pc_8052201:                             ; preds = %dec_label_pc_80521e1, %dec_label_pc_80521f5
  %v2_8052205 = phi i32 [ %v0_80521e1, %dec_label_pc_80521e1 ], [ %v2_8052205.pre, %dec_label_pc_80521f5 ]
  %v0_8052201 = phi i32 [ %v1_80521ea, %dec_label_pc_80521e1 ], [ -1, %dec_label_pc_80521f5 ]
  store i32 %v2_8052205, i32* @ebx, align 4
  ret i32 %v0_8052201

; uselistorder directives
  uselistorder i32 %v1_80521ea, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052201, { 1, 0 }
}

define i32 @function_8052207() local_unnamed_addr {
dec_label_pc_8052207:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052207 = load i32, i32* @ebx, align 4
  store i32 %v0_8052207, i32* %stack_var_-4, align 4
  %v1_8052210 = call i32 @getpid(i32 %v0_8052207)
  store i32 %v1_8052210, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052210, -4095
  br i1 %tmp7, label %dec_label_pc_8052227, label %dec_label_pc_805221b

dec_label_pc_805221b:                             ; preds = %dec_label_pc_8052207
  %v1_805221b = call i32 @function_80526bd(i32 %v0_8052207)
  %v0_8052220 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052220 = sub i32 0, %v0_8052220
  %v2_8052222 = inttoptr i32 %v1_805221b to i32*
  store i32 %v1_8052220, i32* %v2_8052222, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805222b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052227

dec_label_pc_8052227:                             ; preds = %dec_label_pc_8052207, %dec_label_pc_805221b
  %v2_805222b = phi i32 [ %v0_8052207, %dec_label_pc_8052207 ], [ %v2_805222b.pre, %dec_label_pc_805221b ]
  %v0_8052227 = phi i32 [ %v1_8052210, %dec_label_pc_8052207 ], [ -1, %dec_label_pc_805221b ]
  %v2_8052229 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052229, i32* @edx, align 4
  store i32 %v2_805222b, i32* @ebx, align 4
  ret i32 %v0_8052227

; uselistorder directives
  uselistorder i32 %v1_8052210, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052227, { 1, 0 }
}

define i32 @function_805222d() local_unnamed_addr {
dec_label_pc_805222d:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805222d = load i32, i32* @ebx, align 4
  store i32 %v0_805222d, i32* %stack_var_-4, align 4
  %v1_8052236 = call i32 @getppid(i32 %v0_805222d)
  store i32 %v1_8052236, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052236, -4095
  br i1 %tmp7, label %dec_label_pc_805224d, label %dec_label_pc_8052241

dec_label_pc_8052241:                             ; preds = %dec_label_pc_805222d
  %v1_8052241 = call i32 @function_80526bd(i32 %v0_805222d)
  %v0_8052246 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052246 = sub i32 0, %v0_8052246
  %v2_8052248 = inttoptr i32 %v1_8052241 to i32*
  store i32 %v1_8052246, i32* %v2_8052248, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052251.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805224d

dec_label_pc_805224d:                             ; preds = %dec_label_pc_805222d, %dec_label_pc_8052241
  %v2_8052251 = phi i32 [ %v0_805222d, %dec_label_pc_805222d ], [ %v2_8052251.pre, %dec_label_pc_8052241 ]
  %v0_805224d = phi i32 [ %v1_8052236, %dec_label_pc_805222d ], [ -1, %dec_label_pc_8052241 ]
  store i32 %v2_8052251, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805224d

; uselistorder directives
  uselistorder i32 %v1_8052236, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805224d, { 1, 0 }
}

define i32 @function_8052253(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052253:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052253 = load i32, i32* @edi, align 4
  store i32 %v0_8052253, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805226b = load i32, i32* @ebx, align 4
  %v2_8052273 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_8052273, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v2_8052273, -4095
  br i1 %tmp12, label %dec_label_pc_805228b, label %dec_label_pc_805227f

dec_label_pc_805227f:                             ; preds = %dec_label_pc_8052253
  %v1_805227f = call i32 @function_80526bd(i32 %v0_805226b)
  %v0_8052284 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052284 = sub i32 0, %v0_8052284
  %v2_8052286 = inttoptr i32 %v1_805227f to i32*
  store i32 %v1_8052284, i32* %v2_8052286, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052290.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805228b

dec_label_pc_805228b:                             ; preds = %dec_label_pc_8052253, %dec_label_pc_805227f
  %v2_8052290 = phi i32 [ %v0_8052253, %dec_label_pc_8052253 ], [ %v2_8052290.pre, %dec_label_pc_805227f ]
  %v0_805228b = phi i32 [ %v2_8052273, %dec_label_pc_8052253 ], [ -1, %dec_label_pc_805227f ]
  store i32 %v2_8052290, i32* %edi.global-to-local, align 4
  ret i32 %v0_805228b

; uselistorder directives
  uselistorder i32 %v2_8052273, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805228b, { 1, 0 }
}

define i32 @function_8052292(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052292:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052292 = load i32, i32* @ebx, align 4
  store i32 %v0_8052292, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80522a5 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_80522a5, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_80522a5, -4095
  br i1 %tmp9, label %dec_label_pc_80522be, label %dec_label_pc_80522b2

dec_label_pc_80522b2:                             ; preds = %dec_label_pc_8052292
  %v1_80522b2 = call i32 @function_80526bd(i32 %v0_8052292)
  %v0_80522b7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80522b7 = sub i32 0, %v0_80522b7
  %v2_80522b9 = inttoptr i32 %v1_80522b2 to i32*
  store i32 %v1_80522b7, i32* %v2_80522b9, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80522c2.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80522be

dec_label_pc_80522be:                             ; preds = %dec_label_pc_8052292, %dec_label_pc_80522b2
  %v2_80522c2 = phi i32 [ %v0_8052292, %dec_label_pc_8052292 ], [ %v2_80522c2.pre, %dec_label_pc_80522b2 ]
  %v0_80522be = phi i32 [ %v2_80522a5, %dec_label_pc_8052292 ], [ -1, %dec_label_pc_80522b2 ]
  %v2_80522c0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80522c0, i32* @edx, align 4
  store i32 %v2_80522c2, i32* @ebx, align 4
  ret i32 %v0_80522be

; uselistorder directives
  uselistorder i32 %v2_80522a5, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80522be, { 1, 0 }
}

define i32 @function_80522c4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80522c4:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80522c5 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_80522cb = sdiv i32 %sext, 16777216
  %v4_80522cf = ptrtoint i8* %arg1 to i32
  %v3_80522d3 = and i32 %arg2, 64
  %v4_80522d3 = icmp eq i32 %v3_80522d3, 0
  br i1 %v4_80522d3, label %dec_label_pc_80522e4, label %dec_label_pc_80522d8

dec_label_pc_80522d8:                             ; preds = %dec_label_pc_80522c4
  br label %dec_label_pc_80522e4

dec_label_pc_80522e4:                             ; preds = %dec_label_pc_80522c4, %dec_label_pc_80522d8
  store i32 %v4_80522cf, i32* %ebx.global-to-local, align 4
  %v5_80522ef = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_80522cb)
  store i32 %v5_80522ef, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_80522ef, -4095
  br i1 %tmp15, label %dec_label_pc_8052307, label %dec_label_pc_80522fb

dec_label_pc_80522fb:                             ; preds = %dec_label_pc_80522e4
  %v1_80522fb = call i32 @function_80526bd(i32 %v0_80522c5)
  %v0_8052300 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052300 = sub i32 0, %v0_8052300
  %v2_8052302 = inttoptr i32 %v1_80522fb to i32*
  store i32 %v1_8052300, i32* %v2_8052302, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052307

dec_label_pc_8052307:                             ; preds = %dec_label_pc_80522e4, %dec_label_pc_80522fb
  %v0_8052307 = phi i32 [ %v5_80522ef, %dec_label_pc_80522e4 ], [ -1, %dec_label_pc_80522fb ]
  store i32 %v0_80522c5, i32* @ebx, align 4
  ret i32 %v0_8052307

; uselistorder directives
  uselistorder i32 %v5_80522ef, { 1, 0, 2 }
  uselistorder i32 %v0_80522c5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052307, { 1, 0 }
  uselistorder label %dec_label_pc_80522e4, { 1, 0 }
}

define i32 @function_805230f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_805230f:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052310 = load i32, i32* @esi, align 4
  store i32 %v0_8052310, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8052328 = load i32, i32* @ebx, align 4
  %v5_8052330 = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  store i32 %v5_8052330, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v5_8052330, -4095
  br i1 %tmp12, label %dec_label_pc_8052348, label %dec_label_pc_805233c

dec_label_pc_805233c:                             ; preds = %dec_label_pc_805230f
  %v1_805233c = call i32 @function_80526bd(i32 %v0_8052328)
  %v0_8052341 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052341 = sub i32 0, %v0_8052341
  %v2_8052343 = inttoptr i32 %v1_805233c to i32*
  store i32 %v1_8052341, i32* %v2_8052343, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_805234b.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052348

dec_label_pc_8052348:                             ; preds = %dec_label_pc_805230f, %dec_label_pc_805233c
  %v2_805234b = phi i32 [ %v0_8052310, %dec_label_pc_805230f ], [ %v2_805234b.pre, %dec_label_pc_805233c ]
  %v0_8052348 = phi i32 [ %v5_8052330, %dec_label_pc_805230f ], [ -1, %dec_label_pc_805233c ]
  store i32 %v2_805234b, i32* %esi.global-to-local, align 4
  ret i32 %v0_8052348

; uselistorder directives
  uselistorder i32 %v5_8052330, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052348, { 1, 0 }
}

define i32 @function_805234e(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805234e:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805234e = load i32, i32* @edi, align 4
  store i32 %v0_805234e, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805235e = load i32, i32* @ebx, align 4
  %v4_8052366 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_8052366, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8052366, -4095
  br i1 %tmp12, label %dec_label_pc_805237e, label %dec_label_pc_8052372

dec_label_pc_8052372:                             ; preds = %dec_label_pc_805234e
  %v1_8052372 = call i32 @function_80526bd(i32 %v0_805235e)
  %v0_8052377 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052377 = sub i32 0, %v0_8052377
  %v2_8052379 = inttoptr i32 %v1_8052372 to i32*
  store i32 %v1_8052377, i32* %v2_8052379, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052382.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805237e

dec_label_pc_805237e:                             ; preds = %dec_label_pc_805234e, %dec_label_pc_8052372
  %v2_8052382 = phi i32 [ %v0_805234e, %dec_label_pc_805234e ], [ %v2_8052382.pre, %dec_label_pc_8052372 ]
  %v0_805237e = phi i32 [ %v4_8052366, %dec_label_pc_805234e ], [ -1, %dec_label_pc_8052372 ]
  store i32 %v2_8052382, i32* %edi.global-to-local, align 4
  ret i32 %v0_805237e

; uselistorder directives
  uselistorder i32 %v4_8052366, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805237e, { 1, 0 }
}

define i32 @function_8052384(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052384:
  %edi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to i8*
  %stack_var_-4 = alloca i32, align 4
  %v0_8052384 = load i32, i32* @edi, align 4
  store i32 %v0_8052384, i32* %stack_var_-4, align 4
  %v4_8052388 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052388, i32* %edi.global-to-local, align 4
  %v0_8052394 = load i32, i32* @ebx, align 4
  %v7_805239c = call i32 @readlink(i8* %arg1, i8* %tmp5, i32 %arg3)
  store i32 %v7_805239c, i32* %edi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_805239c, -4095
  br i1 %tmp13, label %dec_label_pc_80523b4, label %dec_label_pc_80523a8

dec_label_pc_80523a8:                             ; preds = %dec_label_pc_8052384
  %v1_80523a8 = call i32 @function_80526bd(i32 %v0_8052394)
  %v0_80523ad = load i32, i32* %edi.global-to-local, align 4
  %v1_80523ad = sub i32 0, %v0_80523ad
  %v2_80523af = inttoptr i32 %v1_80523a8 to i32*
  store i32 %v1_80523ad, i32* %v2_80523af, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80523b8.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80523b4

dec_label_pc_80523b4:                             ; preds = %dec_label_pc_8052384, %dec_label_pc_80523a8
  %v2_80523b8 = phi i32 [ %v0_8052384, %dec_label_pc_8052384 ], [ %v2_80523b8.pre, %dec_label_pc_80523a8 ]
  %v0_80523b4 = phi i32 [ %v7_805239c, %dec_label_pc_8052384 ], [ -1, %dec_label_pc_80523a8 ]
  store i32 %v2_80523b8, i32* %edi.global-to-local, align 4
  ret i32 %v0_80523b4

; uselistorder directives
  uselistorder i32 %v7_805239c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80523b4, { 1, 0 }
}

define i32 @function_80523ba() local_unnamed_addr {
dec_label_pc_80523ba:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80523bb = load i32, i32* @esi, align 4
  store i32 %v0_80523bb, i32* %stack_var_-8, align 4
  %v0_80523d3 = load i32, i32* @ebx, align 4
  %v1_80523db = call i32 @int80_syscall(i32 142)
  store i32 %v0_80523d3, i32* @ebx, align 4
  store i32 %v1_80523db, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_80523db, -4095
  br i1 %tmp12, label %dec_label_pc_80523f3, label %dec_label_pc_80523e7

dec_label_pc_80523e7:                             ; preds = %dec_label_pc_80523ba
  %v1_80523e7 = call i32 @function_80526bd(i32 %v0_80523d3)
  %v0_80523ec = load i32, i32* %esi.global-to-local, align 4
  %v1_80523ec = sub i32 0, %v0_80523ec
  %v2_80523ee = inttoptr i32 %v1_80523e7 to i32*
  store i32 %v1_80523ec, i32* %v2_80523ee, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80523f6.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80523f3

dec_label_pc_80523f3:                             ; preds = %dec_label_pc_80523ba, %dec_label_pc_80523e7
  %v2_80523f6 = phi i32 [ %v0_80523bb, %dec_label_pc_80523ba ], [ %v2_80523f6.pre, %dec_label_pc_80523e7 ]
  %v0_80523f3 = phi i32 [ %v1_80523db, %dec_label_pc_80523ba ], [ -1, %dec_label_pc_80523e7 ]
  store i32 %v2_80523f6, i32* @esi, align 4
  ret i32 %v0_80523f3

; uselistorder directives
  uselistorder i32 %v1_80523db, { 1, 0, 2 }
  uselistorder i32 %v0_80523d3, { 1, 0 }
  uselistorder label %dec_label_pc_80523f3, { 1, 0 }
}

define i32 @function_80523f9() local_unnamed_addr {
dec_label_pc_80523f9:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80523f9 = load i32, i32* @ebx, align 4
  store i32 %v0_80523f9, i32* %stack_var_-4, align 4
  %v1_8052402 = call i32 @setsid(i32 %v0_80523f9)
  store i32 %v1_8052402, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052402, -4095
  br i1 %tmp7, label %dec_label_pc_8052419, label %dec_label_pc_805240d

dec_label_pc_805240d:                             ; preds = %dec_label_pc_80523f9
  %v1_805240d = call i32 @function_80526bd(i32 %v0_80523f9)
  %v0_8052412 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052412 = sub i32 0, %v0_8052412
  %v2_8052414 = inttoptr i32 %v1_805240d to i32*
  store i32 %v1_8052412, i32* %v2_8052414, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805241d.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052419

dec_label_pc_8052419:                             ; preds = %dec_label_pc_80523f9, %dec_label_pc_805240d
  %v2_805241d = phi i32 [ %v0_80523f9, %dec_label_pc_80523f9 ], [ %v2_805241d.pre, %dec_label_pc_805240d ]
  %v0_8052419 = phi i32 [ %v1_8052402, %dec_label_pc_80523f9 ], [ -1, %dec_label_pc_805240d ]
  store i32 %v2_805241d, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8052419

; uselistorder directives
  uselistorder i32 %v1_8052402, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052419, { 1, 0 }
}

define i32 @function_805241f(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805241f:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8052420 = load i32, i32* @esi, align 4
  %v4_8052424 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8052424, i32* @ecx, align 4
  %v2_8052430 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_8052430, label %dec_label_pc_8052449, label %dec_label_pc_8052434

dec_label_pc_8052434:                             ; preds = %dec_label_pc_805241f
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8052449, label %dec_label_pc_8052439

dec_label_pc_8052439:                             ; preds = %dec_label_pc_8052434
  %v1_8052439 = call i32 @function_80526bd(i32 %v0_8052420)
  %v1_805243e = inttoptr i32 %v1_8052439 to i32*
  store i32 22, i32* %v1_805243e, align 4
  br label %dec_label_pc_8052470

dec_label_pc_8052449:                             ; preds = %dec_label_pc_8052434, %dec_label_pc_805241f
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805244e = load i32, i32* @ebx, align 4
  %v7_8052456 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_805244e, i32* @ebx, align 4
  store i32 %v7_8052456, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_8052456, -4095
  br i1 %tmp12, label %dec_label_pc_8052470, label %dec_label_pc_8052462

dec_label_pc_8052462:                             ; preds = %dec_label_pc_8052449
  %v1_8052462 = call i32 @function_80526bd(i32 %v0_805244e)
  %v0_8052467 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052467 = sub i32 0, %v0_8052467
  %v2_8052469 = inttoptr i32 %v1_8052462 to i32*
  store i32 %v1_8052467, i32* %v2_8052469, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052470

dec_label_pc_8052470:                             ; preds = %dec_label_pc_8052462, %dec_label_pc_8052449, %dec_label_pc_8052439
  %storemerge = phi i32 [ -1, %dec_label_pc_8052439 ], [ %v7_8052456, %dec_label_pc_8052449 ], [ -1, %dec_label_pc_8052462 ]
  %v2_8052470 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052470, i32* @edx, align 4
  store i32 %v0_8052420, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_8052456, { 1, 0, 2 }
  uselistorder i32 %v0_805244e, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8052474() local_unnamed_addr {
dec_label_pc_8052474:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8052474 = load i32, i32* @edi, align 4
  store i32 %v0_8052474, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v0_805247c = load i32, i32* @ebx, align 4
  %v1_8052484 = inttoptr i32 %tmp to i32*
  %v2_8052484 = call i32 @time(i32* %v1_8052484)
  store i32 %v0_805247c, i32* @ebx, align 4
  store i32 %v2_8052484, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_8052484, -4095
  br i1 %tmp9, label %dec_label_pc_805249c, label %dec_label_pc_8052490

dec_label_pc_8052490:                             ; preds = %dec_label_pc_8052474
  %v1_8052490 = call i32 @function_80526bd(i32 %v0_805247c)
  %v0_8052495 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052495 = sub i32 0, %v0_8052495
  %v2_8052497 = inttoptr i32 %v1_8052490 to i32*
  store i32 %v1_8052495, i32* %v2_8052497, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80524a0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805249c

dec_label_pc_805249c:                             ; preds = %dec_label_pc_8052474, %dec_label_pc_8052490
  %v2_80524a0 = phi i32 [ %v0_8052474, %dec_label_pc_8052474 ], [ %v2_80524a0.pre, %dec_label_pc_8052490 ]
  %v0_805249c = phi i32 [ %v2_8052484, %dec_label_pc_8052474 ], [ -1, %dec_label_pc_8052490 ]
  store i32 %v2_80524a0, i32* @edi, align 4
  ret i32 %v0_805249c

; uselistorder directives
  uselistorder i32 %v2_8052484, { 1, 0, 2 }
  uselistorder i32 %v0_805247c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_805249c, { 1, 0 }
}

define i32 @function_80524a2(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80524a2:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80524a2 = load i32, i32* @edi, align 4
  store i32 %v0_80524a2, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80524b2 = load i32, i32* @ebx, align 4
  %v4_80524ba = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_80524ba, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_80524ba, -4095
  br i1 %tmp12, label %dec_label_pc_80524d2, label %dec_label_pc_80524c6

dec_label_pc_80524c6:                             ; preds = %dec_label_pc_80524a2
  %v1_80524c6 = call i32 @function_80526bd(i32 %v0_80524b2)
  %v0_80524cb = load i32, i32* %edi.global-to-local, align 4
  %v1_80524cb = sub i32 0, %v0_80524cb
  %v2_80524cd = inttoptr i32 %v1_80524c6 to i32*
  store i32 %v1_80524cb, i32* %v2_80524cd, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80524d6.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80524d2

dec_label_pc_80524d2:                             ; preds = %dec_label_pc_80524a2, %dec_label_pc_80524c6
  %v2_80524d6 = phi i32 [ %v0_80524a2, %dec_label_pc_80524a2 ], [ %v2_80524d6.pre, %dec_label_pc_80524c6 ]
  %v0_80524d2 = phi i32 [ %v4_80524ba, %dec_label_pc_80524a2 ], [ -1, %dec_label_pc_80524c6 ]
  store i32 %v2_80524d6, i32* %edi.global-to-local, align 4
  ret i32 %v0_80524d2

; uselistorder directives
  uselistorder i32 %v4_80524ba, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80524d2, { 1, 0 }
}

define i32 @function_80524d8(i32* %arg1) local_unnamed_addr {
dec_label_pc_80524d8:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v0_80524da = load i32, i32* @ebx, align 4
  %v12_80524db = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp3, i32* @edi, align 4
  %v2_80524e2 = load i32, i32* %arg1, align 4
  %v12_80524e2 = icmp eq i32 %v2_80524e2, -1
  %v1_80524e5 = icmp eq i1 %v12_80524e2, false
  br i1 %v1_80524e5, label %dec_label_pc_80524f7, label %dec_label_pc_80524e7

dec_label_pc_80524e7:                             ; preds = %dec_label_pc_80524d8
  %v1_80524e7 = call i32 @function_80526bd(i32 %v0_80524da)
  %v1_80524ec = inttoptr i32 %v1_80524e7 to i32*
  store i32 9, i32* %v1_80524ec, align 4
  br label %dec_label_pc_8052541

dec_label_pc_80524f7:                             ; preds = %dec_label_pc_80524d8
  %v1_80524f7 = add i32 %tmp3, 24
  store i32 %v12_80524db, i32* @esi, align 4
  %v2_8052506 = call i32 @function_8053f04(i32 %v12_80524db, i32 134561537)
  %v1_805250e = call i32 @function_8053f01(i32 %v1_80524f7)
  store i32 %v1_805250e, i32* @eax, align 4
  %v0_8052513 = load i32, i32* @edi, align 4
  %v1_8052513 = inttoptr i32 %v0_8052513 to i32*
  %v2_8052513 = load i32, i32* %v1_8052513, align 4
  store i32 %v2_8052513, i32* @ebx, align 4
  store i32 -1, i32* %v1_8052513, align 4
  %v2_8052520 = call i32 @function_8053f04(i32 %v12_80524db, i32 1)
  %v0_8052526 = load i32, i32* @edi, align 4
  %v1_8052526 = add i32 %v0_8052526, 12
  %v2_8052526 = inttoptr i32 %v1_8052526 to i32*
  %v3_8052526 = load i32, i32* %v2_8052526, align 4
  %v1_8052529 = call i32 @function_80538e0(i32 %v3_8052526)
  %v0_805252e = load i32, i32* @edi, align 4
  %v1_8052531 = call i32 @function_80538e0(i32 %v0_805252e)
  %v0_8052536 = load i32, i32* @ebx, align 4
  %v1_8052539 = call i32 @function_80521b3(i32 %v0_8052536)
  br label %dec_label_pc_8052541

dec_label_pc_8052541:                             ; preds = %dec_label_pc_80524e7, %dec_label_pc_80524f7
  %v0_8052547 = phi i32 [ -1, %dec_label_pc_80524e7 ], [ %v1_8052539, %dec_label_pc_80524f7 ]
  ret i32 %v0_8052547

; uselistorder directives
  uselistorder label %dec_label_pc_8052541, { 1, 0 }
}

define i32 @function_8052548(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052548:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v2_8052559 = inttoptr i32 %arg1 to i8*
  %v3_8052559 = call i32 @function_80522c4(i8* %v2_8052559, i32 67584)
  store i32 %v3_8052559, i32* %eax.global-to-local, align 4
  store i32 %v3_8052559, i32* @edi, align 4
  %v2_8052563 = icmp slt i32 %v3_8052559, 0
  br i1 %v2_8052563, label %dec_label_pc_8052630, label %dec_label_pc_805256b

dec_label_pc_805256b:                             ; preds = %dec_label_pc_8052548
  %v0_805256b = load i32, i32* @ebx, align 4
  %v2_805256d = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_805256d, i32* %eax.global-to-local, align 4
  store i32 %v3_8052559, i32* %stack_var_-124, align 4
  %v4_8052573 = call i32 @function_80542fe(i32 %v3_8052559, i32 %v2_805256d, i32 %v0_805256b, i32 %v0_805256b)
  store i32 %v4_8052573, i32* %eax.global-to-local, align 4
  %v2_805257b = icmp slt i32 %v4_8052573, 0
  br i1 %v2_805257b, label %dec_label_pc_8052591, label %dec_label_pc_805257f

dec_label_pc_805257f:                             ; preds = %dec_label_pc_805256b
  %v0_8052584 = load i32, i32* @edi, align 4
  store i32 %v0_8052584, i32* %stack_var_-124, align 4
  %v3_8052585 = call i32 @function_805211d(i32 %v0_8052584, i32 2, i32 1)
  store i32 %v3_8052585, i32* %eax.global-to-local, align 4
  %v2_805258d = icmp slt i32 %v3_8052585, 0
  %v1_805258f = icmp eq i1 %v2_805258d, false
  br i1 %v1_805258f, label %dec_label_pc_80525a7, label %dec_label_pc_8052591

dec_label_pc_8052591:                             ; preds = %dec_label_pc_805257f, %dec_label_pc_805256b
  %v0_8052591 = load i32, i32* %stack_var_-124, align 4
  %v1_8052591 = call i32 @function_80526bd(i32 %v0_8052591)
  store i32 %v1_8052591, i32* %eax.global-to-local, align 4
  store i32 %v1_8052591, i32* @ebx, align 4
  %v1_805259b = inttoptr i32 %v1_8052591 to i32*
  %v2_805259b = load i32, i32* %v1_805259b, align 4
  %v0_805259d = load i32, i32* @edi, align 4
  store i32 %v0_805259d, i32* %stack_var_-124, align 4
  %v1_805259e = call i32 @function_80521b3(i32 %v0_805259d)
  store i32 %v1_805259e, i32* %eax.global-to-local, align 4
  %v1_80525a3 = load i32, i32* @ebx, align 4
  %v2_80525a3 = inttoptr i32 %v1_80525a3 to i32*
  store i32 %v2_805259b, i32* %v2_80525a3, align 4
  br label %dec_label_pc_805261c

dec_label_pc_80525a7:                             ; preds = %dec_label_pc_805257f
  store i32 48, i32* %stack_var_-124, align 4
  %v1_80525ac = call i32 @function_8052b1b(i32 48)
  store i32 %v1_80525ac, i32* %eax.global-to-local, align 4
  store i32 %v1_80525ac, i32* @ebx, align 4
  %v1_80525b6 = icmp eq i32 %v1_80525ac, 0
  br i1 %v1_80525b6, label %dec_label_pc_8052608, label %dec_label_pc_80525ba

dec_label_pc_80525ba:                             ; preds = %dec_label_pc_80525a7
  %v0_80525ba = load i32, i32* @edi, align 4
  %v2_80525ba = inttoptr i32 %v1_80525ac to i32*
  store i32 %v0_80525ba, i32* %v2_80525ba, align 4
  %v1_80525bc = add i32 %v1_80525ac, 16
  %v2_80525bc = inttoptr i32 %v1_80525bc to i32*
  store i32 0, i32* %v2_80525bc, align 4
  %v1_80525c3 = add i32 %v1_80525ac, 8
  %v2_80525c3 = inttoptr i32 %v1_80525c3 to i32*
  store i32 0, i32* %v2_80525c3, align 4
  %v1_80525ca = add i32 %v1_80525ac, 4
  %v2_80525ca = inttoptr i32 %v1_80525ca to i32*
  store i32 0, i32* %v2_80525ca, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v1_80525d5 = load i32, i32* @ebx, align 4
  %v2_80525d5 = add i32 %v1_80525d5, 20
  %v3_80525d5 = inttoptr i32 %v2_80525d5 to i32*
  store i32 %tmp, i32* %v3_80525d5, align 4
  %v0_80525d8 = load i32, i32* %eax.global-to-local, align 4
  %v6_80525dd = icmp ugt i32 %v0_80525d8, 511
  br i1 %v6_80525dd, label %dec_label_pc_80525e6, label %dec_label_pc_80525df

dec_label_pc_80525df:                             ; preds = %dec_label_pc_80525ba
  %v0_80525df = load i32, i32* @ebx, align 4
  %v1_80525df = add i32 %v0_80525df, 20
  %v2_80525df = inttoptr i32 %v1_80525df to i32*
  store i32 512, i32* %v2_80525df, align 4
  br label %dec_label_pc_80525e6

dec_label_pc_80525e6:                             ; preds = %dec_label_pc_80525ba, %dec_label_pc_80525df
  %v0_80525e8 = load i32, i32* @ebx, align 4
  %v1_80525e8 = add i32 %v0_80525e8, 20
  %v2_80525e8 = inttoptr i32 %v1_80525e8 to i32*
  %v3_80525e8 = load i32, i32* %v2_80525e8, align 4
  store i32 1, i32* %stack_var_-124, align 4
  %v3_80525ed = call i32 @function_805328f(i64 1, i32 %v3_80525e8)
  store i32 %v3_80525ed, i32* %eax.global-to-local, align 4
  %v1_80525f5 = load i32, i32* @ebx, align 4
  %v2_80525f5 = add i32 %v1_80525f5, 12
  %v3_80525f5 = inttoptr i32 %v2_80525f5 to i32*
  store i32 %v3_80525ed, i32* %v3_80525f5, align 4
  %v1_80525f8 = icmp eq i32 %v3_80525ed, 0
  %v1_80525fa = icmp eq i1 %v1_80525f8, false
  br i1 %v1_80525fa, label %dec_label_pc_8052620, label %dec_label_pc_80525fc

dec_label_pc_80525fc:                             ; preds = %dec_label_pc_80525e6
  %v0_80525ff = load i32, i32* @ebx, align 4
  store i32 %v0_80525ff, i32* %stack_var_-124, align 4
  %v1_8052600 = call i32 @function_80538e0(i32 %v0_80525ff)
  store i32 %v1_8052600, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052608

dec_label_pc_8052608:                             ; preds = %dec_label_pc_80525a7, %dec_label_pc_80525fc
  %v0_805260b = load i32, i32* @edi, align 4
  store i32 %v0_805260b, i32* %stack_var_-124, align 4
  %v1_805260c = call i32 @function_80521b3(i32 %v0_805260b)
  store i32 %v1_805260c, i32* %eax.global-to-local, align 4
  %v1_8052611 = call i32 @function_80526bd(i32 %v0_805260b)
  store i32 %v1_8052611, i32* %eax.global-to-local, align 4
  %v1_8052616 = inttoptr i32 %v1_8052611 to i32*
  store i32 12, i32* %v1_8052616, align 4
  br label %dec_label_pc_805261c

dec_label_pc_805261c:                             ; preds = %dec_label_pc_8052591, %dec_label_pc_8052608
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805262d

dec_label_pc_8052620:                             ; preds = %dec_label_pc_80525e6
  %v0_8052622 = load i32, i32* @ebx, align 4
  %v1_8052622 = add i32 %v0_8052622, 24
  store i32 %v1_8052622, i32* %eax.global-to-local, align 4
  store i32 %v1_8052622, i32* %stack_var_-124, align 4
  %v1_8052628 = call i32 @function_8053f01(i32 %v1_8052622)
  store i32 %v1_8052628, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805262d

dec_label_pc_805262d:                             ; preds = %dec_label_pc_805261c, %dec_label_pc_8052620
  br label %dec_label_pc_8052630

dec_label_pc_8052630:                             ; preds = %dec_label_pc_8052548, %dec_label_pc_805262d
  %v0_8052633 = load i32, i32* @ebx, align 4
  store i32 %v0_8052633, i32* %eax.global-to-local, align 4
  ret i32 %v0_8052633

; uselistorder directives
  uselistorder i32 %v3_80525ed, { 1, 0, 2 }
  uselistorder i32 %v1_80525ac, { 2, 3, 5, 4, 1, 0, 6 }
  uselistorder i32 %v1_8052591, { 1, 0, 2 }
  uselistorder i32 %v3_8052559, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-124, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 512, { 2, 0, 1 }
  uselistorder i32 (i32)* @function_80521b3, { 14, 13, 12, 11, 10, 9, 8, 5, 7, 4, 6, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052630, { 1, 0 }
  uselistorder label %dec_label_pc_805262d, { 1, 0 }
  uselistorder label %dec_label_pc_805261c, { 1, 0 }
  uselistorder label %dec_label_pc_8052608, { 1, 0 }
  uselistorder label %dec_label_pc_80525e6, { 1, 0 }
}

define i32 @function_8052639(i32* %arg1) local_unnamed_addr {
dec_label_pc_8052639:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %tmp3, i32* @esi, align 4
  %v1_8052642 = add i32 %tmp3, 24
  store i32 %v1_8052642, i32* @ebx, align 4
  %v2_805264b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805264b, i32* @eax, align 4
  %v2_8052650 = call i32 @function_8053f04(i32 %v2_805264b, i32 134561537)
  %v0_8052655 = load i32, i32* @ebx, align 4
  %v1_8052658 = call i32 @function_8053f01(i32 %v0_8052655)
  br label %dec_label_pc_8052660

dec_label_pc_8052660:                             ; preds = %dec_label_pc_805268b, %dec_label_pc_8052639
  %v0_8052660 = load i32, i32* @esi, align 4
  %v1_8052660 = add i32 %v0_8052660, 8
  %v2_8052660 = inttoptr i32 %v1_8052660 to i32*
  %v3_8052660 = load i32, i32* %v2_8052660, align 4
  %v2_8052663 = add i32 %v0_8052660, 4
  %v3_8052663 = inttoptr i32 %v2_8052663 to i32*
  %v4_8052663 = load i32, i32* %v3_8052663, align 4
  %v6_8052666 = icmp ugt i32 %v3_8052660, %v4_8052663
  br i1 %v6_8052666, label %dec_label_pc_805268b, label %dec_label_pc_8052668

dec_label_pc_8052668:                             ; preds = %dec_label_pc_8052660
  %v0_8052668 = load i32, i32* @edx, align 4
  %v1_8052669 = add i32 %v0_8052660, 20
  %v2_8052669 = inttoptr i32 %v1_8052669 to i32*
  %v3_8052669 = load i32, i32* %v2_8052669, align 4
  %v1_805266c = add i32 %v0_8052660, 12
  %v2_805266c = inttoptr i32 %v1_805266c to i32*
  %v3_805266c = load i32, i32* %v2_805266c, align 4
  %v1_805266f = inttoptr i32 %v0_8052660 to i32*
  %v2_805266f = load i32, i32* %v1_805266f, align 4
  %v4_8052671 = call i32 @function_8054346(i32 %v2_805266f, i32 %v3_805266c, i32 %v3_8052669, i32 %v0_8052668)
  %tmp13 = icmp slt i32 %v4_8052671, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_8052681, label %dec_label_pc_805267d

dec_label_pc_805267d:                             ; preds = %dec_label_pc_8052668
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80526a7

dec_label_pc_8052681:                             ; preds = %dec_label_pc_8052668
  %v1_8052681 = load i32, i32* @esi, align 4
  %v2_8052681 = add i32 %v1_8052681, 8
  %v3_8052681 = inttoptr i32 %v2_8052681 to i32*
  store i32 %v4_8052671, i32* %v3_8052681, align 4
  %v0_8052684 = load i32, i32* @esi, align 4
  %v1_8052684 = add i32 %v0_8052684, 4
  %v2_8052684 = inttoptr i32 %v1_8052684 to i32*
  store i32 0, i32* %v2_8052684, align 4
  %v0_805268b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805268b

dec_label_pc_805268b:                             ; preds = %dec_label_pc_8052660, %dec_label_pc_8052681
  %v1_8052699 = phi i32 [ %v0_8052660, %dec_label_pc_8052660 ], [ %v0_805268b.pre, %dec_label_pc_8052681 ]
  %v1_805268b = add i32 %v1_8052699, 4
  %v2_805268b = inttoptr i32 %v1_805268b to i32*
  %v3_805268b = load i32, i32* %v2_805268b, align 4
  %v2_8052690 = add i32 %v1_8052699, 12
  %v3_8052690 = inttoptr i32 %v2_8052690 to i32*
  %v4_8052690 = load i32, i32* %v3_8052690, align 4
  %v5_8052690 = add i32 %v4_8052690, %v3_805268b
  store i32 %v5_8052690, i32* @ebx, align 4
  %v1_8052693 = add i32 %v5_8052690, 8
  %v2_8052693 = inttoptr i32 %v1_8052693 to i16*
  %v3_8052693 = load i16, i16* %v2_8052693, align 2
  %v4_8052693 = zext i16 %v3_8052693 to i32
  store i32 %v4_8052693, i32* @edx, align 4
  %v2_8052697 = add i32 %v4_8052693, %v3_805268b
  store i32 %v2_8052697, i32* %v2_805268b, align 4
  %v0_805269c = load i32, i32* @ebx, align 4
  %v1_805269c = add i32 %v0_805269c, 4
  %v2_805269c = inttoptr i32 %v1_805269c to i32*
  %v3_805269c = load i32, i32* %v2_805269c, align 4
  %v1_805269f = load i32, i32* @esi, align 4
  %v2_805269f = add i32 %v1_805269f, 16
  %v3_805269f = inttoptr i32 %v2_805269f to i32*
  store i32 %v3_805269c, i32* %v3_805269f, align 4
  %v0_80526a2 = load i32, i32* @ebx, align 4
  %v1_80526a2 = inttoptr i32 %v0_80526a2 to i32*
  %v2_80526a2 = load i32, i32* %v1_80526a2, align 4
  %v3_80526a2 = icmp eq i32 %v2_80526a2, 0
  br i1 %v3_80526a2, label %dec_label_pc_8052660, label %dec_label_pc_80526a7.loopexit

dec_label_pc_80526a7.loopexit:                    ; preds = %dec_label_pc_805268b
  br label %dec_label_pc_80526a7

dec_label_pc_80526a7:                             ; preds = %dec_label_pc_80526a7.loopexit, %dec_label_pc_805267d
  store i32 %v2_805264b, i32* @eax, align 4
  %v2_80526b0 = call i32 @function_8053f04(i32 %v2_805264b, i32 1)
  %v0_80526b5 = load i32, i32* @ebx, align 4
  ret i32 %v0_80526b5

; uselistorder directives
  uselistorder i32 %v1_8052699, { 1, 0 }
  uselistorder i32 %v0_8052660, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder label %dec_label_pc_805268b, { 1, 0 }
}

define i32 @function_80526bd(i32 %arg1) local_unnamed_addr {
dec_label_pc_80526bd:
  ret i32 ptrtoint (i32* @global_var_8056154.43 to i32)
}

define i32 @function_80526c3() local_unnamed_addr {
dec_label_pc_80526c3:
  %tmp = call i64 @__decompiler_undefined_function_5()
  %stack_var_-16 = alloca i32, align 4
  %v1_80526cb = bitcast i32* %stack_var_-16 to %tms*
  %v2_80526cb = call i32 @function_805471b(%tms* %v1_80526cb)
  %v4_80526d0 = trunc i64 %tmp to i32
  %v4_80526d4 = load i32, i32* %stack_var_-16, align 4
  %v5_80526d4 = add i32 %v4_80526d4, %v4_80526d0
  %v3_80526db = mul i32 %v5_80526d4, 10000
  %v1_80526e1 = and i32 %v3_80526db, 2147483632
  ret i32 %v1_80526e1

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_80526e7(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80526e7:
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_80526e8 = load i32, i32* @esi, align 4
  store i32 %v0_80526e8, i32* %stack_var_-8, align 4
  %v4_80526e9 = ptrtoint i8* %arg1 to i32
  %v9_80526f5 = icmp ugt i8* %tmp3, %arg1
  %v1_80526f7 = icmp eq i1 %v9_80526f5, false
  br i1 %v1_80526f7, label %dec_label_pc_80526ff, label %dec_label_pc_80526f9

dec_label_pc_80526f9:                             ; preds = %dec_label_pc_80526e7
  %v7_80526fb = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %arg3)
  br label %dec_label_pc_805270b

dec_label_pc_80526ff:                             ; preds = %dec_label_pc_80526e7
  %v3_80526ff = add i32 %arg2, -1
  %v4_80526ff = add i32 %v3_80526ff, %arg3
  %v5_80526ff = inttoptr i32 %v4_80526ff to i8*
  %v3_8052703 = add i32 %v4_80526e9, -1
  %v4_8052703 = add i32 %v3_8052703, %arg3
  %v5_8052703 = inttoptr i32 %v4_8052703 to i8*
  %v7_8052708 = call i8* @_memcpy(i8* %v5_8052703, i8* %v5_80526ff, i32 %arg3)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_805270b

dec_label_pc_805270b:                             ; preds = %dec_label_pc_80526f9, %dec_label_pc_80526ff
  %v2_805270b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805270b, i32* @esi, align 4
  ret i32 %v4_80526e9

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805270b, { 1, 0 }
}

define i32 @function_805270e(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805270e:
  %v0_805270e = load i32, i32* @edi, align 4
  %v4_8052717 = ptrtoint i8* %arg1 to i32
  %v5_805271b = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_805270e, i32* @edi, align 4
  ret i32 %v4_8052717

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_8052723(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052723:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052724 = load i32, i32* @esi, align 4
  store i32 %v0_8052724, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805272c = ptrtoint i8* %arg1 to i32
  store i32 %v4_805272c, i32* %edi.global-to-local, align 4
  %v4_8052730.pre = load i32, i32* @eax, align 4
  %v8_8052730.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8052730

dec_label_pc_8052730:                             ; preds = %dec_label_pc_8052730.dec_label_pc_8052730_crit_edge, %dec_label_pc_8052723
  %v2_8052731 = phi i32 [ %v7_8052731, %dec_label_pc_8052730.dec_label_pc_8052730_crit_edge ], [ %v4_805272c, %dec_label_pc_8052723 ]
  %v8_8052730 = phi i1 [ %v5_8052731, %dec_label_pc_8052730.dec_label_pc_8052730_crit_edge ], [ %v8_8052730.pre, %dec_label_pc_8052723 ]
  %v4_8052730 = phi i32 [ %v0_8052732, %dec_label_pc_8052730.dec_label_pc_8052730_crit_edge ], [ %v4_8052730.pre, %dec_label_pc_8052723 ]
  %v7_8052730 = phi i32 [ %v0_8052730.pre, %dec_label_pc_8052730.dec_label_pc_8052730_crit_edge ], [ %arg2, %dec_label_pc_8052723 ]
  %v1_8052730 = inttoptr i32 %v7_8052730 to i8*
  %v2_8052730 = load i8, i8* %v1_8052730, align 1
  %v3_8052730 = zext i8 %v2_8052730 to i32
  %v5_8052730 = and i32 %v4_8052730, -256
  %v6_8052730 = or i32 %v3_8052730, %v5_8052730
  store i32 %v6_8052730, i32* %eax.global-to-local, align 4
  %v9_8052730 = select i1 %v8_8052730, i32 -1, i32 1
  %v10_8052730 = add i32 %v7_8052730, %v9_8052730
  store i32 %v10_8052730, i32* %esi.global-to-local, align 4
  %v3_8052731 = inttoptr i32 %v2_8052731 to i8*
  store i8 %v2_8052730, i8* %v3_8052731, align 1
  %v4_8052731 = load i32, i32* %edi.global-to-local, align 4
  %v5_8052731 = load i1, i1* @df, align 1
  %v6_8052731 = select i1 %v5_8052731, i32 -1, i32 1
  %v7_8052731 = add i32 %v6_8052731, %v4_8052731
  store i32 %v7_8052731, i32* %edi.global-to-local, align 4
  %v0_8052732 = load i32, i32* %eax.global-to-local, align 4
  %v3_8052732 = trunc i32 %v0_8052732 to i8
  %v4_8052732 = icmp eq i8 %v3_8052732, 0
  %v1_8052734 = icmp eq i1 %v4_8052732, false
  br i1 %v1_8052734, label %dec_label_pc_8052730.dec_label_pc_8052730_crit_edge, label %dec_label_pc_8052736

dec_label_pc_8052730.dec_label_pc_8052730_crit_edge: ; preds = %dec_label_pc_8052730
  %v0_8052730.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052730

dec_label_pc_8052736:                             ; preds = %dec_label_pc_8052730
  store i32 %v4_805272c, i32* %eax.global-to-local, align 4
  %v2_805273b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805273b, i32* %esi.global-to-local, align 4
  ret i32 %v4_805272c

; uselistorder directives
  uselistorder i32 %v0_8052732, { 1, 0 }
  uselistorder i32 %v7_8052731, { 1, 0 }
  uselistorder i1 %v5_8052731, { 1, 0 }
  uselistorder i32 %v4_805272c, { 1, 2, 0, 3 }
}

define i32 @function_805273e(i32 %arg1) local_unnamed_addr {
dec_label_pc_805273e:
  %stack_var_-4 = alloca i32, align 4
  %v2_8052741 = ptrtoint i32* %stack_var_-4 to i32
  %v2_805274a = inttoptr i32 %arg1 to i8*
  %v3_805274a = call i32 @function_80547ed(i8* %v2_805274a, i32 %v2_8052741)
  %v1_8052755 = icmp eq i32 %v3_805274a, 0
  br i1 %v1_8052755, label %dec_label_pc_805275d, label %dec_label_pc_8052759

dec_label_pc_8052759:                             ; preds = %dec_label_pc_805273e
  %v3_8052759 = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805275d

dec_label_pc_805275d:                             ; preds = %dec_label_pc_805273e, %dec_label_pc_8052759
  %v0_805275d = phi i32 [ -1, %dec_label_pc_805273e ], [ %v3_8052759, %dec_label_pc_8052759 ]
  ret i32 %v0_805275d

; uselistorder directives
  uselistorder label %dec_label_pc_805275d, { 1, 0 }
}

define i32 @function_8052763(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052763:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805277e = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052785 = call i32 @function_8054237(i32 5, i32 %v2_805277e)
  ret i32 %v2_8052785

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_805278e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805278e:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80527a9 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80527b0 = call i32 @function_8054237(i32 2, i32 %v2_80527a9)
  ret i32 %v2_80527b0

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80527b9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80527b9:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80527d4 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80527db = call i32 @function_8054237(i32 3, i32 %v2_80527d4)
  ret i32 %v2_80527db

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80527e4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80527e4:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80527ff = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052806 = call i32 @function_8054237(i32 6, i32 %v2_80527ff)
  ret i32 %v2_8052806

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_805280f() local_unnamed_addr {
dec_label_pc_805280f:
  %stack_var_-20 = alloca i32, align 4
  %v2_805283a = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052841 = call i32 @function_8054237(i32 15, i32 %v2_805283a)
  ret i32 %v2_8052841
}

define i32 @function_805284a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805284a:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_805285d = ptrtoint i32* %stack_var_-8 to i32
  %v2_8052864 = call i32 @function_8054237(i32 4, i32 %v2_805285d)
  ret i32 %v2_8052864

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_805286d() local_unnamed_addr {
dec_label_pc_805286d:
  %stack_var_-16 = alloca i32, align 4
  %v2_8052890 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8052897 = call i32 @function_8054237(i32 10, i32 %v2_8052890)
  ret i32 %v2_8052897
}

define i32 @function_80528a0() local_unnamed_addr {
dec_label_pc_80528a0:
  %stack_var_-24 = alloca i32, align 4
  %v2_80528d3 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80528da = call i32 @function_8054237(i32 12, i32 %v2_80528d3)
  ret i32 %v2_80528da
}

define i32 @function_80528e3() local_unnamed_addr {
dec_label_pc_80528e3:
  %stack_var_-16 = alloca i32, align 4
  %v2_8052906 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805290d = call i32 @function_8054237(i32 9, i32 %v2_8052906)
  ret i32 %v2_805290d
}

define i32 @function_8052916() local_unnamed_addr {
dec_label_pc_8052916:
  %stack_var_-24 = alloca i32, align 4
  %v2_8052949 = ptrtoint i32* %stack_var_-24 to i32
  %v2_8052950 = call i32 @function_8054237(i32 11, i32 %v2_8052949)
  ret i32 %v2_8052950
}

define i32 @function_8052959() local_unnamed_addr {
dec_label_pc_8052959:
  %stack_var_-20 = alloca i32, align 4
  %v2_8052984 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805298b = call i32 @function_8054237(i32 14, i32 %v2_8052984)
  ret i32 %v2_805298b
}

define i32 @function_8052994(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052994:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80529af = ptrtoint i32* %stack_var_-12 to i32
  %v2_80529b6 = call i32 @function_8054237(i32 1, i32 %v2_80529af)
  ret i32 %v2_80529b6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8054237, { 5, 4, 7, 3, 6, 2, 11, 1, 8, 0, 10, 9 }
}

define i32 @function_80529bf(i32 %arg1) local_unnamed_addr {
dec_label_pc_80529bf:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_80529d7, label %dec_label_pc_80529ca

dec_label_pc_80529ca:                             ; preds = %dec_label_pc_80529bf
  %v1_80529ca = add i32 %arg1, -64
  %v3_80529ca = sub i32 63, %arg1
  %v4_80529ca = and i32 %v3_80529ca, %arg1
  %v5_80529ca = icmp slt i32 %v4_80529ca, 0
  %v6_80529ca = icmp eq i32 %v1_80529ca, 0
  %v7_80529ca = icmp slt i32 %v1_80529ca, 0
  %v3_80529cd = icmp eq i1 %v7_80529ca, %v5_80529ca
  %v4_80529cd = icmp eq i1 %v6_80529ca, false
  %v5_80529cd = and i1 %v4_80529cd, %v3_80529cd
  br i1 %v5_80529cd, label %dec_label_pc_80529d7, label %dec_label_pc_80529cf

dec_label_pc_80529cf:                             ; preds = %dec_label_pc_80529ca
  %v4_80529d2 = call i32 @function_8052ad5(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80529d7

dec_label_pc_80529d7:                             ; preds = %dec_label_pc_80529ca, %dec_label_pc_80529bf, %dec_label_pc_80529cf
  %v1_80529d7 = call i32 @function_80526bd(i32 ptrtoint (i32* @0 to i32))
  %v1_80529dc = inttoptr i32 %v1_80529d7 to i32*
  store i32 22, i32* %v1_80529dc, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_80529ca, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80529d7, { 2, 0, 1 }
}

define i32 @function_80529e9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80529e9:
  %v3_80529f7 = inttoptr i32 %arg1 to i8*
  %v4_80529f7 = call i32 @function_805270e(i8* %v3_80529f7, i32 0, i32 128)
  ret i32 0
}

define i32 @function_8052a02(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052a02:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8052a02 = load i32, i32* @ebx, align 4
  %v15_8052a03 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8052a17 = icmp eq i32 %arg2, -1
  br i1 %v10_8052a17, label %dec_label_pc_8052a25, label %dec_label_pc_8052a1c

dec_label_pc_8052a1c:                             ; preds = %dec_label_pc_8052a02
  %tmp25 = icmp slt i32 %arg1, 1
  br i1 %tmp25, label %dec_label_pc_8052a25, label %dec_label_pc_8052a20

dec_label_pc_8052a20:                             ; preds = %dec_label_pc_8052a1c
  %v7_8052a23 = icmp sgt i32 %arg1, 64
  br i1 %v7_8052a23, label %dec_label_pc_8052a25, label %dec_label_pc_8052a40.lr.ph

dec_label_pc_8052a25:                             ; preds = %dec_label_pc_8052a20, %dec_label_pc_8052a1c, %dec_label_pc_8052a02
  %v1_8052a25 = call i32 @function_80526bd(i32 %v0_8052a02)
  store i32 %v1_8052a25, i32* %eax.global-to-local, align 4
  %v1_8052a2a = inttoptr i32 %v1_8052a25 to i32*
  store i32 22, i32* %v1_8052a2a, align 4
  br label %dec_label_pc_8052aa6

dec_label_pc_8052a40.lr.ph:                       ; preds = %dec_label_pc_8052a20
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8052a4027 = add i32 %v15_8052a03, 284
  %v5_8052a4028 = inttoptr i32 %v4_8052a4027 to i32*
  store i32 0, i32* %v5_8052a4028, align 4
  %v0_8052a4b29 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a4b30 = add i32 %v0_8052a4b29, -1
  %v9_8052a4b31 = icmp slt i32 %v1_8052a4b30, 0
  store i32 %v1_8052a4b30, i32* %eax.global-to-local, align 4
  %v1_8052a4c32 = icmp eq i1 %v9_8052a4b31, false
  br i1 %v1_8052a4c32, label %dec_label_pc_8052a40.dec_label_pc_8052a40_crit_edge, label %dec_label_pc_8052a4e

dec_label_pc_8052a40.dec_label_pc_8052a40_crit_edge: ; preds = %dec_label_pc_8052a40.lr.ph, %dec_label_pc_8052a40.dec_label_pc_8052a40_crit_edge
  %v1_8052a4b33 = phi i32 [ %v1_8052a4b, %dec_label_pc_8052a40.dec_label_pc_8052a40_crit_edge ], [ %v1_8052a4b30, %dec_label_pc_8052a40.lr.ph ]
  %v0_8052a40.pre = load i32, i32* @esp, align 4
  %v2_8052a40 = mul i32 %v1_8052a4b33, 4
  %v3_8052a40 = add i32 %v0_8052a40.pre, 160
  %v4_8052a40 = add i32 %v3_8052a40, %v2_8052a40
  %v5_8052a40 = inttoptr i32 %v4_8052a40 to i32*
  store i32 0, i32* %v5_8052a40, align 4
  %v0_8052a4b = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a4b = add i32 %v0_8052a4b, -1
  %v9_8052a4b = icmp slt i32 %v1_8052a4b, 0
  store i32 %v1_8052a4b, i32* %eax.global-to-local, align 4
  %v1_8052a4c = icmp eq i1 %v9_8052a4b, false
  br i1 %v1_8052a4c, label %dec_label_pc_8052a40.dec_label_pc_8052a40_crit_edge, label %dec_label_pc_8052a4e

dec_label_pc_8052a4e:                             ; preds = %dec_label_pc_8052a40.dec_label_pc_8052a40_crit_edge, %dec_label_pc_8052a40.lr.ph
  %v0_8052a4e = load i32, i32* @edx, align 4
  %v2_8052a51 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8052a51, i32* %eax.global-to-local, align 4
  %v4_8052a59 = call i32 @function_8052ad5(i32 %v2_8052a51, i32 %arg1, i32 %v0_8052a4e, i32 %v0_8052a4e)
  store i32 %v4_8052a59, i32* %eax.global-to-local, align 4
  %v2_8052a61 = icmp slt i32 %v4_8052a59, 0
  br i1 %v2_8052a61, label %dec_label_pc_8052aa6, label %dec_label_pc_8052a65

dec_label_pc_8052a65:                             ; preds = %dec_label_pc_8052a4e
  %v4_8052a6d = call i32 @function_8052ab1(i32 ptrtoint (i32* @global_var_8056380.44 to i32), i32 %arg1, i32 %v4_8052a59, i32 %v4_8052a59)
  %v2_8052a86 = ptrtoint i32* %stack_var_-284 to i32
  %v2_8052a8b = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052a8b, i32* %eax.global-to-local, align 4
  %v4_8052a94 = call i32 @function_8054143(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8052a86)
  store i32 %v4_8052a94, i32* %eax.global-to-local, align 4
  %v2_8052a9c = icmp slt i32 %v4_8052a94, 0
  br i1 %v2_8052a9c, label %dec_label_pc_8052aa6, label %dec_label_pc_8052aa0

dec_label_pc_8052aa0:                             ; preds = %dec_label_pc_8052a65
  %v3_8052aa0 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8052aa9

dec_label_pc_8052aa6:                             ; preds = %dec_label_pc_8052a65, %dec_label_pc_8052a4e, %dec_label_pc_8052a25
  br label %dec_label_pc_8052aa9

dec_label_pc_8052aa9:                             ; preds = %dec_label_pc_8052aa0, %dec_label_pc_8052aa6
  %storemerge = phi i32 [ -1, %dec_label_pc_8052aa6 ], [ %v3_8052aa0, %dec_label_pc_8052aa0 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052a4b, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 9, 0, 1, 2, 3, 4, 7, 8, 10, 11, 5, 6 }
  uselistorder i32 284, { 0, 4, 5, 6, 7, 8, 9, 1, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_8052aa9, { 1, 0 }
  uselistorder label %dec_label_pc_8052a40.dec_label_pc_8052a40_crit_edge, { 1, 0 }
}

define i32 @function_8052ab1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052ab1:
  %v1_8052abf = add i32 %arg2, -1
  %v1_8052ac2 = urem i32 %v1_8052abf, 32
  %v2_8052ac2 = icmp eq i32 %v1_8052ac2, 0
  %v2_8052ac5 = udiv i32 %v1_8052abf, 32
  br i1 %v2_8052ac2, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8052ab1
  %v5_8052ac8 = shl i32 1, %v1_8052ac2
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8052ab1, %bb
  %v6_8052aca = phi i32 [ 1, %dec_label_pc_8052ab1 ], [ %v5_8052ac8, %bb ]
  %v2_8052aca = mul nuw nsw i32 %v2_8052ac5, 4
  %v3_8052aca = add i32 %v2_8052aca, %arg1
  %v4_8052aca = inttoptr i32 %v3_8052aca to i32*
  %v5_8052aca = load i32, i32* %v4_8052aca, align 4
  %v7_8052aca = and i32 %v5_8052aca, %v6_8052aca
  %v8_8052aca = icmp eq i32 %v7_8052aca, 0
  %v1_8052ace = icmp eq i1 %v8_8052aca, false
  %v2_8052ace = zext i1 %v1_8052ace to i32
  ret i32 %v2_8052ace

; uselistorder directives
  uselistorder i32 %v1_8052ac2, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8052ad5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052ad5:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052ad5 = load i32, i32* @ebx, align 4
  store i32 %v0_8052ad5, i32* %stack_var_-4, align 4
  %v1_8052ae3 = add i32 %arg2, -1
  %v1_8052ae6 = urem i32 %v1_8052ae3, 32
  %v2_8052ae6 = icmp eq i32 %v1_8052ae6, 0
  store i32 %v1_8052ae6, i32* @ecx, align 4
  %v2_8052ae9 = udiv i32 %v1_8052ae3, 32
  store i32 %v2_8052ae9, i32* @edx, align 4
  br i1 %v2_8052ae6, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8052ad5
  %v5_8052aec = shl i32 1, %v1_8052ae6
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8052ad5, %bb
  %v6_8052aee = phi i32 [ 1, %dec_label_pc_8052ad5 ], [ %v5_8052aec, %bb ]
  %v2_8052aee = mul nuw nsw i32 %v2_8052ae9, 4
  %v3_8052aee = add i32 %v2_8052aee, %arg1
  %v4_8052aee = inttoptr i32 %v3_8052aee to i32*
  %v5_8052aee = load i32, i32* %v4_8052aee, align 4
  %v7_8052aee = or i32 %v5_8052aee, %v6_8052aee
  store i32 %v7_8052aee, i32* %v4_8052aee, align 4
  %v2_8052af3 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052af3, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8052ae9, { 1, 0 }
  uselistorder i32 %v1_8052ae6, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8052af5() local_unnamed_addr {
dec_label_pc_8052af5:
  %v0_8052af5 = load i32, i32* @eax, align 4
  %v6_8052b08 = icmp ugt i32 %v0_8052af5, 16777215
  br i1 %v6_8052b08, label %dec_label_pc_8052b19, label %dec_label_pc_8052b0a

dec_label_pc_8052b0a:                             ; preds = %dec_label_pc_8052af5
  %tmp = icmp ult i32 %v0_8052af5, 256
  %v2_8052af8 = udiv i32 %v0_8052af5, 256
  %v2_8052b0a = call i32 @llvm.ctlz.i32(i32 %v2_8052af8, i1 true)
  %v3_8052b0a = xor i32 %v2_8052b0a, 31
  %v5_8052b0a = select i1 %tmp, i32 95, i32 %v3_8052b0a
  %v1_8052b0d = add nuw nsw i32 %v5_8052b0a, 6
  %v2_8052b10 = urem i32 %v1_8052b0d, 32
  %v4_8052b10 = icmp eq i32 %v2_8052b10, 0
  br i1 %v4_8052b10, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8052b0a
  %v5_8052b10 = lshr i32 %v0_8052af5, %v2_8052b10
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8052b0a, %bb
  %v0_8052b12 = phi i32 [ %v0_8052af5, %dec_label_pc_8052b0a ], [ %v5_8052b10, %bb ]
  %v1_8052b12 = urem i32 %v0_8052b12, 4
  %v2_8052b15 = mul nuw nsw i32 %v5_8052b0a, 4
  %v3_8052b15 = or i32 %v1_8052b12, 32
  %v4_8052b15 = add nuw nsw i32 %v3_8052b15, %v2_8052b15
  br label %dec_label_pc_8052b19

dec_label_pc_8052b19:                             ; preds = %dec_label_pc_8052af5, %bb4
  %v0_8052b1a = phi i32 [ 95, %dec_label_pc_8052af5 ], [ %v4_8052b15, %bb4 ]
  ret i32 %v0_8052b1a

; uselistorder directives
  uselistorder i32 %v2_8052b10, { 1, 0 }
  uselistorder i32 %v0_8052af5, { 2, 3, 1, 0, 4 }
  uselistorder i1 true, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8052b19, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_8052b1b(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052b1b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052b1b = load i32, i32* @ebp, align 4
  %v0_8052b1c = load i32, i32* @edi, align 4
  %v0_8052b1d = load i32, i32* @esi, align 4
  %v0_8052b1e = load i32, i32* @ebx, align 4
  store i32 %v0_8052b1e, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052b30 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052b30, i32* @eax, align 4
  store i32 %v2_8052b30, i32* %stack_var_-92, align 4
  %v2_8052b35 = call i32 @function_8053f04(i32 %v2_8052b30, i32 134561537)
  store i32 %v2_8052b35, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805603c.45 to i32), i32* %stack_var_-92, align 4
  %v1_8052b41 = call i32 @function_8053f01(i32 ptrtoint (i32* @global_var_805603c.45 to i32))
  store i32 %v1_8052b41, i32* %eax.global-to-local, align 4
  %v0_8052b49 = load i32, i32* %ebx.global-to-local, align 4
  %tmp124 = icmp ult i32 %v0_8052b49, -32
  br i1 %tmp124, label %dec_label_pc_8052b60, label %dec_label_pc_8052b4e

dec_label_pc_8052b4e:                             ; preds = %dec_label_pc_8052b1b
  %v0_8052b4e = load i32, i32* %stack_var_-92, align 4
  %v1_8052b4e = call i32 @function_80526bd(i32 %v0_8052b4e)
  store i32 %v1_8052b4e, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8052b55 = inttoptr i32 %v1_8052b4e to i32*
  store i32 12, i32* %v1_8052b55, align 4
  br label %dec_label_pc_8053285

dec_label_pc_8052b60:                             ; preds = %dec_label_pc_8052b1b
  %v1_8052b60 = add i32 %v0_8052b49, 11
  %tmp125 = icmp ult i32 %v1_8052b60, 16
  br i1 %tmp125, label %dec_label_pc_8052b77, label %dec_label_pc_8052b70

dec_label_pc_8052b70:                             ; preds = %dec_label_pc_8052b60
  %v1_8052b70 = and i32 %v1_8052b60, -8
  br label %dec_label_pc_8052b77

dec_label_pc_8052b77:                             ; preds = %dec_label_pc_8052b60, %dec_label_pc_8052b70
  %storemerge135 = phi i32 [ %v1_8052b70, %dec_label_pc_8052b70 ], [ %v1_8052b60, %dec_label_pc_8052b60 ]
  %v1_8052f0f = phi i32 [ %v1_8052b70, %dec_label_pc_8052b70 ], [ 16, %dec_label_pc_8052b60 ]
  store i32 %storemerge135, i32* %eax.global-to-local, align 4
  %v0_8052b77 = load i8, i8* @global_var_8056400.46, align 1
  %v1_8052b77 = sext i8 %v0_8052b77 to i32
  store i32 %v1_8052b77, i32* @ebx, align 4
  %v3_8052b7d = urem i8 %v0_8052b77, 2
  %v4_8052b7d = icmp eq i8 %v3_8052b7d, 0
  %v1_8052b80 = icmp eq i1 %v4_8052b7d, false
  br i1 %v1_8052b80, label %dec_label_pc_8052b9f, label %dec_label_pc_8052b82

dec_label_pc_8052b82:                             ; preds = %dec_label_pc_8052b77
  %v2_8052b82 = icmp eq i8 %v0_8052b77, 0
  %v1_8052b84 = icmp eq i1 %v2_8052b82, false
  br i1 %v1_8052b84, label %dec_label_pc_8052e7a, label %dec_label_pc_8052b8a

dec_label_pc_8052b8a:                             ; preds = %dec_label_pc_8052b82
  store i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32* %stack_var_-92, align 4
  %v2_8052b92 = call i32 @function_8053738(i32* bitcast (i8* @global_var_8056400.46 to i32*))
  store i32 %v2_8052b92, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052e7a

dec_label_pc_8052b9f:                             ; preds = %dec_label_pc_8052b77
  %v11_8052b9f = trunc i32 %v1_8052f0f to i8
  %v8_8052ba3 = icmp ugt i8 %v11_8052b9f, %v0_8052b77
  br i1 %v8_8052ba3, label %dec_label_pc_8052bc0, label %dec_label_pc_8052ba5

dec_label_pc_8052ba5:                             ; preds = %dec_label_pc_8052b9f
  %v2_8052ba9 = udiv i32 %v1_8052f0f, 2
  store i32 %v2_8052ba9, i32* %eax.global-to-local, align 4
  %v1_8052bab = add i32 %v2_8052ba9, ptrtoint (i8* @global_var_8056400.46 to i32)
  store i32 %v1_8052bab, i32* %ecx.global-to-local, align 4
  %v1_8052bb1 = add i32 %v2_8052ba9, add (i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32 -4)
  %v2_8052bb1 = inttoptr i32 %v1_8052bb1 to i32*
  %v3_8052bb1 = load i32, i32* %v2_8052bb1, align 4
  store i32 %v3_8052bb1, i32* %edx.global-to-local, align 4
  %v1_8052bb4 = icmp eq i32 %v3_8052bb1, 0
  br i1 %v1_8052bb4, label %dec_label_pc_8052bc0, label %dec_label_pc_8052bb8

dec_label_pc_8052bb8:                             ; preds = %dec_label_pc_8052ba5
  %v1_8052bb8 = add i32 %v3_8052bb1, 8
  %v2_8052bb8 = inttoptr i32 %v1_8052bb8 to i32*
  %v3_8052bb8 = load i32, i32* %v2_8052bb8, align 4
  store i32 %v3_8052bb8, i32* %eax.global-to-local, align 4
  store i32 %v3_8052bb8, i32* %v2_8052bb1, align 4
  br label %dec_label_pc_8052bf9

dec_label_pc_8052bc0:                             ; preds = %dec_label_pc_8052ba5, %dec_label_pc_8052b9f
  %v8_8052bc0 = icmp ult i32 %v1_8052f0f, 255
  %v6_8052bc8 = icmp ugt i32 %v1_8052f0f, 255
  store i32 %v1_8052f0f, i32* @eax, align 4
  br i1 %v6_8052bc8, label %dec_label_pc_8052c01, label %dec_label_pc_8052bca

dec_label_pc_8052bca:                             ; preds = %dec_label_pc_8052bc0
  %v2_8052bce = udiv i32 %v1_8052f0f, 8
  store i32 %v2_8052bce, i32* %eax.global-to-local, align 4
  %v1_8052bd5 = mul nuw i32 %v2_8052bce, 8
  %v2_8052bd5 = add i32 %v1_8052bd5, ptrtoint (i32* @global_var_805642c.47 to i32)
  store i32 %v2_8052bd5, i32* %ecx.global-to-local, align 4
  %v1_8052bdc = add i32 %v1_8052bd5, add (i32 ptrtoint (i32* @global_var_805642c.47 to i32), i32 12)
  %v2_8052bdc = inttoptr i32 %v1_8052bdc to i32*
  %v3_8052bdc = load i32, i32* %v2_8052bdc, align 4
  store i32 %v3_8052bdc, i32* %edx.global-to-local, align 4
  %v12_8052bdf = icmp eq i32 %v3_8052bdc, %v2_8052bd5
  br i1 %v12_8052bdf, label %dec_label_pc_8052cfd.preheader, label %dec_label_pc_8052be7

dec_label_pc_8052be7:                             ; preds = %dec_label_pc_8052bca
  store i32 %v1_8052f0f, i32* %ebx.global-to-local, align 4
  %v1_8052beb = add i32 %v3_8052bdc, 12
  %v2_8052beb = inttoptr i32 %v1_8052beb to i32*
  %v3_8052beb = load i32, i32* %v2_8052beb, align 4
  store i32 %v3_8052beb, i32* %eax.global-to-local, align 4
  store i32 %v3_8052beb, i32* %v2_8052bdc, align 4
  %v0_8052bf1 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052bf1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052bf1 = add i32 %v0_8052bf1, 4
  %v3_8052bf1 = add i32 %v2_8052bf1, %v1_8052bf1
  %v4_8052bf1 = inttoptr i32 %v3_8052bf1 to i32*
  %v5_8052bf1 = load i32, i32* %v4_8052bf1, align 4
  %v6_8052bf1 = or i32 %v5_8052bf1, 1
  store i32 %v6_8052bf1, i32* %v4_8052bf1, align 4
  %v0_8052bf6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052bf6 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052bf6 = add i32 %v1_8052bf6, 8
  %v3_8052bf6 = inttoptr i32 %v2_8052bf6 to i32*
  store i32 %v0_8052bf6, i32* %v3_8052bf6, align 4
  br label %dec_label_pc_8052bf9

dec_label_pc_8052bf9:                             ; preds = %dec_label_pc_8052f96, %dec_label_pc_8052fa8, %dec_label_pc_8052bb8, %dec_label_pc_8052be7
  %v0_8052bf9 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052bf9 = add i32 %v0_8052bf9, 8
  store i32 %v1_8052bf9, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053274

dec_label_pc_8052c01:                             ; preds = %dec_label_pc_8052bc0
  %v0_8052c05 = call i32 @function_8052af5()
  store i32 %v0_8052c05, i32* %eax.global-to-local, align 4
  %v3_8052c0a = and i8 %v0_8052b77, 2
  %v4_8052c0a = icmp eq i8 %v3_8052c0a, 0
  %v6_8052c0a = zext i8 %v3_8052c0a to i32
  %v9_8052c0a = and i32 %v1_8052b77, -256
  %v10_8052c0a = or i32 %v9_8052c0a, %v6_8052c0a
  store i32 %v10_8052c0a, i32* @ebx, align 4
  br i1 %v4_8052c0a, label %dec_label_pc_8052cfd.preheader, label %dec_label_pc_8052c17

dec_label_pc_8052c17:                             ; preds = %dec_label_pc_8052c01
  store i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32* %stack_var_-92, align 4
  %v2_8052c1f = call i32 @function_8053738(i32* bitcast (i8* @global_var_8056400.46 to i32*))
  store i32 %v2_8052c1f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052cfd.preheader

dec_label_pc_8052cfd.preheader:                   ; preds = %dec_label_pc_8052c17, %dec_label_pc_8052bca, %dec_label_pc_8052c01
  %stack_var_-40.0.ph = phi i32 [ %v2_8052bce, %dec_label_pc_8052bca ], [ %v0_8052c05, %dec_label_pc_8052c17 ], [ %v0_8052c05, %dec_label_pc_8052c01 ]
  %v0_8052cfd9 = load i32, i32* @global_var_8056440.50, align 64
  store i32 %v0_8052cfd9, i32* @ebp, align 4
  %v9_8052d0315 = icmp eq i32 %v0_8052cfd9, 134571060
  %v1_8052d0917 = icmp eq i1 %v9_8052d0315, false
  br i1 %v1_8052d0917, label %dec_label_pc_8052c2c.lr.ph, label %dec_label_pc_8052d0f

dec_label_pc_8052c2c.lr.ph:                       ; preds = %dec_label_pc_8052cfd.preheader
  %v1_8052c53 = add i32 %v1_8052f0f, 16
  br label %dec_label_pc_8052c2c

dec_label_pc_8052c2c:                             ; preds = %dec_label_pc_8052c2c.lr.ph, %dec_label_pc_8052cfd
  %v1_8053226 = phi i32 [ %v0_8052cfd9, %dec_label_pc_8052c2c.lr.ph ], [ %v0_8052cfd, %dec_label_pc_8052cfd ]
  %v1_8052c2c = add i32 %v1_8053226, 4
  %v2_8052c2c = inttoptr i32 %v1_8052c2c to i32*
  %v3_8052c2c = load i32, i32* %v2_8052c2c, align 4
  %v1_8052c2f = add i32 %v1_8053226, 12
  %v2_8052c2f = inttoptr i32 %v1_8052c2f to i32*
  %v3_8052c2f = load i32, i32* %v2_8052c2f, align 4
  store i32 %v3_8052c2f, i32* %edx.global-to-local, align 4
  %v1_8052c32 = and i32 %v3_8052c2c, -4
  store i32 %v1_8052c32, i32* @edi, align 4
  br i1 %v6_8052bc8, label %dec_label_pc_8052c5e, label %dec_label_pc_8052c3f

dec_label_pc_8052c3f:                             ; preds = %dec_label_pc_8052c2c
  %v9_8052c3f = icmp eq i32 %v3_8052c2f, 134571060
  %v1_8052c45 = icmp eq i1 %v9_8052c3f, false
  br i1 %v1_8052c45, label %dec_label_pc_8052c5e, label %dec_label_pc_8052c47

dec_label_pc_8052c47:                             ; preds = %dec_label_pc_8052c3f
  %v1_8052c47 = load i32, i32* @global_var_8056430.48, align 16
  %v12_8052c47 = icmp eq i32 %v1_8053226, %v1_8052c47
  %v1_8052c4d = icmp eq i1 %v12_8052c47, false
  br i1 %v1_8052c4d, label %dec_label_pc_8052c5e, label %dec_label_pc_8052c4f

dec_label_pc_8052c4f:                             ; preds = %dec_label_pc_8052c47
  store i32 %v1_8052c53, i32* %eax.global-to-local, align 4
  %v6_8052c58 = icmp ugt i32 %v1_8052c32, %v1_8052c53
  br i1 %v6_8052c58, label %dec_label_pc_805320f, label %dec_label_pc_8052c5e

dec_label_pc_8052c5e:                             ; preds = %dec_label_pc_8052c4f, %dec_label_pc_8052c47, %dec_label_pc_8052c3f, %dec_label_pc_8052c2c
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %eax.global-to-local, align 4
  %v2_8052c63 = add i32 %v3_8052c2f, 8
  %v3_8052c63 = inttoptr i32 %v2_8052c63 to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v3_8052c63, align 4
  %v0_8052c66 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8052c66, i32* @global_var_8056440.50, align 4
  %v0_8052c69 = load i32, i32* @edi, align 4
  %v15_8052c69 = icmp eq i32 %v0_8052c69, %v1_8052f0f
  br i1 %v15_8052c69, label %dec_label_pc_8053250, label %dec_label_pc_8052c73

dec_label_pc_8052c73:                             ; preds = %dec_label_pc_8052c5e
  %v6_8052c79 = icmp ugt i32 %v0_8052c69, 255
  br i1 %v6_8052c79, label %dec_label_pc_8052c8c, label %dec_label_pc_8052c7b

dec_label_pc_8052c7b:                             ; preds = %dec_label_pc_8052c73
  %v2_8052c7d = udiv i32 %v0_8052c69, 8
  store i32 %v2_8052c7d, i32* %esi.global-to-local, align 4
  %v1_8052c80 = mul nuw i32 %v2_8052c7d, 8
  %v2_8052c80 = add i32 %v1_8052c80, 134571052
  store i32 %v2_8052c80, i32* @ebx, align 4
  %v1_8052c87 = add i32 %v1_8052c80, 134571060
  %v2_8052c87 = inttoptr i32 %v1_8052c87 to i32*
  %v3_8052c87 = load i32, i32* %v2_8052c87, align 4
  store i32 %v3_8052c87, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052cd5

dec_label_pc_8052c8c:                             ; preds = %dec_label_pc_8052c73
  store i32 %v0_8052c69, i32* @eax, align 4
  %v0_8052c8e = call i32 @function_8052af5()
  store i32 %v0_8052c8e, i32* %esi.global-to-local, align 4
  %v1_8052c95 = mul i32 %v0_8052c8e, 8
  %v2_8052c95 = add i32 %v1_8052c95, ptrtoint (i32* @global_var_805642c.47 to i32)
  store i32 %v2_8052c95, i32* %eax.global-to-local, align 4
  %v1_8052c9c = add i32 %v1_8052c95, add (i32 ptrtoint (i32* @global_var_805642c.47 to i32), i32 8)
  %v2_8052c9c = inttoptr i32 %v1_8052c9c to i32*
  %v3_8052c9c = load i32, i32* %v2_8052c9c, align 4
  store i32 %v3_8052c9c, i32* %edx.global-to-local, align 4
  store i32 %v3_8052c9c, i32* @ebx, align 4
  %v12_8052ca5 = icmp eq i32 %v3_8052c9c, %v2_8052c95
  br i1 %v12_8052ca5, label %dec_label_pc_8052cd5, label %dec_label_pc_8052ca9

dec_label_pc_8052ca9:                             ; preds = %dec_label_pc_8052c8c
  %v1_8052ca9 = add i32 %v1_8052c95, add (i32 ptrtoint (i32* @global_var_805642c.47 to i32), i32 12)
  %v2_8052ca9 = inttoptr i32 %v1_8052ca9 to i32*
  %v3_8052ca9 = load i32, i32* %v2_8052ca9, align 4
  store i32 %v3_8052ca9, i32* @ebx, align 4
  %v0_8052cac = load i32, i32* @edi, align 4
  %v2_8052cac = add i32 %v3_8052ca9, 4
  %v3_8052cac = inttoptr i32 %v2_8052cac to i32*
  %v4_8052cac = load i32, i32* %v3_8052cac, align 4
  %v10_8052cac = icmp ult i32 %v0_8052cac, %v4_8052cac
  %v1_8052caf = icmp eq i1 %v10_8052cac, false
  br i1 %v1_8052caf, label %dec_label_pc_8052cb7, label %dec_label_pc_8052cd5

dec_label_pc_8052cb7:                             ; preds = %dec_label_pc_8052ca9
  %v1_8052cb9 = or i32 %v0_8052cac, 1
  store i32 %v1_8052cb9, i32* %eax.global-to-local, align 4
  store i32 %v3_8052c9c, i32* %ebx.global-to-local, align 4
  %v2_8052ccd105 = add i32 %v3_8052c9c, 4
  %v3_8052ccd106 = inttoptr i32 %v2_8052ccd105 to i32*
  %v4_8052ccd107 = load i32, i32* %v3_8052ccd106, align 4
  %v10_8052ccd108 = icmp ult i32 %v1_8052cb9, %v4_8052ccd107
  br i1 %v10_8052ccd108, label %dec_label_pc_8052cbe, label %dec_label_pc_8052cd2

dec_label_pc_8052cbe:                             ; preds = %dec_label_pc_8052cb7, %dec_label_pc_8052cbe
  %v0_8052cd2109 = phi i32 [ %v3_8052cc2, %dec_label_pc_8052cbe ], [ %v3_8052c9c, %dec_label_pc_8052cb7 ]
  store i32 %v0_8052cd2109, i32* %ecx.global-to-local, align 4
  %v1_8052cc2 = add i32 %v0_8052cd2109, 8
  %v2_8052cc2 = inttoptr i32 %v1_8052cc2 to i32*
  %v3_8052cc2 = load i32, i32* %v2_8052cc2, align 4
  store i32 %v3_8052cc2, i32* %ecx.global-to-local, align 4
  store i32 %v3_8052cc2, i32* %ebx.global-to-local, align 4
  %v2_8052ccd = add i32 %v3_8052cc2, 4
  %v3_8052ccd = inttoptr i32 %v2_8052ccd to i32*
  %v4_8052ccd = load i32, i32* %v3_8052ccd, align 4
  %v10_8052ccd = icmp ult i32 %v1_8052cb9, %v4_8052ccd
  br i1 %v10_8052ccd, label %dec_label_pc_8052cbe, label %dec_label_pc_8052cd2

dec_label_pc_8052cd2:                             ; preds = %dec_label_pc_8052cbe, %dec_label_pc_8052cb7
  %v0_8052cd2.lcssa = phi i32 [ %v3_8052c9c, %dec_label_pc_8052cb7 ], [ %v3_8052cc2, %dec_label_pc_8052cbe ]
  %v1_8052cd2 = add i32 %v0_8052cd2.lcssa, 12
  %v2_8052cd2 = inttoptr i32 %v1_8052cd2 to i32*
  %v3_8052cd2 = load i32, i32* %v2_8052cd2, align 4
  store i32 %v3_8052cd2, i32* @ebx, align 4
  br label %dec_label_pc_8052cd5

dec_label_pc_8052cd5:                             ; preds = %dec_label_pc_8052c7b, %dec_label_pc_8052ca9, %dec_label_pc_8052c8c, %dec_label_pc_8052cd2
  %v0_8052cd5 = phi i32 [ %v0_8052c8e, %dec_label_pc_8052c8c ], [ %v0_8052c8e, %dec_label_pc_8052cd2 ], [ %v0_8052c8e, %dec_label_pc_8052ca9 ], [ %v2_8052c7d, %dec_label_pc_8052c7b ]
  %stack_var_-64.1 = phi i32 [ %v2_8052c95, %dec_label_pc_8052c8c ], [ %v0_8052cd2.lcssa, %dec_label_pc_8052cd2 ], [ %v2_8052c95, %dec_label_pc_8052ca9 ], [ %v3_8052c87, %dec_label_pc_8052c7b ]
  %v1_8052cd7 = urem i32 %v0_8052cd5, 32
  %v2_8052cd7 = icmp eq i32 %v1_8052cd7, 0
  store i32 %v1_8052cd7, i32* %esi.global-to-local, align 4
  store i32 %v1_8052cd7, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8052ce1 = sdiv i32 %v0_8052cd5, 32
  store i32 %v2_8052ce1, i32* %edx.global-to-local, align 4
  br i1 %v2_8052cd7, label %dec_label_pc_8052cfd, label %bb

bb:                                               ; preds = %dec_label_pc_8052cd5
  %v5_8052ce4 = shl i32 1, %v1_8052cd7
  store i32 %v5_8052ce4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052cfd

dec_label_pc_8052cfd:                             ; preds = %dec_label_pc_8052cd5, %bb
  %v5_8052ce6 = phi i32 [ 1, %dec_label_pc_8052cd5 ], [ %v5_8052ce4, %bb ]
  %v1_8052ce6 = mul nsw i32 %v2_8052ce1, 4
  %v2_8052ce6 = add i32 %v1_8052ce6, ptrtoint (i32* @global_var_8056734.51 to i32)
  %v3_8052ce6 = inttoptr i32 %v2_8052ce6 to i32*
  %v4_8052ce6 = load i32, i32* %v3_8052ce6, align 4
  %v6_8052ce6 = or i32 %v4_8052ce6, %v5_8052ce6
  store i32 %v6_8052ce6, i32* %v3_8052ce6, align 4
  %v0_8052ced = load i32, i32* @ebx, align 4
  %v1_8052ced = load i32, i32* @ebp, align 4
  %v2_8052ced = add i32 %v1_8052ced, 12
  %v3_8052ced = inttoptr i32 %v2_8052ced to i32*
  store i32 %v0_8052ced, i32* %v3_8052ced, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8052cf4 = load i32, i32* @ebp, align 4
  %v2_8052cf4 = add i32 %v1_8052cf4, 8
  %v3_8052cf4 = inttoptr i32 %v2_8052cf4 to i32*
  store i32 %stack_var_-64.1, i32* %v3_8052cf4, align 4
  %v0_8052cf7 = load i32, i32* @ebp, align 4
  %v1_8052cf7 = load i32, i32* @ebx, align 4
  %v2_8052cf7 = add i32 %v1_8052cf7, 8
  %v3_8052cf7 = inttoptr i32 %v2_8052cf7 to i32*
  store i32 %v0_8052cf7, i32* %v3_8052cf7, align 4
  %v0_8052cfa = load i32, i32* @ebp, align 4
  %v1_8052cfa = load i32, i32* @esi, align 4
  %v2_8052cfa = add i32 %v1_8052cfa, 12
  %v3_8052cfa = inttoptr i32 %v2_8052cfa to i32*
  store i32 %v0_8052cfa, i32* %v3_8052cfa, align 4
  %v0_8052cfd = load i32, i32* @global_var_8056440.50, align 64
  store i32 %v0_8052cfd, i32* @ebp, align 4
  %v9_8052d03 = icmp eq i32 %v0_8052cfd, 134571060
  %v1_8052d09 = icmp eq i1 %v9_8052d03, false
  br i1 %v1_8052d09, label %dec_label_pc_8052c2c, label %dec_label_pc_8052d0f

dec_label_pc_8052d0f:                             ; preds = %dec_label_pc_8052cfd, %dec_label_pc_8052cfd.preheader
  br i1 %v8_8052bc0, label %dec_label_pc_8052d9d, label %dec_label_pc_8052d1d

dec_label_pc_8052d1d:                             ; preds = %dec_label_pc_8052d0f
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8052d21 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8052d21 = add i32 %v1_8052d21, ptrtoint (i32* @global_var_805642c.47 to i32)
  store i32 %v2_8052d21, i32* %edx.global-to-local, align 4
  %v1_8052d28 = add i32 %v1_8052d21, add (i32 ptrtoint (i32* @global_var_805642c.47 to i32), i32 12)
  %v2_8052d28 = inttoptr i32 %v1_8052d28 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052d28, align 4
  br label %dec_label_pc_8052d99

dec_label_pc_8052d2d:                             ; preds = %dec_label_pc_8052d99
  %v1_8052d2d = add i32 %v4_8052d44, 4
  %v2_8052d2d = inttoptr i32 %v1_8052d2d to i32*
  %v3_8052d2d = load i32, i32* %v2_8052d2d, align 4
  store i32 %v3_8052d2d, i32* %ebx.global-to-local, align 4
  %v1_8052d30 = add i32 %v4_8052d44, 12
  %v2_8052d30 = inttoptr i32 %v1_8052d30 to i32*
  %v3_8052d30 = load i32, i32* %v2_8052d30, align 4
  store i32 %v3_8052d30, i32* @ecx, align 4
  %v1_8052d33 = and i32 %v3_8052d2d, -4
  store i32 %v1_8052d33, i32* @ebx, align 4
  %v10_8052d36 = icmp ult i32 %v1_8052d33, %v1_8052f0f
  br i1 %v10_8052d36, label %dec_label_pc_8052d99, label %dec_label_pc_8052d3c

dec_label_pc_8052d3c:                             ; preds = %dec_label_pc_8052d2d
  %v1_8052d3c = add i32 %v4_8052d44, 8
  %v2_8052d3c = inttoptr i32 %v1_8052d3c to i32*
  %v3_8052d3c = load i32, i32* %v2_8052d3c, align 4
  store i32 %v3_8052d3c, i32* @edx, align 4
  %v1_8052d3f = add i32 %v3_8052d3c, 12
  %v2_8052d3f = inttoptr i32 %v1_8052d3f to i32*
  %v3_8052d3f = load i32, i32* %v2_8052d3f, align 4
  %v15_8052d3f = icmp eq i32 %v3_8052d3f, %v4_8052d44
  %v1_8052d42 = icmp eq i1 %v15_8052d3f, false
  br i1 %v1_8052d42, label %dec_label_pc_8052d49, label %dec_label_pc_8052d44

dec_label_pc_8052d44:                             ; preds = %dec_label_pc_8052d3c
  %v1_8052d44 = add i32 %v3_8052d30, 8
  %v2_8052d44 = inttoptr i32 %v1_8052d44 to i32*
  %v3_8052d44 = load i32, i32* %v2_8052d44, align 4
  %v15_8052d44 = icmp eq i32 %v3_8052d44, %v4_8052d44
  br i1 %v15_8052d44, label %dec_label_pc_8052d4e, label %dec_label_pc_8052d49

dec_label_pc_8052d49:                             ; preds = %dec_label_pc_8052d44, %dec_label_pc_8052d3c
  %v0_8052d49 = call i32 @function_8053a7c()
  store i32 %v0_8052d49, i32* %eax.global-to-local, align 4
  %v0_8052d4e.pre = load i32, i32* @ebx, align 4
  %v0_8052d54.pre = load i32, i32* @ecx, align 4
  %v1_8052d54.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052d4e

dec_label_pc_8052d4e:                             ; preds = %dec_label_pc_8052d44, %dec_label_pc_8052d49
  %v1_8052d54 = phi i32 [ %v3_8052d3c, %dec_label_pc_8052d44 ], [ %v1_8052d54.pre, %dec_label_pc_8052d49 ]
  %v0_8052d54 = phi i32 [ %v3_8052d30, %dec_label_pc_8052d44 ], [ %v0_8052d54.pre, %dec_label_pc_8052d49 ]
  %v0_8052d4e = phi i32 [ %v1_8052d33, %dec_label_pc_8052d44 ], [ %v0_8052d4e.pre, %dec_label_pc_8052d49 ]
  %v5_8052d50 = sub i32 %v0_8052d4e, %v1_8052f0f
  store i32 %v5_8052d50, i32* %esi.global-to-local, align 4
  %v2_8052d54 = add i32 %v1_8052d54, 12
  %v3_8052d54 = inttoptr i32 %v2_8052d54 to i32*
  store i32 %v0_8052d54, i32* %v3_8052d54, align 4
  %v0_8052d57 = load i32, i32* @edx, align 4
  %v1_8052d57 = load i32, i32* @ecx, align 4
  %v2_8052d57 = add i32 %v1_8052d57, 8
  %v3_8052d57 = inttoptr i32 %v2_8052d57 to i32*
  store i32 %v0_8052d57, i32* %v3_8052d57, align 4
  %v0_8052d5a = load i32, i32* %esi.global-to-local, align 4
  %v0_8052d5d = load i32, i32* %eax.global-to-local, align 4
  %v1_8052d5d = add i32 %v0_8052d5d, 8
  store i32 %v1_8052d5d, i32* %ecx.global-to-local, align 4
  %tmp126 = icmp ult i32 %v0_8052d5a, 16
  br i1 %tmp126, label %dec_label_pc_805325e, label %dec_label_pc_8052d66

dec_label_pc_8052d66:                             ; preds = %dec_label_pc_8052d4e
  %v2_8052d6a = add i32 %v0_8052d5d, %v1_8052f0f
  store i32 %v2_8052d6a, i32* %edx.global-to-local, align 4
  %v1_8052d6d = or i32 %v1_8052f0f, 1
  store i32 %v1_8052d6d, i32* %ebx.global-to-local, align 4
  %v2_8052d70 = add i32 %v0_8052d5d, 4
  %v3_8052d70 = inttoptr i32 %v2_8052d70 to i32*
  store i32 %v1_8052d6d, i32* %v3_8052d70, align 4
  %v0_8052d73 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052d75 = or i32 %v0_8052d73, 1
  store i32 %v1_8052d75, i32* %eax.global-to-local, align 4
  %v0_8052d78 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052d78 = load i32, i32* @ebp, align 4
  %v2_8052d78 = add i32 %v1_8052d78, 8
  %v3_8052d78 = inttoptr i32 %v2_8052d78 to i32*
  store i32 %v0_8052d78, i32* %v3_8052d78, align 4
  %v0_8052d7b = load i32, i32* %edx.global-to-local, align 4
  %v1_8052d7b = load i32, i32* @ebp, align 4
  %v2_8052d7b = add i32 %v1_8052d7b, 12
  %v3_8052d7b = inttoptr i32 %v2_8052d7b to i32*
  store i32 %v0_8052d7b, i32* %v3_8052d7b, align 4
  %v0_8052d7e = load i32, i32* %edx.global-to-local, align 4
  %v1_8052d7e = add i32 %v0_8052d7e, 8
  %v2_8052d7e = inttoptr i32 %v1_8052d7e to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_8052d7e, align 4
  %v0_8052d85 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052d85 = add i32 %v0_8052d85, 12
  %v2_8052d85 = inttoptr i32 %v1_8052d85 to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_8052d85, align 4
  %v0_8052d8c = load i32, i32* %eax.global-to-local, align 4
  %v1_8052d8c = load i32, i32* %edx.global-to-local, align 4
  %v2_8052d8c = add i32 %v1_8052d8c, 4
  %v3_8052d8c = inttoptr i32 %v2_8052d8c to i32*
  store i32 %v0_8052d8c, i32* %v3_8052d8c, align 4
  %v0_8052d8f = load i32, i32* %esi.global-to-local, align 4
  %v1_8052d8f = load i32, i32* %edx.global-to-local, align 4
  %v3_8052d8f = add i32 %v1_8052d8f, %v0_8052d8f
  %v4_8052d8f = inttoptr i32 %v3_8052d8f to i32*
  store i32 %v0_8052d8f, i32* %v4_8052d8f, align 4
  br label %dec_label_pc_8053263

dec_label_pc_8052d99:                             ; preds = %dec_label_pc_8052d2d, %dec_label_pc_8052d1d
  %v4_8052d44 = phi i32 [ %storemerge1.pre, %dec_label_pc_8052d1d ], [ %v3_8052d30, %dec_label_pc_8052d2d ]
  store i32 %v4_8052d44, i32* %eax.global-to-local, align 4
  %v12_8052d99 = icmp eq i32 %v4_8052d44, %v2_8052d21
  %v1_8052d9b = icmp eq i1 %v12_8052d99, false
  br i1 %v1_8052d9b, label %dec_label_pc_8052d2d, label %dec_label_pc_8052d9d.loopexit

dec_label_pc_8052d9d.loopexit:                    ; preds = %dec_label_pc_8052d99
  br label %dec_label_pc_8052d9d

dec_label_pc_8052d9d:                             ; preds = %dec_label_pc_8052d9d.loopexit, %dec_label_pc_8052d0f
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8052da6 = add i32 %stack_var_-40.0.ph, 1
  %v2_8052da9 = udiv i32 %v1_8052da6, 32
  store i32 %v2_8052da9, i32* @edi, align 4
  %v1_8052dac = mul i32 %v1_8052da6, 8
  %v2_8052dac = add i32 %v1_8052dac, ptrtoint (i32* @global_var_805642c.47 to i32)
  store i32 %v2_8052dac, i32* %ebx.global-to-local, align 4
  %v1_8052db3 = urem i32 %v1_8052da6, 32
  %v2_8052db3 = icmp eq i32 %v1_8052db3, 0
  store i32 %v1_8052db3, i32* %ecx.global-to-local, align 4
  %v1_8052db6 = mul nuw nsw i32 %v2_8052da9, 4
  %v2_8052db6 = add i32 %v1_8052db6, ptrtoint (i32* @global_var_8056734.51 to i32)
  %v3_8052db6 = inttoptr i32 %v2_8052db6 to i32*
  %v4_8052db6 = load i32, i32* %v3_8052db6, align 4
  store i32 %v4_8052db6, i32* %edx.global-to-local, align 4
  br i1 %v2_8052db3, label %.preheader, label %bb88

bb88:                                             ; preds = %dec_label_pc_8052d9d
  %v5_8052dbd = shl i32 1, %v1_8052db3
  store i32 %v5_8052dbd, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8052d9d, %bb88, %dec_label_pc_8052dfe
  %v1_8052dbf = phi i32 [ %v1_8052dbf.pre, %dec_label_pc_8052dfe ], [ %v4_8052db6, %bb88 ], [ %v4_8052db6, %dec_label_pc_8052d9d ]
  %v0_8052dc3 = phi i32 [ %v0_8052dbf.pre, %dec_label_pc_8052dfe ], [ %v5_8052dbd, %bb88 ], [ 1, %dec_label_pc_8052d9d ]
  %tmp89 = icmp ule i32 %v0_8052dc3, %v1_8052dbf
  %v1_8052dc3 = icmp eq i32 %v0_8052dc3, 0
  %v1_8052dc5 = icmp eq i1 %v1_8052dc3, false
  %or.cond = and i1 %tmp89, %v1_8052dc5
  br i1 %or.cond, label %dec_label_pc_8052dc3.dec_label_pc_8052df3.preheader_crit_edge, label %dec_label_pc_8052dc7.preheader

dec_label_pc_8052dc3.dec_label_pc_8052df3.preheader_crit_edge: ; preds = %.preheader
  %v0_8052dee7.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052df3.preheader

dec_label_pc_8052dc7.preheader:                   ; preds = %.preheader
  %v0_8052dc7.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052dc7

dec_label_pc_8052dc7:                             ; preds = %dec_label_pc_8052dc7.preheader, %dec_label_pc_8052dd1
  %v0_8052dc7 = phi i32 [ %v0_8052dc7.pre, %dec_label_pc_8052dc7.preheader ], [ %v1_8052dc7, %dec_label_pc_8052dd1 ]
  %v1_8052dc7 = add i32 %v0_8052dc7, 1
  store i32 %v1_8052dc7, i32* @edi, align 4
  %v6_8052dcb = icmp ugt i32 %v1_8052dc7, 2
  br i1 %v6_8052dcb, label %dec_label_pc_8052e7a.loopexit, label %dec_label_pc_8052dd1

dec_label_pc_8052dd1:                             ; preds = %dec_label_pc_8052dc7
  %v1_8052dd1 = mul i32 %v1_8052dc7, 4
  %v2_8052dd1 = add i32 %v1_8052dd1, ptrtoint (i32* @global_var_8056734.51 to i32)
  %v3_8052dd1 = inttoptr i32 %v2_8052dd1 to i32*
  %v4_8052dd1 = load i32, i32* %v3_8052dd1, align 4
  store i32 %v4_8052dd1, i32* %edx.global-to-local, align 4
  %v1_8052dd8 = icmp eq i32 %v4_8052dd1, 0
  br i1 %v1_8052dd8, label %dec_label_pc_8052dc7, label %dec_label_pc_8052ddc

dec_label_pc_8052ddc:                             ; preds = %dec_label_pc_8052dd1
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8052de3 = mul i32 %v1_8052dc7, 256
  store i32 %v2_8052de3, i32* %eax.global-to-local, align 4
  %v1_8052de6 = add i32 %v2_8052de3, ptrtoint (i32* @global_var_805642c.47 to i32)
  store i32 %v1_8052de6, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052df3.preheader

dec_label_pc_8052df3.preheader:                   ; preds = %dec_label_pc_8052dc3.dec_label_pc_8052df3.preheader_crit_edge, %dec_label_pc_8052ddc
  %v0_8052dee7 = phi i32 [ %v1_8052de6, %dec_label_pc_8052ddc ], [ %v0_8052dee7.pre, %dec_label_pc_8052dc3.dec_label_pc_8052df3.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8052ddc ], [ %v0_8052dc3, %dec_label_pc_8052dc3.dec_label_pc_8052df3.preheader_crit_edge ]
  %v0_8052e05 = phi i32 [ %v4_8052dd1, %dec_label_pc_8052ddc ], [ %v1_8052dbf, %dec_label_pc_8052dc3.dec_label_pc_8052df3.preheader_crit_edge ]
  %v2_8052df34 = and i32 %v0_8052e05, %esi.promoted
  %v3_8052df35 = icmp eq i32 %v2_8052df34, 0
  br i1 %v3_8052df35, label %dec_label_pc_8052dee, label %dec_label_pc_8052df7

dec_label_pc_8052dee:                             ; preds = %dec_label_pc_8052df3.preheader, %dec_label_pc_8052dee
  %v2_8052df118 = phi i32 [ %v2_8052df1, %dec_label_pc_8052dee ], [ %esi.promoted, %dec_label_pc_8052df3.preheader ]
  %v0_8052dee8 = phi i32 [ %v1_8052dee, %dec_label_pc_8052dee ], [ %v0_8052dee7, %dec_label_pc_8052df3.preheader ]
  %v1_8052dee = add i32 %v0_8052dee8, 8
  %v2_8052df1 = mul i32 %v2_8052df118, 2
  %v2_8052df3 = and i32 %v2_8052df1, %v0_8052e05
  %v3_8052df3 = icmp eq i32 %v2_8052df3, 0
  br i1 %v3_8052df3, label %dec_label_pc_8052dee, label %dec_label_pc_8052df3.dec_label_pc_8052df7_crit_edge

dec_label_pc_8052df3.dec_label_pc_8052df7_crit_edge: ; preds = %dec_label_pc_8052dee
  store i32 %v1_8052dee, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052df1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052df7

dec_label_pc_8052df7:                             ; preds = %dec_label_pc_8052df3.dec_label_pc_8052df7_crit_edge, %dec_label_pc_8052df3.preheader
  %v0_8052e07 = phi i32 [ %v2_8052df1, %dec_label_pc_8052df3.dec_label_pc_8052df7_crit_edge ], [ %esi.promoted, %dec_label_pc_8052df3.preheader ]
  %v1_8052e21 = phi i32 [ %v1_8052dee, %dec_label_pc_8052df3.dec_label_pc_8052df7_crit_edge ], [ %v0_8052dee7, %dec_label_pc_8052df3.preheader ]
  %v1_8052df7 = add i32 %v1_8052e21, 12
  %v2_8052df7 = inttoptr i32 %v1_8052df7 to i32*
  %v3_8052df7 = load i32, i32* %v2_8052df7, align 4
  store i32 %v3_8052df7, i32* %ecx.global-to-local, align 4
  %v12_8052dfa = icmp eq i32 %v3_8052df7, %v1_8052e21
  %v1_8052dfc = icmp eq i1 %v12_8052dfa, false
  br i1 %v1_8052dfc, label %dec_label_pc_8052e12, label %dec_label_pc_8052dfe

dec_label_pc_8052dfe:                             ; preds = %dec_label_pc_8052df7
  %v1_8052e00 = add i32 %v3_8052df7, 8
  store i32 %v1_8052e00, i32* %ebx.global-to-local, align 4
  %v1_8052e03 = sub i32 -1, %v0_8052e07
  store i32 %v1_8052e03, i32* %eax.global-to-local, align 4
  %v2_8052e05 = and i32 %v0_8052e05, %v1_8052e03
  store i32 %v2_8052e05, i32* %edx.global-to-local, align 4
  %v2_8052e07 = mul i32 %v0_8052e07, 2
  store i32 %v2_8052e07, i32* %esi.global-to-local, align 4
  %v1_8052e09 = load i32, i32* @edi, align 4
  %v2_8052e09 = mul i32 %v1_8052e09, 4
  %v3_8052e09 = add i32 %v2_8052e09, ptrtoint (i32* @global_var_8056734.51 to i32)
  %v4_8052e09 = inttoptr i32 %v3_8052e09 to i32*
  store i32 %v2_8052e05, i32* %v4_8052e09, align 4
  %v0_8052dbf.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8052dbf.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052e12:                             ; preds = %dec_label_pc_8052df7
  %v1_8052e12 = add i32 %v3_8052df7, 4
  %v2_8052e12 = inttoptr i32 %v1_8052e12 to i32*
  %v3_8052e12 = load i32, i32* %v2_8052e12, align 4
  store i32 %v3_8052e12, i32* %edx.global-to-local, align 4
  %v1_8052e15 = add i32 %v3_8052df7, 12
  %v2_8052e15 = inttoptr i32 %v1_8052e15 to i32*
  %v3_8052e15 = load i32, i32* %v2_8052e15, align 4
  store i32 %v3_8052e15, i32* %eax.global-to-local, align 4
  %v1_8052e18 = and i32 %v3_8052e12, -4
  store i32 %v1_8052e18, i32* %edx.global-to-local, align 4
  %v5_8052e1d = sub i32 %v1_8052e18, %v1_8052f0f
  store i32 %v5_8052e1d, i32* %esi.global-to-local, align 4
  store i32 %v3_8052e15, i32* %v2_8052df7, align 4
  %v0_8052e24 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052e24 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e24 = add i32 %v1_8052e24, 8
  %v3_8052e24 = inttoptr i32 %v2_8052e24 to i32*
  store i32 %v0_8052e24, i32* %v3_8052e24, align 4
  %v0_8052e27 = load i32, i32* %esi.global-to-local, align 4
  %tmp127 = icmp ult i32 %v0_8052e27, 16
  br i1 %tmp127, label %dec_label_pc_8052e2c, label %dec_label_pc_8052e33

dec_label_pc_8052e2c:                             ; preds = %dec_label_pc_8052e12
  %v0_8052e2c = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e2c = load i32, i32* %edx.global-to-local, align 4
  %v2_8052e2c = add i32 %v0_8052e2c, 4
  %v3_8052e2c = add i32 %v2_8052e2c, %v1_8052e2c
  %v4_8052e2c = inttoptr i32 %v3_8052e2c to i32*
  %v5_8052e2c = load i32, i32* %v4_8052e2c, align 4
  %v6_8052e2c = or i32 %v5_8052e2c, 1
  store i32 %v6_8052e2c, i32* %v4_8052e2c, align 4
  br label %dec_label_pc_8052e72

dec_label_pc_8052e33:                             ; preds = %dec_label_pc_8052e12
  store i32 %v1_8052f0f, i32* %eax.global-to-local, align 4
  %v0_8052e3c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052e3c = add i32 %v0_8052e3c, %v1_8052f0f
  store i32 %v2_8052e3c, i32* %edx.global-to-local, align 4
  %v1_8052e3f = load i32, i32* @ebp, align 4
  %v2_8052e3f = add i32 %v1_8052e3f, 8
  %v3_8052e3f = inttoptr i32 %v2_8052e3f to i32*
  store i32 %v2_8052e3c, i32* %v3_8052e3f, align 4
  %v0_8052e42 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e42 = load i32, i32* @ebp, align 4
  %v2_8052e42 = add i32 %v1_8052e42, 12
  %v3_8052e42 = inttoptr i32 %v2_8052e42 to i32*
  store i32 %v0_8052e42, i32* %v3_8052e42, align 4
  %v0_8052e45 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e45 = add i32 %v0_8052e45, 8
  %v2_8052e45 = inttoptr i32 %v1_8052e45 to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_8052e45, align 4
  %v0_8052e4c = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e4c = add i32 %v0_8052e4c, 12
  %v2_8052e4c = inttoptr i32 %v1_8052e4c to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_8052e4c, align 4
  br i1 %v6_8052bc8, label %dec_label_pc_8052e5b, label %dec_label_pc_8052e55

dec_label_pc_8052e55:                             ; preds = %dec_label_pc_8052e33
  %v0_8052e55 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8052e55, i32* @global_var_8056430.48, align 16
  br label %dec_label_pc_8052e5b

dec_label_pc_8052e5b:                             ; preds = %dec_label_pc_8052e33, %dec_label_pc_8052e55
  %v4_8052e5b = or i32 %v1_8052f0f, 1
  %v0_8052e60 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8052e5b, i32* %ebx.global-to-local, align 4
  %v1_8052e66 = or i32 %v0_8052e60, 1
  store i32 %v1_8052e66, i32* %eax.global-to-local, align 4
  %v1_8052e69 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052e69 = add i32 %v1_8052e69, 4
  %v3_8052e69 = inttoptr i32 %v2_8052e69 to i32*
  store i32 %v4_8052e5b, i32* %v3_8052e69, align 4
  %v0_8052e6c = load i32, i32* %esi.global-to-local, align 4
  %v1_8052e6c = load i32, i32* %edx.global-to-local, align 4
  %v3_8052e6c = add i32 %v1_8052e6c, %v0_8052e6c
  %v4_8052e6c = inttoptr i32 %v3_8052e6c to i32*
  store i32 %v0_8052e6c, i32* %v4_8052e6c, align 4
  %v0_8052e6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e6f = load i32, i32* %edx.global-to-local, align 4
  %v2_8052e6f = add i32 %v1_8052e6f, 4
  %v3_8052e6f = inttoptr i32 %v2_8052e6f to i32*
  store i32 %v0_8052e6f, i32* %v3_8052e6f, align 4
  br label %dec_label_pc_8052e72

dec_label_pc_8052e72:                             ; preds = %dec_label_pc_8052e2c, %dec_label_pc_8052e5b
  %v0_8052e72 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e72 = add i32 %v0_8052e72, 8
  store i32 %v1_8052e72, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053274

dec_label_pc_8052e7a.loopexit:                    ; preds = %dec_label_pc_8052dc7
  br label %dec_label_pc_8052e7a

dec_label_pc_8052e7a:                             ; preds = %dec_label_pc_8052e7a.loopexit, %dec_label_pc_8052b82, %dec_label_pc_8052b8a
  %v0_8052e7a = load i32, i32* @global_var_805642c.47, align 4
  store i32 %v0_8052e7a, i32* @ebx, align 4
  %v1_8052e84 = add i32 %v1_8052f0f, 16
  store i32 %v1_8052e84, i32* @esi, align 4
  %v1_8052e87 = add i32 %v0_8052e7a, 4
  %v2_8052e87 = inttoptr i32 %v1_8052e87 to i32*
  %v3_8052e87 = load i32, i32* %v2_8052e87, align 4
  %v1_8052e8e = and i32 %v3_8052e87, -4
  store i32 %v1_8052e8e, i32* %ecx.global-to-local, align 4
  %v7_8052e91 = icmp ult i32 %v1_8052e8e, %v1_8052e84
  br i1 %v7_8052e91, label %dec_label_pc_8052eb1, label %dec_label_pc_8052e95

dec_label_pc_8052e95:                             ; preds = %dec_label_pc_8052e7a
  %v2_8052e99 = add i32 %v0_8052e7a, %v1_8052f0f
  store i32 %v2_8052e99, i32* %edx.global-to-local, align 4
  %v1_8052e9c = or i32 %v1_8052f0f, 1
  store i32 %v1_8052e9c, i32* %eax.global-to-local, align 4
  store i32 %v2_8052e99, i32* @global_var_805642c.47, align 4
  store i32 %v1_8052e9c, i32* %v2_8052e87, align 4
  %v0_8052ea8 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8052ea8 = sub i32 %v0_8052ea8, %v1_8052f0f
  store i32 %v5_8052ea8, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053204

dec_label_pc_8052eb1:                             ; preds = %dec_label_pc_8052e7a
  %v0_8052eb1 = load i32, i32* @global_var_805675c.52, align 4
  store i32 %v0_8052eb1, i32* %edx.global-to-local, align 4
  %v0_8052eb7 = load i8, i8* @global_var_8056400.46, align 1024
  %v1_8052eb7 = and i8 %v0_8052eb7, 2
  %v2_8052eb7 = icmp eq i8 %v1_8052eb7, 0
  br i1 %v2_8052eb7, label %dec_label_pc_8052ee5, label %dec_label_pc_8052ec0

dec_label_pc_8052ec0:                             ; preds = %dec_label_pc_8052eb1
  store i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32* %stack_var_-92, align 4
  %v2_8052ec8 = call i32 @function_8053738(i32* bitcast (i8* @global_var_8056400.46 to i32*))
  store i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32* @ebx, align 4
  %v1_8052ed2 = add i32 %v1_8052f0f, -7
  store i32 %v1_8052ed2, i32* %eax.global-to-local, align 4
  store i32 %v1_8052ed2, i32* %stack_var_-92, align 4
  %v1_8052ed6 = call i32 @function_8052b1b(i32 %v1_8052ed2)
  store i32 %v1_8052ed6, i32* %eax.global-to-local, align 4
  store i32 %v1_8052ed6, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053274

dec_label_pc_8052ee5:                             ; preds = %dec_label_pc_8052eb1
  %v1_8052ee5 = add i32 %v0_8052eb1, -1
  store i32 %v1_8052ee5, i32* @ecx, align 4
  store i32 %v1_8052f0f, i32* @ebx, align 4
  %v1_8052ef0 = load i32, i32* @global_var_805674c.53, align 4
  %v7_8052ef0 = icmp ult i32 %v1_8052f0f, %v1_8052ef0
  br i1 %v7_8052ef0, label %dec_label_pc_8052fb2, label %dec_label_pc_8052efc

dec_label_pc_8052efc:                             ; preds = %dec_label_pc_8052ee5
  %v0_8052efc = load i32, i32* @global_var_8056750.54, align 16
  store i32 %v0_8052efc, i32* %eax.global-to-local, align 4
  %v1_8052f01 = load i32, i32* @global_var_8056754.55, align 4
  %v5_8052f07 = icmp slt i32 %v0_8052efc, %v1_8052f01
  br i1 %v5_8052f07, label %dec_label_pc_8052f0d, label %dec_label_pc_8052fb2

dec_label_pc_8052f0d:                             ; preds = %dec_label_pc_8052efc
  %v2_8052f0f = add i32 %v1_8052f0f, 10
  %v3_8052f0f = add i32 %v2_8052f0f, %v0_8052eb1
  %v1_8052f13 = sub i32 0, %v0_8052eb1
  store i32 %v1_8052f13, i32* %eax.global-to-local, align 4
  %v2_8052f15 = and i32 %v3_8052f0f, %v1_8052f13
  store i32 %v2_8052f15, i32* @ebx, align 4
  %tmp128 = icmp ugt i32 %v2_8052f15, %v1_8052f0f
  br i1 %tmp128, label %dec_label_pc_8052f21, label %dec_label_pc_8052fb2

dec_label_pc_8052f21:                             ; preds = %dec_label_pc_8052f0d
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052f2e = call i32 @function_805421c(i32 0, i32 %v2_8052f15, i32 3, i32 34, i32 0, i32 0, i32 %v1_8052ee5, i32 %v1_8052ee5)
  store i32 %v8_8052f2e, i32* %eax.global-to-local, align 4
  store i32 %v8_8052f2e, i32* %edx.global-to-local, align 4
  %v10_8052f38 = icmp eq i32 %v8_8052f2e, -1
  br i1 %v10_8052f38, label %dec_label_pc_8052f21.dec_label_pc_8052fb2_crit_edge, label %dec_label_pc_8052f3d

dec_label_pc_8052f21.dec_label_pc_8052fb2_crit_edge: ; preds = %dec_label_pc_8052f21
  %v0_8052fb2.pre = load i32, i32* @global_var_805642c.47, align 4
  br label %dec_label_pc_8052fb2

dec_label_pc_8052f3d:                             ; preds = %dec_label_pc_8052f21
  %v1_8052f3f = urem i32 %v8_8052f2e, 8
  %v2_8052f3f = icmp eq i32 %v1_8052f3f, 0
  store i32 %v1_8052f3f, i32* %ecx.global-to-local, align 4
  br i1 %v2_8052f3f, label %dec_label_pc_8052f57, label %dec_label_pc_8052f44

dec_label_pc_8052f44:                             ; preds = %dec_label_pc_8052f3d
  %v0_8052f49 = load i32, i32* @ebx, align 4
  %v2_8052f4b = sub nsw i32 8, %v1_8052f3f
  store i32 %v2_8052f4b, i32* %eax.global-to-local, align 4
  %v2_8052f4d = add i32 %v2_8052f4b, %v8_8052f2e
  store i32 %v2_8052f4d, i32* %edx.global-to-local, align 4
  %v2_8052f4f = sub i32 %v0_8052f49, %v2_8052f4b
  store i32 %v2_8052f4f, i32* %esi.global-to-local, align 4
  %v2_8052f51 = inttoptr i32 %v2_8052f4d to i32*
  store i32 %v2_8052f4b, i32* %v2_8052f51, align 4
  br label %dec_label_pc_8052f5f

dec_label_pc_8052f57:                             ; preds = %dec_label_pc_8052f3d
  %v1_8052f57 = inttoptr i32 %v8_8052f2e to i32*
  store i32 0, i32* %v1_8052f57, align 4
  br label %dec_label_pc_8052f5f

dec_label_pc_8052f5f:                             ; preds = %dec_label_pc_8052f44, %dec_label_pc_8052f57
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052f44 ], [ @ebx, %dec_label_pc_8052f57 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8052f5f = or i32 %storemerge, 2
  %v1_8052f62 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052f62 = add i32 %v1_8052f62, 4
  %v3_8052f62 = inttoptr i32 %v2_8052f62 to i32*
  store i32 %v1_8052f5f, i32* %v3_8052f62, align 4
  %v0_8052f65 = load i32, i32* @global_var_8056750.54, align 16
  %v1_8052f6a = add i32 %v0_8052f65, 1
  store i32 %v1_8052f6a, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f6a, i32* @global_var_8056750.54, align 16
  %v1_8052f70 = load i32, i32* @global_var_8056758.56, align 8
  %v7_8052f76 = icmp sgt i32 %v1_8052f6a, %v1_8052f70
  br i1 %v7_8052f76, label %dec_label_pc_8052f78, label %dec_label_pc_8052f7d

dec_label_pc_8052f78:                             ; preds = %dec_label_pc_8052f5f
  store i32 %v1_8052f6a, i32* @global_var_8056758.56, align 8
  br label %dec_label_pc_8052f7d

dec_label_pc_8052f7d:                             ; preds = %dec_label_pc_8052f5f, %dec_label_pc_8052f78
  %v0_8052f7d = load i32, i32* @global_var_8056764.57, align 4
  %v1_8052f82 = load i32, i32* @ebx, align 4
  %v2_8052f82 = add i32 %v1_8052f82, %v0_8052f7d
  store i32 %v2_8052f82, i32* %eax.global-to-local, align 4
  store i32 %v2_8052f82, i32* @global_var_8056764.57, align 4
  %v1_8052f89 = load i32, i32* @global_var_8056770.58, align 16
  %tmp129 = icmp ugt i32 %v2_8052f82, %v1_8052f89
  br i1 %tmp129, label %dec_label_pc_8052f91, label %dec_label_pc_8052f96

dec_label_pc_8052f91:                             ; preds = %dec_label_pc_8052f7d
  store i32 %v2_8052f82, i32* @global_var_8056770.58, align 16
  br label %dec_label_pc_8052f96

dec_label_pc_8052f96:                             ; preds = %dec_label_pc_8052f7d, %dec_label_pc_8052f91
  %v1_8052f96 = load i32, i32* @global_var_8056768.59, align 8
  %v2_8052f96 = add i32 %v1_8052f96, %v2_8052f82
  store i32 %v2_8052f96, i32* %eax.global-to-local, align 4
  %v1_8052f9c = load i32, i32* @global_var_8056774.60, align 4
  %tmp130 = icmp ugt i32 %v2_8052f96, %v1_8052f9c
  br i1 %tmp130, label %dec_label_pc_8052fa8, label %dec_label_pc_8052bf9

dec_label_pc_8052fa8:                             ; preds = %dec_label_pc_8052f96
  store i32 %v2_8052f96, i32* @global_var_8056774.60, align 4
  br label %dec_label_pc_8052bf9

dec_label_pc_8052fb2:                             ; preds = %dec_label_pc_8052f0d, %dec_label_pc_8052f21.dec_label_pc_8052fb2_crit_edge, %dec_label_pc_8052efc, %dec_label_pc_8052ee5
  %v0_8052fb2 = phi i32 [ %v0_8052fb2.pre, %dec_label_pc_8052f21.dec_label_pc_8052fb2_crit_edge ], [ %v0_8052e7a, %dec_label_pc_8052efc ], [ %v0_8052e7a, %dec_label_pc_8052f0d ], [ %v0_8052e7a, %dec_label_pc_8052ee5 ]
  store i32 %v0_8052fb2, i32* %eax.global-to-local, align 4
  %v1_8052fbb = add i32 %v0_8052fb2, 4
  %v2_8052fbb = inttoptr i32 %v1_8052fbb to i32*
  %v3_8052fbb = load i32, i32* %v2_8052fbb, align 4
  %v1_8052fc5 = and i32 %v3_8052fbb, -4
  %v2_8052fc5 = icmp eq i32 %v1_8052fc5, 0
  store i32 %v1_8052fc5, i32* @ebp, align 4
  %v1_8052fc8 = load i32, i32* @global_var_8056748.61, align 8
  %v2_8052fc8 = add i32 %v1_8052fc8, %v1_8052e84
  store i32 %v2_8052fc8, i32* %eax.global-to-local, align 4
  %v0_8052fce = load i8, i8* @global_var_8056760.62, align 32
  %v1_8052fce = urem i8 %v0_8052fce, 2
  %v2_8052fce = icmp eq i8 %v1_8052fce, 0
  br i1 %v2_8052fce, label %dec_label_pc_8052fd9, label %dec_label_pc_8052fd7

dec_label_pc_8052fd7:                             ; preds = %dec_label_pc_8052fb2
  %v2_8052fd7 = sub i32 %v2_8052fc8, %v1_8052fc5
  store i32 %v2_8052fd7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052fd9

dec_label_pc_8052fd9:                             ; preds = %dec_label_pc_8052fb2, %dec_label_pc_8052fd7
  %v0_8052fdd = phi i32 [ %v2_8052fc8, %dec_label_pc_8052fb2 ], [ %v2_8052fd7, %dec_label_pc_8052fd7 ]
  %v5_8052fdd = add i32 %v0_8052fdd, %v1_8052ee5
  store i32 %v5_8052fdd, i32* %eax.global-to-local, align 4
  %v1_8052fe1 = sub i32 0, %v0_8052eb1
  store i32 %v1_8052fe1, i32* %edx.global-to-local, align 4
  %v2_8052fe9 = and i32 %v5_8052fdd, %v1_8052fe1
  store i32 %v2_8052fe9, i32* @esi, align 4
  %tmp91 = icmp slt i32 %v2_8052fe9, 1
  br i1 %tmp91, label %dec_label_pc_8053003, label %dec_label_pc_8052fed

dec_label_pc_8052fed:                             ; preds = %dec_label_pc_8052fd9
  store i32 %v2_8052fe9, i32* %stack_var_-92, align 4
  %v1_8052ff1 = call i32 @function_80546cd(i32 %v2_8052fe9)
  store i32 %v1_8052ff1, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  store i32 %v1_8052ff1, i32* @ebx, align 4
  %v10_8052ffe = icmp eq i32 %v1_8052ff1, -1
  %v1_8053001 = icmp eq i1 %v10_8052ffe, false
  br i1 %v1_8053001, label %dec_label_pc_8053059.dec_label_pc_8053062_crit_edge, label %dec_label_pc_8052fed.dec_label_pc_8053003_crit_edge

dec_label_pc_8052fed.dec_label_pc_8053003_crit_edge: ; preds = %dec_label_pc_8052fed
  %v0_8053003.pre = load i8, i8* @global_var_8056760.62, align 32
  br label %dec_label_pc_8053003

dec_label_pc_8053003:                             ; preds = %dec_label_pc_8052fed.dec_label_pc_8053003_crit_edge, %dec_label_pc_8052fd9
  %v0_805302f = phi i32 [ -1, %dec_label_pc_8052fed.dec_label_pc_8053003_crit_edge ], [ %v1_8052fe1, %dec_label_pc_8052fd9 ]
  %v0_8053003 = phi i8 [ %v0_8053003.pre, %dec_label_pc_8052fed.dec_label_pc_8053003_crit_edge ], [ %v0_8052fce, %dec_label_pc_8052fd9 ]
  %v1_8053003 = urem i8 %v0_8053003, 2
  %v2_8053003 = icmp eq i8 %v1_8053003, 0
  br i1 %v2_8053003, label %dec_label_pc_8053003.dec_label_pc_8053018_crit_edge, label %dec_label_pc_805300c

dec_label_pc_8053003.dec_label_pc_8053018_crit_edge: ; preds = %dec_label_pc_8053003
  %v0_8053018.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053018

dec_label_pc_805300c:                             ; preds = %dec_label_pc_8053003
  %v2_8053010 = add i32 %v1_8052fc5, %v1_8052ee5
  store i32 %v2_8053010, i32* %eax.global-to-local, align 4
  %v0_8053012 = load i32, i32* @esi, align 4
  %v2_8053012 = add i32 %v0_8053012, %v2_8053010
  %v5_8053014 = and i32 %v2_8053012, %v1_8052fe1
  store i32 %v5_8053014, i32* @esi, align 4
  br label %dec_label_pc_8053018

dec_label_pc_8053018:                             ; preds = %dec_label_pc_8053003.dec_label_pc_8053018_crit_edge, %dec_label_pc_805300c
  %v0_8053018 = phi i32 [ %v0_8053018.pre, %dec_label_pc_8053003.dec_label_pc_8053018_crit_edge ], [ %v5_8053014, %dec_label_pc_805300c ]
  %tmp131 = icmp ult i32 %v0_8053018, 1048576
  br i1 %tmp131, label %dec_label_pc_8053020, label %dec_label_pc_8053025

dec_label_pc_8053020:                             ; preds = %dec_label_pc_8053018
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8053025

dec_label_pc_8053025:                             ; preds = %dec_label_pc_8053018, %dec_label_pc_8053020
  %v0_8053039 = phi i32 [ %v0_8053018, %dec_label_pc_8053018 ], [ 1048576, %dec_label_pc_8053020 ]
  %tmp132 = icmp ugt i32 %v0_8053039, %v1_8052f0f
  br i1 %tmp132, label %dec_label_pc_805302f, label %dec_label_pc_8053267

dec_label_pc_805302f:                             ; preds = %dec_label_pc_8053025
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805303c = call i32 @function_805421c(i32 0, i32 %v0_8053039, i32 3, i32 34, i32 0, i32 0, i32 %v0_805302f, i32 %v0_805302f)
  store i32 %v8_805303c, i32* %eax.global-to-local, align 4
  store i32 %v8_805303c, i32* @ebx, align 4
  %v10_8053046 = icmp eq i32 %v8_805303c, -1
  br i1 %v10_8053046, label %dec_label_pc_8053267, label %dec_label_pc_8053059.thread

dec_label_pc_8053059.thread:                      ; preds = %dec_label_pc_805302f
  %v0_805304f = load i8, i8* @global_var_8056760.62, align 1
  %v2_805304f = and i8 %v0_805304f, -2
  store i8 %v2_805304f, i8* @global_var_8056760.62, align 32
  %v1_8053056 = load i32, i32* @esi, align 4
  %v2_8053056 = add i32 %v1_8053056, %v8_805303c
  store i32 %v2_8053056, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053062

dec_label_pc_8053059.dec_label_pc_8053062_crit_edge: ; preds = %dec_label_pc_8052fed
  %v1_8053066.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053062

dec_label_pc_8053062:                             ; preds = %dec_label_pc_8053059.dec_label_pc_8053062_crit_edge, %dec_label_pc_8053059.thread
  %v1_8053066 = phi i32 [ %v1_8053056, %dec_label_pc_8053059.thread ], [ %v1_8053066.pre, %dec_label_pc_8053059.dec_label_pc_8053062_crit_edge ]
  %v0_805312e94 = phi i32 [ %v8_805303c, %dec_label_pc_8053059.thread ], [ %v1_8052ff1, %dec_label_pc_8053059.dec_label_pc_8053062_crit_edge ]
  %v0_805312093 = phi i32 [ %v2_8053056, %dec_label_pc_8053059.thread ], [ -1, %dec_label_pc_8053059.dec_label_pc_8053062_crit_edge ]
  %v0_8053066 = load i32, i32* @global_var_8056768.59, align 8
  %v2_8053066 = add i32 %v1_8053066, %v0_8053066
  store i32 %v2_8053066, i32* @global_var_8056768.59, align 8
  %v2_805306c = add i32 %v1_8052fc5, %v0_8052fb2
  store i32 %v2_805306c, i32* %ecx.global-to-local, align 4
  %v2_805306e = sub i32 %v0_805312e94, %v2_805306c
  %v7_805306e = icmp ult i32 %v0_805312e94, %v2_805306c
  %v12_805306e = icmp eq i32 %v2_805306e, 0
  %v1_8053070 = icmp eq i1 %v12_805306e, false
  br i1 %v1_8053070, label %dec_label_pc_8053089, label %dec_label_pc_8053072

dec_label_pc_8053072:                             ; preds = %dec_label_pc_8053062
  %v10_8053072 = icmp eq i32 %v0_805312093, -1
  %v1_8053075 = icmp eq i1 %v10_8053072, false
  br i1 %v1_8053075, label %dec_label_pc_8053089, label %dec_label_pc_8053077

dec_label_pc_8053077:                             ; preds = %dec_label_pc_8053072
  %v2_8053077 = add i32 %v1_8053066, %v1_8052fc5
  store i32 %v0_8052fb2, i32* %ecx.global-to-local, align 4
  %v1_805307e = or i32 %v2_8053077, 1
  store i32 %v1_805307e, i32* %eax.global-to-local, align 4
  store i32 %v1_805307e, i32* %v2_8052fbb, align 4
  br label %dec_label_pc_80531b6

dec_label_pc_8053089:                             ; preds = %dec_label_pc_8053072, %dec_label_pc_8053062
  %v0_8053089 = load i8, i8* @global_var_8056760.62, align 1
  %v1_8053089 = sext i8 %v0_8053089 to i32
  store i32 %v1_8053089, i32* %eax.global-to-local, align 4
  %v2_805308e = urem i8 %v0_8053089, 2
  %v3_805308e = icmp eq i8 %v2_805308e, 0
  br i1 %v3_805308e, label %dec_label_pc_80530a2, label %dec_label_pc_8053092

dec_label_pc_8053092:                             ; preds = %dec_label_pc_8053089
  br i1 %v2_8052fc5, label %dec_label_pc_80530a2, label %dec_label_pc_8053096

dec_label_pc_8053096:                             ; preds = %dec_label_pc_8053092
  %v1_8053098 = icmp eq i1 %v7_805306e, false
  br i1 %v1_8053098, label %dec_label_pc_80530a2, label %dec_label_pc_805309a

dec_label_pc_805309a:                             ; preds = %dec_label_pc_8053096
  %v1_805309a = and i32 %v1_8053089, -2
  %v4_805309a = trunc i32 %v1_805309a to i8
  store i32 %v1_805309a, i32* %eax.global-to-local, align 4
  store i8 %v4_805309a, i8* @global_var_8056760.62, align 32
  br label %dec_label_pc_80530a2

dec_label_pc_80530a2:                             ; preds = %dec_label_pc_8053096, %dec_label_pc_8053092, %dec_label_pc_8053089, %dec_label_pc_805309a
  %v0_80530a2 = phi i8 [ %v0_8053089, %dec_label_pc_8053096 ], [ %v0_8053089, %dec_label_pc_8053092 ], [ %v0_8053089, %dec_label_pc_8053089 ], [ %v4_805309a, %dec_label_pc_805309a ]
  %v1_80530a2 = urem i8 %v0_80530a2, 2
  %v2_80530a2 = icmp eq i8 %v1_80530a2, 0
  br i1 %v2_80530a2, label %dec_label_pc_8053120, label %dec_label_pc_80530ab

dec_label_pc_80530ab:                             ; preds = %dec_label_pc_80530a2
  br i1 %v2_8052fc5, label %dec_label_pc_80530b9, label %dec_label_pc_80530af

dec_label_pc_80530af:                             ; preds = %dec_label_pc_80530ab
  store i32 %v2_805306e, i32* %eax.global-to-local, align 4
  %v2_80530b3 = add i32 %v2_8053066, %v2_805306e
  store i32 %v2_80530b3, i32* @global_var_8056768.59, align 8
  br label %dec_label_pc_80530b9

dec_label_pc_80530b9:                             ; preds = %dec_label_pc_80530ab, %dec_label_pc_80530af
  %v1_80530bb = urem i32 %v0_805312e94, 8
  %v2_80530bb = icmp eq i32 %v1_80530bb, 0
  store i32 %v1_80530bb, i32* %edx.global-to-local, align 4
  %v1_80530be = icmp eq i1 %v2_80530bb, false
  br i1 %v1_80530be, label %dec_label_pc_80530c6, label %dec_label_pc_80530c0

dec_label_pc_80530c0:                             ; preds = %dec_label_pc_80530b9
  store i32 %v0_805312e94, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80530d0

dec_label_pc_80530c6:                             ; preds = %dec_label_pc_80530b9
  %v2_80530cb = sub nsw i32 8, %v1_80530bb
  store i32 %v2_80530cb, i32* %eax.global-to-local, align 4
  %v2_80530cd = add i32 %v2_80530cb, %v0_805312e94
  store i32 %v2_80530cd, i32* @edi, align 4
  br label %dec_label_pc_80530d0

dec_label_pc_80530d0:                             ; preds = %dec_label_pc_80530c0, %dec_label_pc_80530c6
  %v0_80530d3 = phi i32 [ 0, %dec_label_pc_80530c0 ], [ %v2_80530cb, %dec_label_pc_80530c6 ]
  %v2_80530d0 = add i32 %v1_8053066, %v0_805312e94
  %v2_80530d3 = add i32 %v0_80530d3, %v1_8052fc5
  store i32 %v2_80530d3, i32* %ecx.global-to-local, align 4
  %v2_80530dc = add i32 %v2_80530d3, %v2_80530d0
  store i32 %v2_80530dc, i32* %edx.global-to-local, align 4
  %v2_80530e2 = add i32 %v2_80530dc, %v1_8052ee5
  %v5_80530e5 = and i32 %v2_80530e2, %v1_8052fe1
  %v2_80530ec = sub i32 %v5_80530e5, %v2_80530dc
  store i32 %v2_80530ec, i32* %eax.global-to-local, align 4
  %v2_80530ee = add i32 %v2_80530ec, %v2_80530d3
  store i32 %v2_80530ee, i32* @esi, align 4
  store i32 %v2_80530ee, i32* %stack_var_-92, align 4
  %v1_80530f2 = call i32 @function_80546cd(i32 %v2_80530ee)
  store i32 %v1_80530f2, i32* %eax.global-to-local, align 4
  store i32 %v1_80530f2, i32* %edx.global-to-local, align 4
  %v10_80530fc = icmp eq i32 %v1_80530f2, -1
  %v1_80530ff = icmp eq i1 %v10_80530fc, false
  br i1 %v1_80530ff, label %dec_label_pc_805310f, label %dec_label_pc_8053101

dec_label_pc_8053101:                             ; preds = %dec_label_pc_80530d0
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053106 = call i32 @function_80546cd(i32 0)
  store i32 %v1_8053106, i32* %eax.global-to-local, align 4
  store i32 %v1_8053106, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053143

dec_label_pc_805310f:                             ; preds = %dec_label_pc_80530d0
  %v1_805310f = load i32, i32* @ebx, align 4
  %v7_805310f = icmp ult i32 %v1_80530f2, %v1_805310f
  %v1_8053111 = icmp eq i1 %v7_805310f, false
  br i1 %v1_8053111, label %dec_label_pc_8053148, label %dec_label_pc_8053113

dec_label_pc_8053113:                             ; preds = %dec_label_pc_805310f
  %v0_8053113 = load i8, i8* @global_var_8056760.62, align 1
  %v2_8053113 = and i8 %v0_8053113, -2
  store i8 %v2_8053113, i8* @global_var_8056760.62, align 32
  store i32 %v2_80530d0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053127

dec_label_pc_8053120:                             ; preds = %dec_label_pc_80530a2
  %v10_8053120 = icmp eq i32 %v0_805312093, -1
  br i1 %v10_8053120, label %dec_label_pc_805312b, label %dec_label_pc_8053125

dec_label_pc_8053125:                             ; preds = %dec_label_pc_8053120
  store i32 %v0_805312e94, i32* @edi, align 4
  br label %dec_label_pc_8053127

dec_label_pc_8053127:                             ; preds = %dec_label_pc_8053113, %dec_label_pc_8053125
  %v0_805314858 = phi i32 [ %v2_80530d0, %dec_label_pc_8053113 ], [ %v0_805312093, %dec_label_pc_8053125 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053148

dec_label_pc_805312b:                             ; preds = %dec_label_pc_8053120
  store i32 %v0_805312e94, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053132 = call i32 @function_80546cd(i32 0)
  store i32 %v1_8053132, i32* %edx.global-to-local, align 4
  %v1_8053139 = load i32, i32* @ebx, align 4
  %v2_8053139 = sub i32 %v1_8053132, %v1_8053139
  %v1_805313b = load i32, i32* @esi, align 4
  %v2_805313b = sub i32 %v2_8053139, %v1_805313b
  store i32 %v2_805313b, i32* %eax.global-to-local, align 4
  %v0_805313d = load i32, i32* @global_var_8056768.59, align 8
  %v2_805313d = add i32 %v0_805313d, %v2_805313b
  store i32 %v2_805313d, i32* @global_var_8056768.59, align 8
  br label %dec_label_pc_8053143

dec_label_pc_8053143:                             ; preds = %dec_label_pc_8053101, %dec_label_pc_805312b
  %v0_805314857 = phi i32 [ %v1_8053106, %dec_label_pc_8053101 ], [ %v1_8053132, %dec_label_pc_805312b ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053148

dec_label_pc_8053148:                             ; preds = %dec_label_pc_805310f, %dec_label_pc_8053127, %dec_label_pc_8053143
  %v0_805314d = phi i32 [ %v1_80530f2, %dec_label_pc_805310f ], [ %v0_805314858, %dec_label_pc_8053127 ], [ %v0_805314857, %dec_label_pc_8053143 ]
  %v10_8053148 = icmp eq i32 %v0_805314d, -1
  br i1 %v10_8053148, label %dec_label_pc_80531b6, label %dec_label_pc_805314d

dec_label_pc_805314d:                             ; preds = %dec_label_pc_8053148
  %v1_805314d = load i32, i32* @edi, align 4
  %v2_805314d = sub i32 %v0_805314d, %v1_805314d
  store i32 %v2_805314d, i32* %edx.global-to-local, align 4
  store i32 %v1_805314d, i32* @global_var_805642c.47, align 4
  %v1_8053155 = load i32, i32* @esi, align 4
  %v2_8053155 = add i32 %v1_8053155, %v2_805314d
  %v1_8053158 = or i32 %v2_8053155, 1
  store i32 %v1_8053158, i32* %eax.global-to-local, align 4
  %v2_805315b = add i32 %v1_805314d, 4
  %v3_805315b = inttoptr i32 %v2_805315b to i32*
  store i32 %v1_8053158, i32* %v3_805315b, align 4
  %v0_805315e = load i32, i32* @global_var_8056768.59, align 8
  %v1_805315e = load i32, i32* @esi, align 4
  %v2_805315e = add i32 %v1_805315e, %v0_805315e
  store i32 %v2_805315e, i32* @global_var_8056768.59, align 8
  br i1 %v2_8052fc5, label %dec_label_pc_80531b6, label %dec_label_pc_8053168

dec_label_pc_8053168:                             ; preds = %dec_label_pc_805314d
  %v1_8053168 = add i32 %v1_8052fc5, -12
  store i32 %v0_8052fb2, i32* %ecx.global-to-local, align 4
  %v1_805316f = and i32 %v1_8053168, -8
  store i32 %v1_805316f, i32* %eax.global-to-local, align 4
  %v1_8053174 = or i32 %v1_805316f, 1
  store i32 %v1_8053174, i32* %edx.global-to-local, align 4
  %v5_8053177 = icmp ult i32 %v1_805316f, 15
  store i32 %v1_8053174, i32* %v2_8052fbb, align 4
  %v0_805317d = load i32, i32* %ecx.global-to-local, align 4
  %v1_805317d = load i32, i32* %eax.global-to-local, align 4
  %v2_805317d = add i32 %v0_805317d, 4
  %v3_805317d = add i32 %v2_805317d, %v1_805317d
  %v4_805317d = inttoptr i32 %v3_805317d to i32*
  store i32 5, i32* %v4_805317d, align 4
  %v0_8053185 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053185 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053185 = add i32 %v0_8053185, 8
  %v3_8053185 = add i32 %v2_8053185, %v1_8053185
  %v4_8053185 = inttoptr i32 %v3_8053185 to i32*
  store i32 5, i32* %v4_8053185, align 4
  br i1 %v5_8053177, label %dec_label_pc_80531b6, label %dec_label_pc_805318f

dec_label_pc_805318f:                             ; preds = %dec_label_pc_8053168
  %v0_8053192 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053194 = add i32 %v0_8053192, 8
  store i32 %v1_8053194, i32* %eax.global-to-local, align 4
  %v0_8053197 = load i32, i32* @global_var_8056744.63, align 4
  store i32 %v0_8053197, i32* @ebx, align 4
  store i32 %v1_8053194, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8056744.63, align 4
  %v1_80531a8 = call i32 @function_80538e0(i32 %v1_8053194)
  store i32 %v1_80531a8, i32* %eax.global-to-local, align 4
  %v0_80531ad = load i32, i32* @ebx, align 4
  store i32 %v0_80531ad, i32* @global_var_8056744.63, align 4
  br label %dec_label_pc_80531b6

dec_label_pc_80531b6:                             ; preds = %dec_label_pc_8053168, %dec_label_pc_805314d, %dec_label_pc_8053148, %dec_label_pc_8053077, %dec_label_pc_805318f
  %v0_80531b6 = load i32, i32* @global_var_8056768.59, align 8
  store i32 %v0_80531b6, i32* %eax.global-to-local, align 4
  %v1_80531bb = load i32, i32* @global_var_805676c.64, align 4
  %tmp133 = icmp ugt i32 %v0_80531b6, %v1_80531bb
  br i1 %tmp133, label %dec_label_pc_80531c3, label %dec_label_pc_80531c8

dec_label_pc_80531c3:                             ; preds = %dec_label_pc_80531b6
  store i32 %v0_80531b6, i32* @global_var_805676c.64, align 4
  br label %dec_label_pc_80531c8

dec_label_pc_80531c8:                             ; preds = %dec_label_pc_80531b6, %dec_label_pc_80531c3
  %v1_80531c8 = load i32, i32* @global_var_8056764.57, align 4
  %v2_80531c8 = add i32 %v1_80531c8, %v0_80531b6
  store i32 %v2_80531c8, i32* %eax.global-to-local, align 4
  %v1_80531ce = load i32, i32* @global_var_8056774.60, align 4
  %tmp134 = icmp ugt i32 %v2_80531c8, %v1_80531ce
  br i1 %tmp134, label %dec_label_pc_80531d6, label %dec_label_pc_80531db

dec_label_pc_80531d6:                             ; preds = %dec_label_pc_80531c8
  store i32 %v2_80531c8, i32* @global_var_8056774.60, align 4
  br label %dec_label_pc_80531db

dec_label_pc_80531db:                             ; preds = %dec_label_pc_80531c8, %dec_label_pc_80531d6
  %v0_80531db = load i32, i32* @global_var_805642c.47, align 4
  store i32 %v0_80531db, i32* @ebx, align 4
  %v1_80531e1 = add i32 %v0_80531db, 4
  %v2_80531e1 = inttoptr i32 %v1_80531e1 to i32*
  %v3_80531e1 = load i32, i32* %v2_80531e1, align 4
  %v1_80531e4 = and i32 %v3_80531e1, -4
  store i32 %v1_80531e4, i32* %ecx.global-to-local, align 4
  %v10_80531e7 = icmp ult i32 %v1_80531e4, %v1_8052e84
  br i1 %v10_80531e7, label %dec_label_pc_8053267, label %dec_label_pc_80531ed

dec_label_pc_80531ed:                             ; preds = %dec_label_pc_80531db
  store i32 %v1_8052f0f, i32* %esi.global-to-local, align 4
  %v2_80531f3 = sub i32 %v1_80531e4, %v1_8052f0f
  store i32 %v2_80531f3, i32* %ecx.global-to-local, align 4
  %v2_80531f5 = add i32 %v0_80531db, %v1_8052f0f
  store i32 %v2_80531f5, i32* %edx.global-to-local, align 4
  %v1_80531f8 = or i32 %v1_8052f0f, 1
  store i32 %v1_80531f8, i32* %eax.global-to-local, align 4
  store i32 %v2_80531f5, i32* @global_var_805642c.47, align 4
  store i32 %v1_80531f8, i32* %v2_80531e1, align 4
  %v0_8053204.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053204

dec_label_pc_8053204:                             ; preds = %dec_label_pc_8052e95, %dec_label_pc_80531ed
  %v0_8053204 = phi i32 [ %v5_8052ea8, %dec_label_pc_8052e95 ], [ %v0_8053204.pre, %dec_label_pc_80531ed ]
  %v1_8053204 = or i32 %v0_8053204, 1
  store i32 %v1_8053204, i32* %ecx.global-to-local, align 4
  %v0_8053207 = load i32, i32* @ebx, align 4
  %v1_8053207 = add i32 %v0_8053207, 8
  store i32 %v1_8053207, i32* %ebx.global-to-local, align 4
  %v1_805320a = load i32, i32* %edx.global-to-local, align 4
  %v2_805320a = add i32 %v1_805320a, 4
  %v3_805320a = inttoptr i32 %v2_805320a to i32*
  store i32 %v1_8053204, i32* %v3_805320a, align 4
  br label %dec_label_pc_8053274

dec_label_pc_805320f:                             ; preds = %dec_label_pc_8052c4f
  %v5_8053215 = sub i32 %v1_8052c32, %v1_8052f0f
  store i32 %v5_8053215, i32* %eax.global-to-local, align 4
  %v2_8053219 = add i32 %v1_8053226, %v1_8052f0f
  store i32 %v2_8053219, i32* %edx.global-to-local, align 4
  %v1_805321d = or i32 %v1_8052f0f, 1
  store i32 %v2_8053219, i32* @global_var_8056430.48, align 16
  store i32 %v1_805321d, i32* %v2_8052c2c, align 4
  %v0_8053229 = load i32, i32* %eax.global-to-local, align 4
  %v0_805322b = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805322b, i32* @global_var_805643c.65, align 4
  %v1_8053231 = or i32 %v0_8053229, 1
  store i32 %v1_8053231, i32* %ecx.global-to-local, align 4
  store i32 %v0_805322b, i32* @global_var_8056440.50, align 64
  %v1_805323a = add i32 %v0_805322b, 8
  %v2_805323a = inttoptr i32 %v1_805323a to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_805323a, align 4
  %v0_8053241 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053241 = add i32 %v0_8053241, 12
  %v2_8053241 = inttoptr i32 %v1_8053241 to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_8053241, align 4
  %v0_8053248 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053248 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053248 = add i32 %v1_8053248, 4
  %v3_8053248 = inttoptr i32 %v2_8053248 to i32*
  store i32 %v0_8053248, i32* %v3_8053248, align 4
  %v0_805324b = load i32, i32* %eax.global-to-local, align 4
  %v1_805324b = load i32, i32* %edx.global-to-local, align 4
  %v3_805324b = add i32 %v1_805324b, %v0_805324b
  %v4_805324b = inttoptr i32 %v3_805324b to i32*
  store i32 %v0_805324b, i32* %v4_805324b, align 4
  br label %dec_label_pc_8053259

dec_label_pc_8053250:                             ; preds = %dec_label_pc_8052c5e
  store i32 %v1_8052f0f, i32* %ebx.global-to-local, align 4
  %v0_8053254 = load i32, i32* @ebp, align 4
  %v2_8053254 = or i32 %v1_8052f0f, 4
  %v3_8053254 = add i32 %v0_8053254, %v2_8053254
  %v4_8053254 = inttoptr i32 %v3_8053254 to i32*
  %v5_8053254 = load i32, i32* %v4_8053254, align 4
  %v6_8053254 = or i32 %v5_8053254, 1
  store i32 %v6_8053254, i32* %v4_8053254, align 4
  br label %dec_label_pc_8053259

dec_label_pc_8053259:                             ; preds = %dec_label_pc_805320f, %dec_label_pc_8053250
  %v0_8053259 = load i32, i32* @ebp, align 4
  %v1_8053259 = add i32 %v0_8053259, 8
  store i32 %v1_8053259, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053274

dec_label_pc_805325e:                             ; preds = %dec_label_pc_8052d4e
  %v1_805325e = load i32, i32* @ebx, align 4
  %v2_805325e = add i32 %v0_8052d5d, 4
  %v3_805325e = add i32 %v2_805325e, %v1_805325e
  %v4_805325e = inttoptr i32 %v3_805325e to i32*
  %v5_805325e = load i32, i32* %v4_805325e, align 4
  %v6_805325e = or i32 %v5_805325e, 1
  store i32 %v6_805325e, i32* %v4_805325e, align 4
  br label %dec_label_pc_8053263

dec_label_pc_8053263:                             ; preds = %dec_label_pc_8052d66, %dec_label_pc_805325e
  %v0_8053263 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8053263, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053274

dec_label_pc_8053267:                             ; preds = %dec_label_pc_8053025, %dec_label_pc_80531db, %dec_label_pc_805302f
  %v0_8053267 = load i32, i32* %stack_var_-92, align 4
  %v1_8053267 = call i32 @function_80526bd(i32 %v0_8053267)
  store i32 %v1_8053267, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805326e = inttoptr i32 %v1_8053267 to i32*
  store i32 12, i32* %v1_805326e, align 4
  br label %dec_label_pc_8053274

dec_label_pc_8053274:                             ; preds = %dec_label_pc_8053263, %dec_label_pc_8053259, %dec_label_pc_8053204, %dec_label_pc_8052ec0, %dec_label_pc_8052e72, %dec_label_pc_8052bf9, %dec_label_pc_8053267
  store i32 %v2_8052b30, i32* @eax, align 4
  store i32 %v2_8052b30, i32* %stack_var_-92, align 4
  %v2_805327d = call i32 @function_8053f04(i32 %v2_8052b30, i32 1)
  store i32 %v2_805327d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053285

dec_label_pc_8053285:                             ; preds = %dec_label_pc_8052b4e, %dec_label_pc_8053274
  %v0_8053288 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053288, i32* %eax.global-to-local, align 4
  %v2_805328a = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805328a, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052b1d, i32* @esi, align 4
  store i32 %v0_8052b1c, i32* @edi, align 4
  store i32 %v0_8052b1b, i32* @ebp, align 4
  ret i32 %v0_8053288

; uselistorder directives
  uselistorder i32 %v0_805324b, { 1, 0 }
  uselistorder i32 %v0_805322b, { 1, 0, 2 }
  uselistorder i32 %v2_80531c8, { 1, 0, 2 }
  uselistorder i32 %v0_80531b6, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805314d, { 1, 0 }
  uselistorder i32 %v2_805313b, { 1, 0 }
  uselistorder i32 %v1_80530f2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_80530dc, { 1, 0, 2 }
  uselistorder i32 %v2_80530d0, { 1, 2, 0 }
  uselistorder i32 %v2_80530cb, { 1, 0, 2 }
  uselistorder i32 %v1_80530bb, { 2, 1, 0 }
  uselistorder i8 %v0_8053089, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_805306c, { 1, 0, 2 }
  uselistorder i32 %v0_805312093, { 2, 0, 1 }
  uselistorder i32 %v0_805312e94, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_8053066, { 2, 1, 0 }
  uselistorder i32 %v8_805303c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8053039, { 1, 0 }
  uselistorder i32 %v0_8053018, { 1, 0 }
  uselistorder i32 %v2_8052fe9, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8052fe1, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8052fce, { 1, 0 }
  uselistorder i1 %v2_8052fc5, { 2, 1, 0 }
  uselistorder i32 %v1_8052fc5, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 %v0_8052fb2, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_8052f96, { 1, 0, 2 }
  uselistorder i32 %v2_8052f82, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8052f4b, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052f3f, { 2, 1, 0 }
  uselistorder i32 %v8_8052f2e, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_8052f15, { 1, 0, 2 }
  uselistorder i32 %v0_8052eb1, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8052e84, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052e7a, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8052e6c, { 1, 0 }
  uselistorder i32 %v1_8052e03, { 1, 0 }
  uselistorder i32 %v3_8052df7, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8052e07, { 1, 0 }
  uselistorder i32 %v2_8052df1, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_8052dee7, { 1, 0 }
  uselistorder i32 %v2_8052de3, { 1, 0 }
  uselistorder i32 %v1_8052dc7, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052dc3, { 2, 1, 0 }
  uselistorder i32 %v1_8052dbf, { 1, 0 }
  uselistorder i32 %v1_8052db3, { 2, 1, 0 }
  uselistorder i32 %v2_8052da9, { 1, 0 }
  uselistorder i32 %v1_8052da6, { 1, 2, 0 }
  uselistorder i32 %v4_8052d44, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_8052d8f, { 1, 0 }
  uselistorder i32 %v0_8052d5d, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8052d30, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052cfd, { 0, 2, 1 }
  uselistorder i32 %v2_8052ce1, { 1, 0 }
  uselistorder i32 %v1_8052cd7, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8052cd2.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052cc2, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8052cb9, { 1, 0, 2 }
  uselistorder i32 %v2_8052c95, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8052c7d, { 2, 1, 0 }
  uselistorder i32 %v0_8052c69, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8052c2f, { 1, 0, 2 }
  uselistorder i32 %v1_8053226, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8052cfd9, { 1, 0, 2 }
  uselistorder i32 %v3_8052bdc, { 1, 0, 2 }
  uselistorder i32 %v2_8052bce, { 2, 1, 0 }
  uselistorder i32 %v2_8052ba9, { 2, 1, 0 }
  uselistorder i8 %v0_8052b77, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_8052f0f, { 13, 31, 12, 2, 29, 11, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_8052b60, { 0, 2, 1 }
  uselistorder i32 %v0_8052b49, { 1, 0 }
  uselistorder i32 %v2_8052b30, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 22, 21, 23, 24, 28, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 49, 50, 52 }
  uselistorder i32* %ecx.global-to-local, { 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %ebx.global-to-local, { 1, 22, 2, 3, 4, 5, 6, 7, 8, 9, 17, 10, 18, 11, 12, 13, 14, 15, 16, 0, 19, 20, 21, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8056760.62, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_805421c, { 1, 0 }
  uselistorder i32 134571060, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8056440.50, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_8052af5, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805642c.47 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_805642c.47 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8053285, { 1, 0 }
  uselistorder label %dec_label_pc_8053274, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053267, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053263, { 1, 0 }
  uselistorder label %dec_label_pc_8053259, { 1, 0 }
  uselistorder label %dec_label_pc_8053204, { 1, 0 }
  uselistorder label %dec_label_pc_80531db, { 1, 0 }
  uselistorder label %dec_label_pc_80531c8, { 1, 0 }
  uselistorder label %dec_label_pc_80531b6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053148, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053143, { 1, 0 }
  uselistorder label %dec_label_pc_8053127, { 1, 0 }
  uselistorder label %dec_label_pc_80530d0, { 1, 0 }
  uselistorder label %dec_label_pc_80530b9, { 1, 0 }
  uselistorder label %dec_label_pc_80530a2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053025, { 1, 0 }
  uselistorder label %dec_label_pc_8053018, { 1, 0 }
  uselistorder label %dec_label_pc_8052fd9, { 1, 0 }
  uselistorder label %dec_label_pc_8052fb2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8052f96, { 1, 0 }
  uselistorder label %dec_label_pc_8052f7d, { 1, 0 }
  uselistorder label %dec_label_pc_8052f5f, { 1, 0 }
  uselistorder label %dec_label_pc_8052e7a, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052e72, { 1, 0 }
  uselistorder label %dec_label_pc_8052e5b, { 1, 0 }
  uselistorder label %dec_label_pc_8052dee, { 1, 0 }
  uselistorder label %dec_label_pc_8052df3.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8052dc7, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052d4e, { 1, 0 }
  uselistorder label %dec_label_pc_8052cfd, { 1, 0 }
  uselistorder label %dec_label_pc_8052cd5, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8052cbe, { 1, 0 }
  uselistorder label %dec_label_pc_8052c2c, { 1, 0 }
  uselistorder label %dec_label_pc_8052cfd.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052bf9, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8052b77, { 1, 0 }
}

define i32 @function_805328f(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805328f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805328f = load i32, i32* @edi, align 4
  %v0_8053291 = load i32, i32* @ebx, align 4
  %v12_8053292 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8053295 = trunc i64 %arg1 to i32
  %sext = mul i64 %arg1, 4294967296
  %v2_805329f = sdiv i64 %sext, 4294967296
  %v3_805329f = sext i32 %arg2 to i64
  %v4_805329f = mul nsw i64 %v3_805329f, %v2_805329f
  %v5_805329f = trunc i64 %v4_805329f to i32
  store i32 %v5_805329f, i32* @ebx, align 4
  %v2_80532a2 = icmp eq i32 %v4_8053295, 0
  br i1 %v2_80532a2, label %dec_label_pc_80532c4, label %dec_label_pc_80532a6

dec_label_pc_80532a6:                             ; preds = %dec_label_pc_805328f
  store i32 %v4_8053295, i32* @edi, align 4
  %div = udiv i32 %v5_805329f, %v4_8053295
  store i32 %div, i32* %eax.global-to-local, align 4
  %v12_80532ae = icmp eq i32 %div, %arg2
  br i1 %v12_80532ae, label %dec_label_pc_80532c4, label %dec_label_pc_80532b2

dec_label_pc_80532b2:                             ; preds = %dec_label_pc_80532a6
  %v1_80532b2 = call i32 @function_80526bd(i32 %v0_8053291)
  store i32 %v1_80532b2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80532b9 = inttoptr i32 %v1_80532b2 to i32*
  store i32 12, i32* %v1_80532b9, align 4
  br label %dec_label_pc_805337a

dec_label_pc_80532c4:                             ; preds = %dec_label_pc_80532a6, %dec_label_pc_805328f
  store i32 %v12_8053292, i32* @eax, align 4
  %v2_80532d4 = call i32 @function_8053f04(i32 %v12_8053292, i32 134561537)
  store i32 %v2_80532d4, i32* %eax.global-to-local, align 4
  %v1_80532e0 = call i32 @function_8053f01(i32 ptrtoint (i32* @global_var_805603c.45 to i32))
  store i32 %v1_80532e0, i32* %eax.global-to-local, align 4
  %v0_80532e5 = load i32, i32* @ebx, align 4
  %v1_80532e8 = call i32 @function_8052b1b(i32 %v0_80532e5)
  store i32 %v1_80532e8, i32* %eax.global-to-local, align 4
  store i32 %v1_80532e8, i32* %ebx.global-to-local, align 4
  %v1_80532f2 = icmp eq i32 %v1_80532e8, 0
  br i1 %v1_80532f2, label %dec_label_pc_8053369, label %dec_label_pc_80532f6

dec_label_pc_80532f6:                             ; preds = %dec_label_pc_80532c4
  %v1_80532f6 = add i32 %v1_80532e8, -4
  %v2_80532f6 = inttoptr i32 %v1_80532f6 to i32*
  %v3_80532f6 = load i32, i32* %v2_80532f6, align 4
  store i32 %v3_80532f6, i32* %eax.global-to-local, align 4
  %v2_80532f9 = and i32 %v3_80532f6, 2
  %v3_80532f9 = icmp eq i32 %v2_80532f9, 0
  %v1_80532fb = icmp eq i1 %v3_80532f9, false
  br i1 %v1_80532fb, label %dec_label_pc_8053369, label %dec_label_pc_80532fd

dec_label_pc_80532fd:                             ; preds = %dec_label_pc_80532f6
  %v1_80532fd3 = add i32 %v3_80532f6, -4
  %v1_8053300 = and i32 %v1_80532fd3, -4
  %v2_8053305 = udiv i32 %v1_8053300, 4
  store i32 %v2_8053305, i32* %eax.global-to-local, align 4
  %v5_8053308 = icmp ult i32 %v1_8053300, 36
  %tmp = and i32 %v1_80532fd3, -4
  %tmp18 = icmp eq i32 %tmp, 36
  %v2_805330b = or i1 %v5_8053308, %tmp18
  br i1 %v2_805330b, label %dec_label_pc_805331c, label %dec_label_pc_805330d

dec_label_pc_805330d:                             ; preds = %dec_label_pc_80532fd
  %v3_8053312 = inttoptr i32 %v1_80532e8 to i8*
  %v4_8053312 = call i32 @function_805270e(i8* %v3_8053312, i32 0, i32 %v1_8053300)
  store i32 %v4_8053312, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053369

dec_label_pc_805331c:                             ; preds = %dec_label_pc_80532fd
  %v1_805331c = inttoptr i32 %v1_80532e8 to i32*
  store i32 0, i32* %v1_805331c, align 4
  %v0_8053322 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053322 = add i32 %v0_8053322, 4
  %v2_8053322 = inttoptr i32 %v1_8053322 to i32*
  store i32 0, i32* %v2_8053322, align 4
  %v0_8053329 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053329 = add i32 %v0_8053329, 8
  %v2_8053329 = inttoptr i32 %v1_8053329 to i32*
  store i32 0, i32* %v2_8053329, align 4
  %v0_8053330 = load i32, i32* %eax.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_8053330, 5
  br i1 %tmp15, label %dec_label_pc_8053369, label %dec_label_pc_8053335

dec_label_pc_8053335:                             ; preds = %dec_label_pc_805331c
  %v0_8053335 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053335 = add i32 %v0_8053335, 12
  %v2_8053335 = inttoptr i32 %v1_8053335 to i32*
  store i32 0, i32* %v2_8053335, align 4
  %v0_805333c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805333c = add i32 %v0_805333c, 16
  %v2_805333c = inttoptr i32 %v1_805333c to i32*
  store i32 0, i32* %v2_805333c, align 4
  %v0_8053343 = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_8053343, 7
  br i1 %tmp16, label %dec_label_pc_8053369, label %dec_label_pc_8053348

dec_label_pc_8053348:                             ; preds = %dec_label_pc_8053335
  %v0_8053348 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053348 = add i32 %v0_8053348, 20
  %v2_8053348 = inttoptr i32 %v1_8053348 to i32*
  store i32 0, i32* %v2_8053348, align 4
  %v0_805334f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805334f = add i32 %v0_805334f, 24
  %v2_805334f = inttoptr i32 %v1_805334f to i32*
  store i32 0, i32* %v2_805334f, align 4
  %v0_8053356 = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_8053356, 9
  br i1 %tmp17, label %dec_label_pc_8053369, label %dec_label_pc_805335b

dec_label_pc_805335b:                             ; preds = %dec_label_pc_8053348
  %v0_805335b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805335b = add i32 %v0_805335b, 28
  %v2_805335b = inttoptr i32 %v1_805335b to i32*
  store i32 0, i32* %v2_805335b, align 4
  %v0_8053362 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053362 = add i32 %v0_8053362, 32
  %v2_8053362 = inttoptr i32 %v1_8053362 to i32*
  store i32 0, i32* %v2_8053362, align 4
  br label %dec_label_pc_8053369

dec_label_pc_8053369:                             ; preds = %dec_label_pc_8053348, %dec_label_pc_8053335, %dec_label_pc_805331c, %dec_label_pc_80532f6, %dec_label_pc_80532c4, %dec_label_pc_805330d, %dec_label_pc_805335b
  store i32 %v12_8053292, i32* @eax, align 4
  %v2_8053372 = call i32 @function_8053f04(i32 %v12_8053292, i32 1)
  store i32 %v2_8053372, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805337a

dec_label_pc_805337a:                             ; preds = %dec_label_pc_80532b2, %dec_label_pc_8053369
  %v0_805337d = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805337d, i32* %eax.global-to-local, align 4
  store i32 %v0_8053291, i32* @ebx, align 4
  store i32 %v0_805328f, i32* @edi, align 4
  ret i32 %v0_805337d

; uselistorder directives
  uselistorder i32 %v1_8053300, { 2, 1, 0 }
  uselistorder i32 %v1_80532e8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %ebx.global-to-local, { 9, 0, 3, 1, 6, 2, 7, 4, 5, 8, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7, 9, 10, 11, 8, 12 }
  uselistorder i64 4294967296, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_805337a, { 1, 0 }
  uselistorder label %dec_label_pc_8053369, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @function_8053383(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053383:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8053386 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_805338e = icmp eq i32* %arg1, null
  %v1_8053393 = icmp eq i1 %v4_805338e, false
  br i1 %v1_8053393, label %dec_label_pc_80533a5, label %dec_label_pc_8053395

dec_label_pc_8053395:                             ; preds = %dec_label_pc_8053383
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_8053399 = call i32 @function_8052b1b(i32 %arg2)
  store i32 %v1_8053399, i32* %eax.global-to-local, align 4
  store i32 %v1_8053399, i32* @ebx, align 4
  br label %dec_label_pc_805369e

dec_label_pc_80533a5:                             ; preds = %dec_label_pc_8053383
  %v1_80533a5 = icmp eq i32 %arg2, 0
  %v1_80533a7 = icmp eq i1 %v1_80533a5, false
  br i1 %v1_80533a7, label %dec_label_pc_80533ba, label %dec_label_pc_80533a9

dec_label_pc_80533a9:                             ; preds = %dec_label_pc_80533a5
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80533b0 = call i32 @function_80538e0(i32 %tmp7)
  store i32 %v1_80533b0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805369e

dec_label_pc_80533ba:                             ; preds = %dec_label_pc_80533a5
  %v2_80533c5 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80533c5, i32* @eax, align 4
  store i32 %v2_80533c5, i32* %stack_var_-60, align 4
  %v2_80533ca = call i32 @function_8053f04(i32 %v2_80533c5, i32 134561537)
  store i32 %v2_80533ca, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805603c.45 to i32), i32* %stack_var_-60, align 4
  %v1_80533d6 = call i32 @function_8053f01(i32 ptrtoint (i32* @global_var_805603c.45 to i32))
  store i32 %v1_80533d6, i32* %eax.global-to-local, align 4
  %v0_80533de = load i32, i32* @ebx, align 4
  %tmp20 = icmp ult i32 %v0_80533de, -32
  br i1 %tmp20, label %dec_label_pc_80533f5, label %dec_label_pc_80533e3

dec_label_pc_80533e3:                             ; preds = %dec_label_pc_80533ba
  %v0_80533e3 = load i32, i32* %stack_var_-60, align 4
  %v1_80533e3 = call i32 @function_80526bd(i32 %v0_80533e3)
  store i32 %v1_80533e3, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80533ea = inttoptr i32 %v1_80533e3 to i32*
  store i32 12, i32* %v1_80533ea, align 4
  br label %dec_label_pc_80536a1

dec_label_pc_80533f5:                             ; preds = %dec_label_pc_80533ba
  %v1_80533f5 = add i32 %v0_80533de, 11
  %tmp21 = icmp ult i32 %v1_80533f5, 16
  br i1 %tmp21, label %dec_label_pc_805340c, label %dec_label_pc_8053405

dec_label_pc_8053405:                             ; preds = %dec_label_pc_80533f5
  %v1_8053405 = and i32 %v1_80533f5, -8
  br label %dec_label_pc_805340c

dec_label_pc_805340c:                             ; preds = %dec_label_pc_80533f5, %dec_label_pc_8053405
  %stack_var_-40.0 = phi i32 [ %v1_8053405, %dec_label_pc_8053405 ], [ 16, %dec_label_pc_80533f5 ]
  %storemerge27 = phi i32 [ %v1_8053405, %dec_label_pc_8053405 ], [ %v1_80533f5, %dec_label_pc_80533f5 ]
  store i32 %storemerge27, i32* %eax.global-to-local, align 4
  %v1_8053410 = add i32 %tmp7, -8
  store i32 %v1_8053410, i32* @edi, align 4
  %v1_8053413 = add i32 %tmp7, -4
  %v2_8053413 = inttoptr i32 %v1_8053413 to i32*
  %v3_8053413 = load i32, i32* %v2_8053413, align 4
  store i32 %v3_8053413, i32* %edx.global-to-local, align 4
  %v1_8053418 = and i32 %v3_8053413, -4
  store i32 %v1_8053418, i32* %eax.global-to-local, align 4
  %v2_805341f = and i32 %v3_8053413, 2
  %v3_805341f = icmp eq i32 %v2_805341f, 0
  %v1_8053422 = icmp eq i1 %v3_805341f, false
  br i1 %v1_8053422, label %dec_label_pc_80535bc, label %dec_label_pc_8053428

dec_label_pc_8053428:                             ; preds = %dec_label_pc_805340c
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053418, i32* @ebx, align 4
  %v7_805342e = icmp ult i32 %v1_8053418, %stack_var_-40.0
  %v1_8053430 = icmp eq i1 %v7_805342e, false
  br i1 %v1_8053430, label %dec_label_pc_8053567, label %dec_label_pc_8053436

dec_label_pc_8053436:                             ; preds = %dec_label_pc_8053428
  %v2_8053436 = add i32 %v1_8053418, %v1_8053410
  store i32 %v2_8053436, i32* @esi, align 4
  %v1_8053439 = load i32, i32* @global_var_805642c.47, align 4
  %v12_8053439 = icmp eq i32 %v2_8053436, %v1_8053439
  %v1_805343f = icmp eq i1 %v12_8053439, false
  %v1_8053479 = add i32 %v2_8053436, 4
  %v2_8053479 = inttoptr i32 %v1_8053479 to i32*
  %v3_8053479 = load i32, i32* %v2_8053479, align 4
  br i1 %v1_805343f, label %dec_label_pc_8053479, label %dec_label_pc_8053441

dec_label_pc_8053441:                             ; preds = %dec_label_pc_8053436
  %v1_8053446 = and i32 %v3_8053479, -4
  %v2_8053449 = add i32 %v1_8053446, %v1_8053418
  store i32 %v2_8053449, i32* %ecx.global-to-local, align 4
  %v1_805344f = add i32 %stack_var_-40.0, 16
  store i32 %v1_805344f, i32* %eax.global-to-local, align 4
  %v7_8053452 = icmp ult i32 %v2_8053449, %v1_805344f
  br i1 %v7_8053452, label %dec_label_pc_80534b7, label %dec_label_pc_8053456

dec_label_pc_8053456:                             ; preds = %dec_label_pc_8053441
  %v1_8053456 = urem i32 %v3_8053413, 2
  %v5_8053459 = or i32 %v1_8053456, %stack_var_-40.0
  store i32 %v5_8053459, i32* %edx.global-to-local, align 4
  store i32 %v5_8053459, i32* %v2_8053413, align 4
  %v0_8053464 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053464 = sub i32 %v0_8053464, %stack_var_-40.0
  %v0_8053466 = load i32, i32* @edi, align 4
  %v2_8053466 = add i32 %v0_8053466, %stack_var_-40.0
  store i32 %v2_8053466, i32* %eax.global-to-local, align 4
  %v1_8053469 = or i32 %v2_8053464, 1
  store i32 %v1_8053469, i32* %ecx.global-to-local, align 4
  store i32 %v2_8053466, i32* @global_var_805642c.47, align 4
  %v2_8053471 = add i32 %v2_8053466, 4
  %v3_8053471 = inttoptr i32 %v2_8053471 to i32*
  store i32 %v1_8053469, i32* %v3_8053471, align 4
  br label %dec_label_pc_805368c

dec_label_pc_8053479:                             ; preds = %dec_label_pc_8053436
  store i32 %v3_8053479, i32* %edx.global-to-local, align 4
  %v1_805347e = and i32 %v3_8053479, -2
  store i32 %v1_805347e, i32* %eax.global-to-local, align 4
  %v3_8053481 = add i32 %v1_8053479, %v1_805347e
  %v4_8053481 = inttoptr i32 %v3_8053481 to i8*
  %v5_8053481 = load i8, i8* %v4_8053481, align 1
  %v6_8053481 = urem i8 %v5_8053481, 2
  %v7_8053481 = icmp eq i8 %v6_8053481, 0
  %v1_8053486 = icmp eq i1 %v7_8053481, false
  br i1 %v1_8053486, label %dec_label_pc_80534b7, label %dec_label_pc_8053488

dec_label_pc_8053488:                             ; preds = %dec_label_pc_8053479
  %v1_8053488 = and i32 %v3_8053479, -4
  store i32 %v1_8053488, i32* %edx.global-to-local, align 4
  %v2_805348f = add i32 %v1_8053488, %v1_8053418
  store i32 %v2_805348f, i32* @ebx, align 4
  %v10_8053491 = icmp ult i32 %v2_805348f, %stack_var_-40.0
  br i1 %v10_8053491, label %dec_label_pc_80534b7, label %dec_label_pc_8053497

dec_label_pc_8053497:                             ; preds = %dec_label_pc_8053488
  %v1_8053497 = add i32 %v1_8053418, %tmp7
  %v2_8053497 = inttoptr i32 %v1_8053497 to i32*
  %v3_8053497 = load i32, i32* %v2_8053497, align 4
  store i32 %v3_8053497, i32* @edx, align 4
  %v1_805349a = add i32 %v2_8053436, 12
  %v2_805349a = inttoptr i32 %v1_805349a to i32*
  %v3_805349a = load i32, i32* %v2_805349a, align 4
  store i32 %v3_805349a, i32* %eax.global-to-local, align 4
  %v1_805349d = add i32 %v3_8053497, 12
  %v2_805349d = inttoptr i32 %v1_805349d to i32*
  %v3_805349d = load i32, i32* %v2_805349d, align 4
  %v15_805349d = icmp eq i32 %v3_805349d, %v2_8053436
  %v1_80534a0 = icmp eq i1 %v15_805349d, false
  br i1 %v1_80534a0, label %dec_label_pc_80534a7, label %dec_label_pc_80534a2

dec_label_pc_80534a2:                             ; preds = %dec_label_pc_8053497
  %v1_80534a2 = add i32 %v3_805349a, 8
  %v2_80534a2 = inttoptr i32 %v1_80534a2 to i32*
  %v3_80534a2 = load i32, i32* %v2_80534a2, align 4
  %v15_80534a2 = icmp eq i32 %v3_80534a2, %v2_8053436
  br i1 %v15_80534a2, label %dec_label_pc_80534ac, label %dec_label_pc_80534a7

dec_label_pc_80534a7:                             ; preds = %dec_label_pc_80534a2, %dec_label_pc_8053497
  %v0_80534a7 = call i32 @function_8053a7c()
  store i32 %v0_80534a7, i32* %eax.global-to-local, align 4
  %v1_80534ac.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80534ac

dec_label_pc_80534ac:                             ; preds = %dec_label_pc_80534a2, %dec_label_pc_80534a7
  %v1_80534ac = phi i32 [ %v3_8053497, %dec_label_pc_80534a2 ], [ %v1_80534ac.pre, %dec_label_pc_80534a7 ]
  %v0_80534ac = phi i32 [ %v3_805349a, %dec_label_pc_80534a2 ], [ %v0_80534a7, %dec_label_pc_80534a7 ]
  %v2_80534ac = add i32 %v1_80534ac, 12
  %v3_80534ac = inttoptr i32 %v2_80534ac to i32*
  store i32 %v0_80534ac, i32* %v3_80534ac, align 4
  %v0_80534af = load i32, i32* @edx, align 4
  %v1_80534af = load i32, i32* %eax.global-to-local, align 4
  %v2_80534af = add i32 %v1_80534af, 8
  %v3_80534af = inttoptr i32 %v2_80534af to i32*
  store i32 %v0_80534af, i32* %v3_80534af, align 4
  %v0_8053567.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053567

dec_label_pc_80534b7:                             ; preds = %dec_label_pc_8053488, %dec_label_pc_8053479, %dec_label_pc_8053441
  %v1_80534be = add i32 %stack_var_-40.0, -7
  store i32 %v1_80534be, i32* %eax.global-to-local, align 4
  store i32 %v1_80534be, i32* %stack_var_-60, align 4
  %v1_80534c2 = call i32 @function_8052b1b(i32 %v1_80534be)
  store i32 %v1_80534c2, i32* %eax.global-to-local, align 4
  store i32 %v1_80534c2, i32* %edx.global-to-local, align 4
  %v1_80534cc = icmp eq i32 %v1_80534c2, 0
  br i1 %v1_80534cc, label %dec_label_pc_8053688, label %dec_label_pc_80534d4

dec_label_pc_80534d4:                             ; preds = %dec_label_pc_80534b7
  %v1_80534d4 = add i32 %v1_80534c2, -8
  store i32 %v1_80534d4, i32* %ebx.global-to-local, align 4
  %v1_80534d7 = load i32, i32* @esi, align 4
  %v12_80534d7 = icmp eq i32 %v1_80534d4, %v1_80534d7
  %v1_80534d9 = add i32 %v1_80534c2, -4
  %v2_80534d9 = inttoptr i32 %v1_80534d9 to i32*
  %v3_80534d9 = load i32, i32* %v2_80534d9, align 4
  store i32 %v3_80534d9, i32* %eax.global-to-local, align 4
  %v1_80534dc = icmp eq i1 %v12_80534d7, false
  br i1 %v1_80534dc, label %dec_label_pc_80534ea, label %dec_label_pc_80534de

dec_label_pc_80534de:                             ; preds = %dec_label_pc_80534d4
  %v1_80534de = and i32 %v3_80534d9, -4
  store i32 %v1_80534de, i32* %eax.global-to-local, align 4
  store i32 %v1_8053418, i32* %edx.global-to-local, align 4
  %v2_80534e5 = add i32 %v1_80534de, %v1_8053418
  store i32 %v2_80534e5, i32* @ebx, align 4
  br label %dec_label_pc_8053567

dec_label_pc_80534ea:                             ; preds = %dec_label_pc_80534d4
  %v1_80534ee = add i32 %v1_8053418, -4
  store i32 %v1_80534ee, i32* %eax.global-to-local, align 4
  %v2_80534f3 = udiv i32 %v1_80534ee, 4
  store i32 %v2_80534f3, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80534ee, 37
  br i1 %tmp, label %dec_label_pc_805350c, label %dec_label_pc_80534fb

dec_label_pc_80534fb:                             ; preds = %dec_label_pc_80534ea
  store i32 %v1_80534c2, i32* %stack_var_-60, align 4
  %v3_8053502 = inttoptr i32 %v1_80534c2 to i16*
  %v4_8053502 = call i32 @function_80547c6(i16* %v3_8053502, i32 %tmp7, i32 %v1_80534ee)
  store i32 %v4_8053502, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053553

dec_label_pc_805350c:                             ; preds = %dec_label_pc_80534ea
  store i32 %tmp7, i32* @esi, align 4
  %v2_8053513 = load i32, i32* %arg1, align 4
  store i32 %v2_8053513, i32* %eax.global-to-local, align 4
  %v2_8053515 = inttoptr i32 %v1_80534c2 to i32*
  store i32 %v2_8053513, i32* %v2_8053515, align 4
  %v0_8053517 = load i32, i32* @esi, align 4
  %v1_8053517 = add i32 %v0_8053517, 4
  %v2_8053517 = inttoptr i32 %v1_8053517 to i32*
  %v3_8053517 = load i32, i32* %v2_8053517, align 4
  store i32 %v3_8053517, i32* %eax.global-to-local, align 4
  %v1_805351a = load i32, i32* %edx.global-to-local, align 4
  %v2_805351a = add i32 %v1_805351a, 4
  %v3_805351a = inttoptr i32 %v2_805351a to i32*
  store i32 %v3_8053517, i32* %v3_805351a, align 4
  %v0_805351d = load i32, i32* @esi, align 4
  %v1_805351d = add i32 %v0_805351d, 8
  %v2_805351d = inttoptr i32 %v1_805351d to i32*
  %v3_805351d = load i32, i32* %v2_805351d, align 4
  store i32 %v3_805351d, i32* %eax.global-to-local, align 4
  %v1_8053520 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053520 = add i32 %v1_8053520, 8
  %v3_8053520 = inttoptr i32 %v2_8053520 to i32*
  store i32 %v3_805351d, i32* %v3_8053520, align 4
  %tmp28 = icmp ult i32 %v1_80534ee, 17
  br i1 %tmp28, label %dec_label_pc_8053553, label %dec_label_pc_8053525

dec_label_pc_8053525:                             ; preds = %dec_label_pc_805350c
  %v0_8053525 = load i32, i32* @esi, align 4
  %v1_8053525 = add i32 %v0_8053525, 12
  %v2_8053525 = inttoptr i32 %v1_8053525 to i32*
  %v3_8053525 = load i32, i32* %v2_8053525, align 4
  store i32 %v3_8053525, i32* %eax.global-to-local, align 4
  %v0_8053528 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805352b = load i32, i32* %edx.global-to-local, align 4
  %v2_805352b = add i32 %v1_805352b, 12
  %v3_805352b = inttoptr i32 %v2_805352b to i32*
  store i32 %v3_8053525, i32* %v3_805352b, align 4
  %v0_805352e = load i32, i32* @esi, align 4
  %v1_805352e = add i32 %v0_805352e, 16
  %v2_805352e = inttoptr i32 %v1_805352e to i32*
  %v3_805352e = load i32, i32* %v2_805352e, align 4
  store i32 %v3_805352e, i32* %eax.global-to-local, align 4
  %v1_8053531 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053531 = add i32 %v1_8053531, 16
  %v3_8053531 = inttoptr i32 %v2_8053531 to i32*
  store i32 %v3_805352e, i32* %v3_8053531, align 4
  %tmp22 = icmp ult i32 %v0_8053528, 7
  br i1 %tmp22, label %dec_label_pc_8053553, label %dec_label_pc_8053536

dec_label_pc_8053536:                             ; preds = %dec_label_pc_8053525
  %v0_8053536 = load i32, i32* @esi, align 4
  %v1_8053536 = add i32 %v0_8053536, 20
  %v2_8053536 = inttoptr i32 %v1_8053536 to i32*
  %v3_8053536 = load i32, i32* %v2_8053536, align 4
  store i32 %v3_8053536, i32* %eax.global-to-local, align 4
  %v0_8053539 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805353c = load i32, i32* %edx.global-to-local, align 4
  %v2_805353c = add i32 %v1_805353c, 20
  %v3_805353c = inttoptr i32 %v2_805353c to i32*
  store i32 %v3_8053536, i32* %v3_805353c, align 4
  %v0_805353f = load i32, i32* @esi, align 4
  %v1_805353f = add i32 %v0_805353f, 24
  %v2_805353f = inttoptr i32 %v1_805353f to i32*
  %v3_805353f = load i32, i32* %v2_805353f, align 4
  store i32 %v3_805353f, i32* %eax.global-to-local, align 4
  %v1_8053542 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053542 = add i32 %v1_8053542, 24
  %v3_8053542 = inttoptr i32 %v2_8053542 to i32*
  store i32 %v3_805353f, i32* %v3_8053542, align 4
  %tmp23 = icmp ult i32 %v0_8053539, 9
  br i1 %tmp23, label %dec_label_pc_8053553, label %dec_label_pc_8053547

dec_label_pc_8053547:                             ; preds = %dec_label_pc_8053536
  %v0_8053547 = load i32, i32* @esi, align 4
  %v1_8053547 = add i32 %v0_8053547, 28
  %v2_8053547 = inttoptr i32 %v1_8053547 to i32*
  %v3_8053547 = load i32, i32* %v2_8053547, align 4
  store i32 %v3_8053547, i32* %eax.global-to-local, align 4
  %v1_805354a = load i32, i32* %edx.global-to-local, align 4
  %v2_805354a = add i32 %v1_805354a, 28
  %v3_805354a = inttoptr i32 %v2_805354a to i32*
  store i32 %v3_8053547, i32* %v3_805354a, align 4
  %v0_805354d = load i32, i32* @esi, align 4
  %v1_805354d = add i32 %v0_805354d, 32
  %v2_805354d = inttoptr i32 %v1_805354d to i32*
  %v3_805354d = load i32, i32* %v2_805354d, align 4
  store i32 %v3_805354d, i32* %eax.global-to-local, align 4
  %v1_8053550 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053550 = add i32 %v1_8053550, 32
  %v3_8053550 = inttoptr i32 %v2_8053550 to i32*
  store i32 %v3_805354d, i32* %v3_8053550, align 4
  br label %dec_label_pc_8053553

dec_label_pc_8053553:                             ; preds = %dec_label_pc_8053536, %dec_label_pc_8053525, %dec_label_pc_805350c, %dec_label_pc_80534fb, %dec_label_pc_8053547
  %v0_8053556 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053556 = add i32 %v0_8053556, 8
  store i32 %v1_8053556, i32* @ebx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_805355d = call i32 @function_80538e0(i32 %tmp7)
  br label %dec_label_pc_8053683

dec_label_pc_8053567:                             ; preds = %dec_label_pc_8053428, %dec_label_pc_80534de, %dec_label_pc_80534ac
  %v1_8053578 = phi i32 [ %v1_8053418, %dec_label_pc_8053428 ], [ %v2_80534e5, %dec_label_pc_80534de ], [ %v0_8053567.pre, %dec_label_pc_80534ac ]
  %v5_8053569 = sub i32 %v1_8053578, %stack_var_-40.0
  store i32 %v5_8053569, i32* %ecx.global-to-local, align 4
  %tmp24 = icmp ult i32 %v5_8053569, 16
  br i1 %tmp24, label %dec_label_pc_8053572, label %dec_label_pc_8053584

dec_label_pc_8053572:                             ; preds = %dec_label_pc_8053567
  %v0_8053572 = load i32, i32* @edi, align 4
  %v1_8053572 = add i32 %v0_8053572, 4
  %v2_8053572 = inttoptr i32 %v1_8053572 to i32*
  %v3_8053572 = load i32, i32* %v2_8053572, align 4
  %v1_8053575 = urem i32 %v3_8053572, 2
  %v2_8053578 = or i32 %v1_8053575, %v1_8053578
  store i32 %v2_8053578, i32* %eax.global-to-local, align 4
  store i32 %v2_8053578, i32* %v2_8053572, align 4
  %v0_805357d = load i32, i32* @edi, align 4
  %v1_805357d = load i32, i32* @ebx, align 4
  %v2_805357d = add i32 %v0_805357d, 4
  %v3_805357d = add i32 %v2_805357d, %v1_805357d
  %v4_805357d = inttoptr i32 %v3_805357d to i32*
  %v5_805357d = load i32, i32* %v4_805357d, align 4
  %v6_805357d = or i32 %v5_805357d, 1
  store i32 %v6_805357d, i32* %v4_805357d, align 4
  br label %dec_label_pc_80535b4

dec_label_pc_8053584:                             ; preds = %dec_label_pc_8053567
  store i32 %stack_var_-40.0, i32* %edx.global-to-local, align 4
  %v0_8053588 = load i32, i32* @edi, align 4
  %v2_8053588 = add i32 %v0_8053588, %stack_var_-40.0
  store i32 %v2_8053588, i32* %eax.global-to-local, align 4
  %v1_805358b = add i32 %v0_8053588, 4
  %v2_805358b = inttoptr i32 %v1_805358b to i32*
  %v3_805358b = load i32, i32* %v2_805358b, align 4
  %v1_805358e = urem i32 %v3_805358b, 2
  %v5_8053591 = or i32 %v1_805358e, %stack_var_-40.0
  store i32 %v5_8053591, i32* %v2_805358b, align 4
  %v0_805359b = load i32, i32* %ecx.global-to-local, align 4
  %v1_805359d = or i32 %v0_805359b, 1
  store i32 %v1_805359d, i32* %edx.global-to-local, align 4
  %v1_80535a0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80535a0 = add i32 %v1_80535a0, 4
  %v3_80535a0 = inttoptr i32 %v2_80535a0 to i32*
  store i32 %v1_805359d, i32* %v3_80535a0, align 4
  %v0_80535a3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80535a3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80535a3 = add i32 %v0_80535a3, 4
  %v3_80535a3 = add i32 %v2_80535a3, %v1_80535a3
  %v4_80535a3 = inttoptr i32 %v3_80535a3 to i32*
  %v5_80535a3 = load i32, i32* %v4_80535a3, align 4
  %v6_80535a3 = or i32 %v5_80535a3, 1
  store i32 %v6_80535a3, i32* %v4_80535a3, align 4
  %v0_80535a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80535a8 = add i32 %v0_80535a8, 8
  store i32 %v1_80535a8, i32* %eax.global-to-local, align 4
  store i32 %v1_80535a8, i32* %stack_var_-60, align 4
  %v1_80535ac = call i32 @function_80538e0(i32 %v1_80535a8)
  store i32 %v1_80535ac, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535b4

dec_label_pc_80535b4:                             ; preds = %dec_label_pc_8053572, %dec_label_pc_8053584
  %v0_80535b4 = load i32, i32* @edi, align 4
  %v1_80535b4 = add i32 %v0_80535b4, 8
  store i32 %v1_80535b4, i32* @ebx, align 4
  br label %dec_label_pc_8053690

dec_label_pc_80535bc:                             ; preds = %dec_label_pc_805340c
  store i32 %tmp7, i32* %ecx.global-to-local, align 4
  %v0_80535c0 = load i32, i32* @global_var_805675c.52, align 4
  %v1_80535c5 = add i32 %v0_80535c0, -1
  store i32 %v1_80535c5, i32* %eax.global-to-local, align 4
  %v2_80535ca = inttoptr i32 %v1_8053410 to i32*
  %v3_80535ca = load i32, i32* %v2_80535ca, align 4
  store i32 %v3_80535ca, i32* @ebp, align 4
  %v1_80535cd = or i32 %stack_var_-40.0, 4
  store i32 %v1_80535cd, i32* %stack_var_-44, align 4
  %v2_80535d3 = add i32 %v3_80535ca, %v1_80535c5
  store i32 %v2_80535d3, i32* %edx.global-to-local, align 4
  %v1_80535d6 = sub i32 0, %v0_80535c0
  store i32 %v1_80535d6, i32* %eax.global-to-local, align 4
  %v2_80535d8 = add i32 %v2_80535d3, %v1_80535cd
  %v2_80535db = and i32 %v2_80535d8, %v1_80535d6
  store i32 %v2_80535db, i32* @esi, align 4
  %v2_80535df = sub i32 %v2_80535db, %v3_80535ca
  store i32 %v2_80535df, i32* @ebx, align 4
  %v15_80535e1 = icmp eq i32 %v1_8053418, %v2_80535df
  br i1 %v15_80535e1, label %dec_label_pc_805368c, label %dec_label_pc_80535eb

dec_label_pc_80535eb:                             ; preds = %dec_label_pc_80535bc
  %v2_80535f2 = sub i32 %v1_8053410, %v3_80535ca
  store i32 %v2_80535f2, i32* @edi, align 4
  %v2_80535f4 = add i32 %v3_80535ca, %v1_8053418
  store i32 %v2_80535f4, i32* %eax.global-to-local, align 4
  store i32 %v2_80535f2, i32* %stack_var_-60, align 4
  %v6_80535f8 = inttoptr i32 %v2_80535f2 to i32*
  %v7_80535f8 = call i32 @function_805462a(i32* %v6_80535f8, i32 %v2_80535f4, i32 %v2_80535db, i32 1, i32 %v1_80535cd, i32 %v1_8053418)
  store i32 %v7_80535f8, i32* %eax.global-to-local, align 4
  %v10_8053600 = icmp eq i32 %v7_80535f8, -1
  br i1 %v10_8053600, label %dec_label_pc_8053644, label %dec_label_pc_8053605

dec_label_pc_8053605:                             ; preds = %dec_label_pc_80535eb
  %v1_8053605 = load i32, i32* @ebp, align 4
  %v2_8053605 = add i32 %v1_8053605, %v7_80535f8
  store i32 %v2_8053605, i32* %edx.global-to-local, align 4
  %v0_8053608 = load i32, i32* @ebx, align 4
  %v1_8053608 = or i32 %v0_8053608, 2
  store i32 %v1_8053608, i32* %ebx.global-to-local, align 4
  %v0_805360b = load i32, i32* @esi, align 4
  store i32 %v0_805360b, i32* %eax.global-to-local, align 4
  %v2_805360d = add i32 %v2_8053605, 4
  %v3_805360d = inttoptr i32 %v2_805360d to i32*
  store i32 %v1_8053608, i32* %v3_805360d, align 4
  %v0_8053610 = load i32, i32* %eax.global-to-local, align 4
  %v5_8053610 = sub i32 %v0_8053610, %v1_8053418
  %v1_8053614 = load i32, i32* @global_var_8056764.57, align 4
  %v2_8053614 = add i32 %v1_8053614, %v5_8053610
  store i32 %v2_8053614, i32* %eax.global-to-local, align 4
  store i32 %v2_8053614, i32* @global_var_8056764.57, align 4
  %v1_805361f = load i32, i32* @global_var_8056770.58, align 16
  %tmp25 = icmp ugt i32 %v2_8053614, %v1_805361f
  br i1 %tmp25, label %dec_label_pc_8053627, label %dec_label_pc_805362c

dec_label_pc_8053627:                             ; preds = %dec_label_pc_8053605
  store i32 %v2_8053614, i32* @global_var_8056770.58, align 16
  br label %dec_label_pc_805362c

dec_label_pc_805362c:                             ; preds = %dec_label_pc_8053605, %dec_label_pc_8053627
  %v1_805362c = load i32, i32* @global_var_8056768.59, align 8
  %v2_805362c = add i32 %v1_805362c, %v2_8053614
  store i32 %v2_805362c, i32* %eax.global-to-local, align 4
  %v1_8053632 = load i32, i32* @global_var_8056774.60, align 4
  %tmp26 = icmp ugt i32 %v2_805362c, %v1_8053632
  br i1 %tmp26, label %dec_label_pc_805363a, label %dec_label_pc_805363f

dec_label_pc_805363a:                             ; preds = %dec_label_pc_805362c
  store i32 %v2_805362c, i32* @global_var_8056774.60, align 4
  br label %dec_label_pc_805363f

dec_label_pc_805363f:                             ; preds = %dec_label_pc_805362c, %dec_label_pc_805363a
  %v0_805363f = load i32, i32* %edx.global-to-local, align 4
  %v1_805363f = add i32 %v0_805363f, 8
  store i32 %v1_805363f, i32* @ebx, align 4
  br label %dec_label_pc_8053690

dec_label_pc_8053644:                             ; preds = %dec_label_pc_80535eb
  %v2_8053644 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8053644, i32* %eax.global-to-local, align 4
  %v10_8053647 = icmp ult i32 %v1_8053418, %v2_8053644
  %v1_805364b = icmp eq i1 %v10_8053647, false
  br i1 %v1_805364b, label %dec_label_pc_805368c, label %dec_label_pc_805364d

dec_label_pc_805364d:                             ; preds = %dec_label_pc_8053644
  %v1_8053654 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8053654, i32* %eax.global-to-local, align 4
  store i32 %v1_8053654, i32* %stack_var_-60, align 4
  %v1_8053658 = call i32 @function_8052b1b(i32 %v1_8053654)
  store i32 %v1_8053658, i32* %eax.global-to-local, align 4
  store i32 %v1_8053658, i32* @ebx, align 4
  %v1_8053662 = icmp eq i32 %v1_8053658, 0
  br i1 %v1_8053662, label %dec_label_pc_8053688, label %dec_label_pc_8053666

dec_label_pc_8053666:                             ; preds = %dec_label_pc_805364d
  %v1_805366b = add i32 %v1_8053418, -8
  store i32 %v1_805366b, i32* %eax.global-to-local, align 4
  store i32 %v1_8053658, i32* %stack_var_-60, align 4
  %v3_8053674 = inttoptr i32 %v1_8053658 to i16*
  %v4_8053674 = call i32 @function_80547c6(i16* %v3_8053674, i32 %tmp7, i32 %v1_805366b)
  store i32 %v4_8053674, i32* %eax.global-to-local, align 4
  store i32 %v1_8053658, i32* %edx.global-to-local, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_805367e = call i32 @function_80538e0(i32 %tmp7)
  br label %dec_label_pc_8053683

dec_label_pc_8053683:                             ; preds = %dec_label_pc_8053553, %dec_label_pc_8053666
  %storemerge = phi i32 [ %v1_805367e, %dec_label_pc_8053666 ], [ %v1_805355d, %dec_label_pc_8053553 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053690

dec_label_pc_8053688:                             ; preds = %dec_label_pc_805364d, %dec_label_pc_80534b7
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8053690

dec_label_pc_805368c:                             ; preds = %dec_label_pc_8053644, %dec_label_pc_80535bc, %dec_label_pc_8053456
  store i32 %tmp7, i32* @ebx, align 4
  br label %dec_label_pc_8053690

dec_label_pc_8053690:                             ; preds = %dec_label_pc_8053688, %dec_label_pc_8053683, %dec_label_pc_805363f, %dec_label_pc_80535b4, %dec_label_pc_805368c
  store i32 %v2_80533c5, i32* @eax, align 4
  store i32 %v2_80533c5, i32* %stack_var_-60, align 4
  %v2_8053699 = call i32 @function_8053f04(i32 %v2_80533c5, i32 1)
  store i32 %v2_8053699, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805369e

dec_label_pc_805369e:                             ; preds = %dec_label_pc_80533a9, %dec_label_pc_8053395, %dec_label_pc_8053690
  br label %dec_label_pc_80536a1

dec_label_pc_80536a1:                             ; preds = %dec_label_pc_80533e3, %dec_label_pc_805369e
  %v0_80536a4 = load i32, i32* @ebx, align 4
  store i32 %v0_80536a4, i32* %eax.global-to-local, align 4
  store i32 %v0_8053386, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80536a4

; uselistorder directives
  uselistorder i32 %v1_8053658, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_805362c, { 1, 0, 2 }
  uselistorder i32 %v2_8053614, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_80535f2, { 1, 0, 2 }
  uselistorder i32 %v1_80535cd, { 1, 0, 2 }
  uselistorder i32 %v3_80535ca, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8053588, { 1, 0 }
  uselistorder i32 %v1_80534ee, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_80534c2, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_8053466, { 1, 0, 2 }
  uselistorder i32 %v3_8053479, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8053436, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8053418, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_8053410, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 13, 4, 0, 1, 9, 10, 8, 7, 2, 5, 3, 6, 12, 11 }
  uselistorder i32 %v1_8053405, { 1, 0 }
  uselistorder i32 %v1_80533f5, { 0, 2, 1 }
  uselistorder i32 %v0_80533de, { 1, 0 }
  uselistorder i32 %v2_80533c5, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 6, 15, 16, 17, 18, 19 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 50, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 38, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49 }
  uselistorder i32 -32, { 0, 1, 5, 4, 6, 7, 8, 9, 2, 3 }
  uselistorder i32 (i32)* @function_80538e0, { 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 (i32)* @function_8052b1b, { 5, 4, 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80536a1, { 1, 0 }
  uselistorder label %dec_label_pc_805369e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053690, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053683, { 1, 0 }
  uselistorder label %dec_label_pc_805363f, { 1, 0 }
  uselistorder label %dec_label_pc_805362c, { 1, 0 }
  uselistorder label %dec_label_pc_80535b4, { 1, 0 }
  uselistorder label %dec_label_pc_8053567, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053553, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80534ac, { 1, 0 }
  uselistorder label %dec_label_pc_805340c, { 1, 0 }
}

define i32 @function_80536ab() local_unnamed_addr {
dec_label_pc_80536ab:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_80536b2 = load i32, i32* @edx, align 4
  store i32 %v0_80536b2, i32* %ebp.global-to-local, align 4
  %v1_80536b4 = add i32 %v0_80536b2, 860
  %v2_80536b4 = inttoptr i32 %v1_80536b4 to i32*
  %v3_80536b4 = load i32, i32* %v2_80536b4, align 4
  store i32 %v3_80536b4, i32* %ecx.global-to-local, align 4
  %v1_80536ba = add i32 %v0_80536b2, 44
  %v2_80536ba = inttoptr i32 %v1_80536ba to i32*
  %v3_80536ba = load i32, i32* %v2_80536ba, align 4
  %v1_80536bd = add i32 %v3_80536ba, 4
  %v2_80536bd = inttoptr i32 %v1_80536bd to i32*
  %v3_80536bd = load i32, i32* %v2_80536bd, align 4
  %v1_80536c0 = and i32 %v3_80536bd, -4
  store i32 %v1_80536c0, i32* @esi, align 4
  %v1_80536c5 = load i32, i32* @eax, align 4
  %v2_80536c5 = add i32 %v3_80536b4, -17
  %v2_80536c7 = add i32 %v2_80536c5, %v1_80536c0
  %v3_80536c7 = sub i32 %v2_80536c7, %v1_80536c5
  %div = udiv i32 %v3_80536c7, %v3_80536b4
  store i32 %div, i32* %eax.global-to-local, align 4
  %v1_80536cf = add i32 %div, -1
  %v4_80536d2 = mul i32 %v1_80536cf, %v3_80536b4
  store i32 %v4_80536d2, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_80536d2, 1
  br i1 %tmp11, label %dec_label_pc_805372e, label %dec_label_pc_80536d9

dec_label_pc_80536d9:                             ; preds = %dec_label_pc_80536ab
  %v1_80536de = call i32 @function_80546cd(i32 0)
  store i32 %v1_80536de, i32* %edi.global-to-local, align 4
  %v0_80536e5 = load i32, i32* @esi, align 4
  store i32 %v0_80536e5, i32* %eax.global-to-local, align 4
  %v1_80536e7 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80536e7 = add i32 %v1_80536e7, 44
  %v3_80536e7 = inttoptr i32 %v2_80536e7 to i32*
  %v4_80536e7 = load i32, i32* %v3_80536e7, align 4
  %v5_80536e7 = add i32 %v4_80536e7, %v0_80536e5
  store i32 %v5_80536e7, i32* %eax.global-to-local, align 4
  %v12_80536ed = icmp eq i32 %v1_80536de, %v5_80536e7
  %v1_80536ef = icmp eq i1 %v12_80536ed, false
  br i1 %v1_80536ef, label %dec_label_pc_805372e, label %dec_label_pc_80536f1

dec_label_pc_80536f1:                             ; preds = %dec_label_pc_80536d9
  %v1_80536f4 = sub i32 0, %v4_80536d2
  store i32 %v1_80536f4, i32* @ebx, align 4
  %v1_80536f7 = call i32 @function_80546cd(i32 %v1_80536f4)
  store i32 %v1_80536f7, i32* %eax.global-to-local, align 4
  %v1_8053703 = call i32 @function_80546cd(i32 0)
  store i32 %v1_8053703, i32* %eax.global-to-local, align 4
  %v10_805370b = icmp eq i32 %v1_8053703, -1
  br i1 %v10_805370b, label %dec_label_pc_805372e, label %dec_label_pc_8053710

dec_label_pc_8053710:                             ; preds = %dec_label_pc_80536f1
  %v0_8053710 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053712 = sub i32 %v0_8053710, %v1_8053703
  %v12_8053712 = icmp eq i32 %v2_8053712, 0
  store i32 %v2_8053712, i32* %ecx.global-to-local, align 4
  br i1 %v12_8053712, label %dec_label_pc_805372e, label %dec_label_pc_8053716

dec_label_pc_8053716:                             ; preds = %dec_label_pc_8053710
  %v0_8053716 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053716 = add i32 %v0_8053716, 44
  %v2_8053716 = inttoptr i32 %v1_8053716 to i32*
  %v3_8053716 = load i32, i32* %v2_8053716, align 4
  store i32 %v3_8053716, i32* %eax.global-to-local, align 4
  %v1_8053719 = add i32 %v0_8053716, 872
  %v2_8053719 = inttoptr i32 %v1_8053719 to i32*
  %v3_8053719 = load i32, i32* %v2_8053719, align 4
  %v5_8053719 = sub i32 %v3_8053719, %v2_8053712
  store i32 %v5_8053719, i32* %v2_8053719, align 4
  %v0_805371f = load i32, i32* @esi, align 4
  %v1_805371f = load i32, i32* %ecx.global-to-local, align 4
  %v2_805371f = sub i32 %v0_805371f, %v1_805371f
  %v1_8053721 = or i32 %v2_805371f, 1
  %v1_8053724 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053724 = add i32 %v1_8053724, 4
  %v3_8053724 = inttoptr i32 %v2_8053724 to i32*
  store i32 %v1_8053721, i32* %v3_8053724, align 4
  br label %dec_label_pc_8053730

dec_label_pc_805372e:                             ; preds = %dec_label_pc_8053710, %dec_label_pc_80536f1, %dec_label_pc_80536d9, %dec_label_pc_80536ab
  br label %dec_label_pc_8053730

dec_label_pc_8053730:                             ; preds = %dec_label_pc_8053716, %dec_label_pc_805372e
  %storemerge = phi i32 [ 1, %dec_label_pc_8053716 ], [ 0, %dec_label_pc_805372e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053703, { 1, 0, 2 }
  uselistorder i32 %v4_80536d2, { 1, 2, 0 }
  uselistorder i32 %v3_80536b4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_80546cd, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053730, { 1, 0 }
}

define i32 @function_8053738(i32* %arg1) local_unnamed_addr {
dec_label_pc_8053738:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp20 = ptrtoint i32* %arg1 to i32
  %v0_8053739 = load i32, i32* @edi, align 4
  %v0_805373a = load i32, i32* @esi, align 4
  %v0_805373b = load i32, i32* @ebx, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_8053743 = load i32, i32* %arg1, align 4
  store i32 %v2_8053743, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_805374a = icmp eq i32 %v2_8053743, 0
  br i1 %v1_805374a, label %dec_label_pc_8053864.lr.ph, label %dec_label_pc_8053752

dec_label_pc_8053864.lr.ph:                       ; preds = %dec_label_pc_8053738
  %v3_8053868 = add i32 %tmp20, 44
  br label %dec_label_pc_8053864

dec_label_pc_8053752:                             ; preds = %dec_label_pc_8053738
  %v1_8053756 = and i32 %v2_8053743, -3
  store i32 %v1_8053756, i32* %arg1, align 4
  %v1_805375b = add i32 %tmp20, 52
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_8053777 = udiv i32 %v1_8053756, 8
  %v2_805377a = mul nuw i32 %v2_8053777, 4
  %v3_805377a = add i32 %tmp20, -4
  %v4_805377a = add i32 %v3_805377a, %v2_805377a
  store i32 %v4_805377a, i32* %eax.global-to-local, align 4
  %v2_8053841 = add i32 %tmp20, 44
  %v3_8053841 = inttoptr i32 %v2_8053841 to i32*
  %v1_8053814 = add i32 %tmp20, 60
  %v2_8053814 = inttoptr i32 %v1_8053814 to i32*
  br label %dec_label_pc_8053782

dec_label_pc_8053782:                             ; preds = %dec_label_pc_805385a, %dec_label_pc_8053752
  %v0_8053790.in = phi i32 [ %tmp20, %dec_label_pc_8053752 ], [ %v0_8053790, %dec_label_pc_805385a ]
  %v0_8053790 = add i32 %v0_8053790.in, 4
  store i32 %v0_8053790, i32* %eax.global-to-local, align 4
  %v1_8053786 = inttoptr i32 %v0_8053790 to i32*
  %v2_8053786 = load i32, i32* %v1_8053786, align 4
  store i32 %v2_8053786, i32* @ecx, align 4
  %v1_8053788 = icmp eq i32 %v2_8053786, 0
  br i1 %v1_8053788, label %dec_label_pc_8053850, label %dec_label_pc_8053790

dec_label_pc_8053790:                             ; preds = %dec_label_pc_8053782
  store i32 0, i32* %v1_8053786, align 4
  %v0_8053796.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053796

dec_label_pc_8053796:                             ; preds = %dec_label_pc_8053844, %dec_label_pc_8053790
  %v0_80537b3 = phi i32 [ %v3_8053796, %dec_label_pc_8053844 ], [ %v0_8053796.pre, %dec_label_pc_8053790 ]
  %v1_8053796 = add i32 %v0_80537b3, 8
  %v2_8053796 = inttoptr i32 %v1_8053796 to i32*
  %v3_8053796 = load i32, i32* %v2_8053796, align 4
  store i32 %v3_8053796, i32* %edx.global-to-local, align 4
  %v1_805379d = add i32 %v0_80537b3, 4
  %v2_805379d = inttoptr i32 %v1_805379d to i32*
  %v3_805379d = load i32, i32* %v2_805379d, align 4
  store i32 %v3_805379d, i32* %eax.global-to-local, align 4
  %v1_80537a2 = and i32 %v3_805379d, -2
  store i32 %v1_80537a2, i32* @edi, align 4
  %v2_80537a5 = urem i32 %v3_805379d, 2
  %v3_80537a5 = icmp eq i32 %v2_80537a5, 0
  %v2_80537a7 = add i32 %v1_80537a2, %v0_80537b3
  store i32 %v2_80537a7, i32* @ebx, align 4
  %v1_80537aa = add i32 %v2_80537a7, 4
  %v2_80537aa = inttoptr i32 %v1_80537aa to i32*
  %v3_80537aa = load i32, i32* %v2_80537aa, align 4
  store i32 %v3_80537aa, i32* %edx.global-to-local, align 4
  %v1_80537b1 = icmp eq i1 %v3_80537a5, false
  br i1 %v1_80537b1, label %dec_label_pc_80537d3, label %dec_label_pc_80537b3

dec_label_pc_80537b3:                             ; preds = %dec_label_pc_8053796
  %v1_80537b3 = inttoptr i32 %v0_80537b3 to i32*
  %v2_80537b3 = load i32, i32* %v1_80537b3, align 4
  store i32 %v2_80537b3, i32* %ebp.global-to-local, align 4
  %v2_80537b7 = sub i32 %v0_80537b3, %v2_80537b3
  store i32 %v2_80537b7, i32* %eax.global-to-local, align 4
  %v1_80537b9 = add i32 %v2_80537b7, 8
  %v2_80537b9 = inttoptr i32 %v1_80537b9 to i32*
  %v3_80537b9 = load i32, i32* %v2_80537b9, align 4
  store i32 %v3_80537b9, i32* @esi, align 4
  %v1_80537bc = add i32 %v2_80537b7, 12
  %v2_80537bc = inttoptr i32 %v1_80537bc to i32*
  %v3_80537bc = load i32, i32* %v2_80537bc, align 4
  store i32 %v3_80537bc, i32* %edx.global-to-local, align 4
  %v1_80537bf = add i32 %v3_80537b9, 12
  %v2_80537bf = inttoptr i32 %v1_80537bf to i32*
  %v3_80537bf = load i32, i32* %v2_80537bf, align 4
  store i32 %v3_80537bf, i32* @ecx, align 4
  %v12_80537c2 = icmp eq i32 %v3_80537bf, %v2_80537b7
  %v1_80537c4 = icmp eq i1 %v12_80537c2, false
  br i1 %v1_80537c4, label %dec_label_pc_8053803, label %dec_label_pc_80537c6

dec_label_pc_80537c6:                             ; preds = %dec_label_pc_80537b3
  %v1_80537c6 = add i32 %v3_80537bc, 8
  %v2_80537c6 = inttoptr i32 %v1_80537c6 to i32*
  %v3_80537c6 = load i32, i32* %v2_80537c6, align 4
  %v15_80537c6 = icmp eq i32 %v3_80537c6, %v3_80537bf
  %v1_80537c9 = icmp eq i1 %v15_80537c6, false
  br i1 %v1_80537c9, label %dec_label_pc_8053803, label %dec_label_pc_80537cb

dec_label_pc_80537cb:                             ; preds = %dec_label_pc_80537c6
  %v2_80537cb = add i32 %v2_80537b3, %v1_80537a2
  store i32 %v2_80537cb, i32* @edi, align 4
  store i32 %v3_80537bc, i32* %v2_80537bf, align 4
  %v0_80537d0 = load i32, i32* @esi, align 4
  %v1_80537d0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80537d0 = add i32 %v1_80537d0, 8
  %v3_80537d0 = inttoptr i32 %v2_80537d0 to i32*
  store i32 %v0_80537d0, i32* %v3_80537d0, align 4
  %v0_80537de.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80537d3

dec_label_pc_80537d3:                             ; preds = %dec_label_pc_8053796, %dec_label_pc_80537cb
  %v1_80537e7 = phi i32 [ %v2_80537a7, %dec_label_pc_8053796 ], [ %v0_80537de.pre, %dec_label_pc_80537cb ]
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_80537db = and i32 %v3_80537aa, -4
  store i32 %v1_80537db, i32* %ebp.global-to-local, align 4
  %v4_80537de = load i32, i32* %v3_8053841, align 4
  %v15_80537de = icmp eq i32 %v1_80537e7, %v4_80537de
  br i1 %v15_80537de, label %dec_label_pc_8053834, label %dec_label_pc_80537e3

dec_label_pc_80537e3:                             ; preds = %dec_label_pc_80537d3
  %v2_80537e3 = add i32 %v1_80537e7, 4
  %v3_80537e3 = add i32 %v2_80537e3, %v1_80537db
  %v4_80537e3 = inttoptr i32 %v3_80537e3 to i32*
  %v5_80537e3 = load i32, i32* %v4_80537e3, align 4
  store i32 %v5_80537e3, i32* %eax.global-to-local, align 4
  %v3_80537e7 = inttoptr i32 %v2_80537e3 to i32*
  store i32 %v1_80537db, i32* %v3_80537e7, align 4
  %v0_80537ea = load i32, i32* %eax.global-to-local, align 4
  %v1_80537ea = urem i32 %v0_80537ea, 2
  %v2_80537ea = icmp eq i32 %v1_80537ea, 0
  store i32 %v1_80537ea, i32* %eax.global-to-local, align 4
  %v1_80537ef = icmp eq i1 %v2_80537ea, false
  br i1 %v1_80537ef, label %dec_label_pc_8053810, label %dec_label_pc_80537f1

dec_label_pc_80537f1:                             ; preds = %dec_label_pc_80537e3
  %v0_80537f1 = load i32, i32* @ebx, align 4
  %v1_80537f1 = add i32 %v0_80537f1, 8
  %v2_80537f1 = inttoptr i32 %v1_80537f1 to i32*
  %v3_80537f1 = load i32, i32* %v2_80537f1, align 4
  store i32 %v3_80537f1, i32* @edx, align 4
  %v1_80537f4 = add i32 %v0_80537f1, 12
  %v2_80537f4 = inttoptr i32 %v1_80537f4 to i32*
  %v3_80537f4 = load i32, i32* %v2_80537f4, align 4
  store i32 %v3_80537f4, i32* %eax.global-to-local, align 4
  %v1_80537f7 = add i32 %v3_80537f1, 12
  %v2_80537f7 = inttoptr i32 %v1_80537f7 to i32*
  %v3_80537f7 = load i32, i32* %v2_80537f7, align 4
  store i32 %v3_80537f7, i32* @esi, align 4
  %v12_80537fa = icmp eq i32 %v3_80537f7, %v0_80537f1
  %v1_80537fc = icmp eq i1 %v12_80537fa, false
  br i1 %v1_80537fc, label %dec_label_pc_8053803, label %dec_label_pc_80537fe

dec_label_pc_80537fe:                             ; preds = %dec_label_pc_80537f1
  %v1_80537fe = add i32 %v3_80537f4, 8
  %v2_80537fe = inttoptr i32 %v1_80537fe to i32*
  %v3_80537fe = load i32, i32* %v2_80537fe, align 4
  %v15_80537fe = icmp eq i32 %v3_80537fe, %v3_80537f7
  br i1 %v15_80537fe, label %dec_label_pc_8053808, label %dec_label_pc_8053803

dec_label_pc_8053803:                             ; preds = %dec_label_pc_80537fe, %dec_label_pc_80537f1, %dec_label_pc_80537c6, %dec_label_pc_80537b3
  %v0_8053803 = call i32 @function_8053a7c()
  store i32 %v0_8053803, i32* %eax.global-to-local, align 4
  %v1_805380a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053808

dec_label_pc_8053808:                             ; preds = %dec_label_pc_80537fe, %dec_label_pc_8053803
  %v1_805380a = phi i32 [ %v3_80537f1, %dec_label_pc_80537fe ], [ %v1_805380a.pre, %dec_label_pc_8053803 ]
  %v0_805380a = phi i32 [ %v3_80537f4, %dec_label_pc_80537fe ], [ %v0_8053803, %dec_label_pc_8053803 ]
  %v0_8053808 = load i32, i32* @edi, align 4
  %v1_8053808 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053808 = add i32 %v1_8053808, %v0_8053808
  store i32 %v2_8053808, i32* @edi, align 4
  %v2_805380a = add i32 %v1_805380a, 12
  %v3_805380a = inttoptr i32 %v2_805380a to i32*
  store i32 %v0_805380a, i32* %v3_805380a, align 4
  %v0_805380d = load i32, i32* @edx, align 4
  %v1_805380d = load i32, i32* %eax.global-to-local, align 4
  %v2_805380d = add i32 %v1_805380d, 8
  %v3_805380d = inttoptr i32 %v2_805380d to i32*
  store i32 %v0_805380d, i32* %v3_805380d, align 4
  br label %dec_label_pc_8053810

dec_label_pc_8053810:                             ; preds = %dec_label_pc_80537e3, %dec_label_pc_8053808
  store i32 %v1_805375b, i32* %eax.global-to-local, align 4
  %v3_8053814 = load i32, i32* %v2_8053814, align 4
  store i32 %v3_8053814, i32* %edx.global-to-local, align 4
  %v0_8053817 = load i32, i32* @ecx, align 4
  store i32 %v0_8053817, i32* %v2_8053814, align 4
  %v0_805381a = load i32, i32* @edi, align 4
  %v1_805381c = or i32 %v0_805381a, 1
  store i32 %v1_805381c, i32* %eax.global-to-local, align 4
  %v0_805381f = load i32, i32* @ecx, align 4
  %v1_805381f = load i32, i32* %edx.global-to-local, align 4
  %v2_805381f = add i32 %v1_805381f, 12
  %v3_805381f = inttoptr i32 %v2_805381f to i32*
  store i32 %v0_805381f, i32* %v3_805381f, align 4
  %v0_8053822 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053822 = load i32, i32* @ecx, align 4
  %v2_8053822 = add i32 %v1_8053822, 4
  %v3_8053822 = inttoptr i32 %v2_8053822 to i32*
  store i32 %v0_8053822, i32* %v3_8053822, align 4
  store i32 %v1_805375b, i32* %eax.global-to-local, align 4
  %v0_8053829 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053829 = load i32, i32* @ecx, align 4
  %v2_8053829 = add i32 %v1_8053829, 8
  %v3_8053829 = inttoptr i32 %v2_8053829 to i32*
  store i32 %v0_8053829, i32* %v3_8053829, align 4
  %v0_805382c = load i32, i32* %eax.global-to-local, align 4
  %v1_805382c = load i32, i32* @ecx, align 4
  %v2_805382c = add i32 %v1_805382c, 12
  %v3_805382c = inttoptr i32 %v2_805382c to i32*
  store i32 %v0_805382c, i32* %v3_805382c, align 4
  %v0_805382f = load i32, i32* @edi, align 4
  %v1_805382f = load i32, i32* @ecx, align 4
  %v3_805382f = add i32 %v1_805382f, %v0_805382f
  %v4_805382f = inttoptr i32 %v3_805382f to i32*
  store i32 %v0_805382f, i32* %v4_805382f, align 4
  br label %dec_label_pc_8053844

dec_label_pc_8053834:                             ; preds = %dec_label_pc_80537d3
  %v0_8053834 = load i32, i32* @edi, align 4
  %v2_8053834 = add i32 %v0_8053834, %v1_80537db
  %v1_8053837 = or i32 %v2_8053834, 1
  store i32 %v1_8053837, i32* %eax.global-to-local, align 4
  %v1_805383a = load i32, i32* @ecx, align 4
  %v2_805383a = add i32 %v1_805383a, 4
  %v3_805383a = inttoptr i32 %v2_805383a to i32*
  store i32 %v1_8053837, i32* %v3_805383a, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v0_8053841 = load i32, i32* @ecx, align 4
  store i32 %v0_8053841, i32* %v3_8053841, align 4
  br label %dec_label_pc_8053844

dec_label_pc_8053844:                             ; preds = %dec_label_pc_8053810, %dec_label_pc_8053834
  store i32 %v3_8053796, i32* @ecx, align 4
  %v1_8053848 = icmp eq i32 %v3_8053796, 0
  %v1_805384a = icmp eq i1 %v1_8053848, false
  br i1 %v1_805384a, label %dec_label_pc_8053796, label %dec_label_pc_8053850

dec_label_pc_8053850:                             ; preds = %dec_label_pc_8053844, %dec_label_pc_8053782
  %v15_8053854 = icmp eq i32 %v0_8053790, %v4_805377a
  br i1 %v15_8053854, label %dec_label_pc_80538d8, label %dec_label_pc_805385a

dec_label_pc_805385a:                             ; preds = %dec_label_pc_8053850
  br label %dec_label_pc_8053782

dec_label_pc_8053864:                             ; preds = %dec_label_pc_8053864.lr.ph, %dec_label_pc_8053864
  %v1_8053868 = phi i32 [ 1, %dec_label_pc_8053864.lr.ph ], [ %v0_8053873, %dec_label_pc_8053864 ]
  %v2_8053868 = mul i32 %v1_8053868, 8
  %v4_8053868 = add i32 %v3_8053868, %v2_8053868
  store i32 %v4_8053868, i32* %eax.global-to-local, align 4
  %v1_805386c = add i32 %v1_8053868, 1
  store i32 %v1_805386c, i32* %edx.global-to-local, align 4
  %v2_805386d = add i32 %v4_8053868, 12
  %v3_805386d = inttoptr i32 %v2_805386d to i32*
  store i32 %v4_8053868, i32* %v3_805386d, align 4
  %v0_8053870 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053870 = add i32 %v0_8053870, 8
  %v3_8053870 = inttoptr i32 %v2_8053870 to i32*
  store i32 %v0_8053870, i32* %v3_8053870, align 4
  %v0_8053873 = load i32, i32* %edx.global-to-local, align 4
  %v7_8053876 = icmp sgt i32 %v0_8053873, 95
  br i1 %v7_8053876, label %dec_label_pc_8053878, label %dec_label_pc_8053864

dec_label_pc_8053878:                             ; preds = %dec_label_pc_8053864
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_805387c = add i32 %tmp20, 864
  %v2_805387c = inttoptr i32 %v1_805387c to i32*
  %v3_805387c = load i32, i32* %v2_805387c, align 4
  %v4_805387c = or i32 %v3_805387c, 1
  store i32 %v4_805387c, i32* %v2_805387c, align 4
  %v0_8053883 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053883 = add i32 %v0_8053883, 840
  %v2_8053883 = inttoptr i32 %v1_8053883 to i32*
  store i32 0, i32* %v2_8053883, align 4
  %v0_805388d = load i32, i32* %eax.global-to-local, align 4
  %v1_805388d = add i32 %v0_805388d, 852
  %v2_805388d = inttoptr i32 %v1_805388d to i32*
  store i32 65536, i32* %v2_805388d, align 4
  %v0_8053897 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053897 = add i32 %v0_8053897, 844
  %v2_8053897 = inttoptr i32 %v1_8053897 to i32*
  store i32 262144, i32* %v2_8053897, align 4
  %v0_80538a1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538a1 = add i32 %v0_80538a1, 836
  %v2_80538a1 = inttoptr i32 %v1_80538a1 to i32*
  store i32 262144, i32* %v2_80538a1, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_80538b2 = load i32, i32* %arg1, align 4
  %v1_80538b4 = urem i32 %v2_80538b2, 4
  %v1_80538b7 = or i32 %v1_80538b4, 72
  store i32 %v1_80538b7, i32* %arg1, align 4
  %v1_80538be = add i32 %tmp20, 52
  store i32 %v1_80538be, i32* %eax.global-to-local, align 4
  %v2_80538c1 = add i32 %tmp20, 44
  %v3_80538c1 = inttoptr i32 %v2_80538c1 to i32*
  store i32 %v1_80538be, i32* %v3_80538c1, align 4
  %v1_80538c6 = call i32 @function_8053d7d(i32 30)
  store i32 %v1_80538c6, i32* %eax.global-to-local, align 4
  %v2_80538d2 = add i32 %tmp20, 860
  %v3_80538d2 = inttoptr i32 %v2_80538d2 to i32*
  store i32 %v1_80538c6, i32* %v3_80538d2, align 4
  br label %dec_label_pc_80538d8

dec_label_pc_80538d8:                             ; preds = %dec_label_pc_8053850, %dec_label_pc_8053878
  store i32 %v0_805373b, i32* @ebx, align 4
  store i32 %v0_805373a, i32* @esi, align 4
  store i32 %v0_8053739, i32* @edi, align 4
  %v0_80538df = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80538df

; uselistorder directives
  uselistorder i32 %v0_8053873, { 1, 0 }
  uselistorder i32 %v0_8053870, { 1, 0 }
  uselistorder i32 %v1_8053868, { 1, 0 }
  uselistorder i32 %v0_805382f, { 1, 0 }
  uselistorder i32 %v1_80537ea, { 1, 0 }
  uselistorder i32 %v2_80537e3, { 1, 0 }
  uselistorder i32 %v1_80537db, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80537e7, { 1, 0 }
  uselistorder i32 %v3_8053796, { 2, 1, 3, 0 }
  uselistorder i32 %v0_80537b3, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8053790, { 2, 0, 1, 3 }
  uselistorder i32* %v3_8053841, { 1, 0 }
  uselistorder i32 %v1_805375b, { 1, 0 }
  uselistorder i32 %tmp20, { 6, 2, 1, 15, 13, 12, 10, 9, 0, 4, 11, 5, 8, 3, 14, 7 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27 }
  uselistorder i32 860, { 1, 0 }
  uselistorder i32 -3, { 1, 0 }
  uselistorder label %dec_label_pc_80538d8, { 1, 0 }
  uselistorder label %dec_label_pc_8053864, { 1, 0 }
  uselistorder label %dec_label_pc_8053844, { 1, 0 }
  uselistorder label %dec_label_pc_8053810, { 1, 0 }
  uselistorder label %dec_label_pc_8053808, { 1, 0 }
  uselistorder label %dec_label_pc_80537d3, { 1, 0 }
}

define i32 @function_80538e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_80538e0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80538e0 = load i32, i32* @ebp, align 4
  %v0_80538e1 = load i32, i32* @edi, align 4
  %v0_80538e2 = load i32, i32* @esi, align 4
  %v0_80538e3 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80538eb = icmp eq i32 %arg1, 0
  br i1 %v1_80538eb, label %dec_label_pc_8053a74, label %dec_label_pc_80538f3

dec_label_pc_80538f3:                             ; preds = %dec_label_pc_80538e0
  %v2_80538fe = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80538fe, i32* @eax, align 4
  %v2_8053903 = call i32 @function_8053f04(i32 %v2_80538fe, i32 134561537)
  store i32 %v2_8053903, i32* %eax.global-to-local, align 4
  %v1_805390f = call i32 @function_8053f01(i32 ptrtoint (i32* @global_var_805603c.45 to i32))
  %v1_8053914 = add i32 %arg1, -8
  store i32 %v1_8053914, i32* @ecx, align 4
  %v0_8053917 = load i8, i8* @global_var_8056400.46, align 1
  %v1_8053917 = sext i8 %v0_8053917 to i32
  store i32 %v1_8053917, i32* %eax.global-to-local, align 4
  %v1_805391f = add i32 %arg1, -4
  %v2_805391f = inttoptr i32 %v1_805391f to i32*
  %v3_805391f = load i32, i32* %v2_805391f, align 4
  store i32 %v3_805391f, i32* %edx.global-to-local, align 4
  %v1_8053924 = and i32 %v3_805391f, -4
  %v4_8053924 = trunc i32 %v1_8053924 to i8
  store i32 %v1_8053924, i32* @ebx, align 4
  %v8_8053929 = icmp ugt i8 %v4_8053924, %v0_8053917
  br i1 %v8_8053929, label %dec_label_pc_805394b, label %dec_label_pc_805392b

dec_label_pc_805392b:                             ; preds = %dec_label_pc_80538f3
  %v2_805392b = udiv i32 %v3_805391f, 8
  %v1_805392e = or i32 %v1_8053917, 3
  %v3_805392e = trunc i32 %v1_805392e to i8
  store i32 %v1_805392e, i32* %eax.global-to-local, align 4
  store i8 %v3_805392e, i8* @global_var_8056400.46, align 1024
  %v1_8053936 = mul nuw i32 %v2_805392b, 4
  %v2_8053936 = add i32 %v1_8053936, ptrtoint (i8* @global_var_8056400.46 to i32)
  store i32 %v2_8053936, i32* %edx.global-to-local, align 4
  %v1_805393d = add i32 %v1_8053936, add (i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32 -4)
  %v2_805393d = inttoptr i32 %v1_805393d to i32*
  %v3_805393d = load i32, i32* %v2_805393d, align 4
  store i32 %v3_805393d, i32* %eax.global-to-local, align 4
  %v3_8053940 = inttoptr i32 %arg1 to i32*
  store i32 %v3_805393d, i32* %v3_8053940, align 4
  %v0_8053943 = load i32, i32* @ecx, align 4
  %v1_8053943 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053943 = add i32 %v1_8053943, -4
  %v3_8053943 = inttoptr i32 %v2_8053943 to i32*
  store i32 %v0_8053943, i32* %v3_8053943, align 4
  br label %dec_label_pc_8053a63

dec_label_pc_805394b:                             ; preds = %dec_label_pc_80538f3
  %v1_805394b = trunc i32 %v3_805391f to i8
  %v2_805394b = and i8 %v1_805394b, 2
  %v3_805394b = icmp eq i8 %v2_805394b, 0
  %v5_805394b = zext i8 %v2_805394b to i32
  %v7_805394b = and i32 %v3_805391f, -256
  %v8_805394b = or i32 %v5_805394b, %v7_805394b
  store i32 %v8_805394b, i32* %edx.global-to-local, align 4
  %v1_805394e = icmp eq i1 %v3_805394b, false
  br i1 %v1_805394e, label %dec_label_pc_8053a43, label %dec_label_pc_8053954

dec_label_pc_8053954:                             ; preds = %dec_label_pc_805394b
  %v1_8053954 = or i32 %v1_8053917, 1
  %v3_8053954 = trunc i32 %v1_8053954 to i8
  store i32 %v1_8053954, i32* %eax.global-to-local, align 4
  %v2_8053957 = add i32 %v1_8053924, %v1_8053914
  store i32 %v2_8053957, i32* @esi, align 4
  store i8 %v3_8053954, i8* @global_var_8056400.46, align 1024
  %v1_805395f = add i32 %v2_8053957, 4
  %v2_805395f = inttoptr i32 %v1_805395f to i32*
  %v3_805395f = load i32, i32* %v2_805395f, align 4
  store i32 %v3_805395f, i32* %eax.global-to-local, align 4
  %v2_8053966 = inttoptr i32 %v1_805391f to i8*
  %v3_8053966 = load i8, i8* %v2_8053966, align 1
  %v4_8053966 = urem i8 %v3_8053966, 2
  %v5_8053966 = icmp eq i8 %v4_8053966, 0
  %v1_805396a = icmp eq i1 %v5_8053966, false
  br i1 %v1_805396a, label %dec_label_pc_805398d, label %dec_label_pc_805396c

dec_label_pc_805396c:                             ; preds = %dec_label_pc_8053954
  %v2_805396c = inttoptr i32 %v1_8053914 to i32*
  %v3_805396c = load i32, i32* %v2_805396c, align 4
  store i32 %v3_805396c, i32* @ebp, align 4
  %v2_8053971 = sub i32 %v1_8053914, %v3_805396c
  store i32 %v2_8053971, i32* %eax.global-to-local, align 4
  %v1_8053973 = add i32 %v2_8053971, 8
  %v2_8053973 = inttoptr i32 %v1_8053973 to i32*
  %v3_8053973 = load i32, i32* %v2_8053973, align 4
  store i32 %v3_8053973, i32* @edi, align 4
  %v1_8053976 = add i32 %v2_8053971, 12
  %v2_8053976 = inttoptr i32 %v1_8053976 to i32*
  %v3_8053976 = load i32, i32* %v2_8053976, align 4
  store i32 %v3_8053976, i32* %edx.global-to-local, align 4
  %v1_8053979 = add i32 %v3_8053973, 12
  %v2_8053979 = inttoptr i32 %v1_8053979 to i32*
  %v3_8053979 = load i32, i32* %v2_8053979, align 4
  store i32 %v3_8053979, i32* @ecx, align 4
  %v12_805397c = icmp eq i32 %v3_8053979, %v2_8053971
  %v1_805397e = icmp eq i1 %v12_805397c, false
  br i1 %v1_805397e, label %dec_label_pc_80539bc, label %dec_label_pc_8053980

dec_label_pc_8053980:                             ; preds = %dec_label_pc_805396c
  %v1_8053980 = add i32 %v3_8053976, 8
  %v2_8053980 = inttoptr i32 %v1_8053980 to i32*
  %v3_8053980 = load i32, i32* %v2_8053980, align 4
  %v15_8053980 = icmp eq i32 %v3_8053980, %v3_8053979
  %v1_8053983 = icmp eq i1 %v15_8053980, false
  br i1 %v1_8053983, label %dec_label_pc_80539bc, label %dec_label_pc_8053985

dec_label_pc_8053985:                             ; preds = %dec_label_pc_8053980
  %v2_8053985 = add i32 %v3_805396c, %v1_8053924
  store i32 %v2_8053985, i32* @ebx, align 4
  store i32 %v3_8053976, i32* %v2_8053979, align 4
  %v0_805398a = load i32, i32* @edi, align 4
  %v1_805398a = load i32, i32* %edx.global-to-local, align 4
  %v2_805398a = add i32 %v1_805398a, 8
  %v3_805398a = inttoptr i32 %v2_805398a to i32*
  store i32 %v0_805398a, i32* %v3_805398a, align 4
  %v0_8053994.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805398d

dec_label_pc_805398d:                             ; preds = %dec_label_pc_8053954, %dec_label_pc_8053985
  %v1_80539a0 = phi i32 [ %v2_8053957, %dec_label_pc_8053954 ], [ %v0_8053994.pre, %dec_label_pc_8053985 ]
  %v1_8053991 = and i32 %v3_805395f, -4
  store i32 %v1_8053991, i32* @ebp, align 4
  %v1_8053994 = load i32, i32* @global_var_805642c.47, align 4
  %v12_8053994 = icmp eq i32 %v1_80539a0, %v1_8053994
  br i1 %v12_8053994, label %dec_label_pc_80539ee, label %dec_label_pc_805399c

dec_label_pc_805399c:                             ; preds = %dec_label_pc_805398d
  %v2_805399c = add i32 %v1_80539a0, 4
  %v3_805399c = add i32 %v2_805399c, %v1_8053991
  %v4_805399c = inttoptr i32 %v3_805399c to i32*
  %v5_805399c = load i32, i32* %v4_805399c, align 4
  store i32 %v5_805399c, i32* %eax.global-to-local, align 4
  %v3_80539a0 = inttoptr i32 %v2_805399c to i32*
  store i32 %v1_8053991, i32* %v3_80539a0, align 4
  %v0_80539a3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80539a3 = urem i32 %v0_80539a3, 2
  %v2_80539a3 = icmp eq i32 %v1_80539a3, 0
  store i32 %v1_80539a3, i32* %eax.global-to-local, align 4
  %v1_80539a8 = icmp eq i1 %v2_80539a3, false
  br i1 %v1_80539a8, label %dec_label_pc_80539c9, label %dec_label_pc_80539aa

dec_label_pc_80539aa:                             ; preds = %dec_label_pc_805399c
  %v0_80539aa = load i32, i32* @esi, align 4
  %v1_80539aa = add i32 %v0_80539aa, 8
  %v2_80539aa = inttoptr i32 %v1_80539aa to i32*
  %v3_80539aa = load i32, i32* %v2_80539aa, align 4
  store i32 %v3_80539aa, i32* @edx, align 4
  %v1_80539ad = add i32 %v0_80539aa, 12
  %v2_80539ad = inttoptr i32 %v1_80539ad to i32*
  %v3_80539ad = load i32, i32* %v2_80539ad, align 4
  store i32 %v3_80539ad, i32* %eax.global-to-local, align 4
  %v1_80539b0 = add i32 %v3_80539aa, 12
  %v2_80539b0 = inttoptr i32 %v1_80539b0 to i32*
  %v3_80539b0 = load i32, i32* %v2_80539b0, align 4
  store i32 %v3_80539b0, i32* @edi, align 4
  %v12_80539b3 = icmp eq i32 %v3_80539b0, %v0_80539aa
  %v1_80539b5 = icmp eq i1 %v12_80539b3, false
  br i1 %v1_80539b5, label %dec_label_pc_80539bc, label %dec_label_pc_80539b7

dec_label_pc_80539b7:                             ; preds = %dec_label_pc_80539aa
  %v1_80539b7 = add i32 %v3_80539ad, 8
  %v2_80539b7 = inttoptr i32 %v1_80539b7 to i32*
  %v3_80539b7 = load i32, i32* %v2_80539b7, align 4
  %v15_80539b7 = icmp eq i32 %v3_80539b7, %v3_80539b0
  br i1 %v15_80539b7, label %dec_label_pc_80539c1, label %dec_label_pc_80539bc

dec_label_pc_80539bc:                             ; preds = %dec_label_pc_80539b7, %dec_label_pc_80539aa, %dec_label_pc_8053980, %dec_label_pc_805396c
  %v0_80539bc = call i32 @function_8053a7c()
  store i32 %v0_80539bc, i32* %eax.global-to-local, align 4
  %v1_80539c1.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80539c1

dec_label_pc_80539c1:                             ; preds = %dec_label_pc_80539b7, %dec_label_pc_80539bc
  %v1_80539c1 = phi i32 [ %v3_80539aa, %dec_label_pc_80539b7 ], [ %v1_80539c1.pre, %dec_label_pc_80539bc ]
  %v0_80539c1 = phi i32 [ %v3_80539ad, %dec_label_pc_80539b7 ], [ %v0_80539bc, %dec_label_pc_80539bc ]
  %v2_80539c1 = add i32 %v1_80539c1, 12
  %v3_80539c1 = inttoptr i32 %v2_80539c1 to i32*
  store i32 %v0_80539c1, i32* %v3_80539c1, align 4
  %v0_80539c4 = load i32, i32* @edx, align 4
  %v1_80539c4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80539c4 = add i32 %v1_80539c4, 8
  %v3_80539c4 = inttoptr i32 %v2_80539c4 to i32*
  store i32 %v0_80539c4, i32* %v3_80539c4, align 4
  %v0_80539c7 = load i32, i32* @ebx, align 4
  %v1_80539c7 = load i32, i32* @ebp, align 4
  %v2_80539c7 = add i32 %v1_80539c7, %v0_80539c7
  store i32 %v2_80539c7, i32* @ebx, align 4
  br label %dec_label_pc_80539c9

dec_label_pc_80539c9:                             ; preds = %dec_label_pc_805399c, %dec_label_pc_80539c1
  %v0_80539c9 = load i32, i32* @global_var_805643c.65, align 4
  store i32 %v0_80539c9, i32* %eax.global-to-local, align 4
  %v0_80539ce = load i32, i32* @ecx, align 4
  %v1_80539ce = add i32 %v0_80539ce, 12
  %v2_80539ce = inttoptr i32 %v1_80539ce to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_80539ce, align 4
  %v0_80539d5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80539d5 = load i32, i32* @ecx, align 4
  %v2_80539d5 = add i32 %v1_80539d5, 8
  %v3_80539d5 = inttoptr i32 %v2_80539d5 to i32*
  store i32 %v0_80539d5, i32* %v3_80539d5, align 4
  %v0_80539d8 = load i32, i32* @ebx, align 4
  %v1_80539d8 = load i32, i32* @ecx, align 4
  %v3_80539d8 = add i32 %v1_80539d8, %v0_80539d8
  %v4_80539d8 = inttoptr i32 %v3_80539d8 to i32*
  store i32 %v0_80539d8, i32* %v4_80539d8, align 4
  %v0_80539db = load i32, i32* @ecx, align 4
  %v1_80539db = load i32, i32* %eax.global-to-local, align 4
  %v2_80539db = add i32 %v1_80539db, 12
  %v3_80539db = inttoptr i32 %v2_80539db to i32*
  store i32 %v0_80539db, i32* %v3_80539db, align 4
  %v0_80539de = load i32, i32* @ebx, align 4
  %v1_80539e0 = or i32 %v0_80539de, 1
  store i32 %v1_80539e0, i32* %eax.global-to-local, align 4
  %v0_80539e3 = load i32, i32* @ecx, align 4
  store i32 %v0_80539e3, i32* @global_var_805643c.65, align 4
  %v2_80539e9 = add i32 %v0_80539e3, 4
  %v3_80539e9 = inttoptr i32 %v2_80539e9 to i32*
  store i32 %v1_80539e0, i32* %v3_80539e9, align 4
  br label %dec_label_pc_80539fe

dec_label_pc_80539ee:                             ; preds = %dec_label_pc_805398d
  %v0_80539ee = load i32, i32* @ebx, align 4
  %v2_80539ee = add i32 %v0_80539ee, %v1_8053991
  store i32 %v2_80539ee, i32* @ebx, align 4
  %v1_80539f2 = or i32 %v2_80539ee, 1
  store i32 %v1_80539f2, i32* %eax.global-to-local, align 4
  %v1_80539f5 = load i32, i32* @ecx, align 4
  %v2_80539f5 = add i32 %v1_80539f5, 4
  %v3_80539f5 = inttoptr i32 %v2_80539f5 to i32*
  store i32 %v1_80539f2, i32* %v3_80539f5, align 4
  %v0_80539f8 = load i32, i32* @ecx, align 4
  store i32 %v0_80539f8, i32* @global_var_805642c.47, align 4
  br label %dec_label_pc_80539fe

dec_label_pc_80539fe:                             ; preds = %dec_label_pc_80539c9, %dec_label_pc_80539ee
  %v0_80539fe = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_80539fe, 131072
  br i1 %tmp21, label %dec_label_pc_8053a63, label %dec_label_pc_8053a06

dec_label_pc_8053a06:                             ; preds = %dec_label_pc_80539fe
  %v0_8053a06 = load i8, i8* @global_var_8056400.46, align 1024
  %v1_8053a06 = and i8 %v0_8053a06, 2
  %v2_8053a06 = icmp eq i8 %v1_8053a06, 0
  br i1 %v2_8053a06, label %dec_label_pc_8053a1f, label %dec_label_pc_8053a0f

dec_label_pc_8053a0f:                             ; preds = %dec_label_pc_8053a06
  %v2_8053a17 = call i32 @function_8053738(i32* bitcast (i8* @global_var_8056400.46 to i32*))
  store i32 %v2_8053a17, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a1f

dec_label_pc_8053a1f:                             ; preds = %dec_label_pc_8053a06, %dec_label_pc_8053a0f
  %v0_8053a1f = load i32, i32* @global_var_805642c.47, align 4
  store i32 %v0_8053a1f, i32* %eax.global-to-local, align 4
  %v1_8053a24 = add i32 %v0_8053a1f, 4
  %v2_8053a24 = inttoptr i32 %v1_8053a24 to i32*
  %v3_8053a24 = load i32, i32* %v2_8053a24, align 4
  %v1_8053a27 = and i32 %v3_8053a24, -4
  store i32 %v1_8053a27, i32* %eax.global-to-local, align 4
  %v1_8053a2a = load i32, i32* @global_var_8056744.63, align 4
  %v7_8053a2a = icmp ult i32 %v1_8053a27, %v1_8053a2a
  br i1 %v7_8053a2a, label %dec_label_pc_8053a63, label %dec_label_pc_8053a32

dec_label_pc_8053a32:                             ; preds = %dec_label_pc_8053a1f
  store i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32* @edx, align 4
  %v0_8053a37 = load i32, i32* @global_var_8056748.61, align 8
  store i32 %v0_8053a37, i32* @eax, align 4
  %v0_8053a3c = call i32 @function_80536ab()
  store i32 %v0_8053a3c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a63

dec_label_pc_8053a43:                             ; preds = %dec_label_pc_805394b
  %v2_8053a43 = inttoptr i32 %v1_8053914 to i32*
  %v3_8053a43 = load i32, i32* %v2_8053a43, align 4
  store i32 %v3_8053a43, i32* %edx.global-to-local, align 4
  %v0_8053a46 = load i32, i32* @global_var_8056750.54, align 16
  %v1_8053a46 = add i32 %v0_8053a46, -1
  store i32 %v1_8053a46, i32* @global_var_8056750.54, align 16
  %v2_8053a4c = add i32 %v3_8053a43, %v1_8053924
  store i32 %v2_8053a4c, i32* %eax.global-to-local, align 4
  %v2_8053a4f = sub i32 %v1_8053914, %v3_8053a43
  %v0_8053a55 = load i32, i32* @global_var_8056764.57, align 4
  %v2_8053a55 = sub i32 %v0_8053a55, %v2_8053a4c
  store i32 %v2_8053a55, i32* @global_var_8056764.57, align 4
  %v4_8053a5b = inttoptr i32 %v2_8053a4f to i32*
  %v5_8053a5b = call i32 @function_8054669(i32* %v4_8053a5b, i32 %v2_8053a4c, i32 %v1_8053924, i32 %v1_8053924)
  store i32 %v5_8053a5b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a63

dec_label_pc_8053a63:                             ; preds = %dec_label_pc_8053a1f, %dec_label_pc_80539fe, %dec_label_pc_8053a32, %dec_label_pc_805392b, %dec_label_pc_8053a43
  store i32 %v2_80538fe, i32* @eax, align 4
  %v2_8053a6c = call i32 @function_8053f04(i32 %v2_80538fe, i32 1)
  store i32 %v2_8053a6c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a74

dec_label_pc_8053a74:                             ; preds = %dec_label_pc_80538e0, %dec_label_pc_8053a63
  %.0 = phi i32 [ undef, %dec_label_pc_80538e0 ], [ %v2_8053a6c, %dec_label_pc_8053a63 ]
  store i32 %v0_80538e3, i32* @ebx, align 4
  store i32 %v0_80538e2, i32* @esi, align 4
  store i32 %v0_80538e1, i32* @edi, align 4
  store i32 %v0_80538e0, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8053a43, { 1, 0, 2 }
  uselistorder i32 %v0_80539d8, { 1, 0 }
  uselistorder i32 %v1_80539a3, { 1, 0 }
  uselistorder i32 %v2_805399c, { 1, 0 }
  uselistorder i32 %v1_8053991, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80539a0, { 1, 0 }
  uselistorder i32 %v1_8053924, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_805391f, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8053914, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8056400.46 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8056434.49 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_805642c.47, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i8* @global_var_8056400.46 to i32), { 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8056400.46, { 4, 7, 6, 5, 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805603c.45 to i32), { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8053a74, { 1, 0 }
  uselistorder label %dec_label_pc_8053a63, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053a1f, { 1, 0 }
  uselistorder label %dec_label_pc_80539fe, { 1, 0 }
  uselistorder label %dec_label_pc_80539c9, { 1, 0 }
  uselistorder label %dec_label_pc_80539c1, { 1, 0 }
  uselistorder label %dec_label_pc_805398d, { 1, 0 }
}

define i32 @function_8053a7c() local_unnamed_addr {
dec_label_pc_8053a97.lr.ph:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8053a88 = call i32 @function_8053f01(i32 ptrtoint (i32* @global_var_8056054.66 to i32))
  %v12_8053a92 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053a9748 = add i32 %v12_8053a92, 276
  %v5_8053a9749 = inttoptr i32 %v4_8053a9748 to i32*
  store i32 0, i32* %v5_8053a9749, align 4
  %v0_8053aa250 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053aa251 = add i32 %v0_8053aa250, -1
  %v9_8053aa252 = icmp slt i32 %v1_8053aa251, 0
  store i32 %v1_8053aa251, i32* %eax.global-to-local, align 4
  %v1_8053aa353 = icmp eq i1 %v9_8053aa252, false
  br i1 %v1_8053aa353, label %dec_label_pc_8053a97.dec_label_pc_8053a97_crit_edge, label %dec_label_pc_8053aa5

dec_label_pc_8053a97.dec_label_pc_8053a97_crit_edge: ; preds = %dec_label_pc_8053a97.lr.ph, %dec_label_pc_8053a97.dec_label_pc_8053a97_crit_edge
  %v1_8053aa254 = phi i32 [ %v1_8053aa2, %dec_label_pc_8053a97.dec_label_pc_8053a97_crit_edge ], [ %v1_8053aa251, %dec_label_pc_8053a97.lr.ph ]
  %v0_8053a97.pre = load i32, i32* @esp, align 4
  %v2_8053a97 = mul i32 %v1_8053aa254, 4
  %v3_8053a97 = add i32 %v0_8053a97.pre, 152
  %v4_8053a97 = add i32 %v3_8053a97, %v2_8053a97
  %v5_8053a97 = inttoptr i32 %v4_8053a97 to i32*
  store i32 0, i32* %v5_8053a97, align 4
  %v0_8053aa2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053aa2 = add i32 %v0_8053aa2, -1
  %v9_8053aa2 = icmp slt i32 %v1_8053aa2, 0
  store i32 %v1_8053aa2, i32* %eax.global-to-local, align 4
  %v1_8053aa3 = icmp eq i1 %v9_8053aa2, false
  br i1 %v1_8053aa3, label %dec_label_pc_8053a97.dec_label_pc_8053a97_crit_edge, label %dec_label_pc_8053aa5

dec_label_pc_8053aa5:                             ; preds = %dec_label_pc_8053a97.dec_label_pc_8053a97_crit_edge, %dec_label_pc_8053a97.lr.ph
  %v0_8053aa5 = load i32, i32* @ebx, align 4
  %v2_8053aa9 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8053aa9, i32* @ebx, align 4
  %v4_8053ab1 = call i32 @function_8052ad5(i32 %v2_8053aa9, i32 6, i32 %v0_8053aa5, i32 %v0_8053aa5)
  store i32 %v4_8053ab1, i32* %eax.global-to-local, align 4
  %v1_8053ab9 = icmp eq i32 %v4_8053ab1, 0
  %v1_8053abb = icmp eq i1 %v1_8053ab9, false
  br i1 %v1_8053abb, label %dec_label_pc_8053acb, label %dec_label_pc_8053abd

dec_label_pc_8053abd:                             ; preds = %dec_label_pc_8053aa5
  %v3_8053ac3 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8053ac3 = call i32 @function_805241f(i32 1, %_TYPEDEF_sigset_t* %v3_8053ac3, i32 0)
  store i32 %v4_8053ac3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053acb

dec_label_pc_8053acb:                             ; preds = %dec_label_pc_8053aa5, %dec_label_pc_8053abd
  %v2_8053b0323 = phi i32 [ %v4_8053ab1, %dec_label_pc_8053aa5 ], [ %v4_8053ac3, %dec_label_pc_8053abd ]
  %v0_8053acb = load i8, i8* @global_var_8056134.67, align 4
  %v1_8053acb = icmp eq i8 %v0_8053acb, 0
  %v1_8053ad2 = icmp eq i1 %v1_8053acb, false
  br i1 %v1_8053ad2, label %dec_label_pc_8053b03, label %dec_label_pc_8053ad4

dec_label_pc_8053ad4:                             ; preds = %dec_label_pc_8053acb
  store i8 1, i8* @global_var_8056134.67, align 4
  br label %dec_label_pc_8053adb

dec_label_pc_8053adb:                             ; preds = %dec_label_pc_8053b42, %dec_label_pc_8053ad4
  %v1_8053ae3 = call i32 @function_8053f01(i32 ptrtoint (i32* @global_var_8056054.66 to i32))
  store i32 %v1_8053ae3, i32* %eax.global-to-local, align 4
  %v1_8053aef = call i32 @function_8054881(i32 6)
  store i32 %v1_8053aef, i32* %eax.global-to-local, align 4
  %v1_8053afb = call i32 @function_8053f01(i32 ptrtoint (i32* @global_var_8056054.66 to i32))
  store i32 %v1_8053afb, i32* %eax.global-to-local, align 4
  %v0_8053b03.pre = load i8, i8* @global_var_8056134.67, align 4
  br label %dec_label_pc_8053b03

dec_label_pc_8053b03:                             ; preds = %dec_label_pc_8053acb, %dec_label_pc_8053adb
  %v2_8053b03 = phi i32 [ %v2_8053b0323, %dec_label_pc_8053acb ], [ %v1_8053afb, %dec_label_pc_8053adb ]
  %v0_8053b03 = phi i8 [ %v0_8053acb, %dec_label_pc_8053acb ], [ %v0_8053b03.pre, %dec_label_pc_8053adb ]
  %v1_8053b03 = zext i8 %v0_8053b03 to i32
  %v3_8053b03 = and i32 %v2_8053b03, -256
  %v4_8053b03 = or i32 %v1_8053b03, %v3_8053b03
  store i32 %v4_8053b03, i32* %eax.global-to-local, align 4
  %v10_8053b08 = icmp eq i8 %v0_8053b03, 1
  %v1_8053b0a = icmp eq i1 %v10_8053b08, false
  br i1 %v1_8053b0a, label %dec_label_pc_8053b64, label %dec_label_pc_8053b37.lr.ph

dec_label_pc_8053b37.lr.ph:                       ; preds = %dec_label_pc_8053b03
  store i8 2, i8* @global_var_8056134.67, align 4
  %v2_8053b1b = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8053b1b, i32* %eax.global-to-local, align 4
  %v3_8053b20 = bitcast i32* %stack_var_-272 to i8*
  %v4_8053b20 = call i32 @function_805270e(i8* %v3_8053b20, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053b3740 = add i32 %v12_8053a92, 140
  %v5_8053b3741 = inttoptr i32 %v4_8053b3740 to i32*
  store i32 -1, i32* %v5_8053b3741, align 4
  %v0_8053b3f42 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b3f43 = add i32 %v0_8053b3f42, -1
  %v9_8053b3f44 = icmp slt i32 %v1_8053b3f43, 0
  store i32 %v1_8053b3f43, i32* %eax.global-to-local, align 4
  %v1_8053b4045 = icmp eq i1 %v9_8053b3f44, false
  br i1 %v1_8053b4045, label %dec_label_pc_8053b37.dec_label_pc_8053b37_crit_edge, label %dec_label_pc_8053b42

dec_label_pc_8053b37.dec_label_pc_8053b37_crit_edge: ; preds = %dec_label_pc_8053b37.lr.ph, %dec_label_pc_8053b37.dec_label_pc_8053b37_crit_edge
  %v1_8053b3f46 = phi i32 [ %v1_8053b3f, %dec_label_pc_8053b37.dec_label_pc_8053b37_crit_edge ], [ %v1_8053b3f43, %dec_label_pc_8053b37.lr.ph ]
  %v0_8053b37.pre = load i32, i32* @esp, align 4
  %v2_8053b37 = mul i32 %v1_8053b3f46, 4
  %v3_8053b37 = add i32 %v0_8053b37.pre, 16
  %v4_8053b37 = add i32 %v3_8053b37, %v2_8053b37
  %v5_8053b37 = inttoptr i32 %v4_8053b37 to i32*
  store i32 -1, i32* %v5_8053b37, align 4
  %v0_8053b3f = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b3f = add i32 %v0_8053b3f, -1
  %v9_8053b3f = icmp slt i32 %v1_8053b3f, 0
  store i32 %v1_8053b3f, i32* %eax.global-to-local, align 4
  %v1_8053b40 = icmp eq i1 %v9_8053b3f, false
  br i1 %v1_8053b40, label %dec_label_pc_8053b37.dec_label_pc_8053b37_crit_edge, label %dec_label_pc_8053b42

dec_label_pc_8053b42:                             ; preds = %dec_label_pc_8053b37.dec_label_pc_8053b37_crit_edge, %dec_label_pc_8053b37.lr.ph
  store i32 %v2_8053b1b, i32* %eax.global-to-local, align 4
  %v4_8053b57 = call i32 @function_8054143(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8053b57, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053adb

dec_label_pc_8053b64:                             ; preds = %dec_label_pc_8053b03
  %v10_8053b64 = icmp eq i8 %v0_8053b03, 2
  %v1_8053b66 = icmp eq i1 %v10_8053b64, false
  br i1 %v1_8053b66, label %dec_label_pc_8053b70, label %dec_label_pc_8053b70.thread

dec_label_pc_8053b70.thread:                      ; preds = %dec_label_pc_8053b64
  store i8 3, i8* @global_var_8056134.67, align 4
  br label %dec_label_pc_8053b79

dec_label_pc_8053b70:                             ; preds = %dec_label_pc_8053b64
  %v9_8053b70 = icmp eq i8 %v0_8053b03, 3
  %v1_8053b77 = icmp eq i1 %v9_8053b70, false
  br i1 %v1_8053b77, label %dec_label_pc_8053b8a, label %dec_label_pc_8053b79

dec_label_pc_8053b79:                             ; preds = %dec_label_pc_8053b70.thread, %dec_label_pc_8053b70
  store i8 4, i8* @global_var_8056134.67, align 4
  %v1_8053b85 = call i32 @function_80542a4(i32 127)
  unreachable

dec_label_pc_8053b8a:                             ; preds = %dec_label_pc_8053b70, %dec_label_pc_8053b8a
  br label %dec_label_pc_8053b8a

; uselistorder directives
  uselistorder i32 %v1_8053b3f, { 2, 1, 0 }
  uselistorder i32 %v1_8053aa2, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 13, 14, 15, 16, 4, 5, 6, 7, 8, 9, 10, 12, 11, 0, 17, 18 }
  uselistorder i8 3, { 0, 2, 1 }
  uselistorder i8 2, { 8, 11, 12, 1, 13, 2, 3, 4, 5, 6, 14, 15, 7, 0, 10, 16, 9 }
  uselistorder i8* @global_var_8056134.67, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8053b8a, { 1, 0 }
  uselistorder label %dec_label_pc_8053b79, { 1, 0 }
  uselistorder label %dec_label_pc_8053b37.dec_label_pc_8053b37_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8053b03, { 1, 0 }
  uselistorder label %dec_label_pc_8053acb, { 1, 0 }
  uselistorder label %dec_label_pc_8053a97.dec_label_pc_8053a97_crit_edge, { 1, 0 }
}

define i32 @function_8053b8d(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053b8d:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8053ba0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053ba0, i32* @ebx, align 4
  %v2_8053ba5 = call i32 @function_8053f04(i32 %v2_8053ba0, i32 134561537)
  %v1_8053bb1 = call i32 @function_8053f01(i32 ptrtoint (i32* @global_var_805606c.68 to i32))
  %v0_8053bb6 = load i32, i32* @global_var_8056138.69, align 8
  store i32 %v0_8053bb6, i32* @eax, align 4
  %v1_8053bbe = icmp eq i32 %v0_8053bb6, 0
  br i1 %v1_8053bbe, label %dec_label_pc_8053bcb, label %dec_label_pc_8053bc2

dec_label_pc_8053bc2:                             ; preds = %dec_label_pc_8053b8d
  %v0_8053bc5 = load i32, i32* @esi, align 4
  %v1_8053bc6 = call i32 @unknown_0(i32 %v0_8053bc5)
  store i32 %v1_8053bc6, i32* @eax, align 4
  br label %dec_label_pc_8053bcb

dec_label_pc_8053bcb:                             ; preds = %dec_label_pc_8053b8d, %dec_label_pc_8053bc2
  %v2_8053bd0 = call i32 @function_8053f04(i32 %v2_8053ba0, i32 1)
  %v0_8053bd5 = call i32 @function_8053ec2()
  %v0_8053bee = load i32, i32* @esi, align 4
  %v1_8053bef = call i32 @function_80542a4(i32 %v0_8053bee)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @function_80542a4, { 1, 0 }
  uselistorder i32 (i32)* @function_8053f01, { 8, 7, 6, 5, 4, 10, 2, 3, 1, 0, 9 }
  uselistorder i32 (i32, i32)* @function_8053f04, { 9, 8, 7, 6, 13, 12, 5, 2, 4, 3, 1, 0, 11, 10 }
  uselistorder label %dec_label_pc_8053bcb, { 1, 0 }
}

define i32 @function_8053bf4() local_unnamed_addr {
dec_label_pc_8053bf4:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8053bf4 = load i32, i32* @ebp, align 4
  %v0_8053bf5 = load i32, i32* @edi, align 4
  %v0_8053bf6 = load i32, i32* @esi, align 4
  %v0_8053bf7 = load i32, i32* @ebx, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %tmp32, i32* %edx.global-to-local, align 4
  %v1_8053c0a = icmp eq i32 %tmp32, 0
  %v1_8053c0c = icmp eq i1 %v1_8053c0a, false
  br i1 %v1_8053c0c, label %dec_label_pc_8053c13.lr.ph, label %dec_label_pc_8053d6b

dec_label_pc_8053c13.lr.ph:                       ; preds = %dec_label_pc_8053bf4
  %v15_8053bf8 = ptrtoint i32* %stack_var_-444 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053c1356 = add i32 %v15_8053bf8, 416
  %v5_8053c1357 = inttoptr i32 %v4_8053c1356 to i32*
  store i32 0, i32* %v5_8053c1357, align 4
  %v0_8053c1e58 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053c1e59 = add i32 %v0_8053c1e58, -1
  %v9_8053c1e60 = icmp slt i32 %v1_8053c1e59, 0
  store i32 %v1_8053c1e59, i32* %eax.global-to-local, align 4
  %v1_8053c1f61 = icmp eq i1 %v9_8053c1e60, false
  br i1 %v1_8053c1f61, label %dec_label_pc_8053c13.dec_label_pc_8053c13_crit_edge, label %dec_label_pc_8053c21

dec_label_pc_8053c13.dec_label_pc_8053c13_crit_edge: ; preds = %dec_label_pc_8053c13.lr.ph, %dec_label_pc_8053c13.dec_label_pc_8053c13_crit_edge
  %v1_8053c1e62 = phi i32 [ %v1_8053c1e, %dec_label_pc_8053c13.dec_label_pc_8053c13_crit_edge ], [ %v1_8053c1e59, %dec_label_pc_8053c13.lr.ph ]
  %v0_8053c13.pre = load i32, i32* @esp, align 4
  %v2_8053c13 = mul i32 %v1_8053c1e62, 4
  %v3_8053c13 = add i32 %v0_8053c13.pre, 292
  %v4_8053c13 = add i32 %v3_8053c13, %v2_8053c13
  %v5_8053c13 = inttoptr i32 %v4_8053c13 to i32*
  store i32 0, i32* %v5_8053c13, align 4
  %v0_8053c1e = load i32, i32* %eax.global-to-local, align 4
  %v1_8053c1e = add i32 %v0_8053c1e, -1
  %v9_8053c1e = icmp slt i32 %v1_8053c1e, 0
  store i32 %v1_8053c1e, i32* %eax.global-to-local, align 4
  %v1_8053c1f = icmp eq i1 %v9_8053c1e, false
  br i1 %v1_8053c1f, label %dec_label_pc_8053c13.dec_label_pc_8053c13_crit_edge, label %dec_label_pc_8053c21

dec_label_pc_8053c21:                             ; preds = %dec_label_pc_8053c13.dec_label_pc_8053c13_crit_edge, %dec_label_pc_8053c13.lr.ph
  %v1_8053c1e.lcssa = phi i32 [ %v1_8053c1e59, %dec_label_pc_8053c13.lr.ph ], [ %v1_8053c1e, %dec_label_pc_8053c13.dec_label_pc_8053c13_crit_edge ]
  store i32 %tmp32, i32* %stack_var_-24, align 4
  %v2_8053c37 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8053c37, i32* @ebx, align 4
  store i32 %v2_8053c37, i32* %stack_var_-460, align 4
  %v4_8053c3f = call i32 @function_8052ad5(i32 %v2_8053c37, i32 17, i32 %v1_8053c1e.lcssa, i32 %v1_8053c1e.lcssa)
  store i32 %v4_8053c3f, i32* %eax.global-to-local, align 4
  %v2_8053c47 = icmp slt i32 %v4_8053c3f, 0
  br i1 %v2_8053c47, label %dec_label_pc_8053d6f, label %dec_label_pc_8053c4f

dec_label_pc_8053c4f:                             ; preds = %dec_label_pc_8053c21
  %v2_8053c50 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8053c50, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8053c5b = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8053c5b = call i32 @function_805241f(i32 0, %_TYPEDEF_sigset_t* %v3_8053c5b, i32 %v2_8053c50)
  store i32 %v4_8053c5b, i32* %eax.global-to-local, align 4
  %v1_8053c63 = icmp eq i32 %v4_8053c5b, 0
  %v1_8053c65 = icmp eq i1 %v1_8053c63, false
  br i1 %v1_8053c65, label %dec_label_pc_8053d6f, label %dec_label_pc_8053c6b

dec_label_pc_8053c6b:                             ; preds = %dec_label_pc_8053c4f
  store i32 %v2_8053c50, i32* %stack_var_-460, align 4
  %v4_8053c70 = call i32 @function_8052ab1(i32 %v2_8053c50, i32 17, i32 %v4_8053c5b, i32 %v4_8053c5b)
  store i32 %v4_8053c70, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8053c7d = icmp eq i32 %v4_8053c70, 0
  br i1 %v1_8053c7d, label %dec_label_pc_8053c86.lr.ph, label %dec_label_pc_8053d39

dec_label_pc_8053c86.lr.ph:                       ; preds = %dec_label_pc_8053c6b
  store i32 31, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v5_8053c1357, align 4
  %v0_8053c9150 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053c9151 = add i32 %v0_8053c9150, -1
  %v9_8053c9152 = icmp slt i32 %v1_8053c9151, 0
  store i32 %v1_8053c9151, i32* %edx.global-to-local, align 4
  %v1_8053c9253 = icmp eq i1 %v9_8053c9152, false
  br i1 %v1_8053c9253, label %dec_label_pc_8053c86.dec_label_pc_8053c86_crit_edge, label %dec_label_pc_8053c94

dec_label_pc_8053c86.dec_label_pc_8053c86_crit_edge: ; preds = %dec_label_pc_8053c86.lr.ph, %dec_label_pc_8053c86.dec_label_pc_8053c86_crit_edge
  %v1_8053c9154 = phi i32 [ %v1_8053c91, %dec_label_pc_8053c86.dec_label_pc_8053c86_crit_edge ], [ %v1_8053c9151, %dec_label_pc_8053c86.lr.ph ]
  %v0_8053c86.pre = load i32, i32* @esp, align 4
  %v2_8053c86 = mul i32 %v1_8053c9154, 4
  %v3_8053c86 = add i32 %v0_8053c86.pre, 292
  %v4_8053c86 = add i32 %v3_8053c86, %v2_8053c86
  %v5_8053c86 = inttoptr i32 %v4_8053c86 to i32*
  store i32 0, i32* %v5_8053c86, align 4
  %v0_8053c91 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053c91 = add i32 %v0_8053c91, -1
  %v9_8053c91 = icmp slt i32 %v1_8053c91, 0
  store i32 %v1_8053c91, i32* %edx.global-to-local, align 4
  %v1_8053c92 = icmp eq i1 %v9_8053c91, false
  br i1 %v1_8053c92, label %dec_label_pc_8053c86.dec_label_pc_8053c86_crit_edge, label %dec_label_pc_8053c94

dec_label_pc_8053c94:                             ; preds = %dec_label_pc_8053c86.dec_label_pc_8053c86_crit_edge, %dec_label_pc_8053c86.lr.ph
  store i32 %v2_8053c37, i32* %eax.global-to-local, align 4
  store i32 %v2_8053c37, i32* %stack_var_-460, align 4
  %v4_8053ca0 = call i32 @function_8052ad5(i32 %v2_8053c37, i32 17, i32 0, i32 0)
  store i32 %v4_8053ca0, i32* %eax.global-to-local, align 4
  %v2_8053ca8 = icmp slt i32 %v4_8053ca0, 0
  br i1 %v2_8053ca8, label %dec_label_pc_8053d6f, label %dec_label_pc_8053cb0

dec_label_pc_8053cb0:                             ; preds = %dec_label_pc_8053c94
  %v2_8053cb1 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8053cb1, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8053cba = call i32 @function_8054143(i32 17, i32* null, i32 %v2_8053cb1)
  store i32 %v4_8053cba, i32* %eax.global-to-local, align 4
  %v2_8053cc2 = icmp slt i32 %v4_8053cba, 0
  %v1_8053cc4 = icmp eq i1 %v2_8053cc2, false
  br i1 %v1_8053cc4, label %dec_label_pc_8053cee, label %dec_label_pc_8053cc6

dec_label_pc_8053cc6:                             ; preds = %dec_label_pc_8053cb0
  %v0_8053cc6 = load i32, i32* %stack_var_-460, align 4
  %v1_8053cc6 = call i32 @function_80526bd(i32 %v0_8053cc6)
  store i32 %v1_8053cc6, i32* %eax.global-to-local, align 4
  store i32 %v1_8053cc6, i32* @ebx, align 4
  %v1_8053ccd = inttoptr i32 %v1_8053cc6 to i32*
  %v2_8053ccd = load i32, i32* %v1_8053ccd, align 4
  store i32 %v2_8053ccd, i32* @esi, align 4
  store i32 %v2_8053c50, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053cdc = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053cdc = call i32 @function_805241f(i32 2, %_TYPEDEF_sigset_t* %v3_8053cdc, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053ce7 = load i32, i32* @esi, align 4
  %v1_8053ce7 = load i32, i32* @ebx, align 4
  %v2_8053ce7 = inttoptr i32 %v1_8053ce7 to i32*
  store i32 %v0_8053ce7, i32* %v2_8053ce7, align 4
  %v0_8053d7c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d72

dec_label_pc_8053cee:                             ; preds = %dec_label_pc_8053cb0
  %v3_8053cee = load i32, i32* %stack_var_-420, align 4
  %v12_8053cee = icmp eq i32 %v3_8053cee, 1
  %v2_8053cfa = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053cfa, i32* @ebx, align 4
  %v1_8053d01 = icmp eq i1 %v12_8053cee, false
  br i1 %v1_8053d01, label %dec_label_pc_8053d28, label %dec_label_pc_8053d03

dec_label_pc_8053d03:                             ; preds = %dec_label_pc_8053cee
  %v0_8053d03 = load i32, i32* @edi, align 4
  store i32 %v2_8053cfa, i32* %stack_var_-460, align 4
  %v4_8053d07 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053d07 = call i32 @function_805469b(%timespec* %v4_8053d07, i32 %v2_8053cfa, i32 %v0_8053d03, i32 %v0_8053d03)
  store i32 %v5_8053d07, i32* %eax.global-to-local, align 4
  store i32 %v5_8053d07, i32* @edi, align 4
  %v1_8053d0e = call i32 @function_80526bd(i32 %v2_8053cfa)
  store i32 %v1_8053d0e, i32* %eax.global-to-local, align 4
  store i32 %v1_8053d0e, i32* @ebx, align 4
  %v1_8053d18 = inttoptr i32 %v1_8053d0e to i32*
  %v2_8053d18 = load i32, i32* %v1_8053d18, align 4
  store i32 %v2_8053d18, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053d1f = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053d1f = call i32 @function_805241f(i32 2, %_TYPEDEF_sigset_t* %v3_8053d1f, i32 0)
  store i32 %v4_8053d1f, i32* %eax.global-to-local, align 4
  %v0_8053d24 = load i32, i32* @esi, align 4
  %v1_8053d24 = load i32, i32* @ebx, align 4
  %v2_8053d24 = inttoptr i32 %v1_8053d24 to i32*
  store i32 %v0_8053d24, i32* %v2_8053d24, align 4
  %v0_8053d4e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053d4b

dec_label_pc_8053d28:                             ; preds = %dec_label_pc_8053cee
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053d2e = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053d2e = call i32 @function_805241f(i32 2, %_TYPEDEF_sigset_t* %v3_8053d2e, i32 0)
  store i32 %v4_8053d2e, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053d44

dec_label_pc_8053d39:                             ; preds = %dec_label_pc_8053c6b
  %v2_8053d3b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053d3b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d44

dec_label_pc_8053d44:                             ; preds = %dec_label_pc_8053d28, %dec_label_pc_8053d39
  %storemerge3.pre-phi = phi i32 [ %v2_8053cfa, %dec_label_pc_8053d28 ], [ %v2_8053d3b, %dec_label_pc_8053d39 ]
  %v3_8053d44 = phi i32 [ %v2_8053c50, %dec_label_pc_8053d28 ], [ %v4_8053c70, %dec_label_pc_8053d39 ]
  %v2_8053d44 = phi i32 [ 0, %dec_label_pc_8053d28 ], [ %v4_8053c70, %dec_label_pc_8053d39 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_8053d44 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053d44 = call i32 @function_805469b(%timespec* %v4_8053d44, i32 %storemerge3.pre-phi, i32 %v2_8053d44, i32 %v3_8053d44)
  store i32 %v5_8053d44, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d4b

dec_label_pc_8053d4b:                             ; preds = %dec_label_pc_8053d03, %dec_label_pc_8053d44
  %v0_8053d4e = phi i32 [ %v0_8053d4e.pre, %dec_label_pc_8053d03 ], [ %v5_8053d44, %dec_label_pc_8053d44 ]
  %v1_8053d4e = icmp eq i32 %v0_8053d4e, 0
  br i1 %v1_8053d4e, label %dec_label_pc_8053d6b, label %dec_label_pc_8053d52

dec_label_pc_8053d52:                             ; preds = %dec_label_pc_8053d4b
  %v4_8053d62 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8053d62, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d72

dec_label_pc_8053d6b:                             ; preds = %dec_label_pc_8053bf4, %dec_label_pc_8053d4b
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d72

dec_label_pc_8053d6f:                             ; preds = %dec_label_pc_8053c94, %dec_label_pc_8053c4f, %dec_label_pc_8053c21
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d72

dec_label_pc_8053d72:                             ; preds = %dec_label_pc_8053d6b, %dec_label_pc_8053d52, %dec_label_pc_8053cc6, %dec_label_pc_8053d6f
  %v0_8053d7c = phi i32 [ 0, %dec_label_pc_8053d6b ], [ %v4_8053d62, %dec_label_pc_8053d52 ], [ %v0_8053d7c.pre, %dec_label_pc_8053cc6 ], [ -1, %dec_label_pc_8053d6f ]
  store i32 %v0_8053bf7, i32* @ebx, align 4
  store i32 %v0_8053bf6, i32* @esi, align 4
  store i32 %v0_8053bf5, i32* @edi, align 4
  store i32 %v0_8053bf4, i32* @ebp, align 4
  ret i32 %v0_8053d7c

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8053d0e, { 1, 0, 2 }
  uselistorder i32 %v2_8053cfa, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8053c91, { 2, 1, 0 }
  uselistorder i32 %v4_8053c70, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8053c50, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_8053c37, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8053c1e, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 3, 2, 0, 6, 7, 4, 5 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 0, 24, 25, 23 }
  uselistorder i32 (i32, i32*, i32)* @function_8054143, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8052ad5, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_8053d72, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053d6b, { 1, 0 }
  uselistorder label %dec_label_pc_8053d4b, { 1, 0 }
  uselistorder label %dec_label_pc_8053d44, { 1, 0 }
  uselistorder label %dec_label_pc_8053c86.dec_label_pc_8053c86_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8053c13.dec_label_pc_8053c13_crit_edge, { 1, 0 }
}

define i32 @function_8053d7d(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053d7d:
  switch i32 %arg1, label %dec_label_pc_8053d9c [
    i32 0, label %dec_label_pc_8053dac
    i32 1, label %dec_label_pc_8053e91
    i32 2, label %dec_label_pc_8053db6
    i32 3, label %dec_label_pc_8053dc0
    i32 4, label %dec_label_pc_8053dca
    i32 5, label %dec_label_pc_8053e60
    i32 6, label %dec_label_pc_8053dd2
    i32 7, label %dec_label_pc_8053d92
    i32 8, label %dec_label_pc_8053d92
    i32 9, label %dec_label_pc_8053d92
    i32 10, label %dec_label_pc_8053d92
    i32 11, label %dec_label_pc_8053d92
    i32 12, label %dec_label_pc_8053d92
    i32 13, label %dec_label_pc_8053d92
    i32 14, label %dec_label_pc_8053d92
    i32 15, label %dec_label_pc_8053d92
    i32 16, label %dec_label_pc_8053d92
    i32 17, label %dec_label_pc_8053d92
    i32 18, label %dec_label_pc_8053d92
    i32 19, label %dec_label_pc_8053d92
    i32 20, label %dec_label_pc_8053d92
    i32 21, label %dec_label_pc_8053d92
    i32 22, label %dec_label_pc_8053d92
    i32 23, label %dec_label_pc_8053e91
    i32 24, label %dec_label_pc_8053e91
    i32 25, label %dec_label_pc_8053e9d
    i32 26, label %dec_label_pc_8053e6e
    i32 27, label %dec_label_pc_8053e91
    i32 28, label %dec_label_pc_8053de4
    i32 29, label %dec_label_pc_8053e67
    i32 30, label %dec_label_pc_8053ddc
    i32 31, label %dec_label_pc_8053e7c
    i32 32, label %dec_label_pc_8053e91
    i32 33, label %dec_label_pc_8053e91
    i32 34, label %dec_label_pc_8053e91
    i32 35, label %dec_label_pc_8053e75
    i32 36, label %dec_label_pc_8053ea4
    i32 37, label %dec_label_pc_8053eab
    i32 38, label %dec_label_pc_8053ea4
    i32 39, label %dec_label_pc_8053dee
    i32 40, label %dec_label_pc_8053eb2
    i32 41, label %dec_label_pc_8053e91
    i32 42, label %dec_label_pc_8053e7c
    i32 43, label %dec_label_pc_8053eab
    i32 44, label %dec_label_pc_8053eb9
    i32 45, label %dec_label_pc_8053eab
    i32 46, label %dec_label_pc_8053e67
    i32 47, label %dec_label_pc_8053e67
    i32 48, label %dec_label_pc_8053e67
    i32 49, label %dec_label_pc_8053e91
    i32 50, label %dec_label_pc_8053e91
    i32 51, label %dec_label_pc_8053e67
    i32 52, label %dec_label_pc_8053e67
    i32 53, label %dec_label_pc_8053e91
    i32 54, label %dec_label_pc_8053e91
    i32 55, label %dec_label_pc_8053e91
    i32 56, label %dec_label_pc_8053e91
    i32 57, label %dec_label_pc_8053e91
    i32 58, label %dec_label_pc_8053e91
    i32 59, label %dec_label_pc_8053e91
    i32 60, label %dec_label_pc_8053e91
    i32 61, label %dec_label_pc_8053e91
    i32 62, label %dec_label_pc_8053e91
    i32 63, label %dec_label_pc_8053e91
    i32 64, label %dec_label_pc_8053e91
    i32 65, label %dec_label_pc_8053e91
    i32 66, label %dec_label_pc_8053e91
    i32 67, label %dec_label_pc_8053d92
    i32 68, label %dec_label_pc_8053d92
    i32 69, label %dec_label_pc_8053e75
    i32 70, label %dec_label_pc_8053e75
    i32 71, label %dec_label_pc_8053e75
    i32 72, label %dec_label_pc_8053e7c
    i32 73, label %dec_label_pc_8053e83
    i32 74, label %dec_label_pc_8053e8a
    i32 75, label %dec_label_pc_8053df8
    i32 76, label %dec_label_pc_8053e8a
    i32 77, label %dec_label_pc_8053d92
    i32 78, label %dec_label_pc_8053d92
    i32 79, label %dec_label_pc_8053d92
    i32 80, label %dec_label_pc_8053d92
    i32 81, label %dec_label_pc_8053d92
    i32 82, label %dec_label_pc_8053d92
    i32 83, label %dec_label_pc_8053d92
    i32 84, label %dec_label_pc_8053d92
    i32 85, label %dec_label_pc_8053e91
    i32 86, label %dec_label_pc_8053e91
    i32 87, label %dec_label_pc_8053e6e
    i32 88, label %dec_label_pc_8053e02
    i32 89, label %dec_label_pc_8053e0c
    i32 90, label %dec_label_pc_8053e83
    i32 91, label %dec_label_pc_8053d92
    i32 92, label %dec_label_pc_8053d92
    i32 93, label %dec_label_pc_8053d92
    i32 94, label %dec_label_pc_8053d92
    i32 95, label %dec_label_pc_8053e67
    i32 96, label %dec_label_pc_8053e91
    i32 97, label %dec_label_pc_8053e91
    i32 98, label %dec_label_pc_8053d92
    i32 99, label %dec_label_pc_8053d92
    i32 100, label %dec_label_pc_8053d92
    i32 101, label %dec_label_pc_8053e16
    i32 102, label %dec_label_pc_8053e59
    i32 103, label %dec_label_pc_8053e96
    i32 104, label %dec_label_pc_8053e6e
    i32 105, label %dec_label_pc_8053e20
    i32 106, label %dec_label_pc_8053e7c
    i32 107, label %dec_label_pc_8053e7c
    i32 108, label %dec_label_pc_8053e60
    i32 109, label %dec_label_pc_8053e9d
    i32 110, label %dec_label_pc_8053eb9
    i32 111, label %dec_label_pc_8053e59
    i32 112, label %dec_label_pc_8053e96
    i32 113, label %dec_label_pc_8053eb9
    i32 114, label %dec_label_pc_8053e2a
    i32 115, label %dec_label_pc_8053eb2
    i32 116, label %dec_label_pc_8053e91
    i32 117, label %dec_label_pc_8053e91
    i32 118, label %dec_label_pc_8053e34
    i32 119, label %dec_label_pc_8053e3e
    i32 120, label %dec_label_pc_8053eab
    i32 121, label %dec_label_pc_8053e6e
    i32 122, label %dec_label_pc_8053e6e
    i32 123, label %dec_label_pc_8053e6e
    i32 124, label %dec_label_pc_8053e6e
    i32 125, label %dec_label_pc_8053d92
    i32 126, label %dec_label_pc_8053d92
    i32 127, label %dec_label_pc_8053e91
    i32 128, label %dec_label_pc_8053e91
    i32 129, label %dec_label_pc_8053d92
    i32 130, label %dec_label_pc_8053d92
    i32 131, label %dec_label_pc_8053e91
    i32 149, label %dec_label_pc_8053e45
  ]

dec_label_pc_8053d92:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053d9c:                             ; preds = %dec_label_pc_8053d7d
  %v1_8053d9c = call i32 @function_80526bd(i32 ptrtoint (i32* @0 to i32))
  %v1_8053da1 = inttoptr i32 %v1_8053d9c to i32*
  store i32 22, i32* %v1_8053da1, align 4
  br label %dec_label_pc_8053e91

dec_label_pc_8053dac:                             ; preds = %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053db6:                             ; preds = %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053dc0:                             ; preds = %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053dca:                             ; preds = %dec_label_pc_8053d7d
  %v0_8053dcd = call i32 @function_80544c9()
  br label %dec_label_pc_8053dd2

dec_label_pc_8053dd2:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053dca
  br label %dec_label_pc_8053ebe

dec_label_pc_8053ddc:                             ; preds = %dec_label_pc_8053d7d
  %v0_8053ddf = call i32 @function_8054560()
  br label %dec_label_pc_8053de4

dec_label_pc_8053de4:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053ddc
  br label %dec_label_pc_8053ebe

dec_label_pc_8053dee:                             ; preds = %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053df8:                             ; preds = %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e02:                             ; preds = %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e0c:                             ; preds = %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e16:                             ; preds = %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e20:                             ; preds = %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e2a:                             ; preds = %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e34:                             ; preds = %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e3e:                             ; preds = %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e45:                             ; preds = %dec_label_pc_8053d7d
  %v5_8053e4b = call i32 @function_80542cc(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8053e53 = icmp slt i32 %v5_8053e4b, 0
  %v1_8053e55 = icmp eq i1 %v2_8053e53, false
  br i1 %v1_8053e55, label %dec_label_pc_8053e67, label %dec_label_pc_8053e91

dec_label_pc_8053e59:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e60:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e67:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053e45
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e6e:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e75:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e7c:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e83:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e8a:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e91:                             ; preds = %dec_label_pc_8053e45, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d9c
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e96:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053e9d:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053ea4:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053eab:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053eb2:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053eb9:                             ; preds = %dec_label_pc_8053d7d, %dec_label_pc_8053d7d, %dec_label_pc_8053d7d
  br label %dec_label_pc_8053ebe

dec_label_pc_8053ebe:                             ; preds = %dec_label_pc_8053eb2, %dec_label_pc_8053eab, %dec_label_pc_8053ea4, %dec_label_pc_8053e9d, %dec_label_pc_8053e96, %dec_label_pc_8053e8a, %dec_label_pc_8053e83, %dec_label_pc_8053e7c, %dec_label_pc_8053e75, %dec_label_pc_8053e6e, %dec_label_pc_8053e60, %dec_label_pc_8053e59, %dec_label_pc_8053e67, %dec_label_pc_8053e3e, %dec_label_pc_8053e34, %dec_label_pc_8053e2a, %dec_label_pc_8053e20, %dec_label_pc_8053e16, %dec_label_pc_8053e0c, %dec_label_pc_8053e02, %dec_label_pc_8053df8, %dec_label_pc_8053dee, %dec_label_pc_8053de4, %dec_label_pc_8053dd2, %dec_label_pc_8053dc0, %dec_label_pc_8053db6, %dec_label_pc_8053dac, %dec_label_pc_8053d92, %dec_label_pc_8053e91, %dec_label_pc_8053eb9
  %v0_8053ec1 = phi i32 [ 255, %dec_label_pc_8053eb2 ], [ 2048, %dec_label_pc_8053eab ], [ 99, %dec_label_pc_8053ea4 ], [ 20, %dec_label_pc_8053e9d ], [ -128, %dec_label_pc_8053e96 ], [ 1024, %dec_label_pc_8053e8a ], [ 4, %dec_label_pc_8053e83 ], [ 32, %dec_label_pc_8053e7c ], [ 256, %dec_label_pc_8053e75 ], [ 2147483647, %dec_label_pc_8053e6e ], [ 16, %dec_label_pc_8053e60 ], [ 127, %dec_label_pc_8053e59 ], [ 200112, %dec_label_pc_8053e67 ], [ 9, %dec_label_pc_8053e3e ], [ 65535, %dec_label_pc_8053e34 ], [ -32768, %dec_label_pc_8053e2a ], [ -2147483648, %dec_label_pc_8053e20 ], [ 8, %dec_label_pc_8053e16 ], [ 500, %dec_label_pc_8053e0c ], [ 4096, %dec_label_pc_8053e02 ], [ 16384, %dec_label_pc_8053df8 ], [ 1000, %dec_label_pc_8053dee ], [ 32768, %dec_label_pc_8053de4 ], [ 6, %dec_label_pc_8053dd2 ], [ 65536, %dec_label_pc_8053dc0 ], [ 100, %dec_label_pc_8053db6 ], [ 131072, %dec_label_pc_8053dac ], [ 1, %dec_label_pc_8053d92 ], [ -1, %dec_label_pc_8053e91 ], [ 32767, %dec_label_pc_8053eb9 ]
  ret i32 %v0_8053ec1

; uselistorder directives
  uselistorder i32 65536, { 32, 33, 3, 4, 5, 6, 7, 8, 10, 9, 11, 13, 14, 12, 15, 17, 16, 18, 1, 19, 0, 2, 22, 20, 23, 21, 26, 24, 25, 27, 28, 29, 30, 31 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 22, 23, 18, 19, 3, 4, 16, 17, 20, 21, 14, 15, 1, 2, 12, 13, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 65535, { 2, 0, 1, 3 }
  uselistorder i32 1024, { 2, 0, 3, 1, 4 }
  uselistorder i32 2048, { 3, 1, 0, 2 }
  uselistorder i32 255, { 1, 3, 4, 6, 2, 7, 8, 9, 5, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 131, { 4, 0, 1, 3, 2 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 124, { 4, 5, 3, 0, 1, 6, 2 }
  uselistorder i32 116, { 1, 2, 0 }
  uselistorder i32 112, { 2, 0, 3, 4, 1, 5, 6, 7 }
  uselistorder i32 108, { 20, 21, 22, 17, 23, 11, 2, 15, 0, 1, 24, 12, 13, 18, 19, 25, 26, 14, 27, 3, 4, 5, 28, 29, 6, 30, 7, 8, 9, 10, 16, 31 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 104, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 96, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 92, { 11, 12, 1, 0, 4, 2, 3, 6, 13, 14, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 8, 26, 27, 28, 5, 29, 30, 7, 35, 32, 33, 34, 31, 36 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 87, { 2, 0, 1 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 76, { 3, 4, 1, 5, 0, 6, 2 }
  uselistorder i32 68, { 4, 0, 1, 2, 3 }
  uselistorder i32 60, { 2, 0, 1 }
  uselistorder i32 55, { 2, 0, 1, 3 }
  uselistorder i32 49, { 1, 2, 0 }
  uselistorder i32 47, { 1, 2, 3, 0 }
  uselistorder i32 46, { 2, 0, 3, 1 }
  uselistorder i32 43, { 1, 2, 3, 4, 0 }
  uselistorder i32 42, { 2, 0, 3, 4, 1 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i32 39, { 1, 2, 3, 0 }
  uselistorder i32 37, { 1, 0, 2, 3, 4 }
  uselistorder i32 34, { 2, 0, 1 }
  uselistorder i32 27, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 23, { 1, 2, 3, 4, 0 }
  uselistorder i32 21, { 1, 0 }
  uselistorder i32 17, { 6, 4, 5, 2, 3, 1, 0 }
  uselistorder i32 13, { 1, 0, 2, 3, 4 }
  uselistorder i32 9, { 3, 6, 0, 1, 5, 8, 4, 10, 9, 7, 11, 2 }
  uselistorder i32 6, { 0, 5, 2, 3, 1, 8, 4, 7, 6 }
  uselistorder i32 5, { 5, 0, 8, 9, 3, 2, 7, 6, 1, 4 }
  uselistorder label %dec_label_pc_8053ebe, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8053e91, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8053e67, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053de4, { 1, 0 }
  uselistorder label %dec_label_pc_8053dd2, { 1, 0 }
}

define i32 @function_8053ec2() local_unnamed_addr {
dec_label_pc_8053ec2:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053ec2 = load i32, i32* @ebx, align 4
  store i32 %v0_8053ec2, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 2), i32 0), label %dec_label_pc_8053ed6, label %dec_label_pc_8053ee3

dec_label_pc_8053ed6:                             ; preds = %dec_label_pc_8053ec2, %dec_label_pc_8053ed6
  %v1_8053edd6 = phi i32 [ %v1_8053edd, %dec_label_pc_8053ed6 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 2), i32 -1), %dec_label_pc_8053ec2 ]
  store i32 ptrtoint (i32* @global_var_8053edd.72 to i32), i32* %stack_var_-16, align 4
  %v5_8053ed6 = mul i32 %v1_8053edd6, 4
  %v6_8053ed6 = add i32 %v5_8053ed6, ptrtoint (i32* @global_var_8056000.71 to i32)
  %v7_8053ed6 = inttoptr i32 %v6_8053ed6 to i32*
  %v8_8053ed6 = load i32, i32* %v7_8053ed6, align 4
  call void @__pseudo_call(i32 %v8_8053ed6)
  %v0_8053edd.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053edd = add i32 %v0_8053edd.pre, -1
  store i32 %v1_8053edd, i32* %ebx.global-to-local, align 4
  %v10_8053ede = icmp eq i32 %v0_8053edd.pre, 0
  %v1_8053ee1 = icmp eq i1 %v10_8053ede, false
  br i1 %v1_8053ee1, label %dec_label_pc_8053ed6, label %dec_label_pc_8053ee3

dec_label_pc_8053ee3:                             ; preds = %dec_label_pc_8053ed6, %dec_label_pc_8053ec2
  %v0_8053ee3 = load i32, i32* @global_var_8056148.73, align 8
  %v1_8053ee8 = icmp eq i32 %v0_8053ee3, 0
  br i1 %v1_8053ee8, label %dec_label_pc_8053eee, label %dec_label_pc_8053eec

dec_label_pc_8053eec:                             ; preds = %dec_label_pc_8053ee3
  %v0_8053eec = load i32, i32* %stack_var_-16, align 4
  %v1_8053eec = call i32 @unknown_0(i32 %v0_8053eec)
  br label %dec_label_pc_8053eee

dec_label_pc_8053eee:                             ; preds = %dec_label_pc_8053eec, %dec_label_pc_8053ee3
  %v0_8053eee = load i32, i32* @global_var_805614c.74, align 4
  store i32 %v0_8053eee, i32* @ecx, align 4
  %v1_8053ef4 = icmp eq i32 %v0_8053eee, 0
  br i1 %v1_8053ef4, label %dec_label_pc_8053efd, label %dec_label_pc_8053ef8

dec_label_pc_8053ef8:                             ; preds = %dec_label_pc_8053eee
  %v2_8053efa = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053efa, i32* %ebx.global-to-local, align 4
  %v0_8053efb = load i32, i32* %stack_var_-16, align 4
  %v1_8053efb = call i32 @unknown_0(i32 %v0_8053efb)
  br label %dec_label_pc_8053efd

dec_label_pc_8053efd:                             ; preds = %dec_label_pc_8053eee, %dec_label_pc_8053ef8
  %v2_8053efd = load i32, i32* %stack_var_-16, align 4
  %v2_8053efe = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053efe, i32* @edx, align 4
  ret i32 %v2_8053efd

; uselistorder directives
  uselistorder i32 %v1_8053edd, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053efd, { 1, 0 }
  uselistorder label %dec_label_pc_8053ed6, { 1, 0 }
}

define i32 @function_8053f01(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053f01:
  ret i32 0
}

define i32 @function_8053f04(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053f04:
  %v0_8053f04 = load i32, i32* @eax, align 4
  ret i32 %v0_8053f04
}

define i32 @function_8053f05() local_unnamed_addr {
dec_label_pc_8053f05:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_8053f05 = load i32, i32* @esi, align 4
  %v0_8053f06 = load i32, i32* @ebx, align 4
  %v0_8053f0a = load i32, i32* @eax, align 4
  store i32 %v0_8053f0a, i32* @esi, align 4
  %v0_8053f0c = load i32, i32* @edx, align 4
  store i32 %v0_8053f0c, i32* @ebx, align 4
  %v4_8053f11 = call i32 @function_805211d(i32 %v0_8053f0a, i32 1, i32 %tmp6)
  %v8_8053f19 = icmp eq i32 %v4_8053f11, -1
  %v1_8053f1a = icmp eq i1 %v8_8053f19, false
  br i1 %v1_8053f1a, label %dec_label_pc_8053f35, label %dec_label_pc_8053f1c

dec_label_pc_8053f1c:                             ; preds = %dec_label_pc_8053f05
  %v0_8053f1e = load i32, i32* @ebx, align 4
  %v6_8053f24 = call i32 @function_80522c4(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805563c.75, i32 0, i32 0), i32 %v0_8053f1e)
  %v1_8053f2c = load i32, i32* @esi, align 4
  %v12_8053f2c = icmp eq i32 %v6_8053f24, %v1_8053f2c
  br i1 %v12_8053f2c, label %dec_label_pc_8053f35, label %dec_label_pc_8053f30

dec_label_pc_8053f30:                             ; preds = %dec_label_pc_8053f1c
  %v0_8053f30 = call i32 @function_8053a7c()
  br label %dec_label_pc_8053f35

dec_label_pc_8053f35:                             ; preds = %dec_label_pc_8053f1c, %dec_label_pc_8053f05, %dec_label_pc_8053f30
  %v2_8053f35 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8053f06, i32* @ebx, align 4
  store i32 %v0_8053f05, i32* @esi, align 4
  ret i32 %v2_8053f35

; uselistorder directives
  uselistorder i32 ()* @function_8053a7c, { 3, 2, 1, 4, 0 }
  uselistorder i32 (i8*, i32)* @function_80522c4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_805211d, { 2, 5, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_8053f35, { 2, 0, 1 }
}

define i32 @function_8053f39() local_unnamed_addr {
dec_label_pc_8053f39:
  %v0_8053f3c = load i8, i8* @global_var_8056150.76, align 16
  %v1_8053f3c = icmp eq i8 %v0_8053f3c, 0
  %v1_8053f43 = icmp eq i1 %v1_8053f3c, false
  br i1 %v1_8053f43, label %dec_label_pc_8053f39.dec_label_pc_8053f75_crit_edge, label %dec_label_pc_8053f45

dec_label_pc_8053f39.dec_label_pc_8053f75_crit_edge: ; preds = %dec_label_pc_8053f39
  %v0_8053f78.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8053f75

dec_label_pc_8053f45:                             ; preds = %dec_label_pc_8053f39
  store i8 1, i8* @global_var_8056150.76, align 16
  store i32 4096, i32* @global_var_8056144.77, align 4
  br label %dec_label_pc_8053f75

dec_label_pc_8053f75:                             ; preds = %dec_label_pc_8053f39.dec_label_pc_8053f75_crit_edge, %dec_label_pc_8053f45
  %v0_8053f78 = phi i32 [ %v0_8053f78.pre, %dec_label_pc_8053f39.dec_label_pc_8053f75_crit_edge ], [ 0, %dec_label_pc_8053f45 ]
  ret i32 %v0_8053f78

; uselistorder directives
  uselistorder i8 1, { 8, 0, 9, 3, 4, 5, 1, 2, 10, 11, 12, 13, 6, 7 }
  uselistorder i8* @global_var_8056150.76, { 1, 0 }
  uselistorder label %dec_label_pc_8053f75, { 1, 0 }
}

define i32 @function_8053f79(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8053f79:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %v0_8053f79 = load i32, i32* @ebp, align 4
  store i32 %tmp44, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_805613c.78, align 4
  store i32 %arg6, i32* @global_var_805614c.74, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_8053fb0 = mul i32 %arg2, 4
  %v3_8053fb0 = add i32 %tmp44, %v2_8053fb0
  %v1_8053fb3 = add i32 %v3_8053fb0, 4
  store i32 %v1_8053fb3, i32* @global_var_8056140.79, align 64
  %v3_8053fbb = load i32, i32* %arg3, align 4
  %v14_8053fbb = icmp eq i32 %v1_8053fb3, %v3_8053fbb
  %v1_8053fbd = icmp eq i1 %v14_8053fbb, false
  br i1 %v1_8053fbd, label %dec_label_pc_8053fc5, label %dec_label_pc_8053fbf

dec_label_pc_8053fbf:                             ; preds = %dec_label_pc_8053f79
  store i32 %v3_8053fb0, i32* @global_var_8056140.79, align 64
  br label %dec_label_pc_8053fc5

dec_label_pc_8053fc5:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053fbf
  store i32 120, i32* %stack_var_-164, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8053fca = ptrtoint i32* %stack_var_-136 to i32
  %v3_8053fcf = bitcast i32* %stack_var_-136 to i8*
  %v4_8053fcf = call i32 @function_805270e(i8* %v3_8053fcf, i32 0, i32 120)
  %v0_8053fd4 = load i32, i32* @global_var_8056140.79, align 64
  br label %dec_label_pc_8053fdc

dec_label_pc_8053fdc:                             ; preds = %dec_label_pc_8053fdc, %dec_label_pc_8053fc5
  %v0_8053fdc = phi i32 [ %v1_8053fdf, %dec_label_pc_8053fdc ], [ %v0_8053fd4, %dec_label_pc_8053fc5 ]
  %v1_8053fdc = inttoptr i32 %v0_8053fdc to i32*
  %v2_8053fdc = load i32, i32* %v1_8053fdc, align 4
  %v3_8053fdc = icmp eq i32 %v2_8053fdc, 0
  %v1_8053fdf = add i32 %v0_8053fdc, 4
  %v1_8053fe2 = icmp eq i1 %v3_8053fdc, false
  br i1 %v1_8053fe2, label %dec_label_pc_8053fdc, label %dec_label_pc_8054003.preheader

dec_label_pc_8054003.preheader:                   ; preds = %dec_label_pc_8053fdc
  store i32 %v1_8053fdf, i32* @ebx, align 4
  %v1_805400322 = inttoptr i32 %v1_8053fdf to i32*
  %v2_805400323 = load i32, i32* %v1_805400322, align 4
  %v3_805400324 = icmp eq i32 %v2_805400323, 0
  %v1_805400626 = icmp eq i1 %v3_805400324, false
  br i1 %v1_805400626, label %dec_label_pc_8053fe8.lr.ph, label %dec_label_pc_8054008

dec_label_pc_8053fe8.lr.ph:                       ; preds = %dec_label_pc_8054003.preheader
  %v3_8053fc8 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8053ff3 = add i32 %v3_8053fc8, 32
  br label %dec_label_pc_8053fe8

dec_label_pc_8053fe8:                             ; preds = %dec_label_pc_8053fe8.lr.ph, %dec_label_pc_8054000
  %v1_8053ff3 = phi i32 [ %v2_805400323, %dec_label_pc_8053fe8.lr.ph ], [ %v2_8054003, %dec_label_pc_8054000 ]
  %v0_8053ff2 = phi i32 [ %v1_8053fdf, %dec_label_pc_8053fe8.lr.ph ], [ %v1_8054000, %dec_label_pc_8054000 ]
  %v6_8053fed = icmp ugt i32 %v1_8053ff3, 14
  br i1 %v6_8053fed, label %dec_label_pc_8054000, label %dec_label_pc_8053fef

dec_label_pc_8053fef:                             ; preds = %dec_label_pc_8053fe8
  store i32 8, i32* %stack_var_-164, align 4
  store i32 %v0_8053ff2, i32* %stack_var_-168, align 4
  %v2_8053ff3 = mul i32 %v1_8053ff3, 8
  %v4_8053ff3 = add i32 %v3_8053ff3, %v2_8053ff3
  %v3_8053ff8 = inttoptr i32 %v4_8053ff3 to i16*
  %v4_8053ff8 = call i32 @function_80547c6(i16* %v3_8053ff8, i32 %v0_8053ff2, i32 8)
  %v0_8054000.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054000

dec_label_pc_8054000:                             ; preds = %dec_label_pc_8053fe8, %dec_label_pc_8053fef
  %v0_8054000 = phi i32 [ %v0_8053ff2, %dec_label_pc_8053fe8 ], [ %v0_8054000.pre, %dec_label_pc_8053fef ]
  %v1_8054000 = add i32 %v0_8054000, 8
  store i32 %v1_8054000, i32* @ebx, align 4
  %v1_8054003 = inttoptr i32 %v1_8054000 to i32*
  %v2_8054003 = load i32, i32* %v1_8054003, align 4
  %v3_8054003 = icmp eq i32 %v2_8054003, 0
  %v1_8054006 = icmp eq i1 %v3_8054003, false
  br i1 %v1_8054006, label %dec_label_pc_8053fe8, label %dec_label_pc_8054008

dec_label_pc_8054008:                             ; preds = %dec_label_pc_8054000, %dec_label_pc_8054003.preheader
  store i32 %v2_8053fca, i32* @eax, align 4
  %v0_805400c = call i32 @function_8054899()
  store i32 %v0_805400c, i32* @eax, align 4
  %v0_8054011 = call i32 @function_8053f39()
  %v1_805401a = icmp eq i32 %tmp39, 0
  %v1_805401c = icmp eq i1 %v1_805401a, false
  br i1 %v1_805401c, label %dec_label_pc_8054022, label %dec_label_pc_805401e

dec_label_pc_805401e:                             ; preds = %dec_label_pc_8054008
  %v1_805401e = and i32 %tmp39, -65536
  %v2_805401e = or i32 %v1_805401e, 4096
  br label %dec_label_pc_8054022

dec_label_pc_8054022:                             ; preds = %dec_label_pc_8054008, %dec_label_pc_805401e
  %v0_8054022 = phi i32 [ %tmp39, %dec_label_pc_8054008 ], [ %v2_805401e, %dec_label_pc_805401e ]
  store i32 %v0_8054022, i32* @global_var_8056144.77, align 4
  %v13_8054027 = icmp eq i32 %tmp38, -1
  %v1_805402c = icmp eq i1 %v13_8054027, false
  br i1 %v1_805402c, label %dec_label_pc_8054057, label %dec_label_pc_805402e

dec_label_pc_805402e:                             ; preds = %dec_label_pc_8054022
  %v0_805402e = call i32 @function_80545a5()
  store i32 %v0_805402e, i32* @ebx, align 4
  %v0_8054035 = call i32 @function_8054514()
  %v0_805403a = load i32, i32* @ebx, align 4
  %v12_805403a = icmp eq i32 %v0_805403a, %v0_8054035
  %v1_805403c = icmp eq i1 %v12_805403a, false
  br i1 %v1_805403c, label %dec_label_pc_805406d, label %dec_label_pc_805403e

dec_label_pc_805403e:                             ; preds = %dec_label_pc_805402e
  %v0_805403e = call i32 @function_805453a()
  store i32 %v0_805403e, i32* @ebx, align 4
  %v0_8054045 = call i32 @function_80544ee()
  %v0_805404a = load i32, i32* @ebx, align 4
  %v12_805404a = icmp eq i32 %v0_805404a, %v0_8054045
  %v1_805404c = icmp eq i1 %v12_805404a, false
  br i1 %v1_805404c, label %dec_label_pc_805406d, label %dec_label_pc_805404e.thread

dec_label_pc_805404e.thread:                      ; preds = %dec_label_pc_805403e
  br label %dec_label_pc_8054097

dec_label_pc_8054057:                             ; preds = %dec_label_pc_8054022
  %v15_8054057 = icmp eq i32 %tmp38, %tmp37
  %v1_805405b = icmp eq i1 %v15_8054057, false
  br i1 %v1_805405b, label %dec_label_pc_805406d, label %dec_label_pc_805405d

dec_label_pc_805405d:                             ; preds = %dec_label_pc_8054057
  br label %dec_label_pc_805406d

dec_label_pc_805406d:                             ; preds = %dec_label_pc_805405d, %dec_label_pc_8054057, %dec_label_pc_805403e, %dec_label_pc_805402e
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8054074 = call i32 @function_8053f05()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8054083 = call i32 @function_8053f05()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8054092 = call i32 @function_8053f05()
  br label %dec_label_pc_8054097

dec_label_pc_8054097:                             ; preds = %dec_label_pc_805404e.thread, %dec_label_pc_805406d
  store i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32* %esi.global-to-local, align 4
  %v0_805409c = load i32, i32* @edi, align 4
  %v1_805409c = inttoptr i32 %v0_805409c to i32*
  %v2_805409c = load i32, i32* %v1_805409c, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32* %esi.global-to-local, align 4
  store i32 %v2_805409c, i32* inttoptr (i32 134570116 to i32*), align 4
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_8056148.73, align 8
  br i1 icmp ult (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569981), i32 7), label %dec_label_pc_80540c8, label %dec_label_pc_80540bc

dec_label_pc_80540bc:                             ; preds = %dec_label_pc_8054097, %dec_label_pc_80540bc
  %v4_80540bc = phi i32 [ %v1_80540c3, %dec_label_pc_80540bc ], [ 0, %dec_label_pc_8054097 ]
  %v5_80540bc = mul i32 %v4_80540bc, 4
  %v6_80540bc = add i32 %v5_80540bc, ptrtoint (i32* @global_var_8056000.71 to i32)
  %v7_80540bc = inttoptr i32 %v6_80540bc to i32*
  %v8_80540bc = load i32, i32* %v7_80540bc, align 4
  call void @__pseudo_call(i32 %v8_80540bc)
  %v0_80540c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80540c3 = add i32 %v0_80540c3, 1
  store i32 %v1_80540c3, i32* %ebx.global-to-local, align 4
  %v1_80540c4 = load i32, i32* %esi.global-to-local, align 4
  %v7_80540c4 = icmp ult i32 %v1_80540c3, %v1_80540c4
  br i1 %v7_80540c4, label %dec_label_pc_80540bc, label %dec_label_pc_80540c8

dec_label_pc_80540c8:                             ; preds = %dec_label_pc_80540bc, %dec_label_pc_8054097
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 2), i32 0), label %dec_label_pc_80540e0, label %dec_label_pc_80540ec

dec_label_pc_80540e0:                             ; preds = %dec_label_pc_80540c8, %dec_label_pc_80540e0
  %v4_80540e0 = phi i32 [ %v1_80540e7, %dec_label_pc_80540e0 ], [ 0, %dec_label_pc_80540c8 ]
  store i32 ptrtoint (i32* @global_var_80540e7.83 to i32), i32* %stack_var_-164, align 4
  %v5_80540e0 = mul i32 %v4_80540e0, 4
  %v6_80540e0 = add i32 %v5_80540e0, ptrtoint (i32* @global_var_8056000.71 to i32)
  %v7_80540e0 = inttoptr i32 %v6_80540e0 to i32*
  %v8_80540e0 = load i32, i32* %v7_80540e0, align 4
  call void @__pseudo_call(i32 %v8_80540e0)
  %v0_80540e7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80540e7 = add i32 %v0_80540e7, 1
  store i32 %v1_80540e7, i32* %ebx.global-to-local, align 4
  %v1_80540e8 = load i32, i32* %esi.global-to-local, align 4
  %v7_80540e8 = icmp ult i32 %v1_80540e7, %v1_80540e8
  br i1 %v7_80540e8, label %dec_label_pc_80540e0, label %dec_label_pc_80540ec

dec_label_pc_80540ec:                             ; preds = %dec_label_pc_80540e0, %dec_label_pc_80540c8
  %v0_80540f5 = load i32, i32* %stack_var_-164, align 4
  %v1_80540f5 = call i32 @function_80526bd(i32 %v0_80540f5)
  %v1_80540fa = inttoptr i32 %v1_80540f5 to i32*
  store i32 0, i32* %v1_80540fa, align 4
  store i32 0, i32* @eax, align 4
  store i32 0, i32* %stack_var_-164, align 4
  %v0_8054115 = load i32, i32* @global_var_8056140.79, align 64
  store i32 %v0_8054115, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_8053f79)
  %v0_805412a = load i32, i32* @eax, align 4
  %v1_805412d = call i32 @function_8053b8d(i32 %v0_805412a)
  %v0_8054139 = load i32, i32* @ebx, align 4
  %v1_8054139 = inttoptr i32 %v0_8054139 to %sigcontext*
  %v2_8054139 = call i32 @sigreturn(%sigcontext* %v1_8054139)
  %v0_8054141 = load i32, i32* @ebx, align 4
  %v1_8054141 = inttoptr i32 %v0_8054141 to %sigcontext*
  %v2_8054141 = call i32 @sigreturn(%sigcontext* %v1_8054141)
  ret i32 %v2_8054141

; uselistorder directives
  uselistorder i32 %v1_80540e7, { 1, 2, 0 }
  uselistorder i32 %v1_80540c3, { 1, 2, 0 }
  uselistorder i32 %v2_8054003, { 1, 0 }
  uselistorder i32 %v1_8054000, { 2, 1, 0 }
  uselistorder i32 %v1_8053fdf, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8053fdc, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @function_8053b8d, { 1, 2, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 2), { 1, 3, 2, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), { 0, 2, 1 }
  uselistorder i32 ()* @function_8053f05, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 -65536, { 3, 0, 1, 2, 4 }
  uselistorder i32 120, { 8, 22, 23, 1, 2, 9, 10, 3, 11, 12, 13, 4, 5, 14, 15, 6, 16, 17, 7, 18, 19, 20, 21, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_80540e0, { 1, 0 }
  uselistorder label %dec_label_pc_80540bc, { 1, 0 }
  uselistorder label %dec_label_pc_8054097, { 1, 0 }
  uselistorder label %dec_label_pc_8054022, { 1, 0 }
  uselistorder label %dec_label_pc_8054000, { 1, 0 }
  uselistorder label %dec_label_pc_8053fe8, { 1, 0 }
  uselistorder label %dec_label_pc_8053fc5, { 1, 0 }
}

define i32 @function_8054143(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8054143:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8054143 = load i32, i32* @esi, align 4
  %v0_8054144 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054159 = icmp eq i32* %arg2, null
  br i1 %v1_8054159, label %dec_label_pc_80541ac, label %dec_label_pc_805415d

dec_label_pc_805415d:                             ; preds = %dec_label_pc_8054143
  %v2_805415d = load i32, i32* %arg2, align 4
  store i32 %v2_805415d, i32* %stack_var_-148, align 4
  %v1_8054166 = add i32 %tmp11, 4
  %v3_8054178 = bitcast i32* %stack_var_-136 to i16*
  %v4_8054178 = call i32 @function_80547c6(i16* %v3_8054178, i32 %v1_8054166, i32 128)
  %v1_805417d = add i32 %tmp11, 132
  %v2_8054197 = inttoptr i32 %v1_805417d to i8*
  %v3_8054197 = load i8, i8* %v2_8054197, align 1
  %v4_8054197 = and i8 %v3_8054197, 4
  %v5_8054197 = icmp eq i8 %v4_8054197, 0
  %v1_805419e = icmp eq i1 %v5_8054197, false
  br i1 %v1_805419e, label %dec_label_pc_80541ac, label %dec_label_pc_80541a0

dec_label_pc_80541a0:                             ; preds = %dec_label_pc_805415d
  br label %dec_label_pc_80541ac

dec_label_pc_80541ac:                             ; preds = %dec_label_pc_80541a0, %dec_label_pc_805415d, %dec_label_pc_8054143
  %v1_80541ae = icmp eq i32 %arg3, 0
  br i1 %v1_80541ae, label %dec_label_pc_80541b6, label %dec_label_pc_80541b2

dec_label_pc_80541b2:                             ; preds = %dec_label_pc_80541ac
  %v2_80541b2 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_80541b6

dec_label_pc_80541b6:                             ; preds = %dec_label_pc_80541ac, %dec_label_pc_80541b2
  %v0_80541c5 = phi i32 [ 0, %dec_label_pc_80541ac ], [ %v2_80541b2, %dec_label_pc_80541b2 ]
  br i1 %v1_8054159, label %dec_label_pc_80541c3, label %dec_label_pc_80541bc

dec_label_pc_80541bc:                             ; preds = %dec_label_pc_80541b6
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_80541c3

dec_label_pc_80541c3:                             ; preds = %dec_label_pc_80541b6, %dec_label_pc_80541bc
  %v0_80541c6 = phi %sigaction* [ null, %dec_label_pc_80541b6 ], [ %phitmp, %dec_label_pc_80541bc ]
  %v5_80541ce = call i32 @function_8054269(i32 %arg1, %sigaction* %v0_80541c6, i32 %v0_80541c5, i32 8)
  store i32 %v5_80541ce, i32* %ebx.global-to-local, align 4
  br i1 %v1_80541ae, label %dec_label_pc_8054211, label %dec_label_pc_80541dc

dec_label_pc_80541dc:                             ; preds = %dec_label_pc_80541c3
  %v2_80541dc = icmp slt i32 %v5_80541ce, 0
  br i1 %v2_80541dc, label %dec_label_pc_8054211, label %dec_label_pc_80541e0

dec_label_pc_80541e0:                             ; preds = %dec_label_pc_80541dc
  %v3_80541e0 = load i32, i32* %stack_var_-288, align 4
  %v2_80541e4 = inttoptr i32 %arg3 to i32*
  store i32 %v3_80541e0, i32* %v2_80541e4, align 4
  %v2_80541ec = ptrtoint i32* %stack_var_-276 to i32
  %v1_80541f1 = add i32 %arg3, 4
  %v3_80541f5 = inttoptr i32 %v1_80541f1 to i16*
  %v4_80541f5 = call i32 @function_80547c6(i16* %v3_80541f5, i32 %v2_80541ec, i32 128)
  %v2_80541fe = add i32 %arg3, 132
  %v3_80541fe = inttoptr i32 %v2_80541fe to i32*
  %v2_805420b = add i32 %arg3, 136
  %v3_805420b = inttoptr i32 %v2_805420b to i32*
  %v0_8054211.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054211

dec_label_pc_8054211:                             ; preds = %dec_label_pc_80541dc, %dec_label_pc_80541c3, %dec_label_pc_80541e0
  %v0_8054211 = phi i32 [ %v5_80541ce, %dec_label_pc_80541dc ], [ %v5_80541ce, %dec_label_pc_80541c3 ], [ %v0_8054211.pre, %dec_label_pc_80541e0 ]
  store i32 %v0_8054144, i32* @ebx, align 4
  store i32 %v0_8054143, i32* @esi, align 4
  ret i32 %v0_8054211

; uselistorder directives
  uselistorder i32 136, { 1, 0, 2 }
  uselistorder i8 4, { 1, 2, 3, 4, 0 }
  uselistorder i32 132, { 1, 2, 0, 3 }
  uselistorder i32 128, { 6, 7, 11, 8, 10, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i32* null, { 0, 2, 1, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8054211, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80541c3, { 1, 0 }
  uselistorder label %dec_label_pc_80541b6, { 1, 0 }
}

define i32 @function_805421c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_805421c:
  %stack_var_4 = alloca i32, align 4
  %v0_805421c = load i32, i32* @ebx, align 4
  %v2_8054227 = load i32, i32* @ecx, align 4
  %v4_8054227 = load i32, i32* @esi, align 4
  %v5_8054227 = load i32, i32* @edi, align 4
  %v6_8054227 = load i32, i32* @ebp, align 4
  %v7_8054227 = call i32* @mmap(i32* nonnull %stack_var_4, i32 %v2_8054227, i32 %v0_805421c, i32 %v4_8054227, i32 %v5_8054227, i32 %v6_8054227)
  %v8_8054227 = ptrtoint i32* %v7_8054227 to i32
  store i32 %v0_805421c, i32* @ebx, align 4
  %v3_8054230 = icmp ugt i32* %v7_8054227, inttoptr (i32 -4096 to i32*)
  call void @__pseudo_cond_branch(i1 %v3_8054230, i32 134564065)
  ret i32 %v8_8054227

; uselistorder directives
  uselistorder i32* @ebp, { 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 6, 7, 45, 46, 47, 48, 49, 50, 51, 52, 57, 53, 54, 55, 56, 4, 58, 20, 10, 11, 12, 3, 24, 25, 17, 9, 16, 21, 15, 2, 26, 8, 0, 27, 13, 14, 1, 18, 19, 22, 23, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 77, 78, 80, 81, 82, 83, 84, 85, 34, 35 }
  uselistorder i32* @ecx, { 5, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 34, 35, 36, 1, 37, 13, 12, 38, 39, 40, 2, 41, 42, 43, 3, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 7, 8, 4, 9, 10, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 6, 81, 82, 83, 84 }
}

define i32 @function_8054237(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054237:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054237 = load i32, i32* @ebx, align 4
  store i32 %v0_8054237, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805424a = call i32 @int80_syscall(i32 102)
  store i32 %v1_805424a, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_805424a, -4095
  br i1 %tmp9, label %dec_label_pc_8054263, label %dec_label_pc_8054257

dec_label_pc_8054257:                             ; preds = %dec_label_pc_8054237
  %v1_8054257 = call i32 @function_80526bd(i32 %v0_8054237)
  %v0_805425c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805425c = sub i32 0, %v0_805425c
  %v2_805425e = inttoptr i32 %v1_8054257 to i32*
  store i32 %v1_805425c, i32* %v2_805425e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054267.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054263

dec_label_pc_8054263:                             ; preds = %dec_label_pc_8054237, %dec_label_pc_8054257
  %v2_8054267 = phi i32 [ %v0_8054237, %dec_label_pc_8054237 ], [ %v2_8054267.pre, %dec_label_pc_8054257 ]
  %v0_8054263 = phi i32 [ %v1_805424a, %dec_label_pc_8054237 ], [ -1, %dec_label_pc_8054257 ]
  %v2_8054265 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054265, i32* @edx, align 4
  store i32 %v2_8054267, i32* @ebx, align 4
  ret i32 %v0_8054263

; uselistorder directives
  uselistorder i32 %v1_805424a, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8054263, { 1, 0 }
}

define i32 @function_8054269(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054269:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_805426a = load i32, i32* @esi, align 4
  store i32 %v0_805426a, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805427e = load i32, i32* @ebx, align 4
  %v7_8054286 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8054286, i32* %esi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_8054286, -4095
  br i1 %tmp14, label %dec_label_pc_805429e, label %dec_label_pc_8054292

dec_label_pc_8054292:                             ; preds = %dec_label_pc_8054269
  %v1_8054292 = call i32 @function_80526bd(i32 %v0_805427e)
  %v0_8054297 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054297 = sub i32 0, %v0_8054297
  %v2_8054299 = inttoptr i32 %v1_8054292 to i32*
  store i32 %v1_8054297, i32* %v2_8054299, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80542a1.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805429e

dec_label_pc_805429e:                             ; preds = %dec_label_pc_8054269, %dec_label_pc_8054292
  %v2_80542a1 = phi i32 [ %v0_805426a, %dec_label_pc_8054269 ], [ %v2_80542a1.pre, %dec_label_pc_8054292 ]
  %v0_805429e = phi i32 [ %v7_8054286, %dec_label_pc_8054269 ], [ -1, %dec_label_pc_8054292 ]
  store i32 %v2_80542a1, i32* @esi, align 4
  ret i32 %v0_805429e

; uselistorder directives
  uselistorder i32 %v7_8054286, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805429e, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_80542a4(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_80542a4:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_80542cc(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80542cc:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80542cc = load i32, i32* @ebx, align 4
  store i32 %v0_80542cc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_80542df = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_80542df, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_80542df, -4095
  br i1 %tmp10, label %dec_label_pc_80542f8, label %dec_label_pc_80542ec

dec_label_pc_80542ec:                             ; preds = %dec_label_pc_80542cc
  %v1_80542ec = call i32 @function_80526bd(i32 %v0_80542cc)
  %v0_80542f1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80542f1 = sub i32 0, %v0_80542f1
  %v2_80542f3 = inttoptr i32 %v1_80542ec to i32*
  store i32 %v1_80542f1, i32* %v2_80542f3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80542fc.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80542f8

dec_label_pc_80542f8:                             ; preds = %dec_label_pc_80542cc, %dec_label_pc_80542ec
  %v2_80542fc = phi i32 [ %v0_80542cc, %dec_label_pc_80542cc ], [ %v2_80542fc.pre, %dec_label_pc_80542ec ]
  %v0_80542f8 = phi i32 [ %v4_80542df, %dec_label_pc_80542cc ], [ -1, %dec_label_pc_80542ec ]
  store i32 %v2_80542fc, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80542f8

; uselistorder directives
  uselistorder i32 %v4_80542df, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80542f8, { 1, 0 }
}

define i32 @function_80542fe(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80542fe:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80542fe = load i32, i32* @ebx, align 4
  store i32 %v0_80542fe, i32* %stack_var_-4, align 4
  %tmp11 = bitcast i32* %stack_var_-68 to %stat*
  %v4_8054311 = call i32 @fstat(i32 %arg1, %stat* %tmp11)
  store i32 %v4_8054311, i32* @ebx, align 4
  %tmp13 = icmp ult i32 %v4_8054311, -4095
  br i1 %tmp13, label %dec_label_pc_805432c, label %dec_label_pc_805431e

dec_label_pc_805431e:                             ; preds = %dec_label_pc_80542fe
  %v1_805431e = call i32 @function_80526bd(i32 %v0_80542fe)
  %v0_8054323 = load i32, i32* @ebx, align 4
  %v1_8054323 = sub i32 0, %v0_8054323
  %v2_8054325 = inttoptr i32 %v1_805431e to i32*
  store i32 %v1_8054323, i32* %v2_8054325, align 4
  %v2_8054344.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805433f

dec_label_pc_805432c:                             ; preds = %dec_label_pc_80542fe
  %v1_805432c = icmp eq i32 %v4_8054311, 0
  %v1_805432e = icmp eq i1 %v1_805432c, false
  br i1 %v1_805432e, label %dec_label_pc_805433f, label %dec_label_pc_8054330

dec_label_pc_8054330:                             ; preds = %dec_label_pc_805432c
  %v4_8054337 = bitcast i32* %stack_var_-68 to i16*
  %v5_8054337 = call i32 @function_8054749(i16* %v4_8054337, i32 %arg2, i32 %v4_8054311, i32 %v4_8054311)
  %v0_805433f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805433f

dec_label_pc_805433f:                             ; preds = %dec_label_pc_805432c, %dec_label_pc_805431e, %dec_label_pc_8054330
  %v2_8054344 = phi i32 [ %v0_80542fe, %dec_label_pc_805432c ], [ %v2_8054344.pre, %dec_label_pc_805431e ], [ %v0_80542fe, %dec_label_pc_8054330 ]
  %v0_805433f = phi i32 [ %v4_8054311, %dec_label_pc_805432c ], [ -1, %dec_label_pc_805431e ], [ %v0_805433f.pre, %dec_label_pc_8054330 ]
  store i32 %v2_8054344, i32* @ebx, align 4
  ret i32 %v0_805433f

; uselistorder directives
  uselistorder i32 %v4_8054311, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_805433f, { 2, 0, 1 }
}

define i32 @function_8054346(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054346:
  %eax.global-to-local = alloca i32, align 4
  %v0_8054346 = load i32, i32* @edi, align 4
  %v0_8054347 = load i32, i32* @esi, align 4
  %v0_8054348 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_805434d = load i32, i32* @edx, align 4
  %v7_8054357 = inttoptr i32 %arg2 to i32*
  %v8_8054357 = call i32 @function_80543b5(i32 %arg1, i32* %v7_8054357, i32 %arg3, i32 %v0_805434d, i32 %v0_8054348, i32 %v0_8054347, i32 %v0_8054346)
  store i32 %v8_8054357, i32* %eax.global-to-local, align 4
  store i32 %v8_8054357, i32* @esi, align 4
  %tmp24 = icmp slt i32 %v8_8054357, 1
  br i1 %tmp24, label %dec_label_pc_80543af, label %dec_label_pc_8054365

dec_label_pc_8054365:                             ; preds = %dec_label_pc_8054346
  %v0_8054365 = load i32, i32* @ebx, align 4
  %v2_8054365 = add i32 %v0_8054365, %v8_8054357
  store i32 %v2_8054365, i32* @edi, align 4
  %v7_80543ab4 = icmp ult i32 %v0_8054365, %v2_8054365
  br i1 %v7_80543ab4, label %dec_label_pc_805436a, label %dec_label_pc_80543af

dec_label_pc_805436a:                             ; preds = %dec_label_pc_8054365, %dec_label_pc_805436a
  %v0_805436a = phi i32 [ %v2_80543a9, %dec_label_pc_805436a ], [ %v0_8054365, %dec_label_pc_8054365 ]
  %v1_805436a = add i32 %v0_805436a, 8
  %v2_805436a = inttoptr i32 %v1_805436a to i32*
  %v3_805436a = load i32, i32* %v2_805436a, align 4
  store i32 %v3_805436a, i32* %eax.global-to-local, align 4
  %v2_805436d = add i32 %v0_805436a, 4
  %v3_805436d = inttoptr i32 %v2_805436d to i32*
  store i32 %v3_805436a, i32* %v3_805436d, align 4
  %v0_8054370 = load i32, i32* @ebx, align 4
  %v1_8054370 = add i32 %v0_8054370, 16
  %v2_8054370 = inttoptr i32 %v1_8054370 to i32*
  %v3_8054370 = load i32, i32* %v2_8054370, align 4
  store i32 %v3_8054370, i32* %eax.global-to-local, align 4
  %v1_8054373 = trunc i32 %v3_8054370 to i16
  %v3_8054373 = add i32 %v0_8054370, 8
  %v4_8054373 = inttoptr i32 %v3_8054373 to i16*
  store i16 %v1_8054373, i16* %v4_8054373, align 2
  %v0_8054377 = load i32, i32* @ebx, align 4
  %v1_8054377 = add i32 %v0_8054377, 18
  %v2_8054377 = inttoptr i32 %v1_8054377 to i8*
  %v3_8054377 = load i8, i8* %v2_8054377, align 1
  %v4_8054377 = zext i8 %v3_8054377 to i32
  %v5_8054377 = load i32, i32* %eax.global-to-local, align 4
  %v6_8054377 = and i32 %v5_8054377, -256
  %v7_8054377 = or i32 %v6_8054377, %v4_8054377
  store i32 %v7_8054377, i32* %eax.global-to-local, align 4
  %v3_805437a = add i32 %v0_8054377, 10
  %v4_805437a = inttoptr i32 %v3_805437a to i8*
  store i8 %v3_8054377, i8* %v4_805437a, align 1
  %v0_805437e = load i32, i32* @ebx, align 4
  %v1_805437e = add i32 %v0_805437e, 8
  %v2_805437e = inttoptr i32 %v1_805437e to i16*
  %v3_805437e = load i16, i16* %v2_805437e, align 2
  %v4_805437e = zext i16 %v3_805437e to i32
  %v1_8054382 = add nsw i32 %v4_805437e, -19
  %v1_8054386 = add i32 %v0_805437e, 19
  %v1_805438a = add i32 %v0_805437e, 11
  store i32 %v1_805438a, i32* %eax.global-to-local, align 4
  %v3_805438e = inttoptr i32 %v1_805438a to i8*
  %v4_805438e = call i32 @function_80526e7(i8* %v3_805438e, i32 %v1_8054386, i32 %v1_8054382)
  store i32 %v4_805438e, i32* %eax.global-to-local, align 4
  %v0_8054396 = load i32, i32* @ebx, align 4
  %v1_8054396 = add i32 %v0_8054396, 8
  %v2_8054396 = inttoptr i32 %v1_8054396 to i16*
  %v3_8054396 = load i16, i16* %v2_8054396, align 2
  %v4_8054396 = zext i16 %v3_8054396 to i32
  store i32 %v4_8054396, i32* %eax.global-to-local, align 4
  %v3_805439d = inttoptr i32 %v0_8054396 to i8*
  %v4_805439d = call i32 @function_80526e7(i8* %v3_805439d, i32 %v0_8054396, i32 %v4_8054396)
  store i32 %v4_805439d, i32* %eax.global-to-local, align 4
  %v0_80543a2 = load i32, i32* @ebx, align 4
  %v1_80543a2 = add i32 %v0_80543a2, 8
  %v2_80543a2 = inttoptr i32 %v1_80543a2 to i16*
  %v3_80543a2 = load i16, i16* %v2_80543a2, align 2
  %v4_80543a2 = zext i16 %v3_80543a2 to i32
  store i32 %v4_80543a2, i32* %eax.global-to-local, align 4
  %v2_80543a9 = add i32 %v4_80543a2, %v0_80543a2
  store i32 %v2_80543a9, i32* @ebx, align 4
  %v1_80543ab = load i32, i32* @edi, align 4
  %v7_80543ab = icmp ult i32 %v2_80543a9, %v1_80543ab
  br i1 %v7_80543ab, label %dec_label_pc_805436a, label %dec_label_pc_80543ab.dec_label_pc_80543af.loopexit_crit_edge

dec_label_pc_80543ab.dec_label_pc_80543af.loopexit_crit_edge: ; preds = %dec_label_pc_805436a
  %v0_80543af.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80543af

dec_label_pc_80543af:                             ; preds = %dec_label_pc_8054365, %dec_label_pc_80543ab.dec_label_pc_80543af.loopexit_crit_edge, %dec_label_pc_8054346
  %v0_80543af = phi i32 [ %v8_8054357, %dec_label_pc_8054346 ], [ %v0_80543af.pre.pre, %dec_label_pc_80543ab.dec_label_pc_80543af.loopexit_crit_edge ], [ %v8_8054357, %dec_label_pc_8054365 ]
  store i32 %v0_80543af, i32* %eax.global-to-local, align 4
  store i32 %v0_8054347, i32* @esi, align 4
  store i32 %v0_8054346, i32* @edi, align 4
  ret i32 %v0_80543af

; uselistorder directives
  uselistorder i32 %v0_80543af, { 1, 0 }
  uselistorder i32 %v2_80543a9, { 1, 2, 0 }
  uselistorder i32 %v0_8054396, { 1, 0, 2 }
  uselistorder i32 %v0_805437e, { 1, 0, 2 }
  uselistorder i32 %v0_805436a, { 1, 0 }
  uselistorder i32 %v0_8054365, { 0, 2, 1 }
  uselistorder i32 %v8_8054357, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*, i32, i32)* @function_80526e7, { 6, 7, 1, 0, 2, 3, 4, 5, 8 }
  uselistorder i32 11, { 7, 5, 6, 8, 4, 0, 1, 2, 3, 9, 10 }
  uselistorder label %dec_label_pc_80543af, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805436a, { 1, 0 }
}

define i32 @function_80543b5(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_80543b5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_80543b8 = load i32, i32* @edi, align 4
  %v0_80543ba = load i32, i32* @ebx, align 4
  %v15_80543bb = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_80543c4 = add i32 %arg3, 30
  %v1_80543ca = and i32 %v1_80543c4, -16
  %v2_80543cd = sub i32 %v15_80543bb, %v1_80543ca
  %v1_80543cf = add i32 %v2_80543cd, 15
  %v1_80543d3 = and i32 %v1_80543cf, -16
  %v1_80543d9 = inttoptr i32 %v1_80543d3 to %linux_dirent64*
  store i32 %v1_80543d3, i32* %ecx.global-to-local, align 4
  %v2_80543db = add i32 %v2_80543cd, -4
  %v3_80543db = inttoptr i32 %v2_80543db to i32*
  store i32 %v0_80543ba, i32* %v3_80543db, align 4
  %v0_80543dc = load i32, i32* %edi.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_80543e3 = call i32 @getdents64(i32 %v0_80543dc, %linux_dirent64* %v1_80543d9, i32 %arg3)
  store i32 %v5_80543e3, i32* %eax.global-to-local, align 4
  %v0_80543e5 = load i32, i32* @esp, align 4
  %v3_80543e5 = add i32 %v0_80543e5, 4
  %tmp41 = icmp ult i32 %v5_80543e3, -4095
  br i1 %tmp41, label %dec_label_pc_80543ff, label %dec_label_pc_80543f0

dec_label_pc_80543f0:                             ; preds = %dec_label_pc_80543b5
  %v1_80543f0 = call i32 @function_80526bd(i32 %v5_80543e3)
  store i32 %v1_80543f0, i32* %eax.global-to-local, align 4
  %v4_80543f5 = sub i32 0, %v5_80543e3
  %v2_80543fb = inttoptr i32 %v1_80543f0 to i32*
  store i32 %v4_80543f5, i32* %v2_80543fb, align 4
  br label %dec_label_pc_80544c1

dec_label_pc_80543ff:                             ; preds = %dec_label_pc_80543b5
  store i32 %tmp14, i32* @esi, align 4
  store i32 %v1_80543d3, i32* @ebx, align 4
  %v5_80544b1 = add i32 %v5_80543e3, %v1_80543d3
  store i32 %v5_80544b1, i32* %eax.global-to-local, align 4
  %v7_80544b430 = icmp ult i32 %v1_80543d3, %v5_80544b1
  br i1 %v7_80544b430, label %dec_label_pc_805441e.lr.ph, label %dec_label_pc_80544bc

dec_label_pc_805441e.lr.ph:                       ; preds = %dec_label_pc_80543ff
  %v5_805442b = add i32 %tmp14, %arg3
  br label %dec_label_pc_805441e

dec_label_pc_805441e:                             ; preds = %dec_label_pc_805441e.lr.ph, %dec_label_pc_8054460
  %stack_var_-32.036 = phi i32 [ -1, %dec_label_pc_805441e.lr.ph ], [ %v3_8054463, %dec_label_pc_8054460 ]
  %stack_var_-36.035 = phi i32 [ -1, %dec_label_pc_805441e.lr.ph ], [ %v3_8054460, %dec_label_pc_8054460 ]
  %v0_805446c34 = phi i32 [ %v1_80543d3, %dec_label_pc_805441e.lr.ph ], [ %v2_80544a9, %dec_label_pc_8054460 ]
  %v1_805447133 = phi i32 [ %tmp14, %dec_label_pc_805441e.lr.ph ], [ %v2_805442e, %dec_label_pc_8054460 ]
  %v0_805443832 = phi i32 [ %v3_80543e5, %dec_label_pc_805441e.lr.ph ], [ %v1_80544ab, %dec_label_pc_8054460 ]
  %v1_805441e = add i32 %v0_805446c34, 16
  %v2_805441e = inttoptr i32 %v1_805441e to i16*
  %v3_805441e = load i16, i16* %v2_805441e, align 2
  %v4_805441e = zext i16 %v3_805441e to i32
  %v1_8054422 = add nuw nsw i32 %v4_805441e, 3
  %v1_8054428 = and i32 %v1_8054422, 131068
  store i32 %v1_8054428, i32* %ecx.global-to-local, align 4
  store i32 %v5_805442b, i32* %eax.global-to-local, align 4
  %v2_805442e = add i32 %v1_8054428, %v1_805447133
  %tmp42 = icmp ugt i32 %v2_805442e, %v5_805442b
  br i1 %tmp42, label %dec_label_pc_8054438, label %dec_label_pc_8054460

dec_label_pc_8054438:                             ; preds = %dec_label_pc_805441e
  %v1_8054438 = add i32 %v0_805443832, -4
  %v2_8054438 = inttoptr i32 %v1_8054438 to i32*
  store i32 0, i32* %v2_8054438, align 4
  %v5_805443a = add i32 %v0_805443832, -8
  %v6_805443a = inttoptr i32 %v5_805443a to i32*
  store i32 %stack_var_-32.036, i32* %v6_805443a, align 4
  %v5_805443d = add i32 %v0_805443832, -12
  %v6_805443d = inttoptr i32 %v5_805443d to i32*
  store i32 %stack_var_-36.035, i32* %v6_805443d, align 4
  %v5_8054440 = add i32 %v0_805443832, -16
  %v6_8054440 = inttoptr i32 %v5_8054440 to i32*
  store i32 %arg1, i32* %v6_8054440, align 4
  %v1_8054443 = call i32 @function_80545cb(i32 %v2_805442e)
  store i32 %v1_8054443, i32* %eax.global-to-local, align 4
  %v0_805444b = load i32, i32* @esi, align 4
  %v15_805444b = icmp eq i32 %v0_805444b, %tmp14
  %v1_805444e = icmp eq i1 %v15_805444b, false
  br i1 %v1_805444e, label %dec_label_pc_80544bc, label %dec_label_pc_8054450

dec_label_pc_8054450:                             ; preds = %dec_label_pc_8054438
  %v1_8054450 = call i32 @function_80526bd(i32 %v2_805442e)
  store i32 %v1_8054450, i32* %eax.global-to-local, align 4
  %v1_8054455 = inttoptr i32 %v1_8054450 to i32*
  store i32 22, i32* %v1_8054455, align 4
  br label %dec_label_pc_80544c1

dec_label_pc_8054460:                             ; preds = %dec_label_pc_805441e
  %v1_8054460 = add i32 %v0_805446c34, 8
  %v2_8054460 = inttoptr i32 %v1_8054460 to i32*
  %v3_8054460 = load i32, i32* %v2_8054460, align 4
  store i32 %v3_8054460, i32* %eax.global-to-local, align 4
  %v1_8054463 = add i32 %v0_805446c34, 12
  %v2_8054463 = inttoptr i32 %v1_8054463 to i32*
  %v3_8054463 = load i32, i32* %v2_8054463, align 4
  %v1_805446c = inttoptr i32 %v0_805446c34 to i32*
  %v2_805446c = load i32, i32* %v1_805446c, align 4
  store i32 %v2_805446c, i32* %eax.global-to-local, align 4
  %v1_805446e = add i32 %v0_805446c34, 4
  %v2_805446e = inttoptr i32 %v1_805446e to i32*
  %v3_805446e = load i32, i32* %v2_805446e, align 4
  %v2_8054471 = add i32 %v1_805447133, 4
  %v3_8054471 = inttoptr i32 %v2_8054471 to i32*
  store i32 %v3_805446e, i32* %v3_8054471, align 4
  %v0_8054474 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054474 = load i32, i32* @esi, align 4
  %v2_8054474 = inttoptr i32 %v1_8054474 to i32*
  store i32 %v0_8054474, i32* %v2_8054474, align 4
  %v0_8054476 = load i32, i32* @ebx, align 4
  %v1_8054476 = add i32 %v0_8054476, 8
  %v2_8054476 = inttoptr i32 %v1_8054476 to i32*
  %v3_8054476 = load i32, i32* %v2_8054476, align 4
  store i32 %v3_8054476, i32* %eax.global-to-local, align 4
  %v1_8054479 = add i32 %v0_8054476, 12
  %v2_8054479 = inttoptr i32 %v1_8054479 to i32*
  %v3_8054479 = load i32, i32* %v2_8054479, align 4
  %v1_805447c = load i32, i32* @esi, align 4
  %v2_805447c = add i32 %v1_805447c, 12
  %v3_805447c = inttoptr i32 %v2_805447c to i32*
  store i32 %v3_8054479, i32* %v3_805447c, align 4
  %v0_805447f = load i32, i32* %eax.global-to-local, align 4
  %v1_805447f = load i32, i32* @esi, align 4
  %v2_805447f = add i32 %v1_805447f, 8
  %v3_805447f = inttoptr i32 %v2_805447f to i32*
  store i32 %v0_805447f, i32* %v3_805447f, align 4
  %v0_8054482 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054482 = trunc i32 %v0_8054482 to i16
  %v2_8054482 = load i32, i32* @esi, align 4
  %v3_8054482 = add i32 %v2_8054482, 16
  %v4_8054482 = inttoptr i32 %v3_8054482 to i16*
  store i16 %v1_8054482, i16* %v4_8054482, align 2
  %v0_8054486 = load i32, i32* @ebx, align 4
  %v1_8054486 = add i32 %v0_8054486, 18
  %v2_8054486 = inttoptr i32 %v1_8054486 to i8*
  %v3_8054486 = load i8, i8* %v2_8054486, align 1
  %v4_8054486 = zext i8 %v3_8054486 to i32
  %v5_8054486 = load i32, i32* %eax.global-to-local, align 4
  %v6_8054486 = and i32 %v5_8054486, -256
  %v7_8054486 = or i32 %v6_8054486, %v4_8054486
  store i32 %v7_8054486, i32* %eax.global-to-local, align 4
  %v2_8054489 = load i32, i32* @esi, align 4
  %v3_8054489 = add i32 %v2_8054489, 18
  %v4_8054489 = inttoptr i32 %v3_8054489 to i8*
  store i8 %v3_8054486, i8* %v4_8054489, align 1
  %v0_805448c = load i32, i32* %eax.global-to-local, align 4
  %v1_805448c = load i32, i32* @esp, align 4
  %v2_805448c = add i32 %v1_805448c, -4
  %v3_805448c = inttoptr i32 %v2_805448c to i32*
  store i32 %v0_805448c, i32* %v3_805448c, align 4
  %v0_805448d = load i32, i32* @ebx, align 4
  %v1_805448d = add i32 %v0_805448d, 16
  %v2_805448d = inttoptr i32 %v1_805448d to i16*
  %v3_805448d = load i16, i16* %v2_805448d, align 2
  %v4_805448d = zext i16 %v3_805448d to i32
  %v1_8054491 = add nsw i32 %v4_805448d, -19
  %v2_8054494 = add i32 %v1_805448c, -8
  %v3_8054494 = inttoptr i32 %v2_8054494 to i32*
  store i32 %v1_8054491, i32* %v3_8054494, align 4
  %v0_8054495 = load i32, i32* @ebx, align 4
  %v1_8054495 = add i32 %v0_8054495, 19
  %v2_8054498 = add i32 %v1_805448c, -12
  %v3_8054498 = inttoptr i32 %v2_8054498 to i32*
  store i32 %v1_8054495, i32* %v3_8054498, align 4
  %v0_8054499 = load i32, i32* @esi, align 4
  %v1_8054499 = add i32 %v0_8054499, 19
  store i32 %v1_8054499, i32* %eax.global-to-local, align 4
  %v2_805449c = add i32 %v1_805448c, -16
  %v3_805449c = inttoptr i32 %v2_805449c to i32*
  store i32 %v1_8054499, i32* %v3_805449c, align 4
  %v3_805449d = inttoptr i32 %v2_805442e to i16*
  %v4_805449d = call i32 @function_80547c6(i16* %v3_805449d, i32 %v3_8054460, i32 %v3_8054463)
  store i32 %v4_805449d, i32* %eax.global-to-local, align 4
  %v0_80544a2 = load i32, i32* @ebx, align 4
  %v1_80544a2 = add i32 %v0_80544a2, 16
  %v2_80544a2 = inttoptr i32 %v1_80544a2 to i16*
  %v3_80544a2 = load i16, i16* %v2_80544a2, align 2
  %v4_80544a2 = zext i16 %v3_80544a2 to i32
  store i32 %v2_805442e, i32* @esi, align 4
  %v2_80544a9 = add i32 %v4_80544a2, %v0_80544a2
  store i32 %v2_80544a9, i32* @ebx, align 4
  %v0_80544ab = load i32, i32* @esp, align 4
  %v1_80544ab = add i32 %v0_80544ab, 16
  store i32 %v5_80544b1, i32* %eax.global-to-local, align 4
  %v7_80544b4 = icmp ult i32 %v2_80544a9, %v5_80544b1
  br i1 %v7_80544b4, label %dec_label_pc_805441e, label %dec_label_pc_80544bc

dec_label_pc_80544bc:                             ; preds = %dec_label_pc_80543ff, %dec_label_pc_8054460, %dec_label_pc_8054438
  %v0_80544bc = phi i32 [ %v0_805444b, %dec_label_pc_8054438 ], [ %tmp14, %dec_label_pc_80543ff ], [ %v2_805442e, %dec_label_pc_8054460 ]
  store i32 %v0_80544bc, i32* %eax.global-to-local, align 4
  %v5_80544be = sub i32 %v0_80544bc, %tmp14
  br label %dec_label_pc_80544c1

dec_label_pc_80544c1:                             ; preds = %dec_label_pc_8054450, %dec_label_pc_80543f0, %dec_label_pc_80544bc
  %storemerge = phi i32 [ %v5_80544be, %dec_label_pc_80544bc ], [ -1, %dec_label_pc_80543f0 ], [ -1, %dec_label_pc_8054450 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80543ba, i32* @ebx, align 4
  store i32 %v0_80543b8, i32* %edi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_80544bc, { 1, 0 }
  uselistorder i32 %v2_80544a9, { 0, 2, 1 }
  uselistorder i32 %v3_8054463, { 1, 0 }
  uselistorder i32 %v3_8054460, { 1, 2, 0 }
  uselistorder i32 %v2_805442e, { 0, 5, 6, 1, 2, 4, 3 }
  uselistorder i32 %v0_805443832, { 3, 2, 1, 0 }
  uselistorder i32 %v0_805446c34, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v5_80544b1, { 2, 3, 0, 1 }
  uselistorder i32 %v5_80543e3, { 0, 3, 2, 1, 4 }
  uselistorder i32 %tmp14, { 5, 0, 2, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 16, 1, 15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 17, 0, 18 }
  uselistorder i32 (i16*, i32, i32)* @function_80547c6, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 19, { 2, 3, 4, 1, 0 }
  uselistorder i32 18, { 1, 2, 3, 0 }
  uselistorder i32 22, { 3, 7, 0, 1, 2, 8, 4, 5, 6 }
  uselistorder i32 -12, { 17, 34, 86, 87, 47, 48, 49, 50, 51, 52, 36, 18, 40, 20, 44, 42, 38, 19, 45, 35, 46, 21, 53, 43, 41, 39, 37, 22, 54, 55, 23, 33, 24, 29, 26, 25, 59, 60, 0, 61, 1, 2, 79, 74, 75, 76, 30, 31, 73, 32, 77, 78, 62, 3, 4, 27, 28, 5, 63, 64, 6, 7, 65, 8, 66, 9, 10, 67, 11, 68, 12, 13, 69, 14, 70, 15, 71, 72, 56, 57, 58, 80, 81, 82, 83, 84, 16, 85 }
  uselistorder i32 -8, { 0, 8, 73, 69, 71, 70, 72, 74, 75, 22, 23, 24, 25, 26, 27, 10, 11, 15, 2, 19, 17, 13, 1, 20, 9, 21, 28, 29, 18, 16, 14, 12, 3, 30, 31, 4, 66, 5, 51, 38, 6, 35, 36, 37, 61, 55, 56, 57, 52, 53, 54, 58, 59, 60, 39, 40, 7, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 32, 33, 34, 62, 63, 64, 65, 67, 68 }
  uselistorder i32* @esp, { 34, 35, 36, 2, 3, 4, 5, 6, 175, 176, 0, 47, 48, 49, 50, 51, 52, 53, 54, 9, 55, 56, 57, 58, 59, 60, 61, 62, 7, 10, 95, 96, 11, 124, 125, 126, 127, 63, 64, 65, 66, 67, 68, 106, 107, 89, 90, 42, 43, 44, 45, 46, 84, 85, 86, 87, 88, 97, 98, 79, 80, 81, 82, 83, 129, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 37, 38, 39, 40, 41, 120, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 121, 122, 123, 130, 131, 132, 133, 158, 134, 135, 136, 137, 138, 139, 128, 140, 141, 142, 143, 144, 145, 154, 155, 156, 146, 147, 148, 149, 150, 151, 152, 153, 8, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 13, 177, 178, 179, 180, 171, 172, 173, 174, 18, 181, 182, 183, 184, 17, 189, 190, 191, 192, 28, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 185, 186, 187, 188, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 19, 218, 219, 220, 29, 221, 222, 223, 224, 225, 226, 227, 229, 228, 1, 230, 231, 232, 233, 234, 235, 236, 237, 16, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 27, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 12, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 21, 20, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 22, 301, 302, 303, 304, 305, 306, 307, 23, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 24, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 25, 328, 329, 26, 330, 331, 332, 333, 334, 335, 336, 337, 338, 15, 30, 339, 340, 341, 342, 343, 344, 345, 31, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 32, 445, 446, 447, 448, 449, 450, 451, 452, 33, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 14, 470, 471, 472 }
  uselistorder i32 15, { 2, 1, 3, 0 }
  uselistorder i32 -16, { 14, 43, 121, 122, 66, 67, 68, 69, 70, 44, 45, 71, 72, 48, 15, 53, 18, 60, 61, 56, 57, 49, 17, 62, 63, 46, 47, 64, 65, 19, 73, 74, 58, 59, 54, 55, 50, 51, 52, 16, 20, 21, 75, 76, 22, 118, 79, 78, 42, 77, 2, 89, 3, 24, 35, 105, 25, 90, 30, 28, 92, 29, 1, 23, 88, 26, 91, 27, 4, 12, 40, 41, 107, 11, 108, 109, 36, 37, 106, 38, 110, 39, 93, 5, 94, 31, 95, 32, 96, 6, 97, 7, 98, 99, 8, 100, 101, 9, 102, 103, 33, 104, 10, 34, 111, 112, 80, 81, 82, 83, 84, 85, 86, 87, 113, 114, 115, 116, 123, 0, 117, 13, 119, 120 }
  uselistorder i32 30, { 4, 3, 2, 5, 6, 7, 8, 1, 9, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80544c1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80544bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805441e, { 1, 0 }
}

define i32 @function_80544c9() local_unnamed_addr {
dec_label_pc_80544c9:
  %stack_var_-8 = alloca i32, align 4
  %v2_80544cc = ptrtoint i32* %stack_var_-8 to i32
  %v2_80544d3 = call i32 @function_8054573(i32 7, i32 %v2_80544cc)
  %v2_80544e0 = icmp slt i32 %v2_80544d3, 0
  br i1 %v2_80544e0, label %dec_label_pc_80544e8, label %dec_label_pc_80544e4

dec_label_pc_80544e4:                             ; preds = %dec_label_pc_80544c9
  %v3_80544e4 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80544e8

dec_label_pc_80544e8:                             ; preds = %dec_label_pc_80544c9, %dec_label_pc_80544e4
  %v0_80544e8 = phi i32 [ 256, %dec_label_pc_80544c9 ], [ %v3_80544e4, %dec_label_pc_80544e4 ]
  ret i32 %v0_80544e8

; uselistorder directives
  uselistorder i32 7, { 4, 0, 5, 1, 2, 7, 6, 8, 9, 3 }
  uselistorder label %dec_label_pc_80544e8, { 1, 0 }
}

define i32 @function_80544ee() local_unnamed_addr {
dec_label_pc_80544ee:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80544ee = load i32, i32* @ebx, align 4
  store i32 %v0_80544ee, i32* %stack_var_-4, align 4
  %v1_80544f7 = call i32 @int80_syscall(i32 202)
  store i32 %v1_80544f7, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80544f7, -4095
  br i1 %tmp7, label %dec_label_pc_805450e, label %dec_label_pc_8054502

dec_label_pc_8054502:                             ; preds = %dec_label_pc_80544ee
  %v1_8054502 = call i32 @function_80526bd(i32 %v0_80544ee)
  %v0_8054507 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054507 = sub i32 0, %v0_8054507
  %v2_8054509 = inttoptr i32 %v1_8054502 to i32*
  store i32 %v1_8054507, i32* %v2_8054509, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054512.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805450e

dec_label_pc_805450e:                             ; preds = %dec_label_pc_80544ee, %dec_label_pc_8054502
  %v2_8054512 = phi i32 [ %v0_80544ee, %dec_label_pc_80544ee ], [ %v2_8054512.pre, %dec_label_pc_8054502 ]
  %v0_805450e = phi i32 [ %v1_80544f7, %dec_label_pc_80544ee ], [ -1, %dec_label_pc_8054502 ]
  store i32 %v2_8054512, i32* @ebx, align 4
  ret i32 %v0_805450e

; uselistorder directives
  uselistorder i32 %v1_80544f7, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805450e, { 1, 0 }
}

define i32 @function_8054514() local_unnamed_addr {
dec_label_pc_8054514:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054514 = load i32, i32* @ebx, align 4
  store i32 %v0_8054514, i32* %stack_var_-4, align 4
  %v1_805451d = call i32 @int80_syscall(i32 201)
  store i32 %v1_805451d, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805451d, -4095
  br i1 %tmp7, label %dec_label_pc_8054534, label %dec_label_pc_8054528

dec_label_pc_8054528:                             ; preds = %dec_label_pc_8054514
  %v1_8054528 = call i32 @function_80526bd(i32 %v0_8054514)
  %v0_805452d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805452d = sub i32 0, %v0_805452d
  %v2_805452f = inttoptr i32 %v1_8054528 to i32*
  store i32 %v1_805452d, i32* %v2_805452f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054538.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054534

dec_label_pc_8054534:                             ; preds = %dec_label_pc_8054514, %dec_label_pc_8054528
  %v2_8054538 = phi i32 [ %v0_8054514, %dec_label_pc_8054514 ], [ %v2_8054538.pre, %dec_label_pc_8054528 ]
  %v0_8054534 = phi i32 [ %v1_805451d, %dec_label_pc_8054514 ], [ -1, %dec_label_pc_8054528 ]
  store i32 %v2_8054538, i32* @ebx, align 4
  ret i32 %v0_8054534

; uselistorder directives
  uselistorder i32 %v1_805451d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054534, { 1, 0 }
}

define i32 @function_805453a() local_unnamed_addr {
dec_label_pc_805453a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805453a = load i32, i32* @ebx, align 4
  store i32 %v0_805453a, i32* %stack_var_-4, align 4
  %v1_8054543 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8054543, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8054543, -4095
  br i1 %tmp7, label %dec_label_pc_805455a, label %dec_label_pc_805454e

dec_label_pc_805454e:                             ; preds = %dec_label_pc_805453a
  %v1_805454e = call i32 @function_80526bd(i32 %v0_805453a)
  %v0_8054553 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054553 = sub i32 0, %v0_8054553
  %v2_8054555 = inttoptr i32 %v1_805454e to i32*
  store i32 %v1_8054553, i32* %v2_8054555, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805455e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805455a

dec_label_pc_805455a:                             ; preds = %dec_label_pc_805453a, %dec_label_pc_805454e
  %v2_805455e = phi i32 [ %v0_805453a, %dec_label_pc_805453a ], [ %v2_805455e.pre, %dec_label_pc_805454e ]
  %v0_805455a = phi i32 [ %v1_8054543, %dec_label_pc_805453a ], [ -1, %dec_label_pc_805454e ]
  store i32 %v2_805455e, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805455a

; uselistorder directives
  uselistorder i32 %v1_8054543, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805455a, { 1, 0 }
}

define i32 @function_8054560() local_unnamed_addr {
dec_label_pc_8054560:
  %v0_8054560 = load i32, i32* @global_var_8056144.77, align 4
  %v1_805456a = icmp eq i32 %v0_8054560, 0
  br i1 %v1_805456a, label %dec_label_pc_8054570, label %dec_label_pc_805456e

dec_label_pc_805456e:                             ; preds = %dec_label_pc_8054560
  br label %dec_label_pc_8054570

dec_label_pc_8054570:                             ; preds = %dec_label_pc_8054560, %dec_label_pc_805456e
  %v0_8054570 = phi i32 [ 4096, %dec_label_pc_8054560 ], [ %v0_8054560, %dec_label_pc_805456e ]
  ret i32 %v0_8054570

; uselistorder directives
  uselistorder i32 4096, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8054570, { 1, 0 }
}

define i32 @function_8054573(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054573:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054573 = load i32, i32* @ebx, align 4
  store i32 %v0_8054573, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054586 = call i32 @int80_syscall(i32 191)
  store i32 %v1_8054586, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8054586, -4095
  br i1 %tmp9, label %dec_label_pc_805459f, label %dec_label_pc_8054593

dec_label_pc_8054593:                             ; preds = %dec_label_pc_8054573
  %v1_8054593 = call i32 @function_80526bd(i32 %v0_8054573)
  %v0_8054598 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054598 = sub i32 0, %v0_8054598
  %v2_805459a = inttoptr i32 %v1_8054593 to i32*
  store i32 %v1_8054598, i32* %v2_805459a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80545a3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805459f

dec_label_pc_805459f:                             ; preds = %dec_label_pc_8054573, %dec_label_pc_8054593
  %v2_80545a3 = phi i32 [ %v0_8054573, %dec_label_pc_8054573 ], [ %v2_80545a3.pre, %dec_label_pc_8054593 ]
  %v0_805459f = phi i32 [ %v1_8054586, %dec_label_pc_8054573 ], [ -1, %dec_label_pc_8054593 ]
  store i32 %v2_80545a3, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805459f

; uselistorder directives
  uselistorder i32 %v1_8054586, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805459f, { 1, 0 }
}

define i32 @function_80545a5() local_unnamed_addr {
dec_label_pc_80545a5:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80545a5 = load i32, i32* @ebx, align 4
  store i32 %v0_80545a5, i32* %stack_var_-4, align 4
  %v1_80545ae = call i32 @int80_syscall(i32 199)
  store i32 %v1_80545ae, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80545ae, -4095
  br i1 %tmp7, label %dec_label_pc_80545c5, label %dec_label_pc_80545b9

dec_label_pc_80545b9:                             ; preds = %dec_label_pc_80545a5
  %v1_80545b9 = call i32 @function_80526bd(i32 %v0_80545a5)
  %v0_80545be = load i32, i32* %ebx.global-to-local, align 4
  %v1_80545be = sub i32 0, %v0_80545be
  %v2_80545c0 = inttoptr i32 %v1_80545b9 to i32*
  store i32 %v1_80545be, i32* %v2_80545c0, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80545c9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80545c5

dec_label_pc_80545c5:                             ; preds = %dec_label_pc_80545a5, %dec_label_pc_80545b9
  %v2_80545c9 = phi i32 [ %v0_80545a5, %dec_label_pc_80545a5 ], [ %v2_80545c9.pre, %dec_label_pc_80545b9 ]
  %v0_80545c5 = phi i32 [ %v1_80545ae, %dec_label_pc_80545a5 ], [ -1, %dec_label_pc_80545b9 ]
  store i32 %v2_80545c9, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80545c5

; uselistorder directives
  uselistorder i32 %v1_80545ae, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80545c5, { 1, 0 }
}

define i32 @function_80545cb(i32 %arg1) local_unnamed_addr {
dec_label_pc_80545cb:
  %esi.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v2_80545e1 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80545e1, i32* %esi.global-to-local, align 4
  %v1_80545f8 = call i32 @int80_syscall(i32 140)
  store i32 %v1_80545f8, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_80545f8, -4095
  br i1 %tmp18, label %dec_label_pc_8054612, label %dec_label_pc_8054604

dec_label_pc_8054604:                             ; preds = %dec_label_pc_80545cb
  %v2_80545e5 = ashr i32 %tmp8, 31
  %v1_8054604 = call i32 @function_80526bd(i32 %v2_80545e5)
  %v0_8054609 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054609 = sub i32 0, %v0_8054609
  %v2_805460b = inttoptr i32 %v1_8054604 to i32*
  store i32 %v1_8054609, i32* %v2_805460b, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054616

dec_label_pc_8054612:                             ; preds = %dec_label_pc_80545cb
  %v1_8054612 = icmp eq i32 %v1_80545f8, 0
  br i1 %v1_8054612, label %dec_label_pc_805461b, label %dec_label_pc_8054616

dec_label_pc_8054616:                             ; preds = %dec_label_pc_8054612, %dec_label_pc_8054604
  %v0_8054616 = phi i32 [ %v1_80545f8, %dec_label_pc_8054612 ], [ -1, %dec_label_pc_8054604 ]
  br label %dec_label_pc_8054623

dec_label_pc_805461b:                             ; preds = %dec_label_pc_8054612
  %v3_805461b = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8054623

dec_label_pc_8054623:                             ; preds = %dec_label_pc_8054616, %dec_label_pc_805461b
  %v0_8054629 = phi i32 [ %v0_8054616, %dec_label_pc_8054616 ], [ %v3_805461b, %dec_label_pc_805461b ]
  ret i32 %v0_8054629

; uselistorder directives
  uselistorder i32 %v1_80545f8, { 1, 2, 0, 3 }
  uselistorder i32 31, { 8, 6, 1, 2, 3, 4, 7, 5, 9, 10, 11, 12, 13, 0, 14 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054623, { 1, 0 }
}

define i32 @function_805462a(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_805462a:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805462b = load i32, i32* @esi, align 4
  store i32 %v0_805462b, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8054643 = load i32, i32* @ebx, align 4
  %v5_805464b = call i32* (i32*, i32, i32, i32, ...) @mremap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v6_805464b = ptrtoint i32* %v5_805464b to i32
  store i32 %v0_8054643, i32* @ebx, align 4
  store i32 %v6_805464b, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ugt i32* %v5_805464b, inttoptr (i32 -4096 to i32*)
  br i1 %tmp13, label %dec_label_pc_8054657, label %dec_label_pc_8054663

dec_label_pc_8054657:                             ; preds = %dec_label_pc_805462a
  %v1_8054657 = call i32 @function_80526bd(i32 %v0_8054643)
  %v0_805465c = load i32, i32* %esi.global-to-local, align 4
  %v1_805465c = sub i32 0, %v0_805465c
  %v2_805465e = inttoptr i32 %v1_8054657 to i32*
  store i32 %v1_805465c, i32* %v2_805465e, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8054666.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8054663

dec_label_pc_8054663:                             ; preds = %dec_label_pc_805462a, %dec_label_pc_8054657
  %v2_8054666 = phi i32 [ %v0_805462b, %dec_label_pc_805462a ], [ %v2_8054666.pre, %dec_label_pc_8054657 ]
  %v0_8054663 = phi i32 [ %v6_805464b, %dec_label_pc_805462a ], [ -1, %dec_label_pc_8054657 ]
  store i32 %v2_8054666, i32* @esi, align 4
  ret i32 %v0_8054663

; uselistorder directives
  uselistorder i32 %v0_8054643, { 1, 0 }
  uselistorder label %dec_label_pc_8054663, { 1, 0 }
}

define i32 @function_8054669(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054669:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8054669 = load i32, i32* @ebx, align 4
  store i32 %v0_8054669, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v3_805467c = call i32 @munmap(i32* %arg1, i32 %arg2)
  store i32 %v3_805467c, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_805467c, -4095
  br i1 %tmp10, label %dec_label_pc_8054695, label %dec_label_pc_8054689

dec_label_pc_8054689:                             ; preds = %dec_label_pc_8054669
  %v1_8054689 = call i32 @function_80526bd(i32 %v0_8054669)
  %v0_805468e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805468e = sub i32 0, %v0_805468e
  %v2_8054690 = inttoptr i32 %v1_8054689 to i32*
  store i32 %v1_805468e, i32* %v2_8054690, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054699.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054695

dec_label_pc_8054695:                             ; preds = %dec_label_pc_8054669, %dec_label_pc_8054689
  %v2_8054699 = phi i32 [ %v0_8054669, %dec_label_pc_8054669 ], [ %v2_8054699.pre, %dec_label_pc_8054689 ]
  %v0_8054695 = phi i32 [ %v3_805467c, %dec_label_pc_8054669 ], [ -1, %dec_label_pc_8054689 ]
  store i32 %v2_8054699, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054695

; uselistorder directives
  uselistorder i32 %v3_805467c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054695, { 1, 0 }
}

define i32 @function_805469b(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805469b:
  %ebx.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-4 = alloca i32, align 4
  %v0_805469b = load i32, i32* @ebx, align 4
  store i32 %v0_805469b, i32* %stack_var_-4, align 4
  %v4_805469f = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_805469f, i32* %ebx.global-to-local, align 4
  %v6_80546ae = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp5)
  store i32 %v6_80546ae, i32* %ebx.global-to-local, align 4
  %tmp12 = icmp ult i32 %v6_80546ae, -4095
  br i1 %tmp12, label %dec_label_pc_80546c7, label %dec_label_pc_80546bb

dec_label_pc_80546bb:                             ; preds = %dec_label_pc_805469b
  %v1_80546bb = call i32 @function_80526bd(i32 %v0_805469b)
  %v0_80546c0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80546c0 = sub i32 0, %v0_80546c0
  %v2_80546c2 = inttoptr i32 %v1_80546bb to i32*
  store i32 %v1_80546c0, i32* %v2_80546c2, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80546cb.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80546c7

dec_label_pc_80546c7:                             ; preds = %dec_label_pc_805469b, %dec_label_pc_80546bb
  %v2_80546cb = phi i32 [ %v0_805469b, %dec_label_pc_805469b ], [ %v2_80546cb.pre, %dec_label_pc_80546bb ]
  %v0_80546c7 = phi i32 [ %v6_80546ae, %dec_label_pc_805469b ], [ -1, %dec_label_pc_80546bb ]
  store i32 %v2_80546cb, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80546c7

; uselistorder directives
  uselistorder i32 %v6_80546ae, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80546c7, { 1, 0 }
}

define i32 @function_80546cd(i32 %arg1) local_unnamed_addr {
dec_label_pc_80546cd:
  %v0_80546ce = load i32, i32* @ebx, align 4
  %v0_80546d2 = load i32, i32* @global_var_8056158.84, align 8
  %v1_80546d2 = icmp eq i32 %v0_80546d2, 0
  %v1_80546dd = icmp eq i1 %v1_80546d2, false
  br i1 %v1_80546dd, label %dec_label_pc_80546f0, label %dec_label_pc_80546df

dec_label_pc_80546df:                             ; preds = %dec_label_pc_80546cd
  %v1_80546e4 = call i32 @function_80548ab(i32 0)
  %v2_80546ec = icmp slt i32 %v1_80546e4, 0
  br i1 %v2_80546ec, label %dec_label_pc_8054712, label %dec_label_pc_80546df.dec_label_pc_80546f0_crit_edge

dec_label_pc_80546df.dec_label_pc_80546f0_crit_edge: ; preds = %dec_label_pc_80546df
  %v0_80546f2.pre = load i32, i32* @global_var_8056158.84, align 8
  br label %dec_label_pc_80546f0

dec_label_pc_80546f0:                             ; preds = %dec_label_pc_80546df.dec_label_pc_80546f0_crit_edge, %dec_label_pc_80546cd
  %v0_8054700 = phi i32 [ %v0_80546f2.pre, %dec_label_pc_80546df.dec_label_pc_80546f0_crit_edge ], [ %v0_80546d2, %dec_label_pc_80546cd ]
  %v1_80546f0 = icmp eq i32 %arg1, 0
  %v1_80546f7 = icmp eq i1 %v1_80546f0, false
  br i1 %v1_80546f7, label %dec_label_pc_80546fd, label %dec_label_pc_80546f9

dec_label_pc_80546f9:                             ; preds = %dec_label_pc_80546f0
  br label %dec_label_pc_8054715

dec_label_pc_80546fd:                             ; preds = %dec_label_pc_80546f0
  store i32 %v0_8054700, i32* @ebx, align 4
  %v2_8054702 = add i32 %v0_8054700, %arg1
  %v1_8054706 = call i32 @function_80548ab(i32 %v2_8054702)
  %v2_805470e = icmp slt i32 %v1_8054706, 0
  %v1_8054710 = icmp eq i1 %v2_805470e, false
  br i1 %v1_8054710, label %dec_label_pc_80546fd.dec_label_pc_8054715_crit_edge, label %dec_label_pc_8054712

dec_label_pc_80546fd.dec_label_pc_8054715_crit_edge: ; preds = %dec_label_pc_80546fd
  %v0_8054715.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054715

dec_label_pc_8054712:                             ; preds = %dec_label_pc_80546fd, %dec_label_pc_80546df
  br label %dec_label_pc_8054715

dec_label_pc_8054715:                             ; preds = %dec_label_pc_80546fd.dec_label_pc_8054715_crit_edge, %dec_label_pc_80546f9, %dec_label_pc_8054712
  %v0_8054715 = phi i32 [ %v0_8054715.pre, %dec_label_pc_80546fd.dec_label_pc_8054715_crit_edge ], [ %v0_8054700, %dec_label_pc_80546f9 ], [ -1, %dec_label_pc_8054712 ]
  store i32 %v0_80546ce, i32* @ebx, align 4
  ret i32 %v0_8054715

; uselistorder directives
  uselistorder i32 %v0_8054700, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_80548ab, { 1, 0 }
  uselistorder label %dec_label_pc_8054715, { 2, 0, 1 }
}

define i32 @function_805471b(%tms* %arg1) local_unnamed_addr {
dec_label_pc_805471b:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805471b = load i32, i32* @edi, align 4
  store i32 %v0_805471b, i32* %stack_var_-4, align 4
  %v4_805471f = ptrtoint %tms* %arg1 to i32
  store i32 %v4_805471f, i32* %edi.global-to-local, align 4
  %v0_8054723 = load i32, i32* @ebx, align 4
  %v3_805472b = call i32 @times(%tms* %arg1)
  store i32 %v3_805472b, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_805472b, -4095
  br i1 %tmp9, label %dec_label_pc_8054743, label %dec_label_pc_8054737

dec_label_pc_8054737:                             ; preds = %dec_label_pc_805471b
  %v1_8054737 = call i32 @function_80526bd(i32 %v0_8054723)
  %v0_805473c = load i32, i32* %edi.global-to-local, align 4
  %v1_805473c = sub i32 0, %v0_805473c
  %v2_805473e = inttoptr i32 %v1_8054737 to i32*
  store i32 %v1_805473c, i32* %v2_805473e, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8054747.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054743

dec_label_pc_8054743:                             ; preds = %dec_label_pc_805471b, %dec_label_pc_8054737
  %v2_8054747 = phi i32 [ %v0_805471b, %dec_label_pc_805471b ], [ %v2_8054747.pre, %dec_label_pc_8054737 ]
  %v0_8054743 = phi i32 [ %v3_805472b, %dec_label_pc_805471b ], [ -1, %dec_label_pc_8054737 ]
  store i32 %v2_8054747, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054743

; uselistorder directives
  uselistorder i32 %v3_805472b, { 1, 0, 2 }
  uselistorder i32* @edi, { 11, 12, 13, 14, 15, 16, 108, 3, 109, 110, 111, 0, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 4, 5, 6, 7, 8, 9, 10, 130, 144, 145, 131, 132, 133, 134, 135, 136, 137, 138, 1, 139, 140, 141, 142, 143, 146, 147, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 148, 149, 27, 28, 29, 150, 151, 152, 153, 154, 155, 36, 76, 77, 78, 79, 107, 62, 80, 81, 82, 83, 37, 38, 39, 40, 41, 68, 69, 70, 57, 58, 59, 60, 33, 34, 35, 54, 55, 56, 63, 64, 65, 66, 51, 52, 53, 84, 85, 86, 75, 87, 88, 89, 71, 30, 31, 32, 72, 43, 42, 44, 45, 46, 47, 48, 49, 50, 61, 67, 73, 74, 90, 91, 92, 93, 94, 95, 2, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 178, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208 }
  uselistorder %tms* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054743, { 1, 0 }
}

define i32 @function_8054749(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054749:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805474a = load i32, i32* @ebx, align 4
  store i32 %v0_805474a, i32* %stack_var_-8, align 4
  %v4_805474e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805474e, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v3_805475b = inttoptr i32 %arg2 to i8*
  %v4_805475b = call i32 @function_805270e(i8* %v3_805475b, i32 0, i32 88)
  store i32 %v4_805475b, i32* %eax.global-to-local, align 4
  %v2_8054760 = load i16, i16* %arg1, align 2
  %v3_8054760 = zext i16 %v2_8054760 to i32
  store i32 %v3_8054760, i32* %eax.global-to-local, align 4
  %v0_8054763 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054763 = add i32 %v0_8054763, 4
  %v2_8054763 = inttoptr i32 %v1_8054763 to i32*
  store i32 0, i32* %v2_8054763, align 4
  %v0_805476a = load i32, i32* %eax.global-to-local, align 4
  %v1_805476a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805476a = inttoptr i32 %v1_805476a to i32*
  store i32 %v0_805476a, i32* %v2_805476a, align 4
  %v0_805476c = load i32, i32* %esi.global-to-local, align 4
  %v1_805476c = add i32 %v0_805476c, 4
  %v2_805476c = inttoptr i32 %v1_805476c to i32*
  %v3_805476c = load i32, i32* %v2_805476c, align 4
  store i32 %v3_805476c, i32* %eax.global-to-local, align 4
  %v1_805476f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805476f = add i32 %v1_805476f, 12
  %v3_805476f = inttoptr i32 %v2_805476f to i32*
  store i32 %v3_805476c, i32* %v3_805476f, align 4
  %v0_8054772 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054772 = add i32 %v0_8054772, 8
  %v2_8054772 = inttoptr i32 %v1_8054772 to i16*
  %v3_8054772 = load i16, i16* %v2_8054772, align 2
  %v4_8054772 = zext i16 %v3_8054772 to i32
  store i32 %v4_8054772, i32* %eax.global-to-local, align 4
  %v1_8054776 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054776 = add i32 %v1_8054776, 16
  %v3_8054776 = inttoptr i32 %v2_8054776 to i32*
  store i32 %v4_8054772, i32* %v3_8054776, align 4
  %v0_8054779 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054779 = add i32 %v0_8054779, 10
  %v2_8054779 = inttoptr i32 %v1_8054779 to i16*
  %v3_8054779 = load i16, i16* %v2_8054779, align 2
  %v4_8054779 = zext i16 %v3_8054779 to i32
  store i32 %v4_8054779, i32* %eax.global-to-local, align 4
  %v1_805477d = load i32, i32* %ebx.global-to-local, align 4
  %v2_805477d = add i32 %v1_805477d, 20
  %v3_805477d = inttoptr i32 %v2_805477d to i32*
  store i32 %v4_8054779, i32* %v3_805477d, align 4
  %v0_8054780 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054780 = add i32 %v0_8054780, 12
  %v2_8054780 = inttoptr i32 %v1_8054780 to i16*
  %v3_8054780 = load i16, i16* %v2_8054780, align 2
  %v4_8054780 = zext i16 %v3_8054780 to i32
  store i32 %v4_8054780, i32* %eax.global-to-local, align 4
  %v1_8054784 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054784 = add i32 %v1_8054784, 24
  %v3_8054784 = inttoptr i32 %v2_8054784 to i32*
  store i32 %v4_8054780, i32* %v3_8054784, align 4
  %v0_8054787 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054787 = add i32 %v0_8054787, 14
  %v2_8054787 = inttoptr i32 %v1_8054787 to i16*
  %v3_8054787 = load i16, i16* %v2_8054787, align 2
  %v4_8054787 = zext i16 %v3_8054787 to i32
  store i32 %v4_8054787, i32* %eax.global-to-local, align 4
  %v1_805478b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805478b = add i32 %v1_805478b, 28
  %v3_805478b = inttoptr i32 %v2_805478b to i32*
  store i32 %v4_8054787, i32* %v3_805478b, align 4
  %v0_805478e = load i32, i32* %esi.global-to-local, align 4
  %v1_805478e = add i32 %v0_805478e, 16
  %v2_805478e = inttoptr i32 %v1_805478e to i16*
  %v3_805478e = load i16, i16* %v2_805478e, align 2
  %v4_805478e = zext i16 %v3_805478e to i32
  store i32 %v4_805478e, i32* %eax.global-to-local, align 4
  %v0_8054792 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054792 = add i32 %v0_8054792, 36
  %v2_8054792 = inttoptr i32 %v1_8054792 to i32*
  store i32 0, i32* %v2_8054792, align 4
  %v0_8054799 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054799 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054799 = add i32 %v1_8054799, 32
  %v3_8054799 = inttoptr i32 %v2_8054799 to i32*
  store i32 %v0_8054799, i32* %v3_8054799, align 4
  %v0_805479c = load i32, i32* %esi.global-to-local, align 4
  %v1_805479c = add i32 %v0_805479c, 20
  %v2_805479c = inttoptr i32 %v1_805479c to i32*
  %v3_805479c = load i32, i32* %v2_805479c, align 4
  store i32 %v3_805479c, i32* %eax.global-to-local, align 4
  %v1_805479f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805479f = add i32 %v1_805479f, 44
  %v3_805479f = inttoptr i32 %v2_805479f to i32*
  store i32 %v3_805479c, i32* %v3_805479f, align 4
  %v0_80547a2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547a2 = add i32 %v0_80547a2, 24
  %v2_80547a2 = inttoptr i32 %v1_80547a2 to i32*
  %v3_80547a2 = load i32, i32* %v2_80547a2, align 4
  store i32 %v3_80547a2, i32* %eax.global-to-local, align 4
  %v1_80547a5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547a5 = add i32 %v1_80547a5, 48
  %v3_80547a5 = inttoptr i32 %v2_80547a5 to i32*
  store i32 %v3_80547a2, i32* %v3_80547a5, align 4
  %v0_80547a8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547a8 = add i32 %v0_80547a8, 28
  %v2_80547a8 = inttoptr i32 %v1_80547a8 to i32*
  %v3_80547a8 = load i32, i32* %v2_80547a8, align 4
  store i32 %v3_80547a8, i32* %eax.global-to-local, align 4
  %v1_80547ab = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547ab = add i32 %v1_80547ab, 52
  %v3_80547ab = inttoptr i32 %v2_80547ab to i32*
  store i32 %v3_80547a8, i32* %v3_80547ab, align 4
  %v0_80547ae = load i32, i32* %esi.global-to-local, align 4
  %v1_80547ae = add i32 %v0_80547ae, 32
  %v2_80547ae = inttoptr i32 %v1_80547ae to i32*
  %v3_80547ae = load i32, i32* %v2_80547ae, align 4
  store i32 %v3_80547ae, i32* %eax.global-to-local, align 4
  %v1_80547b1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547b1 = add i32 %v1_80547b1, 56
  %v3_80547b1 = inttoptr i32 %v2_80547b1 to i32*
  store i32 %v3_80547ae, i32* %v3_80547b1, align 4
  %v0_80547b4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547b4 = add i32 %v0_80547b4, 40
  %v2_80547b4 = inttoptr i32 %v1_80547b4 to i32*
  %v3_80547b4 = load i32, i32* %v2_80547b4, align 4
  store i32 %v3_80547b4, i32* %eax.global-to-local, align 4
  %v1_80547b7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547b7 = add i32 %v1_80547b7, 64
  %v3_80547b7 = inttoptr i32 %v2_80547b7 to i32*
  store i32 %v3_80547b4, i32* %v3_80547b7, align 4
  %v0_80547ba = load i32, i32* %esi.global-to-local, align 4
  %v1_80547ba = add i32 %v0_80547ba, 48
  %v2_80547ba = inttoptr i32 %v1_80547ba to i32*
  %v3_80547ba = load i32, i32* %v2_80547ba, align 4
  store i32 %v3_80547ba, i32* %eax.global-to-local, align 4
  %v1_80547bd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547bd = add i32 %v1_80547bd, 72
  %v3_80547bd = inttoptr i32 %v2_80547bd to i32*
  store i32 %v3_80547ba, i32* %v3_80547bd, align 4
  %v2_80547c3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80547c3, i32* @ebx, align 4
  ret i32 %v3_80547ba

; uselistorder directives
  uselistorder i32 72, { 3, 2, 4, 5, 6, 7, 0, 8, 9, 10, 11, 1 }
  uselistorder i32 64, { 7, 6, 3, 2, 1, 4, 0, 5 }
  uselistorder i32 40, { 7, 6, 1, 3, 2, 0, 8, 4, 9, 10, 11, 5 }
  uselistorder i32 56, { 3, 2, 0, 4, 5, 1 }
  uselistorder i32 52, { 3, 2, 7, 8, 4, 5, 6, 1, 0 }
  uselistorder i32 48, { 7, 8, 6, 3, 4, 0, 1, 9, 10, 2, 5 }
  uselistorder i32 32, { 39, 40, 45, 31, 36, 46, 47, 37, 38, 48, 1, 0, 2, 3, 35, 4, 5, 6, 7, 8, 32, 49, 42, 41, 10, 9, 12, 11, 13, 14, 34, 33, 43, 44, 50, 15, 16, 17, 18, 51, 19, 20, 52, 53, 22, 21, 24, 23, 25, 26, 54, 27, 28, 29, 30, 55 }
  uselistorder i32 36, { 5, 4, 0, 3, 1, 2, 6, 7, 8, 9, 10 }
  uselistorder i32 14, { 3, 0, 2, 1, 4, 5 }
  uselistorder i32 24, { 22, 23, 18, 19, 20, 55, 21, 24, 25, 1, 2, 13, 38, 0, 46, 14, 28, 41, 10, 8, 11, 47, 42, 12, 26, 27, 43, 15, 29, 30, 9, 31, 32, 33, 34, 35, 7, 36, 37, 6, 39, 40, 44, 45, 48, 49, 50, 51, 53, 54, 52, 5, 16, 4, 3, 56, 17 }
  uselistorder i32 20, { 19, 20, 7, 15, 16, 17, 32, 18, 21, 22, 23, 1, 2, 14, 0, 24, 11, 9, 12, 13, 10, 25, 26, 27, 28, 29, 30, 33, 31, 6, 4, 5, 3, 34, 35, 36, 8 }
  uselistorder i32 16, { 46, 47, 39, 40, 41, 42, 43, 44, 19, 35, 64, 3, 36, 37, 38, 0, 4, 65, 66, 6, 5, 67, 1, 7, 45, 48, 20, 23, 34, 11, 12, 30, 49, 50, 8, 52, 9, 54, 51, 31, 27, 25, 28, 29, 13, 26, 10, 53, 55, 32, 56, 22, 57, 59, 21, 58, 60, 61, 62, 68, 63, 69, 73, 15, 74, 75, 76, 77, 78, 79, 80, 70, 71, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 2, 91, 92, 93, 94, 95, 96, 97, 98, 18, 99, 16, 17, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 14, 122, 33, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 24 }
  uselistorder i32 8, { 91, 80, 81, 82, 83, 84, 85, 86, 87, 39, 103, 40, 104, 68, 41, 69, 106, 107, 108, 109, 110, 111, 112, 3, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 4, 72, 73, 74, 75, 76, 77, 78, 79, 123, 124, 125, 126, 127, 128, 45, 5, 46, 6, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 44, 146, 147, 7, 148, 149, 150, 151, 8, 152, 88, 89, 90, 92, 105, 153, 154, 155, 47, 97, 93, 94, 48, 95, 96, 70, 98, 99, 100, 101, 9, 102, 0, 1, 156, 36, 157, 14, 15, 13, 20, 158, 12, 18, 19, 49, 43, 50, 51, 16, 52, 17, 53, 2, 10, 37, 159, 21, 54, 22, 55, 23, 24, 25, 26, 56, 27, 28, 29, 57, 30, 58, 160, 59, 31, 60, 32, 61, 161, 62, 33, 63, 34, 64, 65, 66, 35, 11, 162, 38, 163, 67, 71, 42 }
  uselistorder i32 (i8*, i32, i32)* @function_805270e, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 88, { 0, 2, 1, 3 }
}

define i32 @function_80547c6(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80547c6:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80547c7 = load i32, i32* @esi, align 4
  store i32 %v0_80547c7, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_80547c8 = sdiv i32 %sext, 16777216
  store i32 %v4_80547c8, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_80547d2 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80547d2, i32* %edi.global-to-local, align 4
  %v2_80547d6 = udiv i32 %v4_80547c8, 4
  %v3_80547d9 = inttoptr i32 %arg2 to i8*
  %v4_80547d9 = bitcast i16* %arg1 to i8*
  %v5_80547d9 = call i8* @_memcpy(i8* %v4_80547d9, i8* %v3_80547d9, i32 %v2_80547d6)
  %v0_80547db = load i32, i32* %eax.global-to-local, align 4
  %v2_80547db = and i32 %v0_80547db, 2
  %v3_80547db = icmp eq i32 %v2_80547db, 0
  br i1 %v3_80547db, label %dec_label_pc_80547e1, label %dec_label_pc_80547df

dec_label_pc_80547df:                             ; preds = %dec_label_pc_80547c6
  %v0_80547df = load i32, i32* %esi.global-to-local, align 4
  %v1_80547df = inttoptr i32 %v0_80547df to i16*
  %v2_80547df = load i16, i16* %v1_80547df, align 2
  %v3_80547df = load i32, i32* %edi.global-to-local, align 4
  %v4_80547df = inttoptr i32 %v3_80547df to i16*
  store i16 %v2_80547df, i16* %v4_80547df, align 2
  %v5_80547df = load i32, i32* %edi.global-to-local, align 4
  %v6_80547df = load i32, i32* %esi.global-to-local, align 4
  %v7_80547df = load i1, i1* @df, align 1
  %v8_80547df = select i1 %v7_80547df, i32 -2, i32 2
  %v9_80547df = add i32 %v8_80547df, %v5_80547df
  %v10_80547df = add i32 %v8_80547df, %v6_80547df
  store i32 %v9_80547df, i32* %edi.global-to-local, align 4
  store i32 %v10_80547df, i32* %esi.global-to-local, align 4
  %v0_80547e1.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80547e1

dec_label_pc_80547e1:                             ; preds = %dec_label_pc_80547c6, %dec_label_pc_80547df
  %v0_80547e1 = phi i32 [ %v0_80547db, %dec_label_pc_80547c6 ], [ %v0_80547e1.pre, %dec_label_pc_80547df ]
  %v2_80547e1 = urem i32 %v0_80547e1, 2
  %v3_80547e1 = icmp eq i32 %v2_80547e1, 0
  br i1 %v3_80547e1, label %dec_label_pc_80547e6, label %dec_label_pc_80547e5

dec_label_pc_80547e5:                             ; preds = %dec_label_pc_80547e1
  %v0_80547e5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547e5 = inttoptr i32 %v0_80547e5 to i8*
  %v2_80547e5 = load i8, i8* %v1_80547e5, align 1
  %v3_80547e5 = load i32, i32* %edi.global-to-local, align 4
  %v4_80547e5 = inttoptr i32 %v3_80547e5 to i8*
  store i8 %v2_80547e5, i8* %v4_80547e5, align 1
  %v5_80547e5 = load i32, i32* %edi.global-to-local, align 4
  %v6_80547e5 = load i32, i32* %esi.global-to-local, align 4
  %v7_80547e5 = load i1, i1* @df, align 1
  %v8_80547e5 = select i1 %v7_80547e5, i32 -1, i32 1
  %v9_80547e5 = add i32 %v8_80547e5, %v5_80547e5
  %v10_80547e5 = add i32 %v8_80547e5, %v6_80547e5
  store i32 %v9_80547e5, i32* %edi.global-to-local, align 4
  store i32 %v10_80547e5, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80547e6

dec_label_pc_80547e6:                             ; preds = %dec_label_pc_80547e1, %dec_label_pc_80547e5
  store i32 %v4_80547d2, i32* %eax.global-to-local, align 4
  %v2_80547ea = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80547ea, i32* @esi, align 4
  ret i32 %v4_80547d2

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 -2, { 18, 19, 17, 20, 0, 1, 3, 6, 4, 2, 7, 8, 5, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* @df, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 4, { 3, 94, 95, 86, 87, 88, 89, 165, 166, 168, 169, 0, 170, 171, 172, 167, 45, 72, 173, 175, 176, 178, 181, 182, 183, 184, 185, 186, 4, 187, 188, 189, 190, 191, 1, 192, 179, 180, 75, 47, 76, 77, 78, 79, 80, 81, 82, 5, 84, 83, 193, 6, 194, 46, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 10, 215, 216, 218, 217, 7, 177, 174, 85, 50, 90, 91, 92, 93, 96, 219, 220, 51, 103, 104, 52, 105, 133, 134, 135, 136, 137, 138, 139, 140, 141, 106, 107, 108, 130, 131, 121, 122, 123, 100, 101, 102, 118, 119, 120, 125, 126, 127, 115, 116, 117, 144, 145, 97, 98, 99, 109, 110, 111, 112, 113, 114, 124, 128, 129, 132, 73, 146, 147, 148, 149, 150, 142, 143, 48, 156, 14, 151, 49, 152, 153, 154, 155, 221, 222, 157, 158, 159, 160, 161, 162, 163, 164, 9, 223, 224, 225, 41, 19, 20, 18, 25, 17, 23, 24, 226, 227, 228, 11, 53, 54, 55, 21, 56, 22, 57, 2, 229, 15, 230, 42, 12, 231, 26, 58, 27, 59, 28, 232, 29, 30, 31, 60, 32, 33, 34, 61, 35, 62, 63, 36, 64, 37, 65, 233, 66, 38, 67, 39, 68, 234, 69, 70, 235, 40, 236, 237, 238, 239, 241, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 16, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 43, 13, 8, 278, 44, 71, 279, 74 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 4, 5, 7, 6, 8, 9, 10, 11, 13, 12 }
  uselistorder i32* @esi, { 80, 81, 12, 13, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 38, 39, 82, 83, 11, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 87, 88, 89, 103, 107, 2, 108, 109, 110, 111, 112, 113, 114, 104, 105, 106, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 115, 116, 117, 118, 119, 120, 121, 0, 122, 123, 124, 125, 3, 126, 9, 127, 128, 129, 130, 27, 131, 132, 40, 4, 41, 42, 43, 44, 45, 101, 102, 133, 134, 46, 49, 50, 51, 52, 53, 54, 62, 68, 69, 55, 56, 57, 61, 48, 60, 63, 59, 70, 47, 58, 64, 65, 66, 67, 71, 72, 73, 74, 75, 135, 136, 137, 76, 77, 78, 8, 138, 139, 79, 140, 141, 5, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 6, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 10, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 7, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263 }
  uselistorder label %dec_label_pc_80547e6, { 1, 0 }
  uselistorder label %dec_label_pc_80547e1, { 1, 0 }
}

define i32 @function_80547ed(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80547ed:
  %v1_80547f8 = icmp eq i8* %arg1, null
  br i1 %v1_80547f8, label %dec_label_pc_8054879, label %dec_label_pc_80547fc

dec_label_pc_80547fc:                             ; preds = %dec_label_pc_80547ed
  %v4_80547f4 = ptrtoint i8* %arg1 to i32
  %v0_805480a.pre = load i32, i32* bitcast (i32** @global_var_8056088.85 to i32*), align 8
  br label %dec_label_pc_8054807

dec_label_pc_8054807:                             ; preds = %dec_label_pc_80547fc, %dec_label_pc_8054850
  %v0_8054850 = phi i32 [ 0, %dec_label_pc_80547fc ], [ %v2_8054856, %dec_label_pc_8054850 ]
  %v2_8054853 = phi i32 [ 1, %dec_label_pc_80547fc ], [ %v3_8054853, %dec_label_pc_8054850 ]
  %v0_8054807 = phi i32 [ %v4_80547f4, %dec_label_pc_80547fc ], [ %v0_80548074, %dec_label_pc_8054850 ]
  %v1_8054807 = inttoptr i32 %v0_8054807 to i8*
  %v2_8054807 = load i8, i8* %v1_8054807, align 1
  %v3_8054807 = sext i8 %v2_8054807 to i32
  %v2_8054810 = mul nsw i32 %v3_8054807, 2
  %v3_8054810 = add i32 %v2_8054810, %v0_805480a.pre
  %v4_8054810 = inttoptr i32 %v3_8054810 to i8*
  %v5_8054810 = load i8, i8* %v4_8054810, align 1
  %v6_8054810 = and i8 %v5_8054810, 8
  %v7_8054810 = icmp eq i8 %v6_8054810, 0
  br i1 %v7_8054810, label %dec_label_pc_8054879, label %dec_label_pc_8054817

dec_label_pc_8054817:                             ; preds = %dec_label_pc_8054807
  %v4_805482b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805482b

dec_label_pc_805481b:                             ; preds = %dec_label_pc_805482b
  %v3_805481b = mul i32 %v1_805481b, 10
  %v2_805481e = add i32 %v3_805481b, -48
  %v3_805481e = add i32 %v2_805481e, %v2_805482d
  %v1_8054822 = add i32 %v3_805481e, -255
  %v6_8054822 = sub i32 254, %v3_805481e
  %v7_8054822 = and i32 %v6_8054822, %v3_805481e
  %v8_8054822 = icmp slt i32 %v7_8054822, 0
  %v9_8054822 = icmp eq i32 %v1_8054822, 0
  %v10_8054822 = icmp slt i32 %v1_8054822, 0
  %v3_8054828 = icmp eq i1 %v10_8054822, %v8_8054822
  %v4_8054828 = icmp eq i1 %v9_8054822, false
  %v5_8054828 = and i1 %v4_8054828, %v3_8054828
  br i1 %v5_8054828, label %dec_label_pc_8054879, label %dec_label_pc_805482a

dec_label_pc_805482a:                             ; preds = %dec_label_pc_805481b
  %v1_805482a = add i32 %v0_805482a, 1
  br label %dec_label_pc_805482b

dec_label_pc_805482b:                             ; preds = %dec_label_pc_8054817, %dec_label_pc_805482a
  %v1_805481b = phi i32 [ 0, %dec_label_pc_8054817 ], [ %v3_805481e, %dec_label_pc_805482a ]
  %v4_805482b = phi i32 [ %v4_805482b.pre, %dec_label_pc_8054817 ], [ %v6_805482b, %dec_label_pc_805482a ]
  %v0_805482a = phi i32 [ %v0_8054807, %dec_label_pc_8054817 ], [ %v1_805482a, %dec_label_pc_805482a ]
  %v1_805482b = inttoptr i32 %v0_805482a to i8*
  %v2_805482b = load i8, i8* %v1_805482b, align 1
  %v3_805482b = zext i8 %v2_805482b to i32
  %v5_805482b = and i32 %v4_805482b, -256
  %v6_805482b = or i32 %v3_805482b, %v5_805482b
  store i32 %v6_805482b, i32* @edx, align 4
  %v2_805482d = sext i8 %v2_805482b to i32
  %v2_8054830 = mul nsw i32 %v2_805482d, 2
  %v3_8054830 = add i32 %v2_8054830, %v0_805480a.pre
  %v4_8054830 = inttoptr i32 %v3_8054830 to i16*
  %v5_8054830 = load i16, i16* %v4_8054830, align 2
  %v2_8054835 = and i16 %v5_8054830, 8
  %v3_8054835 = icmp eq i16 %v2_8054835, 0
  %v1_8054837 = icmp eq i1 %v3_8054835, false
  br i1 %v1_8054837, label %dec_label_pc_805481b, label %dec_label_pc_8054839

dec_label_pc_8054839:                             ; preds = %dec_label_pc_805482b
  %v8_8054839 = sub nsw i32 2, %v2_8054853
  %v9_8054839 = and i32 %v8_8054839, %v2_8054853
  %v10_8054839 = icmp slt i32 %v9_8054839, 0
  %v11_8054839 = icmp eq i32 %v2_8054853, 3
  %v12_8054839 = icmp slt i32 %v2_8054853, 3
  %v3_805483d = icmp eq i1 %v12_8054839, %v10_8054839
  %v4_805483d = icmp eq i1 %v11_8054839, false
  %v5_805483d = and i1 %v4_805483d, %v3_805483d
  br i1 %v5_805483d, label %dec_label_pc_8054847, label %dec_label_pc_805483f

dec_label_pc_805483f:                             ; preds = %dec_label_pc_8054839
  %v10_805483f = icmp eq i8 %v2_805482b, 46
  %v1_8054842 = icmp eq i1 %v10_805483f, false
  br i1 %v1_8054842, label %dec_label_pc_8054879, label %dec_label_pc_8054844

dec_label_pc_8054844:                             ; preds = %dec_label_pc_805483f
  %v1_8054844 = add i32 %v0_805482a, 1
  br label %dec_label_pc_8054850

dec_label_pc_8054847:                             ; preds = %dec_label_pc_8054839
  %v1_8054847 = add i32 %v0_805482a, 1
  %v4_8054848 = icmp eq i8 %v2_805482b, 0
  br i1 %v4_8054848, label %dec_label_pc_8054850, label %dec_label_pc_805484c

dec_label_pc_805484c:                             ; preds = %dec_label_pc_8054847
  %v2_805484c = and i16 %v5_8054830, 32
  %v3_805484c = icmp eq i16 %v2_805484c, 0
  br i1 %v3_805484c, label %dec_label_pc_8054879, label %dec_label_pc_8054850

dec_label_pc_8054850:                             ; preds = %dec_label_pc_805484c, %dec_label_pc_8054847, %dec_label_pc_8054844
  %v0_80548074 = phi i32 [ %v1_8054847, %dec_label_pc_805484c ], [ %v1_8054847, %dec_label_pc_8054847 ], [ %v1_8054844, %dec_label_pc_8054844 ]
  %v2_8054850 = mul i32 %v0_8054850, 256
  %v3_8054853 = add nuw nsw i32 %v2_8054853, 1
  %v2_8054856 = or i32 %v1_805481b, %v2_8054850
  %v7_805485c = icmp sgt i32 %v2_8054853, 3
  br i1 %v7_805485c, label %dec_label_pc_805485e, label %dec_label_pc_8054807

dec_label_pc_805485e:                             ; preds = %dec_label_pc_8054850
  %v4_8054863 = icmp eq i32 %arg2, 0
  br i1 %v4_8054863, label %dec_label_pc_805487b, label %dec_label_pc_805486a

dec_label_pc_805486a:                             ; preds = %dec_label_pc_805485e
  %v1_805486e = call i32 @llvm.bswap.i32(i32 %v2_8054856)
  %v2_8054870 = inttoptr i32 %arg2 to i32*
  store i32 %v1_805486e, i32* %v2_8054870, align 4
  br label %dec_label_pc_805487b

dec_label_pc_8054879:                             ; preds = %dec_label_pc_805484c, %dec_label_pc_805483f, %dec_label_pc_8054807, %dec_label_pc_805481b, %dec_label_pc_80547ed
  br label %dec_label_pc_805487b

dec_label_pc_805487b:                             ; preds = %dec_label_pc_805485e, %dec_label_pc_805486a, %dec_label_pc_8054879
  %v0_8054880 = phi i32 [ 1, %dec_label_pc_805485e ], [ 1, %dec_label_pc_805486a ], [ 0, %dec_label_pc_8054879 ]
  ret i32 %v0_8054880

; uselistorder directives
  uselistorder i32 %v2_805482d, { 1, 0 }
  uselistorder i32 %v6_805482b, { 1, 0 }
  uselistorder i8 %v2_805482b, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805482a, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8054822, { 1, 0 }
  uselistorder i32 %v3_805481e, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8054853, { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 256, { 1, 16, 17, 2, 3, 0, 4, 5, 18, 14, 6, 7, 9, 8, 15, 10, 11, 12, 13 }
  uselistorder i32 3, { 1, 2, 0, 15, 10, 23, 6, 7, 9, 3, 4, 16, 17, 18, 19, 20, 21, 22, 11, 8, 5, 24, 13, 14, 25, 12 }
  uselistorder i16 0, { 0, 1, 6, 7, 4, 5, 2, 3 }
  uselistorder i32 -256, { 2, 4, 5, 29, 30, 31, 3, 32, 33, 34, 35, 36, 37, 38, 9, 10, 25, 16, 18, 26, 20, 21, 6, 7, 8, 11, 12, 13, 14, 15, 17, 19, 22, 23, 24, 27, 28, 39, 40, 41, 42, 0, 43, 44, 45, 1, 46, 47, 48, 49, 50 }
  uselistorder i32 10, { 1, 8, 7, 5, 11, 3, 0, 10, 9, 6, 4, 2, 12, 13, 14 }
  uselistorder i8 0, { 17, 18, 30, 31, 32, 33, 34, 35, 16, 36, 37, 38, 39, 40, 41, 5, 42, 19, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 2, 57, 58, 59, 60, 20, 24, 25, 26, 22, 23, 21, 27, 0, 28, 29, 6, 7, 61, 62, 3, 64, 65, 63, 66, 67, 68, 69, 4, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 14, 90, 1, 91, 8, 15, 9, 10, 11, 12, 13 }
  uselistorder i32 2, { 37, 39, 40, 1, 64, 15, 65, 16, 34, 0, 22, 31, 23, 32, 24, 33, 2, 3, 4, 38, 5, 6, 7, 17, 18, 66, 8, 9, 20, 10, 25, 19, 21, 28, 26, 27, 13, 12, 43, 44, 45, 46, 47, 61, 51, 42, 50, 52, 49, 53, 54, 55, 56, 57, 58, 41, 48, 59, 60, 11, 35, 30, 29, 14, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 36 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805487b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054879, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805482b, { 1, 0 }
  uselistorder label %dec_label_pc_8054807, { 1, 0 }
}

define i32 @function_8054881(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054881:
  %v0_8054884 = call i32 @function_8052207()
  %v0_8054889 = load i32, i32* @edx, align 4
  %v4_8054890 = call i32 @function_8052292(i32 %v0_8054884, i32 %arg1, i32 %v0_8054889, i32 %v0_8054889)
  ret i32 %v4_8054890

; uselistorder directives
  uselistorder i32* @edx, { 31, 17, 1, 18, 33, 35, 36, 38, 37, 34, 42, 43, 2, 44, 45, 3, 46, 41, 14, 4, 15, 47, 5, 48, 40, 16, 19, 20, 39, 30, 32, 6, 49, 7, 50, 21, 11, 23, 24, 25, 22, 12, 10, 9, 8, 26, 13, 27, 29, 28, 0, 51, 52, 53, 54, 55, 56, 57 }
}

define i32 @function_8054899() local_unnamed_addr {
dec_label_pc_8054899:
  %v0_8054899 = load i32, i32* @eax, align 4
  %v1_8054899 = add i32 %v0_8054899, 28
  %v2_8054899 = inttoptr i32 %v1_8054899 to i32*
  %v3_8054899 = load i32, i32* %v2_8054899, align 4
  store i32 %v3_8054899, i32* @global_var_8056778.86, align 8
  %v1_80548a2 = add i32 %v0_8054899, 44
  %v2_80548a2 = inttoptr i32 %v1_80548a2 to i32*
  %v3_80548a2 = load i32, i32* %v2_80548a2, align 4
  store i32 %v3_80548a2, i32* @global_var_805677c.87, align 4
  ret i32 %v3_80548a2

; uselistorder directives
  uselistorder i32 44, { 4, 3, 2, 8, 10, 9, 5, 6, 7, 11, 12, 13, 14, 0, 1 }
  uselistorder i32 28, { 28, 16, 17, 13, 14, 15, 29, 4, 5, 11, 0, 8, 6, 9, 10, 18, 19, 20, 21, 7, 22, 23, 24, 25, 26, 27, 30, 3, 12, 2, 1, 31, 32, 33 }
}

define i32 @function_80548ab(i32 %arg1) local_unnamed_addr {
dec_label_pc_80548ab:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80548ab = load i32, i32* @ebx, align 4
  store i32 %v0_80548ab, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_80548be = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80548be, i32* @global_var_8056158.84, align 8
  %v7_80548c9 = icmp ult i32 %v1_80548be, %arg1
  %v1_80548cb = icmp eq i1 %v7_80548c9, false
  br i1 %v1_80548cb, label %dec_label_pc_80548db, label %dec_label_pc_80548cd

dec_label_pc_80548cd:                             ; preds = %dec_label_pc_80548ab
  %v1_80548cd = call i32 @function_80526bd(i32 %v0_80548ab)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80548d5 = inttoptr i32 %v1_80548cd to i32*
  store i32 12, i32* %v1_80548d5, align 4
  %v0_80548db.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_80548df.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80548db

dec_label_pc_80548db:                             ; preds = %dec_label_pc_80548ab, %dec_label_pc_80548cd
  %v2_80548df = phi i32 [ %v0_80548ab, %dec_label_pc_80548ab ], [ %v2_80548df.pre, %dec_label_pc_80548cd ]
  %v0_80548db = phi i32 [ 0, %dec_label_pc_80548ab ], [ %v0_80548db.pre, %dec_label_pc_80548cd ]
  store i32 %v2_80548df, i32* @ebx, align 4
  ret i32 %v0_80548db

; uselistorder directives
  uselistorder i32 %v1_80548be, { 1, 0 }
  uselistorder i32 12, { 100, 70, 71, 65, 66, 67, 58, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 59, 60, 61, 62, 63, 64, 116, 134, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 56, 133, 57, 68, 69, 72, 73, 74, 77, 78, 88, 99, 89, 90, 91, 79, 84, 76, 83, 85, 86, 82, 92, 75, 80, 81, 87, 93, 54, 94, 96, 97, 27, 95, 98, 0, 1, 25, 9, 8, 7, 15, 52, 20, 31, 32, 30, 16, 37, 29, 35, 36, 17, 135, 6, 33, 34, 3, 5, 28, 136, 53, 137, 141, 138, 139, 140, 38, 39, 40, 41, 18, 19, 42, 43, 44, 142, 45, 46, 47, 48, 49, 50, 51, 4, 21, 22, 10, 11, 12, 13, 14, 143, 23, 2, 24, 144, 145, 26, 55 }
  uselistorder i32* @global_var_8056158.84, { 1, 0, 2 }
  uselistorder i32 45, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80548db, { 1, 0 }
}

define i32 @function_80548e1() local_unnamed_addr {
dec_label_pc_80548e1:
  %v0_80548e4 = load i32, i32* @eax, align 4
  %v1_80548e6 = sub i32 0, %v0_80548e4
  %v1_80548e8 = call i32 @function_80526bd(i32 ptrtoint (i32* @0 to i32))
  %v2_80548ed = inttoptr i32 %v1_80548e8 to i32*
  store i32 %v1_80548e6, i32* %v2_80548ed, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 (i32)* @function_80526bd, { 30, 29, 46, 26, 25, 50, 45, 24, 51, 23, 22, 21, 44, 1, 0, 52, 20, 19, 18, 16, 15, 14, 49, 3, 11, 4, 48, 47, 43, 42, 41, 40, 10, 13, 12, 39, 9, 38, 37, 36, 17, 28, 35, 34, 27, 32, 8, 7, 6, 33, 31, 5, 2 }
  uselistorder i32* @0, { 2, 3, 4, 5, 6, 7, 0, 8, 9, 10, 11, 12, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 8, 7, 31, 32, 17, 15, 18, 9, 10, 11, 19, 33, 34, 35, 36, 16, 14, 12, 13, 37, 20, 40, 39, 113, 38, 74, 75, 96, 97, 98, 76, 77, 78, 79, 73, 88, 89, 90, 87, 81, 82, 83, 84, 85, 86, 80, 41, 99, 100, 101, 102, 103, 91, 92, 93, 94, 95, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119 }
}

define i32 @function_8054900() local_unnamed_addr {
dec_label_pc_8054900:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805490c = load i32, i32* @global_var_8056000.71, align 8192
  %v10_8054911 = icmp eq i32 %v0_805490c, -1
  br i1 %v10_8054911, label %dec_label_pc_8054922, label %dec_label_pc_8054916.preheader

dec_label_pc_8054916.preheader:                   ; preds = %dec_label_pc_8054900
  br label %dec_label_pc_8054916

dec_label_pc_8054916:                             ; preds = %dec_label_pc_8054916.preheader, %dec_label_pc_8054916
  %v4_8054919 = phi i32 [ %v0_805490c, %dec_label_pc_8054916.preheader ], [ %v2_805491b, %dec_label_pc_8054916 ]
  %v0_8054916 = phi i32 [ ptrtoint (i32* @global_var_8056000.71 to i32), %dec_label_pc_8054916.preheader ], [ %v1_8054916, %dec_label_pc_8054916 ]
  %v1_8054916 = add i32 %v0_8054916, -4
  call void @__pseudo_call(i32 %v4_8054919)
  %v1_805491b = inttoptr i32 %v1_8054916 to i32*
  %v2_805491b = load i32, i32* %v1_805491b, align 4
  %v10_805491d = icmp eq i32 %v2_805491b, -1
  %v1_8054920 = icmp eq i1 %v10_805491d, false
  br i1 %v1_8054920, label %dec_label_pc_8054916, label %dec_label_pc_8054922.loopexit

dec_label_pc_8054922.loopexit:                    ; preds = %dec_label_pc_8054916
  %v2_8054922.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054922

dec_label_pc_8054922:                             ; preds = %dec_label_pc_8054922.loopexit, %dec_label_pc_8054900
  %v2_8054922 = phi i32 [ %v2_8054922.pre, %dec_label_pc_8054922.loopexit ], [ %tmp6, %dec_label_pc_8054900 ]
  ret i32 %v2_8054922

; uselistorder directives
  uselistorder i32 %v0_805490c, { 1, 0 }
  uselistorder i1 false, { 93, 94, 37, 38, 40, 39, 95, 96, 97, 42, 43, 98, 101, 102, 103, 104, 105, 107, 10, 108, 109, 106, 100, 99, 25, 110, 111, 112, 1, 114, 115, 0, 116, 117, 118, 119, 3, 120, 121, 122, 123, 2, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 124, 26, 27, 28, 29, 30, 31, 32, 33, 34, 137, 138, 139, 140, 141, 142, 143, 144, 145, 9, 147, 146, 151, 148, 149, 150, 11, 152, 153, 113, 35, 4, 36, 41, 154, 155, 13, 44, 45, 46, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 14, 166, 167, 168, 169, 5, 170, 171, 172, 49, 62, 57, 16, 58, 67, 68, 69, 63, 64, 65, 47, 48, 50, 51, 52, 53, 54, 18, 55, 56, 59, 17, 60, 61, 66, 70, 71, 19, 72, 20, 92, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 86, 89, 87, 88, 90, 173, 174, 175, 176, 177, 6, 179, 180, 181, 178, 182, 183, 184, 185, 186, 187, 7, 188, 189, 190, 191, 15, 192, 193, 194, 195, 196, 197, 198, 22, 21, 199, 23, 200, 201, 202, 203, 8, 24, 12, 204 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 6, 2, 0 }
  uselistorder i32 -4, { 15, 16, 17, 18, 95, 96, 97, 98, 11, 99, 3, 94, 19, 90, 12, 91, 92, 93, 13, 0, 9, 10, 100, 101, 102, 103, 104, 105, 106, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 7, 50, 8, 51, 52, 53, 2, 6, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 4, 5, 82, 83, 84, 85, 86, 87, 88, 1, 89 }
  uselistorder i32 ptrtoint (i32* @global_var_8056000.71 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, { 19, 20, 0, 98, 177, 58, 99, 59, 60, 100, 61, 101, 62, 102, 63, 103, 64, 104, 65, 105, 66, 106, 67, 107, 68, 108, 17, 18, 8, 7, 69, 70, 109, 71, 110, 72, 111, 21, 1, 112, 57, 73, 74, 113, 114, 115, 10, 116, 9, 117, 178, 12, 13, 118, 11, 119, 22, 179, 23, 120, 180, 26, 25, 27, 28, 15, 29, 75, 30, 121, 24, 181, 6, 122, 123, 95, 124, 14, 31, 2, 76, 168, 169, 182, 183, 77, 170, 32, 78, 125, 79, 126, 55, 56, 127, 80, 128, 81, 129, 82, 130, 83, 131, 84, 132, 85, 133, 86, 134, 87, 135, 88, 136, 89, 137, 90, 138, 91, 139, 92, 140, 93, 141, 33, 142, 143, 3, 4, 5, 144, 34, 94, 184, 96, 35, 145, 173, 52, 146, 174, 171, 39, 147, 148, 175, 36, 149, 150, 151, 152, 153, 172, 154, 155, 156, 157, 158, 159, 160, 38, 54, 161, 162, 163, 37, 53, 164, 165, 166, 40, 167, 176, 16, 41, 185, 186, 187, 42, 188, 189, 48, 43, 190, 44, 45, 46, 47, 191, 49, 192, 50, 51, 193, 194, 97 }
  uselistorder i32 1, { 222, 223, 62, 136, 137, 337, 338, 339, 340, 138, 376, 224, 13, 12, 14, 225, 5, 4, 3, 226, 6, 227, 51, 228, 22, 229, 67, 230, 77, 231, 110, 232, 54, 233, 106, 234, 105, 235, 107, 236, 237, 69, 68, 70, 155, 49, 239, 238, 240, 63, 241, 61, 243, 242, 55, 244, 248, 247, 246, 245, 64, 377, 378, 379, 251, 250, 249, 66, 65, 139, 252, 255, 254, 253, 108, 140, 214, 331, 125, 261, 260, 259, 258, 257, 256, 96, 97, 156, 262, 215, 265, 264, 263, 82, 157, 381, 382, 383, 266, 78, 79, 384, 385, 141, 386, 387, 388, 18, 16, 17, 216, 380, 158, 83, 84, 85, 86, 159, 142, 333, 334, 335, 336, 269, 268, 267, 10, 9, 8, 11, 160, 270, 19, 20, 162, 389, 390, 391, 392, 393, 394, 395, 396, 397, 161, 398, 399, 400, 401, 402, 143, 403, 404, 111, 144, 405, 406, 407, 408, 145, 146, 409, 410, 411, 273, 272, 271, 38, 39, 40, 42, 41, 147, 148, 274, 149, 150, 163, 278, 277, 276, 275, 47, 164, 217, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 341, 342, 292, 32, 31, 30, 293, 294, 165, 166, 295, 296, 151, 298, 297, 76, 167, 299, 300, 15, 301, 95, 302, 75, 303, 80, 304, 94, 305, 37, 306, 7, 307, 48, 21, 309, 308, 52, 310, 50, 311, 87, 313, 312, 109, 314, 81, 315, 46, 316, 53, 45, 412, 413, 414, 415, 213, 317, 92, 88, 90, 89, 91, 93, 416, 417, 112, 113, 418, 419, 0, 420, 421, 422, 423, 424, 168, 425, 169, 426, 319, 318, 99, 427, 152, 205, 428, 429, 153, 430, 431, 170, 432, 115, 43, 44, 433, 434, 435, 320, 34, 35, 33, 36, 436, 437, 219, 56, 58, 57, 60, 59, 438, 220, 71, 73, 72, 74, 345, 346, 347, 348, 349, 350, 359, 360, 171, 361, 362, 187, 188, 175, 356, 181, 344, 177, 355, 173, 357, 183, 354, 363, 185, 343, 186, 182, 351, 352, 179, 353, 180, 184, 178, 176, 174, 172, 358, 364, 189, 365, 366, 375, 367, 368, 369, 370, 373, 190, 374, 101, 103, 102, 100, 104, 371, 372, 218, 322, 321, 98, 1, 206, 2, 126, 127, 439, 440, 441, 442, 443, 116, 117, 444, 445, 446, 447, 448, 194, 119, 120, 193, 121, 197, 122, 449, 450, 195, 123, 124, 196, 451, 118, 114, 452, 453, 454, 455, 456, 207, 128, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 201, 135, 134, 467, 208, 129, 468, 469, 470, 471, 472, 198, 473, 474, 199, 475, 209, 130, 476, 210, 131, 477, 478, 211, 132, 479, 480, 212, 133, 481, 482, 483, 484, 485, 200, 486, 488, 489, 487, 202, 490, 491, 492, 493, 191, 192, 494, 495, 496, 497, 203, 332, 204, 498, 154, 329, 328, 327, 326, 325, 324, 323, 221, 29, 25, 27, 26, 23, 24, 28, 330 }
  uselistorder label %dec_label_pc_8054916, { 1, 0 }
}

define i32 @function_8054926() local_unnamed_addr {
entry:
  %v0_8054929 = load i32, i32* @ebx, align 4
  %v1_805492a = call i32 @function_80480b0(i32 %v0_8054929)
  store i32 %v1_805492a, i32* @eax, align 4
  %v0_8054935 = call i32 @function_80480c0()
  ret i32 %v0_8054935

; uselistorder directives
  uselistorder i32* @eax, { 7, 32, 33, 35, 36, 37, 38, 40, 10, 41, 0, 39, 4, 6, 34, 42, 44, 45, 43, 17, 18, 46, 52, 47, 48, 50, 51, 49, 1, 19, 20, 8, 2, 9, 11, 22, 23, 21, 27, 28, 29, 24, 25, 26, 53, 12, 13, 14, 54, 55, 56, 57, 58, 15, 16, 59, 30, 31, 3, 5 }
  uselistorder i32 (i32)* @function_80480b0, { 1, 0 }
  uselistorder i32 0, { 388, 47, 206, 48, 268, 269, 49, 270, 271, 272, 50, 108, 109, 281, 282, 51, 274, 391, 392, 393, 126, 394, 395, 396, 257, 275, 276, 397, 255, 254, 398, 399, 400, 256, 277, 278, 283, 284, 252, 401, 402, 403, 52, 404, 110, 409, 410, 8, 53, 207, 9, 208, 209, 412, 413, 102, 414, 54, 193, 55, 127, 128, 0, 405, 406, 407, 56, 253, 201, 57, 210, 415, 1, 111, 112, 58, 416, 417, 59, 60, 419, 418, 23, 24, 420, 423, 129, 194, 424, 426, 425, 21, 22, 427, 408, 61, 428, 27, 195, 62, 113, 430, 433, 432, 25, 26, 436, 437, 438, 439, 440, 114, 441, 442, 443, 130, 434, 131, 435, 132, 211, 258, 44, 259, 115, 212, 260, 444, 445, 446, 447, 448, 449, 450, 451, 452, 116, 117, 453, 213, 465, 214, 215, 133, 196, 216, 134, 197, 63, 217, 454, 455, 64, 65, 135, 198, 46, 456, 457, 458, 66, 67, 136, 199, 45, 459, 103, 460, 37, 461, 462, 464, 218, 463, 2, 431, 421, 422, 261, 262, 264, 263, 28, 29, 3, 118, 265, 266, 267, 273, 279, 280, 219, 220, 285, 286, 287, 288, 289, 290, 291, 292, 221, 293, 466, 429, 294, 467, 295, 296, 297, 411, 119, 389, 298, 299, 390, 303, 468, 469, 470, 222, 471, 6, 68, 223, 472, 137, 473, 474, 120, 475, 10, 30, 38, 11, 39, 12, 476, 4, 31, 40, 13, 41, 14, 70, 69, 42, 15, 71, 72, 300, 203, 477, 478, 479, 480, 481, 482, 75, 74, 73, 483, 125, 77, 76, 78, 224, 484, 225, 226, 7, 79, 227, 43, 16, 80, 228, 81, 229, 230, 231, 304, 305, 306, 308, 309, 326, 376, 327, 83, 232, 328, 84, 233, 329, 330, 331, 332, 310, 234, 235, 333, 334, 318, 324, 325, 301, 302, 319, 320, 321, 311, 312, 313, 314, 315, 316, 317, 322, 323, 17, 105, 106, 101, 236, 82, 237, 335, 104, 336, 337, 85, 373, 374, 375, 238, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 204, 239, 350, 240, 86, 241, 353, 354, 355, 356, 357, 121, 122, 358, 359, 360, 242, 307, 368, 369, 370, 371, 361, 362, 363, 367, 372, 87, 123, 351, 352, 88, 200, 89, 364, 365, 366, 18, 90, 205, 19, 138, 91, 92, 377, 378, 379, 380, 381, 382, 485, 486, 383, 384, 487, 488, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 489, 490, 491, 492, 493, 494, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 35, 550, 551, 552, 553, 554, 555, 556, 93, 243, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 244, 595, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 94, 245, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 139, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 95, 246, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 96, 247, 720, 721, 202, 722, 723, 248, 724, 725, 726, 97, 249, 727, 36, 728, 20, 32, 33, 34, 729, 730, 731, 732, 733, 734, 735, 736, 124, 98, 99, 250, 5, 385, 386, 387, 100, 251, 107, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 737, 738, 739, 740, 741, 742, 743, 744 }
  uselistorder i32* @ebx, { 17, 164, 165, 68, 69, 42, 170, 1, 171, 172, 173, 174, 20, 21, 175, 19, 176, 177, 178, 179, 180, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 2, 71, 72, 73, 18, 181, 182, 183, 184, 185, 186, 187, 188, 189, 15, 16, 198, 199, 200, 201, 13, 3, 12, 192, 195, 196, 197, 190, 202, 203, 204, 205, 206, 207, 208, 209, 191, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 4, 231, 232, 217, 218, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 5, 33, 34, 35, 36, 37, 38, 39, 233, 259, 260, 261, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 14, 244, 245, 246, 247, 248, 6, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 212, 213, 40, 41, 61, 62, 63, 64, 65, 66, 67, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 262, 263, 210, 211, 91, 264, 265, 92, 93, 94, 193, 194, 166, 167, 95, 96, 168, 169, 100, 101, 266, 267, 268, 269, 270, 97, 271, 272, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 132, 8, 133, 134, 135, 136, 112, 120, 121, 116, 99, 115, 117, 114, 122, 123, 124, 98, 125, 113, 118, 119, 126, 127, 128, 129, 130, 131, 137, 138, 139, 140, 141, 142, 152, 153, 154, 7, 155, 143, 144, 145, 146, 147, 148, 149, 150, 151, 273, 274, 275, 156, 157, 158, 159, 276, 277, 278, 279, 9, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 280, 281, 282, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 0, 312, 313, 314, 315, 316, 11, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 10, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 160, 161, 162, 163 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @getppid(i32) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32* @mremap(i32*, i32, i32, i32, ...) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_7() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_8() local_unnamed_addr

declare %tms* @__decompiler_undefined_function_9() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
